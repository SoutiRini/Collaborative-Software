[{"count": 0, "tags": [], "creator": "wmoore@stanford.edu", "attachment_id": null, "text": "The documentation states that the string returned by getRequestURI() is not\ndecoded by the container. However in Tomcat 5.5.9 it returns a partially decoded\nURI, i.e, %xx is decoded but '+'=>' ' is not. IIRC this used to work in Tomcat\n4. I'm expecting an encoded URI and when I decode the partially decoded one of\ncourse I mangle any real '+' characters.\n\ngetRequestURL seems to return the unmangled string so I have a workaround but\nthis behavior is inconsistent with the documentation and at least the Servlet\n2.3 spec.", "id": 87816, "time": "2006-04-12T02:59:34Z", "bug_id": 39278, "creation_time": "2006-04-12T02:59:34Z", "is_private": false}, {"count": 1, "tags": [], "creator": "yoavs@computer.org", "text": "I agree the getRequestURI should return an undecoded URI: that's clear from the\nservlet spec.  By the way, Servlet Spec v2.4, not v2.3, is the relevant one for\nTomcat 5.\n\nHowever, it's fairly easy to test that Tomcat 5.5.16 (the latest stable release\nat the time of this writing, I haven't bothered testing others) works just fine.\n Grab the distro, unpack it, start the server, go to a URL like\nhttp://localhost:8080/servlets-examples/servlet/RequestInfoExample/blah%20Junk/something,\nand look at the reported request URI.  (The RequestInfoExample is a sample\nservlet that ships with Tomcat by default).", "id": 88088, "attachment_id": null, "bug_id": 39278, "creation_time": "2006-04-14T18:51:12Z", "time": "2006-04-14T18:51:12Z", "is_private": false}, {"count": 2, "tags": [], "text": "Verified.\n\nhttp://localhost:8080/servlets-examples/servlet/RequestInfoExample/blah+Junk/something\n\nreturns\n\nRequest URI:\nhttp://localhost:8080/servlets-examples/servlet/RequestInfoExample/blah+Junk/something\n\nand\n\nPathInfo: /blah+Junk/something\n\ninstead of\n\nPageInfo: /blah Junk/something\n\nThis is kinda bad, as it makes it programmatically impossible to figure out\nwhether a given \"+\" is actually a space or a decoded \"%2B\" (the + sign).\n\nUneducated guess, based on a quick look: It seems to me that this is because\nUDecoder only decodes + signs in parameters, not in the path.", "attachment_id": null, "id": 88172, "creation_time": "2006-04-17T20:16:27Z", "time": "2006-04-17T20:16:27Z", "creator": "jalkanen@ecyrd.com", "bug_id": 39278, "is_private": false}, {"count": 3, "tags": [], "creator": "jalkanen@ecyrd.com", "attachment_id": null, "id": 88173, "time": "2006-04-17T20:20:42Z", "bug_id": 39278, "creation_time": "2006-04-17T20:20:42Z", "is_private": false, "text": "This behaviour manifests in 5.5.12 and 5.5.16, at least."}, {"count": 4, "tags": [], "text": "After posting this bug I did some additional reading of RFC 3986 and the HTML\nspec. I was using the Java classes java.net.URLEncoder/URLDecoder to\nencode/decode URLs. However, what they actually do is\napplication/x-www-form-urlencoded encoding which encodes ' ' as '+' and then %\nencodes other characters. RFC 3986, which defines the % encoding does not\nspecify this blank to plus encoding nor did the earlier RFCs as far as I can tell.\n\nThus the correct (though confusing) behavior seems to be to encode blanks as %20\nin the path part of the URI but to encode them as + in the query string. If\nsomeone has a different reading of the spec's please let us know.\n", "attachment_id": null, "bug_id": 39278, "id": 88177, "time": "2006-04-17T22:22:46Z", "creator": "wmoore@stanford.edu", "creation_time": "2006-04-17T22:22:46Z", "is_private": false}, {"count": 5, "tags": [], "creator": "markt@apache.org", "text": "The current behaviour is correct and is spec compliant.", "id": 104671, "time": "2007-06-24T14:29:48Z", "bug_id": 39278, "creation_time": "2007-06-24T14:29:48Z", "is_private": false, "attachment_id": null}]