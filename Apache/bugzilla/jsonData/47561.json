[{"count": 0, "tags": [], "text": "Created attachment 24021\ncontains png, jpg, fo and pdf file.\n\nI still have a problem when inserting PNG files into a PDF using fop. My PNG file has a color profile \"Dot Gain 15%\". The PDF contains the same png file, but the color profile is suddenly \"KODAK Grayscale Conversion - Gamma 1.0\". \n \nNew information: Converting the PNG file to JPG with ImageMagick (convert imgTest.png imgTest.jpg) and including the JPG file, the color profile is retained.", "is_private": false, "bug_id": 47561, "id": 129064, "time": "2009-07-23T01:54:15Z", "creator": "gd@geneon.de", "creation_time": "2009-07-23T01:54:15Z", "attachment_id": 24021}, {"count": 1, "tags": [], "text": "Georg,\n\nthanks for the report. I had to modify your .fo file slightly to get both pictures side-by-side, but that was not a problem.\n\nAlso, I noticed that evince showed both graphics to be the same, whereas acroread does show them differently.\n\nJPEG and PNG are treated very differently in XMLGraphics / FOP: JPEG is kept in \"RAW\" format, and as such is written directly to the PDF, preserving all properties. PNG is loaded through ImageIO and then painted as new bitmap onto the PDF. \n\nI have implemented extraction of the ICC profile from PNG when loaded through ImageIO (rev. 797427). The PNG now has the correct color profile internally. Unfortunately this information is still lost on the way into the PDF, which I plan to look into soon.\n\nWhat I would like from you: Could you \"donate\" the two files (PNG + JPEG) to Apache XMLGraphics, so that I can include them as a test case? (A sentence saying we're free to use them should suffice)\n\nMax", "is_private": false, "id": 129113, "creator": "max@berger.name", "time": "2009-07-24T05:30:24Z", "bug_id": 47561, "creation_time": "2009-07-24T05:30:24Z", "attachment_id": null}, {"count": 2, "tags": [], "text": "Changes by Max Berger related to this issue:\nhttp://svn.apache.org/viewvc?rev=797427&view=rev\nhttp://svn.apache.org/viewvc?rev=797429&view=rev\nhttp://svn.apache.org/viewvc?rev=797431&view=rev\n\nSome notes from my POV: I believe what we're seeing here is a bug (or missing feature) in the ImageIO PNG codec. It just recognizes a grayscale image and uses the default grayscale profile in the JDK instead of using the embedded profile. It recognizes the color profile for the metadata but ignores it for the build-up of the BufferedImage. A quick look at the source code of OpenJDK6 PNG decoder seems to confirm this.\n\nSo the change by Max is just a work-around IMO. As he noticed, the change in XGC alone didn't help as it gets ignored in FOP (or rather another XGC class). The reason for this: ImageEncodingHelper (in XGC) assumes that the color profile associated with the image is the right one. The first reaction would be to give the ImageEncodingHelper an additional parameter with the color profile but like with Max's change for ImageRendered, I believe it doesn't address the root of the problem. Of course, we can't just magically fix a piece of software not under our control (although a bug report could filed with Sun). But it wouldn't solve the immediate problem, either.\n\nIf we just override the color profile reported by the BufferedImage, we have to trust that no ImageIO codec actually does a color transformation on the pixel data when it's building the BufferedImage. If that happened, the colors would turn out wrong because of the color profile override. If you look at bugs like [1] (\"Evaluation\" section), such color conversions may not be uncommon, so I don't consider this a good approach.\n\nI guess one possible course of action could be to make sure XGC's own PNG codec is used and is taught to use embedded color profiles. That way, we'd have the whole thing completely under our control. That shouldn't be all too hard to do, althought the switch of the codec might have other side-effects (especially performance-wise).\n\nAnother possibility is to look at Apache Sanselan [2] (now part of Apache Commons) which seems to have code to handle embedded color profiles. However, it looks like it's doing an internal color conversion. But maybe that's not as bad, if at least the colors turn out right in the end.\n\n[1] http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6372769\n[2] http://commons.apache.org/sanselan/", "attachment_id": null, "id": 129158, "creator": "jeremias@apache.org", "time": "2009-07-27T01:23:21Z", "bug_id": 47561, "creation_time": "2009-07-27T01:23:21Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 47561, "is_private": false, "text": "Created attachment 24040\nPatch for fop to use embedded profiles\n\nI've added support for passing ICC Profiles in FOP to PDF, see the attached patch. This fixes the sample files given.\n\nAs Jeremias noted that this is only a workaround and may result in double-applying of color profiles, a more thorough investigation is needed to fix this properly. Therefore the patch is as yet unapplied.\n\nPossible direction: Maybe it is possible to extract a version of the ImageIO codec? We could then at least support the \"workaround\" for some known broken implementations (sun jdk 1.x - 1.x ?). Maybe it is also in the ImageIO spec not to apply the icc profile (altough I could not find anything)?\n\nAnother option: JAI (>=1.1) seems to support ICC Profiles. Direction: Test with and without the current patch to see if it breaks. Possibly suggest that everyone using color profiles should install JAI.\n\nI would prefer to keep ImageIO rather than a special codec, to keep fop/xgc smaller (although XGC does contain a PNG implementation atm)\n\nMax\n\nAddtl. References:\nhttp://java.sun.com/javase/6/docs/technotes/guides/imageio/spec/imageio_guideTOC.fm.html\n\nhttp://forums.java.net/jive/thread.jspa?threadID=10573\n\nhttp://download.java.net/media/jai-imageio/builds/release/1.1/RELEASE-jai_imageio.html", "id": 129159, "time": "2009-07-27T02:00:53Z", "creator": "max@berger.name", "creation_time": "2009-07-27T02:00:53Z", "attachment_id": 24040}, {"count": 4, "tags": [], "bug_id": 47561, "text": "Quick note:\n\nInstalling JAI-ImageIO 1.1 with the given patch applied does not break the output, the icc profile is still applied correctly and only once.\n\nMax", "id": 129160, "time": "2009-07-27T02:22:16Z", "creator": "max@berger.name", "creation_time": "2009-07-27T02:22:16Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "text": "http://svn.apache.org/viewvc?rev=798100&view=rev\n\nChanged the original ICC Profile extraction to only occur with Providers known NOT to apply the ICC profile when drawing the image onto a RenderedImage.\n\nTested Providers:\nSun JDK 1.5, 1.6, OpenJDK 1.6 (report the same name/vendor/version for ImageIO plugins)\nJAI-ImageIO 1.1\n\nI know this is not the optimal solution, but it should work.", "is_private": false, "id": 129163, "creator": "max@berger.name", "time": "2009-07-27T04:13:30Z", "bug_id": 47561, "creation_time": "2009-07-27T04:13:30Z", "attachment_id": null}, {"count": 6, "tags": [], "text": "Two more changes: \nhttp://svn.apache.org/viewvc?rev=798806&view=rev (impl)\nhttp://svn.apache.org/viewvc?rev=798815&view=rev (testcase)\n\n- reverted the original changes. Although it worked, it did not modify the internal color model, and therefore could have caused inconsistencies. Now the color model is modified.\n\nImpact:\n  JPG - none, as RAW is normally used\n  PNG withough color profile - minimal speed impact, the color profile is checked for.\n  PNG with color profile - high impact in display. The color model is now re-created based on the ICC Profile. This works well with the supplied test cases, but may not work in all cases.\n\nJAI-Imageio 1.1 actually does apply the correct color model, so it is removed from the list of broken implementations.\n\nThese changes make the FOP patch obsolete, as it currently extracts the profile from the color model anyways.\n\nTested with Sun JDK 1,5+1.6, OpenJDK 1.6, Apple JDK 1.6.\n\nFrom my POV the issue is resolved. Feel free to re-open if necessary.\n\nMax", "is_private": false, "id": 129237, "creator": "max@berger.name", "time": "2009-07-29T02:14:56Z", "bug_id": 47561, "creation_time": "2009-07-29T02:14:56Z", "attachment_id": null}]