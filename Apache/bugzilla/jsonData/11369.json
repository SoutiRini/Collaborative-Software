[{"count": 0, "tags": [], "creator": "jsalvata@atg.com", "attachment_id": null, "text": "I'm running three different tests, and all show that JMeter performs poorly\nunder JDK 1.4.1_01: 2 to 8 times slower as under JDK 1.3.1_02, depending on the\ntest plan I run.\n\nI've tested both on Linux and SPARC Solaris (32- and 64-bit JDKs) with similar\nresults.", "id": 20541, "time": "2002-08-01T15:20:00Z", "bug_id": 11369, "creation_time": "2002-08-01T15:20:00Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 11369, "is_private": false, "id": 20542, "creation_time": "2002-08-01T16:15:23Z", "time": "2002-08-01T16:15:23Z", "creator": "jsalvata@atg.com", "text": "\nI've made a 20-second test run under OptimizeIt on Solaris with JDK 1.4.0_01\n64-bit, and this is the strange things I see:\n\nIn a 20 second run, one particular thread shows:\n\nOnly 3.66 seconds (18%) waiting for the server to respond in\njava.net.SocketInputStream.read(). This should generally be the most important\ntime consumer, and it's not.\n\n5.59 seconds (28%) in java.net.URLEncoder.encode() called from\nUrlConfig.getQueryString(). This is a ridiculous amount of time for such an\noperation: obviously part of the problem.\n\n2.12 seconds (in JMeterThread.delay(). Taking into account that I don't have any\ndelays in my script, it looks like too much.\n\n0.67 seconds (11%) in java.lang.StringCoding.encode(), called from\nHTTPSampler.getResponseHeaders(). This may be legitimate, though.\n\nThe same test under the 1.3.1_02 JDK shows:\n\n26% waiting for the server to respond. Still not much, but definitely better.\n24% in JMeterThread.delay(). WHY?\nOnly 4.6% in URLEncoder.encode().\n\nSo looks like the difference lies mostly in the URLEncoder.encode(). The fun\nthing is that I don't need (nor want) my parameters URL-encoded!\n", "attachment_id": null}, {"count": 2, "tags": [], "creator": "jsalvata@atg.com", "attachment_id": null, "id": 20547, "creation_time": "2002-08-01T16:58:52Z", "time": "2002-08-01T16:58:52Z", "bug_id": 11369, "text": "On the JMeterThread.delay() issue:\n\nI've observed a Thread.sleep(0) will be called even if there are no timers. To\nmy undestanding, this should be equivalent to Thread.yield(), and would possibly\ndelay that particular thread but should not affect overall throughput\nsignificantly in a test with many threads like mine (I run 10).\n\nI've tried adding an if (run>0) just before the Thread.sleep() call. Performance\nhas not improved at all (actually, it has reduced by about 3% in my\nmeasurements, but that's probably measurement noise).\n\nSo I guess the 11% of time reported by OptimizeIt is a measurement error\n(probably the time spent between this thread relinquishing its timeslice and\nanother thread getting ready to run).\n\nConclusion: the only candidates for significant improvement are now\nURLEncoder.encode() and StringCoding.encode().\n", "is_private": false}, {"count": 3, "tags": [], "bug_id": 11369, "attachment_id": null, "id": 20553, "time": "2002-08-01T18:14:48Z", "creator": "jsalvata@atg.com", "creation_time": "2002-08-01T18:14:48Z", "is_private": false, "text": "I've tried removing the URLEncoder.encode() calls (which, as I said, I don't\nneed). Performance is back to normal (even slightly better).\n\nI've also observed that the 1-parameter encode() method is deprecated in 1.4.\nBut using the two-parameter version didn't help performance.\n\nSo it is a JDK bug. I've reported it in the Java Bug Parade. It's not yet\npublic, but you may find it by its title once it is: \"URLEncoder degraded\nperformance in a multithreaded environment\".\n"}, {"count": 4, "tags": [], "bug_id": 11369, "attachment_id": null, "text": "Same trouble under 1.4.1 beta.", "id": 20599, "time": "2002-08-02T10:53:41Z", "creator": "jsalvata@atg.com", "creation_time": "2002-08-02T10:53:41Z", "is_private": false}, {"count": 5, "tags": [], "text": "I think I've fixed both issues.  Although the delay() issue doesn't affect\noverall performance, it is incorrect behavior, so I added a check to see if sum\n> 0 before entering the try block.", "is_private": false, "bug_id": 11369, "id": 20718, "time": "2002-08-06T18:41:19Z", "creator": "mstover1@apache.org", "creation_time": "2002-08-06T18:41:19Z", "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 11369, "text": "Marking all bugs RESOLVED before JMeter 1.8's release date as VERIFIED.\nYes, it's pretty poor QA procedure, but there's bugs here lingering since JMeter\n1.6, and we need to clean up a little.", "count": 6, "id": 28346, "time": "2002-12-27T16:15:43Z", "creator": "jsalvata@atg.com", "creation_time": "2002-12-27T16:15:43Z", "is_private": false}, {"count": 7, "tags": [], "text": "Bulk-closing all bugs RESOLVED before JMeter 1.8 release date.", "is_private": false, "bug_id": 11369, "id": 28568, "time": "2002-12-29T14:20:53Z", "creator": "jsalvata@atg.com", "creation_time": "2002-12-29T14:20:53Z", "attachment_id": null}]