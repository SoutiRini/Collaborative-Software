[{"count": 0, "tags": [], "bug_id": 31858, "attachment_id": null, "text": "On Apache 1.3.31 on amd64 running linux 2.6.8.1, adding:\n\n<FilesMatch \"\\.(gif|jpg|mp3|css|js|png)$\">\n     Options All -Indexes\n     AllowOverride All\n     deny from all\n</FilesMatch>\n\nis causing Apache to match files with any extension.\n\nTo reproduce, I used a stock 1.3.31 and did:\n\n./configure --prefix=/tmp/apache\nmake\nmake install\n\nadd the above conf to the end of the default httpd.conf. Then point your browser to:\n\nhttp://localhost/index.html\n\nwhich will give a 403 forbidden. I also get a forbidden for:\n\nhttp://localhost/index.html\nhttp://localhost/index.htm\nhttp://localhost/index.ht\nhttp://localhost/index.h\nhttp://localhost/index.\n\nbut I get a 404 for:\n\nhttp://localhost/index\n\nIf I remove the FilesMatch, then index.html shows up as expected. Also, oddly,\nif I change the filesmatch to:\n\n<FilesMatch \"\\.(gif|jpg|mp3|css|js)$\">\n\neverything also works as expected. \n\nThis only happens on our amd64 systems. x86 works fine.\n\nIf you need any more info, please let me know.\n\nThanks!", "id": 65560, "time": "2004-10-22T23:42:25Z", "creator": "alex@gossamer-threads.com", "creation_time": "2004-10-22T23:42:25Z", "is_private": false}, {"count": 1, "tags": [], "creator": "sbeck@gossamer-threads.com", "attachment_id": null, "id": 66273, "time": "2004-11-02T08:16:23Z", "bug_id": 31858, "creation_time": "2004-11-02T08:16:23Z", "is_private": false, "text": "I've been looking into this issue tonight. Havn't uncovered much except it's not\nan issue with the system's regex library. I created this simple test which is\npretty much what apache seems to be trying to do:\n\n#include <stdio.h>\n#include <sys/types.h>\n#include <regex.h>\n\nint main(int argc, char *argv[])\n{\n    int ret;\n    regex_t *r;\n    const char *regex=\"\\\\.(gif|jpg|mp3|css|js|png)$\";\n    int flags = REG_EXTENDED;\n\n    r = malloc(sizeof(regex_t));\n    if (regcomp(r, regex, flags)) {\n        printf(\"Error compiling regex\\n\");\n        return 1;\n    }\n    ret = regexec(r, \"index.html\", 0, NULL, 0);\n    printf(\"match: %d\\n\", ret == 0);\n    return 0;\n}\n\nThis works as it should. I added some printf() debugging into\nsrc/main/http_core.c looks like this:\n\n  printf(\"compiled '%s' into %p at %d\\n\", cmd->path, r, __LINE__);\n\nThat's at line 1760 after it compiles the regex. I also added a printf() in\nsrc/main/http_request.c:\n\n  printf(\"regex match on %s [%p]\\n\", test_file, entry_core->r);\n\non line 704 before it does the ap_regexec() call and a couple of prints to see\nif it matches or not.\n\nAll of this is with a download of apache_1.3.31 non-patched, I compiled it\nmyself with the only options being --prefix=/tmp/test_apache. I didn't change\nthe conf file except to remove the other match on .htaccess and set the port to\n8080. Here is the output I get:\n\ngossamer test_apache # ./bin/httpd -X\ncompiled '\\.(gif|jpg|mp3|css|js|png)$' into 0x58ae98 at 1760\ncompiled '\\.(gif|jpg|mp3|css|js|png)$' into 0x58dd18 at 1760\n\nThen when I make a request for / on that server:\n\nregex match on htdocs [0x58dd18]\nno match!\nregex match on index.html [0x58dd18]\nmatch!\nregex match on favicon.ico [0x58dd18]\nmatch!\n\nAs you can see index.html is matching the precompiled regex that it shouldn't.\nI'm going to continue to investigate this. If anyone has any suggestions I'd\nlove to hear them.\n\nCheers,\n\nScott"}, {"count": 2, "tags": [], "creator": "jorton@redhat.com", "text": "I notice the hsregex test suite segfaults in on amd64 whereas it passes on i386,\nso that might be a good place to start looking: cd src/regex && make r\n", "id": 66274, "time": "2004-11-02T09:06:44Z", "bug_id": 31858, "creation_time": "2004-11-02T09:06:44Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 31858, "attachment_id": null, "text": "Thanks Joe. I've been messing with that code for the last day and found a\nsolution. The version of the engine.c functions for \"small\" op regexs does not\nwork with 64 bit integers. A simple fix is to change regexec.c line 137 from:\nif (g->nstates <= CHAR_BIT*sizeof(states1) && !(eflags&REG_LARGE))\nto:\nif (g->nstates <= CHAR_BIT*4 && !(eflags&REG_LARGE))\n\nOn an opteron sizeof(states1) is always 8 but the smatcher function, for some\nunknown reason, will not handle a regex with more than 32 states. A better fix\nwould be to find the reason why smatcher will not work with more than 32 states\non a opteron but this fix is fine for me.\n\nCheers,\n\nScott", "id": 66376, "time": "2004-11-03T19:06:24Z", "creator": "sbeck@gossamer-threads.com", "creation_time": "2004-11-03T19:06:24Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 31858, "attachment_id": null, "text": "*** Bug 32067 has been marked as a duplicate of this bug. ***", "id": 66480, "time": "2004-11-04T21:56:40Z", "creator": "nd@perlig.de", "creation_time": "2004-11-04T21:56:40Z", "is_private": false}, {"count": 5, "text": "Very weird that this code survives how ever many years then two people hit it in\na week, it's not like people don't use 1.3 on 64-bit platforms already... the\nonly thing different is that amd64 is little-endian I suppose.\n\nBut that change does look like a workaround than a fix.  From googling around, \n\nhttp://www.mysql-websource.com/mysql4020/source-regexec.htm\n\nis intesting it looks like MySQL have made some 64-bit-cleanliness changes, e.g.\n\n#define onestate long /* Changed from int by Monty */\n\nbut that alone doesn't fix the segfaults.", "bug_id": 31858, "attachment_id": null, "id": 66483, "time": "2004-11-04T22:18:06Z", "creator": "jorton@redhat.com", "creation_time": "2004-11-04T22:18:06Z", "tags": [], "is_private": false}, {"count": 6, "tags": [], "creator": "gs-apache-dev@gluelogic.com", "attachment_id": 13336, "id": 66503, "time": "2004-11-05T06:56:17Z", "bug_id": 31858, "creation_time": "2004-11-05T06:56:17Z", "is_private": false, "text": "Created attachment 13336\namd64 safety for regex code"}, {"count": 7, "tags": [], "creator": "gs-apache-dev@gluelogic.com", "attachment_id": 13337, "id": 66505, "time": "2004-11-05T07:09:02Z", "bug_id": 31858, "creation_time": "2004-11-05T07:09:02Z", "is_private": false, "text": "Created attachment 13337\namd64 safety for regex code (take 2)"}, {"count": 8, "tags": [], "creator": "gs-apache-dev@gluelogic.com", "attachment_id": null, "id": 66506, "time": "2004-11-05T07:15:58Z", "bug_id": 31858, "creation_time": "2004-11-05T07:15:58Z", "is_private": false, "text": "The second patch above is a bit more pedantic than the first since the return\nvalue of ISSETBACK() is stored into an (int) and used as a boolean in the step()\nfunction in src/regex/engine.c.  Patch passes tests in src/regex (`make r`) on a\ndual Opteron."}, {"count": 9, "text": "*** Bug 33478 has been marked as a duplicate of this bug. ***", "bug_id": 31858, "attachment_id": null, "id": 70739, "time": "2005-02-10T10:24:22Z", "creator": "jorton@redhat.com", "creation_time": "2005-02-10T10:24:22Z", "tags": [], "is_private": false}, {"count": 10, "tags": [], "bug_id": 31858, "attachment_id": null, "text": "Something is still wrong here. I applied the patch and recompiled and was quite\ndelighted to see some of my regexp's come back online, however, some of them are\nstill showing signs of problems. \n\nRewriteRule ^/guides/([^/]*)/Titles/([A-Z]).html$\n/jax/index.php/enotes/lookup/type=$1/sort=Titles/letter=$2 [L]\n\nThe above rule loads the page, but continues to show about 2% left on the\nprogress bar in Mozilla (while apache goes nuts in top). Restarting apache fixes\nthe problem (until you go to that URL again). However, other rules work fine,\nlike the following:\n\n    RewriteCond %{REQUEST_FILENAME} !-d\n    RewriteCond %{REQUEST_FILENAME} !-f\n    RewriteRule ^/([a-z0-9|-]+)/s([0-9]+)$\n/jax/index.php/enotes/works/notes=$1/sectionID=$2\n\n    RewriteCond %{REQUEST_FILENAME} !-d\n    RewriteCond %{REQUEST_FILENAME} !-f\n    RewriteRule ^/([a-z0-9|-]+)/?([a-z0-9]+)?/?([a-z|-]+)?/?$\n/jax/index.php/enotes/works/notes=$1/id=$2/tail=$3 [L]\n\nOddly enough, these work despite the first rewrite rule being placed above these\nworking ones. The problem only arises on a match of the rewrite rule.\n\n--Joe\n", "id": 71890, "time": "2005-03-07T07:44:36Z", "creator": "joe@joestump.net", "creation_time": "2005-03-07T07:44:36Z", "is_private": false}, {"count": 11, "tags": [], "creator": "joe@joestump.net", "text": "Nevermind my early reply. I figured out that the issue is resolved in Apache\n2.0.x on my AMD64 box. The problem was I was running a patched 1.3.33 Apache\nwith PHP5 and my PHP code isn't ready for PHP5 yet. \n\nAt any rate the patch appears to work fine.\n\n", "id": 72023, "time": "2005-03-08T23:48:00Z", "bug_id": 31858, "creation_time": "2005-03-08T23:48:00Z", "is_private": false, "attachment_id": null}, {"count": 12, "tags": [], "bug_id": 31858, "attachment_id": null, "text": "*** Bug 34010 has been marked as a duplicate of this bug. ***", "id": 72704, "time": "2005-03-19T19:03:23Z", "creator": "jorton@redhat.com", "creation_time": "2005-03-19T19:03:23Z", "is_private": false}, {"count": 13, "tags": [], "bug_id": 31858, "attachment_id": null, "text": "*** Bug 34172 has been marked as a duplicate of this bug. ***", "id": 72846, "time": "2005-03-25T14:35:23Z", "creator": "jorton@redhat.com", "creation_time": "2005-03-25T14:35:23Z", "is_private": false}, {"count": 14, "text": "This is being patched by downstream vendors like Gentoo:\nhttp://bugs.gentoo.org/show_bug.cgi?id=70177 \n\nThe 2nd patch seems to work for them.  Consider committing it?", "bug_id": 31858, "attachment_id": null, "id": 72911, "time": "2005-03-27T23:06:16Z", "creator": "chip@force-elite.com", "creation_time": "2005-03-27T23:06:16Z", "tags": [], "is_private": false}, {"count": 15, "tags": [], "bug_id": 31858, "attachment_id": null, "text": "Apache consistently hangs (apparently in a tight loop) on our Linux 2.6 amd64\nmachines without this patch (rewrite rules, I'm guessing); with it everything\nappears fine.\n", "id": 75154, "time": "2005-05-20T21:01:35Z", "creator": "harlan@artselect.com", "creation_time": "2005-05-20T21:01:35Z", "is_private": false}, {"count": 16, "tags": [], "bug_id": 31858, "attachment_id": null, "text": "*** Bug 35151 has been marked as a duplicate of this bug. ***", "id": 75715, "time": "2005-06-01T11:50:30Z", "creator": "jorton@redhat.com", "creation_time": "2005-06-01T11:50:30Z", "is_private": false}]