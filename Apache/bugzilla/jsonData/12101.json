[{"count": 0, "tags": [], "creator": "ruvinsky@yahoo.com", "is_private": false, "text": "When the sample webapps that come with Tomcat are removed from the \"webapps/\" \ndirectory (i.e., when they aren't auto installed on server startup), Catalina \ndoes not get initialized correctly -- as it \"does\" when the sample webapps do \nget auto installed on server startup.\n\nThis is very reproducible:\n\nFirst, build a tester webapp (\"tester.war\") with a sample server that calls \ngetParameter() for each request, and perhaps displays some output.\n\nBegin with the stock Tomcat 4.0.4 distribution, remove all the files \nin \"webapps/\" and remove the Context declarations for the sample webapps \nin \"conf/server.xml\".  Next, copy \"tester.war\" into \"webapps/\" so that it is \nthe only webapp.\n\nLaunch the server instance with a SecurityManager, by executing \"bin/catalina \nstart -security\".  Note that the only webapp started automatically at server \nstartup is the \"tester.war\" using the context path \"/tester\".\n\nNow, simply send a request the servlet in tester that calls getParameter().  \nYou should get a stack trace similar to the following:\n\nStandardClassLoader: Security Violation, attempt to use Restricted Class: \norg.apache.catalina.util.LocalStrings\nSecurity Violation, attempt to use Restricted Class: \norg.apache.catalina.util.LocalStrings_en\njava.security.AccessControlException: access denied \n(java.lang.RuntimePermission accessClassInPackage.org.apache.catalina.util)\n        at java.security.AccessControlContext.checkPermission\n(AccessControlContext.java:267)\n        at java.security.AccessController.checkPermission\n(AccessController.java:394)\n        at java.lang.SecurityManager.checkPermission(SecurityManager.java:540)\n        at java.lang.SecurityManager.checkPackageAccess\n(SecurityManager.java:1496)\n        at org.apache.catalina.loader.StandardClassLoader.loadClass\n(StandardClassLoader.java:1056)\n        at org.apache.catalina.loader.StandardClassLoader.loadClass\n(StandardClassLoader.java:992)\n        at java.util.ResourceBundle.loadBundle(ResourceBundle.java:905)\n        at java.util.ResourceBundle.findBundle(ResourceBundle.java:786)\n        at java.util.ResourceBundle.getBundleImpl(ResourceBundle.java:635)\n        at java.util.ResourceBundle.getBundle(ResourceBundle.java:541)\n        at org.apache.catalina.util.StringManager.<init>(StringManager.java:115)\n        at org.apache.catalina.util.StringManager.getManager\n(StringManager.java:260)\n        at org.apache.catalina.util.ParameterMap.<clinit>(ParameterMap.java:174)\n        at org.apache.catalina.connector.HttpRequestBase.parseParameters\n(HttpRequestBase.java:615)\n        at org.apache.catalina.connector.HttpRequestBase.getParameter\n(HttpRequestBase.java:691)\n        at org.apache.catalina.connector.RequestFacade.getParameter\n(RequestFacade.java:160)\n        at com.akamai.edgejava.tests.SessionTest.doGet(SessionTest.java:35)\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:740)\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:853)\n        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter\n(ApplicationFilterChain.java:247)\n        at org.apache.catalina.core.ApplicationFilterChain.access$0\n(ApplicationFilterChain.java:197)\n        at org.apache.catalina.core.ApplicationFilterChain$1.run\n(ApplicationFilterChain.java:176)\n        at java.security.AccessController.doPrivileged(Native Method)\n        at org.apache.catalina.core.ApplicationFilterChain.doFilter\n(ApplicationFilterChain.java:172)\n        at org.apache.catalina.core.StandardWrapperValve.invoke\n(StandardWrapperValve.java:243)\n        at org.apache.catalina.core.StandardPipeline.invokeNext\n(StandardPipeline.java:566)\n        at org.apache.catalina.core.StandardPipeline.invoke\n(StandardPipeline.java:472)\n        at org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:943)\n        at org.apache.catalina.core.StandardContextValve.invoke\n(StandardContextValve.java:190)\n        at org.apache.catalina.core.StandardPipeline.invokeNext\n(StandardPipeline.java:566)\n        at org.apache.catalina.core.StandardPipeline.invoke\n(StandardPipeline.java:472)\n        at org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:943)\n        at org.apache.catalina.core.StandardContext.invoke\n(StandardContext.java:2347)\n        at org.apache.catalina.core.StandardHostValve.invoke\n(StandardHostValve.java:180)\n        at org.apache.catalina.core.StandardPipeline.invokeNext\n(StandardPipeline.java:566)\n        at org.apache.catalina.valves.ErrorDispatcherValve.invoke\n(ErrorDispatcherValve.java:170)\n        at org.apache.catalina.core.StandardPipeline.invokeNext\n(StandardPipeline.java:564)\n        at org.apache.catalina.valves.ErrorReportValve.invoke\n(ErrorReportValve.java:170)\n        at org.apache.catalina.core.StandardPipeline.invokeNext\n(StandardPipeline.java:564)\n        at org.apache.catalina.valves.AccessLogValve.invoke\n(AccessLogValve.java:468)\n        at org.apache.catalina.core.StandardPipeline.invokeNext\n(StandardPipeline.java:564)\n        at org.apache.catalina.core.StandardPipeline.invoke\n(StandardPipeline.java:472)\n        at org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:943)\n        at org.apache.catalina.core.StandardEngineValve.invoke\n(StandardEngineValve.java:174)\n        at org.apache.catalina.core.StandardPipeline.invokeNext\n(StandardPipeline.java:566)\n        at org.apache.catalina.core.StandardPipeline.invoke\n(StandardPipeline.java:472)\n        at org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:943)\n        at org.apache.catalina.connector.http.HttpProcessor.process\n(HttpProcessor.java:1027)\n        at org.apache.catalina.connector.http.HttpProcessor.run\n(HttpProcessor.java:1125)\n        at java.lang.Thread.run(Thread.java:479)", "id": 21839, "time": "2002-08-27T19:52:25Z", "bug_id": 12101, "creation_time": "2002-08-27T19:52:25Z", "attachment_id": null}, {"count": 1, "attachment_id": null, "bug_id": 12101, "is_private": false, "id": 21853, "time": "2002-08-27T22:21:03Z", "creator": "ruvinsky@yahoo.com", "creation_time": "2002-08-27T22:21:03Z", "tags": [], "text": "Upon doing some more testing, it appears that this problem occurs when Tomcat \nstarts up with only one webapp.  As soon as another webapp gets installed (or \neven if the single webapp gets uninstalled and then reinstalled at runtime), \nthe problem no longer occurs (i.e., gets masked).  Hope this helps."}, {"count": 2, "attachment_id": null, "bug_id": 12101, "text": "Ok, I think I tracked the real issue down.  Disregard my previous \nhypotheses.  :)\n\nThe problem occurs when the SecurityManager is used with the default policy.  \nIf a request comes in, if the request processing path does NOT flow through a \nclass file that has all permissions granted (e.g., \"DefaultServlet\" Catalina-\ninternal servlet) and there is no call made to \"request.getParameterNames()\" \nor \"request.getParameter()\" from code with all permissions, BEFORE any other \n[user/untrusted] servlet with fewer permissions granted, the following security \nexception will occur:\n\nStandardClassLoader: Security Violation, attempt to use Restricted Class: \norg.apache.catalina.util.LocalStrings\nSecurity Violation, attempt to use Restricted Class: \norg.apache.catalina.util.LocalStrings_en\njava.security.AccessControlException: access denied \n(java.lang.RuntimePermission accessClassInPackage.org.apache.catalina.util)\n\nRefer to the complete stack trace in the Bugzilla description for more details.\n\nI have confirmed that this bug also exists in Tomcat 4.0.1 -- likely even \nearlier.  This sounds like a fairly high priority bug.  Can someone take a look?\n\nThanks.", "id": 21942, "time": "2002-08-29T01:41:56Z", "creator": "ruvinsky@yahoo.com", "creation_time": "2002-08-29T01:41:56Z", "tags": [], "is_private": false}, {"count": 3, "attachment_id": null, "bug_id": 12101, "text": "Try adding the following permission to your default grant in catalina.policy.\n\njava.lang.RuntimePermission \"accessClassInPackage.org.apache.catalina.util.*\"\n\nAnd report back if this takes care of the problem.", "id": 21961, "time": "2002-08-29T12:35:04Z", "creator": "glenn@apache.org", "creation_time": "2002-08-29T12:35:04Z", "tags": [], "is_private": false}, {"count": 4, "tags": [], "bug_id": 12101, "attachment_id": null, "text": "Actually I needed to add this slightly different permission to address the \nproblem:\n\npermission \njava.lang.RuntimePermission \"accessClassInPackage.org.apache.catalina.util\";\n\nAre there any security vulnerabilities exposed to untrusted webapps with this \npermission granted?  If the org.apache.catalina.util... packages are expected \nto be protected from untrusted/user code, are there missing PrivilegedAction \nblocks in the HttpRequestBase Catalina implementation for methods like \ngetParameter() and getParameterNames()?\n\nThe way I \"masked\" the bug (w/o granting the permission above to untrusted \nwebapps) was to have a trusted filter that calls getParameterNames() for the \nfirst request of each context.  (It's a hack, yes, but I figured this was safer \nthan simply granting the permission to all webapps, since I wasn't sure if that \ncompromised any security.)\n\nThoughts?", "id": 21982, "time": "2002-08-29T16:55:11Z", "creator": "ruvinsky@yahoo.com", "creation_time": "2002-08-29T16:55:11Z", "is_private": false}, {"count": 5, "tags": [], "creator": "glenn@apache.org", "text": "What version of the JVM are you using.  How accessClassInPackage\nand defineClassInPackage work changed from Java 1.3 to Java 1.4.\n\n", "id": 22011, "time": "2002-08-30T02:51:38Z", "bug_id": 12101, "creation_time": "2002-08-30T02:51:38Z", "is_private": false, "attachment_id": null}, {"count": 6, "tags": [], "text": "I'm using Sun JDK 1.3.1_04.", "is_private": false, "id": 22014, "creator": "ruvinsky@yahoo.com", "time": "2002-08-30T04:44:35Z", "bug_id": 12101, "creation_time": "2002-08-30T04:44:35Z", "attachment_id": null}, {"count": 7, "tags": [], "text": "I see no problem granting the RuntimePermission\n\naccessClassInPackage.org.apache.catalina.util*\n\nin the catalina.policy.\n\nI tested this using Tomcat 4.1.10 and could not reproduce the problem.\n\nSince there is a workaround for you with Tomcat 4.0.4 I see no reason\nto pursue this further.", "is_private": false, "id": 22067, "creator": "glenn@apache.org", "time": "2002-08-31T17:51:39Z", "bug_id": 12101, "creation_time": "2002-08-31T17:51:39Z", "attachment_id": null}, {"count": 8, "tags": [], "bug_id": 12101, "attachment_id": null, "is_private": false, "id": 22068, "time": "2002-08-31T22:27:48Z", "creator": "ruvinsky@yahoo.com", "creation_time": "2002-08-31T22:27:48Z", "text": "That sounds great, as long as there isn't a security issue with granting \nuntrusted webapps with class access permission to org.apache.catalina.util*.\n\nAre you saying that this permission will be granted to all webapps in the \ndefault Tomcat security policy file in the next official release of Tomcat \n(following 4.0.4)?"}, {"count": 9, "attachment_id": null, "bug_id": 12101, "text": "There was no need to add the permission, it worked fine without it\nin Tomcat 4.1.10.", "id": 22069, "time": "2002-08-31T23:11:30Z", "creator": "glenn@apache.org", "creation_time": "2002-08-31T23:11:30Z", "tags": [], "is_private": false}, {"count": 10, "attachment_id": null, "bug_id": 12101, "text": "*** Bug 13052 has been marked as a duplicate of this bug. ***", "id": 23495, "time": "2002-09-27T00:40:32Z", "creator": "glenn@apache.org", "creation_time": "2002-09-27T00:40:32Z", "tags": [], "is_private": false}]