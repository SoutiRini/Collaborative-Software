[{"count": 0, "tags": [], "creator": "andy.seaborne@hp.com", "text": "Trying to set a long Class-Path fails in v1.6.5\n\nant -version\n==>\nApache Ant version 1.6.5 compiled on June 2 2005\n\nCase 1/ Inline value (see sample below)\n\nThis is because class paths in jar manifests are separated by spaces \nand spaces are also the continuation character in jar manifests.  The jar\ntask breaks the long lines so that space may be on the front.\n\nCase 2/ Specify an existing manifest file\n\nThe manifest file has trailing spaces in the Class-Path.\n\nThe task seems to parse the manifest but then wrap the Class-Path value up\nwithout regard to the internal spaces to the value.\n\n\nThere is a trick to get spaces into a long Class-Path which is to have trailing\nspaces in the manifest.  This works when running the Java SDK (1.5.0) jar\ncommand directly and the same manifest in 2/ used directly works.\n\nManifest-Version: 1.0\nMain-Class: arq.query\nClass-Path: arq.jar jena.jar \n            xercesImpl.jar xml-apis.jar \n            stax-1.1.1-dev.jar stax-api-1.0.jar \n            commons-logging.jar \n            concurrent.jar icu4j.jar \n            jakarta-oro-2.0.5.jar junit.jar\n\n(each intermediate line in Class-Path has a trailing space)\n\nSamples:\n\n     <jar destfile=\"${appjarfile}\">\n\t<fileset dir=\"${lib.dir}\" includes=\"*.jar\"/>\n\t<manifest>\n\t  <attribute name=\"Main-Class\" value=\"arq.query\"/>\n\t  <attribute name=\"Class-Path\" value=\"${lib.jars}\"/>\n\t</manifest>\n      </jar>\n\nlib.jars is set to a string of jars names with spaces \n\n      <pathconvert pathsep=\"   \" property=\"lib.jars\">\n\t<path>\n\t  <fileset dir=\"${lib.dir}\" includes=\"*.jar\"/>\n\t</path>\n\t<mapper type=\"flatten\"/>\n      </pathconvert>", "id": 80611, "time": "2005-09-29T17:18:37Z", "bug_id": 36865, "creation_time": "2005-09-29T17:18:37Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "creator": "stevel@apache.org", "text": "Andy,\n\nI'm still trying to understand this. Is the problem that you want to have spaces\nin your stuff, or is it that when ant merges a long classpath it strips out the\nspaces in between jars so you have\n\nClasspath :1.jar\n  2.jar\n\nand you end up with \nClasspath: 1.jar2.jar \n\nIs this what you mean?\n\nOr is that you've found the code I added to detect Jena.jar and stop it loading?", "id": 80614, "time": "2005-09-29T17:54:51Z", "bug_id": 36865, "creation_time": "2005-09-29T17:54:51Z", "is_private": false, "attachment_id": null}, {"count": 2, "attachment_id": null, "bug_id": 36865, "text": "> I'm still trying to understand this. Is the problem that you want to\n> have spaces in your stuff, \n\nYes - the spaces are significant to  \"java -jar\"\n\nI've read the jar manifest spec and what ant produces looks right.  It just\ndoesn't work with \"java -jar\" when jar'ing directly does.\n\n> or is it that when ant merges a long\n> classpath it strips out the spaces in between jars so you have  \n> \n> Classpath :1.jar\n>   2.jar\n> \n> and you end up with\n> Classpath: 1.jar2.jar\n\nYes - that can happen when breaking on a space.\n\nClasspath :1.jar_\n   2.jar\n\n\nHowever, I upgraded the input jars which included name changes (in length) which\nchanged the line breaks and now different things happen.  My example doesn't\nwork - but the reason is different.\n\nI changed the bug report status to INVALID and I'll try to get a stable test\ncase and submit a new report.\n\nArgggggh.\n\n> Or is that you've found the code I added to detect Jena.jar and stop it\n> loading? \n\nThat's OK - we have started using a rotating jar name based on the MD5 checksum\nof your bank account transactions for a year into the future at the time the jar\nis built.\n\n", "id": 80618, "time": "2005-09-29T18:41:22Z", "creator": "andy.seaborne@hp.com", "creation_time": "2005-09-29T18:41:22Z", "tags": [], "is_private": false}]