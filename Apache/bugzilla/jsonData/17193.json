[{"count": 0, "attachment_id": null, "bug_id": 17193, "text": "Following error was encountered while shutdown, i m giving complete log message \nfrom startup to shutdown\n \n[INFO] Registry - -Loading registry information\n[INFO] Registry - -Creating new Registry instance\n[INFO] Registry - -Creating MBeanServer\n[INFO] Http11Protocol - -Initializing Coyote HTTP/1.1 on port 8080\nStarting service Tomcat-Standalone\nApache Tomcat/4.1.18\n[INFO] Http11Protocol - -Starting Coyote HTTP/1.1 on port 8080\n[INFO] ChannelSocket - -JK2: ajp13 listening on 0.0.0.0/0.0.0.0:8009\n[INFO] JkMain - -Jk running ID=0 time=10/100  config=d:\\Tomcat 4.1.18\n\\conf\\jk2.properties\nStopping service Tomcat-Standalone\njava.net.BindException: Cannot assign requested address: connect\n        at java.net.PlainSocketImpl.socketConnect(Native Method)\n        at java.net.PlainSocketImpl.doConnect(PlainSocketImpl.java:350)\n        at java.net.PlainSocketImpl.connectToAddress(PlainSocketImpl.java:137)\n        at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:124)\n        at java.net.Socket.<init>(Socket.java:268)\n        at java.net.Socket.<init>(Socket.java:122)\n        at org.apache.jk.common.ChannelSocket.destroy(ChannelSocket.java:417)\n        at org.apache.jk.server.JkMain.stop(JkMain.java:308)\n        at org.apache.jk.server.JkCoyoteHandler.destroy\n(JkCoyoteHandler.java:179)\n        at org.apache.coyote.tomcat4.CoyoteConnector.stop\n(CoyoteConnector.java:1081)\n        at org.apache.catalina.core.StandardService.stop\n(StandardService.java:546)\n        at org.apache.catalina.core.StandardServer.stop\n(StandardServer.java:2224)\n        at org.apache.catalina.startup.Catalina$CatalinaShutdownHook.run\n(Catalina.java:624)\n \nwhat i figured out by looking at the code of  \"ChannelSocket.java\" was that in \nmethod \"init\" of class \"ChannelSocket\"  the following code\n \n        if (getAddress() == null)\n                setAddress(\"0.0.0.0\");\n \nis setting 'inet' variable to address 0.0.0.0, which is creating problems at \nthe time of shutdown when method \"destroy\" is called and a new socket creation \nis tried which results in the above mentioned \"Bind Exception\"...\n      \n      \tif (inet == null) {\n                s=new Socket(\"127.0.0.1\", port );\n        }else{\n              s=new Socket(inet, port );\n                 // setting soLinger to a small value will help shutdown the\n                 // connection quicker\n              s.setSoLinger(true, 0);\n        }", "id": 31577, "time": "2003-02-19T07:05:16Z", "creator": "ankur_goel@intersolutions.stpn.soft.net", "creation_time": "2003-02-19T07:05:16Z", "tags": [], "is_private": false}, {"attachment_id": null, "tags": [], "bug_id": 17193, "is_private": false, "count": 1, "id": 31651, "time": "2003-02-20T06:42:36Z", "creator": "ankur_goel@intersolutions.stpn.soft.net", "creation_time": "2003-02-20T06:42:36Z", "text": "nobody seems to be interested in resolving this bug!!!"}, {"count": 2, "text": "Fixed in CVS, next release of jk2 will probably have it.", "bug_id": 17193, "is_private": false, "id": 33165, "time": "2003-03-14T00:15:29Z", "creator": "cmanolache@yahoo.com", "creation_time": "2003-03-14T00:15:29Z", "tags": [], "attachment_id": null}, {"count": 3, "tags": [], "text": "\n Hi, \n\n      We have the same issue here. If our customer does't \nwant to reinstall Tomcat, how should we install the new\nfix? Is there a patch for this bug? \nAny information will be apprecicated.\n\n\n         Thanks,\n            -li1yang", "is_private": false, "id": 35385, "creator": "li1yang@hotmail.com", "time": "2003-04-16T23:18:29Z", "bug_id": 17193, "creation_time": "2003-04-16T23:18:29Z", "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 17193, "is_private": false, "count": 4, "id": 37689, "time": "2003-05-23T20:54:27Z", "creator": "caprani@altern.org", "creation_time": "2003-05-23T20:54:27Z", "text": "The current stable release (4.1.24) of Tomcat does not fix this bug.\nIs there a patch available? How to build it?\nSimply replacing tomcat-jk2.jar with the one in Tomcat 5.0.2 (dated May 3rd) \ndoes not work."}, {"count": 5, "tags": [], "creator": "joe.boon@cdcsolutions.com", "text": "This is still occuring in Tomcat 4.1.24\nBug 19098 seems to be a duplicate of this, but the resolution isn't helpful.", "id": 38051, "time": "2003-05-30T14:39:05Z", "bug_id": 17193, "creation_time": "2003-05-30T14:39:05Z", "is_private": false, "attachment_id": null}, {"attachment_id": null, "tags": [], "creator": "caprani@altern.org", "is_private": false, "count": 6, "id": 40586, "time": "2003-07-13T23:44:04Z", "bug_id": 17193, "creation_time": "2003-07-13T23:44:04Z", "text": "*** Bug 17702 has been marked as a duplicate of this bug. ***"}, {"attachment_id": null, "tags": [], "creator": "caprani@altern.org", "text": "*** Bug 19098 has been marked as a duplicate of this bug. ***", "count": 7, "id": 40589, "time": "2003-07-13T23:49:57Z", "bug_id": 17193, "creation_time": "2003-07-13T23:49:57Z", "is_private": false}, {"count": 8, "tags": [], "creator": "skeet@pobox.com", "is_private": false, "text": "Is there any actual movement on this? I could really do with a fix for it, and\nam willing to put some work in myself, but in order to fix the bug I'd have to\nknow where the source for tomcat-jk.jar itself is, I suspect - and I can't find\nthat... It's not in the Tomcat 4.1.27 source distribution - where does it come from?\n", "id": 43829, "time": "2003-09-08T10:33:58Z", "bug_id": 17193, "creation_time": "2003-09-08T10:33:58Z", "attachment_id": null}, {"count": 9, "text": "Right. This doesn't look like it's been fixed in CVS at all, as far as I can see\n- Costin, can you remember why you made the comment you did? (The original\ncomment about the cause of the problem is spot on.)\n\nI'm using Tomcat 4.1.27, and have modified the source locally just to check\nwhether inet.toString().equals (\"0.0.0.0/0.0.0.0\") and use 127.0.0.1 if so. That\ndoesn't feel like a good fix to me, however - I don't like comparing the\ncontents of .toString with anything else.\n\nDo we know why inet is being set to 0.0.0.0 in the first place? Is there\nanything wrong with leaving it as null, but using an inet address of 0.0.0.0 in\ninit instead? Really, this is a question of whether other classes will assume\nthat inet is going to have a non-null value. (It's got package protection, so is\navailable from other classes.)\n\nI don't think I know enough about jk2 to fix this *properly* myself, though I\nmay well be able to fix it well enough to make do for the installations I'll be\nusing it with (eg no JMX etc). I certainly need to get it cleared up to *some*\nextent before I can ship Tomcat 4.1 with our product.\n\nDoes anyone with a bit more knowledge (not saying much :) fancy commenting on\nthis, or shall I implement my own somewhat hacky solution for my own private\nuse? (I really don't think I could come up with one I'd be happy enough to\nsubmit as a patch.)", "bug_id": 17193, "is_private": false, "id": 43836, "time": "2003-09-08T13:51:28Z", "creator": "skeet@pobox.com", "creation_time": "2003-09-08T13:51:28Z", "tags": [], "attachment_id": null}, {"count": 10, "tags": [], "bug_id": 17193, "text": "AFAIKT this was fixed for the 2.0.4 release of jk2. See \nhttp://cvs.apache.org/viewcvs.cgi/jakarta-tomcat-\nconnectors/jk/java/org/apache/jk/common/ChannelSocket.java?\nr1=1.44&r2=1.45&diff_format=h\n\nThere has not been a TC4 release since this date. TC5.0.20 or later will \ninclude it.", "id": 57906, "time": "2004-05-22T22:21:33Z", "creator": "markt@apache.org", "creation_time": "2004-05-22T22:21:33Z", "is_private": false, "attachment_id": null}]