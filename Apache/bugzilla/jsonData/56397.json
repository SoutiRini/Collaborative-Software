[{"count": 0, "tags": [], "text": "", "attachment_id": null, "id": 174499, "creator": "chris@christopherschultz.net", "time": "2014-04-11T19:55:16Z", "bug_id": 56397, "creation_time": "2014-04-11T19:55:16Z", "is_private": false}, {"count": 1, "tags": [], "text": "I don't see how this is doable or useful since the point of maven is to accept its source code structure and componentization. IMO it is either Tomcat switches cleanly to Maven (or another similar one) for a next version or it stays with the current Ant build.", "attachment_id": null, "id": 174513, "creator": "remm@apache.org", "time": "2014-04-12T12:32:09Z", "bug_id": 56397, "creation_time": "2014-04-12T12:32:09Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 56397, "attachment_id": null, "id": 174514, "time": "2014-04-12T14:23:42Z", "creator": "markt@apache.org", "creation_time": "2014-04-12T14:23:42Z", "is_private": false, "text": "This is one of the things discussed at the Tomcat Summit this week.\n\nMy proposal was to start a multi-module maven project in the sandbox using svn externals to pull in the relevant bits of Tomcat source for each module. I'd create a couple of modules to see if it was doable and then leave it for the next Maven fan who comes along championing a switch to finish off. If they are able to create a working build then at that point the community can compare the Maven build and the Ant build and decide which is best.\n\nI plan to close this issue as LATER once I have the first couple of modules created.\n\nRight now I am not at all convinced of the benfits of switching - I think your move to a single source tree was one of the best things we ever did for making the code easier to work with - but switching to Maven keeps coming up and rather than yet another abstract discussion this provides a mechansim for us to have something concrete to compare."}, {"count": 3, "tags": [], "bug_id": 56397, "attachment_id": null, "is_private": false, "id": 174646, "time": "2014-04-16T16:51:45Z", "creator": "remm@apache.org", "creation_time": "2014-04-16T16:51:45Z", "text": "Ok, let me know when the basics are in.\n\nAlthough I did put in place the single source tree, which worked fine, and it's great if it has been useful for a (long) while. OTOH people keep whining about Maven, IDEs got better at handling Maven style projects, and the Ant build script is indeed meh (the Maven fans have a point there)."}, {"count": 4, "tags": [], "bug_id": 56397, "attachment_id": null, "is_private": false, "id": 174659, "time": "2014-04-16T20:10:15Z", "creator": "timw@apache.org", "creation_time": "2014-04-16T20:10:15Z", "text": "> and the Ant build script is indeed meh (the Maven fans have a point there).\n\nAlso Ant as a project appears to be in some difficulty - 1.8 and 1.9 (until I patched it, and I'm still suspicious of some intermittent exec failures) completely borked the performance of native execs and went unfixed for _years_, so 1.7.1 is pretty much state of the art for many real-world builds.\n\nIf you have time/interest, Gradle might be worth exploring, since it seems to tread the line between the flexibility of Ant and the conventional structure and publishing of Maven (I don't care to discuss the relative merits of lack thereof)."}, {"count": 5, "tags": [], "bug_id": 56397, "attachment_id": null, "is_private": false, "id": 177761, "time": "2014-09-11T16:55:52Z", "creator": "pierre.viret@gmail.com", "creation_time": "2014-09-11T16:55:52Z", "text": "I have already migrated several projects from ant to maven and I like this kind of challenge. I'm ready to help here.\nSo my fist question is: do you need some help?\nIf the answer is positive: can you please explain what is the actual status of the work? I would not like to start something and hear several weeks later that it was already done by someone else ;-)"}, {"count": 6, "tags": [], "creator": "pierre.viret@gmail.com", "is_private": false, "text": "Created attachment 32016\ntar containing the maven pom.xml files and the directories\n\nSee README-MAVEN.txt file for usage", "id": 177833, "time": "2014-09-12T21:04:29Z", "bug_id": 56397, "creation_time": "2014-09-12T21:04:29Z", "attachment_id": 32016}, {"count": 7, "tags": [], "bug_id": 56397, "attachment_id": 32017, "is_private": false, "id": 177834, "time": "2014-09-12T21:05:51Z", "creator": "pierre.viret@gmail.com", "creation_time": "2014-09-12T21:05:51Z", "text": "Created attachment 32017\nREADME for setting up maven for tomcat\n\nThis file contains a small how-to explaining the steps needed to set up maven  projects for tomcat."}, {"count": 8, "tags": [], "text": "I have implemented an EXPERIMENTAL set of maven projects for the tomcat components.\nThe main idea is that the sources are simply copied from the central repository to an existing maven projects' tree. Everyone can download the readme, patch the build.xml, unpack the tar with the maven project files and enjoy maven projects. This works well for me and I can work with the projects in NetBeans.\n\nThis is experimental and has to be verified and tested in depth (f.i. compare the jars created by maven and the jars created by ant).\n\nThe advantage of this solution is that we can take any revision of the tomcat source tree and (so long the main source packages of the components were not refactored) generate the maven project out of it.\n\nMy proposal: we can now set up the maven projects so that they really build 100% what we want, without impacting the ant build. When we are ready to switch to maven then the work remaining is to \"svn move\" the source packages to the corresponding maven modules. This is not a parallel build system but could be very interesting for experimentation and developing the maven build.\n\nPlease feel free to try it out and give me feedback.", "attachment_id": null, "id": 177835, "creator": "pierre.viret@gmail.com", "time": "2014-09-12T21:17:03Z", "bug_id": 56397, "creation_time": "2014-09-12T21:17:03Z", "is_private": false}, {"count": 9, "tags": [], "bug_id": 56397, "attachment_id": null, "is_private": false, "id": 177925, "time": "2014-09-17T10:44:16Z", "creator": "markt@apache.org", "creation_time": "2014-09-17T10:44:16Z", "text": "Thanks for this. I still want to try and create the svn externals as that means the Maven build would be based directly on svn and folks would be able to commit / propose patches / merge updates much more easily.\n\nI intended to start on this on Monday but got somewhat side-tracked with other things.\n\nOne issue I did not want to forget. The patch mentions a circular dependency. That is bad and I thought we had got rid of all of those. I know I could work out the details for myself but if you have them handy it would be very helpful if you could add them here."}, {"count": 10, "tags": [], "bug_id": 56397, "attachment_id": null, "id": 177927, "time": "2014-09-17T12:12:06Z", "creator": "pierre.viret@gmail.com", "creation_time": "2014-09-17T12:12:06Z", "is_private": false, "text": "Thank you very much for your feedback.\n\n1) About the circular dependency: the pattern for the tomcat-coyote component selects the file \"org/apache/tomcat/util/net/Constants.java\".\nThis class is referenced by \"org.apache.tomcat.util.threads.TaskThreadFactory.java\" which belongs to the tomcat-util component. Actually only one constant field is used:\n\nThis field is defined like this in the Constants class:\npublic static final boolean IS_SECURITY_ENABLED =\n        (System.getSecurityManager() != null);\n\nI think we can get rid of the circular dependency simply by modifying the TaskThreadFactory class: replace the two lines which use the constant:\n\"if (Constants.IS_SECURITY_ENABLED) {\"\n\nWith following: \"if (System.getSecurityManager() != null) {\"\nand we should get the same result.\n\n\n2) About the svn externals: this would be great! I don't know this feature so I will study the svn documentation to understand how this would work. For instance, is it possible to \"reuse\" the ant patterns defined in the build.xml for selecting the right sources for each component?\n\n\n3) I have started the implementation of a new maven project: apache-tomcat which would create the distributions (as we can download them from http://tomcat.apache.org/download-80.cgi). I will upload the new version of the maven project files and the patch for the build.xml in this bug as soon as I have a working base which would show how this can be implemented."}, {"count": 11, "tags": [], "bug_id": 56397, "attachment_id": null, "id": 177930, "time": "2014-09-17T13:00:21Z", "creator": "pierre.viret@gmail.com", "creation_time": "2014-09-17T13:00:21Z", "is_private": false, "text": "Sorry about the circular dependency I forgot to mention that tomcat-coyote needs tomcat-util to compile, so tomcat-util may not depend on the tomcat-coyote."}, {"count": 12, "tags": [], "creator": "markt@apache.org", "is_private": false, "text": "I am making progress. The structure is in svn, the sources for JULI are hooked up via externals and the tomcat-juli-8.0.13-SNAPSHOT.jar that is created looks reasonable (I haven't tested it).\n\nIf we want this to be a way folks familiar with Maven can work with the source, that is one thing (and I think we have most of whet we need once the svn externals are finished).\n\nIf we want users to be able to use this to build a working Tomcat distribution, that is is more complex.\n\nIf we want to be able to use this to build a release that is more complex again.\n\nWorking with the source:\n1. How do you propose to update the version number after a release? Updating every POM by hand is not viable.\n2. The JARs need to contain the right LICENSE and NOTICE file. Even if they aren't meant to be released, someone will distribute them somewhere, somehow.\n\nWorking instance:\n3. How do we get to this point?\n\nDistribution:\n4. Can source JARs are be created?\n5. Windows installer, signing etc.\n\nFor this to be useful I think it has to be possible to create a working Tomcat instance. I'm far less concerned about being able to release.", "id": 177936, "time": "2014-09-17T14:19:35Z", "bug_id": 56397, "creation_time": "2014-09-17T14:19:35Z", "attachment_id": null}, {"count": 13, "tags": [], "bug_id": 56397, "attachment_id": null, "is_private": false, "id": 177939, "time": "2014-09-17T18:57:44Z", "creator": "markt@apache.org", "creation_time": "2014-09-17T18:57:44Z", "text": "Mmm. Because of what needs to be filtered, the use of externals is going to get painful for some modules. I'm wondering if there is a better solution.\n\nThe modules aspect of this is good. Is it possible to point a module at standard Tomcat checkout (i.e. the full source tree) and then tell Maven to filter that to only include the classes we want for that module? If yes, would this work (including in an IDE) if the source tree was outside of the modules or would you need a complete Tomcat checkout in each module?"}, {"count": 14, "tags": [], "bug_id": 56397, "attachment_id": null, "is_private": false, "id": 177943, "time": "2014-09-17T19:50:34Z", "creator": "markt@apache.org", "creation_time": "2014-09-17T19:50:34Z", "text": "For the record a narrow as possible single external combined with include/exclude filters in the POM looks like a good solution. I'll update the existing modules that use multiple externals to use this approach.\n\nA new problem has emerged. The unit tests (which in many cases are more like integration tests) have all sorts of circular dependencies. Suggestions on how to handle this welcome."}, {"count": 15, "tags": [], "bug_id": 56397, "attachment_id": null, "id": 177944, "time": "2014-09-17T20:32:10Z", "creator": "pierre.viret@gmail.com", "creation_time": "2014-09-17T20:32:10Z", "is_private": false, "text": "Here my answers to the first comment:\n\nWorking with the source:\n1. How do you propose to update the version number after a release? Updating every POM by hand is not viable.\n\n--> I use the maven-versions-plugin with several big projects for this (http://mojo.codehaus.org/versions-maven-plugin). The goal versions:set is exactly what we need and this works very well. But if you have some inconsistency in the versions of your project hierarchy you have to fix them by hand.\n\n2. The JARs need to contain the right LICENSE and NOTICE file. Even if they aren't meant to be released, someone will distribute them somewhere, somehow.\n\n--> this should not be a big issue. There are several ays to achieve this, I think that one good solution is too define a component containing global ressources, each component needing these files depends on this one and can pull the files using dependency-plugin in the generate-resources phase. Another solution would be to add the files as ressource in each component using svn externals, into src/main/resources dir of the component then the files are added to the jar. But on my opinion the first solution is easier.\n\nWorking instance:\n3. How do we get to this point?\n\n--> Is the working instance what the ant build generates under \"output/build\" ? Actually what I have begun to implement for generating the distributions is quite the same as the working instance I think.\n\nDistribution:\n4. Can source JARs are be created?\n\n--> yes this is easy\n\n5. Windows installer, signing etc.\n\n--> I have no experience with Windows installer. Signing should not be a problem. \nIt is possible to perform some steps in the maven build using ant targets so everything we can do with ant should be possible with maven. I have used this (the maven-antrun-plugin) for a project where we call some ant tasks of Weblogic Server to generate Security Providers.\n\n\nI will have again time to work on this Friday afternoon. Are you working on some branch in svn for the svn externals ? How should I checkout the sources to get what you have implemented for JULI ? I have checkout the trunk but I didn't see anything about externals references."}, {"count": 16, "tags": [], "text": "I've just figured out where you have performed the changes (tomcat/sandbox/trunk-maven-layout/) so I will be able to check this out on Friday.\n\nRegarding the tests: I have not tried to integrate the tests in the maven components yet. A good practice in maven is to split the integration tests in separate components which are built & tested late in the build cycle, when all base components are already built and can be referenced. Only the real unit tests, which run quickly (if they last more than a couple of seconds then we risk that the developers skip them...) should be integrated in the corresponding component and so the developer get at once a feedback if something is broken at this level.\nIf some test classes are widely used then a solution is to create a \"common-test\" component containing all these utility classes which is then added as dependency (with scope <test>) in the other components.\nOne other (quick & dirty) solution would be to create one single test component and put all the tests there, but I think this should only be used in a \"first throw\" and that we should integrate the real unit-tests in the corresponding components as soon as possible.", "attachment_id": null, "id": 177945, "creator": "pierre.viret@gmail.com", "time": "2014-09-17T20:46:51Z", "bug_id": 56397, "creation_time": "2014-09-17T20:46:51Z", "is_private": false}, {"count": 17, "tags": [], "bug_id": 56397, "attachment_id": null, "id": 177975, "time": "2014-09-19T15:00:29Z", "creator": "pierre.viret@gmail.com", "creation_time": "2014-09-19T15:00:29Z", "is_private": false, "text": "The use of filters for the maven-compiler-plugin in the pom is not optimal: in the IDE you see all the classes under the component, even if they are excluded through filters in pom. I don't think that we can work this out. So on my opinion we have to try to implement the svn externals for all modules even if it's painful."}, {"count": 18, "tags": [], "bug_id": 56397, "attachment_id": null, "id": 177982, "time": "2014-09-19T18:35:00Z", "creator": "pierre.viret@gmail.com", "creation_time": "2014-09-19T18:35:00Z", "is_private": false, "text": "Would it be possible for me to commit to the sandbox/trunk-maven-layout repository? I don't know how I can try & test the svn externals without being able to commit to the repository. This is due to the fact that one has to update the svn:external property, commit then perform an update to get the files checked out through the externals.\nWhat do you think? Do you have a solution for this?\nMaybe an alternative would be to create my own local svn repository so that I can commit there and import the head of trunk of the sandbox/tomcat-maven-layout directory there. But I fear that it would get messy and very difficult to synchronize my changes back to the official repository..."}, {"count": 19, "tags": [], "creator": "markt@apache.org", "is_private": false, "text": "(In reply to Pierre Viret from comment #18)\n> Would it be possible for me to commit to the sandbox/trunk-maven-layout\n> repository?\n\nNot until the dev community decides to offer you committership ;)\n\n> I don't know how I can try & test the svn externals without\n> being able to commit to the repository. This is due to the fact that one has\n> to update the svn:external property, commit then perform an update to get\n> the files checked out through the externals.\n> What do you think? Do you have a solution for this?\n\nYes. The restriction is that the directory on which the external is defined must be in svn. The property does not need to be checked in for the external to work. I suggest you create a patch that adds all the necessary empty directories to the existing structure. I (or another committer) can then commit it. With that in place you can experiment with externals.\n\n> Maybe an alternative would be to create my own local svn repository so that\n> I can commit there and import the head of trunk of the\n> sandbox/tomcat-maven-layout directory there. But I fear that it would get\n> messy and very difficult to synchronize my changes back to the official\n> repository...\n\nAgreed.\n\nOn the subject of IDEs and POM level filters, most IDEs allow you to filter out unwanted sources so we could provide sample IDE configs - like we do for the main Tomcat build - in a suitable location.", "id": 178019, "time": "2014-09-22T10:04:20Z", "bug_id": 56397, "creation_time": "2014-09-22T10:04:20Z", "attachment_id": null}, {"count": 20, "tags": [], "creator": "pierre.viret@gmail.com", "is_private": false, "text": "Created attachment 32044\npatch to be applied in tomcat_maven_layout created with \"svn diff\"\n\nI have created the necessary source directories and updated the svn:externals to select only the source files needed by each component. I can build the master project successfully in NetBeans.\n\nCan you please check & commit the patch?\n\nThe next step will be to create the structure & externals for the tests.\n\nI have met following issue:\n- tomcat-util / tomcat-util-scan: org.apache.tomcat.util.file is in both components as defined in the ant file patterns. As tomcat-util-scan depends on tomcat-util I propose to remove it from tomcat-util-scan.\n- tomcat-api / tomcat-dbcp: org/apache/tomcat/dbcp is in both components as defined in the ant file patterns. Is it necessary or should I remove it from tomcat-api?\n\nI was positively surprised with svn externals: it is possible to set the svn:externals property on a directory which I have simply added to svn, and then with svn update to populate it's content, even without having committed the directory. So I (unfortunately ;-) ) do not need to be able to commit to svn myself.", "id": 178038, "time": "2014-09-23T07:36:25Z", "bug_id": 56397, "creation_time": "2014-09-23T07:36:25Z", "attachment_id": 32044}, {"count": 21, "tags": [], "creator": "pierre.viret@gmail.com", "is_private": false, "text": "Created attachment 32072\nPatch for tomcat-maven-layout created with \"svn diff -x -u\"\n\nNew version of the patch. As the first patch was not committed yet this one can be committed directly. I hope there won't be any issue with the svn:externals because for now I get strange errors when I try to \"svn update\" the tomcat-maven-layout directory.\nI've mainly worked on tomcat-examples: this project generates the examples for the tomcat instance (exactly like what ant creates in output/build/webapps/examples). My next step will be to finish the implementation of the apache-tomcat project, which generates the whole working instance (output/build). I think that I will have some time today to do it.\n\nWith this actual implementation, no special configuration of the IDE is necessary: simply open the master project in NetBeans and you can build & work with all components immediately. I have not tested it with eclipse for now.", "id": 178211, "time": "2014-10-01T05:31:53Z", "bug_id": 56397, "creation_time": "2014-10-01T05:31:53Z", "attachment_id": 32072}, {"count": 22, "tags": [], "bug_id": 56397, "attachment_id": 32072, "id": 178212, "time": "2014-10-01T09:10:47Z", "creator": "markt@apache.org", "creation_time": "2014-10-01T09:10:47Z", "is_private": false, "text": "Comment on attachment 32072\nPatch for tomcat-maven-layout created with \"svn diff -x -u\"\n\nI do not believe that your current approach is viable. Calling svn up on an external is a relatively slow process. One external per module is just about OK. 30-40 externals per module is not."}, {"count": 23, "tags": [], "bug_id": 56397, "attachment_id": null, "is_private": false, "id": 178215, "time": "2014-10-01T14:06:38Z", "creator": "pierre.viret@gmail.com", "creation_time": "2014-10-01T14:06:38Z", "text": "I have seen that the update takes some time but it is difficult for me to say if this is really an issue or not, as the external definitions are not committed yet. \n\nOn one hand the update is slower, on the other hand there are advantages with this approach:\n- The file system is correct, we really have the files where they belong to --> all shell commands working on the source files (find / grep and so on) can be used without problem.\n- we don't need to care about IDE filters and configurations\n- we use the standard maven layout and no special configuration regarding sources is needed: this is a big advantage and could avoid problems with some plugins.\n- later, if we decide to move from ant to maven then we don't need to change the maven configurations and processing anymore.\n\nLet's not forget that this is just an experiment and that if, later, the maven layout is estimated to be a good thing then it would make sense to move the sources to the corresponding modules and the svn:externals would not be needed anymore.\n\nOMHO it makes sense to experiment using this approach as it is cleaner from a maven point of vue and it seems easyier to implement the build on the maven side. \n\nSo my proposal is to go one with this approach. If the feedback we get from the community is that the svn update is too slow, then we can always optimize this in a second step, but at the moment I think it is more important to get a maven build running. As soon as the svn:externals definitions are committed I will be able to test the svn updates and maybe I quickly come to your point of vue that this is too slow ;-)"}, {"count": 24, "tags": [], "creator": "pierre.viret@gmail.com", "is_private": false, "text": "I'm getting troubles with the svn:externals and the fact that my changes were never committed: I always got some svn errors like \"Path xyz has no committed revision\".\nDid you try to commit my patch?  As I didn't modify any \"real\" source but only the files in sandbox/trunk-maven-layout there is no risk that something get broken.", "id": 178267, "time": "2014-10-03T13:43:28Z", "bug_id": 56397, "creation_time": "2014-10-03T13:43:28Z", "attachment_id": null}, {"count": 25, "tags": [], "creator": "markt@apache.org", "is_private": false, "text": "No, your patch hasn't been applied.\n\nI won't be applying it as I don't believe externals alone are a viable solution. It is too slow to do svn up.", "id": 178269, "time": "2014-10-03T14:09:57Z", "bug_id": 56397, "creation_time": "2014-10-03T14:09:57Z", "attachment_id": null}, {"count": 26, "tags": [], "text": "OK I understand and can accept your point. I will try to implement it using so few externals as possible and upload a corresponding patch.", "attachment_id": null, "id": 178272, "creator": "pierre.viret@gmail.com", "time": "2014-10-03T14:33:14Z", "bug_id": 56397, "creation_time": "2014-10-03T14:33:14Z", "is_private": false}, {"count": 27, "tags": [], "text": "Created attachment 32077\npatch for tomcat-maven-layout: 2nd try\n\nIn this new patch I use so few svn:externals as possible and exclude the sources in the maven configuration if necessary. There is still work to do, but following is implemented:\n- master project in the root of tomcat-maven-layout directory: it can be used to build all the maven modules\n- many JAR components are implemented\n- the tomcat-extras-juli & adapters jars were implemented to show how we can relocate classes from external libraries\n\nI plan to perform following steps next week:\n- implement the web apps (module tomcat-webapps)\n- build a working instance (same as output/build with ant)\n- add the tests\n\nPlease let me know if there is any problem with the patch.", "attachment_id": 32077, "id": 178281, "creator": "pierre.viret@gmail.com", "time": "2014-10-03T21:30:48Z", "bug_id": 56397, "creation_time": "2014-10-03T21:30:48Z", "is_private": false}, {"count": 28, "tags": [], "text": "A few questions/comments on the proposed patch\n\n1. Why has the license header been removed from pom.xml?\n\n2. Every pom.xml file should have a license header.\n\n3. Why has the <url> element been removed from a number of pom files?\n\n4. Indentation is inconsistent. 2 spaces or 4 spaces (never tabs). Pick one and use it consistently.\n\n5. Why has <scope>test<scope/> been removed from the junit dependencies?", "attachment_id": null, "id": 178304, "creator": "markt@apache.org", "time": "2014-10-06T11:14:31Z", "bug_id": 56397, "creation_time": "2014-10-06T11:14:31Z", "is_private": false}, {"count": 29, "tags": [], "text": "Thank you for your feedback. Here my answers:\n\n1. Why has the license header been removed from pom.xml?\n2. Every pom.xml file should have a license header.\n--> I've just forgotten to copy it, I will fix this\n\n3. Why has the <url> element been removed from a number of pom files?\n--> as it is defined in the master project I think this was not necessary to define it redundantly in the sub-projects: it is automatically inherited. But if I execute \"mvm help:effective-pom\" in a sub-project it seems that the url from parent get automatically extended with the sub-project id (i.e. \"<url>http://tomcat.apache.org/tomcat-catalina</url>\" for tomcat-catalina sub-project). I will check this and insert the url again. \n\n4. Indentation is inconsistent. 2 spaces or 4 spaces (never tabs). Pick one and use it consistently.\n--> I will fix this\n\n5. Why has <scope>test<scope/> been removed from the junit dependencies?\n--> the scope test is defined per default in the master project DependencyManagement section for junit, so it is automatically inherited:\n            <dependency>\n                <groupId>junit</groupId>\n                <artifactId>junit</artifactId>\n                <version>4.11</version>\n                <scope>test</scope>\n            </dependency>\n\nI will fix the problems and upload a new patch tomorrow.", "attachment_id": null, "id": 178306, "creator": "pierre.viret@gmail.com", "time": "2014-10-06T15:33:26Z", "bug_id": 56397, "creation_time": "2014-10-06T15:33:26Z", "is_private": false}, {"count": 30, "tags": [], "bug_id": 56397, "attachment_id": null, "is_private": false, "id": 178322, "time": "2014-10-07T14:21:04Z", "creator": "markt@apache.org", "creation_time": "2014-10-07T14:21:04Z", "text": "Something to think about.\n\nTomcat might be moving to git. svn externals will no longer be available. How would you solve this then?"}, {"count": 31, "tags": [], "bug_id": 56397, "attachment_id": 32088, "id": 178324, "time": "2014-10-07T16:06:02Z", "creator": "pierre.viret@gmail.com", "creation_time": "2014-10-07T16:06:02Z", "is_private": false, "text": "Created attachment 32088\nPatch for tomcat-maven-layout\n\nHere a patch containing the whole maven hierarchy.\nThe build can be performed in this way:\n$ cd trunk-maven-layout\n$ mvn clean install\n$ cd apache-tomcat/target/apache-tomcat-8.0.13-SNAPSHOT-distrib/apache-tomcat-8.0.13-SNAPSHOT/bin/\n$ ./startup.sh\n\nThe server starts but if you open your browser with http://12.0.0.1:8080 you only get a white page: this is because the web apps are not ok for now, the rewriting of the config files is not correct.\n\nFollowing points are still opened:\n- fix the web apps \n- fix the apache-tomcat project until the server can be started without error\n- docs web apps: I have not implemented all the xslt transformations yet\n- tests: still not implemented yet.\n\nAbout git:\nI think there are solutions, but I have no experience with this for now.\nSee for instance: http://stackoverflow.com/questions/571232/svnexternals-equivalent-in-git\nDo you have an idea when tomcat might move to git?"}, {"count": 32, "tags": [], "creator": "markt@apache.org", "is_private": false, "text": "I have applied your patch. I had to apply some bits manually so apologies if any bits got lost.\n\nI'm done a simple test on my dev machine. svn up on the Maven layout takes ~2 minutes. svn up on /trunk takes 1-2 seconds. I remain concerned about the viability of this approach but I'm happy to keep applying patches if you are happy to continue.\n\nRegarding the move to git. Nothing is certain at this point. I'm not even sure that there is consensus amongst the committers to make the move at this point.", "id": 178367, "time": "2014-10-09T13:40:54Z", "bug_id": 56397, "creation_time": "2014-10-09T13:40:54Z", "attachment_id": null}, {"count": 33, "tags": [], "text": "Looks like tomcat-webapps/docs/pom.xml is missing", "attachment_id": null, "id": 178368, "creator": "markt@apache.org", "time": "2014-10-09T13:43:48Z", "bug_id": 56397, "creation_time": "2014-10-09T13:43:48Z", "is_private": false}, {"count": 34, "tags": [], "text": "Created attachment 32101\nFixes some bugs which broke the mvm build\n\nThis patch fixes some bugs: after applying it the master project should be successfully built.\n- tomcat-webapps/docs/pom.xml was not in the last patch (I think I did something wrong with svn): I have updated it to 'my' version.\n- commented out the module jdbc-pool from master project as it does not build yet : see https://issues.apache.org/bugzilla/show_bug.cgi?id=57005 where a patch is still waiting to be committed.\n\nAbout git: if it's not urgent I think I will first finish the implementation of the maven build, and afterwards I can try to find a solution for git (for instance using the mirror https://github.com/apache/tomcat.git).", "attachment_id": 32101, "id": 178388, "creator": "pierre.viret@gmail.com", "time": "2014-10-11T11:33:27Z", "bug_id": 56397, "creation_time": "2014-10-11T11:33:27Z", "is_private": false}, {"count": 35, "tags": [], "bug_id": 56397, "attachment_id": null, "is_private": false, "id": 178405, "time": "2014-10-13T09:32:48Z", "creator": "markt@apache.org", "creation_time": "2014-10-13T09:32:48Z", "text": "No need to think too much about git at the moment. There doesn't seem to be much interest in moving right now.\n\nPatche are all applied and the build completes.\n\nI don't see the startup scripts or the config files in Tomcat instance that gets created."}, {"count": 36, "tags": [], "creator": "pierre.viret@gmail.com", "is_private": false, "text": "Created attachment 32108\nPatch for tomcat-maven-layout created with \"svn diff -x -u\"\n\nThis patch contains following changes:\n- fix typo in name of dir apache-tomcat/src/main/resources\n- work on docs web app (the most files are generated but the content could not be tested yet)\n- apache-tomcat now generates the structure correctly (bin, conf, ...)\n\nThe server can be started but there are SEVERE errors: I suppose that some classes are missing somewhere in the jars.\n\nNext steps:\n- check every jars generated by maven if it contains all needed classes (compare with the ant build output)\n- fix the errors until the server can start correctly\n- implement the tests: maybe I should start with this step as it could show if some class is missing in some generated jar.", "id": 178422, "time": "2014-10-13T20:59:03Z", "bug_id": 56397, "creation_time": "2014-10-13T20:59:03Z", "attachment_id": 32108}, {"count": 37, "tags": [], "bug_id": 56397, "attachment_id": null, "is_private": false, "id": 178458, "time": "2014-10-14T19:37:34Z", "creator": "markt@apache.org", "creation_time": "2014-10-14T19:37:34Z", "text": "Patch applied. I still don't see the scripts or the conf directory being created."}, {"count": 38, "tags": [], "bug_id": 56397, "attachment_id": null, "id": 178484, "time": "2014-10-15T15:54:15Z", "creator": "pierre.viret@gmail.com", "creation_time": "2014-10-15T15:54:15Z", "is_private": false, "text": "Something went wrong with the patch: I had renamed the dir:\napache-tomcat/src/main/resoucres/\nTo :\napache-tomcat/src/main/resources\n\nbut maybe the \"svn mv\" was not contained in the patch?? Can you please try to \"svn mv\" the dir directly?"}, {"count": 39, "tags": [], "text": "That fixed it.\n\nIt looks like (from a quick glance at the stack traces) the problem is that the mbean-descriptor.xml files are not being included in the JARs. They need to appear in the same package as they do in the source tree.", "attachment_id": null, "id": 178485, "creator": "markt@apache.org", "time": "2014-10-15T16:07:49Z", "bug_id": 56397, "creation_time": "2014-10-15T16:07:49Z", "is_private": false}, {"count": 40, "tags": [], "bug_id": 56397, "attachment_id": 32113, "is_private": false, "id": 178491, "time": "2014-10-15T21:31:08Z", "creator": "pierre.viret@gmail.com", "creation_time": "2014-10-15T21:31:08Z", "text": "Created attachment 32113\npatch for tomcat-maven-layout created with \"svn diff -x -u\"\n\nThanks for your hint, you were right: this patch fixes this, the non-java files from the src dir are now added as resources.\nI had to add dummy files for logs & temp dirs to get created (seems assembly won't create empty dirs).\nNow the server can be started successfully!  The default web applications still do not work (some problem with the JSP), I will have to analyse this."}, {"count": 41, "tags": [], "creator": "markt@apache.org", "is_private": false, "text": "Great. The instance starts for me too.\n\nI suspect the issue with JSPs is that Jasper is not getting initialized.\n\nIf you look in trunk/res/META-INF you'll see various files that need to be packaged with the JARs. The important one here is, I suspect, Jasper's SCI.", "id": 178509, "time": "2014-10-16T14:00:55Z", "bug_id": 56397, "creation_time": "2014-10-16T14:00:55Z", "attachment_id": null}, {"count": 42, "tags": [], "bug_id": 56397, "attachment_id": 32120, "id": 178549, "time": "2014-10-17T14:52:00Z", "creator": "pierre.viret@gmail.com", "creation_time": "2014-10-17T14:52:00Z", "is_private": false, "text": "Created attachment 32120\npatch for tomcat-maven-layout created with \"svn diff -x -u\"\n\nThis new patch contains following fixes:\n- add the service configuration in META-INF from some jars (thanks Mark for the tip!)\n- fix tomcat-websocket svn:externals to import the correct java classes (it contained the api classes...)\n- implement a workaround for the problem with the empty logs & temp dirs\n\n--> now the tomcat server starts and the standard web-application is displayed quite correctly ! I haven't verified it yet but it looks nice ;-)\n\nNext steps:\n- verify the standard web-applications (f.i. manager)\n- implement the tests\n\nI'm off for 10 days for vacation and without my computer so you will hear from me again at the beginning of november :-)"}, {"count": 43, "tags": [], "bug_id": 56397, "attachment_id": null, "id": 178569, "time": "2014-10-17T19:38:34Z", "creator": "markt@apache.org", "creation_time": "2014-10-17T19:38:34Z", "is_private": false, "text": "Nice.\n\nThis passes a simple smoke test (WebSocket snake game).\n\nOne thing to think about when you get back is how to translate the version number filtering to Maven."}, {"count": 44, "tags": [], "creator": "pierre.viret@gmail.com", "is_private": false, "text": "Created attachment 32151\npatch for tomcat-maven-layout created with \"svn diff -x -u\"\n\nThis patch adds filtering for some webapp files so that the version number gets displayed in the standard tomcat web app.", "id": 178778, "time": "2014-10-27T21:50:10Z", "bug_id": 56397, "creation_time": "2014-10-27T21:50:10Z", "attachment_id": 32151}, {"count": 45, "tags": [], "creator": "markt@apache.org", "is_private": false, "text": "Patch applied. Many thanks.", "id": 178816, "time": "2014-10-29T10:09:36Z", "bug_id": 56397, "creation_time": "2014-10-29T10:09:36Z", "attachment_id": null}, {"count": 46, "tags": [], "bug_id": 56397, "attachment_id": 32229, "id": 179304, "time": "2014-11-26T15:33:40Z", "creator": "pierre.viret@gmail.com", "creation_time": "2014-11-26T15:33:40Z", "is_private": false, "text": "Created attachment 32229\npatch for tomcat-maven-layout created with \"svn diff -x -u\"\n\n- Updated the version of the poems to 9.0.0-SNAPSHOT\n- created tomcat-tests component containing all the tests\n- add a 'utils' artifact created by the web examples component and needed by the tests (for TestCookieFilter)\n\nI have tried to split the test into the components but it's quite complicated because of the dependencies. So I have simply added a new component with all the tests so that it is possible to start the tests using maven (one can select the tests to be run using -Dtest=xyz) or with the IDE.\nThis is not optimal yet but I think this is a good starting point."}, {"count": 47, "tags": [], "text": "Can you please check my last patch and commit it if it's ok?", "attachment_id": null, "id": 179784, "creator": "pierre.viret@gmail.com", "time": "2014-12-16T05:25:36Z", "bug_id": 56397, "creation_time": "2014-12-16T05:25:36Z", "is_private": false}, {"count": 48, "tags": [], "creator": "markt@apache.org", "is_private": false, "text": "Patch applied.\n\nSorry it took a while. I dropped this part of the source tree from my checkout because svn up was so slow. I now have a dedicated checkout for this.", "id": 179809, "time": "2014-12-16T23:51:29Z", "bug_id": 56397, "creation_time": "2014-12-16T23:51:29Z", "attachment_id": null}, {"count": 49, "tags": [], "bug_id": 56397, "attachment_id": null, "id": 183573, "time": "2015-06-16T21:08:45Z", "creator": "markt@apache.org", "creation_time": "2015-06-16T21:08:45Z", "is_private": false, "text": "This is in place (with no much interest for a while now) so as per comment #1 I'm closing this as LATER. We can resurrect this issue then next time the \"Why doesn't Tomcat move to Maven?\" thread kicks off on dev."}]