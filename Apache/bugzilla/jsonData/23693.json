[{"attachment_id": null, "tags": [], "bug_id": 23693, "text": "My javadoc task without a specific doclet works. Now, i try to use a custom \ndoclet and added the following lines to my javadoc task:\n\ndoclet=\"de.pt.MyDoclet\"\ndocletpath=\"${basedir}/prg/java/bin/mlib.jar\"\n\n(the values are correct, as otherwise i get a \" javadoc: Cannot find doclet \nclass de.icomps.BusinesssDoclet\" error message.).\n\nwhen i start the task i only get:\n\n---------------\n     [javadoc] Generating Javadoc\n     [javadoc] Javadoc execution\n     [javadoc] javadoc: invalid flag: -d\n     [javadoc] usage: javadoc [options] [packagenames] [sourcefiles] \n[classnames] [@files]\n     [javadoc] -overview <file>          Read overview documentation from HTML \nfile\n     [javadoc] -public                   Show only public classes and members\n     [javadoc] -protected                Show protected/public classes and \nmembers (default)\n     [javadoc] -package                  Show package/protected/public classes \nand members\n     [javadoc] -private                  Show all classes and members\n     [javadoc] -help                     Display command line options and exit\n     [javadoc] -doclet <class>           Generate output via alternate doclet\n     [javadoc] -docletpath <path>        Specify where to find doclet class \nfiles\n     [javadoc] -sourcepath <pathlist>    Specify where to find source files\n     [javadoc] -classpath <pathlist>     Specify where to find user class files\n     [javadoc] -exclude <pkglist>        Specify a list of packages to exclude\n     [javadoc] -subpackages <subpkglist> Specify subpackages to recursively load\n     [javadoc] -breakiterator            Compute 1st sentence with BreakIterator\n     [javadoc] -bootclasspath <pathlist> Override location of class files loaded\n     [javadoc] \t\t\t  by the bootstrap class loader\n     [javadoc] -source <release>         Provide source compatibility with \nspecified release\n     [javadoc] -extdirs <dirlist>        Override location of installed \nextensions\n     [javadoc] -verbose                  Output messages about what Javadoc is \ndoing\n     [javadoc] -locale <name>            Locale to be used, e.g. en_US or \nen_US_WIN\n     [javadoc] -encoding <name>          Source file encoding name\n     [javadoc] -J<flag>                  Pass <flag> directly to the runtime \nsystem\n     [javadoc] \n     [javadoc] 1 error\nBUILD SUCCESSFUL\n----------------\n\ni also tried to use a nested <doclet> element instead of <javadoc> attributs - \nwith the same result.", "count": 0, "id": 45271, "time": "2003-10-09T09:20:37Z", "creator": "mhilpert@gmx.de", "creation_time": "2003-10-09T09:20:37Z", "is_private": false}, {"count": 1, "tags": [], "text": "Strictly speaking -d is an option of the standard doclet, but it supported by\nso many doclets that Ant will pass it to your javadoc invocation whenever you\nspecify the destdir attribute.\n\nThe doclet you use doesn't seem to support that argument, so you must not specify\ndestdir (but use whatever your doclet wants in additionalparam.", "is_private": false, "id": 45296, "creator": "bodewig@apache.org", "time": "2003-10-09T14:45:13Z", "bug_id": 23693, "creation_time": "2003-10-09T14:45:13Z", "attachment_id": null}]