[{"count": 0, "tags": [], "bug_id": 29122, "attachment_id": null, "text": "suexec should be able to check certain conditions before invoking a child. I \nwould like to be able to check\n\n - number of already running CGI (or PHP-as-CGI) instances\n - load average of the system\n - memory usage\n\nIf some user-definable values are exceed, suexec should NOT invoke the required \nscript, but instead printing out a \"System overload, please try again later\" \nmessage.", "id": 57702, "time": "2004-05-20T15:11:03Z", "creator": "floeff@arcor.de", "creation_time": "2004-05-20T15:11:03Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 29122, "attachment_id": null, "is_private": false, "id": 57706, "time": "2004-05-20T15:29:52Z", "creator": "slive@apache.org", "creation_time": "2004-05-20T15:29:52Z", "text": "This stuff wouldn't be too hard to add to suexec.  But, unfortunately, it would\nviolate a basic suexec design principal: keep everything as simple as possible.\n Adding complexity to an suid program brings too many risks.\n\nSo my opinion is \"wontfix\", but I'll leave it to someone else to confirm."}, {"count": 2, "tags": [], "bug_id": 29122, "attachment_id": null, "is_private": false, "id": 57720, "time": "2004-05-20T16:13:42Z", "creator": "trawick@apache.org", "creation_time": "2004-05-20T16:13:42Z", "text": "I also agree with WONTFIX.\n\nBut I would point out that the submitter could take suexec code and\nenhance (and validate) it to perform desired feature.  Just use\nthat locally enhanced suexec instead of the standard Apache one.\n"}, {"count": 3, "tags": [], "bug_id": 29122, "attachment_id": null, "is_private": false, "id": 57721, "time": "2004-05-20T16:22:21Z", "creator": "floeff@arcor.de", "creation_time": "2004-05-20T16:22:21Z", "text": "What about implementing another config directive in Apache to support the CGI\nlimitation?"}, {"count": 4, "tags": [], "bug_id": 29122, "attachment_id": null, "is_private": false, "id": 57734, "time": "2004-05-20T20:43:05Z", "creator": "jorton@redhat.com", "creation_time": "2004-05-20T20:43:05Z", "text": "Having a config directive to allow mod_cgi refuse to fork() new children if the\nload average is high doesn't sound entirely non-sensical."}, {"count": 5, "tags": [], "bug_id": 29122, "attachment_id": null, "is_private": false, "id": 57856, "time": "2004-05-21T18:37:09Z", "creator": "trawick@apache.org", "creation_time": "2004-05-21T18:37:09Z", "text": ">Having a config directive to allow mod_cgi refuse to fork() \n>new children if the load average is high doesn't sound \n>entirely non-sensical.\n\nor use another hook to let other modules make such decisions\n"}, {"count": 6, "tags": [], "bug_id": 29122, "text": "I'd appreciate any functionality to achieve that, no matter if it is via an \nexternal module or directly via mod_cgi. If you know of any module already \nsupporting this, please let me know ;-)", "id": 57867, "time": "2004-05-21T20:30:00Z", "creator": "floeff@arcor.de", "creation_time": "2004-05-21T20:30:00Z", "is_private": false, "attachment_id": null}, {"count": 7, "tags": [], "creator": "nick@webthing.com", "text": "If a mod_loadaverage could set something in notes or subprocess_env, then not\nonly mod_cgi but anyone else concerned about load might find it useful.  That\nobviously requires a round tuit.\n\nFrom a mod_cgi POV, all we should consider is a directive to set a threshold and\nreturn \"too busy\" if exceeded.  Actually checking loadaverage belongs elsewhere.", "id": 57972, "time": "2004-05-24T17:36:35Z", "bug_id": 29122, "creation_time": "2004-05-24T17:36:35Z", "is_private": false, "attachment_id": null}, {"count": 8, "tags": [], "text": "I have created mod_load_average to solve this problem:\nhttp://force-elite.com/~chip/archives/mod_load_average-0.1.0-test.tar.bz2\n(includes easy configure/make/make install...)\n\nThe Main C File:\nhttp://svn.force-elite.com/mod_load_average/trunk/src/mod_load_average.c\n\nIt uses the semi-portable(*BSD, Linux, Solaris.. others?) getloadavg(...)\nfunction to determine if the request should be serviced.  The module has two\noperating Modes.\n\nFirst, it has an absolute max load average, if this is reached, all requests\nwill be rejected with a 503.\n\nThe 2nd mode uses the handler type to determine the maximum load under which\nthey will be served.  This enables you for example to disable PHP or CGI under\nhigh loads, but still serve images and plain html.\n\nTested on Linux 2.6.6 and FreeBSD-5.2.1 w/ HTTPd 2.1.0-HEAD.\n\nIf the ASF is interested, I am willing to donate the module.\n\nThanks to Nick Kew on IRC for feedback on the implementation.\n\n-Paul Querna", "attachment_id": null, "id": 58187, "creator": "chip@force-elite.com", "time": "2004-05-27T09:10:53Z", "bug_id": 29122, "creation_time": "2004-05-27T09:10:53Z", "is_private": false}, {"count": 9, "tags": [], "creator": "nick@webthing.com", "text": "Paul's module is to my mind the ideal fix.  It's better than what I had in mind\nin my previous post, in that it's simple and fully self-contained.  The only\nthing it doesn't offer is a per-dir limit, which IMO would cause more confusion\n(and overhead) than it's worth.\n\nPeople using platforms without getloadavg() - alternatives?", "id": 58200, "time": "2004-05-27T12:16:55Z", "bug_id": 29122, "creation_time": "2004-05-27T12:16:55Z", "is_private": false, "attachment_id": null}, {"count": 10, "tags": [], "bug_id": 29122, "attachment_id": null, "is_private": false, "id": 58221, "time": "2004-05-27T16:40:19Z", "creator": "floeff@arcor.de", "creation_time": "2004-05-27T16:40:19Z", "text": "Hey Paul,\n\nthanks a lot for the contribution, I will have a look at it as soon as possible\n(i.e. as soon as my test machine has booted up!) :-)\n\nSome ideas/thoughts, what would be nice:\n\n- configurable in contexts, i.e. different settings\n  - per virtual site\n  - per filename\n  - per suexec user\n  - per directory\n  - ...\n- displaying a self-made \"error\" (overload) page\n\nWhat do you think about that?\n\nThanks!\nFlorian"}, {"count": 11, "tags": [], "bug_id": 29122, "attachment_id": null, "text": "> - configurable in contexts, i.e. different settings\n>  - per virtual site\n>  - per filename\n>  - per directory\n\nThat should be possible just by setting the context to ACCESS_CONF.\n\n>  - per suexec user\n\nis equal to VH.\n\n- displaying a self-made \"error\" (overload) page\n\nErrorDocument 503\n\nAll in all I like it. Perhaps a * for \"every handler\" would be nice. And one\nneeds to document, that using own ErrorDocuments runs over a handler as well :-)", "id": 58222, "time": "2004-05-27T16:50:42Z", "creator": "nd@perlig.de", "creation_time": "2004-05-27T16:50:42Z", "is_private": false}, {"count": 12, "tags": [], "bug_id": 29122, "attachment_id": null, "text": "> That should be possible just by setting the context to ACCESS_CONF.\n\nI have no idea how to do that. :-( Can you help? ;-)\n\n>> - per suexec user\n> is equal to VH.\n\nAgreed. Sorry, my fault.\n\n> ErrorDocument 503\n\nErrorDocument 503 would cover all 503 errors. However, if I only limit PHP and\nCGI scripting, I'd like to have a special 503 site just for that, like \"CGI\nlimit reached\".", "id": 58223, "time": "2004-05-27T17:14:45Z", "creator": "floeff@arcor.de", "creation_time": "2004-05-27T17:14:45Z", "is_private": false}, {"count": 13, "tags": [], "bug_id": 29122, "attachment_id": null, "text": "503 errors are thrown nowhere else in httpd, so that should be not that problem.\nAdditionally you could limit it to the scope of the LoadAvg* stuff.\n\nregarding ACCESS_CONF:\n\njust replace RSRC_CONF in the command structure by ACCESS_CONF and hope that it\njust works :-)", "id": 58230, "time": "2004-05-27T18:13:54Z", "creator": "nd@perlig.de", "creation_time": "2004-05-27T18:13:54Z", "is_private": false}, {"count": 14, "tags": [], "bug_id": 29122, "attachment_id": null, "text": "Unfortunately, I cannot compile it :-(\nI receive:\n\nMaking all in src\nmake[1]: Entering directory `/root/mod_load_average-0.1.0-test/src'\nif /bin/sh ../libtool --mode=compile gcc -DHAVE_CONFIG_H -I. -I. -I../include  \n -Wall -g -O2 -pthread -DLINUX=2 -D_REENTRANT -D_XOPEN_SOURCE=500 -D_BSD_SOURCE\n-D_SVID_SOURCE -D_GNU_SOURCE  -I/usr/local/apache2/include \n-I/usr/local/apache2/include   -I/usr/local/apache2/include  -g -O2 -MT\nlibmod_load_average_la-mod_load_average.lo -MD -MP -MF\n\".deps/libmod_load_average_la-mod_load_average.Tpo\" -c -o\nlibmod_load_average_la-mod_load_average.lo `test -f 'mod_load_average.c' || echo\n'./'`mod_load_average.c; \\\nthen mv -f \".deps/libmod_load_average_la-mod_load_average.Tpo\"\n\".deps/libmod_load_average_la-mod_load_average.Plo\"; else rm -f\n\".deps/libmod_load_average_la-mod_load_average.Tpo\"; exit 1; fi\n gcc -DHAVE_CONFIG_H -I. -I. -I../include -Wall -g -O2 -pthread -DLINUX=2\n-D_REENTRANT -D_XOPEN_SOURCE=500 -D_BSD_SOURCE -D_SVID_SOURCE -D_GNU_SOURCE\n-I/usr/local/apache2/include -I/usr/local/apache2/include\n-I/usr/local/apache2/include -g -O2 -MT\nlibmod_load_average_la-mod_load_average.lo -MD -MP -MF\n.deps/libmod_load_average_la-mod_load_average.Tpo -c mod_load_average.c  -fPIC\n-DPIC -o .libs/libmod_load_average_la-mod_load_average.o\nmod_load_average.c: In function `mod_load_average_handler':\nmod_load_average.c:51: error: `APLOG_WARN' undeclared (first use in this function)\nmod_load_average.c:51: error: (Each undeclared identifier is reported only once\nmod_load_average.c:51: error: for each function it appears in.)\nmake[1]: *** [libmod_load_average_la-mod_load_average.lo] Error 1\nmake[1]: Leaving directory `/root/mod_load_average-0.1.0-test/src'\nmake: *** [all-recursive] Error 1", "id": 58234, "time": "2004-05-27T19:25:13Z", "creator": "floeff@arcor.de", "creation_time": "2004-05-27T19:25:13Z", "is_private": false}, {"count": 15, "tags": [], "creator": "chip@force-elite.com", "text": "Fixed:\nhttp://force-elite.com/~chip/archives/mod_load_average-0.1.0-test2.tar.bz2", "id": 58237, "time": "2004-05-27T19:32:00Z", "bug_id": 29122, "creation_time": "2004-05-27T19:32:00Z", "is_private": false, "attachment_id": null}, {"count": 16, "tags": [], "bug_id": 29122, "attachment_id": null, "is_private": false, "id": 58244, "time": "2004-05-27T20:24:54Z", "creator": "floeff@arcor.de", "creation_time": "2004-05-27T20:24:54Z", "text": "A small glitch found:\n\n***********************************************\n\n   Please read the documentation at\n   http://mod-auth.sourceforge.net/docs/ for\n   details on configuration of this module\n\n***********************************************\n\nWrong link, eh? ;-)"}, {"count": 17, "tags": [], "text": "Compilation works fine now, thanks a lot! The patch came real fast, whew!\nWill test the module now :)", "attachment_id": null, "id": 58245, "creator": "floeff@arcor.de", "time": "2004-05-27T20:25:22Z", "bug_id": 29122, "creation_time": "2004-05-27T20:25:22Z", "is_private": false}, {"count": 18, "tags": [], "text": "The module seems to work fine, thanks a lot for the great job! I owe you one! :-)\n\nThe only glitch is that with the ErrorDocument directive, you receive\n\"Additionally, a 503 Service Temporarily Unavailable error was encountered while\ntrying to use an ErrorDocument to handle the request.\" - of course ;-)", "attachment_id": null, "id": 58247, "creator": "floeff@arcor.de", "time": "2004-05-27T20:37:09Z", "bug_id": 29122, "creation_time": "2004-05-27T20:37:09Z", "is_private": false}, {"count": 19, "tags": [], "bug_id": 29122, "attachment_id": null, "text": "My main problem still persists. With a \"hard reload\" (i.e. simultaneously\nreloading a lot of times), I still can produce a very high load with PHP as CGI.\n\nI guess the problem is that the PHP processes lay around \"dead\". Now, after\ntesting the great new module (thanks again!), it cannot be the load alone. It\nseems that too many forked children let Apache \"forget\" that PHP has been\ninvoked and these processes go crazy...\n\nAnyone has an idea on how to solve this really annoying PHP problem?", "id": 58249, "time": "2004-05-27T20:45:17Z", "creator": "floeff@arcor.de", "creation_time": "2004-05-27T20:45:17Z", "is_private": false}, {"count": 20, "tags": [], "bug_id": 29122, "attachment_id": null, "is_private": false, "id": 58272, "time": "2004-05-28T01:53:54Z", "creator": "chip@force-elite.com", "creation_time": "2004-05-28T01:53:54Z", "text": "New Version:\n\nhttp://force-elite.com/~chip/archives/mod_load_average-0.1.0-test2.tar.bz2\n\nIt now will DECLINE any 503 Requests, allowing you to have a custom ErrorDocument.\n\n-Paul Querna"}, {"count": 21, "tags": [], "text": "Wrong URL in the last Post:\nhttp://force-elite.com/~chip/archives/mod_load_average-0.1.0-test3.tar.bz2\n\n*sigh*", "attachment_id": null, "id": 58273, "creator": "chip@force-elite.com", "time": "2004-05-28T01:54:25Z", "bug_id": 29122, "creation_time": "2004-05-28T01:54:25Z", "is_private": false}, {"count": 22, "tags": [], "bug_id": 29122, "attachment_id": null, "text": "Feature request fixed by my external module. Nothing for Apache to do.", "id": 59080, "time": "2004-06-11T01:53:43Z", "creator": "chip@force-elite.com", "creation_time": "2004-06-11T01:53:43Z", "is_private": false}, {"count": 23, "tags": [], "bug_id": 29122, "attachment_id": null, "is_private": false, "id": 59086, "time": "2004-06-11T06:25:54Z", "creator": "nd@perlig.de", "creation_time": "2004-06-11T06:25:54Z", "text": "I'm not sure if such a module would be general enough to include in the core. If\nyou still want to donate it, you might start a proposal on dev@... (yes I know ;-)\n\nThanks for your great work!"}]