[{"attachment_id": null, "tags": [], "bug_id": 57377, "text": "This ticket references some older bugs and changes related to them as below:\n- https://issues.apache.org/bugzilla/show_bug.cgi?id=55017 - Ability to provide an RMI bind address (so that the RMI server can be selectively bound to loopback only)\n\n- https://issues.apache.org/bugzilla/show_bug.cgi?id=56039 - This is a symptom to my problem, but was fixed and works fine.\n\nHere is the problem:\nThe standard JMX properties (http://docs.oracle.com/javase/7/docs/technotes/guides/management/agent.html, http://docs.oracle.com/javase/7/docs/technotes/guides/management/agent.html#gdevf) are different for enabling SSL/TLS for the RMI registry (where jmxrmi is registered) and the JMX RMI server (which carries the JMX operations), being com.sun.management.jmxremote.registry.ssl and com.sun.management.jmxremote.ssl respectively.\nWhen 55017 was done, the RMI server factories thus created were used in creating the RMI registry (http://svn.apache.org/viewvc/tomcat/trunk/java/org/apache/catalina/mbeans/JmxRemoteLifecycleListener.java?revision=1498340&view=markup, line number 274)\nThis works fine as long as we are not using SSL and I guess this is one of the reasons Alexey Noskov said \"rmiBindAddress incompatible with rmiSSL\".\n\nThis side effect was noticed in bug# 56039 and was fixed to allow RMI registry clients to use com.sun.jndi.rmi.factory.socket.\n\nRecommendation:\nWould it be possible to have separate RMIServerSocketFactory for JMX/RMI and RMI registry, one dictated by com.sun.management.jmxremote.ssl (which results in the rmiSSL flag) and the other by com.sun.management.jmxremote.registry.ssl.\n\nThis way the agent will be more compliant and we'd still have the ability to leave the RMI registry non SSL (which is to get the JMX/RMI connection stub).\n\nWe can also fix the \"rmiBindAddress incompatible with rmiSSL\" problem by creating a custom SslRMIServerSocketFactory (basically extending the one in JDK and re-implementing the createServerSocket method to use the given rmiBindAddress.\n\nI'd be happy to do these changes, and can provide the changed version of this file, if this request seems reasonable. May be a patch as well if I learn SVN quickly.\n\nPS: The whole reason I reached here is that we in our products use custom JMX authentication and SSL/TLS implementation. We implement the jmx.remote.protocol.provider.pkgs approach to inject our SSL factories for JMXConnnectorServer. This recently broke because we have no control over how the server socket for RMI registry is created. We ended up setting com.sun.management.jmxremote.ssl to false to avoid this JMXRemoteLifecycleListener to stop doing SSL anywhere.", "count": 0, "id": 179879, "time": "2014-12-19T19:50:08Z", "creator": "rsanwal@gmail.com", "creation_time": "2014-12-19T19:50:08Z", "is_private": false}, {"count": 1, "tags": [], "creator": "markt@apache.org", "text": "(In reply to Ravi Sanwal from comment #0)\n> Would it be possible to have separate RMIServerSocketFactory for JMX/RMI and\n> RMI registry, one dictated by com.sun.management.jmxremote.ssl (which\n> results in the rmiSSL flag) and the other by\n> com.sun.management.jmxremote.registry.ssl.\n\nThat seems like a reasonable request.\n\n> This way the agent will be more compliant and we'd still have the ability to\n> leave the RMI registry non SSL (which is to get the JMX/RMI connection stub).\n> \n> We can also fix the \"rmiBindAddress incompatible with rmiSSL\" problem by\n> creating a custom SslRMIServerSocketFactory (basically extending the one in\n> JDK and re-implementing the createServerSocket method to use the given\n> rmiBindAddress.\n> \n> I'd be happy to do these changes, and can provide the changed version of\n> this file, if this request seems reasonable. May be a patch as well if I\n> learn SVN quickly.\n\nA patch in diff -u format is preferred. Failing that the new version based on the latest trunk version would be fine.", "id": 179900, "time": "2014-12-20T19:52:51Z", "bug_id": 57377, "creation_time": "2014-12-20T19:52:51Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "text": "Ping. Is there an ETA for a patch or updated file?", "is_private": false, "bug_id": 57377, "id": 181479, "time": "2015-03-03T20:14:30Z", "creator": "markt@apache.org", "creation_time": "2015-03-03T20:14:30Z", "attachment_id": null}, {"count": 3, "tags": [], "text": "Fixed in trunk, 8.0.x (for 8.0.21 onwards) and in 7.0.x (for 7.0.60 onwards).", "attachment_id": null, "bug_id": 57377, "id": 181767, "time": "2015-03-14T22:32:29Z", "creator": "markt@apache.org", "creation_time": "2015-03-14T22:32:29Z", "is_private": false}]