[{"count": 0, "tags": [], "bug_id": 5895, "attachment_id": null, "text": "I've implemented trivial HttpSessionListener, which contains hashtable for active sesions:\n\npublic class MySessions implements HttpSessionListener {\n\tprivate static Hashtable _sessions = new Hashtable();\n\tpublic void sessionCreated(HttpSessionEvent event) {\n\t\t_sessions.put(event.getSession().getId(),event.getSession());\n\t}\n\tpublic void sessionDestroyed(HttpSessionEvent event) {\n\t\t_sessions.remove(event.getSession().getId());\n\t}\n\tpublic static Hashtable getSessions() {\n\t\treturn _sessions;\n\t}\n}\n\nI'm using FileStore and PersistenceManager and MySessions.sessionCreated() is called twice for \neach request.getSession() (with different session ID key, because two new elements are stored to \nthe Hashtable).\nAnother problem is calling the HttpSessionListener.sessionDestroyed(event). 565 invalidatet \nsessions are stored in my Hashtable after 12 hours. So not for all sessions MySessions received \nthe sessionDestroyed(event) event.\nThe bug  should be fixed by rewriting the setID() os StandardSession and also FileStore have to \nbe rewritted.", "id": 9699, "time": "2002-01-17T00:42:33Z", "creator": "tapik@buchtovi.cz", "creation_time": "2002-01-17T00:42:33Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 5895, "text": "Got the same problem with TC 4.0.3. I do not use FileStore and PersistenceManager. ", "id": 11486, "time": "2002-03-05T21:42:29Z", "creator": "mjmare@webtothemax.com", "creation_time": "2002-03-05T21:42:29Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 5895, "attachment_id": null, "id": 16298, "time": "2002-05-17T02:54:10Z", "creator": "remm@apache.org", "creation_time": "2002-05-17T02:54:10Z", "is_private": false, "text": "This has been tested successfully against milestone 4.1.2."}]