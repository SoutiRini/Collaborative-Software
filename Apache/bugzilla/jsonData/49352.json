[{"count": 0, "tags": [], "creator": "marcus.klein@open-xchange.com", "attachment_id": null, "text": "We use apache with mod_proxy_ajp to connect it through AJPv13 to a servlet container. We discovered an issue with this under certain load situations or apache configurations.\n\nThe most urgent think is Apache sends multiple AJP forward requests without waiting for the response. An essential thing of AJPv13 connections are its control of data flow. Quote from the mod_proxy_ajp documentation:\n\n\"Once a connection is assigned to a particular request, it will not be used for any others until the request-handling cycle has terminated. In other words, requests are not multiplexed over connections. This makes for much simpler code at either end of the connection, although it does cause more connections to be open at once.\"\n\nI will attach a TCP capture showing the multiple send requests. This capture only contains 3 request cycles of a single TCP connection. The first request cycle is fine. After this first fine request cycle Apache sends 2 forward requests followed by their request body. After the first of that 2 requests Apache has to wait for the response of the servlet container which is not done. The packet size of the 2 requests seem to be so small that their data is kept in some TCP stack or network buffers causing the second request not to be blocked on its write.\n\nAll requests show pretty clearly that they are login requests. The response will set the secret cookies in the client and contain the session information in the body and therefore authorize the client for a session. Additionally to the multiply send forward request the responses to those requests are not sent to the correct client. We discovered those responses to be sent to any client. This causes that any client may now be authorized to some session definitely not belonging to the user in front of that client. So this issue causes a security problem. I did not report this as a security problem because it depends on the AJP server if those duplicated requests are all responded.", "id": 137179, "time": "2010-05-28T06:17:43Z", "bug_id": 49352, "creation_time": "2010-05-28T06:17:43Z", "is_private": false}, {"count": 1, "text": "Created attachment 25490\nRelated network capture\n\nThis occurs with an Apache httpd 2.2.9-10+lenny7 (Debian Lenny) with default configuration. We discovered the issue on a 16-core SMP machine.", "bug_id": 49352, "is_private": false, "id": 137180, "time": "2010-05-28T06:21:29Z", "creator": "martin.braun@open-xchange.com", "creation_time": "2010-05-28T06:21:29Z", "tags": [], "attachment_id": 25490}, {"count": 2, "attachment_id": null, "bug_id": 49352, "is_private": false, "id": 137182, "time": "2010-05-28T07:20:50Z", "creator": "rpluem@apache.org", "creation_time": "2010-05-28T07:20:50Z", "tags": [], "text": "There were several fixes to mod_proxy_ajp since 2.2.9. Please retest with 2.2.15 to check if the problem still exists."}, {"count": 3, "tags": [], "bug_id": 49352, "is_private": false, "text": "I discovered now the problem with Apache 2.2.16 on Debian Sid. I am preparing a new network capture. The problem is similar to the one described in the currently attached network capture. Instead of giving the AJPv13 container the request body a new forward request is sent.\n\nI will try to reproduce this with Apache 2.2.17 on ArchLinux (the distribution with mostly no patches on upstream releases). I will then attach the network capture with that Apache.", "id": 143654, "time": "2011-01-26T06:02:42Z", "creator": "marcus.klein@open-xchange.com", "creation_time": "2011-01-26T06:02:42Z", "attachment_id": null}, {"count": 4, "tags": [], "creator": "marcus.klein@open-xchange.com", "attachment_id": null, "text": "I will close this report for now because I am not able to reproduce it at the moment.", "id": 144013, "time": "2011-02-07T04:40:25Z", "bug_id": 49352, "creation_time": "2011-02-07T04:40:25Z", "is_private": false}]