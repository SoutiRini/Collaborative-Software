[{"count": 0, "tags": [], "text": "An excludes attribute in a javac call will work properly.  But when that\nexcludes is moved into a nested <src> element, the includes fails in a strange way.\nExamples:\n\n======================================\nWORKING Version with attribute \"excludes\"\n======================================\nAnt project file snippet\n========================\n...\n  <target name=\"game\" depends=\"init\" description=\"Builds the Game development\nversion\">\n      <mkdir dir=\"${testbuild}\"/>\n      <mkdir dir=\"${build}\"/>\n      <javac destdir=\"${build}\" deprecation=\"on\" debug=\"${debug}\"\noptimize=\"${optimize}\" source=\"1.4\" target=\"1.4\"\n              excludes=\"poi/**/*\">\n         <src><pathelement location=\"src\"/> </src>\n         <src><pathelement location=\"generated\"/> </src>\n         <classpath refid=\"project.class.path\"/>\n      </javac>\n   </target>\n...\n===================\nant output snippet\n===================\n\nfileset: Setup scanner in dir /home/cafgdev/CAFG/src with patternSet{ includes:\n[] excludes: [poi/**/*] }    [javac]\ncom/gametable/games/cafg/client/AbilityEditor.java omitted as\ncom/gametable/games/cafg/client/AbilityEditor.class is up to date.\n    [javac] com/gametable/games/cafg/client/AttackEditor.java omitted as\ncom/gametable/games/cafg/client/AttackEditor.class is up to date.\n\n...\nfileset: Setup scanner in dir /home/cafgdev/CAFG/generated with patternSet{\nincludes: [] excludes: [poi/**/*] }\n...\n==========================================\n=====\nFAILS\n=====\nproject file snippet\n--------------------\n...\n  <target name=\"game\" depends=\"init\" description=\"Builds the Game development\nversion\">\n      <mkdir dir=\"${testbuild}\"/>\n      <mkdir dir=\"${build}\"/>\n      <javac destdir=\"${build}\" deprecation=\"on\" debug=\"${debug}\"\noptimize=\"${optimize}\" source=\"1.4\" target=\"1.4\">\n         <src><fileset dir=\"src\" excludes=\"poi/**/*\"/></src>\n         <src><pathelement location=\"src\"/> </src>\n         <src><pathelement location=\"generated\"/> </src>\n         <classpath refid=\"project.class.path\"/>\n      </javac>\n   </target>\n...\n==================================================\nant output  (note the repeated \"fileset\" output below\n  which does not occur in the successful compile)\n==================================================\n...\nfileset: Setup scanner in dir /home/cafgdev/CAFG/src with patternSet{ includes:\n[] excludes: [poi/**/*] }fileset: Setup scanner in dir /home/cafgdev/CAFG/src\nwith patternSet{ includes: [] excludes: [poi/**/*] }\nBUILD FAILED\n/home/cafgdev/CAFG/build.xml:47:\n/home/cafgdev/CAFG/src/com/gametable/games/cafg/client/AbilityEditor.java is not\na directory.\n        at\norg.apache.tools.ant.types.AbstractFileSet.getDirectoryScanner(AbstractFileSet.java:352)\n        at\norg.apache.tools.ant.taskdefs.MatchingTask.getDirectoryScanner(MatchingTask.java:186)\n        at org.apache.tools.ant.taskdefs.Javac.execute(Javac.java:751)\n        at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:275)\n        at org.apache.tools.ant.Task.perform(Task.java:364)\n        at org.apache.tools.ant.Target.execute(Target.java:341)\n        at org.apache.tools.ant.Target.performTasks(Target.java:369)\n        at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1216)\n        at org.apache.tools.ant.Project.executeTarget(Project.java:1185)\n        at\norg.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:40)\n        at org.apache.tools.ant.Project.executeTargets(Project.java:1068)\n        at org.apache.tools.ant.Main.runBuild(Main.java:668)\n        at org.apache.tools.ant.Main.startAnt(Main.java:187)\n        at org.apache.tools.ant.launch.Launcher.run(Launcher.java:246)\n        at org.apache.tools.ant.launch.Launcher.main(Launcher.java:67)\n\n=============================", "attachment_id": null, "bug_id": 37148, "id": 81336, "time": "2005-10-18T19:25:38Z", "creator": "jbroglio@comcast.net", "creation_time": "2005-10-18T19:25:38Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 37148, "attachment_id": null, "text": "Same for me,\n\n<javac \n\texcludes=\"....\">\n\t     <src path=\"${src}\"/>\n\t     <src ....\n\njust ignores the excludes part.", "id": 84039, "time": "2005-12-28T16:45:11Z", "creator": "juergen@jwi.de", "creation_time": "2005-12-28T16:45:11Z", "is_private": false}, {"count": 2, "tags": [], "text": "The error is not that strange\nAssuming out have a directory layout:\n  src/org/acme/A.java\n  src/poi/C.java\n  gen/org/acme/plane/B.java\n\n<javac srcdir=\"src\" destdir=\"classes\"/>\ncorresponds to the command line:\n\njavac -sourcepath src -d classes src/org/acme/A.java src/poi/C.java\n\n<javac destdir=\"classes\">\n   <src path=\"src\"/>\n   <src path=\"gen\"/>\n</java>\ncorresponds to:\njavac -d classes \\\n      -sourcepath src src/org/acme/A.java src/poi/C.java \\\n      -sourcepath gen gen/org/acme/plane/B.java\n\n<javac destdir=\"classes\" excludes=\"poi/**/*\">\n   <src path=\"src\"/>\n   <src path=\"gen\"/>\n</java>\ncorresponds to:\njavac -d classes \\\n      -sourcepath src src/org/acme/A.java \\\n      -sourcepath gen gen/org/acme/plane/B.java\n\nand \n<javac destdir=\"classes\">\n   <src><fileset dir=\"src\" excludes=\"poi/**/*\"/></src>\n   <src path=\"src\"/>\n   <src path=\"gen\"/>\n</java>\ncorresponds to something like:\njavac -sourcepath src/org/acme/A.java ..\n\n\"src/org/acme/A.java\" is not a directory, hence the error message.\n\n\n\n  \n   ", "is_private": false, "bug_id": 37148, "id": 93608, "time": "2006-09-14T21:52:49Z", "creator": "peterreilly@apache.org", "creation_time": "2006-09-14T21:52:49Z", "attachment_id": null}, {"count": 3, "tags": [], "creator": "circumlocuter@yahoo.com", "attachment_id": null, "text": "This bug is not fixed. The way you reproduce it is to reference an excluded\nclass in the non-excluded classes.\n\nThere are 2 bugs here...\n\nOne is your build script. You forgot to put a compile version of that referenced\nclass in your build script.\n\nTwo is ant. Ant is compiling and classpath-including something that is not\nsupposed to be included at all.", "id": 95019, "time": "2006-10-20T14:02:21Z", "bug_id": 37148, "creation_time": "2006-10-20T14:02:21Z", "is_private": false}, {"count": 4, "tags": [], "creator": "circumlocuter@yahoo.com", "attachment_id": 19036, "id": 95020, "time": "2006-10-20T14:06:11Z", "bug_id": 37148, "creation_time": "2006-10-20T14:06:11Z", "is_private": false, "text": "Created attachment 19036\ndemonstrates the bug, in ant 1.6.5\n\nto go with my comment, about how to cause the bug in the newest ant release\n(but the solution is not always as simple as adding the class in your\nclasspath... it doesn't work in a production build i am working on)"}, {"count": 5, "tags": [], "creator": "mbenson@apache.org", "attachment_id": null, "text": "The REOPENED bug seems to describe something different than the original.  As\nfor Stuff.java being recompiled in the REOPENED stuff, that would be javac for\nyou.  It is a greedy compiler.  What would you expect a compiler to do when you\nrely on an excluded class?  Fail the compile?  If you use a non-greedy compiler\n(gcj or kjc last we knew) you might see the behavior you are (?) looking for.", "id": 95021, "time": "2006-10-20T14:22:27Z", "bug_id": 37148, "creation_time": "2006-10-20T14:22:27Z", "is_private": false}, {"count": 6, "tags": [], "creator": "ddevienne@gmail.com", "attachment_id": null, "id": 95028, "time": "2006-10-20T15:50:29Z", "bug_id": 37148, "creation_time": "2006-10-20T15:50:29Z", "is_private": false, "text": "FYI: You can prevent <javac> to be greedy by specifying an explicit empty \nsourcepath, as in <javac sourcepath=\"\" ...>. --DD"}]