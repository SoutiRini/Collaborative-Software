[{"attachment_id": null, "tags": [], "bug_id": 38665, "text": "In a case where ProxyPassReverse receives 302 - Found, and a method is changed\nfrom http to https the Proxy always sticks to http. As a consequence, browser\nends up in a loop always querying the same location. Illustrated bellow.\n\nBrowser--------------------------Proxy(fe)------------------------Backend\n  |-------http:/fe/b-end/----------->|                             \n                                     |-------http://be/----------->|\n                                     |<--(302)--http://be/Login/---|\n  |<--(302)--http://fe/b-end/Login/--|\n  |-----http://fe/b-end/Login/------>|\n                                     |-----http://be/Login/------->|\n                                     |<--(302)-https://be/Login/---|\n  |<--(302)--http://fe/b-end/Login/--|\n  |-----http://fe/b-end/Login/------>| ... and so on, and so on...\n\nThere are no error messages in logs that are worth mentioning.\n\nNot sure if this is wanted behaviour or a bug, but without a proxy in between\neverything works like a charm.", "count": 0, "id": 85834, "time": "2006-02-15T22:55:08Z", "creator": "kpeharda@yahoo.com", "creation_time": "2006-02-15T22:55:08Z", "is_private": false}, {"count": 1, "attachment_id": null, "creator": "wrowe@apache.org", "is_private": false, "id": 87059, "time": "2006-03-21T09:52:00Z", "bug_id": 38665, "creation_time": "2006-03-21T09:52:00Z", "tags": [], "text": "Because this is a reverse proxy, it's -your- responsibility to proxy the\nappropriate locations to an https: auth on the backend (or, perhaps proxy\nall requests to this backend server as https:)\n\nThere's no way for Apache to know this, proxy backend connections are not\nstateful, the redirect is propogated to the client, and the server cannot\ntell the client to perform such a connection across to the backend."}, {"count": 2, "tags": [], "text": "> There's no way for Apache to know this, proxy backend connections are not\n> stateful, the redirect is propogated to the client, and the server cannot\n> tell the client to perform such a connection across to the backend.\n\nI don't see why would a state be needed here. The reverse proxy receives the\nlocation update from the backend, which states that the next request should be\nhttps and not http. \n\nIf apache would not rewrite the \"http(s)://\" portion of the URL (change method\non behalf of browser), everything would work like a charm. I believe this might\nbe in collision with note in the section 10.3.3 of the RFC 2616:\n\n      \"Note: RFC 1945 and RFC 2068 specify that the client is not allowed\n      to change the method on the redirected request.  However, most\n      existing user agent implementations treat 302 as if it were a 303\n      response, performing a GET on the Location field-value regardless\n      of the original request method. The status codes 303 and 307 have\n      been added for servers that wish to make unambiguously clear which\n      kind of reaction is expected of the client.\"\n\n But, it appears to me that even the RFC is considering the behaviour as common\npractice, so I don't see why should a proxy insist on the rule to be strictly\nfollowed, especially if it tends to break an application.", "is_private": false, "bug_id": 38665, "id": 87079, "time": "2006-03-21T20:12:36Z", "creator": "kpeharda@yahoo.com", "creation_time": "2006-03-21T20:12:36Z", "attachment_id": null}]