[{"count": 0, "tags": [], "bug_id": 12707, "text": "When trying to use a Component bean with <jsp:useBean id=\"comp\" scope=\"request\"\nclass=\"test.Component\" /> and getting a property with <jsp:getProperty\nname=\"comp\"  property=\"data\" /> then Jasper fails in compiling the JSP page ... \n\nIf I recompile test.Component to test.component (component with a small c) and\nchanges my jsp page to reflect this then it works as supposed ...\n\nI have placed 2 zipped web-apps at http://lambaek-net.dk/temp/jsp/ the one with\na large C in Component (doesn't work) and the other with a small c (works !) ... \n\nIt seems like Tomcat has a problem with the Component class name with a large c\n... I have tested booth web-apps in Caucho-resin and they both work !", "id": 22956, "time": "2002-09-16T21:02:34Z", "creator": "ole@lambaek.net", "creation_time": "2002-09-16T21:02:34Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "creator": "jan.luehe@sun.com", "attachment_id": null, "text": "This looks more like a problem with the underlying JDK (J2SE 1.4.1).\n\nThe attached program uses Introspector.getBeanInfo() to get the BeanInfo\nassociated with the class specified on the command line, and then enumerates the\nPropertyDescriptor[] returned by BeanInfo.getPropertyDescriptors().\n\nWhen I specify \"test.Component\" as the class to be introspected, I am getting\nthe following wrong result, which is identical to introspecting\n\"java.awt.Component\":\n\n  java Introspect test.Component\n  class: test.Component\n  pd.length: 7\n  0:\n  public java.awt.Color java.awt.Component.getBackground()\n  class java.awt.Color\n  1:\n  public boolean java.awt.Component.isEnabled()\n  boolean\n  2:\n  public boolean java.awt.Component.isFocusable()\n  boolean\n  3:\n  public java.awt.Font java.awt.Component.getFont()\n  class java.awt.Font\n  4:\n  public java.awt.Color java.awt.Component.getForeground()\n  class java.awt.Color\n  5:\n  public java.lang.String java.awt.Component.getName()\n  class java.lang.String\n  6:\n  public boolean java.awt.Component.isVisible()\n  boolean\n\nThis would explain why you are getting this compile-time exception when\naccessing test-error/test.jsp:\n\n  org.apache.jasper.JasperException: Cannot find any information on property\n'data' in a bean of type 'test.Component'\n\nHowever, when i specify \"test.component\" (with a lower-case 'c') as\nthe class to be introspected, I get the expected result:\n\n  java Introspect test.component\n  class: test.component\n  pd.length: 2\n  0:\n  public final native java.lang.Class java.lang.Object.getClass()\n  class java.lang.Class\n  1:\n  public java.lang.String test.component.getData()\n  class java.lang.String\n\nwhich is why accessing test-work/test.jsp works just fine.\n\nStill investigating ...", "id": 23265, "time": "2002-09-23T19:48:21Z", "bug_id": 12707, "creation_time": "2002-09-23T19:48:21Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 12707, "text": "Created attachment 3181\nIntrospection program", "id": 23266, "time": "2002-09-23T19:49:52Z", "creator": "jan.luehe@sun.com", "creation_time": "2002-09-23T19:49:52Z", "is_private": false, "attachment_id": 3181}, {"count": 3, "tags": [], "creator": "jan.luehe@sun.com", "is_private": false, "id": 23280, "creation_time": "2002-09-24T00:57:08Z", "time": "2002-09-24T00:57:08Z", "bug_id": 12707, "text": "This is a known problem that is scheduled to be fixed in J2SE 1.4.2.\n\nThis problem occurs only when introspecting a bean named \"Component\".\n\nBy default, the Introspector adds \"sun.beans.infos\" to the search path\nfor explicit BeanInfos. \"sun.beans.infos\" contains a single class:\n\"ComponentBeanInfo\".\n\nWhen introspecting a class, the Introspector checks to see if an\nexplicit BeanInfo for the class exists in the search path. If the\nclass being introspected is named \"Component\", the Introspector finds\na match: \"sun.beans.infos.ComponentBeanInfo\" in its search path and\nuses it, even though \"sun.beans.infos.ComponentBeanInfo\" really is\nintended as the BeanInfo for \"java.awt.Component\".\n\nThe existing bug reports on this problem mention 2 workarounds: \n\n- Set the BeanInfo search path to an empty array, as in:\n\n    Introspector.setBeanInfoSearchPath(new String[] { });\n\n  This workaround would have to be implemented by Jasper.\n\n- Tag library authors may implement their own explicit \"ComponentBeanInfo\"\n  class and place it in the same package as their \"Component\" class.\n\nSince this is a known problem in the underlying Java runtime that is\ngoing to be fixed in the upcoming J2SE 1.4.2 release, and for which a\nworkaround exists that may be implemented by tag library authors, we\nare not going to implement the workaround in Jasper.\n\n ", "attachment_id": null}]