[{"count": 0, "tags": [], "creator": "trawick@apache.org", "text": "apr_atomic.c issues reported to the mailing list\n\nSee:\n\nhttp://mail-archives.apache.org/mod_mbox/apr-dev/201404.mbox/%3C535ACDE0.6050608@gmail.com%3E\n\nhttp://mail-archives.apache.org/mod_mbox/httpd-dev/201410.mbox/%3CCAL7zx_dRuagUxSAJ7h62ddJpgihmX7Kq7sdUQK_JVRPKn%3Dk39Q%40mail.gmail.com%3E", "id": 178994, "time": "2014-11-06T15:12:33Z", "bug_id": 57191, "creation_time": "2014-11-06T15:12:33Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 57191, "text": "FWIW, I've been testing using the patch from the first mail without issues (http://mail-archives.apache.org/mod_mbox/apr-dev/201404.mbox/raw/%3c535ACDE0.6050608@gmail.com%3e/2).", "id": 179067, "attachment_id": null, "creator": "Chaosed0@gmail.com", "creation_time": "2014-11-12T14:38:53Z", "time": "2014-11-12T14:38:53Z", "is_private": false}, {"count": 2, "tags": [], "creator": "gls@gknw.net", "attachment_id": 32574, "id": 181784, "time": "2015-03-15T19:31:00Z", "bug_id": 57191, "creation_time": "2015-03-15T19:31:00Z", "is_private": false, "text": "Created attachment 32574\npatch for apr_atomic"}, {"count": 3, "tags": [], "creator": "gls@gknw.net", "attachment_id": null, "id": 181785, "time": "2015-03-15T19:32:19Z", "bug_id": 57191, "creation_time": "2015-03-15T19:32:19Z", "is_private": false, "text": "Attached is my proposal.\n\nLeave the x64 case alone, it seems  fine as is. I'd like to preserve the cast to long * for win32. Now, at adress the note about VC6 and old API's which is why the problem code in VS2013 is there.\n\nThe old API is basically what came with VC6 out of the box. The old VC6 API will not compile APR anyway (thanks to an update of apr_ldap sometime in the past requiring a newer version of ldap. So this note is a moot point anymore IMO.\n\nPatch is against trunk, should be fine for 1.5 & 1.6 branches.\n\nUnless anyone can see something wrong, I'd like to commit this prior to apr-1.5.next."}, {"attachment_id": null, "tags": [], "bug_id": 57191, "text": ">The old API is basically what came with VC6 out of the box. The old VC6 API >will not compile APR anyway (thanks to an update of apr_ldap sometime in the >past requiring a newer version of ldap. So this note is a moot point anymore >IMO.\n\nDoes this simply mean:\n\n* VC6 compatibility isn't lost; this particular bit of code will require a newer SDK than was provided with VC6 out of the box, and there are various reasons you'd already have a newer SDK anyway (IPv6, apr-util's LDAP, maybe something else)\n\nAny idea what level of SDK is required, for CHANGES?\n\nThis whole set of code is essentially one-liners.  What about\n\n#if (defined(_M_IA64) || defined(_M_AMD64))\n\nfull function implementations\n\n#elif (new-enough SDK)\n\nfull function implementations\n\n#else\n\nold code that would have been used before (supporting old toolchains), replaced in trunk and 1.6.x branches with #error Upgrade your SDK\n\n#endif\n\nThen we punt on adding a prerequisite now to build APR 1.5.next, but we don't keep the old junk alive much longer.", "count": 4, "id": 181837, "time": "2015-03-17T12:14:00Z", "creator": "trawick@apache.org", "creation_time": "2015-03-17T12:14:00Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 57191, "attachment_id": null, "text": ">* VC6 compatibility isn't lost; this particular bit of code will require a\n>newer SDK than was provided with VC6 out of the box, and there are various\n>reasons you'd already have a newer SDK anyway (IPv6, apr-util's LDAP, maybe\n>something else). Any idea what level of SDK is required, for CHANGES? \n\nSorry for the mess,  I was being disturbed by someone while I was writing it.\n\nNo, VC6 compatibility is not lost. As for the minimum SDK, that is a good question. The Minimum supported Windows versions looking up just one of these functions is Windows XP/Windows Server 2003. So quite possibly just the one of the 2002 SDKs will work. I know that 2003 R2 works, and works with LDAP. I feel that it is a good enough place to set the bar.\n\n>#else\n>\n>old code that would have been used before (supporting old toolchains), replaced\n>in trunk and 1.6.x branches with #error Upgrade your SDK\n>\n>#endif\n>\n>Then we punt on adding a prerequisite now to build APR 1.5.next, but we don't\n>keep the old junk alive much longer. \n\nHere is the problem, I seem incapable of finding a way to figure out which SDK is in use short of looking in the Windows Registry and then only on newer SDKs than what is needed. There seems to be no magic #define in them stating their version that I can find or even Google up. Looking for _WINBASE_ is no magic wand as winbase.h is in VC6. \n\nThat leaves only targeting the _MSC_VER which if set low enough I'm fine with and keep the \"stale win32 API\" kludge. It has worked for us all the way up to SDK8, which VC6 probably cannot use. Should the problem exists with VC7/7.1 also (I have no clue), we can just move the bar up on the next apr release or simply start at VC8 and change the defined(__MINGW32__) lines;\n\n#elif defined(__MINGW32__) || (defined(_MSC_VER) && _MSC_VER > 1310)\n\nCome to think of it, this may be the best option yet.", "id": 181848, "time": "2015-03-17T21:15:45Z", "creator": "gls@gknw.net", "creation_time": "2015-03-17T21:15:45Z", "is_private": false}, {"text": "Patch posted above;\n\nCommitted to trunk in r1675751\nCommitted to 1.5 in r1675752\nCommitted to 1.6 in r1675753", "tags": [], "bug_id": 57191, "attachment_id": null, "count": 6, "id": 182609, "time": "2015-04-24T03:34:27Z", "creator": "gls@gknw.net", "creation_time": "2015-04-24T03:34:27Z", "is_private": false}, {"count": 7, "tags": [], "bug_id": 57191, "attachment_id": null, "text": "fixed in 1.5.2, to be announced today", "id": 182721, "time": "2015-04-29T14:17:04Z", "creator": "trawick@apache.org", "creation_time": "2015-04-29T14:17:04Z", "is_private": false}]