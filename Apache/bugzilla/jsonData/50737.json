[{"count": 0, "tags": [], "creator": "jon@jonericson.com", "attachment_id": null, "text": "On Tomcat 6.0.20 a .war file can be deployed just fine on an IBM iSeries (System i) at V6R1 of the OS.\n\nAfter installing Tomcat 6.0.29 (and 6.0.30 and 6.0.32), .war files no longer deploy.  See the stack trace at the bottom of this post.\n\nOn a Windows/7 machine this error does not occur with these Tomcat releases.  On OS400 (i5/OS) this does not happen at 6.0.20.  This error only occurs on the iSeries at Tomcat version 6.0.29+ (it may have started to occur between 6.0.20 and 6.0.29).  Note that it is the same .war file that is being deployed to each of these environments.\n\n              ---- Tomcat ----\n              6.0.20    6.0.32\n            +--------+---------+\nIBM iSeries |  OK    |  ERROR  |\n            +--------+---------|\nWindows/7   |  OK    |   OK    |\n            +------------------+\n\nIn troubleshooting, to make sure this is not an installation/configuration error the Tomcat 6.0.20 zip file was downloaded from the Apache site and re-installed on the iSeries.  The deploy works as before.  At 6.0.29, 6.0.30, and 6.0.32, the deploy produces the following error:\n\n\nFeb 8, 2011 2:52:07 PM org.apache.juli.logging.DirectJDKLog error\nSEVERE: ContainerBase.addChild: start: \nLifecycleException:  Error initializaing :  java.lang.IllegalArgumentException: The archive [jar:file:/apache/apache-tomcat-6.0.32/webapps/shopatron.war!/] is malformed and will be ignored: an entry contains an illegal path [META-INF/]\n\tat java.lang.Throwable.<init>(Throwable.java:181)\n\tat java.lang.Exception.<init>(Exception.java:29)\n\tat org.apache.catalina.LifecycleException.<init>(LifecycleException.java:80)\n\tat org.apache.catalina.core.StandardContext.start(StandardContext.java:4450)\n\tat org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:799)\n\tat org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:779)\n\tat org.apache.catalina.core.StandardHost.addChild(StandardHost.java:601)\n\tat org.apache.catalina.startup.HostConfig.deployWAR(HostConfig.java:943)\n\tat org.apache.catalina.startup.HostConfig.deployApps(HostConfig.java:563)\n\tat org.apache.catalina.startup.HostConfig.check(HostConfig.java:1397)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:575)\n\tat org.apache.tomcat.util.modeler.BaseModelMBean.invoke(BaseModelMBean.java:297)\n\tat com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.invoke(DefaultMBeanServerInterceptor.java:836)\n\tat com.sun.jmx.mbeanserver.JmxMBeanServer.invoke(JmxMBeanServer.java:761)\n\tat org.apache.catalina.manager.ManagerServlet.check(ManagerServlet.java:1500)\n\tat org.apache.catalina.manager.HTMLManagerServlet.doPost(HTMLManagerServlet.java:252)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:637)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:717)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n\tat org.apache.catalina.filters.CsrfPreventionFilter.doFilter(CsrfPreventionFilter.java:186)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:563)\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:298)\n\tat org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:859)\n\tat org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:588)\n\tat org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:489)\n\tat java.lang.Thread.run(Thread.java:619)\nFeb 8, 2011 2:52:07 PM org.apache.juli.logging.DirectJDKLog error\nSEVERE: Error deploying web application archive shopatron.war\njava.lang.IllegalStateException: ContainerBase.addChild: start: LifecycleException:  Error initializaing :  java.lang.IllegalArgumentException: The archive [jar:file:/apache/apache-tomcat-6.0.32/webapps/shopatron.war!/] is malformed and will be ignored: an entry contains an illegal path [META-INF/]\n\tat java.lang.Throwable.<init>(Throwable.java:196)\n\tat java.lang.Exception.<init>(Exception.java:41)\n\tat java.lang.RuntimeException.<init>(RuntimeException.java:43)\n\tat java.lang.IllegalStateException.<init>(IllegalStateException.java:38)\n\tat org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:803)\n\tat org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:779)\n\tat org.apache.catalina.core.StandardHost.addChild(StandardHost.java:601)\n\tat org.apache.catalina.startup.HostConfig.deployWAR(HostConfig.java:943)\n\tat org.apache.catalina.startup.HostConfig.deployApps(HostConfig.java:563)\n\tat org.apache.catalina.startup.HostConfig.check(HostConfig.java:1397)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:575)\n\tat org.apache.tomcat.util.modeler.BaseModelMBean.invoke(BaseModelMBean.java:297)\n\tat com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.invoke(DefaultMBeanServerInterceptor.java:836)\n\tat com.sun.jmx.mbeanserver.JmxMBeanServer.invoke(JmxMBeanServer.java:761)\n\tat org.apache.catalina.manager.ManagerServlet.check(ManagerServlet.java:1500)\n\tat org.apache.catalina.manager.HTMLManagerServlet.doPost(HTMLManagerServlet.java:252)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:637)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:717)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n\tat org.apache.catalina.filters.CsrfPreventionFilter.doFilter(CsrfPreventionFilter.java:186)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:563)\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:298)\n\tat org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:859)\n\tat org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:588)\n\tat org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:489)\n\tat java.lang.Thread.run(Thread.java:619)\n\n=====\n\nLet me know if I can do anything to help support this fix.\n- Jon", "id": 144065, "time": "2011-02-08T17:59:01Z", "bug_id": 50737, "creation_time": "2011-02-08T17:59:01Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 50737, "text": "That message is \"expandWar.illegalPath\" in org.apache.catalina.startup.ExpandWar. \n\nThere are two places where it is checked there. Basically, it is \nif (!expandedFile.getCanonicalPath().startsWith( ))\ncheck.\n\nYou will have to test what getCanonicalPath() returns for those paths on that server and why the test fails.", "id": 144071, "time": "2011-02-09T01:16:00Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2011-02-09T01:16:00Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 50737, "text": "This looks like a JVM bug at this point. I think the best we can do is add some debug logging to help track this down. If I add the looging to Tomcat 7, can you build Tomcat 7.0.x from svn and test?", "id": 144194, "time": "2011-02-11T10:43:31Z", "creator": "markt@apache.org", "creation_time": "2011-02-11T10:43:31Z", "is_private": false, "attachment_id": null}, {"count": 3, "text": "I modified the ExpandWar class to spit out the failed comparison values in the validate method right before the exception is thrown.  After stuffing the modified class back into the Catalina.jar and testing the deployment again, I could see  the problem appears to be with with case of the value of the root folder being returned by the getCononicalPath() method.\n\nI am currently working with IBM support on this issue, and will post back once we have a definitive answer.  There is a theory as to the cause and we are in the process of verifying it.  I will definitely post back here when we have a solid answer.\n\nbtw - Konstantin's comment about the ExpandWar class really helped put me on the right track - thank you!", "bug_id": 50737, "attachment_id": null, "id": 144200, "time": "2011-02-11T11:24:22Z", "creator": "jon@jonericson.com", "creation_time": "2011-02-11T11:24:22Z", "tags": [], "is_private": false}, {"count": 4, "text": "The problem occurs when Tomcat (on the iSeries / System i / AS400) is started with a command line that has different case values than where the file system resides.\n\nWe configured the IBM System i to start Tomcat with the following QShell command:\n\nqsh cmd('/Apache/apache-tomcat-6.0.32/bin/startup.sh')\n\nYet the real name where Tomcat resides is:\n\n/apache/apache-tocmat-6.0.32/bin/startup.sh\n\nDeployment fails when they are not equal, even though Tomcat is running.\n\nIn ExpandWar, when it compares the canonical paths, the expandedFile.getCononicalPath() value is the value that was used to start Tomcat, and the canonicalDocBasePrefix is set to the value of where the .jar file entries reside on the file system.\n\n/Apache/apache-tomcat-6.0.32/bin/startup.sh != \n/apache/apache-tomcat-6.0.32/bin/startup.sh\n\nPreviously we were using Tomcat 6.0.20, which did not have this validation in class ExpandWar.  On hosts that do not have case sensitive file systems, should the path names all be resolved to lower case before this check?\n\nWORK AROUND:  On our system, we changed the command string that starts Tomcat to be exactly the same, case-for-case, as the directory in which it resides.  When this is done, deployment works fine.\n\nThank you for your help.\n\n- Jon", "bug_id": 50737, "attachment_id": null, "id": 144208, "time": "2011-02-11T14:51:27Z", "creator": "jon@jonericson.com", "creation_time": "2011-02-11T14:51:27Z", "tags": [], "is_private": false}, {"count": 5, "text": "That looks like a JVM bug. The canonical path should be be using the 'real' (lower case in your case) path.", "bug_id": 50737, "attachment_id": null, "id": 144395, "time": "2011-02-17T19:04:58Z", "creator": "markt@apache.org", "creation_time": "2011-02-17T19:04:58Z", "tags": [], "is_private": false}]