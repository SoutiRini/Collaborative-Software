[{"count": 0, "tags": [], "bug_id": 41743, "text": "If I do a graceful restart, any children in keepalive will not exit until they\nexit due to keepalive timeout/maxrequests or are killed.\n\nI tested it, and a child in keepalive will keep running after the graceful until\nkilled manually, or the keep alive timeout or maxrequests limits are hit.\n\nGraceful should avoid killing a current request, but keepalive connections may\nbe killed at any time when inactive; it should kill a child when it is not\ncurrently servicing a request.\n\nIf I make a change to httpd.conf and do a graceful, and test in my browser, I\nget the behavior specified by the old version of httpd.conf until the child\nexits - this makes debugging difficult and means I need to wait an excessive\namount of time before changes take effect. Depending on what I am doing on the\nserver - I might have to wait before proceeding to prevent users from getting\nbad/missing content, etc.", "id": 99948, "time": "2007-03-01T15:20:07Z", "creator": "ftlofaro@yahoo.com", "creation_time": "2007-03-01T15:20:07Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "creator": "Dmytro.Fedonin@sun.com", "attachment_id": null, "text": "(In reply to comment #0)\n\n> Graceful should avoid killing a current request, but keepalive connections may\n> be killed at any time when inactive; it should kill a child when it is not\n> currently servicing a request.\n> \nIt is not true. Some modules keep their state with connection. See bug# 41109\nfor instance.\nBTW, if You do graceful on production You need to wait any way.", "id": 104372, "time": "2007-06-13T08:25:07Z", "bug_id": 41743, "creation_time": "2007-06-13T08:25:07Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 41743, "attachment_id": null, "id": 143608, "time": "2011-01-24T21:19:37Z", "creator": "covener@gmail.com", "creation_time": "2011-01-24T21:19:37Z", "is_private": false, "text": "The prefork version of ap_graceful_stop_signalled is always false:\n\nint ap_graceful_stop_signalled(void)\n{\n    /* not ever called anymore... */\n    return 0;\n}\n\nWhereas worker overloads it to mean any kind of graceful exit is happening.  The core in 2.2.x uses this callback to determine if it should  do keepalive before committing the headers.\n\nThis appears to be resolved in trunk by using another API."}, {"count": 3, "tags": [], "bug_id": 41743, "attachment_id": null, "id": 143616, "time": "2011-01-25T08:35:12Z", "creator": "covener@gmail.com", "creation_time": "2011-01-25T08:35:12Z", "is_private": false, "text": "via users@ may not be fixed in trunk prefork, needs testing"}, {"count": 4, "tags": [], "bug_id": 41743, "attachment_id": null, "id": 143685, "time": "2011-01-26T20:02:18Z", "creator": "andrew.punch@247realmedia.com", "creation_time": "2011-01-26T20:02:18Z", "is_private": false, "text": "Steps are:\n1. Configure apache to use:\n   - prefork mpm\n   - KeepAlive On\n   - KeepAliveTimeout 60\n   - MaxKeepAliveRequests 0\n\n2. Save ps output. e.g: ( while true; do date; ps -Hfg `cat httpd.pid`; sleep 1 ; done ) > ps.log\n\n3. Run script: keepalive.py <hostname>\n\n4. Send USR1 to the parent process e.g. sudo kill -USR1 `cat\nhttpd.pid`; date\n\n5. Observe in ps.log that all the child processes exit, except for one. New\nchild process will start\n\n6. sudo netstat -tp will indicate that the python script is connected the the\none child process that did not exit\n\n7. Leave the system for 15 minutes or longer\n\n8. The one child process will still not exit (check ps.log and netstat -tp)\n\n9. Stop keepalive.py e.g. using ctrl+c\n\n10. Observe that the one child process will exit once keepalive.py disconnects"}, {"text": "Created attachment 26556\nkeepalive.py - Python script to keep an apache process alive indefinitely by using the keepalive issue", "tags": [], "creator": "andrew.punch@247realmedia.com", "attachment_id": 26556, "count": 5, "id": 143687, "time": "2011-01-26T20:05:42Z", "bug_id": 41743, "creation_time": "2011-01-26T20:05:42Z", "is_private": false}, {"count": 6, "tags": [], "creator": "andrew.punch@247realmedia.com", "attachment_id": null, "text": "Observed on Redhat Enterprise Linux 5.5", "id": 143688, "time": "2011-01-26T20:07:50Z", "bug_id": 41743, "creation_time": "2011-01-26T20:07:50Z", "is_private": false}, {"count": 7, "tags": [], "creator": "andrew.punch@247realmedia.com", "attachment_id": null, "text": "ap_graceful_stop_signalled() in http_core.c still calls ap_graceful_stop_signalled() in 2.2.X trunk.", "id": 143815, "time": "2011-01-30T23:03:40Z", "bug_id": 41743, "creation_time": "2011-01-30T23:03:40Z", "is_private": false}, {"text": "ap_process_http_async_connection() in http_core.c still calls ap_graceful_stop_signalled() in 2.2.X trunk.", "tags": [], "creator": "andrew.punch@247realmedia.com", "attachment_id": null, "count": 8, "id": 143816, "time": "2011-01-30T23:04:08Z", "bug_id": 41743, "creation_time": "2011-01-30T23:04:08Z", "is_private": false}, {"count": 9, "tags": [], "bug_id": 41743, "attachment_id": 26584, "id": 143843, "time": "2011-01-31T20:08:10Z", "creator": "andrew.punch@247realmedia.com", "creation_time": "2011-01-31T20:08:10Z", "is_private": false, "text": "Created attachment 26584\nPatch to solve this bug - based on head of 2.2.x subversion branch"}, {"count": 10, "tags": [], "bug_id": 41743, "text": "The fix for this on the trunk was r645434, which replaced use of ap_graceful_stop_signalled() with ap_mpm_query().\n\nThis does look insufficient to fix the bug for prefork, since the prefork signal handler does not change mpm_state (prefork.c:sig_term).", "id": 143861, "time": "2011-02-01T11:27:47Z", "creator": "jorton@redhat.com", "creation_time": "2011-02-01T11:27:47Z", "is_private": false, "attachment_id": null}, {"count": 11, "tags": [], "bug_id": 41743, "attachment_id": null, "id": 143877, "time": "2011-02-01T18:57:24Z", "creator": "andrew.punch@247realmedia.com", "creation_time": "2011-02-01T18:57:24Z", "is_private": false, "text": "Which of these alternatives do you prefer:\n1. Move ahead with my current patch\n2. I modify prefork.c so the signal handler changes mpm_state"}, {"count": 12, "attachment_id": 26598, "bug_id": 41743, "text": "Created attachment 26598\nPatch to solve this bug - based on head of 2.2.x subversion branch, including correctly updating mpm_state", "id": 143942, "time": "2011-02-02T20:45:50Z", "creator": "andrew.punch@247realmedia.com", "creation_time": "2011-02-02T20:45:50Z", "tags": [], "is_private": false}, {"count": 13, "tags": [], "bug_id": 41743, "text": "Created attachment 26599\nPatch to solve this bug - based on head of 2.2.x subversion branch, including correctly updating mpm_state", "id": 143944, "time": "2011-02-02T20:51:06Z", "creator": "andrew.punch@247realmedia.com", "creation_time": "2011-02-02T20:51:06Z", "is_private": false, "attachment_id": 26599}, {"count": 14, "tags": [], "creator": "andrew.punch@247realmedia.com", "attachment_id": 26600, "text": "Created attachment 26600\nPatch to solve this bug - based on head of trunk (r1066631), including correctly updating mpm_state", "id": 143945, "time": "2011-02-02T20:52:11Z", "bug_id": 41743, "creation_time": "2011-02-02T20:52:11Z", "is_private": false}, {"text": "The two patches that have been attached to this bug use the approaches outlined below.\n\nTRUNK\n=====\n\n1. Set the mpm_state to AP_MPMQ_STOPPING\n\n\n2.2.x BRANCH\n============\n\n1. Set the mpm_state to AP_MPMQ_STOPPING\n2. Return the correct value from ap_graceful_stop_signalled()\n\nI considered rewriting http_core.c and http_protocol.c in 2.2.x to use ap_mpm_query(). However third party modules may use ap_graceful_stop_signalled(), so it needed to be fixed anyway, and I didn't want to risk breaking code in http_core and http_protocol that was working well. \n\n*All* other mpms support ap_graceful_stop_signalled() in 2.2.x, except Netware.\n\n\nOTHER MPMS\n==========\n\nI had a quick check through other 2.2.x MPMs and noticed that the Netware MPM appears to have the same issue as prefork. I am not a netware expert, so it might be good to have someone check that out.", "tags": [], "creator": "andrew.punch@247realmedia.com", "attachment_id": null, "count": 15, "id": 143946, "time": "2011-02-02T21:11:01Z", "bug_id": 41743, "creation_time": "2011-02-02T21:11:01Z", "is_private": false}, {"count": 16, "tags": [], "creator": "jorton@redhat.com", "attachment_id": null, "text": "Thanks a lot for the patches, Andrew.\n\nI tweaked the trunk patch slightly -\n\n static void just_die(int sig)\n {\n+    mpm_state = AP_MPMQ_STOPPING;\n     clean_child_exit(0);\n\nwas redundant since clean_child_exit sets mpm_state anyway.\n\nCommitted to trunk in r1068389", "id": 144051, "time": "2011-02-08T08:48:32Z", "bug_id": 41743, "creation_time": "2011-02-08T08:48:32Z", "is_private": false}, {"count": 17, "tags": [], "bug_id": 41743, "text": "Created attachment 26623\ntweaked patch for 2.2.x\n\nSlightly tweaked version of 2.2.x patch for review.", "id": 144053, "time": "2011-02-08T10:33:04Z", "creator": "jorton@redhat.com", "creation_time": "2011-02-08T10:33:04Z", "is_private": false, "attachment_id": 26623}, {"count": 18, "attachment_id": null, "bug_id": 41743, "text": "My quick testing confirms the latest trunk (r1068671), which includes the patch. fixes the problem.\n\nAs mentioned by Joe the 2.2.x branch patch is still waiting.", "id": 144069, "time": "2011-02-08T23:10:56Z", "creator": "andrew.punch@247realmedia.com", "creation_time": "2011-02-08T23:10:56Z", "tags": [], "is_private": false}, {"count": 19, "tags": [], "bug_id": 41743, "attachment_id": null, "id": 144136, "time": "2011-02-10T11:19:10Z", "creator": "jorton@redhat.com", "creation_time": "2011-02-10T11:19:10Z", "is_private": false, "text": "2.2.x patch committed in r1069428"}, {"count": 20, "tags": [], "creator": "andrew.punch@247realmedia.com", "attachment_id": null, "text": "I can confirm that the 2.2.x patch is now in the 2.2.x and my testing indicates that the 2.2.x branch no longer has the problem.\n\nThanks Joe and thanks to my colleague James \"Gerbs\" Byrne who diagnosed this problem.", "id": 144279, "time": "2011-02-14T21:50:06Z", "bug_id": 41743, "creation_time": "2011-02-14T21:50:06Z", "is_private": false}, {"count": 21, "tags": [], "bug_id": 41743, "attachment_id": null, "id": 144333, "time": "2011-02-15T22:31:04Z", "creator": "andrew.punch@247realmedia.com", "creation_time": "2011-02-15T22:31:04Z", "is_private": false, "text": "*** Bug 38994 has been marked as a duplicate of this bug. ***"}, {"text": "*** Bug 47635 has been marked as a duplicate of this bug. ***", "tags": [], "creator": "covener@gmail.com", "attachment_id": null, "count": 22, "id": 172494, "time": "2014-01-19T19:10:58Z", "bug_id": 41743, "creation_time": "2014-01-19T19:10:58Z", "is_private": false}]