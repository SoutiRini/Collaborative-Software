[{"count": 0, "tags": [], "text": "Bug fix for submitted bug #5391 don't fix the problem of overriding the default\nclass loader (WebappClassLoader) for WebappLoader. It still has no effect. In\nWebappLoader.start method a WebappClassLoader is always created:\n\nif (parentClassLoader == null) {\n    classLoader = new WebappClassLoader(container.getResources());\n} else {\n    classLoader = new WebappClassLoader(parentClassLoader,\ncontainer.getResources());\n}\n\nIs it possible to use dynamic class creation here to fix this feature?", "attachment_id": null, "id": 8946, "creator": "inhuman@iki.fi", "time": "2001-12-16T06:55:08Z", "bug_id": 5446, "creation_time": "2001-12-16T06:55:08Z", "is_private": false}, {"count": 1, "tags": [], "text": "Although the API may indicate it's doable, it's not possible to separate the\nLoader from the ClassLoader in the case of the WebappLoader/WebappClassLoader.\nThe first one uses special APIs from the second one that can't be replaced.\nIf you want to replace the class loader, you should write an alternate loader\n(maybe based on the old StandardLoader), and maybe give it the capabilities to\nswitch the CL.", "attachment_id": null, "id": 8967, "creator": "remm@apache.org", "time": "2001-12-17T01:40:14Z", "bug_id": 5446, "creation_time": "2001-12-17T01:40:14Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 5446, "attachment_id": null, "id": 8968, "time": "2001-12-17T02:10:32Z", "creator": "inhuman@iki.fi", "creation_time": "2001-12-17T02:10:32Z", "is_private": false, "text": "Thanks for the comments! In my case I would very much like to reuse the already\nimplemented features of WebappLoader since my own class loader inherits\nWebappClassLoader and only overwrites loadClass method. That is, it is also a\nWebappClassLoader. Now that WebappLoader and WebappClassLoader are tightly\nintegrated with a specialized API, would it be possible to support this feature\nin case the replacing class loader extends WebappClassLoader? (i.e.\nMyClassLoader instanceof WebappClassLoader == true). \n\nThis feature would be extremely nice and it wouldn't break the protocol between\nWebappLoader and WebappClassLoader :)"}, {"count": 3, "tags": [], "bug_id": 5446, "attachment_id": null, "id": 8969, "time": "2001-12-17T02:17:58Z", "creator": "remm@apache.org", "creation_time": "2001-12-17T02:17:58Z", "is_private": false, "text": "Ok, the use case of using another CL which would cast to WebappCL is valid. I\nsuppose replacing the new WebappClassloader by a Class.forName.newInstance (if\nthe loaderClass is defined) would work."}, {"count": 4, "tags": [], "text": "One fix to my earlier note: instanceof is not a proper way to check it, I\nsuppose. But something like:\n\nClass clazz = Class.forName(loaderClass);\nif (clazz.isAssignableFrom(WebappClassLoader.class)) {\n   classLoader = (WebappClassLoader) clazz.newInstance();\n  ..\n}\nelse {\n   throw Exception(\"configuration error\")\n} ", "is_private": false, "bug_id": 5446, "id": 8970, "time": "2001-12-17T02:28:05Z", "creator": "inhuman@iki.fi", "creation_time": "2001-12-17T02:28:05Z", "attachment_id": null}, {"count": 5, "tags": [], "creator": "remm@apache.org", "attachment_id": null, "id": 10823, "creation_time": "2002-02-17T04:48:23Z", "time": "2002-02-17T04:48:23Z", "bug_id": 5446, "text": "*** Bug 5391 has been marked as a duplicate of this bug. ***", "is_private": false}, {"count": 6, "tags": [], "text": "*** Bug 8590 has been marked as a duplicate of this bug. ***", "is_private": false, "bug_id": 5446, "id": 14984, "time": "2002-04-29T09:05:30Z", "creator": "remm@apache.org", "creation_time": "2002-04-29T09:05:30Z", "attachment_id": null}, {"count": 7, "tags": [], "bug_id": 5446, "attachment_id": null, "id": 17450, "time": "2002-06-09T01:16:21Z", "creator": "remm@apache.org", "creation_time": "2002-06-09T01:16:21Z", "is_private": false, "text": "I have implemented the change. The actual classLoader must at a minimum extend\nWebappClassLoader."}, {"count": 8, "tags": [], "text": "*** Bug 12501 has been marked as a duplicate of this bug. ***", "attachment_id": null, "id": 43407, "creator": "medthomas@ntlworld.com", "time": "2003-08-27T21:34:42Z", "bug_id": 5446, "creation_time": "2003-08-27T21:34:42Z", "is_private": false}]