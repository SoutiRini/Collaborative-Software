[{"count": 0, "tags": [], "creator": "jean-francois.leclerc@orange.fr", "text": "Hello,\n \nMaybe I discover vulnerability in apache server web. So, when I try to inject some characters in url, Escape_log translate this in access.log except before the injection begin by a \u201c?\u201d, for example: \u201chttp://host/?<?.......\u201d. \nBut, next to the \u201c?\u201d if I try to pass some hexadecimal characters, like \\x0A the processor may be running at 100% and memory take over 1 Go.  During the problem, if I try again to inject some character behind a \u201c?\u201d, nothing is written in access.log and nothing happens.\n \nWhat's happens ?\n \nRegards\n \nJean-Fran\u00e7ois LECLERC\n\nNB : Sorry for the second mail, but the first, I'm not logged in and I send email from my messenger and not from the website.", "id": 115907, "time": "2008-04-26T03:39:09Z", "bug_id": 44880, "creation_time": "2008-04-26T03:39:09Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 44880, "attachment_id": null, "text": "1.3.33 is obsolete.  Are you saying this is fixed in later versions (in which case this bug is FIXED, by definition)?  Or that it isn't?", "id": 115908, "time": "2008-04-26T04:42:37Z", "creator": "nick@webthing.com", "creation_time": "2008-04-26T04:42:37Z", "is_private": false}, {"count": 2, "tags": [], "text": "I don't have more information. Only I know, http://127.0.0.1/?\\x0A (it's a \"\\n\") cause a DoS (processor at 100% and RAM increased). \n\nMaybe there's a link with access.log and particulary ap_log_rerror function, because use a \"?\" character in the url prevents to use this function (translate url to unicode character before written event in access.log). so when I try hexa characters in url (cause the DoS) and I try a new url with a ? and more, for example : http://127.0.0.1/?<?%20echo%20\"bonjour\";%20?> no event is written in access.log during the DoS, when it's stopped, the events will be written again.\n\nWith http server apache 2.2, Apache add a \"\\\" before \\x0A, the result becomes \\\\x0A in access.log and don't cause many problem", "attachment_id": null, "bug_id": 44880, "id": 115910, "time": "2008-04-26T05:39:36Z", "creator": "jean-francois.leclerc@orange.fr", "creation_time": "2008-04-26T05:39:36Z", "is_private": false}, {"count": 3, "tags": [], "text": "(In reply to comment #1)\n> 1.3.33 is obsolete.  Are you saying this is fixed in later versions (in which\n> case this bug is FIXED, by definition)?  Or that it isn't?\n\nyes that's right, this bug is FIXED in later versions (sure in 2.0 and 2.2.8) and it's obsolete too but I'm not sure nobody use it. :-)  ", "attachment_id": null, "bug_id": 44880, "id": 115911, "time": "2008-04-26T06:34:30Z", "creator": "jean-francois.leclerc@orange.fr", "creation_time": "2008-04-26T06:34:30Z", "is_private": false}, {"count": 4, "tags": [], "text": "In fact it's note an Apache bug, it's become from a simple Bad PHP script.\nSorry", "attachment_id": null, "bug_id": 44880, "id": 115913, "time": "2008-04-26T10:33:23Z", "creator": "jean-francois.leclerc@orange.fr", "creation_time": "2008-04-26T10:33:23Z", "is_private": false}]