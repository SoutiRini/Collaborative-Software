[{"count": 0, "attachment_id": null, "bug_id": 12822, "text": "This is minor, but: auth.html in the manual suggests file ownership/permissions \nfor any htpasswd-generated password file which could be stricter.  From the \ndocumentation which shipped with 1.3.26 (2.0.x may be identical; I haven't \nchecked): \n \n\"Nevertheless, you should store the file in as secure a location as possible, \nwith whatever minimum permissions on the file so that the web server itself can \nread the file. For example, if your server is configured to run as user nobody \nand group nogroup, then you should set permissions on the file so that only \nthat user can read the file:\" \n \n...This much I agree with.  However, the suggestion is then made: \n \n\"chown nobody.nogroup /usr/local/apache/passwd/passwords \nchmod 640 /usr/local/apache/passwd/passwords\" \n \nI think root.nogroup, mode 640, would be more appropriate in the above example: \nunless the webserver is meant to maintain (modify) the password file(s), there \nis no reason for the apache-user to own the file.  In fact the ownership \nsuggested in the manual allows any malicious CGI, etc to modify the password \nfile.  This is not too big a deal however, since malicious CGIs running as the \napache user can already tamper with the running server child processes, bypass \nhtaccess restrictions and access the filesystem directly, etc.  However, \nrecommending least-privilege should do exactly that, recommend the least \nprivilege necessary :)", "id": 23105, "time": "2002-09-19T17:04:03Z", "creator": "hlein@progressive-comp.com", "creation_time": "2002-09-19T17:04:03Z", "tags": [], "is_private": false}, {"count": 1, "tags": [], "creator": "slive@apache.org", "is_private": false, "text": "Good idea.  Fix committed and will be in the next release.", "id": 23108, "time": "2002-09-19T17:46:10Z", "bug_id": 12822, "creation_time": "2002-09-19T17:46:10Z", "attachment_id": null}]