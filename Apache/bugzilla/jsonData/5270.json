[{"count": 0, "tags": [], "bug_id": 5270, "attachment_id": null, "text": "I would like for the ant task to allow multiple targets in the same way that I \ncan specify multiple targets on the command line when kicking off ant.\n\nI have made the following changes to ant.java in the 1.4.1 release that does \njust that.  Most of this additional logic is cut-n-pasted from Target.java's \ncode for parsing the depends attribute so it has the same error checking as \nthat.\n\n\n--------- start of diff -----------------------------\n256a257,280\n>             Vector targets = new Vector();\n>             StringTokenizer tok =\n>                 new StringTokenizer(target, \",\", true);\n>             while (tok.hasMoreTokens()) {\n>                 String token = tok.nextToken().trim();\n>\n>                 //Make sure the target is not empty string\n>                 if (token.equals(\"\") || token.equals(\",\"))\n>                   continue;\n>\n>                   targets.addElement(token);\n>\n>                 //Make sure that target attribute does not\n>                 //end in a ,\n>                 if (tok.hasMoreTokens()) {\n>                     token = tok.nextToken();\n>                     if (!tok.hasMoreTokens() || !token.equals(\",\")) {\n>                         throw new BuildException( \"Syntax Error: Target \nattribute \" +\n>                                                   \"for task \\\"\" + getTaskName\n() +\n>                                                   \"\\\" ends with a , \ncharacter\" );\n>                     }\n>                 }\n>             }\n>\n261c285\n<                 target.equals(this.getOwningTarget().getName())) {\n---\n>                 targets.contains(this.getOwningTarget().getName())) {\n266c290\n<             newProject.executeTarget(target);\n---\n>             newProject.executeTargets(targets);\n-------------------- end of diff ------------------------------", "id": 8576, "time": "2001-12-04T12:43:52Z", "creator": "bdeweese@yahoo.com", "creation_time": "2001-12-04T12:43:52Z", "is_private": false}, {"count": 1, "tags": [], "creator": "bdeweese@yahoo.com", "text": "Created attachment 869\nPatch file for ant.java to allow multiple targets", "id": 8577, "time": "2001-12-04T13:06:41Z", "bug_id": 5270, "creation_time": "2001-12-04T13:06:41Z", "is_private": false, "attachment_id": 869}, {"count": 2, "tags": [], "creator": "steve_l@iseran.com", "text": "what does this patch do when the target is \"\" ?", "id": 13129, "time": "2002-04-09T20:17:27Z", "bug_id": 5270, "creation_time": "2002-04-09T20:17:27Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 5270, "attachment_id": 1515, "text": "Created attachment 1515\nPatch file for ant.java to allow multiple targets (created with diff -u)", "id": 13193, "time": "2002-04-10T18:35:38Z", "creator": "bdeweese@yahoo.com", "creation_time": "2002-04-10T18:35:38Z", "is_private": false}, {"count": 4, "tags": [], "creator": "bdeweese@yahoo.com", "text": "Created attachment 1516\nPatch file for Project.java to provide error checking in executeTargets(Vector)", "id": 13194, "time": "2002-04-10T18:36:28Z", "bug_id": 5270, "creation_time": "2002-04-10T18:36:28Z", "is_private": false, "attachment_id": 1516}, {"count": 5, "tags": [], "bug_id": 5270, "attachment_id": null, "id": 13195, "creation_time": "2002-04-10T18:37:21Z", "time": "2002-04-10T18:37:21Z", "creator": "bdeweese@yahoo.com", "text": "Good question.  The original would throw a BuildException stating that the \ntarget '' could not be found.  This exception is thrown by Project.executeTarget\n(String).\n\nThe patched version would go merrily along its way ignoring the fact that you \nhadn't specified any targets.  It calls Project.executeTargets(Vector) which \ndoesn't do any error checking.  I've supplied a patch for Project.java as well \nas Ant.java that does throw a BuildException() if no target(s) are provided.\n\n\n--- Ant.java.orig\tThu Oct 11 23:58:28 2001\n+++ Ant.java\tWed Apr 10 11:57:21 2002\n@@ -254,16 +254,40 @@\n                 target = newProject.getDefaultTarget();\n             }\n \n+            Vector targets = new Vector();\n+            StringTokenizer tok =\n+                new StringTokenizer(target, \",\", true);\n+            while (tok.hasMoreTokens()) {\n+                String token = tok.nextToken().trim();\n+\n+                //Make sure the target is not empty string\n+                if (token.equals(\"\") || token.equals(\",\"))\n+                  continue;\n+\n+                  targets.addElement(token);\n+\n+                //Make sure that target attribute does not\n+                //end in a ,\n+                if (tok.hasMoreTokens()) {\n+                    token = tok.nextToken();\n+                    if (!tok.hasMoreTokens() || !token.equals(\",\")) {\n+                        throw new BuildException( \"Syntax Error: Target \nattribute \" +\n+                                                  \"for task \\\"\" + getTaskName\n() +\n+                                                  \"\\\" ends with a , \ncharacter\" );\n+                    }\n+                }\n+            }\n+\n             // Are we trying to call the target in which we are defined?\n             if (newProject.getBaseDir().equals(project.getBaseDir()) &&\n                 newProject.getProperty(\"ant.file\").equals(project.getProperty\n(\"ant.file\")) &&\n                 getOwningTarget() != null &&\n-                target.equals(this.getOwningTarget().getName())) { \n+                targets.contains(this.getOwningTarget().getName())) {\n \n                 throw new BuildException(\"ant task calling its own parent \ntarget\");\n             }\n \n-            newProject.executeTarget(target);\n+            newProject.executeTargets(targets);\n         } finally {\n             // help the gc\n             newProject = null;\n\n--- Project.java.orig\tThu Oct 11 23:58:28 2001\n+++ Project.java\tWed Apr 10 11:57:15 2002\n@@ -556,6 +556,11 @@\n     public void executeTargets(Vector targetNames) throws BuildException {\n         Throwable error = null;\n \n+        if (targetNames == null || targetNames.size() == 0) {\n+            String msg = \"No target(s) specified\";\n+            throw new BuildException(msg);\n+        }\n+\n         for (int i = 0; i < targetNames.size(); i++) {\n             executeTarget((String)targetNames.elementAt(i));\n         }\n", "is_private": false}, {"count": 6, "tags": [], "creator": "steve_l@iseran.com", "text": "next question: what does Ant currently do when you supply a target of \"\"?\n\n", "id": 13221, "time": "2002-04-11T07:35:20Z", "bug_id": 5270, "creation_time": "2002-04-11T07:35:20Z", "is_private": false, "attachment_id": null}, {"count": 7, "tags": [], "creator": "j_a_fernandez@yahoo.com", "text": "It would be nice if this patch executed the targets\nwithin one global dependency check, instead of re-evaluating \ndependencies again and again for each target.\nIn other words:\n\n  <ant target=\"a, b, c, d\" .../>\n\nshould not behave like:\n\n  <ant target=\"a\" .../>\n  <ant target=\"b\" .../>\n  <ant target=\"c\" .../>\n  <ant target=\"d\" .../>\n\nbut it should behave like:\n\n  <ant target=\"abcd\" .../>\nwhere \"abcd\" is defined like:\n  <target name=\"abcd\" depends=\"a, b, c, d\"/>\n\nthis is a much more powerful behaviour.\n", "id": 13527, "time": "2002-04-14T22:32:11Z", "bug_id": 5270, "creation_time": "2002-04-14T22:32:11Z", "is_private": false, "attachment_id": null}, {"count": 8, "tags": [], "bug_id": 5270, "attachment_id": null, "text": "Steve, the question of the current behavior of Ant when the target is \"\" was \nanswered in my comments of 4-10 which was, \"The original would throw a \nBuildException stating that the target '' could not be found.\".\n\nJose, I like your suggestion but I wouldn't know how to implement it with \nhaving Ant.java create a temporary target with its depends attribute set to the \nlist of targets passed in.  But this would also print the temp target to the \nlog and probably confuse the user as to the source of this unknown target.  So \nI would hope there's a better way of doing this but I'm not familiar enough \nwith the code to suggest a better alternative at this point.\n\nTherefore, I think if you want that behaviour than it would be just as well to \ntell the user to define a target with the depends attribute as you have done in \nyour example rather than modifing the current patch.", "id": 13661, "time": "2002-04-15T17:42:45Z", "creator": "bdeweese@yahoo.com", "creation_time": "2002-04-15T17:42:45Z", "is_private": false}, {"count": 9, "tags": [], "creator": "steve_l@iseran.com", "attachment_id": null, "id": 13667, "time": "2002-04-15T18:36:12Z", "bug_id": 5270, "creation_time": "2002-04-15T18:36:12Z", "is_private": false, "text": "Actually, right now, in ant, when you send in a target of \"\" then a target \ncalled \"\" at the far end is invoked.\n\nThis irritates me, because I'd be happier with \"\" binding to default, but it \nis there and we all have to live with it. "}, {"count": 10, "tags": [], "creator": "bdeweese@yahoo.com", "text": "I thought you were asking for the current behaviour of the <antcall> and <ant> \ntask when the target was \"\".  When I used the current 1.4.1 release and tested \nit, it threw the BuildException that I noted earlier.  I haven't tested a \ntarget of \"\" from the command line so I'm not sure what that does.\n\nI also would prefer that <ant> would execute the default target if the target \nwas an empty string.  However, for <antcall> I think it should still throw a \nBuildException because the target is required and therefore should not be empty.\n\nI believe I could easily make that change in Project.java and therefore it \nshould also give a target of \"\" on the command line the same behaviour.", "id": 13681, "time": "2002-04-15T19:58:02Z", "bug_id": 5270, "creation_time": "2002-04-15T19:58:02Z", "is_private": false, "attachment_id": null}, {"count": 11, "tags": [], "creator": "j_a_fernandez@yahoo.com", "text": "There should be no need to phisically add a new target. It is just a question \nof how to produce the ordered list of targets to execute. If I only had some \ntime I would look into it. I will try my  best.\n", "id": 13726, "time": "2002-04-16T06:38:25Z", "bug_id": 5270, "creation_time": "2002-04-16T06:38:25Z", "is_private": false, "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 5270, "is_private": false, "count": 12, "id": 13728, "time": "2002-04-16T06:41:15Z", "creator": "fred@castify.net", "creation_time": "2002-04-16T06:41:15Z", "text": "*** Bug 8148 has been marked as a duplicate of this bug. ***"}, {"attachment_id": null, "tags": [], "bug_id": 5270, "text": "*** Bug 17071 has been marked as a duplicate of this bug. ***", "count": 13, "id": 31514, "time": "2003-02-18T14:19:16Z", "creator": "bodewig@apache.org", "creation_time": "2003-02-18T14:19:16Z", "is_private": false}, {"count": 14, "tags": [], "creator": "stevel@apache.org", "attachment_id": null, "id": 32767, "time": "2003-03-10T06:29:27Z", "bug_id": 5270, "creation_time": "2003-03-10T06:29:27Z", "is_private": false, "text": "pointing this bug a proposed impl of the solution in a new (cleaner) task, <subant>\n\n*** This bug has been marked as a duplicate of 12368 ***"}, {"count": 15, "tags": [], "bug_id": 5270, "attachment_id": null, "text": "I do not agree that this item (Bug 5270) is a duplicate of Bug 12368.\n\nDominique, who implemented 12368, seems to agree with this.\n\nAs I am not an Ant developer, I'm hesitant to change this in Bugzilla myself.  \nMay I, or would an Ant developer do so?  Thank you.\n\nP.S. I *do* agree that Bug 8148 and Bug 17071 *are* valid duplicates of this \nitem!\n", "id": 39498, "time": "2003-06-26T17:31:26Z", "creator": "mcepek@smsi.com", "creation_time": "2003-06-26T17:31:26Z", "is_private": false}, {"count": 16, "tags": [], "bug_id": 5270, "attachment_id": null, "text": "ok, looking at it I agree. <subant> Does multiple build files, this does\nmultiple targets in a build file. \n\nI am reopening it (as you could have done, mike). ", "id": 39525, "time": "2003-06-26T20:41:18Z", "creator": "stevel@apache.org", "creation_time": "2003-06-26T20:41:18Z", "is_private": false}, {"attachment_id": null, "tags": [], "bug_id": 5270, "text": "*** Bug 6368 has been marked as a duplicate of this bug. ***", "count": 17, "id": 58743, "time": "2004-06-04T12:06:09Z", "creator": "bodewig@apache.org", "creation_time": "2004-06-04T12:06:09Z", "is_private": false}, {"count": 18, "tags": [], "creator": "mbenson@apache.org", "text": "*** Bug 29623 has been marked as a duplicate of this bug. ***", "id": 59364, "time": "2004-06-16T20:45:18Z", "bug_id": 5270, "creation_time": "2004-06-16T20:45:18Z", "is_private": false, "attachment_id": null}, {"count": 19, "tags": [], "creator": "alexeys@inventigo.com", "text": "Please also note that a patch in bug 21421 allows that.", "id": 59365, "time": "2004-06-16T20:48:39Z", "bug_id": 5270, "creation_time": "2004-06-16T20:48:39Z", "is_private": false, "attachment_id": null}, {"count": 20, "tags": [], "creator": "mbenson@apache.org", "text": "I agree with Jose Alberto that the behavior of these tasks with multiple \ntargets should be to pretend these are dependencies of a single target, the \nmain reason for this being that if you want to run multiple targets \nindependently you can already do that with multiple task invocations.\n\nThe main issue surrounding this seems to be how to specify the targets list, \ndue to the possibility of breaking builds which include targets whose names \ncontain commas, etc.  Isn't the XML paradigm 1=attribute n=element?  I propose \nto add <target name=\"...\"> elements to <ant> and <antcall>, and with some other \nchanges to open up some doors to the dependency graph in Project, satisfy this \nrequest.  I'm too lazy to attach patches to this bugrep, but I have finished \ncoding this and it works without being too ugly.  I am going to go ahead and \ncommit these changes to CVS HEAD.\n", "id": 59853, "time": "2004-06-24T19:24:19Z", "bug_id": 5270, "creation_time": "2004-06-24T19:24:19Z", "is_private": false, "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 5270, "is_private": false, "count": 21, "id": 59865, "time": "2004-06-25T09:30:37Z", "creator": "j_a_fernandez@yahoo.com", "creation_time": "2004-06-25T09:30:37Z", "text": "Only one extra comment (for the record) targets in reality cannot contain \ncommas. If they were they could not be used in depends. So although nothing in\nthe code prevent it, I think it has been a redherring on this issue.\n"}, {"count": 22, "tags": [], "creator": "mbenson@apache.org", "attachment_id": null, "id": 60002, "time": "2004-06-28T14:49:49Z", "bug_id": 5270, "creation_time": "2004-06-28T14:49:49Z", "is_private": false, "text": "I would say \"cannot\" is too strong, as target names indeed CAN contain commas.  \nI will agree with \"with about 99% probability, will not\" for the reason given.\n\n;)"}, {"attachment_id": null, "tags": [], "bug_id": 5270, "text": "*** Bug 33734 has been marked as a duplicate of this bug. ***", "count": 23, "id": 71494, "time": "2005-02-24T19:35:18Z", "creator": "mbenson@apache.org", "creation_time": "2005-02-24T19:35:18Z", "is_private": false}]