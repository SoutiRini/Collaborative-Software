[{"count": 0, "tags": [], "text": "We run Apache 2.2.15(+ fixes for certain CVEs) on HP Itanium server with HP-UX. \n\nOnce in a while, we observe ~100% CPU consumption by the httpd processes.\n\n\n1. configuration\n\nMPM worker configuration:\n<IfModule mpm_worker_module>\n    ServerLimit          80\n    StartServers         67\n    MaxClients          4000\n    MinSpareThreads     3350\n    MaxSpareThreads     4000\n    ThreadsPerChild     50\n    MaxRequestsPerChild  1200\n</IfModule>\n\n\nweb server: Reverse proxy\n\n3rd party module: Oracle webgate\n\n\n2. Logs\n\nPlease find the attached files:\na) stack trace : bt_all\nb) top and syscall trace (top_syscall_trace) \nc) Mapping between stack trace, source code and itanium assembly code(trace_srccode_assemblyCode)\n\n3. Trace identified from the core dump generated in that scenario:\n\nsyscall trace shows that main thread waits for the user space thread that run ap_core_input_filter()\n\ntrace:\nThread 22 (system thread 1947121):\n#0  0x40000000000977f0:2 in ap_core_input_filter () at core_filters.c:136\n#1  0x40000000000c3f50:0 in ap_get_brigade () at util_filter.c:489\n#2  0xc000000000ac76c0:0 in logio_in_filter () at mod_logio.c:129\n#3  0x40000000000c3f50:0 in ap_get_brigade () at util_filter.c:489\n#4  0x4000000000074980:0 in ap_rgetline_core () at protocol.c:231\n#5  0xc000000004a33580:0 in ap_proxygetline () at mod_proxy_http.c:1658\n#6  0xc000000004a338c0:0 in ap_proxy_http_process_response () at mod_proxy_http.c:1733\n#7  0xc000000004a35ee0:0 in proxy_http_handler () at mod_proxy_http.c:2434\n#8  0xc000000004929a10:0 in proxy_run_scheme_handler () at mod_proxy.c:2675\n#9  0xc000000004928b60:0 in proxy_handler () at mod_proxy.c:1024\n#10 0x400000000009d2d0:0 in ap_run_handler ()\n#11 0x400000000009e9e0:0 in ap_invoke_handler () at config.c:381\n#12 0x40000000000cdec0:0 in ap_process_request () at http_request.c:282\n#13 0x40000000000c5a40:0 in ap_process_http_connection () at http_core.c:190\n#14 0x40000000000b8d20:0 in ap_process_connection () at connection.c:189\n#15 0x40000000000de4c0:0 in process_socket () at worker.c:590\n#16 0x40000000000df860:0 in worker_thread () at worker.c:974\n#17 0xc000000006f95200:0 in dummy_worker () at threadproc/unix/thread.c:160\n#18 0xc00000000013fb20:0 in __pthread_bound_body () at pthreads/pthread.c:4875\n\nEventhough it shows Line:136, actual loop happens @ line 141:\n   140      /* ### This is bad. */\n   141      BRIGADE_NORMALIZE(ctx->b);\n\nDue to compiler optimzation and macro @ line 141, this line no is not shown in trace.\n\n\nAs shown in the trace_srccode_assemblyCode attachment, linked list has become circular because address and content of (ctx->b)->list))->next are same\n\n(gdb) info register r44\n   gr44: 0x6000000000777de8\n\n(gdb) x/gx0x6000000000777de8\n0x6000000000777de8:     0x6000000000777de8\n\nPrev\u2019s value also contains the same.\n(gdb) x/gx 0x6000000000774508\n0x6000000000774508:     0x6000000000777de8\n\n\nPlease help to resolve this.", "is_private": false, "bug_id": 56034, "id": 172532, "time": "2014-01-20T03:51:45Z", "creator": "venkatunix02@gmail.com", "creation_time": "2014-01-20T03:51:45Z", "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 56034, "attachment_id": 31228, "id": 172533, "time": "2014-01-20T03:55:53Z", "creator": "venkatunix02@gmail.com", "creation_time": "2014-01-20T03:55:53Z", "is_private": false, "text": "Created attachment 31228\ntrace"}, {"count": 2, "tags": [], "text": "Created attachment 31229\nlog of top and tusc(syscalls)", "attachment_id": 31229, "bug_id": 56034, "id": 172534, "time": "2014-01-20T03:56:57Z", "creator": "venkatunix02@gmail.com", "creation_time": "2014-01-20T03:56:57Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 56034, "attachment_id": 31230, "id": 172535, "time": "2014-01-20T03:57:35Z", "creator": "venkatunix02@gmail.com", "creation_time": "2014-01-20T03:57:35Z", "is_private": false, "text": "Created attachment 31230\nMapping between stack trace, source code and itanium assembly code"}, {"count": 4, "tags": [], "creator": "ylavic.dev@gmail.com", "attachment_id": null, "text": "What compiler and APR versions are you using ?\n\nIf the former is gcc, can you compile with option \"-fno-strict-aliasing\" and see if it helps ?", "id": 172536, "time": "2014-01-20T09:29:50Z", "bug_id": 56034, "creation_time": "2014-01-20T09:29:50Z", "is_private": false}, {"count": 5, "tags": [], "text": "(In reply to Yann Ylavic from comment #4)\n> What compiler and APR versions are you using ?\n> \n> If the former is gcc, can you compile with option \"-fno-strict-aliasing\" and\n> see if it helps ?\n\n\nThanks for checking this.\n\nWe use HP C compiler and APR version is 1.4.", "is_private": false, "bug_id": 56034, "id": 172628, "time": "2014-01-23T05:42:52Z", "creator": "venkatunix02@gmail.com", "creation_time": "2014-01-23T05:42:52Z", "attachment_id": null}, {"count": 6, "tags": [], "bug_id": 56034, "text": "The attachment 31230 suggests you use APR <= 1.4.2 (without this fix http://svn.apache.org/viewvc?view=revision&revision=1074877).\n\nstruct apr_bucket_brigade {\n    apr_pool_t *p;\n    struct apr_bucket_list {\n            struct apr_bucket *next;\n            struct apr_bucket *prev;\n    }list;\n    apr_bucket_alloc_t *bucket_alloc;\n}\n\nshould be (from APR 1.4.3+) :\n\nstruct apr_bucket_brigade {\n    apr_pool_t *p;\n    struct apr_bucket_list {\n            struct apr_bucket * volatile next;\n            struct apr_bucket * volatile prev;\n    }list;\n    apr_bucket_alloc_t *bucket_alloc;\n}\n\nCan you upgrade to the latest APR 1.4.8 and see if it helps?", "id": 172629, "time": "2014-01-23T09:38:28Z", "creator": "ylavic.dev@gmail.com", "creation_time": "2014-01-23T09:38:28Z", "is_private": false, "attachment_id": null}, {"count": 7, "tags": [], "bug_id": 56034, "attachment_id": null, "id": 172630, "time": "2014-01-23T09:58:41Z", "creator": "ylavic.dev@gmail.com", "creation_time": "2014-01-23T09:58:41Z", "is_private": false, "text": "Possible duplicate of bug 50190."}]