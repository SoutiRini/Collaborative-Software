[{"count": 0, "tags": [], "bug_id": 28340, "text": "For properties being loaded from a properties file, it would be very useful to \nhave a trim attribute that would trim all whitespace from the property value \n(a simple Java 'String.trim()').\n\nFor instance, if you want to load \"foo.properties\" without potential trailing \nwhitespace problems:\n\n  <property resource=\"foo.properties\" trim=\"true\" />\n\nIf there were a property line \"prop.a=dist    \":\n\n  (a) With trim set to true, Ant would interpret this as \"prop.a=dist\" \n      without the spaces.  \n\n  (b) With trim set to false, or missing, Ant would interpret this as \n      it currently does as \"prop.a=dist    \".", "id": 55643, "time": "2004-04-11T21:37:09Z", "creator": "erico@sedonacorp.com", "creation_time": "2004-04-11T21:37:09Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 28340, "text": "With a file you can use the <loadproperties> task with a nested\n\n<loadproperties file=\"foo.properties\">\n  <filterchain>\n    <trim />\n  </filterchain>\n</loadproperties>\n\nLooks like it might be more reasonable to add a resource attribute to \n<loadproperties>.", "id": 55656, "time": "2004-04-12T18:15:05Z", "creator": "mbenson@apache.org", "creation_time": "2004-04-12T18:15:05Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 28340, "attachment_id": null, "id": 55657, "time": "2004-04-12T18:21:20Z", "creator": "ddevienne@lgc.com", "creation_time": "2004-04-12T18:21:20Z", "is_private": false, "text": "Somehow I think cases will crop up where <trim/> with <loadproperties/> will \nnot be equivalent to trim=\"true\" on <property>, because <trim/> operates on the \nlines of the .properties file, whereas trim=\"true\" would operate on the value \nafter parsing of the file.\n\nConsider:\nkey = value___\\\n____\n\nWhere the underscores are spaces. The value will be 'value   ' (AFAIK), and the \n<trim/> would yield a different result than trim=\"true\". The properties file \nline continuation \\ trumps <trim/> basically I think, but I guess I could be \nwrong. --DD"}, {"count": 3, "tags": [], "creator": "mbenson@apache.org", "attachment_id": null, "text": "Hey, you got me... So we'd have to have another filterreader, \"configurably\" \nused with <property file|resource> and <loadproperties>, to ignore escaped EOL \nmarkers, to make this feasible.... Maybe a nice <replaceregexp>... :) and on \nand on...", "id": 55659, "time": "2004-04-12T18:32:06Z", "bug_id": 28340, "creation_time": "2004-04-12T18:32:06Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 28340, "text": "Adding a resource attribute to <loadproperties> would solve my immediate \nproblem -- I have never run across an end-user who fouled up a properties file \nusing a line continuation with spaces.\n\nHowever, I believe that adding a trim attribute to <property> as I originally \nsuggested would still be a good idea.  Trimming strings is a basic operation \nfor input you do not control and should be directly available for an input \ntask like <property>.", "id": 55702, "time": "2004-04-13T15:27:31Z", "creator": "erico@sedonacorp.com", "creation_time": "2004-04-13T15:27:31Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "creator": "mbenson@apache.org", "attachment_id": null, "id": 56123, "time": "2004-04-20T19:22:53Z", "bug_id": 28340, "creation_time": "2004-04-20T19:22:53Z", "is_private": false, "text": "Hey, DD, I was thinking about this while implementing loading from a resource, \nand it occurred to me that a nested <trim> filterreader shouldn't hurt escaped \nline continuation... leading ws characters on the continued line are discarded \nper java.util.Properties.load(...) javadoc, and continued lines must have '\\' \nas their final character..."}, {"count": 6, "tags": [], "bug_id": 28340, "attachment_id": null, "id": 56124, "time": "2004-04-20T19:33:11Z", "creator": "mbenson@apache.org", "creation_time": "2004-04-20T19:33:11Z", "is_private": false, "text": "Especially in light of my previous comment, resource support on \n<loadproperties> should be simple and adequate support for doing something non-\nstandard like trimming properties in a properties file.  This is in CVS HEAD \nand should be in Ant 1.6.2."}]