[{"count": 0, "tags": [], "creator": "rpreduta@usa.net", "text": "I got this problem with Log4j 1.2.7.: \nI'm creating programmatically a common Logger class that builds some \nDailyRollingFileAppender and this piece of code ends up in an EJB module that \nis included in several EARs. So I end up creating different applications with \nmultiple instances of the logger that share the same file. The problem is that \nwhen the file is rolled over by one application, the other application does not \nknow that the file was rolled over so when the second application rolls the \nfile over, the first application continues to write to the rolled over file \n(the one with the date at the end). \nI think the rollover process should have a bit of logic to check if another \nprocess has already rolled over the file, or else place a warning in the \nDailyRollingFileAppender to prevent using it the way I tried to do.", "id": 46250, "time": "2003-10-24T16:02:09Z", "bug_id": 24107, "creation_time": "2003-10-24T16:02:09Z", "is_private": false, "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 24107, "is_private": false, "count": 1, "id": 58348, "time": "2004-05-28T18:23:59Z", "creator": "ceki@apache.org", "creation_time": "2004-05-28T18:23:59Z", "text": "\nLog files are not intended to be shared between multiple JVMs. Adding a  \nwarning is a good idea."}]