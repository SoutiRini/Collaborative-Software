[{"count": 0, "tags": [], "bug_id": 23568, "attachment_id": null, "id": 45013, "time": "2003-10-02T14:08:08Z", "creator": "richter@bgs.sk", "creation_time": "2003-10-02T14:08:08Z", "is_private": false, "text": "If I use native2ascii task with encoding defined by property, it does not work\nproperly - build.xml snippet follows:\n\n<property name=\"file.encoding\" value=\"ISO-8859-2\"/>\n\n<native2ascii encoding=\"${file.encoding}\"\n    src=\"${src.home}\"\n    dest=\"${build.home}/classes\"\n    includes=\"**/*.properties\"/>\n\nEvery eastern letter is escapted as \\ufffd what is actualy wrong. But (in\ndesperation) when I tried the same with ISO-8859-2 written in encoding attribute\ndirectly - it works properly the same way original Sun's native2ascii works. (I\nhad to use this just because of this bug.)"}, {"count": 1, "tags": [], "bug_id": 23568, "attachment_id": null, "is_private": false, "id": 45148, "time": "2003-10-06T13:23:21Z", "creator": "bodewig@apache.org", "creation_time": "2003-10-06T13:23:21Z", "text": "Does it work if you use a different name for your property?\n\nfile.encoding is a system property.  As such it has been set before Ant really\nstarts.  As Ant properties are immutable, you cannot change its value (but should\nget a warning).\n\nI guess you always see you platform's defualt encoding being used, that's why you\nthink it fails."}, {"count": 2, "tags": [], "bug_id": 23568, "attachment_id": null, "id": 45152, "time": "2003-10-06T15:26:01Z", "creator": "richter@bgs.sk", "creation_time": "2003-10-06T15:26:01Z", "is_private": false, "text": "When I sent this I was thinking about property name... so I tried \"encoding\". I\nreally don't know, what is involved in this task, because I had found few of\nbehaviours:\n- \"ISO-8859-2\" written directly - works when I have no locales set (in linux)\n- \"ISO-8859-2\" directly - does not work - destination file is also Latin 2 - on\naccount where I have set sk_SK locales\n- \"ISO8859_2\" (canonical name for java.io) works perfectly on both\n(Well I know, that this canonical form should be used, but native2ascii is\naccepting both and the form of java.nio.* (ISO-8859-2) is closer to ISO name, so\nI like it. :-)) I iterated to \"ISO8859_2\" without property, but I'm not happy,\nthat it does not work like Sun's tool.\n\nfile.encoding was really a bad name for property and like I said... it works in\ndifferent ways on different system (maybe unix locales was involved). \\ufffd was\nproduced only with this property name. Property evaluation is no problem actually."}, {"count": 3, "tags": [], "text": "So if property evaluation is no problem, what is the problem?\n\nthe encoding you specify will be passed literally as value for the -encoding\nargument to sun.tools.native2ascii.Main#convert - which may be different from\npassing it in on the command line.\n\nDo you have an example of <native2ascii> producing a different result than the\nSun tool when you specify the same value for the encoding attribute?", "attachment_id": null, "id": 45337, "creation_time": "2003-10-10T10:53:16Z", "time": "2003-10-10T10:53:16Z", "creator": "bodewig@apache.org", "bug_id": 23568, "is_private": false}, {"count": 4, "tags": [], "creator": "richter@bgs.sk", "attachment_id": null, "is_private": false, "id": 45470, "time": "2003-10-13T08:13:10Z", "bug_id": 23568, "creation_time": "2003-10-13T08:13:10Z", "text": "I tried it again and I have to say, that problem was somewhere else. First -\naccidently wrong name of property, second - my IDE. I was using ant for initial\ncompilation and then IDE for incremental ones, but it \"compiled\" (=copied) also\nproperties files, and that was the reason, why it started to work on one system\n(no IDE usage) but confused me on the second.\nI marked bug as invalid, I hope that it is for these kind of \"bugs\".\nSorry for your time... and thanks for ant itself ;-)"}]