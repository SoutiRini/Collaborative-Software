[{"count": 0, "tags": [], "bug_id": 60013, "is_private": false, "text": "I have RewriteValve configured for the ROOT context which is the only context in my deployment setup. \n\nI have many RewriteRules like \n\nRewriteRule ^/abc/(.*)$ /xyz.do?param=$1 [L]\n\nwhere a part of the URL gets rewritten as querystring \n\nwhen I access the URL with non-ASCII characters like http://www.example.com/abc/\u5728\u7ebf\u6d4b\u8bd5\n\nThe page does not load. Checking the rewrite and access logs I found \n\nRewrite Log\n\nRewrote /abc/\u5728\u7ebf\u6d4b\u8bd5 as /xyz.do?param=\u5728\u7ebf\u6d4b\u8bd5 with rule pattern ^/abc/(.*)$\n\nAccess log\n\n/xyz.do?param=????\n\nThis issue only happens when a part of the URL gets rewritten as the querystring. Checking the source code of the RewriteValve \n\nchunk.append(URLEncoder.DEFAULT.encode(urlString));\n\nI found the querystring is not encoded. Is this the cause of the problem?", "id": 193167, "time": "2016-08-18T08:01:05Z", "creator": "santhanapreethi28@gmail.com", "creation_time": "2016-08-18T08:01:05Z", "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 60013, "is_private": false, "text": "Using java 1.7.0_76\nRewriteValve is configured at the context level.", "id": 193263, "time": "2016-08-22T13:45:10Z", "creator": "santhanapreethi28@gmail.com", "creation_time": "2016-08-22T13:45:10Z", "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 60013, "is_private": false, "text": "I've added a test case and as far as I can tell, Tomcat is doing the right thing here. I need need to be very careful to ensure that everything was configured to use UTF-8. Until I did that, I saw all sorts of test failures.", "id": 193282, "time": "2016-08-23T13:25:56Z", "creator": "markt@apache.org", "creation_time": "2016-08-23T13:25:56Z", "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 60013, "is_private": false, "text": "I configured UTF-8 everywhere as mentioned in https://wiki.apache.org/tomcat/FAQ/CharacterEncoding#Q1 \n\n1. I set URIEncoding=\"UTF-8\" and useBodyEncodingForURI=\"true\" for the connectors in server.xml \n2. configured org.apache.catalina.filters.SetCharacterEncodingFilter at the top in web.xml \n3. Explicitly set strict servlet compliance to false using setenv.sh \n4. Ensured that no other valves like Request Dumper Valve in http://www.mail-archive.com/users@tomcat.apache.org/msg21117.html was configured.\n\nStill the rewritten querystring was getting mangled. \nAlso when there is a redirect like \n\nRewriteRule ^/abc/(.*)$ /xyz/$1 [R]\n\nIn access log\n\"GET /xyz/????.xml HTTP/1.1\"\n\nthe non-ASCII characters in the request URI is also getting mangled like this", "id": 193297, "time": "2016-08-24T10:29:48Z", "creator": "santhanapreethi28@gmail.com", "creation_time": "2016-08-24T10:29:48Z", "attachment_id": null}, {"count": 4, "tags": [], "creator": "santhanapreethi28@gmail.com", "attachment_id": null, "text": "I tested by encoding the querystring in the RewriteValve\n\nif (queryString != null) \n{  \n     request.getCoyoteRequest().queryString().setString(null);\n     chunk = request.getCoyoteRequest().queryString().getCharChunk();\n     chunk.recycle();\n     //chunk.append(queryString);\n\n     chunk.append(URLEncoder.DEFAULT.encode(queryString));\n     request.getCoyoteRequest().queryString().toChars();\n}", "id": 193298, "time": "2016-08-24T10:33:37Z", "bug_id": 60013, "creation_time": "2016-08-24T10:33:37Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 60013, "text": "I tested by encoding the querystring in the RewriteValve\n\nif (queryString != null) \n{  \n     request.getCoyoteRequest().queryString().setString(null);\n     chunk = request.getCoyoteRequest().queryString().getCharChunk();\n     chunk.recycle();\n     //chunk.append(queryString);\n     // encode queryString \n     chunk.append(URLEncoder.DEFAULT.encode(queryString));\n     request.getCoyoteRequest().queryString().toChars();\n}\n\nI found that = and & in the querystring also was getting encoded \nI had to decode the encoded = and & to get it to work as expected.\n     \n     String encQueryString = URLEncoder.DEFAULT.encode(queryString);\n     encQueryString = encQueryString.replaceAll(\"%3D\",\"=\");\n     encQueryString = encQueryString.replaceAll(\"%26\",\"&\");\n     chunk.append(encQueryString);\n\nAfter making these changes the URL rewriting was working fine \n\nAccess log \n\n/xyz.do?param=%E5%9C%A8%E7%BA%BF%E6%B5%8B%E8%AF%95\n\nI wrote a test jsp and request.getParameter was working fine and retrieved the non-ASCII data with both GET and POST methods \n\nBecause the rewritten and done flags are set in case of redirect, the issue still remain when there is a redirect.", "id": 193299, "time": "2016-08-24T10:45:30Z", "creator": "santhanapreethi28@gmail.com", "creation_time": "2016-08-24T10:45:30Z", "is_private": false, "attachment_id": null}, {"count": 6, "tags": [], "creator": "chris@christopherschultz.net", "attachment_id": null, "text": "Re-opening due to additional information being provided by the reporter.\n\nPreethi, would it be possible for you to write a test case for this? Configuration + sample output, expected output versus actual output?", "id": 193334, "time": "2016-08-25T20:47:23Z", "bug_id": 60013, "creation_time": "2016-08-25T20:47:23Z", "is_private": false}, {"count": 7, "tags": [], "creator": "markt@apache.org", "text": "Unless a test case that demonstrates this issue is forthcoming, this will get resolved as WORKSFORME again.", "id": 193335, "time": "2016-08-25T20:54:53Z", "bug_id": 60013, "creation_time": "2016-08-25T20:54:53Z", "is_private": false, "attachment_id": null}, {"count": 8, "tags": [], "bug_id": 60013, "text": "Created attachment 34176\nTest case for non-ascii characters in querystring and with redirect flag\n\nAdded testcases using TestRewriteValve.java for non-ascii querystring and non-ascii in request uri(for redirect case).", "id": 193358, "time": "2016-08-27T11:24:09Z", "creator": "santhanapreethi28@gmail.com", "creation_time": "2016-08-27T11:24:09Z", "is_private": false, "attachment_id": 34176}, {"count": 9, "tags": [], "bug_id": 60013, "is_private": false, "text": "Created attachment 34177\nNon-Ascii QueryString failure trace", "id": 193359, "time": "2016-08-27T11:25:29Z", "creator": "santhanapreethi28@gmail.com", "creation_time": "2016-08-27T11:25:29Z", "attachment_id": 34177}, {"count": 10, "tags": [], "bug_id": 60013, "text": "Created attachment 34178\nNon-Ascii Redirect failure trace", "id": 193360, "time": "2016-08-27T11:26:10Z", "creator": "santhanapreethi28@gmail.com", "creation_time": "2016-08-27T11:26:10Z", "is_private": false, "attachment_id": 34178}, {"count": 11, "tags": [], "bug_id": 60013, "is_private": false, "text": "Added testcase for the mentioned cases", "id": 193361, "time": "2016-08-27T11:26:38Z", "creator": "santhanapreethi28@gmail.com", "creation_time": "2016-08-27T11:26:38Z", "attachment_id": null}, {"count": 12, "tags": [], "bug_id": 60013, "text": "Thanks for the test cases. They really do make bug reports a lot easier to work with. I'll start looking at them today.", "id": 193394, "time": "2016-08-29T20:41:43Z", "creator": "markt@apache.org", "creation_time": "2016-08-29T20:41:43Z", "is_private": false, "attachment_id": null}, {"count": 13, "tags": [], "bug_id": 60013, "is_private": false, "text": "Progress is being made.\n\nThe test cases uncovered some inconsistencies in handling of encoded urlPatterns obtained from web.xml. These have been fixed in trunk (r1758423).\n\nI have added the test cases (some clean-up and a few fixes such as setting the response body to UTF-8) and fixed the remaining issues with the rewrite valve in trunk (r1758425).\n\nThere are a few more related edge cases I want to test. Once that is complete I'll look at back-porting these changes to 8.5.x and 8.0.x.", "id": 193417, "time": "2016-08-30T16:47:16Z", "creator": "markt@apache.org", "creation_time": "2016-08-30T16:47:16Z", "attachment_id": null}, {"count": 14, "tags": [], "bug_id": 60013, "is_private": false, "text": "This has been fixed in the following branches:\n- 9.0.x for 9.0.0.M10 onwards\n- 8.5.x for 8.5.5 onwards\n- 8.0.x for 8.0.37 onwards", "id": 193420, "time": "2016-08-30T20:12:12Z", "creator": "markt@apache.org", "creation_time": "2016-08-30T20:12:12Z", "attachment_id": null}, {"count": 15, "tags": [], "bug_id": 60013, "is_private": false, "text": "I am testing the RewriteValve in the trunk after the issue fix. QueryStrings in the case of redirect are still not encoded.", "id": 193507, "time": "2016-09-06T12:12:32Z", "creator": "santhanapreethi28@gmail.com", "creation_time": "2016-09-06T12:12:32Z", "attachment_id": null}, {"count": 16, "tags": [], "bug_id": 60013, "text": "Created attachment 34205\nTestcase for Redirect with QueryStrings\n\nBoth cases testNonAsciiQueryString and testNonAsciiQueryStringAndRedirectPath fail when a redirect flag is added.", "id": 193508, "time": "2016-09-06T12:16:14Z", "creator": "santhanapreethi28@gmail.com", "creation_time": "2016-09-06T12:16:14Z", "is_private": false, "attachment_id": 34205}, {"count": 17, "tags": [], "creator": "markt@apache.org", "text": "Thanks for the additional tests.\n\nThere isn't going to be a perfect fix without some potentially invasive changes to the RedirectValve. The problem is that encoding is not always the inverse of decoding. The Valve would have to be re-factored to work with undecoded URIs.\n\nAn imperfect fix that ignored some edge cases should be fairly simple.", "id": 193509, "time": "2016-09-06T12:35:20Z", "bug_id": 60013, "creation_time": "2016-09-06T12:35:20Z", "is_private": false, "attachment_id": null}, {"count": 18, "tags": [], "bug_id": 60013, "text": "Created attachment 34208\ntestNonAsciiQueryString failure trace", "id": 193513, "time": "2016-09-06T13:22:05Z", "creator": "santhanapreethi28@gmail.com", "creation_time": "2016-09-06T13:22:05Z", "is_private": false, "attachment_id": 34208}, {"count": 19, "tags": [], "creator": "santhanapreethi28@gmail.com", "text": "Created attachment 34209\ntestNonAsciiQueryStringAndRedirectPath failure trace", "id": 193514, "time": "2016-09-06T13:23:13Z", "bug_id": 60013, "creation_time": "2016-09-06T13:23:13Z", "is_private": false, "attachment_id": 34209}, {"count": 20, "tags": [], "bug_id": 60013, "is_private": false, "text": "I've done some further digging and adding support for the 'B' flag looks like a better way to solve this since that is more closely aligned with httpd. Need to see if that is possible.", "id": 193515, "time": "2016-09-06T13:34:01Z", "creator": "markt@apache.org", "creation_time": "2016-09-06T13:34:01Z", "attachment_id": null}, {"count": 21, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "text": "After further investigation, httpd won't handle some of these cases either. Given that the intention is to mimic, as far as possible, httpd functionality then I am currently leaning towards a solution that does that. That does mean some of the current tests cases will need adjustment else they will start failing.\n\nI will take another look at working with the undecoded URI but that presents its own set of problems.", "id": 193525, "time": "2016-09-06T19:10:35Z", "bug_id": 60013, "creation_time": "2016-09-06T19:10:35Z", "is_private": false}, {"count": 22, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "text": "I've reworked this in trunk/9.0.x. Please test and provide feedback. Assuming there are no issues, I'll back-port this for the next set of releases.", "id": 193536, "time": "2016-09-06T21:26:57Z", "bug_id": 60013, "creation_time": "2016-09-06T21:26:57Z", "is_private": false}, {"count": 23, "tags": [], "bug_id": 60013, "attachment_id": null, "text": "Thanks for the update. Testing the changes in trunk I found some failure cases. Attached the testcase", "id": 193545, "time": "2016-09-07T12:17:44Z", "creator": "santhanapreethi28@gmail.com", "creation_time": "2016-09-07T12:17:44Z", "is_private": false}, {"count": 24, "tags": [], "bug_id": 60013, "text": "Created attachment 34220\nB flag failure cases", "id": 193546, "time": "2016-09-07T12:19:10Z", "creator": "santhanapreethi28@gmail.com", "creation_time": "2016-09-07T12:19:10Z", "is_private": false, "attachment_id": 34220}, {"count": 25, "tags": [], "creator": "santhanapreethi28@gmail.com", "text": "I don't think using B flag for URLs with non-ASCII characters is the right approach. I am using httpd mod_rewrite for URL rewrite now and so far there have been no issues in non-ASCII characters getting rewritten as querystring.\n\nSupporting B flag will not solve the issue in the URLs in the attached testcases as &,= will also get encoded.", "id": 193548, "time": "2016-09-07T12:43:51Z", "bug_id": 60013, "creation_time": "2016-09-07T12:43:51Z", "is_private": false, "attachment_id": null}, {"count": 26, "tags": [], "bug_id": 60013, "text": "Let me do some more investigation.", "id": 193550, "time": "2016-09-07T14:56:45Z", "creator": "markt@apache.org", "creation_time": "2016-09-07T14:56:45Z", "is_private": false, "attachment_id": null}, {"count": 27, "tags": [], "bug_id": 60013, "is_private": false, "text": "I think I have a better understanding of what is going on.\n\nBoth Tomcat and httpd decode and normalize the URI before rewriting. The problem occurs later.\n\nConsider the following rule:\n\nRewriteRule /a/(.*) /b?$1\n\nWith httpd the query string is as follows:\n\n/a/id=%61 -> id=a\n/a/id=%3d -> id==\n/a/id=%3f -> id=?\n/b?id=%61 -> id=%61\n/b?id=%3d -> id=%3d\n/b?id=%3f -> id=%3f\n\nNote how the query string varies depending on whether the request goes through the rewrite rule or not. The problem isn't limited to the query string but it does illustrates the problem. Note also that an application isn't going to be able to unambiguously parse some of those re-written query strings and that using the [B] flag won't help in this since it will incorrectly encode the first '='.\n\nIn Tomcat the problem is more immediately apparent because the query string has to be presented in encoded form.\n\nI think we can get closer to the httpd behaviour but there are always going to be edge cases we won't be able to fix.", "id": 193551, "time": "2016-09-07T15:43:50Z", "creator": "markt@apache.org", "creation_time": "2016-09-07T15:43:50Z", "attachment_id": null}, {"count": 28, "tags": [], "creator": "santhanapreethi28@gmail.com", "attachment_id": null, "text": "I think the rewritten URL should be encoded(similar to mod_rewrite approach). In the fix provided in 8.0.37 release, the request-uri and querystring are encoded after rewrite. Handling redirect in a similar fashion will solve this problem. \n\nPlease update any progress in the RewriteValve.", "id": 193565, "time": "2016-09-08T12:41:46Z", "bug_id": 60013, "creation_time": "2016-09-08T12:41:46Z", "is_private": false}, {"count": 29, "tags": [], "bug_id": 60013, "text": "Those most recent tests aren't consistent with httpd's behaviour.\n\nBoth Tomcat and httpd process rewrites in very similar ways (to a point).\n\nThe original query string is retain in encoded form.\nThe path URI is processed in decoded and normalized form.\nAny query string generated by the rewrite is in decoded form (note this differs from the original).\nBefore any rewrite, any decoded elements are encoded.\n\nThe NE flag disables the encoding of decoded elements on rewrite.\n\nThe B flag encodes back references.\n\nIt is therefore possible for unwanted double encoding to occur when B and R are combined.\n\nIt is also possible for UTF-8 bytes to appear directly in the location header when R is combined with NE.\n\nI'm fairly confident of the latest code but I'll leave it a little while before back-porting to give you a chance to test it and provide feedback.", "id": 193572, "time": "2016-09-09T13:51:32Z", "creator": "markt@apache.org", "creation_time": "2016-09-09T13:51:32Z", "is_private": false, "attachment_id": null}, {"count": 30, "tags": [], "creator": "santhanapreethi28@gmail.com", "text": "Thanks for the update. The concerns when R flag is used with NE and B flag are valid. At a glance, the current fix seems to be fine. I will test the latest changes and get back to you.", "id": 193573, "time": "2016-09-09T14:04:22Z", "bug_id": 60013, "creation_time": "2016-09-09T14:04:22Z", "is_private": false, "attachment_id": null}, {"count": 31, "tags": [], "creator": "santhanapreethi28@gmail.com", "attachment_id": null, "text": "There seems to be a double encoding issue in QSA append. I added a test case with L and QSA flag which failed. \nLooks like the original query string as well as the part of the request URI which got rewritten as querystring are getting encoded. This needs to be handled in the isQsappend code block.", "id": 193578, "time": "2016-09-09T18:20:34Z", "bug_id": 60013, "creation_time": "2016-09-09T18:20:34Z", "is_private": false}, {"count": 32, "tags": [], "bug_id": 60013, "is_private": false, "text": "Created attachment 34226\nQueryString Append Failure", "id": 193579, "time": "2016-09-09T18:27:12Z", "creator": "santhanapreethi28@gmail.com", "creation_time": "2016-09-09T18:27:12Z", "attachment_id": 34226}, {"count": 33, "tags": [], "creator": "markt@apache.org", "text": "It appears that httpd (at least as provided by 2.4.7 in Ubuntu 14.04.5 which I am using to test) sometimes double encodes when QSA is used as well.\n\nI've reworked the QSA handling, added your test case, fixed another test case that was broken by this fix and made sure your name is in the changelog.\n\nThanks for sticking with this. Let us know how you get on. I'd like to get this all sported out in time for the next release scheduled for the end of the month.", "id": 193652, "time": "2016-09-12T16:02:11Z", "bug_id": 60013, "creation_time": "2016-09-12T16:02:11Z", "is_private": false, "attachment_id": null}, {"count": 34, "tags": [], "bug_id": 60013, "attachment_id": null, "text": "Thanks for the update. I am testing the latest changes. So far I found a failure when there is a rule with QSA but no querystring is supplied. It is probably due to the absence of null check in QSA handling code.\n\nI will let you know after testing more thoroughly.", "id": 193697, "time": "2016-09-14T11:32:34Z", "creator": "santhanapreethi28@gmail.com", "creation_time": "2016-09-14T11:32:34Z", "is_private": false}, {"count": 35, "tags": [], "creator": "santhanapreethi28@gmail.com", "text": "Created attachment 34247\nfailure case for QSA", "id": 193698, "time": "2016-09-14T11:35:52Z", "bug_id": 60013, "creation_time": "2016-09-14T11:35:52Z", "is_private": false, "attachment_id": 34247}, {"count": 36, "tags": [], "creator": "santhanapreethi28@gmail.com", "text": "Any update in QSA issue?", "id": 193823, "time": "2016-09-20T05:16:20Z", "bug_id": 60013, "creation_time": "2016-09-20T05:16:20Z", "is_private": false, "attachment_id": null}, {"count": 37, "tags": [], "bug_id": 60013, "is_private": false, "text": "Created attachment 34281\nfix for failure case (QSA)\n\nMark,\n\nthis is a small fix for the test \"failure case for QSA (attachment 34247)\" provided by Santhana Preethi (comment 35)", "id": 193847, "time": "2016-09-20T18:05:01Z", "creator": "tiagojco@gmail.com", "creation_time": "2016-09-20T18:05:01Z", "attachment_id": 34281}, {"count": 38, "tags": [], "creator": "markt@apache.org", "attachment_id": 34281, "text": "Comment on attachment 34281\nfix for failure case (QSA)\n\nThanks variation of the patch applied.", "id": 193854, "time": "2016-09-20T19:21:49Z", "bug_id": 60013, "creation_time": "2016-09-20T19:21:49Z", "is_private": false}, {"count": 39, "tags": [], "bug_id": 60013, "text": "Thanks for the fix.", "id": 193885, "time": "2016-09-21T12:54:59Z", "creator": "santhanapreethi28@gmail.com", "creation_time": "2016-09-21T12:54:59Z", "is_private": false, "attachment_id": null}, {"count": 40, "tags": [], "bug_id": 60013, "is_private": false, "text": "This has been fixed in the following branches:\n- 9.0.x for 9.0.0.M11 onwards\n- 8.5.x for 8.5.6 onwards\n- 8.0.x for 8.0.38 onwards", "id": 193889, "time": "2016-09-21T13:35:02Z", "creator": "markt@apache.org", "creation_time": "2016-09-21T13:35:02Z", "attachment_id": null}]