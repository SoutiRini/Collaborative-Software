[{"count": 0, "tags": [], "creator": "kparmar1@hotmail.com", "is_private": false, "id": 138059, "creation_time": "2010-07-01T13:12:07Z", "time": "2010-07-01T13:12:07Z", "bug_id": 49538, "text": "Created attachment 25678\nThis is the zip of the patch file and the junit test.\n\nI have implemented the Poisson function ( within the NumericFunctions ).  This also had the implication that I needed to use another library ( common-math - as I need not want to reinvent ) but I have updated the ant build.xml appropriately. \n\nI have also supplied a unit test for this function.  I have only done this very quickly therefore ( although it does work - with validation and a unit test) it would be good for someone to verify that my changes are ok within your framework.\n\nI have attached the addition file (unit test) but it seems that when I created the patch it has included this new file in it (I have used tortoiseSVN to create the patch).\n\nThe zip poi-hssf-poisson-patch.zip is attached.\n\n\nHope this is helpful.  If not please ask for any other info.\n\nRegards,\n\nKalpesh", "attachment_id": 25678}, {"count": 1, "tags": [], "text": "I have updated the patch as I missed out the case where if x is a decimal excel will automatically truncate it (now it is compliant with the excel definition of the Poisson function)\n\nRegards,\n\nI have (as before) attached the zip file which contains the patch ( created as before ) and the updated junit test.\n\npoi-hssf-poisson-patch2.zip is now the one to use.\n\nThanks\n\nKalpesh", "is_private": false, "id": 138204, "creator": "kparmar1@hotmail.com", "time": "2010-07-06T06:00:46Z", "bug_id": 49538, "creation_time": "2010-07-06T06:00:46Z", "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 49538, "text": "Created attachment 25712\n[Patch] The corrected Poisson implementation function\n\nUpdate of the first patch I posted.  I have added additional details below.", "id": 138205, "time": "2010-07-06T06:03:07Z", "creator": "kparmar1@hotmail.com", "creation_time": "2010-07-06T06:03:07Z", "is_private": false, "attachment_id": 25712}, {"count": 3, "tags": [], "bug_id": 49538, "attachment_id": 25712, "text": "Comment on attachment 25712\n[Patch] The corrected Poisson implementation function\n\nThere is an updated patch that should be used.  See details for the next attachment.", "id": 138241, "time": "2010-07-07T04:43:47Z", "creator": "kparmar1@hotmail.com", "creation_time": "2010-07-07T04:43:47Z", "is_private": false}, {"text": "Created attachment 25725\n[Patch] The re-corrected Poisson implementation function\n\nCurrent version for the Poisson implemented fuinction.", "tags": [], "creator": "kparmar1@hotmail.com", "is_private": false, "count": 4, "id": 138243, "time": "2010-07-07T04:51:23Z", "bug_id": 49538, "creation_time": "2010-07-07T04:51:23Z", "attachment_id": 25725}, {"count": 5, "tags": [], "bug_id": 49538, "attachment_id": null, "id": 138244, "time": "2010-07-07T04:52:20Z", "creator": "kparmar1@hotmail.com", "creation_time": "2010-07-07T04:52:20Z", "is_private": false, "text": "Hi,\n\nI have provided yet another update for the patch I posted.  The reason is that excel implementation for Poisson for x - 0 and mean - 0 is 1.  This is different to that of commons implementation ( it errors which actually is what should happen ).  \nI have followed the result that excel gives and now return a 1 in this case ( this I do not believe is right but its what excel does so I am being consistent with excel).\n\nThe zip poi-hssf-poisson-patch3.zip is attached above ( contains the patch and updated junit test).\n\nRegards,\n\nKalpesh"}, {"count": 6, "tags": [], "creator": "yegor@dinom.ru", "is_private": false, "text": "Thanks for the patch, applied in r979255\n\nWe had a debate whether to depend on commons-math or not and we think in the case of POISSON  we can do without third party libraries, the implementation of Poisson distribution is really a few lines of code: \n\n        private double probability(int k, double lambda) {\n            return Math.pow(lambda, k) * Math.exp(-lambda) / factorial(k);\n        }\n\n        private double cumulativeProbability(int x, double lambda) {\n            double result = 0;\n            for(int k = 0; k <= x; k++){\n                result += probability(k, lambda);\n            }\n            return result;\n        }\n\n\nYegor", "id": 138676, "time": "2010-07-26T08:24:56Z", "bug_id": 49538, "creation_time": "2010-07-26T08:24:56Z", "attachment_id": null}]