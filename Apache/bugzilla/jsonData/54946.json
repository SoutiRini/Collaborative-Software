[{"count": 0, "tags": [], "creator": "james.the.cmo@gmail.com", "is_private": false, "text": "We moved from Apache 2.2.22 to 2.2.24 and found a change in behavior that is breaking our embedded non-changeable clients. This behavior is changed in 2.2.4 and on the HEAD also.\n\nPreviously, when we used Apache 2.2.22 and Phusion Passenger 3.0.14 with a Rails/Sinatra app that returned any 3-digit status code like 200, we would get a http status-line pulled from a standard table like:\n\nHTTP/1.1<sp>200<sp>OK\n\nNow, in Apache 2.2.24 we are getting:\n\nHTTP/1.1<sp>200<sp>\n\nWe tracked this down into a change made for apache bug 44995 that caused this new behavior. The bug was a fix to handle custom status codes, but it also ended up breaking standard codes such that it no longer returned standard reason-phrase enhanced responses.\n\nI realize that the RFC2616 specification allows for the HTTP/1.1<sp>200<sp> response, but our client is not changeable and crashes on receiving no reason-phrase.\n\nThe code in question is in http_filters.c method validate_status_line(r).\n\nPreviously in 2.2.22 it did:\n\nif (  len <= 4 ) ... r->status_line = NULL\n\nand then in http_filters.c method basic_http_header_check(r,protocol) it would:\n\nif ( !r->status_line) {\n  r->status_line = ap_get_status_line(r->status);\n}\n\nwhich would effectively convert the 3-digit status code into a full status line complete with matching reason-phrase. I think the intention for the code is that if you have a 3-digit status code that it would look up in ap_get_status_line to find a standard reason-phrase\n\nThe new code in 2.2.24 in http_filters.c method validate_status_line(r) does:\n\nif ( len < 3 ... ) {\n... \n} else if ( len == 3 ) {\n  r->status_line = apr_pstrcat(r->pool, r->status_line, \" \", NULL);\n}\n\nwhich appends the space at the end. The http_filters.c call to ap_get_status_line therefore never gets triggered and the standard 3-digit code does not get the full matching reason-phrase. Notice that previously if the status code was 4 or less in length, and valid, it would NULL it out, but now it adds the space instead for *all* codes standard or custom.\n\nI don't think the intention of the bug fix in 44995 was to affect the behavior for standard status code, but only change the behavior for custom status codes.\n\nWe made a simple change to the new code to check for len <= 4 and it started working again, so this is definitely the cause of the new behavior. But this of course, reverted the enhancement in 44995\n\nA fix for this, then, would be to change the logic to something like this:\n\n- If it's a 3-digit status code (NNN)\n   - If it's known (i.e. has a valid response from ap_get_status_line) then use the valid response.\n   - If it's unknown (i.e. has an invalid response from ap_get_status_line) then set status line to (NNN<sp>)\n- If it's a 4-digit status code (NNN<sp>) already, then filter did not intend for there to be a reason phrase, so use that as the status_line\n- The other logic would remain the same for nulling it out if it is improperly formed and returning 500 if the code can't figure out what to do with it.\n\nThis would cause non-standard responses to return NNN<sp> and standard status codes to be converted to their standard reason phrase.\n\nTo test this you can use jsp:\n  <%response.setStatus(200);%> \nor a rails controller action:\n  def standard_response\n    render :nothing => true, :status => 200\n  end\nor a sinatra action:\n  get '/standard_response' do\n    200\n  end\n\nPlease let me know if you need any help seeing this problem, or understanding it. It is not allowing us to move to the latest secure apache without breaking our clients.", "id": 167119, "time": "2013-05-09T19:13:47Z", "bug_id": 54946, "creation_time": "2013-05-09T19:13:47Z", "attachment_id": null}, {"count": 1, "tags": [], "text": "I maybe should mention that the client is pretty common, there are over 50 million of them in the wild and used daily (and not just by us). Just to give some idea of the scope of the issue that it might be encountered more and more as people upgrade their servers.", "is_private": false, "id": 167120, "creator": "james.the.cmo@gmail.com", "time": "2013-05-09T19:34:15Z", "bug_id": 54946, "creation_time": "2013-05-09T19:34:15Z", "attachment_id": null}, {"count": 2, "tags": [], "creator": "rainer.jung@kippdata.de", "attachment_id": null, "text": "Note that the change was *not* introduced in 2.2.24. You are comparing 2.2.22 with a 2.4 release, not with 2.2.24. The cited code does not differ between 2.2.22 and 2.2.24 and the change you noted is in 2.4.\n\nPlease test with latest 2.4.4 and report back if the problem is still there.", "id": 167122, "time": "2013-05-09T20:29:59Z", "bug_id": 54946, "creation_time": "2013-05-09T20:29:59Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 54946, "attachment_id": null, "id": 167124, "time": "2013-05-09T21:00:47Z", "creator": "james.the.cmo@gmail.com", "creation_time": "2013-05-09T21:00:47Z", "is_private": false, "text": "Oh, got it. I was given to believe that I was comparing vanilla apache 2.2.22 and 2.2.24 but we had a version that had been already patched by someone else. I will perform this test with vanilla 2.4.4 and change the status on this if it is broken on that version. \n\nAnd I confirmed what you had said that 2.2.24 does not have that code change, thanks for the clarification."}, {"count": 4, "tags": [], "text": "If the problem persists with 2.4.4, can you please also check the following patch:\n\nhttp://people.apache.org/~rjung/patches/status_code-2_4.patch\n\nIf haven't testet it myself, but it would be useful if you could confirm it helps.\n\nThanks.", "is_private": false, "id": 167126, "creator": "rainer.jung@kippdata.de", "time": "2013-05-09T21:53:29Z", "bug_id": 54946, "creation_time": "2013-05-09T21:53:29Z", "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 54946, "is_private": false, "count": 5, "id": 167183, "time": "2013-05-14T04:54:56Z", "creator": "james.the.cmo@gmail.com", "creation_time": "2013-05-14T04:54:56Z", "text": "I confirmed that the undesired behavior (returns 200<sp>) is in 2.4.4.\n\nI also tried your patch and it successfully returns 200 OK instead of 200<sp>. I haven't done any other tests or verification other than that basic case of a 200 status code.\n\nThanks for the quick response!"}, {"count": 6, "tags": [], "text": "(In reply to comment #3)\n> Oh, got it. I was given to believe that I was comparing vanilla apache\n> 2.2.22 and 2.2.24 but we had a version that had been already patched by\n> someone else. I will perform this test with vanilla 2.4.4 and change the\n> status on this if it is broken on that version. \n\nIf you can share -- did you hit this on 2.2.24 on EC2?", "is_private": false, "id": 167195, "creator": "covener@gmail.com", "time": "2013-05-14T13:18:37Z", "bug_id": 54946, "creation_time": "2013-05-14T13:18:37Z", "attachment_id": null}, {"count": 7, "tags": [], "bug_id": 54946, "attachment_id": null, "is_private": false, "id": 167197, "time": "2013-05-14T15:09:24Z", "creator": "justin@bigblind.com", "creation_time": "2013-05-14T15:09:24Z", "text": "So I had run into this yesterday.  For me it's disrupting the use of Varnish.  I have a Rails + Passenger + httpd stack behind Varnish, and Varnish uses \"probes\" to check for site availability.  The method we currently have in place is to render a blank page, which is sufficient to generate a 200 response.  As it turns out, Varnish appears to care about the Reason-Phrase even if it receives a 200 - and now it doesn't have one, so Varnish thinks the apps are down.  As a workaround I'm forcing them to be \"healthy\" in the admin console, but doing this prevents Varnish from detecting failure on a given app server.\n\nI mentioned to Eric I was on 2.2.24 on Amazon Linux/EC2, which is why he asked.  I just downloaded their SRPM, and the patch at https://issues.apache.org/bugzilla/attachment.cgi?id=22019&action=diff is present via \"httpd-2.2.3-r693108.patch,\" which references:\n\nhttps://bugzilla.redhat.com/show_bug.cgi?id=853128 (no access)\nhttp://svn.apache.org/viewvc?view=revision&revision=693108\nhttp://svn.apache.org/viewvc?view=revision&revision=693224\n\nSo there's the smoking gun - at least for me."}, {"count": 8, "tags": [], "text": "Yeah, that's where we saw it, and why I initially thought it was in the 2.2 branch. We're going through them now to try and revert that patch or add this fix on their end, and then hopefully this bugzilla issue will get it fixed on 2.4.\n\nReturning this to the new status as I have added the requested information.", "attachment_id": null, "id": 167198, "creator": "james.the.cmo@gmail.com", "time": "2013-05-14T15:20:37Z", "bug_id": 54946, "creation_time": "2013-05-14T15:20:37Z", "is_private": false}, {"count": 9, "tags": [], "bug_id": 54946, "attachment_id": null, "id": 167200, "time": "2013-05-14T17:03:55Z", "creator": "justin@bigblind.com", "creation_time": "2013-05-14T17:03:55Z", "is_private": false, "text": "Note: it's also present on httpd-2.2.15-28.el6.centos.x86_64 (CentOS 6), which would also put it in RHEL 6."}, {"count": 10, "tags": [], "text": "Is submitting Rainer's patch the next step to resolution?", "is_private": false, "id": 167247, "creator": "justin@bigblind.com", "time": "2013-05-16T17:02:09Z", "bug_id": 54946, "creation_time": "2013-05-16T17:02:09Z", "attachment_id": null}, {"count": 11, "tags": [], "creator": "rainer.jung@kippdata.de", "is_private": false, "id": 167253, "creation_time": "2013-05-16T21:00:26Z", "time": "2013-05-16T21:00:26Z", "bug_id": 54946, "text": "If noone beats me to it I will do that next week.\n\nRainer", "attachment_id": null}, {"count": 12, "tags": [], "creator": "james.the.cmo@gmail.com", "attachment_id": null, "id": 168210, "creation_time": "2013-07-01T22:57:51Z", "time": "2013-07-01T22:57:51Z", "bug_id": 54946, "text": "Just wondering if this got committed or if it is still outstanding? Thanks!", "is_private": false}, {"count": 13, "tags": [], "text": "Applied to trunk in r1529014 and proposed for backport to 2.4.", "attachment_id": null, "id": 170407, "creator": "rainer.jung@kippdata.de", "time": "2013-10-03T21:55:19Z", "bug_id": 54946, "creation_time": "2013-10-03T21:55:19Z", "is_private": false}, {"count": 14, "tags": [], "text": "Applied to 2.4.x in r1530280.Will be part of 2.4.7.", "attachment_id": null, "id": 171326, "creator": "rainer.jung@kippdata.de", "time": "2013-11-19T21:29:28Z", "bug_id": 54946, "creation_time": "2013-11-19T21:29:28Z", "is_private": false}, {"count": 15, "tags": [], "creator": "justin@bigblind.com", "is_private": false, "text": "Any backports for 2.2?  It's the stock HTTPD on the most-current release of Red Hat Enterprise Linux (and thus CentOS), for example.\n\nThey're also still on 2.2.15, but I would think it would lend the patch a lot of credibility.", "id": 171354, "time": "2013-11-20T16:34:51Z", "bug_id": 54946, "creation_time": "2013-11-20T16:34:51Z", "attachment_id": null}, {"count": 16, "attachment_id": null, "bug_id": 54946, "text": "(In reply to Justin Honold from comment #15)\n> Any backports for 2.2?  It's the stock HTTPD on the most-current release of\n> Red Hat Enterprise Linux (and thus CentOS), for example.\n> \n> They're also still on 2.2.15, but I would think it would lend the patch a\n> lot of credibility.\n\nJustin, I think your affected 2.2 has a 2.4 backport or some other kind of patch.  2.2 has always thrown away 1-4 character status lines, which get replaced by the one the server would generate.", "id": 171402, "time": "2013-11-22T19:08:51Z", "creator": "covener@gmail.com", "creation_time": "2013-11-22T19:08:51Z", "tags": [], "is_private": false}, {"count": 17, "tags": [], "bug_id": 54946, "attachment_id": null, "id": 172519, "time": "2014-01-20T00:12:11Z", "creator": "covener@gmail.com", "creation_time": "2014-01-20T00:12:11Z", "is_private": false, "text": "Nothing more the ASF can do for the distribution Justin is on."}]