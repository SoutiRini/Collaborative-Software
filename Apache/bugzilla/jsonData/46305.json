[{"count": 0, "attachment_id": null, "bug_id": 46305, "text": "Hi,\n\nWhen launching a Java program from ant with \"fork=true\", the launched program seems to have *no* problem reading from the standard input (e.g. via System.in.read()), however this seems to stuff up the thread management of the launched program (i.e. the forked/child JVM) and possibly also crashes the child JVM.\n\nTo reproduce this on a Windows XP (with Service Pack 3) using Sun JDK 6 update 10, I wrote a class with a main method that simply contains:\n      try {\n         System.out.println(\"X[Return] to quit\");\n         while (System.in.read() != 'X')\n            ;\n\n         System.exit(0);\n         // see shutdown hook for subsequent shutdown operations\n      } catch (IOException e) {\n         e.printStackTrace();\n      }\n\nWhen the program runs and blocks/waits for input from the user, if attached via JMX using JVisualVM (a tool that comes with Sun JDK 6 installation, for viewing the memory and thread state of a VM), JVisualVM will freeze and could not return any info about the JVM. The main thread of the JVM itself still works since System.in.read() still responds to user input, but the other threads of the program's JVM seem to have died and therefore the program/JVM cannot be connected via RMI, remote debugging, using -QUIT signal to get JVM thread dump, etc.\n\nThe above is just a straightforward way to demostrate the problem, but in practice, without using JMX, the problem can also be reproduced using certain combinations of operations involving \"complex\" thread management, such as AWT event handling, RMI connection, etc. As such, it looks like that the problem is caused by a combination of the following factors: \n1. Launching a program from ant using \"fork=true\"\n2. The program blocks to receive input from user, e.g. System.in.read()\n3. The program performs \"complex\" threading operation, such as exporting RMI remote objects, displaying a java.awt.Frame, connecting to the VM via JMX etc.\n\nThe JVM hang problem is noticeable/reproducable:\n- On Windows XP (Service Pack 3, not sure about other service packs), but *no* problem on Linux and Windows Vista.\n- Using Sun JDK 1.4.2_14, 1.5.0_12, 1.6.0_10, and IBM J9 2.3\n- Ant 1.7.0 and 1.7.1\n\nI have no idea what could cause this problem, but I suspect that I/O redirection is not properly implemented in Windows XP, and thus crashing the JVM (e.g. interfering with the JVM's thread management).\n\nThanks,\n\nHendrik", "id": 122890, "time": "2008-11-26T22:55:34Z", "creator": "slackiz@fansbola.com", "creation_time": "2008-11-26T22:55:34Z", "tags": [], "is_private": false}, {"count": 1, "attachment_id": null, "bug_id": 46305, "text": "Could you please verify if this is solved in the currend \"head\" release?\nThis could have to do with pr 44544.", "id": 124706, "time": "2009-02-07T10:49:02Z", "creator": "jkf@apache.org", "creation_time": "2009-02-07T10:49:02Z", "tags": [], "is_private": false}, {"count": 2, "tags": [], "bug_id": 46305, "attachment_id": null, "is_private": false, "id": 126842, "time": "2009-05-07T02:32:02Z", "creator": "bodewig@apache.org", "creation_time": "2009-05-07T02:32:02Z", "text": "ping?"}, {"count": 3, "text": "Hi,\n\nSorry for the late response.\n\nThe problem is still not fixed in the source code that I downloaded from:\nsvn co http://svn.apache.org/repos/asf/ant/core/trunk/ ant-core\n\nIn this test, jvisualvm still freezed, when trying to connect to the application.\n\nRegards,\n\nHendrik", "bug_id": 46305, "is_private": false, "id": 127669, "time": "2009-06-05T01:24:54Z", "creator": "slackiz@fansbola.com", "creation_time": "2009-06-05T01:24:54Z", "tags": [], "attachment_id": null}, {"count": 4, "tags": [], "creator": "slackiz@fansbola.com", "text": "Hi,\n\nJust an update on this issue from an article that I found recently, which may be related since the described symptom is similar (though not the same).\n\nAccording to item G.2 in http://java.sun.com/j2se/1.4.2/docs/guide/rmi/faq.html#stdinput \n\n* Question:\nG.2 I have a single-threaded program that waits on standard input for a user command which will initiate an RMI call. However, my remote object cannot service this incoming remote call as the program appears to be blocked on standard input. What's the problem? \n\n* Answer:\nThis is a known problem, not with RMI, but with the thread that reads standard input. The thread does not yield on the blocking read, but instead stays running, hardly letting the listener get any cycles. We have tried two workarounds that seem successful: set the main thread (the one reading standard input) to a lower priority, or yield while bytes are not available in the stream before actually reading it.\n\nRegards,\n\nHendrik", "id": 133689, "time": "2010-01-18T19:17:14Z", "bug_id": 46305, "creation_time": "2010-01-18T19:17:14Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 46305, "text": "I am experiencing similar issues when using forked <java> followed by <input>. Let me explain the details.\n\nConsider the following snippet of Ant XML code:\n\n  <target name=\"java-input\">\n    <java classname=\"org.apache.tools.ant.launch.Launcher\" fork=\"true\">\n      <classpath>\n        <pathelement location=\"${ant.home}/lib/ant-launcher.jar\" />\n      </classpath>\n      <arg value=\"-buildfile\" />\n      <arg file=\"echo.xml\" />\n      <arg value=\"echo\" />\n    </java>\n    <input message=\"Do you want to proceed\" validargs=\"y,n\" defaultvalue=\"y\" addproperty=\"proceed\" />\n    <echo>User selected [${proceed}]</echo>\n  </target>\n\nWhen running this target, <input> asks for input two times (not one) and accepts second entry as actual input.\n\nIssue is not reproduced when running with fork=\"true\" and spawn=\"true\" OR with fork=\"false\".\n\nIssue can be fixed by adding inputstring=\"\" to <java>, but what if <java> has to accept some input as well?\n\nShouldn't Ant workaround such situation?", "id": 140141, "time": "2010-09-24T14:14:56Z", "creator": "flushdia@gmail.com", "creation_time": "2010-09-24T14:14:56Z", "is_private": false, "attachment_id": null}, {"count": 6, "attachment_id": null, "bug_id": 46305, "is_private": false, "id": 140169, "time": "2010-09-25T07:16:42Z", "creator": "nicolas.lalevee@hibnet.org", "creation_time": "2010-09-25T07:16:42Z", "tags": [], "text": "@flushdia: this is a known and fixed bug you are reporting, see #49119"}, {"count": 7, "tags": [], "creator": "flushdia@gmail.com", "is_private": false, "text": "(In reply to comment #6)\n> @flushdia: this is a known and fixed bug you are reporting, see #49119\n\nThank you for pointing me to the right bug. Didn't find it during initial lookup.", "id": 140171, "time": "2010-09-25T12:13:01Z", "bug_id": 46305, "creation_time": "2010-09-25T12:13:01Z", "attachment_id": null}]