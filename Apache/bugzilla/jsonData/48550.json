[{"count": 0, "tags": [], "creator": "knst.kolinko@gmail.com", "text": "It is just an idea, but I think that with Tomcat 7 we can update our server.xml and our examples to use UTF-8.\n\nThat is:\n\n1) add URIEncoding=\"UTF-8\" to HTTP and AJP <Connector> elements in the default server.xml\n\n2) configure SetCharacterEncodingFilter in the examples webapp\n\n3) update Servlet and JSP examples to allow UTF-8 input (1) and 2) will provide that) and to use UTF-8 as their output character encoding\n\n4) the servlet/JSP sources will probably stay as ISO-8859-1, as they are now\n\nPlease add, if I missed anything.\n\n\nFor reference:\nhttp://wiki.apache.org/tomcat/FAQ/CharacterEncoding\n\nI think we are a bit busy right now, so I am filing this issue, supposing that a more detailed discussion can be raised later on dev@ or users@.", "id": 133615, "time": "2010-01-14T13:52:03Z", "bug_id": 48550, "creation_time": "2010-01-14T13:52:03Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 48550, "attachment_id": null, "id": 142037, "creation_time": "2010-11-26T07:00:25Z", "time": "2010-11-26T07:00:25Z", "creator": "unnivm@gmail.com", "text": "Please clarify what is the actual difference between these two statements:\n\n3) update Servlet and JSP examples to allow UTF-8 input (1) and 2) will provide\nthat) and to use UTF-8 as their output character encoding\n\n4) the servlet/JSP sources will probably stay as ISO-8859-1, as they are now", "is_private": false}, {"count": 2, "tags": [], "bug_id": 48550, "attachment_id": null, "text": "(In reply to comment #1)\n> Please clarify what is the actual difference between these two statements:\n> \n> 3) update Servlet and JSP examples to allow UTF-8 input (1) and 2) will provide\n> that) and to use UTF-8 as their output character encoding\n> \n> 4) the servlet/JSP sources will probably stay as ISO-8859-1, as they are now\n\n#3 means changing the examples webapp to accept UTF-8 input (shouldn't be a big deal, as #1 and #2 provide that, as mentioned) and to set the <%@page pageEncoding=\"UTF-8\" @> in order to set the output encoding.\n\n#4 means that we won't bother re-encoding all of the JSP files as UTF-8 because a) such a change would be surprising to users and b) it is not necessary as those pages are probably all using pure ASCII at this point anyway", "id": 142340, "time": "2010-12-03T11:31:00Z", "creator": "chris@christopherschultz.net", "creation_time": "2010-12-03T11:31:00Z", "is_private": false}, {"count": 3, "tags": [], "text": "As a user of Tomcat and a webapp developer I would really like to see the 1) added to the default server.xml. I mostly develop apps using utf-8 encoding and if the customer is using tomcat extra care is needed to either not use non iso-8859-1 characters in query parameters or convincing them to modify the tomcat configuration (from these options the former is always the easier).\n\nSome test results:\n- Glassfish 3.0.1 documentation contains a similar, optional (default value \"UTF-8\") attribute called \"uri-encoding\" on the \"http\" element in the \"domain.xml\" (mentioned here: http://docs.sun.com/app/docs/doc/821-1753/girlq?l=en&a=view#indexterm-246 ). Unfortunately it does not have any effect on query encoding (tried it with different values but always ISO-8859-1 was used to decode query parameters). This might be a bug in GF but the intention is there.\n- On client side FF 3.6, Chrome 8, Opera 11 and IE9 Beta (and as I found on the web older versions too) use the character encoding of the page to encode the query parameters. So if the html is served with utf-8 encoding the query parameters are encoded with utf-8.", "attachment_id": null, "id": 142817, "creation_time": "2010-12-17T13:23:50Z", "time": "2010-12-17T13:23:50Z", "creator": "kiralyattila.hu@gmail.com", "bug_id": 48550, "is_private": false}, {"count": 4, "tags": [], "text": "One more info. Further test revealed that Glassfish 3.0.1 is actually using the request encoding for query parameter decoding. Calling request.setCharacterEncoding(\"UTF-8\"); triggered UTF-8 based decoding for parameters.", "attachment_id": null, "id": 142818, "creation_time": "2010-12-17T13:33:51Z", "time": "2010-12-17T13:33:51Z", "creator": "kiralyattila.hu@gmail.com", "bug_id": 48550, "is_private": false}, {"count": 5, "tags": [], "text": "(In reply to comment #3)\n> - On client side FF 3.6, Chrome 8, Opera 11 and IE9 Beta (and as I found on the\n> web older versions too) use the character encoding of the page to encode the\n> query parameters. So if the html is served with utf-8 encoding the query\n> parameters are encoded with utf-8.\n\nCould you provide references to the above? I had trouble finding official default values for the URL character encoding used by browsers.\n\nThere's also the trouble of users being able to override the default and revert back to (most likely) ISO-8859-1 encoding.\n\nRight now, I'm -1 for making URIEncoding=\"UTF-8\" by default since it might break a lot of servers, but I'm willing to be convinced. For the record, I always set URIEncoding=\"UTF-8\" on my projects but we don't want an out-of-the-box server configuration to surprise anyone.", "attachment_id": null, "id": 142819, "creation_time": "2010-12-17T14:35:27Z", "time": "2010-12-17T14:35:27Z", "creator": "chris@christopherschultz.net", "bug_id": 48550, "is_private": false}, {"count": 6, "tags": [], "bug_id": 48550, "attachment_id": null, "id": 142826, "creation_time": "2010-12-18T05:54:48Z", "time": "2010-12-18T05:54:48Z", "creator": "kiralyattila.hu@gmail.com", "text": "(In reply to comment #5)\n> (In reply to comment #3)\n> > - On client side FF 3.6, Chrome 8, Opera 11 and IE9 Beta (and as I found on the\n> > web older versions too) use the character encoding of the page to encode the\n> > query parameters. So if the html is served with utf-8 encoding the query\n> > parameters are encoded with utf-8.\n> \n> Could you provide references to the above? I had trouble finding official\n> default values for the URL character encoding used by browsers.\n\nI am afraid I can not give official references. The exact browser versions mentioned above were tested by me (with UTF-8 and ISO-8859-1 encoded pages-links) and those work like I wrote. But it is also mentioned in\n- Tomcat wiki: http://wiki.apache.org/tomcat/FAQ/CharacterEncoding#Q9\n\"Many browsers are starting to offer (default) options of encoding URIs using UTF-8 instead of ISO-8859-1. Some browsers appear to use the encoding of the current page to encode URIs for links (see the note above regarding browser behavior for POST encoding).\"\n- MozillaZine KB about the Firefox \"network.standard-url.encode-query-utf8\" config property: \nhttp://kb.mozillazine.org/Network.standard-url.encode-query-utf8\n\"For compatibility with these websites, as well as parity with IE and Opera, Mozilla now treats the query portion of a URI (the part following the ?) differently than the rest.[...]\nEncode the query portion of IRIs using the same encoding as the current page. (Default)\"\n\nAdditionally Jetty is also using UTF-8 by default:\nJetty wiki: http://docs.codehaus.org/display/JETTY/International+Characters+and+Character+Encodings#InternationalCharactersandCharacterEncodings-InternationalcharactersinURLs\n\"The W3C organization's HTML standard now recommends the use of UTF-8: http://www.w3.org/TR/html40/appendix/notes.html#non-ascii-chars and accordingly jetty-6 series uses a default of UTF-8.\"\n\n> \n> There's also the trouble of users being able to override the default and revert\n> back to (most likely) ISO-8859-1 encoding.\n> \n> Right now, I'm -1 for making URIEncoding=\"UTF-8\" by default since it might\n> break a lot of servers, but I'm willing to be convinced. For the record, I\n> always set URIEncoding=\"UTF-8\" on my projects but we don't want an\n> out-of-the-box server configuration to surprise anyone.\n\nThis is true. However for me it seems the web is moving to an UTF-8 based direction. So I think a change to the default encoding should be made sometimes in Tomcat. That is a backward compatibility issue so it should be made in a major point release. The 7.0 could be that. If it is not done now the next possibility is at 8.0 in the future. I don't say developers can't live without this change I can cope with it as I did it always (I only mentioned my reasons here because this issue was already opened).\n\nProbably my real problem is that query parameter decoding is inconsistent between servlet containers and there is no way to regulate it on a per webapp base (instead of a server wide option) in Tomcat (could use \"useBodyEncodingForURI=true\" attribute but it still a modification in the server.xml).\n\nI would also be happy with a Jetty like solution. In jetty 7.2 UTF-8 is the default for query decoding but it is overridable with request.setAttribute(\"org.eclipse.jetty.server.Request.queryEncoding\", \"ISO-8859-1\"); on a per request base. Tomcat could have something like that. So in a filter I could call:\nrequest.setCharacterEncoding(\"UTF-8\"); // for Glassfish 3 query decoding, but it is already done anyway as it is needed for POST-s too for all serlet containers\nrequest.setAttribute(\"org.eclipse.jetty.server.Request.queryEncoding\", \"UTF-8\"); // for Jetty, just to be sure\nrequest.setAttribute(\"org.apache.tomcat.Request.queryEncoding or similar\", \"UTF-8\"); // for Tomcat 7 and up\nand could get a safe portable way for at least 3 servlet containers.", "is_private": false}, {"count": 7, "tags": [], "bug_id": 48550, "attachment_id": null, "text": "I had some problems forcing Cocoon output to be UTF-8 (using Tomcat5 and Cocoon 2.1.11) because I didn't realise the default was ISO-8859-1 (everything else in my sitemaps and XSLT was set to UTF-8, which is what puzzled me).\n\nOur internal controls insist on UTF-8 for everything, so this was only exposed when we accessed external resources (which could of course be anything, including Windows-1252).\n\nMy gut feeling is that if we are to continue the general move towards end-to-end XML in the business process (or at least, XML-as-early-as-possible), then making the character repertoire uniform is A Good Idea, so a default of UTF-8 would seem very sensible.", "id": 142907, "time": "2010-12-22T05:16:10Z", "creator": "peter@silmaril.ie", "creation_time": "2010-12-22T05:16:10Z", "is_private": false}, {"count": 8, "tags": [], "bug_id": 48550, "attachment_id": null, "id": 169026, "creation_time": "2013-08-01T22:07:10Z", "time": "2013-08-01T22:07:10Z", "creator": "kpreisser@apache.org", "text": "Hi,\n\nas this has not been applied to Tomcat 7, what about Tomcat 8?", "is_private": false}, {"count": 9, "tags": [], "creator": "markt@apache.org", "text": "Part 1 of the 4 tasks in the description has been completed for trunk (a.k.a 8.0.x)", "id": 169266, "time": "2013-08-07T19:21:45Z", "bug_id": 48550, "creation_time": "2013-08-07T19:21:45Z", "is_private": false, "attachment_id": null}, {"count": 10, "tags": [], "creator": "markt@apache.org", "text": "This has been fixed for trunk a.k.a 8.0.x and will be included in 8.0.0-RC2 onwards.", "id": 169272, "time": "2013-08-07T20:10:14Z", "bug_id": 48550, "creation_time": "2013-08-07T20:10:14Z", "is_private": false, "attachment_id": null}]