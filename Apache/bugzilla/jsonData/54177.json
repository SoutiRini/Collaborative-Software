[{"count": 0, "text": "When you call http://server.example/jkmanager?mime=xml on a server with a German locale setting and timezone MET (for \"Mitteleurop\u00e4ische Zeit\", note the umlaut \"\u00e4\"), the result XML ist non-well-formed because of that umlaut character:\n\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n...\n<jk:time\n  datetime=\"20121120164838\"\n  tz=\"Mitteleurop\ufffdische Zeit\"\n  unix=\"1353426518\"\n/>\n...\n\nThe umlaut character in the tz attribute is sent not in UTF-8 encoding as declared but in ISO-8859-1 encoding. Conforming (=all) XML processors refuse to parse this.", "bug_id": 54177, "is_private": false, "id": 163558, "time": "2012-11-20T15:53:35Z", "creator": "Jochen.Schwarze@cit.de", "creation_time": "2012-11-20T15:53:35Z", "tags": [], "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 54177, "attachment_id": null, "id": 163562, "time": "2012-11-20T22:29:18Z", "creator": "chris@christopherschultz.net", "creation_time": "2012-11-20T22:29:18Z", "is_private": false, "text": "Yuck. Looks like\n\nstatic int status_strftime(time_t clock, int mime, char *buf_time, char *buf_tz,\n                           jk_logger_t *l)\n\nneeds to be \n\nstatic int status_strftime(time_t clock, int mime, char *buf_time,\n                           wchar_t *buf_tz,\n                           jk_logger_t *l)\n\n...and associated ripple effects.\n\nAny other cases where non-US-ASCII characters are used in jk-status?\n\nWide characters are such a pain in C..."}, {"count": 2, "attachment_id": null, "bug_id": 54177, "is_private": false, "id": 163564, "time": "2012-11-21T08:14:39Z", "creator": "Jochen.Schwarze@cit.de", "creation_time": "2012-11-21T08:14:39Z", "tags": [], "text": "I haven't seen other cases so far. (Using Non-US-ASCII characters in worker names might be regarded unwise and can be avoided easily ... ;-)"}, {"count": 3, "attachment_id": null, "bug_id": 54177, "is_private": false, "id": 180056, "time": "2014-12-29T14:51:04Z", "creator": "rainer.jung@kippdata.de", "creation_time": "2014-12-29T14:51:04Z", "tags": [], "text": "The time formatting is done usinf strftime(). That in turn uses LC_TIME (resp. LC_ALL, LANG) to check the locale and charset to use. The Umlaut conmes form the fact, that your system has a probably german locale set in one of those variables. The fact that the umlaut is not UTF8 encoded as declared by the jk-status XML header indicates, that you LC_TIME (or LC_ALL or LANG) points to a 8859 de-Locale.\n\nUnfortunately it is not safe to set LC_TIME in the jk status worker before calling strftime(), because this would not be safe if the surrounding web server runs in a multi-threaded way as is typical for today's use.\n\nInstead of trying to guess the locale and transforming the characters fro that locale to the UTF-8 charset, I have changed the formatting to use pure numeric date strings in r1648352. Will be part of version 1.2.41.\n\nAs you said: non-ASCII data coming from configuration can and should be avoided. If you find other places were the status worker produces non-well-formed output, please let us know.\n\nThanks and regards,\n\nRainer"}, {"count": 4, "tags": [], "text": "For the sake of completeness: Chris has found an API, strftime_l(), which allows to format using a chosen call-specific locale. This API is pretty recent though, it is only part of the Open Group Unix Specification Version 4, which seems to have been published 2013.\n\nWe could detect presence of strftime_l() during \"configure\", then use this modern API to format a more human-friendly time format string using the \"C\" locale, thus ending up with an ASCII representation.\n\nI'm not planning to do that work currently, but patches are welcome.", "attachment_id": null, "id": 180058, "creator": "rainer.jung@kippdata.de", "time": "2014-12-29T16:27:40Z", "bug_id": 54177, "creation_time": "2014-12-29T16:27:40Z", "is_private": false}]