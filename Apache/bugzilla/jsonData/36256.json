[{"count": 0, "tags": [], "bug_id": 36256, "attachment_id": null, "id": 78657, "time": "2005-08-18T21:00:31Z", "creator": "andreok@mail.com", "creation_time": "2005-08-18T21:00:31Z", "is_private": false, "text": "I'm having problems using Project.executeTarget() method inside Script Tasks, \nfor calling multiple times a target task.\n\nHere's a hypothetical script (it tries to compile 2 Java classes from /src \nto /bin) that generates the problem:\n\"<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<project name=\"script_test\" default=\"test\">\n\n\t<property name=\"XDOCLET_HOME\" value=\"c:\\xdoclet-1.2.3\"/>\n\t<property name=\"WL_HOME\" value=\"C:\\bea\\weblogic81\"/>\n\t<property name=\"JAVA_HOME\" value=\"C:\\bea\\jdk141_05\"/>\n\t<property name=\"CLASS_NAME\" value=\"\"/>\n\n\t<target name=\"test\">\n\t\n\t\t<script language=\"javascript\"> <![CDATA[\n\t\t\t\n\t\t\techo = project.createTask(\"echo\");\n\n\t\t\t// Create a fileset\n\t\t\tfs = project.createDataType(\"fileset\");\n\t\t\t\n\t\t\tfs.setDir(new java.io.File(project.getBaseDir()\n+\"/src\"));\n\t\t\t\t\t\t\n\t\t\tfs.setIncludes(\"**/*.java\");\n\n\t\t\t// Get the files (array) of that fileset\n\t\t\tds = fs.getDirectoryScanner(project);\n\t\t\tsrcFiles = ds.getIncludedFiles();\n\t\t\t\n\t\t\t// iterate over that array\n\t\t\tfor (i=0; i<srcFiles.length; i++) {\n\t\t        var filename = srcFiles[i].toString();\n\t\t\t\tvar fileSeparator = java.lang.System.getProperty\n(\"file.separator\");\n\t\t\t\t\n\t\t\t\techo.setMessage(\"filename=\"+filename);\n\t\t\t\techo.execute();\n\t\t\t\t\n\t\t\t\tvar className = filename.substring\n(filename.lastIndexOf(fileSeparator)+1,filename.lastIndexOf(\".java\"));\n\n\t\t\t\techo.setMessage(\"className=\"+className);\n\t\t        echo.execute();\n\n\t\t\t\tproject.setProperty(\"CLASS_NAME\",className);\n\n\t\t\t\tproject.executeTarget(\"test_target\");\n\t\t\t\t\n\t\t\t}\n      \n\t\t]]></script>\n\t\n\t</target>\n\t\n\t<target name=\"test_target\">\n\n\t\t<script language=\"javascript\"> <![CDATA[\n\t\t\t\n\t\t\techo = project.createTask(\"echo\");\n\n\t\t\techo.setMessage(\"className2=\"+project.getProperty\n(\"CLASS_NAME\"));\n\t\t    echo.execute();\n\n\t\t]]></script>\n\n\t\t<javac srcdir=\"./src\" includes=\"**/${CLASS_NAME}.java\" \nincludejavaruntime=\"false\" destdir=\"./bin\" classpath=\"${WL_HOME}\n\\server\\lib\\weblogic.jar;${JAVA_HOME}/jre/lib/rt.jar;${JAVA_HOME}/lib/tools.jar\"\n/>\n\n\t</target>\n\t\n</project>\"\n\nI have two Java classes (\"test.Test1\" and \"test.Test2\") in the /src dir, but \nthe script only compiles the first one.\n\nHere's the script console output:\n\"Buildfile: build.xml\n\ntest:\n     [echo] filename=test\\Test1.java\n     [echo] className=Test1\n\ntest_target:\n     [echo] className2=Test1\n     [echo] ---------------------------------\n     [echo] filename=test\\Test2.java\n     [echo] className=Test2\n\ntest_target:\n     [echo] className2=Test2\n     [echo] ---------------------------------\"\n\nAs you may see in the console output, the javac task is called twice with the \nsame includes value (\"**/Test1.java\"), because it only compiles the Test1 \nclass. So the second call, to compile the Test2 class, uses the same value from \nthe first call, instead of the second (\"**/Test2.java\").\n\nThe problem may be related to a bind problem in the includes argument from \njavac task, because the script from inside \"test_target\" task getts the \ncorrect \"CLASS_NAME\" property value (className2).\n\nThanks,\n       Andre Kovacs"}, {"count": 1, "tags": [], "text": "without mentioning the nightmares that will haunt me as a result of having \nactually tried to understand WHAT you are doing, let alone WHY... it looks like \nyour main problem may have to do with reusing your task... one problem is \nprobably your CLASS_NAME property is evaluated only when the fileset is created \nfor your target... which takes place once.  If you get a reference to your \njavac task and call its reconfigure() method prior to invoking it, that might \nhelp.  A quick fix might be to declare the final fileset in your script and \nreset its includes attribute with each call, replacing the javac fileset with a \nreference to your scripted fileset. Also, Project.createTask/DataType(typename) \nis no longer recommended.  Your builds will be more stable if you directly \ninstantiate the class you want to use.  I hope that this was JUST an example \nsince there are obviously much easier ways to accomplish the task depicted here.\n\nAll in all you can't expect Ant to take such abuse with a smile...", "attachment_id": null, "bug_id": 36256, "id": 78674, "time": "2005-08-18T23:19:18Z", "creator": "mbenson@apache.org", "creation_time": "2005-08-18T23:19:18Z", "is_private": false}, {"count": 2, "tags": [], "creator": "andreok@mail.com", "attachment_id": null, "id": 78676, "time": "2005-08-18T23:55:35Z", "bug_id": 36256, "creation_time": "2005-08-18T23:55:35Z", "is_private": false, "text": "Hello Matt,\n\nThanks for your help.\n\nSorry about my example (I know that it looks idiot because a simple fileset \ntask inside the javac task is sufficient, but in my real problem I'm using a \nextremely complicated xdoclet task, so I preferred to replace it with the javac \none). You got the point... the real problem is related to multiple calls to a \ntarget...\n\nThe quick fix \"... declare the final fileset in your script and \nreset its includes attribute with each call, replacing the javac fileset with a \nreference to your scripted fileset.\" doesn't work with other tasks...\n\nThe suggestion \"Your builds will be more stable if you directly\ninstantiate the class you want to use.\" looks fine, I'll try it...\n\nThanks,\n       Andre Kovacs"}, {"count": 3, "tags": [], "bug_id": 36256, "attachment_id": null, "id": 78708, "time": "2005-08-19T16:02:34Z", "creator": "andreok@mail.com", "creation_time": "2005-08-19T16:02:34Z", "is_private": false, "text": "Hello Matt,\n\nI replaced the Project.executeTarget() with the following function, and it \nworks fine now:\n\"function executeTarget(targetName) {\n    var targets = project.getTargets();\n    var target = targets.get(targetName);\n    var tasks = target.getTasks();\n    for (j=0;j<tasks.length;j++) {\n       var task = tasks[j];\n       if (!task.getClass().toString().equals(\"class \norg.apache.tools.ant.UnknownElement\")) {\n          task.reconfigure();\n       }\n    }\n    target.performTasks();\n}\"\n\nIt seems that the problem was related to a task configuration cache, and can be \nsolved forcing a reconfiguration with the Task.reconfigure() method.\n\nThanks,\n        Andre Kovacs"}]