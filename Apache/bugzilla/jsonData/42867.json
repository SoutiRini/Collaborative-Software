[{"count": 0, "tags": [], "bug_id": 42867, "attachment_id": null, "text": "I created a new JavaSamplerClient by extending AbstractJavaSamplerClient. The\nmethod getDefaultParameters returns five parameters with default values.\n\nEverything works fine, but when I add a new Parameter to the Java Request, it\ndisappears when selecting another element in the left tree and changing back to\nthe Java Request.\n\nIf the Java Request settings are still open when executing the Test Plan, the\nadditional Parameter is handed over to the Java Request correctly. The parameter\neven is stored in the JMX file, but when the file is loaded again, it disappears\nagain.", "id": 105314, "time": "2007-07-12T04:04:47Z", "creator": "chris.p@web.de", "creation_time": "2007-07-12T04:04:47Z", "is_private": false}, {"count": 1, "tags": [], "creator": "chris.p@web.de", "attachment_id": null, "id": 105316, "time": "2007-07-12T04:43:40Z", "bug_id": 42867, "creation_time": "2007-07-12T04:43:40Z", "is_private": false, "text": "According to the documentation, the Add/Delete buttons do not serve any purpose.\nSo this is a feature request and not a bug report.\n\nIt would be great, if this feature could be implemented soon. If this is not\npossible, please tell me. Then I will have to find another solution for my problem.\n\nThank You!"}, {"count": 2, "tags": [], "creator": "sebb@apache.org", "attachment_id": null, "id": 105319, "time": "2007-07-12T05:56:09Z", "bug_id": 42867, "creation_time": "2007-07-12T05:56:09Z", "is_private": false, "text": "Unlikely to be fixed in near future, so if you want a quick solution, I \nsuggest you add some more optional parameters to your client."}, {"count": 3, "tags": [], "creator": "alkon2000@mail.ru", "text": "I have a same problem. But I can to fix it.\nTo fix this bug you may apply this patch:\n\nAdd this code to the JavaConfigGui.java (version 2.9):\n\npublic void actionPerformed(ActionEvent evt) {\n...\n    if (currArgs.getArgumentCount() != 0) {\n       // Already configured - skip getting defaults\n       argsPanel.configure(currArgs);\n       return;\n    }\n...\n\n\nFull method code:\n\n    @Override\n    public void actionPerformed(ActionEvent evt) {\n        if (evt.getSource() == classnameCombo) {\n            String className = ((String) classnameCombo.getSelectedItem()).trim();\n            try {\n                JavaSamplerClient client = (JavaSamplerClient) Class.forName(className, true,\n                        Thread.currentThread().getContextClassLoader()).newInstance();\n\n                Arguments currArgs = new Arguments();\n                argsPanel.modifyTestElement(currArgs);\n                \n                if (currArgs.getArgumentCount() != 0) {\n                    // Already configured - skip getting defaults\n                    argsPanel.configure(currArgs);\n                    return;\n                }\n                \n                Map<String, String> currArgsMap = currArgs.getArgumentsAsMap();\n\n                Arguments newArgs = new Arguments();\n                Arguments testParams = null;\n                try {\n                    testParams = client.getDefaultParameters();\n                } catch (AbstractMethodError e) {\n                    log.warn(\"JavaSamplerClient doesn't implement \"\n                            + \"getDefaultParameters.  Default parameters won't \"\n                            + \"be shown.  Please update your client class: \" + className);\n                }\n\n                if (testParams != null) {\n                    PropertyIterator i = testParams.getArguments().iterator();\n                    while (i.hasNext()) {\n                        Argument arg = (Argument) i.next().getObjectValue();\n                        String name = arg.getName();\n                        String value = arg.getValue();\n\n                        // If a user has set parameters in one test, and then\n                        // selects a different test which supports the same\n                        // parameters, those parameters should have the same\n                        // values that they did in the original test.\n                        if (currArgsMap.containsKey(name)) {\n                            String newVal = currArgsMap.get(name);\n                            if (newVal != null && newVal.length() > 0) {\n                                value = newVal;\n                            }\n                        }\n                        newArgs.addArgument(name, value);\n                    }\n                }\n\n                argsPanel.configure(newArgs);\n            } catch (Exception e) {\n                log.error(\"Error getting argument list for \" + className, e);\n            }\n        }\n    }", "id": 170627, "time": "2013-10-16T07:58:27Z", "bug_id": 42867, "creation_time": "2013-10-16T07:58:27Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "creator": "peter@crypt.co.nz", "attachment_id": null, "is_private": false, "id": 175300, "time": "2014-05-18T01:29:45Z", "bug_id": 42867, "creation_time": "2014-05-18T01:29:45Z", "text": "Any chance the below patch could get applied to trunk?"}, {"count": 5, "tags": [], "text": "\n\nUnfortunately, this fix is not correct with the logic of the Java Sampler. \n\nWith this patch, if I add a Java Sampler with JavaTest, I have some parameters (like ResultData, SamplerData, etc.), then (always in the same sampler and without any modification), when I change the classname to SleepTest, I keep the JavaTest parameters and I don't have the SleepTest params (SleepTime and SleepMask)! \n\nIt's normal to reset the params when you change the classname (the if statement : \"if (evt.getSource() == classnameCombo) { }\").\n\nIf your issue is to allow to save the additional params added by the Add button, the patch would be more bigger.", "is_private": false, "bug_id": 42867, "id": 175301, "time": "2014-05-18T08:45:22Z", "creator": "milamber@apache.org", "creation_time": "2014-05-18T08:45:22Z", "attachment_id": null}, {"count": 6, "tags": [], "text": "(In reply to Milamber from comment #5)\n> \n> Unfortunately, this fix is not correct with the logic of the Java Sampler. \n> \n> With this patch, if I add a Java Sampler with JavaTest, I have some\n> parameters (like ResultData, SamplerData, etc.), then (always in the same\n> sampler and without any modification), when I change the classname to\n> SleepTest, I keep the JavaTest parameters and I don't have the SleepTest\n> params (SleepTime and SleepMask)! \n\nBut that is easy to work-around, just remove all the values and then select the class you want and the defaults get added in. That seemed to work fine for me and didn't add any more sigficiant complexity in the process, just needed to know if I didn't want the current values for that sampler.\n\n> \n> It's normal to reset the params when you change the classname (the if\n> statement : \"if (evt.getSource() == classnameCombo) { }\").\n> \n> If your issue is to allow to save the additional params added by the Add\n> button, the patch would be more bigger.\n\nAgreed, but that would require quite a change to the logic as it would require knowing if you had just changed the Java sampler or not. However this patch does resolve the issue without needing a complete re-write of the sampler.", "attachment_id": null, "bug_id": 42867, "id": 175435, "time": "2014-05-23T22:57:38Z", "creator": "peter@crypt.co.nz", "creation_time": "2014-05-23T22:57:38Z", "is_private": false}]