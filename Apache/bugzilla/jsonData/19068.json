[{"count": 0, "tags": [], "bug_id": 19068, "attachment_id": null, "text": "This bug affects revision 1.13 of JavaClass.java.\n\nThe org.apache.bcel.classfile.JavaClass.getAllInterfaces() method calls\nJavaClass.getInterfaces(), which uses a Repository to look up the class's\ninterfaces.  If any of the interfaces are not found, then getInterfaces()\nreturns null.  However, getAllInterfaces() tries to dereference this null\nreference, leading to the exception.\n\nA simple fix would be to return a zero-length array from getInterfaces() in the\ncase where a repository lookup fails.\n\nA better fix would be to have getInterfaces() throw the ClassNotFoundException\nout of the method.  In general, I think repository lookup failures should be\npropagated as much as possible, so the program using BCEL can detect them. \nRight now there is a println() to System.err in getInterfaces(), which is not a\nvery useful way to report the failure.", "id": 35325, "time": "2003-04-16T14:12:01Z", "creator": "daveho@cs.umd.edu", "creation_time": "2003-04-16T14:12:01Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 19068, "text": "This analysis, imo, is completely accurate. getInterfaces() should throw an \nexception if the repository fails, and by association, getAllInterfaces(), as \nwell. Of course this means changing the public signature and potentially \ncausing incompatibilities with current clients. My vote would be to make that \nchange now anyway, as it is a bad problem, but wonder what others think?", "id": 70817, "time": "2005-02-11T07:38:07Z", "creator": "dbrosius@mebigfatguy.com", "creation_time": "2005-02-11T07:38:07Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 19068, "attachment_id": null, "is_private": false, "id": 71654, "time": "2005-03-01T04:21:07Z", "creator": "dbrosius@mebigfatguy.com", "creation_time": "2005-03-01T04:21:07Z", "text": "This appears to have already been committed."}]