[{"count": 0, "tags": [], "bug_id": 35887, "attachment_id": null, "text": "I am programmatically calling a java task, with fork set to false. The java\nprogram I am calling ends with a System.exit(0), so an ExitException is being\nthrown.\n\nAnt is converting it in a BuildException with no cause, so it is difficult to\ndetermine what happened.\n\nCould this BuildException be constructed with the original ExitException as its\ncause?", "id": 77705, "time": "2005-07-27T11:03:57Z", "creator": "rruiz@gridsystems.com", "creation_time": "2005-07-27T11:03:57Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 35887, "attachment_id": null, "is_private": false, "id": 77717, "time": "2005-07-27T13:13:11Z", "creator": "stevel@apache.org", "creation_time": "2005-07-27T13:13:11Z", "text": "it looks like the exception is being turned into a return value, so the java\ncode hides whether something is forking/nonforking. That is, the logic that\ncreates a BuildException when failoneerror==true && returnCode!=0 doesnt see the\nExitException.\n\nwhat about setting failoneerror=false and then naming a property from the exit code?"}, {"count": 2, "tags": [], "bug_id": 35887, "text": "We could actually throw an ExitStatusException, the subclass of BuildException,\ninside <java>, so you could pull out the data from there.\n\none problem though, that exit code is going to be picked up by Main() and turned\ninto the exit code of ant when it fails. This would certainly be a change in\nbehaviour, one that could cause surprises...", "id": 90873, "time": "2006-07-04T20:53:44Z", "creator": "stevel@apache.org", "creation_time": "2006-07-04T20:53:44Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "creator": "stevel@apache.org", "text": "Ant 1.7beta 1 will pass the exception up stream, so if you explicitly catch an\nExitException() you can get at the exit code.", "id": 92464, "time": "2006-08-23T12:48:53Z", "bug_id": 35887, "creation_time": "2006-08-23T12:48:53Z", "is_private": false, "attachment_id": null}]