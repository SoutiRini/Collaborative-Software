[{"count": 0, "tags": [], "bug_id": 37051, "attachment_id": null, "id": 81054, "time": "2005-10-12T17:35:10Z", "creator": "graham@wyenet.net", "creation_time": "2005-10-12T17:35:10Z", "is_private": false, "text": "I am building 64bit Apache 2.0.54, with shared libraries, and SSL enabled, the \napplication builds without any problems, but when running the server the \nfollowing errors appear in the error log.\n\nMy OpenSSL is 0.9.8, but I have applied the patch to Mod_SSL which allows this \nversion of OpenSSL to work.\n\n[Wed Oct 12 16:24:19 2005] [warn] Init: SSL server IP/port conflict: \nwww.philipm\norris.uk.com:443 (/etc/httpd/conf/ssl.conf:280) vs. www.queenswood.co.uk:443 \n(/e\ntc/httpd/conf/ssl.conf:306)\n[Wed Oct 12 16:24:19 2005] [warn] Init: SSL server IP/port conflict: \nwww.crowsfe\net.net:443 (/etc/httpd/conf/ssl.conf:254) vs. www.queenswood.co.uk:443 \n(/etc/htt\npd/conf/ssl.conf:306)\n[Wed Oct 12 16:24:19 2005] [warn] Init: You should not use name-based virtual \nho\nsts in conjunction with SSL!!\n[Wed Oct 12 16:24:19 2005] [notice] Apache/2.0.54 (Unix) PHP/5.0.5 \nmod_ssl/2.0.5\n4 OpenSSL/0.9.8 DAV/2 configured -- resuming normal operations\n\nI have compiled Apache under Solaris 9, with GCC 3.4.2, and also in Solaris 10 \nwith GCC 3.4.2, and with Sun Studio 10, and in every instance I've had the \nerrors in the log. (System is a Netra T1/AC200 with a 500mhz Ultrasparc IIi \nCPU)\n\nIt's a minor problem, as the server continues, and it correctly links my IP \nVirtual SSL sites to their correct certificates without any problems, it \nappears to just be a logging issue.\n\nIf I switch to a 32bit build, then there is no problem, the SSL warning is \ngone, and everything works fine, but I wish to use the 64bit build to get \naround the STDIO limit of 255 open files that Solaris has."}, {"count": 1, "tags": [], "bug_id": 37051, "attachment_id": null, "id": 81072, "time": "2005-10-12T22:35:43Z", "creator": "rpluem@apache.org", "creation_time": "2005-10-12T22:35:43Z", "is_private": false, "text": "It would be helpful if you can post your ssl and virtual host configuration here."}, {"count": 2, "tags": [], "bug_id": 37051, "attachment_id": null, "text": "Thanks, here is the ssl.conf file I am using to test the 64bit build, its a \ncopy from our of our 'production' servers which are currently on a 32bit build \nof Apache 2.0.54, I've xxx'ed out part of the pathnames as they appear on the \nproduction server, but apart from that the config file is 'as is'\n\nBuilding the same source tree in 32 bit resolves the warning, but as soon as I \ncompile into 64bit I have the problem. \n\nMy configure is /\n./configure --enable-modules=most --enable-mods-shared=all --enable-so --\nenable-ssl=/usr/local/ssl --enable-ssl=shared --enable-suexec --with-suexec-\ncaller=xxx --with-suexec-docroot=/xxx/xxx --with-suexec-\nlogfile=/var/log/suexec.cgi.log\n\nWhen compiling with GCC, in 64bit, im using CFLAGS=-mcpu=ultrasparc -m64 -O3, \nand with Sun Studio im using CFLAGS=-Xa -xtarget=ultra2 -xarch=v9a -xvis -xO4 -\nxspace -xdepend\n\nBoth compilers successfully build both the 32bit, and 64bit versions, both the \nGCC and Sun CC 32 bit builds have no errors in the error_log, but the GCC and \nSun CC 64bit builds both exhibit the same warnings in the error_log.\n\nAs I reported initialy the server continues to startup after the warning, and \nthe SSL sites are functioning 100%, with the correct certificate attached to \nthe sites as I would expect.\n\nApart from this one warning in the error_log, the 64bit build is performing \nspectacularly well, on identical 500mhz Netra AC200 servers the 32bit build is \npumping out 350 requests per second according to an AB test on a very simple \nstatic html file, the same test on the 64bit build is giving 400 \nrequests/second.\n\nI initially tested the 64bit build using a production httpd.conf with 200 \nvirtual *:80 NameVirtual hosts, but to simplify testing I replaced it with the \ndefault httpd.conf that is installed after the initial make install, so the \nonly 'modified' config file is ssl.conf which I have added below. \n\n\n\n#    CustomLog logs/dummy-host.example.com-access_log common\n\n##\n##  SSL Global Context\n##\n##  All SSL configuration in this context applies both to\n##  the main server and all SSL-enabled virtual hosts.\n##\n\n#\n#   Some MIME-types for downloading Certificates and CRLs\n#\nAddType application/x-x509-ca-cert .crt\nAddType application/x-pkcs7-crl    .crl\n\n#   Pass Phrase Dialog:\n#   Configure the pass phrase gathering process.\n#   The filtering dialog program (`builtin' is a internal\n#   terminal dialog) has to provide the pass phrase on stdout.\nSSLPassPhraseDialog  builtin\n\n#   Inter-Process Session Cache:\n#   Configure the SSL Session Cache: First the mechanism\n#   to use and second the expiring timeout (in seconds).\n#SSLSessionCache        none\n#SSLSessionCache        shmht:logs/ssl_scache(512000)\n#SSLSessionCache        shmcb:logs/ssl_scache(512000)\nSSLSessionCache         dbm:logs/ssl_scache\nSSLSessionCacheTimeout  300\n\n#   Semaphore:\n#   Configure the path to the mutual exclusion semaphore the\n#   SSL engine uses internally for inter-process synchronization.\nSSLMutex  file:logs/ssl_mutex\n\n#   Pseudo Random Number Generator (PRNG):\n#   Configure one or more sources to seed the PRNG of the\n#   SSL library. The seed data should be of good random quality.\n#   WARNING! On some platforms /dev/random blocks if not enough entropy\n#   is available. This means you then cannot use the /dev/random device\n#   because it would lead to very long connection times (as long as\n#   it requires to make more entropy available). But usually those\n#   platforms additionally provide a /dev/urandom device which doesn't\n#   block. So, if available, use this one instead. Read the mod_ssl User\n#   Manual for more details.\nSSLRandomSeed startup builtin\nSSLRandomSeed connect builtin\n#SSLRandomSeed startup file:/dev/random  512\n#SSLRandomSeed startup file:/dev/urandom 512\n#SSLRandomSeed connect file:/dev/random  512\n#SSLRandomSeed connect file:/dev/urandom 512\n\n##\n## SSL Virtual Host Context\n##\n\n#<VirtualHost 212.46.140.6:443>\n\n#  General setup for the virtual host\n#DocumentRoot \"/xxx/xxx/wyenetco\"\n#ServerName www.wyenet.co.uk\n#ServerAdmin webmaster@wyenet.net\n#ScriptAlias /cgi-bin/ \"/xxx/xxx/wyenetco/cgi-bin/\"\n#ErrorLog /xxx/xxx/wyenetco/logs/error_log\n#TransferLog /xxx/xxx/wyenetco/logs/access_log\n\n\n#   SSL Engine Switch:\n#   Enable/Disable SSL for this virtual host.\n#SSLEngine on\n\n#   SSL Cipher Suite:\n#   List the ciphers that the client is permitted to negotiate.\n#   See the mod_ssl documentation for a complete list.\n#SSLCipherSuite ALL:!ADH:!\nEXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP:+eNULL\n\n#   Server Certificate:\n#   Point SSLCertificateFile at a PEM encoded certificate.  If\n#   the certificate is encrypted, then you will be prompted for a\n#   pass phrase.  Note that a kill -HUP will prompt again.  Keep\n#   in mind that if you have both an RSA and a DSA certificate you\n#   can configure both in parallel (to also allow the use of DSA\n#   ciphers, etc.)\n#SSLCertificateFile /xxx/xxx/conf/ssl.crt/www.wyenet.co.uk.crt\n#SSLCertificateFile /xxx/xxx/conf/ssl.crt/server-dsa.crt\n\n#   Server Private Key:\n#   If the key is not combined with the certificate, use this\n#   directive to point at the key file.  Keep in mind that if\n#   you've both a RSA and a DSA private key you can configure\n#   both in parallel (to also allow the use of DSA ciphers, etc.)\n#SSLCertificateKeyFile /xxx/xxx/conf/ssl.key/www.wyenet.co.uk.key\n#SSLCertificateKeyFile /xxx/xxx/conf/ssl.key/server-dsa.key\n\n#   Server Certificate Chain:\n#   Point SSLCertificateChainFile at a file containing the\n#   concatenation of PEM encoded CA certificates which form the\n#   certificate chain for the server certificate. Alternatively\n#   the referenced file can be the same as SSLCertificateFile\n#   when the CA certificates are directly appended to the server\n#   certificate for convinience.\n#SSLCertificateChainFile /xxx/xxx/conf/ssl.crt/ca.crt\n\n#   Certificate Authority (CA):\n#   Set the CA certificate verification path where to find CA\n#   certificates for client authentication or alternatively one\n#   huge file containing all of them (file must be PEM encoded)\n#   Note: Inside SSLCACertificatePath you need hash symlinks\n#         to point to the certificate files. Use the provided\n#         Makefile to update the hash symlinks after changes.\n#SSLCACertificatePath /xxx/xxx/conf/ssl.crt\n#SSLCACertificateFile /xxx/xxx/conf/ssl.crt/ca-bundle.crt\n\n#   Certificate Revocation Lists (CRL):\n#   Set the CA revocation path where to find CA CRLs for client\n#   authentication or alternatively one huge file containing all\n#   of them (file must be PEM encoded)\n#   Note: Inside SSLCARevocationPath you need hash symlinks\n#         to point to the certificate files. Use the provided\n#         Makefile to update the hash symlinks after changes.\n#SSLCARevocationPath /xxx/xxx/conf/ssl.crl\n#SSLCARevocationFile /xxx/xxx/conf/ssl.crl/ca-bundle.crl\n\n#   Client Authentication (Type):\n#   Client certificate verification type and depth.  Types are\n#   none, optional, require and optional_no_ca.  Depth is a\n#   number which specifies how deeply to verify the certificate\n#   issuer chain before deciding the certificate is not valid.\n#SSLVerifyClient require\n#SSLVerifyDepth  10\n\n#   Access Control:\n#   With SSLRequire you can do per-directory access control based\n#   on arbitrary complex boolean expressions containing server\n#   variable checks and other lookup directives.  The syntax is a\n#   mixture between C and Perl.  See the mod_ssl documentation\n#   for more details.\n#<Location />\n#SSLRequire (    %{SSL_CIPHER} !~ m/^(EXP|NULL)/ \\\n#            and %{SSL_CLIENT_S_DN_O} eq \"Snake Oil, Ltd.\" \\\n#            and %{SSL_CLIENT_S_DN_OU} in {\"Staff\", \"CA\", \"Dev\"} \\\n#            and %{TIME_WDAY} >= 1 and %{TIME_WDAY} <= 5 \\\n#            and %{TIME_HOUR} >= 8 and %{TIME_HOUR} <= 20       ) \\\n#           or %{REMOTE_ADDR} =~ m/^192\\.76\\.162\\.[0-9]+$/\n#</Location>\n\n#   SSL Engine Options:\n#   Set various options for the SSL engine.\n#   o FakeBasicAuth:\n#     Translate the client X.509 into a Basic Authorisation.  This means that\n#     the standard Auth/DBMAuth methods can be used for access control.  The\n#     user name is the `one line' version of the client's X.509 certificate.\n#     Note that no password is obtained from the user. Every entry in the user\n#     file needs this password: `xxj31ZMTZzkVA'.\n#   o ExportCertData:\n#     This exports two additional environment variables: SSL_CLIENT_CERT and\n#     SSL_SERVER_CERT. These contain the PEM-encoded certificates of the\n#     server (always existing) and the client (only existing when client\n#     authentication is used). This can be used to import the certificates\n#     into CGI scripts.\n#   o StdEnvVars:\n#     This exports the standard SSL/TLS related `SSL_*' environment variables.\n#     Per default this exportation is switched off for performance reasons,\n#     because the extraction step is an expensive operation and is usually\n#     useless for serving static content. So one usually enables the\n#     exportation for CGI and SSI requests only.\n#   o CompatEnvVars:\n#     This exports obsolete environment variables for backward compatibility\n#     to Apache-SSL 1.x, mod_ssl 2.0.x, Sioux 1.0 and Stronghold 2.x. Use this\n#     to provide compatibility to existing CGI scripts.\n#   o StrictRequire:\n#     This denies access when \"SSLRequireSSL\" or \"SSLRequire\" applied even\n#     under a \"Satisfy any\" situation, i.e. when it applies access is denied\n#     and no other module can change it.\n#   o OptRenegotiate:\n#     This enables optimized SSL connection renegotiation handling when SSL\n#     directives are used in per-directory context.\n#SSLOptions +FakeBasicAuth +ExportCertData +CompatEnvVars +StrictRequire\n#<Files ~ \"\\.(cgi|shtml|phtml|php3?)$\">\n#    SSLOptions +StdEnvVars\n#</Files>\n#<Directory \"/usr/local/apache2/cgi-bin\">\n#    SSLOptions +StdEnvVars\n#</Directory>\n\n#   SSL Protocol Adjustments:\n#   The safe and default but still SSL/TLS standard compliant shutdown\n#   approach is that mod_ssl sends the close notify alert but doesn't wait for\n#   the close notify alert from client. When you need a different shutdown\n#   approach you can use one of the following variables:\n#   o ssl-unclean-shutdown:\n#     This forces an unclean shutdown when the connection is closed, i.e. no\n#     SSL close notify alert is send or allowed to received.  This violates\n#     the SSL/TLS standard but is needed for some brain-dead browsers. Use\n#     this when you receive I/O errors because of the standard approach where\n#     mod_ssl sends the close notify alert.\n#   o ssl-accurate-shutdown:\n#     This forces an accurate shutdown when the connection is closed, i.e. a\n#     SSL close notify alert is send and mod_ssl waits for the close notify\n#     alert of the client. This is 100% SSL/TLS standard compliant, but in\n#     practice often causes hanging connections with brain-dead browsers. Use\n#     this only for browsers where you know that their SSL implementation\n#     works correctly.\n#   Notice: Most problems of broken clients are also related to the HTTP\n#   keep-alive facility, so you usually additionally want to disable\n#   keep-alive for those clients, too. Use variable \"nokeepalive\" for this.\n#   Similarly, one has to force some clients to use HTTP/1.0 to workaround\n#   their broken HTTP/1.1 implementation. Use variables \"downgrade-1.0\" and\n#   \"force-response-1.0\" for this.\n#SetEnvIf User-Agent \".*MSIE.*\" \\\n#         nokeepalive ssl-unclean-shutdown \\\n#         downgrade-1.0 force-response-1.0\n#\n#   Per-Server Logging:\n#   The home of a custom SSL log file. Use this when you want a\n#   compact non-error SSL logfile on a virtual host basis.\n#CustomLog logs/ssl_request_log \\\n#          \"%t %h %{SSL_PROTOCOL}x %{SSL_CIPHER}x \\\"%r\\\" %b\"\n#\n#</VirtualHost>\n\n<VirtualHost 212.46.140.76:443>\nSuexecUserGroup crowsfeet nobody\nServerAdmin webmaster@blackhillcomputersoftware.co.uk\nDocumentRoot /xxx/xxx/crowsfeet/docs-ssl\nScriptAlias /cgi-bin/ \"/xxx/xxx/crowsfeet/cgi-bin-ssl/\"\n#Alias /images/ \"/xxx/xxx/crowsfeet/docs/images/\"\nServerName www.crowsfeet.net\nErrorLog /xxx/xxx/crowsfeet/logs/error_log\nCustomLog /xxx/xxx/crowsfeet/logs/access_log combined\nSSLEngine on\nSSLCipherSuite ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP:+eNULL\nSSLCertificateFile /xxx/xxx/conf/ssl.crt/www.crowsfeet.net.crt\nSSLCertificateKeyFile /xxx/xxx/conf/ssl.key/www.crowsfeet.net.key\n<Files ~ \"\\.(cgi|shtml|phtml|php3?)$\">\n    SSLOptions +StdEnvVars\n</Files>\n<Directory \"/xxx/xxx/apache/cgi-bin-ssl\">\n    SSLOptions +StdEnvVars\n</Directory>\nSetEnvIf User-Agent \".*MSIE.*\" \\\n         nokeepalive ssl-unclean-shutdown \\\n         downgrade-1.0 force-response-1.0\nCustomLog /xxx/xxx/crowsfeet/logs/ssl_request_log \\\n          \"%t %h %{SSL_PROTOCOL}x %{SSL_CIPHER}x \\\"%r\\\" %b\"\n</VirtualHost>\n\n<VirtualHost 212.46.140.73:443>\nSuexecUserGroup pmorris nobody\nServerAdmin webmaster@philipmorris.uk.com\nDocumentRoot /xxx/xxx/philipmorris/docs-ssl\nScriptAlias /cgi-bin/ \"/xxx/xxx/philipmorris/cgi-bin-ssl/\"\nAlias /images/ \"/xxx/xxx/philipmorris/docs/images/\"\nServerName www.philipmorris.uk.com\nErrorLog /xxx/xxx/philipmorris/logs/error_log\nCustomLog /xxx/xxx/philipmorris/logs/access_log combined\nSSLEngine on\nSSLCipherSuite ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP:+eNULL\nSSLCertificateFile /xxx/xxx/conf/ssl.crt/www.philipmorris.uk.com.crt\nSSLCertificateKeyFile /xxx/xxx/conf/ssl.key/www.philipmorris.uk.com.key\n<Files ~ \"\\.(cgi|shtml|phtml|php3?)$\">\n    SSLOptions +StdEnvVars\n</Files>\n<Directory \"/usr/local/apache/cgi-bin-ssl\">\n    SSLOptions +StdEnvVars\n</Directory>\nSetEnvIf User-Agent \".*MSIE.*\" \\\n         nokeepalive ssl-unclean-shutdown \\\n         downgrade-1.0 force-response-1.0\nCustomLog /wyenet/web/philipmorris/logs/ssl_request_log \\\n          \"%t %h %{SSL_PROTOCOL}x %{SSL_CIPHER}x \\\"%r\\\" %b\"\n</VirtualHost>\n\n<VirtualHost 212.46.140.64:443>\nSuexecUserGroup queenswd nobody\nServerAdmin webmaster@queenswood.co.uk\nDocumentRoot /xxx/xxx/queenswood/\nScriptAlias /cgi-bin/ \"/xxx/xxx/queenswood/cgi-bin/\"\nServerName www.queenswood.co.uk\nErrorLog /wyenet/web/queenswood/logs/error_log\nCustomLog /xxx/xxx/queenswood/logs/access_log combined\nSSLEngine on\nSSLCipherSuite ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP:+eNULL\nSSLCertificateFile /xxx/xxx/conf/ssl.crt/www.queenswood.co.uk.crt\nSSLCertificateKeyFile /xxx/xxx/conf/ssl.key/www.queenswood.co.uk.key\n<Files ~ \"\\.(cgi|shtml|phtml|php3?)$\">\n    SSLOptions +StdEnvVars\n</Files>\n<Directory \"/usr/local/apache/cgi-bin\">\n    SSLOptions +StdEnvVars\n</Directory>\nSetEnvIf User-Agent \".*MSIE.*\" \\\n         nokeepalive ssl-unclean-shutdown \\\n         downgrade-1.0 force-response-1.0\n#CustomLog /xxx/xxx/queenswood/logs/ssl_request_log \\\n#          \"%t %h %{SSL_PROTOCOL}x %{SSL_CIPHER}x \\\"%r\\\" %b\"\n</VirtualHost>\n\n</IfDefine>\n#", "id": 81112, "time": "2005-10-13T12:50:33Z", "creator": "graham@wyenet.net", "creation_time": "2005-10-13T12:50:33Z", "is_private": false}, {"count": 3, "tags": [], "creator": "rpluem@apache.org", "attachment_id": null, "id": 81114, "time": "2005-10-13T14:06:18Z", "bug_id": 37051, "creation_time": "2005-10-13T14:06:18Z", "is_private": false, "text": "I think I need some debugging information from you since I do not have a 64 Bit\nsystem at hand. For debugging httpd with gdb please have a look at\n\nhttp://httpd.apache.org/dev/debugging.html\n\nPlease keep in mind to recompile your httpd with gcc and -O2 -g instead of -O3\nin this case.\nYou should set a breakpoint at ssl_engine_init.c:1039 via\nbreak ssl_engine_init.c:1039\nAfter httpd stopped at this point please issue\nprint key\n\nBackground: I think that\n\n        key = apr_psprintf(p, \"%pA:%u\",\n                           &s->addrs->host_addr, s->addrs->host_port);\n\nin line 1037-1038 of ssl_engine_init.c do not deliver different results for the\ndifferent virtual host, because apr_psprintf might not correctly format 64 Bit\npointers.\nBTW: Some APR guys listening? Could you guys give a hint on that theory?"}, {"count": 4, "tags": [], "bug_id": 37051, "text": "Nice! You found the buggy code ;) but the reason why is:\n\n%pA takes a \"struct in_addr *\" argument, but that's being passed an\n\"apr_sockaddr_t *\" argument.\n\n...it should be %pI instead.", "id": 81120, "time": "2005-10-13T14:51:41Z", "creator": "jorton@redhat.com", "creation_time": "2005-10-13T14:51:41Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 37051, "attachment_id": 16684, "text": "Created attachment 16684\nPatch against trunk\n\nGraham could you please give this patch a try and see if this removes your\nproblem? It does what Joe proposed.", "id": 81122, "time": "2005-10-13T15:15:19Z", "creator": "rpluem@apache.org", "creation_time": "2005-10-13T15:15:19Z", "is_private": false}, {"count": 6, "text": "That isn't quite right, since %pI prints \"address:port\" using the port out of\nthe apr_sockaddr_t structure.   I'm not sure even whether that port will be the\nsame as s->addr->host_port - probably not.  If it is, that's OK; need to test that.\n\nThere's a further problem that %pI is liable to print corrupt strings with\napr_psprintf due to an APR bug (only fixed on the trunk).", "creator": "jorton@redhat.com", "attachment_id": null, "id": 81123, "time": "2005-10-13T15:29:41Z", "bug_id": 37051, "creation_time": "2005-10-13T15:29:41Z", "tags": [], "is_private": false}, {"attachment_id": 16685, "tags": [], "creator": "jorton@redhat.com", "text": "Created attachment 16685\npatch against 2.0.x \n\nHere's an alternative patch which should be slightly safer.", "count": 7, "id": 81124, "time": "2005-10-13T15:41:28Z", "bug_id": 37051, "creation_time": "2005-10-13T15:41:28Z", "is_private": false}, {"count": 8, "tags": [], "bug_id": 37051, "attachment_id": null, "text": "Applied Joe's second patch to my 2.0.54 code, and compiled, so far so good, no \nerrors reported in the error_log now.\n\nExcellent, with my normal config file the error_log is now clean, and just \nshows the server starting up. I also ran a test with an invalid SSL \nconfiguration with NameVirtual hosts, and it correctly identified the problem, \nand logged it to error_log.\n\n\n", "id": 81130, "time": "2005-10-13T16:33:34Z", "creator": "graham@wyenet.net", "creation_time": "2005-10-13T16:33:34Z", "is_private": false}, {"count": 9, "tags": [], "creator": "rpluem@apache.org", "text": "Thanks for the update Graham.\nJoe, sorry for the misunderstanding and thanks for the update. As far as I can\nsee the problem is also on the trunk and given the apr problem I think we should\nnot rely on apr_psprintf in this point on the trunk too. Do you commit or should\nI do?", "id": 81131, "time": "2005-10-13T16:40:33Z", "bug_id": 37051, "creation_time": "2005-10-13T16:40:33Z", "is_private": false, "attachment_id": null}, {"count": 10, "attachment_id": null, "creator": "jorton@redhat.com", "text": "Thanks for testing the patch out.  Committed to trunk and 2.2.x; this is\nprobably not worth a backport to 2.0.x since it's only a warning.\n\nhttp://svn.apache.org/viewcvs?rev=320796&view=rev", "id": 81143, "time": "2005-10-13T19:07:15Z", "bug_id": 37051, "creation_time": "2005-10-13T19:07:15Z", "tags": [], "is_private": false}]