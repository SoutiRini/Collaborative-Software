[{"id": 43898, "tags": [], "creator": "thomas.diesler@iotronics.com", "attachment_id": null, "count": 0, "text": "With this it always recompiles all sources. My project contains 1200 files, \nwhich then is a problem.\n\n\n\n\nIs there a solution?\n\n\n\n\n<javac destdir=\"${build.dir}\">\n\n\n   <src path=\"${src.dir}/packone\"/>\n\n\n   <src path=\"${src.dir}/packtwo\"/>\n\n\n</javac>\n\n\n\n\nThanks \n\n\nthomas", "time": "2003-09-09T16:01:43Z", "bug_id": 23035, "creation_time": "2003-09-09T16:01:43Z", "is_private": false}, {"count": 1, "tags": [], "creator": "ddevienne@lgc.com", "attachment_id": null, "id": 43900, "time": "2003-09-09T17:05:04Z", "bug_id": 23035, "creation_time": "2003-09-09T17:05:04Z", "is_private": false, "text": "If packone, and packtwo are part of the package names, then it's not a bug, but \na misuse of <javac>. --DD"}, {"count": 2, "attachment_id": null, "bug_id": 23035, "text": "this bug is similar to http://issues.apache.org/bugzilla/show_bug.cgi?id=3198", "id": 43951, "time": "2003-09-10T16:57:19Z", "creator": "antoine@apache.org", "creation_time": "2003-09-10T16:57:19Z", "tags": [], "is_private": false}, {"count": 3, "tags": [], "creator": "thomas.diesler@iotronics.com", "text": "Yes, packone and packtwo are package names. \n\n\n\n\nSay ClassA lives in packone and ClassB in packtwo. ClassB extends ClassA.\n\n\nI want to exlude packone and only compile packtwo.\n\n\n\n\nI expect an ClassNotFoundException on ClassA, but javac implicitly compiles \nClassA although I excluded it.\n", "id": 43954, "time": "2003-09-10T17:09:50Z", "bug_id": 23035, "creation_time": "2003-09-10T17:09:50Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 23035, "attachment_id": null, "is_private": false, "id": 43959, "time": "2003-09-10T17:45:15Z", "creator": "antoine@apache.org", "creation_time": "2003-09-10T17:45:15Z", "text": "it sounds like you should not use several src paths but rather\n<src path=\"${srcdir}\"/>\n<include name=\"packone/**\"/>\n<include name=\"packtwo/**\"/>\n\nexcept if your package hierarchy starts at ${srcdir}/packone and ${srcdir}/packtwo ?\nwhen your package names start with com, then the paths of the src nested\nelements should point to the source directories containing com."}, {"count": 5, "tags": [], "bug_id": 23035, "attachment_id": null, "is_private": false, "id": 43964, "time": "2003-09-10T18:05:45Z", "creator": "thomas.diesler@iotronics.com", "creation_time": "2003-09-10T18:05:45Z", "text": "You mean like this\n\n\n\n\n        <javac srcdir=\"${src.dir}\" destdir=\"${build.dir}\" >\n\n\n            <exclude name=\"packone/**\" />\n\n\n            <include name=\"packtwo/**\" />\n\n\n        </javac>\n\n\n\n\nwhereas the include would be optional. The output is:\n\n\n\n\ncompile:\n\n\n    [javac] Compiling 1 source file to D:\\projects\\antTest\\target\\classes\n\n\n\n\nWhich looks ok and as I would expect it. But infact it compiles 2 sources. \npackone.ClassA is implicitly compiled, although I excluded it. I think, this is \nbecause of the dependency: public class ClassB extends ClassA \n\n\n\n\nI'm running into this, because I want ClassB to use myjar.jar/packone/ClassA and \nnot recompile it from the source tree.\n\n\n\n\n"}, {"count": 6, "tags": [], "creator": "antoine@apache.org", "text": "A part of the behavior of javac is not under the control of ant. javac notices\nprobably that ClassA has changed and compiles it.\nIf you want to compile against a frozen status of a package, then you need to\nmake a jar file or a set of .class files with this package, and remove the\nsources of this package from what javac is given to see.\nI am closing this bug report as invalid, since this is not an ant issue.\nCheers.", "id": 43965, "time": "2003-09-10T18:19:58Z", "bug_id": 23035, "creation_time": "2003-09-10T18:19:58Z", "is_private": false, "attachment_id": null}, {"count": 7, "tags": [], "creator": "ddevienne@lgc.com", "text": "Search for a recent thread/bug where one can specify sourcepath=\"\" exlicitly \n(to empty) to avoid having Javac find dependent classes not explicitly in the \nfileset (excluded for example). Hope this helps. --DD", "id": 43969, "time": "2003-09-10T18:36:01Z", "bug_id": 23035, "creation_time": "2003-09-10T18:36:01Z", "is_private": false, "attachment_id": null}]