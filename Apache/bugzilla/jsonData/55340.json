[{"attachment_id": null, "tags": [], "bug_id": 55340, "text": "This is somewhat related to bug 34148, but addresses a different point:\n\nApache's elected handling of Listen statements violates the principle of least surprise, as well as making it very hard to detect when something might not work.\n\nHere are three examples, the third is what I think is wrong.\n\nThe examples have been tested with Apache 2.2.6 (Debian squeeze) and 2.2.22 (Debian wheezy).\n\n----------------------------------------------------------------------\n1) Bogus IP address (e.g. 999999.99999.9999)\n----------------------------------------------------------------------\n\nroot@server:~# apachectl configtest\nSyntax error on line 17 of /etc/apache2/ports.conf:\nPort must be specified\nAction 'configtest' failed.\nThe Apache error log may have more information.\nroot@server:~# echo $?\n1\n\n----------------------------------------------------------------------\n2) Valid, unconfigured IP address, port unspecified (e.g. 10.0.0.2):\n----------------------------------------------------------------------\n\nroot@server:~# apachectl configtest\nSyntax error on line 17 of /etc/apache2/ports.conf:\nPort must be specified\nAction 'configtest' failed.\nThe Apache error log may have more information.\nroot@server:~# echo $?\n1\n\n----------------------------------------------------------------------\n3) Valid, unconfigured IP address, port specified (e.g. 10.0.0.2:80):\n----------------------------------------------------------------------\n\nroot@server:~# apachectl configtest\nSyntax OK\nroot@server:~# echo $?\n0\nroot@server:~# service apache2 reload\nReloading web server config: apache2.\nroot@server:~# lsof -Pni:80\nroot@server:~# pgrep apache2\nroot@server:~# tail -4 /var/log/apache2/error_log\n[Thu Aug 01 15:29:48 2013] [notice] SIGUSR1 received.  Doing graceful restart\n(99)Cannot assign requested address: make_sock: could not bind to address 10.0.0.2:80\nno listening sockets available, shutting down\nUnable to open logs\n----------------------------------------------------------------------\n\nThere are two sane ways of handling this, and I think both should be implemented, as they complement eachother:\n\na) Do NOT pass config testing when a listening socket is unavailable. Consider having different return codes depending on how many listening sockets fail:\n\n   I)   no\n   II)  some\n   III) all\n\nb) Do not say \"no listening sockets available\" and do not shut down, when there are several listening sockets available, which are both valid and configured, and ready to use. Merely ignore those that cannot be opened, and if _absolutely no_ sockets can be opened, shut down.", "count": 0, "id": 169017, "time": "2013-08-01T14:07:39Z", "creator": "frettled@gmail.com", "creation_time": "2013-08-01T14:07:39Z", "is_private": false}]