[{"count": 0, "tags": [], "bug_id": 35166, "attachment_id": null, "id": 75771, "time": "2005-06-02T02:55:38Z", "creator": "nas-apache@arctrix.com", "creation_time": "2005-06-02T02:55:38Z", "is_private": false, "text": "This bug appears to affect both Apache 1.3 and 2.x.  I think the core problem is\nthat ap_send_error_response sometimes ignores that status code returned by the\nhandler function and uses r->status_line instead.  For example,\nap_scan_script_header_err_core may return a status of 304 (from\nap_meets_conditions).  The problem is that r->status_line may have been set by a\n\"Status\" header.  An example CGI script that triggers the bug:\n\nprint \"Status: 200 OK\\r\\n\"\nprint \"Context-Type: text/plain\\r\\n\"\nprint \"Last-Modified: Thu, 14 Apr 2005 00:10:07 GMT\\r\\n\"\nprint \"\\r\\n\"\nprint \"Hello world.\\n\"\n\nThe ugly effect of this bug is that Apache can send 200 as the status when it\nthinks it is sending a 304 response.  It does not send a Content-Length header\nand the browser and server end up hanging.  I've tested this with a CGI script\nlike the one above, Apache 1.3, and Firefox 1.0.3.  I'm fairly sure recent\nversions of Apache have the same bug."}, {"count": 1, "tags": [], "bug_id": 35166, "attachment_id": null, "text": "Hmm, I recollect fixing something very like this some years back, and a quick test of your script shows the CGI Status being respected.  Marking fixed.  Please reopen with details if I'm missing your point.\n\nThe script is itself somewhat broken, in that it returns 200 when 304 would be in order.  But that's a different story, and not apache's business.", "id": 130048, "time": "2009-08-29T21:20:40Z", "creator": "nick@webthing.com", "creation_time": "2009-08-29T21:20:40Z", "is_private": false}]