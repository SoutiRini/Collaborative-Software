[{"count": 0, "tags": [], "bug_id": 29449, "attachment_id": null, "id": 58901, "time": "2004-06-09T01:30:09Z", "creator": "rici@ricilake.net", "creation_time": "2004-06-09T01:30:09Z", "is_private": false, "text": "The following patch enhances mod_log_config in order to allow substitutions such as \"%.200U\" in order \nto limit the impact on access logs of the enormous HTTP requests which are floating around these days. \nIt is strictly upwards compatible as far as I can see, and has minimal performance impact.\n\nThe .<ddd> modifier can occur in any % expansion; .0 is equivalent to \"unlimited\", which is, of course,\nthe default.\n\n--- httpd-2.0.49-orig/modules/loggers/mod_log_config.c  Wed Mar  3 06:07:50 2004\n+++ httpd-2.0.49/modules/loggers/mod_log_config.c       Tue Jun  8 11:07:41 2004\n@@ -271,6 +271,7 @@\n     char *arg;\n     int condition_sense;\n     int want_orig;\n+    apr_size_t max_size;\n     apr_array_header_t *conditions;\n } log_format_item;\n\n@@ -617,6 +618,7 @@\n\n     it->func = constant_item;\n     it->conditions = NULL;\n+    it->max_size = 0;\n\n     s = *sa;\n     while (*s && *s != '%') {\n@@ -683,6 +685,7 @@\n     ++s;\n     it->condition_sense = 0;\n     it->conditions = NULL;\n+    it->max_size = 0;\n\n     if (*s == '%') {\n         it->arg = \"%\";\n@@ -742,7 +745,13 @@\n             }\n             *(int *) apr_array_push(it->conditions) = i;\n             break;\n-\n+        case '.':\n+            i = 0;\n+            while (apr_isdigit(*++s)) {\n+                i = i * 10 + (*s) - '0';\n+            }\n+            it->max_size = i;\n+            break;\n         default:\n             handler = (ap_log_handler *)apr_hash_get(log_hash, s++, 1);\n             if (!handler) {\n@@ -836,6 +845,7 @@\n     request_rec *orig;\n     int i;\n     apr_size_t len = 0;\n+    apr_size_t itemlen;\n     apr_array_header_t *format;\n     char *envar;\n     apr_status_t rv;\n@@ -881,7 +891,11 @@\n     }\n\n     for (i = 0; i < format->nelts; ++i) {\n-        len += strl[i] = strlen(strs[i]);\n+        itemlen = strlen(strs[i]);\n+        if (items[i].max_size != 0 && items[i].max_size < itemlen) {\n+            itemlen = items[i].max_size;\n+        }\n+        len += strl[i] = itemlen;\n     }\n     if (!log_writer) {\n         ap_log_rerror(APLOG_MARK, APLOG_ERR, APR_EGENERAL, r,"}]