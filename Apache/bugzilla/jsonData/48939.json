[{"count": 0, "tags": [], "creator": "DRuggeri@primary.net", "attachment_id": null, "id": 135442, "time": "2010-03-18T18:24:22Z", "bug_id": 48939, "creation_time": "2010-03-18T18:24:22Z", "is_private": false, "text": "Greetings Apache Dev's;\n   A bug was filed (47207) mid last year under the expectation that HTTPD should mark servers in error state on a 500 error status return. While I disagree that this should be universal, we have found ourselves in situations where we need the ability to mark members as PROXY_WORKER_IN_ERROR automatically on certain status code returns. This varies heavily by application and backend, but is a feature worth adding. I feel that this should be a separate bug report since this is adding a server administrator configuration parameter rather than applying the proposed change in 47207.\n\nProblem examples:\nApache HTTPD server as reverse proxy to two WebSphere application servers\nSome applications take a significant amount of time to initialize. Until they are done initializing, WebSphere will rightfully return a 503. Depending on how long this application may take to initialize (30 minutes in the extreme cases of in-memory databases), this could inadvertently leave a member in service during a period of time where it can not service requests.\n\nApache HTTPD server as reverse proxy to another HTTPD reverse proxy\nSometimes DMZ segments are broken up in a way such that only reverse proxies with specific proxypass rules are allowed to traverse firewalls. Additionally, sometimes the data carried within those proxies is too sensitive to do in cleartext, so SSL may be needed. In some situations (server cert expired, client cert expired, misconfiguration), the target (second) HTTPD reverse proxy will throw a 502 that gets bubbled up to the first reverse proxy. Marking that proxy as unusable would be beneficial.\n\nApache HTTPD server as reverse proxy to any WebSphere application server\nIn WebSphere, it is possible to have an application deployed but not running. In the event an application is deployed but not started, the context root is not bound in the web container. When a request comes in for that context root, a 404 is returned. While it would be insane to mark a member out of service on every 404, this is just an example of a use case.\n\nApache HTTPD server to any backend\nSome folks are brazen enough to say their application has handled all possible error conditions and that a 500 being returned to the user means the application server must be at fault and taken out of service. Again, this is madness, but there are other use cases (testing scripts) where taking instances out of service because of a 500 may be desirable.\n\nThe proposed solution:\nAdd a configuration directive for balancers called \"ErrorOnStatus\" with usage like:\nErrorOnStatus=501,502,503,504\nConstruct a apr_array_header_t that is checked during the currently unused proxy_balancer_post_request method.\n\nMy thoughts:\nI chose to use apr_array_header_t because it does not suggest a data type. My preference would be to use apr_hash_t since it seems it would be faster, but I am concerned that there is an expectation for character array datatypes for key and value.\n\nI am tidying up the patch now and will attach it soon."}, {"count": 1, "tags": [], "bug_id": 48939, "text": "Created attachment 25148\nCode modifications to support initial proposal", "id": 135443, "time": "2010-03-18T18:32:24Z", "creator": "DRuggeri@primary.net", "creation_time": "2010-03-18T18:32:24Z", "is_private": false, "attachment_id": 25148}, {"count": 2, "tags": [], "bug_id": 48939, "text": "Created attachment 25150\nUpdate\n\nNoticed a mistake in the log message - was logging the name of the balancer instead of the worker.", "id": 135448, "time": "2010-03-18T21:02:12Z", "creator": "DRuggeri@primary.net", "creation_time": "2010-03-18T21:02:12Z", "is_private": false, "attachment_id": 25150}, {"count": 3, "tags": [], "bug_id": 48939, "attachment_id": 25153, "text": "Created attachment 25153\nFinal proposed patch\n\nUpdate to set error_time in the proxy_worker_stat now that testing is complete.", "id": 135479, "time": "2010-03-19T18:37:29Z", "creator": "DRuggeri@primary.net", "creation_time": "2010-03-19T18:37:29Z", "is_private": false}, {"count": 4, "tags": [], "creator": "DRuggeri@primary.net", "text": "Final patch added and functionality has been tested as follows:\n\n<Proxy balancer://App_cluster>\n   BalancerMember http://127.0.0.1:8001 route=1\n   BalancerMember http://127.0.0.1:8002 route=2\n   ProxySet lbmethod=byrequests stickysession=App_STICKY nofailover=Off erroronstatus=500,502\n</Proxy>\n\n127.0.0.1 is answered by an Apache instance with valid CGI script and buggy CGI script (causing 500).\n\nContinuous hits to valid script:\n   [1]http://127.0.0.1:8001 1                1      0   Ok     20      6.9K 3.1K\n   [2]http://127.0.0.1:8002 2                1      0   Ok     18      6.2K 3.7K\n\nOne hit to script that generates the 500 (500 returned to browser):\n   [1]http://127.0.0.1:8001 1                1      0   Err    21      7.3K 3.7K\n   [2]http://127.0.0.1:8002 2                1      0   Ok     18      6.2K 3.7K\n\nSeveral hits to valid script before 60 second retry time:\n   [1]http://127.0.0.1:8001 1                1      0   Ok     34      12K  3.9K\n   [2]http://127.0.0.1:8002 2                1      0   Err    20      6.9K 4.8K\n\n2 hits after retry time expired:\n   [1]http://127.0.0.1:8001 1                1      0   Ok     35      12K  3.9K\n   [2]http://127.0.0.1:8002 2                1      0   Ok     21      7.3K 4.8K\n\n\nAt the same time, I ran a test case with several hits to the buggy CGI script - as expected the force_recovery function forced the traffic through.", "id": 135481, "time": "2010-03-19T18:43:51Z", "bug_id": 48939, "creation_time": "2010-03-19T18:43:51Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 48939, "attachment_id": null, "text": "Thanks for the patch.  Committed to trunk in r930125", "id": 135843, "time": "2010-04-01T22:50:48Z", "creator": "nick@webthing.com", "creation_time": "2010-04-01T22:50:48Z", "is_private": false}, {"count": 6, "tags": [], "bug_id": 48939, "attachment_id": null, "id": 135845, "time": "2010-04-01T22:52:46Z", "creator": "nick@webthing.com", "creation_time": "2010-04-01T22:52:46Z", "is_private": false, "text": "*** Bug 47207 has been marked as a duplicate of this bug. ***"}, {"count": 7, "tags": [], "text": "Created attachment 25788\nFinal patch for 2.2 branch\n\nThis is the final patch including doc for 2.2 branch.", "is_private": false, "id": 138570, "creator": "DRuggeri@primary.net", "time": "2010-07-20T10:43:38Z", "bug_id": 48939, "creation_time": "2010-07-20T10:43:38Z", "attachment_id": 25788}, {"count": 8, "tags": [], "creator": "DRuggeri@primary.net", "attachment_id": 25923, "id": 139315, "time": "2010-08-21T17:25:38Z", "bug_id": 48939, "creation_time": "2010-08-21T17:25:38Z", "is_private": false, "text": "Created attachment 25923\nFixes the fix to be \"failonstatus\""}, {"count": 9, "tags": [], "text": "Added in 2.2.17", "attachment_id": null, "id": 141985, "creator": "DRuggeri@primary.net", "time": "2010-11-24T23:32:49Z", "bug_id": 48939, "creation_time": "2010-11-24T23:32:49Z", "is_private": false}]