[{"count": 0, "tags": [], "bug_id": 6299, "text": "Hi,\n\nI have successfully mapped the ssi servlet to the *.xml file extension. For \nexample, the following thing does not work properly:\n\nFile Default.xml\n================\n<?xml version=\"1.0\"?>\n<root>\n<!--#include file=\"Top.xml\"-->\n<!--#include file=\"Bottom.xml\"-->\n</root>\n\nFile Top.xml\n============\n<child>\n<!-- Some data here -->\n</child>\n\nFile Bottom.xml\n===============\n<child>\n<!-- Some other data here -->\n</child>\n\nIn my case only the first include statement is resolved. The other is just \nignored.\n\nNo error message is printed in the logs.\n\nHope, that it is my fault ;-)\n\nRegards\n\nHolger", "id": 10429, "time": "2002-02-07T08:15:46Z", "creator": "holger.schildberg@gmx.de", "creation_time": "2002-02-07T08:15:46Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "creator": "holger.schildberg@gmx.de", "text": "Hi again,\n\nI think there is a problem with the buffering of the resources. When I turned \noff the buffering all was perfct.\n\nAs I saw in the debug statements the include statements have been found and \nexecuted in the buffering mode, but the content of the ressource was not \noutputted correctly.\n\nRegards \n\nHoger", "id": 10431, "time": "2002-02-07T08:50:23Z", "bug_id": 6299, "creation_time": "2002-02-07T08:50:23Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 6299, "text": "If you can, please try with HEAD or a recent nightly build.  \nI almost completely rewrote SSI in October/November time-frame \nto fix exactly the problem you mention.  I'm not sure if that \nwould have made it into 4.0.1 or not... I suspect not.", "id": 10452, "time": "2002-02-07T15:08:12Z", "creator": "pspeed@progeeks.com", "creation_time": "2002-02-07T15:08:12Z", "is_private": false, "attachment_id": null}, {"attachment_id": null, "tags": [], "creator": "pspeed@progeeks.com", "is_private": false, "count": 3, "id": 10454, "time": "2002-02-07T15:11:34Z", "bug_id": 6299, "creation_time": "2002-02-07T15:11:34Z", "text": "Also, if you want to check if you are running the rewritten version,\nyou can look for org.apache.catalina.util.ssi.SsiDispatcher.  That\nwas one of the classes I added in my rewrite."}, {"count": 4, "tags": [], "bug_id": 6299, "text": "Hi Paul,\n\nyes you are right. The org.apache.catalina.util.ssi.SsiDispatcher does not \nexist in the servlets-ssi.jar file, so the rewritten SSI version is not yet \nincluded with the Tomcat 4.0.1 release.\n\nThanks for your help.\n\nHolger\n\n", "id": 10482, "time": "2002-02-08T07:57:30Z", "creator": "holger.schildberg@gmx.de", "creation_time": "2002-02-08T07:57:30Z", "is_private": false, "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 6299, "text": "I've had identical problems with includes mysteriously being skipped using \ntomcat 4.0.2-b2 - having checked the servlets-ssi jar, \norg.apache.catalina.util.ssi.SsiDispatcher appears to be missing from that as \nwell. Turning off buffering as described by Holger only alleviates the \nproblem, but does not cure it - several more includes are successful, but on \nthe nested includes I'm working on (roughly 4 layers deep at most, about \ntwenty include statements in total) I still have to cut-and-paste several away \n(ie cut and paste the text of the included file directly into it's parent, \nremoving my use of an ssi statement) before the page is entirely successful.", "count": 5, "id": 10488, "time": "2002-02-08T11:55:51Z", "creator": "Roberto@talk21.com", "creation_time": "2002-02-08T11:55:51Z", "is_private": false}, {"count": 6, "tags": [], "bug_id": 6299, "attachment_id": null, "id": 10490, "time": "2002-02-08T14:49:07Z", "creator": "pspeed@progeeks.com", "creation_time": "2002-02-08T14:49:07Z", "is_private": false, "text": "Guys,\n\nYou should try upgrading at least the SSI portion of \ntomcat, if you are concerned about a full tomcat \nupgrade.  Perhaps get a nightly build and see if just\nssi jar will work in your older 4.0.x version.\n\nEven worse than the problems you are seeing is that none\nof the older code is thread safe.  Multiple requests for\nSSI served files will quite likely mess each other up...\nto the point of both clients receiving the same set of\ngarbled data.  It's part of the reason that includes mess\nup... but the same kind of stuff happens if one client\nhits the page while another is still being served.  I\nsaw this stuff even running tests on my local machine\nfrom two separate command lines.  It was my motivation\nfor such drastic changes in the new version.  That, and\nI needed support for conditionals. :)\n"}, {"count": 7, "tags": [], "bug_id": 6299, "attachment_id": null, "id": 10495, "time": "2002-02-08T16:50:09Z", "creator": "Roberto@talk21.com", "creation_time": "2002-02-08T16:50:09Z", "is_private": false, "text": "Sadly, having downloaded http://jakarta.apache.org/builds/jakarta-tomcat-\n4.0/nightly/jakarta-tomcat-4.0-20020208.tar.gz and extracted the ssi jar, can \nreport no joy when having inserted it into tomcat 4.0.2-b2 - got following \nstack trace in the logs:\n\n2002-02-08 15:15:54 StandardWrapperValve[ssi]: Servlet.service() for servlet \nssi threw exception\njava.io.IOException: Cannot write to a closed output stream\n\tat org.apache.catalina.connector.ResponseStream.write\n(ResponseStream.java:262)\n\tat org.apache.catalina.connector.http.HttpResponseStream.write\n(HttpResponseStream.java:159)\n\tat javax.servlet.ServletOutputStream.print\n(ServletOutputStream.java:135)\n\tat org.apache.catalina.connector.http.HttpResponseStream.write\n(HttpResponseStream.java:152)\n\tat javax.servlet.ServletOutputStream.print\n(ServletOutputStream.java:135)\n\tat org.apache.catalina.util.ssi.SsiDispatcher.runCommand(Unknown \nSource)\n\tat org.apache.catalina.servlets.SsiInvokerServlet.requestHandler\n(Unknown Source)\n\tat org.apache.catalina.servlets.SsiInvokerServlet.doGet(Unknown Source)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:740)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:853)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter\n(ApplicationFilterChain.java:247)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter\n(ApplicationFilterChain.java:193)\n\tat org.apache.catalina.core.StandardWrapperValve.invoke\n(StandardWrapperValve.java:243)\n\tat org.apache.catalina.core.StandardPipeline.invokeNext\n(StandardPipeline.java:566)\n\tat org.apache.catalina.core.StandardPipeline.invoke\n(StandardPipeline.java:472)\n\tat org.apache.catalina.core.ContainerBase.invoke\n(ContainerBase.java:943)\n\tat org.apache.catalina.core.StandardContextValve.invoke\n(StandardContextValve.java:190)\n\tat org.apache.catalina.core.StandardPipeline.invokeNext\n(StandardPipeline.java:566)\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke\n(AuthenticatorBase.java:472)\n\tat org.apache.catalina.core.StandardPipeline.invokeNext\n(StandardPipeline.java:564)\n\tat org.apache.catalina.core.StandardPipeline.invoke\n(StandardPipeline.java:472)\n\tat org.apache.catalina.core.ContainerBase.invoke\n(ContainerBase.java:943)\n\tat org.apache.catalina.core.StandardContext.invoke\n(StandardContext.java:2343)\n\tat org.apache.catalina.core.StandardHostValve.invoke\n(StandardHostValve.java:180)\n\tat org.apache.catalina.core.StandardPipeline.invokeNext\n(StandardPipeline.java:566)\n\tat org.apache.catalina.valves.ErrorDispatcherValve.invoke\n(ErrorDispatcherValve.java:170)\n\tat org.apache.catalina.core.StandardPipeline.invokeNext\n(StandardPipeline.java:564)\n\tat org.apache.catalina.valves.ErrorReportValve.invoke\n(ErrorReportValve.java:170)\n\tat org.apache.catalina.core.StandardPipeline.invokeNext\n(StandardPipeline.java:564)\n\tat org.apache.catalina.valves.AccessLogValve.invoke\n(AccessLogValve.java:468)\n\tat org.apache.catalina.core.StandardPipeline.invokeNext\n(StandardPipeline.java:564)\n\tat org.apache.catalina.core.StandardPipeline.invoke\n(StandardPipeline.java:472)\n\tat org.apache.catalina.core.ContainerBase.invoke\n(ContainerBase.java:943)\n\tat org.apache.catalina.core.StandardEngineValve.invoke\n(StandardEngineValve.java:174)\n\tat org.apache.catalina.core.StandardPipeline.invokeNext\n(StandardPipeline.java:566)\n\tat org.apache.catalina.core.StandardPipeline.invoke\n(StandardPipeline.java:472)\n\tat org.apache.catalina.core.ContainerBase.invoke\n(ContainerBase.java:943)\n\tat org.apache.catalina.connector.http.HttpProcessor.process\n(HttpProcessor.java:1012)\n\tat org.apache.catalina.connector.http.HttpProcessor.run\n(HttpProcessor.java:1107)\n\tat java.lang.Thread.run(Thread.java:484)\n\n\nhave a good weekend anyway!\n\nbest regards, R"}, {"count": 8, "tags": [], "bug_id": 6299, "attachment_id": null, "text": "This was last reported 5 months ago on a different SSI codebase.  Should be\nfixed in the HEAD revision.", "id": 19382, "time": "2002-07-12T10:17:10Z", "creator": "x@cs.stanford.edu", "creation_time": "2002-07-12T10:17:10Z", "is_private": false}, {"count": 9, "tags": [], "bug_id": 6299, "attachment_id": null, "text": "Unfortunately the new SSI codebase didn't make it into Tomcat 4.0.4, which is\nthe current stable release, and so it still exhibits the '[error processing this\ndirective]' behaviour, with buffering on or off. Tomcat 4.1.7Beta has the new\ncodebase but dies with my webapp - so not currently an option!\n\nHowever, it is possible to backport the new Tomcat 4.1.7 servlets-ssi.jar into\nTomcat 4.0.4 - I've got this working on a test box, with all SSI problems\napparently resolved. It's not entirely simple though, as the ssi code calls\nseveral new classes in org.apache.catalina.util (like URLEncoder), which aren't\npresent in Tomcat 4.0.4. To cope with this, I took a copy of catalina.jar from\nTomcat 4.1.7, and removed everything except the org.apache.catalina.util\npackage. I then dropped this new jar (I called it catalina-util-4.1.7.jar) into\nthe server/lib directory in my 4.0.4 install, alongside the new\nservlets-ssi.jar. A quick edit of the servlet definintion in the web.xml file\n(the ssi sevlet is now called org.apache.catalina.ssi.SSIServlet), and hey\npresto, the flawless SSI you've always dreamed of.\n\nOf course, I say flawless, but I haven't tested it extensively, and I don't\nwon't to be held responsible if any bad interactions in the\norg.apache.catalina.util package spoil your day...! Also, N.B. I'm not a member\nof the Apache project, so don't hold it against them if anything goes wrong.\n\nHTH,\n\nRoberto", "id": 19388, "time": "2002-07-12T12:08:41Z", "creator": "Roberto@talk21.com", "creation_time": "2002-07-12T12:08:41Z", "is_private": false}]