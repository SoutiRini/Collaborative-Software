[{"attachment_id": null, "tags": [], "creator": "sljia@263.net", "is_private": false, "count": 0, "id": 10282, "time": "2002-02-04T03:56:20Z", "bug_id": 6210, "creation_time": "2002-02-04T03:56:20Z", "text": "My project use Weblogic Application Server6.0,I use Log4j1.1.3 for logging.\nAt the beginning,we use weblogic's default configuation(only one server act as \nAdmin and Managed Server),log4j work well.\nbut now we change our configuation of weblogic,use an Admin Server and a \nManaged Server.my log4j can't work now,following is the error message and \ncorresponding files:\n\n************************************************************************\n\nlog4j:ERROR Could not instantiate class [WEB-INF/classes/log4j.properties].\njava.lang.ClassNotFoundException: WEB-INF/classes/log4j.properties\n        at java.lang.Class.forName0(Native Method)\n        at java.lang.Class.forName(Class.java:120)\n        at org.apache.log4j.helpers.OptionConverter.instantiateByClassName\n(OptionConverter.java:301)\n        at org.apache.log4j.helpers.OptionConverter.selectAndConfigure\n(OptionConverter.java:434)\n        at org.apache.log4j.Category.<clinit>(Category.java:146)\n        at org.apache.log4j.PropertyConfigurator.configure\n(PropertyConfigurator.java:317)\n        at gov.ukon4b.util.Log4jInit.init(Log4jInit.java:18)\n        at javax.servlet.GenericServlet.init(GenericServlet.java:258)\n        at weblogic.servlet.internal.ServletStubImpl.createServlet\n(ServletStubImpl.java:638)\n        at weblogic.servlet.internal.ServletStubImpl.createInstances\n(ServletStubImpl.java:581)\n        at weblogic.servlet.internal.ServletStubImpl.prepareServlet\n(ServletStubImpl.java:526)\n        at weblogic.servlet.internal.WebAppServletContext.preloadServlet\n(WebAppServletContext.java:1078)\n        at weblogic.servlet.internal.WebAppServletContext.preloadServlets\n(WebAppServletContext.java:1035)\n        at weblogic.servlet.internal.WebAppServletContext.preloadServlets\n(WebAppServletContext.java:1020)\n        at weblogic.servlet.internal.HttpServer.loadWARContext\n(HttpServer.java:468)\n        at weblogic.servlet.internal.HttpServer.loadWebApp(HttpServer.java:404)\n        at weblogic.j2ee.WebAppComponent.deploy(WebAppComponent.java:74)\n        at weblogic.j2ee.Application.addComponent(Application.java:133)\n        at weblogic.j2ee.J2EEService.addDeployment(J2EEService.java:115)\n        at weblogic.management.mbeans.custom.DeploymentTarget.addDeployment\n(DeploymentTarget.java:327)\n        at weblogic.management.mbeans.custom.DeploymentTarget.addDeployments\n(DeploymentTarget.java:277)\n        at \nweblogic.management.mbeans.custom.DeploymentTarget.updateWebDeployments\n(DeploymentTarget.java:267)\n        at weblogic.management.mbeans.custom.DeploymentTarget.updateDeployments\n(DeploymentTarget.java:190)\n        at java.lang.reflect.Method.invoke(Native Method)\n        at weblogic.management.internal.DynamicMBeanImpl.invokeLocally\n(DynamicMBeanImpl.java:562)\n        at weblogic.management.internal.DynamicMBeanImpl.invoke\n(DynamicMBeanImpl.java:548)\n        at weblogic.management.internal.ConfigurationMBeanImpl.invoke\n(ConfigurationMBeanImpl.java:285)\n        at com.sun.management.jmx.MBeanServerImpl.invoke\n(MBeanServerImpl.java:1555)\n        at com.sun.management.jmx.MBeanServerImpl.invoke\n(MBeanServerImpl.java:1523)\n        at weblogic.management.internal.MBeanProxy.invoke(MBeanProxy.java:439)\n        at weblogic.management.internal.MBeanProxy.invoke(MBeanProxy.java:180)\n        at $Proxy24.updateDeployments(Unknown Source)\n        at \nweblogic.management.configuration.WebServerMBean_CachingStub.updateDeployments\n(WebServerMBean_CachingStub.java:1056)\n        at \nweblogic.management.mbeans.custom.ApplicationManager.startConfigManager\n(ApplicationManager.java:245)\n        at weblogic.management.mbeans.custom.ApplicationManager.start\n(ApplicationManager.java:122)\n        at java.lang.reflect.Method.invoke(Native Method)\n        at weblogic.management.internal.DynamicMBeanImpl.invokeLocally\n(DynamicMBeanImpl.java:562)\n        at weblogic.management.internal.DynamicMBeanImpl.invoke\n(DynamicMBeanImpl.java:548)\n        at weblogic.management.internal.ConfigurationMBeanImpl.invoke\n(ConfigurationMBeanImpl.java:285)\n        at com.sun.management.jmx.MBeanServerImpl.invoke\n(MBeanServerImpl.java:1555)\n        at com.sun.management.jmx.MBeanServerImpl.invoke\n(MBeanServerImpl.java:1523)\n        at weblogic.management.internal.MBeanProxy.invoke(MBeanProxy.java:439)\n        at weblogic.management.internal.MBeanProxy.invoke(MBeanProxy.java:180)\n        at $Proxy9.start(Unknown Source)\n        at \nweblogic.management.configuration.ApplicationManagerMBean_CachingStub.start\n(ApplicationManagerMBean_CachingStub.java:435)\n\n\n\n\nweb.xml\n----------------------------------------------------------\n...\n<servlet>\n    \t<servlet-name>log4j-init</servlet-name>\n    \t<servlet-class>gov.ukon4b.util.Log4jInit</servlet-class>\n\n    \t<init-param>\n      \t\t<param-name>log4j-init-file</param-name>\n      \t\t<param-value>/WEB-INF/classes/log4j.properties</param-value>\n    \t</init-param>\n\n    \t<load-on-startup>1</load-on-startup>\n    </servlet>\n...\n---------------------------------------------------------------\n\nLog4jInit.java\n------------------------------------------\npackage gov.ukon4b.util;\n\nimport org.apache.log4j.PropertyConfigurator;\nimport javax.servlet.http.HttpServlet;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\nimport java.io.PrintWriter;\nimport java.io.IOException;\nimport gov.ukon4b.util.PropertyManager;\n \npublic class Log4jInit extends HttpServlet {\n  \n  public\n  void init() { \n    String prefix =  getServletContext().getRealPath(\"/\");    \n    //String prefix=PropertyManager.getProperty(\"websiteHome\");\n    String file = getInitParameter(\"log4j-init-file\");\n    System.out.println(\"*****\"+prefix+file+\"*****\");\n    // if the log4j-init-file is not set, then no point in trying\n    if(file != null) {\n      PropertyConfigurator.configure(prefix+file);\n    }\n  }\n\n  public\n  void doGet(HttpServletRequest req, HttpServletResponse res) {\n  }\n}\n\n-----------------------------------------------------------\n\nall above follow the log4j user manaual,and the configuation file \nlog4j.properties place under directory WEB-INF/classes.\nI don't know why this work well when use the default weblogic configuation,but \ncan't work after change the weblogic configuation.\nis this an bug of log4j or weblogic?"}, {"attachment_id": null, "tags": [], "creator": "ceki@apache.org", "is_private": false, "count": 1, "id": 15784, "time": "2002-05-09T11:13:17Z", "bug_id": 6210, "creation_time": "2002-05-09T11:13:17Z", "text": "\nThis is a known problem with Weblogic and log4j. It's due to the fact that\nlog4j interprets the string follwing '#' in a url as the configuration class. \nLog4j 1.2 solves the problem. "}]