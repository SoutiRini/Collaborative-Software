[{"count": 0, "attachment_id": null, "creator": "speaktovpr@gmail.com", "is_private": false, "id": 165460, "time": "2013-02-24T08:07:07Z", "bug_id": 54604, "creation_time": "2013-02-24T08:07:07Z", "tags": [], "text": "Hi Friend,\n\nI am getting following NPE, while I am using AsyncContext in the below mentioned scenario.\n\nScenario :\nI have introduced 1 sec delay inside the while loop after every readLine() call from BufferedReader. This is causing the below error. Please note that, it is working fine if I am not using AsyncContext with the same read delay value( 1 sec). Hence I am suspecting this problem is related to AsyncContext. \n\nServer side code snippet in my servlet is shown below :\n...........................................................\nAsyncContext ctx = request.startAsync();\nBufferedReader br = new BufferedReader(new InputStreamReader(ctx.getRequest().getInputStream()));\nString line=null;\n\nwhile((line= br.readLine())!=null) \n\t\t{\t\n\n            \tSystem.out.println(line);\nThread.sleep(1000);\n\t\t\n\t}\n...........................................................\n\nClient side code snippet to send 50 MB of data in a HttpPost request            \n.............................................................\norg.apache.commons.httpclient.HttpClient client = new org.apache.commons.httpclient.HttpClient();\n \t\nString fileName = \"F:\\\\SampleFile_50MBData\";\nFileInputStream is= new FileInputStream(fileName);\nPostMethod postMethod = new PostMethod(\"http://localhost:8080/async-read-delay/test\");\npostMethod.setRequestEntity(new InputStreamRequestEntity(is,-1));\nint response = client.executeMethod(postMethod);\nis.close();\t\n.............................................................\n\nException in thread \"http-bio-8080-exec-2\" java.lang.NullPointerException\n\tat org.apache.coyote.http11.InternalInputBuffer.fill(InternalInputBuffer.java:516)\n\tat org.apache.coyote.http11.InternalInputBuffer.fill(InternalInputBuffer.java:501)\n\tat org.apache.coyote.http11.InternalInputBuffer$InputStreamInputBuffer.doRead(InternalInputBuffer.java:563)\n\tat org.apache.coyote.http11.AbstractInputBuffer.doRead(AbstractInputBuffer.java:344)\n\tat org.apache.coyote.Request.doRead(Request.java:422)\n\tat org.apache.catalina.connector.InputBuffer.realReadBytes(InputBuffer.java:290)\n\tat org.apache.tomcat.util.buf.ByteChunk.substract(ByteChunk.java:431)\n\tat org.apache.catalina.connector.InputBuffer.read(InputBuffer.java:315)\n\tat org.apache.catalina.connector.CoyoteInputStream.read(CoyoteInputStream.java:200)\n\tat sun.nio.cs.StreamDecoder.readBytes(Unknown Source)\n\tat sun.nio.cs.StreamDecoder.implRead(Unknown Source)\n\tat sun.nio.cs.StreamDecoder.read(Unknown Source)\n\tat java.io.InputStreamReader.read(Unknown Source)\n\tat java.io.BufferedReader.fill(Unknown Source)\n\tat java.io.BufferedReader.readLine(Unknown Source)\n\tat java.io.BufferedReader.readLine(Unknown Source)\n\tat test.TestAsyncFilter.readContent(TestAsyncFilter.java:82)\n\tat test.TestAsyncFilter.access$0(TestAsyncFilter.java:66)\n\tat test.TestAsyncFilter$1.run(TestAsyncFilter.java:53)\n\tat org.apache.catalina.core.AsyncContextImpl$RunnableWrapper.run(AsyncContextImpl.java:474)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.runTask(Unknown Source)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)\n\tat java.lang.Thread.run(Unknown Source)\n\n\nNote : I have tested this in Tomcat 7.0.29. Also the same issue is seen since Tomcat 7.0.21. if I remove the time delay of 1 sec, it is working fine.\n\nLet me know, if there is any fix is available for this problem.\n\nRegards,\nPrakasaraman.V"}, {"count": 1, "attachment_id": null, "creator": "speaktovpr@gmail.com", "text": "Hi Tomcat Team,\n\nIt would be really helpful if somebody can respond to my below issue.\n\nThis is a CRITICAL problem for us as it is affecting our CUSTOMER PRODUCTION setups.\n\nThanks & Regards,\nPrakasaraman.V", "id": 165501, "time": "2013-02-27T07:43:01Z", "bug_id": 54604, "creation_time": "2013-02-27T07:43:01Z", "tags": [], "is_private": false}, {"count": 2, "tags": [], "bug_id": 54604, "attachment_id": null, "is_private": false, "id": 165506, "time": "2013-02-27T14:23:54Z", "creator": "markt@apache.org", "creation_time": "2013-02-27T14:23:54Z", "text": "Correct the product"}, {"count": 3, "tags": [], "bug_id": 54604, "is_private": false, "text": "The async request has timed out.\n\nOnce startAsync() has been called, dispatch() or complete() must be called before the timeout expires. In this case your requets processing is taking longer than the timeout. The NPE is the result of continuing to use the request after the async timeout has expired.\n\nYou need to use a larger timeout.", "id": 165507, "time": "2013-02-27T14:33:33Z", "creator": "markt@apache.org", "creation_time": "2013-02-27T14:33:33Z", "attachment_id": null}, {"count": 4, "attachment_id": null, "creator": "speaktovpr@gmail.com", "text": "Hi Mark Thomas,\n\nThanks for your guidance. I have tried with asyncContext.setTimeout(0). This is working fine with Tomcat 7.0.29 but it fails in Tomcat 7.0.21.\n\nIn Tomcat 7.0.21, I am getting the below mentioned SocketTimeoutException.\nSince this is working fine in Tomcat 7.0.29, I assume there should be a change in source with respect to this issue in one of the Tomcat 7.0.21 post releases. Could you help me to locate the exact fix (source changes) for this issue so that I can make it on top of 7.0.21 source.\n\njava.net.SocketTimeoutException\n\tat org.apache.tomcat.util.net.NioBlockingSelector.read(NioBlockingSelector.java:189)\n\tat org.apache.tomcat.util.net.NioSelectorPool.read(NioSelectorPool.java:228)\n\tat org.apache.tomcat.util.net.NioSelectorPool.read(NioSelectorPool.java:209)\n\tat org.apache.coyote.http11.InternalNioInputBuffer.readSocket(InternalNioInputBuffer.java:403)\n\tat org.apache.coyote.http11.InternalNioInputBuffer.fill(InternalNioInputBuffer.java:759)\n\tat org.apache.coyote.http11.InternalNioInputBuffer$SocketInputBuffer.doRead(InternalNioInputBuffer.java:784)\n\tat org.apache.coyote.http11.filters.IdentityInputFilter.doRead(IdentityInputFilter.java:118)\n\tat org.apache.coyote.http11.AbstractInputBuffer.doRead(AbstractInputBuffer.java:331)\n\tat org.apache.coyote.Request.doRead(Request.java:422)\n\tat org.apache.catalina.connector.InputBuffer.realReadBytes(InputBuffer.java:287)\n\tat org.apache.tomcat.util.buf.ByteChunk.substract(ByteChunk.java:407)\n\tat org.apache.catalina.connector.InputBuffer.read(InputBuffer.java:310)\n\tat org.apache.catalina.connector.CoyoteInputStream.read(CoyoteInputStream.java:202)\n\tat sun.nio.cs.StreamDecoder.readBytes(Unknown Source)\n\tat sun.nio.cs.StreamDecoder.implRead(Unknown Source)\n\tat sun.nio.cs.StreamDecoder.read(Unknown Source)\n\tat java.io.InputStreamReader.read(Unknown Source)\n\tat java.io.BufferedReader.fill(Unknown Source)\n\tat java.io.BufferedReader.readLine(Unknown Source)\n\tat java.io.BufferedReader.readLine(Unknown Source)\n\tat test.TestAsyncFilter.readContent(TestAsyncFilter.java:83)\n\tat test.TestAsyncFilter.access$0(TestAsyncFilter.java:67)\n\tat test.TestAsyncFilter$1.run(TestAsyncFilter.java:54)\n\tat org.apache.catalina.core.AsyncContextImpl$RunnableWrapper.run(AsyncContextImpl.java:472)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.runTask(Unknown Source)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)\n\tat java.lang.Thread.run(Unknown Source)\n\nThanks & Regards,\nPrakasaraman.V", "id": 165540, "time": "2013-02-28T13:48:27Z", "bug_id": 54604, "creation_time": "2013-02-28T13:48:27Z", "tags": [], "is_private": false}, {"count": 5, "tags": [], "bug_id": 54604, "attachment_id": null, "text": "There is no bug to fix here. The supported (by the Tomcat community) option is to upgrade your Tomcat instance. If you want to do something else then the users list is the place to seek further assistance.\n\nAs a pointer to get you started:\n- test the Tomcat instances between 7.0.21 and 7.0.29 to narrow down the search for this particular fix\n- review the chnagelog for the version with the fix\n- if nothing in the change log strikes you as async related you could review the diff between the tag that works and the tag that doesn't\n- finally you can do a binary search for the revision with the fix by building Tomcat from a specific svn revision using the revisions for the tags as the upper and lower limits to start with", "id": 165544, "time": "2013-02-28T14:11:56Z", "creator": "markt@apache.org", "creation_time": "2013-02-28T14:11:56Z", "is_private": false}]