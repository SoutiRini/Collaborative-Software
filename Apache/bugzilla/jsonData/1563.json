[{"count": 0, "tags": [], "creator": "vincent.hardy@sun.com", "attachment_id": null, "is_private": false, "id": 2149, "time": "2001-04-27T13:48:47Z", "bug_id": 1563, "creation_time": "2001-04-27T13:48:47Z", "text": "Would be nice to improve antialiasing at the edge of spread reflect on \nradialGradient.\n\nEmail between Vincent and Thomas:\n\nVH> FYI, I have commited a new test that shows the problem we have\nVH> with the focal point in radial gradient:\nVH> samples/tests/radialGradient.svg.  In that test case, you will\nVH> also see that there is aliasing on the repeat spread method\nVH> (bottom of center column), and I think we should get rid of\nVH> it. What do you think?\n\n    I fixed the radial gradient problem (he was flooring the focusX/Y\nwhich in those cases moved it outside the circle leading to bad\nthings).  So the two that showed a wedge now display properly.\n\n    I added anti-aliasing as well, but it doesn't work as well as you\nare expecting it too.  The problem is that, especially at low\nresolutions (where you probably want it the most), you often step over\nthe anti-aliasing boundary in one pixel:\n\n\nIn one dimension you have\n\n            Pixel 0       Pixel 1\n              |              |\n--------------------------------------------\n           |      |xxxxx|      |      |      |\n                  |  |  |\n          Last Grad  |  First Grad\n                     |\n                  Anti-Aliased region\n\n       So at this scale level you may jump from the second to last\ngradient entry to the first or second gradient entry in one output\npixel.  What you would really need to do here is know what the last,\ncurrent and next color on this line is, and blend all the intervening\ncolors together...\n\n       If you zoom enough that you have multiple pixels per Gradient\ncolor, the anti-aliasing starts looking really nice though :)\n\n       The Anti-aliasing only adds an extra comparison only for Repeat\nunless anti-aliasing is actually needed (in which case it's a slew of\nops to blend colors).  This only affects the (already slow) non fixed\npoint case (since the fixpoint case only handles simple not repeat\ncases)."}, {"count": 1, "tags": [], "creator": "deweese@apache.org", "attachment_id": null, "id": 3620, "time": "2001-07-11T05:08:50Z", "bug_id": 1563, "creation_time": "2001-07-11T05:08:50Z", "is_private": false, "text": "There is now an implementation of radial Graident that does this\nproperly.  We still need to activate it in appropriate circumstances."}, {"count": 2, "tags": [], "creator": "deweese@apache.org", "attachment_id": null, "id": 3737, "time": "2001-07-16T07:34:48Z", "bug_id": 1563, "creation_time": "2001-07-16T07:34:48Z", "is_private": false, "text": "Gradients are now fully anti-aliased (and minor works of art :) \nwhen color-rendering is set to optimizeQuality."}]