[{"count": 0, "text": "I\u00b4m using jxl, jx:if-tags, inside jx:for. This (jx:if) is calling very often the following function and so I have huge performance problems!\n\nUsed poi-version:\npoi-3.0.2-FINAL\n\nClass:\norg.apache.poi.hssf.usermodel.HSSFSheet\n\nMethod:\n\tpublic void shiftRows(int startRow, int endRow, int n, boolean copyRowHeight, boolean resetOriginalRowHeight) {\n\n\nIst improvement:\n----------------\n\nline-number 1199: problem is call of row2Replace.getLastCellNum() on each iteration:\n\nfor ( short col = row2Replace.getFirstCellNum(); col <= row2Replace.getLastCellNum(); col++ )\n\n\nwhy you don\u00b4t use following code instead? I save 30 % time!\n\nshort col=row.getFirstCellNum();\nshort lastCol=row.getLastCellNum();\nwhile (true){\nif(col > lastCol){\nbreak;\n}\n\n\nIInd improvement:\n----------------\n\nline-number 1228: I removed the following code because I never work with comments, and most other people also. And I save again about 30 %. Perhaps you should make this optional by using boolean parameter?\n\nHSSFComment comment = getCellComment(rowNum, col);\nif (comment != null) {\ncomment.setRow(rowNum + n);\n}\n\n\nWith this 2 changes now I need 20 secs instead of 1 min!", "bug_id": 45373, "is_private": false, "id": 118451, "time": "2008-07-10T05:11:03Z", "creator": "jens.klinker@gmx.net", "creation_time": "2008-07-10T05:11:03Z", "tags": [], "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 45373, "attachment_id": null, "id": 118458, "time": "2008-07-10T06:52:37Z", "creator": "jens.klinker@gmx.net", "creation_time": "2008-07-10T06:52:37Z", "is_private": false, "text": "I\u00b4ve changed this:\nshort lastCol=row.getLastCellNum();\n\nto this:\nint lastCol = row.getPhysicalNumberOfCells();\n\nnow, I need 2 secs! instead of 1 min!"}, {"count": 2, "tags": [], "text": "Your proposed fix using physical number of cells won't work for cases where there are gaps in the row, with not all cells being defined.\n\nI've made some changes to HSSFSheet.shiftRows, committed to svn trunk. These should hopefully speed the method up, whilst ensuring that everything that needs to be moved is. Hopefully this does what you need?", "attachment_id": null, "bug_id": 45373, "id": 118489, "time": "2008-07-10T10:52:41Z", "creator": "apache@gagravarr.org", "creation_time": "2008-07-10T10:52:41Z", "is_private": false}]