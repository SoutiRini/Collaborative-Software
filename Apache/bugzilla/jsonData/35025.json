[{"count": 0, "attachment_id": null, "bug_id": 35025, "is_private": false, "id": 75232, "time": "2005-05-23T18:28:52Z", "creator": "lavr@ncbi.nlm.nih.gov", "creation_time": "2005-05-23T18:28:52Z", "tags": [], "text": "Using domain name-only comparison (versus combined name/IP) in\nproxy_http.c results in blind reuse of kept-alive backend connection\nin a situation when name->IP mapping has changed, and\nthe old mapping (IP) is not any longer valid.\n\nImagine the following scenario:  Apache server is configured with ProxyPass'es,\nand each proxypass is using a high-availability name.  Thus, name->ip mapping\nis not necessarily constant over several passes of \nap_proxy_http_create_connection()\ncalls.  The code may have reused the kept-alive backend connection only if both\nname and IP match.\n\nDNS specifically mentiones that using \"name -> multiple IP mappings\" can\nbe employed in a high availability clusters, and can be extremely volatile,\ndepending on the load of the cluster elements (hosts).\n\nThe code of proxy_http.c suggests that there were some ideas about this\nissue but they stay unimplemented:\n\n    /* We have determined who to connect to. Now make the connection, supporting\n\n     * a KeepAlive connection.\n     */\n\n    /* get all the possible IP addresses for the destname and loop through them\n     * until we get a successful connection\n\n\nIn a scenario, when a kept-alive connection is reused with a backend that has\nleft the DNS name group, results in either a dead-end route (the older IP may\nnot be responsive due to its load), or create a significant load skew as it is\ndiverting more and more load on hosts \"latched\" as kept-alive backends,\nwithout even trying to employ other hosts that may be well-available around.\n\nThis situation is, I agree, very specific, but should be, nevertheless,\naddressed with an utmost care.  Here at NCBI we use high-availability model\nand are unable to fully use proxy module keep-alive capability due to\nthe issue described.\n\nThanks for considering this!\n\nAnton Lavrentiev\nfor the group of C++ toolkit developers at NCBI (cpp-core)\n\n\nP.S. The piece of code to blame for the problem in at lines 262-269:\n     of modules/proxy/proxy_http.c:\n\n    if (backend->connection) {\n        client_socket = ap_get_module_config(backend->connection->conn_config, \n&core_module);\n        if ((backend->connection->id == c->id) &&\n            (backend->port == p_conn->port) &&\n            (backend->hostname) &&\n            (!apr_strnatcasecmp(backend->hostname, p_conn->name))) \n{         /// <---- THIS IS NOT SUFFICIENT TO DECIDE WHETHER THE ADDRESS \nMATCHES!!!\n            ap_log_error(APLOG_MARK, APLOG_DEBUG, 0, r->server,\n                         \"proxy: keepalive address match (keep original \nsocket)\");"}, {"count": 1, "tags": [], "creator": "chip@force-elite.com", "attachment_id": null, "is_private": false, "id": 75836, "time": "2005-06-03T00:17:28Z", "bug_id": 35025, "creation_time": "2005-06-03T00:17:28Z", "text": "I am not sure how you want mod_proxy to change to 'fix' this?"}, {"count": 2, "tags": [], "bug_id": 35025, "text": "(In reply to comment #1)\n> I am not sure how you want mod_proxy to change to 'fix' this?\n\n\nBelow is one of solutions that seems reasonable (although, I am\nnot very familiar with the code so it can perhaps be written\neven better):\n\n\n*** httpd-2.0.54/modules/proxy/proxy_http.c     Fri Feb  4 15:21:18 2005\n--- proxy_http.c        Fri Aug  5 16:24:35 2005\n*************** apr_status_t ap_proxy_http_determine_con\n*** 237,242 ****\n--- 237,259 ----\n      return OK;\n  }\n  \n+ \n+ static\n+ apr_status_t address_match(const char*     hostip,\n+                            apr_sockaddr_t* addrs)\n+ {\n+     apr_sockaddr_t* s = addrs;\n+     while (s) {\n+         char* ip;\n+         apr_sockaddr_ip_get(&ip, s);\n+         if (!apr_strnatcasecmp(hostip, ip))\n+             return OK;\n+         s = s->next;\n+     }\n+     return DONE;\n+ }\n+ \n+ \n  static\n  apr_status_t ap_proxy_http_create_connection(apr_pool_t *p, request_rec *r,\n                                               proxy_http_conn_t *p_conn,\n*************** apr_status_t ap_proxy_http_create_connec\n*** 264,270 ****\n          if ((backend->connection->id == c->id) &&\n              (backend->port == p_conn->port) &&\n              (backend->hostname) &&\n!             (!apr_strnatcasecmp(backend->hostname, p_conn->name))) {\n              ap_log_error(APLOG_MARK, APLOG_DEBUG, 0, r->server,\n                           \"proxy: keepalive address match (keep original \nsocket)\");\n          } else {\n--- 281,288 ----\n          if ((backend->connection->id == c->id) &&\n              (backend->port == p_conn->port) &&\n              (backend->hostname) &&\n!             (!apr_strnatcasecmp(backend->hostname, p_conn->name)) &&\n!             address_match(backend->connection->remote_ip, p_conn->addr) == OK)\n{\n              ap_log_error(APLOG_MARK, APLOG_DEBUG, 0, r->server,\n                           \"proxy: keepalive address match (keep original \nsocket)\");\n          } else {\n", "id": 78188, "time": "2005-08-05T22:25:47Z", "creator": "lavr@ncbi.nlm.nih.gov", "creation_time": "2005-08-05T22:25:47Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 35025, "attachment_id": null, "is_private": false, "id": 83287, "time": "2005-12-06T07:44:49Z", "creator": "chip@force-elite.com", "creation_time": "2005-12-06T07:44:49Z", "text": "Can you confirm that this is fixed with 2.2.0?"}, {"count": 4, "tags": [], "bug_id": 35025, "text": "I'll try but here at NCBI we don't use 2.2 so even if\nthe fix has been applied, it won't be of an immediate help\nfor us, unfortunately.\n", "id": 83327, "time": "2005-12-06T18:28:59Z", "creator": "lavr@ncbi.nlm.nih.gov", "creation_time": "2005-12-06T18:28:59Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 35025, "text": "This is vanishingly unlikely to get fixed in 2.0 now.  If there's still a bug in\n2.2, Please reopen and update.", "id": 107944, "time": "2007-09-10T02:39:23Z", "creator": "nick@webthing.com", "creation_time": "2007-09-10T02:39:23Z", "is_private": false, "attachment_id": null}]