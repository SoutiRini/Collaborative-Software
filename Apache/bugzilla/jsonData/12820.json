[{"count": 0, "tags": [], "bug_id": 12820, "attachment_id": null, "id": 23102, "time": "2002-09-19T15:37:36Z", "creator": "daniel.armbrust@mayo.edu", "creation_time": "2002-09-19T15:37:36Z", "is_private": false, "text": "I can not get inheritRefs to work properly.\n\nCode fragments:\n\n\t<target name=\"init\">\n\t\t<path id=\"allJars\">\n\t\t\t<fileset dir=\"/foo2\" id=\"bJars\">\n\t\t\t\t<include name=\".....\"/>\n\t\t\t</fileset>\n\t\t\t<fileset dir=\"/foo\" id=\"aJars\">\n\t\t\t\t<include name=\".....\"/>\n\t\t\t</fileset>\n\t\t\t<fileset dir=\"/\" id=\"cJars\">\n\t\t\t\t<include name=\".....\"/>\n\t\t\t</fileset>\n\t\t</path>\n\t</target>\n\n\t<target name=\"genWsdlTarget\">\n\t\t<java classname=\"${wsdl.java2wsdl}\" fork=\"true\">\n\t\t\t<classpath>\n\t\t\t\t<fileset refid=\"axisJars\"/>\n\t\t\t</classpath>\n\t\t</java>\n\t</target>\n\n\n\t<target name=\"genWsdl\" description=\"Generate wsdl from compiled java\"\ndepends=\"init\">\n\t\t<antcall inheritrefs=\"true\" target=\"genWsdlTarget\">\n\t\t\t<param name=\"wsdlTarget\" value=\"....\"/>\n\t\t</antcall>\n\t</target>\n\n\n\nBUILD FAILED\nfile:build.xml:166: No directory specified for fileset.\n\nLine 166 corresponds to the <java> tag.  \n\nI posted this to the user list, and immediately 2 other people reported the same\nproblem with the ant task.  Was this feature added in a broken state?\n\nI also tried using a <reference> attribute, and naming the specific reference\nthat I wanted to pass, and that fails with the same result.\n\nant -version\nApache Ant version 1.5 compiled on July 12 2002\n\nIf the feature isn't broken, then the documentation most certainly is, because\nit won't do at all what it is described to do."}, {"count": 1, "tags": [], "creator": "bodewig@apache.org", "attachment_id": null, "text": "Where do you define axisJars?  I can only see [abc]Jars, guess it is a typo.", "id": 23103, "time": "2002-09-19T15:58:36Z", "bug_id": 12820, "creation_time": "2002-09-19T15:58:36Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 12820, "attachment_id": null, "id": 23104, "time": "2002-09-19T16:02:21Z", "creator": "daniel.armbrust@mayo.edu", "creation_time": "2002-09-19T16:02:21Z", "is_private": false, "text": "Yes it was a typo.  Sorry.  I got a bit over-zealous shortening these code bits.\n\nIt should have said \n\n<fileset dir=\"/foo\" id=\"axisJars\">\n    <include name=\".....\"/>\n</fileset>\n\nIt is correct in my actual failing code."}, {"count": 3, "tags": [], "bug_id": 12820, "attachment_id": null, "id": 23165, "time": "2002-09-20T18:39:38Z", "creator": "hoju@visi.com", "creation_time": "2002-09-20T18:39:38Z", "is_private": false, "text": "I have the same problem when using the <ant ... /> task.  I have a <path \nid=\"myid\"> in my parent build file.  Then I call another build file with \ninheritRef=\"true\" but any time I reference refid=\"myid\", Ant fails saying it \ncan't be found.  This was true with Ant-1.4.1 and still with Ant-1.5.1beta1.\n\nJake"}, {"count": 4, "tags": [], "bug_id": 12820, "attachment_id": null, "id": 23236, "time": "2002-09-23T06:42:02Z", "creator": "bodewig@apache.org", "creation_time": "2002-09-23T06:42:02Z", "is_private": false, "text": "I'd tend to mark this as WORKSFORME as we even have JUnit testcases to verify\nthat it works, but maybe we are simply not catching all cases.\n\nI'll assign this to myself and ask you to try and come up with the most simple\nexample that verifies the bug.  I'd love to see this fixed in 1.5.2 and get 1.5.1\nout of the door more or less immediately."}, {"count": 5, "tags": [], "bug_id": 12820, "attachment_id": 3177, "text": "Created attachment 3177\nThe bug demonstrator", "id": 23248, "time": "2002-09-23T15:01:59Z", "creator": "daniel.armbrust@mayo.edu", "creation_time": "2002-09-23T15:01:59Z", "is_private": false}, {"count": 6, "tags": [], "creator": "daniel.armbrust@mayo.edu", "attachment_id": null, "text": "The zip file I just attached should demonstrate the bug.  \n\nThe build file is very strange, but this is how I had to set things up to\ndemonstrate the bug.  \n\nClass a.Test simply has a static method that prints what you send it.\n\nClass b.Test2 simply calls that method in class a.Test.  \n\na.Test is jarred, and then used in the classpath of b.Test2.\n\nWhen ant executes b.Test2 without using inheritRefs to pass the classpath, it works.\nWhen ant executes b.Test2 using inheritRefs to pass the classpath, it fails.\n\nant -testInheritRefs \nruns compile, and then init (which makes a fileset of the jar file)\nand then calls testInheritRefs1 (which has no stated dependencies) which\nexecutes b.Test2.\n\nant -testWithoutInheritRefs\nruns compile, init, and then executes b.Test2 itself.\n\n\nHere is my output when I execute the bug:\n\nH:\\Projects\\scratch\\development\\antBug>ant -projecthelp\nBuildfile: build.xml\nMain targets:\n\n compile                 compile the files\n testInheritRefs         Test Ant Call with inheritRefs\n testWithoutInheritRefs  Test the java without inheritRefs\n\nDefault target: test\nH:\\Projects\\scratch\\development\\antBug>ant testWithoutInheritRefs\nBuildfile: build.xml\n\ncompile:\n    [javac] Compiling 1 source file\n      [jar] Building jar: H:\\Projects\\scratch\\development\\antBug\\a.jar\n    [javac] Compiling 1 source file\n\ninit:\n\ntestWithoutInheritRefs:\n     [echo] foobar\n     [java] calling the helper\n\nBUILD SUCCESSFUL\nTotal time: 6 seconds\nH:\\Projects\\scratch\\development\\antBug>ant testInheritRefs\nBuildfile: build.xml\n\ncompile:\n\ninit:\n\ntestInheritRefs:\n\ntestInheritRefs1:\n     [echo] foobar modified\n\nBUILD FAILED\nfile:H:/Projects/scratch/development/antBug/build.xml:24: No directory specified\nfor fileset.\n\nTotal time: 2 seconds\nH:\\Projects\\scratch\\development\\antBug>\n", "id": 23249, "time": "2002-09-23T15:02:52Z", "bug_id": 12820, "creation_time": "2002-09-23T15:02:52Z", "is_private": false}, {"count": 7, "tags": [], "bug_id": 12820, "attachment_id": null, "id": 23250, "time": "2002-09-23T15:05:24Z", "creator": "daniel.armbrust@mayo.edu", "creation_time": "2002-09-23T15:05:24Z", "is_private": false, "text": "Sorry, I set the wrong mime type on the zip file.\n\nSave the attachment as something.zip and it should work fine.\n"}, {"count": 8, "tags": [], "bug_id": 12820, "attachment_id": null, "text": "OK, I see what is happening in your case (either it is still a WORKSFORME or\nI need another example 8-):\n\nYour build file (the one you are calling, not the one that gets called, which\nhappens to be the same file, of course) already defines a reference to \"jar\".\nAccording to the docs of <ant>:\n\n> The build file of the calling project defines some <path> elements like this:\n>\n>  <path id=\"path1\">\n>    ...\n>  </path>\n>  <path id=\"path2\">\n>    ...\n>  </path>\n>\n> and the called build file (subbuild.xml) also defines a <path> with the id\n> path1, but path2 is not defined:\n>\n>  <ant antfile=\"subbuild.xml\" inheritrefs=\"true\"/>\n>\n> will not override subbuild's definition of path1, but make the parent's\n> definition of path2 available in the subbuild.\n\nIn your case, the fileset \"jar\" takes the role of \"path1\" and will not be\noverridden. You get the error message, because the child build's \"jar\" has not\nbeen configured (the \"init\" target has not been run).\n\n> In fact, if you read further in the manual\n>\n>  <ant antfile=\"subbuild.xml\" inheritrefs=\"false\">\n>    <reference refid=\"path1\"/>\n>  </ant>\n>\n> will override subbuild's definition of path1.\n\nchanging your build file to read\n\n  <target name=\"testInheritRefs\" description=\"Test Ant Call with inheritRefs\"\ndepends=\"compile, init\">\n    <antcall target=\"testInheritRefs1\">\n      <param name=\"foo\" value=\"foobar modified\"/>\n      <reference refid=\"jar\"/>\n    </antcall>\n  </target>\n\nyields\n\n[bodewig@bodewig antBug]$ ant testInheritRefs           \nBuildfile: build.xml\n\ncompile:\n\ninit:\n\ntestInheritRefs:\nOverriding previous definition of reference to jar\n\ntestInheritRefs1:\n     [echo] foobar modified\n     [java] calling the helper\n\nBUILD SUCCESSFUL\nTotal time: 2 seconds\n", "id": 23356, "time": "2002-09-25T13:39:38Z", "creator": "bodewig@apache.org", "creation_time": "2002-09-25T13:39:38Z", "is_private": false}, {"count": 9, "tags": [], "text": "I guess this is turning into a support issue rather than a bug... but let me see\nif I have this right.  \n\nWhen my build file calls itself, with inheritRefs=\"true\", it does not get sent\nthe reference to \"jar\" because it is not allowed to override the reference to\n\"jar\" tha t already exists.  And the reference to jar exists (but is set to\nnull), even though the init target has not been called?", "attachment_id": null, "bug_id": 12820, "id": 23366, "time": "2002-09-25T14:48:28Z", "creator": "daniel.armbrust@mayo.edu", "creation_time": "2002-09-25T14:48:28Z", "is_private": false}, {"count": 10, "tags": [], "creator": "bodewig@apache.org", "attachment_id": null, "text": "Is not set to null, but to an \"unconfigured\" instance.  Unconfigured means\nthat the attribute setters have not been called.\n\nI know this sounds wrong, but that is the way Ant has been instantiating tasks\nand data-types ever since.  Some things depend on references being available\neven if the corresponding targets have not been called (see the second example\nin <script>'s documentation).\n\nThis is the reason why I didn't even bother to implement inheritrefs for <antcall>\nin the first version (it will inherit nothing, as everything has been defined\nalready).  But this is not a bug, but a feature of Ant.", "id": 23370, "time": "2002-09-25T16:30:21Z", "bug_id": 12820, "creation_time": "2002-09-25T16:30:21Z", "is_private": false}, {"count": 11, "tags": [], "text": "I figured out my issue, although I still think there is a little bit of \nweirdness...\n\nI have:\n\nbuild.xml\n<path id=\"build.classpath\">\n   <fileset=\"${build.lib.dir}\">    \n       <include name=\"*.jar\"/>\n   <fileset>\n</path>\n<target name=\"sometarget\">\n    <ant antfile=\"build-contrib.xml\" target=\"control\" inheritRefs=\"true\" />\n</target>\n\nbuild-contrib.xml\n<taskdef resource=\"net/sf/antcontrib/antcontrib.properties\" >\n    <classpath refid=\"build.classpath\" />\n</taskdef>\n...\n...\n<target name=\"blah\">\n    <if>\n        <not><isset property=\"somepropery\" /></not>\n        <then>\n            <echo message=\"somproperty not set\"/>\n        </then>\n    </if>\n</target>\n\nAnt reports that the build fails with:\n\nBUILD FAILED\nfile:D:/myclasses/repository/enhydra/Barracuda_2002-09-23/Barracuda/src/build.xm\nl:935: Reference build.classpath not found.\n\nHowever, if I move that <taskdef> into a target, I don't get the error.  \nFurther, even if I don't get that error, I have to make sure that the target \nwhich contains the taskdef gets set up as a dependency of the \"control\" target \nso that it runs before any other target using tasks defined by the <taskdef>.\n\nI guess I am confused by the fact that the path reference can't be found \noutside the scope of a target in the child build file?  I have properties \ndefined at the top of the build file and they get seen by everything else.  Why \ncan't I have a taskdef at the top of a build file, outside a target, that gets \nseen by everything else?  Apparently, I can't because the path reference is not \navailable there.\n\nIs that a bug or was that done by design?\n\nJake", "attachment_id": null, "bug_id": 12820, "id": 23374, "time": "2002-09-25T16:50:27Z", "creator": "hoju@visi.com", "creation_time": "2002-09-25T16:50:27Z", "is_private": false}, {"count": 12, "tags": [], "bug_id": 12820, "text": "Jake, what you see is the way it has to be in Ant 1.5 as far as I can tell.\n\n<ant> needs to know which references have been defined in build-contrib.xml\nin order to not override existing definitions,  therefore the build file has to\nbe parsed.\n\nAnt 1.5's way of dealing with top level tasks is to execute them during parsing.\nThis means your taskdef gets executed, before <ant> adds the reference and you\nget the error.  Putting it into a target, delays the execution until the\nreferences have been set.\n\nYou may find that the same construct works with Ant 1.6alpha (or not) as the way\ntop-level tasks are handled are going to be changed, but we have not yet decided\nhow it is going to change.\n\nTime for some documentation patches, I guess.", "id": 23411, "time": "2002-09-26T08:07:51Z", "creator": "bodewig@apache.org", "creation_time": "2002-09-26T08:07:51Z", "is_private": false, "attachment_id": null}, {"count": 13, "tags": [], "text": "Well, now that I understand what is happening, I would say this bug can be\nnixed, as it never was a bug.  I would recommend, however, that the\ndocumentation for AntCall and Ant should be updated. Ant has the following sentence \n\n\"References to data types can also be passed to the new project, but by default\nthey are not. If you set the inheritrefs attribute to true, all references will\nbe copied, but they will not override references defined in the new project.\"\n\nHowever, AntCall does not.  Secondly, to me, the previous statement does not\nmake it obvious to me what the behavior will be, as I didn't realize that a\nreference is defined in a project just by being in the build file, (as opposed\nto being executed in the build file).  It makes sense to me now that I\nunderstand it but, I am still an Ant learner, and you can see the\nmisunderstanding I had over the course of this bug.  An additional sentence (and\nmaybe an example) would be very useful at preventing this mistake by others (and\nI know others have done it, because 3 other people on the users mailing list\nreported that they had the same problem and no solutions when I first asked what\nI was doing wrong)\n\nThanks for looking into this \"bug\" so thoroughly guys.", "attachment_id": null, "bug_id": 12820, "id": 23445, "time": "2002-09-26T13:07:11Z", "creator": "daniel.armbrust@mayo.edu", "creation_time": "2002-09-26T13:07:11Z", "is_private": false}, {"count": 14, "tags": [], "bug_id": 12820, "attachment_id": null, "id": 23452, "time": "2002-09-26T16:09:31Z", "creator": "bodewig@apache.org", "creation_time": "2002-09-26T16:09:31Z", "is_private": false, "text": "OK, I have patched the documentation for <ant> and <antcall> (view it at\nAnt's website).  Could you please take a look at it and maybe help me to\nimprove it - too me things are more clear as I know how all this has come to\nhow it is."}, {"count": 15, "tags": [], "bug_id": 12820, "attachment_id": null, "text": "Completely off topic - \n\nhttp://jakarta.apache.org/ant/manual/index.html \n\nReports that the pages (left and right frame are Forbidden)", "id": 23462, "time": "2002-09-26T17:30:14Z", "creator": "daniel.armbrust@mayo.edu", "creation_time": "2002-09-26T17:30:14Z", "is_private": false}, {"count": 16, "tags": [], "creator": "bodewig@apache.org", "attachment_id": null, "text": "No problems with the site for me.", "id": 23501, "time": "2002-09-27T06:27:35Z", "bug_id": 12820, "creation_time": "2002-09-27T06:27:35Z", "is_private": false}, {"count": 17, "tags": [], "bug_id": 12820, "text": "My place of work seems to have some odd cacheing problem going on.  \n\nI checked them from home.  The updated docs look good.  \n\nThanks!\n", "id": 23535, "time": "2002-09-27T14:04:52Z", "creator": "daniel.armbrust@mayo.edu", "creation_time": "2002-09-27T14:04:52Z", "is_private": false, "attachment_id": null}]