[{"count": 0, "tags": [], "bug_id": 40271, "attachment_id": null, "is_private": false, "id": 92279, "time": "2006-08-17T01:53:45Z", "creator": "ppaul_apache@yahoo.ca", "creation_time": "2006-08-17T01:53:45Z", "text": "Here is a first patch for the auto table layout. It will be changing greatly in\nthe next few days."}, {"count": 1, "tags": [], "creator": "ppaul_apache@yahoo.ca", "attachment_id": 18726, "id": 92280, "creation_time": "2006-08-17T01:59:22Z", "time": "2006-08-17T01:59:22Z", "bug_id": 40271, "text": "Created attachment 18726\nPatch with basic auto table", "is_private": false}, {"count": 2, "tags": [], "creator": "adelmelle@apache.org", "attachment_id": null, "id": 92289, "creation_time": "2006-08-17T08:42:27Z", "time": "2006-08-17T08:42:27Z", "bug_id": 40271, "text": "Hi Patrick,\n\nJust did a quick review of the patch, and one thing that immediately caught my eye, and thus I think \nneeds more explaining (or an alternative solution):\nYou seem to be inventing a whole new property 'column-min-width'. The properties infrastructure is \nthere for support of standard FO properties (and ultimately extension properties). I get the impression \nit is being misused here to store a variable/value which is only relevant to FOP internally (more \nspecifically: the auto-table layout algorithm)\n\n\nCheers,\n\nAndreas", "is_private": false}, {"count": 3, "tags": [], "bug_id": 40271, "attachment_id": null, "is_private": false, "id": 92290, "time": "2006-08-17T09:21:14Z", "creator": "adelmelle@apache.org", "creation_time": "2006-08-17T09:21:14Z", "text": "Looking a bit closer, IMO the minimum column-width should be derived from the layout context. Count \nthe number of non-null elements in the Table's column-list (one time process), then divide the refIPD of \nthe layout-context by the number of explicitly defined columns (alt.: the largest number of cells in a row \n--that is a value that could be determined in the FOTree, before layout begins)\n\nStrictly speaking, I think a value of 'proportional-column-width(1)' does not always suffice...\nHow is this expression to be interpreted in case of a table with table-layout=\"auto\", no explicit rows, and \na varying number of cells in each row? \nI guess the editors had good reason to constrain the explicit use of proportional-column-width() to fixed-\ntable-layout."}, {"count": 4, "tags": [], "bug_id": 40271, "attachment_id": null, "text": "Not to be a pain, but just committed a small change to the trunk that logs an error for this.\n\nhttp://svn.apache.org/viewvc?rev=432195&view=rev\n\nSorry. Kind of invalidates your patch, I guess. :/", "id": 92294, "time": "2006-08-17T10:14:40Z", "creator": "adelmelle@apache.org", "creation_time": "2006-08-17T10:14:40Z", "is_private": false}, {"count": 5, "tags": [], "text": "You are right. I will have to find an alternative solution to this. I was only\nusing it to store the minimum width of a column.\n\nThank you,\n\nPatrick", "attachment_id": null, "id": 92304, "creator": "ppaul_apache@yahoo.ca", "time": "2006-08-17T16:12:06Z", "bug_id": 40271, "creation_time": "2006-08-17T16:12:06Z", "is_private": false}, {"count": 6, "tags": [], "creator": "ppaul_apache@yahoo.ca", "attachment_id": null, "text": "(In reply to comment #3)\n> Looking a bit closer, IMO the minimum column-width should be derived from the\nlayout context. Count \n> the number of non-null elements in the Table's column-list (one time process),\nthen divide the refIPD of \n> the layout-context by the number of explicitly defined columns (alt.: the\nlargest number of cells in a row \n\nI am not sure I follow you. When you talk about the column-list, is that the\n\"ColumnSetup columns \" in TableLayoutManager ?\n\n> --that is a value that could be determined in the FOTree, before layout begins)\n\n> \n> Strictly speaking, I think a value of 'proportional-column-width(1)' does not\nalways suffice...\n> How is this expression to be interpreted in case of a table with\ntable-layout=\"auto\", no explicit rows, and \n> a varying number of cells in each row? \n> I guess the editors had good reason to constrain the explicit use of\nproportional-column-width() to fixed-\n> table-layout.\n\nPatrick\n\n", "id": 92305, "time": "2006-08-17T16:21:11Z", "bug_id": 40271, "creation_time": "2006-08-17T16:21:11Z", "is_private": false}, {"count": 7, "tags": [], "creator": "adelmelle@apache.org", "attachment_id": null, "id": 92308, "creation_time": "2006-08-17T17:25:04Z", "time": "2006-08-17T17:25:04Z", "bug_id": 40271, "text": "(In reply to comment #6)\n<snip /> \n> I am not sure I follow you. When you talk about the column-list, is that the\n> \"ColumnSetup columns \" in TableLayoutManager ?\n\nNot entirely. ColumnSetup will currently only contain the actual column count in case you have \nexplicitly defined columns. There's a method ColumnSetup.createFromFirstRow(), but this maps to \nreturn the table's default column (= FOP internal). So, in case you have a table without explicit columns, \nthe maximum column-count would already be different.\n\nWe could quite easily keep track of the maximum number of cells in a row as the FOTree is built, so \nthat, by the time layout starts, the layoutmanager could already know what the maximum column-\ncount will be for the whole table without having to iterate over all the rows.\n\n\nHTH!\n\nAndreas", "is_private": false}, {"count": 8, "tags": [], "creator": "adelmelle@apache.org", "attachment_id": null, "id": 92310, "creation_time": "2006-08-17T17:59:39Z", "time": "2006-08-17T17:59:39Z", "bug_id": 40271, "text": "(In reply to comment #7)\n> \n> We could quite easily keep track of the maximum number of cells in a \n> row as the FOTree is built, so that, by the time layout starts, the \n> layoutmanager could already know what the maximum column-\n> count will be for the whole table without having to iterate over all the rows.\n\nTo expand a bit more upon this (could also be of use for fixed-layout):\nIdeally, ColumnSetup should be made to deal with both implicit and explicit columns completely, so the \nTableContentLM does not need to sort this stuff out. The columns in ColumnSetup should be the table-\ngrid columns.\n\nI did wonder whether this should be viewed on a per-page basis...? I mean: say you have a table with \nfive cells per row (100+ rows), except for the last row which has six. \nDo we layout the whole table as if there were six columns, or only the last page?\n\nCheers\n\nAndreas", "is_private": false}, {"count": 9, "tags": [], "bug_id": 40271, "text": "(In reply to comment #8)\n> I did wonder whether this should be viewed on a per-page basis...? I mean: say\nyou have a table with \n> five cells per row (100+ rows), except for the last row which has six. \n> Do we layout the whole table as if there were six columns, or only the last page?\n\nLook at it this way: You'd expect an fo:block to occupy the whole width on both\npages if that block is broken between two pages and the first is a landscape\npage and the second is a portrait page. Now transfer this to fo:table where you\nmight specify columns entirely using proportional-column-width() (or even using\nauto-table layout). Especially when specifying the table width using\nwidth=\"100%\" you define that the area generated by the FO occupies 100% of the\nwidth of the containing area. So, especially in the light of the upcoming\nchanges for \"changing available IPD\", there's a possibility that you'll have to\nrecalculate the column setup for every page. Not that the table layout can\nalready deal with this situation, but it will have to at some point.", "id": 92311, "time": "2006-08-17T18:19:25Z", "creator": "jeremias@apache.org", "creation_time": "2006-08-17T18:19:25Z", "is_private": false, "attachment_id": null}, {"count": 10, "tags": [], "bug_id": 40271, "text": "(In reply to comment #9)\n> > I did wonder whether this should be viewed on a per-page basis...? \n> > I mean: say you have a table with \n> > five cells per row (100+ rows), except for the last row which has six. \n> > Do we layout the whole table as if there were six columns, or only the last page?\n> \n> Look at it this way: You'd expect an fo:block to occupy the whole width on both\n> pages if that block is broken between two pages and the first is a landscape\n> page and the second is a portrait page. Now transfer this to fo:table where you\n> might specify columns entirely using proportional-column-width() (or even using\n> auto-table layout).\n\nYes, but what I'm referring to is more that the _proportions_ would remain the same over the whole \ntable, no matter what the actual page-dimensions are.\nGiven that proportional-column-width() and auto table-layout are mutually exclusive, distribution of \nremaining space can occur if:\n\na) table-layout=\"fixed\", explicit columns with relative widths (some using p-c-w())\nb) table-layout=\"fixed\", implicit columns with relative widths (from cells in the first row)\nc) table-layout=\"auto\"\n\nTake case a):\nSuppose six defined columns, then in my original example, I'd expect the column-widths to have the \nsame proportions on every page, no matter if the page contains a cell that occupies a particular \ncolumn. This is what the average human being would expect, I guess, especially if it isn't the last \ncolumn.\n\nMove on to case b):\nSuppose the first row contains five cells, each with a relative width of 20% --no proportional-column-\nwidth() here. Strictly following the Rec, we should end up with a table of five columns, equally large in \nproportion on all pages. What happens if I add a sixth cell to the last row? (I'd say we can safely ignore \nand complain about it, which we already do, IIC)\n\nCase c) seems to offers more liberty here, since not only the absolute, but also the relative values can \nbe evaluated separately for each page.", "id": 92322, "time": "2006-08-17T23:37:13Z", "creator": "adelmelle@apache.org", "creation_time": "2006-08-17T23:37:13Z", "is_private": false, "attachment_id": null}, {"count": 11, "tags": [], "bug_id": 40271, "text": "(In reply to comment #4)\n> Not to be a pain, but just committed a small change to the trunk that logs an\nerror for this.\n> \n> http://svn.apache.org/viewvc?rev=432195&view=rev\n> \n> Sorry. Kind of invalidates your patch, I guess. :/\n\nI'm confused about this. When I checkout the Apache FOP source code from SVN and\ntry to feed it some .fo files that previously worked with table-layout=\"auto\"\nthey fail.\n\nIn my new patch I commented out your change just so that I may do some testing.\nI have to understand this better.\n\nThank you for your feedback.\n\nPatrick", "id": 92364, "time": "2006-08-21T02:25:03Z", "creator": "ppaul_apache@yahoo.ca", "creation_time": "2006-08-21T02:25:03Z", "is_private": false, "attachment_id": null}, {"count": 12, "tags": [], "creator": "ppaul_apache@yahoo.ca", "attachment_id": 18736, "id": 92365, "creation_time": "2006-08-21T02:29:26Z", "time": "2006-08-21T02:29:26Z", "bug_id": 40271, "text": "Created attachment 18736\nNew patch. Now works better. Still needs work for spanned cells.\n\nI'm no longer using a new property to store my minimum column values, as\npointed out by Andreas.\n\nI have also fixed some bugs in the optimal width calculation.\n\nThis is still a \"drafty\" patch.\n\nPatrick", "is_private": false}, {"count": 13, "tags": [], "text": "(In reply to comment #3)\n> Looking a bit closer, IMO the minimum column-width should be derived from the\nlayout context. Count \n> the number of non-null elements in the Table's column-list (one time process),\nthen divide the refIPD of \n> the layout-context by the number of explicitly defined columns (alt.: the\nlargest number of cells in a row \n> --that is a value that could be determined in the FOTree, before layout begins)\n\nI'm not sure I follow you. I thought the minimum column-width was to be\ndetermined by the \"largest minimum cell width (or the column 'width', whichever\nis larger)\". (http://www.w3.org/TR/REC-CSS2/tables.html#width-layout)\n\nDo you mean that we would consider the \"default\" column-width to be the one\ncalculated as you describe ?\n\nPatrick\n", "is_private": false, "id": 92366, "creator": "ppaul_apache@yahoo.ca", "time": "2006-08-21T02:45:33Z", "bug_id": 40271, "creation_time": "2006-08-21T02:45:33Z", "attachment_id": null}, {"count": 14, "tags": [], "bug_id": 40271, "attachment_id": null, "is_private": false, "id": 92367, "time": "2006-08-21T05:45:19Z", "creator": "adelmelle@apache.org", "creation_time": "2006-08-21T05:45:19Z", "text": "(In reply to comment #11)\n> I'm confused about this. When I checkout the Apache FOP source code from SVN and\n> try to feed it some .fo files that previously worked with table-layout=\"auto\"\n> they fail.\n\nIndeed. That's a result from the 'faulty' default for column-width we currently set in \nFOPropertyMapping. \nThe value \"proportional-column-width(1)\" should not be used in case of table-layout=\"auto\" (as per the \nRecommendation; strictly speaking the results in case of auto-layout are undefined...)\n\nIt is easy enough to catch this internally, though. \nTo solve this locally, I made the default an enum value of \"auto\", then checked for this later on, and \nreplaced it with a 'new TableColLength(1.0, ...)'\n\nRoughly (in TableColumn.bind(), after setting columnWidth from the PropertyList):\n \nif (columnWidth.getEnum() == EN_AUTO) {\n  columnWidth = new TableColLength(1.0, col);\n}\n\nThis avoids triggering the function-evaluation, which in turn avoids the check for auto-layout and thus \nproduces no validation error.\n\nHaven't committed this change, yet, since I was also playing with adding default columns from cells in \nthe first row. Goal is to have TableColumn instances for every default column (instead of only one \ndefault column for the whole table) with their widths set to the width of the cell they were based on \n(ultimately the above described default TableColLength(), if the cell's width is \"auto\").\n\n> In my new patch I commented out your change just so that I may do some testing.\n> I have to understand this better.\n\nI hope the above clarifies it a bit. If not, don't hesitate to ask further.\n\nWhat is also important in case of auto-layout, I think, is that the minimum-column-width should not \nsimply be 'the available IPD divided by the number of columns' (or 'one table-unit'). \nThe big difference with fixed-layout is precisely that, in case of auto-layout the minimum-column-\nwidth depends on the content. For example: if the column contains only one character of content each \nrow, then the column's minimum-width would most likely turn out to be far less than 'proportional-\ncolumn-width(1)'.\n\n\nCheers,\n\nAndreas"}, {"count": 15, "tags": [], "text": "(In reply to comment #14)\n<snip />\n\n> What is also important in case of auto-layout, I think, is that the minimum-column-width should not \n> simply be 'the available IPD divided by the number of columns' (or 'one table-unit'). \n> The big difference with fixed-layout is precisely that, in case of auto-layout the minimum-column-\n> width depends on the content.\n\nJust thought I'd add:\nThis actually means that for auto-layout, if we encounter a TableColumn whose width is an instance of \nTableColLength, then this width should be ignored. It means there were no explicit constraints placed \non the column's width. It will depend *completely* on the content of the cells occupying that column \n(max-col-width = min-col-width).\n\nCheers,\n\nAndreas\n", "attachment_id": null, "id": 92368, "creator": "adelmelle@apache.org", "time": "2006-08-21T05:58:05Z", "bug_id": 40271, "creation_time": "2006-08-21T05:58:05Z", "is_private": false}, {"count": 16, "tags": [], "text": "(In reply to comment #12)\n> Created an attachment (id=18736) [edit]\n> New patch. Now works better. Still needs work for spanned cells.\n> \n\nThere is a reference to a TableHelper, but this file is not included in the patch. Can you attach it \nseparately?\n\nThanks,\n\nAndreas\n", "attachment_id": null, "id": 92369, "creator": "adelmelle@apache.org", "time": "2006-08-21T06:10:19Z", "bug_id": 40271, "creation_time": "2006-08-21T06:10:19Z", "is_private": false}, {"count": 17, "tags": [], "bug_id": 40271, "text": "(In reply to comment #13)\n> \n> I'm not sure I follow you. I thought the minimum column-width was to be\n> determined by the \"largest minimum cell width (or the column 'width', whichever\n> is larger)\". (http://www.w3.org/TR/REC-CSS2/tables.html#width-layout)\n\nIndeed! That only occurred to me afterwards... sorry. \nOTOH, this also means that you can't depend on 'proportional-column-width()', no?\n\nIf there was no width specified, neither on the column, nor on the cell, then both minimum and \nmaximum depend on the content (of the whole table :))\n\nThe only thing we know about the optimum width is that it lies somewhere in between, but it is \nindependent of something like a 'default column width' (which we had defined wrongly in the first \nplace).\n\n> Do you mean that we would consider the \"default\" column-width to be the one\n> calculated as you describe ?\n\nYep. But, again, in the strict sense, this 'default' is irrelevant for auto-layout.", "id": 92370, "time": "2006-08-21T08:07:51Z", "creator": "adelmelle@apache.org", "creation_time": "2006-08-21T08:07:51Z", "is_private": false, "attachment_id": null}, {"count": 18, "tags": [], "bug_id": 40271, "text": "Created attachment 18737\nTable helper file that goes with the patch\n\nSorry about that. Here is the file. It is only used to pass values. I will\nprobably have to find a better mechanism for this.\n\nThank you very much for all the feedback and help.\n\nPatrick", "id": 92374, "time": "2006-08-21T18:33:54Z", "creator": "ppaul_apache@yahoo.ca", "creation_time": "2006-08-21T18:33:54Z", "is_private": false, "attachment_id": 18737}, {"count": 19, "tags": [], "bug_id": 40271, "text": "(In reply to comment #10)\n> (In reply to comment #9)\n> > > I did wonder whether this should be viewed on a per-page basis...? \n> > > I mean: say you have a table with \n> > > five cells per row (100+ rows), except for the last row which has six. \n> > > Do we layout the whole table as if there were six columns, or only the\nlast page?\n> > \n> > Look at it this way: You'd expect an fo:block to occupy the whole width on both\n> > pages if that block is broken between two pages and the first is a landscape\n> > page and the second is a portrait page. Now transfer this to fo:table where you\n> > might specify columns entirely using proportional-column-width() (or even using\n> > auto-table layout).\n> \n> Yes, but what I'm referring to is more that the _proportions_ would remain the\nsame over the whole \n> table, no matter what the actual page-dimensions are.\n\nNot necessarily for auto table layout, I'd say. Anyway, neither the CSS nor the\nFO spec tells us what algorithm to use to determine the column widths and how\nand if the widths have to be reevaluated for each page.\n\n> Given that proportional-column-width() and auto table-layout are mutually\nexclusive, distribution of \n> remaining space can occur if:\n> \n> a) table-layout=\"fixed\", explicit columns with relative widths (some using\np-c-w())\n> b) table-layout=\"fixed\", implicit columns with relative widths (from cells in\nthe first row)\n> c) table-layout=\"auto\"\n> \n> Take case a):\n> Suppose six defined columns, then in my original example, I'd expect the\ncolumn-widths to have the \n> same proportions on every page, no matter if the page contains a cell that\noccupies a particular \n> column. This is what the average human being would expect, I guess, especially\nif it isn't the last \n> column.\n> \n> Move on to case b):\n> Suppose the first row contains five cells, each with a relative width of 20%\n--no proportional-column-\n> width() here. Strictly following the Rec, we should end up with a table of\nfive columns, equally large in \n> proportion on all pages. What happens if I add a sixth cell to the last row?\n(I'd say we can safely ignore \n> and complain about it, which we already do, IIC)\n> \n> Case c) seems to offers more liberty here, since not only the absolute, but\nalso the relative values can \n> be evaluated separately for each page.\n\nagreed.", "id": 92376, "time": "2006-08-21T20:53:24Z", "creator": "jeremias@apache.org", "creation_time": "2006-08-21T20:53:24Z", "is_private": false, "attachment_id": null}, {"count": 20, "tags": [], "bug_id": 40271, "attachment_id": null, "is_private": false, "id": 92378, "time": "2006-08-21T20:56:01Z", "creator": "jeremias@apache.org", "creation_time": "2006-08-21T20:56:01Z", "text": "(In reply to comment #17)\n<snip/>\n> If there was no width specified, neither on the column, nor on the cell, then\nboth minimum and \n> maximum depend on the content (of the whole table :))\n\nAgain, not necessarily. We don't have to scan the whole table for the algorithm.\n\n<snip/>"}, {"count": 21, "tags": [], "creator": "ppaul_apache@yahoo.ca", "attachment_id": 18738, "id": 92385, "creation_time": "2006-08-22T03:26:17Z", "time": "2006-08-22T03:26:17Z", "bug_id": 40271, "text": "Created attachment 18738\ntestcase for table-layout =auto\n\nI can't get the checks right.\n\nPatrick", "is_private": false}, {"count": 22, "tags": [], "bug_id": 40271, "text": "Created attachment 18739\nNew patch. Works with Andreas modifications.\n\nHere is my new patch. It works with Adreas new modifications.\n\nI will address Andreas questions and comments tomorrow.\n\nThank you,\n\nPatrick", "id": 92386, "time": "2006-08-22T03:29:04Z", "creator": "ppaul_apache@yahoo.ca", "creation_time": "2006-08-22T03:29:04Z", "is_private": false, "attachment_id": 18739}, {"count": 23, "tags": [], "text": "(In reply to comment #18)\n> Created an attachment (id=18737) [edit]\n> Table helper file that goes with the patch\n> \n> Sorry about that. Here is the file. It is only used to pass values. I will\n> probably have to find a better mechanism for this.\n\nNot probably, you definitely have to find a different way. Communicating through\nstatic variables is a total no-go.", "attachment_id": null, "id": 92387, "creator": "jeremias@apache.org", "time": "2006-08-22T07:55:49Z", "bug_id": 40271, "creation_time": "2006-08-22T07:55:49Z", "is_private": false}, {"count": 24, "tags": [], "bug_id": 40271, "attachment_id": null, "is_private": false, "id": 92393, "time": "2006-08-22T10:29:17Z", "creator": "adelmelle@apache.org", "creation_time": "2006-08-22T10:29:17Z", "text": "(In reply to comment #23)\n> (In reply to comment #18)\n> > \n> > Sorry about that. Here is the file. It is only used to pass values. I will\n> > probably have to find a better mechanism for this.\n> \n> Not probably, you definitely have to find a different way. Communicating through\n> static variables is a total no-go.\n\nOuch! I wish I had looked closer at this one yesterday... \nThis is indeed not acceptable. Why statics, Patrick? \nRemember that FOP in the general case does not run exclusively in one thread on a single-processor \nmachine, so it might well be that there is more than one table for which layout is performed at the \nsame time. If that happens, the TableHelper class members would be shared between threads. :/"}, {"count": 25, "tags": [], "creator": "ppaul_apache@yahoo.ca", "attachment_id": 18749, "text": "Created attachment 18749\nNew patch now avoiding static variables for min and max widths\n\nThis patch doesn't make use of the static variables in table-helper anymore.\nUnfortunately it still uses the TableHelper.calculateMode static variable but I\nwill be removing that soon.\n\nI'd rather update frequently even if there are upcoming changes.\n\nCheers,\n\nPatrick", "id": 92498, "time": "2006-08-24T16:02:58Z", "bug_id": 40271, "creation_time": "2006-08-24T16:02:58Z", "is_private": false}, {"count": 26, "tags": [], "creator": "adelmelle@apache.org", "attachment_id": null, "id": 92515, "creation_time": "2006-08-24T21:34:08Z", "time": "2006-08-24T21:34:08Z", "bug_id": 40271, "text": "Hi Patrick,\n\nThanks for the updates.\nJust to let you know: I'll look further into your patch ASAP. (If you've been following the commit list, you'll \nnotice I'm getting a bit tired ;)) Will be back tomorrow.\n\nCheers,\n\nAndreas", "is_private": false}, {"count": 27, "tags": [], "bug_id": 40271, "text": "Patrick,\n\nA few requests and pointers:\n* Can you try and give the variables a bit more descriptive names? It's just that at times, I was getting a \nbit lost in the 'iX's... :)\n\n* Don't be afraid/ashamed to re-use existing structures: I get the impression that your MinMax \ndatatype is only slightly different from the MinOptMax we already heavily use. Maybe you could use the \nlatter...?\n\n* I'd also put the stuff related to table-layout in separate methods (instead of inserting the new code-\nblocks into existing methods), and make sure the extra objects don't get created for fixed layout. For \nfixed layout, it is unnecessary to have two TableContentLMs and two ColumnSetups...\n\nAlso, as an alternative to the implementation of getMinMaxTextWidths() --still using the misleading \nname?-- I'm beginning to wonder whether the computation of min and max content widths is \nfunctionality that belongs in the ElementListUtils utility class. Its operand is always an element list.\n\nFor the rest, it seems logical, but note that we still can do little more than judge the patch by looking at \nit, since it is still incomplete... It would be cool if you could provide us with an integrated patch \ncontaining all changes (including added files: this time the MinMax class is missing, but see above, \nmaybe MinOptMax can be used?), so we can see it in action for ourselves.\n\nThanks,\n\nAndreas", "id": 92562, "time": "2006-08-26T19:22:23Z", "creator": "adelmelle@apache.org", "creation_time": "2006-08-26T19:22:23Z", "is_private": false, "attachment_id": null}, {"count": 28, "tags": [], "creator": "ppaul_apache@yahoo.ca", "attachment_id": null, "text": "Thank you very much for the pointers Adreas.\n\nI will do my best to follow them as well as the requests, and I will post back here.\n\nPatrick", "id": 92565, "time": "2006-08-26T22:49:49Z", "bug_id": 40271, "creation_time": "2006-08-26T22:49:49Z", "is_private": false}, {"count": 29, "tags": [], "text": "Created attachment 18816\nNew patch taking most of Andreas comments into account\n\n\"TableHelper\" is not needed anymore.\nNow using MinOptMax.\nAutoTable code moved into methods.", "is_private": false, "id": 92971, "creator": "ppaul_apache@yahoo.ca", "time": "2006-09-04T04:36:30Z", "bug_id": 40271, "creation_time": "2006-09-04T04:36:30Z", "attachment_id": 18816}, {"count": 30, "tags": [], "text": "Created attachment 18817\nTest case for table-layout=auto.", "attachment_id": 18817, "id": 92972, "creator": "ppaul_apache@yahoo.ca", "time": "2006-09-04T04:37:45Z", "bug_id": 40271, "creation_time": "2006-09-04T04:37:45Z", "is_private": false}, {"count": 31, "tags": [], "text": "(In reply to comment #27)\n> Patrick,\n> \n> A few requests and pointers:\n> * Can you try and give the variables a bit more descriptive names? It's just\nthat at times, I was getting a \n> bit lost in the 'iX's... :)\n\nThese are just iterators really. I tried ising only i and i2.\n \n> * Don't be afraid/ashamed to re-use existing structures: I get the impression\nthat your MinMax \n> datatype is only slightly different from the MinOptMax we already heavily use.\nMaybe you could use the \n> latter...?\n\nThanks for the pointer. I used it and its perfect for the job.\n \n> * I'd also put the stuff related to table-layout in separate methods (instead\nof inserting the new code-\n> blocks into existing methods), and make sure the extra objects don't get\ncreated for fixed layout. For \n> fixed layout, it is unnecessary to have two TableContentLMs and two\nColumnSetups...\n\nDone.\n \n> Also, as an alternative to the implementation of getMinMaxTextWidths() --still\nusing the misleading \n> name?\n\nYeah... should we go with getMinMaxContentWidths() ???\n\n> -- I'm beginning to wonder whether the computation of min and max content\nwidths is \n> functionality that belongs in the ElementListUtils utility class. Its operand\nis always an element list.\n\nThis is done only once in the LineLayoutManager. \n\n> For the rest, it seems logical, but note that we still can do little more than\njudge the patch by looking at \n> it, since it is still incomplete... It would be cool if you could provide us\nwith an integrated patch \n> containing all changes (including added files: this time the MinMax class is\nmissing, but see above, \n> maybe MinOptMax can be used?), so we can see it in action for ourselves.\n\nThere are no more additional files thanks to your help. I am now using MinOptMax\nand the TableHelper is no longer used at all.\n \n> Thanks,\n> \n> Andreas\n\nThank you,\n\nPatrick", "attachment_id": null, "id": 92973, "creator": "ppaul_apache@yahoo.ca", "time": "2006-09-04T04:42:28Z", "bug_id": 40271, "creation_time": "2006-09-04T04:42:28Z", "is_private": false}, {"count": 32, "tags": [], "creator": "spepping@apache.org", "attachment_id": null, "id": 93064, "creation_time": "2006-09-05T20:05:48Z", "time": "2006-09-05T20:05:48Z", "bug_id": 40271, "text": "Patrick,\n\nClass org.apache.fop.layoutmgr.table.TableHelper is not in the patch.\n\nSimon\n", "is_private": false}, {"count": 33, "tags": [], "text": "Created attachment 18828\nRemoved import org.apache.fop.layoutmgr.table.TableHelper in TableLM\n\nRemoved import org.apache.fop.layoutmgr.table.TableHelper in TableLM", "attachment_id": 18828, "id": 93104, "creator": "ppaul_apache@yahoo.ca", "time": "2006-09-06T13:54:28Z", "bug_id": 40271, "creation_time": "2006-09-06T13:54:28Z", "is_private": false}, {"count": 34, "tags": [], "bug_id": 40271, "attachment_id": null, "is_private": false, "id": 93105, "time": "2006-09-06T13:55:15Z", "creator": "ppaul_apache@yahoo.ca", "creation_time": "2006-09-06T13:55:15Z", "text": "(In reply to comment #32)\n> Patrick,\n> \n> Class org.apache.fop.layoutmgr.table.TableHelper is not in the patch.\n\nThis class is not used anymore. The import was still there. Thanks for noticing me.\n\n> Simon\n\nThank you,\n\nPatrcik\n\n"}, {"count": 35, "tags": [], "bug_id": 40271, "text": "If it were that easy, I could have guessed it myself. But you do create an\nobject of that class. Removing that object as well helps.\n\nSimon", "id": 93110, "time": "2006-09-06T19:10:38Z", "creator": "spepping@apache.org", "creation_time": "2006-09-06T19:10:38Z", "is_private": false, "attachment_id": null}, {"count": 36, "tags": [], "bug_id": 40271, "attachment_id": 18829, "is_private": false, "id": 93126, "time": "2006-09-07T03:14:02Z", "creator": "ppaul_apache@yahoo.ca", "creation_time": "2006-09-07T03:14:02Z", "text": "Created attachment 18829\nRemoved TableHelper object\n\nTableHelper was still around... sorry about that. \n\nPatrick"}, {"count": 37, "tags": [], "bug_id": 40271, "attachment_id": null, "text": "(In reply to comment #35)\n> If it were that easy, I could have guessed it myself. But you do create an\n> object of that class. Removing that object as well helps.\n> \n> Simon\n\nSorry again ! This time I hope I got it right.\n\nMany thanks,\n\nPatrick\n\n", "id": 93127, "time": "2006-09-07T03:15:13Z", "creator": "ppaul_apache@yahoo.ca", "creation_time": "2006-09-07T03:15:13Z", "is_private": false}, {"count": 38, "tags": [], "bug_id": 40271, "attachment_id": null, "is_private": false, "id": 93196, "time": "2006-09-08T09:27:22Z", "creator": "jeremias@apache.org", "creation_time": "2006-09-08T09:27:22Z", "text": "I've reviewed the latest patch. Here are my comments, some of which I already\nsent to Patrick when we chatted earlier via Skype:\n- in the testcase an overflow happens in the second column because border widths\nwere not respected for calculating the column widths.\n- The resulting widths don't seem right. The first column should be wider, the\nthird narrower to provide a more balanced result.\n- The variable names as mentioned by Andreas are still not changed. I don't\nparticularly like names which contain indexes. Speaking names are always\npreferrable. I think there's room for improvement.\n- Your Java style is a little inconsistent. Indents are 4 spaces, there's a\nspace after \"if\", a space before and after \"==\" etc. You might want to install a\nCheckStyle plugin. It could help you avoid such things by telling you where the\nproblems are. If you could improve that a little, it will cause less work for us\nwhen we apply the patch.\n- System.out.println calls have to be changed to use log.*(). Use\nlog.is*Enabled() if you construct Strings with variables for log levels of info\nor higher.\n- The main point: As you know I'm still unhappy that the\nTableContentLayoutManager (with all its children) is constructed twice. If this\ncan be isolated for the auto-table-layout case (i.e. the fixed table layout is\nnot affected) it is somewhat acceptable in the short-term but the next big goal\nhas to be to split the element list generation from the line-breaking.\n- It would be good to have additional test cases showing stuff that does not\nwork, yet, like a table with some fixed-width columns.\n- In the end, the message \"table-layout=\"auto\" is currently not supported by\nFOP\" can be removed. :-)\n\nI'm happy to see that we're on the way on this topic. And it is good to see the\ndiscussion about the splitting of the element list generation from the line\nbreaking.\nUnfortunately, I don't think the patch is ready to be applied, yet. What do the\nothers think?"}, {"count": 39, "tags": [], "bug_id": 40271, "attachment_id": null, "is_private": false, "id": 93266, "time": "2006-09-09T11:50:16Z", "creator": "spepping@apache.org", "creation_time": "2006-09-09T11:50:16Z", "text": "Patrick,\n\nI have reviewed your patch. These are my remarks:\n\ncolumns.columns and columns2.columns contain the same TableColumn\nobjects, columns.colWidths and columns2.colWidths contain the same\nTableColLength objects:\n\ncolumns\tColumnSetup  (id=79)\t\n\tcolumns\tArrayList<E>  (id=96)\t\n\t\t[0]\tTableColumn  (id=104)\t\n\t\t[1]\tTableColumn  (id=105)\t\n\t\t[2]\tTableColumn  (id=102)\t\n\tcolWidths\tArrayList<E>  (id=97)\t\n\t\t[0]\tnull\t\n\t\t[1]\tTableColLength  (id=114)\t\n\t\t[2]\tTableColLength  (id=115)\t\n\t\t[3]\tTableColLength  (id=108)\t\n\tmaxColIndexReferenced\t0\t\n\ttable\tTable  (id=85)\t\ncolumns2\tColumnSetup  (id=81)\t\n\tcolumns\tArrayList<E>  (id=98)\t\n\t\t[0]\tTableColumn  (id=104)\t\n\t\t[1]\tTableColumn  (id=105)\t\n\t\t[2]\tTableColumn  (id=102)\t\n\tcolWidths\tArrayList<E>  (id=99)\t\n\t\t[0]\tnull\t\n\t\t[1]\tTableColLength  (id=114)\t\n\t\t[2]\tTableColLength  (id=115)\t\n\t\t[3]\tTableColLength  (id=108)\t\n\tmaxColIndexReferenced\t0\t\n\ttable\tTable  (id=85)\t\n\nConsequently, in 'copy column setup' column and column2 are the same\nobject. Apparently there is no need for columns2. One can set the\ncolumn widths, use them for the auto table layout calculations, and\nset them again to the calculated widths.\n\nIn TableContentLayoutManager.createElementsForRowGroup, the call to\ndetermineAutoColumnWidths may be too early. The construction of the\nelement list of the primary is not yet finished. Cf. the call to the\nElementListObserver.\n\nIn LineLayoutManager.collectInlineKnuthElements minMaxW is not\ncorrectly calculated when an LM has multiple child LMs. Each child LM\noverwrites the results of its previous sibling, and the last one\nremains. The same is true for the calls to minMaxTextWidths() in\nBlockStackingLM and TableContentLM, when they have multiple child LMs.\n\nThis would be a possible scenario: The BlockLevelLMs implement\nminMaxTextWidths(). Basically they request the same from their child\nLMs, and return the combined results. TableContentLM calls\nminMaxTextWidths() on all the TableCellLMs and combine the results per\ncolumn. LineLM implements minMaxTextWidths() as collectKnuthElements\nand returns the combined results for minMaxW of its paragraphs and\ninline blocks. LineLM keeps the constructed element lists in\nknuthParagraphs (check). When the proper column widths have been\ncalculated, getNextKnuthElements is called. In this call, LineLM uses\nthe constructed element lists (check). In this way, the column width\ncalculations are done without invoking the table stepper algorithm,\nand the element lists are constructed only once. Ideally it would be\nprogrammed such that a call to minMaxTextWidths() is optional, that\nis, if it is called, the Knuth element lists are kept for reuse in\ngetNextKnuthElements(), and if it is not, getNextKnuthElements()\nconstructs the element lists as it does now.\n\nThe difficult part will be in TableContentLM, taking spanned cells\ninto account and reusing existing methods while bypassing the grid\nunit construction. Implementing without spanned cells is the first\napproximation. Perhaps a simplified version of\ngetKnuthElementsForRowIterator is needed: you want to dive into the\ntable cells without bothering about vertical cell alignments and page\nbreaks. Alternatively, the grid units are constructed without line\nbreaking in the cells, and reused in the call to\ngetNextKnuthElements(). (pgus should be a member of TableContentLM?)\n\nSimon\n"}, {"count": 40, "tags": [], "bug_id": 40271, "text": "Comment on attachment 18817\nTest case for table-layout=auto.\n\nCould we change <info> text to say that we are checking \"auto\" layout here?", "id": 94283, "time": "2006-09-29T11:00:27Z", "creator": "a.chaliapinas@infosana.com", "creation_time": "2006-09-29T11:00:27Z", "is_private": false, "attachment_id": 18817}, {"count": 41, "tags": [], "bug_id": 40271, "attachment_id": null, "is_private": false, "id": 94302, "time": "2006-09-30T01:23:42Z", "creator": "a.chaliapinas@infosana.com", "creation_time": "2006-09-30T01:23:42Z", "text": "Hello,\n\nIf you guys have nothing against - I'll look into this bug/possible \nenhancements during next 2 weeks (and then either give up or provide some new \ncode :)). Of course, I will need to review all comments up to date and educate \nmyself on basic Knuth architecture.\n\nAndrejus"}, {"count": 42, "tags": [], "text": "(In reply to comment #40)\n> (From update of attachment 18817 [edit])\n> Could we change <info> text to say that we are checking \"auto\" layout here?\n> \n\nSure, it's just a copy/paste mistake.", "attachment_id": null, "id": 94303, "creator": "jeremias@apache.org", "time": "2006-09-30T02:54:45Z", "bug_id": 40271, "creation_time": "2006-09-30T02:54:45Z", "is_private": false}, {"count": 43, "tags": [], "creator": "a.chaliapinas@infosana.com", "attachment_id": 18940, "id": 94306, "creation_time": "2006-09-30T03:41:45Z", "time": "2006-09-30T03:41:45Z", "bug_id": 40271, "text": "Created attachment 18940\nTest case for table-layout=auto.\n\nCorrected typo in <info> section that we are checking table-layout=\"auto\"", "is_private": false}, {"count": 44, "tags": [], "creator": "a.chaliapinas@infosana.com", "attachment_id": 18941, "id": 94307, "creation_time": "2006-09-30T05:47:22Z", "time": "2006-09-30T05:47:22Z", "bug_id": 40271, "text": "Created attachment 18941\nRemoves the warning that table-layout=\"auto\" is not supported by FOP", "is_private": false}, {"count": 45, "tags": [], "bug_id": 40271, "text": "Created attachment 18942\nCurrently produced PDF from corresponding testcase Area Tree", "id": 94308, "time": "2006-09-30T05:55:46Z", "creator": "a.chaliapinas@infosana.com", "creation_time": "2006-09-30T05:55:46Z", "is_private": false, "attachment_id": 18942}, {"count": 46, "tags": [], "bug_id": 40271, "text": "Created attachment 19152\nInitial UML diagram prepared with free EclipseUML plugin\n\nThis is my initial try to visually collect some classes related to Table auto\nlayout feature implementation.\n\nNot sure guys if you could see it properly inside for example Internet\nExplorer. But it's (SVG) the only allowed format for save in free version of\nEclipseUML plugin. No gifs/jpegs are allowed. Maybe I should switch instead to\nlow cost MyEclipse for such diagramming...", "id": 96027, "time": "2006-11-21T03:36:51Z", "creator": "a.chaliapinas@infosana.com", "creation_time": "2006-11-21T03:36:51Z", "is_private": false, "attachment_id": 19152}, {"count": 47, "tags": [], "creator": "adelmelle@apache.org", "attachment_id": null, "id": 96041, "creation_time": "2006-11-21T10:15:26Z", "time": "2006-11-21T10:15:26Z", "bug_id": 40271, "text": "Don't think SVG is a problem... If you insist on JPEG or GIF, there's always Batik to transcode it :)", "is_private": false}, {"count": 48, "tags": [], "bug_id": 40271, "text": "(In reply to comment #47)\n> Don't think SVG is a problem... If you insist on JPEG or GIF, there's always \nBatik to transcode it :)\n\nI'm just trying to find kind of common denominator for that diagramming when \nothers could also easy review/comment. So far I was not able to view generated \nSVG correctly inside my IE6 or Firefox 2.0. If you use any other open \nsource/free viewer for that and could see everything correctly - please advice.", "id": 96072, "time": "2006-11-22T06:23:25Z", "creator": "a.chaliapinas@infosana.com", "creation_time": "2006-11-22T06:23:25Z", "is_private": false, "attachment_id": null}, {"count": 49, "tags": [], "bug_id": 40271, "attachment_id": null, "is_private": false, "id": 127827, "time": "2009-06-10T13:23:56Z", "creator": "markt@apache.org", "creation_time": "2009-06-10T13:23:56Z", "text": "Reset assignee so mails go to list."}, {"count": 50, "tags": [], "text": "resetting P2 open bugs to P3 pending further review", "is_private": false, "id": 157501, "creator": "gadams@apache.org", "time": "2012-04-07T01:43:57Z", "bug_id": 40271, "creation_time": "2012-04-07T01:43:57Z", "attachment_id": null}, {"count": 51, "tags": [], "creator": "gadams@apache.org", "attachment_id": null, "id": 157861, "creation_time": "2012-04-11T03:21:20Z", "time": "2012-04-11T03:21:20Z", "bug_id": 40271, "text": "increase priority for bugs with a patch", "is_private": false}]