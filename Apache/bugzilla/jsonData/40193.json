[{"count": 0, "tags": [], "bug_id": 40193, "attachment_id": null, "text": "Hi,\nAttached patches make apr-1.2.7 build out of the box using the updated gcc 3.3.5\ncompiler and libc runtime (http://svn.netlabs.org/libc) on OS/2.\n\nCurrent OS/2 support is based on the EMX compiler which hasn't been updated in a\nnumber of years.\n\nI don't see how to attach the patch so here it is:\ndiff -ur apr-1.2.7/build/aplibtool.c apr-1.2.7-os2/build/aplibtool.c\n--- apr-1.2.7/build/aplibtool.c\tFri Feb  4 13:44:02 2005\n+++ apr-1.2.7-os2/build/aplibtool.c\tWed Mar 22 19:37:34 2006\n@@ -36,7 +36,7 @@\n #  define CC         \"gcc\"\n #  define GEN_EXPORTS \"emxexp\"\n #  define DEF2IMPLIB_CMD \"emximp\"\n-#  define SHARE_SW   \"-Zdll -Zmtd\"\n+#  define SHARE_SW   \"-Zdll -Zmap -Zmtd\"\n #  define USE_OMF true\n #  define TRUNCATE_DLL_NAME\n #  define DYNAMIC_LIB_EXT \"dll\"\n@@ -45,7 +45,7 @@\n #  if USE_OMF\n      /* OMF is the native format under OS/2 */\n #    define STATIC_LIB_EXT \"lib\"\n-#    define OBJECT_EXT     \"obj\"\n+#    define OBJECT_EXT     \"o\"\n #    define LIBRARIAN      \"emxomfar\"\n #  else\n      /* but the alternative, a.out, can fork() which is sometimes necessary */\nOnly in apr-1.2.7-os2/build: aplibtool.exe\nOnly in apr-1.2.7-os2/build: apr_rules.mk\nOnly in apr-1.2.7-os2/build: apr_rules.out\nOnly in apr-1.2.7-os2/build/pkg: pkginfo\nOnly in apr-1.2.7-os2: build.log\nOnly in apr-1.2.7-os2: conf.cmd\nOnly in apr-1.2.7-os2: config.log\nOnly in apr-1.2.7-os2: config.nice\nOnly in apr-1.2.7-os2: config.status\nOnly in apr-1.2.7-os2: configure.help\nOnly in apr-1.2.7-os2: configure.lineno\nOnly in apr-1.2.7-os2: configure.log\ndiff -ur apr-1.2.7/dso/os2/dso.c apr-1.2.7-os2/dso/os2/dso.c\n--- apr-1.2.7/dso/os2/dso.c\tFri Feb  4 13:44:02 2005\n+++ apr-1.2.7-os2/dso/os2/dso.c\tSat Aug  5 22:02:40 2006\n@@ -41,22 +41,33 @@\n \n APR_DECLARE(apr_status_t) apr_dso_load(apr_dso_handle_t **res_handle, const\nchar *path, apr_pool_t *ctx)\n {\n+\n     char failed_module[200];\n     HMODULE handle;\n     int rc;\n-\n     *res_handle = apr_pcalloc(ctx, sizeof(**res_handle));\n     (*res_handle)->cont = ctx;\n     (*res_handle)->load_error = APR_SUCCESS;\n     (*res_handle)->failed_module = NULL;\n \n-    if ((rc = DosLoadModule(failed_module, sizeof(failed_module), path,\n&handle)) != 0) {\n+    rc = DosLoadModule(failed_module, sizeof(failed_module), path, &handle);\n+\n+   if ((rc != 0)&&(rc!=87)) {\n         (*res_handle)->load_error = APR_FROM_OS_ERROR(rc);\n         (*res_handle)->failed_module = apr_pstrdup(ctx, failed_module);\n         return APR_FROM_OS_ERROR(rc);\n     }\n \n-    (*res_handle)->handle  = handle;\n+\n+   if (rc==87){\n+        int rc2;\n+        HMODULE handle2;\n+        rc2=DosQueryModuleHandle(path,&handle2);\n+        (*res_handle)->handle  = handle2;\n+        }\n+   if (rc==0) {\n+    (*res_handle)->handle  = handle;}\n     apr_pool_cleanup_register(ctx, *res_handle, dso_cleanup,\napr_pool_cleanup_null);\n     return APR_SUCCESS;\n }\n@@ -76,11 +87,20 @@\n {\n     PFN func;\n     int rc;\n-\n     if (symname == NULL || ressym == NULL)\n         return APR_ESYMNOTFOUND;\n \n-    if ((rc = DosQueryProcAddr(handle->handle, 0, symname, &func)) != 0) {\n+\n+#if defined(__INNOTEK_LIBC__)\n+    void *retval;\n+    char *symbol = (char*)malloc(sizeof(char)*(strlen(symname)+2));\n+    sprintf(symbol, \"_%s\", symname);\n+    rc = DosQueryProcAddr(handle->handle, 0, symbol, &func);\n+    free(symbol);\n+#else\n+    rc = DosQueryProcAddr(handle->handle, 0, symname, &func);\n+#endif\n+    if (rc != 0) {\n         handle->load_error = APR_FROM_OS_ERROR(rc);\n         return handle->load_error;\n     }\nOnly in apr-1.2.7-os2/dso/os2: dso.lo\nOnly in apr-1.2.7-os2/dso/os2: dso.o\nOnly in apr-1.2.7-os2: export_vars.c\nOnly in apr-1.2.7-os2: exports.c\nOnly in apr-1.2.7-os2/file_io/os2: copy.lo\nOnly in apr-1.2.7-os2/file_io/os2: copy.o\nOnly in apr-1.2.7-os2/file_io/os2: dir.lo\nOnly in apr-1.2.7-os2/file_io/os2: dir.o\nOnly in apr-1.2.7-os2/file_io/os2: dir_make_recurse.lo\nOnly in apr-1.2.7-os2/file_io/os2: dir_make_recurse.o\nOnly in apr-1.2.7-os2/file_io/os2: fileacc.lo\nOnly in apr-1.2.7-os2/file_io/os2: fileacc.o\nOnly in apr-1.2.7-os2/file_io/os2: filedup.lo\nOnly in apr-1.2.7-os2/file_io/os2: filedup.o\nOnly in apr-1.2.7-os2/file_io/os2: filepath.lo\nOnly in apr-1.2.7-os2/file_io/os2: filepath.o\nOnly in apr-1.2.7-os2/file_io/os2: filepath_util.lo\nOnly in apr-1.2.7-os2/file_io/os2: filepath_util.o\ndiff -ur apr-1.2.7/file_io/os2/filestat.c apr-1.2.7-os2/file_io/os2/filestat.c\n--- apr-1.2.7/file_io/os2/filestat.c\tSat Jul 16 02:07:42 2005\n+++ apr-1.2.7-os2/file_io/os2/filestat.c\tMon Apr 24 08:44:26 2006\n@@ -171,7 +171,8 @@\n         return APR_FROM_OS_ERROR(rc);\n     }\n \n-    return (wanted & ~finfo->valid) ? APR_INCOMPLETE : APR_SUCCESS;\n+#ifndef __INNOTEK_LIBC__\n+    return (wanted & ~finfo->valid) ? APR_INCOMPLETE : APR_SUCCESS;\n+#else\n+    return APR_SUCCESS;\n+#endif }\n \n \nOnly in apr-1.2.7-os2/file_io/os2: filestat.lo\nOnly in apr-1.2.7-os2/file_io/os2: filestat.o\nOnly in apr-1.2.7-os2/file_io/os2: filesys.lo\nOnly in apr-1.2.7-os2/file_io/os2: filesys.o\nOnly in apr-1.2.7-os2/file_io/os2: flock.lo\nOnly in apr-1.2.7-os2/file_io/os2: flock.o\nOnly in apr-1.2.7-os2/file_io/os2: fullrw.lo\nOnly in apr-1.2.7-os2/file_io/os2: fullrw.o\nOnly in apr-1.2.7-os2/file_io/os2: maperrorcode.lo\nOnly in apr-1.2.7-os2/file_io/os2: maperrorcode.o\nOnly in apr-1.2.7-os2/file_io/os2: mktemp.lo\nOnly in apr-1.2.7-os2/file_io/os2: mktemp.o\ndiff -ur apr-1.2.7/file_io/os2/open.c apr-1.2.7-os2/file_io/os2/open.c\n--- apr-1.2.7/file_io/os2/open.c\tWed Jun 29 05:34:38 2005\n+++ apr-1.2.7-os2/file_io/os2/open.c\tSat Jul 22 19:40:44 2006\n@@ -28,7 +28,13 @@\n     return apr_file_close(file);\n }\n \n-\n+#ifdef __INNOTEK_LIBC__\n+apr_status_t apr_unix_file_cleanup(void *thefile)\n+{\n+    apr_file_t *file = thefile;\n+    return apr_file_close(file);\n+}\n+#endif\n \n APR_DECLARE(apr_status_t) apr_file_open(apr_file_t **new, const char *fname,\napr_int32_t flag,  apr_fileperms_t perm, apr_pool_t *pool)\n {\nOnly in apr-1.2.7-os2/file_io/os2: open.lo\nOnly in apr-1.2.7-os2/file_io/os2: open.o\nOnly in apr-1.2.7-os2/file_io/os2: pipe.lo\nOnly in apr-1.2.7-os2/file_io/os2: pipe.o\ndiff -ur apr-1.2.7/file_io/os2/readwrite.c apr-1.2.7-os2/file_io/os2/readwrite.c\n--- apr-1.2.7/file_io/os2/readwrite.c\tThu Feb 23 05:14:36 2006\n+++ apr-1.2.7-os2/file_io/os2/readwrite.c\tSat May 20 21:10:26 2006\n@@ -171,13 +171,13 @@\n                 rc = DosSetFilePtr(thefile->filedes, 0, FILE_END, &newpos);\n \n                 if (rc == 0) {\n-                    rc = DosWrite(thefile->filedes, buf, *nbytes, &byteswritten);\n+                    rc = DosWrite(thefile->filedes, (PVOID)buf, *nbytes,\n&byteswritten);\n                 }\n \n                 DosSetFileLocks(thefile->filedes, &all, NULL, -1, 0);\n             }\n         } else {\n-            rc = DosWrite(thefile->filedes, buf, *nbytes, &byteswritten);\n+            rc = DosWrite(thefile->filedes, (PVOID)buf, *nbytes, &byteswritten);\n         }\n \n         if (rc) {\n@@ -330,7 +330,58 @@\n     return rv;\n }\n \n+/* Pull from unix code to start a sync up */\n+#if (defined(__INNOTEK_LIBC__) || defined(__WATCOMC__) )\n \n+struct apr_file_printf_data {\n+    apr_vformatter_buff_t vbuff;\n+    apr_file_t *fptr;\n+    char *buf;\n+};\n+\n+static int file_printf_flush(apr_vformatter_buff_t *buff)\n+{\n+    struct apr_file_printf_data *data = (struct apr_file_printf_data *)buff;\n+\n+    if (apr_file_write_full(data->fptr, data->buf,\n+                            data->vbuff.curpos - data->buf, NULL)) {\n+        return -1;\n+    }\n+\n+    data->vbuff.curpos = data->buf;\n+    return 0;\n+}\n+\n+\n+APR_DECLARE_NONSTD(int) apr_file_printf(apr_file_t *fptr,\n+                                        const char *format, ...)\n+{\n+    struct apr_file_printf_data data;\n+    va_list ap;\n+    int count;\n+\n+    /* don't really need a HUGE_STRING_LEN anymore */\n+    data.buf = malloc(HUGE_STRING_LEN);\n+    if (data.buf == NULL) {\n+        return -1;\n+    }\n+    data.vbuff.curpos = data.buf;\n+    data.vbuff.endpos = data.buf + HUGE_STRING_LEN;\n+    data.fptr = fptr;\n+    va_start(ap, format);\n+    count = apr_vformatter(file_printf_flush,\n+                           (apr_vformatter_buff_t *)&data, format, ap);\n+    /* apr_vformatter does not call flush for the last bits */\n+    if (count >= 0) file_printf_flush((apr_vformatter_buff_t *)&data);\n+\n+    va_end(ap);\n+\n+    free(data.buf);\n+\n+    return count;\n+}\n+\n+#else\n \n APR_DECLARE_NONSTD(int) apr_file_printf(apr_file_t *fptr, \n                                         const char *format, ...)\n@@ -352,7 +403,7 @@\n     return (cc == APR_SUCCESS) ? len : -1;\n }\n \n-\n+#endif\n \n apr_status_t apr_file_check_read(apr_file_t *fd)\n {\n@@ -368,3 +419,4 @@\n \n     return APR_FROM_OS_ERROR(rc);\n }\n+\nOnly in apr-1.2.7-os2/file_io/os2: readwrite.lo\nOnly in apr-1.2.7-os2/file_io/os2: readwrite.o\nOnly in apr-1.2.7-os2/file_io/os2: seek.lo\nOnly in apr-1.2.7-os2/file_io/os2: seek.o\nOnly in apr-1.2.7-os2/file_io/os2: tempdir.lo\nOnly in apr-1.2.7-os2/file_io/os2: tempdir.o\ndiff -ur apr-1.2.7/file_io/unix/mktemp.c apr-1.2.7-os2/file_io/unix/mktemp.c\n--- apr-1.2.7/file_io/unix/mktemp.c\tFri Feb  4 13:44:02 2005\n+++ apr-1.2.7-os2/file_io/unix/mktemp.c\tSat Jul 22 19:34:50 2006\n@@ -80,7 +80,9 @@\n #include <fcntl.h>\n #endif\n #include <stdio.h>\n+#ifndef __INNOTEK_LIBC__\n #include <stdlib.h>\n+#endif\n #include <string.h>\n #include <ctype.h>\n #ifdef HAVE_TIME_H\n@@ -188,6 +190,11 @@\n #else\n     fd = mkstemp(template);\n #endif\n+\n+#ifdef __INNOTEK_LIBC__\n+          setmode(fd, O_BINARY);\n+#endif \n+\n     \n     if (fd == -1) {\n         return errno;\nOnly in apr-1.2.7-os2/include: apr.h\nOnly in apr-1.2.7-os2/include: apr.patch\ndiff -ur apr-1.2.7/include/apr_network_io.h apr-1.2.7-os2/include/apr_network_io.h\n--- apr-1.2.7/include/apr_network_io.h\tSun Jun 12 11:54:50 2005\n+++ apr-1.2.7-os2/include/apr_network_io.h\tMon Apr 24 08:46:34 2006\n@@ -752,7 +752,7 @@\n  * Unset a socket from being inherited by child processes.\n  */\n APR_DECLARE_INHERIT_UNSET(socket);\n-\n+#ifndef __INNOTEK_LIBC__\n /**\n  * @defgroup apr_mcast IP Multicast\n  * @{\n@@ -814,6 +814,7 @@\n APR_DECLARE(apr_status_t) apr_mcast_interface(apr_socket_t *sock,\n                                               apr_sockaddr_t *iface);\n \n+#endif\n /** @} */\n \n /** @} */\nOnly in apr-1.2.7-os2/include: apremx.h\ndiff -ur apr-1.2.7/include/arch/os2/apr_arch_file_io.h\napr-1.2.7-os2/include/arch/os2/apr_arch_file_io.h\n--- apr-1.2.7/include/arch/os2/apr_arch_file_io.h\tSat Jul 16 02:07:42 2005\n+++ apr-1.2.7-os2/include/arch/os2/apr_arch_file_io.h\tSat Jul 22 19:39:30 2006\n@@ -29,7 +29,9 @@\n  * friendly & is part of the POSIX emulation rather than native so don't\n  * use it.\n  */\n+#ifndef __INNOTEK_LIBC__\n #undef HAVE_MKSTEMP\n+#endif\n \n #define APR_FILE_BUFSIZE 4096\n \n@@ -45,7 +47,10 @@\n     int pipe;\n     HEV pipeSem;\n     enum { BLK_UNKNOWN, BLK_OFF, BLK_ON } blocking;\n-\n+#ifndef WAITIO_USES_POLL\n+    /* if there is a timeout set, then this pollset is used */\n+    apr_pollset_t *pollset;\n+#endif\n     /* Stuff for buffered mode */\n     char *buffer;\n     int bufpos;               // Read/Write position in buffer\n@@ -62,6 +67,11 @@\n     FILEFINDBUF3 entry;\n     int validentry;\n };\n+\n+#ifdef __INNOTEK_LIBC__\n+apr_status_t apr_unix_file_cleanup(void *);\n+#endif\n+\n \n apr_status_t apr_file_cleanup(void *);\n apr_status_t apr_os2_time_to_apr_time(apr_time_t *result, FDATE os2date, \nOnly in apr-1.2.7-os2/include/arch/unix: apr_private.h\nOnly in apr-1.2.7-os2/include: t\nOnly in apr-1.2.7-os2: libapr-1.la\ndiff -ur apr-1.2.7/locks/os2/proc_mutex.c apr-1.2.7-os2/locks/os2/proc_mutex.c\n--- apr-1.2.7/locks/os2/proc_mutex.c\tFri Feb  4 13:44:02 2005\n+++ apr-1.2.7-os2/locks/os2/proc_mutex.c\tMon Apr 24 08:48:38 2006\n@@ -115,6 +115,13 @@\n     new->owner      = 0;\n     new->lock_count = 0;\n \n+#ifdef __INNOTEK_LIBC__\n+    if (!fname) {\n+        /* Reinitializing unnamed mutexes is a noop in the Unix code. */\n+        return APR_SUCCESS;\n+    }\n+#endif\n+\n     semname = fixed_name(fname, pool);\n     rc = DosOpenMutexSem(semname, &(new->hMutex));\n     *mutex = new;\nOnly in apr-1.2.7-os2/locks/os2: proc_mutex.lo\nOnly in apr-1.2.7-os2/locks/os2: proc_mutex.o\nOnly in apr-1.2.7-os2/locks/os2: thread_cond.lo\nOnly in apr-1.2.7-os2/locks/os2: thread_cond.o\nOnly in apr-1.2.7-os2/locks/os2: thread_mutex.lo\nOnly in apr-1.2.7-os2/locks/os2: thread_mutex.o\nOnly in apr-1.2.7-os2/locks/os2: thread_rwlock.lo\nOnly in apr-1.2.7-os2/locks/os2: thread_rwlock.o\nOnly in apr-1.2.7-os2: Makefile\nOnly in apr-1.2.7-os2/memory/unix: apr_pools.lo\nOnly in apr-1.2.7-os2/memory/unix: apr_pools.o\nOnly in apr-1.2.7-os2/misc/unix: charset.lo\nOnly in apr-1.2.7-os2/misc/unix: charset.o\nOnly in apr-1.2.7-os2/misc/unix: env.lo\nOnly in apr-1.2.7-os2/misc/unix: env.o\nOnly in apr-1.2.7-os2/misc/unix: errorcodes.lo\nOnly in apr-1.2.7-os2/misc/unix: errorcodes.o\nOnly in apr-1.2.7-os2/misc/unix: getopt.lo\nOnly in apr-1.2.7-os2/misc/unix: getopt.o\nOnly in apr-1.2.7-os2/misc/unix: otherchild.lo\nOnly in apr-1.2.7-os2/misc/unix: otherchild.o\nOnly in apr-1.2.7-os2/misc/unix: rand.lo\nOnly in apr-1.2.7-os2/misc/unix: rand.o\ndiff -ur apr-1.2.7/misc/unix/randbyte_os2.inc\napr-1.2.7-os2/misc/unix/randbyte_os2.inc\n--- apr-1.2.7/misc/unix/randbyte_os2.inc\tTue Jun 14 08:11:30 2005\n+++ apr-1.2.7-os2/misc/unix/randbyte_os2.inc\tMon Apr  3 20:20:56 2006\n@@ -62,8 +62,10 @@\n  * which is why it's run-time linked.\n  */\n \n+#ifndef __INNOTEK_LIBC__\n static APIRET APIENTRY(*DosPerfSysCall) (ULONG ulCommand, ULONG ulParm1,\n                                          ULONG ulParm2, ULONG ulParm3) = NULL;\n+#endif\n static HMODULE hDoscalls = 0;\n #define   CMD_KI_RDCNT    (0x63)\n \n@@ -85,6 +87,7 @@\n     CPUUTIL util;\n     int c;\n \n+#ifndef __INNOTEK_LIBC__\n     if (hDoscalls == 0) {\n         char failed_module[20];\n         ULONG rc;\n@@ -111,7 +114,7 @@\n             DosPerfSysCall = NULL;\n         }\n     }\n-\n+#endif\n     return byte;\n }\n \nOnly in apr-1.2.7-os2/misc/unix: start.lo\nOnly in apr-1.2.7-os2/misc/unix: start.o\nOnly in apr-1.2.7-os2/misc/unix: version.lo\nOnly in apr-1.2.7-os2/misc/unix: version.o\nOnly in apr-1.2.7-os2/mmap/unix: common.lo\nOnly in apr-1.2.7-os2/mmap/unix: common.o\nOnly in apr-1.2.7-os2/mmap/unix: mmap.lo\nOnly in apr-1.2.7-os2/mmap/unix: mmap.o\nOnly in apr-1.2.7-os2/network_io/os2: inet_ntop.lo\nOnly in apr-1.2.7-os2/network_io/os2: inet_ntop.o\nOnly in apr-1.2.7-os2/network_io/os2: inet_pton.lo\nOnly in apr-1.2.7-os2/network_io/os2: inet_pton.o\nOnly in apr-1.2.7-os2/network_io/os2: os2calls.lo\nOnly in apr-1.2.7-os2/network_io/os2: os2calls.o\ndiff -ur apr-1.2.7/network_io/os2/sendrecv.c apr-1.2.7-os2/network_io/os2/sendrecv.c\n--- apr-1.2.7/network_io/os2/sendrecv.c\tWed Jan  4 20:09:00 2006\n+++ apr-1.2.7-os2/network_io/os2/sendrecv.c\tSat Aug  5 22:21:54 2006\n@@ -27,9 +27,11 @@\n     apr_ssize_t rv;\n     int fds, err = 0;\n \n+#ifndef __INNOTEK_LIBC__\n     if (*len > 65536) {\n         *len = 65536;\n     }\n+#endif \n \n     do {\n         if (!sock->nonblock || err == SOCEWOULDBLOCK) {\n@@ -114,11 +116,17 @@\n     int fds, err = 0;\n     int nv_tosend, total = 0;\n \n+#ifndef __INNOTEK_LIBC__\n     /* Make sure writev() only gets fed 64k at a time */\n     for ( nv_tosend = 0; nv_tosend < nvec && total + vec[nv_tosend].iov_len <\n65536; nv_tosend++ ) {\n         total += vec[nv_tosend].iov_len;\n     }\n-\n+#else\n+    /* workaround for writev() not required with libc */\n+    for ( nv_tosend = 0; nv_tosend < nvec; nv_tosend++ ) {\n+        total += vec[nv_tosend].iov_len;\n+    }\n+#endif\n     tmpvec = alloca(sizeof(struct iovec) * nv_tosend);\n     memcpy(tmpvec, vec, sizeof(struct iovec) * nv_tosend);\n \nOnly in apr-1.2.7-os2/network_io/os2: sendrecv.lo\nOnly in apr-1.2.7-os2/network_io/os2: sendrecv.o\nOnly in apr-1.2.7-os2/network_io/os2: sendrecv_udp.lo\nOnly in apr-1.2.7-os2/network_io/os2: sendrecv_udp.o\nOnly in apr-1.2.7-os2/network_io/os2: sockaddr.lo\nOnly in apr-1.2.7-os2/network_io/os2: sockaddr.o\nOnly in apr-1.2.7-os2/network_io/os2: sockets.lo\nOnly in apr-1.2.7-os2/network_io/os2: sockets.o\ndiff -ur apr-1.2.7/network_io/os2/sockopt.c apr-1.2.7-os2/network_io/os2/sockopt.c\n--- apr-1.2.7/network_io/os2/sockopt.c\tFri Feb  4 13:44:02 2005\n+++ apr-1.2.7-os2/network_io/os2/sockopt.c\tMon Apr 24 09:07:20 2006\n@@ -24,7 +24,9 @@\n #include <sys/socket.h>\n #include <netinet/tcp.h>\n #include <netinet/in.h>\n+#ifndef __INNOTEK_LIBC__\n #include <unistd.h>\n+#endif\n #include <netdb.h>\n #include <sys/so_ioctl.h>\n \nOnly in apr-1.2.7-os2/network_io/os2: sockopt.lo\nOnly in apr-1.2.7-os2/network_io/os2: sockopt.o\nOnly in apr-1.2.7-os2/passwd: apr_getpass.lo\nOnly in apr-1.2.7-os2/passwd: apr_getpass.o\nOnly in apr-1.2.7-os2/poll/os2: poll.lo\nOnly in apr-1.2.7-os2/poll/os2: poll.o\nOnly in apr-1.2.7-os2/poll/os2: pollset.lo\nOnly in apr-1.2.7-os2/poll/os2: pollset.o\nOnly in apr-1.2.7-os2/random/unix: apr_random.lo\nOnly in apr-1.2.7-os2/random/unix: apr_random.o\nOnly in apr-1.2.7-os2/random/unix: sha2.lo\nOnly in apr-1.2.7-os2/random/unix: sha2.o\nOnly in apr-1.2.7-os2/random/unix: sha2_glue.lo\nOnly in apr-1.2.7-os2/random/unix: sha2_glue.o\nOnly in apr-1.2.7-os2: retvalue.tmp\nOnly in apr-1.2.7-os2/shmem/os2: shm.lo\nOnly in apr-1.2.7-os2/shmem/os2: shm.o\nOnly in apr-1.2.7-os2/strings: apr_cpystrn.lo\nOnly in apr-1.2.7-os2/strings: apr_cpystrn.o\nOnly in apr-1.2.7-os2/strings: apr_fnmatch.lo\nOnly in apr-1.2.7-os2/strings: apr_fnmatch.o\nOnly in apr-1.2.7-os2/strings: apr_snprintf.lo\nOnly in apr-1.2.7-os2/strings: apr_snprintf.o\nOnly in apr-1.2.7-os2/strings: apr_strings.lo\nOnly in apr-1.2.7-os2/strings: apr_strings.o\nOnly in apr-1.2.7-os2/strings: apr_strnatcmp.lo\nOnly in apr-1.2.7-os2/strings: apr_strnatcmp.o\nOnly in apr-1.2.7-os2/strings: apr_strtok.lo\nOnly in apr-1.2.7-os2/strings: apr_strtok.o\nOnly in apr-1.2.7-os2/support/unix: waitio.lo\nOnly in apr-1.2.7-os2/support/unix: waitio.o\nOnly in apr-1.2.7-os2/tables: apr_hash.lo\nOnly in apr-1.2.7-os2/tables: apr_hash.o\nOnly in apr-1.2.7-os2/tables: apr_tables.lo\nOnly in apr-1.2.7-os2/tables: apr_tables.o\nOnly in apr-1.2.7-os2/test/internal: Makefile\nOnly in apr-1.2.7-os2/test: Makefile\nOnly in apr-1.2.7-os2/test: mod_test.bak\nOnly in apr-1.2.7-os2/test: testlockperf.map\nOnly in apr-1.2.7-os2/test: testmutexscope.map\nOnly in apr-1.2.7-os2/test: testshmconsumer.map\nOnly in apr-1.2.7-os2/test: testshmproducer.map\nOnly in apr-1.2.7-os2: test.log\nOnly in apr-1.2.7-os2/threadproc/os2: proc.lo\nOnly in apr-1.2.7-os2/threadproc/os2: proc.o\nOnly in apr-1.2.7-os2/threadproc/os2: signals.lo\nOnly in apr-1.2.7-os2/threadproc/os2: signals.o\nOnly in apr-1.2.7-os2/threadproc/os2: thread.lo\nOnly in apr-1.2.7-os2/threadproc/os2: thread.o\nOnly in apr-1.2.7-os2/threadproc/os2: threadpriv.lo\nOnly in apr-1.2.7-os2/threadproc/os2: threadpriv.o\ndiff -ur apr-1.2.7/threadproc/unix/signals.c apr-1.2.7-os2/threadproc/unix/signals.c\n--- apr-1.2.7/threadproc/unix/signals.c\tFri Feb  4 13:44:02 2005\n+++ apr-1.2.7-os2/threadproc/unix/signals.c\tFri May  5 20:00:20 2006\n@@ -44,7 +44,6 @@\n                                                      XCPT_SIGNAL_BREAK));\n     }\n #endif /* OS2 */\n-\n     if (kill(proc->pid, signum) == -1) {\n         return errno;\n     }\n@@ -416,7 +415,7 @@\n     sigfillset(&sig_mask);\n     remove_sync_sigs(&sig_mask);\n \n-#if defined(SIGPROCMASK_SETS_THREAD_MASK) || ! APR_HAS_THREADS\n+#if defined(SIGPROCMASK_SETS_THREAD_MASK) || ! APR_HAS_THREADS || defined(OS2)\n     if ((rv = sigprocmask(SIG_SETMASK, &sig_mask, NULL)) != 0) {\n         rv = errno;\n     }\n@@ -442,7 +441,7 @@\n \n     sigaddset(&sig_mask, signum);\n \n-#if defined(SIGPROCMASK_SETS_THREAD_MASK) || ! APR_HAS_THREADS\n+#if defined(SIGPROCMASK_SETS_THREAD_MASK) || ! APR_HAS_THREADS || defined(OS2)\n     if ((rv = sigprocmask(SIG_BLOCK, &sig_mask, NULL)) != 0) {\n         rv = errno;\n     }\n@@ -469,7 +468,7 @@\n \n     sigaddset(&sig_mask, signum);\n \n-#if defined(SIGPROCMASK_SETS_THREAD_MASK) || ! APR_HAS_THREADS\n+#if defined(SIGPROCMASK_SETS_THREAD_MASK) || ! APR_HAS_THREADS || defined(OS2)\n     if ((rv = sigprocmask(SIG_UNBLOCK, &sig_mask, NULL)) != 0) {\n         rv = errno;\n     }\nOnly in apr-1.2.7-os2/time/unix: time.lo\nOnly in apr-1.2.7-os2/time/unix: time.o\nOnly in apr-1.2.7-os2/time/unix: timestr.lo\nOnly in apr-1.2.7-os2/time/unix: timestr.o\nOnly in apr-1.2.7-os2/user/unix: groupinfo.lo\nOnly in apr-1.2.7-os2/user/unix: groupinfo.o\ndiff -ur apr-1.2.7/user/unix/userinfo.c apr-1.2.7-os2/user/unix/userinfo.c\n--- apr-1.2.7/user/unix/userinfo.c\tWed Aug 24 03:42:20 2005\n+++ apr-1.2.7-os2/user/unix/userinfo.c\tMon Apr 24 08:51:10 2006\n@@ -77,7 +77,7 @@\n     if ((rv = getpwnam_safe(username, &pw, pwbuf)) != APR_SUCCESS)\n         return rv;\n \n-#ifdef OS2\n+#if (defined(OS2)&&!defined(__INNOTEK_LIBC__))\n     /* Need to manually add user name for OS/2 */\n     *dirname = apr_pstrcat(p, pw.pw_dir, pw.pw_name, NULL);\n #else\nOnly in apr-1.2.7-os2/user/unix: userinfo.lo\nOnly in apr-1.2.7-os2/user/unix: userinfo.o", "id": 91921, "time": "2006-08-06T00:03:12Z", "creator": "paul@smedley.info", "creation_time": "2006-08-06T00:03:12Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 40193, "attachment_id": 18681, "text": "Created attachment 18681\nPatch to add support for Innotek libc on OS/2\n\nOK I found where to add an attachment :)", "id": 91922, "time": "2006-08-06T00:03:53Z", "creator": "paul@smedley.info", "creation_time": "2006-08-06T00:03:53Z", "is_private": false}, {"count": 2, "tags": [], "creator": "paul@smedley.info", "text": "Created attachment 18682\nRevised patch", "id": 91925, "time": "2006-08-06T10:08:24Z", "bug_id": 40193, "creation_time": "2006-08-06T10:08:24Z", "is_private": false, "attachment_id": 18682}, {"count": 3, "attachment_id": 18683, "creator": "paul@smedley.info", "text": "Created attachment 18683\nRevised, revised patch attached", "id": 91926, "time": "2006-08-06T10:18:54Z", "bug_id": 40193, "creation_time": "2006-08-06T10:18:54Z", "tags": [], "is_private": false}, {"count": 4, "tags": [], "bug_id": 40193, "attachment_id": null, "is_private": false, "id": 92000, "time": "2006-08-07T13:34:29Z", "creator": "rooneg@electricjellyfish.net", "creation_time": "2006-08-07T13:34:29Z", "text": "A few small thoughts.\n\nFirst, I don't think we can commit those jlibtool changes unless we're actually\ngoing to remove support for the other compiler.  Do we want to do that?  If not,\nthen it should be conditional for this particular compiler I guess.\n\nSecond, these patches cover a lot of ground, much of which is unrelated.  Any\nchance of breaking them up into smaller self contained chunks?"}]