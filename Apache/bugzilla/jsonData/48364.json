[{"count": 0, "tags": [], "bug_id": 48364, "attachment_id": null, "is_private": false, "id": 132710, "time": "2009-12-10T03:02:42Z", "creator": "strube@physik3.gwdg.de", "creation_time": "2009-12-10T03:02:42Z", "text": "Whereas Apache 2.2.x mod_cache (with mod_disk_cache) works with both static files and CGI scripts (including such with #!/path/to/php-cgi), I have never been able to cache output of PHP (5.2.x) scripts handled by the handler+action method. Of course, I added pertinent header entries (Last-Modified, Expires, Cache-Control) by the PHP function header(), which were correct as shown by network sniffing and caused the browser cache to behave as expected. But no cache files appeared in the CacheRoot directory. Also directives CacheIgnoreCacheControl On, CacheIgnoreNoLastMod On, CacheStoreNoStore On have been tried, with no effect.\nI did not use mod_php but one CGI and two FastCGI methods (alternatively) in the following ways (schematic):\n# Common\n <FilesMatch \"\\.php$\">\n  SetHandler dophp\n </FilesMatch>\n Action dophp /phpact\n CacheRoot /somedir\n CacheEnable disk /\n# For CGI:\n ScriptAlias /phpact /path/to/php-cgi\n# For FastCGI with mod_fastcgi:\n ScriptAlias /phpact /path/to/php-fcgi\n FastCgiIpcDir /otherdir\n FastCgiServer /path/to/php-fcgi further_arguments\n# For FastCGI with mod_proxy_fcgi (php-fcgi started separately with -b 54321):\n ProxyRequests Off\n ProxyPassMatch ^/phpact/(.+)$ fcgi://localhost:54321/$1\n\nNote that PHP as such works perfectly in all three configurations (with cgi.fix_pathinfo=1 and cgi.force_redirect=1).\nI searched the bug database and the documentation but could not find any hint."}, {"count": 1, "tags": [], "creator": "rpluem@apache.org", "text": "Please set the loglevl to debug, request one of your php pages and provide the log file.", "id": 132712, "time": "2009-12-10T03:54:17Z", "bug_id": 48364, "creation_time": "2009-12-10T03:54:17Z", "is_private": false, "attachment_id": null}, {"count": 2, "attachment_id": null, "bug_id": 48364, "text": "For CGI as well as for FastCGI with mod_fastcgi (have not tried mod_proxy_fcgi now), the only debug log entries are (both with identical time stamps):\n[debug] mod_cache.c(131): Adding CACHE_SAVE filter for /test/tt.php\n[debug] mod_cache.c(138): Adding CACHE_REMOVE_URL filter for /test/tt.php\n\nThe content of tt.php was (the Cache-Control line does not change anything):\n\n<?php\nheader('Last-Modified: '.gmdate('D, d M Y H:i:s \\G\\M\\T',filemtime('/docroot/test/tt.php')-10));\nheader('Expires: '.gmdate('D, d M Y H:i:s \\G\\M\\T',time()+60));\n#header('Cache-Control: public,max-age=60,must-revalidate');\nob_start();\n?>\n<html>\n<head><title>Environment</title></head>\n<body>\n<h2>Environment Variables:</h2>\n<?php\necho(\"TZ=\".$_ENV[\"TZ\"].\"<br>\");\necho(\"LC_CTYPE=\".$_ENV[\"LC_CTYPE\"].\"<br>\");\n<!-- some more echo lines -->\n?>\n</body>\n</html><?php header('Content-Length: '.ob_get_length()); ob_flush(); ?>", "id": 132713, "time": "2009-12-10T05:21:12Z", "creator": "strube@physik3.gwdg.de", "creation_time": "2009-12-10T05:21:12Z", "tags": [], "is_private": false}, {"count": 3, "tags": [], "text": "CONJECTURE: \"Action dophp /phpact\" causes /test/tt.php to be internally rewritten to /phpact/test/tt.php (otherwise the functioning of \"ProxyPassMatch ^/phpact/(.+)$ fcgi://localhost:54321/$1\" would be incomprehensible). In fact, mod_action.c contains a call to ap_internal_redirect_handler which seems to do this. Then the cache might not recognize that the action-script output is related to the original URL. (I remember there are several caching issues in the bug database concerning mod_rewrite, which have been fixed. May be mod_action has to be treated in a similar way.)", "is_private": false, "bug_id": 48364, "id": 132720, "time": "2009-12-10T07:29:22Z", "creator": "strube@physik3.gwdg.de", "creation_time": "2009-12-10T07:29:22Z", "attachment_id": null}, {"count": 4, "tags": [], "creator": "rpluem@apache.org", "is_private": false, "text": "Please provide ALL log entries not only the debug ones.", "id": 132724, "time": "2009-12-10T09:00:00Z", "bug_id": 48364, "creation_time": "2009-12-10T09:00:00Z", "attachment_id": null}, {"count": 5, "tags": [], "text": "> Please provide ALL log entries not only the debug ones.\nThere are practically none. Graceful restart after setting LogLevel debug, with mod_fastcgi:\n\n[Thu Dec 10 13:54:33 2009] [notice] suEXEC mechanism enabled (wrapper: /opt/dpiw\nww/apache2/sbin/suexec)\n[Thu Dec 10 13:54:34 2009] [notice] Apache/2.2.13 (Unix) mod_fastcgi/2.4.6 confi\ngured -- resuming normal operations\n[Thu Dec 10 13:54:34 2009] [notice] FastCGI: process manager initialized (pid 23\n046)\n[Thu Dec 10 13:54:34 2009] [warn] FastCGI: server \"/opt/dpiwww/php5/bin/php-fcgi\n\" started (pid 23052)\n[Thu Dec 10 13:55:43 2009] [debug] mod_cache.c(131): Adding CACHE_SAVE filter fo\nr /test/tt.php\n[Thu Dec 10 13:55:43 2009] [debug] mod_cache.c(138): Adding CACHE_REMOVE_URL fil\nter for /test/tt.php\n\nThe last two lines repeat for each access of /test/tt.php, nothing else is logged.", "is_private": false, "bug_id": 48364, "id": 132725, "time": "2009-12-10T09:15:11Z", "creator": "strube@physik3.gwdg.de", "creation_time": "2009-12-10T09:15:11Z", "attachment_id": null}, {"count": 6, "tags": [], "creator": "mjs@beebo.org", "is_private": false, "text": "I'm experiencing the same problem.  Here's the relevant logfile entries.  (LogLevel debug.)\n\nFirst CGI load:\n\n[Sun Feb 21 12:10:26 2010] [debug] mod_cache.c(131): Adding CACHE_SAVE filter for /scratch/cachetest.cgi\n[Sun Feb 21 12:10:26 2010] [debug] mod_cache.c(138): Adding CACHE_REMOVE_URL filter for /scratch/cachetest.cgi\n[Sun Feb 21 12:10:26 2010] [debug] mod_deflate.c(619): [client 10.0.2.2] Zlib: Compressed 15 to 17 : URL /scratch/cachetest.cgi\n[Sun Feb 21 12:10:26 2010] [debug] mod_cache.c(633): cache: Caching url: /scratch/cachetest.cgi\n[Sun Feb 21 12:10:26 2010] [debug] mod_cache.c(639): cache: Removing CACHE_REMOVE_URL filter.\n[Sun Feb 21 12:10:26 2010] [info] mem_cache: Cached url: http://beebo.local:8080/scratch/cachetest.cgi?\n\nSecond CGI load (looks okay to me, and the CGI file itself is not hit):\n\n[Sun Feb 21 12:10:34 2010] [debug] mod_cache.c(282): cache: running CACHE_OUT filter\n[Sun Feb 21 12:10:34 2010] [debug] mod_cache.c(296): cache: serving /scratch/cachetest.cgi\n\nFirst PHP load:\n\n[Sun Feb 21 12:10:46 2010] [debug] mod_cache.c(131): Adding CACHE_SAVE filter for /scratch/cachetest.php\n[Sun Feb 21 12:10:46 2010] [debug] mod_cache.c(138): Adding CACHE_REMOVE_URL filter for /scratch/cachetest.php\n\nSecond PHP load (identical to first):\n\n[Sun Feb 21 12:10:56 2010] [debug] mod_cache.c(131): Adding CACHE_SAVE filter for /scratch/cachetest.php\n[Sun Feb 21 12:10:56 2010] [debug] mod_cache.c(138): Adding CACHE_REMOVE_URL filter for /scratch/cachetest.php\n\nContents of cachetest.cgi:\n\n#!/usr/bin/env bash\n\necho \"Cache-Control: max-age=3600, public\"\necho \"Content-type: text/plain\"\necho\necho \"CGI cache test\"\n\nFull headers returned:\n\nHTTP/1.1 200 OK\nDate: Sun, 21 Feb 2010 12:11:29 GMT\nServer: Apache/2.2.8 (Ubuntu) mod_fastcgi/2.4.6\nCache-Control: max-age=3600, public\nVary: Accept-Encoding\nContent-Length: 15\nContent-Type: text/plain; charset=utf-8\n\nContents of cachetest.php:\n\n<?php\n\nheader(\"Cache-Control: max-age=3600, public\");\nheader(\"Content-Type: text/plain\");\n\necho \"PHP cache test\";\n\nFull headers returned:\n\nHTTP/1.1 200 OK\nDate: Sun, 21 Feb 2010 12:11:18 GMT\nServer: Apache/2.2.8 (Ubuntu) mod_fastcgi/2.4.6\nX-Powered-By: PHP/5.3.1\nCache-Control: max-age=3600, public\nVary: Accept-Encoding\nTransfer-Encoding: chunked\nContent-Type: text/plain;charset=utf-8\nX-Pad: avoid browser bug\n\nIn my case the PHP file is being served via FastCGI, if that makes a difference.", "id": 134741, "time": "2010-02-21T12:15:56Z", "bug_id": 48364, "creation_time": "2010-02-21T12:15:56Z", "attachment_id": null}, {"count": 7, "tags": [], "creator": "rpluem@apache.org", "text": "(In reply to comment #6)\n> I'm experiencing the same problem.  Here's the relevant logfile entries. \n> (LogLevel debug.)\n> \n> First CGI load:\n> \n> [Sun Feb 21 12:10:26 2010] [debug] mod_cache.c(131): Adding CACHE_SAVE filter\n> for /scratch/cachetest.cgi\n> [Sun Feb 21 12:10:26 2010] [debug] mod_cache.c(138): Adding CACHE_REMOVE_URL\n> filter for /scratch/cachetest.cgi\n> [Sun Feb 21 12:10:26 2010] [debug] mod_deflate.c(619): [client 10.0.2.2] Zlib:\n> Compressed 15 to 17 : URL /scratch/cachetest.cgi\n> [Sun Feb 21 12:10:26 2010] [debug] mod_cache.c(633): cache: Caching url:\n> /scratch/cachetest.cgi\n> [Sun Feb 21 12:10:26 2010] [debug] mod_cache.c(639): cache: Removing\n> CACHE_REMOVE_URL filter.\n> [Sun Feb 21 12:10:26 2010] [info] mem_cache: Cached url:\n> http://beebo.local:8080/scratch/cachetest.cgi?\n\nNo you are not hitting the same problem since you use mod_mem_cache which has a process local cache. So you most likely hit a different httpd process in your second request. Try using mod_disk_cache and come back if the problem persists.", "id": 134744, "time": "2010-02-21T13:14:29Z", "bug_id": 48364, "creation_time": "2010-02-21T13:14:29Z", "is_private": false, "attachment_id": null}, {"count": 8, "tags": [], "bug_id": 48364, "attachment_id": null, "is_private": false, "id": 134745, "time": "2010-02-21T13:27:34Z", "creator": "mjs@beebo.org", "creation_time": "2010-02-21T13:27:34Z", "text": "Yes you're right, that example was the memory cache.  (I was trying both.)  I get exactly the same results for the disk cache though:\n\nFirst CGI:\n\n[Sun Feb 21 13:23:54 2010] [debug] mod_cache.c(131): Adding CACHE_SAVE filter for /scratch/cachetest.cgi\n[Sun Feb 21 13:23:54 2010] [debug] mod_cache.c(138): Adding CACHE_REMOVE_URL filter for /scratch/cachetest.cgi\n[Sun Feb 21 13:23:54 2010] [debug] mod_cache.c(633): cache: Caching url: /scratch/cachetest.cgi\n[Sun Feb 21 13:23:54 2010] [debug] mod_cache.c(639): cache: Removing CACHE_REMOVE_URL filter.\n[Sun Feb 21 13:23:54 2010] [debug] mod_disk_cache.c(962): disk_cache: Stored headers for URL http://beebo.local:8080/scratch/cachetest.cgi?\n[Sun Feb 21 13:23:54 2010] [debug] mod_disk_cache.c(1051): disk_cache: Body for URL http://beebo.local:8080/scratch/cachetest.cgi? cached.\n\nSecond CGI:\n\n[Sun Feb 21 13:24:04 2010] [debug] mod_disk_cache.c(476): disk_cache: Recalled cached URL info header http://beebo.local:8080/scratch/cachetest.cgi?\n[Sun Feb 21 13:24:04 2010] [debug] mod_disk_cache.c(749): disk_cache: Recalled headers for URL http://beebo.local:8080/scratch/cachetest.cgi?\n[Sun Feb 21 13:24:04 2010] [debug] mod_cache.c(282): cache: running CACHE_OUT filter\n[Sun Feb 21 13:24:04 2010] [debug] mod_cache.c(296): cache: serving /scratch/cachetest.cgi\n\nFirst PHP:\n\n[Sun Feb 21 13:24:31 2010] [debug] mod_cache.c(131): Adding CACHE_SAVE filter for /scratch/cachetest.php\n[Sun Feb 21 13:24:31 2010] [debug] mod_cache.c(138): Adding CACHE_REMOVE_URL filter for /scratch/cachetest.php\n\nSecond PHP:\n\n[Sun Feb 21 13:24:40 2010] [debug] mod_cache.c(131): Adding CACHE_SAVE filter for /scratch/cachetest.php\n[Sun Feb 21 13:24:40 2010] [debug] mod_cache.c(138): Adding CACHE_REMOVE_URL filter for /scratch/cachetest.php\n\nIn the case of the CGI request, files are created in /var/cache/apache2/mod_disk_cache, as I'd expect.  In the case of the PHP request, they're not."}, {"count": 9, "tags": [], "bug_id": 48364, "attachment_id": null, "is_private": false, "id": 134746, "time": "2010-02-21T14:04:07Z", "creator": "rpluem@apache.org", "creation_time": "2010-02-21T14:04:07Z", "text": "(In reply to comment #8)\n> Yes you're right, that example was the memory cache.  (I was trying both.)  I\n> get exactly the same results for the disk cache though:\n\nPlease provide more debug output in the php case. I vaguely remember a PHP bug that mod_php sets r->no_cache and thus causing all content to be uncachable."}, {"count": 10, "attachment_id": null, "bug_id": 48364, "text": "Thanks for looking into this. How do I get more debug output? I'm already at LogLevel debug.  There's a bug report on bugs.php.net that initially seemed somewhat related[1] but I think that one involves mod_php whereas I and the original reporter are both using mod_fastcgi.  Is there some way to turn on mod_fastcgi logging?\n\n[1] http://bugs.php.net/bug.php?id=49106", "id": 134747, "time": "2010-02-21T14:09:31Z", "creator": "mjs@beebo.org", "creation_time": "2010-02-21T14:09:31Z", "tags": [], "is_private": false}, {"count": 11, "tags": [], "creator": "rpluem@apache.org", "is_private": false, "text": "(In reply to comment #10)\n> Thanks for looking into this. How do I get more debug output? I'm already at\n\nThere should be more debug lines from the cache in the log. Please copy and paste them here.\n\n> LogLevel debug.  There's a bug report on bugs.php.net that initially seemed\n> somewhat related[1] but I think that one involves mod_php whereas I and the\n> original reporter are both using mod_fastcgi.  Is there some way to turn on\n> mod_fastcgi logging?\n> \n> [1] http://bugs.php.net/bug.php?id=49106\n\nI guess this is the one I meant. Does the problem only happen if you execute the PHP script via mod_fastcgi and not if you use mod_cgi(d)?", "id": 134748, "time": "2010-02-21T15:05:31Z", "bug_id": 48364, "creation_time": "2010-02-21T15:05:31Z", "attachment_id": null}, {"count": 12, "tags": [], "bug_id": 48364, "attachment_id": null, "is_private": false, "id": 134764, "time": "2010-02-22T08:20:21Z", "creator": "strube@physik3.gwdg.de", "creation_time": "2010-02-22T08:20:21Z", "text": "Let me remind that the problem seems not to be due to PHP as such (as initially reported, caching works for simple PHP CGI scripts) but occurs only with the Action mechanism, regardless whether CGI, FastCGI, or even mod_proxy_fcgi are used. Thus I still think (see Comment 3) that the problem is actually with mod_action and the comments for this bug should also be mailed to the people in charge for mod_action."}, {"count": 13, "tags": [], "bug_id": 48364, "attachment_id": null, "is_private": false, "id": 140811, "time": "2010-10-18T19:50:45Z", "creator": "minfrin@sharp.fm", "creation_time": "2010-10-18T19:50:45Z", "text": "I suspect the key reason that we're not seeing any debug output is potentially because the php stack is removing the existing filters from the stack, so the cache never gets an opportunity to run.\n\nClosing this as worksforme for now, as we'd need clarification that php isn't doing this before we could debug this further. Please reopen if it turns out mod_cache needs to be looked at again."}, {"count": 14, "tags": [], "creator": "strube@physik3.gwdg.de", "text": "> because the php stack is removing the existing filters from the stack\n\nWhat does this mean? The php processes are independent of the httpd process, since no Apache PHP module was used but external CGI or FastCGI php processes. I do not see how these could influence the Apache filter stack.", "id": 140919, "time": "2010-10-22T06:44:48Z", "bug_id": 48364, "creation_time": "2010-10-22T06:44:48Z", "is_private": false, "attachment_id": null}, {"count": 15, "tags": [], "bug_id": 48364, "attachment_id": null, "is_private": false, "id": 140923, "time": "2010-10-22T08:44:49Z", "creator": "rpluem@apache.org", "creation_time": "2010-10-22T08:44:49Z", "text": "Please retry with 2.2.17 as there are some fixes regarding the filter stack and internal redirects."}, {"count": 16, "tags": [], "bug_id": 48364, "attachment_id": null, "is_private": false, "id": 140994, "time": "2010-10-25T06:56:14Z", "creator": "strube@physik3.gwdg.de", "creation_time": "2010-10-25T06:56:14Z", "text": "There are no improvements with 2.2.17. Moreover, I now proved that the bug is not PHP related at all but due to the redirection by an Action+Handler. For this purpose, I made two simple CGI shell scripts tt.cgi (executable) and tt.msh of equal contents:\n#!/bin/sh\nLC_TIME=C date -u|awk '{print \"Last-Modified: \" $1 \", \" $3 \" \" $2 \" \" $6 \" \" $4 \" \" $5}'\necho 'Cache-Control: public,max-age=60'\necho 'Content-type: text/html; charset=iso-8859-1'\necho\necho \"<p>DOCUMENT_ROOT=$DOCUMENT_ROOT<br>\nPATH_INFO=$PATH_INFO<br>\nPATH_TRANSLATED=$PATH_TRANSLATED<br>\nSCRIPT_NAME=$SCRIPT_NAME<br>\nSCRIPT_FILENAME=$SCRIPT_FILENAME<br>\nREQUEST_URI=$REQUEST_URI<br>\nREDIRECT_URL=$REDIRECT_URL</p>\"\n# End of script\n\ntt.cgi was run directly, whereas tt.msh was assigned a Handler and Action with another CGI shell script mysh taking the role of php-cgi:\n  <FilesMatch \"\\.msh$\">\n    SetHandler mycgi\n  </FilesMatch>\n  Action mycgi /XyCgi\n  ScriptAlias /XyCgi \"/path/to/cgi-bin/mysh\"\nThe script mysh contained:\n#!/bin/sh\nif [ -f \"$PATH_TRANSLATED\" ]\nthen . \"$PATH_TRANSLATED\"\nelse\necho 'Content-type: text/html\n\n\n<h2>Not found</h2>'\nfi\n# End of script\n\nThe directly executed tt.cgi correctly entered and used cache entries:\n\n[Mon Oct 25 12:17:13 2010] [debug] mod_disk_cache.c(977): disk_cache: Stored headers for URL http://dali.physik3.gwdg.de:8080/test/tt.cgi?\n[Mon Oct 25 12:17:13 2010] [debug] mod_disk_cache.c(1079): disk_cache: Body for URL http://dali.physik3.gwdg.de:8080/test/tt.cgi? cached.\n[Mon Oct 25 12:20:06 2010] [debug] mod_disk_cache.c(485): disk_cache: Recalled cached URL info header http://dali.physik3.gwdg.de:8080/test/tt.cgi?\n[Mon Oct 25 12:20:06 2010] [debug] mod_disk_cache.c(758): disk_cache: Recalled headers for URL http://dali.physik3.gwdg.de:8080/test/tt.cgi?\n[Mon Oct 25 12:20:06 2010] [debug] cache_util.c(591): Cache lock obtained for stale cached URL, revalidating entry: /test/tt.cgi\n[Mon Oct 25 12:20:06 2010] [debug] cache_storage.c(272): Cached response for /test/tt.cgi isn't fresh.  Adding/replacing conditional request headers.\n[Mon Oct 25 12:20:06 2010] [debug] mod_cache.c(141): Adding CACHE_SAVE filter for /test/tt.cgi\n[Mon Oct 25 12:20:06 2010] [debug] mod_cache.c(148): Adding CACHE_REMOVE_URL filter for /test/tt.cgi\n[Mon Oct 25 12:20:06 2010] [debug] mod_cache.c(705): cache: Caching url: /test/tt.cgi\n[Mon Oct 25 12:20:06 2010] [debug] mod_cache.c(711): cache: Removing CACHE_REMOVE_URL filter.\n\nThe script tt.msh called through the Action did not cache; the only log entries were (as described in Comment 2 for PHP):\n[Mon Oct 25 12:20:33 2010] [debug] mod_cache.c(141): Adding CACHE_SAVE filter for /test/tt.msh\n[Mon Oct 25 12:20:33 2010] [debug] mod_cache.c(148): Adding CACHE_REMOVE_URL filter for /test/tt.msh\n\nThus this issue has nothing to do with PHP, but with Handler+Action, as already conjectured in my Comment 3. The Issue should be renamed or reopened under a different name."}, {"count": 17, "tags": [], "creator": "d.v.taylor@leedsbeckett.ac.uk", "text": "Apologies for resurrecting an oldish bug, but I've hit this in Apache 2.2.27 (and from looking at the relevant bits of code in 2.2.29 I can't see anything that's changed that would fix it).\n\nFrom a bit of investigation it looks like what happens is:\n\n1. mod_cache, in its quick handler, adds an output filter CACHE_SAVE to the request.\n2. action_handler() in mod_actions calls ap_internal_redirect_handler() using the path that was set up in the \"Action\" directive.\n3. ap_internal_redirect_handler() in turn calls internal_internal_redirect() to create a new request_rec, which strips off *all* the resource-specific output filters - including CACHE_SAVE.\n4. ap_internal_redirect_handler() then *doesn't* call ap_run_quick_handler() for the new request_rec, so mod_cache doesn't get a look at the new request at all. N.b. this is different to the behaviour of ap_internal_redirect(), but perhaps deliberately so?\n\nSo it might be possible to resolve this by allowing ap_internal_redirect_handler() to run the quick handler against the new request_rec (but that might have unintended consequences for quick handlers in other modules than mod_cache?) Or it could perhaps be resolved by backporting CacheQuickHandler to 2.2.x so that mod_cache doesn't have to run \"quick\".\n\nOr I may have misunderstood what's going on entirely(!)", "id": 183055, "time": "2015-05-20T13:32:33Z", "bug_id": 48364, "creation_time": "2015-05-20T13:32:33Z", "is_private": false, "attachment_id": null}]