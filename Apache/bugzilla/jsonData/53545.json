[{"count": 0, "tags": [], "bug_id": 53545, "is_private": false, "text": "If we have a JSP like the one below we get java.lang.IllegalStateException: getOutputStream() has already been called for this response:\n\nNotes:\n1. the jsp:forward is inside classic custom tag ( extends BodyTagSupport).\n2. if I put a dynamic resource everything is fine (ex. redirect.jsp)\n3. I think that the response gets flushed if jsp:forward redirects to a static resource and that's why the exception is trown.\n\n\n\ntest.jsp\n\n<%@ page language=\"java\" contentType=\"text/html; charset=ISO-8859-1\" pageEncoding=\"ISO-8859-1\"%>\n<%@ taglib prefix=\"t\" uri=\"test\" %> \n\n<t:do>  \n  \n<jsp:forward page=\"redirect.html\"/>\n   \n   \n<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n<html>\n<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">\n<title>Insert title here</title>\n</head>\n<body>\n</body>\n</html>\n\n</t:do>", "id": 160618, "time": "2012-07-13T07:53:20Z", "creator": "radu.gancea@gmail.com", "creation_time": "2012-07-13T07:53:20Z", "attachment_id": null}, {"count": 1, "tags": [], "text": "You should not be writing content after a forward. That it works in any circumstances is pure luck.", "attachment_id": null, "bug_id": 53545, "id": 161040, "time": "2012-08-01T10:15:41Z", "creator": "markt@apache.org", "creation_time": "2012-08-01T10:15:41Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 53545, "is_private": false, "id": 161041, "creation_time": "2012-08-01T10:38:59Z", "time": "2012-08-01T10:38:59Z", "creator": "radu.gancea@gmail.com", "text": "I know that. But jsp:forward action throws IllegalState only when the page is unbuffered. If it's buffered, the buffer clears, the forwarding executes and the rest of the page doesn't execute.\n\n\nIn the generated java files for classic tags there is a finally block that calls a method that invokes getOutputStream and I think it shouldn't. If I use SimpleTag the forward works as it should.\n\n\nQuote from specs:\n\"And as with jsp:forward actions from one JSP page to another, the following statement would clear the page buffer, terminate the execution of the JSP page, and execute the servlet: \n<jsp:forward page=\"/servlet/MyServlet\" />\"\n\n\nI am not writing anything inside doStartTag(), etc. \n\n\nPlease reconsider. I won't open the issue again and sorry if I am too insistent.\nThank you.", "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 53545, "is_private": false, "id": 161247, "creation_time": "2012-08-10T22:43:57Z", "time": "2012-08-10T22:43:57Z", "creator": "markt@apache.org", "text": "OK. I see what is going on here now. A bug (now fixed) in the custom error page handling wasn't helping.\n\nTomcat isn't clearing the buffer of the containing page when the forward happens. When Tomcat tries to write that content (after the forward) the ISE happens.\n\nI think I have a fix but I need to do some more testing of the behavior with nested tags before I commit the fix.", "attachment_id": null}, {"count": 4, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "id": 161254, "time": "2012-08-11T09:53:41Z", "bug_id": 53545, "creation_time": "2012-08-11T09:53:41Z", "is_private": false, "text": "This has been fixed in trunk and 7.0.x and will be included in 7.0.30 onwards. I also added a test case to the unit tests for this issue."}]