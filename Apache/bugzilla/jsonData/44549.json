[{"count": 0, "tags": [], "text": "If you use a delete task with a fileset using an empty includesfile, Ant deletes all files in the given directory.\n\n<target name=\"deleteTest\">\n   <delete>\n      <fileset dir=\"c:\\temp\" includesfile=\"c:\\temp\\empty.txt\"/>\n   </delete>\n</target>\n\nIn the above target, empty.txt has no patterns in it and all files in c:\\temp are  deleted.\n\nThe Ant docs state that 'all files are included when [includes is] omitted'. In this case, since an includesfile is used, the expectation is that only patterns in the includesfile will be applied. Since there are no patterns in the file, nothing should be applied. The default behavior for includes should be treated as a separate case. \n\nFor the sake of the user's data, greedy delete is a bad idea.\nI've marked this critical because of the unexpected data loss.", "is_private": false, "id": 114368, "creator": "andy.kriger@gmail.com", "time": "2008-03-06T11:04:43Z", "bug_id": 44549, "creation_time": "2008-03-06T11:04:43Z", "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 44549, "attachment_id": 23016, "is_private": false, "id": 123281, "time": "2008-12-13T17:29:44Z", "creator": "inta_1@hotmail.com", "creation_time": "2008-12-13T17:29:44Z", "text": "Created attachment 23016\nThe patch avoids the inclusion of implicit files that leads to the loss of unexpected files\n\nAttached is a possible patch to the bug."}, {"count": 2, "tags": [], "text": "I disagree that this is a bug. It works exactly as I would expect. includesfile is basically just shorthand for a list of <include /> elements. If the file is empty it is as though the user didn't supply any <include /> elements. Therefore, the entire FileSet should be deleted.\n\nWhat are you trying to achieve by supplying an empty includesfile? I don't understand the use-case at all.", "is_private": false, "id": 189084, "creator": "eljobe@gmail.com", "time": "2016-03-04T08:22:34Z", "bug_id": 44549, "creation_time": "2016-03-04T08:22:34Z", "attachment_id": null}]