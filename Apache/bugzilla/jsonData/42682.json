[{"count": 0, "tags": [], "bug_id": 42682, "text": "Solaris 10. Apache 2.2.4.\nApache is built with the native Sun LDAP libs in /usr/lib and /usr/include\nApache is built without SSL! Conflicting SSL libs cannot be the point.\n\nAt the beginning Apache log says:\n[info] APR LDAP: Built with Sun Microsystems Inc. LDAP SDK\n[info] LDAP: SSL support available\n\nWithout SSL the LDAP authorization is fine.\n\nUsing SSL an Apache child is killed, exactely when calling the ldap function\nldap_simple_bind_s\n(context: uldap_connection_open, in: modules/ldap/util_ldap.c)\n\nRow 390 or so... I have put a lot of debug lines in that file.\n\n\nApache log:\n[notice] child pid 25209 exit signal Segmentation fault (11)\n\n\nI have changed the the source code to use the function ldap_bind_s, but the\nerror is the same.\n\n\nAny ideas?", "id": 104472, "time": "2007-06-17T08:11:58Z", "creator": "kevin.richter@uni-hildesheim.de", "creation_time": "2007-06-17T08:11:58Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "text": "Please provide a backtrace from the crashed process as described in\nhttp://httpd.apache.org/dev/debugging.html.", "is_private": false, "id": 104511, "creation_time": "2007-06-18T12:38:15Z", "time": "2007-06-18T12:38:15Z", "creator": "rpluem@apache.org", "bug_id": 42682, "attachment_id": null}, {"count": 2, "tags": [], "creator": "kevin.richter@uni-hildesheim.de", "attachment_id": null, "id": 104639, "time": "2007-06-22T09:44:39Z", "bug_id": 42682, "creation_time": "2007-06-22T09:44:39Z", "is_private": false, "text": "I have no idea, what to do exactely. I have played a bit. Set a breakpoint to\nthe naughty \"ldap_simple_bind_s\" function. Two debugs - each one a bit different.\n\nWatch yourself, if this is useful. If not, please tell me, what you need. \n\n\nrayone# gdb httpd\nGNU gdb 6.2.1\nCopyright 2004 Free Software Foundation, Inc.\nGDB is free software, covered by the GNU General Public License, and you are\nwelcome to change it and/or distribute copies of it under certain conditions.\nType \"show copying\" to see the conditions.\nThere is absolutely no warranty for GDB.  Type \"show warranty\" for details.\nThis GDB was configured as \"sparc-sun-solaris2.10\"...\n(gdb) b ldap_simple_bind_s\nFunction \"ldap_simple_bind_s\" not defined.\nMake breakpoint pending on future shared library load? (y or [n]) y\nBreakpoint 1 (ldap_simple_bind_s) pending.\n(gdb) run -X -d /opt/kevin/apache-2.2.4\nStarting program: /opt/kevin/apache-2.2.4/bin/httpd -X -d /opt/kevin/apache-2.2.4\nwarning: Lowest section in /usr/lib/libpthread.so.1 is .dynamic at 00000074\nwarning: Lowest section in /usr/lib/libthread.so.1 is .dynamic at 00000074\nwarning: Lowest section in /usr/lib/libdl.so.1 is .dynamic at 00000094\nBreakpoint 2 at 0xff242cbc\nPending breakpoint \"ldap_simple_bind_s\" resolved\n[New LWP 1]\n[New LWP 2]\n[New LWP 3]\n[New LWP 4]\n[LWP 2 exited]\n[New LWP 2]\n[Switching to LWP 3]\n\nBreakpoint 2, 0xff242cbc in ldap_simple_bind_s () from /usr/lib/libldap.so.5\n(gdb) c\nContinuing.\n\nProgram received signal SIGSEGV, Segmentation fault.\n0xff24eacc in do_ldapssl_connect () from /usr/lib/libldap.so.5\n(gdb) where\n#0  0xff24eacc in do_ldapssl_connect () from /usr/lib/libldap.so.5\n#1  0xff24eeac in ldapssl_connect () from /usr/lib/libldap.so.5\n(gdb) s\nSingle stepping until exit from function do_ldapssl_connect,\nwhich has no line number information.\nwarning: rw_common (): unable to read at addr 0xfeeedc5c\nwarning: rw_common (): unable to read at addr 0xfeeedc60\nthread_to_lwp: td_ta_map_id2thr Debugger service failed\n(gdb) bt\n#0  0xff24eacc in do_ldapssl_connect () from /usr/lib/libldap.so.5\n#1  0xff24eeac in ldapssl_connect () from /usr/lib/libldap.so.5\n(gdb) q\nThe program is running.  Exit anyway? (y or n) y\nQuitting: procfs: unconditionally_kill, proc_kill line 4701, /proc/06979: No\nsuch file or directory.\n\n\n\n\nrayone# gdb httpd\nGNU gdb 6.2.1\nCopyright 2004 Free Software Foundation, Inc.\nGDB is free software, covered by the GNU General Public License, and you are\nwelcome to change it and/or distribute copies of it under certain conditions.\nType \"show copying\" to see the conditions.\nThere is absolutely no warranty for GDB.  Type \"show warranty\" for details.\nThis GDB was configured as \"sparc-sun-solaris2.10\"...\n(gdb) b ldap_simple_bind_s\nFunction \"ldap_simple_bind_s\" not defined.\nMake breakpoint pending on future shared library load? (y or [n]) y\nBreakpoint 1 (ldap_simple_bind_s) pending.\n(gdb)  run -X -d /opt/kevin/apache-2.2.4\nStarting program: /opt/kevin/apache-2.2.4/bin/httpd -X -d /opt/kevin/apache-2.2.4\nwarning: Lowest section in /usr/lib/libpthread.so.1 is .dynamic at 00000074\nwarning: Lowest section in /usr/lib/libthread.so.1 is .dynamic at 00000074\nwarning: Lowest section in /usr/lib/libdl.so.1 is .dynamic at 00000094\nBreakpoint 2 at 0xff242cbc\nPending breakpoint \"ldap_simple_bind_s\" resolved\n[New LWP 1]\n[New LWP 2]\n[New LWP 3]\n[New LWP 4]\n[LWP 2 exited]\n[New LWP 2]\n[Switching to LWP 3]\n\nBreakpoint 2, 0xff242cbc in ldap_simple_bind_s () from /usr/lib/libldap.so.5\n(gdb) bt\n#0  0xff242cbc in ldap_simple_bind_s () from /usr/lib/libldap.so.5\n#1  0xfe742ab0 in uldap_connection_open () from\n/opt/kevin/apache-2.2.4/modules/mod_ldap.so\n#2  0xfe74377c in uldap_cache_checkuserid () from\n/opt/kevin/apache-2.2.4/modules/mod_ldap.so\n#3  0xfe881c54 in authn_ldap_check_password () from\n/opt/kevin/apache-2.2.4/modules/mod_authnz_ldap.so\n#4  0xfe840dd8 in authenticate_basic_user () from\n/opt/kevin/apache-2.2.4/modules/mod_auth_basic.so\n#5  0x00035610 in ap_run_check_user_id ()\n#6  0x00037700 in ap_process_request_internal ()\n#7  0x000468e8 in ap_process_request ()\n#8  0x00043d48 in ap_process_http_connection ()\n#9  0x00040584 in ap_run_process_connection ()\n#10 0x0004ada4 in worker_thread ()\n#11 0xff05c12c in dummy_worker () from /opt/kevin/apache-2.2.4/lib/libapr-1.so.0\n#12 0xfeec0504 in _lwp_start () from /usr/lib/libc.so.1\n#13 0xfeec0504 in _lwp_start () from /usr/lib/libc.so.1\nPrevious frame identical to this frame (corrupt stack?)\n(gdb) s\nSingle stepping until exit from function ldap_simple_bind_s,\nwhich has no line number information.\n0xfeebeb18 in _ti_bind_guard () from /usr/lib/libc.so.1\n(gdb) s\nSingle stepping until exit from function _ti_bind_guard,\nwhich has no line number information.\n0xfeebeb50 in _ti_bind_clear () from /usr/lib/libc.so.1\n(gdb) s\nSingle stepping until exit from function _ti_bind_clear,\nwhich has no line number information.\n0xff2428f0 in ldap_simple_bind () from /usr/lib/libldap.so.5\n(gdb) s\nSingle stepping until exit from function ldap_simple_bind,\nwhich has no line number information.\n0xff242910 in simple_bind_nolock () from /usr/lib/libldap.so.5\n(gdb) s\nSingle stepping until exit from function simple_bind_nolock,\nwhich has no line number information.\n\nProgram received signal SIGSEGV, Segmentation fault.\n0xff24eacc in do_ldapssl_connect () from /usr/lib/libldap.so.5\n(gdb) c\nContinuing.\nwarning: rw_common (): unable to read at addr 0xfeeedc5c\nwarning: rw_common (): unable to read at addr 0xfeeedc60\nthread_to_lwp: td_ta_map_id2thr Debugger service failed\n\n"}, {"count": 3, "tags": [], "creator": "kevin.richter@uni-hildesheim.de", "attachment_id": null, "text": "One thing to add:\n\nThe Sun LDAP SSL libs are working fine. ldapsearch and ldaplist use them.\n\nAnd my PHP-5.2.2 is build successfully against them. A short summary, what the\nPHP stuff calls:\n\nchar *certpath = \"/data/conf\";\nldapssl_advclientauth_init( certpath, NULL, 1, certpath, NULL, 1, certpath,\nLDAPSSL_AUTH_WEAK );\nldap = ldapssl_init( host, port, 1 );\nldap_bind_s(ld->link, ldap_bind_dn, ldap_bind_pw, LDAP_AUTH_SIMPLE);\n\nNo more, no less. And no signal 11 when PHP calls the ldap_bind_s function! :-)\n", "id": 104641, "time": "2007-06-22T10:24:55Z", "bug_id": 42682, "creation_time": "2007-06-22T10:24:55Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 42682, "text": "Yeah. I have successfully changed the source code. Now SSL works without errors\nor delays! :)\n\n\nFile srclib/apr-util/ldap/apr_ldap_init.c, Line 149:\nChange\n    *ldap = ldapssl_init(hostname, portno, 0);\nto\n    *ldap = ldapssl_init(hostname, portno, 1);\n\n\n\nFile modules/ldap/util_ldap.c, Line 256:\nDelete or comment out the whole block.\n\nf.ex.:\n\n    /* switch on SSL/TLS\n    if (APR_LDAP_NONE != ldc->secure) {\n        apr_ldap_set_option(ldc->pool, ldc->ldap,\n                            APR_LDAP_OPT_TLS, &ldc->secure, &(result));\n        if (LDAP_SUCCESS != result->rc) {\n            uldap_connection_unbind( ldc );\n            ldc->reason = result->reason;\n            return(result->rc);\n        }\n    } */\n", "id": 104644, "time": "2007-06-22T13:41:45Z", "creator": "kevin.richter@uni-hildesheim.de", "creation_time": "2007-06-22T13:41:45Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 42682, "text": "Looks like you've found a simple bug, that parameter should be the \"secure\" argument to apr_ldap_init.  I guess your report has been ignored because noone really supports LDAP toolkits other than OpenLDAP, but now I've seen it I'll fix this in trunk as soon as svn comes back.\n\nBelated thanks for the report and diagnosis.", "id": 131985, "time": "2009-11-15T15:24:17Z", "creator": "nick@webthing.com", "creation_time": "2009-11-15T15:24:17Z", "is_private": false, "attachment_id": null}, {"count": 6, "attachment_id": null, "creator": "sf@sfritsch.de", "is_private": false, "id": 139616, "time": "2010-09-02T07:43:53Z", "bug_id": 42682, "creation_time": "2010-09-02T07:43:53Z", "tags": [], "text": "There are a couple of problems here.\n\n- As noted by Nick, apr_ldap_init() should pass the \"secure\" parameter on to the LDAP library. This alone is not enouogh, though.\n\n- Solaris LDAP does not support activating SSL by using ldap_set_option. The only way is to pass 1 as second parameter in ldapssl_init().\n\n- Apache httpd's mod_ldap currently always passes secure == APR_LDAP_NONE to apr_ldap_init() and then tries to enable SSL later with apr_ldap_set_option().  To make it possible to use Solaris LDAP with mod_ldap, mod_ldap would have to enable SSL at apr_ldap_init-time and skip the apr_ldap_set_option(..., APR_LDAP_OPT_TLS_CERT, ...) call. Of course, doing this unconditionally would break various SSL features with other LDAP libraries.\n\nOne way to solve this would be to have some '#if APR_HAS_SOLARIS_LDAPSDK' in mod_ldap. This breaks the apr-ldap abstraction, but AFAIK apr-ldap will be axed anyway.\n\nOn the other hand, the documentation for apr_ldap_init() already recommends: \"set the SSL mode here if no per connection client certificates are present, otherwise set secure APR_LDAP_NONE here, then set the per connection client certificates, followed by setting the SSL mode via apr_ldap_set_option()\". Is this a way forward or is the risk too high that this would break mod_ssl with some other LDAP library?\n\nThe attached patch tries implement the second solution. It works with Solaris LDAP, but I haven't tested it with any other SDK. Does this look good?"}, {"count": 7, "tags": [], "creator": "sf@sfritsch.de", "text": "Created attachment 25969\nmake mod_ldap work with Solaris LDAP (also contains APR fix)", "id": 139617, "attachment_id": 25969, "bug_id": 42682, "creation_time": "2010-09-02T07:45:28Z", "time": "2010-09-02T07:45:28Z", "is_private": false}, {"count": 8, "tags": [], "bug_id": 42682, "text": "(In reply to comment #7)\n> Created attachment 25969 [details]\n> make mod_ldap work with Solaris LDAP (also contains APR fix)\n\nThis patch breaks ldaps with OpenLDAP, so it's not suitable for integration as it is.", "id": 147480, "time": "2011-06-25T11:20:04Z", "creator": "sf@sfritsch.de", "creation_time": "2011-06-25T11:20:04Z", "is_private": false, "attachment_id": null}, {"count": 9, "tags": [], "creator": "minfrin@sharp.fm", "text": "The attached patch makes a number of indiscriminate changes to the APIs for all the supported LDAP toolkits, rather than limiting this to Solaris only. In terms of changes to apr_ldap, the changes suggested by Kevin Richter should be enough to make Solaris support work.\n\nAs for mod_ldap, for some reason this code is only supporting the scenario where SSL is turned on after the client certificates are set with apr_ldap_set_option(). The second scenario, when secure is set by calling apr_ldap_init() with the secure parameter is ignored, through no clear reason that I can see. In theory, fixing this should be as simple as passing ldc->secure into apr_ldap_init() instead of APR_LDAP_NONE.", "id": 147516, "attachment_id": null, "bug_id": 42682, "creation_time": "2011-06-26T23:01:09Z", "time": "2011-06-26T23:01:09Z", "is_private": false}, {"count": 10, "tags": [], "bug_id": 42682, "attachment_id": null, "id": 151926, "time": "2011-12-02T17:50:34Z", "creator": "sf@sfritsch.de", "creation_time": "2011-12-02T17:50:34Z", "is_private": false, "text": "Committed changes that only change behavior for Solaris LDAP:\n\napr 1.5: r1209594\napr 1.4: r1209597\n\nhttpd trunk: r1209601\nhttpd 2.4: r1209604"}]