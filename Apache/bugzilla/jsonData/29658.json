[{"count": 0, "tags": [], "creator": "robert.watkins@suncorp.com.au", "attachment_id": null, "text": "I've attached an example which shows it, but here's the detail. I've got three \nbuild files. The first uses <ant> to invoke the second. The second, in turn, \nuses <subant> to invoke a third (but potentially a heap) build file.\n\nWhen I use either the third or the second build files directly, it works fine. \nWhen I get the first one to invoke it, the basedir for the third script is \nwrong (it's set to the basedir of the second).\n\nExample transcript:\n\nC:\\Temp\\subanttest\\sub\\sub1>ant\nBuildfile: build.xml\n\nbuild:\n     [echo] sub1 base dir=C:\\Temp\\subanttest\\sub\\sub1\n\nBUILD SUCCESSFUL\nTotal time: 0 seconds\nC:\\Temp\\subanttest\\sub\\sub1>cd ..\n\nC:\\Temp\\subanttest\\sub>ant\nBuildfile: build.xml\n\nbuild:\n     [echo] sub base dir=C:\\Temp\\subanttest\\sub\n\nbuild:\n     [echo] sub1 base dir=C:\\Temp\\subanttest\\sub\\sub1\n\nBUILD SUCCESSFUL\nTotal time: 1 second\nC:\\Temp\\subanttest\\sub>cd ..\\main\n\nC:\\Temp\\subanttest\\main>ant\nBuildfile: build.xml\n\nbuild:\n     [echo] main base dir=C:\\Temp\\subanttest\\main\n\nbuild:\n     [echo] sub base dir=C:\\Temp\\subanttest\\sub\n\nbuild:\n     [echo] sub1 base dir=C:\\Temp\\subanttest\\sub\n\nBUILD SUCCESSFUL\nTotal time: 1 second\nC:\\Temp\\subanttest\\main>", "id": 59453, "time": "2004-06-18T02:55:14Z", "bug_id": 29658, "creation_time": "2004-06-18T02:55:14Z", "is_private": false}, {"count": 1, "text": "Created attachment 11882\nExample build scripts that reproduce the problem.", "creator": "robert.watkins@suncorp.com.au", "attachment_id": 11882, "id": 59454, "time": "2004-06-18T02:56:06Z", "bug_id": 29658, "creation_time": "2004-06-18T02:56:06Z", "tags": [], "is_private": false}, {"count": 2, "tags": [], "creator": "peter.reilly@corvil.com", "attachment_id": null, "text": "If you read the <ant> manual page very carefully (i.e as if you were\na lawyer) you may see that is the designed behaviour (I think).\n\nThe ant call in the main directory sets the basedir of the subsequent\nant calls by use of the dir=\"../sub\" attribute. In this case \"basedir\"\nbecomes (I think) a user-like property and is not by default overridden\nby the subant call in the build file in  sub.\n\nTo get the behaviour you want you need to do:\n\n<project name=\"main\" default=\"build\" >\n  <target name=\"build\" >\n    <echo message=\"main base dir=${basedir}\" />\n    <!-- <ant dir=\"../sub\" inheritall=\"false\" /> -->\n    <ant inheritall=\"false\" antfile=\"../sub/build.xml\" />\n  </target>\n</project>\n\nIn your main build file.\n\nI am marking this as WONTFIX, because to change the\nbehaviour would break a lot of build scripts.", "id": 59457, "time": "2004-06-18T07:44:58Z", "bug_id": 29658, "creation_time": "2004-06-18T07:44:58Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 29658, "attachment_id": null, "id": 59479, "time": "2004-06-18T13:06:12Z", "creator": "robert.watkins@suncorp.com.au", "creation_time": "2004-06-18T13:06:12Z", "is_private": false, "text": "Okay, that makes sense; it's probably worth highlighting in the doco for <ant>\nthat setting the basedir treats it like a user-defined property; it wasn't that\nclear.\n\nA quick test showed that calling 'ant -Dbasedir=.' on the second build script\ngave  the same behaviour, so it is consistent.\n\nAnother workaround is to not trust the basedir, but use the ant.file property to\ndetermine the working directory."}]