[{"count": 0, "tags": [], "bug_id": 54936, "is_private": false, "text": "Hi, \nI'm a developer of a static analysis tool canalyze.\nRecently I applied it to httpd-2.4.4\nIt seems some reports are real after by manually checking:\n(I have tried my best to confirming these reports. But I'm not familiar with the source code of httpd. Thus, if there still exist many false alarms, sorry for the trouble. I still hope for your replies!)\n\n1. Use Undefined Value\nfile: ssl_util.c\nfunction: ssl_util_path_check\nAt line 124: if (pcm & SSL_PCM_EXISTS && apr_stat(&finfo, path,\npcm & SSL_PCM_EXISTS may be 0, which leaves finfo uninitialized.\n\nAt line 129 : if (pcm & SSL_PCM_ISREG && finfo.filetype != APR_REG)\nfinfo is directly used.\n\n2. Use Undefined Value\nfile: scoreboard.c\nfunction: ap_find_child_by_pid\nAt line 394: ap_mpm_query(AP_MPMQ_MAX_DAEMONS, &max_daemons_limit);\nmay leaves max_daemons_limit uninitialized when ap_run_mpm_query returns -1.\n\n3. Use Undefined Value\nfile: proxy_util.c\nfunction: proxy_get_host_of_request\nAt line 401: err = ap_proxy_canon_netloc(r->pool, &url, &user, &password, &host, &port);\nhost may not be initialized when ap_proxy_canon_netloc returns \"Invalid host/port\" at line 349.\n\n4. Use Undefined Value\nfile: dbm.c\nfunction: dav_dbm_open\nAt line 167: (void) dav_fs_dir_file_name(resource, &dirpath, &fname);\nfname may not be initialized when dav_fs_dir_file_name returns at line 285: return dav_new_error(ctx->pool, HTTP_INTERNAL_SERVER_ERROR, 0, rv, ...)\n\nThe similar problem occurs at:\nfile: repos.c\nfunction: dav_fs_copymoveset\nline 570: (void) dav_fs_dir_file_name(src, &src_dir, &src_file);\nline 571: (void) dav_fs_dir_file_name(dst, &dst_dir, &dst_file);\n\nfile: repos.c\nfunction: dav_fs_deleteset\nline 623: (void) dav_fs_dir_file_name(resource, &dirpath, &fname);\n\n\nfile: lock.c\nfunction: dav_fs_add_locknull_state\nline 936: (void) dav_fs_dir_file_name(resource, &dirpath, &fname);\ndirpath is not initialized.\n\nfile: lock.c\nfunction: dav_fs_add_locknull_state\nline 936: (void) dav_fs_dir_file_name(resource, &dirpath, &fname);\n\nfile: lock.c\nfunction: dav_fs_get_locknull_members\nline 919: (void) dav_fs_dir_file_name(resource, &dirpath, NULL);\n\n5. Null Pointer\nfile: lock.c\nfunction: dav_fs_save_lock_record\nline 443: (void) dav_dbm_delete(lockdb->info->db, key);\nThe first argument may be null, which is assigned at\n\nline 434: if ((err = dav_fs_really_open_lockdb(lockdb)) != NULL)\nfunction call dav_fs_really_open_lockdb may assign null to lockdb->info->db at\n\nline 307: err = dav_dbm_open_direct(lockdb->info->pool,..., &lockdb->info->db)\nin \n\nfile dbm.c at line 133: *pdb = NULL; \n\n(Also at line 499: if ((err = dav_dbm_store(lockdb->info->db, key, val)) != NULL))\n\n6. Null Pointer\nfile: dbm.c\nfunction: dav_propdb_output_value\nline 535: apr_datum_t key = dav_build_key(db, name);\nkey may be zerod at line 317\n\nline 547: dav_append_prop(db->pool, key.dptr, value.dptr, phdr);\nDirectly uses key.dptr in function dav_append_prop.\n\n7. Null Pointer\nfile: props.c\nfunction: dav_get_props\nline 700: apr_xml_elem *elem = dav_find_child(doc->root, \"prop\");\nCould elem be null?\n\nThe similar problem:\nfile: mod_dav.c\nfunction: dav_cache_badprops\nline 1924: elem = dav_find_child(ctx->doc->root, \"prop\");\n\n\n8. Null pointer\nfile: mod_dav.c\nfunction: dav_failed_proppatch\nline 2159: if (ctx->err == NULL) \nctx->err may be null when exiting the for loop\n\nline 2185: ctx->err->status\ndirectly use it.\n\n9. Null Pointer\nfile: request.c\nfunction: prep_walk_cache\nline 347: note = ap_get_request_note(r, t);\nnote may be null\n\n10. Null pointer\nfile: props.c\nfunction: dav_prop_validate\nline 944: ctx->err = (*priv->provider->patch_validate)(propdb->resource,\npriv->provider may be null, which is checked at\n\nline 934: if (!dav_rw_liveprop(propdb, priv))\nline 291: if (priv->provider != NULL)\n\n11. Null Pointer\nfile: config.c\nfunction: socache_shmcb_create\nline 294: ctx->data_file = path = ap_server_root_relative(p, arg);\npath may be null which is passed to strchr at line 296\n\n12. Memory leak\nfile: util_ldap_cache.c\nfunction: util_ldap_url_node_copy\nline 55: util_ald_free(cache, node->url);\nwhat we should free is node?\n\n13. Use Undefine Value\nfile: mod_authz_dbm.c\nfunction: dbmfilegroup_check_authorization\nline 229: status = get_dbm_grp(r, apr_pstrcat(r->pool, user, \":\", realm, NULL),user, conf->grpfile, conf->dbmtype, &groups);\nThe function call may just return \n\n14. Use Undefined Value\nfile: proxy_util.c\nfunction: proxy_get_host_of_request\nline 401: err = ap_proxy_canon_netloc(r->pool, &url, &user, &password, &host, &port);\nwhen err is not null, host is not initialized.\n\n15. Use Undefined Value\nfile: util_expr_eval.c\nfunction: ap_expr_exec_re\nline 873: ap_expr_exec_ctx(&ctx)\nAs ctx.result_string is uninitialized, of which the use at line 809 is invalid.\n\n16. Null Pointer\nfile: mod_include.c\nfunction: handle_if\nline 2318: ap_ssi_get_tag_and_value(ctx, &tag, &expr, SSI_VALUE_RAW);\nCould tag be assigned as null?\n\nAlso in function handle_elif.\n\n17. Memory leak\nfile: util_ldap_cache_mgr.c\nfunction: util_ald_create_caches\nline 305: if (search_cache && compare_cache && dn_compare_cache)\nWhat if only one or two of caches is null, the other one is not release.", "id": 167090, "time": "2013-05-08T10:17:48Z", "creator": "zhenbo1987@gmail.com", "creation_time": "2013-05-08T10:17:48Z", "attachment_id": null}, {"count": 1, "tags": [], "creator": "christophe.jaillet@wanadoo.fr", "attachment_id": null, "text": "Thanks for the report.\n\n1. Invalid.\nIn the between of line 124 and 129 you can find:\n    AP_DEBUG_ASSERT((pcm & SSL_PCM_EXISTS) ||\n                    !(pcm & (SSL_PCM_ISREG|SSL_PCM_ISDIR|SSL_PCM_ISNONZERO)));\nSo it is expected not to happen.\nThis was introduced in r1180330 in the 2.4.x branch\n\n\n2. r1503990\n\n\n3. r1503991\n\n\n8. Invalid\nAt that point ctx->err can not be NULL. It has been set to err424_set or err424_delete which are allocated in the pool.\nShould the memory allocation fail, we would abort.\n\n\n9. Invalid\nAfter the call you mention, we have\n     AP_DEBUG_ASSERT(note != NULL);\nSo it is expected not to be NULL.", "id": 168633, "time": "2013-07-17T05:51:55Z", "bug_id": 54936, "creation_time": "2013-07-17T05:51:55Z", "is_private": false}, {"text": "12. r1504276\n\n\n13. Invalid\nI think that you mean that 'groups' can be used uninitialized.\nIf 'get_dbm_grp' just return, the status != APR_SUCCESS\nIt is checked at line 231.\nSo we are guaranteed that 'groups' is initialized when it is used.\n\n\n14. same as 3", "tags": [], "bug_id": 54936, "attachment_id": null, "count": 2, "id": 168651, "time": "2013-07-17T21:52:38Z", "creator": "christophe.jaillet@wanadoo.fr", "creation_time": "2013-07-17T21:52:38Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 54936, "attachment_id": null, "id": 169569, "time": "2013-08-19T11:46:52Z", "creator": "trawick@apache.org", "creation_time": "2013-08-19T11:46:52Z", "is_private": false, "text": "#12 is now in the 2.4.x branch (r1515372)"}, {"count": 4, "tags": [], "creator": "christophe.jaillet@wanadoo.fr", "attachment_id": null, "text": "#15 is invalid.\nThe code is guarded by AP_EXPR_FLAG_STRING_RESULT.\n\nSee:\n    AP_DEBUG_ASSERT((info->flags & AP_EXPR_FLAG_STRING_RESULT) == 0);\nin 'ap_expr_exec_re'", "id": 177502, "time": "2014-09-02T09:33:02Z", "bug_id": 54936, "creation_time": "2014-09-02T09:33:02Z", "is_private": false}]