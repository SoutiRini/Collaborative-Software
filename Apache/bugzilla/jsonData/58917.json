[{"count": 0, "tags": [], "bug_id": 58917, "text": "Created attachment 33483\nfile with fixed addContentType method\n\nOur word document already had jpg's in it. Using poi we then tried to add a jpg. Poi changed this to a JPEG and then did not add a new content type.\n\nWhen poi saves an image in the media folder it stores jpg images as JPEGs.it then checks to see if a media type of image/JPEG exists - which it does but for extension jpg. Thus no new content type is added. The word doc is now corrupt. Proposed change attached.\n\nI put this in as major as it was a blocker for me. I realise that it won't be for everyone.", "id": 187934, "time": "2016-01-24T11:20:51Z", "creator": "Scull.sarah@gmail.com", "creation_time": "2016-01-24T11:20:51Z", "is_private": false, "attachment_id": 33483}, {"count": 1, "tags": [], "bug_id": 58917, "attachment_id": null, "text": "Can you produce an actual patch of the proposed changes? Full files tend to get outdated and are hard to review without apllying them locally. See also http://poi.apache.org/guidelines.html", "id": 188064, "time": "2016-01-30T09:34:51Z", "creator": "dominik.stadler@gmx.at", "creation_time": "2016-01-30T09:34:51Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 58917, "attachment_id": null, "text": "I replaced the existing method...\n\n\tpublic void addContentType(PackagePartName partName, String contentType) {\n\t\tboolean defaultCTExists = this.defaultContentType.containsValue(contentType);\n\t\tString extension = partName.getExtension().toLowerCase(Locale.ROOT);\n\t\tif ((extension.length() == 0)\n\t\t\t\t|| (this.defaultContentType.containsKey(extension) && !defaultCTExists))\n\t\t\tthis.addOverrideContentType(partName, contentType);\n\t\telse if (!defaultCTExists)\n\t\t\tthis.addDefaultContentType(extension, contentType);\n\t}\n\nwith...\n\n\tpublic void addContentType(final PackagePartName partName, final String contentType) {\n\t\tfinal String extension = partName.getExtension().toLowerCase(Locale.ROOT);\n\t\tif (extension.length() == 0) {\n\t\t\tthis.addOverrideContentType(partName, contentType);\n\t\t}\n\t\telse {\n\t\t\tfinal String defaultContentType = this.defaultContentType.get(extension);\n\t\t\tif(defaultContentType == null) {\n\t\t\t\tthis.addDefaultContentType(extension, contentType);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif(!defaultContentType.equals(contentType)) {\n\t\t\t\t\tthis.addOverrideContentType(partName, contentType);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\nI built from the release distribution so no svn and ant -f patch.xml does not work. The problem with the original logic is where a default type exists but the extensions differ, as in:\n\nif ((extension.length() == 0) || this.defaultContentType.containsKey(extension) && !defaultCTExists))\n\nI think the logic is now simpler in the modified version...\nIF there is no extension add an override type\nELSE IF there is no default type for the extension add one\nELSE IF default content type differs from the supplied value add an override\n\nYou might feel the need to tidy the nested ifs... depends what you feel looks clearer.", "id": 188233, "time": "2016-02-04T21:41:19Z", "creator": "Scull.sarah@gmail.com", "creation_time": "2016-02-04T21:41:19Z", "is_private": false}, {"count": 3, "attachment_id": null, "bug_id": 58917, "text": "In order to verify the fix we would also need a sample document and image that causes the problem together with a small code-snippet which you use to reproduce the problem. This will make it possible to apply the fix and ensure that it stays fixed in the future.", "id": 188411, "time": "2016-02-14T10:31:36Z", "creator": "dominik.stadler@gmx.at", "creation_time": "2016-02-14T10:31:36Z", "tags": [], "is_private": false}]