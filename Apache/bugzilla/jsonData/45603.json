[{"attachment_id": null, "tags": [], "bug_id": 45603, "text": "StandardWrapper.getRootCause(ServletException) skips up to 20 exceptions even if they define getCause(), and in the process omits plenty of information important for debugging.\n\nFor example, I have a servlet that takes an XML document an input. If an exception is thrown, it wraps it in a second exception which contains a copy of the request XML document (helping me to reproduce the problem). Unfortunately StandardWrapper.getRootCause(ServletException) skips the outer exception and instead only shows me the bottom-most exception. This tells me where the problem occurred but not what input triggered it...\n\nPlease consider modifying StandardWrapper.getRootCause(ServletException) to return the first exception to return a non-null getCause(), essentially removing the \"loops\" variable from the algorithm.\n\nPlease consider copying the Servlet API 2.5 reference implementation in Glassfish that maps \"rootCause\" into \"cause\" in ServletException. This approach leads to fewer problems than the various workarounds that have been implemented over the years.", "count": 0, "id": 119626, "time": "2008-08-08T13:25:59Z", "creator": "cowwoc@bbs.darktech.org", "creation_time": "2008-08-08T13:25:59Z", "is_private": false}, {"count": 1, "tags": [], "creator": "markt@apache.org", "text": "StandardWrapper.getRootCause(ServletException) is doing what it is meant to - getting the the root cause of the problem. If we were to make the change you suggest it would significantly reduce its usefulness and make tracking down the root cause of problems very difficult.\n\nI would suggest that a better approach, and one that would be immune to the differences between the various container implementations, would be to log the information you find useful as part of your exception handling.", "id": 119644, "time": "2008-08-09T08:04:40Z", "bug_id": 45603, "creation_time": "2008-08-09T08:04:40Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 45603, "attachment_id": null, "is_private": false, "id": 119652, "time": "2008-08-09T18:17:02Z", "creator": "cowwoc@bbs.darktech.org", "creation_time": "2008-08-09T18:17:02Z", "text": "Mark,\n\nI appreciate the fact that StandardWrapper.getRootCause(ServletException) is doing what it's supposed to do but I fail to understand the point of skipping 20 levels of exceptions. Wouldn't you get the same information by simply outputting printStackTrace() on the outermost exception? As far as I understand it, all other vendors output the outermost exception when it gets thrown.\n\nIs it possible for Tomcat to output both exceptions (the current one and the outermost one) or at least make it configurable via System properties?"}]