[{"count": 0, "tags": [], "bug_id": 27547, "is_private": false, "text": "This may not a bug, but make us difficult to deploy our software.\n\nOur web site basically is a remote accessable file system.\nUser can download the selected file to client's local machine.\nI implement a simple jsp file called get.jsp to allow user to select a file and\ndown load the file.\n\nget.jsp\n==========\n<%@ page import=\"java.io.*\" %>\n<%\ntry {\n   //user input: filename\n   String filename = request.getParameter(\"filename\");\n   String destName = new File(filename).getName();\n   response.setContentType(\"application/x-download\");\n   response.setHeader(\"Content-Disposition\", \"attachment; filename=\" + destName);\n   FileInputStream in = new FileInputStream(filename);\n   byte[] buff = new byte[8192];\n   int len;\n   while ((len = in.read(buff)) != -1)\n       out.write(new String(buff, 0, len));\n} catch (Exception e) {\n   out.write(e.getMessage());\n}\n%>\n======= end of get.jsp =======\n\nbut, there are 2 extra '\\n' on the tomcat work area get_jsp.java file.\nif I remove those 2 lines from the java program then the output file is\nidentical with the original file.\nI also notice difference between tomcat 4.1.27 and 5.0.18\nout.write(\"\\n\");\n5.0.18 changes double quotes to single quotes.\n\n\n==== get_jsp.java for tomcat 5.0.18 ========\n\npackage org.apache.jsp;\n\nimport javax.servlet.*;\nimport javax.servlet.http.*;\nimport javax.servlet.jsp.*;\nimport java.io.*;\n\npublic final class get_jsp extends org.apache.jasper.runtime.HttpJspBase\n    implements org.apache.jasper.runtime.JspSourceDependent {\n\n  private static java.util.Vector _jspx_dependants;\n\n  public java.util.List getDependants() {\n    return _jspx_dependants;\n  }\n\n  public void _jspService(HttpServletRequest request, HttpServletResponse response)\n        throws java.io.IOException, ServletException {\n\n    JspFactory _jspxFactory = null;\n    PageContext pageContext = null;\n    HttpSession session = null;\n    ServletContext application = null;\n    ServletConfig config = null;\n    JspWriter out = null;\n    Object page = this;\n    JspWriter _jspx_out = null;\n\n\n    try {\n      _jspxFactory = JspFactory.getDefaultFactory();\n      response.setContentType(\"text/html\");\n      pageContext = _jspxFactory.getPageContext(this, request, response,\n                        null, true, 8192, true);\n      application = pageContext.getServletContext();\n      config = pageContext.getServletConfig();\n      session = pageContext.getSession();\n      out = pageContext.getOut();\n      _jspx_out = out;\n\n      out.write('\\n');<------------ extra statement\n\ntry {\n   //user input: filename\n   String filename = request.getParameter(\"filename\");\n   String destName = new File(filename).getName();\n   response.setContentType(\"application/x-download\");\n   response.setHeader(\"Content-Disposition\", \"attachment; filename=\" + destName);\n   FileInputStream in = new FileInputStream(filename);\n   byte[] buff = new byte[8192];\n   int len;\n   while ((len = in.read(buff)) != -1)\n       out.write(new String(buff, 0, len));\n} catch (Exception e) {\n   out.write(e.getMessage());\n}\n\n      out.write('\\n');<------------ extra statement\n    } catch (Throwable t) {\n      if (!(t instanceof SkipPageException)){\n        out = _jspx_out;\n        if (out != null && out.getBufferSize() != 0)\n          out.clearBuffer();\n        if (pageContext != null) pageContext.handlePageException(t);\n      }\n    } finally {\n      if (_jspxFactory != null) _jspxFactory.releasePageContext(pageContext);\n    }\n  }\n}", "id": 53742, "time": "2004-03-09T19:24:00Z", "creator": "Dah.h.Chang@jpl.nasa.gov", "creation_time": "2004-03-09T19:24:00Z", "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 27547, "is_private": false, "text": "Not a bug. To get around this use a servlet or clear the buffer when starting\nyour java snippet. Then also use a return statement in your jsp before the java\nsnippet ends.", "id": 53747, "time": "2004-03-09T19:54:33Z", "creator": "funkman@joedog.org", "creation_time": "2004-03-09T19:54:33Z", "attachment_id": null}, {"count": 2, "tags": [], "creator": "kin-man.chung@sun.com", "is_private": false, "id": 53758, "attachment_id": null, "bug_id": 27547, "creation_time": "2004-03-09T21:35:43Z", "time": "2004-03-09T21:35:43Z", "text": "The \"extra\" '\\n' are from the the linefeed char at the end of the page directive\nand the scriptlet and are actually required by the spec.  Try setting the\ncompiler option \"trimSpaces\" to true."}]