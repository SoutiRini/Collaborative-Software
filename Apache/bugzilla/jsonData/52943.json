[{"count": 0, "tags": [], "text": "Apache Authentication docs are only useful for protecting static content. They are  missing critical information for web applications about how the server passes user information (user name, and perhaps something else) further.\n\nThere should be a chapter for web application developers that at the very least describes de-facto REMOTE_USER variable standard - when it is set, what are the values etc.\n\nhttp://httpd.apache.org/docs/2.0/howto/auth.html\nhttp://httpd.apache.org/docs/2.0/mod/mod_auth.html", "attachment_id": null, "id": 155041, "creator": "techtonik@gmail.com", "time": "2012-03-19T09:12:27Z", "bug_id": 52943, "creation_time": "2012-03-19T09:12:27Z", "is_private": false}, {"count": 1, "tags": [], "text": "REMOTE_USER isn't part of apache.  It's defined by the CGI standard (and widely adopted by frameworks derived from CGI), but could equally take an entirely different form in someone else's application framework.  It's not apache's business to document CGI.\n\nLeaving this enhancement request open just in case someone feels like adding to the HOWTO, where it arguably has a place.", "attachment_id": null, "id": 155042, "creator": "nick@webthing.com", "time": "2012-03-19T10:07:54Z", "bug_id": 52943, "creation_time": "2012-03-19T10:07:54Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 52943, "attachment_id": null, "id": 155086, "time": "2012-03-20T07:02:23Z", "creator": "techtonik@gmail.com", "creation_time": "2012-03-20T07:02:23Z", "is_private": false, "text": "What is the standard way to pass username from Apache to non-CGI web-applications then?"}, {"count": 3, "tags": [], "bug_id": 52943, "attachment_id": null, "id": 155088, "time": "2012-03-20T07:35:55Z", "creator": "humbedooh@apache.org", "creation_time": "2012-03-20T07:35:55Z", "is_private": false, "text": "The standard way is through REMOTE_USER ( as per http://www.ietf.org/rfc/rfc3875 )\n\nThe non-standard way is \"meh\". If you are referring to modules such as mod_php, mod_lua etc, then it's entirely up to that specific module how it will implement such a feature.\n\nGetting down to basics, the browser will, in case of a regular HTTP auth, send an Authorization request header with the username and password encoded in the string. Apache will then pass on the string (inside a table called headers_in) to whichever module, handler, filter, you name it, that wishes to process the requested URL. Some modules will decode the username (and possibly the password), while others will just pass on the encoded string, it's entirely up to them.\n\nHaving said that; As Nick pointed out, this question is more a question of how CGI and HTTP protocols work than it is how Apache's HTTP Server works, and should probably best be answered in such forums instead."}, {"count": 4, "tags": [], "creator": "humbedooh@apache.org", "is_private": false, "text": "I am closing this ticket as WONTFIX.\nAuthentication in CGI environments is defined in the CGI protocol (http://www.ietf.org/rfc/rfc3875 )\nAuthentication in the only non-CGI scripting language httpd supports out-of-the-box, Lua, is documented at http://httpd.apache.org/docs/current/mod/mod_lua.html\nFor documentation on how it works with third-party modules, refer to their respective docs.", "id": 155437, "time": "2012-03-31T12:02:17Z", "bug_id": 52943, "creation_time": "2012-03-31T12:02:17Z", "attachment_id": null}]