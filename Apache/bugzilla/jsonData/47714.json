[{"count": 0, "tags": [], "bug_id": 47714, "is_private": false, "id": 129819, "attachment_id": null, "creator": "sameem.ahmed@investec.co.za", "creation_time": "2009-08-20T09:04:36Z", "time": "2009-08-20T09:04:36Z", "text": "Hi,\n\nWe are migrating our application to JBoss container version 4.2.x with Apache web server in the front. We are using the mod_jk connector version 1.2.28. Our Apache version is 2.2.6. AJP13 worker is used for communication between web server and Tomcat.\n\nWe have picked up an issue during load testing where the response is being mixed between users - one user is able to see reponse of another.  \n\nIs this a bug in mod_jk?\n\nWe are planning to switch to mod_proxy_ajp. Will it help to resolve this issue?\n\nWe can't take this to production until this issue is resolved. Kindly advice.\n\nThanks & Regards,\nSameem Ahmed"}, {"count": 1, "tags": [], "bug_id": 47714, "attachment_id": null, "text": "AS 4.2.x = jbossweb-2.0.x\njbossweb-2.0.x ~ tc-6.0.x\n\nthe bug could be in mod_jk as well as in the AJP connector, try mod_proxy_ajp if it works then it is most probably a mod_jk bugs otherwise it is in the AJP connector and you could use the jboss forums for help.", "id": 129820, "time": "2009-08-20T09:22:33Z", "creator": "jfclere@gmail.com", "creation_time": "2009-08-20T09:22:33Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 47714, "is_private": false, "id": 132104, "attachment_id": null, "creator": "derek.amelotte@entrust.com", "creation_time": "2009-11-18T12:11:52Z", "time": "2009-11-18T12:11:52Z", "text": "Has this bug where \"responses are being mixed between users\" been confirmed in mod_jk? If so, would it apply to all the previous versions of mod_JK?"}, {"count": 3, "tags": [], "bug_id": 47714, "text": "1.2.21 can exhibit request/response mixing - could be the same issue? One way this can occur is some event that triggers a bug where the http response from tomcat ends up buffered. The next request to that apache worker process will then pick up the previous response from the persistent tcp connection. For this particular type of bug, evidence of an ongoing issue can be seen in a few ways:\n\n1) buffered tcp data between tomcat and apache that stays at the same level - easiest to observe when load is very light - run netstat -a a few times and look for established tcp connections with non 0 data in queues.\n\n2) the responses will be way too fast because they are instant due to previous response already waiting\n\n3) if your using prefork and logging worker process pids, you can look for the pattern by comparing things like response size in logs for URLs served by each pid\n\n4) quiesce the server and then fire a series of requests for a known servlet and verify responses match expected result\n\nA workaround or preventative measure is DisableReuse", "id": 132356, "attachment_id": null, "creator": "kjw@ms.com", "creation_time": "2009-11-26T07:03:34Z", "time": "2009-11-26T07:03:34Z", "is_private": false}, {"count": 4, "tags": [], "creator": "bugzilla@pidster.com", "attachment_id": null, "id": 132358, "time": "2009-11-26T07:18:52Z", "bug_id": 47714, "creation_time": "2009-11-26T07:18:52Z", "is_private": false, "text": "(In reply to comment #0)\n> Hi,\n> \n> We are migrating our application to JBoss container version 4.2.x with Apache\n> web server in the front. We are using the mod_jk connector version 1.2.28. Our\n> Apache version is 2.2.6. AJP13 worker is used for communication between web\n> server and Tomcat.\n> \n> We have picked up an issue during load testing where the response is being\n> mixed between users - one user is able to see reponse of another.  \n\nMight sound like an dumb question, but what are you load testing against?\n\nHave you eliminated the possibility that the application has an error which might cause this?"}, {"count": 5, "tags": [], "creator": "discoversudhir@gmail.com", "attachment_id": null, "id": 132881, "time": "2009-12-16T20:38:24Z", "bug_id": 47714, "creation_time": "2009-12-16T20:38:24Z", "is_private": false, "text": "I too happen to notice the same issue on our production boxes with mod_jk-1.2.28, DisableReuse fixed this issue.\n\nWe are using apache <---> mod_jk-1.2.28 <---AJP13---> tomcat-5.5.23\n\ntomcat logs shows HTTP 302 being returned and apache logs shows HTTP 200\n\nI am trying to reproduce the same on our non-production boxes. The only possible scenario I can think of is the following:\n* mod_jk: Request 1 sent to tomcat got timeout after 2 mins while waiting for a response\n* mod_jk : Request 2 reuses the socket of the Request 1 and reads the response of the Request 1 from tomcat.\n\nPlease let  me know if you think the above scenario is not possible.\n\nWe do have timeouts configured for 2 mins and retries not set(defaults to 2).\n\nWe did see lots of HTTP 400 error messages(Bad Requests) also caused due to mod_jk and got fixed when we used DisableReuse"}, {"count": 6, "tags": [], "creator": "rainer.jung@kippdata.de", "attachment_id": null, "text": "(In reply to comment #5)\n\nWhich platform?\n\nAre you using tcnative aka the APR connector? What happens if you disable it?", "id": 132894, "time": "2009-12-17T02:23:29Z", "bug_id": 47714, "creation_time": "2009-12-17T02:23:29Z", "is_private": false}, {"count": 7, "tags": [], "creator": "discoversudhir@gmail.com", "text": "> Which platform?\n\nLinux (RHEL)\n\n> Are you using tcnative aka the APR connector? What happens if you disable it?\nYes. I am not able to reproduce this in non-production. Can't try this on production boxes :)\n\n---------------------\n<Server>\n  <!-- This enables use of the apache portable runtime if apr package is installed -->\n  <Listener className=\"org.apache.catalina.core.AprLifecycleListener\" SSLEngine=\"on\"/>\n....\n</SERVER>\n---------------------\n\n\nBTW is there a chance that this can cause server side connection aborts too ? We did see couple of them, not sure if its related to mod_jk.", "id": 132924, "time": "2009-12-18T02:57:42Z", "bug_id": 47714, "creation_time": "2009-12-18T02:57:42Z", "is_private": false, "attachment_id": null}, {"count": 8, "tags": [], "bug_id": 47714, "is_private": false, "id": 135674, "attachment_id": null, "creator": "pawel.tucholski@gmail.com", "creation_time": "2010-03-26T15:17:54Z", "time": "2010-03-26T15:17:54Z", "text": "Hi\n\nI think we are facing an issue similiar or same as the described and we have also mod_jk 1.2.28. However we can not reproduce it in the test env or during performance testing.\n\nCould you give me some hint on how to reproduce the issue you were facing?\n\nIs this the scenario to reproduce it?\n\n* mod_jk: Request 1 sent to tomcat got timeout after 2 mins while waiting for a\nresponse\n* mod_jk : Request 2 reuses the socket of the Request 1 and reads the response\nof the Request 1 from tomcat.\n\nThe thing is that we don't set the socket_timeout (default is infinity) so that does not fit to the described scenario.\n\nIs it a true statement that DisableResuse set to false is solving your issue?\n\nCheers\n\nPawel"}, {"count": 9, "tags": [], "creator": "discoversudhir@gmail.com", "text": "> Is it a true statement that DisableResuse set to false is solving your issue?\n\nYes, I have not seen another instance after setting this flag on our production boxes.", "id": 135675, "time": "2010-03-26T15:51:10Z", "bug_id": 47714, "creation_time": "2010-03-26T15:51:10Z", "is_private": false, "attachment_id": null}, {"count": 10, "tags": [], "text": "To follow up Pawels comments in this chain, we went live with DiableReuse recently and it did not resolve the issue for us.\n\nWe may be looking at a similar issue, but perhaps not this bug. We seem to be experiencing resubmition of POST data, rather than response mixing. Data in a previous unrelated POST request is somehow merged with a subsequent request from a different user.\n\nCurrently we still do not know the root cause so can not confirm this is a mod_jk issue.  \n\nIt is still critical for us.", "attachment_id": null, "id": 135744, "creation_time": "2010-03-29T09:53:34Z", "time": "2010-03-29T09:53:34Z", "creator": "paul.hinds@gtech.com", "bug_id": 47714, "is_private": false}, {"count": 11, "tags": [], "creator": "discoversudhir@gmail.com", "attachment_id": null, "id": 135761, "time": "2010-03-29T15:01:32Z", "bug_id": 47714, "creation_time": "2010-03-29T15:01:32Z", "is_private": false, "text": "> We seem to be experiencing resubmition of POST data, rather than response mixing.\n\nJust in case you are not aware ....\n\nmod_jk retries http post requests in case of timeout in getting response from\ntomcat with default configurations(no retries or recovery_options specified).\n\nSee : https://issues.apache.org/bugzilla/show_bug.cgi?id=48400\n\nAs part of the DisableReuse, i did set recovery_options to not retry post data and have not seen this issue after that. May be setting both will fix your issue ?\n\nFor some reason, i was not able to reproduce this behaviour(response swaping) in non-production boxes."}, {"count": 12, "tags": [], "bug_id": 47714, "attachment_id": null, "text": "(In reply to comment #10)\n> Data in a previous unrelated POST request is somehow merged with\n> a subsequent request from a different user.\n\nA general comment and not one aimed at your application - the majority of incidents of this i have seen are from application bugs rather than infrastructure ones. It's very easy to mis-share data in a single process, multi-threaded environment. These will often only reveal themselves under truly concurrent request load from multiple login accounts.\n\nPerhaps it's worth doing something with userids / unique ids / http headers / logging to allow you to match up requests and responses and verify the correct data is being sent back from the application layer.", "id": 135765, "time": "2010-03-29T17:50:15Z", "creator": "kjw@ms.com", "creation_time": "2010-03-29T17:50:15Z", "is_private": false}, {"count": 13, "tags": [], "creator": "paul.hinds@gtech.com", "text": "We have now found out about issues that are resolved in jk .30 that look related, to do with reposting buffers.\n\nWe did not disable retries.\n\n\"mod_jk retries http post requests in case of timeout in getting response from\ntomcat with default configurations(no retries or recovery_options specified).\"\n\nWe will do this anyway, since our application does not like \"retries\", they can (in theory) result in two or more transactions being processed.\n\nI think next test will be with .30 , no reuse, no reties and a new tomcat from JBoss.\n\nBTW: We are pretty sure our application is not at fault.\n\nI will post results of that test when I get them.", "id": 135834, "time": "2010-04-01T06:31:31Z", "bug_id": 47714, "creation_time": "2010-04-01T06:31:31Z", "is_private": false, "attachment_id": null}, {"count": 14, "attachment_id": null, "bug_id": 47714, "text": "#\n# A fatal error has been detected by the Java Runtime Environment:\n#\n#  EXCEPTION_ACCESS_VIOLATION (0xc0000005) at pc=0x48b8e1fe, pid=1412, tid=716\n#\n# JRE version: 6.0_16-b01\n# Java VM: Java HotSpot(TM) Client VM (14.2-b01 mixed mode windows-x86 )\n# Problematic frame:\n# C  [tcnative-1.dll+0xe1fe]\n#\n# If you would like to submit a bug report, please visit:\n#   http://java.sun.com/webapps/bugreport/crash.jsp\n# The crash happened outside the Java Virtual Machine in native code.\n# See problematic frame for where to report the bug.\n#\n\n---------------  T H R E A D  ---------------\n\nCurrent thread (0x48710400):  JavaThread \"http-7000-1\" daemon [_thread_in_native, id=716, stack(0x4a140000,0x4a180000)]\n\nsiginfo: ExceptionCode=0xc0000005, reading address 0x00000034\n\nRegisters:\nEAX=0x00000001, EBX=0x00000000, ECX=0x00000000, EDX=0x00000001\nESP=0x4a17ebd8, EBP=0x4a17ebe0, ESI=0x00000000, EDI=0x48710400\nEIP=0x48b8e1fe, EFLAGS=0x00010246\n\nTop of Stack: (sp=0x4a17ebd8)\n0x4a17ebd8:   48710400 4a17ec1c 4a17ebf8 48b8111f\n0x4a17ebe8:   4a17ebf4 00000001 00000000 00000000\n0x4a17ebf8:   4a17ec28 00934f8f 48710510 4a17ec1c\n0x4a17ec08:   00000001 49d3f6b0 00000000 00000001\n0x4a17ec18:   00000001 42b3f598 48710400 48710400\n0x4a17ec28:   4a17ed28 007d6e48 49d3f6b0 00000000\n0x4a17ec38:   4a17ec5c 48710400 4a17ec5c 6d99918b\n0x4a17ec48:   48710400 6d9991b2 42de44b0 48710400 \n\nInstructions: (pc=0x48b8e1fe)\n0x48b8e1ee:   5d c2 0c 00 83 f8 01 0f 85 80 00 00 00 8b 75 10\n0x48b8e1fe:   8b 46 34 85 c0 74 3a 8b 56 14 c7 42 14 10 00 00 \n\n\nStack: [0x4a140000,0x4a180000],  sp=0x4a17ebd8,  free space=250k\nNative frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)\nC  [tcnative-1.dll+0xe1fe]\nC  [tcnative-1.dll+0x111f]\nJ  org.apache.tomcat.jni.Address.get(IJ)J\nJ  org.apache.coyote.http11.Http11AprProcessor.action(Lorg/apache/coyote/ActionCode;Ljava/lang/Object;)V\nj  org.apache.coyote.Request.action(Lorg/apache/coyote/ActionCode;Ljava/lang/Object;)V+56\nJ  org.apache.catalina.connector.Request.getRemoteAddr()Ljava/lang/String;\nJ  org.apache.catalina.connector.RequestFacade.getRemoteAddr()Ljava/lang/String;\nJ  com.ecolog.generic.Session.getSession(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Ljava/lang/String;)Lcom/ecolog/generic/Session;\nj  org.apache.jsp.warehouse_v3.cartitems_jsp._jspService(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V+71\nj  org.apache.jasper.runtime.HttpJspBase.service(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V+3\nJ  javax.servlet.http.HttpServlet.service(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)V\nj  org.apache.jasper.servlet.JspServletWrapper.service(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Z)V+395\nj  org.apache.jasper.servlet.JspServlet.serviceJspFile(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Ljava/lang/String;Ljava/lang/Throwable;Z)V+134\nj  org.apache.jasper.servlet.JspServlet.service(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V+436\nJ  javax.servlet.http.HttpServlet.service(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)V\nJ  org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)V\nJ  org.apache.catalina.core.ApplicationFilterChain.doFilter(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)V\nJ  org.apache.catalina.core.StandardWrapperValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V\nJ  org.apache.catalina.core.StandardContextValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V\nJ  org.apache.catalina.core.StandardHostValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V\nJ  org.apache.catalina.valves.ErrorReportValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V\nJ  org.apache.catalina.valves.AccessLogValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V\nJ  org.apache.catalina.core.StandardEngineValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V\nJ  org.apache.catalina.connector.CoyoteAdapter.service(Lorg/apache/coyote/Request;Lorg/apache/coyote/Response;)V\nJ  org.apache.coyote.http11.Http11AprProcessor.process(J)Lorg/apache/tomcat/util/net/AprEndpoint$Handler$SocketState;\nJ  org.apache.coyote.http11.Http11AprProtocol$Http11ConnectionHandler.process(J)Lorg/apache/tomcat/util/net/AprEndpoint$Handler$SocketState;\nj  org.apache.tomcat.util.net.AprEndpoint$Worker.run()V+147\nj  java.lang.Thread.run()V+11\nv  ~StubRoutines::call_stub\nV  [jvm.dll+0xecf9c]\nV  [jvm.dll+0x1741e1]\nV  [jvm.dll+0xed167]\nV  [jvm.dll+0xed1dd]\nV  [jvm.dll+0x116290]\nV  [jvm.dll+0x1d0424]\nV  [jvm.dll+0x173e5c]\nC  [MSVCR71.dll+0xb381]\nC  [KERNEL32.dll+0xb3bc]\n\nJava frames: (J=compiled Java code, j=interpreted, Vv=VM code)\nJ  org.apache.tomcat.jni.Address.get(IJ)J\nJ  org.apache.coyote.http11.Http11AprProcessor.action(Lorg/apache/coyote/ActionCode;Ljava/lang/Object;)V\nj  org.apache.coyote.Request.action(Lorg/apache/coyote/ActionCode;Ljava/lang/Object;)V+56\nJ  org.apache.catalina.connector.Request.getRemoteAddr()Ljava/lang/String;\nJ  org.apache.catalina.connector.RequestFacade.getRemoteAddr()Ljava/lang/String;\nJ  com.ecolog.generic.Session.getSession(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Ljava/lang/String;)Lcom/ecolog/generic/Session;\nj  org.apache.jsp.warehouse_v3.cartitems_jsp._jspService(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V+71\nj  org.apache.jasper.runtime.HttpJspBase.service(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V+3\nJ  javax.servlet.http.HttpServlet.service(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)V\nj  org.apache.jasper.servlet.JspServletWrapper.service(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Z)V+395\nj  org.apache.jasper.servlet.JspServlet.serviceJspFile(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Ljava/lang/String;Ljava/lang/Throwable;Z)V+134\nj  org.apache.jasper.servlet.JspServlet.service(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V+436\nJ  javax.servlet.http.HttpServlet.service(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)V\nJ  org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)V\nJ  org.apache.catalina.core.ApplicationFilterChain.doFilter(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)V\nJ  org.apache.catalina.core.StandardWrapperValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V\nJ  org.apache.catalina.core.StandardContextValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V\nJ  org.apache.catalina.core.StandardHostValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V\nJ  org.apache.catalina.valves.ErrorReportValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V\nJ  org.apache.catalina.valves.AccessLogValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V\nJ  org.apache.catalina.core.StandardEngineValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V\nJ  org.apache.catalina.connector.CoyoteAdapter.service(Lorg/apache/coyote/Request;Lorg/apache/coyote/Response;)V\nJ  org.apache.coyote.http11.Http11AprProcessor.process(J)Lorg/apache/tomcat/util/net/AprEndpoint$Handler$SocketState;\nJ  org.apache.coyote.http11.Http11AprProtocol$Http11ConnectionHandler.process(J)Lorg/apache/tomcat/util/net/AprEndpoint$Handler$SocketState;\nj  org.apache.tomcat.util.net.AprEndpoint$Worker.run()V+147\nj  java.lang.Thread.run()V+11\nv  ~StubRoutines::call_stub\n\n---------------  P R O C E S S  ---------------\n\nJava Threads: ( => current thread )\n  0x4906ec00 JavaThread \"ajp-8009-1\" daemon [_thread_blocked, id=204, stack(0x4c240000,0x4c280000)]\n  0x4919a800 JavaThread \"http-7000-13\" daemon [_thread_blocked, id=5484, stack(0x4c1c0000,0x4c200000)]\n  0x4919a400 JavaThread \"http-7000-12\" daemon [_thread_blocked, id=5480, stack(0x4c180000,0x4c1c0000)]\n  0x490ad400 JavaThread \"http-7000-11\" daemon [_thread_blocked, id=3920, stack(0x4c140000,0x4c180000)]\n  0x48fc8400 JavaThread \"http-7000-10\" daemon [_thread_blocked, id=3876, stack(0x4c100000,0x4c140000)]\n  0x48ebd400 JavaThread \"http-7000-9\" daemon [_thread_blocked, id=3832, stack(0x4c0c0000,0x4c100000)]\n  0x48ebcc00 JavaThread \"http-7000-8\" daemon [_thread_blocked, id=3828, stack(0x4c080000,0x4c0c0000)]\n  0x49022800 JavaThread \"http-7000-7\" daemon [_thread_blocked, id=1056, stack(0x4c040000,0x4c080000)]\n  0x48f24400 JavaThread \"http-7000-6\" daemon [_thread_blocked, id=584, stack(0x4a800000,0x4a840000)]\n  0x48b25400 JavaThread \"AWT-Windows\" daemon [_thread_in_native, id=3640, stack(0x4a7c0000,0x4a800000)]\n  0x48e7ac00 JavaThread \"Java2D Disposer\" daemon [_thread_blocked, id=2052, stack(0x4a740000,0x4a780000)]\n  0x48b39400 JavaThread \"http-7000-5\" daemon [_thread_blocked, id=976, stack(0x4a700000,0x4a740000)]\n  0x48aa6400 JavaThread \"http-7000-4\" daemon [_thread_blocked, id=1696, stack(0x4a6c0000,0x4a700000)]\n  0x48f26400 JavaThread \"http-7000-3\" daemon [_thread_blocked, id=1652, stack(0x4a680000,0x4a6c0000)]\n  0x48afe800 JavaThread \"http-7000-2\" daemon [_thread_blocked, id=1064, stack(0x4a640000,0x4a680000)]\n=>0x48710400 JavaThread \"http-7000-1\" daemon [_thread_in_native, id=716, stack(0x4a140000,0x4a180000)]\n  0x48e68400 JavaThread \"ajp-8009-CometPoller-7\" daemon [_thread_blocked, id=3592, stack(0x4a100000,0x4a140000)]\n  0x48e67000 JavaThread \"ajp-8009-CometPoller-6\" daemon [_thread_blocked, id=3588, stack(0x4a0c0000,0x4a100000)]\n  0x48e62400 JavaThread \"ajp-8009-CometPoller-5\" daemon [_thread_blocked, id=3584, stack(0x4a080000,0x4a0c0000)]\n  0x48e60c00 JavaThread \"ajp-8009-CometPoller-4\" daemon [_thread_blocked, id=3304, stack(0x4a040000,0x4a080000)]\n  0x48e5f800 JavaThread \"ajp-8009-CometPoller-3\" daemon [_thread_blocked, id=3316, stack(0x4a000000,0x4a040000)]\n  0x48e5e000 JavaThread \"ajp-8009-CometPoller-2\" daemon [_thread_blocked, id=640, stack(0x49fc0000,0x4a000000)]\n  0x48e59400 JavaThread \"ajp-8009-CometPoller-1\" daemon [_thread_blocked, id=1608, stack(0x49f80000,0x49fc0000)]\n  0x48e58000 JavaThread \"ajp-8009-CometPoller-0\" daemon [_thread_blocked, id=1660, stack(0x49f40000,0x49f80000)]\n  0x48e56800 JavaThread \"ajp-8009-Poller-7\" daemon [_thread_blocked, id=644, stack(0x49f00000,0x49f40000)]\n  0x48e55400 JavaThread \"ajp-8009-Poller-6\" daemon [_thread_blocked, id=632, stack(0x49ec0000,0x49f00000)]\n  0x48e2c800 JavaThread \"ajp-8009-Poller-5\" daemon [_thread_blocked, id=1668, stack(0x49e80000,0x49ec0000)]\n  0x48b53000 JavaThread \"ajp-8009-Poller-4\" daemon [_thread_blocked, id=636, stack(0x49a40000,0x49a80000)]\n  0x48b51800 JavaThread \"ajp-8009-Poller-3\" daemon [_thread_blocked, id=3364, stack(0x49a00000,0x49a40000)]\n  0x48b50400 JavaThread \"ajp-8009-Poller-2\" daemon [_thread_blocked, id=3368, stack(0x499c0000,0x49a00000)]\n  0x48ae2c00 JavaThread \"ajp-8009-Poller-1\" daemon [_thread_blocked, id=3372, stack(0x49980000,0x499c0000)]\n  0x48ae1c00 JavaThread \"ajp-8009-Poller-0\" daemon [_thread_blocked, id=3376, stack(0x49940000,0x49980000)]\n  0x48b14400 JavaThread \"ajp-8009-Acceptor-0\" daemon [_thread_blocked, id=3380, stack(0x49900000,0x49940000)]\n  0x48a66800 JavaThread \"http-7000-Sendfile-0\" daemon [_thread_blocked, id=3392, stack(0x498c0000,0x49900000)]\n  0x48a65400 JavaThread \"http-7000-CometPoller-7\" daemon [_thread_blocked, id=3404, stack(0x49880000,0x498c0000)]\n  0x489f3c00 JavaThread \"http-7000-CometPoller-6\" daemon [_thread_blocked, id=3396, stack(0x49840000,0x49880000)]\n  0x489f2400 JavaThread \"http-7000-CometPoller-5\" daemon [_thread_blocked, id=3400, stack(0x49800000,0x49840000)]\n  0x48e50000 JavaThread \"http-7000-CometPoller-4\" daemon [_thread_blocked, id=3408, stack(0x497c0000,0x49800000)]\n  0x48e4b800 JavaThread \"http-7000-CometPoller-3\" daemon [_thread_blocked, id=3412, stack(0x49780000,0x497c0000)]\n  0x48a62c00 JavaThread \"http-7000-CometPoller-2\" daemon [_thread_blocked, id=3416, stack(0x49740000,0x49780000)]\n  0x48a61400 JavaThread \"http-7000-CometPoller-1\" daemon [_thread_blocked, id=3420, stack(0x49700000,0x49740000)]\n  0x489e9c00 JavaThread \"http-7000-CometPoller-0\" daemon [_thread_blocked, id=3428, stack(0x496c0000,0x49700000)]\n  0x489e8800 JavaThread \"http-7000-Poller-7\" daemon [_thread_blocked, id=3424, stack(0x49680000,0x496c0000)]\n  0x48a71400 JavaThread \"http-7000-Poller-6\" daemon [_thread_blocked, id=908, stack(0x49640000,0x49680000)]\n  0x48a70400 JavaThread \"http-7000-Poller-5\" daemon [_thread_blocked, id=3432, stack(0x49400000,0x49440000)]\n  0x48657800 JavaThread \"http-7000-Poller-4\" daemon [_thread_blocked, id=3440, stack(0x493c0000,0x49400000)]\n  0x48656000 JavaThread \"http-7000-Poller-3\" daemon [_thread_blocked, id=3564, stack(0x49380000,0x493c0000)]\n  0x4871ec00 JavaThread \"http-7000-Poller-2\" daemon [_thread_blocked, id=3568, stack(0x49340000,0x49380000)]\n  0x4871d400 JavaThread \"http-7000-Poller-1\" daemon [_thread_blocked, id=3560, stack(0x49300000,0x49340000)]\n  0x48a35c00 JavaThread \"http-7000-Poller-0\" daemon [_thread_blocked, id=3572, stack(0x492c0000,0x49300000)]\n  0x489f0400 JavaThread \"http-7000-Acceptor-0\" daemon [_thread_blocked, id=3576, stack(0x49280000,0x492c0000)]\n  0x48706800 JavaThread \"Thread-1\" [_thread_blocked, id=2152, stack(0x48940000,0x48980000)]\n  0x486cfc00 JavaThread \"Low Memory Detector\" daemon [_thread_blocked, id=2084, stack(0x488c0000,0x48900000)]\n  0x486ca400 JavaThread \"CompilerThread0\" daemon [_thread_blocked, id=1596, stack(0x48880000,0x488c0000)]\n  0x486c8c00 JavaThread \"Attach Listener\" daemon [_thread_blocked, id=1928, stack(0x48840000,0x48880000)]\n  0x486c7800 JavaThread \"Signal Dispatcher\" daemon [_thread_blocked, id=1920, stack(0x48800000,0x48840000)]\n  0x486b4400 JavaThread \"Finalizer\" daemon [_thread_blocked, id=1768, stack(0x487c0000,0x48800000)]\n  0x486b2c00 JavaThread \"Reference Handler\" daemon [_thread_blocked, id=1764, stack(0x48780000,0x487c0000)]\n  0x00546400 JavaThread \"main\" [_thread_in_native, id=1416, stack(0x00440000,0x00480000)]\n\nOther Threads:\n  0x486afc00 VMThread [stack: 0x48740000,0x48780000] [id=1760]\n  0x486d2800 WatcherThread [stack: 0x48900000,0x48940000] [id=2088]\n\nVM state:not at safepoint (normal execution)\n\nVM Mutex/Monitor currently owned by a thread: None\n\nHeap\n def new generation   total 36352K, used 5720K [0x02600000, 0x04d70000, 0x074c0000)\n  eden space 32320K,  12% used [0x02600000, 0x029c9d60, 0x04590000)\n  from space 4032K,  45% used [0x04980000, 0x04b4c600, 0x04d70000)\n  to   space 4032K,   0% used [0x04590000, 0x04590000, 0x04980000)\n tenured generation   total 483968K, used 220495K [0x074c0000, 0x24d60000, 0x42600000)\n   the space 483968K,  45% used [0x074c0000, 0x14c13c50, 0x14c13e00, 0x24d60000)\n compacting perm gen  total 27648K, used 27539K [0x42600000, 0x44100000, 0x46600000)\n   the space 27648K,  99% used [0x42600000, 0x440e4d98, 0x440e4e00, 0x44100000)\nNo shared spaces configured.\n\nDynamic libraries:\n0x00400000 - 0x0040f000 \tC:\\Tomcat\\bin\\tomcat6.exe\n0x77f80000 - 0x77ffc000 \tC:\\WINNT\\system32\\ntdll.dll\n0x7c570000 - 0x7c624000 \tC:\\WINNT\\system32\\KERNEL32.dll\n0x77e10000 - 0x77e6f000 \tC:\\WINNT\\system32\\USER32.dll\n0x77f40000 - 0x77f7d000 \tC:\\WINNT\\system32\\GDI32.dll\n0x7c2d0000 - 0x7c335000 \tC:\\WINNT\\system32\\ADVAPI32.dll\n0x77d30000 - 0x77d9f000 \tC:\\WINNT\\system32\\RPCRT4.dll\n0x78000000 - 0x78045000 \tC:\\WINNT\\system32\\MSVCRT.dll\n0x7cf30000 - 0x7d176000 \tC:\\WINNT\\system32\\SHELL32.dll\n0x70a70000 - 0x70ad6000 \tC:\\WINNT\\system32\\SHLWAPI.dll\n0x71710000 - 0x71794000 \tC:\\WINNT\\system32\\COMCTL32.dll\n0x6d800000 - 0x6da8b000 \tC:\\Java\\jre6\\bin\\client\\jvm.dll\n0x77570000 - 0x775a0000 \tC:\\WINNT\\system32\\WINMM.dll\n0x7c360000 - 0x7c3b6000 \tC:\\WINNT\\system32\\MSVCR71.dll\n0x6d7b0000 - 0x6d7bc000 \tC:\\Java\\jre6\\bin\\verify.dll\n0x6d330000 - 0x6d34f000 \tC:\\Java\\jre6\\bin\\java.dll\n0x6d290000 - 0x6d298000 \tC:\\Java\\jre6\\bin\\hpi.dll\n0x690a0000 - 0x690ab000 \tC:\\WINNT\\system32\\PSAPI.DLL\n0x6d7f0000 - 0x6d7ff000 \tC:\\Java\\jre6\\bin\\zip.dll\n0x48b80000 - 0x48c51000 \tC:\\Tomcat\\bin\\tcnative-1.dll\n0x75030000 - 0x75044000 \tC:\\WINNT\\system32\\WS2_32.dll\n0x75020000 - 0x75028000 \tC:\\WINNT\\system32\\WS2HELP.DLL\n0x74ff0000 - 0x75002000 \tC:\\WINNT\\system32\\MSWSOCK.dll\n0x77980000 - 0x779a5000 \tC:\\WINNT\\system32\\DNSAPI.dll\n0x75050000 - 0x75058000 \tC:\\WINNT\\system32\\WSOCK32.dll\n0x7ca00000 - 0x7ca23000 \tC:\\WINNT\\system32\\rsaenh.dll\n0x7ce20000 - 0x7cf0f000 \tC:\\WINNT\\system32\\ole32.dll\n0x7c0f0000 - 0x7c154000 \tC:\\WINNT\\system32\\USERENV.dll\n0x7c740000 - 0x7c7cc000 \tC:\\WINNT\\system32\\CRYPT32.dll\n0x77430000 - 0x77441000 \tC:\\WINNT\\system32\\MSASN1.dll\n0x74fd0000 - 0x74fed000 \tC:\\WINNT\\system32\\msafd.dll\n0x75010000 - 0x75017000 \tC:\\WINNT\\System32\\wshtcpip.dll\n0x6d610000 - 0x6d623000 \tC:\\Java\\jre6\\bin\\net.dll\n0x782c0000 - 0x782cc000 \tC:\\WINNT\\System32\\rnr20.dll\n0x77340000 - 0x77353000 \tC:\\WINNT\\system32\\iphlpapi.dll\n0x77520000 - 0x77525000 \tC:\\WINNT\\system32\\ICMP.dll\n0x77320000 - 0x77337000 \tC:\\WINNT\\system32\\MPRAPI.dll\n0x75150000 - 0x75160000 \tC:\\WINNT\\system32\\SAMLIB.DLL\n0x7cdc0000 - 0x7ce10000 \tC:\\WINNT\\system32\\NETAPI32.DLL\n0x7c340000 - 0x7c34e000 \tC:\\WINNT\\system32\\Secur32.dll\n0x77bf0000 - 0x77c01000 \tC:\\WINNT\\system32\\NTDSAPI.dll\n0x77950000 - 0x7797b000 \tC:\\WINNT\\system32\\WLDAP32.DLL\n0x751c0000 - 0x751c6000 \tC:\\WINNT\\system32\\NETRAP.dll\n0x779b0000 - 0x77a4c000 \tC:\\WINNT\\system32\\OLEAUT32.DLL\n0x773b0000 - 0x773df000 \tC:\\WINNT\\system32\\ACTIVEDS.DLL\n0x77380000 - 0x773a3000 \tC:\\WINNT\\system32\\ADSLDPC.DLL\n0x77830000 - 0x7783e000 \tC:\\WINNT\\system32\\RTUTILS.DLL\n0x77880000 - 0x7790e000 \tC:\\WINNT\\system32\\SETUPAPI.DLL\n0x774e0000 - 0x77514000 \tC:\\WINNT\\system32\\RASAPI32.dll\n0x774c0000 - 0x774d1000 \tC:\\WINNT\\system32\\rasman.dll\n0x77530000 - 0x77552000 \tC:\\WINNT\\system32\\TAPI32.dll\n0x77360000 - 0x77379000 \tC:\\WINNT\\system32\\DHCPCSVC.DLL\n0x777e0000 - 0x777e8000 \tC:\\WINNT\\System32\\winrnr.dll\n0x777f0000 - 0x777f5000 \tC:\\WINNT\\system32\\rasadhlp.dll\n0x6d000000 - 0x6d14a000 \tC:\\Java\\jre6\\bin\\awt.dll\n0x77800000 - 0x7781e000 \tC:\\WINNT\\system32\\WINSPOOL.DRV\n0x76620000 - 0x76631000 \tC:\\WINNT\\system32\\MPR.DLL\n0x75e60000 - 0x75e7a000 \tC:\\WINNT\\system32\\IMM32.dll\n\nVM Arguments:\njvm_args: -Dcatalina.home=C:\\Tomcat -Dcatalina.base=C:\\Tomcat -Djava.endorsed.dirs=C:\\Tomcat\\common\\endorsed -Djava.io.tmpdir=C:\\Tomcat\\temp -Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager -Djava.util.logging.config.file=C:\\Tomcat\\conf\\logging.properties vfprintf -Xms512m -Xmx1024m \njava_command: <unknown>\nLauncher Type: generic\n\nEnvironment Variables:\nPATH=d:\\d2k\\bin;C:\\WINNT\\system32;C:\\WINNT;C:\\WINNT\\System32\\Wbem;C:\\Program Files\\Support Tools\\;d:\\d2k\\jdk\\bin\nOS=Windows_NT\nPROCESSOR_IDENTIFIER=x86 Family 6 Model 7 Stepping 10, GenuineIntel\n\n\n\n---------------  S Y S T E M  ---------------\n\nOS: Windows 2000 Build 2195 Service Pack 4\n\nCPU:total 8 (4 cores per cpu, 1 threads per core) family 6 model 23 stepping 10, cmov, cx8, fxsr, mmx, sse, sse2, sse3, ssse3, sse4.1\n\nMemory: 4k page, physical 2097151k(2097151k free), swap 4194303k(4194303k free)\n\nvm_info: Java HotSpot(TM) Client VM (14.2-b01) for windows-x86 JRE (1.6.0_16-b01), built on Jul 31 2009 11:26:58 by \"java_re\" with MS VC++ 7.1\n\ntime: Wed Mar 31 09:08:33 2010\nelapsed time: 21683 seconds", "id": 135847, "time": "2010-04-02T05:56:02Z", "creator": "nageshwarnagula@gmail.com", "creation_time": "2010-04-02T05:56:02Z", "tags": [], "is_private": false}, {"count": 15, "tags": [], "bug_id": 47714, "is_private": false, "id": 135851, "attachment_id": null, "creator": "knst.kolinko@gmail.com", "creation_time": "2010-04-02T10:06:38Z", "time": "2010-04-02T10:06:38Z", "text": "(In reply to comment #14)\n> #\n> # A fatal error has been detected by the Java Runtime Environment:\n> #\n\nI see that the above is also posted separately, as bug 49038. There is no explanation, how that is related to this issue, so I assume this is submitter's fault to post it here.\n\nHe also changed Product/Component/Version/Platform for this issue.\n\nPlease ignore comment #14, see bug 49038 if you want to follow it. I am resetting Product etc. to their previous values."}, {"count": 16, "tags": [], "creator": "paul.hinds@gtech.com", "attachment_id": null, "text": "FYI \n\nWe are now running succesfully with modjk .30 , no reuse, no reties, and a new tomcat 4.3.0_CP07, provided by JBoss.  \n\nThis combination seems to be OK, and we have not seen further issues in production systems.   I can not confirm that the jk upgrade is what made the difference since we upgraded both modjk and TC at the same time.  \n\nWe were unable to duplicate the issues in test environments.", "id": 137796, "time": "2010-06-22T04:05:20Z", "bug_id": 47714, "creation_time": "2010-06-22T04:05:20Z", "is_private": false}, {"count": 17, "tags": [], "creator": "knst.kolinko@gmail.com", "attachment_id": null, "text": "(In reply to Paul Hinds from comment #16)\nThank you for follow-up.\n\nNo reports of such issues for the current version of mod_jk.\nClosing as WORKSFORME.", "id": 175623, "time": "2014-06-03T22:20:34Z", "bug_id": 47714, "creation_time": "2014-06-03T22:20:34Z", "is_private": false}, {"count": 18, "tags": [], "creator": "vvandoorne@biscom.com", "attachment_id": null, "text": "We are seeing this issue with one of our new products.  This product produces many more requests than previous ones.  We had two instances this week where a users session was misplaced, or there data files showed up in a list within another users browser.\n\nI'm trying to reproduce using a command line tool.  I haven't used JMeter.", "id": 176655, "time": "2014-07-24T14:57:49Z", "bug_id": 47714, "creation_time": "2014-07-24T14:57:49Z", "is_private": false}, {"count": 19, "attachment_id": null, "bug_id": 47714, "text": "My general conclusion in this area is anything that's effectively doing rpc should be using some sort of id to match requests and responses and allow the client to discard/warn/retry on mismatches. This feature can be found in sun rpc from 1988 and probably earlier implementations, it's not a new concept.\n\nThis type of bug where the the wrong response ends up with the client and in this case often the web browser can be extremely hazardous. It's a worryingly common bug on connection based transports, pools of connections and multi-threaded clients.", "id": 176658, "time": "2014-07-24T15:55:20Z", "creator": "kjw@ms.com", "creation_time": "2014-07-24T15:55:20Z", "tags": [], "is_private": false}, {"count": 20, "tags": [], "bug_id": 47714, "is_private": false, "id": 176720, "attachment_id": null, "creator": "vvandoorne@biscom.com", "creation_time": "2014-07-28T18:28:43Z", "time": "2014-07-28T18:28:43Z", "text": "(In reply to Kevin J Walters from comment #19)\n> My general conclusion in this area is anything that's effectively doing rpc\n> should be using some sort of id to match requests and responses and allow\n> the client to discard/warn/retry on mismatches. This feature can be found in\n> sun rpc from 1988 and probably earlier implementations, it's not a new\n> concept.\n> \n> This type of bug where the the wrong response ends up with the client and in\n> this case often the web browser can be extremely hazardous. It's a\n> worryingly common bug on connection based transports, pools of connections\n> and multi-threaded clients.\n\nKevin,\n\nThank you for your advice.  Do your represent Apache?  I.E. Is this Apache.org's official advice to users? \n\nVictor"}, {"count": 21, "tags": [], "bug_id": 47714, "is_private": false, "id": 176723, "attachment_id": null, "creator": "chris@christopherschultz.net", "creation_time": "2014-07-28T19:33:46Z", "time": "2014-07-28T19:33:46Z", "text": "(In reply to Victor from comment #20)\n> Kevin,\n> \n> Thank you for your advice.  Do your represent Apache?  I.E. Is this\n> Apache.org's official advice to users? \n\nThere is no \"Apache.org official advice to users.\" If you wish to discuss this more, please take the discussion to the users' list. It seems the original bug report here has been satisfied. Victor, if you have new evidence that Tomcat and/or mod_jk has a bug, please post them on the users' list and we'll let you know if you should file another bug report.\n\nUsually this kind of thing turns out to be a bug in the web application, but it does not rule-out a but in Tomcat/mod_jk.\n\nResetting resolution to FIXED WORKSFORME."}, {"count": 22, "tags": [], "creator": "ben@ciminc.com", "attachment_id": null, "text": "This needs to be reopened it happens daily on our production system we are using the latest mod_jk 1.2.40\n\nI also turned off all retrying and connection reuse.\n\nswitching to mod_proxy resolves the issue.", "id": 177628, "time": "2014-09-08T14:44:07Z", "bug_id": 47714, "creation_time": "2014-09-08T14:44:07Z", "is_private": false}, {"count": 23, "tags": [], "creator": "discoversudhir@gmail.com", "text": "I was unable to reproduce, but describing the scenario seen just in case it helps in reproducing for others ...\n\nI had seen multiple instances of this happening(Response of one of the previous request sent to another request) on our production servers.\n\nWe were sending wrong Content-Length from Tomcat application(More than the actual length) and our tomcat logs showed the correct response size being written to output channel and Apache logs showed less size. Upon looking at Apache logs, saw that this response length and the served content matched with an earlier request.\n\nFixed it by sending correct Content-Length and disabled connection reuse in mod_jk.", "id": 177629, "time": "2014-09-08T15:05:05Z", "bug_id": 47714, "creation_time": "2014-09-08T15:05:05Z", "is_private": false, "attachment_id": null}, {"count": 24, "tags": [], "bug_id": 47714, "attachment_id": null, "id": 177630, "time": "2014-09-08T15:08:49Z", "creator": "ben@ciminc.com", "creation_time": "2014-09-08T15:08:49Z", "is_private": false, "text": "I found a post about this and the guy was nice enough to post a JMeter script that can reproduce the issue. I have not tested it yet but looks promising.\n\nhttp://jeecookbook.blogspot.com/2013/07/modjk-session-mixed-between-users.html"}, {"count": 25, "tags": [], "creator": "chris@christopherschultz.net", "text": "(In reply to Ben Erridge from comment #22)\n> This needs to be reopened it happens daily on our production system we are\n> using the latest mod_jk 1.2.40\n> \n> I also turned off all retrying and connection reuse.\n> \n> switching to mod_proxy resolves the issue.\n\nWhat version of Tomcat are you using?", "id": 177683, "time": "2014-09-09T16:16:19Z", "bug_id": 47714, "creation_time": "2014-09-09T16:16:19Z", "is_private": false, "attachment_id": null}, {"count": 26, "tags": [], "creator": "ben@ciminc.com", "attachment_id": null, "id": 177687, "time": "2014-09-09T16:44:14Z", "bug_id": 47714, "creation_time": "2014-09-09T16:44:14Z", "is_private": false, "text": "We are using Glassfish V3.1.2.2 in production. We have the same application running in other datacenters with other Load Balancers, none have exhibited this behaviour except the one fronted by Mod_JK.\n\nI have screen shots clearly showing response mix ups. Also because glassfish sends set cookie each response users often take on the identity of other users. This was happening 14-20 times a day. We have a session origin filter which detects when sessions span request IP's but this is not always effective when many users have the same source ip.\n\nOnce we switched to mod_proxy this never happens.\n\nI much prefer mod_jk to mod_proxy so I am happy to provide any details necessary to getting to the bottom of this.\n\nI did setup a test platform and make a simple JMeter test but have been unsuccessful in replicating the issue. Our production environment is much more complex than my test environment was. \n\nAlso I tried to contact  Olivier Schmitt who is the gentlemen who has been successful in replicating this in a test environment; But as yet he has not responded to my inquiry about his test rig."}, {"count": 27, "tags": [], "text": ".", "attachment_id": null, "bug_id": 47714, "id": 178551, "time": "2014-10-17T15:18:03Z", "creator": "rami.stefanidis@gmail.com", "creation_time": "2014-10-17T15:18:03Z", "is_private": false}, {"count": 28, "tags": [], "creator": "p.mouawad@ubik-ingenierie.com", "attachment_id": null, "text": "(In reply to Ben Erridge from comment #24)\n> I found a post about this and the guy was nice enough to post a JMeter\n> script that can reproduce the issue. I have not tested it yet but looks\n> promising.\n> \n> http://jeecookbook.blogspot.com/2013/07/modjk-session-mixed-between-users.\n> html\n\nHi,\nthe jmeter script (session.bsh) is in fact not correct to detect the session mix as it just compared Request jsessionid cookie et response jsession cookie header setting.\nBut this can be a regular case when during a load test 1 tomcat becomes unresponsive, mod_jk will direct the request to another Tomcat leading to creation of a new JSESSIONID and you end up having a \"False Session Mix\".\n\nRegards\nPhilippe M.", "id": 181755, "time": "2015-03-14T14:04:54Z", "bug_id": 47714, "creation_time": "2015-03-14T14:04:54Z", "is_private": false}, {"count": 29, "tags": [], "text": "(In reply to Ben Erridge from comment #26)\n> We are using Glassfish V3.1.2.2 in production. We have the same application\n> running in other datacenters with other Load Balancers, none have exhibited\n> this behaviour except the one fronted by Mod_JK.\n> \n> I have screen shots clearly showing response mix ups. Also because glassfish\n> sends set cookie each response users often take on the identity of other\n> users. This was happening 14-20 times a day. We have a session origin filter\n> which detects when sessions span request IP's but this is not always\n> effective when many users have the same source ip.\n> \n> Once we switched to mod_proxy this never happens.\n> \n> I much prefer mod_jk to mod_proxy so I am happy to provide any details\n> necessary to getting to the bottom of this.\n> \n> I did setup a test platform and make a simple JMeter test but have been\n> unsuccessful in replicating the issue. Our production environment is much\n> more complex than my test environment was. \n> \n> Also I tried to contact  Olivier Schmitt who is the gentlemen who has been\n> successful in replicating this in a test environment; But as yet he has not\n> responded to my inquiry about his test rig.\n\n\nIn fact the blog :\nhttp://jeecookbook.blogspot.fr/2013/07/modjk-session-mixed-between-users.html\ndoes not really reproduce the case as the way of testing the Mix can trigger false positive as per my previous comment at 2015-03-14 14:04:54 UTC.\n\nIf you are really able to reproduce it here, it would be nice to provide a full test case with if possible a simple usable application.\n\nThanks\n\nPhilippe M.", "is_private": false, "bug_id": 47714, "id": 181756, "time": "2015-03-14T14:07:06Z", "creator": "p.mouawad@ubik-ingenierie.com", "creation_time": "2015-03-14T14:07:06Z", "attachment_id": null}, {"count": 30, "attachment_id": null, "bug_id": 47714, "text": "Having reviewed this ticket, my working theory is that this was caused by bug 57485. It would explain why it was observed with mod_jk but no mod_proxy.\n\nGiven that we do not have reproduction steps for this issue I am going to resolve it as fixed.\n\nIf you still see thins issue - or something like in - with mod_jk 1.2.42 onwards please open a new bug and provide as much of the following as possible:\n- steps to reproduce from a clean install\n- network traces (tmpdump, wireshark etc) for the client <-> httpd link and the httpd <-> Tomcat link\n- mod_jk debug log\n- Tomcat and httpd access logs\n- Anything else you think might help to track down the root cause.", "id": 193924, "time": "2016-09-22T13:56:43Z", "creator": "markt@apache.org", "creation_time": "2016-09-22T13:56:43Z", "tags": [], "is_private": false}, {"count": 31, "tags": [], "creator": "p.mouawad@ubik-ingenierie.com", "attachment_id": null, "text": "Hello Mark,\nWhat's the expected release date for mod_jk 1.2.42 ?\nThanks", "id": 193926, "time": "2016-09-22T14:10:41Z", "bug_id": 47714, "creation_time": "2016-09-22T14:10:41Z", "is_private": false}, {"count": 32, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "id": 193930, "time": "2016-09-22T14:35:23Z", "bug_id": 47714, "creation_time": "2016-09-22T14:35:23Z", "is_private": false, "text": "Possibly as early as next week. Very likely within the next month. Exact timing will depend on other demands on my time. Watch the dev list for more info."}]