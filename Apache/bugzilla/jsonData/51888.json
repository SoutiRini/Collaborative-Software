[{"count": 0, "tags": [], "bug_id": 51888, "attachment_id": 27584, "text": "Created attachment 27584\nSample dump with deadlock\n\nHave see occasional deadlocks when stopping a test plan with multiple HC4 test samplers.\n\nThe cause of the deadlock may be due to HC4 - see https://issues.apache.org/jira/browse/HTTPCLIENT-1127 - but it's not yet clear why JMeter appears to be running threadFinished when interrupt is still active. See attached dump.", "id": 149725, "time": "2011-09-25T11:39:17Z", "creator": "sebb@apache.org", "creation_time": "2011-09-25T11:39:17Z", "is_private": false}, {"count": 1, "tags": [], "creator": "p.mouawad@ubik-ingenierie.com", "text": "Created attachment 27587\nThread Dump Of Issue", "id": 149743, "time": "2011-09-26T07:48:13Z", "bug_id": 51888, "creation_time": "2011-09-26T07:48:13Z", "is_private": false, "attachment_id": 27587}, {"count": 2, "tags": [], "bug_id": 51888, "attachment_id": 27588, "text": "Created attachment 27588\nLog File of test that generates issue", "id": 149744, "time": "2011-09-26T07:48:48Z", "creator": "p.mouawad@ubik-ingenierie.com", "creation_time": "2011-09-26T07:48:48Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 51888, "attachment_id": 27589, "text": "Created attachment 27589\nTest Case that produced Deadlock\n\nHello,\nI reproduced by One run the deadlock.\nJust add a mirror server on 8081 and run test case.\nWhen number of Running Threads reaches 40, call stop, deadlock occurs.\n\nRegards\nPhilippe Mouawad", "id": 149745, "time": "2011-09-26T07:50:06Z", "creator": "p.mouawad@ubik-ingenierie.com", "creation_time": "2011-09-26T07:50:06Z", "is_private": false}, {"count": 4, "tags": [], "creator": "p.mouawad@ubik-ingenierie.com", "attachment_id": 27590, "id": 149746, "time": "2011-09-26T07:55:17Z", "bug_id": 51888, "creation_time": "2011-09-26T07:55:17Z", "is_private": false, "text": "Created attachment 27590\nLog in DEBUG mode\n\nZip that contains log file in DEBUG mode"}, {"count": 5, "tags": [], "bug_id": 51888, "attachment_id": null, "id": 149747, "time": "2011-09-26T08:25:04Z", "creator": "p.mouawad@ubik-ingenierie.com", "creation_time": "2011-09-26T08:25:04Z", "is_private": false, "text": "Hello,\nFor me the issue is an HTTPClient one.\nIt is not a problem that appears to be running threadFinished when interrupt is still active.\nThe explanation for this would be this kind of sequence:\n1) Stopper thread (Thread-77 in my Thread Dump) first calls StandardJMeterEngine.tellThreadsToStop which calls stop() => Thread is suspended here\n2) \"Thread Group 1-32\" gets stop call , run thread is stopped and we enter threadFinished => Thread is suspended\n3) Stopper thread enters interrupt call and calls abort which is suspended just before AbstractClientConnAdapter.abortConnection\n4) \"Thread Group 1-32\" locks  org.apache.http.impl.conn.SingleClientConnManager through shutdown call\n\nDeadlock occurs.\n\nRegards\nPhilippe Mouawad"}, {"count": 6, "tags": [], "bug_id": 51888, "attachment_id": 27591, "text": "Created attachment 27591\nFix to the issue\n\nHello,\nHere is my fix that should be removed once bug is fixed in HTTPCLient.\n\nTo workaround the pb related to a different sequence of calls on shutdown from HTTPHC4Impl, I synchronize both request.abort(); and the for loop that shutdowns the connection managers of a thread.\n\nIt should not have an important performance impact since it only concerns stop and shutdown sequences.\n\nSince I applied it I never reproduce issue.\nRegards\nPhilippe Mouawad", "id": 149748, "time": "2011-09-26T08:30:14Z", "creator": "p.mouawad@ubik-ingenierie.com", "creation_time": "2011-09-26T08:30:14Z", "is_private": false}, {"count": 7, "tags": [], "creator": "stephane.hoblingre@gmail.com", "text": "Hi,\n\nI don't think the bug is only related to HTTPClient as it appears also (every times) with the DummySampler from our plugins (http://code.google.com/p/jmeter-plugins/). This sampler is basic and defined as \"public class DummySampler extends AbstractSampler\".\n\nThe problem was introduced with 2.5.1, it was working fine with 2.4 and 2.5.\n\nMaybe this info can help to investigate the problem...\n\nStef", "id": 149749, "time": "2011-09-26T09:12:28Z", "bug_id": 51888, "creation_time": "2011-09-26T09:12:28Z", "is_private": false, "attachment_id": null}, {"count": 8, "tags": [], "bug_id": 51888, "attachment_id": null, "id": 149761, "time": "2011-09-26T11:23:20Z", "creator": "sebb@apache.org", "creation_time": "2011-09-26T11:23:20Z", "is_private": false, "text": "(In reply to comment #6)\n> Created attachment 27591 [details]\n> Fix to the issue\n> \n> Hello,\n> Here is my fix that should be removed once bug is fixed in HTTPCLient.\n> \n> To workaround the pb related to a different sequence of calls on shutdown from\n> HTTPHC4Impl, I synchronize both request.abort(); and the for loop that\n> shutdowns the connection managers of a thread.\n> \n> It should not have an important performance impact since it only concerns stop\n> and shutdown sequences.\n>\n> Since I applied it I never reproduce issue.\n\nThat's a neat solution to the HC4 deadlock issue; thanks."}, {"count": 9, "tags": [], "bug_id": 51888, "attachment_id": null, "text": "(In reply to comment #7)\n> Hi,\n> \n> I don't think the bug is only related to HTTPClient as it appears also (every\n> times) with the DummySampler from our plugins\n> (http://code.google.com/p/jmeter-plugins/). This sampler is basic and defined\n> as \"public class DummySampler extends AbstractSampler\".\n> \n> The problem was introduced with 2.5.1, it was working fine with 2.4 and 2.5.\n> \n> Maybe this info can help to investigate the problem...\n\nWhat would really help would be the thread dump and jmeter log file for a deadlock.", "id": 149762, "time": "2011-09-26T11:24:33Z", "creator": "sebb@apache.org", "creation_time": "2011-09-26T11:24:33Z", "is_private": false}, {"count": 10, "tags": [], "bug_id": 51888, "attachment_id": null, "id": 149769, "time": "2011-09-26T16:03:55Z", "creator": "sebb@apache.org", "creation_time": "2011-09-26T16:03:55Z", "is_private": false, "text": "What appears to be the issue is that the interrupt may(In reply to comment #5)\n> Hello,\n> For me the issue is an HTTPClient one.\n> It is not a problem that appears to be running threadFinished when interrupt is\n> still active.\n\nActually, I think this is a general problem; however so far only HC4 seems to be affected by it.\n\n> The explanation for this would be this kind of sequence:\n> 1) Stopper thread (Thread-77 in my Thread Dump) first calls\n> StandardJMeterEngine.tellThreadsToStop which calls stop() => Thread is\n> suspended here\n> 2) \"Thread Group 1-32\" gets stop call , run thread is stopped and we enter\n> threadFinished => Thread is suspended\n> 3) Stopper thread enters interrupt call and calls abort which is suspended just\n> before AbstractClientConnAdapter.abortConnection\n> 4) \"Thread Group 1-32\" locks  org.apache.http.impl.conn.SingleClientConnManager\n> through shutdown call\n\nThe explanation I have is slightly different; threads are S (engine) and T (JMeterThread); numbers are time sequence:\n\nT1) active sample in progress\nS2) interrupt active sample\nT3) sample completes\nS4) [interrupt cleanup in progress]\nT5) thread completes\nS6) [interrupt cleanup still in progress]\nT7) shutdown invoked\n\nI tried adding a short pause between S6 and T7 and that fixed the problem for me, as it allowed the interrupt to complete.\n\nThe fix in comment 6 works because it causes the JMeterThread code to wait until the engine interrupt has finished.\n\nI think the fix actually needs to be applied to JMeterThread instead so it applies to all samplers, not just HC4."}, {"count": 11, "tags": [], "creator": "p.mouawad@ubik-ingenierie.com", "text": "Hello Sebb,\nI think issue (Deadlock) only occurs with HC4 implementation because in this one we use for interrupt  request#abort while in HC3 we use the same method used in shutdown.\n\nMy fix was just for deadlock, by locking a HttpHC4Impl level, I ensure sequence that request.abort and ConnectionManager().shutdown() are never called at the same time which would cause the deadlock.\n\nI am not sure to understand the general issue you are talking about:\n- Is it that interrupt might be called after shutdown ?\n\n\nRegards\nPhilippe Mouawad", "id": 149778, "time": "2011-09-26T20:08:55Z", "bug_id": 51888, "creation_time": "2011-09-26T20:08:55Z", "is_private": false, "attachment_id": null}, {"count": 12, "tags": [], "bug_id": 51888, "attachment_id": null, "id": 149780, "time": "2011-09-26T20:29:38Z", "creator": "sebb@apache.org", "creation_time": "2011-09-26T20:29:38Z", "is_private": false, "text": "(In reply to comment #11)\n> I am not sure to understand the general issue you are talking about:\n> - Is it that interrupt might be called after shutdown ?\n\nNo, the issue is that shutdown might be called before interrupt has finished.\n\nBut I don't think it's sensible to allow interrupt to be called after shutdown either."}, {"count": 13, "tags": [], "bug_id": 51888, "attachment_id": 27599, "text": "Created attachment 27599\nFix to JMeterThread\n\nHello Sebb,\nOk I agree.\n\nHere is my proposition of a patch to ensure interrupt goes to the end before shutdown gets called.\n\nI tested by removing my previous patch and it works.\n\n\nRegards\nPhilippe Mouawad", "id": 149781, "time": "2011-09-26T21:05:40Z", "creator": "p.mouawad@ubik-ingenierie.com", "creation_time": "2011-09-26T21:05:40Z", "is_private": false}, {"count": 14, "tags": [], "bug_id": 51888, "text": "(In reply to comment #13)\n> Created attachment 27599 [details]\n...\n> Here is my proposition of a patch to ensure interrupt goes to the end before\n> shutdown gets called.\n\nThanks, but it's interrupt() that needs to be protected.\n\n> I tested by removing my previous patch and it works.\n\nYes, that will work because stop() happens to be called before interrupt() in this case.\n\nHowever, interrupt() is a public method and could be called from elsewhere without a preceeding stop() call.\n\nNo need to redo the patch, I'm testing one now.", "id": 149784, "time": "2011-09-26T21:36:04Z", "creator": "sebb@apache.org", "creation_time": "2011-09-26T21:36:04Z", "is_private": false, "attachment_id": null}, {"count": 15, "tags": [], "bug_id": 51888, "attachment_id": null, "id": 149785, "time": "2011-09-26T22:49:19Z", "creator": "sebb@apache.org", "creation_time": "2011-09-26T22:49:19Z", "is_private": false, "text": "Patched JMeterThread:\n\nURL: http://svn.apache.org/viewvc?rev=1176077&view=rev\nLog:\nBug 51888 - Occasional deadlock when stopping a testplan\n\nModified:\n   jakarta/jmeter/trunk/src/core/org/apache/jmeter/threads/JMeterThread.java\n   jakarta/jmeter/trunk/xdocs/changes.xml\n\n==\n\nIt would be helpful to have a DummySampler test case that fails on 2.5.1 RC2.\n\nI've been unable to generate deadlocks with DummySampler using either 2.5.1 RC2 or the current revision r1176077 (available from nightly builds dir)"}, {"count": 16, "tags": [], "bug_id": 51888, "attachment_id": null, "id": 149791, "time": "2011-09-27T05:07:13Z", "creator": "stephane.hoblingre@gmail.com", "creation_time": "2011-09-27T05:07:13Z", "is_private": false, "text": "(In reply to comment #15)\n> Patched JMeterThread:\n> \n> URL: http://svn.apache.org/viewvc?rev=1176077&view=rev\n> Log:\n> Bug 51888 - Occasional deadlock when stopping a testplan\n> \n> Modified:\n>    jakarta/jmeter/trunk/src/core/org/apache/jmeter/threads/JMeterThread.java\n>    jakarta/jmeter/trunk/xdocs/changes.xml\n> \n> ==\n> \n> It would be helpful to have a DummySampler test case that fails on 2.5.1 RC2.\n> \n> I've been unable to generate deadlocks with DummySampler using either 2.5.1 RC2\n> or the current revision r1176077 (available from nightly builds dir)\n\nHi,\n\nSorry I was wrong the problem with the DummySampler is not a deadlock, but rather related to Bug 51880 which I reopened and submitted logs/dumps. I have no deadlock, just threads waiting end of rampup phase before shuting down.\n\nStef"}, {"count": 17, "tags": [], "creator": "p.mouawad@ubik-ingenierie.com", "text": "Hello Sebb,\nI tested the fix and for me it introduces an issue:\n- I get the popup saying : \"One or more test threads won't exit; see log file.\"\n\n\nTo reproduce issue , I run with 3 threads on 15 s rampup.\nI let 2 thread start and call stop at that time, you will see that the stopper thread may stay alive.\n\n\nFurthermore I think there is something wrong in the fix:\n- number of lock/unlock don't match, is this regular ?\n- what forbidds stop from taking the lock before interrupt ? for me the latch did it because it was incremented in stop so run thread would be stopped until interrupt released the latch (I agree making that on public method may no be the best) that interrupt would countdown. But here if stop goes faster it will take the lock and interrupt will just wait, or maybe I have missed something.\n\nRegards\nPhilippe Mouawad", "id": 149794, "time": "2011-09-27T07:09:14Z", "bug_id": 51888, "creation_time": "2011-09-27T07:09:14Z", "is_private": false, "attachment_id": null}, {"count": 18, "tags": [], "creator": "sebb@apache.org", "text": "(In reply to comment #17)\n> Hello Sebb,\n> I tested the fix and for me it introduces an issue:\n> - I get the popup saying : \"One or more test threads won't exit; see log file.\"\n> \n> \n> To reproduce issue , I run with 3 threads on 15 s rampup.\n> I let 2 thread start and call stop at that time, you will see that the stopper\n> thread may stay alive.\n\nI don't get the problem. Are you running against the mirror, or a live site?\n\nCan you attach a thread dump and jmeter log (INFO will do)?\n\n> \n> Furthermore I think there is something wrong in the fix:\n> - number of lock/unlock don't match, is this regular ?\n\nThe shutdown code takes the lock but does not release it. As the thread then exits, it should not matter, but we could add an unlock at the end.\n\n> - what forbidds stop from taking the lock before interrupt ? for me the latch\n> did it because it was incremented in stop so run thread would be stopped until\n> interrupt released the latch (I agree making that on public method may no be\n> the best) that interrupt would countdown. But here if stop goes faster it will\n> take the lock and interrupt will just wait, or maybe I have missed something.\n\nstop does not take the lock; interrupt does. \n\nIt rechecks the currentSampler within the lock to ensure it cannot run after shutdown starts - if interrupt thread ran slowly it could see the value was non-null but the main thread could start shutdown before the interrupt lock started. The double-check prevents interrupt running after shutdown.", "id": 149798, "time": "2011-09-27T08:11:58Z", "bug_id": 51888, "creation_time": "2011-09-27T08:11:58Z", "is_private": false, "attachment_id": null}, {"count": 19, "tags": [], "creator": "p.mouawad@ubik-ingenierie.com", "text": "Created attachment 27604\n2 Thread Dumps\n\nHello,\nFirst thread dump was done while interrupt was still going on after I called stop.\nThen after some time threads ended but as you can see interrupt still waiting on lock.\n\nRegards\nPhilippe", "id": 149799, "time": "2011-09-27T08:18:48Z", "bug_id": 51888, "creation_time": "2011-09-27T08:18:48Z", "is_private": false, "attachment_id": 27604}, {"count": 20, "tags": [], "creator": "p.mouawad@ubik-ingenierie.com", "text": "I test with TestPlan and mirror server on 8081.", "id": 149800, "time": "2011-09-27T08:24:00Z", "bug_id": 51888, "creation_time": "2011-09-27T08:24:00Z", "is_private": false, "attachment_id": null}, {"count": 21, "tags": [], "text": "(In reply to comment #19)\n> Created attachment 27604 [details]\n> 2 Thread Dumps\n> \n> Hello,\n> First thread dump was done while interrupt was still going on after I called\n> stop.\n> Then after some time threads ended but as you can see interrupt still waiting\n> on lock.\n\nI see; I'd not considered that.\n\nWhat happens if you call unlock at the end of the JMeterThread shutdown section?\ni.e. at the end of the finally block around lines 308-316.\n\nDoes that allow interrupt to finish?\n\n> Regards\n> Philippe", "attachment_id": null, "bug_id": 51888, "id": 149803, "time": "2011-09-27T08:49:07Z", "creator": "sebb@apache.org", "creation_time": "2011-09-27T08:49:07Z", "is_private": false}, {"count": 22, "tags": [], "creator": "p.mouawad@ubik-ingenierie.com", "text": "Hello Sebb,\nI have finally the scenario that shows that fix does not make stop wait for interrupt.\n\nTo reproduce it:\n1) point to a web facing site (not mirror because Eclipse will go crazy) and configure 3 threads\n2) Start JMeter in Debug mode\n3) Put a breakpoint at line 310 and 585\n4) Start test\n5) When number of threads reaches 2, call stop\n6) Eclipse will stop you at both 310 and 585 and depending on your choice interrupt will run before stop (OK) or stop will run before interrupt (NOT OK)\n\n\nI will attach log file, thread dump.\nRegards\nPhilippe Mouawad", "id": 149805, "time": "2011-09-27T09:00:58Z", "bug_id": 51888, "creation_time": "2011-09-27T09:00:58Z", "is_private": false, "attachment_id": null}, {"count": 23, "tags": [], "bug_id": 51888, "text": "Created attachment 27605\nThread dump showing interrupt holds lock for end of life", "id": 149806, "time": "2011-09-27T09:02:31Z", "creator": "p.mouawad@ubik-ingenierie.com", "creation_time": "2011-09-27T09:02:31Z", "is_private": false, "attachment_id": 27605}, {"count": 24, "tags": [], "bug_id": 51888, "attachment_id": 27606, "text": "Created attachment 27606\nLog file", "id": 149807, "time": "2011-09-27T09:03:34Z", "creator": "p.mouawad@ubik-ingenierie.com", "creation_time": "2011-09-27T09:03:34Z", "is_private": false}, {"count": 25, "tags": [], "bug_id": 51888, "text": "Added fix to release the lock:\n\nURL: http://svn.apache.org/viewvc?rev=1176291&view=rev\nLog:\nRelease the interrupt lock to allow late interrupts to complete\n\nModified:\n   jakarta/jmeter/trunk/src/core/org/apache/jmeter/threads/JMeterThread.java\n\n\nCan you try the test again with this version?\n\n(It's in nightly builds).", "id": 149810, "time": "2011-09-27T09:18:04Z", "creator": "sebb@apache.org", "creation_time": "2011-09-27T09:18:04Z", "is_private": false, "attachment_id": null}, {"count": 26, "tags": [], "creator": "p.mouawad@ubik-ingenierie.com", "attachment_id": null, "id": 149811, "time": "2011-09-27T09:24:52Z", "bug_id": 51888, "creation_time": "2011-09-27T09:24:52Z", "is_private": false, "text": "This time no lock but shutdown of HttpClient Conn Manager occurs before interrupt so I get:\n2011/09/27 11:22:06 WARN  - jmeter.threads.JMeterThread: Caught Exception interrupting sampler: java.lang.NullPointerException\n\n\nTo reproduce, do same scenario as described and wait 3 sec after thread 2 has started before calling stop.\nRegards\nPhilippe"}, {"count": 27, "tags": [], "bug_id": 51888, "attachment_id": null, "id": 149816, "time": "2011-09-27T10:16:00Z", "creator": "sebb@apache.org", "creation_time": "2011-09-27T10:16:00Z", "is_private": false, "text": "(In reply to comment #26)\n> This time no lock but shutdown of HttpClient Conn Manager occurs before\n> interrupt so I get:\n> 2011/09/27 11:22:06 WARN  - jmeter.threads.JMeterThread: Caught Exception\n> interrupting sampler: java.lang.NullPointerException\n\nWhat is the actual NPE?\n\nIt may be in the console.\n\n> \n> To reproduce, do same scenario as described and wait 3 sec after thread 2 has\n> started before calling stop.\n> Regards\n> Philippe"}, {"count": 28, "tags": [], "bug_id": 51888, "attachment_id": null, "text": "I added exception as parameter to logger.warn:\n2011/09/27 12:26:10 WARN  - jmeter.threads.JMeterThread: Caught Exception interrupting sampler: java.lang.NullPointerException java.lang.NullPointerException\n\tat org.apache.jmeter.threads.JMeterThread.interrupt(JMeterThread.java:602)\n\tat org.apache.jmeter.engine.StandardJMeterEngine.tellThreadsToStop(StandardJMeterEngine.java:552)\n\tat org.apache.jmeter.engine.StandardJMeterEngine.access$2(StandardJMeterEngine.java:547)\n\tat org.apache.jmeter.engine.StandardJMeterEngine$StopTest.run(StandardJMeterEngine.java:284)\n\tat java.lang.Thread.run(Thread.java:680)\n\n\nIt's currentSampler that has been nullified by run finally block while interrupt is executing.\nRegards\nPhilippe", "id": 149817, "time": "2011-09-27T10:28:30Z", "creator": "p.mouawad@ubik-ingenierie.com", "creation_time": "2011-09-27T10:28:30Z", "is_private": false}, {"count": 29, "tags": [], "creator": "sebb@apache.org", "text": "(In reply to comment #28)\n> I added exception as parameter to logger.warn:\n> 2011/09/27 12:26:10 WARN  - jmeter.threads.JMeterThread: Caught Exception\n> interrupting sampler: java.lang.NullPointerException\n> java.lang.NullPointerException\n>     at org.apache.jmeter.threads.JMeterThread.interrupt(JMeterThread.java:602)\n>     at\n> org.apache.jmeter.engine.StandardJMeterEngine.tellThreadsToStop(StandardJMeterEngine.java:552)\n>     at\n> org.apache.jmeter.engine.StandardJMeterEngine.access$2(StandardJMeterEngine.java:547)\n>     at\n> org.apache.jmeter.engine.StandardJMeterEngine$StopTest.run(StandardJMeterEngine.java:284)\n>     at java.lang.Thread.run(Thread.java:680)\n> \n> \n> It's currentSampler that has been nullified by run finally block while\n> interrupt is executing.\n\nThe code fetches the the value again, but fails to check it for null. \nThat's a mistake; there should be a null check, which is used to skip the code when shutdown runs before interrup.\nNo wonder there's an NPE...\n\nCommitted another fix; hopefully that's enough now:\n\nURL: http://svn.apache.org/viewvc?rev=1176320&view=rev\nLog:\nForgot to check if currentSampler had been set to null, e.g. by shutdown\n\nModified:\n   jakarta/jmeter/trunk/src/core/org/apache/jmeter/threads/JMeterThread.java", "id": 149818, "time": "2011-09-27T10:49:29Z", "bug_id": 51888, "creation_time": "2011-09-27T10:49:29Z", "is_private": false, "attachment_id": null}, {"count": 30, "tags": [], "text": "Works now, great, thanks.\n\nAlthough Sebb, we can still have shutdown called before interrupt, I thought you thought it was an issue.\n\nRegards\nPhilippe", "attachment_id": null, "bug_id": 51888, "id": 149825, "time": "2011-09-27T11:51:30Z", "creator": "p.mouawad@ubik-ingenierie.com", "creation_time": "2011-09-27T11:51:30Z", "is_private": false}, {"count": 31, "tags": [], "bug_id": 51888, "text": "(In reply to comment #30)\n> Works now, great, thanks.\n> \n> Although Sebb, we can still have shutdown called before interrupt, I thought\n> you thought it was an issue.\n\nThe thread sets currentSampler to null before running shutdown.\n\nSo if interrupt runs afterwards, it will do nothing.\n\nOr do you see a problem with that?", "id": 149827, "time": "2011-09-27T12:01:18Z", "creator": "sebb@apache.org", "creation_time": "2011-09-27T12:01:18Z", "is_private": false, "attachment_id": null}, {"count": 32, "tags": [], "bug_id": 51888, "attachment_id": null, "id": 149828, "time": "2011-09-27T12:19:05Z", "creator": "p.mouawad@ubik-ingenierie.com", "creation_time": "2011-09-27T12:19:05Z", "is_private": false, "text": "It means shutdown of Conn Manager can occur while a sample is running (if server takes some time to respond).\nThis will give an error like this I think:\n2011/09/27 13:50:15 INFO  - org.apache.jmeter.protocol.http.sampler.HTTPHC4Impl$3: I/O exception (java.net.SocketException) caught when connecting to the target host: Software caused connection abort \n2011/09/27 13:50:15 INFO  - org.apache.jmeter.protocol.http.sampler.HTTPHC4Impl$3: Retrying connect \n\n\nTo reproduce put a Breakpoint in org.apache.http.impl.client.DefaultRequestDirector line 393 just before stopping test, then let run() method end, add breakpoint line 323 of JMeterThread and let JMeterThread end then let DefaultRequestDirector go and you will get Error% > 0.\n\nSo it impacts a little the error % but I think it is acceptable.\nPhilippe"}, {"count": 33, "tags": [], "bug_id": 51888, "attachment_id": null, "id": 149830, "time": "2011-09-27T12:44:40Z", "creator": "sebb@apache.org", "creation_time": "2011-09-27T12:44:40Z", "is_private": false, "text": "(In reply to comment #32)\n> It means shutdown of Conn Manager can occur while a sample is running (if\n> server takes some time to respond).\n> This will give an error like this I think:\n> 2011/09/27 13:50:15 INFO  -\n> org.apache.jmeter.protocol.http.sampler.HTTPHC4Impl$3: I/O exception\n> (java.net.SocketException) caught when connecting to the target host: Software\n> caused connection abort \n> 2011/09/27 13:50:15 INFO  -\n> org.apache.jmeter.protocol.http.sampler.HTTPHC4Impl$3: Retrying connect \n\nI think that's a bug in HC4 - it should not retry the connect once the request has been aborted, which is what I think is happening here.\n\n> \n> To reproduce put a Breakpoint in\n> org.apache.http.impl.client.DefaultRequestDirector line 393 just before\n> stopping test, then let run() method end, add breakpoint line 323 of\n> JMeterThread and let JMeterThread end then let DefaultRequestDirector go and\n> you will get Error% > 0.\n> \n> So it impacts a little the error % but I think it is acceptable.\n\nYes, I'm pretty sure that the error will go away when the HC4 bug is fixed.\n\nIt should be permissible to call abort() then shutdown() without generating a connect error message from HC4.\n\nThe hack I added fixes the problem for request retry; I'm hoping I might be able to extend the fix to connect retries."}, {"count": 34, "tags": [], "creator": "p.mouawad@ubik-ingenierie.com", "attachment_id": 27609, "id": 149836, "time": "2011-09-27T14:20:17Z", "bug_id": 51888, "creation_time": "2011-09-27T14:20:17Z", "is_private": false, "text": "Created attachment 27609\nPatch to put unlock in a finally\n\nHello Sebb,\nThen it is OK for me.\nJust a little note, I would put unlock inside a finally to ensure it is executed.\nAttached is the little patch for this.\n\nFrom my side, you can close issue as resolved.\nRegards\nPhilippe Mouawad"}, {"count": 35, "tags": [], "creator": "sebb@apache.org", "attachment_id": null, "id": 149839, "time": "2011-09-27T14:41:51Z", "bug_id": 51888, "creation_time": "2011-09-27T14:41:51Z", "is_private": false, "text": "(In reply to comment #34)\n> Created attachment 27609 [details]\n> Patch to put unlock in a finally\n> \n> Hello Sebb,\n> Then it is OK for me.\n> Just a little note, I would put unlock inside a finally to ensure it is\n> executed.\n> Attached is the little patch for this.\n\nURL: http://svn.apache.org/viewvc?rev=1176398&view=rev\nLog:\nEnsure unlock is called\n\nModified:\n   jakarta/jmeter/trunk/src/core/org/apache/jmeter/threads/JMeterThread.java"}, {"count": 36, "tags": [], "creator": "sebb@apache.org", "attachment_id": null, "id": 149840, "time": "2011-09-27T14:42:44Z", "bug_id": 51888, "creation_time": "2011-09-27T14:42:44Z", "is_private": false, "text": "(In reply to comment #33)\n> \n> The hack I added fixes the problem for request retry; I'm hoping I might be\n> able to extend the fix to connect retries.\n\n\nURL: http://svn.apache.org/viewvc?rev=1176404&view=rev\nLog:\nMore workrounds for HC4 bug\n\nModified:\n   jakarta/jmeter/trunk/src/protocol/http/org/apache/jmeter/protocol/http/sampler/HTTPHC4Impl.java"}, {"count": 37, "tags": [], "creator": "sebb@apache.org", "attachment_id": null, "id": 149841, "time": "2011-09-27T14:43:35Z", "bug_id": 51888, "creation_time": "2011-09-27T14:43:35Z", "is_private": false, "text": "I hope this is now finally resolved."}]