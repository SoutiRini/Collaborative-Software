[{"count": 0, "tags": [], "bug_id": 47467, "attachment_id": null, "is_private": false, "id": 128480, "time": "2009-07-02T05:50:13Z", "creator": "meetaarora3007@gmail.com", "creation_time": "2009-07-02T05:50:13Z", "text": "I have seen a problem in Tomact manager application. According to the Tomcat documentation6.0 \n\nDeploy a Directory or WAR by URL\nDeploy a web application directory or \".war\" file located on the Tomcat server. If no path is specified, the directory name or the war file name without the \".war\" extension is used as the path. The war parameter specifies a URL (including the file: scheme) for either a directory or a web application archive (WAR) file. The supported syntax for a URL referring to a WAR file is described on the Javadocs page for the java.net.JarURLConnection class. Use only URLs that refer to the entire WAR file.\n\nIn this example the web application located in the directory /path/to/foo on the Tomcat server is deployed as the web application context named /footoo. \n\n   \n http://localhost:8080/manager/deploy?path=/footoo&war=file:/path/to/foo\n\n  \n   \n\n\nIn this example the \".war\" file /path/to/bar.war on the Tomcat server is deployed as the web application context named /bar. Notice that there is no path parameter so the context path defaults to the name of the web application archive file without the \".war\" extension. \n\n   \n http://localhost:8080/manager/deploy?war=jar:file:/path/to/bar.war!/\n\n  \nIn the last paragraph, it is written that it is not mandatory to specify path in the manager application i.e it should be by default deployed. But it gives me an error as \" Invalid context path null specified\".\n\nSteps to reproduce the scanerio:\n1. Open manager application\n2. Do not specify anything in ContextPath field.\n3. Enter the path to the war file in the third field.\n\nResult: It gives me the error reported above. Also my application contains an explicit path to it in context.xml.All the settings are default only. \nHere if I give an explicit path in ContextPath field in Manager application it will be deployed successfully."}, {"count": 1, "tags": [], "bug_id": 47467, "is_private": false, "text": "I just investigated a bit in this one and IMHO this bug is realy odd because the documentation in html-manager-howto.xml and o.a.catalina.manager.ManagerServlet is not in sync with what the code does or is designed for.\n\nLet me point that out in detail:\n\n1. The docs are talking about JarURLConnection like syntax for the 'WAR or Directory URL' field in the 'Deploy' section of HTMLManagerServlet* (aka known as war parameter there):\n\n\tjar:file:/c:/myWebapp.war!/ **\n\nIf you look in the code - you will find out - it can only handle java.io.File like file names (with an optional 'file:' prefix): \n\n\tfile:C:/myWebapp.war\n\tfile://C:/myWebapp.war\n\tfile:///C:/myWebapp.war\n\tfile:////C:/myWebapp.war\n\tfile://///C:/myWebapp.war\n\tfile://////C:/myWebapp.war\n\n\tfile:C:/myWebapp\n\tfile://C:/myWebapp\n\tfile:///C:/myWebapp\n\tfile:////C:/myWebapp\n\tfile://///C:/myWebapp\n\tfile://////C:/myWebapp\n\n\tC:/myWebapp.war\n\tC:\\myWebapp.war\n\n\tC:/myWebapp\n\tC:\\myWebapp\n\n\nEvery other filename not ending with '.war' is handled by the code as already exploded directory and gets deployed as such!\n\nBack to the point: The existing code in HTMLManagerServlet and ManagerServlet is unable to handle JarURLConnection like syntax like following one mentioned above: jar:file:/c:/myWebapp.war!/ To make it crystal clear here, the only type of URL they can handle are 'file:' URLs based on java.io.File(String) at all.\n\n* Note: HTMLManagerServlet is a sub class of ManagerServlet which gets used by the Ant DeployTask as well. So there are common implications.\n\n\n2.) On the one hand if you deploy a war file remote via the 'Select WAR file to upload' field in the 'Deploy' section of HTMLManagerServlet the 'Context Path' gets derived from the war file name. So you don't need a 'Context Path' to deploy a *.war file. For example if your war file is callled 'myWebapp.war', your 'Context Path' will be '/myWebapp'.\nOn the other hand if you try to deploy a webapp as a *.war or a directory locally via 'WAR or Directory URL' you have to provide a 'Context Path', but it would be possible to derive the 'Context Path' as well from the 'WAR or Directory URL' name like it is done for remote deployments.\n\n\nProposed Solution:\n\n- Fix the documentaion and the HTMLManagerServlet UI to get number 1.) fixed. Especially remove the word 'URL' from the HTMLManagerServlet UI field descriptors and the jar:file:.... Urls from the javadoc and the html-manager-howto.xml\n\n- Enhance ManagerServlet to derive the 'Context Path' (aka 'path' parameter) from an already given 'WAR or Directory' (aka 'war' parameter). For example if you have no 'Context Path' and the 'WAR or Directory' filed contains 'C:\\myWebapp' or 'C:\\myWebapp.war' the 'Context Path' will be '/myWebapp'.\n\nI start to work on this from now on in the trunk and will append the patch as soon as I am finished (probably this week) to this bug, so it can merged in by one of the commiter.\n\nWould be nice to get some feedback if the probosed solution fits or not.\n\n-- \nKind Regards\nUwe G\u00fcnther", "id": 130602, "time": "2009-09-23T02:55:30Z", "creator": "uwe@cscc.de", "creation_time": "2009-09-23T02:55:30Z", "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 47467, "attachment_id": null, "id": 130686, "time": "2009-09-25T14:38:52Z", "creator": "markt@apache.org", "creation_time": "2009-09-25T14:38:52Z", "is_private": false, "text": "+1 to making the docs and the functionality consistent.\n\nPersonally, I'd lean towards figuring out if the jar:file: syntax ever worked and it if was look at why/when it broke and how easy it would be to fix it before opting to remove it completely."}, {"count": 3, "tags": [], "bug_id": 47467, "attachment_id": null, "is_private": false, "id": 130687, "time": "2009-09-25T16:25:48Z", "creator": "uwe@cscc.de", "creation_time": "2009-09-25T16:25:48Z", "text": "Thats what I thought as well when I started with this bug. This jar:file: syntax is based on an URLConnection and there isn't one used in the whole MangerServlet or HTMLManagerServlet code. That shows to me  jar:file: syntax is only in the docs to document a function we simply do not have in the code at all.\n\nI checked the svn history 2 years back and there was no jar:file:... URL syntax at all. Means I could not found any URLConnections in the code and its history. Maybe the original author could give us some historical inside knowledge, but I think this is late back to tomcat 4.x.x.\n\nAt the moment I can't even dream up a scenario where you could use a jar:file: URLConnection like syntax or where it would make sence, but thats me. :-) \n\nLets go back to what does till now: There are basically two deployment strategies in the HTMLManagerServlet:\n\n    1.) local deployment (webapp *.war or webapp dir must be locally accessable from tomcat to get copied via GET command to the webapps dir)\n    2.) remote deployment (only a webapp *.war can be remotely copied to the webapps dir via POST resp. PUT)\n\nEither you deploy a local dir or war as webapp or you deploy a remote war as webapp. In both cases the ManagerServlet does only simple copy operations to copy the local war / dir or the remotely uploaded war to the webapps dir.\n\nAnyway, in both cases tomcat gets told via JMX in the ManagerServlet to use the new copied webapp dir resp. explode the new copied *.war file and use it.\n\nI have taken the whole ManagerServlet#deploy(PrintWriter writer, String config, String path, String war, boolean update) method in to pieces to fully analyze and understand it, so I can say what is going on and what gets wrong here. \n\nThere are even some other strange bugs in this method: Lets say you have 3 params, each of them can have a value or can be null, so this leads us to 2^3=8 diffrent combinations where 5 of them are complete valid ones and 3 are invalid ones. The existing code only works for 2 of 5 valid cases and does some odd thing in the other 3 cases. For more details see my attachment which is listing the cases.\n\nI reworked only this single ManagerServlet#deploy(...) mehtod but created 4 new classes to handle complexisty / special cases, because the method had been grown in to a hard to handle beast. :-) \n\nSince today afternoon I have a working version running on my dev box together with the trunk code. I am currently setting up a local testing scenarios to seriously test that new code. Not only, but because it gets used via HTTP from the Ant DeployTask, the ManagerServlet and the HTMLManagerServlet webapp frontend. But it looks ok until now.\n\n-- \nKind Regards\nUwe G\u00fcnther"}, {"count": 4, "tags": [], "bug_id": 47467, "attachment_id": 24313, "id": 130688, "time": "2009-09-25T16:28:07Z", "creator": "uwe@cscc.de", "creation_time": "2009-09-25T16:28:07Z", "is_private": false, "text": "Created attachment 24313\nToughts about ManagerServlet#deploy(.....) cases and which are getting wrong and which are doable"}, {"count": 5, "tags": [], "text": "After some archaeological researches in older tomcat releases it came to daylight the general URL support has been gone starting with Tomcat 5.5.0. In this release o.a.c.Deployer has been removed from the Tomcat core. The Deployer interface has been used inside the ManagerServlet to drive the deployments. Deployer was a specialized Container into which web applications could be deployed and undeployed. The whole Deployer interface could only used together with java.net.URL. This was the main reason, why the enduser of the HTMLManager application had to deal with URL like syntaxtes like \"file://yourFileOrDir\" or \"jar:file://yourWarFile.war!/\"\n\nStarting with Tomcat 5.5.0 o.a.c.Deployer interface got dropped from Tomcat and the ManagerServlet got migrated to do the deployment with the JMX mBeanServer from now on. If you look in the code starting from 5.5.0 the ManagerServlet.deploy(.....) got worse and worse and less and less maintainable because the migration hasn't done properly. For example:\n\n    * Javadoc hasn't been migrated\n    * URL support has been dropped (only a 'file:' prefix is supported from now on which isn't really need but this is a different topic) which was a good thing because the user from now on can use plain OS File paths like you would expect from an enduser point of view from the very beginning.\n    * deployment of local war without context path has been dropped\n    * deployment of local dir without context path has been dropped\n\nThere should be short term and a long term solution.\n\nShort term solution should be \n    1.) to apply the fix I already did for this bug mentioned in my comment above, \n    2.) remove a the pseudo URLs like 'file:' we already have in the code and provide the user a consistent interface for native file- and path-names. This will effect the Ant DeployTask as well. \n    3.) The 'jar:file:' and 'file:' syntax needs to be removed/changed in the related javadocs and howtos.\n\nLong term solution would be to create a new bug to go over the whole manager application and bring it back in to an consistant and maintainable state. I will create that bug as soon this one went into svn.\n\n-- \nKind Regards\nUwe G\u00fcnther", "attachment_id": null, "id": 130693, "creator": "uwe@cscc.de", "time": "2009-09-26T04:50:58Z", "bug_id": 47467, "creation_time": "2009-09-26T04:50:58Z", "is_private": false}, {"count": 6, "tags": [], "bug_id": 47467, "attachment_id": null, "is_private": false, "id": 130703, "time": "2009-09-27T01:56:30Z", "creator": "markt@apache.org", "creation_time": "2009-09-27T01:56:30Z", "text": "Thanks for the research. It helps enormously to be able to read through your summary and understand the background to this bug and how we got here.\n\nI think path needs to be removed completely. The only place it is valid to use it is in server.xml and the manager app doesn't touch server.xml.\n\nThe leaves 4 cases:\n1. config(no) war(no)\n- invalid since nothing to deploy\n\n2. config(yes) war(no)\n- valid - copy appname.xml to $CATALINA_BASE/conf/<engine>/<host>\n\n3. config(no) war(yes)\n- valid - copy appname.war to Host's appBase\n\n4. config(yes) war(yes)\n- valid if appname is same for appname.xml and appname.war\n- copy appname.xml to $CATALINA_BASE/conf/<engine>/<host>\n- copy appname.war to Host's appBase\n\nAny provide path can be ignored but I'd suggest logging a warning.\n\nIt is makes the fix easier, I'd be happy to see all the file URL support removed as well."}, {"count": 7, "attachment_id": null, "creator": "uwe@cscc.de", "is_private": false, "id": 130705, "time": "2009-09-27T03:44:40Z", "bug_id": 47467, "creation_time": "2009-09-27T03:44:40Z", "tags": [], "text": "Thanks for your input but this leads me to some further questions to discuss :-)\n\nThe 'path' parameter describes the context path of the web application. By providing a 'path' and a 'war' parameter you can tell the ManagerServlet for example ?path=/myWebapp&war=C:\\\\myWar.war. This adds the value to not having a hard wired relationship between the context name (aka '&path=/myWebapp') and the deployment source (webapp as *.war file or as an webapp conform directory structure aka '&war=C:\\\\myWar.war' or '&war=C:\\\\myDir')\n\nFurther more there is the case where you can provide a context.xml as config, but you have to know to which webapp this config belongs to.\nA case would be \n\n\t?path=/myWebapp&config=C:\\\\context.xml\n\nIn this case the context.xml would be end up in ${catalina.base}/conf/[Engine]/[Host]/myWebapp.xml\n\nBasically you can say the '&path=' is used to get the Context (aka webapp) from the mBeanServer. If the '&path=' gets dropped you would need it inside the deploy(.....) method anyway but with the limitation the '&path=' would be always hardwired to the name of the '&war=' value (war or dir name) or the '&config=' value (config name\n\nOk this derivation of the '&path=' from '&war=' is done at the moment anyway if no '&path=' is provided, but you still have the possibility to override that, say you want to deploy the same war as 5 different webapps for testing purposes for example.\n\nIt works like this at the moment in the patch:\n\n\t\tif (!hasPath && !hasConfig && hasWar) { \n\t\t\t//war\n\t\t\tthis.war = new War(war);\n\t\t\tthis.path = this.war.getPath();\n\t\t\tthis.config = null;\n\t\t} else if (!hasPath && hasConfig && hasWar) { \n\t\t\t//war, config\n\t\t\tthis.war = new War(war);\n\t\t\tthis.path = this.war.getPath();\n\t\t\tthis.config = new Config(config);\n\t\t} else if (hasPath && !hasConfig && hasWar) {\n\t\t\t//war, path\n\t\t\tthis.war = new War(war);\n\t\t\tthis.path = new Path(path);\n\t\t\tthis.config = null;\n\t\t} else if (hasPath && hasConfig && !hasWar) {\n\t\t\t//config, path\n\t\t\tthis.war = null;\n\t\t\tthis.path = new Path(path);\n\t\t\tthis.config = new Config(config);\n\t\t} else if (hasPath && hasConfig && hasWar) {\n\t\t\t//war, config, path\n\t\t\tthis.war = new War(war);\n\t\t\tthis.path = new Path(path);\n\t\t\tthis.config = new Config(config);\n\t\t} else {\n\t\t\t//!hasPath && !hasConfig && !hasWar\n\t\t\t//!hasPath &&  hasConfig && !hasWar\n\t\t\t// hasPath && !hasConfig && !hasWar\n\t\t\tthrow new IllegalArgumentException(\n\t\t\t\t\t\"Need one of the following combinations\" +\n\t    \t\t\t\": war \" +\n\t    \t\t\t\"| war, path \" +\n\t    \t\t\t\"| war, config \" +\n\t    \t\t\t\"| war, config, path \" +\n\t    \t\t\t\"| config, path\");\n\t\t}\n\nWe could think about to derive the '&path=' (aka webapp context) from the '&config=' (config name) for the following case:\n\n\t//!hasPath &&  hasConfig && !hasWar\n\n\nfor example: \n\n\t?config=C:\\myWebapp.xml \n\nwould be end up in:\n\n\t${catalina.base}/conf/[Engine]/[Host]/myWebapp.xml\n\nThats what you suggested as well in comment #6 case 2.\n\n\nBTW: In the pre JMX version of ManagerServlet (all pre Tomcat 5.5.0 versions) we had o.a.c.Deployer to encapsulate all the deployment related tasks. Starting with Tomcat 5.5.0 all these tasks got moved as 'JMX Agent Level like' access methods into the Manager Servlet which is a bit ugly from an OO point of view. Instead of  that solution we should think about having a 'JMX Agent Level like' Deployer object in the 'manager' webapp to provide encapsulated services for the tasks to perform an deploy, undeploy, ... from within the ManagerServlet. But thats possibly beautifying and should go with an different Bug.\n\n-- \nKind Regards\nUwe G\u00fcnther"}, {"count": 8, "tags": [], "bug_id": 47467, "attachment_id": null, "id": 130707, "time": "2009-09-27T09:11:53Z", "creator": "markt@apache.org", "creation_time": "2009-09-27T09:11:53Z", "is_private": false, "text": "If path is kept then I'd suggest something along the lines of treating it as an optional parameter that is used to rename the war/dir/context.xml file."}, {"count": 9, "tags": [], "bug_id": 47467, "attachment_id": null, "id": 130708, "time": "2009-09-27T09:22:31Z", "creator": "uwe@cscc.de", "creation_time": "2009-09-27T09:22:31Z", "is_private": false, "text": "That sounds perfect to me. I will check all the related interfaces to the ManagerServlet like the Ant DeployTask to make that clear and of course the html howto.\n\nBTW: How would you deal with the localized properties if something new comes along? Is it ok to just enhance the non English property files with the new property together with its English value or is there any other procedure?\n\n-- \nKind Regards\nUwe G\u00fcnther"}, {"count": 10, "tags": [], "bug_id": 47467, "is_private": false, "text": "If you set the English property value then that automatically gets used if the non-English value isn't provided. You can leave the non-English files as is. Of course, if your language skills are better than mine and you can provide any of the translations that that would be great - but don't worry if you can't.", "id": 130709, "time": "2009-09-27T09:26:24Z", "creator": "markt@apache.org", "creation_time": "2009-09-27T09:26:24Z", "attachment_id": null}, {"count": 11, "tags": [], "bug_id": 47467, "attachment_id": null, "id": 130878, "time": "2009-10-04T07:22:57Z", "creator": "uwe@cscc.de", "creation_time": "2009-10-04T07:22:57Z", "is_private": false, "text": "I need a bit of an advice here from the commiters here. Mark maybe you could give me some infos. But let me first ask the question:\n\nIf have fixed and tested the deploy method in the ManagerServlet and I am in the process changing the javadoc for the ManagerServlet to what it does.\nBut I think this whole bug/change starts to mushroom in to something bigger the deeper I dig in the code because there are alot of inconsistencies. I just want to list here some of them which needs to be cleaned up in that area:\n\n1.) Go over the Ant DeployTask and remove some deprecated Tasks and make the DeployTask more consistent (&localWar &war mess). There are also some invariants of the params which would cause odd behavior there.\n2.) Go over the manager/text/<commands> and remove some deprecated tasks and make it more consistent compared with its subclass HTMLManagerServlet. There are odd things as well, I don't want to list them all here in detail.\n3.) Go over the whole manager-howto.xml and describe the behavior we have really at the moment. This is a task where I would need someone whose mother tounge is english to double check the stuff I plan to rewrite.\n\nI don't want to do that all in this Bug number, because I think the changes I did to ManagerServlet#deploy(.....) and the HTMLManagerServlet already are not that small at all and I do want to get them in first.\n\nPossibly I should create 3 new Bugs for 1.) - 3.) and should put all the stuff I fixed in to a patch and attach it to this one so you guys can commit it.\n\nWhat do you mean?\n\nBTW: I have done all in the trunk (Tomcat 7). How do you bring this usually back into Tomcat 6.0.x or 5.5.x ?\n\n-- \nCheers Uwe"}, {"count": 12, "tags": [], "text": "I am still working on this. Code changes are done and tested for Tomcat trunk (7.0.0) and Tomcat 6.0.x trunk. I am in the process of doing the doc changes in html-manager-howto.xml and manager-howto.xml in addition to the code changes.\n\n-- \nKind Regards\nUwe G\u00fcnther", "attachment_id": null, "id": 130900, "creator": "uwe@cscc.de", "time": "2009-10-06T05:32:06Z", "bug_id": 47467, "creation_time": "2009-10-06T05:32:06Z", "is_private": false}, {"count": 13, "tags": [], "bug_id": 47467, "attachment_id": null, "is_private": false, "id": 132559, "time": "2009-12-01T15:04:35Z", "creator": "markt@apache.org", "creation_time": "2009-12-01T15:04:35Z", "text": "To answer your questions, create separate bugs to do the clean-up and attach the patches there.\n\nHow close are you to having the patch ready for this issue?"}, {"count": 14, "tags": [], "bug_id": 47467, "attachment_id": null, "id": 132753, "time": "2009-12-11T05:31:28Z", "creator": "markt@apache.org", "creation_time": "2009-12-11T05:31:28Z", "is_private": false, "text": "*** Bug 47544 has been marked as a duplicate of this bug. ***"}, {"count": 15, "tags": [], "bug_id": 47467, "is_private": false, "text": "Lower importance, classify this as an enhancement, set Tomcat version as 6.0.20.\n\nIn essence, this is a documentation issue, and we can fix it as such,\nbut enhancements for the ManagerServlet are proposed as well.", "id": 133069, "time": "2009-12-22T19:20:31Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2009-12-22T19:20:31Z", "attachment_id": null}, {"count": 16, "tags": [], "bug_id": 47467, "is_private": false, "text": "Created attachment 25576\nGenerated Excel File when TestPoiPrintArea.java is run with poi-3.7-SNAPSHOT-20100610.jar", "id": 137531, "time": "2010-06-10T07:34:16Z", "creator": "yohan_y@yahoo.com", "creation_time": "2010-06-10T07:34:16Z", "attachment_id": 25576}, {"count": 17, "attachment_id": null, "creator": "yohan_y@yahoo.com", "is_private": false, "id": 137534, "time": "2010-06-10T07:35:50Z", "bug_id": 47467, "creation_time": "2010-06-10T07:35:50Z", "tags": [], "text": "Sorry, I'm sending attachment to wrong bug...\nIt should be for bug #46664"}, {"attachment_id": null, "tags": [], "creator": "markt@apache.org", "is_private": false, "count": 18, "id": 148892, "time": "2011-08-29T14:21:38Z", "bug_id": 47467, "creation_time": "2011-08-29T14:21:38Z", "text": "*** Bug 51727 has been marked as a duplicate of this bug. ***"}, {"count": 19, "tags": [], "bug_id": 47467, "is_private": false, "text": "*** Bug 51727 has been marked as a duplicate of this bug. ***", "id": 148898, "time": "2011-08-29T15:16:48Z", "creator": "markt@apache.org", "creation_time": "2011-08-29T15:16:48Z", "attachment_id": null}, {"count": 20, "tags": [], "text": "The content of attachment 25576 has been deleted for the following reason:\n\nAttached to wrong bug", "attachment_id": null, "id": 198173, "creator": "markt@apache.org", "time": "2017-04-05T13:44:24Z", "bug_id": 47467, "creation_time": "2017-04-05T13:44:24Z", "is_private": false}, {"count": 21, "tags": [], "bug_id": 47467, "attachment_id": null, "is_private": false, "id": 198994, "time": "2017-05-31T19:10:16Z", "creator": "markt@apache.org", "creation_time": "2017-05-31T19:10:16Z", "text": "Since there are behavioural changes at a minimum, and probably changes to protected methods in the Manager and HTMLManager, I think this is one for 9.0.x only.\n\nMy general idea is to try and reduce the number of deploy methods and duplicate (ish) code but no firm plans as yet."}]