[{"count": 0, "tags": [], "creator": "wade.johnson@abbnm.com", "attachment_id": null, "is_private": false, "id": 32167, "time": "2003-02-28T17:45:42Z", "bug_id": 17538, "creation_time": "2003-02-28T17:45:42Z", "text": "Background\n 1. Running an applet using Batik to display SVG.\n 2. Applet is packaged as a JAR file.\n 3. Batik libraries installed in JRE extension directory.\n 4. Running behind a firewall. (May no be significant.)\n 5. SVG file contains DOCTYPE declaration for SVG 1.0.\n\nSymptom\n NullPointerException trying to parse SVG referenced by the applet.\n Removing DOCTYPE declaration removes problem.\n\nSolution\nWith help from Thomas Deweese, I was able to track down the problem\nin SAXSVGDocumentFactory and generate a patch. A unified diff of the\nchange is included below.\n\nPatch to fix the problem:\n--- SAXSVGDocumentFactory.orig\tTue Nov 12 06:32:06 2002\n+++ SAXSVGDocumentFactory.java\tFri Feb 28 10:20:50 2003\n@@ -21,6 +21,9 @@\n \n import java.util.zip.GZIPInputStream;\n \n+import java.security.AccessController;\n+import java.security.PrivilegedAction;\n+\n import org.apache.batik.dom.util.SAXDocumentFactory;\n import org.apache.batik.dom.util.XLinkSupport;\n \n@@ -308,8 +311,7 @@\n                         rb.getString(KEY_SYSTEM_ID + publicId.replace(' ', \n'_'));\n \n                     if (localSystemId != null && !\"\".equals(localSystemId)){\n-                        return new InputSource\n-                            (getClass().getResource(localSystemId).toString());\n+                        return privilegedGetInputSource( localSystemId );\n                     }\n                 }\n             }\n@@ -318,5 +320,25 @@\n         }\n         // Let the SAX parser find the entity.\n         return null;\n+    }\n+\n+    /**\n+     * Utility method for retrieving the InputSource associated with a \nsystemId.\n+     *\n+     * With the Batik libraries in a client machine's extension directory,\n+     * an applet cannot access the svg10.dtd resource to validate the SVG.\n+     * This utility function bypasses that security restriction.\n+     *\n+     * @param systemId the system ID of the resource to grab.\n+     * @return an InputSource associated with the supplied system ID\n+     */\n+    private InputSource privilegedGetInputSource( final String systemId )\n+    {\n+\tObject is = AccessController.doPrivileged(new PrivilegedAction() {\n+            public Object run() {\n+                return getClass().getResourceAsStream(systemId);\n+            }\n+        });\n+\treturn new InputSource( (InputStream)is );\n     }\n }"}, {"count": 1, "tags": [], "bug_id": 17538, "text": "Thanks for doing this, but it doesn't work for the new SVG 1.1 DTD's since\nthey are split into multiple parts so it needs the base URL.  There needs\nto be a more sophisticated solution to handle SVG 1.1.", "id": 32291, "time": "2003-03-03T01:07:25Z", "creator": "deweese@apache.org", "creation_time": "2003-03-03T01:07:25Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 17538, "attachment_id": null, "id": 39639, "time": "2003-06-30T10:20:17Z", "creator": "vincent.hardy@sun.com", "creation_time": "2003-06-30T10:20:17Z", "is_private": false, "text": "For your situation, I think the best option would be to sign the applet and\ngrant it access to the various SVG DTDs. Otherwise, as Thomas pointed out,\nyou'll run into issues with modularized DTDs. The parser will get the top level\nDTD and then try and read the referenced module files. This will fail unless the\naccess is priviledged as well, which I doubt.\n\nBecause you are running as an applet and given that you must controll the SVG\nimages you display, you could also remove the DOCTYPE declaration on the fly\nbefore passing it to Batik. This is a work around, but it should resolve that\nissue. Another option would be to force the DOCTYPE to use either the SVG 1.0\nDTD or to use the flat SVG 1.1 DTD.\n"}, {"count": 3, "tags": [], "text": "With the current code base we only read the DTD if we are validating.\nIf you are validating then you need to install a special policy so you\ncan access the DTD files wherever they are.", "attachment_id": null, "bug_id": 17538, "id": 40177, "time": "2003-07-08T15:01:20Z", "creator": "deweese@apache.org", "creation_time": "2003-07-08T15:01:20Z", "is_private": false}, {"count": 4, "tags": [], "creator": "deweese@apache.org", "attachment_id": null, "is_private": false, "id": 40179, "time": "2003-07-08T15:04:13Z", "bug_id": 17538, "creation_time": "2003-07-08T15:04:13Z", "text": "Vincent Want's to look at this some more.\n"}]