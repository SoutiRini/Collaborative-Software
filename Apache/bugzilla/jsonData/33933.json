[{"count": 0, "tags": [], "creator": "apache-bugzilla@inquisitive-mind.com", "attachment_id": null, "is_private": false, "id": 72058, "time": "2005-03-09T17:16:55Z", "bug_id": 33933, "creation_time": "2005-03-09T17:16:55Z", "text": "A very trivial change to the rounding down to the nearest second. The following\nis an order of magnitude faster, about 20x from a quick test.\n\n\n--- HttpServlet.java-   Wed Mar  9 16:06:30 2005\n+++ HttpServlet.java    Wed Mar  9 16:10:13 2005\n@@ -689,7 +689,7 @@\n                doGet(req, resp);\n            } else {\n                long ifModifiedSince = req.getDateHeader(HEADER_IFMODSINCE);\n-               if (ifModifiedSince < (lastModified / 1000 * 1000)) {\n+               if (ifModifiedSince < (lastModified - lastModified & 999)) {\n                    // If the servlet mod time is later, call doGet()\n                     // Round down to the nearest second for a proper compare\n                     // A ifModifiedSince of -1 will always be less"}, {"attachment_id": null, "tags": [], "bug_id": 33933, "text": "This code is provided by Sun. You'll need to petition them for the change.", "count": 1, "id": 72059, "time": "2005-03-09T17:22:19Z", "creator": "funkman@joedog.org", "creation_time": "2005-03-09T17:22:19Z", "is_private": false}, {"attachment_id": null, "tags": [], "bug_id": 33933, "text": "Elegant trick though. In the Tomcat code, I usually do it like this, which is\nprobably about as fast:\nlastModified <= headerValue + 1000\nUsing dividers and multipliers should definitely be avoided if possible.\n\nIf Markus likes cool tricks, maybe he can see if it's possible to optimize more\nMessageBytes.getInt/getLong/setInt/setLong.", "count": 2, "id": 72062, "time": "2005-03-09T17:30:14Z", "creator": "remm@apache.org", "creation_time": "2005-03-09T17:30:14Z", "is_private": false}, {"count": 3, "tags": [], "creator": "tom@squeat.com", "text": "That trick looks good on the surface but I think it's wrong!   The decimal number 999 is actually \n1111100111 in binary.   So, if you have something like 5027 then (5027 & 999) = 5024 right?   Tell me \nI'm wrong... I must be missing something.", "id": 72063, "time": "2005-03-09T17:35:11Z", "bug_id": 33933, "creation_time": "2005-03-09T17:35:11Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "creator": "tom@squeat.com", "attachment_id": null, "is_private": false, "id": 72064, "time": "2005-03-09T17:39:43Z", "bug_id": 33933, "creation_time": "2005-03-09T17:39:43Z", "text": "Actually (5027 & 999) = 3.    And 5027 - (5027 & 999) = 5024 which is not rounded."}, {"count": 5, "tags": [], "text": "OK, my math is wrong... but my point isn't.\n\nLet's try 1051 (1024+27).   With this equation,\n\n1051 & 999 = 27 & 999 = 3\n1051 - 1027 & 999 = 1048\n\nwhich is not rounded to 1000.   That's the point even though it took me a while to get there.  ;-)", "is_private": false, "bug_id": 33933, "id": 72085, "time": "2005-03-09T21:49:46Z", "creator": "tom@squeat.com", "creation_time": "2005-03-09T21:49:46Z", "attachment_id": null}]