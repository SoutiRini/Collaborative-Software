[{"count": 0, "tags": [], "bug_id": 59786, "attachment_id": null, "is_private": false, "id": 192064, "time": "2016-07-03T12:09:34Z", "creator": "sebb@apache.org", "creation_time": "2016-07-03T12:09:34Z", "text": "Mini:poi-3.15-beta2 sebb$ java -classpath poi-3.15-beta2.jar:poi-scratchpad-3.15-beta2.jar org.apache.poi.hmef.extractor.HMEFContentsExtractor ../../TEMP/winmail.dat x\nExtracting...\nException in thread \"main\" java.lang.NullPointerException\n\tat org.apache.poi.hmef.extractor.HMEFContentsExtractor.extractMessageBody(HMEFContentsExtractor.java:78)\n\tat org.apache.poi.hmef.extractor.HMEFContentsExtractor.main(HMEFContentsExtractor.java:57)"}, {"count": 1, "tags": [], "bug_id": 59786, "attachment_id": null, "id": 192065, "time": "2016-07-03T12:15:39Z", "creator": "sebb@apache.org", "creation_time": "2016-07-03T12:15:39Z", "is_private": false, "text": "The following patch works for me (against the REL_3_15_BETA2 tag)\n\n### Eclipse Workspace Patch 1.0\n#P ApachePOI\nIndex: src/scratchpad/src/org/apache/poi/hmef/extractor/HMEFContentsExtractor.java\n===================================================================\n--- src/scratchpad/src/org/apache/poi/hmef/extractor/HMEFContentsExtractor.java\t(revision 1751146)\n+++ src/scratchpad/src/org/apache/poi/hmef/extractor/HMEFContentsExtractor.java\t(working copy)\n@@ -75,7 +75,9 @@\n       try {\n           MAPIRtfAttribute body = (MAPIRtfAttribute)\n              message.getMessageMAPIAttribute(MAPIProperty.RTF_COMPRESSED);\n-          fout.write(body.getData());\n+          if (body != null) {\n+              fout.write(body.getData());\n+          }\n       } finally {\n     \t  fout.close();\n       }"}, {"count": 2, "tags": [], "bug_id": 59786, "attachment_id": null, "id": 192069, "time": "2016-07-03T13:21:19Z", "creator": "apache@gagravarr.org", "creation_time": "2016-07-03T13:21:19Z", "is_private": false, "text": "Any chance you could share a small file that triggers the bug? We can then use that for a unit test, to ensure it's both fixed, and stays fixed!"}, {"count": 3, "tags": [], "bug_id": 59786, "attachment_id": null, "id": 192072, "time": "2016-07-03T14:04:03Z", "creator": "sebb@apache.org", "creation_time": "2016-07-03T14:04:03Z", "is_private": false, "text": "Sorry, no I cannot; the attachement was from a private mail.\n\nHowever it should not be necessary.\n\nThe Javadoc for the method getMessageMAPIAttribute says it may return null, so clearly any callers need to allow for this."}, {"count": 4, "tags": [], "bug_id": 59786, "attachment_id": null, "id": 192075, "time": "2016-07-03T14:57:34Z", "creator": "sebb@apache.org", "creation_time": "2016-07-03T14:57:34Z", "is_private": false, "text": "I ran the Dumper, and the original body text was shown as below:\n\n(unknown 3fd9) [16345] <original body text>\n\nMaybe that tag is sometimes used instead of MAPIProperty.RTF_COMPRESSED?\n\nThe message was quite short (ca. 127 ASCII chars); perhaps that's relevant.\n\nOtherwise the message just contained an image (PNG) attachment.\nThis was extracted fine.\n\nBTW, the Dumper showed a lot of other \"(unknown xxxx)\" tags."}, {"count": 5, "tags": [], "bug_id": 59786, "attachment_id": null, "is_private": false, "id": 192084, "time": "2016-07-03T23:15:16Z", "creator": "onealj@apache.org", "creation_time": "2016-07-03T23:15:16Z", "text": "Applied in r1751180.\n\nAdded some unit tests for HMEFContentsExtractor because there were none, but still not testing the case where the message body is null."}, {"count": 6, "attachment_id": null, "bug_id": 59786, "is_private": false, "id": 192112, "time": "2016-07-04T18:07:21Z", "creator": "apache@gagravarr.org", "creation_time": "2016-07-04T18:07:21Z", "tags": [], "text": "As best as I can without the file, I've had a go in r1751361 at adding extraction support for this non-standard uncompressed file. (I tried, but couldn't get Outlook to generate one like yours for testing). Any chance you could try with your test file, and report how HMEFContentsExtractor works on your file with that change in?"}, {"count": 7, "tags": [], "bug_id": 59786, "attachment_id": null, "is_private": false, "id": 192126, "time": "2016-07-04T21:29:19Z", "creator": "sebb@apache.org", "creation_time": "2016-07-04T21:29:19Z", "text": "[It's a bit of a pain building POI, because compile-ooxml-lite unexpectedly runs loads of tests which don't always work for me, and even if they do, they take a long time and produce lots of output]\n\nI have now got \"ant jar\" to complete after commenting out the target compile-ooxml-lite.\n\nHowever it does not extract any body text; I get:\n\nExtracting...\nNo message body found, POI/message.rtf not created\nExtraction completed\n\nA bit of experimentation shows that the new attribute has to be defined as a new entry in MAPIProperty.java; if this is done it is then picked up by the dumper as well. \n\nUsing MAPIProperty.createCustom locally does not work; the method getMessageMAPIAttribute returns null.\n\nThere's another change that needs to be done: if the body is an instance of MAPIStringAttribute (as here) then writing the byte data directly to the file produces an unreadable file which appears to be in UTF-16LE (no BOM).\n\nHere's a very crude patch that works for me:\n\n### Eclipse Workspace Patch 1.0\n#P ApachePOI\nIndex: src/scratchpad/src/org/apache/poi/hmef/extractor/HMEFContentsExtractor.java\n===================================================================\n--- src/scratchpad/src/org/apache/poi/hmef/extractor/HMEFContentsExtractor.java\t(revision 1751374)\n+++ src/scratchpad/src/org/apache/poi/hmef/extractor/HMEFContentsExtractor.java\t(working copy)\n@@ -95,7 +95,12 @@\n         \n         OutputStream fout = new FileOutputStream(dest);\n         try {\n-            fout.write(body.getData());\n+            if (body instanceof MAPIStringAttribute) {\n+                fout.write(((MAPIStringAttribute) body).getDataString().getBytes()); // TODO fix the output charset\n+            } else {\n+                fout.write(body.getData());\n+            }\n         } finally {\n             fout.close();\n         }\n@@ -104,13 +109,7 @@\n     protected MAPIAttribute getBodyAttribute() {\n         MAPIAttribute body = message.getMessageMAPIAttribute(MAPIProperty.RTF_COMPRESSED);\n         if (body != null) return body;\n-        \n-        // See bug #59786 - we'd really like a test file to confirm if this\n-        //  is the right properties + if this is truely general or not!\n-        MAPIProperty uncompressedBody = \n-                MAPIProperty.createCustom(0x3fd9, Types.ASCII_STRING, \"Uncompressed Body\");\n-        // Return this uncompressed one, or null if that isn't their either\n-        return message.getMessageMAPIAttribute(uncompressedBody);\n+        return message.getMessageMAPIAttribute(MAPIProperty.WINMAILNEW);\n     }\n     \n     /**\n\n\nWhere the following was added to MAPIProperty.java:\n\n   public static final MAPIProperty WINMAILNEW = // TODO fix the names!\n      new MAPIProperty(0x3fd9, Types.UNICODE_STRING, \"Uncompressed Body\",\"WINMAILNEW\");"}, {"count": 8, "attachment_id": null, "bug_id": 59786, "is_private": false, "id": 192127, "time": "2016-07-04T22:52:26Z", "creator": "apache@gagravarr.org", "creation_time": "2016-07-04T22:52:26Z", "tags": [], "text": "I'm reluctant to add a well-known MAPIProperty for it, until we know more about what it is. Searching the Microsoft published specs all seem to suggest it's in an un-used range, and none of the ID listings give a name or similar for it\n\nI've fixed things up so that custom properties can now correctly be retrieved by HMEFMessage, and set HMEFContentsExtractor to use a predictable (UTF8) encoding for the raw strings rather than whatever encoding they happened to have in the source file. Does that now behave right for you?\n\nThe ooxml-tests and lite-building ought to run relatively quickly and without too many errors - it produces ~50 lines of output on my laptop, and runs in just over a minute. If that isn't the case, that's an issue for another bug!"}, {"count": 9, "tags": [], "text": "(In reply to Nick Burch from comment #8)\n> I'm reluctant to add a well-known MAPIProperty for it, until we know more\n> about what it is. Searching the Microsoft published specs all seem to\n> suggest it's in an un-used range, and none of the ID listings give a name or\n> similar for it\n\nOK\n\n> I've fixed things up so that custom properties can now correctly be\n> retrieved by HMEFMessage, and set HMEFContentsExtractor to use a predictable\n> (UTF8) encoding for the raw strings rather than whatever encoding they\n> happened to have in the source file. Does that now behave right for you?\n\nYes, works OK now.\n \n> The ooxml-tests and lite-building ought to run relatively quickly and\n> without too many errors - it produces ~50 lines of output on my laptop, and\n> runs in just over a minute. If that isn't the case, that's an issue for\n> another bug!\n\nTakes nearly two minutes on my system and runs almost 2000 tests.\nAnd it runs on every minor change.\nI've raised Bug 59799.", "is_private": false, "id": 192132, "creator": "sebb@apache.org", "time": "2016-07-05T10:37:37Z", "bug_id": 59786, "creation_time": "2016-07-05T10:37:37Z", "attachment_id": null}, {"count": 10, "tags": [], "text": "The main issue here is fixed as far  as I see, right? There is another to discuss the build.xml stuff. If not, then please reopen this one as well.", "is_private": false, "bug_id": 59786, "id": 192408, "time": "2016-07-15T18:38:05Z", "creator": "dominik.stadler@gmx.at", "creation_time": "2016-07-15T18:38:05Z", "attachment_id": null}]