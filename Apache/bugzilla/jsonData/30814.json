[{"count": 0, "tags": [], "creator": "jjureta@videotron.ca", "text": "Hi, \n \nI found that the function org.apache.catalina.security.SecurityUtil.execute \ndoes not cover all the cases (oh yes, the last modifications are mine): \n- if the parameter principal is null and the session is not, the new subject \nis created without any principal (this happened when filters are used). When \nthis function is called next time with the principal which is not null, that \nprincipal is not added to the subject, function is executed without that \nprincipal; \n- if subject in the session contains the principals different from the one \npassed as the parameter to the function, the new principal is not added to the \nsubject in the session. \n \nI have one question: why the principal is passed to this function and not the \nsubject? \n \nI propose to change the function execute() to: \n \nprivate static void execute(final Method method, \n                                final Object targetObject,  \n                                final Object[] targetArguments, \n                                Principal principal)  \n        throws java.lang.Exception{ \n        \n\ttry{    \n            Subject subject = null; \n            PrivilegedExceptionAction pea = new PrivilegedExceptionAction(){ \n                    public Object run() throws Exception{ \n                       method.invoke(targetObject, targetArguments); \n                       return null; \n                    } \n            }; \n \n            // The first argument is always the request object \n            if (targetArguments != null  \n                    && targetArguments[0] instanceof HttpServletRequest){ \n                HttpServletRequest request =  \n                    (HttpServletRequest)targetArguments[0]; \n \n                HttpSession session = request.getSession(false); \n                if (session != null){ \n                    subject =  \n                        (Subject)session.getAttribute(Globals.SUBJECT_ATTR); \n                } \n \n                if(principal != null) { \n                    if (subject == null){ \n                        // Create the new Subject \n                        subject = new Subject(); \n                        subject.getPrincipals().add(principal); \n                    } else {  \n                        // Add the new Principal to the Subject if needed \n                        if (!subject.getPrincipals().contains(principal)) \n                            subject.getPrincipals().add(principal); \n                    } \n                     \n                    if ((session != null) && (subject != null)) { \n                        // add the subject to the session \n                        session.setAttribute(Globals.SUBJECT_ATTR, subject); \n                    } \n                } \n            } \n \n            Subject.doAsPrivileged(subject, pea, null);        \n       } catch( PrivilegedActionException pe) { \n            Throwable e = ((InvocationTargetException)pe.getException()) \n                                .getTargetException(); \n             \n            if (log.isDebugEnabled()){ \n                log.debug(sm.getString(\"SecurityUtil.doAsPrivilege\"), e);  \n            } \n             \n            if (e instanceof UnavailableException) \n                throw (UnavailableException) e; \n            else if (e instanceof ServletException) \n                throw (ServletException) e; \n            else if (e instanceof IOException) \n                throw (IOException) e; \n            else if (e instanceof RuntimeException) \n                throw (RuntimeException) e; \n            else \n                throw new ServletException(e.getMessage(), e); \n        }   \n    }", "id": 62370, "time": "2004-08-24T02:02:27Z", "bug_id": 30814, "creation_time": "2004-08-24T02:02:27Z", "is_private": false, "attachment_id": null}, {"count": 1, "attachment_id": null, "bug_id": 30814, "is_private": false, "id": 62400, "time": "2004-08-24T13:35:48Z", "creator": "jfarcand@apache.org", "creation_time": "2004-08-24T13:35:48Z", "tags": [], "text": "I think you missed that part of the code:\n\n   1679     /**\n   1680      * Set the Principal who has been authenticated for this Request.  This\n   1681      * value is also used to calculate the value to be returned by the\n   1682      * <code>getRemoteUser()</code> method.\n   1683      *\n   1684      * @param principal The user Principal\n   1685      */\n   1686     public void setUserPrincipal(Principal principal) {\n   1687\n   1688         if (System.getSecurityManager() != null){\n   1689             HttpSession session = getSession(false);\n   1690             if ( (subject != null) &&\n   1691                  (!subject.getPrincipals().contains(principal)) ){\n   1692                 subject.getPrincipals().add(principal);\n   1693             } else if (session != null &&\n   1694                         session.getAttribute(Globals.SUBJECT_ATTR) ==\nnull) {\n   1695                 subject = new Subject();\n   1696                 subject.getPrincipals().add(principal);\n   1697             }\n   1698             if (session != null){\n   1699                 session.setAttribute(Globals.SUBJECT_ATTR, subject);\n   1700             }\n   1701         }\n   1702\n   1703         this.userPrincipal = principal;\n   1704     }\n\nThis code snippet is from CoyoteRequest. Everytime the principal is discovered,\nit is added to the Subject. \n\nI'm closing the bug, but fell free to re-open it with a test case if you have one .\n\nThanks\n\n-- Jeanfrancois"}, {"count": 2, "tags": [], "creator": "jjureta@videotron.ca", "attachment_id": null, "id": 62420, "time": "2004-08-24T18:20:07Z", "bug_id": 30814, "creation_time": "2004-08-24T18:20:07Z", "is_private": false, "text": "Hi,\n\nMaybe I do not understand my problem, but this is what\u2019s happening, I think:\n-\tOne application is protected with the Form authentication,\n-\tWhen user accessing to the login form, the session is created (without \nthe subject) and the application\u2019s filters are invoked,\n-\tIf the filter is not last in the chain, hi will call \nSecurityUtil.execute without the principal,\n-\tThe function SecurityUtil.execute will create the subject (error!), but \nwill not add the principal to the subject (principal is null),\n-\tThe newly created subject is added to the session (error!),\n-\tAfter the authentication, the user access to the application,\n-\tThe application is executed (SecurityUtil.execute ) with good \nprincipal, but the subject is already in the session and the function execute \nwill not add the parameter principal to the subject in the session.\n\nI\u2019m sorry for my English and I\u2019m little confused with Tomcat, too.\n\nP.S.: I\u2019m not sure if it is good idea to add the principal passed as argument \nto the subject in the session if that principal is not already in the subject! \n"}, {"text": "You don't need to apologize for your English, it's fine ;)  But you need to \nplease stop using Bugzilla as a discussion forum.  Bring your \nquestions/comments to the user list first.  If other people there think what \nyou're reporting is a bug (or you can show us an actual bug by attaching a test \ncase), then you can reopen this item and we'll act on it.  Thanks ;)", "tags": [], "bug_id": 30814, "is_private": false, "count": 3, "id": 62794, "time": "2004-08-30T18:57:10Z", "creator": "yoavs@computer.org", "creation_time": "2004-08-30T18:57:10Z", "attachment_id": null}]