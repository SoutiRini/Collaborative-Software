[{"count": 0, "tags": [], "bug_id": 54443, "attachment_id": null, "text": "Exception in thread \"main\" java.lang.ClassCastException: org.apache.poi.hssf.record.StyleRecord cannot be cast to org.apache.poi.hssf.record.ExtendedFormatRecord\n\tat org.apache.poi.hssf.model.InternalWorkbook.getExFormatAt(InternalWorkbook.java:831)\n\tat org.apache.poi.hssf.usermodel.HSSFWorkbook.getCellStyleAt(HSSFWorkbook.java:1147)\n\tat org.apache.poi.hssf.usermodel.HSSFOptimiser.optimiseCellStyles(HSSFOptimiser.java:276)\n\tat com.lbs.util.WritableExcelAPI.copyCellStyle(WritableExcelAPI.java:415)\n\tat com.lbs.util.WritableExcelAPI.setCellFontItalicProp(WritableExcelAPI.java:591)\n\tat com.lbs.util.WritableExcelAPI.main(WritableExcelAPI.java:892)\n\nHere is how i call this method;\nif (workBook instanceof HSSFWorkbook&&workBook.getNumCellStyles()>3900){\n   HSSFOptimiser.optimiseCellStyles((HSSFWorkbook) workBook);\n....", "id": 164694, "time": "2013-01-17T14:18:19Z", "creator": "javaguru.hakan@gmail.com", "creation_time": "2013-01-17T14:18:19Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 54443, "attachment_id": null, "text": "Could you please upload a sample excel file that shows the problem?", "id": 164700, "time": "2013-01-17T14:39:51Z", "creator": "apache@gagravarr.org", "creation_time": "2013-01-17T14:39:51Z", "is_private": false}, {"count": 2, "tags": [], "creator": "javaguru.hakan@gmail.com", "text": "Hi,\nThe excel file is generating in memory. Here is the approach;\n\t\tfor (int i = 0; i < 6; i++)\n\t\t\texcelAPI.setCellValue(0, i, 1, \"ROW \" + i);\n\t\texcelAPI.setCellFontBoldProp(0, 2, 1, true);\n\t\texcelAPI.setCellBackgroundColor(0, 2, 1, ExcelAPIConstants.COLOR_BLUE);\n\t\texcelAPI.setCellBackgroundColor(0, 0, 1, ExcelAPIConstants.COLOR_RED);\n\n\t\texcelAPI.groupAndOutlineRows(0, 30, 70, true);\n\t\texcelAPI.groupAndOutlineRows(0, 2, 25, true);\n\t\t//excelAPI.mergeCells(0, 0, 1, 4);\n\n\t\texcelAPI.setCellFontBoldProp(0, 5, 1, true);\n\t\texcelAPI.setCellFontItalicProp(0, 5, 1, true);\n\t\t\n\t\texcelAPI.setCellHyperlink(0, 0, 3, \"TIKLAA\",1,2,2);\n\t\t\n\t\tfor (int i=0;i<15000;i++){\n\t\t\texcelAPI.setCellValue(1, i, 0, \"De\u011fer : \"+i, i%3==0?ExcelAPIConstants.ALIGNMENT_HORIZONTAL_RIGHT:ExcelAPIConstants.ALIGNMENT_HORIZONTAL_LEFT);\n\t\t\texcelAPI.setCellFontBoldProp(1, i, 0, i%5==0);\n\t\t\texcelAPI.setCellFontItalicProp(1, i, 0, i%4==0);\n\t\t\texcelAPI.setCellBackgroundColor(1, i, 0, i%25==0?ExcelAPIConstants.COLOR_RED:(i%4==0?ExcelAPIConstants.COLOR_BLUE:ExcelAPIConstants.COLOR_GREEN));\n\t\t}\n\n\t\texcelAPI.closeExcelFile(true, false);\n\nexcelApi is a wrapper of HSSF POI APis", "id": 164701, "time": "2013-01-17T15:19:06Z", "bug_id": 54443, "creation_time": "2013-01-17T15:19:06Z", "is_private": false, "attachment_id": null}, {"count": 3, "attachment_id": null, "creator": "apache@gagravarr.org", "is_private": false, "id": 164702, "time": "2013-01-17T15:37:58Z", "bug_id": 54443, "creation_time": "2013-01-17T15:37:58Z", "tags": [], "text": "Any chance you could turn that code into a self contained junit unit test? That'd make life very easy for testing and fixing!"}, {"count": 4, "tags": [], "bug_id": 54443, "attachment_id": null, "text": "When there are duplicate cell styles ( i.e. via equals ), such that the later one has been used, because with HSSFOptimiser.optimiseCellStyles the way it works is that it removes the later duplicate but the earlier one wil also be removed if it has not been \"used\". This will effectively remove duplicated entries and mess up the records list.\n\nI suggest to change HSSFOptimiser so slightly, as to say\n\nisUsed[ newPos[ oldXf ] ] = true; for the part that removes unused styles, as the used one is now always the very first of all duplicates, and to not set the newPos[ duplicatedIndex ] to zero. I have tested it and no longer get an exception in such scenarios.", "id": 169387, "time": "2013-08-13T01:26:02Z", "creator": "dzareba@hotmail.com", "creation_time": "2013-08-13T01:26:02Z", "is_private": false}, {"count": 5, "tags": [], "text": "(In reply to dzareba from comment #4)\n> When there are duplicate cell styles ( i.e. via equals ), such that the\n> later one has been used, because with HSSFOptimiser.optimiseCellStyles the\n> way it works is that it removes the later duplicate but the earlier one wil\n> also be removed if it has not been \"used\". This will effectively remove\n> duplicated entries and mess up the records list.\n> \n> I suggest to change HSSFOptimiser so slightly, as to say\n> \n> isUsed[ newPos[ oldXf ] ] = true; for the part that removes unused styles,\n> as the used one is now always the very first of all duplicates, and to not\n> set the newPos[ duplicatedIndex ] to zero. I have tested it and no longer\n> get an exception in such scenarios.\n\nThere's another way. The thing is that duplicates should not be marked as being used. This is logical. Going through all the cells, get each and every one of their XF indexes. The XF index will always return the one which it is using, and so you want to be not using the duplicated ones, as they are going to get deleted. So mark the very first one as being used. Then what is not used has two alternatives. If it hasn't been zapped, that means it is a true unused one, else if it's already been zapped don't bother changing the positions as it already has been. Mark the new position as zero as usual for the true unused ones, as a sign of courtesy.", "is_private": false, "id": 169392, "creator": "dzareba@hotmail.com", "time": "2013-08-13T05:37:34Z", "bug_id": 54443, "creation_time": "2013-08-13T05:37:34Z", "attachment_id": null}, {"count": 6, "attachment_id": null, "bug_id": 54443, "is_private": false, "id": 169415, "time": "2013-08-14T01:32:40Z", "creator": "dzareba@hotmail.com", "creation_time": "2013-08-14T01:32:40Z", "tags": [], "text": "(In reply to dzareba from comment #4)\n> When there are duplicate cell styles ( i.e. via equals ), such that the\n> later one has been used, because with HSSFOptimiser.optimiseCellStyles the\n> way it works is that it removes the later duplicate but the earlier one wil\n> also be removed if it has not been \"used\". This will effectively remove\n> duplicated entries and mess up the records list.\n> \n> I suggest to change HSSFOptimiser so slightly, as to say\n> \n> isUsed[ newPos[ oldXf ] ] = true; for the part that removes unused styles,\n> as the used one is now always the very first of all duplicates, and to not\n> set the newPos[ duplicatedIndex ] to zero. I have tested it and no longer\n> get an exception in such scenarios.\n\nThere's another way. The thing is that duplicates should not be marked as being used. This is logical. Going through all the cells, get each and every one of their XF indexes. The XF index will always return the one which it is using, and so you want to be not using the duplicated ones, as they are going to get deleted. So mark the very first one as being used. Then what is not used has two alternatives. If it hasn't been zapped, that means it is a true unused one, else if it's already been zapped don't bother changing the positions as it already has been. Mark the new position as zero as usual for the true unused ones, as a sign of courtesy."}, {"count": 7, "tags": [], "creator": "dzareba@hotmail.com", "attachment_id": 30728, "id": 169417, "time": "2013-08-14T01:52:58Z", "bug_id": 54443, "creation_time": "2013-08-14T01:52:58Z", "is_private": false, "text": "Created attachment 30728\nA workaround to not getting ClassCastException"}, {"count": 8, "tags": [], "bug_id": 54443, "attachment_id": null, "id": 169418, "time": "2013-08-14T02:24:23Z", "creator": "dzareba@hotmail.com", "creation_time": "2013-08-14T02:24:23Z", "is_private": false, "text": "// simplest case this bug can be reproduced\n\nHSSFWorkbook workbook = new HSSFWorkbook( );\nHSSFCellStyle style = workbook.createCellStyle();\nHSSFCellStyle newStyle = workbook.createCellStyle();\n\t\t\t\nHSSFSheet mySheet = workbook.createSheet();\nHSSFRow row = mySheet.createRow( 0 );\nHSSFCell cell = row.createCell( 0 );\ncell.setCellStyle( newStyle );\n// style is now not assigned\n\t\t\t\nHSSFOptimiser.optimiseCellStyles( workbook );"}, {"count": 9, "tags": [], "bug_id": 54443, "text": "Thanks for the test case and suggested fix, should now be working as of r1613175.", "id": 176662, "time": "2014-07-24T16:27:10Z", "creator": "apache@gagravarr.org", "creation_time": "2014-07-24T16:27:10Z", "is_private": false, "attachment_id": null}]