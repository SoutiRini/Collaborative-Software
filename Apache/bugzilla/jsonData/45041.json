[{"count": 0, "tags": [], "bug_id": 45041, "is_private": false, "id": 116826, "attachment_id": null, "creator": "cpuidle@gmx.de", "creation_time": "2008-05-19T12:57:19Z", "time": "2008-05-19T12:57:19Z", "text": "After filling a couple of rows with 5 columns of data I'm trying to create the following formula that works fine in Excel:\n\nHSSFRow r = sheet.createRow(0);\n\n// create the IRR formula \nshort col = 0;\nHSSFCell c = r.createCell(col++);\nc.setCellType(HSSFCell.CELL_TYPE_FORMULA);\nc.setCellFormula(\"(1+IRR(SUMIF(A:A;ROW(INDIRECT(MIN(A:A)&\\\":\\\"&MAX(A:A)));B:B);0))^365-1\");\n\nThis results in the following inlikely error:\n\nException in thread \"main\" java.lang.IllegalArgumentException: Invalid Formula cell reference: 'A'\n\tat org.apache.poi.hssf.util.CellReference.<init>(CellReference.java:48)\n\tat org.apache.poi.hssf.util.AreaReference.<init>(AreaReference.java:43)\n\tat org.apache.poi.hssf.record.formula.AreaPtg.<init>(AreaPtg.java:55)\n\tat org.apache.poi.hssf.model.FormulaParser.Ident(FormulaParser.java:290)\n\tat org.apache.poi.hssf.model.FormulaParser.Factor(FormulaParser.java:522)\n\tat org.apache.poi.hssf.model.FormulaParser.Term(FormulaParser.java:660)\n\tat org.apache.poi.hssf.model.FormulaParser.Expression(FormulaParser.java:708)\n\tat org.apache.poi.hssf.model.FormulaParser.Arguments(FormulaParser.java:486)\n\tat org.apache.poi.hssf.model.FormulaParser.function(FormulaParser.java:358)\n\tat org.apache.poi.hssf.model.FormulaParser.Ident(FormulaParser.java:280)\n\tat org.apache.poi.hssf.model.FormulaParser.Factor(FormulaParser.java:522)\n\tat org.apache.poi.hssf.model.FormulaParser.Term(FormulaParser.java:660)\n\tat org.apache.poi.hssf.model.FormulaParser.Expression(FormulaParser.java:708)\n\tat org.apache.poi.hssf.model.FormulaParser.Arguments(FormulaParser.java:486)\n\tat org.apache.poi.hssf.model.FormulaParser.function(FormulaParser.java:358)\n\tat org.apache.poi.hssf.model.FormulaParser.Ident(FormulaParser.java:280)\n\tat org.apache.poi.hssf.model.FormulaParser.Factor(FormulaParser.java:522)\n\tat org.apache.poi.hssf.model.FormulaParser.Term(FormulaParser.java:660)\n\tat org.apache.poi.hssf.model.FormulaParser.Add(FormulaParser.java:674)\n\tat org.apache.poi.hssf.model.FormulaParser.Expression(FormulaParser.java:710)\n\tat org.apache.poi.hssf.model.FormulaParser.Factor(FormulaParser.java:518)\n\tat org.apache.poi.hssf.model.FormulaParser.Term(FormulaParser.java:660)\n\tat org.apache.poi.hssf.model.FormulaParser.Expression(FormulaParser.java:708)\n\tat org.apache.poi.hssf.model.FormulaParser.parse(FormulaParser.java:812)\n\tat org.apache.poi.hssf.usermodel.HSSFCell.setCellFormula(HSSFCell.java:649)\n\nIs there any way this formula could be created from POI?"}, {"attachment_id": null, "tags": [], "bug_id": 45041, "text": "I've verified error message with 3.1b1- still existing but different:\n\nException in\nthread \"main\" org.apache.poi.hssf.model.FormulaParser$FormulaParseException: Integer Expected\n\tat\norg.apache.poi.hssf.model.FormulaParser.expected(FormulaParser.java:137)\n\tat org.apache.poi.hssf.model.FormulaParser.parseNumber(FormulaParser.java:578)\n\tat\norg.apache.poi.hssf.model.FormulaParser.parseSimpleFactor(FormulaParser.java:545)\n\tat\norg.apache.poi.hssf.model.FormulaParser.percentFactor(FormulaParser.java:502)\n\tat org.apache.poi.hssf.model.FormulaParser.powerFactor(FormulaParser.java:489)\n\tat\norg.apache.poi.hssf.model.FormulaParser.Term(FormulaParser.java:703)\n\tat org.apache.poi.hssf.model.FormulaParser.additiveExpression(FormulaParser.java:781)\n\tat\norg.apache.poi.hssf.model.FormulaParser.concatExpression(FormulaParser.java:766)\n\tat\norg.apache.poi.hssf.model.FormulaParser.comparisonExpression(FormulaParser.java:723)\n\tat\norg.apache.poi.hssf.model.FormulaParser.Arguments(FormulaParser.java:479)\n\tat org.apache.poi.hssf.model.FormulaParser.function(FormulaParser.java:326)\n\tat\norg.apache.poi.hssf.model.FormulaParser.parseIdent(FormulaParser.java:236)\n\tat org.apache.poi.hssf.model.FormulaParser.parseSimpleFactor(FormulaParser.java:542)\n\tat\norg.apache.poi.hssf.model.FormulaParser.percentFactor(FormulaParser.java:502)\n\tat org.apache.poi.hssf.model.FormulaParser.powerFactor(FormulaParser.java:489)\n\tat\norg.apache.poi.hssf.model.FormulaParser.Term(FormulaParser.java:703)\n\tat org.apache.poi.hssf.model.FormulaParser.additiveExpression(FormulaParser.java:781)\n\tat\norg.apache.poi.hssf.model.FormulaParser.concatExpression(FormulaParser.java:766)\n\tat\norg.apache.poi.hssf.model.FormulaParser.comparisonExpression(FormulaParser.java:723)\n\tat\norg.apache.poi.hssf.model.FormulaParser.Arguments(FormulaParser.java:479)\n\tat org.apache.poi.hssf.model.FormulaParser.function(FormulaParser.java:326)\n\tat\norg.apache.poi.hssf.model.FormulaParser.parseIdent(FormulaParser.java:236)\n\tat org.apache.poi.hssf.model.FormulaParser.parseSimpleFactor(FormulaParser.java:542)\n\tat\norg.apache.poi.hssf.model.FormulaParser.percentFactor(FormulaParser.java:502)\n\tat org.apache.poi.hssf.model.FormulaParser.powerFactor(FormulaParser.java:489)\n\tat\norg.apache.poi.hssf.model.FormulaParser.Term(FormulaParser.java:703)\n\tat org.apache.poi.hssf.model.FormulaParser.additiveExpression(FormulaParser.java:787)\n\tat\norg.apache.poi.hssf.model.FormulaParser.concatExpression(FormulaParser.java:766)\n\tat\norg.apache.poi.hssf.model.FormulaParser.comparisonExpression(FormulaParser.java:723)\n\tat\norg.apache.poi.hssf.model.FormulaParser.parseSimpleFactor(FormulaParser.java:532)\n\tat\norg.apache.poi.hssf.model.FormulaParser.percentFactor(FormulaParser.java:502)\n\tat org.apache.poi.hssf.model.FormulaParser.powerFactor(FormulaParser.java:489)\n\tat\norg.apache.poi.hssf.model.FormulaParser.Term(FormulaParser.java:703)\n\tat org.apache.poi.hssf.model.FormulaParser.additiveExpression(FormulaParser.java:781)\n\tat\norg.apache.poi.hssf.model.FormulaParser.concatExpression(FormulaParser.java:766)\n\tat\norg.apache.poi.hssf.model.FormulaParser.comparisonExpression(FormulaParser.java:723)\n\tat\norg.apache.poi.hssf.model.FormulaParser.parse(FormulaParser.java:820)\n\tat org.apache.poi.hssf.usermodel.HSSFCell.setCellFormula(HSSFCell.java:641)\n\n", "count": 1, "id": 116828, "time": "2008-05-19T13:18:59Z", "creator": "cpuidle@gmx.de", "creation_time": "2008-05-19T13:18:59Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 45041, "attachment_id": null, "text": "Based on the 3.1b1 error message I've also investigated if POI was potentially confused\nby the A:A column notation and changed the formula like this, unfortunately still with\nthe same error message:\n(1+IRR(SUMIF(A1:A100;ROW(INDIRECT(MIN(A1:A100)&\\\":\\\"&MAX(A1:A100)));B1:B100);0))^365-1\n\nI\ncould find if this should work- may be the \"Everything else\" under unsupported features\non the POI website includes my case :(\n\n", "id": 116830, "time": "2008-05-19T13:21:30Z", "creator": "cpuidle@gmx.de", "creation_time": "2008-05-19T13:21:30Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 45041, "text": "The problem appears to be with the use of semicolons (;) for argument separators when POI expects commas (,).  My understanding was that Excel uses commas too.  Is there any circumstance that allows semicolon?\n\nIf I change the semicolons to commas, POI parses the formula OK.  \n\nI have added a patch (in svn r658033) to improve the formula parse error messages.  The first code example in this bugzilla should now produce this:\n\nException in thread \"main\" org.apache.poi.hssf.model.FormulaParser$FormulaParseException: Parse error near char 16';' in specified formula '(1+IRR(SUMIF(A:A;ROW(INDIRECT(MIN(A:A)&\":\"&MAX(A:A)));B:B);0))^365-1'. Expected Integer\n\tat org.apache.poi.hssf.model.FormulaParser.expected(FormulaParser.java:140)\n\tat ...\n\n\nBTW - The full column references should not be a problem for this example.  A partial fix for bug 44410 was applied in svn r628044 (rel 3.1-beta1), and this seems to be enough to make expressions like 'A:A' work.", "id": 116834, "time": "2008-05-19T16:16:32Z", "creator": "josh@apache.org", "creation_time": "2008-05-19T16:16:32Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "text": "Can confirm ; was the problem, thank you. My mistake- copied formula our of English Excel\non English XP with German local settings... \nShould the error message potentially say\n\"Expected integer or ;\"?\n", "is_private": false, "bug_id": 45041, "id": 116843, "time": "2008-05-20T07:38:56Z", "creator": "cpuidle@gmx.de", "creation_time": "2008-05-20T07:38:56Z", "attachment_id": null}, {"count": 5, "tags": [], "text": "Update- there is a second bug lurking behind the first one. Let me know if I should open\nseparately:\n\nIf you enter two sample lines of data into columns a and b like this:\n01.01.2007\t100,00\n01.01.2008\t-250\n\nIn\nExcel however I see either #VALUE! or #DIV/0! in the formula field. Entering the field,\nappending a \" \" character and OKing it fixes the problem and field displays a value. It\nseems Excel is correcting the formula in the background- visually it does not change by\nthis process.\n", "attachment_id": null, "bug_id": 45041, "id": 116848, "time": "2008-05-20T08:32:13Z", "creator": "cpuidle@gmx.de", "creation_time": "2008-05-20T08:32:13Z", "is_private": false}, {"count": 6, "tags": [], "bug_id": 45041, "is_private": false, "id": 117074, "attachment_id": null, "creator": "josh@apache.org", "creation_time": "2008-05-27T23:35:04Z", "time": "2008-05-27T23:35:04Z", "text": "Bug 45060 was opened to deal with the additional issue mentioned in comment #5.  As it turns out after fixing that bug, there is nothing else stopping the example in this bugzilla from working."}]