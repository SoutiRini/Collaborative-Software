[{"count": 0, "tags": [], "text": "================================================================================\n===================================\nSYNOPSIS:\nAfter a great deal of effort researching why the Visual Age for Java (VAJ) \nservlets distributed with the Ant VAJ tasks are not working I believe I have \ndiscovered the underlying problem.  The true problem revolves around untested \nchanges to the source code and fundamental misunderstandings of what the code \nis doing.\n\n================================================================================\n===================================\nAPOLOGIES:\nPlease understand that I am very thankful for the Ant VAJ task code and \ndocumentation that exist.  Although the code has problems, it still provides a \ngreat deal of guidance.  With that said, I am going to be brutally honest as to \nwhat I think has happened in the hope that the underlying organizational \nproblem will be solved.\n\n================================================================================\n===================================\nOVERVIEW OF THE ENVIRONMENT IN WHICH THE CODE MUST RUN:\n\nTo understand the Ant VAJ tasks you must first understand the VAJ Remote Tool \nAPI \n(http://www7b.boulder.ibm.com/vajdoc/vahwebx.exe/en_US/vj32/Synch/13711/toolserv\n/concepts/cwtoolov.htm) as well as the VAJ Tool API \n(http://www7b.boulder.ibm.com/vajdoc/vahwebx.exe/en_US/vj32/Extract/0/toolint/re\nf/com.ibm.ivj.util.base.Package.html).  IBM has provided a small embedded \nservlet engine that provides an identical interface to the standard servlet \nAPI.  Although the interface is the same the classes are entirely different. \n(i.e. com.ibm.ivj.toolserver.servletclasses.servlet.http.HttpServlet rather \nthan javax.servlet.http.HttpServlet).  By writing a servlet for this embedded \nservlet engine one achieves the ability to externally access the workspace of a \nrunning VAJ IDE instance.  Within this servlet one can do whatever is necessary \nincluding accessing the VAJ Tool API.\n\nUnfortunately using the VAJ Remote Tool API seems to be the only way to obtain \nexternal access to a VAJ Envy repository.  Worse yet this means pushing an IDE \ninstance just to do so.  This is bad, but it is the way it is and we must live \nwith it.\n\nA very important issue is that making use of the VAJ Remote Tool API is a bit \nawkward and so far the error messages it returns are fairly cryptic.  The \nsecret to successfully using the Remote Tool API is to keep down the \ndependencies of the servlets created.  This is particularly important when it \ncomes to installing them.  Any remote client code can be as complex as needed \nwith as many dependencies as necessary, its simply code that runs inside the \nembedded servlet engine that is tricky.\n\nAs should be evident by now, properly testing the VAJ Remote Tool servlets \nwithout a copy of VAJ is difficult if not impossible.\n\n================================================================================\n===================================\nTHE EVIL THAT NOW EXISTS:\n\n1) The code has been edited by someone who obviously did not take the time to \nunderstand it and the environment in which it must run.\n\tEvidence: The imports of the following classes:\n\timport com.ibm.ivj.toolserver.servletclasses.servlet.http.HttpServlet;\n\timport \ncom.ibm.ivj.toolserver.servletclasses.servlet.http.HttpServletRequest;\n\timport \ncom.ibm.ivj.toolserver.servletclasses.servlet.http.HttpServletResponse;\n\timport com.ibm.ivj.toolserver.servletclasses.servlet.ServletException;\n\n\thave been changed to:\n\timport javax.servlet.http.HttpServlet;\n\timport javax.servlet.http.HttpServletRequest;\n\timport javax.servlet.http.HttpServletResponse;\n\timport javax.servlet.ServletException;\n\n\tin org.apache.tools.ant.taskdefs.optional.ide.VAJToolsServlet.\n\t(See the above explanation of the embedded servlet engine if you don't \nsee why this is wrong.)\n\n2) The code changes to the VAJ Ant tasks were not even halfway tested.\n\tEvidence: The problems created by the mistake listed as evil #1 would \nhave been detected.\n\n3) In an effort to bring the VAJ Ant task code up to the Jakarta coding \nstandards the tool server servlets contain more and more dependencies on the \nAnt libraries.  As mentioned previously this would generally be ok except for \nthe difficulties involved in deploying servlets in the embedded servlet \nengine.  I attribute this mistake to evil #1 and #2.\n\tEvidence A: JDepend now provides a much longer list of dependencies for \nthe VAJ Ant tasks than is seen in the VAJ Ant documentation.\n\tEvidence B: The  \norg.apache.tools.ant.taskdefs.optional.ide.VAJToolsServlet class has been \nchanged to use the StringUtils class in ant.\n\n4) The install procedures provided in the VAJ Ant task documentation is no \nlonger adequate due to evil #3.\n\tEvidence: The fact I am having problems.\n\nI am sure much more evidence for each evil can be provided, but what is given \nshould be adequate proof.\n================================================================================\n===================================\nSOLUTIONS:\n\n1) Separate the VAJ Ant Remote Tool API servlets and the classes it depends on \nfrom the rest of the Ant VAJ tasks.  This should make the install go much more \nsmoothly.  This could probably be accomplished by creating a special target in \nthe ant build file.\n\n2) Avoid as many dependencies as possible in the VAJ Ant Remote Tool API \nservlets.\n\n3) Test any changes to the Ant VAJ tasks.  Although awkward it should be \npossible to write junit tests for this nastiness.  I realize this means keeping \na version of VAJ around.\n\n4) Understand the code and the environment it must run in before blindly \nchanging it.\n\n================================================================================\n===================================\nTHANKS:\n\nThank you for your time and consideration in reading this rather long and \naccusatory posting.", "attachment_id": null, "id": 20503, "creator": "nawkboy@yahoo.com", "time": "2002-07-31T22:02:50Z", "bug_id": 11348, "creation_time": "2002-07-31T22:02:50Z", "is_private": false}, {"count": 1, "tags": [], "creator": "sbailliez@apache.org", "attachment_id": null, "text": "Thank you for your long post, but that does not bring us anywhere.\nFYI no committers actually use VAJ.\n\n*** This bug has been marked as a duplicate of 10016 ***", "id": 21112, "time": "2002-08-15T21:18:44Z", "bug_id": 11348, "creation_time": "2002-08-15T21:18:44Z", "is_private": false}]