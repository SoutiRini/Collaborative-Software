[{"count": 0, "tags": [], "bug_id": 58009, "attachment_id": null, "id": 183350, "time": "2015-06-08T03:16:53Z", "creator": "mattcoz@yahoo.com", "creation_time": "2015-06-08T03:16:53Z", "is_private": false, "text": "I have a process that builds a zip file, stores it as a temp file, and then forwards the request to the path of the temp file to deliver it to the user. This was working in Tomcat 6 and it works on my test server which is running Tomcat 8.0.3, but when deploying on the live server which is running Tomcat 8.0.21 it gives me a 404 response saying \"The requested resource is not available.\" The path to the file is correct, if I manually access the path I get the file. Actually, if try to access it very quickly I will get the 404 response but then get the file if I try again. It seems that the newly created file is not immediately found by Tomcat, like there's a delay of a few seconds. Could this be a regression caused by the static resource cache changes in Tomcat 8.0.10?"}, {"count": 1, "tags": [], "bug_id": 58009, "is_private": false, "id": 183363, "creation_time": "2015-06-08T15:25:09Z", "time": "2015-06-08T15:25:09Z", "creator": "remm@apache.org", "text": "There's a resource cache, so if you create - or delete, modify, etc - a file using direct file access, then you can get stale data. In some situations, there's no workaround except disable the cache. The new cache may be caching more than the previous one, causing the new behavior.\n\nPlease provide a test case to investigate further.", "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 58009, "attachment_id": null, "text": "Actually, after restarting the test server I'm getting the same behavior there, so the regression is not in 8.0.10. Disabling the resource cache does fix it, but that doesn't seem to be ideal. If the file is not found in the cache, shouldn't it try to retrieve the file normally?", "id": 183369, "time": "2015-06-08T18:45:16Z", "creator": "mattcoz@yahoo.com", "creation_time": "2015-06-08T18:45:16Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 58009, "text": "'Not found' results are cached as well. I suspect the application code is checking that the file exists, discovering that it doesn't (which is cached), ading the file (outside of the WebResources impl) and the trying to access at which point it is seeing the cached 'not found' response.\n\nIt may be possible to fix the application to avoid triggering the addition of the resource to the cache as 'not found'. Maybe the answer is extending the WebResources API to include creation of resources. There are probably other solutions as well. A simple test case that demonstrates the issue would enable us to evaluate the different possible solutions.", "id": 183384, "time": "2015-06-09T10:19:14Z", "creator": "markt@apache.org", "creation_time": "2015-06-09T10:19:14Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 58009, "attachment_id": null, "text": "No test case has been provided. Further, the WebResourceRoot already contains methods for adding resources that correctly interacts with caching if caching is enabled. It is used, for example, with HTTP PUT.\n\nThe Servlet API provides no standard mechanisms for writing new resources (it doesn't even assume that the web application is served from a file system) so you are always going to have to work wth some form of container specific interface.\n\nIn Tomcat the options are:\n- disable caching\n- don't try to access the file before you try to write to it\n- use WebResourceRoot.write(String, InputStream, boolean)", "id": 183558, "time": "2015-06-16T13:43:44Z", "creator": "markt@apache.org", "creation_time": "2015-06-16T13:43:44Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 58009, "attachment_id": null, "text": "One more option: write a new servlet to serve your new files off the filesystem instead of relying on DefaultServlet to do it for you.\n\nWhile this strategy will work, it's easy to do it wrong, or fail to implement nice features like Range requests, ETag/IfModifiedSince/etc.", "id": 183569, "time": "2015-06-16T20:00:05Z", "creator": "chris@christopherschultz.net", "creation_time": "2015-06-16T20:00:05Z", "is_private": false}]