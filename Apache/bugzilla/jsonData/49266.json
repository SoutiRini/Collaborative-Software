[{"count": 0, "tags": [], "creator": "szeder@ira.uka.de", "text": "Have a look at the output of ant commands taken from the ant manual's \"Check Installation\" section and the ant website's \"Having Problems?\" page when they are executed with an empty CLASSPATH variable (which is even suggested by the \"Having Problems?\" page!):\n\n$ unset CLASSPATH\n$ ant\nThe -cp argument must be followed by a classpath expression\n$ ant -version\nBuildfile: build.xml does not exist!\nBuild failed\n$ ant -diagnostics\nBuildfile: build.xml does not exist!\nBuild failed\n$ ant -verbose\nBuildfile: build.xml does not exist!\nBuild failed\n\nThis is obviously not good; ant does not even print its version.\n\nThe problem is at the end of the bin/ant startup script, where the ant_exec_command variable is assembled.  The -cp \"$CLASSPATH\" options are appended to the command line even when the CLASSPATH is empty, resulting in a command line which looks like 'exec java ... -cp \"\"'.  Java then sees the -cp option without a class path or jar file and errors out, or it sees something like \"... -cp -version\" and treats that first argument as a class path or jar file.\n\nThe attached patch resolves this issue by checking CLASSPATH's emptyness and omiting the -cp option in that case.", "id": 136737, "time": "2010-05-07T15:44:55Z", "bug_id": 49266, "creation_time": "2010-05-07T15:44:55Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "creator": "szeder@ira.uka.de", "text": "Created attachment 25417\nBugfix", "id": 136738, "time": "2010-05-07T15:48:48Z", "bug_id": 49266, "creation_time": "2010-05-07T15:48:48Z", "is_private": false, "attachment_id": 25417}, {"count": 2, "tags": [], "bug_id": 49266, "attachment_id": null, "is_private": false, "id": 136739, "time": "2010-05-07T16:26:02Z", "creator": "jglick@apache.org", "creation_time": "2010-05-07T16:26:02Z", "text": "(In reply to comment #0)\n> $ unset CLASSPATH\n> $ ant\n> The -cp argument must be followed by a classpath expression\n\nDoes not happen to me. Are you using a custom java launcher wrapper shell script? Run\n\nfile `which java`\n\nand if it is not something like \"ELF 32-bit LSB executable\", you might have a buggy launcher - e.g. using $* or $@ rather than \"$@\" for program arguments.\n\n> The -cp \"$CLASSPATH\" options are\n> appended to the command line even when the CLASSPATH is empty, resulting in a\n> command line which looks like 'exec java ... -cp \"\"'\n\nMore like:\n\nexec java -classpath \"...antstuff...\" -Dant.home=... -D... org.apache.tools.ant.launch.Launcher -version -cp \"\"\n\ni.e. three args are passed to main(String[]) in this example: {\"-version\", \"-cp\", \"\"}, which should be fine."}, {"count": 3, "text": "works for me as well (tested on Linux and Windows using cygwin) - I tend\nstick with an undefined CLASSPATH and it works.\n\nThe -cp argument is a command line argument of the launcher class, not\nof the Java virtual machine.", "creator": "bodewig@apache.org", "is_private": false, "id": 136751, "time": "2010-05-10T09:38:47Z", "bug_id": 49266, "creation_time": "2010-05-10T09:38:47Z", "tags": [], "attachment_id": null}]