[{"attachment_id": null, "tags": [], "creator": "cybersam@alum.rpi.edu", "is_private": false, "count": 0, "id": 24651, "time": "2002-10-16T17:48:58Z", "bug_id": 13704, "creation_time": "2002-10-16T17:48:58Z", "text": "In looking at the source for addEventListener() in \norg.apache.batik.dom.events.EventSupport, I noticed a bug due to a possible \nrace condition.  The bug is that the method starts out as follows:\n\n========= START CODE =========\n    public void addEventListener(String type, EventListener listener, \n                                                 boolean useCapture) { \nHashTable listeners;\n            if (useCapture) {\n                if (capturingListeners == null) {\n                        capturingListeners = new HashTable();\n                }\n                listeners = capturingListeners;\n            } else {\n                if (bubblingListeners == null) {\n                        bubblingListeners = new HashTable();\n                }\n                listeners = bubblingListeners;\n            }\n.\n.\n.\n ========= END CODE =========\n\nYou'll notice that nothing is synchronized, so if multiple threads call \naddEventListener() at around the same time, it is possible for the \ncapturingListeners and/or bubblingListeners objects to be created multiple \ntimes.  If that happens, the initially created Hashtable objects are simply \nthrown away, and any listeners they might have contained are forgotten.  \nA \"simple fix\" would be to have at least have a \"synchronized(this)\" block  \naround the if/else statement.\n\nHowever, the best fix (more efficient, since you can avoid expensive \nsynchronization every time you call addEventListener) would be to just \ninitialize the two Hashtables in the EventSupport constructor, rather than to \ntry to do just-in-time initialization.  And the offending if/else statements \nshould be eliminated.\n\nAside: For a good article on why some supposedly safe just-in-time \ninitialization schemes (or \"double-checked locking\" schemes) are not safe, see \n<http://www.javaworld.com/javaworld/jw-05-2001/jw-0525-double_p.html>."}, {"count": 1, "tags": [], "bug_id": 13704, "attachment_id": null, "is_private": false, "id": 24775, "time": "2002-10-17T12:30:06Z", "creator": "hillion@apache.org", "creation_time": "2002-10-17T12:30:06Z", "text": "Batik's DOM must be accessed from a single thread (see \nhttp://xml.apache.org/batik/javaScripting.html).\n"}]