[{"count": 0, "attachment_id": null, "bug_id": 55748, "is_private": false, "id": 171085, "time": "2013-11-06T09:38:55Z", "creator": "ck.kenny.chang@gmail.com", "creation_time": "2013-11-06T09:38:55Z", "tags": [], "text": "Exception Type: IOException.\nException Message: Duplicate name \"\u0005DocumentSummaryInformation\"\nDetail:\n    When reading an excel file that was tranfered from a oversea teammate, I found the exception happened and just could not go further even debugging with POI Source code (version 3.9 HSSF).\n    And there is a  very surprising thing: If I opened the xls file and did some operation like \"Pressing Ctrl + S\" on it or saved it as another xls file, It could be read then.\n    At first I thought It might be file encoding prolbem. but after I query the encoding with cpdetector_1.0.0.jar, the encoding charset of the 2 files are the same ,both \"UTF-16BE\".\n    Then I debugged with the source code and found something interesting:\n    1) running to the method: convertToProperties(ListManagedBlock [] blocks) at class \"PropertyFactory.java\" ,the paramter \"ListManagedBlock [] blocks\" with 2 blocks in the list , was different between these 2 cases: reading orginal file and reading another \"save as\" file.\n    2) Method: addChild(final Property property) throwed the exception:\n      if (_children_names.contains(name))\n        {\n            throw new IOException(\"Duplicate name \\\"\" + name + \"\\\"\");\n        }\n    3) in the 2 blocks \"ListManagedBlock [] blocks\": \n       When reading OK,\n     the first block read: Root Entry  Workbook  \u0005SummaryInformation \t\u0005DocumentSummaryInformation \n     the second block read: \u0001CompObj  IrmToolInfoStream IrmToolSLevelInfo.\n\n\n     When reading with exception:\n     the first block read: Root Entry  Workbook  \u0005SummaryInformation \t\u0005DocumentSummaryInformation \n     the second block read: \u0001\u0005DocumentSummaryInformation.\n      \n     It read \"DocumentSummaryInformation\" again and the code check in the \"Set\" contains the object and throw the exception.\n\nThe following is the StackTrace:\njava.io.IOException: Duplicate name \"\u0005DocumentSummaryInformation\"\n\tat org.apache.poi.poifs.property.DirectoryProperty.addChild(DirectoryProperty.java:266)\n\tat org.apache.poi.poifs.property.PropertyTableBase.populatePropertyTree(PropertyTableBase.java:115)\n\tat org.apache.poi.poifs.property.PropertyTableBase.<init>(PropertyTableBase.java:63)\n\tat org.apache.poi.poifs.property.PropertyTable.<init>(PropertyTable.java:63)\n\tat org.apache.poi.poifs.filesystem.POIFSFileSystem.<init>(POIFSFileSystem.java:159)\n\tat org.apache.poi.hssf.usermodel.HSSFWorkbook.<init>(HSSFWorkbook.java:322)\n\tat org.apache.poi.hssf.usermodel.HSSFWorkbook.<init>(HSSFWorkbook.java:303)\n\tat org.apache.poi.hssf.usermodel.examples.HSSFReadWrite.readFile(HSSFReadWrite.java:51)\n\tat org.apache.poi.hssf.usermodel.examples.HSSFReadWrite.main(HSSFReadWrite.java:163)\n\n\nSorry to tell you i can't upload the file that can't be read.But I think you enginners may know that kind of exception and give me a quick reponse. \n\nThank you very much. \n\n    Kenny."}, {"count": 1, "tags": [], "creator": "apache@gagravarr.org", "is_private": false, "id": 171090, "attachment_id": null, "bug_id": 55748, "creation_time": "2013-11-06T13:07:01Z", "time": "2013-11-06T13:07:01Z", "text": "Try with NPOIFSFileSystem instead of POIFSFileSystem, just in case it's something odd\n\nOtherwise, without the file, there's not much that we can do. Most likely though, it's just an invalid file - entries within the POIFS (ole2) structure must have unique names. From the exception, it looks like you've somehow ended up with two entries with the same name, which isn't allowed"}, {"count": 2, "tags": [], "text": "Same Exception after substitued with NPOIFSFileSystem.\nWhen tracing with POI Source code , NPOIFSFileSystem and POIFSFileSystem Both  run into the same method when parsing the head_block (entry of excel). \n\nAny other suggestion?\n\nWhat is more, between the following Two ways of reading the excel file:\n1) directly read: No change on the excel file, report exception :Duplicate name \"\u0005DocumentSummaryInformation\";\n2) read the excel file after save it as another one:  ALL OK.\n\nCould you share me some experience about the reason why this strange thing happened?\nMay be I can have some idea for solution by your saying.\n\n\nThank you.", "is_private": false, "bug_id": 55748, "id": 171138, "time": "2013-11-08T02:04:19Z", "creator": "ck.kenny.chang@gmail.com", "creation_time": "2013-11-08T02:04:19Z", "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 55748, "attachment_id": null, "text": "Without the file, I can't be sure, but my hunch is that your file didn't come from Excel but came from something that doesn't follow the spec properly\n\nAs far as I can tell, your file contains two OLE2 streams with exactly the same entry name. I don't know which one Excel is picking (if any) when you do the open and re-save, but it is clearly throwing one away to fix up your file. \n\nYou should probably find out where the file came from, and see if you can talk to whoever wrote that software to not duplicate the properties. In the mean time, I'm very reluctant to remove the duplicate check as it'll catch other problems, especially if I don't know where your broken file came from, and without having that file (or one like it) to use in unit testing", "id": 171185, "time": "2013-11-11T23:11:50Z", "creator": "apache@gagravarr.org", "creation_time": "2013-11-11T23:11:50Z", "is_private": false}, {"count": 4, "tags": [], "text": "For now I think this will not be fixed as the check is on-purpose unless we know where the invalid file comes from. Please reopen if you can provide more information.", "is_private": false, "bug_id": 55748, "id": 171932, "time": "2013-12-26T09:09:40Z", "creator": "dominik.stadler@gmx.at", "creation_time": "2013-12-26T09:09:40Z", "attachment_id": null}]