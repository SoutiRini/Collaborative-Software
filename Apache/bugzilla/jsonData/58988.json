[{"count": 0, "tags": [], "bug_id": 58988, "text": "The following escaping behavior should be implemented:\nhttps://httpd.apache.org/docs/2.2/mod/mod_rewrite.html#quoting", "id": 188331, "time": "2016-02-10T14:22:38Z", "creator": "remm@apache.org", "creation_time": "2016-02-10T14:22:38Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "creator": "felix.schumacher@internetallee.de", "attachment_id": 33544, "text": "Created attachment 33544\nLet backslashes escape characters\n\nThis will enable escaping (quoting) by using an backslash.\n\nApart from this, it will enable escaping the percent sign by using %%. It also fixes a bug, when % was not followed by a digit or a curly brace.\n\nThe functionality for %% should probably not be added.\n\nDocumentation for the quotation feature is missing, too.", "id": 188332, "time": "2016-02-10T14:53:29Z", "bug_id": 58988, "creation_time": "2016-02-10T14:53:29Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 58988, "attachment_id": null, "text": "Normally % should be escaped with \\% according to the documentation, not anything else.", "id": 188333, "time": "2016-02-10T14:55:56Z", "creator": "remm@apache.org", "creation_time": "2016-02-10T14:55:56Z", "is_private": false}, {"count": 3, "tags": [], "creator": "remm@apache.org", "text": "This looks fixed by r1729730", "id": 188357, "attachment_id": null, "bug_id": 58988, "creation_time": "2016-02-11T12:54:26Z", "time": "2016-02-11T12:54:26Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 58988, "attachment_id": null, "id": 188367, "time": "2016-02-11T16:34:40Z", "creator": "felix.schumacher@internetallee.de", "creation_time": "2016-02-11T16:34:40Z", "is_private": false, "text": "Fixed in 9.0.0.M4 and 8.0.33."}, {"count": 5, "tags": [], "bug_id": 58988, "attachment_id": null, "text": "It seems not fixed at 8.5.20 - \\%20 was converted to %2520", "id": 202026, "time": "2017-11-09T18:55:46Z", "creator": "stefan.hall@drv-bund.de", "creation_time": "2017-11-09T18:55:46Z", "is_private": false}, {"count": 6, "text": "(In reply to Stefan from comment #5)\n> It seems not fixed at 8.5.20 - \\%20 was converted to %2520\n\nWhat happens when you don't place the backslash in front of %20?", "bug_id": 58988, "attachment_id": null, "id": 202028, "time": "2017-11-09T19:58:17Z", "creator": "felix.schumacher@internetallee.de", "creation_time": "2017-11-09T19:58:17Z", "tags": [], "is_private": false}, {"count": 7, "tags": [], "bug_id": 58988, "text": "With backslash\n---\nRewriteRule    ^/context/id=(\\w{3})(\\d{12}).*$          %{CONTEXT_PATH}/site/form/?mode=search&key=Help\\%20Desk&key2=\"$1$2\" [NC,NE,L]\n\nRESULT - wrong URL\n         fqdn/context/site/form/?mode=search&key=Help%2520Desk&key2=\"1234\"\n\nWithout backslash\n---\nRewriteRule    ^/context/id=(\\w{3})(\\d{12}).*$          %{CONTEXT_PATH}/site/form/?mode=search&key=Help%20Desk&key2=\"$1$2\" [NC,NE,L]\n\nRESULT - Exception\n10-Nov-2017 16:03:52.643 SCHWERWIEGEND [http-nio-80-exec-28] org.apache.coyote.http11.Http11Processor.service Error processing request\n java.lang.NullPointerException\n\tat org.apache.catalina.valves.rewrite.Substitution$RewriteCondBackReferenceElement.evaluate(Substitution.java:65)\n\tat org.apache.catalina.valves.rewrite.Substitution.evaluate(Substitution.java:269)\n\tat org.apache.catalina.valves.rewrite.RewriteRule.evaluate(RewriteRule.java:135)\n\tat org.apache.catalina.valves.rewrite.RewriteValve.invoke(RewriteValve.java:313)\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1457)\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\n\tat java.lang.Thread.run(Thread.java:748)", "id": 202037, "time": "2017-11-10T15:06:52Z", "creator": "stefan.hall@drv-bund.de", "creation_time": "2017-11-10T15:06:52Z", "is_private": false, "attachment_id": null}, {"count": 8, "tags": [], "bug_id": 58988, "text": "When a RewriteRule such as\n\nRewriteRule /abc /r%20\n\nis used, the %2 will be interpreted as a back-reference to a match.\n\nYour condition has two matching groups, but %2 would reference back to a third group, that does not exist. That's where the NPE comes from. (I left out the matching groups for simplicity.)\n\nIf you escape the % with a backslash, it will be put verbatim in the (url decoded) rewritten path and finally url encoded into %25.\n\nWhat you need is a way to encode %20 into a static string - that is a space in this case, right?", "id": 202044, "attachment_id": null, "creator": "felix.schumacher@internetallee.de", "creation_time": "2017-11-10T21:06:31Z", "time": "2017-11-10T21:06:31Z", "is_private": false}, {"count": 9, "tags": [], "bug_id": 58988, "attachment_id": null, "text": "Can you try and add an R flag to the variant that has the escaped percent sign?", "id": 202045, "time": "2017-11-10T21:30:17Z", "creator": "felix.schumacher@internetallee.de", "creation_time": "2017-11-10T21:30:17Z", "is_private": false}, {"count": 10, "tags": [], "bug_id": 58988, "attachment_id": null, "text": "That's right, I missed %2 as a back-reference.\nAdding a R flag does the job. I don't know why and seems a bit tricky, but it solves the problem. \n\nthank you very much!", "id": 202087, "time": "2017-11-12T14:20:50Z", "creator": "stefan.hall@drv-bund.de", "creation_time": "2017-11-12T14:20:50Z", "is_private": false}, {"count": 11, "text": "Re-resolving this as FIXED since the original issue is fixed.\n\n%20 is a special case. The rules are based on decoded URIs. The problem is that space is a delimiter for the rules so while there are ways (via regular expressions) to use space in a pattern, there isn't a way to include a space in the substitution.\n\nOne option would be to decode the rules but that would likely break existing rules.\n\nUsing R is probably the best work-around if you need to include a space in the re-written URI.", "bug_id": 58988, "attachment_id": null, "id": 202159, "time": "2017-11-15T21:25:54Z", "creator": "markt@apache.org", "creation_time": "2017-11-15T21:25:54Z", "tags": [], "is_private": false}]