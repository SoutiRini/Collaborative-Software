[{"count": 0, "tags": [], "text": "Created attachment 32843\nA test file to reproduce the problem with\n\nDear all,\n\nI\u2019m looking for a simple solution to parse only the newest version of an XWPF file (as if all changes are accepted or so). As far as I could google and browse through the javadoc there is no such functionality in apache poi, is that correct?\nI.e.:\n- Open a MS Word document\n- Track changes\n- Remove text from the document (in tracked-mode)\n- Save. (see file attached)\n\n- Open file with apache POI\n- iterate through paragraphs\n- call getText() on the paragraphs\n\nOutcome: The removed text is returned.\nExpected: Only text of the \"final version\" of the document is returned.\n\nBest,\nHenning", "is_private": false, "bug_id": 58067, "id": 183684, "time": "2015-06-22T11:36:48Z", "creator": "femmer@in.tum.de", "creation_time": "2015-06-22T11:36:48Z", "attachment_id": 32843}, {"count": 1, "tags": [], "creator": "femmer@in.tum.de", "attachment_id": 32844, "is_private": false, "id": 183685, "time": "2015-06-22T11:41:04Z", "bug_id": 58067, "creation_time": "2015-06-22T11:41:04Z", "text": "Created attachment 32844\nPatch\n\nHere is a patch, that checks if there is a deletion item associated with a run, before it adds the text. I'm not sure which other items could contain such a deletion, so I just checked for XWPFRuns."}, {"count": 2, "tags": [], "text": "The fix is a simple check:\n\n if (run instanceof XWPFRun) {\n+                XWPFRun xRun = (XWPFRun) run;\n+                if (xRun.getCTR().getRsidDel() == null) {\n+                    out.append(xRun.toString());\n+                }\n+            }", "is_private": false, "bug_id": 58067, "id": 183686, "time": "2015-06-22T11:41:45Z", "creator": "femmer@in.tum.de", "creation_time": "2015-06-22T11:41:45Z", "attachment_id": null}, {"count": 3, "tags": [], "text": "Here is the output:\n\nbffvalidator c:\\temp\\58061good.xls\nBFFValidator: \"c:\\temp\\58061good.xls\" FAILED at 06/22/15 16:42:09\nLog at: c:\\temp\\58061good.xls.bffvalidator.06-22-15_16-42-09.xml\nSee: http://msdn.microsoft.com/en-us/library/A6FFF2B4-470A-463D-A6E9-9DAD9676CD44 for more information\n\n\nbffvalidator c:\\temp\\58061corrupt.xls\nBFFValidator: \"c:\\temp\\58061corrupt.xls\" NOT RECOGNIZED (The Microsoft Office Binary File Format Validator encountered an error reading the file you specified, OR The Microsof\nt Office Binary File Format Validator supports Word, Excel, and PowerPoint binary file formats only. The file you specified is an unsupported file type.) at 06/22/15 16:42:14\nLog at: c:\\temp\\58061corrupt.xls.bffvalidator.06-22-15_16-42-14.xml", "attachment_id": null, "bug_id": 58067, "id": 183689, "time": "2015-06-22T14:43:25Z", "creator": "dominik.stadler@gmx.at", "creation_time": "2015-06-22T14:43:25Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 58067, "text": "sorry, wrong bug!", "id": 183690, "time": "2015-06-22T14:43:34Z", "creator": "dominik.stadler@gmx.at", "creation_time": "2015-06-22T14:43:34Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "creator": "dominik.stadler@gmx.at", "attachment_id": null, "text": "Thanks for the patch, this is now applied via r1722715", "id": 187336, "time": "2016-01-03T13:29:19Z", "bug_id": 58067, "creation_time": "2016-01-03T13:29:19Z", "is_private": false}]