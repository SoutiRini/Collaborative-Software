[{"count": 0, "tags": [], "creator": "donatas.abraitis@gmail.com", "attachment_id": null, "text": "Hi,\n\nI would like to propose this patchset allowing to set maximum TTL value for incoming requests. This is not a usual use case, but I'm interested (maybe others too) to have this in place. The real use case would be like this one http://blog.donatas.net/blog/2017/04/20/http-request-validation/. \n\nTL;DR: if you want to deny requests bypassing proxy layer (in this case Apache operates as a backend). Hence set TTLimit to 1 and Apache will be able to handle requests coming almost from the local network, because packets with TTL usually come from local networks.\n\ncommit 5b28a17bdf8a86fa4cccc9a76ce474e5afdb434e\nAuthor: ton31337 <donatas.abraitis@gmail.com>\nDate:   Mon Jun 12 17:36:13 2017 +0300\n\n    Add `TTLimit` security check feature\n\ndiff --git a/include/ap_listen.h b/include/ap_listen.h\nindex 58c2574..e20c566 100644\n--- a/include/ap_listen.h\n+++ b/include/ap_listen.h\n@@ -133,6 +133,7 @@ AP_DECLARE_NONSTD(int) ap_close_selected_listeners(ap_slave_t *);\n  * LISTEN_COMMANDS in their command_rec table so that these functions are\n  * called.\n  */\n+AP_DECLARE_NONSTD(const char *) ap_set_ttl_limit(cmd_parms *cmd, void *dummy, const char *arg);\n AP_DECLARE_NONSTD(const char *) ap_set_listenbacklog(cmd_parms *cmd, void *dummy, const char *arg);\n AP_DECLARE_NONSTD(const char *) ap_set_listencbratio(cmd_parms *cmd, void *dummy, const char *arg);\n AP_DECLARE_NONSTD(const char *) ap_set_listener(cmd_parms *cmd, void *dummy,\n@@ -144,6 +145,8 @@ AP_DECLARE_NONSTD(const char *) ap_set_receive_buffer_size(cmd_parms *cmd,\n                                                            const char *arg);\n\n #define LISTEN_COMMANDS \\\n+AP_INIT_TAKE1(\"TTLimit\", ap_set_ttl_limit, NULL, RSRC_CONF, \\\n+  \"Maximum TTL value which will be accepted\"), \\\n AP_INIT_TAKE1(\"ListenBacklog\", ap_set_listenbacklog, NULL, RSRC_CONF, \\\n   \"Maximum length of the queue of pending connections, as used by listen(2)\"), \\\n AP_INIT_TAKE1(\"ListenCoresBucketsRatio\", ap_set_listencbratio, NULL, RSRC_CONF, \\\ndiff --git a/server/listen.c b/server/listen.c\nindex 98cd117..bc498e3 100644\n--- a/server/listen.c\n+++ b/server/listen.c\n@@ -186,6 +186,21 @@ static apr_status_t make_sock(apr_pool_t *p, ap_listen_rec *server)\n         return stat;\n     }\n\n+    if (ap_ttl_limit) {\n+        int thesock;\n+        apr_os_sock_get(&thesock, s);\n+        if (setsockopt(thesock, IPPROTO_IP, IP_TTL,\n+                       &ap_ttl_limit, sizeof(int)) < 0) {\n+            stat = apr_get_netos_error();\n+            ap_log_perror(APLOG_MARK, APLOG_CRIT, stat, p, APLOGNO(02638)\n+                          \"make_sock: for address %pI, apr_socket_opt_set: \"\n+                          \"(IP_TTL)\",\n+                          server->bind_addr);\n+            apr_socket_close(s);\n+            return stat;\n+        }\n+    }\n+\n #ifdef WIN32\n     /* I seriously doubt that this would work on Unix; I have doubts that\n      * it entirely solves the problem on Win32.  However, since setting\n@@ -758,6 +773,7 @@ AP_DECLARE(void) ap_listen_pre_config(void)\n     ap_listen_buckets = NULL;\n     ap_num_listen_buckets = 0;\n     ap_listenbacklog = DEFAULT_LISTENBACKLOG;\n+    ap_ttl_limit = 255;\n     ap_listencbratio = 0;\n\n     /* Check once whether or not SO_REUSEPORT is supported. */\n@@ -863,6 +879,26 @@ AP_DECLARE_NONSTD(const char *) ap_set_listenbacklog(cmd_parms *cmd,\n     return NULL;\n }\n\n+AP_DECLARE_NONSTD(const char *) ap_set_ttl_limit(cmd_parms *cmd,\n+                                                 void *dummy,\n+                                                 const char *arg)\n+{\n+    int b;\n+    const char *err = ap_check_cmd_context(cmd, GLOBAL_ONLY);\n+\n+    if (err != NULL) {\n+        return err;\n+    }\n+\n+    b = atoi(arg);\n+    if (b < 1 || b > 255) {\n+        return \"TTLimit > 0 and TTLimit < 255\";\n+    }\n+\n+    ap_ttl_limit = b;\n+    return NULL;\n+}\n+\n AP_DECLARE_NONSTD(const char *) ap_set_listencbratio(cmd_parms *cmd,\n                                                      void *dummy,\n                                                      const char *arg)\n\nWaiting for comments,\nD.", "id": 199173, "time": "2017-06-12T19:07:34Z", "bug_id": 61179, "creation_time": "2017-06-12T19:07:34Z", "is_private": false}, {"count": 1, "tags": [], "creator": "donatas.abraitis@gmail.com", "attachment_id": 35048, "is_private": false, "id": 199176, "time": "2017-06-13T08:30:33Z", "bug_id": 61179, "creation_time": "2017-06-13T08:30:33Z", "text": "Created attachment 35048\nTTLimit directive"}]