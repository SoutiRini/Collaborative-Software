[{"count": 0, "tags": [], "bug_id": 42322, "text": "<chmod file=\"${dist}/tmp/script.sh\" perm=\"a+rx\"/>\n<tar destfile=\"${dist}/${tarball_name}.${DSTAMP}.tar\">\n   <tarfileset dir=\"${dist}/tmp\">\n     <include name=\"**/*\"/>\n   </tarfileset>\n</tar>\n\nAfter untarring, script.sh is 0644", "id": 102783, "time": "2007-05-02T14:29:47Z", "creator": "dmaziuk@bmrb.wisc.edu", "creation_time": "2007-05-02T14:29:47Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "creator": "carej@us.ibm.com", "attachment_id": null, "text": "This is the standard behavior: there is no pure Java way to retain permissions.\nPlease see the developer list archives for the many discussions on this topic.\n\nAs a workaround use the dirmode & filemode attributes of tarfileset.", "id": 102791, "time": "2007-05-02T18:02:44Z", "bug_id": 42322, "creation_time": "2007-05-02T18:02:44Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 42322, "text": "There is in Java 6 and ofter permission could be guessed by extension.", "id": 102792, "time": "2007-05-02T18:05:12Z", "creator": "alexeys@inventigo.com", "creation_time": "2007-05-02T18:05:12Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "creator": "carej@us.ibm.com", "is_private": false, "text": "And again, unless I've greatly misunderstood the APIs in Java 6, you still can't\nquery ALL of the permission data, only the data that applies to the owner of the\nVM process.\n\nAs for inferring permissions by extension, doesn't tarfileset allow you to do\njust that?", "id": 102793, "time": "2007-05-02T18:21:24Z", "bug_id": 42322, "creation_time": "2007-05-02T18:21:24Z", "attachment_id": null}, {"count": 4, "tags": [], "creator": "alexeys@inventigo.com", "attachment_id": null, "is_private": false, "id": 102794, "time": "2007-05-02T18:28:29Z", "bug_id": 42322, "creation_time": "2007-05-02T18:28:29Z", "text": "User's permissions is enough to extrapolate permissions for groups and others.\nFile extensions could be used in pre Java 6 VMs."}, {"count": 5, "tags": [], "bug_id": 42322, "text": "(In reply to comment #3)\n> And again, unless I've greatly misunderstood the APIs in Java 6, you still \n> can't query ALL of the permission data, only the data that applies to the\n> owner of the VM process.\n\nIf you can't stick to unix Tape ARchive specs (which include preserving special\nfiles like symlinks and permissions), you should not call it \"tar\". Call the\ntask \"NotQuiteTar\" or \"Jar\" or whatever.\n\nOTGH, you can trivially get a correct tarball by exec'ing tar so why not just\nhave tar task do that if tar executable is available.", "id": 102795, "time": "2007-05-02T18:35:46Z", "creator": "dmaziuk@bmrb.wisc.edu", "creation_time": "2007-05-02T18:35:46Z", "is_private": false, "attachment_id": null}, {"text": "(In reply to comment #5)\n> OTGH, you can trivially get a correct tarball by exec'ing tar so why not just\n> have tar task do that if tar executable is available.\n\nOh, wait, that'd be just like that bad scary \"make\" that we wanted to get away\nfrom in the first place.\n(Sorry, couldn't resist.)\n", "tags": [], "bug_id": 42322, "is_private": false, "count": 6, "id": 102796, "time": "2007-05-02T18:39:24Z", "creator": "dmaziuk@bmrb.wisc.edu", "creation_time": "2007-05-02T18:39:24Z", "attachment_id": null}, {"text": "Personally I do run GNU tar on Unix platforms instead of of <tar>. A simple\n<macrodef> does the trick.", "tags": [], "bug_id": 42322, "is_private": false, "count": 7, "id": 102797, "time": "2007-05-02T18:41:31Z", "creator": "alexeys@inventigo.com", "creation_time": "2007-05-02T18:41:31Z", "attachment_id": null}, {"count": 8, "tags": [], "creator": "stevel@apache.org", "attachment_id": null, "is_private": false, "id": 102820, "time": "2007-05-03T08:04:28Z", "bug_id": 42322, "creation_time": "2007-05-03T08:04:28Z", "text": ">If you can't stick to unix Tape ARchive specs (which include preserving special\n>files like symlinks and permissions), you should not call it \"tar\". Call the\n>task \"NotQuiteTar\" or \"Jar\" or whatever.\n\nWe do create legal tar files. It is only that you do not get the information\npicked up from the filesystem...you need to set permissions inside the\n<tarfileset> elements. The tar file spec has nothing to say on how the file is\ncreated, only what it looks like inside.\n\n\n\n>you can trivially get a correct tarball by exec'ing tar so why not just\nhave tar task do that if tar executable is available.\n\nBecause you will end up writing a build file that doesnt work on Windows. It is\ninconvenient to have to use <tarfileset> to mark things as executable, but once\nyou've done it, you can create and release your project in a tar file, on\nwindows, netware, anything else.\n\nLeaving this as wontfix. What may be more interesting is to have untar and copy\nto preserve permissions, as that should not stop a windows build from working."}]