[{"count": 0, "tags": [], "text": "Created attachment 24022\ncreates DOC files with tables in various sizes; only the 2x2 table is OK\n\nThe attached source file creates DOC files containing a single table. Filling in the table contents only works for the 2x2 table; all other table sizes cause an exception to be thrown like this one:\n\njava.lang.IllegalArgumentException: The end (15) must not be before the start (17)\nat org.apache.poi.hwpf.usermodel.Range.sanityCheckStartEnd(Range.java:247)\nat org.apache.poi.hwpf.usermodel.Range.<init>(Range.java:181)\nat org.apache.poi.hwpf.usermodel.Paragraph.<init>(Paragraph.java:103)\nat org.apache.poi.hwpf.usermodel.Range.getParagraph(Range.java:830)\nat CreateWordDocTable.test(CreateWordDocTable.java:31)", "is_private": false, "id": 129067, "creator": "udittmer@yahoo.com", "time": "2009-07-23T03:53:46Z", "bug_id": 47563, "creation_time": "2009-07-23T03:53:46Z", "attachment_id": 24022}, {"count": 1, "tags": [], "text": "I just tried this and at least with 2007 I can't open the 2x2 either.  It's corrupted.", "attachment_id": null, "bug_id": 47563, "id": 129580, "time": "2009-08-09T14:47:13Z", "creator": "awm@mbcli.com", "creation_time": "2009-08-09T14:47:13Z", "is_private": false}, {"count": 2, "tags": [], "text": "The problem is still reproducible in trunk.\n\nYegor", "attachment_id": null, "id": 147431, "creator": "yegor@dinom.ru", "time": "2011-06-24T08:22:57Z", "bug_id": 47563, "creation_time": "2011-06-24T08:22:57Z", "is_private": false}, {"count": 3, "tags": [], "text": "Fixed in r1143802; shall be part of 3.8-beta4", "is_private": false, "id": 147813, "creator": "vlsergey@gmail.com", "time": "2011-07-07T12:57:53Z", "bug_id": 47563, "creation_time": "2011-07-07T12:57:53Z", "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 47563, "attachment_id": null, "id": 151516, "time": "2011-11-15T15:49:06Z", "creator": "georgosn@yahoo.com", "creation_time": "2011-11-15T15:49:06Z", "is_private": false, "text": "Now it fails with\n\njava.lang.ArrayIndexOutOfBoundsException: -1\n\tat java.util.ArrayList.get(Unknown Source)\n\tat org.apache.poi.hwpf.usermodel.Range.findRange(Range.java:1060)\n\tat org.apache.poi.hwpf.usermodel.Range.initCharacterRuns(Range.java:953)\n\tat org.apache.poi.hwpf.usermodel.Range.initAll(Range.java:931)\n\tat org.apache.poi.hwpf.usermodel.Range.insertAfter(Range.java:352)\n\tat org.apache.poi.hwpf.usermodel.Range.insertTableBefore(Range.java:632)\n\tat lu.intrasoft.poi.utilities.tablehandler.Writer.startTable(Writer.java:52)\n\tat lu.intrasoft.poi.utilities.tablehandler.WriterTest.testMakeThedocument(WriterTest.java:34)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)\n\tat java.lang.reflect.Method.invoke(Unknown Source)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)\n\tat org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)\n\nany thoughts?"}, {"count": 5, "tags": [], "text": "Can't reproduce with latest trunk code.\n\nSeems to be fixed already, since there is additional checks in Range.findRange(...)", "is_private": false, "bug_id": 47563, "id": 163190, "time": "2012-11-05T12:38:59Z", "creator": "vlsergey@gmail.com", "creation_time": "2012-11-05T12:38:59Z", "attachment_id": null}]