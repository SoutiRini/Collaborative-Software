[{"count": 0, "tags": [], "creator": "marc.stern@approach.be", "attachment_id": null, "id": 143174, "time": "2011-01-07T08:08:48Z", "bug_id": 50559, "creation_time": "2011-01-07T08:08:48Z", "is_private": false, "text": "It seems that there is a finite memory leak, that is it does not increase indefinitely, but much too high any way. I managed to reproduce the problem on a low scale, but, when this happen in production (Linux), processes memory increases up to several GB, knocking down the complete OS (kernel not able to react because od too much swap).\n\nThis description is valid for Windows/Unix, but the measures are the scaled down Windows ones.\nHere it is, in 3 steps:\n - Almost empty config, only mod_substitue loaded.\n - Start the server with \"httpd -X\" (for the measurements).\n - The initial memory size of the process is 3 MB.\n\nTest 1:\nI create a text file containing a very long line (250,000 char) containing (each) 32 times the string \"xxxx\" (with the quotes).\nI add the directive\n   Substitute  \"s`(?<=\\\")xxxx`-xxxx`i\"\nOn the first request, the memory increase up to 3.5 MB - no problems.\nI resend the same request several hundred times (sequentially) and the memory does not increase.\n\nTest 2:\nI add, after the previous substitute, the directive\n   Substitute  \"s`zzzzzzzzzzzz`yyy`i\"\nThe text file does not contain the string zzzzzz, so the rule never matches.\nOn the first request, the memory increase up to 20 MB - this definitely looks like a bug ...\nI resend the same request several hundred times (sequentially) and the memory does not increase.\n\nTest 3:\nSame as test 2, but I copy the line in the text file a second time (on a new line).\nOn the first request, the memory increase up to 20 MB - as previously.\nI resend the same request several hundred times (sequentially) and the memory increases on each request.\nIt stabilizes around 55 MB.\nIf I add the line a third time, it goes up to 75 MB."}, {"count": 1, "tags": [], "creator": "sf@sfritsch.de", "attachment_id": null, "is_private": false, "id": 144892, "time": "2011-03-09T17:18:11Z", "bug_id": 50559, "creation_time": "2011-03-09T17:18:11Z", "text": "The memory usage basically grows quadratically with the line length and with the number of substitutions per line. This sucks.\n\nIf appropriate for your patterns, you can maybe work around this by using the 'q' flag (see the docs). If there is only one Substitute pattern, the 'q' flag is always enabled, which is consistent with the behavior you observed."}, {"count": 2, "tags": [], "creator": "wrowe@apache.org", "attachment_id": null, "id": 144894, "time": "2011-03-09T17:35:28Z", "bug_id": 50559, "creation_time": "2011-03-09T17:35:28Z", "is_private": false, "text": "It would be interesting to compare to the apache 2.3.11-beta using mod_sed,\nand compare the memory footprints.  See;\n\nhttp://httpd.apache.org/docs/trunk/mod/mod_sed.html"}, {"count": 3, "tags": [], "text": "Fixed in trunk in r1176019", "attachment_id": null, "bug_id": 50559, "id": 149779, "time": "2011-09-26T20:11:17Z", "creator": "sf@sfritsch.de", "creation_time": "2011-09-26T20:11:17Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 50559, "attachment_id": null, "id": 154249, "creation_time": "2012-02-26T17:09:44Z", "time": "2012-02-26T17:09:44Z", "creator": "sf@sfritsch.de", "text": "fixed in 2.4.1", "is_private": false}]