[{"count": 0, "tags": [], "creator": "tom.brus@nl.compuware.com", "is_private": false, "text": "As send earlier on the mailing list:\n\nWe have a lot of classes that are loaded by the AntClassLoader. From performance\nmeasurements I noticed that a lot of time was spend in\nFile.exists() during class loading. I checked the code and noticed that\nin:\n\n     InputStream getResourceStream  (File file, String resourceName);\n\nand in\n\n     URL         getResourceURL     (File file, String resourceName);\n\nThe following check is done first:\n\n     if (!file.exists()) {\n         return null;\n     }\n\nThis seems smart, because if the file does not exist the answer is clear. Unless\nof course 'exists()' is slow; which it turns out to be (on Windows at least). A\nconsiderable improvement can be accomplished by first checking the 'zipFiles'\nHashtable: if \"zipFiles.get(file)\" returns non-null we can be sure that the file\nexists and that it is not a directory. Remember that most calls will be for a\njar file that has already been opened. So those expensive (compared to\nHashtable.get()) tests on File can be skipped most of the time.\n\nOne of our test runs was reduced by 1/3 in runtime by a quick patch I made (it\nloads thousands of classes...).", "id": 102424, "time": "2007-04-26T01:51:18Z", "bug_id": 42259, "creation_time": "2007-04-26T01:51:18Z", "attachment_id": null}, {"attachment_id": 20049, "tags": [], "bug_id": 42259, "text": "Created attachment 20049\npatch for a proposal to fix this issue", "count": 1, "id": 102425, "time": "2007-04-26T01:57:39Z", "creator": "tom.brus@nl.compuware.com", "creation_time": "2007-04-26T01:57:39Z", "is_private": false}, {"attachment_id": null, "tags": [], "bug_id": 42259, "is_private": false, "count": 2, "id": 102618, "time": "2007-04-29T05:58:34Z", "creator": "jkf@apache.org", "creation_time": "2007-04-29T05:58:34Z", "text": "Slightly modified optimization applied, thanks (so if its broken now its my\nfault :-)"}]