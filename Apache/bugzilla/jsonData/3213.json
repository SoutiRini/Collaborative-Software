[{"count": 0, "tags": [], "text": "When an application class is changed in WEB-INF/classes directory which \ntriggers a reload of all the application classes, the previous versions of \nother related classes are not removed before a new version is created of the \nnew classes. \nThis is noticed more when the application class has static variables which are \ninitialized at construction time. Essentially, there remain multiple versions \nof the same class in memory, when a request is received to one of the classes \nmethods, the previous classes method is invoked.", "is_private": false, "id": 4704, "creator": "rajangupta@rocketmail.com", "time": "2001-08-21T15:08:19Z", "bug_id": 3213, "creation_time": "2001-08-21T15:08:19Z", "attachment_id": null}, {"count": 1, "tags": [], "text": "Do you have a test case that illustrates this?  (You can add it as an attachment\nto the bug report.)\n\nWhen an application is reloaded, the entire old class loader, and all classes\nloaded by it, are thrown away.  The only way that objects would remain visible\nis if they were loaded from some other class loader (which is true, for example,\nof classes loaded from $CATALINA_HOME/lib) -- class reloading works only for\nthings inside /WEB-INF/classes or /WEB-INF/lib.\n\nAs far as I can tell, this feature is working correctly, so a test case would be\nimmensely useful in figuring out why you are observing different behavior.\n", "attachment_id": null, "id": 4735, "creator": "craig.mcclanahan@sun.com", "time": "2001-08-22T10:07:32Z", "bug_id": 3213, "creation_time": "2001-08-22T10:07:32Z", "is_private": false}, {"count": 2, "tags": [], "creator": "rajangupta@rocketmail.com", "attachment_id": 465, "text": "Created attachment 465\nTest Case", "id": 4936, "time": "2001-08-27T22:46:18Z", "bug_id": 3213, "creation_time": "2001-08-27T22:46:18Z", "is_private": false}, {"count": 3, "text": "dw", "creator": "rajangupta@rocketmail.com", "is_private": false, "id": 4937, "time": "2001-08-27T22:49:05Z", "bug_id": 3213, "creation_time": "2001-08-27T22:49:05Z", "tags": [], "attachment_id": null}, {"count": 4, "text": "I am enclosing a test case which illustrates the scenario:\nInstallation Instructions:\n1. Unzip the file\n2. Copy TestClassLoad.java & TestClassLoad.class in examples/WEB-INF/classes\n3. unjar the file tomcattest.jar in examples/WEB-INF/classes\n4. Copy instanceNoFile.txt in $TOMCAT_HOME/bin directory\n\nSteps for running the test case:\nStep 1: Startup tomcat\nStep 2: Access examples/TestClassLoad using a browser. \n        http://localhost:8080/examples/TestClassLoad\n        This triggers the singleton & creates a listener socket which listens \n        on 1411\nStep 3: Start a client which connects to the server socket\n        $ $TOMCAT_HOME/webapps/examples/WEB-INF/classes/com/tomcattest/Client\n        Notice in the Catalina output window the instance number of \n        CSSocketTransport which accepted the connection\nStep 4: Touch CSComponentS.java, recompile it & wait for it to reload\nStep 5: Issue a refresh on TestClassLoad in your browser, triggering creation of\n        CSComponentS\nStep 6: Kill the Client & restart it\n        $ $TOMCAT_HOME/webapps/examples/WEB-INF/classes/com/tomcattest/Client\nStep 7: Notice in the Catalina window the instance number which is used to \n        accept the incoming connection, it is still the previous version of\n        CSSocketTransport. \n\nThis indicates to me that not all classes were unloaded. The socket remains \nopen even though the classes were unloaded & reloaded. Which is also indicated \nwhen the socket is again created in Step 5, which resulted in a failure, notice \nthe message.\n\nPlease feel free to contact me for any clarifications if I was not clear.\n", "creator": "rajangupta@rocketmail.com", "is_private": false, "id": 4938, "time": "2001-08-27T23:00:38Z", "bug_id": 3213, "creation_time": "2001-08-27T23:00:38Z", "tags": [], "attachment_id": null}, {"count": 5, "tags": [], "text": "The old class loader is dumped, and Catalina doesn't by itself keep any \nreferences to objects instanciated from the \"old\" classes. However, the object \ninstances are not finalized, and the old class object instances are not \nactually destroyed either.\n\nSo your listener class won't be unloaded when the CL is destroyed, and it's \nnormal. To do it, I would close the socket when the destroy() method of the \nservlet is invoked.", "attachment_id": null, "id": 4970, "creator": "remm@apache.org", "time": "2001-08-28T14:19:08Z", "bug_id": 3213, "creation_time": "2001-08-28T14:19:08Z", "is_private": false}]