[{"count": 0, "tags": [], "bug_id": 49165, "text": "AccessLogValve.DateAndTimeElement() can currently be configured only with %t which output the date/time in Common Log Format.\n\nBy adding the capability to configure with %{TIME_FORMAT}, one could override (at least) the timeFormatter property of the class ... or it could go further and allow overriding of all the [day, month, year, time]Formatter properties.\n\nJustification for enhancement:  The log currenlty provide the ability to log processing time in millis (via %T), but an accurate log of the order in which requests are received cannot be determined without the capabilities of logging a  a format with milliseconds using the %t element.", "id": 136294, "time": "2010-04-21T14:20:08Z", "creator": "apache_bugzilla@zwiers.ca", "creation_time": "2010-04-21T14:20:08Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 49165, "is_private": false, "text": "Created attachment 25778\n#49165 fix (added %t{TIME_FORMAT} support)\n\nIntroduced new format for %t for AccesLogValve.\n- new format %{TIME_FORMAT}t available. \n- if custom pattern contains milliseconds field, then optimizations, which performs new current date time object creation only once per 1000 millis, will be turned off.\n- unit tests for added/changed functionality\n- performance tests\n\nResults of perfomance testing (tested on MacOS X 10.6.4):\nAccessLogValve: 5 threads and 1000000 iterations using oldValve           took 8381ms\nAccessLogValve: 5 threads and 1000000 iterations using newValve           took 7742ms\nAccessLogValve: 5 threads and 1000000 iterations using newValveWithMillis took 8651ms\nAccessLogValve: 5 threads and 2000000 iterations using oldValve           took 16864ms\nAccessLogValve: 5 threads and 2000000 iterations using newValve           took 15945ms\nAccessLogValve: 5 threads and 2000000 iterations using newValveWithMillis took 16806ms\nAccessLogValve: 5 threads and 3000000 iterations using oldValve           took 25010ms\nAccessLogValve: 5 threads and 3000000 iterations using newValve           took 24575ms\nAccessLogValve: 5 threads and 3000000 iterations using newValveWithMillis took 26674ms\nAccessLogValve: 5 threads and 4000000 iterations using oldValve           took 33775ms\nAccessLogValve: 5 threads and 4000000 iterations using newValve           took 33043ms\nAccessLogValve: 5 threads and 4000000 iterations using newValveWithMillis took 33796ms", "id": 138493, "time": "2010-07-16T23:26:31Z", "creator": "sgdread@gmail.com", "creation_time": "2010-07-16T23:26:31Z", "attachment_id": 25778}, {"count": 2, "tags": [], "creator": "sgdread@gmail.com", "is_private": false, "text": "Introduced new format for %t for AccesLogValve.\n- new format %{TIME_FORMAT}t available. \n- if custom pattern contains milliseconds field, then optimizations, which performs new current date time object creation only once per 1000 millis, will be turned off.\n- unit tests for added/changed functionality\n- performance tests\n\nResults of perfomance testing (tested on MacOS X 10.6.4):\nAccessLogValve: 5 threads and 1000000 iterations using oldValve           took 8381ms\nAccessLogValve: 5 threads and 1000000 iterations using newValve           took 7742ms\nAccessLogValve: 5 threads and 1000000 iterations using newValveWithMillis took 8651ms\nAccessLogValve: 5 threads and 2000000 iterations using oldValve           took 16864ms\nAccessLogValve: 5 threads and 2000000 iterations using newValve           took 15945ms\nAccessLogValve: 5 threads and 2000000 iterations using newValveWithMillis took 16806ms\nAccessLogValve: 5 threads and 3000000 iterations using oldValve           took 25010ms\nAccessLogValve: 5 threads and 3000000 iterations using newValve           took 24575ms\nAccessLogValve: 5 threads and 3000000 iterations using newValveWithMillis took 26674ms\nAccessLogValve: 5 threads and 4000000 iterations using oldValve           took 33775ms\nAccessLogValve: 5 threads and 4000000 iterations using newValve           took 33043ms\nAccessLogValve: 5 threads and 4000000 iterations using newValveWithMillis took 33796ms", "id": 138494, "time": "2010-07-16T23:27:44Z", "bug_id": 49165, "creation_time": "2010-07-16T23:27:44Z", "attachment_id": null}, {"count": 3, "tags": [], "creator": "sgdread@gmail.com", "attachment_id": 25779, "is_private": false, "id": 138495, "time": "2010-07-16T23:51:26Z", "bug_id": 49165, "creation_time": "2010-07-16T23:51:26Z", "text": "Created attachment 25779\n49615 + unit tests\n\nupdated patch file (unit tests added to version control)"}, {"count": 4, "tags": [], "creator": "sgdread@gmail.com", "attachment_id": null, "is_private": false, "id": 138518, "time": "2010-07-19T13:22:19Z", "bug_id": 49165, "creation_time": "2010-07-19T13:22:19Z", "text": "done"}, {"count": 5, "tags": [], "bug_id": 49165, "is_private": false, "text": "(In reply to comment #4)\n\nThanks for the patch. I have reviewed it and have the following comments:\n1. It uses a mix of tabs and spaces for indenting. Only spaces should be used.\n2. Log messages should use the StringManager to provide i18n support.\n3. Setting currentDate in the AccessDateStruct serves no purpose\n4. Same for currentDateString\n5. DateAndTimeElementVolumeTest can probably be added to the existing Benchmarks test.\n\nOut of curiosity, if you remove the code that manages the only creating the date once a second entirely and use a date format that does not include millis, what is the performance like? I'm wondering if we can just remove that code entirely.\n\nIf you can update the patch, I'll take another look. With the issues above fixed it should be ready to apply.", "id": 138609, "time": "2010-07-21T13:47:59Z", "creator": "markt@apache.org", "creation_time": "2010-07-21T13:47:59Z", "attachment_id": null}, {"count": 6, "attachment_id": null, "bug_id": 49165, "text": "(In reply to comment #5)\n> 1. It uses a mix of tabs and spaces for indenting. Only spaces should be used.\nDone.\n\n> 2. Log messages should use the StringManager to provide i18n support.\nDone (only English string was added).\nBTW there are others Strings in class used in exception. I haven't touched them, because they're not related to this bug. Please let me know if this should be done.\n\n> 3. Setting currentDate in the AccessDateStruct serves no purpose\nRemoved initialization in variable declaration. Leaved as is in constructor: otherwise NPE will be thrown on first AccessDateStruct access in startInternal().\n\n> 4. Same for currentDateString\nRemoved\n\n> 5. DateAndTimeElementVolumeTest can probably be added to the existing\n> Benchmarks test.\nDone.\n\n> Out of curiosity, if you remove the code that manages the only creating the\n> date once a second entirely and use a date format that does not include millis,\n> what is the performance like? I'm wondering if we can just remove that code\n> entirely.\nWithout millis chunks we have small performance drop on same %t pattern:\n5 thr x 1000000 iter. newValve           7772ms\n5 thr x 1000000 iter. newValveNoChunks   8483ms\n5 thr x 1000000 iter. newValveWithMillis 8630ms\n5 thr x 2000000 iter. newValve           14857ms\n5 thr x 2000000 iter. newValveNoChunks   15633ms\n5 thr x 2000000 iter. newValveWithMillis 19687ms\n5 thr x 3000000 iter. newValve           22171ms\n5 thr x 3000000 iter. newValveNoChunks   23433ms\n5 thr x 3000000 iter. newValveWithMillis 26765ms\n5 thr x 4000000 iter. newValve           29615ms\n5 thr x 4000000 iter. newValveNoChunks   31525ms\n5 thr x 4000000 iter. newValveWithMillis 35067ms\n5 thr x 5000000 iter. newValve           36889ms\n5 thr x 5000000 iter. newValveNoChunks   39176ms\n5 thr x 5000000 iter. newValveWithMillis 43527ms\nLooks like performance graphs are linear for all cases. I think if we remove chunks, this could possible cause slight load increase on GC under heavy load (new Date instances will keep creating). Test was done under MacOS X 10.6.\nPlease let me know your decision: are we going to go with this or leave it as is.\nBTW there will be error up to 1000 mills in output, because we're creating date once in 1000 millis.\nNote: volume benchmark is writing output in real file to $CATALINA_HOME/logs and shouldn't be included in automatic test pack (it's slow and it's it's generating REALLY big output file, so CI server will quickly run out of disk space).\n\n> If you can update the patch, I'll take another look. With the issues above\n> fixed it should be ready to apply.\nWill provide patch file after your decision.", "id": 138645, "time": "2010-07-22T22:38:38Z", "creator": "sgdread@gmail.com", "creation_time": "2010-07-22T22:38:38Z", "tags": [], "is_private": false}, {"count": 7, "tags": [], "bug_id": 49165, "text": "Created attachment 25834\n#49165 fix with requested changes\n\nPlease let me know if version without 1000 millis chunk is required (in this case some unit test should be removed).", "id": 138855, "time": "2010-08-03T18:44:56Z", "creator": "sgdread@gmail.com", "creation_time": "2010-08-03T18:44:56Z", "is_private": false, "attachment_id": 25834}, {"count": 8, "tags": [], "bug_id": 49165, "text": "(In reply to comment #6)\n> Note: volume benchmark is writing output in real file to $CATALINA_HOME/logs\n> and shouldn't be included in automatic test pack (it's slow and it's it's\n> generating REALLY big output file, so CI server will quickly run out of disk\n> space).\n\nCould you modify the volume benchmark to dump to /dev/null or some kind of null logger? That would give you a better benchmark since you aren't at the mercy of disk I/O to skew your results.", "id": 142693, "time": "2010-12-14T14:58:37Z", "creator": "chris@christopherschultz.net", "creation_time": "2010-12-14T14:58:37Z", "is_private": false, "attachment_id": null}, {"count": 9, "tags": [], "bug_id": 49165, "text": "I added support for full SimpleDateFormat in r1137336.\n\nIt also supports:\n- choosing the timestamp, either begin of request and finish of response\n  By using multiple %{xxx}t tokens one can also log bot timestamps.\n- logging second, milliseconds since the epoch\n\nDocumented in r1137338.", "id": 147256, "time": "2011-06-19T11:28:35Z", "creator": "rainer.jung@kippdata.de", "creation_time": "2011-06-19T11:28:35Z", "is_private": false, "attachment_id": null}]