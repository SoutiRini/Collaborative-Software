[{"count": 0, "tags": [], "bug_id": 40642, "is_private": false, "text": "Adds support for a custom logger in the sub-build, a custom message level in the\nlogger, emacs-mode for the logger, and keep-going-mode for the project. I ran\nthe diff against 1.6.5 but you dev's should look for a few things I left for you\n(exception handling, mainly).\n\nSee also bugs 29236 and 36667.\n\nDiff output begins...\n\n--- Ant-OLD.java\tThu Jun 02 15:19:55 2005\n+++ Ant-NEW.java\tFri Sep 29 11:12:29 2006\n@@ -1,5 +1,5 @@\n /*\n- * Copyright  2000-2005 The Apache Software Foundation\n+ * Copyright  2000-2006 The Apache Software Foundation\n  *\n  *  Licensed under the Apache License, Version 2.0 (the \"License\");\n  *  you may not use this file except in compliance with the License.\n@@ -64,7 +64,7 @@\n  */\n public class Ant extends Task {\n \n-    /** the basedir where is executed the build file */\n+\t/** the basedir where is executed the build file */\n     private File dir = null;\n \n     /**\n@@ -76,6 +76,20 @@\n     /** the output */\n     private String output  = null;\n \n+    /** class name of logger */\n+    private String loggerClassName = \"org.apache.tools.ant.DefaultLogger\";\n+\n+    /** message output level */\n+    private String level = null;\n+    \n+    private int messageOutputLevel = Project.MSG_INFO;\n+    \n+    /** set emacs mode ? */\n+    private boolean emacsMode = false;\n+    \n+    /** set keep-going mode? */\n+    private boolean keepGoing = false;\n+    \n     /** should we inherit properties from the parent ? */\n     private boolean inheritAll = true;\n \n@@ -167,14 +181,26 @@\n             }\n             try {\n                 out = new PrintStream(new FileOutputStream(outfile));\n-                DefaultLogger logger = new DefaultLogger();\n-                logger.setMessageOutputLevel(Project.MSG_INFO);\n+                Class c = Class.forName(loggerClassName);\n+                BuildLogger logger = (BuildLogger)(c.newInstance());\n+                logger.setMessageOutputLevel(messageOutputLevel);\n+                logger.setEmacsMode(emacsMode);\n                 logger.setOutputPrintStream(out);\n                 logger.setErrorPrintStream(out);\n                 newProject.addBuildListener(logger);\n-            } catch (IOException ex) {\n+            }\n+            catch (IOException ex) {\n                 log(\"Ant: Can't set output to \" + output);\n             }\n+            catch (ClassNotFoundException cnfe) {\n+            \t/* Ant devs - provide 'catch' code */\n+            }\n+            catch (IllegalAccessException iae) {\n+            \t/* Ant devs - provide 'catch' code */\n+            }\n+            catch (InstantiationException ie) {\n+            \t/* Ant devs - provide 'catch' code */\n+            }\n         }\n \n         getProject().initSubProject(newProject);\n@@ -331,7 +357,7 @@\n             }\n \n             try {\n-                ProjectHelper.configureProject(newProject, new File(antFile));\n+                ProjectHelper.getProjectHelper().parse(newProject, new\nFile(antFile)); //fixes a deprecations\n             } catch (BuildException ex) {\n                 throw ProjectHelper.addLocationToBuildException(\n                     ex, getLocation());\n@@ -608,6 +634,76 @@\n      */\n     public void setOutput(String s) {\n         this.output = s;\n+    }\n+\n+    /**\n+     * Sets the message output level of the logger to the desired level. The value\n+     * can be any of these strings: INFO, WARNING, ERROR, VERBOSE, or DEBUG.\n+     * @param s the message output level to set the logger to.\n+     * @throws BuildException if the output level argument is not a legal value. \n+     */\n+    public void setLevel(String s) throws BuildException {\n+    \tif (s.equalsIgnoreCase(\"INFO\")) {\n+    \t\tmessageOutputLevel = Project.MSG_INFO;\n+    \t}\n+    \telse if (s.equalsIgnoreCase(\"WARNING\")) {\n+    \t\tmessageOutputLevel = Project.MSG_WARN;\n+    \t}\n+    \telse if (s.equalsIgnoreCase(\"ERROR\")) {\n+    \t\tmessageOutputLevel = Project.MSG_ERR;\n+    \t}\n+    \telse if (s.equalsIgnoreCase(\"VERBOSE\")) {\n+    \t\tmessageOutputLevel = Project.MSG_VERBOSE;\n+    \t}\n+    \telse if (s.equalsIgnoreCase(\"DEBUG\")) {\n+    \t\tmessageOutputLevel = Project.MSG_DEBUG;\n+    \t}\n+    \telse {\n+    \t\tthrow new BuildException(\"Unsupported message output level. \"+\n+    \t\t\t\t\"Specify any of: ERROR, WARNING, INFO, VERBOSE, DEBUG.\");\n+    \t}\n+    \tlevel = s;\n+    \tlog(\"Setting log message level to \"+level, Project.MSG_DEBUG);\n+    }\n+\n+    /**\n+     * Set the logger to that of the specified class name. This logger must\n+     * implement the BuildLogger interface.\n+     * @param s the fully-resolved class name to use for logging.\n+     */\n+    public void setLoggerClassName(String s) throws BuildException {\n+\t\ttry {\n+\t\t\tClass c = Class.forName(s);\n+\t\t\tif (! c instanceof BuildLogger) {\n+\t\t\t\tthrow new BuildException(\"The specified logger class \" + s\n+\t\t\t\t\t\t+ \" does not implement the BuildLogger interface\");\n+\t\t\t}\n+\t\t} catch (Exception e) {\n+\t\t\tthrow new BuildException(\"Unable to instantiate specified logger \"\n+\t\t\t\t\t+ \"class \" + s + \" : \" + e.getClass().getName());\n+\t\t}\n+\n+\t\tloggerClassName = s;\n+\t\tlog(\"Setting logger to instance of \"+loggerClassName,Project.MSG_DEBUG);\n+\t}\n+\n+    /**\n+     * Sets whether the logger should use Emacs mode.\n+     * @param b boolean value indicating whether Emacs mode should be enabled.\n+     */\n+    public void setEmacsMode(boolean b) {\n+    \temacsMode = b;\n+    \tlog(\"Setting emacs mode to \"+(b?\"true\":\"false\"),Project.MSG_DEBUG);\n+    }\n+\n+    /**\n+     * Sets whether the sub-project should have its \"keep going\" mode enabled.\n+     * @param b boolean value indicating whether sub-project should keep-going\n+     * after an exception is encountered, if the project may do so.\n+     */\n+    public void setKeepGoing(boolean b) {\n+    \tkeepGoing = b;\n+    \tlog(\"Setting keep-going mode to \"+(b?\"true\":\"false\"),Project.MSG_DEBUG);\n     }\n \n     /**", "id": 94272, "time": "2006-09-29T16:16:00Z", "creator": "lybarger999@gmail.com", "creation_time": "2006-09-29T16:16:00Z", "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 40642, "attachment_id": 18937, "text": "Created attachment 18937\ndiff -u output for patch against 1.6.5", "id": 94274, "time": "2006-09-29T16:17:36Z", "creator": "lybarger999@gmail.com", "creation_time": "2006-09-29T16:17:36Z", "is_private": false}]