[{"count": 0, "tags": [], "text": "When responding to a HEAD request without streaming the entity and without setting the Content-Length, the Content-Length is incorrectly computed to be zero in org.apache.catalina.connector.OutputBuffer.close(). This is incorrect. The Content-Length header should be unset in this case.\n\nRFC 7230 doesn't require the Content-Length to be set on HEAD requests, but if it set it must be the size of the corresponding GET. So \"Content-Length: 0\" violates the standard.\n\nComputing the real size would be excessively expensive in our use case because this would require to transfer data from a backend system.", "is_private": false, "bug_id": 59310, "id": 190185, "time": "2016-04-12T12:53:49Z", "creator": "tobias.oberlies@sap.com", "creation_time": "2016-04-12T12:53:49Z", "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 59310, "text": "So a servlet like this will cause Tomcat to return \"Content-Length: 0\"?\n\npublic class TestServlet extends HttpServlet {\n  public void doHead(HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException {\n    response.getWriter().close();\n  }\n}", "id": 190187, "time": "2016-04-12T13:54:57Z", "creator": "chris@christopherschultz.net", "creation_time": "2016-04-12T13:54:57Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 59310, "text": "(In reply to Christopher Schultz from comment #1)\n> So a servlet like this will cause Tomcat to return \"Content-Length: 0\"?\n\nYes, exactly. The same happens without the close() call.", "id": 190188, "time": "2016-04-12T14:01:19Z", "creator": "tobias.oberlies@sap.com", "creation_time": "2016-04-12T14:01:19Z", "is_private": false, "attachment_id": null}, {"attachment_id": null, "tags": [], "creator": "chris@christopherschultz.net", "is_private": false, "count": 3, "id": 190192, "time": "2016-04-12T16:01:07Z", "bug_id": 59310, "creation_time": "2016-04-12T16:01:07Z", "text": "Would you mind testing quickly with 8.0.33?"}, {"count": 4, "tags": [], "creator": "violetagg@apache.org", "attachment_id": null, "text": "Hi,\n\nIf I have a servlet like this:\n\npublic class TestServlet extends HttpServlet {\n\n\tprotected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\n        response.getWriter();\n\t}\n\n\tprotected void doHead(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\n\t    response.getWriter();\n\t}\n\n}\n\nBoth GET and HEAD requests return \"Content-Length: 0\".\nSo the size of the HEAD corresponds to the size of the GET.\n\nDo you observe something else?\n\nRegards,\nVioleta", "id": 190213, "time": "2016-04-13T13:40:54Z", "bug_id": 59310, "creation_time": "2016-04-13T13:40:54Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 59310, "text": "(In reply to Violeta Georgieva from comment #4)\n> If I have a servlet like this:\n\nMy servlet has a different doGet method: Mine returns a response with unknown length. doHead is basically the same - but that results in an incorrect response: the response to the HEAD request includes a generated \"Content-Length: 0\". AFAIK, there is no reasonable way to make Tomcat not generate this header.\n\n\n(In reply to Christopher Schultz from comment #3)\n> Would you mind testing quickly with 8.0.33?\n\nI've tried with 8.0.33, and the result is the same:\n\n> HEAD /test-backend/raw/foo HTTP/1.1\n> User-Agent: curl/7.29.0\n> Host: localhost:8080\n> Accept: */*\n>\n< HTTP/1.1 200 OK\n< Server: Apache-Coyote/1.1\n< Content-Length: 0\n< Date: Mon, 18 Apr 2016 10:59:20 GMT", "id": 190335, "time": "2016-04-18T11:12:07Z", "creator": "tobias.oberlies@sap.com", "creation_time": "2016-04-18T11:12:07Z", "is_private": false, "attachment_id": null}, {"attachment_id": null, "tags": [], "creator": "knst.kolinko@gmail.com", "is_private": false, "count": 6, "id": 190340, "time": "2016-04-18T12:07:25Z", "bug_id": 59310, "creation_time": "2016-04-18T12:07:25Z", "text": "You should be able to do the following in your servlet:\n\n    protected void doHead(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\n        response.setContentLength(-1);\n    }\n\n\n(BTW, skipping a setContentLength() call in javax.servlet.http.HttpServlet will have the same effect. The contentLength is a numeric field that always has some value, with -1 being the default. The actual header is generated in o.a.coyote.http11.Http11Processor.prepareResponse())."}, {"count": 7, "tags": [], "bug_id": 59310, "text": "That won't work. The OutputBuffer will still set the content length to zero.\n\nresp.flushBuffer();\n\nsort of works but adds the Transfer-Encoding header. I'm currently experimenting with a unit test to see if I can find a better solution although using flushBuffer() is likely to be the best cross-container solution.", "id": 190346, "time": "2016-04-18T12:32:22Z", "creator": "markt@apache.org", "creation_time": "2016-04-18T12:32:22Z", "is_private": false, "attachment_id": null}, {"count": 8, "tags": [], "bug_id": 59310, "is_private": false, "text": "This has been fixed so Tomcat will not send a Content-Length header for a HEAD request unless the application explicitly specifies one.\n\nThe fix has been made in:\n- 9.0.x for 9.0.0.M5\n- 8.5.x for 8.5.1\n- 8.0.x for 8.0.34\n- 7.0.x for 7.0.70\n- 6.0.x for 6.0.46", "id": 190357, "time": "2016-04-18T15:54:22Z", "creator": "markt@apache.org", "creation_time": "2016-04-18T15:54:22Z", "attachment_id": null}]