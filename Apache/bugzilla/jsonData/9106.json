[{"count": 0, "tags": [], "text": "A nested <patternset> element inside a <unzip> task is used to specify what \nfiles to unzip from the zip archives selected by <unzip>.  The <paternset> \nelement seems to be ignored as <unzip> simply extracts all files from the \nsource archives, as if there hadn't been any <patternset>.\n\nThe attached test case is a buildfile, which when run creates a zip file \ntest.zip with two entries a.xml and b.xml and then tries to extract a.xml only \nfrom the archive.  However, both a.xml and b.xml are extracted and the target \nfails.\n\nThe problem seems to be that <unzip> is backended by \norg.apache.tools.ant.taskdefs.Expand whicn in turn subclasses MatchingTask.  \nExpand has a addPatternset(PatternSet set) and MatchingTask has a \ncreatePatternSet() method.  Now the intended addPatternset(PatternSet set) \nnever gets called.\n\nA solution is to override createPatternSet() in Expand.", "attachment_id": null, "bug_id": 9106, "id": 16138, "time": "2002-05-15T09:40:16Z", "creator": "knut@paranor.ch", "creation_time": "2002-05-15T09:40:16Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 9106, "attachment_id": 1864, "text": "Created attachment 1864\ntest case as buildfile", "id": 16139, "time": "2002-05-15T09:41:08Z", "creator": "knut@paranor.ch", "creation_time": "2002-05-15T09:41:08Z", "is_private": false}, {"count": 2, "tags": [], "creator": "bodewig@apache.org", "attachment_id": null, "id": 16155, "time": "2002-05-15T13:56:47Z", "bug_id": 9106, "creation_time": "2002-05-15T13:56:47Z", "is_private": false, "text": "Hmm, Expand doesn't use the MatchingTask capability at all, maybe the better\nsolution would be to make Expand inherit from Task directly.\n\nThe problem I can see with this approach is that it may break API backwards\ncompatibility and could cause problems for people extending Expand who rely\non MatchingTask - but we'll have broken their task with version 1.18 of Expand\nanyway."}, {"count": 3, "tags": [], "bug_id": 9106, "attachment_id": 1869, "text": "Created attachment 1869\npatch for Expand task", "id": 16156, "time": "2002-05-15T14:15:52Z", "creator": "knut@paranor.ch", "creation_time": "2002-05-15T14:15:52Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 9106, "text": "Well I guess you have to go for the one or other.  Right now it isn't even \ndocumented that the <unjar>/<unzip> etc. tasks form an implicit <fileset> where \n<include>/<exclude> and other nested elements are supported.\n\nThe previously attached patch simply changes Expand to subclass Task instead of \nMatchingTask ;-)", "id": 16158, "time": "2002-05-15T14:16:53Z", "creator": "knut@paranor.ch", "creation_time": "2002-05-15T14:16:53Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 9106, "attachment_id": null, "text": "I am sorry, but I am not even able to recreate the problem.  Only a.xml gets\nupzipped in my machine (Win98 at the moment).  Hmmm...  Stefan, have you been\nable to recreate this problem in your environment?", "id": 16286, "time": "2002-05-17T01:11:20Z", "creator": "umagesh@apache.org", "creation_time": "2002-05-17T01:11:20Z", "is_private": false}, {"count": 6, "tags": [], "bug_id": 9106, "text": "It depends on the JVM, more specifically the order by which methods will be\nreturned Class.getMethods.  When switching from 1.2 to 1.3 I once noticed that\nI'd get the method in reverse order (you can see that when you run JUnit, in\none VM the test methods will be sorted alphabetically in ascending order, the\nother one will use descending order).\n\nI haven't even tried to recreate the problem as I know Kurt is right ;-)\n\nMy vote would go for making Expand extend Task directly, BTW.", "id": 16307, "time": "2002-05-17T06:17:10Z", "creator": "bodewig@apache.org", "creation_time": "2002-05-17T06:17:10Z", "is_private": false, "attachment_id": null}, {"count": 7, "tags": [], "creator": "umagesh@apache.org", "attachment_id": null, "id": 16342, "time": "2002-05-17T19:45:18Z", "bug_id": 9106, "creation_time": "2002-05-17T19:45:18Z", "is_private": false, "text": "Aah, I understand the issue now.  +1 to change it to extend from Task so long \nas all existing functionalities are retained and this bug also is  killed.  \nI do realize we may break backwards compatibility at the API level though - so\nlong as we document it as an intentional break, I guess it will be ok."}, {"count": 8, "tags": [], "creator": "bodewig@apache.org", "attachment_id": null, "text": "Expand no longer is a MatchingTask in the 1.5 branch.", "id": 16469, "time": "2002-05-21T12:59:12Z", "bug_id": 9106, "creation_time": "2002-05-21T12:59:12Z", "is_private": false}]