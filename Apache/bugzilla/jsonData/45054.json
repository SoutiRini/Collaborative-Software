[{"count": 0, "attachment_id": null, "bug_id": 45054, "text": "The documented behavious for the option 'optional_no_ca' is that if the return code\nof SSL_Accept valid this predicate:\nssl_private.h:#define ssl_verify_error_is_optional(errnum) \\\nssl_private.h-   ((errnum == X509_V_ERR_DEPTH_ZERO_SELF_SIGNED_CERT) \\\nssl_private.h-    || (errnum == X509_V_ERR_SELF_SIGNED_CERT_IN_CHAIN) \\\nssl_private.h-    || (errnum == X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT_LOCALLY) \\\nssl_private.h-    || (errnum == X509_V_ERR_CERT_UNTRUSTED) \\\nssl_private.h-    || (errnum == X509_V_ERR_UNABLE_TO_VERIFY_LEAF_SIGNATURE))\nthen the error code in SSL_VERIFY_CLIENT should be \"FAILED:(an error message)\" but \"GENEROUS\".\n\nThis functionality is very useful to use certificate as an user-centric\nauthentication token, why forbid it with this code from ssl_engine_io.c:\n        if (ssl_verify_error_is_optional(verify_result) &&\n            (sc->server->auth.verify_mode == SSL_CVERIFY_OPTIONAL_NO_CA))\n        {\n            /* leaving this log message as an error for the moment,\n             * according to the mod_ssl docs:\n             * \"level optional_no_ca is actually against the idea\n             *  of authentication (but can be used to establish\n             * SSL test pages, etc.)\"\n             * optional_no_ca doesn't appear to work as advertised\n             * in 1.x\n             */\n            ap_log_cerror(APLOG_MARK, APLOG_INFO, 0, c,\n                          \"SSL client authentication failed, \"\n                          \"accepting certificate based on \"\n                          \"\\\"SSLVerifyClient optional_no_ca\\\" \"\n                          \"configuration\");\n            ssl_log_ssl_error(APLOG_MARK, APLOG_INFO, c->base_server);\n        }\nlook that we don't reset the result to something good like X509_V_OK.\n\nAnd this code that return the value of SSL_VERIFY_CLIENT:\n    if (vrc == X509_V_OK && verr == NULL && vinfo == NULL && xs == NULL)\n        /* no client verification done at all */\n        result = \"NONE\";\n    else if (vrc == X509_V_OK && verr == NULL && vinfo == NULL && xs != NULL)\n        /* client verification done successful */\n        result = \"SUCCESS\";\n    else if (vrc == X509_V_OK && vinfo != NULL && strEQ(vinfo, \"GENEROUS\"))\n        /* client verification done in generous way */\n        result = \"GENEROUS\";\n    else\n        /* client verification failed */\n        result = apr_psprintf(p, \"FAILED:%s\", verr);\n\n    if (xs)\n        X509_free(xs);\n\nThe third condition can never happen as vrc will be OK and vinfo == GENEROUS at the same time.\nTwo approaches:\n- reset the result code (we loss information), with a\n  SSL_set_verify_result(ssl, X509_V_OK); inside the first extracted code.\n- change third condition with this patch:\n        -    else if (vrc == X509_V_OK && vinfo != NULL && strEQ(vinfo, \"GENEROUS\"))\n        +    else if (ssl_verify_error_is_optional(vrc) && vinfo != NULL && strEQ(vinfo, \"GENEROUS\"))\n - bonus point would be to return the result code inside another variable and\n   completely removing the optional_no_ca option, web app could just use\n   optional and choose actions in function of SSL_VERIFY_CLIENT == FAILED and\n   the error code.\n\nWhat do you think ?", "id": 116876, "time": "2008-05-21T02:29:41Z", "creator": "bdauvergne@entrouvert.com", "creation_time": "2008-05-21T02:29:41Z", "tags": [], "is_private": false}, {"count": 1, "attachment_id": null, "bug_id": 45054, "text": "I've run into the same problem.  If 'SSLVerifyClient optional_no_ca' is used, the SSL_CLIENT_VERIFY environment variable will contain either 'SUCCESS' or 'FAILED:' (with no error string). It will never contain 'GENEROUS', as stated by the documentation.\n\nAs Benjamin stated, this happens because ssl_callback_SSLVerify() in ssl_engine_kernel.c only sets sslconn->verify_info = \"GENEROUS\" if validation failed with an \"optional\" error, and only sets sslconn->verify_error if optional_no_ca is used and validation failed with a non-optional error. Thus, the 'if (vrc == X509_V_OK && vinfo != NULL && strEQ(vinfo, \"GENEROUS\"))' statement in ssl_var_lookup_ssl_cert_verify() in ssl_engine_vars.c will never match because vinfo will not have been set if vrc is set to X509_V_OK, and the FAILED message will not contain an error string since sslconn->verify_error was never set.\n\nI get the sense that the original mistake was in the if statement in ssl_engine_vars.c, so the second approach mentioned by Benjamin is probably the best fix.  However, the ssl_verify_error_is_optional(vrc) check that Benjamin used isn't actually needed, since sslconn->verify_info will not be set if the error is optional, so you only really need to check for sslconn->verify_info == GENEROUS.\n\nI'm attaching two patches (one for 2.2.x, and one for trunk) to correct this.  Hopefully someone will apply them, as this is a simple but annoying bug.", "id": 136097, "time": "2010-04-13T13:52:53Z", "creator": "apache-bugzilla@PaulSD.com", "creation_time": "2010-04-13T13:52:53Z", "tags": [], "is_private": false}, {"count": 2, "tags": [], "creator": "apache-bugzilla@PaulSD.com", "is_private": false, "text": "Created attachment 25278\nPatch for 2.2.x", "id": 136098, "time": "2010-04-13T14:01:22Z", "bug_id": 45054, "creation_time": "2010-04-13T14:01:22Z", "attachment_id": 25278}, {"count": 3, "tags": [], "bug_id": 45054, "text": "Created attachment 25279\nPatch for trunk", "id": 136099, "time": "2010-04-13T14:01:54Z", "creator": "apache-bugzilla@PaulSD.com", "creation_time": "2010-04-13T14:01:54Z", "is_private": false, "attachment_id": 25279}, {"count": 4, "attachment_id": null, "creator": "apache-bugzilla@PaulSD.com", "text": "BTW, I've attached a patch to bug #45922 which includes this fix and also provides the verification error message (only one error message if multiple verification failures occurred) when returning a GENEROUS result.", "id": 136152, "time": "2010-04-14T11:35:18Z", "bug_id": 45054, "creation_time": "2010-04-14T11:35:18Z", "tags": [], "is_private": false}, {"count": 5, "tags": [], "bug_id": 45054, "text": "Current possible SSL_CLIENT_VERIFY values when SSLVerifyClient set to optional_no_ca:\nNONE: if empty client certificate message sent.\nSUCCESS: successful authentication when client certificate chains up to a trusted root.\nGENEROUS: initial negotiation when client certificate does not chain up to a trusted root.\nSUCCESS: when resuming GENEROUS session (bug #53193).\nFAILED:(null): renegotiation when client certificate does not chain up to a trusted root.", "id": 171372, "time": "2013-11-21T11:22:25Z", "creator": "arnis@ut.ee", "creation_time": "2013-11-21T11:22:25Z", "is_private": false, "attachment_id": null}]