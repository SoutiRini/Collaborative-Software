[{"count": 0, "tags": [], "bug_id": 59779, "text": "Tomcat 7.0.67 added the ability respond with relative redirects, which defaults to enabled. If proxyPort or scheme is specified in the connector which a context uses and the context has useRelativeRedirects the proxy port and scheme are dropped from redirect. The only way to stop this globally is to enable org.apache.catalina.STRICT_SERVLET_COMPLIANCE, but that changes other values too. It would be better if org.apache.catalina.connector.Response.sendRedirect could check if any values used to construct the redirect url had been modified during the processing of the request and an absolute response is required.", "id": 192048, "time": "2016-07-01T15:22:58Z", "creator": "apache@neworld.us", "creation_time": "2016-07-01T15:22:58Z", "is_private": false, "attachment_id": null}, {"attachment_id": null, "tags": [], "creator": "markt@apache.org", "is_private": false, "count": 1, "id": 192049, "time": "2016-07-01T15:30:29Z", "bug_id": 59779, "creation_time": "2016-07-01T15:30:29Z", "text": "(In reply to NateC from comment #0)\n> Tomcat 7.0.67 added the ability respond with relative redirects, which\n> defaults to enabled. If proxyPort or scheme is specified in the connector\n> which a context uses and the context has useRelativeRedirects the proxy port\n> and scheme are dropped from redirect.\n\nWhy is that a problem? The redirect is relative to the current page and the user agent will construct the target URL based on whatever scheme and port it used to connect to the original page.\n\n> The only way to stop this globally is\n> to enable org.apache.catalina.STRICT_SERVLET_COMPLIANCE,\n\nNo it is not. Defaults for all contexts can be set in $CATALINA_BASE/conf/context.xml. Defaults can also be set per virtual host.\n\n> but that changes\n> other values too. It would be better if\n> org.apache.catalina.connector.Response.sendRedirect could check if any\n> values used to construct the redirect url had been modified during the\n> processing of the request and an absolute response is required.\n\nI don't understand the problem. I think a concrete example is required."}, {"count": 2, "tags": [], "creator": "apache@neworld.us", "attachment_id": null, "is_private": false, "id": 192051, "time": "2016-07-01T17:12:56Z", "bug_id": 59779, "creation_time": "2016-07-01T17:12:56Z", "text": "(In reply to Mark Thomas from comment #1)\n> (In reply to NateC from comment #0)\n> > Tomcat 7.0.67 added the ability respond with relative redirects, which\n> > defaults to enabled. If proxyPort or scheme is specified in the connector\n> > which a context uses and the context has useRelativeRedirects the proxy port\n> > and scheme are dropped from redirect.\n> \n> Why is that a problem? The redirect is relative to the current page and the\n> user agent will construct the target URL based on whatever scheme and port\n> it used to connect to the original page.\n\nThat is the problem the server is configured to redirect to a different scheme or port.\n\n> > The only way to stop this globally is\n> > to enable org.apache.catalina.STRICT_SERVLET_COMPLIANCE,\n> \n> No it is not. Defaults for all contexts can be set in\n> $CATALINA_BASE/conf/context.xml. Defaults can also be set per virtual host.\n\nSorry about that. Being able to define defaults for each engine and host is probably enough as long as no servlet contexts override it.\n\n> > but that changes\n> > other values too. It would be better if\n> > org.apache.catalina.connector.Response.sendRedirect could check if any\n> > values used to construct the redirect url had been modified during the\n> > processing of the request and an absolute response is required.\n> \n> I don't understand the problem. I think a concrete example is required.\n\nAn example Connector configuration which would have this issue:\n<Connector\n           protocol=\"org.apache.coyote.http11.Http11AprProtocol\"\n           port=\"80\"\n           secure=\"true\"\n           scheme=\"https\"\n           proxyPort=\"443\"\n           URIEncoding=\"UTF-8\"\n           />\n\nWhen a client makes a request to http://example.com/servlet/index.html and the servlet performs a redirect to \"landingPage.html\" when constructing an absolute URL the redirect is to \"https://example.com:443/servlet/landingPage.html\" but when it is relative the url is just \"landingPage.html\", which the client will interpret as \"http://example.com/servlet/landingPage.html\""}, {"count": 3, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "is_private": false, "id": 192052, "time": "2016-07-01T20:28:34Z", "bug_id": 59779, "creation_time": "2016-07-01T20:28:34Z", "text": "(In reply to NateC from comment #2)\n> (In reply to Mark Thomas from comment #1)\n\n\n> > I don't understand the problem. I think a concrete example is required.\n> \n> An example Connector configuration which would have this issue:\n> <Connector\n>            protocol=\"org.apache.coyote.http11.Http11AprProtocol\"\n>            port=\"80\"\n>            secure=\"true\"\n>            scheme=\"https\"\n>            proxyPort=\"443\"\n>            URIEncoding=\"UTF-8\"\n>            />\n> \n> When a client makes a request to http://example.com/servlet/index.html and\n> the servlet performs a redirect to \"landingPage.html\" when constructing an\n> absolute URL the redirect is to\n> \"https://example.com:443/servlet/landingPage.html\" but when it is relative\n> the url is just \"landingPage.html\", which the client will interpret as\n> \"http://example.com/servlet/landingPage.html\"\n\nEither there is a reverse proxy missing from the above description or scheme and proxyPort are being mis-used to generate redirects to https when a transport guarantee should be used."}, {"count": 4, "text": "(In reply to Mark Thomas from comment #3)\n> (In reply to NateC from comment #2)\n> > (In reply to Mark Thomas from comment #1)\n> \n> \n> > > I don't understand the problem. I think a concrete example is required.\n> > \n> > An example Connector configuration which would have this issue:\n> > <Connector\n> >            protocol=\"org.apache.coyote.http11.Http11AprProtocol\"\n> >            port=\"80\"\n> >            secure=\"true\"\n> >            scheme=\"https\"\n> >            proxyPort=\"443\"\n> >            URIEncoding=\"UTF-8\"\n> >            />\n> > \n> > When a client makes a request to http://example.com/servlet/index.html and\n> > the servlet performs a redirect to \"landingPage.html\" when constructing an\n> > absolute URL the redirect is to\n> > \"https://example.com:443/servlet/landingPage.html\" but when it is relative\n> > the url is just \"landingPage.html\", which the client will interpret as\n> > \"http://example.com/servlet/landingPage.html\"\n> \n> Either there is a reverse proxy missing from the above description or scheme\n> and proxyPort are being mis-used to generate redirects to https when a\n> transport guarantee should be used.\n\nThis configuration is being used behind a load balancer performing SSL offloading. Looking at the connector doc, https://tomcat.apache.org/tomcat-7.0-doc/config/http.html it looks like this should work based on this description.\n\nThe proxyName and proxyPort attributes can be used when Tomcat is run behind a proxy server. These attributes modify the values returned to web applications that call the request.getServerName() and request.getServerPort() methods, which are often used to construct absolute URLs for redirects.", "bug_id": 59779, "attachment_id": null, "id": 192142, "time": "2016-07-05T14:18:07Z", "creator": "apache@neworld.us", "creation_time": "2016-07-05T14:18:07Z", "tags": [], "is_private": false}, {"count": 5, "text": "(In reply to NateC from comment #4)\n\n> This configuration is being used behind a load balancer performing SSL\n> offloading. Looking at the connector doc,\n> https://tomcat.apache.org/tomcat-7.0-doc/config/http.html it looks like this\n> should work based on this description.\n\nIt does work.\n\nYou can't have the reverse proxy passing both http and https traffic from the client to that connector. The Connector attributes secure=\"true\" and scheme=\"https\" tell Tomcat that ALL traffic received by that Connector was sent, by the client, over https. If that isn't the case, stuff will break.", "bug_id": 59779, "attachment_id": null, "id": 192144, "time": "2016-07-05T15:48:03Z", "creator": "markt@apache.org", "creation_time": "2016-07-05T15:48:03Z", "tags": [], "is_private": false}, {"count": 6, "tags": [], "bug_id": 59779, "attachment_id": null, "text": "(In reply to Mark Thomas from comment #5)\n> (In reply to NateC from comment #4)\n> \n> > This configuration is being used behind a load balancer performing SSL\n> > offloading. Looking at the connector doc,\n> > https://tomcat.apache.org/tomcat-7.0-doc/config/http.html it looks like this\n> > should work based on this description.\n> \n> It does work.\n> \n> You can't have the reverse proxy passing both http and https traffic from\n> the client to that connector. The Connector attributes secure=\"true\" and\n> scheme=\"https\" tell Tomcat that ALL traffic received by that Connector was\n> sent, by the client, over https. If that isn't the case, stuff will break.\n\nThe reverse proxy is not passing both http and https to the connector just http, but the client is sending https to the reverse proxy. \n\nClient -(https)-> Load Balancer -(http)-> Tomcat\n\nSecure and https need to be set so that Tomcat responds correctly to the client that data was encrypted because that is how the client thinks it is communicating to the server and why absolute redirects were needed.\n\nAs described in these examples:\nhttp://www.invantive.com/about-invantive/news/entryid/897/ssl-offloading-for-apache-tomcat\nhttp://www.gattis.org/Work-and-Tech/communication-and-collaboration/web-technology/tomcat/tomcat-ssl-offloading\n\nBecause these are not apache docs this might have been an unsupported feature.", "id": 192146, "time": "2016-07-05T16:05:27Z", "creator": "apache@neworld.us", "creation_time": "2016-07-05T16:05:27Z", "is_private": false}, {"count": 7, "tags": [], "creator": "chris@christopherschultz.net", "attachment_id": null, "is_private": false, "id": 192184, "time": "2016-07-06T21:26:20Z", "bug_id": 59779, "creation_time": "2016-07-06T21:26:20Z", "text": "(In reply to NateC from comment #0)\n> It would be better if org.apache.catalina.connector.Response.sendRedirect\n> could check if any values used to construct the redirect url had been\n> modified during the processing of the request and an absolute response\n> is required.\n\nUnder what conditions would those values be changed in a way that the reverse prosy itself didn't know about?\n\nI'm not saying there is no opportunity for improvement, here, but I don't see a use-case where the existing capabilities won't work."}, {"count": 8, "tags": [], "bug_id": 59779, "attachment_id": null, "id": 192222, "time": "2016-07-07T17:55:37Z", "creator": "apache@neworld.us", "creation_time": "2016-07-07T17:55:37Z", "is_private": false, "text": "(In reply to Christopher Schultz from comment #7)\n> (In reply to NateC from comment #0)\n> > It would be better if org.apache.catalina.connector.Response.sendRedirect\n> > could check if any values used to construct the redirect url had been\n> > modified during the processing of the request and an absolute response\n> > is required.\n> \n> Under what conditions would those values be changed in a way that the\n> reverse prosy itself didn't know about?\n\nI am not sure what you asking here but are you trying to suggest the reverse proxy should be content aware and modify the contents of the responses from the tomcat server to add secure and alter the urls in redirects to be absolute so that the client ends up at the correct destination rather than having tomcat do that?\n\n> I'm not saying there is no opportunity for improvement, here, but I don't\n> see a use-case where the existing capabilities won't work.\n\nI agree that the it will work with the ability to disable useRelativeRedirects. My point was just that an upgrade from < 7.0.67 to >= 7.0.67 using a connector configured as described will break redirects until the contexts are configured to not use relative redirects. It is more of a backwards compatibility issue than anything."}]