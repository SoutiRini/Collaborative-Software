[{"attachment_id": null, "tags": [], "creator": "mark@pdx.edu", "text": "I have ran into a problem with building apache 2 and using --disable-shared and\n--enable-so options. Apache 1.3 and other software when using --disable-shared\nmean to just link the binaries from the package to static libraries if possible\nand build static libraries for the packages libraries, libapr in apache 2's case. \n\nThe problem I am having is that using disable-shared sets\n\"build_libtool_libs=no\" in the $prefix/share/apache2/build/libtool of apache. So\nwhen I use apxs it ends up building a mod_modulename.a instead of\nmod_modulename.so. My temporary workaround is to just edit the libtool and set\nall ^build_libtool_libs=no to ^build_libtool_libs=yes after building apache 2.\nNot sure if this is the correct solution, but it allows me to build apache 2\nmodules  with the mod_modulename.so. I am getting this result on Solaris 9 and\nRedhat Enterprise 3. I assume that this problem is on all platforms.\n\nApache 1.3 had no problems with building shared modules if compiled with\n--disable-shared. Maybe this is the way the apache 2 developers want, but seems\nlike a bug to me.", "count": 0, "id": 72869, "time": "2005-03-25T21:04:35Z", "bug_id": 34184, "creation_time": "2005-03-25T21:04:35Z", "is_private": false}, {"count": 1, "tags": [], "text": "The build system is really working as designed here.\n\nYou could probably build and install apr/apr-util separately then just remove\nthe installed .so files or something, then configure httpd against those\n(--with-apr etc), to achieve your desired state.", "attachment_id": null, "id": 72966, "creator": "jorton@redhat.com", "time": "2005-03-29T14:34:33Z", "bug_id": 34184, "creation_time": "2005-03-29T14:34:33Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 34184, "attachment_id": null, "is_private": false, "id": 73102, "time": "2005-03-30T20:26:25Z", "creator": "mark@pdx.edu", "creation_time": "2005-03-30T20:26:25Z", "text": "(In reply to comment #1)\n> The build system is really working as designed here.\n> \n> You could probably build and install apr/apr-util separately then just remove\n> the installed .so files or something, then configure httpd against those\n> (--with-apr etc), to achieve your desired state.\n\nSo you are saying that if you use --disable-shared you don't want people to be\nable to build DSO modules? You should probably then have configure show a\nwarning that DSO won't work if people use --disable-shared and --enable-so in\nconfigure. This seems like a bug to me because the build process gives you the\nimpression that this should work, but doesn't.\n\nI have been helping to create an Apache 2 package for openpkg.org, since they\ncurrently recommend apache 1.3. Openpkg.org builds all packages with\n--disable-shared. This didn't cause problems with Apache 1.3 and does with\nApache 2. If the apache 2 developers don't want to do anything about it, I will\njust have to continue with my solution and that is to do a regex on libtool.\n "}]