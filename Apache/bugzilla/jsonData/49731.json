[{"attachment_id": null, "tags": [], "bug_id": 49731, "text": "If your apache configuration consists of multiple SSL virtual hosts on the same IP that have different values for SSLVerifyClient then only the first configuration is used.\n\nFor instance, if the configuration for 0-example1.com sets SSLVerifyClient to 'none' and the configuration for 1-example2.com sets SSLVerifyClient to 'optional_no_ca', then no CertificateRequest message will be sent out over the TLS protocol regardless of the SNI value in the ClientHello extension.\n\nIf the situation is reversed (0-example2.com and 1-example1.com) then a CertificateRequest message will be sent out for both domains.\n\nThis can be confirmed using two Apache website configurations with SSL enabled (one with 'SSLVerifyClient none' and the other with 'SSLVerifyClient optional_no_ca') and openSSL's s_client tool as the client:\n\nopenssl s_client -tls1 -debug -msg -state -servername example1.com\nopenssl s_client -tls1 -debug -msg -state -servername example2.com\n\nApache's SNI handler should determine whether or not to send a CertificateRequest (modify peer verify mode) based on the requested host, however, it does not.\n\nThis bug could be particularly painful for large collections of SSL-enabled sites that are served by Apache where only one or two of the sites require or might require client-side certificates. If one of the configurations for those sites isn't loaded first then client-side certificates will never be sent. If one of them is loaded first then every other SSL site will either simply fail (in the cert-required case) or cause browsers to pop up client-certificate UIs (in the cert-optional case where the browser user has an available certificate in their browser key-chain).", "count": 0, "id": 139007, "time": "2010-08-09T19:20:11Z", "creator": "dlongley@digitalbazaar.com", "creation_time": "2010-08-09T19:20:11Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 49731, "attachment_id": null, "text": "Name based virtual host are not supported with SSL, especially not with this old version. Use the latest version and clients and an openssl version on server side which support SNI, and everything works as expected.", "id": 139022, "time": "2010-08-10T05:28:36Z", "creator": "rpluem@apache.org", "creation_time": "2010-08-10T05:28:36Z", "is_private": false}, {"attachment_id": null, "tags": [], "bug_id": 49731, "text": "(In reply to comment #1)\n> Name based virtual host are not supported with SSL, especially not with this\n> old version. Use the latest version and clients and an openssl version on\n> server side which support SNI, and everything works as expected.\n\nThe problem seems to persist in version 2.2.16. I have two site configurations where one uses 'SSLClientVerify optional_no_ca' and another uses 'SSLClientVerify none'. When using a TLS client (one that prints out the SNI hostname that it is sending the server), I receive a CertificateRequest for both sites. The content served does (correctly) depend on the hostname provided, so the virtual host option is functioning correctly.\n\nI will try to confirm this using two vanilla configurations and add them to this bug (and reopen it if confirmed). Perhaps that will reveal it is only a configuration issue. I assume Apache 2.2.16 is the latest version you're referring to of 2.2? I can find tarballs for 2.3.6 but I didn't think that you meant Apache 2.3.", "count": 2, "id": 139036, "time": "2010-08-10T11:48:16Z", "creator": "dlongley@digitalbazaar.com", "creation_time": "2010-08-10T11:48:16Z", "is_private": false}, {"count": 3, "text": "(In reply to comment #2)\n\n> The problem seems to persist in version 2.2.16. I have two site configurations\n> where one uses 'SSLClientVerify optional_no_ca' and another uses\n> 'SSLClientVerify none'. When using a TLS client (one that prints out the SNI\n> hostname that it is sending the server), I receive a CertificateRequest for\n\nAre you sure that your httpd 2.2.16 was compiled against a SNI capable openssl and that it is running against one? E.g RHEL 4 / 5 provided openssl packages are NOT SNI capable.\n\n> both sites. The content served does (correctly) depend on the hostname\n> provided, so the virtual host option is functioning correctly.\n> \n> I will try to confirm this using two vanilla configurations and add them to\n> this bug (and reopen it if confirmed). Perhaps that will reveal it is only a\n> configuration issue. I assume Apache 2.2.16 is the latest version you're\n> referring to of 2.2? I can find tarballs for 2.3.6 but I didn't think that you\n> meant Apache 2.3.\n\nYes, I meant the latest 2.2.", "bug_id": 49731, "attachment_id": null, "id": 139038, "time": "2010-08-10T14:34:20Z", "creator": "rpluem@apache.org", "creation_time": "2010-08-10T14:34:20Z", "tags": [], "is_private": false}, {"count": 4, "tags": [], "bug_id": 49731, "attachment_id": null, "is_private": false, "id": 139043, "time": "2010-08-10T15:12:08Z", "creator": "dlongley@digitalbazaar.com", "creation_time": "2010-08-10T15:12:08Z", "text": "(In reply to comment #3)\n> (In reply to comment #2)\n> \n> > The problem seems to persist in version 2.2.16. I have two site configurations\n> > where one uses 'SSLClientVerify optional_no_ca' and another uses\n> > 'SSLClientVerify none'. When using a TLS client (one that prints out the SNI\n> > hostname that it is sending the server), I receive a CertificateRequest for\n> \n> Are you sure that your httpd 2.2.16 was compiled against a SNI capable openssl\n> and that it is running against one? E.g RHEL 4 / 5 provided openssl packages\n> are NOT SNI capable.\n\nYes. I am printing out the data sent to the server and it includes the SNI entry.\n\n> \n> > both sites. The content served does (correctly) depend on the hostname\n> > provided, so the virtual host option is functioning correctly.\n> > \n> > I will try to confirm this using two vanilla configurations and add them to\n> > this bug (and reopen it if confirmed). Perhaps that will reveal it is only a\n> > configuration issue. I assume Apache 2.2.16 is the latest version you're\n> > referring to of 2.2? I can find tarballs for 2.3.6 but I didn't think that you\n> > meant Apache 2.3.\n> \n> Yes, I meant the latest 2.2.\n\nI have confirmed that this is fixed in the latest version of Apache. In the quick test I ran before my last comment I didn't specify the host+port in the command line options for openssl s_client. They must be specified in addition to the -servername option, it will not default in the way one might think (but this is an openssl issue).\n\nAfter creating vanilla configurations and running everything through it all worked correctly with both the 'SSLVerifyClient require' and 'SSLVerifyClient optional_no_ca' options combined with 'SSLVerifyClient none' for the other host. This is why it's good to confirm :).\n\nEverything works now with Apache 2.2.16. Thanks!"}]