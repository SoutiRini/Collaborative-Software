[{"count": 0, "attachment_id": null, "bug_id": 22446, "text": "A discussion on the Dev@Ant list (http://marc.theaimsgroup.com/?l=ant-\nuser&m=106090613520168&w=2) shows that error.\n\nFor a quick validate of that behaviour a created an ant buildfile and a little \nperl script. The perl script prints all parameters into a log file then reads a \nline from STDIN and prints that into the log file, too.\n\nbuild.xml\n-----------------------------------------------\n<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<project name=\"test\" basedir=\".\" default=\"main\">\n    <target name=\"main\">\n        <apply executable=\"perl\" inputstring=\"Hallo \">\n            <arg value=\"say.pl\"/>\n            <fileset dir=\".\" includes=\"*.txt\"/>\n        </apply>\n\n        <loadfile property=\"file\" srcFile=\"log.log\" failonerror=\"false\"/>\n        <property name=\"file\" value=\"\"/>\n        <echo>${line.separator}${file}${line.separator}${line.separator}</echo>\n        <delete file=\"log.log\"/>\n    </target>\n</project>\n\n\nsay.pl\n-----------------------------------------------\nopen (LOG, \">>log.log\");\nselect LOG;\n\nprint \"say.pl: \";\nforeach $arg (@ARGV) {\n    print \"$arg \";\n}\nprint \"\\n\";\n\n$input = <STDIN>;\nprint \"Input: $input\\n\\n\";\n\nclose LOG;\n\n\n\nlog.log\n-----------------------------------------------\nsay.pl: C:\\temp\\apply-test\\one.txt \nInput: Hallo \n\nsay.pl: C:\\temp\\apply-test\\three.txt \nInput: \n\nsay.pl: C:\\temp\\apply-test\\two.txt \nInput: \n\n\n\n\nNow I try to put that into a JUnit testcase ...", "id": 42787, "time": "2003-08-15T05:36:58Z", "creator": "jan@materne.de", "creation_time": "2003-08-15T05:36:58Z", "tags": [], "is_private": false}, {"count": 1, "attachment_id": 7828, "bug_id": 22446, "text": "Created attachment 7828\nJUnit Test", "id": 42788, "time": "2003-08-15T06:30:01Z", "creator": "jan@materne.de", "creation_time": "2003-08-15T06:30:01Z", "tags": [], "is_private": false}, {"count": 2, "tags": [], "bug_id": 22446, "text": "The <exec> task (where <apply> extends from) uses a Redirector for connecting \nthe STD-streams to the task. And it seems that that class can only connect one \nstream to on task instance (and inputstring is here a kind of STDIN-stream).\n\nI try a little bit more ...", "id": 42789, "time": "2003-08-15T07:00:23Z", "creator": "jan@materne.de", "creation_time": "2003-08-15T07:00:23Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "creator": "bodewig@apache.org", "text": "The problem is, that ExecuteOn reuses the Execute instance and the Redirector\nhas \"gone bad\" after the first invocation.\n\nI see a certain problem with interpreting inputstring in the <apply> context.\nDo you expect the same inputstring to be passed as input to each single\ninvocation or do you expect it to be the cumulative input?\n\nI think the cumulative scenario doesn't make any sense at all as you'd have to\nknow the number and order of execution processes to really use it.", "id": 44262, "time": "2003-09-17T09:31:46Z", "bug_id": 22446, "creation_time": "2003-09-17T09:31:46Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 22446, "attachment_id": null, "is_private": false, "id": 44263, "time": "2003-09-17T09:36:52Z", "creator": "jan@materne.de", "creation_time": "2003-09-17T09:36:52Z", "text": "I think the same value for all files.\n\n\u00c4quivalent to:\n\n<foreach target=\"doexec\" param=\"file\">\n    <fileset .../>\n</foreach>\n\n<target name=\"doexec\">\n    <exec ... inputstring=\"thevalue\">\n        <arg value=\"${file}\"/>\n    </exec>\n</target>\n\n(Hope, this example is right :-)"}, {"count": 5, "attachment_id": null, "bug_id": 22446, "is_private": false, "id": 44264, "time": "2003-09-17T09:38:32Z", "creator": "jan@materne.de", "creation_time": "2003-09-17T09:38:32Z", "tags": [], "text": "It would be good if Shawn - the initiator of the discussion in mid august - \nwould be involved here :-)"}, {"count": 6, "tags": [], "bug_id": 22446, "attachment_id": null, "text": "Yes, anything but use the same input for all files doesn't seem to make sense.\n\nSupposed to be fixed in CVS now, works for me but should be tested - in particular\nthe case where the task writes output and runs on an OS that locks files in\nFileOutputStream#open like Windows, for example.\n\n", "id": 44327, "time": "2003-09-19T08:33:59Z", "creator": "bodewig@apache.org", "creation_time": "2003-09-19T08:33:59Z", "is_private": false}]