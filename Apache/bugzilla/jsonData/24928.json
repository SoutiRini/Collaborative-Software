[{"count": 0, "tags": [], "bug_id": 24928, "attachment_id": null, "is_private": false, "id": 47973, "time": "2003-11-23T21:18:01Z", "creator": "rniemi@online-usa.com", "creation_time": "2003-11-23T21:18:01Z", "text": "Using JUnit, I have created an ActiveTestSuite in which n threads will execute \na set of tests m times.  All classes which are involved in my testsuite are \nusing the root logger (Log4J).  The root logger is configured to log all \nmessages to the console.  The reason why I am writing to the console is so the \nJUnit task can intercept and write the logs to the XML file that it generates.\n\nThe symptom I am experiencing is that my main thread writes to the console \nwhich the JUnit ANT task captures (i.e. the text is non-visible during \ntestsuite execution through ANT), but all my spawned threads continue to write \nto the console even though the same Logger is being used.  When I looked in \nthe generated JUnit XML documents, only the logs for the main thread are \npresent.\n\nAs a test, I inserted a System.out in one of the methods a test thread \nexecutes.  Again, the message is only displayed to the console and is not \ncaptured by the JUnit task.\n\nI apologize if this \"issue\" has already been recorded and I'm sorry that I \ncurrently have no further details at the present (i.e. a solution for \ninstance).  Does anyone have any suggestions?\n\nCheers!\n\n-- Ross"}, {"count": 1, "tags": [], "bug_id": 24928, "is_private": false, "id": 48160, "attachment_id": null, "creator": "bodewig@apache.org", "creation_time": "2003-11-26T12:59:55Z", "time": "2003-11-26T12:59:55Z", "text": "Ant attaches threads and their outputs to tasks to enable tasks running in\n<parallel> to log without interfering with each other.\n\nIf you spawn a new thread, Ant won't know which task it belongs to and only\ncapture the output of the main thread for <junit> - and thus only this output\nis going to end up in the output sent to the formatters.\n\nIf you fork <junit>, the task will only see one output (the output of the spawned)\nVM and it will ge captured.  The alternative would be to explicitly register your\ncreated threads with Ant's logging system which will be very hard if not impossible\nto do (you'd need access to Project#registerThreadTask)."}, {"count": 2, "tags": [], "bug_id": 24928, "is_private": false, "text": "I tried forking the JUnit task as you suggested and I ended up getting the \ndesired behavior I'm looking for.  Thank you for explaining how logging in ANT \nworks.  Although the second solution sounds intriguing, (w.r.t. the time that I \nhave available) I think I'll stick with the former solution.\n\nCheers!\n\n-- Ross", "id": 48169, "time": "2003-11-26T14:14:52Z", "creator": "rniemi@online-usa.com", "creation_time": "2003-11-26T14:14:52Z", "attachment_id": null}]