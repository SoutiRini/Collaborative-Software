[{"attachment_id": null, "tags": [], "creator": "tsurkin@mail.jct.ac.il", "text": "After installing and configuring tomcat 5.5 to use ssl if i am trying to request\nthe ssl \nport with non ssl protocol i am getting a result that i can't understand - this\nlooks like \na strange stream of bits.\nHere are the steps to reproduce: \n--------------------------------------------------------------------------------------\n[1] Do a regular (vanilla) installation of tomcat (Linux and Windows i have\nalready tried) .\n[2] Setup ssl:\nUncomment the ssl setup in server.xml create a key with the following:\n%JAVA_HOME%\\bin\\keytool -genkey -alias tomcat -keyalg RSA\nor\n$JAVA_HOME/bin/keytool -genkey -alias tomcat -keyalg RSA\n(taken from tomcat's manual)\nadd the keystorePass and keystoreFile to server.xml\nstart the tomcat and test if the ssl works .\n[3] Try this in browser:\nhttp://localhost:8443 (note the http not the https)\nor\ntelnet localhost 8443\nNote that the telnet should be done from a terminal that can show binary \noutput.\n(rxvt,xterm will NOT do,for me gnome terminal and cmd on windows worked).\nin the telnet session you will get a connection type something ,hit ENTER\nand you will get\nstrange bits in the response.\nIf you are doing this in browser it will just try to download those bits\n(Mozilla) or show it on the screen (IE).\nI am pretty sure that this is NOT valid behaviour.\nI have tried all this on :\ntomcat 5.5.20\njava 1.5.0_09\nand\nsame tomcat\njava 1.5.0_06\nBoth Linux and Windows .\n-----------------------------------------------------------------------------------------------------\nThe same behaviuor was reported on WebSpher server ,so this is probably a \njvm problem.However it can be very simple fix in tomcat :\nif the scheme is not ssl (https) - return 400 error (or whatever it shold be).\nJust to make it clear :\nIt was suggested by one of the users that this is a tomcat trying to do ssl\nnegotiating. \nHowever it seems to me that if client is not sending the ssl negotiating first then \nserver should not try to do this.Here is what i have found in rfc (TLS 1.0):\n   \"These goals are achieved by the handshake protocol, which can be \n   summarized as follows: The client sends a client hello message to\n   which the server must respond with a server hello message, or else a\n   fatal error will occur and the connection will fail.\"\nHere is the link to the users list for the discussion: \nhttp://marc.theaimsgroup.com/?l=tomcat-user&m=116609043103294&w=2\nNote also that other servers i have worked with (non-java) do not do this: \ntry to telnet to ssl port of gmail and you will not get any response (connection\nyes,response - no).", "count": 0, "id": 97021, "time": "2006-12-18T07:37:04Z", "bug_id": 41202, "creation_time": "2006-12-18T07:37:04Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 41202, "is_private": false, "id": 97351, "attachment_id": null, "creator": "yoavs@computer.org", "creation_time": "2006-12-26T16:39:09Z", "time": "2006-12-26T16:39:09Z", "text": "As others noted in the mailing list thread you link to, this is not a Tomcat bug\nif it's a bug at all.  Personally, I think the NAK response (which is what these\n\"strange\" bytes are: they're not nonsense) is good, it's a legit no-handshake\nresponse."}]