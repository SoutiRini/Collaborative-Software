[{"count": 0, "tags": [], "creator": "vladimir@bossicard.com", "attachment_id": null, "is_private": false, "id": 10959, "time": "2002-02-20T19:38:37Z", "bug_id": 6591, "creation_time": "2002-02-20T19:38:37Z", "text": "In order to generate the right myapp-X.Y.Z.tar.gz file, the X.Y.Z version must\nbe defined into an Ant property.  Because this version number is generally\nwritten somewhere in a Java class this information is redundant.  It would be\nnice if Ant could access a public static field from any Java class and handle it\nas a property."}, {"count": 1, "tags": [], "bug_id": 6591, "is_private": false, "text": "How about we turn this one around on you and recommend you use filtered <copy> \nwith a tokenized substitution @VERSION@ that comes from outside your source \ncode as an Ant property (via an auto-incrementing properties file perhaps?!) \nand then dynamically adjusts your source code at build time to reflect the \nversion???", "id": 10962, "time": "2002-02-20T19:55:46Z", "creator": "jakarta@ehatchersolutions.com", "creation_time": "2002-02-20T19:55:46Z", "attachment_id": null}, {"count": 2, "text": "But, if you'd like to contribute a task that took a classname and a field name \nas parameters, as well as the resultant Ant property name, we'd welcome it!  :)", "bug_id": 6591, "is_private": false, "id": 10963, "time": "2002-02-20T19:57:26Z", "creator": "jakarta@ehatchersolutions.com", "creation_time": "2002-02-20T19:57:26Z", "tags": [], "attachment_id": null}, {"attachment_id": null, "tags": [], "creator": "vladimir@bossicard.com", "text": "I know the @version@ mechanism but IMO it's the wrong way around.  You shouldn't\nassume that everyone is using Ant to build your classes or that your specific\nbuild.xml file is used.\n\nA problem with @version@ is that your code is not in sync with CVS anymore.  If\nyou have a Version.java file, you must remember to _not_ commit it after the\n@version@ in it has been replaced.\n\nI'll try to contribute but my problem is that I have too many idea and too\nlittle time.  So if anyone wants to takes it...", "count": 3, "id": 10964, "time": "2002-02-20T20:11:46Z", "bug_id": 6591, "creation_time": "2002-02-20T20:11:46Z", "is_private": false}, {"count": 4, "tags": [], "creator": "steve_l@iseran.com", "attachment_id": null, "text": "you know if you store stuff in a properties file in the source tree, <property \nresource> can read it?", "id": 10967, "time": "2002-02-20T21:09:57Z", "bug_id": 6591, "creation_time": "2002-02-20T21:09:57Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 6591, "attachment_id": null, "id": 10969, "time": "2002-02-20T21:40:40Z", "creator": "vladimir@bossicard.com", "creation_time": "2002-02-20T21:40:40Z", "is_private": false, "text": "I'm aware that there is several work-arounds but all these work-around increase\nthe complexity of your Java code instead of increasing then complexity of the\nbuild tool (although you want to keep the tool simple...).\n\nI'm not searching for a work-around; I am proposing this enhancement to offer\nthe user the possibility to _not_ use a work-around. But maybe I'm the only one\nto think that way.\n"}, {"count": 6, "tags": [], "creator": "jakarta@ehatchersolutions.com", "attachment_id": null, "is_private": false, "id": 10981, "time": "2002-02-20T23:13:41Z", "bug_id": 6591, "creation_time": "2002-02-20T23:13:41Z", "text": "You're telling *us* that we can't assume everyone is using Ant?!  :))\n\nSure they are!\n\nBut I understand your point.\n\nBut to clarify - I do not modify files in my source tree - I write them to a \nvolatile build directory.  In this case, I would leave the Version.java file \nalone and copy it to a temporary directory and compile it from there - no need \nto commit the modified file back to your repository."}, {"count": 7, "tags": [], "bug_id": 6591, "text": "The filterreaders proposal in the sandbox provides a filterreader named \nClassConstants that can read straight-forward constants (access details do not\nmatter) from a java class.  This can be used as an element of <loadproperties>\n(which is also still in the proposal stage), to load these constants as\nproperties.  There are a variety of other filterreaders which can also be \nchained together if you want to load up just a particular constant, etc.  Please\nnote that the ClassConstants filter reader is dependent upon the Apache BCEL\ntoolkit (which is external to the core product).\nHowever, I am not suggesting you start using this right away.  Once it makes its\nway into Ant 1.5, you can start using it.  This note is just to let you know\nthat this enhancement request is being addressed.", "id": 11373, "time": "2002-03-02T02:32:13Z", "creator": "umagesh@apache.org", "creation_time": "2002-03-02T02:32:13Z", "is_private": false, "attachment_id": null}, {"attachment_id": null, "tags": [], "creator": "sbailliez@apache.org", "text": "It looks like something similar to FieldMethodizer in Velocity but IMHO this is \nnot the point.\n\nThe example is not correct to me as the versioning information is assumed to be \ncontained in a Java source file while it is obviouslly better anywhere else \nbut 'in the code'. the example about 'I must not forget to not commit' is also \nnot appropriate. The build information is generally obtained either via the SC \nsoftware or an external file that is tagging source code appropriately.\n\nExample is definitely not correct to me even though there 'could be' some need \nabout such a FieldMethodizer (but I really doubt it is that important)", "count": 8, "id": 11904, "time": "2002-03-17T23:18:55Z", "bug_id": 6591, "creation_time": "2002-03-17T23:18:55Z", "is_private": false}, {"count": 9, "tags": [], "creator": "umagesh@apache.org", "attachment_id": null, "text": "Available as a filter reader (ClassConstants).  Note external dependency on \nBCEL.\n", "id": 11911, "time": "2002-03-18T00:48:41Z", "bug_id": 6591, "creation_time": "2002-03-18T00:48:41Z", "is_private": false}]