[{"count": 0, "tags": [], "bug_id": 45228, "text": "After many years of incremental development, our nightly build started failing with the \u201cError starting modern compiler\u201d message.  After investigation and trial and error, the problem was resolved simply by adding the fork=\u201dyes\u201d option to our javac task.  \n\nEven the \u2013verbose switch was not helpful in the investigation of this issue.  Please investigate displaying some useful output instead of the generic \u201cError starting modern compiler\u201d message.", "id": 117790, "time": "2008-06-18T11:36:33Z", "creator": "larry.heidt@hksystems.com", "creation_time": "2008-06-18T11:36:33Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 45228, "is_private": false, "text": "FYI, removing the \"fork=yes\" work-around and adding the printStackTrace() call below to the end of the execute() method in the Javac13 class: \n\n    } else {\n/***/   ex.printStackTrace();   //*** NEW HACK\n        throw new BuildException(\"Error starting modern compiler\",\n                                 ex, location);\n\nresults in the following extra info in our case:\n\n    [javac] Compiling 408 source files to C:\\hk\\dvlp\\Wh\\Source\\components\\WebApps\\build\\classes\n    [javac] java.lang.reflect.InvocationTargetException\n    [javac] \tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    [javac] \tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n    [javac] \tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n    [javac] \tat java.lang.reflect.Method.invoke(Method.java:597)\n    [javac] \tat org.apache.tools.ant.taskdefs.compilers.Javac13.execute(Javac13.java:56)\n    [javac] \tat org.apache.tools.ant.taskdefs.Javac.compile(Javac.java:997)\n    [javac] \tat org.apache.tools.ant.taskdefs.Javac.execute(Javac.java:820)\n    [javac] \tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:288)\n    [javac] \tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n    [javac] \tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n    [javac] \tat java.lang.reflect.Method.invoke(Method.java:597)\n    [javac] \tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:105)\n    [javac] \tat org.apache.tools.ant.Task.perform(Task.java:348)\n    [javac] \tat org.apache.tools.ant.Target.execute(Target.java:357)\n    [javac] \tat org.apache.tools.ant.Target.performTasks(Target.java:385)\n    [javac] \tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1329)\n    [javac] \tat org.apache.tools.ant.Project.executeTarget(Project.java:1298)\n    [javac] \tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n    [javac] \tat org.apache.tools.ant.Project.executeTargets(Project.java:1181)\n    [javac] \tat org.apache.tools.ant.Main.runBuild(Main.java:698)\n    [javac] \tat org.apache.tools.ant.Main.startAnt(Main.java:199)\n    [javac] \tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:257)\n    [javac] \tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:104)\n    [javac] Caused by: java.lang.OutOfMemoryError: Java heap space\n    [javac] \tat java.util.jar.Manifest$FastInputStream.<init>(Manifest.java:315)\n    [javac] \tat java.util.jar.Manifest$FastInputStream.<init>(Manifest.java:310)\n    [javac] \tat java.util.jar.Manifest.read(Manifest.java:178)\n    [javac] \tat java.util.jar.Manifest.<init>(Manifest.java:52)\n    [javac] \tat java.util.jar.JarFile.getManifestFromReference(JarFile.java:165)\n    [javac] \tat java.util.jar.JarFile.getManifest(JarFile.java:146)\n    [javac] \tat sun.misc.URLClassPath$JarLoader$2.getManifest(URLClassPath.java:693)\n    [javac] \tat java.net.URLClassLoader.defineClass(URLClassLoader.java:221)\n    [javac] \tat java.net.URLClassLoader.access$000(URLClassLoader.java:56)\n    [javac] \tat java.net.URLClassLoader$1.run(URLClassLoader.java:195)\n    [javac] \tat java.security.AccessController.doPrivileged(Native Method)\n    [javac] \tat java.net.URLClassLoader.findClass(URLClassLoader.java:188)\n    [javac] \tat java.lang.ClassLoader.loadClass(ClassLoader.java:306)\n    [javac] \tat java.lang.ClassLoader.loadClass(ClassLoader.java:251)\n    [javac] \tat java.util.ResourceBundle$Control.newBundle(ResourceBundle.java:2383)\n    [javac] \tat java.util.ResourceBundle.loadBundle(ResourceBundle.java:1406)\n    [javac] \tat java.util.ResourceBundle.findBundle(ResourceBundle.java:1365)\n    [javac] \tat java.util.ResourceBundle.findBundle(ResourceBundle.java:1292)\n    [javac] \tat java.util.ResourceBundle.findBundle(ResourceBundle.java:1292)\n    [javac] \tat java.util.ResourceBundle.getBundleImpl(ResourceBundle.java:1234)\n    [javac] \tat java.util.ResourceBundle.getBundle(ResourceBundle.java:715)\n    [javac] \tat com.sun.tools.javac.util.Messages.add(Messages.java:66)\n    [javac] \tat com.sun.tools.javac.util.Messages.<init>(Messages.java:52)\n    [javac] \tat com.sun.tools.javac.main.Main.getLocalizedString(Main.java:447)\n    [javac] \tat com.sun.tools.javac.main.Main.resourceMessage(Main.java:421)\n    [javac] \tat com.sun.tools.javac.main.Main.compile(Main.java:364)\n    [javac] \tat com.sun.tools.javac.main.Main.compile(Main.java:279)\n    [javac] \tat com.sun.tools.javac.main.Main.compile(Main.java:270)\n    [javac] \tat com.sun.tools.javac.Main.compile(Main.java:69)\n    [javac] \tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    [javac] \tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n    [javac] \tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\nBUILD FAILED\nC:\\hk\\dvlp\\Wh\\Source\\components\\WebApps\\etc\\build.xml:105: Error starting Modern compiler\n", "id": 117792, "time": "2008-06-18T12:34:06Z", "creator": "larry.heidt@hksystems.com", "creation_time": "2008-06-18T12:34:06Z", "attachment_id": null}, {"count": 2, "tags": [], "text": "suggest adding something like the \"log\" method and call below to the Javac13 class to reveal problems like the OutOfMemoryError above:\n\n            log(ex);   //*** NEW\n            throw new BuildException(\"Error starting modern compiler\",\n                                     ex, location);\n        }\n    }\n}\n\n/**\n * Log the specified Throwable.  \n * @param t the Throwable to log.\n */\nprivate void log(Throwable t) {  \n    if (getProject() == null) {  \n        t.printStackTrace();\n    } else { \n        StringWriter sw = new StringWriter();\n        PrintWriter w = new PrintWriter(sw);\n        t.printStackTrace(w);\n        w.close();\n        getProject().log(sw.toString(), Project.MSG_ERR);\n    }\n}\n", "is_private": false, "id": 118142, "creation_time": "2008-06-30T15:03:00Z", "time": "2008-06-30T15:03:00Z", "creator": "larry.heidt@hksystems.com", "bug_id": 45228, "attachment_id": null}]