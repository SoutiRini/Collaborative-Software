[{"count": 0, "tags": [], "creator": "ronnie.brunner@netcetera.ch", "attachment_id": null, "is_private": false, "id": 106971, "time": "2007-08-21T09:33:06Z", "bug_id": 43179, "creation_time": "2007-08-21T09:33:06Z", "text": "When --with-apr and/or --with-apr-util is used in ./configure, the apr header\nfiles are not copied to the installation. Without these options, the header\nfiles are copied to <install>/include. This makes it hard to compile modules and\nother stuff, as for example ap_config.h depend on apr.h.\n\nConfiguring with a specific local apr imho measn that there is no apr installed\n-> if these headers are missing, compliation of a module or something depending\non httpd and its headers will fail.\n\n-> I think even when --with-apr and/or --with-apr-util is used in ./configure,\nthe apr header files should be copied at installation.\n\nThat goes at least for the *nix platforms I use (Solaris, Lunix etc...)"}, {"count": 1, "tags": [], "text": "> I think even when --with-apr and/or --with-apr-util is used in ./configure,\nthe apr header files should be copied at installation.\n\n-1\n\nIf you refer to an installed apr/apr-util, we are already picking up the\nheaders.  We include those paths in apxs's flags.  We *don't* want to \nduplicate APR from a perfectly acceptable install. If you had installed \napr/apr-util from source, you are fine.\n\nIf you installed apr/apr-util from a vendor who didn't install some apr-devel\npackage along with the libs, that would be the vendor's problem.  Take that\nup with them.\n", "is_private": false, "bug_id": 43179, "id": 106974, "time": "2007-08-21T10:19:52Z", "creator": "wrowe@apache.org", "creation_time": "2007-08-21T10:19:52Z", "attachment_id": null}, {"count": 2, "attachment_id": null, "bug_id": 43179, "text": "(In reply to comment #1)\n> If you refer to an installed apr/apr-util, we are already picking up the\n> headers.  We include those paths in apxs's flags.  We *don't* want to \n> duplicate APR from a perfectly acceptable install.\n\nMakes sense, but it's currently exactly the other way round, isn't it? YOu *do*\nduplicate the headers if configure is left standard (i.e. from a perfectly\nacceptable install), but if I refer to an installed apr/apr-util (using\n--with-apr etc), the headers are not picked up.\n\n> If you had installed apr/apr-util from source, you are fine.\n\nI *did* install apr/apr-util from source (the bundled version that comes with\n2.2.4), but to a specific location. -> headers are not picked up and therefore \nmissing later.\n\n> If you installed apr/apr-util from a vendor who didn't install some apr-devel\n> package along with the libs, that would be the vendor's problem.  Take that\n> up with them.\n\nNope, that's not what I'm talking about.", "id": 106976, "time": "2007-08-21T11:03:10Z", "creator": "ronnie.brunner@netcetera.ch", "creation_time": "2007-08-21T11:03:10Z", "tags": [], "is_private": false}, {"count": 3, "attachment_id": null, "bug_id": 43179, "text": "You have the meaning backwards.\n\n> I *did* install apr/apr-util from source (the bundled version that comes with\n> 2.2.4), but to a specific location. -> headers are not picked up and therefore \n> missing later.\n\nIf you use --with-apr, you are giving the path to an installed apr tree, not the\nsource or build apr tree.  The bundled apr tree isn't \"installed\", it's a source \ntree.  When we use the built-in apr in an httpd package, it's built, and then\ninstalled with the httpd package.\n", "id": 106977, "time": "2007-08-21T11:10:41Z", "creator": "wrowe@apache.org", "creation_time": "2007-08-21T11:10:41Z", "tags": [], "is_private": false}]