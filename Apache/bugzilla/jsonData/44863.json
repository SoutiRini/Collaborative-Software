[{"count": 0, "attachment_id": 21848, "creator": "Wally.Dennis@hewitt.com", "text": "Created attachment 21848\nlogging modifications to Reference and XMLSignature classes\n\nIt would be very helpful to have additional logging surrounding the creation and validation of signatures.  We need this information to assist in debugging issues when our clients are attempting to call our web services.  Specifically, I am suggesting the additional logging be added to the org.apache.xml.security.signature.Reference.java and org.apache.xml.security.signature.XMLSignature.java classes.  I am attaching a file detailing the changes to these files we need using a base of version 1.4.1. Can this logging be added to the next release of xml security?  \n\nThanks,\nWally", "id": 115810, "time": "2008-04-23T09:22:46Z", "bug_id": 44863, "creation_time": "2008-04-23T09:22:46Z", "tags": [], "is_private": false}, {"count": 1, "attachment_id": null, "creator": "sean.mullan@oracle.com", "text": "(In reply to comment #0)\n> Created an attachment (id=21848) [details]\n> logging modifications to Reference and XMLSignature classes\n> \n> It would be very helpful to have additional logging surrounding the creation\n> and validation of signatures.  We need this information to assist in debugging\n> issues when our clients are attempting to call our web services.  Specifically,\n> I am suggesting the additional logging be added to the\n> org.apache.xml.security.signature.Reference.java and\n> org.apache.xml.security.signature.XMLSignature.java classes.  I am attaching a\n> file detailing the changes to these files we need using a base of version\n> 1.4.1. Can this logging be added to the next release of xml security?  \n\nI should be able to add it to 1.4.2 since it is fairly low risk. However, the changes I will add will be a little different. The best place to put the logging statements is in the SignerOutputStream and DigesterOutputStream classes and log the bytes as they are being signed or digested. Calling Reference.getReferencedBytes or SignedInfo.getCanonicalizedStream has a couple of issues. These methods recalculate the transformed or canonicalized bytes; thus they may not be the exact same bytes (for example, the referenced content may change or there may be network issues, etc) and also incur an additional performance cost.\n\n\n", "id": 115817, "time": "2008-04-23T12:15:36Z", "bug_id": 44863, "creation_time": "2008-04-23T12:15:36Z", "tags": [], "is_private": false}, {"count": 2, "tags": [], "text": "(In reply to comment #1)\n> (In reply to comment #0)\n> > Created an attachment (id=21848) [details] [details]\n> > logging modifications to Reference and XMLSignature classes\n> > \n> > It would be very helpful to have additional logging surrounding the creation\n> > and validation of signatures.  We need this information to assist in debugging\n> > issues when our clients are attempting to call our web services.  Specifically,\n> > I am suggesting the additional logging be added to the\n> > org.apache.xml.security.signature.Reference.java and\n> > org.apache.xml.security.signature.XMLSignature.java classes.  I am attaching a\n> > file detailing the changes to these files we need using a base of version\n> > 1.4.1. Can this logging be added to the next release of xml security?  \n> I should be able to add it to 1.4.2 since it is fairly low risk. However, the\n> changes I will add will be a little different. The best place to put the\n> logging statements is in the SignerOutputStream and DigesterOutputStream\n> classes and log the bytes as they are being signed or digested. Calling\n> Reference.getReferencedBytes or SignedInfo.getCanonicalizedStream has a couple\n> of issues. These methods recalculate the transformed or canonicalized bytes;\n> thus they may not be the exact same bytes (for example, the referenced content\n> may change or there may be network issues, etc) and also incur an additional\n> performance cost.\n\nAdding the logging to the OutputStream classes does have one drawback, though.  Especially for the reference logging, I believe you lose the URI so in situations where multiple references are present you have to figure it out.  Granted, this is most likely not difficult, but it is helpful.  We tend to like to have as much info as possible as long as there is no significant performance impact.  That being said, I'll take whatever I can get.  Thanks.", "attachment_id": null, "id": 115818, "creator": "Wally.Dennis@hewitt.com", "time": "2008-04-23T12:54:12Z", "bug_id": 44863, "creation_time": "2008-04-23T12:54:12Z", "is_private": false}, {"count": 3, "attachment_id": null, "creator": "sean.mullan@oracle.com", "text": "(In reply to comment #2)\n\n> Adding the logging to the OutputStream classes does have one drawback, though. \n> Especially for the reference logging, I believe you lose the URI so in\n> situations where multiple references are present you have to figure it out. \n> Granted, this is most likely not difficult, but it is helpful.  We tend to like\n> to have as much info as possible as long as there is no significant performance\n> impact.  That being said, I'll take whatever I can get.  Thanks.\n\nIf you enable logging at the debug level, all the builtin resolvers log a message \"I state that I can resolve reference: \"uri\"\", and a few logging messages later the pre-digested bytes will be logged (after I put in the fix).\n\n", "id": 115827, "time": "2008-04-23T16:26:04Z", "bug_id": 44863, "creation_time": "2008-04-23T16:26:04Z", "tags": [], "is_private": false}, {"count": 4, "tags": [], "bug_id": 44863, "attachment_id": null, "id": 115839, "time": "2008-04-24T07:35:34Z", "creator": "sean.mullan@oracle.com", "creation_time": "2008-04-24T07:35:34Z", "is_private": false, "text": "Fixed, and will be in 1.4.2 release."}]