[{"count": 0, "tags": [], "bug_id": 46248, "is_private": false, "text": "Problem: \n\nIn my testing program, i have written:\nlogger.debug(\"---testing 123---\");\nBut somehow my log file didn't capture the above. It seem like the global settigs for LEVEL doesn't work.\n\nPlease advise. Thanks. \n\n***************************************************************************\n\nBelow is my build.properties's settings:\n\nlog4j.rootLogger=WARN, rolling, stdout\nlog4j.appender.MaxFileSize=20480KB\nlog4j.appender.MaxBackupIndex=5\nlog4j.logger.Level=DEBUG\nlog4j.appender.stdout.layout.ConversionPattern=%d | %5p | (%c:%L) - %m%n\nlog4j.appender.rolling.layout.ConversionPattern=%d | %5p | (%c:%L) - %m%n\n\n\n***************************************************************************", "id": 122677, "time": "2008-11-19T21:54:46Z", "creator": "ebteoh@gmail.com", "creation_time": "2008-11-19T21:54:46Z", "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 46248, "attachment_id": null, "text": "Usage questions should be asked in log4j-user.  Marking as invalid.\n\nThe line:\n\nlog4j.logger.Level=DEBUG\n\nsets the threshold of the logger named \"Level\" to debug.  Unless the logger that you used is named \"Level\" or a descendant (\"Level.foobar\", etc), then the WARN threshold set on the root logger will take precedent.  You do not show how the variable \"logger\" in initialized in your testing code, but I'm guessing it does not look like:\n\nLogger logger = Logger.getLogger(\"Level\");\n", "id": 122678, "time": "2008-11-19T22:31:28Z", "creator": "carnold@apache.org", "creation_time": "2008-11-19T22:31:28Z", "is_private": false}]