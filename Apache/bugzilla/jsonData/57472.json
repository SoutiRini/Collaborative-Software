[{"count": 0, "tags": [], "bug_id": 57472, "is_private": false, "id": 180432, "attachment_id": null, "creator": "ole.schulz-hildebrandt@ppimedia.de", "creation_time": "2015-01-21T08:56:05Z", "time": "2015-01-21T08:56:05Z", "text": "cf. http://mail-archives.apache.org/mod_mbox/tomcat-users/201501.mbox/%3CADA7A9443C47CC4E9C065E9C84C6891D6B3994A3B7%40ex01.ppinet.de%3E\n\nAfter moving one of our web applications from Tomcat 7 to Tomcat 8 (8.0.17, Java 1.8.0_25, CentOS 6) the time for deploying and initializing the webapp increased by a factor of 30 (6s vs. 180s). Analyzing the problem we found out that it had to do with a signed jar in the WEB-INF/lib of the webapp. It is a 8mb self-signed jar of the jython-library from which many classes are used in the initializing process of our webapp. When using a non-signed version of the jar the time for deploying and initializing is the same in Tomcat 8 as in Tomcat 7. \n\nProfiling and debugging the webapp it turned out that loading a class (and its depending classes) from the signed jar took extremely long with Tomcat 8 in comparison to Tomcat 7. \n\nThe following is just a hypothesis of a \"Tomcat source newbie\": Could it be that (at least some parts of) the verification process for the whole signed jar is done again and again each time a class from a signed jar is loaded? Looking at org.apache.catalina.webresources.JarResource:47  (http://svn.apache.org/repos/asf/tomcat/tc8.0.x/trunk/java/org/apache/catalina/webresources/JarResource.java) a new instance of java.util.jar.JarFile is created each time a single class-file is read from the jar. Thus the following call of jarFile.getInputStream(jarEntry) in JarResource:50 causes a call of JarFile.initializeVerifier() (cf. JarFile:442ff in http://grepcode.com/file/repository.grepcode.com/java/root/jdk/openjdk/8-b132/java/util/jar/JarFile.java). JarFile.initializeVerifier() seems to do some precalculations (hashing?) for all files listed in the manifest of the signed jar (cf. JarFile:365ff). Thus each time a single class is loaded from a signed jar precalculations for all class files in the signed jar seem to be done. Could this be the reason for our performance problems (especially in connection with a 8mb signed jar ;-))?\n\nIf neccessary I can provide the mentioned 8mb self-signed jar of the jython-library and/or create a simple sample web application that demonstrates the issue."}, {"count": 1, "tags": [], "bug_id": 57472, "text": "8MB+ will be too big for a Bugzilla attachment but if you can put the file somewhere I can download it, a web application that reproduces this issue would be much appreciated.", "id": 180534, "time": "2015-01-23T15:19:29Z", "creator": "markt@apache.org", "creation_time": "2015-01-23T15:19:29Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 57472, "is_private": false, "id": 180535, "attachment_id": null, "creator": "ole.schulz-hildebrandt@ppimedia.de", "creation_time": "2015-01-23T16:51:16Z", "time": "2015-01-23T16:51:16Z", "text": "I put an example application signedjar.war here: https://drive.google.com/file/d/0By0Iea2JkjtKdlI2SGFSaVg2ZWs/view?pli=1"}, {"count": 3, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "text": "I can confirm that it is JAR verification that is causing the slow down. The way to avoid that is to keep the JAR open for the life of the web application.\n\nHowever, that causes a catch-22 problem. Keeping the files open will prevent the web application from being deleted. If the web application can't be deleted folks that undeploy that way won;t be able to so the web application can't be stopped (which would be the trigger to close the file).\n\nI need to think about the best way to fix this.", "id": 180581, "time": "2015-01-26T19:13:14Z", "bug_id": 57472, "creation_time": "2015-01-26T19:13:14Z", "is_private": false}, {"count": 4, "tags": [], "creator": "chris@christopherschultz.net", "text": "Maybe a ThreadLocal list of JARs to close?\n\nPresumably, the ClassLoader is going to load a whole bunch of classes from these JAR files at once; probably the first time some feature/group of classes is used. When a request is completed, maybe we could tell the WebappClassLoader that the request is done and it can close any JAR files it opened during that request, rather than having it re-open the JAR each time it loads a class.", "id": 180583, "time": "2015-01-26T22:16:49Z", "bug_id": 57472, "creation_time": "2015-01-26T22:16:49Z", "is_private": false, "attachment_id": null}, {"count": 5, "attachment_id": null, "bug_id": 57472, "text": "That is sort of what Tomcat 7 does. I think I can port the openJars / closeJars from Tomcat 7's WebappClassLoader to Tomcat 8's resources implementation.", "id": 180584, "time": "2015-01-26T22:26:33Z", "creator": "markt@apache.org", "creation_time": "2015-01-26T22:26:33Z", "tags": [], "is_private": false}, {"count": 6, "tags": [], "bug_id": 57472, "attachment_id": null, "id": 180600, "time": "2015-01-27T19:43:07Z", "creator": "markt@apache.org", "creation_time": "2015-01-27T19:43:07Z", "is_private": false, "text": "This has been fixed in trunk and 8.0.x and will be included in 8.0.19 onwards."}, {"count": 7, "tags": [], "creator": "costescuandrei@skymail.ro", "text": "Thank you! :)", "id": 180614, "time": "2015-01-28T09:05:15Z", "bug_id": 57472, "creation_time": "2015-01-28T09:05:15Z", "is_private": false, "attachment_id": null}, {"count": 8, "attachment_id": null, "bug_id": 57472, "text": "thanks for the fast fix of this issue :-)\nStartup with tomcat 8.0.x trunk is as fast as tomcat 7 now.\nDo I have to close this bug or is that done by you?", "id": 180615, "time": "2015-01-28T10:02:01Z", "creator": "ole.schulz-hildebrandt@ppimedia.de", "creation_time": "2015-01-28T10:02:01Z", "tags": [], "is_private": false}]