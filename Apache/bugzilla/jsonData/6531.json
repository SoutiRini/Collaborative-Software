[{"attachment_id": null, "tags": [], "bug_id": 6531, "is_private": false, "count": 0, "id": 10866, "time": "2002-02-18T23:24:25Z", "creator": "mraible@apache.org", "creation_time": "2002-02-18T23:24:25Z", "text": "I'm trying to use the following concept to encrypt my password before \nauthenticating (b/c password in db in encrypted).\n\nhttp://www.mail-archive.com/struts-user@jakarta.apache.org/msg22257.html\n\n<snip>\nString req = \"j_security_check?j_username=\" +\n             form.getUsername() + \"&j_password=\" +\n             StringUtil.encodeString(form.getPassword());\n\nRequestDispatcher rd = request.getRequestDispatcher(req);\nrd.forward(request, response);\n</snip>\n\nIn Tomcat 4.0.1, 4.0.2 and the nightly build, this results in the following \nerror:\n\nApache Tomcat/4.0.1 - HTTP Status 404 - /j_security_check\n\n--------------------------------------------------------------------------------\n\ntype Status report\n\nmessage /j_security_check\n\ndescription The requested resource (/j_security_check) is not available.\n\nThis code works GREAT in Tomcat 3.2.4."}, {"count": 1, "tags": [], "creator": "craig.mcclanahan@sun.com", "text": "Applications that try to reference the \"j_security_check\" URL by any means are \nguaranteed to be non-portable, because the spec only defines this URL as being \nsignificant when the *container* sends back the form login page.  In fact, that \nis the way that Tomcat 4 implements it, so trying to use a request dispatcher to \nforward control to this page is not going to work, because the URL doesn't exist \nat that point in time (hence the 404 error).\n\nAn alternative approach would be to subclass one of the existing Realm \nimplementations and make it do the encoding for you before calling the \"real\" \nauthenticate() method in its superclass.\n", "id": 10869, "time": "2002-02-19T02:24:32Z", "bug_id": 6531, "creation_time": "2002-02-19T02:24:32Z", "is_private": false, "attachment_id": null}]