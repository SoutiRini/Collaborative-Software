[{"count": 0, "tags": [], "creator": "morten.hattesen@gmail.com", "attachment_id": null, "id": 115365, "time": "2008-04-07T04:24:27Z", "bug_id": 44765, "creation_time": "2008-04-07T04:24:27Z", "is_private": false, "text": "Prior to Log4J 1.2.15, the SyslogAppender removed the first character from each stacktrace line, causing unwanted benavior (possibly exceptions).\n\nThis was partially fixed (ref issue 40502)  https://issues.apache.org/bugzilla/show_bug.cgi?id=40502\n\nThe above fix means that the first character of each stack trace line is removed only, if it is a tab character ('\\t').\n\nI will argue, that the initial tab character should NOT be removed at all, since it provides useful indentation, making it easier to view stacktraces in a syslog. If, for some reason, it is not desirable to have tab characters in the syslog, the tab character should be replaced with a suitable number of spaces.\n\nEXAMPLE:\n========\n\nThis stack-trace...\n---------------------------------------------------------------------------\n\n2008-04-07 12:23:03,479 ERROR com.acme.SyslogTest - Error with stacktrace\njava.lang.RuntimeException: Second\n\tat dk.cph.SyslogTest.testStackTrace(SyslogTest.java:61)\n(...)\n\tat com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:40)\nCaused by: java.lang.RuntimeException: First\n\t... 17 more\n---------------------------------------------------------------------------\n\n...would, prior to 1.2.14, be displayed in syslog as...\n\n---------------------------------------------------------------------------\nApr  7 12:14:04 localhost 2008-04-07 12:14:03,975 ERROR com.acme.SyslogTest - Error with stacktrace\nApr  7 12:14:04 localhost java.lang.RuntimeException: Second\nApr  7 12:14:04 localhost at dk.cph.SyslogTest.testStackTrace(SyslogTest.java:56)\n(...)\nApr  7 12:14:04 localhost at com.intellij.rt.execution.application.AppMain.main(AppMain.java:90)\nApr  7 12:14:04 localhost aused by: java.lang.RuntimeException: First\nApr  7 12:14:04 localhost ... 22 more\nApr  7 12:40:06 localhost 2008-04-07 12:23:03,479 ERROR com.acme.SyslogTest - Error with stacktrace\n---------------------------------------------------------------------------\n\n\n(Notice the \"aused by:\" line, and the missing indentation).\n\nWith the proposed solution (below), the stack-trace would be displayed as:\n\n---------------------------------------------------------------------------\nApr  7 12:14:04 localhost 2008-04-07 12:14:03,975 ERROR com.acme.SyslogTest - Error with stacktrace\nApr  7 12:14:04 localhost java.lang.RuntimeException: Second\nApr  7 12:14:04 localhost     at dk.cph.SyslogTest.testStackTrace(SyslogTest.java:56)\n(...)\nApr  7 12:14:04 localhost     at com.intellij.rt.execution.application.AppMain.main(AppMain.java:90)\nApr  7 12:14:04 localhost Caused by: java.lang.RuntimeException: First\nApr  7 12:14:04 localhost     ... 22 more\nApr  7 12:40:06 localhost 2008-04-07 12:23:03,479 ERROR com.acme.SyslogTest - Error with stacktrace\n---------------------------------------------------------------------------\n\n(note: with a long stacktrace, the indentation is clearly more useful)\n\n\nPROPOSAL\n========\n\nWhile the above fix reinstates the \"Caused by\", I feel that reinserting the initial tab (or spaces) would be preferable, since it would make it easier to identify the \"Caused by\" statement in the stack-trace.\n\nMy proposal is to replace initial tab with 4 spaces, which could be achieved with the following change to org.apache.log4j.net.SyslogAppender.java:\n\nchange:\n               if (s[i].charAt(0) == '\\t') {\n                 sqw.write(TAB+s[i].substring(1));\n               } else {\n\nto:\n               if (s[i].charAt(0) == '\\t') {\n                 sqw.write(TAB+\"    \"+s[i].substring(1));\n               } else {\n\n(String garbage collection optimization could be achieved by replacing the string concatenation with multiple calls to write, and/or introducing a TAB_INDENT string constant)."}, {"attachment_id": null, "tags": [], "bug_id": 44765, "text": "Is there any reason why this behaviour should NOT be changed to include all characters logged?  Does the first character have special meaning in syslog messages?", "count": 1, "id": 118247, "time": "2008-07-03T12:59:07Z", "creator": "thorbjoern@gmail.com", "creation_time": "2008-07-03T12:59:07Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 44765, "attachment_id": null, "id": 118253, "time": "2008-07-03T13:38:51Z", "creator": "morten.hattesen@gmail.com", "creation_time": "2008-07-03T13:38:51Z", "is_private": false, "text": "(In reply to comment #1)\n> Is there any reason why this behaviour should NOT be changed to include all\n> characters logged?  Does the first character have special meaning in syslog\n> messages?\n\nNo, the first character has no special meaning.\n\nBut since stack-traces are indented using a leading TAB character, it is generally a good idea to expand this to a number (4) of spaces to ensure consistent rendering of the stack-trace. But the TAB character should definitely NOT be truncated as part of the Syslog appender, as is the case today.\n\n"}, {"count": 3, "text": "Tab characters are prohibited in the MESSAGE section of the packet (see http://www.ietf.org/rfc/rfc3164.txt?number=3164) along with all other non-printable characters.\n\nThe code fragment that is suggested to be changed does not appear in the current SVN HEAD (and as far back as the fix for bug 40502) as I can tell.  The current code is:\n\n      String[] s = event.getThrowableStrRep();\n      if (s != null) {\n        for(int i = 0; i < s.length; i++) {\n            if (s[i].startsWith(\"\\t\")) {\n               sqw.write(hdr+TAB+s[i].substring(1));\n            } else {\n               sqw.write(hdr+s[i]);\n            }\n        }\n      }\n\nThis should replace any leading tab in the stack trace with the value of SyslogAppender.TAB (which is initialized at four spaces).\n\nThe current code does not address cases where non-printable characters appear in other positions, but it does appear to do the best possible when the stack trace starts with a single tab character (which is a common in mainstream JVM's).  As far as I can tell, the behavior described in the bug report should not occur with the current SVN head, and I'm going to mark the bug as INVALID.  If I've misunderstood, please reopen after testing with the SVN HEAD and providing a patch against the current SVN HEAD.\n\n", "creator": "carnold@apache.org", "attachment_id": null, "id": 119763, "time": "2008-08-12T14:42:43Z", "bug_id": 44765, "creation_time": "2008-08-12T14:42:43Z", "tags": [], "is_private": false}]