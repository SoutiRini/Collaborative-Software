[{"count": 0, "tags": [], "creator": "alex@dailycandy.com", "text": "Its possible to have JSPs that don't end in .jsp or .jspx, and Jasper will\ncorrectly compile these. But you can't use JspC to precompile them, because it\nonly thinks .jsp and .jspx are valid JSP files.\n\nThe easy way to fix this is to expose the private Vector extensions field, so\nyou can specify in ant what file extensions your JSPs use.", "id": 66970, "time": "2004-11-15T22:38:07Z", "bug_id": 32257, "creation_time": "2004-11-15T22:38:07Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "creator": "alex@dailycandy.com", "text": "Created attachment 13473\nwrapper to JspC", "id": 66972, "time": "2004-11-15T22:41:01Z", "bug_id": 32257, "creation_time": "2004-11-15T22:41:01Z", "is_private": false, "attachment_id": 13473}, {"count": 2, "tags": [], "bug_id": 32257, "is_private": false, "text": "the attachment is a very simple class that wraps JspC, and allows you to specify\nwhat extension your JSP files use. you can use this from ant instead of JspC\nitself. this gives you the advantage of not having to patch JspC directly, but\nstill being able to modify it.\n\nof course, the better solution is to have private Vector extensions in JspC\nitself be configurable.", "id": 66974, "time": "2004-11-15T22:46:45Z", "creator": "alex@dailycandy.com", "creation_time": "2004-11-15T22:46:45Z", "attachment_id": null}, {"count": 3, "tags": [], "creator": "yoavs@computer.org", "text": "The wrapper I'm not going to add.  But adding extensions as a configuration \nparameter sounds like a good idea.", "id": 67026, "time": "2004-11-17T15:38:00Z", "bug_id": 32257, "creation_time": "2004-11-17T15:38:00Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "creator": "yoavs@computer.org", "text": "Done for Tomcat 5.5.5.", "id": 67134, "time": "2004-11-18T15:24:08Z", "bug_id": 32257, "creation_time": "2004-11-18T15:24:08Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "creator": "yoavs@computer.org", "text": "Done also for Tomcat 5.0.30.", "id": 67136, "time": "2004-11-18T15:38:24Z", "bug_id": 32257, "creation_time": "2004-11-18T15:38:24Z", "is_private": false, "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 32257, "is_private": false, "count": 6, "id": 67220, "time": "2004-11-19T15:23:57Z", "creator": "yoavs@computer.org", "creation_time": "2004-11-19T15:23:57Z", "text": "Reopening and will close as wontfix, undoing my earlier work.  After discussion \nwith other committers, we decided we don't want to encourage non-Spec-compliant \nbehavior."}, {"count": 7, "tags": [], "bug_id": 32257, "text": "Stick to the JSP Spec: .jsp, .jspx, that's it.", "id": 67221, "time": "2004-11-19T15:24:17Z", "creator": "yoavs@computer.org", "creation_time": "2004-11-19T15:24:17Z", "is_private": false, "attachment_id": null}, {"count": 8, "tags": [], "bug_id": 32257, "is_private": false, "id": 67235, "attachment_id": null, "creator": "alex@dailycandy.com", "creation_time": "2004-11-19T16:54:52Z", "time": "2004-11-19T16:54:52Z", "text": "i'm not sure which part of the spec mandates that only '.jsp' and '.jspx' be\nused for JSPs. i've read through the jsp 2.0 and servlet 2.4 specs, and i can't\nfind anything of the sort.\n\nit only says that those are the default implicit extensions. it also provides\npretty obvious means for using other extensions as JSPs.\n\nyou can remap the JSP servlet in your web.xml file to another extension (though\ni'm not sure if thats part of the spec)\n\nyou can also use the <jsp-property-group> element in web.xml to specify other\nfiles as JSPs. (thats definitely in the spec)\n\nif you'd like, i can post the pages in the spec where i read this stuff so you\ncan see for yourself."}, {"count": 9, "tags": [], "creator": "yoavs@computer.org", "text": "No need to post the pages, I'm familiar with the Spec.  And the JSPServlet used \nin Tomcat is not part of the Spec.  We want to encourage users to stick to the \ndefault extensions, partially because not all containers allow custom JSP \nextensions and we want to promote portability.\n\nYou already have a wrapper, use it if you want, but this won't be added to \nTomcat, and there's no point in reopening this item.", "id": 67236, "time": "2004-11-19T16:57:08Z", "bug_id": 32257, "creation_time": "2004-11-19T16:57:08Z", "is_private": false, "attachment_id": null}, {"count": 10, "tags": [], "creator": "emmanuel@pirsch.org", "text": "This decision is very close minded. The specs does not requires any specific\nextension for JSP pages. Beside, it is a very common practice to use .jspf for\npage framgment.\n\nThe Pet Store application (blueprint anyone... recommended practice...) uses the\n.jspf extension for page fragment\n(https://bpcatalog.dev.java.net/nonav/webtier/templating/index.html).\n\nAFAIK, all web container support any kind of extensions for JSPs.\n\nI'm a bit flabergasted as to why a simple modification like that is refused.\n", "id": 3030, "time": "2005-03-23T15:08:30Z", "bug_id": 32257, "creation_time": "2005-03-23T15:08:30Z", "is_private": false, "attachment_id": null}, {"count": 11, "tags": [], "creator": "emmanuel@pirsch.org", "text": "Maybe you should also reread the JSP 2.0 specification... They do recommend\n.jspf as the extension for JSP segment (or fragment as it was called before).\n\nHere is the section of interests (look at the second bullet):\n----------------------------------\nJSP.1.1.8 Naming Conventions for JSP Files\nA JSP page is packaged as one or more JSP files, often in a web application, and\ndelivered to a tool like a JSP container, a J2EE container, or an IDE. A\ncomplete JSP\npage may be contained in a single file. In other cases, the top file will\ninclude other\nfiles that contain complete JSP pages, or included segments of pages.\nIt is common for tools to need to differentiate JSP files from other files. In\nsome cases, the tools also need to differentiate between top JSP files and included\nsegments. For example, a segment may not be a legal JSP page and may not\ncompile properly. Determining the type of file is also very useful from a\ndocumentation and maintenance point of view, as people familiar with the .c and\n.h convention in the C language know.\nBy default the extension .jsp means a top-level JSP file. We recommend, but\ndo not mandate, to differentiate between top-level JSP files (invoked directly by\nthe client or dynamically included by another page or servlet) and statically\nincluded segments so that:\n\u2022 The .jsp extension is used only for files corresponding to top level JSP files,\nforming a JSP page when processed.\n\u2022 Statically included segments use any other extension. As included segments\nwere called \u2018JSP fragments\u2019 in past versions of this specification, the extension\n.jspf was offered as a suggestion. This extension is still suggested for consistency\nreasons, despite that they are now called \u2018jsp segments\u2019.\n\nJSP documents, that is, JSP pages that are delivered as XML documents, use\nthe extension .jspx by default.\nThe jsp-property-group element of web.xml can be used to indicate that some\ngroup of files, perhaps not using either of the extensions above, are JSP pages, and\ncan also be used to indicate which ones are delivered as XML documents.\n", "id": 2244, "attachment_id": null, "bug_id": 32257, "creation_time": "2005-03-23T15:26:40Z", "time": "2005-03-23T15:26:40Z", "is_private": false}, {"count": 12, "tags": [], "creator": "funkman@joedog.org", "text": ".jspf is meant for fragments such as includes that are not meant to be compiled.", "id": 72818, "time": "2005-03-25T01:21:15Z", "bug_id": 32257, "creation_time": "2005-03-25T01:21:15Z", "is_private": false, "attachment_id": null}]