[{"count": 0, "attachment_id": null, "creator": "jakarta@jjshade.net", "is_private": false, "id": 30336, "time": "2003-01-30T10:45:45Z", "bug_id": 16590, "creation_time": "2003-01-30T10:45:45Z", "tags": [], "text": "N.B. This is in version 1.0.2 which isn't available in the version list on Bugzilla.\n\nIf I have a non-null bean \"myBean\" which does not contain a property \"nonProperty\", \n\n<c:out value=\"${myBean.nonProperty}\"/> should throw an exception according to\nthe JSTL spec (see http://jcp.org/aboutJava/communityprocess/final/jsr052/ \npages 2-11 and A-190).  \n\nThis is actually treated as a null value and the default is returned.  This\nhides errors, since as the spec says \"it's likely a typo or another mistake\"."}, {"count": 1, "tags": [], "bug_id": 16590, "attachment_id": null, "is_private": false, "id": 30340, "time": "2003-01-30T13:46:31Z", "creator": "bayern@essentially.net", "creation_time": "2003-01-30T13:46:31Z", "text": "I can't replicate the problem, and indeed, this has always worked correctly in \nthe Standard Taglib.\n\nIf you still believe it's a problem, check the following things, as others have \nrun into them and misdiagnosed this as a bug:\n\n1) Ensure you are using the Stadnard Taglib and not an alternative, container-\nbased implementation such as the one embedded in Resin.\n\n2) Ensure that 'myBean' is truly non-null; for instance, ensure that it's not \nactually a scripting variable instead of a scoped variable.\n\n3) Ensure that you're actually defining the \"c\" taglib with an appropriate <%@ \ntaglib %> directive; if you don't, then <c:out ...> will be output to your \npage, but a browser won't display it; this causes many people to think that the \ntag has instead run but output nothing.\n\nIf none of these situations applies, then please post a full page that \ndemonstrates the problem."}, {"count": 2, "tags": [], "bug_id": 16590, "attachment_id": null, "id": 30408, "time": "2003-01-31T13:15:43Z", "creator": "jakarta@jjshade.net", "creation_time": "2003-01-31T13:15:43Z", "is_private": false, "text": "Thanks for the quick response, and apologies... it appears your first answer is\ncorrect, I was using the resin implementation.  I hadn't realised this as it's\nbasically an undocumented (and it seems, unfinished) feature of resin which is\non by default and hijacks the implementation pointed to by the TLD."}]