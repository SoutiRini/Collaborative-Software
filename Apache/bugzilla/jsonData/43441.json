[{"count": 0, "tags": [], "text": "This bug was initially reported against Subversion:\n\nhttp://subversion.tigris.org/issues/show_bug.cgi?id=2456\n\n\nHere's the report:\n\nJack Repenning reports that when using Mac OS X to copy one file to another on a\nmounted Subversion-backed DAV share (autoversioning), if the copy is disallowed\nby a pre-commit hook, his client goes into an infinite loop.  He says of a\nnetwork trace:\n\n    Using \"> \" to mean \"message sent from client to server\" and \"< \" to\n    mean the opposite, I see:\n   \n   > PROPFIND /svn/alm/trunk/www/index%20copy.html\n       makes sense: that's the name the copy will have, unless there's\n    already such a fine, then there's a cascade\n       of fall-back names, so I'm sure OS X checks for that name firsgt\n    < HTTP/1.1 404 Not Found\n       makes sense: there ain't no such file yet\n   > PUT /svn/alm/trunk/www/index%20copy.html\n       right, so create it\n    < HTTP/1.1 201 Created\n       huh?  given the PT integration settings, this area is effectively\n    read-only, this shouldn't actually be created!\n   > PROPFIND /svn/alm/trunk/www/index%20copy.html\n       check if it worked, I guess\n    < HTTP/1.1 404 Not Found\n       nope, it didn't\n   \n    At this point, silly OS X seems to go into an infinite loop,\n    PROPFINDing away hoping the file will show up some day, and of course\n    it never does.\n\nI took a quick glance at mod_dav, and saw that for an autoversioned PUT, any\nerrors returned from dav_auto_checkin() (from which a Subversion pre-commit hook\nerror would be returned) are treated only as warnings.  This from dav_method_put():\n\n    /* restore modifiability of resources back to what they were */\n    err2 = dav_auto_checkin(r, resource, err != NULL /* undo if error */,\n                            0 /*unlock*/, &av_info);\n\n    /* check for errors now */\n    if (err != NULL) {\n        return dav_handle_err(r, err, NULL);\n    }\n\n    if (err2 != NULL) {\n        /* just log a warning */\n        err2 = dav_push_error(r->pool, err2->status, 0,\n                              \"The PUT was successful, but there \"\n                              \"was a problem automatically checking in \"\n                              \"the resource or its parent collection.\",\n                              err2);\n        dav_log_err(r, err2, APLOG_WARNING);\n    }\n\nThis is a bug in Apache's mod_dav, *not* Subversion.  But noting it here because\nit is by using Subversion that folks will likely run into it, and members of our\ncommunity also overlap the set of mod_dav maintainers.", "is_private": false, "id": 108461, "creator": "dlr@apache.org", "time": "2007-09-20T14:44:42Z", "bug_id": 43441, "creation_time": "2007-09-20T14:44:42Z", "attachment_id": null}, {"count": 1, "tags": [], "creator": "csongor@euedge.com", "text": "Created attachment 23649\npatch of mod_dav.c\n\nMy proposal here is that we simply replace the code generates warning with a piece of code which generates error.", "id": 126969, "time": "2009-05-13T02:17:00Z", "bug_id": 43441, "creation_time": "2009-05-13T02:17:00Z", "is_private": false, "attachment_id": 23649}, {"count": 2, "tags": [], "creator": "csongor@euedge.com", "text": "I have discovered another strange behavior during testing.\n\nWhen an error occurs during SVN pre-commit and thus autocommit fails the mod_dav simply drops the connection without sending back an error response to the client.\n\nThis is true in the case if you don't apply my patch at all. My patch resolves only the situation when a new file is being added. But even when you modify or delete a file the unpatched version will close the connection without sending response to the client.", "id": 126970, "time": "2009-05-13T02:21:26Z", "bug_id": 43441, "creation_time": "2009-05-13T02:21:26Z", "is_private": false, "attachment_id": null}]