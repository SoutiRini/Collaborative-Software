[{"count": 0, "tags": [], "bug_id": 21260, "text": "Hi,\n\nThe CacheMaxExpire directive is not enforced as stated in the documentation \n(quote: \"This restriction is enforced even if an expiry date was supplied with \nthe document\").\n\nAfter looking at the source of mod_cache.c you can see that the maxexpire value \nis only used IF the expiration date provided is bad AND the last modified date \nprovided is good.\n\nBasically if an expiration date is provided in the document fetched, the \nCacheMaxExpire value is ignored.\n\nI assume it is a bug in the source rather than a bug in the documentation since \nI think that CacheMaxExpire directive must really be enforced...", "id": 39813, "time": "2003-07-02T03:43:48Z", "creator": "jhroyer@joher.com", "creation_time": "2003-07-02T03:43:48Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 21260, "text": "I quickly fixed it using this code in mod_proxy.c:\n\nReplacing:\n    if (expc == BAD_DATE) {\n...\n    }\nBy:\n   {\n        double x = conf->cache.maxexpire;\n        int y = 0;\n        if (expc == BAD_DATE) {\n             if (lmod != BAD_DATE)\n                 x = (double)(date - lmod) * conf->cache.lmfactor;\n             else\n                 x = conf->cache.defaultexpire;\n             y = 1;\n        }\n        else\n             x = expc - now;\n        if(x > conf->cache.maxexpire) {\n             x = conf->cache.maxexpire;\n             y = 1;\n        }\n        expc = now + (int)x;\n        if(y)\n             ap_log_error(APLOG_MARK, APLOG_DEBUG | APLOG_NOERRNO, r-\n>server, \"Expiry date calculated %ld\", (long)expc);  \n   }\n\n", "id": 39898, "time": "2003-07-02T23:11:43Z", "creator": "jhroyer@joher.com", "creation_time": "2003-07-02T23:11:43Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 21260, "attachment_id": null, "id": 47838, "time": "2003-11-21T18:17:47Z", "creator": "trawick@apache.org", "creation_time": "2003-11-21T18:17:47Z", "is_private": false, "text": "Can you submit a real patch?  Please see \nhttp://httpd.apache.org/dev/patches.html\n"}, {"count": 3, "tags": [], "bug_id": 21260, "attachment_id": null, "id": 76712, "time": "2005-07-02T01:17:04Z", "creator": "lswick@spikesource.com", "creation_time": "2005-07-02T01:17:04Z", "is_private": false, "text": "Has this bug been fixed in 2.0.x?   \n \nThanks. "}, {"attachment_id": null, "tags": [], "creator": "Dick.Snippe@tech.omroep.nl", "is_private": false, "count": 4, "id": 88503, "time": "2006-04-26T14:07:31Z", "bug_id": 21260, "creation_time": "2006-04-26T14:07:31Z", "text": "(In reply to comment #3)\n> Has this bug been fixed in 2.0.x?   \n>  \n> Thanks. \n\nI'm using 2.2.0 and it appears that the bug hasn't been fixed.\nCurrently I have a setup with CacheMaxExpire 600, but I get answers from my\ncache with \"Age: 2294\", so that can't be right.\n\nIt would appear that cache_util doesn't honour CacheMaxExpire at all. When\nlooking at modules/cache/cache_util.c, around line 298, I see:\n    /* handle expiration */\n    if (((smaxage != -1) && (age < (smaxage - minfresh))) ||\n        ((maxage != -1) && (age < (maxage + maxstale - minfresh))) ||\n        ((smaxage == -1) && (maxage == -1) &&\n         (info->expire != APR_DATE_BAD) &&\n         (age < (apr_time_sec(info->expire - info->date) + maxstale - minfresh)))) {\n        const char *warn_head;\n\n        warn_head = apr_table_get(h->resp_hdrs, \"Warning\");\n\n        /* it's fresh darlings... */\n\ni.e. nothing relating to CacheMaxExpire\n\nThe only references to CacheMaxExpire are in mod_cache.c, line 692 where Expires\nheaders are created based on last modified headers.\n"}, {"attachment_id": 19344, "tags": [], "creator": "mike.williams@comodo.com", "is_private": false, "count": 5, "id": 97559, "time": "2007-01-03T07:01:58Z", "bug_id": 21260, "creation_time": "2007-01-03T07:01:58Z", "text": "Created attachment 19344\npatch for 2.2.x\n\nIf conf->maxex is set, and age is greater in seconds, expire the content.\n\"if (conf->maxex != -1)\" doesn't seem to be needed, as without CacheMaxExpire\ndefined conf->maxex is 86400 (1 day)."}, {"count": 6, "tags": [], "bug_id": 21260, "text": "looks like mod_cache", "id": 107592, "time": "2007-09-01T12:15:33Z", "creator": "nick@webthing.com", "creation_time": "2007-09-01T12:15:33Z", "is_private": false, "attachment_id": null}, {"count": 7, "tags": [], "bug_id": 21260, "text": "CacheMaxExpire as used in this patch seems to limit the max cache time to a default of 86400 seconds (1 day), which is broken - caches should definitely be allowed to cache for more than a day.\n\nLooking at CacheMinExpire, the directive is only valid when an Expires header is not present (as per the docs), and currently, CacheMaxExpire is also only valid when the expires header is missing.\n\nEither the docs need to be changed, to reflect this, or the default value of CacheMaxExpire needs to default to no limit.", "id": 130845, "time": "2009-10-03T09:01:38Z", "creator": "minfrin@sharp.fm", "creation_time": "2009-10-03T09:01:38Z", "is_private": false, "attachment_id": null}, {"attachment_id": null, "tags": [], "creator": "nikke@acc.umu.se", "text": "(In reply to comment #7)\n> CacheMaxExpire as used in this patch seems to limit the max cache time to a\n> default of 86400 seconds (1 day), which is broken - caches should definitely be\n> allowed to cache for more than a day.\n\nBoth behaviors are probably wanted/needed by different users.\n\nFor us that have content that _might_ change we can live with a freshness-check once a day in order to have the cache deliver stale content for a day maximum (or whatever you set CacheMaxExpire to).\n\nOthers might want to have the current code behavior, I personally prefer the documented one.\n\nIf I remember correctly passing the cache expire triggers a freshness check, and if it's not-modified we're content with the cached body and write a new header.\nDoing this once a day by default is sane IMHO, no matter what Expires-header is passed by the upper layer.", "count": 8, "id": 149185, "time": "2011-09-13T09:39:54Z", "bug_id": 21260, "creation_time": "2011-09-13T09:39:54Z", "is_private": false}, {"count": 9, "tags": [], "creator": "abiacco@formatdynamics.com", "is_private": false, "text": "(In reply to comment #8)\n\n> \n> If I remember correctly passing the cache expire triggers a freshness check,\n> and if it's not-modified we're content with the cached body and write a new\n> header.\n> Doing this once a day by default is sane IMHO, no matter what Expires-header is\n> passed by the upper layer.\n\nBut i don't think that's true.\n\nBecause let's say i have a file with a max-age value of 4 hours and a cachemaxexpire setting with a value of 5 minutes. I've had old file content being served from the cache (i.e. having an Age header > CacheMaxExpire and < max-age) when new file content existed on the FS.", "id": 149195, "time": "2011-09-13T17:55:37Z", "bug_id": 21260, "creation_time": "2011-09-13T17:55:37Z", "attachment_id": null}, {"count": 10, "tags": [], "bug_id": 21260, "attachment_id": 31447, "id": 174130, "time": "2014-03-27T13:59:18Z", "creator": "Chaosed0@gmail.com", "creation_time": "2014-03-27T13:59:18Z", "is_private": false, "text": "Created attachment 31447\nChange CacheMaxExpire/CacheMinExpire doc to be more accurate\n\nThis behavior is still around today, in trunk. To summarize the discussion:\n\nCacheMaxExpire/CacheMinExpire only take effect if no valid expiry date is specified and a valid last modified date is specified. Additionally, they are unconditionally overriden by Cache-Control header directives. One can see this behavior by following the code paths in mod_cache.c (cache_save_filter(), do a search on \"maxex\") and cache_util.c (cache_check_freshness(), called from cache_select() in cache_storage.c).\n\nThe documentation, on the other hand, says that CacheMaxExpire overrides the expiry date supplied, and says pretty much nothing as to whether it affects the Cache-Control directives or not. CacheMinExpire says \"This is only used if no valid expire time was supplied with the document\", which is actually true, but ignores the fact that a valid Last-Modified value must be supplied as well.\n\nThere's also this confusing case in cache_save_filter(): if there's a max-age and a last-modified date but no valid expiry date, CacheMaxExpire/CacheMinExpire try to do something by setting the expiry date field (what would normally get set by the Expires header). However, that field just gets overriden by max-age anyway in cache_check_freshness(), so nothing is accomplished.\n\nThis behavior's apparently been around for more than ten years, so I've taken a shot at changing the documentation only. However, I do also feel that these directives are not very useful as they are currently implemented."}]