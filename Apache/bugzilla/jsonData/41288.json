[{"count": 0, "tags": [], "text": "stroke-width=\"10000000000\" or similar gives a parse error:\n\n***** CSSEngine: exception\nproperty.syntax.error:java.lang.NumberFormatException: For input string:\n\"10000000000\"\n\nAttrValue:10000000000\n\nException:java.lang.NumberFormatException\njava.lang.NumberFormatException: For input string: \"10000000000\"\n        at\njava.lang.NumberFormatException.forInputString(NumberFormatException.java:48)\n        at java.lang.Integer.parseInt(Integer.java:459)\n        at java.lang.Integer.parseInt(Integer.java:497)\n        at org.apache.batik.css.parser.Parser.parseTerm(Unknown Source)\n        at org.apache.batik.css.parser.Parser.parseExpression(Unknown Source)\n        at org.apache.batik.css.parser.Parser.parsePropertyValueInternal(Unknown\nSource)\n        at org.apache.batik.css.parser.Parser.parsePropertyValue(Unknown Source)\n        at org.apache.batik.css.engine.CSSEngine.getCascadedStyleMap(Unknown Source)\n        at org.apache.batik.css.engine.CSSEngine.getComputedStyle(Unknown Source)\n        at org.apache.batik.bridge.CSSUtilities.getComputedStyle(Unknown Source)\n        at org.apache.batik.bridge.CSSUtilities.convertDisplay(Unknown Source)\n        at org.apache.batik.bridge.GVTBuilder.buildGraphicsNode(Unknown Source)\n        at org.apache.batik.bridge.GVTBuilder.buildComposite(Unknown Source)\n        at org.apache.batik.bridge.GVTBuilder.build(Unknown Source)\n        at org.apache.batik.swing.svg.GVTTreeBuilder.run(Unknown Source)\n\nThere's no problem if a \".0\" or \"px\" is added.", "attachment_id": null, "bug_id": 41288, "id": 97624, "time": "2007-01-04T04:37:16Z", "creator": "x00000000@freenet.de", "creation_time": "2007-01-04T04:37:16Z", "is_private": false}, {"count": 1, "tags": [], "text": "Created attachment 19353\ntestcase", "is_private": false, "bug_id": 41288, "id": 97625, "time": "2007-01-04T04:38:21Z", "creator": "x00000000@freenet.de", "creation_time": "2007-01-04T04:38:21Z", "attachment_id": 19353}, {"count": 2, "tags": [], "creator": "info@dvholten.de", "text": "fixed in svn 522311 \nhmm - just pushes the limit to 2^61 ..", "id": 100899, "time": "2007-03-25T10:42:26Z", "bug_id": 41288, "creation_time": "2007-03-25T10:42:26Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 41288, "attachment_id": null, "is_private": false, "id": 101097, "time": "2007-03-28T06:05:13Z", "creator": "x00000000@freenet.de", "creation_time": "2007-03-28T06:05:13Z", "text": "Wouldn't it be possible to just catch the NumberFormatException and reparse\nit as a float:\n\n                try {\n                    int val = Integer.parseInt(sval);\n                    nextIgnoreSpaces();\n                    return CSSLexicalUnit.createInteger(val, prev);\n                } catch (NumberFormatException e) {\n                    // fall through\n                }\n\ninstead of\n\n                long lVal = Long.parseLong( sval );      // fix #41288\n                if ( lVal >= Integer.MIN_VALUE && lVal <= Integer.MAX_VALUE ){\n                    // we can safely convert to int\n                    int iVal = (int) lVal;\n                    nextIgnoreSpaces();\n                    return CSSLexicalUnit.createInteger( iVal, prev);\n                }\n\n                // we are too large for an int: convert to float\n                // we can just fall-through to the float-handling ...\n\n(I proposed this in bug 38207 but failed to post it here too.)\n"}]