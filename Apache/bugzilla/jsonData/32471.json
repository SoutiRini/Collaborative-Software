[{"count": 0, "tags": [], "bug_id": 32471, "attachment_id": null, "id": 67701, "time": "2004-12-01T16:41:09Z", "creator": "ryanagler@hotmail.com", "creation_time": "2004-12-01T16:41:09Z", "is_private": false, "text": "Starting with version 5.5.3, Tomcat will crash while initializing a webapp that \nhas an org.apache.commons.logging.Log of its own.  In my case, I have a Cocoon \nwebapp that contains commons-logging-1.0.3.jar in WEB-INF/lib.  After starting \nTomcat, and making the first request to the webapp, I get this in \ncatalina.out: \"You have more than one version \nof 'org.apache.commons.logging.Log' visible, which is not allowed\", after which \nTomcat stops responding to requests.  If I remove \nthe 'org.apache.commons.logging.Log' class from the webapp's commons-logging-\n1.0.3.jar, tomcat then serves pages normally.  5.5.2 loads the webapp without \nhaving to remove 'org.apache.commons.logging.Log', so something that changed in \n5.5.3 must cause this issue.  Below is more from catalina.out when the error \noccurs:\n\n- Servlet.service() for servlet Cocoon threw exception\njava.lang.NoClassDefFoundError\n\tat org.apache.jk.server.JkCoyoteHandler.appendHead\n(JkCoyoteHandler.java:341)\n\tat org.apache.jk.server.JkCoyoteHandler.action(JkCoyoteHandler.java:416)\n\tat org.apache.coyote.Response.action(Response.java:182)\n\tat org.apache.coyote.Response.sendHeaders(Response.java:374)\n\tat org.apache.jk.server.JkCoyoteHandler.doWrite\n(JkCoyoteHandler.java:230)\n\tat org.apache.coyote.Response.doWrite(Response.java:542)\n\tat org.apache.catalina.connector.OutputBuffer.realWriteBytes\n(OutputBuffer.java:360)\n\tat org.apache.tomcat.util.buf.ByteChunk.flushBuffer(ByteChunk.java:403)\n\tat org.apache.catalina.connector.OutputBuffer.doFlush\n(OutputBuffer.java:313)"}, {"count": 1, "tags": [], "creator": "yoavs@computer.org", "attachment_id": null, "id": 67702, "time": "2004-12-01T16:48:57Z", "bug_id": 32471, "creation_time": "2004-12-01T16:48:57Z", "is_private": false, "text": "You filed this bug against 5.5.4: you actually tried against 5.5.4, not just \n5.5.2 and 5.5.3, right?"}, {"count": 2, "tags": [], "creator": "ryanagler@hotmail.com", "attachment_id": null, "id": 67703, "time": "2004-12-01T16:52:32Z", "bug_id": 32471, "creation_time": "2004-12-01T16:52:32Z", "is_private": false, "text": "(In reply to comment #1)\n> You filed this bug against 5.5.4: you actually tried against 5.5.4, not just \n> 5.5.2 and 5.5.3, right?\n\nYes, I tested this against 5.5.1, 5.5.2, 5.5.3 and 5.5.4 using the exact same \nwebapp, server.xml, etc.  5.5.4 has the same result as 5.5.3.  5.5.1 and 5.5.2 \ndo not have the issue."}, {"count": 3, "tags": [], "creator": "allistair.crossley@qas.com", "text": "i have found in general so far that Tomcat will throw a \njava.lang.NoClassDefFoundError when the same classes are found in multiple \njars, normally because common/lib contains a jar that is also in a web app lib \nfolder.\n\nthis issue is also slightly but not exactly related to another issue where if a \nwebapp has any other version of commons-logging than that in tomcat's BIN \nfolder a NoClassDefFoundError is thrown. that is, if you use commons-logging-\napi.jar from tomcat's BIN in the web app lib, the problem goes away .. not sure \nif you could try that out for this issue too or not.\n", "id": 67704, "time": "2004-12-01T16:54:14Z", "bug_id": 32471, "creation_time": "2004-12-01T16:54:14Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 32471, "attachment_id": null, "id": 67706, "time": "2004-12-01T16:59:59Z", "creator": "ryanagler@hotmail.com", "creation_time": "2004-12-01T16:59:59Z", "is_private": false, "text": "(In reply to comment #3)\n> i have found in general so far that Tomcat will throw a \n> java.lang.NoClassDefFoundError when the same classes are found in multiple \n> jars, normally because common/lib contains a jar that is also in a web app \nlib \n> folder.\n\nTo make sure, I just checked in common/lib, and no jars there contain \norg.apache.commons.logging.Log"}, {"count": 5, "tags": [], "creator": "remm@apache.org", "attachment_id": null, "id": 67707, "time": "2004-12-01T17:00:20Z", "bug_id": 32471, "creation_time": "2004-12-01T17:00:20Z", "is_private": false, "text": "The commons-logging JAR which is bundled in on the system classpath, and will be\ndelegated to first, so what you describe cannot occur.\n\nPlease provide a test war if you'd like to reopen this report. I don't think\nthat the issue will be fixed even if it exists, BTW. Instead, you'll have to\ntweak your webapp packaging, or set the webapp classloader to delegate."}, {"count": 6, "tags": [], "bug_id": 32471, "attachment_id": null, "id": 67708, "creation_time": "2004-12-01T17:04:39Z", "time": "2004-12-01T17:04:39Z", "creator": "allistair.crossley@qas.com", "text": "1) try removing your web application's lib/commons-logging-1.0.3.jar, restart \nand test\n\n2 if (1) fails copy tomcat/bin/commons-logging-api.jar into your web \napplication's lib, restart and test\n\n", "is_private": false}, {"count": 7, "text": "Counterpoint:\n\nI can run our web-app in 5.5.4 (with Java 1.5) just fine -- and it contains\ncommons-logging.\n\nNow I did change our web app such that we're using the same commons-logging\nversion as Tomcat some time back, but I did not see any issues in normal\noperation prior to this.  [I only did this so that I could hack Tomcat (5.0.x\nactually) into the same process one of our other apps without shutdown\nexceptions due to the older commons-logging not providing some methods used\nwithin Tomcat's shutdown.]\n\nIn general I have gone to some lengths to play it safe and use the same version\nof libraries that Tomcat uses when the library resides in bin or common/lib.", "bug_id": 32471, "attachment_id": null, "id": 67714, "time": "2004-12-01T17:23:36Z", "creator": "jessh@ptc.com", "creation_time": "2004-12-01T17:23:36Z", "tags": [], "is_private": false}]