[{"count": 0, "tags": [], "text": "I'm getting this error on a bunch of Outlook Msg files I'm trying to ingest.  Due to the sensitive nature of the task, I can't post an example here, though I may be able to try and recreate one in the next few days and attach it.\n\nAfter some research it appears that the Olk10SideProps_0001 stream was only written out by Outlook 2002 for documents dragged and dropped to disk.  This stream may contain message ID and store ID.  It is an undocumented stream in the\nMS-OXMSG.  See further explanation here: http://social.msdn.microsoft.com/Forums/en-US/os_exchangeprotocols/thread/1f2848a4-3b6a-4f8f-85dd-55e6b12fdec6\n\n\nIf possible, adding a fix that will ignore this stream and continue processing the MSG file, if it can be done so in a valid method.  I'll see if I can get anything to work on my end.\n\nStack Trace from Tika(1.0-SNAPSHOT) called Poi-3.8-b4:\n\nCaused by: java.lang.IllegalArgumentException: Invalid chunk name Olk10SideProps_0001\n\tat org.apache.poi.hsmf.parsers.POIFSChunkParser.process(POIFSChunkParser.java:125)\n\tat org.apache.poi.hsmf.parsers.POIFSChunkParser.processChunks(POIFSChunkParser.java:98)\n\tat org.apache.poi.hsmf.parsers.POIFSChunkParser.parse(POIFSChunkParser.java:85)\n\tat org.apache.poi.hsmf.MAPIMessage.<init>(MAPIMessage.java:127)\n\tat org.apache.tika.parser.microsoft.OutlookExtractor.<init>(OutlookExtractor.java:57)\n\tat org.apache.tika.parser.microsoft.OfficeParser.parse(OfficeParser.java:217)\n\tat org.apache.tika.parser.CompositeParser.parse(CompositeParser.java:242)", "attachment_id": null, "bug_id": 51873, "id": 149642, "time": "2011-09-22T18:01:11Z", "creator": "rpi_alum@yahoo.com", "creation_time": "2011-09-22T18:01:11Z", "is_private": false}, {"count": 1, "text": "If you could produce a sample file that'd be very helpful (either by getting the problematic version of outlook running, or just attacking the file with a hex editor to XXX out all the strings)\n\nIn the mean time, any chance you could run org.apache.poi.poifs.dev.POIFSLister against the file and post that? We can then check there are no other unexpected chunks in the file", "bug_id": 51873, "is_private": false, "id": 149643, "time": "2011-09-22T18:09:13Z", "creator": "apache@gagravarr.org", "creation_time": "2011-09-22T18:09:13Z", "tags": [], "attachment_id": null}, {"count": 2, "tags": [], "creator": "rpi_alum@yahoo.com", "text": "Can you please supply the format to use to run the POIFSLister?  I found it mentioned on the website but no specification about how to fire it off from the commandline.\n\nI'm also going to try some hacks to the current build to see if I can get a work-around that can be supplied as a patch.  This issue seems to be specific to the version and method of Outlook used to generate these files.  Any modification and re-saving of them fixes the issue.  I'm not sure how the hex editor may work as a good percentage of these files also have image attachments that also contain sensitive information.  Unless you have any tips for using the editor to also yank out binary attachements without corrupting the original msg?", "id": 149647, "time": "2011-09-22T18:39:19Z", "bug_id": 51873, "creation_time": "2011-09-22T18:39:19Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "creator": "apache@gagravarr.org", "attachment_id": null, "id": 149663, "time": "2011-09-22T21:24:40Z", "bug_id": 51873, "creation_time": "2011-09-22T21:24:40Z", "is_private": false, "text": "To run POIFSLister, just do something like:\n\njava -classpath poi-3.8-beta5-20110922.jar org.apache.poi.poifs.dev.POIFSLister problem.msg"}, {"count": 4, "tags": [], "creator": "rpi_alum@yahoo.com", "attachment_id": null, "text": "I've attached the result of the lister run on the file.  The problem seems to be the final chunk at the end of the file.  I'm going to try and test with the chunk parser just returning when a chunk with this name is encountered.\n\n\n(In reply to comment #3)\n> To run POIFSLister, just do something like:\n> java -classpath poi-3.8-beta5-20110922.jar org.apache.poi.poifs.dev.POIFSLister\n> problem.msg", "id": 149673, "time": "2011-09-22T22:29:04Z", "bug_id": 51873, "creation_time": "2011-09-22T22:29:04Z", "is_private": false}, {"count": 5, "tags": [], "creator": "rpi_alum@yahoo.com", "text": "Created attachment 27573\nOutput of POIFSLister on problem file", "id": 149674, "time": "2011-09-22T22:30:48Z", "bug_id": 51873, "creation_time": "2011-09-22T22:30:48Z", "is_private": false, "attachment_id": 27573}, {"count": 6, "tags": [], "text": "Created attachment 27574\nPATCH for issue\n\nSVN Diff for patch to reslove issue.\n\nEssentially this Piece of Chunk Data was only added to .MSG files generated by Outlook2002 via drag and drop.  This wrapper chunk doesn't seem to contain any data impacting the valid extraction of text from an email and its attachments.\n\nPatch essentially has a hard-coded check to see if the entryName matches this rare value and returns to continue processesing without an exception.", "attachment_id": 27574, "bug_id": 51873, "id": 149675, "time": "2011-09-22T23:03:12Z", "creator": "rpi_alum@yahoo.com", "creation_time": "2011-09-22T23:03:12Z", "is_private": false}, {"count": 7, "tags": [], "creator": "apache@gagravarr.org", "attachment_id": null, "is_private": false, "id": 149707, "time": "2011-09-23T16:25:51Z", "bug_id": 51873, "creation_time": "2011-09-23T16:25:51Z", "text": "This should be fixed in r1174868. I went for a slightly different approach to your patch, which should cope with there being more than one Olk10SlideProp entry in case we find that\n\nIf you could create a test file we could use in unit testing, that'd be great"}, {"count": 8, "tags": [], "text": "Thanks in advance.... I figured you may want to mod the patch with your better knolwedge about the inner workings of these documents.\n\nI'm not so sure if I'll be able to submit a test file for unit testing though.  all the files I have contain sensitve infoa nd attachments and trying to get a version of Outlook2002 up and running may not occur.  If I get the chance, I'll try to follow through.\n\nThanks again for your help.\n\n(In reply to comment #7)\n> This should be fixed in r1174868. I went for a slightly different approach to\n> your patch, which should cope with there being more than one Olk10SlideProp\n> entry in case we find that\n> If you could create a test file we could use in unit testing, that'd be great", "attachment_id": null, "bug_id": 51873, "id": 149711, "time": "2011-09-23T18:15:08Z", "creator": "rpi_alum@yahoo.com", "creation_time": "2011-09-23T18:15:08Z", "is_private": false}, {"count": 9, "tags": [], "bug_id": 51873, "attachment_id": null, "id": 149714, "time": "2011-09-23T19:44:52Z", "creator": "apache@gagravarr.org", "creation_time": "2011-09-23T19:44:52Z", "is_private": false, "text": "Let's leave this bug open until we get a test file then, whenever that may be!"}, {"count": 10, "tags": [], "text": "Still looking into the possability of creating a testfile, but am not sure if it will happen.  Did detect a bug in tge fix.  I've submitted a new patch.  either the .equals() needs to change to .startsWith(), or the \"Olk10SidProps\" needs to have the underscore added to the end...  \"Olk10SideProps_\".\n\nThanks again for your attention to the matter.\n\nRegards, \n\nJeremy\n\n\n(In reply to comment #9)\n> Let's leave this bug open until we get a test file then, whenever that may be!", "is_private": false, "bug_id": 51873, "id": 149858, "time": "2011-09-27T19:39:47Z", "creator": "rpi_alum@yahoo.com", "creation_time": "2011-09-27T19:39:47Z", "attachment_id": null}, {"count": 11, "tags": [], "bug_id": 51873, "attachment_id": 27614, "id": 149859, "time": "2011-09-27T19:42:22Z", "creator": "rpi_alum@yahoo.com", "creation_time": "2011-09-27T19:42:22Z", "is_private": false, "text": "Created attachment 27614\nPatch for the prior fix\n\nPatches the fix by adding an underscore to the string being compared."}, {"count": 12, "tags": [], "bug_id": 51873, "attachment_id": null, "id": 150078, "time": "2011-10-03T14:15:10Z", "creator": "rpi_alum@yahoo.com", "creation_time": "2011-10-03T14:15:10Z", "is_private": false, "text": "Please take a look at my next comment, I noticed an issue with the fix submitted in  r1174868.  There is an underscore that needs to be taken into account when doing the comparison.  I submitted a updated patch for the issue.  \n\nThanks in advance. \n\n\n(In reply to comment #9)\n> Let's leave this bug open until we get a test file then, whenever that may be!"}, {"count": 13, "tags": [], "bug_id": 51873, "is_private": false, "text": "Hopefully fixed in r1179462.\n\nLife would be much easier with a test file to write a unit test against... :)", "id": 150235, "time": "2011-10-05T22:14:52Z", "creator": "apache@gagravarr.org", "creation_time": "2011-10-05T22:14:52Z", "attachment_id": null}, {"count": 14, "tags": [], "text": "Thanks, that fixed it!!!\n\nHopefully sometime this week or next I may be able to track down a sample to send in.  Problem is I'm dealing with over 10K message files, of which 3K-6K may have the issue but a good percentage have attachments.  If I get lucky and am able to track down a trouble file without an attachment, I'll look into hex editing out the sensitive items and submit it as a test.\n\n(In reply to comment #13)\n> Hopefully fixed in r1179462.\n> Life would be much easier with a test file to write a unit test against... :)", "is_private": false, "bug_id": 51873, "id": 150242, "time": "2011-10-06T02:22:10Z", "creator": "rpi_alum@yahoo.com", "creation_time": "2011-10-06T02:22:10Z", "attachment_id": null}, {"count": 15, "tags": [], "creator": "rpi_alum@yahoo.com", "attachment_id": null, "is_private": false, "id": 150678, "time": "2011-10-17T18:45:12Z", "bug_id": 51873, "creation_time": "2011-10-17T18:45:12Z", "text": "Well I tracked down a few sample files I was going to try and inlcude, however I've hit a roadblock with trying to hex-edit out any of the sensitive information.\n\nI'm able to remove all sensitive header information in the hex-editor and do see a raw text version of the message body I've hexed out.  Though it appears that the message body text is also contained in some binary format as well which I'm not able to hex edit out without corrupting the document.  Unless you have an idea for the best way to proceed with modifying these documents, getting a sample may have to wait unless I can track down a version of Outlook 2002 that does produce messages with this issue.\n\n\n\n(In reply to comment #14)\n> Thanks, that fixed it!!!\n> Hopefully sometime this week or next I may be able to track down a sample to\n> send in.  Problem is I'm dealing with over 10K message files, of which 3K-6K\n> may have the issue but a good percentage have attachments.  If I get lucky and\n> am able to track down a trouble file without an attachment, I'll look into hex\n> editing out the sensitive items and submit it as a test.\n> (In reply to comment #13)\n> > Hopefully fixed in r1179462.\n> > Life would be much easier with a test file to write a unit test against... :)"}, {"count": 16, "text": "I'd be happy to have a go at editing the file, to see if I can manage to remove all the identifiable bits. Well, as long as it takes me under about 10 minutes... :)", "bug_id": 51873, "attachment_id": null, "id": 150684, "time": "2011-10-17T18:51:11Z", "creator": "apache@gagravarr.org", "creation_time": "2011-10-17T18:51:11Z", "tags": [], "is_private": false}, {"count": 17, "tags": [], "creator": "rpi_alum@yahoo.com", "attachment_id": null, "is_private": false, "id": 150761, "time": "2011-10-19T15:20:02Z", "bug_id": 51873, "creation_time": "2011-10-19T15:20:02Z", "text": "Unfortunately I'm still reluctant to release the document as per our contract with the source.\n\nIf you could help point me in the right direction, that would be greatly appreciated.  I've got all the metadata and raw text already hex-edited out.\n\nBut it appears the message text is also stored in another block in some encoded manner which is then decoded and appears when the message is opened.  \n\nIt would be great if you could help direct me towards the specs for determining the encoding method used and any utilities that may be useful for re-encoding my newly hex-edited version of the content.  I'm assuming and hoping that the re-encoded version will be of the same size and length and won't corrupt the original document?\n\nIt appears the encoded version of the text is in a block labeled as:\n_._.s.u.b.s.t.g.1...0._.1.0.4.6.0.0.1.E\n\nThanks again for the help.\n\n\n(In reply to comment #16)\n> I'd be happy to have a go at editing the file, to see if I can manage to remove\n> all the identifiable bits. Well, as long as it takes me under about 10\n> minutes... :)"}, {"count": 18, "tags": [], "text": "One option is to just drop the chunks you can't properly clean. That may result in a file that outlook is a bit funny about, but should help us with testing!\n\nThe way to do that would be to open the file in POIFS, iterate through the entries, and either copy to a new POIFS instance or skip. See org.apache.poi.poifs.filesystem.EntryUtils for a guide to doing this", "attachment_id": null, "bug_id": 51873, "id": 150762, "time": "2011-10-19T15:22:56Z", "creator": "apache@gagravarr.org", "creation_time": "2011-10-19T15:22:56Z", "is_private": false}, {"count": 19, "tags": [], "creator": "rpi_alum@yahoo.com", "attachment_id": null, "is_private": false, "id": 150813, "time": "2011-10-20T20:30:28Z", "bug_id": 51873, "creation_time": "2011-10-20T20:30:28Z", "text": "Well thats certainly helpedme mak some headway on that today when I wasn't busy with other things.  I've got a utility up and working that uses the EntryUtils to copy or skip blocks from coming over...  The problem I'm having now is trying to figure out which entry is being used that holds the binary data.  I removed all of the largest in size entries, but both the raw text and binary encoded version remained in the then corrupted msg file.  LOL\n\nI'm guessing that perhaps one of the entries contains information as to where in the file the encoded portion of the text message resides?  Any hints as to trying to pinpoint which chunk relates to the encoded message body?  Either via poi utility classes or methods or through the hex-editor?\n\nI suppose worst-comes to worst, I can try dropping them one at a time and see which one works.  As long as its not a combination of dropped chunks that I need.  LOL\n\n\n \n\n(In reply to comment #18)\n> One option is to just drop the chunks you can't properly clean. That may result\n> in a file that outlook is a bit funny about, but should help us with testing!\n> The way to do that would be to open the file in POIFS, iterate through the\n> entries, and either copy to a new POIFS instance or skip. See\n> org.apache.poi.poifs.filesystem.EntryUtils for a guide to doing this"}, {"count": 20, "tags": [], "bug_id": 51873, "attachment_id": null, "id": 150822, "time": "2011-10-21T14:30:11Z", "creator": "rpi_alum@yahoo.com", "creation_time": "2011-10-21T14:30:11Z", "is_private": false, "text": "VIOLA!!!!!    I had a thought on my drive home yesterday and was able to get it to work this morning.  An example will be attached shortly.\n\n\nJust for the instance of getting the test file, I had a great idea for a hack and it appears to have worked.  Essentially I created a new test Outlook 2010 document.  Then using the utility you directed me towards, I stripped off the 2002 Olk10SideProps Chunk from the original document, copied the 2010 document using EntryUtils, then appended the 2002 Chunk to the copied 2010 document before writing!!   Way much simpler than all the hex editing and chunk tracking down that was on my plate.\n\nThanks again Nick for all your help and your patience!!\n\n\nJeremy"}, {"count": 21, "text": "Created attachment 27834\nExample of the bug that the patch fixed\n\nFinally was able to get a sample document together!!", "bug_id": 51873, "is_private": false, "id": 150823, "time": "2011-10-21T14:32:11Z", "creator": "rpi_alum@yahoo.com", "creation_time": "2011-10-21T14:32:11Z", "tags": [], "attachment_id": 27834}, {"count": 22, "tags": [], "creator": "apache@gagravarr.org", "text": "Thanks for the sample file, added with a test in r1210332.", "id": 151970, "time": "2011-12-05T05:12:50Z", "bug_id": 51873, "creation_time": "2011-12-05T05:12:50Z", "is_private": false, "attachment_id": null}]