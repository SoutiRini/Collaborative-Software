[{"count": 0, "tags": [], "creator": "KKostalkowicz@ivmx.pl", "attachment_id": null, "id": 145778, "time": "2011-04-14T05:23:09Z", "bug_id": 51062, "creation_time": "2011-04-14T05:23:09Z", "is_private": false, "text": "Httpd is used as a reverse proxy, load is not significantly high.\n\nActual behaviour: one of httpd child processes is running (for 14 hours)\n\nExpected behaviour: all child processes should be sleeping (having run at most several seconds)\n\nGot two traces by attaching to the faulty process via gdb.\n\n * trace 1\n\n#0  apr_bucket_free (mem=0x8fa9768) at buckets/apr_buckets_alloc.c:187\n#1  0x001589c8 in apr_brigade_cleanup (data=0x8f5c3d0)\n    at buckets/apr_brigade.c:44\n#2  0x001589fd in brigade_cleanup (data=0x8f5c3d0) at buckets/apr_brigade.c:34\n#3  0x008870ed in run_cleanups (cref=0x8f5b230) at memory/unix/apr_pools.c:2308\n#4  0x00887ee7 in apr_pool_clear (pool=0x8f5b220)\n    at memory/unix/apr_pools.c:737\n#5  0x080aa186 in child_main (child_num_arg=<value optimized out>)\n    at prefork.c:554\n#6  0x080aa5f7 in make_child (s=0x8e509a8, slot=16) at prefork.c:758\n#7  0x080aaf50 in ap_mpm_run (_pconf=0x8e49600, plog=0x8e856f0, s=0x8e509a8)\n    at prefork.c:893\n#8  0x08069aa5 in main (argc=149190136, argv=0x8f59218) at main.c:740\n\n * trace 2\n\n#0  0x001589b6 in apr_brigade_cleanup (data=0x8f5c3d0)\n    at buckets/apr_brigade.c:44\n#1  0x001589fd in brigade_cleanup (data=0x8f5c3d0) at buckets/apr_brigade.c:34\n#2  0x008870ed in run_cleanups (cref=0x8f5b230) at memory/unix/apr_pools.c:2308\n#3  0x00887ee7 in apr_pool_clear (pool=0x8f5b220)\n    at memory/unix/apr_pools.c:737\n#4  0x080aa186 in child_main (child_num_arg=<value optimized out>)\n    at prefork.c:554\n#5  0x080aa5f7 in make_child (s=0x8e509a8, slot=16) at prefork.c:758\n#6  0x080aaf50 in ap_mpm_run (_pconf=0x8e49600, plog=0x8e856f0, s=0x8e509a8)\n    at prefork.c:893\n#7  0x08069aa5 in main (argc=149190136, argv=0x8f59218) at main.c:740\n\n * conclusion\n\nProcess got stuck in brigade_cleanup(), continually invoking apr_brigade_cleanup()\n\nPossibly related issues: 46785, 50335, 34288.\n\nI can provide more output from gdb, just give me the input."}, {"count": 1, "attachment_id": null, "bug_id": 51062, "is_private": false, "id": 145779, "time": "2011-04-14T06:28:00Z", "creator": "nick@webthing.com", "creation_time": "2011-04-14T06:28:00Z", "tags": [], "text": "That's an interesting traceback.  If you could get an execution trace (like dtrace, ptrace, strace) it could hopefully tell us more detail if it is indeed looping."}, {"count": 2, "tags": [], "bug_id": 51062, "attachment_id": null, "text": "Also I should ask, what APR and APR-UTIL versions are you using?", "id": 145780, "time": "2011-04-14T06:29:08Z", "creator": "nick@webthing.com", "creation_time": "2011-04-14T06:29:08Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 51062, "attachment_id": null, "id": 145781, "time": "2011-04-14T07:30:59Z", "creator": "KKostalkowicz@ivmx.pl", "creation_time": "2011-04-14T07:30:59Z", "is_private": false, "text": "Fortunately, the process is still running. Here comes the version. I'll try to get the traces later.\n\nServer version: Apache/2.2.15 (Unix)\nServer built:   Jun 18 2010 17:28:27\nServer's Module Magic Number: 20051115:24\nServer loaded:  APR 1.4.2, APR-Util 1.3.9\nCompiled using: APR 1.4.2, APR-Util 1.3.9\nArchitecture:   32-bit\nServer MPM:     Prefork\n  threaded:     no\n    forked:     yes (variable process count)\nServer compiled with....\n -D APACHE_MPM_DIR=\"server/mpm/prefork\"\n -D APR_HAS_SENDFILE\n -D APR_HAS_MMAP\n -D APR_HAVE_IPV6 (IPv4-mapped addresses enabled)\n -D APR_USE_SYSVSEM_SERIALIZE\n -D APR_USE_PTHREAD_SERIALIZE\n -D SINGLE_LISTEN_UNSERIALIZED_ACCEPT\n -D APR_HAS_OTHER_CHILD\n -D AP_HAVE_RELIABLE_PIPED_LOGS\n -D DYNAMIC_MODULE_LIMIT=128\n -D HTTPD_ROOT=\"/usr/local/apache2\"\n -D SUEXEC_BIN=\"/usr/local/apache2/bin/suexec\"\n -D DEFAULT_PIDLOG=\"logs/httpd.pid\"\n -D DEFAULT_SCOREBOARD=\"logs/apache_runtime_status\"\n -D DEFAULT_LOCKFILE=\"logs/accept.lock\"\n -D DEFAULT_ERRORLOG=\"logs/error_log\"\n -D AP_TYPES_CONFIG_FILE=\"conf/mime.types\"\n -D SERVER_CONFIG_FILE=\"conf/httpd.conf\""}, {"count": 4, "tags": [], "creator": "KKostalkowicz@ivmx.pl", "text": "# strace -p 6063\nProcess 6063 attached - interrupt to quit\n(no syscalls...)\n(pressed ^C)\nProcess 6063 detached", "id": 145782, "time": "2011-04-14T09:54:46Z", "bug_id": 51062, "creation_time": "2011-04-14T09:54:46Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 51062, "is_private": false, "text": "# ltrace -p 6063\napr_bucket_free(0x8fa9768, 0x8f5b220, 0xbff8a5d8, 0x887e0c, 0x8f5b230)                                  = 0x8fa9758\napr_bucket_destroy_noop(0x8f75608, 0x8f5b220, 0xbff8a5d8, 0x887e0c, 0x8f5b230)                          = 0x8f75608\napr_bucket_free(0x8fa9768, 0x8f5b220, 0xbff8a5d8, 0x887e0c, 0x8f5b230)                                  = 0x8fa9758\napr_bucket_destroy_noop(0x8f75608, 0x8f5b220, 0xbff8a5d8, 0x887e0c, 0x8f5b230)                          = 0x8f75608\napr_bucket_free(0x8fa9768, 0x8f5b220, 0xbff8a5d8, 0x887e0c, 0x8f5b230)                                  = 0x8fa9758\napr_bucket_destroy_noop(0x8f75608, 0x8f5b220, 0xbff8a5d8, 0x887e0c, 0x8f5b230)                          = 0x8f75608\napr_bucket_free(0x8fa9768, 0x8f5b220, 0xbff8a5d8, 0x887e0c, 0x8f5b230)                                  = 0x8fa9758\napr_bucket_destroy_noop(0x8f75608, 0x8f5b220, 0xbff8a5d8, 0x887e0c, 0x8f5b230)                          = 0x8f75608\napr_bucket_free(0x8fa9768, 0x8f5b220, 0x887e0c, 0x8f5b230 <unfinished ...>", "id": 145783, "time": "2011-04-14T10:02:58Z", "creator": "KKostalkowicz@ivmx.pl", "creation_time": "2011-04-14T10:02:58Z", "attachment_id": null}, {"count": 6, "tags": [], "bug_id": 51062, "attachment_id": null, "text": "The process loops trying do dispose a corrupted list.\nDon't ask me where the corruption occurred.\nBelow some output from gdb with my notes.\n\n---\n\napr_brigade_cleanup (data=0x8f5c3d0) at buckets/apr_brigade.c:42\n42          while (!APR_BRIGADE_EMPTY(b)) {\n\n# *b\n(gdb) print *((apr_bucket_brigade *)data)\n$3 = {p = 0x8f5b220, list = {next = 0x8fa9768, prev = 0x8fa9768},\n  bucket_alloc = 0x8f9f670}\n\n# b\n(gdb) print ((apr_bucket_brigade *)data)\n$4 = (struct apr_bucket_brigade *) 0x8f5c3d0\n\n# list head\n(gdb) print ((apr_bucket_brigade *)data)->list\n$5 = {next = 0x8fa9768, prev = 0x8fa9768}\n\n# address of list head\n(gdb) print &((apr_bucket_brigade *)data)->list\n$24 = (struct apr_bucket_list *) 0x8f5c3d4\n\n# first element of b\n(gdb) print (((apr_bucket_brigade *)data)->list)->next\n$6 = (struct apr_bucket *) 0x8fa9768\n\n# value of first element of b\n(gdb) print *(((apr_bucket_brigade *)data)->list)->next\n$7 = {link = {next = 0x8f75c34, prev = 0x8f75c34}, type = 0x16c0e0,\n  length = 4294967295, start = -1, data = 0x8f75608,\n  free = 0x80662f8 <apr_bucket_free@plt>, list = 0x8fa9698}\n\n# second element of b\n(gdb) print (((apr_bucket_brigade *)data)->list)->next->link->next\n$8 = (struct apr_bucket * volatile) 0x8f75c34\n\n# value of second element of b\n(gdb) print *(((apr_bucket_brigade *)data)->list)->next->link->next\n$9 = {link = {next = 0x8f75c34, prev = 0x8f75c34}, type = 0x8fa9698,\n  length = 150427552, start = 6062569827032112, data = 0x8066538,\n  free = 0x8f755c8, list = 0x8f75c54}\n\n# sentinel for b (computed with APR_RING_SENTINEL)\n(gdb) print (struct apr_bucket *)((char *)(&(&((apr_bucket_brigade *)data)->list)->next))\n$23 = (struct apr_bucket *) 0x8f5c3d4\n\n# it's not (but should be) possible to reach sentinel of b from b\n\n# while loops because the list is not empty\n# ie. APR_RING_FIRST((hp)) != APR_RING_SENTINEL((hp), elem, link)\n\n# apr_bucket_free(void *mem) goes into if_true branch\n# it does not change the data structure (the assignments do not change anything)\n\n# if check_not_already_free(node_header_t *node) was called\n# it would abort during first loop iteration", "id": 145806, "time": "2011-04-15T06:44:09Z", "creator": "KKostalkowicz@ivmx.pl", "creation_time": "2011-04-15T06:44:09Z", "is_private": false}, {"count": 7, "tags": [], "bug_id": 51062, "text": "Nice work - thanks!\n\nI see trunk APR has an update that looks as if it should serve a similar purpose to your suggestion of check_not_already_free:\n\n    APR_BRIGADE_CHECK_CONSISTENCY(b);\n\nis inserted before the while() loop in apr_brigade_cleanup.\n\nIf noone comes up with a better selection, I'll add an explicit test to abort the loop and return APR_EGENERAL if the bucket pointer repeats within the loop.", "id": 146273, "attachment_id": null, "creator": "nick@webthing.com", "creation_time": "2011-05-12T00:25:41Z", "time": "2011-05-12T00:25:41Z", "is_private": false}, {"count": 8, "tags": [], "text": "Hmm, don't know why it picked up APR 0.9.0 as version ....", "attachment_id": null, "id": 146274, "creator": "nick@webthing.com", "time": "2011-05-12T00:27:13Z", "bug_id": 51062, "creation_time": "2011-05-12T00:27:13Z", "is_private": false}, {"count": 9, "attachment_id": null, "bug_id": 51062, "text": "Trunk patch in r1102687", "id": 146307, "time": "2011-05-13T12:12:09Z", "creator": "nick@webthing.com", "creation_time": "2011-05-13T12:12:09Z", "tags": [], "is_private": false}]