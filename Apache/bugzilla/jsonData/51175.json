[{"count": 0, "tags": [], "bug_id": 51175, "text": "Created attachment 26976\nConverts all occurrences of autoboxing / auto-unboxing into explicit conversions.\n\nAs Autoboxing may cause some trouble during runtime, I propose to avoid it and use explicit conversions where needed. An example line of code for misunderstandings is this:\n\n[code]\nInteger index = 5;\nList<ExampleObjects> list = getExampleList();\nlist.remove(index);\n[/code]\n\nOne might expect to have element at index 5 removed from the list. But the API will call the method with signature List#remove(Object), so nothing happens. \n\nIf reading the code in terms of another issue, one can easily miss the difference and wonder why on earth the element at index 5 was not removed. \n\nTherefore, I added explicit conversion whereever I found autoboxing takes place in the XPWF classes. This includes a minor API change for two methods in XWPFDocument, where \"Integer\" was used as return type, while \"int\" is sufficient and fits better into the rest of the get-index-methods of XWPF.\n\nOf course, this is a matter of coding style. So this just a proposal.", "id": 146200, "attachment_id": 26976, "creator": "stefan.stern@mind8.com", "creation_time": "2011-05-09T09:41:26Z", "time": "2011-05-09T09:41:26Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 51175, "attachment_id": null, "id": 146203, "time": "2011-05-09T10:49:38Z", "creator": "apache@gagravarr.org", "creation_time": "2011-05-09T10:49:38Z", "is_private": false, "text": "I agree we should probably avoid returning Integer or Boolean from methods wherever possible. Possibly within the code too, but List<Integer> interchanging with int for example is one case where we probably don't want too much explicit code cluttering up.\n\nI'll try to review the patch shortly."}, {"count": 2, "tags": [], "bug_id": 51175, "attachment_id": null, "id": 146205, "time": "2011-05-09T11:45:04Z", "creator": "stefan.stern@mind8.com", "creation_time": "2011-05-09T11:45:04Z", "is_private": false, "text": "Whether to use or not to use Autoboxing, that is one of those issues that turn out to become religious conflicts. After I stumbled over the List API, I decided to avoid them. But yes, it tends to inflate the code. \n\nJust keep in mind, how easily the following lines can be misunderstood:\n\n[code]\nList<Integer> list = new ArrayList<Integer>();\n\nlist.add(0);\nlist.add(1); \nlist.add(2);\nlist.add(3);\nlist.add(2,4);\nlist.add(7);\n\nlist.remove(0);\nlist.remove(3);\nlist.remove(new Integer(3));\nlist.remove(7);\n[/code]\n\nJust my 2 cents. ;)"}, {"count": 3, "tags": [], "bug_id": 51175, "attachment_id": null, "is_private": false, "id": 146308, "time": "2011-05-13T12:22:52Z", "creator": "apache@gagravarr.org", "creation_time": "2011-05-13T12:22:52Z", "text": "Applied (with a few tweaks) in r1102691, thanks!"}]