[{"count": 0, "tags": [], "creator": "ranjix@hotmail.com", "attachment_id": null, "id": 137908, "time": "2010-06-25T12:43:19Z", "bug_id": 49505, "creation_time": "2010-06-25T12:43:19Z", "is_private": false, "text": "Hey guys, sorry for the bother. I ran into an issue with a fairly complicated case, in which I have a filter for jsp's, and I use a request wrapper in the respective filter. My request wrapper overrides setAttribute and getAttribute (does some internal management, not relying on the \"super\"), and I had the surprise to see that the setAttribute from my wrapper doesn't get called from the org.apache.catalina.core.ApplicationHttpRequest setAttribute, at least not for the \"special attributes\" (and I need the javax.servlet.include attributes, which Tomcat considers \"special\"). \n\nThe code that I find is problematic is copied underneath (the if(!setSpecial) part), and the question is \"why doesn't the getRequest.setAttribute get called ALL THE TIME\". The problem manifests when I do a jsp:include, and when the filter on the included jsp checks my wrapper, can't find the javax.servlet.include.* attributes. This is somewhat bothering, considering that I don't have this issue with Weblogic and Websphere, both do call my wrapper's set/getAttribute... \n\nthanks for any suggestion/\nranjix \n\n\np.s.\n\n\npublic  void setAttribute(String name,\n    Object value) \n{\n        if (name.equals(Globals.DISPATCHER_TYPE_ATTR)) {\n            dispatcherType = value;\n            return;\n        } else if (name.equals(Globals.DISPATCHER_REQUEST_PATH_ATTR)) {\n            requestDispatcherPath = value;\n            return;\n        }\n        if (!setSpecial(name, value)) {\n            getRequest().setAttribute(name, value);\n        }\n}"}, {"count": 1, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "id": 137924, "time": "2010-06-26T07:41:56Z", "bug_id": 49505, "creation_time": "2010-06-26T07:41:56Z", "is_private": false, "text": "My reading of the spec is that there is nothing mandating that these attributes must be set via a call to ServletRequest.setAttribute(). This looks to be one of those areas where implementations have some flexibility.\n\nYour wrapper should be able to call getAttribute() to determine if these attributes have been set.\n\nThe users list is the best place to get additional help with this."}, {"count": 2, "tags": [], "creator": "ranjix@hotmail.com", "attachment_id": null, "is_private": false, "id": 137939, "time": "2010-06-27T22:48:41Z", "bug_id": 49505, "creation_time": "2010-06-27T22:48:41Z", "text": "Thanks Mark, several issues. \n\n1. considering Tomcat is open-source and so, do you think it would be a big problem if I replace the code \n        if (!setSpecial(name, value)) {\n            getRequest().setAttribute(name, value);\n        }\nwith \n        setSpecial(name, value)); \n        getRequest().setAttribute(name, value);\n?\nIn my tests, my code seems to work fine with the modified version, is just that I might not realize all the implications of doing this. \n\n\n2. talking about specification. It's true that the spec doesn't state clearly that the attributes must be set using the wrapper's setAttribute, but one must wonder why that kind of overriding would be allowed, if not to be used by the container. In this particular case, the choice looks somewhat random (call setAttributes only on some attributes, but not on all), and is obviously limiting for the user. \n\nappreciate your help, \nRanjix"}, {"count": 3, "tags": [], "creator": "ranjix@hotmail.com", "attachment_id": null, "is_private": false, "id": 137940, "time": "2010-06-27T23:11:05Z", "bug_id": 49505, "creation_time": "2010-06-27T23:11:05Z", "text": "p.s. regarding \"Your wrapper should be able to call getAttribute() to determine if these attributes have been set.\"\n\nI do call the wrapper's getAttribute method to see if those attributes have been set, but they weren't (although I'm in an included jsp), since the setAttribute on the wrapper hasn't been called (because of the \"if setSpecial\" thing). \n\nhope it's more clear, thanks."}, {"text": "These are questions for the users list.", "tags": [], "bug_id": 49505, "attachment_id": null, "count": 4, "id": 137988, "time": "2010-06-29T10:42:57Z", "creator": "markt@apache.org", "creation_time": "2010-06-29T10:42:57Z", "is_private": false}, {"count": 5, "tags": [], "creator": "ranjix@hotmail.com", "attachment_id": null, "id": 138214, "time": "2010-07-06T10:44:14Z", "bug_id": 49505, "creation_time": "2010-07-06T10:44:14Z", "is_private": false, "text": "Thanks Mark, posted the question on the users list (and dev list) about a week ago (June 30), and up to now they were successfully ignored. Frankly must say I didn't expect anything else, either, that's why I thought that this avenue (bugzilla) might be a better way of actually getting an answer. \nAs far as you know, is there anybody specific that could answer the questions, or I should just drop trying to understand the reasoning behind the implementation and just do the modification anyway? \nthanks again, \nranjix"}, {"text": "Bugzilla is still not a support forum. Let me go look at your post to the users list.", "tags": [], "bug_id": 49505, "attachment_id": null, "count": 6, "id": 138217, "time": "2010-07-06T12:27:19Z", "creator": "markt@apache.org", "creation_time": "2010-07-06T12:27:19Z", "is_private": false}]