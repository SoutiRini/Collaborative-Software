[{"count": 0, "tags": [], "bug_id": 48470, "is_private": false, "text": "Tomcat 6.0.20 running as a service on 64 bit Windows 7 machine with a quad core\nprocessor hangs sporadically when stopping the service.\n\nThis is consistent on a variety of similar machines we have in our development\nlab. Tomcat 5.5.26 is rock solid while starting and stopping the service on same platforms. Definitely introduced in Tomcat 6 at some point.\n\nI tried a variety of JDK's and it appears that the Java Version make no difference as it still hangs while trying to stop service.\n\nIs this possibly fixed and has not been packaged into a new build yet.\n\nThanks", "id": 133259, "time": "2010-01-01T12:56:28Z", "creator": "pflahrty@rampageinc.com", "creation_time": "2010-01-01T12:56:28Z", "attachment_id": null}, {"count": 1, "attachment_id": null, "creator": "knst.kolinko@gmail.com", "text": "Please take two or more subsequent thread dumps from a \"hung\" Tomcat instance. Comparing them will show what threads are stuck and where.\n\nHere is a FAQ article:\n\nhttp://wiki.apache.org/tomcat/HowTo#How_do_I_obtain_a_thread_dump_of_my_running_webapp_.3F\n\n\n> Is this possibly fixed and has not been packaged into a new build yet.\n\nThe users@ list archives are searchable, if you are looking for other reports of the same problem.  I do not remember any, though.", "id": 133260, "time": "2010-01-01T16:07:25Z", "bug_id": 48470, "creation_time": "2010-01-01T16:07:25Z", "tags": [], "is_private": false}, {"count": 2, "tags": [], "bug_id": 48470, "attachment_id": null, "id": 133500, "time": "2010-01-11T06:41:15Z", "creator": "markt@apache.org", "creation_time": "2010-01-11T06:41:15Z", "is_private": false, "text": "Coincidently one of our customers saw a similar issue moving from 5.5.x to 6.0.x.\n\nI can't provide the stack traces but I can provide the analysis. It looks Tomcat is being stopped under load. In these circumstances, the connection created in unlockAccept() in the endpoint may get stuck in the TCP backlog queue. Since the connection in unlockAccept() is created without a timeout, this causes the shut down to block forever.\n\nTomcat 7 already has a configurable timeout for unlockAccept. I will look at porting this to Tomcat 6."}, {"count": 3, "attachment_id": 24827, "creator": "markt@apache.org", "is_private": false, "id": 133503, "time": "2010-01-11T08:10:35Z", "bug_id": 48470, "creation_time": "2010-01-11T08:10:35Z", "tags": [], "text": "Created attachment 24827\nProposed patch\n\nThis patch addresses the potential for the connector shutdown to block when Tomcat is shut down under load.\n\nIt also ensures localhost is used consistently for unlockAccept() if no specific address is provided for the connector. This should be compatible with systems that use ipv4 and/or ipv6."}, {"count": 4, "tags": [], "bug_id": 48470, "attachment_id": null, "id": 133504, "time": "2010-01-11T08:13:03Z", "creator": "markt@apache.org", "creation_time": "2010-01-11T08:13:03Z", "is_private": false, "text": "The attached patch has been proposed for 6.0.x\n\nNote the 5.5.x code is quite different in this area and the reports indicate that this issue affects 6.0.x but not 5.5.x."}, {"count": 5, "tags": [], "bug_id": 48470, "text": "*** Bug 47670 has been marked as a duplicate of this bug. ***", "id": 133510, "time": "2010-01-11T09:44:06Z", "creator": "markt@apache.org", "creation_time": "2010-01-11T09:44:06Z", "is_private": false, "attachment_id": null}, {"count": 6, "tags": [], "bug_id": 48470, "attachment_id": null, "id": 133527, "time": "2010-01-11T17:19:28Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2010-01-11T17:19:28Z", "is_private": false, "text": "attachment 24827 patch looks good, though I have not tried to run it yet.\n\n+1 to add \"Socket unlock completed for:\" debug message to AprEndpoint, like it is done in JIoEndpoint.\n\n\nRegarding s.setSoLinger(true, 0):\nI see that NioEndpoint of TC6 and all endpoint implementations of TC7 use\n s.setSoLinger(getSocketProperties().getSoLingerOn(), ...)\n\nThe default value of soLingerOn is based on Constants.DEFAULT_CONNECTION_LINGER constants (in o.a.coyote.http11 or in o.a.coyote.ajp) that is -1. Thus it will be false.\n\nI think that s.setSoLinger(true, 0) should be used in unlockAccept() for its dummy connection in all implementations of endpoint. Though I have not tested it."}, {"count": 7, "tags": [], "bug_id": 48470, "attachment_id": null, "id": 133564, "creation_time": "2010-01-13T02:30:43Z", "time": "2010-01-13T02:30:43Z", "creator": "markt@apache.org", "text": "The fix has been applied to 6.0.x and will be included in 6.0.23 onwards.", "is_private": false}]