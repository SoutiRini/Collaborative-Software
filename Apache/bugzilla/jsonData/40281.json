[{"count": 0, "tags": [], "bug_id": 40281, "attachment_id": null, "id": 92314, "time": "2006-08-17T19:41:38Z", "creator": "jglick@apache.org", "creation_time": "2006-08-17T19:41:38Z", "is_private": false, "text": "FileUtils.normalize throws an undocumented BuildException if passed a string\nsuch as \"/a/../../b\". Clearly it cannot normalize the \"..\" sequences. But IMHO\nit is better to simply leave the path alone in this case. For example, the\nreferenced NB bug refers to a build script which has\n\n<path id=\"...\">\n  <!-- try one thing -->\n  <pathelement location=\"lib/something.jar\"/>\n  <!-- if that was invalid, try another thing -->\n  <pathelement location=\"../../lib/something-else.jar\"/>\n</path>\n\nYou expect missing or invalid entries to simply be ignored, and that is what\nusually happens. But if the basedir of the project happens to be e.g. \"c:\\foo\"\nthen you will instead get\n\nCannot resolve path: c:\\foo\\..\\..\\lib\\something-else.jar\n\nwhich is true but not what you care about.\n\nPatch corrects this so normalize just quietly returns the unnormalized path."}, {"count": 1, "tags": [], "bug_id": 40281, "is_private": false, "id": 92316, "creation_time": "2006-08-17T20:21:17Z", "time": "2006-08-17T20:21:17Z", "creator": "jglick@apache.org", "text": "rev 432379", "attachment_id": null}]