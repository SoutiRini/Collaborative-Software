[{"count": 0, "tags": [], "creator": "ats37@hotmail.com", "text": "I have the following enhancement requests for the RollingFileAppender and \nDailyRollingFileAppender:\n\n1) allow RollingFileAppender to keep unlimited backups.\n2) to save time and effort renaming every backup file each time they roll, add \nan option to have the RollingFileAppender use the date & time of rolling for \nthe renamed file instead of a number e.g. mylog.20020805171622 (for 4:16:22 pm \n5th Aug '02) instead of mylog.1 (or, perhaps, .2002-08-05-17-16-22 to more \nclosely resemble the DailyRollingFileAppender's naming).\n3) to save storage space used by old log files, add an option to the \nRollingFileAppender to automatically compress (ideally as a zip file, or \nperhaps a choice of methods) the rolled files after renaming.\n4) as an alternative to keeping a certain (fixed) number of old backup files, \nadd an option to the RollingFileAppender for a maximum age of file to be kept \ninstead (so I can e.g. have it automatically delete any log files more than a \nweek old).  The timekeeping needn't be strict, just check each time a file is \nrolled.  Obviously, it should only be done for files whose initial filename \nmatches, since multiple appenders might be writing their files to the same \ndirectory.\n5) as well as an option for the maximum number of files to keep, add an option \nfor the minimum number.  This is useful in conjunction with the maximum age \noption to e.g. delete everything over a day old, but keeping at least the last \nthree backups even if they're older.\n6) it seems to me that the DailyRollingFileAppender does a similar job to the \nRollingFileAppender; the difference is the triggering condition, current time \nvs. size of log file.  In my opinion, the two could be usefully combined to \ngive an appender which rolls over based on either date/time or size depending \non the options specified.  This would allow DailyRollingFileAppender to take \nadvantage of the maxBackupIndex backup renaming, in addition to the features \ndescribed above.", "id": 20661, "time": "2002-08-05T16:35:32Z", "bug_id": 11474, "creation_time": "2002-08-05T16:35:32Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 11474, "attachment_id": null, "text": "Log4j 1.3 addresses this by splitting the rolling policy and sizing policy into \ntwo independent operations, both easily customizable for your enhancement \nrequests.  Accordingly, and since log4j 1.2 is now in maintenance mode, your \nrequest will not be done in 1.2.  If you'd like to download and test 1.3alpha, \nwe'd appreciate your feedback.", "id": 68262, "time": "2004-12-10T18:19:42Z", "creator": "yoavs@computer.org", "creation_time": "2004-12-10T18:19:42Z", "is_private": false}]