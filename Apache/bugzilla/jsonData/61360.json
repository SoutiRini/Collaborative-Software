[{"count": 0, "tags": [], "text": "Created attachment 35190\nA simple webapp to reproduce the problem\n\nSteps to reproduce the problem:\n1. Setup tomcat to serve https and http\n2. deploy attached directory (see README.txt inside)\n3. Open Chrome or FF, request the https resource, afterwards request the http resource. Watch the tomcat console, httpSession is reported to be null! \n4. If you first request http, then https and again http, it works fine (then http has http-session not null).\n\nWhat is the expected behavior?\nThe httpSession object in case of http should be not null.\nBut every reload of the http case, the http session is null. Only if you close and open the browser, then navigate to http, it is ok (not null).\n\nDoes this feature work correctly in other browsers?\n- It works correctly in MSIE 11.\n- In Firefox same problem as in Chrome.\n\nI reported this as a bug for Chrome (#749833) but Chrome developer say it's likely to be a Tomcat problem.", "attachment_id": 35190, "bug_id": 61360, "id": 200107, "time": "2017-07-29T19:41:14Z", "creator": "michael.enke@wincor-nixdorf.com", "creation_time": "2017-07-29T19:41:14Z", "is_private": false}, {"count": 1, "attachment_id": null, "bug_id": 61360, "text": "This is as a result of user agent behaviour.\n\nTomcat marks the session cookie for sessions created under https as secure. This ensures that user agents do not send session IDs for secure sessions over http.\n\nIn the http->https case\n- The first request creates a session and sets a non-secure session cookie\n- The browser sends this session cookie with the ws request\n- The second request continues to use the session cookie because sending a non-secure cookie over https is allowed\n- The wss request uses the non-secure session cookie for the same reason\n\nIn the https->http case\n- The first request creates a session and sets a secure session cookie\n- The browser sends this session cookie with the wss request (since secure cookies can be sent with https requests)\n- The second request continues does not use the session cookie because sending a secure cookie over http is not allowed. Tomcat creates a new session and sends the user agent a non-secure cookie for that session\n- The user agent ignores this cookie (I'm guessing so that it doesn't over-write the secure one in case of a switch back to https)\n- The ws request is also sent without a session cookie. Hence the WebSocket handshake does not see a session.", "id": 200113, "time": "2017-07-30T20:45:14Z", "creator": "markt@apache.org", "creation_time": "2017-07-30T20:45:14Z", "tags": [], "is_private": false}, {"count": 2, "tags": [], "bug_id": 61360, "text": "Thank you very much for the explanation!", "id": 200116, "time": "2017-07-31T07:24:04Z", "creator": "michael.enke@wincor-nixdorf.com", "creation_time": "2017-07-31T07:24:04Z", "is_private": false, "attachment_id": null}]