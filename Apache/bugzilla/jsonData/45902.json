[{"attachment_id": null, "tags": [], "bug_id": 45902, "is_private": false, "count": 0, "id": 121029, "time": "2008-09-26T12:56:47Z", "creator": "jglick@apache.org", "creation_time": "2008-09-26T12:56:47Z", "text": "If you follow the (rather complex) instructions in\n\nhttp://www.netbeans.org/nonav/issues/show_bug.cgi?id=142466\n\nyou can (sometimes) reproduce a regression in Ant 1.7.1; samples/admin/target/useradmin-shared.jar is recreated during incremental builds. The log for this <jar> task says\n\n....\nnet/java omitted as /tmp/genesis-3.1/samples/admin/target/useradmin-shared.jar:net/java/ is up to date.\nnet/java/dev omitted as /tmp/genesis-3.1/samples/admin/target/useradmin-shared.jar:net/java/dev/ is up to date.\nnet/java/dev/genesis omitted as /tmp/genesis-3.1/samples/admin/target/useradmin-shared.jar:net/java/dev/genesis/ is up to date.\n....\nnet omitted as /tmp/genesis-3.1/samples/admin/target/useradmin-shared.jar:net/ is up to date.\nnet/java omitted as /tmp/genesis-3.1/samples/admin/target/useradmin-shared.jar:net/java/ is up to date.\nnet/java/dev omitted as /tmp/genesis-3.1/samples/admin/target/useradmin-shared.jar:net/java/dev/ is up to date.\nnet/java/dev/genesis omitted as /tmp/genesis-3.1/samples/admin/target/useradmin-shared.jar:net/java/dev/genesis/ is up to date.\n....\nnet added as net/ is outdated.\nnet/java added as net/java/ is outdated.\nnet/java/dev added as net/java/dev/ is outdated.\nnet/java/dev/genesis added as net/java/dev/genesis/ is outdated.\n....\n\nThe problem occurs only when directories are added to the JAR file.\n\nUncommenting\n\n  if (target.isDirectory()) return false;\n\nfrom ResourceUtils.selectOutOfDateSources' ResourceSelector.isSelected impl causes the issue not to appear; the problem seems to relate to a ZipResource \".../admin/target/useradmin-shared.jar:net/\" always being OOD relative to a FileResource \".../admin/modules/shared/target/hibernate/net\".\n\nOf course uncommenting that line would regress performance of many tasks. I'm not sure why we are even checking timestamps on ZIP folders; surely these do not matter to begin with? There is\n\n  if (doFilesonly) resources = selectFileResources(resources);\n\nin Zip.java but I do not understand why this is conditional; seems to me that this should be run even if !doFilesonly. Making this unconditional might fix the issue for me; I am not sure because now I can no longer reproduce the original problem (seems to come and go).\n\nThe build script is too complex for me to follow. The problem may be ultimately due to some user error in the script. But I think I am out of my depth with the new resource collection code which I can barely follow.\n\n\nBTW (probably unrelated to this bug): peterreilly changed my code in SelectorUtils.isOutOfDate to create a sourceExists local variable - but it is unused! Perhaps there is a missing\n\n  if (!sourceExists) return false;\n\n?"}, {"count": 1, "tags": [], "creator": "jglick@apache.org", "is_private": false, "text": "I think I have a reproducible test case finally, after seeing it happen to me on my own build script:\n\n<project name=\"testant45902\" default=\"x\" basedir=\".\">\n    <target name=\"x\">\n        <delete dir=\"demo\"/>\n        <mkdir dir=\"demo/src/p\"/>\n        <touch file=\"demo/src/p/X.java\"/>\n        <touch file=\"demo/src/p/x.properties\"/>\n        <mkdir dir=\"demo/build\"/>\n        <copy todir=\"demo/build\">\n            <fileset dir=\"demo/src\" includes=\"**/*.java\"/>\n        </copy>\n        <sleep seconds=\"1\"/>\n        <echo>(first JAR task)</echo>\n        <jar jarfile=\"demo/jar.jar\">\n            <fileset dir=\"demo/build\"/>\n            <fileset dir=\"demo/src\" excludes=\"**/*.java\"/>\n        </jar>\n        <sleep seconds=\"1\"/>\n        <touch file=\"demo/src/p/y.properties\"/>\n        <sleep seconds=\"1\"/>\n        <delete file=\"demo/src/p/y.properties\"/>\n        <echo>(second JAR task)</echo>\n        <jar jarfile=\"demo/jar.jar\">\n            <fileset dir=\"demo/build\"/>\n            <fileset dir=\"demo/src\" excludes=\"**/*.java\"/>\n        </jar>\n        <sleep seconds=\"1\"/>\n        <echo>(third JAR task)</echo>\n        <jar jarfile=\"demo/jar.jar\">\n            <fileset dir=\"demo/build\"/>\n            <fileset dir=\"demo/src\" excludes=\"**/*.java\"/>\n        </jar>\n        <echo>(fourth JAR task)</echo>\n        <jar jarfile=\"demo/jar.jar\">\n            <fileset dir=\"demo/build\"/>\n            <fileset dir=\"demo/src\" excludes=\"**/*.java\"/>\n        </jar>\n    </target>\n</project>\n\ntmp$ /space/ant170/bin/ant -f testant45902.xml \nBuildfile: testant45902.xml\n\nx:\nDeleting directory /tmp/demo\nCreated dir: /tmp/demo/src/p\nCreating /tmp/demo/src/p/X.java\nCreating /tmp/demo/src/p/x.properties\nCreated dir: /tmp/demo/build\nCopying 1 file to /tmp/demo/build\n(first JAR task)\nBuilding jar: /tmp/demo/jar.jar\nCreating /tmp/demo/src/p/y.properties\nDeleting: /tmp/demo/src/p/y.properties\n(second JAR task)\n(third JAR task)\n(fourth JAR task)\n\nBUILD SUCCESSFUL\nTotal time: 4 seconds\n\ntmp$ /space/ant171/bin/ant -f testant45902.xml \nBuildfile: testant45902.xml\n\ntestant45902.x:\nDeleting directory /tmp/demo\nCreated dir: /tmp/demo/src/p\nCreating /tmp/demo/src/p/X.java\nCreating /tmp/demo/src/p/x.properties\nCreated dir: /tmp/demo/build\nCopying 1 file to /tmp/demo/build\n(first JAR task)\nBuilding jar: /tmp/demo/jar.jar\nCreating /tmp/demo/src/p/y.properties\nDeleting: /tmp/demo/src/p/y.properties\n(second JAR task)\nBuilding jar: /tmp/demo/jar.jar\n(third JAR task)\nBuilding jar: /tmp/demo/jar.jar\n(fourth JAR task)\nBuilding jar: /tmp/demo/jar.jar\n\nBUILD SUCCESSFUL\nTotal time: 4 seconds\n\nWhen running with -v under 1.7.1 you can see that <jar> is getting confused by directory timestamps:\n\n....\n(second JAR task)\np omitted as /tmp/demo/jar.jar:p/ is up to date.\np/X.java omitted as /tmp/demo/jar.jar:p/X.java is up to date.\np added as p/ is outdated.\np/x.properties omitted as /tmp/demo/jar.jar:p/x.properties is up to date.\nBuilding jar: /tmp/demo/jar.jar\n....\n\nIf I take by-the-second timestamp info in the demo dir after completion, I see\n\n19:26:47 build\n19:26:47 build/p\n19:26:47 build/p/X.java\n19:26:51 jar.jar\n19:26:47 src\n19:26:50 src/p\n19:26:47 src/p/X.java\n19:26:47 src/p/x.properties\n\nand inside jar.jar:\n\n19:26:52 META-INF/\n19:26:50 META-INF/MANIFEST.MF\n19:26:48 p/\n19:26:48 p/X.java\n19:26:48 p/x.properties\n", "id": 124411, "time": "2009-01-27T16:31:33Z", "bug_id": 45902, "creation_time": "2009-01-27T16:31:33Z", "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 45902, "attachment_id": null, "is_private": false, "id": 124413, "time": "2009-01-27T17:17:41Z", "creator": "jglick@apache.org", "creation_time": "2009-01-27T17:17:41Z", "text": "I think fixed in SVN rev 738330. Reviews welcome."}, {"count": 3, "tags": [], "creator": "bodewig@apache.org", "is_private": false, "text": "I have a few issues that I'm going to raise on the dev list.\n\nI've created an AntUnit test from your testcase: svn revision 738412", "id": 124417, "time": "2009-01-28T01:23:06Z", "bug_id": 45902, "creation_time": "2009-01-28T01:23:06Z", "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 45902, "attachment_id": null, "is_private": false, "id": 124418, "time": "2009-01-28T01:42:38Z", "creator": "bodewig@apache.org", "creation_time": "2009-01-28T01:42:38Z", "text": "http://marc.info/?l=ant-dev&m=123313502805580&w=2"}, {"count": 5, "tags": [], "bug_id": 45902, "attachment_id": null, "is_private": false, "id": 124472, "time": "2009-01-29T07:03:22Z", "creator": "bodewig@apache.org", "creation_time": "2009-01-29T07:03:22Z", "text": "*** Bug 29683 has been marked as a duplicate of this bug. ***"}, {"count": 6, "tags": [], "creator": "ejb@ql.org", "is_private": false, "text": "For what it's worth, I think I have a simpler way to reproduce this.\n\nCreate a/dir/1 and b/dir/2\n\nThen run ant twice with this build.xml:\n\n<project default=\"default\">\n <target name=\"default\">\n  <jar destfile=\"a.jar\">\n   <fileset dir=\"a\"/>\n   <fileset dir=\"b\"/>\n  </jar>\n </target>\n</project>\n\nWith 1.7.0, the second ant does correctly does nothing.  Verbose output:\n\n      [jar] dir omitted as /home/jberkenb/tmp/z/a.jar:dir/ is up to date.\n      [jar] dir/1 omitted as /home/jberkenb/tmp/z/a.jar:dir/1 is up to date.\n      [jar] dir omitted as /home/jberkenb/tmp/z/a.jar:dir/ is up to date.\n      [jar] dir/2 omitted as /home/jberkenb/tmp/z/a.jar:dir/2 is up to date.\n\nWith 1.7.1, the second ant rebuilds:\n\n      [jar] dir omitted as /home/jberkenb/tmp/z/a.jar:dir/ is up to date.\n      [jar] dir/1 omitted as /home/jberkenb/tmp/z/a.jar:dir/1 is up to date.\n      [jar] dir added as dir/ is outdated.\n      [jar] dir/2 omitted as /home/jberkenb/tmp/z/a.jar:dir/2 is up to date.\n      [jar] Building jar: /home/jberkenb/tmp/z/a.jar\n      [jar] adding directory META-INF/\n      [jar] adding entry META-INF/MANIFEST.MF\n      [jar] adding directory dir/\n      [jar] adding entry dir/1\n      [jar] adding entry dir/2\n\nNotice that the second time \"dir\" is checked, ant 1.7.1 just says that \"dir/\" is outdated, while ant 1.7.0 reports that \"/home/jberkenb/tmp/z/a.jar:dir/\" is up to date.\n\nMy current directory is /home/jberkenb/tmp/z as I run this....\n\nI'm not sure whether this is a manifestation of the same bug, but it would be great to see if it works with the fix applied to correct this bug.", "id": 127388, "time": "2009-05-25T13:52:27Z", "bug_id": 45902, "creation_time": "2009-05-25T13:52:27Z", "attachment_id": null}, {"count": 7, "attachment_id": null, "bug_id": 45902, "text": "Most likely you can just disregard my comment.  I see the posted test case is doing the same thing with the multiple jar tasks and creation of files/directories called from the test case.  My observation is that the problem happens when the same directory is added from two different filesets.  I'm not sure that explicit observation is of any use or not.", "id": 127389, "time": "2009-05-25T13:56:11Z", "creator": "ejb@ql.org", "creation_time": "2009-05-25T13:56:11Z", "tags": [], "is_private": false}, {"count": 8, "tags": [], "creator": "bodewig@apache.org", "is_private": false, "text": "svn revision 794215 should fix the dir timestamp issue for all except for the \"same directory comes from multiple sources\" case - which we have in our AntUnit test so it still fails.\n\nThe problem with directories from multiple sources is that Ant only adds the first directory encountered - and now preserves that timestamp - but may later find there are more recent directories in other places.\n\nThe way I intend to work on this is to perform some global sort on all directory resources making sure they get added in the right order and only the most recent timestamps get recorded - this is going to take some additional plumbing.\n\nThe same issue could come up with file timestamps but is less likely o happen since archives with multiple entries for the same file are less common (and you get a warning message in verbose mode anyway).", "id": 128864, "time": "2009-07-15T03:32:57Z", "bug_id": 45902, "creation_time": "2009-07-15T03:32:57Z", "attachment_id": null}, {"count": 9, "attachment_id": null, "bug_id": 45902, "text": "After coding the logic described in comment #8 I realized it was complicating the task even more, so I settled with a more humble goal.\n\nsvn revision 794255 (which will be followed by an extract method refactoring) will compare file timestamps and recreate the archive if new directories have been added.  It will record a directories timestamp but not compare it with the dir timestamps when updating an archive.", "id": 128873, "time": "2009-07-15T06:11:36Z", "creator": "bodewig@apache.org", "creation_time": "2009-07-15T06:11:36Z", "tags": [], "is_private": false}]