[{"attachment_id": null, "tags": [], "creator": "vonk.thijs@gmail.com", "text": "The Response.normalize(CharChunk cc) introduced in 7.0.28 introduced a bug.\nSee Bug ID 53062\n\nThe URL that is being encoded is:\n../../resources/org.apache.wicket.markup.html.WicketEventReference/wicket-event.js?w:lm=1340711670\nwhich causes a IllegalArgumentException in this method\n\njava.lang.IllegalArgumentException\n\tat org.apache.catalina.connector.Response.normalize(Response.java:1799)\n\tat org.apache.catalina.connector.Response.toAbsolute(Response.java:1732)\n\tat org.apache.catalina.connector.Response.encodeURL(Response.java:1242)\n\tat org.apache.catalina.connector.ResponseFacade.encodeURL(ResponseFacade.java:406)\n\tat org.apache.wicket.protocol.http.WebResponse.encodeURL(WebResponse.java:149)\n\tat org.apache.wicket.protocol.http.request.WebRequestCodingStrategy.encode(WebRequestCodingStrategy.java:387)\n\nRunning the same application in tomcat 7.0.27 and 6.0.18 works without issue", "count": 0, "id": 160262, "time": "2012-06-26T12:45:09Z", "bug_id": 53469, "creation_time": "2012-06-26T12:45:09Z", "is_private": false}, {"count": 1, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "text": "Your relative URL is not valid. The absolute URL will look something like:\n\nhttp://host:port/something/../../resources/etc\n\nThat relative URL is not valid since you can't go up a level once you get to the root of the host.\n\nPrevious versions of Tomcat did not include this check. Tomcat 7.0.28 onwards does.", "id": 160308, "time": "2012-06-27T19:24:01Z", "bug_id": 53469, "creation_time": "2012-06-27T19:24:01Z", "is_private": false}, {"text": "Hi Mark,\n\nI see there is no test case attached and one can only speculate but why do you think that the absolute url will have just 'something' in the servlet path ?\n\nIt could be 'something/else/here/../../resources/etc' and in this case it will be OK.\n\nThe reporter filed an issue in Wicket Jira too: https://issues.apache.org/jira/browse/WICKET-4645 and the pasted urls seem OK to me.\n\n@Jens: can you attach a simple application that demonstrates the failure so it should be easier for Tomcat devs to debug it.", "tags": [], "creator": "mgrigorov@apache.org", "attachment_id": null, "count": 2, "id": 160527, "time": "2012-07-09T12:20:07Z", "bug_id": 53469, "creation_time": "2012-07-09T12:20:07Z", "is_private": false}, {"attachment_id": null, "tags": [], "creator": "markt@apache.org", "text": "Because I tested it and included the tests in the Tomcat unit tests\n\nhttp://host:port/something/../../resources/etc\nfails\n\nhttp://host:port/soemthing/else/../../resources/etc\nworks", "count": 3, "id": 160529, "time": "2012-07-09T12:41:39Z", "bug_id": 53469, "creation_time": "2012-07-09T12:41:39Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 53469, "text": "OK, thanks!\n\nIn this case I'll let the reporter follow up with a test case that demonstrates the problem with the urls provided in Wicket Jira.", "id": 160530, "time": "2012-07-09T12:52:27Z", "creator": "mgrigorov@apache.org", "creation_time": "2012-07-09T12:52:27Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "creator": "vonk.thijs@gmail.com", "attachment_id": 29043, "text": "Created attachment 29043\nSample app source\n\nAccording to Martin in https://issues.apache.org/jira/browse/WICKET-4645\nThis still seems to be a tomcat issue.\n\nSo here's a sample app source. I'll attach the war as well.", "id": 160531, "time": "2012-07-09T13:51:05Z", "bug_id": 53469, "creation_time": "2012-07-09T13:51:05Z", "is_private": false}, {"attachment_id": null, "tags": [], "creator": "vonk.thijs@gmail.com", "text": "Not allowed to upload the war file.\n\nunzip the zip.\ninside test run: mvn clean package\ndeploy the target/test-1.war to tomcat\nhit it with http://localhost:8080/test-1, click the link and everything works \ndo the same with http://localhost:8080/test-1/testpage/param1/value1, then click the link and check the tomcat log...", "count": 6, "id": 160532, "time": "2012-07-09T14:02:34Z", "bug_id": 53469, "creation_time": "2012-07-09T14:02:34Z", "is_private": false}, {"attachment_id": null, "tags": [], "creator": "markt@apache.org", "text": "Both the Tomcat access log and Firebug show that the request when clicking on the link displayed on http://localhost:8080/test-1/testpage/param1/value1 is for:\n\nhttp://localhost:8080/test-1/?wicket:interface=:9:link::IBehaviorListener:0:2&random=0.9448873634935631\n\nThe application then attempts to generate a redirect from this page to:\nhttp://localhost:8080/test-1/../../?wicket:interface=:9::::\n\nThat redirect is not valid.", "count": 7, "id": 160534, "time": "2012-07-09T14:39:00Z", "bug_id": 53469, "creation_time": "2012-07-09T14:39:00Z", "is_private": false}, {"attachment_id": null, "tags": [], "creator": "emond.papegaaij@topicus.nl", "text": "The problem lies in the fact that encodeURL rewrites the url to absolute. I think this should only be done in encodeRedirectURL. Wicket also calls encodeURL to encode urls that are rendered in hrefs on the response page. Tomcat rewriting them to absolute breaks this badly. This is best illustrated by an example:\n\nSuppose you are at /a/b and you click a link to /a/b/c/d. This page contains a link to /1/2. Wicket renders all urls relative, so the link to /1/2 will be ../../../1/2 (it is relative to /a/b/c/d). This link will be passed to Response.encodeURL, which rewrites it to /a/../../../1/2, which obviously is wrong and fails.\n\nIf you go the other way: you are at /a/b/c/d and click a link to /a/b, which contains a link to /1/2, things go wrong in a different way. The link to /1/2, relative to /a/b, will be ../1/2. Tomcat will rewrite it to the absolute url /a/b/c/../1/2, which is normalized to /a/b/1/2. However, because I've got cookies enabled, isEncodeable returns false and the unencoded url is returned.", "count": 8, "id": 160687, "time": "2012-07-17T09:27:37Z", "bug_id": 53469, "creation_time": "2012-07-17T09:27:37Z", "is_private": false}, {"attachment_id": null, "tags": [], "creator": "markt@apache.org", "text": "(In reply to comment #8)\n> The problem lies in the fact that encodeURL rewrites the url to absolute. I\n> think this should only be done in encodeRedirectURL.\n\nThat is a fair point. We'll get that addressed for the next release. However...\n\n> Wicket also calls\n> encodeURL to encode urls that are rendered in hrefs on the response page.\n> Tomcat rewriting them to absolute breaks this badly.\n\nThat suggests something else is going on that I'd like to get to the bottom of.\n\n> Suppose you are at /a/b and you click a link to /a/b/c/d. This page contains\n> a link to /1/2. Wicket renders all urls relative, so the link to /1/2 will\n> be ../../../1/2 (it is relative to /a/b/c/d). This link will be passed to\n> Response.encodeURL, which rewrites it to /a/../../../1/2, which obviously is\n> wrong and fails.\n\nHuh? If you click a link to /a/b/c/d and the response contains a relative link ../../../1/2 then the result should be /a/b/c/../../../1/2 == /1/2 (i.e. relative to the current request). Why does Tomcat/Wicket think it should be relative to the previous request for /a/b ?", "count": 9, "id": 160766, "time": "2012-07-20T20:40:33Z", "bug_id": 53469, "creation_time": "2012-07-20T20:40:33Z", "is_private": false}, {"count": 10, "tags": [], "creator": "emond.papegaaij@topicus.nl", "attachment_id": null, "text": "(In reply to comment #9)\n> > Suppose you are at /a/b and you click a link to /a/b/c/d. This page contains\n> > a link to /1/2. Wicket renders all urls relative, so the link to /1/2 will\n> > be ../../../1/2 (it is relative to /a/b/c/d). This link will be passed to\n> > Response.encodeURL, which rewrites it to /a/../../../1/2, which obviously is\n> > wrong and fails.\n> \n> Huh? If you click a link to /a/b/c/d and the response contains a relative\n> link ../../../1/2 then the result should be /a/b/c/../../../1/2 == /1/2\n> (i.e. relative to the current request). Why does Tomcat/Wicket think it\n> should be relative to the previous request for /a/b ?\n\nThis has to do with the way Wicket renders links and handles requests. The link on /a/b, might look like ./b?2-1.ILinkListener-link. During processing of this link, user-code can send the user to /a/b/c/d. This causes the page for /a/b/c/d to be rendered as part of the request on /a/b?2-1.ILinkListener-link. The result of this request is a redirect to /a/b/c/d. The GET on this url simply fetches the rendered page from a buffer.", "id": 160816, "time": "2012-07-23T06:32:21Z", "bug_id": 53469, "creation_time": "2012-07-23T06:32:21Z", "is_private": false}, {"count": 11, "tags": [], "bug_id": 53469, "attachment_id": null, "id": 160873, "time": "2012-07-24T16:47:53Z", "creator": "markt@apache.org", "creation_time": "2012-07-24T16:47:53Z", "is_private": false, "text": "OK. I see what the problem is here. It isn't quite as clear cut as comment #8 suggests.\n\nTo determine if the URL should be encoded, Tomcat attempts the following checks:\na) is it not an intra-document reference\nb) is there a current session\nc) are cookies being used\nd) is URL re-writing permitted\ne) does the absolute URL match down to the context path\n\nThe problem is with check e). Now Tomcat normalizes any absolute URLs (a perfectly valid thing to do) then absolute URLs that fail normalization now fail the encoding process.\n\nNote that prior to the addition of normalization, check e) always passed for any relative URL. That is a bug that has gone unnoticed for many years. (With the addition of mormalization, it is now fixed).\n\nNote also that while Tomcat normalizes the URL for check e) it uses the original URL to construct the returned value.\n\nThe failed normalization is easily caught in Tomcat but it means that any URLs for which normalization fails will not have the session ID encoded in the URL.\n\nThis then comes back to what Wicket is trying to do. From your description, during the generation of the response to /a/b Wicket is pre-generating the content for /a/b/c/d and /a/b/c/d may contain links with relative URLs. It is the encoding of these URLs that is failing since Tomcat believes there are relative to the current request/response for /a/b rather than /a/b/c/d. This does seem a little unusual and not something that was anticipated by either the Tomcat developers or the Servlet EG.\n\nI'm not sure how to handle this. The Servlet specification does not state that relative URLs passed to encodeURL must be treated as relative to the current request/response but equally, what else could they be relative to? It is more clear cut for sendRedirect since Tomcat is required to return the absolute (and now normalized) URL.\n\nI am tempted to say the Wicket should be wrapping the HttpServletRequest during the generation of /a/b/c/d to return the correct URL and wrapping the HttpServletResponse to link it to the wrapped request although I'm not sure how well that would go down with the Wicket developers.\n\nAs a minimum, Tomcat needs to be patched to catch a normalization failure and simply not encode the URL in that case.\n\nThoughts, feedback and corrections welcome."}, {"count": 12, "tags": [], "bug_id": 53469, "text": "In my opinion, Tomcat should not convert relative URLs to absolute in encodeURL. That should only be done in encodeRedirectURL. encodeURL can still perform normalization, as long as it preserves relative URLs. For example, ./a/../b can be normalized to ./b, but it should not be converted into an absolute URL.", "id": 160890, "time": "2012-07-25T09:07:31Z", "creator": "emond.papegaaij@topicus.nl", "creation_time": "2012-07-25T09:07:31Z", "is_private": false, "attachment_id": null}, {"count": 13, "tags": [], "bug_id": 53469, "attachment_id": null, "id": 160892, "time": "2012-07-25T09:15:25Z", "creator": "mgrigorov@apache.org", "creation_time": "2012-07-25T09:15:25Z", "is_private": false, "text": "I agree with Emond.\nBy Servlet spec (actually the javadoc of javax.servlet.http.HttpServletResponse#sendRedirect) only #sendRedirect() should convert the url from relative to absolute. I think this is the place where URL normalization should happen.\n\nUsing HttpServletRequestWrapper in Wicket in an option but this will solve the problem only in Wicket. Every other framework or plain application may face the same problem."}, {"count": 14, "tags": [], "bug_id": 53469, "attachment_id": null, "id": 160908, "time": "2012-07-25T18:02:43Z", "creator": "markt@apache.org", "creation_time": "2012-07-25T18:02:43Z", "is_private": false, "text": "Folks, please re-read comment #11.\n\nThe output of encodeURL() is not and never will be normalized.\n\nHowever, the Javadoc for encodeURL() allows/requires Tomcat to check if the session needs to be encoded in the provided URL. One of the checks Tomcat uses is whether or not the URL provided to encodeURL() is part of the web application. To do this correctly Tomcat has to construct a absolute, normalized URL to check whether the resulting URL is within the web application. This requires converting relative URLs to absolute and the only basis Tomcat has for doing this is the current request URL.\n\nWicket is doing \"unusual\" things in pre-generating content for a different URL than the current one. This is causing problems for relative URLs. I have yet to find any evidence that any other framework does this. At the moment this looks like a Wicket specific issue.\n\nAs previously stated, I will be changing Tomcat so that if the \"is the URL part of the webapp\" test fails (e.g. because normalization fails) the result will be that the session ID is not added to the URL. That may or may not be sufficient to fix this for Wicket. Some feedback on this would be appreciated.\n\nIn terms of further fixing, I am leaning towards this being a Wicket specific issue (and hence a Wicket problem to fix) but I am open to contrary arguments."}, {"count": 15, "tags": [], "bug_id": 53469, "text": "Ok, things are getting more clear to me now. Isn't it better to assume that relative URLs always fall within the webapplication? The worst thing that could happen, is that a jsessionid gets appended where it was not needed, which I think is better than leave it out in cases where it should have been appended.\n\nThe specification is not clear at this point. For sendRedirect it is: \"If the location is relative without a leading '/' the container interprets it as relative to the current request URI.\". The absence of such a statement in the documentation of encodeURL indicates to me that it is not safe to make the assumption that relative URLs passed to encodeURL are relative to the current request. I think Tomcat should do the best it can without assuming anything that's not backed up by the documentation, even if it means that the outcome may be less than perfect.", "id": 160916, "time": "2012-07-26T07:05:11Z", "creator": "emond.papegaaij@topicus.nl", "creation_time": "2012-07-26T07:05:11Z", "is_private": false, "attachment_id": null}, {"count": 16, "tags": [], "bug_id": 53469, "attachment_id": null, "id": 160980, "time": "2012-07-29T20:35:37Z", "creator": "markt@apache.org", "creation_time": "2012-07-29T20:35:37Z", "is_private": false, "text": "I have fixed the IAE in trunk and 7.0.x.\n\nI am leaving this open while I wait for clarification from the Servlet EG as to how relative URLs passed to encodeURL should be treated.\n\nSee http://java.net/jira/browse/SERVLET_SPEC-43"}, {"count": 17, "tags": [], "bug_id": 53469, "text": "(In reply to comment #16)\n> I have fixed the IAE in trunk and 7.0.x.\n> \n> I am leaving this open while I wait for clarification from the Servlet EG as\n> to how relative URLs passed to encodeURL should be treated.\n> \n> See http://java.net/jira/browse/SERVLET_SPEC-43\n\nTomcat needs to be patched to catch a normalization failure and simply not encode the URL in that case.\n\nI totally agree with this solution. Has it been so fixed anywhere?\nMy webapplication generated something like this: \nhttps://localhost:3443/vcbs/../../../../../?wicket:interface=:18::::\nwhich absolutely failed the 'within-server-root' test after normalization.\n\nI look forward to this being patched in Tomcat.", "id": 161547, "time": "2012-08-20T22:29:40Z", "creator": "wanshoupu@hotmail.com", "creation_time": "2012-08-20T22:29:40Z", "is_private": false, "attachment_id": null}, {"count": 18, "tags": [], "creator": "mgrigorov@apache.org", "attachment_id": null, "text": "(In reply to comment #16)\n> I have fixed the IAE in trunk and 7.0.x.\n\nUnfortunately with this fix apps that work only with jsessionid encoded in the url will still break. If JSESSIONID is in a cookie then all is OK because Tomcat wont even try to normalize in this case. But if Tomcat is configured to always encode it in the url and the normalization fails then with this fix the relative url will not have the jsessionid and next request will be considered as not authenticated and depending on the application configuration it will most probably lead to a redirect to the login page.\n\nUnfortunately I don't see how to fix this in Wicket too. There is no way to inform the servlet container that there is a new base url which should be used for the resolving. The only solution is to configure the Wicket application to use REDIRECT_TO_RENDER strategy instead of REDIRECT_TO_BUFFER (the default one). With REDIRECT_TO_RENDER Wicket will make a http redirect before starting the render of the page responsible for /a/b/c/d.", "id": 161724, "time": "2012-08-27T08:27:25Z", "bug_id": 53469, "creation_time": "2012-08-27T08:27:25Z", "is_private": false}, {"count": 19, "tags": [], "text": "I think I found the solution. Wicket can pass always an absolute url to the web container for encoding. Wicket knows the current base url and can make it absolute safely. This way the web container will only try to normalize it but this will do nothing since there are no '../' in the passed absolute url. After encoding it Wicket can make it relative again and write it in the response.", "attachment_id": null, "id": 161725, "creator": "mgrigorov@apache.org", "time": "2012-08-27T11:55:28Z", "bug_id": 53469, "creation_time": "2012-08-27T11:55:28Z", "is_private": false}, {"count": 20, "tags": [], "bug_id": 53469, "attachment_id": null, "id": 162219, "time": "2012-09-16T18:22:11Z", "creator": "markt@apache.org", "creation_time": "2012-09-16T18:22:11Z", "is_private": false, "text": "Marking as NEEDINFO as I am waiting for a response from the Servlet EG."}, {"text": "At our current system we're getting the IllegalArgumentException when Tomcat tries to normalize such a relative url for a redirect.\n\njava.lang.IllegalArgumentException\n\tat org.apache.catalina.connector.Response.normalize(Response.java:1821)\n\tat org.apache.catalina.connector.Response.toAbsolute(Response.java:1741)\n\tat org.apache.catalina.connector.Response.encodeRedirectURL(Response.java:1210)\n\tat org.apache.catalina.connector.ResponseFacade.encodeRedirectURL(ResponseFacade.java:418)\n\tat javax.servlet.http.HttpServletResponseWrapper.encodeRedirectURL(HttpServletResponseWrapper.java:85)\n\tat javax.servlet.http.HttpServletResponseWrapper.encodeRedirectURL(HttpServletResponseWrapper.java:85)\n\tat org.apache.wicket.protocol.http.WebResponse.redirect(WebResponse.java:210)\n\tat org.apache.wicket.protocol.http.BufferedWebResponse.close(BufferedWebResponse.java:67)\n\nDo you think that this is related to this bug or to bug 53062?", "tags": [], "creator": "tino.kissig@exedio.com", "attachment_id": null, "count": 21, "id": 163023, "time": "2012-10-29T13:33:17Z", "bug_id": 53469, "creation_time": "2012-10-29T13:33:17Z", "is_private": false}, {"count": 22, "tags": [], "bug_id": 53469, "attachment_id": null, "id": 163025, "time": "2012-10-29T13:37:49Z", "creator": "mgrigorov@apache.org", "creation_time": "2012-10-29T13:37:49Z", "is_private": false, "text": "Wicket has a fix in versions 1.5.9 (not released yet) and 6.1.0.\nWhich version do you use ?"}, {"count": 23, "tags": [], "bug_id": 53469, "text": "(In reply to comment #22)\n> Wicket has a fix in versions 1.5.9 (not released yet) and 6.1.0.\n> Which version do you use ?\n\nUnfortunately we still use 1.4.18 and don't have the resources yet to upgrade to 1.5.x or even 6.x.", "id": 163026, "time": "2012-10-29T13:39:24Z", "creator": "tino.kissig@exedio.com", "creation_time": "2012-10-29T13:39:24Z", "is_private": false, "attachment_id": null}, {"count": 24, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "text": "The Servlet EG has confirmed that Tomcat's current behaviour is correct. Relative URLs are relative to the current request. They are not assumed to be part of the web application.\n\nI'm marking this as fixed as the IAE that originally triggered this issue has been fixed.", "id": 165140, "time": "2013-02-09T09:37:24Z", "bug_id": 53469, "creation_time": "2013-02-09T09:37:24Z", "is_private": false}]