[{"count": 0, "tags": [], "bug_id": 36590, "attachment_id": null, "text": "Using the following rule:\nRewriteCond %{QUERY_STRING} (.+)\nRewriteRule ^(.*\\.html)$ $1@%1 [T=text/html]\n\nTo convert some urls like this:\nhttp://example.com/index.html?image.jpg\nto access files like this (produced by a batch downloading tool):\nindex.html@image.jpg\nthe rewrite rule needs the T option because otherwise apache will send a jpg\nmime type, based on the file name.\n\nThe log for this rewrite is:\n[rid#aa1218/initial] (3) [per-dir /tmp/www/] strip per-dir prefix:\n/tmp/www/test/index.html -> test/index.html\n[rid#aa1218/initial] (3) [per-dir /tmp/www/] applying pattern '^(.*\\.html)$' to\nuri 'test/index.html'\n[rid#aa1218/initial] (2) [per-dir /tmp/www/] rewrite test/index.html ->\ntest/index.html@image.jpg\n[rid#aa1218/initial] (3) [per-dir /tmp/www/] add per-dir prefix:\ntest/index.html@image.jpg -> /tmp/www/test/index.html@image.jpg\n[rid#aa1218/initial] (2) [per-dir /tmp/www/] remember\n/tmp/www/test/index.html@image.jpg to have MIME-type 'text/html'\n[rid#aa1218/initial] (2) [per-dir /tmp/www/] strip document_root prefix:\n/tmp/www/test/index.html@image.jpg -> /hcStore/8x10/index.html@image.jpg\n[rid#aa1218/initial] (1) [per-dir /tmp/www/] internal redirect with\n/hcStore/8x10/index.html@image.jpg [INTERNAL REDIRECT]\n[rid#ab0208/initial/redir#1] (3) [per-dir /tmp/www/] strip per-dir prefix:\n/tmp/www/test/index.html@image.jpg -> test/index.html@image.jpg\n[rid#ab0208/initial/redir#1] (3) [per-dir /tmp/www/] applying pattern\n'^(.*\\.html)$' to uri 'test/index.html@image.jpg'\n[rid#ab0208/initial/redir#1] (1) [per-dir /tmp/www/] pass through\n/tmp/www/test/index.html@image.jpg\n\nNote the lack of a log entry indicating that the forced mime type is actually\nbeing set, which should be in the redir#1 block. livehttpheaders confirmed the\nforced mime type did not find its way to the browser.\n\nA couple of extra log points in hook_mimetype showed that it wasn't finding the\nforce mime type note for the request. This is probably because we are on a new\nrequest second time through (the internal redirect), and so we should be using\nr->prev->notes instead of r->notes. Potentially the forced mime type could be a\ncouple of redirects back, so all previous requests should probably(?) be checked\nuntil one is found, or we have been through them all.\n\nI'd suggest something like this as a possible fix (works fine for me):\nstatic int hook_mimetype(request_rec *r)\n{\n    const char *t;\n    request_rec *p = r;\n\n    /* now check if we have to force a MIME-type */\n    while (p) {\n        t = apr_table_get(p->notes, REWRITE_FORCED_MIMETYPE_NOTEVAR);\n        if (t != NULL) {\n            rewritelog(r, 1, \"force filename %s to have MIME-type '%s'\",\n                       r->filename, t);\n            ap_set_content_type(r, t);\n            return OK;\n        }\n        p = p->prev;\n    }\n    return DECLINED;\n}\n\nRichard.", "id": 79759, "time": "2005-09-10T14:38:31Z", "creator": "richardaburton@hotmail.com", "creation_time": "2005-09-10T14:38:31Z", "is_private": false}, {"count": 1, "tags": [], "creator": "nd@perlig.de", "text": "Whether this is a bug or not depends on the point of view. It may be desired\nthat the internal redirect is run without a memory.\nI'd leave the behavior as is, because otherwise it could break many existing\nstuff out there.\n\nI suggest you setup a second rule, which matches for the 'html@' stuff and\nforces the mime type then (without changing the url so no redirect occurs).\nNote that your problem doesn't happen, when the rules are executed in server\ncontext, because there no redirect happens at all.", "id": 79761, "time": "2005-09-10T14:55:37Z", "bug_id": 36590, "creation_time": "2005-09-10T14:55:37Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "creator": "richardaburton@hotmail.com", "attachment_id": null, "id": 79762, "time": "2005-09-10T15:28:20Z", "bug_id": 36590, "creation_time": "2005-09-10T15:28:20Z", "is_private": false, "text": "From the point of view of mod_rewrite working as documented it is definitely a bug.\n\nThis memory effect would only be for setting the mime type based on a previous\nrewrite having taken place. And only where a user supplied rewrite rule has\nexplicitly requested this mime type override. It doesn't cause any memory for\nany other part of an internal redirect processing. Can you suggest anywhere this\nchange could be a problem? I can't think of one, though I obviously don't know\nit as well as you do.\n\nIf you still think the risk in fixing this is too high, perhaps it could be\nchanged in 2.1?\n\nOr even failing that this bug should be passed to Documentation because the\nmanual is wrong. Even the example php source rewrite rule in the doc doesn't\nwork if used in a .htaccess file. If this feature is not available and needs to\nbe worked around for per directory config it needs to be explained in the\ndocumentation."}, {"count": 3, "tags": [], "bug_id": 36590, "attachment_id": null, "id": 90055, "creation_time": "2006-06-11T06:15:40Z", "time": "2006-06-11T06:15:40Z", "creator": "adelton@fi.muni.cz", "text": "> If you still think the risk in fixing this is too high, perhaps it could be\n> changed in 2.1?\n\nThe problem is still present in version 2.2.2. Any idea how this issue\ncould be resolved?\n\nWe'd either need a fix of code, or a fix of documentation stating that\nif the Rewrite Rule changes the file name or URI, leading to an internal\nredirect, the forced MIME-Type will be lost.", "is_private": false}, {"text": "Would it be possible to leave T|type and add a FT|ForceType that is remembered\nafter redirection? It would be really handy, since we store uploads as UUID\nstrings and keep meta-data, like original filename and mimetype, in a database.\nHaving the ability to do a rewrite to the UUID file whilst preserving the\nmimetype and original filename would be a valuable feature.", "tags": [], "bug_id": 36590, "attachment_id": null, "count": 4, "id": 100507, "time": "2007-03-17T05:38:22Z", "creator": "tony@awtrey.com", "creation_time": "2007-03-17T05:38:22Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 36590, "text": "I'm according with Richard Antony Burton, from the point of view of mod_rewrite \nworking as documented it is definitely a bug.\n\nAdditionally the solution Andr\u00e9 Malo's solution does not work for me:\n\n<Directory />\nRewriteEngine On\nRewriteRule (.+\\.html)$ $1.gz\nRewriteRule . - [T=text/html,L]\n</Directory>\n\nResult:\nContent-Type: application/x-gzip\n\nExpected result:\nContent-Type: test/html\n\nLast RewriteLog line:\nforce filename redirect:/dir/file.html.gz to have MIME-type 'text/html'\n", "id": 106813, "attachment_id": null, "creator": "arnaud.lb@gmail.com", "creation_time": "2007-08-15T19:00:12Z", "time": "2007-08-15T19:00:12Z", "is_private": false}, {"count": 6, "attachment_id": null, "bug_id": 36590, "is_private": false, "id": 133563, "time": "2010-01-13T00:39:44Z", "creator": "suit@rebell.at", "creation_time": "2010-01-13T00:39:44Z", "tags": [], "text": "Changed to Version 2.2.3 - Problem still exists here too (Red Hat)\n\nTestcase:\n\nAddHandler php5-script .css\nRewriteEngine On\nRewriteRule ^(.+\\.css)$ $1 [T=text/css]\n\nResult:\nContent-Type: text/html\n\nExpected:\nContent-Type: text/css"}, {"count": 7, "tags": [], "bug_id": 36590, "attachment_id": null, "id": 135134, "time": "2010-03-07T10:50:23Z", "creator": "quanxunzhen@gmail.com", "creation_time": "2010-03-07T10:50:23Z", "is_private": false, "text": "This bug is also trouble me.\n\nIf I use the following rule:\nRewriteCond %{REQUEST_URI} \\.t$\nRewriteRule ^(.*)\\.t$ $1 [T=text/html]\n\nThe flag T will never work. But when I modify it to the following rule:\nRewriteCond %{REQUEST_URI} \\.t$\nRewriteRule ^(.*)\\.t$ $1\nRewriteRule . - [T=text/html]\n\nThen, the Content-Type in header is set properly.\n\nBut now, I need a more flexible rewrite rule that I can set the MIME-Type in the request url, so I modify it again to:\nRewriteCond %{REQUEST_URI} \\.t$\nRewriteRule ^([a-zA-Z]+/[a-zA-Z-]+)/(.*)\\.t$ $2 [E=MIMETYPE:$1]\nRewriteRule . - [T=%{ENV:MIMETYPE}]\n\nBut it doesn't work anymore.\n\nAccording to your explanation above, the last rule should not lead to a internal redirect because it changes nothing but the mimetype like the previous one. But they behave quite differently!"}, {"count": 8, "tags": [], "creator": "covener@gmail.com", "text": "> If I use the following rule:\n> RewriteCond %{REQUEST_URI} \\.t$\n> RewriteRule ^(.*)\\.t$ $1 [T=text/html]\n> \n> The flag T will never work. But when I modify it to the following rule:\n\nThat's because you're in per-directory context and by changing the URL you've asked Apache to recalculate all of this.\n\n> RewriteCond %{REQUEST_URI} \\.t$\n> RewriteRule ^(.*)\\.t$ $1\n> RewriteRule . - [T=text/html]\n> \n> Then, the Content-Type in header is set properly.\n> \n> But now, I need a more flexible rewrite rule that I can set the MIME-Type in\n> the request url, so I modify it again to:\n> RewriteCond %{REQUEST_URI} \\.t$\n> RewriteRule ^([a-zA-Z]+/[a-zA-Z-]+)/(.*)\\.t$ $2 [E=MIMETYPE:$1]\n> RewriteRule . - [T=%{ENV:MIMETYPE}]\n\nThe condition looks completely unnecessary, which makes me think you'd benefit from discussing your config, with a rewritelog, on the users list.\n\n\n> \n> But it doesn't work anymore.\n> \n> According to your explanation above, the last rule should not lead to a\n> internal redirect because it changes nothing but the mimetype like the previous\n> one. But they behave quite differently!\n\nIt could be failing to do what you want for any number of reasons.  Primarily, you need to make sure that T= rule runs in a round of rewrite processing that on the whole does not do a substitution -- not just in the one rule with the T=.", "id": 135135, "time": "2010-03-07T12:18:14Z", "bug_id": 36590, "creation_time": "2010-03-07T12:18:14Z", "is_private": false, "attachment_id": null}, {"count": 9, "tags": [], "creator": "covener@gmail.com", "attachment_id": null, "id": 135136, "time": "2010-03-07T12:36:38Z", "bug_id": 36590, "creation_time": "2010-03-07T12:36:38Z", "is_private": false, "text": "This was already documented in trunk and is now documented in 2.2.x.   I enhanced it a bit.\n\nConfiguration assistance is available via the users mailing list, not bugzilla."}]