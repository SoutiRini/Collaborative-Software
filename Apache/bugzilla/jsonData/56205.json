[{"count": 0, "tags": [], "bug_id": 56205, "text": "Created attachment 31358\n[PATCH] Upgrade OOXML schema to 3rd edition (transitional)\n\nThe currently used OOXML schema is a bit outdated and therefore hasn't got a few of the recently added Office features (e.g. XSSF sheetProtection is missing a few attributes).\n\nThe ECMA site [1] has already provided a 4th edition of the schemas.\nAfter fiddling around a bit with the schemas, I think it's ok to use the 3rd edition of the transitional schema, as its main incompatibility (to the 1st edition) are length and percent definitions. The 4th edition would cause much more changes in the current POI codebase.\n\nAlthough the testcases run through with some modifications, I'm not sure about the impact, which this patch would have on users code, especially when the xmlbeans classes are used directly.\n\nTherefore I'd like to discuss in this entry, if features which aren't covered by the 1st edition schema, should be created dynamically without a backing schema or if it's ok to potentially break user code which works with the internal xml representation.\n\n\n[1] http://www.ecma-international.org/publications/standards/Ecma-376.htm", "id": 173573, "time": "2014-03-03T00:29:51Z", "creator": "kiwiwings@apache.org", "creation_time": "2014-03-03T00:29:51Z", "is_private": false, "attachment_id": 31358}, {"count": 1, "tags": [], "text": "If we use the newer schemas, how does that change what we output? Will it mean that the files we generate stop being compatible with older office versions?\n\nHow about input? Will it mean we stop being able to read files generated by older versions of POI, or older versions of office?", "is_private": false, "id": 173576, "creation_time": "2014-03-03T10:07:05Z", "time": "2014-03-03T10:07:05Z", "creator": "apache@gagravarr.org", "bug_id": 56205, "attachment_id": null}, {"count": 2, "tags": [], "creator": "kiwiwings@apache.org", "attachment_id": null, "text": "I thought about comparing the schemas, but the changes are substantially, so that doesn't work.\n\nSo the next try was to check the poi examples and their output, XSSF and XSLF looked ok, but XWPF has some problems (e.g. the SimpleDocument example looks not ok).\nSo the patch needs some rework, especially as most changes were in the XWPF part.\n\nApart of the junit test I haven't checked input processing yet.\n\nThere are some infos about the compatibility on this office article [1] - note the line: \"... writes files conformant to ISO/IEC 29500 Transitional ...\", but when you look into the details (e.g. [2] as an example for the other affected percent attributes), you see that although it's able to read an alternative format, it writes the legacy format. \n\nAs far as I have checked the changes for length/percent attributes, it depends on POI if the resulting file can be read by versions < 2010, e.g. if measurement units are used in length attributes, the file probably can't be read anymore by versions < 2010. Therefore we would need to take care when populating new attributes to stick with the legacy format, if possible.\n\nThe new \"sharedTypes\" namespace [3] seems to stay out of the resulting file.\n\nSo I guess in the end, it's a trade off \n- using a new schema and potentially using/introducing features which can be only used in newer Office versions\n- vs. having the greatest common format, i.e. a schema which only allows one kind of attribute content\n\n> If we use the newer schemas, how does that change what we output? Will it mean that the files we generate stop being compatible with older office versions?\nThat depends, if we use the new features\n\n> How about input? Will it mean we stop being able to read files generated by older versions of POI, or older versions of office?\nThe 3rd transitional schema should be compatible to the 1st edition - but there are certain features like VML, which are phased out.\n\n\n[1] http://msdn.microsoft.com/en-US/library/office/gg607163(v=office.14).aspx\n[2] http://msdn.microsoft.com/en-us/library/gg548598(v=office.12).aspx\n[3] http://schemas.openxmlformats.org/officeDocument/2006/sharedTypes", "id": 173612, "time": "2014-03-04T00:41:50Z", "bug_id": 56205, "creation_time": "2014-03-04T00:41:50Z", "is_private": false}, {"count": 3, "tags": [], "text": "Created attachment 31383\n[PATCH] Upgrade OOXML schema to 3rd edition (transitional)\n\nok, the SimpleDocument test was a false positive error (or whatever you call it).\nThe generated document only differs in the few STOnOff attributes and will be displayed the same in the MS Word View irrespective of the schema version.\nBut when viewed in Libre Office, both versions are broken.\n\nApart of the poi examples, I did a png-rendering of the themes.pptx and this looks also ok, so the unit conversions should be ok.\n\nI've changed some unit calculation, to use the dxa call.", "is_private": false, "id": 173783, "creation_time": "2014-03-12T23:24:42Z", "time": "2014-03-12T23:24:42Z", "creator": "kiwiwings@apache.org", "bug_id": 56205, "attachment_id": 31383}, {"attachment_id": 32894, "tags": [], "bug_id": 56205, "text": "Created attachment 32894\nI have attached the MS Word 2013 for testing purpose.\n\nBelow link explains about the error.\n\nhttp://apache-poi.1045710.n5.nabble.com/Apache-POI-is-not-supporting-MS-Word-2013-Strict-Open-XML-Document-docx-td5719328.html#a5719338", "count": 4, "id": 183973, "time": "2015-07-09T15:35:29Z", "creator": "rathna.m@sap.com", "creation_time": "2015-07-09T15:35:29Z", "is_private": false}, {"attachment_id": null, "tags": [], "bug_id": 56205, "text": "Hi Rathna,\nWe don't support Strict OOXML documents. See https://bz.apache.org/bugzilla/show_bug.cgi?id=57699.", "count": 5, "id": 201486, "time": "2017-10-16T17:33:53Z", "creator": "fanningpj@yahoo.com", "creation_time": "2017-10-16T17:33:53Z", "is_private": false}]