[{"count": 0, "tags": [], "bug_id": 49653, "attachment_id": 25806, "id": 138689, "time": "2010-07-27T07:35:42Z", "creator": "geraldspam@gmail.com", "creation_time": "2010-07-27T07:35:42Z", "is_private": false, "text": "Created attachment 25806\nThe cell values of F3 and F4 aren't read correctly\n\nWhen reading a string cell value from excel (see attached xslx file) the line break is read as _x000D_.\n\nThe code below with the provided excel sheet can be used to reproduce this (3.7 Beta 1)\n\nInputStream xlsInputStream = new FileInputStream(new File(\n        \"f:\\\\vfs\\\\UnReadableStrings.xlsx\"));\n    Workbook wb = new XSSFWorkbook(OPCPackage.open(xlsInputStream));\n    \n    Sheet sheet = wb.getSheetAt(wb.getActiveSheetIndex());\n    Row row = sheet.getRow(2);\n    Cell cell = row.getCell(5);\n    System.out.println(cell.getStringCellValue());\n    \n    row = sheet.getRow(3);\n    cell = row.getCell(5);\n    System.out.println(cell.getStringCellValue());\n\nOutput: \n1\u884c\u76ee_x000D_2\u884c\u76ee\n1\u884c\u76ee_x000D_\n2\u884c\u76ee"}, {"count": 1, "tags": [], "bug_id": 49653, "attachment_id": null, "id": 138701, "time": "2010-07-28T01:52:37Z", "creator": "yegor@dinom.ru", "creation_time": "2010-07-28T01:52:37Z", "is_private": false, "text": "fixed in r979952\n\nAccording to the OOXML spec, for all characters which cannot be represented in XML, the characters are escaped using the Unicode numerical character representation escape character format _xHHHH_, where H represents a hexadecimal character in the character's value. In your case _x000D_ is converted into the carriage-return (\\r) character. \n\nYegor"}]