[{"count": 0, "tags": [], "text": "Overview:\nStored Procedure using CLOB or BLOB with oracle driver & spring framework crashes software upon insert.\n\nActual Results:\nThe application crashes with a 500 internal server error\n\nExpected Results:\nCLOB or BLOB data should be inserted into database and application should not crash.\n\nOccurs Also on Builds: 5.0.30 and 5.0.31\n\nDoesn't Occur on Builds: 6.0.20 and 6.0.26\n\nThe error log is below. I thought that this error was gone with Tomcat 6.x, yet it has reappeard in 6.0.29. I have concluded that the error has to do with the DBCP library that Tomcat uses. Therefore, i replaced the 6.0.29 tomcat-dbcp.jar (243 KB) with the 6.0.26 tomcat-dbcp.jar (227 KB) and the error does not occur. I would like to make development aware that this error has come back and i hope that this error does not make it to Tomcat 7. Thank you. Johnny Coder\n\nat oracle.sql.BLOB.createTemporary(BLOB.java:587)\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n        at java.lang.reflect.Method.invoke(Method.java:597)\n        at org.springframework.jdbc.support.lob.OracleLobHandler$OracleLobCreator.prepareLob(OracleLobHandler.java:393)\n        at org.springframework.jdbc.support.lob.OracleLobHandler$OracleLobCreator.createLob(OracleLobHandler.java:340)\n        at org.springframework.jdbc.support.lob.OracleLobHandler$OracleLobCreator.setBlobAsBinaryStream(OracleLobHandler.java:243)\n        at my.application.attachment.dao.JdbcAttachmentDao$1.setValues(JdbcAttachmentDao.java:58)\n        at org.springframework.jdbc.core.JdbcTemplate$2.doInPreparedStatement(JdbcTemplate.java:796)\n        at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:591)\n        at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:792)\n        at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:850)\n        at my.application.attachment.dao.JdbcAttachmentDao.uploadAttachment(JdbcAttachmentDao.java:44)\n        at my.application.attachment.biz.AttachmentManager.uploadAttachment(AttachmentManager.java:32)\n        at my.application.attachment.util.ImportAttachment.importFile(ImportAttachment.java:35)\n        at my.application.attachment.util.UploadAttachmentServlet.handle(UploadAttachmentServlet.java:59)\n        at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:875)\n        at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)\n        at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)\n        at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:637)\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:717)\n        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)\n        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n        at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)\n        at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)\n        at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)\n        at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)\n        at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)\n        at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:298)\n        at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:857)\n        at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:588)\n        at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:489)\n        at java.lang.Thread.run(Thread.java:619)", "attachment_id": null, "bug_id": 50387, "id": 142215, "time": "2010-11-30T15:41:40Z", "creator": "beau.hutcheson@thomsonreuters.com", "creation_time": "2010-11-30T15:41:40Z", "is_private": false}, {"count": 1, "tags": [], "text": "tomcat-dbcp.jar is nothing more than a repacked/renamed version of commons-dbcp and commons-pool libraries from http://commons.apache.org/  so this bug should be one of theirs (though I suspect that it is oracle.sql.BLOB to blame here).\n\nNote, that\n1) versions of the libraries that were used to built a Tomcat release can be found in the \"build.properties.default file\" in the sources,\n2) you can use any other version of DBCP & POOL libraries, by placing both of them into lib folder and setting \"factory\" attribute on a <Resource>.\n\nhttps://issues.apache.org/bugzilla/show_bug.cgi?id=50326#c2", "attachment_id": null, "id": 142216, "creator": "knst.kolinko@gmail.com", "time": "2010-11-30T16:06:53Z", "bug_id": 50387, "creation_time": "2010-11-30T16:06:53Z", "is_private": false}, {"count": 2, "tags": [], "text": "Just a thought: \n\nthe stack trace does not show the actual error message, but given that the error is in the method \"createTemporary\", could the Oracle code be trying to create a temporary file to hold the BLOB? \n\nIf so, maybe it is a file permission problem - which just happens to be associated with the failing installations?", "is_private": false, "bug_id": 50387, "id": 142239, "time": "2010-12-01T05:45:33Z", "creator": "sebb@apache.org", "creation_time": "2010-12-01T05:45:33Z", "attachment_id": null}]