[{"count": 0, "attachment_id": null, "bug_id": 27739, "text": "executing the following statement in an external sql file fails\n\nINSERT INTO mandator (mandator_id, mandator_name, description) VALUES (0,'--','');\n\nwhereas \n\nINSERT INTO mandator (mandator_id, mandator_name, description) VALUES (0,'test','');\n\nor \n\nINSERT INTO mandator (mandator_id, mandator_name, description) VALUES\n(0,'-'||'-','');\n\nworks well! \n\n[sql] Failed to execute:   INSERT INTO mandator (mandator_id, mandator_name,\ndescription) VALUES (0,'--','');\n[sql] java.sql.SQLException: ORA-00911: invalid character\n\ntested with Oracle9i 8.1.7.1  and 9.2.0.3 JDBC Drivers\n\nant section:\n\n<target name=\"create_db\" >\n  <sql\n    driver=\"oracle.jdbc.driver.OracleDriver\"\n    url=\"jdbc:oracle:thin:@london:1521:oracle\"\n    userid=\"test\"\n    password=\"test\"\n    onerror=\"continue\"\n    src=\"${app.home}/database/create_db_user/test.sql\">\n    <classpath>\n\t  <pathelement location=\"${app.home}/lib/classes12.zip\"/>\n    </classpath>\n  </sql>", "id": 54141, "time": "2004-03-17T13:05:07Z", "creator": "ElmarKeck@hotmail.com", "creation_time": "2004-03-17T13:05:07Z", "tags": [], "is_private": false}, {"count": 1, "tags": [], "creator": "stevel@apache.org", "text": "A lot of SQL systems take -- as the beginning of a comment. Some (eg MySQL want\n\"-- \", but it looks like here oracle wants -- on its own. \n\nI am therefore going to mark this as invalid, unles there is some kind of\nescaping trick you want to do that the SQL command is preventing. ", "id": 54151, "time": "2004-03-17T15:28:47Z", "bug_id": 27739, "creation_time": "2004-03-17T15:28:47Z", "is_private": false, "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 27739, "is_private": false, "count": 2, "id": 54206, "time": "2004-03-18T09:27:46Z", "creator": "ElmarKeck@hotmail.com", "creation_time": "2004-03-18T09:27:46Z", "text": "I do not think that inserting strings like '--', or '----' is illegal.\n\nPerforming this statement via the Java tool DBVisiualizer or Oracle SQL Plus, ...\nworks well.\n\nWhy is the ant parser not ignoring any comment tokens inside an sql argument?    \n \n"}, {"count": 3, "tags": [], "creator": "ElmarKeck@hotmail.com", "text": "ref. Comment", "id": 54207, "time": "2004-03-18T09:31:06Z", "bug_id": 27739, "creation_time": "2004-03-18T09:31:06Z", "is_private": false, "attachment_id": null}, {"count": 4, "attachment_id": null, "bug_id": 27739, "text": "heh, you look to be right; there is some 'intelligence' in the source that is\nover-eager. Set keepformat=true to turn that off", "id": 54210, "time": "2004-03-18T09:52:31Z", "creator": "stevel@apache.org", "creation_time": "2004-03-18T09:52:31Z", "tags": [], "is_private": false}, {"count": 5, "tags": [], "text": "ANT does not really parse the SQL, so it does not know whether a -- ia inside\na string value or in a comment position.\n\nThe reason comments are stripped in the first place was that in certain JDBC \ndrivers (MSSQLServer comes to mind) you are not allowed to have comments not \nnewlines nor anything. ANT is trying very hard to make it work there.\n", "is_private": false, "id": 54268, "creator": "jose@cellectivity.com", "time": "2004-03-19T15:40:27Z", "bug_id": 27739, "creation_time": "2004-03-19T15:40:27Z", "attachment_id": null}, {"count": 6, "tags": [], "creator": "lgehrken@intersoft.de", "text": "*** Bug 28745 has been marked as a duplicate of this bug. ***", "id": 61453, "time": "2004-08-02T12:49:23Z", "bug_id": 27739, "creation_time": "2004-08-02T12:49:23Z", "is_private": false, "attachment_id": null}, {"count": 7, "tags": [], "creator": "lgehrken@intersoft.de", "text": "Created attachment 12300\nShould fix the Bug. It trims the line before looking for delimitter.", "id": 61454, "time": "2004-08-02T12:53:47Z", "bug_id": 27739, "creation_time": "2004-08-02T12:53:47Z", "is_private": false, "attachment_id": 12300}, {"attachment_id": null, "tags": [], "bug_id": 27739, "text": "The -- string is considered an SQL comment to end of line.  However, if the --\noccurs within a delimited string, the SQL task still treats it as a comment to\nend of line, as this simple task doesn't attempt to parse for string fields in\nthe sql statement.\n\nA workaround is to use the keepformat=\"true\" flag, but this turns comment\nprocessing off entirely.  It also has a nasty habit of disliking trailing spaces\nafter the semicolon.  A workaround for this, is to remove all trailing spaces in\nany SQL files you want to process using this comment, as well as removing all\ncomments from the sql file.", "count": 8, "id": 67162, "time": "2004-11-18T19:05:09Z", "creator": "danl_thompson@yahoo.com", "creation_time": "2004-11-18T19:05:09Z", "is_private": false}, {"attachment_id": null, "tags": [], "bug_id": 27739, "is_private": false, "count": 9, "id": 67198, "time": "2004-11-19T07:44:50Z", "creator": "kevin.jackson@it.fts-vn.com", "creation_time": "2004-11-19T07:44:50Z", "text": "I've just spent an unproductive 30 mins trying to duplicate this bug.\n\nI've only looked at the runStatements method as this seems to be the only one\nthat actively looks for comments \"--, // or REM\" and tries to deal with them.\n\nMy test SQL was a simple SELECT '--', '--' FROM USERS; --comment\n\nThe method deals with these -- as it should do.\n\nI'm attaching a Junit test of the behaviour (excluding DB access).  At first I\nwas going to have two stubbed methods and then leave one whilst working on the\nother, but as the first exhibits the correct behaviour as far as I know, there\ndidn't seem to be much point rewriting it.\n\nNotes:\n[1]I know that the code doesn't execute the SQL - my reasoning is that if the\nmethod doesn't break the SQL at the first --, then it's going to be fine when it\npasses it along to the DB - I'd process the statement if I was Oracle!\n\n[2]I know that it won't prove the absence of a bug, but I think it may point to\na problem elsewhere, configuration, JDBC task etc?"}, {"count": 10, "tags": [], "creator": "kevin.jackson@it.fts-vn.com", "text": "Created attachment 13499\nJunit test\n\nShows correct behaviour for runStatements method prior to passing statement\nonto DB", "id": 67199, "time": "2004-11-19T07:46:31Z", "bug_id": 27739, "creation_time": "2004-11-19T07:46:31Z", "is_private": false, "attachment_id": 13499}, {"count": 11, "tags": [], "bug_id": 27739, "is_private": false, "id": 118477, "attachment_id": null, "creator": "bodewig@apache.org", "creation_time": "2008-07-10T08:21:19Z", "time": "2008-07-10T08:21:19Z", "text": "*** Bug 30502 has been marked as a duplicate of this bug. ***"}]