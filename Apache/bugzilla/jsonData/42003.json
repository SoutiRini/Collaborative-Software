[{"count": 0, "tags": [], "text": "Currently the maximum buffer size for HTTP headers in the native JK connector \nis 16k. However, this size is not sufficient in case the HTTP header is larger \nthan 16k (i.e. large Kerberos Tickets). If such a case arises an error of the \ntype \u201c[error] jk_isapi_plugin.c (1135): failed to init service for request\u201d \ngets raised. For this reason the maximum buffer size, which currently is hard-\ncoded to 16k, must be increased to 64k.", "is_private": false, "bug_id": 42003, "id": 101259, "time": "2007-03-30T15:57:32Z", "creator": "calin.gruita@siemens.com", "creation_time": "2007-03-30T15:57:32Z", "attachment_id": null}, {"count": 1, "attachment_id": null, "bug_id": 42003, "text": "The code change required to fix this bug is to modify line# 1498 in the \njk_isapi_plugin.c file to look like this:\n\nchar huge_buf[64 * 1024];   /* should be enough for all */", "id": 101260, "time": "2007-03-30T16:05:26Z", "creator": "calin.gruita@siemens.com", "creation_time": "2007-03-30T16:05:26Z", "tags": [], "is_private": false}, {"count": 2, "attachment_id": null, "bug_id": 42003, "text": "The buffer size can be increased by modifying the source code associated with\nthe iis dll and the AJP protocol. I was only successful in producing a working\ndll by using Visual Studio 6 sp5 with the associated x86 makefile. The iis dll\ncode base requires the following changes are made:\n\nnative\\iis\\jk_isapi_plugin.c(1977): char huge_buf[64 * 1024];\nnative\\common\\jk_ajp12_worker.c(38): #define READ_BUF_SIZE           (64*1024)\nnative\\common\\jk_ajp13.h(39): #define AJP13_READ_BUF_SIZE         (64*1024)\nnative\\common\\jk_ajp14.h(41): #define AJP14_READ_BUF_SIZE         (64*1024)\nnative\\common\\jk_msg_buff.h(34): #define DEF_BUFFER_SZ (64 * 1024)\nnative\\common\\jk_sockbuf.h(26): #define SOCKBUF_SIZE (64*1024)\nnative\\common\\jk_status.c(39): #define HUGE_BUFFER_SIZE (64*1024)\nnative\\common\\jk_util.c(115): #define HUGE_BUFFER_SIZE (64*1024)\n\nIn addition the following change will need to be made to one of the AJP protocol\nclasses:\n\n\\jk\\java\\org\\apache\\coyote\\Constants.java(95): public static final int\nMAX_PACKET_SIZE = 65536;\n\n\n", "id": 110057, "time": "2007-10-31T08:23:58Z", "creator": "cjohnson702@gmail.com", "creation_time": "2007-10-31T08:23:58Z", "tags": [], "is_private": false}, {"count": 3, "attachment_id": null, "bug_id": 42003, "is_private": false, "id": 110199, "time": "2007-11-02T19:17:50Z", "creator": "rainer.jung@kippdata.de", "creation_time": "2007-11-02T19:17:50Z", "tags": [], "text": "Please try combining\n\nnative\\iis\\jk_isapi_plugin.c(1977): char huge_buf[64 * 1024];\n\nwith the attribute max_packet_size first. See the description on the docs page\n\nhttp://tomcat.apache.org/connectors-doc/reference/workers.html\n\nespecially for the related config parameter on the Tomcat side.\n\nPlease report your findings back.\n\nThanks!\n\nRainer"}, {"count": 4, "tags": [], "text": "This should have been fixed by Mladens commit r594798 on 2007-11-14: Fix Bz\n42003 by dynamically allocating memory.", "is_private": false, "id": 111857, "creator": "rainer.jung@kippdata.de", "time": "2007-12-18T06:29:50Z", "bug_id": 42003, "creation_time": "2007-12-18T06:29:50Z", "attachment_id": null}, {"count": 5, "attachment_id": null, "bug_id": 42003, "text": "Move a couple of fixed JK issues from resolved to closed.", "id": 112391, "time": "2008-01-01T16:32:30Z", "creator": "rainer.jung@kippdata.de", "creation_time": "2008-01-01T16:32:30Z", "tags": [], "is_private": false}]