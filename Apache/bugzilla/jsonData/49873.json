[{"attachment_id": null, "tags": [], "creator": "i8c.alex@gmail.com", "is_private": false, "count": 0, "id": 139640, "time": "2010-09-03T02:27:48Z", "bug_id": 49873, "creation_time": "2010-09-03T02:27:48Z", "text": "If you try to evaluate() a blank cell, you will get an IllegalStateException() because cellType \"3\" is not known (Cell.CELL_TYPE_BLANK = 3).\n\nThis can be solved in the parent code by checking if the cell is blank before evaluating, but I think it would be easier to allow you to evaluate a blank cell at which point you simply receive a CellValue with type blank."}, {"count": 1, "tags": [], "text": "Created attachment 25977\nCreates a static method to create a cellvalue with type CELL_TYPE_BLANK\n\nPlease note that the patches have not yet been tested.", "is_private": false, "bug_id": 49873, "id": 139641, "time": "2010-09-03T02:31:01Z", "creator": "i8c.alex@gmail.com", "creation_time": "2010-09-03T02:31:01Z", "attachment_id": 25977}, {"count": 2, "tags": [], "bug_id": 49873, "attachment_id": 25978, "text": "Created attachment 25978\nUpdates XSSFFormulaEvaluator to allow for evaluation of blank cells", "id": 139642, "time": "2010-09-03T02:31:50Z", "creator": "i8c.alex@gmail.com", "creation_time": "2010-09-03T02:31:50Z", "is_private": false}, {"count": 3, "tags": [], "creator": "yegor@dinom.ru", "text": "Fixed in r992620.\n\nThe correct behavior is to return null - FormulaEvaluator should behave the same whether the cell is null or blank. This is how HSSF's evaluator is implemented and I don't see why XSSF should behave differently.\n\nRegards,\nYegor", "id": 139694, "time": "2010-09-04T11:07:45Z", "bug_id": 49873, "creation_time": "2010-09-04T11:07:45Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "text": "I do not know if it is allowed to comment on resolved issues (if not, please excuse my ignorance), but I would like to point out that while I understand that you want both implementations to work the same, I think it would be easier to return a blank cell in the following situation:\n\nCellValue cellValue = evaluator.evaluate(cell);\nswitch(cellValue.getCellType()) {\n...\n}\n\nThis will throw a nullpointer exception if evaluator returns \"null\" for blank cells. It is of course entirely feasible to check for \"== null\" before doing the switch, but isn't that partly the point of having a \"CELL_TYPE_BLANK\"?", "attachment_id": null, "id": 139708, "creation_time": "2010-09-06T01:44:05Z", "time": "2010-09-06T01:44:05Z", "creator": "i8c.alex@gmail.com", "bug_id": 49873, "is_private": false}, {"count": 5, "tags": [], "text": "(In reply to comment #4)\n> I do not know if it is allowed to comment on resolved issues (if not, please\n> excuse my ignorance), but I would like to point out that while I understand\n> that you want both implementations to work the same, I think it would be easier\n> to return a blank cell in the following situation:\n> \n> CellValue cellValue = evaluator.evaluate(cell);\n> switch(cellValue.getCellType()) {\n> ...\n> }\n> \n> This will throw a nullpointer exception if evaluator returns \"null\" for blank\n> cells. It is of course entirely feasible to check for \"== null\" before doing\n> the switch, but isn't that partly the point of having a \"CELL_TYPE_BLANK\"?\n\n\nwhat you suggest makes sense,  but current code exists for a long time and used in many production systems. Changing the returned value from null to CellValue.BLANK  may cause incompatibility issues. This is the main reason why I had to reject it.\n\nYegor", "is_private": false, "bug_id": 49873, "id": 139712, "time": "2010-09-06T06:44:29Z", "creator": "yegor@dinom.ru", "creation_time": "2010-09-06T06:44:29Z", "attachment_id": null}]