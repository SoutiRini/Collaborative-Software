[{"count": 0, "tags": [], "bug_id": 41199, "attachment_id": null, "id": 97013, "time": "2006-12-18T03:27:27Z", "creator": "danny_milo@yahoo.com", "creation_time": "2006-12-18T03:27:27Z", "is_private": false, "text": "Hi,\n\nWhen the following happens in httpd 2.0.52,\n- cgi is launched\n- cgi launches a helper process\n- helper process does stuff for a too long time\n- apache httpd kills cgi process\nthen\n- helper process still runs (I'd expect it to be dead, too)\n\nMaybe it would make sense to kill the process group instead (using the cgi pgid)\n(I'm not sure about all the implications). i. e. do:\n\nThis seems to be the same in the httpd 2.2.3 source I just downloaded and read:\n\nmod_cgi.c:465 (in run_cgi_child) calls:\n            apr_pool_note_subprocess(p, procnew, APR_KILL_AFTER_TIMEOUT);\n\nsrclib/apr/memory/unix/apr_pools.c:2136 (in free_proc_chain) calls:\n            if (apr_proc_kill(pc->proc, SIGTERM) == APR_SUCCESS)\n\n/srclib/apr/threadproc/unix/signals.c:48 (in apr_proc_kill) calls:\n    if (kill(proc->pid, signum) == -1) {\n\nWhich means if there were any helper processes spawned by the cgi, they will\nsurvive. Which I find strange...\n\nkill() with a negated pid would kill the entire process group, which would be\npreferrable."}, {"count": 1, "tags": [], "creator": "danny_milo@yahoo.com", "attachment_id": null, "text": "Provided that the process group consists of the process tree branch descending\nfrom the cgi process, of course.", "id": 97025, "time": "2006-12-18T08:43:57Z", "bug_id": 41199, "creation_time": "2006-12-18T08:43:57Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 41199, "text": "It doesn't, though, the CGI script will be in the process group created by the\nhttpd parent by default.  It's up to the CGI script to terminate however it sees\nfit, there is no need for httpd to enforce a particular scheme here.\n", "id": 97027, "time": "2006-12-18T09:03:54Z", "creator": "jorton@redhat.com", "creation_time": "2006-12-18T09:03:54Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "creator": "danny_milo@yahoo.com", "attachment_id": null, "text": "I'm open to suggestions how to do that in the CGI script.\nThe problem is that even when the CGI script does the setpgid on it's own,\napache will kill it using a positive pid and so it still doesn't do the right\nthing then. Am I missing something obvious?", "id": 97073, "time": "2006-12-19T06:05:41Z", "bug_id": 41199, "creation_time": "2006-12-19T06:05:41Z", "is_private": false}, {"count": 4, "tags": [], "creator": "jorton@redhat.com", "attachment_id": null, "is_private": false, "id": 97077, "time": "2006-12-19T06:30:47Z", "bug_id": 41199, "creation_time": "2006-12-19T06:30:47Z", "text": "Trapping SIGTERM in your app and killing the process group from the signal\nhandler would seem like the obvious solution - any reason why that wouldn't work?"}, {"count": 5, "tags": [], "bug_id": 41199, "attachment_id": null, "id": 97086, "time": "2006-12-19T09:05:43Z", "creator": "wrowe@apache.org", "creation_time": "2006-12-19T09:05:43Z", "is_private": false, "text": "I agree with Joe here for the most part...\n\nIf the CGI is soft-terminated, the only portable behavior that you should ever\nrely upon is trapping the signal and releasing your kids.\n\nThink about it, if you Ctrl+C this script in testing, it leaves lingering child\nprocesses?  That's the cgi's flaw!!!\n\nNOW - if we kill (second chance) a CGI with a hard-kill, I agree with the \nsubmitor that we should do everything in our power to clean up; we clobbered the\nprocess that stalled, we should clobber associated processes.\n\n"}]