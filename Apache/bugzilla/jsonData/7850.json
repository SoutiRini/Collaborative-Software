[{"count": 0, "tags": [], "text": "SORRY !!! - I resend the bug report. The previous bug report had a \"bug\". I\nwanted to say: \"lookup throws an exception\", instead \u00b7of \"lookup returns null\".\n\n* Short description\n  -----------------\n\nWhen sessions are de-serialized (from SESSIONS.ser), *just in that moment*, it\nis not possible to access env-entries by using JNDI (lookup throws an exception).\n\n* Full description\n  ----------------\n\nMy web application (distributable) inserts a serializable object of type X in\nthe user session. The corresponding class (X) has a static block which\ninitializes a static attribute by reading an env-entry (using JNDI). Of course,\nI know that static attributes are not saved for a serializable class. In a\nnormal scenario, all works fine. OK ?\n\nFor the explanation, assume that there is only one active session. If I stop\nTomcat (shutdown.sh), the object in the session is serialized and stored in\n$TOMCAT_HOME/work/localhost/MyWebApplication/SESSIONS.ser. If now I start Tomcat\nagain (startup.sh), Tomcat de-serializes the object from SESSIONS.ser. Just\nbefore the de-serialization occurs, the class loader loads the class X (still\nnot loaded at this moment), and the static block is executed. The static block\ntries to read an env-entry, and the lookup operation throws an exception (it\nshould return an String). In other words, when Tomcat starts and re-creates\nsessions from SESSIONS.ser, *just in that moment*, env-entries are still not\ninitialized. If now I invalidate the session and reload the web application\n(with the Tomcat manager application), all works fine (the static block is\nexecuted again the first time the class is referenced, and accesses env-entries\nwithout problems). I have checked this scenario inserting System.out.println's\nin the static block and having a look at catalina.log. Note that this\nexplanation has nothing to do with the use of static block. This error would\nstill occur if I redefine serialization for class X, by redefining readObject,\nand try to access env-entries from it. Summing up, the problem is that\nenv-entries are not initialized when de-serialization of sessions occur.\n\nIf you are curious why I use a static block in class X, which initializes a\nstatic attribute, the reason it is that this block initializes a configuration\nparameter which is the same for all instances.", "is_private": false, "id": 13059, "creation_time": "2002-04-08T20:09:58Z", "time": "2002-04-08T20:09:58Z", "creator": "fbellas@udc.es", "bug_id": 7850, "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 7850, "is_private": false, "count": 1, "id": 13060, "time": "2002-04-08T20:23:30Z", "creator": "remm@apache.org", "creation_time": "2002-04-08T20:23:30Z", "text": "The ENC is created after starting the manager, so it doesn't work. This won't \nbe fixed in 4.0.x, and may be fixed in 4.1."}, {"count": 2, "tags": [], "bug_id": 7850, "attachment_id": null, "id": 13449, "time": "2002-04-13T12:09:14Z", "creator": "remm@apache.org", "creation_time": "2002-04-13T12:09:14Z", "is_private": false, "text": "Reopen."}, {"count": 3, "tags": [], "text": "This should be fixed in the latest nightly builds.\nThis will not be fixed in 4.0.x.", "is_private": false, "id": 13753, "creation_time": "2002-04-16T10:27:23Z", "time": "2002-04-16T10:27:23Z", "creator": "remm@apache.org", "bug_id": 7850, "attachment_id": null}, {"count": 4, "tags": [], "text": "*** Bug 8295 has been marked as a duplicate of this bug. ***", "is_private": false, "id": 14425, "creation_time": "2002-04-23T11:35:26Z", "time": "2002-04-23T11:35:26Z", "creator": "remm@apache.org", "bug_id": 7850, "attachment_id": null}]