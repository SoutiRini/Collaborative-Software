[{"count": 0, "tags": [], "bug_id": 41186, "attachment_id": null, "is_private": false, "id": 96961, "time": "2006-12-15T14:16:20Z", "creator": "gopaczewski@orbitz.com", "creation_time": "2006-12-15T14:16:20Z", "text": "The 1.2.14 version of the AsyncAppender creates LoggingEvent's from\nDiscardSummary objects with null fqnOfCategoryClass.  This causes layouts that\ncall getLocationInformation() on the LoggingEvent to throw a NullPointerException:\n\nException in thread \"Dispatcher-Thread-6\"\njava.lang.NullPointerException\n     at java.lang.String.lastIndexOf(Unknown Source)\n     at java.lang.String.lastIndexOf(Unknown Source)\n     at org.apache.log4j.spi.LocationInfo.<init>(LocationInfo.java:119)\n     at\norg.apache.log4j.spi.LoggingEvent.getLocationInformation(LoggingEvent.java:191)\n     at\norg.apache.log4j.helpers.PatternParser$ClassNamePatternConverter.getFullyQualifiedName(PatternParser.java:538)\n     at\norg.apache.log4j.helpers.PatternParser$NamedPatternConverter.convert(PatternParser.java:511)\n     at org.apache.log4j.helpers.PatternConverter.format(PatternConverter.java:64)\n     at org.apache.log4j.PatternLayout.format(PatternLayout.java:503)\n     at org.apache.log4j.WriterAppender.subAppend(WriterAppender.java:301)\n     at org.apache.log4j.WriterAppender.append(WriterAppender.java:159)\n     at org.apache.log4j.AppenderSkeleton.doAppend(AppenderSkeleton.java:230)\n     at\norg.apache.log4j.helpers.AppenderAttachableImpl.appendLoopOnAppenders(AppenderAttachableImpl.java:65)\n     at org.apache.log4j.AsyncAppender$Dispatcher.run(AsyncAppender.java:578)\n     at java.lang.Thread.run(Unknown Source)\n\nThis kills off the Dispatcher thread, reverting to synchronous logging.\n\nSteps to Reproduce:\n1. Configure an appender with a PatternLayout that retrieves LocationInfo:\n\n<appender name=\"TestAppender\" class=\"org.apache.log4j.FileAppender\">\n  <param name=\"file\" value=\"/tmp/afile.log\" />\n  <layout class=\"org.apache.log4j.PatternLayout\">\n    <param name=\"ConversionPattern\" value=\"%C:%L %m%n\" />\n  </layout>\n</appender>\n\n2. Configure a second AsyncAppender that references the first appender as follows:\n\n<appender name=\"MyAsyncAppender\" class=\"org.apache.log4j.AsyncAppender\">\n  <param name=\"locationInfo\" value=\"true\" />\n  <param name=\"blocking\" value=\"false\" />\n  <param name=\"bufferSize\" value=\"1\" />\n  <appender-ref ref=\"TestAppender\" />\n</appender>\n\n3. Create a scenario where the buffer in the AsyncAppender fills up, generating\ndiscard events.  (Should be pretty easy with a bufferSize=1)"}, {"text": "Committed rev 487725 on trunk, 487224 on 1.2 branch.  Passing null for the fully qualified category (aka \nlogger) name in the LoggingEvent constructor would cause a NPE in the 1.2 code base, but not 1.3.  \nAddressed problem by passing in a string that should not match any class name in a stack trace which \nshould result in the class name and location being reported as \"?\" in both branches.\n\nAdded tests to both test suites.  Surprised that very few of the AsyncAppender tests had been ported back \nto log4j 1.2, but only backported essential support classes.", "tags": [], "bug_id": 41186, "is_private": false, "count": 1, "id": 96966, "time": "2006-12-15T16:11:33Z", "creator": "carnold@apache.org", "creation_time": "2006-12-15T16:11:33Z", "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 41186, "attachment_id": null, "is_private": false, "id": 97020, "time": "2006-12-18T06:27:45Z", "creator": "gopaczewski@orbitz.com", "creation_time": "2006-12-18T06:27:45Z", "text": "Thanks for resolving so quickly.  Is there an ETA for 1.2.15 at this point?"}, {"count": 3, "tags": [], "bug_id": 41186, "attachment_id": null, "id": 101998, "time": "2007-04-20T20:36:59Z", "creator": "carnold@apache.org", "creation_time": "2007-04-20T20:36:59Z", "is_private": false, "text": "The underlying problem, a NullPointerException on a call to LoggingEvent.getLocationInformation() \nwhen FQCN is null was also reported in Chainsaw running on log4j 1.2.  The initial suggestion was to \nbackport a log4j 1.3 change so that getLocationInfo() would return null.  However, the log4j 1.2 pattern \nlayout does not check for a null when calling getLocationInformation() and only making that change \n(and reverting the previous change) will just move the NPE to a slightly different place in the test case.\n\nI added a new unit test that calls getLocationInformation() when FQCN is null and checks that all the \naccessors return \"?\".  The behavior should be identical to passing a bogus class name.  The change \ncommitted in rev 530974 is sufficient to pass the unit tests for the original reported bug without the \nearlier change to AsyncAppender.  However, think it is safer to leave the bogus FQCN in \nAsyncAppender."}]