[{"count": 0, "tags": [], "creator": "jeremias@apache.org", "attachment_id": null, "is_private": false, "id": 125647, "time": "2009-03-20T03:04:33Z", "bug_id": 46883, "creation_time": "2009-03-20T03:04:33Z", "text": "I've just stumbled over a serious performance hotspot in the GOCA part when rendering a DataMatrix barcode using Barcode4J. I haven't had time, yet, to investigate if other graphics also exhibit that. Here's some profiling data:\n\norg.apache.fop.afp.goca.AbstractGraphicsDrawingOrderContainer.getDataLength()\nTime: 277'609ms (51%)\nOwn Time: 100'437ms (18%)\nInvocation Count: 178'560\n\nGraphicsBox.getDataLength() also seems to be involved here.\n\nJust noting this mostly for myself (to revisit later)."}, {"count": 1, "tags": [], "creator": "adelmelle@apache.org", "text": "Created attachment 23958\npossible fix\n\nQuickly looking at the method in question shows one way of reducing the performance hit: instead of iterating over the collection every time, keep a cached dataLength member, and return that. Haven't tested whether the synchronization overhead outweighs going over the collection repeatedly, though...", "id": 128739, "time": "2009-07-10T12:42:58Z", "bug_id": 46883, "creation_time": "2009-07-10T12:42:58Z", "is_private": false, "attachment_id": 23958}, {"count": 2, "tags": [], "creator": "adelmelle@apache.org", "text": "Note:\nJust thought of another way to go about it. Define the dataLength member, and simply update it upon every add() or remove() operation. It will make those operations just a tiny bit slower, but at least it also avoids having to iterate over the entire collection to determine the data length.", "id": 128768, "time": "2009-07-12T09:42:41Z", "bug_id": 46883, "creation_time": "2009-07-12T09:42:41Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "creator": "adelmelle@apache.org", "text": "Created attachment 24151\nRevised patch\n\nPatch in attach attempts at resolving the time spent in the mentioned method by adding dataLength as a member, and increasing/decreasing it with every add or remove operation.", "id": 129798, "time": "2009-08-19T11:53:54Z", "bug_id": 46883, "creation_time": "2009-08-19T11:53:54Z", "is_private": false, "attachment_id": 24151}, {"attachment_id": null, "tags": [], "bug_id": 46883, "is_private": false, "count": 4, "id": 129857, "time": "2009-08-23T12:59:41Z", "creator": "adelmelle@apache.org", "creation_time": "2009-08-23T12:59:41Z", "text": "\nPatch applied with rev807010."}, {"count": 5, "tags": [], "text": "I had to revert revision 807010 because it caused a regression. Even very simple SVGs (for example [1]) converted to GOCA caused faulty documents. Due to time pressure, I'm afraid I cannot currently invest more time than I already have on fixing this, so I'm just reverting the change and reopening the bug. Sorry.\n\nhttp://svn.apache.org/viewvc?rev=819542&view=rev\n\n[1] http://svn.apache.org/repos/asf/xmlgraphics/fop/trunk/test/resources/images/img-w-size.svg", "is_private": false, "bug_id": 46883, "id": 130724, "time": "2009-09-28T07:14:41Z", "creator": "jeremias@apache.org", "creation_time": "2009-09-28T07:14:41Z", "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 46883, "is_private": false, "count": 6, "id": 157450, "time": "2012-04-07T01:43:03Z", "creator": "gadams@apache.org", "creation_time": "2012-04-07T01:43:03Z", "text": "resetting P2 open bugs to P3 pending further review"}]