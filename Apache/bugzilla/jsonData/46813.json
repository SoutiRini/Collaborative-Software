[{"count": 0, "tags": [], "text": "Setting a block margin-right to a percentage on the first block in a block-container is not honoured. The effect is as though the right margin is zero.\n\nThe attached fo contains a block-container containing 3 blocks, the first and third of which have margin-right=\"40%\". Viewing the pdf produced shows that the first block receives a right margin of 0, whereas the third has the correct right margin.\n\nThis effect happens with 0.95 but not 0.93", "is_private": false, "id": 125377, "creator": "jre@scanlaser.nl", "time": "2009-03-06T03:29:33Z", "bug_id": 46813, "creation_time": "2009-03-06T03:29:33Z", "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 46813, "attachment_id": 23347, "is_private": false, "id": 125378, "time": "2009-03-06T03:31:35Z", "creator": "jre@scanlaser.nl", "creation_time": "2009-03-06T03:31:35Z", "text": "Created attachment 23347\nfo file illustrating the problem"}, {"text": "Created attachment 24314\nPatch that fixes problem\n\nAttached is a patch that fixes problem which occurs when containing-block contains block which contains block whose right-margin is a percentage width.\n\nI ran JUNIT tests and all passed successfully.\n\nI'm new to FOP community and to Layout Manager and I have confidence that someone more senior on FOP community will review my fix.\n\nLet id=1 be the containing block (not a block container but the containing block!) and let id=2 be the block whose right-margin is a percentage.  The problem was that when the endIndent was calculated in BlockLayoutManager in method initialize, the ipd for id=1 had not yet been set up and was zero in its various manifestations.  Percent * 0 = 0.\n\nThere could be a deeper problem (like the Knuth Elements being processed in the wrong order), which my fix masks, however my fix did resolve this particular issue and still passed all JUNIT tests, so it is worth posting.\n\nMy fix is an instance of the \"RECALCULATE\" design pattern (my own coinage).  If you sometimes get the calculation wrong the first time, unconditionally do it again when it is needed and more information is available.  In this case, if you sometimes get the calculation wrong in initialize, unconditionally recalculate when you get the next Knuth Element, which is responsible for updating the content ipd with over-constrained adjust.", "tags": [], "creator": "levinson@intersystems.com", "attachment_id": 24314, "count": 2, "id": 130689, "time": "2009-09-25T17:46:34Z", "bug_id": 46813, "creation_time": "2009-09-25T17:46:34Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 46813, "is_private": false, "text": "resetting P2 open bugs to P3 pending further review", "id": 157349, "time": "2012-04-07T01:41:46Z", "creator": "gadams@apache.org", "creation_time": "2012-04-07T01:41:46Z", "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 46813, "attachment_id": null, "id": 157852, "time": "2012-04-11T03:20:57Z", "creator": "gadams@apache.org", "creation_time": "2012-04-11T03:20:57Z", "is_private": false, "text": "increase priority for bugs with a patch"}]