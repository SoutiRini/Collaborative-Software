[{"count": 0, "tags": [], "creator": "mparreno@hp-cda.com", "is_private": false, "text": "In a \"Random Variable\" element set true the \"Per Thread(User)\" option, and launch test plan in distributed mode (Remote Start).\n\nERROR - jmeter.threads.JMeterThread: Test failed! java.lang.NullPointerException\n\n\tat org.apache.jmeter.config.RandomVariableConfig.iterationStart(RandomVariableConfig.java:90)\n\n\tat org.apache.jmeter.control.GenericController.fireIterationStart(GenericController.java:318)\n\n\tat org.apache.jmeter.control.GenericController.fireIterEvents(GenericController.java:308)\n\n\tat org.apache.jmeter.control.GenericController.next(GenericController.java:128)\n\n\tat org.apache.jmeter.control.GenericController.nextIsAController(GenericController.java:182)\n\n\tat org.apache.jmeter.control.GenericController.next(GenericController.java:146)\n\n\tat org.apache.jmeter.control.GenericController.nextIsAController(GenericController.java:185)\n\n\tat org.apache.jmeter.control.GenericController.next(GenericController.java:146)\n\n\tat org.apache.jmeter.control.GenericController.nextIsAController(GenericController.java:182)\n\n\tat org.apache.jmeter.control.GenericController.next(GenericController.java:146)\n\n\tat org.apache.jmeter.control.GenericController.nextIsAController(GenericController.java:182)\n\n\tat org.apache.jmeter.control.GenericController.next(GenericController.java:146)\n\n\tat org.apache.jmeter.control.LoopController.next(LoopController.java:109)\n\n\tat org.apache.jmeter.threads.ThreadGroup.next(ThreadGroup.java:129)\n\n\tat org.apache.jmeter.threads.JMeterThread.run(JMeterThread.java:242)\n\n\tat java.lang.Thread.run(Unknown Source)\n\nThe method:\n\npublic void iterationStart(LoopIterationEvent iterEvent) {\n        Random randGen=null;\n        if (getPerThread()){\n            randGen = (Random) perThreadRandom.get();          <------ At line 90, the perThreadRandom object IS NULL.\n        } else {\n            synchronized(this){\n                if (globalRandom == null){\n                    init();\n                    globalRandom = new Random(getRandomSeedAsLong());\n                }\n                randGen=globalRandom;\n            }\n        }\n        if (n <=0){\n            return;\n        }\n       long nextRand = minimum + randGen.nextInt(n);\n       // Cannot use getThreadContext() as we are not cloned per thread\n       JMeterVariables variables = JMeterContextService.getContext().getVariables();\n       variables.put(getVariableName(), formatNumber(nextRand));\n    }\n\nThe declaration:\n\nprivate transient ThreadLocal perThreadRandom = new ThreadLocal() {\n            protected Object initialValue() {\n                init();\n                return new Random(getRandomSeedAsLong());\n            }};\n\n\n\u00bfWhy transient? Javadoc says that ThreadLocal instances are typically private static fields in classes that wish to associate state with a thread. However, in this case not in possible, because init() and getRandomSeedAsLong() are non-static methods in the class. I comment out these calls, set static the declaration and work fine.\n\nReferences: http://java.sun.com/j2se/1.5.0/docs/api/java/lang/ThreadLocal.html\nI use: java version \"1.6.0_14\"", "id": 129475, "time": "2009-08-05T03:24:57Z", "bug_id": 47646, "creation_time": "2009-08-05T03:24:57Z", "attachment_id": null}, {"count": 1, "tags": [], "text": "Thanks for the report.\n\nThe perThreadRandom field cannot be static.\nThere may be several instances of the Random Config element and each one needs its own PRNG.\n\nThe field must be transient for the same reason.\n\nSolution is to use readResolve() to create the field.\n\nURL: http://svn.apache.org/viewvc?rev=801478&view=rev\nLog:\nBug 47646 -  NullPointerException in the \"Random Variable\" element", "attachment_id": null, "id": 129508, "creation_time": "2009-08-05T17:32:32Z", "time": "2009-08-05T17:32:32Z", "creator": "sebb@apache.org", "bug_id": 47646, "is_private": false}, {"count": 2, "tags": [], "creator": "sebb@apache.org", "is_private": false, "text": "Resolved in SVN; code is in builds after (and including) r801478", "id": 130477, "time": "2009-09-17T03:41:53Z", "bug_id": 47646, "creation_time": "2009-09-17T03:41:53Z", "attachment_id": null}]