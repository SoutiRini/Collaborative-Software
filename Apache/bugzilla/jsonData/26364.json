[{"count": 0, "tags": [], "bug_id": 26364, "attachment_id": null, "id": 51007, "time": "2004-01-22T22:00:12Z", "creator": "mbenson@apache.org", "creation_time": "2004-01-22T22:00:12Z", "is_private": false, "text": "... in fact, <map> could probably be re-written into a shorthand for a built-in \nmapper type."}, {"count": 1, "tags": [], "creator": "mbenson@apache.org", "attachment_id": null, "is_private": false, "id": 51144, "time": "2004-01-25T17:06:17Z", "bug_id": 26364, "creation_time": "2004-01-25T17:06:17Z", "text": "I believe my last comment was not completely correct, due to the fact that each \n<map> element passes the path element through unchanged if its prefix does not \nmatch the from attribute, while mappers return null for files that do not \nmatch.  In another thread (<a href=\"http://marc.theaimsgroup.com/?l=ant-\nuser&w=2&r=1&s=%3Capply+executable%3E+question+&q=b\">link</a>), I discussed \nwith Stefan the idea of creating a <mapper type=\"composite\"> to wrap other \nmappers.  In implementing that, I have discovered it and this enhancement to be \ncomplimentary, especially because using a nested <mapper> with <pathconvert> is \na very nice way to test any <mapper>.  Because the enhancements will be \ncomplimentary I plan, when they are complete, to roll them all into this one \nenhancement report."}, {"count": 2, "tags": [], "text": "Trying the link again:\n\nhttp://marc.theaimsgroup.com/?l=ant-user&w=2&r=1&s=%3Capply+executable%\n3E+question+&q=b\n\n:(", "is_private": false, "id": 51145, "creator": "mbenson@apache.org", "time": "2004-01-25T17:09:59Z", "bug_id": 26364, "creation_time": "2004-01-25T17:09:59Z", "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 26364, "attachment_id": 10113, "id": 51313, "time": "2004-01-28T20:11:44Z", "creator": "mbenson@apache.org", "creation_time": "2004-01-28T20:11:44Z", "is_private": false, "text": "Created attachment 10113\ndiffs to the <mapper> type"}, {"count": 4, "tags": [], "bug_id": 26364, "text": "Created attachment 10114\npatch to the <mapper> test class", "id": 51314, "time": "2004-01-28T20:12:13Z", "creator": "mbenson@apache.org", "creation_time": "2004-01-28T20:12:13Z", "is_private": false, "attachment_id": 10114}, {"count": 5, "tags": [], "bug_id": 26364, "text": "Created attachment 10115\ndiffs to the <mapper> manual page", "id": 51315, "time": "2004-01-28T20:12:37Z", "creator": "mbenson@apache.org", "creation_time": "2004-01-28T20:12:37Z", "is_private": false, "attachment_id": 10115}, {"count": 6, "tags": [], "text": "Created attachment 10116\nnew interface for a FileNameMapper with subelements", "is_private": false, "id": 51316, "creator": "mbenson@apache.org", "time": "2004-01-28T20:13:16Z", "bug_id": 26364, "creation_time": "2004-01-28T20:13:16Z", "attachment_id": 10116}, {"count": 7, "tags": [], "bug_id": 26364, "text": "Created attachment 10117\nabstract implementation of FileNameMapperContainer; both in org/apache/tools/ant/util", "id": 51317, "time": "2004-01-28T20:14:13Z", "creator": "mbenson@apache.org", "creation_time": "2004-01-28T20:14:13Z", "is_private": false, "attachment_id": 10117}, {"count": 8, "tags": [], "bug_id": 26364, "attachment_id": 10118, "text": "Created attachment 10118\nthe composite mapper implementing class:  org/apache/tools/ant/util", "id": 51318, "time": "2004-01-28T20:14:53Z", "creator": "mbenson@apache.org", "creation_time": "2004-01-28T20:14:53Z", "is_private": false}, {"count": 9, "tags": [], "bug_id": 26364, "attachment_id": 10119, "id": 51319, "time": "2004-01-28T20:15:33Z", "creator": "mbenson@apache.org", "creation_time": "2004-01-28T20:15:33Z", "is_private": false, "text": "Created attachment 10119\ndiffs to <pathconvert> to support nested mappers; relies on CompositeMapper and friends"}, {"count": 10, "tags": [], "text": "Created attachment 10120\ndiffs to the <pathconvert> manual page", "is_private": false, "id": 51320, "creator": "mbenson@apache.org", "time": "2004-01-28T20:17:30Z", "bug_id": 26364, "creation_time": "2004-01-28T20:17:30Z", "attachment_id": 10120}, {"count": 11, "attachment_id": null, "bug_id": 26364, "text": "Changing the summary...", "id": 51398, "time": "2004-01-29T15:04:35Z", "creator": "mbenson@apache.org", "creation_time": "2004-01-29T15:04:35Z", "tags": [], "is_private": false}, {"count": 12, "tags": [], "bug_id": 26364, "attachment_id": null, "id": 51401, "time": "2004-01-29T15:20:28Z", "creator": "peter.reilly@corvil.com", "creation_time": "2004-01-29T15:20:28Z", "is_private": false, "text": "Hi Matt, I worked on an enhancement to mapper last\nyear that I did not release (I lost it ;-).\nIt is like your composite\nmapper except that it uses the add(FileNameName) method\nsignature and allows the filename mappers to be chained\nor to be treated in parallel:\n    <delete quiet=\"yes\" dir=\"mapper.test\"/>\n    <mkdir dir=\"mapper.test\"/>\n    <touch file=\"mapper.test/1.test\"/>\n    <touch file=\"mapper.test/y.java\"/>\n    <path id=\"x\">\n      <fileset dir=\"mapper.test\"/>\n    </path>\n    <reflectdef name=\"basenamemapper\" language=\"beanshell\">\n      package my.mappers;\n      import java.io.*;\n      import org.apache.tools.ant.util.FileNameMapper;\n      public class upcasemapper implements FileNameMapper {\n          public void setFrom(String ignore) {}\n          public void setTo(String ignore) {}\n          public String[] mapFileName(String filename) {\n              File x = new File(filename);\n              return new String[] {x.getName()};\n          }\n      }\n    </reflectdef>\n    <pathconvert refid=\"x\" targetos=\"unix\" property=\"p\">\n      <mapper chained=\"yes\">\n        <mapper>\n          <globmapper from=\"*.java\" to=\"*.out\"/>\n          <mapper type=\"glob\" from=\"*.test\" to=\"*.test.out\"/>\n        </mapper>\n        <basenamemapper/>\n      </mapper>\n    </pathconvert>\n    <echo>${p}</echo>\n\nWill echo:\n1.test.out:y.out"}, {"count": 13, "tags": [], "bug_id": 26364, "text": "Created attachment 10148\nThe container mapper", "id": 51403, "time": "2004-01-29T15:27:34Z", "creator": "peter.reilly@corvil.com", "creation_time": "2004-01-29T15:27:34Z", "is_private": false, "attachment_id": 10148}, {"count": 14, "tags": [], "bug_id": 26364, "text": "Created attachment 10149\nDiff for types/defaults.properties, Mapper.java and PathConvert", "id": 51404, "time": "2004-01-29T15:29:35Z", "creator": "peter.reilly@corvil.com", "creation_time": "2004-01-29T15:29:35Z", "is_private": false, "attachment_id": 10149}, {"count": 15, "tags": [], "bug_id": 26364, "attachment_id": null, "text": "As for the behavior of my version... it works in parallel only... I implemented \nmy changes with a new interface (FileMapperContainer) with the idea that \ndifferent behavior could be implemented in a different class.  For example, the \n<map> elements of <pathconvert> are here implemented by FileNameMappers that \nuse the exact same conversion code as before; these are nested into another \ncustom mapper that tries each until a change is made or returns the String \nunchanged, in order to achieve the existing <map> behavior.\n\nRegarding mapper and containermapper... your implementation is both smaller and \nmore complication than mine, so I can see good and bad points about both...\n\nOn <pathconvert>:  the main difference I see here is that you allow <map>s to \nwork on the results returned by the <mapper>.  To me, this seemed unnecessary \nand possibly confusing to use; I figured <map>s would really be obsolete, for \nthe most part.  Therefore I made <map>s and <mapper>s mutually incompatible.  \nThe other difference is that, as mentioned before, I reimplemented <map>s as \n<mapper>s internally... while the method is slightly complex at first glance, I \ndid it this way because it yielded a set of code from which <map>s could, at \nsome theoretical point in the future, be removed entirely with very little \neffort... rip out three inner classes and a method and you've got a working \nversion.  A few more lines would remove all trace.  But this is just theory due \nto BC... :)", "id": 51406, "time": "2004-01-29T15:55:05Z", "creator": "mbenson@apache.org", "creation_time": "2004-01-29T15:55:05Z", "is_private": false}, {"count": 16, "attachment_id": null, "creator": "mbenson@apache.org", "is_private": false, "id": 51407, "time": "2004-01-29T15:56:14Z", "bug_id": 26364, "creation_time": "2004-01-29T15:56:14Z", "tags": [], "text": "Hey, you broke my summary... :)"}, {"count": 17, "tags": [], "text": "Opps, sorry about the change in title - \"mid air collision\"\n\nMy change was more to provide custom file name mappers like other\ntypes in ant (conditions, filters selectors) as well as\nto provide a container for multiple mappers.\n\nThe change also allows new attributes to be added to current file\nname mappers - like an casesensitive attribute to the glob mapper (\nbugzilla report 16686):\n  <target name=\"casesensitive\">\n    <delete quiet=\"yes\" dir=\"mapper.test\"/>\n    <mkdir dir=\"mapper.test\"/>\n    <touch file=\"mapper.test/1.test\"/>\n    <touch file=\"mapper.test/y.java\"/>\n    <path id=\"x\">\n      <fileset dir=\"mapper.test\"/>\n    </path>\n    <pathconvert refid=\"x\" targetos=\"unix\" property=\"p\">\n      <mapper>\n        <globmapper from=\"*.JAVA\" to=\"*.out\" casesensitive=\"no\"/>\n      </mapper>\n    </pathconvert>\n    <echo>${p}</echo>\n  </target>\n", "is_private": false, "id": 51412, "creator": "peter.reilly@corvil.com", "time": "2004-01-29T16:52:59Z", "bug_id": 26364, "creation_time": "2004-01-29T16:52:59Z", "attachment_id": null}, {"count": 18, "tags": [], "bug_id": 26364, "text": "Created attachment 10150\ndiff for GlobPatternMapper to support casesensitive", "id": 51415, "time": "2004-01-29T16:53:56Z", "creator": "peter.reilly@corvil.com", "creation_time": "2004-01-29T16:53:56Z", "is_private": false, "attachment_id": 10150}, {"count": 19, "attachment_id": null, "bug_id": 26364, "text": "But then casesensitive works here:\n\n<globpatternmapper ... />\n\nbut not here:\n\n<mapper type=\"glob\" ... />\n\nright?\n\nWhat would it take for Mapper to implement DynamicConfigurator such that it \ncould set the right attributes on the implementation class?", "id": 51416, "time": "2004-01-29T16:58:10Z", "creator": "mbenson@apache.org", "creation_time": "2004-01-29T16:58:10Z", "tags": [], "is_private": false}, {"count": 20, "tags": [], "text": "object, I mean.", "is_private": false, "id": 51417, "creator": "mbenson@apache.org", "time": "2004-01-29T16:58:56Z", "bug_id": 26364, "creation_time": "2004-01-29T16:58:56Z", "attachment_id": null}, {"count": 21, "tags": [], "bug_id": 26364, "text": "I have another problem with this.  If you open up the idea that \n<globpatternmapper ... /> is as valid as <mapper type=\"glob\" .../>, then custom \ntasks have to support both nested Mappers and (configured)FileNameMappers.\n\nwhile this doesn't break BC, I think the dichotomy will lead to a lot of \"why\"s \non the user list...", "id": 51510, "time": "2004-01-30T23:27:29Z", "creator": "mbenson@apache.org", "creation_time": "2004-01-30T23:27:29Z", "is_private": false, "attachment_id": null}, {"attachment_id": null, "tags": [], "creator": "mbenson@apache.org", "is_private": false, "count": 22, "id": 51660, "time": "2004-02-03T15:31:21Z", "bug_id": 26364, "creation_time": "2004-02-03T15:31:21Z", "text": "Whaddya say, Peter?"}, {"count": 23, "attachment_id": null, "bug_id": 26364, "text": "Using dynamic configuration to set the attributes of the embedded filename\nmapper class is a good idea.\n\nThe <globmapper> may be used with custom tasks. It can only be used\nas an nested element to a <mapper> element. For example the <copy> task\ncan use it without any modification, as can the <outofdate> task from\nant-contrib.\n\nOn a general note, I never liked the design of mapper + filename mapper\nbeing one element with the specific filename mapper being specified by\nan attribute. This is different from the other customizer types - like\nselectors, filters and conditions. The mapper patch will allow new custom\nfile name mappers to be defined and used like built-in mappers - as nested\ntypes in a <mapper> container, deprecating the current type=\"x/y/z\" usage.", "id": 51661, "time": "2004-02-03T16:40:50Z", "creator": "peter.reilly@corvil.com", "creation_time": "2004-02-03T16:40:50Z", "tags": [], "is_private": false}, {"count": 24, "tags": [], "bug_id": 26364, "attachment_id": null, "id": 51662, "time": "2004-02-03T16:44:47Z", "creator": "mbenson@apache.org", "creation_time": "2004-02-03T16:44:47Z", "is_private": false, "text": "So, like Selectors, in order to define a reference, for example, you would nest \nyour custom (named) mappers into a <mapper> element... I thought you might say \nthat.  Then the two recommended <mapper> specification means become via \nexplicit typedef'd elements and <mapper classname=\"\"> but this is where dynamic \nconfiguration needs to be added, is that where you're going?"}, {"attachment_id": null, "tags": [], "bug_id": 26364, "text": "yes, although I did not consider using\ndynamic configuration until you mentioned it.", "count": 25, "id": 51665, "time": "2004-02-03T17:02:25Z", "creator": "peter.reilly@corvil.com", "creation_time": "2004-02-03T17:02:25Z", "is_private": false}, {"count": 26, "tags": [], "bug_id": 26364, "attachment_id": null, "id": 51666, "time": "2004-02-03T17:55:06Z", "creator": "mbenson@apache.org", "creation_time": "2004-02-03T17:55:06Z", "is_private": false, "text": "So what does it take to get these things approved and checked in?  I don't know \nabout anyone else, but these will help me... or at least they will help me help \nmyself.  ;)"}, {"count": 27, "tags": [], "bug_id": 26364, "attachment_id": null, "id": 51724, "time": "2004-02-04T18:26:53Z", "creator": "peter.reilly@corvil.com", "creation_time": "2004-02-04T18:26:53Z", "is_private": false, "text": "It should be split into two/three steps\n\n1) the mapper container change is independent of the pathconvert\n   change - so this should be done first using a discussion\n   in ant-dev.\n\n2) the change to pathconvert using a normal mapper is probally easy\n   to get accepted - it will be better with the mapper container change\n   but it not completly necssary\n\n3) the use of dymanicconfigurator to set the attributes could be done last\n   as a nice to have.\n"}, {"count": 28, "tags": [], "bug_id": 26364, "attachment_id": null, "id": 52023, "time": "2004-02-09T22:57:31Z", "creator": "mbenson@apache.org", "creation_time": "2004-02-09T22:57:31Z", "is_private": false, "text": "let's go ahead and commit your version of pathconvert, then... again, if you do \nthink it makes sense to apply <mapper>s and <map>s to the same set of results...\n\nI will write up the composite/container mapper approaches to the dev list."}, {"count": 29, "tags": [], "bug_id": 26364, "text": "Nested <mapper> for <pathconvert> has been added; removing it from description \nso I don't have a dual enhancement request on the books.  ;)", "id": 53163, "time": "2004-02-27T23:41:14Z", "creator": "mbenson@apache.org", "creation_time": "2004-02-27T23:41:14Z", "is_private": false, "attachment_id": null}, {"count": 30, "attachment_id": null, "bug_id": 26364, "text": "Committed Peter's ContainerMapper.  Peter, I will leave it to you to add \ncasesensitive to GlobPatternMapper.", "id": 53891, "time": "2004-03-11T19:37:29Z", "creator": "mbenson@apache.org", "creation_time": "2004-03-11T19:37:29Z", "tags": [], "is_private": false}]