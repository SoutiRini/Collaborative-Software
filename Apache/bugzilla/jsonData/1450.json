[{"count": 0, "tags": [], "creator": "serg_main@yahoo.com", "attachment_id": null, "is_private": false, "id": 1981, "time": "2001-04-21T23:21:55Z", "bug_id": 1450, "creation_time": "2001-04-21T23:21:55Z", "text": "Duplicate inserting jsessionid.\n\nJSP:\n<%@ page language=\"java\" %>\n<%\nString s = \"http://ham/links.jsp;jsessionid=35D49560650452047847A1206301D523?\nl=en_US_HAM&\";\nout.print( s +\"<br>\");\nout.print( response.encodeURL( s) +\"<br>\");\n%>\n\noutput:\nhttp://ham/links.jsp;jsessionid=35D49560650452047847A1206301D523?l=en_US_HAM&\nhttp://ham/links.jsp;jsessionid=35D49560650452047847A1206301D523;jsessionid=1376\nB60217B742D455F86502317268B8?l=en_US_HAM&"}, {"count": 1, "tags": [], "creator": "craig.mcclanahan@sun.com", "text": "How is this a bug in Tomcat?  Tomcat is not inserting jsessionid twice -- it's \nthere once because you put it there, and once because encodeURL() does what the \nspec says to do and adds a path paramter.\n\nIn order for you to get jsessionid twice, you have to put one there \ndeliberately.\n\n", "id": 2211, "time": "2001-05-02T15:57:18Z", "bug_id": 1450, "creation_time": "2001-05-02T15:57:18Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "creator": "tilo.christ@online.de", "text": "I just stumbled across the same bug, because in some places in my web\napplication it is hard to control whether the URL has already been encoded or not.\n\nThe API spec for HttpServletResponse#encodeUrl reads:\n\"Encodes the specified URL by including the session ID in it, or, if encoding is\nnot needed, returns the URL unchanged. The implementation of this method\nincludes the logic to determine whether the session ID needs to be encoded in\nthe URL. For example, if the browser supports cookies, or session tracking is\nturned off, URL encoding is unnecessary.\"\n\nI consider an URL which already contains the Session ID a case where encoding is\nunneccessary, and where therefore according to the spec the URL should be\nreturned unchanged.\n\nI suggest the following fix:\nIn HttpResponseBase.java\n\n    private String toEncoded(String url, String sessionId) {\n\n        if ((url == null) || (sessionId == null))\n            return (url);\n\n        // Prevent duplicate encoding\n        if (url.indexOf(\";jsessionid=\" + sessionId) != -1))\n            return (url);\n\n       ... Leave remainder of method unchanged ....\n\n", "id": 10961, "time": "2002-02-20T19:50:42Z", "bug_id": 1450, "creation_time": "2002-02-20T19:50:42Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "text": "I just tested the encodeURL implementation of Orion Server, and it works as I \nthink it should work (ie encodes only once, even if invoked several times on \nthe same URL).\n", "is_private": false, "bug_id": 1450, "id": 10966, "time": "2002-02-20T20:58:13Z", "creator": "tilo.christ@online.de", "creation_time": "2002-02-20T20:58:13Z", "attachment_id": null}, {"count": 4, "tags": [], "creator": "remm@apache.org", "attachment_id": null, "id": 10980, "time": "2002-02-20T23:02:17Z", "bug_id": 1450, "creation_time": "2002-02-20T23:02:17Z", "is_private": false, "text": "Not a bug, as per Craig comments."}, {"count": 5, "tags": [], "text": "Let's put it that way: Even if the spec allowed Craigs interpretation, you \nshould be aware of the fact, that your interpretation is deviant from many \nother vendors' interpretation. In the meantime I have tested encodeURL on \nOrion, on Caucho Resin, and on HP-AS 8.0, and Tomcat is the only Servlet engine \nthat fails to recognize the URLs which it has encoded twice.\nOrion and HP-AS only put jsessionid into the URL once, no matter how many times \nI invoke encodeURL. Resin puts it there twice, but manages to keep the session. \nTomcat puts it there twice and looses the session :-(\nTherefore I still vote for the inclusion of my proposed enhancement.\n", "is_private": false, "bug_id": 1450, "id": 11000, "time": "2002-02-21T09:32:15Z", "creator": "tilo.christ@med.siemens.de", "creation_time": "2002-02-21T09:32:15Z", "attachment_id": null}, {"count": 6, "tags": [], "text": "I'm standing by my prior resolution. If you don't agree, you can submit a patch.\nThanks.\nI'll leave the bug open this time, as this could indeed be considered an\nenhancement.", "is_private": false, "bug_id": 1450, "id": 11041, "time": "2002-02-21T17:11:17Z", "creator": "remm@apache.org", "creation_time": "2002-02-21T17:11:17Z", "attachment_id": null}, {"id": 11060, "tags": [], "bug_id": 1450, "attachment_id": null, "count": 7, "text": "[PATCH]\n\nHello!\n\nHere is my patch against Tomcat 4.0.2 sources\nThe file is located at catalina/src/share/org/apache/catalina/connector\n\n--- HttpResponseBase.java.orig\tThu Feb 21 21:53:02 2002\n+++ HttpResponseBase.java\tThu Feb 21 21:51:38 2002\n@@ -715,6 +715,10 @@\n         if ((url == null) || (sessionId == null))\n             return (url);\n \n+\tif (url.indexOf(\";jsessionid=\" + sessionId) != -1)\n+\t    return (url);\n+\t\n+\n         String path = url;\n         String query = \"\";\n         String anchor = \"\";\n\nI would really appreciate it if someone with CVS commit access committed this.\n", "time": "2002-02-21T22:01:32Z", "creator": "tilo.christ@online.de", "creation_time": "2002-02-21T22:01:32Z", "is_private": false}, {"count": 8, "tags": [], "creator": "william.barker@wilshire.com", "attachment_id": null, "id": 11083, "time": "2002-02-22T06:35:38Z", "bug_id": 1450, "creation_time": "2002-02-22T06:35:38Z", "is_private": false, "text": "A variant of Tilo's patch has been checked into both the CVS HEAD and tomcat_40 \nbranches."}, {"count": 9, "tags": [], "creator": "remm@apache.org", "text": "This seems a good improvement for robustness. Thanks :)", "id": 11084, "time": "2002-02-22T06:37:59Z", "bug_id": 1450, "creation_time": "2002-02-22T06:37:59Z", "is_private": false, "attachment_id": null}]