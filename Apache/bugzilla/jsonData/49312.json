[{"count": 0, "tags": [], "creator": "kamil.soltys@infomotion.de", "text": "Created attachment 25455\nTest File with RuntimeException: Unexpected missing row\n\n+++ This bug was initially created as a clone of Bug #47245 +++\n\nI have the same Problem:\n\njava.lang.RuntimeException: Unexpected missing row when some rows already present\n\tat org.apache.poi.hssf.usermodel.HSSFSheet.setPropertiesFromSheet(HSSFSheet.java:170)\n\tat org.apache.poi.hssf.usermodel.HSSFSheet.<init>(HSSFSheet.java:117)\n\tat org.apache.poi.hssf.usermodel.HSSFWorkbook.<init>(HSSFWorkbook.java:288)\n\tat org.apache.poi.hssf.usermodel.HSSFWorkbook.<init>(HSSFWorkbook.java:201)\n\tat org.apache.poi.hssf.usermodel.HSSFWorkbook.<init>(HSSFWorkbook.java:317)\n\tat de.infomotion.excelConverter.ConverterFactory.getConverter(ConverterFactory.java:49)\n\tat de.infomotion.excelConverter.ConverterFactory.getConverter(ConverterFactory.java:27)\n\tat de.infomotion.excelConverter.Main.main(Main.java:22)\n\n\n\nI trayed to switch back to POI3.5-FINAL, but has same issue.\n\nOpening and Saving in MSExcel corrects the Problem. The resaved (corrected?) file is about 25% smaller like before.\n\nTo more specifie the Situation: this XLS-File is generated from BusinessObjects Enterprise 3.1 and i should automaticaly postprocess/clean the generated files.\n\nIdeas?\n\nMany Thanks", "id": 136953, "time": "2010-05-19T05:30:33Z", "bug_id": 49312, "creation_time": "2010-05-19T05:30:33Z", "is_private": false, "attachment_id": 25455}, {"count": 1, "tags": [], "bug_id": 49312, "attachment_id": null, "is_private": false, "id": 136954, "time": "2010-05-19T05:34:29Z", "creator": "kamil.soltys@infomotion.de", "creation_time": "2010-05-19T05:34:29Z", "text": "After resaving in MSExcel of this sample file was the size greater... whatever - the size is not the same like before, but file can be after that with POI processsed."}, {"count": 2, "tags": [], "bug_id": 49312, "attachment_id": null, "is_private": false, "id": 136955, "time": "2010-05-19T05:44:06Z", "creator": "apache@gagravarr.org", "creation_time": "2010-05-19T05:44:06Z", "text": "You should probably open a bug with the people who make your spreadsheet\nwriting software. It's putting non row records into the middle of the bit where\nthe row records should live\n\nIf you want to produce a workaround, you'll need to use hssf.dev.BiffViewer to\nfigure out what those records are that are in the wrong place, then produce a\npatch to poi to have it handle them coming where they're not supposed to be"}, {"count": 3, "tags": [], "text": "Thank you for response. \n\nIt ist possible to configure or learn POI to ignore that non-row-records without patching of POI?\n\nThanks", "is_private": false, "bug_id": 49312, "id": 136964, "time": "2010-05-19T13:42:51Z", "creator": "kamil.soltys@infomotion.de", "creation_time": "2010-05-19T13:42:51Z", "attachment_id": null}, {"count": 4, "tags": [], "creator": "apache@gagravarr.org", "text": "Code changes will be needed. If you do come up with a patch, please do share it!", "id": 136965, "time": "2010-05-19T13:46:52Z", "bug_id": 49312, "creation_time": "2010-05-19T13:46:52Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "text": "I have tonight analysed the File with BiffViewer.\nIf 'm I right so:\n- the count of RowRecords in Sheet is 7 (index 6)\n- at end of CellValues are 4 that are pointed at RowRecord 8 (index 7) and throws RuntimeException\n\nLike you said - it is not POI Problem but SAP Businessobject. The Fullclient reporting engine that generates Excel output is bugy. It is not supported by SAP anymore. \nThe Webi reporting engine generates clean XLS and cann be opened by POI.\n\n\nI have fixed it by commenting im HSSFSheet at row 170 this RuntimeException out, so that the missing RowRecord for CellValue will be created.\n\nI think it is NOT clean, but in our Case of postprocessing the Excel output form SAP Businessobjects Fullclient Reports does it.\n\nPOI rocks!", "is_private": false, "bug_id": 49312, "id": 136971, "time": "2010-05-20T03:15:25Z", "creator": "kamil.soltys@infomotion.de", "creation_time": "2010-05-20T03:15:25Z", "attachment_id": null}, {"count": 6, "tags": [], "creator": "oukna.mustapha@gmail.com", "text": "mee too.\nI have this error:\nException in thread \"main\" java.lang.RuntimeException: Unexpected missing row when some rows already present\n\tat org.apache.poi.hssf.usermodel.HSSFSheet.setPropertiesFromSheet(HSSFSheet.java:168)\n\tat org.apache.poi.hssf.usermodel.HSSFSheet.<init>(HSSFSheet.java:115)\n\tat org.apache.poi.hssf.usermodel.HSSFWorkbook.<init>(HSSFWorkbook.java:299)\n\tat org.apache.poi.hssf.usermodel.HSSFWorkbook.<init>(HSSFWorkbook.java:250)\n\tat org.apache.poi.hssf.usermodel.HSSFWorkbook.<init>(HSSFWorkbook.java:194)\n\tat org.apache.poi.hssf.usermodel.HSSFWorkbook.<init>(HSSFWorkbook.java:329)\n\tat org.apache.poi.hssf.usermodel.HSSFWorkbook.<init>(HSSFWorkbook.java:310)\n\tat Extraction.main(Extraction.java:93)\n\nline cause:\nwbd = new HSSFWorkbook(istr);\n\nI have 2 HSSFWorkbook:\nwb, wbd.\n\nHere is my code:\nimport java.io.FileInputStream;\nimport java.io.FileNotFoundException;\nimport java.io.FileOutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.text.Collator;\nimport java.text.DateFormat;\nimport java.text.ParseException;\nimport java.text.SimpleDateFormat;\nimport java.util.ArrayList;\nimport java.util.Calendar;\nimport java.util.Iterator;\nimport java.util.Locale;\n\nimport org.apache.poi.hssf.usermodel.HSSFCell;\nimport org.apache.poi.hssf.usermodel.HSSFRow;\nimport org.apache.poi.hssf.usermodel.HSSFSheet;\nimport org.apache.poi.hssf.usermodel.HSSFWorkbook;\nimport org.apache.poi.openxml4j.exceptions.InvalidFormatException;\nimport org.apache.poi.openxml4j.opc.OPCPackage;\nimport org.apache.poi.ss.usermodel.Cell;\nimport org.apache.poi.ss.usermodel.FormulaEvaluator;\nimport org.apache.poi.xssf.usermodel.XSSFCell;\nimport org.apache.poi.xssf.usermodel.XSSFCellStyle;\nimport org.apache.poi.xssf.usermodel.XSSFDataFormat;\nimport org.apache.poi.xssf.usermodel.XSSFRow;\nimport org.apache.poi.xssf.usermodel.XSSFSheet;\nimport org.apache.poi.xssf.usermodel.XSSFWorkbook;\n\nimport Modele.Agent;\n\npublic class Extraction {\n\t\n\tpublic static void main(String[] args) throws ParseException {\n\t\t\n\t\t//VARIABLE POUR LES INFOS DU FICHIER EXCEL\n\t\tString fichierExtract = \"C:/Donnees/Aide_Manager/extract_25012012.xls\";\n\t\tString fichierProjection = \"C:/Donnees/Aide_Manager/Projection_2012_Eq2.xlsx\";\n\t\tInputStream is, istr,ist;\n\t\tHSSFWorkbook wb, wbd;\n\t\tHSSFSheet sheet, sheetd;\n\t\tHSSFRow row, rowd;\n\t\tHSSFCell cell, celld;\n\t\tString onglet;\n\t\tString semaine_en_string;\n\t\tint n_l_valid = 0; // pour r\u00e9cup\u00e9rer la ligne de chaque validation\n\t\tint valid = 0; // pour r\u00e9cup\u00e9rer le nombre de validation\n\t\tHSSFCell valid_recupere = null;// pour r\u00e9cup\u00e9rer les valeurs des validations\n\t\tjava.util.Date datextract;\n\t\tDateFormat formatter = new SimpleDateFormat(\"dd/MM/yyyy\");\n\t\tString date_extract;\n\t\tCalendar calendar = Calendar.getInstance();\n\t\tint validation_ancienne, validation_nouvelle;\n\t\t\n\t\t//VARIABLE POUR OBJET\n\t\tArrayList<Agent> listAgent = new ArrayList<Agent>();\n\t\tString prenom_agent = null; //pour r\u00e9cup\u00e9rer les Agents\n\t\tString ag;\n\t\tint va;\n\t\tString sub;\n\t\tint isub;\n\t\t\n\t\t//TABLEAUX\n\t\tString tab[][] = new String [100][100];\n\t\tint tabvalidation[][] = new int [100][100];\n\t\tint onglet_conv;\n\t\tint semaine = 0;\n\t\t\n\t\ttry {\n\t\t\tis = new FileInputStream(fichierExtract);\n\t\t\t//POIFSFileSystem fs = new POIFSFileSystem(new FileInputStream(\"extract.xls\")); //pour ouvrir les fichiers xls\n\t\t\twb = new HSSFWorkbook(is);\n\t\t\tsheet = wb.getSheetAt(0);\n\t\t\trow = null;\n\t\t\tcell = null;\n\t\t\tint n = 0;\n\t\t\t//int i = 0;//compte le nombre d'agent\n\t\t\tfor (Iterator rowIt = sheet.rowIterator(); rowIt.hasNext();){\n\t\t\t\trow = (HSSFRow) rowIt.next();\n\t\t\t\tAgent a = new Agent();\n\t\t\t\tn++;// pour avoir le num\u00e9ro de chaque ligne lue\n\t\t\t\tif(row.getRowNum() == 6 && row.getCell(0) != null){//pour obtenir la date de l'extract et d\u00e9terminer sa semaine dans l'ann\u00e9e.\n\t\t\t\t\tdate_extract = row.getCell(0).getStringCellValue().substring(3,13);//on r\u00e9cup\u00e8re la date\n\t\t\t\t\tSystem.out.println(\"date_extract: \"+date_extract);\n\t\t\t\t\t\n\t\t\t\t\t//faire une v\u00e9rification pour savoir:\n\t\t\t\t\t//si la date du fichier n'est pas trouv\u00e9e sur\n\t\t\t\t\tistr = new FileInputStream(\"C:/Donnees/Aide_Manager/date_extract1.xls\");\n\t\t\t\t\t//ce fichier permettra de r\u00e9cup\u00e9rer les dates pour savoir si un extract \u00e0 d\u00e9j\u00e0 \u00e9t\u00e9 utilis\u00e9.\n\t\t\t\t\twbd = new HSSFWorkbook(istr);\n\t\t\t\t\tsheetd = wbd.getSheetAt(0);\n\t\t\t\t\trowd = null;\n\t\t\t\t\tcelld = null;\n\t\t\t\t\t//date_extract=\"24/01/2012\";\n\t\t\t\t\tboolean date_stockee_trouvee = false;\n\t\t\t\t\tint dernLigneTrouvee = 0;\n\t\t\t\t\tfor (Iterator r = sheetd.rowIterator(); r.hasNext();){\n\t\t\t\t\t\trowd = (HSSFRow) r.next();\n\t\t\t\t\t\tcelld = rowd.getCell(0);\n\t\t\t\t\t\t//System.out.println(\"lalalalalala\");\n\t\t\t\t\t\tif(celld != null ){\n\t\t\t\t\t\t\tif(celld.getCellType()==0){\n\t\t\t\t\t\t\tSystem.out.println(\"c'est un nombre: \"+celld.getNumericCellValue());\n\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\tSystem.out.println(\"c'est une chaine: \"+celld.getStringCellValue());\n\t\t\t\t\t\t\t\tif(celld.getStringCellValue().equals(date_extract)){// si on trouve que la date_extract est = \u00e0 la date trouv\u00e9e dans le fichier\n\t\t\t\t\t\t\t\t\tSystem.out.println(\"DATE TROUVEE Ds le fichier !\");\n\t\t\t\t\t\t\t\t\tSystem.out.println(\"CETTE EXTRACT A DEJA ETE UTILISEE !!\");\n\t\t\t\t\t\t\t\t\tSystem.out.println(\"MERCI D'UTILISER UN AUTRE EXTRACT CONCERNANT UNE AUTRE DATE !\");\n\t\t\t\t\t\t\t\t\tdate_stockee_trouvee=true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdernLigneTrouvee = rowd.getCell(0).getRowIndex();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tdernLigneTrouvee++;\n\t\t\t\t\tSystem.out.println(\"dernLigneTrouvee: \"+dernLigneTrouvee);\n\t\t\t\t\t//si la date n'est pas trouv\u00e9e dans le fichier\n\t\t\t\t\tSystem.out.println(\"date_stockee_trouvee: \"+date_stockee_trouvee);\n\t\t\t\t\tif(date_stockee_trouvee==false){\n\t\t\t\t\t\t//retrouver la derni\u00e8re ligne du fichier pour y ecrire la date\n\t\t\t\t\t\t\tSystem.out.println(\"retrouver la derni\u00e8re ligne du fichier: \"+dernLigneTrouvee);\n\t\t\t\t\t\t\t//pour cr\u00e9e la date ds le fichier \n\t\t\t\t\t\t\t//et pour la retrouver et eviter de rajouter la validation d'un extract comportant la m\u00eame date\n\t\t\t\t\t\t\trowd.setRowNum(dernLigneTrouvee);\n\t\t\t\t\t\t\tsheetd.createRow(0);\n\t\t\t\t\t\t\tcelld = rowd.createCell(0);\n\t\t\t\t\t\t    celld.setCellValue(date_extract);\n\t\t\t\t\t\t    System.out.println(\"La nouvelle date_extract '\"+date_extract+\"' a \u00e9t\u00e9 stock\u00e9 dans le fichier.\");\n\t\t\t\t\t\t    //pour ecrire dans le m\u00eame fichier\n\t\t\t\t\t\t\tFileOutputStream fileOutd = new FileOutputStream(\"C:/Donnees/Aide_Manager/date_extract1.xls\");\n\t\t\t\t\t\t\twbd.write(fileOutd);\n\t\t\t\t\t\t    fileOutd.close();\n\t\t\t\t\t\t\n\t\t\t\t\t// Date actuelle\n\t\t\t\t\tdatextract = formatter.parse(date_extract);\n\t\t\t\t\tcalendar.setTime(datextract);\n\t\t\t\t\tsemaine = calendar.get(Calendar.WEEK_OF_YEAR);//r\u00e9cup\u00e9rer la semaine dans l'ann\u00e9e pour faire la comparaison avec les onglet du fichier de destination\n\t\t\t\t\t//System.out.println(calendar.get(Calendar.WEEK_OF_YEAR));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif(row.getCell(0) != null && row.getCell(0).getStringCellValue().startsWith(\"Agent\")){//si les lignes de la colonne 0 ne sont pas null\n\t\t\t\t\tprenom_agent=row.getCell(0).getStringCellValue();//on r\u00e9cup\u00e8re notre agent\n\t\t\t\t    //isub = nom_agent.indexOf(\",\");\n\t\t\t\t    sub = prenom_agent.substring(prenom_agent.indexOf(\",\")+1).trim();//r\u00e9cup\u00e9rer la chaine apr\u00e8s la virgule, apr\u00e8s l'espace mais sans l'espace \u00e0 la fin\n\t\t\t\t    //System.out.println(sub);\n\t\t\t\t    a.setAgent(sub);//on r\u00e9cup\u00e8re notre agent dans notre objet\n\t\t\t\t\t//System.out.println(a.getAgent()); //on l'affiche\n\t\t\t\t}\n\t\t\t\tif(row.getCell(1) != null && row.getCell(1).getStringCellValue().startsWith(\"Validation\")){// si les lignes de la colonne 2 ne sont pas null\n\t\t\t\t\t\t\n\t\t\t\t\t\tvalid++; //Nombre de validation d\u00e9tecter dans le fichier\n\t\t\t\t\t\tn_l_valid = n; // on r\u00e9cup\u00e8re le num\u00e9ro de ligne de la Validation\n\t\t\t\t\t\t//System.out.println(nom_agent);\n\t\t\t\t\t\tn_l_valid--;//on d\u00e9cr\u00e9mente pour r\u00e9cup\u00e9rer la validation dans le fichier\n\t\t\t\t\t\t//valid_recupere=sheet.getRow(n_l_valid).getCell(4);// on r\u00e9cup\u00e9re la validation dans le fichier\n\t\t\t\t\t\t//System.out.println(\"Validation: \"+valid_recupere);//on l'affiche\n\t\t\t\t\t\ta.setValidation((int)sheet.getRow(n_l_valid).getCell(4).getNumericCellValue());//on r\u00e9cup\u00e8re notre agent dans notre objet sous forme d'entier\n\t\t\t\t\t\tSystem.out.println(\"validation: \"+a.getValidation());//on l'affiche\n\t\t\t\t}\n\t\t\t\tlistAgent.add(a);\n\t\t\t\t\n\t\t\t}//fin du for\n\t\t\t\n\t\t\t/*for (Agent agt : listAgent){\n\t\t\t\tif(agt.getAgent()!=null)\n\t\t\t\t\tSystem.out.println(\"agent: \"+agt.getAgent()+\"--validation: \"+agt.getValidation());\n\t\t\t}*/\n\t\t\t\n\t\t\tint k = 0;//pour passer \u00e0 la colonne suivante\n\t\t\tfor (Agent agt : listAgent){\n\t\t\t\tif(agt.getAgent()!=null){//si l'agent n'est pas null\n\t\t\t\t\tag=agt.getAgent().toUpperCase();//obtenir L'agent\n\t\t\t\t\ttab[0][k]=ag;\n\t\t\t\t\t//System.out.println(\"k: \"+k);\n\t\t\t\t}\n\t\t\t\tif(agt.getValidation()!=0){//si la validation n'est pas null\n\t\t\t\t\tva=agt.getValidation();//obtenir la validation\n\t\t\t\t\ttabvalidation[1][k]=va;//assigner les 2 valeurs trouv\u00e9es\n\t\t\t\t\tk++;//passe \u00e0 la colonne suivante\n\t\t\t\t}\n\t\t\t}\n\t\t\t//System.out.println(\"\");\n\t\t\t//System.out.println(\"\");\n\t\t\t/*for (int d=0; d<tab.length;d++){\n\t\t\tif(tab[0][d] != null || tab[1][d]!=null){//si l'une des cellules n'est pas null\n\t\t\t\t//afficher l'agent + la validation\n\t\t\t\tSystem.out.println(\"Agent: \"+tab[0][d]+\" Validation: \"+tab[1][d]);\n\t\t\t\t\n\t\t\t}\n\t\t\t}*/\n\t\t\t\t\n\t\t\t\tint nbfeuille=0;\n\t\t\t\tint ligne_trouvee;\n\t\t\t\t//version .xls\n\t\t\t\t/*InputStream ist = new FileInputStream(\"C:/Users/LZ2059/Desktop/Projection_2012_Eq2.xls\"); //pour ouvrir les fichiers xls de 2007\n\t\t\t\tHSSFWorkbook wb2 = new HSSFWorkbook(ist);\n\t\t\t\tHSSFSheet sheet2 = wb2.getSheetAt(0);\n\t\t\t\tnbfeuille= wb2.getNumberOfSheets();//retourne le nombre de feuille renseign\u00e9\n\t\t\t\tHSSFRow row2 = null;\n\t\t\t\tHSSFCell cell2 = null;\n\t\t\t\tHSSFCellStyle cellStyle = null;*/\n\t\t\t\t\n\t\t\t\t//version .xlsx\n\t\t\t\tist = new FileInputStream(fichierProjection);\n\t\t\t\tOPCPackage opc=OPCPackage.open(ist);//version .xlsx\n\t\t\t    XSSFWorkbook wb2= new XSSFWorkbook(opc); \n\t\t\t\tXSSFSheet sheet2 = wb2.getSheetAt(0);//onglet 0\n\t\t\t\tnbfeuille= wb2.getNumberOfSheets();//retourne le nombre de feuille renseign\u00e9\n\t\t\t\tXSSFRow row2 = null;\n\t\t\t\tXSSFCell cell2 = null;\n\t\t\t\tXSSFCellStyle cellStyle = null;\n\t\t\t\tXSSFDataFormat fmt = wb2.createDataFormat(); //version .xlsx\n\t\t\t\t//pour ouvrir un .xlsx\n\t\t\t    FormulaEvaluator evaluator = wb2.getCreationHelper().createFormulaEvaluator();\n\t\t\t    evaluator.evaluate(cell2);\n\t\t\t\t\n\t\t\t\tString prenom_proj;\n\t\t\t\tCollator usCollator;\n\t\t\t\tSystem.out.println(\"wb2.getNumberOfNames(): \"+nbfeuille);\n\t\t\t\t// il faut d\u00e9finir la feuille qui sera aliment\u00e9:\n\t\t\t\t//Parcourir les feuilles du document\n\t\t\t\t//si la semaine correspond au libell\u00e9 d'une feuille\n\t\t\t\tfor (int g=0; g<nbfeuille; g++){//boucle de parcours des onglets\n\t\t\t\t\tsheet2 = wb2.getSheetAt(g);\n\t\t\t\t\tonglet=sheet2.getSheetName();// on r\u00e9cup\u00e8re le nom de la feuille excel en String\n\t\t\t\t\tif(onglet.startsWith(\"S\")){//si ca commence par \"S\"\n\t\t\t\t\t\t//on enleve le \"S\"\n\t\t\t\t\t\tsemaine_en_string=onglet.substring(1);\n\t\t\t\t\t\t// on converti le nom de l'onglet en Int\n\t\t\t\t\t\tonglet_conv = Integer.parseInt(semaine_en_string);\n\t\t\t\t\t\tSystem.out.println(\"onglet: \"+onglet_conv);\n\t\t\t\t\t\tif(onglet_conv == semaine){//si la semaine de l'onglet du doc \"extract.xls\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t//correspond \u00e0 la semaine de l'ann\u00e9e trouver dans le fichier \"Projection_2012_Eq2.xls\"\n\t\t\t\t\t\t\n\t\t\t\t\t\t\tSystem.out.println(\"onglet de la semaine \"+onglet_conv+\" TROUVEE !\");\n\t\t\t\t\t\t\tfor (Iterator it = sheet2.rowIterator(); it.hasNext();){//boucle de parcours du fichier de ligne en ligne\n\t\t\t\t\t\t\t\trow2 = (XSSFRow) it.next();\n\t\t\t\t\t\t\t\tif(row2.getCell(0)!= null && row2.getRowNum() <= 19){// si la ligne est diff\u00e9rent de null et inf\u00e9rieur ou \u00e9gale \u00e0 la 20\u00e8me ligne\n\t\t\t\t\t\t\t\t\tif(!row2.getCell(0).getStringCellValue().equals(\"Noms\") && !row2.getCell(0).getStringCellValue().equals(\"EQUIPE\") && !row2.getCell(0).getStringCellValue().equals(\"\")){\n\t\t\t\t\t\t\t\t\t\t//on r\u00e9cup\u00e8re le 1er pr\u00e9nom du fichier Projection\n\t\t\t\t\t\t\t\t\t\tprenom_proj=row2.getCell(0).getStringCellValue().toUpperCase();\n\t\t\t\t\t\t\t\t\t\tfor (int d=0; d<tab.length;d++){\n\t\t\t\t\t\t\t\t\t\t\tif(tab[0][d] != null || tab[1][d]!=null){//si l'une des cellules n'est pas null\n\t\t\t\t\t\t\t\t\t\t\t\t//System.out.println(\"Tab\"+tab[0][d]);\n\t\t\t\t\t\t\t\t\t\t\t\t//System.out.println(\"pr\u00e9nom: \"+prenom_proj);\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t//Get the Collator for US English and set its strength to PRIMARY\n\t\t\t\t\t\t\t\t\t\t\t\t usCollator = Collator.getInstance(Locale.FRANCE);\n\t\t\t\t\t\t\t\t\t\t\t\t usCollator.setStrength(Collator.PRIMARY);\n\t\t\t\t\t\t\t\t\t\t\t\t if( usCollator.compare(prenom_proj, tab[0][d]) == 0 ){//si le pr\u00e9nom trouv\u00e9 dans le fichier 'Projection_2012_Eq2.xlsx' correspond au prenom de l'extract Hermes\n\t\t\t\t\t\t\t\t\t\t\t\t     //System.out.println(\"Strings are equivalent\");\n\t\t\t\t\t\t\t\t\t\t\t\t     System.out.println(\"Agent: \"+tab[0][d]+\" Validation: \"+tabvalidation[1][d]);\n\t\t\t\t\t\t\t\t\t\t\t\t     //on r\u00e9cup\u00e8re la ligne du pr\u00e9nom\n\t\t\t\t\t\t\t\t\t\t\t\t     ligne_trouvee= row2.getCell(0).getRowIndex();\n\t\t\t\t\t\t\t\t\t\t\t\t     ligne_trouvee++;//pour \u00e9crire dans la bonne ligne\n\t\t\t\t\t\t\t\t\t\t\t\t     //System.out.println(\"ligne TROUVEE: \"+ligne_trouvee);\n\t\t\t\t\t\t\t\t\t\t\t\t     //on r\u00e9cup\u00e8re la valeur si pr\u00e9sente pour l'additionner\n\t\t\t\t\t\t\t\t\t\t\t\t     cell2 = row2.getCell(8);// colonne(I)\n\t\t\t\t\t\t\t\t\t\t\t\t     validation_ancienne=(int)cell2.getNumericCellValue();\n\t\t\t\t\t\t\t\t\t\t\t\t     System.out.println(\"valdation_ancienne\"+validation_ancienne);\n\t\t\t\t\t\t\t\t\t\t\t\t     //on additionne\n\t\t\t\t\t\t\t\t\t\t\t\t     validation_nouvelle=validation_ancienne+tabvalidation[1][d];\n\t\t\t\t\t\t\t\t\t\t\t\t     \t//on \u00e9crit dans la colonne I la validation du pr\u00e9nom trouv\u00e9\n\t\t\t\t\t\t\t\t\t\t\t\t     \t//cell2 = row2.getCell(8);// colonne(I)\n\t\t\t\t\t\t\t\t\t\t\t\t\t \tcell2 = row2.createCell(8);\n\t\t\t\t\t\t\t\t\t\t\t\t\t    cell2.setCellType(Cell.CELL_TYPE_NUMERIC);\n\t\t\t\t\t\t\t\t\t\t\t\t\t    cell2.setCellValue(validation_nouvelle);\n\t\t\t\t\t\t\t\t\t\t\t\t\t    System.out.println(\"Nouvelle valeur \u00e9crite\"+validation_nouvelle);\n\t\t\t\t\t\t\t\t\t\t\t\t\t    \n\t\t\t\t\t\t\t\t\t\t\t\t\t    //on r\u00e9-\u00e9crit la formule pour la colonne J\n\t\t\t\t\t\t\t\t\t\t\t\t\t    cell2 = row2.getCell(9);// colonne(J)\n\t\t\t\t\t\t\t\t\t\t\t\t\t \tcell2 = row2.createCell(9);\n\t\t\t\t\t\t\t\t\t\t\t\t\t \tcell2.setCellFormula(\"I\"+ligne_trouvee+\"/B\"+ligne_trouvee);\n\t\t\t\t\t\t\t\t\t\t\t\t\t \t//System.out.println(\"Formule: I\"+ligne_trouvee+\"/B\"+ligne_trouvee);\n\t\t\t\t\t\t\t\t\t\t\t\t\t \t//arrondir \u00e0 2 chiffre apr\u00e8s la virgule\n\t\t\t\t\t\t\t\t\t\t\t\t\t    cellStyle = wb2.createCellStyle();\n\t\t\t\t\t\t\t\t\t\t\t\t\t    cellStyle.setDataFormat(fmt.getFormat(\"#,##0.00\"));\n\t\t\t\t\t\t\t\t\t\t\t\t\t    //cellStyle.setDataFormat(HSSFDataFormat.getBuiltinFormat(\"#,##0.00\"));//version .xls\n\t\t\t\t\t\t\t\t\t\t\t\t\t    cell2.setCellStyle(cellStyle);\n\t\t\t\t\t\t\t\t\t\t\t\t\t \t\n\t\t\t\t\t\t\t\t\t\t\t\t\t \t//on r\u00e9-\u00e9crit la formule pour la colonne K\n\t\t\t\t\t\t\t\t\t\t\t\t\t    cell2 = row2.getCell(10);// colonne(K)\n\t\t\t\t\t\t\t\t\t\t\t\t\t \tcell2 = row2.createCell(10);\n\t\t\t\t\t\t\t\t\t\t\t\t\t \tcell2.setCellFormula(\"I\"+ligne_trouvee+\"/C\"+ligne_trouvee);\n\t\t\t\t\t\t\t\t\t\t\t\t\t \t//arrondir \u00e0 2 chiffre apr\u00e8s la virgule\n\t\t\t\t\t\t\t\t\t\t\t\t\t    cellStyle = wb2.createCellStyle();\n\t\t\t\t\t\t\t\t\t\t\t\t\t    cellStyle.setDataFormat(fmt.getFormat(\"0.0%\"));\n\t\t\t\t\t\t\t\t\t\t\t\t\t    cell2.setCellStyle(cellStyle);\n\t\t\t\t\t\t\t\t\t\t\t\t\t \t\n\t\t\t\t\t\t\t\t\t\t\t\t\t \t//on r\u00e9-\u00e9crit la formule pour la colonne L\n\t\t\t\t\t\t\t\t\t\t\t\t\t    cell2 = row2.getCell(11);// colonne(L)\n\t\t\t\t\t\t\t\t\t\t\t\t\t \tcell2 = row2.createCell(11);\n\t\t\t\t\t\t\t\t\t\t\t\t\t \tcell2.setCellFormula(\"J\"+ligne_trouvee+\"*7\");\n\t\t\t\t\t\t\t\t\t\t\t\t\t \t//System.out.println(\"Formule: J\"+ligne_trouvee+\"*7\");\n\t\t\t\t\t\t\t\t\t\t\t\t\t \t//arrondir \u00e0 2 chiffre apr\u00e8s la virgule\n\t\t\t\t\t\t\t\t\t\t\t\t\t    cellStyle = wb2.createCellStyle();\n\t\t\t\t\t\t\t\t\t\t\t\t\t    cellStyle.setDataFormat(fmt.getFormat(\"#,##0.00\"));\n\t\t\t\t\t\t\t\t\t\t\t\t\t    cell2.setCellStyle(cellStyle);\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t \tligne_trouvee--;//pour retrouver ma ligne\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t//on r\u00e9\u00e9crit la formule du total colonne I en se fixant \u00e0 la ligne de total des equipe (20)\n\t\t\t\t\t\t\trow2.setRowNum(20);\n\t\t\t\t\t\t    cell2 = row2.createCell(8);\n\t\t\t\t\t\t    String colonneI = \"I3:I20\";\n\t\t\t\t\t\t    cell2.setCellFormula(\"SUM(I3:I20)\");\n\t\t\t\t\t\t    //format EQUIPE de la colonne I\n\t\t\t\t\t\t    cellStyle = wb2.createCellStyle();\n\t\t\t\t\t\t    cellStyle.setDataFormat(fmt.getFormat(\"#,##0\"));//format 1 000 par ex.\n\t\t\t\t\t\t    cell2.setCellStyle(cellStyle);\n\t\t\t\t\t\t    System.out.println(\"Total Validation refait\");\n\t\t\t\t\t\t    \n\t\t\t\t\t\t    //on r\u00e9\u00e9crit la formule du total colonne J\n\t\t\t\t\t\t\trow2.setRowNum(20);\n\t\t\t\t\t\t\t//System.out.println(\"on doit se fixer \u00e0 la ligne 20: \"+row2.getRowNum());\n\t\t\t\t\t\t    cell2 = row2.createCell(9);//colonne J\n\t\t\t\t\t\t    String resultatParH = \"SUM(I3:I20)/SUM(B3:B20)\";\n\t\t\t\t\t\t    cell2.setCellFormula(resultatParH);\n\t\t\t\t\t\t    //arrondir \u00e0 2 chiffre apr\u00e8s la virgule\n\t\t\t\t\t\t    cellStyle = wb2.createCellStyle();\n\t\t\t\t\t\t    cellStyle.setDataFormat(fmt.getFormat(\"#,##0.00\"));\n\t\t\t\t\t\t    cell2.setCellStyle(cellStyle);\n\t\t\t\t\t\t    \n\t\t\t\t\t\t    //on r\u00e9\u00e9crit la formule du total colonne K\n\t\t\t\t\t\t\trow2.setRowNum(20);\n\t\t\t\t\t\t\t//System.out.println(\"on doit se fixer \u00e0 la ligne 20: \"+row2.getRowNum());\n\t\t\t\t\t\t    cell2 = row2.createCell(10);//colonne K\n\t\t\t\t\t\t    String txtransfo = \"(SUM(I3:I20)/SUM(C3:C20))/100\";//j'ai rajout\u00e9 /100 pour prendre en compte le % dans l'ecriture du format\n\t\t\t\t\t\t    cell2.setCellFormula(txtransfo);\n\t\t\t\t\t\t    //arrondir \u00e0 2 chiffre apr\u00e8s la virgule\n\t\t\t\t\t\t    cellStyle = wb2.createCellStyle();\n\t\t\t\t\t\t    cellStyle.setDataFormat(fmt.getFormat(\"0.00%\"));\n\t\t\t\t\t\t    cell2.setCellStyle(cellStyle);\n\t\t\t\t\t\t    \n\t\t\t\t\t\t    //on r\u00e9\u00e9crit la formule du total colonne L\n\t\t\t\t\t\t\trow2.setRowNum(20);\n\t\t\t\t\t\t\t//System.out.println(\"on doit se fixer \u00e0 la ligne 20: \"+row2.getRowNum());\n\t\t\t\t\t\t    cell2 = row2.createCell(11);//colonne L\n\t\t\t\t\t\t    String resultatetp = \"J21*7\";\n\t\t\t\t\t\t    cell2.setCellFormula(resultatetp);\n\t\t\t\t\t\t    //arrondir \u00e0 2 chiffre apr\u00e8s la virgule\n\t\t\t\t\t\t    cellStyle = wb2.createCellStyle();\n\t\t\t\t\t\t    cellStyle.setDataFormat(fmt.getFormat(\"0.00\"));\n\t\t\t\t\t\t    cell2.setCellStyle(cellStyle);\n\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\t}//for\t\n\t\t\t\t//pour ecrire dans le m\u00eame fichier\n\t\t\t\tFileOutputStream fileOut = new FileOutputStream(\"C:/Donnees/Aide_Manager/Projection_2012_Eq2.xlsx\");\n\t\t\t\twb2.write(fileOut);\n\t\t\t    fileOut.close();\n\t\t} catch (FileNotFoundException e){\n\t\t\te.printStackTrace();\n\t\t} catch (IOException e) {\n\t\t\te.printStackTrace();\n\t\t} catch (InvalidFormatException e) {\n\t\t\t// TODO Auto-generated catch block\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n\t/*public void ecrireDansFichier(String monfichierdedestination, String Tableau[][]){\n\t\tInputStream inp;\n\t\ttry {\n\t\t\tinp = new FileInputStream(\"workbook.xls\");//\u00e0 remplacer par monfichierdedestination\n\n\t    Workbook wb;\n\t\ttry {\n\t\t\twb = WorkbookFactory.create(inp);\n\t\t\n\t    Sheet sheet = wb.getSheet(\"test\");//onglet 0\n\t    Row row = sheet.getRow(3);//en fonction des personnes\n\t    Cell cell = row.getCell(8);//colonne 8 (I)\n\t    if (cell == null)\n\t        cell = row.createCell(8);//ecrire \u00e0 la colonne 8\n\t    cell.setCellType(Cell.CELL_TYPE_STRING);\n\t    cell.setCellValue(\"j'\u00e9crit dans la feuille 'test'\");\n\n\t    // Write the output to a file\n\t    FileOutputStream fileOut = new FileOutputStream(\"workbook.xls\");\n\t    wb.write(fileOut);\n\t    fileOut.close();\n\t\t} catch (FileNotFoundException e) {\n\t\t\t// TODO Auto-generated catch block\n\t\t\te.printStackTrace();\n\t\t}\n\t\t} catch (InvalidFormatException e) {\n\t\t\t// TODO Auto-generated catch block\n\t\t\te.printStackTrace();\n\t\t} catch (IOException e) {\n\t\t\t// TODO Auto-generated catch block\n\t\t\te.printStackTrace();\n\t\t}\n\t\t\n\t}*/\n\t\n}", "id": 154616, "time": "2012-03-07T10:40:30Z", "bug_id": 49312, "creation_time": "2012-03-07T10:40:30Z", "is_private": false, "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 49312, "text": "Please attach the input file, without it  we cannot ru your code to reproduce the problem.\n\nYegor\n\n(In reply to comment #6)\n> mee too.\n> I have this error:\n> Exception in thread \"main\" java.lang.RuntimeException: Unexpected missing row\n> when some rows already present\n>     at\n>", "count": 7, "id": 155096, "time": "2012-03-20T11:11:06Z", "creator": "yegor@dinom.ru", "creation_time": "2012-03-20T11:11:06Z", "is_private": false}, {"count": 8, "tags": [], "bug_id": 49312, "attachment_id": null, "is_private": false, "id": 157986, "time": "2012-04-12T14:06:00Z", "creator": "sime.essert@gmail.com", "creation_time": "2012-04-12T14:06:00Z", "text": "I have added one problematic file on https://issues.apache.org/bugzilla/show_bug.cgi?id=47245"}, {"count": 9, "tags": [], "creator": "pedro.t.garcia@gmail.com", "text": "This looks like an exact duplicate of bug 47245.\n\n(I've added some comments there)\n\nPlease, correct me if I'm wrong.\n\n*** This bug has been marked as a duplicate of bug 47245 ***", "id": 162687, "time": "2012-10-11T10:25:24Z", "bug_id": 49312, "creation_time": "2012-10-11T10:25:24Z", "is_private": false, "attachment_id": null}]