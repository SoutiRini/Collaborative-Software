[{"count": 0, "tags": [], "bug_id": 48548, "attachment_id": null, "text": "In order to produce change bars along the columns for changed contents,\nFO supports the fo:change-bar-begin and fo:change-bar-end elements.\nThese are not supported by FOP.\nSupport for change bars should be added.\n\nEffort needed\n - add parsing and validation of fo: elements\n - determine fo elements under influence of one or more change bars\n - when creating areas from such affected fo elements, create additional areas\n    representing the change bars as defined in the FO standard.", "id": 133613, "time": "2010-01-14T13:26:15Z", "creator": "thesing@gmx.de", "creation_time": "2010-01-14T13:26:15Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 48548, "text": "Status update:\nI have been working on the change bar implementation (on and off) and reached\na state where I see first results.\n\nSummary of what has been implemented and how:\n - the change-bar-begin and change-bar-end element and attribute recognition was added\n - the semantics of change bars is that every element between the change-bar-begin and -end is \"under the influence\" of the change bar and every area it\n   produces should be decorated by a change bar with the form/placement given \n   with the change-bar-begin element \n   Thus, for every FO object, one has to keep track, which change bars (can be\n    more than one) influence it.  I added that to FONode and as the vector of\n    \"active\" change bars has to be kept globally added that to FOUserAgent.\n   Thus, after .fo parsing, at each FObj we have the vector of change bars\n    influencing the FObj.\n - For each area generated by an object (\"influenced area\")\n    influenced by change bars, a change bar\n    area has to added (for each such change bar). \n   I choose to implement the rendering of change bars in the Render (in \n    AbstractRenderer.java), as the placement of change bar areas is not\n    decideable locally to each \"influenced area\" but rather relative to column\n    start/end/left/right edges, which seemed easier to implement when the\n    renderer iterates through all areas anyhow.\n   Thus, the \"influenced areas\" only record the same vector of change bars that\n    their generating layout manager (via the FObj associated to the \n     LayoutManager) had, when they are generated.\n   I modified the code under oa.fop.layoutmgr.* to copy over the vector of \n    change bars to the Area, which was modified to have an additional vector \n    element.\n\n - In the AbstractRenderer, the code that produces output for Block or other \n   Areas was modified to draw the change bars, if any is attached to the area\n    (i.e. the Area was an \"influenced area\").\n   Also, the computation of the relevant places along columns, etc. is computed\n    there.\n   This last change needs information about the reference orientation and the\n    writing mode, as change bar placement can depend on the binding edge being\n    coincident with start or stop edge and on can be explicitly be placed on\n    \"left\" and \"right\" edges.\n   This amounts to quite some data to record at the ReferenceRegion and handled\n    in the various constructors.\n\nFrom a memory footprint point of view, the additional effort needed by this\napproach is a vector of change bars (the change bar objects itself are shared),\nand one change bar object for each begin-change-bar element in the input.\nIn addition, a reference to this vector is attached at every Area (but the vector itself is not copied).\n\nA first implementation seems to work but has only been tested on \"normal\" change bar placement (along the inner edge of a one-column layout).\nNo writing mode or orientation variations have been tried yet:-)\n\n\nA diff with my set of changes will follow in another attachment to this PR soon.", "id": 134569, "time": "2010-02-16T18:49:44Z", "creator": "thesing@gmx.de", "creation_time": "2010-02-16T18:49:44Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 48548, "attachment_id": 25028, "text": "Created attachment 25028\nWIP patch for review.\n\nAttached is a first patch against trunk that implements change bars.\nSome things are still not perfect or missing altogether, namely\n - things mentioned in the previous attachment to this PR\n - test cases\n - The default values for the attributes of the fo:change-bar-begin element \n    are not correct\n - No attributes are currently written out for the area tree XML output that\n    would allow to recreate the change bar info when reading it back in\n - Some style issues in the code", "id": 134721, "time": "2010-02-20T10:49:39Z", "creator": "thesing@gmx.de", "creation_time": "2010-02-20T10:49:39Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 48548, "attachment_id": null, "text": "(In reply to comment #2)\n\nHi Stephan,\n\nThanks for you patch. I've only had a quick look so far, and processing it will take some time. Creating a branch will probably be useful to allow for incremental updates.\n\nI'll try and give more feedback in the next days. Meanwhile, I noticed a few mistakes in the property handling:\n- AFAIU the value of change-bar-class is not required to be unique. The nesting level must also be taken into account, which allows to clear any ambiguity in case the same name is used several times. Also, there is no default value for this property.\n- the default value of change-bar-color is the current value of the color property, not black.\n\n\nThanks,\nVincent", "id": 134766, "time": "2010-02-22T12:33:03Z", "creator": "vhennebert@gmail.com", "creation_time": "2010-02-22T12:33:03Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 48548, "is_private": false, "id": 134785, "creation_time": "2010-02-22T18:52:41Z", "time": "2010-02-22T18:52:41Z", "creator": "thesing@gmx.de", "text": "(In reply to comment #3)\n\n> I'll try and give more feedback in the next days. Meanwhile, I noticed a few\n> mistakes in the property handling:\n> - AFAIU the value of change-bar-class is not required to be unique. The nesting\n> level must also be taken into account, which allows to clear any ambiguity in\n> case the same name is used several times. Also, there is no default value for\n> this property.\n\nyes, and the code in ChangeBarBegin.java only checks, if the same class \nhas already been used in the _actual_ stack of change bars.\nIn ChangeBarEnd.java the class name is removed from the stack of change bars\nby the pop(), implemented in ChangeBar.java and via the FOUserAgent.java popChangeBar().\nThat is, the FOUserAgent holds the current stack of nested change bars and there\nthe class must be unique for each one.\nWhen the stack is copied to any FObj, a copy of the whole Vector is made and\nattached.\nAnd yes, the class has no default, so it shouldn't have one set in FOPropertyMapping.java\n\n\n> - the default value of change-bar-color is the current value of the color\n> property, not black.\n\nYes, I was just to lazy to find out, how to get it before I commited the patch:-)", "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 48548, "attachment_id": null, "is_private": false, "id": 134817, "time": "2010-02-23T15:47:13Z", "creator": "vhennebert@gmail.com", "creation_time": "2010-02-23T15:47:13Z", "text": "Discussion started on the fop-dev mailing list, see here:\nhttp://markmail.org/thread/7hhtzgndvbsgakec"}, {"count": 6, "attachment_id": null, "creator": "vhennebert@gmail.com", "is_private": false, "id": 134818, "time": "2010-02-23T16:02:44Z", "bug_id": 48548, "creation_time": "2010-02-23T16:02:44Z", "tags": [], "text": "(In reply to comment #4)\n> > - AFAIU the value of change-bar-class is not required to be unique. The nesting\n> > level must also be taken into account, which allows to clear any ambiguity in\n> > case the same name is used several times. Also, there is no default value for\n> > this property.\n> \n> yes, and the code in ChangeBarBegin.java only checks, if the same class \n> has already been used in the _actual_ stack of change bars.\n\nThat is still too restrictive. The following construct is perfectly legal:\n  <fo:change-bar-begin change-bar-class=\"my-change-bar\"/>\n  <fo:block>blah... blah...\n    <fo:change-bar-begin change-bar-class=\"my-change-bar\"/>\n    blah... blah...\n  </fo:block>\n  ...\n  <fo:change-bar-end change-bar-class=\"my-change-bar\"/>\n  <fo:change-bar-end change-bar-class=\"my-change-bar\"/>\n\nThere are two matching pairs of the same class \"my-change-bar\" but different nesting levels.\n\n\n> > - the default value of change-bar-color is the current value of the color\n> > property, not black.\n> \n> Yes, I was just to lazy to find out, how to get it before I commited the\n> patch:-)\n\nThat's ok, then just put a TODO comment to indicate that this part still needs some work (might be of help for yourself as well, actually).\n\n\nVincent"}, {"count": 7, "tags": [], "bug_id": 48548, "attachment_id": null, "is_private": false, "id": 134855, "time": "2010-02-24T11:41:17Z", "creator": "vhennebert@gmail.com", "creation_time": "2010-02-24T11:41:17Z", "text": "Hi Stephan,\n\nThere are Checkstyle issues in your patch (mainly forbidden tab characters). For your next patches, may I ask you to run Checkstyle with the checkstyle-4.0.xml file available at the root of project. No need to re-submit the current one.\n\nThanks,\nVincent"}, {"count": 8, "tags": [], "bug_id": 48548, "is_private": false, "id": 135121, "creation_time": "2010-03-06T18:31:29Z", "time": "2010-03-06T18:31:29Z", "creator": "thesing@gmx.de", "text": "Created attachment 25098\nWIP patch March 6th 2010\n\nAttached please find a new patch for the current change bar status.\n\nChanges from the last patch:\n - checkstyle issue should be resolved\n - Default values for change-bar-class and -color changed\n - If change bar is within fo:marker, make sure it gets processed correctly\n     (property handling of elements inside of fo:marker has to be different\n      for change-bar-begin/end)\n - Correct handling of check for change-bar-class property; it need not be unique\n - property for change-bar-offset added (was missing before)\n - Add writing of \"referenceOrientation\" and \"writingMode\" in the XMLRenderer\n\nWhat needs work:\n - change bars for table elements are not placed correctly (e.g. entry in second\n    column of table)\n - test cases", "attachment_id": 25098}, {"count": 9, "attachment_id": 25114, "creator": "vhennebert@gmail.com", "is_private": false, "id": 135266, "time": "2010-03-11T11:55:48Z", "bug_id": 48548, "creation_time": "2010-03-11T11:55:48Z", "tags": [], "text": "Created attachment 25114\nSimple document to test change bars\n\nI created a simple document to test the change-bar feature and it doesn't seem to work. The change bar starts and finishes too early."}, {"count": 10, "tags": [], "bug_id": 48548, "attachment_id": null, "text": "I've just created a temporary branch for the implementation of change bars:\nhttp://svn.eu.apache.org/repos/asf/xmlgraphics/fop/branches/Temp_ChangeBars\n\nStephan, please create your patches against that branch from now on. You don't need to check out the branch, you can just switch your local copy by running the following at the root:\nsvn switch http://svn.eu.apache.org/repos/asf/xmlgraphics/fop/branches/Temp_ChangeBars\n\nI'm going to apply the patch bits by bits, as issues are being resolved. I've concentrated on the FO part so far. More later.\n\nVincent", "id": 135426, "time": "2010-03-18T11:43:24Z", "creator": "vhennebert@gmail.com", "creation_time": "2010-03-18T11:43:24Z", "is_private": false}, {"count": 11, "tags": [], "bug_id": 48548, "attachment_id": null, "id": 142868, "time": "2010-12-20T16:18:45Z", "creator": "thesing@gmx.de", "creation_time": "2010-12-20T16:18:45Z", "is_private": false, "text": "(In reply to comment #9)\n> Created an attachment (id=25114) [details]\n> Simple document to test change bars\n> \n> I created a simple document to test the change-bar feature and it doesn't seem\n> to work. The change bar starts and finishes too early.\n\nyes, the logic for which elements are under change-bar influence were wrong.\n\nA fop element should only be displayed with a a change bar, if it is _totally_\nbetween a change-bar-begin and change-bar-end.\n\nI have a new implementation and will try to update the patch against trunk\nsome time this or next week.\n\nWith that new version, the example is displayed OK."}, {"count": 12, "tags": [], "bug_id": 48548, "attachment_id": null, "id": 142869, "time": "2010-12-20T16:21:52Z", "creator": "thesing@gmx.de", "creation_time": "2010-12-20T16:21:52Z", "is_private": false, "text": "(In reply to comment #11)\n> (In reply to comment #9)\n> > Created an attachment (id=25114) [details] [details]\n> > Simple document to test change bars\n> > \n> > I created a simple document to test the change-bar feature and it doesn't seem\n> > to work. The change bar starts and finishes too early.\n> \n> yes, the logic for which elements are under change-bar influence were wrong.\n> \n> A fop element should only be displayed with a a change bar, if it is _totally_\n> between a change-bar-begin and change-bar-end.\n> \n> I have a new implementation and will try to update the patch against trunk\n> some time this or next week.\n> \n> With that new version, the example is displayed OK.\n\nOh, forgot to mention: the issue with wrong placement of change bars in e.g. \ntables is also resolved with the new patch.\nReason was, that for area that are reference-areas, the (absolute) position of the\nmargins (where cb are to be placed) has to be tracked too, as the reference system\nis shifted inside the area."}, {"count": 13, "attachment_id": 26741, "creator": "thesing@gmx.de", "is_private": false, "id": 144810, "time": "2011-03-07T16:28:00Z", "bug_id": 48548, "creation_time": "2011-03-07T16:28:00Z", "tags": [], "text": "Created attachment 26741\nNew change bar patch against /trunk\n\nAttached is a new patch that adds change bar output and change-bar-begin/end\nprocessing.\nThe output is done in AbstractRenderer.java by drawing change bar areas if an area to be drawn is affected by change bars.\nAs such, it is not very efficient, i.e., it is not checked, if change bars areas overlap.\nAlso, when drawing change bars for consecutive lines, the change bars are drawn with the same height as the line area, causing gaps between the change bars (as lines are offset).\nThis has been run through checkstyle.\n\nThe remaining functionality is very much the same as the first patch presented one year (sic) ago.\nAlthough 46 files are touched, most changes are quite trivial (adding recording of change bars at areas or layout managers).\n\nThe test case attached to this PR is now handled correctly.\n\nMissing:\n Unit tests\n extensive testing."}, {"count": 14, "tags": [], "creator": "thesing@gmx.de", "text": "Created attachment 26745\nPatch against /trunk 20110308\n\nAn updated patch, last patch did not include changes to AbstractPathOrientedRenderer.java", "id": 144836, "time": "2011-03-08T15:50:58Z", "bug_id": 48548, "creation_time": "2011-03-08T15:50:58Z", "is_private": false, "attachment_id": 26745}, {"count": 15, "tags": [], "bug_id": 48548, "attachment_id": 26991, "text": "Created attachment 26991\nUpdated patch for trunk as of 12.5.2011\n\nPatch for change bar generation updated for trunk as of 12.5.2011", "id": 146285, "time": "2011-05-12T17:41:57Z", "creator": "thesing@gmx.de", "creation_time": "2011-05-12T17:41:57Z", "is_private": false}, {"count": 16, "tags": [], "bug_id": 48548, "attachment_id": null, "text": "resetting P2 open bugs to P3 pending further review", "id": 157596, "time": "2012-04-07T01:45:06Z", "creator": "gadams@apache.org", "creation_time": "2012-04-07T01:45:06Z", "is_private": false}, {"attachment_id": null, "tags": [], "creator": "gadams@apache.org", "text": "increase priority for bugs with a patch", "count": 17, "id": 157876, "time": "2012-04-11T03:22:08Z", "bug_id": 48548, "creation_time": "2012-04-11T03:22:08Z", "is_private": false}, {"count": 18, "tags": [], "bug_id": 48548, "attachment_id": 28737, "text": "Created attachment 28737\nPatch against FOP from trunk on 6.5.2012\n\nAn update for the support for change bars for current fop", "id": 158861, "time": "2012-05-06T16:16:46Z", "creator": "thesing@gmx.de", "creation_time": "2012-05-06T16:16:46Z", "is_private": false}, {"count": 19, "tags": [], "bug_id": 48548, "text": "(In reply to comment #18)\n> Created attachment 28737 [details]\n> Patch against FOP from trunk on 6.5.2012\n> \n> An update for the support for change bars for current fop\n\nquick review of the patch:\n\n(1) very important, needs to provide multiple test files to be included under test/layoutengine/standard-testcases\n\n(2) please change all code that uses if ( CONSTANT == variable ) to read if ( variable == CONSTANT ) - that is a MSFTism that we don't wish to use (though I admit it appears in various places and needs to be rooted out)\n\n(3) note that XSL-FO 1.1 6.4.14 states\n\n\"The reference-orientation and writing-mode of the region-viewport-area are determined by the formatting object that generates the area (see 6.4.5 fo:page-sequence). The reference-orientation of the region-reference-area is set to \"0\" and is, therefore, the same as the orientation established by the region-viewport-area. The writing-mode of the region-reference-area is set to the same value as that of the region-viewport-area.\"\n\nand further 6.4.5 states\n\n\"The reference-orientation and writing-mode of the region-viewport-areas are determined by the values of the \"reference-orientation\" and \"writing-mode\" properties of the fo:page-sequence.\"\n\nthis means that your changes to BodyRegion [and RegionReference] to derive the writing-mode trait of the body region reference area from the RegionBody (fo:region-body) are not quite correct;\n\nat present, i am working on a fix that processes writing modes and reference orientation for regions correctly (including support for the 'from-page-master-region()' property value function);\n\ni would suggest that, for the time being you remove all of the writing mode and reference orientation code you added, and go ahead assuming a TB_LR mode for the present; when I have my fix in place, we can coordinate the additional changes needed to handle proper drawing of change bars with other writing modes;\n\n(4) using FOUserAgent to store the change bar stack is incorrect, and violates various abstraction barriers (a clue to this is that your additional import from  o.a.f.flow is the first reference to that package from FOUserAgent); you should use o.a.f.fo.pagination.PageSequence instead, since it is page sequence which is responsible for generating change bar areas; each \n\n(5) please convert the line-ending convention of the new files you have added to use the UNIX (\\n) convention prior to creating a patch file;\n\n(6) since Vincent has already created a Temp_ChangeBars branch; i suggest you coordinate with him to (1) have him update that branch to the current trunk HEAD, (2) recreate your patch against that updated branch after taking into account any changes required by the above comments;", "id": 158862, "time": "2012-05-06T17:58:16Z", "creator": "gadams@apache.org", "creation_time": "2012-05-06T17:58:16Z", "is_private": false, "attachment_id": null}, {"count": 20, "tags": [], "creator": "gadams@apache.org", "text": "awaiting updated patch to resolve issues in comment 19", "id": 158863, "time": "2012-05-06T17:59:32Z", "bug_id": 48548, "creation_time": "2012-05-06T17:59:32Z", "is_private": false, "attachment_id": null}, {"count": 21, "tags": [], "bug_id": 48548, "text": "(In reply to comment #20)\n> awaiting updated patch to resolve issues in comment 19\n\nUpdate patch that solves issues in comment 19, except for the test cases\nwhich have to wait until I find some time to create & add them.\nAs for storing the changebars at the PageSequence instead of the FOUserAgent:\n I didn't find any existing way to obtain the current PageSequence during parsing.\n So I added code to Root that allows to obtain the last (current) page sequence\n   and also adds page sequences when they are created (getSucceedingPageSequence(..) was broken in Root, as PageSequence s were never added to the list before...)\n If there is a more direct way of doing this, please let me know.\nOtherwise, I removed the code for reference orientation and writing mode and\nhard-wired if to TB_LR and reference orientation to 0 in the AbstractRender for now.\nStyle issues should also be resolved with this patch.", "id": 158892, "time": "2012-05-07T20:32:28Z", "creator": "thesing@gmx.de", "creation_time": "2012-05-07T20:32:28Z", "is_private": false, "attachment_id": null}, {"count": 22, "tags": [], "bug_id": 48548, "attachment_id": 28738, "text": "Created attachment 28738\nNew patch taking most of issues in comment #19 into account\n\nTakes most issues from comment #19 into account, except test cases.", "id": 158893, "time": "2012-05-07T20:34:01Z", "creator": "thesing@gmx.de", "creation_time": "2012-05-07T20:34:01Z", "is_private": false}]