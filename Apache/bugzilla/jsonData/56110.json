[{"attachment_id": null, "tags": [], "bug_id": 56110, "text": "We are using Apache 2.4.7 with mod_proxy_fcgi with PHP-FPM backend, using ProxyPassMatch directive in VirtualHost context. \n\nUnder normal usage everything seems fine, but\nwe are sometimes getting a strange \"AH01068: Got bogus version 1\" error message followed by a AH01075: Error dispatching request to : error message.\n\nI did some experimenting yesterday and I managed to reproduce it accessing a 300kb file through a PHP-FPM backend from a server that is about 150 ms away from us. \nTo get this error_log message I had to cancel the running http request. I did this by quickly pressing F5 in Google Chrome, especially with unfinished loads (Network tab with 'Preserve Log upon navigation' in Chrome Devloper Tools would show 'cancelled' in the 'status' column of the unfinished requests). \n\nI'm not sure how to handle this situation, but having a scary looking error message in the error_log file is not very nice. \n\nAdditionally and possibly unrelated, I took a look in the mod_proxy_fcgi.c and found that the way this error is reported doesn't make much sense to me:\n\n\n            if (version != AP_FCGI_VERSION_1) {\n                ap_log_rerror(APLOG_MARK, APLOG_ERR, 0, r, APLOGNO(01068)\n                              \"Got bogus version %d\", (int) header.version);\n                rv = APR_EINVAL;\n                break;\n            }\n\nAP_FCGI_VERSION_1 value is defined to be 1, but the error message is \"AH01068: Got bogus version 1\", so this should not be an error, *but* the code is actually referring to the 'header.version' field that apparently has this value. \n\nNow, either this test is wrong, or the code should use the version variable instead of header.version when reporting the error.", "count": 0, "id": 172900, "time": "2014-02-05T09:19:59Z", "creator": "vrodic@gmail.com", "creation_time": "2014-02-05T09:19:59Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 56110, "is_private": false, "text": "The wrong value was logged, so we don't know that the bad number in your situation.  The logging problem is fixed in r1564756.\n\nSince the operational problem (wrong value for protocol version) is only reproducible in an error path, there's probably nothing to do at this time but fix the error message.\n\nYou can make this small change to your source and rebuild if you want to see the actual incorrect version value:\n\nhttp://svn.apache.org/viewvc/httpd/httpd/trunk/modules/proxy/mod_proxy_fcgi.c?r1=1564756&r2=1564755&pathrev=1564756\n\nI'll propose that for inclusion in the 2.4.x branch.", "id": 172906, "time": "2014-02-05T13:03:56Z", "creator": "trawick@apache.org", "creation_time": "2014-02-05T13:03:56Z", "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 56110, "attachment_id": null, "text": "The patched version reports various values like 146, 23, 33, 244, 105 on similar requests, but with different file sizes (always more than 100kb pumped from php-fpm). \n\nSo I guess the aborted/cancelled requests make the mod_proxy_fcgi access memory that shouldn't even contain the fcgi version. \n\nI don't know anything about the interaction between apache core, MPM event, mod_proxy and mod_proxy_fcgi, but it seems that it shouldn't report this error.\n\nShould I open another bug? Do you need more information?", "id": 172915, "time": "2014-02-05T17:12:19Z", "creator": "vrodic@gmail.com", "creation_time": "2014-02-05T17:12:19Z", "is_private": false}, {"count": 3, "tags": [], "creator": "trawick@apache.org", "attachment_id": null, "id": 172916, "time": "2014-02-05T17:28:27Z", "bug_id": 56110, "creation_time": "2014-02-05T17:28:27Z", "is_private": false, "text": ">The patched version reports various values like 146, 23, 33, 244, 105 on similar requests, but with different file sizes (always more than 100kb pumped from php-fpm). \n\nThat's what I would expect with the fix.  We knew it was a bogus value but didn't know what.\n\n>So I guess the aborted/cancelled requests make the mod_proxy_fcgi access memory that shouldn't even contain the fcgi version. \n\nThere's no stray memory reference.  If even one byte came back from php-fpm then it must be the version (the version is the first byte in the FastCGI header).  And the code seems to ensure that we get an entire FastCGI header, not just the first byte.  The theory that it is looking in the wrong place for the version seems to depend on apr_socket_recv() being busted.\n\n>I don't know anything about the interaction between apache core, MPM event, mod_proxy and mod_proxy_fcgi, but it seems that it shouldn't report this error.\n\n>Should I open another bug? Do you need more information?\n\nThe expected problem is that php-fpm and/or mod_proxy_fcgi are out of sync w.r.t. the FastCGI protocol at a higher level than this particular code.  Either mod_proxy_fcgi is trying to read a FastCGI header when it should not, or php-fpm has written something else when it should write the header.  That should be tracked by a different bug, preferably with a repeatable testcase provided so that someone can reproduce fairly quickly."}, {"attachment_id": null, "tags": [], "bug_id": 56110, "text": "(In reply to Vedran Rodic from comment #2)\n> The patched version reports various values like 146, 23, 33, 244, 105 on\n> similar requests, but with different file sizes (always more than 100kb\n> pumped from php-fpm). \n> \n> So I guess the aborted/cancelled requests make the mod_proxy_fcgi access\n> memory that shouldn't even contain the fcgi version. \n> \n> I don't know anything about the interaction between apache core, MPM event,\n> mod_proxy and mod_proxy_fcgi, but it seems that it shouldn't report this\n> error.\n> \n> Should I open another bug? Do you need more information?\n\nVedran, I am still experiencing similar issues using the steps you are mentioning to reproduce (cancelling the requests) on 2.4.10. The version is no longer 1 of course but it isn't clear how to quash the error. Did you ever get to the bottom of why Apache and PHP-FPM are unable to handle these cancelled requests gracefully?\n\nMy main concern is that it represents an issue with more than just the cancelled requests and perhaps normal requests are seeing a 503 too.\n\nI am also getting a lot of \"AH00485: scoreboard is full, not at MaxRequestWorkers\" when using PHP-FPM also. I am not sure if this issue is related or whether there is a misconfiguration with my event MPM. I haven't actually been able to catch the scoreboard when it was full but if it were I don't see how it would not have reached MaxRequestWorkers and be queuing requests.", "count": 4, "id": 177495, "time": "2014-09-01T14:08:48Z", "creator": "scottie@live.com", "creation_time": "2014-09-01T14:08:48Z", "is_private": false}, {"count": 5, "tags": [], "text": "Please open another bug and point to it from here.  This bug was used to a fix an error in logging.", "is_private": false, "bug_id": 56110, "id": 177497, "time": "2014-09-01T14:13:27Z", "creator": "trawick@apache.org", "creation_time": "2014-09-01T14:13:27Z", "attachment_id": null}, {"count": 6, "tags": [], "bug_id": 56110, "attachment_id": null, "is_private": false, "id": 192233, "time": "2016-07-08T08:32:40Z", "creator": "toscano.luca@gmail.com", "creation_time": "2016-07-08T08:32:40Z", "text": "For more info about the problem and how to reproduce, https://bz.apache.org/bugzilla/show_bug.cgi?id=49671"}]