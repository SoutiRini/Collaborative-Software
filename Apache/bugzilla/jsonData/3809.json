[{"count": 0, "tags": [], "creator": "pduffin@volantis.com", "attachment_id": null, "text": "According to the class loader documentation the common/lib directory\nshould only contain the following jar files.\n\tjndi.jar\n\tnaming.jar\n\tresources.jar\n\tservlet.jar\n\nBut when I build a standard Tomcat distribution I get the following.\n\tactivation.jar\n\tcrimson.jar\t\tThis should be in server/lib.\n\tjaxp.jar\t\tThis should be in server/lib.\n\tjdbc2_0-stdext.jar\n\tjndi.jar\n\tjta-spec1_0_1.jar\n\tldap.jar\n\tmail.jar\n\tnaming-common.jar\tAssuming this is naming.jar\n\tnaming-resources.jar\tAssuming this is resources.jar\n\tservlet.jar\n\ttyrex-0.9.7.0.jar\n\nThe ones which cause me most problems are crimson.jar and jaxp.jar\nas they conflict with the XML parser which I am trying to use and\nthe documentation clearly states that Tomcat 4 will not make an\nXML parser visible to the web application. As this is something\nthat we have a lot of problems with it is very important to us.\n\nCould you please move the above jar files into the correct place,\nespecially crimson.jar and jaxp.jar and update the documentation\nto match what the distribution looks like.", "id": 5992, "time": "2001-09-25T04:00:46Z", "bug_id": 3809, "creation_time": "2001-09-25T04:00:46Z", "is_private": false}, {"count": 1, "tags": [], "text": "This is also the cause of bug 3796", "is_private": false, "id": 5999, "creator": "kevinj@develop.com", "time": "2001-09-25T06:47:18Z", "bug_id": 3809, "creation_time": "2001-09-25T06:47:18Z", "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 3809, "is_private": false, "id": 6000, "attachment_id": null, "creator": "cgreco@cisco.com", "creation_time": "2001-09-25T08:58:14Z", "time": "2001-09-25T08:58:14Z", "text": "The prescence of ldap.jar in common/lib is also causing problems.  I initially\ngot the following exception, which went away when I renamed ldap.jar to\nldap.jar.backup:\n\njava.lang.NoClassDefFoundError: com/sun/jndi/toolkit/chars/CharacterEncoder\n\tat com.sun.jndi.ldap.Connection.<init>(Connection.java:180)\n\tat com.sun.jndi.ldap.LdapClient.<init>(LdapClient.java:81)\n\tat com.sun.jndi.ldap.LdapCtx.connect(LdapCtx.java:2329)\n\tat com.sun.jndi.ldap.LdapCtx.<init>(LdapCtx.java:211)\n\tat com.sun.jndi.ldap.LdapCtxFactory.getInitialContext(LdapCtxFactory.java:79)\n\tat javax.naming.spi.NamingManager.getInitialContext(NamingManager.java:665)\n\tat javax.naming.InitialContext.getDefaultInitCtx(InitialContext.java:246)\n\tat javax.naming.InitialContext.init(InitialContext.java:222)\n\tat javax.naming.InitialContext.<init>(InitialContext.java:198)\n\tat javax.naming.directory.InitialDirContext.<init>(InitialDirContext.java:83)\n\tat LDAPUserRegistry.init(LDAPUserRegistry.java:25)\n\tat InitServlet.init(InitServlet.java:33)\n\tat org.apache.catalina.core.StandardWrapper.load(Unknown Source)\n\tat org.apache.catalina.core.StandardContext.loadOnStartup(Unknown Source)\n\tat org.apache.catalina.core.StandardContext.start(Unknown Source)\n\tat org.apache.catalina.core.ContainerBase.addChild(Unknown Source)\n\tat org.apache.catalina.core.StandardHost.addChild(Unknown Source)\n\tat org.apache.catalina.core.StandardHost.install(Unknown Source)\n\tat org.apache.catalina.startup.HostConfig.deployApps(Unknown Source)\n\tat org.apache.catalina.startup.HostConfig.start(Unknown Source)\n\tat org.apache.catalina.startup.HostConfig.lifecycleEvent(Unknown Source)\n\tat org.apache.catalina.util.LifecycleSupport.fireLifecycleEvent(Unknown Source)\n\tat org.apache.catalina.core.ContainerBase.start(Unknown Source)\n\tat org.apache.catalina.core.ContainerBase.start(Unknown Source)\n\tat org.apache.catalina.core.StandardEngine.start(Unknown Source)\n\tat org.apache.catalina.core.StandardService.start(Unknown Source)\n\tat org.apache.catalina.core.StandardServer.start(Unknown Source)\n\tat org.apache.catalina.startup.Catalina.start(Unknown Source)\n\tat org.apache.catalina.startup.Catalina.execute(Unknown Source)\n\tat org.apache.catalina.startup.Catalina.process(Unknown Source)\n\tat java.lang.reflect.Method.invoke(Native Method)\n\tat org.apache.catalina.startup.Bootstrap.main(Unknown Source)\n"}, {"count": 3, "tags": [], "creator": "remm@apache.org", "is_private": false, "id": 6002, "creation_time": "2001-09-25T09:09:20Z", "time": "2001-09-25T09:09:20Z", "bug_id": 3809, "text": "*** Bug 3796 has been marked as a duplicate of this bug. ***", "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 3809, "attachment_id": null, "is_private": false, "id": 6003, "time": "2001-09-25T09:19:15Z", "creator": "remm@apache.org", "creation_time": "2001-09-25T09:19:15Z", "text": "The ldap problem happens with JDK 1.3+, and is fixed in the HEAD of the CVS. \nThe workaround for the bug is relatively simple (I suppose you found it \nalready): delete ldap.jar.\n\nWe will document the new policy regarding the XML parser, but I'm afraid there \nare as many people if not more who had problems with the absence of a XML \nparser.\n\nCraig is working on this, so I'll leave the bug open."}, {"count": 5, "tags": [], "bug_id": 3809, "attachment_id": null, "text": "Those people who had problems because the XML parser had been removed have\na very easy documented solution, they simply copy crimson.jar and jaxp.jar\ninto their WEB-INF/lib directory and they are sorted.\n\nThose of us who need a particular XML parser have no option short of modifying\nthe distribution to move the crimson.jar and jaxp.jar out of the common/lib\ndirectory and into the server/lib directory. This modification would of course\nbreak other web applications which rely on it being there.\n\nCould you clarify what you mean by the new policy with the XML parser\nwill be ? Are you saying that what is currently documented will change,\nor that the distribution will be modified as I have requested ?\n", "id": 6005, "time": "2001-09-25T09:37:25Z", "creator": "pduffin@volantis.com", "creation_time": "2001-09-25T09:37:25Z", "is_private": false}, {"count": 6, "tags": [], "text": "As I've seen nothing go by on this for a week or so I wondered if I could also \nask for clarification. Isn't the solution to this to put the jars in \nthe 'right' place. Basically I moved \nactivation.jar \ncrimson.jar\njaxp.jar\njdbc2_0-stdext.jar\njta-spec1_0_1.jar\nldap.jar\nmail.jar and\ntyrex-0.9.7.0.jar\n\nto server/lib\n\nThe common/lib directory is now back to what the rc1 releases looked like (I \ndont't have rc2).\n\nMy apps all now work, but I'm assuming it can't be this simple - could anybody \ncomment?\n\nThanks\n", "is_private": false, "bug_id": 3809, "id": 6193, "time": "2001-09-29T01:04:20Z", "creator": "kevinj@develop.com", "creation_time": "2001-09-29T01:04:20Z", "attachment_id": null}, {"count": 7, "tags": [], "bug_id": 3809, "is_private": false, "id": 6221, "attachment_id": null, "creator": "pduffin@volantis.com", "creation_time": "2001-10-01T01:59:14Z", "time": "2001-10-01T01:59:14Z", "text": "It is that simple as it was designed to be that simple but it looks as though \nsomething has changed, otherwise this simple problem would have been fixed.\nSee the comments from Remy Maucherat 2001-09-25 09:19, he seems to imply that\nthis problem will not be fixed and instead the documentation will be changed\nwhich is not really an acceptable solution."}, {"count": 8, "tags": [], "bug_id": 3809, "attachment_id": null, "id": 6224, "time": "2001-10-01T05:34:46Z", "creator": "kevinj@develop.com", "creation_time": "2001-10-01T05:34:46Z", "is_private": false, "text": "I can only agree with Paul here.\n\nCan anybody say when the policy with regard to Jar files changed; is it likely \nto be changed back; and what is likely to be the outcome for this bug?"}, {"count": 9, "tags": [], "bug_id": 3809, "is_private": false, "id": 6245, "creation_time": "2001-10-01T13:04:41Z", "time": "2001-10-01T13:04:41Z", "creator": "craig.mcclanahan@sun.com", "text": "Here's the current status my recommendations on dealing with the several issues\nraised in this bug report:\n\n* Should Tomcat 4 expose an XML parser by default to web apps?\n  (Tomcat 3.2 does.  All J2EE servers do.  Lack of this causes\n  lots of newbie user problems).\n\n    Recommendation:  Yes\n\n* Which parser should be exposed by default?\n\n    Recommendation:  Xerces 1.4.3 (this is implemented in\n    the current CVS code, and seems to solve all of the\n    sealing violation and class cast exception problems\n    caused by JAXP)\n\n    Note:  The release notes will tell you how to undo this\n    if you don't want to - but we're talking about *defaults*.\n\n* What about problems caused by \"jndi.jar\"?\n\n    Recommendation:  Fixed in most recent CVS code.\n    This JAR file will not be included in the class\n    loader on JDK 1.3 or later systems where it's already\n    integrated into the JDK.\n\n* What about problems caused by \"ldap.jar\"?\n\n    Recommendation:  Remove from the build.  It only\n    affects JDK 1.2.2 users that want to use JNDIRealm.\n    NOTE:  Conditional inclusion fix for jndi.jar works\n    for this (and for several other libraries that\n    have been included in JDK 1.4).\n\nBottom line - I believe that all of the issues raised by this bug report have\nbeen addressed in current CVS code that will be included in 4.0.1.  I will close\nthe bug report on that basis.  Anyone who still has a problem with *CURRENT CVS\nCODE* on the \"tomcat_40_branch\" branch can reopen it.\n", "attachment_id": null}, {"count": 10, "tags": [], "bug_id": 3809, "attachment_id": null, "text": "Does this mean that although a default parser is available (and I like the \nchoice of Xerces) I can still override this in my webapp?", "id": 6261, "time": "2001-10-01T23:56:25Z", "creator": "kevinj@develop.com", "creation_time": "2001-10-01T23:56:25Z", "is_private": false}, {"count": 11, "tags": [], "text": "Firstly, I think that it is wrong to expose an XML parser just because other\nJ2EE servers do. We use most if not all of the major J2EE servers and each one\ncauses us problems because of the XML parser that they expose. They do not all\nexpose the same one, the ones that they do expose support different levels of\njaxp and have different often conflicting functionality.\n\nAs for it causing problems with newbies, that should never be a reason for this\nsort of change, improved documentation and FAQs are the way to address newbie\nissues and to be honest as relative newbies we have had more problems with the\nXML parser being present than we would have had without it.\n\nAs far as I am concerned Tomcat had the perfect solution to this problem in\nits documented hierarchy of class loaders and this is a backward step. The fact\nthat an XML parser is present in the shipped code is simply a consequence of the\nimplementation, exposing that to users of the server is the equivalent to \nexposing the internals of a class. It causes instability in customer code which\ncomes to rely on it being present, reduces the amount of reuse by increasing its\ncost and also goes against all good design principles.\n\nTomcat is supposed to be a reference platform and as such should be setting the\ndirection for the other J2EE servers to move in, not being guided by them. It\nshould be the shepherd not a sheep.\n\nHaving said that if the solution is to allow web applications to control\nwhether or not they see the XML parser classes through any of the class\nloaders that they use without affecting any of the other web applications\nand without and code changes, or any changes to the installation then that\nwill probably be ok, although nowhere near as clean or elegant as the\ncurrently documented solution.\n\nIf this solution does not allow this level of control then it is not an\nacceptable solution to this problem.\n\nI am reopening as I need a reply to the above comments as I do not currently\nhave the ability to check out the latest code from CVS.", "attachment_id": null, "bug_id": 3809, "id": 6267, "time": "2001-10-02T02:26:40Z", "creator": "pduffin@volantis.com", "creation_time": "2001-10-02T02:26:40Z", "is_private": false}, {"attachment_id": null, "tags": [], "bug_id": 3809, "text": "Yes.  Against the current CVS code, all of the following work:\n* App with no parser (uses the default)\n* App with it's own copy of JAXP\n* App with it's own copy of Xerces\nwith no problems, and without changing the default file arrangement.\n\nIf you prefer in your environment to *not* expose a parser, you can move it back\nto /server/lib instead -- although you will then be required to include a parser\nin your app to use JSP pages.\n", "count": 12, "id": 6271, "time": "2001-10-02T08:30:01Z", "creator": "craig.mcclanahan@sun.com", "creation_time": "2001-10-02T08:30:01Z", "is_private": false}, {"count": 13, "tags": [], "bug_id": 3809, "attachment_id": null, "text": "Could you give a brief explanation of how a web application hides the\ndefault XML parser in order to use their own.", "id": 6272, "time": "2001-10-02T08:48:00Z", "creator": "pduffin@volantis.com", "creation_time": "2001-10-02T08:48:00Z", "is_private": false}]