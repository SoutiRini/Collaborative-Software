[{"count": 0, "tags": [], "bug_id": 61212, "text": "Created attachment 35071\nProfile Before\n\nWe do have relativelly big spring based application with ~250mb of jars.\n\nAfter migrating from tc 7 to tc 8 application boot time significantly increased. Seems that most of the time is taken by a constant call to java.util.jar.JarFile.getJarEntry. \n\nLooks like tc8 class/resource loaded on each ClassLoader.loadClass(String) iterates throught all jars and asked each jar if resource exists instead of caching jar content once in memmory.\n\ntc 8 has the ability to read jar contens only once but to enable it we had to extend org.apache.catalina.webresources.StandardRoot iwth custom implementation.\n\nAfter change total time spent on org.apache.catalina.loader.WebappClassLoaderBase.loadClass(String) dropped from 87sec to 39sec. It was 40+sec of time wasted on constant jar content check.\n\npackage org.apache.catalina.webresources;\n\nimport org.apache.catalina.LifecycleException;\nimport org.apache.catalina.WebResourceSet;\n\n/**\n * Created by adi on 09/06/2017.\n */\npublic class CustomStandardRoot extends org.apache.catalina.webresources.StandardRoot {\n\n    @Override\n    protected void startInternal() throws LifecycleException {\n        super.startInternal();\n        for (WebResourceSet webResourceSet : getClassResources()) {\n            if (webResourceSet instanceof AbstractArchiveResourceSet) {\n                // Load Jar Content into Memory\n                ((AbstractArchiveResourceSet)webResourceSet).getArchiveEntries(false);\n            }\n        }\n    }\n}\n\nand register custom implementation in TOMCAT_HOME/conf/context.xml \n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\nContext containerSciFilter=\"org.apache.tomcat.websocket.server.WsSci\">\n...\n\t<Resources cachingAllowed=\"true\" className=\"org.apache.catalina.webresources.CustomStandardRoot\"/>\t\n...\n</Context>", "id": 199363, "time": "2017-06-23T12:53:06Z", "creator": "abruzgulis@eisgroup.com", "creation_time": "2017-06-23T12:53:06Z", "is_private": false, "attachment_id": 35071}, {"text": "Created attachment 35072\nProfile After", "tags": [], "creator": "abruzgulis@eisgroup.com", "is_private": false, "count": 1, "id": 199364, "time": "2017-06-23T12:53:41Z", "bug_id": 61212, "creation_time": "2017-06-23T12:53:41Z", "attachment_id": 35072}, {"count": 2, "attachment_id": null, "creator": "abruzgulis@eisgroup.com", "is_private": false, "id": 199366, "time": "2017-06-23T13:05:46Z", "bug_id": 61212, "creation_time": "2017-06-23T13:05:46Z", "tags": [], "text": "We do have relativelly big spring based application with ~250mb of jars.\n\nAfter migrating from tc 7 to tc 8 application boot time significantly increased. Seems that most of the time is taken by a constant call to java.util.jar.JarFile.getJarEntry. \n\nLooks like tc8 class/resource loader on each ClassLoader.loadClass(String) iterates through all jars and asks each jar if resource exists (instead of caching jar content once in memory).\n\ntc 8 has the ability to read jar contens only once but to enable it we had to extend org.apache.catalina.webresources.StandardRoot with custom implementation.\n\nAfter change total time spent on org.apache.catalina.loader.WebappClassLoaderBase.loadClass(String) dropped from 87sec to 39sec. It was 40+sec of time wasted on constant jar content check.\n\npackage org.apache.catalina.webresources;\n\nimport org.apache.catalina.LifecycleException;\nimport org.apache.catalina.WebResourceSet;\n\n/**\n * Created by adi on 09/06/2017.\n */\npublic class CustomStandardRoot extends org.apache.catalina.webresources.StandardRoot {\n\n    @Override\n    protected void startInternal() throws LifecycleException {\n        super.startInternal();\n        for (WebResourceSet webResourceSet : getClassResources()) {\n            if (webResourceSet instanceof AbstractArchiveResourceSet) {\n                // Load Jar Content into Memory\n                ((AbstractArchiveResourceSet)webResourceSet).getArchiveEntries(false);\n            }\n        }\n    }\n}\n\nand register custom implementation in TOMCAT_HOME/conf/context.xml \n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\nContext containerSciFilter=\"org.apache.tomcat.websocket.server.WsSci\">\n...\n\t<Resources cachingAllowed=\"true\" className=\"org.apache.catalina.webresources.CustomStandardRoot\"/>\t\n...\n</Context>"}, {"count": 3, "tags": [], "bug_id": 61212, "text": "\n\n*** This bug has been marked as a duplicate of bug 60963 ***", "id": 199371, "time": "2017-06-23T18:59:16Z", "creator": "markt@apache.org", "creation_time": "2017-06-23T18:59:16Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 61212, "attachment_id": null, "id": 199606, "time": "2017-07-06T12:28:57Z", "creator": "abruzgulis@eisgroup.com", "creation_time": "2017-07-06T12:28:57Z", "is_private": false, "text": "We face this issue with unpacked war so I'm not sure if this is a duplicate"}, {"text": "Slow startup issues with unpacked web applications are most likely a configuration issue.\n\nSee https://wiki.apache.org/tomcat/HowTo/FasterStartUp and follow up on the users list if you need further assistance.", "tags": [], "creator": "markt@apache.org", "is_private": false, "count": 5, "id": 199607, "time": "2017-07-06T12:40:35Z", "bug_id": 61212, "creation_time": "2017-07-06T12:40:35Z", "attachment_id": null}, {"count": 6, "tags": [], "creator": "abruzgulis@eisgroup.com", "text": "We checked all FasterStartUp hints none of them gave material improvement.", "id": 199608, "time": "2017-07-06T12:52:52Z", "bug_id": 61212, "creation_time": "2017-07-06T12:52:52Z", "is_private": false, "attachment_id": null}]