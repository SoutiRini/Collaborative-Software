[{"count": 0, "tags": [], "bug_id": 33186, "is_private": false, "text": "JAASRealm searches the WebApp classloader during authentication even with \nuseContextClassLoader=\"true\".  This is the case in the standard single instance \nconfiguration ($CATALINA_BASE unset) and the multiple-instance configuration \n($CATALINA_BASE set and != $CATALINA_HOME).  Probably a result of feature \nenhancement bug 29406.\n\nExpected behavior is that with useContextClassLoader=\"true\" JAAS authentication \nuses classes from $CATALINA_HOME/server/lib (and JDBC Driver from \n$CATALINA_HOME/common/lib) and WebApp uses classes from \n$CATALINA_BASE/webapps/myWebApp/... using its WebApp classloader.  \n\nObserved behavior is NoClassDefError during JAAS authentication (Hibernate \ntrying to load application classes that exist in both $CATALINA_HOME/server/lib \nand $CATALINA_BASE/webapps/myWebApp/... ). \n\nVerification #1: Confirmed by debugging the code and inspecting \nThread.currentThread().getContextClassLoader() in code just before \nNoClassDefError is thrown (during execution of LoginContex.login() -> \nLoginContext.invoke() -> our JAAS module execution). Classloader identifies \nitself as the WebApp class loader and has settings and parents appropriate to \nthat designation.\n\nVerification #2: The exact same setup works perfectly if we set \nuseContextClassloader=\"false\".\n\nVerifcation #3: Removing certain classes and jars from webapps/myWebApp fixes \nthe NoClassDefError and allows login/authentication to proceed with \nuseContextClassloader=\"true\".  \n\n\nWhat is puzzling is why the WebApp classloader is unable to load the user class \nin the original configuration.  It must be in some odd state because with \nuseContextClassloader=\"false\" it has access to exactly the same set of classes \nand works.\n\nSetup:\n\nOracle JDBC drivers (classes12.jar and ojdbc14.jar) in $CATALINA_HOME/common/lib\nCustom JAAS module libraries and support (including Hibernate 2.1.7c) in \n$CATALINA_HOME/server/lib/oracle-auth.jar\nJAVA_OPTS=-Djava.security.auth.login.config=${CATALINA_HOME}/bin/login.conf\nlogin.conf in $CATALINA_HOME/bin\n\nWebApp myWebApp installed as $CATALINA_BASE/webapps/myWebApp.war (auto-exploded \ninto $CATALINA_BASE/webapps/myWebApp/)\nmyWebApp.war contains all the classes included in oracle-auth.jar plus JDBC \ndrivers and additional libraries.\n\nConfig files attached.", "id": 69888, "time": "2005-01-21T02:41:22Z", "creator": "asfbugzilla@nuru.net", "creation_time": "2005-01-21T02:41:22Z", "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 33186, "attachment_id": 14056, "id": 69889, "time": "2005-01-21T02:44:17Z", "creator": "asfbugzilla@nuru.net", "creation_time": "2005-01-21T02:44:17Z", "is_private": false, "text": "Created attachment 14056\nExample server.xml to demonstrate the bug"}, {"count": 2, "tags": [], "creator": "asfbugzilla@nuru.net", "attachment_id": 14057, "text": "Created attachment 14057\nExample web.xml for myWebApp to demonstrate the bug", "id": 69890, "time": "2005-01-21T02:45:04Z", "bug_id": 33186, "creation_time": "2005-01-21T02:45:04Z", "is_private": false}, {"count": 3, "tags": [], "creator": "asfbugzilla@nuru.net", "attachment_id": 14058, "text": "Created attachment 14058\nExample login.conf to demonstrate the bug", "id": 69891, "time": "2005-01-21T02:45:42Z", "bug_id": 33186, "creation_time": "2005-01-21T02:45:42Z", "is_private": false}, {"attachment_id": 14059, "tags": [], "creator": "asfbugzilla@nuru.net", "is_private": false, "count": 4, "id": 69892, "time": "2005-01-21T02:47:05Z", "bug_id": 33186, "creation_time": "2005-01-21T02:47:05Z", "text": "Created attachment 14059\nTomcat catalina.properties used to demonstrate the bug\n\nThis and other Tomcat properties are unmodified/as shipped in Tomcat 5.0.28"}, {"count": 5, "tags": [], "creator": "remm@apache.org", "attachment_id": null, "text": "The code seems fairly obvious that it will use the webapp classloader. The setup\nrequired for this issue is way too complex, and I am fairly certain the\npackaging is what causes the problem (for example, it is likely Hibernate\nlocated in the common CL cannot load classes from one of its child classloaders\nunless it explicitely uses the context classloader for doing so - I think it's\nrather unlikely). As a result, I think nobody will look into your issue for the\ntime being until you demonstrate the packaging isn't what causes the problem.", "id": 69909, "time": "2005-01-21T09:11:55Z", "bug_id": 33186, "creation_time": "2005-01-21T09:11:55Z", "is_private": false}, {"count": 6, "tags": [], "bug_id": 33186, "is_private": false, "text": "If \"the code seems fairly obvious it will use the webapp classloader\" then the \nentire concept of useContextClassloader=\"true\" is completely broken.  The \nexplicit purpose of that setting is to avoid using the webapp classloader and \nrestrict the JAAS module to the server's classloader.\n\nI'm also not quite sure how you want me to demonstrate that it is not a \npackaging issue beyond the 3 examples I've already given.  Note that Hibernate \nis not installed in common/lib, only server/lib and webapps/... in the setup I \ndescribed.  ", "id": 69915, "time": "2005-01-21T12:06:32Z", "creator": "asfbugzilla@nuru.net", "creation_time": "2005-01-21T12:06:32Z", "attachment_id": null}, {"count": 7, "tags": [], "creator": "remm@apache.org", "attachment_id": null, "text": "The context class loader is very obviously the webapp classloader. As I said,\nyour setup is too complex, and we won't attempt to reproduce it.\nYou can also post about your issue on tomcat-user.", "id": 69919, "time": "2005-01-21T13:19:12Z", "bug_id": 33186, "creation_time": "2005-01-21T13:19:12Z", "is_private": false}, {"count": 8, "tags": [], "creator": "asfbugzilla@nuru.net", "attachment_id": null, "text": "From http://jakarta.apache.org/tomcat/tomcat-5.0-doc/realm-howto.html#JAASRealm :\n\nuseContextClassLoader\n\nInstructs JAASRealm to use the context class loader for loading the user-specified  LoginModule class \nand associated Principal classes. The  default value is true, which is backwards-compatible with the way \nTomcat 4 works. To load classes using the container's classloader, specify  true.\n\n--- End of included documentation ---\n\nThe sentence \"To load classes using the container's classloader, specify  true\" is at odds with your \nobservation that \"The context class loader is very obviously the webapp classloader.\"  If it is the \ndocumentation that is wrong, then please fix that.  Otherwise, please re-open this bug.  I can work with \nyou to provide a test setup.\n", "id": 69961, "time": "2005-01-21T23:23:52Z", "bug_id": 33186, "creation_time": "2005-01-21T23:23:52Z", "is_private": false}, {"count": 9, "tags": [], "bug_id": 33186, "text": "It's clear reading the paragraph there's a typo, since as is it doesn't make any\nsense. It says basically:\n- to do that, set to true\n- the default is true\n- to do the opposite set to true\n\nThe webapp class loader is always set at the context class loader when\nprocessing a request. So we can deduct the container class loader is *not* the\ncontext class loader.", "id": 69963, "time": "2005-01-21T23:50:17Z", "creator": "remm@apache.org", "creation_time": "2005-01-21T23:50:17Z", "is_private": false, "attachment_id": null}, {"count": 10, "tags": [], "creator": "asfbugzilla@nuru.net", "attachment_id": null, "text": "I will grant that the documentation is not clearly written and the \nattribute \"useContextClassLoader\" confusingly named, which is why I originally \nreferenced the feature request bug 29406 which is what introduced this \nattribute.  Bug 29406 says in part:\n\nThe new behavior of Tomcat 5 which sets the ContextClassLoader in the \nJAASRealm to the server classloader prevents from defining LoginModules within \nthe context of a web app.  The JAASRealm implementation on Tomcat 5 is \ndifferent from the one on Tomcat 4 in that it sets the current Thread \nClassLoaderContext to that of the Catalina core itself before accessing a \nLoginModule.\n\n\nThis issue is discussed on Jetspeed 2 issue tracking under:\nhttp://nagoya.apache.org/jira/browse/JS2-55\n\nand on J2's mailing list at:\nhttp://nagoya.apache.org/eyebrowse/ReadMsg?listName=jetspeed-\ndev@jakarta.apache.org&msgNo=14605\n\n-- and finally --\n\nOK, I've added an attribute called useContextClassLoader, and accessors for \nthis attribute.  The default value is true, meaning use the context \nClassLoader.  This maintains backwards compatability by default.  You can set \nthis attribute to false to get the old behavior which is what you desire.\n\n-- end of included comments --\n\nThis bug I have opened, bug 33186, is about the improper implementation of that \nfeature.  The way it is supposed to work is that useContextClassLoader=\"true\" \nmakes the JAASRealm use the server's class loader, while \nuseContextClassLoader=\"false\" makes the JAASRealm use the WebApp's class \nloader.  The \"false\" case seems to work as intended, but the \"true\" case does \nnot.", "id": 69968, "time": "2005-01-22T01:41:55Z", "bug_id": 33186, "creation_time": "2005-01-22T01:41:55Z", "is_private": false}, {"count": 11, "tags": [], "creator": "remm@apache.org", "attachment_id": null, "is_private": false, "id": 69975, "time": "2005-01-22T12:43:59Z", "bug_id": 33186, "creation_time": "2005-01-22T12:43:59Z", "text": "Please stop whining. I have fixed the docs in CVS, replacing (obviously) the\nlast \"true\" by \"false\". I will not make any other changes."}, {"count": 12, "tags": [], "bug_id": 33186, "is_private": false, "text": "I'm sorry, I do not mean to be \"whining.\"  I am just now thoroughly confused as to the meaning of \nuseContextClassLoader and your change to the document does not help.  Now it looks to me like \nuseContextClassLoader=\"true\" means use the WebApp classloader and useContextClassLoader=\"false\" \nmeans use WebAppClassLoader.  Is there a way to configure a JAASRealm so that it is restricted to the \nserver's classloader?", "id": 69984, "time": "2005-01-22T22:37:20Z", "creator": "asfbugzilla@nuru.net", "creation_time": "2005-01-22T22:37:20Z", "attachment_id": null}]