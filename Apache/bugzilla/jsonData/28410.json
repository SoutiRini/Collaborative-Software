[{"count": 0, "tags": [], "bug_id": 28410, "attachment_id": null, "id": 55824, "time": "2004-04-15T13:23:47Z", "creator": "ssinyagin@yahoo.com", "creation_time": "2004-04-15T13:23:47Z", "is_private": false, "text": "Hi, \n\nI've found this bug while porting my application (http://rrfw.sf.net) from \nmod_perl 1.0 to 2.0. I believe this is not a mod_perl bug.\n\nThe RRFW login form is like follows: \n<FORM CLASS=\"LoginForm\" METHOD=\"POST\" ACTION=\"/rrfw\">\n\nApache configuration was:\n  Alias /rrfw \"/usr/local/rrfw-0.1/web\"\n  PerlRequire \"/usr/local/rrfw-0.1/share/rrfw/webmux2.pl\"\n  <Location /rrfw>\n    SetHandler modperl\n    PerlResponseHandler RRFW::Apache2Handler\n  </Location>\n  <Location /rrfw/plain/>\n    SetHandler default-handler\n    Options None\n  </Location>\n\nAfter accessing \"http://192.168.49.128/rrfw\" with the browser (both IE6 and \nMozilla), the URL is shown as \"http://192.168.49.128/rrfw/\" (slash at the end), \nand after entering login and password I got the following output of \"print \nSTDERR $r->as_string();\"  in my Perl handler:\n\n==========\nGET /rrfw/ HTTP/1.1\nAccept: image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, application/vnd.ms-\nexcel,\napplication/vnd.ms-powerpoint, application/msword, application/x-shockwave-\nflash, */*\nReferer: http://192.168.49.128/rrfw/\nAccept-Language: en\nCookie: SESSION_ID=e7138d6c1b717528572ea1379a0dcc07\nAccept-Encoding: gzip, deflate\nUser-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; .NET CLR \n1.1.4322)\nHost: 192.168.49.128\nConnection: Keep-Alive\nCache-Control: no-cache\n\nHTTP/1.1 (null)\n===========\n\nFor some strange reason, the POST request was presented as GET, without the \nform arguments. \n\nThe workaround was to change the Alias to \n  Alias /rrfw/plain \"/usr/local/rrfw-0.1/web/plain\"\n\nUnder Apache 1.3 it worked fine with either of the two Aliases.\n\nRegards,\nStanislav"}, {"count": 1, "attachment_id": null, "bug_id": 28410, "text": "Hmmm... What is happening here is that Apache sees /usr/local/rrfw-0.1/web\nas a directory and mod_dir does a trailing-slash redirect so that\nrelative references will work correctly.  POSTs tend to get converted to\nGETs when they are redirected.\n\nI don't understand what you are saying about Alias /rrfw/plain.  That shouldn't\naffect a request for /rrfw at all.", "id": 55840, "time": "2004-04-15T17:31:17Z", "creator": "slive@apache.org", "creation_time": "2004-04-15T17:31:17Z", "tags": [], "is_private": false}, {"count": 2, "tags": [], "bug_id": 28410, "text": "Hi, \n\nThe request was converted to GET incorrectly: the form input was lost.\n\nAs for alias for /rrfw/plain, that is a workaround that avoids this problem \nand still lets the application work. Actually the plain directory is the only \none \nthat needs aliasing.\n\n", "id": 55851, "time": "2004-04-15T20:10:31Z", "creator": "ssinyagin@yahoo.com", "creation_time": "2004-04-15T20:10:31Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 28410, "attachment_id": null, "id": 55857, "time": "2004-04-15T21:05:48Z", "creator": "slive@apache.org", "creation_time": "2004-04-15T21:05:48Z", "is_private": false, "text": "It is the browser that is converting from POST to GET, not the server. As I\nsaid, this is happening because the server is sending a redirect to the client.\n\nWhen the more general Alias is in place, Apache sees that there is a directory\nthere and this causes mod_dir to do a trailing-slash redirect before the handler\nis activated.\n\nAlthough I know what is happening (and that it is not a bug with Alias), I don't\nreally know enough about mod_perl and apache's handler implimentation to know if\nthere is a bug in apache.  The question is, should the SetHandler take over and\nhandle the request before mod_dir gets a crack at it?    My inclination is that\nit is up to mod_perl and your module to make that determination, but I'm not sure."}, {"count": 4, "tags": [], "creator": "ssinyagin@yahoo.com", "attachment_id": null, "id": 55866, "time": "2004-04-15T21:37:49Z", "bug_id": 28410, "creation_time": "2004-04-15T21:37:49Z", "is_private": false, "text": "So, why did it work in apache 1.3? It seemed to redirect as well, but the \nform arguments were not lost. Tomorrow I will check again with apache 1.3 \nhow it worked."}, {"count": 5, "attachment_id": null, "bug_id": 28410, "text": "Because mod_dir hooked in as a handler in 1.3 and is in fixup in 2.x.\n\nAnother workaround would be (for now), set:\n\nSetEnvIf Request_URI /rrfw redirect-carefully\n\nwhich instructs mod_dir to redirect only on GET requests.\n", "id": 55870, "time": "2004-04-15T21:55:54Z", "creator": "nd@perlig.de", "creation_time": "2004-04-15T21:55:54Z", "tags": [], "is_private": false}, {"count": 6, "tags": [], "bug_id": 28410, "attachment_id": null, "text": "And also note that there is conceptual issue here.  If /rrfw is really treated\nlike a directory on your site (and it appears that it is), then the proper\nsolution is to post to the proper url, which is \"/rrfw/\".  (Directories must\nhave a trailing slash.) If, on the other hand, /rrfw is simply a string you want\nhandled by mod_perl, then the Alias to the filesystem doesn't really make sense.\n\nAnd I doubt that you really saw a redirect in Apache 1.3, since redirects will\ncause browsers to change GETs to POSTs.\n", "id": 55872, "time": "2004-04-16T01:42:32Z", "creator": "slive@apache.org", "creation_time": "2004-04-16T01:42:32Z", "is_private": false}, {"count": 7, "tags": [], "bug_id": 28410, "text": "Not a bug in Apache's Behavior.", "id": 60347, "time": "2004-07-09T09:13:43Z", "creator": "chip@force-elite.com", "creation_time": "2004-07-09T09:13:43Z", "is_private": false, "attachment_id": null}, {"count": 8, "tags": [], "bug_id": 28410, "attachment_id": null, "id": 60350, "time": "2004-07-09T09:59:02Z", "creator": "nd@perlig.de", "creation_time": "2004-07-09T09:59:02Z", "is_private": false, "text": "DirectorySlash was added in 2.1 for that purpose. We should just backport it."}, {"count": 9, "attachment_id": null, "bug_id": 28410, "text": "DirectorySlash backported in 2.0.51.\nClosing.", "id": 127278, "time": "2009-05-22T05:34:48Z", "creator": "poirier@pobox.com", "creation_time": "2009-05-22T05:34:48Z", "tags": [], "is_private": false}, {"count": 10, "tags": [], "creator": "eboregelna@gmail.com", "attachment_id": null, "id": 147838, "time": "2011-07-08T19:46:07Z", "bug_id": 28410, "creation_time": "2011-07-08T19:46:07Z", "is_private": false, "text": "I disagree with the resolution of this bug.\n\nThe HTTP spec (http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.3) allows following a redirect *only* with a GET or HEAD. So mod_dir redirecting an incoming request which is a POST is sure to break the request. Therefore mod_dir should not redirect POST requests.\n\n-Rob Ryan"}, {"count": 11, "tags": [], "bug_id": 28410, "text": "(In reply to comment #10)\n> I disagree with the resolution of this bug.\n> \n> The HTTP spec (http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.3)\n> allows following a redirect *only* with a GET or HEAD. So mod_dir redirecting\n> an incoming request which is a POST is sure to break the request. Therefore\n> mod_dir should not redirect POST requests.\n\nThe section you link to just says user-agents shouldn't follow such a redirect without prompting the user.", "id": 147845, "time": "2011-07-08T21:55:09Z", "creator": "covener@gmail.com", "creation_time": "2011-07-08T21:55:09Z", "is_private": false, "attachment_id": null}]