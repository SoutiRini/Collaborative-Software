[{"count": 0, "tags": [], "creator": "wangweij@gmail.com", "attachment_id": null, "is_private": false, "id": 152206, "time": "2011-12-16T03:44:33Z", "bug_id": 52344, "creation_time": "2011-12-16T03:44:33Z", "text": "The jarsigner command supports the -digestalg and -sigalg options to specify the algorithms used for digesting (the lines in MANIFEST.MF and *.SF) and signing (*.RSA). It would be nice if the signjar task can support it.\n\nIn fact, in JDK 7, the default algorithms have been bumped to SHA-256 and SHA256withRSA respectively, and they are not supported on Android.\n\nSee http://stackoverflow.com/questions/8036422/android-signing-with-ant."}, {"count": 1, "tags": [], "bug_id": 52344, "is_private": false, "text": "My proposed patch is included below. Sorry I am new to both the ant tool and the source codes, and I don't know how to add a test.\n\nI did manually check the result:\n\n1. Specify a digestalg parameter and you can see changes in digest lines in META-INF/MANIFEST.MF and META-INF/ALIAS.MF.\n\n2. Specify a sigalg and feed the META-INF/ALIAS.RSA file to \"openssl asn1parse -inform DER\" and you can see the PKCS #7 SignedData struct now uses a new signature algorithm (look at the last 6 lines of output).\n\n\n$ svn di\nIndex: src/main/org/apache/tools/ant/taskdefs/SignJar.java\n===================================================================\n--- src/main/org/apache/tools/ant/taskdefs/SignJar.java\t(revision 1215029)\n+++ src/main/org/apache/tools/ant/taskdefs/SignJar.java\t(working copy)\n@@ -110,6 +110,16 @@\n     private boolean force = false;\n \n     /**\n+     * signature algorithm\n+     */\n+    protected String sigAlg;\n+\n+    /**\n+     * digest algorithm\n+     */\n+    protected String digestAlg;\n+\n+    /**\n      * error string for unit test verification: {@value}\n      */\n     public static final String ERROR_TODIR_AND_SIGNEDJAR\n@@ -276,6 +286,38 @@\n     }\n \n     /**\n+     * Signature Algorithm; optional\n+     *\n+     * @param sigAlg the signature algorithm\n+     */\n+    public void setSigAlg(String sigAlg) {\n+        this.sigAlg = sigAlg;\n+    }\n+\n+    /**\n+     * Signature Algorithm; optional\n+     */\n+    public String getSigAlg() {\n+        return sigAlg;\n+    }\n+\n+    /**\n+     * Digest Algorithm; optional\n+     *\n+     * @param digestAlg the digest algorithm\n+     */\n+    public void setDigestAlg(String digestAlg) {\n+        this.digestAlg = digestAlg;\n+    }\n+\n+    /**\n+     * Digest Algorithm; optional\n+     */\n+    public String getDigestAlg() {\n+        return digestAlg;\n+    }\n+\n+    /**\n      * sign the jar(s)\n      *\n      * @throws BuildException on errors\n@@ -420,6 +462,16 @@\n             addValue(cmd, \"-sectionsonly\");\n         }\n \n+        if (sigAlg != null) {\n+            addValue(cmd, \"-sigalg\");\n+            addValue(cmd, sigAlg);\n+        }\n+\n+        if (digestAlg != null) {\n+            addValue(cmd, \"-digestalg\");\n+            addValue(cmd, digestAlg);\n+        }\n+\n         //add -tsa operations if declared\n         addTimestampAuthorityCommands(cmd);", "id": 152207, "time": "2011-12-16T03:50:48Z", "creator": "wangweij@gmail.com", "creation_time": "2011-12-16T03:50:48Z", "attachment_id": null}, {"count": 2, "tags": [], "creator": "joe.bowbeer@gmail.com", "attachment_id": null, "text": "This is an important fix:\n\nThe default behavior of jarsigner changed in jdk7 in a way that is incompatible with Android, among others, and the signjar task in Ant doesn't even support the arguments that are needed to restore compatibility.\n\nWith this fix, Android 'release' builds can be made to work correctly on jdk7.", "id": 152230, "time": "2011-12-16T20:25:26Z", "bug_id": 52344, "creation_time": "2011-12-16T20:25:26Z", "is_private": false}, {"count": 3, "tags": [], "creator": "bodewig@apache.org", "attachment_id": null, "is_private": false, "id": 152275, "time": "2011-12-19T06:37:58Z", "bug_id": 52344, "creation_time": "2011-12-19T06:37:58Z", "text": "Patch looks reasonable except that I'd keep the field private.  It may be better to move this to AbstractJarSigner (even though VerifyJar is and probably has ever been dead).\n\nDo we need to adapt the IsSigned condition as well?\n\nTests for signjar are AntUnit based in http://svn.apache.org/repos/asf/ant/core/trunk/src/tests/antunit/taskdefs/signjar-test.xml\n\nIt would be nice if you could provide a blurb for the task's manual page (in particular one that described the problems with Android/Java7) as well.  It is in http://svn.apache.org/repos/asf/ant/core/trunk/manual/Tasks/signjar.html"}, {"count": 4, "text": "1. Sure, the field can be made private.\n\n2. The two options are only for the signing side, they are not provided on the verify side, so has better stay inside SignJar.\n\n3. What would \"isSigned\" be used for? The jarsigner does not care if a jar was signed or not.\n\n4. Sorry, I'm not familiar with AntUnit tests. Besides the XML file, are there codes behind? For this patch, you need to check if the output signed jar does use the new algorithms. As far as I know, digestalg can be checked by looking into the content of JarFile::getManifest::getEntries(). I cannot think of a good way to check for sigalg except for checking the .RSA file in raw bytes.\n\n5. Sure, from the jarsigner --help output, we have\n\n   sigalg: name of signature algorithm\n   digestalg: name of digest algorithm\n\nand an example can be\n\n<signjar destDir=\"signed\"\n    alias=\"testonly\" keystore=\"testkeystore\"\n    storepass=\"apacheant\"\n    sigalg=\"MD5withRSA\">\n    digestalg=\"SHA1\"\n  <path>\n    <fileset dir=\"dist\" includes=\"**/*.jar\" />\n  </path>\n  <flattenmapper />\n</signjar>\n\nSign all the JAR files in dist/**/*.jar using the digest algorithm SHA1 and the signature algorithm MD5withRSA. This is especially useful when you want to use the JDK 7 jarsigner (which uses SHA256 and SHA256withRSA as default) to create signed jars that will be deployed on platforms not supporting SHA256 and SHA256withRSA.", "bug_id": 52344, "is_private": false, "id": 152276, "time": "2011-12-19T06:58:49Z", "creator": "wangweij@gmail.com", "creation_time": "2011-12-19T06:58:49Z", "tags": [], "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 52344, "attachment_id": null, "id": 152277, "time": "2011-12-19T07:10:38Z", "creator": "bodewig@apache.org", "creation_time": "2011-12-19T07:10:38Z", "is_private": false, "text": "IsSigned checks whether a .SF file with a name matching that archive is located in META-INF and is used inside the task if the lazy attribute is true to skip signing the jar.\n\nI didn't check but if the different algos don't affect how the name of the signature file is constructed then we won't need to change this part.\n\nOh, and please us an attachment for the patch rather than pasting it in.\n\nThanks!"}, {"count": 6, "text": "Created attachment 28085\nPatch for sigalg and digestalg support\n\nTwo comments:\n\n1. fields now private, although I have no idea why some others (say, tsaurl, tsacert) are protected.\n\n2. the \"Required\" value for the two new attributes is a simple \"No\". They do have default values, but are vendor/release-dependent.", "bug_id": 52344, "is_private": false, "id": 152278, "time": "2011-12-19T07:23:03Z", "creator": "wangweij@gmail.com", "creation_time": "2011-12-19T07:23:03Z", "tags": [], "attachment_id": 28085}, {"count": 7, "tags": [], "creator": "wangweij@gmail.com", "attachment_id": null, "is_private": false, "id": 152279, "time": "2011-12-19T07:24:29Z", "bug_id": 52344, "creation_time": "2011-12-19T07:24:29Z", "text": "(In reply to comment #5)\n> IsSigned checks whether a .SF file with a name matching that archive is located\n> in META-INF and is used inside the task if the lazy attribute is true to skip\n> signing the jar.\n> \n> I didn't check but if the different algos don't affect how the name of the\n> signature file is constructed then we won't need to change this part.\n\nAs long as you still use the same alias name, the old .SF and .RSA files will be overwritten.\n\n> \n> Oh, and please us an attachment for the patch rather than pasting it in.\n> \n> Thanks!"}, {"count": 8, "tags": [], "creator": "wangweij@gmail.com", "attachment_id": 28086, "is_private": false, "id": 152280, "time": "2011-12-19T07:28:36Z", "bug_id": 52344, "creation_time": "2011-12-19T07:28:36Z", "text": "Created attachment 28086\nnew patch\n\nSorry, the previous has a dup <h3> line."}, {"count": 9, "attachment_id": null, "bug_id": 52344, "is_private": false, "id": 152362, "time": "2011-12-21T22:09:06Z", "creator": "bodewig@apache.org", "creation_time": "2011-12-21T22:09:06Z", "tags": [], "text": "Thanks!\n\nCommitted as svn revision 1221901"}]