[{"count": 0, "tags": [], "bug_id": 60297, "attachment_id": null, "id": 194634, "time": "2016-10-22T02:47:59Z", "creator": "ulrich.axel@gmail.com", "creation_time": "2016-10-22T02:47:59Z", "is_private": false, "text": "Working on an embedded tomcat implementation, the following feedback:\n\norg.apache.catalina.startup.Tomcat.setConnector(connector) \nIn order to prevent the default connector to be created, one has to call setConnector(connector). \nSame applies if one wants to create his own \u2018default\u2019 connector, one has to call setConnector(connector) to prevent the default connector to be created so that later one can supply her own connector. \nBut setting the connector with setConnector will not use the supplied connector as the default connector!  That is not intuitive.  \nIn fact, the connector that was set is never used in the code except being returned by the getConnector method.\nSuggestion: setConnector should actually add the connector supplied, so something like this\n        if (this.connector != null) {\n            exit; // setting it again has no effect\n        }\n        getServer();\n        service.addConnector( connector );\n        this.connector = connector;\n        return;\nThis will still introduce the issue of methods having to be called in a certain order.\nCurrently I have an implementation similar to the following to configure a custom nio2 and nio2 ssl connector.  \nI should be able to call setConnector(connector) for at least one of those, but that is currently not possible.\nInstead one has to call setConnector(connector) once to prevent the default connector to be created and then add the desired connectors.\n\n        Tomcat tomcat = new Tomcat();\n        \u2026\n        // Connector defaultConnector = getAprConnector();\n        // Connector defaultConnector = getNioConnector()\n        Connector defaultConnector = getNio2Connector();        \n        tomcat.setConnector(defaultConnector); // will result in no connector\n        \u2026\n        Service service = tomcat.getService();\n        service.addConnector(defaultConnector); // adding \u2018default\u2019 connector\n        // service.addConnector(getAprSslConnector());\n        // service.addConnectory(getNioSslConnector());\n        service.addConnector(getNio2SslConnector());\n\n\nAdditionally:\nEven with the APR library available, the default connector is created as NIO and not as APR.\nThe reason is that AprLifecycleListener.useAprConnector is initialized to false, and never set to true.\nSo the comment in Tomcat class getConnector method \n        // This creates an APR HTTP connector if AprLifecycleListener has been\n        // configured (created) and Tomcat Native library is available.\nis misleading, unless when adding the AprLifecycleListener, one also sets useAprConnector to true\nso something like this:\n        StandardServer server = (StandardServer) tomcat.getServer();\n        AprLifecycleListener listener = new AprLifecycleListener();\n        listener.setUseAprConnector(true); // setting this will default it to the APR connector, otherwise NIO connector will be chosen as default\n        server.addLifecycleListener(listener);\nNot sure of a good solution, but the comment is misleading by itself and just adding the AprLifeCycleListener w/o knowing the internals has not the result one would expect, as it will use the Nio connector by default instead of Apr even in the presence of the APR / native lib."}, {"count": 1, "tags": [], "bug_id": 60297, "attachment_id": 34401, "id": 194655, "time": "2016-10-24T14:54:45Z", "creator": "remm@apache.org", "creation_time": "2016-10-24T14:54:45Z", "is_private": false, "text": "Created attachment 34401\nTomcat get/setConnector changes\n\nOk, maybe it's not very intuitive, and I don't see the point of having a connector field in the Tomcat class.\n\nThis patch makes using setConnector optional, while getConnector will use the first connector of the service. setConnector will also add the connector if it's not been added already. Does this cover what you are talking about ? [I got really confused in the middle of it ...]"}, {"count": 2, "tags": [], "text": "The changes made will do the trick in regards to using the supplied connector.  \nIt leaves the second part of my comment open though.  So, is there any harm if the getServer() method always adds an APR LifescyleListener as follows:\nAprLifecycleListener listener = new AprLifecycleListener();\nlistener.setUseAprConnector(true); \nserver.addLifecycleListener(listener);\nThis would create the default connector to APR if available, which is in line with the standard default config.", "is_private": false, "id": 194661, "creation_time": "2016-10-25T00:54:38Z", "time": "2016-10-25T00:54:38Z", "creator": "ulrich.axel@gmail.com", "bug_id": 60297, "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 60297, "attachment_id": null, "text": "That already works, except there's no AprLifecycleListener. It's the same as the regular configuration, which has it in server.xml. Remove it and there won't be an APR connector used automatically.", "id": 194665, "time": "2016-10-25T08:42:44Z", "creator": "remm@apache.org", "creation_time": "2016-10-25T08:42:44Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 60297, "text": "Ok.", "id": 194667, "time": "2016-10-25T11:37:04Z", "creator": "ulrich.axel@gmail.com", "creation_time": "2016-10-25T11:37:04Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 60297, "attachment_id": null, "id": 194668, "time": "2016-10-25T11:56:55Z", "creator": "remm@apache.org", "creation_time": "2016-10-25T11:56:55Z", "is_private": false, "text": "The fix will be in 9.0.0.M12 and 8.5.7. Should it be ported to 8.0.x and 7.0.x ? I'm hesitating since it's a behavior change."}, {"attachment_id": null, "tags": [], "creator": "ulrich.axel@gmail.com", "is_private": false, "count": 6, "id": 194674, "time": "2016-10-26T01:28:32Z", "bug_id": 60297, "creation_time": "2016-10-26T01:28:32Z", "text": "I am suggesting not porting it to 8.0.x and 7.0.x."}]