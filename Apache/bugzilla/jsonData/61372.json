[{"count": 0, "tags": [], "bug_id": 61372, "attachment_id": null, "text": "An apache tomcat 7.0.75 server is failing to respond to a GET request, I found out that the root cause is that the client I am using (node.js request module) does not set a 'User-agent' header by default.\n\n## Stack trace of the error\n\njava.lang.NullPointerException\n\tjava.util.regex.Matcher.getTextLength(Matcher.java:1234)\n\tjava.util.regex.Matcher.reset(Matcher.java:308)\n\tjava.util.regex.Matcher.<init>(Matcher.java:228)\n\tjava.util.regex.Pattern.matcher(Pattern.java:1088)\n\torg.geonetwork.http.SessionTimeoutCookieFilter.doFilter(SessionTimeoutCookieFilter.java:47)\n\torg.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)\n\torg.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:118)\n\torg.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:84)\n\torg.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)\n\torg.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)\n\torg.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)\n\torg.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:103)\n\torg.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)\n\torg.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:113)\n\torg.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)\n\torg.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:45)\n\torg.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)\n\torg.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:183)\n\torg.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)\n\torg.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(BasicAuthenticationFilter.java:150)\n\torg.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)\n\tjeeves.config.springutil.PassthroughFilter.doFilter(PassthroughFilter.java:26)\n\torg.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)\n\tjeeves.config.springutil.MultiNodeAuthenticationFilter.doFilter(MultiNodeAuthenticationFilter.java:98)\n\torg.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)\n\torg.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:105)\n\torg.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)\n\torg.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)\n\torg.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)\n\torg.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:192)\n\torg.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:160)\n\torg.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:343)\n\torg.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:260)\n\tjeeves.config.springutil.JeevesDelegatingFilterProxy.doFilter(JeevesDelegatingFilterProxy.java:64)\n\torg.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:88)\n\torg.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:106)\n\n\n## Workaround\n\nThis can be easily worked around - when you found out the cause of the problem by specifying a user agent header (even with an empty value)\n\n## Steps to reproduce\n\nsend a curl request to an Apache Tomcat server, including the following option to remove the User-Agent header:\n\n    -H \"User-Agent:\"", "id": 200147, "time": "2017-08-02T14:05:34Z", "creator": "j2017870@mvrht.net", "creation_time": "2017-08-02T14:05:34Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 61372, "attachment_id": null, "text": "That NPE is nothing to do with Tomcat. That is coming from a library packaged with the application.", "id": 200148, "time": "2017-08-02T14:09:17Z", "creator": "markt@apache.org", "creation_time": "2017-08-02T14:09:17Z", "is_private": false}]