[{"count": 0, "tags": [], "bug_id": 51631, "text": "Created attachment 27359\nThe AuthenticatorBase.java file with fix\n\nBug in the Session Fixation Protection Feature\nThe Session Fixation Protection feature was added to Apache Tomcat 7 and Apache Tomcat 6.\nThe feature can be problematic if an application does not use Form Authenticator and in addition the application creates a session.\nIn this case the session will not be created by an authenticator and upon the next request the session fixation protection feature in the authenticator will recreate the session. The problem, that the application can lose its state.\nHow to fix the bug?\nPlease find attached patch for Apache Tomcat 7 \nThe fix will allow to authenticator to create a session upon the authentication and the application will not require to create a session.\nTomcat 7 already has variable alwaysUseSession, but unfortunately it is not possible to configure it.\nBTW, I think that better name for the variable is enforceSessionCreation\nWhen it will be released, it will be required to configure context of your application (not the main context $CATALINA_BASE/conf/context.xml)\n<Context>\n  <Valve className=\"org.apache.catalina.authenticator.BasicAuthenticator\" alwaysUseSession=\"true\"/>  \n</Context>", "id": 148473, "time": "2011-08-08T09:46:21Z", "creator": "michael_furman@hotmail.com", "creation_time": "2011-08-08T09:46:21Z", "is_private": false, "attachment_id": 27359}, {"count": 1, "tags": [], "text": "*** Bug 51632 has been marked as a duplicate of this bug. ***", "attachment_id": null, "id": 148476, "creator": "markt@apache.org", "time": "2011-08-08T09:57:52Z", "bug_id": 51631, "creation_time": "2011-08-08T09:57:52Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 51631, "text": "Full file patches, especially when against old old version of the code, are a complete pain to work with. That is why patches should be provided in diff -u format. As far as I can tell, the attached patch adds a setter and getter for alwaysUseSession.\n\nThe getter and setter are clearly missing so adding them is a good thing to do. I'll get that done for 7.0.x and 6.0.x.\n\nI fail to see how the session fixation protection is triggering session data loss. All it ever does is change the session ID, if a session already exists. It never, ever, creates a new session. For example, Tomcat's Manager application uses BASIC authentication and does not experience the problem described here.\n\nAt the moment, this looks like an application issue that should be explored on the users list. If that discussion identifies a Tomcat bug then this issue can be re-opened and an explanation provided as to how to reproduce this issue.", "id": 148478, "time": "2011-08-08T10:17:35Z", "creator": "markt@apache.org", "creation_time": "2011-08-08T10:17:35Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 51631, "attachment_id": null, "text": "Note: no need for Tomcat 6 since the attribute does not exist in that branch.", "id": 148479, "time": "2011-08-08T10:22:16Z", "creator": "markt@apache.org", "creation_time": "2011-08-08T10:22:16Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 51631, "attachment_id": null, "id": 148480, "time": "2011-08-08T10:30:38Z", "creator": "michael_furman@hotmail.com", "creation_time": "2011-08-08T10:30:38Z", "is_private": false, "text": "(In reply to comment #3)\n> Note: no need for Tomcat 6 since the attribute does not exist in that branch.\n\nI have added the attribute to the class"}, {"count": 5, "tags": [], "bug_id": 51631, "attachment_id": null, "id": 148481, "time": "2011-08-08T10:41:48Z", "creator": "michael_furman@hotmail.com", "creation_time": "2011-08-08T10:41:48Z", "is_private": false, "text": "(In reply to comment #2)\n> Full file patches, especially when against old old version of the code, are a\n> complete pain to work with. That is why patches should be provided in diff -u\n> format. As far as I can tell, the attached patch adds a setter and getter for\n> alwaysUseSession.\n> \n> The getter and setter are clearly missing so adding them is a good thing to do.\n> I'll get that done for 7.0.x and 6.0.x.\n> \n> I fail to see how the session fixation protection is triggering session data\n> loss. All it ever does is change the session ID, if a session already exists.\n> It never, ever, creates a new session. For example, Tomcat's Manager\n> application uses BASIC authentication and does not experience the problem\n> described here.\n> \n> At the moment, this looks like an application issue that should be explored on\n> the users list. If that discussion identifies a Tomcat bug then this issue can\n> be re-opened and an explanation provided as to how to reproduce this issue.\n\nI not agree that it is application issue - It is security issue.\nHow to simulate it?\nYou just need to use Basic Authentication and to protect some resource that creates a session. For example JSP file (JSP file by default create a session).\nWhat will happens?\n1) The Basic authenticator will authenticate a user without creating a session\n2) Request will come to JSP that will create a session and put some information in the session\n3) Next request to the same resource: The Basic authenticator will authenticate a request once again, since the principal does not exists in the request and finally it will call to the register method.\n4) In the register method session will be replaced by the following lines:\nif (session != null) {\n            if (changeSessionIdOnAuthentication) {\n                Manager manager = request.getContext().getManager();\n                manager.changeSessionId(session);\n                request.changeSessionId(session.getId());\n            }\n        }\n5) Application (JSP) lose everything that it put in the session\n\n\nHow to prevent a problem?\nIf an application uses session and want to use authentication that does not use a session - it is required to enforce a session creation by authenticator.\n\nSo, it is required to use the variable not for performance - but to prevent session loose.\n\nPlease tell me what you think."}, {"count": 6, "tags": [], "bug_id": 51631, "attachment_id": null, "text": "I think you need to re=read my previous response.\n\nThe Tomcat Manager application does exactly this and it works. I confirmed that a simple test application also works as expected.\n\nThe session is not removed / deleted / destroyed. The only change is that the session ID is modified.\n\nThis is an application issue and you need to use the users mailing list to get help.", "id": 148482, "time": "2011-08-08T10:53:47Z", "creator": "markt@apache.org", "creation_time": "2011-08-08T10:53:47Z", "is_private": false}]