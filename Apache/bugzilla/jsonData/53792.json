[{"count": 0, "tags": [], "creator": "adrian.moos@bedag.ch", "text": "Trying to evaluate the method expression #{beanFactory.loginBean().init}\n\nExpected behavior: lookup beanFactory, invoke its loginBean method and on its return value, invoke the init method.\n\nActual behavior: the following exception is thrown: \njavax.el.PropertyNotFoundException: /LoginView.xhtml @9,101 listener=\"#{viewBeanFactory.loginBean().initIfGetRequest}\": Property 'loginBean' not found on type ch.bedag.redacted.InteractionLayer$$EnhancerByCGLIB$$1ea36cb9\n\nLooking at the source, AstValue.getTarget(EvaluationContext) only checks whether the last child is an instanceof AstMethodParameters, but in this expression there is an additional method invocation expression before that ...\n\nPresumably, the while loop \n\n            while (base != null && i < propCount) {\n                property = this.children[i].getValue(ctx);\n                ctx.setPropertyResolved(false);\n                base = resolver.getValue(ctx, base, property);\n                i++;\n            }\n\nshould be something like:\n\n            while (base != null && i < propCount) {\n                if (i + 1 < propCount && this.children[i + 1] instanceof AstMethodParameters) {\n                    base = // result of method invocation\n                    i += 2;\n                } else {\n                    property = this.children[i].getValue(ctx);\n                    ctx.setPropertyResolved(false);\n                    base = resolver.getValue(ctx, base, property);\n                    i++;\n                }\n            }", "id": 161784, "time": "2012-08-28T20:24:06Z", "bug_id": 53792, "creation_time": "2012-08-28T20:24:06Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 53792, "text": "Having reviewed this against section 1.19 of the EL spec, I can confirm that this should work. The proposed approach looks good to me. I'll take a look at writing some test cases and a fix unless someone beats me to it.", "id": 161796, "time": "2012-08-29T00:11:58Z", "creator": "markt@apache.org", "creation_time": "2012-08-29T00:11:58Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 53792, "text": "This works for me and I have added some test cases to prove it. Also, if you want to call the init *method* then the EL should be:\n#{beanFactory.loginBean().init()}\n\nIf after reviewing your code, you believe there is still an issue (always a possibility with EL) then the best way to proceed would be to sumbit a patch to the Tomcat unit tests demonstrating the issue.", "id": 161819, "attachment_id": null, "creator": "markt@apache.org", "creation_time": "2012-08-29T20:49:33Z", "time": "2012-08-29T20:49:33Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 53792, "text": "That because you have not quite tested the same thing :-)\n\nYes, #{beanA.setBean(beanB)} works as intended, because its \"target\" is #{beanA}, which doesn't contain a method invocation expression. That's why I wrote:\n\n> but in this expression there is an additional method invocation expression before that ...\n\nAnyway, here is your test case (to be included in TestMethodExpressionImpl.java):\n\n    @Test\n    public void testBug53792c() {\n    \tMethodExpression me = factory.createMethodExpression(context, \"#{beanA.sayHello().length()}\", null, new Class<?>[] {});\n    \tme.invoke(context, null);\n    }\n\nwhich currently throws: \n\njavax.el.PropertyNotFoundException: Property 'sayHello' not found on type org.apache.el.TesterBeanA\n\tat javax.el.BeanELResolver$BeanProperties.get(BeanELResolver.java:237)\n\tat javax.el.BeanELResolver$BeanProperties.access$1(BeanELResolver.java:234)\n\tat javax.el.BeanELResolver.property(BeanELResolver.java:325)\n\tat javax.el.BeanELResolver.getValue(BeanELResolver.java:85)\n\tat javax.el.CompositeELResolver.getValue(CompositeELResolver.java:67)\n\tat org.apache.el.parser.AstValue.getTarget(AstValue.java:121)\n\tat org.apache.el.parser.AstValue.invoke(AstValue.java:245)\n\tat org.apache.el.MethodExpressionImpl.invoke(MethodExpressionImpl.java:278)\n\tat org.apache.el.TestMethodExpressionImpl.testBug53792c(TestMethodExpressionImpl.java:473)", "id": 161842, "attachment_id": null, "creator": "adrian.moos@bedag.ch", "creation_time": "2012-08-30T13:07:27Z", "time": "2012-08-30T13:07:27Z", "is_private": false}, {"count": 4, "tags": [], "creator": "markt@apache.org", "text": "#{beanA.sayHello().length()}\nThere is no sayHello() method on beanA - it is on beanB.\n\nLooking into the failure with that fix in place...", "id": 161854, "time": "2012-08-30T18:54:15Z", "bug_id": 53792, "creation_time": "2012-08-30T18:54:15Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 53792, "attachment_id": null, "id": 161856, "creation_time": "2012-08-30T19:45:51Z", "time": "2012-08-30T19:45:51Z", "creator": "markt@apache.org", "text": "Fixed. Thanks for the report and test case.\n\nThe fix was a little more extensive than the original suggestion.\n\nFixed in trunk and 7.0.x and will be included in 7.0.30 onwards.", "is_private": false}, {"count": 6, "tags": [], "creator": "adrian.moos@bedag.ch", "attachment_id": null, "id": 161919, "time": "2012-09-03T09:28:42Z", "bug_id": 53792, "creation_time": "2012-09-03T09:28:42Z", "is_private": false, "text": "Thank you for the speedy response, you set a record for the fastest bugfix I ever saw happen in response to a bug I reported to an open source project :-)"}]