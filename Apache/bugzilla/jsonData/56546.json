[{"count": 0, "tags": [], "bug_id": 56546, "attachment_id": null, "is_private": false, "id": 175332, "time": "2014-05-19T21:58:14Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2014-05-19T21:58:14Z", "text": "In r1574508 I added to Tomcat 8 the feature that when WebappClassLoader.clearReferencesThreads() detects a still-running thread in a web application, it prints not only a textual message, but also stacktrace of the problematic thread. This feature is released in 8.0.5 (8.0.4 onwards).\n\nIn Comment 3 of BZ 56399 Remy raises the issue that this feature is too noisy.\nhttps://issues.apache.org/bugzilla/show_bug.cgi?id=56399#c3\n\nFor reference, the following test cases in tomcat 8.0.8 RC print this message:\n\norg.apache.catalina.connector.TestMaxConnections\norg.apache.catalina.loader.TestWebappClassLoaderExecutorMemoryLeak\norg.apache.tomcat.websocket.TestWsWebSocketContainer"}, {"count": 1, "tags": [], "creator": "knst.kolinko@gmail.com", "text": "Possible ways to improve this:\n\nA. Reduce the log level for stack trace message from log.error() to log.info().\nIn the current code there are two \"log.error()\" messages at once, which looks like overkill.\n\n> log.error(sm.getString(\"webappClassLoader.warnThread\",\n>   getContextName(), threadName));\n> log.error(sm.getString(\"webappClassLoader.stackTrace\",\n>   threadName, getStackTrace(thread)));\n\nB. Make this an opt-in feature. A new property on <Context>?\nOr two properties, to distinct handling of \"request threads\" vs. \"non-request\" threads.\n\nC. Merge similar logs into a single message?\n(E.g. if there are many request threads that are stuck in the same place).\n\nI think \"A.\" is a good and easy way to go.\n\nAny additional ideas, concerns?", "id": 175334, "time": "2014-05-19T22:13:47Z", "bug_id": 56546, "creation_time": "2014-05-19T22:13:47Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 56546, "attachment_id": null, "text": "I applied \"A.\" in r1596090.\n\nD. Running org.apache.catalina.loader.TestWebappClassLoaderExecutorMemoryLeak,\nI think it will be more readable, if all the stack traces are printed at once, as\n\n20-May-2014 hh:mm:ss.sss INFO [threadname] org.apache.catalina.loader.WebappClassLoader.clearReferencesThreads Stack traces of threads for web application [/foo]:\nThread \"name\":\n  stacktrace....\nThread \"name\":\n  stacktrace....\nThreads \"name\":\n  stacktrace....", "id": 175336, "time": "2014-05-19T22:52:57Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2014-05-19T22:52:57Z", "is_private": false}, {"count": 3, "tags": [], "creator": "markt@apache.org", "is_private": false, "text": "org.apache.catalina.connector.TestMaxConnections no longer generates this message", "id": 175380, "time": "2014-05-22T08:58:58Z", "bug_id": 56546, "creation_time": "2014-05-22T08:58:58Z", "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 56546, "attachment_id": null, "id": 175483, "time": "2014-05-26T22:54:28Z", "creator": "markt@apache.org", "creation_time": "2014-05-26T22:54:28Z", "is_private": false, "text": "org.apache.tomcat.websocket.TestWsWebSocketContainer no longer generates this message."}, {"count": 5, "tags": [], "bug_id": 56546, "attachment_id": null, "text": "Is there anything more to do here? If not, I'll resolve this as fixed.", "id": 175501, "time": "2014-05-27T15:45:05Z", "creator": "markt@apache.org", "creation_time": "2014-05-27T15:45:05Z", "is_private": false}, {"count": 6, "tags": [], "creator": "knst.kolinko@gmail.com", "text": "(In reply to Mark Thomas from comment #5)\n\nI am OK to treat this as enhancement, though Remy raised this as a serious issue. In any case it is not a stopper for tagging 8.0.next.\n\nOn my TODO is to pursue idea from Comment 2 (print all traces at once).\nI do no have time today though.\n\nImplementing that needs some refactoring. My idea is to split threads loop into two loops, where the first one populates some informational structure and the second performs stopping (if enabled).\n\nI think the current code has a minor issue:\nIt attempts to shut down executor for each encountered thread. Thus I think it does it N times if there are N running threads for the same Executor. This feature is off by default, though.", "id": 175502, "time": "2014-05-27T16:21:43Z", "bug_id": 56546, "creation_time": "2014-05-27T16:21:43Z", "is_private": false, "attachment_id": null}, {"count": 7, "tags": [], "bug_id": 56546, "attachment_id": null, "text": "It is not actually a serious issue, it is cosmetic but fairly irriating ... So enhancement is fine, but I am bumping up the priority.", "id": 175503, "time": "2014-05-27T17:03:11Z", "creator": "remm@apache.org", "creation_time": "2014-05-27T17:03:11Z", "is_private": false}, {"count": 8, "tags": [], "text": "Created attachment 32241\nDiff file fort to list all stack traces before clearing threads\n\nFix bug 56546 list all stack traces before clearing threads, using two loops one for each purposem as Konstantin Kolinko suggested", "attachment_id": 32241, "bug_id": 56546, "id": 179383, "time": "2014-11-30T22:14:12Z", "creator": "ahmedhosni111@gmail.com", "creation_time": "2014-11-30T22:14:12Z", "is_private": false}]