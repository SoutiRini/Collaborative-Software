[{"count": 0, "tags": [], "bug_id": 57416, "attachment_id": 32347, "is_private": false, "id": 180183, "time": "2015-01-06T14:50:33Z", "creator": "Chaosed0@gmail.com", "creation_time": "2015-01-06T14:50:33Z", "text": "Created attachment 32347\nSum physical sizes rather than logical sizes in htcacheclean\n\nWhen running htcacheclean on a large disk cache directory, it uses the logical sizes of the files instead of the physical size. Since the header and vary files are almost always below the block size of the filesystem, the size on disk of the cache directory can grow to be drastically more than what htcacheclean thinks. In my testing, I got \"du -hs\" to report that the cache directory was 12G, while \"htcacheclean -v\" reported around 3G.\n\nIt seems like there's an easy fix for this, since apr_stat() reports the physical size as well as the logical size; this leaves me wondering whether this was a deliberate choice. However, I think using the logical size is counterintuitive - after all, the user's intention is generally to limit the physical size of the cache directory, and doesn't care about the logical size of the files.\n\nThe attached patch changes htcacheclean to sum files' physical size, instead of their logical size. There's still a problem in that hcacheclean still does not add the sizes of the directory nodes themselves, which can also be significant; however, this change at least brings the size closer to what a user would expect."}, {"count": 1, "tags": [], "bug_id": 57416, "attachment_id": null, "text": "How far off is the mismatch after the patch? Worth mentioning in the manual that it underestimates?", "id": 180184, "time": "2015-01-06T15:06:39Z", "creator": "covener@gmail.com", "creation_time": "2015-01-06T15:06:39Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 57416, "attachment_id": null, "is_private": false, "id": 180197, "time": "2015-01-06T21:18:36Z", "creator": "Chaosed0@gmail.com", "creation_time": "2015-01-06T21:18:36Z", "text": "After the patch, the difference was 12G vs 9G (physical vs logical). A note in the documentation would help, but it would be better if we summed the directory node sizes too and brought the two sizes to parity. I can take a look at that when I've got the bandwidth, or someone else can take it on."}, {"count": 3, "tags": [], "bug_id": 57416, "text": "I've been searching and I am a bit concerned that \"csize\" in APR might be a little \"optimistic\" about really representing the overhead. I noticed on Unix it uses a constant rather than st_blksize for example.    Maybe we could take the larger of size and csize here?\n\nI also saw that we need to pass CSIZE as 'wanted' to get it back on Windows.", "id": 180198, "attachment_id": null, "creator": "covener@gmail.com", "creation_time": "2015-01-07T02:05:03Z", "time": "2015-01-07T02:05:03Z", "is_private": false}]