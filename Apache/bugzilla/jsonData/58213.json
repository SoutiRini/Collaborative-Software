[{"count": 0, "tags": [], "creator": "stephen_wall@redcom.com", "text": "mod_ssl tries to modify the SSLCipherSuite to disable NULL and export ciphers.\nOpenSSL requires the cipher string to be *exactly* SUITEB128, SUITEB192, etc to use Suite B modes.  These two things result in this error when attempting to use Suite B ciphers:\n\n2015-08-05T08:27:00.680740-04:00 michigan local7 emerg httpd[11453]: [ssl:emerg] [pid 11453] AH01898: Unable to configure permitted SSL ciphers\n2015-08-05T08:27:00.680776-04:00 michigan local7 emerg httpd[11453]: [ssl:emerg] [pid 11453] SSL Library Error: error:1410D0B9:SSL routines:SSL_CTX_set_cipher_list:no cipher match\n\n\n\nThis patch allows Suite B to be used:\n\n--- modules/ssl/ssl_engine_config.c.orig        2015-08-05 12:12:58 UTC\n+++ modules/ssl/ssl_engine_config.c\n@@ -708,8 +708,10 @@ const char *ssl_cmd_SSLCipherSuite(cmd_p\n     SSLSrvConfigRec *sc = mySrvConfig(cmd->server);\n     SSLDirConfigRec *dc = (SSLDirConfigRec *)dcfg;\n\n-    /* always disable null and export ciphers */\n-    arg = apr_pstrcat(cmd->pool, \"!aNULL:!eNULL:!EXP:\", arg, NULL);\n+    if( strncmp( arg, \"SUITEB\", 6 ) != 0 ) {\n+       /* always disable null and export ciphers */\n+       arg = apr_pstrcat(cmd->pool, \"!aNULL:!eNULL:!EXP:\", arg, NULL);\n+    }\n\n     if (cmd->path) {\n         dc->szCipherSuite = arg;\n\n\nPS. My apache version is 2.4.16, but that is not a choice on the bug report page.  Should I file a bug report for that?  :)", "id": 184335, "time": "2015-08-05T12:55:36Z", "bug_id": 58213, "creation_time": "2015-08-05T12:55:36Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "creator": "covener@gmail.com", "attachment_id": null, "id": 184340, "time": "2015-08-05T13:19:16Z", "bug_id": 58213, "creation_time": "2015-08-05T13:19:16Z", "is_private": false, "text": "(I added 2.4.16 and 2.2.31 to the version dropdown)"}, {"count": 2, "tags": [], "creator": "asfbugz@velox.ch", "attachment_id": null, "id": 184597, "time": "2015-08-17T11:27:01Z", "bug_id": 58213, "creation_time": "2015-08-17T11:27:01Z", "is_private": false, "text": "Thank you for filing this report.\n\n(In reply to stephen_wall from comment #0)\n> OpenSSL requires the cipher string to be *exactly* SUITEB128, SUITEB192, etc\n> to use Suite B modes.\n\nMore specifically, this applies to OpenSSL 1.0.2 or later - it was added with this commit:\n\nhttps://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=ccf6a19e2d825f4039163393023bd15670aee946#patch10\n\nI wonder if we should really add special-case treatment for this in mod_ssl: AFAICT, it's the first time / only case in OpenSSL's ssl_ciph.c where a check for exact strings is enforced (and additional disabled ciphers lead to a parsing failure).\n\nPerhaps you could bring this up on the openssl-dev list and suggest that SUITEB* in a cipher string should be accepted if the rest of the string does not add any cipher suites?\n\n> This patch allows Suite B to be used:\n> \n> --- modules/ssl/ssl_engine_config.c.orig        2015-08-05 12:12:58 UTC\n> +++ modules/ssl/ssl_engine_config.c\n> @@ -708,8 +708,10 @@ const char *ssl_cmd_SSLCipherSuite(cmd_p\n>      SSLSrvConfigRec *sc = mySrvConfig(cmd->server);\n>      SSLDirConfigRec *dc = (SSLDirConfigRec *)dcfg;\n> \n> -    /* always disable null and export ciphers */\n> -    arg = apr_pstrcat(cmd->pool, \"!aNULL:!eNULL:!EXP:\", arg, NULL);\n> +    if( strncmp( arg, \"SUITEB\", 6 ) != 0 ) {\n> +       /* always disable null and export ciphers */\n> +       arg = apr_pstrcat(cmd->pool, \"!aNULL:!eNULL:!EXP:\", arg, NULL);\n> +    }\n> \n>      if (cmd->path) {\n>          dc->szCipherSuite = arg;\n\nThe problem with this proposal is that things like \"SSLCipherSuite SUITEB:EXP\" would pass this test, and mod_ssl would be configured with export cipher suites in this case (i.e., defeating the purpose of prepending \"!aNULL:!eNULL:!EXP:\"). You would have to check more specifically for the currently permitted four SUITEB* strings, which again leads me to think that it would better be dealt with in OpenSSL.\n\nFor the record (you're certainly aware of it, I assume): as a workaround, these are the equivalents to configure with SSLCipherSuite, for the time being:\n\nSUITEB128      ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384\nSUITEB128ONLY  ECDHE-ECDSA-AES128-GCM-SHA256\nSUITEB128C2    ECDHE-ECDSA-AES256-GCM-SHA384\nSUITEB192      ECDHE-ECDSA-AES256-GCM-SHA384"}, {"count": 3, "tags": [], "creator": "stephen_wall@redcom.com", "attachment_id": null, "id": 184602, "time": "2015-08-17T12:51:09Z", "bug_id": 58213, "creation_time": "2015-08-17T12:51:09Z", "is_private": false, "text": "I agree that OpenSSL is falling short in parsing the cipher string.  I'll contact that project.\n\nFYI, specifying the cipher suites used by Suite B is not a full workaround.  Using the SUITEB128 etc strings does more than just set the ciphers, it also enforces use of specific elliptic curves as required by the Suite B documentation."}, {"count": 4, "tags": [], "bug_id": 58213, "attachment_id": null, "text": "OpenSSL documentation states that any algorithms after the SUITEB* are ignored.  It is a trivial change to make the library actually work that way, but that won't help mod_ssl, because it prepends the '!aNULL:!eNULL:!EXP:', resulting in '!aNULL:!eNULL:!EXP:SUITEB128', not 'SUITEB128:!aNULL:!eNULL:!EXP'.\n\nI respectfully suggest that apache change it's code to append ':!aNULL:!eNULL:!EXP' instead, to be compatible with the OpenSSL documented behavior, if not it's actual behavior.", "id": 184606, "time": "2015-08-17T14:24:41Z", "creator": "stephen_wall@redcom.com", "creation_time": "2015-08-17T14:24:41Z", "is_private": false}, {"count": 5, "tags": [], "text": "(In reply to stephen_wall from comment #4)\n> I respectfully suggest that apache change it's code to append\n> ':!aNULL:!eNULL:!EXP' instead, to be compatible with the OpenSSL documented\n> behavior, if not it's actual behavior.\n\nThat sounds like a good solution, yes. I'd first like to see how https://rt.openssl.org/Ticket/Display.html?user=guest&pass=guest&id=4009 gets addressed/fixed, however. As you have noted there, the current code in ssl_ciph.c:check_suiteb_cipher_list() does not match the documentation in the ciphers(1) man page (which was retrospectively added, BTW - https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=ffa457967982689149fa8403a1d57cee1dbee805).\n\nCc'ing Steve on this report, in case he might want to comment on how we should deal with this in mod_ssl.\n\n(In reply to stephen_wall from comment #3)\n> FYI, specifying the cipher suites used by Suite B is not a full workaround. \n> Using the SUITEB128 etc strings does more than just set the ciphers, it also\n> enforces use of specific elliptic curves as required by the Suite B\n> documentation.\n\nIndeed, I missed that check_suiteb_cipher_list() also sets the SSL_CERT_FLAG_SUITEB_* flags for the cert accordingly, which are then used in the t1_lib.c code to determine the appropriate curve and signature algorithm lists.", "attachment_id": null, "bug_id": 58213, "id": 184645, "time": "2015-08-19T08:10:52Z", "creator": "asfbugz@velox.ch", "creation_time": "2015-08-19T08:10:52Z", "is_private": false}, {"count": 6, "attachment_id": null, "bug_id": 58213, "text": "I'll have a look at the OpenSSL side. The SSL_CONF support might be a workaround here: for example try not specifying the cipherstring in the normal directives and use SSLOpenSSLConfCMD \"CipherString\" \"SUITEB128\"", "id": 184651, "time": "2015-08-19T11:45:38Z", "creator": "steve@openssl.org", "creation_time": "2015-08-19T11:45:38Z", "tags": [], "is_private": false}, {"count": 7, "tags": [], "creator": "asfbugz@velox.ch", "attachment_id": null, "id": 184853, "time": "2015-08-30T07:37:53Z", "bug_id": 58213, "creation_time": "2015-08-30T07:37:53Z", "is_private": false, "text": "(In reply to Dr Stephen Henson from comment #6)\n> I'll have a look at the OpenSSL side.\n\nI couldn't find any commits to -master so far... what's the current thinking for addressing RT4009?\n\n> The SSL_CONF support might be a\n> workaround here: for example try not specifying the cipherstring in the\n> normal directives and use SSLOpenSSLConfCMD \"CipherString\" \"SUITEB128\"\n\nThat's indeed a workaround - and makes we wonder if we should also add special treatment for CipherString in ssl_engine_init.c:ssl_init_server_ctx(), in the loop which handles the ssl_ctx_param array?"}, {"count": 8, "tags": [], "creator": "asfbugz@velox.ch", "attachment_id": null, "id": 185142, "time": "2015-09-12T15:35:34Z", "bug_id": 58213, "creation_time": "2015-09-12T15:35:34Z", "is_private": false, "text": "(In reply to stephen_wall from comment #4)\n> I respectfully suggest that apache change it's code to append\n> ':!aNULL:!eNULL:!EXP' instead, to be compatible with the OpenSSL documented\n> behavior, if not it's actual behavior.\n\nNow that it has been addressed in OpenSSL as suggested in RT4009 (https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=13e228d6845aff7e454eea7c9ddd392ebfbd2868), I have implemented this in trunk with r1702643.\n\nAdditionally, I added the same treatment for \"SSLOpenSSLConfCmd CipherString ...\" in ssl_engine_config.c:ssl_cmd_SSLOpenSSLConfCmd(), to make sure that cipher string settings are consistently handled."}, {"count": 9, "tags": [], "text": "Proposed for backporting to 2.4.x with r1705398.", "attachment_id": null, "bug_id": 58213, "id": 185504, "time": "2015-09-27T13:28:33Z", "creator": "asfbugz@velox.ch", "creation_time": "2015-09-27T13:28:33Z", "is_private": false}, {"count": 10, "tags": [], "creator": "asfbugz@velox.ch", "attachment_id": null, "id": 185562, "time": "2015-09-30T12:09:10Z", "bug_id": 58213, "creation_time": "2015-09-30T12:09:10Z", "is_private": false, "text": "Backported to 2.4.x with r1706007. To appear in 2.4.17."}]