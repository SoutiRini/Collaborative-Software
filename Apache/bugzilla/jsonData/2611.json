[{"count": 0, "tags": [], "creator": "boris@i3.informatik.rwth-aachen.de", "attachment_id": null, "text": "I tended to define only a minimal classpath in my shell and let the Ant build file \nfind the rest of the libraries. This done by the following construct:\n\n  <path id=\"classpath\">\n    <pathelement path=\"${java.class.path}\" />\n    <fileset dir=\"lib\">\n      <patternset refid=\"required.libraries\" />\n    </fileset>\n  </path>\n\nAs a consequence I have to specify the classpath in every task that requires \none this not also very annoying but also makes it easier to make errors in the \nbuild file.\n\nWould it possible to define a task which automatically modifies  the classpath \nfor all other tasks or to modify the standard classpath automatically if a path \nwith a certain id is modified?", "id": 3705, "time": "2001-07-13T02:34:50Z", "bug_id": 2611, "creation_time": "2001-07-13T02:34:50Z", "is_private": false}, {"count": 1, "text": "Ant automatcially includes the standard classpath in the path used in certain \ncircumstances (<java> task, etc). Please refer to the build.sysclasspath \nproperty for a description of this behaviour (This is in the 1.4 docs).\n\nI have never seen the need to include ${java.class.path}. In fact, I run with \nan empty classpath.", "creator": "conor@apache.org", "attachment_id": null, "id": 4133, "time": "2001-07-30T07:25:39Z", "bug_id": 2611, "creation_time": "2001-07-30T07:25:39Z", "tags": [], "is_private": false}, {"count": 2, "attachment_id": null, "creator": "boris@i3.informatik.rwth-aachen.de", "text": "It seems that you are setting up your CLASSPATH externally (e.g. in the shell\nwhich invokes Ant.\n\nIn my case it is different. All libraries which are required to compile the \nproject are stored in the directory `lib'. The libraries in this directory won't \nbe added to the CLASSPATH in the shell that invokes Ant. I'm using java.class.path \nin the pathelement just for convenience if any one likes to setup his own \nCLASSPATH, e.g. for testing if a newer version of a library in the lib directory\ncan be  used with the project.\n\nUnfortunately the classpath I defined is not used by default since Ant's tasks\ncan only use the classpath which has been defined by the time Ant has been\ninvoked. As you can see from the above description there is no way to set the\nclasspath in the shell. I know that a shell script can do this, but I don't like\nthis because everything that can be done easily in the build.xml file should be \nthere. In my opinion this avoids mixing of responsibilities.", "id": 4173, "time": "2001-07-30T23:11:45Z", "bug_id": 2611, "creation_time": "2001-07-30T23:11:45Z", "tags": [], "is_private": false}, {"count": 3, "attachment_id": null, "creator": "sbailliez@apache.org", "text": "If you want to avoid mixing responsibilities (and this is a good thing)\nit makes perfect sense to define another classpath like you do, but that do \nnot include anything from java.class.path. (plus it is a dangerous thing \nbecause paths in your classpath can be unresolved and that will fail if you \nfork a jvm into another directory from Ant).\n\nI make a difference between what Ant needs to run and what my project needs to \nrun. My project might need xxx v2.x only while it is not supported by Ant but \nonly xxx v1.x. If you do a mix between Ant's classpath and yours, there, you \nare mixing responsabilities.\n\nWith complicated build it might happen that you may need ant.jar and \noptional.jar and other things. A typical use in my case would be to use the \nJProbe coverage task that runs Ant to perform all my unit tests in a single \nJVM. This is an extreme case and I cannot rely on java.class.path because I \ndon't want to put the bazillion of jars that Ant needs to run all tasks and \nthat might possibly interfer with my tests.\n\nI honestly can't see where this is error prone. Unexplicit things are error \nprone to me.\n\nNote: Make sure that <javac includeantruntime=\"no\"...> is set when compiling.\n", "id": 4515, "time": "2001-08-12T01:34:13Z", "bug_id": 2611, "creation_time": "2001-08-12T01:34:13Z", "tags": [], "is_private": false}]