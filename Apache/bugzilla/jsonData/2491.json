[{"count": 0, "attachment_id": null, "bug_id": 2491, "is_private": false, "id": 3467, "time": "2001-07-06T17:28:08Z", "creator": "hintak_leung@yahoo.co.uk", "creation_time": "2001-07-06T17:28:08Z", "tags": [], "text": "If a paragraph has a few foot notes towards the bottom of the page, and the\nfootnote body cannot fit into the remaining page, FOP would crash. This patch \ndoesn't solve the problem, but it simply trap the error and skip the footnote \nbody and output a message after the page number so that the user still get a \npdf file to visually examine where the missing footnote might be and maybe\nrearrange his text to fit. I think this is better than FOP just dying without\ngenerating a pdf file. \n\nSome better solution may be:\n(1) properly move the footnote to next page (i.e. say, last line of\npage 1 has a footnote refering to footnote 1, but the footnote body itself\nonly appears in bottom of page 2).\n(2) temperarily lengthen the page content size, get the footnote overhanging \nbelow the nominal bottom of page and output a message to tell user to rearrange \nhis text. \n \nI had a look around Footnote.java and FootnoteBody.java for a few hours but \nneither look too easy, so I gave up. I think ideally the behaviour should\nbe similar to latex i.e. fit as much of footnote 1 into bottom of page 1,\nand output the rest to bottom of page two, but since FOP doesn'timplement \nxsl-footnote-separator yet, this may be a bit confusing visually.\n\n--------------------------------------------\n*** /home/LEUNGH2/xml-fop/src/org/apache/fop/fo/flow/FootnoteBody.java-org\n\tSun Mar  4 21:34:52 2001\n--- /home/LEUNGH2/xml-fop/src/org/apache/fop/fo/flow/FootnoteBody.java\tSat \nJul  7 00:40:46 2001\n***************\n*** 108,114 ****\n        for ( int i = this.marker; i < numChildren; i++ ) {\n  \tFONode fo = (FONode) children.elementAt(i);\n  \tStatus status;\n! \tif ( (status = fo.layout(blockArea)).isIncomplete() ) {\n  \t  this.resetMarker();\n  \t  return status;\n  \t}\n--- 108,125 ----\n        for ( int i = this.marker; i < numChildren; i++ ) {\n  \tFONode fo = (FONode) children.elementAt(i);\n  \tStatus status;\n!       try {\n!         status = fo.layout(blockArea); \n!       } catch (NullPointerException e) {\n!         System.out.println(\"\");\n!         System.out.println(\"***A paragraph near the bottom of the page has a \nfootnote\");\n!         System.out.println(\"***which is too big to fit into the remaining\");\n!         System.out.println(\"***available space. The footnote is being \nskipped.\");\n!         System.out.println(\"***Please rewrite the paragraph or the footnote \nbody.\");\n! \t  this.resetMarker();\n! \t  return new Status(Status.OK);\n!       };\n! \tif ( status.isIncomplete() ) {\n  \t  this.resetMarker();\n  \t  return status;\n  \t}"}, {"count": 1, "tags": [], "bug_id": 2491, "is_private": false, "text": "Footnotes not fitting on the current page no longer crash FOP. If possible,\nthe footnote is shifted as a whole to the next page. (See Bug 8819)", "id": 15538, "time": "2002-05-06T12:22:50Z", "creator": "j3322ptm@yahoo.de", "creation_time": "2002-05-06T12:22:50Z", "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 2491, "attachment_id": null, "text": "batch transition pre-FOP1.0 resolved+fixed bugs to closed+fixed", "id": 155668, "time": "2012-04-01T06:34:26Z", "creator": "gadams@apache.org", "creation_time": "2012-04-01T06:34:26Z", "is_private": false}]