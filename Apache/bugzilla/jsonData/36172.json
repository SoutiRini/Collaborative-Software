[{"count": 0, "tags": [], "bug_id": 36172, "attachment_id": null, "id": 78458, "time": "2005-08-12T22:17:17Z", "creator": "cegner@lanl.gov", "creation_time": "2005-08-12T22:17:17Z", "is_private": false, "text": "It's a known problem that most web browsers don't indicate the encoding of the\nPOST data in an HTTP request.  If they fail to provide this information (i.e.\nrequest.getCharacterEncoding() == null), I would like to assume UTF-8.  The\nproblem is, calling getCharacterEncoding() destroys the POST data, I assume in\nan attempt to parse out an encoding or charset parameter.  In any case, I can't\nfind any specification of a contract that says the inputStream or\ngetParameter*() may be invalid after getCharacterData() and this would rather\nseem like a bad idea anyway.\n\nSample code for a servlet receiving form input via POST:\n        \n        if ( request.getCharacterEncoding() == null ) {\n            request.setCharacterEncoding( \"UTF-8\" );\n        }\n        out.println( \"request encoding:     \" + request.getCharacterEncoding() );\n        out.println( \"request content-type: \" + request.getContentType() );\n        out.println( \"request content len:  \" + request.getContentLength() );\n\n        out.println( \"request parameters by Map\" );\n        out.println( request.getParameterMap() );\n\nThe map printed is empty.  If the if block is removed and the encoding is always\nset to UTF-8, the map is populated correctly.  If the character encoding is not\nset (and getCharacterEncoding is not called but would return null), the map is\nalso not correct.  If working with the inputStream, read returns -1 under the\nsame conditions that the map is empty.\n\nMy server log contains the following entry for a logged Exception.  Of course,\nno Exception is allowed to propogate to the level of my code.\n\nUnable to set request encoding\njava.io.UnsupportedEncodingException: hidden_value\n\tat sun.io.Converters.getConverterClass(Converters.java:215)\n\tat sun.io.Converters.newConverter(Converters.java:248)\n\tat sun.io.ByteToCharConverter.getConverter(ByteToCharConverter.java:64)\n\tat java.lang.StringCoding.decode(StringCoding.java:226)\n\tat java.lang.String.<init>(String.java:320)\n\tat java.lang.String.<init>(String.java:346)\n\tat org.apache.coyote.tomcat5.CoyoteRequest$1.run(CoyoteRequest.java:1560)\n\tat java.security.AccessController.doPrivileged(Native Method)\n\tat\norg.apache.coyote.tomcat5.CoyoteRequest.setCharacterEncoding(CoyoteRequest.java:1557)\n\tat\ncom.sun.enterprise.web.connector.coyote.PECoyoteRequest.setRequestEncoding(PECoyoteRequest.java:151)\n\tat\ncom.sun.enterprise.web.connector.coyote.PECoyoteRequest.getCharacterEncoding(PECoyoteRequest.java:76)\n\tat\norg.apache.coyote.tomcat5.CoyoteRequestFacade.getCharacterEncoding(CoyoteRequestFacade.java:298)\n\tat FormEchoServlet.echo(FormEchoServlet.java:51)\n\tat FormEchoServlet.doPost(FormEchoServlet.java:37)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:767)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:860)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:324)\n\tat org.apache.catalina.security.SecurityUtil$1.run(SecurityUtil.java:249)\n\tat java.security.AccessController.doPrivileged(Native Method)\n\tat javax.security.auth.Subject.doAsPrivileged(Subject.java:500)\n\tat org.apache.catalina.security.SecurityUtil.execute(SecurityUtil.java:282)\n\tat org.apache.catalina.security.SecurityUtil.doAsPrivilege(SecurityUtil.java:165)\n\tat\norg.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:257)\n\tat\norg.apache.catalina.core.ApplicationFilterChain.access$000(ApplicationFilterChain.java:55)\n\tat\norg.apache.catalina.core.ApplicationFilterChain$1.run(ApplicationFilterChain.java:161)\n\tat java.security.AccessController.doPrivileged(Native Method)\n\tat\norg.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:157)\n\tat\norg.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:263)\n\tat org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:551)\n\tat\norg.apache.catalina.core.StandardContextValve.invokeInternal(StandardContextValve.java:225)\n\tat\norg.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:173)\n\tat org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:551)\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:161)\n\tat org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:551)\n\tat\norg.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:132)\n\tat org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:551)\n\tat org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:933)\n\tat org.apache.coyote.tomcat5.CoyoteAdapter.service(CoyoteAdapter.java:185)\n\tat\ncom.sun.enterprise.web.connector.grizzly.ProcessorTask.process(ProcessorTask.java:653)\n\tat\ncom.sun.enterprise.web.connector.grizzly.ProcessorTask.process(ProcessorTask.java:534)\n\tat\ncom.sun.enterprise.web.connector.grizzly.ProcessorTask.doTask(ProcessorTask.java:403)\n\tat com.sun.enterprise.web.connector.grizzly.WorkerThread.run(WorkerThread.java:55)\n\nI am using Sun's most current Application Server (Sun Java System Application\nServer Platform Edition 8.1_02 (build b06-fcs)) which uses Tomcat underneath. \nCalling request.toString results in:\norg.apache.coyote.tomcat5.CoyoteRequestFacade@45db93\n\n\nIf this issue is known, accept my apologies - I was unable to find any record of\nit.  If there is a fix, please let me know so I can go pester Sun about getting\nit fix into their server.\n\nMany thanks,\nChris"}, {"count": 1, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "id": 78459, "time": "2005-08-12T22:36:37Z", "bug_id": 36172, "creation_time": "2005-08-12T22:36:37Z", "is_private": false, "text": "This is an issue with the Sun app server. (Sun modify the Tomcat code before\nthey use it). Looking at the stack trace, it seems a call to\ngetCharacterEncoding() results in a call to setRequestEncoding() which then\nfails. The Tomcat connector code does not do this.\n\nIf you can reproduce this on a vanilla Tomcat installation, please re-open this\nreport."}]