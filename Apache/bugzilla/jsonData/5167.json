[{"count": 0, "tags": [], "creator": "brauneis@us.ibm.com", "attachment_id": null, "is_private": false, "id": 8400, "time": "2001-11-28T09:12:15Z", "bug_id": 5167, "creation_time": "2001-11-28T09:12:15Z", "text": "The default behavior of javac (outside of ant) is to compile with no -g flag, \nthereby building w/ lines and source debug information. The default behavior of \njavac (inside of ant) is to build w/ -g:none, which builds no debug information.\n\nI would like to propose that the default behavior of javac in ant is the same \nas the default behavior of javac in the jdk. Futhermore, it would be useful to \nadd an additional tag for \"debug flags\" so if debug=\"on\" you can specify what \ndebug flags you would like to be built with.\n\nDebug is being set to values in DefaultCompilerAdapter.java"}, {"attachment_id": null, "tags": [], "creator": "umagesh@apache.org", "is_private": false, "count": 1, "id": 8466, "time": "2001-11-30T08:53:14Z", "bug_id": 5167, "creation_time": "2001-11-30T08:53:14Z", "text": "> Futhermore, it would be useful to add an additional tag for \"debug flags\" so \n> if debug=\"on\" you can specify what debug flags you would like to be built \n> with.\n\nAn attribute named debuglevel has been added to 1.5Aplha."}, {"count": 2, "tags": [], "bug_id": 5167, "text": "> The default behavior of javac (outside of ant) is to compile with no -g flag, \n> thereby building w/ lines and source debug information. The default behavior \n> of javac (inside of ant) is to build w/ -g:none, which builds no debug \n> information.\n\nQuestion to Ant-Dev:  What do we do here?  Break backwards compatibility of Ant\nto be consistent with what javac does or leave it as it is?\n", "id": 8714, "time": "2001-12-07T16:21:04Z", "creator": "umagesh@apache.org", "creation_time": "2001-12-07T16:21:04Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "creator": "gert.driesen@ardatis.com", "attachment_id": null, "text": "I noticed that it works fine in the Ant 1.5 nightly builds if you don't\nspecify the debugLevel attribute for the javac task.\n\nIf I specify both debug=\"on\" and a debugLevel (even debugLevel=\"vars\"), I\nloose line number information in stack traces. If I only specify debug=\"on\"\nit works fine.\n\nIs this a bug in the 1.5 builds or is this by design ?", "id": 10426, "time": "2002-02-07T06:34:25Z", "bug_id": 5167, "creation_time": "2002-02-07T06:34:25Z", "is_private": false}, {"count": 4, "tags": [], "creator": "umagesh@apache.org", "is_private": false, "id": 10451, "attachment_id": null, "bug_id": 5167, "creation_time": "2002-02-07T15:05:48Z", "time": "2002-02-07T15:05:48Z", "text": "No, it is not a bug.\n\nThe following is from the documentation for the (Ant 1.5Alpha) Javac Task\":\n\nKeyword list to be appended to the -g command line switch. This will be ignored \nby all implementations except modern and classic(ver >= 1.2), legal values \nare \"none\" or a comma separated list of the following keywords. Valid keywords \nare \"lines\", \"vars\" and \"source\" - if debuglevel is not specified, by default, \nnothing will be appended to -g. If debug is not turned on, this attribute will \nbe ignored. \n\nRelavant phrase to note here: \"comma separated list of...\"\n\nTry setting your debuglevel to lines instead of vars and you will be fine.\n"}, {"count": 5, "tags": [], "bug_id": 5167, "text": "Is it possible to get a patch for ant 1.4.1 with the debuglevel feature. In Ant \n1.3 the default behavior, was the same as javac's default behavior. We had to \nupgrade to 1.4 because of some junit features, and suddenly our stacktraces \nfrom the production system didn't help us anything.\n\nWe can't upgrade to 1.5 before it's out of the alpha/beta cycle, and we don't \nwant to go back to 1.3 and loose the junit features...\n\nThanks in advance\n", "id": 10760, "time": "2002-02-15T15:10:00Z", "creator": "ole-martin.mork@bekk.no", "creation_time": "2002-02-15T15:10:00Z", "is_private": false, "attachment_id": null}, {"count": 6, "tags": [], "bug_id": 5167, "is_private": false, "text": "Created attachment 1213\nPatch for ant 1.4.1 to get Java line numbers without full debug info", "id": 10929, "time": "2002-02-19T21:58:57Z", "creator": "jdsumsion@earthlink.net", "creation_time": "2002-02-19T21:58:57Z", "attachment_id": 1213}, {"count": 7, "tags": [], "creator": "ole-martin.mork@bekk.no", "attachment_id": null, "is_private": false, "id": 10949, "time": "2002-02-20T11:17:18Z", "bug_id": 5167, "creation_time": "2002-02-20T11:17:18Z", "text": "Thanks. It worked very well."}, {"count": 8, "tags": [], "creator": "steve_l@iseran.com", "text": "I am going to mark this as closed", "id": 12246, "attachment_id": null, "bug_id": 5167, "creation_time": "2002-03-24T20:03:11Z", "time": "2002-03-24T20:03:11Z", "is_private": false}, {"count": 9, "tags": [], "creator": "umagesh@apache.org", "attachment_id": null, "text": "Steve, I had left it open because the default behaviour of <javac> is still \ndifferent from Sun's javac.  Is ant-dev going to take the stance that, \"yes,\nit is different and if you want an identical compile, you have to manually\nspecify the debug flags.\"?  Look at my note beginning with \"Question to ant-\ndev...\".", "id": 12247, "time": "2002-03-24T20:27:27Z", "bug_id": 5167, "creation_time": "2002-03-24T20:27:27Z", "is_private": false}]