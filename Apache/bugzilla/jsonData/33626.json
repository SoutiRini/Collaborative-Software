[{"count": 0, "text": "Executing the following:\n\n<uptodate property=\"jar.uptodate\" targetfile=\"D:\\test.html\" \nsrcfile=\"D:\\test.html\"/>\n<echo message=\"jar.uptodate=${jar.uptodate}\"/>\n\nThe message: jar.uptodate=true will be printed even though I am pointing to the \nexact same file. Following is the documentation taken from the 1.6.2 manual for \nUptodate:\n\nBy default, the value of the property is set to true if the timestamp of the \ntarget file(s) is more recent than the timestamp of the corresponding source \nfile(s). You can set the value to something other than the default by \nspecifying the value attribute.\n\nBased on the documentation, the property should not have been set at all.\nThis was found when I upgraded from Ant 1.5.1 to 1.6.2.\nIt is working as expected in 1.5.1", "bug_id": 33626, "is_private": false, "id": 71136, "time": "2005-02-17T20:49:35Z", "creator": "dlcole@gmail.com", "creation_time": "2005-02-17T20:49:35Z", "tags": [], "attachment_id": null}, {"count": 1, "text": "If you had two files with the exact same modification time, you couldn't be sure\nthat the source file was not modified after the target file, especially when you\naccount for filesystem granularity (1 s under UNIX, 2 s on FAT/Windows).", "bug_id": 33626, "is_private": false, "id": 71137, "time": "2005-02-17T20:54:01Z", "creator": "mbenson@apache.org", "creation_time": "2005-02-17T20:54:01Z", "tags": [], "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 33626, "text": "(In reply to comment #1)\n> If you had two files with the exact same modification time, you couldn't be \nsure\n> that the source file was not modified after the target file, especially when \nyou\n> account for filesystem granularity (1 s under UNIX, 2 s on FAT/Windows).\n\nI think we need a second opinion on this based on the following reasons:\n\n1) If what you are saying is true, then how could the Uptodate condition ever \nreturn false? As the documentation states, the test condition is based on both \nthe source file and target file timestamps. If this is the case, please explain \nin what scenario would the condition ever return false?\n\n2) The behavior you are suggesting goes against what is stated in the \ndocumentation.\n\n3) If 2 files have the exact modification time, should't it be assumed that the \nfiles where last modified at the same time?\n\n4) It worked fine in version 1.5.1. Are saying that 1.5.1 had a bug and was \nchanged to act as it does now? Could you provide me with the bug Id, so I can \nget a better understanding of a workaround?\n", "id": 71138, "time": "2005-02-17T21:05:34Z", "creator": "dlcole@gmail.com", "creation_time": "2005-02-17T21:05:34Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 33626, "text": "Okay, I messed up quite a bit there.  I misread your problem, in the first\nplace.  You do expect the file to be out-of-date, but it is not.  The\ndocumentation says \"the value of the property is set to true if the timestamp of\nthe target file(s) is more recent than the timestamp of the corresponding source\nfile(s).\"  This is perhaps a misstatement as the code uses\n\"targetFile.lastModified() >= sourceFile.lastModified()\".  This change was made\nin response to bug 16119 (reported against 1.5.1), which demonstrated that the\nbehavior was different for attributes vs. filesets.  At this point, then, it is\nperhaps the documentation that should be altered to read \"the value of the\nproperty is set to true if the timestamp of the source file(s) is not more\nrecent than the timestamp of the corresponding target file(s).\"\n\nSorry for the confusion,\nMatt", "id": 71141, "time": "2005-02-17T21:31:12Z", "creator": "mbenson@apache.org", "creation_time": "2005-02-17T21:31:12Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 33626, "attachment_id": null, "text": "(In reply to comment #0)\n> Executing the following:\n> <uptodate property=\"jar.uptodate\" targetfile=\"D:\\test.html\" \n> srcfile=\"D:\\test.html\"/>\n> <echo message=\"jar.uptodate=${jar.uptodate}\"/>\n> The message: jar.uptodate=true will be printed even though I am pointing to \nthe \n> exact same file. Following is the documentation taken from the 1.6.2 manual \nfor \n> Uptodate:\n> By default, the value of the property is set to true if the timestamp of the \n> target file(s) is more recent than the timestamp of the corresponding source \n> file(s). You can set the value to something other than the default by \n> specifying the value attribute.\n> Based on the documentation, the property should not have been set at all.\n> This was found when I upgraded from Ant 1.5.1 to 1.6.2.\n> It is working as expected in 1.5.1\n\nThanks for the reply.\nI was able to change my logic to make this work.\nIt would be helpful if the documentation is updated, especially because the way \nthe logic is setup now, it's pretty confusing and almost does not match with \nthe condition name anymore. I'm not suggesting that the condition name be \nchanged, but it does seem that the condition would now be better named: updated \ninstead of uptodate. Updating the documentation would be a great help in the \nfuture.\n\nThanks.\n", "id": 71199, "time": "2005-02-18T17:39:22Z", "creator": "dlcole@gmail.com", "creation_time": "2005-02-18T17:39:22Z", "is_private": false}, {"count": 5, "text": "The documentation in Apache site states that:\n\n\"By default, the value of the property is set to true if the timestamp of the \ntarget file(s) is more recent than the timestamp of the corresponding source \nfile(s).\"\n\nHowever, in the single file example you say:\n\n>   <uptodate property=\"isUpToDate\"\n>            srcfile=\"/usr/local/bin/testit\"\n>            targetfile=\"${build}/.flagfile\"/>\n>\n> sets the property isUpToDate to true if /usr/local/bin/testit \n> is newer than ${build}/.flagfile.\n\nI think that these two statements are contradictory to each other. Shouldn't \nisUpToDate be set to true if ${build}/.flagfile is newer \nthan /usr/local/bin/testit and not the other way around?", "bug_id": 33626, "is_private": false, "id": 71482, "time": "2005-02-24T18:24:06Z", "creator": "slite@netorek.fi", "creation_time": "2005-02-24T18:24:06Z", "tags": [], "attachment_id": null}, {"count": 6, "attachment_id": null, "bug_id": 33626, "is_private": false, "id": 71485, "time": "2005-02-24T18:48:31Z", "creator": "mbenson@apache.org", "creation_time": "2005-02-24T18:48:31Z", "tags": [], "text": "I agree, that looks like another error in the doc."}, {"count": 7, "tags": [], "bug_id": 33626, "text": "(In reply to comment #6)\n> I agree, that looks like another error in the doc.\n\n\nI agree with both of you.\nAs Matt stated in a previous posting to this thread, the code uses:\n\"targetFile.lastModified() >= sourceFile.lastModified()\".  \nBased on the code, isUpToDate would be set to true if ${build}/.flagfile is \nnewer than /usr/local/bin/testit.", "id": 71486, "time": "2005-02-24T18:51:45Z", "creator": "dlcole@gmail.com", "creation_time": "2005-02-24T18:51:45Z", "is_private": false, "attachment_id": null}, {"count": 8, "tags": [], "bug_id": 33626, "attachment_id": null, "text": "These have been fixed in CVS and will be in the manual for Ant 1.6.3 .\n\nThanks!", "id": 71487, "time": "2005-02-24T18:57:22Z", "creator": "mbenson@apache.org", "creation_time": "2005-02-24T18:57:22Z", "is_private": false}]