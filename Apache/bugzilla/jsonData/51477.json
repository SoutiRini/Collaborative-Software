[{"count": 0, "tags": [], "creator": "marvin.addison@gmail.com", "attachment_id": null, "is_private": false, "id": 147761, "time": "2011-07-05T16:53:25Z", "bug_id": 51477, "creation_time": "2011-07-05T16:53:25Z", "text": "We have used SSLProtocol=\"SSLv3+TLSv1\" with the APR connectors in 6.0.x and 7.0.x successfully to support both SSLv3 and TLSv1 protocols exclusively (no SSLv2 support).  The following openssl s_client connection tests demonstrate this functionality with 7.0.8:\n\n$ openssl s_client -connect eiger.middleware.vt.edu:443 -tls1\nCONNECTED(00000003)\n...\nSSL handshake has read 6158 bytes and written 293 bytes\n---\nNew, TLSv1/SSLv3, Cipher is DHE-RSA-AES256-SHA\nServer public key is 2048 bit\nSecure Renegotiation IS supported\nCompression: zlib compression\nExpansion: zlib compression\nSSL-Session:\n    Protocol  : TLSv1\n...\n\n$ openssl s_client -connect eiger.middleware.vt.edu:443 -ssl3\nCONNECTED(00000003)\n...\nSSL handshake has read 6027 bytes and written 319 bytes\n---\nNew, TLSv1/SSLv3, Cipher is DHE-RSA-AES256-SHA\nServer public key is 2048 bit\nSecure Renegotiation IS supported\nCompression: zlib compression\nExpansion: zlib compression\nSSL-Session:\n    Protocol  : SSLv3\n...\n\n$ openssl s_client -connect eiger.middleware.vt.edu:443 -ssl2\n15389:error:140A90C4:SSL routines:SSL_CTX_new:null ssl method passed:ssl_lib.c:1453:\n\nUpon upgrading to Tomcat 7.0.16, which includes the fix for https://issues.apache.org/bugzilla/show_bug.cgi?id=51073, our desired protocol combination fails with the expected \"unsupported protocol\" message.  Unfortunately, none of the officially supported strings mentioned at http://tomcat.apache.org/tomcat-7.0-doc/config/http.html#SSL%20Support provide the desired protocol support.  In particular the protocol values are exclusive, where setting SSLProtocol=\"SSLv3\" prevents TLSv1 connections and vice versa.  The following s_client tests confirm this behavior:\n\n(7.0.16 with SSLProtocol=\"SSLv3\")\n$ openssl s_client -connect eiger.middleware.vt.edu:443 -tls1\nCONNECTED(00000003)\n15696:error:1408F10B:SSL routines:SSL3_GET_RECORD:wrong version number:s3_pkt.c:293:\n\n$ openssl s_client -connect eiger.middleware.vt.edu:443 -ssl3\nCONNECTED(00000003)\n...\nSSL handshake has read 6027 bytes and written 319 bytes\n---\nNew, TLSv1/SSLv3, Cipher is DHE-RSA-AES256-SHA\nServer public key is 2048 bit\nSecure Renegotiation IS supported\nCompression: zlib compression\nExpansion: zlib compression\nSSL-Session:\n    Protocol  : SSLv3\n...\n\n\n(7.0.16 with SSLProtocol=\"TLSv1\")\n$ openssl s_client -connect eiger.middleware.vt.edu:443 -tls1\nCONNECTED(00000003)\n...\nSSL handshake has read 6158 bytes and written 293 bytes\n---\nNew, TLSv1/SSLv3, Cipher is DHE-RSA-AES256-SHA\nServer public key is 2048 bit\nSecure Renegotiation IS supported\nCompression: zlib compression\nExpansion: zlib compression\nSSL-Session:\n    Protocol  : TLSv1\n...\n\n$ openssl s_client -connect eiger.middleware.vt.edu:443 -ssl3\nCONNECTED(00000003)\n15816:error:14094410:SSL routines:SSL3_READ_BYTES:sslv3 alert handshake failure:s3_pkt.c:1102:SSL alert number 40\n15816:error:1409E0E5:SSL routines:SSL3_WRITE_BYTES:ssl handshake failure:s3_pkt.c:539:"}, {"count": 1, "tags": [], "bug_id": 51477, "text": "Set Tomcat version to 7.0.16.", "id": 147762, "time": "2011-07-05T16:53:58Z", "creator": "marvin.addison@gmail.com", "creation_time": "2011-07-05T16:53:58Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 51477, "attachment_id": null, "id": 147763, "creation_time": "2011-07-05T17:39:34Z", "time": "2011-07-05T17:39:34Z", "creator": "rainer.jung@kippdata.de", "text": "Bugzilla is not a support form.\n\nPlease subscribe to the Tomcat users list and post your question there.\n\nSome hints: if you want the server to speak SSLv3 and TLSv1, you need to set the SSLProtocol to \"all\". To ensure secure communication you also need to set SSLCipherSuite to something sensible, like e.g.\n\nRC4-SHA:AES128-SHA:ALL:!aNULL:!EXP:!LOW:!MD5:!SSLV2:!NULL\n\nPlease don't proceed the discussion here. If the discussion on the users list gives reason to believe you really hit a bug, you can reopen this issue.\n\nRegards,\n\nRainer", "is_private": false}, {"count": 3, "tags": [], "bug_id": 51477, "attachment_id": null, "id": 147768, "time": "2011-07-05T17:55:18Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2011-07-05T17:55:18Z", "is_private": false, "text": "According to the source code, before bug 51073 was fixed (r1094089 or r1124211), the \"SSLv3+TLSv1\" value just worked as a synonym to \"all\".\n\nWhat happens with ssl2 connections if you configure SSLProtocol=\"all\"\n- in 7.0.16\n- in 7.0.8\n\ndoes it accept ssl2 connections or rejects them?\n\n\n--\nAnyway, I do not mind to add \"SSLv3+TLSv1\" as an allowed value, if it is actually supported by the library.\n\nLooking at implementation of SSLContext.make in sslcontext.c of tc-native 1.1.x, there is code for this combination of flags.\n\nhttp://svn.apache.org/viewvc/tomcat/native/branches/1.1.x/native/src/sslcontext.c?view=markup#l85"}, {"count": 4, "text": "But I *think* OpenSSL does not support it:\n\nhttp://www.openssl.org/docs/ssl/SSL_CTX_new.html\n\nIt looks like you have to do what I already posted here: choose \"all\" for the protocol and disable any SSLV2 ciphers.\n\nRainer", "bug_id": 51477, "is_private": false, "id": 147769, "time": "2011-07-05T18:15:52Z", "creator": "rainer.jung@kippdata.de", "creation_time": "2011-07-05T18:15:52Z", "tags": [], "attachment_id": null}, {"count": 5, "tags": [], "creator": "marvin.addison@gmail.com", "is_private": false, "id": 147770, "attachment_id": null, "bug_id": 51477, "creation_time": "2011-07-05T18:19:26Z", "time": "2011-07-05T18:19:26Z", "text": "\"SSLv3+TLSv1\" value just worked as a synonym to \"all\"\n\nAppears this is correct based on my testing.  Setting SSLProtocol=\"all\" in both 7.0.8 and 7.0.16 produced exactly the same results: TLSv1 and SSLv3 are supported but not SSLv2.  It appears that our SSLCipherSuite parameter is actually providing the desired behavior:\n\nSSLCipherSuite=\"HIGH:MEDIUM:-SSLv2\"\n\nSo we'll be able to preserve the desired functionality with SSLProtocol=\"all\" in versions 7.0.16 and later.\n\nI think there's merit in supporting other protocol combinations that make sense if for no other reason to maintain consistency with mod_ssl directives of the same name, which are eerily similar to APR connector attributes.  (I've assumed that similarity is intentional.)"}, {"count": 6, "text": "I verified the following mod_ssl directives provide equivalent behavior (no SSLv2):\n\nSSLProtocol +SSLv3 +TLSv1\nSSLCipherSuite HIGH:MEDIUM", "bug_id": 51477, "is_private": false, "id": 147772, "time": "2011-07-05T18:31:40Z", "creator": "marvin.addison@gmail.com", "creation_time": "2011-07-05T18:31:40Z", "tags": [], "attachment_id": null}, {"count": 7, "tags": [], "creator": "rainer.jung@kippdata.de", "is_private": false, "id": 147774, "attachment_id": null, "bug_id": 51477, "creation_time": "2011-07-05T18:50:45Z", "time": "2011-07-05T18:50:45Z", "text": "I checked the code of tcnative and of mod_ssl. Both have provisions for arbitrary combinations in SSLProtocol.\n\nThe way it works is there's a basic protocol selection in OpenSSL and then you can remove parts by adding an option.\n\nThe possible basic settings are SSLv2, SSLv3, TLSv1 and SSLv23. All except for the last one *only* understand that specific protocol, the last one understand SSLv2, SSLv3 *and* TLSv1, so this is \"all\".\n\nFor arbitrary combinations one chooses SSLv23 and then removes the protocols one doesn't want via SSL_CTX_set_options() using the options SSL_OP_NO_SSLv2, SSL_OP_NO_SSLv3 and/or SSL_OP_NO_TLSv1.\n\nIn tcnative in sslcontext.c there seems to be a bug in choosing SSLv2 if the configured protocol is SSLv2+TLSv1 and choosing SSLv3 if it is SSLv3+TLSv1. I'd say in both cases it should be SSLv23, because neither SSLV2 not SSLV3 support TLSv1. The additional protocol in SSLv23 is later removed via the options.\n\nFortunately those combinations do not yet get passed down by AprEndpoint.java. But yes, it'd be easy to support any combination."}, {"attachment_id": 27260, "tags": [], "creator": "rainer.jung@kippdata.de", "is_private": false, "count": 8, "id": 147776, "time": "2011-07-05T19:29:12Z", "bug_id": 51477, "creation_time": "2011-07-05T19:29:12Z", "text": "Created attachment 27260\nSupport for arbitrary protocol combinations\n\nThe combinations SSLv2+TLSv1 and SSLv3+TLSv1 will only work, if tcnative is patched as well.\n\nPatch is untested."}, {"count": 9, "tags": [], "bug_id": 51477, "is_private": false, "id": 147777, "creation_time": "2011-07-05T19:49:48Z", "time": "2011-07-05T19:49:48Z", "creator": "marvin.addison@gmail.com", "text": "I've reviewed the patch and it appears that it doesn't do the work of removing protocols via SSL_CTX_set_options() as you mentioned.  At this point it appears all supported strings will end up supporting SSLv2+SSLv3+TLSv1 due to the use of SSLv23_client_method(), which is not the equivalent behavior of similar mod_ssl directives.", "attachment_id": null}, {"count": 10, "tags": [], "bug_id": 51477, "is_private": false, "id": 147779, "creation_time": "2011-07-05T19:58:09Z", "time": "2011-07-05T19:58:09Z", "creator": "marvin.addison@gmail.com", "text": "I dug a little further and found that the requisite SSL_CTX_set_options() calls are already in sslcontext.c.  I'll test the patch and report back.", "attachment_id": null}, {"count": 11, "tags": [], "creator": "marvin.addison@gmail.com", "is_private": false, "id": 147818, "attachment_id": null, "bug_id": 51477, "creation_time": "2011-07-07T16:00:45Z", "time": "2011-07-07T16:00:45Z", "text": "I tested the patch and verified that SSLv3+TLSv1 works as expected, allowing SSLv3 and TLSv1, but denying SSLv2 connections.  However, the setting SSLv2+TLSv1 only allows TLSv1 connections:\n\n$ openssl s_client -connect eiger.middleware.vt.edu:443 -tls1\nCONNECTED(00000003)\n...\nSSL handshake has read 6158 bytes and written 293 bytes\n---\nNew, TLSv1/SSLv3, Cipher is DHE-RSA-AES256-SHA\nServer public key is 2048 bit\nSecure Renegotiation IS supported\nCompression: zlib compression\nExpansion: zlib compression\nSSL-Session:\n    Protocol  : TLSv1\n$ openssl s_client -connect eiger.middleware.vt.edu:443 -ssl2\n25335:error:140A90C4:SSL routines:SSL_CTX_new:null ssl method passed:ssl_lib.c:1453:\n$ openssl s_client -connect eiger.middleware.vt.edu:443 -ssl3\nCONNECTED(00000003)\n25338:error:14094410:SSL routines:SSL3_READ_BYTES:sslv3 alert handshake failure:s3_pkt.c:1102:SSL alert number 40\n25338:error:1409E0E5:SSL routines:SSL3_WRITE_BYTES:ssl handshake failure:s3_pkt.c:539:"}, {"count": 12, "tags": [], "creator": "rainer.jung@kippdata.de", "is_private": false, "id": 147820, "attachment_id": null, "bug_id": 51477, "creation_time": "2011-07-07T16:49:49Z", "time": "2011-07-07T16:49:49Z", "text": "Which SSLCipher did you use?"}, {"attachment_id": null, "tags": [], "creator": "chris@christopherschultz.net", "text": "While OpenSSL's s_client can certainly get the job done, you might make things easier on yourself by using sslscan (http://sourceforge.net/projects/sslscan/). Most Linux distros have packages for it, too.", "count": 13, "id": 147825, "time": "2011-07-07T19:00:36Z", "bug_id": 51477, "creation_time": "2011-07-07T19:00:36Z", "is_private": false}, {"count": 14, "text": "There is no SSLCipherSuite attribute defined for the SSL connector.  See attached server.xml file.", "bug_id": 51477, "is_private": false, "id": 147829, "time": "2011-07-08T12:29:15Z", "creator": "marvin.addison@gmail.com", "creation_time": "2011-07-08T12:29:15Z", "tags": [], "attachment_id": null}, {"count": 15, "tags": [], "creator": "marvin.addison@gmail.com", "is_private": false, "id": 147830, "attachment_id": 27274, "bug_id": 51477, "creation_time": "2011-07-08T12:30:24Z", "time": "2011-07-08T12:30:24Z", "text": "Created attachment 27274\nTest server.xml"}, {"count": 16, "tags": [], "bug_id": 51477, "is_private": false, "text": "I tested it now myself and it *does* work for me with all 8 possible combinations, each only allowing the configured protocol set.\n\nMaybe your OpenSSL client doesn't allow SSLv2? What happens if you set the SSLProtocol in the connector to SSLv2?", "id": 147856, "time": "2011-07-10T15:04:12Z", "creator": "rainer.jung@kippdata.de", "creation_time": "2011-07-10T15:04:12Z", "attachment_id": null}, {"count": 17, "text": "I applied a slightly revised version of the patch in r1145209.\n\nThe new support for arbitrary protocol combinations will need a release of tcnative. For existing releases there will be only support for the documented combinations, because other combinations will give unexpected results.\n\nI'll keep this issue open and reassign to tcnative.", "bug_id": 51477, "attachment_id": null, "id": 147864, "time": "2011-07-11T15:46:33Z", "creator": "rainer.jung@kippdata.de", "creation_time": "2011-07-11T15:46:33Z", "tags": [], "is_private": false}, {"count": 18, "tags": [], "bug_id": 51477, "text": "Support is in tcnative starting with 1.2.22.", "id": 153698, "time": "2012-02-12T10:14:18Z", "creator": "rainer.jung@kippdata.de", "creation_time": "2012-02-12T10:14:18Z", "is_private": false, "attachment_id": null}, {"attachment_id": null, "tags": [], "creator": "rainer.jung@kippdata.de", "text": "Change also proposed for Tomcat 6.", "count": 19, "id": 153954, "time": "2012-02-20T17:54:40Z", "bug_id": 51477, "creation_time": "2012-02-20T17:54:40Z", "is_private": false}, {"attachment_id": null, "tags": [], "creator": "knst.kolinko@gmail.com", "text": "Applied to 6.0 in r1304509 and will be in 6.0.36", "count": 20, "id": 155266, "time": "2012-03-23T17:27:16Z", "bug_id": 51477, "creation_time": "2012-03-23T17:27:16Z", "is_private": false}, {"count": 21, "tags": [], "bug_id": 51477, "attachment_id": null, "id": 159596, "time": "2012-06-01T12:18:09Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2012-06-01T12:18:09Z", "is_private": false, "text": "*** Bug 53344 has been marked as a duplicate of this bug. ***"}]