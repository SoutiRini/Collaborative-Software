[{"count": 0, "text": "I have a bug in my client side code that adds a unicode character to the end of \na get parameter before submitting. For example,\n\nmyurl.html?title=oslo%20lufthavn%uF843\n\nAlthough this character shouldn't be there, it shouldn't cause the parsing of \nthat parameter to fail. When I call; \n\nrequest.getParameter(\"title\")\n\nThe returned value is null where I would expect the bad unicode character to be \ncorrectly parsed and sent on to me.\n\nI have set OS as Windows as that is where I have reproduced the bug but this \nbehaviour was originally observed on a Linux system.", "bug_id": 38768, "is_private": false, "id": 86145, "time": "2006-02-23T19:16:12Z", "creator": "jshare@opera.com", "creation_time": "2006-02-23T19:16:12Z", "tags": [], "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 38768, "text": "Your parameter is not encoded correctly, and I don't see any reason to add\nspecial handling for this situation (of course, feel free to use a custom patch\nin your own Tomcat installations).", "id": 87666, "time": "2006-04-07T13:10:37Z", "creator": "remm@apache.org", "creation_time": "2006-04-07T13:10:37Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 38768, "text": "It is correct encoding ! See \"ECMAScript language specification Edition 3\nFinal\". It is unicode characters. Firefox 1.5 and IE 6 send make these\ncharacters as result of \"escape\" function.", "id": 89954, "time": "2006-06-08T14:04:24Z", "creator": "alex73mail@gmail.com", "creation_time": "2006-06-08T14:04:24Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 38768, "text": "Maybe Jonathan can cite a ratified standards which backs up the usage of %uHHHH\nover and above a de-facto approach.  The EMCA specification does not override\nRFC1738 (and its updates) the encoding scheme may valid inside the EMCA domain\nbut this doesn't make it valid outside in the HTTP domain.\n\nMy understanding of UCS-2 is that is still relies on a character set being\npre-selected (as there are more than 64k entities hence UCS-4).  Since there is\nno character set metadata passed along with the URL it would be an unsafe approach.\n\nThe last commenter in the following reference quotes extracts from\nspecifications explaining how UTF-8 would work in that situation:\n\nhttp://weblogs.mozillazine.org/gerv/archives/005539.html\n\n\nThe spirit of RFC1738 leaves it upto the server implementation on how to\ninterpret a URL especially the meanings of values %80 thru %FF (which would open\nup the possibility of UTF-8 handling), from the specs point of view a URL is\njust an identifying token.\n\n\nIn testing Jonathans situation Tomcat allows the Servlet to run but sets the\nparameter value to 'null' as-if it has not been specified.  This behaiour is\ndubious, since there is no reporting mechanism between container and servlet to\nindicate an uncorrectable error occured during parsing the request.\n\nOne obvious thing to do would be to send back a HTTP error \"400 Bad Request\".\n\nIt concerns me if TC runs the servlet with incorrect parameters.  A 'null' or\nedited value approach might cause the servlet to perform a different action than\nthe request had intended.\n", "id": 89973, "time": "2006-06-08T23:06:47Z", "creator": "darryl@darrylmiles.org", "creation_time": "2006-06-08T23:06:47Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 38768, "attachment_id": null, "id": 90084, "time": "2006-06-12T00:45:34Z", "creator": "markt@apache.org", "creation_time": "2006-06-12T00:45:34Z", "is_private": false, "text": "*** Bug 39721 has been marked as a duplicate of this bug. ***"}, {"count": 5, "tags": [], "bug_id": 38768, "text": "I've done a little research and the only response I have is that\n\n<quote>\nThe \"%u\" syntax *was* discussed as part of the IRI (i18n URIs, RFC 3987) \nstandard work, but was NOT made part of the standard. See RFC 3987 sec A.3\n</quote>\n\nIn which case I support the motion for making this kind of request return a 400 \nerror.\n\nHas anyone tried this in other environments (php) to see how they handle the \nsituation?\n", "id": 90099, "time": "2006-06-12T14:46:09Z", "creator": "jshare@opera.com", "creation_time": "2006-06-12T14:46:09Z", "is_private": false, "attachment_id": null}, {"count": 6, "tags": [], "bug_id": 38768, "attachment_id": null, "id": 94974, "time": "2006-10-19T05:41:16Z", "creator": "jshare@opera.com", "creation_time": "2006-10-19T05:41:16Z", "is_private": false, "text": "As an FYI for anyone coming across this issue when searching (I just tripped \nover this again today). On the client side encodeURIComponent() should be used \nnot escape() this sucessfully avoids the problem by encoding the \"form \nsubmission\" correctly.\n\nHTH\n\nJon"}, {"count": 7, "attachment_id": null, "bug_id": 38768, "is_private": false, "id": 96169, "time": "2006-11-25T13:50:00Z", "creator": "markt@apache.org", "creation_time": "2006-11-25T13:50:00Z", "tags": [], "text": "I am closing this as invalid since the original issue is not a valid one.\n\nIt should be noted that invalid parameters are no longer silently ignored. As a\nresult of fixing bug 40860, errors during parameter processing are now logged."}]