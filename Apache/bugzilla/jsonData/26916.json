[{"count": 0, "tags": [], "creator": "bsayatovic@amig.com", "text": "While attempting to read a workbook with skeletal test program, I encountered \nthe following exception:\n\njava.lang.ArrayIndexOutOfBoundsException: Array index out of range: 191\n\tat java.util.Vector.get(Vector.java:716)\n\tat org.apache.poi.hssf.usermodel.HSSFDataFormat.getBuiltinFormat\n(HSSFDataFormat.java:320)\n\t...\n\nThe portion of my code which lead up to this was inside a double loop over each \nrow, and each cell in the row:\n\n\tHSSFCellStyle style = cell.getCellStyle();\n\tshort format = style.getDataFormat();\n\tString formatString = HSSFDataFormat.getBuiltinFormat(format);\n\nThe way I read the documentation, the HSSFDataFormat.getBuiltinFormat call \nshould return a format String if one exists, or null.  In this case, however, \nneither happened.  Instead, I got an ArrayIndexOutOfBoundsException.\n\nUnless I've missed something, I suspect either the documentation should be \nupdated or the code altered.  For now, I'm going to attempt to work around this \nby checking the format index against \nHSSFDataFormat.getNumberOfBuiltinBuiltinFormats.", "id": 52247, "time": "2004-02-13T15:53:34Z", "bug_id": 26916, "creation_time": "2004-02-13T15:53:34Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "creator": "avik@apache.org", "is_private": false, "text": "It will be much easier to fix if you could possibly supply a small worksheet and\na test program that replicates this error.", "id": 52254, "time": "2004-02-13T19:08:52Z", "bug_id": 26916, "creation_time": "2004-02-13T19:08:52Z", "attachment_id": null}, {"count": 2, "attachment_id": null, "bug_id": 26916, "text": "Cant fix without excel file or better example. Sorry.\n\nJason", "id": 84597, "time": "2006-01-13T10:45:52Z", "creator": "jheight@apache.org", "creation_time": "2006-01-13T10:45:52Z", "tags": [], "is_private": false}, {"count": 3, "tags": [], "creator": "bsayatovic@amig.com", "attachment_id": null, "is_private": false, "id": 84601, "time": "2006-01-13T13:48:25Z", "bug_id": 26916, "creation_time": "2006-01-13T13:48:25Z", "text": "I know longer have my original file, but looking at the 2.0 source, the problem \nis easy to see:\n\n(HSSFDataFormat.java)\n308    /**\n309     * get the format string that matches the given format index\n310     * @param index of a built in format\n311     * @return string represented at index of format or null if there is not \na builtin format at that index\n313     */\n314    public static String getBuiltinFormat( short index )\n315    {\n316        if ( builtinFormats == null )\n317        {\n318            populateBuiltinFormats();\n319        }\n320        return (String) builtinFormats.get( index );\n321    }\n\nThe JavaDoc clearly states that a String will be returned, or if one doesn't \nexist at that index, null will be returned.  The implementation, however, has \nno guard to make sure its a valid index.  All that has to be done is to check \nto see if index is less than the size of the list before calling get(index).  \nIf the index is greater-than-or-equal-to the size of the list, then null should \nbe returned.\n\nThere is a chance that I'm misunderstanding the intent of this method from the \nJavaDoc.  If that is the case, I suggest the JavaDoc be changed to clarify that \nit is possible for this method to throw an exception (instead of returning \nnull) when a bad index is given."}, {"count": 4, "attachment_id": null, "bug_id": 26916, "text": "Ahh ok so it is a documentation type issue. Quite obvious when pointed out.\nIndicated possible exception in javadoc.\n\nJason", "id": 91502, "time": "2006-07-23T06:49:15Z", "creator": "jheight@apache.org", "creation_time": "2006-07-23T06:49:15Z", "tags": [], "is_private": false}]