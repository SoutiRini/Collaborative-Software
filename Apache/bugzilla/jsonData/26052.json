[{"count": 0, "tags": [], "text": "When calling CGI scripts, apache usually sets the DOCUMENT_ROOT environment\nvariable before calling the script. This can be used within CGI scripts to find\nrelated files. However, DOCUMENT_ROOT seems to be set to a wrong default value,\nwhen using VirtualDocumentRoot as follows:\n\n<VirtualHost myiP>\n    ServerName name1.domain.tld\n    ServerAlias name2.domain.tld\n    ServerAlias name3.domain.tld\n    ...\n    UseCanonicalName off\n    VirtualDocumentRoot /home/%-3/wwwdir\n    VirtualScriptAlias /home/%-3/wwwdir/cgi-bin\n</VirtualHost>\n\nIn my opinion, the DOCUMENT_ROOT environment should be set to whatever\nVirtualDocumentRoot expanded to, when calling a CGI script.\n\nThe problem has been verified with 1.3.29. It occured both with scripts called\ndirectly or via an action handler (see apache configuration command \"Action\" and\n\"AddHandler\"). If a CGI script is called via \"Action\" and \"AddHandler\", it\ntypically uses DOCUMENT_ROOT and REQUEST_URI to locate the file, that it has to\nprocess. So the wrong DOCUMENT_ROOT is a serious issue in this case. In\nparticular, if PHP is not compiled into apache, but executed as a seperate\nscript, running PHP scripts might fail completely in an environment, that uses\nVirtualDocumentRoot!\n\n\nKai Petzke", "is_private": false, "id": 50394, "creator": "petzke@teltarif.de", "time": "2004-01-12T09:55:52Z", "bug_id": 26052, "creation_time": "2004-01-12T09:55:52Z", "attachment_id": null}, {"count": 1, "tags": [], "text": "Don't trust the DOCUMENT_ROOT variable. It's always only reflecting the value of\nthe DocumentRoot directive, which is by intention, because it's consistent.\nThere's no way to guess a valid value for path changes made by mod_vhost_alias,\nmod_rewrite, mod_alias etc.\n\nThank for using Apache.", "is_private": false, "id": 50400, "creator": "nd@perlig.de", "time": "2004-01-12T12:56:25Z", "bug_id": 26052, "creation_time": "2004-01-12T12:56:25Z", "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 26052, "is_private": false, "count": 2, "id": 62182, "time": "2004-08-19T16:28:03Z", "creator": "slive@apache.org", "creation_time": "2004-08-19T16:28:03Z", "text": "*** Bug 30755 has been marked as a duplicate of this bug. ***"}, {"count": 3, "tags": [], "text": "This is definitely a bug.  Even with Dynamic Virtual Hosts, each website should \nhave access to its DocumentRoot specified by VirtualDocumentRoot.  Without this \nfeature, dynamic virtual hosts are really quite useless.", "is_private": false, "id": 62190, "creator": "burstingfist@yahoo.com", "time": "2004-08-19T17:31:21Z", "bug_id": 26052, "creation_time": "2004-08-19T17:31:21Z", "attachment_id": null}, {"count": 4, "tags": [], "creator": "nd@perlig.de", "is_private": false, "text": "The DOCUMENT_ROOT semantics are clear. Changing them would break stuff.\nWe could add a VIRTUAL_DOCUMENT_ROOT variable for that purpose.\n\n->Enhancement.", "id": 62196, "time": "2004-08-19T18:12:48Z", "bug_id": 26052, "creation_time": "2004-08-19T18:12:48Z", "attachment_id": null}, {"count": 5, "tags": [], "text": "I am running into this as well, particularly now that more and more people are\nmoving to PHP and we are seeing a lot of DOCUMENT_ROOT usage that is breaking\nall over the place.\n\nThe code fix is pretty easy, override it manually for each site but if there was\na VIRTUAL_DOCUMENT_ROOT the authors could start taking this into account.", "is_private": false, "id": 80351, "creator": "siberian@siberian.org", "time": "2005-09-23T02:30:31Z", "bug_id": 26052, "creation_time": "2005-09-23T02:30:31Z", "attachment_id": null}, {"count": 6, "tags": [], "creator": "slive@apache.org", "is_private": false, "text": "*** Bug 28561 has been marked as a duplicate of this bug. ***", "id": 85272, "time": "2006-01-31T20:15:39Z", "bug_id": 26052, "creation_time": "2006-01-31T20:15:39Z", "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 26052, "is_private": false, "count": 7, "id": 85276, "time": "2006-01-31T20:51:10Z", "creator": "slive@apache.org", "creation_time": "2006-01-31T20:51:10Z", "text": "Push this enhancement request to HEAD, since it is very unlikely to happen on 1.3."}, {"attachment_id": null, "tags": [], "bug_id": 26052, "is_private": false, "count": 8, "id": 85394, "time": "2006-02-03T20:55:46Z", "creator": "andrixnet@yahoo.com", "creation_time": "2006-02-03T20:55:46Z", "text": "I bumped into this bug again, now in apache 1.3.33. \n\nI have been trying to work around it in an older version, using mod_rewrite, but\nit just won't modify DOCUMENT_ROOT.\n\nQuestion : if VirtualDocumentRoot is in fact [actual end result] doing the same\nthing as DocumentRoot, but for a mapping scheme instead of a static path. \nSo why doesn't mod_vhost_alias with this directive give us the correct answer? \nBecause as someone said earlier, without this, the whole module is pretty much\nuseful just for static sites with no, or minimal scripting. \nAnd a lot of drag from cgi developers in my vhosts. \n\nHad mod_rewrite had write access to this variable, I could've worked around the\nbug directly a looong time ago, but it doesn't. \n\nSo, sadly, I just have to scrap the \"motivation behind mod_vhost_alias\" as in\nthe docs, and go back to my pile of virtualhosts, all statically typed :(\n\nAnother VRITUAL_DOCUMENT_ROOT directive ? \nI really suggest setting DOCUMENT_ROOT to the proper value. \n\nI did build a mod_rewrite hack once, creating some sort of mass vhosts and used\nit to create another ENV variable to specify the proper document root as\ngenerated by mod_rewrite. \nSince such a \"dirty hack\" can be done in mod_rewrite, I really don't see the\npoint in porting the \"dirty hack\" into the server itself. "}, {"count": 9, "tags": [], "creator": "andrixnet@yahoo.com", "is_private": false, "text": "Ok, so here is an example derived from the mass virtual hosts example using\nmod_rewrite : \n\ndirty hack to set the proposed VIRTUAL_DOCUMENT_ROOT using mod_rewrite instead\nof mod_vhost_alias : \n================================================================================\n\n\n    <IfModule mod_rewrite.c>\n        RewriteEngine on\n        RewriteLog /var/log/apache/somesite/vhosts-rewrite.log\n        RewriteLogLevel 1\n        RewriteMap lowercase int:tolower\n\n        # skip global aliases\n        RewriteCond %{REQUEST_URI} !/^icons/\n        RewriteCond %{REQUEST_URI} !/^manual/\n\n        RewriteCond ${lowercase:%{SERVER_NAME}} ^[a-z0-9-]+\\.vhosts\\.somesite$\n        RewriteRule ^(.+) ${lowercase:%{SERVER_NAME}}$1 [C]\n        RewriteRule ^([a-z0-9-]+)\\.vhosts\\.somesite/(.*)$\n/www/vhosts.somesite/$1/$2 [C,E=VIRTUAL_DOCUMENT_ROOT:/www/vhosts.somesite/$1]\n    </IfModule>\n================================================================================\n\nand we get : \nSERVER_NAME = test.vhosts.somesite\nDOCUMENT_ROOT = /www/vhosts.somesite \n(this was configured in a virtualhost containing the above)\nVIRTUAL_DOCUMENT_ROOT = /www/vhosts.somesite/test\n(by mod_rewrite)\n\n", "id": 85395, "time": "2006-02-03T21:39:39Z", "bug_id": 26052, "creation_time": "2006-02-03T21:39:39Z", "attachment_id": null}, {"count": 10, "tags": [], "creator": "slive@apache.org", "text": "I know I should just stay out of this, but in response to this quote: \"without\nthis, the whole module is pretty much\nuseful just for static sites with no, or minimal scripting\"\n\nI'm amazed, then, that so many people seem to be sucessfully scripting from\ndirectories mapped using UserDir, Alias, RewriteRule, and even (my gosh!)\nScriptAlias.  None of these have a \"correct\" DOCUMENT_ROOT, if by correct you\nmean something that has some relation to the location of the script.\n\nAs has been pointed out, DOCUMENT_ROOT is not, never was, and never will be a\nreliable way of finding the filesystem path to web content.", "id": 85481, "time": "2006-02-06T22:05:31Z", "bug_id": 26052, "creation_time": "2006-02-06T22:05:31Z", "is_private": false, "attachment_id": null}, {"count": 11, "tags": [], "creator": "siberian@siberian.org", "is_private": false, "text": "Yes, I agree, aliases, vhosts etc are not useless. In fact, I use them to great\neffect! Love that tool and run hundreds of sites with them. I do think that\nthere is significant room for improvement on this particular topic though.\n\nThe problem arises when you use 3rd party code that, even though we scream\n\"DOCUMENT_ROOT IS NOT RELIABLE\", assume that DOCUMENT_ROOT is in fact reliable\nand functions in a reasonable and intuitive manner. Many languages like PHP make\nthese assumptions for us (or at least encourage a development practice that\nmakes the assumption). I spend hours a month dealing with this, taking tech\nsupport emails and tweaking their PHP code so that my users don't hate me. God\nforbid they upgrade that tweaked script! :)\n\nSo, we are caught in the typical trap, are the DEVELOPERS right or are the\nCONSUMERS right. I think the consumers are right in general. Do we force\neveryone to code to standards that were enacted years ago, before reliable\nvirtual hosting was common or do we adapt to this new world where people are\nmoving exclusively towards vhosting and away from userland hosting? \n\nTo me there are 4 solutions:\n\n1) Screw the consumers, Purity Is Important\n2) Add VIRTUAL_DOCUMENT_ROOT and not really solve anything since now everyone\nhas to change their code and no one will.\n3) Make mod_vhost_alias do the Right Thing that consumers expect\n4) Add a variable that changes DOCUMENT_ROOT between the two contexts and allow\nthe webserver admin to select what they believe Purity to be.\n\nAnd yes, I am fully aware that I should put my time and money where my mouth is\nand fix it myself but since I lack the underlying knowledge to do so and lack\nthe time to get the knowledge I have to defer to the experts and plead my case :)\n\nStill gonna keep using mod_vhost_alias, its worth the pain and I spend a lot\nless time fixing badly coded PHP then I do managing static vhosts! It has been\nan incredible benefit to us and I can not thank the team that put it together\nenough, its really been a transformative tool for our business.\n\nJohn-", "id": 85482, "time": "2006-02-06T23:08:10Z", "bug_id": 26052, "creation_time": "2006-02-06T23:08:10Z", "attachment_id": null}, {"count": 12, "tags": [], "bug_id": 26052, "attachment_id": null, "text": "(In reply to comment #11)\n\n> \n> So, we are caught in the typical trap, are the DEVELOPERS right or are the\n> CONSUMERS right. I think the consumers are right in general.\n\nAgreed. So the DEVELOPERS of the 3rd party code should really fix their code.\nOr to put it the other way round their code is not and never was compatible with\nvirtual mass hosting and with ScriptAlias and Alias as Joshua pointed out in #10.\nAnd we do not change the behaviour of DOCUMENT_ROOT because of purity, but\nbecause of backward compatibility (see also\nhttp://issues.apache.org/bugzilla/show_bug.cgi?id=28561#c6)\nSo why break things for people who use httpd according to the documents, for\nsome people who don't?\n", "id": 85484, "time": "2006-02-06T23:51:54Z", "creator": "rpluem@apache.org", "creation_time": "2006-02-06T23:51:54Z", "is_private": false}, {"count": 13, "tags": [], "text": "Backward compatibility is not a valid excuse, thats why I proposed the switching\nmechanism. It bypasses that issue and provides a compatibility layer to work\nmore intuitively with software. Even a VIRTUAL_DOCUMENT_ROOT would at least let\nadmins do some intelligent rewriting.\n\nIts obvious the mod_vhost_alias was not thought out in this context, why is\nthere so much resistance to maybe adding the variable or the switch? All other\ncommands understand VirtualDocumentRoot but no one thought to fix it in a\nmod_vhost context.\n\nWe all know that the 3rd party developers are not going to change this as they\nare not well-versed in apache and write code that runs on many webservers (thats\nwhy they write in Perl and PHP and Java). That to me means we should do our best\nto accomodate them and update vhost_alias so that it functions properly.\n\nIts a bug, no one wants to admit it though :)\n\nIf someone else made such a fix would there even be acceptance of it by the\napache team? Or are hearts hardened and this is seen as not a bug but a 'feature'.\n\nI'm about ready to pay a bounty to get this resolved.\n\n\n\n", "is_private": false, "id": 85492, "creator": "siberian@siberian.org", "time": "2006-02-07T02:01:26Z", "bug_id": 26052, "creation_time": "2006-02-07T02:01:26Z", "attachment_id": null}, {"count": 14, "tags": [], "text": "Indeed, Alias, ScriptAlias, mod_rewrite and UserDir all can brake DOCUMENT_ROOT\nvalidity. BTW, regardless of ScriptAlias, doesn't a script know where it's own\nfilename is (complete path)? There are other variables that state it. So a\nscript can know it's own whereabouts, even if aliased outside the DOCUMENT_ROOT. \n\nAren't Alias, ScriptAlias, mod_rewrite and UserDir for the purpose of doing\n_specific_ configurations? I mean for when you need a custom, tweaked\nconfiguration. (oh, and with mod_rewrite you can create a workaround, I've given\nthe example already).\n\naliasing/url rewriting does give the responsability to the httpd admin for\nneeding/wanting a _specific_ connfiguration layout and it's his responsability\nto notify his website owners about things that work and things that don't work\nor work differently in the environment that he has created. [one that is not the\ngeneric config BOTH needed and sufficient to run a website]\n\nSince : \n<virtualhost>\n DocumentRoot ...\n\ndoes set a consistent DOCUMENT_ROOT, and mod_vhost_alias is by it's mission, a\nway to allow you to simplyfy your config, NOT doing some _specific_ aliasing\nschemes. So why can't mod_vhost_alias give the same results as writing multiple\n<virtualhost> directives? That's what it's mission is supposed to be, right?\n\nIf i do some further aliasing, that's my problem as an admin and i shuold know\nwhat i break. \nAnd most often I really don't need such specific aliasing. \n\nIf DOCUMENT_ROOT is supposed to be so useless/unreliable, what should i do to\nfind where my site's files are located? asume going ../ from the script path ? \n\nI am only sorry my knowledge of C is so limited, 'cause I would've written a\npatch myself for mod_vhost_alias long ago.\n", "is_private": false, "id": 85510, "creator": "andrixnet@yahoo.com", "time": "2006-02-07T10:25:54Z", "bug_id": 26052, "creation_time": "2006-02-07T10:25:54Z", "attachment_id": null}, {"count": 15, "tags": [], "bug_id": 26052, "text": "(In reply to comment #13)\n\n> \n> We all know that the 3rd party developers are not going to change this as they\n> are not well-versed in apache and write code that runs on many webservers \n\nAnd use a variable that is only present on one specific webserver (httpd)?\nAnd use a variable whose API is limited to non mass virtual hosting?\n\n> \n> Its a bug, no one wants to admit it though :)\n\nNo it is not. We are talking abount an enhancement here.\n\n> \n> If someone else made such a fix would there even be acceptance of it by the\n> apache team? Or are hearts hardened and this is seen as not a bug but a \n\nFeel free to provide a patch. I cannot promise that it goes into the code base,\nbecause\n\n- From the discussion it seems obvious that for most of the httpd developers\nthis is a low priority issue.\n- It depends on the way the patch solves the problem.\n\n> \n> I'm about ready to pay a bounty to get this resolved.\n> \n\nThats what I love about open software. If the developers don't want to change\nwhat you want, you can either solve it for yourself or pay somebody else to do so.\n", "id": 85539, "attachment_id": null, "creator": "rpluem@apache.org", "creation_time": "2006-02-07T16:36:28Z", "time": "2006-02-07T16:36:28Z", "is_private": false}, {"count": 16, "tags": [], "creator": "slive@apache.org", "is_private": false, "text": "(In reply to comment #13)\n\n> Its obvious the mod_vhost_alias was not thought out in this context, why is\n> there so much resistance to maybe adding the variable or the switch? All other\n> commands understand VirtualDocumentRoot but no one thought to fix it in a\n> mod_vhost context.\n\nAll other commands certainly do not \"understand\" VirtualDocumentRoot.  This\ndirective maps only the filesystem location of the response.  I frequently see\nrequests to make this or that directive interpolate VirtualDocumentRoot-style,\nbut usually there is a better way to accomplish the same thing.\n\n> If someone else made such a fix would there even be acceptance of it by the\n> apache team? Or are hearts hardened and this is seen as not a bug but a 'feature'.\n\nPatches are always welcome but are also subject to normal Apache review rules. \nI can certainly say that a patch that changes the default behavior of\nDOCUMENT_ROOT is very unlikely to be accepted.  Something that creates a\nVIRTUAL_DOCUMENT_ROOT is somewhat more likely to get in.", "id": 85541, "time": "2006-02-07T17:02:33Z", "bug_id": 26052, "creation_time": "2006-02-07T17:02:33Z", "attachment_id": null}, {"attachment_id": 17663, "tags": [], "bug_id": 26052, "is_private": false, "count": 17, "id": 85724, "time": "2006-02-12T05:22:26Z", "creator": "cbs@cts.ucla.edu", "creation_time": "2006-02-12T05:22:26Z", "text": "Created attachment 17663\nset document root with mod_vhost_alias\n\nThis has been causing problems for me with PHP.  I wrote a patch for\nmod_vhost_alias.c to dynamically set document_root.  The changed behavior is\ncontrolled by setting SetVirtualDocumentRoot to \"on\" or \"true\".  Patch is\nattached."}, {"attachment_id": null, "tags": [], "bug_id": 26052, "is_private": false, "count": 18, "id": 91535, "time": "2006-07-24T11:54:09Z", "creator": "davidp@preshweb.co.uk", "creation_time": "2006-07-24T11:54:09Z", "text": "(In reply to comment #17)\n> Created an attachment (id=17663) [edit]\n> set document root with mod_vhost_alias\n> \n> This has been causing problems for me with PHP.  I wrote a patch for\n> mod_vhost_alias.c to dynamically set document_root.  The changed behavior is\n> controlled by setting SetVirtualDocumentRoot to \"on\" or \"true\".  Patch is\n> attached.\n\nNice one, I personally believe that functionality should be included in\nmod_vhost_alias.c - enabling it with a new directive (SetVirtualDocumentRoot) is\na great idea, so it does not mess with document_root when not expected to, but\ncan be told to do so.\n\nI understand the Apache developers resistance to including this functionality as\ndocument_root should not be relied upon to give the correct path if\nmod_alias/mod_rewrite etc have done some funky magic. However, the fact remains\nthat there's a LOT of scripts out there which do rely on it, and for most users,\n the behaviour they expect (the Right Thing) is for document_root to be set to\nwhatever document_root was decided upon by mod_vhost_alias.c.\n\nThe patch didn't work for me, for Apache 2.2.2 - looks like\nvhost_alias_interpolate has been changed since you wrote your patch.  I'll\nmanually apply the changes to that hunk and regenerate the patch and attach it\nshortly.\n"}, {"attachment_id": 18634, "tags": [], "bug_id": 26052, "is_private": false, "count": 19, "id": 91537, "time": "2006-07-24T12:21:47Z", "creator": "davidp@preshweb.co.uk", "creation_time": "2006-07-24T12:21:47Z", "text": "Created attachment 18634\nset document root with mod_vhost_alias from Apache 2.2.2\n\noriginal patch didn't take on my mod_vhost_alias.c from Apache 2.2.2, so I\nmanually fixed the rejects and generated a new patch, attached.  Hope it's of\nuse to someone :)"}, {"count": 20, "tags": [], "text": "this issue breaks software such as \"wordpress\" (and probably many other \nframeworks) which might explain why VirtualDocumentRoot is not used very much \nin hosting environments.\n\nI *love* the idea of VirtualDocumentRoot-- it makes configuration tons \neasier.. but if it breaks other software, I have to go back to \nthe \"traditional\" mass virtual hosting directives.\n\nhonestly, a new variable (VIRTUAL_DOCUMENT_ROOT) could be added, but then all \nof the wordpress instances deployed on the internet would have to be updated \nto use the new variable.\n", "is_private": false, "id": 101536, "creator": "jam@zoidtechnologies.com", "time": "2007-04-09T09:01:25Z", "bug_id": 26052, "creation_time": "2007-04-09T09:01:25Z", "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 26052, "is_private": false, "count": 21, "id": 106470, "time": "2007-08-08T02:10:25Z", "creator": "xaymaca@gmail.com", "creation_time": "2007-08-08T02:10:25Z", "text": "Add Zend Framework to the list of popular apps that can't be run properly with\nthe current state of DocumentRoot. At least add a VirtualDocumentRoot variable\nso that we could manually fix the apps ourselves.\n\n(In reply to comment #20)\n> this issue breaks software such as \"wordpress\" (and probably many other \n> frameworks) which might explain why VirtualDocumentRoot is not used very much \n> in hosting environments.\n> \n> I *love* the idea of VirtualDocumentRoot-- it makes configuration tons \n> easier.. but if it breaks other software, I have to go back to \n> the \"traditional\" mass virtual hosting directives.\n> \n> honestly, a new variable (VIRTUAL_DOCUMENT_ROOT) could be added, but then all \n> of the wordpress instances deployed on the internet would have to be updated \n> to use the new variable.\n> \n\n"}, {"count": 22, "tags": [], "creator": "rbowen@apache.org", "text": "*** Bug 43128 has been marked as a duplicate of this bug. ***", "id": 106782, "time": "2007-08-15T05:03:20Z", "bug_id": 26052, "creation_time": "2007-08-15T05:03:20Z", "is_private": false, "attachment_id": null}, {"count": 23, "tags": [], "creator": "real.human@mrmachine.net", "is_private": false, "text": "Please, please, PLEASE fix this. The whole purpose of mod_vhosts_alias is to compress many VirtualHost \ncontainers that are identical (save for the DocumentRoot and ServerName) into a few simple directives.\n\nThis works great except for the fact that the resulting virtual hosts are NOT the equivelent of their hard \ncoded equivalents because the DOCUMENT_ROOT variable is not adjusted to the VirtualDocumentRoot.\n\nIf this is not considered a \"bug\" then at the very least it seems mod_vhost_alias is not \"fit for purpose\", as \nthe equivalent VirtualHost containers from the documentation are actually not equivalent.\n\n", "id": 112533, "time": "2008-01-06T01:55:45Z", "bug_id": 26052, "creation_time": "2008-01-06T01:55:45Z", "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 26052, "is_private": false, "count": 24, "id": 115352, "time": "2008-04-06T14:24:36Z", "creator": "apachebugs@resonant.com", "creation_time": "2008-04-06T14:24:36Z", "text": "(In reply to comment #1)\n\nI think the developers of mod_vhost_alias may be missing a few important points.  Here is my opinion on the situation, and some things to take into consideration:\n\n* There are \"developers\" of apache, there are users of apache (the administrators who install it), and then there are developers of web solutions that run on Apache. Though there are certainly some individuals that wear all three hats, the underlying expectation should be that they would all be different people who are not reliant on one another\n* DOCUMENT_ROOT has no behavior. It is just an environment variable that is set according to the behavior of a directives and their parameters\n* Setting a VIRTUAL_DOCUMENT_ROOT environment variable is useless, because it still requires users of the system to recode. And this fails to honor the delineation that should exist (or should be offered) between a web server administrator and the developer who builds apps to run on it.\n* The DocumentRoot parameter has never done anything but establish the static base from which customizations to the filesystem/URL namespace could occur through the use of mod_userdir, mod_alias, mod_rewrite, etc. This is true regardless of context (whether Server or VirtualHost)\n* VirtualDocumentRoot is intended as replacement to DocumentRoot, for which the only difference is the inclusion of a language the can be used to dynamically determine where the aforementioned static base of files is. It should otherwise behave in the same manner as that which it is to replace.\n\nI think that developers often get caught up in semantics of code and functional behavior in a way that easily overlooks what \"should be done.\" That VirtualDocumentRoot does not set the DOCUMENT_ROOT variable is by design, however, this is incorrect design. The semantics as to whether this is a bug is up to you, but this issue is no less deserving of  \"enhancement\" than it is a \"major\" one which prevents it from fulfilling its intended duty. Developers of apps should not have to recode. Administrators should have the freedom to structure their hosting environment how they see fit whenever possible.\n\nIn conclusion: VirtualDocumentRoot should set DOCUMENT_ROOT to the interpolated directory.\n"}, {"count": 25, "tags": [], "creator": "siberian@siberian.org", "text": "I love this thread, it comes up every few months! Since the developers are taking a pretty hard line on this would it be possible to get the patch in Comment #19 from David validated and included as a compile time option\n\n./configure --enable-vhost-dir-as-documentroot\n\nThat would solve a lot of issues.\n\nJohn-\n\n(In reply to comment #24)\n> Developers of\n> apps should not have to recode. Administrators should have the freedom to\n> structure their hosting environment how they see fit whenever possible.\n> In conclusion: VirtualDocumentRoot should set DOCUMENT_ROOT to the interpolated\n> directory.\n\n", "id": 115381, "time": "2008-04-07T12:25:31Z", "bug_id": 26052, "creation_time": "2008-04-07T12:25:31Z", "is_private": false, "attachment_id": null}, {"count": 26, "tags": [], "creator": "lundman@lundman.net", "text": "> * Setting a VIRTUAL_DOCUMENT_ROOT environment variable is useless, because it\n> still requires users of the system to recode.\n\nExcept the way it is now, it is not possible for me, as a developer, to get the information \"I must have\". Simply can not be done.\n\nI use this for all users home directory (just the one vhost for 200,000 customers)\n    VirtualDocumentRoot \"/export/cgi/%-1/%-2.-1/%-2.-2/%-2+/\"\n\nThe suggestion above to \"yet again\" create the hash with mod_rewrite, just so I can set a DocumentRoot, is not maintainable, and rather risk-prone.\n\nEven though \"VIRTUAL_DOCUMENT_ROOT\" is undesirable, it at least gives me _one possible way_ to set the real \"ROOT\" for the scripts/users home etc. Even to buy me time while you guys argue over semantics.\n\nWhich leaves me, and probably others, with patching Apache, which will further complicate future support, debugging, and delay any upgrade for security patches, bringing down the reputation of Apache. \n\nSeriously, do something about it please :)\n\n", "id": 116083, "time": "2008-04-30T20:17:27Z", "bug_id": 26052, "creation_time": "2008-04-30T20:17:27Z", "is_private": false, "attachment_id": null}, {"count": 27, "tags": [], "bug_id": 26052, "text": "I've worked around this bug by creating a file with the following:\n\n<?php \n$_SERVER['DOCUMENT_ROOT'] = str_replace($_SERVER['SCRIPT_NAME'],\"\",$_SERVER['SCRIPT_FILENAME']); \n?>\n\nAnd I use:\n\n<VirtualHost 123.123.123.123>\nVirtualDocumentRoot /path/to/sites/\n...\nphp_admin_value auto_prepend_file /path/setdocroot.php\n</VirtualHost>\n\nAlso - this should work in a .htaccess file (untested):\n\nphp_flag auto_prepend_file /path/setdocroot.php", "id": 116445, "attachment_id": null, "creator": "kiall@managedit.ie", "creation_time": "2008-05-10T11:37:05Z", "time": "2008-05-10T11:37:05Z", "is_private": false}, {"count": 28, "tags": [], "creator": "qfox@ya.ru", "text": "(In reply to comment #11)\n> To me there are 4 solutions:\n> \n> 1) Screw the consumers, Purity Is Important\n> 2) Add VIRTUAL_DOCUMENT_ROOT and not really solve anything since now everyone\n> has to change their code and no one will.\n> 3) Make mod_vhost_alias do the Right Thing that consumers expect\n> 4) Add a variable that changes DOCUMENT_ROOT between the two contexts and allow\n> the webserver admin to select what they believe Purity to be.\n\nIn fact it`s a really good and simple solution for future in apache style.\nUnfortunately, I cant understand why apache developers don`t want to do that patch quick and quite.\n\nApache developers must rewrite a lot of code of modules because them incompatible as matter of fact. Just try to use VirtualDocumentRoot (mod_vhost_alias) with mod_rewrite or mod_vhost with mod_ssl. They write mod_ssl_vhost_alias but not rewrite mod_vhost_alias to understand mod_ssl because back-compatibility.\n\n2 Apache developers:\nGuys. It`s a life. If you write bad code, rewrite them as fast as you can or close it, because tomorrow will be worse! Remember IE6. And if you cant understand me: all hates IE now, and not only version 6.", "id": 134278, "time": "2010-02-06T19:35:46Z", "bug_id": 26052, "creation_time": "2010-02-06T19:35:46Z", "is_private": false, "attachment_id": null}, {"count": 29, "tags": [], "creator": "g.starck@gmail.com", "text": "Hi,\n\nI've had the same problem :\n\nI wanted to use VirtualDocumentRoot directive but because it doesn't set accordingly the 'DocumentRoot' variable in cgi scripts then it's quite \"useless\" to me : a RewriteRule/rewritemap can handle the same work as far as i see -- so I'm asking what brings the VirtualDocumentRoot that mod_rewrite has not already :-?\n\nFor now I'm using the workarround given by Kial but I'm not sure it'll fit all my needs (that is I'm not sure some 3rd party applications don't use somewhere the variable)..\n\nIt would be more than appropriate to have the proposed patch implemented into mod_vhost_alias imho.\n\nGr\u00e9gory.", "id": 135015, "time": "2010-03-03T12:08:13Z", "bug_id": 26052, "creation_time": "2010-03-03T12:08:13Z", "is_private": false, "attachment_id": null}, {"count": 30, "tags": [], "creator": "talk@fedushin.ru", "text": "Another solution is to satisfy feature request \"change DOCUMENT_ROOT via mod_rewrite\":\nhttp://www.techlists.org/archives/web/apache-users/2002-07/msg01360.shtml\nhttp://www.techlists.org/archives/web/apache-users/2002-07/msg01379.shtml\n\nCurrently mod_rewrite's directive \"RewriteRule <src> <target> [E=DOCUMENT_ROOT:<desired value>]\" creates environment variable 'REDIRECT_DOCUMENT_ROOT' if <target> is redirected by other directives; else it has no effect, DOCUMENT_ROOT is overwritten by Apache.\n\nLet's suppose that setting of environment variable DOCUMENT_ROOT by mod_rewrite will be processed in new special way (all other env. variables should not be affected): Apache changes its inner DOCUMENT_ROOT for current request to the value set by mod_rewrite, and corrects DOCUMENT_ROOT-relative paths (PATH_INFO, SCRIPT_NAME). Both inner Apache settings & corresponding environment variables should be corrected. If correction fails - return 500 Internal Server Error.\n\nAdvantages of such solution:\n1. Very small backward compatibility issue.\nIf somebody tried to set DOCUMENT_ROOT by mod_rewrite, failed, but launched his experiment to production server(s) - he will have compatibility issue.\nSo to be affected, one must have done very atypical & silly thing.\n\n2. Administrators will be able to set correct DOCUMENT_ROOT value for VirtualDocumentRoot-s in configuration files,\n\n3. Administrators & hosting customers with limited rights will be able to create subdomains by mod_rewrite.\nCurrently this great Apache & mod_rewrite feature is not perfect: everything can be tuned (there are some tricks) except correcting DOCUMENT_ROOT.\nKial's workaround is good for PHP scripts, but f.e. doesn't solve issue with listing of directory's content within subdomain with \"Options +Indexes\" (example: http://naobum.fedushin.ru/ ).", "id": 141601, "time": "2010-11-10T10:08:51Z", "bug_id": 26052, "creation_time": "2010-11-10T10:08:51Z", "is_private": false, "attachment_id": null}, {"count": 31, "tags": [], "creator": "trev@advanced-reality.com", "text": "This is without question a bug (it is not the desired behavior to have mod_rewrite and other modules NOT work with mod_vhost_alias).  The question is whether it is a bug in core apache or the users of it (ex: mod_rewrite and others).  This in essence breaks mod_rewrite while using mod_vhost_alias.  Yes it can be worked around using RewriteBase but this is only allowed in the .htaccess file (per site not en masse) and is a cludge to fix the real issue (not getting a proper DOCUMENT_ROOT automatically).\n\nSeeing as this is a bug affecting many users (look at the number of commentsplus it affects almost all drupal, wordpress and other framework sites that use mod_rewrite to make \"clean URLs\") I suggest several approaches below in order of recommendation (#1 is preferred approach):\n1. Allow the DocumentRoot directive to take variables so that it can be set dynamically for things like mod_vhost_alias.  This keeps the definition of DOCUMENT_ROOT unchanged but allows mod_vhost_alias users to set it properly.  I don't see how anyone looses with this solution and since it is specifically set shouldn't cause any backward compatibility issues.\n2. Allow the option to change the way apache core defines DOCUMENT_ROOT to use VirtualDocumentRoot if there is no DocumentRoot directive.  This is in essence the patch someone from comment #19 if I understand correctly.  This is basically providing a way of evolving DOCUMENT_ROOT to support a more dynamic environment.  Having it implemented as a variable would minimize backward compatibility issues and allow for a smooth transition to the \"newer expanded definition of DOCUMENT_ROOT\".  I imagine eventually this switch will be on by default for almost all sites if this route is taken.\n3. Do not change the core at all and transfer this bug to EVERY apache module that uses DOCUMENT_ROOT so that they implement using VIRTUAL_DOCUMENT_ROOT (or whatever variable it sets) if DOCUMENT_ROOT is not set.  This will be lots more coding and seems to be basically punting the issue.  It will also take considerably longer to get everything working properly since code needs to be changed in many modules.  I truly hope this is not the suggestion taken but if the view is nothing is wrong in core and this is just a scripter issue then ALL the apache modules that use DOCUMENT_ROOT should be updated to check for VIRTUAL_DOCUMENT_ROOT.  Of course mod_vhost_alias will need to be modified to set VIRTUAL_DOCUMENT_ROOT as well.\n\nTo the Devs reviewing this comment:\nMany MANY people really want SOME resolution to this issue and it DOES affect a lot of users.  Please read these suggestions with an open mind and help us get SOME resolution to this issue.  Suggestion #1 in particular does not require changing the definition of DOCUMENT_ROOT.  It will require core recoding on the processing of the directive but you may be able to use the VirtualDocumentRoot processing code to accomplish this without too much work. This will allow mod_vhost_alias users to set it (along with VirtualDocumentRoot at first but likely eventually completely replacing and deprecating VirtualDocumentRoot altogether) to create fully functional mass virtual hosting.\n\nI have logs from rewriting with and without mod_vhost_alias to show how mod_rewrite is using DOCUMENT_ROOT and without it it usually loops continuously.  If you wish to see them let me know and I will attach them.", "id": 146823, "time": "2011-06-02T19:27:02Z", "bug_id": 26052, "creation_time": "2011-06-02T19:27:02Z", "is_private": false, "attachment_id": null}, {"count": 32, "tags": [], "text": "Fixed in trunk in r1132494", "is_private": false, "id": 146875, "creator": "sf@sfritsch.de", "time": "2011-06-05T21:34:47Z", "bug_id": 26052, "creation_time": "2011-06-05T21:34:47Z", "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 26052, "is_private": false, "count": 33, "id": 154171, "time": "2012-02-26T16:31:00Z", "creator": "sf@sfritsch.de", "creation_time": "2012-02-26T16:31:00Z", "text": "fixed in 2.4.1"}, {"attachment_id": null, "tags": [], "bug_id": 26052, "is_private": false, "count": 34, "id": 164140, "time": "2012-12-19T05:26:57Z", "creator": "pha3zme@gmail.com", "creation_time": "2012-12-19T05:26:57Z", "text": "This was flagged as Resolved and Fixed In February 2012.  I've poored all over the internet for elaboration on how to actually use the new feature described in the Revision and there is nothing explaining it anywhere\n\nRevision r1132494 says that the DocumentRoot can now be over-ridden on a per-request basis. But there's no example or information anywhere explaining how to do it.\n\nIf someone writes some code but doesn't provide any documentation on how to use it, then I don't think the issue can be considered resolved.\n\nCan anyone please at least append this issue with how to use the per-request setting of Document Root?  I thought maybe I could just pass the %{HTTP_HOST} variable to DocumentRoot but it doesn't work like that."}, {"count": 35, "tags": [], "text": "(In reply to comment #34)\n> This was flagged as Resolved and Fixed In February 2012.  I've poored all\n> over the internet for elaboration on how to actually use the new feature\n> described in the Revision and there is nothing explaining it anywhere\n> \n> Revision r1132494 says that the DocumentRoot can now be over-ridden on a\n> per-request basis. But there's no example or information anywhere explaining\n> how to do it.\n> \n> If someone writes some code but doesn't provide any documentation on how to\n> use it, then I don't think the issue can be considered resolved.\n> \n> Can anyone please at least append this issue with how to use the per-request\n> setting of Document Root?  I thought maybe I could just pass the\n> %{HTTP_HOST} variable to DocumentRoot but it doesn't work like that.\n\nI've develop an apache module to things like that :\n\nhttp://git.meleeweb.net/cgit.cgi/mod_virtualvalue.git/\n\nI think a configuration example is better than an explanation\n\nhttp://git.meleeweb.net/cgit.cgi/mod_virtualvalue.git/tree/test/vhost.conf\n\nThis is used on some french hosters (~6000), enlightenment servers on the basis to get only one vhost declared.", "is_private": false, "id": 164144, "creator": "bertrand@jacquin.bzh", "time": "2012-12-19T09:14:08Z", "bug_id": 26052, "creation_time": "2012-12-19T09:14:08Z", "attachment_id": null}, {"count": 36, "tags": [], "creator": "sf@sfritsch.de", "text": "(In reply to comment #34)\n> This was flagged as Resolved and Fixed In February 2012.  I've poored all\n> over the internet for elaboration on how to actually use the new feature\n> described in the Revision and there is nothing explaining it anywhere\n> \n> Revision r1132494 says that the DocumentRoot can now be over-ridden on a\n> per-request basis. But there's no example or information anywhere explaining\n> how to do it.\n\nIt's a feature for modules. There is a new ap_set_document_root() function.\n\n> If someone writes some code but doesn't provide any documentation on how to\n> use it, then I don't think the issue can be considered resolved.\n\nThe bug report was about VirtualDocumentRoot and this now sets DOCUMENT_ROOT correctly. Therefore the issue is resolved.\n\n> Can anyone please at least append this issue with how to use the per-request\n> setting of Document Root?  I thought maybe I could just pass the\n> %{HTTP_HOST} variable to DocumentRoot but it doesn't work like that.\n\nThat would be a separate enhancement request.", "id": 164154, "time": "2012-12-19T21:32:44Z", "bug_id": 26052, "creation_time": "2012-12-19T21:32:44Z", "is_private": false, "attachment_id": null}, {"count": 37, "tags": [], "bug_id": 26052, "text": "(In reply to comment #35)\n> I've develop an apache module to things like that :\n> \n> http://git.meleeweb.net/cgit.cgi/mod_virtualvalue.git/\n> \n> I think a configuration example is better than an explanation\n> \n> http://git.meleeweb.net/cgit.cgi/mod_virtualvalue.git/tree/test/vhost.conf\n> \n> This is used on some french hosters (~6000), enlightenment servers on the\n> basis to get only one vhost declared.\n\nI haven't looked at the module in detail, but it seems you don't use the new ap_set_document_root() function. Modifying the core's serverconfig breaks with other MPMs than prefork.", "id": 164155, "attachment_id": null, "creator": "sf@sfritsch.de", "creation_time": "2012-12-19T21:35:55Z", "time": "2012-12-19T21:35:55Z", "is_private": false}, {"count": 38, "tags": [], "creator": "bertrand@jacquin.bzh", "text": "(In reply to comment #37)\n> (In reply to comment #35)\n> > I've develop an apache module to things like that :\n> > \n> > http://git.meleeweb.net/cgit.cgi/mod_virtualvalue.git/\n> > \n> > I think a configuration example is better than an explanation\n> > \n> > http://git.meleeweb.net/cgit.cgi/mod_virtualvalue.git/tree/test/vhost.conf\n> > \n> > This is used on some french hosters (~6000), enlightenment servers on the\n> > basis to get only one vhost declared.\n> \n> I haven't looked at the module in detail, but it seems you don't use the new\n> ap_set_document_root() function. Modifying the core's serverconfig breaks\n> with other MPMs than prefork.\n\nMy original needs are for apache 2.2 and ap_set_document_root() does not seem to be present on 2.2.23 git tag.\n\nActually this is working with MPM worker (master has fix to reentrant functions).\n\nThis is far away from perfect.", "id": 164156, "time": "2012-12-19T22:01:24Z", "bug_id": 26052, "creation_time": "2012-12-19T22:01:24Z", "is_private": false, "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 26052, "is_private": false, "count": 39, "id": 164239, "time": "2012-12-26T08:55:29Z", "creator": "pha3zme@gmail.com", "creation_time": "2012-12-26T08:55:29Z", "text": "Stefan said:\n\"The bug report was about VirtualDocumentRoot and this now sets DOCUMENT_ROOT correctly. Therefore the issue is resolved.\"\n\nHMMMMM Maybe I missed something but I'm pretty certain I tested $_SERVER['DOCUMENT_ROOT'] in php and it wasn't matching the value set by VirtualDocumentRoot.  You're saying it should match now?"}, {"count": 40, "tags": [], "creator": "sf@sfritsch.de", "text": "(In reply to comment #39)\n> Stefan said:\n> \"The bug report was about VirtualDocumentRoot and this now sets\n> DOCUMENT_ROOT correctly. Therefore the issue is resolved.\"\n> \n> HMMMMM Maybe I missed something but I'm pretty certain I tested\n> $_SERVER['DOCUMENT_ROOT'] in php and it wasn't matching the value set by\n> VirtualDocumentRoot.  You're saying it should match now?\n\nYes, in 2.4.x. It is very unlikely that the fix will ever be ported to 2.2.x because it requires infrastructure that is only present in 2.4.", "id": 164254, "time": "2012-12-27T09:22:25Z", "bug_id": 26052, "creation_time": "2012-12-27T09:22:25Z", "is_private": false, "attachment_id": null}, {"count": 41, "tags": [], "creator": "pha3zme@gmail.com", "text": "Lovely.  So the problem is that my brand new server setup on November 30, 2012 pulled Apache 2.2 when I ran aptitude -install apache2.  And so I toar my hair out with this problem becuase I wasn't running a recent enough version.  Why would aptitude on Debian 6 not pull Apache 2.4?\n\nFurthermore, what must I do to force an aptitude or apt-get install to get the latest version?", "id": 164263, "time": "2012-12-27T22:02:59Z", "bug_id": 26052, "creation_time": "2012-12-27T22:02:59Z", "is_private": false, "attachment_id": null}, {"count": 42, "tags": [], "creator": "siberian@siberian.org", "text": "Apache 2.4 is still experimental in debian 6. \n\nhttp://lists.debian.org/debian-devel-announce/2012/03/msg00013.html\n\nLots more info on the Googles on this. Not an apache issue.", "id": 164264, "time": "2012-12-27T23:13:30Z", "bug_id": 26052, "creation_time": "2012-12-27T23:13:30Z", "is_private": false, "attachment_id": null}, {"count": 43, "tags": [], "creator": "pha3zme@gmail.com", "text": "Thanks, John.\n\nI didn't have a proper understanding of how repositories and builds per distro worked.  One of my buddies clarified this for me.  All this trouble because I didn't understand I've got to check out everything on my distro and not just assume its all kosher.  LOL :)  A big learning lesson I won't forget.", "id": 164265, "time": "2012-12-28T00:03:36Z", "bug_id": 26052, "creation_time": "2012-12-28T00:03:36Z", "is_private": false, "attachment_id": null}, {"count": 44, "tags": [], "bug_id": 26052, "text": "(In reply to Kiall Mac Innes from comment #27)\n> I've worked around this bug by creating a file with the following:\n> \n> <?php \n> $_SERVER['DOCUMENT_ROOT'] =\n> str_replace($_SERVER['SCRIPT_NAME'],\"\",$_SERVER['SCRIPT_FILENAME']); \n> ?>\n> \n> And I use:\n> \n> <VirtualHost 123.123.123.123>\n> VirtualDocumentRoot /path/to/sites/\n> ...\n> php_admin_value auto_prepend_file /path/setdocroot.php\n> </VirtualHost>\n> \n> Also - this should work in a .htaccess file (untested):\n> \n> php_flag auto_prepend_file /path/setdocroot.php\n\nI found this advice the simplest. However the .htaccess file should contain something like:\n\n\tphp_value auto_prepend_file webroot.php\n\n(ie php_value, not php_flag)\n\nI have also modified it as follows to be less intrusive on the $_SERVER variable, and to add another convenient global:\n\n\t//\twebroot.php\n\t//\tSave in same directory as .htaccess\n\n\t<?php\n\t\t$root = $_SERVER['WEB_ROOT'] = str_replace($_SERVER['SCRIPT_NAME'],\"\",$_SERVER['SCRIPT_FILENAME']);\n\t?>\n\nMark", "id": 168322, "attachment_id": null, "creator": "mark@manngo.net", "creation_time": "2013-07-06T02:48:14Z", "time": "2013-07-06T02:48:14Z", "is_private": false}]