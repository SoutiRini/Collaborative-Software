[{"count": 0, "attachment_id": null, "bug_id": 13947, "is_private": false, "id": 25149, "time": "2002-10-24T19:54:46Z", "creator": "charper@netjets.com", "creation_time": "2002-10-24T19:54:46Z", "tags": [], "text": "I'd like to override the rollover method to combine the functionality of\nRollingLogAppender and DailyRollingFileAppender (i.e. roll daily, but only keep\na limited number of backups). This should be fairly straightforward, create a\nnew class, override rollover as follows:\n\npublic void rollover() throws IOException\n{\n    super.rollover();\n    deleteBackupFilesBeyondLimits();\n}\n\nhowever, rollover is defined with default access, so I'm stuck putting my class\nin your package or patching log4j... My suggested fix would be to make the\nrollover() method protected as opposed to default.\n\nThanks!"}, {"count": 1, "attachment_id": null, "bug_id": 13947, "is_private": false, "id": 42741, "time": "2003-08-14T14:52:08Z", "creator": "joerattz@yahoo.com", "creation_time": "2003-08-14T14:52:08Z", "tags": [], "text": "I would like to see the functionality of DailyRollingFileAppender changed to \naccomplish what this entry is requesting.  What is the purpose of having a \nrolling logger if it will always generate a unique logname?  What I mean is \nthat in all documentation/examples I can find, the log file names always end up \nbeing unique via some component of the date that includes year.  This will \nresult in an infinite number of files and this creates a maintenance problem, \nsomeone will have to periodically delete files.  For example, a daily rollover \nresults in something like mylog.log.2003-8-01 (format may not be correct, just \nexample).  This means that no files will ever write over existing older files.  \nIf instead, the daily rollover had a file name more like mylog.log.monday (for \nfirst day of week configuration), or mylog.log.07 for the 7th of the month (for \na day of the month type configuration), then at least at some point (weekly or \nmonthly), the logs would overwrite the old ones thereby making external file \ndeletion unnecessary.\n"}, {"count": 2, "tags": [], "bug_id": 13947, "attachment_id": null, "text": "I would also like to see this changed.", "id": 48418, "time": "2003-12-03T13:38:20Z", "creator": "Asgeir.Nilsen@telenor.com", "creation_time": "2003-12-03T13:38:20Z", "is_private": false}, {"count": 3, "tags": [], "text": "Created attachment 9390\nProposed patch that fixes this.  Tested against 1.2.8 under J2SE 1.4.2.", "is_private": false, "id": 48472, "creation_time": "2003-12-04T11:20:30Z", "time": "2003-12-04T11:20:30Z", "creator": "Asgeir.Nilsen@telenor.com", "bug_id": 13947, "attachment_id": 9390}, {"count": 4, "attachment_id": null, "bug_id": 13947, "text": "\nThe rollover method in DailyRollingFileAppender is now public. Note that \nDailyRollingFileAppender  has been deprecated in favor of \norg.apache.log4j.rolling.RollingFileAppender which is much more flexible.", "id": 58345, "time": "2004-05-28T18:10:15Z", "creator": "ceki@apache.org", "creation_time": "2004-05-28T18:10:15Z", "tags": [], "is_private": false}]