[{"count": 0, "tags": [], "bug_id": 53160, "attachment_id": null, "id": 158510, "time": "2012-04-29T12:43:38Z", "creator": "alevy@salesforce.com", "creation_time": "2012-04-29T12:43:38Z", "is_private": false, "text": "When working with httpd in reverse proxy mode, \nmod_deflate doesn't zip back content in outgoing traffic. \n\nThe usual configuration of mod_deflate is rather simple, but doesn't cover reverse proxy cases: \n\n\nSetOutputFilter INFLATE\nSetInputFilter DEFLATE\n\nThis bug was investigated with mod_dumpio.\n\nWhen incoming http traffic from client contains \"content-encoding\" in http header:\n\ndumpio_in (data-TRANSIENT): 37 bytes\ndumpio_in (data-TRANSIENT): POST /services/Soap/u/24.0 HTTP/1.1\\r\\n\ndumpio_in [getline-blocking] 0 readbytes\ndumpio_in (data-TRANSIENT): 24 bytes\ndumpio_in (data-TRANSIENT): Content-Encoding: gzip\\r\\n\ndumpio_in [getline-blocking] 0 readbytes\ndumpio_in (data-TRANSIENT): 23 bytes\ndumpio_in (data-TRANSIENT): Accept-Encoding: gzip\\r\\n\ndumpio_in [getline-blocking] 0 readbytes\ndumpio_in (data-TRANSIENT): 16 bytes\n\nmod_deflate unzip the content properly, but as the request leaves the proxy toward the remote web server, the content remains unzipped, while header still contains \nthe tag: Content-Encoding: gzip\\r\\n.\n\nThis results in data inconsistency - thus remote server refuses to accept the request. \n\nthe same occurs back in response: \nZipped Content arriving in response from remote web server, is inflated in proxy, but then when response is going toward client (after proxy)\nthe content is not zipped, while header still exists.\nResulting client application receiving errors.\n\nI had to create a w/a for this issue, in order to overcome the bug:\nIn PRSFixup, I'm removing the \"content-encoding\", and \"accept-encoding\" tags. \nSo that it will not be sent to remote server, but, I have to add back the \"content-encoding\" tag in aprHook, in order for mod_deflate to inflate the content, so that our proprietary filter will be able to work properly.  \n\nBut, as a result, network traffic is enlarged dramatically. \n\nTo summarize, \nThis bug contains two different bugs:\n1. mod_deflate promises to remove the \"content-encoding : gzip\" from HTTP header, but upon inflating content, somehow apache proxy leaves the tag in outgoing request. \n\n2. mod_deflate doesn't contain appropriate filter to zip back outgoing request content when apache is working in reverse proxy mode."}, {"count": 1, "tags": [], "creator": "alevy@salesforce.com", "attachment_id": null, "id": 158511, "time": "2012-04-29T12:45:21Z", "bug_id": 53160, "creation_time": "2012-04-29T12:45:21Z", "is_private": false, "text": "Logs will be added according to request."}, {"count": 2, "tags": [], "creator": "lists@felix-nawroth.net", "text": "I can confirm the left-in Content-encoding header, which breaks a proxy chain in which every proxy is configured with InputFilter Deflate, for versions 2.2.18 to 2.2.22.\n\nTo fix mod_deflate not recompressing outgoing requests please try\nSetOutputFilter\tINFLATE;DEFLATE\nor\nSetOutputFilter\tINFLATE;proxy-html;DEFLATE\n(according to http://www.apachetutor.org/apps/reverseproxies and/or http://www.apachetutor.org/admin/reverseproxies)", "id": 161158, "time": "2012-08-07T17:52:03Z", "bug_id": 53160, "creation_time": "2012-08-07T17:52:03Z", "is_private": false, "attachment_id": null}]