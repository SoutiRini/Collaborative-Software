[{"count": 0, "tags": [], "text": "I installed the mod_dumpio, and getting request and reponse information from error.log.\nBut in case of \"GIF\"(image) file, output bytes are missing.\n\n(Example) test.gif\n\u2460[binary of gif] ...d8 ff e0 00 10 4a 46 49 46 00 01 01 01 00 48 00...\n\u2461[dumpio_out log] ...4a 46 49 46...\n\u203bTherefore, binary source data(\"d8 ff e0 00 10\",\"00 01 01 01 00 48 00\") are missing.\n\nIt seems that this occur in all image file (not only gif).\n\nIs there any solution of getting all binary bytes of image file?\n(apache or mod_dumpio's setting?)\n\nThank you very much for your help.", "is_private": false, "id": 178187, "creation_time": "2014-09-30T01:28:25Z", "time": "2014-09-30T01:28:25Z", "creator": "eyebird@gmail.com", "bug_id": 57045, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 57045, "is_private": false, "id": 182244, "attachment_id": null, "creator": "christophe.jaillet@wanadoo.fr", "creation_time": "2015-04-04T20:10:15Z", "time": "2015-04-04T20:10:15Z", "text": "This is maybe related to PR54179.\n\nThis has been fixed in 2.4.4.\n\nCould you test with a newer version to see if your issue is solved?"}, {"count": 2, "tags": [], "text": "The problem is that null (i.e., zero) bytes are dropped because the logging code treats all data as null-terminated strings. See my blog post at http://www.skepticism.us/2015/09/apache-module-dumpio-doesnt-dump-null-zero-bytes/. I have a fix for this and will work to get it integrated into the project. You'll find the fixed source for the mod_dumpio.c file linked from my post where I announced the availability of the fix: http://www.skepticism.us/2015/10/a-fix-for-the-apache-mod_dumpio-module-not-dumping-null-bytes/", "is_private": false, "bug_id": 57045, "id": 185619, "time": "2015-10-05T01:37:57Z", "creator": "krader@skepticism.us", "creation_time": "2015-10-05T01:37:57Z", "attachment_id": null}, {"count": 3, "tags": [], "creator": "krader@skepticism.us", "text": "Also, I changed the version to 2.4.16 since the bug exists in all versions up to and including the most recent production release. I also changed the hardware to \"all\" because the bug is independent of the hardware platform.", "id": 185620, "time": "2015-10-05T01:46:03Z", "bug_id": 57045, "creation_time": "2015-10-05T01:46:03Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "text": "Created attachment 33162\nfixed mod_dumpio.c module", "is_private": false, "id": 185621, "creation_time": "2015-10-05T01:48:05Z", "time": "2015-10-05T01:48:05Z", "creator": "krader@skepticism.us", "bug_id": 57045, "attachment_id": 33162}, {"count": 5, "tags": [], "bug_id": 57045, "text": "Created attachment 33163\nPatch against 2.4.16", "id": 185622, "attachment_id": 33163, "creator": "krader@skepticism.us", "creation_time": "2015-10-05T02:30:11Z", "time": "2015-10-05T02:30:11Z", "is_private": false}, {"count": 6, "tags": [], "text": "Created attachment 33164\nProgram to decode output of fixed mod_dumpio\n\nThis Python program extracts the data from the error log lines written by mod_dumpio and decodes the logged data to reconstruct the original data. Below is an example from my error log. The \"=#\" lines are included to clearly delineate the reconstructed data from the lines in the error log (both sets of lines are written to stdout).\n\n=#==#==#==#==#==#==#==#==#==#==#==#==#==#==#==#==#==#==#==#==#==#==#==#==#==#=\nGET /wp-admin/admin-ajax.php?action=revslider_show_image&img=..%2Fwp-config.php HTTP/1.1\nUser-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\nAccept-Encoding: gzip, deflate\nAccept-Language: en-US,en;q=0.5\nHost: skepticism.us\nContent-Length: 0\n\n=#==#==#==#==#==#==#==#==#==#==#==#==#==#==#==#==#==#==#==#==#==#==#==#==#==#=", "is_private": false, "bug_id": 57045, "id": 185623, "time": "2015-10-05T03:10:21Z", "creator": "krader@skepticism.us", "creation_time": "2015-10-05T03:10:21Z", "attachment_id": 33164}, {"count": 7, "tags": [], "creator": "ylavic.dev@gmail.com", "text": "(In reply to Kurtis Rader from comment #5)\n> Created attachment 33163 [details]\n> Patch against 2.4.16\n\nThis patch looks not thread-safe (static encoded_{buf,idx} and space_left can't be accessed concurrently).\n\nHow about using ap_log_[r]data() introduced in 2.4.11?", "id": 185624, "time": "2015-10-05T07:20:09Z", "bug_id": 57045, "creation_time": "2015-10-05T07:20:09Z", "is_private": false, "attachment_id": null}, {"count": 8, "tags": [], "text": "> This patch looks not thread-safe...\n\nIt's definitely not thread-safe. I should have mentioned that this version only works reliably with MPM pre-fork; which is what I'm currently using since my site runs WordPress. I threw this together over a couple of evenings and wanted to get it out there for feedback. Assuming no one has any other problems with the code I'll add the necessary support for thread local data to make it thread-safe.\n\n> How about using ap_log_[r]data() introduced in 2.4.11?\n\nThat looks like it will emit data in a non-backward compatible format. It would also mean the code can't be used with 2.2.x. For this change I'd prefer to be conservative and keep the logged format unchanged to the extent possible and remain compatible with 2.2.x. Obviously I'm changing how 0xff is represented in the error log but it's a safe bet no one will care because they've obviously never tried to use the binary data that is logged.\n\n\nP.S., I looked at the existing uses of ap_log_rdata() in the 2.4.16 tree and they all appear to be incorrect. The ap_log_rdata function declaration doesn't match any of the uses. Consider the sole use in modules/proxy/mod_proxy_fcgi.c:\n\n    ap_log_rdata(APLOG_MARK, APLOG_TRACE8, r, \"FastCGI header\",\n                 farray, AP_FCGI_HEADER_LEN, 0);\n\nThe only reason this compiles is because \"r\" is defined at function scope. If you rename \"r\" to \"req\" throughout the function it fails to compile with this error:\n\nmod_proxy_fcgi.c:577:13: error: use of undeclared identifier 'r'\n            ap_log_rdata(APLOG_MARK, APLOG_TRACE8, req, \"FastCGI header\",\n            ^\n/Users/krader/brew-httpd-2.4.16/include/http_log.h:636:27: note: expanded from macro 'ap_log_rdata'\n\n\nP.P.S., That magic zero as the last parameter of the call rather than AP_LOG_DATA_DEFAULT is gross.", "is_private": false, "bug_id": 57045, "id": 185640, "time": "2015-10-06T00:37:20Z", "creator": "krader@skepticism.us", "creation_time": "2015-10-06T00:37:20Z", "attachment_id": null}, {"count": 9, "tags": [], "creator": "covener@gmail.com", "text": "\n> mod_proxy_fcgi.c:577:13: error: use of undeclared identifier 'r'\n>             ap_log_rdata(APLOG_MARK, APLOG_TRACE8, req, \"FastCGI header\",\n>             ^\n> /Users/krader/brew-httpd-2.4.16/include/http_log.h:636:27: note: expanded\n> from macro 'ap_log_rdata'\n\nfixed in trunk / proposed for backport", "id": 185641, "time": "2015-10-06T01:40:22Z", "bug_id": 57045, "creation_time": "2015-10-06T01:40:22Z", "is_private": false, "attachment_id": null}, {"count": 10, "attachment_id": 33179, "bug_id": 57045, "is_private": false, "id": 185725, "time": "2015-10-12T01:00:56Z", "creator": "krader@skepticism.us", "creation_time": "2015-10-12T01:00:56Z", "tags": [], "text": "Created attachment 33179\nPatch against 2.4.16\n\nThis version, unlike my first submission, is thread-safe. I've tested this on Mac OS X and Ubuntu with both input and output logging enabled."}, {"count": 11, "attachment_id": 33180, "bug_id": 57045, "is_private": false, "id": 185726, "time": "2015-10-12T01:01:46Z", "creator": "krader@skepticism.us", "creation_time": "2015-10-12T01:01:46Z", "tags": [], "text": "Created attachment 33180\nfixed mod_dumpio.c module"}, {"count": 12, "tags": [], "bug_id": 57045, "attachment_id": 33181, "text": "Created attachment 33181\nProgram to decode output of fixed mod_dumpio\n\nThis is an updated version of the program I posted earlier. This version takes advantage of the \"new request\" log message I introduced in the latest version of my mod_dumpio patch.", "id": 185727, "time": "2015-10-12T01:04:40Z", "creator": "krader@skepticism.us", "creation_time": "2015-10-12T01:04:40Z", "is_private": false}, {"count": 13, "tags": [], "bug_id": 57045, "is_private": false, "id": 185728, "attachment_id": 33180, "creator": "covener@gmail.com", "creation_time": "2015-10-12T01:11:42Z", "time": "2015-10-12T01:11:42Z", "text": "Comment on attachment 33180\nfixed mod_dumpio.c module\n\nCan you please post changes as diff -u output?"}, {"count": 14, "tags": [], "bug_id": 57045, "attachment_id": null, "id": 185729, "time": "2015-10-12T01:22:15Z", "creator": "krader@skepticism.us", "creation_time": "2015-10-12T01:22:15Z", "is_private": false, "text": "\"Can you please post changes as diff -u output?\"\n\nI did. See the first attachment: https://bz.apache.org/bugzilla/attachment.cgi?id=33179\n\nI posted the entire module to make it easy for someone to see the entirety of the change since the patch is twice the length of the original module."}, {"count": 15, "tags": [], "bug_id": 57045, "is_private": false, "id": 185730, "attachment_id": null, "creator": "covener@gmail.com", "creation_time": "2015-10-12T01:34:49Z", "time": "2015-10-12T01:34:49Z", "text": "(In reply to Kurtis Rader from comment #14)\n> \"Can you please post changes as diff -u output?\"\n> \n> I did. See the first attachment:\n> https://bz.apache.org/bugzilla/attachment.cgi?id=33179\n> \n> I posted the entire module to make it easy for someone to see the entirety\n> of the change since the patch is twice the length of the original module.\n\nSorry, assumed it superceded.  \n\nIt looks like a large part of the diff (other than that there's info for 2 copies of the mod?) is refactoring and changing C comments to C++/c99 comments.  Noise aside, the latter should be avoided for modules. The refactoring/all-in-one patch makes it a lot of labor to review."}, {"count": 16, "tags": [], "text": "> It looks like a large part of the diff (other than that there's\n> info for 2 copies of the mod?) is refactoring and changing\n> C comments to C++/c99 comments.  Noise aside, the latter should\n> be avoided for modules.\n\nI wholly agree. However, in this case the only gratuitous comment style change I made was the comments in the AP_DECLARE_MODULE stanza at the end of the file. I'm happy to revert that portion of the patch. There are a couple of other places where I changed the comment style but it doesn't materially affect the size of the diff because I modified the comment as a consequence of changing the actual logic. The diff is huge because of the significant rewrite of the core dumpit() function.", "is_private": false, "bug_id": 57045, "id": 185731, "time": "2015-10-12T01:41:35Z", "creator": "krader@skepticism.us", "creation_time": "2015-10-12T01:41:35Z", "attachment_id": null}]