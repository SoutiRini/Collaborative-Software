[{"count": 0, "tags": [], "creator": "jameyg228@hotmail.com", "text": "can a boolean preserveLastModified attribute (that behaves similar to copy's) \nbe added to FixCRLF:\n\nexample use case:\n<fixCRLF srcDir=\"/badEOL\" destDir=\"/fixedEOL\" preserveLastModified=\"true\">\n<ftp ... depends=\"yes\"/>\n\ncurrently, fixCRLF will always generate a file w/ the current timestamp which \nmeans that FTP (which uses TS for dependency checking) will always transfer it", "id": 49728, "time": "2003-12-27T04:54:39Z", "bug_id": 25770, "creation_time": "2003-12-27T04:54:39Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "creator": "alexeys@inventigo.com", "attachment_id": null, "id": 49772, "time": "2003-12-28T18:11:18Z", "bug_id": 25770, "creation_time": "2003-12-28T18:11:18Z", "is_private": false, "text": "I would rather prefer to have <fixcrlf> not to update time stamp for all files\nthat were not modified."}, {"count": 2, "tags": [], "bug_id": 25770, "attachment_id": null, "text": "for clarity, i wasn't suggesting breaking backwards compatability but rather \nintroducing a new use case...\n\npreserveLastModified; attribute[optional]::boolean; default = 'false'\n\n[example patch - note: it's tiny, but does FileUtils.setFileLastModified need \nthe synchronized Java1.1 workaround anymore?]\n\nIndex: FixCRLF.java\n===================================================================\nRCS \nfile: /home/cvspublic/ant/src/main/org/apache/tools/ant/taskdefs/FixCRLF.java,v\nretrieving revision 1.54.2.1\ndiff -u -r1.54.2.1 FixCRLF.java\n--- FixCRLF.java\t14 Oct 2003 13:20:11 -0000\t1.54.2.1\n+++ FixCRLF.java\t29 Dec 2003 15:47:06 -0000\n@@ -157,6 +157,8 @@\n \n     private File srcDir;\n     private File destDir = null;\n+    \n+    private boolean preserveLastModified = false;\n \n     private FileUtils fileUtils = FileUtils.newFileUtils();\n \n@@ -329,6 +331,14 @@\n             ctrlz = ADD;\n         }\n     }\n+    \n+    /**\n+     * Specifies whether Ant should preserve the lastModified timestamp\n+     * on any modified files.\n+     */\n+    public void setPreserveLastModified(boolean preserve) {\n+    \tthis.preserveLastModified = preserve;\n+    }\n \n     /**\n      * Specifies the encoding Ant expects the files to be in -\n@@ -566,6 +576,9 @@\n \n             if (destIsWrong) {\n                 fileUtils.rename(tmpFile, destFile);\n+                if (this.preserveLastModified) {\n+                \tdestFile.setLastModified(srcFile.lastModified());\n+                }\n                 tmpFile = null;\n             }\n \n", "id": 49792, "time": "2003-12-29T16:04:17Z", "creator": "jameyg228@hotmail.com", "creation_time": "2003-12-29T16:04:17Z", "is_private": false}, {"count": 3, "tags": [], "creator": "mbenson@apache.org", "attachment_id": null, "id": 52878, "time": "2004-02-24T17:59:39Z", "bug_id": 25770, "creation_time": "2004-02-24T17:59:39Z", "is_private": false, "text": "*** Bug 23679 has been marked as a duplicate of this bug. ***"}, {"count": 4, "tags": [], "text": "I think there's a small bug in the proposed patch: FixCRLF can be used to \noverwrite existing files (when no destdir is given). If that is the case then \nthe fileUtils.rename(tmpFile,destFile) is actually also overwriting srcFile, \ntherefore you can't get the original timestamp anymore because the file is \ngone. I think this will work:\n            if (destIsWrong) {\n                long modified = srcFile.lastModified();\n                fileUtils.rename(tmpFile, destFile);\n                if (this.preserveLastModified)\n                    destFile.setLastModified(modified);\n                tmpFile = null;\n            }\n", "attachment_id": null, "bug_id": 25770, "id": 56308, "time": "2004-04-23T17:08:01Z", "creator": "jeremy@las-inc.com", "creation_time": "2004-04-23T17:08:01Z", "is_private": false}, {"count": 5, "tags": [], "creator": "jeremy@las-inc.com", "text": "Open mouth, insert foot... Just after clicked the \"Commit\" button it occurs to \nme that you really don't want to set the timestamp to 0, which is the value \nreturned by File.lastModified() if anything goes wrong. So to be extra cautious \nI would recommend the following patch to my patch:\n            if (destIsWrong) {\n                long modified = srcFile.lastModified();\n                fileUtils.rename(tmpFile, destFile);\n                if (this.preserveLastModified && (modified!=0))\n                    destFile.setLastModified(modified);\n                tmpFile = null;\n            }\nChances are that if you can't read the timestamp you can't set it either, so \nyou might argue that this is overkill. But it's an easy thing to check, so we \nmight as well. Perhaps it would also be a good idea to log the setting of the \ntimestamp, and possibly the failure to read the timestamp?", "id": 56311, "time": "2004-04-23T17:29:15Z", "bug_id": 25770, "creation_time": "2004-04-23T17:29:15Z", "is_private": false, "attachment_id": null}, {"count": 6, "tags": [], "bug_id": 25770, "attachment_id": null, "id": 71342, "creation_time": "2005-02-22T11:09:52Z", "time": "2005-02-22T11:09:52Z", "creator": "hsommer@eso.org", "text": "I would like to add moral support for this enhancement request. Here's our \ncase: \nwe want to use ANT files to apply our own patches to several open-source \nprojects during an automated build. The source code gets unpacked on the fly \nfrom the original .tar, .zip etc files.\n\nThe build is done on Linux, but some sources have Windows CRLF line endings, \nwhich breaks the patch program (both <patch> task and commandline).\n\nTherefore we need to run <FixCRLF> between unpacking and patching. \nUnfortunately, at the moment this changes the original file date, and we are \nforced to call the native 'dos2unix -k' instead of using <FixCRLF>.\n\nThe requested additional 'preserveLastModified' attribute of FixCRLF would \nallow us to stay within ANT and no longer call the dos2unix executable. \n", "is_private": false}, {"count": 7, "tags": [], "text": "I'd like to point out that bug#33155 provides a patch that implements a fixcrlf \nfilter.  Using that filter with the copy task's existing preservelastmodified \nattribute will provide the same functionality as this patch.", "attachment_id": null, "bug_id": 25770, "id": 71345, "time": "2005-02-22T13:26:25Z", "creator": "kevin.greiner@compsol.cc", "creation_time": "2005-02-22T13:26:25Z", "is_private": false}, {"count": 8, "tags": [], "creator": "mbenson@apache.org", "attachment_id": null, "id": 71790, "time": "2005-03-03T17:27:25Z", "bug_id": 25770, "creation_time": "2005-03-03T17:27:25Z", "is_private": false, "text": "I have added a patch submitted on the ant-dev list by Yuji Yamano.  Since there\nis a legitimate chance a timestamp really could -be- 0 millis, I have left\nYuji's patch as-is (no checking for ts == 0 as suggested by Jeremy).  Thanks all."}]