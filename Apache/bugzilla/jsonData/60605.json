[{"count": 0, "tags": [], "bug_id": 60605, "attachment_id": null, "text": "Could be converted to\n\nenum SheetState {\n  VISIBLE(0),\n  HIDDEN(1),\n  VERY_HIDDEN(2);\n}", "id": 196177, "time": "2017-01-19T06:43:59Z", "creator": "onealj@apache.org", "creation_time": "2017-01-19T06:43:59Z", "is_private": false}, {"count": 1, "tags": [], "creator": "greg.woolsey@gmail.com", "attachment_id": null, "is_private": false, "id": 196178, "time": "2017-01-19T07:03:03Z", "bug_id": 60605, "creation_time": "2017-01-19T07:03:03Z", "text": "We don't need the instance constructor argument, just use enumInstance.ordinal() \n\nI do like replacing all integer constants like this with enums."}, {"count": 2, "tags": [], "bug_id": 60605, "attachment_id": null, "text": "Implemented in r1779558.", "id": 196225, "time": "2017-01-20T04:23:58Z", "creator": "onealj@apache.org", "creation_time": "2017-01-20T04:23:58Z", "is_private": false}, {"count": 3, "tags": [], "text": "While working on this, I read the javadoc comment for setSheetHidden(int sheetIndex, int state) that the active sheet cannot be hidden, but we do not enforce this.\n\nPresumably, saving a workbook with a hidden active sheet would result in Excel complaining about a corrupted workbook when opened (untested).\n\nThere are a few ways we can handle this:\n1) Make the recommendation in the javadoc but do not enforce this rule\n2) Option 1 plus logging a warning that an active sheet was hidden\n3) throw an IllegalStateException when trying to hide an active sheet\n4) Activate the next visible sheet if hiding the active sheet. Log a warning that setSheetVisibility had this un-asked for side-effect. If there are no other visible sheets, throw an IllegalStateException (this is closest to what Excel does, but may make for some rare bugs).\n5) Same as number 4, but defer checking until saving the workbook (throwing an IllegalStateException at this point would be fatal and could cause problems if the workbook is partially serialized).\n\nWhich behavior is least surprising?", "is_private": false, "bug_id": 60605, "id": 196226, "time": "2017-01-20T04:36:14Z", "creator": "onealj@apache.org", "creation_time": "2017-01-20T04:36:14Z", "attachment_id": null}, {"count": 4, "tags": [], "creator": "onealj@apache.org", "attachment_id": 34653, "id": 196227, "time": "2017-01-20T04:52:07Z", "bug_id": 60605, "creation_time": "2017-01-20T04:52:07Z", "is_private": false, "text": "Created attachment 34653\nCode changes for Option 3 and Option 4"}, {"count": 5, "tags": [], "bug_id": 60605, "attachment_id": null, "text": "@Test\npublic void testActiveSheetIsHidden() throws IOException {\n    Workbook wb = _testDataProvider.createWorkbook();\n    wb.createSheet(\"First Sheet\");\n    wb.setSheetVisibility(0, SheetVisibility.HIDDEN);\n    java.io.FileOutputStream fos = new java.io.FileOutputStream(\"/tmp/hidden\"\n            + \".\" + _testDataProvider.getStandardFileNameExtension());\n    wb.write(fos);\n    wb.close();\n    fos.close();\n    \n    wb = _testDataProvider.createWorkbook();\n    wb.createSheet(\"First Sheet\");\n    wb.setSheetVisibility(0, SheetVisibility.VERY_HIDDEN);\n    fos = new java.io.FileOutputStream(\"/tmp/veryhidden\"\n            + \".\" + _testDataProvider.getStandardFileNameExtension());\n    wb.write(fos);\n    wb.close();\n    fos.close();\n}\n\nExcel 2013 behavior:\nhidden.xls and veryhidden.xls open without a warning with no sheets visible. After adding a sheet to hidden.xls, the menu to unhide the first sheet is available.\nhidden.xlsx and veryhidden.xlsx open with a\n> \"We found a problem with some content in 'veryhidden.xlsx'. Do you want us to try to recover as much as we can?\"\ncorrupted workbook dialog.\n\nLibreOffice 4.0.4.2 behavior:\nall 4 files open with the first sheet visible.\n\nIf we implement this to match Excel's behavior, we would have an inconsistency between HSSF and XSSF.", "id": 196230, "time": "2017-01-20T06:07:09Z", "creator": "onealj@apache.org", "creation_time": "2017-01-20T06:07:09Z", "is_private": false}]