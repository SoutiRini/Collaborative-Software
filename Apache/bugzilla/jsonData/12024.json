[{"count": 0, "attachment_id": null, "creator": "nicolaken@apache.org", "text": "With this patch you don't have to necessarily define all the system properties\nthat are needed to run the testcases in the junit task call.\n\nIt makes it possible to make all the Ant properties available to the testcases as \n \n ant.property.antpropertyname\n\nReal worl use-case: get the necessary properties from an XmlProperty file or\nfrom a Property file, so that the coder doesn't have to tweak the buildfile by\nhand, only the property file.", "id": 21704, "time": "2002-08-25T13:41:46Z", "bug_id": 12024, "creation_time": "2002-08-25T13:41:46Z", "tags": [], "is_private": false}, {"count": 1, "attachment_id": 2835, "creator": "nicolaken@apache.org", "is_private": false, "id": 21705, "time": "2002-08-25T13:43:00Z", "bug_id": 12024, "creation_time": "2002-08-25T13:43:00Z", "tags": [], "text": "Created attachment 2835\nJUnitTask.java.diff"}, {"count": 2, "attachment_id": null, "bug_id": 12024, "is_private": false, "id": 27327, "time": "2002-12-03T14:35:21Z", "creator": "nicolaken@apache.org", "creation_time": "2002-12-03T14:35:21Z", "tags": [], "text": "This patch is quite important for projects that use external resources for unit\ntests, and that use unit test buildfile snippets imported in their ant file.\nThis enables them to reuse Ant builfiles with the possibility of customizing the\ninfo sent to the unit tests about the environment.\n\nThere was a discussion on this about making it better, if someone can remember\nor make suggestions on it he is welcome.\n\nA possibility is to make all ant.junit.* properties be sent to the unit tests,\ndunno if it's the best, or by making the task accept all properties that begin\nwith a certain string."}, {"count": 3, "tags": [], "text": "IMO a passdown should be broader than just junit, as <java> may like it too, as\ncould <ant>. what we want is a way to specify a set of properties by a pattern\n\n<sysproperty prefix=\"junit.param.\"> or in \n<antcall> <property prefix=\"foo\">\n\nThis would be good for bulk passing of stuff, and finally a way of passing down\n'undefined' :)", "attachment_id": null, "bug_id": 12024, "id": 27339, "time": "2002-12-03T17:53:32Z", "creator": "stevel@apache.org", "creation_time": "2002-12-03T17:53:32Z", "is_private": false}, {"count": 4, "tags": [], "creator": "ddevienne@lgc.com", "text": "I agree. This is why I started this <propertyset> discussion at one point, but \nit lead nowhere, in part because I didn't do anything about it, and in part \nbecause I didn't see much buy-in from the list. I've resorted to entity \nincludes for my various <sysproperty>ies needed in <java>/<junit>, lacking a \nbetter mechanism. Until now, I thought I was the only one bothered by this... \nBut then again I'm easy to bother, right ;-) --DD", "id": 27340, "time": "2002-12-03T17:57:06Z", "bug_id": 12024, "creation_time": "2002-12-03T17:57:06Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "creator": "nicolaken@apache.org", "text": "Anyone working on <propertyset> or <syspropertyset>?\nIs shall I go forward with it?\nAny suggestions before I start?\n\nThanks :-)", "id": 28171, "time": "2002-12-22T15:27:32Z", "bug_id": 12024, "creation_time": "2002-12-22T15:27:32Z", "is_private": false, "attachment_id": null}, {"count": 6, "tags": [], "creator": "mariano@fuegolabs.com", "attachment_id": null, "is_private": false, "id": 34342, "time": "2003-04-02T14:59:02Z", "bug_id": 12024, "creation_time": "2003-04-02T14:59:02Z", "text": "I work extensively with ant and junit (4K junit tests run on ant) and this\nfeature would be greatly appreciated.\nMy context requires me to pass these variables when forking, and I've found\nthose properties are already there in the junitxxxxxxxx.properties file, and the\nJUnitTest also contains them. \nI think it would be cool to define all those properties as ant.property.<....>\nas system properties when the test , instead of adding them to the command line.\n\nAnyway, I can upload a diff if you like with my proposed solution... let me know\nthx."}, {"count": 7, "attachment_id": null, "creator": "ddevienne@lgc.com", "text": "My own solution was to define a new PropertySet data type (called \n<syspropertyset> inside <junit> to be consistent) that allows you to easily \npass down a bunch or a few Ant properties, possibly renaming them allow the \nway. To use it, I simply extended <java> and <junit>, and called my version \n<javax> and <junitx>. (No point for me in figthing for something to make it to \nAnt when I can use it myself, when the Ant community doesn't care that much \nabout the feature I want).\n\nHere's a snippet of one of my scripts. --DD\n\n    <junitx ...>\n      ...\n      <syspropertyset>\n        <propertyref prefix=\"testall.\" />\n        <propertyref prefix=\"runtime-\" />\n        <mapper type=\"regexp\" from=\"runtime-(.*)\" to=\"\\1\" />\n      </syspropertyset>\n    </junitx>", "id": 34362, "time": "2003-04-02T17:46:29Z", "bug_id": 12024, "creation_time": "2003-04-02T17:46:29Z", "tags": [], "is_private": false}, {"count": 8, "tags": [], "text": "This is majorly important to anyone who uses junit.  I'd like to see it as part\nof ant...", "is_private": false, "bug_id": 12024, "id": 34363, "time": "2003-04-02T17:50:42Z", "creator": "poi-support@buni.org", "creation_time": "2003-04-02T17:50:42Z", "attachment_id": null}, {"count": 9, "attachment_id": null, "creator": "nicolaken@apache.org", "text": "Yes, I remember it and I really would like it in, as do all centipede users.\nSee also the \"Additional Comments From Steve Loughran 2002-12-03 17:53\"\n\nIMO it's not important is others are not much keen on it; as long as your patch\nworks and solves a real use-case, I don't see why it should be held back.\n\nATM we are using a forked ant that reads a dynamically made anttest.xml, which\nis a major hack. \nPleeeease consider strongly accepting a solution for this, and DD's one is IMHO\nthe best.\n\nThanks.", "id": 34364, "time": "2003-04-02T17:53:57Z", "bug_id": 12024, "creation_time": "2003-04-02T17:53:57Z", "tags": [], "is_private": false}, {"count": 10, "attachment_id": null, "bug_id": 12024, "is_private": false, "id": 34367, "time": "2003-04-02T18:11:27Z", "creator": "ddevienne@lgc.com", "creation_time": "2003-04-02T18:11:27Z", "tags": [], "text": "Actually, to be fair, I never proposed it. And like I said, last time I raised \nthis, not much interest was generated. The main problem might be with me, as I \ntend not to submit tests and docs with my code... which always attempts to work \naround Ant, i.e. never need to modify the Ant code. --DD"}, {"count": 11, "tags": [], "creator": "ddevienne@lgc.com", "attachment_id": 5626, "is_private": false, "id": 34444, "time": "2003-04-03T14:52:10Z", "bug_id": 12024, "creation_time": "2003-04-03T14:52:10Z", "text": "Created attachment 5626\nZip of latest 3 sources for <junitx>"}, {"count": 12, "tags": [], "text": "*** Bug 13767 has been marked as a duplicate of this bug. ***", "attachment_id": null, "bug_id": 12024, "id": 35424, "time": "2003-04-17T14:07:15Z", "creator": "bodewig@apache.org", "creation_time": "2003-04-17T14:07:15Z", "is_private": false}, {"count": 13, "attachment_id": null, "bug_id": 12024, "is_private": false, "id": 35428, "time": "2003-04-17T14:20:37Z", "creator": "bodewig@apache.org", "creation_time": "2003-04-17T14:20:37Z", "tags": [], "text": "*** Bug 17045 has been marked as a duplicate of this bug. ***"}, {"count": 14, "tags": [], "text": "OK, propertyset is in, next up is documentation (you don't happen to have some,\nDD? 8-) and using it in tasks.  My minimal list consists of <ant>, <antcall>,\n<subant>, <java> and <junit>.", "attachment_id": null, "id": 36975, "creator": "bodewig@apache.org", "time": "2003-05-09T13:04:23Z", "bug_id": 12024, "creation_time": "2003-05-09T13:04:23Z", "is_private": false}, {"attachment_id": null, "tags": [], "bug_id": 12024, "is_private": false, "count": 15, "id": 36977, "time": "2003-05-09T13:48:31Z", "creator": "ddevienne@lgc.com", "creation_time": "2003-05-09T13:48:31Z", "text": "Hi Stefan,\n\nI already have my own copy of SubAnt (I like to think of it as the original ;-) \ncovered. Trivial Change:\n\nIndex: SubAnt.java\n===================================================================\nRCS \nfile: /cm3/cvs/buildtools/buildmagic/buildmagic/src/com/lgc/buildmagic/SubAnt.ja\nva,v\nretrieving revision 1.3\nretrieving revision 1.4\ndiff -r1.3 -r1.4\n6a7\n> import java.util.Map;\n7a9,10\n> import java.util.Iterator;\n> import java.util.Properties;\n41a45\n>     private PropertySet propertySet;\n53a58,70\n>         // Inject all System properties defined by <propertyset>, if any.\n>         if (this.propertySet != null) {\n>             Properties properties = propertySet.getProperties();\n>             for (Iterator i = properties.entrySet().iterator(); i.hasNext();) \n{\n>                 Map.Entry p = (Map.Entry)i.next();\n>                 Property property = new Property();\n>                 property.setProject(getProject());\n>                 property.setName((String)p.getKey());\n>                 property.setValue((String)p.getValue());\n>                 addProperty(property);\n>             }\n>         }\n>\n268a286,300\n>     }\n>\n>     public void setPropertySetRef(String reference) {\n>         if (this.propertySet != null) {\n>             throw new BuildException(\"too many nested <propertyset>s\");\n>         }\n>         propertySet = (PropertySet)TaskUtils.getReferencedObject(getProject(),\n>                                reference, PropertySet.class, \"<propertyset>\");\n>     }\n>\n>     public void addPropertySet(PropertySet propertySet) {\n>         if (this.propertySet != null) {\n>             throw new BuildException(\"too many nested <propertyset>s\");\n>         }\n>         this.propertySet = propertySet;\n\nHere's the test:\n\n    public void testPropertySet() {\n        // User-properties seem to be always passed down...\n        getProject().setUserProperty(\"U\", \"u\");\n        expectLog(\"test-propertyset\",\n                  \"p.A=a, p.B=${p.B}, p.C=c, p.D=dd, p.E=eee, U=u\");\n    }\n\nHere's the test:\n\n  <target name=\"test-propertyset\">\n    <property name=\"p.A\" value=\"a\" />\n    <property name=\"p.B\" value=\"b\" />\n    <property name=\"p.C\" value=\"c\" />\n    <subant target=\"test-propertyset-level2\">\n      <buildpath>\n        <pathelement location=\"${ant.file}\" />\n      </buildpath>\n      <propertyset>\n        <!-- Should pass in p.A, and p.C only! -->\n        <propertyref name=\"p.A\" />\n        <propertyref name=\"p.D\" /> <!-- Not defined yet, so not passed! -->\n        <propertyref regex=\".\\.C\" /> <!-- should match p.C -->\n      </propertyset>\n    </subant>\n  </target>\n\n  <target name=\"test-propertyset-level2\">\n    <property name=\"p.D\" value=\"dd\" />\n    <propertyset id=\"propertyset-level2\">\n      <!-- Should pass in p.A, p.C, and p.D only! -->\n      <propertyref prefix=\"p.\" />\n    </propertyset>\n    <subant target=\"test-propertyset-level3\"\n            propertysetref=\"propertyset-level2\">\n      <buildpath>\n        <pathelement location=\"${ant.file}\" />\n      </buildpath>\n    </subant>\n  </target>\n\n  <target name=\"test-propertyset-level3\">\n    <property name=\"p.A\" value=\"aaa\" />\n    <property name=\"p.D\" value=\"ddd\" />\n    <property name=\"p.E\" value=\"eee\" />\n    <!--  Expecting the following string literall (minus extra spaces):\n          p.A=a,      p.B=${p.B}, p.C=c,      p.D=dd,     p.E=eee   , U=u -->\n    <echo>p.A=${p.A}, p.B=${p.B}, p.C=${p.C}, p.D=${p.D}, p.E=${p.E}, U=${U}\n</echo>\n  </target>\n\nSomething I've been thinking is that Env. Vars. for <junit>/<java>/<exec> could \n(and I think should) be passed down in a similar fashion.\n\nSorry, I haven't documented this stuff so far... --DD"}, {"count": 16, "tags": [], "text": "<propertyset> is now a nested element of the <ant> task variations and as\n<syspropertyset> for <java> and <junit>.\n\nThere is currently no way to specify \"all Ant properties\" AFAICS, but to pass\nall properties that match a certain pattern to your testcases with a prefix of\n\"ant\" would look like this:\n\n<junit ...>\n  <syspropertyset>\n    <propertyref regexp=\"${pattern}\"/>\n    <mapper type=\"glob\" from=\"*\" to \"ant*\"/>\n  </syspropertyset>\n</junit>\n\nthis is a rather complex example and there are simpler selections mechanisms than\nregular expressions.\n\nLeaving the report open to remind me that docs are still missing.\n", "is_private": false, "bug_id": 12024, "id": 37062, "time": "2003-05-12T14:10:11Z", "creator": "bodewig@apache.org", "creation_time": "2003-05-12T14:10:11Z", "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 12024, "text": "Adding support for the nested <propertyset> to <subant> has been sooo much easier\nafter <ant> supported it, Dominique ;-)", "count": 17, "id": 37064, "time": "2003-05-12T14:12:24Z", "creator": "bodewig@apache.org", "creation_time": "2003-05-12T14:12:24Z", "is_private": false}, {"count": 18, "tags": [], "text": "Initial docs are in - enough to close this report 8-)", "is_private": false, "bug_id": 12024, "id": 37070, "time": "2003-05-12T15:21:34Z", "creator": "bodewig@apache.org", "creation_time": "2003-05-12T15:21:34Z", "attachment_id": null}, {"count": 19, "attachment_id": null, "bug_id": 12024, "is_private": false, "id": 37071, "time": "2003-05-12T15:36:25Z", "creator": "nicolaken@apache.org", "creation_time": "2003-05-12T15:36:25Z", "tags": [], "text": "You made my day B-D"}, {"count": 20, "attachment_id": null, "bug_id": 12024, "text": "Starting with nightly build 2003-05-15 there is <propertref builtin=\"all\"/>\nto define a propertyset that contains all Ant properties.", "id": 37178, "time": "2003-05-14T12:55:39Z", "creator": "bodewig@apache.org", "creation_time": "2003-05-14T12:55:39Z", "tags": [], "is_private": false}]