[{"count": 0, "tags": [], "bug_id": 51492, "attachment_id": null, "text": "hello,I use poi to export excel from oracle database,I find a problem.When I export about 2000 rows data,it work fine,but when I export about 4000 rows data,it don't alert the download dialog and it can restart to export and the web page shows error page.my code is following:\n\n            System.out.println(\"...........onPageLoad\");\n            this.getBzhAM().getDBTransaction().rollback();\n            String voString = \n                this.getHttpSession().getAttribute(\"ExportExcelList\").toString();\n            ViewObject vo = getBzhAM().findViewObject(voString);\n            DataRowBean bean = \n                (DataRowBean)this.getHttpSession().getAttribute(\"ExportExcelHeaderText\");\n            DataRowBean beanAttrCode = \n                (DataRowBean)this.getHttpSession().getAttribute(\"ExportExcelAttrCode\");\n            String exportFileName = \n                this.getHttpSession().getAttribute(\"ExportFileName\").toString();\n\n            this.getHttpSession().removeAttribute(\"ExportExcelList\");\n            this.getHttpSession().removeAttribute(\"ExportExcelHeaderText\");\n            this.getHttpSession().removeAttribute(\"ExportExcelAttrCode\");\n            this.getHttpSession().removeAttribute(\"ExportFileName\");\n            System.out.println(\"exportFileName--->\" + exportFileName);\n            if (this.getHttpRequest().getHeader(\"user-agent\").indexOf(\"MSIE\") !=-1) {\n                exportFileName = \n                        java.net.URLEncoder.encode(exportFileName, \"utf-8\") + \n                        \".xls\";\n            } else {\n                exportFileName = \n                        new String(exportFileName.getBytes(\"utf-8\"), \"iso-8859-1\") + \".xls\";\n            }\n            HttpServletResponse response = getResponse();\n            response.setContentType(\"octets/stream\");\n            response.addHeader(\"Content-Disposition\", \n                               \"attachment;filename=\" + exportFileName);\n\n            ServletOutputStream out = response.getOutputStream();\n            HSSFWorkbook workbook = new HSSFWorkbook();\n            //HSSFSheet sheet;  = workbook.createSheet(\"\u6807\u51c6\u5316\u6570\u636e\u5bfc\u51fa\");\n             System.out.println(\"response.getBufferSize()=\"+response.getBufferSize());\n             response.setBufferSize(4096);\n             System.out.println(\"response.getBufferSize()=\"+response.getBufferSize());\n            int num = 0;\n            if (vo.getRowCount() > Integer.MAX_VALUE) {\n                num = Integer.MAX_VALUE;\n            } else {\n                num = vo.getRowCount();\n            }\n            int divNum = 1000;\n            for (int i = 0; i < num / divNum + 1; i++) {\n                int flagNum;\n                if ((i + 1) * divNum > num) {\n                    flagNum = num;\n                } else {\n                    flagNum = (i + 1) * divNum;\n                }\n                System.out.println(\"flagNum=\" + flagNum);\n                HSSFSheet sheet = workbook.createSheet(\"\u6807\u51c6\u5316\u6570\u636e\u5bfc\u51fa\" + \"\u8868\" + i);\n                System.out.println(\"createSheet:\"+sheet.toString());\n                System.out.println(\"\u4e00\u4e2asheet\u5f00\u59cb\");\n                System.out.println(\"==========================================================================\");\n                sheet.setDefaultColumnWidth((short)25);\n                    for (int m = i * divNum; m < flagNum + 1; m++) {\n                        HSSFRow row;\n                        if (m % divNum == 0 && m == flagNum) {\n                            row = sheet.createRow(divNum);\n                        } else {\n                            row = sheet.createRow(m % divNum);\n                        }\n                        short n;\n                        for (n = 0; n < bean.getAttributeCount(); n++) {\n                            HSSFCell cell = row.createCell(n);\n                            if (m % divNum == 0 && m != flagNum) {\n                                cell.setCellValue(bean.getAttributeValue(n + \n                                                                         1));\n                            } else {\n                                String attrCode = \n                                    beanAttrCode.getAttributeValue(n + 1);\n                                if (\"OrderNo\".equals(attrCode)) {\n                                    cell.setCellValue(String.valueOf(m));\n                                } else {\n                                    cell.setCellValue(Tools.notNull(vo.getRowAtRangeIndex(m - 1).getAttribute(beanAttrCode.getAttributeValue(n + 1))));\n                                }\n                            }\n                        \n            workbook.write(out);\n            System.out.println(\"==========\u4e0b\u8f7d\u5b8c\u6bd5\");\n            out.close();\n        } catch (Exception e) {\n            System.out.println(\"==========\u4e0b\u8f7d\u51fa\u9519\");\n            e.printStackTrace();\n        } finally {\n\n        }", "id": 147846, "time": "2011-07-09T09:07:26Z", "creator": "zhy36007@163.com", "creation_time": "2011-07-09T09:07:26Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 51492, "attachment_id": null, "text": "Bugzilla is for reporting bugs, please use the user list for questions on using POI", "id": 147847, "time": "2011-07-09T11:58:52Z", "creator": "apache@gagravarr.org", "creation_time": "2011-07-09T11:58:52Z", "is_private": false}]