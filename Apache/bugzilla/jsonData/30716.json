[{"count": 0, "tags": [], "bug_id": 30716, "attachment_id": null, "is_private": false, "id": 62095, "time": "2004-08-17T22:00:38Z", "creator": "aalbert@mercury.com", "creation_time": "2004-08-17T22:00:38Z", "text": "The javac task has an annoying limitation that causes many users to have to run \nclean before building a slightly updated project.\n\nThis is because javac task only compiles out dated files but it isn't very \nclever about dependancies. It simply maps a *.java file against a *.class file. \nThere exists an optional ant task called depend that is smarter about this. It \ndetects real dependancies by digging into the class file themselves.\n\nRunning the depend task before the javac task will resolve the issue but most \npeople arn't aware of this. Also, having to specify the srcdir & destdir twice \ncan be a source for errors.\n\nRather, javac task should utilize the existing code found in depend task to \nbuild a proper outdated list."}, {"count": 1, "tags": [], "text": "Created attachment 25305\nSimple test suite for testing javac ant task.", "is_private": false, "bug_id": 30716, "id": 136189, "time": "2010-04-15T17:14:29Z", "creator": "satur9nine@gmail.com", "creation_time": "2010-04-15T17:14:29Z", "attachment_id": 25305}, {"count": 2, "tags": [], "text": "I believe this is more than just an enhancement request, it is actually a bug. I don't think these two situations should ever produce different results:\n\n1. calling javac with a destination directory that contains some previously compiled .class files\n2. calling java with an empty destination directory\n\nIf these produce different results then no programmer will ever trust existing .class files and will want to clean them every time.\n\nPlease see the attached test suite that demonstrates the issue, just change the int value in R.java to something else and run:\n\n1. ant compile\n2. ant run\n\nNotice that the change never takes effect, but if you do the following it does:\n\n1. ant clean\n2. ant compile\n3. ant run\n\nThis is because static final integers are copied into the class files using them, even if those class files don't change they need to be recompiled if the int does. The simple algorithm used by ant to determine dependency is causing this problem and should be eliminated.", "attachment_id": null, "id": 136190, "creator": "satur9nine@gmail.com", "time": "2010-04-15T17:20:37Z", "bug_id": 30716, "creation_time": "2010-04-15T17:20:37Z", "is_private": false}]