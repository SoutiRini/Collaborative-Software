[{"count": 0, "tags": [], "creator": "kieran@digital-crocus.com", "text": "This is more of a feature request than a bug report but let me first explain \nthe problem:\n\nWhen hosting large numbers of virtual hosts with Apache, having an ErrorLog \ndirective for each vhost quickly consumes all available system FDs. Increasing \noperating system limits is a *workaround*, not a solution. With per-vhost \naccess logs it's possible to specify %V in a global LogFormat directive and \nthen log all requests to one file (or pipe) for later separation. This is not \npossible with ErrorLogs because they do not come under the control of \nmod_log_config.\n\nRunning a web hosting provider on Apache, I have the problem that I want to \nallow my users to view error logs for script debugging purposes, but I do not \nwant them to be able to see eachother's error lines for privacy and security \nreasons. The solution to this problem would be to enter an ErrorLog directive \nfor each vhost as mentioned, except that this consumes all my system's \navailable file desciptors. \n\nOne solution would be to add a config option that would tell Apache to close \neach error log when it's done writing a line to it, and re-open it next time \nit needs to do a write. This may be expensive for access logs which typically \nreceive hundreds of new lines a second, but less so for error logs because \nerrors should only occur in exceptional circumstances. However, this solution \nis a bit of a kludge and (?) might make the server vulnerable to DoS attacks \nby clients sending hundreds of requests that produce an error.\n\nA better solution, and the solution I've hacked into my own web server is to \nsomehow allow prepending of vhost information to each error log line. This \nwould allow one global error log for all vhosts to be used which could then be \neasily separated out at a later date (or via a logging pipe). \n\nI've hacked server/log.c in the Apache source to prepend vhost names (where \navailable) to all error log lines (this is a quick fix rather than a \nsolution). Anyway, below is a patch that implements this behaviour incase \nanyone else will find it useful and also to help illustrate the problem. \n\nAs a sidenote, since implementing this I've noticed that not all error log \nlines are added via log_error_core(), in particular messages like the \nfollowing are not logged via this function, but still appear in the globally \ndefined ErrorLog file: \"piped log \nprogram '/usr/local/httpd/vhostlogs/caching_logger' failed unexpectedly\". I'm \nnot sure if this is a bug or it's intentional, but I mention it here just \nincase.\n\nAnyway, here's the patch:\n\n--- log.c.orig  Mon May 24 21:32:24 2004\n+++ log.c       Mon May 24 22:31:05 2004\n@@ -417,15 +417,32 @@\n         }\n     }\n\n-    if (logf && ((level & APLOG_STARTUP) != APLOG_STARTUP)) {\n-        errstr[0] = '[';\n-        ap_recent_ctime(errstr + 1, apr_time_now());\n-        errstr[1 + APR_CTIME_LEN - 1] = ']';\n-        errstr[1 + APR_CTIME_LEN    ] = ' ';\n-        len = 1 + APR_CTIME_LEN + 1;\n+    /* DC patch */\n+\n+\n+    /* if we've got a s struct containing the vhost name */\n+    if (s != NULL) {\n+       /* add it to the beginning of the error string */\n+       len = apr_snprintf(errstr, MAX_STRING_LEN, \"%s \",\ns->server_hostname);\n     } else {\n-        len = 0;\n+       /* else, prepend -servererror- so that at least our piped logger\nwill\n+          have a filename to use rather than just whatever the first field\n+          happens to be */\n+       len = apr_snprintf(errstr, MAX_STRING_LEN, \"-servererror- \");\n+    }\n+\n+    /* changed this code too so that it doesn't assume it's starting at the\n+       beginning of the string (basically use pointer arithmatic to offset\n+       the entire thing by len number of characters) */\n+    if (logf && ((level & APLOG_STARTUP) != APLOG_STARTUP)) {\n+        errstr[len++] = '[';\n+        ap_recent_ctime(errstr + len, apr_time_now());\n+        errstr[len + APR_CTIME_LEN - 1] = ']';\n+        errstr[len + APR_CTIME_LEN    ] = ' ';\n+        len = len + APR_CTIME_LEN + 1;\n     }\n+\n+    /* end DC Patch */\n\n     if ((level & APLOG_STARTUP) != APLOG_STARTUP) {\n         len += apr_snprintf(errstr + len, MAX_STRING_LEN - len,", "id": 57996, "time": "2004-05-24T23:17:32Z", "bug_id": 29190, "creation_time": "2004-05-24T23:17:32Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "creator": "d-bugger@linuxnet.be", "text": "Any chance this or similar patch will be merged?\nI have the same problem as Kieran, and I'm sure many other virtual hosters have\n(unless they don't use/want per vhost error_log)", "id": 79127, "time": "2005-08-29T02:35:11Z", "bug_id": 29190, "creation_time": "2005-08-29T02:35:11Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "creator": "sf@sfritsch.de", "text": "ErrorLogFormat provides this functionality. It is available in trunk since r1005208 and will be in 2.3.9", "id": 141886, "time": "2010-11-21T15:25:33Z", "bug_id": 29190, "creation_time": "2010-11-21T15:25:33Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 29190, "attachment_id": null, "text": "fixed in 2.4.1", "id": 154172, "time": "2012-02-26T16:31:48Z", "creator": "sf@sfritsch.de", "creation_time": "2012-02-26T16:31:48Z", "is_private": false}]