[{"count": 0, "tags": [], "creator": "king@asert.com.au", "is_private": false, "id": 78387, "creation_time": "2005-08-11T02:57:35Z", "time": "2005-08-11T02:57:35Z", "bug_id": 36137, "text": "WebLogic in its wisdom wraps BLOBS from Oracle when accessing Oracle via\nDataSources. OracleRDBMSAdapter hard codes in the Blob class \"oracle.sql.BLOB\"\nbut when accessing Blobs via a WebLogic DataSource, this needs to be\n\"weblogic.jdbc.vendor.oracle.OracleThinBlob\".\n\nTo work around this we just extended OracleRDBMSAdapter to create an\nOracleWebLogicRDBMSAdapter which overrode the Constructor and set\nthe above class as the classname in the Class.forName() method.\n\nA slightly better solution would be to allow the blob class to be fed in as a\nparameter in Domain.xml. This would require setParameters() to be overriden in\nOracleRDBMSAdapter. The default class could be set in the constructor and the\ncall to Class.forName could be delayed until the setParameters() call. If no\nsuitable \"blobClass\" parameter was set, it would default to the current code.", "attachment_id": null}, {"count": 1, "tags": [], "creator": "king@asert.com.au", "is_private": false, "id": 78441, "creation_time": "2005-08-12T10:15:58Z", "time": "2005-08-12T10:15:58Z", "bug_id": 36137, "text": "This appears to be an alternative solution to bug #30445 but that seems to have\nbeen closed but never fixed. The suggestions below have the added advantage of\nnot requiring weblogic.jar to compile.", "attachment_id": null}]