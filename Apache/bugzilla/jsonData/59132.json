[{"count": 0, "tags": [], "bug_id": 59132, "attachment_id": 33634, "id": 189172, "time": "2016-03-06T13:21:38Z", "creator": "sunnylau175@gmail.com", "creation_time": "2016-03-06T13:21:38Z", "is_private": false, "text": "Created attachment 33634\nthe excel file of my example\n\nI have found an issue about evaluation of COUNTBLANK() via POI. In excel, when I assign a blank string \"\" to a cell and use COUNTBLANK() to count, it would count a blank string cell as a blank cell.\n\nHowever, when I use POI to evaluate the same cell which contain formula COUNTBLANK(), the result of evaluation is that the blank string\u3000\"\" cell is not counted.\n\nFor example:\n\n[Column A]                       [Column B]\n=IF(ISBLANK(B1),\"\",B1)           Peter\n=IF(ISBLANK(B2),\"\",B2)           Tom\n=IF(ISBLANK(B3),\"\",B3)           Alice\n=IF(ISBLANK(B4),\"\",B4)           Zoe\n=COUNTBLANK(A1:A4)\n\n\nWhen I delete \"Alice\" and use\nFormulaEvaluator evaluator = workbook.getCreationHelper().createFormulaEvaluator();\nevaluator.evaluateFormulaCell(cell);\n\nto evaluate cell A5, the result is 0. But when I use excel to do the same thing, the result is 1.\n\nI think it is a bug because POI should not act as different behavior than excel."}, {"count": 1, "tags": [], "creator": "dominik.stadler@gmx.at", "attachment_id": null, "is_private": false, "id": 189385, "time": "2016-03-11T22:29:23Z", "bug_id": 59132, "creation_time": "2016-03-11T22:29:23Z", "text": "Can you provide a standalone unit-test for this? This would make it much easier to investigate..."}, {"count": 2, "tags": [], "bug_id": 59132, "attachment_id": 33659, "is_private": false, "id": 189404, "time": "2016-03-12T15:30:39Z", "creator": "sunnylau175@gmail.com", "creation_time": "2016-03-12T15:30:39Z", "text": "Created attachment 33659\nexcel file for testing code\n\nexcel file for testing code"}, {"count": 3, "tags": [], "bug_id": 59132, "attachment_id": null, "text": "I have written a test code for the issue:\n\nimport java.io.File;\nimport java.io.FileInputStream;\nimport java.io.FileOutputStream;\nimport java.io.IOException;\n\nimport org.apache.poi.EncryptedDocumentException;\nimport org.apache.poi.openxml4j.exceptions.InvalidFormatException;\nimport org.apache.poi.ss.usermodel.Cell;\nimport org.apache.poi.ss.usermodel.FormulaEvaluator;\nimport org.apache.poi.ss.usermodel.Row;\nimport org.apache.poi.ss.usermodel.Sheet;\nimport org.apache.poi.ss.usermodel.Workbook;\nimport org.apache.poi.ss.usermodel.WorkbookFactory;\nimport org.apache.poi.ss.util.CellReference;\n\npublic class TestCountBlank {\n\n\tpublic static void main(String[] args) {\n\t\t\n\n\t\ttry {\n\t\t\tFile excelFile = new File(\"D:\\\\test blank.xlsx\");\n\t\t\t\n\t\t\tFileInputStream input;\n\t\t\t\n\t\t\tinput = new FileInputStream(excelFile);\n\t\t\tWorkbook workbook = WorkbookFactory.create(input);\n\t\t\tSheet worksheet = workbook.getSheet(\"sheet1\");\n\t\t\t\n\t\t\tCellReference ref = new CellReference(\"B3\");\n\t\t\t\n\t\t\tRow row = worksheet.getRow(ref.getRow());\n\t\t\tCell cell = row.getCell(ref.getCol());\n\t\t\t\n\t\t\tcell.setCellValue((String)null);\n\t\t\t\t\t\t\n\t\t\tFormulaEvaluator evaluator = workbook.getCreationHelper().createFormulaEvaluator();\n\t\t\t\n\t\t\tCellReference ref2 = new CellReference(\"A5\");\n\t\t\t\n\t\t\tRow row2 = worksheet.getRow(ref2.getRow());\n\t\t\tCell cell2 = row2.getCell(ref2.getCol());\n\t\t\t\n\t\t\tevaluator.evaluateFormulaCell(cell2);\n\t\t\t\t\n\t\t\tFileOutputStream output = new FileOutputStream(excelFile);\n\t\t\t\t\t\t\n\t\t\tworkbook.write(output);\n\t\t\toutput.flush();\n\t\t\toutput.close();\n\t\t\tworkbook.close();\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t} catch (EncryptedDocumentException | InvalidFormatException | IOException e) {\n\t\t\t\n\t\t\te.printStackTrace();\n\t\t}\n\t\t\n\t\t\n\n\t}\n\n}\n\nThe code automatically delete \"Alice\" at cell B3 and evaluate COUNTBLANK() formula at cell A5, the result of COUNTBLANK() is still zero.", "id": 189405, "time": "2016-03-12T15:34:31Z", "creator": "sunnylau175@gmail.com", "creation_time": "2016-03-12T15:34:31Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 59132, "attachment_id": null, "text": "Sorry, the code should be revised as follows:\n\nimport java.io.File;\nimport java.io.FileInputStream;\nimport java.io.FileOutputStream;\nimport java.io.IOException;\n\nimport org.apache.poi.EncryptedDocumentException;\nimport org.apache.poi.openxml4j.exceptions.InvalidFormatException;\nimport org.apache.poi.ss.usermodel.Cell;\nimport org.apache.poi.ss.usermodel.FormulaEvaluator;\nimport org.apache.poi.ss.usermodel.Row;\nimport org.apache.poi.ss.usermodel.Sheet;\nimport org.apache.poi.ss.usermodel.Workbook;\nimport org.apache.poi.ss.usermodel.WorkbookFactory;\nimport org.apache.poi.ss.util.CellReference;\n\npublic class TestCountBlank {\n\n\tpublic static void main(String[] args) {\n\t\t\n\n\t\ttry {\n\t\t\tFile excelFile = new File(\"D:\\\\test blank.xlsx\");\n\t\t\t\n\t\t\tFileInputStream input;\n\t\t\t\n\t\t\tinput = new FileInputStream(excelFile);\n\t\t\tWorkbook workbook = WorkbookFactory.create(input);\n\t\t\tSheet worksheet = workbook.getSheet(\"sheet1\");\n\t\t\t\n\t\t\tCellReference ref = new CellReference(\"B3\");\n\t\t\t\n\t\t\tRow row = worksheet.getRow(ref.getRow());\n\t\t\tCell cell = row.getCell(ref.getCol());\n\t\t\t\n\t\t\tcell.setCellValue((String)null);\n\t\t\t\t\t\t\n\t\t\tFormulaEvaluator evaluator = workbook.getCreationHelper().createFormulaEvaluator();\n\t\t\t\n\t\t\tCellReference ref2 = new CellReference(\"A3\");\n\t\t\t\n\t\t\tRow row2 = worksheet.getRow(ref2.getRow());\n\t\t\tCell cell2 = row2.getCell(ref2.getCol());\n\t\t\t\n\t\t\tevaluator.evaluateFormulaCell(cell2);\n\t\t\t\n\t\t\tCellReference ref3 = new CellReference(\"A5\");\n\t\t\t\n\t\t\tRow row3 = worksheet.getRow(ref3.getRow());\n\t\t\tCell cell3 = row3.getCell(ref3.getCol());\n\t\t\t\n\t\t\tevaluator.evaluateFormulaCell(cell3);\n\t\t\t\t\n\t\t\tFileOutputStream output = new FileOutputStream(excelFile);\n\t\t\t\t\t\t\n\t\t\tworkbook.write(output);\n\t\t\toutput.flush();\n\t\t\toutput.close();\n\t\t\tworkbook.close();\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t} catch (EncryptedDocumentException | InvalidFormatException | IOException e) {\n\t\t\t\n\t\t\te.printStackTrace();\n\t\t}\n\t\t\n\t\t\n\n\t}\n\n}\n\nThe code deletes \"Alice\" at cell B3 and evaluate formula at A3 and \nCOUNTBLANK() formula at cell A5, the result of COUNTBLANK() is still zero.", "id": 189492, "time": "2016-03-15T14:36:20Z", "creator": "sunnylau175@gmail.com", "creation_time": "2016-03-15T14:36:20Z", "is_private": false}, {"count": 5, "tags": [], "creator": "dominik.stadler@gmx.at", "attachment_id": null, "is_private": false, "id": 189782, "time": "2016-03-29T14:56:30Z", "bug_id": 59132, "creation_time": "2016-03-29T14:56:30Z", "text": "This should be fixed via r1737009, we now count empty string cells as blank to be in conformance with the description of COUNTBLANK at https://support.office.com/en-us/article/COUNTBLANK-function-6a92d772-675c-4bee-b346-24af6bd3ac22 and how Excel seems to have it implemented."}]