[{"count": 0, "tags": [], "creator": "make@gmx.li", "attachment_id": null, "text": "Below is a fragment of our jmeter test tree used for functional testing of a \nwebapp:\n\nthread group\n |\n +- Runtime controller\n     |\n     +- Run once controller\n         |\n         +- Http request sampler\n         |\n         +- While Controller\n         |\n         .. more stuff here\n\n\nThe controllers below the RunOnce controller take some time to execute, around \n60 seconds. The while controller basically polls a status page to check the \nprogress of some work unit triggered earlier in the test.\n\nThere are some special cases in which such progress may not happen and the test \nshould fail. The easiest way for us to deceide if a test should fail would be a \ntimeout. If that timeout is reached and the status page still does not contain \na certain message, the test should fail.\n\nTherefore I set the timeout in the Runtime controller, 120 seconds for example. \nThe RunOnce controller was intended to ensure that the subtree below it is \nactually executed only once which is very important for a test scenario. \n\nWhile checking the result tree I can see one of two behaviours. With a small \ntimeout, the runtime controller will stop executing the subtree after the given \nruntime is over. That's fine. If the timeout is set to a larger value jmeter \nbehaves different. After the first iteration, if there is runtime left, jmeter \nwill just re-execute the tree below the runonce controller. \n\nDid I mis-understood the documentation of the run-once controller or is this a \nbug? \n\nBeside that - is there a better way to set a maximum execution time on a test \ntree fragment?\n\n(I'm using the nightly build 20050118)", "id": 70927, "time": "2005-02-14T14:28:21Z", "bug_id": 33559, "creation_time": "2005-02-14T14:28:21Z", "is_private": false}, {"attachment_id": null, "tags": [], "creator": "sebb@apache.org", "is_private": false, "count": 1, "id": 72276, "time": "2005-03-12T03:49:10Z", "bug_id": 33559, "creation_time": "2005-03-12T03:49:10Z", "text": "Can you perhaps swap the Run Once and the Runtime Controllers around?"}, {"count": 2, "tags": [], "text": "Did some tests, and found various problems:\n\n- OnceOnly did not set isdone, so could be run up again\n- RunTime did not reset start time for later calls, and would cause stack\noverflow if its children had all finished.\n\nFixes applied to 2.0 branch", "is_private": false, "id": 72305, "creation_time": "2005-03-13T20:13:16Z", "time": "2005-03-13T20:13:16Z", "creator": "sebb@apache.org", "bug_id": 33559, "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 33559, "text": "Unfortunately the fix to the Once Only controller changed its behaviour in other\nsituations (*), so it has had to be backed out.\n\nThis means that the Once Only Controller does not current work properly when\npresent as the child of the RunTime Controller, so re-opening the call.\n\nHowever, the Run-Time Controller does seem to work correctly as the child of the\nOnce Only Controller, so that may help in your testing. However, note that the\nRunTime Controller will continue to run until the time limit has been reached,\nso it acts as the minimum run-time, rather than the maximum.\n\n(*) The OnceOnly Controller can run more than once in a test, if it is the child\nof a loop controller that is itself run more than once - this is documented in\nthe User Manual", "id": 72316, "time": "2005-03-14T00:31:17Z", "creator": "sebb@apache.org", "creation_time": "2005-03-14T00:31:17Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 33559, "is_private": false, "id": 72538, "attachment_id": null, "creator": "sebb@apache.org", "creation_time": "2005-03-17T01:37:38Z", "time": "2005-03-17T01:37:38Z", "text": "Fix checked into branch 2.0 so RunTime now behaves like Loop Controller - i.e.\nOnceOnly children are run once per loop.\n\nAlso fixed calculation of run-time for subsequent loops.\n\n[Leaving call open for time being]"}]