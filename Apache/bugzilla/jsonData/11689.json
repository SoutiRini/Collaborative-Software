[{"count": 0, "tags": [], "creator": "vinny5@rambler.ru", "attachment_id": null, "id": 21019, "time": "2002-08-14T11:15:23Z", "bug_id": 11689, "creation_time": "2002-08-14T11:15:23Z", "is_private": false, "text": "Hello!\n\nI'm a user of Regexp-1.2. When I work on magazine article about using\nRegexp-1.2 in Java projects,\nI found bug. When I specified such pattern:\n^[^\\x5B\\x5D]+$\n\nor the same pattern:\n^[^\\[\\]]+$\n\nstrings, which contains symbol '\\' are not match in Regexp-1.2. This is\nincorrect behaviour.\nI see Regexp-1.2 sources and found bug:\n\n//in RECompiler.java\nclass RERange\n{\n...\n    void remove(int min, int max)\n    {\n        // Loop through ranges\n        for (int i = 0; i < num; i++)\n        {\n            // minRange[i]-maxRange[i] is subsumed by min-max\n            if (minRange[i] >= min && maxRange[i] <= max)\n            {\n                delete(i);\n                i--;\n                return;\n            }\n\n            // min-max is subsumed by minRange[i]-maxRange[i]\n            else if (min >= minRange[i] && max <= maxRange[i])\n            {\n                int minr = minRange[i];\n                int maxr = maxRange[i];\n                delete(i);\n                if (minr <= min - 1) //!!! corrected by me - bug was here,\nsource condition was: if (minr < min - 1)\n                {\n                    merge(minr, min - 1);\n                }\n                if (max + 1 <= maxr) //!!! corrected by me - bug was here,\nsource condition was: if (max + 1 < maxr)\n                {\n                    merge(max + 1, maxr);\n                }\n                return;\n            }\n        ...\n        }\n    ...\n    }\n...\n}\n\nBug occurs because conditions was incorrect. When RECompiler process\nspecified (see my example) character class,\nbefore processing of x5D (93 in decimal) symbol, the range is:\n0-90, 92-65535. So remove(93, 93) invoked, condition (92 < 93 - 1) is false\nand merge(92, 92) was not invoked, so\nafter processing entire character class, the range is: 0-90, 94-65535.\nSymbol '\\' has decimal code 92, it is not in\nrange, so strings, which contains '\\' symbol are not match pattern.\nIf change conditions to \"if (minr <= min - 1)\" and \"if (max + 1 <= maxr)\"\nall is OK (for my example, such range\ncreated 0-90, 92-92, 94-65535).\n\nTest application:\n\npublic class Test\n{\n    public static void main(String[] argv) throws Exception\n    {\n        RE re = new RE(\"^[^\\\\x5B\\\\x5D]+$\");\n        if (re.match(\"sdfsd\\\\fsdf\"))\n        {\n            System.out.println(\"Matched\");\n        }\n        else\n        {\n            System.out.println(\"Not matched\");\n        }\n        System.out.println(\"Finished!\");\n    }\n}\n\nIf you have have some questions about this bug, don't hesitate to contact\nme. I'm glad to help you.\n\nBest regards,\nIgor Vinnikov"}, {"count": 1, "tags": [], "creator": "jon@latchkey.com", "text": "\n\n*** This bug has been marked as a duplicate of 7288 ***", "id": 27826, "time": "2002-12-13T18:28:59Z", "bug_id": 11689, "creation_time": "2002-12-13T18:28:59Z", "is_private": false, "attachment_id": null}, {"count": 2, "attachment_id": null, "bug_id": 11689, "is_private": false, "id": 27828, "time": "2002-12-13T18:29:17Z", "creator": "jon@latchkey.com", "creation_time": "2002-12-13T18:29:17Z", "tags": [], "text": "closed."}]