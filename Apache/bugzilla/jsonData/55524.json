[{"count": 0, "tags": [], "creator": "confilem@googlemail.com", "text": "Created attachment 30800\nthread dump of the deadlock\n\nI use Tomcat with an application that uses Websockets. The websockets are handled by the Atmosphere framework: https://github.com/Atmosphere/atmosphere\n\nA deadlock occurs during write operations to the websocket.\n\nI have attached a thread dump of the deadlock. \n\nThis issue is also duscussed here: \nhttps://github.com/Atmosphere/atmosphere/issues/1264\n\n\nHere are the deadlocked threads: \n\n\nFound one Java-level deadlock:\n=============================\n\"Atmosphere-Shared-AsyncOp-267\":\n  waiting to lock monitor 0x00007efebc0015f8 (object 0x00000005ef4c6988, a org.apache.catalina.websocket.WsOutbound),\n  which is held by \"Atmosphere-Scheduler-2\"\n\"Atmosphere-Scheduler-2\":\n  waiting to lock monitor 0x00007efe8c290ac0 (object 0x00000005ef4b77f8, a org.atmosphere.cpr.AtmosphereResourceImpl),\n  which is held by \"Atmosphere-Shared-AsyncOp-267\"\n\nJava stack information for the threads listed above:\n===================================================\n\"Atmosphere-Shared-AsyncOp-267\":\n\tat org.apache.catalina.websocket.WsOutbound.writeTextMessage(WsOutbound.java:165)\n\t- waiting to lock <0x00000005ef4c6988> (a org.apache.catalina.websocket.WsOutbound)\n\tat org.atmosphere.container.version.TomcatWebSocket.write(TomcatWebSocket.java:49)\n\tat org.atmosphere.websocket.WebSocket.write(WebSocket.java:199)\n\tat org.atmosphere.websocket.WebSocket.write(WebSocket.java:168)\n\tat org.atmosphere.websocket.WebSocket.write(WebSocket.java:40)\n\tat org.atmosphere.cpr.AtmosphereResponse$2.write(AtmosphereResponse.java:574)\n\tat org.atmosphere.handler.AbstractReflectorAtmosphereHandler.onStateChange(AbstractReflectorAtmosphereHandler.java:169)\n\tat org.atmosphere.cpr.DefaultBroadcaster.invokeOnStateChange(DefaultBroadcaster.java:1027)\n\tat org.atmosphere.cpr.DefaultBroadcaster.prepareInvokeOnStateChange(DefaultBroadcaster.java:1047)\n\tat org.atmosphere.cpr.DefaultBroadcaster.executeAsyncWrite(DefaultBroadcaster.java:921)\n\tat org.atmosphere.cpr.DefaultBroadcaster$3.run(DefaultBroadcaster.java:580)\n\t- locked <0x00000005ef4b77f8> (a org.atmosphere.cpr.AtmosphereResourceImpl)\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)\n\tat java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334)\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:166)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n\tat java.lang.Thread.run(Thread.java:724)\n\"Atmosphere-Scheduler-2\":\n\tat org.atmosphere.cpr.AsynchronousProcessor.completeLifecycle(AsynchronousProcessor.java:476)\n\t- waiting to lock <0x00000005ef4b77f8> (a org.atmosphere.cpr.AtmosphereResourceImpl)\n\tat org.atmosphere.cpr.AsynchronousProcessor.timedout(AsynchronousProcessor.java:437)\n\tat org.atmosphere.cpr.AsynchronousProcessor$AsynchronousProcessorHook.timedOut(AsynchronousProcessor.java:633)\n\tat org.atmosphere.websocket.DefaultWebSocketProcessor.close(DefaultWebSocketProcessor.java:483)\n\tat org.atmosphere.container.TomcatWebSocketHandler.onClose(TomcatWebSocketHandler.java:80)\n\tat org.apache.catalina.websocket.StreamInbound.doOnClose(StreamInbound.java:222)\n\tat org.apache.catalina.websocket.WsOutbound.doWriteBytes(WsOutbound.java:423)\n\tat org.apache.catalina.websocket.WsOutbound.doWriteText(WsOutbound.java:442)\n\tat org.apache.catalina.websocket.WsOutbound.writeTextMessage(WsOutbound.java:174)\n\t- locked <0x00000005ef4c6988> (a org.apache.catalina.websocket.WsOutbound)\n\tat org.atmosphere.container.version.TomcatWebSocket.write(TomcatWebSocket.java:49)\n\tat org.atmosphere.websocket.WebSocket.write(WebSocket.java:199)\n\tat org.atmosphere.websocket.WebSocket.write(WebSocket.java:168)\n\tat org.atmosphere.websocket.WebSocket.write(WebSocket.java:40)\n\tat org.atmosphere.cpr.AtmosphereResponse$2.write(AtmosphereResponse.java:574)\n\tat org.atmosphere.cpr.AtmosphereResponse.write(AtmosphereResponse.java:992)\n\tat org.atmosphere.interceptor.HeartbeatInterceptor$1$1.call(HeartbeatInterceptor.java:104)\n\tat java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334)\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:166)\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:178)\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:292)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n\tat java.lang.Thread.run(Thread.java:724)", "id": 169909, "time": "2013-09-04T23:34:13Z", "bug_id": 55524, "creation_time": "2013-09-04T23:34:13Z", "is_private": false, "attachment_id": 30800}, {"count": 1, "tags": [], "bug_id": 55524, "attachment_id": null, "text": "I've only taken a quick look at this. So far, it appears that one lock is in Tomcat and one in Atmosphere so it is possible that changes will be required in both to fully fix this.\n\nI'll see what I can to do narrow / remove the sync in Tomcat. I suspect narrowing is the more likely outcome.", "id": 169919, "time": "2013-09-05T10:47:47Z", "creator": "markt@apache.org", "creation_time": "2013-09-05T10:47:47Z", "is_private": false}, {"count": 2, "tags": [], "text": "I believe I have fixed this in 7.0.x trunk and it will be included in 7.0.43 onwards.\n\nIf you are able to build Tomcat from source and confirm the fix that would be helpful.\n\nThere shouldn't be any need for changes in Atmosphere to fix this although a review of the relevant syncs in that code base as well wouldn't hurt.", "attachment_id": null, "bug_id": 55524, "id": 169921, "time": "2013-09-05T11:28:04Z", "creator": "markt@apache.org", "creation_time": "2013-09-05T11:28:04Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 55524, "attachment_id": null, "id": 169922, "time": "2013-09-05T11:49:04Z", "creator": "confilem@googlemail.com", "creation_time": "2013-09-05T11:49:04Z", "is_private": false, "text": "Is this bug fixed in Tomcat8 as well?"}, {"count": 4, "tags": [], "text": "The bug was in Tomcat's proprietary WebSocket implementation. That implementation does not exist in Tomcat 8. It has been replaced by the JSR-356 implementation (which will also be in Tomcat 7 from the next release).", "is_private": false, "id": 169923, "creator": "markt@apache.org", "time": "2013-09-05T11:53:37Z", "bug_id": 55524, "creation_time": "2013-09-05T11:53:37Z", "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 55524, "text": "When will you release tomcat 7.0.43 and tomcat 8?", "id": 169924, "time": "2013-09-05T11:55:35Z", "creator": "confilem@googlemail.com", "creation_time": "2013-09-05T11:55:35Z", "is_private": false, "attachment_id": null}, {"count": 6, "tags": [], "creator": "chris@christopherschultz.net", "attachment_id": null, "id": 169934, "time": "2013-09-05T18:55:02Z", "bug_id": 55524, "creation_time": "2013-09-05T18:55:02Z", "is_private": false, "text": "(In reply to confile from comment #5)\n> When will you release tomcat 7.0.43 and tomcat 8?\n\nWhen they are ready."}, {"count": 7, "tags": [], "creator": "confilem@googlemail.com", "text": "I tried to use the trunc version of Tomcat but this is even worse. I only get this message: \n\n\nSep 06, 2013 3:52:14 AM org.apache.coyote.http11.AbstractHttp11Processor process\nINFO: Error parsing HTTP request header\n Note: further occurrences of HTTP header parsing errors will be logged at DEBUG level.", "id": 169942, "time": "2013-09-06T01:53:19Z", "bug_id": 55524, "creation_time": "2013-09-06T01:53:19Z", "is_private": false, "attachment_id": null}, {"count": 8, "tags": [], "bug_id": 55524, "text": "Error parsing HTTP request header is a different problem so should be in a new bugzilla issue. Further there is insufficient information for any one to even begin to debug the problem you are seeing. You should seek help on the users list in the first instance. If that discussion concludes there is a Tomcat bug then at that point open a new issue and provide all the necessary information for the issue to be reproduced.", "id": 169949, "attachment_id": null, "creator": "markt@apache.org", "creation_time": "2013-09-06T15:32:32Z", "time": "2013-09-06T15:32:32Z", "is_private": false}, {"count": 9, "tags": [], "text": "Looking at the changelog http://tomcat.apache.org/tomcat-7.0-doc/changelog.html I see that \n\n\"Avoid a possible deadlock when one thread is shutting down a connection while another thread is trying to write to it. (markt)\"\n\nwas included in 7.0.53, but not in 7.0.43\n\nAm I right?", "attachment_id": null, "bug_id": 55524, "id": 177908, "time": "2014-09-16T14:18:58Z", "creator": "dmitry.treskunov@gmail.com", "creation_time": "2014-09-16T14:18:58Z", "is_private": false}, {"count": 10, "attachment_id": null, "creator": "violetagg@apache.org", "is_private": false, "id": 177948, "time": "2014-09-18T03:09:51Z", "bug_id": 55524, "creation_time": "2014-09-18T03:09:51Z", "tags": [], "text": "(In reply to Dmitry Treskunov from comment #9)\n> Looking at the changelog\n> http://tomcat.apache.org/tomcat-7.0-doc/changelog.html I see that \n> \n> \"Avoid a possible deadlock when one thread is shutting down a connection\n> while another thread is trying to write to it. (markt)\"\n> \n> was included in 7.0.53, but not in 7.0.43\n> \n> Am I right?\n\nNo\n\nThis fix was included in 7.0.43. See [1]\n\nRegards,\nVioleta\n\n[1] 7.0.43 changelog - 55524: Refactor to avoid a possible deadlock when handling an IOException during output when using Tomcat' proprietary (and deprecated) WebSocket API. (markt)"}]