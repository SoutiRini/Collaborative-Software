[{"count": 0, "tags": [], "bug_id": 57823, "text": "I have a startup in /etc/rc.d/init.d script that uses the daemon  eg:\n\ndaemon --user $tomcatuser --pidfile=$pidfile $command start\n\nThe server was hanging when starting up. I traced it org.apache.catalina.startup.ContextConfig.java \n\n..\nprotected void processAnnotationsUrl(URL url, WebXml fragment,\n            boolean handlesTypesOnly) {\n       \n        if (url == null) {\n            // Nothing to do.\n            return;\n        } else if (\"jar\".equals(url.getProtocol())) {\n            System.out.println(url.toExternalForm());\n            processAnnotationsJar(url, fragment, handlesTypesOnly);\n        } else if (\"file\".equals(url.getProtocol())) {\n            try {\n                System.out.println(url.toExternalForm());\n                processAnnotationsFile(\n                       new File(url.toURI()), fragment, handlesTypesOnly);\n            } catch (URISyntaxException e) {\n                log.error(sm.getString(\"contextConfig.fileUrl\", url), e);\n            }\n        } else {\n            log.error(sm.getString(\"contextConfig.unknownUrlProtocol\",\n                    url.getProtocol(), url));\n        }\n\n    }\n\nWhere it would hang trying to process this line file:/\n\n\nfile:/opt/apache-tomcat/apache-tomcat-8.0.21/lib/\njar:file:/opt/apache-tomcat/apache-tomcat-8.0.21/lib/mysql-connector-java-5.1.34.jar!/\nfile:/\n\n\nThe file:/ seems to be from a :/ (colon) on the class path, and the combination of running it from /etc/rc.d/init.d makes it not work.\n\nNot working\n-classpath :/opt/apache-tomcat/apache-tomcat-8.0.21/bin/bootstrap.jar:/opt/apache-tomcat/apache-tomcat-8.0.21/bin/tomcat-juli.jar\n\nWorking\n-classpath /opt/apache-tomcat/apache-tomcat-8.0.21/bin/bootstrap.jar:/opt/apache-tomcat/apache-tomcat-8.0.21/bin/tomcat-juli.jar\n\n\nI guess we need to check for file:/ some where in the processAnnotationsUrl procesing so we do not scan the whole server.\n\nCheers Greg", "id": 182432, "time": "2015-04-16T16:14:46Z", "creator": "gregh3269@gmail.com", "creation_time": "2015-04-16T16:14:46Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "text": "An empty class path element is treated by the JVM as the current working directory.\n\nThe class path is normally only scanned when the JarScanner is explicitly configured with scanBootstrapClassPath=\"true\".\n\nI suspect that starting via the init.d script sets the current working directory to '/' which is why the change in behavior is observed.\n\nI'm against adding code to skip \"file:/\" in the JarScanner since that is the start of a slippery slope where we get all sorts of suggestions for what should be skipped. In essence, this is a configuration error and needs to be fixed at source - where the class path is set. Tomcat has code that optionally adds a separator when appending entries to the class path depending on if it is currently set or not. This init.d script should have the same logic.\n\nI looked at adding some sort of warning if scanning a class path location was too long but I'm not convinced that this problem affects enough users to justify adding the code (this is the first report I can recall in my 10+ years working on Tomcat). The general \"take 3 thread dumps 10s apart and compare\" advice appears (to me) to be good enough to handle this case.\n\nGiven the above, I'm resolving this as WONTFIX.", "id": 182574, "time": "2015-04-22T18:43:41Z", "bug_id": 57823, "creation_time": "2015-04-22T18:43:41Z", "is_private": false}, {"count": 2, "tags": [], "creator": "gregh3269@gmail.com", "attachment_id": null, "text": "This was the entry in the /etc/rc.d/init.d script that I have used for many years, 5,6,7.  This only happens in 8.\n\nCLASSPATH=\"$CLASSPATH\":\"$CATALINA_HOME\"/bin/bootstrap.jar\n\nie the CLASSPATH value in /etc/profile.d had been commented out.\n\nStill, I think it should have some sanity check that it does not scan the root folder.", "id": 182589, "time": "2015-04-23T06:58:09Z", "bug_id": 57823, "creation_time": "2015-04-23T06:58:09Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 57823, "attachment_id": null, "id": 182667, "time": "2015-04-27T18:47:48Z", "creator": "chris@christopherschultz.net", "creation_time": "2015-04-27T18:47:48Z", "is_private": false, "text": "(In reply to gregh from comment #2)\n> This was the entry in the /etc/rc.d/init.d script that I have used for many\n> years, 5,6,7.  This only happens in 8.\n> \n> CLASSPATH=\"$CLASSPATH\":\"$CATALINA_HOME\"/bin/bootstrap.jar\n> \n> ie the CLASSPATH value in /etc/profile.d had been commented out.\n> \n> Still, I think it should have some sanity check that it does not scan the\n> root folder.\n\nYour script can easily check to see if $CLASSPATH is empty and then ignore it. Tomcat doesn't do any scanning of the CLASSPATH itself (meaning, no textual scanning of the actual string representing the system classpath) and so there's not really any appropriate place to do this checking, other than adding some new sanity check for this.\n\nI agree with Mark's reticence to add a check for this; there are an infinite number of insane CLASSPATH entries, and we can't check for all of them."}, {"count": 4, "tags": [], "creator": "gregh3269@gmail.com", "attachment_id": null, "text": "Agreed, there would be far too many permutations to check for, but not knowing that the colon causes it to hang is the key.  Without debugging tomcat I was stuck as it would not start and nothing in the logs.  Maybe add something to the upgrade guide?\n\nCheers Greg", "id": 182682, "time": "2015-04-28T08:36:25Z", "bug_id": 57823, "creation_time": "2015-04-28T08:36:25Z", "is_private": false}, {"count": 5, "tags": [], "creator": "knst.kolinko@gmail.com", "attachment_id": null, "text": "*** Bug 58766 has been marked as a duplicate of this bug. ***", "id": 187144, "time": "2015-12-27T14:20:15Z", "bug_id": 57823, "creation_time": "2015-12-27T14:20:15Z", "is_private": false}]