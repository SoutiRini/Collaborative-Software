[{"count": 0, "attachment_id": null, "bug_id": 11446, "is_private": false, "id": 20633, "time": "2002-08-03T17:46:43Z", "creator": "apache-bugs@thebap.org", "creation_time": "2002-08-03T17:46:43Z", "tags": [], "text": "Rolling, DailyRolling & FileAppender do not append layout footer to each file\n\nThe RollingFileAppender, DailyRollingFileAppender and FileAppender only append \nthe footer to the last file, i.e. the file that is open when the appender is \nclosed. This is due to an interaction between the FileAppender and the \nWriterAppender.\n\nTypicaly FileAppender is only used to append to one file, therefore the \nproblem does not become apparent, however it is posible to call setFile() on \nthe FileAppender which would demonstrate the issue.\n\nThe RollingFileAppender & DailyRollingFileAppender commonly create multiple \nlog files. When these appenders open a new file using FileAppender.setFile() \nmethod the Header is written into the file. When these appenders roll to the \nnext file they call FileAppender.closeFile().\n\nFileAppender.closeFile() does not write the Footer! Therefore each log file \nrolled by the appender does not have a footer written to it.\n\nThe Footer is written when the appender is closed, and that is done in the \nWriterAppender.close() method. This is incorrect as the writer can be set \nmultiple times on the WriterAppender and the header and footer should be \nsymetrical for the writer not for the appender.\n\nThe following are the changes I had to make to correct this behaviour in \nlog4net:\n\nIn the WriterAppender the reset() method should write the footer rather than \nthe close() method (close() calls reset() so this does not change the \nbehaviour when closing, but does mean that the footer will be written when a \nreset occurs). This should be done because the setWriter() method calls reset\n() to close the old writer and then calls writeHeader() to write the header \ninto the new writer. To keep things consistant the reset() call should write \nthe footer into the old writer.\n\nIn FileAppender change closeFile() to call writeFooter() and closeWriter() \nrather than this.qw.close()\n\nIn FileAppender change reset() not to call closeFile(), the call to super.reset\n() will close the file by calling closeWriter() so there is no need to call \ncloseFile() explicitly.\n\nPS. I don't know of anyone ever using the footer functionality so this may not \nbe top priority."}, {"count": 1, "tags": [], "creator": "engrean@hotmail.com", "text": "There are people that do use this. I for one use this and I found this bug via\nanother person that uses it.", "id": 44911, "time": "2003-09-30T23:32:32Z", "bug_id": 11446, "creation_time": "2003-09-30T23:32:32Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "creator": "engrean@hotmail.com", "text": "This is not only a problem with multiple files, but also with a single file. It\nseems that no matter what getFooter isn't called. ", "id": 48311, "time": "2003-11-29T20:13:02Z", "bug_id": 11446, "creation_time": "2003-11-29T20:13:02Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 11446, "attachment_id": null, "is_private": false, "id": 58334, "time": "2004-05-28T17:21:02Z", "creator": "ceki@apache.org", "creation_time": "2004-05-28T17:21:02Z", "text": "\nI started working on this bug and changes have been committed to CVS head.\n\nIn the new code, each time a file is opened the header is written and each time \na file is closed or rolled over, the footer gets written. Thus it is possible \nfor a file to contain multiple header/fotter pairs.\n\nIs there a way to prevent this?"}, {"count": 4, "tags": [], "bug_id": 11446, "attachment_id": null, "is_private": false, "id": 65345, "time": "2004-10-20T08:46:42Z", "creator": "seehamster@gmx.de", "creation_time": "2004-10-20T08:46:42Z", "text": "Hi,\nI have made the above mentioned changes and added a check inside setFile() in a\nderived class of DailyRollingFileAppender (Version 1.2.6), if the current file\nalready exists. The header will only be written if the file does not exist\nalready. This behaviour could be made configurable form outside. The footer is\nonly written if a role event has happend.\n...\nreset();\nfinal boolean fileExists = new File(fileName).exists();\n...\nthis.bufferSize = bufferSize;\nif (!fileExists) {\n    writeHeader();\n}\nWhat do you think about this?"}, {"count": 5, "tags": [], "creator": "yoavs@computer.org", "text": "\n\n*** This bug has been marked as a duplicate of 7948 ***", "id": 68391, "time": "2004-12-13T17:43:29Z", "bug_id": 11446, "creation_time": "2004-12-13T17:43:29Z", "is_private": false, "attachment_id": null}]