[{"count": 0, "tags": [], "creator": "nanook@eskimo.com", "is_private": false, "text": "Created attachment 33769\nServer Status\n\nThis was broken between version 2.4.18 and 2.4.20, version 2.4.20 wasn't an option in the version pull-down menu.  The server-status no longer shows the URL or domain name of the page being retrieved.", "id": 190297, "time": "2016-04-15T17:19:34Z", "bug_id": 59333, "creation_time": "2016-04-15T17:19:34Z", "attachment_id": 33769}, {"count": 1, "tags": [], "bug_id": 59333, "is_private": false, "id": 190298, "creation_time": "2016-04-15T17:41:21Z", "time": "2016-04-15T17:41:21Z", "creator": "covener@gmail.com", "text": "Was reported earlier and is proposed for backport\n\nhttp://home.apache.org/~ylavic/patches/httpd-2.4.x-scoreboard_preserve-v2.patch", "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 59333, "is_private": false, "id": 190500, "creation_time": "2016-04-23T16:46:10Z", "time": "2016-04-23T16:46:10Z", "creator": "nick@linicks.net", "text": "I don't think this is fixed - not properly at least.\n\nI have a few 'hidden' pages that I use to monitor a few of my server scripts, and after applying this patch to get server-status back, I see wrong IP's accessing these pages when it is impossible to do so.", "attachment_id": null}, {"count": 3, "tags": [], "creator": "ylavic.dev@gmail.com", "attachment_id": null, "text": "(In reply to Nick Warne from comment #2)\n> I have a few 'hidden' pages that I use to monitor a few of my server\n> scripts, and after applying this patch to get server-status back, I see\n> wrong IP's accessing these pages when it is impossible to do so.\n\nAnother change from 2.4.20 is that the client (IP) reported by mod_status may now be the one of the user-agent (origin) as determined by mod_remoteip configuration.\n\nDo you have mod_remoteip configured and the \"hidden\" pages accessed via a proxy?", "id": 190501, "time": "2016-04-23T17:26:13Z", "bug_id": 59333, "creation_time": "2016-04-23T17:26:13Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 59333, "attachment_id": null, "is_private": false, "id": 190503, "time": "2016-04-24T08:16:12Z", "creator": "nick@linicks.net", "creation_time": "2016-04-24T08:16:12Z", "text": "Basically no and no.\n\nThe 'hidden' pages are only known by me on my local network, so it is impossible for anybody to know they exist, let alone guess what the names are - yet server-status shows remote IP's GETting them (which is why I think it is broken ).  Somehow the IP list is getting confused.\n\nAlso I just noticed it also reports my local IP address GETting my robots.txt file this morning - which I haven't.\n\nNick"}, {"count": 5, "tags": [], "bug_id": 59333, "attachment_id": null, "id": 190504, "creation_time": "2016-04-24T09:42:55Z", "time": "2016-04-24T09:42:55Z", "creator": "nick@linicks.net", "text": "OK, I doubted my ability to patch properly - so I started again and re-patched a virgin scoreboard.c - all clean.\n\nNow, I just ran ssl labs test - and low and behold server-status shows one of the remote IP's accessing my server-status page (which isn't even called that) and also is tied down to only allow access from my local 192.168.x.x address.\n\nDefinitely something wonky going on.", "is_private": false}, {"count": 6, "tags": [], "creator": "ylavic.dev@gmail.com", "is_private": false, "text": "OK, makes sense now, what you see is not remote IPs accessing *your* /status page (whatever its name/path is), but some bots (scanner or crawler) trying to access the default /server-status or /robots.txt.\nEven if these requests are finally refused by your configuration, they still appear in the scoreboard.\nYou probably should find them in your access log too (as 403 or 404 depending on your configuration).", "id": 190505, "time": "2016-04-24T10:16:33Z", "bug_id": 59333, "creation_time": "2016-04-24T10:16:33Z", "attachment_id": null}, {"count": 7, "tags": [], "creator": "nick@linicks.net", "attachment_id": null, "text": "No you miss what I said - my server-status page is called something totally different - nobody knows except me so how a remote IP can know it is impossible!\n\nAnyway, I done a test.  I created a txt file:  TesT.txt just now and visited it.  Now a few hours later, I checked server status and this appears:\n\n64.41.200.103 http/1.1www.linicks.net:443 GET /TesT.txt HTTP/1.1\n\nSo you see the list gets mangled on what IP GET's what page.", "id": 190506, "time": "2016-04-24T10:28:52Z", "bug_id": 59333, "creation_time": "2016-04-24T10:28:52Z", "is_private": false}, {"count": 8, "tags": [], "creator": "covener@gmail.com", "text": "(In reply to Nick Warne from comment #7)\n> No you miss what I said - my server-status page is called something totally\n> different - nobody knows except me so how a remote IP can know it is\n> impossible!\n> \n> Anyway, I done a test.  I created a txt file:  TesT.txt just now and visited\n> it.  Now a few hours later, I checked server status and this appears:\n> \n> 64.41.200.103 http/1.1www.linicks.net:443 GET /TesT.txt HTTP/1.1\n> \n> So you see the list gets mangled on what IP GET's what page.\n\n\nWhat did it say immediately after the access?\nDo you have mod_http2 loaded?  \nWhat are the \"M\" and \"SS\" fields immediately after and a few hours later?", "id": 190508, "time": "2016-04-24T12:57:59Z", "bug_id": 59333, "creation_time": "2016-04-24T12:57:59Z", "is_private": false, "attachment_id": null}, {"count": 9, "tags": [], "bug_id": 59333, "attachment_id": null, "is_private": false, "id": 190509, "time": "2016-04-24T13:09:40Z", "creator": "nick@linicks.net", "creation_time": "2016-04-24T13:09:40Z", "text": "Well, I can't really answer that sensibly, as each time I look at server-status the IP's seem to jump around to pages they never visited.\n\nBut here is one that GET's my renamed server-status page that only I know:\n\n2-0 1218 0/1/1_ 1.9830340.00.010.01 80.12.36.250 http/1.1 www.linicks.net:443 GET (my status page)\n\nI think (NEVER think!) the page requests are right - just the IP list gets mangled on who got what."}, {"count": 10, "tags": [], "creator": "nick@linicks.net", "attachment_id": null, "text": "Sorry, forgot - no HTTP2 loaded.", "id": 190510, "time": "2016-04-24T13:17:16Z", "bug_id": 59333, "creation_time": "2016-04-24T13:17:16Z", "is_private": false}, {"count": 11, "tags": [], "bug_id": 59333, "attachment_id": null, "is_private": false, "id": 190511, "time": "2016-04-24T13:24:06Z", "creator": "covener@gmail.com", "creation_time": "2016-04-24T13:24:06Z", "text": "(In reply to Nick Warne from comment #9)\n> Well, I can't really answer that sensibly, as each time I look at\n> server-status the IP's seem to jump around to pages they never visited.\n> \n> But here is one that GET's my renamed server-status page that only I know:\n> \n> 2-0 1218 0/1/1_ 1.9830340.00.010.01 80.12.36.250 http/1.1\n> www.linicks.net:443 GET (my status page)\n> \n> I think (NEVER think!) the page requests are right - just the IP list gets\n> mangled on who got what.\n\nYou should see over time:\n\n - an access to your status page with a low value for SS (seconds-since). It'd be interesting to confirm if that the IP is ever correct (initially)\n\n - Over time, the same \"slot\" (n-th entry for a given PID) will continue to show your status page URL, with an increasing SS, until it is reused by a new request.\n\n - If it's reused, it be interesting to see what access_log activity from that IP address actually occurs and see if there's anything unique about it\n\nFor example, knowing whether the IP gets corrupted without SS being reset might be a clue to someone. Or if the URL itself jumped around."}, {"count": 12, "tags": [], "bug_id": 59333, "attachment_id": null, "id": 190512, "creation_time": "2016-04-24T14:10:15Z", "time": "2016-04-24T14:10:15Z", "creator": "nick@linicks.net", "text": "I don't know how I can keep an eye on doing that - it changes all the time.\n\nAnyway, another example - this time using one of my 'hidden' pages (I can easily change it, doesn't do a lot):\n\nserver-status reports:\n\n3-0\t1301\t0/1/1\t_ \t2.63\t957\t0\t0.0\t0.00\t0.00 \t164.132.161.67\thttp/1.1\twww.linicks.net:443\tGET /pte.txt HTTP/1.1\n\n~# grep pte.txt access_log\n\n192.168.1.1 - - [24/Apr/2016:08:55:18 +0100] \"GET /pte.txt HTTP/1.1\" 200 155 \"https://linicks.net/\" \"Dillo/3.1-dev\"\n192.168.1.1 - - [24/Apr/2016:10:14:01 +0100] \"GET /pte.txt HTTP/1.1\" 200 155 \"https://linicks.net/\" \"Dillo/3.1-dev\"\n192.168.1.1 - - [24/Apr/2016:10:14:03 +0100] \"GET /pte.txt HTTP/1.1\" 200 155 \"https://linicks.net/\" \"Dillo/3.1-dev\"\n192.168.1.1 - - [24/Apr/2016:14:21:50 +0100] \"GET /pte.txt HTTP/1.1\" 200 155 \"https://linicks.net/\" \"Dillo/3.1-dev\"\n\nAs you see, 'tis only my local network IP that accessed that page - and server has been restarted several times today, so no way has 164.132.161.67 ever been there - nobody but me knows that page exists!", "is_private": false}, {"count": 13, "tags": [], "creator": "nick@linicks.net", "is_private": false, "text": "And another:\n\n3-0\t1301\t0/3/3\t_ \t3.25\t796\t0\t0.0\t0.02\t0.02 \t210.163.39.78\thttp/1.1\twww.linicks.net:443\tGET /TesT.txt HTTP/1.1\n\n192.168.1.1 - - [24/Apr/2016:12:19:51 +0100] \"GET /TesT.txt HTTP/1.1\" 200 5 \"https://linicks.net/\" \"Dillo/3.1-dev\"\n192.168.1.1 - - [24/Apr/2016:12:19:53 +0100] \"GET /TesT.txt HTTP/1.1\" 200 5 \"https://linicks.net/\" \"Dillo/3.1-dev\"\n192.168.1.1 - - [24/Apr/2016:12:31:08 +0100] \"GET /TesT.txt HTTP/1.1\" 200 5 \"https://linicks.net/\" \"Dillo/3.1-dev\"\n192.168.1.1 - - [24/Apr/2016:13:06:03 +0100] \"GET /TesT.txt HTTP/1.1\" 200 5 \"https://linicks.net/\" \"Dillo/3.1-dev\"\n192.168.1.1 - - [24/Apr/2016:14:46:25 +0100] \"GET /TesT.txt HTTP/1.1\" 200 5 \"https://linicks.net/\" \"Dillo/3.1-dev\"\n192.168.1.1 - - [24/Apr/2016:14:46:27 +0100] \"GET /TesT.txt HTTP/1.1\" 200 5 \"https://linicks.net/\" \"Dillo/3.1-dev\"\n192.168.1.1 - - [24/Apr/2016:14:46:28 +0100] \"GET /TesT.txt HTTP/1.1\" 200 5 \"https://linicks.net/\" \"Dillo/3.1-dev\"\n192.168.1.1 - - [24/Apr/2016:14:46:28 +0100] \"GET /TesT.txt HTTP/1.1\" 200 5 \"https://linicks.net/\" \"Dillo/3.1-dev\"\n\nRemember, I only created that file today as a test.", "id": 190513, "time": "2016-04-24T14:22:16Z", "bug_id": 59333, "creation_time": "2016-04-24T14:22:16Z", "attachment_id": null}, {"count": 14, "tags": [], "bug_id": 59333, "attachment_id": 33801, "text": "Created attachment 33801\nClear old/unkown worker score entry at incoming request\n\nThere is a window (more or less wide depending on the MPM) where the connection is accepted but the request not read/available yet, such that the connection informations are known (like remote IP) but not the request data (request line).\nDuring that time the scoreboard will show the IP of the new client but still the Protocol/Vhost/Request of the previous request associated with the entry.\n\nThe attached patch resets the entry whenever a new request is being handled, which should show empty values for informations which are not yet known, instead of mixed requests data.\n\nCould you please give it a try?", "id": 190524, "time": "2016-04-24T18:01:41Z", "creator": "ylavic.dev@gmail.com", "creation_time": "2016-04-24T18:01:41Z", "is_private": false}, {"count": 15, "tags": [], "creator": "nick@linicks.net", "is_private": false, "text": "Tried it.\n\nNow I get some full reports on what GET's what page, but some are also blank from vserver onwards as per the original report.\n\nObviously now, I don't know/haven't a clue how to debug.", "id": 190526, "time": "2016-04-24T19:09:40Z", "bug_id": 59333, "creation_time": "2016-04-24T19:09:40Z", "attachment_id": null}, {"count": 16, "tags": [], "bug_id": 59333, "attachment_id": null, "is_private": false, "id": 190528, "time": "2016-04-24T20:06:41Z", "creator": "ylavic.dev@gmail.com", "creation_time": "2016-04-24T20:06:41Z", "text": "As I said, the blank ones (for Protocol/Vhost/Request) are for new connections which obviously need a slot, the client IP is available but not the request yet to fill in the corresponding values.\n\nIt's either mixed values or blank ones, in both case this is a transient state anyway.\nI don't know what's the better (I prefer blank over misleading values), let's see what others think... \n\nThis is not the same as the original issue though (2.4.20 without httpd-2.4.x-scoreboard_preserve-v2.patch), previously the values remain blank possibly much longer (all the time waiting for a new connection), including the client IP.\nWith attachment 33801, the client IP is always up to date and the new request data show up as soon as available.\n\nPS: taking the slot only when the request is available is not an option, scoreboard slots are not just meant for mod_status."}, {"count": 17, "tags": [], "creator": "nick@linicks.net", "is_private": false, "text": "(In reply to Yann Ylavic from comment #16)\n> As I said, the blank ones (for Protocol/Vhost/Request) are for new\n> connections which obviously need a slot, the client IP is available but not\n> the request yet to fill in the corresponding values.\n> \n> It's either mixed values or blank ones, in both case this is a transient\n> state anyway.\n> I don't know what's the better (I prefer blank over misleading values),\n> let's see what others think... \n\nOK, I see where we are now - thanks for the hard work.\n\nYes, blanks is the way to go - at least that stops to bogus reporting which is what confused me.\n\nI am setting this as 'resolved'.\n\nMany thanks for your help Yann.", "id": 190540, "time": "2016-04-25T15:29:00Z", "bug_id": 59333, "creation_time": "2016-04-25T15:29:00Z", "attachment_id": null}, {"count": 18, "tags": [], "text": "Created attachment 33803\nSave/restore last request info in/from conn_rec\n\nMaybe we can have the best of the two worlds finally.\n\nThis patch saves the informations (namely Request and VHost colomns) of the last finishing request into the connection structure, and restores them on the worker slot handling the new request (or more importantly the end of connection which gave blank values previously).\n\nThis requires some more bytes in conn_rec, but avoids mixing and blanks completely.\n\nNick, would you test it in your environment? Thanks!", "attachment_id": 33803, "id": 190544, "creator": "ylavic.dev@gmail.com", "time": "2016-04-25T21:37:46Z", "bug_id": 59333, "creation_time": "2016-04-25T21:37:46Z", "is_private": false}, {"count": 19, "tags": [], "text": "Possibly the new patch would work better...", "attachment_id": null, "id": 190545, "creator": "ylavic.dev@gmail.com", "time": "2016-04-25T21:38:46Z", "bug_id": 59333, "creation_time": "2016-04-25T21:38:46Z", "is_private": false}, {"count": 20, "tags": [], "bug_id": 59333, "attachment_id": null, "is_private": false, "id": 190564, "time": "2016-04-26T15:34:01Z", "creator": "nick@linicks.net", "creation_time": "2016-04-26T15:34:01Z", "text": "(In reply to Yann Ylavic from comment #19)\n> Possibly the new patch would work better...\n\nStupid question - do I apply this over the other patch, or on the virgin scoreboard.c?\n\nThanks,\n\nNick"}, {"count": 21, "tags": [], "creator": "nick@linicks.net", "is_private": false, "text": "Ummm.\n\nin include/httpd.h, I haven't got this so don't know where to patch:\n\n /**\n  * @brief Structure to store things which are per connection\n  */\n@@ -1217,6 +1220,10 @@ struct conn_rec {\n \n     /** The minimum level of filter type to allow setaside buckets */\n     int async_filter;\n+\n+    /** Preserve scoreboard's worker last request infos */\n+    char sb_lastreq[AP_SB_REQ_SIZE];\n+    char sb_lastvhost[AP_SB_VHOST_SIZE];\n };\n\n?\n\nNick", "id": 190565, "time": "2016-04-26T16:35:23Z", "bug_id": 59333, "creation_time": "2016-04-26T16:35:23Z", "attachment_id": null}, {"count": 22, "tags": [], "creator": "rainer.jung@kippdata.de", "is_private": false, "text": "(In reply to Nick Warne from comment #21)\n\nInsert the lines which are indicated by the plus sign but without the plus sign itself at the plave below indicated with \"INSERT HERE!\".\n\n1086 /**\n1087  * @brief Structure to store things which are per connection\n1088  */\n1089 struct conn_rec {\n1090     /** Pool associated with this connection */\n1091     apr_pool_t *pool;\n...\nINSERT HERE!\n1183\n1184     /** The \"real\" master connection. NULL if I am the master. */\n1185     conn_rec *master;\n1186 };\n1187\n\nThanks,\n\nRainer", "id": 190569, "time": "2016-04-26T17:36:23Z", "bug_id": 59333, "creation_time": "2016-04-26T17:36:23Z", "attachment_id": null}, {"attachment_id": 33808, "tags": [], "creator": "ylavic.dev@gmail.com", "text": "Created attachment 33808\nSave/restore last request info in/from conn_rec (2.4.x)\n\nSorry for not having specified how to apply the patch, moreover it applies cleanly to trunk only.\n\nThis new patch is against clean 2.4.x (2.4.20), and includes both httpd-2.4.x-scoreboard_preserve-v2.patch and attachment 33803 (no need to apply any patch before).\n\nThanks for testing.", "count": 23, "id": 190571, "time": "2016-04-26T17:53:39Z", "bug_id": 59333, "creation_time": "2016-04-26T17:53:39Z", "is_private": false}, {"attachment_id": null, "tags": [], "creator": "nick@linicks.net", "text": "(In reply to Rainer Jung from comment #22)\n> (In reply to Nick Warne from comment #21)\n> \n> Insert the lines which are indicated by the plus sign but without the plus\n> sign itself at the plave below indicated with \"INSERT HERE!\".\n> \n> 1086 /**\n> 1087  * @brief Structure to store things which are per connection\n> 1088  */\n> 1089 struct conn_rec {\n> 1090     /** Pool associated with this connection */\n> 1091     apr_pool_t *pool;\n> ...\n> INSERT HERE!\n> 1183\n> 1184     /** The \"real\" master connection. NULL if I am the master. */\n> 1185     conn_rec *master;\n> 1186 };\n> 1187\n> \n> Thanks,\n> \n> Rainer\n\nSorry, I don't have that section that in include/httpd.h that starts with:\n\n/**\n* @brief Structure to store things which are per connection\n*/\nstruct conn_rec {\n/** Pool associated with this connection */\napr_pool_t *pool;\n\nI am using latest stable 2.4.20 source - was this added in the dev trunk?  Also I looked for a link where to get the dev trunk, but can't find it?\n\nNick", "count": 24, "id": 190573, "time": "2016-04-26T17:55:58Z", "bug_id": 59333, "creation_time": "2016-04-26T17:55:58Z", "is_private": false}, {"count": 25, "tags": [], "creator": "nick@linicks.net", "is_private": false, "text": "(In reply to Yann Ylavic from comment #23)\n> Created attachment 33808 [details]\n> Save/restore last request info in/from conn_rec (2.4.x)\n> \n> Sorry for not having specified how to apply the patch, moreover it applies\n> cleanly to trunk only.\n> \n> This new patch is against clean 2.4.x (2.4.20), and includes both\n> httpd-2.4.x-scoreboard_preserve-v2.patch and attachment 33803 [details] (no\n> need to apply any patch before).\n> \n> Thanks for testing.\n\nOK, built fine... but I now see the same results whereby the slots of IP show the wrong GET's.\n\nI use https://www.ssllabs.com/ssltest/ as a base to monitor GET's on the fly, and the server-status page soon gets confused - i.e. it shows ssl labs IP accessing my server-status page.\n\nNick", "id": 190576, "time": "2016-04-26T18:59:58Z", "bug_id": 59333, "creation_time": "2016-04-26T18:59:58Z", "attachment_id": null}, {"count": 26, "tags": [], "bug_id": 59333, "attachment_id": null, "id": 190577, "creation_time": "2016-04-26T19:07:20Z", "time": "2016-04-26T19:07:20Z", "creator": "mike.rumph@oracle.com", "text": "Hello Nick,\n\nWe check out the dev trunk directly from SVN.\n\nSee the following link:\n\n- http://httpd.apache.org/dev/devnotes.html", "is_private": false}, {"count": 27, "tags": [], "creator": "nick@linicks.net", "attachment_id": null, "text": "(In reply to Mike Rumph from comment #26)\n> Hello Nick,\n> \n> We check out the dev trunk directly from SVN.\n> \n> See the following link:\n> \n> - http://httpd.apache.org/dev/devnotes.html\n\nThanks Mike, got the latest dev trunk.\n\nOK, server-status still reports wrong GETs - I preferred the 'blanks'.\n\nI can now patch on svn version :)\n\nAs an aside, seeing as a few devs are reading here (I know it's TABOO), but can somebody look at bug https://bz.apache.org/bugzilla/show_bug.cgi?id=57771 and fix it up - I have to apply this manually each new source code build - and it is a wrong assignment in code, not a bug.\n\nThanks,\n\nNick", "id": 190583, "time": "2016-04-26T20:34:05Z", "bug_id": 59333, "creation_time": "2016-04-26T20:34:05Z", "is_private": false}, {"attachment_id": null, "tags": [], "creator": "wrowe@apache.org", "is_private": false, "count": 28, "id": 190608, "time": "2016-04-27T18:59:48Z", "bug_id": 59333, "creation_time": "2016-04-27T18:59:48Z", "text": "In addition to the patch mentioned in Comment #1, please also apply the following\n\nhttps://raw.githubusercontent.com/wrowe/patches/master/backport-httpd-2.4-r1741310.patch\n\nand report back if this entirely resolves the broken scoreboard behavior.\n\nIf it does not, please identify the MPM in use and whether you are trying\nto find lingering http or http2 request workers."}, {"count": 29, "tags": [], "creator": "wrowe@apache.org", "is_private": false, "text": "I've tweaked the solution in #28 to also empty the stale value of vhost or request on subsequent connections, which was broken in 2.4.20 and perhaps earlier.\n\nSee https://raw.githubusercontent.com/wrowe/patches/master/backport-httpd-2.4-r1741310-1741461.patch and remember to also apply the http://home.apache.org/~ylavic/patches/httpd-2.4.x-scoreboard_preserve-v2.patch first.", "id": 190627, "time": "2016-04-28T15:44:54Z", "bug_id": 59333, "creation_time": "2016-04-28T15:44:54Z", "attachment_id": null}, {"count": 30, "tags": [], "bug_id": 59333, "is_private": false, "id": 190635, "creation_time": "2016-04-28T18:53:52Z", "time": "2016-04-28T18:53:52Z", "creator": "nick@linicks.net", "text": "OK, tried this.\n\nAt least now no bogus reports, but I get a lot more 'blanks'.\n\nThe bogus reports in the original patch was the issue (i.e. false info is no info), so this OK to me as is.\n\nAs a comment, not a moan - why did this issue manifest on a stable release anyway?\n\nNick", "attachment_id": null}, {"count": 31, "tags": [], "creator": "covener@gmail.com", "is_private": false, "text": "\n> As a comment, not a moan - why did this issue manifest on a stable release\n> anyway?\n\nNobody noticed the bug in the relatively short window the release was tested.", "id": 190636, "time": "2016-04-28T19:02:38Z", "bug_id": 59333, "creation_time": "2016-04-28T19:02:38Z", "attachment_id": null}, {"count": 32, "tags": [], "bug_id": 59333, "attachment_id": null, "text": "I found another case where the request info gets clobbered: after a read timeout for the request line, e.g. when the client does not send another request before the connection times out during http keep-alive. After that the request field show \"NULL\".\n\nAn appropriate one-liner patch seems to be\n\nhttp://svn.apache.org/r1742792\n\napplied to trunk and proposed for backport.", "id": 190762, "time": "2016-05-08T10:38:56Z", "creator": "rainer.jung@kippdata.de", "creation_time": "2016-05-08T10:38:56Z", "is_private": false}, {"count": 33, "tags": [], "bug_id": 59333, "attachment_id": null, "id": 190770, "time": "2016-05-08T15:56:05Z", "creator": "rainer.jung@kippdata.de", "creation_time": "2016-05-08T15:56:05Z", "is_private": false, "text": "There's another case when the timeout replaces the request line with \"NULL\", noticable e.g. non-async MPMs. That should be fixed by:\n\nhttp://svn.apache.org/r1742822\n\nApplied to trunk and proposed for backport.\n\nThen there are situations when updating the connection info also clobbers the request data and which should be fixed using Yann't attached patch. I'l attach another one that uses a slightly different approach. We'll see which one makes it. Feedback from people testing them is very welcome."}, {"count": 34, "tags": [], "bug_id": 59333, "attachment_id": 33829, "id": 190771, "time": "2016-05-08T15:57:25Z", "creator": "rainer.jung@kippdata.de", "creation_time": "2016-05-08T15:57:25Z", "is_private": false, "text": "Created attachment 33829\nAlternative to 33803/33808."}, {"count": 35, "tags": [], "bug_id": 59333, "attachment_id": 33830, "id": 190773, "time": "2016-05-08T20:04:05Z", "creator": "ylavic.dev@gmail.com", "creation_time": "2016-05-08T20:04:05Z", "is_private": false, "text": "Created attachment 33830\nSave/restore last request info in/from conn_rec (trunk)\n\nPossibly this new patch (on top of current trunk) could avoid both blanks (for kept alive or closing connections) and inconsistent (mixed) connection/request data.\n\nAny chance you could try it with your test case Nick?\nThanks in advance."}, {"count": 36, "tags": [], "bug_id": 59333, "attachment_id": null, "is_private": false, "id": 190814, "time": "2016-05-10T17:47:13Z", "creator": "nick@linicks.net", "creation_time": "2016-05-10T17:47:13Z", "text": "(In reply to Yann Ylavic from comment #35)\n> Created attachment 33830 [details]\n> Save/restore last request info in/from conn_rec (trunk)\n> \n> Possibly this new patch (on top of current trunk) could avoid both blanks\n> (for kept alive or closing connections) and inconsistent (mixed)\n> connection/request data.\n> \n> Any chance you could try it with your test case Nick?\n> Thanks in advance.\n\nOK, I am confused now on what patch(es) should be applied in what order and what not.\n\nIs there a backport svn pull on 2.4.20(xx) that I can try, as the svn -dev fubars date on server-status and log file times (my filed bug 59395) so I don't want to use that.\n\nMaybe list each patch to apply in order so I get there - will be happy to test.\n\nNick"}, {"count": 37, "tags": [], "bug_id": 59333, "attachment_id": 33835, "is_private": false, "id": 190817, "time": "2016-05-10T21:05:18Z", "creator": "ylavic.dev@gmail.com", "creation_time": "2016-05-10T21:05:18Z", "text": "Created attachment 33835\nFix scoreboard for 2.4.20\n\nThis patch applying to vanilla 2.4.20 includes all the fixes accepted for next 2.4.21 (currently) regarding the scoreboard.\n\nThe scoreboard may contain blanks values (more or less time depending on the MPM used), but no inconsistent (mixed) connection/request data."}, {"count": 38, "tags": [], "creator": "ylavic.dev@gmail.com", "is_private": false, "text": "Created attachment 33836\nFix scoreboard for 2.4.20 + avoid blanks\n\nThis one (still applying to vanilla 2.4.20) includes attachment 33835 plus an attempt to preserve request info accross states/workers, hopefully avoiding blank values.", "id": 190818, "time": "2016-05-10T21:10:23Z", "bug_id": 59333, "creation_time": "2016-05-10T21:10:23Z", "attachment_id": 33836}, {"count": 39, "tags": [], "creator": "nick@linicks.net", "text": "Thank you Yann for all your hard work.\n\nPatched cleanly, and built with no errors on virgin 2.4.20 source.\n\nI am running now and report back on any issues I see.\n\nNick", "id": 190828, "time": "2016-05-11T16:50:37Z", "bug_id": 59333, "creation_time": "2016-05-11T16:50:37Z", "is_private": false, "attachment_id": null}, {"count": 40, "tags": [], "bug_id": 59333, "attachment_id": null, "id": 190835, "creation_time": "2016-05-11T17:11:45Z", "time": "2016-05-11T17:11:45Z", "creator": "nick@linicks.net", "text": "One thing I just noticed - I don't know if it to do with this bug or what:\n\nIf I stop/start the server, and visit my server-status page immediately, then the:\n\nReq Milliseconds required to process most recent request\n\nshows:\n\n15977568470\n\nAll subsequent queries show 2, 3, 4, 2 etc (i.e. expected ms response).\n\nNick", "is_private": false}, {"count": 41, "tags": [], "bug_id": 59333, "attachment_id": null, "text": "OK, been running this now for over 6 days, and apart from a few (minimal) blanks, all works as previous behaviour.\n\nThanks,\n\nNick", "id": 191060, "time": "2016-05-18T18:25:51Z", "creator": "nick@linicks.net", "creation_time": "2016-05-18T18:25:51Z", "is_private": false}, {"count": 42, "tags": [], "creator": "stefan@eissing.org", "is_private": false, "text": "Old behaviour reported as restored in last release.", "id": 193384, "time": "2016-08-29T07:54:50Z", "bug_id": 59333, "creation_time": "2016-08-29T07:54:50Z", "attachment_id": null}]