[{"attachment_id": 35388, "tags": [], "creator": "ak.azad@gmail.com", "text": "Created attachment 35388\nSource and example files\n\nThe docx file contains an image causing this exception. It does not happen for any other image in my actual document. Removing the graphic will work just fine with the attached test code.\n\n\nError Message:\n\nrg.apache.poi.openxml4j.exceptions.OpenXML4JRuntimeException: Fail to save: an error occurs while saving the package : The part /word/media/image1.wmf failed to be saved in the stream with marshaller org.apache.poi.openxml4j.opc.internal.marshallers.DefaultMarshaller@4b85612c\n\tat org.apache.poi.openxml4j.opc.ZipPackage.saveImpl(ZipPackage.java:595)\n\tat org.apache.poi.openxml4j.opc.OPCPackage.save(OPCPackage.java:1543)\n\tat org.apache.poi.openxml4j.opc.OPCPackage.save(OPCPackage.java:1526)\n\tat org.apache.poi.openxml4j.opc.ZipPackage.closeImpl(ZipPackage.java:450)\n\tat org.apache.poi.openxml4j.opc.OPCPackage.close(OPCPackage.java:479)\n\tat com.sovelia.office.DocxMetadataWriter.setDocxMetadata(DocxMetadataWriter.java:29)\n\tat com.sovelia.office.DocxMetadataWriter.main(DocxMetadataWriter.java:12)\nCaused by: org.apache.poi.openxml4j.exceptions.OpenXML4JException: The part /word/media/image1.wmf failed to be saved in the stream with marshaller org.apache.poi.openxml4j.opc.internal.marshallers.DefaultMarshaller@4b85612c\n\tat org.apache.poi.openxml4j.opc.ZipPackage.saveImpl(ZipPackage.java:586)\n\t... 6 more", "count": 0, "id": 201225, "time": "2017-09-29T12:21:55Z", "bug_id": 61575, "creation_time": "2017-09-29T12:21:55Z", "is_private": false}, {"attachment_id": null, "tags": [], "creator": "ak.azad@gmail.com", "text": "However, after the exception thrown and the source docx file is corrupted.", "count": 1, "id": 201226, "time": "2017-09-29T12:27:47Z", "bug_id": 61575, "creation_time": "2017-09-29T12:27:47Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 61575, "text": "different way to write coreproperties also provided exception a bit differently. Use same test file in attachment. First time it is successfully read/writes and second time gives the exception.\n\nCode:\ntry {\n            InputStream fis = new FileInputStream(fileName);\n            XWPFDocument doc = new XWPFDocument(fis);\n            \n            CoreProperties cp = doc.getProperties().getCoreProperties();\n            cp.setCreator(\"Test Creator\");\n            \n            OutputStream fos = new FileOutputStream(fileName);\n            doc.write(fos);\n            doc.close();\n            fos.close();\n            fis.close();\n        }catch(Exception e){e.printStackTrace();}\n\n\nException:\n\n\njava.io.IOException: Failed to read zip entry source\n\tat org.apache.poi.openxml4j.opc.ZipPackage.<init>(ZipPackage.java:103)\n\tat org.apache.poi.openxml4j.opc.OPCPackage.open(OPCPackage.java:324)\n\tat org.apache.poi.util.PackageHelper.open(PackageHelper.java:37)\n\tat org.apache.poi.xwpf.usermodel.XWPFDocument.<init>(XWPFDocument.java:116)\n\tat com.sovelia.office.Test.testDocxReadWrite(Test.java:127)\n\tat com.sovelia.office.Test.main(Test.java:31)\nCaused by: java.io.IOException: Zip bomb detected! The file would exceed the max. ratio of compressed file size to the size of the expanded data. This may indicate that the file is used to inflate memory usage and thus could pose a security risk. You can adjust this limit via ZipSecureFile.setMinInflateRatio() if you need to work with files which exceed this limit. Counter: 1326240, cis.counter: 13253, ratio: 0.009992912293400893Limits: MIN_INFLATE_RATIO: 0.01\n\tat org.apache.poi.openxml4j.util.ZipSecureFile$ThresholdInputStream.advance(ZipSecureFile.java:266)\n\tat org.apache.poi.openxml4j.util.ZipSecureFile$ThresholdInputStream.read(ZipSecureFile.java:221)\n\tat java.io.FilterInputStream.read(FilterInputStream.java:107)\n\tat org.apache.poi.openxml4j.util.ZipInputStreamZipEntrySource$FakeZipEntry.<init>(ZipInputStreamZipEntrySource.java:132)\n\tat org.apache.poi.openxml4j.util.ZipInputStreamZipEntrySource.<init>(ZipInputStreamZipEntrySource.java:56)\n\tat org.apache.poi.openxml4j.opc.ZipPackage.<init>(ZipPackage.java:100)\n\t... 5 more", "id": 201227, "time": "2017-09-29T12:52:24Z", "creator": "ak.azad@gmail.com", "creation_time": "2017-09-29T12:52:24Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "text": "Java 9 is just out and it looks we have a few issues (eg https://bz.apache.org/bugzilla/show_bug.cgi?id=61564)\n\nThere is a plan to issue a 3.17.1 patch to fix issues when Java 9 is used.", "is_private": false, "bug_id": 61575, "id": 201235, "time": "2017-09-29T16:24:19Z", "creator": "fanningpj@yahoo.com", "creation_time": "2017-09-29T16:24:19Z", "attachment_id": null}, {"count": 4, "attachment_id": null, "creator": "fanningpj@yahoo.com", "text": "Apologies for the confusion. I put the Java 9 comment on the wrong issue.", "id": 201238, "time": "2017-09-29T16:28:44Z", "bug_id": 61575, "creation_time": "2017-09-29T16:28:44Z", "tags": [], "is_private": false}, {"count": 5, "attachment_id": null, "creator": "fanningpj@yahoo.com", "text": "What happens when you adjust ZipSecureFile.setMinInflateRatio() as the error message suggests?", "id": 201239, "time": "2017-09-29T16:33:05Z", "bug_id": 61575, "creation_time": "2017-09-29T16:33:05Z", "tags": [], "is_private": false}, {"count": 6, "tags": [], "bug_id": 61575, "text": "(In reply to PJ Fanning from comment #5)\n> What happens when you adjust ZipSecureFile.setMinInflateRatio() as the error\n> message suggests?\n\nHi Fanning,\nThanks, it works with the ZipSecureFile.setMinInflateRatio().\n\nHowever, just to mention that my first example did not provide this proper error message about Minimum Inflate Ratio.\n\n-a-", "id": 201261, "time": "2017-10-02T12:32:23Z", "creator": "ak.azad@gmail.com", "creation_time": "2017-10-02T12:32:23Z", "is_private": false, "attachment_id": null}, {"count": 7, "attachment_id": null, "creator": "dominik.stadler@gmx.at", "text": "The exception is thrown in your original case as well, but sent as log-line to the configured POILogger internally. \n\nThe default logger is not sending any output to keep the lib from spamming stdout, but you can easily define a different one, e.g. by specifying -Dorg.apache.poi.util.POILogger=org.apache.poi.util.SystemOutLogger", "id": 201298, "time": "2017-10-04T18:40:14Z", "bug_id": 61575, "creation_time": "2017-10-04T18:40:14Z", "tags": [], "is_private": false}]