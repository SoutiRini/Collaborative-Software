[{"count": 0, "tags": [], "bug_id": 5684, "text": "Problem 1:\nWhen a class from a jar file is init'd, the .jar file is somewhat locked.  It \ncannot be deleted or renamed (prevented by os) but it can be overwritten.  The \nonly way to delete or rename a jar is to stop tomcat/jvm.  Even a context stop \nor remove does not work.\n\nProblem 2:\nContinuing from problem 1, if a jar is overwritten, tomcat recognizes this and \ncalls a context remove and add (logged in the stderr log).  But any calls to \nthe classes in the jar results in a tomcat 404 error.  Calling a context remove \nand add does not work.  The jar and it's classes are dead until you stop and \nstart the tomcat/jvm.\n\nI have many contexts (100+) and I can't bring the tomcat/jvm down to change 1 \njar file in one context.  The /classes and .class files do *not* exhibit this \nproblem.  You can delete, rename, and replace class files. As long as we do a \ncontext remove and add after any changes, everything works perfectly.  The jar \nloading system should work the same way.  BTW, this is the work around to my \nproblem, no jar files.  But I don't think that this is the way it was suppose \nto work?\n\nI tested this with 3.3.1 dev 12/31/2001.  The 3.3 final exhibits basically \nidentical problems.  I have tested this on 2 different server computers.\n\nPlease advise.\nThanks Mike", "id": 9335, "time": "2002-01-03T22:16:33Z", "creator": "mike@ds808.net", "creation_time": "2002-01-03T22:16:33Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "creator": "william.barker@wilshire.com", "text": "1) This is really a Windows issue, since *nix machines happily let you delete \nopen files. (and Tomcat delegates which files are open to \njava.lang.Classloader).\n\n2) This is a known problem, but it is basically a bug in java.util.zip. (and, \nyes, this one effects *nix boxes as well).  What happens is that the JVM holds \non to it's old index of the jar file (which is no longer valid of course), so \nit is unable to reload the class when Tomcat asks it to.  My understanding of \nthe feeling among the developers is that they'd really rather that Sun fix this \none than re-write java.util.zip.  \n\nAFAIK, this is still an issue in Java 1.4 Beta, but I might be wrong.", "id": 9336, "time": "2002-01-03T23:03:19Z", "bug_id": 5684, "creation_time": "2002-01-03T23:03:19Z", "is_private": false, "attachment_id": null}, {"text": "For problem 1 and 2:\nIn tomcat 3.2.3, these problems did not exist.  You could delete, rename, and \nreplace jars even while the context was running.  If you deleted a jar, tomcat \nwould throw a:\n\n2002-01-03 23:31:37 - Ctx( www.foodomain.com:/examples ): Exception in: R\n( /examples + /servlet/HelloWorldExample + null) - \njava.lang.IllegalArgumentException: Repository \nD:\\home\\foodomain\\www\\examples\\WEB-INF\\lib\\examplesdir2.jar doesn't exist!\n \nAfter deleting a live jar (this is an extreme), a remove and add of the context \nwill restore everything perfectly.  No need to shutdown tomcat/jvm.\n\nTo verify this, I reloaded tomcat 3.2.3 and re-tested everything.  It all \nworked like before.  The jvm is still the same at 1.3.1_01.  Can you folks look \ninto it?  I really like 3.3 classloading scheme so I dont want to go back to \n3.2.\n\nAny comments?\nThanks\nMike\n", "tags": [], "bug_id": 5684, "attachment_id": null, "count": 2, "id": 9342, "time": "2002-01-04T01:47:53Z", "creator": "mike@ds808.net", "creation_time": "2002-01-04T01:47:53Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 5684, "attachment_id": null, "text": "One workaround is to use straight classes rather then jars (i.e. unpack your\njars in the classes directory).\n\nAs for the ZIP class problems, I've submitted this bug to Sun a number of times\nand I was able to replicate it on Windows and Linux. But, they wouldn't buy it.\nThe following sample program illustrates the problem:\n\n------------------------------------------------------\nimport java.io.*;\nimport java.net.*;\nimport java.util.*;\n\nclass ZipFileTest extends ClassLoader{\n\n  public static void main(String argv[]){\n    LineNumberReader in=new LineNumberReader(new\nInputStreamReader(System.in));\n\n    while(true){\n      Properties p=new Properties();\n      try{\n        // Get the resource using the first ClassLoader object (first\nset)\n        ZipFileTest t=new ZipFileTest();\n        System.err.println(\"t=\"+t);\n\n        InputStream i=t.getResourceAsStream(\"/some/properties/file.props\");\n        System.err.println(\"i=\"+i);\n        p.load(i);\n        p.save(System.out,\"\");\n\n        // Get rid of the objects\n        i=null; t=null; p=null;\n\n        // Wait for user input while replacing the jar\n        in.readLine();\n      } catch(Throwable t){\n        System.out.println(t);\n        t.printStackTrace(System.out);\n        System.exit(1);\n      }\n    }\n  }\n}\n------------------------------------------------------\n\nAll you need to do is have a JAR file with a properties files inside it (make\nsure you change the name). Run the  program and it will print out the properties\nfile. After that it'll wait for your input. At that point replace the JAR file\nwith another JAR file that contains the same properties file, but is otherwise\ndifferent. After the input is received, the program will fail while reading the\nJAR file, given the JAR file is sufficiently different (i.e. at times there will\nbe no problems).\n\nBojan", "id": 9344, "time": "2002-01-04T02:54:09Z", "creator": "bojan@binarix.com", "creation_time": "2002-01-04T02:54:09Z", "is_private": false}, {"count": 4, "tags": [], "creator": "william.barker@wilshire.com", "is_private": false, "id": 9367, "attachment_id": null, "bug_id": 5684, "creation_time": "2002-01-04T18:50:12Z", "time": "2002-01-04T18:50:12Z", "text": "There was a missing close statement in the app-ClassLoader.  I've added it in, \nso that the jar file shouldn't stay open.  This may fix part 1 (since 3.3 \ntypically does GC much less often then 3.2).\n\nIt is possible (if very unlikely) that being able to delete the jar file may \nhelp with 2."}, {"count": 5, "tags": [], "creator": "william.barker@wilshire.com", "is_private": false, "id": 9836, "attachment_id": null, "bug_id": 5684, "creation_time": "2002-01-24T08:00:17Z", "time": "2002-01-24T08:00:17Z", "text": "Reporter says that it's working now."}, {"count": 6, "tags": [], "bug_id": 5684, "attachment_id": null, "text": "*** Bug 6139 has been marked as a duplicate of this bug. ***", "id": 10100, "time": "2002-01-31T03:42:25Z", "creator": "william.barker@wilshire.com", "creation_time": "2002-01-31T03:42:25Z", "is_private": false}]