[{"count": 0, "attachment_id": null, "bug_id": 28993, "text": "In Ant 1.6.1 if you try to use XmlLogger on a build script that uses <macrodef>,\nunder some circumstances it will get confused about the stack and fail. See the\nattached sample script and the result of running it with XmlLogger.\n\nThe problem is that MacroDef instances can change their hashCode during the\nobject's lifetime, which is verboten in Java; XmlLogger keeps a Hashtable and\nmaps the MacroDef to its build element in taskStarted, but by the time\ntaskFinished runs, the hashCode has changed and it can no longer find the same\ntask object.\n\nFix is simple enough: hardcode a hash for MacroDef's. Hopefully they are not\noften used as hash keys so performance should not suffer much. Using\nObject.hashCode is probably wrong since equals() is overridden.", "id": 57455, "time": "2004-05-14T23:32:44Z", "creator": "jglick@apache.org", "creation_time": "2004-05-14T23:32:44Z", "tags": [], "is_private": false}, {"count": 1, "tags": [], "bug_id": 28993, "is_private": false, "text": "Created attachment 11555\nShell session demonstrating bug", "id": 57456, "time": "2004-05-14T23:33:22Z", "creator": "jglick@apache.org", "creation_time": "2004-05-14T23:33:22Z", "attachment_id": 11555}, {"count": 2, "tags": [], "bug_id": 28993, "text": "Created attachment 11556\nSuggested patch to MacroDef.java to solve the bug; also better diagnostics from XmlLogger.java", "id": 57457, "time": "2004-05-14T23:34:52Z", "creator": "jglick@apache.org", "creation_time": "2004-05-14T23:34:52Z", "is_private": false, "attachment_id": 11556}, {"count": 3, "tags": [], "bug_id": 28993, "attachment_id": null, "id": 57549, "time": "2004-05-17T13:58:48Z", "creator": "peter.reilly@corvil.com", "creation_time": "2004-05-17T13:58:48Z", "is_private": false, "text": "The problem was that the macrodef object was placed\nin a map before it was fully constructed. Fixed\nby changing the \"equals\" to a \"similar\" (same\nproblem occured in UnknownElement).\n\nAlso applied changes to XMLlogger and DOMElementWriter."}, {"count": 4, "attachment_id": null, "bug_id": 28993, "text": "Thanks", "id": 57550, "time": "2004-05-17T13:59:15Z", "creator": "peter.reilly@corvil.com", "creation_time": "2004-05-17T13:59:15Z", "tags": [], "is_private": false}, {"count": 5, "tags": [], "creator": "ddevienne@lgc.com", "attachment_id": null, "id": 57551, "time": "2004-05-17T14:06:51Z", "bug_id": 28993, "creation_time": "2004-05-17T14:06:51Z", "is_private": false, "text": "I didn't understand the fix Peter :-( It looks like you removed the hashCode \nand equals methods completely, and instead renamed equals() to similar(), but \nthe map won't be using similar(), so I don't get it. Do you want to use the \nObject equals/hashCode, and really use object identity (pseudo-pointer) for \nequality (thus emulate using a JDK 1.4 IdentityHashMap?) Thanks, --DD"}, {"count": 6, "tags": [], "text": "The similar is used by the code to check if the definition\nis already present (content equals).\n\nThe hashcode/equals is used by the logging code to find the\nthe macrodef object instance in a stack of tasks.\n", "attachment_id": null, "bug_id": 28993, "id": 57553, "time": "2004-05-17T14:18:50Z", "creator": "peter.reilly@corvil.com", "creation_time": "2004-05-17T14:18:50Z", "is_private": false}]