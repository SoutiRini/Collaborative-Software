[{"count": 0, "tags": [], "creator": "paul_bober@intuit.com", "attachment_id": 24270, "id": 130427, "time": "2009-09-15T14:10:14Z", "bug_id": 47845, "creation_time": "2009-09-15T14:10:14Z", "is_private": false, "text": "Created attachment 24270\nreproduction of the bug\n\nI have multiple workbooks and am referencing names from one workbook in a\nsecond workbook.  When evaluating formulas containing one of these cross\nworkbook name references using ForkedEvaluator I get the exception below.\n\nI have reproduced the problem in the attached example.  Book1.xls and Book2.xls\neach have one sheet (Sheet1) with one cell (A1).   Book1.xls has the name\n\"MyCell\" which references \"Sheet1!A1\".  [Book1.xls]Sheet1!A1 contains the\nconstant 100 and [Book2.xls]Sheet1!A1 contains the formula \"=[Book1.xls]MyCell\n+ 1\"  and thus should evaluate to 101 but instead yields an exception.\n\nNote that if I take out the \"+1\" in the formula I no longer get the exception\nbut the result is a NameXEval object (not the expected NumberEval).\n\nNote also if I rewrite the formula as \"[Book1.xls]Sheet1!A1 + 1\" it works.  But\nI would like to use the named references.\n\nPaul\n\n\n\nException in thread \"main\" java.lang.RuntimeException: Unexpected arg eval type\n(org.apache.poi.hssf.record.formula.eval.NameXEval)\n    at\norg.apache.poi.hssf.record.formula.eval.OperandResolver.coerceValueToDouble(OperandResolver.java:221)\n    at\norg.apache.poi.hssf.record.formula.eval.TwoOperandNumericOperation.singleOperandEvaluate(TwoOperandNumericOperation.java:27)\n    at\norg.apache.poi.hssf.record.formula.eval.TwoOperandNumericOperation.evaluate(TwoOperandNumericOperation.java:33)\n    at\norg.apache.poi.ss.formula.WorkbookEvaluator.invokeOperation(WorkbookEvaluator.java:398)\n    at\norg.apache.poi.ss.formula.WorkbookEvaluator.evaluateFormula(WorkbookEvaluator.java:333)\n    at\norg.apache.poi.ss.formula.WorkbookEvaluator.evaluateAny(WorkbookEvaluator.java:216)\n    at\norg.apache.poi.ss.formula.WorkbookEvaluator.evaluate(WorkbookEvaluator.java:180)\n    at\norg.apache.poi.ss.formula.eval.forked.ForkedEvaluator.evaluate(ForkedEvaluator.java:109)\n    at mypackage.poi.PoiBug.main(PoiBug.java:32)"}, {"count": 1, "attachment_id": null, "bug_id": 47845, "text": "I've discovered an issue (that appears to be similar to this issue) within an application that we have build (using POI 3.6). I can provide examples as needed, but is this specific issue slated for inclusion within POI 3.7?\n\nThanks,\n\nDave Sprague\nDirector, Product Management\nTrintech", "id": 135452, "time": "2010-03-18T22:41:42Z", "creator": "dave.sprague@trintech.com", "creation_time": "2010-03-18T22:41:42Z", "tags": [], "is_private": false}, {"count": 2, "tags": [], "bug_id": 47845, "attachment_id": null, "text": "Does this problem still exist in POI 3.13? A lot of progress has been made with formula parsing and evaluation since POI 3.6.", "id": 185679, "time": "2015-10-07T09:46:58Z", "creator": "onealj@apache.org", "creation_time": "2015-10-07T09:46:58Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 47845, "attachment_id": null, "text": "No update in a long time and this may be fixed since a long time, setting this to resolved for now, please reopen if this is still a problem for you.", "id": 189448, "time": "2016-03-13T21:40:18Z", "creator": "dominik.stadler@gmx.at", "creation_time": "2016-03-13T21:40:18Z", "is_private": false}]