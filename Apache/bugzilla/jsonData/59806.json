[{"count": 0, "tags": [], "text": "Created attachment 34014\nCTBarChar  use ooxml-schemas-1.1.jar\n\nException in thread \"main\" org.apache.poi.openxml4j.exceptions.OpenXML4JRuntimeException: Rule M2.4 exception : this error should NEVER happen! Please raise a bug at https://bz.apache.org/bugzilla/enter_bug.cgi?product=POI and attach a file that triggers it, thanks!\n\tat org.apache.poi.openxml4j.opc.internal.ContentTypeManager.getContentType(ContentTypeManager.java:343)\n\tat org.apache.poi.openxml4j.opc.internal.ContentTypeManager.removeContentType(ContentTypeManager.java:256)\n\tat org.apache.poi.openxml4j.opc.OPCPackage.removePart(OPCPackage.java:958)\n\tat org.apache.poi.openxml4j.opc.PackagePart.getOutputStream(PackagePart.java:522)\n\tat ExcelWritingbug.updateBarChartTemplate(ExcelWritingbug.java:131)\n\tat ExcelWritingbug.main(ExcelWritingbug.java:36)\n\n////////////////////////////////////////////\nprogram\n\nimport org.apache.poi.POIXMLDocumentPart;\nimport org.apache.poi.ss.util.CellRangeAddress;\nimport org.apache.poi.ss.util.CellReference;\nimport org.apache.poi.xslf.usermodel.XMLSlideShow;\nimport org.apache.poi.xslf.usermodel.XSLFChart;\nimport org.apache.poi.xslf.usermodel.XSLFSlide;\nimport org.apache.poi.xssf.usermodel.XSSFRow;\nimport org.apache.poi.xssf.usermodel.XSSFSheet;\nimport org.apache.poi.xssf.usermodel.XSSFWorkbook;\nimport org.openxmlformats.schemas.drawingml.x2006.chart.*;\nimport org.openxmlformats.schemas.drawingml.x2006.main.CTTextBody;\nimport org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph;\n\nimport java.io.FileInputStream;\nimport java.io.FileOutputStream;\nimport java.io.IOException;\nimport java.io.OutputStream;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class ExcelWritingbug {\n\n    public static void main(String[] args) {\n\t    String inputPath = \"e:\\\\excel_writing_bug.pptx\";\n\t    String outputPath = \"e:\\\\excel_writing_bug_output.pptx\";\n\t    int slideNumber = 1;\n\t    String templateChartTitle = \"Title\";\n\t    String newChartTitle = \"Title updated\";\n\t    Map<String, Double> chartValues = new HashMap<String, Double>();\n\t    chartValues.put(\"Windows\", 5d);\n\t    chartValues.put(\"Solaris\", 2d);\n\t    chartValues.put(\"Unix\", 8d);\n\t    chartValues.put(\"Linux\", 5d);\n\t    try {\n\t\t    updateBarChartTemplate(inputPath, outputPath, slideNumber, templateChartTitle, newChartTitle, chartValues);\n\t    } catch (IOException e) {\n\t\t    e.printStackTrace();\n\t    }\n    }\n\n\tpublic static void updateBarChartTemplate(String inputPath, String outputPath, int slideNumber, String templateChartTitle, String newChartTitle, Map<String, Double> chartValues)\n\t\tthrows IllegalStateException, IOException{\n\n\t\tXMLSlideShow pptx = null;\n\t\ttry {\n\t\t\t pptx = new XMLSlideShow(new FileInputStream(inputPath));  \n\t            //\u83b7\u53d6\u7b2c\u4e00\u4e2appt\u9875\u9762  \n\t          //  XSLFSlide slide = pptx.getSlides().get(0);  \n\t\t\t//pptx = new XMLSlideShow(new FileInputStream(inputPath));\n\t\t       //\u904d\u5386\u7b2c\u4e00\u9875\u5143\u7d20\u627e\u5230\u56fe\u8868  \n\t\t\t /*\n\t            XSLFChart chart = null;  \n\t            for(POIXMLDocumentPart part : slide.getRelations()){  \n\t                if(part instanceof XSLFChart){  \n\t                    chart = (XSLFChart) part;  \n\t                    break;  \n\t                }  \n\t            }  \n\t            if (chart == null) {  \n\t                return \"no chart\";  \n\t            }  \n\t  \n\t            POIXMLDocumentPart xlsPart = chart.getRelations().get(0);  \n\t  */\n\t\t\tXSLFChart chart = getChartFromTitle(inputPath, slideNumber, templateChartTitle);\n\t\t\tif (chart == null) throw new IllegalStateException(\"chart not found in the template\");\n\t\t\t// embedded Excel workbook that holds the chart data\n\t\t\tPOIXMLDocumentPart xlsPart = chart.getRelations().get(0);\n\t\t\tXSSFWorkbook wb = new XSSFWorkbook();\n\t\t\tOutputStream xlsOut = null;\n\t\t\ttry {\n\t\t\t\tXSSFSheet sheet = wb.createSheet();\n\n\t\t\t\tCTChart ctChart = chart.getCTChart();\n\n\n\t\t\t\tCTPlotArea plotArea = ctChart.getPlotArea();\n\n\t\t\t\tCTBarChart barChart = plotArea.getBarChartArray(0);\n\t\t\t\t//Bar Chart Series\n\t\t\t\tCTBarSer ser = barChart.getSerArray(0);\n\n\t\t\t\t// Series Text\n\t\t\t\tCTSerTx tx = ser.getTx();\n\t\t\t\ttx.getStrRef().getStrCache().getPtArray(0).setV(newChartTitle);\n\t\t\t\tsheet.createRow(0).createCell(1).setCellValue(newChartTitle);\n\t\t\t\tString titleRef = new CellReference(sheet.getSheetName(), 0, 1, true, true).formatAsString();\n\t\t\t\ttx.getStrRef().setF(titleRef);\n\n\t\t\t\t// Category Axis Data\n\t\t\t\tCTAxDataSource cat = ser.getCat();\n\t\t\t\tCTStrData strData = cat.getStrRef().getStrCache();\n\n\t\t\t\t// Values\n\t\t\t\tCTNumDataSource val = ser.getVal();\n\t\t\t\tCTNumData numData = val.getNumRef().getNumCache();\n\n\t\t\t\tstrData.setPtArray(null);  // unset old axis text\n\t\t\t\tnumData.setPtArray(null);  // unset old values\n\n\t\t\t\t// set model\n\t\t\t\tint idx = 0;\n\t\t\t\tint rownum = 1;\n\n\t\t\t\tfor (Map.Entry<String, Double> entry : chartValues.entrySet()) {\n\t\t\t\t\tString key = entry.getKey();\n\t\t\t\t\tString value = String.valueOf(entry.getValue());\n\t\t\t\t\tCTNumVal numVal = numData.addNewPt();\n\t\t\t\t\tnumVal.setIdx(idx);\n\t\t\t\t\tnumVal.setV(value);\n\n\t\t\t\t\tCTStrVal sVal = strData.addNewPt();\n\t\t\t\t\tsVal.setIdx(idx);\n\t\t\t\t\tsVal.setV(key);\n\n\t\t\t\t\tidx++;\n\t\t\t\t\tXSSFRow row = sheet.createRow(rownum++);\n\t\t\t\t\trow.createCell(0).setCellValue(key);\n\t\t\t\t\trow.createCell(1).setCellValue(Double.valueOf(value));\n\t\t\t\t}\n\t\t\t\tnumData.getPtCount().setVal(idx);\n\t\t\t\tstrData.getPtCount().setVal(idx);\n\n\t\t\t\tString numDataRange = new CellRangeAddress(1, rownum - 1, 1, 1).formatAsString(sheet.getSheetName(), true);\n\t\t\t\tval.getNumRef().setF(numDataRange);\n\t\t\t\tString axisDataRange = new CellRangeAddress(1, rownum - 1, 0, 0).formatAsString(sheet.getSheetName(), true);\n\t\t\t\tcat.getStrRef().setF(axisDataRange);\n\n\t\t\t\t// updated the embedded workbook with the data\n\t\t\t\txlsOut = xlsPart.getPackagePart().getOutputStream();\n\t\t\t\ttry {\n\t\t\t\t\twb.write(xlsOut);\n\t\t\t\t} finally {\n\t\t\t\t\txlsOut.close();\n\t\t\t\t}\n\t\t\t\tFileOutputStream fos = new FileOutputStream(outputPath);\n\t\t\t\ttry {\n\t\t\t\t\tpptx.write(fos);\n\t\t\t\t} finally {\n\t\t\t\t\tfos.close();\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\twb.close();\n\t\t\t}\n\t\t} finally {\n\t\t\tif (pptx != null) pptx.close();\n\t\t}\n\t}\n\n\tpublic static XSLFChart getChartFromTitle(String inputPath, int slideNumber, String templateChartTitle) throws IOException {\n\t\tXMLSlideShow pptx = null;\n\t\ttry {\n\t\t\tpptx = new XMLSlideShow(new FileInputStream(inputPath));\n\n\t\t\tXSLFSlide slide = pptx.getSlides().get(slideNumber - 1);\n\t\t\t// find chart in the slide\n\t\t\tXSLFChart chart = null;\n\t\t\tfor (POIXMLDocumentPart part : slide.getRelations()) {\n\t\t\t\tif (part instanceof XSLFChart) {\n\t\t\t\t\tchart = (XSLFChart) part;\n\t\t\t\t\tCTChart ctChart = chart.getCTChart();\n\n\t\t\t\t\tCTTitle ctTitle = ctChart.getTitle();\n\t\t\t\t\tCTTx titleTx = ctTitle.getTx();\n\t\t\t\t\tCTTextBody body = titleTx.getRich();\n\t\t\t\t\tCTTextParagraph paragraph = body.getPArray(0);\n\t\t\t\t\tString chartTitle = paragraph.getRArray(0).getT();\n\n\t\t\t\t\tif (chartTitle.equalsIgnoreCase(templateChartTitle)) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tchart = null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn chart;\n\t\t} finally {\n\t\t\tif (pptx != null) pptx.close();\n\t\t}\n\t}\n}", "is_private": false, "id": 192165, "creator": "yongfeid@sina.com", "time": "2016-07-06T08:12:35Z", "bug_id": 59806, "creation_time": "2016-07-06T08:12:35Z", "attachment_id": 34014}, {"count": 1, "tags": [], "creator": "onealj@apache.org", "text": "What version of POI are you using?\n\nCould you try this again with ooxml-schemas-1.3, making sure to delete any duplicate ooxml-schemas and poi-ooxml-schemas on your classpath?\n\nhttps://poi.apache.org/faq.html#faq-N10025", "id": 192168, "time": "2016-07-06T09:34:06Z", "bug_id": 59806, "creation_time": "2016-07-06T09:34:06Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "creator": "onealj@apache.org", "is_private": false, "id": 192170, "creation_time": "2016-07-06T10:30:43Z", "time": "2016-07-06T10:30:43Z", "bug_id": 59806, "text": "Created attachment 34015\nsimplified unit test\n\nI cut your example down to the attached unit test.\n\nThe source of the problem is in getChartFromTitle. You're opening the slideshow, creating an XSLFChart object, and closing the slideshow. Then you're passing the XSLFChart object that belongs to the closed slideshow back to updateBarChartTemplate.\n\nNaturally, once you've closed a resource, any subsequent operations performed on that resource are likely to fail.\n\nPerhaps we could give a more informative error message here, like \"could not access package part output stream because the underlying document has been closed.", "attachment_id": 34015}, {"count": 3, "tags": [], "creator": "onealj@apache.org", "text": "Created attachment 34016\nsimplified unit test", "id": 192171, "time": "2016-07-06T10:33:04Z", "bug_id": 59806, "creation_time": "2016-07-06T10:33:04Z", "is_private": false, "attachment_id": 34016}, {"count": 4, "tags": [], "creator": "dominik.stadler@gmx.at", "is_private": false, "text": "Set to enhancement as original problem is explained by closing the Slideshow too early and only some improved error reporting is remaining to be done.", "id": 192414, "time": "2016-07-15T18:46:56Z", "bug_id": 59806, "creation_time": "2016-07-15T18:46:56Z", "attachment_id": null}]