[{"count": 0, "tags": [], "bug_id": 34264, "attachment_id": null, "id": 73192, "time": "2005-04-01T19:13:45Z", "creator": "lovan@lifesci.ucsb.edu", "creation_time": "2005-04-01T19:13:45Z", "is_private": false, "text": "I have compiled 2.0.53 under Solaris 10 using the following configuration:\n\nCFLAGS=\"-m64 -mcpu=v9\" LDFLAGS=\"-m64 -mcpu=v9\" ./configure\n--enable-layout=Lifesci --disable-ipv6 --enable-so --enable-mods-shared=most\n--with-mpm=worker --with-ssl=/opt/apps64/openssl --enable-nonportable-atomics\n\nThis compiled a 64-bit binary without displaying errors.  However, after\nstartup, the CGI gateway seems broken.  I get 500 errors about 80% of the time\nwhen I try to run anything via CGI.  The error log contains the following for\neach failed request:\n\n[Thu Mar 31 17:36:16 2005] [error] [client 128.111.226.63] (32)Broken pipe:\nwrite to cgi daemon process\n[Thu Mar 31 17:36:16 2005] [error] [client 128.111.226.63] Premature end of\nscript headers: printenv\n[Thu Mar 31 17:36:16 2005] [error] [client 128.111.226.63] File does not exist:\n/home/www-ssl/html/favicon.ico\n[Thu Mar 31 17:36:16 2005] [notice] child pid 10380 exit signal Segmentation\nfault (11)\n[Thu Mar 31 17:36:16 2005] [error] cgid daemon process died, restarting\n\nDebugging provided the following observations:\n  1)  If I unload mod_ssl, then the CGI gateway works properly.\n  2)  Compiling without --enable-nonportable-atomics does not solve the problem\n  3)  Compiling with mod_ssl statically built (not a DSO) does not solve the\nproblem.\n  4)  The following configuration does work (prefork MPM):\n      > CFLAGS=\"-m64 -mcpu=v9\" LDFLAGS=\"-m64 -mcpu=v9\" ./configure\n      > --enable-layout=Lifesci --disable-ipv6 --enable-so --enable-ssl\n      > --enable-rewrite --enable-info --enable-headers\n      > --enable-mods-shared=\"auth_dbm dav dav_fs vhost_alias imap \n      > speling expires usertrack unique-id asis vhost-alias include\"\n      > --with-ssl=/opt/apps64/openssl\n\nHere is some addition information regarding the build environment:\n> # gcc -v\n> Reading specs from\n> /opt/apps/gcc-3.4.3/lib/gcc/sparc-sun-solaris2.10/3.4.3/specsConfigured with: \n> ../gcc-3.4.3/configure --prefix=/opt/apps/gcc-3.4.3 --mandir=/opt/man \n> --infodir=/opt/info --with-as=/usr/sfw/bin/gas --with-gnu-as \n> --with-ld=/usr/ccs/bin/ld --disable-nls --disable-static --with-cpu=sparcv9 \n> --disable-libgcjThread model: posix\n> gcc version 3.4.3\n\n> # uname -a\n> SunOS hw-develop.lscf.ucsb.edu. 5.10 Generic sun4u sparc SUNW,Ultra-60\n\n> # /opt/apps64/openssl/bin/openssl version\n> OpenSSL 0.9.7f 22 Mar 2005"}, {"count": 1, "tags": [], "bug_id": 34264, "attachment_id": null, "id": 73198, "time": "2005-04-01T21:41:53Z", "creator": "trawick@apache.org", "creation_time": "2005-04-01T21:41:53Z", "is_private": false, "text": "FWIW, I am able to hit the mod_cgid mess on the last Solaris 10 beta as well as\nSolaris 10 GA.  Prior beta builds of Solaris 10 did not have the problem.  I\nhaven't tested mod_ssl any.  This is 32-bit Solaris 10/x86 on Pentium 4.\n\nThe failure is intermittent.  Under CGI load, I have caused my box to reboot\nbefore, as mod_cgid daemon gets bogus data over the socket about how many bytes\nto allocate and tries to malloc too much.  I can't recreate the failure with\ndetailed tracing of one side of the socket (mod_cgid daemon or mod_cgid handler).\n\nThe root cause of the problem is some corruption of information about CGI\nenvironment variables which is sent from the cgid handler over to the cgid\ndaemon prior to creation of the CGI process.  I have tweaked the mod_cgid code\non both sides of the Unix socket to try to see what is required to trigger the\nproblem, but without success.\n\nMeanwhile, we don't have reports of this type of problem occur on any other\nplatform and it didn't occur on most of the publically-released beta versions of\nSolaris 10.  That doesn't mean it can't possibly be an Apache bug, but it seems\nfairly likely that it is NOT an Apache bug.  I've tried multiple levels of gcc\n(the two levels available from blastwave) with no change in behavior seen.\n\nSo: \nI'm suggesting that an Apache change to fix this may not be forthcoming, and\nthat you may see cgid problems without mod_ssl.  I'd recommend that you stick\nwith your prefork configuration (which uses mod_cgi and does not use a Unix\nsocket) for now.\n"}, {"count": 2, "tags": [], "creator": "jorton@redhat.com", "is_private": false, "text": "Is this actually mod_ssl-specific, it is only triggered by SSL requests?", "id": 73232, "time": "2005-04-04T10:12:41Z", "bug_id": 34264, "creation_time": "2005-04-04T10:12:41Z", "attachment_id": null}, {"count": 3, "tags": [], "text": "Oh, Jeff answered that.  Changing component to mod_cgid for the moment, given\nthat data.", "attachment_id": null, "id": 73264, "creator": "jorton@redhat.com", "time": "2005-04-04T17:18:04Z", "bug_id": 34264, "creation_time": "2005-04-04T17:18:04Z", "is_private": false}, {"count": 4, "tags": [], "creator": "gnevarez@gmail.com", "attachment_id": null, "text": "The problem also exists in other platforms. I'm using 2.0.54 on Win32 (XP,\ndevelopment machine). \n\nI have a similar problem with *some* client certificates during client\nauthentication in SSL. Using OpenSSL/0.9.7f  with 'SSLOptions +StdEnvVars\n+ExportCertData'\n\n[Thu May 05 13:30:20 2005] [error] [client 127.0.0.1] (22)Invalid argument:\ncouldn't create child process: 22: printenv.pl\n[Thu May 05 13:30:20 2005] [error] [client 127.0.0.1] (22)Invalid argument:\ncouldn't spawn child process: C:/apache/httpd/cgi-bin/printenv.pl\n\nThe certificate data is (from the firefox client cert window):\n\nIssued to: OID.2.5.4.41=#1311456D707265736120646520507275656261,CN=Empresa de\nPrueba,OU=Sucursal de Prueba,O=Empresa de Prueba,serialNumber=\" /\nAAAA010101HDFRXX00\",OID.2.5.4.45=#131C414141303130313031414141202F2041414141303130313031414141\n  Serial Number: 30:30:30:30:31:30:30:30:30:30:30:30:30:30:30:30:30:31:31:34\n  Valid from 8/2/2004 14:47:13 PM to 8/2/2006 14:47:13 PM\n  Purposes: Client,Server,Sign,Encrypt\nIssued by: O=Servicio de Administraci\u00f3n Tributaria,OU=Administraci\u00f3n de\nSeguridad de la Informaci\u00f3n,CN=AC de Pruebas SAT,C=MX,ST=\"Mexico, D.F.\",L=Ciudad\nde Mexico\n\nIt seems that it can't parse this DN, probably due to the unknown OID. Then the\ncgi invocation fails too because of corrupted data???\n\nProblem is: I depend on 'SSLOptions +StdEnvVars' working because all the info is\nsent via mod_jk  1.2.8 to Tomcat 5.5, and is used to AAA the users on a j2ee\nwebapp. It works ok with just \"+ExportCertData\", but other variables are\nrequired by settings such as:\n\nJkExtractSSL on\nJkHTTPSIndicator HTTPS\nJkCERTSIndicator SSL_CLIENT_CERT\n#JkCIPHERIndicator n/a ?\nJkSESSIONIndicator SSL_SESSION_ID\nJkKEYSIZEIndicator SSL_CIPHER_ALGKEYSIZE\nJkEnvVar SSL_CLIENT_M_SERIAL SSL_CLIENT_M_SERIAL\n\n", "id": 74503, "time": "2005-05-05T21:08:59Z", "bug_id": 34264, "creation_time": "2005-05-05T21:08:59Z", "is_private": false}, {"count": 5, "tags": [], "text": "Gerardo, that sounds like bug 13029, the bug covered here is mod_cgid specific.", "is_private": false, "id": 74505, "creator": "jorton@redhat.com", "time": "2005-05-05T22:25:54Z", "bug_id": 34264, "creation_time": "2005-05-05T22:25:54Z", "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 34264, "text": "Tnx Joe, will seek for resolution on that thread.", "count": 6, "id": 74622, "time": "2005-05-09T17:36:03Z", "creator": "gnevarez@gmail.com", "creation_time": "2005-05-09T17:36:03Z", "is_private": false}, {"count": 7, "tags": [], "bug_id": 34264, "attachment_id": null, "id": 77601, "time": "2005-07-23T13:07:32Z", "creator": "trawick@apache.org", "creation_time": "2005-07-23T13:07:32Z", "is_private": false, "text": "A little more data on mod_cgid vs. Solaris 10:\n\nBelow is a trace of the mod_cgid daemon process.  It is supposed to be reading\nlength (binary) followed by value of an environment variable.  The first two\nread() calls show this clearly.  Look at the next two read calls though.  It\nreads the length properly on the first call.  However, on the second call the\nenvironment variable is prefixed with the same binary length, as if the sender\nwrote the length twice.  It goes downhill from there, as the mod_cgid daemon is\nnow out of sync with the mod_cgid handler.  Next time it thinks it is reading\nthe length, it reads the last four bytes of the environment variable, and tries\nto allocate a huge amount of memory.\n\nIf you start the web server and run cgid daemon and other child processes under\ntruss (-u not needed), it works fine.  If you truss just the daemon, you can\nstill see the bogosity.\n\n/1:     read(10, \"\\0\\0\\011\", 4)                         = 4\n/1@1:                   <- libc:_read() = 4\n/1@1:                 <- libc:read() = 4\n/1@1:               <- mod_cgid:sock_read() = 0\n/1@1:               -> libapr-0:apr_palloc(0x14e410, 0x12, 0x4, 0xfffffff8)\n/1@1:               <- libapr-0:apr_palloc() = 0x14e9b8\n/1@1:               -> libc_psr:memset(0x14e9b8, 0x0, 0x12, 0xfffffff8)\n/1@1:               <- libc_psr:memset() = 0x14e9b8\n/1@1:               -> mod_cgid:sock_read(0xa, 0x14e9b8, 0x11, 0xfffffff8)\n/1@1:                 -> libc:read(0xa, 0x14e9b8, 0x11, 0x0)\n/1@1:                   -> libc:_save_nv_regs(0xff092238, 0x0, 0x0, 0x0)\n/1@1:                   <- libc:_save_nv_regs() = 0xff092238\n/1@1:                   -> libc:_read(0xa, 0x14e9b8, 0x11, 0x0)\n/1:     read(10, \" S E R V E R _ N A M E =\".., 17)      = 17\n/1@1:                   <- libc:_read() = 17\n/1@1:                 <- libc:read() = 17\n/1@1:               <- mod_cgid:sock_read() = 0\n/1@1:               -> mod_cgid:sock_read(0xa, 0xffbff870, 0x4, 0xfffffff8)\n/1@1:                 -> libc:read(0xa, 0xffbff870, 0x4, 0x0)\n/1@1:                   -> libc:_save_nv_regs(0xff092238, 0x0, 0x0, 0x0)\n/1@1:                   <- libc:_save_nv_regs() = 0xff092238\n/1@1:                   -> libc:_read(0xa, 0xffbff870, 0x4, 0x0)\n/1:     read(10, \"\\0\\0\\017\", 4)                         = 4\n/1@1:                   <- libc:_read() = 4\n/1@1:                 <- libc:read() = 4\n/1@1:               <- mod_cgid:sock_read() = 0\n/1@1:               -> libapr-0:apr_palloc(0x14e410, 0x18, 0x4, 0xfffffff8)\n/1@1:               <- libapr-0:apr_palloc() = 0x14e9d0\n/1@1:               -> libc_psr:memset(0x14e9d0, 0x0, 0x18, 0xfffffff8)\n/1@1:               <- libc_psr:memset() = 0x14e9d0\n/1@1:               -> mod_cgid:sock_read(0xa, 0x14e9d0, 0x17, 0xfffffff8)\n/1@1:                 -> libc:read(0xa, 0x14e9d0, 0x17, 0x0)\n/1@1:                   -> libc:_save_nv_regs(0xff092238, 0x0, 0x0, 0x0)\n/1@1:                   <- libc:_save_nv_regs() = 0xff092238\n/1@1:                   -> libc:_read(0xa, 0x14e9d0, 0x17, 0x0)\n/1:     read(10, \"\\0\\0\\017 S E R V E R _ A\".., 23)      = 23\n/1@1:                   <- libc:_read() = 23\n/1@1:                 <- libc:read() = 23\n/1@1:               <- mod_cgid:sock_read() = 0\n/1@1:               -> mod_cgid:sock_read(0xa, 0xffbff870, 0x4, 0xfffffff8)\n/1@1:                 -> libc:read(0xa, 0xffbff870, 0x4, 0x0)\n/1@1:                   -> libc:_save_nv_regs(0xff092238, 0x0, 0x0, 0x0)\n/1@1:                   <- libc:_save_nv_regs() = 0xff092238\n/1@1:                   -> libc:_read(0xa, 0xffbff870, 0x4, 0x0)\n/1:     read(10, \" . 2 3 2\", 4)                         = 4\n/1@1:                   <- libc:_read() = 4\n/1@1:                 <- libc:read() = 4\n/1@1:               <- mod_cgid:sock_read() = 0\n/1@1:               -> libapr-0:apr_palloc(0x14e410, 0x2e323333, 0x4, 0xfffffff8)\n\nThe sender does have the capability of repeating the call to write(), but only\nif it gets -1/EINTR:\n\nstatic apr_status_t sock_write(int fd, const void *buf, size_t buf_size)\n{\n    int rc;\n\n    do {\n        rc = write(fd, buf, buf_size);\n    } while (rc < 0 && errno == EINTR);\n    if (rc < 0) {\n        return errno;\n    }\n\n    return APR_SUCCESS;\n}\n\nBut adding a write to error log for the repeat case doesn't show a repeated call\nto write at the time that the server receives the binary envvar length twice.\n"}, {"count": 8, "tags": [], "text": "As a datapoint, I can reproduce massive problems with mod_cgid on\nhttpd.xones.apache.org box.  I ended up switching to prefork/mod_cgi, because I\nneeded CGI to work, but mod_cgid is seriously broken on Solaris 10.\n\nIf any @apache.org people need a Solaris 10 machine for testing, we can setup\naccounts on httpd.zones.apache.org\n\n", "is_private": false, "id": 77605, "creator": "chip@force-elite.com", "time": "2005-07-24T21:11:06Z", "bug_id": 34264, "creation_time": "2005-07-24T21:11:06Z", "attachment_id": null}, {"count": 9, "tags": [], "bug_id": 34264, "text": "FWIW, I can confirm that it has nothing to do with gcc.  I'm using Sun Forte 9 and I still see the same \nproblem.\n\nI'm going to update the summary accordingly.  Plus, I'm going to spend some time today dorking with this \none.", "id": 79079, "time": "2005-08-26T19:51:33Z", "creator": "jerenkrantz@apache.org", "creation_time": "2005-08-26T19:51:33Z", "is_private": false, "attachment_id": null}, {"count": 10, "attachment_id": null, "bug_id": 34264, "text": "Here's a 'dtrace' script:\n\nhttp://people.apache.org/~jerenkrantz/httpd.d\n\n./httpd.d 14581 15274\n\n(First pid is worker process; second is the cgid daemon.)\n\nHere's 'bad' output from an SMP x86 Solaris 10 box:\n\n  0  40471                    get_req:entry (15274) Entering get_req!\n  0     10                       read:entry read (15274) fd: 38 - 64 bytes\n  0     11                      read:return read (15274) fd: 38 - 64 bytes\n  0     11                      read:return\n  0     10                       read:entry read (15274) fd: 38 - 42 bytes\n  0     11                      read:return read (15274) fd: 38 - 42 bytes\n  0     11                      read:return\n/home/jerenk/public_html/weblog/weblog.cgi\n  0     10                       read:entry read (15274) fd: 38 - 10 bytes\n  0     11                      read:return read (15274) fd: 38 - 10 bytes\n  0     11                      read:return weblog.cgii/software/\n  0     10                       read:entry read (15274) fd: 38 - 20 bytes\n  0     11                      read:return read (15274) fd: 38 - 20 bytes\n  0     11                      read:return /weblog.cgi/software\n  0     10                       read:entry read (15274) fd: 38 - 4 bytes\n  0     11                      read:return read (15274) fd: 38 - 4 bytes\n  0     11                      read:return 1430084180\n  0     11                      read:return TZ=U\n  1     12                      write:entry write (14581) fd: 38 - 64 bytes\n  1     12                      write:entry\n  1     13                     write:return wrote (14581): 64\n  1     12                      write:entry write (14581) fd: 38 - 42 bytes\n  1     12                      write:entry\n/home/jerenk/public_html/weblog/weblog.cgi\n  1     13                     write:return wrote (14581): 42\n  1     12                      write:entry write (14581) fd: 38 - 10 bytes\n  1     12                      write:entry weblog.cgi\n  1     13                     write:return wrote (14581): 10\n  1     12                      write:entry write (14581) fd: 38 - 20 bytes\n  1     12                      write:entry /weblog.cgi/software\n  1     13                     write:return wrote (14581): 20\n  1     12                      write:entry write (14581) fd: 38 - 4 bytes\n  1     12                      write:entry\n  1     13                     write:return wrote (14581): 4\n  1     12                      write:entry write (14581) fd: 38 - 13 bytes\n  1     12                      write:entry TZ=US/Pacific\n  1     13                     write:return wrote (14581): 13\n  1     12                      write:entry write (14581) fd: 38 - 4 bytes\n  1     12                      write:entry $\n  1     13                     write:return wrote (14581): 4\n  1     12                      write:entry write (14581) fd: 38 - 36 bytes\n  1     12                      write:entry HTTP_HOST=weblog.erenkrantz.com:8080\n  1     13                     write:return wrote (14581): 36\n  1     12                      write:entry write (14581) fd: 38 - 4 bytes\n  1     12                      write:entry l\n  1     13                     write:return wrote (14581): 4\n  1     12                      write:entry write (14581) fd: 38 - 108 bytes\n  1     12                      write:entry HTTP_USER_AGENT=Mozilla/5.0\n(Macintosh; U; PPC Mac OS X Mach-O; en-US; rv:1.8b4) Gecko/20050819 Firefox/1.0+\n  1     13                     write:return wrote (14581): 108\n...snip...pid 15274 is done allocating 1430084180 bytes....\n  1     10                       read:entry read (15274) fd: 38 - 1430084180 bytes\n  1     11                      read:return read (15274): Short read:\n1430084180, 165\n  1     11                      read:return S/Pacific\n  1     10                       read:entry read (15274) fd: 38 - 1430084015 bytes\n  1     11                      read:return read (15274): Short read:\n1430084015, 1849\n  1     11                      read:return Data too large\n  1     10                       read:entry read (15274) fd: 38 - 1430082166 bytes\n  1     11                      read:return read (15274): Short read: 1430082166, 0\n  1     11                      read:return\n  1  40472                   get_req:return (15274) Leaving get_req!", "id": 79094, "time": "2005-08-27T00:40:37Z", "creator": "jerenkrantz@apache.org", "creation_time": "2005-08-27T00:40:37Z", "tags": [], "is_private": false}, {"count": 11, "tags": [], "bug_id": 34264, "attachment_id": null, "id": 79095, "time": "2005-08-27T01:39:21Z", "creator": "jerenkrantz@apache.org", "creation_time": "2005-08-27T01:39:21Z", "is_private": false, "text": "Responses on the OpenSolaris development lists (opensolaris-code@opensolaris.org) to my query:\n\nhttp://www.opensolaris.org/jive/thread.jspa?threadID=1957&tstart=0\n\nindicate the following:\n\n- mod_cgid uses AF_UNIX sockets\n- AF_UNIX was 'massively overhauled for Solaris 10, right near GA'\n- There are a number of AF_UNIX bugs that have fixes in the Sol10 patch pipeline\n   [Current versions of Solaris Express have the fixes already.]\n- One temporary workaround that was offered was to comment out the shutdown() call\n   around line mod_cgid.c:1431.\n\nI'll follow up with testing the shutdown() fix as well as trying out sol-nv-b19 next week.\n\nBut, this definitely isn't an httpd bug.  However, there is a possibility we can work around it though."}, {"count": 12, "tags": [], "bug_id": 34264, "attachment_id": null, "id": 79096, "time": "2005-08-27T02:00:27Z", "creator": "jerenkrantz@apache.org", "creation_time": "2005-08-27T02:00:27Z", "is_private": false, "text": "In my limited testing, commenting out the shutdown call doesn't seem to fix the problems for me.\n\nI'll try the Solaris Express stuff next week."}, {"count": 13, "tags": [], "text": "Based upon my examination, using snv_19 (current Solaris Express release) doesn't have this problem.  (I \nsubjected worker MPM'd httpd to flood'd CGI requests without problems.)\n\nI have committed a fix to trunk in r264866 to block usage of mod_cgid on Solaris 10.\n\nAfter the AF_UNIX patch from Sun is released (120664-01), we can detect for that patch and only allow \nmod_cgid usage in that scenario.", "attachment_id": null, "id": 79206, "creator": "jerenkrantz@apache.org", "time": "2005-08-30T23:24:03Z", "bug_id": 34264, "creation_time": "2005-08-30T23:24:03Z", "is_private": false}, {"count": 14, "tags": [], "text": "120664-01 has been released (9/13).  See\nhttp://sunsolve.sun.com/pub-cgi/show.pl?target=patches/xos-10&nav=pub-patches\n\nHas anybody tried it yet?\n\n(In a fit of disgust at several issues I overlaid my Sol10 installation with FC4.)\n", "attachment_id": null, "id": 80089, "creator": "trawick@apache.org", "time": "2005-09-18T17:06:53Z", "bug_id": 34264, "creation_time": "2005-09-18T17:06:53Z", "is_private": false}, {"count": 15, "tags": [], "bug_id": 34264, "attachment_id": null, "id": 82146, "time": "2005-11-05T10:42:36Z", "creator": "jerenkrantz@apache.org", "creation_time": "2005-11-05T10:42:36Z", "is_private": false, "text": "Yes, I believe 120664/120665 fixes it.  If not, please reopen this bug.\n\nFixes were committed in r326018 to detect a 'good' patch at configure time."}, {"count": 16, "tags": [], "text": "Footnote; 118833-36 cluster claims to superceed 120664-01\n\nHowever, I've heard at least one rumor that it doesn't solve this bug.\n\nSo someone with time on their hands aught to validate this so we can add\nthis newer cluster to the list of acceptable patches in ./configure", "is_private": false, "id": 106941, "creator": "wrowe@apache.org", "time": "2007-08-20T10:23:14Z", "bug_id": 34264, "creation_time": "2007-08-20T10:23:14Z", "attachment_id": null}, {"count": 17, "tags": [], "text": "This looks like PR#39332.  That bug has a proposed patch attached, which I've just reviewed and am applying to trunk.  Testing welcome!\n\n*** This bug has been marked as a duplicate of bug 39332 ***", "attachment_id": null, "id": 123548, "creator": "nick@webthing.com", "time": "2008-12-26T18:08:40Z", "bug_id": 34264, "creation_time": "2008-12-26T18:08:40Z", "is_private": false}]