[{"count": 0, "tags": [], "bug_id": 57177, "attachment_id": null, "id": 178922, "time": "2014-11-03T19:56:13Z", "creator": "dclarke@blastwave.org", "creation_time": "2014-11-03T19:56:13Z", "is_private": false, "text": "Tough to describe other than a core dump being thrown thus : \n\n(dbx) where                                                                                                                      \ncurrent thread: t@27\n  [1] 0xffffffff75b010d8(0x1006a8c50, 0x18, 0x6, 0x1006a8c50, 0x1006c6030, 0x1006c6030), at 0xffffffff75b010d8 \n=>[2] ap_increment_counts(sb = 0x1006a8bb0, r = 0x1006c6030), line 369 in \"scoreboard.c\"\n  [3] eor_bucket_cleanup(data = 0x1006aaa68), line 37 in \"eor_bucket.c\"\n  [4] run_cleanups(cref = 0x1006c6028), line 2352 in \"apr_pools.c\"\n  [5] apr_pool_destroy(pool = 0x1006c5fb8), line 804 in \"apr_pools.c\"\n  [6] eor_bucket_destroy(data = 0x1006c6030), line 90 in \"eor_bucket.c\"\n  [7] ssl_io_filter_output(f = 0x1006a92e8, bb = 0x1006aff58), line 1659 in \"ssl_engine_io.c\"\n  [8] ap_pass_brigade(next = 0x1006a92e8, bb = 0x1006aff58), line 590 in \"util_filter.c\"\n  [9] ssl_io_filter_coalesce(f = 0x1006a92c0, bb = 0x1006aff58), line 1558 in \"ssl_engine_io.c\"\n  [10] ap_pass_brigade(next = 0x1006a92c0, bb = 0x1006aff58), line 590 in \"util_filter.c\"\n  [11] ap_process_request_after_handler(r = 0x1006c6030), line 256 in \"http_request.c\"\n  [12] ap_process_async_request(r = 0x1006c6030), line 353 in \"http_request.c\"\n  [13] ap_process_http_async_connection(c = 0x1006a8c50), line 143 in \"http_core.c\"\n  [14] ap_process_http_connection(c = 0x1006a8c50), line 228 in \"http_core.c\"\n  [15] ap_run_process_connection(0x1006a8c50, 0x1006a88c0, 0x10009f5c8, 0x1001c3540, 0x1006a8bb0, 0x1006aa848), at 0x10007e1d8 \n  [16] process_socket(thd = 0x100281a98, p = 0x1006a8838, sock = 0x1006a88c0, cs = 0x1006a8bc8, my_child_num = 1, my_thread_num = 24), line 1035 in \"event.c\"\n  [17] worker_thread(thd = 0x100281a98, dummy = 0x10065b070), line 1875 in \"event.c\"\n  [18] dummy_worker(opaque = 0x100281a98), line 142 in \"thread.c\"\n(dbx) list\n  369           bytes = pfn_ap_logio_get_last_bytes(r->connection);\n  370       }\n  371       else if (r->method_number == M_GET && r->method[0] == 'H') {\n  372           bytes = 0;\n  373       }\n  374       else {\n  375           bytes = r->bytes_sent;\n  376       }\n  377   \n  378   #ifdef HAVE_TIMES\n\nNot sure how to proceed on this."}, {"count": 1, "text": "looks like http://svn.apache.org/viewvc?view=revision&revision=886324 can you try the patch?", "creator": "covener@gmail.com", "attachment_id": null, "id": 178923, "time": "2014-11-03T19:59:44Z", "bug_id": 57177, "creation_time": "2014-11-03T19:59:44Z", "tags": [], "is_private": false}, {"count": 2, "tags": [], "bug_id": 57177, "attachment_id": null, "id": 178924, "time": "2014-11-03T20:02:44Z", "creator": "covener@gmail.com", "creation_time": "2014-11-03T20:02:44Z", "is_private": false, "text": "sorry, that change is much older than I thought"}, {"count": 3, "tags": [], "creator": "dclarke@blastwave.org", "attachment_id": null, "text": "I have isolated httpd into a forground process with a very similar to near\nidentical config as the server that throws the core dumps. Have not been \nable to repeat the crash. \n\nThus far it seems to only happen when I do a graceful restart. \nTheree after I will see twenty or thirty core files an hour. \n\nI am not yet able to isolate what exactly is happening but I do have\n core files and that is a good start. \n\nI'll update this if I see something interesting. In the meanwhile it MAY\nbe a valid bug. Maybe.", "id": 178928, "time": "2014-11-03T22:53:36Z", "bug_id": 57177, "creation_time": "2014-11-03T22:53:36Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 57177, "text": "Looking at ap_sb_handle_t : \n\nstruct ap_sb_handle_t {\n    int child_num;\n    int thread_num;\n};\n\n\nand then :\n\nAP_DECLARE(void) ap_increment_counts(ap_sb_handle_t *sb, request_rec *r);\n\nThread 27 crashes in ap_increment_counts with pointers :\n\n       (sb = 0x1006a8bb0, r = 0x1006c6030)\n\nSo looking at memory at *sb we should see two integers :\n\n(dbx) x 0x1006a8bb0 / 16 x \n0x00000001006a8bb0: 0x0000 0x0001 0x0000 0x0018 0x0000 0x0000 0x0000 0x0000\n0x00000001006a8bc0: 0x0000 0x0001 0x006a 0x8bc8 0x0000 0x0001 0x006a 0x8bc8\n(dbx) print sizeof(int)   \nsizeof(int ) = 4\n\nSo my guess is that child_num is 1 and thread_num is 0x18h = 24.\n\n(dbx) print *sb\n*sb = {\n    child_num  = 1\n    thread_num = 24\n}\n\nSure, looks fine. \n\nNext we have that pesky request_rec r which will be a bit verbose :\n\n(dbx) print r \nr = 0x1006c6030\n\n(dbx) print *r\n*r = {\n    pool                 = 0x1006c5fb8\n    connection           = 0x1006a8c50\n    server               = 0x10028c1e0\n    next                 = 0x1006d0538\n    prev                 = (nil)\n    main                 = (nil)\n    the_request          = 0x1006c7318 \"GET / HTTP/1.0\"\n    assbackwards         = 0\n    proxyreq             = 0\n    header_only          = 0\n    proto_num            = 1000\n    protocol             = 0x1006c7348 \"HTTP/1.0\"\n    hostname             = 0x1006c73e0 \"dev.mydomain.ca\"\n    request_time         = 1415043364521974\n    status_line          = (nil)\n    status               = 401\n    method_number        = 0\n    method               = 0x1000b85b0 \"GET\"\n    allowed              = 0\n    allowed_xmethods     = (nil)\n    allowed_methods      = 0x1006c62e8\n    sent_bodyct          = 0\n    bytes_sent           = 0\n    mtime                = 0\n    range                = (nil)\n    clength              = 0\n    chunked              = 0\n    read_body            = 0\n    read_chunked         = 0\n    expecting_100        = 0\n    kept_body            = (nil)\n    body_table           = (nil)\n    remaining            = 0\n    read_length          = 0\n    headers_in           = 0x1006c6328\n    headers_out          = 0x1006c6a28\n    err_headers_out      = 0x1006c6c70\n    subprocess_env       = 0x1006c66a8\n    notes                = 0x1006c6e10\n    content_type         = (nil)\n    handler              = (nil)\n    content_encoding     = (nil)\n    content_languages    = (nil)\n    vlist_validator      = (nil)\n    user                 = (nil)\n    ap_auth_type         = 0x100293228 \"basic\"\n    unparsed_uri         = 0x1006c7338 \"/\"\n    uri                  = 0x1006c7340 \"/\"\n    filename             = 0x1006c7690 \"/usr/local/www/data/htdocs/\"\n    canonical_filename   = 0x1006c7690 \"/usr/local/www/data/htdocs/\"\n    path_info            = 0x1006c75eb \"\"\n    args                 = (nil)\n    used_path_info       = 2\n    eos_sent             = 1\n    per_dir_config       = 0x1006c7a20\n    request_config       = 0x1006c6fb0\n    log                  = 0x10028c200\n    log_id               = (nil)\n    htaccess             = 0x1006c79f8\n    output_filters       = 0x1006c7218\n    input_filters        = 0x1006c73f0\n    proto_output_filters = 0x1006c7218\n    proto_input_filters  = 0x1006c73f0\n    no_cache             = 0\n    no_local_copy        = 1\n    invoke_mtx           = 0x1006c74f0\n    parsed_uri           = {\n        scheme         = (nil)\n        hostinfo       = (nil)\n        user           = (nil)\n        password       = (nil)\n        hostname       = (nil)\n        port_str       = (nil)\n        path           = 0x1006c7340 \"/\"\n        query          = (nil)\n        fragment       = (nil)\n        hostent        = (nil)\n        port           = 0\n        is_initialized = 1U\n        dns_looked_up  = 0\n        dns_resolved   = 0\n    }\n    finfo                = {\n        pool       = 0x1006c5fb8\n        valid      = 7598960\n        protection = 1909\n        filetype   = APR_DIR\n        user       = 16411\n        group      = 20002\n        inode      = 424070U\n        device     = 1099511693323U\n        nlink      = 18\n        size       = 21\n        csize      = 1536\n        atime      = 1415040555872951\n        mtime      = 1414893925405310\n        ctime      = 1414893925405310\n        fname      = 0x1006c75d0 \"/usr/local/www/data/htdocs/\"\n        name       = (nil)\n        filehand   = (nil)\n    }\n    useragent_addr       = 0x1006a8a50\n    useragent_ip         = 0x1006a90b0 \"64.41.200.104\"\n}\n(dbx)\n\nWell I can confirm that the uid and gid of the target file fname\nis correct : \n\ndevl $ ls -ladin /usr/local/www/data/htdocs\n  424070 drwxrwxr-x 18 16411 20002 21 Nov 2 02:05 /usr/local/www/data/htdocs\n\n\nHere is where things get interesting. That ip address 64.41.200.104 is the\nguys at Qualys where I use their SSL tester to verify my config.  So whatever\nthey are fireing at this server causes it to toss a core file. \n\nI'll try that again and see if I can get a full trace.", "id": 178932, "time": "2014-11-03T23:28:04Z", "creator": "dclarke@blastwave.org", "creation_time": "2014-11-03T23:28:04Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "creator": "dclarke@blastwave.org", "attachment_id": null, "text": "Am happy to report that re-running the SSL scan tests from Qualys SSL Labs does not cause any ill effects UNTIL I issue an apachectl graceful.  Then I get a pile of core files tossed : \n\ndevl# cd  /var/crash/dev/coredump/\ndevl# ls -1tr *.core \nnode_dev-host_sun4v-zone_z_001-time_1415058824-pid_14569-uid_80-gid_80-fid_httpd.core\nnode_dev-host_sun4v-zone_z_001-time_1415058857-pid_14567-uid_80-gid_80-fid_httpd.core\nnode_dev-host_sun4v-zone_z_001-time_1415058858-pid_14572-uid_80-gid_80-fid_httpd.core\nnode_dev-host_sun4v-zone_z_001-time_1415058858-pid_14566-uid_80-gid_80-fid_httpd.core\nnode_dev-host_sun4v-zone_z_001-time_1415058876-pid_14565-uid_80-gid_80-fid_httpd.core\n\n\nI will check each one to see what is happening here after a graceful restart.", "id": 178933, "time": "2014-11-03T23:59:32Z", "bug_id": 57177, "creation_time": "2014-11-03T23:59:32Z", "is_private": false}, {"count": 6, "tags": [], "creator": "rainer.jung@kippdata.de", "attachment_id": null, "text": "There's two occurences of\n\npfn_ap_logio_get_last_bytes = APR_RETRIEVE_OPTIONAL_FN(ap_logio_get_last_bytes);\n\nin server/scoreboard.c. It looks like none of the two runs after your graceful restart. Could you add a log line to each of the two and check, whether they run or not after gracefully restarting?\n\nThe line retrieves the address of a callback function in mod_logio which is called during the crash. If the load order of the modules changes duriung graceful restart, then the old address doesn't point any longer to the correct function. Therefore the address needs to be updated after restart.", "id": 178937, "time": "2014-11-04T08:42:18Z", "bug_id": 57177, "creation_time": "2014-11-04T08:42:18Z", "is_private": false}, {"count": 7, "attachment_id": null, "creator": "rainer.jung@kippdata.de", "text": "And: as a short term workaround: if you do not need mod_logio, you can disable the module by not loading it. That should stop your problem (but doesn't fix the underlying code bug).", "id": 178938, "time": "2014-11-04T08:43:06Z", "bug_id": 57177, "creation_time": "2014-11-04T08:43:06Z", "tags": [], "is_private": false}, {"count": 8, "tags": [], "creator": "ylavic.dev@gmail.com", "attachment_id": 32188, "text": "Created attachment 32188\nInitialize the scoreboard API (not the data) on graceful restarts\n\nOne way to fix the issue.\n\nThis patch moves the static optional function(s) initialization from ap_calc_scoreboard_size() to ap_init_scoreboard(), so that when the latter is called with no data to initialize (NULL), it will only make its optional function(s) point to the right location.\n\nHence each MPM is also modified to call ap_init_scoreboard(NULL) on graceful restarts.\n\nDennis, can you please verify this works for you (mod_logio loaded still)?", "id": 178951, "time": "2014-11-04T11:47:48Z", "bug_id": 57177, "creation_time": "2014-11-04T11:47:48Z", "is_private": false}, {"text": "Created attachment 32189\nInitialize the scoreboard API (not the data) on graceful restarts\n\nMinor change to call ap_init_scoreboard(NULL) from ap_create_scoreboard() when the scoreboard image exists already (only).\n\nThis avoids a double APR_RETRIEVE_OPTIONAL_FN() call when the image is to be created and allows for such initializations to be centralized in ap_init_scoreboard().", "tags": [], "creator": "ylavic.dev@gmail.com", "attachment_id": 32189, "count": 9, "id": 178953, "time": "2014-11-04T12:26:11Z", "bug_id": 57177, "creation_time": "2014-11-04T12:26:11Z", "is_private": false}, {"count": 10, "text": "entirely tangential comment : \nWorking on it. I keep getting interrupted by people and their interpretation\nof \"work\".", "creator": "dclarke@blastwave.org", "attachment_id": null, "id": 178967, "time": "2014-11-04T19:59:48Z", "bug_id": 57177, "creation_time": "2014-11-04T19:59:48Z", "tags": [], "is_private": false}, {"count": 11, "tags": [], "creator": "ylavic.dev@gmail.com", "attachment_id": null, "text": "Dennys, any news on this, did you try the patch (attachment 32189)?", "id": 180501, "time": "2015-01-23T08:34:09Z", "bug_id": 57177, "creation_time": "2015-01-23T08:34:09Z", "is_private": false}, {"count": 12, "tags": [], "text": "Sorry for the delay. I have been distracted by work on oher items and that includes this thing : \n\n    https://issues.apache.org/bugzilla/show_bug.cgi?id=56324\n\nAlso we have a large exploit in PHP today and a new OpenSSL major release and CMAKE issues etc etc.\n\nPromise I will get into this on this weekend.", "attachment_id": null, "id": 180536, "creation_time": "2015-01-23T22:04:01Z", "time": "2015-01-23T22:04:01Z", "creator": "dclarke@blastwave.org", "bug_id": 57177, "is_private": false}, {"count": 13, "tags": [], "bug_id": 57177, "text": "I've seen that one on CentOS 7 using httpd-2.4.6-19.el7.centos.x86_64:\n\n(gdb) bt\n#0  0x00007f96e0e7eb60 in ?? ()\n#1  0x00007f96e7d253c2 in ap_increment_counts (sb=0x7f96e9fc2350, r=r@entry=0x7f96e9fc8190)\n    at scoreboard.c:369\n#2  0x00007f96e7d36190 in eor_bucket_cleanup (data=<optimized out>) at eor_bucket.c:37\n#3  0x00007f96e69f615e in run_cleanups (cref=0x7f96e9fc8188) at memory/unix/apr_pools.c:2352\n#4  apr_pool_destroy (pool=0x7f96e9fc8118) at memory/unix/apr_pools.c:804\n#5  0x00007f96e7d362a6 in remove_empty_buckets (bb=bb@entry=0x7f96e9fc2b28) at core_filters.c:716\n#6  0x00007f96e7d36648 in send_brigade_nonblocking (s=s@entry=0x7f96e9fc2160, bb=bb@entry=0x7f96e9fc2b28, \n    bytes_written=bytes_written@entry=0x7f96e9fc2a60, c=c@entry=0x7f96e9fc2350) at core_filters.c:705\n#7  0x00007f96e7d37301 in send_brigade_blocking (c=0x7f96e9fc2350, bytes_written=0x7f96e9fc2a60, \n    bb=0x7f96e9fc2b28, s=0x7f96e9fc2160) at core_filters.c:729\n#8  ap_core_output_filter (f=0x7f96e9fc2928, new_bb=0x7f96e9fc2b28) at core_filters.c:542\n#9  0x00007f96e7d50489 in ap_process_request (r=r@entry=0x7f96e9fc8190) at http_request.c:369\n#10 0x00007f96e7d4cdb2 in ap_process_http_sync_connection (c=0x7f96e9fc2350) at http_core.c:190\n#11 ap_process_http_connection (c=0x7f96e9fc2350) at http_core.c:231\n#12 0x00007f96e7d44e30 in ap_run_process_connection (c=0x7f96e9fc2350) at connection.c:41\n#13 0x00007f96e7d45218 in ap_process_connection (c=c@entry=0x7f96e9fc2350, csd=<optimized out>)\n    at connection.c:202\n#14 0x00007f96dd6947ef in child_main (child_num_arg=child_num_arg@entry=1) at prefork.c:704\n#15 0x00007f96dd694a26 in make_child (s=0x7f96e9eb0348, slot=slot@entry=1) at prefork.c:800\n#16 0x00007f96dd695191 in prefork_run (_pconf=<optimized out>, plog=<optimized out>, s=<optimized out>)\n    at prefork.c:1051\n#17 0x00007f96e7d220fe in ap_run_mpm (pconf=0x7f96e9e85138, plog=0x7f96e9eb2358, s=0x7f96e9eb0348)\n    at mpm_common.c:96\n#18 0x00007f96e7d1b726 in main (argc=3, argv=0x7fff42952e28) at main.c:777\n\n\nEasy reproducable, just sending SIGHUP while under load. I can also confirm that it is nor reproducable without mod_logio.", "id": 181275, "time": "2015-02-23T20:07:29Z", "creator": "jw@vtoc.de", "creation_time": "2015-02-23T20:07:29Z", "is_private": false, "attachment_id": null}, {"count": 14, "text": "(In reply to jw from comment #13)\n> \n> Easy reproducable, just sending SIGHUP while under load. I can also confirm\n> that it is nor reproducable without mod_logio.\n\n\nDoes the patch from attachment 32189 help?", "creator": "ylavic.dev@gmail.com", "attachment_id": null, "id": 181290, "time": "2015-02-24T09:53:42Z", "bug_id": 57177, "creation_time": "2015-02-24T09:53:42Z", "tags": [], "is_private": false}, {"count": 15, "tags": [], "bug_id": 57177, "text": "\nMinor update. I am moving on with checking this on recent 2.4.12 release thus : \n\nnode000 # /usr/local/bin/httpd -V\nServer version: Apache/2.4.12 (Unix)\nServer built:   Mar 22 2015 08:29:39\nServer's Module Magic Number: 20120211:41\nServer loaded:  APR 1.5.1, APR-UTIL 1.5.3\nCompiled using: APR 1.5.1, APR-UTIL 1.5.4\nArchitecture:   64-bit\nServer MPM:     event\n  threaded:     yes (fixed thread count)\n    forked:     yes (variable process count)\nServer compiled with....\n -D APR_HAS_SENDFILE\n -D APR_HAS_MMAP\n -D APR_HAVE_IPV6 (IPv4-mapped addresses enabled)\n -D APR_USE_PROC_PTHREAD_SERIALIZE\n -D APR_USE_PTHREAD_SERIALIZE\n -D SINGLE_LISTEN_UNSERIALIZED_ACCEPT\n -D APR_HAS_OTHER_CHILD\n -D AP_HAVE_RELIABLE_PIPED_LOGS\n -D DYNAMIC_MODULE_LIMIT=256\n -D HTTPD_ROOT=\"/usr/local\"\n -D SUEXEC_BIN=\"/usr/local/bin/suexec\"\n -D DEFAULT_PIDLOG=\"www/var/logs/httpd.pid\"\n -D DEFAULT_SCOREBOARD=\"logs/apache_runtime_status\"\n -D DEFAULT_ERRORLOG=\"logs/error_log\"\n -D AP_TYPES_CONFIG_FILE=\"www/conf/mime.types\"\n -D SERVER_CONFIG_FILE=\"www/conf/httpd.conf\"\n\n\nFirst odd problem that I wonder about is that the loaded APR-UTIL version does not match the version I compiled with. Regardless, I will get back to the main issue with scoreboard.c if it still exists.", "id": 181937, "time": "2015-03-22T09:35:23Z", "creator": "dclarke@blastwave.org", "creation_time": "2015-03-22T09:35:23Z", "is_private": false, "attachment_id": null}, {"count": 16, "tags": [], "bug_id": 57177, "attachment_id": null, "id": 181985, "time": "2015-03-23T08:08:33Z", "creator": "ylavic.dev@gmail.com", "creation_time": "2015-03-23T08:08:33Z", "is_private": false, "text": "Simpler patch committed in r1668532."}, {"count": 17, "tags": [], "bug_id": 57177, "attachment_id": null, "id": 183533, "time": "2015-06-15T14:13:33Z", "creator": "RLehmann.external@V-TServices.unicredit.de", "creation_time": "2015-06-15T14:13:33Z", "is_private": false, "text": "Hi,\n\nI stumbled across the same problem last week. I am using the latest official Apache 2.4.12 sources with a gcc 3.4.3 on Solaris 10.\n\nUnfortunately the simpler patch  r1668532 (changed core.c, scoreboard.c) did not fix the problem. Same bus error, same stacktrace.\n\nconfigure option --enable-pie didn't work either\nconfigure option --enable-logio=static works. No more bus errors.\n\nBut of course with this error, I think there is room for more problems. Currently I am experiencing more apache processes in state \"G\" and they increase with every graceful restart. I have to investigate further."}, {"count": 18, "attachment_id": null, "creator": "ylavic.dev@gmail.com", "text": "The fix backported to 2.4.13 (available in upcoming 2.4.15) also includes r1668553 (in addition to r1668532).\n\nCan you try if both patches applied work?", "id": 183538, "time": "2015-06-15T14:34:36Z", "bug_id": 57177, "creation_time": "2015-06-15T14:34:36Z", "tags": [], "is_private": false}, {"count": 19, "tags": [], "bug_id": 57177, "attachment_id": null, "id": 183591, "time": "2015-06-17T07:08:47Z", "creator": "RLehmann.external@V-TServices.unicredit.de", "creation_time": "2015-06-17T07:08:47Z", "is_private": false, "text": "Just noticed, that core.c does not compile with Apache source 2.4.12.\nSo my previous comment is not quite right, because I am sure I ran with the unpatched httpd.\n\nSo I think there is no patch for 2.4.12, right?\n\nThanks"}, {"count": 20, "attachment_id": null, "creator": "rainer.jung@kippdata.de", "text": "Can you try the workaround of disabling mod_logio (not using LoadModule to load it). Does that work for you?", "id": 183592, "time": "2015-06-17T07:23:17Z", "bug_id": 57177, "creation_time": "2015-06-17T07:23:17Z", "tags": [], "is_private": false}, {"count": 21, "text": "(In reply to Rainer Jung from comment #20)\n> Can you try the workaround of disabling mod_logio (not using LoadModule to\n> load it). Does that work for you?\n\nMore precisely: stop the web server, remove the LoadModule for mod_logio, then start it and after that try to do whatever caused the crash for you.", "creator": "rainer.jung@kippdata.de", "attachment_id": null, "id": 183593, "time": "2015-06-17T07:35:06Z", "bug_id": 57177, "creation_time": "2015-06-17T07:35:06Z", "tags": [], "is_private": false}, {"count": 22, "tags": [], "creator": "RLehmann.external@V-TServices.unicredit.de", "attachment_id": null, "text": "Disableing mod_logio or make it static in the webserver works. No more bus errors", "id": 183607, "time": "2015-06-17T14:08:58Z", "bug_id": 57177, "creation_time": "2015-06-17T14:08:58Z", "is_private": false}, {"count": 23, "attachment_id": null, "creator": "RLehmann.external@V-TServices.unicredit.de", "text": "I can confirm that the bug is also gone in 2.4.14.\nPatches seem to be ok.\n\nUnfortunately every graceful restart of apache creates several new processes stuck in \"G\" state. pstack does not show any difference between the stuck processes and the ones still working.\nThis was already the case with 2.4.12\n\nHere is s sample stack trace, but currently I can't see a direct connection to this bug:\n\n10108:  /opt/apache24/bin/httpd -f /opt/apache24/conf/httpd.conf-UGIRQJ -DIT -\n ffffffff7dbdcbc0 lwp_mutex_timedlock (ffffffff7a200000, 0)\n ffffffff7dbd0b74 mutex_lock_internal (ffffffff7a200000, 0, 1, ffffffff7dd00200, 51, 1) + 1dc\n ffffffff7e827584 proc_mutex_proc_pthread_acquire (1003188a8, 1003382d0, 0, 0, 0, 100324cc0) + 10\n ffffffff7e828000 apr_proc_mutex_lock (1003188a8, 0, 2, 0, 0, 1003268a8) + 18\n 00000001000a8d80 accept_mutex_on (8, 2, 0, 11, 1003208c8, 1001ccb64) + 20\n 00000001000aae60 child_main (11, 1000a993c, 0, ffffffff7dd00200, 0, ffffffff7dd4a360) + 9f4\n 00000001000ab658 make_child (10021d708, 11, 0, 0, 10021d708, ffffffff7ffff610) + 318\n 00000001000acde0 prefork_run (1001d9ad8, 100207cc8, 10021d708, 10021d708, 100313b60, 0) + dc8\n 0000000100038ca4 ap_run_mpm (1001d9ad8, 100207cc8, 10021d708, 10021d708, 101010100000000, ffffffff7ffff828) + c4\n 000000010002b29c main (6, ffffffff7ffff968, ffffffff7ffff9a0, 1001cd948, 100000000, ffffffff7dd00200) + 19f8\n 0000000100027ccc _start (0, 0, 0, 0, 0, 0) + 7c", "id": 183608, "time": "2015-06-17T14:23:50Z", "bug_id": 57177, "creation_time": "2015-06-17T14:23:50Z", "tags": [], "is_private": false}, {"count": 24, "tags": [], "bug_id": 57177, "attachment_id": null, "id": 183609, "time": "2015-06-17T14:27:47Z", "creator": "ylavic.dev@gmail.com", "creation_time": "2015-06-17T14:27:47Z", "is_private": false, "text": "(In reply to Ralf Lehmann from comment #23)\n> I can confirm that the bug is also gone in 2.4.14.\n> Patches seem to be ok.\n\nThanks for testing, I'm closing this report."}, {"count": 25, "tags": [], "creator": "ylavic.dev@gmail.com", "attachment_id": null, "text": "(In reply to Ralf Lehmann from comment #23)\n> \n> Unfortunately every graceful restart of apache creates several new processes\n> stuck in \"G\" state. pstack does not show any difference between the stuck\n> processes and the ones still working.\n\nIt may be related to Bug 49504, otherwise please open a new report.", "id": 183610, "time": "2015-06-17T14:32:13Z", "bug_id": 57177, "creation_time": "2015-06-17T14:32:13Z", "is_private": false}]