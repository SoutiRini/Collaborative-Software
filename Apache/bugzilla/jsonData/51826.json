[{"count": 0, "tags": [], "text": "Author: Jacek Czerski\nTask added by: Adrian Bala\n\nEnabling / disabling variables in User Defined Variables control.\n\nFor now variable has to be deleted or renamed which is quite inconvenient.", "attachment_id": null, "bug_id": 51826, "id": 149273, "time": "2011-09-15T13:27:29Z", "creator": "adrian.bala@gmail.com", "creation_time": "2011-09-15T13:27:29Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 51826, "attachment_id": null, "text": "I think this is the same situation as mine.  I have some user defined variables:\n\nSERVER_NAME          myhost.com\nTHE_HTTP_PROTOCOL    HTTP\nLOOP_COUNT           2\n\nThen, I use a Recording Controller to capture my browser actions. Unfortunately, JMeter does more variable substitution than I'd like it to.  For example, it substitutes ${LOOP_COUNT} into a web site name that contains \"2\", e.g., /host${LOOP_COUNT}/somePage.  My favorite example of over-zealous variable substitution is my ${THE_${THE_HTTP_PROTOCOL}_PROTOCOL} Header Manager.\n\nI'd like the recording to be more selective about what variables can be used for substitution.  For example, of the variables I've listed, I'd really only like SERVER_NAME to be substituted in.\n\nI'm using JMeter 2.11.", "id": 173802, "time": "2014-03-13T17:22:20Z", "creator": "casselltx@netzero.net", "creation_time": "2014-03-13T17:22:20Z", "is_private": false}, {"count": 2, "tags": [], "text": "I think this is the same situation as mine.  I have some user defined variables:\n\nSERVER_NAME          myhost.com\nTHE_HTTP_PROTOCOL    HTTP\nLOOP_COUNT           2\n\nThen, I use a Recording Controller to capture my browser actions. Unfortunately, JMeter does more variable substitution than I'd like it to.  For example, it substitutes ${LOOP_COUNT} into a web site name that contains \"2\", e.g., /host${LOOP_COUNT}/somePage.  My favorite example of over-zealous variable substitution is my ${THE_${THE_HTTP_PROTOCOL}_PROTOCOL} Header Manager.\n\nI'd like the recording to be more selective about what variables can be used for substitution.  For example, of the variables I've listed, I'd really only like SERVER_NAME to be substituted in.\n\nI'm using JMeter 2.11.", "is_private": false, "bug_id": 51826, "id": 173803, "time": "2014-03-13T17:24:11Z", "creator": "casselltx@netzero.net", "creation_time": "2014-03-13T17:24:11Z", "attachment_id": null}, {"count": 3, "text": "I think there are two aspects to this.\n\n1) excluding variables from substitution\n\nThis can be done by using multiple UDV elements and disabling the ones that should not be used.\n\n2) limiting matches to certain contexts only.\n\nThis is already supported by the recorder; enable Regex Matching\n\nAre those features not sufficient?", "bug_id": 51826, "attachment_id": null, "id": 173804, "time": "2014-03-13T17:56:27Z", "creator": "sebb@apache.org", "creation_time": "2014-03-13T17:56:27Z", "tags": [], "is_private": false}, {"count": 4, "tags": [], "text": "(In reply to Sebb from comment #3)\n> I think there are two aspects to this.\n> \n> 1) excluding variables from substitution\n> \n> This can be done by using multiple UDV elements and disabling the ones that\n> should not be used.\n> \n> 2) limiting matches to certain contexts only.\n> \n> This is already supported by the recorder; enable Regex Matching\n> \n> Are those features not sufficient?\n\nI've been arguing with myself about what the proper behavior of the variable substitution feature should be, and I think I am now agreeing with you.\n\nI think my problem is mostly a matter of variable scoping, that is, variables should generally be defined such that they are in scope only where they are needed.  In our naive implementation, we had too many variables at a global scope.\n\nThere is still the problem of substituting the correct variable into the correct place in the recorded text; however, I can't think of a simple, effective algorithm that can determine how to do so.  The regex matching isn't ideal, but it does help for the majority of simple cases.\n\nI am content to have this proposed enhancement discarded.", "attachment_id": null, "bug_id": 51826, "id": 173817, "time": "2014-03-14T12:06:03Z", "creator": "casselltx@netzero.net", "creation_time": "2014-03-14T12:06:03Z", "is_private": false}]