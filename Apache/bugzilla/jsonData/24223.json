[{"count": 0, "tags": [], "text": "This task has options to find a file in a set of directories. \nIt would often be useful to have access to the complete filename, i.e. if the\nfile is found on one of given paths, it will be set as the property value\ninstead of the default value \"true\". I suggest that this behavior is turned on\nby a new boolean attribute, called for instance \"receivefilename\".\nExample:\n<available file=\"my.jar\" property=\"my.jar.path\">\n  <fileset>\n    ...\n  </fileset>\n</available>\n\nAfter this, the property \"my.jar.path\" contains expanded pathname to the file\n(including the filename) or is not set if not found.", "is_private": false, "id": 46450, "creator": "pkozelka@centrum.cz", "time": "2003-10-29T17:14:14Z", "bug_id": 24223, "creation_time": "2003-10-29T17:14:14Z", "attachment_id": null}, {"count": 1, "tags": [], "text": "sorry I forgot the suggested attribute \"receivefilename\".\nThe example should look like this:\n\n<available file=\"my.jar\" property=\"my.jar.path\" receivefilename=\"true\">\n  <fileset>\n    ...\n  </fileset>\n</available>\n", "attachment_id": null, "id": 46452, "creator": "pkozelka@centrum.cz", "time": "2003-10-29T17:24:27Z", "bug_id": 24223, "creation_time": "2003-10-29T17:24:27Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 24223, "is_private": false, "text": "Can't you get fairly equivalent functionality using a <fileset> and \n<pathconvert>?", "id": 46453, "time": "2003-10-29T17:27:55Z", "creator": "mbenson@apache.org", "creation_time": "2003-10-29T17:27:55Z", "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 24223, "is_private": false, "count": 3, "id": 46455, "time": "2003-10-29T17:40:51Z", "creator": "pkozelka@centrum.cz", "creation_time": "2003-10-29T17:40:51Z", "text": "basically, yes, but:\n- maybe yes, although I cant figure out how to make pathconvert do a lookup for\nthe file\n- it would anyway be much less straightforward\n- it would probably mean introducing just another property name, thus increasing\nthe property jungle\n- there is a bad issue with pathconvert: it is not crossplatform. According to\ndocumentation, when using pathcovert, you must always know which is the target\nplatform, because you either have to explicitly specify it, or you must specify\nseparator chars which are platform dependent. Therefore I would have to write a\nsequence of many pathconvert tasks each equipped with condition checking one\nspecific platform.\n\nI believe that good approach is that simple things are doable by simple means -\nwhich hopefuly my suggestion defines."}, {"count": 4, "tags": [], "text": "You set up a fileset that can find the file you want.  If you invoke \n<pathconvert> and pass it this fileset, you should be able to specify \npathsep=\"\" or \" \"; the property will then be written using the default \nfileseparatorchar (dirsep) of the platform on which you are running.  The only \ncaveat I can see is that if multiple files are found you would get them all...\n\nWhile we are on the subject of <pathconvert>, can anyone say why either \ntargetos or one of dirsep/pathsep is required?  Why couldn't the targetos just \ndefault to the current platform?\n\n-Matt", "is_private": false, "bug_id": 24223, "id": 46462, "time": "2003-10-29T18:12:57Z", "creator": "mbenson@apache.org", "creation_time": "2003-10-29T18:12:57Z", "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 24223, "attachment_id": null, "is_private": false, "id": 46497, "time": "2003-10-30T09:36:15Z", "creator": "pkozelka@centrum.cz", "creation_time": "2003-10-30T09:36:15Z", "text": "ok, thanks for the explanation, and for the undocumented info about pathconvert.\nStill I am afraid that the issue with multiple files is serious enough, isn't it ?\nAnd one argument for the suggested solution remains: it is so simple... the\n<available> task is quite ready for this, because there must be a place where a\nfirst occurence is known...\n\nFor the version 2, which is less constrained by compatibility, I would even\nsuggest that if you don't specify any value, this behavior -using full pathname\nas the value - would be the default.\n\nConcerning pathconvert, I think that defaulting to current platform would be\nvery logical and consistent with other ant tasks."}, {"count": 6, "tags": [], "bug_id": 24223, "attachment_id": null, "id": 46659, "time": "2003-11-03T10:38:13Z", "creator": "jan@materne.de", "creation_time": "2003-11-03T10:38:13Z", "is_private": false, "text": "While writing a tutorial I created a <find> task which store the absolute \npathname of a file as a property or as a list (if multiple are found).\n\nTutorial\nhttp://cvs.apache.org/viewcvs.cgi/ant/docs/manual/tutorial-tasks-filesets-\nproperties.html\n\nSources\nhttp://cvs.apache.org/viewcvs.cgi/ant/docs/manual/tutorial-tasks-filesets-\nproperties.zip\n\n\nBecause I have to do some renaming things (<whichfile> according to the \nexisting <whichresource> task) I haven\u00b4t committed that yet."}, {"count": 7, "tags": [], "bug_id": 24223, "is_private": false, "text": "also, you might want to have a look at http://sourceforge.net/projects/isvalidator ", "id": 60596, "time": "2004-07-14T08:57:29Z", "creator": "hauser@acm.org", "creation_time": "2004-07-14T08:57:29Z", "attachment_id": null}, {"count": 8, "tags": [], "text": "From Ant 1.7 forth you can accomplish this using the approach in bug 34839.  As \nfor the multiple file vs. one file only issue, you could write a custom <first> \nResourceCollection that wraps another ResourceCollection, but only returns its \nfirst element.\n\nThanks\n\n*** This bug has been marked as a duplicate of 34839 ***", "attachment_id": null, "bug_id": 24223, "id": 75553, "time": "2005-05-28T00:32:39Z", "creator": "mbenson@apache.org", "creation_time": "2005-05-28T00:32:39Z", "is_private": false}]