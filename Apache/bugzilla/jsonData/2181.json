[{"count": 0, "tags": [], "bug_id": 2181, "text": "the ThrowableInformation class, although serializable, declares its private \nThrowable to be transient.  Thus, when a LoggingEvent is serialized and then de-\nserialized LoggingEvent.getThrowableInfo().getThrowable() always returns null \neven if a Throwable was contained in the original LoggingEvent.  In particular, \nthe SocketAppender fails to fully transmit LoggingEvents containing a Throwable.\n\nFix: change the ThrowableInformation class so that the private Throwable \nvariable is no longer transient.\n\nWorkaround: subclass socket appender, override so that the information from a \nLoggingEvent's throwable information is replaced by an instance which is a \nsubclass of ThrowableInformation that has a non-transient variable holding the \nThrowable.\n\nthe fix would involve removing one word on a private variable declaration.\nimplementing the workaround would be annyoing.", "id": 2988, "time": "2001-06-14T08:23:07Z", "creator": "richardwan@servidium.com", "creation_time": "2001-06-14T08:23:07Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 2181, "text": "\nPlease look at LoggingEvent.getThrowableStrRep(). Let me know if that's not \nenough. Ceki", "id": 2992, "time": "2001-06-14T08:54:17Z", "creator": "bugzilla@apache.org", "creation_time": "2001-06-14T08:54:17Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "creator": "thoth@incanta.net", "attachment_id": null, "text": "I tried removing the transient flag in my source and I still can't get a\nSocketNode to log the stack trace information ( %C{1}.%M:%L ) from a remote\nlogging event.\n\nDoes anyone know how to get this information across the socket?\n\nThis bug appears to lack any resolution even if it is resolved.\n", "id": 4742, "time": "2001-08-22T14:17:42Z", "bug_id": 2181, "creation_time": "2001-08-22T14:17:42Z", "is_private": false}, {"count": 3, "tags": [], "creator": "richardwan@servidium.com", "attachment_id": null, "text": "Ceki explained that the java.lang.Throwable, although serializable,\ndeclares its stacktrace info as transient. Thus making the Throwable\nnon-transient does not help at getting the stack trace info across\nthe socket appender.\n\nLoggingEvent has a getThrowableInfo method which in turn gives access\nto the stacktrace as a String[].", "id": 4779, "time": "2001-08-23T16:07:55Z", "bug_id": 2181, "creation_time": "2001-08-23T16:07:55Z", "is_private": false}]