[{"count": 0, "tags": [], "creator": "mwick@loftware.com", "attachment_id": 30681, "id": 169182, "time": "2013-08-06T14:05:27Z", "bug_id": 55368, "creation_time": "2013-08-06T14:05:27Z", "is_private": false, "text": "Created attachment 30681\nReproduction Case\n\nType 4 JDBC drivers included in ${CATALINA_HOME}/lib, or the CLASSPATH in general, should be auto-registered so that they can be loaded the first time they are accessed.  This works up through Tomcat 6.0.33.  It does not work in Tomcat 6.0.35; only the ODBC-JDBC bridge driver is auto-registered.  \n\nIt appears that this is a result of the work done to fix bug 51640.  If I provide the attribute driverManagerProtection=\"false\" to the JreMemoryLeakPreventionListener, effectively disabling the fix for 51640, the drivers auto-register as they did before.\n\nI have attached a small JSP page and instructions that show this behavior.\n\nThis is being run under Java 1.7.0_25.  Tomcat is not being run behind a web server.  We are running Coyote and the AJP connector."}, {"count": 1, "tags": [], "bug_id": 55368, "attachment_id": null, "text": "I'll wait for someone more knowledgeable to chime in, but if I remember the discussion correctly this is actually the intended behavior.\n\nDriverManager is really just a big memory leak waiting to happen. If you load a JDBC Driver from the wrong ClassLoader (for example, if you put a JDBC driver in /WEB-INF/lib, which you really shouldn't do anyway), when it registers with the DriverManager the Class and Driver instance leak into the System ClassLoader. The Driver can then be accessed from any code in the JVM, including other web applications. This is a design flaw in the DriverManager (at least, many people feel that way) that will probably never be fixed.\n\nIIRC, the fix for bug 51640 intentionally resulted in stopping DriverManager from automatically discovering and loading Drivers because that was the best way to fix the problem. But I could be mistaken.", "id": 169183, "time": "2013-08-06T14:16:57Z", "creator": "nicholas@nicholaswilliams.net", "creation_time": "2013-08-06T14:16:57Z", "is_private": false}, {"count": 2, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "text": "Nick is correct.\n\nThe default setting for driverManagerProtection triggers a call to DriverManager.getDrivers() with the current class loader set to the system class loader. This is to avoid memory leaks if the call to DriverManager.getDrivers() is triggered by a web application.\n\nI'd add that you can get all sorts of strange behaviour wihtout this option enabled depending on what web applciations include which drivers and the order that the web applications are started and/or accessed.\n\nThere is no way to have automatic registration and no memory leaks. The system class loader (rather than Tomcat's class loader that includes ${CATALINA_HOME}/lib) is used to prevent memory leaks when Tomcat is used in an embedded scenario.\n\nYou are, of course, free to disable this setting if you prefer to have automatic registration along with the memory leak risks that go along with that. For more info on the memory leaks see this presentation:\nhttp://people.apache.org/~markt/presentations/2010-11-04-Memory-Leaks-60mins.pdf", "id": 169192, "time": "2013-08-06T16:12:45Z", "bug_id": 55368, "creation_time": "2013-08-06T16:12:45Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 55368, "text": "I appreciate your position, but please consider documenting or release noting the functional change.  I wasn\u2019t expecting that a memory leak check would cause a change in the functional behavior of the product \u2013 as I\u2019m sure most of your users weren\u2019t.  A cursory search of the web finds many instances of people asking why they are suddenly seeing the \u201cNo suitable driver\u201d error.  Granted, most are using JDBC wrong, but a little documentation would go a long way.", "id": 169193, "time": "2013-08-06T17:12:20Z", "creator": "mwick@loftware.com", "creation_time": "2013-08-06T17:12:20Z", "is_private": false, "attachment_id": null}]