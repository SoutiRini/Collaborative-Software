[{"count": 0, "tags": [], "creator": "zl@consol.de", "attachment_id": null, "id": 160025, "time": "2012-06-15T07:51:03Z", "bug_id": 53420, "creation_time": "2012-06-15T07:51:03Z", "is_private": false, "text": "When setting ProxyErrorOverride to \"On\" to get the httpd-ErrorDocument\ninstead of the backend-errordoc, httpd is waiting \"ProxyTimeout\" seconds\nto respond to the client, even though the response is already read from\nbackend server.\n\nThe request/response is hanging somewhere in\n  module/proxy/mod_proxy_http\n    -> ap_proxy_http_process_response\n       -> ap_discard_request_body(backend->r) (modules/http/http_filters)\nbefore timing out with \"ProxyTimeout\".\n\n\nProxyErrorOverride Directive:\nhttp://httpd.apache.org/docs/current/mod/mod_proxy.html#proxyerroroverride\n\n\nI can reproduce this error only in 2.4.x.\n2.2.x works correctly."}, {"count": 1, "tags": [], "creator": "luka.dolenec@cetrtapot.si", "attachment_id": null, "id": 171286, "time": "2013-11-18T13:46:20Z", "bug_id": 53420, "creation_time": "2013-11-18T13:46:20Z", "is_private": false, "text": "HI.\n\nWe come across with same behavior with version 2.4.6\nOur configuration is:\nProxyErrorOverride On\nProxyPass /test  http://xxxxxx:8080/test\nProxyPassReverse /test  http://xxxxxx:8080/test\nErrorDocument 404 \"Page does not exist\"\nWhen we call proxy URL /test/nonexistingpage from browser, browser start to load page few minutes, then display \"Page does not exist\"\nSame configuration on version 2.2.3 it works without problem.\n\nBest regards."}, {"count": 2, "tags": [], "creator": "shetty.vijesh82@gmail.com", "text": "I am running Apache 2.4.7 and I find the same problem here too.\nAnything other than 1xx, 2xx, 3xx response, proxy module waits for the default timeout before serving the ErrorDocument page if I have ProxyErrorOverride On.\n\nDid anyone get a solution to this problem?\n\nThanks,\nVijesh", "id": 174924, "time": "2014-04-29T06:24:50Z", "bug_id": 53420, "creation_time": "2014-04-29T06:24:50Z", "is_private": false, "attachment_id": null}, {"count": 3, "text": "Does anyone have any update on this? Is there any ticket to fix this?", "bug_id": 53420, "attachment_id": null, "id": 176422, "time": "2014-07-16T14:18:46Z", "creator": "viktor.stolbin@gmail.com", "creation_time": "2014-07-16T14:18:46Z", "tags": [], "is_private": false}, {"count": 4, "tags": [], "text": "First steps of analysis for trunk. The problem happens with all MPMs, especially also with prefork and event.\n\nThe hang until timeout happens in ap_discard_request_body called from mod_proxy_http.c in line 1640:\n\n1629 \t/* PR 41646: get HEAD right with ProxyErrorOverride */\n1630 \tif (ap_is_HTTP_ERROR(r->status) && dconf->error_override) {\n1631 \t/* clear r->status for override error, otherwise ErrorDocument\n1632 \t* thinks that this is a recursive error, and doesn't find the\n1633 \t* custom error page\n1634 \t*/\n1635 \tr->status = HTTP_OK;\n1636 \t/* Discard body, if one is expected */\n1637 \tif (!r->header_only && /* not HEAD request */\n1638 \t(proxy_status != HTTP_NO_CONTENT) && /* not 204 */\n1639 \t(proxy_status != HTTP_NOT_MODIFIED)) { /* not 304 */\n1640 \tap_discard_request_body(backend->r);\n1641 \t}\n1642 \tproxy_run_detach_backend(r, backend);\n1643 \treturn proxy_status;\n1644 \t}\n\nIn ap_discard_request_body - which is used here to discard the reponse body from the origin server - I can see two brigades being read. The first has one bucket which contains the original error page coming form the origin server (here 206 bytes), the second brigade only has a EOS bucket. Reading the second brigade is where it blocks until proxy timeout.\n\nFor 2.2 the situation is different: the first brigade read has two buckets, the first again containing the origin server response body, the second one the EOS. The brigade with both buckets could be read immediately without waiting for timeout.\n\nAny ideas what's going one? Hints in which direction to proceed?\n\nRegards,\n\nRainer", "attachment_id": null, "bug_id": 53420, "id": 176825, "time": "2014-08-01T08:31:25Z", "creator": "rainer.jung@kippdata.de", "creation_time": "2014-08-01T08:31:25Z", "is_private": false}, {"count": 5, "tags": [], "creator": "rainer.jung@kippdata.de", "attachment_id": null, "id": 176835, "time": "2014-08-01T21:30:51Z", "bug_id": 53420, "creation_time": "2014-08-01T21:30:51Z", "is_private": false, "text": "The reason is broken header handling. Headers are read from the origin server and then directly put into r->headers_out. In 2.2 those headers are copied to the request struct (rp) used in ap_discard_request_body. therefore the http infput filter can detect the end of the body using the Content-Length header and sets EOS as soon as all the expected bytes are read. \n\nIn 2.4 and trunk, copying the headers from r->headers_out to backend->r-headers_in happens *after* the error_override handling. Thus the http input filter must read until timeout.\n\nEither we rearrange the original order of code, or we at least copy Content-Length and Transfer-Encoding headers from r->headers_out to backend->r_headers_in before doing ap_discard_request_body. Somethin like\n\n                const char *tmp;\n                if (tmp = apr_table_get(r->headers_out, \"Content-Length\")) {\n                    apr_table_set(backend->r->headers_in, \"Content-Length\", tmp);\n                }\n                else if (tmp = apr_table_get(r->headers_out, \"Transfer-Encoding\")) {\n                    apr_table_set(backend->r->headers_in, \"Transfer-Encoding\", tmp);\n                }\n                else if (te) {\n                    apr_table_set(backend->r->headers_in, \"Transfer-Encoding\", te);\n                }\n                ap_discard_request_body(backend->r);\n                ...\n\nI will check svn history to get an idea, why the code order was changed."}, {"count": 6, "tags": [], "creator": "rainer.jung@kippdata.de", "text": "The bug was introduced by r912063 to fix PR41646.", "id": 176836, "time": "2014-08-01T21:40:14Z", "bug_id": 53420, "creation_time": "2014-08-01T21:40:14Z", "is_private": false, "attachment_id": null}, {"count": 7, "tags": [], "creator": "rainer.jung@kippdata.de", "attachment_id": null, "id": 176844, "time": "2014-08-02T08:32:57Z", "bug_id": 53420, "creation_time": "2014-08-02T08:32:57Z", "is_private": false, "text": "Fix committed in r1615289.\nWill propose for backport to 2.4 next week if no negative reactions come up in the meantime."}, {"count": 8, "tags": [], "bug_id": 53420, "attachment_id": null, "id": 177110, "creation_time": "2014-08-12T13:53:56Z", "time": "2014-08-12T13:53:56Z", "creator": "shetty.vijesh82@gmail.com", "text": "Is the fix backported to 2.4.x?", "is_private": false}, {"count": 9, "tags": [], "bug_id": 53420, "attachment_id": null, "text": "It has been proposed for backport for 2.4.x in r1615346 but it has not been accepted yet.", "id": 177121, "time": "2014-08-12T19:19:10Z", "creator": "christophe.jaillet@wanadoo.fr", "creation_time": "2014-08-12T19:19:10Z", "is_private": false}, {"count": 10, "attachment_id": null, "bug_id": 53420, "text": "Backported to 2.4.11 in r1621601.", "id": 180524, "time": "2015-01-23T10:22:41Z", "creator": "ylavic.dev@gmail.com", "creation_time": "2015-01-23T10:22:41Z", "tags": [], "is_private": false}, {"count": 11, "tags": [], "bug_id": 53420, "attachment_id": null, "text": "Hi, there are some additional issues with ProxyErrorOverride set to on, please see https://bz.apache.org/bugzilla/show_bug.cgi?id=56925 \n\nAnyone else experienced this, looking at this ticket it seems like the turnaround time may be up to 2 years until it will be solved.", "id": 181902, "time": "2015-03-19T00:19:51Z", "creator": "cristian.httpd@gmail.com", "creation_time": "2015-03-19T00:19:51Z", "is_private": false}]