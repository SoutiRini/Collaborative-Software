[{"count": 0, "tags": [], "creator": "cspeter@rmki.kfki.hu", "text": "<javac debug=\"false\" ...> compiles files with debug info.\nThe explanation is that it calls javac without the -g option. Omitting -g works\nin JDK 1.1 but not in JDK 1.2 and 1.3. In JDK 1.2-1.3, omitting -g is equivalent\nto specifying \"-g:lines,source\". Debug info can be disabled using -g:none.\n\nThe bug is in this class:\norg/apache/tools/ant/taskdefs/compilers/DefaultCompilerAdapter.java\n        if (debug) {\n            cmd.createArgument().setValue(\"-g\");\n        }\nThe correct implementation would be the following:\n        if (debug) {\n            cmd.createArgument().setValue(\"-g\");\n        } else\n            cmd.createArgument().setValue(\"-g:none\");", "id": 1353, "time": "2001-03-18T02:27:55Z", "bug_id": 1011, "creation_time": "2001-03-18T02:27:55Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 1011, "attachment_id": null, "id": 1624, "time": "2001-03-28T00:38:55Z", "creator": "nico@apache.org", "creation_time": "2001-03-28T00:38:55Z", "is_private": false, "text": "Fixed for next build. \nNow uses -g:none if JDK => 1.2."}, {"count": 2, "tags": [], "bug_id": 1011, "attachment_id": null, "text": "This fix is causing problems for the NetBeans build process. We use JDK 1.3\nonly, and currently use Ant 1.3. If you turn on debugging for the build, all\nworks in 1.4 as it did in 1.3. However, by default debug=false. In Ant 1.3, this\npassed no -gXXX argument to the compiler, resulting in line and source debugging\ninfo: exactly the default we wanted. In Ant 1.4, there is no apparent way to get\nback this default.\n\nYou can turn on debugging, but then you get local var info, which is copious and\ncauses your JARs to become bloated, increasing download size and perhaps startup\ntime. This extra information is useless unless you are actually running a\ndebugger on the code (which an end-user would not be doing).\n\nYou can turn off debugging, but this is not really a good idea: errors reported\nagainst the product will come back with stack traces without any line number\ninformation. This makes bugfixing based on user bug reports much more difficult;\nin practice when a report is received of a NullPointerException or other generic\nexception from some largish method, it must be discarded as hopeless unless a\nline number is included.\n\nWe could produce a special compiler adapter with the 1.3 behavior and set this\nas the default, however it would need to be in the startup classpath of the Ant\ntool (otherwise adapters cannot be loaded in Ant 1.x), adding an extra\ncomplication to the process of building from sources (which is otherwise just\n\"run ant\"). Ditto for producing a patch to DefaultCompilerAdapter.\n\nI'm not yet sure if this problem would prevent us from upgrading from 1.3 to 1.4\nentirely, but it is significant. There is no apparent mention of the change in\nthe WHATSNEW file; it was discovered accidentally because the size of the\ncomplete default build is noticeably different between 1.3 and 1.4.\n\nPlease consider for 1.4.2/1.5 having a compatibility property that would restore\nthe 1.3 behavior if set, until some future version where <javac> switches are\nhandled in a more flexible manner and defaults are not the only options.", "id": 7043, "time": "2001-10-23T04:27:10Z", "creator": "jesse.glick@netbeans.com", "creation_time": "2001-10-23T04:27:10Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 1011, "is_private": false, "id": 7049, "attachment_id": null, "creator": "jesse.glick@netbeans.com", "creation_time": "2001-10-23T08:26:45Z", "time": "2001-10-23T08:26:45Z", "text": "Forgot to mention that the Jikes compiler adapter was apparently not\nupdated as part of this patch; for consistency it should append -O\nwith debug=false (though again I personally prefer the Ant 1.3\nbehavior or the option of it). Did not check other adapters."}, {"count": 4, "tags": [], "bug_id": 1011, "text": "If a program contains so huge methods that line number debug info is needed to\nlocate bugs even in its released, \"stable\" versions, then it is a really badly\nwritten code.\nTurning off debug info generation is useful for applets because their size have\nto be as small as possible. So there must be a way to turn it off completely.\nIf debug=false is not a good default in some cases, then debug should not be a\nboolean property. What about this solution:\n   debug=\"none\"         - to turn off debug info\n   debug=\"false\"        - same (for compatibility)\n   debug=\"lines,source\" - default\n   debug=\"all\"          - even more debug info\n   debug=\"true\"         - same (for compatibility)\n", "id": 7052, "time": "2001-10-23T09:24:45Z", "creator": "cspeter@rmki.kfki.hu", "creation_time": "2001-10-23T09:24:45Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "creator": "jesse.glick@netbeans.com", "text": "Admitted that smaller methods help, but anyway... Yes, turning it off completely\nis useful too. I don't think the default matters too much, so long as there is\nsome control. Do other compilers besides Javac and Jikes also support different\nlevels of debug info?", "id": 7057, "time": "2001-10-23T09:59:51Z", "bug_id": 1011, "creation_time": "2001-10-23T09:59:51Z", "is_private": false, "attachment_id": null}, {"count": 6, "tags": [], "bug_id": 1011, "text": "See #4127, this proposed patch would be enough.", "id": 7088, "time": "2001-10-24T02:19:50Z", "creator": "jesse.glick@netbeans.com", "creation_time": "2001-10-24T02:19:50Z", "is_private": false, "attachment_id": null}]