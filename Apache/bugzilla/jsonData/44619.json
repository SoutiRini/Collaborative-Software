[{"count": 0, "tags": [], "bug_id": 44619, "attachment_id": null, "text": "Many properties like column-count and number-columns-repeated are defined as positive integers and: \"If a non-positive or non-integer value is provided, the value will be rounded to the nearest integer value greater than or equal to 1.\"\n\nIt would be good to have a possibility to declare that in FOPropertyMapping instead of having to write validation code for each such property. ATM, floating point values are often not rounded and not normalized following the above rule.", "id": 114684, "time": "2008-03-17T07:52:18Z", "creator": "jeremias@apache.org", "creation_time": "2008-03-17T07:52:18Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 44619, "attachment_id": null, "text": "(In reply to comment #0)\n> Many properties like column-count and number-columns-repeated are defined as\n> positive integers and: \"If a non-positive or non-integer value is provided, the\n> value will be rounded to the nearest integer value greater than or equal to 1.\"\n> \n> It would be good to have a possibility to declare that in FOPropertyMapping\n> instead of having to write validation code for each such property. ATM,\n> floating point values are often not rounded and not normalized following the\n> above rule.\n\nFWIW: I've been thinking about this too at some point.\n\nMy proposal would lie in the creation of a PropertyMaker subtype: PositiveIntegerMaker (?)\n\nThe related properties can then be tied to this Maker in FOPropertyMapping. \nThe make(PropertyList, String, FObj) implementation, which parses the specified attribute value, can be made to force this rounding (see also TableFObj.ColumnNumberPropertyMaker for a prototype).\n\n", "id": 114888, "time": "2008-03-23T02:13:29Z", "creator": "adelmelle@apache.org", "creation_time": "2008-03-23T02:13:29Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 44619, "attachment_id": 21794, "text": "Created attachment 21794\nA patch for the problem\n\nThis patch does as suggested: It introduces a NumberProperty.PositiveIntegerMaker, which inherits from NumberProperty.Maker. Its make method checks whether a numeric value can be extracted, and if so, rounds it to an integer, and replaces values <= 0 with 1. I made this the maker of number-columns-repeated, and made ColumnNumberPropertyMaker inherit from it. It should become the maker of more properties, to be done later.", "id": 115418, "time": "2008-04-08T06:47:20Z", "creator": "spepping@apache.org", "creation_time": "2008-04-08T06:47:20Z", "is_private": false}, {"count": 3, "tags": [], "creator": "spepping@apache.org", "attachment_id": null, "id": 115707, "time": "2008-04-18T12:07:18Z", "bug_id": 44619, "creation_time": "2008-04-18T12:07:18Z", "is_private": false, "text": "Fixed in revision 649657, by creating NumberProperty.PositiveIntegerMaker, which implements convertProperty. Note that it is not a good idea to reimplement make. Rather on reimplements convertProperty, which is called by make."}, {"count": 4, "tags": [], "creator": "gadams@apache.org", "attachment_id": null, "id": 156131, "time": "2012-04-01T07:00:18Z", "bug_id": 44619, "creation_time": "2012-04-01T07:00:18Z", "is_private": false, "text": "batch transition pre-FOP1.0 resolved+fixed bugs to closed+fixed"}]