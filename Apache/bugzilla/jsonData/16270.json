[{"count": 0, "tags": [], "creator": "daniel.armbrust@mayo.edu", "attachment_id": null, "is_private": false, "id": 29727, "time": "2003-01-20T18:54:32Z", "bug_id": 16270, "creation_time": "2003-01-20T18:54:32Z", "text": "The copy task has a java vm caused bug when it interacts with a samba mounted\nfile system from linux/unix machine while the ant task is running on a windows\nmachine.\n\nI had 3 different files that I created on the ntfs drive (all done from a W2K\nmachine).  I then copied the three files to the samba share mounted drive.\nHere are the last 5 digits of the time stamps that the java vm reports.  I don't\nunderstand its behavior... As some round down, and some up.  \n\n\t\t\tFile a\tFile b\tFile c\nLocal NTFS\t\t35062\t87359\t18093\nMounted via samba\t36000\t88000\t18000\n\nAs you can imagnine, this leads to a lot of unnecessary file copying by the copy\ntask, as file c would have been recopied, even though it doesn't need to be.\n\nTo fix this, I added a dateSlop feature to the copy so that it would only copy\nfiles that are more than 1 second apart from each other in their time stamps\nwhen dateSlop is set to true.  \n\nI don't know ant well enough, however to know all the implications of this\nchange.  This bug is annoying when it is used to copy large amounts of files. \nIt also turns into a showstopper for the new synchronize task that has been\nposted as a requested enhancement, when it is used to synchronize a ntfs drive\nwith a samba mounted drive... you end up copying upwards of 1/2 of the files in\nyour set (even if none of them have actually changed)"}, {"count": 1, "tags": [], "bug_id": 16270, "attachment_id": null, "text": "Have a look at the <depend> selector for filesets; it takes a granularity in\nmilliseconds.\n\ncould you use this selector in your copy fileset, with a large enough\ngranularity to work around the problem?\n\n(we also have a different selector which does byte-for-byte compares, but this\nwould implictly contain the network load you are scared of -though it supports\ngranularity too)", "id": 37700, "time": "2003-05-23T21:25:49Z", "creator": "stevel@apache.org", "creation_time": "2003-05-23T21:25:49Z", "is_private": false}, {"count": 2, "text": "I downloaded yesterdays daily to test this stuff out, and it turns out that that\n<different> selector still contains the network load that I would like to avoid,\nsince it does a byte for byte compairison.  I'm think I'll open a feature\nrequest on <different> to use an MD5 compairison, with the byte for byte being\noptional (and disabled by default).  \n\nAlso, the <depend> selector will not work correctly with the new <sync> task,\nwhich I will also open a new bug report about.", "bug_id": 16270, "is_private": false, "id": 42184, "time": "2003-08-05T20:17:42Z", "creator": "daniel.armbrust@mayo.edu", "creation_time": "2003-08-05T20:17:42Z", "tags": [], "attachment_id": null}, {"count": 3, "tags": [], "creator": "ddevienne@lgc.com", "attachment_id": null, "is_private": false, "id": 42187, "time": "2003-08-05T20:27:30Z", "bug_id": 16270, "creation_time": "2003-08-05T20:27:30Z", "text": "FYI, computing an MD5 checksum requires getting all the bytes, and doing some \nsmart computation on them in the MD5 case, so it's going to be even longer than \nbyte-to-byte comparisons...\n\nHTTP server can serve (and cache) MD5 sums of files, but that's a special \ncase. --DD"}, {"count": 4, "tags": [], "bug_id": 16270, "attachment_id": null, "text": "I caught that when I posted this new bug 22148.  But you are just to fast :)\n\nI also added this new bug, 22150, to address the issues with sync.\n\n", "id": 42192, "time": "2003-08-05T20:38:07Z", "creator": "daniel.armbrust@mayo.edu", "creation_time": "2003-08-05T20:38:07Z", "is_private": false}, {"count": 5, "tags": [], "creator": "daniel.armbrust@mayo.edu", "attachment_id": null, "is_private": false, "id": 42197, "time": "2003-08-05T20:53:48Z", "bug_id": 16270, "creation_time": "2003-08-05T20:53:48Z", "text": "\n\n*** This bug has been marked as a duplicate of 22148 ***"}]