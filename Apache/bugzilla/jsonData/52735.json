[{"attachment_id": null, "tags": [], "creator": "minde.sun@gmail.com", "text": "I got java.lang.NullPointerException when I am trying to call Request.getRemoteAddr(), here is the details of the log stacks:\n============================\nERROR [-::pool-117-thread-1]Exception in supplemental table data loading\njava.lang.NullPointerException\n        at org.apache.coyote.http11.Http11AprProcessor.actionInternal(Http11AprProcessor.java:272)\n        at org.apache.coyote.http11.AbstractHttp11Processor.action(AbstractHttp11Processor.java:834)\n        at org.apache.coyote.Request.action(Request.java:346)\n        at org.apache.catalina.connector.Request.getRemoteAddr(Request.java:1281)\n        at org.apache.catalina.connector.RequestFacade.getRemoteAddr(RequestFacade.java:517)\n        at .......\n..........DataCabinetServlet$1.run(DataCabinetServlet.java:7631)\n        at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)\n        at java.util.concurrent.FutureTask$Sync.innerRun(Unknown Source)\n        at java.util.concurrent.FutureTask.run(Unknown Source)\n        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(Unknown Source)\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)\n        at java.lang.Thread.run(Unknown Source)", "count": 0, "id": 154005, "time": "2012-02-21T19:57:36Z", "bug_id": 52735, "creation_time": "2012-02-21T19:57:36Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 52735, "text": "I also debug this issue locally, it seems the following code is the root cause of this null point exception:\n\nThe first line(line # 272) of the method actionInternal in class Http11AprProcessor:\n\n@Override\n    public void actionInternal(ActionCode actionCode, Object param) {\n\n        long socketRef = socket.getSocket().longValue();\n.....\n\n}\n\nFor my env, socket.getSocket() is return null, not sure why. So I believe that we need to make sure socket.getSocket() is not null before to get the longValue, otherwise the socketRef should be default to 0.\n\nThanks,\nMinde", "id": 154006, "time": "2012-02-21T20:03:36Z", "creator": "minde.sun@gmail.com", "creation_time": "2012-02-21T20:03:36Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "creator": "knst.kolinko@gmail.com", "text": "(In reply to comment #0)\n>         at java.util.concurrent.FutureTask.run(Unknown Source)\n\nYou must not access request/response objects outside of request processing cycle. Failing to adhere to this requirement may lead to notable security issues.\n\n\nSee \"System properties\" page in the Configuration reference for description of ...RECYCLE_FACADES property. I strongly recommend you to set it to the value of \"true\", for better security and to more easily detect misbehaving code.\n\nIf you have further questions, ask on the users mailing list. Bugzilla is not a support forum.", "id": 154009, "attachment_id": null, "bug_id": 52735, "creation_time": "2012-02-21T21:01:13Z", "time": "2012-02-21T21:01:13Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 52735, "text": "You must not access request/response objects outside of request processing\ncycle. Failing to adhere to this requirement may lead to notable security\nissues.\n-------------\nI am not sure what that means? One thing I can guarantee is that we handle the request/responses within the same thread, we don't create a new thread for this.\n---\nBtw, this happened only on my machine, for other machines, we don't hit this issue.\n---\nOn the other hand, we need to handle null pointer exception for the following statement in class Http11AprProcessor:\nlong socketRef = socket.getSocket().longValue();\n---\nThanks,\nMinde", "id": 154014, "time": "2012-02-22T02:16:54Z", "creator": "minde.sun@gmail.com", "creation_time": "2012-02-22T02:16:54Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 52735, "text": "One more thing: I have specified the -Dorg.apache.catalina.connector.RECYCLE_FACADES=true when I am starting the tomcat.", "id": 154015, "time": "2012-02-22T02:18:22Z", "creator": "minde.sun@gmail.com", "creation_time": "2012-02-22T02:18:22Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "creator": "knst.kolinko@gmail.com", "text": "(In reply to comment #3)\n> I am not sure what that means? One thing I can guarantee is that we handle the\n> request/responses within the same thread, we don't create a new thread for\n> this.\n\nAccording to your stack trace you use a Future. It is executed asynchronously in a different thread.\n\nSubscribe to the users mailing list and ask there if you want to discuss it.", "id": 154019, "attachment_id": null, "bug_id": 52735, "creation_time": "2012-02-22T10:34:39Z", "time": "2012-02-22T10:34:39Z", "is_private": false}, {"count": 6, "tags": [], "bug_id": 52735, "is_private": false, "text": "Hi Konstantin,\n\n---------------\nAccording to your stack trace you use a Future. It is executed asynchronously\nin a different thread.\n---------------\n\nThe class DataCabinetServlet is just a sub-class of  HttpServlet, its definition list below\npublic class DataCabinetServlet  extends HttpServlet{\n....\n}\n\nWe do not create a new thread to handle the incoming request!\n\nSince we don't use 'single thread model', I believe this Future is created and maintained by tomcat servlet container. Even this is an tomcat servlet bug, it is not a reason to ignore the bug from class Http11AprProcessor. You/your team need to change the following logic in method actionInternal for sure:\n@Override\n    public void actionInternal(ActionCode actionCode, Object param) {\n\n        long socketRef = socket.getSocket().longValue();\n.....\n\n}\n\nIt is not good practice for above use, you need to do change the code to the following:\nlong socketRef = socket.getSocket() == null? 0L: socket.getSocket().longValue();\n\nPlease don't close this bug without carefully investigation!\n\nThanks,\nMinde", "id": 154039, "time": "2012-02-22T19:25:12Z", "creator": "minde.sun@gmail.com", "creation_time": "2012-02-22T19:25:12Z", "attachment_id": null}, {"count": 7, "tags": [], "bug_id": 52735, "text": "Please stop wasting your time and ours by re-opening this issue when the bug is in your own application code and/or a library it uses.\n\nYou have been told repeatedly where to seek further assistance. Please follow that advice.", "id": 154040, "time": "2012-02-22T19:27:52Z", "creator": "markt@apache.org", "creation_time": "2012-02-22T19:27:52Z", "is_private": false, "attachment_id": null}, {"count": 8, "tags": [], "bug_id": 52735, "is_private": false, "text": "I actually just found a bug from org.apache.coyote.http11.Http11AprProcessor.actionInternal(Http11AprProcessor.java:272) as the following statement\n        long socketRef = socket.getSocket().longValue();\nIf you guys don't think it is a bug, or don't want to fix, I am fine. \n\nAnyway, I am not going to reopen this bug. Since tomcat is an open source, I can't request more, but I want you guys know that I really appreciate you guys hard work. \n\nBtw, just want you know that our codes work for many years without any issue, and this issue is not happened for any other computers/servers except my computer. I have some special protocol setting for my local machine. That may be the reason I hit this issue.\n\nYou guys have a wonderful day,", "id": 154041, "time": "2012-02-22T20:16:30Z", "creator": "minde.sun@gmail.com", "creation_time": "2012-02-22T20:16:30Z", "attachment_id": null}]