[{"count": 0, "tags": [], "text": "calling NDC.remove during tomcat shutdown results in a NullPointerException\n\nJul 3, 2008 1:09:51 PM org.apache.coyote.http11.Http11BaseProtocol destroy\nINFO: Stopping Coyote HTTP/1.1 on http-8080\nJul 3, 2008 1:09:51 PM org.apache.catalina.core.AprLifecycleListener lifecycleEvent\nINFO: Failed shutdown of Apache Portable Runtime\nException in thread \"error\" java.lang.NullPointerException\n\tat org.apache.log4j.NDC.remove(NDC.java:377)\n\tat ProcessMonitor$1.run(ProcessMonitor.java:44)\n\tat java.lang.Thread.run(Thread.java:619)\nException in thread \"exit\" java.lang.NullPointerException\nException in thread \"response\" \tat org.apache.log4j.NDC.remove(NDC.java:377)\n\tat ProcessMonitor$2.run(ProcessMonitor.java:83)\n\tat java.lang.Thread.run(Thread.java:619)\njava.lang.NullPointerException\n\tat org.apache.log4j.NDC.remove(NDC.java:377)\n\tat ProcessMonitor$3.run(ProcessMonitor.java:114)\n\tat java.lang.Thread.run(Thread.java:619)\n\nGlancing at the source for NDC.java it appears the the ht hashtable variable is null at this point in the tomcat shutdown sequence. I notice that some of the other places in NDC that refer to ht check that it is not null.\n\nTwo other minor things I notice in NDC:\n\n1. bogus comment\n  // The synchronized keyword is not used in this class. This may seem\n  // dangerous, especially since the class will be used by\n  // multiple-threads. In particular, all threads share the same\n  // hashtable (the \"ht\" variable). This is OK since java hashtables\n  // are thread safe. Same goes for Stacks.\n\nHowever the lazyRemove method synchronizes on ht while checking the pushCounter.\n\n2. another bogus comment\n\n  // The number of times we allow push to be called before we call lazyRemove\n  // 5 is a relatively small number. As such, lazyRemove is not called too\n  // frequently. We thus avoid the cost of creating an Enumeration too often.\n  // The higher this number, the longer is the avarage period for which all\n  // logging calls in all threads are blocked.\n  static final int REAP_THRESHOLD = 5;\n\nThe lazyRemove method is NOT called by push, it is only called by remove.\n\nCheers,\nDerek", "is_private": false, "bug_id": 45335, "id": 118244, "time": "2008-07-03T12:50:07Z", "creator": "derek@echologic.com", "creation_time": "2008-07-03T12:50:07Z", "attachment_id": null}, {"count": 1, "tags": [], "creator": "carnold@apache.org", "is_private": false, "text": "Committed rev 683824.  See bug 40212 and 43867 about issues with Tomcat unloading.", "id": 119579, "time": "2008-08-07T20:24:11Z", "bug_id": 45335, "creation_time": "2008-08-07T20:24:11Z", "attachment_id": null}]