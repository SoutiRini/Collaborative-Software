[{"count": 0, "tags": [], "creator": "hauser@acm.org", "text": "Right now, the user doesn't see anything, just nothing is happening.\n\nIn the log, I see\n<<Jun 5, 2005 9:27:08 PM org.apache.tomcat.util.net.jsse.JSSE14Support\nsynchronousHandshake\nINFO: SSL Error getting client Certs\njavax.net.ssl.SSLHandshakeException:\njava.security.cert.CertificateExpiredException: NotAfter: Thu Nov 25 15:02:23\nCET 2004\n        at com.sun.net.ssl.internal.ssl.Alerts.getSSLException(Alerts.java:150)\n        at com.sun.net.ssl.internal.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1476)\n        at com.sun.net.ssl.internal.ssl.Handshaker.fatalSE(Handshaker.java:174)\n        at com.sun.net.ssl.internal.ssl.Handshaker.fatalSE(Handshaker.java:168)\n        at\ncom.sun.net.ssl.internal.ssl.ServerHandshaker.clientCertificate(ServerHandshaker.java:1098)\n        at\ncom.sun.net.ssl.internal.ssl.ServerHandshaker.processMessage(ServerHandshaker.java:187)\n        at com.sun.net.ssl.internal.ssl.Handshaker.processLoop(Handshaker.java:495)\n        at\ncom.sun.net.ssl.internal.ssl.Handshaker.process_record(Handshaker.java:433)\n        at\ncom.sun.net.ssl.internal.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java:815)\n        at\ncom.sun.net.ssl.internal.ssl.SSLSocketImpl.readDataRecord(SSLSocketImpl.java:677)\n        at com.sun.net.ssl.internal.ssl.AppInputStream.read(AppInputStream.java:75)\n        at java.io.InputStream.read(InputStream.java:89)\n        at\norg.apache.tomcat.util.net.jsse.JSSE14Support.synchronousHandshake(JSSE14Support.java:87)\n        at\norg.apache.tomcat.util.net.jsse.JSSE14Support.handShake(JSSE14Support.java:66)\n        at\norg.apache.tomcat.util.net.jsse.JSSESupport.getPeerCertificateChain(JSSESupport.java:120)\n        at\norg.apache.coyote.http11.Http11Processor.action(Http11Processor.java:1077)\n        at org.apache.coyote.Request.action(Request.java:364)\n        at\norg.apache.catalina.authenticator.SSLAuthenticator.authenticate(SSLAuthenticator.java:134)\n        at\norg.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:446)\n        at\norg.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:126)\n        at\norg.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:105)\n        at org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:526)\n        at\norg.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:107)\n        at\norg.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:148)\n        at\norg.apache.coyote.http11.Http11Processor.process(Http11Processor.java:827)\n        at\norg.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.processConnection(Http11Protocol.java:731)\n        at\norg.apache.tomcat.util.net.PoolTcpEndpoint.processSocket(PoolTcpEndpoint.java:526)\n        at\norg.apache.tomcat.util.net.LeaderFollowerWorkerThread.runIt(LeaderFollowerWorkerThread.java:80)\n        at\norg.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run(ThreadPool.java:684)\n        at java.lang.Thread.run(Thread.java:595)\nCaused by: java.security.cert.CertificateExpiredException: NotAfter: Thu Nov 25\n15:02:23 CET 2004\n        at sun.security.x509.CertificateValidity.valid(CertificateValidity.java:256)\n        at sun.security.x509.X509CertImpl.checkValidity(X509CertImpl.java:570)\n        at\nsun.security.validator.SimpleValidator.engineValidate(SimpleValidator.java:123)\n        at sun.security.validator.Validator.validate(Validator.java:203)\n        at sun.security.validator.Validator.validate(Validator.java:172)\n        at\ncom.sun.net.ssl.internal.ssl.X509TrustManagerImpl.checkClientTrusted(X509TrustManagerImpl.java:142)\n        at\ncom.sun.net.ssl.internal.ssl.JsseX509TrustManager.checkClientTrusted(SSLContextImpl.java:303)\n        at\ncom.sun.net.ssl.internal.ssl.ServerHandshaker.clientCertificate(ServerHandshaker.java:1091)\n        ... 25 more>>\nSuggestion: at least return a http 40X error.\n\nIn a similar situation, I went through the exercise to get an error message back\ninto struts - this entailed:\n- changeing the socketfactory to take the below trustmanager\n- rewriting the X509TrustManagerImpl to chose a different validator\n  since the sun one doesn't appear to be extensible\n- rewriting SimpleValidator to not or less strictly execute cert.checkValidity()\n\nFor this to arrive at the user via struts, you will first tweak the\nSSLAuthenticator to let an expired cert through and then check the same again\nonce the web-app takes over the control and then present the error", "id": 76048, "time": "2005-06-05T21:53:57Z", "bug_id": 35229, "creation_time": "2005-06-05T21:53:57Z", "is_private": false, "attachment_id": null}, {"text": "This seems to be beyond what the specification requires. If you find a way to do\nit, then we'd be willing to look at it, otherwise the case will be closed.", "tags": [], "bug_id": 35229, "is_private": false, "count": 1, "id": 76455, "time": "2005-06-16T11:21:24Z", "creator": "remm@apache.org", "creation_time": "2005-06-16T11:21:24Z", "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 35229, "attachment_id": null, "text": "No action/response in 1.5 months, closing this, at least for now.", "id": 77511, "time": "2005-07-21T22:36:36Z", "creator": "yoavs@computer.org", "creation_time": "2005-07-21T22:36:36Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 35229, "attachment_id": null, "is_private": false, "id": 82510, "time": "2005-11-15T12:25:10Z", "creator": "hauser@acm.org", "creation_time": "2005-11-15T12:25:10Z", "text": "a redesigned socket factory should take care of this see Bug 36892#c3"}, {"text": "OK, here comes a proposal:\n\n1) in org.apache.coyote.http11.Http11Processor.action() in \n...\n        } else if (actionCode == ActionCode.ACTION_REQ_SSL_CERTIFICATE) {\n            if( sslSupport != null) {\n                /*\n                 * Consume and buffer the request body, so that it does not\n                 * interfere with the client's handshake messages\n                 */\n                InputFilter[] inputFilters = inputBuffer.getFilters();\n                ((BufferedInputFilter) inputFilters[Constants.BUFFERED_FILTER])\n                    .setLimit(maxSavePostSize);\n                inputBuffer.addActiveFilter\n                    (inputFilters[Constants.BUFFERED_FILTER]);\n                try {\n                    Object sslO = sslSupport.getPeerCertificateChain(true);\n                    if( sslO != null) {\n                        request.setAttribute\n                            (SSLSupport.CERTIFICATE_KEY, sslO);\n                    }\n                } catch (Exception e) {\n                    log.warn(sm.getString(\"http11processor.socket.ssl\"), e);\n//todo: HERE you need to throw that exception again!\n                }\n            }\n\n2) in interface\n   org.apache.coyote.ActionHook.action(ActionCode actionCode, Object param)\n   an exception must be thrown!\n\n3) in org.apache.catalina.authenticator.SSLAuthenticator.authenticate(Request\nrequest, Response response, LoginConfig config) ,\n   after \nrequest.getCoyoteRequest().action(\n                    ActionCode.ACTION_REQ_SSL_CERTIFICATE, null);\nin the catch-block put the  exception into the request:\npossibly something like\n\n              request.getCoyoteRequest().setAttribute(\n                    \"SSLAuthenticator-Exception\", e);\n\nthen return \"true\" otherwise, the web-application programmer will never see it.\n\nThen, back in the web-application, we could analyze the exception and display an\nappropriate i18n error message.\n\nI guess the challenge will be to make this fail-safe: how do we prevent the\nnegligent web-application programmer from believing the client cert auth was\nsuccessful", "tags": [], "creator": "hauser@acm.org", "attachment_id": null, "count": 4, "id": 83494, "time": "2005-12-09T21:46:44Z", "bug_id": 35229, "creation_time": "2005-12-09T21:46:44Z", "is_private": false}, {"count": 5, "tags": [], "creator": "yoavs@computer.org", "text": "Ralf, you've been a committer now for a while, though very quiet unfortunately.\n It certainly seems like no one else cares about this issue.  If you care enough\nto fix it, feel free to reopen it and continue working on the patch.", "id": 100864, "time": "2007-03-25T07:46:35Z", "bug_id": 35229, "creation_time": "2007-03-25T07:46:35Z", "is_private": false, "attachment_id": null}]