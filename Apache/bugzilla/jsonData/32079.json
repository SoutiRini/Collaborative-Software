[{"count": 0, "tags": [], "bug_id": 32079, "attachment_id": null, "text": "In my current project we needed an Appender that rolls over by time, creates \nold logfiles with a name that has a timebased suffix like .2004-11-05, and also \nkeeps only a configurable number of old log files.\nThe DailyRollingFileAppender can do all this except for keeping the \nconfigurable number of old log files.\nSo I wrote a new Appender that subclasses DailyRollingFileAppender.\nI've added this Appender as attachment. \nMaybe this suggested Appender can be of any help for future directions of log4j.", "id": 66512, "time": "2004-11-05T09:50:56Z", "creator": "steven.barendregt@capgemini.com", "creation_time": "2004-11-05T09:50:56Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 32079, "attachment_id": 13339, "text": "Created attachment 13339\nproposed variant of DailyRollingFileAppender", "id": 66513, "time": "2004-11-05T09:55:33Z", "creator": "steven.barendregt@capgemini.com", "creation_time": "2004-11-05T09:55:33Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 32079, "attachment_id": null, "id": 66560, "time": "2004-11-05T23:16:24Z", "creator": "carnold@houston.rr.com", "creation_time": "2004-11-05T23:16:24Z", "is_private": false, "text": "DailyRollingFileAppender is marked as deprecated.  RollingFileAppender with a time strategy is \nsuggested as the migration path.  I think it is unlikely that enhancements to a deprecated class would \nbe considered, but that is not my call.   You may want to look at RollingFileAppender and see if your \nuse case could be covered by it or by using a custom strategy."}, {"count": 3, "tags": [], "bug_id": 32079, "attachment_id": null, "id": 67062, "time": "2004-11-17T18:49:23Z", "creator": "raphaelmaciel@hotmail.com", "creation_time": "2004-11-17T18:49:23Z", "is_private": false, "text": "(In reply to comment #2)\n> DailyRollingFileAppender is marked as deprecated.  RollingFileAppender with a \ntime strategy is \n> suggested as the migration path.  I think it is unlikely that enhancements to \na deprecated class would \n> be considered, but that is not my call.   You may want to look at \nRollingFileAppender and see if your \n> use case could be covered by it or by using a custom strategy.\n\nCurt,\n\nI don\u00b4t know where it is maked as deprecated. Acctually I\u00b4m using the \nDailyRollingFileAppender in production and I was a little worried about the \ndepracated statement.\n\nI checked at http://cvs.apache.org/viewcvs.cgi/jakarta-\nlog4j/src/java/org/apache/log4j/DailyRollingFileAppender.java\n\nI didn\u00b4t find any deprecated mark. Could you explain it for me?\nI\u00b4m a little newbie and maybe I did check it the right way...\n\nThanks!\nRaphael Barboza"}, {"count": 4, "tags": [], "bug_id": 32079, "attachment_id": null, "id": 77970, "time": "2005-08-02T20:23:16Z", "creator": "yoavs@computer.org", "creation_time": "2005-08-02T20:23:16Z", "is_private": false, "text": "It's deprecated in CVS HEAD.  Given the original timing of this issue, you were\nprobably looking at the v1.2 CVS branch.  We've put significant effort into the\nnew rolling policies in log4j 1.3: we encourage you to test those, see if they\nwork, and report any issues to us.  They'd be rapidly addressed in the 1.3 build\ntree.  As Curt said, and given the above, further enhancements to functionality\nin 1.2 that's been rewritten for 1.3 are unlikely."}]