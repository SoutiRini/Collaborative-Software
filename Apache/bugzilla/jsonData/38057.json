[{"count": 0, "tags": [], "bug_id": 38057, "attachment_id": null, "id": 84025, "time": "2005-12-28T02:27:20Z", "creator": "kk@kohsuke.org", "creation_time": "2005-12-28T02:27:20Z", "is_private": false, "text": "I'm writing a library that uses BCEL internally. My library is intended to be\nused by applications, which may use BCEL by themselves for other purposes. My\nlibrary may be deployed into a multi-classloader environment, such as a web\ncontainer or application server.\n\nI found the notion of the singleton Repository (org.apache.bcel.Repository)\nproblematic. When my library is used in a web container, Repository by default\nfails to load classes in \"my\" class loader (instead it only resolves classes in\nthe system classpath.) Yet if I change the global Repository._repository\ninstance to ClassLoaderRepository that works with my class loader, it may break\nmy host application that just happens to be using BCEL.\n\nThe same issue arises when I got multiple threads that each work with different\nclassloaders. I have to arbitrate the use of BCEL among those threads, and it\nstill doesn't prevent someone else from replacing Repository.\n\nHere's another way to hit this problem. Suppose you got an Ant task that\ngenerates class files by using BCEL. If the user runs this task in parallel with\nthe <parallel> task, classes that are generated from those parallel threads\nshare the same Repository and cause conflicts.\n\nIn more general terms, when BCEL makes a static method invocation like\nRepository.lookupClass(\"org.acme.Foo\"), it's assuming that this name resolves to\na single class. Unfortunately this is wrong, as we all know that multiple\nclassloaders are allowed to resolve this in different classes."}, {"count": 1, "tags": [], "creator": "dbrosius@apache.org", "attachment_id": null, "text": "What if your custom classloader loaded bcel, then you would have n \nRepositories, no?", "id": 84026, "time": "2005-12-28T03:20:49Z", "bug_id": 38057, "creation_time": "2005-12-28T03:20:49Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 38057, "text": "I came across the same limitation ...I totally agree the static approach is a real problem", "id": 85100, "time": "2006-01-27T14:07:28Z", "creator": "tcurdt@apache.org", "creation_time": "2006-01-27T14:07:28Z", "is_private": false, "attachment_id": null}]