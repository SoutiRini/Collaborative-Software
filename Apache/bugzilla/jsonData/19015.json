[{"count": 0, "tags": [], "bug_id": 19015, "attachment_id": null, "is_private": false, "id": 35147, "time": "2003-04-14T23:08:09Z", "creator": "George.Lindholm@ubc.ca", "creation_time": "2003-04-14T23:08:09Z", "text": "I don't understand why this is happening, but jk2 would only connect to localhost, \nignoring the hostname I specified. \nAfter digging into the code, I came up with this fix (I don't understand why memcpy \nwas failing in this instance, rc->s_addr ended up left initialize to 0x00): \nSolaris 5.8, 64bit, gcc 3.2.2 \n \n=================================================================== \nRCS file: ./jk/native2/common/RCS/jk_channel_socket.c,v \nretrieving revision 1.1 \ndiff -c -r1.1 ./jk/native2/common/jk_channel_socket.c \n*** ./jk/native2/common/jk_channel_socket.c     2003/04/14 21:24:32     1.1 \n--- ./jk/native2/common/jk_channel_socket.c     2003/04/14 22:46:54 \n*************** \n*** 205,211 **** \n                                                 struct sockaddr_in *rc) \n  { \n      int x; \n-     u_long laddr; \n \n  #ifdef AS400 \n      memset(rc, 0, sizeof(struct sockaddr_in)); \n--- 205,210 ---- \n*************** \n*** 240,251 **** \n          } \n  #endif \n \n!         laddr = ((struct in_addr *)hoste->h_addr_list[0])->s_addr; \n      } else { \n          /* If we found only digits we use inet_addr() */ \n!         laddr = inet_addr(host); \n      } \n-     memcpy(&(rc->sin_addr), &laddr , sizeof(laddr)); \n \n      return JK_OK; \n  } \n--- 239,251 ---- \n          } \n  #endif \n \n!       memcpy(&(rc->sin_addr), hoste->h_addr_list[0], \n!              sizeof(rc->sin_addr)); \n      } else { \n          /* If we found only digits we use inet_addr() */ \n!         in_addr_t laddr = inet_addr(host); \n!       memcpy(&(rc->sin_addr), &laddr , sizeof(rc->sin_addr)); \n      } \n \n      return JK_OK; \n  }"}]