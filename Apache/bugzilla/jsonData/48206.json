[{"attachment_id": 24545, "tags": [], "creator": "jsteijn@csc.com", "text": "Created attachment 24545\nthis zip has a sheet that kills hssf, and the larger file is a spreadsheet with VBA that generates the killer sheet.\n\nI have a spreadsheet generated by Excel 2003 that reliably triggers POI HSSF to\nask for all the memory my JVM has to give and then asks for more, causing a\nheap dump etc.  I have not seen this in bugtrack or on the user lists - for\nsmall sheets - and wonder if perhaps this is a unique error.\n\nMy spreadsheet is only 22 records, and about 11 columns. All data is general or\ntext format. My application is running under Java 1.4, a 2GB JVM on a quad\nprocessor server with 8 GB of physical memory. No other applications on the\nserver. The application is IBM Maximo Asset Manager 6.2 on a Websphere 6.0.2_27\n application server.\n\nAttached are: the XLS that kills HSSF, the XLS workbook with the VBA script\nthat creates that file, sample log data with stack trace.\n\nThis was originally noted on a system using POI 2.5 FINAL. Subsequently tested\non the same system with the POI 3.5 final library in place, no change in\nbehavior.\n\nNote, there are twenty to thirty PCs which produce Excel sheets that we access\nwith the POI API, only two machines are definitely associated with creating\nsheets with this pathological condition. For all I know they are running\ndefective versions of DAO or some other MS toolkit. The cause is irrelevant. I\nwould not expect HSSF to be able to read any file we cook up, but I would like\nto have a method to protect my application from what is in effect a denial of\nservice. \n\nThanks to anyone who can provide a patch, a workaround or any other trick we\ncan use to protect our system while preserving the functionality.\n\nStack trace:\n[11/11/09 6:50:04:243 EST] 00000038  O UOW=  source=SystemOut org=IBM\nprod=WebSphere component=Application Server\nthread=[maximo-LaborEntry.labentry_1]\n          2009-11-11 06:50:04,227   ERROR   maximo.crontaskmanager - \njava.lang.OutOfMemoryError\n    at java.util.ArrayList.add(ArrayList.java(Compiled Code))\n    at\norg.apache.poi.hssf.usermodel.HSSFWorkbook.<init>(HSSFWorkbook.java(Compiled\nCode))\n    at org.apache.poi.hssf.usermodel.HSSFWorkbook.<init>(HSSFWorkbook.java:210)\n    at org.apache.poi.hssf.usermodel.HSSFWorkbook.<init>(HSSFWorkbook.java:191)\n    at\ncom.csc.dupont.interfaces.inbound.labor.beans.ExcelDocToLaborEntry.readExcel(ExcelDocToLaborEntry.java:45)\n    at\ncom.csc.dupont.interfaces.inbound.labor.LaborEntryMaximo.processLaborEntry(LaborEntryMaximo.java:335)\n    at\ncom.csc.dupont.interfaces.inbound.labor.LaborEntryMaximo.processLaborEntryXlsDir(LaborEntryMaximo.java:291)\n    at\ncom.csc.dupont.interfaces.inbound.labor.LaborEntryMaximo.cronAction(LaborEntryMaximo.java:143)\n    at psdi.server.CronTaskManager$CronThread.run(CronTaskManager.java:1297)", "count": 0, "id": 132025, "time": "2009-11-16T21:12:39Z", "bug_id": 48206, "creation_time": "2009-11-16T21:12:39Z", "is_private": false}, {"count": 1, "tags": [], "text": "I experimented a little with the smaller the XLS file from your zip\n(name: \"Stine Nov. 9  lk.xls\", md5sum: bba472f37e3df4a8fb9a83459b54bec6).\n\nIt appears that this file is definitely broken.  Excel 2003 and 2007 both report data loss (several times) while opening this file.  So while it is probably OK for POI to throw some sort of exception, I agree that OutOfMemoryError is not the right one.\n\nHaving said that, it appears that the latest POI (svn trunk) does *not* throw OOME.  The line numbers in the stack trace you supplied don't correspond to any recent version of POI.  This leads me to believe that the bug has been fixed since whatever version of POI you are running.  I have marked this bug as 'fixed', but please re-open if you can show the OOME on a more recent version of POI.\n\nFor the record, here is the exception I get:\njava.lang.RuntimeException: Buffer underrun - requested 2 bytes but 1 was available\n\tat org.apache.poi.poifs.filesystem.DocumentInputStream.checkAvaliable(DocumentInputStream.java:202)\n\tat org.apache.poi.poifs.filesystem.DocumentInputStream.readUShort(DocumentInputStream.java:300)\n\tat org.apache.poi.poifs.filesystem.DocumentInputStream.readShort(DocumentInputStream.java:220)\n\tat org.apache.poi.hssf.record.RecordInputStream.readShort(RecordInputStream.java:234)\n\tat org.apache.poi.hssf.record.PrintSetupRecord.<init>(PrintSetupRecord.java:81)\n\t... 10 more", "is_private": false, "bug_id": 48206, "id": 132053, "time": "2009-11-17T12:47:18Z", "creator": "josh@apache.org", "creation_time": "2009-11-17T12:47:18Z", "attachment_id": null}, {"count": 2, "tags": [], "creator": "dfisher@jmlafferty.com", "text": "Could have been fixed with this one - https://issues.apache.org/bugzilla/show_bug.cgi?id=48085", "id": 132054, "time": "2009-11-17T12:57:06Z", "bug_id": 48206, "creation_time": "2009-11-17T12:57:06Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "creator": "jsteijn@csc.com", "text": "Created attachment 24555\nJava module that calls hssf, to set context of failure.", "id": 132071, "time": "2009-11-17T21:36:01Z", "bug_id": 48206, "creation_time": "2009-11-17T21:36:01Z", "is_private": false, "attachment_id": 24555}, {"count": 4, "tags": [], "bug_id": 48206, "is_private": false, "text": "Just re-reviewed the stack trace I just referenced and compared to the original stack trace. The line numbers are the same. That throws me, because I absolutely positively removed the POI 2.5 jar and replaced it with the POI 3.5 jar, both in my Eclipse installation (and referenced external jars) and in the target system library. \n\nAt this time on the east coast I am mentally running on empty, but I've got another local resource who can give me a second set of eyes on the setup to see if he can spot something I've missed. I would think that rebuilding with the newer jar would at least give us  new line numbers, if not a better result.", "id": 132072, "time": "2009-11-17T21:45:31Z", "creator": "jsteijn@csc.com", "creation_time": "2009-11-17T21:45:31Z", "attachment_id": null}, {"count": 5, "tags": [], "creator": "jsteijn@csc.com", "attachment_id": null, "id": 132128, "time": "2009-11-18T18:54:43Z", "bug_id": 48206, "creation_time": "2009-11-18T18:54:43Z", "is_private": false, "text": "Issue occurs in POIN 2.5, the functions used are not present in 3.5. Time to update the code and test again"}]