[{"count": 0, "tags": [], "bug_id": 2033, "attachment_id": null, "is_private": false, "id": 2762, "time": "2001-06-06T10:59:03Z", "creator": "james_thomas@enovia.com", "creation_time": "2001-06-06T10:59:03Z", "text": "Not really sure if this bug is all that important, but I thought it would be \nnice to at least have it documented.\n\n\n-----------------------------------------\nStep to recreate the problem (on NT):\n-----------------------------------------\n\nStep 1: Create a war file using JDK 1.1.8 \"jar\" command.  The jar command \ncreates and adds a \"MANIFEST.MF\" file to the war file (but note, a directory \nentry for the \"META-INF\" is not created).\n\nStep 2: Place the war file in the webapps directory and start tomcat.  When \ntomcat unpacks the war file, a FileNotFoundException will occur:\n   FileNotFoundException: META-INF/MANIFEST.MF\n   \n-----------------------------------------\nMy Analysis:\n-----------------------------------------\n\nThere are two items that contribute to this exception:\n\n1) There is not a directory entry in the war file for the \"META-INF\" \ndirectory.  The code \"Expand.java\" attempts to handle this, but there is \nanother factor contributing to the exception:\n\n2) The path delimeter character in the war file is the UNIX slash ('/')\n      Zip Entry name = META-INF/MANIFEST.MF\n      Java File (for example) = D:\\java\\jakarta-tomcat-3.2.1\\webapps\\ttt\\META-\nINF/MANIFEST.MF\n   So, when the code in \"Expand.java\" calls \"getParent\" to ensure the parent \ndirectory\n   is created, it returns \"D:\\java\\jakarta-tomcat-3.2.1\\webapps\\ttt\".  The \nparent\n   directory is incorrect because the path delimeter in the zip entry name is \nnot the\n   same as that of the platforms.\n\n-----------------------------------------\nPossible Solution:\n-----------------------------------------\n\nWhen the java.io.File object is created for the \n\nIn file \"Expand.java\":\n\nreplace:\n   File f = new File( dir, ze.getName() );\n   \nwith:\n  if( File.separatorChar == '\\\\' ) // NT\n     f = new File( dir, ze.getName().replace('/','\\\\') );\n  else\n     f = new File( dir, ze.getName() );\n\n-----------------------------------------\nWorkaround\n-----------------------------------------\nThought this bug causes no runtime problems, unless of course\nsomeone relies on the manifest for some reason, a workaround\nis to just create the jar file without a manifest."}, {"count": 1, "tags": [], "bug_id": 2033, "attachment_id": null, "id": 4517, "time": "2001-08-12T20:12:54Z", "creator": "cmanolache@yahoo.com", "creation_time": "2001-08-12T20:12:54Z", "is_private": false, "text": "Added the patch on 3.3.\nThank you very much for the detailed descriptions and the patch, I wish all bugs \nwere like this !"}]