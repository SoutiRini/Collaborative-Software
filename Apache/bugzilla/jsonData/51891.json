[{"count": 0, "tags": [], "bug_id": 51891, "text": "Encoutered with poi r1175705 (Through Tika)\n\njava.lang.StringIndexOutOfBoundsException: String index out of range: -57\n\tat java.lang.String.checkBounds(String.java:397)\n\tat java.lang.String.<init>(String.java:442)\n\tat org.apache.poi.util.StringUtil.getFromCompressedUnicode(StringUtil.java:114)\n\tat org.apache.poi.poifs.filesystem.Ole10Native.<init>(Ole10Native.java:133)\n\tat org.apache.poi.poifs.filesystem.Ole10Native.<init>(Ole10Native.java:85)", "id": 149758, "time": "2011-09-26T10:20:59Z", "creator": "pablo.queixalos@polyspot.com", "creation_time": "2011-09-26T10:20:59Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 51891, "is_private": false, "text": "Attachment to big (4.6MB) to be added. \nhttp://icp.ge.ch/sem/f30405/IMG/doc/multimedia.doc", "id": 149759, "time": "2011-09-26T10:25:16Z", "creator": "pablo.queixalos@polyspot.com", "creation_time": "2011-09-26T10:25:16Z", "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 51891, "attachment_id": 30774, "is_private": false, "id": 169760, "time": "2013-08-28T11:20:31Z", "creator": "bonniot@gmail.com", "creation_time": "2013-08-28T11:20:31Z", "text": "Created attachment 30774\nPatch adding testcases and proposed fix"}, {"count": 3, "tags": [], "bug_id": 51891, "attachment_id": null, "is_private": false, "id": 169761, "time": "2013-08-28T11:20:52Z", "creator": "bonniot@gmail.com", "creation_time": "2013-08-28T11:20:52Z", "text": "I also experience Ole10Native failing in various ways. Note that in Bug 46392, which initially introduced the Ole10Native class, Trejkaz attached several Ole streams which also fail with the current code.\n\nWhat  seems clear is that a \\1Ole10Native stream starts with 4 bytes giving the size of the rest of the stream. After that, the current Ole10Native class distinguishes between the \"plain\" mode where all the rest is simply the attached data, and the \"structured\" mode where a structured format is present, including several unknown flags, the fileName and the attached data proper. What is also clear is that currently the code fails in the \"structured\" mode for some inputs.\n\nI attach another failing case (oleObject2.bin) for which I know (given the data) that the \"plain\" mode should be used, but currently isn't (leading to a failure in the \"structured\" parsing code).\n\nI could not find a definitive specification of this \"structured\" mode and when it should be used. Analysis of the examples at hand lead me to tweak the logic (and use the \"plain\" mode more often), but this is purely speculative at this point. Any further insight would be welcome. Still, this avoids failures in all the cases from Bug 46392, from Bug 51891 and for my own testcase.\n\nI attach a patch that adds all these testcases, and changes the decision to use plain mode or not. Review would be welcome."}, {"count": 4, "tags": [], "bug_id": 51891, "is_private": false, "id": 169772, "creation_time": "2013-08-28T14:21:12Z", "time": "2013-08-28T14:21:12Z", "creator": "bonniot@gmail.com", "text": "I think I might have cracked this nut. The two inputs from Bug 46392 have the same storage class ID:\n0003000C-0000-0000-C000-000000000046\n\nIt's hard to find much information about this class ID, but it seems to be associated with some kind of \"Package\" (see for instance http://www.lookas.net/ftp/Software/Tools/LitWin_98/regist~1.reg). This in turn seems to suggest that the parsing done by Ole10Native might actually be valid only for this specific kind of content. If that's indeed the case, we can change the logic to use always \"plain\", except for content with exactly this storage class ID. This still passes all the known test cases, and feels much more right than the previous attempt.\n\nI'll attach a new patch. It uses this new logic, and also adds one more test case from https://issues.apache.org/jira/browse/TIKA-1072 which is also fixed by this.\n\nNote that this suggest the \"structured\" parsing done by Ole10Native might not belong here at all, since it is tied to a specific content, but would logically belong to the client of POI. However I might be wrong here, and it also does not cost much to keep providing this feature, instead of breaking it and the corresponding API.", "attachment_id": null}, {"count": 5, "attachment_id": 30776, "creator": "bonniot@gmail.com", "text": "Created attachment 30776\nUpdated patch using the storage class ID method", "id": 169773, "time": "2013-08-28T14:22:23Z", "bug_id": 51891, "creation_time": "2013-08-28T14:22:23Z", "tags": [], "is_private": false}, {"count": 6, "attachment_id": null, "creator": "arjohn.kampman@gmail.com", "is_private": false, "id": 172737, "time": "2014-01-28T13:49:49Z", "bug_id": 51891, "creation_time": "2014-01-28T13:49:49Z", "tags": [], "text": "We ran into the same problem with the first couple of bytes being removed from Ole10Native streams. We have checked some 30 to 40 files and can confirm that the check for the storage class ID solves the issue. We've also noticed that all ole10native streams that have the additional info at the start, also have a CompObj entry with the string \"Package\" in it, like so:\n\nDocument: \"\u0001CompObj\" size = 80\n   00000000 01 00 FE FF 03 0A 00 00 FF FF FF FF 0C 00 03 00 ................\n   00000010 00 00 00 00 C0 00 00 00 00 00 00 46 08 00 00 00 ...........F....\n   00000020 50 61 63 6B 61 67 65 00 08 00 00 00 50 61 63 6B Package.....Pack\n   00000030 61 67 65 00 08 00 00 00 50 61 63 6B 61 67 65 00 age.....Package.\n   00000040 F4 39 B2 71 00 00 00 00 00 00 00 00 00 00 00 00 .9.q............\n \nThe storage class ID check looks easier and more robust though.\n\nAny idea when this patch will be applied to the trunk?"}, {"attachment_id": null, "tags": [], "bug_id": 51891, "text": "I'll have a look at the patch. When I've implemented the patch for #55578, I haven't looked for information for the \"plain\" Ole10Native encoding, but at least for the Ole10 package objects, which I've generated by Office 2003/2010, this information was structured (i.e. not plain).\n\nThis patch won't go anymore into 3.10 final, but I'm quite sure it will be in 3.11-beta1.", "count": 7, "id": 172800, "time": "2014-01-30T00:26:02Z", "creator": "kiwiwings@apache.org", "creation_time": "2014-01-30T00:26:02Z", "is_private": false}, {"count": 8, "tags": [], "creator": "kiwiwings@apache.org", "is_private": false, "id": 172852, "creation_time": "2014-02-01T21:49:33Z", "time": "2014-02-01T21:49:33Z", "bug_id": 51891, "text": "Thank you for the patch - applied with r1563483\nI've changed quite a bit to the proposed patch.\nIf you have even more ole10 files, please add them to the bug and I'll try-and-error again ...\nBut for now I'm closing it.", "attachment_id": null}]