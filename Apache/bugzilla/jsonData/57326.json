[{"count": 0, "tags": [], "creator": "efouret@voyages-sncf.com", "attachment_id": null, "id": 179613, "time": "2014-12-08T09:16:59Z", "bug_id": 57326, "creation_time": "2014-12-08T09:16:59Z", "is_private": false, "text": "According to the official Java EE Javadoc (cf. https://docs.oracle.com/javaee/7/api/javax/servlet/AsyncListener.html#onStartAsync%28javax.servlet.AsyncEvent%29), AsyncListeners should be allowed to re-register themselves when the event \"onStartAsync\" is started : \"This AsyncListener will not receive any events related to the new asynchronous cycle unless it registers itself (via a call to AsyncContext.addListener(javax.servlet.AsyncListener)) with the AsyncContext that is delivered as part of the given AsyncEvent.\".\nIn tomcat 7.0.x, the actual implementation prevents this behavior since the listeners list is cleared *after* firing the event (cf. AdyncContextImpl.java:366). If the list was cleared before firing the event, listeners would be able to re-register themselves if needed."}, {"count": 1, "tags": [], "text": "Thanks for the report.\n\nThis has been fixed in trunk, 8.0.x (for 8.0.16 onwards) and 7.0.x (for 7.0.58 onwards).", "attachment_id": null, "id": 179770, "creator": "markt@apache.org", "time": "2014-12-15T16:24:48Z", "bug_id": 57326, "creation_time": "2014-12-15T16:24:48Z", "is_private": false}]