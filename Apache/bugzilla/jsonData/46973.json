[{"count": 0, "tags": [], "bug_id": 46973, "is_private": false, "id": 126015, "creation_time": "2009-04-06T03:14:20Z", "time": "2009-04-06T03:14:20Z", "creator": "matthew.knl@gmail.com", "text": "I use following codes to read attached \"problem.xls\" Excel file to list the named \nranges. But it throws IllegalArgumentException when calling namedRange.isDeleted().\n\n--\n\nFileInputStream fis = new FileInputStream(\"problem.xls\");\nPOIFSFileSystem poifs = new POIFSFileSystem(fis);\nHSSFWorkbook excelWB = new HSSFWorkbook(poifs);\nfor (int i = 0; i < excelWB.getNumberOfNames(); i++)\n{\n\ttry\n\t{\n\t\tName namedRange = excelWB.getNameAt(i);\n\t\tif (namedRange.isFunctionName() || namedRange.isDeleted())\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\tSystem.out.println(\"name: \" + namedRange.getNameName());\n\t}\n\tcatch (Exception ex)\n\t{\n\t\tlogger.error(\"Read named range failed.\");\n\t\tlogger.error(ex, ex);\n\t\tSystem.out.println(ex);\n\t}\n}\n\n--\n\nException details:\n\njava.lang.IllegalArgumentException: ptgs must not be null\n\tat org.apache.poi.ss.formula.FormulaRenderer.toFormulaString(FormulaRenderer.java:48)\n\tat org.apache.poi.hssf.model.HSSFFormulaParser.toFormulaString(HSSFFormulaParser.java:80)\n\tat org.apache.poi.hssf.usermodel.HSSFName.getRefersToFormula(HSSFName.java:192)\n\tat org.apache.poi.hssf.usermodel.HSSFName.isDeleted(HSSFName.java:201)\n\n--\n\nPlease help to check this issue. Thanks!", "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 46973, "attachment_id": 23444, "id": 126016, "time": "2009-04-06T03:15:08Z", "creator": "matthew.knl@gmail.com", "creation_time": "2009-04-06T03:15:08Z", "is_private": false, "text": "Created attachment 23444\nproblem.xls"}, {"count": 2, "tags": [], "creator": "josh@apache.org", "attachment_id": null, "id": 126030, "time": "2009-04-06T13:07:46Z", "bug_id": 46973, "creation_time": "2009-04-06T13:07:46Z", "is_private": false, "text": "It appears that the attached workbook has a defined name \"UPSState\" with all other properties uninitialised.  Excel silently ignores the name, and if you re-save, the name is removed.  It seems like the offending record was created via POI, using code like this:\n\nWorkbook wb = new HSSFWorkbook();\nwb.createSheet(\"Sheet1\");\nName n = wb.createName();\nn.setNameName(\"UPSState\");\nwb.write(new FileOutputStream(\"bad-name.xls\");\n\nIt would be a big change to make POI do the same as Excel (delete the name and adjust all formulas), so it was just fixed to avoid the IllegalArgumentException.  For uninitialised defined names, isDeleted() will return false and getRefersToFormula() will return null. \n\nFixed in svn r762479\njunits added"}]