[{"count": 0, "attachment_id": null, "bug_id": 45102, "text": "First of all I cannot reproduce the bug voluntarily.\nTomcat 5.5.26\n\ndescription of a typical case:\n* The server is up and running. \n* A servlet is called by a batch running on a mainframe, using a batch browser (Lynx) to call the servlet. \n* The first thing the servlet does is \"((HttpServletRequest)request).getSession()\", and the exception is thrown:\njava.lang.IllegalStateException: Impossible de cr\u00e9er une sessionapr\u00e8s que la r\u00e9ponse ait \u00e9t\u00e9 envoy\u00e9e\n\tat org.apache.catalina.connector.Request.doGetSession(Request.java:2221)\n\tat org.apache.catalina.connector.Request.getSession(Request.java:2031)\n\tat org.apache.catalina.connector.RequestFacade.getSession(RequestFacade.java:832)\n\tat org.apache.catalina.connector.RequestFacade.getSession(RequestFacade.java:843)\n\tat javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:224)\n\tat adp.data.RunImportData.doGet(RunImportData.java:68)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:690)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:803)\n\tat org.apache.catalina.servlets.InvokerServlet.serveRequest(InvokerServlet.java:420)\n\tat org.apache.catalina.servlets.InvokerServlet.doGet(InvokerServlet.java:134)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:690)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:803)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:269)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:188)\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:213)\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:174)\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:117)\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:108)\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:174)\n\tat org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:874)\n\tat org.apache.coyote.http11.Http11BaseProtocol$Http11ConnectionHandler.processConnection(Http11BaseProtocol.java:665)\n\tat org.apache.tomcat.util.net.PoolTcpEndpoint.processSocket(PoolTcpEndpoint.java:528)\n\tat org.apache.tomcat.util.net.LeaderFollowerWorkerThread.runIt(LeaderFollowerWorkerThread.java:81)\n\tat org.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run(ThreadPool.java:689)\n\tat java.lang.Thread.run(Thread.java:595)\n\nI searched the forums, read the code of Tomcat, and saw this: for a reason my session is either null or invalidated and something has already started to respond the request. \n\n\nThe message contained in the exception corresponds to the resource \"coyoteRequest.sessionCreateCommitted\".\n\nThis exception is produced in several servlets not just in a specific one. \nI have set up a session listener in the configuration so as to free objects related to the session when this one is invalidated.", "id": 117172, "time": "2008-05-30T01:27:41Z", "creator": "business.salou@gmail.com", "creation_time": "2008-05-30T01:27:41Z", "tags": [], "is_private": false}, {"count": 1, "tags": [], "bug_id": 45102, "text": "To get this exception:\n a) you must request a session\n b) you must be using cookies for session ID\n c) the response must already be committed\n\nc) is the one I would look at. Are you sure getSession() is the first thing you call? Given you are using the invoker servlet it is likely that the error you are seeing is a side-effect of this. There are lots of reasons for getting rid of the invoker servlet (see http://wiki.apache.org/tomcat/FAQ/Miscellaneous#Q2). I suggest removing the invoker servlet and seeing if the error is fixed.", "id": 117262, "time": "2008-06-02T11:18:51Z", "creator": "markt@apache.org", "creation_time": "2008-06-02T11:18:51Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 45102, "text": "OK I'll get rid of the invoker Servlet, for me it's the best possible explanation why the response should already be committed.\nOne doubt anyway: I've declared a session listener in the tomcat's config so as to be able to trace the creation/removal of sessions (preloading of data / clean up and so on). Do you think a kind of \"interference\" is possible (if the session listeners are notified asynchronously...) ? well it's just a idea...\n\nHowever I still don't understand the reason why a new session cannot be created if the response has been committed. The session would be reusable for the new calls... and technically speaking I don't get the point.\n\nI'll change this next week I hope.\n\nThanks", "id": 117436, "time": "2008-06-06T07:31:55Z", "creator": "business.salou@gmail.com", "creation_time": "2008-06-06T07:31:55Z", "is_private": false, "attachment_id": null}]