[{"count": 0, "tags": [], "creator": "ville@jussi.la", "text": "Compiled apache with --enable-dav with gcc version 4.2.0. AIX OS level is 5300-08-04-0844. \n\nEnabled DAV for NetApp vFiler filesystem (=network mounted) including up to 57 directories each holding 3000 to 20000 files. Filesystem is holding approximately 70 Gigabytes of data. \n\nApache2 installation and DavLockDB located on SAN-volume. \n\nListing directories via a browser (without DAV) does not make httpd to increase memory allocation when browsing through directories. Everything works nicely.  \n\nListing directories via Windows XP SP3 DAV-client makes httpd to allocate more and more memory when opening directory after directory. Everythings seems to work, but more and more memory is allocated and nothings seems to be freed. In the end, all the AIX memory is allocated by the httpd and AIX starts to kill processes. \n \n\nDAV enabled with : \n<Directory \"/netapp/...\">\n    Dav On\n    Options Indexes\n    Order Allow,Deny\n    Allow from all\n\n    AuthType Basic\n    AuthBasicProvider file\n    AuthUserFile /home/.../httpd/conf/passwords\n    AuthGroupFile /home/.../httpd/conf/groups", "id": 131699, "time": "2009-11-04T13:00:38Z", "bug_id": 48130, "creation_time": "2009-11-04T13:00:38Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 48130, "attachment_id": null, "id": 133042, "time": "2009-12-21T13:14:54Z", "creator": "vuser1@test123.ru", "creation_time": "2009-12-21T13:14:54Z", "is_private": false, "text": "Same problem on Win32. There must be memory leak. Steps:\n\nStep1. On Win2003 client, right-click WebDAV folder properties. Client calculates folder size - enumerates subfolders. \nResult: 117068 Files, 11537 sub-folders, server process httpd.exe has 602Mb WorkingSet and 629Mb PrivateBytes. \n\nStep2. On server, execute empty.exe ResourseKit utility which calls SetProcessWorkingSetSize(-1, -1) for httpd.\nResult: httpd.exe WorkingSet decreases to 2Mb\n\nStep3. On client, close properties and open again.\nResult: 610Mb WorkingSet and 900Mb PrivateBytes. \n\n\t<Directory \"H:/sklad\"> \n\t\tAllow from all\t\n\t\tOptions FollowSymLinks Indexes\n\t\tAllowOverride Limit\n\t\tReadmeName /README.html\n\t\tHeaderName /HEADER.html\n\n\t\tDav On\n\t\tAuthType Digest\n\t\tAuthDigestDomain /files/sklad\n\t\tAuthName \"sklad\"\n\t\tAuthDigestProvider file"}, {"count": 2, "tags": [], "bug_id": 48130, "is_private": false, "text": "Memory management in mod_dav is broken. A PROPFIND of a dir with 10000 files needs around 140MB of memory on my system.\n\nSome initiative to overhaul pool usage was described here:\n\nhttp://mail-archives.apache.org/mod_mbox/httpd-dev/200305.mbox/<86smqzgcuf.fsf%40kepler.ch.collab.net>\n\nUnfortunately this was never completed.\n\nProbably the pool guidelines from subversion should be used:\n\nhttp://subversion.apache.org/docs/community-guide/conventions.html#apr-pools\n\nThis would mean that most mod_dav functions would need to tak a scratch pool and a result pool as parameters. And dav_push_error needs some magic to ensure correct lifetime of the error stack.\n\nIn addition there is the problem that the response is streamed to the client while locks are held (PR 36636).\n\nThis looks like a large amount of work. Probably a project for Apache 3.0 and not for 2.4.", "id": 135138, "time": "2010-03-07T13:11:00Z", "creator": "sf@sfritsch.de", "creation_time": "2010-03-07T13:11:00Z", "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 48130, "attachment_id": null, "text": "We have also come into this problem in our product. As in our case httpd runs on an embedded device memory is a bit constrained, but some users still create directories with more than a thousand files per directory which uses up a lot of memory.\n\nTo fix the situation we have done a few patches to mod_dav and mod_dav_fs to remove as much O(N) dependencies on the number of files per directory. We have had them in production since long with no issues, so I am pushing them to be considered for inclusion in httpd. Note that the patches are probably not perfect but still they do improve the situation significantly. The only remaining O(N) source I see is the lock DB, but that is O(N) in the number of locks, so I think that is much less of an issue.\n\nPatches against httpd 2.2.21 follow.", "id": 153298, "time": "2012-01-30T15:17:28Z", "creator": "Diego.SantaCruz@spinetix.com", "creation_time": "2012-01-30T15:17:28Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 48130, "attachment_id": 28232, "text": "Created attachment 28232\nmod_dav / mod_dav_fs memory reduction patch 1/5\n\nUse a subpool while doing iteration on dir entries in dav_fs_walker to reduce\nmemory usage, however this does not help on *nix since apr_stat does not use\nthe pool in those platforms.", "id": 153299, "time": "2012-01-30T15:19:58Z", "creator": "Diego.SantaCruz@spinetix.com", "creation_time": "2012-01-30T15:19:58Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 48130, "attachment_id": 28233, "id": 153300, "time": "2012-01-30T15:23:25Z", "creator": "Diego.SantaCruz@spinetix.com", "creation_time": "2012-01-30T15:23:25Z", "is_private": false, "text": "Created attachment 28233\nmod_dav / mod_dav_fs memory reduction patch 2/5\n\nUse subpool when allocating a propdb and introduce function variants that\nallow destroying the propdb pool when the propdb of a resource is closed\n(dav_close_propdb2() and dav_get_props2()).\nThen use these new functions to destroy the propdb pool after use in dav_propfind_walker() reducing memory usage to O(1) instead of O(N) with the number of resources in a collection and greatly helps PROPFIND.\n\nSo far these new functions are not exported from the mod_dav module, that might be considered when an mod_dav API addition is welcome."}, {"count": 6, "tags": [], "text": "Created attachment 28234\nmod_dav / mod_dav_fs memory reduction patch 3/5\n\nUse a scratch pool when walking the tree for DAV copy and move requests so\nthat memory usage is O(1) instead of O(N) with the number of resources\nper directory; note however that it is still O(N) with the number of\ndirectories in the walked hierarchy.", "attachment_id": 28234, "id": 153301, "creator": "Diego.SantaCruz@spinetix.com", "time": "2012-01-30T15:24:20Z", "bug_id": 48130, "creation_time": "2012-01-30T15:24:20Z", "is_private": false}, {"count": 7, "tags": [], "creator": "Diego.SantaCruz@spinetix.com", "text": "Created attachment 28235\nmod_dav / mod_dav_fs memory reduction patch 4/5\n\nWhen doing a PROPFIND mod_dav creates a subrequest for some live properties\n(e.g., getcontenttype and getcontentlanguage) but does not destroy the\nsubrequest, thus the associated memory is not freed until the main request\nis done. This patch destroys the subrequest when a propdb is closed,\nsignificantly reducing the amount of memory when doing a PROPFIND for all\nproperties or a set of properties requiring subrequests.", "id": 153302, "time": "2012-01-30T15:25:37Z", "bug_id": 48130, "creation_time": "2012-01-30T15:25:37Z", "is_private": false, "attachment_id": 28235}, {"count": 8, "tags": [], "bug_id": 48130, "attachment_id": 28236, "is_private": false, "id": 153303, "time": "2012-01-30T15:26:20Z", "creator": "Diego.SantaCruz@spinetix.com", "creation_time": "2012-01-30T15:26:20Z", "text": "Created attachment 28236\nmod_dav / mod_dav_fs memory reduction patch 5/5\n\nmod_dav_fs' dav_fs_walker() always uses the same pool during the tree walk,\nthis patch changes that to using subpools for child resources to avoid\nhaving an O(N) memory consumption on the number of resources per dir."}]