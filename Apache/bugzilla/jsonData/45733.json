[{"count": 0, "tags": [], "creator": "desrt@desrt.ca", "attachment_id": null, "is_private": false, "id": 120305, "time": "2008-09-02T23:25:42Z", "bug_id": 45733, "creation_time": "2008-09-02T23:25:42Z", "text": "In context of having <fo:block> with multiple font families listed, like:\n\n<block font-family='serif,Symbol'>\n  (\u22001) (+2) (\u21913) (+4) (\u22005)\n</block>\n\nor\n\n<block font-family='serif,Symbol'>\n  (\u22001) (+2) (<character character='\u2191'/>3) (+4) (\u22005)\n</block>\n\n\nfrom http://mail-archives.apache.org/mod_mbox/xmlgraphics-fop-users/200808.mbox/%3c1220224006.15155.13.camel@moonpix%3e\n\n\"\"\"\n'Symbol' is a taller font than 'serif'.\n\nFOP decides how tall each line should be and then places characters\nwithin that line.  In the event that a character is \"too tall\" to fit\nthen it ends up being aligned to the top (and hanging out the bottom).\nThis is what happens when you have UTF8 character inline.\n\nWhen you use <character> you somehow get FOP to notice that you're\nplacing taller characters in the line and it takes this into account\nwhen deciding the proper height of the line.\n\nWhen you don't use <character> then FOP makes its decision about the\nheight of the line based solely on the first listed font family\n(ignoring all of the others, irrespective of if they are used for font\nsubstitution in that line).\n\n\"\"\"\n\nAndreas Delmelle provides addition insight in his email here: http://mail-archives.apache.org/mod_mbox/xmlgraphics-fop-users/200809.mbox/%3c12DB9901-D56D-4C4C-A77B-CF3A35C4EE5E@telenet.be%3e\n\n\"\"\"\nHaving taken a quick, closer look at the related code, it goes in  \nthis direction indeed.\n\nTechnically, the story is that, without fo:character or fo:inline a  \ncombined text-area is generated for each separate 'word' (in the  \nsense of: uninterrupted sequence of non-white-space characters,  \nregardless of whether they can be rendered in the same font).\n\nThose areas are currently all based on a single alignment-context  \n(which seems to correspond to the first font-family in the list; this  \nexplains why we get a different result when putting the Symbol font  \nfirst). AFAICT, it does not seem like a real tough problem to  \nsolve... I do seem to remember Max pointing out this issue at some  \ntime while implementing font-selection (?)\nIf we place the characters in an fo:inline or an fo:character, the  \nonly big difference is that a new alignment-context is created  \nautomatically, which later on triggers correct baseline alignment of  \nthe two pieces.\n\"\"\""}, {"count": 1, "tags": [], "bug_id": 45733, "is_private": false, "id": 135276, "attachment_id": null, "creator": "e.d.programmer@gmail.com", "creation_time": "2010-03-11T14:30:35Z", "time": "2010-03-11T14:30:35Z", "text": "I'm also having a problem with this, just trying to use 1 custom font from 2 different font files, one for a normal Lucida and one for bold.  The bold one came out bigger in a PDF which looks really bad, so I've been looking for a fix or workaround to either get them to the same size or at least line them up on the bottom edge instead.  The output looked better in the PreviewPanel than it did in the PDF."}, {"count": 2, "tags": [], "bug_id": 45733, "text": "This was exactly the issue that I pointed out - tried to fix it back then which did not work out, and then forgot about it.\n\nrelated bug #46720", "id": 135292, "time": "2010-03-12T08:05:32Z", "creator": "max@berger.name", "creation_time": "2010-03-12T08:05:32Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "creator": "gadams@apache.org", "attachment_id": null, "text": "resetting P2 open bugs to P3 pending further review", "id": 157525, "time": "2012-04-07T01:44:12Z", "bug_id": 45733, "creation_time": "2012-04-07T01:44:12Z", "is_private": false}]