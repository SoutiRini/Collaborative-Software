[{"count": 0, "tags": [], "bug_id": 57588, "attachment_id": null, "id": 181122, "time": "2015-02-18T04:59:11Z", "creator": "ozzyo86@gmail.com", "creation_time": "2015-02-18T04:59:11Z", "is_private": false, "text": "Hi,\nIn the following code in apache-ant-1.9.4/src/main/org/apache/tools/ant/types/resources/Intersect.java:\n--------------------------\n\n    protected Collection<Resource> getCollection() {\n        List<ResourceCollection> rcs = getResourceCollections();\n        int size = rcs.size();\n        if (size < 2) {\n            throw new BuildException(\"The intersection of \" + size\n                + \" resource collection\" + ((size == 1) ? \"\" : \"s\")\n                + \" is undefined.\");\n        }\n        List<Resource> al = new ArrayList<Resource>();\n        Iterator<ResourceCollection> rc = rcs.iterator();\n        al.addAll(collect(rc.next()));\n        while (rc.hasNext()) {\n            al.retainAll(collect(rc.next()));\n        }\n        return al;\n    }\n\n private List<Resource> collect(ResourceCollection rc) {\n        List<Resource> result = new ArrayList<Resource>();\n        for (Resource r : rc) {\n            result.add(r);\n        }\n        return result;\n    }\n\n--------------------------- \n\nThe call to retainAll is getting a List of resources as a parameter instead of a HashSet, so the performance is bound to be quadratic rather than linear, with the potential of being a performance issue.\n \nThe reason is that retainAll will perform linear containment checks for each of the elements in result.\n\nThis can be potentially noticeable for inputs where the nested resource lists are similar and the resulting intersection is large.\n\nA potential solution would be to simply convert the parameter of retainAll into a set during the call, because the order of the elements for the retainAll parameter doesn't matter.\n\nIs this a problem that needs to be fixed ?\n\nThanks,\n Oswaldo."}, {"count": 1, "tags": [], "text": "This could certainly be improved, yes.", "attachment_id": null, "bug_id": 57588, "id": 181171, "time": "2015-02-19T11:42:50Z", "creator": "bodewig@apache.org", "creation_time": "2015-02-19T11:42:50Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 57588, "attachment_id": null, "is_private": false, "id": 181207, "time": "2015-02-20T09:13:31Z", "creator": "bodewig@apache.org", "creation_time": "2015-02-20T09:13:31Z", "text": "git commit da83de9\n\nI've opted to use a LinkedHashSet since the current code retained the order of resources and I dodn't want to break this, even though we don't formally guarantee any ordering.  <difference> - for example - does the same."}]