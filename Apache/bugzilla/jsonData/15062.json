[{"count": 0, "text": "If there is a formula like for example 'OFFSET(A1,0,0)' in an Excel sheet, HSSF \nstops parsing at row 32 while iterating the rows. The Problem seems to occur \nonly with formulas that return strings.", "bug_id": 15062, "attachment_id": null, "id": 27404, "time": "2002-12-04T13:24:30Z", "creator": "bd8@gmx.de", "creation_time": "2002-12-04T13:24:30Z", "tags": [], "is_private": false}, {"count": 1, "tags": [], "text": "Attach one.  Include the minimum source necessary to reproduce the problem.", "is_private": false, "bug_id": 15062, "id": 27413, "time": "2002-12-04T15:18:59Z", "creator": "poi-support@buni.org", "creation_time": "2002-12-04T15:18:59Z", "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 15062, "attachment_id": 4050, "id": 27426, "time": "2002-12-04T18:11:42Z", "creator": "bd8@gmx.de", "creation_time": "2002-12-04T18:11:42Z", "is_private": false, "text": "Created attachment 4050\nExcel sheet containing formula 'Offset' and size of 35 rows"}, {"count": 3, "tags": [], "creator": "bd8@gmx.de", "attachment_id": 4051, "is_private": false, "id": 27427, "time": "2002-12-04T18:13:45Z", "bug_id": 15062, "creation_time": "2002-12-04T18:13:45Z", "text": "Created attachment 4051\nJava program for parsing sheet \"Test.xls\""}, {"count": 4, "tags": [], "creator": "volker.tirjan@bundesbank.de", "text": "Created attachment 4393\nExcel file, three sheets with text references in different rows", "id": 29119, "time": "2003-01-10T12:20:44Z", "bug_id": 15062, "creation_time": "2003-01-10T12:20:44Z", "is_private": false, "attachment_id": 4393}, {"count": 5, "tags": [], "text": "Hello,\n\nI use jakarta-poi-1.9.0-dev-20021107 and encountered a similar problem: Each \nreference (=A1) leads to a wrong result of row.getLastRowNum(), if the \nreferenced cell contains String data. The returned length of the sheet depends \non the row in which the =reference was placed.\n\nI send you some code and a Workbook, to demonstrate the mysteria: Sheet1 one has \n99 rows an Text in B1, sheets2 & 3 are also 99 rows long but have a reference to \nsheet1!B1 in B31/B32 (row numbering 0-based). As you will see the barrier \nseems to be always n*32 ...\n\nIf you need some more information, please contact me.\nHave a good time,\n\nVolker\n\n===============================\nHere's the very basic sample code:\n(the referenced excel-sheet is Attachment #4393)\n(The sample output follows after)\n\npublic static void poiFehler() {\n\ttry {\n\n\t\tPOIFSFileSystem fs = new POIFSFileSystem(new \nFileInputStream(\"C:\\\\tmp\\\\Mappe1.xls\"));\n       \t\t HSSFWorkbook wb = new HSSFWorkbook(fs);\n\t\tint x;\n\t\tint realLen=98;\n\t\t\n\t\tHSSFSheet sheet = wb.getSheet(\"Tabelle1\");\n\t\tx = sheet.getLastRowNum();\n\t\tSystem.out.println(\"Tabelle1: Length=\"+realLen+\", no \nString-reference\");\n\t\tSystem.out.println(\"POI-LastRowNum=\"+x);\n\t\tif(realLen==x) System.out.println(\"OK\");\n\t\telse System.out.println(\"BUG!!\");\n\t\tSystem.out.println();\n\n\t\tSystem.out.println(\"Tabelle2: Length=\"+realLen+\", \nString-reference in row 31 (or before)\");\t\n\t\tsheet = wb.getSheet(\"Tabelle2\");\n\t\tx = sheet.getLastRowNum();\t\t\n\t\tSystem.out.println(\"POI-LastRowNum=\"+x);\n\t\tif(realLen==x) System.out.println(\"OK\");\n\t\telse System.out.println(\"BUG!!\");\n\t\tSystem.out.println();\n\n\t\tSystem.out.println(\"Tabelle3: Length=\"+realLen+\", \nString-reference in row 32 (or behind)\");\t\n\t\tsheet = wb.getSheet(\"Tabelle3\");\n\t\tx = sheet.getLastRowNum();\t\t\n\t\tSystem.out.println(\"POI-LastRowNum=\"+x);\n\t\tif(realLen==x) System.out.println(\"OK\");\n\t\telse System.out.println(\"BUG!!\");\n\t\tSystem.out.println();\n\t\t    \n\t} catch (IOException e) {\n\t\t\t\t\t\n\t\tSystem.out.println(\"IO-Exc.\");\n\t}\n\t\t\n}\n\n------------------------------------------------\n\nOUTPUT:\nTabelle1: Length=98, no String-reference\nPOI-LastRowNum=98\nOK\n\nTabelle2: Length=98, String-reference in row 31 (or before)\nPOI-LastRowNum=31\nBUG!!\n\nTabelle3: Length=98, String-reference in row 32 (or behind)\nPOI-LastRowNum=63\nBUG!!", "is_private": false, "bug_id": 15062, "id": 29121, "time": "2003-01-10T12:47:06Z", "creator": "volker.tirjan@bundesbank.de", "creation_time": "2003-01-10T12:47:06Z", "attachment_id": null}, {"count": 6, "tags": [], "bug_id": 15062, "attachment_id": 4502, "text": "Created attachment 4502\npatch file to add string handling", "id": 29784, "time": "2003-01-21T15:04:50Z", "creator": "anthonyj@sunsaar.com", "creation_time": "2003-01-21T15:04:50Z", "is_private": false}, {"count": 7, "tags": [], "bug_id": 15062, "is_private": false, "text": "The attachment should patch this problem.\nThe problem was the loading loop was ending when it ran into Strings at row 32.\nThere is similar code in the Cell loading loop which ignores strings, and\nthis appears to work for all spreadsheets that I have tried.", "id": 29785, "time": "2003-01-21T15:06:40Z", "creator": "anthonyj@sunsaar.com", "creation_time": "2003-01-21T15:06:40Z", "attachment_id": null}, {"count": 8, "tags": [], "creator": "poi-support@buni.org", "attachment_id": null, "id": 29786, "time": "2003-01-21T15:12:16Z", "bug_id": 15062, "creation_time": "2003-01-21T15:12:16Z", "is_private": false, "text": "so explain this patch to me.  How will this work given a normal sheet with\nstring records which just need to be converted to LabelSST"}, {"count": 9, "tags": [], "creator": "anthonyj@sunsaar.com", "attachment_id": null, "is_private": false, "id": 29794, "time": "2003-01-21T15:47:00Z", "bug_id": 15062, "creation_time": "2003-01-21T15:47:00Z", "text": "As far as I can tell the only function that this function performs is setting up\nthe list of  rowrecords --\nwith regards to the LabelSST - it was never done here. This function actually\nhas three section, only two of which ever had an\neffect.\n        The first section simply set and created a object that was never used.\n             if (rec instanceof LabelSSTRecord) {\n                LabelSSTRecord new_name = (LabelSSTRecord) rec;\n                //System.out.println(\"Row for LabellSST: \" + new_name.getRow());\n            }\n\n    The second breaks the loop under certain circumstances:\n         if (rec instanceof StringRecord == false && !rec.isInValueSection() &&\n!(rec instanceof UnknownRecord))\n            {\n                //System.out.println(\"Record is of type: \" + rec.getClass());\n            //    StringRecord r = (StringRecord)rec;\n            //    System.out.println(\"String:\" + r.getString());\n                break;\n            }\n\nThe third ( the most important one), check to see if this is a RowRecord, and if\nso, adds new a new row.\n          if (rec.getSid() == RowRecord.sid)\n            {\n                insertRow(( RowRecord ) rec);\n                RowRecord row = (RowRecord)rec;\n            //    System.out.println(\"Row:\" + row.getRowNumber());\n\n            }\n"}, {"count": 10, "tags": [], "creator": "volker.tirjan@bundesbank.de", "attachment_id": null, "is_private": false, "id": 29845, "time": "2003-01-22T08:52:55Z", "bug_id": 15062, "creation_time": "2003-01-22T08:52:55Z", "text": "Hi and thanks!\nThe patch works fine with my cases. Thanks for the quick help.\nDo I get a message, if and when this patch is included in a upcomming release? \nVolker"}, {"count": 11, "tags": [], "bug_id": 15062, "attachment_id": 5833, "text": "Created attachment 5833\nCleaner patch against current CVS", "id": 35144, "time": "2003-04-14T22:55:07Z", "creator": "chris@sixlegs.com", "creation_time": "2003-04-14T22:55:07Z", "is_private": false}, {"count": 12, "tags": [], "bug_id": 15062, "attachment_id": null, "is_private": false, "id": 35145, "time": "2003-04-14T22:57:24Z", "creator": "chris@sixlegs.com", "creation_time": "2003-04-14T22:57:24Z", "text": "The above patch is just a cleaned up version of the one already attached to this\nbug. As you can see it is just a one line fix.\n\nThe patch does fix the problem I was encountering (sheet says it only has 32\nrows), but I can't make any claims as to if it is theoretically correct.\n"}, {"count": 13, "tags": [], "bug_id": 15062, "attachment_id": null, "text": "Im going to commit this tonight.", "id": 36918, "time": "2003-05-08T18:50:04Z", "creator": "dmui@apache.org", "creation_time": "2003-05-08T18:50:04Z", "is_private": false}, {"count": 14, "tags": [], "creator": "dmui@apache.org", "attachment_id": null, "is_private": false, "id": 36971, "time": "2003-05-09T12:43:02Z", "bug_id": 15062, "creation_time": "2003-05-09T12:43:02Z", "text": "Fixed root of the problem that all the rows weren't being aggregated and\ncommitted fix.  Please verify! And thanks for the bug report and debugging."}]