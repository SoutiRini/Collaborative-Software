[{"count": 0, "tags": [], "bug_id": 52131, "attachment_id": null, "is_private": false, "id": 151158, "time": "2011-11-03T18:06:21Z", "creator": "sebb@apache.org", "creation_time": "2011-11-03T18:06:21Z", "text": "The JmeterKeyStore class is not really needed any more, and could be dropped in favour of DefaultKeyStore.\n\nThis would then allow the ctor to be extended to include the indexes, which could then be final variables.\n\nAlternatively, merge DefaultKeyStore into JmeterKeyStore and make that class concrete. That would probably mean fewer changes.\n\nThoughts?"}, {"count": 1, "attachment_id": null, "bug_id": 52131, "text": "First solution seems fine for me.", "id": 151207, "time": "2011-11-04T20:59:02Z", "creator": "p.mouawad@ubik-ingenierie.com", "creation_time": "2011-11-04T20:59:02Z", "tags": [], "is_private": false}, {"count": 2, "tags": [], "text": "Decided to merge implementation code into JMeterKeyStore instead.\n\nURL: http://svn.apache.org/viewvc?rev=1197862&view=rev\nLog:\nBug 52131 - Eliminate DefaultKeyStore and simplify code - part 1\n\nModified:\n   jmeter/trunk/src/core/org/apache/jmeter/util/keystore/JmeterKeyStore.java\n\nURL: http://svn.apache.org/viewvc?rev=1197863&view=rev\nLog:\nBug 52131 - Eliminate DefaultKeyStore and simplify code - part 1b\n\nRemoved:\n   jmeter/trunk/src/core/org/apache/jmeter/util/keystore/DefaultKeyStore.java\n\nStill need to tidy code that uses the class", "is_private": false, "id": 151216, "creator": "sebb@apache.org", "time": "2011-11-05T01:33:49Z", "bug_id": 52131, "creation_time": "2011-11-05T01:33:49Z", "attachment_id": null}, {"count": 3, "tags": [], "creator": "p.mouawad@ubik-ingenierie.com", "attachment_id": null, "is_private": false, "id": 151669, "time": "2011-11-20T18:26:07Z", "bug_id": 52131, "creation_time": "2011-11-20T18:26:07Z", "text": "From dev list discussion, implementation requirements:\n>> In earlier versions of JMeter, the client keystore relied on the\n>> system property javax.net.ssl.keyStore.\n>> This could either be set by the user prior to starting the test, or\n>> the SSL Manager Option menu item could be used to set the system\n>> property which would be picked up later.\n>>\n>> There is also the javax.net.ssl.keyStoreType property which is\n>> normally used to determine the store type, and\n>> javax.net.ssl.keyStorePassword for the password.\n>>\n>> See\n>> http://download.oracle.com/javase/1.5.0/docs/guide/security/jsse/JSSERefGuide.html#Customization\n>>\n>> I think it would probably make sense to use these properties to\n>> directly configure the key and trust stores.\n>>\n>> So I propose to change KeyStore Config so it behaves like the SSL\n>> Manager Option dialogue, i.e. it will just save any settings as System\n>> or JMeter properties.\n>>\n> Not sure I understand this part.\n> If you're talking about the popup that asks for password when it does not\n> find System property ,\n>  I don't find it very \"User friendly\" and I remember being a bit confused\n> about it when I started using JMeter with HTTPS.\n>\n> It would make also make sense to merge it with the SSL Manager dialogue.\n\nSorry, what I meant was:\n- use the code strategy from SSL Manager Option, i.e. save filename as\nsystem property\n- extend the new KeyStore Config to include other config options.\n\n>> This is currently only of use in GUI test runs - it cannot be saved\n>> with a test plan.\n>>\n>> KeyStore Config should probably be renamed as SSL Config, and would\n>> have additional fields to define the other SSL System properties.\n>> This would be entirely optional - users could define the system or\n>> JMeter properties instead - but would be more flexible as the settings\n>> would be stored in the plan, not in external file(s).\n>>\n>\n> I agree with this if you mean  SSL Config component will store:\n> - Current options\n> - + System properties used to configure Keystore path, password and others\n\nYes, that's the plan.\n\n>>\n>> The properties can be defined in the SSL Config testStarted() method\n>> as that runs before the HTTP Sampler testStarted() method.\n>> The latter can be used to preload the SSLManager if required; this\n>> would allow SSL Config to be omitted, provided that the appropriate\n>> JMeter property was set.\n>>\n>> To summarise:\n>> - keystore and truststore would be initialised based purely on System\n>> or JMeter property settings\n>>\n> Do you mean these properties can be defined:\n> - In System properties\n\nYes, for javax.ssl properties\n\n> - In JMeter properties\n\nYes, for JMeter-specific properties (e.g. alias indexes, loading strategy)\n\n> - IN SSL config that would override default settings\n\nYes, the new SSL Config would overwrite any existing properties.\n\nJust realised there's an issue with how to handle pre-existing settings.\nIf the user provides a value in the GUI, we should use that.\nHowever, if no value is provided, does that mean the property should\nbe left alone, or does that mean it should be removed?\n\nThe NOT_UNDEFINED setting could be used for this. If enabled, the user\ncan choose \"Undefined\", in which case the existing setting should be\nignored.\nOtherwise, if the user does not provide a value, any default will be used.\n\nThere's also an minor issue with multiple test runs (GUI mode only) -\nif the Config element changes any system properties, then a subsequent\nrun will pick up the new settings. If the user previously defined (or\nundefined) a property, they would need to be aware of this, and change\nthe settings accordingly.\n\n>\n>> - SSL Config GUI would allow the settings to be overridden as necessary\n>>\n>> Does this all make sense?\n>>\n>\n> I agree it's a good idea to have on Config Element in test plan to\n> configure these properties if it's what you mean.\n\nYes.\n\n> In my opinion, we should remove the popup in SSLManager#getPassword,\n> because it makes a different behaviour\n> wether you are in GUI mode or NON GUI:\n\nYes, the plan was to remove it.\n\n>   - In GUI mode you will be asked for password so you will think your test\n>   works\n>   - In Non GUI you will have a failure\n\nExactly, that's the problem now.\n\n>"}]