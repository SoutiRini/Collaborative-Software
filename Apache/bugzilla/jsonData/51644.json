[{"count": 0, "tags": [], "bug_id": 51644, "attachment_id": null, "is_private": false, "id": 148522, "time": "2011-08-10T10:00:36Z", "creator": "suveern@gmail.com", "creation_time": "2011-08-10T10:00:36Z", "text": "When I try to deploy a context with the name \"a#b.xml\" I get the following exception.\n\n\nSEVERE: Unable to process JNDI URL [jndi:/localhost/sample/one/WEB-INF/classes]\nfor annotations\njava.io.FileNotFoundException: jndi:/localhost/sample/one/WEB-INF/classes\n        at org.apache.naming.resources.DirContextURLConnection.list(DirContextUR\nLConnection.java:452)\n        at org.apache.catalina.startup.ContextConfig.processAnnotationsJndi(Cont\nextConfig.java:1901)\n        at org.apache.catalina.startup.ContextConfig.processAnnotationsUrl(Conte\nxtConfig.java:1828)\n        at org.apache.catalina.startup.ContextConfig.webConfig(ContextConfig.jav\na:1295)\n        at org.apache.catalina.startup.ContextConfig.configureStart(ContextConfi\ng.java:896)\n        at org.apache.catalina.startup.ContextConfig.lifecycleEvent(ContextConfi\ng.java:322)\n        at org.apache.catalina.util.LifecycleSupport.fireLifecycleEvent(Lifecycl\neSupport.java:119)\n        at org.apache.catalina.util.LifecycleBase.fireLifecycleEvent(LifecycleBa\nse.java:89)\n        at org.apache.catalina.core.StandardContext.startInternal(StandardContex\nt.java:5103)\n        at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:145)\n        at org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase\n.java:812)\n        at org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:78\n7)\n        at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:607)\n\n        at org.apache.catalina.startup.HostConfig.deployDescriptor(HostConfig.ja\nva:633)\n        at org.apache.catalina.startup.HostConfig.deployDescriptors(HostConfig.j\nava:558)\n        at org.apache.catalina.startup.HostConfig.deployApps(HostConfig.java:468\n)\n        at org.apache.catalina.startup.HostConfig.check(HostConfig.java:1363)\n        at org.apache.catalina.startup.HostConfig.lifecycleEvent(HostConfig.java\n:294)\n        at org.apache.catalina.util.LifecycleSupport.fireLifecycleEvent(Lifecycl\neSupport.java:119)\n        at org.apache.catalina.util.LifecycleBase.fireLifecycleEvent(LifecycleBa\nse.java:89)\n        at org.apache.catalina.core.ContainerBase.backgroundProcess(ContainerBas\ne.java:1233)\n        at org.apache.catalina.core.ContainerBase$ContainerBackgroundProcessor.p\nrocessChildren(ContainerBase.java:1391)\n        at org.apache.catalina.core.ContainerBase$ContainerBackgroundProcessor.p\nrocessChildren(ContainerBase.java:1401)\n        at org.apache.catalina.core.ContainerBase$ContainerBackgroundProcessor.r\nun(ContainerBase.java:1380)\n        at java.lang.Thread.run(Thread.java:619)\n\n\nI would have expected the application to be available in the URI a/b. The bug seems to be in the \"list()\" method \"of DirContextURLConnection.java. The method assumes that context name does not have any \"/\" characters in it. See the developer note just before the \"if\" block. I have added the \"else if\" condition that seems to have solved the problem for me.\n\n            try {\n                String file = getURL().getFile();\n                // This will be of the form /<hostname>/<contextpath>/file name\n                // if <contextpath> is not empty otherwise this will be of the\n                // form /<hostname>/file name\n                // Strip off the hostname and the contextpath\n                int start;\n                if(context instanceof ProxyDirContext &&\n                        \"\".equals(((ProxyDirContext)context).getContextPath())){\n                    start = file.indexOf('/',1);\n                }\n                else if(context instanceof ProxyDirContext){\n                \tstart=\"/\".length()\n                \t\t\t+((ProxyDirContext)context).getHostName().length()\n                \t\t\t+((ProxyDirContext)context).getContextPath().length();\n                \t/*\n                \t * Seems like a bug in Tomcat. below was the code in Tomcat.\n                \t * How can it handle contextpath like \"/sample/one\". It cannot\n                \t */\n                    //start = file.indexOf('/', file.indexOf('/', 1) + 1);\n                } else\n                \tstart = file.indexOf('/', file.indexOf('/', 1) + 1);\n                \n                NamingEnumeration<NameClassPair> enumeration =\n                    context.list(file.substring(start));\n                while (enumeration.hasMoreElements()) {\n                    NameClassPair ncp = enumeration.nextElement();\n                    result.addElement(ncp.getName());\n                }\n            } catch (NamingException e) {"}, {"count": 1, "attachment_id": null, "bug_id": 51644, "is_private": false, "id": 148529, "time": "2011-08-10T18:00:49Z", "creator": "markt@apache.org", "creation_time": "2011-08-10T18:00:49Z", "tags": [], "text": "Thanks for the report. This has been fixed in trunk and 7.0.x and will be included in 7.0.21 onwards."}]