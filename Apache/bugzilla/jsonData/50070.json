[{"count": 0, "tags": [], "creator": "reemhal@hotmail.com", "text": "Hi\n\nI am using tomcat 6.0.29 with a HTTP NIO connector (Http11NioProtocol) under load tests.\nSeems like I have a memory leak origin from the NIO Http connector ,since when changing back to the regular HTTP connector - all is working fine.\nI am using the jstat command to monitor the JVM's old generation pool - seems like no matter how big it is (and I reached 1.5GB ) , it just get growing as the load increase on the server (see class dump bellow ) .\nAnother important point is that this leak start happening only when I ported my code to Linux OS from Solaris OS (Solaris 10).\nI am using java 6 ( java version \"1.6.0_13\" )\nAnd my JVM parameters are : \n/usr/mms/java/bin/java -server -Xss256k -Xms3000m -Xmx3000m -Xmn1512m -XX:ParallelGCThreads=4 -XX:+UseConcMarkSweepGC -XX:+UseParNewGC -XX:SurvivorRatio=4\n\nI am attaching the jmap dump + my JVM parameters :\n\n   1:      17932169      573829408  java.util.concurrent.ConcurrentLinkedQueue$Node\n   2:         87512      431355368  [B\n   3:       1255621      247535088  [C\n   4:       2736358      131345184  java.util.concurrent.locks.ReentrantLock$NonfairSync\n   5:       2736178      131336544  java.util.concurrent.ConcurrentHashMap$Segment\n   6:       3422985      109535520  java.util.concurrent.LinkedBlockingQueue$Node\n   7:       2736244       91386840  [Ljava.util.concurrent.ConcurrentHashMap$HashEntry;\n   8:        185050       55436224  [I\n   9:        716357       34385136  java.util.HashMap$Entry\n  10:        833420       33336800  java.lang.String\n  11:        827980       33119200  com.comverse.mms.util.ByReference\n  12:        248473       26073344  [Ljava.lang.Object;\n  13:        171013       25993736  [Ljava.util.concurrent.ConcurrentHashMap$Segment;\n  14:        170972       23252192  org.apache.catalina.session.StandardSession\n  15:        106757       20898400  [Ljava.util.HashMap$Entry;\n  16:        175378       20185544  [Ljava.util.Hashtable$Entry;\n  17:        171013       12312936  java.util.concurrent.ConcurrentHashMap\n  18:         77208       11834128  <constMethodKlass>\n  19:        174716       11181824  java.util.Hashtable\n  20:         77208        9277616  <methodKlass>\n  21:          7593        9266200  <constantPoolKlass>\n  22:        188955        9069840  java.util.concurrent.ConcurrentHashMap$HashEntry\n  23:        213533        8541320  java.util.ArrayList\n  24:        171012        8208576  java.beans.PropertyChangeSupport\n  25:        137289        7071968  <symbolKlass>\n  26:        103736        6639104  java.util.HashMap\n  27:          7593        5855112  <instanceKlassKlass>\n  28:          6332        5520192  <constantPoolCacheKlass>\n  29:         61325        5396600  com.comverse.mms.dispatcher.executors.ComponentExecutor\n  30:        153840        4922880  java.lang.StringBuilder\n  31:        170419        4090056  org.apache.catalina.session.StandardSessionFacade\n  32:          5836        3813664  <methodDataKlass>\n  33:         19859        3410688  [Z\n  34:         37362        2416176  [Ljava.lang.String;\n  35:         44119        2117712  java.util.Hashtable$Entry\n  36:         65056        2081792  java.lang.StringBuffer\n  37:         45353        1814120  java.util.AbstractList$Itr\n  38:         73621        1766904  com.comverse.mms.dispatcher.parameters.ControlParameters\n  39:         53961        1726752  com.comverse.mms.dispatcher.parameters.ParametersValidator\n  40:         52474        1679168  com.comverse.mms.dispatcher.parameters.ControlParametersWrapper\n  41:         10058        1528816  java.lang.reflect.Method\n  42:          8152        1499968  java.lang.Class\n  43:         12775        1338384  [S\n  44:         33200        1328000  java.util.LinkedList$Entry\n  45:         22524        1261344  java.util.HashMap$KeyIterator\n  46:         11232        1168128  [Ljava.util.regex.Pattern$GroupHead", "id": 140642, "time": "2010-10-10T14:47:31Z", "bug_id": 50070, "creation_time": "2010-10-10T14:47:31Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 50070, "attachment_id": null, "id": 140643, "creation_time": "2010-10-10T14:51:52Z", "time": "2010-10-10T14:51:52Z", "creator": "markt@apache.org", "text": "There is nothing in the above report that points to a memory leak in the NIO connector.\n\nI'd suggest that you use the users list to help you debug this. Feel free to re-open this issue if that debugging process tracks down a memory leak in the Tomcat code base. You'll need to include the details of the source of the memory leak.", "is_private": false}]