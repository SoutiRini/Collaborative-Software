[{"count": 0, "attachment_id": null, "bug_id": 42385, "text": "When you upload a new image (\"resource\" resource type), the corresponding\nSVG-generated image is not updated.", "id": 103043, "time": "2007-05-10T09:28:46Z", "creator": "andreas@apache.org", "creation_time": "2007-05-10T09:28:46Z", "tags": [], "is_private": false}, {"count": 1, "tags": [], "text": "*** Bug 44053 has been marked as a duplicate of this bug. ***", "is_private": false, "id": 111627, "creation_time": "2007-12-11T01:12:16Z", "time": "2007-12-11T01:12:16Z", "creator": "andreas@apache.org", "bug_id": 42385, "attachment_id": null}, {"count": 2, "tags": [], "creator": "andreas@apache.org", "attachment_id": null, "id": 111628, "time": "2007-12-11T01:12:58Z", "bug_id": 42385, "creation_time": "2007-12-11T01:12:58Z", "is_private": false, "text": "Additional Information by J\u00fcrgen Ragaller:\n\nThe replacement of an existing image using \"upload file\" is not working as expected:\n\nThe\nimages width and height properties are the ones of the newly uploaded image file\nbut the\ncontent is taken from the old image.\n\nMaybe this is a caching problem of the svn module?\nWhen the image is called directly (without lenya.module=svn....) the new image\nis displayed.\n\nAs\nlong as the url stays the same, the image data is not replaced:\n\nSteps to reproduce:\n\n1)\nupload a media resource type image\n2) replace it's data by using \"upload file\""}, {"count": 3, "tags": [], "text": "As soon as the URL of the image is changed, the new image is displayed properly.", "attachment_id": null, "id": 111630, "creation_time": "2007-12-11T01:30:02Z", "time": "2007-12-11T01:30:02Z", "creator": "ragaller@apache.org", "bug_id": 42385, "is_private": false}, {"count": 4, "tags": [], "text": "I'm trying to figure out where and how it's being cached. I can't 100% replicate\nthe problem on RC4. Sometimes it does update with the proper new image. Are we\nseeing this only on default clean builds? In other words, ehcache enternal is\nstill true? I honestly don't even know if this is being cached through ehcache.", "is_private": false, "id": 111643, "creator": "rfrovarp@apache.org", "time": "2007-12-11T10:51:50Z", "bug_id": 42385, "creation_time": "2007-12-11T10:51:50Z", "attachment_id": null}, {"count": 5, "tags": [], "text": "Okay, I changed my ehcache.xml file and did a clean build. Watching the log\nfile, I can see ehcache hits and misses for the full image. For the version\nrunning through SVG, I don't see any ehcache information. I also see this in the\nlogs: \n\nSocketListener0-9 DEBUG sitemap - Put a\norg.apache.cocoon.components.pipeline.impl.NonCachingProcessingPipeline back\ninto the pool.\n\nThis is being cached, I just can't tell where.", "attachment_id": null, "id": 111651, "creator": "rfrovarp@apache.org", "time": "2007-12-11T11:48:49Z", "bug_id": 42385, "creation_time": "2007-12-11T11:48:49Z", "is_private": false}, {"count": 6, "attachment_id": null, "bug_id": 42385, "is_private": false, "id": 111652, "time": "2007-12-11T12:02:32Z", "creator": "andreas@apache.org", "creation_time": "2007-12-11T12:02:32Z", "tags": [], "text": "Maybe it's client-side caching?\n\n    <map:pipeline>\n      <!-- enable client side caching of resources -->\n      <map:parameter name=\"expires\" value=\"{global:pipeline-expiration}\"/>"}, {"count": 7, "tags": [], "bug_id": 42385, "attachment_id": null, "id": 111653, "time": "2007-12-11T12:08:06Z", "creator": "rfrovarp@apache.org", "creation_time": "2007-12-11T12:08:06Z", "is_private": false, "text": "That's the wrong pipeline, isn't it? That appear to be in relation to shapes.\nThe second pipeline is for resizing.\n\nAnyway, I can see the requests hitting the logs, and here are the response\nheaders for a svg image:\n\nDate: Tue, 11 Dec 2007 20:06:24 GMT\nServer: Jetty/5.1.4 (Linux/2.6.9-55.0.12.ELsmp i386 java/1.6.0_02\nX-Cocoon-Version: 2.1.11-dev\nContent-Type: image/png\nContent-Length: 6316\n\n200 OK\n\nSame image non-svg:\nDate: Tue, 11 Dec 2007 20:05:06 GMT\nServer: Jetty/5.1.4 (Linux/2.6.9-55.0.12.ELsmp i386 java/1.6.0_02\nX-Cocoon-Version: 2.1.11-dev\nContent-Length: 389070\nLast-Modified: Tue, 11 Dec 2007 19:28:49 GMT\nAccept-Ranges: bytes\n\n200 OK"}, {"count": 8, "tags": [], "bug_id": 42385, "attachment_id": null, "is_private": false, "id": 111711, "time": "2007-12-12T08:35:24Z", "creator": "rfrovarp@apache.org", "creation_time": "2007-12-12T08:35:24Z", "text": "The image is cached, so you end up with only one image in the publication, or\nperhaps even the Lenya instance. \n\nI was testing how different editors handled the insertion of uploaded images for\na different bug. I kept uploading different images, kept inserting the newly\nuploaded image. In all I had 6 different images, each inserted into it's parent.\nNice and clean, everything appeared to work.\n\nI then fired up another browser to test another part of the bug and noticed that\nevery single one of my pages displayed the same image. I just tested again using\ndifferent sizes between images. 6 different image URLs, only one base image was\nrepresented. \n\nTo test this, make sure you use a different browser to see the affect. The\nbrowser you insert with may have the image cached. "}, {"count": 9, "tags": [], "text": "I just confirmed, it's per lenya instance right now. My build in production does\nnot exhibit this behavior, so it has been introduced recently. Probably in the\npast two months, as my production build is from mid-October.", "attachment_id": null, "id": 111712, "creation_time": "2007-12-12T08:43:54Z", "time": "2007-12-12T08:43:54Z", "creator": "rfrovarp@apache.org", "bug_id": 42385, "is_private": false}, {"count": 10, "tags": [], "bug_id": 42385, "attachment_id": null, "id": 111714, "time": "2007-12-12T09:45:31Z", "creator": "rfrovarp@apache.org", "creation_time": "2007-12-12T09:45:31Z", "is_private": false, "text": "As far as I can tell, r598318 is when the problem showed up. Unfortunately there\nare several releases in there that didn't work. \n\nIt works in 597232\nIt doesn't work in 598566\n\nThe only one that deals with SVG is 598318 which fixed proxy problem with the\nsvg module. I can verify that the image is being properly scaled, however the\ncorrect source isn't being used. A change in there somewhere must be causing the\nsystem to cache the source image."}, {"count": 11, "tags": [], "creator": "rfrovarp@apache.org", "attachment_id": null, "id": 111716, "time": "2007-12-12T11:43:52Z", "bug_id": 42385, "creation_time": "2007-12-12T11:43:52Z", "is_private": false, "text": "Batik is caching the image some how. It isn't calling\norg.apache.lenya.modules.svg.ProtocolHandler$ParsedUrlData.openStreamInternal(ProtocolHandler.java:97)\nevery time. It is grabbing from cache at\norg.apache.batik.bridge.SVGImageElementBridge.createImageGraphicsNode\n\nAt this moment I don't know if it is in the document loader cache or the\nImageTagRegistry Cache. Looks like a toString isn't correct. Will look more\nafter meeting."}, {"count": 12, "tags": [], "creator": "rfrovarp@apache.org", "attachment_id": null, "text": "Fixed in r603752.\n\nIt was toString on the ParsedUrlData object. super.toString takes into account a\ncouple of items. The data available to it in our ParsedURLData object resulted\nin a toString of lenya-document, for every single document. First image loaded\nwon the race and was returned by the cache.\n\nThe fix overrides toString and returns the URL, which is in the form of:\nlenya-document:UUID,lang=value,pub=value,area=value\n\nTo fix the issue of replacing images, I appended the last modified time to the\nend of the string. Now when an image is updated, it's toString changes, which\nresults in a cache miss for the first call.\n\nPlease test and reopen if it isn't fixed.", "id": 111726, "time": "2007-12-12T14:04:44Z", "bug_id": 42385, "creation_time": "2007-12-12T14:04:44Z", "is_private": false}, {"count": 13, "tags": [], "bug_id": 42385, "attachment_id": null, "id": 111727, "time": "2007-12-12T14:18:27Z", "creator": "andreas@apache.org", "creation_time": "2007-12-12T14:18:27Z", "is_private": false, "text": "(In reply to comment #12)\n> Fixed in r603752.\n\nCool, thanks for taking your time to dig that deep into this issue!"}, {"count": 14, "tags": [], "creator": "ragaller@apache.org", "attachment_id": null, "id": 111732, "time": "2007-12-13T01:35:30Z", "bug_id": 42385, "creation_time": "2007-12-13T01:35:30Z", "is_private": false, "text": "> Please test and reopen if it isn't fixed.\n\nThanks for fixing it.\n\nI still have the some issues with it - \nand I think the bug could be re-target for 2.0.1?\n\nDoes the fix work reliable for others?\n\nIt seems to be a timing issue now.\nSometimes it takes some time until the new image is shown \n(drink a coffee come back and \"swap\" the new image is there). \n\nIs the last modified time reliable enough? \nWhen is it set?\n\n"}, {"count": 15, "tags": [], "text": "I just tried it one time, the new image appeared immediately.\n\nJ\u00fcrgen, if the issue is not reliably resolved for you, we should indeed re-open\nit and keep it on the radar for 2.0.1.", "is_private": false, "bug_id": 42385, "id": 111734, "time": "2007-12-13T02:22:44Z", "creator": "andreas@apache.org", "creation_time": "2007-12-13T02:22:44Z", "attachment_id": null}, {"count": 16, "attachment_id": null, "bug_id": 42385, "text": "mmh - I just downloaded the content of our client's lenya-publication. \n\nIt's just one image I see in my local lenya now... \n(on several pages with several sizes...).\n", "id": 111739, "time": "2007-12-13T03:18:19Z", "creator": "ragaller@apache.org", "creation_time": "2007-12-13T03:18:19Z", "tags": [], "is_private": false}, {"count": 17, "tags": [], "text": "I'm thinking of bypassing the svn-transformation for now by ovveriding the svn module's sitemap (and basically do nothing) - I need a workaround for this bug.", "is_private": false, "bug_id": 42385, "id": 111740, "time": "2007-12-13T03:22:07Z", "creator": "ragaller@apache.org", "creation_time": "2007-12-13T03:22:07Z", "attachment_id": null}, {"count": 18, "tags": [], "text": "(In reply to comment #16)\n\n> It's just one image I see in my local lenya now... \n> (on several pages with several sizes...).\n\nI can confirm this behaviour. All subsequently uploaded images show the first\nuploaded image when rendered using the SVG module.", "is_private": false, "bug_id": 42385, "id": 111744, "time": "2007-12-13T04:04:41Z", "creator": "andreas@apache.org", "creation_time": "2007-12-13T04:04:41Z", "attachment_id": null}, {"count": 19, "tags": [], "creator": "andreas@apache.org", "is_private": false, "text": "I just opened + canceled the OneForm editor, after that all images on the page\nswitched to the last uploaded one ...", "id": 111745, "time": "2007-12-13T04:17:30Z", "bug_id": 42385, "creation_time": "2007-12-13T04:17:30Z", "attachment_id": null}, {"count": 20, "tags": [], "creator": "rfrovarp@apache.org", "attachment_id": null, "id": 111748, "time": "2007-12-13T05:35:10Z", "bug_id": 42385, "creation_time": "2007-12-13T05:35:10Z", "is_private": false, "text": "To be clear, you've both update to RC5 or to the latest trunk and then ran\nbuild? The one image problem is from Batik caching and it not calling the method\nto load the image data. I can see that is working now. The delay could be to\nother server side caching or browser caching. \n\nThe timestamp should be reliable enough. It's the milliseconds unix timestamp of\nwhen the object was uploaded. That plus UUID is about as unique as we can get."}, {"count": 21, "tags": [], "text": " (In reply to comment #20)\n> To be clear, you've both update to RC5 or to the latest trunk and then ran\n> build? \n\nYes - switched to RC5 and ran a build clean-all\n\n> The one image problem is from Batik caching and it not calling the method\n> to load the image data. I can see that is working now. The delay could be to\n> other server side caching or browser caching.\n\nI can exclude browser caching.\n\nWhen I restart jetty the behaviour is as follows:\nThe first processed image after a jetty restart is shown on the entire page.\n\n> \n> The timestamp should be reliable enough. It's the milliseconds unix timestamp of\n> when the object was uploaded. That plus UUID is about as unique as we can get.\n\nSounds solid.\nWe use an ant script to transfer the content from the server to our local machines. One zip-Archive is transfered. Is it possible, that the timestamps of the various image data files are too close because of the unzipping?\n", "is_private": false, "id": 111753, "creation_time": "2007-12-13T05:54:08Z", "time": "2007-12-13T05:54:08Z", "creator": "ragaller@apache.org", "bug_id": 42385, "attachment_id": null}, {"count": 22, "tags": [], "bug_id": 42385, "attachment_id": null, "is_private": false, "id": 111756, "time": "2007-12-13T06:23:21Z", "creator": "rfrovarp@apache.org", "creation_time": "2007-12-13T06:23:21Z", "text": "(In reply to comment #21)\n> \n> Sounds solid.\n> We use an ant script to transfer the content from the server to our local\nmachines. One zip-Archive is transfered. Is it possible, that the timestamps of\nthe various image data files are too close because of the unzipping?\n> \n\nNo, it wouldn't lead to the behavior you're seeing. The UUIDs are enough to keep\nthe images distinct. And you aren't replacing live images by unzipping."}, {"count": 23, "tags": [], "creator": "ragaller@apache.org", "attachment_id": null, "text": "Could it be java-related somehow, 1.5 here", "id": 111757, "time": "2007-12-13T06:33:19Z", "bug_id": 42385, "creation_time": "2007-12-13T06:33:19Z", "is_private": false}, {"count": 24, "tags": [], "creator": "ragaller@apache.org", "attachment_id": null, "text": "As .jpg and .gif are processed differently it might be important to check the behaviour for all image types.\n\nRichard did you check .jpg as well (these are broken in my setup)?", "id": 111761, "time": "2007-12-13T07:02:03Z", "bug_id": 42385, "creation_time": "2007-12-13T07:02:03Z", "is_private": false}, {"count": 25, "tags": [], "creator": "rfrovarp@apache.org", "attachment_id": null, "text": "I checked png's actually. Are these images referenced by UUID or path?\nEverything I tested was by UUID. It could be path would have a different result. \n\nI might have some time this afternoon to get in and do more testing.", "id": 111764, "time": "2007-12-13T07:11:28Z", "bug_id": 42385, "creation_time": "2007-12-13T07:11:28Z", "is_private": false}, {"count": 26, "tags": [], "text": " (In reply to comment #25)\n> I checked png's actually. Are these images referenced by UUID or path?\n> Everything I tested was by UUID. It could be path would have a different result.\n\npath (tinyMCE). But that's probably not the underlying cause as the behaviour can be reproduced by using the media resource type alone (not inserting the image into xhtml pages).\n\nIt occured with these two steps\n\n1) media resource type with one image (.jpg)\n2) media resource type with another image (.jpg)\n\nThe \u00abauthoring\u00bb tab now shows the same image.\n\n> \n> I might have some time this afternoon to get in and do more testing.\n", "is_private": false, "id": 111766, "creation_time": "2007-12-13T07:31:08Z", "time": "2007-12-13T07:31:08Z", "creator": "ragaller@apache.org", "bug_id": 42385, "attachment_id": null}, {"count": 27, "tags": [], "bug_id": 42385, "text": "I was looking at differences between \n\norg.apache.cocoon.components.url.SourceProtocolHandler.java\nand\norg.apache.lenya.modules.svg.ProtocolHandler.java\n\nThe both extend Batiks ParsedURLData class\nBut in a somewhat different way.\n\nThat comment found in SourceProtocolHandler appealed to me like something easy to overluck (because not done so nicely?)\n\n            // ParsedURLData has some public members which seems to be required to\n            // have a value. This sucks.\n            \n I inserted the block found in SourceProtocolHandler.java without really knowing what I do here - but the result seems to fix the error.\n \n This is something the java pros have to look at. If my suggestions don't make sense - ignore me ;-)\n \n PATCH is on it's way\n \n", "id": 111772, "time": "2007-12-13T08:39:52Z", "creator": "ragaller@apache.org", "creation_time": "2007-12-13T08:39:52Z", "is_private": false, "attachment_id": null}, {"count": 28, "tags": [], "bug_id": 42385, "attachment_id": 21273, "id": 111774, "time": "2007-12-13T08:41:41Z", "creator": "ragaller@apache.org", "creation_time": "2007-12-13T08:41:41Z", "is_private": false, "text": "Created attachment 21273\nPatch for ProtocolHandler\n\nThis is just a documentation of an observation by a java beginner"}, {"count": 29, "tags": [], "bug_id": 42385, "text": "The content download from our customers website to my local machine works with that patch \n\nwithout it: one image per publication desaster.", "id": 111776, "time": "2007-12-13T09:02:52Z", "creator": "ragaller@apache.org", "creation_time": "2007-12-13T09:02:52Z", "is_private": false, "attachment_id": null}, {"count": 30, "tags": [], "creator": "andreas@apache.org", "attachment_id": null, "id": 111777, "time": "2007-12-13T09:25:55Z", "bug_id": 42385, "creation_time": "2007-12-13T09:25:55Z", "is_private": false, "text": "Should be fixed in revision 603960.\n\nParsedURLData.equals() didn't take the url field into account, only fields we\ndidn't set. Now the path is set too so that equals() should return false for\ndifferent sources.\n\nJ\u00fcrgen, thanks a lot for the hint!"}, {"count": 31, "attachment_id": null, "bug_id": 42385, "is_private": false, "id": 111778, "time": "2007-12-13T09:33:23Z", "creator": "rfrovarp@apache.org", "creation_time": "2007-12-13T09:33:23Z", "tags": [], "text": "(In reply to comment #30)\n> Should be fixed in revision 603960.\n> \n> ParsedURLData.equals() didn't take the url field into account, only fields we\n> didn't set. Now the path is set too so that equals() should return false for\n> different sources.\n> \n> J\u00fcrgen, thanks a lot for the hint!\n\nI'm concerned that this isn't fully going to take care of the issue. If you're\nsetting the path so that equals() uses that, at what point is the revision in\nquestion used? Maybe we should just override equals() so that we can take the\npath and the last modified into account? "}, {"count": 32, "tags": [], "text": "Yep, doesn't update when a new image is inserted. We'll need to override the\nequals() method. I can take a look at it and get that done shortly.", "attachment_id": null, "id": 111779, "creator": "rfrovarp@apache.org", "time": "2007-12-13T09:44:49Z", "bug_id": 42385, "creation_time": "2007-12-13T09:44:49Z", "is_private": false}, {"count": 33, "tags": [], "creator": "rfrovarp@apache.org", "attachment_id": null, "id": 111784, "time": "2007-12-13T11:06:18Z", "bug_id": 42385, "creation_time": "2007-12-13T11:06:18Z", "is_private": false, "text": "In r603984 I modified equals() so that it takes the last modified time into\naccount. It works for me. Please test. "}, {"count": 34, "tags": [], "creator": "ragaller@apache.org", "is_private": false, "text": "A quick test on my side: in r603984 images seem to cooperate.\n\nThanks so much for fixing this!\n\nAs I mentioned earlier I can learn a lot here.", "id": 111787, "time": "2007-12-13T12:39:37Z", "bug_id": 42385, "creation_time": "2007-12-13T12:39:37Z", "attachment_id": null}, {"count": 35, "tags": [], "creator": "andreas@apache.org", "attachment_id": null, "id": 111788, "time": "2007-12-13T16:00:42Z", "bug_id": 42385, "creation_time": "2007-12-13T16:00:42Z", "is_private": false, "text": "It works for me too. Thanks a lot for fixing!"}, {"count": 36, "tags": [], "text": "Richard's patch seems to have fixed it (knocking on wood).", "is_private": false, "bug_id": 42385, "id": 111802, "time": "2007-12-14T04:12:50Z", "creator": "andreas@apache.org", "creation_time": "2007-12-14T04:12:50Z", "attachment_id": null}, {"count": 37, "tags": [], "creator": "nettings@apache.org", "attachment_id": null, "text": "wow, thanks guys for hunting this one down!", "id": 111913, "time": "2007-12-19T09:16:15Z", "bug_id": 42385, "creation_time": "2007-12-19T09:16:15Z", "is_private": false}]