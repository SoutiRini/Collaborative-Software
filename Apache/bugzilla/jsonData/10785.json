[{"count": 0, "attachment_id": null, "bug_id": 10785, "is_private": false, "id": 19497, "time": "2002-07-14T13:47:50Z", "creator": "sanchez_paus@hotmail.com", "creation_time": "2002-07-14T13:47:50Z", "tags": [], "text": "When parsing from a Stream the fillbuf method is called after the last element \nof the document (parsing goes fine till this point). Then it tries to read 8k \nof data (the length of the buffer), this obviosly block the process when using \nstreams.\n\n\tboolean\textra = (finish > 0) && (start > 0);\n\tint\tlen;\n\n\tif (extra)\t\t// extra pushback\n\t    start--;\n\tlen = finish - start;\n\n\tSystem.arraycopy (buf, start, buf, 0, len);\n\tstart = 0;\n\tfinish = len;\n\n\ttry {\n\t    len = buf.length - len;\n\t    len = reader.read (buf, finish, len); // BLOCKS\n\t}\nI have tried to fix it substituting the try block with: \n        try{\n\t  len = buf.length - len;\n\t  int appended = 0;\n\n\t  while( reader.ready() && finish<=buf.length && appended<=len ){\n\t    \n\t    int val = reader.read();\n\t    if( val == -1 ) close();\n\t    else{\n    \t      char c = (char)val;\n    \t      if( Character.isDefined( c ) ){\n        \tbuf[finish++] = c;\n        \tappended++;\n    \t      }\n\t    }\n\t  }\n\tlen = appended;\n        }\nWhich fires an exception but at least doesn't block.\nI am sure that you vcan find a much better solution though :-)"}]