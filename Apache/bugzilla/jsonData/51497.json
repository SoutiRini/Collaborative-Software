[{"count": 0, "tags": [], "text": "In AccessLogValve and on other places where IPv6 address is logged or printed, it would bi good if Tomcat would use canonical IPv6 format as described in RFC 5952 [1] (especially note section \"3.2.2. Logging\"), e.g:\n\n1. instead of logging 2001:4000:0:5:0:0:0:66, it should log 2001:4000:0:5::66,\n2. instead of logging 0:0:0:0:0:0:0:1, it should log ::1.\n\n\nClass Inet6Address method getHostAddress confirms to RFC recommendations, in everything except in zero groups handling. It simply prints full form with all zeroes. In Java API I don't see any method to convert it to canonical form.\n\n[1] http://tools.ietf.org/html/rfc5952", "attachment_id": null, "bug_id": 51497, "id": 147871, "time": "2011-07-11T17:51:03Z", "creator": "ognjen.d.blagojevic@gmail.com", "creation_time": "2011-07-11T17:51:03Z", "is_private": false}, {"count": 1, "tags": [], "text": "Discussion on dev@, 2011-07-11:\nhttp://tomcat.markmail.org/thread/jwysfldcsmulkytb\nhttp://marc.info/?t=131040340100002&r=1&w=2", "attachment_id": null, "bug_id": 51497, "id": 147874, "time": "2011-07-11T19:32:48Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2011-07-11T19:32:48Z", "is_private": false}, {"count": 2, "tags": [], "creator": "ognjen.d.blagojevic@gmail.com", "text": "Created attachment 27312\nAdds RFC 5952 canonical IPv6 representation to AccessLogValve.\n\nHere is the proposed patch:\n\n- Added IPv6Utils.java to org.apache.tomcat.util.net\n- Added IPv6UtilsTest.java to org.apache.tomcat.util.net\n- Added parameter 'canonical' to  AccessLogValve, and changed logic for parameters %a (remote addr), %A (local addr), %h (remote host name), and %v (local host name)\n- Updated AccessLogValve docs\n\nAccessLogValve parameter 'canonical' is set to true by default. Not sure if this shoud be the case, but since Apache httpd, Linux and Windows all use canonical representation, I believe it is reasonable assumption.\n\nOther than that, in order to access 'canonical' parameter, I needed to remove static modifier from LocalServerNameElement and LocalAddressElement inner class declarations, and to replace static initialization of LocalServerNameElement with lazy initialization. Will this be an issue?", "id": 148129, "time": "2011-07-25T14:11:54Z", "bug_id": 51497, "creation_time": "2011-07-25T14:11:54Z", "is_private": false, "attachment_id": 27312}, {"count": 3, "tags": [], "text": "Minor nit: the tests use \"assertTrue(result.equals(expected))\" throughout.\nThis will detect errors, but won't show what any detail if anything goes wrong.\n\nIt would be better to use \"assertEquals(expected, result)\" as that shows the actual result if it differs from expected. For checking against null, use assertNull().", "attachment_id": null, "bug_id": 51497, "id": 165046, "time": "2013-02-04T12:21:52Z", "creator": "sebb@apache.org", "creation_time": "2013-02-04T12:21:52Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 51497, "attachment_id": null, "id": 165047, "time": "2013-02-04T12:37:23Z", "creator": "sebb@apache.org", "creation_time": "2013-02-04T12:37:23Z", "is_private": false, "text": "The private method mayBeIPv6Address counts colons, but fails to check the value.\n\nAlso, there's no need to continue checking characters once an invalid char has been found."}, {"count": 5, "tags": [], "creator": "sebb@apache.org", "text": "(In reply to comment #4)\n> The private method mayBeIPv6Address counts colons, but fails to check the\n> value.\n\nWhich means that abcdef:80 is treated as an IPv6 address, and results in a call to DNS to resolve the host name.", "id": 165053, "time": "2013-02-04T16:11:13Z", "bug_id": 51497, "creation_time": "2013-02-04T16:11:13Z", "is_private": false, "attachment_id": null}, {"count": 6, "tags": [], "text": "Also mayBeIPv6Address does not recognise IPv6 scoped addresses (%scope) or IPv4 mapped addresses (e.g. ::FFFF:d.d.d.d).", "attachment_id": null, "bug_id": 51497, "id": 165054, "time": "2013-02-04T16:49:07Z", "creator": "sebb@apache.org", "creation_time": "2013-02-04T16:49:07Z", "is_private": false}, {"count": 7, "tags": [], "creator": "ognjen.d.blagojevic@gmail.com", "text": "Sebb,\n\nI will fix problems you noticed, and upload new patch.", "id": 165057, "time": "2013-02-04T19:00:26Z", "bug_id": 51497, "creation_time": "2013-02-04T19:00:26Z", "is_private": false, "attachment_id": null}, {"count": 8, "tags": [], "creator": "ognjen.d.blagojevic@gmail.com", "attachment_id": 29921, "id": 165077, "time": "2013-02-05T12:19:00Z", "bug_id": 51497, "creation_time": "2013-02-05T12:19:00Z", "is_private": false, "text": "Created attachment 29921\nAccessLogValve patch\n\n(In reply to comment #3)\n> It would be better to use \"assertEquals(expected, result)\"\n\nFixed.\n\n\n(In reply to comment #4)\n> The private method mayBeIPv6Address counts colons, \n> but fails to check the value.\n\nFixed.\n\n\n(In reply to comment #5)\n> Which means that abcdef:80 is treated as an IPv6 address, \n> and results in a call to DNS to resolve the host name.\n\nFixed, it is not treated as IPv6 address anymore. I changed method mayBeIPv6Address visibility to \"protected\", and added JUnit test cases.\n\n\n(In reply to comment #6)\n> Also mayBeIPv6Address does not recognise IPv6 scoped addresses \n> (%scope) or IPv4 mapped addresses (e.g. ::FFFF:d.d.d.d).\n\nFixed. Both mayBeIPv6Address and canonize(String) support zone ID (%1, %eth0...), and IPv4-in-IPv6 (::FFFF:d.d.d.d, ::d.d.d.d, etc)."}, {"count": 9, "tags": [], "creator": "knst.kolinko@gmail.com", "text": "> IPv6UtilsTest extends TestCase\n\nTrunk uses junit4-style tests. \nCheckstyle there is configured that junit3 ones will not pass validation.\n\n(Enabling checkstyle is documented in BUILDING.txt)", "id": 165096, "time": "2013-02-05T23:28:28Z", "bug_id": 51497, "creation_time": "2013-02-05T23:28:28Z", "is_private": false, "attachment_id": null}, {"count": 10, "tags": [], "creator": "ognjen.d.blagojevic@gmail.com", "text": "Created attachment 29924\nAccessLogValve patch\n\n(In reply to comment #9)\n> Trunk uses junit4-style tests. \n> Checkstyle there is configured that junit3 ones will not pass validation.\n\nI ran the checkstyle and corrected all errors: trailing spaces and JUnit version.\n\nThank you both for reviewing the patch.", "id": 165099, "time": "2013-02-06T11:39:25Z", "bug_id": 51497, "creation_time": "2013-02-06T11:39:25Z", "is_private": false, "attachment_id": 29924}, {"count": 11, "tags": [], "creator": "ognjen.d.blagojevic@gmail.com", "text": "Created attachment 31300\nPatch to enable canonical IPv6\n\nMost of the AccessLogValve logic is moved to AbstractAccessLogValve class. Updated patch to reflect those changes.", "id": 172986, "time": "2014-02-11T00:07:11Z", "bug_id": 51497, "creation_time": "2014-02-11T00:07:11Z", "is_private": false, "attachment_id": 31300}]