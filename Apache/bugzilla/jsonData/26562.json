[{"count": 0, "tags": [], "bug_id": 26562, "text": "I have been tracking this down for a couple of weeks and thought it was in the \ncode my company is developing and it appears that is not the case. In order to \neliminate our code from the mix and isolate the problem here is what I did:\n\nThis was done on Windows and Linux: \n1. Download the latest Apache from www.apache.org. \n2. Download the latest OpenSSL from www.openssl.org. \n3. Build them both, with apache add the mod_ssl option and also for Linux use \nthe MPM worker module. \n4. Install and modify the ssl.conf file ServerName value. \n5. Run Apache (httpd) \n6a. Run the Performance monitor on Windows and look at Private Bytes for the \nsecond Apache process. \n6b. On Linux run top -p pid(httpd1) -p pid(http2) \u2026.. -p pid(httpN) watching \nthe size of the processes \n7. Set you browser to not cache requests and check for a new page every time. \n8. Start fetching a page from https://localhost and keep refreshing the page. \n\nSo far 3 other engineers have reproduced this test because they did not believe \nthe problem could be in Apache mod_ssl/OpenSSL, they all verified that it leaks \nlike a sieve.\n\nWe were all trying to figure out why no one else has complained about such a \nhuge leak so we ran another test. We tried using the prefork MPM and it turns \nout that worked fine. Based on the results it appears the OS is cleaning up \nmemory for the prefork module and the threaded model never gets its memory \nfreed. I have used a debugger on Windows and set break points on the \nCRYPTO_malloc and CRYPTO_free functions and have seen gobs of memory \nCRYPTO_malloc(ed) and not one time have I seen CRYPTO_free called. I was not \nsure if having the OS cleanup memory was part of the design (if indeed that is \nwhat is happening) or if there is potentially a problem in the OpenSSL memory \nmanagement code.\n\nWith all this said, I am by no means an expert on this code and could really \nuse some help understanding what is going on here?\nAny and all help is appreciated, \nKen", "id": 51504, "time": "2004-01-30T21:19:19Z", "creator": "ken.avery@hp.com", "creation_time": "2004-01-30T21:19:19Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "text": "I posted two patches to fix memory leaks in issues 25659 and 25667.  I don't \nknow if they are directly related to what you are seeing but I haven't received \nany feedback on whether anyone else has tried them out.  Let me knoe if you \nthink they may be related.", "is_private": false, "bug_id": 26562, "id": 51593, "time": "2004-02-02T15:17:06Z", "creator": "dblake@hp.com", "creation_time": "2004-02-02T15:17:06Z", "attachment_id": null}, {"count": 2, "tags": [], "creator": "ken.avery@hp.com", "is_private": false, "id": 51597, "attachment_id": null, "bug_id": 26562, "creation_time": "2004-02-02T16:13:40Z", "time": "2004-02-02T16:13:40Z", "text": "David,\n\nI tried both of the bug fixes you posted (25659, 25667) and they did not help, \nI suspect the problem is related to the way threads handle memory verses \nforked processes.\n\nKen"}, {"count": 3, "tags": [], "bug_id": 26562, "attachment_id": null, "id": 51630, "time": "2004-02-02T22:29:41Z", "creator": "ken.avery@hp.com", "creation_time": "2004-02-02T22:29:41Z", "is_private": false, "text": "FYI - I am seeing multiples of 8K chuncks of memroy disapear at a time. I \ndon't know if this helps?"}, {"count": 4, "tags": [], "bug_id": 26562, "attachment_id": null, "id": 51631, "time": "2004-02-02T22:34:47Z", "creator": "jwoolley@apache.org", "creation_time": "2004-02-02T22:34:47Z", "is_private": false, "text": "That would most likely be a heap bucket not being freed somewhere."}, {"count": 5, "tags": [], "bug_id": 26562, "attachment_id": null, "id": 54136, "time": "2004-03-17T10:58:39Z", "creator": "jorton@redhat.com", "creation_time": "2004-03-17T10:58:39Z", "is_private": false, "text": "I'm still unable to reproduce this on Linux.  Can you post the mod_ssl\nconfiguration you're using?"}, {"count": 6, "text": "Here is the ssl.conf file:\n\n#\n# This is the Apache server configuration file providing SSL support.\n# It contains the configuration directives to instruct the server how to\n# serve pages over an https connection. For detailing information about these \n# directives see <URL:http://httpd.apache.org/docs-2.0/mod/mod_ssl.html>\n#\n#   For the moment, see <URL:http://www.modssl.org/docs/> for this info. \n#   The documents are still being prepared from material donated by the\n#   modssl project.\n# \n# Do NOT simply read the instructions in here without understanding\n# what they do.  They're here only as hints or reminders.  If you are unsure\n# consult the online docs. You have been warned.  \n#\n<IfDefine SSL>\n\n#   Until documentation is completed, please check http://www.modssl.org/\n#   for additional config examples and module docmentation.  Directives\n#   and features of mod_ssl are largely unchanged from the mod_ssl project\n#   for Apache 1.3.\n\n#\n# When we also provide SSL we have to listen to the \n# standard HTTP port (see above) and to the HTTPS port\n#\n# Note: Configurations that use IPv6 but not IPv4-mapped addresses need two\n#       Listen directives: \"Listen [::]:443\" and \"Listen 0.0.0.0:443\"\n#\nListen 443\n\n##\n##  SSL Global Context\n##\n##  All SSL configuration in this context applies both to\n##  the main server and all SSL-enabled virtual hosts.\n##\n\n#\n#   Some MIME-types for downloading Certificates and CRLs\n#\nAddType application/x-x509-ca-cert .crt\nAddType application/x-pkcs7-crl    .crl\n\n#   Pass Phrase Dialog:\n#   Configure the pass phrase gathering process.\n#   The filtering dialog program (`builtin' is a internal\n#   terminal dialog) has to provide the pass phrase on stdout.\nSSLPassPhraseDialog  builtin\n\n#   Inter-Process Session Cache:\n#   Configure the SSL Session Cache: First the mechanism \n#   to use and second the expiring timeout (in seconds).\n#SSLSessionCache        none\n#SSLSessionCache        shmht:logs/ssl_scache(512000)\n#SSLSessionCache        shmcb:logs/ssl_scache(512000)\nSSLSessionCache         dbm:logs/ssl_scache\nSSLSessionCacheTimeout  300\n\n#   Semaphore:\n#   Configure the path to the mutual exclusion semaphore the\n#   SSL engine uses internally for inter-process synchronization. \nSSLMutex  file:logs/ssl_mutex\n\n#   Pseudo Random Number Generator (PRNG):\n#   Configure one or more sources to seed the PRNG of the \n#   SSL library. The seed data should be of good random quality.\n#   WARNING! On some platforms /dev/random blocks if not enough entropy\n#   is available. This means you then cannot use the /dev/random device\n#   because it would lead to very long connection times (as long as\n#   it requires to make more entropy available). But usually those\n#   platforms additionally provide a /dev/urandom device which doesn't\n#   block. So, if available, use this one instead. Read the mod_ssl User\n#   Manual for more details.\nSSLRandomSeed startup builtin\nSSLRandomSeed connect builtin\n#SSLRandomSeed startup file:/dev/random  512\n#SSLRandomSeed startup file:/dev/urandom 512\n#SSLRandomSeed connect file:/dev/random  512\n#SSLRandomSeed connect file:/dev/urandom 512\n\n##\n## SSL Virtual Host Context\n##\n\n<VirtualHost _default_:443>\n\n#  General setup for the virtual host\nDocumentRoot \"/Apache2/htdocs\"\nServerName new.host.name:443\nServerAdmin you@your.address\nErrorLog logs/error_log\nTransferLog logs/access_log\n\n#   SSL Engine Switch:\n#   Enable/Disable SSL for this virtual host.\nSSLEngine on\n\n#   SSL Cipher Suite:\n#   List the ciphers that the client is permitted to negotiate.\n#   See the mod_ssl documentation for a complete list.\nSSLCipherSuite ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP:+eNULL\n\n#   Server Certificate:\n#   Point SSLCertificateFile at a PEM encoded certificate.  If\n#   the certificate is encrypted, then you will be prompted for a\n#   pass phrase.  Note that a kill -HUP will prompt again.  Keep\n#   in mind that if you have both an RSA and a DSA certificate you\n#   can configure both in parallel (to also allow the use of DSA\n#   ciphers, etc.)\nSSLCertificateFile /Apache2/conf/ssl.crt/server.crt\n#SSLCertificateFile /Apache2/conf/ssl.crt/server-dsa.crt\n\n#   Server Private Key:\n#   If the key is not combined with the certificate, use this\n#   directive to point at the key file.  Keep in mind that if\n#   you've both a RSA and a DSA private key you can configure\n#   both in parallel (to also allow the use of DSA ciphers, etc.)\nSSLCertificateKeyFile /Apache2/conf/ssl.key/server.key\n#SSLCertificateKeyFile /Apache2/conf/ssl.key/server-dsa.key\n\n#   Server Certificate Chain:\n#   Point SSLCertificateChainFile at a file containing the\n#   concatenation of PEM encoded CA certificates which form the\n#   certificate chain for the server certificate. Alternatively\n#   the referenced file can be the same as SSLCertificateFile\n#   when the CA certificates are directly appended to the server\n#   certificate for convinience.\n#SSLCertificateChainFile /Apache2/conf/ssl.crt/ca.crt\n\n#   Certificate Authority (CA):\n#   Set the CA certificate verification path where to find CA\n#   certificates for client authentication or alternatively one\n#   huge file containing all of them (file must be PEM encoded)\n#   Note: Inside SSLCACertificatePath you need hash symlinks\n#         to point to the certificate files. Use the provided\n#         Makefile to update the hash symlinks after changes.\n#SSLCACertificatePath /Apache2/conf/ssl.crt\n#SSLCACertificateFile /Apache2/conf/ssl.crt/ca-bundle.crt\n\n#   Certificate Revocation Lists (CRL):\n#   Set the CA revocation path where to find CA CRLs for client\n#   authentication or alternatively one huge file containing all\n#   of them (file must be PEM encoded)\n#   Note: Inside SSLCARevocationPath you need hash symlinks\n#         to point to the certificate files. Use the provided\n#         Makefile to update the hash symlinks after changes.\n#SSLCARevocationPath /Apache2/conf/ssl.crl\n#SSLCARevocationFile /Apache2/conf/ssl.crl/ca-bundle.crl\n\n#   Client Authentication (Type):\n#   Client certificate verification type and depth.  Types are\n#   none, optional, require and optional_no_ca.  Depth is a\n#   number which specifies how deeply to verify the certificate\n#   issuer chain before deciding the certificate is not valid.\n#SSLVerifyClient require\n#SSLVerifyDepth  10\n\n#   Access Control:\n#   With SSLRequire you can do per-directory access control based\n#   on arbitrary complex boolean expressions containing server\n#   variable checks and other lookup directives.  The syntax is a\n#   mixture between C and Perl.  See the mod_ssl documentation\n#   for more details.\n#<Location />\n#SSLRequire (    %{SSL_CIPHER} !~ m/^(EXP|NULL)/ \\\n#            and %{SSL_CLIENT_S_DN_O} eq \"Snake Oil, Ltd.\" \\\n#            and %{SSL_CLIENT_S_DN_OU} in {\"Staff\", \"CA\", \"Dev\"} \\\n#            and %{TIME_WDAY} >= 1 and %{TIME_WDAY} <= 5 \\\n#            and %{TIME_HOUR} >= 8 and %{TIME_HOUR} <= 20       ) \\\n#           or %{REMOTE_ADDR} =~ m/^192\\.76\\.162\\.[0-9]+$/\n#</Location>\n\n#   SSL Engine Options:\n#   Set various options for the SSL engine.\n#   o FakeBasicAuth:\n#     Translate the client X.509 into a Basic Authorisation.  This means that\n#     the standard Auth/DBMAuth methods can be used for access control.  The\n#     user name is the `one line' version of the client's X.509 certificate.\n#     Note that no password is obtained from the user. Every entry in the user\n#     file needs this password: `xxj31ZMTZzkVA'.\n#   o ExportCertData:\n#     This exports two additional environment variables: SSL_CLIENT_CERT and\n#     SSL_SERVER_CERT. These contain the PEM-encoded certificates of the\n#     server (always existing) and the client (only existing when client\n#     authentication is used). This can be used to import the certificates\n#     into CGI scripts.\n#   o StdEnvVars:\n#     This exports the standard SSL/TLS related `SSL_*' environment variables.\n#     Per default this exportation is switched off for performance reasons,\n#     because the extraction step is an expensive operation and is usually\n#     useless for serving static content. So one usually enables the\n#     exportation for CGI and SSI requests only.\n#   o CompatEnvVars:\n#     This exports obsolete environment variables for backward compatibility\n#     to Apache-SSL 1.x, mod_ssl 2.0.x, Sioux 1.0 and Stronghold 2.x. Use this\n#     to provide compatibility to existing CGI scripts.\n#   o StrictRequire:\n#     This denies access when \"SSLRequireSSL\" or \"SSLRequire\" applied even\n#     under a \"Satisfy any\" situation, i.e. when it applies access is denied\n#     and no other module can change it.\n#   o OptRenegotiate:\n#     This enables optimized SSL connection renegotiation handling when SSL\n#     directives are used in per-directory context. \n#SSLOptions +FakeBasicAuth +ExportCertData +CompatEnvVars +StrictRequire\n<Files ~ \"\\.(cgi|shtml|phtml|php3?)$\">\n    SSLOptions +StdEnvVars\n</Files>\n<Directory \"/Apache2/cgi-bin\">\n    SSLOptions +StdEnvVars\n</Directory>\n\n#   SSL Protocol Adjustments:\n#   The safe and default but still SSL/TLS standard compliant shutdown\n#   approach is that mod_ssl sends the close notify alert but doesn't wait for\n#   the close notify alert from client. When you need a different shutdown\n#   approach you can use one of the following variables:\n#   o ssl-unclean-shutdown:\n#     This forces an unclean shutdown when the connection is closed, i.e. no\n#     SSL close notify alert is send or allowed to received.  This violates\n#     the SSL/TLS standard but is needed for some brain-dead browsers. Use\n#     this when you receive I/O errors because of the standard approach where\n#     mod_ssl sends the close notify alert.\n#   o ssl-accurate-shutdown:\n#     This forces an accurate shutdown when the connection is closed, i.e. a\n#     SSL close notify alert is send and mod_ssl waits for the close notify\n#     alert of the client. This is 100% SSL/TLS standard compliant, but in\n#     practice often causes hanging connections with brain-dead browsers. Use\n#     this only for browsers where you know that their SSL implementation\n#     works correctly. \n#   Notice: Most problems of broken clients are also related to the HTTP\n#   keep-alive facility, so you usually additionally want to disable\n#   keep-alive for those clients, too. Use variable \"nokeepalive\" for this.\n#   Similarly, one has to force some clients to use HTTP/1.0 to workaround\n#   their broken HTTP/1.1 implementation. Use variables \"downgrade-1.0\" and\n#   \"force-response-1.0\" for this.\nSetEnvIf User-Agent \".*MSIE.*\" \\\n         nokeepalive ssl-unclean-shutdown \\\n         downgrade-1.0 force-response-1.0\n\n#   Per-Server Logging:\n#   The home of a custom SSL log file. Use this when you want a\n#   compact non-error SSL logfile on a virtual host basis.\nCustomLog logs/ssl_request_log \\\n          \"%t %h %{SSL_PROTOCOL}x %{SSL_CIPHER}x \\\"%r\\\" %b\"\n\n</VirtualHost>                                  \n\n</IfDefine>\n\n", "creator": "ken.avery@hp.com", "attachment_id": null, "id": 54144, "time": "2004-03-17T14:56:55Z", "bug_id": 26562, "creation_time": "2004-03-17T14:56:55Z", "tags": [], "is_private": false}, {"count": 7, "tags": [], "bug_id": 26562, "attachment_id": null, "id": 54154, "time": "2004-03-17T15:33:52Z", "creator": "ken.avery@hp.com", "creation_time": "2004-03-17T15:33:52Z", "is_private": false, "text": "BTW - Check your log file to see if there is a SIGNAL 11 SEGFAULT that will \ncause Apache to restart the threads and make it appear that everything is OK."}, {"count": 8, "tags": [], "bug_id": 26562, "attachment_id": null, "id": 54155, "time": "2004-03-17T15:35:31Z", "creator": "ken.avery@hp.com", "creation_time": "2004-03-17T15:35:31Z", "is_private": false, "text": "Here is some more info from on our Linux Heads:\n\nWhile attempting to locate the cause for what appears to be a memory \nconsumption problem in the SSL code, the server segmentation faults. The first \nworker child & all of its child threads continue to consume memory while the \nparent stays the same or gets a little smaller.  The child threads never give \nthe memory back unless restarted.  Please advise if this is an expected \nbehavior.\n\nRunning with 'SSLSessionCache none' doesn't consume memory (and doesn't seg \nfault), but it performs poorly when using 2048 bit keys.\n\nI observed the segmentation fault issue in mod_ssl while running the small \nscript listed below.  Based on the stack information the issue appears to be \nin shmcb_cton_memcpy() during an attempt to remove a session id.  The server \nkeeps on reponding, but all the child threads die and are restarted. I am not \nsure what is happening, but the following variables seem to get corrupted:\n\nThe stack trace shows these are supposed to be:\n\nsrc_offset=6402 \nsrc_len=10240\n\nInside the frame they have these values:\n\n(gdb) print src_offset (in edi register)\n$55 = 3183473748  \n(gdb) print src_len    (in edx register) \n$56 = 3183464512\n\nThe configuration file, and my initial debug session are attached.\n\nApache error_log\n...\n[Mon Mar 15 11:21:33 2004] [notice] Apache/2.0.48 configured -- resuming \nnormal operations [Mon Mar 15 11:25:28 2004] [error] server reached MaxClients \nsetting, consider raising the MaxClients setting [Mon Mar 15 11:38:29 2004] \n[notice] child pid 1065 exit signal Segmentation fault (11) [Mon Mar 15 \n12:06:28 2004] [notice] child pid 1154 exit signal Segmentation fault (11) \n[Mon Mar 15 12:44:49 2004] [notice] child pid 1258 exit signal Segmentation \nfault (11) [Mon Mar 15 13:04:40 2004] [notice] child pid 1315 exit signal \nSegmentation fault (11) [Mon Mar 15 13:17:29 2004] [notice] child pid 1363 \nexit signal Segmentation fault (11) [Mon Mar 15 13:45:12 2004] [notice] child \npid 1401 exit signal Segmentation fault (11) ...\n\nOS RedHat 7.3 \n\ngcc-2.96-113\nglibc-2.2.5-43\nopenssl-0.9.6b-35.7\n\nApache 2.0.48 Build Script:\n\n./configure  --with-program-name=leakd --with-port=9200 --with-mpm=worker --\nenable-ssl=shared --enable-maintainer-mode \\ --enable-proxy=shared --enable-\ncgi=shared --enable-setenvif=shared --enable-cgi=shared --enable-access=shared \n\\ --enable-rewrite=shared --enable-dir=shared --enable-actions=shared --enable-\nmime=shared --enable-proxy_connect=shared \\ --enable-proxy_http=shared --\nenable-negotiation=shared --enable-alias=shared --enable-env=shared --enable-\ndir=shared \\ --enable-mod-actions=shared --enable-log-config=shared --enable-\nimap=shared --enable-headers=shared \\ --enable-layout=webserver --disable-\nautoindex --disable-userdir --disable-usertrack --disable-cgid \\ --disable-\nasis --disable-auth --disable-auth_digest --disable-auth_dbm --disable-\nauth_anon --disable-dav \\ --disable-dav_fs --disable-vhost_alias --disable-\nunique_id --disable-speling --disable-cern_meta --disable-include \\ --disable-\nexpires --enable-status=shared --enable-info=shared\n\nldd leakd:\n\n        libssl.so.2 => /lib/libssl.so.2 (0x40024000)\n        libcrypto.so.2 => /lib/libcrypto.so.2 (0x40052000)\n        libaprutil-0.so.0 => /usr/webserver/lib/libaprutil-0.so.0 (0x40119000)\n        libgdbm.so.2 => /usr/lib/libgdbm.so.2 (0x4012d000)\n        libdb-3.3.so => /lib/libdb-3.3.so (0x40133000)\n        libexpat.so.0 => /usr/lib/libexpat.so.0 (0x401c2000)\n        libapr-0.so.0 => /usr/webserver/lib/libapr-0.so.0 (0x401e1000)\n        libpthread.so.0 => /lib/libpthread.so.0 (0x40200000)\n        librt.so.1 => /lib/librt.so.1 (0x40215000)\n        libm.so.6 => /lib/libm.so.6 (0x40226000)\n        libcrypt.so.1 => /lib/libcrypt.so.1 (0x40247000)\n        libnsl.so.1 => /lib/libnsl.so.1 (0x40274000)\n        libdl.so.2 => /lib/libdl.so.2 (0x40288000)\n        libc.so.6 => /lib/libc.so.6 (0x4028c000)\n        /lib/ld-linux.so.2 => /lib/ld-linux.so.2 (0x40000000)\n\n\nSimple script on external machine downloads copies of the stock Apache \nindex.html.en page under both unsecure & secure sites:\n\n#!/bin/sh\ncounter=0\nlimit=32000\nwhile [ \"$counter\" -lt \"$limit\" ]\ndo\n  wget -O - http://myboxaddr:9200\n  wget -O - https://myboxaddr:9201\n  counter=`expr $counter + 1`\n  echo \"Count=> $counter\"\ndone\n"}, {"count": 9, "tags": [], "creator": "jorton@redhat.com", "attachment_id": null, "text": "Hmmm, haven't seen shmcb segfaults in a while.  Tried any different SSLMutex\nsettings, e.g. \"SSLMutex default\"?  Can you file a separate bug on that, and\ninclude the backtrace for the shmcb segfaults.\n", "id": 54161, "time": "2004-03-17T16:17:37Z", "bug_id": 26562, "creation_time": "2004-03-17T16:17:37Z", "is_private": false}, {"count": 10, "tags": [], "bug_id": 26562, "text": "After tagging memory and running tests over the weekend it appears that calls \nto OPENSSL_malloc in the following files failed to release memory by calling \nthe corresponding OPENSSL_free:\n\nbn_bind.c - 494,788 outstanding OPENSSL_malloc\nbn_lib.c  - 123,673 outstanding OPENSSL_malloc\n\nI am not sure how this relates to the Apache/mod_ssl threaded MPMs; though, it \ndoes appear to be a problem.\n\nAny ideas?", "id": 54388, "time": "2004-03-22T15:09:30Z", "creator": "ken.avery@hp.com", "creation_time": "2004-03-22T15:09:30Z", "is_private": false, "attachment_id": null}, {"count": 11, "tags": [], "text": "I have narrowed it down to the function BN_BLINDING_new in the file \ncrypto\\bn\\bn_blind.c, the memory allocated for the BN_BLINDING structure never \ngets freed. I am assuming that the BIGNUM structures allocated with BN_new \ninside of BN_BLINDING never gets freed also.\n\nHere are my test results after running 24 hours monitoring the OPENSSL_malloc \nand OPENSSL_free calls:\n\n1. BN_BLINDING \u2013 allocations 53,615, frees 0, outstanding 53,615 \n2. BN_new \u2013 allocations 8,347,200, frees 8,127,872 outstanding 219,328 \n3. I also track the heap and it grows proportional to the lack of BN frees", "is_private": false, "bug_id": 26562, "id": 54481, "time": "2004-03-23T15:11:28Z", "creator": "ken.avery@hp.com", "creation_time": "2004-03-23T15:11:28Z", "attachment_id": null}, {"count": 12, "tags": [], "bug_id": 26562, "attachment_id": null, "text": "The patches released to enable RSA blinding in OpenSSL initially had\nthread-safety issues; the fixes for those issues may well have introduced leaks...\n\nTry reproducing using a vanilla OpenSSL 0.9.6m release: if it's still a problem,\nreport the bug back at openssl.org.  It seems unlikely this is a mod_ssl issue\nnow, agreed?\n\n\n", "id": 54485, "time": "2004-03-23T16:00:32Z", "creator": "jorton@redhat.com", "creation_time": "2004-03-23T16:00:32Z", "is_private": false}, {"count": 13, "tags": [], "text": "The blinging leak is fixed in OpenSSL 0.9.7d - mod_ssl still has a huge leak in \nthe threaded MPMs using session caching", "is_private": false, "id": 54578, "creator": "ken.avery@hp.com", "time": "2004-03-24T16:12:18Z", "bug_id": 26562, "creation_time": "2004-03-24T16:12:18Z", "attachment_id": null}, {"count": 14, "tags": [], "bug_id": 26562, "text": "Can you try the following patch ?\nIt seems to fix the mem leak on HP-UX atleast :)\n\nRCS file: /home/cvs/httpd-2.0/modules/ssl/ssl_engine_init.c,v\nretrieving revision 1.126\ndiff -u -r1.126 ssl_engine_init.c\n--- ssl_engine_init.c   5 Mar 2004 02:44:40 -0000       1.126\n+++ ssl_engine_init.c   25 Mar 2004 23:27:02 -0000\n@@ -450,7 +450,7 @@\n          * to ignore process local-caching and\n          * to always get/set/delete sessions using mod_ssl's callbacks.\n          */\n-        cache_mode = SSL_SESS_CACHE_SERVER|SSL_SESS_CACHE_NO_INTERNAL_LOOKUP;\n+        cache_mode = SSL_SESS_CACHE_SERVER|SSL_SESS_CACHE_NO_INTERNAL;\n     }\n \n     SSL_CTX_set_session_cache_mode(ctx, cache_mode);\n", "id": 54753, "time": "2004-03-26T18:00:21Z", "creator": "madhum@hp.com", "creation_time": "2004-03-26T18:00:21Z", "is_private": false, "attachment_id": null}, {"count": 15, "text": "Is this fixed in CVS or not? If not, it's not fixed.", "creator": "nd@perlig.de", "attachment_id": null, "id": 56357, "time": "2004-04-25T11:38:41Z", "bug_id": 26562, "creation_time": "2004-04-25T11:38:41Z", "tags": [], "is_private": false}, {"count": 16, "tags": [], "bug_id": 26562, "attachment_id": null, "text": "Yes, this is fixed in HEAD and for 2.0.50.", "id": 56620, "time": "2004-04-29T11:50:01Z", "creator": "jorton@redhat.com", "creation_time": "2004-04-29T11:50:01Z", "is_private": false}, {"count": 17, "tags": [], "bug_id": 26562, "attachment_id": null, "id": 58085, "time": "2004-05-25T19:29:55Z", "creator": "nd@perlig.de", "creation_time": "2004-05-25T19:29:55Z", "is_private": false, "text": "Thanks."}]