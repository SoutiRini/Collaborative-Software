[{"count": 0, "tags": [], "bug_id": 15032, "attachment_id": null, "is_private": false, "id": 27346, "time": "2002-12-03T18:53:49Z", "creator": "aleftik@hotmail.com", "creation_time": "2002-12-03T18:53:49Z", "text": "Using the following test case the header values show content from the output\nstream.  This happens only when the response is relatively large and the headers\nhave not been requested until after a relatively large response has been\nwritten.  Definitely happens with Mozilla 1.0.1 when a user does a shift reload.  \nto test:\ncompare the output between\nhttp://localhost:8080/search/jk_test.jsp?lines=500 (no mod_jk)\nhttp://localhost/search/jk_test.jsp?lines=500 (with mod_jk)\n\n\n<%@ page language=\"java\" %>\n<%@ page import=\"java.util.*, java.io.*\" %>\n\n<%! void writeHeaders(HttpServletRequest request, JspWriter out)\n  throws IOException {\n     Enumeration enum = request.getHeaderNames();\n     while(enum.hasMoreElements()) {\n       String name = (String) enum.nextElement();\n       String headerString = \"Header Name:\" + name + \" Header Value:\" +\nrequest.getHeader(name);\n       out.print(headerString);\n       //print to std out to make sure it is not getting\n       //corrupted on the way out\n       System.out.println(headerString);\n       out.println(\"<br>\");\n     }\n    }\n%>\n<%! static final DEFAULT_COUNT = 400; /*default no of lines to write*/ %>\n<%\n  boolean writeBefore = false;\n  int lineCount = DEFAULT_COUNT;  //should be large enought to invoke demo errors\n  String doWriteBefore = request.getParameter(\"write_before\");\n  String lnCount = request.getParameter(\"lines\");\n  writeBefore = Boolean.valueOf(doWriteBefore).booleanValue();\n\n  try {\n    lineCount = Integer.parseInt(lnCount);\n  } catch (NumberFormatException ne) {\n    lineCount = DEFAULT_COUNT;\n  } catch (NullPointerException ne) {\n    lineCount = DEFAULT_COUNT;\n  }\n\n%>\n<html>\n\t<body>\n         <%-- write headers before we write a large response--%>\n         <% if (writeBefore) { %>\n         <% writeHeaders(request, out); %>\n         <% } %>\n\n        <%for (int i=0; i < lineCount; i++) {%>\n          This is a really big html file... with lots of data<br>\n        <% } %>\n\n          <%-- write headers after we have a written a response --%>\n          <% writeHeaders(request, out); %>\n\t</body>\n</html>"}, {"count": 1, "tags": [], "bug_id": 15032, "text": "Created attachment 4025\ntest case file that shows the bug", "id": 27347, "time": "2002-12-03T18:55:12Z", "creator": "aleftik@hotmail.com", "creation_time": "2002-12-03T18:55:12Z", "is_private": false, "attachment_id": 4025}, {"count": 2, "tags": [], "bug_id": 15032, "is_private": false, "text": "Created attachment 4026\nworkers2.properties for mod_jk2", "id": 27348, "time": "2002-12-03T19:05:02Z", "creator": "aleftik@hotmail.com", "creation_time": "2002-12-03T19:05:02Z", "attachment_id": 4026}, {"count": 3, "tags": [], "bug_id": 15032, "attachment_id": 4027, "text": "Created attachment 4027\njk2 properties file for tomcat 4.1.12", "id": 27349, "time": "2002-12-03T19:05:58Z", "creator": "aleftik@hotmail.com", "creation_time": "2002-12-03T19:05:58Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 15032, "attachment_id": null, "is_private": false, "id": 27409, "time": "2002-12-04T14:27:55Z", "creator": "hgomez@apache.org", "creation_time": "2002-12-04T14:27:55Z", "text": "Thanks to check with latest releases :\n\njk 1.2.1 or jk 2.0.2 "}, {"count": 5, "tags": [], "text": "tested with mod_jk2.so version 2.0.2 has the same issue...", "attachment_id": null, "id": 27423, "creator": "aleftik@hotmail.com", "time": "2002-12-04T17:50:16Z", "bug_id": 15032, "creation_time": "2002-12-04T17:50:16Z", "is_private": false}, {"count": 6, "tags": [], "bug_id": 15032, "attachment_id": null, "is_private": false, "id": 27437, "time": "2002-12-04T21:03:07Z", "creator": "william.barker@wilshire.com", "creation_time": "2002-12-04T21:03:07Z", "text": "\n\n*** This bug has been marked as a duplicate of 14797 ***"}]