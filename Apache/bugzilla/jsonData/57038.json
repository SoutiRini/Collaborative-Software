[{"count": 0, "tags": [], "text": "In Tomcat 8. We found that Code base for a class in a Jar is pointing to its own URI instead of JAR\u2019s path.\n\n\uf0a7\tThis change in Tomcat\u2019s behavior is probably on account of changes made to WebappClassloader.findResourceInternal() method of Tomcat\u2019s catalina component. I found this by quickly debugging through its source code.\n\uf0a7\tFrom the source code, it is clear that till Tomcat 7.0.55, the codebase that was being associated with a class while loading it was obtained from its JAR\u2019s URL (i.e. jar://...../<jar_name>.jar). \n\uf0a7\tBut from Tomcat 8.0.0 onwards, codebase of the same class (while loading it) is now associated with its own URL (jar:file://....../<jar_name>.jar/.../<classname>.class), instead of its JAR\u2019s URL.\n\uf0a7\tI also could not find any configuration parameter around this piece of code through which behavior can be reverted to previous releases.\n\uf0a7\tThus, I suspect that this change made to WebappClassloader.findResourceInternal() method is leading to current problem. \n\n\uf0a7\tI searched a lot, but could not find out the exact bug ID for which these changes were checked in. But I suspect that these changes are related to one of the following changes:\ni.\tTomcat 8\u2019s change log contains following entry: \n\nImplement a new Resources implementation that merges Aliases, VirtualLoader, VirtualDirContext, JAR resources and external repositories into a single framework rather than a separate one for each feature\n\n\u2018Internal APIs\u2019 section of Apache Tomcat 8.0 Migration document states the following:\n----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nWhilst the Tomcat 8 internal API is broadly compatible with Tomcat 7 there have been many changes at the detail level and they are not binary compatible. Developers of custom components that interact with Tomcat's internals should review the JavaDoc for the relevant API.\n\nOf particular note are:\n\n\uf0a7\tThe Manager, Loader and Resources have moved from Container to Context since Context is the only place they are used.\n\uf0a7\tThe Mapper has moved from the Connector to the Service since the Mapper is identical for all Connectors of a given Service.\n\uf0a7\tA new Resources implementation that merges Aliases, VirtualLoader, VirtualDirContext, JAR resources and external repositories into a single framework rather than a separate one for each feature.\n\uf0a7\tA new interface SessionIdGenerator has been added making session id generation extensible. Methods to get and set the id generator class name have been added to the Manager interface.\n----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n\nii.\tBug 53081 - WebappClassLoader causes java.lang.OutOfMemoryError in findResourceInternal()\n                      ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------", "is_private": false, "id": 178169, "creator": "senthil.cit.erode@gmail.com", "time": "2014-09-29T11:40:56Z", "bug_id": 57038, "creation_time": "2014-09-29T11:40:56Z", "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 57038, "attachment_id": null, "text": "Thanks for the report. This has been fixed in 8.0.x for 8.0.15 onwards.", "id": 178173, "time": "2014-09-29T14:42:29Z", "creator": "markt@apache.org", "creation_time": "2014-09-29T14:42:29Z", "is_private": false}, {"count": 2, "attachment_id": null, "bug_id": 57038, "text": "*** Bug 57206 has been marked as a duplicate of this bug. ***", "id": 179082, "time": "2014-11-13T13:07:34Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2014-11-13T13:07:34Z", "tags": [], "is_private": false}]