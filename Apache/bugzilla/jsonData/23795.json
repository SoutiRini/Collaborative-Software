[{"attachment_id": null, "tags": [], "bug_id": 23795, "text": "When looking at /server-status, it is reporting about 10 times too much CPU time\nwhen compared to the prefork MPM.  This is on SGI IRIX 6.5.20m compiled with the\nfollowing flags and the SGI MIPsPro compiler:\n\n./configure --enable-ssl=static --enable-deflate --enable-mods-shared=most\n--with-ssl=/usr/local/ssl --with-devrandom --with-mpm=worker\n\nHere's the relevant output from mod_status when compiled without --with-mpm=worker:\n\nTotal accesses: 41 - Total Traffic: 1.9 MB\nCPU Usage: u6 s.26 cu0 cs0 - 29.8% CPU load\n1.95 requests/sec - 94.1 kB/second - 48.2 kB/request\n1 requests currently being processed, 7 idle workers\n\nAnd with it:\n\nTotal accesses: 41 - Total Traffic: 1.9 MB\nCPU Usage: u67.21 s3.64 cu0 cs0 - 221% CPU load\n1.28 requests/sec - 61.8 kB/second - 48.2 kB/request\n1 requests currently being processed, 49 idle workers\n\nWith a bit of stress testing with multiple clients, I can get the CPU load\nreported to be on the order of 2-4000%, the machine only has 2 CPUs.\n\nThe requests on each run was generated from a fresh start over SSL and using the\nrequests.  mod_jk 1.2.5 is also loaded into the server.", "count": 0, "id": 45558, "time": "2003-10-13T23:32:43Z", "creator": "drees76@gmail.com", "creation_time": "2003-10-13T23:32:43Z", "is_private": false}, {"attachment_id": null, "tags": [], "bug_id": 23795, "is_private": false, "count": 1, "id": 46341, "time": "2003-10-27T20:26:34Z", "creator": "trawick@apache.org", "creation_time": "2003-10-27T20:26:34Z", "text": "The problem is apparently that each thread is using times() syscall to retrieve\ninfo on CPU usage for entire process, and mod_status is joyfully adding up all\nthe values :)  What we really need is to pick the times() info that was\nretrieved most recently by some thread in the process.\n\nI'll attach a patch in a sec that seems to resolve the problem for me.  It would\nbe helpful if you could try it out.\n\nNote that in the extended status table the same CPU seconds will be reported for\neach thread.  I haven't done anything about that.  Perhaps \"=\" or some other\nsymbol should be printed for threads other than the first one.\n"}, {"count": 2, "tags": [], "bug_id": 23795, "attachment_id": 8758, "is_private": false, "id": 46342, "time": "2003-10-27T20:27:23Z", "creator": "trawick@apache.org", "creation_time": "2003-10-27T20:27:23Z", "text": "Created attachment 8758\nproposed patch for bogus CPU% with threaded MPM"}, {"count": 3, "tags": [], "creator": "drees76@gmail.com", "text": "I tried out the patch, it does appear to generate correct overall CPU usage\nstatistics.\n\nInterestingly, I don't get the same CPU times for each thread in a worker as you\nsuggested, it looks like each thread reports the CPU usage at the time of the\nlast request for the worker thread group.\n\nI agree that it would be a good idea to only display the CPU time once for each\nthread group, it would be less confusing.", "id": 46390, "time": "2003-10-28T19:29:19Z", "bug_id": 23795, "creation_time": "2003-10-28T19:29:19Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "creator": "trawick@apache.org", "text": ">Interestingly, I don't get the same CPU times for each thread in a worker as you\n>suggested, it looks like each thread reports the CPU usage at the time of the\n>last request for the worker thread group.\n\nYeah, I realized later that was an erroneous claim, caused by a lack of common\nsense and not enough data points :)\n\nI need to do a little more testing, such as create a looper module and see if\nCPU% is still sane, then commit to 2.1 and request merge to stable.\n", "id": 46393, "time": "2003-10-28T19:55:28Z", "bug_id": 23795, "creation_time": "2003-10-28T19:55:28Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "creator": "trawick@apache.org", "text": "fixed in 2.1-dev; I'll propose it for merging to 2.0.x once folks have had a\nchance to compla^H^H^H^H^H^Hlook over it\n\nbtw, more code was needed to keep working on linuxthreads (old Linux pthreads\nimplementation); also, I chose to keep displaying CPU time per thread in\nextended status table...  it provides additional hints with normal thread\nlibraries and it is unique information with linuxthreads\n", "id": 46473, "time": "2003-10-29T21:01:46Z", "bug_id": 23795, "creation_time": "2003-10-29T21:01:46Z", "is_private": false, "attachment_id": null}, {"count": 6, "tags": [], "creator": "trawick@apache.org", "text": "fix committed to stable branch for 2.0.next\n", "id": 49077, "time": "2003-12-14T00:43:06Z", "bug_id": 23795, "creation_time": "2003-12-14T00:43:06Z", "is_private": false, "attachment_id": null}]