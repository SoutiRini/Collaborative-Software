[{"count": 0, "tags": [], "bug_id": 13859, "is_private": false, "text": "When I use the following task with the original jakarta-ant-1.5.1-bin.tar.gz\nand JDK 1.4.1 I get NullPointerExceptions shown below, when ant tries to\nprocess the 2nd file in the implicit fileset:\n\n    <xslt basedir=\"${src.codegen.dir}\"\n      destdir=\"${build.codegen.dir}/${codebase}/render/pdf/\"\n      style=\"${src.codegen.dir}/font-file.xsl\"\n      extension=\".java\"\n      includes=\"fonts/*.xml\"\n      classpathref=\"classpath.extensions\">\n      <param name=\"encoding\" expression=\"${textfontencoding}\"/>\n    </xslt>\n\n-------Exception starts------\n...\n     [xslt] Processing\n/home/elkner/prog/fop/src/codegen/fonts/CourierBoldOblique.xml to\n/home/elkner/prog/fop/build/codegen/org/apache/fop/render/pdf/fonts/CourierBoldOblique.java\n     [xslt] Loading stylesheet /home/elkner/prog/fop/src/codegen/font-file.xsl\n     [xslt] Processing\n/home/elkner/prog/fop/src/codegen/fonts/CourierOblique.xml to\n/home/elkner/prog/fop/build/codegen/org/apache/fop/render/pdf/fonts/CourierOblique.java\n     [xslt] home/elkner/prog/fop/src/codegen/font-file.xsl:27:103: Fatal Error!\nUnknown error in XPath Cause: java.lang.NullPointerException\n     [xslt] : Fatal Error! Fatal error during transformation Cause: Fatal error\nduring transformation\n     [xslt] Failed to process\n/home/elkner/prog/fop/src/codegen/fonts/CourierOblique.xml\n\nBUILD FAILED\nfile:/home/elkner/prog/fop/build.xml:228: Fatal error during transformation\n-------Exception stops-------\n\n\n\n-----debug output start -----\n...\n     [xslt] Transforming into\n/home/elkner/prog/fop/build/codegen/org/apache/fop/render/pdf\n     [xslt] Processing /home/elkner/prog/fop/src/codegen/fonts/CourierBold.xml\nto\n/home/elkner/prog/fop/build/codegen/org/apache/fop/render/pdf/fonts/CourierBold.java\n     [xslt] Loading stylesheet /home/elkner/prog/fop/src/codegen/font-file.xsl\n     [xslt] Processing\n/home/elkner/prog/fop/src/codegen/fonts/CourierBoldOblique.xml to\n/home/elkner/prog/fop/build/codegen/org/apache/fop/render/pdf/fonts/CourierBoldOblique.java\n     [xslt] home/elkner/prog/fop/src/codegen/font-file.xsl:27:103: Fatal Error!\nUnknown error in XPath Cause: java.lang.NullPointerException\n     [xslt] : Fatal Error! Fatal error during transformation Cause: Fatal error\nduring transformation\n     [xslt] Failed to process\n/home/elkner/prog/fop/src/codegen/fonts/CourierBoldOblique.xml\n\nBUILD FAILED\nfile:/home/elkner/prog/fop/build.xml:228: Fatal error during transformation\n        at org.apache.tools.ant.taskdefs.XSLTProcess.process(XSLTProcess.java:476)\n        at org.apache.tools.ant.taskdefs.XSLTProcess.execute(XSLTProcess.java:240)\n        at org.apache.tools.ant.Task.perform(Task.java:319)\n        at org.apache.tools.ant.Target.execute(Target.java:309)\n        at org.apache.tools.ant.Target.performTasks(Target.java:336)\n        at org.apache.tools.ant.Project.executeTarget(Project.java:1306)\n        at org.apache.tools.ant.Project.executeTargets(Project.java:1250)\n        at org.apache.tools.ant.Main.runBuild(Main.java:610)\n        at org.apache.tools.ant.Main.start(Main.java:196)\n        at org.apache.tools.ant.Main.main(Main.java:235)\nCaused by: Fatal error during transformation\n        at\norg.apache.tools.ant.taskdefs.optional.TraXLiaison.fatalError(TraXLiaison.java:241)\n        at\norg.apache.xalan.transformer.TransformerImpl.transformNode(TransformerImpl.java:1226)\n        at\norg.apache.xalan.transformer.TransformerImpl.transform(TransformerImpl.java:638)\n        at\norg.apache.xalan.transformer.TransformerImpl.transform(TransformerImpl.java:1088)\n        at\norg.apache.xalan.transformer.TransformerImpl.transform(TransformerImpl.java:1066)\n        at\norg.apache.tools.ant.taskdefs.optional.TraXLiaison.transform(TraXLiaison.java:188)\n        at org.apache.tools.ant.taskdefs.XSLTProcess.process(XSLTProcess.java:466)\n        ... 9 more\n...\n Nested Exception ---\n; SystemID: file:///home/elkner/prog/fop/src/codegen/font-file.xsl; Line#: 27;\nColumn#: 103\njavax.xml.transform.TransformerException: Unknown error in XPath\n        at org.apache.xpath.XPath.bool(XPath.java:411)\n        at org.apache.xalan.templates.ElemChoose.execute(ElemChoose.java:162)\n        at\norg.apache.xalan.templates.ElemApplyTemplates.transformSelectedNodes(ElemApplyTemplates.java:423)\n        at\norg.apache.xalan.templates.ElemApplyTemplates.execute(ElemApplyTemplates.java:226)\n        at\norg.apache.xalan.transformer.TransformerImpl.executeChildTemplates(TransformerImpl.java:2182)\n        at\norg.apache.xalan.transformer.TransformerImpl.applyTemplateToNode(TransformerImpl.java:2008)\n        at\norg.apache.xalan.transformer.TransformerImpl.transformNode(TransformerImpl.java:1171)\n        at\norg.apache.xalan.transformer.TransformerImpl.transform(TransformerImpl.java:638)\n        at\norg.apache.xalan.transformer.TransformerImpl.transform(TransformerImpl.java:1088)\n        at\norg.apache.xalan.transformer.TransformerImpl.transform(TransformerImpl.java:1066)\n        at\norg.apache.tools.ant.taskdefs.optional.TraXLiaison.transform(TraXLiaison.java:188)\n        at org.apache.tools.ant.taskdefs.XSLTProcess.process(XSLTProcess.java:466)\n        at org.apache.tools.ant.taskdefs.XSLTProcess.execute(XSLTProcess.java:240)\n        at org.apache.tools.ant.Task.perform(Task.java:319)\n        at org.apache.tools.ant.Target.execute(Target.java:309)\n        at org.apache.tools.ant.Target.performTasks(Target.java:336)\n        at org.apache.tools.ant.Project.executeTarget(Project.java:1306)\n        at org.apache.tools.ant.Project.executeTargets(Project.java:1250)\n        at org.apache.tools.ant.Main.runBuild(Main.java:610)\n        at org.apache.tools.ant.Main.start(Main.java:196)\n        at org.apache.tools.ant.Main.main(Main.java:235)\nCaused by: java.lang.NullPointerException\n        at org.apache.xpath.objects.XNodeSet.getStringFromNode(XNodeSet.java:235)\n        at org.apache.xpath.objects.XNodeSet.compare(XNodeSet.java:619)\n        at org.apache.xpath.objects.XNodeSet.notEquals(XNodeSet.java:725)\n        at org.apache.xpath.objects.XObject.notEquals(XObject.java:678)\n        at org.apache.xpath.operations.NotEquals.operate(NotEquals.java:82)\n        at org.apache.xpath.operations.Operation.execute(Operation.java:146)\n        at org.apache.xpath.Expression.bool(Expression.java:208)\n        at org.apache.xpath.XPath.bool(XPath.java:388)\n        ... 20 more\n---------\n...\n---------\njava.lang.NullPointerException\n        at org.apache.xpath.objects.XNodeSet.getStringFromNode(XNodeSet.java:235)\n        at org.apache.xpath.objects.XNodeSet.compare(XNodeSet.java:619)\n        at org.apache.xpath.objects.XNodeSet.notEquals(XNodeSet.java:725)\n        at org.apache.xpath.objects.XObject.notEquals(XObject.java:678)\n        at org.apache.xpath.operations.NotEquals.operate(NotEquals.java:82)\n        at org.apache.xpath.operations.Operation.execute(Operation.java:146)\n        at org.apache.xpath.Expression.bool(Expression.java:208)\n        at org.apache.xpath.XPath.bool(XPath.java:388)\n        at org.apache.xalan.templates.ElemChoose.execute(ElemChoose.java:162)\n        at\norg.apache.xalan.templates.ElemApplyTemplates.transformSelectedNodes(ElemApplyTemplates.java:423)\n        at\norg.apache.xalan.templates.ElemApplyTemplates.execute(ElemApplyTemplates.java:226)\n        at\norg.apache.xalan.transformer.TransformerImpl.executeChildTemplates(TransformerImpl.java:2182)\n        at\norg.apache.xalan.transformer.TransformerImpl.applyTemplateToNode(TransformerImpl.java:2008)\n        at\norg.apache.xalan.transformer.TransformerImpl.transformNode(TransformerImpl.java:1171)\n        at\norg.apache.xalan.transformer.TransformerImpl.transform(TransformerImpl.java:638)\n        at\norg.apache.xalan.transformer.TransformerImpl.transform(TransformerImpl.java:1088)\n        at\norg.apache.xalan.transformer.TransformerImpl.transform(TransformerImpl.java:1066)\n        at\norg.apache.tools.ant.taskdefs.optional.TraXLiaison.transform(TraXLiaison.java:188)\n        at org.apache.tools.ant.taskdefs.XSLTProcess.process(XSLTProcess.java:466)\n        at org.apache.tools.ant.taskdefs.XSLTProcess.execute(XSLTProcess.java:240)\n        at org.apache.tools.ant.Task.perform(Task.java:319)\n        at org.apache.tools.ant.Target.execute(Target.java:309)\n        at org.apache.tools.ant.Target.performTasks(Target.java:336)\n        at org.apache.tools.ant.Project.executeTarget(Project.java:1306)\n        at org.apache.tools.ant.Project.executeTargets(Project.java:1250)\n        at org.apache.tools.ant.Main.runBuild(Main.java:610)\n        at org.apache.tools.ant.Main.start(Main.java:196)\n        at org.apache.tools.ant.Main.main(Main.java:235)\n-----debug output end -----\n\n\n-----src/codegen/font-file.xsl snippez starts ---\n...\n<xsl:stylesheet version=\"1.0\"\n                xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\">\n\n  <xsl:output method=\"text\"/>\n\n  <xsl:param name=\"encoding\" select=\"/font-metrics/encoding\"/>\n  <xsl:variable name=\"native-encoding\" select=\"/font-metrics/encoding\"/>\n  <xsl:variable name=\"glyphs\"\nselect=\"document('encodings.xml')/encoding-set/encoding[@id=$encoding]/glyph\"/>\n\n  <xsl:template match=\"font-metrics\">\npackage org.apache.fop.render.pdf.fonts;\n\nimport org.apache.fop.render.pdf.Font;\nimport org.apache.fop.render.pdf.CodePointMapping;\n\npublic class <xsl:value-of select=\"class-name\"/> extends Font {\n    private final static String fontName = \"<xsl:value-of select=\"font-name\"/>\";\n    private final static String encoding = <xsl:choose><xsl:when test=\"$encoding\n!= $native-encoding\">\"<xsl:value-of\nselect=\"$encoding\"/>\"</xsl:when><xsl:otherwise>null</xsl:otherwise></xsl:choose>;\n-----src/codegen/font-file.xsl snippez starts ---\n\nThe last line is line 27, where the ant breaks.\n\n\n\nSo I guess, there was something wrong with the parameters and tried to\nreconfigure the transformer, but without any luck.\nSo the only fix I found to get it work is the following patch:\n\ndiff -Nbaur\njakarta-ant-1.5.1/src/main/org/apache/tools/ant/taskdefs/XSLTProcess.java\nant-1.5.1/src/main/org/apache/tools/ant/taskdefs/XSLTProcess.java\n--- jakarta-ant-1.5.1/src/main/org/apache/tools/ant/taskdefs/XSLTProcess.java \nWed Oct  2 17:09:03 2002\n+++ ant-1.5.1/src/main/org/apache/tools/ant/taskdefs/XSLTProcess.java   Tue Oct\n22 02:26:48 2002\n@@ -707,7 +707,7 @@\n      * @exception BuildException if the stylesheet cannot be loaded.\n      */\n     protected void configureLiaison(File stylesheet) throws BuildException {\n-        if (stylesheetLoaded) {\n+        if (stylesheetLoaded && ! (liaison instanceof TraXLiaison)) {\n             return;\n         }\n         stylesheetLoaded = true;\n\n\nI'm not sure, whether this is more crimson or more ant related ..., however,\nthis needs to be fixed ASAP, since many people use JDK1.4.1 + ant, only.\n\nRegards,\njens.\n\nComplete bugreport is on http://www.linofee.org/~elkner/jakarta/", "id": 25003, "time": "2002-10-22T18:12:59Z", "creator": "elkner@linofee.org", "creation_time": "2002-10-22T18:12:59Z", "attachment_id": null}, {"count": 1, "tags": [], "text": "It's the xslt processor (xalan) that is causing problems here as you can see, \nthere are some problems when recycling objects and as you guessed it can be \navoided by not reusing the transformer but this is not Ant responsability...\n\n\n\n\n*** This bug has been marked as a duplicate of 10615 ***", "attachment_id": null, "bug_id": 13859, "id": 25007, "time": "2002-10-22T18:43:31Z", "creator": "sbailliez@apache.org", "creation_time": "2002-10-22T18:43:31Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 13859, "attachment_id": null, "id": 25010, "time": "2002-10-22T19:16:40Z", "creator": "elkner@linofee.org", "creation_time": "2002-10-22T19:16:40Z", "is_private": false, "text": "Stephane,\n\nyou are probably right, that this might be a jdk1.4.1 or crimson or xalan\n(read, that there are still multithreading issues with the latest version)\nbug. \n\nUnfortunately, if you do not provide a workaround for that issue, \npeople can\u00b4t use ant with JDK 1.4.1. So you are ignoring the whole\n1.4.x community. Do you really want this?\nThis would made ant to appear in a bad light ... :((("}, {"count": 3, "tags": [], "bug_id": 13859, "attachment_id": null, "id": 25013, "time": "2002-10-23T01:11:58Z", "creator": "sbailliez@apache.org", "creation_time": "2002-10-23T01:11:58Z", "is_private": false, "text": "Jens,\n\nI understand your point but honestly there's a bug in the JDK 1.4 regex \nclasses, do you expect me to do a workaround in the regex wrappers so that it \nworks ok ? Unlikely I guess.\n\nI agree the fix is small though, but I would expect someone to come up next \nyear and tell me it is too slow with massive sequential transformation and \nthat we should reuse transformers. :)\n\nWhat version of Xalan are you using ? It would also be better to try to fix \nthis one if it is still a problem with the latest Xalan version. I feel like \nit is around for ages and if I remember well I have a testcase for that that \ndoes about 1000 transformations (sorry it's too late..hem early to look for it \nright now, will try to think about it tomorrow)"}, {"count": 4, "tags": [], "creator": "elkner@linofee.org", "attachment_id": null, "id": 25027, "time": "2002-10-23T08:27:44Z", "bug_id": 13859, "creation_time": "2002-10-23T08:27:44Z", "is_private": false, "text": "Stephane,\n\nactually, this is the first time, I heard about a regex bug in JDK 1.4 :(\nAnyway, I guess, nobody expects you to fix this one ;-)\n\nBut I think, ants goal is to help developers to do their job and if\na bug is well known, it is not uncommon, that the using software\nprovides workarounds to circumvent those traps. The ant developers\ndid and do a great job to support even software with \"uncommon\" \noptions (e.g. jikes, gcj, etc.), so why not support a version of\nprobably the most used JVM ?\n\nOne option for 1.4 or broken JVM/Transformers e.g. would be, to introduce\na new flag (thinking on \"optimize\" or \"reuse\") and if is set, templates\nare will be reused.\n\nSo the fix could be:\n\nif (stylesheetLoaded && optimze) {\n  return;\n}\n\n\nThen the developer can decide (by doing additional checks or not ;-)),\nwhich one works for him and even other people are able to change the\nbehavior just by using a single property.\n\nSounds at least quiet easy for me and you don\u00b4t have to worry about\nperformance annoyed developers ;-)\n\nHow about this?\n\nRegards,\njens.\n\nPS: I\u00b4m using JDK 1.4.1_01 and can\u00b4t make use of the endorsed stuff,\n    since I can\u00b4t tell any user to modify its JVM to be able to\n    run this or that application. So this is:\n    version.JAXP=1.1\n    version.crimson=not-present\n    version.SAX=2.0\n    version.xerces=not-present\n    version.DOM.draftlevel=2.0fd\n    version.xalan2=Xalan;Java;Xalan Java 2.2.D11;\n    version.DOM=2.0\n    version.xalan1=not-present\n  \n\n"}, {"count": 5, "text": "I believe I will have insults flying all over the net if I drop the default \nperformance by forcing to parse the stylesheet 50 times to process 50 xml \nfiles...assuming it works of course. No need to be fast if it crashes at half \nthe processing :-)\n\nPlease do something for me: test with the latest Xalan 2.4.0 in endorsed\n\nAbout the regex bug. I fixed it and sent it to Sun during the 1.4RC, It was \nfixed, but I'm not sure it made it's way in 1.4.1 I will have to check again.\n", "bug_id": 13859, "is_private": false, "id": 25079, "time": "2002-10-23T22:34:14Z", "creator": "sbailliez@apache.org", "creation_time": "2002-10-23T22:34:14Z", "tags": [], "attachment_id": null}, {"count": 6, "tags": [], "text": "Why not to add the following feature? :\n\n--- jakarta-ant-1.5.1/src/main/org/apache/tools/ant/taskdefs/XSLTProcess.java\t\nWed Oct  2 17:09:03 2002\n+++ ant-1.5.1/src/main/org/apache/tools/ant/taskdefs/XSLTProcess.java\tThu Oct 24\n06:25:30 2002\n@@ -153,6 +153,13 @@\n     private boolean performDirectoryScan = true;\n \n     /**\n+     * Whether to reuse templates once loaded.\n+     *\n+     * @since Ant 1.5.2\n+     */\n+    private boolean optimized = true;\n+\n+    /**\n      * Creates a new XSLTProcess Task.\n      */\n     public XSLTProcess() {\n@@ -701,13 +708,35 @@\n     }\n \n     /**\n+     * Whether to reuse stylesheets once loaded. Default: <code>true</code>\n+     *\n+     * @param value  <code>true|false</code>\n+     */\n+    public void setOptimized(String value) {\n+\t\tif (\"true\".equals(value)) {\n+\t\t\toptimized = true;\n+\t\t} else if (\"false\".equals(value)) {\n+\t\t\toptimized = false;\n+\t\t} else {\n+\t\t\tlog(\"Unknown value \\\"\" + value + \"\\\" ignored.\", Project.MSG_WARN);\n+\t\t}\n+\t}\n+\n+    /**\n+     * @return whether a stylesheet is reused once loaded.\n+     */\n+    public String getOptimized() {\n+\t\treturn optimized ? \"true\" : \"false\";\n+\t}\n+\n+    /**\n      * Loads the stylesheet and set xsl:param parameters.\n      *\n      * @param stylesheet the file form which to load the stylesheet.\n      * @exception BuildException if the stylesheet cannot be loaded.\n      */\n     protected void configureLiaison(File stylesheet) throws BuildException {\n-        if (stylesheetLoaded) {\n+        if (stylesheetLoaded && optimized) {\n             return;\n         }\n         stylesheetLoaded = true;\n\n\nThis shouldn\u00b4t hurt anybody, but help a lot of people!\n\nRegards,\njens.", "attachment_id": null, "id": 25091, "creator": "elkner@linofee.org", "time": "2002-10-24T04:35:27Z", "bug_id": 13859, "creation_time": "2002-10-24T04:35:27Z", "is_private": false}, {"count": 7, "tags": [], "creator": "bodewig@apache.org", "attachment_id": null, "id": 26356, "time": "2002-11-15T12:00:36Z", "bug_id": 13859, "creation_time": "2002-11-15T12:00:36Z", "is_private": false, "text": "I've called the attribute \"reuseloadedstylesheet\" - better names are appreciated.\n\nI think optimize doesn't cut it, as we are not optimizing anything - we do what\nthe API allows us to do.\n\nPlease try a nightly build after 2002-11-15 to verify that it works for you.\nAlternatively you can build Ant from sources and check out CVS HEAD."}, {"count": 8, "tags": [], "bug_id": 13859, "attachment_id": null, "id": 27359, "time": "2002-12-03T21:09:39Z", "creator": "elkner@linofee.org", "creation_time": "2002-12-03T21:09:39Z", "is_private": false, "text": "Well, after checking the xalan stuff a little bit deeper,\nI think at least wrt. to xalan, that the whole stylesheet \nhandling is still not cleanly implemented.\n\nhttp://xml.apache.org/xalan-j/usagepatterns.html (Multithreading) states:\n\nIf you want to perform multiple transformations (sequentially or concurrently)\nwith the same stylesheet instructions, do the following:\n\n   1. Use the TransformerFactory newTemplates(Source xslSource) method to create\na Templates object.\n\n   2. For each transformation, use the Templates object newTransformer() method\nto create a Transformer, and use that Transformer's transform(Source xmlSource,\nResult transformResult) method to perform the transformation.\n\nFor an example, see Examples.exampleUseTemplatesObj() in the trax sample.\n\n\nSo IMHO this would be clean and work without setting the \n\"reuseloadedstylesheet\" attribute to a certain value ..."}, {"count": 9, "tags": [], "bug_id": 13859, "attachment_id": null, "is_private": false, "id": 30414, "time": "2003-01-31T14:37:58Z", "creator": "conor@apache.org", "creation_time": "2003-01-31T14:37:58Z", "text": "Stefan, I don't think your change has any effect. The TraxLiason only ever\ncreates one transformer, even if the stylesheet  is specified multiple times (or\nchanged). That is probably a bug in itself.\n\nI think Jens' last comment indicates that we are violating the rules, at least\naccording to Xalan and should probably move to caching the templates instance\nand creating a new transformer for each transform call.\n\nIf we do decide to retain reuseloadedstylesheet, I'd invert its sense and call\nit reloadStylesheet.\n\nThoughts? "}, {"count": 10, "tags": [], "bug_id": 13859, "attachment_id": null, "text": "Quite possible, I've just committed Jens' patch 8-)\n\nI question whether we should follow Xalan's rules over TraX rules (if there\nare any), but then again, I haven't read the TraX spec either.  I was relying on\nStephane (and always would do so again, Stephane! ;-).\n\nIf you think the patch doesn't help, feel free to modify it - we should try to keep\nsome level of backwards compatibility with the default here, though.  AFAIU, Saxon\ndoesn't have problems with the way we use the processor.", "id": 30417, "time": "2003-01-31T14:53:54Z", "creator": "bodewig@apache.org", "creation_time": "2003-01-31T14:53:54Z", "is_private": false}, {"count": 11, "tags": [], "bug_id": 13859, "is_private": false, "text": "JAXP javadoc for Transformer says\n\n\"An object of this class may not be used in multiple threads running\nconcurrently. Different Transformers may be used concurrently by different threads.\n\nA Transformer may be used multiple times. Parameters and output properties are\npreserved across transformations.\"\n\nSo, it seems Xalan is being more restrictive than the spec.\n\nI'll do some work with reloadStylesheet and maintain current behaviour.\n\n\n\n", "id": 30419, "time": "2003-01-31T15:13:25Z", "creator": "conor@apache.org", "creation_time": "2003-01-31T15:13:25Z", "attachment_id": null}, {"count": 12, "attachment_id": null, "bug_id": 13859, "is_private": false, "id": 30459, "time": "2003-02-01T04:44:53Z", "creator": "conor@apache.org", "creation_time": "2003-02-01T04:44:53Z", "tags": [], "text": "I have changed the name of attribute to reloadStylsheet (with inverted sense).\nSet to true to avoid Xalan bugs. Note that the templates instance is now cached\nso the performance impact should not be that great even using this attribute.\n\n"}]