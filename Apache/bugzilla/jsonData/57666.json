[{"count": 0, "attachment_id": null, "creator": "yaniv@kundas.net", "text": "Any sheets copied from an existing workbook when constructing a SXSSFWorkbook are not deleted by the dispose() method.\n\nFor example, assume \"existingWorkbook\" contains n sheets:\n\n    SXSSFWorkbook wb = SXSSFWorkbook(existingWorkbook);\n    wb.createSheet(\"New\");\n    wb.dispose();\n\nAfter calling the constructor, a temporary xml file is created for each new sheet copied from an existing sheet.\nAfter calling wb.createSheet a temporary xml file is created for the fresh sheet.\nAfter calling dispose(), only the temporary xml file created by createSheet() will be deleted.\n\nI didn't provide a unit test since it's hard to to check for the internally created temp files, and also because File.delete() is not guaranteed to be actually deleted after returning with \"true\" because the file system operation might be async.", "id": 181523, "time": "2015-03-05T12:07:45Z", "bug_id": 57666, "creation_time": "2015-03-05T12:07:45Z", "tags": [], "is_private": false}, {"count": 1, "tags": [], "bug_id": 57666, "is_private": false, "text": "Any chance of a patch to fix this?", "id": 181525, "time": "2015-03-05T12:34:29Z", "creator": "apache@gagravarr.org", "creation_time": "2015-03-05T12:34:29Z", "attachment_id": null}, {"count": 2, "tags": [], "creator": "yaniv@kundas.net", "attachment_id": null, "id": 181530, "time": "2015-03-05T14:15:13Z", "bug_id": 57666, "creation_time": "2015-03-05T14:15:13Z", "is_private": false, "text": "(In reply to Nick Burch from comment #1)\n> Any chance of a patch to fix this?\n\nActually, I've looked further into this and the problem might be different:\nIn my case (and I failed to mentioned this), after creating the SXSSFWorkbook using the existing XSSFWorkbook, I've deleted the sheet created as a copy from the XSSFWorkbook, using removeSheetAt().\n\nSo the problem might in fact be that removeSheetAt() does not delete its writer's temp file."}, {"count": 3, "tags": [], "bug_id": 57666, "attachment_id": null, "id": 181531, "time": "2015-03-05T14:22:02Z", "creator": "yaniv@kundas.net", "creation_time": "2015-03-05T14:22:02Z", "is_private": false, "text": "I don't have a proper environment for patching right now, but I would change SXSSFWorkbook.removeSheetAt(int) from\n\n    public void removeSheetAt(int index)\n    {\n        XSSFSheet xSheet=_wb.getSheetAt(index);\n        _wb.removeSheetAt(index);\n        deregisterSheetMapping(xSheet);\n    }\n\nto\n\n    public void removeSheetAt(int index)\n    {\n        XSSFSheet xSheet=_wb.getSheetAt(index);\n        _wb.removeSheetAt(index);\n        SXSSFSheet sxSheet = getSXSSFSheet(xSheet);\n        sxSheet.dispose();\n        deregisterSheetMapping(xSheet);\n    }"}, {"attachment_id": null, "tags": [], "bug_id": 57666, "is_private": false, "count": 4, "id": 181532, "time": "2015-03-05T14:33:28Z", "creator": "yaniv@kundas.net", "creation_time": "2015-03-05T14:33:28Z", "text": "I also found a workaround applicable for my situation -\n\nThis is my problematic code:\n\n            // open a template with a single sheet\n            XSSFWorkbook template = new XSSFWorkbook(\"data/template.xlsx\");\n            SXSSFWorkbook wb = new SXSSFWorkbook(template);\n            try {\n                Sheet templateSheet = template.getSheetAt(0);\n                // read some stuff from the template\n                ...\n\n                // create new sheet\n                Sheet sheet = wb.createSheet(\"Data\");\n\n                // remove sheet copied from template\n                wb.removeSheetAt(0);\n\n                // fill the new sheet with data\n                ...\n\n                wb.write(out);\n            } finally {\n                wb.dispose();\n            }\n\nThe workaround is to call wb.dispose() before creating the new sheet."}, {"count": 5, "tags": [], "text": "Thanks, I've added the dispose call on remove in r1676833.", "attachment_id": null, "id": 182733, "creator": "apache@gagravarr.org", "time": "2015-04-29T19:28:50Z", "bug_id": 57666, "creation_time": "2015-04-29T19:28:50Z", "is_private": false}]