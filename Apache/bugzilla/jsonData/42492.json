[{"count": 0, "tags": [], "creator": "veugelerse@macewan.ca", "is_private": false, "id": 103512, "attachment_id": null, "bug_id": 42492, "creation_time": "2007-05-22T12:01:38Z", "time": "2007-05-22T12:01:38Z", "text": "When accessing Tomcat through mod_proxy_ajp:\n\t<IfModule mod_proxy.c>\n\t\tProxyPass /webapp ajp://localhost:8009/webapp\n\t\tProxyPassReverse /webapp ajp://localhost:8009/webapp\n\t</IfModule>\nand the initial request is received by Apache over HTTPS, large POST data bodies are often not received \nby Tomcat. The POST request in question had about 56kB of data. The problem is intermittent, in that \nthe POST data does, on occasion, arrive properly. Even if the POST data does not arrive (Tomcat reports \nnull values for POST data parameters) the request's Content-Length header is still received properly, \nbut not the data itself. This is easily shown by accessing a JSP page that displays both the header and \nthe POST request parameters.\n\nThe problem was experienced running both Apache 2.2.0 and Apache 2.2.4 against Tomcat 5.5.20, \nboth on SuSE 10.1 and on Mac OS X 10.4.8.\n\nPlease note:\n- It is Apache that is accessed over HTTPS, not Tomcat.\n- Problem does not occur when accessing Apache through non-secure HTTP.\n- Problem does not occur when accessing Tomcat directly over HTTP (port 8080), bypassing Apache.\n- Problem DOES occur when using mod_jk instead of mod_proxy_ajp, and again, only over HTTPS.\n- Problem does not occur when proxying into the Tomcat HTTP connector:\n\t<IfModule mod_proxy.c>\n\t\tProxyPass /webapp http://localhost:8080/webapp\n\t\tProxyPassReverse /webapp http://localhost:8080/webapp\n\t</IfModule>\n\nThe notes above lead me to believe the issue is with mod_proxy_ajp, but then, I'm not an expert. Some \ndigging around in bugzilla found an eerily similar bug in mod_proxy_http, bug number 37415 (http://\nissues.apache.org/bugzilla/show_bug.cgi?id=37145), that was fixed in httpd-2.0.56. Which might \nexplain why the HTTP proxy connection to Tomcat port 8080 is working, but the AJP proxy is not."}, {"count": 1, "tags": [], "creator": "rpluem@apache.org", "attachment_id": null, "is_private": false, "id": 103515, "time": "2007-05-22T12:29:04Z", "bug_id": 42492, "creation_time": "2007-05-22T12:29:04Z", "text": "Do you use SSLVerifyClient somewhere in the httpd SSL case?"}, {"count": 2, "tags": [], "bug_id": 42492, "text": "(In reply to comment #1)\n> Do you use SSLVerifyClient somewhere in the httpd SSL case?\n\nNo, SSLVerifyClient is not used at all. In fact, here is the complete (comments stripped) vhost-ssl.conf \ninclude file:\n\n<IfDefine SSL>\n<IfDefine !NOSSL>\n<VirtualHost _default_:443>\n\tDocumentRoot \"/srv/www/htdocs\"\n\tErrorLog /var/log/apache2/error_log\n\tTransferLog /var/log/apache2/access_log\n\n\tSSLEngine on\n\n\tSSLCipherSuite ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP:+eNULL\n\n\tSSLCertificateFile (valid *.domain crt)\n\tSSLCertificateKeyFile (valid key)\n\tSSLCACertificateFile (valid DigiCert CA crt)\n\n\t<Files ~ \"\\.(cgi|shtml|phtml|php3?)$\">\n\t    SSLOptions +StdEnvVars\n\t</Files>\n\t<Directory \"/srv/www/cgi-bin\">\n\t    SSLOptions +StdEnvVars\n\t</Directory>\n\n\tSetEnvIf User-Agent \".*MSIE.*\" \\\n\t\t nokeepalive ssl-unclean-shutdown \\\n\t\t downgrade-1.0 force-response-1.0\n\n\tCustomLog /var/log/apache2/ssl_request_log   ssl_combined\n\t\n\tRedirectMatch ^/$ https://cms.macewan.ca/webapp\n</VirtualHost>                                  \n\n</IfDefine>\n</IfDefine>\n\nHope this helps", "id": 103516, "time": "2007-05-22T12:43:06Z", "creator": "veugelerse@macewan.ca", "creation_time": "2007-05-22T12:43:06Z", "is_private": false, "attachment_id": null}, {"count": 3, "attachment_id": null, "creator": "rpluem@apache.org", "text": "Thanks for the update. A couple of other questions:\n\n1. Do you get either all POST data in Tomcat or no data at all or do you have\nsituations where you get only parts of the data?\n2. If you get data in Tomcat (either partial or complete) is this data always\ncorrect or do you receive sometimes corrupted data (e.g. wrong order of data,\nsome data missing within, ...)\n\nPlease set your loglevel to debug and try to post / attach (depending on the\nsize) the output of your error log for a successfull POST request and a POST\nrequest where data is lost.\nFor my convenience: Can you please attach the test jsp that displays both the\nheader and the POST request parameters as mentioned in your first comment?", "id": 103517, "time": "2007-05-22T13:29:08Z", "bug_id": 42492, "creation_time": "2007-05-22T13:29:08Z", "tags": [], "is_private": false}, {"count": 4, "tags": [], "text": "(In reply to comment #3)\n> 1. Do you get either all POST data in Tomcat or no data at all or do you have\n> situations where you get only parts of the data?\n\nAFAIK, it's all or nothing.\n\n> 2. If you get data in Tomcat (either partial or complete) is this data always\n> correct or do you receive sometimes corrupted data (e.g. wrong order of data,\n> some data missing within, ...)\n\nAgain AFAIK, it seems to be fine when it works.\n\nI was trying to reproduce the issue on my local machine today (no access to problem app), fresh \nhttpd-2.2.4, fresh tomcat 5.5.20, fresh little webapp, and I cannot reproduce it. Bum. I'll get more when \nI'm back at the other site.\n\nThanks so far.", "is_private": false, "bug_id": 42492, "id": 103523, "time": "2007-05-22T16:01:48Z", "creator": "veugelerse@macewan.ca", "creation_time": "2007-05-22T16:01:48Z", "attachment_id": null}, {"count": 5, "attachment_id": 20252, "creator": "veugelerse@macewan.ca", "text": "Created attachment 20252\naccess_log excerpt (incorrect, ignore)", "id": 103557, "time": "2007-05-23T09:28:19Z", "bug_id": 42492, "creation_time": "2007-05-23T09:28:19Z", "tags": [], "is_private": false}, {"count": 6, "tags": [], "creator": "veugelerse@macewan.ca", "text": "Created attachment 20253\nerror_log excerpt", "id": 103558, "attachment_id": 20253, "bug_id": 42492, "creation_time": "2007-05-23T09:31:05Z", "time": "2007-05-23T09:31:05Z", "is_private": false}, {"count": 7, "tags": [], "text": "I attached excerpts from the access_log and error_log files. LogLevel is set tp debug. The interesting \nrquests are the POST requests at 10:15:39 and 10:15:45. (The one inbetween is not really involved in the \nissue.) The two requests mentioned are the exact same request (although the request content-length \nseems to be different...) The first one succeeds, the second one fails to reach Tomcat properly.", "is_private": false, "bug_id": 42492, "id": 103559, "time": "2007-05-23T09:35:17Z", "creator": "veugelerse@macewan.ca", "creation_time": "2007-05-23T09:35:17Z", "attachment_id": null}, {"count": 8, "tags": [], "text": "Created attachment 20254\naccess_log excerpt", "is_private": false, "bug_id": 42492, "id": 103560, "time": "2007-05-23T09:36:20Z", "creator": "veugelerse@macewan.ca", "creation_time": "2007-05-23T09:36:20Z", "attachment_id": 20254}, {"count": 9, "tags": [], "creator": "veugelerse@macewan.ca", "is_private": false, "id": 103570, "attachment_id": null, "bug_id": 42492, "creation_time": "2007-05-23T12:25:05Z", "time": "2007-05-23T12:25:05Z", "text": "Okay, not a lot of testing done, but it seems like I can make the problem go away by upgrading the \nfollowing two components:\n\n- tomcat-native from 1.1.6 to 1.1.9\n- libapr (only for tomcat-native) from 1.2.7 to 1.2.8\n\nThis way the requests seem to go through okay using httpd 2.2.0 or 2.2.4 (with included apr versions).\n\nFYI"}, {"count": 10, "tags": [], "bug_id": 42492, "text": "(In reply to comment #9)\n\n> following two components:\n> \n> - tomcat-native from 1.1.6 to 1.1.9\n> - libapr (only for tomcat-native) from 1.2.7 to 1.2.8\n> \n> This way the requests seem to go through okay using httpd 2.2.0 or 2.2.4 (with\nincluded apr versions).\n\nThis is possible. I noticed the following difference between the working and the\nnon working request:\n\n[Wed May 23 10:15:39 2007] [debug] mod_proxy_ajp.c(193): proxy: data to read\n(max 8186 at 4)\n[Wed May 23 10:15:39 2007] [debug] mod_proxy_ajp.c(208): proxy: got 2048 bytes\nof data\n[Wed May 23 10:15:39 2007] [debug] ajp_header.c(643): ajp_read_header:\najp_ilink_received 06\n[Wed May 23 10:15:39 2007] [debug] ajp_header.c(653): ajp_parse_type: got 06\n\nThis means mod_proxy_ajp sends the first 2048 bytes of the 3488 bytes of the\nPOST request body immediately and it gets back a request from Tomcat's AJP\nconnector to sent more (type 06) (in this case the missing 1440 bytes). And as\nthe SSL BIO dump afterwards indicates mod_proxy_ajp sends POST request body data\nto the Tomcat afterwards.\nNext we have\n\n[Wed May 23 10:15:39 2007] [debug] ajp_header.c(643): ajp_read_header:\najp_ilink_received 04\n[Wed May 23 10:15:39 2007] [debug] ajp_header.c(653): ajp_parse_type: got 04\n\nwhich indicates that Tomcat starts sending the response by sending the response\nheaders across.\n\nIn the second case things look a little bit different:\n\n[Wed May 23 10:15:45 2007] [debug] mod_proxy_ajp.c(193): proxy: data to read\n(max 8186 at 4)\n[Wed May 23 10:15:45 2007] [debug] mod_proxy_ajp.c(208): proxy: got 2048 bytes\nof data\n[Wed May 23 10:15:45 2007] [debug] ajp_header.c(643): ajp_read_header:\najp_ilink_received 04\n[Wed May 23 10:15:45 2007] [debug] ajp_header.c(653): ajp_parse_type: got 04\n\nmod_proxy_ajp again only sents the first 2048 bytes of the POST request body\nimmediately, but instead of asking for more (as in the first case), Tomcat\nimmediately starts with the response by sending the headers.\nSo this could be a Tomcat bug. For further verification I think it could be\nhelpful to have a network sniff of the communication between httpd and Tomcat to\nsee if there are errors in the messages that could trigger this behaviour on the\nTomcat side.\n\nWhy does this not happen in the HTTP case? Well I do not know exactly, but it\nmay be that in the HTTP case the whole POST request body is sent immediately.\nOf course this should only make a difference for POST request bodies < 8k as if\nthey are larger they need to split into different ajp packets anyway.\nSo it might be nice to have a debug error log of the same POST request over HTTP\non the frontend.\n\nWhat about the 56k you talk about in your initial comment? Is this the size of\nthe request body or is this the size of the response?", "id": 103605, "time": "2007-05-24T03:56:33Z", "creator": "rpluem@apache.org", "creation_time": "2007-05-24T03:56:33Z", "is_private": false, "attachment_id": null}, {"count": 11, "tags": [], "bug_id": 42492, "is_private": false, "text": "did anyone find any further info on this?\n\nI have a very similar issue, on CentOS 6. Running tomcat 6.0.24, openjdk 1.7 and apache 2.2.15.\n\nWhen I send a request (using curl for testing purposes) with 1 POST paramter of ~18k in size - it can be read just fine by request.getparameter in tomcat webapp (when I do curl directly to tomcat port 8080).\n\nWhen I send the exact same request to apache - setup to do proxypass using ajp (and running in https vhost), tomcat dies with an iooutofboundsexception.. meaning it dies when trying to read the actual parameter contents.", "id": 173975, "time": "2014-03-20T14:56:30Z", "creator": "kl@vsen.dk", "creation_time": "2014-03-20T14:56:30Z", "attachment_id": null}, {"count": 12, "tags": [], "bug_id": 42492, "text": "If I post through port http instead of https - it works as it's supposed to.\n\nBoth vhosts have EXACT same setup - except for using certs on SSL.\n  proxyrequests off\n  proxypass /mywebapp/ ajp://localhost:8009/mywebapp/ retry=0\n  ProxyTimeout 600\n  ProxyIOBufferSize 19000\n\n  <Proxy *>\n    Order deny,allow\n    Allow from all\n  </Proxy>", "id": 173976, "time": "2014-03-20T15:02:14Z", "creator": "kl@vsen.dk", "creation_time": "2014-03-20T15:02:14Z", "is_private": false, "attachment_id": null}, {"count": 13, "attachment_id": null, "creator": "kl@vsen.dk", "is_private": false, "id": 173977, "time": "2014-03-20T15:05:25Z", "bug_id": 42492, "creation_time": "2014-03-20T15:05:25Z", "tags": [], "text": "updated to also be relevant for v2.2.15"}, {"count": 14, "tags": [], "bug_id": 42492, "is_private": false, "text": "I seem to have the same problem but with:\n\napache 2.4.6\ntomcat 7.0.69\ntomcat-native  1.1.34\n\nusing prepackaged Centos and EPEL binaries.\n\nWas there ever a resolution for this? It doesn't seem to relate to the POST data size - even tiny content doesn't make it to Tomcat.", "id": 198961, "time": "2017-05-30T20:29:06Z", "creator": "nic@cottrell.net", "creation_time": "2017-05-30T20:29:06Z", "attachment_id": null}]