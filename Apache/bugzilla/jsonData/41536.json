[{"count": 0, "tags": [], "bug_id": 41536, "attachment_id": null, "text": "SOAP/XML-RPC Request sampler inserts apparently spurious lines into its HTTP\nPOST request.  One spurious line immediately precedes the XML body of the\nrequest (it follows the blank line separating the request headers from the\nrequest body).  This line consists of the length of the request body in bytes,\nas a hexadecimal number.  Additionally, following the XML request body, a blank\nline and a line containing the number 0 are sent.\n\nIt seems these lines should not be sent for a request with \"Content-Type:\ntext/xml\", which is the default content type for SOAP/XML-RPC Request samplers.", "id": 98955, "time": "2007-02-04T17:28:32Z", "creator": "cederber@gmail.com", "creation_time": "2007-02-04T17:28:32Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 41536, "text": "Created attachment 19512\nJMX produces correct chunked transfer\n\nThe attached JMeter plan sends a minimal SOAP request to localhost:8181.  The\nproblem can be observed by binding netcat to port 8181 (\"nc -l -p 8181\") and\nrunning the test plan.", "id": 98956, "time": "2007-02-04T17:36:16Z", "creator": "cederber@gmail.com", "creation_time": "2007-02-04T17:36:16Z", "is_private": false, "attachment_id": 19512}, {"count": 2, "tags": [], "bug_id": 41536, "attachment_id": 19517, "id": 98978, "time": "2007-02-05T12:11:51Z", "creator": "cederber@gmail.com", "creation_time": "2007-02-05T12:11:51Z", "is_private": false, "text": "Created attachment 19517\nJMX produces incorrect behavior\n\nPrevious attachment actually reflects correct HTTP/1.1 behavior; uses chunked\ntransfer coding (RFC 2616, sec. 3.6.1), which specifies that the chunk size is\nsent before each chunk and that a trailing 0 is sent.  The \"Transfer-Encoding:\nchunked\" header is set accordingly.\n\nThe difference between this attachment and previous is that this plan sends a\n\"Content-Length\" header.  The \"Transfer-Encoding\" header is no longer sent, but\nchunk sizes are still inserted into the request.  This is incorrect behavior."}, {"count": 3, "tags": [], "creator": "sebb@apache.org", "attachment_id": null, "text": "Adding a Content-Length header is not recommended, as this header is created \nby the underlying protocol.\n\nI suspect this has confused HttpClient into not adding the chunked header but \nstill generating chunked output.\n\nThe code currently returns -l from the contentLength() method in the \nRequestEntity instance; this forces chunked encoding.\n\nIt would be easy enough to return the actual length where the message has been \nprovided in the text box, and thus avoid chunked encoding. Probably worth \ndoing.\n\nNot so sure that this is possible for file input; the file size returned by \nthe OS may not match the number of bytes actually sent, and one does not want \nto read the file twice.\n\nCan you not persuade your application to accept chunked input?", "id": 98993, "time": "2007-02-05T15:27:51Z", "bug_id": 41536, "creation_time": "2007-02-05T15:27:51Z", "is_private": false}, {"count": 4, "tags": [], "text": "(In reply to comment #3)\n> Adding a Content-Length header is not recommended, as this header is created \n> by the underlying protocol.\n> \n> I suspect this has confused HttpClient into not adding the chunked header but \n> still generating chunked output.\n> \n> The code currently returns -l from the contentLength() method in the \n> RequestEntity instance; this forces chunked encoding.\n> \n> It would be easy enough to return the actual length where the message has been \n> provided in the text box, and thus avoid chunked encoding. Probably worth \n> doing.\n> \n\nThere is a patch in this bug that does that:\n\nhttp://issues.apache.org/bugzilla/show_bug.cgi?id=39827\n\n> Not so sure that this is possible for file input; the file size returned by \n> the OS may not match the number of bytes actually sent, and one does not want \n> to read the file twice.\n> \n\nIf that is the case, can we just return -1 if it is a file?\n\nThanks!\n\n> Can you not persuade your application to accept chunked input?\n\n", "attachment_id": null, "bug_id": 41536, "id": 98997, "time": "2007-02-05T17:06:12Z", "creator": "shahs@yahoo-inc.com", "creation_time": "2007-02-05T17:06:12Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 41536, "attachment_id": null, "id": 99009, "time": "2007-02-06T02:44:35Z", "creator": "sebb@apache.org", "creation_time": "2007-02-06T02:44:35Z", "is_private": false, "text": "(In reply to comment #4)\n> (In reply to comment #3)\n> > Adding a Content-Length header is not recommended, as this header is \n\n[...]\n\n> > The code currently returns -l from the contentLength() method in the \n> > RequestEntity instance; this forces chunked encoding.\n\n[...]\n \n> > Not so sure that this is possible for file input; the file size returned by \n> > the OS may not match the number of bytes actually sent, and one does not \nwant \n> > to read the file twice.\n> > \n> If that is the case, can we just return -1 if it is a file?\n> Thanks!\n\nSee above: it already does that; I changed the text box case to return the \nstring length."}, {"count": 6, "tags": [], "bug_id": 41536, "attachment_id": null, "id": 106933, "time": "2007-08-20T05:45:40Z", "creator": "sebb@apache.org", "creation_time": "2007-08-20T05:45:40Z", "is_private": false, "text": "I think this is now fixed.\n\nIf not, please re-open with details."}]