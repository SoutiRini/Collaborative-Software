[{"count": 0, "tags": [], "text": "This might actually be a problem in xmlgraphics-commons, but I'm not sure.  It appears that if an FO file makes an external-graphic reference to a PNG file and renders to either PDF or PostScript (those are the only 2 I tried), the PNG file remains locked until the JVM exits.  Note that if there are multiple external-graphic elements only 1 or the last 2 are locked.\n\nTo summarize the application flow:\n1. Write PNG files to directory and close them\n2. Create FO file containing external-graphic reference to those PNG files\n3. Create PDF file through FOP\n4. Delete PNG files\n\nThe File.delete() call fails on some of the PNG files.\n\nI tried this same test with JPG files and they all deleted just fine.  I'm guessing that somewhere an InputStream isn't getting closed.", "is_private": false, "bug_id": 45171, "id": 117514, "time": "2008-06-09T14:31:29Z", "creator": "sgriffin@cerner.com", "creation_time": "2008-06-09T14:31:29Z", "attachment_id": null}, {"count": 1, "tags": [], "creator": "adelmelle@apache.org", "attachment_id": null, "text": "\nWhat version of Java are you using exactly?\n\nJust asking, since I recently ran into references on the web, concerning an issue in Sun's implementation of some ImageIO classes. The issue was inadvertent use of File.deleteOnExit(), which kept files locked a lot longer than they were ever supposed to... Maybe something similar is happening here?\n\nApart from that, I don't know if the image that is held in the ImageCache also locks the file until the cache is cleared or the entry is removed from the cache... \nTo check whether that is the case, you could try running:\n\nfopFactory.getImageManager().getCache().clearCache() \n\nbefore calling File.delete().", "id": 117524, "time": "2008-06-10T03:51:59Z", "bug_id": 45171, "creation_time": "2008-06-10T03:51:59Z", "is_private": false}, {"count": 2, "attachment_id": null, "bug_id": 45171, "text": "I'm running Sun JRE 1.5.0_12.  I can try a 1.6 JRE to see if it makes a difference.\n\nI tried clearing the image cache, even though I have fopFactory.setUseCache(false), JIC, but it didn't make a difference.\n\nThe actual code I'm using to delete is something like this:\nif (!file.delete())\n    file.deleteOnExit();\n\nand unfortunately the deleteOnExit fails as well, I guess because of a race condition between when the lock is released and the delete call executes.", "id": 117542, "time": "2008-06-10T08:37:30Z", "creator": "sgriffin@cerner.com", "creation_time": "2008-06-10T08:37:30Z", "tags": [], "is_private": false}, {"count": 3, "tags": [], "text": "(In reply to comment #2)\n> I'm running Sun JRE 1.5.0_12.  I can try a 1.6 JRE to see if it makes a\n> difference.\n> \n> I tried clearing the image cache, even though I have\n> fopFactory.setUseCache(false), JIC, but it didn't make a difference.\n\nfopFactory.setUseCache() influences only the use of the font-cache. Probably needs a rename...\n\nYou could also try javax.imageio.ImageIO.setUseCache(false), which effectively bypasses the stream-cache classes that potentially lock the file (if it is the same issue I've been reading about)", "attachment_id": null, "id": 117547, "creator": "adelmelle@apache.org", "time": "2008-06-10T09:39:59Z", "bug_id": 45171, "creation_time": "2008-06-10T09:39:59Z", "is_private": false}, {"count": 4, "tags": [], "text": "I switched to JRE 1.6.  No difference.  I set ImageIO.setUseCache(false).  No difference.  Fortunately the problem is pretty consistent: FO file containing one external-graphic with a reference to a PNG file, create PDF, try to delete PNG file...it won't delete.\n\nI tried with small (13KB) and large (0.99MB) files alike with same result.", "is_private": false, "id": 117551, "creator": "sgriffin@cerner.com", "time": "2008-06-10T12:37:20Z", "bug_id": 45171, "creation_time": "2008-06-10T12:37:20Z", "attachment_id": null}, {"count": 5, "tags": [], "creator": "jeremias@apache.org", "is_private": false, "text": "Sorry for being late to chime in. This bug should already be fixed and will be available in the XML Graphics Commons 1.3.1 bugfix release I'm publishing right at this moment. The release should be downloadable shortly (when the mirrors are synchronized, i.e. within a few hours):\nhttp://www.apache.org/dyn/closer.cgi/xmlgraphics/commons\n\nPlease reopen the bug should XML Graphics Commons 1.3.1 not solve your problem.", "id": 117561, "time": "2008-06-11T01:29:03Z", "bug_id": 45171, "creation_time": "2008-06-11T01:29:03Z", "attachment_id": null}, {"count": 6, "tags": [], "bug_id": 45171, "attachment_id": null, "id": 117573, "time": "2008-06-11T07:20:52Z", "creator": "sgriffin@cerner.com", "creation_time": "2008-06-11T07:20:52Z", "is_private": false, "text": "Yes, that appears to have done the trick.  Thanks so much!  I was stepping through too much code I didn't understand, so good to know I can stop that exercise in futility."}]