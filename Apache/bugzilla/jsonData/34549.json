[{"count": 0, "tags": [], "bug_id": 34549, "attachment_id": null, "id": 73880, "creation_time": "2005-04-21T08:17:11Z", "time": "2005-04-21T08:17:11Z", "creator": "oleg.timoshenko@xantic.net", "text": "Tomcat 5.5.9.\nI have two JSPs: /a.jsp and /secure/b.jsp\nDeployment descriptor (related parts):\n<security-constraint>\n  <web-resource-collection>\n     <web-resource-name>Protected Area</web-resource-name>\n       <url-pattern>/security/*</url-pattern>\n       <http-method>DELETE</http-method>\n       <http-method>GET</http-method>\n       <http-method>POST</http-method>\n       <http-method>PUT</http-method>\n   </web-resource-collection>\n   <auth-constraint>\n       <role-name>AGENT</role-name>\n   </auth-constraint>\n</security-constraint>\n\n<login-config>\n  <auth-method>BASIC</auth-method>\n  <realm-name>Web Portal Authentification Realm</realm-name>\n</login-config>\n\n<security-role> <role-name>AGENT</role-name> </security-role>\n<!-- End of DD -->\n\nIn the body of each web page I have the following scriptlet:\n<%=request.isUserInRole(\"AGENT\")%>\n\nI access web pages using the following two scenarios:\n========================\nScenario 1 (correct behaviour):\nAction [Result]\n1) /a.jsp  [page a is displayed, scriptlet outputs \"false\"] - Correct\n2) /security/b.jsp [authorization request, I supply credentials of the user \nwhich is has AGENT Role; page b is displayed, scriptlet outputs \"true\"] - \nCorrect\n3) /a.jsp  [same as 1)] - Correct\n========================\nScenario 2 (step 2 produces incorrect output):\n1) /security/b.jsp [authorization request, I supply credentials of the user \nwhich has AGENT Role; page b is displayed, scriptlet outputs \"true\"]\n2) /a.jsp [page a is displayed, scriptlet outputs \"false\", both \nrequest.getUserPrincipal() and request.getRemoteUser() give \"null\"] - WRONG\n3) /security/b.jsp [page b is displayed, scriptlet outputs \"true\"] - Correct\n4) /a.jsp [page a is displayed, scriptlet outputs \"true\"] - Correct.\n\nNote: I instruct browsers not to cache pages by including the following \nscriptlet at the beginning of both pages /a.jsp and /security/b.jsp:\n<%  response.setHeader(\"Cache-Control\",\"no-cache\");\n    response.setHeader(\"Pragma\",\"no-cache\");      %>", "is_private": false}, {"count": 1, "tags": [], "creator": "remm@apache.org", "attachment_id": null, "id": 73885, "time": "2005-04-21T08:58:25Z", "bug_id": 34549, "creation_time": "2005-04-21T08:58:25Z", "is_private": false, "text": "Honestly, this sounds way too weird to be true. I recommend you investigate more."}, {"count": 2, "tags": [], "creator": "oleg.timoshenko@xantic.net", "text": "Exactly!\nI checked it in Tomcat 5.5.4, Tomcat 5.5.9, Tomcat embedded into JBoss server.\nChecked with Internet Explorer and Firefox - all the same.\nI'm on the stage of decicion whether to use J2EE security in my web app, or\ndevelop by ourself and actually, this issue is the only thing that keeps me from\nusing J2EE security...\nTry to check it, it's very easy to reproduce.", "id": 73887, "time": "2005-04-21T09:13:51Z", "bug_id": 34549, "creation_time": "2005-04-21T09:13:51Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 34549, "attachment_id": null, "text": "One tiny, but important note:\nthis only happens with BASIC authorization. When I use FORM-based authorization,\neverything works perfectly.\n\nI hope this clarification is usefull.", "id": 74140, "time": "2005-04-26T17:13:36Z", "creator": "oleg.timoshenko@xantic.net", "creation_time": "2005-04-26T17:13:36Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 34549, "attachment_id": null, "is_private": false, "id": 74153, "time": "2005-04-26T23:46:57Z", "creator": "remm@apache.org", "creation_time": "2005-04-26T23:46:57Z", "text": "Looking back at it, I think the explanation is easy: no session for first\nrequest when using BASIC (auth principals are cached in the session)."}, {"count": 5, "tags": [], "creator": "jfarcand@apache.org", "attachment_id": null, "id": 74191, "time": "2005-04-27T22:17:57Z", "bug_id": 34549, "creation_time": "2005-04-27T22:17:57Z", "is_private": false, "text": "(In reply to comment #0)\n\n> I access web pages using the following two scenarios:\n> ========================\n> Scenario 1 (correct behaviour):\n> Action [Result]\n> 1) /a.jsp  [page a is displayed, scriptlet outputs \"false\"] - Correct\n> 2) /security/b.jsp [authorization request, I supply credentials of the user \n> which is has AGENT Role; page b is displayed, scriptlet outputs \"true\"] - \n> Correct\n> 3) /a.jsp  [same as 1)] - Correct\n\nHere you means same as 2, right? Because it is a bug if it is same as 1.\n\n-- Jeanfrancois"}, {"count": 6, "tags": [], "bug_id": 34549, "attachment_id": null, "text": "(In reply to comment #5)\n> (In reply to comment #0)\n> \n> > I access web pages using the following two scenarios:\n> > ========================\n> > Scenario 1 (correct behaviour):\n> > Action [Result]\n> > 1) /a.jsp  [page a is displayed, scriptlet outputs \"false\"] - Correct\n> > 2) /security/b.jsp [authorization request, I supply credentials of the user \n> > which is has AGENT Role; page b is displayed, scriptlet outputs \"true\"] - \n> > Correct\n> > 3) /a.jsp  [same as 1)] - Correct\n> \n> Here you means same as 2, right? Because it is a bug if it is same as 1.\n> \n> -- Jeanfrancois\n\nOh, yes, sure - same as 2 except authorization.\n", "id": 74210, "time": "2005-04-28T09:00:25Z", "creator": "oleg.timoshenko@xantic.net", "creation_time": "2005-04-28T09:00:25Z", "is_private": false}, {"count": 7, "tags": [], "creator": "remm@apache.org", "text": "Well, since we're not going to create a session in the authenticator, this \"bug\"\nis not a bug. You should be able to use a filter which creates a session to do\nwhat you want.", "id": 74284, "time": "2005-04-29T19:54:18Z", "bug_id": 34549, "creation_time": "2005-04-29T19:54:18Z", "is_private": false, "attachment_id": null}, {"count": 8, "tags": [], "bug_id": 34549, "is_private": false, "text": "(In reply to comment #7)\n> Well, since we're not going to create a session in the authenticator, this \"bug\"\n> is not a bug. You should be able to use a filter which creates a session to do\n> what you want.\n\nI just got burned by this bug myself.\n\nSo role membership cannot be tested unless the request has a session? I don't\nsee how the Servlet Specification 2.4 can be interpreted like that. Can someone\nclarify this please?\n", "id": 104759, "time": "2007-06-27T05:14:49Z", "creator": "bjorn.danielsson@implior.se", "creation_time": "2007-06-27T05:14:49Z", "attachment_id": null}]