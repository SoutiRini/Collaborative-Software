[{"attachment_id": null, "tags": [], "bug_id": 7158, "text": "I'm breaking this out as a separate issue from bug 7067, originally\nraised by Hans Bergsten:\n\nIt's extremely hard to find out which expression is invalid even in a\nmodestly complex page with a few expressions. The line and column\nnumber in the exception message are confusing since they refer to the\nline/column in a single expression, not a line/column in the page\n(which is basically impossible to accomplish in JSP 1.2).\n\nI suggest the complete expression being parsed be included in the\nexception message. That would make it a lot easier to find out where\nthe problem lies.", "count": 0, "id": 11855, "time": "2002-03-15T21:11:35Z", "creator": "arista@atg.com", "creation_time": "2002-03-15T21:11:35Z", "is_private": false}, {"attachment_id": null, "tags": [], "bug_id": 7158, "text": "Made a few general changes to clean up the formatting of EL exception\nmessages.\n\nChanged the token definitions that have multiple forms, like \"<\" and\n\"lt\" - broke each of those out as separate tokens so that the error\nmessage would print \"<\", \"lt\" as expected tokens, not \"<LE>\".\n\nCustomized the error message of the ParseException so that:\n\n  * the attribute name and value are included in the error message\n  * the line/column numbers are no longer in the error message\n  * the list of expected tokens is put on a single line, not broken\n    out onto separate lines\n\nThis was done without actually changing the definition of\nParseException (in case JavaCC is run again and overwrites any\ncustomizations).\n\nAlso added a catch-all token so that any input can be tokenized, hence\nno TokenMgrErrors - all errors now show up as ParseExceptions,\nformatted as described above.\n", "count": 1, "id": 12073, "time": "2002-03-20T13:58:14Z", "creator": "arista@atg.com", "creation_time": "2002-03-20T13:58:14Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 7158, "attachment_id": null, "is_private": false, "id": 12532, "time": "2002-03-30T04:34:30Z", "creator": "hans@gefionsoftware.com", "creation_time": "2002-03-30T04:34:30Z", "text": "Thanks for the fixes, but I found anouther type of exception thrown by the\nEvaluator (or the EL, not sure). This is when the specified bean property\ndoes not exist, resulting in a message like this:\n\n  Unable to find a value for \"requestUri\" in object of class \n  \"org.apache.catalina.connector.HttpRequestFacade\" using operator \".\"\n\nIf the action and attribute name, plus the complete expression, can be added \nto this type of exception message as well, it would help a lot.\n\n"}, {"count": 3, "tags": [], "creator": "arista@atg.com", "text": "The previous fix only covered parse exceptions (which would be thrown\neither at runtime or translation time), but didn't cover the purely\nruntime ELExceptions.  Those are now being caught and wrapped with a\nmessage indicating the attribute name and value.\n\nI don't know if anyone cares, but this might be a slight security\nproblem since it's possible for some of a page's \"source code\" (i.e.,\nthe attribute value expression) to be visible to the end user if an\nexception makes it out that far.  But I suppose exceptions in general\ncan expose a lot of undesirable information to the end user, so this\nis probably no more of a problem than it has always been.\n", "id": 12571, "time": "2002-03-31T16:42:34Z", "bug_id": 7158, "creation_time": "2002-03-31T16:42:34Z", "is_private": false, "attachment_id": null}]