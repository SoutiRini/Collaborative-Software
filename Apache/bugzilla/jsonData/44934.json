[{"count": 0, "tags": [], "bug_id": 44934, "text": "Request to add helper method to DailyRollingFileAppender to generate schedule file name.  That way, subclasses can determine the names of the files that the appender will archive to.  i.e.,\n\nChange Log4j v1.2.15 from\n\n\tvoid rollOver() throws IOException {\n\t\t...\n\t\tString datedFilename = fileName+sdf.format(now);\n\t\t...\n\t}\n\nto\n\n\tvoid rollOver() throws IOException {\n\t\t...\n\t\tString datedFilename = getScheduledFileName(now);\n\t\t...\n\t}\n\n\t/**\n\t * Subclasses may override this to change the name\n\t * of file that logs get rotated to.\n\t *\n\t * @param date\t[in] (non-null) time used to tag logs being rotated out\n\t *\n\t * @return name of file [to rotate to]\n\t */\n\tprotected String getScheduledFileName(Date date) {\n\t\treturn fileName + sdf.format(now);\n\t}", "id": 116243, "time": "2008-05-05T07:44:39Z", "creator": "hmak@vaultus.com", "creation_time": "2008-05-05T07:44:39Z", "is_private": false, "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 44934, "text": "Would it be sufficient with a pattern (with an information set available on the file to be rolled out) or do you want to be able to sub class?  I think there should be a number of overrideable methods to subclass to make things easier.\n\nWe had a need for rolling logs, and being able to compress and rename those which would otherwise have been deleted.  It was not easy to do nicely.", "count": 1, "id": 119304, "time": "2008-08-02T15:52:14Z", "creator": "thorbjoern@gmail.com", "creation_time": "2008-08-02T15:52:14Z", "is_private": false}]