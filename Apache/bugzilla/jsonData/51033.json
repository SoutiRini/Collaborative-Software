[{"count": 0, "tags": [], "creator": "carlo.bramix@libero.it", "attachment_id": 26863, "text": "Created attachment 26863\nFix for this bug\n\nThe file include/arch/win32/apr_private.h provides an APR_DWORD_MAX macro.\nThis macro is useless: you must use MAXDWORD macro provided by the \"hidden\" winnt.h, it will work fine on all 16-bit, 32-bit and 64-bit platforms.\nThis macro was also written into include/arch/netware/apr_private.h, perhaps it has been made from the one used by win32 sources; anyways, this macro was used  by two Windows-only sources, so I think there are not problems to remove it from there too.", "id": 145592, "time": "2011-04-06T09:41:39Z", "bug_id": 51033, "creation_time": "2011-04-06T09:41:39Z", "is_private": false}, {"count": 1, "attachment_id": null, "bug_id": 51033, "text": "assert(DWORD doesn't change size/range between 32-bit and 64-bit systems, and I guess it got its double-word name in 16-bit days when, unlike WORD, DWORD was 32-bits there as well)\n\n(removing the symbol would probably be fine; I wonder if NetWare is impacted since it also uses the Windows network code)", "id": 145648, "time": "2011-04-08T11:13:59Z", "creator": "trawick@apache.org", "creation_time": "2011-04-08T11:13:59Z", "tags": [], "is_private": false}, {"count": 2, "tags": [], "bug_id": 51033, "is_private": false, "text": "In my opinion, if there will be some troubles with NetWare, I think it won't be a big problem to write something like this into include/arch/netware/apr_private.h:\n\n#ifndef MAXDWORD\n#define MAXDWORD 0xffffffff\n#endif\n\nto put in the same point instead of defining APR_DWORD_MAX, to be compliant to Windows standards since it wants to use parts of its sources.", "id": 145654, "time": "2011-04-08T15:17:59Z", "creator": "carlo.bramix@libero.it", "creation_time": "2011-04-08T15:17:59Z", "attachment_id": null}]