[{"count": 0, "tags": [], "creator": "dominic.benson@thirdlight.com", "text": "Created attachment 27448\nPatch to prevent memory explosion when  fcgid hands off to FCGI backend\n\nWhile FcgidMaxRequestInMem limits the amount of memory used by the server while the client request is being sent, the process of reading the file (via APR_BUCKET_NEXT) to write via proc_write_ipc causes the entire contents to be in memory in the server process simultaneously.\n\nThe problem seems to be that, while data is passed to the FCGI process in small chunks, the apr_bucket_brigade keeps all its buckets as the file is read, and they morph into heap type.\n\nBuckets should be removed from the brigade as the data is delivered, per the guidelines for writing output filters.\n\nSteps to reproduce:\n httpd 2.2.19 on x86 with mod_fcgid 2.3.6\n Create a file of 2.5GB+\n Set FcgidMaxRequestLen to at least the size of this file\n Send the file in a request that will be handled by fcgid\n\nWhat happens:\n A few seconds after the request body is transferred (depending on server speed), the httpd child handling the request segfaults, as it exceeds the process address limit\n\nWhat should happen:\n The httpd process should stay at modest memory usage throughout, and the request should be processed by the FCGI backend\n\n\nThe attached patch prevents the end-of-request explosion. I think it probably ought to have some more checks on the added bucket/brigade processing, though.", "id": 148935, "time": "2011-08-31T16:27:20Z", "bug_id": 51747, "creation_time": "2011-08-31T16:27:20Z", "is_private": false, "attachment_id": 27448}, {"count": 1, "tags": [], "creator": "wrowe@apache.org", "text": "*** Bug 52282 has been marked as a duplicate of this bug. ***", "id": 163071, "time": "2012-10-30T21:23:25Z", "bug_id": 51747, "creation_time": "2012-10-30T21:23:25Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "creator": "dominic.benson@thirdlight.com", "text": "Created attachment 30006\nUpdated patch against 2.3.7\n\nThe original patch doesn't apply correctly against 2.3.7, as the addition of:\n\nif (APR_BUCKET_IS_METADATA(e)) {\n            continue;\n        }\n\ncauses an infinite loop (the APR_BUCKET_REMOVE hadn't happened at that point). This patch corrects this; now the APR_BUCKET_REMOVE is the first action in the loop, so it ought to be more robust against future changes.", "id": 165556, "time": "2013-02-28T22:11:38Z", "bug_id": 51747, "creation_time": "2013-02-28T22:11:38Z", "is_private": false, "attachment_id": 30006}, {"count": 3, "tags": [], "creator": "dominic.benson@thirdlight.com", "text": "Created attachment 30093\nRevised patch fixing a bug introduced in the previous update for 2.3.7\n\nThe previous updated patch against 2.3.7 had a bug that it could run into a blocking read that would never return, owing to the bucket not being in the brigade at the point at which the data was read.\nThis issue seems to only affect SSL at certain file sizes, but those are likely only loosely related as issues.\nThis updated version restores the order so that the read is prior to the removal from the original brigade, while still avoiding the issue when applying the original patch (written for 2.3.6) against 2.3.7 that metadata buckets would cause an infinite loop.", "id": 166083, "time": "2013-03-21T16:32:05Z", "bug_id": 51747, "creation_time": "2013-03-21T16:32:05Z", "is_private": false, "attachment_id": 30093}, {"count": 4, "tags": [], "creator": "apachebugs@sigkill.net", "text": "\"Me too\" and the Mar 21 patch fixed it. (For future searchers, I hit this on Ubuntu through the owncloud user migration plugin - it can't upload the large dataset successfully. Without this patch, it coredumps but with it applied it worked.)", "id": 170583, "time": "2013-10-12T15:06:02Z", "bug_id": 51747, "creation_time": "2013-10-12T15:06:02Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "creator": "js@contact.de", "text": "Also occured on Windows with Apache 2.2.27 and mod_fcgid 2.3.9.\nThe previous patch, patches only unix. Added an new diff patching windows & unix, based on the previous patch, developed on 2.3.9 sources", "id": 184821, "time": "2015-08-28T12:01:27Z", "bug_id": 51747, "creation_time": "2015-08-28T12:01:27Z", "is_private": false, "attachment_id": null}, {"count": 6, "tags": [], "creator": "js@contact.de", "text": "Created attachment 33050\nExtended patch for windows & unix", "id": 184822, "time": "2015-08-28T12:03:10Z", "bug_id": 51747, "creation_time": "2015-08-28T12:03:10Z", "is_private": false, "attachment_id": 33050}]