[{"attachment_id": null, "tags": [], "creator": "skitching@apache.org", "text": "The StandardContext class is responsible for webapp deployment. It creates an\norg.apache.commons.logging.Log object on-demand. However the object might be\ncreated when the TCCL is set to that of a webapp being deployed. This is really\nbad, as the returned Log object is configured using the TCCL (and quite likely\npoints to an object whose Class is loaded from that webapp's lib dir). When the\nlog object is accessed later (for purposes unrelated to that webapp) things get\nugly.\n\nOne effect is that a logging configuration failure in one webapp can cause\ncatalina to fail to start, because using the log object causes an exception in\nareas that are not caught and handled.\n\nSpecific class causing problem: StandardContext\nRelevant method: listenerStart, listenerStop.\n\nThe fix is to ensure the Log object is created while the TCCL is NOT set to the\nwebapp (ie before StandardContext.listenerStart method sets the TCCL).\n\nTomcat version affected: 5.5.15", "count": 0, "id": 87896, "time": "2006-04-13T10:49:23Z", "bug_id": 39296, "creation_time": "2006-04-13T10:49:23Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 39296, "is_private": false, "text": "Lol. As you should have guessed, this is done on purpose :)\n\nThe point is to replicate what the Logger element allowed and capture all\nlogging coming from the Context and its related sub components. If you disagree\nwith this design, I think it is easy to patch your Tomcat copy to correct this\n\"issue\".", "id": 87897, "time": "2006-04-13T10:55:27Z", "creator": "remm@apache.org", "creation_time": "2006-04-13T10:55:27Z", "attachment_id": null}, {"attachment_id": null, "tags": [], "creator": "skitching@apache.org", "is_private": false, "count": 2, "id": 87898, "time": "2006-04-13T11:03:35Z", "bug_id": 39296, "creation_time": "2006-04-13T11:03:35Z", "text": "Well, deliberately using a logger initialised while TCCL=somewebapp is ok too.\nIn fact, it's nice as the operations performed by StandardContext on behalf of a\nspecific webapp are logged via that webapp's config.\n\nHowever in that case it is necessary to ensure that the logger is *not* set\nbefore the TCCL is configured, and is *always* reset before the TCCL is restored\nto the container one.\n\nWhat is happening now is that the Log object can be initialised while the\nTCCL=webapp, then used later when code unrelated to that webapp is running.\n*That* is very bad.\n\nAs it happens, this isn't a theoretical problem. It is happening to me right now\nas I'm working on a project for my current client; a problem during webapp\ninitialisation for one webapp causes the entire tomcat instance to fail to start.\n\nPlease consider reopening this."}, {"count": 3, "tags": [], "bug_id": 39296, "text": "No, I will not consider reopening this.\n\nAs I said, all subcomponents of a Context are related to the webapp, and they\nall use that particular logger rather than a global static one for a reason\n(which is to do what the Logger element did). This logger will not be used for\nstuff which is not related to executing code from the webapp (yes, calling a\nlistener and getting an exception back is obviously related to the webapp). I\ndid fix issues in 5.5.15 related to the creation and handling of this logger\n(which you should have checked first rather than waste people's time).\n\nNow, you can try to make it like there are horrible issues by continuing abusing\nthe star character.", "id": 87900, "time": "2006-04-13T11:21:22Z", "creator": "remm@apache.org", "creation_time": "2006-04-13T11:21:22Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 39296, "is_private": false, "text": "I agree with Simon.  This problem sounds like the my conclusion in Bug #37498\nand the 2 line fix there.  Also similar comments at\nhttp://marc.theaimsgroup.com/?t=114432545800007&r=1&w=4\n\nIs the current \"design\" mandated by any specification or just a TC\nimplementation detail ?\n\nLogging is somewhat of a religious issue in all Java development and each\ncontainer should allow as much freedom to the web-app developer as they can give\nin this area.\n\nThis means to me that TC should take measures to protected itself from\nundesirable logger runtime behaviour.  I dont think the logging calls (we are\ntalking about) within the container code are performance critical and believe a\nbalance can be achieved by wrapping all container code invokations on web-app\nlogger instances with code to eat exceptions (and possibily fallback to picking\nup a container based logger instance on failure, global log).\n\nThe hi-jacking of the web-app logger instance for use by the container upon\nmatters relating to the context is nice, but should never destabalise the\ncontainer, the feature is not worth that.\n\n\n> What is happening now is that the Log object can be initialised while the\n> TCCL=webapp, then used later when code unrelated to that webapp is running.\n> *That* is very bad.\n\nSimon can you at least point out that code path ?\n\nI have no new evidence to agree with this point right now since taking vacation\nthese past weeks and not having time to have retested latest TC.  But Remy\ncommitted a patch in relation to Bug #38795 which might close the door on some\ncode paths you maybe finding.\n\nSo can you confirm you are using the latest TC which includes that change.\n", "id": 88576, "time": "2006-04-27T18:33:33Z", "creator": "darryl@darrylmiles.org", "creation_time": "2006-04-27T18:33:33Z", "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 39296, "text": "Hi Darryl,\n\nI found that the problem is fixed in the 5.5.16 release; at least the testcase I\nhad that failed on 5.5.15 worked on 5.5.16.\n\nI'm still not convinced that the code is right. The patch that fixed this did it\nin what seems to me to be an odd way. I found this bug in 5.5.15; before filing\nwith bugzilla I looked at the patches from 5.5.15 to 5.5.16, and believed there\nwas no point testing 5.5.16 because no patch seemed related to the bug I had. I\nwas wrong, but I think that indicates that logging handling in this class is not\nimplemented cleanly.\n\nNevertheless, I'm unable to cause the 5.5.16 code to fail.\n\nI would agree with you about not allowing logging failures to \"destabilise the\ncontainer\". However any invocation of a user-supplied object should be wrapped\nin a try-catch block. What needs to be remembered is that a Log object\ninitialised while TCCL is set to a webapp *is* a user-supplied object. If it is\ntreated like other user-supplied objects (ContextListeners etc) are treated then\nthere should be no problems; wrapping use of the logger in try/catch shouldn't\nbe necessary. Naming the object \"userLog\" instead of \"log\" might help.\n\nOf course if the webapp TCCL is left set, as indicated in bug #38795 then things\nwill get really stuffed up!\n\nI can't refer you to a particular \"code path\" where Log is used after TCCL is\nreset; it was clear from the exception that was caused that it was happening,\nbut I don't have a particular line of code I can point to.", "id": 88640, "time": "2006-04-28T22:59:00Z", "creator": "skitching@apache.org", "creation_time": "2006-04-28T22:59:00Z", "is_private": false, "attachment_id": null}]