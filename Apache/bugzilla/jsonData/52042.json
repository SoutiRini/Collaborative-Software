[{"count": 0, "tags": [], "creator": "gurkanerdogdu@yahoo.com", "attachment_id": null, "text": "NullPointerException exception is thrown randomly from \"DefaultInstanceManager#processAnnotations\" method on the following lines,\n\n List<AnnotationCacheEntry> annotations;\n            synchronized (annotationCache) {\n                annotations = annotationCache.get(clazz).get();\n            }\n\n            //Null Pointer Exception is thrown, because annotations is NULL\n            for (AnnotationCacheEntry entry : annotations) {\n\n\nFor example, I have a JSF Managed Bean \n\npublic class X extends Y{\n}\n\nOpen JSF page that contains managed bean X. Randomly opening the same page throws NullPointerException because for superclass Y \"annotations = annotationCache.get(clazz).get();\" returns null.\n\nUsing WeakHashMap on \"annotationCache\" field may be the reason of exception.", "id": 150665, "time": "2011-10-17T14:39:00Z", "bug_id": 52042, "creation_time": "2011-10-17T14:39:00Z", "is_private": false}, {"count": 1, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "text": "That code snippet could refer to several places in the DefaultInstanceManager. Please provide the full stack trace.\n\nI don't think the use of WeakReferences is the problem since there should be a strong reference present to prevent the collection of the weak reference until the point where the web app is reloaded.\n\nWe have seen issues where annotations weren't scanned because objects weren't created through the instance manager. That is another possible explanation.", "id": 150666, "time": "2011-10-17T15:07:33Z", "bug_id": 52042, "creation_time": "2011-10-17T15:07:33Z", "is_private": false}, {"count": 2, "tags": [], "creator": "gurkanerdogdu@yahoo.com", "attachment_id": null, "text": "Here is the full stack trace\n\njava.lang.NullPointerException\n\tat org.apache.catalina.core.DefaultInstanceManager.processAnnotations(DefaultInstanceManager.java:460)\n\tat org.apache.catalina.core.DefaultInstanceManager.newInstance(DefaultInstanceManager.java:146)\n\tat org.apache.catalina.core.DefaultInstanceManager.newInstance(DefaultInstanceManager.java:139)\n\tat org.apache.myfaces.config.annotation.Tomcat7AnnotationLifecycleProvider.postConstruct(Tomcat7AnnotationLifecycleProvider.java:90)\n\tat org.apache.myfaces.config.ManagedBeanBuilder.buildManagedBean(ManagedBeanBuilder.java:211)\n\tat org.apache.myfaces.el.unified.resolver.ManagedBeanResolver.createManagedBean(ManagedBeanResolver.java:332)\n\tat org.apache.myfaces.el.unified.resolver.ManagedBeanResolver.getValue(ManagedBeanResolver.java:295)\n\tat javax.el.CompositeELResolver.getValue(CompositeELResolver.java:67)\n\tat org.apache.myfaces.el.unified.resolver.FacesCompositeELResolver.getValue(FacesCompositeELResolver.java:142)\n\tat org.apache.myfaces.el.VariableResolverImpl.resolveVariable(VariableResolverImpl.java:65)\n\tat org.apache.myfaces.el.convert.VariableResolverToELResolver.getValue(VariableResolverToELResolver.java:116)\n\tat javax.el.CompositeELResolver.getValue(CompositeELResolver.java:67)\n\tat org.apache.myfaces.el.unified.resolver.FacesCompositeELResolver.getValue(FacesCompositeELResolver.java:142)\n\tat org.apache.el.parser.AstIdentifier.getValue(AstIdentifier.java:71)\n\tat org.apache.el.parser.AstValue.getValue(AstValue.java:147)\n\tat org.apache.el.ValueExpressionImpl.getValue(ValueExpressionImpl.java:189)\n\tat com.sun.facelets.el.TagValueExpression.getValue(TagValueExpression.java:71)\n\tat org.apache.myfaces.application.ApplicationImpl.createComponent(ApplicationImpl.java:433)\n\tat com.sun.facelets.tag.jsf.ComponentHandler.createComponent(ComponentHandler.java:224)\n\tat com.sun.facelets.tag.jsf.ComponentHandler.apply(ComponentHandler.java:139)\n\tat com.sun.facelets.tag.jsf.ComponentHandler.applyNextHandler(ComponentHandler.java:314)\n\tat com.sun.facelets.tag.jsf.ComponentHandler.apply(ComponentHandler.java:169)\n\tat com.sun.facelets.tag.CompositeFaceletHandler.apply(CompositeFaceletHandler.java:47)\n\tat com.sun.facelets.tag.jsf.ComponentHandler.applyNextHandler(ComponentHandler.java:314)\n\tat com.sun.facelets.tag.jsf.ComponentHandler.apply(ComponentHandler.java:169)\n\tat com.sun.facelets.tag.CompositeFaceletHandler.apply(CompositeFaceletHandler.java:47)\n\tat com.sun.facelets.tag.jsf.ComponentHandler.applyNextHandler(ComponentHandler.java:314)\n\tat com.sun.facelets.tag.jsf.ComponentHandler.apply(ComponentHandler.java:169)\n\tat com.sun.facelets.tag.CompositeFaceletHandler.apply(CompositeFaceletHandler.java:47)\n\tat com.sun.facelets.tag.jsf.ComponentHandler.applyNextHandler(ComponentHandler.java:314)\n\tat com.sun.facelets.tag.jsf.ComponentHandler.apply(ComponentHandler.java:169)\n\tat com.sun.facelets.tag.CompositeFaceletHandler.apply(CompositeFaceletHandler.java:47)\n\tat com.sun.facelets.tag.ui.DefineHandler.applyDefinition(DefineHandler.java:64)\n\tat com.sun.facelets.tag.ui.CompositionHandler.apply(CompositionHandler.java:131)\n\tat com.sun.facelets.impl.DefaultFaceletContext$TemplateManager.apply(DefaultFaceletContext.java:337)\n\tat com.sun.facelets.impl.DefaultFaceletContext.includeDefinition(DefaultFaceletContext.java:307)\n\tat com.sun.facelets.tag.ui.InsertHandler.apply(InsertHandler.java:68)\n\tat com.sun.facelets.tag.CompositeFaceletHandler.apply(CompositeFaceletHandler.java:47)\n\tat com.sun.facelets.compiler.NamespaceHandler.apply(NamespaceHandler.java:49)\n\tat com.sun.facelets.tag.CompositeFaceletHandler.apply(CompositeFaceletHandler.java:47)\n\tat com.sun.facelets.compiler.EncodingHandler.apply(EncodingHandler.java:25)\n\tat com.sun.facelets.impl.DefaultFacelet.include(DefaultFacelet.java:248)\n\tat com.sun.facelets.impl.DefaultFacelet.include(DefaultFacelet.java:294)\n\tat com.sun.facelets.impl.DefaultFacelet.include(DefaultFacelet.java:273)\n\tat com.sun.facelets.impl.DefaultFaceletContext.includeFacelet(DefaultFaceletContext.java:140)\n\tat com.sun.facelets.tag.ui.CompositionHandler.apply(CompositionHandler.java:113)\n\tat com.sun.facelets.compiler.NamespaceHandler.apply(NamespaceHandler.java:49)\n\tat com.sun.facelets.compiler.EncodingHandler.apply(EncodingHandler.java:25)\n\tat com.sun.facelets.impl.DefaultFacelet.apply(DefaultFacelet.java:95)\n\tat com.sun.facelets.FaceletViewHandler.buildView(FaceletViewHandler.java:524)\n\tat com.sun.facelets.FaceletViewHandler.renderView(FaceletViewHandler.java:567)\n\tat org.ajax4jsf.application.ViewHandlerWrapper.renderView(ViewHandlerWrapper.java:100)\n\tat org.ajax4jsf.application.AjaxViewHandler.renderView(AjaxViewHandler.java:176)\n\tat org.apache.myfaces.lifecycle.RenderResponseExecutor.execute(RenderResponseExecutor.java:85)\n\tat org.apache.myfaces.lifecycle.LifecycleImpl.render(LifecycleImpl.java:239)\n\tat javax.faces.webapp.FacesServlet.service(FacesServlet.java:191)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:304)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)\n\tat org.ajax4jsf.webapp.BaseXMLFilter.doXmlFilter(BaseXMLFilter.java:206)\n\tat org.ajax4jsf.webapp.BaseFilter.handleRequest(BaseFilter.java:290)\n\tat org.ajax4jsf.webapp.BaseFilter.processUploadsAndHandleRequest(BaseFilter.java:388)\n\tat org.ajax4jsf.webapp.BaseFilter.doFilter(BaseFilter.java:515)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:224)\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:169)\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:472)\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:168)\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:100)\n\tat org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:929)\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:118)\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:405)\n\tat org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:964)\n\tat org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:515)\n\tat org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor.run(JIoEndpoint.java:302)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)\n\tat java.lang.Thread.run(Thread.java:662)", "id": 150668, "time": "2011-10-17T16:03:03Z", "bug_id": 52042, "creation_time": "2011-10-17T16:03:03Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 52042, "attachment_id": null, "id": 150669, "time": "2011-10-17T16:40:14Z", "creator": "markt@apache.org", "creation_time": "2011-10-17T16:40:14Z", "is_private": false, "text": "OK. Looks like the problem isn't the WeakReference but that the fields of a class which are cached using soft references. There is a chance that a GC run could clear the soft references which would then make the weak references eligible for GC too.\n\nIt looks like we'll need to revisit the annotation cache implementation."}, {"count": 4, "tags": [], "text": "This error is actually most likely triggered by a simple threading bug.\n\nHowever, there are differences between how the cache is intended to behave and how it is actually implemented. Reconciling these differences is not trivial. I'm currently working on a fix.", "attachment_id": null, "id": 150712, "creator": "markt@apache.org", "time": "2011-10-18T13:25:31Z", "bug_id": 52042, "creation_time": "2011-10-18T13:25:31Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 52042, "attachment_id": null, "id": 150747, "time": "2011-10-19T09:32:43Z", "creator": "markt@apache.org", "creation_time": "2011-10-19T09:32:43Z", "is_private": false, "text": "Thanks for the report. I have fixed this and the additional errors I discovered while investigating this issue. The fix has been applied to trunk (8.0.x) and 7.0.x and will be included in 7.0.23 onwards."}]