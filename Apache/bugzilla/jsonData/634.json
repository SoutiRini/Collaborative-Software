[{"count": 0, "tags": [], "creator": "jb@jbingham.com", "text": "When a jsp tag has the form\n\n  <myPrefix:myTag buggyProperty=\"foo\" />\n\nand \"buggyProperty\" is defined in the Jsp custom tag as:\n\n  public void setBuggyProperty(Object o)\n\na String value, such as \"foo\", will be rejected as a valid argument, with the \nerror message jsp.error.unable.to_convert_string.\n\nObviously a String can be passed as an Object. No casting or conversion is \nrequired. \n\nAn object-valued property is extremely useful (at least to me) as it allows \ntags to accept generic objects without having to define multiple property names \nfor every type. And for whatever reason the bean introspector in the JDK screws \nup on overloaded properties. (That would be easy enough to fix with ironically, \nan overloaded method, such as getWriteMethod(String propertyName, Class c) or \ngetWriteMethod(String propToWrite, Object withThisValue). A simple enough thing \nto fix... But I digress.)\n\nFor jasper, the fix is really easy. Simply change the first lines of \nTagBeginGenerator.convertString. Instead of\n  \n  if(c == String.class) {\n    return writer.quoteString(s);\n  }\n\nmake it\n\n  if(c == String.class || c == Object.class) {\n    return writer.quoteString(s);\n  }\n\nNow Strings are successfully \"converted\" to Objects.\n\nCheers and thanks and I love Tomcat and I would be very happy if I don't have \nto change my custom tags :^)\n\n- Jonathan", "id": 749, "time": "2001-02-17T21:52:26Z", "bug_id": 634, "creation_time": "2001-02-17T21:52:26Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "creator": "marc.saegesser@apropos.com", "text": "Won't make it into 3.2.2 but will be considered for a later release.", "id": 1446, "time": "2001-03-20T10:33:47Z", "bug_id": 634, "creation_time": "2001-03-20T10:33:47Z", "is_private": false, "attachment_id": null}]