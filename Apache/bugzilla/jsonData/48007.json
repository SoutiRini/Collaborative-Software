[{"count": 0, "tags": [], "bug_id": 48007, "text": "We're using the FileStore to make sessions persistent. Sessions are serialized correctly, but every minute or so we get an exception like the following:\n\nSEVERE: Session: 6D026DD0479F48B331D28EE8325095BB;\njava.lang.ClassNotFoundException: com.whatever.spikes.session.CustomClass\n       at java.net.URLClassLoader$1.run(URLClassLoader.java:200)\n       at java.security.AccessController.doPrivileged(Native Method)\n       at java.net.URLClassLoader.findClass(URLClassLoader.java:188)\n       at java.lang.ClassLoader.loadClass(ClassLoader.java:319)\n       at java.lang.ClassLoader.loadClass(ClassLoader.java:254)\n       at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:399)\n       at java.lang.Class.forName0(Native Method)\n       at java.lang.Class.forName(Class.java:247)\n       at java.io.ObjectInputStream.resolveClass(ObjectInputStream.java:604)\n       at org.apache.catalina.util.CustomObjectInputStream.resolveClass(CustomObjectInputStream.java:78)\n       at java.io.ObjectInputStream.readNonProxyDesc(ObjectInputStream.java:1575)\n       at java.io.ObjectInputStream.readClassDesc(ObjectInputStream.java:1496)\n       at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1732)\n       at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)\n       at java.io.ObjectInputStream.readObject(ObjectInputStream.java:351)\n       at org.apache.catalina.session.StandardSession.readObject(StandardSession.java:1407)\n       at org.apache.catalina.session.StandardSession.readObjectData(StandardSession.java:931)\n       at org.apache.catalina.session.FileStore.load(FileStore.java:296)\n       at org.apache.catalina.session.StoreBase.processExpires(StoreBase.java:194)\n       at org.apache.catalina.session.PersistentManagerBase.processExpires(PersistentManagerBase.java:553)\n       at org.apache.catalina.session.ManagerBase.backgroundProcess(ManagerBase.java:664)\n       at org.apache.catalina.core.ContainerBase.backgroundProcess(ContainerBase.java:1285)\n       at org.apache.catalina.core.ContainerBase$ContainerBackgroundProcessor.processChildren(ContainerBase.java:1570)\n       at org.apache.catalina.core.ContainerBase$ContainerBackgroundProcessor.processChildren(ContainerBase.java:1579)\n       at org.apache.catalina.core.ContainerBase$ContainerBackgroundProcessor.processChildren(ContainerBase.java:1579)\n       at org.apache.catalina.core.ContainerBase$ContainerBackgroundProcessor.run(ContainerBase.java:1559)\n       at java.lang.Thread.run(Thread.java:637)\n\nThis doesn't happen if we put CustomClass in $CATALINA_HOME/shared/lib or $CATALINA_HOME/shared/classes\n\nConfiguration:\n<Context path=\"/Spikes\" reloadable=\"true\" docBase=\"/Users/mman/Workspaces/Spikes\" workDir=\"/Users/mman/Workspaces/Spikes/work\" >\n       <Manager className=\"org.apache.catalina.session.PersistentManager\" maxIdleBackup=\"0\" >\n               <Store className=\"org.apache.catalina.session.FileStore\" directory=\"/Users/mman/tmp/tomcat-sessions\"/>\n         </Manager>\n</Context>\n\nEnvironment:\n*) Mac OS/X 10.6.1\n*) JDK 1.6.0_15\n*) Tomcat 5.5.27", "id": 131157, "time": "2009-10-15T14:55:33Z", "creator": "mmalaidini@gmail.com", "creation_time": "2009-10-15T14:55:33Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 48007, "text": "Check thread http://marc.info/?l=tomcat-user&m=125553788214052&w=2 at tomcat-user", "id": 131158, "time": "2009-10-15T14:57:18Z", "creator": "mmalaidini@gmail.com", "creation_time": "2009-10-15T14:57:18Z", "is_private": false, "attachment_id": null}, {"count": 2, "attachment_id": null, "creator": "kserwin@hotmail.co.uk", "text": "Same behavior observed when using tomcat 6.0.14 and 6.0.20.\nIs there any workaround for this problem?", "id": 131576, "time": "2009-11-02T08:38:30Z", "bug_id": 48007, "creation_time": "2009-11-02T08:38:30Z", "tags": [], "is_private": false}, {"count": 3, "tags": [], "text": "Correcting version as per issue description", "attachment_id": null, "id": 133557, "creator": "markt@apache.org", "time": "2010-01-12T14:51:52Z", "bug_id": 48007, "creation_time": "2010-01-12T14:51:52Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 48007, "text": "This works for me with a simple test web application.\n\nRe-reading your description and the users thread, it suggests the object has been created in one application but is being read by another. This is not a valid use case. This would explain why using the shared class loader allows this to work.\n\nIf this isn't your use case, please feel free to re-open this bug and attach the simplest possible web application (with source) that demonstrates the issue so it can be investigated further.", "id": 134140, "time": "2010-02-02T07:06:23Z", "creator": "markt@apache.org", "creation_time": "2010-02-02T07:06:23Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 48007, "attachment_id": null, "id": 134143, "time": "2010-02-02T07:41:12Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2010-02-02T07:41:12Z", "is_private": false, "text": "Are you running with a SecurityManager enabled?\n\nNote, that\n1. org.apache.catalina.util.CustomObjectInputStream.resolveClass(..)\ndoes two attempts to load a class.\n\nFirst with webapp classloader, then with some other classloader (see ObjectInputStream.resolveClass(...), ObjectInputStream.latestUserDefinedLoader()).\n\nThe exception that is logged comes from the second attempt.\n\n2. webapp classloader throws ClassNotFoundException when java.security.AccessControlException is encountered when loading a class"}, {"count": 6, "tags": [], "bug_id": 48007, "text": "I changed exception handling in CustomObjectInputStream#resolveClass(..) in trunk r920912 and proposed for 6.0 and 5.5.\nIf you will be able to reproduce this issue, please let us know.", "id": 135205, "time": "2010-03-09T15:20:55Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2010-03-09T15:20:55Z", "is_private": false, "attachment_id": null}, {"count": 7, "tags": [], "bug_id": 48007, "attachment_id": null, "id": 135254, "time": "2010-03-10T22:29:04Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2010-03-10T22:29:04Z", "is_private": false, "text": "Exception handling fix applied to 5.5, will be in 5.5.29 onwards."}, {"count": 8, "tags": [], "bug_id": 48007, "text": "I came across the code change for this (http://svn.apache.org/viewvc?view=revision&revision=920912) doing some pre-upgrade analysis and am wondering what information from the first exception (that was being hidden until this change) was more useful than the secondary exception?  We've got a similar class in our application to accomplish the same basic goal and are considering doing the same fix to our class but want to understand the benefit/impact a little more.\n\nThe community might benefit from this info being attached to this record as well (thus I'm posting here rather than in a forum area).\n\nThanks!", "id": 139084, "time": "2010-08-13T10:25:44Z", "creator": "scott.hamilton@plateau.com", "creation_time": "2010-08-13T10:25:44Z", "is_private": false, "attachment_id": null}]