[{"count": 0, "attachment_id": 26903, "creator": "kasala.asha@gmail.com", "text": "Created attachment 26903\nInput excel sheet\n\nResults - \nExcel2002/2003       \uff1a 0, 0, -\nExcel2007            : 0, 0, - \n(If you save the spreadsheet after open it, the data is saved  correctly.[Year,principal,Year-principal])\nExcel2007 SP2    : Year,principal,Year-principal\n\n\nimport org.apache.poi.hssf.usermodel.HSSFOptimiser;\nimport org.apache.poi.hssf.usermodel.HSSFSheet;\nimport org.apache.poi.hssf.usermodel.HSSFWorkbook;\nimport org.apache.poi.ss.usermodel.*;\n\n\nimport java.io.*;\n\n\npublic class ExcelTest {\n\n    public static void main(String[] args) throws Exception\n    {\n        try{\n            InputStream inp = new FileInputStream(\"C:\\\\Guesstimate.xls\");\n            Workbook workbook = WorkbookFactory.create(inp);\n            int sheetnumber = workbook.getSheetIndex(\"data\");\n            Sheet sheet = workbook.getSheetAt(sheetnumber);\n            setCellValue(workbook,sheet,\"Year\", 1, 1);\n            writeExcel(\"C:\\\\guesstimateSup.xls\",workbook,sheetnumber,\"data\",null,true);\n        }\n        catch(Exception e)\n        {\n            throw e;\n        }\n\n    }\n\npublic static void setCellValue(Workbook workbook,Sheet sheet1,String value,int row,int column) throws Exception\n    {\n\n        try\n        {\n            Workbook book = workbook;\n            CreationHelper createHelper = book.getCreationHelper();\n            Sheet sheet = sheet1;\n\n            Row hssfrow = sheet.getRow(row-1);\n\n            if (hssfrow == null)\n            {\n                hssfrow = sheet.createRow(row-1);\n            }\n\n            Cell c  = hssfrow.getCell(column-1);\n            CellStyle style= null;\n\n            if (c != null)\n            {\n                style = c.getCellStyle()!=null?c.getCellStyle():null;\n                hssfrow.removeCell(c);\n            }\n            c = hssfrow.createCell(column-1);\n             if (style !=null )\n                    c.setCellStyle(style);\n            try\n            {\n                if (style!=null && style.getDataFormatString().equalsIgnoreCase(\"@\"))\n                    setCellStringValue(sheet,c,column,value,createHelper);\n                else\n                {\n                    double i = Double.parseDouble(value);\n                    c.setCellType(Cell.CELL_TYPE_NUMERIC);\n                    c.setCellValue(i);\n                }\n            }catch(NumberFormatException e)\n            {\n                setCellStringValue(sheet,c,column,value,createHelper);\n            }\n\n\n            // Add back the modified excel object.\n\n        }catch(Exception e)\n        {\n            throw e;\n        }\n\n    }\n\n    private static void setCellStringValue(Sheet sheet,Cell c,int column,String value,CreationHelper createHelper)\n    {\n        if (!value.equalsIgnoreCase(\"\"))\n        {\n            c.setCellType(Cell.CELL_TYPE_STRING);\n            RichTextString str  = createHelper.createRichTextString(value);\n            c.setCellValue(str);\n            int colwidth = sheet.getColumnWidth(column-1);\n            short len = (short)value.length();\n            len = (short)((len * 8) / (( double ) 1 / 20));\n            if (colwidth < len)\n            {\n                sheet.setColumnWidth(column - 1,len+1);\n            }\n        } else\n        {\n            c.setCellType(Cell.CELL_TYPE_BLANK);\n            c.setCellValue(createHelper.createRichTextString(\"\"));\n        }\n    }\n\n    public static void writeExcel(String xlsfile,Workbook book1,int sheetnumber1,String sheetname1,String password,boolean update) throws Exception\n        {\n            Workbook book = book1;\n            String sheetname = sheetname1;\n            int sheetnumber = sheetnumber1;\n            cleanStyles(book);\n            String action=\"write\";\n            if (book != null)\n            {\n                try\n                {\n                    // If we are adding to an existing workbook, Copy all sheets from the file and\n                    // add to the workbook created\n                        FileOutputStream out = null;\n                        try\n                        {\n                            if (!book.getSheetName(sheetnumber).equalsIgnoreCase(sheetname))\n                            {\n                                book.setSheetName(sheetnumber,sheetname);\n                            }\n\n                            // Set password if provided\n                            if (password != null)\n                            {\n                                Sheet sheet = book.getSheet(sheetname);\n                                if (book instanceof HSSFWorkbook)\n                                {\n                                    ((HSSFSheet)sheet).protectSheet(password);\n                                }\n                            }\n                            out = new FileOutputStream(xlsfile);\n                            book.write(out);\n\n                        }catch(IOException e)\n                        {\n                            throw e;\n                        }finally\n                        {\n                            if (out != null)\n                            {\n                                try\n                                {\n                                    out.close();\n                                }catch(Exception e)\n                                {\n                                    //ignore\n                                }\n                            }\n                        }\n\n                }catch(Exception e)\n                {\n                    throw e;\n                }\n\n\n            }\n\n        }\n\n    private static void cleanStyles(Workbook book)\n    {\n        if (book instanceof HSSFWorkbook && (book.getNumCellStyles() >= Short.MAX_VALUE || book.getNumCellStyles()<0))\n        {\n            try\n            {\n                HSSFOptimiser.optimiseFonts((HSSFWorkbook) book);\n                HSSFOptimiser.optimiseCellStyles((HSSFWorkbook)book);\n            }catch(Exception e)\n            {\n                //Ignore\n            }\n        }\n    }\n\n}", "id": 145848, "time": "2011-04-19T02:41:16Z", "bug_id": 51083, "creation_time": "2011-04-19T02:41:16Z", "tags": [], "is_private": false}, {"count": 1, "tags": [], "creator": "apache@gagravarr.org", "text": "What are you seeing, and what are you expecting to see?", "id": 145857, "time": "2011-04-19T07:24:31Z", "bug_id": 51083, "creation_time": "2011-04-19T07:24:31Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 51083, "text": "The following is the behaviour in different versions of Excel -\n\nExcel2002/2003       \uff1a 0, 0, -\n\nExcel2007            : 0, 0, - \n(If you save the spreadsheet after open it, the data is saved \ncorrectly.[Year,principal,Year-principal])\n\nExcel2007 SP2    : Year,principal,Year-principal\n\nWant to know if there is some issue with Excel or in POI because the same code works fine and shows Year,principal,Year-principal in excel2007 SP2(Macro works fine)", "id": 145979, "time": "2011-04-25T02:32:18Z", "creator": "kasala.asha@gmail.com", "creation_time": "2011-04-25T02:32:18Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "creator": "kasala.asha@gmail.com", "attachment_id": null, "text": "We are setting the cell in \"data\" sheet to \"Year\" and cell in \"deputation\" sheet to \"principal\" .\"guesstimate\" sheet has macro defined which should show \nYear,principal,Year-principal but it doesnt show in Excel versions 2002/2003,2007   but works fine in Excel 2007 SP2", "id": 145981, "time": "2011-04-25T03:22:59Z", "bug_id": 51083, "creation_time": "2011-04-25T03:22:59Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 51083, "text": "No progress in several years. Please reopen if you can provide a patch.\n\nI don't have access to the older versions of Excel, so I cannot test this. It may be a bug in the Excel application itself. Either way, it would be difficult to test this or prove that POI does or does not create a valid file because the BIFF format is not an open specification like OOXML.\n\nTry using the latest version of POI (3.14), which may include fixes that solve your problem.", "id": 189980, "attachment_id": null, "creator": "onealj@apache.org", "creation_time": "2016-04-05T16:54:30Z", "time": "2016-04-05T16:54:30Z", "is_private": false}]