[{"count": 0, "text": "classpath uses colon, \":\", as path separator under windows\n\nfor example the following:\n\n<echo message=\"cp = ${run.classpath}\"/>\n<echo message=\"separator = ${path.separator}\"/>\n\nproduces:\n\ncp = C:\\lejos.3.0.0\\lib\\classes.jar:C:\\lejos.3.0.0\\lib\\rcxcomm.jar:build/classes\nseparator = ;\n\nin general, under windows both java and javac accept the colon but I am running\ntinyvm and it does not.", "creator": "wjr@ksu.edu", "is_private": false, "id": 92372, "time": "2006-08-21T17:10:03Z", "bug_id": 40291, "creation_time": "2006-08-21T17:10:03Z", "tags": [], "attachment_id": null}, {"count": 1, "tags": [], "text": "Well what defined ${run.classpath}? And how is tinyvm invoked from Ant that the\npath separator is not converted to native format? Need a complete build script\nto diagnose.", "attachment_id": null, "bug_id": 40291, "id": 92438, "time": "2006-08-22T23:46:42Z", "creator": "jglick@apache.org", "creation_time": "2006-08-22T23:46:42Z", "is_private": false}, {"count": 2, "tags": [], "text": "Created attachment 18744\nbuild file for project\n\nthe project build.xml where the overrides are entered", "is_private": false, "bug_id": 40291, "id": 92445, "time": "2006-08-23T01:43:33Z", "creator": "wjr@ksu.edu", "creation_time": "2006-08-23T01:43:33Z", "attachment_id": 18744}, {"attachment_id": 18745, "tags": [], "bug_id": 40291, "text": "Created attachment 18745\nnetbeans build file for proejct\n\ncontains all targets; generated by netbeans", "count": 3, "id": 92446, "time": "2006-08-23T01:44:33Z", "creator": "wjr@ksu.edu", "creation_time": "2006-08-23T01:44:33Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 40291, "attachment_id": null, "is_private": false, "id": 92453, "time": "2006-08-23T09:27:44Z", "creator": "stevel@apache.org", "creation_time": "2006-08-23T09:27:44Z", "text": "Ant does allow : as a path separator in a spec string, how else would we be\ncross platform? We do, however, downconver it to the platform specific value at\nruntime, with special handling for c: paths on windows, and something else on\nnetware.\n\nBut remember that everything is a string unless ant knows to convert it to a\nnative platform. So if you work in the string-space, ant is not going to do any\nwork. This is what you are doing with your args to tinyvm\n\n<arg value=\"-cp\"/>\n<arg value=\"C:\\lejos.3.0.0-M4\\classes\\lejosrt.jar;build/classes\"/>\n\nyou should use\n\n<arg path=\"C:\\lejos.3.0.0-M4\\classes\\lejosrt.jar;build/classes\"/>\n\nto get stuff converted.\n\nTry this, if the problem goes away, please mark the bug as invalid."}, {"count": 5, "text": "Using <arg path=... /> does not help.\n\nAlso, the comment about being platform independent doesn't make sense to me.\nSomething, and it appears to be ant since it happens when I run from the command\nline, is concatenating the path on the fly. Why shouldn't it just use\n${path.separator} when it creates the path instead of doing a string.replace()\nlater on, especially since msdos uses \":\" for a second purpose. As for a\nprogrammer using a literal instead of the symbolic parameter, they should be\nshot (nb, I had to convert a large Java app that used \"\\\" in file names to run\non linux -- it ain't fun when it could have been done right to begin with).", "creator": "wjr@ksu.edu", "attachment_id": null, "id": 92484, "time": "2006-08-24T05:15:45Z", "bug_id": 40291, "creation_time": "2006-08-24T05:15:45Z", "tags": [], "is_private": false}, {"count": 6, "tags": [], "bug_id": 40291, "text": ">As for a\n>programmer using a literal instead of the symbolic parameter, they should be\n>shot (nb, I had to convert a large Java app that used \"\\\" in file names to run\n>on linux -- it ain't fun when it could have been done right to begin with).\n\nArguably its a fault in the java runtime for not doing the conversion for us.\nAfter all, in C/C++ code on windows, you can still go #include\n\"../dir/something.h\" and have it handled properly.\n\nIn an ant build file, you can normally use either definition and get away with\nit, because nobody wants to go\n\n<delete file=\"..${file.separator}..${file.separator}test.jar\" />", "id": 92485, "time": "2006-08-24T10:12:02Z", "creator": "stevel@apache.org", "creation_time": "2006-08-24T10:12:02Z", "is_private": false, "attachment_id": null}, {"count": 7, "tags": [], "bug_id": 40291, "text": "Where is \"run.classpath\" set ?\nIt is not set in the build file or the netbeans file.", "id": 92486, "time": "2006-08-24T10:58:28Z", "creator": "peterreilly@apache.org", "creation_time": "2006-08-24T10:58:28Z", "is_private": false, "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 40291, "text": "Ok, I have figured it out (I think)\nrun.classpath is a property set by netbeans.\nIt is ':' seperated.\nOne can convert this to native seperation by:\n\n<pathconvert pathsep=\"${path.separator}\"\n             property=\"run.classpath.converted\">\n    <path path=\"${run.classpath}\"/>\n</pathconvert>\n\n<echo>${run.classpath.converted}</echo>\nThis is still a string and thus will have issues with spaces\netc.\n", "count": 8, "id": 92489, "time": "2006-08-24T11:31:59Z", "creator": "peterreilly@apache.org", "creation_time": "2006-08-24T11:31:59Z", "is_private": false}]