[{"count": 0, "tags": [], "creator": "plesser@ucs.at", "attachment_id": null, "id": 9794, "time": "2002-01-22T14:48:38Z", "bug_id": 5957, "creation_time": "2002-01-22T14:48:38Z", "is_private": false, "text": "If a filter is installed that wraps the response in a ServletResponseWrapper\njsp:include does work, but not using a RequestDispatcher's include()-method \nfrom either a servlet or a jsp. The result are empty pages.\nI think the org.apache.catalina.core.ApplicationDispatcher and its re-wrapping \nof responses is the cause, using the setResponse(..) method on 'my' wrapper and \nwriting it to its encapsulated response object rather than its outputStream.\nFor a short example please send me an email and i'll mail it to you."}, {"count": 1, "attachment_id": 1050, "bug_id": 5957, "is_private": false, "id": 9795, "time": "2002-01-22T14:57:17Z", "creator": "plesser@ucs.at", "creation_time": "2002-01-22T14:57:17Z", "tags": [], "text": "Created attachment 1050\ndemo of this bug, go to localhost:8080/rdbug/incl.jsp and watch the console"}, {"count": 2, "tags": [], "bug_id": 5957, "attachment_id": null, "id": 10003, "time": "2002-01-29T04:04:19Z", "creator": "craig.mcclanahan@sun.com", "creation_time": "2002-01-29T04:04:19Z", "is_private": false, "text": "Thanks for the test case!  On initial analysis, it appears to me that this might \nbe an application error, rather than a Tomcat problem.  Here's my reasoning:\n\n* Your filter creates a wrapper that creates a custom ServletOutputStream,\n  which in turn creates a DataOutputStream around the underlying \"real\" stream.\n\n* When your application calls response.flushBuffer(), the wrapper calls\n  super.flushBuffer() on the parent wrapper, but it does *not* call\n  output.flush() on the custom ServletResponseStream.\n\n* Therefore, any data inside the DataOutputStream will be omitted.\n\nDoes this make sense, or am I missing something?\n\n"}, {"count": 3, "tags": [], "text": "Thanks for your response Craig, but unfortunately this fix does not solve the\nproblem.\nThe output generated is still the same and as another side-effect the browser (I\nuse Galeon) keeps on loading 'forever' - it did prior to this fix as well, but i\nforgot to mention.\nI tested your proposed fix under Apache Tomcat/4.0.2-b2 btw.", "is_private": false, "bug_id": 5957, "id": 10020, "time": "2002-01-29T16:44:44Z", "creator": "plesser@ucs.at", "creation_time": "2002-01-29T16:44:44Z", "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 5957, "text": "Note: The current HTTP connector does not fully enforce the HTTP/1.1 protocol,\nso if you do something bad, it will do something like what you describe (for\nexample, you could set the content-length, and then write fewer bytes than what\nhas been advertised).", "id": 10024, "time": "2002-01-29T16:53:23Z", "creator": "remm@apache.org", "creation_time": "2002-01-29T16:53:23Z", "is_private": false, "attachment_id": null}, {"count": 5, "attachment_id": null, "creator": "plesser@ucs.at", "is_private": false, "id": 10026, "time": "2002-01-29T17:11:22Z", "bug_id": 5957, "creation_time": "2002-01-29T17:11:22Z", "tags": [], "text": "Remy,\nThank you for your comment. This is indeed 1.1 related and does not occur using\nthe 1.0 protocol.\nIn this case the wrapper's setContentLength()-method is never called and\ngetContentLength() always returns 0.\nI do not know if i made a programming error here or if this is maybe another bug\nthat setContentLength() is never called on the wrapper?\n"}, {"count": 6, "tags": [], "creator": "plesser@ucs.at", "text": "I might add the 'load-forever' is HTTP/1.1 related, the wrapped response is\nstill not included using RequestDispatcher.include()", "id": 10027, "time": "2002-01-29T17:21:21Z", "bug_id": 5957, "creation_time": "2002-01-29T17:21:21Z", "is_private": false, "attachment_id": null}, {"count": 7, "tags": [], "creator": "remm@apache.org", "attachment_id": null, "id": 10028, "time": "2002-01-29T17:27:47Z", "bug_id": 5957, "creation_time": "2002-01-29T17:27:47Z", "is_private": false, "text": "Ok, then I think it's a problem with your filter (whatever the problem may be).\nIs the response really ok with HTTP/1.0 ?\nIt could look ok in the browser, while being invalid for a variety of reasons,\nand could cause the connector to misbehave.\nWhile the new HTTP/1.1 connector will be more robust, you should try to see if\nthe response you're sending is correct (I really think it's not).\nIf you're not sure, you can try doing a telnet and attaching the full response\nto the bug, so that I can see what's happening.\n"}, {"text": "Well yes i am not sure thus the telnet approach :)\nI hope i sent the request correct since i never did it 'by hand' before, but\nhere goes:\n\nplesser@voyager:~$ telnet localhost 8080\nTrying 127.0.0.1...\nConnected to localhost.\nEscape character is '^]'.\nGET /rdbug/incl.jsp HTTP/1.0\n\nHTTP/1.1 200 OK\nContent-Type: text/html;charset=ISO-8859-1\nDate: Tue, 29 Jan 2002 17:37:00 GMT\nServer: Apache Tomcat/4.0.2-b2 (HTTP/1.1 Connector)\nSet-Cookie: JSESSIONID=8BF7D2ADB156334B06AE69011CF789F7;Path=/rdbug\n\nThis page *should* be including test.jsp<br>\nOutput generated from test.jsp!\n\n<br>back in incl.jsp<br>\nIncluding again using a RequestDispatcher...<br>\n\n<br>-done\nConnection closed by foreign host.\nplesser@voyager:~$ \nplesser@voyager:~$ telnet localhost 8080\nTrying 127.0.0.1...\nConnected to localhost.\nEscape character is '^]'.\nGET /rdbug/incl.jsp HTTP/1.1\n\nHTTP/1.1 400 HTTP/1.1 request with no Host: header\nContent-Type: text/html\nDate: Tue, 29 Jan 2002 17:37:51 GMT\nServer: Apache Tomcat/4.0.2-b2 (HTTP/1.1 Connector)\nConnection: close\n\nConnection closed by foreign host.\nplesser@voyager:~$", "tags": [], "creator": "plesser@ucs.at", "attachment_id": null, "count": 8, "id": 10029, "time": "2002-01-29T17:39:51Z", "bug_id": 5957, "creation_time": "2002-01-29T17:39:51Z", "is_private": false}, {"count": 9, "tags": [], "text": "I think I've found the problem in the filter. In EFResponseWrapper.java, \nflushBuffer() calls super.flushBuffer(). With this call in place, the following \nhappens:\n\n1. incl.jsp is processed and test.jsp gets included correctly (both via \n<jsp:include> and RequestDispatcher)\n\n2. Tomcat calls flushBuffer() on the response which gets forwarded to the \noriginal response. This commits the response (all headers are sent to the \nclient).\n\n3. EntryFilter tries to set the content length, but the (wrong) length has \nalready been sent to the client. This seems to cause the strange \"loading \nforever\" behaviour.\n\nThe obvious solution is to remove the super.flushBuffer() call in \nEFResponseWrapper. However, there is one more thing you have to change to make \nit work: Both the including and the included jsp call getWriter(), and \nEFResponseWrapper creates a new PrintWriter for both calls. Without the \nsuper.flushBuffer() call, only one of these gets flushed (in this case, the one \nof the including JSP).\n\nThe solution is simple: Make sure you only construct one PrintWriter and \nEFServletOutputStream and return these on every getWriter()/getOutputStream() \ncall.\n\nYour example works as soon as both issues are fixed (tested it with my Tomcat \n4.0.1 final). The only remaining problem is that the output of the included JSP \nis put _before_ the contents of the including JSP. This is no bug, but a \ngeneral JSP/RequestDispatcher problem. If you need help with this, you can send \nme eMail directly (this is a user question and should not be discussed on \ntomcat-dev; however, I don't read tomcat-user).\n\nI'm closing this bug as \"invalid\" since the error is in the test case. I hope \nthat's OK - if not, please reopen.", "is_private": false, "id": 10068, "creator": "Andreas.Junghans@fh-karlsruhe.de", "time": "2002-01-30T10:20:15Z", "bug_id": 5957, "creation_time": "2002-01-30T10:20:15Z", "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 5957, "text": "To Markus:\nWhen you do it by hand with HTTP/1.1, you have to specify a host header with\nsome kind of value.\nLike:\nHost: foobar\n\nTo Andreas:\nThanks for the explanation about how the filter could be invalid.\nAs I said, the current HTTP/1.1 connector does not bahave well in many cases.", "count": 10, "id": 10069, "time": "2002-01-30T10:44:18Z", "creator": "remm@apache.org", "creation_time": "2002-01-30T10:44:18Z", "is_private": false}]