[{"count": 0, "tags": [], "bug_id": 56619, "attachment_id": null, "id": 175797, "time": "2014-06-13T05:33:53Z", "creator": "trejkaz@trypticon.org", "creation_time": "2014-06-13T05:33:53Z", "is_private": false, "text": "When tarring up files which are already all in the right location, we can use <tarfileset filemode=\"755\"> to make certain parts executable.\n\n    <tar destfile=\"${tar.name}\" compression=\"bzip2\">\n        <tarfileset dir=\"${dir}\" filemode=\"755\">\n            <patternset refid=\"executable-files\"/>\n        </tarfileset>\n        <tarfileset dir=\"${dir}\" >\n            <patternset refid=\"non-executable-files\"/>\n        </tarfileset>\n    </tar>\n\nHowever, having to copy all the files into one location just to tar them again adds noticeable build time (the tar file is about 200 MB) so in cases where executable flags don't matter, we do something like this:\n\n    <union id=\"included.files.common\">\n        <fileset dir=\"${our.jars.dir}\" includes=\"*.jar\"/>\n    </union>\n    <union id=\"included.files.app\">\n        <fileset dir=\"src/app-base\" includes=\"bin/*\"/>\n    </union>\n\n    <tar destfile=\"${tar.name}\" compression=\"bzip2\">\n        <mappedresources>\n            <union>\n                <resources refid=\"included.files.common\"/>\n                <resources refid=\"included.files.app\"/>\n            </union>\n            <globmapper from=\"*\" to=\"${base-name}-${product.fullversion}/*\"/>\n        </mappedresources>\n    </tar>\n\nI would like to be able to combine the two approaches, so that I can keep the reuse and copy-avoiding benefits of using resource collections but also keep the ability top put specific permissions on the files.\n\nOne way to do this would be to add the filemode attribute to <fileset/>, something like this:\n\n    <union id=\"included.files.common\">\n        <fileset dir=\"${our.jars.dir}\" includes=\"*.jar\" filemode=\"755\"/>\n    </union>\n\nThe implementation would go something like this:\n\n   1. Move getMode() from ArchiveResource up to Resource.\n   2. Implement getMode() in any subclasses like FileResource. Some other\n      subclasses might also make sense to add this information to.\n   3. In any tasks casting to ArchiveResource, weaken the cast.\n\nThen any file modes at the lower levels of the resource collections would just propagate upwards and automatically work."}, {"count": 1, "tags": [], "bug_id": 56619, "attachment_id": null, "id": 175967, "time": "2014-06-22T09:33:14Z", "creator": "bodewig@apache.org", "creation_time": "2014-06-22T09:33:14Z", "is_private": false, "text": "with the changes you propose we wouldn't necessarily need to add mode to fileset as you could still use zio/tarfileset to add the mode.  In fact I think you'd probably even keep the mode through union (casting up to ArchiveResource) right now if you used tarfilesets to build up your union.  The point where you lose mode information is when mappedresources comes into the mix.\n\nIn addition to the changes you propose we'd also need to modify ResourceDecorator so the mode doesn't get lost.\n\nIf you look into the implementation of <tar> you'll see it also has TarFileSet hardcoded when it comes to overriding the mode of resources - <zip> and the compress antlib do better here, but they still special cases ArchiveFileSet.  In the end you'll probably want to add dir/filemode to ResourceCollection as well."}]