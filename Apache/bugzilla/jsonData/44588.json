[{"count": 0, "attachment_id": null, "bug_id": 44588, "is_private": false, "id": 114524, "time": "2008-03-12T06:19:09Z", "creator": "jsb_apache@360works.com", "creation_time": "2008-03-12T06:19:09Z", "tags": [], "text": "I'm using the deployment ant task to do a live deploy to our server at a colocation facility. It takes about 2 minutes to upload the application to the server. The application is down with a 404 (The requested resource (/) is not available) for that 2 minutes span. After the application finishes upload, the app reloads and works as expected.\n\nSince this application runs our main company web site, we want to minimize downtime. Is there a way that the deployer could upload the new app while the old one is still running, and then briefly take down the old site to reload the new one?"}, {"count": 1, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "text": "Not without a lot of re-work. The 'right' way to do this is with a simple cluster fronted by httpd. The sequence is then:\n- disable Tomcat A\n- wait for requests to finish on A\n- upgrade A\n- enable A\n- disable B\n- wait for requests to finish on B\n- upgrade B\n- enable B\n\nYou can do all of this on a single machine and you end up with zero down time.\n\nAsk on the users list of you need help settign this up.", "id": 114525, "time": "2008-03-12T06:36:22Z", "bug_id": 44588, "creation_time": "2008-03-12T06:36:22Z", "is_private": false}]