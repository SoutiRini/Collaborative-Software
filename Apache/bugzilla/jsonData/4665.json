[{"count": 0, "text": "First, I apologize my poor English.\n\nAs of Servlet API 2.3, ServletRequest has setCharacterEncoding( String ). What \nI tested under Turbin 2.1, which contains Tomcat 4.0, showed it fails to set a \ncharacter set properly.\n\nI digged down to parseParameters() in \norg.apache.catalina.connector.HttpRequestBase.java and found following code  \nreturns null so it seems always set encoding to \"ISO-8859-1\";\n\nString encoding = getCharacterEncoding();\n\nif (encoding == null)\n     encoding = \"ISO-8859-1\";\n\n\nIn my Jsp, I set explicit character encoding with Java directive <%@ page \ncontentType %> and request.setCharacterEncoding( String );\n\nMaybe Tomcat parses http parameters before it sets character encoding scheme?", "bug_id": 4665, "attachment_id": null, "id": 7570, "time": "2001-11-05T22:56:08Z", "creator": "mars@abcsolution.co.kr", "creation_time": "2001-11-05T22:56:08Z", "tags": [], "is_private": false}, {"count": 1, "text": "This feature has been fairly well tested, and appears to work ok. Could you be \nmore specific on what exactly is failing ?\nNote that the call will only set the character encoding on the request \nparameter parsing. It won't set the character encoding used for the response.\n\nThe code you quoted means that if you don't specify a character encoding (using \nsetCharacterEncoding), it will default to ISO-8859-1 (which is mandated by the \nHTTP specification).", "bug_id": 4665, "attachment_id": null, "id": 7572, "time": "2001-11-05T23:28:39Z", "creator": "remm@apache.org", "creation_time": "2001-11-05T23:28:39Z", "tags": [], "is_private": false}, {"count": 2, "attachment_id": null, "bug_id": 4665, "is_private": false, "id": 7575, "time": "2001-11-06T00:13:58Z", "creator": "mars@abcsolution.co.kr", "creation_time": "2001-11-06T00:13:58Z", "tags": [], "text": "Ok, I have a question. When does the following returns a value other than null \nwhich I mentioned earlier?\n\nString encoding = getCharacterEncoding();\n\nWhat I failed was to get a correct string value (in my case, Korean) from \nrequest.getParameter( String ) from what I passed. That's why I digged down to \norg.apache.catalina.connector.HttpRequestBase.java source code.\n\n"}, {"count": 3, "tags": [], "bug_id": 4665, "text": "If you call setCharacterEncoding with a valid character encoding name as the \nparameter, then getCharacterEncoding will return a non-null value.\n\nYou mean you have a problem with the parameter name encoding ? There is no \ncharacter encoding used in the parameter name.", "id": 7609, "time": "2001-11-06T09:33:05Z", "creator": "remm@apache.org", "creation_time": "2001-11-06T09:33:05Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "creator": "mars@abcsolution.co.kr", "attachment_id": null, "is_private": false, "id": 7621, "time": "2001-11-06T14:14:39Z", "bug_id": 4665, "creation_time": "2001-11-06T14:14:39Z", "text": "What setCharacterEncoding do you mean? As I said before, I have set Java \ndirective <%@ page contentType %>  and request.setCharacterEncoding( String ) \n(Surely with a valid value... )in my Jsp but the request.getParameter( String ) \ndidn't return correct parsed value of my language. All I got was a series of \nquestion marks that indicates incorrect String character set conversion.\n\nAgain....following code snippet from \norg.apache.catalina.connector.HttpRequestBase.java is the key to localizing \nparameter values. Then how can I get a value other than null(or as a \nresult \"ISO-8859-1\") for the variable encoding?\n\nString encoding = getCharacterEncoding();\n\nif (encoding == null)\n     encoding = \"ISO-8859-1\";\n"}, {"count": 5, "tags": [], "bug_id": 4665, "attachment_id": null, "text": "Using Request.setCharacterEncoding(String) with a valid character encoding name \nshould set the characterEncoding variable, so getCharacterEncoding would return \na non-null value.\n\nBefore filing a bug, it is sometimes best to investigate it on tomcat-user.", "id": 7624, "time": "2001-11-06T16:46:49Z", "creator": "remm@apache.org", "creation_time": "2001-11-06T16:46:49Z", "is_private": false}, {"count": 6, "text": "After reading your final message, I myself searched for a bug and I have found \nsome suspicious code.\n\nFrom right above the code snippet I mentioned from \norg.apache.catalina.connector.HttpRequestBase.java, we get the following code.\n\n    protected void parseParameters() {\n\n        if (parsed)\n            return;\n\n        ParameterMap results = parameters;\n        if (results == null)\n            results = new ParameterMap();\n        results.setLocked(false);\n\n        String encoding = getCharacterEncoding();\n        if (encoding == null)\n            encoding = \"EUC-KR\"; //ISO-8859-1\";\n\n        // Parse any parameters specified in the query string\n        String queryString = getQueryString();\n\nI am wondering If you are really sure that request.setCharacterEncoding() sets \na character set variable BEFORE the above parseParameter is ever be called. I \nfound request.setCharacterEncoding() is called AFTER the parseParameter is \ncalled.\n\nWhy? parseParameter is first called by request.getParameter( \"jsp_precompile\" ) \nand parameter parsing is not processed again by the code \"if ( parsed ) \nreturn; \".\n\nMaybe \"jsp_precompile\" is Tomcat specific parameter name? I don't know but it \nsure calls the parseParameter() BEFORE I call setCharacterEncoding() to set \ncharacter set of my own Jsp.\n\nEnough?\n", "bug_id": 4665, "is_private": false, "id": 7633, "time": "2001-11-06T21:39:20Z", "creator": "mars@abcsolution.co.kr", "creation_time": "2001-11-06T21:39:20Z", "tags": [], "attachment_id": null}, {"count": 7, "tags": [], "creator": "remm@apache.org", "is_private": false, "text": "Ok, I understand the problem better now. Indeed, in the situation you describe, \nparseParameters would be called before you can use setCharacterEncoding, which \nwould obviously make it fail.\n\nI don't think the most recent 4.0.x code does this (there's a comment about \nthat in the JspServlet class). This was fixed between 4.0 Beta 7 and 4.0 Final \n(revision 1.21 fixed it).\n\nSee that other bug for more details:\nhttp://nagoya.apache.org/bugzilla/show_bug.cgi?id=2469", "id": 7634, "time": "2001-11-06T21:56:26Z", "bug_id": 4665, "creation_time": "2001-11-06T21:56:26Z", "attachment_id": null}]