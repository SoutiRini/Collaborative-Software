[{"attachment_id": null, "tags": [], "bug_id": 13660, "text": "Attribute javax.servlet.request.cipher_suite is set on SSL connections. It \nused to be the case that you could see the name of this attribute when you \ncalled HttpServletRequest.getAttributeNames(). This no longer happens. Even \nthough the attribute has a value, it's name isn't returned when you call \nHttpServletRequest.getAttributeNames(). The following example demonstrates,\n\nimport java.io.*;\nimport java.util.*;\nimport javax.servlet.*;\nimport javax.servlet.http.*;\n\npublic class AttributesServlet extends HttpServlet {\n\tpublic void doGet(HttpServletRequest req, HttpServletResponse resp) \nthrows IOException {\n\t\ttry {\n\t\t\tresp.setContentType(\"text/html\");\n\t\t\tPrintWriter pw = resp.getWriter();\n\t\t\tpw.println\n(\"<html><head><title>AttributesServlet</title></head><body>\");\n\t\t\tEnumeration e = req.getAttributeNames();\n\t\t\twhile(e.hasMoreElements()) {\n\t\t\t\tString s = (String)e.nextElement();\n\t\t\t\tpw.println(\"<p>\" + s + \": \" + req.getAttribute\n(s) + \"</p>\");\n\t\t\t}\n\n\t\t\tpw.println(\"<p>\" + req.getAttribute\n(\"javax.servlet.request.cipher_suite\") + \"</p>\");\n\t\t\t\n\t\t\tpw.println(\"</body></html>\");\n\t\t\tpw.close();\n\t\t}\n\t\tcatch(Exception e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}", "count": 0, "id": 24556, "time": "2002-10-15T17:00:59Z", "creator": "jemiller@uchicago.edu", "creation_time": "2002-10-15T17:00:59Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 13660, "attachment_id": null, "is_private": false, "id": 24561, "time": "2002-10-15T17:11:19Z", "creator": "remm@apache.org", "creation_time": "2002-10-15T17:11:19Z", "text": "I have a feeling it has the same cause as bug 13658, and I would say it has been\nfixed since 4.1.12."}, {"attachment_id": null, "tags": [], "bug_id": 13660, "is_private": false, "count": 2, "id": 24602, "time": "2002-10-16T06:25:59Z", "creator": "william.barker@wilshire.com", "creation_time": "2002-10-16T06:25:59Z", "text": "\n\n*** This bug has been marked as a duplicate of 13658 ***"}]