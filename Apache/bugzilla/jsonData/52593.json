[{"count": 0, "tags": [], "bug_id": 52593, "attachment_id": null, "text": "+++ This bug was initially created as a clone of Bug #52547 +++\n\nThe originally described bug #52547 is fixed.\n\nBut there is a related bug described in my 2nd comment\nhttps://issues.apache.org/bugzilla/show_bug.cgi?id=52547#c2\n\n--------- copy below ------------\n\nAdditionally, I think there is a \"bug\" in that the recycle() happens\nimmediatley after the nextRequest() even when keepalive is true (I can see from\nan iptables log that the socket is not closed for another default 20 seconds).\n\nSee the event(...), asyncDispatch(...) and service(...) methods in\nhttp://svn.apache.org/repos/asf/tomcat/tc7.0.x/trunk/java/org/apache/catalina/connector/CoyoteAdapter.java\n\nBasically response.recycle() (when called because not dealing with async part\nof the request) calls outputBuffer.recycle() immediatley response processing is\nfinished rather than just before the socket is actually closed.\n\nSo in an http/1.1 multi request-response (without a socket close) you still get\nboth outputBuffer.nextRequest() and outputBuffer.recycle() called consecutvely\nat the end of each completed response process.\n\nI can see that nextRequest(), recycle() should both exist, but only if\nrecycle() really only happens at socket close as it's descriptive comment says.\nOtherwise it would be a (very minor) optimization to remove the (nearlly always\npresent) duplicate calls.", "id": 153411, "time": "2012-02-03T17:57:47Z", "creator": "davidw53@msn.com", "creation_time": "2012-02-03T17:57:47Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 52593, "attachment_id": null, "text": "It is this way for several reasons:\n- support for pipelined requests\n- ensure correct recycling of objects after an error\n- simpler code\n\nCorrectly determining when recycled() is required and isn't would require more complexity to monitor connection state than the extra recycles currently used.\n\nFurther, the impact of not recycling is far worse than the impact of extra recycling.\n\nIf there was a case where there were multiple recycle() calls and it was clear that one or more was always unnecessary then there would be a case to remove it. That is not the case here.", "id": 153475, "time": "2012-02-05T20:48:23Z", "creator": "markt@apache.org", "creation_time": "2012-02-05T20:48:23Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 52593, "attachment_id": null, "is_private": false, "id": 153497, "time": "2012-02-06T09:19:27Z", "creator": "davidw53@msn.com", "creation_time": "2012-02-06T09:19:27Z", "text": "Just to point out - taking into account all these things - it would be simpler (a micro optimization but clearer code) to combine outputbuffer.nextRequest() & recycle() and always call one of them just once at the end of response processing."}, {"count": 3, "tags": [], "text": "No it wouldn't.\n\nrecycle() != nextRequest() and to support HTTP pipelining this difference is critical.\n\nThis code is not going to be changed.", "is_private": false, "bug_id": 52593, "id": 153499, "time": "2012-02-06T10:03:37Z", "creator": "markt@apache.org", "creation_time": "2012-02-06T10:03:37Z", "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 52593, "attachment_id": null, "text": "OK and thanks for the reply.\n\nI can't get my head around the pipelining as I'm not using it.\n\nSo I'll defer to your greater knowledge.", "id": 153500, "time": "2012-02-06T11:02:26Z", "creator": "davidw53@msn.com", "creation_time": "2012-02-06T11:02:26Z", "is_private": false}]