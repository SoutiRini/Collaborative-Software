[{"count": 0, "tags": [], "bug_id": 46200, "text": "Given the following psuedo code:\n\nfor (i in 0..10) {\n    Connection con = datasource.getConnection();\n    Statement st = con.createStatement();\n    ResultSet rs = null;\n    for (j in 0..50) {\n        st = con.createStatement();\n        rs = st.executeQuery(\"select '${i}.${j}' from dual\");\n    }\n    // notice the lack of closing the rs, and st\n    con.close();\n}\n\nThis will blowup depending on your database vendor's config on how many open cursors can be open at a given time.\n\nConnection.close() implies that all Statements and PreparedStatements should also be closed too.\n\nOf course the above is subject to interpretation - but I've seen to many times int he wild Connections which are opened but its statements/result sets are not.", "id": 122433, "time": "2008-11-13T09:31:31Z", "creator": "funkman@joedog.org", "creation_time": "2008-11-13T09:31:31Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 46200, "text": "Actually a pool doesn't have to do this, since it would be bad coding practise to not do it yourself.\nHowever, I agree with the functionality of having it, and this is the exact reason why the pool has the interceptor framework, since one can plug in functionality like this\n\nI will add it to the pool", "id": 122501, "time": "2008-11-14T11:33:06Z", "creator": "fhanik@apache.org", "creation_time": "2008-11-14T11:33:06Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "creator": "fhanik@apache.org", "attachment_id": null, "id": 122998, "time": "2008-12-02T08:47:46Z", "bug_id": 46200, "creation_time": "2008-12-02T08:47:46Z", "is_private": false, "text": "Fixed in 1.0.6-beta\nConfigure the StatementFinalizer interceptor to achieve this functionality"}]