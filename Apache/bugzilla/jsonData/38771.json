[{"count": 0, "tags": [], "bug_id": 38771, "is_private": false, "id": 86152, "creation_time": "2006-02-23T19:36:49Z", "time": "2006-02-23T19:36:49Z", "creator": "bpracht@nc.rr.com", "text": "I'm trying to compile a C program with a fix level that must be passed in as a\nstring macro.  I'd like to have the program do something like \n    cc -c -o program.o -DFIXLVL=\\\"testFixLevel\\\" program.c\nsuch that the quote characters are placed in the C program.  It reports that it\npasses on the quote characters, but it really doesn't.  Included below are test\nfiles needed to run this scenario.  Please run ant -debug to verify and observe\nthe -DFIXLVL on both Ant's output and the output from listargs.  \n\nThanks,\nBen\n---------- begin build.xml ----------------\n<?xml version=\"1.0\"?>\n<project name=\"escapeQuoteCharacter\" default=\"run_test_case\">\n\n    <!-- \n    Build listargs program to list arguments as truly passed in to called    \nprogram.\n    Assumes MSVC, but should be easy to change to something else as needed.\n    -->\n    <target name=\"build_listargs\">\n        <apply executable=\"cl\" dest=\".\" parallel=\"false\">\n            <targetfile/>\n            <srcfile/>\n            <fileset dir=\".\">\n                <include name=\"listargs.cpp\" />\n            </fileset>\n            <mapper type=\"glob\" from=\"*.cpp\" to=\"*.exe\"/>\n        </apply>\n    </target>\n\n    <!-- \n    Call listargs program to verify quotes still in -DFIXLVL argument.  The\n    -debug option in ant claims they are, listargs says the quotes are missing.\n\n    In otherwords:\n    Expected call (and what's reported by the -debug option in ant):  \n    listargs -c -o cprogram.obj -'DFIXLVL=\"test\"' cprogram.c \n\n    Actual call:\n    listargs -c -o cprogram.obj -'DFIXLVL=test' cprogram.c \n    -->\n    <target name=\"run_test_case\" depends=\"build_listargs\">\n        <apply executable=\"listargs\" dest=\".\" parallel=\"false\">\n            <arg value=\"-c\"/>\n            <arg value=\"-o\"/>\n            <targetfile/>\n            <arg value=\"'-DFIXLVL=&quot;test&quot;'\"/>\n            <srcfile/>\n            <fileset dir=\".\">\n                <include name=\"cprogram.c\" />\n            </fileset>\n            <mapper type=\"glob\" from=\"*.c\" to=\"*.obj\"/>\n        </apply>\n    </target>\n</project>\n---------- end build.xml ----------------\n\n---------- begin cprogram.c -------------\nstatic const char fixlevel[] = \" \" __FILE__ \" at \" FIXLVL \" on \" __DATE__ \" at \"\n__TIME__ \" \";\n\nint main(int argc, char* argv[])\n{\n    printf(\"fixlevel=%s\\n\",fixlevel);\n    return 0;\n}\n---------- end cprogram.c ---------------\n\n---------- begin listargs.cpp -----------\n#include <stdio.h>\n\nint main(int argc, char* argv[])\n{\n    int i=0;\n    for(;i<argc-1;i++)\n    {\n        printf(\"%s \",argv[i]);\n    }\n    printf(\"%s\\n\",argv[i]);\n    return 0;\n}\n---------- end listargs.cpp -------------", "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 38771, "text": "Created attachment 17784\nBuild file to run test case\n\nPlease run this build file using -debug to show what Ant reports that it's\npassing to the command line program.", "id": 86153, "time": "2006-02-23T20:13:16Z", "creator": "bpracht@nc.rr.com", "creation_time": "2006-02-23T20:13:16Z", "is_private": false, "attachment_id": 17784}, {"count": 2, "attachment_id": 17785, "creator": "bpracht@nc.rr.com", "is_private": false, "id": 86154, "time": "2006-02-23T20:14:05Z", "bug_id": 38771, "creation_time": "2006-02-23T20:14:05Z", "tags": [], "text": "Created attachment 17785\nC Program requiring quoted macro string"}, {"count": 3, "tags": [], "bug_id": 38771, "is_private": false, "id": 86155, "attachment_id": 17786, "creator": "bpracht@nc.rr.com", "creation_time": "2006-02-23T20:15:28Z", "time": "2006-02-23T20:15:28Z", "text": "Created attachment 17786\nC/C++ Program to list arguments passed into it.\n\nThis program is used to show what really gets passed into the called program,\nwhich is not the same as what Ant reports."}, {"count": 4, "tags": [], "bug_id": 38771, "text": "Created attachment 17787\nExample showing that this is not Ant's fault\n\nextract the files into a folder and run ant.  You will see two sets of output,\none from calling \"java ShowArgs\" with <exec> and quotes embedded in XML args;\nthe other calling Run with <java>, which uses the core Java APIs to run java\nShowArgs with quotes specified in arguments.  The quotes still disappear; thus\nI must attribute this behavior to Java.  I am running Sun JDK 1.4.2_10.", "id": 86156, "attachment_id": 17787, "creator": "mbenson@apache.org", "creation_time": "2006-02-23T20:15:55Z", "time": "2006-02-23T20:15:55Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 38771, "text": "(In reply to comment #4)\n> Created an attachment (id=17787) [edit]\n> Example showing that this is not Ant's fault\n> \n> extract the files into a folder and run ant.  You will see two sets of output,\n> one from calling \"java ShowArgs\" with <exec> and quotes embedded in XML args;\n> the other calling Run with <java>, which uses the core Java APIs to run java\n> ShowArgs with quotes specified in arguments.  The quotes still disappear; thus\n> I must attribute this behavior to Java.  I am running Sun JDK 1.4.2_10.\nThanks for your quick response.\nUnfortunately, your example is missing the arguments for the   <java\nclassname=\"Run\" classpath=\".\" />.\nBut, if I understand what you're saying, Ant is correctly converting &quot; to\nquote (\") in the string, then calling making a core Java API call to run\njava.exe with the specified arguments, including the quoted argument.  Then, the\nJava API, according to your example must be stripping out quotes in the middle\nof the argument.  Am I correct?  If so, which core API call is it making, and\ncan I have an example of it?", "id": 86158, "attachment_id": null, "creator": "bpracht@nc.rr.com", "creation_time": "2006-02-23T20:30:59Z", "time": "2006-02-23T20:30:59Z", "is_private": false}, {"count": 6, "tags": [], "bug_id": 38771, "text": "Actually it works for cmd:\n\n     [exec] Current OS is Windows XP\n     [exec] Executing 'cmd.exe' with arguments:\n     [exec] '/c'\n     [exec] 'ShowArgs.cmd'\n     [exec] 'foo'\n     [exec] 'bar'\n     [exec] '\"baz\"'\n     [exec] '1\"2'\n     [exec]\n     [exec] The ' characters around the executable and arguments are\n     [exec] not part of the command.\n\n     [exec] C:\\tmp\\ant>echo foo bar \"baz\" 1\"2\n     [exec] foo bar \"baz\" 1\"2\n\n     [exec] C:\\tmp\\ant>exit", "id": 86159, "attachment_id": null, "creator": "alexeys@inventigo.com", "creation_time": "2006-02-23T20:36:46Z", "time": "2006-02-23T20:36:46Z", "is_private": false}, {"count": 7, "tags": [], "bug_id": 38771, "is_private": false, "id": 86160, "creation_time": "2006-02-23T20:42:47Z", "time": "2006-02-23T20:42:47Z", "creator": "mbenson@apache.org", "text": "(In reply to comment #6)\n> Actually it works for cmd:\n> \n\nHmm.  Now how does that make sense?  Hmm... the only way is that the problem is\nin the Windows APIs (that I am guessing are) shared by CMD.EXE and the JVM's\nprocess execution component.  I don't have a Unix box anymore :( ... can anyone\nrun a test to see if quotes are preserved in arguments on a non-Windows platform?", "attachment_id": null}, {"count": 8, "tags": [], "bug_id": 38771, "is_private": false, "id": 86161, "creation_time": "2006-02-23T20:43:52Z", "time": "2006-02-23T20:43:52Z", "creator": "mbenson@apache.org", "text": "(In reply to comment #7)\n> Hmm.  Now how does that make sense?  Hmm... the only way is that the problem is\n> in the Windows APIs (that I am guessing are) shared by CMD.EXE and the JVM's\n> process execution component.\n\nMy point being that perhaps a direct call to CMD goes through one less level of\nprocessing... ?\n\n", "attachment_id": null}, {"count": 9, "tags": [], "bug_id": 38771, "attachment_id": null, "text": "Just a note - single quotes do not work on Windows. Besides this <apply> also works:\n\n  <apply executable=\"cmd.exe\" dest=\".\" parallel=\"false\">\n    <arg value=\"/c\"/>\n    <arg value=\"ShowArgs.cmd\" />\n    <arg value=\"-c\"/>\n    <arg value=\"-o\"/>\n    <targetfile/>\n    <arg value=\"'-DFIXLVL=&quot;test&quot;'\"/>\n    <srcfile/>\n    <fileset dir=\".\">\n      <include name=\"*.java\" />\n    </fileset>\n    <mapper type=\"glob\" from=\"*.java\" to=\"*.test\"/>\n  </apply>\n\n\noutput:\n    [apply] Current OS is Windows XP\n    [apply] Warning: Run.java modified in the future.\n    [apply] Warning: ShowArgs.java modified in the future.\n    [apply] Run.java added as Run.test doesn't exist.\n    [apply] ShowArgs.java added as ShowArgs.test doesn't exist.\n    [apply] Executing 'cmd.exe' with arguments:\n    [apply] '/c'\n    [apply] 'ShowArgs.cmd'\n    [apply] '-c'\n    [apply] '-o'\n    [apply] 'C:\\tmp\\ant\\Run.test'\n    [apply] ''-DFIXLVL=\"test\"''\n    [apply] 'C:\\tmp\\ant\\Run.java'\n    [apply]\n    [apply] The ' characters around the executable and arguments are\n    [apply] not part of the command.\n\n    [apply] C:\\tmp\\ant>echo -c -o C:\\tmp\\ant\\Run.test '-DFIXLVL=\"test\"'\nC:\\tmp\\ant\\Run.java\n    [apply] -c -o C:\\tmp\\ant\\Run.test '-DFIXLVL=\"test\"' C:\\tmp\\ant\\Run.java\n\n    [apply] C:\\tmp\\ant>exit\n    [apply] Executing 'cmd.exe' with arguments:\n    [apply] '/c'\n    [apply] 'ShowArgs.cmd'\n    [apply] '-c'\n    [apply] '-o'\n    [apply] 'C:\\tmp\\ant\\ShowArgs.test'\n    [apply] ''-DFIXLVL=\"test\"''\n    [apply] 'C:\\tmp\\ant\\ShowArgs.java'\n    [apply]\n    [apply] The ' characters around the executable and arguments are\n    [apply] not part of the command.\n\n    [apply] C:\\tmp\\ant>echo -c -o C:\\tmp\\ant\\ShowArgs.test '-DFIXLVL=\"test\"'\nC:\\tmp\\ant\\ShowArgs.java\n    [apply] -c -o C:\\tmp\\ant\\ShowArgs.test '-DFIXLVL=\"test\"'\nC:\\tmp\\ant\\ShowArgs.java\n\n    [apply] C:\\tmp\\ant>exit\n    [apply] Applied cmd.exe to 2 files and 0 directories.\n", "id": 86162, "time": "2006-02-23T20:47:19Z", "creator": "alexeys@inventigo.com", "creation_time": "2006-02-23T20:47:19Z", "is_private": false}, {"count": 10, "tags": [], "bug_id": 38771, "is_private": false, "id": 86163, "attachment_id": null, "creator": "mbenson@apache.org", "creation_time": "2006-02-23T20:52:10Z", "time": "2006-02-23T20:52:10Z", "text": "another interesting note is that while quotes are preserved on e.g. cmd /c echo\n..., they are stripped when you call e.g. cygwin \"echo\" directly... also cmd /c\ncmd /c echo ... preserves quotes.  Still the only workable conclusion I can see\nis that cmd is treated differently from other executables... which is\ndissatisfyingly cryptic."}, {"count": 11, "tags": [], "bug_id": 38771, "attachment_id": null, "is_private": false, "id": 86164, "time": "2006-02-23T20:55:08Z", "creator": "bpracht@nc.rr.com", "creation_time": "2006-02-23T20:55:08Z", "text": "(In reply to comment #8)\n> (In reply to comment #7)\n> > Hmm.  Now how does that make sense?  Hmm... the only way is that the problem is\n> > in the Windows APIs (that I am guessing are) shared by CMD.EXE and the JVM's\n> > process execution component.\n> \n> My point being that perhaps a direct call to CMD goes through one less level of\n> processing... ?\n> \n> \nThat's interesting, but irritating.  Btw, I modified my test case, and verified\nthat the quote disappears even when it's in the middle of an argument.  Someone\ndid something bad somewhere.\n(In reply to comment #10)\n> another interesting note is that while quotes are preserved on e.g. cmd /c echo\n> ..., they are stripped when you call e.g. cygwin \"echo\" directly... also cmd /c\n> cmd /c echo ... preserves quotes.  Still the only workable conclusion I can see\n> is that cmd is treated differently from other executables... which is\n> dissatisfyingly cryptic.\n\nThat's interesting, but irritating.  Btw, I modified my test case, and verified\nthat the quote disappears even when it's in the middle of an argument.  Someone\ndid something bad somewhere.\n\nSo is the only solution to call cmd.exe /c then?"}, {"count": 12, "tags": [], "bug_id": 38771, "attachment_id": null, "is_private": false, "id": 86165, "time": "2006-02-23T20:58:11Z", "creator": "bpracht@nc.rr.com", "creation_time": "2006-02-23T20:58:11Z", "text": "(In reply to comment #11)\n> (In reply to comment #8)\n> > (In reply to comment #7)\n> > > Hmm.  Now how does that make sense?  Hmm... the only way is that the\nproblem is\n> > > in the Windows APIs (that I am guessing are) shared by CMD.EXE and the JVM's\n> > > process execution component.\n> > \n> > My point being that perhaps a direct call to CMD goes through one less level of\n> > processing... ?\n> > \n> > \n> That's interesting, but irritating.  Btw, I modified my test case, and verified\n> that the quote disappears even when it's in the middle of an argument.  Someone\n> did something bad somewhere.\n> (In reply to comment #10)\n> > another interesting note is that while quotes are preserved on e.g. cmd /c echo\n> > ..., they are stripped when you call e.g. cygwin \"echo\" directly... also cmd /c\n> > cmd /c echo ... preserves quotes.  Still the only workable conclusion I can see\n> > is that cmd is treated differently from other executables... which is\n> > dissatisfyingly cryptic.\n> \n> That's interesting, but irritating.  Btw, I modified my test case, and verified\n> that the quote disappears even when it's in the middle of an argument.  Someone\n> did something bad somewhere.\n> \n> So is the only solution to call cmd.exe /c then?\n\nIf so, how would I then make that call to cl.exe or whatever compiler, given\nthat it'll have those quote characters in them?"}, {"count": 13, "attachment_id": null, "creator": "bpracht@nc.rr.com", "text": "(In reply to comment #12)\n> (In reply to comment #11)\n> > (In reply to comment #8)\n> > > (In reply to comment #7)\n> > > > Hmm.  Now how does that make sense?  Hmm... the only way is that the\n> problem is\n> > > > in the Windows APIs (that I am guessing are) shared by CMD.EXE and the JVM's\n> > > > process execution component.\n> > > \n> > > My point being that perhaps a direct call to CMD goes through one less\nlevel of\n> > > processing... ?\n> > > \n> > > \n> > That's interesting, but irritating.  Btw, I modified my test case, and verified\n> > that the quote disappears even when it's in the middle of an argument.  Someone\n> > did something bad somewhere.\n> > (In reply to comment #10)\n> > > another interesting note is that while quotes are preserved on e.g. cmd /c\necho\n> > > ..., they are stripped when you call e.g. cygwin \"echo\" directly... also\ncmd /c\n> > > cmd /c echo ... preserves quotes.  Still the only workable conclusion I\ncan see\n> > > is that cmd is treated differently from other executables... which is\n> > > dissatisfyingly cryptic.\n> > \n> > That's interesting, but irritating.  Btw, I modified my test case, and verified\n> > that the quote disappears even when it's in the middle of an argument.  Someone\n> > did something bad somewhere.\n> > \n> > So is the only solution to call cmd.exe /c then?\n> \n> If so, how would I then make that call to cl.exe or whatever compiler, given\n> that it'll have those quote characters in them?\n\n\nI just tried cmd.exe from the command line, and it still stripped the quote\ncharacters, so I can now blame Microsoft.  My solution was to do something like\nthis \"-DFIXLVL=\\&quot;Test\\&quot;\", and that seems to work, at least for\nWindows.  While this is not an Ant bug, this kind of information would still be\nuseful in the Ant docs somewhere.\n\nThanks for your help, I've remarked the bug as invalid.", "id": 86167, "time": "2006-02-23T21:07:58Z", "bug_id": 38771, "creation_time": "2006-02-23T21:07:58Z", "tags": [], "is_private": false}]