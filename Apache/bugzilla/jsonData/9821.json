[{"count": 0, "tags": [], "bug_id": 9821, "is_private": false, "text": "I just installed new v.1.3.24 with PHP 4.2.1 (as DSO..) and wondered why my \nscripts behaved quiet strange...\n\nExample :\nfetch_pic.php?nr=1\nI added a line \n  echo \"QUERY_STRING=\".htmlentities($QUERY_STRING).\"!<br>\";\nwhich produced \nQUERY_STRING=!\nsince PHPMyAdmin works I suppose its a problem only with GET method,not POST.\n\nI dont know by now if maybe PHP is broken... but hopefully there will be some \nothers with similar problems :-(\n\nThanx", "id": 17714, "time": "2002-06-12T21:48:27Z", "creator": "mommsen@focusit.de", "creation_time": "2002-06-12T21:48:27Z", "attachment_id": null}, {"count": 1, "tags": [], "text": "I just tried version 2.0.36... same result -> must be a php problem ?\nI will try an older Version of PHP now...", "attachment_id": null, "bug_id": 9821, "id": 17729, "time": "2002-06-13T12:09:45Z", "creator": "mommsen@focusit.de", "creation_time": "2002-06-13T12:09:45Z", "is_private": false}, {"count": 2, "tags": [], "text": "It is definatly PHP 4.2.1, I just tried 4.1.2 and it works....\n", "is_private": false, "id": 17730, "creation_time": "2002-06-13T12:18:57Z", "time": "2002-06-13T12:18:57Z", "creator": "mommsen@focusit.de", "bug_id": 9821, "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 9821, "is_private": false, "id": 17763, "attachment_id": null, "creator": "aaron@apache.org", "creation_time": "2002-06-14T00:25:22Z", "time": "2002-06-14T00:25:22Z", "text": "Unfortunately, PHP decided to change the default of the \"register_globals\"\nto \"off\", which disables interpolation of your environment variables\nand QUERY_STRING arguments. Turn this back on in your php.ini file\nor use the alternative method (which I don't recall at the moment,\nbut can be found in the docs.)\n\nYour reports are valued, but in the future if you have problems with\nPHP they will be better reported in the PHP bug tracking system\nat http://bugs.php.net/. Thanks for using Apache!"}, {"count": 4, "tags": [], "bug_id": 9821, "attachment_id": null, "text": "For archival purposes, here's some information on this issue:\n\nQUERY_STRING is a predefined variable, much like HTTP_REFERER, HTTP_USER_AGENT, \nDOCUMENT_ROOT, etc.  PHP allows access to these like most other variables, such \nas GET and POST.  PHP has a directive called register_globals, this setting \nessentially extracts/imports variables (as per the PHP directive \nvariables_order) into the current scope.  This method \"used\" to be common, PHP \nis convincing people to change this behavior though.  There are many other \noptions/ways to retrieve this information in PHP, for example:\n\n  http://www.example.com/foo.php?id=33&color=blue\n\n  // Has worked since PHP 3 (forever)\n  // Before 4.0.3 track_vars had to be enabled (on by default)\n  print $HTTP_SERVER_VARS['QUERY_STRING'];\n  print $HTTP_GET_VARS['id']; \n\n  // Has worked since PHP 4.1.0\n  // (new superglobals introduced)\n  print $_SERVER['QUERY_STRING'];\n  print $_GET['id'];\n  print $_REQUEST['id'];\n\n  // Works if register_globals = on.  As of PHP 4.2.0 the \n  // default value for register_globals = off, before this \n  // time it was on.  This is a MAJOR change in PHP.\n  print $QUERY_STRING;\n  print $id;\n\n  // Works as of PHP 4.1.0\n  import_request_variables('gpc', 'r_');\n  print $r_id;\n\nregister_globals cannot be set at runtime (ini_set()), the closest to this \nwould putting the following in .htaccess (if the host allows such things, like \nby having: AllowOverride Options  in the conf file (http.conf)).\n\nphp_flag register_globals on\n\nHacking this together at runtime can be done too but isn't recommended \n(wasteful) but there are those times when one might want to do this I \nsuppose. :)  For example:\n\n  // A hack to mimic register_globals at runtime\n  // (do you really want to do this?)\n  if (!ini_get('register_globals')) {\n    $types_to_register = array('GET','POST','COOKIE',\n                               'SESSION','SERVER');\n    foreach ($types_to_register as $type) {\n      if (@count(${'HTTP_' . $type . '_VARS'}) > 0) {\n        extract(${'HTTP_' . $type . '_VARS'}, EXTR_OVERWRITE);\n      }\n    }\n  }\n\nOr use array_merge() or something similiar.  Yes the default for \nregister_globals has changed and is causing some headache but this difficult \ndecision was made as having register_globals = off makes it more difficult to \nwrite insecure (sloppy) code.  Here are some related reading materials:\n\n * http://www.php.net/manual/en/language.variables.predefined.php\n * http://www.php.net/manual/en/security.registerglobals.php\n * http://www.php.net/release_4_1_0.php\n * http://www.php.net/release_4_2_0.php\n\nRegards,\nPhilip Olson", "id": 17813, "time": "2002-06-14T16:49:49Z", "creator": "philip@cornado.com", "creation_time": "2002-06-14T16:49:49Z", "is_private": false}]