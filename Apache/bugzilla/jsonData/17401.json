[{"count": 0, "tags": [], "bug_id": 17401, "text": "I have a symbolic link called 'index.html' which points to a real file\ncalled 'real-index.html'.\n\nUsing Tomcat 4.0.6, I am able to use the reference 'index.html' in a URL\nto view the contents of the file 'real-index.html'.\n\nUsing Tomcat 4.1.18 however, the same URL returns an http 404 error.\nFurther testing seems to indicate that all symbolic links on HPUX are\ntreated as directory entries regardless of whether the symbolic link is\npointing to a directory or file.", "id": 31944, "time": "2003-02-25T22:14:02Z", "creator": "eric_ustaris@hp.com", "creation_time": "2003-02-25T22:14:02Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "creator": "stowians@ford.com", "text": "I ran into this too. I have an whatever.jsp who uses an <applet ... <PARAM \nNAME=\"code\" VALUE=\"sub/FrameCs.class\"> <PARAM NAME=\"codebase\" VALUE=\".\"> ...\nThen in my tomcat directory like /xxx/tomcat4/webapps/mine I had a symbolic \nlink to WEB-INF/classes/sub.  sub is my subdirectory package for class files. I \nwould get a browser console error saying classNotFound or something like that. \nIt could not find the applet class file to load it.  Then I tried moving \nthe 'sub' directory up to 'mine' and linking up to it like ln -s ../../sub and \nthat did not work either (giving a different error, maybe 505). So I have to \nhave the directory and all the files in both places, and maintain duplicates :-(\nThis worked in tomcat 4.1.10 before I just upgraded.  stowians@ford.com", "id": 32183, "time": "2003-02-28T20:51:03Z", "bug_id": 17401, "creation_time": "2003-02-28T20:51:03Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 17401, "text": "Though the symbolic link approach mentioned by Stan is non-standard, it is \nabsolutely necessary to avoid egregious duplication of resources in large web \napps where resources are shared between multiple tiers, e.g. applet clients and \nservlets.\n\nPlease fix this!", "id": 33464, "time": "2003-03-19T16:35:42Z", "creator": "jessh@ptc.com", "creation_time": "2003-03-19T16:35:42Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "creator": "jessh@ptc.com", "is_private": false, "text": "This bug should be changed to a documentation bug and quickly fixed.\n\nTomcat 4.1.18 (and 4.1.24) both support symbolic linking.  One just has to add\ninsert a Resources element in the server.xml enabling it, e.g.:\n\n  <Context ....>\n     <Resources allowLinking=\"true\"/>\n  </Context>\n\nUnfortunately, this is not documented in the Tomcat docs.  Only by reading\nsource code and doing specific Tomcat mailing list and google searches based on\nmy reading was I able to figure this out!", "id": 33633, "time": "2003-03-22T06:56:58Z", "bug_id": 17401, "creation_time": "2003-03-22T06:56:58Z", "attachment_id": null}, {"count": 4, "tags": [], "creator": "eric_ustaris@hp.com", "text": "I believe a bug still exists which should be resolved.\n\nI was able to implement the work-around referenced by Jess, but it\nseems to have only resolved half the problem.  In the root level\nof my webapp, I have 2 symbolic links:\n\n  symlink          actual file/directory\n  ----------       ---------------------\n  index.html  -->  real.index.html\n  docs-dir    -->  real-docs-dir\n\nThe work-around mentioned solves the problem with directories --\ntomcat is able to recognize that 'docs-dir' is really a symbolic\nlink and successfully display the contents of the files in the\nactual directory 'real-docs-dir'.\n\nHowever, tomcat is not able to display the document 'index.html' --\nfor some reason, it knows that 'index.html' is a symlink, but\nit tries to treat it as a directory entry and not a file entry.\nThus, when you try to access the document, tomcat generates a 404\nerror.  So I think there is still a bug in tomcat that needs\nto be fixed with regard to symlinks.\n", "id": 33776, "time": "2003-03-25T16:55:49Z", "bug_id": 17401, "creation_time": "2003-03-25T16:55:49Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "creator": "remm@apache.org", "text": "As for individual files, it likely depends on what the JDK is returning for the\nisDirectory flag, and could be platform or JDK dependent. If you'd like a fix\nfor this sub-issue, you'll have to dig in deeper, as it's not pratical to\ninvestigate. The biggest chunk of this issue has been resolved by fixing\nallowLinking.", "id": 36061, "time": "2003-04-25T09:19:48Z", "bug_id": 17401, "creation_time": "2003-04-25T09:19:48Z", "is_private": false, "attachment_id": null}]