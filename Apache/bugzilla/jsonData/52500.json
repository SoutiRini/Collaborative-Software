[{"count": 0, "tags": [], "creator": "michael_furman@hotmail.com", "attachment_id": null, "id": 153045, "time": "2012-01-23T13:02:04Z", "bug_id": 52500, "creation_time": "2012-01-23T13:02:04Z", "is_private": false, "text": ""}, {"count": 1, "tags": [], "bug_id": 52500, "is_private": false, "text": "Created attachment 28190\nJava Code\n\nCode that allow to improve current implementation of the client certificate authentication (SSLAuthenticator)", "id": 153047, "time": "2012-01-23T13:20:15Z", "creator": "michael_furman@hotmail.com", "creation_time": "2012-01-23T13:20:15Z", "attachment_id": 28190}, {"count": 2, "tags": [], "bug_id": 52500, "attachment_id": 28191, "is_private": false, "id": 153048, "time": "2012-01-23T13:21:33Z", "creator": "michael_furman@hotmail.com", "creation_time": "2012-01-23T13:21:33Z", "text": "Created attachment 28191\nExamples of x509 authentication"}, {"count": 3, "tags": [], "bug_id": 52500, "attachment_id": null, "is_private": false, "id": 153049, "time": "2012-01-23T13:22:16Z", "creator": "michael_furman@hotmail.com", "creation_time": "2012-01-23T13:22:16Z", "text": "Hi!\nI want to improve current implementation of the client certificate authentication (SSLAuthenticator)\nCurrent implementation of SSLAuthenticator takes the user identifier from the whole SubjectDN.\nDuring my work with our enterprise customers I have found the following:\n1)\tIt is common case when the user identifier is stored in the Subject Alternative Name of the client certificate.\n2)\tWhen the user identifier is stored in the SubjectDN of the client certificate it can be stored in e-mail, CN or in the hold SubjectDN\nSee the attached x509Examples.docx\nI recommend to improve the Tomcat client certificate authentication and allow to take user identifier from the Subject Alternative Name or from SubjectDN. \nThe attached code allows to do it using the following configuration:\n<Context>\n\t<Valve className=\"org.apache.catalina.authenticator.SSLAuthenticator\" userIdentifierRetrieveField=\"SubjectAlternativeName\"  userIdentifierRetrieveFieldPart=\"otherName\" />  \n</Context>\n\n<Context>\n\t<Valve className=\"org.apache.catalina.authenticator.SSLAuthenticator\" userIdentifierRetrieveField=\"SubjectDN\"  userIdentifierRetrieveFieldPart=\"e\" />  \n</Context>\n\n\nThe attached code already works more than year at production in more than one customer. \nOpen issues:\n1)\tThe implementation of SubjectAlternativeNameRetriever depend on bouncy castel jar. If it is a problem possible to get all required source files into Tomcat source files. Alternatively, it is possible not to support Subject Alternative Name \u2013 but it is very common use case\n2)\tI am not sure if the configuration above is the best option \u2013 possible to discuss it\nI will happy for your comments.\nBest regards,\n   Michael"}, {"count": 4, "tags": [], "bug_id": 52500, "is_private": false, "text": "Patches should be provided in diff -u format against, in preference order:\n- trunk\n- 7.0.x/trunk\n- 7.0.x/tags/<latest release>\n- 7.0.x/tags/<other release>\n\nThe intended way to do this is to override the Realm implementation and provide an alternative implementation of getPrincipal(X509Certificate).\n\nI'd be prepared to consider changes to RealmBase to provide options for extracting the user name from the certificate but I am -1 on doing this in the Authenticators.\n\nAn additional dependency on bouncy castle is not acceptable. On that topic, what is wrong with X509Certificate.getSubjectAlternativeNames() that has been present since Java 1.4?", "id": 153050, "time": "2012-01-23T13:32:33Z", "creator": "markt@apache.org", "creation_time": "2012-01-23T13:32:33Z", "attachment_id": null}, {"count": 5, "attachment_id": null, "creator": "markt@apache.org", "text": "Moving to an enhancement.", "id": 153051, "time": "2012-01-23T13:34:55Z", "bug_id": 52500, "creation_time": "2012-01-23T13:34:55Z", "tags": [], "is_private": false}, {"count": 6, "tags": [], "bug_id": 52500, "attachment_id": null, "text": "Dear Mark,\nThank you for the fastest comment!\n\n>Patches should be provided in diff -u format against, in preference order:\n\nI will try to do it when we will finalize patch.\n\n\n\n>The intended way to do this is to override the Realm implementation and >provide an alternative implementation of getPrincipal(X509Certificate).\n\nI have tried to explore the best way to provide the patch.\nAll realms in Tomcat extend RealmBase.\nDo you suggest to create the new realm that will extend RealmBase (with the new implementation of getPrincipal) and all realms will extend the realm? \nOr do you want to override each realm?\n\n\n\n\n>I'd be prepared to consider changes to RealmBase to provide options for\n>extracting the user name from the certificate but I am -1 on doing this in >the Authenticators.\n\nI just need Authenticator for the configuration and I need your help with the realm configuration.\n\nCan you explain me how can I configure realms?\n\n>An additional dependency on bouncy castle is not acceptable. On that topic,\n>what is wrong with X509Certificate.getSubjectAlternativeNames() that has \n>been present since Java 1.4?\n\nThe SubjectAlternativeNameRetriever class uses X509Certificate.getSubjectAlternativeNames()\nUnfortunately, generally the SubjectAlternativeName is stored in ASNDerEncodedByteArray\nI use the bouncy castle classes to convert the value to string. Is bouncy castle open source?\nWhy it is not possible to copy 5 sources in the Tomcat baseline?\nAlternatively, do you know in Apache foundation a library that provides the following services:\nASN1InputStream\nASN1Sequence\nASN1TaggedObject\nDERObject\nDERUTF8String\n\nThanks and best regards,\n   Michael", "id": 153074, "time": "2012-01-23T19:28:08Z", "creator": "michael_furman@hotmail.com", "creation_time": "2012-01-23T19:28:08Z", "is_private": false}, {"count": 7, "tags": [], "creator": "michael_furman@hotmail.com", "attachment_id": null, "id": 153075, "time": "2012-01-23T19:49:26Z", "bug_id": 52500, "creation_time": "2012-01-23T19:49:26Z", "is_private": false, "text": "Hi!\nCan we copy the following classes to Tomcat baseline?\nhttp://geronimo.apache.org/apidocs/2.0.1/org/apache/geronimo/util/asn1/ASN1InputStream.html\nhttp://geronimo.apache.org/apidocs/2.0.1/org/apache/geronimo/util/asn1/ASN1Sequence.html\nhttp://geronimo.apache.org/apidocs/2.0.1/org/apache/geronimo/util/asn1/ASN1TaggedObject.html\nhttp://geronimo.apache.org/apidocs/2.0.1/org/apache/geronimo/util/asn1/DERObject.html\nhttp://geronimo.apache.org/apidocs/2.0.1/org/apache/geronimo/util/asn1/DERUTF8String.html\nThanks and best regards,\n   Michael"}, {"count": 8, "tags": [], "bug_id": 52500, "attachment_id": null, "text": "The suggestion is to make all Realm's more configurable be modifying RealmBase. One option would be:\n- define an interface for transforming certs to user names\n- allow users to write their own implementations of this interface\n- add an attribute to RealmBase that allows custom implementations of this transform to be specified (by full class name)\n- modify RealmBase to use this transformation\n- provide a default transformation that is the same as the current code\n\nSee the Tomcat docs for how to configure Realms.\n\nBouncy castle is licensed under terms that would allow us to use it in Tomcat but I am -1 for adding a dependency for this feature. I would much rather add the extension point as outlined above and allow users to implement whatever they need using whatever libraries they choose.\n\nAt the moment, I am +0 for adding additional transformations such such as the one proposed here. My final view would depend on how much demand there was for the feature, how much new code was required and how complex it was.", "id": 153097, "time": "2012-01-24T11:03:28Z", "creator": "markt@apache.org", "creation_time": "2012-01-24T11:03:28Z", "is_private": false}, {"count": 9, "tags": [], "creator": "michael_furman@hotmail.com", "text": "Created attachment 28199\nThe document that describe client certificate and its configuration", "id": 153107, "time": "2012-01-24T15:48:35Z", "bug_id": 52500, "creation_time": "2012-01-24T15:48:35Z", "is_private": false, "attachment_id": 28199}, {"count": 10, "tags": [], "bug_id": 52500, "attachment_id": 28200, "text": "Created attachment 28200\nx509 java code\n\nDiff from trunk\\java", "id": 153108, "time": "2012-01-24T15:49:44Z", "creator": "michael_furman@hotmail.com", "creation_time": "2012-01-24T15:49:44Z", "is_private": false}, {"count": 11, "tags": [], "bug_id": 52500, "is_private": false, "text": "Dear Mark,\nThank you for the comments!\n- I have defined an interface for transforming certs to user names - UserIdentifierRetriever\n- I have added an attribute to RealmBase that allows custom implementations of this transform to be specified (by full class name) - x509UserIdentifierRetrieverClassName\n- I have modified RealmBase to use this transformation\n- I have provided a default transformation that is the same as the current code - DefaultSubjectDnRetriever \n\nAny case, I strongly recommend to add additional transformations out of the box since it will allow to use Tomcat for the client certificate authentication.\nIt will allow easy configuration to do it. See and the examples below: \n<Realm className=\"\u2026\" x509UserIdentifierRetrieveField=\"SubjectAlternativeName\"  x509UserIdentifierRetrieveFieldPart=\"otherName\" />\n<Realm className=\"\u2026\" x509UserIdentifierRetrieveField=\"SubjectDN\"  x509UserIdentifierRetrieveFieldPart=\"e\" />\nI also can contribute the attached x509Configuration.docx for better explanation.\nIn addition, I strongly recommend to add out of the box SubjectAlternativeNameRetriever. It is used by big enterprise customers. For example, you can not take information from CAC (http://www.cac.mil/) without SubjectAlternativeNameRetriever \nAs I stated before, I can copy 5 required classes from geronimo.apache.org to Tomcat baseline if you do not have objections.\nPlease find attached diff for asf/tomcat/trunk\nMy questions / Action items:\n1)\tI do not like the place that I use now to call to createUserIdentifierRetriever method\nI want to call it when Realm is instantiated and all properties are set.\nI need method like afterPropertiesSet of Spring :)\nDo you have something like this for Realm?\n2)\tI need to add Javadocs for the new methods in Realm.\nI will happy for your comments.\nBest regards,\n   Michael", "id": 153109, "time": "2012-01-24T15:51:11Z", "creator": "michael_furman@hotmail.com", "creation_time": "2012-01-24T15:51:11Z", "attachment_id": null}, {"count": 12, "tags": [], "bug_id": 52500, "attachment_id": null, "id": 153173, "time": "2012-01-26T04:22:58Z", "creator": "michael_furman@hotmail.com", "creation_time": "2012-01-26T04:22:58Z", "is_private": false, "text": "Dear Mark,\nOn the second mind: if you will agree for my suggestion to provide OOTB both SubjectAlternativeNameRetriever and SubjectDnRetriever you will not need to support users transforms by full class name.\nThe SubjectAlternativeNameRetriever and SubjectDnRetriever provide all required information from x509 certificate.\nI do not believe it will be required to add transforms by users.\nI will happy for your comments.\nBest regards,\n   Michael"}, {"count": 13, "tags": [], "creator": "michael_furman@hotmail.com", "attachment_id": null, "id": 153306, "creation_time": "2012-01-30T20:27:30Z", "time": "2012-01-30T20:27:30Z", "bug_id": 52500, "text": "Dear Mark,\nI still need your inputs on my suggestions.\n1)\tI do not understand if you want to use SubjectAlternativeNameRetriever OOTB\n2)\tI do not understand if you want support user transforms by full class name.\n3)\tI do not know the best way to call to createUserNameRetriever method\n\nPlease find attached patch with the following modifications:\n1)\tUserIdentifier was replaced by UserName in all places\n2)\tDefaultSubjectDnRetriever was removed since SubjectDnRetriever with the default constructor performs the same job.\nOnce again: \n1)\tSubjectAlternativeNameRetriever and SubjectDnRetriever provide all required information from x509 certificate.\n2)\tClasses work already in production\n3)\tIt works for the following browsers: IE, FF and Chrome\n\nI will more than happy for your comments.\nBest regards,\n   Michael", "is_private": false}, {"attachment_id": 28237, "tags": [], "creator": "michael_furman@hotmail.com", "is_private": false, "count": 14, "id": 153307, "time": "2012-01-30T20:28:45Z", "bug_id": 52500, "creation_time": "2012-01-30T20:28:45Z", "text": "Created attachment 28237\nx509 java code\n\nPlease find attached patch with the following modifications:\n1)\tUserIdentifier was replaced by UserName in all places\n2)\tDefaultSubjectDnRetriever was removed since SubjectDnRetriever with the default constructor performs the same job."}, {"count": 15, "tags": [], "creator": "michael_furman@hotmail.com", "attachment_id": 28238, "id": 153308, "creation_time": "2012-01-30T20:29:50Z", "time": "2012-01-30T20:29:50Z", "bug_id": 52500, "text": "Created attachment 28238\nThe document that describe client certificate and its configuration\n\nUserIdentifier was replaced by UserName in all places", "is_private": false}, {"count": 16, "attachment_id": null, "bug_id": 52500, "is_private": false, "id": 153347, "time": "2012-02-01T20:57:49Z", "creator": "chris@christopherschultz.net", "creation_time": "2012-02-01T20:57:49Z", "tags": [], "text": "(In reply to comment #11)\n> - I have provided a default transformation that is the same as the current code\n> - DefaultSubjectDnRetriever \n> \n> Any case, I strongly recommend to add additional transformations out of the box\n> since it will allow to use Tomcat for the client certificate authentication.\n> It will allow easy configuration to do it. See and the examples below: \n> <Realm className=\"\u2026\" x509UserIdentifierRetrieveField=\"SubjectAlternativeName\" \n> x509UserIdentifierRetrieveFieldPart=\"otherName\" />\n\nI think the idea was that you would be able to configure the realm like this:\n\n<Realm className=\"...\" x509UserIdentifierRetriever=\"....SubjectDnRetriever\" />\n\n(Where my example shown above is the default)\n\nThat way, the x509UserItentifierRetriever can support whatever requirements are necessary in the deployment environment, rather than having a large list of attributes for RealmBase to juggle-around.\n\n> I also can contribute the attached x509Configuration.docx for better\n> explanation.\n\nIn the future, please provide more democratic documentation. For instance, plain-text or OpenDocument format. Plain text is better because it does not require a viewer external to the we browser.\n\n> In addition, I strongly recommend to add out of the box\n> SubjectAlternativeNameRetriever.\n\nLet's get the interface nailed-down first, then we can implement as many UserIdentifierRetrievers as are appropriate."}, {"count": 17, "tags": [], "bug_id": 52500, "attachment_id": null, "text": "Dear Christopher,\nThank you for your comments!\nI need couple of clarifications\n1)\tI do not like the place that I use now to call to createUserIdentifierRetriever method\nI want to call it when Realm is instantiated and all properties are set.\nI need method like afterPropertiesSet of Spring or like javax.annotation.PostConstruct.\nDo you have something like this for Realm?\n2)\n>In the future, please provide more democratic documentation. For instance,\n>plain-text or OpenDocument format. Plain text is better because it does not\n>require a viewer external to the we browser.\n\nHow can I provide a plain text together with pictures?\nDo you know a tool for conversion from MS-Word documents to OpenDocument format?\n I will more than happy for your comments.\nBest regards,\n   Michael", "id": 153376, "time": "2012-02-02T18:31:36Z", "creator": "michael_furman@hotmail.com", "creation_time": "2012-02-02T18:31:36Z", "is_private": false}, {"count": 18, "tags": [], "bug_id": 52500, "is_private": false, "text": "(In reply to comment #17)\n> 1)    I do not like the place that I use now to call to\n> createUserIdentifierRetriever method\n> I want to call it when Realm is instantiated and all properties are set.\n> I need method like afterPropertiesSet of Spring or like\n> javax.annotation.PostConstruct.\n> Do you have something like this for Realm?\n\nRealmBase (which you should be using) implements the Lifecycle interface which gets all kinds of notifications about lifecycle events. Read the javadoc for that interface to see what event is most appropriate in your estimation.\n\n> 2)\n> >In the future, please provide more democratic documentation. For instance,\n> >plain-text or OpenDocument format. Plain text is better because it does not\n> >require a viewer external to the we browser.\n> \n> How can I provide a plain text together with pictures?\n\nMultiple attachments?\n\n> Do you know a tool for conversion from MS-Word documents to OpenDocument\n> format?\n\nOpenOffice.org, LibreOffice, or just about any software that can read Microsoft file formats and write-out OpenDocument. They are pretty much all completely free to download and use.", "id": 153406, "time": "2012-02-03T14:48:40Z", "creator": "chris@christopherschultz.net", "creation_time": "2012-02-03T14:48:40Z", "attachment_id": null}, {"count": 19, "attachment_id": 28308, "bug_id": 52500, "is_private": false, "id": 153714, "time": "2012-02-13T07:50:05Z", "creator": "michael_furman@hotmail.com", "creation_time": "2012-02-13T07:50:05Z", "tags": [], "text": "Created attachment 28308\nx509 java code"}, {"count": 20, "attachment_id": 28309, "bug_id": 52500, "is_private": false, "id": 153715, "time": "2012-02-13T07:51:03Z", "creator": "michael_furman@hotmail.com", "creation_time": "2012-02-13T07:51:03Z", "tags": [], "text": "Created attachment 28309\nThe document that describe client certificate and its configuration"}, {"count": 21, "attachment_id": null, "creator": "michael_furman@hotmail.com", "is_private": false, "id": 153716, "time": "2012-02-13T07:51:50Z", "bug_id": 52500, "creation_time": "2012-02-13T07:51:50Z", "tags": [], "text": "Dear Christopher,\nSorry for the delay!\nPlease find attached patch that provide OOTB UserNameRetriever that retrieve the user name from SubjectDN without any additional dependency.\nI have added the UserNameRetrieverDecorator class that allows to load the user provided UserNameRetriever. In addition, I have added the UserNameRetrieverConfiguration interface that allow to configure the user provided UserNameRetriever\nPlease find the attached html file \u2013 I promise to convert it to the simple txt file when the patch fill be finalized.\n Waiting for your comments.\n\nBest regards,\n   Michael"}, {"count": 22, "tags": [], "bug_id": 52500, "attachment_id": null, "id": 153754, "creation_time": "2012-02-13T20:51:40Z", "time": "2012-02-13T20:51:40Z", "creator": "chris@christopherschultz.net", "text": "> Please find attached patch that provide OOTB UserNameRetriever that retrieve\n> the user name from SubjectDN without any additional dependency.\n\nThat looks great.\n\n> I have added the UserNameRetrieverDecorator class that allows to load the user\n> provided UserNameRetriever. In addition, I have added the\n> UserNameRetrieverConfiguration interface that allow to configure the user\n> provided UserNameRetriever\n\nI'm not sure why either of these are necessary. I think that UserNameRetriever (maybe a better name would be X509UserNameRetriever now that I think about it) interface, the SubjectDNRetriever, and minimal changes to RealmBase.\n\nNote that no changes are required to the Realm interface: the selection of a UserNameRetriever is an implementation detail that can safely be left in RealmBase.\n\n> Please find the attached html file \u2013 I promise to convert it to the simple txt\n> file when the patch fill be finalized.\n\nThe best thing to do is to have a decent patch against the Tomcat configuration documentation. Look at the file webapps/docs/config/realm.xml for the source to the current \"Realm\" configuration page: that's the proper place to document the new configuration attributes and describe how they can be used. Also, the javadocs should contain similar information (although obviously not XML-related because XML isn't part of the API itself). Basically, no documentation should be required that isn't part of your patch.\n\nI'm happy to commit your patch with the above changes. If you'd like to take another crack at an updated patch, that's fine, too. If you do submit another one, please don't include \"@author\" tags in the source files: it's been our policy for some time not to include @author tags, though there certainly are many in the code that have been there for a long time and might not be purged just because nobody cares enough to do so. Don't worry, you'll get your name into the change log :)", "is_private": false}, {"count": 23, "tags": [], "text": "Dear Christopher,\nThank you for the fast reply!\n\n>That looks great.\nThanks!\n\n\n\n>I'm not sure why either of these are necessary. \n>I think that UserNameRetriever (maybe a better name \n>would be X509UserNameRetriever now that I think about it)\n>interface, the SubjectDNRetriever, and minimal changes to RealmBase.\n\n\nI am confused. According to my understanding, we want to provide the ability to use a user provided X509UserNameRetriever.\n\nThe purpose of UserNameRetrieverDecorator is to return the user name by the default X509UserNameRetriever if the X509UserNameRetriever provided by a user will return the empty user name.\n\nI can move the UserNameRetrieverDecorator code to RealmBase, but I think it is clearer if it is in the different class.\n\nPlease tell me what you think about it.\n\n\nRegarding UserNameRetrieverConfiguration \u2013 it allow easy configuration of a user provided X509UserNameRetriever.\n\nI think it is very useful if you create your own X509UserNameRetriever.\nPlease tell me what you think about it.\n\n\n\n\n>Note that no changes are required to the Realm interface: the selection of a\n>UserNameRetriever is an implementation detail that can safely be left in\n>RealmBase.\n\nOk, got it.\n\n> If you do submit another one, please don't include \n>\"@author\" tags in the source files:\n\nI will provide another patch upon your comments without the @author tag and with X509UserNameRetriever name.\n\n\n\n\n>Look at the file webapps/docs/config/realm.xml for the source to\n>the current \"Realm\" configuration page:\n> that's the proper place to document the new configuration \n> attributes and describe how they can be used.\n\nOk, I will do it. I think to add the new configuration attributes into the Common Attributes section.\n\nPlease tell me what you think about it.\n\n\n\n\n>Basically, no documentation should be required \n>that isn't part of your patch.\n\n\nSo, I will not provide the client certificate description. Correct?\nWaiting for your comments.\n\nBest regards,\n   Michael", "is_private": false, "id": 153763, "creator": "michael_furman@hotmail.com", "time": "2012-02-14T08:00:19Z", "bug_id": 52500, "creation_time": "2012-02-14T08:00:19Z", "attachment_id": null}, {"count": 24, "tags": [], "text": "Michael,\n> >I'm not sure why either of these are necessary. \n> >I think that UserNameRetriever (maybe a better name \n> >would be X509UserNameRetriever now that I think about it)\n> >interface, the SubjectDNRetriever, and minimal changes to RealmBase.\n> \n> I am confused. According to my understanding, we want to provide the ability to\n> use a user provided X509UserNameRetriever.\n> \n> The purpose of UserNameRetrieverDecorator is to return the user name by the\n> default X509UserNameRetriever if the X509UserNameRetriever provided by a user\n> will return the empty user name.\n\nI think that any X509UserNameRetriever should be required to provide something that is non-null. There's no reason for \"client code\" not to extend SubjectDNRetriever and simply delegate to the superclass if the name isn't otherwise found. I don't think it's necessary to provide that fallback logic in Tomcat itself: it the user is going to provide an implementation of an X509UserNameRetriever, then it should be *the* implementation that is used, not one of several that Tomcat has to manage.\n\n> Regarding UserNameRetrieverConfiguration \u2013 it allow easy configuration of a\n> user provided X509UserNameRetriever.\n\nI think all we need is a single method in the RealmBase class that can accept the name of the class. The default is SubjectDNRetriever, but the user can set it to whatever they want.\n\n> I think it is very useful if you create your own X509UserNameRetriever.\n\nI'm not sure what it adds.\n\n> >Basically, no documentation should be required \n> >that isn't part of your patch.\n> \n> So, I will not provide the client certificate description. Correct?\n> Waiting for your comments.\n\nYou don't have to introduce the concept of client certificates, no.\n\nI think it's obvious to anyone who is reading this type of documentation what is going on: you are making it possible to customize the information used from the client certificate to produce a username that Tomcat uses.", "attachment_id": null, "id": 153784, "creator": "chris@christopherschultz.net", "time": "2012-02-14T17:49:48Z", "bug_id": 52500, "creation_time": "2012-02-14T17:49:48Z", "is_private": false}, {"count": 25, "tags": [], "creator": "michael_furman@hotmail.com", "attachment_id": 28348, "id": 153909, "time": "2012-02-18T08:38:14Z", "bug_id": 52500, "creation_time": "2012-02-18T08:38:14Z", "is_private": false, "text": "Created attachment 28348\nx509 java code\n\nx509 java code\nsvn diff at trunk\\java"}, {"count": 26, "tags": [], "text": "Created attachment 28349\nRealm configuration document\n\nRealm configuration document\nsvn diff at trunk\\webapps", "is_private": false, "id": 153910, "creator": "michael_furman@hotmail.com", "time": "2012-02-18T08:39:14Z", "bug_id": 52500, "creation_time": "2012-02-18T08:39:14Z", "attachment_id": 28349}, {"count": 27, "tags": [], "bug_id": 52500, "attachment_id": null, "id": 153911, "creation_time": "2012-02-18T08:39:43Z", "time": "2012-02-18T08:39:43Z", "creator": "michael_furman@hotmail.com", "text": "Dear Christopher,\nThank you for your comments!\nPlease find attached patch.\n1)\tI have renamed my classes to X509UserNameRetriever and to X509SubjectDnRetriever\n2)\tThe Realm interface is reverted\n3)\tAll code is moved to the RealmBase class\nI have updated the realm document \u2013 please find attachment.\nBest regards,\n   Michael", "is_private": false}, {"count": 28, "attachment_id": null, "creator": "michael_furman@hotmail.com", "is_private": false, "id": 154123, "time": "2012-02-24T19:00:50Z", "bug_id": 52500, "creation_time": "2012-02-24T19:00:50Z", "tags": [], "text": "Dear Christopher,\nDid you see my patch?\nDo you have any comments?\nBest regards,\n   Michael"}, {"count": 29, "tags": [], "bug_id": 52500, "attachment_id": 28386, "text": "Created attachment 28386\nx509 java code\n\nI have changed x509UserNameRetrieveConfiguration to x509UserNameRetrieverConfiguration\ndiff at trunk\\java", "id": 154261, "time": "2012-02-26T20:38:32Z", "creator": "michael_furman@hotmail.com", "creation_time": "2012-02-26T20:38:32Z", "is_private": false}, {"attachment_id": 28387, "tags": [], "bug_id": 52500, "text": "Created attachment 28387\nRealm configuration\n\nI have changed x509UserNameRetrieveConfiguration to x509UserNameRetrieverConfiguration\ndiff at trunk\\webapps", "count": 30, "id": 154262, "time": "2012-02-26T20:39:48Z", "creator": "michael_furman@hotmail.com", "creation_time": "2012-02-26T20:39:48Z", "is_private": false}, {"count": 31, "tags": [], "bug_id": 52500, "attachment_id": null, "id": 154263, "time": "2012-02-26T20:40:43Z", "creator": "michael_furman@hotmail.com", "creation_time": "2012-02-26T20:40:43Z", "is_private": false, "text": "Dear Christopher,\nSometimes it is better to wait :)\nI have updated the patch.\nIt was typo in the name. I have changed x509UserNameRetrieveConfiguration to x509UserNameRetrieve<b>r</b>Configuration\nWill happy for your comments.\nBest regards,\n   Michael"}, {"count": 32, "tags": [], "creator": "michael_furman@hotmail.com", "attachment_id": null, "id": 154382, "time": "2012-02-29T20:05:29Z", "bug_id": 52500, "creation_time": "2012-02-29T20:05:29Z", "is_private": false, "text": "Dear Christopher,\nDid you see my patch?\nDo you have any comments?\nBest regards,\n   Michael"}, {"count": 33, "tags": [], "bug_id": 52500, "attachment_id": null, "id": 154704, "time": "2012-03-08T17:52:52Z", "creator": "chris@christopherschultz.net", "creation_time": "2012-03-08T17:52:52Z", "is_private": false, "text": "Michael,\n\nI've applied a simplified patch based upon yours. The differences are:\n\n1. No 'X509UsernameRetrieverConfiguration' attribute. This can be handled with a custom class instead of the more complicated proposed configuration.\n\n2. X509SubjectDNRetriever trivially returns cert.getSubjectDN().getName(), since the above change was made.\n\nI will likely be adding a form of /your/ X509SubjectDNUsernameRetriever class that is intended to be subclassed to provide the name of the SubjectDN attribute you'd like to use.\n\nFixed in trunk in r1298476.\nFixed in 7.0.x in r1298479. Will be included in 7.0.27.\nProposed for 6.0.x."}, {"count": 34, "tags": [], "creator": "michael_furman@hotmail.com", "attachment_id": 28450, "is_private": false, "id": 154807, "time": "2012-03-11T19:47:02Z", "bug_id": 52500, "creation_time": "2012-03-11T19:47:02Z", "text": "Created attachment 28450\nSuggested patch for x509 configuration"}, {"count": 35, "tags": [], "bug_id": 52500, "attachment_id": null, "text": "Dear Christopher,\nThank you for the patch!\nAny case, I will happy if you will change the X509SubjectDnRetriever class to X509DefaultSubjectDnRetriever. In this case I will be able to use the X509SubjectDnRetriever name for my class. It will help me a lot.\nPlease do it for me :)\nBTW, when 7.0.27 will be released?\n>No 'X509UsernameRetrieverConfiguration' attribute. This can be handled with\n>a custom class instead of the more complicated proposed configuration.\n\nI am not sure that I agree with your suggestion :)\nIt is not possible to create a dedicated class for all possible values. The full X509SubjectDnRetriever implementation required the additional configuration.\nI will ask to consider once again to add the x509UsernameRetrieverConfiguration as in the provided patch.\nIn this case X509UsernameRetriever provided by the classname (e.g. the full X509SubjectDnRetriever implementation) will be able to use the required configuration.\nIf you will not agree with the provided patch \u2013 I will need to change the implementation of the full X509SubjectDnRetriever implementation to read the configuration form the dedicated properties file.\nIt is not nice to have two configurations in the same Tomcat, but I will not have other option :(\nI am waiting for your reply.\nBest regards,\n   Michael", "id": 154808, "time": "2012-03-11T19:48:23Z", "creator": "michael_furman@hotmail.com", "creation_time": "2012-03-11T19:48:23Z", "is_private": false}, {"count": 36, "tags": [], "bug_id": 52500, "is_private": false, "id": 154916, "creation_time": "2012-03-14T19:17:59Z", "time": "2012-03-14T19:17:59Z", "creator": "michael_furman@hotmail.com", "text": "Dear Christopher,\nI will really appreciate if you will rename the X509SubjectDnRetriever class to X509DefaultSubjectDnRetriever.\nPlease, please do it for me \u2013 it take about 3 min to do it but will help me a lot.\nBTW, when 7.0.27 will be released?\nBest regards,\n   Michael", "attachment_id": null}, {"count": 37, "attachment_id": null, "bug_id": 52500, "is_private": false, "id": 154952, "time": "2012-03-15T19:37:54Z", "creator": "chris@christopherschultz.net", "creation_time": "2012-03-15T19:37:54Z", "tags": [], "text": "(In reply to comment #36)\n> Dear Christopher,\n> I will really appreciate if you will rename the X509SubjectDnRetriever class to\n> X509DefaultSubjectDnRetriever.\n> Please, please do it for me \u2013 it take about 3 min to do it but will help me a\n> lot.\n\nI'm -1 on re-naming that class, since it does just what it says: it returns the entire SubjectDN as the username: it's not a \"default\". I would think a better name for a class that takes part of the SubjectDN would be X509SubjectDNFieldRetriever.\n\n> BTW, when 7.0.27 will be released?\n\nWhen it's ready.\n\n7.0.23 was released 2011-11-25\n7.0.24 was not released because it was broken\n7.0.25 was released 2012-01-21\n7.0.26 was released 2012-02-22\n\nI would expect that 7.0.27 will be released within the next 30 days: Mark has done a great job rolling regular releases."}, {"count": 38, "tags": [], "creator": "knst.kolinko@gmail.com", "text": "Ported to 6.0 in r1345575 and will be in 6.0.36", "id": 159642, "time": "2012-06-02T21:08:46Z", "bug_id": 52500, "creation_time": "2012-06-02T21:08:46Z", "is_private": false, "attachment_id": null}]