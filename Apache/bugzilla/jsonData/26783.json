[{"count": 0, "tags": [], "bug_id": 26783, "attachment_id": null, "is_private": false, "id": 51973, "time": "2004-02-09T05:50:51Z", "creator": "claudio@pracilio.com", "creation_time": "2004-02-09T05:50:51Z", "text": "Uploading files > 8K fails ...see the stack trace below.\n\nTesting Configuration:\nServer OS:  RedHat 7.3\nTomcat: 5.0.16\nApache 2.0.45 with mod_jk2\n\nNote that uploading files directly to Tomcat works as expected. However, when \ngoing through Apache and the mod_jk2 connector, only files less than 8Kb \nupload successfully. \n\nThis is the server.xml configuration snippet for the connector:\n   <Connector port=\"7204\"\n               maxThreads=\"150\" minSpareThreads=\"25\" maxSpareThreads=\"75\"\n               enableLookups=\"false\" redirectPort=\"8443\" acceptCount=\"100\"\n               debug=\"0\" connectionTimeout=\"20000\" \n               disableUploadTimeout=\"true\" />\n\n\nThe stack-trace for the upload failure is as follows:\n\n[Sat Feb 07 01:29:35 2004] ( info ) [jk_jni_aprImpl.c (509)]  jkInvoke() \ncomponent dispatch 0 6 0x4d70da8c\nException in thread \"TP-Processor3\" java.lang.ArrayIndexOutOfBoundsException\n        at org.apache.jk.apr.AprImpl.jkInvoke(Native Method)\n        at org.apache.jk.common.JniHandler.nativeDispatch(JniHandler.java:304)\n        at org.apache.jk.common.ChannelUn.receive(ChannelUn.java:224)\n        at org.apache.jk.common.ChannelUn.invoke(ChannelUn.java:301)\n        at org.apache.jk.common.JkInputStream.receive(JkInputStream.java:289)\n        at org.apache.jk.common.HandlerRequest.decodeRequest\n(HandlerRequest.java:528)\n        at org.apache.jk.common.HandlerRequest.invoke(HandlerRequest.java:365)\n        at org.apache.jk.common.ChannelUn.processConnection(ChannelUn.java:286)\n        at org.apache.jk.common.AprConnection.runIt(ChannelUn.java:347)\n        at org.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run\n(ThreadPool.java:677)\n        at java.lang.Thread.run(Thread.java:536)\nFeb 7, 2004 1:29:35 AM org.apache.jk.common.MsgAjp processHeader\nSEVERE: BAD packet signature 0\n00 00 00 00                                      | ....\n[Sat Feb 07 01:29:35 2004] ( info ) [jk_jni_aprImpl.c (470)]  jkInvoke() \ninvoke 4d70da8c \n[Sat Feb 07 01:29:35 2004] ( info ) [jk_jni_aprImpl.c (470)]  jkInvoke() \ninvoke 4d70da8c \n[Sat Feb 07 01:29:35 2004] ( info ) [jk_jni_aprImpl.c (509)]  jkInvoke() \ncomponent dispatch 0 6 0x4d70da8c\nException in thread \"TP-Processor3\" java.lang.ArrayIndexOutOfBoundsException\n        at org.apache.jk.apr.AprImpl.jkInvoke(Native Method)\n        at org.apache.jk.common.JniHandler.nativeDispatch(JniHandler.java:304)\n        at org.apache.jk.common.ChannelUn.receive(ChannelUn.java:224)\n        at org.apache.jk.common.ChannelUn.invoke(ChannelUn.java:301)\n        at org.apache.jk.common.JkInputStream.receive(JkInputStream.java:289)\n        at org.apache.jk.common.JkInputStream.refillReadBuffer\n(JkInputStream.java:362)\n        at org.apache.jk.common.JkInputStream.doRead(JkInputStream.java:272)\n        at org.apache.jk.server.JkCoyoteHandler.doRead\n(JkCoyoteHandler.java:279)\n        at org.apache.coyote.Request.doRead(Request.java:457)\n        at org.apache.coyote.tomcat5.InputBuffer.realReadBytes\n(InputBuffer.java:317)\n        at org.apache.tomcat.util.buf.ByteChunk.substract(ByteChunk.java:404)\n        at org.apache.coyote.tomcat5.InputBuffer.read(InputBuffer.java:332)\n        at org.apache.coyote.tomcat5.CoyoteInputStream.read\n(CoyoteInputStream.java:211)\n        at org.apache.commons.fileupload.MultipartStream.discardBodyData\n(MultipartStream.java:651)\n        at org.apache.commons.fileupload.MultipartStream.skipPreamble\n(MultipartStream.java:690)\n        at org.apache.commons.fileupload.FileUploadBase.parseRequest\n(FileUploadBase.java:339)\n        at \norg.apache.struts.upload.CommonsMultipartRequestHandler.handleRequest\n(CommonsMultipartRequestHandler.java:233)\n        at org.apache.struts.util.RequestUtils.populate(RequestUtils.java:1209)\n        at org.apache.struts.action.RequestProcessor.processPopulate\n(RequestProcessor.java:821)\n        at org.apache.struts.action.RequestProcessor.process\n(RequestProcessor.java:254)\n        at org.apache.struts.action.ActionServlet.process\n(ActionServlet.java:1482)\n        at org.apache.struts.action.ActionServlet.doPost\n(ActionServlet.java:525)\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:763)\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:856)\n        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter\n(ApplicationFilterChain.java:284)\n        at org.apache.catalina.core.ApplicationFilterChain.doFilter\n(ApplicationFilterChain.java:204)\n        at org.apache.catalina.core.StandardWrapperValve.invoke\n(StandardWrapperValve.java:256)\n        at org.apache.catalina.core.StandardValveContext.invokeNext\n(StandardValveContext.java:151)\n        at org.apache.catalina.core.StandardPipeline.invoke\n(StandardPipeline.java:564)\n        at org.apache.catalina.core.StandardContextValve.invokeInternal\n(StandardContextValve.java:245)\n        at org.apache.catalina.core.StandardContextValve.invoke\n(StandardContextValve.java:199)\n        at org.apache.catalina.core.StandardValveContext.invokeNext\n(StandardValveContext.java:151)\n        at org.apache.catalina.core.StandardPipeline.invoke\n(StandardPipeline.java:564)\n        at org.apache.catalina.core.StandardHostValve.invoke\n(StandardHostValve.java:195)\n        at org.apache.catalina.core.StandardValveContext.invokeNext\n(StandardValveContext.java:151)\n        at org.apache.catalina.valves.ErrorReportValve.invoke\n(ErrorReportValve.java:164)\n        at org.apache.catalina.core.StandardValveContext.invokeNext\n(StandardValveContext.java:149)\n        at org.apache.catalina.core.StandardPipeline.invoke\n(StandardPipeline.java:564)\n        at org.apache.catalina.core.StandardEngineValve.invoke\n(StandardEngineValve.java:156)\n        at org.apache.catalina.core.StandardValveContext.invokeNext\n(StandardValveContext.java:151)\n        at org.apache.catalina.core.StandardPipeline.invoke\n(StandardPipeline.java:564)\n        at org.apache.catalina.core.ContainerBase.invoke\n(ContainerBase.java:972)\n        at org.apache.coyote.tomcat5.CoyoteAdapter.service\n(CoyoteAdapter.java:211)\n        at org.apache.jk.server.JkCoyoteHandler.invoke\n(JkCoyoteHandler.java:309)\n        at org.apache.jk.common.HandlerRequest.invoke(HandlerRequest.java:387)\n        at org.apache.jk.common.ChannelUn.processConnection(ChannelUn.java:286)\n        at org.apache.jk.common.AprConnection.runIt(ChannelUn.java:347)\n        at org.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run\n(ThreadPool.java:677)\n        at java.lang.Thread.run(Thread.java:536)\nFeb 7, 2004 1:29:35 AM org.apache.struts.action.RequestProcessor \nprocessException\nWARNING: Unhandled Exception thrown: class java.lang.NullPointerException\n[Sat Feb 07 01:29:35 2004] ( info ) [jk_jni_aprImpl.c (470)]  jkInvoke() \ninvoke 4d70da8c \n\n\n\n\nRegards,\n\nClaudio"}, {"count": 1, "tags": [], "bug_id": 26783, "attachment_id": null, "is_private": false, "id": 51978, "time": "2004-02-09T08:58:06Z", "creator": "remm@apache.org", "creation_time": "2004-02-09T08:58:06Z", "text": "Ok. So how about:\n- mentioning that you're using JNI\n- C&P the right connector declaration (and attaching your jk2.properties and\nworkers2.properties would be a lot more useful)\n- if it doesn't work, try a regular socket and mod_jk 1.2.5 instead: unless\nyou're using a CVS build for mod_jk 2, the code is rather out of date"}, {"count": 2, "tags": [], "bug_id": 26783, "attachment_id": null, "is_private": false, "id": 52003, "time": "2004-02-09T18:07:01Z", "creator": "claudio@pracilio.com", "creation_time": "2004-02-09T18:07:01Z", "text": "Thank you for your suggestions.\n\nApologies for not pasting the correct Connector. Here is the connector snippet \nfrom one of my tomcat instances.\n    <Connector port=\"7223\" \n               enableLookups=\"false\" debug=\"0\"\n               protocol=\"AJP/1.3\" />\n\n\n\nI was using the following configuration in workers.properties:\n\n----workers2.properties snippet-----\n################################################\n# Channel: Unix Socket to quokka:7204\n################################################\n[channel.un:/home/tuser/tomcat/7204/work/jk2.socket]\ninfo=A channel connecting to quokka:7204 via unix socket\ntomcatId=quokka_7204\nlb_factor=1\nlbfactor=1\ndebug=0\n\n################################################\n# Channel: Unix Socket to quokka:7224\n################################################\n[channel.un:/home/tuser/tomcat/7224/work/jk2.socket]\ninfo=A channel connecting to quokka:7224 via unix socket\ntomcatId=quokka_7224\nlb_factor=1\nlbfactor=1\ndebug=0\n----end of workers2.properties snippet-----\n\nAnd the jk2.properties settings for one of the tomcat instances was...\n----jk2.properties snippet-----\n# list of needed handlers.\nhandler.list=apr,channelUnix,request\n\n# State where the UNIX domain socket is located\nchannelUnix.file=/home/tuser/tomcat/7224/work/jk2.socket\n\n# Dynamic library\napr.NativeSo=/opt/apache/server/lib/libjkjni.so\n\n# Request handler for honoring any authorization done by apache\nrequest.tomcatAuthentication=false\n----end of jk2.properties snippet-----\n\n\nAs you may see, I was using the AF_UNIX socket communication transport \nmechanism via the channelUnix settings.\n\nI have changed it to use the socket method via the channelSocket settings, and \nthe file-upload works now. \n\nFYI: My settings are now:\n----workers2.properties snippet-----\n##############################\n# FOR SOCKET COMMUNICATION\n##############################\n[channel.socket:quokka:7203]\ninfo=Ajp13 forwarding over socket\ndebug=0\ntomcatId=quokka_7204\nport=7203\nhost=192.168.2.10\n\n\n##############################\n# FOR SOCKET COMMUNICATION\n##############################\n[channel.socket:quokka:7223]\ninfo=Ajp13 forwarding over socket\ndebug=0\ntomcatId=quokka_7224\nport=7223\nhost=192.168.2.10\n----end of workers2.properties snippet-----\n\nAnd the new jk2.properties settings are...\n----jk2.properties snippet-----\n# list of needed handlers.\nhandler.list=apr,channelSocket,request\n\n# Override the default port for the socketChannel\nchannelSocket.port=7203\n\n# Dynamic library\napr.NativeSo=/opt/apache/server/lib/libjkjni.so\n\n# Request handler for honoring any authorization done by apache\nrequest.tomcatAuthentication=false\n----end of jk2.properties snippet-----\n\n\nI'm a little surprised that you mentioned that the code is somewhat out-of-\ndate. But then again, my source for the binaries was not via CVS, but a direct \ndownload of the binaries.\n\nThanks again for your assistance. I'll stick with the Socket comminication \nmechanism.\n\n\nRegards,\n\nClaudio"}, {"count": 3, "tags": [], "bug_id": 26783, "attachment_id": null, "id": 52005, "time": "2004-02-09T18:57:35Z", "creator": "remm@apache.org", "creation_time": "2004-02-09T18:57:35Z", "is_private": false, "text": "The last jk2 binaries is 14 months old (hence my comments), with a new release\ncoming soon (along with the next Tomcat 5 release). I recommend testing using\nthe code in the Tomcat source bundle (in jakarta-tomcat-connectors/jk)."}, {"count": 4, "tags": [], "bug_id": 26783, "attachment_id": null, "id": 58489, "time": "2004-06-01T19:03:32Z", "creator": "yoavs@computer.org", "creation_time": "2004-06-01T19:03:32Z", "is_private": false, "text": "Please test JK 2.0.4 and Tomcat 5.0.25.  If the error persists, feel free to \nreopen this item with exact details.  But for now, since I think it's been \nfixed, I'm closing this item."}]