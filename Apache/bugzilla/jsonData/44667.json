[{"count": 0, "tags": [], "text": "I have two servers. \n\nThe first one is the web server that has a Apache/2.2.4 (Ubuntu). \nI have a second server, the application server. This one has the apache-tomcat-5.5.26.  \nThe http requests goes into apache and are redirected to the tomcat using the AJP connector. \n\nI'm using the commons-fileupload-1.1.1.jar and the commons-io-1.3.1.jar to handle file uploads.\nSometimes when a user uploads a file using a HTML form the applications throws the following exception:\n\norg.springframework.web.multipart.MultipartException: Could not parse multipart servlet request; nested exception is org.apache.commons.fileupload.FileUploadException: Processing of multipart/form-data request failed. Stream ended unexpectedly\nCaused by: org.apache.commons.fileupload.FileUploadException: Processing of multipart/form-data request failed. Stream ended unexpectedly\n\tat org.apache.commons.fileupload.FileUploadBase.parseRequest(FileUploadBase.java:384)\n\tat org.apache.commons.fileupload.servlet.ServletFileUpload.parseRequest(ServletFileUpload.java:116)\n\tat org.springframework.web.multipart.commons.CommonsMultipartResolver.resolveMultipart(CommonsMultipartResolver.java:117)\n\tat org.springframework.web.servlet.DispatcherServlet.checkMultipart(DispatcherServlet.java:943)\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:797)\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:755)\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:396)\n\tat org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:360)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:710)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:803)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:269)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:188)\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:213)\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:174)\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:525)\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:117)\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:108)\n\tat org.apache.catalina.valves.FastCommonAccessLogValve.invoke(FastCommonAccessLogValve.java:482)\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:174)\n\tat org.apache.jk.server.JkCoyoteHandler.invoke(JkCoyoteHandler.java:200)\n\tat org.apache.jk.common.HandlerRequest.invoke(HandlerRequest.java:283)\n\tat org.apache.jk.common.ChannelSocket.invoke(ChannelSocket.java:773)\n\tat org.apache.jk.common.ChannelSocket.processConnection(ChannelSocket.java:703)\n\tat org.apache.jk.common.ChannelSocket$SocketConnection.runIt(ChannelSocket.java:895)\n\tat org.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run(ThreadPool.java:689)\n\tat java.lang.Thread.run(Thread.java:595)\n\nI already increased the timeout on the apache. The AJP connector in the tomcat is configured like this:\n\n <Connector port=\"8010\" enableLookups=\"false\" redirectPort=\"8443\" protocol=\"AJP/1.3\" />\n\nIn the commons-fileupload i set the maxfilesize to 10Mb. This happens with files  with size lower than 10Mb. Sometimes with the same file of 4MB it works and then it doesn't.", "attachment_id": null, "bug_id": 44667, "id": 114914, "time": "2008-03-24T05:16:19Z", "creator": "pedro@eae.pt", "creation_time": "2008-03-24T05:16:19Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 44667, "attachment_id": null, "text": "The mod version is mod_jk-1.2.26-httpd-2.2.6.so", "id": 114915, "time": "2008-03-24T05:25:34Z", "creator": "pedro@eae.pt", "creation_time": "2008-03-24T05:25:34Z", "is_private": false}, {"count": 2, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "is_private": false, "id": 114918, "time": "2008-03-24T08:25:04Z", "bug_id": 44667, "creation_time": "2008-03-24T08:25:04Z", "text": "That it sometimes works and sometimes doesn't suggests that a network issue is more likely than a Tomcat or mod_jk one.\n\nThere isn't enough information in this report to start investigating. You need to collect more information to figure out what is going on and the users list is the place to get help doing that.\n\nAs a starting point, the things I would look at are:\n- does it still happen if you take Spring out of the mix?\n- does it still happen if you go direct to Tomcat?\n- does it happen more consistently with larger files (remove the upload limit to test)\n- that you are using a mod_jk version compiled for 2.2.6 with 2.2.4 shouldn't matter but you should build your own version to be sure\n- use the latest commons libraries\n- turn on mod_jk debug logging - Nb there will be lots of output\n\nYou will be able to get help with most of the above on the users mailing list. If your investigations point to a Tomcat issue (and ideally you should have a reproducible test case) then please re-open this issue and the appropriate information."}]