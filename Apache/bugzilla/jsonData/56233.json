[{"count": 0, "attachment_id": null, "creator": "thomaspeterhouston@icloud.com", "is_private": false, "id": 173694, "time": "2014-03-07T18:39:01Z", "bug_id": 56233, "creation_time": "2014-03-07T18:39:01Z", "tags": [], "text": "When Apache attempts to verify the revocation status of a digital certificate using the OCSP, mod_ssl includes a nonce extension in all requests. This should be made a configurable option within mod_ssl."}, {"count": 1, "tags": [], "bug_id": 56233, "text": "If the OCSP request is done to support OCSPStapling, then the nonce is useless because the browser won't be able to the nonces comparison.\nIt could be removed as well. But configurable?", "id": 173699, "attachment_id": null, "creator": "erwann.abalea@keynectis.com", "creation_time": "2014-03-08T10:15:17Z", "time": "2014-03-08T10:15:17Z", "is_private": false}, {"count": 2, "tags": [], "creator": "thomaspeterhouston@icloud.com", "attachment_id": null, "id": 173700, "time": "2014-03-08T10:46:24Z", "bug_id": 56233, "creation_time": "2014-03-08T10:46:24Z", "is_private": false, "text": "This bug is to do with using mod_ssl with [RFC 2560] OCSP. Stapling is not being used in this scenario, i.e. we have configured the SSLOCSPEnable, SSLOCSPDefaultResponder and SSLOCSPOverrideResponder directives. Preference would be to have a directive such as SSLOCSPIncludeNonce, for example."}, {"count": 3, "tags": [], "bug_id": 56233, "text": "(In reply to Tom Houston from comment #2)\n> This bug is to do with using mod_ssl with [RFC 2560] OCSP. Stapling is not\n> being used in this scenario, i.e. we have configured the SSLOCSPEnable,\n> SSLOCSPDefaultResponder and SSLOCSPOverrideResponder directives. Preference\n> would be to have a directive such as SSLOCSPIncludeNonce, for example.\n\nIt's in the code which does OCSP checking when validating client certificates, yes. See also bug 41123 comment 42, where it is listed under \"Further work\".\n\nThe code which fetches responses for stapling is completely separate from this (and will never include a nonce request extension).", "id": 174100, "attachment_id": null, "creator": "asfbugz@velox.ch", "creation_time": "2014-03-26T10:46:33Z", "time": "2014-03-26T10:46:33Z", "is_private": false}, {"count": 4, "tags": [], "creator": "ylavic.dev@gmail.com", "text": "Created attachment 31445\nSSLOCSPUseQueryNonce on/off\n\nThis patch (trunk/2.4.x/2.4.9) adds the new SSLOCSPUseQueryNonce directive to enable (default) or disable the nonce in OCSP queries.\n\nTom, could you check it is working as expected?", "id": 174120, "attachment_id": 31445, "bug_id": 56233, "creation_time": "2014-03-26T21:37:30Z", "time": "2014-03-26T21:37:30Z", "is_private": false}, {"count": 5, "tags": [], "creator": "asfbugz@velox.ch", "is_private": false, "id": 174173, "attachment_id": null, "bug_id": 56233, "creation_time": "2014-03-30T08:56:10Z", "time": "2014-03-30T08:56:10Z", "text": "(In reply to Yann Ylavic from comment #4)\n> This patch (trunk/2.4.x/2.4.9) adds the new SSLOCSPUseQueryNonce directive\n> to enable (default) or disable the nonce in OCSP queries.\n\nThanks for taking this up, Yann. You also need to wrap the OCSP_check_nonce call with an \"if (sc->server->ocsp_use_query_nonce != FALSE)\" - from OpenSSL's crypto/ocsp/ocsp_ext.c:\n\n/* Check nonce validity in a request and response.\n * Return value reflects result:\n *  1: nonces present and equal.\n *  2: nonces both absent.\n *  3: nonce present in response only.\n *  0: nonces both present and not equal.\n * -1: nonce in request only.\n *\n *  For most responders clients can check return > 0.\n *  If responder doesn't handle nonces return != 0 may be\n *  necessary. return == 0 is always an error.\n */"}, {"text": "Thanks Yann/Kaspar for your help with this feature. Your support is greatly appreciated. We will try it out and report back.", "tags": [], "bug_id": 56233, "is_private": false, "count": 6, "id": 174176, "time": "2014-03-30T11:20:51Z", "creator": "thomaspeterhouston@icloud.com", "creation_time": "2014-03-30T11:20:51Z", "attachment_id": null}, {"count": 7, "tags": [], "creator": "ylavic.dev@gmail.com", "attachment_id": 31460, "text": "Created attachment 31460\nSSLOCSPUseRequestNonce on/off\n\nThanks Kaspar, I missed this point.\n\nThis new patch takes care of OCSP_check_nonce() results depending on whether we sent a nonce in the request or not.\n\nHowever I'm wondering if calling OCSP_check_nonce() is still necessary when the nonce is disabled. Could we simply bypass the call in this case?", "id": 174177, "time": "2014-03-30T12:32:09Z", "bug_id": 56233, "creation_time": "2014-03-30T12:32:09Z", "is_private": false}, {"count": 8, "tags": [], "bug_id": 56233, "attachment_id": null, "text": "(In reply to Yann Ylavic from comment #7)\n> However I'm wondering if calling OCSP_check_nonce() is still necessary when\n> the nonce is disabled. Could we simply bypass the call in this case?\n\nYes, that's what I was trying to say in comment 5, actually. First, an OCSP response shouldn't include a nonce if the request didn't have one, and second, even in the (pathological) case where it includes an \"unsolicited\" nonce (which would be complete nonsense), it's best to simply skip this check.", "id": 174179, "time": "2014-03-30T18:16:03Z", "creator": "asfbugz@velox.ch", "creation_time": "2014-03-30T18:16:03Z", "is_private": false}, {"count": 9, "tags": [], "bug_id": 56233, "text": "Created attachment 31461\nSSLOCSPUseQueryNonce on/off (v3)\n\nOK, thanks, new patch above applied in r1583191.", "id": 174180, "time": "2014-03-30T19:27:49Z", "creator": "ylavic.dev@gmail.com", "creation_time": "2014-03-30T19:27:49Z", "is_private": false, "attachment_id": 31461}, {"count": 10, "tags": [], "text": "Fixed and released in 2.4.10", "attachment_id": null, "id": 177225, "creator": "christophe.jaillet@wanadoo.fr", "time": "2014-08-18T07:46:44Z", "bug_id": 56233, "creation_time": "2014-08-18T07:46:44Z", "is_private": false}]