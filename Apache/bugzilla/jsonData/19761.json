[{"count": 0, "attachment_id": null, "bug_id": 19761, "is_private": false, "id": 36896, "time": "2003-05-08T11:40:34Z", "creator": "jkb@stian.freeserve.co.uk", "creation_time": "2003-05-08T11:40:34Z", "tags": [], "text": "Items created under the workbench are not saved in the JMX file\n\nThis applies to both the HTTP Proxy server and Simple Controllers (needed for \nuse with the new Module Controller)."}, {"count": 1, "tags": [], "bug_id": 19761, "attachment_id": null, "id": 36915, "time": "2003-05-08T18:29:08Z", "creator": "mstover1@apache.org", "creation_time": "2003-05-08T18:29:08Z", "is_private": false, "text": "Workbench is not part of the test plan, so I don't agree (without more\nconvincing) that it should be saved as part of the test plan file.  I did,\nhowever, make it easier to save items in the workbench and reload them there. \nBasically, if you save the workbench, and then reload it, it will automatically\nreload to the workbench, regardless of what the current selected node is (this\nparallels the behavior of re-opening test plans)."}, {"count": 2, "tags": [], "text": "AFAIK, the (new) Module Controller can form part of a test plan. The modules \nthat it invokes are stored as Simple Controllers under the Workbench.\n\nSo it seems to me that the workbench ought now to be saved as part of the test \nplan - otherwise surely the Module Controller needs to be changed to store its \nmodules elsewhere?\n\n[In the meantime your workround is very useful]", "attachment_id": null, "id": 36932, "creator": "jkb@stian.freeserve.co.uk", "time": "2003-05-08T21:57:16Z", "bug_id": 19761, "creation_time": "2003-05-08T21:57:16Z", "is_private": false}, {"count": 3, "tags": [], "text": "I agree that ModuleController needs a way of being able to restore it's \nreference to the controller it is pointing to after being rebuilt from a \nfile...I don't necessarily agree though that the workbench should be saved as \npart of the test plan since that defeats the idea of being able to save \nanywhere in the test tree. Also, I wouldn't have ModuleController save a copy \nof the controller that it is pointing to since that defeats the purpose of \nmodularity.\n\nHere's what I propose: ModuleController will keep a reference of the names of \nthe nodes in the search path to the controller it points to when it is \nserialized...Upon reading from file it will attempt to traverse that search \npath to point again to the same node without having to be reconnected (I agree \nit's annoying especially when you have lots of ModuleControllers in your \nTestPlan as I do). If the ModuleController is able to find the node based on \nthe node names in the search path it will reconnect itself. If not, it will \npoint to the deepest point in the search path that it can match. This is going \nto require the user to give distinct names to their controllers.\n\nI also want to give it the ability to point to controllers in your own test \nplan...This is a bit more dangerous since it could lead to more executions of \nthe controller if a user doesn't take the precautions of putting the controller \nunderneath something that can't be executed directly (either a LoopController \nwith its LoopCount set to 0 or a ThroughputController with its throughput field \nset to 0).", "is_private": false, "bug_id": 19761, "id": 36949, "time": "2003-05-09T02:39:26Z", "creator": "thads_id@yahoo.com", "creation_time": "2003-05-09T02:39:26Z", "attachment_id": null}, {"count": 4, "tags": [], "text": "There is a problem in that no test plans with module controllers can be run\nnon-gui because the workbench stuff will not be there.  It would be easier if\nmodule controller could point to a .jmx file instead of a node under the workbench.", "attachment_id": null, "id": 36965, "creation_time": "2003-05-09T11:11:30Z", "time": "2003-05-09T11:11:30Z", "creator": "mstover1@apache.org", "bug_id": 19761, "is_private": false}, {"count": 5, "tags": [], "bug_id": 19761, "attachment_id": null, "id": 37153, "time": "2003-05-14T01:59:58Z", "creator": "thads_id@yahoo.com", "creation_time": "2003-05-14T01:59:58Z", "is_private": false, "text": "Added code to ModuleController to allow it to point to controllers in the test \nplan and to attempt to resolve its pointer when it is being read from file."}]