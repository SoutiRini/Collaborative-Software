[{"count": 0, "tags": [], "bug_id": 26007, "attachment_id": null, "text": "In org.apache.jmeter.threads.JMeterThread#run():\n\n            rampUpDelay();\n            \n            if (scheduler)\n            {\n                //set the scheduler to start\n                startScheduler();\n            }\n\n\nThis means that a thread waits ramp up delay then wait until the scheduled time\ncomes. Now a schedule can be set for ThreadGroup so that all threads in a thread\ngroup start to emit a request in same time, i.e. ramp up time does not work\ncorrectly. Actually first I realized that JMeter acts like that by looking\nstatistics when testing, then looked for JMeter source codes.\n\nSince we can set a schedule for not an each Thread but a ThreadGroup,\nThreadGroup  should control a delay stems from the schedule. \n\nAdditionally, I wish to set a scheduler with relative time from start. So far\nevery time I want to (re)start the test, I have to modify each start/end time in\neach ThreadGroup... I have to make a tool to shift times in jmx to achieve\nthat.(sigh)", "id": 50296, "time": "2004-01-09T00:35:20Z", "creator": "w.fukushima@pfu.fujitsu.com", "creation_time": "2004-01-09T00:35:20Z", "is_private": false}, {"count": 1, "tags": [], "creator": "sebb@apache.org", "attachment_id": null, "id": 50462, "time": "2004-01-13T13:01:39Z", "bug_id": 26007, "creation_time": "2004-01-13T13:01:39Z", "is_private": false, "text": "I've moved the call to rampUp() after startScheduler().\n\nChanging to enhancement to deal with relative start times."}, {"count": 2, "text": "Added Startup delay to ThreadGroup synchronise panel. CLosing call.", "bug_id": 26007, "attachment_id": null, "id": 50475, "time": "2004-01-13T14:50:04Z", "creator": "sebb@apache.org", "creation_time": "2004-01-13T14:50:04Z", "tags": [], "is_private": false}]