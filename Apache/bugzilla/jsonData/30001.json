[{"count": 0, "tags": [], "creator": "iprigg@di.uoa.gr", "text": "I have tried recently to call ant through java using the ANT java API.\n\nIn order to reproduce the bug you should use the files cited below:\nThe java.class through which ant is called.\n/*\n * Created on Jul 8, 2004\n *\n * To change the template for this generated file go to\n * Window>Preferences>Java>Code Generation>Code and Comments\n */\npackage org.security.ac.utils;\n\nimport org.apache.tools.ant.Project;\nimport org.apache.tools.ant.ProjectHelper;\nimport org.apache.tools.ant.helper.ProjectHelper2;\nimport org.apache.tools.ant.PropertyHelper;\nimport java.io.File;\n\n/**\n * @author iprigg\n *\n * To change the template for this generated type comment go to\n * Window>Preferences>Java>Code Generation>Code and Comments\n */\npublic class AntInvoker {\n\t\n\tString antfile;\n\tProject antProject;\n\tPropertyHelper propertyHelper;\n\tProjectHelper projectHelper;\n\t\n\tpublic AntInvoker(String filename) {\n\t\t\n\t\tantProject=new Project();\n\t\tprojectHelper=new ProjectHelper2();\n\t\tpropertyHelper=PropertyHelper.getPropertyHelper(antProject);\n\n\t\tantfile=filename;\n\t\tFile f=new File(filename);\n\t\tantProject.init();\n\t\tprojectHelper.parse(antProject,f);\n\t}\n\t\n\n\tpublic void createServiceJar(String serviceName) {\n\t\t\n\t\tif (propertyHelper.getProperty(null,\"servicename\")==null)\n\t\t\tpropertyHelper.setNewProperty\n(null,\"servicename\",serviceName);\n\t\telse\n\t\t\tpropertyHelper.setProperty\n(null,\"servicename\",serviceName,false);\n\t\t\t\n\t\tif (propertyHelper.getProperty(null,\"securitydomain\")==null)\n\t\t\tpropertyHelper.setNewProperty\n(null,\"securitydomain\",\"java:/jaas/\"+serviceName);\n\t\telse\n\t\t\tpropertyHelper.setProperty\n(null,\"securitydomain\",\"java:/jaas/\"+serviceName,false);\n\t\t\t\n\t\tif (propertyHelper.getProperty(null,\"files2parse\")==null)\n\t\t\tpropertyHelper.setNewProperty\n(null,\"files2parse\",\"polosService2/\"+serviceName+\"Bean.java\");\n\t\telse\n\t\t\tpropertyHelper.setProperty\n(null,\"files2parse\",\"polosService2/\"+serviceName+\"Bean.java\",false);\n\t\t\t\n\t\tif (propertyHelper.getProperty(null,\"jar.name\")==null)\n\t\t\tpropertyHelper.setNewProperty\n(null,\"jar.name\",serviceName+\".jar\");\n\t\telse\n\t\t\tpropertyHelper.setProperty\n(null,\"jar.name\",serviceName+\".jar\",false);\n\n\t\tSystem.out.println(\"servicename:\"+antProject.getProperty\n(\"servicename\"));\n\t\tSystem.out.println(\"source file:\"+antProject.getProperty\n(\"files2parse\"));\n\t\tSystem.out.println(\"jar file:\"+antProject.getProperty\n(\"jar.name\"));\n\t\tSystem.out.println(\"security-Domain:\"+antProject.getProperty\n(\"securitydomain\"));\n\t\tantProject.executeTarget(\"clear\");\n\t\tantProject.executeTarget(\"jar\");\n\t}\n\n\tpublic void createAllServices() {\n\t\t\n\t\tfor (int i=1;i<=2;i++) {\n\t\t\tcreateServiceJar(\"Service\"+i);\n\t\t}\n\t}\n\t\n\tpublic static void main(String[] args) {\n\t\t\n\t\tAntInvoker ant=new AntInvoker(\"build.xml\");\n\t        ant.createAllServices();\t\t\n\t}\n\n}\n\n\nThe corresponding build.xml file is the one below:\n\n*************build.xml begin****************\n\n<project name=\"TestService\" default=\"compile\" basedir=\".\">\n   <!--\n      Give user a chance to override without editing this file \n      (and without typing -D each time they run it)\n   -->\n   <property file=\"ant.properties\" /> \n   <property name=\"Name\" value=\"Template\"/>\n   <property name=\"version\" value=\"1.1\"/>\n   \n\n   <property name=\"src.dir\" value=\"src\"/>\n   <property name=\"build.dir\" value=\"bin\"/>\n   <property name=\"build.classes.dir\" value=\"${build.dir}/classes\"/>\n   <property name=\"build.jars.dir\" value=\"${build.dir}/jars\"/>\n   <property name=\"src.ejb.dir\" value=\"${build.dir}/ejbsrc\"/>\n   <property name=\"ejb.dd.dir\" value=\"${build.dir}/META-INF\"/>\n   <property name=\"web.dd.dir\" value=\"${build.dir}/WEB-INF\"/>\n   <property name=\"xdoclet.force\" value=\"true\"/>\n   <property name=\"jboss.deploy.dir\" value=\"${jboss.home}/server/\n${jboss.configuration}/deploy\"/>\n   <property name=\"jboss.lib.dir\" value=\"${jboss.home}/server/\n${jboss.configuration}/lib\"/>\n  \n   <path id=\"base.path\">\n      <pathelement location=\"${tomcat.home}/server/lib/catalina.jar\"/>\n      <pathelement location=\"${build.dir}\" />\n      <!-- append the xdoclet path -->\n      <pathelement location=\"${xdoclet.home}/lib/xdoclet.jar\"/>\n      <!-- append the log4j path -->\n      <pathelement location=\"${jboss.home}/client/log4j.jar\" />\n      <!-- append the ant path -->\n      <pathelement location=\"${ant.home}/lib/ant.jar\" />\n      <!-- append the tools path -->\n      <pathelement location=\"${java.home}/lib/tools.jar\" />\n      <!-- append the J2EE path -->\n      <fileset dir=\"${jboss.lib.dir}\">\n      \t<include name=\"*.jar\"/>\n      </fileset>\n      <fileset dir=\"${jboss.home}/lib\">\n      \t<include name=\"*.jar\"/>\n      </fileset>\n      <fileset dir=\"${jboss.home}/client\">\n      \t<include name=\"*.jar\"/>\n      </fileset>\n   </path>   \n \n   <property name=\"class.path\" refid=\"base.path\"/>\n\n  \n    <target name=\"init\">\n      <tstamp/>\n      <mkdir dir=\"${build.classes.dir}\"/>\n      <mkdir dir=\"${build.jars.dir}\"/>\n      <mkdir dir=\"${ejb.dd.dir}\"/>\n      <mkdir dir=\"${web.dd.dir}\"/>\n      <mkdir dir=\"${src.ejb.dir}\"/>\n   </target>\n   \n\n    <!-- =================================================================== -->\n   <!-- EjbDoclet Task                                        \t\t\t\n\t-->\n   <!-- =================================================================== -->\n\n   <target name=\"generateEJBs\" depends=\"init\">\n   \t  <echo message=\"servicename=${servicename}\"/>\n   \t  <echo message=\"securitydomain=${securitydomain}\"/>\n   \t  <echo message=\"files2parse=${files2parse}\"/>\n   \t  <echo message=\"jar.name=${jar.name}\"/>\n      <taskdef name=\"ejbdoclet\" classname=\"xdoclet.ejb.EjbDocletTask\">\n\t\t<classpath refid=\"base.path\"/>\n      </taskdef>      \n      <ejbdoclet \n      \tsourcepath=\"${src.dir}\"\n      \tdestdir=\"${src.ejb.dir}\"\n        mergedir=\"${ejb.dd.dir}\"\n        classpathref=\"base.path\"\n        excludedtags=\"@version,@author,@todo\"\n\t    ejbspec=\"${ejb.version}\"\n        force=\"${xdoclet.force}\">\n\t\t<fileset dir=\"${src.dir}\" defaultexcludes=\"yes\">\n\t\t\t<include name=\"${files2parse}\"/>\n\t   \t</fileset>\n        <deploymentdescriptor \n            destdir=\"${ejb.dd.dir}\" \n            validatexml=\"false\"\n            mergedir=\"${ejb.dd.dir}\"/>    \n        <remoteinterface pattern=\"{0}Remote\" />\n        <homeinterface pattern=\"{0}Home\" />\n        <localinterface pattern=\"{0}Local\"/>\n        <localhomeinterface pattern=\"{0}HomeLocal\" />\n   \t  \t<jboss\n           version=\"${jboss.version}\"\n           securitydomain=\"${securitydomain}\"\n           xmlencoding=\"UTF-8\"\n           destdir=\"${ejb.dd.dir}\"\n           validatexml=\"false\"\n           datasource=\"${datasource.name}\"/>\n      </ejbdoclet>\n   </target>  \n\n \n   <!-- =================================================================== -->\n   <!-- Compiles the source code                                            -->\n   <!-- =================================================================== -->\n\n   <target name=\"compile\">\n      <copy file=\"${src.dir}/${files2parse}\" \ntodir=\"${src.ejb.dir}/polosService2\" overwrite=\"true\"/>\n      <javac\n         destdir=\"${build.classes.dir}\"\n         debug=\"on\"\n         deprecation=\"off\"\n         optimize=\"on\">\n         <classpath>\n           <path refid=\"base.path\"/>\n         </classpath>\n         <src>                     \n<!--\t       <path path=\"${src.dir}\"/>  -->\n\t       <path path=\"${src.ejb.dir}\"/>\n         </src>\n \t     <include name=\"**/*.java\"/>\n      </javac>\n   </target>\n     \n   \n   <!-- =================================================================== -->\n   <!-- Creates the jar archives                                            -->\n   <!-- =================================================================== -->\n   \n   <target name=\"jar\" depends=\"compile\">\n      <jar jarfile=\"${build.jars.dir}/${jar.name}\">\n         <fileset dir=\"${build.classes.dir}\">\n           <include name=\"**/*\"/>\n         </fileset>\n         <fileset dir=\"${build.dir}\"\n            includes=\"META-INF/**\">\n         </fileset>                  \n      </jar>\n   </target>\n\n\n  <target name=\"deploy\" depends=\"jar\">\n    <copy file=\"${build.jars.dir}/${jar.name}\" todir=\"${jboss.deploy.dir}\" \noverwrite=\"yes\"/>\n  </target>\n\n  <target name=\"undeploy\">\n    <delete file=\"${jboss.deploy.dir}/${jar.name}\"/>\n  </target>\n\n  <target name=\"clear\">\n    <delete>\n    \t<fileset dir = \"${build.dir}/META-INF\" includes=\"**/*\"/>\n    \t<fileset dir = \"${build.dir}/ejbsrc\" includes=\"**/*\"/>\n    \t<fileset dir = \"${build.dir}/classes\" includes=\"**/*\"/>\n    </delete>\n  </target>\n\n  <target name=\"all-in-one\">\n      <taskdef name=\"ejbdoclet\" classname=\"xdoclet.ejb.EjbDocletTask\">\n\t\t<classpath refid=\"base.path\"/>\n      </taskdef>      \n      <ejbdoclet \n      \tsourcepath=\"${src.dir}\"\n      \tdestdir=\"${src.ejb.dir}\"\n        mergedir=\"${ejb.dd.dir}\"\n        classpathref=\"base.path\"\n        excludedtags=\"@version,@author,@todo\"\n\t    ejbspec=\"${ejb.version}\"\n        force=\"${xdoclet.force}\">\n\t\t<fileset dir=\"${src.dir}\" defaultexcludes=\"yes\">\n\t\t\t<include name=\"${files2parse}\"/>\n\t   \t</fileset>\n        <deploymentdescriptor \n            destdir=\"${ejb.dd.dir}\" \n            validatexml=\"false\"\n            mergedir=\"${ejb.dd.dir}\"/>    \n        <remoteinterface pattern=\"{0}Remote\" />\n        <homeinterface pattern=\"{0}Home\" />\n        <localinterface pattern=\"{0}Local\"/>\n        <localhomeinterface pattern=\"{0}HomeLocal\" />\n   \t  \t<jboss\n           version=\"${jboss.version}\"\n           securitydomain=\"${securitydomain}\"\n           xmlencoding=\"UTF-8\"\n           destdir=\"${ejb.dd.dir}\"\n           validatexml=\"false\"\n           datasource=\"${datasource.name}\"/>\n      </ejbdoclet>  \n      <copy file=\"${src.dir}/${files2parse}\" \ntodir=\"${src.ejb.dir}/polosService2\" overwrite=\"true\"/>\n      <javac\n         destdir=\"${build.classes.dir}\"\n         debug=\"on\"\n         deprecation=\"off\"\n         optimize=\"on\">\n         <classpath>\n           <path refid=\"base.path\"/>\n         </classpath>\n         <src>                     \n<!--\t       <path path=\"${src.dir}\"/>  -->\n\t       <path path=\"${src.ejb.dir}\"/>\n         </src>\n \t     <include name=\"**/*.java\"/>\n      </javac>\n      <jar jarfile=\"${build.jars.dir}/${jar.name}\">\n         <fileset dir=\"${build.classes.dir}\">\n           <include name=\"**/*\"/>\n         </fileset>\n         <fileset dir=\"${build.dir}\"\n            includes=\"META-INF/**\">\n         </fileset>                  \n      </jar>\n  </target>\n\n</project>\n\n*************build.xml end****************\n\n\nI also used the following ant.properties file:\n\n*************ant.properties begin****************\n\n# ATTENTION: this is an example file how to overwrite settings in this project\n# Please adjust the settings to your needs.\n\ninstall.drive=d:\n\n#Set the java home\njava.home=${install.drive}/j2sdk1.4.1\n\n#Set the ant home path\nant.home=${install.drive}/apache-ant-1.6.1\n\n# Set the path to the runtime JBoss directory containing the JBoss application \nserver\n# ATTENTION: the one containing directories like \"bin\", \"client\", \"server\" etc.\njboss.home=${install.drive}/jboss-3.2.3\n\n#set the embedded tomcat home dir\ntomcat.home=${jboss.home}/tomcat-4.1.x\n\n# Set the configuration name that must have a corresponding directory under\n# <jboss.home>/server\njboss.configuration=default\n\n\n# Set the EJB version you want to use (1.1 or 2.0, see XDoclet's <ejbdoclet> \nattribute \"ejbspec\")\nejb.version=2.0\n\n# Set the path to the root directory of the XDoclet distribution (see\n# http://www.sf.net/projects/xdoclet)\nxdoclet.home=${install.drive}/xdoclet\n\n# Set the JBoss version you want to use (2.4, 3.0 etc., see XDoclet's <jboss> \nattribute \"version\")\njboss.version=3.0\n\n*************ant.properties end****************\n\nThe build.xml file is a little bit complicated but as you see in the java \nsource I only call the simple \"clear\" and \"jar\" targets. The latter calls \nthe \"compile\" target also.\nNote that in order to run the above properly you should have a \"src\" directory \nin the same level with the build.xml file, which should contain \na \"polosService2\" directory with two files:\nService1Bean.java and \nService2Bean.java.\n\nSo if you have everything in a test directory. The internal file structure \nshould look something like that:\n\n-->test--> src------------>polosService2--> Service1Bean.java \n           build.xml                        Service2Bean.java \n           ant.properties\n\nUpon running the file a bin directory is created, with several subdirectories.\n\nBased on the definitions contained in the build.xml running the program should \nnormally create 2 jars inside the bin/jars directory. One named service1.jar \nand one named service2.jar.\nHowever this is not the case. Only the first jar is created, as if the \nsetProperty(..) commands did not work. What is strange is that the output of \nthe program (the println(..) commands) indicates that the the properties were \nreplaced successfully.", "id": 60359, "time": "2004-07-09T13:26:33Z", "bug_id": 30001, "creation_time": "2004-07-09T13:26:33Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "text": "You can replace but not unset with Java (using setProperty), this is conscious\ndesign decision.", "attachment_id": null, "bug_id": 30001, "id": 72220, "time": "2005-03-11T17:29:34Z", "creator": "bodewig@apache.org", "creation_time": "2005-03-11T17:29:34Z", "is_private": false}]