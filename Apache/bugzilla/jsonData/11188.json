[{"count": 0, "tags": [], "bug_id": 11188, "attachment_id": null, "is_private": false, "id": 20215, "time": "2002-07-25T23:50:37Z", "creator": "lisa@westernfusion.com", "creation_time": "2002-07-25T23:50:37Z", "text": "When i run FOP to generate a large (38 page) PDF, I get an Out of Memory error \nfrom Tomcat. I have tried running it on multiple machines and the only one that \ndid NOT give me the error was one that has 1GB of RAM. There must be a memory \nleak or something that the fop servlet is using all the ram (even on a 256MB \nRAM machine) and crashing.\n\n--------- THE ERROR ---------------------\n\n\nApache Tomcat/4.0.1 - HTTP Status 500 - Internal Server Error\n\n--------------------------------------------------------------------------------\n\ntype Exception report\n\nmessage Internal Server Error\n\ndescription The server encountered an internal error (Internal Server Error) \nthat prevented it from fulfilling this request.\n\nexception \n\njavax.servlet.ServletException: Invoker service() exception\n\tat org.apache.catalina.servlets.InvokerServlet.serveRequest\n(InvokerServlet.java:504)\n\tat org.apache.catalina.servlets.InvokerServlet.doGet\n(InvokerServlet.java:180)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:740)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:853)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter\n(ApplicationFilterChain.java:247)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter\n(ApplicationFilterChain.java:193)\n\tat org.apache.catalina.core.StandardWrapperValve.invoke\n(StandardWrapperValve.java:243)\n\tat org.apache.catalina.core.StandardPipeline.invokeNext\n(StandardPipeline.java:566)\n\tat org.apache.catalina.core.StandardPipeline.invoke\n(StandardPipeline.java:472)\n\tat org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:943)\n\tat org.apache.catalina.core.StandardContextValve.invoke\n(StandardContextValve.java:201)\n\tat org.apache.catalina.core.StandardPipeline.invokeNext\n(StandardPipeline.java:566)\n\tat org.apache.catalina.core.StandardPipeline.invoke\n(StandardPipeline.java:472)\n\tat org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:943)\n\tat org.apache.catalina.core.StandardContext.invoke\n(StandardContext.java:2344)\n\tat org.apache.catalina.core.StandardHostValve.invoke\n(StandardHostValve.java:164)\n\tat org.apache.catalina.core.StandardPipeline.invokeNext\n(StandardPipeline.java:566)\n\tat org.apache.catalina.valves.ErrorDispatcherValve.invoke\n(ErrorDispatcherValve.java:170)\n\tat org.apache.catalina.core.StandardPipeline.invokeNext\n(StandardPipeline.java:564)\n\tat org.apache.catalina.valves.ErrorReportValve.invoke\n(ErrorReportValve.java:170)\n\tat org.apache.catalina.core.StandardPipeline.invokeNext\n(StandardPipeline.java:564)\n\tat org.apache.catalina.valves.AccessLogValve.invoke\n(AccessLogValve.java:462)\n\tat org.apache.catalina.core.StandardPipeline.invokeNext\n(StandardPipeline.java:564)\n\tat org.apache.catalina.core.StandardPipeline.invoke\n(StandardPipeline.java:472)\n\tat org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:943)\n\tat org.apache.catalina.core.StandardEngineValve.invoke\n(StandardEngineValve.java:163)\n\tat org.apache.catalina.core.StandardPipeline.invokeNext\n(StandardPipeline.java:566)\n\tat org.apache.catalina.core.StandardPipeline.invoke\n(StandardPipeline.java:472)\n\tat org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:943)\n\tat org.apache.catalina.connector.http.HttpProcessor.process\n(HttpProcessor.java:1011)\n\tat org.apache.catalina.connector.http.HttpProcessor.run\n(HttpProcessor.java:1106)\n\tat java.lang.Thread.run(Thread.java:484)\n\nroot cause \n\njava.lang.OutOfMemoryError\n\t<>"}, {"count": 1, "tags": [], "bug_id": 11188, "attachment_id": null, "is_private": false, "id": 20228, "time": "2002-07-26T02:03:03Z", "creator": "glenn@apache.org", "creation_time": "2002-07-26T02:03:03Z", "text": "This is not a tomcat bug.  It looks like you are not starting the\nJVM Tomcat runs in with a large enough stack size.  Use the -Xmx\noption of java to increase the stack size of the JVM."}]