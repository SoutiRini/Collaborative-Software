[{"count": 0, "tags": [], "creator": "knst.kolinko@gmail.com", "attachment_id": null, "id": 176382, "time": "2014-07-13T23:54:21Z", "bug_id": 56717, "creation_time": "2014-07-13T23:54:21Z", "is_private": false, "text": "Debugged om the current trunk at 1610244, between 8.0.10 and 8.0.11.\nSteps to reproduce:\n1. Add the following lines to build.properties\ntest.entry=org.apache.catalina.core.TestStandardContext\ntest.entry.methods=testFlagFailCtxIfServletStartFails\n\n2. I added log.info(\"...\", new RuntimeException()) to Mapper.addHost(), Mapper.removeHost()\n\n3. Run the test case.\n\nThe test case performs \"tomcat.stop(); tomcat.start();\" twice.\n\nActual behaviour:\nDuring the second tomcat.start() the Mapper.addHost() is called twice with the same host. It results in an error message,\n\n> SEVERE [main] org.apache.catalina.mapper.Mapper.addHost Duplicate Host [localhost]. The name is already used by Host [localhost]. This Host will be ignored.\n\nExpected behaviour:\nNo such message.\n\nFrom debug stacktraces that I printed in addHost(), I see that during the second start the two addHost() calls have the following stack traces:\n[[[\n java.lang.RuntimeException\n\tat org.apache.catalina.mapper.Mapper.addHost(Mapper.java:95)\n\tat org.apache.catalina.mapper.MapperListener.registerHost(MapperListener.java:295)\n\tat org.apache.catalina.mapper.MapperListener.lifecycleEvent(MapperListener.java:482)\n\tat org.apache.catalina.util.LifecycleSupport.fireLifecycleEvent(LifecycleSupport.java:117)\n\tat org.apache.catalina.util.LifecycleBase.fireLifecycleEvent(LifecycleBase.java:90)\n\tat org.apache.catalina.util.LifecycleBase.setStateInternal(LifecycleBase.java:402)\n\tat org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:168)\n\tat org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1396)\n\tat org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1386)\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:262)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n\tat java.lang.Thread.run(Thread.java:745)\n\n]]]\nand\n[[[\n java.lang.RuntimeException\n\tat org.apache.catalina.mapper.Mapper.addHost(Mapper.java:95)\n\tat org.apache.catalina.mapper.MapperListener.registerHost(MapperListener.java:295)\n\tat org.apache.catalina.mapper.MapperListener.startInternal(MapperListener.java:110)\n\tat org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)\n\tat org.apache.catalina.core.StandardService.startInternal(StandardService.java:450)\n\tat org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)\n\tat org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:760)\n\tat org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)\n\tat org.apache.catalina.startup.Tomcat.start(Tomcat.java:340)\n\tat org.apache.catalina.startup.TomcatBaseTest$TomcatWithFastSessionIDs.start(TomcatBaseTest.java:410)\n\tat org.apache.catalina.core.TestStandardContext.testFlagFailCtxIfServletStartFails(TestStandardContext.java:917)\n(... JUnit code...)\n]]]\n\nThe second stack trace with \"MapperListener.startInternal()\" is the expected one. The same stack trace is observed during the first tomcat.start().\n\nThe first stack trace with \"MapperListener.lifecycleEvent()\" is an unexpected one. It is caused by the lifecycle listener still being registered on Host.\n\nThe MapperListener.startInternal() method contains line\n> addListeners(engine);\n\nAs listeners are stored in a list, it means that the same listener will be added the second time. I expect that if one adds the thirds tomcat.start() call to the test case, it will cause Mapper.addHost() to be called three times.\n\n\nThat said, I think there is not much of a problem from calling addHost() more than once for the same host (e.g. Mapper.addContextVersion() may call it silently). Thus I'll change Mapper.addHost() to do not treat such repeated calls as an error."}, {"count": 1, "tags": [], "bug_id": 56717, "attachment_id": null, "id": 176394, "time": "2014-07-15T00:48:34Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2014-07-15T00:48:34Z", "is_private": false, "text": "Fixed in trunk by r1610562 and r1610564. It will be in 8.0.11 onwards."}, {"count": 2, "tags": [], "text": "Fixed in tc7.0.x by r1611495 and r1611496. It will be in 7.0.55 onwards.", "attachment_id": null, "id": 176477, "creator": "knst.kolinko@gmail.com", "time": "2014-07-17T22:39:24Z", "bug_id": 56717, "creation_time": "2014-07-17T22:39:24Z", "is_private": false}]