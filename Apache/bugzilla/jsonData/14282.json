[{"count": 0, "tags": [], "bug_id": 14282, "text": "We currently are running Apache 1.3.26 which forwards requests to our tomcat\n4.0.4 server using mod_jk/ajp13. After making the following request:\n\nGET /index.jsp HTTP/1.1\\x0d\\x0aHost: host1.foo.c\nom\\x0d\\x0aTransfer-Encoding: Chunked\\x0d\\x0a\\x0d\\x0aAAAAAAAA\\x0d\\x0a\\x0d\\x0a\n\nwhich returns a 404, we begin to see an intermittent problem where valid request\nresults in the response of another request being returned instead of the correct\none. \n\nWe have seen this problem in Tomcat 4.0.6 and 4.1.12.  I've looked in the apache\nbug database and in the tomcat mailing list and seen similar issues, but most of\nthose were in tomcat 3 and we do not see the same behavior in tomcat 3.", "id": 25737, "time": "2002-11-06T00:17:26Z", "creator": "dchow@grandcentral.com", "creation_time": "2002-11-06T00:17:26Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 14282, "text": "Just to clarify the behavior that we are seeing is that the request/response \npairs are being mixed up.", "id": 25806, "time": "2002-11-06T18:40:55Z", "creator": "dchow@grandcentral.com", "creation_time": "2002-11-06T18:40:55Z", "is_private": false, "attachment_id": null}, {"attachment_id": null, "tags": [], "creator": "hgomez@apache.org", "is_private": false, "count": 2, "id": 25859, "time": "2002-11-07T13:33:05Z", "bug_id": 14282, "creation_time": "2002-11-07T13:33:05Z", "text": "There was some fixes recently in the ajp13 java code, \nso could you try with a TC 4 from CVS ?"}, {"count": 3, "tags": [], "bug_id": 14282, "is_private": false, "text": "I didn't see such behaviour, Apache 1.3 return me error 400, Bad request.\n\nI mark this to WORKSFORME until someone provide a reproductable test pattern....\n\n", "id": 26632, "time": "2002-11-20T10:03:03Z", "creator": "hgomez@apache.org", "creation_time": "2002-11-20T10:03:03Z", "attachment_id": null}, {"count": 4, "tags": [], "creator": "dchow@grandcentral.com", "attachment_id": null, "is_private": false, "id": 26724, "time": "2002-11-21T18:23:59Z", "bug_id": 14282, "creation_time": "2002-11-21T18:23:59Z", "text": "I will try the latest tomcat and let you know if I still have this problem. Here\nis how we are able to reproduce it:\n\nI have a servlet:\nimport javax.servlet.http.HttpServlet;\n\nimport java.io.PrintWriter;\nimport java.io.IOException;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\nimport javax.servlet.ServletConfig;\nimport javax.servlet.ServletException;\nimport org.apache.log4j.Category;\nimport java.util.Enumeration;\n\npublic class LoadServlet extends HttpServlet\n{\n    public void init(ServletConfig config) throws ServletException\n    {\n        Category logger = Category.getRoot();\n        logger.info(\"LoadServlet::init(): Loading LoadServlet!\");\n    }\n\n    public void service(HttpServletRequest request, HttpServletResponse response) \n    {\n        Category logger = Category.getRoot();\n        StringBuffer url = new StringBuffer();\n        url.append(\"LoadServlet::service(): Request URL (\" + ((HttpServletRequest) \nrequest).getRequestURI() + \"?\");\n        Enumeration enum = request.getParameterNames();\n            \n        while (enum.hasMoreElements())\n        {\n            String key = (String) enum.nextElement();\n            url.append(key + \"=\" + request.getParameter(key));\n        }\n\n        logger.info(url.toString() + \")\");\n\n        // Take the request and response to it.\n        String id = request.getParameter(\"ID\");\n        logger.info(\"LoadServlet::service(): Got ID parameter(\" + id + \")\");\n        StringBuffer responseString = new StringBuffer().append(\"<HTML>The ID you p\nassed in is: \" + id + \"</HTML>\\n\");\n        logger.info(\"LoadServlet::service(): Response (\" + responseString + \")\");\n        response.addHeader(\"ID\" , java.net.URLEncoder.encode(id));\n\n        try\n        {\n            PrintWriter pw = response.getWriter();\n            pw.write(responseString.toString());\n        }\n        catch(IOException e)\n        {\n            logger.error(e.getMessage(), e);\n        }\n    }\n}\n\nrunning on tomcat that just returns the parameter(ID) in both the header and the\nbody of the response.  I also have a perl script:\n\n#!/usr/local/bin/perl -w\nuse IO::Socket;\nunless (@ARGV > 1) { die \"Usage: ./syncsvt.pl: <host> <port>\\n\";}\n($host) = $ARGV[0];\n($port) = $ARGV[1];\n    $remote = IO::Socket::INET->new( Proto     => \"tcp\",\n                                     PeerAddr  => $host,\n                                     PeerPort  => \"$port\",\n                                    );\n    unless ($remote) { die \"Cannot connect to $host\\n\" }\n    $remote->autoflush(1);\n    print $remote \"GET /index.jsp HTTP/1.1\\x0d\\x0aHost:\nhost1.foo.com\\x0d\\x0aTransfer-Encoding:\nChunked\\x0d\\x0a\\x0d\\x0aAAAAAAAA\\x0d\\x0a\\x0d\\x0a\";\n\n    while ( <$remote> ) { print }\n    close $remote;\n\nthat invokes my chunked encoding request. \n\nTo reproduce the problem, I first run the perl script and hit the apache server\non port 80 and get back the 404 response saying index.jsp is not found.  Then\nwith two browsers open, I invoke the LoadServlet servlet with the parameter\nID=<value> through apache using HTTPS 4-5 times on each browser repeatedly.\nAfter a while, one of my requests will return the 404 response for the\nchunked-encoding request I made earlier from my perl script. After that, every\nonce in a while, I will get back the response of one of my previous requests. \n\nA tcpdump of my tomcat server on port 8009 shows that it is writing the correct\nresponse back, but the mod_jk log in debug mode shows that it receieved the\nresponse of a previous request.  \n\nModifying the mod_jk shared lib to close the socket in ajp_done():\n\n        // close the socket\n        jk_close_socket(p->sd, l);\n        p->sd = -1;\n\nseems to fix this problem because the socket is no longer reused, but I'm still\nnot sure what causes the problem and closing the socket each time takes away the\nadvantages of reusing the socket. "}, {"count": 5, "tags": [], "bug_id": 14282, "text": "The latest version of mod_jk in CVS seems to fix this behavior.  I no longer \nsee the mixed request response pairs during my test. However, my chunked \nencoding request now hangs.  I have to either ctrl-c the request or wait for \nthe socket timeout to close the connection. ", "id": 26754, "time": "2002-11-21T23:57:49Z", "creator": "dchow@grandcentral.com", "creation_time": "2002-11-21T23:57:49Z", "is_private": false, "attachment_id": null}]