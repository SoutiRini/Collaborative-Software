[{"count": 0, "tags": [], "bug_id": 52144, "is_private": false, "text": "It appears '-v' should be accepted.....\n\n\n$ fop -v\nFOP Version 0.95\n\nUSAGE\nFop [options] [-fo|-xml] infile [-xsl file] [-awt|-pdf|-mif|-rtf|-tiff|-png|-pcl|-ps|-txt|-at [mime]|-print] <outfile>\n [OPTIONS]  \n  -d                debug mode   \n  -x                dump configuration settings  \n  -q                quiet mode  \n  -c cfg.xml        use additional configuration file cfg.xml\n  -l lang           the language to use for user information \n  -r                relaxed/less strict validation (where available)\n  -dpi xxx          target resolution in dots per inch (dpi) where xxx is a number\n  -s                for area tree XML, down to block areas only\n  -v                to show FOP version being used\n\n  -o [password]     PDF file will be encrypted with option owner password\n  -u [password]     PDF file will be encrypted with option user password\n  -noprint          PDF file will be encrypted without printing permission\n  -nocopy           PDF file will be encrypted without copy content permission\n  -noedit           PDF file will be encrypted without edit content permission\n  -noannotations    PDF file will be encrypted without edit annotation permission\n  -pdfprofile prof  PDF file will be generated with the specified profile\n                    (Examples for prof: PDF/A-1b or PDF/X-3:2003)\n\n [INPUT]  \n  infile            xsl:fo input file (the same as the next) \n  -fo  infile       xsl:fo input file  \n  -xml infile       xml input file, must be used together with -xsl \n  -atin infile      area tree input file \n  -imagein infile   image input file \n  -xsl stylesheet   xslt stylesheet \n \n  -param name value <value> to use for parameter <name> in xslt stylesheet\n                    (repeat '-param name value' for each parameter)\n \n [OUTPUT] \n  outfile           input will be rendered as PDF into outfile\n  -pdf outfile      input will be rendered as PDF (outfile req'd)\n  -pdfa1b outfile   input will be rendered as PDF/A-1b compliant PDF\n                    (outfile req'd, same as \"-pdf outfile -pdfprofile PDF/A-1b\")\n  -awt              input will be displayed on screen \n  -rtf outfile      input will be rendered as RTF (outfile req'd)\n  -pcl outfile      input will be rendered as PCL (outfile req'd) \n  -ps outfile       input will be rendered as PostScript (outfile req'd) \n  -afp outfile      input will be rendered as AFP (outfile req'd)\n  -tiff outfile     input will be rendered as TIFF (outfile req'd)\n  -png outfile      input will be rendered as PNG (outfile req'd)\n  -txt outfile      input will be rendered as plain text (outfile req'd) \n  -at [mime] out    representation of area tree as XML (outfile req'd) \n                    specify optional mime output to allow AT to be converted\n                    to final format later\n  -print            input file will be rendered and sent to the printer \n                    see options with \"-print help\" \n  -out mime outfile input will be rendered using the given MIME type\n                    (outfile req'd) Example: \"-out application/pdf D:\\out.pdf\"\n                    (Tip: \"-out list\" prints the list of supported MIME types)\n  -mif outfile      input will be rendered as MIF (FrameMaker) (outfile req'd)\n                    Experimental feature - requires additional fop-sandbox.jar.\n  -svg outfile      input will be rendered as an SVG slides file (outfile req'd) \n                    Experimental feature - requires additional fop-sandbox.jar.\n\n  -foout outfile    input will only be XSL transformed. The intermediate \n                    XSL-FO file is saved and no rendering is performed. \n                    (Only available if you use -xml and -xsl parameters)\n\n\n [Examples]\n  Fop foo.fo foo.pdf \n  Fop -fo foo.fo -pdf foo.pdf (does the same as the previous line)\n  Fop -xml foo.xml -xsl foo.xsl -pdf foo.pdf\n  Fop -xml foo.xml -xsl foo.xsl -foout foo.fo\n  Fop foo.fo -mif foo.mif\n  Fop foo.fo -rtf foo.rtf\n  Fop foo.fo -print or Fop -print foo.fo \n  Fop foo.fo -awt \n\nNov 6, 2011 8:59:47 AM org.apache.fop.cli.Main startFOP\nSEVERE: Exception\norg.apache.fop.apps.FOPException: No input file specified\n\tat org.apache.fop.cli.CommandLineOptions.checkSettings(CommandLineOptions.java:709)\n\tat org.apache.fop.cli.CommandLineOptions.parse(CommandLineOptions.java:147)\n\tat org.apache.fop.cli.Main.startFOP(Main.java:154)\n\tat org.apache.fop.cli.Main.main(Main.java:197)\n$", "id": 151230, "time": "2011-11-06T14:01:22Z", "creator": "noloader@gmail.com", "creation_time": "2011-11-06T14:01:22Z", "attachment_id": null}, {"count": 1, "tags": [], "creator": "pascal.sancho@takoma.fr", "attachment_id": null, "is_private": false, "id": 151257, "time": "2011-11-07T09:23:14Z", "bug_id": 52144, "creation_time": "2011-11-07T09:23:14Z", "text": "(In reply to comment #0)\n> It appears '-v' should be accepted.....\n\nThis is the case: you get effectively following lines:\n\n> $ fop -v\n> FOP Version 0.95\n\nbut you probably didn't specify any input files:\n\n> SEVERE: Exception\n> org.apache.fop.apps.FOPException: No input file specified"}, {"count": 2, "tags": [], "bug_id": 52144, "attachment_id": null, "is_private": false, "id": 151339, "time": "2011-11-09T17:14:54Z", "creator": "bowditch_chris@hotmail.com", "creation_time": "2011-11-09T17:14:54Z", "text": "Hi Pascal,\n\nJeffrey Walton raises a good point here. The -v switch on most programs just outputs the version information. Why does FOP insist on having an input file in this case and outputting usage and an error. I believe this is inconsistent and confusing for the user. We should consider changing this behaviour.\n\nThanks,\n\nChris"}, {"count": 3, "tags": [], "creator": "pascal.sancho@takoma.fr", "attachment_id": null, "text": "(In reply to comment #2)\n> Jeffrey Walton raises a good point here. The -v switch on most programs just\n> outputs the version information. Why does FOP insist on having an input file in\n> this case and outputting usage and an error. I believe this is inconsistent and\n> confusing for the user. We should consider changing this behaviour.\n\nI didn't see it from that perspective, so I agree with you.", "id": 151356, "time": "2011-11-10T08:01:33Z", "bug_id": 52144, "creation_time": "2011-11-10T08:01:33Z", "is_private": false}, {"count": 4, "tags": [], "creator": "gadams@apache.org", "attachment_id": null, "text": "(In reply to comment #3)\n> (In reply to comment #2)\n> > Jeffrey Walton raises a good point here. The -v switch on most programs just\n> > outputs the version information. Why does FOP insist on having an input file in\n> > this case and outputting usage and an error. I believe this is inconsistent and\n> > confusing for the user. We should consider changing this behaviour.\n> \n> I didn't see it from that perspective, so I agree with you.\n\nany progress on this pascal? should be a simple fix... i would suggest the following behavior:\n\n(1) if -v present but no input file, then just output version and exit\n(2) if -v present and input file specified, then output version then attempt to process input file", "id": 157037, "time": "2012-04-01T21:18:48Z", "bug_id": 52144, "creation_time": "2012-04-01T21:18:48Z", "is_private": false}, {"count": 5, "text": "resetting P2 open bugs to P3 pending further review", "bug_id": 52144, "attachment_id": null, "id": 157408, "time": "2012-04-07T01:42:35Z", "creator": "gadams@apache.org", "creation_time": "2012-04-07T01:42:35Z", "tags": [], "is_private": false}, {"count": 6, "tags": [], "bug_id": 52144, "text": "(In reply to comment #4)\n> (In reply to comment #3)\n> > (In reply to comment #2)\n> > > Jeffrey Walton raises a good point here. The -v switch on most programs just\n> > > outputs the version information. Why does FOP insist on having an input file in\n> > > this case and outputting usage and an error. I believe this is inconsistent and\n> > > confusing for the user. We should consider changing this behaviour.\n> > \n> > I didn't see it from that perspective, so I agree with you.\n> \n> any progress on this pascal? should be a simple fix... i would suggest the\n> following behavior:\n> \n> (1) if -v present but no input file, then just output version and exit\n> (2) if -v present and input file specified, then output version then attempt to\n> process input file\n\npascal?", "id": 158349, "time": "2012-04-24T05:45:48Z", "creator": "gadams@apache.org", "creation_time": "2012-04-24T05:45:48Z", "is_private": false, "attachment_id": null}, {"count": 7, "tags": [], "creator": "pascal.sancho@takoma.fr", "attachment_id": null, "text": "(In reply to comment #4)\n> (1) if -v present but no input file, then just output version and exit\n> (2) if -v present and input file specified, then output version then attempt\n> to process input file\n\nI'm OK with that, it will improve both Jeffrey and Chris perspectives", "id": 158660, "time": "2012-04-30T09:13:57Z", "bug_id": 52144, "creation_time": "2012-04-30T09:13:57Z", "is_private": false}, {"count": 8, "tags": [], "bug_id": 52144, "attachment_id": 28805, "id": 159183, "time": "2012-05-20T14:20:30Z", "creator": "lmpmbernardo@gmail.com", "creation_time": "2012-05-20T14:20:30Z", "is_private": false, "text": "Created attachment 28805\npatch and simple unit test\n\nthis bug report starts from a misunderstanding of what the -v means. it does not mean version but verbose. version is given by -version. verbose at the moment outputs the version and continues processing as if no -v is used. so verbose is really no more verbose than the default behavior.\n\nthe submitted patch fixes the behavior as suggested in the above comments. I think this is a sensible behavior in any case, independently of -v being version or verbose.\n\nthe patch also includes a simple unit test."}, {"count": 9, "tags": [], "bug_id": 52144, "attachment_id": null, "is_private": false, "id": 159232, "time": "2012-05-22T18:28:26Z", "creator": "gadams@apache.org", "creation_time": "2012-05-22T18:28:26Z", "text": "applied at http://svn.apache.org/viewvc?rev=1341585&view=rev\n\nthanks luis!"}]