[{"count": 0, "tags": [], "bug_id": 40407, "text": "When log4j initialization, it create log file will system defalut permission, \nsuch as \"-rw-r--r--\". But if other user use the application, he can't write \nany thing into log file. Log4j should add a property to set the permission of \nlog file.", "id": 92974, "time": "2006-09-04T09:13:53Z", "creator": "yai@platform.com", "creation_time": "2006-09-04T09:13:53Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "creator": "carnold@apache.org", "text": "Any suggestions how that could be achieved in a reasonable manner.  As far as I can tell, the Java runtime \nlibraries provide no mechanism for specifying or modifying file permissions other than invoking a native \nmethod or executing a program.", "id": 93547, "time": "2006-09-13T20:08:13Z", "bug_id": 40407, "creation_time": "2006-09-13T20:08:13Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "creator": "kay.abendroth@raxion.net", "attachment_id": null, "text": "To quote http://www.jguru.com/faq/view.jsp?EID=19558:\n\"The proper way on Unix machines to do this is to set the userMask to the\ndesired value. When JVM is run on Unix box it takes the file permissions from\nthe value of userMask.\"\n\nThis bug should be marked WONTFIX, since there's no way for log4j to set\nnon-fileowner-permissions, except calling external programs.\n\nIt's up to the host OS to setup these permissions. This should be mentioned in\nthe documentation.", "id": 95704, "time": "2006-11-11T16:59:33Z", "bug_id": 40407, "creation_time": "2006-11-11T16:59:33Z", "is_private": false}]