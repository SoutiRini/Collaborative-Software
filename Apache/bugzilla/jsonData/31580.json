[{"count": 0, "tags": [], "creator": "h.wu@eurodata.de", "attachment_id": null, "id": 64747, "time": "2004-10-07T13:00:21Z", "bug_id": 31580, "creation_time": "2004-10-07T13:00:21Z", "is_private": false, "text": "Hi!\n\nI found a problem when using url instead of file for fo:external-graphic's \nsrc paramater (FOP is 0.20.5 distribution). for example,\n\n<fo:external-graphic height=\"15pt\" width=\"180pt\">\n\t<xsl:attribute name=\"src\">url('/my/image/image.gif')</xsl:attribute>\n</fo:external-graphic>\n\n\nit will work with the following changes in class \norg.apache.fop.image.FopImageFactory.java\n\n...\n\n// Try to find the image as a class-resource first (for instance in a jar-\nfile)...\n        try {\n            imgIS = FopImageFactory.class.getResourceAsStream(href);\n            absoluteURL = FopImageFactory.class.getResource(href);\n        } catch (Exception e) {\n        }\n\n        if (imgIS == null) {\n            try {\n                // try url as complete first, this can cause\n                // a problem with relative uri's if there is an\n                // image relative to where fop is run and relative\n                // to the base dir of the document\n                try {\n                    absoluteURL = new URL(href);\n                } catch (MalformedURLException mue) {\n                    // if the href contains onl a path then file is assumed\n                    absoluteURL = new URL(\"file:\" + href);\n                }\n                imgIS = absoluteURL.openStream();\n            } catch (MalformedURLException e_context) {\n                throw new FopImageException(\"Error with image URL: \"\n                    + e_context.getMessage());\n            } catch (Exception e) {\n                // maybe relative\n                URL baseURL = Configuration.getBaseURL();\n\n                if (baseURL == null) {\n                    throw new FopImageException(\"Error with image URL: \"\n                        + e.getMessage()\n                        + \" and no base URL is specified\");\n                }\n\n                try {\n                    /*\n                     This piece of code is based on the following statement in \nRFC2396 section 5.2:\n\n                        3) If the scheme component is defined, indicating that \nthe reference\n                           starts with a scheme name, then the reference is \ninterpreted as an\n                           absolute URI and we are done.  Otherwise, the \nreference URI's\n                           scheme is inherited from the base URI's scheme \ncomponent.\n\n                           Due to a loophole in prior specifications [RFC1630], \nsome parsers\n                           allow the scheme name to be present in a relative \nURI if it is the\n                           same as the base URI scheme.  Unfortunately, this \ncan conflict\n                           with the correct parsing of non-hierarchical URI.  \nFor backwards\n                           compatibility, an implementation may work around \nsuch references\n                           by removing the scheme if it matches that of the \nbase URI and the\n                           scheme is known to always use the <hier_part> syntax.\n\n                        The URL class does not implement this work around, so \nwe do.\n                     */\n\n                    String scheme = baseURL.getProtocol() + \":\";\n                    System.out.println(\"scheme \" + scheme);\n                    if (href.startsWith(scheme)) {\n                        href = href.substring(scheme.length());\n                    }\n                    System.out.println(\"href after \" + href);\n                    absoluteURL = new URL(baseURL, href);\n                } catch (MalformedURLException e_context) {\n                    throw new FopImageException(\"Invalid Image URL - error on \nrelative URL : \"\n                        + e_context.getMessage());\n                }\n            }\n        }\n\n\n        // If not, check image type\n        ImageReader imgReader = null;\n..."}, {"count": 1, "tags": [], "creator": "pascal.sancho@takoma.fr", "attachment_id": null, "id": 110813, "time": "2007-11-20T01:53:37Z", "bug_id": 31580, "creation_time": "2007-11-20T01:53:37Z", "is_private": false, "text": "Fixed in FOP 0.94 and probably earlier versions"}, {"count": 2, "tags": [], "text": "batch transition pre-FOP1.0 resolved+fixed bugs to closed+fixed", "is_private": false, "bug_id": 31580, "id": 155807, "time": "2012-04-01T06:41:57Z", "creator": "gadams@apache.org", "creation_time": "2012-04-01T06:41:57Z", "attachment_id": null}]