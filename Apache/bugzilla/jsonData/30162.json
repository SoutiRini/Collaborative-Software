[{"count": 0, "attachment_id": null, "bug_id": 30162, "is_private": false, "id": 60724, "time": "2004-07-16T23:54:35Z", "creator": "jglick@apache.org", "creation_time": "2004-07-16T23:54:35Z", "tags": [], "text": "IntrospectionHelper keeps a cache of helpers it has made for particular Class's.\nThis cache is cleared (presumably to avoid leaking memory) when the build\nfinishes - *if* callers have used the factory method IH.getHelper(Project,Class)\nrather than the IH.gH(Class) variant. Unfortunately, if you call only\nIH.gH(Class) then the Class references are not released, even by a build finish\nevent.\n\nThis appears to have caused a massive memory leak in the JVM permanent\ngeneration (where classes are held) in the NetBeans IDE. (Workaround: forcibly\nclear the cache via reflection.) More:\nhttp://www.netbeans.org/issues/show_bug.cgi?id=43113\n\nBetter would be to use a WeakHashMap, since there is no reason to keep a cache\nentry if the Class key is referenced only from that entry; it could not possibly\nbe used. Generally, please be very suspicious of any static fields, especially\nmaps, and use weak references wherever appropriate.\n\nAttaching a patch which makes the cache weak on the key, and also uses the 2-arg\nvariant of getHelper wherever it seems it would be possible. (There are some\nplaces where there is no Project context and it is not possible.)"}, {"count": 1, "tags": [], "bug_id": 30162, "text": "Created attachment 12131\nSuggested patch", "id": 60725, "time": "2004-07-16T23:55:11Z", "creator": "jglick@apache.org", "creation_time": "2004-07-16T23:55:11Z", "is_private": false, "attachment_id": 12131}, {"count": 2, "attachment_id": null, "bug_id": 30162, "is_private": false, "id": 61012, "time": "2004-07-22T22:34:31Z", "creator": "jglick@apache.org", "creation_time": "2004-07-22T22:34:31Z", "tags": [], "text": "My apologies,\n\nprivate static Map/*<Class,IntrospectionHelper>*/ helpers = new WeakHashMap();\n\nwon't help since each IH holds a ref to the Class in the 'bean' field, which\nwill prevent the Class from being collected."}, {"count": 3, "attachment_id": 12198, "bug_id": 30162, "is_private": false, "id": 61013, "time": "2004-07-22T22:39:04Z", "creator": "jglick@apache.org", "creation_time": "2004-07-22T22:39:04Z", "tags": [], "text": "Created attachment 12198\nRevised patch for just IntrospectionHelper.java to hold both keys and values weakly in helpers (does not include other classes listed in the previous patch)"}, {"count": 4, "tags": [], "bug_id": 30162, "is_private": false, "text": "Note that the revised patch lets IntrospectionHelper objects be collected even\nwhile the Class still exists, which may be undesirable since it could result in\ntoo much object recreation. I'm sure there's some trick which ReferenceQueue's\nwhich solves this...", "id": 61014, "time": "2004-07-22T22:43:01Z", "creator": "jglick@apache.org", "creation_time": "2004-07-22T22:43:01Z", "attachment_id": null}, {"count": 5, "tags": [], "creator": "jglick@apache.org", "attachment_id": null, "text": "Revising strategy a bit. I am unfortunately not aware of any way to prevent some\nIH objects from being collected on occasion while the Class still exists, since\nthe IH must retain a reference to the Class (e.g. it holds Method's defined by\nit) - and Java provides no way to make two objects live or die as a pair. This\ncould be problematic for performance. However the rest of the patch should still\nat least be an improvement - no one in main Ant code would be calling\nIH.gH(Class) any more. IH.gH(Project,Class) will still use a cache, but this is\ncleared when any build finishes (not necessarily the one that asked for the IH,\nby the way). Interactive environments such as NetBeans do have to call\ngh(Class), for purposes of code completion, as there is no associated project -\nso these IH instances will not be cached.", "id": 73025, "time": "2005-03-29T23:31:29Z", "bug_id": 30162, "creation_time": "2005-03-29T23:31:29Z", "is_private": false}, {"count": 6, "tags": [], "creator": "jglick@apache.org", "text": "Checking in src/main/org/apache/tools/ant/IntrospectionHelper.java;\n/home/cvs/ant/src/main/org/apache/tools/ant/IntrospectionHelper.java,v  <-- \nIntrospectionHelper.java\nnew revision: 1.94; previous revision: 1.93\ndone\nChecking in src/main/org/apache/tools/ant/ProjectHelper.java;\n/home/cvs/ant/src/main/org/apache/tools/ant/ProjectHelper.java,v  <-- \nProjectHelper.java\nnew revision: 1.115; previous revision: 1.114\ndone\nChecking in src/main/org/apache/tools/ant/UnknownElement.java;\n/home/cvs/ant/src/main/org/apache/tools/ant/UnknownElement.java,v  <-- \nUnknownElement.java\nnew revision: 1.88; previous revision: 1.87\ndone\nMore commits to come...\nChecking in src/main/org/apache/tools/ant/helper/ProjectHelperImpl.java;\n/home/cvs/ant/src/main/org/apache/tools/ant/helper/ProjectHelperImpl.java,v  <--\n ProjectHelperImpl.java\nnew revision: 1.30; previous revision: 1.29\ndone\nMore commits to come...\nChecking in src/main/org/apache/tools/ant/taskdefs/AntStructure.java;\n/home/cvs/ant/src/main/org/apache/tools/ant/taskdefs/AntStructure.java,v  <-- \nAntStructure.java\nnew revision: 1.44; previous revision: 1.43\ndone\n", "id": 73027, "time": "2005-03-29T23:48:11Z", "bug_id": 30162, "creation_time": "2005-03-29T23:48:11Z", "is_private": false, "attachment_id": null}]