[{"count": 0, "attachment_id": 22549, "bug_id": 45774, "is_private": false, "id": 120517, "time": "2008-09-10T07:58:26Z", "creator": "Brian@PingToo.com", "creation_time": "2008-09-10T07:58:26Z", "tags": [], "text": "Created attachment 22549\ndemo jsp and servlet with index.html. Install into $CATALINA_HOME/webapps\n\nI am not sure if this is a duplicate of https://issues.apache.org/bugzilla/show_bug.cgi?id=41606, but it sounds a bit different and applies to 5.5.26.\n\nThe jsp is deployed without explicit web.xml definition, so it is loaded when the first client request arrives. The call sequence is usually (but not always) as follows:\n\njspInit\n_jspService\njspDestroy\njspInit\n_jspService\n_jspService\netc..\n\nThis is hard to program around when using jspInit to set up a complex set of background processes. They get torn down unnecessarily, only to be loaded up immediately afterward. However, there is enough variability to make it dangerous to assume the first jspDestroy will always be followed by jspInit - it might be a REAL jspDestroy and the cleanup is really necessary.\n\nI have attached a war that demonstrates the problem. There is an index.html that will run either a demo servlet (which works properly with init/destroy) or a demo jsp (which usually fails). The apps display the call sequence graphically, but entries are also written to the catalina log file."}, {"count": 1, "tags": [], "text": "Thanks for the test case. A good test case makes it so much easier to investigate an issue.\n\nUnfortunately in this case I can't reproduce this on the latest 5.5.x code with your test case. I also tested trunk with the same result.\n\nI would point out that Servlet containers are free to create and destroy servlet instances as they see fit. See SRV.2.3.4 for the exact wording.\n\nI would guess that for your use case a ServletContextListener would be a better choice.", "is_private": false, "bug_id": 45774, "id": 120633, "time": "2008-09-15T12:43:37Z", "creator": "markt@apache.org", "creation_time": "2008-09-15T12:43:37Z", "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 45774, "attachment_id": null, "text": "I made a clean install of the new 5.5.27 release on a different machine. I added my demo war and started tomcat. The servlet still works as designed and the jsp still flags the antisocial behaviour.... the jsp was destroyed after the first service and then was immediately re-initialised.\n\nI then stopped tomcat and restarted it using the already deployed webapp. This time (to my surprise) the jsp was not destroyed.\n\nI used the tomcat manager to stop and start the webapp. It worked fine.\n\nI undeployed it and re-copied the war to automatically deploy. 2 services and then an unnecessary destroy/init.\n\nI reloaded the webapp, and it worked fine.\n\nI copied the war to get it redeployed - 2 services and then an unnecessary destroy/init.\n\nI have no problem with the specification allowing Servlet containers to create and destroy servlet (and jsp) instances when necessary, but this behaviour is just perverse and wasteful of resources. The whole point of init/destroy is to be able to setup a shared pool of \"expensive\" resources that need to be conserved over a long period of time.\n\nI can do more work on this if you would like. At the moment, the evidence points to some kind of timing issue related to deployment of a new war and subsequent compilation of the jsp.\n\nMy earlier tests with 5.5.26 (and older releases) on other machines showed the perverse behaviour could occur after a simple tomcat stop/start cycle (i.e. no jsp compilation), but I have no evidence of this happening on a clean install of the latest version of tomcat.\n\nRegards,\n\nBrian\n", "id": 121271, "time": "2008-10-07T06:56:31Z", "creator": "Brian@PingToo.com", "creation_time": "2008-10-07T06:56:31Z", "is_private": false}, {"count": 3, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "text": "Thanks for the additional testing - it explains why I couldn't reproduce it. I'll take another look at what is going on.\n\nIf you need to create long-lived resources I really do encourage you to look at ServletContextListener.", "id": 121274, "time": "2008-10-07T07:47:51Z", "bug_id": 45774, "creation_time": "2008-10-07T07:47:51Z", "is_private": false}, {"count": 4, "tags": [], "creator": "gerhard.kreutzer@kreutzersoft.de", "attachment_id": null, "is_private": false, "id": 122847, "time": "2008-11-25T10:14:57Z", "bug_id": 45774, "creation_time": "2008-11-25T10:14:57Z", "text": "(In reply to comment #3)\n> Thanks for the additional testing - it explains why I couldn't reproduce it.\n> I'll take another look at what is going on.\n\nI can confirm the behavior posted by Brian for Tomcat 5.5.20 and 5.5.27. After changing a JSP, the generated Servlet will be instantiated twice, so the described sequence init-destroy-init will appear.\n\nI tested with the following JSP:\n<%--\n\tBug 45774 - jspDestroy called after deployment, the second jspInit follows\n\tBug 41606 - The jspInit method is called twice. \n--%>\n<jsp:declaration>\n\tint counter = 0;\n\tprivate static long st = System.currentTimeMillis();\n\tprivate long it = System.currentTimeMillis();\n\tprivate long time = it - st;\n\tprivate static Object firstInstance;\n\tprivate Object secondInstance;\n\t\n\tpublic void init() throws ServletException {\n\t\tlong ltime = System.currentTimeMillis() - st;\n\t\tSystem.out.println(\"init: \" + this + \", time=\" + time);\n\t\tif (time == 0) firstInstance = this;\n\t\tif (firstInstance != this) secondInstance = this;\n\t}\n</jsp:declaration>\n\n<html>\n  <head>\n    <title>InitTwice.jsp</title>\n  </head>\n  <body>\n     <h1>InitTwice.jsp</h1>\n    counter=<jsp:expression>++counter</jsp:expression>\n    <br>\n    current page=<jsp:expression>page</jsp:expression>\n    <hr>\n    first=<%= firstInstance %>\n    <br>\n    second=<%= secondInstance %>\n    <br>\n    time=<%= time %>\n  </body>\n</html>\n\nGerhard\n \n\n"}, {"count": 5, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "text": "The original report contains a patch. The dup contains a test case.\n\n*** This bug has been marked as a duplicate of bug 41606 ***", "id": 125835, "time": "2009-03-27T02:43:34Z", "bug_id": 45774, "creation_time": "2009-03-27T02:43:34Z", "is_private": false}]