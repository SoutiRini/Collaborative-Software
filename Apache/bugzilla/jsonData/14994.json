[{"count": 0, "tags": [], "bug_id": 14994, "text": "Sockets are being left in the CLOSE_WAIT state. Over the period of a couple of \ndays, 11 (on a very low load machine) will be left hanging, which reaches \nmy \"acceptCount\" setting and no more connections will be accepted.\n\nI also have 11 \"Broken pipe\" IOExceptions, as described in bugzilla bug 4663, \nwhich I would assume is the root cause.\n\nI don't know what else I can do to diagnose this. It is obviously a critical \nissue, as I can bump up \"acceptCount\", but sooner or later connections will not \nbe accepted.", "id": 27245, "time": "2002-12-02T14:34:34Z", "creator": "mtraum@cirnetwork.org", "creation_time": "2002-12-02T14:34:34Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 14994, "text": "CLOSE_WAIT means that it's waiting for an ACK of the close.  In most systems, \nyou can configure the maximum amount of time that a socket remains in \nCLOSE_WAIT before it's forced close.  However, I don't use HP-UX, so I don't \nknow the command it uses.\n\nIn any case, it's not something that Tomcat has any control over.", "id": 27274, "time": "2002-12-02T19:42:33Z", "creator": "william.barker@wilshire.com", "creation_time": "2002-12-02T19:42:33Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "text": "This is actually Redhat Linux 6.2, not HP_UX. I upgraded to Tomcat 4.1.18 and \nit's still occurring. Andi Kleen (a developer for SuSE) says at \nhttp://www.uwsg.iu.edu/hypermail/linux/kernel/0204.0/0053.html that it's not a \nOS problem if the CLOSE_WAIT's go away when I kill the process, which they \ndo. 'netstat -apo' shows that the CLOSE_WAIT connections have no timer on them.\n\nI can reproduce the problem by:\n- go to any https url a browser\n- repeatedly click refresh very quickly in a browser\n\nAdditional Log Info\n- Broken pipe message no longer appear with 4.1.18\n- catalina message: [INFO] ThreadPool - -All threads are busy, waiting. Please \nincrease maxThreads or check the servlet status75 75\n\n\nMy system:\n- Tomcat 4.1.18 (and 4.1.12)\n- Redhat Linux 6.2, kernel 2.2.19\n- IBM JVM, 1.3.1 r1\n", "attachment_id": null, "id": 31093, "creation_time": "2003-02-11T21:58:08Z", "time": "2003-02-11T21:58:08Z", "creator": "mtraum@cirnetwork.org", "bug_id": 14994, "is_private": false}, {"count": 3, "attachment_id": null, "creator": "remm@apache.org", "is_private": false, "id": 31101, "time": "2003-02-12T07:52:55Z", "bug_id": 14994, "creation_time": "2003-02-12T07:52:55Z", "tags": [], "text": "I added the possibility to set the socket linger recently. Well, the thing is\nthat either it fixes the \"problem\" (which wasn't one, you're just not giving\nenough time to the server to close the socket; everything gets recycled\neventually), or  it cannot be fixed (other than closing the socket, I don't see\nwhat Tomcat can do)."}, {"count": 4, "attachment_id": null, "creator": "mtraum@cirnetwork.org", "text": "The possibility to set the socket linger? Is this a setting somwhere?\n\nRegarding it not being a problem, I've let it go as long as 3 days and the \nsockets are not recycled. Seems like a definite DoS problem when all I have to \ndo is hammer the Refresh button on my browser for 30 seconds and I'll reach the \nacceptCount number of connections with CLOSE_WAIT's, thereby refusing \nconnection for all other users for at least 3 days (and probably forever).\n", "id": 31119, "time": "2003-02-12T14:12:32Z", "bug_id": 14994, "creation_time": "2003-02-12T14:12:32Z", "tags": [], "is_private": false}, {"count": 5, "tags": [], "bug_id": 14994, "text": "We have recently experimented with Coyote and HTTPS. The symptoms we encountered\nare very similar to those described by Mike. After a very limited time HTTPS is\nblocked completely and never serves any further requests.\n(In our case, due to lack of time at the moment, we have simply reverted to the\nold deprecated https connector. I can thus unfortunately not supply any further\ninformation. This comment should be considered merely a FYI.)", "id": 31142, "time": "2003-02-12T15:16:03Z", "creator": "michael.eriksson@bauer-partner.de", "creation_time": "2003-02-12T15:16:03Z", "is_private": false, "attachment_id": null}, {"count": 6, "tags": [], "bug_id": 14994, "is_private": false, "text": "Here's a real easy test case.\n\n1. Configure an https service.\n\n2.\nimport java.io.*;\nimport java.text.*;\nimport java.util.*;\nimport javax.servlet.http.*;\n\npublic class test extends HttpServlet\n{\n    public void doGet(HttpServletRequest request, HttpServletResponse response)\nthrows IOException\n    {\n        PrintWriter out = null;\n        try\n        {\n            response.setContentType(\"text/plain\");\n            response.setDateHeader(\"Expires\", 0);\n            response.setHeader(\"Pragma\", \"no-cache\");\n            out = response.getWriter();\n            out.println(\"Hello There\");\n            for (int i = 0 ; i < 2000 ; i ++)\n                out.println(Math.random());\n        }\n        catch (Exception e)\n        {\n            e.printStackTrace();\n        }\n    }\n}\n\nFire it up.\n\n3. Start IE or Mozilla and aim it at page.\n4. Hold F5 button down for 10 seconds.\n5. netstat -anp\ntcp        1      0 63.127.110.16:443       63.127.110.14:4499      CLOSE_WAIT \n10860/java          \ntcp        1      0 63.127.110.16:443       63.127.110.14:4498      CLOSE_WAIT \n10860/java          \ntcp        1      0 63.127.110.16:443       63.127.110.14:4497      CLOSE_WAIT \netc. etc.\n\nDead and stays that way for at least three hours (as long as I could leave it).", "id": 31872, "time": "2003-02-24T17:19:25Z", "creator": "rnice@websitebilling.com", "creation_time": "2003-02-24T17:19:25Z", "attachment_id": null}, {"count": 7, "tags": [], "bug_id": 14994, "text": "Appears to be fixed as of 4.1.24. There is a note on the main webpage about a\nfix for SSL users regarding a denial of service bug. I guess this is it as it no\nlonger hangs. No more information anywhere except in the changelog which is also\npretty vague.", "id": 34003, "time": "2003-03-28T02:17:47Z", "creator": "rnice@websitebilling.com", "creation_time": "2003-03-28T02:17:47Z", "is_private": false, "attachment_id": null}, {"count": 8, "tags": [], "creator": "sanjeev.chauhan@gmail.com", "attachment_id": null, "is_private": false, "id": 77102, "time": "2005-07-08T14:53:14Z", "bug_id": 14994, "creation_time": "2005-07-08T14:53:14Z", "text": "I am not facing this problem on tomcat 5.5.9 :) may be it is resolved now.\n\n\n(In reply to comment #6)\n> Here's a real easy test case.\n> \n> 1. Configure an https service.\n> \n> 2.\n> import java.io.*;\n> import java.text.*;\n> import java.util.*;\n> import javax.servlet.http.*;\n> \n> public class test extends HttpServlet\n> {\n>     public void doGet(HttpServletRequest request, HttpServletResponse response)\n> throws IOException\n>     {\n>         PrintWriter out = null;\n>         try\n>         {\n>             response.setContentType(\"text/plain\");\n>             response.setDateHeader(\"Expires\", 0);\n>             response.setHeader(\"Pragma\", \"no-cache\");\n>             out = response.getWriter();\n>             out.println(\"Hello There\");\n>             for (int i = 0 ; i < 2000 ; i ++)\n>                 out.println(Math.random());\n>         }\n>         catch (Exception e)\n>         {\n>             e.printStackTrace();\n>         }\n>     }\n> }\n> \n> Fire it up.\n> \n> 3. Start IE or Mozilla and aim it at page.\n> 4. Hold F5 button down for 10 seconds.\n> 5. netstat -anp\n> tcp        1      0 63.127.110.16:443       63.127.110.14:4499      CLOSE_WAIT \n> 10860/java          \n> tcp        1      0 63.127.110.16:443       63.127.110.14:4498      CLOSE_WAIT \n> 10860/java          \n> tcp        1      0 63.127.110.16:443       63.127.110.14:4497      CLOSE_WAIT \n> etc. etc.\n> \n> Dead and stays that way for at least three hours (as long as I could leave it)."}]