[{"attachment_id": null, "tags": [], "bug_id": 52738, "text": "The fix revision 272185 was aimed to remove resource leak bugs on the OutputStream object \"out\" (created in line 232), the PrintWriter object \"wri\" (line 234) in the method \"writeDOMTree\"of the file \n\"/ant/core/trunk/src/main/org/apache/tools/ant/taskdefs/optional/junit/XMLResultAggregator.java\" , but it is incomplete.\n\nThere are some problems: \n1. when \"inReader\" isn't created successfully but the temp OutputStreamWriter object is created successfully (at line 233), the temp OutputStreamWriter object will be leaked. \n\nThe best way to close such resource objects is putting such close operations for all resource objects in the finaly block of a try-catch-finally structure and then putting all other code in a try block.\n\nThe problem still exists in the head revision (the temp OutputStreamWriter object created at 233 can be leaked).", "count": 0, "id": 154045, "time": "2012-02-23T04:13:04Z", "creator": "lianggt08@sei.pku.edu.cn", "creation_time": "2012-02-23T04:13:04Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 52738, "attachment_id": null, "is_private": false, "id": 154297, "time": "2012-02-27T21:37:35Z", "creator": "jglick@apache.org", "creation_time": "2012-02-27T21:37:35Z", "text": "Committed revision 1294340. Only the FileOutputStream must be closed, since everything else is a wrapper.\n\nBy the way -source 7 provides the nicer try-with-resources idiom for this kind of thing."}]