[{"count": 0, "tags": [], "bug_id": 56871, "attachment_id": 31930, "is_private": false, "id": 177270, "time": "2014-08-19T15:02:22Z", "creator": "ciaranj@gmail.com", "creation_time": "2014-08-19T15:02:22Z", "text": "Created attachment 31930\nTest servlet (inc. test client node.js script)\n\nInitially noted on a Tomcat 7.0.23 installation, running against J2SE7u4, but also repeated against java 7u65 and Tomcat 7.0.55 and tomcat 8.0.9.\n\nOn my Windows Server 2012 installation it appears as though my InputStream is being corrupted.\n\nI traced it as best I could, and it *seems* that the InternalNioInputBuffer$SocketInputBuffer is reading the data from the socket 'out of order' (very, very rarely)\n\nMy expectaction is that if I POST the exact same content to the server repeatedly the server will always respond with the expected result.  (I accept that response times may vary depending on system loads, GCing etc.)\n\nMy experience on a production application however is that if I continuously load the server with POST requests (this is legacy code, so technically this is SOAP requests being services by an xfire servlet) occassionally the data that XFire attempts to process is corrupt.\n\nI've attached a test servlet and node.js client that 'reliably' reproduce the fault, this fault does occur with a concurrency of '1' but the rate of occurrence appears to increase if I increase the concurrency value in 'client.js'.\n\nAs it may matter, this server has a Hyper-V installation on it, so there is a 'Hyper-V Virtual Ethernet Adapter' present and a physical 'Broadcom NetXTreme 57xx Gigabit Controller'.\n\nI also tested running tomcat with a '-Djava.net.preferIPv4Stack=true' and the issue remained."}, {"count": 1, "tags": [], "bug_id": 56871, "attachment_id": null, "is_private": false, "id": 177829, "time": "2014-09-12T19:39:14Z", "creator": "markt@apache.org", "creation_time": "2014-09-12T19:39:14Z", "text": "I'm starting to look at this now. How reliably does this script reproduce the issue. To put it another way, how long / how many requests before you start seeing errors?"}, {"count": 2, "tags": [], "bug_id": 56871, "is_private": false, "id": 177830, "creation_time": "2014-09-12T19:44:55Z", "time": "2014-09-12T19:44:55Z", "creator": "ciaranj@gmail.com", "text": "On my system the test exercised (and continues to) the fault reliably within a couple of minutes.  However I've since been unable to replicate the failure on clean virtual machines.\n\nI'm happy to chalk it up to some local machine config issue (drivers perhaps) if you are!", "attachment_id": null}, {"count": 3, "text": "At this point I'm not that happy chalking this up to \"someone else's problem\". What you have decribed could just as easily be a very rare timing error in Tomcat's NIO code.\n\nWhat I propose to do is run your test case on a varity of different systems and see if I can reproduce it on any of them. If I can reproduce it then obviously the next step is to track down the root cause (easy said than done) and then fix it. If I can't reproduce this I'll close this as WORKSFORME but we can always re-open it if someone else hits the same issue and can provide some new information.", "bug_id": 56871, "is_private": false, "id": 177868, "time": "2014-09-15T08:16:07Z", "creator": "markt@apache.org", "creation_time": "2014-09-15T08:16:07Z", "tags": [], "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 56871, "attachment_id": null, "id": 177871, "time": "2014-09-15T08:30:18Z", "creator": "ciaranj@gmail.com", "creation_time": "2014-09-15T08:30:18Z", "is_private": false, "text": "Sounds good to me.  One thing I'd also note is that when I was debugging the paths through the code were 'different' for certain (again exactly the same HTTP) requests and I couldn't replicate the fault if I added too much logging (classic race!)"}, {"count": 5, "tags": [], "creator": "knst.kolinko@gmail.com", "attachment_id": null, "text": "\n> I traced it as best I could, and it *seems* that the\n> InternalNioInputBuffer$SocketInputBuffer is reading the data\n> from the socket 'out of order' (very, very rarely)\n\nFrom EchoServlet.java\n>            if( !sb.toString().equals(\"a246722a276771371e1807a92f3bc86f\") ) {\n>              System.err.println(\"Unexpected data value: \\n\"+ new String(bytes));\n>            }\n\n1. I see that your code detects broken data by their MD5 digest and prints them to System.err. Can you provide samples of such output? If data are read out of order, it will be visible in the printed text.\n\n> while( (len=sis.read(buffer, 0, 8*1024)) >0 ) {\n\n2. Just as a note: My first impression was that I want \">=0\" in the above line. The end of data is signaled by value of \"-1\", not by 0.\n\nOn further reading of javadoc of InputStream.read(byte[]) I see that this method has to block until at least one byte is read and is not allowed to return \"0\".\n\n3. ServletInputStream.read() is allowed to throw an IOException. E.g. it may throw SocketTimeoutException.\n\nFrom client.js:\n> var options = {\n>  ...\n>  headers: { \"Content-Length\": 3668}\n>};\n> ...\n>  req.write('Lorem ipsum dolor sit amet [...]\n\n4. So I guess that it uses explicit Content-Length length and not chunked transfer-encoding. \nMy text editor shows that \"Lorem ipsum dolor\" string is 3678 characters, not 3668.", "id": 177964, "time": "2014-09-18T23:26:35Z", "bug_id": 56871, "creation_time": "2014-09-18T23:26:35Z", "is_private": false}, {"count": 6, "tags": [], "bug_id": 56871, "attachment_id": null, "is_private": false, "id": 177965, "time": "2014-09-19T00:20:22Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2014-09-19T00:20:22Z", "text": "> My text editor shows that \"Lorem ipsum dolor\" string is 3678 characters, not 3668.\n\nMy miscalculation. The difference in values is due to \\r\\n characters.\n\nIf I change the content-length value in client.js script, I get plenty of SocketTimeoutExceptions on console and in localhost.2014-09-19.log,  so it confirms that those exceptions are rather visible.\n\nI am unable to reproduce this issue in my environment\n- Tomcat 7.0.55, configured Nio connector, removed AJP connector and AccessLogValve from configuration. Removed all standard applications except ROOT one.\n- Java 7u67 32-bit\n- nodejs 0.10.32 64-bit\nAll running on the same Windows 7 machine."}, {"count": 7, "tags": [], "bug_id": 56871, "attachment_id": null, "is_private": false, "id": 177969, "time": "2014-09-19T09:23:07Z", "creator": "markt@apache.org", "creation_time": "2014-09-19T09:23:07Z", "text": "I can't repeat this on OSX either."}, {"count": 8, "tags": [], "bug_id": 56871, "attachment_id": null, "id": 178034, "creation_time": "2014-09-22T17:16:21Z", "time": "2014-09-22T17:16:21Z", "creator": "markt@apache.org", "text": "I also can't repeat this on:\n\n- Physical Server 2008 R2, 64-bit Java 1.7.0_67\n\n- Virtual (VMware Fusion) Ubuntu 14.04.1 LTS, 3.13.0-15, 64-bit Java 1.7.0_60", "is_private": false}, {"count": 9, "tags": [], "bug_id": 56871, "attachment_id": null, "is_private": false, "id": 178067, "time": "2014-09-24T08:57:40Z", "creator": "violetagg@apache.org", "creation_time": "2014-09-24T08:57:40Z", "text": "Hi,\n\nPlease provide reproducible scenario.\n\nRegards\nVioleta"}, {"attachment_id": null, "tags": [], "creator": "markt@apache.org", "text": "I tested this yesterday on a Windows Server 2012 VM and could not repeat it either.", "count": 10, "id": 178069, "time": "2014-09-24T09:15:24Z", "bug_id": 56871, "creation_time": "2014-09-24T09:15:24Z", "is_private": false}, {"count": 11, "tags": [], "bug_id": 56871, "attachment_id": null, "id": 178195, "time": "2014-09-30T09:46:24Z", "creator": "markt@apache.org", "creation_time": "2014-09-30T09:46:24Z", "is_private": false, "text": "After multiple extended tests (~60 mins) on multiple platforms both physical and virtual no Tomcat committer has been able to repeat this issue. I am therefore closing this as WORKSFORME.\n\nIf you are able to repeat this issue, please feel free to re-open and provide the necessary steps to repeat this from a clean install of the the latest stable Tomcat 7 (or later) release."}, {"count": 12, "text": "I appreciate the effort, thank you.  I wish I could preserve my physical environment in some manner to isolate this further, but my testing in virtualised environments has had the same results as you :/", "bug_id": 56871, "is_private": false, "id": 178197, "time": "2014-09-30T09:57:05Z", "creator": "ciaranj@gmail.com", "creation_time": "2014-09-30T09:57:05Z", "tags": [], "attachment_id": null}]