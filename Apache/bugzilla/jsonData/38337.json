[{"attachment_id": null, "tags": [], "bug_id": 38337, "text": "We have the same datasource configurations for three webapps that we host on the\nsame server.  We want to merge those configurations into one place with\nGlobalNamingResource.  The exact same configuration in the <Context> element\nwill not work with the <GlobalNamingResource> element.\n\nHere is an example Resource config:\n\n   <!-- NOTE: there are more configuration settings but this is the part that\n        is important -->\n   <Resource name=\"jdbc/cableds\" auth=\"Container\" \n              type=\"com.jnetdirect.jsql.JSQLPoolingDataSource\"\n              factory=\"org.apache.naming.factory.BeanFactory\"\n              serverName=\"ntncdsql3s\" portNumber=\"1433\"/>\n\nWhen that configuration lives inside a <Context> element everything works as\nexpected.  When it lives inside a <GlobalNamingResource> Tomcat tries to use the\nDBCP driver with the exception thrown:\n\norg.apache.tomcat.dbcp.dbcp.SQLNestedException: Canot create JDBC driver of\nclass '' for connect URL 'null'\n .... stack trace omitted ....\n\nWe do not want to use DBCP, we want to use the JNetDirect pooling drivers we\npaid for.  Why is this happening?\n\nWe are using Tomcat 5.5.12 (sorry there was no entry for it here) on Windows. \nThis seriously affects our deployment model as we will need to use the same\nconnections for server authentication in the very near future.", "count": 0, "id": 84831, "time": "2006-01-20T21:33:43Z", "creator": "bloritsch@apache.org", "creation_time": "2006-01-20T21:33:43Z", "is_private": false}, {"count": 1, "attachment_id": null, "bug_id": 38337, "text": "The tomact GlobalNamingResources documentation\n(http://tomcat.apache.org/tomcat-5.5-doc/config/globalresources.html) says:\n\n\"The GlobalNamingResources element defines the global JNDI resources for the Server.\nThese resources are listed in the server's global JNDI resource context. This\ncontext is distinct from the per-web-application JNDI contexts described in the\nJNDI Resources HOW-TO. The resources defined in this element are not visible in\nthe per-web-application contexts unless you explicitly link them with\n<ResourceLink> elements.\"\n\nTry to add a ResourceLink in the context.xml file of each web application. For\nexample:\n\n<ResourceLink name=\"jdbc/cabledslink\"\n            global=\"jdbc/cableds\"\n            type=\"com.jnetdirect.jsql.JSQLPoolingDataSource\"\n\n", "id": 84864, "time": "2006-01-22T14:18:07Z", "creator": "gdoret@gmail.com", "creation_time": "2006-01-22T14:18:07Z", "tags": [], "is_private": false}, {"count": 2, "tags": [], "bug_id": 38337, "attachment_id": null, "id": 84905, "time": "2006-01-23T18:23:02Z", "creator": "bloritsch@apache.org", "creation_time": "2006-01-23T18:23:02Z", "is_private": false, "text": "OK, I did not see that in the documentation.  It worked, so I would recommend\nupdating the Tomcat JNDI Resources How-To to make that part much more obvious."}, {"count": 3, "text": "There is still a bug in that the local Context recgnized the name, although the\nsettings were isolated.  Instead, the local context JNDI implementation should\nhave thrown a javax.naming.NameNotFoundException instead.", "creator": "bloritsch@apache.org", "attachment_id": null, "id": 84906, "time": "2006-01-23T18:49:08Z", "bug_id": 38337, "creation_time": "2006-01-23T18:49:08Z", "tags": [], "is_private": false}, {"count": 4, "tags": [], "creator": "gdoret@gmail.com", "attachment_id": null, "text": "It's not sure. The SQLNestedException is a subclass containing another\nThrowable. That other throwable is perhaps a NullPointerException if they don't\nthrow explicitely an Exception during the DataSource intialization.\n\ntry {\n    InitialContext ctx = new InitialContext();\n    ds = (DataSource)ctx.lookup(\"java:comp/env/jdbc/MySQL\");\n} catch(NamingException e) {\n    // The next line is frequently forgotten.\n    throw new ServletException(e);\n}\nTo be sure it's a true bug, we need the complete stack trace.", "id": 84916, "time": "2006-01-24T00:01:31Z", "bug_id": 38337, "creation_time": "2006-01-24T00:01:31Z", "is_private": false}, {"count": 5, "text": "The original issue I had was that a global naming resource appeared as if it\nwould not allow me to use the driver when the resource was declared in\n<GlobalNamingResource/> and not <Context/>.  Thanks to Geoffery's input I found\nI needed to use a <ResourceLink/> in the context because the app's context and\nglobal context were isolated.\n\nThe problem is that if they _are_ isolated then resource names bound in the\n<GlobalNamingResource/> should not be recognized in your application <Context/>.\n They are being recognized and instead of the expected\njavax.naming.NameNotFoundException I got the NullPointerException.  The\nNullPointerException is completely understandable because I never provide the\ndriver class in the <Resource/> definition because I am not using DBCP.  It is\ntroubling that the local app context is trying to resolve the name that should\n_not_ exist.", "creator": "bloritsch@apache.org", "is_private": false, "id": 84943, "time": "2006-01-24T15:02:59Z", "bug_id": 38337, "creation_time": "2006-01-24T15:02:59Z", "tags": [], "attachment_id": null}, {"count": 6, "text": "Updating version to 5.5.12.\n\nWe'd also be happy to evaluate and commit any updated documentation text you\nwant.  We've had a number of people add stuff to make the ResourceLink\nrequirement clearer, but docs are never perfect as you know ;)\n\nAs to the actual remaining issue of trying to resolve a non-existant name: I\nagree it's misleading.  I'd like to fix it, but I don't want to throw an NPE\n(basically, ever).  Not sure as to the best fix and don't have time right now to\ndig deeper.\n\nSetting this issue to NEEDINFO status pending submission of documentation change\nrequests and/or patches to deal with the underlying issue.\n", "bug_id": 38337, "attachment_id": null, "id": 88000, "time": "2006-04-13T21:02:00Z", "creator": "yoavs@computer.org", "creation_time": "2006-04-13T21:02:00Z", "tags": [], "is_private": false}, {"attachment_id": null, "tags": [], "bug_id": 38337, "text": "For names that aren't in a JNDI context, throw the\njavax.naming.NameNotFoundException\n\nThe NPE I experienced was within the JTDS driver, so I don't think there is much\nyou can do there.", "count": 7, "id": 88015, "time": "2006-04-13T21:46:12Z", "creator": "bloritsch@apache.org", "creation_time": "2006-04-13T21:46:12Z", "is_private": false}, {"count": 8, "attachment_id": null, "bug_id": 38337, "is_private": false, "id": 88021, "time": "2006-04-13T23:02:31Z", "creator": "remm@apache.org", "creation_time": "2006-04-13T23:02:31Z", "tags": [], "text": "(In reply to comment #5)\n> The original issue I had was that a global naming resource appeared as if it\n> would not allow me to use the driver when the resource was declared in\n> <GlobalNamingResource/> and not <Context/>.  Thanks to Geoffery's input I found\n> I needed to use a <ResourceLink/> in the context because the app's context and\n> global context were isolated.\n> \n> The problem is that if they _are_ isolated then resource names bound in the\n> <GlobalNamingResource/> should not be recognized in your application <Context/>.\n>  They are being recognized and instead of the expected\n> javax.naming.NameNotFoundException I got the NullPointerException.  The\n> NullPointerException is completely understandable because I never provide the\n> driver class in the <Resource/> definition because I am not using DBCP.  It is\n> troubling that the local app context is trying to resolve the name that should\n> _not_ exist.\n\nThat's because your resource is also defined in your web.xml, so it exists in JNDI."}]