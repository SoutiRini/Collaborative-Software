[{"count": 0, "tags": [], "bug_id": 21289, "is_private": false, "text": "I have developed a Java application which stores many documents one after one in\nthe same collection. After running it a while and updating about ten two twenty\nresources it always crashes with a\norg.xmldb.api.base.XMLDBException: Java Runtime Error\nat org.apache.xindice.core.FaultCodes.createXMLDBException(FaultCodes.java:239)\nat\norg.apache.xindice.client.xmldb.CollectionImpl.storeResource(CollectionImpl.java:518)\n...\n\nThe resources are not very big, just about a few kilobytes and neither the\nresource nor its id are null.\n\nA look to the command line from which I started the xindice engine before\nreveals the following exception on standard output:\n\njava.lang.NullPointerException\nat org.apache.xindice.core.DocumentCache$CacheKey.equals(DocumentCache.java:171)\nat java.util.WeakHashMap.eq(WeakHashMap.java:248)\nat java.util.WeakHashMap.put(WeakHashMap.java:393)\nat org.apache.xindice.core.DocumentCache.putDocument(DocumentCache.java:97)\nat org.apache.xindice.core.Collection.putDocument(Collection.java:634)\nat org.apache.xindice.core.Collection.insertDocument(Collection.java:659)\nat\norg.apache.xindice.client.corba.CollectionServant.insertDocument(CollectionServant.java:317)\nat org.apache.xindice.client.corba.db.CollectionPOA._invoke(CollectionPOA.java:181)\nat org.openorb.adapter.poa.POA.dispatch(POA.java:975)\nat org.openorb.net.AbstractServerRequest.dispatch(AbstractServerRequest.java:750)\nat org.openorb.net.ServerManagerImpl.serve_request(ServerManagerImpl.java:1467)\nat org.openorb.net.ServerManagerImpl.thread_pool_main(ServerManagerImpl.java:1410)\nat org.openorb.net.ServerManagerImpl.access$200(ServerManagerImpl.java:77)\nat org.openorb.net.ServerManagerImpl$PoolThread.run(ServerManagerImpl.java:1557)\n\nMy Java version is:\nJava(TM) 2 Runtime Environment, Standard Edition (build 1.4.1_02-b06)\nJava HotSpot(TM) Client VM (build 1.4.1_02-b06, mixed mode)\n\nrunning under SuSe Linux 8.2.\n\nI have not yet shrinked my program to a small reproducing example, but hope the\ncall stack traces help anyway.", "id": 39888, "time": "2003-07-02T19:46:52Z", "creator": "jpp@jppietsch.de", "creation_time": "2003-07-02T19:46:52Z", "attachment_id": null}, {"count": 1, "tags": [], "text": "The following change in nested class org.apache.xindice.core.DocumentCache.CacheKey \nseems to solve the problem (and btw completely fulfills the equals contract): \n \nORIGINAL CODE (o must not be null): \n      public boolean equals(Object o) { \n         CacheKey comp = (CacheKey)o; \n         if ( col != comp.col ) \n            return false; \n         return key.equals(comp.key ); \n      } \n \nFIXED CODE (o may be null): \n      public boolean equals(Object o) { \n          return o instanceof CacheKey \n              && col==((CacheKey)o).col \n              && key.equals(((CacheKey)o).key); \n      } \n ", "is_private": false, "id": 39954, "creation_time": "2003-07-03T19:20:31Z", "time": "2003-07-03T19:20:31Z", "creator": "jpp@jppietsch.de", "bug_id": 21289, "attachment_id": null}, {"count": 2, "tags": [], "text": "Patch applied, thanks.", "is_private": false, "id": 39955, "creation_time": "2003-07-03T19:26:09Z", "time": "2003-07-03T19:26:09Z", "creator": "Kevin.Ross@iVerticalLeap.com", "bug_id": 21289, "attachment_id": null}]