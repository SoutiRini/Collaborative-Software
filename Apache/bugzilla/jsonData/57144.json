[{"count": 0, "tags": [], "creator": "knst.kolinko@gmail.com", "attachment_id": null, "is_private": false, "id": 178752, "time": "2014-10-26T00:20:49Z", "bug_id": 57144, "creation_time": "2014-10-26T00:20:49Z", "text": "For reference - r1634258 and r1360468\n\nI was backporting a test for BZ 54928 from Tomcat 8 to Tomcat 7 and noted a difference in output. The code was:\n\n log.info(\"Exception caught \" + e.getMessage());\n\nIn Tomcat 7 (7.0.56+) it resulted in\n \"Exception caught null\"\nwhile on Tomcat 8 (8.0.14+) it was\n \"Exception caught Software caused connection abort: socket write error\".\n\nWhen I changed the code to use e.toString() it became:\nin Tomcat 7:\n \"Exception caught ClientAbortException:  java.net.SocketException: Software caused connection abort: socket write error\"\nin Tomcat 8:\n \"Exception caught org.apache.catalina.connector.ClientAbortException: java.net.SocketException: Software caused connection abort: socket write error\"\n\n\nThe difference comes from r1360468. Essentially Tomcat 8 delegates processing to original implementations in java.lang.Throwable, while the old code in Tomcat 7 has its own implementation of getMessage() and toString().\n\nThere are two differences:\n\na) The Throwable(Throwable cause) constructor in Java initializes message as cause.toString() while in ClientAbortException(Throwable) the message defaults to being null.\n\nb) Throwable.toString() uses the fully qualified name of a class, while ClientAbortException.toString() prints just \"ClientAbortException\"."}, {"attachment_id": null, "tags": [], "bug_id": 57144, "is_private": false, "count": 1, "id": 178754, "time": "2014-10-26T12:13:59Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2014-10-26T12:13:59Z", "text": "Fixed in Tomcat 7 by r1634311 and will be in 7.0.57 onwards."}]