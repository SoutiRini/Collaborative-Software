[{"count": 0, "tags": [], "bug_id": 55981, "is_private": false, "text": "See https://issues.apache.org/jira/browse/INFRA-7171 for full details.\n\nA Message-ID is allowed to contain the character \"&\".\nFor example, MS Outlook 12.0 can generate ids of the form:\n\nMessage-ID: <!&!A...>\n\nThe ajax processor stores the id in the response without encoding the ampersand.\n\nFor example:\n\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<mail id=\"%3c!&!A...%3e\"> \n\nThe XML processor then chokes on the \"&!A\" because it is not a valid entity reference.\n\nIt should be sufficient to encode \"&\" as \"&amp;\"", "id": 172198, "time": "2014-01-09T01:08:54Z", "creator": "sebb@apache.org", "creation_time": "2014-01-09T01:08:54Z", "attachment_id": null}, {"attachment_id": null, "tags": [], "creator": "sebb@apache.org", "text": "This is the code which fails when the XML is malformed:\n\nhttp://svn.apache.org/viewvc/httpd/mod_mbox/trunk/data/archives.js?view=markup#l408\n\nAnd here I think is the code that needs to escape ampersands:\n\nhttp://svn.apache.org/viewvc/httpd/mod_mbox/trunk/module-2.0/mod_mbox_out.c?revision=1484915&view=markup#l1267\n\nI could not find any docs on the APR method ap_escape_uri - which is what the macro URI_ESCAPE_OR_BLANK uses - so I don't know if that is supposed to escape ampersands or not.", "count": 1, "id": 172199, "time": "2014-01-09T02:18:00Z", "bug_id": 55981, "creation_time": "2014-01-09T02:18:00Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 55981, "is_private": false, "text": "Sebb: there must be something more than just the missing \"&\" encoding. I added encoding for \"&\" in message IDs to the version running on aurora (mail-archives.eu.apache.org) but the request to retrieve the mail hangs just as when accessing the unchanged version on mail-archives.us. Unfortunately Firebug doesn't show the hanging request. On the server side I can see a new connection being opened, but then not http request being send.\n\nCan you try again with your client against eu and see whether you find anything else the inhibits the processing?\n\nThanks!\n\nRainer", "id": 172238, "time": "2014-01-09T20:18:01Z", "creator": "rainer.jung@kippdata.de", "creation_time": "2014-01-09T20:18:01Z", "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 55981, "text": "Ampersand encoding in message IDs committed as r1556939.\nProblem persists.", "id": 172239, "time": "2014-01-09T20:26:02Z", "creator": "rainer.jung@kippdata.de", "creation_time": "2014-01-09T20:26:02Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 55981, "text": "The thread starts at [1].\n\nNow when I click Thread >>, I get\n\n\nNot Found\n\nThe requested URL /mod_mbox/openoffice-users/201401.mbox/<!&;!AAAAAAAAAAAuAAAAAAAAAK00G0t+umtIpgYl2WFMbwIBAGAfOzqGVtxCl8C3TALrx8YAAAAABWoAABAAAAAw8iQIDe+DSKAwYSmFc9yuAQAAAAA=@gmail.com> was not found on this server.\n\nHowever on the US box I get the message OK at [2]\n\nLooks like there is an extra \";\" in the URL.\n\nFixing that might fix the other problem.\n\n\n[1] http://mail-archives.eu.apache.org/mod_mbox/openoffice-users/201401.mbox/%3CCAH5WxYMV0Z4+V_D8HjkMGQSQwNYHnp=nc7CwWq_ZSJkDciosWA@mail.gmail.com%3E\n\n[2] http://mail-archives.us.apache.org/mod_mbox/openoffice-users/201401.mbox/%3C!&!AAAAAAAAAAAuAAAAAAAAAK00G0t+umtIpgYl2WFMbwIBAGAfOzqGVtxCl8C3TALrx8YAAAAABWoAABAAAAAw8iQIDe+DSKAwYSmFc9yuAQAAAAA=@gmail.com%3E", "id": 172240, "time": "2014-01-09T20:35:02Z", "creator": "sebb@apache.org", "creation_time": "2014-01-09T20:35:02Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 55981, "text": "NOte, when I use JMeter to download the ajax link, I see:\n\n\n<mail id=\"%3c!&amp%3b!AAAAAAAA\n\nThat does not look correct.", "id": 172242, "time": "2014-01-09T20:38:00Z", "creator": "sebb@apache.org", "creation_time": "2014-01-09T20:38:00Z", "is_private": false, "attachment_id": null}, {"count": 6, "tags": [], "bug_id": 55981, "is_private": false, "text": "AFAIK, \"&\" is valid in quoted HTML attribute values, so it should only be necessary to replace in with \"&amp;\" in XML output.", "id": 172243, "time": "2014-01-09T20:44:01Z", "creator": "sebb@apache.org", "creation_time": "2014-01-09T20:44:01Z", "attachment_id": null}, {"count": 7, "tags": [], "bug_id": 55981, "text": "(In reply to Sebb from comment #6)\n> AFAIK, \"&\" is valid in quoted HTML attribute values, so it should only be\n> necessary to replace in with \"&amp;\" in XML output.\n\nFurther, does it need to be done in XML CDATA sections?", "id": 172244, "time": "2014-01-09T20:46:28Z", "creator": "sebb@apache.org", "creation_time": "2014-01-09T20:46:28Z", "is_private": false, "attachment_id": null}, {"count": 8, "tags": [], "creator": "sebb@apache.org", "attachment_id": null, "text": "(In reply to Sebb from comment #5)\n> NOte, when I use JMeter to download the ajax link, I see:\n> \n> \n> <mail id=\"%3c!&amp%3b!AAAAAAAA\n> \n> That does not look correct.\n\nThe updated code seems to replace \"&\" with \"&amp;\" and then subject the result to uri encoding (whatever that is).\n\nHowever, not all of the locations where the msgId is used are URIs.\nThe ajax response which was causing the problem is a quoted value in an XML document. Maybe it would be sufficient to just fix the value so it does not contain a bare ampersand? Are there any other values that need to be encoded?\n\nAlternatively, fix the & after the URI encoding.\n\nAlso, I have just thought: URIs are allowed to contain &, so encoding those first may cause problems.\n\nI think the encoding probably needs to be context-specific.\n\nMay I suggest starting with just fixing the ajax output in the msgID value?", "id": 172245, "time": "2014-01-09T20:55:56Z", "bug_id": 55981, "creation_time": "2014-01-09T20:55:56Z", "is_private": false}, {"count": 9, "tags": [], "creator": "rainer.jung@kippdata.de", "attachment_id": null, "text": "(In reply to Sebb from comment #8)\n> (In reply to Sebb from comment #5)\n> > NOte, when I use JMeter to download the ajax link, I see:\n> > \n> > \n> > <mail id=\"%3c!&amp%3b!AAAAAAAA\n> > \n> > That does not look correct.\n\nI changed the ampersand encoding to happen after uri encoding. But for me the links look different than for you. Using curl:\n\nRetrieving the URL\n\nhttp://mail-archives.eu.apache.org/mod_mbox/openoffice-users/201401.mbox/ajax/thread?0\n\nthe broken message shows up as\n\n <message linked=\"1\" depth=\"1\" id=\"&lt;!&amp;!AAAAAAAAAAAuAAAAAAAAAK00G0t+umtIpgYl2WFMbwIBAGAfOzqGVtxCl8C3TALrx8YAAAAABWoAABAAAAAw8iQIDe+DSKAwYSmFc9yuAQAAAAA=@gmail.com&gt;\">\n  <from><![CDATA[Think]]></from>\n  <date><![CDATA[Mon, 06 Jan, 04:47]]></date>\n  <subject><![CDATA[RE: Folks seeking help]]></subject>\n </message>\n\nand the one working directly before is\n\n <message linked=\"1\" depth=\"0\" id=\"&lt;CAH5WxYMV0Z4+V_D8HjkMGQSQwNYHnp=nc7CwWq_ZSJkDciosWA@mail.gmail.com&gt;\">\n  <from><![CDATA[Timothy Wulf]]></from>\n  <date><![CDATA[Mon, 06 Jan, 03:43]]></date>\n  <subject><![CDATA[Folks seeking help]]></subject>\n </message>\n\n\n> The updated code seems to replace \"&\" with \"&amp;\" and then subject the\n> result to uri encoding (whatever that is).\n\nI switched to first uri encoding, then ampersand.\n\n> However, not all of the locations where the msgId is used are URIs.\n> The ajax response which was causing the problem is a quoted value in an XML\n> document. Maybe it would be sufficient to just fix the value so it does not\n> contain a bare ampersand? Are there any other values that need to be encoded?\n\nI could try, but the only other encoded chars in the example above are \"<\" and \">\" which are also encoded in the working message ids.\n\n> Alternatively, fix the & after the URI encoding.\n\nDone.\n\n> May I suggest starting with just fixing the ajax output in the msgID value?\n\nWhat do you mean by this \"ajax output in the msgID value\"?\n\nRegards,\n\nRainer", "id": 172246, "time": "2014-01-09T21:18:25Z", "bug_id": 55981, "creation_time": "2014-01-09T21:18:25Z", "is_private": false}, {"count": 10, "tags": [], "bug_id": 55981, "text": "\n> What do you mean by this \"ajax output in the msgID value\"?\n\nThe ajax/xxx URL generates XML containing\n\n<mail id=\"%3c!&!A...%3e\">\n\non the original sofware. That is the only bit that does not seem to work, so I suggest just fixing that piece of code, i.e. as originally quoted:\n\nhttp://svn.apache.org/viewvc/httpd/mod_mbox/trunk/module-2.0/mod_mbox_out.c?revision=1484915&view=markup#l1267\n\nThe currently updated code has got lots of additional changes; it's not clear to me that they are necessary - and some may be incorrect. Even if they do turn out to be required, it makes sense to try and fix one problem at a time.\n\nThe EU server now works OK for me using Chrome (limited testing), but still hangs in Firefox.\n\nI get output starting\n\n<mail id=\"%3c!%26!AAAAAAAAAA\n\nwhen I access the URL\n\nhttp://mail-archives.eu.apache.org/mod_mbox/openoffice-users/201401.mbox/ajax/%3C!&!AAAAAAAAAAAuAAAAAAAAAK00G0t+umtIpgYl2WFMbwIBAGAfOzqGVtxCl8C3TALrx8YAAAAABWoAABAAAAAw8iQIDe+DSKAwYSmFc9yuAQAAAAA=@gmail.com%3E\n\nThis is the one generated from Thread >> as explained previously\n\n\nFor the thread?0 URL you used, I get the same result on both EU and US, so clearly the patch has not changed that. But AFAICT that is not the problem area.\nThe original problem output is as stated in comment 1", "id": 172248, "time": "2014-01-09T23:45:11Z", "creator": "sebb@apache.org", "creation_time": "2014-01-09T23:45:11Z", "is_private": false, "attachment_id": null}, {"count": 11, "tags": [], "bug_id": 55981, "text": "Not sure if you have made a further change to the EU server, but it seems to be working OK for me now in both Firefox and Chrome. Or perhaps there was a caching problem previously with my browser?", "id": 172290, "time": "2014-01-11T22:46:13Z", "creator": "sebb@apache.org", "creation_time": "2014-01-11T22:46:13Z", "is_private": false, "attachment_id": null}, {"attachment_id": null, "tags": [], "creator": "rainer.jung@kippdata.de", "text": "Hi Sebb, thanks for your feedback and tests.\n\nThe last change I made to the eu mail-archives were on January 9th, 10:51 p.m. UTC. I commited that final change right now as r1557528 to svn.\n\nI tried to debug the root cause as well, but also got problems with browser the cache. The javascript engine complained about non-well formed ajax reponses (the same URL that you provided in Comment #10) because of an ampersand in the id attribute. But when I retrieved the same content with a simple commandline client it passed the tests for well-formedness and there was the %26 instead of the ampersand.\n\nI copied the latest variant of mod_mbox to the us mail-archives now as well (and restarted it).\n\nI will close this now, feel free to reopen if you stumble over the same problem again.", "count": 12, "id": 172299, "time": "2014-01-12T13:50:32Z", "bug_id": 55981, "creation_time": "2014-01-12T13:50:32Z", "is_private": false}, {"count": 13, "tags": [], "creator": "sebb@apache.org", "attachment_id": null, "text": "One thought did occur to me last night - the existing encoding uses hex (%xx), so it would  have been better to use the same for the \"&\", rather than using \"&amp;\". My bad there.\n\nI'm still unsure that all the changes were necessary, but I guess that will be discovered in due course.", "id": 172300, "time": "2014-01-12T13:58:57Z", "bug_id": 55981, "creation_time": "2014-01-12T13:58:57Z", "is_private": false}, {"count": 14, "tags": [], "creator": "sebb@apache.org", "attachment_id": null, "text": "Unfortunately just discovered another hang in the same mailbox.\n\nStart with:\n\nhttp://mail-archives.apache.org/mod_mbox/openoffice-users/201401.mbox/browser\n\nFind the  first email from Carmen Putrino, and click on that.\n\nThen click Next - works OK\n\nClick Next again - hangs.\n\nIt looks as though the e-mail being requested cannot be found [1]\n\nHowever in the thread list one can click on the message from \"Think\" [2]\n\nIt looks like the failing URL has been encoded too much (or is not being decoded correctly).\n\nI don't have time to look at this further just now.\n\n[Perhaps we could discuss on infra-dev how to set up a local test server? There are probably other encoding issues.]\n\n[1] http://mail-archives.eu.apache.org/mod_mbox/openoffice-users/201401.mbox/ajax/%3C!%26!AAAAAAAAAAAuAAAAAAAAAK00G0t%2BumtIpgYl2WFMbwIBAGAfOzqGVtxCl8C3TALrx8YAAAAABWoAABAAAAAMeR3X77CdSIA6a%2FHOYp40AQAAAAA%3D%40gmail.com%3E\n\n\n[2] http://mail-archives.eu.apache.org/mod_mbox/openoffice-users/201401.mbox/%3c!%26!AAAAAAAAAAAuAAAAAAAAAK00G0t+umtIpgYl2WFMbwIBAGAfOzqGVtxCl8C3TALrx8YAAAAABWoAABAAAAAMeR3X77CdSIA6a/HOYp40AQAAAAA=@gmail.com%3e", "id": 172305, "time": "2014-01-12T15:45:05Z", "bug_id": 55981, "creation_time": "2014-01-12T15:45:05Z", "is_private": false}, {"count": 15, "tags": [], "bug_id": 55981, "is_private": false, "text": "Yes there are probably more ones.\n\nThis one is due to the client sending a %2F for a slash. By default %2F is disabled for security reasons. To make it work, we would either need to allow %2F in the mail-archives vhost on the proxy in front of mail-archives - which I have just done for eu - or change the JavaScript file distributed to not switch from \"/\" to %2F in message id encoding. There's two calls to encodeURIComponent() in archives.js, one of which likely is responsible. At least I didn't see the %2F in the message ids contained in responses the server itself sends.", "id": 172308, "time": "2014-01-12T16:30:46Z", "creator": "rainer.jung@kippdata.de", "creation_time": "2014-01-12T16:30:46Z", "attachment_id": null}]