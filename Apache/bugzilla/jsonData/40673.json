[{"count": 0, "tags": [], "creator": "nrhope@gmail.com", "attachment_id": null, "text": "The provided patch allows users to specify two things:\n    a) variable name to be assigned    AND\n    b) path to file to be read\nand then assigns the contents of the specified file to the value of the provided\nvariable. This is useful for me as I'm dealing with large numbers of big XML\nfiles which are shared between multiple .jmx tests, and I want:\n    1. to avoid having to do lots of cut-and-pastes of the XML content into the\nUser Defined Variables in multiple tests, with the related headaches of not\nbeing able to tell which ones are up to date etc\n    2. want to use an external XML editor to ensure that the XML files stay\nvalid / make use of XSD support etc.", "id": 94458, "time": "2006-10-03T18:25:20Z", "bug_id": 40673, "creation_time": "2006-10-03T18:25:20Z", "is_private": false}, {"count": 1, "tags": [], "creator": "nrhope@gmail.com", "text": "Created attachment 18958\nadd VarFromFileController to 2.2. branch", "id": 94459, "time": "2006-10-03T18:27:10Z", "bug_id": 40673, "creation_time": "2006-10-03T18:27:10Z", "is_private": false, "attachment_id": 18958}, {"count": 2, "tags": [], "creator": "sebb@apache.org", "attachment_id": null, "id": 94566, "time": "2006-10-05T18:01:45Z", "bug_id": 40673, "creation_time": "2006-10-05T18:01:45Z", "is_private": false, "text": "Thanks!\n\nJust wondering why the element has been implemented as a Controller, rather than\na Config or Pre-Processor?\n\nAlso, if the intention is to send files via a sampler, why not add the necessary\nfile support there? Large files will need lots of memory for the variable storage."}, {"count": 3, "tags": [], "bug_id": 40673, "attachment_id": null, "is_private": false, "id": 99215, "time": "2007-02-10T04:10:39Z", "creator": "sebb@apache.org", "creation_time": "2007-02-10T04:10:39Z", "text": "On further reflection, I cannot see the point of this functionality as a \ncontroller.\n\nSeems to me it would be better as a Config element or Pre-Processor or a \nfunction.\n\nAs a work round, it can easily be implemented using a BeanShell Pre-Processor \nor function."}]