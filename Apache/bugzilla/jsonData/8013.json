[{"count": 0, "tags": [], "bug_id": 8013, "is_private": false, "text": "The org.apache.catalina.servlets.DefaultServlet throws a \njava.lang.NumberFormatException in the checkIfHeaders() method.  Here's the \nstack trace...\n\njava.lang.NumberFormatException: at java.lang.Long.parseLong(Long.java:331) at \njava.lang.Long.parseLong(Long.java:363) at java.text.DigitList.getLong\n(DigitList.java:153) at java.text.DecimalFormat.parse(DecimalFormat.java:808) \nat java.text.SimpleDateFormat.subParse(SimpleDateFormat.java:1201) at \njava.text.SimpleDateFormat.parse(SimpleDateFormat.java:730) at \njava.text.DateFormat.parse(DateFormat.java:322) at \norg.apache.catalina.servlets.DefaultServlet.checkIfHeaders\n(DefaultServlet.java:753) at \norg.apache.catalina.servlets.DefaultServlet.serveResource\n(DefaultServlet.java:1095) at org.apache.catalina.servlets.DefaultServlet.doGet\n(DefaultServlet.java:519) at javax.servlet.http.HttpServlet.service\n(HttpServlet.java:740) at javax.servlet.http.HttpServlet.service\n(HttpServlet.java:853) at \norg.apache.catalina.core.ApplicationFilterChain.internalDoFilter\n(ApplicationFilterChain.java:247) at \norg.apache.catalina.core.ApplicationFilterChain.doFilter\n(ApplicationFilterChain.java:193) at \norg.chmcc.trafac.servlet.filter.ErrorTrapFilter.doFilter\n(ErrorTrapFilter.java:25) at \ncom.carmanconsulting.servlet.filter.HttpFilter.doFilter(HttpFilter.java:21) at \norg.apache.catalina.core.ApplicationFilterChain.internalDoFilter\n(ApplicationFilterChain.java:213) at \norg.apache.catalina.core.ApplicationFilterChain.doFilter\n(ApplicationFilterChain.java:193) at \norg.apache.catalina.core.StandardWrapperValve.invoke\n(StandardWrapperValve.java:243) at \norg.apache.catalina.core.StandardPipeline.invokeNext\n(StandardPipeline.java:566) at org.apache.catalina.core.StandardPipeline.invoke\n(StandardPipeline.java:472) at org.apache.catalina.core.ContainerBase.invoke\n(ContainerBase.java:943) at \norg.apache.catalina.core.StandardContextValve.invoke\n(StandardContextValve.java:201) at \norg.apache.catalina.core.StandardPipeline.invokeNext\n(StandardPipeline.java:566) at \norg.apache.catalina.authenticator.AuthenticatorBase.invoke\n(AuthenticatorBase.java:472) at \norg.apache.catalina.core.StandardPipeline.invokeNext\n(StandardPipeline.java:564) at org.apache.catalina.core.StandardPipeline.invoke\n(StandardPipeline.java:472) at org.apache.catalina.core.ContainerBase.invoke\n(ContainerBase.java:943) at org.apache.catalina.core.StandardContext.invoke\n(StandardContext.java:2344) at \norg.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:164) \nat org.apache.catalina.core.StandardPipeline.invokeNext\n(StandardPipeline.java:566) at \norg.apache.catalina.valves.ErrorDispatcherValve.invoke\n(ErrorDispatcherValve.java:170) at \norg.apache.catalina.core.StandardPipeline.invokeNext\n(StandardPipeline.java:564) at \norg.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:170) \nat org.apache.catalina.core.StandardPipeline.invokeNext\n(StandardPipeline.java:564) at org.apache.catalina.valves.AccessLogValve.invoke\n(AccessLogValve.java:462) at \norg.apache.catalina.core.StandardPipeline.invokeNext\n(StandardPipeline.java:564) at org.apache.catalina.core.StandardPipeline.invoke\n(StandardPipeline.java:472) at org.apache.catalina.core.ContainerBase.invoke\n(ContainerBase.java:943) at org.apache.catalina.core.StandardEngineValve.invoke\n(StandardEngineValve.java:163) at \norg.apache.catalina.core.StandardPipeline.invokeNext\n(StandardPipeline.java:566) at org.apache.catalina.core.StandardPipeline.invoke\n(StandardPipeline.java:472) at org.apache.catalina.core.ContainerBase.invoke\n(ContainerBase.java:943) at \norg.apache.catalina.connector.http.HttpProcessor.process\n(HttpProcessor.java:1011) at \norg.apache.catalina.connector.http.HttpProcessor.run(HttpProcessor.java:1106) \nat java.lang.Thread.run(Thread.java:484)", "id": 13355, "time": "2002-04-12T12:55:58Z", "creator": "james@carmanconsulting.com", "creation_time": "2002-04-12T12:55:58Z", "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 8013, "text": "There's a problem with the default servlet as it uses shared date parsers \n(possible thread safety problems), as was poited out earlier today. Maybe this \ncould cause this problem.\nIt could also be that the HTTP request is invalid, or maybe be a bug in the JDK \ndate parser code.\nThe HTTP date formats used by TC appear the right one.", "count": 1, "id": 13386, "time": "2002-04-12T15:29:53Z", "creator": "remm@apache.org", "creation_time": "2002-04-12T15:29:53Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 8013, "text": "I see this bug also on HP-UX.  Nothing in this bug report explains why it is \nmarked invalid.  For me, it happens on a multiprocessor server doing standard \nJSP calls -- IOW, I'm not generating my own HTTP requests in my own code.\n\nCould somebody explain what is invalid about this bug?", "id": 16884, "time": "2002-05-29T18:24:30Z", "creator": "trader@saltare.com", "creation_time": "2002-05-29T18:24:30Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "creator": "bob@jadn.com", "attachment_id": null, "text": "does this still happen on 4.1.3 (now beta) and is there a test case to \ngenerate the exeception ?\n", "id": 17210, "time": "2002-06-05T18:55:45Z", "bug_id": 8013, "creation_time": "2002-06-05T18:55:45Z", "is_private": false}, {"count": 4, "attachment_id": null, "bug_id": 8013, "text": "The bug occurred on 4.0.1.  I haven't seen it yet on 4.0.3, but I have limited \naccess to the HP-UX box it occurred on, and besides, I can see that the \noffending code is the same.  This happens during startup of a large \nJBoss/Tomcat server app, so there's no test case we can provide short of the \nentire product (and I can't do that :-( -- what I can tell you is that it is \nquite probable that there was an applet making HTTP requests during the startup \nprocess)\n\nBut the real point here is that DefaultServlet allows concurrent access to its \nSimpleDateFormat objects, and it shouldn't (see \nhttp://java.sun.com/j2se/1.4/docs/api/java/text/SimpleDateFormat.html, under \nthe heading of \"Synchronization\").  The formatting needs to be properly \nsynchronized.", "id": 17335, "time": "2002-06-06T17:50:15Z", "creator": "trader@saltare.com", "creation_time": "2002-06-06T17:50:15Z", "tags": [], "is_private": false}, {"count": 5, "attachment_id": null, "bug_id": 8013, "text": "Why can't the DefaultServlet just use the HttpServletRequest's getDateHeader() \nmethod and avoid this duplicate code?  Then the multithreading issues are \nsolved, because the request is only used by one thread!", "id": 17370, "time": "2002-06-07T00:01:43Z", "creator": "james@carmanconsulting.com", "creation_time": "2002-06-07T00:01:43Z", "tags": [], "is_private": false}, {"count": 6, "tags": [], "bug_id": 8013, "is_private": false, "text": "I would recommend the following refactorings for the DefaultServlet class...\n\n1.  Use the \"extract method\" refactoring for each of the \"if\" checks in the \ncheckIfHeaders() method, resulting in the following four new helper methods.\n\nprivate boolean checkIfMatch(HttpServletRequest request,\n                             HttpServletResponse response,\n                             ResourceInfo resourceInfo);\nprivate boolean checkIfModifiedSince(HttpServletRequest request,\n                                     HttpServletResponse response,\n                                     ResourceInfo resourceInfo);\nprivate boolean checkIfNoneMatch(HttpServletRequest request,\n                                 HttpServletResponse response,\n                                 ResourceInfo resourceInfo);\nprivate boolean checkIfUnmodifiedSince(HttpServletRequest request,\n                                       HttpServletResponse response,\n                                       ResourceInfo resourceInfo);\n\nOf course, these methods should rely on the HttpServletRequest.getDateHeader() \nmethod where applicable, rather than performing their own date parsing, using \nthe static \"formats\" array.\n\n2.  The checkIfHeaders() method should contain the following logic...\n\nprotected boolean checkIfHeaders(HttpServletRequest request,\n                                 HttpServletResponse response,\n                                 ResourceInfo resourceInfo)\n                                 throws IOException {\n  return checkIfMatch(request, response, resourceInfo) &&\n         checkIfModifiedSince(request, response, resourceInfo) &&\n         checkIfNoneMatch(request, response, resourceInfo) &&\n         checkIfUnmodifiedSince(request, response, resourceInfo);\n}\n\n3.  The static \"formats\" array should be removed, as they are not thread-safe.", "id": 17384, "time": "2002-06-07T02:12:54Z", "creator": "james@carmanconsulting.com", "creation_time": "2002-06-07T02:12:54Z", "attachment_id": null}, {"count": 7, "tags": [], "bug_id": 8013, "is_private": false, "text": "Created attachment 2023\nThis should solve the problems we've seen...", "id": 17387, "time": "2002-06-07T03:47:57Z", "creator": "james@carmanconsulting.com", "creation_time": "2002-06-07T03:47:57Z", "attachment_id": 2023}, {"count": 8, "tags": [], "bug_id": 8013, "attachment_id": 2080, "id": 17731, "time": "2002-06-13T13:01:51Z", "creator": "james@carmanconsulting.com", "creation_time": "2002-06-13T13:01:51Z", "is_private": false, "text": "Created attachment 2080\nThis code illustrates the multi-threading issue with the SimpleDateFormat class, but it is very inconsistent.  Must be some obscure race condition."}, {"count": 9, "tags": [], "bug_id": 8013, "attachment_id": null, "id": 17744, "time": "2002-06-13T16:19:14Z", "creator": "remm@apache.org", "creation_time": "2002-06-13T16:19:14Z", "is_private": false, "text": "Don't worry, I plan to apply the patch; it's just that I was a bit short on time."}, {"attachment_id": null, "tags": [], "bug_id": 8013, "is_private": false, "count": 10, "id": 17758, "time": "2002-06-13T23:18:50Z", "creator": "remm@apache.org", "creation_time": "2002-06-13T23:18:50Z", "text": "I have applied the patch submitted. 4.1.5 will include the fix."}, {"count": 11, "attachment_id": 2082, "bug_id": 8013, "text": "Created attachment 2082\nAdd IllegalArgumentException catch blocks in the checkIfModifiedSince and checkIfUnmodifiedSince methods", "id": 17769, "time": "2002-06-14T02:31:38Z", "creator": "james@carmanconsulting.com", "creation_time": "2002-06-14T02:31:38Z", "tags": [], "is_private": false}, {"count": 12, "tags": [], "bug_id": 8013, "text": "You need to use the latest version of the file to create the patch (version 1.56).", "id": 17770, "time": "2002-06-14T02:44:44Z", "creator": "remm@apache.org", "creation_time": "2002-06-14T02:44:44Z", "is_private": false, "attachment_id": null}, {"count": 13, "tags": [], "creator": "james@carmanconsulting.com", "attachment_id": 2083, "text": "Created attachment 2083\nApplying the patch using revision 1.56 and the \"non-unified\" format.", "id": 17772, "time": "2002-06-14T02:54:55Z", "bug_id": 8013, "creation_time": "2002-06-14T02:54:55Z", "is_private": false}, {"count": 14, "tags": [], "creator": "remm@apache.org", "attachment_id": null, "id": 17773, "time": "2002-06-14T03:30:11Z", "bug_id": 8013, "creation_time": "2002-06-14T03:30:11Z", "is_private": false, "text": "Thanks again for the patch."}]