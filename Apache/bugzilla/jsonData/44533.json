[{"attachment_id": null, "tags": [], "creator": "etienne.phillips@gmail.com", "text": "Hi\n\nThis code:\n[code]\n#include <stdio.h>\n#include <apr_general.h>\n#include <apr_file_io.h>\n\nint main(int argc, const char *argv[])\n{\n\tapr_pool_t *mp;\n\n\tapr_initialize();\n\tapr_pool_create(&mp, NULL);\n\n\tapr_dir_t* dev_dir;\n\tapr_dir_open(&dev_dir, \"/dev\", mp);\n\t\n\tapr_finfo_t* fileinfo;\n\t\n\twhile (apr_dir_read(fileinfo, 0, dev_dir) == APR_SUCCESS)\n\t{\n\t\tprintf(\"%s\\n\",fileinfo->name);\n\t} \n\t\n\treturn 0;\n}\n\n[/code]\n\nsegfaults on line 17 (while apr_dir_read...) on Ubuntu 7.04 (kernel 2.6.20-15-generic) when compiled with gcc (GCC) 4.1.2 (Ubuntu 4.1.2-0ubuntu4). This is on a VIA C7 x86 compatible processor.\n\nThe interesting bit of the crash, when run in gdb is:\n\nProgram received signal SIGSEGV, Segmentation fault.\n[Switching to Thread -1211336480 (LWP 7735)]\n0xb7f77a82 in apr_dir_read () from /usr/lib/libapr-1.so.0\n(gdb) bt\n#0  0xb7f77a82 in apr_dir_read () from /usr/lib/libapr-1.so.0\n#1  0x08048681 in main () at ../apr_testing.c++:17\n\nThis code runs perfectly on Mac OS X 10.4.11, when compiled with i686-apple-darwin8-gcc-4.0.1, running on a MacBookPro 1,1 (Intel CoreDuo). I am using the latest APR package on both platforms (apr-1.12).\n\nAny ideas?\nThanks\nEtienne", "count": 0, "id": 114266, "time": "2008-03-04T11:37:44Z", "bug_id": 44533, "creation_time": "2008-03-04T11:37:44Z", "is_private": false}, {"count": 1, "tags": [], "creator": "rpluem@apache.org", "attachment_id": null, "id": 114270, "time": "2008-03-04T13:58:38Z", "bug_id": 44533, "creation_time": "2008-03-04T13:58:38Z", "is_private": false, "text": "Your test program is buggy. It must be\n\n        apr_finfo_t fileinfo;\n\n        while (apr_dir_read(i&fileinfo, 0, dev_dir) == APR_SUCCESS)\n        {\n                printf(\"%s\\n\",fileinfo.name);\n        } \n\n\ninstead and everything works as designed."}, {"count": 2, "tags": [], "bug_id": 44533, "attachment_id": null, "id": 114271, "time": "2008-03-04T14:05:49Z", "creator": "rpluem@apache.org", "creation_time": "2008-03-04T14:05:49Z", "is_private": false, "text": "Of course it must be\n\n        while (apr_dir_read(&fileinfo, 0, dev_dir) == APR_SUCCESS)\n\n\ninstead of\n\n        while (apr_dir_read(i&fileinfo, 0, dev_dir) == APR_SUCCESS)\n\n"}, {"count": 3, "tags": [], "bug_id": 44533, "attachment_id": null, "id": 114275, "time": "2008-03-04T20:16:13Z", "creator": "etienne.phillips@gmail.com", "creation_time": "2008-03-04T20:16:13Z", "is_private": false, "text": "How embarrassing!\n\nYes, as expected, changing the code to your suggestion fixed the problem... I am amazed though that the compiler doesn't complain about it, and that it actually worked on the Mac!\n\nApologies for posting a false bug!\n\nEtienne"}]