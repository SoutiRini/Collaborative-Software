[{"count": 0, "tags": [], "creator": "remie@backbase.com", "text": "Created attachment 22589\nFiltering, and beyond!\n\nIt would be nice if it is possible to add a pattern to a filterset to define which files should be processed, or omitted.\n\nFor instance, the following task will copy all contents from directory srcDir to directory destDir, replacing all instances of someToken:\n\n<copy failonerror=\"false\" todir=\"${destDir}\">\n  <fileset dir=\"${srcDir}\" />\n  <filterset>\n    <filter token=\"${someToken}\" value=\"\"/>\n  </filterset>\n</copy>\n\nNow, in my real life scenario, this fileset includes resources like images which actually contain someToken, making the images look like an 80s arcade console (see attachment).\n\nThis forces me to do the following:\n\n<copy failonerror=\"false\" todir=\"${destDir}\">\n  <fileset dir=\"${srcDir}\" includes=\"**/*.html/>\n  <filterset>\n    <filter token=\"${someToken}\" value=\"\"/>\n  </filterset>\n</copy>\n\n<copy failonerror=\"false\" todir=\"${destDir}\">\n  <fileset dir=\"${srcDir}\" excludes=\"**/*.html/>\n  <filterset>\n    <filter token=\"${someToken}\" value=\"\"/>\n  </filterset>\n</copy>\n\nThis seems odd, for the inclusion pattern lies not on the copy task (I want all files to go in the same destination directory. I simply do not want the filter to be applied to all files. An inclusion / exclusion flag on the filterset would be appropriate here.", "id": 120653, "time": "2008-09-16T00:53:07Z", "bug_id": 45819, "creation_time": "2008-09-16T00:53:07Z", "is_private": false, "attachment_id": 22589}]