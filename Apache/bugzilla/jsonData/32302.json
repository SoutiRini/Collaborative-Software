[{"count": 0, "tags": [], "text": "I tried to create a property with an \"&\" char in the value. proppatch calls the \nXMLPrinter to prep a property element for transmission to the server but the \nwriteProperty method called is not the variant that formats the value with a \nCDATA wrapper which means that chars like <, >, & etc can be included in the \nproperty value.\n\nThe patch I have tested in my own client config is to change the default \noperation of the writeProperty methods to wrap all property values with CDATA. \nThis will not affect the actual value of the properties simply allow them to \ncontain XML syntax chars like &, < and >.", "is_private": false, "bug_id": 32302, "id": 67183, "time": "2004-11-18T23:25:00Z", "creator": "wburrows@e2open.com", "creation_time": "2004-11-18T23:25:00Z", "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 32302, "text": "Created attachment 13497\npatch to XMLPrinter.java", "id": 67184, "attachment_id": 13497, "creator": "wburrows@e2open.com", "creation_time": "2004-11-18T23:31:23Z", "time": "2004-11-18T23:31:23Z", "is_private": false}, {"count": 2, "tags": [], "text": "accepting and will commit when i get committer account.", "attachment_id": null, "id": 67185, "creation_time": "2004-11-18T23:31:54Z", "time": "2004-11-18T23:31:54Z", "creator": "wburrows@e2open.com", "bug_id": 32302, "is_private": false}, {"count": 3, "tags": [], "creator": "tfrank@registrar.uoguelph.ca", "attachment_id": null, "id": 67190, "time": "2004-11-19T01:20:37Z", "bug_id": 32302, "creation_time": "2004-11-19T01:20:37Z", "is_private": false, "text": "(In reply to comment #2)\n> accepting and will commit when i get committer account.\n\nI believe this patch is going to cause a problem with using the proppatch method\nto properly modify properties that validly contain descendants. For example, the\nauto-version property looks like:\n\n<D:auto-version>\n    <D:checkout-checkin/>\n</D:auto-version>\n\nIf you wrap the value as CDATA then the proppatch won't work. Similary for other\nproperties that have valid XML structures for their \"values\".\n\nThe real issue is that the proppatch/XMLWriter methods are using strings to\nrepresent the XML structure and the special entities are not properly escaped.\n\nWill this cause issues with properties such as D:displayname and D:comment that\naren't normally CDATA?"}, {"count": 4, "tags": [], "creator": "wburrows@e2open.com", "attachment_id": null, "id": 67192, "time": "2004-11-19T01:55:59Z", "bug_id": 32302, "creation_time": "2004-11-19T01:55:59Z", "is_private": false, "text": "Yep, you're right. This patch will cause problems for XML encoded values passed \nto proppatch. Since the XMLWriter can't distinguish XML values from plain \nstring values I guess I must just assume that passing XML encoded String values \nis the requirement and that if I want to pass plain string data then I need to \nescape it myself. In which case I'll cancel this defect and put the CDATA \nwrappers in my calls to proppatch instead. The existence of a writeProperty \nmethod that actually escapes the string value for you made me think that it was \nsupposed to be doing it. Thanks for catching this. I wouldn't have noticed a \nproblem since I only proppatch the \"displayname\" property currently but others \nwould have had problems.\n\n"}, {"count": 5, "tags": [], "bug_id": 32302, "attachment_id": null, "text": "Not a problem, I have been hunting around many of the low level method calls\nthese days during evaluation of how to write a CMS front end using the client\nAPI, I have noticed quite a few issues like this that I am making notes of along\nthe way. Hopefully I will be able to get some time to contribute my findings\nback in the way of patches in the near/mid future.", "id": 67193, "time": "2004-11-19T02:50:21Z", "creator": "tfrank@registrar.uoguelph.ca", "creation_time": "2004-11-19T02:50:21Z", "is_private": false}]