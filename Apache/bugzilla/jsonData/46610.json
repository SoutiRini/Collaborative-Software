[{"count": 0, "tags": [], "text": "Problem is caused by unicode in the word document.\nDocuments that reproduce the problem are attached.\n\nCode to reproduce:\nHWPFDocument doc = new HWPFDocument(new FileInputStream(args[0]));\nRange globalRange = doc.getRange();\nfor (int i = 0; i < globalRange.numParagraphs(); i++) {\n\tParagraph p = globalRange.getParagraph(i);\n\tSystem.out.println(p.text());\n\tfor (int j = 0; j < p.numCharacterRuns(); j++) {\n\t\tCharacterRun characterRun = p.getCharacterRun(j);\n\t\tcharacterRun.text();\n\t}\n}", "is_private": false, "id": 124385, "creator": "benjamin.engele@polarion.com", "time": "2009-01-27T02:07:45Z", "bug_id": 46610, "creation_time": "2009-01-27T02:07:45Z", "attachment_id": null}, {"attachment_id": 23178, "tags": [], "creator": "benjamin.engele@polarion.com", "text": "Created attachment 23178\nA word file that triggers the exception.", "count": 1, "id": 124386, "time": "2009-01-27T02:10:53Z", "bug_id": 46610, "creation_time": "2009-01-27T02:10:53Z", "is_private": false}, {"count": 2, "tags": [], "creator": "benjamin.engele@polarion.com", "attachment_id": 23179, "text": "Created attachment 23179\nPatch for Exception triggered by utf.doc", "id": 124387, "time": "2009-01-27T02:32:18Z", "bug_id": 46610, "creation_time": "2009-01-27T02:32:18Z", "is_private": false}, {"count": 3, "tags": [], "creator": "benjamin.engele@polarion.com", "is_private": false, "text": "Created attachment 23180\nTriggers a different cause of the Exception", "id": 124388, "time": "2009-01-27T02:34:45Z", "bug_id": 46610, "creation_time": "2009-01-27T02:34:45Z", "attachment_id": 23180}, {"count": 4, "tags": [], "bug_id": 46610, "attachment_id": 23181, "text": "Created attachment 23181\nPatch for Exception triggered by utf2.doc\n\nLogic that calculates char index from byte index in BytePropertyNode rewritten.\nOld approach to check if start index is in a unicode text piece and divide indexes by 2 in that case is wrong.", "id": 124393, "time": "2009-01-27T05:57:11Z", "creator": "benjamin.engele@polarion.com", "creation_time": "2009-01-27T05:57:11Z", "is_private": false}, {"count": 5, "tags": [], "text": "The root problem of this defect also causes other problems like paragraphs and character runs at wrong positions.", "attachment_id": null, "id": 124394, "creator": "benjamin.engele@polarion.com", "time": "2009-01-27T05:59:19Z", "bug_id": 46610, "creation_time": "2009-01-27T05:59:19Z", "is_private": false}, {"count": 6, "attachment_id": null, "bug_id": 46610, "is_private": false, "id": 124405, "time": "2009-01-27T13:13:54Z", "creator": "benjamin.engele@polarion.com", "creation_time": "2009-01-27T13:13:54Z", "tags": [], "text": "Patch for Exception triggered by utf2.doc doesn't resolve all problems with utf2.doc: The last paragraph is misplaced. This is happens because of another error in translating byte positions from FormatedDiskPage to char positions in the TextPiece.\n\nSome more notes:\nWriting wasn't tested and not changed. It is probably now more broken then it was before. BytePropertyNode.getStartBytes() and getEndBytes() definitely needs to be fixed, they still uses the wrong approach to calculate the byte index from the char index.\n\nIMHO BytePropertyNode.isUnicode() should be removed as soon as get[Start/End]Bytes() has been fixed. Don't think the information that the tart of the node is in a unicode text piece is useful.\n"}, {"count": 7, "tags": [], "creator": "benjamin.engele@polarion.com", "attachment_id": 23184, "text": "Created attachment 23184\nPatch that fixes all problems with paragraph positions I had", "id": 124406, "time": "2009-01-27T13:26:44Z", "bug_id": 46610, "creation_time": "2009-01-27T13:26:44Z", "is_private": false}, {"count": 8, "tags": [], "text": "This patch greatly improves text extraction for Cyrillic documents on 3.5beta5.  Unfortunately it breaks few test cases (TestRangeDelete, TestRangeInsertion, TestRangeProperties and TestSectionTable).\n\nAlso patch fails to apply on 3.5beta6 and current trunk.", "attachment_id": null, "bug_id": 46610, "id": 127959, "time": "2009-06-16T05:32:40Z", "creator": "max.valjanski@gmail.com", "creation_time": "2009-06-16T05:32:40Z", "is_private": false}, {"count": 9, "tags": [], "bug_id": 46610, "is_private": false, "text": "I modifed Benjamin Engele patch:\n\n1) Patch ported to current svn trunk (trivial)\n\n2) Corrected getStartBytes()/getEndBytes() methods in BytePropertyNode. This fixes TestRangeDelete, TestRangeInsertion and TestSectionTable tests.\n\nOne test is still broken - TestRangeProperties", "id": 128052, "time": "2009-06-18T07:30:35Z", "creator": "max.valjanski@gmail.com", "creation_time": "2009-06-18T07:30:35Z", "attachment_id": null}, {"count": 10, "tags": [], "text": "Created attachment 23829\nUnicode patch", "attachment_id": 23829, "bug_id": 46610, "id": 128053, "time": "2009-06-18T07:32:41Z", "creator": "max.valjanski@gmail.com", "creation_time": "2009-06-18T07:32:41Z", "is_private": false}, {"count": 11, "tags": [], "creator": "benjamin.engele@polarion.com", "text": "Actually I didn't look at the test cases so I am no big help finding out why they fail... Happy to see that you managed to solve most test failures.", "id": 128057, "time": "2009-06-18T08:09:50Z", "bug_id": 46610, "creation_time": "2009-06-18T08:09:50Z", "is_private": false, "attachment_id": null}, {"count": 12, "attachment_id": null, "bug_id": 46610, "is_private": false, "id": 128082, "time": "2009-06-19T04:57:16Z", "creator": "max.valjanski@gmail.com", "creation_time": "2009-06-19T04:57:16Z", "tags": [], "text": "New version:\n\nBugfixed CPtoFC and remove FCtoCP methods of SectionTable. Now we pass all unit-tests successful"}, {"count": 13, "tags": [], "bug_id": 46610, "is_private": false, "text": "Created attachment 23833\nUnicode patch v.2", "id": 128083, "time": "2009-06-19T04:58:24Z", "creator": "max.valjanski@gmail.com", "creation_time": "2009-06-19T04:58:24Z", "attachment_id": 23833}, {"attachment_id": 23834, "tags": [], "creator": "max.valjanski@gmail.com", "text": "Created attachment 23834\nMSWord file that shows broken paragraph problem", "count": 14, "id": 128084, "time": "2009-06-19T04:59:37Z", "bug_id": 46610, "creation_time": "2009-06-19T04:59:37Z", "is_private": false}, {"count": 15, "tags": [], "bug_id": 46610, "attachment_id": null, "id": 128087, "time": "2009-06-19T05:44:59Z", "creator": "yegor@dinom.ru", "creation_time": "2009-06-19T05:44:59Z", "is_private": false, "text": "Thanks for researching it. Is the patch ready to be committed?\n\nYegor"}, {"count": 16, "tags": [], "creator": "max.valjanski@gmail.com", "is_private": false, "text": "Created attachment 23835\nunit test case\n\nsrc/scratchpad/testcases/org/apache/poi/hwpf/TestBug46610.java", "id": 128088, "time": "2009-06-19T05:53:30Z", "bug_id": 46610, "creation_time": "2009-06-19T05:53:30Z", "attachment_id": 23835}, {"count": 17, "tags": [], "bug_id": 46610, "attachment_id": null, "id": 128089, "time": "2009-06-19T05:56:48Z", "creator": "max.valjanski@gmail.com", "creation_time": "2009-06-19T05:56:48Z", "is_private": false, "text": "Yes, it is ready. This patch does not break existing unit tests and fixes few problems in text extraction. I do not have real world application to test writing. \n\nPlease add attached unit test and put test files into src/scratchpad/testcases/org/apache/poi/hwpf/data/\n\nutf.doc as Bug46610_1.doc\nutf2.doc as Bug46610_2.doc\nperl_o_fytbole_.doc as Bug46610_3.doc"}, {"count": 18, "tags": [], "bug_id": 46610, "is_private": false, "text": "Benjamin and Maxim,\n\nThanks for researching this issue and providing the fix. The patch was applied in r786505\n\nYegor", "id": 128096, "time": "2009-06-19T06:51:06Z", "creator": "yegor@dinom.ru", "creation_time": "2009-06-19T06:51:06Z", "attachment_id": null}]