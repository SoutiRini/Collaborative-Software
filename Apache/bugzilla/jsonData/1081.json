[{"count": 0, "tags": [], "bug_id": 1081, "attachment_id": null, "text": "I built Catalina after a cvs update on 22/3 18:15 GMT\nCookies are off in the browser (Problem disappears if they are on)\n\nI have two pages: One is unprotected and contains links to itself (adding a few \nparameters) and a link to another, protected page.  The links are all generated \nusing 'response.encodeURL()'.  The protected page has a \n<auth-method>BASIC</auth-method>.\n\nWhen the user is on page one, the links contain the ;jsessionid=... as expected \nbut no session has been established yet.\nIf the user clicks on the link to the protected page, a NullPointerException is \nthrown on the server.\nIf the user clicks on another link first (establishing a session), and then on \nthe link to the protected page, the password dialog box appears and everything \nworks fine.\n\nI guess Catalina has a problem establishing a session using encoded URLs AND \nentering a secure area at the same time.\n\n\nThis is the full exception I get (rev. 1.28 of HttpResponseBase).  sendHeaders \ncalls getContext() which apparently return null.\n\njava.lang.NullPointerException\n        at \norg.apache.catalina.connector.HttpResponseBase.sendHeaders(HttpRespon\nseBase.java:582)\n        at \norg.apache.catalina.connector.HttpResponseBase.finishResponse(HttpRes\nponseBase.java:206)\n        at \norg.apache.catalina.connector.http.HttpResponseImpl.finishResponse(Ht\ntpResponseImpl.java:276)\n        at \norg.apache.catalina.connector.http.HttpProcessor.process(HttpProcesso\nr.java:854)\n        at \norg.apache.catalina.connector.http.HttpProcessor.run(HttpProcessor.ja\nva:904)\n        at java.lang.Thread.run(Thread.java:484)", "id": 1555, "time": "2001-03-22T12:28:55Z", "creator": "lvl@bvdep.com", "creation_time": "2001-03-22T12:28:55Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 1081, "attachment_id": null, "is_private": false, "id": 1609, "time": "2001-03-26T20:32:34Z", "creator": "remm@apache.org", "creation_time": "2001-03-26T20:32:34Z", "text": "The StandardContextValve probably actually sets the context associated with the \nresponse, using response.setContext(context) line 200, *after* going through \nthe auth valve. So if the valve returns a challenge, response.getContext() will \nreturn null.\nOn the other hand, the request's context is set at the host level, so that's \nwhy it's not null (and a session object is created).\n\nSo we have two options here :\n- add a (getContext() != null) in the condition line 582\n- use hreq.getContext() instead\nI don't know which one is the best, so I'll let Craig decide."}, {"count": 2, "tags": [], "bug_id": 1081, "text": "I fixed the bug, using option 1.", "id": 1620, "time": "2001-03-27T21:39:42Z", "creator": "remm@apache.org", "creation_time": "2001-03-27T21:39:42Z", "is_private": false, "attachment_id": null}]