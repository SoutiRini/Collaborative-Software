[{"count": 0, "tags": [], "text": "In FormAuthHandler.java when a logged user try to access to preotected page, he \nuser ans pasword attributes are removed and a forward to login error page is \nperformes, but originalLocation environmet variable isn't updated, so when you \nrepeat login process with a more privileged user you are redirected to the \nearliest originalLocation, and not the one tah you last tried.\n\n----X----Priginal Source Code----X--------------------\n        if( debug>0) log( \"Username = \" + username);\n        if( username != null ) {\n            // 401 with existing j_username - that means wrong credentials.\n            // Next time we'll have a fresh start\n            session.removeAttribute( \"j_username\");\n            session.removeAttribute( \"j_password\");\n            req.setAttribute(\"javax.servlet.error.message\",\n                             errorPage );\n            contextM.handleStatus( req, res, 302 ); // redirect\n            return;\n        }\n\n    String originalLocation = req.getRequestURI();\n\n        if (req.getQueryString() != null)\n            originalLocation += \"?\" + req.getQueryString();\n\n        session.setAttribute( \"tomcat.auth.originalLocation\",\n                              originalLocation);\n\n----X--------Proposed Code---------X------------------------------\n\n----X----Priginal Source Code----X--------------------\n        if( debug>0) log( \"Username = \" + username);\n        if( username != null ) {\n            // 401 with existing j_username - that means wrong credentials.\n            // Next time we'll have a fresh start\n            session.removeAttribute( \"j_username\");\n            session.removeAttribute( \"j_password\");\n        }\n\n    String originalLocation = req.getRequestURI();\n\n        if (req.getQueryString() != null)\n            originalLocation += \"?\" + req.getQueryString();\n\n\n        if ((originalLocation.equals(errorPage)!=0) &&\n            (originalLocation.equals(page) != 0))\n                session.setAttribute( \"tomcat.auth.originalLocation\",\n                              originalLocation);\n\n----X-----------------X------------------------------", "is_private": false, "id": 2862, "creator": "jmartine@alhsys.es", "time": "2001-06-11T08:46:39Z", "bug_id": 2118, "creation_time": "2001-06-11T08:46:39Z", "attachment_id": null}, {"count": 1, "tags": [], "text": "*** Bug 2147 has been marked as a duplicate of this bug. ***", "is_private": false, "id": 4103, "creator": "nacho@apache.org", "time": "2001-07-28T12:44:31Z", "bug_id": 2118, "creation_time": "2001-07-28T12:44:31Z", "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 2118, "attachment_id": null, "id": 4801, "time": "2001-08-24T16:29:50Z", "creator": "nacho@apache.org", "creation_time": "2001-08-24T16:29:50Z", "is_private": false, "text": "Juan Jose:\n\n>     if ((originalLocation.equals(errorPage)!=0) &&\n>            (originalLocation.equals(page) != 0))\n\nWhat you are trying to catch with this test?\n\nI think mark shotton solution is more simple and yours does alsmot the same \nwith to more string tests.. we are very avare with every performance bit..:)\n\nCan you all send cvs diff -u of the proposed patch instead of trying to \ndescribe the problem we all be grateful ever follow site guidelines for code \nsubbmision .. \n\nFor now i will try to review and patch mark's solution ASAP.\n"}, {"count": 3, "tags": [], "creator": "nacho@apache.org", "text": "Fixed in Tomcat 3.3", "id": 4804, "time": "2001-08-24T17:04:15Z", "bug_id": 2118, "creation_time": "2001-08-24T17:04:15Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 2118, "text": "Fixed 3.2.3", "id": 4805, "time": "2001-08-24T17:05:14Z", "creator": "nacho@apache.org", "creation_time": "2001-08-24T17:05:14Z", "is_private": false, "attachment_id": null}]