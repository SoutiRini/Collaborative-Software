[{"count": 0, "tags": [], "bug_id": 32576, "attachment_id": null, "text": "Dreamweaver is reporting that a file is locked; I then go to retrieve content from the file...\n\njava.lang.NullPointerException\n\tat org.apache.slide.content.ContentImpl.retrieve(ContentImpl.java:322)\n\tat com.wow.services.filesystem.slide.SlideFile.getContent(SlideFile.java:412)\n\tat com.wow.services.filesystem.slide.SlideFile.getMetadataMap(SlideFile.java:345)\n\tat com.wow.services.filesystem.slide.SlideFile.getMetadataAttribute(SlideFile.java:382)\n\tat \ncom.wow.webapp.pageComponents.userContent.UserContentMenu.writeFile(UserContentMenu.java:\n131)\n\tat \ncom.wow.webapp.pageComponents.userContent.UserContentMenu.listFiles(UserContentMenu.java:94)\n\tat \ncom.wow.webapp.pageComponents.userContent.UserContentMenu.performExecute(UserContentMenu.j\nava:76)\n\tat com.wow.webapp.AbstractPageComponent.execute(AbstractPageComponent.java:183)\n\tat com.wow.webapp.RequestController.displayComponent(RequestController.java:345)\n\tat com.wow.webapp.RequestController.invokeFunctionInternal(RequestController.java:275)\n\tat com.wow.webapp.RequestController.invokeFunction(RequestController.java:303)\n\tat com.wow.webapp.RequestController.invokeFunction(RequestController.java:193)\n\tat com.wow.webapp.RequestController.invokeFunction(RequestController.java:177)\n\tat \norg.apache.jsp.jsp.templates.wow_services.homepage_jsp._jspService(org.apache.jsp.jsp.templates.wow\n_services.homepage_jsp:94)\n\tat org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:99)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:802)\n\tat org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:325)\n\tat org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:295)\n\tat org.apache.jasper.servlet.JspServlet.service(JspServlet.java:245)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:802)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:237)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:157)\n\tat org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:674)\n\tat org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:576)\n\tat org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:501)\n\tat org.apache.jasper.runtime.JspRuntimeLibrary.include(JspRuntimeLibrary.java:966)\n\tat org.apache.jasper.runtime.PageContextImpl.include(PageContextImpl.java:601)\n\tat com.wow.webapp.RequestController.include(RequestController.java:799)\n\tat com.wow.webapp.RequestController.include(RequestController.java:774)\n\tat com.wow.webapp.RequestController.displayTemplate(RequestController.java:330)\n\tat com.wow.webapp.RequestController.invokeFunctionInternal(RequestController.java:274)\n\tat com.wow.webapp.RequestController.handleInternal(RequestController.java:170)\n\tat com.wow.webapp.ControllerServlet.service(ControllerServlet.java:79)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:802)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:237)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:157)\n\tat com.wow.webapp.ClientRequestParserFilter.doFilter(ClientRequestParserFilter.java:78)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:186)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:157)\n\tat com.wow.webapp.WOWRequestResponseFilter.doFilter(WOWRequestResponseFilter.java:80)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:186)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:157)\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:214)\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:178)\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:407)\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:126)\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:105)\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:107)\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:148)\n\tat org.apache.jk.server.JkCoyoteHandler.invoke(JkCoyoteHandler.java:300)\n\tat org.apache.jk.common.HandlerRequest.invoke(HandlerRequest.java:383)\n\tat org.apache.jk.common.ChannelSocket.invoke(ChannelSocket.java:743)\n\tat org.apache.jk.common.ChannelSocket.processConnection(ChannelSocket.java:675)\n\tat org.apache.jk.common.SocketConnection.runIt(ChannelSocket.java:866)\n\tat org.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run(ThreadPool.java:684)\n\tat java.lang.Thread.run(Thread.java:595)\n\n\nAn unusual place, to say the least.  One file in the directory structure is locked; I assume that file is \nfailing in retrieve, but not throwing an appropriate exception.", "id": 68078, "time": "2004-12-07T22:50:32Z", "creator": "gblock@ctoforaday.com", "creation_time": "2004-12-07T22:50:32Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 32576, "is_private": false, "text": "This happens when you pass null as revisionDescriptors. Fix this in your code,\nthus the issue is invalid. ", "id": 68081, "time": "2004-12-08T00:57:38Z", "creator": "ozeigermann@apache.org", "creation_time": "2004-12-08T00:57:38Z", "attachment_id": null}, {"count": 2, "tags": [], "creator": "gblock@ctoforaday.com", "attachment_id": null, "id": 68104, "time": "2004-12-08T13:34:26Z", "bug_id": 32576, "creation_time": "2004-12-08T13:34:26Z", "is_private": false, "text": "Ergh.  You appear to be correct; I'm very sorry.  I was assuming that actions on files which were \nchecked out would return exceptions for the situations in which I'm trying to get at their contents (with \nanother user), and not return null contents in some cases.\n\nWhat *is* the policy on this?  I still sort-of-feel that getting null results from Slide API is inappropriate \ngiven that the reason should have been that the file was locked.\n\nIf the nulls are expected, please re-close as resolved/invalid."}, {"count": 3, "tags": [], "bug_id": 32576, "attachment_id": null, "text": "No idea what you are talking about. Probably because I am rather dumb. However,\nmy impression was that com.wow.services.filesystem.slide.SlideFile.getContent\nwhich is not part of Slide calls a Slide method with a null pointer which is not\nallowed and thus is punished with a NPE.\n\nAm I wrong?\n\n(In reply to comment #2)\n> Ergh.  You appear to be correct; I'm very sorry.  I was assuming that actions\non files which were \n> checked out would return exceptions for the situations in which I'm trying to\nget at their contents (with \n> another user), and not return null contents in some cases.\n> \n> What *is* the policy on this?  I still sort-of-feel that getting null results\nfrom Slide API is inappropriate \n> given that the reason should have been that the file was locked.\n> \n> If the nulls are expected, please re-close as resolved/invalid.", "id": 68108, "time": "2004-12-08T15:33:28Z", "creator": "ozeigermann@apache.org", "creation_time": "2004-12-08T15:33:28Z", "is_private": false}, {"count": 4, "tags": [], "creator": "gblock@ctoforaday.com", "text": "Either:\n - Earlier calls to retrieve information on a locked entity have resulted in a null response instead of an \nexception due to the object being locked, or\n - Something inside of that method isn't working.\n\nAs that's the first call, you're right, I'm passing in a null reference - but if it's null, it can only be \nbecause the API provided me a null response instead of throwing an exception due to a locked instance.\n\nThe loading code essentially does this:\n\nnode = state.structureHelper.retrieve(state.slideToken, path.toString());\nrevisions = state.contentHelper.retrieve(state.slideToken, path.toString());\nif (revisions!=null && revisions.hasRevisions()) {\n\tproperties = state.contentHelper.retrieve(state.slideToken, revisions);\n\tif (properties != null) {\n\t\texists = true;\n\t}\n}\n\nI've now had situations where a locked object has resulted in either structureHelper returning a null \nnode, or contentHelper returning a null revisions, without hitting the exception catches.  I'll try to get \ntogether some kind of test case that causes this under 2.1 branch, but I'm having problems replicating \nthem predictably.  Marking as invalid until I can prove, if there is a problem, that there is a problem.", "id": 68112, "time": "2004-12-08T16:54:40Z", "bug_id": 32576, "creation_time": "2004-12-08T16:54:40Z", "is_private": false, "attachment_id": null}]