[{"count": 0, "tags": [], "bug_id": 41219, "attachment_id": null, "id": 97125, "time": "2006-12-20T07:30:15Z", "creator": "mr.kari.ikonen@gmail.com", "creation_time": "2006-12-20T07:30:15Z", "is_private": false, "text": "Sometimes stacktraces of the exceptions seem to mysteriously disappear. After \ninvesigation I noticed thatThrowableInformation.VectorWriter looks potentially \nunrobust, since it's making strong assumptions of what methods of the \nPrintWriter API Throwable is using for printing its' stacktrace.\n\nFor example, if Throwable uses some \"write(int)\" method then stacktrace goes \nappearently into /dev/null.\n\nIt's completely possible that some sub-class of Throwable overrides \nprintStackTrace() -logic, so API shouldn't make assumptions based into \nimplementation details inside Throwable (Throwable itself could change also \nlogic, like has happened earlier).\n\nThis issue reduces reliability of Log4J considerably.\n\nPROOF:\n---------------------\npackage org.kari;\n\nimport java.io.PrintWriter;\n\nimport org.apache.log4j.BasicConfigurator;\nimport org.apache.log4j.Logger;\n\npublic class ThrowableTest {\n    \n    public static final class ThrowableFail extends Throwable {\n\n        @Override\n        public void printStackTrace(PrintWriter s)\n        {\n            super.printStackTrace(s);\n            s.println(\"LOST-START\");\n            // Following output is lost\n            for (int i= 0; i < 100; i++) {\n                s.print('a');\n            }\n            s.println(\"LOST-END\");\n        }\n        \n    }\n    \n    public static void main(String[] args) {\n        BasicConfigurator.configure();\n        Logger LOG = Logger.getLogger(ThrowableTest.class);\n        LOG.info(\"Test\", new ThrowableFail());\n    }\n\n}\n---------------------"}, {"count": 1, "tags": [], "creator": "mr.kari.ikonen@gmail.com", "attachment_id": null, "text": "Related:\n- Bug 34945 ThrowableInformation has dubious Stack Trace extraction feature\n- Bug 35324 Stacktrace may choke on null fields, as \n  org.apache.log4j.spi.ThrowableInformation.VectorWriter.println(null) will bomb\n- Bug 36587 Printing throwable stacktrace throwing null pointer exception\n", "id": 97126, "time": "2006-12-20T08:07:24Z", "bug_id": 41219, "creation_time": "2006-12-20T08:07:24Z", "is_private": false}, {"count": 2, "tags": [], "text": "I get the same when I run Kari's code against trunk.", "attachment_id": null, "id": 98537, "creator": "bayard@apache.org", "time": "2007-01-25T17:23:23Z", "bug_id": 41219, "creation_time": "2007-01-25T17:23:23Z", "is_private": false}, {"count": 3, "tags": [], "creator": "bayard@apache.org", "attachment_id": null, "text": "One simple improvement would be to ensure that all the methods in PrintWriter\nare implemented by VectorWriter. I don't see why print(int) etc can't be\nimplemented - it looks like they've been there since 1.1.\n\nJDK 1.5 added a bunch of methods to VectorWriter, so if Exceptions use these\nthen the same bug will exist.", "id": 98715, "time": "2007-01-29T14:40:55Z", "bug_id": 41219, "creation_time": "2007-01-29T14:40:55Z", "is_private": false}, {"count": 4, "tags": [], "creator": "mr.kari.ikonen@gmail.com", "attachment_id": null, "text": "Basically, only lowest level write methods should be overridden, i.e. the ones \ninto which all the other calls end up. This means overriding only \"public void \nwrite(int c)\" in the Writer, which is passed as constructor arg to PrintWriter \n(thus changing logic a bit). And division into lines would happens then by \ndetecting linefeed.\n", "id": 98735, "time": "2007-01-29T21:01:55Z", "bug_id": 41219, "creation_time": "2007-01-29T21:01:55Z", "is_private": false}, {"count": 5, "tags": [], "text": "Fixes committed against 1.2 branch in rev 510214 and against trunk in 510242.\n\nBasically gutted the existing VectorWriter/NullWriter approach and passed a PrintWriter wrapping a \nStringWriter to printStackTrace and then used LineNumberReader to parse the output into lines.", "attachment_id": null, "id": 99641, "creator": "carnold@apache.org", "time": "2007-02-21T13:43:16Z", "bug_id": 41219, "creation_time": "2007-02-21T13:43:16Z", "is_private": false}]