[{"count": 0, "attachment_id": null, "bug_id": 59087, "text": "mod_ssl is supposed to use dynamic DH parameter prime lengths. According to the mod_ssl docs it \"hands them out to clients based on the length of the certificate's RSA/DSA key\".\n\nWith a configuration with a 2560 bit RSA key, the DH parameter size is 3072 bits, which is fine.\n\nAfter adding a second ECC certificate with 256 bits to the server, then the calculation of the DH parameter size for RSA connections fails. With the additional ECC key installed mod_ssl will use only 1024 bits for DH the parameters for RSA connections.\n\nFor example\n\nTLS_DHE_RSA_WITH_AES_256_GCM_SHA384 (0x9f)   DH 3072 bits   FS\n\nwill be\n\nTLS_DHE_RSA_WITH_AES_256_GCM_SHA384 (0x9f)   DH 1024 bits   FS   WEAK\n\nafter adding the additional ECC certificate to the server.\n\nOnly the key size of the RSA cert should be used for the calculation of the DH parameter size of RSA key based connections.", "id": 188939, "time": "2016-02-29T01:44:39Z", "creator": "bjoern@j3e.de", "creation_time": "2016-02-29T01:44:39Z", "tags": [], "is_private": false}, {"count": 1, "attachment_id": null, "bug_id": 59087, "text": "With OpenSSL < 1.0.2, the RSA certificate should be declared last in the SSLCertificateFile, due to a restriction on the way to retrieve the currently used certificate/key for these versions.\nWith OpenSSL >= 1.0.2, it should work out of the box, though.\n\nWhich version are you using?", "id": 188943, "time": "2016-02-29T08:45:54Z", "creator": "ylavic.dev@gmail.com", "creation_time": "2016-02-29T08:45:54Z", "tags": [], "is_private": false}, {"count": 2, "attachment_id": null, "bug_id": 59087, "text": "this is openssl 1.0.1k. Apache/openssl/mod_ssl from current Debian Jessie.\n\nI can confirm that configuring the RSA cert after the ECC makes the DH parameter size calculation reasonable again. This isn't documented anywhere, is it? It would also be nice if the oder of certs given would not have such security related consequences as this configuration to do is not obvious to do at all. mod_ssl should rather just choose the right parameter size for a RSA cert and ignore the ECC one for the calculation of that, shouldn't it?", "id": 188951, "time": "2016-02-29T09:58:08Z", "creator": "bjoern@j3e.de", "creation_time": "2016-02-29T09:58:08Z", "tags": [], "is_private": false}, {"count": 3, "text": "on Ubuntu 14.04 systems for example which have Apache 2.4.7 and openssl 1.0.1f even the order of the rsa/ec certs does *not* change anything. The DH param length will always be just 1024 bits there.", "bug_id": 59087, "attachment_id": null, "id": 189090, "time": "2016-03-04T14:02:54Z", "creator": "bjoern@j3e.de", "creation_time": "2016-03-04T14:02:54Z", "tags": [], "is_private": false}, {"count": 4, "tags": [], "bug_id": 59087, "text": "So, what is your bug report about? Is it about Ubuntu 14.04 shipping a slightly outdated version of Apache and OpenSSL?\n\nWhat could be done by the Apache httpd project regarding your issue?", "id": 189091, "time": "2016-03-04T14:09:27Z", "creator": "micha@lenk.info", "creation_time": "2016-03-04T14:09:27Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "text": "this is for people who read this to know that this workaround does not work for those versions. Don't get upset about that extra information here. Of course you cannot fix ubuntu's version, you can only fix the future versions, as written comment #2.", "attachment_id": null, "id": 189092, "creation_time": "2016-03-04T14:13:27Z", "time": "2016-03-04T14:13:27Z", "creator": "bjoern@j3e.de", "bug_id": 59087, "is_private": false}, {"count": 6, "tags": [], "creator": "ylavic.dev@gmail.com", "attachment_id": null, "text": "(In reply to Bj\u00f6rn Jacke from comment #5)\n> Of course you cannot fix ubuntu's version, you can only fix the future\n> versions, as written comment #2.\n\nUnfortunately we can't because openssl < 1.0.2 lacks support for selecting the current certificate when multiple ones are configured for the same context.\n\nThis was added in openssl-1.0.2, and the workaround for earlier versions is the only way...\n\nI'm marking this PR as invalid, I see no better resolution choice (e.g. CANTFIX).\nThanks for testing (informing about) the workaround.", "id": 189093, "time": "2016-03-04T14:24:47Z", "bug_id": 59087, "creation_time": "2016-03-04T14:24:47Z", "is_private": false}, {"count": 7, "attachment_id": null, "bug_id": 59087, "text": "(In reply to Yann Ylavic from comment #6)\n> (In reply to Bj\u00f6rn Jacke from comment #5)\n> > Of course you cannot fix ubuntu's version, you can only fix the future\n> > versions, as written comment #2.\n> \n> Unfortunately we can't because openssl < 1.0.2 lacks support for selecting\n> the current certificate when multiple ones are configured for the same\n> context.\n> \n> This was added in openssl-1.0.2, and the workaround for earlier versions is\n> the only way...\n> \n> I'm marking this PR as invalid, I see no better resolution choice (e.g.\n> CANTFIX).\n> Thanks for testing (informing about) the workaround.\n\nmove to DOCS maybe to capture it? I didn't follow too closely.", "id": 189094, "time": "2016-03-04T14:25:43Z", "creator": "covener@gmail.com", "creation_time": "2016-03-04T14:25:43Z", "tags": [], "is_private": false}, {"count": 8, "tags": [], "creator": "ylavic.dev@gmail.com", "text": "(In reply to Eric Covener from comment #7)\n> \n> move to DOCS maybe to capture it? I didn't follow too closely.\n\nDone, will see how we can document SSLCertificateFile accordingly.", "id": 189096, "time": "2016-03-04T14:30:28Z", "bug_id": 59087, "creation_time": "2016-03-04T14:30:28Z", "is_private": false, "attachment_id": null}, {"count": 9, "tags": [], "creator": "bjoern@j3e.de", "attachment_id": null, "id": 189101, "time": "2016-03-04T14:51:34Z", "bug_id": 59087, "creation_time": "2016-03-04T14:51:34Z", "is_private": false, "text": "It is not possible to iterate once over the certs and use the strongest cert for the DH param size calculation?\n\nBut in any case: If we *know* that we mis-calculate the DH param size with openssl 1.0.1, then we should at least set the minimum DH param length to a reasonable secure size. And 1024 is considered not secure these days. The best solution then would be to increase the minimum DH param size e.g. to 2048, wouldn't it? People who have interoperability issues with large DH sizes because of Java clients or whatever can still set fixed DH parameters as commented in ssl_engine_kernel.c already for the current (weak) 1024 limit."}, {"count": 10, "tags": [], "creator": "ylavic.dev@gmail.com", "attachment_id": null, "id": 189107, "time": "2016-03-04T16:21:07Z", "bug_id": 59087, "creation_time": "2016-03-04T16:21:07Z", "is_private": false, "text": "(In reply to Bj\u00f6rn Jacke from comment #9)\n> It is not possible to iterate once over the certs and use the strongest cert\n> for the DH param size calculation?\n\nWe could do that, but it's quite complicated to work around an openssl limitation on older versions, and that may also \"annoy\" some other httpd user...\nFeel free to ask the openssl team to give the DH callback the correct private key in 1.0.1 (and earlier) since that would be the correct fix (don't know if that could break other usages, though).\n\n> \n> But in any case: If we *know* that we mis-calculate the DH param size with\n> openssl 1.0.1,\n\nWe know that we *can* mis-calculate the size with incorrect configuration, hence the change to a documentation PR.\n\n> then we should at least set the minimum DH param length to a\n> reasonable secure size. And 1024 is considered not secure these days. The\n> best solution then would be to increase the minimum DH param size e.g. to\n> 2048, wouldn't it? People who have interoperability issues with large DH\n> sizes because of Java clients or whatever can still set fixed DH parameters\n> as commented in ssl_engine_kernel.c already for the current (weak) 1024\n> limit.\n\nYou could also use your own DH params with the suitable size and that's it.\nThere is no point to set 2048 DHs with 1024 certs, and we need the relevant cert to figure out...\nWhy break existing configurations?"}, {"count": 11, "tags": [], "bug_id": 59087, "attachment_id": null, "text": "Hi Yann and Bj\u00f6rn,\n\nI would like to update mod_ssl's documentation with this use case but to be as precise as possible I'd ask for an example of \"good\"/\"bad\" behavior (or maybe Bj\u00f6rn's complete use case if it can be disclosed). \n\nFrom what I gathered:\n--------------------\nGood:\n\nSSlCertificateFile  \"path_to_ECC_certificate.crt\" \nSSLCertificateFile  \"path_to_RSA_SSL_certificate1.crt\" \n\nIssue: DH key exchange uses weak params for connections using the RSA cert (for the authentication part).\n\nMotivation: openssl < 1.0.2 lacks support for selecting the current certificate when multiple ones are configured for the same context.\n---------------------\n\nAs you can see my understanding is not really marvelous, I haven't played around ECC and at first sight this bug seems a bit strange to me (so it might be the same for other people). \n\nFurther question: is there any issue if a dh_param.pem is added and the order is not the above one?   \n\nThanks and sorry for the extra work :)\n\nLuca", "id": 189224, "time": "2016-03-07T19:44:03Z", "creator": "toscano.luca@gmail.com", "creation_time": "2016-03-07T19:44:03Z", "is_private": false}, {"count": 12, "attachment_id": null, "bug_id": 59087, "text": "I committed a note about this in r1734058.\nIf this is not suitable (or clear enough) let me know, and discuss this on docs@.", "id": 189259, "time": "2016-03-08T12:21:11Z", "creator": "ylavic.dev@gmail.com", "creation_time": "2016-03-08T12:21:11Z", "tags": [], "is_private": false}, {"count": 13, "attachment_id": null, "bug_id": 59087, "text": "Very understandable and detailed, I just backported it to 2.4 :)\n\nThanks!\n\nLuca", "id": 189260, "time": "2016-03-08T13:20:42Z", "creator": "toscano.luca@gmail.com", "creation_time": "2016-03-08T13:20:42Z", "tags": [], "is_private": false}]