[{"count": 0, "attachment_id": 24609, "creator": "enrico.gueli@polito.it", "is_private": false, "id": 132302, "time": "2009-11-25T03:25:50Z", "bug_id": 48280, "creation_time": "2009-11-25T03:25:50Z", "tags": [], "text": "Created attachment 24609\na patch for this bug\n\nThe method getTypeSize(String) in the Type class returns two outputs encoded in one integer: the lowest two bits contain the field size (0, 1 or 2), the remaining ones the no. of consumed characters in the signature. Type provides two private static methods, size() and consumed(), to split these values apart.\n\nThe method getFieldSize(ConstantPoolGen) in the FieldInstrucion class uses Type.getTypeSize, unaware that the output is encoded. Therefore, the returned size is different than expected. This causes, among other things, a bigger or smaller max stack depth value for generated methods that leads to unused stack memory or a \"java.lang.VerifyError: stack size too large\" exception, respectively.\n\nA fix can be made by making the above-mentioned static methods package-visible and modifying getFieldSize() to use them."}, {"count": 1, "tags": [], "text": "Thx! Applied.", "is_private": false, "id": 133487, "creator": "tcurdt@apache.org", "time": "2010-01-10T12:33:00Z", "bug_id": 48280, "creation_time": "2010-01-10T12:33:00Z", "attachment_id": null}]