[{"count": 0, "tags": [], "bug_id": 30005, "attachment_id": null, "id": 60366, "time": "2004-07-09T15:53:08Z", "creator": "jukkaho@mail.student.oulu.fi", "creation_time": "2004-07-09T15:53:08Z", "is_private": false, "text": "System:\nLinux suihkari 2.6.6-rc2 #2 SMP Thu May 6 12:33:19 EEST 2004 i686\nPHP Version 4.3.7 with Alternative PHP Cache module\nApache/2.0.49 (Gentoo/Linux) mod_ssl/2.0.49 OpenSSL/0.9.7d PHP/4.3.7\n\nProblem is that Apache appears to cache all content in memory when content is\ngenerated in PHP script. This makes it impossible to send very large files\nthrough PHP scripts with decent performance as server tries to keep hundreds of\nmegabytes or more in memory.\n\nI guess that the cause of this problem is generic Range-header support through\nByterange filter or something similar that does not care that all necessary\nheaders (HTTP/1.1 206 Partial Content, Content-Size, Accept-Range,\nContent-Location, Content-Range) have all been set already. Only reason to cache\ncontent (that I can think of) is to get some header lines (like Content-Size and\nContent-Range) to have correct values. However, this is currently happening for\nall cases (resuming, non-resuming) which I concider to be a bug.\n\nI also think that If I send all the relevant headers myself already, Apache\nshouldn't need to touch the content any more (and therefore cache it) and\nperformance gain should be significant, because everything could be just passed\nthrough.\n\nAlso, memory usage seems to stay high (like leaked memory) even when client has\nalready received full file and closed connection. Next request will further\nincrease memory usage.\n\nStopping apache service and downloading a single 91 MB file through PHP causes\nApache process size to grow about 91 MB:\n\n  PID USER      PR  NI  VIRT  RES  SHR S %CPU %MEM    TIME+  COMMAND\n 2708 apache    15   0  138m  95m  48m S  0.0 19.0   0:01.95 apache2\n\nThis problem is NOT reproducible with Apache 1.3.29 and PHP 4.3.3. This could\nalso be a PHP problem when interfacing Apache2, but I don't have any proof or\neven reason to assume that.\n\nFollowing simple PHP script should demonstrate memory usage for non-resumable\ncase, where resuming is actually expected to need more memory for header\ncalculations and where memory usage stays high afterwards:\n\n<?php\n // Just change the filename for something existing and large\n $filename=\"something-large.tar.gz\";\n                                                                               \n                                                                               \n                                    \n header(\"Content-Length: $size\");\n header(\"Content-type: application/octet-stream\");\n                                                                               \n                                                                               \n                                    \n $size=filesize($filename); // false if failed, but I don't check for errors now\n                                                                               \n                                                                               \n                                    \n // Send file.\n\n if (!($fp=@fopen($filename,\"r\")))\n {\n  header(\"HTTP/1.1 404 Not Found\");\n  header(\"Content-type: text/plain\");\n  echo \"Not found.\";\n  exit;\n }\n\n while (!feof($fp))\n {\n  $buf=fread($fp,4096);\n  echo $buf; // This line is needed for memory leak to happen\n }\n\n @fclose($fp);\n?>"}, {"count": 1, "attachment_id": null, "bug_id": 30005, "text": "This is largely a PHP bug, http://bugs.php.net/bug.php?id=28113 though some\nleaks remain even with that fixed.  Try:\nhttp://www.apache.org/~jorton/php-4.3.7-handler.patch\n", "id": 60370, "time": "2004-07-09T15:59:22Z", "creator": "jorton@redhat.com", "creation_time": "2004-07-09T15:59:22Z", "tags": [], "is_private": false}, {"count": 2, "tags": [], "creator": "jorton@redhat.com", "text": "(there is also bug 29962 w.r.t using Range requests too, which the PHP change\ndoesn't fix)", "id": 60371, "time": "2004-07-09T16:02:25Z", "bug_id": 30005, "creation_time": "2004-07-09T16:02:25Z", "is_private": false, "attachment_id": null}]