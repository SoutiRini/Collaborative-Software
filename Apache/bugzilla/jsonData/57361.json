[{"count": 0, "tags": [], "creator": "artyom.nikiforov@arcusys.fi", "attachment_id": 32299, "text": "Created attachment 32299\npatch + samples of cropping the background images.\n\nHi, folks!\nI'm trying to convert pptx slides to images with the code:\n        FileInputStream is = new FileInputStream(\"slideshow.pptx\");\n        XMLSlideShow ppt = new XMLSlideShow(is);\n        is.close();\n        \n        Dimension pgsize = ppt.getPageSize();\n\n        Slide[] slide = ppt.getSlides();\n        for (int i = 0; i &lt; slide.length; i++) {\n\n            BufferedImage img = new BufferedImage(pgsize.width, pgsize.height, BufferedImage.TYPE_INT_RGB);\n            Graphics2D graphics = img.createGraphics();\n            //clear the drawing area\n            graphics.setPaint(Color.white);\n            graphics.fill(new Rectangle2D.Float(0, 0, pgsize.width, pgsize.height));\n\n            //render\n            slide[i].draw(graphics);\n\n            //save the output\n            FileOutputStream out = new FileOutputStream(\"slide-\"  + (i+1) + \".png\");\n            javax.imageio.ImageIO.write(img, \"png\", out);\n            out.close();\n        }\n\nIf background image is bigger than a slide, then it's cropped to a slide width and height. So you get left top corner of an image as a result. If background image is smaller, then it takes only a part of slide's area(see the attached files).\n\nBTW, I've made the changes in attached patch to eliminate the issue.\n\nIn the patch we just transform image to slide's size. Obviously the solution is wrong, because we should preserve whole image unscaled till the last render(otherwise we'll loose quality), but it solved the problem of cropping the background image for me.\n\nArtem", "id": 179820, "time": "2014-12-17T07:59:35Z", "bug_id": 57361, "creation_time": "2014-12-17T07:59:35Z", "is_private": false}, {"count": 1, "tags": [], "text": "Any chance you could work up a small unit test for this?", "attachment_id": null, "bug_id": 57361, "id": 179908, "time": "2014-12-21T06:24:27Z", "creator": "apache@gagravarr.org", "creation_time": "2014-12-21T06:24:27Z", "is_private": false}, {"count": 2, "tags": [], "creator": "kiwiwings@apache.org", "attachment_id": null, "text": "I don't understand the proposed general scaling to page size.\nPlease add at least a .ppt/x which shows your issue - i'll then adapt your code.\nMy goal for rendering is always to stay close to the rendering of powerpoint.\n\nAs this issue hasn't got any attention for over a year I'm closing this as \nwontfix - feel free to reopen it (... with a .ppt/x attached)\n\nBtw. I've tried to download Sanders slides, but only found the mentioned slides \nof 2008 on slideshare [1] and I'm not registering with linkedIn\njust for downloading those.\n\n[1] http://de.slideshare.net/sctemme/apache-performance-tuning-scaling-up", "id": 189686, "time": "2016-03-23T22:57:32Z", "bug_id": 57361, "creation_time": "2016-03-23T22:57:32Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 57361, "attachment_id": null, "id": 189687, "creation_time": "2016-03-23T23:04:53Z", "time": "2016-03-23T23:04:53Z", "creator": "apache@gagravarr.org", "text": "You just need to search the Apache SVN server harder Andreas! ;-)\n\nSander's slides can be downloaded from svn at https://svn.apache.org/repos/infra/apachecon/archive.apachecon.com/eu2008/program/materials/2411-Performance_Up.pptx / published at http://archive.apachecon.com/eu2008/program/materials/2411-Performance_Up.pptx", "is_private": false}, {"count": 4, "tags": [], "creator": "kiwiwings@apache.org", "attachment_id": null, "text": "... although the background images fits nicely, it will give a NPE on page 5, because the BLIP fill is a AlternateContent.\nI'll (try to) fix it ..", "id": 189690, "time": "2016-03-24T00:11:17Z", "bug_id": 57361, "creation_time": "2016-03-24T00:11:17Z", "is_private": false}]