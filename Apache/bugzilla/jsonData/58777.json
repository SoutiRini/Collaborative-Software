[{"count": 0, "tags": [], "creator": "ben.rubson@gmail.com", "attachment_id": null, "text": "Hello,\n\nI'm facing the same issue as described in bug #24155.\nhttps://bz.apache.org/bugzilla/show_bug.cgi?id=24155\n\nThis bug has been closed as WONTFIX asking to open a new bug report if still exists in 2.2.\nIt still exists in 2.2 and 2.4.\n\nI tested the quick fix Matthew Wilcox attached to bug #24155, it works perfectly.\nThere are only 4 or 5 lines of code to add to mod_rewrite.c\n\nCould we think about adding it to Apache 2.4 please ?\n\nThank you vey much,\n\nBest regards,\n\nBen", "id": 187191, "time": "2015-12-28T22:13:34Z", "bug_id": 58777, "creation_time": "2015-12-28T22:13:34Z", "is_private": false}, {"count": 1, "tags": [], "text": "Looks like [L,qdiscard] would work as the proposed [L,nosplit], provided no further rule needs the query-string (hence the L flag).\n\nBTW, I guess the [nosplit] flag comes from https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=204508, the patch is missing in bug 24155.", "is_private": false, "id": 187196, "creation_time": "2015-12-29T01:10:20Z", "time": "2015-12-29T01:10:20Z", "creator": "ylavic.dev@gmail.com", "bug_id": 58777, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 58777, "attachment_id": null, "id": 187254, "time": "2015-12-30T10:50:08Z", "creator": "ben.rubson@gmail.com", "creation_time": "2015-12-30T10:50:08Z", "is_private": false, "text": "I just made a quick test with qsdiscard.\nI used the following very simple rule :\nRewriteEngine on\nRewriteRule ^(.*)$ /usr/local/www/apache24/data/$1 [L,qsdiscard]\n\nOn server, the test directory I try to reach :\n/usr/local/www/apache24/data/foo?bar/\n\nIn access-log :\n[30/Dec/2015:11:40:39 +0100] \"GET /foo%3fbar/ HTTP/1.1\" 404 206\n\nIn error-log :\nAH00128: File does not exist: /usr/local/www/apache24/data/foo\n\nConclusion :\nthe ?.* part in simply ignored / removed from the URI.\n\nNosplit :\nWith nosplit, splitout_queryargs() function (in mod_rewrite.c) is not called so that we are sure ?.* remains in the URI.\n\nNote :\nYes you're right, the nosplit flag comes from https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=204508, which is linked in bug 24155."}, {"count": 3, "tags": [], "bug_id": 58777, "attachment_id": null, "is_private": false, "id": 188155, "time": "2016-02-02T17:24:55Z", "creator": "melezhik@gmail.com", "creation_time": "2016-02-02T17:24:55Z", "text": "Hi this swat test suite for this issue:\n\nvagrant@Debian-jessie-amd64-netboot:~/my/apache-swat$ swat -t 58777\n/home/vagrant/.swat/.cache/19580/prove/58777/foo.txt/00.GET.t ......\nok 1 - GET 127.0.0.1/58777/foo.txt succeeded\n# http headers saved to /home/vagrant/.swat/.cache/19580/prove/HuwLhjBM87.hdr\n# body saved to /home/vagrant/.swat/.cache/19580/prove/HuwLhjBM87\nok 2 - output match '200 OK'\nok 3 - output match 'foo data'\n1..3\nok\n/home/vagrant/.swat/.cache/19580/prove/58777/foo?bar.txt/00.GET.t ..\nnot ok 1 - GET 127.0.0.1/58777/foo?bar.txt succeeded\n\n#   Failed test 'GET 127.0.0.1/58777/foo?bar.txt succeeded'\n#   at /usr/local/share/perl/5.20.2/swat.pm line 103.\n# curl -X GET -k --connect-timeout 20 -m 20 -L -f -D /home/vagrant/.swat/.cache/19580/prove/gzeDbgx04v.hdr -o /home/vagrant/.swat/.cache/19580/prove/gzeDbgx04v --stderr /home/vagrant/.swat/.cache/19580/prove/gzeDbgx04v.stderr '127.0.0.1/58777/foo?bar.txt'\n# stderr:\n#   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n#                                  Dload  Upload   Total   Spent    Left  Speed\n  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0\n# curl: (22) The requested URL returned error: 404 Not Found\n# http headers:\n# http body:\n# can't continue here due to unsuccessfull http status code\n1..1\n# Looks like you failed 1 test of 1.\n# Looks like your test exited with 1 just after 1.\nDubious, test returned 1 (wstat 256, 0x100)\nFailed 1/1 subtests\n\nTest Summary Report\n-------------------\n/home/vagrant/.swat/.cache/19580/prove/58777/foo?bar.txt/00.GET.t (Wstat: 256 Tests: 1 Failed: 1)\n  Failed test:  1\n  Non-zero exit status: 1\nFiles=2, Tests=4,  1 wallclock secs ( 0.03 usr  0.00 sys +  0.10 cusr  0.00 csys =  0.13 CPU)\nResult: FAIL\n\n\nApache-swat - https://github.com/melezhik/apache-swat - easy way to reproduce some existed apache issues on _your_ environment"}, {"count": 4, "tags": [], "bug_id": 58777, "attachment_id": null, "is_private": false, "id": 189254, "time": "2016-03-08T09:31:09Z", "creator": "ben.rubson@gmail.com", "creation_time": "2016-03-08T09:31:09Z", "text": "Hello,\n\nAny news regarding this issue ?\nCould we think about merging the very small patch from https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=204508 ?\n\nThank you very much,\n\nBen"}, {"count": 5, "tags": [], "text": "(In reply to Ben RUBSON from comment #4)\n> Hello,\n> \n> Any news regarding this issue ?\n> Could we think about merging the very small patch from\n> https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=204508 ?\n> \n> Thank you very much,\n> \n> Ben\n\nWhat about splitting on the rightmost question mark instead of the leftmost?  That wouldn't need yet another flag.", "attachment_id": null, "id": 189261, "creator": "covener@gmail.com", "time": "2016-03-08T13:59:08Z", "bug_id": 58777, "creation_time": "2016-03-08T13:59:08Z", "is_private": false}, {"count": 6, "tags": [], "bug_id": 58777, "attachment_id": null, "is_private": false, "id": 189264, "time": "2016-03-08T14:24:53Z", "creator": "ben.rubson@gmail.com", "creation_time": "2016-03-08T14:24:53Z", "text": "We could have several question marks in a filename, without any QUERY_STRING attached to the URI.\nSo splitting on the rightmost question mark would not work here.\n\nI think a safe manner would be to split before urldecode :\n- filename question marks would then be encoded to %3F, so would not be caught ;\n- the QUERY_STRING question mark, a clear ?, would be the character expected to split.\nWith this method, no additional flag required. However I don't know whether or not mod_rewrite has access to the request before urldecode.\n\nIf it's not possible, sounds like nosplit flag is the solution."}, {"count": 7, "tags": [], "text": "(In reply to Ben RUBSON from comment #6)\n> We could have several question marks in a filename, without any QUERY_STRING\n> attached to the URI.\n\n> So splitting on the rightmost question mark would not work here.\n\nIn mod_rewrite, you can always append a final question mark to signify no query string.  I think this has a nice relationship to the requested behavior.\n\n> \n> I think a safe manner would be to split before urldecode :\n> - filename question marks would then be encoded to %3F, so would not be\n> caught ;\n> - the QUERY_STRING question mark, a clear ?, would be the character expected\n> to split.\n> With this method, no additional flag required. However I don't know whether\n> or not mod_rewrite has access to the request before urldecode.\n\nUnfortunately, the splitting happens on the substitution itself, which can have any permutation of encoded/unencoded/captured/ and escaped/not-escaped characters.   Currently the escaping here is really problematic (B, NE, etc and not taking the URL context or the source of the capture into account -- very hairy)", "is_private": false, "id": 189265, "creation_time": "2016-03-08T14:36:28Z", "time": "2016-03-08T14:36:28Z", "creator": "covener@gmail.com", "bug_id": 58777, "attachment_id": null}, {"count": 8, "tags": [], "bug_id": 58777, "attachment_id": null, "id": 189266, "time": "2016-03-08T14:47:14Z", "creator": "ben.rubson@gmail.com", "creation_time": "2016-03-08T14:47:14Z", "is_private": false, "text": "(In reply to Eric Covener from comment #7)\n> In mod_rewrite, you can always append a final question mark to signify no\n> query string.  I think this has a nice relationship to the requested\n> behavior.\n\nWhich rule would you use to append a final question mark without making mod_rewrite split on the one just before ? Do you have an example in mind ?\nThen if this can work, splitting on the rightmost question mark could save this issue yes."}, {"count": 9, "tags": [], "creator": "covener@gmail.com", "attachment_id": null, "text": "(In reply to Ben RUBSON from comment #8)\n> (In reply to Eric Covener from comment #7)\n> > In mod_rewrite, you can always append a final question mark to signify no\n> > query string.  I think this has a nice relationship to the requested\n> > behavior.\n> \n> Which rule would you use to append a final question mark without making\n> mod_rewrite split on the one just before ? Do you have an example in mind ?\n> Then if this can work, splitting on the rightmost question mark could save\n> this issue yes.\n\nI don't know what you mean by rule. The idea is after a change to mod_rewrite, Someone affected by this issue that had a rule that substituted a question mark and didn't have a query string would add a ? to the end of their substitution.\n\nBut now I am favoring a flag, because of the relatively few people affected here I wouldn't want to create new pain by doing any other heuristic by default.", "id": 189267, "time": "2016-03-08T15:26:07Z", "bug_id": 58777, "creation_time": "2016-03-08T15:26:07Z", "is_private": false}, {"count": 10, "tags": [], "bug_id": 58777, "attachment_id": null, "is_private": false, "id": 189269, "time": "2016-03-08T15:41:01Z", "creator": "ben.rubson@gmail.com", "creation_time": "2016-03-08T15:41:01Z", "text": "> I don't know what you mean by rule. The idea is after a change to\n> mod_rewrite, Someone affected by this issue that had a rule that substituted\n> a question mark and didn't have a query string would add a ? to the end of\n> their substitution.\n\nUnderstood, but how would this ? added to the end of the substitution ?\nmod_rewrite is not able to distinguish between filename question marks and query string question marks. So without a configuration item (AddFinalQuestionMark <yes|no>), or a new flag, or a new RewriteRule (but which one, this was my question), I don't see how to deal with this issue.\n\n> But now I am favoring a flag, because of the relatively few people affected\n> here I wouldn't want to create new pain by doing any other heuristic by\n> default.\n\nFlag sounds perfect too yes :)"}, {"count": 11, "tags": [], "text": "(In reply to Ben RUBSON from comment #10)\n> > I don't know what you mean by rule. The idea is after a change to\n> > mod_rewrite, Someone affected by this issue that had a rule that substituted\n> > a question mark and didn't have a query string would add a ? to the end of\n> > their substitution.\n> \n> Understood, but how would this ? added to the end of the substitution ?\n> mod_rewrite is not able to distinguish between filename question marks and\n> query string question marks. So without a configuration item\n> (AddFinalQuestionMark <yes|no>), or a new flag, or a new RewriteRule (but\n> which one, this was my question), I don't see how to deal with this issue.\n\nThe affected user would specify it, to opt-in to the prior ? being interpreted as a iflename character. It wouldn't be added for them.", "is_private": false, "bug_id": 58777, "id": 189270, "time": "2016-03-08T15:42:32Z", "creator": "covener@gmail.com", "creation_time": "2016-03-08T15:42:32Z", "attachment_id": null}, {"count": 12, "tags": [], "bug_id": 58777, "attachment_id": null, "is_private": false, "id": 189271, "time": "2016-03-08T15:46:43Z", "creator": "ben.rubson@gmail.com", "creation_time": "2016-03-08T15:46:43Z", "text": "OK Eric, thank you very much for clarification !\n\nSo up to you for implementation method.\nThe new flag is really quick to implement, patch from https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=204508 works as expected (with really minor change for 2.4, goal being to skip splitout_queryargs method).\n\nThank you !\n\nBen"}, {"count": 13, "tags": [], "bug_id": 58777, "attachment_id": null, "id": 189305, "time": "2016-03-09T15:08:25Z", "creator": "covener@gmail.com", "creation_time": "2016-03-09T15:08:25Z", "is_private": false, "text": "http://svn.apache.org/viewvc?rev=1734125&view=rev"}, {"count": 14, "tags": [], "bug_id": 58777, "attachment_id": null, "id": 189307, "time": "2016-03-09T15:23:19Z", "creator": "ben.rubson@gmail.com", "creation_time": "2016-03-09T15:23:19Z", "is_private": false, "text": "Eric, thank you very much !\n\nFrom the documentation : \"If no query string is used in the substitution, a question mark can be appended to it in combination with this flag.\"\n\nHow do you append a question mark to the substitution ?\n\nI don't see how to do it without a RewriteRule (for example \"RewriteRule ^(/.*)$ $1?\"), so without taking the risk to split the URI, if it contains question marks."}, {"count": 15, "tags": [], "bug_id": 58777, "attachment_id": null, "id": 189308, "time": "2016-03-09T15:29:41Z", "creator": "covener@gmail.com", "creation_time": "2016-03-09T15:29:41Z", "is_private": false, "text": "(In reply to Ben RUBSON from comment #14)\n> Eric, thank you very much !\n> \n> From the documentation : \"If no query string is used in the substitution, a\n> question mark can be appended to it in combination with this flag.\"\n> \n> How do you append a question mark to the substitution ?\n> \n> I don't see how to do it without a RewriteRule (for example \"RewriteRule\n> ^(/.*)$ $1?\"), so without taking the risk to split the URI, if it contains\n> question marks.\n\nI'm not following. For simplicity, Let's talk only about rewrites where the user is concerned they might be applied to a target with a question mark in the filename.\n\nThe user necessarily has a RewriteRule already.The new flag already only applies to a RewriteRule (if you add the flag) that necessarily has a substitution (2nd argument)\n\nIf that substitution sets a new query string, no action is required beyond adding the flag, because the added query string will be the right-most match.\n\nIf that rule doesn't currently set a query string, you can either append \"?\" and add the QSA flag or append \"?%{QUERY_STRING}\" which ensures a right-most match.\n\nThis extra stuff is to avoid a solution that only works when there is no actual query string involved, which is my issue with the older proposal."}, {"count": 16, "tags": [], "creator": "ben.rubson@gmail.com", "attachment_id": null, "text": "OK Eric, understood.\n\nI made some tests, it works adding a final ? to the substitution, and using qslast flag.\n\nHowever, I use RewriteRules which do not modify the request : I use RewriteMap (my RewriteMap prg: does not modify the request) and finally proxy redirection (P flag).\nAdding a final ? to the \"substitution\" modifies the user request sent to the proxy (by one char only yes), and as my requests are signed, the authentication process behind the proxy fails...\n\nAny clue to do it without modifying the request ?\n\nThank you very much Eric !\n\nBen", "id": 189311, "time": "2016-03-09T16:30:25Z", "bug_id": 58777, "creation_time": "2016-03-09T16:30:25Z", "is_private": false}, {"count": 17, "tags": [], "bug_id": 58777, "attachment_id": null, "id": 189315, "time": "2016-03-09T18:28:52Z", "creator": "covener@gmail.com", "creation_time": "2016-03-09T18:28:52Z", "is_private": false, "text": "\n> Adding a final ? to the \"substitution\" modifies the user request sent to the\n> proxy (by one char only yes), and as my requests are signed, the\n> authentication process behind the proxy fails...\n> \n> Any clue to do it without modifying the request ?\n> \n\n\nI tested with the P flag just now, the trailing \"?\" is not passed to the origin server. Any chance you are also running with a previous patch that short circuits more processing?\n\nNote there is a bug in the first patch if you are testing it: http://svn.apache.org/viewvc?rev=1734294&view=rev\n\nCan you share rewrite:trace8 logging?"}, {"count": 18, "tags": [], "bug_id": 58777, "attachment_id": null, "id": 189322, "time": "2016-03-09T21:31:19Z", "creator": "ben.rubson@gmail.com", "creation_time": "2016-03-09T21:31:19Z", "is_private": false, "text": "OK Eric, I investigated further, I thought I found the right setting, but Apache crashed when requests did not contain a QUERY_STRING.\n\nThis is what your last patch 1734294 corrects, so let's try it out !\n\nOK, now everything works as I was expecting, with these 3 tricks :\n- append a ? to the RewriteRule substitution (second parameter)\n- use the new qslast flag (of course :)\n- use the QSA flag (so that if the query contains a QUERY_STRING, it is kept)\n\nThank you very much for your work on this Eric !\n\nI even tested these 2 patches against Apache 2.2, it works perfectly.\n\nCould we think about backporting them to Apache 2.4 tree, so that they will be available into the next 2.4.x release please ?\n\nThank you again !\n\nBen"}, {"count": 19, "tags": [], "bug_id": 58777, "attachment_id": null, "is_private": false, "id": 189323, "time": "2016-03-09T21:36:21Z", "creator": "covener@gmail.com", "creation_time": "2016-03-09T21:36:21Z", "text": "(In reply to Ben RUBSON from comment #18)\n> OK Eric, I investigated further, I thought I found the right setting, but\n> Apache crashed when requests did not contain a QUERY_STRING.\n\nsorry about that\n> \n> This is what your last patch 1734294 corrects, so let's try it out !\n> \n> OK, now everything works as I was expecting, with these 3 tricks :\n> - append a ? to the RewriteRule substitution (second parameter)\n> - use the new qslast flag (of course :)\n> - use the QSA flag (so that if the query contains a QUERY_STRING, it is kept)\n> \n> Thank you very much for your work on this Eric !\n> \n> I even tested these 2 patches against Apache 2.2, it works perfectly.\n> \n> Could we think about backporting them to Apache 2.4 tree, so that they will\n> be available into the next 2.4.x release please ?\n\n\nThe first half will be in the next 2.4.x (2.4.19), just need review of the followup. Thanks for testing so quickly."}, {"count": 20, "tags": [], "bug_id": 58777, "attachment_id": null, "is_private": false, "id": 189324, "time": "2016-03-09T21:40:45Z", "creator": "ben.rubson@gmail.com", "creation_time": "2016-03-09T21:40:45Z", "text": "The first half, you mean 1734125 only ?"}, {"count": 21, "tags": [], "bug_id": 58777, "attachment_id": null, "is_private": false, "id": 189325, "time": "2016-03-09T21:42:49Z", "creator": "covener@gmail.com", "creation_time": "2016-03-09T21:42:49Z", "text": "(In reply to Ben RUBSON from comment #20)\n> The first half, you mean 1734125 only ?\n\nyes, the other part is proposed but not yet integrated. I Don't expect any issues."}, {"count": 22, "tags": [], "text": "OK, as it resolves a bug, it should be integrated too.\n\nGood news, thank you again !", "is_private": false, "bug_id": 58777, "id": 189326, "time": "2016-03-09T21:45:48Z", "creator": "ben.rubson@gmail.com", "creation_time": "2016-03-09T21:45:48Z", "attachment_id": null}, {"count": 23, "tags": [], "bug_id": 58777, "attachment_id": null, "id": 189504, "time": "2016-03-16T07:55:32Z", "creator": "ben.rubson@gmail.com", "creation_time": "2016-03-16T07:55:32Z", "is_private": false, "text": "-- just as a reference --\n\n1734125 is visible here :\nhttp://svn.apache.org/viewvc/httpd/httpd/branches/2.4.x/CHANGES?view=log\n1734294 is missing for the moment."}, {"count": 24, "tags": [], "bug_id": 58777, "attachment_id": null, "is_private": false, "id": 189505, "time": "2016-03-16T08:14:08Z", "creator": "ylavic.dev@gmail.com", "creation_time": "2016-03-16T08:14:08Z", "text": "r1734125/r1734294 were backported to upcoming 2.4.19 in r1734259/r1734397."}, {"count": 25, "tags": [], "bug_id": 58777, "attachment_id": null, "is_private": false, "id": 189506, "time": "2016-03-16T08:16:58Z", "creator": "ben.rubson@gmail.com", "creation_time": "2016-03-16T08:16:58Z", "text": "Thank you very much Yann !"}]