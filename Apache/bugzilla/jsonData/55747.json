[{"count": 0, "tags": [], "bug_id": 55747, "attachment_id": 31015, "id": 171084, "time": "2013-11-06T07:58:32Z", "creator": "Guoshun.Wu@alcatel-sbell.com.cn", "creation_time": "2013-11-06T07:58:32Z", "is_private": false, "text": "Created attachment 31015\nThe code in description produce this file.\n\nThe formula document on the HSSF website instructed to report all occurrences of #VALUE! when \nattempting to programmatically assign a formula to a cell, so here goes:\n\nIF(A1 > 5, \"big number\", \"small number\")\n\nThis formula works, and displays correctly when opened in Excel.\n\n#VALUE! is only displayed if the outer IF branches to an inner CONCATENATE and it reference another cell.  For example:\n\n> =IF(ISBLANK(A1),\" not blank a1\",CONCATENATE(A1,\" - %s.\"))\n\n-The cell displays #VALUE!\n-but if I type it in directly in Excel, the formula works\n-also, clicking in the formula bar of POI-generated formula, then hitting Enter, fixes the formula\n\nHere iis the sample code(in groovy):\n==============================Code Start=================================\n\nHSSFWorkbook wb = new HSSFWorkbook()\nString ext =\"xls\";\nif(wb instanceof  SXSSFWorkbook) ext +=\"x\";\nSheet sheet =wb.createSheet(\"Test1\")\nRow row =sheet.createRow(0)\nCellUtil.createCell(row, 0, \"Hello world.\")\nrow = sheet.createRow(1)\nCell cell = row.createCell(0)\ncell.setCellType(Cell.CELL_TYPE_FORMULA)\nString refCell = \"A1\"\nString formula = refCell\nformula = String.format \"IF(isblank(%s),\\\" not blank a1\\\",CONCATENATE(%s, \\\" - %%s.\\\"))\", refCell, refCell\n\ncell.setCellFormula(formula)\nwb.forceFormulaRecalculation = true\nwb.write new FileOutputStream( \"d:/test/test.${ext}\")\n\n==============================Code End================================="}, {"count": 1, "tags": [], "text": "Java version of test:\n\n\tpublic void test55747() throws IOException {\n\t    HSSFWorkbook wb = new HSSFWorkbook();\n\t    \n\t    Sheet sheet =wb.createSheet(\"Test1\");\n\t    Row row =sheet.createRow(0);\n\t    CellUtil.createCell(row, 0, \"Hello world.\");\n\t    row = sheet.createRow(1);\n\t    Cell cell = row.createCell(0);\n\t    cell.setCellType(Cell.CELL_TYPE_FORMULA);\n\t    String refCell = \"A1\";\n\t    String formula = refCell;\n\t    formula = \"IF(isblank(\" + refCell + \"),\\\" not blank a1\\\",CONCATENATE(\" + refCell + \", \\\" - %s.\\\"))\";\n\n\t    cell.setCellFormula(formula);\n\t    wb.setForceFormulaRecalculation(true);\n\t    wb.write(new FileOutputStream(\"C:\\\\temp\\\\55747.xls\"));\n\t    \n\t    wb.close();\n\t}", "attachment_id": null, "id": 183270, "creation_time": "2015-06-01T21:50:20Z", "time": "2015-06-01T21:50:20Z", "creator": "dominik.stadler@gmx.at", "bug_id": 55747, "is_private": false}, {"count": 2, "tags": [], "creator": "dron007@gmail.com", "attachment_id": null, "is_private": false, "id": 184253, "time": "2015-07-31T12:06:24Z", "bug_id": 55747, "creation_time": "2015-07-31T12:06:24Z", "text": "Have same problem with MID and REPLACE funciton (maybe all text)?\n    public static void main(String[] args) throws IOException {\n        Workbook wb = new HSSFWorkbook();\n        FormulaEvaluator ev = wb.getCreationHelper().createFormulaEvaluator();\n        Sheet ws = wb.createSheet();\n        Row row = ws.createRow(0);\n        Cell cell;\n        cell = row.createCell(0);\n        cell.setCellValue(\"abc\");\n\n        cell = row.createCell(1);\n        cell.setCellFormula(\"IF(A1<>\\\"\\\",MID(A1,1,2),\\\" \\\")\");\n        ev.evaluateAll();        \n        \n        OutputStream os = new FileOutputStream(\"xx.xls\");\n        wb.write(os);\n    }\nSome analysis shows, that problem occurs on Windows using 2003 or 2010 excel (cannot test 2007 or 2013) but does not occurs on mac with 2013 excel or windows with open office 4.1.1.\nProblem found in POI 3.8, 3.10, 3.12, 3.13dev and is not produced for XSSFWorkbook."}, {"count": 3, "tags": [], "creator": "apache@gagravarr.org", "attachment_id": null, "is_private": false, "id": 184262, "time": "2015-08-01T00:00:57Z", "bug_id": 55747, "creation_time": "2015-08-01T00:00:57Z", "text": "I've added a unit test in r1693674. The bad news is that POI can read the evaluated result just fine\n\nNext step is for someone to generate a simple problematic formula cell with POI, save it, open it in Excel, get Excel to fix the formula, save that, then run BiffViewer against both files. There will be some differences anyway, but the interesting thing will be the cell-related Records for the formula cell in question. How do those differ?"}, {"count": 4, "tags": [], "bug_id": 55747, "attachment_id": 32970, "id": 184356, "time": "2015-08-05T15:53:27Z", "creator": "dron007@gmail.com", "creation_time": "2015-08-05T15:53:27Z", "is_private": false, "text": "Created attachment 32970\nFile with #VALUE! error"}, {"count": 5, "tags": [], "text": "Created attachment 32971\nFixed by Excel file", "attachment_id": 32971, "bug_id": 55747, "id": 184357, "time": "2015-08-05T15:53:52Z", "creator": "dron007@gmail.com", "creation_time": "2015-08-05T15:53:52Z", "is_private": false}, {"count": 6, "tags": [], "text": "Created attachment 32972\nBiffViewer result of BadFile.xls", "is_private": false, "bug_id": 55747, "id": 184358, "time": "2015-08-05T15:54:24Z", "creator": "dron007@gmail.com", "creation_time": "2015-08-05T15:54:24Z", "attachment_id": 32972}, {"count": 7, "tags": [], "text": "Created attachment 32973\nBiffViewer result of GoodFile.xls", "attachment_id": 32973, "id": 184359, "creation_time": "2015-08-05T15:54:36Z", "time": "2015-08-05T15:54:36Z", "creator": "dron007@gmail.com", "bug_id": 55747, "is_private": false}, {"count": 8, "tags": [], "text": "I created file \"badFile.xls\" using my java code (in POI 3.13beta1). After recalculating in Excel saved as \"goodFile.xls\".\nBiffViewer result of \"badFile.xls\" in \"badFileBiff.txt\", \"goodFile.xls\" in \"goodFileBiff.txt\".\nAs you expected, there are differences in formula records:\n    Ptg[4]=org.apache.poi.ss.formula.ptg.RefPtg [A1]R\nin BAD file againist\n    Ptg[4]=org.apache.poi.ss.formula.ptg.RefPtg [A1]V\nin GOOD.", "attachment_id": null, "bug_id": 55747, "id": 184360, "time": "2015-08-05T15:55:15Z", "creator": "dron007@gmail.com", "creation_time": "2015-08-05T15:55:15Z", "is_private": false}, {"count": 9, "tags": [], "creator": "apache@gagravarr.org", "attachment_id": null, "id": 184361, "time": "2015-08-05T16:04:41Z", "bug_id": 55747, "creation_time": "2015-08-05T16:04:41Z", "is_private": false, "text": "Looks like Excel wants it to be a Value not a Reference\n\nAre you able to create a few different formulas in POI and Excel, eg if(expr,val,val), if(expr,val,func), if(exp,func,func), if(expr,func,val), if(func_expr,val,val), and check with BiffViewer what kind of Ptgs POI and Excel produces for these cases? (Need to work out if it's always one or the other, or if we need detection logic to work out which)"}, {"count": 10, "tags": [], "creator": "dron007@gmail.com", "attachment_id": 32975, "id": 184371, "time": "2015-08-06T06:28:14Z", "bug_id": 55747, "creation_time": "2015-08-06T06:28:14Z", "is_private": false, "text": "Created attachment 32975\nBiff Viewer results with xls files and source\n\nI tried so. Results in attachment as zip archive (source, xls-files, BiffViewer results).\nAs I can see, each \"#VALUE!\" cell has same issue:\n    org.apache.poi.ss.formula.ptg.RefPtg [A1]R\nin BAD file againist\n    org.apache.poi.ss.formula.ptg.RefPtg [A1]V\nin GOOD."}, {"count": 11, "tags": [], "creator": "dominik.stadler@gmx.at", "attachment_id": null, "id": 184424, "time": "2015-08-09T20:08:49Z", "bug_id": 55747, "creation_time": "2015-08-09T20:08:49Z", "is_private": false, "text": "This bug and bug 55324 may be describing the same issue."}, {"count": 12, "tags": [], "creator": "apache@gagravarr.org", "attachment_id": null, "is_private": false, "id": 184530, "time": "2015-08-12T19:56:15Z", "bug_id": 55747, "creation_time": "2015-08-12T19:56:15Z", "text": "I've spent a \"fun\" evening on this, and I think I've now got a unit test (failing unless bits commented out) describing the required situation. \n\nIn org.apache.poi.hssf.usermodel.TestFormulaEvaluatorBugs#test55747_55324 I've got tests based on your test file, expanded a little bit, checking standalone MID, along with MID-in-IF\n\nAs far as I can tell from that and the BiffViewer dumps, the rules seem to be:\n * MID used in IF 1st clause, or straight A1 ref in IF 1st clause: A1 = V\n * MID used in 2nd or 3rd clause that isn't used (evaluates other way): A1 = V\n * MID used in 2nd or 3rd clause that is used (evaluates that way): A1 = R <- thing we're doing wrong\n\nDoes that match with your testing? \n\nIf so, we'll need to have HSSFFormulaEvalutor tweak the types on evaluation. (We'd also need to identify any other types like that and fix them too)"}, {"count": 13, "tags": [], "bug_id": 55747, "attachment_id": null, "id": 184680, "creation_time": "2015-08-21T12:50:13Z", "time": "2015-08-21T12:50:13Z", "creator": "dron007@gmail.com", "text": "Yes, Nick, it seems to be so.", "is_private": false}]