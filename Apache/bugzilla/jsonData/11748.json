[{"count": 0, "tags": [], "bug_id": 11748, "text": "I have written a Java HTTP Client. It works with Tomcat 4.0.1 but it doesn't \nwork with Tomcat 4.1.9. It seems that the location header does not the \napplication port number. \n\nMy request (http://localhost:8080/nm/):\nGET /nm/ HTTP/1.0\nHost: localhost\nContent-Length: 0\nConnection: Close\nUser-Agent: None\n\nThe response:\nLocation: http://localhost/nm/index.jsp        <---- Doesn't have port number\nContent-Type: text/html\nDate: Thu, 15 Aug 2002 21:44:30 GMT\nServer: Apache Coyote/1.0\nConnection: close\n\nIf I just take the Location from the header and do a redirection, the request \nwill be invalid.", "id": 21127, "time": "2002-08-15T21:53:44Z", "creator": "jlei@ix.netcom.com", "creation_time": "2002-08-15T21:53:44Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 11748, "is_private": false, "text": "The bug is in the client program.  It is not sending the port in the Host \nheader, so Tomcat is assuming that the connection is on the default port.", "id": 21129, "time": "2002-08-15T21:58:23Z", "creator": "william.barker@wilshire.com", "creation_time": "2002-08-15T21:58:23Z", "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 11748, "text": "there is an actual bug here. In HttpProcessor, when the Host: header has no port\n(eg because the client is buggy as described above) the code does this:\nif (n < 0) {\n  if (connector.getScheme().equals(\"http\")) {\n     request.setServerPort(80);\n  } else if (connector.getScheme().equals(\"https\")) {\n     request.setServerPort(443);\n  }\n  if (proxyName != null)\n     request.setServerName(proxyName);\n  else\n     request.setServerName(value);\n}\nnote that in the above only the proxyName is processed, not the proxyPort. In\nother words, if you explicitly tell tomcat to ignore the host header and use\nproxy host/port combo, it doesnt in this case, it only uses the host.\n\nthe code for host header handling *should* look like this:\n            } else if (header.equals(DefaultHeaders.HOST_NAME)) {\n                int n = value.indexOf(':');\n                // parse and apply host header\n                if (n < 0) {\n                    if (connector.getScheme().equals(\"http\")) {\n                        request.setServerPort(80);\n                    } else if (connector.getScheme().equals(\"https\")) {\n                        request.setServerPort(443);\n                    }\n                    request.setServerName(value);\n                } else {\n                    request.setServerName(value.substring(0, n).trim());\n                    int port = 80;\n                    try {\n                       port = Integer.parseInt(value.substring(n+1).trim());\n                    } catch (Exception e) {\n                       throw new ServletException\n                            (sm.getString\n                            (\"httpProcessor.parseHeaders.portNumber\"));\n                    }\n                    request.setServerPort(port);\n                }\n\n                // apply proxy overrides\n                if (proxyName != null)\n                   request.setServerName(proxyName);\n                if (proxyPort != 0)\n                   request.setServerPort(proxyPort);\n            } ...\n\nthe intent here is that any proxy host/port settings are always applied.\n\nWe reproduced the problem following a link from Word 2000, linking to tomcat via\nthe axis tcpmon proxy. linking to any content that returns a redirect shows the\nproblem (eg \"http://host:port/foo\" redirects to \"http://host:port/foo/\") Word\nsends a host header without the port, obviously a bug, but tomcat's response\nignores the proxy settings due to the bug described above.", "id": 63343, "time": "2004-09-10T11:54:25Z", "creator": "Brian.Ewins@btinternet.com", "creation_time": "2004-09-10T11:54:25Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 11748, "is_private": false, "text": "The standard approach of the Tomcat team is not to introduce code to Tomact that\nis effectively a work-around for a broken client. This makes the report INVALID.\n\nAlso, this connector is now deprecated which if this was a valid bug would make\nthis a WONTFIX.", "id": 72702, "time": "2005-03-19T18:59:23Z", "creator": "markt@apache.org", "creation_time": "2005-03-19T18:59:23Z", "attachment_id": null}]