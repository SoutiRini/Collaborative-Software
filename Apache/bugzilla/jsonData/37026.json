[{"count": 0, "tags": [], "bug_id": 37026, "attachment_id": null, "text": "Under high load, an Apache reverse proxy eventually ends up having one or more\nchildren using all the CPU they can get\n\nI have noticed http://issues.eu.apache.org/bugzilla/show_bug.cgi?id=36324, but\nthe problem does not seem to be the same, i.e. the stack trace is very different.\n\nThis problem is pretty easy to reproduce by applying load on the server in our\nbenchmark environment. Unfortunately it also occurs in production.\n\nThe problem was also observed with Apache 2.0.49. We do use one 3rd party module\n(Siteminder WebAgent 5QMR7). The problem also occurs with the old Siteminder\nWebAgent architecture (pre-5QMR6) so I somewhat assume that it may not be\nrelated to that module.\n\nWhen the problem occurs, all the server-status of the slots of the process gone\nballistic report:\n2-0 13292 0/29/113 R  3.59 33 1 0.0 0.25 0.99  ? ? ..reading..  \n2-0 13292 0/14/93 R  3.49 34 506 0.0 0.14 0.82  ? ? ..reading..  \n2-0 13292 0/5/88 R  3.00 39 129 0.0 0.06 0.49  ? ? ..reading..  \n\nOutput from truss shows:\ntruss -uall -f -p 13292\n13292:  poll(0xFE3FBE10, 0, 1000)                       = 0\n13292:  poll(0xF737BE38, 0, 1000)                       = 0\n13292:  poll(0xFE3FBE10, 0, 1000)                       = 0\n13292:  poll(0xF737BE38, 0, 1000)                       = 0\n...\n\nAnd the stack:\n(gdb)  bt full\n#0  0xfee9f358 in _lwp_wait () from /usr/lib/libc.so.1\nNo symbol table info available.\n#1  0xfed4ca88 in lwp_wait () from /usr/lib/lwp/libthread.so.1\nNo symbol table info available.\n#2  0xfed48370 in _thrp_join () from /usr/lib/lwp/libthread.so.1\nNo symbol table info available.\n#3  0xff0e4e1c in apr_thread_join (retval=0xffbef6fc, thd=0x1fc3e8)\n    at thread.c:181\n        stat = 3\n        thread_stat = (apr_status_t *) 0x7a120\n#4  0x00050bfc in join_workers (listener=0x0, threads=0x1229b0)\n    at worker.c:1047\n        i = 0\n        rv = -4262148\n        thread_rv = 0\n#5  0x00050ea0 in child_main (child_num_arg=0) at worker.c:1229\n        threads = (apr_thread_t **) 0x1229b0\n        rv = 1\n        ts = (thread_starter *) 0x1fbc60\n        thread_attr = (apr_threadattr_t *) 0x1fbc70\n        start_thread_id = (apr_thread_t *) 0x1fbc80\n#6  0x00051188 in make_child (s=0x9d400, slot=0) at worker.c:1283\n        pid = 0\n#7  0x000514c4 in perform_idle_server_maintenance () at worker.c:1460\n        i = 1\n        j = 0\n        idle_thread_count = 4\n        ps = (process_score *) 0x9dc00\n        free_length = 1\n        totally_free_length = 1\n        free_slots = {0, 0, 1, 0, -15830540, 253, -22540096, -22544352, 0, \n  -22544272, 6, 646144, 59, 1, 6, 1, -4261524, -4261528, -4261520, 685176, \n  634880, 1, -4261632, 333240, 8192, 6, -4261632, -15744364, -4261536, 5, 6, 6}\n        last_non_dead = 5\n        total_non_dead = 6\n#8  0x0005164c in server_main_loop (remaining_children_to_start=0)\n    at worker.c:1509\n        child_slot = 0\n        exitwhy = APR_PROC_EXIT\n        status = 0\n        processed_status = 0\n        pid = {pid = -1, in = 0xffbef9ec, out = 0x6, err = 0x0}\n        i = 100\n#9  0x0005197c in ap_mpm_run (_pconf=0x9c800, plog=0xe1560, s=0x0)\n    at worker.c:1658\n        remaining_children_to_start = 0\n        rv = 0\n#10 0x0005849c in main (argc=9, argv=0xffbefafc) at main.c:618\n        c = 68 'D'\n        configtestonly = 633856\n        confname = 0xffbefc2a \"/centuri/axe1/apache/httpd2/apache8/conf/httpd.conf\"\n        def_server_root = 0x833a8 \"/u01/opt/apache2\"\n        temp_error_log = 0x82c00 \"ersion: %s\\n\"\n        process = (process_rec *) 0xa54f0\n        server_conf = (server_rec *) 0xac460\n        pglobal = (apr_pool_t *) 0x83400\n        pconf = (apr_pool_t *) 0xa7478\n        plog = (apr_pool_t *) 0xe1560\n        ptemp = (apr_pool_t *) 0xe5570\n        pcommands = (apr_pool_t *) 0xa9480\n        opt = (apr_getopt_t *) 0xa9518\n        rv = 641024\n        mod = (module **) 0xac460\n        optarg = 0xffbefc71 \"TEST\"\n        signal_server = (apr_OFN_ap_signal_server_t *) 0xa7\n(gdb)", "id": 81005, "time": "2005-10-11T20:17:53Z", "creator": "asmorgrav@yahoo.no", "creation_time": "2005-10-11T20:17:53Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 37026, "attachment_id": null, "text": "Thanks for the info, but it seems that you have caught the wrong thread with\nyour gdb bt. So it is hard to find out what is going wrong. Could you please\nprovide the following information?\n\n/usr/proc/bin/pstack <pid>\ntruss -faedl -vall <pid>\n\nAnd possibly a gdb bt full for all threads?\nYou can see all available threads by the gdb command\ninfo threads\nand you can switch between them via\nthread <thread id>\n\nin gdb. As the full bt of all threads will be rather long I would like to\nrequest you to attach them rather then to put them inside the report to ease\nanalysis. Further debugging information can be found at\nhttp://httpd.apache.org/dev/debugging.html.", "id": 81007, "time": "2005-10-11T21:46:16Z", "creator": "rpluem@apache.org", "creation_time": "2005-10-11T21:46:16Z", "is_private": false}, {"count": 2, "tags": [], "text": "> /usr/proc/bin/pstack <pid>\n\nI'll attach the information\n\n> truss -faedl -vall <pid>\n\nI'll attach the information\n \n> And possibly a gdb bt full for all threads?\n> You can see all available threads by the gdb command\n> info threads\n> and you can switch between them via\n> thread <thread id>\n> \n> in gdb. As the full bt of all threads will be rather long I would like to\n> request you to attach them rather then to put them inside the report to ease\n> analysis. Further debugging information can be found at\n> http://httpd.apache.org/dev/debugging.html.\n\nThanks again for the info. The full thread stacks are in a separate file. Due to\nthe high number of threads in the process, I had to make a selection of a few\nthat appeared to have different characteristics.\n\nI need to add that we use a cryptographic accelerator supplied by Sun; the\nSCA500. It is shipped with SSL/cryptographic libraries (currently OpenSSL\n0.9.7g), and what I guess is an Engine implementation by Sun.", "attachment_id": null, "id": 81019, "creator": "asmorgrav@yahoo.no", "time": "2005-10-12T09:15:58Z", "bug_id": 37026, "creation_time": "2005-10-12T09:15:58Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 37026, "attachment_id": 16671, "id": 81020, "time": "2005-10-12T09:22:50Z", "creator": "asmorgrav@yahoo.no", "creation_time": "2005-10-12T09:22:50Z", "is_private": false, "text": "Created attachment 16671\nOutput from /usr/proc/bin/pstack"}, {"count": 4, "tags": [], "text": "Created attachment 16672\nStack dumps from select threads of the run-away process", "attachment_id": 16672, "id": 81021, "creator": "asmorgrav@yahoo.no", "time": "2005-10-12T09:23:53Z", "bug_id": 37026, "creation_time": "2005-10-12T09:23:53Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 37026, "attachment_id": 16673, "text": "Created attachment 16673\nOutput from truss attached to the run-away process", "id": 81022, "time": "2005-10-12T09:24:19Z", "creator": "asmorgrav@yahoo.no", "creation_time": "2005-10-12T09:24:19Z", "is_private": false}, {"count": 6, "tags": [], "bug_id": 37026, "attachment_id": null, "text": "The threads are either doing something in SiteMinder:\n\n#0  0xfee9d618 in _poll () from /usr/lib/libc.so.1\n...\n#3  0xfe575ad8 in __1cIcm_sleep6FLl_v_ ()\n   from /u01/siteminder/wa5q7/webagent/lib/libmod_sm20.so\n...\n\nOr doing something in a vendor-patched OpenSSL library:\n\n#0  0xfed54cd0 in __lwp_park () from /usr/lib/lwp/libthread.so.1\n...\n#3  0xff1fb230 in rsa_privatekeyinit ()\n   from /opt/SUNWconn/crypto/lib/libcrypto.so.0.9.7\n...\n\nso as first step you need to contact the vendors for support.\n\nPlease reopen if you can reproduce having eliminated both those things, and\nprovide the truss and backtrace information again.  In GDB, use\n\n  \"thread apply all bt full\"\n\nto get backtraces for all threads at once.", "id": 81024, "time": "2005-10-12T10:22:48Z", "creator": "jorton@redhat.com", "creation_time": "2005-10-12T10:22:48Z", "is_private": false}, {"count": 7, "tags": [], "bug_id": 37026, "text": "Additional hint from my side: From the truss output I cannot see any extensive\nCPU consumption. The process is mostly sleeping, waiting for poll to return.\nAs the second parameter of poll is zero I assume that the SiteMinder module is\nnot really watching file descriptors but tries to sleep for 1 second over\nand over again.\nIt can also be seen from the gdb output that these threads that do the polling\nhave been created by the SiteMinder module itself and not by Apache as\nConnectionService from the module is the \"main\" function for this thread:\n\n(gdb) thread 207\n[Switching to thread 207 (Thread 105 (LWP 105))]#0  0xfee9d618 in _poll ()\n   from /usr/lib/libc.so.1\n(gdb) bt full\n#0  0xfee9d618 in _poll () from /usr/lib/libc.so.1\nNo symbol table info available.\n#1  0xfee4d53c in select () from /usr/lib/libc.so.1\nNo symbol table info available.\n#2  0xfed4da64 in select () from /usr/lib/lwp/libthread.so.1\nNo symbol table info available.\n#3  0xfe575ad8 in __1cIcm_sleep6FLl_v_ ()\n   from /u01/siteminder/wa5q7/webagent/lib/libmod_sm20.so\nNo symbol table info available.\n#4  0xfe57637c in ConnectionService ()\n   from /u01/siteminder/wa5q7/webagent/lib/libmod_sm20.so\nNo symbol table info available.\n#5  0xfed54b98 in _lwp_start () from /usr/lib/lwp/libthread.so.1\nNo symbol table info available.\n#6  0xfed54b98 in _lwp_start () from /usr/lib/lwp/libthread.so.1\nNo symbol table info available.\nPrevious frame identical to this frame (corrupt stack?)\n(gdb) ", "id": 81032, "time": "2005-10-12T13:27:44Z", "creator": "rpluem@apache.org", "creation_time": "2005-10-12T13:27:44Z", "is_private": false, "attachment_id": null}, {"count": 8, "tags": [], "creator": "rpluem@apache.org", "attachment_id": null, "id": 81039, "time": "2005-10-12T15:32:23Z", "bug_id": 37026, "creation_time": "2005-10-12T15:32:23Z", "is_private": false, "text": "Argh. Stupid error of mine. The truss output cannot tell you in general if there\nis extensive CPU consumption or not. It only assures you (in this case) that the\nCPU consumption you see is not burned in kernel mode, because there is only a\nsmall number of syscalls in the 100 secs you observed the process. To find out\nwhich lwp (a.k.a thread) of the process is actually burning CPU you can use\nprstat -L -p <pid>."}, {"count": 9, "tags": [], "creator": "asmorgrav@yahoo.no", "attachment_id": null, "text": "(In reply to comment #8)\n\nThanks for the information. I will try to reproduce the problem once more, \nprstat it to figure out which thread(s) uses the CPU and make another backtrace \nin order to identify the library in which the cycles are spent.\n\nOtherwise your comments reinforce my conviction that the problem lies in the \ncryptographic library. Since my last post, we yanked the vendor-patched library \nand replaced it with a vanilla OpenSSL 0.9.7e. With that configuration we were \nnot able to reproduce the problem.\n\nA case has been posted to the vendor.", "id": 81099, "time": "2005-10-13T09:15:54Z", "bug_id": 37026, "creation_time": "2005-10-13T09:15:54Z", "is_private": false}, {"count": 10, "tags": [], "creator": "asmorgrav@yahoo.no", "attachment_id": null, "id": 81105, "time": "2005-10-13T11:26:57Z", "bug_id": 37026, "creation_time": "2005-10-13T11:26:57Z", "is_private": false, "text": "I reproduced the problem again, and thanks to your advice, I managed to prove \nthat the CPU cycles are indeed spent inside a proprietary libcryptography. It \nappears that the function rsa_privatekeyinit() locks a resource and enters an \ninfinite loop, and all other threads are waiting for it to complete except for \nthe Siteminder thread that poll every now and then.\n\nUnfortunately in this particular case I was not able to get a gdb backtrace:\n(gdb) info threads\n  209 Thread 2          procfs: couldn't find pid 20546 (kernel thread 2) in \nprocinfo list.\n\nThanks again for your help.\n"}]