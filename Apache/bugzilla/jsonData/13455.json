[{"count": 0, "tags": [], "text": "In order to get spidered by several robots, I often used the following syntax:\n\nhttp://www.test.com/index.php/category/1\n\nwhere index.php is the file and /category/1 is the query string.\n\nHowever, apache2 searches for a file named index.php/category/1 and produces a \n404 error message. Is this a bug or a feature?", "attachment_id": null, "bug_id": 13455, "id": 24202, "time": "2002-10-09T14:15:27Z", "creator": "tilman.giese@globalview.de", "creation_time": "2002-10-09T14:15:27Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 13455, "attachment_id": null, "id": 24207, "time": "2002-10-09T14:49:12Z", "creator": "wrowe@apache.org", "creation_time": "2002-10-09T14:49:12Z", "is_private": false, "text": "\n  Either PHP or your config of PHP isn't configured to accept pathinfo.\n\n  AcceptPathInfo On\n\n  will override the defaults.  You might want to apply that in something\n  like the following...\n\n  <Files \"*.php\">\n    AcceptPathInfo On\n    InsertOutputFilter PHP\n  </Files>\n\n  or something like that.\n"}, {"count": 2, "tags": [], "bug_id": 13455, "text": "\n  Should have marked invalid... AcceptPathInfo is the directive you might\n  want to look at, while the PHP module could be coded to toggle that flag\n  by default (not always a good idea, since every url under an existing file\n  appears to be a valid page.  www.apache.org had this very problem, where\n  folks used /httpd/index.html ... which was really /httpd.html from multiviews\n  with path info of /index.html ... all relative links would appear broken.)\n", "id": 28762, "time": "2002-12-30T19:12:17Z", "creator": "wrowe@apache.org", "creation_time": "2002-12-30T19:12:17Z", "is_private": false, "attachment_id": null}]