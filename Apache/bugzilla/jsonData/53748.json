[{"count": 0, "tags": [], "bug_id": 53748, "text": "Created attachment 29255\ncontains the code of access log timer, plan generator, and tests\n\nThe actual access log sampler has two drawbacks: a) the rate of the requests doens't replay the access log as the sampler doesn't considers the existing delay betweeen requests, and b) the concurrency is neither real, as there isn't distintion of which IP sends the request.\n\nThis enhancement adds two components: a timer for the access log sampler, and a generator that creates a test plan for the access log, with one thread group \nfor each IP.\n\nWith these components, replaying an access log is now much more real, as samples are sent respecting the delays in the access log, and each IP is represented by a different thread group so the real access log conccurrency is replayed.\n\nWith the generator you can also generate a test plan for a specific time range of the access log being replayed, in case  you don't want to replay the whole access log.\n\nI attach here the patch, and in the dev mailing list I will attach a PDF with the design details and some screenshots.", "id": 161545, "time": "2012-08-20T20:39:34Z", "creator": "enricjaen@yahoo.es", "creation_time": "2012-08-20T20:39:34Z", "is_private": false, "attachment_id": 29255}, {"count": 1, "tags": [], "creator": "enricjaen@yahoo.es", "is_private": false, "text": "Created attachment 29256\ndesign details and screenshots\n\nI attach here the pdf", "id": 161551, "time": "2012-08-21T02:45:14Z", "bug_id": 53748, "creation_time": "2012-08-21T02:45:14Z", "attachment_id": 29256}, {"count": 2, "attachment_id": null, "bug_id": 53748, "text": "Hello,\nThanks for your contribution and sorry for very late feedback.\n\nFew questions regarding Access Log Timer:\n- Why read lines from access log into memory instead of reading them from file ?\n- There is something that's not clear for me, does Access Log TImeer suppose that access log file has been split into as many file as IPs and that  only the logs concerning the Thread Group under which Timer is located are passed to it ? because if not, it seems to me delay computation is weird ? could you clarify ?\n- Could you submit the PDF into a writable format ?\n\n\nThanks", "id": 167040, "time": "2013-05-05T14:43:39Z", "creator": "p.mouawad@ubik-ingenierie.com", "creation_time": "2013-05-05T14:43:39Z", "tags": [], "is_private": false}, {"attachment_id": null, "tags": [], "creator": "enricjaen@yahoo.es", "is_private": false, "count": 3, "id": 167084, "time": "2013-05-08T06:40:11Z", "bug_id": 53748, "creation_time": "2013-05-08T06:40:11Z", "text": "Hi Philippe! I'll answer in a few days. Cheers"}, {"count": 4, "tags": [], "bug_id": 53748, "text": "Hi Philippe! I'll answer in a few days. Cheers", "id": 167085, "time": "2013-05-08T06:41:27Z", "creator": "enricjaen@yahoo.es", "creation_time": "2013-05-08T06:41:27Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 53748, "text": "Created attachment 30434\nwrittable documentation", "id": 167823, "time": "2013-06-15T13:54:38Z", "creator": "enricjaen@yahoo.es", "creation_time": "2013-06-15T13:54:38Z", "is_private": false, "attachment_id": 30434}, {"count": 6, "tags": [], "bug_id": 53748, "attachment_id": null, "is_private": false, "id": 167824, "time": "2013-06-15T13:57:33Z", "creator": "enricjaen@yahoo.es", "creation_time": "2013-06-15T13:57:33Z", "text": "Hi Philippe,\n\nSorry me too! \n\nThanks for your questions. I hope to clarify them:\n\n- Why read lines from access log into memory instead of reading them from file ?\n\nThis is needed to keep at runtime the delays as similar as in the log file. Reading them from disc caused delay deviations due to disc major latency.\n\n- There is something that's not clear for me, does Access Log TImeer suppose that access log file has been split into as many file as IPs and that  only the logs concerning the Thread Group under which Timer is located are passed to it ? because if not, it seems to me delay computation is weird ? could you clarify ?\n\nyes, the generator (1) splits the log file in the way you say, and also generates the jmeter plan file. Keep in mind that this computation is done before running jmeter, in a preparation phase.\n\n(1) the generator is implemented actually as a junit test, but the idea is to have a command tool.\n\n- Could you submit the PDF into a writable format ?\n\nI attach it.\n\n\nBest regards,\n/Enric"}, {"count": 7, "tags": [], "creator": "p.mouawad@ubik-ingenierie.com", "is_private": false, "text": "(In reply to ejaenv from comment #6)\n> Hi Philippe,\n> \n> Sorry me too! \n> \n> Thanks for your questions. I hope to clarify them:\n> \n> - Why read lines from access log into memory instead of reading them from\n> file ?\n> \n> This is needed to keep at runtime the delays as similar as in the log file.\n> Reading them from disc caused delay deviations due to disc major latency.\n> \nIn this case , I think it's better to parse time during read and only store the time instead of the whole sampler ?\nAlso I wonder if it would not be better to read from file to decrease memory usage.\n\n> - There is something that's not clear for me, does Access Log TImeer suppose\n> that access log file has been split into as many file as IPs and that  only\n> the logs concerning the Thread Group under which Timer is located are passed\n> to it ? because if not, it seems to me delay computation is weird ? could\n> you clarify ?\n> \n> yes, the generator (1) splits the log file in the way you say, and also\n> generates the jmeter plan file. Keep in mind that this computation is done\n> before running jmeter, in a preparation phase.\n> \n> (1) the generator is implemented actually as a junit test, but the idea is\n> to have a command tool.\n> \n> - Could you submit the PDF into a writable format ?\n> \n> I attach it.\n> \n> \n> Best regards,\n> /Enric\n\n\nCould you join the dev mailing list, I started a discussion \"AccessLogSampler & Bug 53748\" ?", "id": 167846, "time": "2013-06-15T20:30:44Z", "bug_id": 53748, "creation_time": "2013-06-15T20:30:44Z", "attachment_id": null}, {"attachment_id": 30440, "tags": [], "bug_id": 53748, "is_private": false, "count": 8, "id": 167847, "time": "2013-06-15T20:57:16Z", "creator": "p.mouawad@ubik-ingenierie.com", "creation_time": "2013-06-15T20:57:16Z", "text": "Created attachment 30440\nUpdated patch\n\nAttached is the updated patch with the following:\n- Some code cleanup to follow naming conventions and others\n- AccessLogTimer now only reads the time in memory instead of samples content"}, {"count": 9, "tags": [], "creator": "sebb@apache.org", "text": "I'm not sure why the access log needs to be rewritten, surely the sampler can just read through the file until it finds the correct entry? Each sampler would need to know the IP address for which it is responsible.\n\nIf the access log does need to be reformatted, it should be done as a separate stage before starting the test proper, and the output should probably be reformatted to make subsequent parsing easier.\n\nI don't think this should be added to JMeter trunk without further analysis.\nMaybe create an SVN branch so the feature can be tested further.\nIf it looks OK it can later be merged with trunk.", "id": 168268, "time": "2013-07-04T12:39:42Z", "bug_id": 53748, "creation_time": "2013-07-04T12:39:42Z", "is_private": false, "attachment_id": null}, {"count": 10, "tags": [], "bug_id": 53748, "is_private": false, "text": "\nYes this is a beta version and surely the design needs to be discussed. As it is now:\n\n>If the access log does need to be reformatted, it should be done as a separate >stage before starting the test proper, and the output should probably be >reformatted to make subsequent parsing easier.\n\nYes, this is done in a separate stage.\n\n>I'm not sure why the access log needs to be rewritten, surely the sampler can >just read through the file until it finds the correct entry? Each sampler \n> would need to know the IP address for which it is responsible.\n\nAs in the current plugin design, a log preprocessing is done:\n\n1. to know in advance how many threadgroups will have the test plan (one for IP)\n\n2. to know how many requests each IP will send, and close the threadgroup when it has finished. Rewritting the acceslog is done for efficiency, to avoid each sampler read the whole log file, but apart of this, yes, it's possible for a sampler to work directly with the original file. \n\n\n>I don't think this should be added to JMeter trunk without further analysis.\n>Maybe create an SVN branch so the feature can be tested further.\n>If it looks OK it can later be merged with trunk.\n\nI agree! Probably its better a design without preprocessing, where a master sampler reads the log, and dynamically creates slave threadgroups on demand. This would also solve the file hander problem you pointed earlier.", "id": 168270, "time": "2013-07-04T13:38:45Z", "creator": "enricjaen@yahoo.es", "creation_time": "2013-07-04T13:38:45Z", "attachment_id": null}, {"count": 11, "attachment_id": null, "bug_id": 53748, "is_private": false, "id": 168271, "time": "2013-07-04T15:14:06Z", "creator": "sebb@apache.org", "creation_time": "2013-07-04T15:14:06Z", "tags": [], "text": "Separate Thread Groups are not essential to ensure concurrency; separate threads are sufficient.\n\nAlso it's not necessary to know how in advance many samples there are in each batch; a test element can cause its thread to stop when it has no more data to process.\n\nI think the only advance knowledge that may be needed is how many different IPs there are, so sufficient threads can be started."}, {"count": 12, "tags": [], "bug_id": 53748, "text": "\nbut knowing the number of IPs is not necessary as threads can be created in demand whenever the sampler reads a new IP.\n\nwhat It's needed is the number of requests per IP so a thread can finalize once it has sent all its requests.\n\nThe preprocessing could be done by the sampler itself before it starts creating threads.", "id": 168272, "time": "2013-07-04T16:13:51Z", "creator": "enricjaen@yahoo.es", "creation_time": "2013-07-04T16:13:51Z", "is_private": false, "attachment_id": null}, {"count": 13, "attachment_id": null, "creator": "sebb@apache.org", "text": "(In reply to ejaenv from comment #12)\n> but knowing the number of IPs is not necessary as threads can be created in\n> demand whenever the sampler reads a new IP.\n\nThread creation is relatively expensive, so not ideal to create one as part of the main test.\n \n> what It's needed is the number of requests per IP so a thread can finalize\n> once it has sent all its requests.\n\nA thread can stop itself when it has nothing more to do.\n \n> The preprocessing could be done by the sampler itself before it starts\n> creating threads.\n\nSamplers don't normally create threads in JMeter (except for download resources).", "id": 168273, "time": "2013-07-04T16:31:46Z", "bug_id": 53748, "creation_time": "2013-07-04T16:31:46Z", "tags": [], "is_private": false}, {"count": 14, "tags": [], "bug_id": 53748, "text": "so do you propose to create and start all the threads at the very test start?\n\nhow can you finalize the threads without knowing the number of requests to send? are you proposing that all the threads live the whole test?", "id": 168275, "time": "2013-07-04T19:21:39Z", "creator": "enricjaen@yahoo.es", "creation_time": "2013-07-04T19:21:39Z", "is_private": false, "attachment_id": null}, {"count": 15, "tags": [], "bug_id": 53748, "attachment_id": null, "is_private": false, "id": 168277, "time": "2013-07-04T21:25:38Z", "creator": "sebb@apache.org", "creation_time": "2013-07-04T21:25:38Z", "text": "(In reply to ejaenv from comment #14)\n> so do you propose to create and start all the threads at the very test start?\n\nIdeally, yes.\n\n> how can you finalize the threads without knowing the number of requests to\n> send? \n\nAs already stated (twice), a thread can stop itself when it has no more samples to process.\n\n> are you proposing that all the threads live the whole test?\n\nNo."}, {"count": 16, "attachment_id": null, "bug_id": 53748, "text": ">> how can you finalize the threads without knowing the number of requests to\n>> send? \n\n>As already stated (twice), a thread can stop itself when it has no more samples >to process.\n\nHow can the thread stop itself? I am assuming that threads (samplers) don't read themselves the log to avoid the file handler problem, but that there is a queue that feed the samplers (as you pointed). Someone has to notify them to stop, or tell them h", "id": 168280, "time": "2013-07-05T05:04:49Z", "creator": "enricjaen@yahoo.es", "creation_time": "2013-07-05T05:04:49Z", "tags": [], "is_private": false}, {"count": 17, "tags": [], "bug_id": 53748, "text": "(In reply to ejaenv from comment #16)\n>\n> How can the thread stop itself? I am assuming that threads (samplers) don't\n> read themselves the log to avoid the file handler problem, but that there is\n> a queue that feed the samplers (as you pointed). Someone has to notify them\n> to stop, or tell them h\n\nFor example, the queue can contain a special marker entry that denotes EOF.\nThis technique is used in AsynchSampleSender - see FINAL_EVENT.", "id": 168284, "time": "2013-07-05T08:29:05Z", "creator": "sebb@apache.org", "creation_time": "2013-07-05T08:29:05Z", "is_private": false, "attachment_id": null}, {"count": 18, "tags": [], "bug_id": 53748, "text": "sorry I don't follow you.. Supose a 1-hour log where an IP just sends 1 request at time-0.  What do you mean, the thread should stop 1 hour later (at EOF) of after sending the request? (I am fine with any option, I just propose in the second case that before start sending requests someone read the whole log and configure the thread to stop after 1 request in this case)", "id": 168287, "time": "2013-07-05T09:24:08Z", "creator": "enricjaen@yahoo.es", "creation_time": "2013-07-05T09:24:08Z", "is_private": false, "attachment_id": null}]