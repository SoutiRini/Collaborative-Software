[{"count": 0, "tags": [], "bug_id": 48737, "text": "Created attachment 24978\npatch to JspCompilationContext\n\nThis is a pretty special case, since tagfiles in META-INF are usually in jar files...\nbut when using a custom dircontext implementation (usually during development in order to load files from the filesystem without building a full jar) it may happen that the path given to jasper starts with META-INF also if the file is not in a jar. This is what happens using the Eclipse WTP tomcat loader, which loads classes from the workspaces and tld/tagfiles from directories inside your projects.\n\nTagfiles contained in META-INF directories worked properly till tomcat 6.0.17, but the final fix for BUG 43741 broke it (I am still using 6.0.16 and not upgrading due to this problem).\n\nLooking at JspCompilationContext.getResource() the patch to solve this problem would be very simple and \"safe\": if the path starts with META-INF and a jar file containing the tld doesn't exist the resulting URL is simply null.\nAdding a check for the null jar and setting the URL to the \"standard\" path inside the context fixes the problem and everything starts working again (note that this doesn't break the previous fix and it can't cause any problem, since the result would have been null anyway).\n\n\nA patch against trunk (2010-02-13) is attached, the following code should easily displays what the patch does: \n\n        URL result = null;\n        if (res.startsWith(\"/META-INF/\")) {\n           // some lines to get the jar url\n           // ...\n           if (jarUrl != null) {\n               result = new URL(jarUrl.toExternalForm() + res.substring(1));\n           }\n+          else {\n+              // the path starts with /META-INF but the file is not in a jar\n+              result = context.getResource(canonicalURI(res));\n+          }\n        }", "id": 134471, "time": "2010-02-13T18:19:03Z", "creator": "fgiust@apache.org", "creation_time": "2010-02-13T18:19:03Z", "is_private": false, "attachment_id": 24978}, {"count": 1, "tags": [], "bug_id": 48737, "text": "Thanks for the patch.\n\nThis has been fixed in trunk and proposed for 6.0.x", "id": 135188, "time": "2010-03-09T12:34:30Z", "creator": "markt@apache.org", "creation_time": "2010-03-09T12:34:30Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 48737, "attachment_id": null, "id": 135382, "time": "2010-03-16T14:42:10Z", "creator": "fgiust@apache.org", "creation_time": "2010-03-16T14:42:10Z", "is_private": false, "text": "(In reply to comment #1)\n> Thanks for the patch.\n> \n> This has been fixed in trunk and proposed for 6.0.x\n\ngreat! Can you tell if it has been included in 6.0.26? I couldn't find a good way to guess this from bugzilla..."}, {"count": 3, "tags": [], "bug_id": 48737, "attachment_id": null, "id": 135383, "time": "2010-03-16T15:15:57Z", "creator": "markt@apache.org", "creation_time": "2010-03-16T15:15:57Z", "is_private": false, "text": "That would be what the 6.0.26 change log is for."}, {"count": 4, "tags": [], "bug_id": 48737, "text": "(In reply to comment #3)\n> That would be what the 6.0.26 change log is for.\n\nyou are right, I'm too used with the \"fixed versions\" in jira...\n\nso it's not in 6.0.26, any chance to see it in a 6.0.x release soon? Thanks", "id": 135491, "time": "2010-03-21T19:10:44Z", "creator": "fgiust@apache.org", "creation_time": "2010-03-21T19:10:44Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 48737, "attachment_id": null, "id": 136872, "time": "2010-05-14T15:53:09Z", "creator": "markt@apache.org", "creation_time": "2010-05-14T15:53:09Z", "is_private": false, "text": "Thanks again for the patch. This has been fixed in 6.0.x and will be included in 6.0.27 onwards."}]