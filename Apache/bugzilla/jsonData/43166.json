[{"count": 0, "tags": [], "creator": "guillaume.levrero@free.fr", "text": "On nested inlines, if the outer inline has a border and the inner inline hasn't.\nThe right border is not rendered.", "id": 106923, "time": "2007-08-20T02:32:28Z", "bug_id": 43166, "creation_time": "2007-08-20T02:32:28Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "creator": "guillaume.levrero@free.fr", "attachment_id": 20678, "id": 106924, "time": "2007-08-20T02:33:14Z", "bug_id": 43166, "creation_time": "2007-08-20T02:33:14Z", "is_private": false, "text": "Created attachment 20678\nFO to reproduce bug"}, {"count": 2, "tags": [], "text": "Created attachment 26425\nPatch\n\nThe border isn't rendered because InlineLevelLayoutManger fails to detect the last knuth element due to an incorrect value of the position counter (lastGeneratedPosition in AbstractLayoutManager). The counter is incremented when adding letter spacing and actually no new knuth element is added to the sequence because an existing one is just replaced. Decreasing the counter before letter spacing is applied fixes this issue.", "attachment_id": 26425, "id": 142851, "creation_time": "2010-12-19T19:04:28Z", "time": "2010-12-19T19:04:28Z", "creator": "matthias8283@gmx.at", "bug_id": 43166, "is_private": false}, {"count": 3, "tags": [], "creator": "spepping@apache.org", "attachment_id": null, "id": 142921, "time": "2010-12-22T13:39:40Z", "bug_id": 43166, "creation_time": "2010-12-22T13:39:40Z", "is_private": false, "text": "The patch works of course, but it looks a bit like magic. I would like to dig deeper into this. I am surprised that the actual value of the index makes such a difference. It would be helpful if you would indicate:\n\n1. where in the code the border is added or not added to the result page, depending on the value of the index;\n\n2. where in the code the knuth element is replaced instead of being added."}, {"count": 4, "tags": [], "creator": "matthias8283@gmx.at", "attachment_id": null, "text": "(In reply to comment #3)\n> The patch works of course, but it looks a bit like magic. I would like to dig\n> deeper into this. I am surprised that the actual value of the index makes such\n> a difference. It would be helpful if you would indicate:\n\nYou're right, the patch only does magic, but doesn't really fix the problem. Debugging again I discovered, that the letter space is added to an existing sequence and then the elements of a new sequence are also added to the existing sequence. See: InlineKnuthSequence.appendSequence(). Since notifyPos() has already been called for the positions of the new sequence (see InlineLayoutManager.getNextKnuthElements() --> sequence.wrapPositions()), the letter space has a higher index than the positions of the new sequence, although it is added before it. This causes the positions of the final sequence to be something like that:\n-1 (border)\n0\n2 (letter spacing)\n1\n-1 (border)\n\nWhen hyphenation is used and hyphenation opportunities are found this is no problem because all positions get a new index when InlineStackingLayoutManager.applyChanges() is executed.\n\n> 1. where in the code the border is added or not added to the result page,\n> depending on the value of the index;\n\nThis happens inside:\nInlineLayoutManager.addAreas()\n--> setTraits(areaCreated, lastPos == null || !isLast(lastPos));\n\n> 2. where in the code the knuth element is replaced instead of being added.\n\nThat was just no sense of my part. The letter space is added as a new knuth element and nothing is replaced.", "id": 142971, "time": "2010-12-28T15:16:28Z", "bug_id": 43166, "creation_time": "2010-12-28T15:16:28Z", "is_private": false}, {"count": 5, "tags": [], "text": "Works OK now, probably due to the improvements in revision 1052561.", "attachment_id": null, "id": 143176, "creation_time": "2011-01-07T10:48:08Z", "time": "2011-01-07T10:48:08Z", "creator": "spepping@apache.org", "bug_id": 43166, "is_private": false}, {"count": 6, "tags": [], "creator": "gadams@apache.org", "attachment_id": null, "text": "batch transition to closed; if someone wishes to restore one of these to resolved in order to perform a verification step, then feel free to do so", "id": 155472, "time": "2012-04-01T06:18:00Z", "bug_id": 43166, "creation_time": "2012-04-01T06:18:00Z", "is_private": false}]