[{"count": 0, "tags": [], "bug_id": 42829, "text": "Intermittently after a graceful restart (apachectl graceful) extra Apache\nprocesses are left running on the server.  A check to server-status shows a\nnumber of them to be in state 'G' (gracefully finishing).  They remain in that\nstate indefinitely, and will not go away until a stop-and-start or a restart is\nissued.\n\nThe 'top' command shows one of these 'G' processes is stuck in kqread, while the\nrest are in lockf.  (I believe the processes in lockf are blocking on the accept\nmutex, which is held by the process in kqread and therefore is never cleared.)\n\nA stack trace of the process in kqread state shows the process calling kevent()\nfrom the apr_pollset_poll() function in srclib/apr/poll/unix/kqueue.c, which is\ncalled from the main loop in child_main() of server/mpm/prefork/profork.c.  When\nthe process is allowed to  continue, it never returns from kevent().\n\nFrequently the error log contains the following message when the problem has\noccurred:\n[error] (9)Bad file descriptor: apr_socket_accept: (client socket)\n\nThe behavior can be replicated in the Apache 2.2.4 release version on FreeBSD\n6.2 stable.  The build configuration is as follows:\n\n./configure \\\n  --with-apr=/usr/local/apr-httpd/ \\\n  --with-apr-util=/usr/local/apr-util-httpd/ \\\n  --prefix=/usr/local/httpd-2.2.4 \\\n  --with-mpm=prefork \\\n  --enable-mods=info\n\nThe problem only occurs when at least one extra listener is configured in\nhttpd.conf:\n  Listen 80\n  Listen 8080\n\nWhen replicating the problem it is useful to enable server-status by\nuncommenting the Include line for httpd-info.conf and adding an 'Allow from'\nline in the file conf/extra/httpd-info.conf.\n\nAfter Apache has been restarted a series of 'apachectl graceful' commands will\nusually trigger the problem.  It speeds things up to run several of them on one\ncommand line (separated by semi-colons), but care is required not to run into\nanother Apache bug with similar steps to duplicate (ID 39311).  Usually the hung\n'G' process will show up within 2-3 minutes by continually repeating in this way.\n\nHere is my take on what may happening, along with a patch that works for me:\n\nThere appears to be a race condition between Apache prefork and kevent() that\ndepends upon the timing of the receipt of SIGUSR1 in the child process.  When\nSIGUSR1 is received, the current signal handler for prefork closes all listeners\nimmediately.  I believe if the close occurs before the process gets into\nkevent() to poll the sockets, it can cause kevent() to hang.\n\nMy solution was to wait until after the !die_now loop to close listeners.  The\nsignal handler merely sets the die_now flag, nothing more.  Here is my proposed\npatch:\n\n--- prefork.c.orig      Fri Jul  6 11:12:53 2007\n+++ prefork.c   Fri Jul  6 11:18:24 2007\n@@ -330,8 +330,6 @@\n \n static void stop_listening(int sig)\n {\n-    ap_close_listeners();\n-\n     /* For a graceful stop, we want the child to exit when done */\n     die_now = 1;\n }\n@@ -657,6 +655,7 @@\n             die_now = 1;\n         }\n     }\n+    ap_close_listeners();\n     clean_child_exit(0);\n }", "id": 105152, "time": "2007-07-06T14:45:16Z", "creator": "nmower@verio.net", "creation_time": "2007-07-06T14:45:16Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 42829, "attachment_id": 20470, "id": 105153, "time": "2007-07-06T14:48:08Z", "creator": "nmower@verio.net", "creation_time": "2007-07-06T14:48:08Z", "is_private": false, "text": "Created attachment 20470\nProposed changes to the SIGUSR1 handler and prefork code"}, {"count": 2, "tags": [], "creator": "henkka@spheroid.fi", "attachment_id": null, "id": 107014, "time": "2007-08-22T01:33:46Z", "bug_id": 42829, "creation_time": "2007-08-22T01:33:46Z", "is_private": false, "text": "I have the exactly same problem on jailed Apache 2.2.4 running on FreeBSD 6.2."}, {"count": 3, "tags": [], "bug_id": 42829, "is_private": false, "text": "i have same issue on my test/preproduction machine with apache 2.2.4 (with\nmod_ssl, mod_php) on top of gentoo 2007.0 and slackware 12.0 linux distribution\n...  tested with the package from distribution and with my own package builded\nfrom vanilla apache (the arhives from httpd.apache.org)", "id": 107170, "time": "2007-08-23T09:50:37Z", "creator": "mihai.costache@freeland.ro", "creation_time": "2007-08-23T09:50:37Z", "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 42829, "attachment_id": null, "text": "Same problem on Apache 2.2.4 (Debian/Lenny, amd x86_64, kernel 2.6.18)", "id": 107324, "time": "2007-08-28T03:52:25Z", "creator": "ilya.glazkov@gmail.com", "creation_time": "2007-08-28T03:52:25Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 42829, "attachment_id": null, "text": "I'm also seeing this on Debian testing on x86 . \n\nLooking at the error logs the problem has appeared  before 2.2.4. I see the \nmessage:\n\n[Fri Nov 24 09:25:09 2006] [notice] Graceful restart requested, doing restart\n[Fri Nov 24 09:25:09 2006] [error] (9)Bad file descriptor: apr_socket_accept: \n(client socket)\n[Fri Nov 24 09:25:23 2006] [notice] Apache configured -- resuming normal \noperations\n\n\nAt this time the apache version on testing was 2.2.3 (so was on this box)\n\nRecently, after the upgrade to 2.2.4 and the fix to CVE-2007-3304 I'm also \nseeing this:\n\n[Thu Aug 23 13:00:14 2007] [notice] Graceful restart requested, doing restart\n[Thu Aug 23 13:00:14 2007] [notice] (10)No child processes: cannot send signal \n10 to pid 19020 (non-child or already dead)\n[Thu Aug 23 13:00:14 2007] [error] (9)Bad file descriptor: apr_socket_accept: \n(client socket)\n[Thu Aug 23 13:00:17 2007] [notice] Digest: generating secret for digest \nauthentication ...\n[Thu Aug 23 13:00:21 2007] [notice] Digest: done\n[Thu Aug 23 13:00:21 2007] [notice] Apache/2.2.4 (Debian) mod_ssl/2.2.4 \nOpenSSL/0.9.8e DAV/2 configured -- resuming normal operations\n\n\nI've noticed that after such unsuccessfull gracefull restart the number of the \nremaining alive children stands almost constant(about 32-33, I've got \nMinSpareServers set to 30). I've started 200 parallel requests for a big file, \nbut the number of the active children remained about 30, although I've got \nMaxClients set to 256.", "id": 107746, "time": "2007-09-05T07:50:25Z", "creator": "apache-bugzilla@krustev.net", "creation_time": "2007-09-05T07:50:25Z", "is_private": false}, {"count": 6, "tags": [], "bug_id": 42829, "text": "Confirmed on Mandriva Linux Cooker as well with 2.2.6. The proposed patch seems\nto fix this.", "id": 108065, "time": "2007-09-12T05:52:40Z", "creator": "oeriksson@mandriva.com", "creation_time": "2007-09-12T05:52:40Z", "is_private": false, "attachment_id": null}, {"count": 7, "tags": [], "bug_id": 42829, "attachment_id": null, "id": 108569, "creation_time": "2007-09-25T03:36:59Z", "time": "2007-09-25T03:36:59Z", "creator": "richlv@nakts.net", "text": "the same problem on sles 10 sp1 (using 2.2.3).\n\nwhat are the implications of this, could any problems arise if this is not \npatched ?", "is_private": false}, {"count": 8, "tags": [], "bug_id": 42829, "attachment_id": null, "id": 108649, "creation_time": "2007-09-26T09:53:23Z", "time": "2007-09-26T09:53:23Z", "creator": "nmower@verio.net", "text": "(In reply to comment #7)\n\n> what are the implications of this, could any problems arise if this is not \n> patched ?\n\nIt caused us problems in cases where a cron entry was saving off log files and\nthen issuing a graceful restart every night.  More and more processes ended up\nhung until we reached our MaxClients limit, resulting in denial of service.", "is_private": false}, {"count": 9, "tags": [], "text": "We are running sles 10 and also getting the following:\n\n[Wed Sep 26 03:00:02 2007] [notice] Graceful restart requested, doing restart\n[Wed Sep 26 03:00:02 2007] [error] (9)Bad file descriptor: apr_socket_accept:\n(client socket)\n[Wed Sep 26 03:00:02 2007] [error] (9)Bad file descriptor: apr_socket_accept:\n(client socket)\nSyntax error on line 101 of /etc/apache2/server-tuning.conf:\nInvalid command 'BrowserMatch', perhaps misspelled or defined by a module not\nincluded in the server configuration\n[Wed Sep 26 03:10:02 2007] [warn] pid file /var/run/httpd2.pid overwritten --\nUnclean shutdown of previous Apache run?\n[Wed Sep 26 03:10:02 2007] [notice] Apache/2.2.3 (Linux/SUSE) configured --\nresuming normal operations\n\nIt doesn't happen every night, very sporadically.\n\nFor the mean time, I have a script that checks to make sure apache is running,\nand if not, restart it.", "attachment_id": null, "id": 108723, "creator": "axelseaa@modevia.com", "time": "2007-09-27T07:21:01Z", "bug_id": 42829, "creation_time": "2007-09-27T07:21:01Z", "is_private": false}, {"count": 10, "attachment_id": null, "creator": "sf@sfritsch.de", "is_private": false, "id": 109453, "time": "2007-10-18T05:41:33Z", "bug_id": 42829, "creation_time": "2007-10-18T05:41:33Z", "tags": [], "text": "The patch from the bug submitter does not close the listening sockets until the\ncurrent request has been finished, therefore breaking graceful-stop behaviour.\n\nDepending on OS and used apr_pollset_poll variant, it seems that both\napr_pollset_poll() and lr->accept_func() can block if the sockets have been\nclosed in the meantime. This can be mitigated by checking for die_now before\ncalling these two functions (though a short race condition still remains).\n\nMaybe it would also be possible to change apr to not block if all listening\nsockets in the pollset are closed.\n\n"}, {"count": 11, "attachment_id": 21002, "creator": "sf@sfritsch.de", "is_private": false, "id": 109454, "time": "2007-10-18T05:43:14Z", "bug_id": 42829, "creation_time": "2007-10-18T05:43:14Z", "tags": [], "text": "Created attachment 21002\nnew patch for graceful-stop / graceful reload problem"}, {"count": 12, "tags": [], "bug_id": 42829, "is_private": false, "id": 110518, "creation_time": "2007-11-14T01:30:07Z", "time": "2007-11-14T01:30:07Z", "creator": "chip@force-elite.com", "text": "it seems this bug may be related to similar issues for the event mpm?\nPR 43359:\nhttp://issues.apache.org/bugzilla/show_bug.cgi?id=43359\n\nHas a more complicated patch...", "attachment_id": null}, {"count": 13, "tags": [], "bug_id": 42829, "is_private": false, "text": "(In reply to comment #12)\n> it seems this bug may be related to similar issues for the event mpm?\n> PR 43359:\n> http://issues.apache.org/bugzilla/show_bug.cgi?id=43359\n> \n> Has a more complicated patch...\n\nI think that's a different bug. Here, calling apr_pollset_poll and/or accept \nwhen the listening sockets have already been closed, causing a block. In \nPR43359 not continuing to process the request when the listening sockets have \nbeen closed.\n\nI don't see how the patch from PR43359 would help in prefork, as we have to \nclose the sockets in the signal handler (at least when we are in \nap_process_connection). Otherwise the sockets will only be closed after the \ncurrent request is finished, which would break graceful stop.\n\nOr am I missing something?", "id": 110605, "time": "2007-11-15T10:58:42Z", "creator": "sf@sfritsch.de", "creation_time": "2007-11-15T10:58:42Z", "attachment_id": null}, {"count": 14, "tags": [], "text": "Created attachment 21137\npatch for graceful-stop / graceful reload problem without race condition\n\nThis patch fixes the remaining race condition in the previous patch", "is_private": false, "id": 110625, "creator": "sf@sfritsch.de", "time": "2007-11-16T02:06:41Z", "bug_id": 42829, "creation_time": "2007-11-16T02:06:41Z", "attachment_id": 21137}, {"count": 15, "tags": [], "bug_id": 42829, "attachment_id": null, "id": 112490, "time": "2008-01-04T05:25:53Z", "creator": "paulhen@4hens.org", "creation_time": "2008-01-04T05:25:53Z", "is_private": false, "text": "> More and more processes ended up hung until we reached\n> our MaxClients limit, resulting in denial of service.\n\nDenial of service is also resulting from the memory \noccupied by the hung processes. This has been severe \nenough to cause to cause errors such as \n\"/libexec/ld-elf.so.1: /lib/libc.so.6: mmap of entire address space failed:\nCannot allocate memory.\"\nwhen attempting to connect via ssh. "}, {"count": 16, "tags": [], "bug_id": 42829, "attachment_id": null, "id": 112983, "creation_time": "2008-01-18T06:45:39Z", "time": "2008-01-18T06:45:39Z", "creator": "jorton@redhat.com", "text": "So, am I correct in the assumption that the root cause of this bug is a sequence\nas follows:\n\n1. child in child_main enters the while (!die_now) loop\n2. child is SIGUSR1'ed\n3. listening socket, fd N is close()d\n4. child calls accept or epoll_wait/whatever *on closed fd N*\n\nand calling accept/epoll_wait/whatever on a closed fd results in undefined\nbehaviour and hence the process may hang.", "is_private": false}, {"count": 17, "tags": [], "creator": "jorton@redhat.com", "attachment_id": null, "id": 112985, "time": "2008-01-18T07:00:21Z", "bug_id": 42829, "creation_time": "2008-01-18T07:00:21Z", "is_private": false, "text": "Presuming the assumption above is correct; Stefan's patch doesn't strictly close\nthe race since the signal could still occur e.g. between checking die_now and\nthe invocation of the accept function.\n\nTo strictly close this race, I think ap_close_listeners() is going to have to\ndup  something on to the listening fds which will guarantee that the accept/etc\nfunction call has defined behaviour.   In the single-listener case this could be\na simple hack like dup2(open(\"/dev/null\", blah), listener).  For the\nmulti-listener case, it means invalidating the pollset fd, which is\nmethod-specific and will require a new APR interface."}, {"count": 18, "attachment_id": null, "creator": "sf@sfritsch.de", "is_private": false, "id": 112987, "time": "2008-01-18T07:17:00Z", "bug_id": 42829, "creation_time": "2008-01-18T07:17:00Z", "tags": [], "text": "Joe's description of the problem in comment #16 is accurate.\n\nI think I closed the race completely, because if the signal occurs between the \ncheck for die_now and accept(), the signal handler will only set die_now and \nnot call ap_close_listeners() (because active_connection == 0). In this case \nthe ap_close_listeners() is done in the while loop just before \nap_process_connection().\n\nBut fixing it in apr, so that apr_pollset_poll, etc. have a defined behaviour \nwould probably be better.\n\nMaybe "}, {"count": 19, "tags": [], "creator": "jorton@redhat.com", "attachment_id": null, "id": 112990, "time": "2008-01-18T07:54:28Z", "bug_id": 42829, "creation_time": "2008-01-18T07:54:28Z", "is_private": false, "text": "Ah, sorry, I missed that, thanks Stefan.  The dup2 is actually simple in\nimplementation, I'll attach a patch.  I don't think it is necessary to worry\nabout invalidating the pollsets -- the pollsets will contain references *to the\nlistening fds*.  So I think that simply dup2ing onto those fds should be sufficient.\n\nI'm not sure which approach is better/safer."}, {"count": 20, "tags": [], "text": "Created attachment 21406\nclose listeners using dup2 to avoid undefined behaviour\n\nThis closes the listeners by dup2'ing a dummy socket onto them.  This should\nrestore the guarantee of defined behaviour by a call to\naccept/apr_pollset_poll/ which references this fd, as opposed to closing it\noutright.", "attachment_id": 21406, "id": 112991, "creator": "jorton@redhat.com", "time": "2008-01-18T07:57:24Z", "bug_id": 42829, "creation_time": "2008-01-18T07:57:24Z", "is_private": false}, {"count": 21, "attachment_id": null, "creator": "jorton@redhat.com", "text": "Using dup2 like this does have the advantage that it makes stop_listening()\n(more) async-signal-safe; calling apr_socket_close(), as the current code does,\nis particularly async-signal-unsafe since it modifies pool state.", "id": 112994, "time": "2008-01-18T09:14:47Z", "bug_id": 42829, "creation_time": "2008-01-18T09:14:47Z", "tags": [], "is_private": false}, {"count": 22, "tags": [], "creator": "rpluem@apache.org", "attachment_id": null, "id": 113001, "time": "2008-01-18T14:09:18Z", "bug_id": 42829, "creation_time": "2008-01-18T14:09:18Z", "is_private": false, "text": "(In reply to comment #20)\n> Created an attachment (id=21406) [edit]\n> close listeners using dup2 to avoid undefined behaviour\n> \n> This closes the listeners by dup2'ing a dummy socket onto them.  This should\n> restore the guarantee of defined behaviour by a call to\n> accept/apr_pollset_poll/ which references this fd, as opposed to closing it\n> outright.\n\nHm, and apr_pollset_poll called on the dummy_listener with APR_POLLIN as event\nfor which we are looking for returns immediately?\n"}, {"count": 23, "tags": [], "bug_id": 42829, "text": "Taking this up dev@httpd.\n\nhttp://marc.info/?l=apache-httpd-dev&m=120069757111682&w=2", "id": 113002, "time": "2008-01-18T15:10:58Z", "creator": "jorton@redhat.com", "creation_time": "2008-01-18T15:10:58Z", "is_private": false, "attachment_id": null}, {"count": 24, "tags": [], "text": "I don't know if this is related or no. I have a similar problem with apache 2.2.4-3ubuntu0.1 of latest ubuntu gutsy.\n\nApache prefork uses a \"internal dummy connection\" to tell childs they should die. When apache emits that request to a child (too many idle workers, MaxRequestsPerChild reached...), the children correctly dies (is not longer a proc in the system), but the apache main process still thinks it's \"Gracefully finishing\".\n\nServer status page shows processes on this state in a number increasing until Maxclients is reached and apache stops answering connections, so it's a very buig problem for me.\n\nIt can be forced on my system easily issuing a /etc/init.d/apache2 reload. With that I get a lot of connections in the 'G' state (finished but the main apache still thinks they are finishing).\n\nIt's on a xen virtual machine, maybe it's a problem related to this.", "is_private": false, "id": 115732, "creator": "bishillo@gmail.com", "time": "2008-04-21T05:36:13Z", "bug_id": 42829, "creation_time": "2008-04-21T05:36:13Z", "attachment_id": null}, {"count": 25, "tags": [], "bug_id": 42829, "attachment_id": null, "id": 115755, "time": "2008-04-21T13:44:58Z", "creator": "sf@sfritsch.de", "creation_time": "2008-04-21T13:44:58Z", "is_private": false, "text": "(In reply to comment #24)\n> I don't know if this is related or no. I have a similar problem with apache\n> 2.2.4-3ubuntu0.1 of latest ubuntu gutsy.\n\nYes this is the same problem. See\n\nhttps://bugs.launchpad.net/ubuntu/+source/apache2/+bug/174805\n\nand possibly add a comment there to get the fix backported to gutsy."}, {"count": 26, "tags": [], "bug_id": 42829, "attachment_id": null, "id": 120140, "time": "2008-08-27T06:12:58Z", "creator": "wegmann@psi.co.at", "creation_time": "2008-08-27T06:12:58Z", "is_private": false, "text": "I can confirm this bug for Apache 2.2.6 prefork on Solaris 10. \nHere is a trace of an unsuccessful SIGUSR1 call:\n\n    Received signal #16, SIGUSR1, in fcntl() [caught]\n      siginfo: SIGUSR1 pid=2185 uid=2002\nfcntl(20, F_SETLKW, 0xFFFFFFFF7D925510)         Err#4 EINTR\nlwp_sigmask(SIG_SETMASK, 0x00008000, 0x00000000) = 0xFFBFFEFF [0x0000FFFF]\nclose(7)                                        = 0\nclose(5)                                        = 0\nclose(3)                                        = 0\nsetcontext(0xFFFFFFFF7FFFE210)\nfcntl(20, F_SETLKW, 0xFFFFFFFF7D925510) (sleeping...)\nfcntl(20, F_SETLKW, 0xFFFFFFFF7D925510)         = 0\nport_associate(22, 4, 0xFFFFFFFFFFFFFFFF, 0x00000001, 0x10039FE68) Err#81 EBADFD\nport_getn(22, 0x10039FD40, 3, 1, 0x00000000) (sleeping...)\n\n    Received signal #16, SIGUSR1, in port_getn() [caught]\n      siginfo: SIGUSR1 pid=2185 uid=2002\nport_getn(22, 0x10039FD40, 3, 1, 0x00000000)    Err#4 EINTR\nlwp_sigmask(SIG_SETMASK, 0x00008000, 0x00000000) = 0xFFBFFEFF [0x0000FFFF]\nclose(-1)                                       Err#9 EBADF\nclose(-1)                                       Err#9 EBADF\nclose(-1)                                       Err#9 EBADF\nsetcontext(0xFFFFFFFF7FFFE360)\nwrite(13, \" [ F r i   A u g   2 2  \".., 104)    = 104\nclose(22)                                       = 0\nclose(11)                                       = 0\nclose(10)                                       = 0\n_exit(1)\n\nerror-log:\n[Fri Aug 22 15:08:04 2008] [error] (70007)The timeout specified has expired: apr_pollset_poll: (listen)\n\nEven after sending a 2nd USR1-signal the child doesn't exit:\n\n 3.6337 read(0, 0xFFFFFFFF7FFFEB78, 512)                = 0\n 3.6338 close(0)                                        = 0\n 3.6339 read(10, 0xFFFFFFFF7FFFED7F, 1)                 Err#11 EAGAIN\n 4.4083     Received signal #16, SIGUSR1, in fcntl() [caught]\n 4.4086 fcntl(20, F_SETLKW, 0xFFFFFFFF7D925510)         Err#4 EINTR\n 4.4087 lwp_sigmask(SIG_SETMASK, 0x00008000, 0x00000000) = 0xFFBFFEFF [0x0000FFFF]\n 4.4088 close(7)                                        = 0\n 4.4089 close(5)                                        = 0\n 4.4089 close(3)                                        = 0\n 4.4090 setcontext(0xFFFFFFFF7FFFE2F0)\nfcntl(20, F_SETLKW, 0xFFFFFFFF7D925510) (sleeping...)\n38.5953     Received signal #16, SIGUSR1, in fcntl() [caught]\n38.5955 fcntl(20, F_SETLKW, 0xFFFFFFFF7D925510)         Err#4 EINTR\n38.5956 lwp_sigmask(SIG_SETMASK, 0x00008000, 0x00000000) = 0xFFBFFEFF [0x0000FFFF]\n38.5957 close(-1)                                       Err#9 EBADF\n38.5957 close(-1)                                       Err#9 EBADF\n38.5958 close(-1)                                       Err#9 EBADF\n38.5969 setcontext(0xFFFFFFFF7FFFE2F0)\nfcntl(20, F_SETLKW, 0xFFFFFFFF7D925510) (sleeping...)\n56.4129     Received signal #16, SIGUSR1, in fcntl() [caught]\n56.4130 fcntl(20, F_SETLKW, 0xFFFFFFFF7D925510)         Err#4 EINTR\n56.4131 lwp_sigmask(SIG_SETMASK, 0x00008000, 0x00000000) = 0xFFBFFEFF [0x0000FFFF]\n56.4132 close(-1)                                       Err#9 EBADF\n56.4133 close(-1)                                       Err#9 EBADF\n56.4133 close(-1)                                       Err#9 EBADF\n56.4134 setcontext(0xFFFFFFFF7FFFE2F0)\n57.3615     Received signal #16, SIGUSR1, in fcntl() [caught]\n57.3617 fcntl(20, F_SETLKW, 0xFFFFFFFF7D925510)         Err#4 EINTR\n57.3618 lwp_sigmask(SIG_SETMASK, 0x00008000, 0x00000000) = 0xFFBFFEFF [0x0000FFFF]\n57.3618 close(-1)                                       Err#9 EBADF\n57.3619 close(-1)                                       Err#9 EBADF\n57.3619 close(-1)                                       Err#9 EBADF\n57.3620 setcontext(0xFFFFFFFF7FFFE2F0)\n57.8297     Received signal #16, SIGUSR1, in fcntl() [caught]\n57.8298 fcntl(20, F_SETLKW, 0xFFFFFFFF7D925510)         Err#4 EINTR\n57.8299 lwp_sigmask(SIG_SETMASK, 0x00008000, 0x00000000) = 0xFFBFFEFF [0x0000FFFF]\n57.8301 close(-1)                                       Err#9 EBADF\n57.8301 close(-1)                                       Err#9 EBADF\n57.8302 close(-1)                                       Err#9 EBADF\n57.8302 setcontext(0xFFFFFFFF7FFFE2F0)\n\nThis is what a successful USR1 handling looks like:\n\n    Received signal #16, SIGUSR1, in pollsys() [caught]\npollsys(0xFFFFFFFF7FFFE928, 1, 0xFFFFFFFF7FFFE860, 0x00000000) Err#4 EINTR\nlwp_sigmask(SIG_SETMASK, 0x00008000, 0x00000000) = 0xFFBFFEFF [0x0000FFFF]\nclose(7)                                        = 0\nclose(5)                                        = 0\nclose(3)                                        = 0\nsetcontext(0xFFFFFFFF7FFFDF50)\npollsys(0xFFFFFFFF7FFFE928, 1, 0xFFFFFFFF7FFFE860, 0x00000000) = 1\nread(0, 0xFFFFFFFF7FFFEAB8, 512)                = 0\nclose(0)                                        = 0\nread(10, 0xFFFFFFFF7FFFECBF, 1)                 Err#11 EAGAIN\nclose(22)                                       = 0\nclose(11)                                       = 0\nclose(10)                                       = 0\nmmap(0x00000000, 8192, PROT_READ|PROT_WRITE|PROT_EXEC, MAP_PRIVATE|MAP_ANON, -1, 0) = 0xFFFFFFFF76F00000\nmunmap(0xFFFFFFFF76F00000, 8192)                = 0\n_exit(0)\n\n"}, {"count": 27, "tags": [], "bug_id": 42829, "is_private": false, "text": "seems this bug still applies in 2.2.9 for graceful stop, can someone confirm?\n\n", "id": 120142, "time": "2008-08-27T08:57:58Z", "creator": "uhlar@fantomas.sk", "creation_time": "2008-08-27T08:57:58Z", "attachment_id": null}, {"count": 28, "attachment_id": null, "creator": "uhlar@fantomas.sk", "text": "Seems that this problem only appears if I have more than one socked opened by listen directive...", "id": 120185, "time": "2008-08-28T09:53:48Z", "bug_id": 42829, "creation_time": "2008-08-28T09:53:48Z", "tags": [], "is_private": false}, {"count": 29, "attachment_id": null, "creator": "ajunne@gmail.com", "is_private": false, "id": 120268, "time": "2008-09-02T00:37:25Z", "bug_id": 42829, "creation_time": "2008-09-02T00:37:25Z", "tags": [], "text": "(In reply to comment #27)\n> seems this bug still applies in 2.2.9 for graceful stop, can someone confirm?\n> \n\nYes, I can confirm. We currently have the same problem on 2.2.9 on Solaris 10 in production. I've also tested Joe's patch and that did not solve the issue for me. I'm not going to give Stephan's patch a try."}, {"count": 30, "tags": [], "creator": "drew@thewithers.org", "attachment_id": null, "id": 120289, "time": "2008-09-02T09:11:43Z", "bug_id": 42829, "creation_time": "2008-09-02T09:11:43Z", "is_private": false, "text": "Joe's didn't work for me either, but Stefans' seemed to work. If nothing else it made the problem much less apparent."}, {"count": 31, "tags": [], "bug_id": 42829, "attachment_id": null, "is_private": false, "id": 120333, "time": "2008-09-03T23:57:24Z", "creator": "ajunne@gmail.com", "creation_time": "2008-09-03T23:57:24Z", "text": "(In reply to comment #30)\n> Joe's didn't work for me either, but Stefans' seemed to work. If nothing else\n> it made the problem much less apparent.\n\nYes, I can confirm this. We have deployed Stefan Fritsch's patch in our test environment, and the issue seems to be gone now. I will deploy to production as soon as possible, but it would be a good idea to incorporate this patch into the official source."}, {"count": 32, "attachment_id": null, "creator": "ajunne@gmail.com", "is_private": false, "id": 121078, "time": "2008-09-30T02:56:02Z", "bug_id": 42829, "creation_time": "2008-09-30T02:56:02Z", "tags": [], "text": "Stefan Fritsch's latest patch has now been running in our production environment for quite some time, and all seems to be well. The issue is solved, and we can do graceful restarts again.\n\nI vote for this patch to be checked in the official source."}, {"count": 33, "tags": [], "bug_id": 42829, "attachment_id": null, "text": "I've just upgraded our test-environment to Apache 2.2.10, and included Stefan's patch that used to work fine for me in version 2.2.9. However, even with this patch the issue is now still present in 2.2.10.\n\nCan anyone have a look, or will I be forced to start using a different threading model?", "id": 122129, "time": "2008-11-03T03:06:43Z", "creator": "ajunne@gmail.com", "creation_time": "2008-11-03T03:06:43Z", "is_private": false}, {"count": 34, "attachment_id": null, "creator": "sf@sfritsch.de", "is_private": false, "id": 122151, "time": "2008-11-03T12:02:20Z", "bug_id": 42829, "creation_time": "2008-11-03T12:02:20Z", "tags": [], "text": "(In reply to comment #33)\n> I've just upgraded our test-environment to Apache 2.2.10, and included Stefan's\n> patch that used to work fine for me in version 2.2.9. However, even with this\n> patch the issue is now still present in 2.2.10.\n\nNothing has changed in the relevant code in apache 2.2.10. But there was a change in apr that might have something to do with it. Can you get a stacktrace of a hanging process (should be possible with pstack)?\n"}, {"count": 35, "tags": [], "text": "Created attachment 22822\ncombination of the two patches above (21137 and  21406)\n\nYou could also try if applying both patches helps.", "is_private": false, "id": 122152, "creator": "sf@sfritsch.de", "time": "2008-11-03T12:05:55Z", "bug_id": 42829, "creation_time": "2008-11-03T12:05:55Z", "attachment_id": 22822}, {"count": 36, "tags": [], "text": "For the record: I don't see any problems under Linux using 2.2.10 with the 2007-11-16 patch.", "attachment_id": null, "id": 122153, "creator": "sf@sfritsch.de", "time": "2008-11-03T12:36:18Z", "bug_id": 42829, "creation_time": "2008-11-03T12:36:18Z", "is_private": false}, {"count": 37, "tags": [], "bug_id": 42829, "text": "Comment on attachment 21406\nclose listeners using dup2 to avoid undefined behaviour\n\nMy patch won't help solve the problem, so there is no use anybody trying it; as explained in the thread on dev@httpd, the listening fds are removed from the epoll set on closure by the kernel, dup2'ing onto the fd is equivalent to closure, so the behaviour is equivalent.", "id": 122203, "time": "2008-11-05T03:29:14Z", "creator": "jorton@redhat.com", "creation_time": "2008-11-05T03:29:14Z", "is_private": false, "attachment_id": 21406}, {"count": 38, "tags": [], "creator": "sf@sfritsch.de", "attachment_id": null, "id": 122223, "time": "2008-11-05T11:54:42Z", "bug_id": 42829, "creation_time": "2008-11-05T11:54:42Z", "is_private": false, "text": "(In reply to comment #37)\n> (From update of attachment 21406 [details])\n> My patch won't help solve the problem, so there is no use anybody trying it; as\n> explained in the thread on dev@httpd, the listening fds are removed from the\n> epoll set on closure by the kernel, dup2'ing onto the fd is equivalent to\n> closure, so the behaviour is equivalent.\n\nThis is true for epoll, but IIRC solaris 10 uses port_create and Cedric uses Solaris 10. I haven't checked if the semantics are the same as for epoll."}, {"count": 39, "tags": [], "text": "On a Solaris 10 machine with 2.2.10 with the 2007-11-16 patch, I didn't see any problems.", "is_private": false, "id": 122293, "creator": "sf@sfritsch.de", "time": "2008-11-07T10:21:45Z", "bug_id": 42829, "creation_time": "2008-11-07T10:21:45Z", "attachment_id": null}, {"count": 40, "tags": [], "bug_id": 42829, "text": "A proposed fix was committed to trunk (http://svn.apache.org/viewvc?rev=732451&view=rev).  Is anyone able to try it out?  I've tested it successfully with graceful stop/restart on OpenSolaris 2008.11.\n", "id": 123838, "attachment_id": null, "creator": "trawick@apache.org", "creation_time": "2009-01-07T12:03:12Z", "time": "2009-01-07T12:03:12Z", "is_private": false}, {"count": 41, "tags": [], "bug_id": 42829, "text": "(In reply to comment #40)\n> A proposed fix was committed to trunk\n> (http://svn.apache.org/viewvc?rev=732451&view=rev).  Is anyone able to try it\n> out?  I've tested it successfully with graceful stop/restart on OpenSolaris\n> 2008.11.\n> \n\nSeems to work under Linux, too.", "id": 123938, "time": "2009-01-11T08:50:41Z", "creator": "sf@sfritsch.de", "creation_time": "2009-01-11T08:50:41Z", "is_private": false, "attachment_id": null}, {"count": 42, "tags": [], "text": "CC myself on FreeBSD related bugs", "is_private": false, "id": 124158, "creator": "pgollucci@apache.org", "time": "2009-01-18T16:19:14Z", "bug_id": 42829, "creation_time": "2009-01-18T16:19:14Z", "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 42829, "is_private": false, "count": 43, "id": 124836, "time": "2009-02-13T05:51:45Z", "creator": "uhlar@fantomas.sk", "creation_time": "2009-02-13T05:51:45Z", "text": "now what should I apply to 2.2.11? it rejectsthe one from trunk"}, {"count": 44, "tags": [], "bug_id": 42829, "is_private": false, "id": 124837, "creation_time": "2009-02-13T05:56:55Z", "time": "2009-02-13T05:56:55Z", "creator": "trawick@apache.org", "text": "This is the patch which was applied to the 2.2.x branch:\n\nhttp://svn.apache.org/viewvc/httpd/httpd/branches/2.2.x/server/mpm/prefork/prefork.c?r1=739608&r2=739607&pathrev=739608\n", "attachment_id": null}, {"count": 45, "tags": [], "creator": "dan@cpanel.net", "attachment_id": null, "id": 125123, "time": "2009-02-24T06:46:36Z", "bug_id": 42829, "creation_time": "2009-02-24T06:46:36Z", "is_private": false, "text": "WIll this be in 2.2.12 ?\n\nIs there an ETA on when 2.2.12 will arrive?\n\nthanks!"}, {"attachment_id": null, "tags": [], "bug_id": 42829, "text": ">WIll this be in 2.2.12 ?\nyes\n>Is there an ETA on when 2.2.12 will arrive?\nno ETA available at present", "count": 46, "id": 125127, "time": "2009-02-24T07:36:08Z", "creator": "trawick@apache.org", "creation_time": "2009-02-24T07:36:08Z", "is_private": false}, {"count": 47, "tags": [], "text": " for information, same problem here ( www-servers/apache-2.2.11-r2 gentoo hardened )", "is_private": false, "id": 130732, "creator": "apache.org@ww7.be", "time": "2009-09-28T19:47:26Z", "bug_id": 42829, "creation_time": "2009-09-28T19:47:26Z", "attachment_id": null}, {"count": 48, "tags": [], "bug_id": 42829, "is_private": false, "text": "FYI, also an issue on SLES 11 64 bit. graceful-stop leaves threads hanging. the sockets appear to have been closed.\n\n/usr/sbin/httpd2 -V\n\nServer version: Apache/2.2.10 (Linux/SUSE)\nServer built:   Feb 23 2009 21:08:14\nServer's Module Magic Number: 20051115:18\nServer loaded:  APR 1.3.3, APR-Util 1.3.4\nCompiled using: APR 1.3.3, APR-Util 1.3.4\nArchitecture:   64-bit\nServer MPM:     Prefork\n  threaded:     no\n    forked:     yes (variable process count)\nServer compiled with....\n -D APACHE_MPM_DIR=\"server/mpm/prefork\"\n -D APR_HAS_SENDFILE\n -D APR_HAS_MMAP\n -D APR_HAVE_IPV6 (IPv4-mapped addresses enabled)\n -D APR_USE_SYSVSEM_SERIALIZE\n -D APR_USE_PTHREAD_SERIALIZE\n -D SINGLE_LISTEN_UNSERIALIZED_ACCEPT\n -D APR_HAS_OTHER_CHILD\n -D AP_HAVE_RELIABLE_PIPED_LOGS\n -D DYNAMIC_MODULE_LIMIT=128\n -D HTTPD_ROOT=\"/srv/www\"\n -D SUEXEC_BIN=\"/usr/sbin/suexec2\"\n -D DEFAULT_PIDLOG=\"/var/run/httpd2.pid\"\n -D DEFAULT_SCOREBOARD=\"logs/apache_runtime_status\"\n -D DEFAULT_LOCKFILE=\"/var/run/accept.lock\"\n -D DEFAULT_ERRORLOG=\"/var/log/apache2/err", "id": 135478, "time": "2010-03-19T18:03:37Z", "creator": "jon@isoc.net", "creation_time": "2010-03-19T18:03:37Z", "attachment_id": null}, {"count": 49, "tags": [], "bug_id": 42829, "attachment_id": null, "id": 135492, "time": "2010-03-21T22:47:33Z", "creator": "trawick@apache.org", "creation_time": "2010-03-21T22:47:33Z", "is_private": false, "text": "Jon, I expect that graceful-stop issues aren't related to this bug.  Plz open a new bug and post backtraces of some hanging threads."}, {"count": 50, "attachment_id": null, "creator": "bioyavuz@gmail.com", "is_private": false, "id": 142065, "time": "2010-11-28T03:44:01Z", "bug_id": 42829, "creation_time": "2010-11-28T03:44:01Z", "tags": [], "text": "Hi all,\n\nI think this is not related with normal use of Apache and formally coded modules.\n\nI have 3 servers running 3 different Slackware servers.  Each is forced by cron, for a graceful restart at certain times of the day.\n\nThis morning, on one of my servers I noticed \n[Sun Nov 28 06:10:01 2010] [error] (9)Bad file descriptor: apr_socket_accept: (client socket) problem.\n\nAs I searched, I found this page. I read all the comments and info provided here. Then, I checked my other two servers. But the other two are not having the same problem.\n\nI just wanted to drop a note for you, about the difference between erroneous server and the others. So that it might be helpful in finding your problem.\n\nThe one which started producing the mentioned error is my development server. Where I am developing a module on handling requests. \n\nIn the module I am intensively playig with pools and tables. I think the error started on my server after I coded, late in last night, some lines with apr_table_set, apr_table_unset, apr_table_merge etc. I will concentrate on this point for locating the problem.\n\nIf you're having this error, try to disable your modules one by one and give a graceful restart. Probably you have an offending module which causes this.\n\nFollowing are the details of my servers. First one is my development server where I am having the error. Please notice that the first and the second are exactly the same, but they are running on different boxes (even on different countries)\n\n\nServer version: Apache/2.2.15 (Unix)\nServer built:   Mar  8 2010 13:36:25\nServer's Module Magic Number: 20051115:24\nServer loaded:  APR 1.3.9, APR-Util 1.3.9\nCompiled using: APR 1.3.9, APR-Util 1.3.9\nArchitecture:   64-bit\nServer MPM:     Prefork\n  threaded:     no\n    forked:     yes (variable process count)\nServer compiled with....\n -D APACHE_MPM_DIR=\"server/mpm/prefork\"\n -D APR_HAS_SENDFILE\n -D APR_HAS_MMAP\n -D APR_HAVE_IPV6 (IPv4-mapped addresses enabled)\n -D APR_USE_SYSVSEM_SERIALIZE\n -D APR_USE_PTHREAD_SERIALIZE\n -D SINGLE_LISTEN_UNSERIALIZED_ACCEPT\n -D APR_HAS_OTHER_CHILD\n -D AP_HAVE_RELIABLE_PIPED_LOGS\n -D DYNAMIC_MODULE_LIMIT=128\n -D HTTPD_ROOT=\"/usr\"\n -D SUEXEC_BIN=\"/usr/bin/suexec\"\n -D DEFAULT_PIDLOG=\"/var/run/httpd/httpd.pid\"\n -D DEFAULT_SCOREBOARD=\"logs/apache_runtime_status\"\n -D DEFAULT_LOCKFILE=\"/var/run/httpd/accept.lock\"\n -D DEFAULT_ERRORLOG=\"logs/error_log\"\n -D AP_TYPES_CONFIG_FILE=\"/etc/httpd/mime.types\"\n -D SERVER_CONFIG_FILE=\"/etc/httpd/httpd.conf\"\n\nFollowing servers having no error:\nServer version: Apache/2.2.15 (Unix)\nServer built:   Mar  8 2010 13:36:25\nServer's Module Magic Number: 20051115:24\nServer loaded:  APR 1.3.9, APR-Util 1.3.9\nCompiled using: APR 1.3.9, APR-Util 1.3.9\nArchitecture:   64-bit\nServer MPM:     Prefork\n  threaded:     no\n    forked:     yes (variable process count)\nServer compiled with....\n -D APACHE_MPM_DIR=\"server/mpm/prefork\"\n -D APR_HAS_SENDFILE\n -D APR_HAS_MMAP\n -D APR_HAVE_IPV6 (IPv4-mapped addresses enabled)\n -D APR_USE_SYSVSEM_SERIALIZE\n -D APR_USE_PTHREAD_SERIALIZE\n -D SINGLE_LISTEN_UNSERIALIZED_ACCEPT\n -D APR_HAS_OTHER_CHILD\n -D AP_HAVE_RELIABLE_PIPED_LOGS\n -D DYNAMIC_MODULE_LIMIT=128\n -D HTTPD_ROOT=\"/usr\"\n -D SUEXEC_BIN=\"/usr/bin/suexec\"\n -D DEFAULT_PIDLOG=\"/var/run/httpd/httpd.pid\"\n -D DEFAULT_SCOREBOARD=\"logs/apache_runtime_status\"\n -D DEFAULT_LOCKFILE=\"/var/run/httpd/accept.lock\"\n -D DEFAULT_ERRORLOG=\"logs/error_log\"\n -D AP_TYPES_CONFIG_FILE=\"/etc/httpd/mime.types\"\n -D SERVER_CONFIG_FILE=\"/etc/httpd/httpd.conf\"\n\nServer version: Apache/2.2.13 (Unix)\nServer built:   Aug 10 2009 14:15:43\nServer's Module Magic Number: 20051115:23\nServer loaded:  APR 1.3.8, APR-Util 1.3.9\nCompiled using: APR 1.3.8, APR-Util 1.3.9\nArchitecture:   32-bit\nServer MPM:     Prefork\n  threaded:     no\n    forked:     yes (variable process count)\nServer compiled with....\n -D APACHE_MPM_DIR=\"server/mpm/prefork\"\n -D APR_HAS_SENDFILE\n -D APR_HAS_MMAP\n -D APR_HAVE_IPV6 (IPv4-mapped addresses enabled)\n -D APR_USE_SYSVSEM_SERIALIZE\n -D APR_USE_PTHREAD_SERIALIZE\n -D SINGLE_LISTEN_UNSERIALIZED_ACCEPT\n -D APR_HAS_OTHER_CHILD\n -D AP_HAVE_RELIABLE_PIPED_LOGS\n -D DYNAMIC_MODULE_LIMIT=128\n -D HTTPD_ROOT=\"/usr\"\n -D SUEXEC_BIN=\"/usr/bin/suexec\"\n -D DEFAULT_PIDLOG=\"/var/run/httpd/httpd.pid\"\n -D DEFAULT_SCOREBOARD=\"logs/apache_runtime_status\"\n -D DEFAULT_LOCKFILE=\"/var/run/httpd/accept.lock\"\n -D DEFAULT_ERRORLOG=\"logs/error_log\"\n -D AP_TYPES_CONFIG_FILE=\"/etc/httpd/mime.types\"\n -D SERVER_CONFIG_FILE=\"/etc/httpd/httpd.conf\"\n\n\nGood luck,\nYavuz Darendelioglu\n(aka bioyavuz)"}, {"count": 51, "attachment_id": null, "creator": "godkillthemall@gmail.com", "text": "# /usr/sbin/httpd -v\nServer version: Apache/2.2.17 (Unix)\nServer built:   Oct 19 2010 16:27:47\n\nStill having exactly same problem (triggering graceful restart from command line one by one causes segmentation fault in approximately 3 minutes). I am using Plesk together with Zend Server, and it seems that they use this scenario (multiple graceful restarts) for log rotation or something and my web server is crashing 1-2 times a week.\n\nLooks like no patch saved in 2.2.17 or it is not working now.", "id": 142946, "time": "2010-12-25T08:19:28Z", "bug_id": 42829, "creation_time": "2010-12-25T08:19:28Z", "tags": [], "is_private": false}, {"count": 52, "tags": [], "bug_id": 42829, "attachment_id": null, "text": "My platform is CentOS 5.5.", "id": 142947, "time": "2010-12-25T08:20:37Z", "creator": "godkillthemall@gmail.com", "creation_time": "2010-12-25T08:20:37Z", "is_private": false}, {"count": 53, "tags": [], "creator": "sf@sfritsch.de", "attachment_id": null, "id": 142959, "time": "2010-12-27T17:00:10Z", "bug_id": 42829, "creation_time": "2010-12-27T17:00:10Z", "is_private": false, "text": "(In reply to comment #51)\n> Still having exactly same problem (triggering graceful restart from command\n> line one by one causes segmentation fault in approximately 3 minutes).\n\nThis is not the same problem. This bug is about hanging processes, not crashes. Please open a new bug report for your segfaults and provide backtraces. See the section \"Debugging intermittent crashes\" at http://httpd.apache.org/dev/debugging.html"}, {"count": 54, "tags": [], "text": "I am still encountering this problem on Gentoo using Apache 2.2.17 with the itk mpm. Was it really resolved?", "is_private": false, "id": 147206, "creator": "milosivanovic@orcon.net.nz", "time": "2011-06-16T17:28:13Z", "bug_id": 42829, "creation_time": "2011-06-16T17:28:13Z", "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 42829, "text": "Sorry I should have reinforced the problem more precisely - this is what is being written to /var/log/apache2/error_log when I run /etc/init.d/apache2 reload:\n\n\n[Fri Jun 17 04:59:23 2011] [notice] Graceful restart requested, doing restart\n[Fri Jun 17 04:59:23 2011] [error] (9)Bad file descriptor: apr_socket_accept: (client socket)\n[Fri Jun 17 04:59:25 2011] [notice] Apache/2.2.17 (Unix) mod_ssl/2.2.17 OpenSSL/1.0.0d configured -- resuming normal operations\n[Fri Jun 17 05:01:20 2011] [notice] Graceful restart requested, doing restart\n[Fri Jun 17 05:01:20 2011] [error] (9)Bad file descriptor: apr_socket_accept: (client socket)\n[Fri Jun 17 05:01:22 2011] [notice] Apache/2.2.17 (Unix) mod_ssl/2.2.17 OpenSSL/1.0.0d configured -- resuming normal operations\n\nThe error does not appear when I do a full Apache restart. I believe the error began as soon as I started using the MPM.", "count": 55, "id": 147207, "time": "2011-06-16T17:34:03Z", "creator": "milosivanovic@orcon.net.nz", "creation_time": "2011-06-16T17:34:03Z", "is_private": false}, {"count": 56, "tags": [], "bug_id": 42829, "attachment_id": null, "text": "itk-mpm user:\nThis bug is tracking something specific to the prefork MPM.  Report elsewhere if you're using the itk-mpm.", "id": 147208, "time": "2011-06-16T17:44:11Z", "creator": "trawick@apache.org", "creation_time": "2011-06-16T17:44:11Z", "is_private": false}, {"count": 57, "tags": [], "bug_id": 42829, "attachment_id": null, "id": 147210, "creation_time": "2011-06-16T18:40:52Z", "time": "2011-06-16T18:40:52Z", "creator": "sf@sfritsch.de", "text": "(In reply to comment #54)\n> I am still encountering this problem on Gentoo using Apache 2.2.17 with the itk\n> mpm. Was it really resolved?\n\nIf you use mpm-itk 2.2.17-01 or newer, then it should be resolved there, too.\n\nIn any case, I am really confident that this bug is fixed. If anyone encounters a similar issue with 2.2.19, he should open a new PR.", "is_private": false}, {"count": 58, "tags": [], "text": "I just thought I would add something I noticed.\n\nI have Sparc Solaris 10 and I had noticed the graceful restart resulting in G's in server-status never going away with apache 2.2.13 years ago, compiled with SUN cc 12.1 and preinstalled ssl from /usr/sfw.  I installed 2.2.14 and the problem went away.  If you do not implement ssl there is no problem.\n\nThis week I set up a clean, patched Solaris 10, with httpd 2.2.18, compiled using gcc and openssl 0.9.8R in /usr/local/ssl.  I saw that the problem returned, G in server-status.  I installed 2.2.19 the same way and the problem remained.  \n\nI returned to 2.2.14, configured and compiled the same way as 18 and 19, and the problem is NOT there.  \n\nI\"m just an admin and using prefork but I thought this might help someone figure out why.\n\nThanks", "attachment_id": null, "id": 148326, "creator": "cross@hccs.com", "time": "2011-08-01T19:26:54Z", "bug_id": 42829, "creation_time": "2011-08-01T19:26:54Z", "is_private": false}, {"count": 59, "tags": [], "bug_id": 42829, "attachment_id": null, "id": 148404, "time": "2011-08-05T13:04:36Z", "creator": "marvin0815@googlemail.com", "creation_time": "2011-08-05T13:04:36Z", "is_private": false, "text": "(In reply to comment #58)\n> I just thought I would add something I noticed.\n> \n> I have Sparc Solaris 10 and I had noticed the graceful restart resulting in G's\n> in server-status never going away with apache 2.2.13 years ago, compiled with\n> SUN cc 12.1 and preinstalled ssl from /usr/sfw.  I installed 2.2.14 and the\n> problem went away.  If you do not implement ssl there is no problem.\n> \nIn my opinion SSL is not the Problem, this also happens with multiple listeners (80, 81 e.g. loadbalancer terminated SSL), also stated somewhere above. But I still confirm this, possibly only on Solaris 10 (x86 or sparc does not matter). I will have a closer look on 2.2.14 to mayby stick with that version. Besides, FreeBSD and all tested Linux flavors are doing fine.\n\n> \n> I\"m just an admin and using prefork but I thought this might help someone\n> figure out why.\n> \nMe too, so I'm not much of a help.\n\nThanks\nOliver"}, {"attachment_id": null, "tags": [], "bug_id": 42829, "text": "(In reply to comment #59)\n> I will have a closer look on 2.2.14 to mayby stick with that version. Besides,\n> FreeBSD and all tested Linux flavors are doing fine.\n\nPR 42829 is fixed. You are experiencing a different issue which is tracked in PR 50261, which also has a work-around. Please only add comments to that new PR.", "count": 60, "id": 148436, "time": "2011-08-06T11:43:39Z", "creator": "sf@sfritsch.de", "creation_time": "2011-08-06T11:43:39Z", "is_private": false}, {"count": 61, "tags": [], "bug_id": 42829, "is_private": false, "id": 148705, "creation_time": "2011-08-19T14:27:31Z", "time": "2011-08-19T14:27:31Z", "creator": "cross@hccs.com", "text": "Is the patch for fixing the apache-status showing G the attachment \"patch for graceful-stop / graceful reload problem without race condition\"?  If so, why wasn't it implemented in the subsequent releases, except 14?  I experienced the problem in 18 and 19.\n\nDoes it work for Solaris please, because all that is mentioned is linux?\n\nThank you for any information.", "attachment_id": null}, {"count": 62, "tags": [], "text": "(In reply to comment #61)", "attachment_id": null, "id": 148708, "creator": "cross@hccs.com", "time": "2011-08-19T15:16:44Z", "bug_id": 42829, "creation_time": "2011-08-19T15:16:44Z", "is_private": false}, {"count": 63, "tags": [], "bug_id": 42829, "attachment_id": null, "id": 152010, "creation_time": "2011-12-06T18:11:55Z", "time": "2011-12-06T18:11:55Z", "creator": "paul@silevitch.com", "text": "Everytime I do a graceful-stop, I see the following in the error log:\n\n[Fri Dec 02 19:02:22 2011] [notice] caught SIGWINCH, shutting down gracefully\n[Fri Dec 02 19:02:22 2011] [error] (9)Bad file descriptor: apr_socket_accept: (client socket)\n\nI'm using apache 2.2.21; prefork MPM on linux.  After reading through this thread (especially Joe's comment - https://issues.apache.org/bugzilla/show_bug.cgi?id=42829#c16).  I figured out that it is a race condition where SIGUSR1 is called after the child has done \"else if (die_now) {\" and before the child has done \"status = lr->accept_func(&csd, lr, ptrans);\".\n\nThe following patch fixed the problem for me:\n\n@@ -638,6 +638,14 @@\n                  * ### than POLLIN\n                  */\n                 lr = pdesc[last_poll_idx++].client_data;\n+\n+               if (die_now) {\n+                       /* In graceful stop/restart; drop the mutex\n+                        * and terminate the child. */\n+                       SAFE_ACCEPT(accept_mutex_off());\n+                       clean_child_exit(0);\n+               }\n+\n                 goto got_fd;\n             }\n         }", "is_private": false}, {"count": 64, "tags": [], "bug_id": 42829, "text": "Hi,\n\nCan paul@silvitch.com specify which source file he included the patch into please?  Thank you very very much.  \n\nI have found this doesn't occur on my linux servers running Centos and apache 2.2.15 but solaris has the problem on that same version.  It doesn't have the problem on 2.2.14 on Solaris.  Also, it only happens when SSL is compiled in on solaris.\n\nThanks for any help.", "id": 152429, "time": "2011-12-27T21:41:28Z", "creator": "cross@hccs.com", "creation_time": "2011-12-27T21:41:28Z", "is_private": false, "attachment_id": null}]