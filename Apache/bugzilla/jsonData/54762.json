[{"count": 0, "tags": [], "bug_id": 54762, "text": "Created attachment 30113\nUse Java 5 to run this ant file for a demonstration\n\nUsing ant 1.9.0 jar Java 5 fails to execute a jar file with the manifest attribute. Note: The generated jar works with Java 6 and 7.\n\nThe problem is demonstrated when the manifest attribute is used with the jar task.\n\nI have attached a sample ant build.xml file to be used with Java 5 to view the failure.", "id": 166210, "time": "2013-03-28T20:24:04Z", "creator": "initialzero@gmail.com", "creation_time": "2013-03-28T20:24:04Z", "is_private": false, "attachment_id": 30113}, {"count": 1, "tags": [], "bug_id": 54762, "text": "The output using Java 5 is \"Invalid or corrupt jarfile\"", "id": 166212, "time": "2013-03-28T20:27:54Z", "creator": "initialzero@gmail.com", "creation_time": "2013-03-28T20:27:54Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "creator": "bodewig@apache.org", "text": "In addition you said on the mailing list, the problem went away if you used a nested manifest element inside the jar task instead, right?\n\nI'll look into it but may need your help testing it since I don't have any Java5 around anymore.", "id": 166259, "attachment_id": null, "bug_id": 54762, "creation_time": "2013-03-31T06:53:17Z", "time": "2013-03-31T06:53:17Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 54762, "text": "I have created AntUnit tests from your example - ine using a separate file and ine using a nested manifest - we'll see how they fare on our build matrix.\n\nI've compared the created jars byte by byte and the only difference is the timestamps.  Right now I suspect Java5 cannot deal with the Zip64 extra field Ant 1.9 now adds, but then it should fail with nested manifest elements as well.", "id": 166262, "time": "2013-03-31T07:31:06Z", "creator": "bodewig@apache.org", "creation_time": "2013-03-31T07:31:06Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "creator": "bodewig@apache.org", "text": "OK, both testcases fail in Jenkins, I'll add an option to completely turn of\nzip64 extensions and make turn it on in <jar> by default.", "id": 166268, "attachment_id": null, "bug_id": 54762, "creation_time": "2013-03-31T11:03:43Z", "time": "2013-03-31T11:03:43Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 54762, "text": "seems to be fixed with svn revision 1462911", "id": 166270, "time": "2013-03-31T11:25:43Z", "creator": "bodewig@apache.org", "creation_time": "2013-03-31T11:25:43Z", "is_private": false, "attachment_id": null}]