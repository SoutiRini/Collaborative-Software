[{"count": 0, "tags": [], "bug_id": 11312, "attachment_id": null, "id": 20446, "time": "2002-07-30T22:28:02Z", "creator": "david.goodenough@btconnect.com", "creation_time": "2002-07-30T22:28:02Z", "is_private": false, "text": "If you have a statement of the form:-\n\n<c:set var=\"param.Name\" value=\"new\" />\n\nthe parameter Name does NOT get set to \"new\", it stays as it is and no-one\nis the wiser.  An exception should be thrown - UnsupportedOperationException \nsounds about right.  Silence is not an option."}, {"count": 1, "tags": [], "creator": "bayern@essentially.net", "attachment_id": null, "id": 20447, "time": "2002-07-30T22:33:44Z", "bug_id": 11312, "creation_time": "2002-07-30T22:33:44Z", "is_private": false, "text": "Actually, I thought you were talking about something different on the taglibs-\nuser list.   The tag\n\n <c:set var=\"param.Name\" value=\"new\" />\n\nis perfectly valid; it sets the scoped variable named 'param.Name' to the \nvalue 'new'.  Scoped variables' names can cetainly have '.' in them; in fact, \nI believe this is recommended by the Servlet specification.\n\nThe case that you're filing a report against is\n\n  <c:set target=\"${param}\" property=\"name\" value=\"foo\" />\n\nand this indeed does already throw an UnsupportedOperationException."}, {"count": 2, "tags": [], "bug_id": 11312, "text": "I am talkiing about:-<c:set var=\"param.Name\" value=\"new\" />and it does NOT work.  I use param.Name to access the value of an HTML fieldPOSTed into my JSP script.  If I test its value, using say:-<c:if test=\"${param.Name == 'Fred'}\">and the value was Fred, the test works.  If I then set the value to \"Jim\" asabove and then do the test again, the value is STILL Fred, the set had not worked.", "id": 20464, "time": "2002-07-31T08:39:47Z", "creator": "david.goodenough@btconnect.com", "creation_time": "2002-07-31T08:39:47Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "text": "Please read over what I wrote carefully; the JSTL implementation is behaving as \nintended, and as specified, here.  \"param.Name\" is a perfectly valid name for a \nscoped variable, and while you can set it as \"param.Name\", you cannot read it \nwith \"${param.Name}\" or test it with expressions like \"${param.Name == foo}\"; \nthese experssions refer to the request parameter named \"Name\".\n\nWhen a scoped variable contains characters that aren't valid in Java \nidentifiers (like \".\"), you must use the \"[]\" operator to access it; otherwise, \nthe expression language thinks you're accessing (in the case of \".\") a \nproperty.  So just say ${pageScope[\"param.Name\"]} if you want to access the \nparameter; note that this is NOT the \"Name\" parameter, but a scoped variable \nnamed \"param.Name\".  If you have further questions, please take them up on the \ntaglibs-user@jakarta.apache.org mailing list; this is not a bug.", "is_private": false, "bug_id": 11312, "id": 20473, "time": "2002-07-31T12:33:08Z", "creator": "bayern@essentially.net", "creation_time": "2002-07-31T12:33:08Z", "attachment_id": null}, {"count": 4, "tags": [], "text": "I am sorry that you can not see that it is entirely unacceptable to be ableto write to something and not read back from it.  Either the EL syntax istoo permissive, and using param.Name should be stopped, or setting param.Nameshould mean that next time you read param.Name you get back the value to set or that you get an indication that this value is read-only.To have a language where the same expression means two entirely separate thingsis the road to confusion.If this is not an implementation bug, it is certainly a design bug and needsto be fixed, I therefore am reopening this bug as bug it certinaly is.", "is_private": false, "bug_id": 11312, "id": 20491, "time": "2002-07-31T15:49:56Z", "creator": "david.goodenough@btconnect.com", "creation_time": "2002-07-31T15:49:56Z", "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 11312, "text": "David, you are reporting a bug against an implementation that follows a \nspecification; if you have complaints about the specification, you should mail \njsr-52-comments@jcp.org.  Suggestions sent to that address will be considered \nfor future versions of JSTL.  The implementation is, on this subject, \ncompliant with the specification; you have not reported a valid bug, so I am \nmarking it \"invalid\" again.\n\nAs far as the behavior, I think you are misunderstand my response.  Consider \nthe following:\n\n  <c:set var=\"param.Name\" value=\"1\" />\n  <c:out value=\"${pageScope['param.Name']}\" />\n\nThis will, per specification, output \"1\".\n\nThe text you specify in a \"var\" attribute does NOT use the expression \nlanguage; I believe you are under the mistaken impression that it does.  \nInstead, the text \"param.Name\" is the literal name of a scoped variable,\nwhich can be accessed in expressions like ${pageScope['param.Name']}.\nBy contrast, the expression ${param.Name} accesses a request parameter\nnamed \"Name\", not the scoped variable named \"param.Name\".\n\nPerhaps an analogy would be in order.  Consider the following:\n\n  <c:set var=\"param-Name\" value=\"1\" />\n  <c:out value=\"${pageScope['param-Name']}\" />\n\nThis, too, outputs 1.  However, the expression ${param-Name} means \"param \nminus Name\", not \"the scoped variable with the name 'param-Name'.  The fact \nthat there is also an implicit object named \"param\" is irrelevant in both \ncases.\n\nPlease read over the JSTL specification (or a book on the topic) before \nopening the bug again!  We take bug reports seriously, and reopening this one \nis a distraction.  Thanks.\n", "id": 20493, "time": "2002-07-31T16:12:15Z", "creator": "bayern@essentially.net", "creation_time": "2002-07-31T16:12:15Z", "is_private": false, "attachment_id": null}]