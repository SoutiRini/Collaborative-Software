[{"count": 0, "attachment_id": null, "bug_id": 34110, "is_private": false, "id": 52252, "time": "2005-03-21T18:08:44Z", "creator": "andy@hazlorealidad.com", "creation_time": "2005-03-21T18:08:44Z", "tags": [], "text": "About 50 times during the last 2 years developing programs with tomcat I have\nhad the message \n\nSEVERE: Error listenerStart\n21-Mar-2005 11:38:17 org.apache.catalina.core.StandardContext start\nSEVERE: Context startup failed due to previous errors\n\nI usually manage to find out that its a configuration problem of mine\nbut the message isnt enough information to go on. It has caused me hours and\nhours of hunting for the problem.\n\nI consider that it is a bug, as the message should be more explicit. \n\n... a stacktrace would be nice.\n\nI dont think its necessary to attach more information about my setup as I have\nseen the message on 20 different web applications of mine. With tomcat versions\nfrom 4 to 5.5 I always hoped it would be fixed in the next release.\n\nThanks in advance\n\nAndy Bailey\n\nThe latest example follows:\n\n\n21-Mar-2005 11:38:12 org.apache.coyote.http11.Http11Protocol init\nINFO: Initializing Coyote HTTP/1.1 on http-8080\n21-Mar-2005 11:38:12 org.apache.coyote.http11.Http11Protocol init\nINFO: Initializing Coyote HTTP/1.1 on http-8443\n21-Mar-2005 11:38:12 org.apache.catalina.startup.Catalina load\nINFO: Initialization processed in 1402 ms\n21-Mar-2005 11:38:13 org.apache.catalina.core.StandardService start\nINFO: Starting service Catalina\n21-Mar-2005 11:38:13 org.apache.catalina.core.StandardEngine start\nINFO: Starting Servlet Engine: Apache Tomcat/5.5.7\n21-Mar-2005 11:38:13 org.apache.catalina.core.StandardHost start\nINFO: XML validation disabled\n21-Mar-2005 11:38:13 org.apache.catalina.core.StandardHost start\nINFO: XML validation disabled\n21-Mar-2005 11:38:13 org.apache.catalina.startup.HostConfig deployWAR\nINFO: Deploying web application archive pse.war\n21-Mar-2005 11:38:13 org.apache.catalina.startup.ContextConfig applicationWebConfig\nINFO: Missing application web.xml, using defaults only\nStandardEngine[Catalina].StandardHost[localhost].StandardContext[/pse]\n21-Mar-2005 11:38:13 org.apache.catalina.startup.HostConfig deployWAR\nINFO: Deploying web application archive acegi-security-sample-contacts-filter.war\n[WARN,Configurator,main] No configuration found. Configuring ehcache from\nehcache-failsafe.xml found in the classpath:\njar:file:/opt/tomcat2/webapps/acegi-security-sample-contacts-filter/WEB-INF/lib/ehcache-1.1.jar!/ehcache-failsafe.xml\n21-Mar-2005 11:38:17 org.apache.catalina.core.StandardContext start\nSEVERE: Error listenerStart\n21-Mar-2005 11:38:17 org.apache.catalina.core.StandardContext start\nSEVERE: Context startup failed due to previous errors\n21-Mar-2005 11:38:17 org.apache.coyote.http11.Http11Protocol start\nINFO: Starting Coyote HTTP/1.1 on http-8080\n21-Mar-2005 11:38:17 org.apache.coyote.http11.Http11Protocol start\nINFO: Starting Coyote HTTP/1.1 on http-8443\n21-Mar-2005 11:38:17 org.apache.catalina.storeconfig.StoreLoader load\nINFO: Find registry server-registry.xml at classpath resource\n21-Mar-2005 11:38:17 org.apache.catalina.startup.Catalina start\nINFO: Server startup in 4615 ms"}, {"count": 1, "tags": [], "bug_id": 34110, "text": "It did not get fixed because I do not think there's a bug in the first place.\nIt's logged to the webapp's servlet context logger, as error. Why don't you see it ?\n\nLook in the source:\n\n        boolean ok = true;\n        for (int i = 0; i < results.length; i++) {\n            if (log.isDebugEnabled())\n                log.debug(\" Configuring event listener class '\" +\n                    listeners[i] + \"'\");\n            try {\n                Class clazz = loader.loadClass(listeners[i]);\n                results[i] = clazz.newInstance();\n            } catch (Throwable t) {\n                getServletContext().log\n                    (sm.getString(\"standardContext.applicationListener\",\n                                  listeners[i]), t);\n                ok = false;\n            }\n        }\n        if (!ok) {\n            log.error(sm.getString(\"standardContext.applicationSkipped\"));\n            return (false);\n        }\n", "id": 45209, "time": "2005-03-21T22:45:22Z", "creator": "remm@apache.org", "creation_time": "2005-03-21T22:45:22Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "text": "Enough is logged already, including a stack trace (I verified this).\n\nI have tweaked the logging a little bit more.", "attachment_id": null, "id": 42322, "creator": "remm@apache.org", "time": "2005-03-22T11:32:17Z", "bug_id": 34110, "creation_time": "2005-03-22T11:32:17Z", "is_private": false}, {"count": 3, "attachment_id": null, "bug_id": 34110, "is_private": false, "id": 125959, "time": "2009-04-02T13:48:36Z", "creator": "daniel.armbrust.list@gmail.com", "creation_time": "2009-04-02T13:48:36Z", "tags": [], "text": "I ran into this issue where tomcat was not giving me any information to go on with one of my webapps.\n\nAfter a long search, documented here:  http://marc.info/?t=123861720500002&r=1&w=2\nwe discovered that the sequence of events which leads tomcat to not log any debug information about the error is as follows:\n\nYou deploy a war file to tomcat which includes log4j.jar, and has a listener declared in the web.xml file.  \n\nThe listener in the web.xml file points to a class that doesn't exist.  This will cause the deployment to fail.\n\nThe war file that you deploy does _NOT_ include a log4j.properties or log4j.xml file in the WEB-INF/classes folder - presumably because your webapp dynamically configures log4j in a different manner.\n\nThe end result is, there is some period of time during deployment of the webapp when tomcat attempts to log deployment messages to log4j which was supplied by your webapp - but since the log4j within the webapp is not yet configured, the messages are lost.\n\nI'm not sure if there is anything that can be done to improve this situation.\n\nAn obvious solution for me is to supply a log4j.properties file which will be used to configure log4j for the short period of time before my dynamic configuration runs.  \n\nBut it seems like Tomcat should always log issues during deployment into its own logging system, rather than trying to send them into the webapps logging system.\n\nHere is a vote to re-open this bug."}, {"count": 4, "attachment_id": 23439, "bug_id": 34110, "is_private": false, "id": 125985, "time": "2009-04-03T11:45:41Z", "creator": "daniel.armbrust.list@gmail.com", "creation_time": "2009-04-03T11:45:41Z", "tags": [], "text": "Created attachment 23439\nwebapp which reproduces the error\n\nMy comment #3 was missing a step that is required to reproduce this problem.  You need to have log4j and commons-logging.jar in your war file to reproduce the issue.\n\nThis war file will fail to deploy due to an invalid listener in tomcat 5.5.27, and fails to log the stack trace containing the cause of the problem anywhere.\n\nThe only output given is:\n\nSEVERE: Error listenerStart\nSEVERE: Context [/a] startup failed due to previous errors\n\nAfter tomcat has expanded the warfile, if you rename webapps/a/WEB-INF/classes/log4j.properties.hidden to log4j.properties - then you will get a stack trace - but only because it has been sent to the logger within the webapp.  It doesn't get sent to tomcats logging system.  \n\nI don't understand why tomcat is changing how it logs, depending on if log4j and commons-logging are present in the classpath of a webapp being deployed."}, {"count": 5, "tags": [], "bug_id": 34110, "is_private": false, "text": "I believe my attachment should be enough to support reopening this bug.", "id": 125986, "time": "2009-04-03T11:47:38Z", "creator": "daniel.armbrust.list@gmail.com", "creation_time": "2009-04-03T11:47:38Z", "attachment_id": null}, {"count": 6, "tags": [], "bug_id": 34110, "text": "This issue does not occur under Tomcat 6.0.18.\n\nI believe that Charles has the correct explanation for what is going on:\n\nhttp://marc.info/?l=tomcat-user&m=123889737632345&w=2", "id": 126021, "time": "2009-04-06T07:58:11Z", "creator": "daniel.armbrust.list@gmail.com", "creation_time": "2009-04-06T07:58:11Z", "is_private": false, "attachment_id": null}, {"count": 7, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "id": 127799, "time": "2009-06-10T08:38:22Z", "bug_id": 34110, "creation_time": "2009-06-10T08:38:22Z", "is_private": false, "text": "This clash between commons-logging in a webapp and in Tomcat is one of the reasons for the switch to JULI in Tomcat 6. I can reproduce this on 5.5.x but I can't see how to fix it without some major changes (ie porting JULI). That is just too big a chance for a branch as mature as 5.5.x.\n\nAs an aside, r374893 makes it clear that it is intentional that the logger is loaded by the web application classloader.\n\nYou do get a warning that log4j is not configured properly which at least gives you a clue that you are missing some log information.\n\nI am therefore closing this as won't fix."}]