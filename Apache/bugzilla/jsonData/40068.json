[{"count": 0, "tags": [], "bug_id": 40068, "text": "From a user interface perspective, the easiest way to attach to a JVM would be\nto support the new attach-on-demand API in Mustang like JConsole does.  ZeroConf\nis great if the target application was written and deployed to support it, but\nthat is often not the case.\n\nAttach on demand\nhttp://blogs.sun.com/roller/page/alanb?entry=another_piece_of_the_tool\n\nThe UI it enables for JConsole\nhttp://blogs.sun.com/roller/page/alanb?entry=getting_started_with_jconsole_just", "id": 91399, "attachment_id": null, "creator": "curtcox@gmail.com", "creation_time": "2006-07-18T20:55:45Z", "time": "2006-07-18T20:55:45Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 40068, "text": "Adding ZeroConf logging to a given application is adding two jar files to the classpath and adding an appender in the log4j configuration file.\n\nIf I understand you correctly you would like to be able to use ChainSaw to attach to a running process using log4j without being prepared for it at all like you must for ZeroConf?\n\nSounds like a very interesting idea.  The ability to be able to do this can be very efficient in a production environment.\n\nWould you happen to have played with this API just to see it working, to get an idea how hard this would be to implement?", "id": 118209, "time": "2008-07-02T17:05:36Z", "creator": "thorbjoern@gmail.com", "creation_time": "2008-07-02T17:05:36Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "creator": "curtcox@gmail.com", "attachment_id": null, "id": 118263, "time": "2008-07-03T15:32:44Z", "bug_id": 40068, "creation_time": "2008-07-03T15:32:44Z", "is_private": false, "text": "The basic idea is that the decision to use ChainSaw could be after-the-fact.  JConsole currently supports this sort of usage.  The API has changed since I filed the RFE.  I don't have any experience with it, but the API looks pretty straightforward.\n\nhttp://java.sun.com/javase/6/docs/jdk/api/attach/spec/com/sun/tools/attach/VirtualMachine.html#list()\n\nLet me know if there is any further clarification I could provide or otherwise lend a hand.\n\nThanks,\nCurt"}, {"count": 3, "tags": [], "creator": "psmith@apache.org", "text": "Listing the running VM's on the local box is easy, it would mean a change to Chainsaw to depend on Java 6, but +1000 from me.  \n\nThen what does one do with it?  Chainsaw needs to be  able to bind a receiver to soak events from it, so I can't see anyway to use the VirtualMachine object to inspect the running VM to discover what appenders it has running (so that it could create a matching Receiver if a compatible one is found).\n\nHave I missed something? (great idea if it can be done)", "id": 118265, "time": "2008-07-03T15:55:48Z", "bug_id": 40068, "creation_time": "2008-07-03T15:55:48Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "creator": "sdeboy@iname.com", "attachment_id": null, "text": "JMX for that part?", "id": 118267, "time": "2008-07-03T16:05:43Z", "bug_id": 40068, "creation_time": "2008-07-03T16:05:43Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 40068, "attachment_id": null, "text": "(In reply to comment #4)\n> JMX for that part?\n> \n\nThat would mean the Appenders would have to be exposed as managed objects in the JMX namespace, which might work (if our JMX support was better). Hrm, sounds possible!", "id": 118268, "time": "2008-07-03T16:07:27Z", "creator": "psmith@apache.org", "creation_time": "2008-07-03T16:07:27Z", "is_private": false}]