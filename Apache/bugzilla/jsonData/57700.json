[{"count": 0, "tags": [], "creator": "knst.kolinko@gmail.com", "text": "Using Tomcat 7.0.59.\nI have an implementation of LifecycleListener that is configured in META-INF/context.xml of a web application and performs some configuration work on CONFIGURE_START_EVENT.\n\nRoughly:\n[[[\nimport org.apache.catalina.Context;\nimport org.apache.catalina.Lifecycle;\nimport org.apache.catalina.LifecycleEvent;\nimport org.apache.catalina.LifecycleListener;\n\npublic class FooListener implements LifecycleListener {\n  @Override\n  public void lifecycleEvent(LifecycleEvent event) {\n    if (event.getLifecycle() instanceof Context) {\n      if (Lifecycle.CONFIGURE_START_EVENT.equals(event.getType())) {\n        if (loader == null) {\n          Context context = (Context) event.getLifecycle();\n          try {\n             // <Do some work...>\n          } catch (Exception ex) {\n            final String msg = \"Configuration failed for web application \\\"\" + context.getName()\n                + \"\\\".\";\n            throw new ConfigurationException(msg, ex);\n          }\n        }\n      }\n    }\n  }\n}\n]]]\n\nThe work of the listener can fail due to some external condition.\n\nSteps to reproduce:\nAll the following is performed via HTML UI of the Manager web application.\n1. Undeploy application foo.\n2. Upload foo.war.\n3. The external condition is not configured.\nThe following is observed:\n- The application fails to start.\n- A org.apache.catalina.LifecycleException happens and is logged into catalina.dddd-yy-mm.log\n- The Manager app shows the application as deployed and is in \"stopped\" state.\n\nThis all is as expected.\n\n4. Fix the external condition and start the web application via Manager.\nObserved behaviour:\n- The application is started. The manager webapp shows that it is started and running.\n\nExpected behaviour:\n- Being able to access /foo\n\nActual behaviour:\n- Error 404. The access log shows that the request was served by the ROOT web application.\n- No errors or warnings are logged\n\nIf I stop/start the foo application, it stops and starts successfully, but nothing changes.\nIf I stop/start the ROOT application, it stops and starts successfully, but nothing changes.\n\nIf I undeploy and re-deploy the foo application, the situation resolves and the application can be accessed successfully.\n\n\nThoughts:\n----------\n1. Maybe the error is in Mapper. Maybe the error is handling of FailedContext. \n\nThe initial error may be a deployment error (resulting in use of FailedContext), but in this case it is odd that starting the application (after fixing the external condition) is performed successfully and it is shown as running.\n\nIf the error is in the Mapper, why the error is fixed when the application is undeployed?\n\n2. We already have test cases for failed startups,\norg.apache.catalina.core.TestStandardContext\n-> testBug46243()\n-> testWebappLoaderStartFail()\n-> testWebappListenerConfigureFail()\n\nThe testWebappListenerConfigureFail() test was designed to reflect this situation. I guess there is a difference in deployment scenario via Manager webapp vs. the one used in the test.\n\n3. I wonder, if the Manager webapp had a \"[Redeploy]\" button for a webapp, like it has a \"[Reload]\" one, would pressing it be able to resolve this issue. I will file an enhancement request for that.", "id": 181727, "time": "2015-03-13T13:30:08Z", "bug_id": 57700, "creation_time": "2015-03-13T13:30:08Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 57700, "attachment_id": 32565, "id": 181728, "creation_time": "2015-03-13T13:34:11Z", "time": "2015-03-13T13:34:11Z", "creator": "knst.kolinko@gmail.com", "text": "Created attachment 32565\ncatalina.2015-03-13.log (censored)\n\nThe catalina.$DATE.log file when the LifecycleException occurs during the first (failed) start of the web application. This is for Tomcat 7.0.59. I have censored non-Tomcat names.", "is_private": false}, {"count": 2, "tags": [], "creator": "knst.kolinko@gmail.com", "text": "(In reply to Konstantin Kolinko from comment #0)\n> 3. I wonder, if the Manager webapp had a \"[Redeploy]\" button for a webapp,\n> like it has a \"[Reload]\" one, would pressing it be able to resolve this\n> issue. I will file an enhancement request for that.\n\nFiled as bug 57701", "id": 181730, "time": "2015-03-13T13:54:07Z", "bug_id": 57700, "creation_time": "2015-03-13T13:54:07Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 57700, "attachment_id": null, "id": 181875, "creation_time": "2015-03-18T16:09:57Z", "time": "2015-03-18T16:09:57Z", "creator": "markt@apache.org", "text": "I can confirm that this does not affect 8.0.x or trunk.", "is_private": false}, {"count": 4, "tags": [], "creator": "violetagg@apache.org", "text": "Hi,\n\nI succeeded to reproduce the scenario on all Tomcat versions.\n\nThe issue is the following:\n- The implementation of Manager web app invokes HostConfig to deploy the web application.\n...\n\tat org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:186)\n\tat org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:726)\n\tat org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:700)\n\tat org.apache.catalina.core.StandardHost.addChild(StandardHost.java:718)\n\tat org.apache.catalina.startup.HostConfig.deployWAR(HostConfig.java:941)\n...\n- In ContainerBase.addChildInternal if the child's start fails then the event ADD_CHILD_EVENT is not sent.\n- MapperListener will not be added to the context's listeners because it will not receive the event ADD_CHILD_EVENT\n- Later on when one tries to start the context again MapperListener will not be notified.\n\nThe test testWebappListenerConfigureFail() is successfull because it explicitly sets \n\n((ContainerBase) tomcat.getHost()).setStartChildren(false);\n\nwith this flag when ContainerBase.addChildInternal is invoked, the child's start will be skipped and the event ADD_CHILD_EVENT will be sent.\n\nWhat do you think if we move the notification for event ADD_CHILD_EVENT before children start? (see below)\n\nRegards,\nVioleta\n\n\nIndex: ContainerBase.java\n===================================================================\n--- ContainerBase.java\t(revision 1686237)\n+++ ContainerBase.java\t(working copy)\n@@ -714,6 +714,8 @@\n             children.put(child.getName(), child);\n         }\n \n+        fireContainerEvent(ADD_CHILD_EVENT, child);\n+\n         // Start child\n         // Don't do this inside sync block - start can be a slow process and\n         // locking the children object can cause problems elsewhere\n@@ -728,8 +730,6 @@\n                     (\"ContainerBase.addChild: start: \" + e);\n             }\n         }\n-\n-        fireContainerEvent(ADD_CHILD_EVENT, child);\n     }", "id": 183727, "time": "2015-06-24T12:05:29Z", "bug_id": 57700, "creation_time": "2015-06-24T12:05:29Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 57700, "attachment_id": null, "text": "I'm wary of changing the order since it might break something else. How about a finally block?", "id": 183728, "time": "2015-06-24T12:29:51Z", "creator": "markt@apache.org", "creation_time": "2015-06-24T12:29:51Z", "is_private": false}, {"count": 6, "tags": [], "creator": "remm@apache.org", "attachment_id": null, "text": "I agree it will have side effects, like maybe mapping requests while the context is being deployed ? A finally seems better but even that would still change the current behavior (previously requests would never be mapped to the failed context), although maybe the right way.", "id": 183730, "time": "2015-06-24T12:38:07Z", "bug_id": 57700, "creation_time": "2015-06-24T12:38:07Z", "is_private": false}, {"count": 7, "tags": [], "bug_id": 57700, "attachment_id": null, "text": "(In reply to Mark Thomas from comment #5)\n> I'm wary of changing the order since it might break something else. How about a\n> finally block?\n\n+1\n\n(In reply to Remy Maucherat from comment #6)\n> I agree it will have side effects, like maybe mapping requests while the\n> context is being deployed ? A finally seems better but even that would still\n> change the current behavior (previously requests would never be mapped to\n> the failed context), although maybe the right way.\n\nThe implementation is such that if the application is not started then MapperListener will just be added as Container and Lifecycle Listener but a registration of the context/wrappers will not happen. \n(org.apache.catalina.mapper.MapperListener.containerEvent(ContainerEvent)\nrow 148 & 151)", "id": 183731, "time": "2015-06-24T12:56:14Z", "creator": "violetagg@apache.org", "creation_time": "2015-06-24T12:56:14Z", "is_private": false}, {"count": 8, "tags": [], "creator": "remm@apache.org", "text": "Would be fine then, but +1 for the finally.", "id": 183732, "time": "2015-06-24T12:59:43Z", "bug_id": 57700, "creation_time": "2015-06-24T12:59:43Z", "is_private": false, "attachment_id": null}, {"count": 9, "tags": [], "bug_id": 57700, "is_private": false, "id": 183737, "creation_time": "2015-06-24T17:40:25Z", "time": "2015-06-24T17:40:25Z", "creator": "violetagg@apache.org", "text": "Fix is available in trunk, in 8.0.x for 8.0.24 and in 7.0.x for 7.0.63 onwards.", "attachment_id": null}]