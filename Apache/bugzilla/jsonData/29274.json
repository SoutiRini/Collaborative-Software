[{"count": 0, "tags": [], "text": "If a wepapp is reloaded using the Tomcat manager, memory occupied by reference \ntype static members from the webapp's classes is not released.\n\nMemory is only released if the webapp is undeployed.\n\nI guess this is a problem of the WebAppClassLoader. A class itself is only \nunloaded by the JVM if it's classloader was finalized. If after a reload from \nthe manager the webapp still uses the same classloader, old classes will not \nget unloaded and so their memory will never be freed resulting in \nOutOfMemoryError`s.\n\nSample code:\n\nclass SomeServlet extends HttpServlet {\nstatic byte[] bigData = new byte[50000000];\n\tprotected void service(HttpServletRequest arg0, HttpServletResponse \narg1)\n\t\t\tthrows ServletException, IOException {\n\t}\n}", "is_private": false, "id": 58300, "creator": "tjungblu@uni-koblenz.de", "time": "2004-05-28T11:17:28Z", "bug_id": 29274, "creation_time": "2004-05-28T11:17:28Z", "attachment_id": null}, {"count": 1, "tags": [], "text": "This is not a Tomcat issue. Please point out references to the classloader which\nare kept by Tomcat and I'll fix the issues, but if you cannot, then there's no\nbug (at least not a bug that can be addressed).\n\nThe CL of Struts based webapps is indeed never GCed, despite having no\nreferences pointing to it.", "is_private": false, "id": 58382, "creation_time": "2004-05-29T16:54:33Z", "time": "2004-05-29T16:54:33Z", "creator": "remm@apache.org", "bug_id": 29274, "attachment_id": null}]