[{"count": 0, "tags": [], "bug_id": 622, "attachment_id": null, "text": "I have been using the follwing javadoc task for many builds. All the properties \nare assigned at the top of my build file.\n\n    <javadoc packagenames=\"${javadoc.packagenames}\"\n             sourcepath=\"${src.java}\"\n             destdir=\"${build.javadocs}\"\n             author=\"${javadoc.author}\"\n             version=\"${javadoc.version}\"\n             public=\"${javadoc.public}\"\n             protected=\"${javadoc.protected}\"\n             package=\"${javadoc.package}\"\n             private=\"${javadoc.private}\"\n             nodeprecated=\"${javadoc.nodeprecated}\"\n             windowtitle=\"${javadoc.windowtitle}\"\n             doctitle=\"${javadoc.doctitle}\"\n             bottom=\"${javadoc.footer}\">\n      <classpath>\n        <pathelement location=\"${build.classes}\"/>\n        <path refid=\"project-classpath\"/>\n      </classpath>\n    </javadoc>\n\nOn a new project, I set the ${javadoc.footer} property to the null string:\n\n  <property name=\"javadoc.footer\" value=\"\"/>\n\nThe build failed with a message from javadoc saying:\n\n  javadoc: No package, class, or source file found named <... a long string \n           which was my specified classpath ...>\n\nRunning ant -verbose, it's clear that the empty string is not being emitted and \nthe next token, \"-classpath\", is interpreted as the value of the -bottom \noption. Javadoc then tries to interpret the classpath string as a package name!\n\nChanging the property to:\n\n  <property name=\"javadoc.footer\" value=\" \"/>\n\neliminates the problem.\n\nI'm sure it's an easy fix, but it took me a while to figure out what was going \non. The same problem may exist with the other attributes; I didn't investigate \nfurther.\n\nThanks for a cool tool!", "id": 712, "time": "2001-02-15T11:31:50Z", "creator": "skip@maplerise.com", "creation_time": "2001-02-15T11:31:50Z", "is_private": false}, {"count": 1, "tags": [], "text": "Fixed for versions after 1.3beta2", "is_private": false, "bug_id": 622, "id": 751, "time": "2001-02-18T06:10:28Z", "creator": "nico@apache.org", "creation_time": "2001-02-18T06:10:28Z", "attachment_id": null}, {"count": 2, "attachment_id": null, "bug_id": 622, "is_private": false, "id": 9400, "time": "2002-01-07T05:45:39Z", "creator": "mpichler@hyperwave.com", "creation_time": "2002-01-07T05:45:39Z", "tags": [], "text": "It seems that empty strings are still not handled properly\nfor the javadoc task. E.g. on empty classpath and bottom:\n\n    <javadoc sourcepath=\"${src.dir}\" destdir=\"${javadoc.dir}\"\n      packagenames=\"${javadoc.packages}\" classpath=\"\">\n      <bottom></bottom>\n    </javadoc>\n\nthe command line:\n  [javadoc] Javadoc args: C:\\lib\\jdk13\\jre\\..\\bin\\javadoc.exe -d \nC:\\prj\\hgdev\\proto\\src\\java\\ant\\docs\\api -bottom  -classpath  -sourcepath \nC:\\prj\\hgdev\\proto\\src\\java\\ant\\src -version -author com.hyperwave.tools.ant\n\ncauses the String \"-classpath\" to be used as bottom string for each page\nunder Windows (using Win2k), whereas the command executes fine under Linux.\n\nI think that Commandline.getArguments() should return Strings containing \"\"\nunder Windows for empty strings, whereas it is fine to use empty strings\nunder Linux.\n"}, {"count": 3, "tags": [], "bug_id": 622, "text": "\n\n*** This bug has been marked as a duplicate of 5906 ***", "id": 10237, "time": "2002-02-02T18:43:01Z", "creator": "umagesh@apache.org", "creation_time": "2002-02-02T18:43:01Z", "is_private": false, "attachment_id": null}]