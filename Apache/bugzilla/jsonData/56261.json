[{"count": 0, "tags": [], "bug_id": 56261, "attachment_id": null, "is_private": false, "id": 173814, "time": "2014-03-14T10:39:06Z", "creator": "enribnt@gmail.com", "creation_time": "2014-03-14T10:39:06Z", "text": "We have set up this conifguration on an HTTPD reverse proxy:\n\nLoadModule proxy_module modules/mod_proxy.so\nLoadModule proxy_http_module modules/mod_proxy_http.so\nLoadModule proxy_balancer_module modules/mod_proxy_balancer.so\n\nHeader add Set-Cookie \"APACHE_ROUTEID=.%{BALANCER_WORKER_ROUTE}e; path=/\" env=BALANCER_ROUTE_CHANGED\n<Proxy balancer://AppCluster>\n  BalancerMember https://node1.service.int route=1\n  BalancerMember https://node2.service.int route=2\n  BalancerMember https://node3.service.int route=3\n  BalancerMember https://node4.service.int route=4\n  ProxySet stickysession=APACHE_ROUTEID\n  ProxySet lbmethod=bybusyness\n</Proxy>\n\nWe expect requests to be balanced equally across all nodes; but the first node is overloaded\nHere is the output of the balancer-manager\n\nStickySession\tTimeout\tFailoverAttempts\tMethod\nAPACHE_ROUTEID\t0\t3 \tbybusyness\n\nWorker URL\tRoute\tRouteRedir\tFactor\tSet\tStatus\tElected\tTo\tFrom\nhttps://node1.service.int\t1\t\t1\t0\tOk\t2380166\t3.5G\t892M\nhttps://node2.service.int\t2\t\t1\t0\tOk\t203860\t292M\t78M\nhttps://node3.service.int\t3\t\t1\t0\tOk\t203250\t294M\t79M\nhttps://node4.service.int\t4\t\t1\t0\tOk\t351205\t511M\t132M\n\n\nThere is only one kind of request made, always of the same dimension"}, {"text": "hello\n\nby-business is supposed to compare current input FIFO lengths of the balancer members prior to select the best choice for new sessions\n\nit means that the distribution is likely to be \"strange\" in different use-cases:\n - your nodes may not be busy enough, meaning that the first one looks cool\n - your four nodes may have hidden extra load due to other internal tasks\n - requests processing of your business traffic might be \"short\" and \"long\",\n    regardless of the real data size (by-business looks for queue lengths)\n - long-life sessions go where the sticky cookie says, and thus the first node\n    may have to assume traffic which has been chosen in an unloaded state\n\nare you able to gather the input FIFO size of your backend nodes and monitor that their input invocations are balanced ?\n\n(FYI, I'm not a developer of mod_security_balancer but I already had to understand the same kind of pseudo-issue in the past)\n\ntry to compare how your backend nodes behave when you use the by-request policy (the console should look normal, but you might get different CPU loads on the nodes ?)\n\nI hope this helps,\neric", "tags": [], "creator": "egarreau@gmail.com", "attachment_id": null, "count": 1, "id": 173815, "time": "2014-03-14T11:03:07Z", "bug_id": 56261, "creation_time": "2014-03-14T11:03:07Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 56261, "attachment_id": null, "id": 173896, "time": "2014-03-18T09:38:42Z", "creator": "enribnt@gmail.com", "creation_time": "2014-03-18T09:38:42Z", "is_private": false, "text": "Eric, thank you for the response. \n\nBTW, apply the byrequest method solved our issue; I can say it was just our lack of understanding about the bybusiness behaviour"}]