[{"count": 0, "tags": [], "creator": "lijun.liao@gmail.com", "attachment_id": null, "text": "If you issue a second signature but with different algorithm, e.g., RSAWithSHA1\nfor the first signature, and RSAWithRipeMD160 for the second, you will get the\nexception that says:\n org.apache.xml.security.signature.XMLSignatureException: object not initialized\nfor signature or verification\nOriginal Exception was java.security.SignatureException: object not initialized\nfor signature or verification\n\tat\norg.apache.xml.security.algorithms.implementations.SignatureBaseRSA.engineUpdate(SignatureBaseRSA.java:203)\n\tat\norg.apache.xml.security.algorithms.SignatureAlgorithm.update(SignatureAlgorithm.java:249)\n\tat\norg.apache.xml.security.utils.SignerOutputStream.write(SignerOutputStream.java:64)\n\tat\norg.apache.xml.security.utils.UnsyncBufferedOutputStream.flushBuffer(UnsyncBufferedOutputStream.java:69)\n\tat\norg.apache.xml.security.utils.UnsyncBufferedOutputStream.flush(UnsyncBufferedOutputStream.java:85)\n\tat\norg.apache.xml.security.utils.UnsyncBufferedOutputStream.close(UnsyncBufferedOutputStream.java:91)\n\tat\norg.apache.xml.security.c14n.implementations.CanonicalizerBase.engineCanonicalizeSubTree(CanonicalizerBase.java:207)\n\tat\norg.apache.xml.security.c14n.implementations.CanonicalizerBase.engineCanonicalizeSubTree(CanonicalizerBase.java:121)\n\tat\norg.apache.xml.security.c14n.Canonicalizer.canonicalizeSubtree(Canonicalizer.java:268)\n\tat\norg.apache.xml.security.signature.SignedInfo.signInOctectStream(SignedInfo.java:286)\n\tat org.apache.xml.security.signature.XMLSignature.sign(XMLSignature.java:501)\n\tat\norg.apache.xml.security.samples.signature.CopyOfCreateSignature.sign(CopyOfCreateSignature.java:172)\n\tat\norg.apache.xml.security.samples.signature.CopyOfCreateSignature.main(CopyOfCreateSignature.java:83)\njava.security.SignatureException: object not initialized for signature or\nverification\n\tat java.security.Signature.update(Signature.java:690)\n\tat\norg.apache.xml.security.algorithms.implementations.SignatureBaseRSA.engineUpdate(SignatureBaseRSA.java:201)\n\tat\norg.apache.xml.security.algorithms.SignatureAlgorithm.update(SignatureAlgorithm.java:249)\n\tat\norg.apache.xml.security.utils.SignerOutputStream.write(SignerOutputStream.java:64)\n\tat\norg.apache.xml.security.utils.UnsyncBufferedOutputStream.flushBuffer(UnsyncBufferedOutputStream.java:69)\n\tat\norg.apache.xml.security.utils.UnsyncBufferedOutputStream.flush(UnsyncBufferedOutputStream.java:85)\n\tat\norg.apache.xml.security.utils.UnsyncBufferedOutputStream.close(UnsyncBufferedOutputStream.java:91)\n\tat\norg.apache.xml.security.c14n.implementations.CanonicalizerBase.engineCanonicalizeSubTree(CanonicalizerBase.java:207)\n\tat\norg.apache.xml.security.c14n.implementations.CanonicalizerBase.engineCanonicalizeSubTree(CanonicalizerBase.java:121)\n\tat\norg.apache.xml.security.c14n.Canonicalizer.canonicalizeSubtree(Canonicalizer.java:268)\n\tat\norg.apache.xml.security.signature.SignedInfo.signInOctectStream(SignedInfo.java:286)\n\tat org.apache.xml.security.signature.XMLSignature.sign(XMLSignature.java:501)\n\tat\norg.apache.xml.security.samples.signature.CopyOfCreateSignature.sign(CopyOfCreateSignature.java:172)\n\tat\norg.apache.xml.security.samples.signature.CopyOfCreateSignature.main(CopyOfCreateSignature.java:83).\nThis problem is caused by the initSign method in class SignatureAlgorithm:\n[1]   public void initSign(Key signingKey) throws XMLSignatureException {\t   \n[2]\t   initializeAlgorithm(true);\n[3]\t    if (keysSigning.get()==signingKey) {\n[4]    \t   return;\n[5]       }\n[6]       keysSigning.set(signingKey);\n[7]\t   this._signatureAlgorithm.engineInitSign(signingKey);\n[8]   }\nThe lines 3-5 should be commented to solve above problem.", "id": 98882, "time": "2007-02-01T13:37:11Z", "bug_id": 41520, "creation_time": "2007-02-01T13:37:11Z", "is_private": false}, {"count": 1, "tags": [], "creator": "lijun.liao@gmail.com", "attachment_id": null, "is_private": false, "id": 98898, "time": "2007-02-02T02:48:09Z", "bug_id": 41520, "creation_time": "2007-02-02T02:48:09Z", "text": "There is the same problem if you try to verify two signatures with the same\npublic key but with different signature algorithms. \n[1]   public void initVerify(Key verificationKey) throws XMLSignatureException {\n[2]\t   initializeAlgorithm(false);\n[3]\t   if (keysVerify.get()==verificationKey) {\n[4]    \t   return;\n[5]       }\n[6]\t   keysVerify.set(verificationKey);\n[7]\t   this._signatureAlgorithm.engineInitVerify(verificationKey);\n[8]   }\n\nThe the code in lines 3-5 should be commented to solve the problem."}, {"count": 2, "text": "*** Bug 41519 has been marked as a duplicate of this bug. ***", "bug_id": 41520, "attachment_id": null, "id": 99630, "time": "2007-02-21T08:29:53Z", "creator": "sean.mullan@oracle.com", "creation_time": "2007-02-21T08:29:53Z", "tags": [], "is_private": false}, {"count": 3, "tags": [], "creator": "raul-info@r-bg.com", "attachment_id": null, "is_private": false, "id": 100125, "time": "2007-03-07T02:45:28Z", "bug_id": 41520, "creation_time": "2007-03-07T02:45:28Z", "text": "Fixed in SVN head, fixed without removing the optimization or not reinitializing\nthe Signer (a little expensive operation).\n\nThanks for notifying and your patch.\n\nCan you test svn head to see if it works for you?"}, {"count": 4, "tags": [], "text": "Closing old bugs. Fixed in 1.4.1", "attachment_id": null, "id": 108408, "creation_time": "2007-09-19T12:28:01Z", "time": "2007-09-19T12:28:01Z", "creator": "sean.mullan@oracle.com", "bug_id": 41520, "is_private": false}]