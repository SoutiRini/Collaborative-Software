[{"count": 0, "tags": [], "creator": "martin.cordova@gmail.com", "text": "When Tomcat starts, this message is displayed, in spite of this listener not being used in server.xml. There is no way to avoid it.\n\norg.apache.catalina.core.AprLifecycleListener init\nINFO: The Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path", "id": 133910, "time": "2010-01-25T15:07:48Z", "bug_id": 48613, "creation_time": "2010-01-25T15:07:48Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 48613, "is_private": false, "text": "Confirming.\n\no.a.c.connector.Connector#setProtocol(String) has a call to static method AprLifecycleListener.isAprAvailable().\n\no.a.c.core.AprLifecycleListener#isAprAvailable() calls AprLifecycleListener#init() and that tries to initialize APR, and prints the message.", "id": 133915, "time": "2010-01-25T19:37:14Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2010-01-25T19:37:14Z", "attachment_id": null}, {"count": 2, "tags": [], "text": "Fixed in trunk/ backport proposed for 6.0.x branch", "is_private": false, "bug_id": 48613, "id": 133980, "time": "2010-01-27T17:31:04Z", "creator": "fhanik@apache.org", "creation_time": "2010-01-27T17:31:04Z", "attachment_id": null}, {"count": 3, "tags": [], "text": "Filip, the proposed patch (rev.903928) is wrong -- see sequence of calls described in the Comment 1 in this issue.\n\nConnector#setProtocol(String) is called by Digester when creating instance of the Connector,  and that happens long before the Lifecycle event is fired and reaches the listener.\n\nThus, with the patch, AprLifecycleListener will report that the native library is found, but Connector#setProtocol(String) will create a non-Apr connector. (an exact opposite of Bug 48311).\n\nIt can be seen in the logs, running the trunk as of rev.903928:\n\n28.01.2010 6:12:55 org.apache.catalina.core.AprLifecycleListener init\nINFO: Loaded APR based Apache Tomcat Native library 1.1.19.\n28.01.2010 6:12:55 org.apache.catalina.core.AprLifecycleListener init\nINFO: APR capabilities: IPv6 [true], sendfile [true], accept filters [false], ra\nndom [true].\n28.01.2010 6:12:56 org.apache.coyote.http11.Http11Protocol init\nINFO: Initializing Coyote HTTP/1.1 on http-8080\n28.01.2010 6:12:56 org.apache.coyote.ajp.AjpProtocol init\nINFO: Initializing Coyote AJP/1.3 on ajp-8009\n\nNote that \"Http11Protocol\" and \"AjpProtocol\" were printed, instead of \n\"Http11AprProtocol\" and \"AjpAprProtocol\" that were expected. \n\n\nI see two ways of fixing the current issue:\na) quick but somewhat dirty:\n\nUse the fact that AprLifecycleListener instance is created by digester before the instance of a connector.\n\nThat is, in AprLifecycleListener class constructor set some volatile static field as a flag stating that \"an instance of the Listener was created\" and test that flag in the init() method.\n\nI wonder, whether we will need to wait for Lifecycle.INIT_EVENT to happen, or all initialization (including initializeSSL() call) can be done at the same time.\n\n\nb) more elaborate,\n\nChange implementation of o.a.c.connector.Connector, to defer the AprLifecycleListener.isAprAvailable() call until Connector#start() is called.\n\nThis means:\n #  in Connector#setProtocol(String) method: do not initialize protocolHandlerClassName field there\n #  in Connector(String) constructor: do not initialize protocolHandler field\n #  in Connector#setProperty(String, String) method: allow it to work when protocolHandler is not yet initialized, e.g. by caching the values in a map\n\nBut with such a change Connector#setProperty() won't be able to report about unknown properties at call time, thus \"Warn if the user tries to set an invalid property\" feature will need to be reimplemented here.\n\n\n\nThus it looks to me that it would be better to go with a).\n\nIf we refuse to go with b), then Connector#setProtocol() and Connector#setProtocolHandlerClassName methods can be made private (or at least protected), because as of now they work only when called from Connector(String) constructor.\n\nComments?", "is_private": false, "id": 133984, "creator": "knst.kolinko@gmail.com", "time": "2010-01-27T19:22:27Z", "bug_id": 48613, "creation_time": "2010-01-27T19:22:27Z", "attachment_id": null}, {"count": 4, "tags": [], "creator": "markt@apache.org", "text": "I was looking at this and came up with your option a) as a solution. It is a bit of a hack but as long as we document why that should be fine.\n\nI also don't see any reason not to move the whole of the init method in the constructor.", "id": 133991, "time": "2010-01-28T04:11:19Z", "bug_id": 48613, "creation_time": "2010-01-28T04:11:19Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "text": "Your right Konstantin,\nWe've tried to fix this in the past\nhttp://svn.apache.org/viewvc?view=revision&revision=890942\n\nLet's push your change through.", "is_private": false, "bug_id": 48613, "id": 133998, "time": "2010-01-28T11:23:40Z", "creator": "fhanik@apache.org", "creation_time": "2010-01-28T11:23:40Z", "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 48613, "is_private": false, "count": 6, "id": 133999, "time": "2010-01-28T11:28:55Z", "creator": "fhanik@apache.org", "creation_time": "2010-01-28T11:28:55Z", "text": ">I wonder, whether we will need to wait for Lifecycle.INIT_EVENT to happen,\n\nI don't see why we wouldn't wait. while we could call it during isAprAvailable() and the init method, at least we know that all properties have been set during INIT_EVENT."}, {"count": 7, "text": "This has been fixed in trunk and proposed for 6.0.x by Filip", "creator": "markt@apache.org", "is_private": false, "id": 134088, "time": "2010-01-31T16:30:25Z", "bug_id": 48613, "creation_time": "2010-01-31T16:30:25Z", "tags": [], "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 48613, "is_private": false, "count": 8, "id": 134632, "time": "2010-02-18T09:53:33Z", "creator": "markt@apache.org", "creation_time": "2010-02-18T09:53:33Z", "text": "That patch had been applied to trunk and will be included in 6.0.25 onwards."}]