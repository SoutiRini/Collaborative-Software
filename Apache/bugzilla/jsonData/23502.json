[{"count": 0, "tags": [], "text": "One of the new features of Jasper in Tomcat 5 is that it attaches a \"Source\nMap\" attribute to class files to describe the file name and line number\nmapping from a JSP source file to the generated Java source file.\n\nThe SMAP that I see in the class files generated by Jasper (5.0.12 beta)\nhas a problem:\n\nIn the \"*F\" section, there's a pair of lines that defines the JSP file.\nThe first line is of the form \"+ id source-name\", where \"id\" is a unique\nidentifier and \"source-name\" is the name of the JSP file.  The source name\ncreated by Jasper contains path information, but according to JSR-045, it\nshould be without path information.\n\nFor example, when running the num/numguess.jsp program, the following lines\nare generated:\n\n+ 0 /num/numguess.jsp\nnum/numguess.jsp\n\nbut this should be\n\n+ 0 numguess.jsp\nnum/numguess.jsp", "is_private": false, "id": 44860, "creator": "jph@us.ibm.com", "time": "2003-09-29T21:02:13Z", "bug_id": 23502, "creation_time": "2003-09-29T21:02:13Z", "attachment_id": null}, {"count": 1, "tags": [], "text": "I tried a couple of examples and SMAP looks correct.  You'll need to show me a\ntest case that gives you the wrong SMAP.", "attachment_id": null, "id": 45956, "creator": "kin-man.chung@sun.com", "time": "2003-10-20T21:37:44Z", "bug_id": 23502, "creation_time": "2003-10-20T21:37:44Z", "is_private": false}, {"count": 2, "tags": [], "text": "I thought I gave you one.  The num/numguess.jsp program, when compiled by Jasper\nin 5.0.12 beta, produced the lines I listed originally.  I could attach the\nclass file, if that's what you mean.", "attachment_id": null, "id": 45983, "creator": "jph@us.ibm.com", "time": "2003-10-21T14:34:13Z", "bug_id": 23502, "creation_time": "2003-10-21T14:34:13Z", "is_private": false}, {"count": 3, "tags": [], "creator": "jph@us.ibm.com", "attachment_id": null, "id": 45986, "time": "2003-10-21T15:02:04Z", "bug_id": 23502, "creation_time": "2003-10-21T15:02:04Z", "is_private": false, "text": "I looked at the source I downloaded with the Tomcat 5.0.12 beta, and\nI see the following lines in the SmapStratum.getString() method:\n\n   out.append(\"+ \" + i + \" \" + fileNameList.get(i) + \"\\n\");\n   // Source paths must be relative, not absolute, so we\n   // remove the leading \"/\", if one exists.\n   String filePath = (String)filePathList.get(i);\n   if (filePath.startsWith(\"/\")) {\n       filePath = filePath.substring(1);\n   }\n   out.append(filePath + \"\\n\");\n\nShouldn't the first line of this segment be something like:\n\n   out.append(\"+ \" + i + \" \" + SmapUtil.unqualify(fileNameList.get(i)) + \"\\n\");\n   \nIf it were, I believe the problem I observed would be fixed."}, {"count": 4, "tags": [], "bug_id": 23502, "attachment_id": null, "is_private": false, "id": 46003, "time": "2003-10-21T18:37:18Z", "creator": "kin-man.chung@sun.com", "creation_time": "2003-10-21T18:37:18Z", "text": "Sorry, but I still think it works for num/numguess.  I am using UNIX, and I\nverified the smap by setting dumpSmap to true in web.xml not dumping the .class\nfile directly, but it should be the same.\n\n\nThe line\n\n   out.append(\"+ \" + i + \" \" + fileNameList.get(i) + \"\\n\");\n\nis correct since fileNameList, and not filePathList is used here, and\nfileNameList contains only the unqualified file names."}, {"count": 5, "tags": [], "bug_id": 23502, "attachment_id": null, "id": 46023, "time": "2003-10-22T01:51:55Z", "creator": "jph@us.ibm.com", "creation_time": "2003-10-22T01:51:55Z", "is_private": false, "text": "Aha.  You're right, of course.  I didn't notice that there were two\nname collections, one with unqualified names and one with qualified\nnames.\n\nI now believe you're not seeing the bug because you're running on\nUnix.  I've been running on Windows XP.  I finally attached a debugger\nto Jasper and stepped through the relevant code.  What I see is that\nthe call to unqualify() from line 609 of SmapUtil.java is passing\nthe string \"/num/numguess.jsp\".  Since unqualify() is looking for the\nplatform-specific path separator, which is \"\\\" on Windows, it doesn't\nmodify this string at all.\n\nI see other calls to unqualify() with actual Window's path names, \nwhich contain \"\\\", so the solution is not as simple as changing\nunqualify() to always look for \"/\".  Perhaps it needs to look for\neither?  I'll leave that up to you.\n\nFor reference, in case the code has changed since I downloaded the \nsource, line 609 of SmapUtil.java is:\n\n   smap.addFile(unqualify(fileName), fileName);\n   \nThe call from line 651 of SmapUtil.java also passes \"/num/numguess.jsp\".\nThis line is:\n\n   String unqualifiedName = unqualify(mark.getFile());\n   \nThis isn't surprising since both are getting their strings from\nmark.getFile()."}, {"count": 6, "tags": [], "bug_id": 23502, "attachment_id": null, "is_private": false, "id": 46080, "time": "2003-10-22T19:23:42Z", "creator": "kin-man.chung@sun.com", "creation_time": "2003-10-22T19:23:42Z", "text": "Aha, mystery solved!  It's the File.separator problem again!  I'll need to get a\nwindows machine so that I can also do testing in windows.\n\nI've modified \"unqualify\" to also look for \\.  Let me know if this still doesn't\nwork; and thanks for being persistent."}]