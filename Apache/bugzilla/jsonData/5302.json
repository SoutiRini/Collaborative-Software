[{"count": 0, "tags": [], "bug_id": 5302, "attachment_id": null, "is_private": false, "id": 8662, "time": "2001-12-06T05:26:05Z", "creator": "y_desfosses@hotmail.com", "creation_time": "2001-12-06T05:26:05Z", "text": "Hi,\n\nI have made a lot of research and testing during the last 2 days, but now I \ngive up. I searched everywhere on the Internet and it always resume to the fact \nthat I probably have 2 different implementation of the same class in two \ndifferent package and one is probably sealed and the other one not. Am I right ?\n\nI try to run Ant and it does not work, I minimize the script to it's minimum \nand I always get this error:\n\n************************************************************\n[ydesfosses@devwis ant]$ ./a.sh \n====================================\nANT_HOME = /export/home/ydesfosses/jakarta-ant-1.4.1\nJAVA_HOME = /export/home/ydesfosses/java\nCLASSPATH =\n====================================\n/export/home/ydesfosses/java/bin/java -\nclasspath /export/home/ydesfosses/java/lib/tools.jar:/export/home/ydesfosses/jak\narta-ant-1.4.1/lib/ant.jar:/export/home/ydesfosses/jakarta-ant-\n1.4.1/lib/jaxp.jar:/export/home/ydesfosses/jakarta-ant-1.4.1/lib/crimson.jar -\nDant.home=/export/home/ydesfosses/jakarta-ant-1.4.1 org.apache.tools.ant.Main\nBuildfile: build.xml\n\nBUILD FAILED\n\njavax.xml.parsers.FactoryConfigurationError: Provider \norg.apache.crimson.jaxp.SAXParserFactoryImpl could not be instantiated: \njava.lang.SecurityException: sealing violation\n        at javax.xml.parsers.SAXParserFactory.newInstance\n(SAXParserFactory.java:105)\n        at org.apache.tools.ant.ProjectHelper.getParserFactory\n(ProjectHelper.java:776)\n        at org.apache.tools.ant.ProjectHelper.parse(ProjectHelper.java:105)\n        at org.apache.tools.ant.ProjectHelper.configureProject\n(ProjectHelper.java:85)\n        at org.apache.tools.ant.Main.runBuild(Main.java:439)\n        at org.apache.tools.ant.Main.start(Main.java:153)\n        at org.apache.tools.ant.Main.main(Main.java:176)\n\nTotal time: 0 seconds\nProvider org.apache.crimson.jaxp.SAXParserFactoryImpl could not be \ninstantiated: java.lang.SecurityException: sealing violation\n************************************************************\n\nLike you can see I have no CLASSPATH just to make sure there is no magic, I put \nmanually each jar in my classpath\n\nEnvironments\n- Java 1.3.1\n- ANT 1.4.1\n- Solaris 2.7\n\nWhat I also tried !\n- Ant 1.4\n- Put xerces.jar instead of jaxp.jar\n- Changed the order in the classpath\n- Unzip the jaxp.jar and crimson.jar and put the directories in my classpath\n- Put Java 1.3.1 and Ant in my account in case it would be some rights problem\n\n- The only way I can make it run is either on Windows with Java 1.3.1 or on \nUnix with Java 1.2\n\nPlease HELP !!!!!!"}, {"count": 1, "attachment_id": null, "bug_id": 5302, "text": "Another place to look for a different XML parser is JAVA_HOME/jre/lib/ext\n\nReplacing jaxp.jar with Xerces is not enough, you should also remove crimson\nwhen doing that.", "id": 8663, "time": "2001-12-06T05:41:34Z", "creator": "bodewig@apache.org", "creation_time": "2001-12-06T05:41:34Z", "tags": [], "is_private": false}, {"count": 2, "tags": [], "creator": "sbailliez@apache.org", "text": "Look for a jaxp.jar with a sealed attribute in the manifest. (Sealed: true)\nThe one shipped with Ant are not sealed.\nThe only sealed JAXP/Crimson I know of is the official JAXP 1.1 release.\nThe JAXP/Crimson you will find in Ant 1.4.x are bugfix release so they are \nbetter than the official one.\n\nDid you check lib/ext in your jre ?\n\n", "id": 8664, "time": "2001-12-06T05:46:02Z", "bug_id": 5302, "creation_time": "2001-12-06T05:46:02Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "creator": "y_desfosses@hotmail.com", "text": "I looked at JAVA_HOME/jre/lib/ext and the only 2 files I have there is \n$JAVA_HOME/jre/lib/ext/jaxb-rt-1.0-ea.jar\n$JAVA_HOME/jre/lib/ext/jaxb-xjc-1.0-ea.jar\nand anyway what these 2 files have to do with ANT.\n\nAnt is supposed to come with all the necessary JARS and I don't understand when \nyou say that the JARS are not sealed, so I should get the JAXP sealed one, does \nit means that everybody that will get ANT it will not work. \n\nThere is strange that happened on Tuesday, my script was working fine and \nsuddenly I start to have these problem, I asked the sysadmin to see if they \nhave changed something and they said NO, I tought it might have something to do \nwith security, is it possible? But now everything is installed in my account !\n\nI downloaded JAVA XML Pack and in the directory jaxp-1.1.3 there is 2 JARS, \nxalan.jar, crimson.jar. I tried both together, tried separatly and it still \ndoes not work !!!\n\nI don't understand it can be so complicated to ececute ANT ?!?!\n\nI don't undersstand why I should download some other JAXP package, or do I \ndon't know what in the JAVA_HOME/jre/lib/ext.\n\nIt works fine with Java 1.2 ? Strange !\n\nThere must be some other deep problem ?\n\n", "id": 8665, "time": "2001-12-06T06:21:34Z", "bug_id": 5302, "creation_time": "2001-12-06T06:21:34Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "creator": "bodewig@apache.org", "text": "Nobody said you should go and download anything.\n\nThese two jars may contain an XML parser, which comes with its own JAXP classes.\nThis classes may be sealed so you cannot use a different parser.\n\nAll classes from Jars in JAVA_HOME/jre/lib/ext are on your CLASSPATH \nautomatically, so if there is a parser, it is most likely the culprit.\n\nTo get it to work (I guess you need the JAXB jars), remove all XML parsers and\nJAXP classes from the CLASSPATH and ANT_HOME/lib except the one that is inside\nthe JAXB jars.\n\nThe problem is not Ant, it is the sealing of the JAXB jars.\n\nIt works on 1.2 because you probably don't have the JAXB jars in your extension\ndirectory there.", "id": 8666, "time": "2001-12-06T06:34:27Z", "bug_id": 5302, "creation_time": "2001-12-06T06:34:27Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "creator": "y_desfosses@hotmail.com", "attachment_id": null, "id": 8671, "time": "2001-12-06T09:05:17Z", "bug_id": 5302, "creation_time": "2001-12-06T09:05:17Z", "is_private": false, "text": "I removed the 2 jars that were in JAVA_HOME/jre/lib/ext (jaxb-rt-1.0-ea.jar, \njaxb-xjc-1.0-ea.jar) and it still does not work. I installed the same 2 Jars \nfrom JAXB, freshly downloaded from SUN and put them in the \nJAVA_HOME/jre/lib/ext, I have the same problem.\n\nAs a matter of fact in my Java 1.2 I don't have these file, but I tried the \nsame setup in Java 1.3 and it does not work either.\n\nSince it was working on Tuesday and suddenly it stopped (I don't know if \nsomebody changed something) can it be any UNIX issue, security or I don't know \nwhat, because the same setup works in Windows ?!?!?\n\nI really don't know what to try now ! Is there a workaround to make my thing \ncompile with java 1.3 even if I run Ant with Java 1.2 ?\n\nI already lost 2 days with that and I have something to deliver and I'm getting \non the critical path !!!\n\nThank you all for your help, I'm learning in the mean time !!!\n\n\n"}, {"count": 6, "attachment_id": null, "bug_id": 5302, "text": "1) Take the good habit to have nothing in lib/ext. lib/ext is evil.\nAs long as you will have something here you are shooting yourself in the foot.\n\n2) It's no magic, it means that you have at least one jar in your classpath \nthat has sealed:true in its manifest. For instance that's the case of JAXB (and \nthe rt has SAX and DOM interfaces here so you can be sure that it won't work)\n\n3) It's not an OS issue and it's not an Ant issue. More globally it's a Java \nissue because of a prehistoric thing called 'classpath', a missing lib \nversioning in Java and a complete lack of coherence in creating jars. It is a \nnonsense to create a jar with its dependencies stuffed into it because then you \nwill be stuck when you will have one jar that is stuffed w/ v1.0 and another \none that is stuffed w/ v1.2\n\n4) Do a dump of all your System.properties to look at what jar are included \nwhen running your vm.\n\n5) As it is not an Ant issue, this bug should be closed. If you need help for \nsuch settings then I highly recommend to post in ant-user@jakarta.apache.org, \nbugzilla is for bug report not for discussions.\n\nHope this helps.\n", "id": 8674, "time": "2001-12-06T09:51:08Z", "creator": "sbailliez@apache.org", "creation_time": "2001-12-06T09:51:08Z", "tags": [], "is_private": false}, {"count": 7, "tags": [], "creator": "sbailliez@apache.org", "attachment_id": null, "id": 8722, "time": "2001-12-09T06:25:24Z", "bug_id": 5302, "creation_time": "2001-12-09T06:25:24Z", "is_private": false, "text": "As it is not an Ant issue but an environment issue I'm setting this bug to \nfixed. Please close this bug if you agree. Thanks."}, {"count": 8, "tags": [], "bug_id": 5302, "is_private": false, "text": "Ok, this is NOT fixed, and it is now in my way of me writing a killer pair of\naritcles on writing ANT tasks.  When using sealed jars as libraries when writing\n(and using) new ANT tasks, it does become an ANT issue.\n\nJAXB is the \"Java API for XML Binding\", a library for generating .java files\ndirectly from a DTD and an xml descriptor file (\".xjs\").  Yes, it does include\nthe crimson parser and jaxp (but internally, not as external references -- bad\ndesign IMHO, but that's what you get for \"Early Access\").  And yes, the jar\nfiles are sealed.\n\nWhat I wanted to do was to write a task that would call JAXB directly, not\nleaving the jvm, by calling \"main()\" on the compiler's class\n(com.sun.tools.xjc.Main), but because the jar files are sealed, i get an access\nviolation just because the files are in the lib directory of ANT.  ANT won't\neven start up when they're in the CLASSPATH in any way.\n\nObviously, the workaround is to extract the contents of the jar, remove the\nmanifest, and make an unsealed jar whose sole purpose is to be the version\nplaced inside Ant's lib directory (and while you're at it, remove the redundant\nxml parser).  But I'm not entirely sure that's legal according to Sun's license\n(I'd have to re-read it), and in any respect, its not something I'd like to be\nforced to recommend to my readers.\n\nAs more development tools come about that Ant users want to embed, the issue of\ndealing with this sealed jar thing does need to be resolved, one way or another.\nYes, it is Sun's fault for, as the comment describes, including all its\ndependencies in the jar itself, but its something that's going to happen\nregardless, and if there's a way around it, Ant should find it.\n\nJoe\n\n", "id": 8779, "time": "2001-12-11T09:35:19Z", "creator": "acroyear@io.com", "creation_time": "2001-12-11T09:35:19Z", "attachment_id": null}, {"count": 9, "tags": [], "creator": "steve_l@iseran.com", "attachment_id": null, "id": 8783, "time": "2001-12-11T11:12:25Z", "bug_id": 5302, "creation_time": "2001-12-11T11:12:25Z", "is_private": false, "text": "Joe,\n\nWhat are your expectations for ant to do in this situation?\n\nClearly this problem is caused by a mismatch between the classpath context \nthat ant needs and the one you are supplying. What do you expect Ant to do \nabout it? Catch the exception, enum every jar in the classpath and modify \ntheir manifests to be unsealed *while they are in use*? Or modifying everyon's \nJVM to ignore the sealed option?\n\nI dont see what can be done here other than adding something to an \ninstallation troubleshooting page. \n\nAlso, given this is a JAXB issue, why not provide some feedback through their \nchannels. Why they didnt provide an ant task in the first place, rather than \nsome solaris shell script as an example I dont know, but it they had they \nwould have found this problem. \n\n-steve\n\n[sealed is just plain trouble. especially when people seal anything with JAXP \nin it, those interfaces crop up everywhere; I dont know what they were \nthinking. You dont need to unzip, edit and rezip though; jEdit lets you edit \nthe manifest in-situ]"}, {"count": 10, "attachment_id": null, "bug_id": 5302, "text": "Ok, sorry if I seemed harsh...to a certain degree it was just venting 'cause it\nseemed so agrivating to have written what I hoped would be a great article on\nwriting Ant tasks, only to watch it turn into a big article full of \"well, we\ncouldn't do this, and we couldn't do that, and we couldn't do the other thing\"\nall because of odd technical decisions (few directly relating to Ant, of course)\ncausing conflicts that in this case had no resolution.\n\nI suppose what should be done by Ant at the very least is to update the\ndocumentation on writing tasks and give the warning about 1) sealed jars, and 2)\njars that include XML compilers that overlap the compiler that Ant has chosen\n(last I saw, it was JAXP + Crimson, right?).  In addition, Ant could catch the\nSecurityPermission exception that's thrown by a sealed-jar conflict and give a\nmore user-friendly message about it.\n\nJAXB was \"early access\" -- meaning it was really just a bunch of guys making\nsomething as a proof of concept that Sun suddenly up and said \"hey, that looks\nstable enough -- go make a jar and we'll put it out there\".  It actually doesn't\n have jaxp in there as such, but the earlier version of Sun's XML parser before\nthey called it Crimson, and its thus only Sax1 and Dom1 compliant (and would\nlikely conflict with Ant as a result).\n\nA part of me does wonder how Ant and other Xml tools out there expect to deal\nwith Java once 1.4 becomes official and more widespread, since it includes JAXP\nand Crimson automatically, which results in killing, effectively, the \"market\"\nsuch as it is for Xerces and other parsers (sure, you could override the\nproperty and use something else, but who would?  that's how Microsoft has taken\nover everybody's lives these days...), and locking the API down to Sax2 and\nDom2, making future improvements in the API very difficult.\n\nOne consideration may be to put some of the \"load\" of handling external jars in\nexternal tasks on the developer (or at least the guy writing the build.xml file\nwith the taskdef call).  The taskdef might specify the location of external jar\nfiles that have the task implementation and the supporting jar files, and\nperhaps Ant could run that task in its own ClassLoader.  But that definitely\nsounds like a 2.0 \"consideration\" that needs to be weighed against the amount of\ntimes this sort of conflict happens.\n", "id": 8788, "time": "2001-12-11T13:56:17Z", "creator": "acroyear@io.com", "creation_time": "2001-12-11T13:56:17Z", "tags": [], "is_private": false}, {"count": 11, "tags": [], "creator": "donaldp@apache.org", "attachment_id": null, "id": 8789, "time": "2001-12-11T14:43:45Z", "bug_id": 5302, "creation_time": "2001-12-11T14:43:45Z", "is_private": false, "text": "Why can't you just tell your readers to remove jaxp.jar and crimson.jar from \nthe ant lib directory?\n\nBTW you should never never *NEVER* put anything in the ext dir unless you want \nto cause yourself pain."}, {"count": 12, "tags": [], "text": "Alternatively you could change the topic of your article from \"cool stuff with \nAnt\" to \"why sealed jars are a total PITA\".\n\n:)\n(I think I'm joking, but I'm not sure)\n", "attachment_id": null, "bug_id": 5302, "id": 8796, "time": "2001-12-11T16:57:03Z", "creator": "tim@adjective.org", "creation_time": "2001-12-11T16:57:03Z", "is_private": false}, {"count": 13, "tags": [], "creator": "steve_l@iseran.com", "text": ">A part of me does wonder how Ant and other Xml tools out there expect to deal\n>with Java once 1.4 becomes official and more widespread, since it includes \nJAXP\n>and Crimson automatically, which results in killing, effectively, the \"market\"\n>such as it is for Xerces and other parsers (sure, you could override the\n>property and use something else, but who would?  that's how Microsoft has \ntaken\n>over everybody's lives these days...),\n\nwhen java1.4 becomes official we will at least have standardisation; java1.4 \nimplies a known set of libraries, and no need to redist a version of jaxp or \ncrimson. You can still redist xerces, and there will still be valid reasons, \ncos JAXP does let you add in extra parsers, *provided* they are visible in the \nsame classloader that JAXP loads in.\n\nLonger term things get interesting; there will be no way to provide upgrades \nto JAXP/crimson in the run time without doing a full upgrade of the JRE; \nProvided the XML parser does everything you want, reliably, this is not an \nissue. But with all the different successors to DTDs, from simple ones to XSD, \nwhich seems a conspiracy to make XML parsers harder to write, there could be \nproblems with this approach. It depends on the frequency of bugs vs. the \nfrequency of JRE upgrades. One thing that wont be possible will be to redist a \nversion of the parser to fix a particular bug in your code, which may be what \nJAXB is doing...\n\nTo compare with the microsoft approach, MSXML is a versioning nightmare of all \nits own, with a different server side version from a client side, the whole \nCOM versioning model still being broken, etc. .NET provides its own version \nfor a reason.", "id": 8800, "time": "2001-12-11T18:16:53Z", "bug_id": 5302, "creation_time": "2001-12-11T18:16:53Z", "is_private": false, "attachment_id": null}, {"count": 14, "tags": [], "creator": "acroyear@io.com", "attachment_id": null, "id": 8833, "time": "2001-12-12T09:08:42Z", "bug_id": 5302, "creation_time": "2001-12-12T09:08:42Z", "is_private": false, "text": "I can't tell the readers to remove Ant's java parsers (and i'm not the one who\nhad JAXB in ext/ -- i was just trying to put it into ANT_HOME/lib).  The concern\nis that the parser provided with JAXB may be old, as in the pre-crimson,\npre-jaxp, xml parser that sun was releasing back in \"the good old days\".  I got\nthe impression from looking at the files listed in the jars that its not even\nSAX2 or DOM2 compliant, which may cause significant problems if Ant uses either\nof those libraries.\n\nMy solution basically is to not create a \"task\" for calling jaxb, but continue\nto use a Java task, with fork=\"true\" and includeAntRuntime=\"false\", and the JAXB\nfiles in the classpath for that process only (well, and for the javac and any\ntesting target).  I already had that working, and it was already more portable\nthan using apply and calling the wsc script (which was solaris only)."}, {"count": 15, "tags": [], "bug_id": 5302, "attachment_id": null, "text": "The problem that you have is that you cannot guarantee the order in which Ant \nwill pickup the jars from ant/lib that will be set in the classpath.\n\nIt plays a significant role when you have a sealed jar in all this (a sealing \nviolation or not)\n\nSo you must either modify the script to run Ant (assuming of course the sax/dom \ninterfaces are real one) .. or as you do fork the task with the classpath \nspecified..\n\n", "id": 8834, "time": "2001-12-12T09:23:05Z", "creator": "sbailliez@apache.org", "creation_time": "2001-12-12T09:23:05Z", "is_private": false}]