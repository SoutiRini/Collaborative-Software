[{"attachment_id": 25891, "tags": [], "creator": "nicolas@apache.org", "is_private": false, "count": 0, "id": 139104, "time": "2010-08-16T08:31:14Z", "bug_id": 49753, "creation_time": "2010-08-16T08:31:14Z", "text": "Created attachment 25891\nproposal Maven POMs\n\nBuilding tools around jMeter (maven plugin, Hudson plugin) requires to have the artifacts available on public repository.\nPlease upload jMeter one's at http://repository.apache.org/"}, {"count": 1, "tags": [], "creator": "sebb@apache.org", "text": "Does not work for me:\n\n[INFO] snapshot org.htmlparser:htmlparser:2.0-SNAPSHOT: checking for updates from htmlparser\n[INFO] snapshot org.htmlparser:htmlparser:2.0-SNAPSHOT: checking for updates from apache.snapshots\nDownloading: http://htmlparser.sourceforge.net/m2-snapshot-repo/org/htmlparser/htmlparser/2.0-SNAPSHOT/htmlparser-2.0-20\n060923.183906-2.pom\n\n[INFO] ------------------------------------------------------------------------\n[ERROR] BUILD ERROR\n[INFO] ------------------------------------------------------------------------\n[INFO] Failed to resolve dependencies for one or more projects in the reactor. Reason: Unable to get dependency informat\nion: Unable to read the metadata file for artifact 'org.htmlparser:htmlparser:jar': Parent: org.htmlparser:htmlparser:ja\nr:2.0-20060923.183906-2 of project: org.htmlparser:htmlparser has wrong packaging: jar. Must be 'pom'. for project org.h\ntmlparser:htmlparser\n  org.htmlparser:htmlparser:jar:2.0-SNAPSHOT\n\nfrom the specified remote repositories:\n  apache.snapshots (http://repository.apache.org/snapshots),\n  central (http://repo1.maven.org/maven2),\n  htmlparser (http://htmlparser.sourceforge.net/m2-snapshot-repo)\n\nPath to dependency:\n        1) org.apache.jmeter:ApacheJMeter_http:jar:2.4\n\n\n\nAlso, there are no source jars. I don't know if this is acceptable anymore.", "id": 139106, "time": "2010-08-16T10:04:57Z", "bug_id": 49753, "creation_time": "2010-08-16T10:04:57Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "text": "htmlparser has an issue in its pom : it set \n<parent>\n    <artifactId>HTMLParser</artifactId>\n    <groupId>org.htmlparser</groupId>\n    <version>2.0-SNAPSHOT</version>\n</parent>\n\nwhere parent is HTMLParserProject\n\nI can reproduce you issue with maven 2.2.1.\nUsing maven 3.0-beta I only get a warning :\n[WARNING] Invalid POM for org.htmlparser:htmlparser:jar:2.0-SNAPSHOT, transitive\n dependencies (if any) will not be available, enable debug logging for more deta\n\nI4m in contact with htmlparser devs to improve the maven build and release 2.0, I'll report this issue.\nPlease check with a recent maven 3 build\n\nThe attached POM are only targetted to manually create the upload bundles, not to create the bundles from maven with attached sources/javadocs, that would require the project to be allready mavenized.", "attachment_id": null, "id": 139107, "creator": "nicolas@apache.org", "time": "2010-08-16T10:19:18Z", "bug_id": 49753, "creation_time": "2010-08-16T10:19:18Z", "is_private": false}, {"count": 3, "tags": [], "text": "htmlparser metadata just have been fixed on snapshot repo\nYou may need to call maven with -U to force update", "is_private": false, "id": 139124, "creator": "nicolas@apache.org", "time": "2010-08-16T17:28:32Z", "bug_id": 49753, "creation_time": "2010-08-16T17:28:32Z", "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 49753, "attachment_id": null, "id": 144354, "time": "2011-02-16T10:29:43Z", "creator": "y.ciabaud@free.fr", "creation_time": "2011-02-16T10:29:43Z", "is_private": false, "text": "Is this feature planned to be integrated to release process?"}, {"attachment_id": null, "tags": [], "creator": "y.ciabaud@free.fr", "text": "The htmlparser snapshot repository seems to be down, if so you can replace in src/protocol/http/pom.xml :\nhttp://htmlparser.sourceforge.net/m2-snapshot-repo\n\nBy a mirror located on:\nhttp://acris.googlecode.com/svn/snapshot-repository/\n\nI submit an updated archive with the modification.", "count": 5, "id": 144359, "time": "2011-02-16T11:43:52Z", "bug_id": 49753, "creation_time": "2011-02-16T11:43:52Z", "is_private": false}, {"count": 6, "tags": [], "creator": "y.ciabaud@free.fr", "attachment_id": 26672, "id": 144361, "time": "2011-02-16T11:46:33Z", "bug_id": 49753, "creation_time": "2011-02-16T11:46:33Z", "is_private": false, "text": "Created attachment 26672\nMaven poms with a mirrored repository for htmlparser\n\nAs the htmlparser repository is down, you will find in this archive a fully working maven integration."}, {"count": 7, "tags": [], "bug_id": 49753, "attachment_id": null, "id": 152628, "time": "2012-01-08T22:37:21Z", "creator": "mark@ardescosolutions.com", "creation_time": "2012-01-08T22:37:21Z", "is_private": false, "text": "I've taken the POM's originally supplied in this BUG and tweaked them a bit to work with 2.5.1.\n\nIt's all checked into github and there is a pull request to include it here:\n\nhttps://github.com/apache/jmeter/pull/2"}, {"count": 8, "attachment_id": 28133, "bug_id": 49753, "is_private": false, "id": 152664, "time": "2012-01-10T20:57:52Z", "creator": "mark@ardescosolutions.com", "creation_time": "2012-01-10T20:57:52Z", "tags": [], "text": "Created attachment 28133\nPatch file of the change linked to in previous comment.\n\nThis is a patch file containing the changes made in this pull request:\n\nhttps://github.com/apache/jmeter/pull/2"}, {"count": 9, "tags": [], "creator": "sebb@apache.org", "attachment_id": null, "id": 152671, "time": "2012-01-11T01:58:25Z", "bug_id": 49753, "creation_time": "2012-01-11T01:58:25Z", "is_private": false, "text": "(In reply to comment #8)\n> Created attachment 28133 [details]\n> Patch file of the change linked to in previous comment.\n> \n> This is a patch file containing the changes made in this pull request:\n> \n> https://github.com/apache/jmeter/pull/2\n\nThanks, but unfortunately the patch files do not apply at all.\n\nWe need unified diff files, or alternatively, since they are all new files, could you provide them as plain files in the correct relative directory structure?"}, {"count": 10, "tags": [], "creator": "mark@ardescosolutions.com", "attachment_id": 28136, "id": 152672, "time": "2012-01-11T06:37:44Z", "bug_id": 49753, "creation_time": "2012-01-11T06:37:44Z", "is_private": false, "text": "Created attachment 28136\nAdded files zipped up in correct directory structure\n\nI'll try again, here they are in a rar."}, {"attachment_id": 28139, "tags": [], "creator": "mark@ardescosolutions.com", "text": "Created attachment 28139\nUpdated Archive\n\nUpdated the archive to add in the following modules:\n\njunit\nmonitor\nexamples", "count": 11, "id": 152682, "time": "2012-01-11T13:07:14Z", "bug_id": 49753, "creation_time": "2012-01-11T13:07:14Z", "is_private": false}, {"count": 12, "tags": [], "creator": "sebb@apache.org", "text": "Finally managed to try the patch.\n\nIt failed when compiling core, because the xalan dependency is missing.\nFixed that, and was able to install the JMeter jars locally.\n\nHowever, the poms don't actually use jars create by the Ant, so the Maven jars are not the same as the non-Maven jars. The build process creates a lot of additional target directories, which will have to be added to SVN ignore.\n\nAlso, there 18 poms, AFAICT each of which has to be updated when changing release version.\n\nIt's going to be very time-consuming maintaining this parallel but separate Maven build, so I'm not keen to include it.\n\nWould it be possible to create a single pom to create the Maven artifacts from the dist area?\n\nOr even better, an Ant script to do the same?\n\nThe existing Ant build already creates all the required jars, so it should not be too difficult to package these up for Maven.\n\nI think the Tomcat project does something similar.", "id": 152685, "time": "2012-01-11T13:58:00Z", "bug_id": 49753, "creation_time": "2012-01-11T13:58:00Z", "is_private": false, "attachment_id": null}, {"count": 13, "tags": [], "text": "Generally it's good practise in maven to define dependancies for each module and not have them all declared in one place that all the modules pick the dependancies up from, hence why it is done this way.\n\nThat being said it is possible to have all the project dependancies in one place.\n\nI take it that JMeter is developed as one big project with libraries being updated across all components when a new feature is needed.\n\nI'll have a look at simplifiying it and making it more maintainable and then resubmit.", "is_private": false, "id": 152690, "creator": "mark@ardescosolutions.com", "time": "2012-01-11T16:47:52Z", "bug_id": 49753, "creation_time": "2012-01-11T16:47:52Z", "attachment_id": null}, {"count": 14, "tags": [], "bug_id": 49753, "is_private": false, "text": "The Poms are still going to have to be generated somehow, so there is potential for defining customised unversioned dependencies for each jar, with the full list of versions in the generated parent pom.\n\nIdeally the information should be taken from build.properties, so we don't have to maintain lots of files.", "id": 152696, "time": "2012-01-11T17:03:41Z", "creator": "sebb@apache.org", "creation_time": "2012-01-11T17:03:41Z", "attachment_id": null}, {"count": 15, "attachment_id": 28147, "bug_id": 49753, "is_private": false, "id": 152726, "time": "2012-01-12T17:10:56Z", "creator": "mark@ardescosolutions.com", "creation_time": "2012-01-12T17:10:56Z", "tags": [], "text": "Created attachment 28147\nUpdated POM files\n\nRejigged the POM files a bit.\n\nAll dependencies are now declared in the parent POM with the various modules inheriting them.\nMultiple target folders are history, it now builds all projects in <jmeter_home>/build/maven/<module>.\nDefault version has been set to \"SNAPSHOT\".\n\nTo update the version of all POM's is a one liner, in the root jmeter folder type:\n\nmvn versions:set -DnewVersion=2.5.1\n\nThe component POM's should only ever need to be updated in two instances\n\n - One of the components needs to depend upon one of the other components\n - You add a properties file to a directory that does not currently have any properties files in (This will require a new <resource> definition)\n\nI have had a look at reading in the dependancies from build.properties but whilst maven can read in external properties, it can't do this before the dependecies are checked as valid so the dependencies need to be defined inside the POM file.\n\nOne possible option for a single source of truth would be to get ANT to use the pom.xml in the JMeter root folder instead of the build.properties, it looks like you could parse the pom file with ant and pull out dependency information.  I'll investigate this next to see if it is a realistic option.\n\nIf you implemented the files as they currently are you would need to ensure that any dependency changes are made in both the build.properties and the root pom.xml"}, {"attachment_id": null, "tags": [], "creator": "p.mouawad@ubik-ingenierie.com", "is_private": false, "count": 16, "id": 152735, "time": "2012-01-12T22:05:43Z", "bug_id": 49753, "creation_time": "2012-01-12T22:05:43Z", "text": "Another option would be to make ANT run Maven, I already tried this approach and it works rather well.\n\nBut this means we switch to Maven build, this has been voted against previously."}, {"attachment_id": null, "tags": [], "creator": "p.mouawad@ubik-ingenierie.com", "text": "Regarding :\nmvn versions:set -DnewVersion=2.5.1\n\nThis tasks updates all pom.xml with current version, but once modified and a version released, we need to put back SNAPSHOT, how would we do this ?\nI tried running :\nmvn versions:revert \nand it failed.", "count": 17, "id": 152736, "time": "2012-01-12T22:12:38Z", "bug_id": 49753, "creation_time": "2012-01-12T22:12:38Z", "is_private": false}, {"count": 18, "tags": [], "text": "Date: Thu Jan 12 22:17:30 2012\nNew Revision: 1230815\n\nURL: http://svn.apache.org/viewvc?rev=1230815&view=rev\nLog:\nBug 49753 - Please publish jMeter artifacts on Maven central repository\nModified js version to 1.7R2\n\nAdded:\n   jmeter/trunk/pom.xml   (with props)\n   jmeter/trunk/src/components/pom.xml   (with props)\n   jmeter/trunk/src/core/pom.xml   (with props)\n   jmeter/trunk/src/examples/pom.xml   (with props)\n   jmeter/trunk/src/functions/pom.xml   (with props)\n   jmeter/trunk/src/jorphan/pom.xml   (with props)\n   jmeter/trunk/src/junit/pom.xml   (with props)\n   jmeter/trunk/src/protocol/ftp/pom.xml   (with props)\n   jmeter/trunk/src/protocol/http/pom.xml   (with props)\n   jmeter/trunk/src/protocol/java/pom.xml   (with props)\n   jmeter/trunk/src/protocol/jdbc/pom.xml   (with props)\n   jmeter/trunk/src/protocol/jms/pom.xml   (with props)\n   jmeter/trunk/src/protocol/ldap/pom.xml   (with props)\n   jmeter/trunk/src/protocol/mail/pom.xml   (with props)\n   jmeter/trunk/src/protocol/tcp/pom.xml   (with props)\n   jmeter/trunk/src/reports/pom.xml   (with props)", "is_private": false, "bug_id": 49753, "id": 152737, "time": "2012-01-12T22:20:37Z", "creator": "p.mouawad@ubik-ingenierie.com", "creation_time": "2012-01-12T22:20:37Z", "attachment_id": null}, {"count": 19, "tags": [], "creator": "p.mouawad@ubik-ingenierie.com", "text": "I commited pom.xml with a change on js version (1.7R2 for trunk).\nI don't mark issue as fixed as there is still some work, but that way we can update pom.xml until we find the good solution\n\n\nThank you.", "id": 152738, "time": "2012-01-12T22:21:58Z", "bug_id": 49753, "creation_time": "2012-01-12T22:21:58Z", "is_private": false, "attachment_id": null}, {"count": 20, "tags": [], "bug_id": 49753, "attachment_id": 28148, "id": 152740, "time": "2012-01-12T22:46:02Z", "creator": "mark@ardescosolutions.com", "creation_time": "2012-01-12T22:46:02Z", "is_private": false, "text": "Created attachment 28148\nusing maven-ant-tasks to download dependencies\n\nLooks like it's very easy to get ant to use the POM file to download dependencies, you just need the to use maven-ant-tasks:\n\nhttp://maven.apache.org/ant-tasks/\n\nI created a directory called scratch in the root jmeter folder and then created a build.xml with the following in it (This is assuming you have the latest set of POM files I have provided):\n\n<?xml version=\"1.0\"?>\n\n<project name=\"JMeter\" default=\"download_packages\" basedir=\".\" xmlns:artifact=\"antlib:org.apache.maven.artifact.ant\">\n\n    <path id=\"maven-ant-tasks.classpath\" path=\"<path.to>/maven-ant-tasks-2.1.3.jar\"/>\n    <typedef resource=\"org/apache/maven/artifact/ant/antlib.xml\" uri=\"antlib:org.apache.maven.artifact.ant\" classpathref=\"maven-ant-tasks.classpath\"/>\n\n    <target name=\"download_packages\" description=\"Run the stand-alone Findbugs detector\">\n        <artifact:pom id=\"jmeter.pom\" file=\"../pom.xml\"/>\n        <artifact:dependencies filesetId=\"jmeter.dependencies\" pomRefId=\"jmeter.pom\"/>\n        <copy todir=\"lib\">\n            <fileset refid=\"jmeter.dependencies\"/>\n            <!-- This mapper strips off all leading directory information -->\n            <mapper type=\"flatten\"/>\n        </copy>\n    </target>\n</project>\n\nIf you run this is steps up a directory to the POM file, reads the dependency list and downloads the dependencies and copies them into the lib dir.  very quick, very easy and would make the jar download sections of your build.xml obselete.\n\nI've attached a rar with the scratch implementation so that you can give it a quick try.  All you need to do is download  maven-ant-tasks-2.1.3.jar from here:\n\nhttp://www.apache.org/dyn/closer.cgi/maven/binaries/maven-ant-tasks-2.1.3.jar\n\nand stick it in the scratch folder.\n\nIs this worth pursuing?  If so I'll start tweaking the build.xml"}, {"count": 21, "tags": [], "text": "Philippe, you should be able to just do a \n\nmvn versions:set -DnewVersion=SNAPSHOT\n\nto change all the versions again (although revert should work)", "attachment_id": null, "id": 152741, "creator": "mark@ardescosolutions.com", "time": "2012-01-12T22:48:32Z", "bug_id": 49753, "creation_time": "2012-01-12T22:48:32Z", "is_private": false}, {"count": 22, "tags": [], "bug_id": 49753, "attachment_id": null, "text": "I had tried this it failed.\nRegarding ant tasks, I am ok with it , but let's wait for Sebb opinion.", "id": 152742, "time": "2012-01-12T22:56:30Z", "creator": "p.mouawad@ubik-ingenierie.com", "creation_time": "2012-01-12T22:56:30Z", "is_private": false}, {"count": 23, "tags": [], "bug_id": 49753, "attachment_id": 28149, "is_private": false, "id": 152748, "time": "2012-01-13T10:05:42Z", "creator": "mark@ardescosolutions.com", "creation_time": "2012-01-13T10:05:42Z", "text": "Created attachment 28149\nMain POM Update\n\nI've updated the parent POM file to add in the required info for it to be added to the central maven repo.\n\nI have taken the info for the developer section from http://wiki.apache.org/jmeter/JMeterCommitters so I'm assuming that is up to date.  It probably needs checking anyway to be sure.\n\nI haven't added a contributor list as it isn't required, but I can do if it is wanted.\n\nI guess what I need now is a list of chnages that are required to what I have submitted so far.  I currently have the following todo list:\n\n * Update build.xml to use POM instead of build.properties (Awaiting confirmation from Sebb that this is the way to go)\n * Investigate getting jChart 0.7.5 into central maven repo\n * Investigate getting bsh 2.0b5 into central maven repo\n * Removes the repositories block so that it can be uploaded to central\n * Double check the contants of all jars created by maven and normal build process and see if there are any differences that should not be there\n\nThe final question is how to get this added to maven central.  The standard route for OSS projects seems to be via sonatype (as a result I have added in the sonatype repos in the dependency management section).  \n\nIs there somebody who already deals with this?  Is there anything I can do to help with it?"}, {"count": 24, "tags": [], "bug_id": 49753, "attachment_id": 28150, "text": "Created attachment 28150\nOutput of versions:set command\n\nPhilippe,  I have attached the console log showing the mvn versions:set commands I used and what they did.\n\nDoes this match your usage?", "id": 152749, "time": "2012-01-13T10:15:58Z", "creator": "mark@ardescosolutions.com", "creation_time": "2012-01-13T10:15:58Z", "is_private": false}, {"count": 25, "tags": [], "bug_id": 49753, "is_private": false, "text": "I don't like the idea of rebuilding the sources in order to create the Maven jars.\n\nThe Ant build creates all the binary jars required for Maven; these should be used in the uploads, rather than rebuilding them using Maven.\n\nWe are not trying to convert the build to use Maven here, only to automate the deployment of Maven artifacts.\n\nI need to find out how Tomcat do this, because they also use Ant to build; as far as I know they also use Ant or a shell script to deploy to Maven.", "id": 152753, "time": "2012-01-13T13:31:34Z", "creator": "sebb@apache.org", "creation_time": "2012-01-13T13:31:34Z", "attachment_id": null}, {"count": 26, "tags": [], "text": "I guess I need to do some more research, i'm aware of a way to upload existing jars to a maven repo, i'm not aware of a way to upload existing jars and magically work out the dependecies of the jar (which is why i'm making maven build in paralell with ant).\n\nThe intention is not to replace the ant build in any way, only to enable the deployment of maven artifacts.\n\nOff to look at Tomcat I guess...", "attachment_id": null, "bug_id": 49753, "id": 152754, "time": "2012-01-13T15:09:39Z", "creator": "mark@ardescosolutions.com", "creation_time": "2012-01-13T15:09:39Z", "is_private": false}, {"count": 27, "attachment_id": null, "bug_id": 49753, "is_private": false, "id": 152759, "time": "2012-01-13T19:30:26Z", "creator": "rcalmbac@gmail.com", "creation_time": "2012-01-13T19:30:26Z", "tags": [], "text": "In case you haven't seen this, look at [1]. It has instructions for uploading artifacts to the Maven Central snapshot and staging repos with Ant. The parallel Maven build would then only serve the purpose of validating that the pom.xml lists all the dependencies, but the uploaded artifacts would be those built by Ant. That wiki page also describes other ways to deploy to Central.\n\nDisclaimer: I haven't done this myself, but I previously researched this while trying to convince the Weka project to upload their artifacts to Central.\n\nRef.:\n[1] https://docs.sonatype.org/display/Repository/Sonatype+OSS+Maven+Repository+Usage+Guide#SonatypeOSSMavenRepositoryUsageGuide-7c.DeploySnapshotsandStageReleaseswithAnt\n[2] http://www.sonatype.com/people/2009/06/publishing-your-artifacts-to-the-central-maven-repository/"}, {"count": 28, "tags": [], "text": "The Tomcat project only use Ant, see:\n\nhttp://svn.apache.org/repos/asf/tomcat/tc7.0.x/trunk/res/maven/\n\nWe'll also need to set up Nexus for JMeter. I can start on that next week.", "attachment_id": null, "bug_id": 49753, "id": 152760, "time": "2012-01-13T20:16:41Z", "creator": "sebb@apache.org", "creation_time": "2012-01-13T20:16:41Z", "is_private": false}, {"count": 29, "tags": [], "text": "I raised the JIRA issue to set up Nexus:\n\nhttps://issues.apache.org/jira/browse/INFRA-4332\n\nI'm also looking at the Tomcat Ant script with a view to using it in JMeter.", "attachment_id": null, "id": 152821, "creator": "sebb@apache.org", "time": "2012-01-16T10:05:09Z", "bug_id": 49753, "creation_time": "2012-01-16T10:05:09Z", "is_private": false}, {"count": 30, "tags": [], "creator": "mark@ardescosolutions.com", "text": "Created attachment 28162\nant deploy implementation\n\nOK, I've gone through the Tomcat implementation and they seem to be basically using ant to mirror the functionality of the mvn deploy:deploy-file command.\n\nThe downside of this (from what I can see) would be that either the dependencies are not specified in the POM files, or all dependecies are specified in all POM files (It would seem all dependencies are in all POM files unless i'm reading it wrong) unless you start writing something to apply specific dependencies to specific POM files.\n\nBased upon this I have created the attached.\n\nThis will use ant to deploy the locally build ant files by executing the command line mvn deploy:deploy-file command from ant.  I have so far got it building all of the componenets, I need to get it to create the parent POM files which seems to be a little more tricky.\n\nAdding javadoc and sorces should be as simple as adding an extra attribute to the exec command to specify the javadoc/source jars.  To make the whole thing cleaner you could probably plug in the base project build.xml and make the deployment depend upon various jars being built.\n\nThe final piece of the puzzle would be to create the mainpom file which has the dependencies and make all of the componenets depend upon it which I am working on at the moment.\n\nIs this implementation what you are looking for?", "id": 152834, "time": "2012-01-16T17:09:43Z", "bug_id": 49753, "creation_time": "2012-01-16T17:09:43Z", "is_private": false, "attachment_id": 28162}, {"count": 31, "tags": [], "creator": "sebb@apache.org", "text": "(In reply to comment #30)\n> Created attachment 28162 [details]\n> ant deploy implementation\n> \n> OK, I've gone through the Tomcat implementation and they seem to be basically\n> using ant to mirror the functionality of the mvn deploy:deploy-file command.\n> \n> The downside of this (from what I can see) would be that either the\n> dependencies are not specified in the POM files, or all dependecies are\n> specified in all POM files (It would seem all dependencies are in all POM files\n> unless i'm reading it wrong) unless you start writing something to apply\n> specific dependencies to specific POM files.\n\nAIUI they use individual pom files which include the required dependencies.\n\n> Based upon this I have created the attached.\n> \n> This will use ant to deploy the locally build ant files by executing the\n> command line mvn deploy:deploy-file command from ant.  \n\nI was hoping to avoid needing to install Maven, which is what the Tomcat version achieves.\n\n> I have so far got it\n> building all of the componenets, I need to get it to create the parent POM\n> files which seems to be a little more tricky.\n\nIt should not build any components, only upload them.\n\n> Adding javadoc and sorces should be as simple as adding an extra attribute to\n> the exec command to specify the javadoc/source jars.  To make the whole thing\n> cleaner you could probably plug in the base project build.xml and make the\n> deployment depend upon various jars being built.\n> \n> The final piece of the puzzle would be to create the mainpom file which has the\n> dependencies and make all of the componenets depend upon it which I am working\n> on at the moment.\n\nWhy do you need the parent POM if all the jars are uploaded?\n\n> Is this implementation what you are looking for?\n\nNot exactly.", "id": 152835, "time": "2012-01-16T17:29:41Z", "bug_id": 49753, "creation_time": "2012-01-16T17:29:41Z", "is_private": false, "attachment_id": null}, {"count": 32, "attachment_id": null, "creator": "mark@ardescosolutions.com", "is_private": false, "id": 152836, "time": "2012-01-16T18:12:31Z", "bug_id": 49753, "creation_time": "2012-01-16T18:12:31Z", "tags": [], "text": "The individual pom files in this implementation have the jmeter dependencies set, however they do not have the external library dependencies set. This is why a parent pom would be required to to set the external dependencies that all components can depend upon.\n\nBuild was a bad choice of words, what I meant to say was deploy.  This will take the existing jars built by ant and deploy them to a maven repository.\n\nAs for not having maven installed at all, you could do that, but then you are rewriting mavens deploy mechanism using ant and if maven ever changes anything you will need to modify your ant implementation to match the changes.\n\nIs it really worth all the extra hassle? That sounds like a much bigger maintenance nightmare than previous suggestions."}, {"count": 33, "tags": [], "bug_id": 49753, "attachment_id": null, "text": "(In reply to comment #32)\n> The individual pom files in this implementation have the jmeter dependencies\n> set, however they do not have the external library dependencies set. This is\n> why a parent pom would be required to to set the external dependencies that all\n> components can depend upon.\n\nI see. \n\nSo you are not proposing using different library dependencies for different JMeter jars?\n\nThee will need to be some way to synchronise the version settings in build.properties and the parent POM - or at least there needs to be a simple way to detect if the settings are different.\n\nPerhaps use properties in the pom to define the versions; it should then be fairly easy to extract the versions from build.properties and the pom and compare the lists.\n\n> Build was a bad choice of words, what I meant to say was deploy.  This will\n> take the existing jars built by ant and deploy them to a maven repository.\n\nOK.\n \n> As for not having maven installed at all, you could do that, but then you are\n> rewriting mavens deploy mechanism using ant and if maven ever changes anything\n> you will need to modify your ant implementation to match the changes.\n\nIt's only copying files to a URL. Tomcat already does it.\n \n> Is it really worth all the extra hassle? That sounds like a much bigger\n> maintenance nightmare than previous suggestions.\n\nAFAICT no extra maintenance.\n\nHowever it is harder to set up, so perhaps start with the Maven CLI. \nIf that causes problems for JMeter devs. then rework to use Ant only.", "id": 152837, "time": "2012-01-16T20:00:14Z", "creator": "sebb@apache.org", "creation_time": "2012-01-16T20:00:14Z", "is_private": false}, {"count": 34, "tags": [], "creator": "ian@ianbrandt.com", "text": "Greetings,\n\nI've been following this bug as an interested party.  I help maintain the Tomcat Embedded container for Arquillian, where Tomcat is used as a pure Maven dependency.  I've also taken to publishing to Maven Central the Eclipse JDT Core Batch Compiler, a Tomcat dependency that was otherwise missing.  Also at my company we produce an internal Tomcat distribution as a Maven assembly using only the Tomcat artifacts published to Maven Central.  I was hoping to do something similar with JMeter, which is how I found my way to this bug.\n\nIn my experience while the Tomcat approach to publishing artifacts with the Maven Ant Tasks is okay, it suffers from the fact that they don't regularly build and test under the dependencies as expressed by the published POMs.  Also while their approach does remove the need to install Maven along with Ant, there is still duplication involved in the build code, and the usual \"Don't Repeat Yourself\" issues inevitably come to bear.  I can offer up current and past examples if anyone is interested.\n\nI'm guessing that an outright switch to Maven for JMeter is not on the table.  If it is let me know and I'd be glad to help with the port.  You'd gain the use of the Maven Dependency Plugin (the dependency:analyze and dependency:tree reports are very helpful when it comes to understanding project dependencies and producing correct POMs).  You'd no longer have to maintain eclipse.classpath as Eclipse (and other IDEs) can work straight off the POMs.  Having skimmed the JMeter build.xml I'd guess the resulting set of POMs would be about 1/3 or less the lines of build code to maintain.  I don't see much that wouldn't be trivial to convert.  FindBugs and Checkstyle should all port over just fine.  I believe RAT and the xdocs would port as well, but otherwise the Maven AntRun Plugin could still be used.  I don't have any experience working with Gump, so I can't speak to the level of effort for that part of a switch.\n\nOtherwise there is another approach that I haven't seen mentioned.  Dependency management could be completely pushed down to the Maven Ant Tasks or Apache Ivy.  Either could be bootstrap installed with the Ant Get Task, and could be used from Ant to specify dependencies, download them, provide corresponding compile/test/runtime classpaths, and generate and publish suitable POMs along with the JMeter artifacts.  There would be no duplication in dependency declarations, and no maintaining parallel POMs.  You'd still cut down on your build code a bit I believe, and with Ivy you could use IvyDE to still get away from eclipse.classpath as well.\n\nRegards,\n\nIan", "id": 152839, "time": "2012-01-17T00:24:06Z", "bug_id": 49753, "creation_time": "2012-01-17T00:24:06Z", "is_private": false, "attachment_id": null}, {"count": 35, "tags": [], "bug_id": 49753, "attachment_id": null, "id": 152856, "time": "2012-01-17T20:19:06Z", "creator": "sebb@apache.org", "creation_time": "2012-01-17T20:19:06Z", "is_private": false, "text": "(In reply to comment #34)\n> \n> I'm guessing that an outright switch to Maven for JMeter is not on the table. \n\nThis has already been discussed on the JMeter dev list.\nSee also Bug 50324.\n\n> I don't see much that wouldn't be trivial to convert.\n\nI agree that source compilation, findbugs reports etc. would likely be easy to do.\n\nHowever, there are several other non-standard elements in the JMeter build, e.g. the site docs and help files are built from the same xml files."}, {"count": 36, "tags": [], "bug_id": 49753, "attachment_id": null, "text": "(In reply to comment #35)\n> \n> This has already been discussed on the JMeter dev list.\n> See also Bug 50324.\n\nThanks for the bug and mailing list references.  I've read through it all and it was very helpful.\n\nAccordingly I've moved discussion of the Maven Ant Tasks or Apache Ivy approach to the dev list: http://mail-archives.apache.org/mod_mbox/jmeter-dev/201201.mbox/%3C30C6A9A8-08C0-461F-9A1B-362BCA69A515%40ianbrandt.com%3E.", "id": 152862, "time": "2012-01-17T22:51:59Z", "creator": "ian@ianbrandt.com", "creation_time": "2012-01-17T22:51:59Z", "is_private": false}, {"count": 37, "tags": [], "bug_id": 49753, "attachment_id": 28166, "text": "Created attachment 28166\nCurrent maven deploy via ant\n\nI've added where I currently am with an ant only based maven deploy.\n\nDependencies are:\n\n * Maven must be installed on your system (so that you can use the \"mvn\" command in the terminal/command prompt)\n * You must have ant-contrib in your ant lib directory (you can download it from here http://sourceforge.net/projects/ant-contrib/files/)\n\nCurrently it only deploys the source files, it should be trivial to add sources and javadoc jars if they are created by the standard ant build.\n\nYou set the repo to deploy to by modifying mvn.properties (the url property).  This works fine for a deploy to a local file system in windows and Linux, you may need to add some login/key information to deploy to a remote host.", "id": 152888, "time": "2012-01-18T14:24:23Z", "creator": "mark@ardescosolutions.com", "creation_time": "2012-01-18T14:24:23Z", "is_private": false}, {"attachment_id": 28172, "tags": [], "creator": "mark@ardescosolutions.com", "text": "Created attachment 28172\nMaven deploy final\n\nAdded in my final version of maven deploy.\n\nThis one will automatically download ant-contrib so you don't need to worry about having it in your classpath in advance.\n\nIt still requires you to have mvn installed.\n\nI've tweaked the POM files a bit to fix some transitive dependency problems I was seeing with the built artifacts.  I have a copy of the artifacts that have been built using this code here:\n\nhttp://ardesco.github.com/jmeter-maven-plugin/repository/org/apache/jmeter/\n\nAll the dependencies are defined in ApacheJMeter_parent this means that there are now two places where dependencies are declared.  Here for the mvn deployment and in build.properties for the standard ant build process.", "count": 38, "id": 152907, "time": "2012-01-18T22:39:49Z", "bug_id": 49753, "creation_time": "2012-01-18T22:39:49Z", "is_private": false}, {"count": 39, "attachment_id": null, "bug_id": 49753, "is_private": false, "id": 152926, "time": "2012-01-19T14:14:57Z", "creator": "sebb@apache.org", "creation_time": "2012-01-19T14:14:57Z", "tags": [], "text": "As far as I can tell, the poms and associated Ant build.xml deployment script in the JMeter res/maven directory are now fully up-to-date and working.\n\nSource files and javadoc are not included, but they are not necessary merely for running JMeter from Maven.\n\nIf there are any fixes needed, please re-open with a patch against JMeter SVN trunkc."}]