[{"count": 0, "tags": [], "bug_id": 26913, "attachment_id": null, "text": "When using transactional stores then counter for next history uri is stored as \nproperty of '/history' object.\n\nThis property is increased by Urihandler class (\"public static UriHandler\n    createNextWorkingresourceUri\" method). Method is synchronized so it looks \nfine. But the problem is on multiple PUT with auto-versioning on.\n\nI am getting error telling that some history object eg: '/history/1345' already \nexists.\n\nI think it is because history counter is not visible as increased for other \ntransactions until transaction that was increasing that counter was committed.\n\nSo there is possible case that both transactions fetched the same next history \nuri and then increased to the same value and then tried to save which generated \nconflict on identical uri's.\n\nFor now I have no good code for fixing this, but I think there have to be some \nnon-transactional service (like Oracle sequences or auto increment).", "id": 52237, "time": "2004-02-13T13:06:02Z", "creator": "pwalendziak@yahoo.com", "creation_time": "2004-02-13T13:06:02Z", "is_private": false}, {"count": 1, "tags": [], "creator": "ozeigermann@c1-fse.de", "is_private": false, "text": "This is not quite clear to me. Are you concurrently trying to put more than one\nfile to the same location? Then you occansionally get the error named above\nwhile trying the PUT? Is this a permanent or a transient error, i.e. is the\nSlide data corrupt or does the error show only when putting files and the PUT fails?\n\nAnyway, try using locks to protect each put , i.e. a LOCK PUT UNLOCK sequence,\nand things should work...", "id": 52242, "time": "2004-02-13T13:42:39Z", "bug_id": 26913, "creation_time": "2004-02-13T13:42:39Z", "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 26913, "attachment_id": null, "id": 52328, "time": "2004-02-16T11:00:19Z", "creator": "pwalendziak@yahoo.com", "creation_time": "2004-02-16T11:00:19Z", "is_private": false, "text": "It is not the problem of putting the same file without locking. \nThe situation is that we are testing performance and stability of Slide for our \napplication.\n\nIn general test looks like this:\n4 clients are putting simultanously about 2000 files (each file - 20 KB) in \ndifferent locations (no PUT conflict). When putting them there are errors of \ntype:\n\nHTTP/1.1 409 Conflict: Another object already exist at /history/2666\n\nI have put some debug on slide sources, compiled and I found that SOMETIMES \nthere is situation that two transactions (each for different PUT request) are \ngetting the same I_NEXT_HISTORY_NAME property value of '/history' object (see \n\"public static UriHandler createNextWorkingresourceUri\" method in UriHandler \nclass).\n\nI think it is due to the fact that I_NEXT_HISTORY_NAME property value is not \nincreased until transaction is commited.\n\nSo let's describe situation:\n\nWe have 2 transactions: \"A\" and \"B\" each running for different PUT request on \ndifferent file (with auto-version-control set to true so each PUT creates new \nfolder in /history).Value of I_NEXT_HISTORY_NAME equals N.\n\nScenario:\n1.\"A\" transaction started.\n2.\"A\" transaction : fetched I_NEXT_HISTORY_NAME and incremented to N+1 in \nsynchronized method \"createNextWorkingresourceUri\" (\"A\" TRANSACTION IS STILL NOT \nCOMMITED)\n3.\"A\" transaction left synchronized method \"createNextWorkingresourceUri\" (\"A\" \nTRANSACTION IS STILL NOT COMMITED)\n4.\"B\" transaction started.\n5.\"B\" transaction : fetched I_NEXT_HISTORY_NAME and incremented to N+1 (not to \nN+2 because \"A\" transaction was not commited so fetched value was the same as in \ncase of \"A\" transaction) in synchronized method \"createNextWorkingresourceUri\" \n6.\"B\" transaction left synchronized method \"createNextWorkingresourceUri\".\n7.One of those two transactions commited.\n8.Second transaction causes exception because it cannot create the same history \nobject."}, {"count": 3, "tags": [], "bug_id": 26913, "attachment_id": null, "id": 52329, "time": "2004-02-16T11:11:53Z", "creator": "ozeigermann@c1-fse.de", "creation_time": "2004-02-16T11:11:53Z", "is_private": false, "text": "I guess I understand now. Even though in this special case the problem seems to\nbe caused by the cache having unsufficient isolation, if it wasn't the cache\nthen it would be the file or relational database. \n\nI understand it would be nice to have something like a sequence, but as this is\nno permantent error and no inconsistent data is written I will reduce severity\nto enhancement.\n\nIf you think this is not adequate, please explain why you think it is critical...\n\n"}, {"count": 4, "tags": [], "text": ">I guess I understand now. Even though in this special case the problem seems to\n>be caused by the cache having unsufficient isolation, if it wasn't the cache\n>then it would be the file or relational database. \n-It has proper isolation and that because of it state of objects from uncommited \ntransaction is not visible.\n\n>I understand it would be nice to have something like a sequence, but as this is\n>no permantent error and no inconsistent data is written I will reduce severity\n>to enhancement.\n>\n>If you think this is not adequate, please explain why you think it is critical.\n>..\n-It is VERY CRITICAL because ONLY 2 internet explorers uploading files as \ndescribed in my comment are causing this error in 5 to 30 seconds. And it is \nimpossible to load simultaneously files.Because of this error slide is not \nreally multi-user application.\n\nProper implementations of unique number generation:\n\n1.Using \"select for update\" clause + with chunk number allocation (100 values at \none time to reduce number of SQL issued to DB).\n2.Using proprietary constructs for DB (sequences, auto-increment).\n3.Transaction independent singleton that returns next number.\n", "is_private": false, "id": 52356, "creator": "pwalendziak@yahoo.com", "time": "2004-02-16T15:56:58Z", "bug_id": 26913, "creation_time": "2004-02-16T15:56:58Z", "attachment_id": null}, {"text": "OK, I think arguing around severity really is no good, so let's keep it\ncritical. This is a major issue and for sure won't go into Slide 2.0. It might\nbe scheduled for 2.1... Unfortunately, I am too busy to get this thing solved\nany time in the near future, so I won't be able to accept it as mine. Though, I\ncan offer assistance if you decided to contribute a patch yourself and give full\ncopyright to the ASF. I would be willing to discuss and carefully consider it\nfor the 2.1 release.", "tags": [], "creator": "ozeigermann@c1-fse.de", "is_private": false, "count": 5, "id": 52359, "time": "2004-02-16T16:43:54Z", "bug_id": 26913, "creation_time": "2004-02-16T16:43:54Z", "attachment_id": null}, {"count": 6, "tags": [], "bug_id": 26913, "attachment_id": null, "id": 53374, "time": "2004-03-03T11:14:47Z", "creator": "ozeigermann@c1-fse.de", "creation_time": "2004-03-03T11:14:47Z", "is_private": false, "text": "Now there is are caching modes (isolation-shadow or cluster) that allow to\nshadow the stores isolation the scenario you described can be avoided. Simply\nset the caching mode to one of these and the stores isolation to serializable. \n\nUsing this setting step (5) in your scenario would be impossible...\n\nCorrect? If so, this bug would be an enhancement request, right?"}, {"count": 7, "tags": [], "bug_id": 26913, "attachment_id": null, "id": 53414, "time": "2004-03-04T10:25:25Z", "creator": "pwalendziak@yahoo.com", "creation_time": "2004-03-04T10:25:25Z", "is_private": false, "text": "I have read your mail http://www.mail-archive.com/slide-dev@jakarta.apache.\norg/msg08838.html in which you have described how those caching modes are \nworking. So it seems that there is workaround for this problem. For now I do not \nhave time to check if this will work. Feel free to change gravity to \nenhancement. When I will check and it will be working fine I will not have \nobjections to this issue anymore. Of course as you wrote in email slide \nperformance is not best in those 2 modes."}, {"count": 8, "tags": [], "bug_id": 26913, "attachment_id": 10663, "id": 53434, "time": "2004-03-04T16:09:54Z", "creator": "pwalendziak@yahoo.com", "creation_time": "2004-03-04T16:09:54Z", "is_private": false, "text": "Created attachment 10663\nTest config of slide 2.0b1"}, {"count": 9, "tags": [], "creator": "pwalendziak@yahoo.com", "is_private": false, "text": "I tested this workaround on slide 2.0b1 and the problem is the same and very \neasy to reproduce as I described.Changing caching level does not help.I will \nattach also log from slide.So for now it is not enhancement but critical.", "id": 53436, "time": "2004-03-04T16:15:49Z", "bug_id": 26913, "creation_time": "2004-03-04T16:15:49Z", "attachment_id": null}, {"count": 10, "tags": [], "bug_id": 26913, "attachment_id": 10664, "text": "Created attachment 10664\ntest case log", "id": 53437, "time": "2004-03-04T16:17:44Z", "creator": "pwalendziak@yahoo.com", "creation_time": "2004-03-04T16:17:44Z", "is_private": false}, {"count": 11, "tags": [], "bug_id": 26913, "attachment_id": null, "id": 53438, "time": "2004-03-04T16:18:11Z", "creator": "pwalendziak@yahoo.com", "creation_time": "2004-03-04T16:18:11Z", "is_private": false, "text": "I have attached test config and log from test."}, {"count": 12, "tags": [], "bug_id": 26913, "attachment_id": null, "text": "(1) Mime type of test config seems to be wrong\n(2) Where are those errors (in log)?", "id": 53439, "time": "2004-03-04T16:30:20Z", "creator": "ozeigermann@c1-fse.de", "creation_time": "2004-03-04T16:30:20Z", "is_private": false}, {"count": 13, "tags": [], "text": "(1) Change name of attached config from *.cgi to *.zip and then unzip. \n\n(2) The errors are something like: \"2004-03-04 16:59:29 Thread-5, 04-mar-2004 \n16:59:29, isztar, PUT, 409 \"Conflict\", 265 ms, /files/nott1/01/01/pos0102.doc\". \nFull error description is in the response and it tells about already existing \nhistory object as I mentioned earlier.", "is_private": false, "id": 53493, "creator": "pwalendziak@yahoo.com", "time": "2004-03-05T08:08:16Z", "bug_id": 26913, "creation_time": "2004-03-05T08:08:16Z", "attachment_id": null}, {"count": 14, "tags": [], "bug_id": 26913, "attachment_id": null, "text": "I have checked this and am wondering why revisions are created in this way.\nEspecially when using non-versioning aware clients like MS Office wouldn't it\nmake more sense to put revisions to a directory analogous to the original one?\n\nE.g.\n\n/files/test/file1.txt\n\nwould be versioned in \n\n/history/files/test/file1.txt\n\ninstead of \n\n/history/10/h3 \n\nor similar locations. This would make it possible to actually find versioned\ncontent ever if the client has no idea about versioning. \n\nAny reasons why this should not be done this way?", "id": 54647, "time": "2004-03-25T09:49:09Z", "creator": "ozeigermann@c1-fse.de", "creation_time": "2004-03-25T09:49:09Z", "is_private": false}, {"count": 15, "tags": [], "bug_id": 26913, "attachment_id": null, "id": 54655, "time": "2004-03-25T14:08:48Z", "creator": "ozeigermann@c1-fse.de", "creation_time": "2004-03-25T14:08:48Z", "is_private": false, "text": "I really do not see any quick fix to this and doubt if the fix, I was thinking\nof can make it to the 2.0 release as it will be incompatible to the released\nbeta. For now the only thing I can recommend is to switch off auto versioning to\navcid this problem."}, {"count": 16, "tags": [], "creator": "pwalendziak@yahoo.com", "attachment_id": null, "id": 54791, "time": "2004-03-28T19:12:45Z", "bug_id": 26913, "creation_time": "2004-03-28T19:12:45Z", "is_private": false, "text": "I also think that putting smart and coherent for this into slide kernel can be \nan issue. My quick-and-dirty fix when dealing only with slide servlet is to \nsynchronize HTTP PUT method ;).\nThe solution for history that you have proposed is simple and I like this \nbecause of this."}, {"count": 17, "tags": [], "bug_id": 26913, "attachment_id": null, "id": 54866, "time": "2004-03-30T11:35:57Z", "creator": "ozeigermann@c1-fse.de", "creation_time": "2004-03-30T11:35:57Z", "is_private": false, "text": "Concerning the change of the cache level. I actually tried this myself and\ndespite what Piotr said it changes the problem in the way I expected. Instead of\ndouble history files I get deadlocks that get rolled back. This isn't any\nbetter, but makes me understand the problem. Piotr, what was the store you were\nusing and what isolation level was configured?"}, {"count": 18, "tags": [], "bug_id": 26913, "attachment_id": null, "text": "Ahhh, after having a look at Piotr's log I have an idea why changing cache mode\ndid not work. The new cache modes only work in the HEAD, not the release branch.\nI forgot to mention this in my comment.", "id": 54868, "time": "2004-03-30T11:39:59Z", "creator": "ozeigermann@c1-fse.de", "creation_time": "2004-03-30T11:39:59Z", "is_private": false}, {"count": 19, "tags": [], "bug_id": 26913, "attachment_id": null, "text": "Both double URIs and deadlocks causing conflicts are now eliminated. After the\nchanges I could no longer reproduce the observed symptoms.\n\n- Double URIs: Fixed by a HACK. Caching for history is selectively switched off\nin ExtendedStore. This causes read locks to be propagated to the physical stores\n- Deadlocks: When caching for history is switched off deadlocks can occur when\ntwo transaction first read the history counter before one has written it. In\nthis case none of them can augment to write lock. Fixed by having read and\nincremented write in a synchronized block", "id": 54876, "time": "2004-03-30T13:48:30Z", "creator": "ozeigermann@c1-fse.de", "creation_time": "2004-03-30T13:48:30Z", "is_private": false}]