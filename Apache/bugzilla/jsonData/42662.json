[{"count": 0, "tags": [], "bug_id": 42662, "text": "We use 2 tomcats (tomcat 6.0.13) as Cluster with default tcp session\nreplication. Some webapps contains complex session information including dynamic\ngenerated proxies.\n\nThe problem is that the classloader used to deserialize the proxy cannot load\nany of the proxy interfaces during initialisation. The result is a\n\"ClassNotFoundException\" but the interface class is pressent.\n\nI will attach a minimal webapp to reproduce the problem. The exception thrown is\nbelow. The exception is thrown, when both tomcats are running and the servlet is\ncalled on one of them (the other tomcat throws the exception).\n\njava.lang.ClassNotFoundException: proxytest.TestProxyInterface\n        at java.net.URLClassLoader$1.run(URLClassLoader.java:200)\n        at java.security.AccessController.doPrivileged(Native Method)\n        at java.net.URLClassLoader.findClass(URLClassLoader.java:188)\n        at java.lang.ClassLoader.loadClass(ClassLoader.java:306)\n        at java.lang.ClassLoader.loadClass(ClassLoader.java:251)\n        at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:319)\n        at java.lang.Class.forName0(Native Method)\n        at java.lang.Class.forName(Class.java:247)\n        at java.io.ObjectInputStream.resolveProxyClass(ObjectInputStream.java:676)\n        at java.io.ObjectInputStream.readProxyDesc(ObjectInputStream.java:1531)\n        at java.io.ObjectInputStream.readClassDesc(ObjectInputStream.java:1493)\n        at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1732)\n        at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)\n        at java.io.ObjectInputStream.readObject(ObjectInputStream.java:351)\n        at\norg.apache.catalina.ha.session.DeltaRequest$AttributeInfo.readExternal(DeltaRequest.java:361)\n        at\norg.apache.catalina.ha.session.DeltaRequest.readExternal(DeltaRequest.java:255)\n        at\norg.apache.catalina.ha.session.DeltaManager.deserializeDeltaRequest(DeltaManager.java:619)\n        at\norg.apache.catalina.ha.session.DeltaManager.handleSESSION_DELTA(DeltaManager.java:1363)\n        at\norg.apache.catalina.ha.session.DeltaManager.messageReceived(DeltaManager.java:1320)\n        at\norg.apache.catalina.ha.session.DeltaManager.messageDataReceived(DeltaManager.java:1083)\n        at\norg.apache.catalina.ha.session.ClusterSessionListener.messageReceived(ClusterSessionListener.java:87)\n        at\norg.apache.catalina.ha.tcp.SimpleTcpCluster.messageReceived(SimpleTcpCluster.java:916)\n        at\norg.apache.catalina.ha.tcp.SimpleTcpCluster.messageReceived(SimpleTcpCluster.java:897)\n        at\norg.apache.catalina.tribes.group.GroupChannel.messageReceived(GroupChannel.java:264)\n        at\norg.apache.catalina.tribes.group.ChannelInterceptorBase.messageReceived(ChannelInterceptorBase.java:79)\n        at\norg.apache.catalina.tribes.group.interceptors.TcpFailureDetector.messageReceived(TcpFailureDetector.java:110)\n        at\norg.apache.catalina.tribes.group.ChannelInterceptorBase.messageReceived(ChannelInterceptorBase.java:79)\n        at\norg.apache.catalina.tribes.group.ChannelInterceptorBase.messageReceived(ChannelInterceptorBase.java:79)\n        at\norg.apache.catalina.tribes.group.ChannelCoordinator.messageReceived(ChannelCoordinator.java:241)\n        at\norg.apache.catalina.tribes.transport.ReceiverBase.messageDataReceived(ReceiverBase.java:225)\n        at\norg.apache.catalina.tribes.transport.nio.NioReplicationTask.drainChannel(NioReplicationTask.java:185)\n        at\norg.apache.catalina.tribes.transport.nio.NioReplicationTask.run(NioReplicationTask.java:88)\n        at\njava.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:885)\n        at\njava.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:907)\n        at java.lang.Thread.run(Thread.java:619)", "id": 104398, "time": "2007-06-14T06:37:49Z", "creator": "michael@wyraz.de", "creation_time": "2007-06-14T06:37:49Z", "is_private": false, "attachment_id": null}, {"count": 1, "attachment_id": 20347, "bug_id": 42662, "text": "Created attachment 20347\nWebapp to reproduce the problem\n\nDeploy the webapp on a cluster of at least 2 nodes (distributable context,\nreplicated session). Call one node's url and watch the log of the other.", "id": 104399, "time": "2007-06-14T06:39:14Z", "creator": "michael@wyraz.de", "creation_time": "2007-06-14T06:39:14Z", "tags": [], "is_private": false}, {"count": 2, "tags": [], "creator": "naaman@dbnet.co.il", "attachment_id": null, "text": "I have encountered the same problem. Here is my post in the support forum, that includes details, as well as code that can help reproduce the problem.\n\nhttp://www.nabble.com/Problem-serializing-JDK-dynamic-proxies-td16467407.html\n\nHope this helps,\nNaaman\n\n", "id": 115290, "time": "2008-04-03T06:35:08Z", "bug_id": 42662, "creation_time": "2008-04-03T06:35:08Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 42662, "text": "Fixed in trunk\nhttp://svn.apache.org/viewvc?view=rev&revision=645184\nWill propose backport for 6.0.x branch\n\nFilip", "id": 115342, "time": "2008-04-05T15:02:58Z", "creator": "fhanik@apache.org", "creation_time": "2008-04-05T15:02:58Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "creator": "fhanik@apache.org", "attachment_id": null, "id": 116647, "time": "2008-05-15T08:20:06Z", "bug_id": 42662, "creation_time": "2008-05-15T08:20:06Z", "is_private": false, "text": "patch applied to 6.0.x branch, will be available 6.0.17 "}]