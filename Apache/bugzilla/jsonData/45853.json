[{"count": 0, "tags": [], "bug_id": 45853, "text": "First create a excel file using ms office. add a date (d m y) in a cell and any string cell.Then try to read this field with poi.everything work file.poi is able to tell us that it a date.HSSFDateUtil.isCellDateFormatted(cell) method returns true.\n\nNow open same excel file in openoffice.edit the cell where we added the String.do not change the cell where we added date.save the file from excel.\n\nThis time when we try to read the excel file.HSSFDateUtil.isCellDateFormatted(cell) method returns false.\n\nExpected - > The file which is being edited by openoffice should be handled properly by POI. but unfortunatly this is not the case.The written for ms excel break when same file read/edited by using open office.POI should handle this case.", "id": 120823, "time": "2008-09-20T08:30:27Z", "creator": "avdhesh.java@gmail.com", "creation_time": "2008-09-20T08:30:27Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 45853, "text": "What's the date format that excel outputs, and what's the one that open office outputs? How has oo changed it? Have you tried with a recent svn checkout of poi?\n\n(Call getCellStyle on the cell, then getDataFormatString, that'll give you the format string used)", "id": 120835, "time": "2008-09-21T09:45:42Z", "creator": "apache@gagravarr.org", "creation_time": "2008-09-21T09:45:42Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "creator": "avdhesh.java@gmail.com", "attachment_id": null, "text": "when i call cellStyle.getDataFormat(); method on the cell which contains date for excel file ,it return 15.In case of file edited with open office it returns data format 166.\n\nAfter updating POI 3.5 beta . this problem resolved.\n\n", "id": 120845, "time": "2008-09-22T01:23:30Z", "bug_id": 45853, "creation_time": "2008-09-22T01:23:30Z", "is_private": false}]