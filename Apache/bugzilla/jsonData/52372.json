[{"count": 0, "tags": [], "bug_id": 52372, "is_private": false, "text": "Created attachment 28090\nAn anonymised Doc file reproducing the problem\n\nCalling Parser#parseToString on the attached file produces an OOME.\n\nThis is because Tika doesn't validate the size it tries to allocate. Had it been C code, this could have been a buffer overflow...\n\nNot sure if the file is corrupted or not, it opens fine on Word Mac and WIndows platform. Saving the file in one of these editors causes the problem to disappear, so we've manually edited the content of the file to anonymise it yet keep it as close as possible to the original. We're able to create similar problems by flipping bits in files.\n\njava.lang.OutOfMemoryError: Java heap space\n\tat org.apache.poi.hpsf.Section.<init>(Section.java:207)\n\tat org.apache.poi.hpsf.PropertySet.init(PropertySet.java:451)\n\tat org.apache.poi.hpsf.PropertySet.<init>(PropertySet.java:246)\n\tat org.apache.tika.parser.microsoft.SummaryExtractor.parseSummaryEntryIfExists(SummaryExtractor.java:73)\n\tat org.apache.tika.parser.microsoft.SummaryExtractor.parseSummaries(SummaryExtractor.java:64)\n\tat org.apache.tika.parser.microsoft.OfficeParser.parse(OfficeParser.java:186)\n\tat org.apache.tika.parser.microsoft.OfficeParser.parse(OfficeParser.java:177)\n\tat org.apache.tika.parser.CompositeParser.parse(CompositeParser.java:242)\n\tat org.apache.tika.parser.CompositeParser.parse(CompositeParser.java:242)\n\tat org.apache.tika.parser.AutoDetectParser.parse(AutoDetectParser.java:120)\n\tat org.apache.tika.Tika.parseToString(Tika.java:380)\n\tat org.apache.tika.Tika.parseToString(Tika.java:414)\n\tat no.finntech.tika.harderner.TikaIndexerHardenerTest.parseContent(TikaIndexerHardenerTest.java:100)\n\tat no.finntech.tika.harderner.TikaIndexerHardenerTest.indexContent(TikaIndexerHardenerTest.java:91)\n\tat no.finntech.tika.harderner.TikaIndexerHardenerTest.originalFileIndexesProperly2(TikaIndexerHardenerTest.java:34)", "id": 152310, "time": "2011-12-20T12:08:45Z", "creator": "jerome.lacoste@gmail.com", "creation_time": "2011-12-20T12:08:45Z", "attachment_id": 28090}, {"count": 1, "tags": [], "bug_id": 52372, "attachment_id": null, "is_private": false, "id": 152312, "time": "2011-12-20T13:24:36Z", "creator": "apache@gagravarr.org", "creation_time": "2011-12-20T13:24:36Z", "text": "Can you confirm if this issue still occurs with POI 3.8 beta 5 (just released) or not?"}, {"count": 2, "tags": [], "bug_id": 52372, "is_private": false, "text": "Yes it does fail with 3.8-beta5", "id": 152314, "time": "2011-12-20T13:34:44Z", "creator": "jerome.lacoste@gmail.com", "creation_time": "2011-12-20T13:34:44Z", "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 52372, "is_private": false, "text": "Note that this bug doesn't look to be word specific, the exception is coming from the common HPSF properties, rather than HWPF", "id": 152315, "time": "2011-12-20T13:37:54Z", "creator": "apache@gagravarr.org", "creation_time": "2011-12-20T13:37:54Z", "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 52372, "is_private": false, "text": "I filled it on HPFS being the module that had the closest name to HPSF... Picking the right module was a bit confusing !", "id": 152320, "time": "2011-12-20T15:01:12Z", "creator": "jerome.lacoste@gmail.com", "creation_time": "2011-12-20T15:01:12Z", "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 52372, "is_private": false, "text": "Bah, looks like there was a typo in the component name (dating back quite a number of years....), should now be fixed. In general, each of the components has help which describes the subject area + package it covers, which should help with identifying", "id": 152346, "time": "2011-12-20T23:35:08Z", "creator": "apache@gagravarr.org", "creation_time": "2011-12-20T23:35:08Z", "attachment_id": null}, {"count": 6, "tags": [], "creator": "apache@gagravarr.org", "text": "The issue is that we're reading a value that should contain the number of properties in the section, then trying to create an array to hold that many properties (before reading into them, so it couldn't be a buffer overflow even in C!)\n\nWhat we're not doing is sanity checking the number of properties, so if the file has been corrupted and that value is very large, we trust it at that point and try to allocate a big array. (Later on we'd throw a different exception on discovering the value was corrupt and specified more properties than there's data for)\n\nWe could probably do some checks on the size, and also move the array initialisation to after the first pass too\n\nAre you able to check the Microsoft Documentation to see what the limit on the number of properties in a section is? (That'd be an easy sanity check to do first)", "id": 152371, "time": "2011-12-23T03:24:35Z", "bug_id": 52372, "creation_time": "2011-12-23T03:24:35Z", "is_private": false, "attachment_id": null}, {"count": 7, "tags": [], "text": "> What we're not doing is sanity checking the number of properties\n> so if the file has been corrupted\n\nJust a question: are we sure the file is corrupted ? Word opens it properly with on both Windows and Mac.\n\nAlso the place where the code tries to read the property size contains some text \"Hewlett-Packard\"\n\n> Are you able to check the Microsoft Documentation to see what the limit on the\n> number of properties in a section is? (That'd be an easy sanity check to do\n> first) http://msdn.microsoft.com/en-us/library/dd949336%28v=office.12%29.aspx\n\nI wasn't able to find a maximum number of properties.\n\nFrom the .Doc structure format: http://msdn.microsoft.com/en-us/library/cc313153%28v=office.12%29.aspx\n\nExample of a section\nhttp://msdn.microsoft.com/en-us/library/dd907622%28v=office.12%29.aspx\n\nProperty storage \nhttp://msdn.microsoft.com/en-us/library/dd949336%28v=office.12%29.aspx\n\nBut we may be able to use a different limit. We know the document/buffer length. Surely there are at most (buffer length) / (min property length).", "is_private": false, "id": 152372, "creator": "jerome.lacoste@gmail.com", "time": "2011-12-23T09:01:27Z", "bug_id": 52372, "creation_time": "2011-12-23T09:01:27Z", "attachment_id": null}, {"count": 8, "tags": [], "text": "Added a fallback for properties with ID 0, which aren't Dictionary entries - r1793602", "is_private": false, "bug_id": 52372, "id": 198638, "time": "2017-05-02T23:49:19Z", "creator": "kiwiwings@apache.org", "creation_time": "2017-05-02T23:49:19Z", "attachment_id": null}]