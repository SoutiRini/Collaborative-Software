[{"count": 0, "tags": [], "creator": "rthompson@reperio.co.jp", "attachment_id": null, "id": 124020, "time": "2009-01-14T01:07:49Z", "bug_id": 46525, "creation_time": "2009-01-14T01:07:49Z", "is_private": false, "text": "- Description -\n\nWhen using mod_rewrite and mod_log_forensic together, any \"%{forensic-id}n\" tag specified in the LogFormat directive is written to the log file as \"-\" for any successful request which was rewritten.\n\n - Steps to reproduce - \n\n1. Create \"/etc/httpd/conf.d/forensic_rewrite_test.conf\":\n########\nLoadModule rewrite_module modules/mod_rewrite.so\nLoadModule log_forensic_module modules/mod_log_forensic\nForensicLog logs/forensic.log\nLogFormat \"\\\"%r\\\" %>s %{forensic-id}n\" common_forensic\n########\n\n2. Inside a VirtualHost directive, add the following:\n########\nCustomLog logs/forensic_rewrite_test.log common_forensic\n########\n\n3. Inside an .htaccess file for the above Virtualhost, add the following:\n########\nRewriteEngine on\nRewriteRule ^rewrite.html target.html [L]\n########\n\n4. In the root of the above VirtualHost, create a simple HTML file named \"target.html\" as referenced in the rewrite rule above. \n\n5. Issue the following HTTP requests to the server:\nGET /rewrite.html HTTP/1.0\nGET /target.html HTTP/1.0\n\n6. Examine the \"forensic.log\" and \"forensic_rewrite_test.log\" files.\n\n==> forensic.log <==\n+29275:496d97ef:0|GET /rewrite.html HTTP/1.0|Accept:*/*\n-29275:496d97ef:0\n+29268:496d974f:1|GET /target.html HTTP/1.0|Accept:*/*\n-29268:496d974f\n\n==> forensic_rewrite_test.log <==\n\"GET /rewrite.html HTTP/1.0\" 200 -\n\"GET /target.html HTTP/1.0\" 200 29268:496d974f\n\nAlthough the forensic log was written correctly, the corresponding forensic-id value specified in the LogFormat directive is missing, replaced with \"-\".  The expected output is:\n\n==> forensic_rewrite_test.log <==\n\"GET /rewrite.html HTTP/1.0\" 200 29275:496d97ef:0\n\"GET /target.html HTTP/1.0\" 200 29268:496d974f\n\n - Summary - \n\nAny request which is processed through a RewriteRule will fail to include the forensic-id tag in the commonlog output, even though direct requests to the same file include the forensic-id properly.  In both cases, the forensic log itself is written correctly, including both the \"+\" entry written when the request is received and the \"-\" entry written after the request is completed.  \n\nI did not find any documentation which refers to conflicts between these packages, nor did I find any documentation indicating the mod_rewrite blocks the forensic-id or other logging tags by design.\n\n - Tested platforms - \n\nFedora Core 8 & Apache 2.2.8-1\nFedora Core 9 & Apache 2.2.9-1.x86_64\n\n - Workarounds - \n\n1. Changing the RewriteRule directive to use external redirection (substituting [R,L] for [L], above) does allow tracking of each forensic-id.  \n\nHowever, this is a poor solution as it introduces additional network overhead as well as functional limitations.  In particular, it prevents the use of internal redirects as a method of information hiding.  The use case which prompted my discovery of this bug is the remapping of existing HTML urls onto a backend content delivery application whose relatively insecure directory structure is to be hidden from the end user, ala \"RewriteRule ^public-content.html cms.php?site=141&item=23512014 [L]\".\n\n2. Arbitrary headers may be written to the commonlog using LogFormat's \"%{header-name}i\" syntax.\n\nThis is also a poor slution, since it requires each header to be specified in the LogFormat, which is unwieldy when multiple headers are required.  Recording request headers for debugging a multi-carrier mobile phone site would require about 70 headers to cover the full set of x-up-devcap-, x-jphone-, x-h3g-, x-nokia-, x-wap-, x-operamini- and other requests headers which are applicable.  \n\n - Severity - \n\nSince the purpose of the forensic log is to be able to examine the details of incoming requests, it is important to be able to identify which incoming request generated which outgoing response.  None of the known workarounds can provide this information without affecting the operation of the system or compromising the completeness of the data set.  The ability to add the forensic-id tag to the commonlog output provides the necessary reference between the request and response.  Without this reference, any analysis of the correspondence between request and response is not possible.\n\nSince this bug prevents mod_forensic from being used when mod_rewrite is in use, I consider this bug to be major."}, {"count": 1, "tags": [], "bug_id": 46525, "text": "A suggestion: Add a \"FORENSIC_ID\" variable to the environment.\n\nThe \"%{variablename}i\" syntax for writing environment variables in LogFormat allows for recording information for many other modules.  In mod_rewrite and mod_ssl for example, there are dozens of variables listed such as \"SCRIPT_URL\", \"SSL_PROTOCOL\" and \"SSL_SESSION_ID\" which may vary from request to request.  \n\nFor consistency's sake it would seem that operational data from all modules used should be available for logging in the same way.  Is there any particular reason that mod_log_forensic creates its own logging tag instead of using the same environment variable mechanism as other modules?\n", "id": 124021, "time": "2009-01-14T01:30:07Z", "creator": "rthompson@reperio.co.jp", "creation_time": "2009-01-14T01:30:07Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "text": "Inside Apache there exist two mechanisms how modules can pass variables around:\n\n- httpd environment variables\n- notes\n\nBoth are based on the same type of data structure, which uses strings as keys and values.\n\nEnvironment variables can be logged in mod_log_config with %{key}e, notes with %{key}n. This is not specific to mod_forensic.\n\nConcerning your problem: %{forensic-id}<n should do the trick. Whenever sub requests are involved internally, one can use \"<\" and \">\" to tell mod_log_config, whether it should use the data of the first or the last sub request.\n\nIf you want to discuss this further, please use the users list.\n", "is_private": false, "bug_id": 46525, "id": 124026, "time": "2009-01-14T03:56:44Z", "creator": "rainer.jung@kippdata.de", "creation_time": "2009-01-14T03:56:44Z", "attachment_id": null}]