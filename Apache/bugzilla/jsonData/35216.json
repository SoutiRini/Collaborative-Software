[{"count": 0, "tags": [], "text": "Using the x:forEach tag on a page that does not participate in a session causes\nan exception because something tries to access a session scope variable.\n\nI discovered this problem while using:\n  Standard taglib 1.1.2\n  Tomcat 5.0.27\n  Java 1.4.2\n\nThis simple jsp page fails:\n<%@ page session=\"false\" %>\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/xml\" prefix=\"x\" %>\n\n<x:parse xml=\"<content/>\" var=\"doc\" scope=\"request\" />\n\n<x:forEach select=\"$doc//*\">\n    foo\n</x:forEach>\n\nwith this error:\njava.lang.IllegalStateException: Cannot access session scope in page that does\nnot participate in any session\n  at\norg.apache.jasper.runtime.PageContextImpl.doGetAttributeNamesInScope(PageContextImpl.java:501)\n  at\norg.apache.jasper.runtime.PageContextImpl.getAttributeNamesInScope(PageContextImpl.java:487)\n  at\norg.apache.taglibs.standard.tag.common.xml.XPathUtil.getVariableQNames(XPathUtil.java:100)\n  at\norg.apache.taglibs.standard.tag.common.xml.XPathUtil.fillVarStack(XPathUtil.java:772)\n  at\norg.apache.taglibs.standard.tag.common.xml.XPathUtil.selectNodes(XPathUtil.java:522)\n  at\norg.apache.taglibs.standard.tag.common.xml.ForEachTag.prepare(ForEachTag.java:50)\n  at javax.servlet.jsp.jstl.core.LoopTagSupport.doStartTag(LoopTagSupport.java:227)\n  at org.apache.jsp.ttt_jsp._jspx_meth_x_forEach_0(ttt_jsp.java:106)\n  at org.apache.jsp.ttt_jsp._jspService(ttt_jsp.java:61)\n  at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:94)\netc...", "is_private": false, "id": 75999, "creator": "erh+apache@nimenees.com", "time": "2005-06-04T00:14:02Z", "bug_id": 35216, "creation_time": "2005-06-04T00:14:02Z", "attachment_id": null}, {"count": 1, "attachment_id": null, "bug_id": 35216, "is_private": false, "id": 76006, "time": "2005-06-04T01:12:27Z", "creator": "akolkar@us.ibm.com", "creation_time": "2005-06-04T01:12:27Z", "tags": [], "text": "Seems, to me, that XPathUtil#getVariableQNames() misses checking whether the \nsession should be accessed. Inlining a patch, given its size, I'm not too \nworried about losing the diff formatting.\n\nIndex: XPathUtil.java\n===================================================================\nRCS file: /usr/local/cvsroot/apache/jakarta-taglibs-standard-1.1.2-\nsrc/standard/src/org/apache/taglibs/standard/tag/common/xml/XPathUtil.java,v\nretrieving revision 1.1\ndiff -c -r1.1 XPathUtil.java\n*** XPathUtil.java\t3 Jun 2005 22:47:11 -0000\t1.1\n--- XPathUtil.java\t3 Jun 2005 22:58:59 -0000\n***************\n*** 97,112 ****\n              variableVector.addElement( new QName(null, varName ) );\n              globalVarSize++;\n          }\n!         enum_ = pageContext.getAttributeNamesInScope( \n!             PageContext.SESSION_SCOPE );\n!         while ( enum_.hasMoreElements() ) {\n!             String varName = (String)enum_.nextElement();\n!             QName varQName = new QName ( SESSION_NS_URL, SESSION_P,varName); \n!             //Adding both namespace qualified QName and just localName\n!             variableVector.addElement( varQName );\n!             globalVarSize++;\n!             variableVector.addElement( new QName(null, varName ) );\n!             globalVarSize++;\n          }\n          enum_ = pageContext.getAttributeNamesInScope( \n              PageContext.APPLICATION_SCOPE );\n--- 97,117 ----\n              variableVector.addElement( new QName(null, varName ) );\n              globalVarSize++;\n          }\n!         if (pageContext.getSession() != null) {\n!             // we may have a page directive preventing session \ncreation/access\n!             // do not attempt to retrieve attribute names in session scope\n!             // @see [ http://issues.apache.org/bugzilla/show_bug.cgi?\nid=35216 ]\n!             enum_ = pageContext.getAttributeNamesInScope( \n!                 PageContext.SESSION_SCOPE );\n!             while ( enum_.hasMoreElements() ) {\n!                 String varName = (String)enum_.nextElement();\n!                 QName varQName = new QName ( SESSION_NS_URL, \nSESSION_P,varName); \n!                 //Adding both namespace qualified QName and just localName\n!                 variableVector.addElement( varQName );\n!                 globalVarSize++;\n!                 variableVector.addElement( new QName(null, varName ) );\n!                 globalVarSize++;\n!             }\n          }\n          enum_ = pageContext.getAttributeNamesInScope( \n              PageContext.APPLICATION_SCOPE );\n"}, {"count": 2, "attachment_id": null, "bug_id": 35216, "text": "I just tried recompiling XPathUtil.java with that patch.  It worked.  Thanks for\nthe quick response!", "id": 76049, "time": "2005-06-06T00:15:53Z", "creator": "erh+apache@nimenees.com", "creation_time": "2005-06-06T00:15:53Z", "tags": [], "is_private": false}, {"count": 3, "tags": [], "text": "*** Bug 36637 has been marked as a duplicate of this bug. ***", "is_private": false, "id": 79884, "creator": "rahul@apache.org", "time": "2005-09-13T16:12:05Z", "bug_id": 35216, "creation_time": "2005-09-13T16:12:05Z", "attachment_id": null}, {"count": 4, "tags": [], "creator": "paul4christ79@yahoo.com", "text": "This bug still exists in 1.1.2. I am getting it also for <x:parse>. Will a 1.1.3\nsoon be available? I am using it in an RSS feed and it's ridiculous I have to\nhave a session to do XML parsing with this tag.", "id": 93290, "time": "2006-09-09T20:59:54Z", "bug_id": 35216, "creation_time": "2006-09-09T20:59:54Z", "is_private": false, "attachment_id": null}, {"count": 5, "attachment_id": 19308, "bug_id": 35216, "is_private": false, "id": 97377, "time": "2006-12-27T14:01:22Z", "creator": "bayard@apache.org", "creation_time": "2006-12-27T14:01:22Z", "tags": [], "text": "Created attachment 19308\nTest + Fix patch\n\nUses Rahul's inline patch and adds a Cactus test."}, {"count": 6, "tags": [], "text": "Thanks Henri. I locally patched this myself too, but when will an official\nrelease be available? Is that on the horizon at all?", "is_private": false, "id": 97395, "creator": "paul4christ79@yahoo.com", "time": "2006-12-27T22:34:27Z", "bug_id": 35216, "creation_time": "2006-12-27T22:34:27Z", "attachment_id": null}, {"count": 7, "tags": [], "creator": "bayard@apache.org", "text": "I'm working towards a new 1.1.x release:\n\nhttp://wiki.apache.org/jakarta-taglibs/Standard_1%2e1%2e3\n\nSo it's more on the horizon now than it has been :) The patch/test will get\ncommitted next week (I put a day a week in).", "id": 97412, "time": "2006-12-28T08:51:52Z", "bug_id": 35216, "creation_time": "2006-12-28T08:51:52Z", "is_private": false, "attachment_id": null}, {"count": 8, "tags": [], "creator": "bayard@apache.org", "text": "svn ci -m \"Applying Rahul's patch and my test case for #35216 - the illegal\nstate exception is protected from via a != null\"   \n\nSending        src/org/apache/taglibs/standard/tag/common/xml/XPathUtil.java\nAdding         test/org/apache/taglibs/standard/tag/el/xml/Test35216.java\nAdding         test/web/org/apache/taglibs/standard/tag/el/xml/Test35216.jsp\nTransmitting file data ...\nCommitted revision 492277.", "id": 97572, "time": "2007-01-03T12:09:08Z", "bug_id": 35216, "creation_time": "2007-01-03T12:09:08Z", "is_private": false, "attachment_id": null}, {"count": 9, "tags": [], "bug_id": 35216, "attachment_id": null, "is_private": false, "id": 109420, "time": "2007-10-16T23:29:40Z", "creator": "bayard@apache.org", "creation_time": "2007-10-16T23:29:40Z", "text": "*** Bug 43393 has been marked as a duplicate of this bug. ***"}]