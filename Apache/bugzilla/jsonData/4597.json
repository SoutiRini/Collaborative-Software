[{"count": 0, "tags": [], "creator": "wtff@freenet.de", "text": "I use webdav with HTTPS enforcement and client-certification.\nIn the final version of tomcat 4.0.1 all webdav operations work fine, as long \nas they don't involve jsp files. I don't have any idea, why the webdav servlet \nis treating those files differently than files with other extensions.\n\nI can move a local jsp file into a webdav folder, if it does not yet contain a \nfile with the same name. But then I can neither delete, nor rename or move this \nremote jsp file anymore. Also, I cannot update it with a new local version of \nthis file. Therefore I am unable to update my webapps in production, because \nthey mainly consist of jsp files.\n( I tried to use jakarta slide instead but somehow it seems as if slide depends \non having meta information attached to each file and therefore doesn't seem to \nbe able to do what the tomcat webdav servlet can do: providing a webdav view \nonto a plain file system. If you have information on how I could setup slide so \nthat it would work like the tomcat webdav servlet, then that would help me a \nlot also.)\n[ sorry for making you read so much ;) ]", "id": 7485, "time": "2001-11-02T10:03:34Z", "bug_id": 4597, "creation_time": "2001-11-02T10:03:34Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 4597, "is_private": false, "id": 7491, "creation_time": "2001-11-02T11:38:29Z", "time": "2001-11-02T11:38:29Z", "creator": "remm@apache.org", "text": "When you do a request on a URI which ends with *.jsp (regardless of the method \nused), the request will go to Jasper (because of the *.jsp mapping in the \ndefault configuration), instead of to the WebdavServlet. So it's normal, \naltough I understand it's not really what you would expect.\n\nOne way you could do it is to put the WebDAV code in a filter, but it's a bad \nidea to do a general implementation that way (since it would \"hijack\" quite a \nbit of HTTP functionality).\n\nSlide is more appropriate for webapp manipulation, because it can get around \nthese constraints, but it doesn't work off the filesystem; instead, it uses its \nown repository (although it's likely there will eventually be an implementation \nof it which would only use the filesystem).", "attachment_id": null}, {"count": 2, "tags": [], "creator": "wtff@freenet.de", "text": "Thanks for your detailed answer. I must say, you guys are really quick and \ndiligent! The answer helps me a lot.\nNonetheless, I would like to submit one further comment, to oppose the \nargument, that the behaviour of tomcat/webdav is correct:\n\nAccording to the Servlet Specification 2.3, chapter SRV11.1 and SRV11.2, a URL \nis mapped to an appropriate handler component by trying several matches in a \npredefined order:\n1st: trying an exact URL match\n2nd: longest path match\n3rd: suffix match\n    (here, a .jsp path gets matched, ONLY, if no servlet is matched to a path \nprefix!)\n4th: usual static content, unless a default servlet has been specified.\n\nAlso, in order to wipe out any further misunderstanding concering in how far  \ncontainers may overwrite this behaviour, let me paste the following short \npassage from the spec, that explicitly states that a servlet/jsp container \n(like tomcat) is not allowed to give its .jsp mappings precedence over servlet \nmappings defined by webapps (like the webdav servlet mapping):\n\nSRV.11.2.1 Implicit Mappings\nIf the container has an internal JSP container, the *.jsp extension is mapped \nto it,\nallowing JSP pages to be executed on demand. This mapping is termed an implicit\nmapping. If a *.jsp mapping is defined by the web application, its mapping takes\nprecedence over the implicit mapping.\nA servlet container is allowed to make other implicit mappings as long as\nexplicit mappings take precedence. For example, an implicit mapping of\n*.shtml could be mapped to include functionality on the server.\n\n\n----\n\nThe important phrase is: \"A servlet container is allowed to make other implicit \nmappings as long as explicit mappings take precedence. \".\n\nIt says, that ANY explicit mapping MUST take precedence over ANY implicit \nmapping done within the container. (Whereas the preceding phrase in the spec is \na little bit misleading because one might think that only explicit SUFFIX \nmappings take precedence. However the first statement is only meant as an \nexample.\n\nI must say, that the statement made in the spec is not all too clear and allows \nfor different interpretations. One hint, that underscores my way of \ninterpreting it is, that it would make sense do do it that way! Why should a an \nimplicit jsp mapping made by a container precede settings made by a webapp. \nWhat for?! On the other hand, the example of the webdav servlet clearly shows \nthat the opposite behaviour would be desirable.\n\nAgain, your answer was valuable to me, and it was correct to close this bug \nreport because there is nothing wrong with the webdav servlet, but IF tomcat \nshould REALLY behave as you have suggested, then another bug should be opened \nreporting on the wrong behaviour of tomcat concerning implicit mappings.\n\nWhat's your opinion?", "id": 7528, "time": "2001-11-05T04:31:55Z", "bug_id": 4597, "creation_time": "2001-11-05T04:31:55Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 4597, "attachment_id": null, "text": "The phrase about implicit mappings means this:  if the container establishes an\nimplicit mapping (say, for \"*.shtml\" mapped to a servlet that performs SSI\nprocessing), the application can override this by establishing a mapping for\n\"*.shtml\" to one of your own servlets.  This mapping *replaces* the mapping\nprovided by the container.\n\nIn Tomcat 4, this is accomplished by the order in which config files are\nloaded.  Container default mappings (such as \"*.jsp\" to the JSP servlet) are\nloaded from the \"conf/web.xml\" file first, followed by the application's own\nmappings.  Any application mapping for the same pattern, therefore,\nautomatically overrides the container's defaults.\n\nNote that this is a *replacement* action, not an addition.  In other words, the\napplication is taking complete responsibility for this request.  If you want to\ndo something and then pass the request on to the container's default processing\n(or post-process the response), you should look at using Filters (in servlet\n2.3) instead.\n", "id": 7541, "time": "2001-11-05T08:40:17Z", "creator": "craig.mcclanahan@sun.com", "creation_time": "2001-11-05T08:40:17Z", "is_private": false}, {"count": 4, "tags": [], "creator": "wtff@freenet.de", "attachment_id": null, "id": 7545, "time": "2001-11-05T10:37:58Z", "bug_id": 4597, "creation_time": "2001-11-05T10:37:58Z", "is_private": false, "text": "People, now we got it!\n\nTomcat is correctly dealing with implicit and explicit mappings. The problem \nlies elsewhere.\n(Craig: I'd still say, section SRV.11.2.1 simply means: \"Explicit mappings \nprecede implicit mappings.\" Maybe s.o. should rephrase that in spec 2.4)\n\nLook again at the rules for how a path is mapped:\n1st: trying an exact URL match\n2nd: longest path match\n3rd: suffix match\n4th: usual static content, unless a default servlet has been specified.\n\nNow if there is a servlet mapping for the webdav servlet, then it precedes a \nsuffix mapping for *.jsp.\nIn turn, a *.jsp mapping precedes usual static content and the DEFAULT servlet \nmapping.\nThe webdav servlet is currently mapped to path / so it is the DEFAULT servlet \nand therefore the implicit *.jsp mapping precedes it.\nInstead, one should rather make it the \"ubiquitous servlet\" by mapping it to \npath /* (!!)\nAfter having done this, I was able to edit jsp files as well.\nI don't know if some other behaviour will be corrupted by this change, but \neverything seeems to work fine now."}, {"count": 5, "tags": [], "bug_id": 4597, "is_private": false, "id": 7546, "creation_time": "2001-11-05T10:41:24Z", "time": "2001-11-05T10:41:24Z", "creator": "craig.mcclanahan@sun.com", "text": "If you map \"/*\" to the WebdavServlet, you will probably be able to edit JSP\nfiles, but you won't be able to *run* them, since the \"/*\" mapping overrides the\n\"*.jsp\" mapping.\n", "attachment_id": null}]