[{"count": 0, "tags": [], "creator": "andylehane@hotmail.com", "attachment_id": null, "is_private": false, "id": 34785, "time": "2003-04-09T10:54:52Z", "bug_id": 18850, "creation_time": "2003-04-09T10:54:52Z", "text": "Hi,\n\nWhen using the <vsshistory> task, the user attribute is ignored. I have fixed \nthis locally in the \norg\\apache\\tools\\ant\\taskdefs\\optional\\vss\\MSVSSHISTORY.java file :\n\n    /**\n     * Executes the task.\n     * <p>\n     * Builds a command line to execute ss and then calls Exec's run method\n     * to execute the command line.\n     */\n    public void execute() throws BuildException {\n        Commandline commandLine = new Commandline();\n        int result = 0;\n\n        // first off, make sure that we've got a command and a vssdir and a \nlabel ...\n        if (getVsspath() == null) {\n            String msg = \"vsspath attribute must be set!\";\n            throw new BuildException(msg, location);\n        }\n\n        // now look for illegal combinations of things ...\n\n        // build the command line from what we got the format is\n        // ss History elements [-H] [-L] [-N] [-O] [-V] [-Y] [-#] [-?]\n        // as specified in the SS.EXE help\n        commandLine.setExecutable(getSSCommand());\n        commandLine.createArgument().setValue(COMMAND_HISTORY);\n\n        // VSS items\n        commandLine.createArgument().setValue(getVsspath());\n\n        // -I-\n        commandLine.createArgument().setValue(\"-I-\");  // ignore all errors\n\n        // -V\n        // Label an existing file or project version\n        getVersionDateCommand(commandLine);\n        getVersionLabelCommand(commandLine);\n\n        // -R   \n        if (m_Recursive) {\n            commandLine.createArgument().setValue(FLAG_RECURSION);\n        }\n\n        // -B / -D / -F-\n        if (m_Style.length() > 0) {\n            commandLine.createArgument().setValue(m_Style);\n        }\n\n        // -Y\n        getLoginCommand(commandLine);\n\n        // =======================================================\n        //  ADD THE USER NAME TO THE COMMAND LINE                \n        getUserCommand(commandLine);\n        // =======================================================              \n\n        // -O\n        getOutputCommand(commandLine);\n\n        System.out.println(\"***: \" + commandLine);\n        \n        result = run(commandLine);\n        if (result != 0) {\n            String msg = \"Failed executing: \" + commandLine.toString();\n            throw new BuildException(msg, location);\n        }\n\n    }"}]