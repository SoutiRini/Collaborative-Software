[{"count": 0, "tags": [], "creator": "ognjen.d.blagojevic@gmail.com", "attachment_id": null, "id": 172164, "time": "2014-01-08T09:52:04Z", "bug_id": 55976, "creation_time": "2014-01-08T09:52:04Z", "is_private": false, "text": "Tomcat 7.0.50 (proposed for voting at the time of submitting this issue) with Oracle Java 1.7.0_40 on Win7 64-bit, sometimes returns incorrect response when NIO connector is used.\n\nStart of the report, and steps to reproduce the problem are in this thread:\n\n  http://www.mail-archive.com/dev@tomcat.apache.org/msg80175.html\n\n-Ognjen"}, {"count": 1, "tags": [], "bug_id": 55976, "attachment_id": null, "id": 172165, "creation_time": "2014-01-08T10:20:30Z", "time": "2014-01-08T10:20:30Z", "creator": "ognjen.d.blagojevic@gmail.com", "text": "Java client is used for smoke testing Tomcat 7.0.50. Java client fails with following exception:\n\n====\nException in thread \"main\" java.lang.RuntimeException: java.io.IOException: Invalid Http response\n\tat webcrawler.WebCrawler.getpage(WebCrawler.java:117)\n\tat webcrawler.WebCrawler.repeat(WebCrawler.java:191)\n\tat webcrawler.WebCrawler.main(WebCrawler.java:30)\nCaused by: java.io.IOException: Invalid Http response\n\tat sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1342)\n\tat java.net.URL.openStream(URL.java:1037)\n\tat webcrawler.WebCrawler.getpage(WebCrawler.java:94)\n\t... 2 more\n----\n\n\nRelevant lines from sun.net.www.protocol.http.HttURLConnection.getInputStream:\n\n====\nrespCode = getResponseCode();\nif (respCode == -1) {\n    disconnectInternal();\n    throw new IOException (\"Invalid Http response\");\n}\n----\n\n\nSo, getResponseCode returns -1. Relevant part from sun.net.www.protocol.http.HttURLConnection.getResponseCode():\n\n====\n        /*\n         * Examine the status-line - should be formatted as per\n         * section 6.1 of RFC 2616 :-\n         *\n         * Status-Line = HTTP-Version SP Status-Code SP Reason-Phrase\n         *\n         * If status line can't be parsed return -1.\n         */\n        if (statusLine.startsWith(\"HTTP/1.\")) {\n            int codePos = statusLine.indexOf(' ');\n            if (codePos > 0) {\n\n                int phrasePos = statusLine.indexOf(' ', codePos+1);\n                if (phrasePos > 0 && phrasePos < statusLine.length()) {\n                    responseMessage = statusLine.substring(phrasePos+1);\n                }\n\n                // deviation from RFC 2616 - don't reject status line\n                // if SP Reason-Phrase is not included.\n                if (phrasePos < 0)\n                    phrasePos = statusLine.length();\n\n                try {\n                    responseCode = Integer.parseInt\n                            (statusLine.substring(codePos+1, phrasePos));\n                    return responseCode;\n                } catch (NumberFormatException e) { }\n            }\n        }\n        return -1;\n----\n\nSo it seems that response from Tomcat doesn't contain string \"HTTP/1.\" in the first line.", "is_private": false}, {"count": 2, "attachment_id": 31182, "bug_id": 55976, "text": "Created attachment 31182\nCorrect request and correct response", "id": 172167, "time": "2014-01-08T10:22:11Z", "creator": "ognjen.d.blagojevic@gmail.com", "creation_time": "2014-01-08T10:22:11Z", "tags": [], "is_private": false}, {"count": 3, "tags": [], "creator": "ognjen.d.blagojevic@gmail.com", "attachment_id": 31183, "id": 172168, "time": "2014-01-08T10:23:00Z", "bug_id": 55976, "creation_time": "2014-01-08T10:23:00Z", "is_private": false, "text": "Created attachment 31183\nCorrect request and broken response"}, {"count": 4, "tags": [], "creator": "ognjen.d.blagojevic@gmail.com", "text": "I took localhost dump using RawCap. The dump contains traffic from the smoke testing. I then opened it with wireshark. \n\nIn the dump, there is a number of requests for file prelude.jspf.html:\n\n  \"GET /examples/jsp/jsp2/misc/prelude.jspf.html HTTP/1.1\"\n\nTomcat generally responds correctly, as seen in attachment 31182.\n\nBut, in one request, instead of responding with content from \"prelude.jspf.html\" Tomcat responds with partial content from a different file -- \"/docs/architecture/startup/serverStartup.txt\".\n\nAs one can see in attachment 31183, the response also doesn't contain any header. That is the reason why Java client fails.", "id": 172169, "time": "2014-01-08T10:33:07Z", "bug_id": 55976, "creation_time": "2014-01-08T10:33:07Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 55976, "attachment_id": null, "id": 172171, "creation_time": "2014-01-08T10:44:58Z", "time": "2014-01-08T10:44:58Z", "creator": "markt@apache.org", "text": "Can you provide the source code of the test client you are using so the committers can try and reproduce this?", "is_private": false}, {"count": 6, "tags": [], "creator": "ognjen.d.blagojevic@gmail.com", "attachment_id": 31184, "id": 172172, "time": "2014-01-08T11:15:30Z", "bug_id": 55976, "creation_time": "2014-01-08T11:15:30Z", "is_private": false, "text": "Created attachment 31184\nJava test class\n\nHere is Java class used for testing.\n\nYou should call it with one argument - starting URL (e.g. \"http://localhost:8080/\")\n\nAt the first phase, it crawls all pages starting from the root. During the crawl, Java stack traces for 401s and 404s will be printed on the console, and may be ignored.\n\nAt the second phase, it will repeatedly read all collected URLs, 500 times in a row. In total, it reads around 140k pages. \n\nIf there is an error during the test, exception will be thrown, e.g:\n\n====\nRound: 154 / 500\nRound: 155 / 500\nRound: 156 / 500\nException in thread \"main\" java.lang.RuntimeException: java.io.IOException: Invalid Http response\n\tat webcrawler.WebCrawler.getpage(WebCrawler.java:117)\n\tat webcrawler.WebCrawler.repeat(WebCrawler.java:191)\n\tat webcrawler.WebCrawler.main(WebCrawler.java:30)\nCaused by: java.io.IOException: Invalid Http response\n\tat sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1342)\n\tat java.net.URL.openStream(URL.java:1037)\n\tat webcrawler.WebCrawler.getpage(WebCrawler.java:94)\n\t... 2 more\n----\n\nSometimes exception is thrown after 5k requests, sometimes only after running this test several times.\n\n-Ognjen"}, {"count": 7, "tags": [], "text": "Created attachment 31185\nTCP data log\n\n(In reply to Ognjen Blagojevic from comment #6)\n> Created attachment 31184 [details]\n> Java test class\n\nHi,\n\nI can reproduce the problem with your test class with Tomcat 7.0.50, Tomcat 7.0.47 and Tomcat 8.0.0-RC10 on Windows 8.1 x64 with Java 1.7.0_45.\n\n\nTo provide an additional example of a broken HTTP response, I used a self-written tool to intercept the TCP connections from the Java client to Tomcat and log all data of each TCP connection channel to a file and I attached a Zip file containing the logs of the last few TCP connections.\n\nThe logs of connections 262-267 look normal (each HTTP request is replied to with an HTTP response), but if you look at 268 (where a single HTTP request was sent), Tomcat did not start the reply with an HTTP response, but with some random data chunks that seem to belong to different responses, and later sent the actual HTTP response for the request.", "attachment_id": 31185, "bug_id": 55976, "id": 172188, "time": "2014-01-08T16:22:29Z", "creator": "kpreisser@apache.org", "creation_time": "2014-01-08T16:22:29Z", "is_private": false}, {"count": 8, "tags": [], "creator": "jessh@ptc.com", "text": "(In reply to Konstantin Prei\u00dfer from comment #7)\n> I can reproduce the problem with your test class with Tomcat 7.0.50, Tomcat\n> 7.0.47 and Tomcat 8.0.0-RC10 on Windows 8.1 x64 with Java 1.7.0_45.\n\nSo that's critical information -- this isn't a regression since 7.0.47, i.e. in the 7.0.50 release.  It might be a regression in 7.0.47, but that was already released as stable.", "id": 172189, "time": "2014-01-08T16:36:52Z", "bug_id": 55976, "creation_time": "2014-01-08T16:36:52Z", "is_private": false, "attachment_id": null}, {"count": 9, "attachment_id": null, "bug_id": 55976, "text": "Can someone who has been able to repeat this please test with tomcat/trunk from svn and see if they can still repeat it. I have been trying to repeat this for several hours with no success. I am wondering if the root cause is a bug that has been fixed since the last release.", "id": 172223, "time": "2014-01-09T16:32:05Z", "creator": "markt@apache.org", "creation_time": "2014-01-09T16:32:05Z", "tags": [], "is_private": false}, {"count": 10, "tags": [], "creator": "rainer.jung@kippdata.de", "attachment_id": 31190, "id": 172226, "time": "2014-01-09T17:02:47Z", "bug_id": 55976, "creation_time": "2014-01-09T17:02:47Z", "is_private": false, "text": "Created attachment 31190\nmulti-threaded WebCrawler\n\nSlightly enhanced version of the provided WebCrawler class:\n\n- Params URL ITERATIONS THREADS\n  (crawl recursively starting at URL, retrieve found list of pages ITERATIONS times distributed on THREADS threads)\n- Log timestamp if an error occurs\n- don't convert bytes to strings when in replay mode\n\nExample: \n\n/path/to/bin/java webcrawler.WebCrawler http://myserver:8080/docs/ 1000 10\n\nCode tunables:\n\n    public static final int BUFSZ = 1000; // Buffer size for reading responses\n    public static final int CONNECT_TIMEOUT = 5000; // Connect timeout\n    public static final int READ_TIMEOUT = 30000; // Connect timeout"}, {"count": 11, "tags": [], "bug_id": 55976, "attachment_id": 31191, "id": 172227, "creation_time": "2014-01-09T17:07:28Z", "time": "2014-01-09T17:07:28Z", "creator": "kpreisser@apache.org", "text": "Created attachment 31191\nAlternative Testcase - WAR", "is_private": false}, {"count": 12, "attachment_id": 31192, "bug_id": 55976, "text": "Created attachment 31192\nAlternative Test Case - Java class\n\nHi Mark,\n\n(In reply to Mark Thomas from comment #9)\n> Can someone who has been able to repeat this please test with tomcat/trunk\n> from svn and see if they can still repeat it. I have been trying to repeat\n> this for several hours with no success. I am wondering if the root cause is\n> a bug that has been fixed since the last release.\n\nI could reproduce the issues with Tomcat 8 trunk, SVN r1556836 on Windows 8.1 x64, Java 1.7.0_45 x64.\n\nI uploaded an alternative Testcase which maybe makes reproducing easier - a WAR that contains 100 text files, and a Java class that starts 100 Threads that concurrently download 100 URLs.\n\nNormally, the only things that should be displayed in the console are \"Starting...\" and \"Finished.\". This happens when running with the BIO connector.\n\nHowever, with Tomcat NIO connector, I mostly get exceptions like this:\n\njava.io.IOException: Invalid Http response\n\tat sun.net.www.protocol.http.HttpURLConnection.getInputStream(Unknown Source)\n\tat test.TomcatNioTest.readUrl(TomcatNioTest.java:23)\n\tat test.TomcatNioTest.access$0(TomcatNioTest.java:19)\n\tat test.TomcatNioTest$1.run(TomcatNioTest.java:48)\n\tat java.lang.Thread.run(Unknown Source)\nException in thread \"Thread-93\" java.lang.RuntimeException: Size mismatch for URL http://localhost:8080/testnio/files/TextFile81.txt - Expected: 58003, Got: 65536\n\tat test.TomcatNioTest.readUrl(TomcatNioTest.java:31)\n\tat test.TomcatNioTest.access$0(TomcatNioTest.java:19)\n\tat test.TomcatNioTest$1.run(TomcatNioTest.java:48)\n\tat java.lang.Thread.run(Unknown Source)\n\nAlso, most of the time the program never finishes - it seems Tomcat does not serve some requests.\n\n\nSometimes I also get these Exceptions in Tomcat:\n\n09-Jan-2014 17:40:48.143 SEVERE [http-nio-8080-exec-76] org.apache.coyote.http11.AbstractHttp11Processor.process Error processing request\n java.lang.NullPointerException\n\tat org.apache.coyote.http11.Http11NioProcessor.actionInternal(Http11NioProcessor.java:321)\n\tat org.apache.coyote.http11.AbstractHttp11Processor.action(AbstractHttp11Processor.java:843)\n\tat org.apache.coyote.Request.action(Request.java:381)\n\tat org.apache.catalina.connector.Request.getRemoteAddr(Request.java:1240)\n\tat org.apache.catalina.connector.Request.getRemoteHost(Request.java:1255)\n\tat org.apache.catalina.valves.AccessLogValve$HostElement.addElement(AccessLogValve.java:1366)\n\tat org.apache.catalina.valves.AccessLogValve.log(AccessLogValve.java:963)\n\tat org.apache.catalina.core.AccessLogAdapter.log(AccessLogAdapter.java:51)\n\tat org.apache.catalina.core.ContainerBase.logAccess(ContainerBase.java:1044)\n\tat org.apache.catalina.core.ContainerBase.logAccess(ContainerBase.java:1051)\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:573)\n\tat org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1015)\n\tat org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:646)\n\tat org.apache.coyote.http11.Http11NioProtocol$Http11ConnectionHandler.process(Http11NioProtocol.java:223)\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1576)\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1534)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n\tat java.lang.Thread.run(Thread.java:744)\n\n09-Jan-2014 17:40:48.518 WARNING [http-nio-8080-exec-76] org.apache.catalina.connector.CoyoteAdapter.log Exception while attempting to add an entry to the access log\n java.lang.NullPointerException\n\tat org.apache.coyote.http11.Http11NioProcessor.actionInternal(Http11NioProcessor.java:321)\n\tat org.apache.coyote.http11.AbstractHttp11Processor.action(AbstractHttp11Processor.java:843)\n\tat org.apache.coyote.Request.action(Request.java:381)\n\tat org.apache.catalina.connector.Request.getRemoteAddr(Request.java:1240)\n\tat org.apache.catalina.connector.Request.getRemoteHost(Request.java:1255)\n\tat org.apache.catalina.valves.AccessLogValve$HostElement.addElement(AccessLogValve.java:1366)\n\tat org.apache.catalina.valves.AccessLogValve.log(AccessLogValve.java:963)\n\tat org.apache.catalina.core.AccessLogAdapter.log(AccessLogAdapter.java:51)\n\tat org.apache.catalina.core.StandardEngine.logAccess(StandardEngine.java:344)\n\tat org.apache.catalina.connector.CoyoteAdapter.log(CoyoteAdapter.java:644)\n\tat org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1044)\n\tat org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:646)\n\tat org.apache.coyote.http11.Http11NioProtocol$Http11ConnectionHandler.process(Http11NioProtocol.java:223)\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1576)\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1534)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n\tat java.lang.Thread.run(Thread.java:744)\n\n09-Jan-2014 17:47:37.091 SEVERE [http-nio-8080-ClientPoller-1] org.apache.tomcat.util.net.NioEndpoint.processSocket Error allocating socket processor\n java.lang.NullPointerException\n\tat org.apache.tomcat.util.net.NioEndpoint.processSocket(NioEndpoint.java:622)\n\tat org.apache.tomcat.util.net.NioEndpoint$Poller.processKey(NioEndpoint.java:1144)\n\tat org.apache.tomcat.util.net.NioEndpoint$Poller.run(NioEndpoint.java:1101)\n\tat java.lang.Thread.run(Thread.java:744)", "id": 172228, "time": "2014-01-09T17:07:32Z", "creator": "kpreisser@apache.org", "creation_time": "2014-01-09T17:07:32Z", "tags": [], "is_private": false}, {"count": 13, "attachment_id": null, "bug_id": 55976, "text": "I can reproduce errors even for trunk but there currently only read timeouts. I'm using a relatively slow server and remote access from a more powerful machine using 10 threads in the improved version of the WebCrawler. Crawling the docs/ webapp suffices to produce those read timeouts (30 seconds). The CPU on the server is not fully saturated and other parametrization shows that those requests would hang indefinitely if no timeout were applied.\n\nFor TC 7.0.50 I could also produce other types of errors, but didn't play long enough with trunk.\n\nNot directly related to the read timeout occurences I see on the server side sometimes messages:\n\n09-Jan-2014 17:56:33.691 SEVERE [http-nio-8080-ClientPoller-1] org.apache.tomcat.util.net.NioEndpoint$PollerEvent.run\n java.nio.channels.ClosedChannelException\n        at java.nio.channels.spi.AbstractSelectableChannel.register(AbstractSelectableChannel.java:194)\n        at org.apache.tomcat.util.net.NioEndpoint$PollerEvent.run(NioEndpoint.java:797)\n        at org.apache.tomcat.util.net.NioEndpoint$Poller.events(NioEndpoint.java:925)\n        at org.apache.tomcat.util.net.NioEndpoint$Poller.run(NioEndpoint.java:1085)\n        at java.lang.Thread.run(Thread.java:744)\n\nRegards,\n\nRainer", "id": 172229, "time": "2014-01-09T17:15:13Z", "creator": "rainer.jung@kippdata.de", "creation_time": "2014-01-09T17:15:13Z", "tags": [], "is_private": false}, {"count": 14, "tags": [], "bug_id": 55976, "attachment_id": null, "id": 172230, "creation_time": "2014-01-09T17:19:02Z", "time": "2014-01-09T17:19:02Z", "creator": "rainer.jung@kippdata.de", "text": "When crawling not only /docs but also /examples, I get more types of errors.\n\nIn the access log (non-200, non-302)\n\n195.227.30.185 - - 18:11:12.441 \"GET /docs/cgi-howto.html HTTP/1.1\" 400 -\n- - - 00:59:59.00-1 \"-\" 500 -\n195.227.30.185 - - 18:11:12.895 \"GET /examples/jsp/jsp2/simpletag/book.jsp HTTP/1.1\" 400 951\n195.227.30.185 - - 18:11:13.050 \"GET /examples/jsp/jsp2/simpletag/book.jsp HTTP/1.1\" 400 951\n195.227.30.185 - - 18:11:33.967 \"GET /examples/servlets/nonblocking/numberwriter HTTP/1.1\" 500 49200\n195.227.30.185 - - 18:11:35.036 \"GET /examples/servlets/nonblocking/numberwriter HTTP/1.1\" 500 155800\n- - - 00:59:59.00-1 \"-\" 500 -\n- - - 00:59:59.00-1 \"-\" 400 -\n195.227.30.185 - - 18:11:35.486 \"GET /docs/jspapi/index.html HTTP/1.1\" 400 -\n195.227.30.185 - - 18:11:35.674 \"GET /examples/jsp/jsp2/jspattribute/jspattribute.html HTTP/1.1\" 500 2221\n- - - 00:59:59.00-1 \"-\" 500 -\n195.227.30.185 - - 18:11:35.888 \"GET /docs/config/cluster-valve.html HTTP/1.1\" 400 10669\n195.227.30.185 - - 18:11:35.887 \"GET /docs/config/cluster-valve.html HTTP/1.1\" 400 -\n\netc.\n\nIn the tomcat logs\n\n09-Jan-2014 18:10:40.405 SEVERE [http-nio-8080-ClientPoller-1] org.apache.tomcat.util.net.NioEndpoint$PollerEvent.run\n java.nio.channels.ClosedChannelException\n        at java.nio.channels.spi.AbstractSelectableChannel.register(AbstractSelectableChannel.java:194)\n        at org.apache.tomcat.util.net.NioEndpoint$PollerEvent.run(NioEndpoint.java:797)\n        at org.apache.tomcat.util.net.NioEndpoint$Poller.events(NioEndpoint.java:925)\n        at org.apache.tomcat.util.net.NioEndpoint$Poller.run(NioEndpoint.java:1085)\n        at java.lang.Thread.run(Thread.java:744)\n\n09-Jan-2014 18:11:11.341 SEVERE [http-nio-8080-exec-9] org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process Error reading request, ignored\n java.lang.NullPointerException\n        at org.apache.coyote.http11.Http11NioProtocol$Http11ConnectionHandler.release(Http11NioProtocol.java:243)\n        at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:698)\n        at org.apache.coyote.http11.Http11NioProtocol$Http11ConnectionHandler.process(Http11NioProtocol.java:223)\n        at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1576)\n        at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1534)\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n        at java.lang.Thread.run(Thread.java:744)\n\n09-Jan-2014 18:11:12.450 INFO [http-nio-8080-exec-26] org.apache.coyote.http11.AbstractHttp11Processor.process Error parsing HTTP request header\n Note: further occurrences of HTTP header parsing errors will be logged at DEBUG level.\n09-Jan-2014 18:11:12.745 SEVERE [http-nio-8080-exec-29] org.apache.coyote.http11.AbstractHttp11Processor.process Error processing request\n java.lang.NullPointerException\n        at org.apache.catalina.connector.Request.notifyAttributeAssigned(Request.java:1512)\n        at org.apache.catalina.connector.Request.setAttribute(Request.java:1503)\n        at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:162)\n        at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:76)\n        at org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:934)\n        at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:90)\n        at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:522)\n        at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1015)\n        at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:646)\n        at org.apache.coyote.http11.Http11NioProtocol$Http11ConnectionHandler.process(Http11NioProtocol.java:223)\n        at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1576)\n        at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1534)\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n        at java.lang.Thread.run(Thread.java:744)\n\n09-Jan-2014 18:11:12.752 SEVERE [http-nio-8080-exec-29] org.apache.coyote.http11.AbstractHttp11Processor.endRequest Error finishing response\n java.lang.NullPointerException\n        at org.apache.coyote.http11.InternalNioOutputBuffer.flushBuffer(InternalNioOutputBuffer.java:235)\n        at org.apache.coyote.http11.InternalNioOutputBuffer.addToBB(InternalNioOutputBuffer.java:190)\n        at org.apache.coyote.http11.InternalNioOutputBuffer.access$000(InternalNioOutputBuffer.java:42)\n        at org.apache.coyote.http11.InternalNioOutputBuffer$SocketOutputBuffer.doWrite(InternalNioOutputBuffer.java:321)\n        at org.apache.coyote.http11.filters.ChunkedOutputFilter.end(ChunkedOutputFilter.java:166)\n        at org.apache.coyote.http11.AbstractOutputBuffer.endRequest(AbstractOutputBuffer.java:379)\n        at org.apache.coyote.http11.AbstractHttp11Processor.endRequest(AbstractHttp11Processor.java:1704)\n        at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1071)\n        at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:646)\n        at org.apache.coyote.http11.Http11NioProtocol$Http11ConnectionHandler.process(Http11NioProtocol.java:223)\n        at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1576)\n        at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1534)\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n        at java.lang.Thread.run(Thread.java:744)\n\n...\n\n09-Jan-2014 18:11:33.966 SEVERE [http-nio-8080-exec-9] org.apache.catalina.connector.CoyoteAdapter.asyncDispatch Exception while processing an asynchronous request\n java.lang.IllegalStateException: Calling [asyncTimeout()] is not valid for a request with Async state [READ_WRITE_OP]\n        at org.apache.coyote.AsyncStateMachine.asyncTimeout(AsyncStateMachine.java:265)\n        at org.apache.coyote.http11.AbstractHttp11Processor.action(AbstractHttp11Processor.java:802)\n        at org.apache.coyote.Request.action(Request.java:381)\n        at org.apache.catalina.core.AsyncContextImpl.timeout(AsyncContextImpl.java:139)\n        at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:306)\n        at org.apache.coyote.http11.AbstractHttp11Processor.asyncDispatch(AbstractHttp11Processor.java:1618)\n        at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:640)\n        at org.apache.coyote.http11.Http11NioProtocol$Http11ConnectionHandler.process(Http11NioProtocol.java:223)\n        at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1576)\n        at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1534)\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n        at java.lang.Thread.run(Thread.java:744)\n\n09-Jan-2014 18:11:34.685 SEVERE [http-nio-8080-exec-21] org.apache.catalina.connector.CoyoteAdapter.asyncDispatch Exception while processing an asynchronous request\n java.lang.IllegalStateException: In non-blocking mode you may not write to the ServletOutputStream until the previous write has completed and isReady() returns true\n        at org.apache.catalina.connector.CoyoteOutputStream.checkNonBlockingWrite(CoyoteOutputStream.java:128)\n        at org.apache.catalina.connector.CoyoteOutputStream.write(CoyoteOutputStream.java:96)\n        at org.apache.catalina.connector.CoyoteOutputStream.write(CoyoteOutputStream.java:90)\n        at nonblocking.NumberWriter$NumberWriterListener.onWritePossible(NumberWriter.java:132)\n        at nonblocking.NumberWriter$NumberWriterListener.onAllDataRead(NumberWriter.java:120)\n        at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:391)\n        at org.apache.coyote.http11.AbstractHttp11Processor.asyncDispatch(AbstractHttp11Processor.java:1618)\n        at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:631)\n        at org.apache.coyote.http11.Http11NioProtocol$Http11ConnectionHandler.process(Http11NioProtocol.java:223)\n        at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1576)\n        at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1534)\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n        at java.lang.Thread.run(Thread.java:744)\n\n09-Jan-2014 18:11:34.967 SEVERE [http-nio-8080-exec-20] org.apache.catalina.connector.CoyoteAdapter.asyncDispatch Exception while processing an asynchronous request\n java.lang.IllegalStateException: The request associated with the AsyncContext has already completed processing.\n        at org.apache.catalina.core.AsyncContextImpl.check(AsyncContextImpl.java:532)\n        at org.apache.catalina.core.AsyncContextImpl.complete(AsyncContextImpl.java:91)\n        at nonblocking.NumberWriter$NumberWriterListener.onError(NumberWriter.java:145)\n        at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:395)\n        at org.apache.coyote.http11.AbstractHttp11Processor.asyncDispatch(AbstractHttp11Processor.java:1618)\n        at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:631)\n        at org.apache.coyote.http11.Http11NioProtocol$Http11ConnectionHandler.process(Http11NioProtocol.java:223)\n        at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1576)\n        at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1534)\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n        at java.lang.Thread.run(Thread.java:744)\n\n\n\n...\n\n09-Jan-2014 18:11:36.787 SEVERE [http-nio-8080-exec-4] org.apache.coyote.http11.AbstractHttp11Processor.process Error processing request\n java.lang.NullPointerException\n        at org.apache.tomcat.util.buf.MessageBytes.toChars(MessageBytes.java:228)\n        at org.apache.catalina.mapper.Mapper.map(Mapper.java:665)\n        at org.apache.catalina.connector.CoyoteAdapter.postParseRequest(CoyoteAdapter.java:794)\n        at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:517)\n        at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1015)\n        at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:646)\n        at org.apache.coyote.http11.Http11NioProtocol$Http11ConnectionHandler.process(Http11NioProtocol.java:223)\n        at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1576)\n        at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1534)\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n        at java.lang.Thread.run(Thread.java:744)\n\n\n\nSome of which are possibly because the client calls URLs that it shouldn't.", "is_private": false}, {"count": 15, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "id": 172234, "time": "2014-01-09T19:16:41Z", "bug_id": 55976, "creation_time": "2014-01-09T19:16:41Z", "is_private": false, "text": "(In reply to Konstantin Prei\u00dfer from comment #11)\n> Created attachment 31191 [details]\n> Alternative Testcase - WAR\n\nThanks. I can repeat the problem with that variation of the test case. My testing shows the issue is related to sendFile. If I set useSendFile=\"false\" on the NIO connector everything works as expected. I'm looking at the sendFile code now to see if I can figure out where I (assuming it was me but it is a pretty good bet that it was) broke it."}, {"count": 16, "attachment_id": null, "bug_id": 55976, "text": "Just in case others want to check as well, it is useSendfile=\"false\" (lower case \"file\").\n\nRunning test with my multi-threaded version of the crawler against alls tc webaps right now. Looks better than before, no errors yet, will let it run for another hour or so.", "id": 172241, "time": "2014-01-09T20:37:59Z", "creator": "rainer.jung@kippdata.de", "creation_time": "2014-01-09T20:37:59Z", "tags": [], "is_private": false}, {"count": 17, "tags": [], "text": "I believe I have fixed this in 8.0.x trunk. I'd be grateful if one or more of you who were able to repeat this issue are able to validate (or not) my fix.", "attachment_id": null, "bug_id": 55976, "id": 172247, "time": "2014-01-09T21:33:48Z", "creator": "markt@apache.org", "creation_time": "2014-01-09T21:33:48Z", "is_private": false}, {"count": 18, "tags": [], "creator": "ognjen.d.blagojevic@gmail.com", "attachment_id": null, "id": 172249, "time": "2014-01-10T00:07:29Z", "bug_id": 55976, "creation_time": "2014-01-10T00:07:29Z", "is_private": false, "text": "So far so good. Tomcat 8 trunk (r1556957) works for me. No exception on client side, or in server logs, no HTTP 500 errors."}, {"count": 19, "tags": [], "creator": "rainer.jung@kippdata.de", "attachment_id": null, "id": 172251, "time": "2014-01-10T00:20:48Z", "bug_id": 55976, "creation_time": "2014-01-10T00:20:48Z", "is_private": false, "text": "Looks promising. I did not get any errors with sendfile turned off and 50000 iterations distributed on 20 threads. I now run the recent trunk with your fix again with 20 threads and the first 2000 iterations are good. I'll let it run until 50000 and will check tomorrow whether 7.0.50 runs without problems when switching off sendfile.!gre"}, {"count": 20, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "id": 172260, "time": "2014-01-10T08:42:25Z", "bug_id": 55976, "creation_time": "2014-01-10T08:42:25Z", "is_private": false, "text": "Fixed applied to 7.0.x for 7.0.51 onwards."}, {"count": 21, "tags": [], "bug_id": 55976, "attachment_id": null, "text": "(In reply to Mark Thomas from comment #20)\n> Fixed applied to 7.0.x for 7.0.51 onwards.\n\nTomcat 7.0.x trunk also works correctly. I'm closing this bug.", "id": 172276, "time": "2014-01-10T19:51:38Z", "creator": "ognjen.d.blagojevic@gmail.com", "creation_time": "2014-01-10T19:51:38Z", "is_private": false}]