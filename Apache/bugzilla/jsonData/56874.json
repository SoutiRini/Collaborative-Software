[{"count": 0, "tags": [], "creator": "christian@kohlschutter.com", "text": "(using 3.10.1)\n\nWith the introduction of the entity expansion limit, I am seeing the following output in STDERR (System.err):\n\n[Fatal Error] :1:1: JAXP00010001: The parser has encountered more than \"4096\" \nentity expansions in this document; this is the limit imposed by the JDK.\n\nThis message should not appear in the System.err. It should either be handled via an ErrorHandler, or be logged through a logging framework.\n\nAs we can see from the stack trace, the culprit is in org.apache.poi.xssf.eventusermodel.ReadOnlySharedStringsTable, which does not initialize an error handler. It would probably be sufficient to call sheetParser.setErrorHandler(this) and let the calling library handle this case by extending ReadOnlySharedStringsTable (it already extends DefaultHandler).\n\n\tat java.io.FilterOutputStream.write(FilterOutputStream.java:125)\n\tat java.io.PrintStream.write(PrintStream.java:480)\n\tat sun.nio.cs.StreamEncoder.writeBytes(StreamEncoder.java:221)\n\tat sun.nio.cs.StreamEncoder.implFlushBuffer(StreamEncoder.java:291)\n\tat sun.nio.cs.StreamEncoder.implFlush(StreamEncoder.java:295)\n\tat sun.nio.cs.StreamEncoder.flush(StreamEncoder.java:141)\n\tat java.io.OutputStreamWriter.flush(OutputStreamWriter.java:229)\n\tat java.io.BufferedWriter.flush(BufferedWriter.java:254)\n\tat java.io.PrintWriter.flush(PrintWriter.java:320)\n\tat com.sun.org.apache.xerces.internal.util.DefaultErrorHandler.printError(DefaultErrorHandler.java:112)\n\tat com.sun.org.apache.xerces.internal.util.DefaultErrorHandler.fatalError(DefaultErrorHandler.java:84)\n\tat com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:441)\n\tat com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:368)\n\tat com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:325)\n\tat com.sun.org.apache.xerces.internal.impl.XMLEntityManager.startEntity(XMLEntityManager.java:1302)\n\tat com.sun.org.apache.xerces.internal.impl.XMLEntityManager.startEntity(XMLEntityManager.java:1227)\n\tat com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanEntityReference(XMLDocumentFragmentScannerImpl.java:1907)\n\tat com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.next(XMLDocumentFragmentScannerImpl.java:3051)\n\tat com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next(XMLDocumentScannerImpl.java:606)\n\tat com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.next(XMLNSDocumentScannerImpl.java:117)\n\tat com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:510)\n\tat com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:848)\n\tat com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:777)\n\tat com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:141)\n\tat com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.parse(AbstractSAXParser.java:1213)\n\tat com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser.parse(SAXParserImpl.java:648)\n\tat org.apache.poi.xssf.eventusermodel.ReadOnlySharedStringsTable.readFrom(ReadOnlySharedStringsTable.java:140)\n\tat org.apache.poi.xssf.eventusermodel.ReadOnlySharedStringsTable.<init>(ReadOnlySharedStringsTable.java:111)\n\tat org.apache.tika.parser.microsoft.ooxml.XSSFExcelExtractorDecorator.buildXHTML(XSSFExcelExtractorDecorator.java:100)\n\tat org.apache.tika.parser.microsoft.ooxml.AbstractOOXMLExtractor.getXHTML(AbstractOOXMLExtractor.java:104)\n\tat org.apache.tika.parser.microsoft.ooxml.OOXMLExtractorFactory.parse(OOXMLExtractorFactory.java:112)\n\tat org.apache.tika.parser.microsoft.ooxml.OOXMLParser.parse(OOXMLParser.java:82)", "id": 177275, "time": "2014-08-19T22:39:32Z", "bug_id": 56874, "creation_time": "2014-08-19T22:39:32Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "text": "I'll leave one of our xml experts to decide on the best way to handle this\n\nHowever... Shared Strings tables are workbook wide, and can be read independently of any given sheet. As such, there's often no sheet object on hand to report an error through, so I'm not sure your suggested solution will work", "is_private": false, "bug_id": 56874, "id": 177277, "time": "2014-08-20T07:01:09Z", "creator": "apache@gagravarr.org", "creation_time": "2014-08-20T07:01:09Z", "attachment_id": null}, {"count": 2, "tags": [], "text": "In Solr, we have http://lucene.apache.org/solr/4_9_0/solr-solrj/org/apache/solr/common/util/XMLErrorLogger.html\n\nThis class is set as ErrorHandler when we setup the XMLReader.", "is_private": false, "bug_id": 56874, "id": 177278, "time": "2014-08-20T07:06:41Z", "creator": "uwe@thetaphi.de", "creation_time": "2014-08-20T07:06:41Z", "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 56874, "attachment_id": null, "text": "> As such, there's often no sheet object on hand to report an error through, so I'm not sure your suggested solution will work\n\nBut we can use the official logging framework of POI, like in Solr.\n\nBut as this is a fatal error, you will get the Exception explaining the parse problem in your calling code, so where is the problem?", "id": 177279, "time": "2014-08-20T07:25:15Z", "creator": "uwe@thetaphi.de", "creation_time": "2014-08-20T07:25:15Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 56874, "is_private": false, "text": "I tried to reproduce this with the latest 4.0.0-SNAPSHOT version but could not, maybe some of the changes that we did over time already fixed this. If you still see this, please provide a small unit-test which shows the problem so we can more easily reproduce and fix it.", "id": 201089, "time": "2017-09-22T15:30:22Z", "creator": "dominik.stadler@gmx.at", "creation_time": "2017-09-22T15:30:22Z", "attachment_id": null}]