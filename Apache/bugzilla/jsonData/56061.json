[{"count": 0, "tags": [], "bug_id": 56061, "text": "Internet Explorer 11 with a client side certificate does not authenticate with Apache 2.2.26. \n\nIE 11 does allow the user to select their certificate but somewhere in the handshake Apache 2.2.26 doesn't receive it.\n\nIE 10 and older, Firefox and Chrome all play nice, it's only IE 11. When TLSv1.2 is disabled in IE 11 Apache authenticates the client side certificate. When Apache is downgraded to 2.2.19 and TLSv1.2 is enabled in IE 11 Apache authenticates the client side certificate.\n\nI enabled debug logging for SSL connections and we expect to see the following when the certificate is selected by the user from Internet Explorer:\n\n[Thu Jan 23 14:41:11 2014] [debug] ssl_engine_io.c(1897): OpenSSL: read 1455/2147 bytes from BIO#7f78b5741440 [mem: 7f78b578f6c5] (BIO dump follows) \n\nBut we see the following instead:\n\n[Thu Jan 23 14:38:21 2014] [debug] ssl_engine_io.c(1939): OpenSSL: read 269/269 bytes from BIO#7f3a26f83b20 [mem: 7f3a26f73958] (BIO dump follows) \n\nWhere it only received 269 bytes instead of the 2147 bytes that makes up the client side certificate.", "id": 172672, "time": "2014-01-24T13:21:34Z", "creator": "luke.huxley@cloudpay.net", "creation_time": "2014-01-24T13:21:34Z", "is_private": false, "attachment_id": null}, {"count": 1, "attachment_id": null, "creator": "covener@gmail.com", "text": "What is your servers certificate chain comprised of (signature alg)\nWhat is the signature algorithm of your client certificate?\nCan you confirm with wireshark that the client never put its certificate on the wire?\n\nI know IE10+ w/ TLS1.2 won't accept md2 or md5 anywhere in the servers cert chain, and also that TLS1.2 has a way for peers to  tell eachother what sigalgs are acceptable.  But I didn't think that was used for client cert selection.", "id": 172674, "time": "2014-01-24T14:21:53Z", "bug_id": 56061, "creation_time": "2014-01-24T14:21:53Z", "tags": [], "is_private": false}, {"count": 2, "attachment_id": 31252, "creator": "luke.huxley@cloudpay.net", "text": "Created attachment 31252\nWireshark TLS 1.2 handshake between IE 11 and Apache 2.2.26\n\nThe root CA's signature algorithm is SHA1 with RSA but both the intermediate CA that validates the client certificate and the client certificates are MD5 with RSA.\n\nI've compared a TLS 1.0 handshake between Firefox and my web server with a TLS 1.2 handshake between IE 11 and my web server and, although I can see the client certificate being sent from FF, I can not see IE 11 sending the client certificate. \n\nI've attached the Wireshark SSL packets between IE 11 and Apache 2.2.26 to this bug as I may be wrong and the client certificate is sent.", "id": 172677, "time": "2014-01-24T16:17:04Z", "bug_id": 56061, "creation_time": "2014-01-24T16:17:04Z", "tags": [], "is_private": false}, {"attachment_id": null, "tags": [], "creator": "covener@gmail.com", "is_private": false, "count": 3, "id": 172678, "time": "2014-01-24T16:49:01Z", "bug_id": 56061, "creation_time": "2014-01-24T16:49:01Z", "text": "(In reply to Luke Huxley from comment #2)\n> Created attachment 31252 [details]\n> Wireshark TLS 1.2 handshake between IE 11 and Apache 2.2.26\n> \n> The root CA's signature algorithm is SHA1 with RSA but both the intermediate\n> CA that validates the client certificate and the client certificates are MD5\n> with RSA.\n\nCan you even handshake w/o client authentication from IE11 with that cert chain under TLS1.2?"}, {"count": 4, "attachment_id": null, "creator": "luke.huxley@cloudpay.net", "text": "Without SSLVerifyClient, yes, TLS 1.2 will handshake. It's the end of the day for me now but I will create an SHA1 only chain for client side validation to see if that allow a handshake. \n\nIf it turns out that SHA1 > MD5 signature chain is the a cause then my problem is that we've distributed a couple of hundred user certificates over several years generated from that intermediate CA and will have to redo all of those client certificates.", "id": 172679, "time": "2014-01-24T17:34:48Z", "bug_id": 56061, "creation_time": "2014-01-24T17:34:48Z", "tags": [], "is_private": false}, {"count": 5, "tags": [], "bug_id": 56061, "is_private": false, "text": "(In reply to Luke Huxley from comment #0)\n> Internet Explorer 11 with a client side certificate does not authenticate\n> with Apache 2.2.26. \n> \n> IE 11 does allow the user to select their certificate but somewhere in the\n> handshake Apache 2.2.26 doesn't receive it.\n> \n> IE 10 and older, Firefox and Chrome all play nice, it's only IE 11. When\n> TLSv1.2 is disabled in IE 11 Apache authenticates the client side\n> certificate. When Apache is downgraded to 2.2.19 and TLSv1.2 is enabled in\n> IE 11 Apache authenticates the client side certificate.\n> \n\nAre you sure that you use TLSv1.2 with 2.2.19? IMHO TLSv1.2 is not support with 2.2.19\n\nAlso can you compare the logs when you use FF with TLSv1.2 and 2.2.26 to IE11 with TLSv1.2 and 2.2.26?", "id": 172680, "time": "2014-01-24T18:13:27Z", "creator": "rpluem@apache.org", "creation_time": "2014-01-24T18:13:27Z", "attachment_id": null}, {"count": 6, "attachment_id": null, "creator": "rpluem@apache.org", "text": "(In reply to Luke Huxley from comment #2)\n> Created attachment 31252 [details]\n> Wireshark TLS 1.2 handshake between IE 11 and Apache 2.2.26\n> \n> The root CA's signature algorithm is SHA1 with RSA but both the intermediate\n> CA that validates the client certificate and the client certificates are MD5\n> with RSA.\n> \n> I've compared a TLS 1.0 handshake between Firefox and my web server with a\n> TLS 1.2 handshake between IE 11 and my web server and, although I can see\n> the client certificate being sent from FF, I can not see IE 11 sending the\n> client certificate. \n> \n> I've attached the Wireshark SSL packets between IE 11 and Apache 2.2.26 to\n> this bug as I may be wrong and the client certificate is sent.\n\nLooks like IE11 is not sending a client cert for whatever reason.", "id": 172681, "time": "2014-01-24T18:19:10Z", "bug_id": 56061, "creation_time": "2014-01-24T18:19:10Z", "tags": [], "is_private": false}, {"count": 7, "attachment_id": 31275, "creator": "luke.huxley@cloudpay.net", "text": "Created attachment 31275\nWireshark of Firefox with TLS 1.2\n\nI've attached a Wireshark packet capture of Firefox negotiating with Apache 2.2.26 with TLS 1.2 successfully, this problem seems to be related to IE11 only.", "id": 172820, "time": "2014-01-31T10:01:39Z", "bug_id": 56061, "creation_time": "2014-01-31T10:01:39Z", "tags": [], "is_private": false}, {"count": 8, "attachment_id": null, "creator": "luke.huxley@cloudpay.net", "text": "I've test IE11 against a web server with a verified CA and site certificate and also a self signed certificate that has a SHA1 signature that user certificates will authenticate against.\n\nIE11 successfully authenticates the user cert over TLS 1.2 against that self signed SHA1 certificate.\n\nIt would seem the problem might be in the SHA > MD5 signed chain. Interesting how Firefox with TLS 1.2 is able to authenticate the client side cert but IE11 is not.", "id": 172824, "time": "2014-01-31T13:38:39Z", "bug_id": 56061, "creation_time": "2014-01-31T13:38:39Z", "tags": [], "is_private": false}, {"count": 9, "tags": [], "creator": "covener@gmail.com", "attachment_id": null, "is_private": false, "id": 172825, "time": "2014-01-31T14:29:06Z", "bug_id": 56061, "creation_time": "2014-01-31T14:29:06Z", "text": "marking as invalid for httpd, if some investigation with MSIE turns up a httpd protocol bug, please reopen."}, {"count": 10, "attachment_id": null, "creator": "luke.huxley@cloudpay.net", "text": "Thanks Eric, hopefully Microsoft will move faster than their normal pace on this.\n\nMy way of connecting to Microsoft is through their Internet Explorer feedback site, Microsoft Connect:\n\nhttp://connect.microsoft.com/IE/feedback/details/812229/client-side-certificates-no-longer-being-presented-to-web-server-intermittent", "id": 172826, "time": "2014-01-31T14:49:49Z", "bug_id": 56061, "creation_time": "2014-01-31T14:49:49Z", "tags": [], "is_private": false}, {"count": 11, "tags": [], "bug_id": 56061, "is_private": false, "text": "In a related thread it was mentioned that changing the order of supported signature algorithms might help some IE/Applet SSL errors. This is possible with http://httpd.apache.org/docs/2.4/mod/mod_ssl.html#sslopensslconfcmd", "id": 178580, "time": "2014-10-18T11:34:59Z", "creator": "covener@gmail.com", "creation_time": "2014-10-18T11:34:59Z", "attachment_id": null}]