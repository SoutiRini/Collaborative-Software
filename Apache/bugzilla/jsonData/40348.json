[{"count": 0, "tags": [], "bug_id": 40348, "text": "Say you use apr_reslist_xxx function set and configure a pool of connections \nto a back-end system: hmax set to 100, smax set to 25 and ttl set to 300 \n(seconds).\n\nNow, imagine the following usual scenario:\n1/ your normal load is such that no more than 10 connections are required at a \ntime\n2/ once a day, you experiment peak loads that forces the pool to grow to 50 \nconnections for say an hour\n\nOne would expect the pool to shrink back to 25 connections (smax setting) when \nload has returned back to normal. It will not.\n\nThis is due to the way the pool is used: acquire will pop a connection from \nthe list (first entry) and release will push connection back to the list \n(added to the tail).\n=> if your load is such that you use all connections in the pool within ttl \nsetting, then pool will never shrink\n=> pool will shring only if you experiment no load for the ttl setting (and we \nusually hope to have far more)\n\nIf release was adding the connection back to the head of the pool, then pool \nsize regulation can occur (reslit_maint function will have to be updated to \nstart looking at entries at the tail of the ring).\n=> this way, if no more than 10 connections are used at a time, then only the \nfirst 10 connections in the pool will be used and the maintenance routine will \nclean the all but first 25 connections.\n\nBy the way, i would actually change the reslit management such that:\n- ttl setting would mean \"maximum time a resource may stay in the pool\" \n(closer to time to live meaning)\n- inactivity setting would mean \"release resource if not used with the timeout \nspecified\n\nI would like to contribute a patch for this but don't know how to handle the \nchange in the API if ttl/inactivity are to be handled. Would like your \nsuggestions on this. Mine follows:\n- keep the current apr_reslist_create API as is but make the original ttl \nsetting to match new \"inactivy\" setting (this is probably what users of the \nAPI have though of it)\n- provide an additional function call to set the ttl setting if needed by \nsomeone\n\nThis would then ensure Apache httpd mod_dbd and mod_proxy (which uses reslist) \ndo provide a load adaptive service.", "id": 92678, "time": "2006-08-29T16:44:53Z", "creator": "christian_boitel@yahoo.fr", "creation_time": "2006-08-29T16:44:53Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "creator": "rpluem@apache.org", "attachment_id": null, "text": "I do not want to discourage you, but please discuss this on dev@apr.apache.org.\nBugzilla is the wrong place to do this.", "id": 92688, "time": "2006-08-29T19:47:30Z", "bug_id": 40348, "creation_time": "2006-08-29T19:47:30Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 40348, "is_private": false, "text": "I consider the fact that pool size regulation cannot occur as a bug: this is \nwhy i logged it to bugzilla. To fix this one, i can provide a quick patch \nwhich simply makes sure released pool object are added first in the list \ninstead of being tailed.\n\nOtherwise, you are right when considering discussion on API changes to \nimplement a ttl/inactivity scheme: i will take some time posting discussion on \nthe dev list.", "id": 92782, "time": "2006-08-31T06:36:23Z", "creator": "christian_boitel@yahoo.fr", "creation_time": "2006-08-31T06:36:23Z", "attachment_id": null}, {"count": 3, "tags": [], "creator": "rpluem@apache.org", "is_private": false, "id": 106375, "attachment_id": null, "bug_id": 40348, "creation_time": "2007-08-06T04:35:05Z", "time": "2007-08-06T04:35:05Z", "text": "As discussed on http://www.mail-archive.com/dev@apr.apache.org/msg18448.html\ncommitted the patch to trunk as r563103\n(http://svn.apache.org/viewvc?view=rev&rev=563103)."}, {"count": 4, "tags": [], "bug_id": 40348, "text": "Backported to 1.2.x as r565277 (http://svn.apache.org/viewvc?view=rev&rev=565277).", "id": 106684, "time": "2007-08-13T02:12:07Z", "creator": "rpluem@apache.org", "creation_time": "2007-08-13T02:12:07Z", "is_private": false, "attachment_id": null}]