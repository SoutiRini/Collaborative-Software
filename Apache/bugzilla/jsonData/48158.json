[{"count": 0, "tags": [], "bug_id": 48158, "attachment_id": null, "id": 131786, "time": "2009-11-07T08:09:26Z", "creator": "hauser@acm.org", "creation_time": "2009-11-07T08:09:26Z", "is_private": false, "text": "in http://tomcat.apache.org/tomcat-5.5-doc/ssl-howto.html#Miscellaneous%20Tips%20and%20Bits\n\n1) put a warning that not using clientAuth=false and using \n   <url-pattern>/something</url-pattern> is harmful\n2) describe how to turn off TLS re-negotiation\n\nsee also  Bug 48157 and  Bug 34643 and http://forums.sun.com/thread.jspa?messageID=10857837"}, {"text": "Agreed the warning needs to go out although the docs aren't the best place for it. Please join the discussion on the dev list.", "tags": [], "creator": "markt@apache.org", "attachment_id": null, "count": 1, "id": 131790, "time": "2009-11-07T09:10:34Z", "bug_id": 48158, "creation_time": "2009-11-07T09:10:34Z", "is_private": false}, {"count": 2, "attachment_id": null, "bug_id": 48158, "is_private": false, "id": 131814, "time": "2009-11-09T04:07:54Z", "creator": "hauser@acm.org", "creation_time": "2009-11-09T04:07:54Z", "tags": [], "text": "tomcat-dev-list:> BIO/NIO connectors using JSSE.\n> Vulnerable when renegotiation is triggered by the client or server.\n> We could prevent server initiated renegotiation (and probably break \n> the majority of configurations using CLIENT-CERT).\nCouldn't you make this an optional server.xml attribute where each site can decide whether to use it or not (i.e. test themselves whether it affects them or not). We are quite advanced on migrating our site away from sub-directory/url-pattern based renegotiation. So, having Coyote not allowing for re-negotiation would be a great benefit for us and we obviously would report on difficulties we and our users encounter to optimize this approach!\n> We can't do anything to prevent client initiated renegotiation.\nSure, but closing 2 out of 3 attack vectors is at least something, isn't it?"}, {"count": 3, "tags": [], "bug_id": 48158, "attachment_id": null, "id": 131820, "time": "2009-11-09T06:15:15Z", "creator": "markt@apache.org", "creation_time": "2009-11-09T06:15:15Z", "is_private": false, "text": "(In reply to comment #2)\n> Couldn't you make this an optional server.xml attribute\nSee the clientAuth connector attribute for options already available for limiting server side re-negotiation.\n\n> > We can't do anything to prevent client initiated renegotiation.\n> Sure, but closing 2 out of 3 attack vectors is at least something, isn't it?\nIn this case, I don't think it is. However, the options are already in place if you wish to use them."}, {"count": 4, "tags": [], "bug_id": 48158, "is_private": false, "text": "see also http://marc.info/?t=125761336000001&r=1&w=2", "id": 131905, "time": "2009-11-12T08:59:24Z", "creator": "hauser@acm.org", "creation_time": "2009-11-12T08:59:24Z", "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 48158, "attachment_id": null, "text": "(In reply to comment #3)\n> > Couldn't you make this an optional server.xml attribute\n> See the \"clientAuth\" connector attribute for options already available for\n> limiting server side re-negotiation.\nHmm, the word \"re-negotiation\" doesn't really appear in http://tomcat.apache.org/tomcat-5.5-doc/ssl-howto.html#Edit%20the%20Tomcat%20Configuration%20File for the attribute nor does one know whether it is a mandatory or optional attribute (same for \"truststoreFile\" - is there a \"*\" wildcard option to accept any issuer?).\n\n> > > We can't do anything to prevent client initiated renegotiation.\n> > Sure, but closing 2 out of 3 attack vectors is at least something, isn't it?\n> In this case, I don't think it is. However, the options are already in place \n> if you wish to use them.\nlooking at org.apache.tomcat.util.net.jsse.JSSESupport.getPeerCertificateChain(boolean force), I see \n\nif(jsseCerts.length <= 0 && force) {\n     session.invalidate();\n     handShake();\n     session = ssl.getSession();\n }\n\nisn't that the renegotiation we want to avoid?\n\nShouldn't this now be commented out for the time being?\n(One scenario being that an MITM attacker in the handshake eliminates the optional \"CertificateRequest*\" as per section \"7.3. Handshake Protocol overview\n\" http://www.ietf.org/rfc/rfc2246.txt\nWith that the client might first do a non-client-cert SSL session and the server might soon notice and trigger a TLS-re-handshake [just speculating...])\n\nAt least the javax.net.ssl.SSLSocket.startHandshake() executed inside the above \"handShake()\" doesn't dissipate my suspicions that there may be a problem:\n\n/**\n     * Starts an SSL handshake on this connection.\n     */\n    public void startHandshake() throws IOException {\n\tcheckWrite();\n\ttry {\n\t    if (getConnectionState() == cs_HANDSHAKE) {\n\t\t// do initial handshake\n\t\tperformInitialHandshake();\n\t    } else {\n\t\t// start renegotiation\n\t\tkickstartHandshake();\n\t    }\n\t} catch (Exception e) {\n\t    // shutdown and rethrow (wrapped) exception as appropriate\n\t    handleException(e);\n\t}\n    }\n\nbut maybe http://marc.info/?l=tomcat-dev&m=125796482429041&w=2 got there too...", "id": 131907, "time": "2009-11-12T09:52:53Z", "creator": "hauser@acm.org", "creation_time": "2009-11-12T09:52:53Z", "is_private": false}, {"count": 6, "tags": [], "bug_id": 48158, "attachment_id": null, "is_private": false, "id": 131921, "time": "2009-11-13T01:40:04Z", "creator": "hauser@acm.org", "creation_time": "2009-11-13T01:40:04Z", "text": "see also Bug 48192"}, {"count": 7, "tags": [], "bug_id": 48158, "is_private": false, "text": "Created attachment 24542\npatch_48158_c5_wildCard.txt\n\nI have come up with a patch to allow accepting any client certificate on a per Connector basis.\n\nIn server.xml the following attribute should be added in the Connector element:\n\n<Connector ... acceptAllCerts=\"true\"/>\n\nIf this argument is present and set to true or yes, then the AcceptAllTrustManager will be used as Trust Manager.", "id": 132009, "time": "2009-11-16T06:25:22Z", "creator": "moreira@privasphere.com", "creation_time": "2009-11-16T06:25:22Z", "attachment_id": 24542}, {"count": 8, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "id": 132010, "time": "2009-11-16T06:37:25Z", "bug_id": 48158, "creation_time": "2009-11-16T06:37:25Z", "is_private": false, "text": "(In reply to comment #7)\n> I have come up with a patch to allow accepting any client certificate on a per\n> Connector basis.\n\nPlease don't hijack an unrelated bug report. You should create a new issue (mark it as an enhancement request) and attach your patch to the new issue."}, {"count": 9, "tags": [], "bug_id": 48158, "attachment_id": 24542, "is_private": false, "id": 132028, "time": "2009-11-17T00:47:30Z", "creator": "hauser@acm.org", "creation_time": "2009-11-17T00:47:30Z", "text": "Comment on attachment 24542\npatch_48158_c5_wildCard.txt\n\nnew is attachment (id=24546) in bug 48208\n\n(I had raised her \"wildcard\" argument in comment 5, so I don't feel 'hijacked', but I agree with Mark that it might benefit from being an issue on its own)"}, {"text": "The warning has already gone out to users@, dev@ and announce@\n\nThe actual patch is currently being tracked in bug48236. That eventual patch for bug48236 will be ported to 5.5.x and 6.0.x.\n\n*** This bug has been marked as a duplicate of bug 48236 ***", "tags": [], "creator": "markt@apache.org", "is_private": false, "count": 10, "id": 132148, "time": "2009-11-19T13:38:59Z", "bug_id": 48158, "creation_time": "2009-11-19T13:38:59Z", "attachment_id": null}]