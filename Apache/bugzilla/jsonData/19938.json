[{"count": 0, "tags": [], "creator": "rob@casabyte.com", "attachment_id": null, "text": "[NOTE: tested on linux only, I don't have a suitable Windows test environment.]\n\nThis is a basic enhancement to the mod_access module.  It consists of ten lines\nof new code which adds \"Here\" as a wildcard word (like \"all\") as a fourth option\nto the Allow/Deny stanza.  (Better minds than mine may think of a better word\nfor this than \"here\" but most of the ones I could think of [e.g. 'this',\n'server', etc.] didn't read as well or might be encounterd as host names. 8-)\n\nWhat this does:\n\nThe \"here\" wildcard word allows (or denies) access if the remote and local\naddresses of the connection are the same according to apr_sockaddr_equal().\n\nWhy Bother:\n\nAn interesting number of problems, particularly within PHP programs, involve the\nserver fetching pages from itself.  A larger set of less-interesting problems\ninvolve wanting to make a page or resource available on \"this here local\nmachine\" (only or aditionally).  The existing methodologies available for\nisolating these loop-back connections were limited or cumbersome or error prone.\n\nIn particular, using \"Allow from Here\" preserves the loopback-only intent across\nNFS mounted volumes when used in .htaccess files, virtual host configurations,\nsystem configuration changes, and DHCP style address assignments.  Using \"allow\nfrom host.domain.tld\", \"allow from 127.0.0.1\", and \"allow from\n(explicit_ip_address)\" each have issues.\n\nExample (of moderate complexity):\n\n(in httpd.conf)\n<Directory \"/usr/local/apache2/cgi-bin\">\n  Satsify any\n  Order allow,deny\n  Allow from here\n  Authtype basic\n  require valid-user\n  AuthUserFile /some/file\n  AuthName \"Direct CGI Access\"\n</Directory>\n\nThe cgi-bin directory will now generally require an basic authentication login\nto access from any remote host.  Local users can run the CGI \"directly\" without\nauthenticating themselves.  More interestingly, a PHP page can run the cgi\nprograms using open(\"http://\".$_SERVER[\"SERVER_NAME\"].\"/cgi-bin/DoWhatever\" (or\nsimilar variants) *WITHOUT* the user doing the basic authentication steps.\n\n\"Allow from localhost\" isn't enough to net this last feature because the PHP\nscript, even when calling to localhost, calls \"from\" the servers explicit\nlistening interface.\n\nThis is also a safe comparison metric as the IP addresses are resolved within\nthe server, making the test particularly resistent to DNS spoofing etc.\n\nAs an added bonus, the test relies completely on the mature and feature-rich\ncomparison function already existent within the api.\n\nRobert White\nCasabyte, Inc.\nRenton, WA. USA\n\n\n--- mod_access-old.c    2003-05-14 17:54:45.000000000 -0700\n+++ mod_access.c        2003-05-14 17:37:37.000000000 -0700\n@@ -87,6 +87,7 @@\n     T_ALL,\n     T_IP,\n     T_HOST,\n+    T_HERE,\n     T_FAIL\n };\n \n@@ -173,6 +174,9 @@\n     else if (!strcasecmp(where, \"all\")) {\n        a->type = T_ALL;\n     }\n+    else if (!strcasecmp(where, \"here\")) {\n+       a->type = T_HERE;\n+    }\n     else if ((s = strchr(where, '/'))) {\n         *s++ = '\\0';\n         rv = apr_ipsubnet_create(&a->x.ip, where, s, cmd->pool);\n@@ -259,6 +263,12 @@\n        case T_ALL:\n            return 1;\n \n+       case T_HERE:\n+            if (apr_sockaddr_equal(r->connection->local_addr,\nr->connection->remote_addr)) {\n+                return 1;\n+            }\n+            break;\n+\n        case T_IP:\n             if (apr_ipsubnet_test(ap[i].x.ip, r->connection->remote_addr)) {\n                 return 1;", "id": 37239, "time": "2003-05-15T02:42:28Z", "bug_id": 19938, "creation_time": "2003-05-15T02:42:28Z", "is_private": false}, {"count": 1, "tags": [], "text": "Created attachment 6379\nPatch from Text, without word-wrap problems", "attachment_id": 6379, "bug_id": 19938, "id": 37289, "time": "2003-05-15T21:40:17Z", "creator": "rob@casabyte.com", "creation_time": "2003-05-15T21:40:17Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 19938, "attachment_id": null, "id": 47815, "time": "2003-11-21T17:31:26Z", "creator": "trawick@apache.org", "creation_time": "2003-11-21T17:31:26Z", "is_private": false, "text": "I'm going through the bug db to make sure patches are findable.  Please see \nhttp://httpd.apache.org/dev/patches.html\n"}, {"count": 3, "tags": [], "text": "added as 'Require local' authz provider to trunk in r1001207", "attachment_id": null, "id": 140170, "creator": "sf@sfritsch.de", "time": "2010-09-25T11:19:19Z", "bug_id": 19938, "creation_time": "2010-09-25T11:19:19Z", "is_private": false}, {"count": 4, "tags": [], "creator": "sf@sfritsch.de", "attachment_id": null, "text": "fixed in 2.4.1", "id": 154167, "time": "2012-02-26T16:28:52Z", "bug_id": 19938, "creation_time": "2012-02-26T16:28:52Z", "is_private": false}]