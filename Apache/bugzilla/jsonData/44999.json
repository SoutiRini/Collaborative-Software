[{"count": 0, "tags": [], "creator": "giedrius.noreikis@gmail.com", "attachment_id": null, "id": 116619, "time": "2008-05-14T17:38:08Z", "bug_id": 44999, "creation_time": "2008-05-14T17:38:08Z", "is_private": false, "text": "Description:\n------------\nAfter an \"upgrade\" from version 1.4.1 to 1.4.2beta2, I started receiving an org.w3c.dom.DOMException when calling public XMLSignature(Document doc, String BaseURI, String SignatureMethodURI). The stacktrace is:\n\norg.w3c.dom.DOMException: NAMESPACE_ERR: An attempt is made to create or change an object in a way which is incorrect with regard to namespaces.\n\tat org.apache.xerces.dom.CoreDocumentImpl.checkNamespaceWF(Unknown Source)\n\tat org.apache.xerces.dom.AttrNSImpl.setName(Unknown Source)\n\tat org.apache.xerces.dom.AttrNSImpl.<init>(Unknown Source)\n\tat org.apache.xerces.dom.CoreDocumentImpl.createAttributeNS(Unknown Source)\n\tat org.apache.xerces.dom.ElementImpl.setAttributeNS(Unknown Source)\n\tat org.apache.xml.security.signature.XMLSignature.<init>(XMLSignature.java:206)\n\tat org.apache.xml.security.signature.XMLSignature.<init>(XMLSignature.java:149)\n...\n\nCause:\n------\nBefore calling the constructor\n\npublic XMLSignature(Document doc, String BaseURI, String SignatureMethodURI)\n\nwe set namespace prefix to \"\" (Constants.setSignatureSpecNSprefix(\"\");) to disable prefixes. It was ok previously - now the new code at\n\norg.apache.xml.security.signature.XMLSignature, lines 200-208\n\nbreaks that:\n\n1. Setting the namespace prefix to \"\" results in the entry (namespace, \"xmlns:\") being added to _prefixMappingsBindings Map (org.apache.xml.security.utils.ElementProxy:519).\n2. XMLSignature constructor gets that prefix (200-201), checks if it is \"empty\" (202), gets false and calls this._constructionElement.setAttributeNS() with that prefix (206), what results in the exception being thrown.\n\nPossible fix:\n-------------\nIn case of \"\" prefix, ElementProxy.setDefaultPrefix() should put either \"xmlns\" or \"\" to the _prefixMappingsBindings Map.\nOr, maybe, different checks should be performed at XMLSignature:200-208 and similar places, first getting ElementProxy.getDefaultPrefix(namespace); and then, if it is not empty, calling ElementProxy.getDefaultPrefixBindings(namespace). Something like in ElementProxy.createElementForFamily():136-152.\n\nAssignment XMLUtils.xmlnsDsPrefix=\"xmlns:\"+prefix; (ElementProxy:516) should probably be fixed as well (not sure; however, it seems the variable xmlnsDsPrefix is not used at all)."}, {"count": 1, "tags": [], "bug_id": 44999, "attachment_id": null, "id": 116673, "creation_time": "2008-05-15T12:17:14Z", "time": "2008-05-15T12:17:14Z", "creator": "sean.mullan@oracle.com", "text": "Thanks for catching this regression!\n\n> Possible fix:\n> -------------\n> In case of \"\" prefix, ElementProxy.setDefaultPrefix() should put either \"xmlns\"\n> or \"\" to the _prefixMappingsBindings Map.\n\nMy fix puts \"xmlns\" into the map. It seemed more logical.\n\n> Or, maybe, different checks should be performed at XMLSignature:200-208 and\n> similar places, first getting ElementProxy.getDefaultPrefix(namespace); and\n> then, if it is not empty, calling\n> ElementProxy.getDefaultPrefixBindings(namespace). Something like in\n> ElementProxy.createElementForFamily():136-152.\n\nYes, you could do that, but I chose the mapping fix because that is where the bug really is.\n\n> Assignment XMLUtils.xmlnsDsPrefix=\"xmlns:\"+prefix; (ElementProxy:516) should\n> probably be fixed as well (not sure; however, it seems the variable\n> xmlnsDsPrefix is not used at all).\n\nI removed the xmlnsDsPrefix variable.\n\nIncidentally, I found the same problem if you are using the JSR 105 API and set the namespace prefix to \"\" using the XMLSignContext.putNamespacePrefix method. I have fixed that as well. \n\nBoth of these fixes will be in 1.4.2.", "is_private": false}]