[{"count": 0, "tags": [], "bug_id": 44495, "attachment_id": null, "text": "I have a workbook that has formulas that refer to named cells.  For example \"=actStart\".  Very simple.  Using a technique I saw on the list, in my code I iterate through all cells to ensure that Excel re-evaluates the references.  I do this by getting the cell formula and setting the formula value back:\n               String formula = cell.getCellFormula();\n               cell.setCellType(HSSFCell.CELL_TYPE_FORMULA);\n               cell.setCellFormula(formula);\n\nHowever, this seems to have the effect of modifying my formulas to refer to the name in all upper case, like \"=ACTSTART\" for the example above.  That's wrong and breaks, causing a bunch of \"#NAME?\" to show up on the sheet.\n\nBy the way, I can't simply use sheet.setForceFormulaRecalculation(true) because it doesn't always work for me, but that's a different issue.", "id": 114039, "time": "2008-02-26T22:23:49Z", "creator": "dsmiley@mac.com", "creation_time": "2008-02-26T22:23:49Z", "is_private": false}, {"count": 1, "tags": [], "creator": "josh@apache.org", "text": "I am in the process of extending the formula parser to support a few more things (operator precedence, error literals, named ranges, external functions, etc).  As currently coded, POI assumes all identifiers in formulas should be converted to uppercase.  In my opinion, this is NQR, because Excel is not simply \"case insensitive\", but also \"case aware\".\n\nHere is a test case which hopefully targets the problem you are describing:\n\n    public void testParseNamedRangesCaseSensitivity() {\n        HSSFWorkbook wb = new HSSFWorkbook();\n        HSSFSheet sheet = wb.createSheet();\n        wb.setSheetName(0, \"Sheet1\");\n        HSSFCell cell = sheet.createRow(0).createCell((short)0);\n\n        HSSFName hssfName = wb.createName();\n        hssfName.setNameName(\"myNamedCell\"); // camelcase !\n        \n        cell.setCellFormula(\"mynamedcell\");\n        String actualFormula=cell.getCellFormula();\n        assertEquals(\"myNamedCell\", actualFormula); // not \"MYNAMEDCELL\", not \"mynamedcell\"\n   }\n\nIf you put a breakpoint in the no-arg constructor of NameRecord, you can see why this is occurring.\n\nNameRecord.<init>() line: 124\t\nNamePtg.<init>(String, Workbook) line: 58\t<<<< problem in this method\nFormulaParser.Ident() line: 336\t                <<<< another problem here\nFormulaParser.Factor() line: 522\t\nFormulaParser.Term() line: 660\t\nFormulaParser.Expression() line: 708\t\nFormulaParser.parse() line: 812\t\nHSSFCell.setCellFormula(String) line: 643\t\nTestFormulaParser.testParseNamedRangesCaseSensitivity() line: 3742\t\n\nI made a patch diff file that fixes _just_ this issue.\n", "id": 114071, "time": "2008-02-27T11:39:30Z", "bug_id": 44495, "creation_time": "2008-02-27T11:39:30Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "creator": "josh@apache.org", "text": "Created attachment 21597\nsvn diff of single line changes to 2 files", "id": 114072, "time": "2008-02-27T11:41:04Z", "bug_id": 44495, "creation_time": "2008-02-27T11:41:04Z", "is_private": false, "attachment_id": 21597}, {"count": 3, "tags": [], "creator": "apache@gagravarr.org", "text": "Thanks for this patch Josh, applied to svn trunk", "id": 114191, "time": "2008-03-03T07:25:57Z", "bug_id": 44495, "creation_time": "2008-03-03T07:25:57Z", "is_private": false, "attachment_id": null}]