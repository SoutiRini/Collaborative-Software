[{"count": 0, "tags": [], "text": "This section of the documentation contains a contradiction:\nhttp://httpd.apache.org/docs/2.2/rewrite/rewrite_intro.html#rewritecond\n\n---\n\nFor example, to deny requests that contain the word \"hack\" in their query string, except if they also contain a cookie containing the word \"go\", you could use:\n\nRewriteCond %{QUERY_STRING} hack\nRewriteCond %{HTTP_COOKIE} !go\nRewriteRule .* - [F]\n\nNotice that the exclamation mark specifies a negative match, so the rule is only applied if the cookie does not contain \"go\".\n\n---\n\nThe contradiction:\n[...] if they also contain a cookie containing the word \"go\" [...]\n[...] if the cookie does not contain \"go\" [...]", "is_private": false, "bug_id": 47935, "id": 130807, "time": "2009-10-02T01:49:04Z", "creator": "p.org@gmx.at", "creation_time": "2009-10-02T01:49:04Z", "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 47935, "attachment_id": null, "id": 130810, "time": "2009-10-02T04:35:33Z", "creator": "nick@webthing.com", "creation_time": "2009-10-02T04:35:33Z", "is_private": false, "text": "It's a poor example, but it's correct."}, {"count": 2, "tags": [], "text": "(In reply to comment #1)\n\nDon't you realize the contradiction???\n\nIn the paragraph above the code example the author explains that the RewriteCond will match if the query features a \"cookie containing the word 'go'\" and in the paragraph below he writes that the rule is applied if the \"cookie does not contain 'go'\".\n\nAccording to Boolean logic, only one of his statements can be true.\nAs we don't know the intention of the author, it is not clear which of the two contradicting statements he MEANT to be true, but only one CAN be true!\n\nI think that the upper statement is false and the lower is true.\n\nIt is a logic contradiction to say i.e.: I will present you with a car ONLY IF you are Swedish and at the same time I will present you with a car if you are Portuguese.", "is_private": false, "bug_id": 47935, "id": 130818, "time": "2009-10-02T06:48:16Z", "creator": "p.org@gmx.at", "creation_time": "2009-10-02T06:48:16Z", "attachment_id": null}, {"count": 3, "tags": [], "text": "The text is correct and matches the example. Maybe you're missing the \"except\" word?", "is_private": false, "id": 130819, "creation_time": "2009-10-02T06:59:32Z", "time": "2009-10-02T06:59:32Z", "creator": "nd@perlig.de", "bug_id": 47935, "attachment_id": null}, {"count": 4, "tags": [], "text": "I think that whether the text is technically correct or not, it's sufficiently confusing that it could stand to be improved.", "is_private": false, "id": 130821, "creator": "poirier@pobox.com", "time": "2009-10-02T07:42:11Z", "bug_id": 47935, "creation_time": "2009-10-02T07:42:11Z", "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 47935, "attachment_id": null, "id": 130822, "time": "2009-10-02T07:47:28Z", "creator": "nd@perlig.de", "creation_time": "2009-10-02T07:47:28Z", "is_private": false, "text": "Yeah, I had the same thought, after I wrote my comment ;). Patches welcome..."}, {"count": 6, "attachment_id": null, "bug_id": 47935, "is_private": false, "id": 130823, "time": "2009-10-02T08:17:33Z", "creator": "nick@webthing.com", "creation_time": "2009-10-02T08:17:33Z", "tags": [], "text": "Agree with Dan - hence my \"poor example\" comment: even just replacing \"except in\" with \"unless\" would be an improvement, but that still leaves issues like testing for \"word\"s when in fact it tests strings.  Better to drop it, except that loses an example that could, despite all the faults, be helpful to users.\n\nLet's not forget we can improve it for 2.3 and up, where this kind of ugly mod_rewrite hackery is obsoleted:\n<If (\"%{QUERY_STRING} = /hack/) && !(%{HTTP_COOKIE} = /go/)\">\n    Deny from All\n</If>"}, {"count": 7, "tags": [], "bug_id": 47935, "attachment_id": null, "id": 130825, "time": "2009-10-02T10:10:17Z", "creator": "p.org@gmx.at", "creation_time": "2009-10-02T10:10:17Z", "is_private": false, "text": "(In reply to comment #6)\n> Agree with Dan - hence my \"poor example\" comment: even just replacing \"except\n> in\" with \"unless\" would be an improvement, but that still leaves issues like\n> testing for \"word\"s when in fact it tests strings.  Better to drop it, except\n> that loses an example that could, despite all the faults, be helpful to users.\n\nSuggestion 1:\n\nReplace  \"except\" with \"unless\" as Nick Kew and Andr\u00e9 Malo  suggest. Small change, but already  improves the semantic understanding quite well!\n\nSuggestion 2: The current text, which describes the intended purpose by using a confusing negotiation (\"except ... contain\" although the code says \"does not contain\"). Better use a simple wording, which reflects what you see in the code:\n\nFor example, to deny requests whose query string contains the word \"hack\" and whose cookie does not contain the word \"go\", you could use: [...]\n\n> Let's not forget we can improve it for 2.3 and up, where this kind of ugly\n> mod_rewrite hackery is obsoleted:\n> <If (\"%{QUERY_STRING} = /hack/) && !(%{HTTP_COOKIE} = /go/)\">\n>     Deny from All\n> </If>\n\nNice to see, that 2.3 grants more complex logic expressions!"}, {"count": 8, "tags": [], "text": "Moving docs bugs to docs@httpd.a.o ownership.", "is_private": false, "id": 141212, "creation_time": "2010-10-29T11:06:59Z", "time": "2010-10-29T11:06:59Z", "creator": "rbowen@apache.org", "bug_id": 47935, "attachment_id": null}, {"count": 9, "attachment_id": null, "bug_id": 47935, "is_private": false, "id": 141406, "time": "2010-11-04T11:43:00Z", "creator": "covener@gmail.com", "creation_time": "2010-11-04T11:43:00Z", "tags": [], "text": "Replaced \"except if\" with \"unless\" to clarify in trunk and 2.2.x.  rewrite-> <if> is probably best tackled on its own."}]