[{"count": 0, "tags": [], "creator": "falcon.sheep@gmail.com", "text": "Hi,\nadding -Dfile.encoding=UTF-8 causes the below exception when adding entry to the tra file.\njava.io.IOException: request to write '198' bytes exceeds size in header of '111' bytes for entry '././@LongLink'\n    at org.apache.tools.tar.TarOutputStream.write(TarOutputStream.java:280)\n    at org.apache.tools.tar.TarOutputStream.write(TarOutputStream.java:261)\n    at org.apache.tools.tar.TarOutputStream.putNextEntry(TarOutputStream.java:185)", "id": 161880, "time": "2012-09-01T07:16:04Z", "bug_id": 53811, "creation_time": "2012-09-01T07:16:04Z", "is_private": false, "attachment_id": null}, {"text": "piece of code:\n\nfinal TarOutputStream tarFile = new TarOutputStream(new FileOutputStream(pathName));\ntarFile.setLongFileMode(TarOutputStream.LONGFILE_GNU);\n\n....\n\nTarEntry tarEntry = new TarEntry(path);\ntarEntry.setSize(new File(pre_path+path).length());\ntarFile.putNextEntry(tarEntry);\nin = new FileInputStream(convertPath(choosedAudioPath)+path);\nwhile((len = in.read(buf)) > 0)\n tarFile.write(buf, 0, len);\n\ntarFile.closeEntry();\nin.close();", "tags": [], "bug_id": 53811, "is_private": false, "count": 1, "id": 161881, "time": "2012-09-01T07:46:02Z", "creator": "falcon.sheep@gmail.com", "creation_time": "2012-09-01T07:46:02Z", "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 53811, "attachment_id": null, "is_private": false, "id": 161882, "time": "2012-09-01T07:48:27Z", "creator": "falcon.sheep@gmail.com", "creation_time": "2012-09-01T07:48:27Z", "text": "(In reply to comment #1)\n> piece of code:\n> \n> final TarOutputStream tarFile = new TarOutputStream(new\n> FileOutputStream(pathName));\n> tarFile.setLongFileMode(TarOutputStream.LONGFILE_GNU);\n> \n> ....\n> \n> TarEntry tarEntry = new TarEntry(path);\n> tarEntry.setSize(new File(pre_path+path).length());\n> tarFile.putNextEntry(tarEntry);\n> in = new FileInputStream(convertPath(choosedAudioPath)+path);\n> while((len = in.read(buf)) > 0)\n>  tarFile.write(buf, 0, len);\n> \n> tarFile.closeEntry();\n> in.close();\n\nsorry, small mistake. it is:\nin = new FileInputStream(pre_path+path);\ninstead of:\nin = new FileInputStream(convertPath(choosedAudioPath)+path);"}, {"count": 3, "text": "it stops with a non-ASCII names (Arabic file name) while setting -Dfile.encoding=UTF-8. does it support adding UTF8 names?", "bug_id": 53811, "is_private": false, "id": 161885, "time": "2012-09-02T07:27:24Z", "creator": "falcon.sheep@gmail.com", "creation_time": "2012-09-02T07:27:24Z", "tags": [], "attachment_id": null}, {"count": 4, "tags": [], "creator": "falcon.sheep@gmail.com", "text": "the same bug has been solved in:\nhttp://jira.codehaus.org/browse/PLXCOMP-195\n\nplease check the patch applied there and consider apply the same to resolve this.\n\nWhen a TAR file is being written, and:\n1. One or more filenames are so long that they require GNU mode\n2. The platform encoding is UTF-8\n3. Any character in a long filename results in a multibyte UTF-8 sequence\n\nthen an exception is thrown with this text:\n\"Problem creating TAR: request to write 'xxx' bytes exceeds size in header of 'xxx' bytes\"", "id": 161886, "time": "2012-09-02T08:15:53Z", "bug_id": 53811, "creation_time": "2012-09-02T08:15:53Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "text": "This issue is been solved in 1.9 with the new TarOutputStream(FileOutputStream, \"UTF8\") constructor and setLongFileMode(TarOutputStream.LONGFILE_GNU);", "is_private": false, "id": 165738, "creator": "falcon.sheep@gmail.com", "time": "2013-03-11T05:18:43Z", "bug_id": 53811, "creation_time": "2013-03-11T05:18:43Z", "attachment_id": null}]