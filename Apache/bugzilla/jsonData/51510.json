[{"count": 0, "tags": [], "bug_id": 51510, "attachment_id": null, "id": 147921, "time": "2011-07-14T20:14:59Z", "creator": "jark@10g.pl", "creation_time": "2011-07-14T20:14:59Z", "is_private": false, "text": "Imagine that we've simple VirtualHost definition:\n\n<VirtualHost 1.2.3.4:80>\n(...)\n <Directory /home/xxx/public_html>\n AllowOverride AuthConfig FileInfo Indexes Limit Options=Indexes,MultiViews,FollowSymLinks\n Options +SymLinksIfOwnerMatch \n </Directory>\n</VirtualHost>\n\nAs you can see above, user should not have the ability to omit SymLinksIfOwnerMatch in lower level context (like .htaccess). SymLinksIfOwnerMatch is not typed in AllowOverride and defaulty enabled. \nUser should not have ability to read symlinks to other users' files.\n\n\nExample #1:\necho \"Options -SymLinksIfOwnerMatch\" > /home/xxx/public_html/.htaccess\nresult: internal server error (correct)\n\n\nExample #2:\necho \"Options +FollowSymLinks\" > /home/xxx/public_html/.htaccess\nresult: user is able to read symlinks to his own files (correct)\nuser is unable to read files owned by other users (correct)\n\n\nExample #3:\necho \"Options FollowSymLinks\" > /home/xxx/public_html/.htaccess\nresult: SymLinksIfOwnerMatch is disabled! \nUser is able to read symlinks to files owned by other users!"}, {"count": 1, "tags": [], "text": "AllowOverride Options=xxx does not let you limit the effective value in some lower level scope, so you can still \"reset\" all options by using the non-relative syntax.  This is the basic operation of the Options directive.\n\nWhile there's nothing incorrect in the current doc, I added a note about the significance of limiting what Options can be used.\n\nhttp://svn.apache.org/viewvc?view=revision&revision=1154940", "attachment_id": null, "id": 148485, "creator": "covener@gmail.com", "time": "2011-08-08T12:27:15Z", "bug_id": 51510, "creation_time": "2011-08-08T12:27:15Z", "is_private": false}]