[{"count": 0, "text": "When working with a modular application, it is preferred to have an independent \nant script for each module, which are typically arranged in various \nsubdirectories. In order to build those modules with ant today, it is necessary \nto create a lot of repetitive code in the \"master\" build script, calling the \nbuild for each module manually. To tackle this, we created our own optional \nreplacement for the \"ant\" task which we called \"antdelegate\". It allows you to \nadd a fileset containing build files, and the specified target will be called \nin those build files. The code follows.\n\nBtw. it would be a good idea to add protected accessors to private members in \norder to make it easier to extend existing tasks.\n\n\npackage com.decode.ant;\n\nimport org.apache.tools.ant.taskdefs.Ant;\nimport org.apache.tools.ant.BuildException;\nimport org.apache.tools.ant.DirectoryScanner;\nimport org.apache.tools.ant.Project;\nimport org.apache.tools.ant.types.FileSet;\n\nimport java.util.*;\nimport java.io.File;\nimport java.io.IOException;\n\npublic class AntDelegate extends Ant{\n\n    private String thetarget=\"\";\n    private List filesets = new LinkedList();\n\n    public void execute() throws BuildException {\n        Iterator it = filesets.iterator();\n        while (it.hasNext()){\n            log(\"Fileset 1\", Project.MSG_VERBOSE);\n            execFileset((FileSet)(it.next()));\n        }\n    }\n\n    private void execFileset(FileSet fileSet) throws BuildException {\n        DirectoryScanner ds = fileSet.getDirectoryScanner(project);\n        File fromDir = fileSet.getDir(project);\n\n        String[] buildFiles = ds.getIncludedFiles();\n\n        for(int j=0;j<buildFiles.length;j++){\n            String filename = null;\n            try {\n                filename = fromDir.getCanonicalPath()+ File.separator+ \nbuildFiles[j];\n            } catch (IOException e) {\n                throw new BuildException(e);\n            }\n            setAntfile(filename);\n            log(\"Executing target [\" + thetarget + \"] in \" + filename, \nProject.MSG_VERBOSE);\n            try {\n                super.execute();\n            } catch (BuildException bex) {\n                throw new BuildException(\"Problem attempting to build \ntarget \"+thetarget+\" in \"+filename, bex);\n            }\n        }\n\n    }\n\n    public void addFileSet(FileSet fs){\n        filesets.add(fs);\n    }\n\n    public void setTarget(String thetarget) {\n        super.setTarget(thetarget);\n        this.thetarget = thetarget;\n    }\n}", "bug_id": 13027, "attachment_id": null, "id": 23432, "time": "2002-09-26T11:10:11Z", "creator": "gse@decode.is", "creation_time": "2002-09-26T11:10:11Z", "tags": [], "is_private": false}, {"count": 1, "tags": [], "bug_id": 13027, "text": "See http://nagoya.apache.org/bugzilla/show_bug.cgi?id=12368 for a similar task \nthat uses composition instead of inheritance. It also has the notion of an \nordered buildpath instead of the random order of a fileset, and will be \nextended soon to support an indirection step allowing to generate the build \nfile called on the fly (using XSL in my particular implementation), and extract \nthe buildpath order from dependencies explicitly stated in XML. But basically, \nit's very similar to you task ;-) --DD", "id": 23453, "time": "2002-09-26T16:16:14Z", "creator": "ddevienne@lgc.com", "creation_time": "2002-09-26T16:16:14Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 13027, "attachment_id": null, "id": 35416, "time": "2003-04-17T13:54:14Z", "creator": "bodewig@apache.org", "creation_time": "2003-04-17T13:54:14Z", "is_private": false, "text": "Needs should be addressed by <subant> that has become part of Ant with nightly\nbuild 2003-03-15.  Marking as duplicate of the subant PR, so you get also\nnotified should subant get removed again.\n\n*** This bug has been marked as a duplicate of 12386 ***"}, {"count": 3, "tags": [], "creator": "jc@mega-bucks.co.jp", "text": "Theis bug was submitted as a duplicate of the *wrong* bug., it is not a\nduplicate of 12386 but of 12368\n\nA simple typo I think.", "id": 35477, "time": "2003-04-18T01:18:09Z", "bug_id": 13027, "creation_time": "2003-04-18T01:18:09Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "text": "Reopen to reassign the duplicate. Hello Stefan! ;-))", "is_private": false, "bug_id": 13027, "id": 35640, "time": "2003-04-19T22:14:59Z", "creator": "nd@perlig.de", "creation_time": "2003-04-19T22:14:59Z", "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 13027, "attachment_id": null, "id": 35641, "creation_time": "2003-04-19T22:15:20Z", "time": "2003-04-19T22:15:20Z", "creator": "nd@perlig.de", "text": "\n\n*** This bug has been marked as a duplicate of 12368 ***", "is_private": false}]