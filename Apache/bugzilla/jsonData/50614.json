[{"count": 0, "tags": [], "text": "Dear All,\n\n    We are facing a problem that JBoss Threads are all consumed causing the whole web application to hang. We investigated the issue and found that all Threads are waiting on a synchronized block inside log4j. \n\nexactly in this block of code:\n\n public\n  void callAppenders(LoggingEvent event) {\n    int writes = 0;\n\n    for(Category c = this; c != null; c=c.parent) {\n      // Protected against simultaneous call to addAppender, removeAppender,...\n      synchronized(c) {\n\tif(c.aai != null) {\n\t  writes += c.aai.appendLoopOnAppenders(event);\n\t}\n\tif(!c.additive) {\n\t  break;\n\t}\n      }\n    }\n\n    if(writes == 0) {\n      repository.emitNoAppenderWarning(this);\n    }\n  }\n\n\nThere are two reported bugs here (41214,44157) and we followed the below recommendations:\n1. upgrade log4j from 1.2.15 to 1.2.16.\n2. upgrade jdk from 1.5.17 to 1.5.22 ( we cannot go for 1.6.22 right now)\n\n\nMore over, we made sure that there are no shared logger i.e. there are new logger for each class and created by that class itself. \n\n\nBut the problem exists. \n\n\n\nHere I collected the thread dump of threads locking the synchronize object over few days. \n\n\n\n\n2011-01-18\n\"Some Thread1\" daemon prio=3 tid=0x011e0b78 nid=0x33a runnable [0x53d7e000..0x53d7fa70]\n\tat java.lang.Throwable.fillInStackTrace(Native Method)\n\tat java.lang.Throwable. (Throwable.java:181)\n\tat org.apache.log4j.spi.LoggingEvent.getLocationInformation(LoggingEvent.java:191)\n\tat org.apache.log4j.helpers.PatternParser$LocationPatternConverter.convert(PatternParser.java:483)\n\tat org.apache.log4j.helpers.PatternConverter.format(PatternConverter.java:64)\n\tat org.apache.log4j.PatternLayout.format(PatternLayout.java:503)\n\tat org.apache.log4j.WriterAppender.subAppend(WriterAppender.java:301)\n\tat org.apache.log4j.WriterAppender.append(WriterAppender.java:159)\n\tat org.apache.log4j.AppenderSkeleton.doAppend(AppenderSkeleton.java:230)\n\t- locked <0x780a04c8> (a org.apache.log4j.ConsoleAppender)\n\tat org.apache.log4j.helpers.AppenderAttachableImpl.appendLoopOnAppenders(AppenderAttachableImpl.java:65)\n\tat org.apache.log4j.Category.callAppenders(Category.java:203)\n\t- locked <0x7807cfa8> (a org.apache.log4j.spi.RootLogger)\n\tat org.apache.log4j.Category.forcedLog(Category.java:388)\n\tat org.apache.log4j.Category.debug(Category.java:257) \n\n____________________________\n\n\n\n2011-01-17-13:51:28\nThread: Some Thread2 : priority:5, demon:true, threadId:5093, threadState:RUNNABLE, lockName:null\n\n    java.lang.Throwable.getStackTraceElement(Native Method)\n    java.lang.Throwable.getOurStackTrace(Throwable.java:592)\n    java.lang.Throwable.printStackTrace(Throwable.java:511)\n    org.apache.log4j.spi.LocationInfo.(LocationInfo.java:105)\n    org.apache.log4j.spi.LoggingEvent.getLocationInformation(LoggingEvent.java:191)\n    org.apache.log4j.helpers.PatternParser$LocationPatternConverter.convert(PatternParser.java:483)\n    org.apache.log4j.helpers.PatternConverter.format(PatternConverter.java:64)\n    org.apache.log4j.PatternLayout.format(PatternLayout.java:503)\n    org.apache.log4j.WriterAppender.subAppend(WriterAppender.java:301)\n    org.apache.log4j.WriterAppender.append(WriterAppender.java:159)\n    org.apache.log4j.AppenderSkeleton.doAppend(AppenderSkeleton.java:230)\n    org.apache.log4j.helpers.AppenderAttachableImpl.appendLoopOnAppenders(AppenderAttachableImpl.java:65)\n    org.apache.log4j.Category.callAppenders(Category.java:203)\n    org.apache.log4j.Category.forcedLog(Category.java:388)\n    org.apache.log4j.Category.debug(Category.java:257)\n\n\n_____________________________________\n\n2010-12-27 13:29:47\n\tThread: Some Thread3 - Pre-Rendering Page - Rendering Page : priority:5, demon:true, threadId:8960, threadState:RUNNABLE, lockName:null\n\n    java.lang.Throwable.fillInStackTrace(Native Method)\n    java.lang.Throwable.(Throwable.java:181)\n    org.apache.log4j.spi.LoggingEvent.getLocationInformation(LoggingEvent.java:191)\n    org.apache.log4j.helpers.PatternParser$LocationPatternConverter.convert(PatternParser.java:483)\n    org.apache.log4j.helpers.PatternConverter.format(PatternConverter.java:64)\n    org.apache.log4j.PatternLayout.format(PatternLayout.java:503)\n    org.apache.log4j.WriterAppender.subAppend(WriterAppender.java:301)\n    org.apache.log4j.WriterAppender.append(WriterAppender.java:159)\n    org.apache.log4j.AppenderSkeleton.doAppend(AppenderSkeleton.java:230)\n    org.apache.log4j.helpers.AppenderAttachableImpl.appendLoopOnAppenders(AppenderAttachableImpl.java:65)\n    org.apache.log4j.Category.callAppenders(Category.java:203)\n    org.apache.log4j.Category.forcedLog(Category.java:388)\n    org.apache.log4j.Category.debug(Category.java:257)\n\n________________________________________\n\nThread: Some Thread4 : priority:5, demon:true, threadId:8977, threadState:RUNNABLE, lockName:null\n\n    java.lang.Throwable.getStackTraceElement(Native Method)\n    java.lang.Throwable.getOurStackTrace(Throwable.java:592)\n    java.lang.Throwable.printStackTrace(Throwable.java:511)\n    org.apache.log4j.spi.LocationInfo.(LocationInfo.java:105)\n    org.apache.log4j.spi.LoggingEvent.getLocationInformation(LoggingEvent.java:191)\n    org.apache.log4j.helpers.PatternParser$LocationPatternConverter.convert(PatternParser.java:483)\n    org.apache.log4j.helpers.PatternConverter.format(PatternConverter.java:64)\n    org.apache.log4j.PatternLayout.format(PatternLayout.java:503)\n    org.apache.log4j.WriterAppender.subAppend(WriterAppender.java:301)\n    org.apache.log4j.WriterAppender.append(WriterAppender.java:159)\n    org.apache.log4j.AppenderSkeleton.doAppend(AppenderSkeleton.java:230)\n    org.apache.log4j.helpers.AppenderAttachableImpl.appendLoopOnAppenders(AppenderAttachableImpl.java:65)\n    org.apache.log4j.Category.callAppenders(Category.java:203)\n    org.apache.log4j.Category.forcedLog(Category.java:388)\n    org.apache.log4j.Category.debug(Category.java:257)\n\n____________________________________\n\n\tThread: Some Thread5 : priority:5, demon:true, threadId:8991, threadState:RUNNABLE, lockName:null\n\n    java.lang.Throwable.getStackTraceElement(Native Method)\n    java.lang.Throwable.getOurStackTrace(Throwable.java:592)\n    java.lang.Throwable.printStackTrace(Throwable.java:511)\n    org.apache.log4j.spi.LocationInfo.(LocationInfo.java:105)\n    org.apache.log4j.spi.LoggingEvent.getLocationInformation(LoggingEvent.java:191)\n    org.apache.log4j.helpers.PatternParser$LocationPatternConverter.convert(PatternParser.java:483)\n    org.apache.log4j.helpers.PatternConverter.format(PatternConverter.java:64)\n    org.apache.log4j.PatternLayout.format(PatternLayout.java:503)\n    org.apache.log4j.WriterAppender.subAppend(WriterAppender.java:301)\n    org.apache.log4j.WriterAppender.append(WriterAppender.java:159)\n    org.apache.log4j.AppenderSkeleton.doAppend(AppenderSkeleton.java:230)\n    org.apache.log4j.helpers.AppenderAttachableImpl.appendLoopOnAppenders(AppenderAttachableImpl.java:65)\n    org.apache.log4j.Category.callAppenders(Category.java:203)\n    org.apache.log4j.Category.forcedLog(Category.java:388)\n    org.apache.log4j.Category.debug(Category.java:257)\n\n____________________________________________________________\nThread: Some Thread6 : priority:5, demon:true, threadId:9017, threadState:RUNNABLE, lockName:null\n\n    java.lang.Throwable.getStackTraceElement(Native Method)\n    java.lang.Throwable.getOurStackTrace(Throwable.java:592)\n    java.lang.Throwable.printStackTrace(Throwable.java:511)\n    org.apache.log4j.spi.LocationInfo.(LocationInfo.java:105)\n    org.apache.log4j.spi.LoggingEvent.getLocationInformation(LoggingEvent.java:191)\n    org.apache.log4j.helpers.PatternParser$LocationPatternConverter.convert(PatternParser.java:483)\n    org.apache.log4j.helpers.PatternConverter.format(PatternConverter.java:64)\n    org.apache.log4j.PatternLayout.format(PatternLayout.java:503)\n    org.apache.log4j.WriterAppender.subAppend(WriterAppender.java:301)\n    org.apache.log4j.WriterAppender.append(WriterAppender.java:159)\n    org.apache.log4j.AppenderSkeleton.doAppend(AppenderSkeleton.java:230)\n    org.apache.log4j.helpers.AppenderAttachableImpl.appendLoopOnAppenders(AppenderAttachableImpl.java:65)\n    org.apache.log4j.Category.callAppenders(Category.java:203)\n    org.apache.log4j.Category.forcedLog(Category.java:388)\n    org.apache.log4j.Category.debug(Category.java:257)\n\n\n____________________________________________________________\n\n\t2011-01-03 18:17:26\n\t\n\tThread: Some Thread 7 : priority:5, demon:true, threadId:38364, threadState:RUNNABLE, lockName:null\n\n    java.io.FileOutputStream.writeBytes(Native Method)\n    java.io.FileOutputStream.write(FileOutputStream.java:260)\n    java.io.BufferedOutputStream.write(BufferedOutputStream.java:105)\n    java.io.PrintStream.write(PrintStream.java:412)\n    sun.nio.cs.StreamEncoder$CharsetSE.writeBytes(StreamEncoder.java:336)\n    sun.nio.cs.StreamEncoder$CharsetSE.implFlushBuffer(StreamEncoder.java:404)\n    sun.nio.cs.StreamEncoder$CharsetSE.implFlush(StreamEncoder.java:408)\n    sun.nio.cs.StreamEncoder.flush(StreamEncoder.java:152)\n    java.io.OutputStreamWriter.flush(OutputStreamWriter.java:213)\n    org.apache.log4j.helpers.QuietWriter.flush(QuietWriter.java:57)\n    org.apache.log4j.WriterAppender.subAppend(WriterAppender.java:315)\n    org.apache.log4j.WriterAppender.append(WriterAppender.java:159)\n    org.apache.log4j.AppenderSkeleton.doAppend(AppenderSkeleton.java:230)\n    org.apache.log4j.helpers.AppenderAttachableImpl.appendLoopOnAppenders(AppenderAttachableImpl.java:65)\n    org.apache.log4j.Category.callAppenders(Category.java:203)\n    org.apache.log4j.Category.forcedLog(Category.java:388)\n    org.apache.log4j.Category.debug(Category.java:257)\n\n\n__________________________________________________________\n\n\n2011-01-03 18:22:43\n\tThread: Some Thread8 : priority:5, demon:true, threadId:9604, threadState:RUNNABLE, lockName:null\n\n    java.lang.Throwable.getStackTraceElement(Native Method)\n    java.lang.Throwable.getOurStackTrace(Throwable.java:592)\n    java.lang.Throwable.printStackTrace(Throwable.java:511)\n    org.apache.log4j.spi.LocationInfo.(LocationInfo.java:105)\n    org.apache.log4j.spi.LoggingEvent.getLocationInformation(LoggingEvent.java:191)\n    org.apache.log4j.helpers.PatternParser$LocationPatternConverter.convert(PatternParser.java:483)\n    org.apache.log4j.helpers.PatternConverter.format(PatternConverter.java:64)\n    org.apache.log4j.PatternLayout.format(PatternLayout.java:503)\n    org.apache.log4j.WriterAppender.subAppend(WriterAppender.java:301)\n    org.apache.log4j.WriterAppender.append(WriterAppender.java:159)\n    org.apache.log4j.AppenderSkeleton.doAppend(AppenderSkeleton.java:230)\n    org.apache.log4j.helpers.AppenderAttachableImpl.appendLoopOnAppenders(AppenderAttachableImpl.java:65)\n    org.apache.log4j.Category.callAppenders(Category.java:203)\n    org.apache.log4j.Category.forcedLog(Category.java:388)\n    org.apache.log4j.Category.debug(Category.java:257)\n\n\n_______________________________________\n\nThread: Some Thread9: priority:5, demon:true, threadId:38364, threadState:RUNNABLE, lockName:null\n\n    java.lang.Throwable.getStackTraceElement(Native Method)\n    java.lang.Throwable.getOurStackTrace(Throwable.java:592)\n    java.lang.Throwable.printStackTrace(Throwable.java:511)\n    org.apache.log4j.spi.LocationInfo.(LocationInfo.java:105)\n    org.apache.log4j.spi.LoggingEvent.getLocationInformation(LoggingEvent.java:191)\n    org.apache.log4j.helpers.PatternParser$LocationPatternConverter.convert(PatternParser.java:483)\n    org.apache.log4j.helpers.PatternConverter.format(PatternConverter.java:64)\n    org.apache.log4j.PatternLayout.format(PatternLayout.java:503)\n    org.apache.log4j.WriterAppender.subAppend(WriterAppender.java:301)\n    org.apache.log4j.WriterAppender.append(WriterAppender.java:159)\n    org.apache.log4j.AppenderSkeleton.doAppend(AppenderSkeleton.java:230)\n    org.apache.log4j.helpers.AppenderAttachableImpl.appendLoopOnAppenders(AppenderAttachableImpl.java:65)\n    org.apache.log4j.Category.callAppenders(Category.java:203)\n    org.apache.log4j.Category.forcedLog(Category.java:388)\n    org.apache.log4j.Category.debug(Category.java:257)\n\n\n\n\n\n\n\n\n\n************************\n\nIs there any way to avoid this blocking? \nCan we add some sort of timeout to release the lock?\n\nappreciate your feedback.", "attachment_id": null, "bug_id": 50614, "id": 143459, "time": "2011-01-19T03:51:30Z", "creator": "amr.eladawy@etisalat.com", "creation_time": "2011-01-19T03:51:30Z", "is_private": false}, {"count": 1, "tags": [], "creator": "chauhan.icse@gmail.com", "attachment_id": null, "is_private": false, "id": 151606, "time": "2011-11-17T17:48:17Z", "bug_id": 50614, "creation_time": "2011-11-17T17:48:17Z", "text": "we are also experiencing the same issue\n\nThread Dump  :- \n\n java.lang.Thread.State: BLOCKED (on object monitor)\n\tat org.apache.log4j.Category.callAppenders(Category.java:204)\n\t- waiting to lock <0x07ff5828> (a org.apache.log4j.spi.RootLogger)\n\tat com.wf.fx.fxcore.log.LoggerLog4j.forcedLog(LoggerLog4j.java:242)\n\tat org.apache.log4j.Category.info(Category.java:666)\n\tat com.wf.fx.fxcore.log.LoggerLog4j.info(LoggerLog4j.java:156"}, {"count": 2, "tags": [], "bug_id": 50614, "attachment_id": null, "id": 151608, "time": "2011-11-17T18:18:27Z", "creator": "amr.eladawy@etisalat.com", "creation_time": "2011-11-17T18:18:27Z", "is_private": false, "text": "We Managed to solve this problem by doing the following\n\n1. disabling the console appender\n2. simplifying the log format by removing the line number and the function name"}, {"count": 3, "attachment_id": null, "bug_id": 50614, "is_private": false, "id": 173723, "time": "2014-03-10T09:35:55Z", "creator": "sivannarayananu@gmail.com", "creation_time": "2014-03-10T09:35:55Z", "tags": [], "text": "I am also experiencing the same problem.\nblow are the thread dump \nat org.apache.log4j.Category.callAppenders(Category.java:190)\n        - locked <0x5d417b48> (a org.apache.log4j.Logger)\n        at org.apache.log4j.Category.forcedLog(Category.java:375)\n        at org.apache.log4j.Category.log(Category.java:868)\n\n\nI have the following questions:\n\n1. Could you please let me know the procedure to disable the console appender?. \n2. Also could you also explain in steps as to how the log format is simplified?"}, {"count": 4, "tags": [], "bug_id": 50614, "attachment_id": null, "is_private": false, "id": 173744, "time": "2014-03-11T11:12:05Z", "creator": "amr.eladawy@etisalat.com", "creation_time": "2014-03-11T11:12:05Z", "text": "(In reply to siva from comment #3)\n\n> 1. Could you please let me know the procedure to disable the console\n> appender?. \n> 2. Also could you also explain in steps as to how the log format is\n> simplified?\n\nThose are log4j.properties questions however I am very glad to answer. This is an example on configuration file (please note that you should remove the \"stdout\" from the first line\n\n\nlog4j.rootLogger=debug, R, stdout\n\nlog4j.appender.stdout=org.apache.log4j.ConsoleAppender\nlog4j.appender.stdout.layout=org.apache.log4j.PatternLayout\nlog4j.appender.stdout.layout.ConversionPattern=[%d] [%t] [%-5p]  - [%m]%n\n\n#--- syncronized logging\nlog4j.appender.R=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.R.File=pbt.log\nlog4j.appender.R.layout=org.apache.log4j.PatternLayout\nlog4j.appender.R.layout.ConversionPattern=[%d] [%t] [%-5p]  - [%m]%n\n\n\n\n\n\n\nNow, you may share your file so we can look at it."}, {"count": 5, "tags": [], "bug_id": 50614, "attachment_id": null, "is_private": false, "id": 173795, "time": "2014-03-13T14:48:36Z", "creator": "sivannarayananu@gmail.com", "creation_time": "2014-03-13T14:48:36Z", "text": "Thanks for your quick reply\n\nIn my case, since I have a lot of configuration files, i have to manually disable the consoleAppender(using the command mentioned) for every config file. Is there any other workaround in the above scenario?. \n\nI have the following questions\n\n1. Is disabling the consoleAppender the only possible fix for the above issue in 1.2.x. Can you please specify if there are other alternatives?.\n\n2. Does the patch for bug - 50213 defect resolve the consoleAppender issue ?\n\n3. I understand from comment 6(given by Ralph Goers) in Defect Id: 51047 \nthat this issue was fixed in Log4j 2.0. Ralph also talks about an adapter for \nthe 1.2 API. Could you please provide a reference to the same?.\n                                          \nAppreciate your feedback at the earliest."}, {"count": 6, "tags": [], "text": "(In reply to siva from comment #5)\n> Thanks for your quick reply\n> \n> In my case, since I have a lot of configuration files, i have to manually\n> disable the consoleAppender(using the command mentioned) for every config\n> file. Is there any other workaround in the above scenario?. \n> \n> I have the following questions\n> \n> 1. Is disabling the consoleAppender the only possible fix for the above\n> issue in 1.2.x. Can you please specify if there are other alternatives?.\n> \n> 2. Does the patch for bug - 50213 defect resolve the consoleAppender issue ?\n> \n> 3. I understand from comment 6(given by Ralph Goers) in Defect Id: 51047 \n> that this issue was fixed in Log4j 2.0. Ralph also talks about an adapter\n> for \n> the 1.2 API. Could you please provide a reference to the same?.\n>                                           \n> Appreciate your feedback at the earliest.\n\n\n\nHi,  the idea behind disabling console Appender is to reduce the IO operations which are causing the lock issue (as per my understanding). \n\n\nRegarding Log4J 2.0 I have no idea as I moved to LogBack and I stopped using Log4J anymore.", "attachment_id": null, "bug_id": 50614, "id": 173796, "time": "2014-03-13T14:52:00Z", "creator": "amr.eladawy@etisalat.com", "creation_time": "2014-03-13T14:52:00Z", "is_private": false}, {"count": 7, "tags": [], "bug_id": 50614, "attachment_id": null, "text": "Perhaps the quickest way to see how the adapter works is to look at the log4j2 FAQ page: http://logging.apache.org/log4j/2.x/faq.html\n\nBasically, you remove the log4j-1.2.x.jar from the classpath, and instead you add the following three log4j2 jars: api, core and 1.2-api. That's it. Your application that is coded against the log4j-1.2.x API will now work with the new log4j2 implementation. \n\nYou will need to create a log4j2.xml configuration file (slightly different syntax as log4j-1.2.x), but the log4j2 web site has tons of example configurations to get you started.", "id": 173797, "time": "2014-03-13T15:20:29Z", "creator": "remko.popma@gmail.com", "creation_time": "2014-03-13T15:20:29Z", "is_private": false}]