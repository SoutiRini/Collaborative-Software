[{"count": 0, "tags": [], "bug_id": 50610, "text": "This ticket is for the ExcelAnt Ant tasks which allow users to write Ant tasks to test a workbook using POI.", "id": 143442, "time": "2011-01-18T12:12:19Z", "creator": "jsvede@yahoo.com", "creation_time": "2011-01-18T12:12:19Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 50610, "attachment_id": 26510, "text": "Created attachment 26510\npatch with the new classes for the Ant tasks\n\nAdding the patch file, next I'll add the source files.", "id": 143443, "time": "2011-01-18T12:13:24Z", "creator": "jsvede@yahoo.com", "creation_time": "2011-01-18T12:13:24Z", "is_private": false}, {"count": 2, "tags": [], "text": "Created attachment 26511\nsource files for the patch\n\nThis is the tar.gz with the source files for the Ant tasks.\n\nI am looking for feedback on the code as well suggestions/direction on what to do next with respect to:\n\n -  where to put example ant files and spreadsheets\n - tests for which classes to cover and to what depth\n - review of the util.ExcelAntWorkbookUtil and Factory classes\n\nAny and all feedback gladly welcomed.\n\nThanks in advance!\n\nJon", "attachment_id": 26511, "id": 143444, "creator": "jsvede@yahoo.com", "time": "2011-01-18T12:20:30Z", "bug_id": 50610, "creation_time": "2011-01-18T12:20:30Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 50610, "text": "How did you test it? \n\nThis seems a good patch, but it is not complete without samples and documentation. \n\nCan you upload some use-cases, I mean a build.xml and spreadsheets?\n\nRegards,\nYegor", "id": 143511, "time": "2011-01-20T12:31:05Z", "creator": "yegor@dinom.ru", "creation_time": "2011-01-20T12:31:05Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 50610, "attachment_id": null, "text": "Yes, I agree it is far from complete.  I thought I'd follow the advice of \"post patches early and often\", so please let me know what works best.\n\nBasically I've been testing it by running it.  There is only one class that has any POI related functions, the ExcelAntWorkbookUtil class, which manages all POI interactions.  The rest of it is all Ant related, for the most part.\n\nI am happy to write a complete test suite if required.\n\nI am working on docs right now, I can post what I have, I'll do that later today.\n\nAs part of the docs I was going to create a sample workbook and build file with targets, that should suffice but if not let me know what would work.  \n\nAs far as a build goes, what is required?  I can post a standalone build and then someone can advise me how best to integrate it?  Or is there some other approach that might work better?\n\nThanks,\n\nJon", "id": 143520, "time": "2011-01-20T14:37:23Z", "creator": "jsvede@yahoo.com", "creation_time": "2011-01-20T14:37:23Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 50610, "attachment_id": 26523, "text": "Created attachment 26523\npatch containing documentation and an example\n\nDocs and examples patch.  Still needs work though.", "id": 143522, "time": "2011-01-20T15:58:35Z", "creator": "jsvede@yahoo.com", "creation_time": "2011-01-20T15:58:35Z", "is_private": false}, {"count": 6, "tags": [], "creator": "jsvede@yahoo.com", "attachment_id": 26530, "id": 143563, "time": "2011-01-21T12:15:13Z", "bug_id": 50610, "creation_time": "2011-01-21T12:15:13Z", "is_private": false, "text": "Created attachment 26530\nupdates to the example build\n\nThis patch contains better examples, ones that actually work.  Attaching the tar.gz with the binaries next."}, {"count": 7, "tags": [], "bug_id": 50610, "attachment_id": 26531, "id": 143564, "time": "2011-01-21T12:16:51Z", "creator": "jsvede@yahoo.com", "creation_time": "2011-01-21T12:16:51Z", "is_private": false, "text": "Created attachment 26531\nthe spreadsheet and jar file dependencies.\n\nThis file contains the dependencies for the example file.  You should be able to unzip this into the root of the project and then go to the excelant examples directory and run the two sample tests."}, {"count": 8, "tags": [], "bug_id": 50610, "attachment_id": null, "text": "The last 2 attachments should be used for the examples.\n\nI am looking for advice on the following:\n\n - tests - how much and deep should the tests be?\n - docs - are these complete enough or do we need more?\n - build - I don't have any build integration yet.  It was originally suggested that these tasks should be in their own jar.  I'll point out that they require some of the POI jars to work which begs the question, does it make sense to separate them?\n\nAny other comments, suggestions or ideas are welcome.\n\nThanks,\n\nJon", "id": 143565, "time": "2011-01-21T12:20:25Z", "creator": "jsvede@yahoo.com", "creation_time": "2011-01-21T12:20:25Z", "is_private": false}, {"count": 9, "tags": [], "text": "(In reply to comment #8)\n>  - build - I don't have any build integration yet.  It was originally suggested\n> that these tasks should be in their own jar.  I'll point out that they require\n> some of the POI jars to work which begs the question, does it make sense to\n> separate them?\n\nThe scratchpad jar needs the core one, and the ooxml jar needs core+scratchpad, so I don't think saying \"the ant jar needs core\" is a big step. My worry about putting the ant task into an existing jar is that it needs the ant jars to work, and I'd rather not require them for people not interested in using the ant functionality.\n\nSo, I'd say the source should live at the same level in the tree as scratchpad and ooxml, and be compiled to its own jar in the same way. Does that make sense?", "attachment_id": null, "id": 143793, "creator": "apache@gagravarr.org", "time": "2011-01-29T14:14:53Z", "bug_id": 50610, "creation_time": "2011-01-29T14:14:53Z", "is_private": false}, {"count": 10, "tags": [], "bug_id": 50610, "attachment_id": null, "id": 143794, "time": "2011-01-29T14:51:26Z", "creator": "jsvede@yahoo.com", "creation_time": "2011-01-29T14:51:26Z", "is_private": false, "text": "(In reply to comment #9)\n\n> So, I'd say the source should live at the same level in the tree as scratchpad\n> and ooxml, and be compiled to its own jar in the same way. Does that make\n> sense?\n\nYep, that makes sense.  Let me take a shot at that integration and post another patch.  I'll also write a few tests and include them as well.\n\nJon"}, {"count": 11, "tags": [], "bug_id": 50610, "attachment_id": null, "id": 144015, "time": "2011-02-07T08:05:46Z", "creator": "yegor@dinom.ru", "creation_time": "2011-02-07T08:05:46Z", "is_private": false, "text": "I checked out the latest sources from https://github.com/jsvede/excelant/. \n\nFirstly, I see two packages with duplicate contents: org.excelant.* and org.apache.poi.ss.excelant.*. Was org.excelant.* added by mistake? \n\nSecondly, I tweaked build.xml and added a target to run junit tests. See the attached diff. This configuration requires junit-4.7.jar in the lib directory.\n\nThe tests need to be converted to junit 3.8 because that's what POI uses\n(changing junit versions is probably something we'd decide to do project wide). This means no annotations. Sorry. \n\n The test classes should be renamed to follow POI conventions: All tests should start with Test* and extend TestCase. Also, POI expects tests to be silent (not write to std-out or any log) when successful. \n\nThirdly, Ant provides several ways of registering custom tasks and itt would be good if ExcelAnt supports all of them:\n\n (1) explicit definition of taskdefs in build.xml (supported)\n\n (2) reference to a configuration file bundled in the jar\n\n  <typedef resource=\"org/apache/poi/ss/excelant/antlib.xml\"\n                   classpath=\"YOUR-PATH-TO/poi-exelant.jar\"/>\n\n\nWhere the antlib file is defined as follows:\n\n<antlib>\n\n  <taskdef name=\"excelant\" classname=\"org.excelant.ExcelAntTask\" />\n  <taskdef name=\"test\" classname=\"org.excelant.ExcelAntTest\" />\n  <taskdef name=\"setDouble\" classname=\"org.excelant.ExcelAntSetDoubleCell\" />\n  <taskdef name=\"evaluate\" classname=\"org.excelant.ExcelAntEvaluateCell\" />\n\n</antlib>\n\n\n3. Similar to (2), but assigning a namespace URI:\n\n  <typedef uri=\"poi:org.apache.poi.ss.excelant\"\n           resource=\"org/apache/poi/ss/excelant/antlib.xml\"\n                   classpath=\"YOUR-PATH-TO/poi-exelant.jar\"/>\n\n4.Using Ant's autodiscovery. Run Ant as\n\n  ant -lib DIR_CONTAINING_EXCELANT_JAR targetName\n\n or copy the excelant jar into ANT_HOME/lib - and then in your build file, simply declare the namespace on the project tag:\n\n                <project xmlns:poi=\"antlib:org.apache.poi.ss.excelant\">\n              \n And all tasks of this library will automatically be available in the poi namespace without any typedef.\n\n\nI added support for (2)-(3), see my patch. (4) needs to be tested. \n\nRegards,\nYegor"}, {"count": 12, "tags": [], "bug_id": 50610, "text": "Created attachment 26616\npatch against https://github.com/jsvede/excelant/", "id": 144016, "time": "2011-02-07T08:07:36Z", "creator": "yegor@dinom.ru", "creation_time": "2011-02-07T08:07:36Z", "is_private": false, "attachment_id": 26616}, {"count": 13, "tags": [], "bug_id": 50610, "text": "Created attachment 26617\nnew files to add to https://github.com/jsvede/excelant/", "id": 144017, "time": "2011-02-07T08:08:12Z", "creator": "yegor@dinom.ru", "creation_time": "2011-02-07T08:08:12Z", "is_private": false, "attachment_id": 26617}, {"count": 14, "tags": [], "bug_id": 50610, "text": "(In reply to comment #11)\n> \n> Firstly, I see two packages with duplicate contents: org.excelant.* and\n> org.apache.poi.ss.excelant.*. Was org.excelant.* added by mistake? \n\n\nNo, it was that I had checked the code in org.excelant but then later moved everything to the POI suggested packaging.  I didn't delete the old code until I was sure I didn't need it.  I thought had deleted the org.excelant code but looking in the master on github, that delete didn't make it up.  I will fix that, the correct codeline is the org.apache.* packages.\n \n> Secondly, I tweaked build.xml and added a target to run junit tests. See the\n> attached diff. This configuration requires junit-4.7.jar in the lib directory.\n> \n> The tests need to be converted to junit 3.8 because that's what POI uses\n> (changing junit versions is probably something we'd decide to do project wide).\n> This means no annotations. Sorry. \n\nNot a problem, I can refactor the existing tests.\n \n>  The test classes should be renamed to follow POI conventions: All tests should\n> start with Test* and extend TestCase. Also, POI expects tests to be silent (not\n> write to std-out or any log) when successful. \n\nI can refactor accordingly, not a problem.\n\n> \n> Thirdly, Ant provides several ways of registering custom tasks and itt would be\n> good if ExcelAnt supports all of them:\n> \n>  (1) explicit definition of taskdefs in build.xml (supported)\n> \n>  (2) reference to a configuration file bundled in the jar\n> \n>   <typedef resource=\"org/apache/poi/ss/excelant/antlib.xml\"\n>                    classpath=\"YOUR-PATH-TO/poi-exelant.jar\"/>\n> \n> \n> Where the antlib file is defined as follows:\n> \n> <antlib>\n> \n>   <taskdef name=\"excelant\" classname=\"org.excelant.ExcelAntTask\" />\n>   <taskdef name=\"test\" classname=\"org.excelant.ExcelAntTest\" />\n>   <taskdef name=\"setDouble\" classname=\"org.excelant.ExcelAntSetDoubleCell\" />\n>   <taskdef name=\"evaluate\" classname=\"org.excelant.ExcelAntEvaluateCell\" />\n> \n> </antlib>\n> \n> \n> 3. Similar to (2), but assigning a namespace URI:\n> \n>   <typedef uri=\"poi:org.apache.poi.ss.excelant\"\n>            resource=\"org/apache/poi/ss/excelant/antlib.xml\"\n>                    classpath=\"YOUR-PATH-TO/poi-exelant.jar\"/>\n> \n> 4.Using Ant's autodiscovery. Run Ant as\n> \n>   ant -lib DIR_CONTAINING_EXCELANT_JAR targetName\n> \n>  or copy the excelant jar into ANT_HOME/lib - and then in your build file,\n> simply declare the namespace on the project tag:\n> \n>                 <project xmlns:poi=\"antlib:org.apache.poi.ss.excelant\">\n> \n>  And all tasks of this library will automatically be available in the poi\n> namespace without any typedef.\n> \n> \n> I added support for (2)-(3), see my patch. (4) needs to be tested. \n\nYes, I had wanted to add support for #4, I wasn't aware of the methodology you've shown in #2 and #3.\n\nMy goal was to get it all working in the github repository and once we had it all worked out, migrate the code the POI structure and update the build file.   \n\nI'll take a look at your patch to github repository and play around with it.\n\nThanks for reviewing it all providing feedback!\n\nSincerely,\n\nJon", "id": 144022, "time": "2011-02-07T12:54:43Z", "creator": "jsvede@yahoo.com", "creation_time": "2011-02-07T12:54:43Z", "is_private": false, "attachment_id": null}, {"count": 15, "tags": [], "bug_id": 50610, "text": "I tried doing #2 and #4 and neither seemed to work.  I think the issue is that the ExcelAnt jar file would need to have it's dependencies fully satisfied to use either approach.  \n\nI tried just using the excelant-****.jar but I get errors complaining about the dependencies; in both cases the dependency is spelled out in the path element in the build.xml I am using to test with.  \n\nI am going to try to package the all the dependencies and test again.\n\nJon", "id": 144427, "time": "2011-02-18T23:00:38Z", "creator": "jsvede@yahoo.com", "creation_time": "2011-02-18T23:00:38Z", "is_private": false, "attachment_id": null}, {"count": 16, "tags": [], "bug_id": 50610, "text": "Adding all the POI dependencies into the ExcelAnt jar file makes #2 start working but eventually it fails.   This has to do with the classpath.  In the original way I set this up, I assumed I could define all the dependencies in one path element and that doing so would allow the classloader to resolve all the dependencies.\n\nFor option #2 I was able to define the dependencies in the <typedef> tag and get it to resolve but because the ExcelAnt task doesn't have the ability to accept classpath elements and it needs to.   I will have to read up on how to enable this - unless this is a default feature somehow.\n\nJon", "id": 144428, "time": "2011-02-19T00:04:40Z", "creator": "jsvede@yahoo.com", "creation_time": "2011-02-19T00:04:40Z", "is_private": false, "attachment_id": null}, {"count": 17, "tags": [], "text": "Oops. There was an error in build.xml and antlib.xml was not included in the jar. That was the reason why neither of (2)-(4) did not work. \n\nLines 47-50 should be \n\n      <copy todir=\"${build.dir}/src\">\n          <fileset dir=\"${resource.dir}\"/>\n      </copy>\n\ninstead of\n\n      <copy todir=\"${build.dir}\">\n          <fileset dir=\"${resource.dir}\"/>\n      </copy>\n\nI created a branch in svn (https://svn.apache.org/repos/asf/poi/branches/excelant/) and ported the code from GitHub into it. Please check out, I would like further work to be done in POI svn, not in GitHub. Actually, we are nearly ready to merge this branch with trunk.\n\nExcelAnt is included in the build cycle. The new build artifact is named poi-excelant. There are compile-excelant and test-excelant targets to compile / test only that module or you can do \"ant compile\" and \"and test\" to build everything. The \"ant build\" target builds distribution packages and poi-excelant is included. Please review, I'm going to include ExcelAnt in 3.8-beta which we plan in early March.\n\nNote that I added a new junuit test, see https://svn.apache.org/repos/asf/poi/branches/excelant/src/excelant/testcases/org/apache/poi/ss/excelant/TestBuildFile.java\n\n\"pure java\" junit tests are OK, but they are too low-level. It would be good to test against a real build file to ensure that the code works from Ant perspective.\n\nThe test extends BuildFileTest.java. Most of Ant's internal tests are based on this class, I just followed the code patterns when I wrote my TestBuildFile.java\n\nUnfortunately BuildFileTest.java is in the test area and not included in the ant.jar, I had copy it from Ant's sources. \n\nRegards,\nYegor", "attachment_id": null, "id": 144430, "creator": "yegor@dinom.ru", "time": "2011-02-19T01:14:43Z", "bug_id": 50610, "creation_time": "2011-02-19T01:14:43Z", "is_private": false}, {"count": 18, "tags": [], "bug_id": 50610, "attachment_id": null, "text": "I am fine to take down the GitHub repo and work out of SVN, thank you for creating that branch as well as adding the ant targets for building it.\n\nI am worried about the inclusion of ExcelAnt in the beta only because of the classpath issue with the tasks. \n\nRight now the tasks work because when you set up your path in the build file you add all the dependencies for POI and any other custom classes, for instance the the FreeRefFunction implementations you might contribute.  In the case where you put the excelant jar in the Ant lib directory, you lose that benefit.\n\nTo fix that, the top level excelant class needs to be able to append entries to the classpath.  I haven't had time to read up on how to accomplish this.\n\nJon", "id": 144464, "time": "2011-02-21T23:04:14Z", "creator": "jsvede@yahoo.com", "creation_time": "2011-02-21T23:04:14Z", "is_private": false}, {"count": 19, "tags": [], "bug_id": 50610, "attachment_id": null, "id": 144469, "time": "2011-02-22T06:19:19Z", "creator": "apache@gagravarr.org", "creation_time": "2011-02-22T06:19:19Z", "is_private": false, "text": "(In reply to comment #18)\n> To fix that, the top level excelant class needs to be able to append entries to\n> the classpath.  I haven't had time to read up on how to accomplish this.\n\nIf the classpath is a path reference, then that's really easy to do. Get the path reference object, call createPathElement on that, then call setLocation on the path element with the file object pointing to your new jar / class"}, {"count": 20, "tags": [], "creator": "yegor@dinom.ru", "attachment_id": null, "id": 144507, "time": "2011-02-23T11:43:25Z", "bug_id": 50610, "creation_time": "2011-02-23T11:43:25Z", "is_private": false, "text": "I merged excelant into trunk in r1073707. \n\n> \n> I am worried about the inclusion of ExcelAnt in the beta only because of the\n> classpath issue with the tasks. \n> \n\nNo worries. What we already have is very, very cool. Support for the nested classpath element would be great, but even without it ExcelAnt is functional and it is certainly OK to include it in the beta. \n\n> Right now the tasks work because when you set up your path in the build file\n> you add all the dependencies for POI and any other custom classes, for instance\n> the the FreeRefFunction implementations you might contribute.  In the case\n> where you put the excelant jar in the Ant lib directory, you lose that benefit.\n> \n> To fix that, the top level excelant class needs to be able to append entries to\n> the classpath.  I haven't had time to read up on how to accomplish this.\n> \n\nI plan to spend some time to implement support for the classpath element. Hope to get it done by April 1, the scheduled date of 3.8-final.\n\nRegards,\nYegor"}, {"count": 21, "tags": [], "bug_id": 50610, "text": "I think we are done with this patch. ExcelAnt is in trunk and and further improvements will be submitted in new tickets. \n\nYegor", "id": 144508, "time": "2011-02-23T11:50:13Z", "creator": "yegor@dinom.ru", "creation_time": "2011-02-23T11:50:13Z", "is_private": false, "attachment_id": null}]