[{"count": 0, "tags": [], "bug_id": 47317, "is_private": false, "text": "It appears as if Jasper is not handling sessions properly when 'session=\"false\"' is specified in a JSPs page directive.\n\nConsider the following test JSPs:\n\n[test1.jsp]\n<%@ page contentType=\"text/html;charset=UTF-8\" %>\n<%\nsession.setAttribute(\"foo\", \"bar\");\n%>\n<a href=\"test2.jsp\">go to test2</a>\n\n\n[test2.jsp]\n<%@ page contentType=\"text/html;charset=UTF-8\" session=\"false\" %>\n<%= pageContext.findAttribute(\"foo\") %><br />\n<%= request.getSession().getAttribute(\"foo\") %><br />\n\n\nInstall the JSPs into a web app and load test1.jsp.  Then follow the link to test2.jsp.  You will see that the findAttribute() call returns null (unlike the second call).  It does not find the attribute in the session.\n\nThe specification (JSP2.1 pg 147) regarding session=false states:\n\n  \"Indicates that the page requires participation in an (HTTP)\n   session.\n   If true then the implicit script language variable named session\n   of type javax.servlet.http.HttpSession references the\n   current/new session for the page.\n   If false then the page does not participate in a session; the\n   session implicit variable is unavailable, and any reference to\n   it within the body of the JSP page is illegal and shall result in\n   a fatal translation error.\"\n\nThis section only seems to describe whether the 'session' implicit variable is available or not.  It does *not* say that the JSP is restricted from accessing session attributes using other methods.\n\nThe definition for findAttribute() (pg 2-30) states:\n\n  \"Searches for the named attribute in page, request, session (if valid),\n   and application scope(s) in order and returns the value associated or null.\"\n\nI take \"if valid\" to mean \"a session exists and has not been invalidated\".\n\nIMO Jasper is being more over-enthusiatic here in restricting access to session attributes via the pageContext variable.  Obviously there is a workaround by using request.getSession().getAttribute().  But if you can do it that way, then why not via pageContext?\n\n\nSuggested fix (not tested):\nIn PageContextImpl._initialize():\n// Setup session (if required)\n- if (request instanceof HttpServletRequest && needsSession)\n-     this.session = ((HttpServletRequest) request).getSession();\n+ if (request instanceof HttpServletRequest)\n+     this.session = ((HttpServletRequest) request).getSession(needsSession);\n\nThe intention here is that if needsSession is set, a session will be created on initialisation.  But if needsSession is false, the session will only be accessible if it existed on page load.  But again I have not tested this fix.\n\n\nBackground: the reason I struck this is because I was trying to make an app more scalable by following the recommended practice of only creating a session after login.  However in order to stop JSPs automatically creating a session you need to do the server=false thing.  Unfortunately I then found that Tomcat then makes it difficult to access any session that later gets created manually.", "id": 127660, "time": "2009-06-04T12:15:44Z", "creator": "paul.lebeau@gmail.com", "creation_time": "2009-06-04T12:15:44Z", "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 47317, "text": "Note also that this bug affect more than just pageContext.findAttribute().  This method call is apparently being used by the EL engine as well, so session attributes are unavailable to JSTL etc.", "id": 127661, "time": "2009-06-04T12:24:11Z", "creator": "paul.lebeau@gmail.com", "creation_time": "2009-06-04T12:24:11Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "creator": "markt@apache.org", "is_private": false, "text": "The spec could be clearer but I think the intention is clear that if session=false then a page isn't meant to be able to use the session.\n\nThere are a couple of places where the spec indicates this intention:\n- the JavaDoc for JspContext.getAttribute(String,int)\n- the JavaDoc for JspContext.getAttributeNamesInScope(int)\n- same for PageContext\n- JSP.1.8.2 says you can't define objects\nand a number of others\n\nWith the suggested patch applied, various actions that the spec requires to trigger an ISE do not.", "id": 130586, "time": "2009-09-22T12:46:03Z", "bug_id": 47317, "creation_time": "2009-09-22T12:46:03Z", "attachment_id": null}]