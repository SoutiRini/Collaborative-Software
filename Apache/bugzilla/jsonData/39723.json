[{"count": 0, "tags": [], "bug_id": 39723, "attachment_id": null, "text": "I'm trying to setup a transparent caching forward proxy for my LAN.\nIn transparent mode forward proxy users are not aware they're passing through a\nproxy, the networking layers silently tunnel web requests through the forward proxy.\n\nI got the forward caching proxy part working (I think) : when a LAN browser is\nconfigured to use myip:myport as proxy things work\n\nI also got the networking magic working : requests sent by LAN browsers not\nconfigured to use the proxy do end up in apache, as evidenced by apache logs\n\nThe problem is when I put the two together proxying is not working anymore. A\nbrowser will do a \"GET http://foo.org/bar/\" and the apache logs will show \"GET\n/bar/\" -> all requests are interpreted by apache as local\n\nPeople on the netfilter list say \n\"Well, if Apache sees the traffic on port 8081 then your redirect is working as\nit should. Netfilter does nothing with the contents of the packets, just with\nthe addresses and ports.\"\n\nGoogling for mod_proxy+transparent yields a ton of results, but none of them\nseem useful. So it seems it's an apache problem, either on the code or\ndocumentation side. At least I couldn't find any solution after searching for hours.", "id": 89769, "time": "2006-06-05T11:50:37Z", "creator": "nicolas.mailhot@laposte.net", "creation_time": "2006-06-05T11:50:37Z", "is_private": false}, {"count": 1, "tags": [], "text": "This is not a bug, but a configuration problem. Please discuss this on\nusers@httpd.apache.org.", "is_private": false, "bug_id": 39723, "id": 89770, "time": "2006-06-05T12:20:31Z", "creator": "rpluem@apache.org", "creation_time": "2006-06-05T12:20:31Z", "attachment_id": null}, {"count": 2, "tags": [], "creator": "nicolas.mailhot@laposte.net", "attachment_id": null, "text": "That's why I wrote it might be a \"documentation bug\", since despite re-reading\nit many times I'm no closer to the solution", "id": 89771, "time": "2006-06-05T12:33:59Z", "bug_id": 39723, "creation_time": "2006-06-05T12:33:59Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 39723, "attachment_id": null, "text": "I don't believe this is a config problem.  My understanding is that apache does\nnot support transparent proxying.  \n\nWhat you say in your problem report is not true: The browser does not send \"GET\nhttp://foo.org/bar/\" (as it would if it was configured to use a forward proxy)\nbut rather\nGET /bar/\nHost: foo.org\n\nIn this case, Apache will treat the request as local and, not finding the host\nfoo.org, it will serve it from the default vhost (the first listed).  This is\nnot a bug, but it could be considered a feature request.", "id": 89772, "time": "2006-06-05T13:41:40Z", "creator": "slive@apache.org", "creation_time": "2006-06-05T13:41:40Z", "is_private": false}, {"count": 4, "tags": [], "creator": "nicolas.mailhot@laposte.net", "text": "Ok, marking it as feature request.\n\nI'm very surprised mod_proxy does not support transparency, as a lot of forward\nproxy setups need it these days. Am I really the first one to ask about it ?\n\nIn the meanwhile, maybe it would be interesting to write it's not supported in\nmod_proxy docs ?", "id": 89773, "attachment_id": null, "bug_id": 39723, "creation_time": "2006-06-05T13:49:33Z", "time": "2006-06-05T13:49:33Z", "is_private": false}, {"count": 5, "attachment_id": null, "creator": "rpluem@apache.org", "text": "Although mod_proxy does not support transparent proxing explicitly I think you\ncan solve this with mod_rewrite. Please add the following rule to your proxy\nconfiguration:\n\nRewriteRule (.*) http://%{HTTP_HOST}$1 [P]\n\nKeep in mind that this can only work for http.", "id": 89776, "time": "2006-06-05T14:25:16Z", "bug_id": 39723, "creation_time": "2006-06-05T14:25:16Z", "tags": [], "is_private": false}, {"count": 6, "attachment_id": null, "creator": "nicolas.mailhot@laposte.net", "text": "Well, this sort of works but :\n1. only if https is not proxied (meaning I can't proxy ports where I don't know\nif the connection will be http or https : squid,svn,http-alt,webcache)\n2. it seriously messes up the browsers that use the proxy explicitely\n\nSo it's still far from ideal :(", "id": 89779, "time": "2006-06-05T14:59:01Z", "bug_id": 39723, "creation_time": "2006-06-05T14:59:01Z", "tags": [], "is_private": false}, {"count": 7, "attachment_id": null, "creator": "rpluem@apache.org", "is_private": false, "id": 89780, "time": "2006-06-05T15:12:10Z", "bug_id": 39723, "creation_time": "2006-06-05T15:12:10Z", "tags": [], "text": "(In reply to comment #6)\n> Well, this sort of works but :\n> 1. only if https is not proxied (meaning I can't proxy ports where I don't know\n> if the connection will be http or https : squid,svn,http-alt,webcache)\n\nYou need to know beforehand anyway if the connection is http or https because\nthe virtual host you are redirecting your traffic to for transparent proxying\nneeds to know at configuration time whether it needs to speak http or https.\nBut, if you use the rule \n\nRewriteRule (.*) https://%{HTTP_HOST}$1 [P]\n\nin a SSL enabled virtual host, the client browser will get the wrong certificate\n(the one from your proxy).\n\n> 2. it seriously messes up the browsers that use the proxy explicitely\n\nUse a different virtual host on a different port for your transparent proxy.\nThis should fix it."}, {"count": 8, "attachment_id": null, "creator": "nicolas.mailhot@laposte.net", "text": "Ok, I guess that'll mean one interface for transparent proxiing another for\nnormal proxiing.\n\nis there a way to share definition between the two virtualhosts ? Only the\nrewriterule will differ.\n\nAlso if I want to to self-hosted transparent proxining I need a way to recognize\nthe proxy packets. (if I blindly redirect all messages to external 80 to local\n8081 I'll end up with a loop for the proxy requests) If there a way to control\nthe originating port mod_proxy will use ?", "id": 89785, "time": "2006-06-05T15:48:34Z", "bug_id": 39723, "creation_time": "2006-06-05T15:48:34Z", "tags": [], "is_private": false}, {"count": 9, "attachment_id": null, "creator": "rpluem@apache.org", "text": "(In reply to comment #8)\n> Ok, I guess that'll mean one interface for transparent proxiing another for\n> normal proxiing.\n\nNot really an interface just another port. eg. 8080 for the normal proxy and\n8081 for your transparent proxy.\n\n> \n> is there a way to share definition between the two virtualhosts ? Only the\n> rewriterule will differ.\n\nI do not think, that they look very similar. The transparent proxy host only\nconsist of the rewriterule, whereas the normal proxy has all the stuff within\nthat is needed for a forward proxy. Nevertheless, usally I share common\nconfiguration directives between different virtual hosts by placing them in a\nseparate file and including them via include into both virtual hosts.\n\n> \n> Also if I want to to self-hosted transparent proxining I need a way to recognize\n> the proxy packets. (if I blindly redirect all messages to external 80 to local\n> 8081 I'll end up with a loop for the proxy requests) If there a way to control\n> the originating port mod_proxy will use ?\n\nNo, but I think you can fix this witin your netfilter rules. I am not sure if I\nremember netfilter correctly, but if you place your redirect rule in the FORWARD\nchain this should not touch the connections from your local box.", "id": 89787, "time": "2006-06-05T17:59:35Z", "bug_id": 39723, "creation_time": "2006-06-05T17:59:35Z", "tags": [], "is_private": false}, {"count": 10, "tags": [], "bug_id": 39723, "attachment_id": null, "text": "(In reply to comment #7)\n\n> > 1. only if https is not proxied (meaning I can't proxy ports where I don't know\n> > if the connection will be http or https : squid,svn,http-alt,webcache)\n> \n> You need to know beforehand anyway if the connection is http or https because\n> the virtual host you are redirecting your traffic to for transparent proxying\n> needs to know at configuration time whether it needs to speak http or https.\n> But, if you use the rule \n> \n> RewriteRule (.*) https://%{HTTP_HOST}$1 [P]\n> \n> in a SSL enabled virtual host, the client browser will get the wrong certificate\n> (the one from your proxy).\n> \n\nAnother thought on transparent SSL proxying: Even if httpd would be capable of\ndoing this, I think this functionality would look very similar to what netfilter\ndoes with masquerading (and masquerading is handled better on the kernel level\nIMHO). ", "id": 89788, "time": "2006-06-05T18:28:15Z", "creator": "rpluem@apache.org", "creation_time": "2006-06-05T18:28:15Z", "is_private": false}, {"count": 11, "tags": [], "bug_id": 39723, "attachment_id": null, "id": 89789, "time": "2006-06-05T18:29:26Z", "creator": "nicolas.mailhot@laposte.net", "creation_time": "2006-06-05T18:29:26Z", "is_private": false, "text": "(In reply to comment #9)\n> (In reply to comment #8)\n\n> > is there a way to share definition between the two virtualhosts ? Only the\n> > rewriterule will differ.\n> \n> I do not think, that they look very similar.\n\nWith include I ended up with \n\n<IfModule mod_proxy.c>\n\nListen 192.168.1.1:8081\n\nNameVirtualHost 192.168.1.1:8081\n\n<VirtualHost 192.168.1.1:8081>\n\nRewriteEngine on\nRewriteRule ^(.*) http://%{HTTP_HOST}$1 [P]\n\nInclude conf.d/proxy-shared.txt\n\n</VirtualHost>\n\nListen 192.168.1.1:8080\nNameVirtualHost 192.168.1.1:8080\n\n<VirtualHost 192.168.1.1:8080>\n\nInclude conf.d/proxy-shared.txt\n\n</VirtualHost>\n\n</IfModule>\n\nand all the mod_proxy directives in proxy-shared.txt. Is this wrong ?\n\n> > Also if I want to to self-hosted transparent proxining I need a way to recognize\n> > the proxy packets. (if I blindly redirect all messages to external 80 to local\n> > 8081 I'll end up with a loop for the proxy requests) If there a way to control\n> > the originating port mod_proxy will use ?\n> \n> No, but I think you can fix this witin your netfilter rules. I am not sure if I\n> remember netfilter correctly, but if you place your redirect rule in the FORWARD\n> chain this should not touch the connections from your local box.\n\nIn this setup apache is part of the local box, but the apps you want to redirect\ntoo. (and why would you want to do that when you have control of the box, and of\nthe apps config? Have you tried to setup proxying for all the apps of a Linux\nsystem ? Much simpler to silently redirect everything to the local apache proxy)\n\nYou need a way to distinguish http requests made by you apps and the http\nrequests made by the proxy at the netfilter level - hence I was asking if I\ncould force the use of a special port by the proxy). So :\n\nrequests on the system to port 80 silently loop back to the local apache\nrequests on the system to port 80 from special proxy port are not redirected"}, {"count": 12, "tags": [], "bug_id": 39723, "attachment_id": null, "text": "(In reply to comment #10)\n \n> Another thought on transparent SSL proxying: Even if httpd would be capable of\n> doing this, I think this functionality would look very similar to what netfilter\n> does with masquerading (and masquerading is handled better on the kernel level\n> IMHO). \n\nYou're right, I only want the proxy for caching, and this doesn't work with SSl\nanyway. The problem is those ports where the traffic can be http or https, I'd\nlike to cache http and let https pass through\n", "id": 89790, "time": "2006-06-05T18:31:13Z", "creator": "nicolas.mailhot@laposte.net", "creation_time": "2006-06-05T18:31:13Z", "is_private": false}]