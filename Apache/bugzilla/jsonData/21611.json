[{"count": 0, "tags": [], "creator": "jstutte@quidinfo.it", "attachment_id": null, "text": "Rarely i find this Exception in my logfiles:\n\njava.lang.NullPointerException\n\tat org.apache.coyote.tomcat4.CoyoteRequestFacade.getSession\n(CoyoteRequestFacade.java(Compiled Code))\n\tat org.apache.coyote.tomcat4.CoyoteRequestFacade.getSession\n(CoyoteRequestFacade.java(Compiled Code))\n\tat it.quidinfo.bccore.struts.ADRSActionData.getSessionAttribute\n(ADRSActionData.java(Compiled Code))\n\nI had a look at the code of CoyoteRequestFacade, only way to procduce this is \nby having the request member variable == null. Is it possible that someone \ncalls the clear() function to early/occasionally ? Or a multithread problem?", "id": 40733, "time": "2003-07-15T14:44:15Z", "bug_id": 21611, "creation_time": "2003-07-15T14:44:15Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 21611, "text": "This is a question, not a bug report.\nAt the end of the request processing, the facade is indeed cleared, and after\nthat point, you can't access it anymore. It should also be pointed out that the\nrequest/response, and all the related objects provided by the container are\n*not* thread safe (since the webapp is theorically not allowed to fork its own\nthreads, it is obviously not allowed to do concurrent operations on container\nprovided objects).\nIf you'd like to reopen this report, you have to provide a legitimate use\nscenario (with a test case) where this problem occurs.", "id": 40735, "time": "2003-07-15T15:00:20Z", "creator": "remm@apache.org", "creation_time": "2003-07-15T15:00:20Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 21611, "text": "Well, i get this exception during the processing of a request (to be precise: \nduring the processing of a struts action), therefore it should be allowed to \naccess the request variables.\nWhat happens, if the http connection is closed/aborted during the request? \nCould someone (tomcat obviously ;-) from outside the working thread call clear\n() before the processing has ended?\nI have no testcase, since it happens rarely and from what happens in the logs \ni cannot get any clue on how to reproduce it.\n", "id": 40738, "time": "2003-07-15T15:15:39Z", "creator": "jstutte@quidinfo.it", "creation_time": "2003-07-15T15:15:39Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 21611, "attachment_id": null, "id": 40743, "time": "2003-07-15T15:52:16Z", "creator": "remm@apache.org", "creation_time": "2003-07-15T15:52:16Z", "is_private": false, "text": "Ok. If you're really using TC 4.1.12, you could try to upgrade. If it fails, you\ncan try to add debugging statements to get a better idea on what's going on."}, {"count": 4, "tags": [], "bug_id": 21611, "text": "I get this error in version 4.1.27-LE-jdk14, on Mac OS X Server 10.2.6 with JDK 1.4.1_01, but ONLY \nif I specify CATALINA_BASE as different to CATALINA_HOME. Using Tomcat 4.1.24-LE-jdk14 the \nproblem goes away, so it does appear to be directly related to tomcat.\n\nTomcat dishes out a session ID, and handles the redirects to login on my application. When you \nlogin it successfully goes to the welcome page, however if you click any other link in the \napplication (all pages refer to the session) then you get a NPE in line 365 of \nCoyoteRequestFacade.getSession().", "id": 43084, "time": "2003-08-21T09:24:59Z", "creator": "gareth.boden@egsgroup.com", "creation_time": "2003-08-21T09:24:59Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 21611, "attachment_id": null, "id": 43086, "time": "2003-08-21T10:30:35Z", "creator": "remm@apache.org", "creation_time": "2003-08-21T10:30:35Z", "is_private": false, "text": "This is extremely suspicious, CATALINA_BASE has nothing to do with that part of\nthe code. I believe you are probably doing something wrong somewhere else.\nPlease submit a valid test case."}, {"count": 6, "tags": [], "creator": "carsten.schaedel@pass-consulting.com", "attachment_id": null, "text": "I have the same Problem using Tomcat 4.1.27.\n\n<trace>\njava.lang.NullPointerException\n\tat org.apache.coyote.tomcat4.CoyoteRequestFacade.getHeaderNames\n(CoyoteRequestFacade.java:295)\n\tat javax.servlet.http.HttpServletRequestWrapper.getHeaderNames\n(HttpServletRequestWrapper.java:141)\n</trace>\n\nGiving you a testcase, is really difficult. The bug is not 100% reproduceable. \nIt comes and goes.\nBut for me, it seems that the \"clear()\"-Method of the CoyoteRequestFacade is \ncalled, although the request is still in use by the jsp/servlet.\n\nI'm using a hand-made-framework like struts, but it works properly with earlier \nversions of tomcat.", "id": 44572, "time": "2003-09-24T08:16:08Z", "bug_id": 21611, "creation_time": "2003-09-24T08:16:08Z", "is_private": false}, {"count": 7, "tags": [], "bug_id": 21611, "attachment_id": null, "id": 44586, "time": "2003-09-24T12:37:24Z", "creator": "remm@apache.org", "creation_time": "2003-09-24T12:37:24Z", "is_private": false, "text": "I don't know why you think it is a good idea to give a partial stack trace.\nAnyway, since you cannot provide a way to reproduce this, I will stand by my\nprevious evaluation. Please do not reopen the report."}, {"count": 8, "tags": [], "bug_id": 21611, "attachment_id": null, "id": 45220, "time": "2003-10-07T19:04:32Z", "creator": "zodiac@holoweb.net", "creation_time": "2003-10-07T19:04:32Z", "is_private": false, "text": "I had the same problem and traced it to a JSP custom tag that didn't reset its\ninternal state after each use. With tag pooling turned off everything worked\nfine -- the tag *was* restting its state in the reset() method -- but with tag\npooling on it would fail. The solution was to re-initialise the tag after\ndoEndTag()."}]