[{"count": 0, "tags": [], "creator": "dbb@st-andrews.ac.uk", "attachment_id": null, "is_private": false, "id": 88711, "time": "2006-05-02T11:37:37Z", "bug_id": 39463, "creation_time": "2006-05-02T11:37:37Z", "text": "I have a shtml page, parsed using SSI (test.shtml) as follows\n\n<Head> <Title> Test</Title></Head>\n<Body>\n<!--#include virtual=\"/include_test.html\" -->\n\n</Body>\n\nIf the size of inlude_test.html is above 255 characters the browser is served a\ncorrupt page (A couple of numbers dependant on size of include file) and the\nfollow error appears in the error logs \n\n(14)Bad address: core_output_filter: writing data to the network\n\ninclude_test.html is \n\n<!-- this is a comment designed to pad out to 255\n this is a comment designed to pad out to 255\n this is a comment designed to pad out to 255\n this is a comment designed to pad out to 255\n this is a comment designed to pad out to 255\n this is a comment designed to pad out to 255-->\n\n\n\n\nOS: Solaris 10\nenv: \nHOME=/\nHZ=\nLC_COLLATE=en_GB.ISO8859-15\nLC_CTYPE=en_GB.ISO8859-1\nLC_MESSAGES=C\nLC_MONETARY=en_GB.ISO8859-15\nLC_NUMERIC=en_GB.ISO8859-15\nLOGNAME=root\nMAIL=/var/mail/root\nPATH=/usr/ccs/bin/:/usr/bin:/bin:/usr/sbin:/opt/local/bin:/usr/sfw/bin:/usr/local/bin\nSHELL=/sbin/sh\nTERM=xterm\nTZ=GB\nHOSTTYPE=sun4\nVENDOR=sun\nOSTYPE=solaris\nMACHTYPE=sparc\nSHLVL=1\nPWD=/source/httpd-2.2.2\nLDFLAGS=-R/usr/local/ssl/lib:/usr/local/lib:/usr/sfw/lib -L/usr/local/lib\n-L/usr/local/ssl/lib -L/usr/sfw/lib\nCPPFLAGS=-I/usr/local/include -I/usr/local/ssl/include -I/usr/sfw/include\nLD=/usr/ccs/bin/ld -R/usr/local/ssl/lib:/usr/local/lib:/usr/sfw/lib\n\ncompiled with the solaris 10 shipped gcc in /usr/sfw/bin\ncompile steps\n./configure\nmake depend\nmake\nmake install"}, {"count": 1, "tags": [], "text": "*** Bug 39464 has been marked as a duplicate of this bug. ***", "is_private": false, "bug_id": 39463, "id": 88715, "time": "2006-05-02T12:31:06Z", "creator": "dbb@st-andrews.ac.uk", "creation_time": "2006-05-02T12:31:06Z", "attachment_id": null}, {"count": 2, "tags": [], "creator": "dbb@st-andrews.ac.uk", "attachment_id": null, "is_private": false, "id": 88717, "time": "2006-05-02T13:54:10Z", "bug_id": 39463, "creation_time": "2006-05-02T13:54:10Z", "text": "\nThis looks like a sendfile problem.\n\nIf I put 'EnableSendFile off' into the httpd.conf file it works normally.\n\nlooks like in 2.0.58 sendfile goes into the AP_LIBS but gcc isn't called with\n-lsendfile  in 2.2.X -lsendfile appears in AP_LIBS and gcc is called with -lsendfile\n\nI guess configure in 2.2.X is not correctly detecting sendfile support?"}, {"count": 3, "tags": [], "creator": "dbb@st-andrews.ac.uk", "is_private": false, "text": "\nI should say that the File System holding the html file is mounted rw inside\na zone.", "id": 88719, "time": "2006-05-02T14:09:26Z", "bug_id": 39463, "creation_time": "2006-05-02T14:09:26Z", "attachment_id": null}, {"count": 4, "tags": [], "text": "\n\nLooking at\n\nldd httpd\n\nboth the 2.0.58 and 2.2.2 binaries are using /lib/libsendfile.so.1\n\nEnableSendFile is not switched off in the 2.0.58 httpd.conf file so are\nthe versions of httpd using sendfile in different ways??\n\n", "attachment_id": null, "id": 88721, "creator": "dbb@st-andrews.ac.uk", "time": "2006-05-02T14:29:58Z", "bug_id": 39463, "creation_time": "2006-05-02T14:29:58Z", "is_private": false}, {"count": 5, "tags": [], "text": "\nChanged Summary from \n\nPage corrupted with SSI include over 255 characters on apache 2.2.2\n\nI've now tested this in the global zone to make sure it's not a Solaris zones\nissue with the same behaviour. SSI includes > 255 characters produce corrupted\noutput. If I just ask for the offending include file directly it works fine,\nit's only when it's included in a Server Parsed file that the corruption occurs.", "is_private": false, "id": 88739, "creator": "dbb@st-andrews.ac.uk", "time": "2006-05-03T07:52:03Z", "bug_id": 39463, "creation_time": "2006-05-03T07:52:03Z", "attachment_id": null}, {"count": 6, "attachment_id": 18219, "bug_id": 39463, "is_private": false, "id": 88741, "time": "2006-05-03T09:29:14Z", "creator": "dbb@st-andrews.ac.uk", "creation_time": "2006-05-03T09:29:14Z", "tags": [], "text": "Created attachment 18219\nTruss output from httpd process serving file\n\n\nTruss of process for include when file >255 characters, include file < 255\nchars\nand grabbing file directly > 255 characters\n\nLooks like sendfile is not called when the file is < 255 characters and\nincluded,\nbut sendfile is working for the directly accessed file, > 255 characters."}, {"count": 7, "attachment_id": null, "bug_id": 39463, "is_private": false, "id": 88744, "time": "2006-05-03T10:37:43Z", "creator": "jorton@redhat.com", "creation_time": "2006-05-03T10:37:43Z", "tags": [], "text": "The error:\n\n19769:  sendfilev64(1, 17, 0x002BFDF0, 3, 0xFFBFCEAC)   Err#14 EFAULT\n\nimplies either APR is not driving the LFS-savvy sendfilev64 correctly on\nSolaris, or there is some Solaris bug here.  Are you up-to-date with Solaris\npatches?"}, {"count": 8, "tags": [], "bug_id": 39463, "attachment_id": null, "id": 88746, "time": "2006-05-03T10:39:13Z", "creator": "jorton@redhat.com", "creation_time": "2006-05-03T10:39:13Z", "is_private": false, "text": "*** Bug 39236 has been marked as a duplicate of this bug. ***"}, {"count": 9, "tags": [], "creator": "dbb@st-andrews.ac.uk", "attachment_id": null, "is_private": false, "id": 88747, "time": "2006-05-03T10:57:58Z", "bug_id": 39463, "creation_time": "2006-05-03T10:57:58Z", "text": "\nThere was a new path cluster out a couple of days ago.  No mention of sendfile\nbut I'll patch the OS anyway and re check.  Is a truss of what the 2.0.58\nhttpd process does useful?"}, {"count": 10, "tags": [], "text": "Thanks, no.  There is a slightly different code path in 2.2.x which is why this\nhas regressed since 2.0.x: it is using sendfilev64 to allow support for large\nfiles (2.0.x would have just used sendfilev).\n\nI don't have immediate access to a Solaris >=9 box to check the sendfilev64\narguments are being set up correctly.", "is_private": false, "bug_id": 39463, "id": 88749, "time": "2006-05-03T11:51:47Z", "creator": "jorton@redhat.com", "creation_time": "2006-05-03T11:51:47Z", "attachment_id": null}, {"count": 11, "tags": [], "bug_id": 39463, "attachment_id": null, "id": 88760, "time": "2006-05-03T14:48:21Z", "creator": "dbb@st-andrews.ac.uk", "creation_time": "2006-05-03T14:48:21Z", "is_private": false, "text": "\nI've found something on the Samba mailing list that mentions sendfile64 EFAULT\nand Solaris 10 though it may not be relevant.\n\nhttp://lists.samba.org/archive/samba-technical/2004-October/037477.html\n\nIf there's anything you want me to try out I've access to a couple of Solaris 10\nboxes.\n\nThanks."}, {"count": 12, "tags": [], "bug_id": 39463, "attachment_id": null, "id": 88797, "time": "2006-05-04T05:52:29Z", "creator": "jorton@redhat.com", "creation_time": "2006-05-04T05:52:29Z", "is_private": false, "text": "APR already supposedly does that much.  I've sent out a plea for a Solaris-savvy\nAPR developer to have a look at this."}, {"count": 13, "tags": [], "text": "The consensus was that this is probably a Solaris bug and that you should open a\nbug with Sun.  Marking as NEEDINFO until any further information is forthcoming.", "attachment_id": null, "id": 88990, "creator": "jorton@redhat.com", "time": "2006-05-10T12:38:24Z", "bug_id": 39463, "creation_time": "2006-05-10T12:38:24Z", "is_private": false}, {"count": 14, "tags": [], "text": "*** Bug 39632 has been marked as a duplicate of this bug. ***", "attachment_id": null, "bug_id": 39463, "id": 89347, "time": "2006-05-22T14:25:04Z", "creator": "jorton@redhat.com", "creation_time": "2006-05-22T14:25:04Z", "is_private": false}, {"count": 15, "tags": [], "text": "Mass reassign the 44 open apr-bugs to apr bug list", "is_private": false, "id": 93814, "creator": "wrowe@apache.org", "time": "2006-09-19T19:54:31Z", "bug_id": 39463, "creation_time": "2006-09-19T19:54:31Z", "attachment_id": null}, {"count": 16, "tags": [], "text": "Waiting for assessment from Sun still?  Or do we have a patch number now that\nwe can reference, and close this report?", "attachment_id": null, "id": 93867, "creation_time": "2006-09-19T20:28:20Z", "time": "2006-09-19T20:28:20Z", "creator": "wrowe@apache.org", "bug_id": 39463, "is_private": false}, {"count": 17, "tags": [], "text": "(In reply to comment #16)\n> Waiting for assessment from Sun still?  Or do we have a patch number now that\n> we can reference, and close this report?\n\nSorry, this fell in to a black hole somewhere here.  I'm just trying to get added\nin as a support contact to our Sun support contract so I can create the call myself.", "is_private": false, "bug_id": 39463, "id": 93907, "time": "2006-09-20T09:27:18Z", "creator": "dbb@st-andrews.ac.uk", "creation_time": "2006-09-20T09:27:18Z", "attachment_id": null}, {"count": 18, "tags": [], "bug_id": 39463, "attachment_id": null, "id": 93914, "time": "2006-09-20T11:49:19Z", "creator": "dbb@st-andrews.ac.uk", "creation_time": "2006-09-20T11:49:19Z", "is_private": false, "text": "\nI've received the following from sun\n\n'As you mention, the Apache team think this may be a Solaris issue, and as such,\nwould you (or them) be able to supply the relevant section of source code such\nthat I can begin trying to verify the results and build a test case? Ovbiously\nat this stage, I can't say whether it is a Solaris issue or not, but we need to\nget to the bottom of what is happening in order to rule this out.'\n\nCan someone point me directly at the relevant source directly?  Does something\ndifferent happen when server side includes are used since it only seems to\nhappen in that case?"}, {"count": 19, "tags": [], "creator": "jorton@redhat.com", "attachment_id": null, "is_private": false, "id": 93916, "time": "2006-09-20T12:06:13Z", "bug_id": 39463, "creation_time": "2006-09-20T12:06:13Z", "text": "http://svn.apache.org/viewvc/apr/apr/trunk/network_io/unix/sendrecv.c?view=markup\n\nin the \"#elif defined(HAVE_SENDFILEV)\" section."}, {"count": 20, "attachment_id": null, "bug_id": 39463, "is_private": false, "id": 93917, "time": "2006-09-20T12:36:16Z", "creator": "dbb@st-andrews.ac.uk", "creation_time": "2006-09-20T12:36:16Z", "tags": [], "text": "\nThanks, I'll pass that on.  Has anyone built a testcase for this we can just\nhand over or can anyone build one quickly?\n"}, {"count": 21, "tags": [], "text": "It is not understood what the exact repro case for this.  sendfilev64-in-httpd\nis working for some Solaris 10 users (AFAIK), but not others.\n\nIn apr/test there is a toy test app, e.g.:\n\n  cd test\n  make sendfile\n  ./sendfile server &\n  ./sendfile client blocking\n\nbut this may not be sufficient to reproduce the issue.  You can try it and see\nwhether it fails, at least.", "is_private": false, "id": 93918, "creator": "jorton@redhat.com", "time": "2006-09-20T12:40:40Z", "bug_id": 39463, "creation_time": "2006-09-20T12:40:40Z", "attachment_id": null}, {"count": 22, "tags": [], "text": "This works fine.  Is it a red herring that sendfile is fine left on except when\nyou're using server parsed html and including a file that way?  Any other\nthoughts on how to reproduce?\n\nalyx# ./sendfile server &\n[2] 2627\nalyx# Waiting for a client to connect...\n./sendfile client blocking\nCreating a test file...\nSending the file...\nProcessing a client...\napr_socket_sendfile() updated offset with 0\napr_socket_sendfile() updated len with 370049\nbytes really sent: 370049\nAfter apr_socket_sendfile(), the kernel file pointer is at offset 0.\nserver: apr_socket_sendfile() worked as expected!\nclient: apr_socket_sendfile() worked as expected!\n[2]  - Done                          ./sendfile server\n", "attachment_id": null, "id": 93921, "creator": "dbb@st-andrews.ac.uk", "time": "2006-09-20T13:52:36Z", "bug_id": 39463, "creation_time": "2006-09-20T13:52:36Z", "is_private": false}, {"count": 23, "tags": [], "text": "Created attachment 18919\nDtrace for sendfilev", "is_private": false, "id": 94125, "creator": "dbb@st-andrews.ac.uk", "time": "2006-09-26T15:44:55Z", "bug_id": 39463, "creation_time": "2006-09-26T15:44:55Z", "attachment_id": 18919}, {"count": 24, "tags": [], "creator": "dbb@st-andrews.ac.uk", "attachment_id": null, "id": 94126, "time": "2006-09-26T15:45:28Z", "bug_id": 39463, "creation_time": "2006-09-26T15:45:28Z", "is_private": false, "text": "Sun think it's a invalid address being passed into sendfilev when the headers\nare being added.  The engineer reckons there's a loop to add 0 or more headers,\none file and 0 or more footers, the SEGFAULT happens while adding the headers.\n\nI should be able to look at this again tomorrow, I can try a dtrace against the\nprocess when it succeeds (non Server parsed include) or for different sized\nincludes.\n\nI've attached some info from the engineer, the fault seems to occur in the for\nloop inside senddev_chunk64, the sigcheck function in the dtrace attached\ncorresponds to the ISSIG macro defined in <sys/proc.h> so it looks like the\nsegfault occurs for i=2\n\n\n---------Engineer comments ------------------\nI believe what is happening is that the sfv_off part of the sfv struct is of\ntype off_t (as in the man page for sendfilev). Looking at the header file\n<sys/types.h>, we see that off_t is defined as a longlong_t if the\nFILE_OFFSET_BITS value is 64bit (i.e. large file aware). I believe this number\nhas gone negative, and therefore now points to an invalid address within the\nprocess's address space, and hence the EFAULT is returned.\n\nI would suggest that the Apache team (or yourself) put in some code to sanity\ncheck the data going into the sendfilev() system call, or alternatively (which\nmay be better in your case for now), print out the values passed in if sendfilev\nreturnes EFAULT.\n\nMaybe the quickest sanity check is to add an assert such as this in the section\nof code you pointed me to originally (in the apr_socket_sendfile) function:\n\n    /* Add the headers */\n    for (i = 0; i < hdtr->numheaders; i++, curvec++) {\n        sfv[curvec].sfv_fd = SFV_FD_SELF;\n        sfv[curvec].sfv_flag = 0;\n        assert(hdtr->headers[i].iov_base >= 0);\n        sfv[curvec].sfv_off = (apr_off_t)hdtr->headers[i].iov_base;\n        sfv[curvec].sfv_len = hdtr->headers[i].iov_len;\n        requested_len += sfv[curvec].sfv_len;\n    }\n\n\nIt wouldn't be foolproof, but would cause Apache to fail when an obviously\nnegative number is put into the sfv_off field. I'll leave this to you and the\nApache team!\n\n\nIn summary, it would appear that an invalid address is being passed into the\nsendfilev system call (the negative numbers), and the kernel is responding as\ndefined in the man page:\n\n     EFAULT                  The vec argument points to an  ille-\n                             gal address.\n\nGranted, the vec argument itself points to a valid address, but the data within\nit is not valid, and generates a pagefault - i.e. EFAULT is not unreasonable\ngiven an invalid requested address.\n\n----And\n\nLooking at the dtrace data, we end up in the \"for\" loop in senddev_chunk64:\n\n    for (i = 0; i < copy_cnt; i++)\n    {\n        ISSIG(...)\n    ...\n    }\n\nThe ISSIG macro (defined in <sys/proc.h>) results in a call to sigcheck(). The\nsigcheck function is called 3 times in all, leading me to believe that the\nproblem occurs at i=2 in the loop.\n\nLooking at the truss data, we see:\n\n    16912/1:        sendfilev64(1, 17, 0x00285590, 7, 0xFFBFCDAC)   Err#14 EFAULT\n    sfv_fd=-2       sfv_flag=0x0    sfv_off=2877088 sfv_len=203\n    sfv_fd=-2       sfv_flag=0x0    sfv_off=2767552 sfv_len=4\n    sfv_fd=-2       sfv_flag=0x0    sfv_off=-31195136       sfv_len=44\n    ...\n\nThe third line corresponds with i=2. The offset is negative, and while I'm\nprepared to accept that truss is showing a large unsigned value as a signed\nvalue (bug in truss?), converting this to hex (unsigned) gives an address of\n0xFE240000 (given SFV_FD_SELF is set for this SFV entry, this is within the\naddress space of the process itself). \n\n\n-----------------------------------------------------\n\n\n"}, {"count": 25, "tags": [], "text": "APR is not built using _FILE_OFFSET_BITS=64, but _LARGEFILE64_SOURCE and is\nusing sendfilev64() and struct sendfilevec64.\n\nFor structures with SFV_FD_SELF set, the sfv_off field is used to store a\npointer value.  I don't see how checking whether it's negative makes any sense;\nif the value is negative the pointer is in the top half of the address space. \nThat isn't a bug.\n\n(though note that in the LFS build, sfv_off is used to store a 32-bit pointer in\na 64-bit field)", "attachment_id": null, "bug_id": 39463, "id": 94162, "time": "2006-09-27T14:29:39Z", "creator": "jorton@redhat.com", "creation_time": "2006-09-27T14:29:39Z", "is_private": false}, {"count": 26, "tags": [], "creator": "jorton@redhat.com", "attachment_id": null, "is_private": false, "id": 95455, "time": "2006-11-06T01:00:31Z", "bug_id": 39463, "creation_time": "2006-11-06T01:00:31Z", "text": "*** Bug 40879 has been marked as a duplicate of this bug. ***"}, {"count": 27, "tags": [], "creator": "jorton@redhat.com", "is_private": false, "text": "We are still lacking a solid diagnosis on this issue.  You need to file bugs\nwith Sun to get them to fix this or demonstrate that the APR code is incorrect.\n (or rely on disabling sendfile in the httpd configuration forever more) \n\nThe comment from the Sun engineer (comment 18) don't really help.", "id": 95462, "time": "2006-11-06T03:34:27Z", "bug_id": 39463, "creation_time": "2006-11-06T03:34:27Z", "attachment_id": null}, {"count": 28, "tags": [], "creator": "wrowe@apache.org", "attachment_id": null, "is_private": false, "id": 95477, "time": "2006-11-06T06:35:17Z", "bug_id": 39463, "creation_time": "2006-11-06T06:35:17Z", "text": "(In reply to comment #27)\n\n> The comment from the Sun engineer (comment 18) don't really help.\n\nActually Joe - it was useful that it sparked our reporter to pursue dtrace\noutput, unfortunately he has yet to see dtrace output that matches up with\nthe speculation by Sun.\n\nIf you write a very trivial program using the dtrace flow, you should be able\nto make a dirt simple stupid reproduction case, since your two specific patterns\nappear to always-succeed and always-fail on your kernel build.\n"}, {"count": 29, "tags": [], "bug_id": 39463, "attachment_id": null, "id": 95481, "time": "2006-11-06T07:32:19Z", "creator": "dbb@st-andrews.ac.uk", "creation_time": "2006-11-06T07:32:19Z", "is_private": false, "text": "\nSorry,\n     I've not been very good at finding time to sit down with this again, I've got\nmore feedback from the engineer and need to do a bit of testing here to confirm\nthe test code causes reproducible success / failures.\n\nI'll get back on this today or tomorrow am.\n  \n\n  Duncan"}, {"count": 30, "tags": [], "text": "\nIt appears this bug also shows up in Solaris 9 and is not restricted to Solaris\n10.  libsendfile.so is also available to Solaris8 if you apply patch 111297-01\nbut I haven't tested whether this bug affects that as well.", "attachment_id": null, "bug_id": 39463, "id": 95501, "time": "2006-11-06T15:31:11Z", "creator": "tam@math.ubc.ca", "creation_time": "2006-11-06T15:31:11Z", "is_private": false}, {"count": 31, "tags": [], "bug_id": 39463, "attachment_id": 19095, "id": 95517, "time": "2006-11-07T02:11:55Z", "creator": "dbb@st-andrews.ac.uk", "creation_time": "2006-11-07T02:11:55Z", "is_private": false, "text": "Created attachment 19095\nTruss output given to Sun, new notes refer to it."}, {"count": 32, "tags": [], "bug_id": 39463, "attachment_id": null, "id": 95518, "time": "2006-11-07T02:26:49Z", "creator": "jorton@redhat.com", "creation_time": "2006-11-07T02:26:49Z", "is_private": false, "text": "Duncan sent me some more feedback from the Sun engineer - thanks Duncan for\ncontinuing to chase this.\n\nThe interesting thing here is that a 32-bit pointer is being stored in a (long\nlong) variable.  It looks like one compiler (GCC) may be sign-extending the\npointer value in that case but another compiler does not (Sun CC).\n\nGiven that pointer<->integer conversion is mostly implementation defined in C I\nhad presumed that the kernel must simply discard the high word of the integer\nsince the field is defined to be storing a 32-bit integer in the low word.  But\npossibly it does not, and this is why the EFAULT is being generated; it's seeing\na pointer value outside the 32-bit address space.\n\nI'm going to attach a patch which might test this theory - could someone test\nthis out?"}, {"count": 33, "tags": [], "text": "Created attachment 19096\nsendfilev fix", "is_private": false, "id": 95519, "creator": "jorton@redhat.com", "time": "2006-11-07T02:27:34Z", "bug_id": 39463, "creation_time": "2006-11-07T02:27:34Z", "attachment_id": 19096}, {"count": 34, "tags": [], "bug_id": 39463, "attachment_id": null, "id": 95522, "time": "2006-11-07T03:18:19Z", "creator": "tam@math.ubc.ca", "creation_time": "2006-11-07T03:18:19Z", "is_private": false, "text": "I have confirmed this workaround works for httpd 2.2.3 and Solaris 9.  I notice\nthere is an analogous situation several lines further on in sendrecv.c so I\nchanged that line too.  Here's the patch I used:\n\n--- sendrecv.c~ Tue Nov  7 02:58:54 2006\n+++ sendrecv.c  Tue Nov  7 03:01:04 2006\n@@ -861,7 +861,7 @@\n     for (i = 0; i < hdtr->numheaders; i++, curvec++) {\n         sfv[curvec].sfv_fd = SFV_FD_SELF;\n         sfv[curvec].sfv_flag = 0;\n-        sfv[curvec].sfv_off = (apr_off_t)hdtr->headers[i].iov_base;\n+        sfv[curvec].sfv_off = (unsigned long)hdtr->headers[i].iov_base;\n         sfv[curvec].sfv_len = hdtr->headers[i].iov_len;\n         requested_len += sfv[curvec].sfv_len;\n     }\n@@ -885,7 +885,7 @@\n     for (i = 0; i < hdtr->numtrailers; i++, curvec++) {\n         sfv[curvec].sfv_fd = SFV_FD_SELF;\n         sfv[curvec].sfv_flag = 0;\n-        sfv[curvec].sfv_off = (apr_off_t)hdtr->trailers[i].iov_base;\n+        sfv[curvec].sfv_off = (unsigned long)hdtr->trailers[i].iov_base;\n         sfv[curvec].sfv_len = hdtr->trailers[i].iov_len;\n         requested_len += sfv[curvec].sfv_len;\n"}, {"count": 35, "tags": [], "creator": "dbb@st-andrews.ac.uk", "attachment_id": null, "id": 95523, "time": "2006-11-07T03:42:12Z", "bug_id": 39463, "creation_time": "2006-11-07T03:42:12Z", "is_private": false, "text": "\nThanks for this Joe, I've been unsuccessfully looking at that code trying to\nmatch it up with the test case.  The engineers test script gives the expected\noutput here, I haven't tried it with the Sun compiler though.\n\nI've just recompiled httpd 2.2.3 with your patch applied, but using #include\nvirtual still EFAULTS I've retried with Joseph's extended patch & still get the\nEFAULTS.\n\nSolaris 10 using the bundled 3.4.3 compiler but Suns ld from /usr/ccs/bin\n\nI'll play around a bit in case it's my environment.  Joseph - which compiler are\nyou using?\n\nCheers,\n      Duncan\n\n\n"}, {"count": 36, "tags": [], "text": "Thanks Joseph.  Duncan: can you make sure you pass --with-included-apr when\nconfiguring httpd in case any other APR on your system is being picked up?", "is_private": false, "bug_id": 39463, "id": 95525, "time": "2006-11-07T03:43:26Z", "creator": "jorton@redhat.com", "creation_time": "2006-11-07T03:43:26Z", "attachment_id": null}, {"count": 37, "tags": [], "text": "\nApache's finding my old apr libs from my current apache install & using those.\n\nScratch that last comment till I update them.", "is_private": false, "id": 95526, "creator": "dbb@st-andrews.ac.uk", "time": "2006-11-07T03:48:21Z", "bug_id": 39463, "creation_time": "2006-11-07T03:48:21Z", "attachment_id": null}, {"count": 38, "tags": [], "creator": "dbb@st-andrews.ac.uk", "attachment_id": null, "is_private": false, "id": 95528, "time": "2006-11-07T04:00:48Z", "bug_id": 39463, "creation_time": "2006-11-07T04:00:48Z", "text": "\nThanks Joe,\n      That's done the trick.  Working fine on Solaris 10 now.\n\n  Duncan"}, {"count": 39, "tags": [], "text": "OK great, thanks a lot.  Committed the workaround as:\n\nhttp://svn.apache.org/viewvc?view=rev&rev=472076\n\nbut I would certainly consider this a Solaris bug as above:\n\nConversion between pointers and integers is implementation-defined behaviour in\nC and given a lack of any documentation to the contrary for sendfilev64() the\nkernel should simply ignore the high word since the contents of the high word\nwill depend entirely on compiler, unless the application happens to cast\nappropriately.\n", "is_private": false, "bug_id": 39463, "id": 95531, "time": "2006-11-07T04:13:57Z", "creator": "jorton@redhat.com", "creation_time": "2006-11-07T04:13:57Z", "attachment_id": null}, {"count": 40, "attachment_id": null, "bug_id": 39463, "is_private": false, "id": 95564, "time": "2006-11-08T05:21:53Z", "creator": "dbb@st-andrews.ac.uk", "creation_time": "2006-11-08T05:21:53Z", "tags": [], "text": "\nAs an update, the engineer disagrees that Solaris should ignore the top 32 bits\nas (I'm paraphrasing here) you are effectively casting as the wrong type, the\nkernel would have to selectively ignore data passed in on the basis of incorrect\ncoding.  \nThe apache code requests the use of the sendfilevec64 struct which has the type\nfor the offset field svf_off defined in the header file as off64_t (a long long,\nsee <sys/types.h>). When the correct type is used with the Sun compiler, the\nresults are as expected. \n\nI'll attach the code to demonstrate this to the case.\n\nUse of the type \"apr_off_t\" or \"long\" which implies a signed value, hence sign\nextension is performed.\nUse of the correct type \"off64_t\" with gcc still generates a sign-extended\nvalue. (This may be a fault/feature of gcc)\n\nThe workaround works but with the proviso that unsigned long != off64_t\n\nIs it worth bringing this up with the GCC folks so you can put the correct type\ninto sendfilev.c ?\n\nThanks for all the help.\n\n   Duncan\n\n"}, {"count": 41, "tags": [], "text": "Created attachment 19100\nShort C snippet to show behaviour of long / unsigned long / off64_t", "attachment_id": 19100, "id": 95565, "creation_time": "2006-11-08T05:26:47Z", "time": "2006-11-08T05:26:47Z", "creator": "dbb@st-andrews.ac.uk", "bug_id": 39463, "is_private": false}, {"count": 42, "tags": [], "creator": "jorton@redhat.com", "is_private": false, "text": "No, GCC is working as designed; conversion of pointer to integer is\nimplementation-defined behaviour (C99 section 6.3.2.3 para 6) and GCC documents\nits behaviour to sign-extend if casting up to a larger-sized integer.  This is\nlegitimate compiler behaviour.\n\nIf Solaris has an explicit requirement for how the pointer should be packed in\nthe integer it needs to be documented.  Otherwise the only sane behaviouor is to\njust discard the meaningless top word.\n\nCan you get them to direct any followup for this to dev@apr?  It's a bit silly\ntrying to have this discussion through a third party! :)", "id": 95570, "time": "2006-11-08T06:45:41Z", "bug_id": 39463, "creation_time": "2006-11-08T06:45:41Z", "attachment_id": null}, {"count": 43, "tags": [], "creator": "dbb@st-andrews.ac.uk", "attachment_id": null, "is_private": false, "id": 95571, "time": "2006-11-08T06:48:14Z", "bug_id": 39463, "creation_time": "2006-11-08T06:48:14Z", "text": "\nI tried bringing this up as a GCC bug & got the following.  Guess the workaround\nis the best solution for this then.\n\nConversions from pointer types to integer types are implementation defined. \nGCC sign extends when converting a pointer to a wider integer.  See\n<http://gcc.gnu.org/onlinedocs/gcc-3.4.6/gcc/Arrays-and-pointers-implementation.html#Arrays-and-pointers-implementation\nfor the exact rules implemented by GCC."}, {"count": 44, "tags": [], "creator": "dbb@st-andrews.ac.uk", "attachment_id": null, "text": "\nHi Joe,\n     I'll request that, my knowledge of this isn't nearly good enough to play man\nin the middle. :)\n\nCheers,\n       Duncan", "id": 95574, "time": "2006-11-08T06:56:03Z", "bug_id": 39463, "creation_time": "2006-11-08T06:56:03Z", "is_private": false}, {"count": 45, "tags": [], "text": "*** Bug 41370 has been marked as a duplicate of this bug. ***", "attachment_id": null, "id": 98356, "creation_time": "2007-01-22T03:48:04Z", "time": "2007-01-22T03:48:04Z", "creator": "jorton@redhat.com", "bug_id": 39463, "is_private": false}, {"count": 46, "tags": [], "text": "*** Bug 42193 has been marked as a duplicate of this bug. ***", "is_private": false, "bug_id": 39463, "id": 102082, "time": "2007-04-23T03:46:53Z", "creator": "jorton@redhat.com", "creation_time": "2007-04-23T03:46:53Z", "attachment_id": null}, {"count": 47, "tags": [], "creator": "jorton@redhat.com", "is_private": false, "text": "Merged for 1.2.x: http://svn.apache.org/viewvc?view=rev&revision=531420", "id": 102083, "time": "2007-04-23T03:48:49Z", "bug_id": 39463, "creation_time": "2007-04-23T03:48:49Z", "attachment_id": null}]