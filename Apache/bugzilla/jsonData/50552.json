[{"count": 0, "tags": [], "creator": "chris.rimmer@nominet.org.uk", "attachment_id": 26463, "id": 143129, "time": "2011-01-06T12:39:49Z", "bug_id": 50552, "creation_time": "2011-01-06T12:39:49Z", "is_private": false, "text": "Created attachment 26463\nFix to abstract catalina task class to set up redirector correctly\n\nUsing the Ant List Task with outputproperty set causes a null pointer exception in the event of any error. For example, if tomcat is not running or the url given is incorrect. Since the bug is in a base class, this probably affects all the ant tasks.\n\nThe bug is due to the fact that the code to clean up the redirector is called in the finally block, but the equivalent code to set it up is not. This problem is also present in Tomcat 6.\n\nThe attached patch fixes the problem. With the patch in place, using the list task when tomcat is down gives \"Connection refused\" instead."}, {"count": 1, "tags": [], "bug_id": 50552, "attachment_id": null, "text": "Confirmed in Tomcat 7 trunk:\n\n  <target name=\"bug50552test\">\n    <taskdef name=\"tomcat-list\" classname=\"org.apache.catalina.ant.ListTask\"/>\n    <tomcat-list url=\"broken\" username=\"username\" password=\"password\" outputproperty=\"foo\" />\n  </target>\n\nResults in the following output:\n\nbug50552test:\n\nBUILD FAILED\n/home/cschultz/projects/diagnosis/build.xml:1434: java.lang.NullPointerException\n        at org.apache.tools.ant.taskdefs.Redirector.complete(Redirector.java:906)\n        at org.apache.catalina.ant.BaseRedirectorHelperTask.closeRedirector(BaseRedirectorHelperTask.java:267)\n        at org.apache.catalina.ant.AbstractCatalinaTask.execute(AbstractCatalinaTask.java:272)\n        at org.apache.catalina.ant.AbstractCatalinaTask.execute(AbstractCatalinaTask.java:149)\n        at org.apache.catalina.ant.ListTask.execute(ListTask.java:51)\n        at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n        at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n        at java.lang.reflect.Method.invoke(Method.java:597)\n        at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n        at org.apache.tools.ant.Task.perform(Task.java:348)\n        at org.apache.tools.ant.Target.execute(Target.java:390)\n        at org.apache.tools.ant.Target.performTasks(Target.java:411)\n        at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1397)\n        at org.apache.tools.ant.Project.executeTarget(Project.java:1366)\n        at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n        at org.apache.tools.ant.Project.executeTargets(Project.java:1249)\n        at org.apache.tools.ant.Main.runBuild(Main.java:801)\n        at org.apache.tools.ant.Main.startAnt(Main.java:218)\n        at org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n        at org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)", "id": 143133, "time": "2011-01-06T14:09:05Z", "creator": "chris@christopherschultz.net", "creation_time": "2011-01-06T14:09:05Z", "is_private": false}, {"count": 2, "tags": [], "creator": "chris@christopherschultz.net", "attachment_id": null, "id": 143139, "time": "2011-01-06T16:39:45Z", "bug_id": 50552, "creation_time": "2011-01-06T16:39:45Z", "is_private": false, "text": "A couple of comments:\n\n1. This patch looks like it will fix the problem, though there are other options (see below)\n2. Isn't this a bug in ant because it doesn't do NULL checking?\n3. Does output redirection /ever/ work?\n\nAbstractCatalinaTask.execute /never/ opens the redirector (BaseRedirectorHelperTask.openRedirector), yet calls BaseRedirectorHelperTask.closeRedirector in the finally block, unconditionally.\n\nI think this can be fixed in one of several ways:\n\n1. Use Chris Rimmer's patch\n2. Modify BaseRedirectorHelperTask.closeRedirector to ensure that the streams have been opened before calling Redirector.complete\n3. Have ant add null checking to Redirector.complete\n\nFinally, it probably makes sense for AbstractCatalinaTask.execute to open these redirection streams at some point, which it does not appear to be doing, hence my question #3 above."}, {"count": 3, "tags": [], "bug_id": 50552, "attachment_id": null, "text": "FYI I can confirm that when outputProperty is set and there are no errors, the output property /does/ get the contents of the manager task's reply.", "id": 143140, "time": "2011-01-06T16:41:15Z", "creator": "chris@christopherschultz.net", "creation_time": "2011-01-06T16:41:15Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 50552, "attachment_id": null, "id": 143142, "time": "2011-01-06T16:58:20Z", "creator": "chris@christopherschultz.net", "creation_time": "2011-01-06T16:58:20Z", "is_private": false, "text": "It looks like this works properly in the sunny-day scenario because BaseRedirectorHelperTask.handleOutput is typically called, which properly opens the redirector:\n\n    protected void handleOutput(String output) {\n        if (redirectOutput) {\n            if (redirectOutPrintStream == null) {\n                openRedirector();\n            }\n            redirectOutPrintStream.println(output);\n            if (alwaysLog) {\n                log(output, Project.MSG_INFO);\n            }\n\nIn the error case, AbstractCatalinaTask.execute does this:\n\n            if (isFailOnError()) {\n                throw new BuildException(e);\n            } else {\n                handleErrorOutput(e.getMessage());\n            }\n\nThe BuildException doesn't get caught by the currently-running exception handler (for java.lang.Exception) and then the finally block is called, which attempts to close the redirector, ultimately resulting in this NPE.\n\nI believe this bug might be better solved by modifying BaseRedirectorHelperTask.closeRedirector in this way:\n\n        try {\n-            if (redirectOutput) {\n+            if (redirectOutput && redirectOutPrintStream != null) {\n\n                redirector.complete();\n            }\n\nThis makes BaseRedirectorHelperTask.closeRedirector safer internally and doesn't rely on the client (AbstractCatalinaTask, in this case) to be extra careful about state.\n\nAnother option would be:\n\n        try {\n            if (redirectOutput) {\n+              if (redirectOutPrintStream == null) {\n+                openRedirector();\n+              }\n\n                redirector.complete();\n            }\n\nI'm open to suggestions, since I don't really know how all this stuff should work. I'm in favor of a solution where a class manages it's state as much as possible rather than relying on client code (even a subclass) to be careful about such things."}, {"count": 5, "tags": [], "bug_id": 50552, "attachment_id": null, "id": 143166, "time": "2011-01-07T04:40:28Z", "creator": "chris.rimmer@nominet.org.uk", "creation_time": "2011-01-07T04:40:28Z", "is_private": false, "text": "Btw I would have written a test or tests to show that my patch fixes the problem, but there don't seem to be any tests for these ant tasks. Unless I'm looking in the wrong place?"}, {"count": 6, "tags": [], "bug_id": 50552, "attachment_id": null, "text": "Fixed in 7.0.x for 7.0.6 using Chris S's first proposal.\n\nChris R - You are correct. There are no tests for this code.\n\nI also proposed the fix for 6.0.x", "id": 143169, "time": "2011-01-07T06:28:10Z", "creator": "markt@apache.org", "creation_time": "2011-01-07T06:28:10Z", "is_private": false}, {"count": 7, "tags": [], "bug_id": 50552, "attachment_id": null, "text": "(In reply to comment #6)\n> Fixed in 7.0.x for 7.0.6 using Chris S's first proposal.\n\nI hadn't taken enough time to determine if that fix (adding the null check, right?) would be appropriate, since other streams in the redirector may have been open, and a call to complete() might be in order. If you've checked them out, then I'm happy.", "id": 143175, "time": "2011-01-07T10:35:59Z", "creator": "chris@christopherschultz.net", "creation_time": "2011-01-07T10:35:59Z", "is_private": false}, {"count": 8, "tags": [], "creator": "knst.kolinko@gmail.com", "attachment_id": null, "id": 143204, "time": "2011-01-08T17:23:10Z", "bug_id": 50552, "creation_time": "2011-01-08T17:23:10Z", "is_private": false, "text": "Applied the patch to 6.0 in r1056813 and it will be in 6.0.30.\n\n(In reply to comment #7):\nI think the patch is OK. While it there are several places where opening of streams is triggered, the opening operation itself is consistently performed via a BaseRedirectorHelperTask#openRedirector() call. The check that we are doing is effectively whether openRedirector() was ever called or not."}]