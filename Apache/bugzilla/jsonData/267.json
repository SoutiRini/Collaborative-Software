[{"count": 0, "tags": [], "creator": "dev@tomcat.apache.org", "attachment_id": null, "id": 244, "time": "2000-11-29T03:50:45Z", "bug_id": 267, "creation_time": "2000-11-29T03:50:45Z", "is_private": false, "text": "Here is the problem I have encunter using tomcat3.1.\r\n\r\nWhen I end the transaction with the session.invalidate() method, I call\r\nthe response.sendRedirect in order to send a message to the user. If I\r\ntry to come back into the session with the browser, I have got the same\r\nmessage, so the same jsp file, than the one I got while ending the\r\ntransaction. I use the same method, response.sendRedirect, with another\r\njsp file.\r\n\r\nIf I use the same .class files under tomcat3.0, evething works well,\r\nthat is, I have got the good jsp page.\r\n\r\nHere is my servlet. Notice the two differents jsp pages end.jsp and\r\nout.jsp.\r\n\r\npublic void doPost(HttpServletRequest request, HttpServletResponse\r\nresponse)  throws IOException\r\n{\r\n        doGet(request, response);\r\n}\r\n\r\npublic void doGet(HttpServletRequest request, HttpServletResponse\r\nresponse)  throws IOException\r\n{\r\n        HttpSession session=null;\r\n        TrecObject TxTrec=null;\r\n        try {\r\n                session=request.getSession(false);\r\n                if ( session == null )\r\n                        response.sendRedirect(\"/examples/jsp/trec/out.jsp\");\r\n                                \r\n                // get the TrecObject from the session\r\n                TxTrec = (TrecObject) session.getAttribute(\"TrecObject\");\r\n                if (TxTrec == null ) {\r\n                        response.sendRedirect(\"/examples/jsp/trec/out.jsp\");\r\n                }\r\n\r\n                // previous page\r\n                if ( request.getParameterValues(\"prev\") != null ) {\r\n                        TxTrec.TrecTransaction.pageprecedente();\r\n                \r\nresponse.sendRedirect(response.encodeRedirectURL(\"/examples/jsp/trec/TREC.jsp\"));\r\n                // next page\r\n                } else if ( request.getParameterValues(\"next\") != null ) {\r\n                        TxTrec.TrecTransaction.pagesuivante();\r\n                \r\nresponse.sendRedirect(response.encodeRedirectURL(\"/examples/jsp/trec/TREC.jsp\"));\r\n                // End of the transaction\r\n                } else if ( request.getParameterValues(\"end\") != null ) {\r\n                        TxDisconnect(TxTrec);\r\n                        session.invalidate();\r\n                        response.sendRedirect(\"/examples/jsp/trec/end.jsp\");\r\n                }\r\n\r\n\r\nAlso, the method request.getSession(false), should, according the the\r\napi documentation, return null if it is called after a call to the\r\nsession.invalidate() has been made. I have experienced a creation of a\r\nnew session like if I had used true instead of false for the parameters.\r\nIs somethig wrong with that?\r\n\r\n"}, {"count": 1, "tags": [], "bug_id": 267, "attachment_id": null, "is_private": false, "id": 5386, "time": "2001-09-11T18:57:22Z", "creator": "Larry.Isaacs@sas.com", "creation_time": "2001-09-11T18:57:22Z", "text": "Since this bug is reported against Tomcat 3.1.1, where no further development\nis occurring, I'm marking it \"wontfix\".\n\nI have tested this in Tomcat 3.2.3 and Tomcat 3.3 and they work correctly."}]