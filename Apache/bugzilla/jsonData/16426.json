[{"attachment_id": null, "tags": [], "bug_id": 16426, "is_private": false, "count": 0, "id": 30055, "time": "2003-01-26T00:28:03Z", "creator": "neil@mpfreescene.com", "creation_time": "2003-01-26T00:28:03Z", "text": "This has been an ongoing problem throughout the entire life of the 2.x \nreleases.  Apache 2.x seems to be ignoring user aborts[i.e. the user presses \nstop].\n\nI assumed this would be related to the problem of apache 2.x not logging \nproperly and when people stop downloads the log files log the whole file as \nbeing downloaded.\n\nThe main problem arrises when using php's connection_status().  I have reported \nthis bug to php many times, but it is proven to work fine on apache 1.x, when \nrunning apache 2.x, allowing a script to run on and keep checking the \nconnection_status but timing out after 10 seconds by default, the result \nreturned is always status 0, connection finished normally, even though the stop \nbutton was pressed.\n\nThis all works fine on apache 1.x.\n\n\nMy examples are as follows :-\n\n\nWorking apache 1.x test script [ http://www.mghost.net/~neil/ ] run and then \npress stop button, a \"1\" will be appened to \nhttp://www.mghost.net/~neil/test/output.txt which you can clearly see for \nyourself, this is the correct result as 1 is user abort.\n\nNot working apache 2.0.44 [ http://www.mpfreescene.com/test/ ] run and then \npress stop button, after about 10 seconds, a \"0\" will be appeneded to the file \nhttp://www.mpfreescene.com/test/output.txt, this is incorrect as the script \nshould have shut down on the user abort and appened a \"1\"."}, {"count": 1, "attachment_id": null, "creator": "nd@perlig.de", "is_private": false, "id": 30429, "time": "2003-01-31T16:22:40Z", "bug_id": 16426, "creation_time": "2003-01-31T16:22:40Z", "tags": [], "text": "I'd consider this being a PHP bug: <http://bugs.php.net/bug.php?id=14542>\n\nThanks for using Apache!"}, {"count": 2, "attachment_id": null, "bug_id": 16426, "text": "That is a different error completely, I quote the following text from the top \nof that bug report from php.net\n\n\"\nIt seems that when a script terminates due to a\ntimeout connection_status() returns 0 (and\nconnection_timeout() no longer exists).\n\nWhen aborted by a user connection_status() does return 1.\n\"\n\n\nPaying close attention to the last sentance, when aborted by a user \nconnection_status() does return 1, so the fault submitted there is problems for \nthe TIMEOUT call, not ABORTED, the ABORTED function works in php as stateted \nthere.\n\n\nLike I already said, it works perfectly with apache 1.x, but has never worked \nwith apache 2.x.", "id": 30440, "time": "2003-01-31T18:44:45Z", "creator": "neil@mpfreescene.com", "creation_time": "2003-01-31T18:44:45Z", "tags": [], "is_private": false}, {"count": 3, "tags": [], "text": "Just reading that post, sounds a bit de-meaning, sorry if I come accross this \nway, I didnt mean to :)", "attachment_id": null, "id": 30448, "creator": "neil@mpfreescene.com", "time": "2003-01-31T22:47:41Z", "bug_id": 16426, "creation_time": "2003-01-31T22:47:41Z", "is_private": false}, {"count": 4, "tags": [], "creator": "nd@perlig.de", "attachment_id": null, "is_private": false, "id": 30734, "time": "2003-02-05T12:29:47Z", "bug_id": 16426, "creation_time": "2003-02-05T12:29:47Z", "text": "ok, I've grabbed the current php source and looked into sapi_apache2.c. It's\ndefinitely a php bug. Line 90 shows:\n\nif (ap_pass_brigade(f->next, bb) != APR_SUCCESS) {\n\tphp_handle_aborted_connection();\n}\n\nwhich won't match in most cases. Also Line 252 and 498.\nAFAICS mod_php should (additionally) check connection->aborted.\n\n(marking this bug invalid again)"}]