[{"count": 0, "tags": [], "creator": "proal@hotmail.com", "text": "I have a 2 servers one with configuration en_US.UTF-8 and another with\nen_US.ISO8859-1.\n\nWhen i list a directory inside the container, files with special chars (latin\nchars in my case) are displayed correctly but when i try to retrieve a file or\nnavigate through a directory tomcat says - not found file\n\"/prueba/%C3%B1o%C3%B1o/\" -, that its the desired file name but coded with UTF-8.\n\nLooking at the DefaultServlet.java code i found this line on method getRelativePath:\n\n...\n   result = request.getServletPath();\n...\n\nAs i understand, the link (created by the self container, method renderHtml ) to\nthe file is coded with UTF-8 but when the file name is re-created in the servlet\nis not encoded back; getServletPath returns the file string but in a like\nISO-8859-1 coding, so obviously it will never find the file because the physical\nfile %C3%B1o%C3%B1o doesnt exist. \nSo i did this change to DefaultServlet.java\n\n...\nresult = new String(request.getServletPath().getBytes(\"ISO-8859-1\"),\"UTF-8\");\n...\n\nthis way, as i think, whatever encoding sends the browser (even null) the\ngetBytes return the name as a simple ASCII string and then the String\nconstructor creates the name with the right UTF-8 encoding  This patch works on\nmy both servers.\n\nThis works fine for static content but i think that developers can do something\nsimilar to let servlets or jsps have filenames with special chars, although in\nmy opinion as a good coding standard these should be named in plain ascii.", "id": 72252, "time": "2005-03-11T23:59:56Z", "bug_id": 33973, "creation_time": "2005-03-11T23:59:56Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "creator": "remm@apache.org", "text": "Please look into the URL encoding configuration parameters for the connector.", "id": 72994, "time": "2005-03-29T17:20:15Z", "bug_id": 33973, "creation_time": "2005-03-29T17:20:15Z", "is_private": false, "attachment_id": null}]