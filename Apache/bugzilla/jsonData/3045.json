[{"count": 0, "text": "In JDK1.4, Javac needs a -source 1.4 capability so that we can\ncompile in/out asserts.", "creator": "scottschell@yahoo.com", "attachment_id": null, "id": 4375, "time": "2001-08-08T08:35:14Z", "bug_id": 3045, "creation_time": "2001-08-08T08:35:14Z", "tags": [], "is_private": false}, {"count": 1, "attachment_id": null, "bug_id": 3045, "text": "To (temporarily) allow Ant to compile Java 1.4 code with assertions...\n\nGet the source distribution. (I worked with the 1.4Beta1 distribution.)\nAdd:\n        if ( attributes.getAsserts() ) \n        {\n           cmd.createArgument().setValue(\"-source\");\n           cmd.createArgument().setValue(\"1.4\");\n        }\n\nto org.apache.tools.ant.taskdefs.compilers.DefaultCompilerAdapter around line \n250.\n\nAdd:\n    private boolean assertsOn;\n    public void setAsserts( boolean newAssertsOn ) {\n        assertsOn = newAssertsOn;\n    }\n    public boolean getAsserts() {\n        return assertsOn;\n    }\n\nto org.apache.tools.ant.taskdefs.Javac around line 120.\n\nRecompile.\nI reinserted the class files into my ant.jar.\nSetting the <javac> task attribute asserts=\"on\" will add \"-source 1.4\" to your \njavac command line.\n\nUse at your own risk. I haven't found any problems, but I only spent an hour \nfiguring this out, so it probably does very bad things. I had sold Ant hard to \nmy boss, and he wanted to see it compile 1.4 code with assertions. My back was \nto the wall. Sorry for any mess. Hope this gets fixed soon.\n\nBrad\nbholcombe@3veni.com", "id": 4617, "time": "2001-08-17T13:17:43Z", "creator": "bholcombe@3veni.com", "creation_time": "2001-08-17T13:17:43Z", "tags": [], "is_private": false}, {"count": 2, "tags": [], "bug_id": 3045, "attachment_id": null, "text": "Similar updates are needed for tasks that rely on javac, like javadoc and junit.", "id": 5009, "time": "2001-08-29T08:13:47Z", "creator": "bholcombe@3veni.com", "creation_time": "2001-08-29T08:13:47Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 3045, "text": "I have just committed a <javac> task with a new attribute \"source\" that takes\ncare of this - this should be reusable when a javac 1.5 needs to enable genercis\nsupport or whatever.  It is in the CVS branch for Ant 1.4.1\n\nI have no idea what you mean by tasks that rely on javac like javadoc or junit.\nNeither of both uses javac AFAIK and I couldn't find any reference to assertions\nin the tooldocs for javadoc.\n", "id": 5546, "time": "2001-09-14T08:22:16Z", "creator": "bodewig@apache.org", "creation_time": "2001-09-14T08:22:16Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 3045, "attachment_id": null, "text": "The javadoc task has a problem with asserts in Java 1.4 code. When running the \njavadoc task on code with assertions (code that works with the new javac task. \nThanks!), I get errors like the following:\n\n  [javadoc] ControlManager.java:24: ';' expected\n  [javadoc]   assert ( newModels != null ) : \"must have a non-null model\";\n  [javadoc]                                ^\n\nMy understanding from a JavaOne session is that javadoc now uses the javac \ncompiler to generate its internal parse tree. If that javac doesn't have the \n\"-source 1.4\" passed through to it, you get the errors above. There is a new \ncommand line switch to support this. From the JDK1.4 tools docs:\n\n-source 1.4 \n     Necessary to enable javadoc to handle assertions present in J2SE v 1.4 \nsource code. This option documents code that compiles using \"javac -source 1.4\" \n\nI mentioned the JUnit task only because I thought it might have related \nproblems, not because I had anything specific. My fault. Sorry for the \nconfusion.\n\nBrad\nbholcombe@3veni.com", "id": 5675, "time": "2001-09-17T11:01:21Z", "creator": "bholcombe@3veni.com", "creation_time": "2001-09-17T11:01:21Z", "is_private": false}, {"count": 5, "tags": [], "creator": "bholcombe@3veni.com", "attachment_id": null, "id": 5680, "time": "2001-09-17T11:53:24Z", "bug_id": 3045, "creation_time": "2001-09-17T11:53:24Z", "is_private": false, "text": "BTW, there have been bugs reported against javadoc in the 1.4beta2 release that \nsupposedly cause assertion parsing to fail. I had been using the additionalparam \nswitch on the javadoc task, and got the same kind of errors as I had without the \nswitch, even though the command line for javadoc was correct. The bugs are \n4492054 and 4498879, but the Java Developer Connection Bug Database currently \nlists them as not available!!! What does that mean? I'd love to know what the \nbugs say, but I can't get to them.\n\nSo, the workaround is to specify the \"-source 1.4\" as an additional param, even \nthough your javadoc run will still fail. I suppose there could be a discussion \non whether Ant needs to change at all, since there is a workaround that obviates \nand code changes. The solution might be just to change the docs to suggest using \nthe additional param switch to solve the assertion problem.\n\nBrad\nbholcombe@3veni.com"}, {"count": 6, "text": "It's interesting to see where the impacts of the assert feature trickle in to \nant. \n\nSo far it's clear that javac and javadoc need to have -source 1.4 flag, but \nlooking at the docs on how to use assert() \nhttp://java.sun.com/j2se/1.4/docs/guide/lang/assert.html shows that there are \nextra switches to enable and disable assertions in the java command. There is \nan \"enablesystemassertions\" flag to enable checks in the core libraries, and an \ncounterpart \"disablesystemassertions\" to turn them off. For your own code, you \nneed to set the \"enableassertions\" flag , perhaps followed by a list of \npackages which you want assertion checked.\n\nThere are a lot of places in ant where java is used as the basis for some other \ntask, places in which assertion checking may need enabling. The key ones to \nfocus on would have to be <java> itself, and <junit>, those being the places \nthat your own code gets tested the most. \n\nI could imagine adding some simple \"enableassertions\" \nand \"enablesystemassertions\" flags to java, flags which are only used under \n1.4, and copy the assignment over to other tasks which make use of java \nunderneath. We could even have some means of specifying the packages to enable \nfor assertions. We couldnt of course actually have any assertions in ant, what \nwith all the pre-1.4 java version to support.\n\nWhere I forsee trouble is in junit. The junit assert() method and the Sun \nassert keyword don't coexist. As junit 3.7 added an assertTrue() replacement \nfor assert, new java1.4 source can be built with calls to assertTrue() living \nside by side with assert statements. People just need to go through their test \ncode and replace methods. Then the junit tasks need to be extended with the \nability to control whether asserts are enabled or not. \n\nI would conclude therefore, that supporting assert in ant, and ones own code, \nwhile valuable, will be time consuming. ", "creator": "steve_l@iseran.com", "attachment_id": null, "id": 5685, "time": "2001-09-17T14:45:18Z", "bug_id": 3045, "creation_time": "2001-09-17T14:45:18Z", "tags": [], "is_private": false}, {"count": 7, "tags": [], "bug_id": 3045, "attachment_id": null, "text": "*** Bug 4004 has been marked as a duplicate of this bug. ***", "id": 6830, "time": "2001-10-18T07:42:11Z", "creator": "bodewig@apache.org", "creation_time": "2001-10-18T07:42:11Z", "is_private": false}, {"count": 8, "text": "More on the JDK 1.4 bugs I mentioned before in this bug report: They have been \nremoved from the JDC's bug database for \"security reasons.\" The exact wording I \ngot in an email from Sun was:\n\n\"Bug 4492054 was removed for security reasons. I am in dialogue with the\nresponsible engineer to get it reposted.\"\n\nI have no clue what that means. I asked a number of follow-up questions, which I \nhope will be answered soon.\n\nBrad\nbholcombe@3veni.com", "bug_id": 3045, "attachment_id": null, "id": 7017, "time": "2001-10-22T13:43:15Z", "creator": "bholcombe@3veni.com", "creation_time": "2001-10-22T13:43:15Z", "tags": [], "is_private": false}, {"count": 9, "tags": [], "bug_id": 3045, "attachment_id": null, "text": "Ant 1.4.1 onbly fixes this for internal javac, not when using fork=\"true\"", "id": 7450, "time": "2001-11-01T10:00:08Z", "creator": "sdonie@lgc.com", "creation_time": "2001-11-01T10:00:08Z", "is_private": false}, {"count": 10, "tags": [], "creator": "bodewig@apache.org", "text": "supposed to be fixed in nightly build 2001-11-03", "id": 7479, "time": "2001-11-02T07:29:10Z", "bug_id": 3045, "creation_time": "2001-11-02T07:29:10Z", "is_private": false, "attachment_id": null}, {"count": 11, "tags": [], "creator": "bodewig@apache.org", "text": "*** Bug 5620 has been marked as a duplicate of this bug. ***", "id": 12684, "time": "2002-04-02T14:36:01Z", "bug_id": 3045, "creation_time": "2002-04-02T14:36:01Z", "is_private": false, "attachment_id": null}]