[{"count": 0, "tags": [], "bug_id": 56552, "attachment_id": null, "id": 175373, "time": "2014-05-21T13:58:49Z", "creator": "1983-01-06@gmx.net", "creation_time": "2014-05-21T13:58:49Z", "is_private": false, "text": "Using a Groovy inline script with a cache key causes a problem. Consider the following example:\n\ndef sessionId = vars.get(\"sessionId\")\ndef formatted = \"${sessionId}_cool\";\n\nIf the sessionId is regenerated in a preprocessor, only the first interpolation from JMeter works due to caching. Groovy cannot not interpolate the GString because it has already been done by JMeter. I'd like to be able to disable interpolation on cacheable items."}, {"count": 1, "tags": [], "bug_id": 56552, "is_private": false, "text": "If I understand correctly, this is nothing to do with caching.\n\nThe problem is that both Groovy and JMeter use the same syntax - i.e. ${varname} - to refer to variables. So JMeter replaces ${varname} with the contents of the variable before Groovy sees the script.\n\nIf this is so, then there are several options:\n\n1) use a file rather than an in-line script\n2) use a variable name that is not defined in JMeter, as Jmeter leaves such references alone\n3) escape the $ or the { with backslash", "id": 175416, "time": "2014-05-23T11:19:04Z", "creator": "sebb@apache.org", "creation_time": "2014-05-23T11:19:04Z", "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 56552, "attachment_id": null, "id": 175423, "creation_time": "2014-05-23T16:01:27Z", "time": "2014-05-23T16:01:27Z", "creator": "1983-01-06@gmx.net", "text": "(In reply to Sebb from comment #1)\n> If I understand correctly, this is nothing to do with caching.\n> \n> The problem is that both Groovy and JMeter use the same syntax - i.e.\n> ${varname} - to refer to variables. So JMeter replaces ${varname} with the\n> contents of the variable before Groovy sees the script.\n\nNot exactly, if I understand caching correctly, JMeter processes (filters) the script one, passes to Groovy, caches the result and then uses it over and over again. So the result is that the JMeter interpolation happens only once, at compile/cache time.\n\n> If this is so, then there are several options:\n> \n> 1) use a file rather than an in-line script\n\nIn my case, script are a few lines, I do not to scatter stuff.\n\n> 2) use a variable name that is not defined in JMeter, as Jmeter leaves such\n> references alone\n\nYes, that is a workaround only.\n\n> 3) escape the $ or the { with backslash\n\nHow? \\$? I haven't found a clear paragraph on the in the functions reference.", "is_private": false}, {"count": 3, "tags": [], "creator": "p.mouawad@ubik-ingenierie.com", "attachment_id": 31658, "is_private": false, "id": 175438, "time": "2014-05-25T13:46:34Z", "bug_id": 56552, "creation_time": "2014-05-25T13:46:34Z", "text": "Created attachment 31658\nTest plan showing it works provided interpolated string is not a JMeter variable"}, {"count": 4, "tags": [], "creator": "p.mouawad@ubik-ingenierie.com", "is_private": false, "id": 175439, "attachment_id": null, "bug_id": 56552, "creation_time": "2014-05-25T13:47:53Z", "time": "2014-05-25T13:47:53Z", "text": "As explained by Sebb, provided interpolated string is not a JMeter variable it works.\nIf it is a jmeter variable, disabling cache key workarounds this but at the cost of performance degradation, so changing groovy var name is a reasonable option."}, {"count": 5, "tags": [], "bug_id": 56552, "attachment_id": null, "id": 175451, "time": "2014-05-25T23:52:50Z", "creator": "sebb@apache.org", "creation_time": "2014-05-25T23:52:50Z", "is_private": false, "text": "(In reply to Michael Osipov from comment #2)\n> (In reply to Sebb from comment #1)\n> > If I understand correctly, this is nothing to do with caching.\n> > \n> > The problem is that both Groovy and JMeter use the same syntax - i.e.\n> > ${varname} - to refer to variables. So JMeter replaces ${varname} with the\n> > contents of the variable before Groovy sees the script.\n> \n> Not exactly, if I understand caching correctly, JMeter processes (filters)\n> the script one, passes to Groovy, caches the result and then uses it over\n> and over again. So the result is that the JMeter interpolation happens only\n> once, at compile/cache time.\n\nHowever only a fixed script can be cached.\n \n> > If this is so, then there are several options:\n> > \n> > 1) use a file rather than an in-line script\n> \n> In my case, script are a few lines, I do not to scatter stuff.\n\nIt would still work ...\n\n> > 2) use a variable name that is not defined in JMeter, as Jmeter leaves such\n> > references alone\n> \n> Yes, that is a workaround only.\n> \n> > 3) escape the $ or the { with backslash\n> \n> How? \\$? I haven't found a clear paragraph on the in the functions reference.\n\nDoes not appear to be possible to escape the $ or {; sorry.\n\nHowever, one can define a variable (e.g. on the test plan):\n\nDOLLAR $\n\nand then use the following:\n\n${DOLLAR}{sessionId}\n\nThe DOLLAR reference is resolved, but the resulting output is not rescanned by JMeter, so the result is that ${sessionId} is passed to Groovy (and cached)."}, {"count": 6, "tags": [], "bug_id": 56552, "is_private": false, "text": "Sebb,\n\ncan we at least mention that int the pre/post processor docs and other folks won't be tricked?", "id": 175518, "time": "2014-05-28T11:10:59Z", "creator": "1983-01-06@gmx.net", "creation_time": "2014-05-28T11:10:59Z", "attachment_id": null}, {"count": 7, "tags": [], "creator": "sebb@apache.org", "text": "(In reply to Michael Osipov from comment #6)\n> Sebb,\n> \n> can we at least mention that int the pre/post processor docs and other folks\n> won't be tricked?\n\nPatches welcome ...", "id": 175551, "attachment_id": null, "bug_id": 56552, "creation_time": "2014-05-29T23:26:15Z", "time": "2014-05-29T23:26:15Z", "is_private": false}, {"count": 8, "tags": [], "bug_id": 56552, "attachment_id": null, "text": "(In reply to Sebb from comment #7)\n> (In reply to Michael Osipov from comment #6)\n> > Sebb,\n> > \n> > can we at least mention that int the pre/post processor docs and other folks\n> > won't be tricked?\n> \n> Patches welcome ...\n\nAgainst this monster? http://svn.apache.org/viewvc/jmeter/trunk/docs/usermanual/component_reference.html?view=markup", "id": 175552, "time": "2014-05-29T23:33:12Z", "creator": "1983-01-06@gmx.net", "creation_time": "2014-05-29T23:33:12Z", "is_private": false}]