[{"count": 0, "tags": [], "creator": "apache.org@davel.me.uk", "attachment_id": 29162, "id": 161089, "time": "2012-08-03T16:30:39Z", "bug_id": 53650, "creation_time": "2012-08-03T16:30:39Z", "is_private": false, "text": "Created attachment 29162\nSpreadsheet which SXSSF cannot process\n\nI am attempting to use SXSSF to add data to a template XLSX file.  I have a XLSX file produced by Excel for Mac 2011 version 14.2.3, which when processed with the attached minimal Java produces a file which does not open in Excel, but does open in Open Office.  Excel reports the file as broken and offer repair, which removes all the additions placed in by the Java code.\n\nI am using POI 3.8. XSSF is able to process the file correctly.\n\nMinimal Java below,\n\npackage sheet2test;\n\nimport java.io.FileInputStream;\nimport java.io.FileOutputStream;\nimport java.io.IOException;\nimport org.apache.poi.ss.usermodel.Cell;\nimport org.apache.poi.ss.usermodel.Row;\nimport org.apache.poi.ss.usermodel.Workbook;\nimport org.apache.poi.ss.usermodel.Sheet;\nimport org.apache.poi.xssf.streaming.SXSSFWorkbook;\nimport org.apache.poi.xssf.usermodel.XSSFWorkbook;\n\n/**\n *\n * @author davel\n */\npublic class Main {\n\n    /**\n     * @param args the command line arguments\n     */\n    public static void main(String[] args) {\n        try {\n            final Workbook wb = new SXSSFWorkbook(new XSSFWorkbook(new FileInputStream(\"template.xlsx\")));\n\n            Sheet currentSheet = wb.getSheetAt(1);\n\n            Row currentRow = currentSheet.createRow(1);\n            Cell currentCell = currentRow.createCell(1);\n            currentCell.setCellType(Cell.CELL_TYPE_STRING);\n            currentCell.setCellValue(\"hello world!\");\n      \n            FileOutputStream out = new FileOutputStream(\"broken.xlsx\");\n            wb.write(out);\n        }\n        catch (IOException e) {\n            System.err.println(\"Could not write output file\");\n        }\n    }\n\n}\n\n\nKind regards,\nDave Lambley"}, {"attachment_id": null, "tags": [], "bug_id": 53650, "is_private": false, "count": 1, "id": 163951, "time": "2012-12-07T11:21:23Z", "creator": "yegor@dinom.ru", "creation_time": "2012-12-07T11:21:23Z", "text": "You are overwriting an existing row which is now allowed.\nSXSSF is streaming forward-only API which means it can only append data to your template.\nYour workbook already contains rows, it can easily checked as follows:\n\n\n        XSSFWorkbook template = new XSSFWorkbook(new FileInputStream(\"template.xlsx\")) ;\n        XSSFSheet sheet = template.getSheetAt(1);  \n        System.out.println(sheet.getPhysicalNumberOfRows());\n        System.out.println(sheet.getFirstRowNum());\n        System.out.println(sheet.getLastRowNum());\n\nYour code creates a row with rowIndex=1 which gets appended after the last row in the template and it results in a corrupted workbook for two reasons:\n - there is a duplicate row\n - rows in sheet.xml are not ordered: rowIndex=1 comes after rowIndex=1976\n\n\nI committed a fix in r1418264. Now SXSSF throws IllegalArgumentException if you are trying to overwrite a row already saved to disk.\n\nYegor"}]