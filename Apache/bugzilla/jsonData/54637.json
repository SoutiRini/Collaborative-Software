[{"count": 0, "tags": [], "text": "Not sure this is a bug but nobody is replying me on user mailing list, so I filled it here.\n\nI've been trying digest authentication for a while now and just noticed a strange behavior when working on cluster.\n\nActually I've 2 apaches behind a load balancer (so serving same domain), and I noticed that an authentication sent to apache A is valid when sent on apache B.\nLet me explain:\n\n1. My client connects to Apache A, it receives an authentication required with a nonce (valid for 1h).\n2. My client authenticate itself on Apache A using the received nonce\n3. Few minutes later, the same client issues another request directly using the nonce already received, but the request goes on Apache B ---> No problem the nonce is valid !\n\nLooking at the code, it seems everything is done to prevent this by using a randomly generated secret in the nonce hash.\n\nHowever, debugging a bit it seems the nonce_ctx initialization is performed BEFORE the secret initialization, so it is always initialized with the same empty secret and generated nonce are valid everywhere.\n\nSo basically, in mod_auth_digest.c, set_realm function is called before initialize_secret.\n\nActually this behavior fit my needs for now but I wanted to know if it is a desired behavior, if it is a bug and if it might change in future version ?\n\nI checked this on apache 2.4.2 and 2.4.4 under unbuntu.", "attachment_id": null, "id": 165643, "creation_time": "2013-03-05T08:30:53Z", "time": "2013-03-05T08:30:53Z", "creator": "nicolas.daniels@bluepimento.eu", "bug_id": 54637, "is_private": false}, {"count": 1, "tags": [], "creator": "sf@sfritsch.de", "is_private": false, "id": 167795, "attachment_id": null, "bug_id": 54637, "creation_time": "2013-06-12T19:34:52Z", "time": "2013-06-12T19:34:52Z", "text": "trunk commit: r1492395"}]