[{"count": 0, "tags": [], "bug_id": 31665, "attachment_id": null, "id": 64979, "time": "2004-10-12T12:26:44Z", "creator": "steve.morin@gmail.com", "creation_time": "2004-10-12T12:26:44Z", "is_private": false, "text": "This patch allowes people to set the default filename that ant uses if\nnone is given and sets ant.file.default to default file name value.\n\nM docs/manual/running.html\nM docs/manual/using.html\nM src/main/org/apache/tools/ant/Main.java\nM src/main/org/apache/tools/ant/taskdefs/Ant.java\nM src/main/org/apache/tools/ant/taskdefs/SubAnt.java\n\nI would have provided unit tests with this and would appreciate some\none pointing me in the right direction so I can create them.\n\nI have a couple of scenarios where this could be useful.\n\n1st usage convenience..\nA person that often uses a different build file could use a shell\nscript that calls ant using a different default for convenience.\n\n       #!/bin/sh\n       ant -df config.xml \"$@\"\n\nor\n       alias cfg=\"ant -df config.xml\"\nor\n       ANT_ARGS=\"-df config.xml\"\n\n2nd usage dynamic change of ant task default target.\n\n>>      Ant\n>>      Description\n>>\n>>      Runs Ant on a supplied buildfile. This can be used to build\nsubprojects. This task must not be used outside of a target if it\ninvokes the same build file it is part of.\n>>\n>>      When the antfile attribute is omitted, the file \"build.xml\" in the\nsupplied directory (dir attribute) is used.\n\n3rd usage dynamic change of subant task calls\n\n>>      antfile          Build file name, to use in conjunction with\ndirectories.               String         Optional\n>>      Defaults to \"build.xml\".\n>>      If genericantfile is set, this attribute is ignored.\n\nOf the three usages I believe the 1st and 3rd usages have the most\nmerit.  I believe the 1st could be very beneficial to many people to\nspeed development.  It's a minor changes and requires little\nmaintenance but increases flexibility greatly.  Dynamic usage of\nsubant  would great to simplify ant usage for projects that multiple\npreprocess.\n\n--build.xml\n<project name=\"subant\" default=\"subant1\">\n       <property name=\"build.dir\" value=\"subant.build\"/>\n       <target name=\"subant1\">\n           <subant target=\"\" buildpath=\"${project.dir}>\n             <property name=\"build.dir\" value=\"subant1.build\"/>\n             <property name=\"not.overloaded\" value=\"not.overloaded\"/>\n\n           </subant>\n       </target>\n</project>\n\n--bashrc\nalias doc=\"and -df docs.xml\"\nalias gen=\"ant -df generate.xml\"\nalias cfg=\"ant -df config.xml\"\n\ncmd: gen -f build.xml\ncmd: cfg -f build.xml\ncmd: ant\n\n--patch.txt\nIndex: docs/manual/running.html\n===================================================================\nRCS file: /home/cvspublic/ant/docs/manual/running.html,v\nretrieving revision 1.27\ndiff -u -r1.27 running.html\n--- docs/manual/running.html\t31 Aug 2004 22:32:53 -0000\t1.27\n+++ docs/manual/running.html\t8 Oct 2004 18:13:10 -0000\n@@ -77,35 +77,43 @@\n \n <h3><a name=\"options\">Command-line Options Summary</a></h3>\n <pre>ant [options] [target [target2 [target3] ...]]\n-Options:\n-  -help, -h              print this message\n-  -projecthelp, -p       print project help information\n-  -version               print the version information and exit\n-  -diagnostics           print information that might be helpful to\n-                         diagnose or report problems.\n-  -quiet, -q             be extra quiet\n-  -verbose, -v           be extra verbose\n-  -debug, -d             print debugging information\n-  -emacs, -e             produce logging information without adornments\n-  -lib &lt;path&gt;            specifies a path to search for jars and classes\n-  -logfile &lt;file&gt;        use given file for log\n-    -l     &lt;file&gt;                ''\n-  -logger &lt;classname&gt;    the class which is to perform logging\n-  -listener &lt;classname&gt;  add an instance of class as a project listener\n-  -noinput               do not allow interactive input\n-  -buildfile &lt;file&gt;      use given buildfile\n-    -file    &lt;file&gt;              ''\n-    -f       &lt;file&gt;              ''\n-  -D&lt;property&gt;=&lt;value&gt;   use value for given property\n-  -keep-going, -k        execute all targets that do not depend\n-                         on failed target(s)\n-  -propertyfile &lt;name&gt;   load all properties from file with -D\n-                         properties taking precedence\n-  -inputhandler &lt;class&gt;  the class which will handle input requests\n-  -find &lt;file&gt;           (s)earch for buildfile towards the root of\n-    -s  &lt;file&gt;           the filesystem and use it\n-  -nice  number          A niceness value for the main thread:\n-                         1 (lowest) to 10 (highest); 5 is the default\n+Options: \n+  -help, -h                print this message\n+  -projecthelp, -p         print project help information\n+  -version                 print the version information and exit\n+  -diagnostics             print information that might be helpful to\n+                           diagnose or report problems.\n+  -quiet, -q               be extra quiet\n+  -verbose, -v             be extra verbose\n+  -debug, -d               print debugging information\n+  -emacs, -e               produce logging information without adornments\n+  -lib <path>              specifies a path to search for jars and classes\n+  -logfile <file>          use given file for log\n+    -l     <file>                ''\n+  -logger <classname>      the class which is to perform logging\n+  -listener <classname>    add an instance of class as a project listener\n+  -noinput                 do not allow interactive input\n+  -buildfile <file>        use given buildfile\n+    -file    <file>              ''\n+    -f       <file>              ''\n+  -defaultbuildfile <file> set given file name as default buildfile\n+    -defaultfile    <file>              ''\n+    -df             <file>              ''\n+  -D<property>=<value>     use value for given property\n+  -keep-going, -k          execute all targets that do not depend\n+                           on failed target(s)\n+  -propertyfile <name>     load all properties from file with -D\n+                           properties taking precedence\n+  -inputhandler <class>    the class which will handle input requests\n+  -find <file>             (s)earch for buildfile towards the root of\n+    -s  <file>             the filesystem and use it\n+  -nice  number            A niceness value for the main thread:\n+                           1 (lowest) to 10 (highest); 5 is the default\n+  -nouserlib               Run ant without using the jar files from ${user.home}/\n+                           .ant/lib\n+  -noclasspath             Run ant without using CLASSPATH\n+\n+\n </pre>\n <p>For more information about <code>-logger</code> and\n <code>-listener</code> see\nIndex: docs/manual/using.html\n===================================================================\nRCS file: /home/cvspublic/ant/docs/manual/using.html,v\nretrieving revision 1.35\ndiff -u -r1.35 using.html\n--- docs/manual/using.html\t2 Oct 2004 23:39:59 -0000\t1.35\n+++ docs/manual/using.html\t8 Oct 2004 18:13:10 -0000\n@@ -253,6 +253,7 @@\n basedir             the absolute path of the project's basedir (as set\n                     with the basedir attribute of &lt;project&gt;).\n ant.file            the absolute path of the buildfile.\n+ant.file.default    the file name of defaultbuildfile\n ant.version         the version of Ant\n ant.project.name    the name of the project that is currently executing;\n                     it is set in the name attribute of &lt;project&gt;.\nIndex: src/main/org/apache/tools/ant/Main.java\n===================================================================\nRCS file: /home/cvspublic/ant/src/main/org/apache/tools/ant/Main.java,v\nretrieving revision 1.112\ndiff -u -r1.112 Main.java\n--- src/main/org/apache/tools/ant/Main.java\t5 Oct 2004 08:37:00 -0000\t1.112\n+++ src/main/org/apache/tools/ant/Main.java\t8 Oct 2004 18:13:11 -0000\n@@ -46,8 +46,11 @@\n public class Main implements AntMain {\n \n     /** The default build file name. */\n-    public static final String DEFAULT_BUILD_FILENAME = \"build.xml\";\n+    private static final String DEFAULT_ANT_FILENAME = \"build.xml\";\n \n+    /** The default ant file name */\n+    private String antdefaultfile = null;\n+    \n     /** Our current message output status. Follows Project.MSG_XXX. */\n     private int msgOutputLevel = Project.MSG_INFO;\n \n@@ -263,6 +266,19 @@\n         processArgs(args);\n     }\n \n+    public String getAntDefaultFilename(){\n+    \t\tif(this.antdefaultfile != null){\n+    \t\t\treturn this.antdefaultfile;\n+    \t\t} else{\n+    \t\t\treturn Main.DEFAULT_ANT_FILENAME;\n+    \t\t}\n+    }\n+    \n+    private void setAntDefaultFilename(String antdefaultfile){\n+    \t\tthis.antdefaultfile = antdefaultfile;\n+    }\n+    \n+    \n     /**\n      * Process command line arguments.\n      * When ant is started from Launcher, the -lib argument does not get\n@@ -276,6 +292,20 @@\n         String searchForThis = null;\n         PrintStream logTo = null;\n \n+        for (int i = 0; i < args.length; i++) {\n+        \t\tString arg = args[i];\n+        \t\tif(arg.equals(\"-defaultbuildfile\") || arg.equals(\"-defaultfile\")\n+                        || arg.equals(\"-df\")){\n+        \t\t\ttry {\n+                        this.setAntDefaultFilename(args[++i]);\n+                        break;\n+                    } catch (ArrayIndexOutOfBoundsException aioobe) {\n+                        throw new BuildException(\"You must specify a default \"+\n+                        \t\t\"build file when using -defaultbuildfile argument.\");\n+                    }\n+        \t\t}\n+        }\n+        \n         // cycle through given args\n \n         for (int i = 0; i < args.length; i++) {\n@@ -395,7 +425,8 @@\n                 if (i < args.length - 1) {\n                     searchForThis = args[++i];\n                 } else {\n-                    searchForThis = DEFAULT_BUILD_FILENAME;\n+                    //searchForThis = DEFAULT_BUILD_FILENAME;\n+                \t\tsearchForThis = this.getAntDefaultFilename();\n                 }\n             } else if (arg.startsWith(\"-propertyfile\")) {\n                 try {\n@@ -425,7 +456,15 @@\n                     throw new BuildException(\n                             \"Niceness value is out of the range 1-10\");\n                 }\n-            } else if (arg.startsWith(\"-\")) {\n+            } else if(arg.equals(\"-defaultbuildfile\") || arg.equals(\"-defaultfile\")\n+                    || arg.equals(\"-df\")){\n+    \t\t\ttry {\n+    \t\t\t\t\t++i;\n+                } catch (ArrayIndexOutOfBoundsException aioobe) {\n+                    throw new BuildException(\"You must specify a default \"+\n+                    \t\t\"build file when using -defaultbuildfile argument.\");\n+                }\n+    \t\t\t}else if (arg.startsWith(\"-\")) {\n                 // we don't have any more args to recognize!\n                 String msg = \"Unknown argument: \" + arg;\n                 System.out.println(msg);\n@@ -444,7 +483,8 @@\n                 buildFile = findBuildFile(System.getProperty(\"user.dir\"),\n                                           searchForThis);\n             } else {\n-                buildFile = new File(DEFAULT_BUILD_FILENAME);\n+                //buildFile = new File(DEFAULT_BUILD_FILENAME);\n+            \t\tbuildFile = new File(this.getAntDefaultFilename());\n             }\n         }\n \n@@ -652,6 +692,8 @@\n \n                 project.setUserProperty(\"ant.file\",\n                                         buildFile.getAbsolutePath());\n+                \n+               \nproject.setUserProperty(\"ant.file.default\",this.getAntDefaultFilename());\n \n                 project.setKeepGoingMode(keepGoingMode);\n \n@@ -806,41 +848,44 @@\n         StringBuffer msg = new StringBuffer();\n         msg.append(\"ant [options] [target [target2 [target3] ...]]\" + lSep);\n         msg.append(\"Options: \" + lSep);\n-        msg.append(\"  -help, -h              print this message\" + lSep);\n-        msg.append(\"  -projecthelp, -p       print project help information\" +\nlSep);\n-        msg.append(\"  -version               print the version information and\nexit\" + lSep);\n-        msg.append(\"  -diagnostics           print information that might be\nhelpful to\" + lSep);\n-        msg.append(\"                         diagnose or report problems.\" + lSep);\n-        msg.append(\"  -quiet, -q             be extra quiet\" + lSep);\n-        msg.append(\"  -verbose, -v           be extra verbose\" + lSep);\n-        msg.append(\"  -debug, -d             print debugging information\" + lSep);\n-        msg.append(\"  -emacs, -e             produce logging information\nwithout adornments\"\n+        msg.append(\"  -help, -h                print this message\" + lSep);\n+        msg.append(\"  -projecthelp, -p         print project help information\"\n+ lSep);\n+        msg.append(\"  -version                 print the version information\nand exit\" + lSep);\n+        msg.append(\"  -diagnostics             print information that might be\nhelpful to\" + lSep);\n+        msg.append(\"                           diagnose or report problems.\" +\nlSep);\n+        msg.append(\"  -quiet, -q               be extra quiet\" + lSep);\n+        msg.append(\"  -verbose, -v             be extra verbose\" + lSep);\n+        msg.append(\"  -debug, -d               print debugging information\" +\nlSep);\n+        msg.append(\"  -emacs, -e               produce logging information\nwithout adornments\"\n                    + lSep);\n-        msg.append(\"  -lib <path>            specifies a path to search for\njars and classes\"\n+        msg.append(\"  -lib <path>              specifies a path to search for\njars and classes\"\n                    + lSep);\n-        msg.append(\"  -logfile <file>        use given file for log\" + lSep);\n+        msg.append(\"  -logfile <file>          use given file for log\" + lSep);\n         msg.append(\"    -l     <file>                ''\" + lSep);\n-        msg.append(\"  -logger <classname>    the class which is to perform\nlogging\" + lSep);\n-        msg.append(\"  -listener <classname>  add an instance of class as a\nproject listener\"\n+        msg.append(\"  -logger <classname>      the class which is to perform\nlogging\" + lSep);\n+        msg.append(\"  -listener <classname>    add an instance of class as a\nproject listener\"\n                    + lSep);\n-        msg.append(\"  -noinput               do not allow interactive input\" +\nlSep);\n-        msg.append(\"  -buildfile <file>      use given buildfile\" + lSep);\n+        msg.append(\"  -noinput                 do not allow interactive input\"\n+ lSep);\n+        msg.append(\"  -buildfile <file>        use given buildfile\" + lSep);\n         msg.append(\"    -file    <file>              ''\" + lSep);\n         msg.append(\"    -f       <file>              ''\" + lSep);\n-        msg.append(\"  -D<property>=<value>   use value for given property\" + lSep);\n-        msg.append(\"  -keep-going, -k        execute all targets that do not\ndepend\" + lSep);\n-        msg.append(\"                         on failed target(s)\" + lSep);\n-        msg.append(\"  -propertyfile <name>   load all properties from file with\n-D\" + lSep);\n-        msg.append(\"                         properties taking precedence\" + lSep);\n-        msg.append(\"  -inputhandler <class>  the class which will handle input\nrequests\" + lSep);\n-        msg.append(\"  -find <file>           (s)earch for buildfile towards the\nroot of\" + lSep);\n-        msg.append(\"    -s  <file>           the filesystem and use it\" + lSep);\n-        msg.append(\"  -nice  number          A niceness value for the main\nthread:\" + lSep\n-                   + \"                         1 (lowest) to 10 (highest); 5 is\nthe default\"\n+        msg.append(\"  -defaultbuildfile <file> set given file name as default\nbuildfile\" + lSep);\n+        msg.append(\"    -defaultfile    <file>              ''\" + lSep);\n+        msg.append(\"    -df             <file>              ''\" + lSep);\n+        msg.append(\"  -D<property>=<value>     use value for given property\" +\nlSep);\n+        msg.append(\"  -keep-going, -k          execute all targets that do not\ndepend\" + lSep);\n+        msg.append(\"                           on failed target(s)\" + lSep);\n+        msg.append(\"  -propertyfile <name>     load all properties from file\nwith -D\" + lSep);\n+        msg.append(\"                           properties taking precedence\" +\nlSep);\n+        msg.append(\"  -inputhandler <class>    the class which will handle\ninput requests\" + lSep);\n+        msg.append(\"  -find <file>             (s)earch for buildfile towards\nthe root of\" + lSep);\n+        msg.append(\"    -s  <file>             the filesystem and use it\" + lSep);\n+        msg.append(\"  -nice  number            A niceness value for the main\nthread:\" + lSep\n+                   + \"                           1 (lowest) to 10 (highest); 5\nis the default\"\n                    + lSep);\n-        msg.append(\"  -nouserlib             Run ant without using the jar\nfiles from ${user.home}/\"\n-                   + \".ant/lib\");\n-        msg.append(\"  -noclasspath           Run ant without using CLASSPATH\");\n+        msg.append(\"  -nouserlib               Run ant without using the jar\nfiles from ${user.home}/\" + lSep\n+                   + \"                           .ant/lib\" + lSep);\n+        msg.append(\"  -noclasspath             Run ant without using CLASSPATH\"\n+ lSep);\n         System.out.println(msg.toString());\n     }\n \nIndex: src/main/org/apache/tools/ant/taskdefs/Ant.java\n===================================================================\nRCS file: /home/cvspublic/ant/src/main/org/apache/tools/ant/taskdefs/Ant.java,v\nretrieving revision 1.106\ndiff -u -r1.106 Ant.java\n--- src/main/org/apache/tools/ant/taskdefs/Ant.java\t31 Aug 2004 22:32:53 -0000\t1.106\n+++ src/main/org/apache/tools/ant/taskdefs/Ant.java\t8 Oct 2004 18:13:11 -0000\n@@ -318,7 +318,8 @@\n             overrideProperties();\n \n             if (antFile == null) {\n-                antFile = \"build.xml\";\n+            \t\tantFile = getProject().getProperty(\"ant.file.default\");\n+                //antFile = \"build.xml\";\n             }\n \n             File file = FileUtils.newFileUtils().resolveFile(dir, antFile);\n@@ -328,6 +329,7 @@\n                 + ((locals.size() == 0) ? locals.toString() : \"[default]\")\n                 + \" in build file \" + antFile, Project.MSG_VERBOSE);\n             newProject.setUserProperty(\"ant.file\" , antFile);\n+           \nnewProject.setUserProperty(\"ant.file.default\",getProject().getProperty(\"ant.file.default\"));\n \n             String thisAntFile = getProject().getProperty(\"ant.file\");\n             // Are we trying to call the target in which we are defined (or\nIndex: src/main/org/apache/tools/ant/taskdefs/SubAnt.java\n===================================================================\nRCS file: /home/cvspublic/ant/src/main/org/apache/tools/ant/taskdefs/SubAnt.java,v\nretrieving revision 1.17\ndiff -u -r1.17 SubAnt.java\n--- src/main/org/apache/tools/ant/taskdefs/SubAnt.java\t2 Jul 2004 07:23:54\n-0000\t1.17\n+++ src/main/org/apache/tools/ant/taskdefs/SubAnt.java\t8 Oct 2004 18:13:11 -0000\n@@ -63,7 +63,8 @@\n \n     private Ant ant = null;\n     private String target = null;\n-    private String antfile = \"build.xml\";\n+    //private String antfile = \"build.xml\";\n+    private String antfile = null;\n     private File genericantfile = null;\n     private boolean inheritAll = false;\n     private boolean inheritRefs = false;\n@@ -177,6 +178,13 @@\n             target = getOwningTarget().getName();\n         }\n */\n+        if(antfile == null){\n+        \t\tantfile = getProject().getProperty(\"ant.file.default\");\n+        \t\tif(antfile == null){\n+        \t\t\tantfile = \"build.xml\";\n+        \t\t}\n+        }\n+        \n         BuildException buildException = null;\n         for (int i = 0; i < count; ++i) {\n             File file = null;"}, {"count": 1, "tags": [], "bug_id": 31665, "attachment_id": 13042, "id": 64980, "time": "2004-10-12T12:29:53Z", "creator": "steve.morin@gmail.com", "creation_time": "2004-10-12T12:29:53Z", "is_private": false, "text": "Created attachment 13042\npatch file to set filename for default buildfile"}]