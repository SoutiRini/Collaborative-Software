[{"count": 0, "tags": [], "text": "I reported this a while ago regarding Tomcat 3.3\n(http://nagoya.apache.org/bugzilla/show_bug.cgi?id=13662). It seems however that\na (symptomatically) similar problem exists in Tomcat 4.1.12. \n\nAccording to W3C spec of 304 response header \n(http://www.w3.org/Protocols/HTTP/HTRESP.html):\n\"Response headers are as if the client had sent a HEAD request, but limited to \nonly those headers which make sense in this context. This means only headers \nthat are relevant to cache managers and which may have changed independently \nof the document's Last-Modified date. Examples include Date , Server and \nExpires . \"\n\n\nMy setup is:\nTomcat 4.1.12 with a Coyote HTTP/1.1 Connector on port 18000\nApache 1.3.26 using mod_jk on port 80 forwards all traffic using mod_jk to a\nCoyote JK 2 connector (on port 8009).\n\nConsider the following going through apache -> jk -> tomcat:\n$ curl -I http://rhubarb/images/bit.gif \nHTTP/1.1 200 \nDate: Tue, 22 Oct 2002 11:52:32 GMT\nServer: Apache/1.3.26 (Unix) mod_jk/1.1.0 DAV/1.0.3 mod_ssl/2.8.10 OpenSSL/0.9.6g\nETag: W/\"48-1032511407000\"\nLast-Modified: Fri, 20 Sep 2002 08:43:27 GMT\nContent-Length: 48\nContent-Type: image/gif\n\n$ curl -I http://rhubarb/images/bit.gif -H 'If-Modified-Since: Fri, 20 Sep 2002\n08:43:27 GMT'\nHTTP/1.1 304 \nDate: Tue, 22 Oct 2002 11:55:28 GMT\nServer: Apache/1.3.26 (Unix) mod_jk/1.1.0 DAV/1.0.3 mod_ssl/2.8.10 OpenSSL/0.9.6g\nContent-Length: 0\nContent-Type: text/plain\n\n\nThe second 'curl' command shows the problem. We have two headers (Content-Length\nand Content-Type) that shows strange things. Clearly this breaks the spec, and\ndoes cause problems in example mod_proxy (see above mentioned bug report).\n\nHowever, if I go directly towards port 18000 of my Tomcat, I get the correct result:\n\n$ curl -I http://rhubarb:18000/images/bit.gif \nHTTP/1.1 200 OK\nETag: W/\"48-1032511407000\"\nLast-Modified: Fri, 20 Sep 2002 08:43:27 GMT\nContent-Type: image/gif\nContent-Length: 48\nDate: Tue, 22 Oct 2002 11:59:03 GMT\nServer: Apache Coyote/1.0\n\n$ curl -I http://rhubarb:18000/images/bit.gif -H 'If-Modified-Since: Fri, 20 Sep\n2002 08:43:27 GMT'\nHTTP/1.1 304 Not Modified\nContent-Length: 0\nDate: Tue, 22 Oct 2002 11:59:17 GMT\nServer: Apache Coyote/1.0\n\nSecond 'curl' have no strange headers. This is why I suspect Coyote JK 2 to be\nthe problem. I'm speculating this is due to a DEFAULT_CONTENT_TYPE set in the\nCoyote JK connector (org.apache.coyote.Constants). But I haven't looked closely\nenough to verify this, and also I'm not sure what the remedy should be.\n\nThe DEFAULT_CONTENT_TYPE I assume is there for a reason even though I don't\nunderstand why a Connector would interfere with any headers (wouldn't it be\ncleaner if the Connector only passed on whatever Tomcat tells it, and don't try\nto add it's own bits on top?).\n\nI am happy to sort this one out myself, but I would appreciate getting pointed\nin the right direction. Should I make a special case in the Connector for 304\nerrors (and then clear these headers), or should the Connector not have default\ntypes?\n\nMartin Algesten", "attachment_id": null, "id": 24986, "creator": "puckman@taglab.com", "time": "2002-10-22T12:07:32Z", "bug_id": 13846, "creation_time": "2002-10-22T12:07:32Z", "is_private": false}, {"attachment_id": null, "tags": [], "bug_id": 13846, "is_private": false, "count": 1, "id": 24990, "time": "2002-10-22T13:37:05Z", "creator": "puckman@taglab.com", "creation_time": "2002-10-22T13:37:05Z", "text": "Just realised that my second example (going straight to tomcats HTTP/1.1\nconnector) doesn't seem right either. The header \"Content-Lenght: 0\" doesn't\nseem right according to spec. So rather being a problem isolated to Coyote JK 2,\nit might also affect some core components.\n\nM"}, {"count": 2, "tags": [], "text": "I looked into this 'cos I was skeptical, but you're right, this breaks the spec.\n206 (Partial) responses to If-Range requests, and 304 (Not Modified) responses\nshouldn't include entity-headers in most circumstances, and /must not/ include\nthem in every other circumstance. i.e. the best thing to do is remove any of\nthem from a response. Sections 10.2.7 and 10.3.5 of the http 1.1 spec; the\nentity headers that shouldn't be sent are listed in sec 7.1.\n\nNear as I can tell the problem is in\norg.apache.coyote.http11.Http11Processor.prepareResponse(), where it only\nexcludes a couple of entity headers on the basis that they're disallowed (should\nremove all of them). What's in there is a hack round the inability to remove\nheaders from org.apache.tomcat.util.http.MimeHeaders, and it smells. A better\nidea might be to have a 'MimeHeaderFilter' than applies the rules (eg\nEntityHeaderFilter); whats more is it doesn't handle the 206 case at all.\n\nFWIW, I'd also agree that the default content type shouldn't be being added\nafter the headers have already been 'validated' (since thats what\nprepareResponse claims to do) - that doesn't make a lick of sense.", "attachment_id": null, "id": 26082, "creator": "Brian.Ewins@btinternet.com", "time": "2002-11-11T18:52:22Z", "bug_id": 13846, "creation_time": "2002-11-11T18:52:22Z", "is_private": false}, {"count": 3, "text": "Created attachment 7069\nPatch to always set Content-Type/Content-Length headers in 304 response", "creator": "puckman@taglab.com", "is_private": false, "id": 39885, "time": "2003-07-02T18:49:20Z", "bug_id": 13846, "creation_time": "2003-07-02T18:49:20Z", "tags": [], "attachment_id": 7069}, {"count": 4, "tags": [], "creator": "puckman@taglab.com", "is_private": false, "text": "I know more about this problem now:\n\nThe problem is twofold, Content-Length set to 0 the blame goes to Tomcat 4\nCoyote/JK, however the Content-Type set to text/plain the problem lies with\napache 1.3.x. If a response does not have a \"Content-Type\" set, apache 1.3 adds\nits' DefaultType directive even if the response is a 304.\n\nThe easy option is to let Tomcat 4 always set both headers correctly in a 304,\nand then apache DefaultType is not an issue.\n\n$ diff -u DefaultServlet.java-2003-07-01 DefaultServlet.java\n--- DefaultServlet.java-2003-07-01      2003-03-19 09:20:48.000000000 +0000\n+++ DefaultServlet.java 2003-07-02 19:45:32.000000000 +0100\n@@ -972,6 +972,16 @@\n                 (request.getAttribute(Globals.CONTEXT_PATH_ATTR) != null);\n             if (!included\n                 && !checkIfHeaders(request, response, resourceInfo)) {\n+\n+             // Added by Martin Algesten 1/7 2003 to make sure the\n+             // Content-Type/Content-Length doesn't get polluted\n+             // in the mod_proxy cache.\n+               String contentType =\n+                 getServletContext().getMimeType(resourceInfo.path);\n+               response.setContentType( contentType );\n+               long contentLength = resourceInfo.length;\n+                response.setContentLength((int) contentLength);\n+\n                 return;\n             }\n  \n", "id": 39886, "time": "2003-07-02T18:49:43Z", "bug_id": 13846, "creation_time": "2003-07-02T18:49:43Z", "attachment_id": null}, {"count": 5, "tags": [], "text": "Based on last comment removing JK2 and addng catalina. [Just recategorizing]", "is_private": false, "id": 67671, "creator": "funkman@joedog.org", "time": "2004-12-01T02:52:13Z", "bug_id": 13846, "creation_time": "2004-12-01T02:52:13Z", "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 13846, "text": "I have tested the latest 4.1.x source with the latest connector source and the\nheaders included in both the 206 and 304 responses are as per the spec.\n\nI haven't looked at what point this was actually fixed.", "count": 6, "id": 84690, "time": "2006-01-17T00:21:17Z", "creator": "markt@apache.org", "creation_time": "2006-01-17T00:21:17Z", "is_private": false}]