[{"count": 0, "tags": [], "creator": "knst.kolinko@gmail.com", "attachment_id": null, "is_private": false, "id": 144814, "time": "2011-03-07T22:45:58Z", "bug_id": 50885, "creation_time": "2011-03-07T22:45:58Z", "text": "I noticed this while reviewing r1078409 which was a fix inspired by this discussion,\n\n\"atomicity violation in the JspServletWrapper class\" @dev list\nhttp://tomcat.markmail.org/thread/htekwb5aq4urrf76\n\n\nThe Ch.2.3.4 of Servlet 3.0 says that before destroy() method of a servlet is called all the threads must finish service() (or some timeout to pass).\n\nWhat I do not like is that\n\n1) JspServletWrapper.getServlet() calls JspServletWrapper.destroy() while there is no guarantee that the servlet is not still in service.\n\n2) we are able to call service() on a servlet after its destroy() has been called.\n\nThis issue existed before r1078409, but now \"2)\" is slightly more noticeable, because we remember the value returned by getServlet() in a local variable. Reverting r1078409 is no good, because it just adds a risk of accessing an instance of servlet before it is properly initialized (because reading of theServlet field were not protected by a sync), but does not solve this issue.\n\n\nI think this is hard to observe, though, because\n\n1) The servlet is not just any servlet, but a JSP page.\n\nThe jspDestroy() method in a JSP page is usually a NOOP.\n\nThe _jspDestroy() method though does some work (see Generator.generateDestroy()): releases tag handler pools.\n\n2) The reloading occurs only when running with development=true in JspServlet configuration.\n\nThose running with development=false are unaffected.\n\n--------------------------------------\nThere are also calls to JspServletWrapper.destroy() from JSP unloading feature (new in TC7). I wonder whether those play fine."}, {"count": 1, "tags": [], "bug_id": 50885, "text": "I'm leaning towards marking this as WONTFIX. No user has reported an error and I can't see a way to fix this that wouldn't cause bigger problems.\n\nIf there were an error it would be in development mode only. From a spec compliance point of view, Tomcat is spec compliant - it just uses a really, really short time out ;)\n\nFor the unloading use case, no issue should occur with an appropriately sized and configured cache.", "id": 144997, "attachment_id": null, "creator": "markt@apache.org", "creation_time": "2011-03-14T10:52:38Z", "time": "2011-03-14T10:52:38Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 50885, "attachment_id": null, "id": 145402, "time": "2011-03-30T07:10:57Z", "creator": "markt@apache.org", "creation_time": "2011-03-30T07:10:57Z", "is_private": false, "text": "AS per my previous comment."}]