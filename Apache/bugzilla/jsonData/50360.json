[{"count": 0, "tags": [], "bug_id": 50360, "text": "After stopping an Embedded tomcat the server socket is still bound (in state LISTEN).\n\nThis test case fails:\n\n\nimport java.io.File;\nimport java.io.IOException;\nimport java.net.MalformedURLException;\nimport java.net.ServerSocket;\nimport java.net.UnknownHostException;\n\nimport org.apache.catalina.Context;\nimport org.apache.catalina.Engine;\nimport org.apache.catalina.Host;\nimport org.apache.catalina.LifecycleException;\nimport org.apache.catalina.LifecycleState;\nimport org.apache.catalina.connector.Connector;\nimport org.apache.catalina.session.StandardManager;\nimport org.apache.catalina.startup.Embedded;\nimport org.testng.Assert;\nimport org.testng.annotations.Test;\n\n\n@SuppressWarnings( \"deprecation\" )\npublic class TestEmbeddedStop {\n\n    @Test\n    public void testShutdown() throws Exception {\n        final int port = 18888;\n        final Embedded tomcat1 = createCatalina( port );\n        tomcat1.start();\n        tomcat1.stop();\n        try {\n            new ServerSocket( port );\n        } catch ( final IOException e ) {\n            Assert.fail( \"Could not open new server socket on port \" + port, e );\n        }\n    }\n\n    public static Embedded createCatalina( final int port ) throws MalformedURLException,\n            UnknownHostException, LifecycleException {\n\n        final Embedded catalina = new Embedded() {\n\n            @Override\n            // Workaround for #50358 - Embedded.stopInternal sets state to STARTING, should be STOPPING\n            protected void stopInternal() throws LifecycleException {\n                super.stopInternal();\n                setState(LifecycleState.STOPPING);\n            }\n\n        };\n\n        final Engine engine = catalina.createEngine();\n\n        engine.setName( \"engine-\" + port );\n        engine.setDefaultHost( \"localhost\" );\n\n        final String docBase = System.getProperty( \"java.io.tmpdir\" );\n        final Host host = catalina.createHost( \"localhost\", docBase );\n        engine.addChild( host );\n\n        final Context context = catalina.createContext( \"\", \"webapp\" );\n        host.addChild( context );\n        new File( docBase, \"webapp\" ).mkdirs();\n\n        context.setManager( new StandardManager() );\n\n        catalina.addEngine( engine );\n        engine.setService( catalina ); // needed to prevent NPE in ApplicationContext.populateSessionTrackingModes\n\n        final Connector connector = catalina.createConnector( \"localhost\", port, false );\n        catalina.addConnector( connector );\n\n        return catalina;\n    }\n\n}\n\n\nWhen  org.apache.catalina.connector.Connector.stopInternal is changed and sets the state to LifecycleState.MUST_DESTROY at the end this works as expected: the server socket is closed and free for further use.", "id": 142097, "time": "2010-11-28T20:03:18Z", "creator": "martin.grotzke@googlemail.com", "creation_time": "2010-11-28T20:03:18Z", "is_private": false, "attachment_id": null}, {"count": 1, "text": "Created attachment 26352\nAdd setState(LifecycleState.MUST_DESTROY) to Connector.stopInternal (based on 7.0.4)", "creator": "martin.grotzke@googlemail.com", "attachment_id": 26352, "id": 142098, "time": "2010-11-28T20:20:10Z", "bug_id": 50360, "creation_time": "2010-11-28T20:20:10Z", "tags": [], "is_private": false}, {"count": 2, "text": "Connector components can be started and stopped multiple times and setting MUST_DESTROY will break that. Therefore, the patch can't be used in its current form.\n\nThe Connectors and some of their associated components have non-standard lifecycles and I suspect that a change to one of the associated components will be required to fix this.", "creator": "markt@apache.org", "attachment_id": null, "id": 142118, "time": "2010-11-29T08:47:21Z", "bug_id": 50360, "creation_time": "2010-11-29T08:47:21Z", "tags": [], "is_private": false}, {"count": 3, "tags": [], "creator": "martin.grotzke@googlemail.com", "attachment_id": null, "text": "I debugged this and found the following path of execution:\n\nConnector.stopInternal():\n-> protocolHandler.stop() (Http11Protocol, stop() implemented in AbstractHttp11Protocol)\n   -> endpoint.stop() (JIoEndpoint)\n      -> pause()\n      -> unlockAccept()\n      -> shutdownExecutor()\n\nA problem here seems to be that JIoEndpoint.stop() does not close the serverSocket (only destroy is doing this).\n\nTherefore, if the implementation of AbstractHttp11Protocol.stop() is changed to invoke\n  endpoint.destroy();\ninstead of endpoint.stop() also fixes the issue.\n\nNot sure if this is the correct solution.\n\nHow can we proceed with this?\n\nThanx && Cheers,\nMartin", "id": 142217, "time": "2010-11-30T16:24:43Z", "bug_id": 50360, "creation_time": "2010-11-30T16:24:43Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 50360, "text": "I'm working on this at the moment (although work and infrastructure stuff may distract me for the next few days). I have already sorted out the MapperListener, the ProtocolHandler and Endpoints are next but they will take a little longer as all five of the connectors will probably need to be changed together.\n\nFrom what I have looked at so far most of init() needs to move into start(), most of destroy() into stop() and any JMX stuff needs to move to init() / destroy().\n\nThe new Lifecycle code can't be used directly as it will create a dependency on Catalina from the Connectors but it should be possible to re-use most of the ideas and probably some of the code.", "id": 142230, "time": "2010-11-30T17:52:07Z", "creator": "markt@apache.org", "creation_time": "2010-11-30T17:52:07Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 50360, "attachment_id": null, "id": 142236, "time": "2010-12-01T03:24:07Z", "creator": "martin.grotzke@googlemail.com", "creation_time": "2010-12-01T03:24:07Z", "is_private": false, "text": "Ok, great you're on it already!"}, {"count": 6, "tags": [], "bug_id": 50360, "attachment_id": null, "id": 142260, "time": "2010-12-01T13:38:53Z", "creator": "markt@apache.org", "creation_time": "2010-12-01T13:38:53Z", "is_private": false, "text": "It wasn't as much work as I feared. Pretty much all a simple copy and paste.\n\nThe fix has been applied to 7.0.x and will be included in 7.0.6 onwards."}, {"count": 7, "tags": [], "bug_id": 50360, "text": "Great, thanx a lot for fixing this!", "id": 142289, "time": "2010-12-02T03:11:32Z", "creator": "martin.grotzke@googlemail.com", "creation_time": "2010-12-02T03:11:32Z", "is_private": false, "attachment_id": null}, {"count": 8, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "text": "The original fix is going to have to be reverted. It caused issues with jsvc (bug 50406) since the privileged ports need to be bound before the user id switches to the non-root user.", "id": 142345, "time": "2010-12-03T13:00:10Z", "bug_id": 50360, "creation_time": "2010-12-03T13:00:10Z", "is_private": false}, {"count": 9, "tags": [], "bug_id": 50360, "text": "D'oh. Is there another solution in sight?", "id": 142498, "time": "2010-12-08T19:15:46Z", "creator": "martin.grotzke@googlemail.com", "creation_time": "2010-12-08T19:15:46Z", "is_private": false, "attachment_id": null}, {"count": 10, "attachment_id": null, "creator": "markt@apache.org", "text": "Yep. Working on it (well the clean up prior to implementing the fix) now. A bindOnInit param will be added to the connector that defaults to true. By default the connector will bind/unbind on init()/destroy(). Set it to false and the connector will bind/unbind on start)_/stop()\n\nI could have hacked this in fairly quickly but the connector/protocol/endpoint code is long overdue a clean-up and this issue was the trigger for getting that done. Connector and protocol are cleaned up. Starting on the endpoints now.", "id": 142516, "time": "2010-12-09T06:32:46Z", "bug_id": 50360, "creation_time": "2010-12-09T06:32:46Z", "tags": [], "is_private": false}, {"count": 11, "tags": [], "bug_id": 50360, "attachment_id": null, "id": 142537, "time": "2010-12-09T14:54:52Z", "creator": "markt@apache.org", "creation_time": "2010-12-09T14:54:52Z", "is_private": false, "text": "And fixed again. You want to set the bindOnInit parameter to false to get the behaviour you want."}, {"count": 12, "tags": [], "bug_id": 50360, "attachment_id": null, "id": 142538, "time": "2010-12-09T15:30:05Z", "creator": "slaurent@apache.org", "creation_time": "2010-12-09T15:30:05Z", "is_private": false, "text": "I think your changes broke /manager/status , I get the following exception with rev 1044114 :\n\n\nSEVERE: Servlet.service() for servlet [Status] in context with path [/manager] threw exception [javax.management.AttributeNotFoundException:  Cannot find attribute maxTime for org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler@2377ab84] with root cause\njavax.management.AttributeNotFoundException:  Cannot find attribute maxTime for org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler@2377ab84\n\tat org.apache.tomcat.util.modeler.ManagedBean.getGetter(ManagedBean.java:494)\n\tat org.apache.tomcat.util.modeler.BaseModelMBean.getAttribute(BaseModelMBean.java:180)\n\tat com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.getAttribute(DefaultMBeanServerInterceptor.java:666)\n\tat com.sun.jmx.mbeanserver.JmxMBeanServer.getAttribute(JmxMBeanServer.java:638)\n\tat org.apache.catalina.manager.StatusTransformer.writeConnectorState(StatusTransformer.java:275)\n\tat org.apache.catalina.manager.StatusManagerServlet.doGet(StatusManagerServlet.java:276)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:623)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:724)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:306)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:240)\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:161)\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:561)\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:164)\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:108)\n\tat org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:558)\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:118)\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:379)\n\tat org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:243)\n\tat org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:179)\n\tat org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:157)\n\tat org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor.run(JIoEndpoint.java:283)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)\n\tat java.lang.Thread.run(Thread.java:680)"}, {"count": 13, "tags": [], "bug_id": 50360, "attachment_id": null, "id": 142539, "time": "2010-12-09T16:12:08Z", "creator": "markt@apache.org", "creation_time": "2010-12-09T16:12:08Z", "is_private": false, "text": "Re-factoring goof - fixed."}, {"count": 14, "tags": [], "creator": "martin.grotzke@googlemail.com", "attachment_id": null, "text": "(In reply to comment #13)\n> Re-factoring goof - fixed.\n\nGreat, thanx a lot for your work! Now I ran into another issue, will submit this separately (#50448).", "id": 142546, "time": "2010-12-09T19:24:22Z", "bug_id": 50360, "creation_time": "2010-12-09T19:24:22Z", "is_private": false}]