[{"attachment_id": null, "tags": [], "bug_id": 46468, "text": "If, for a PNG image, ImageMagick's identify says:\n\n  Resolution: 320x320\n  Units: Undefined <----------------\n\nthen ImageInfo will use a default value, using Toolkit.getDefaultToolkit().getScreenResolution(), which in my case is 160.\n\nNothing wrong with that I suppose, but it would be helpful if a warning was logged or something, so you knew to fix the image.\n\nWhen PreloaderImageIO.preloadImage does:\n\n        ImageIOUtil.extractResolution(iiometa, size);\n\nit is finding the Dimension child, but not \"HorizontalPixelSize\" or VerticalPixelSize (these are null).", "count": 0, "id": 123737, "time": "2009-01-04T03:25:17Z", "creator": "jason@plutext.org", "creation_time": "2009-01-04T03:25:17Z", "is_private": false}, {"attachment_id": null, "tags": [], "creator": "max@berger.name", "text": "I haven't taken this bug yet as I am still unsure about the proper solution.\n\nCurrently:\n\ngetDefaultResulution is called, result stored.\nResultion of image is determined if possible, and overwrites default resolution.\n\nThe problem:\nthis happens in multiple different places (PNG is just one). A proper solution would handle all of them.\n\nWe could add the warning to each case, but that would not make much sense. Instead, a common function should warn, which means:\n\nin each case:\nresolution = null;\ndetermine resolution from image;\nfallbackIfneeded(resolution)\n\nand fallbackifneeded would do:\nif resolution == null\n  emit warning\n  resolution = defaultResolution.\n\nThe problem here: Other calculations, such as the image size, depend on the resultion being set beforehand. Each of the cases would need to be examined if the resultion could be safely set AFTER the other image info is parsed.\n\nSecond issue: Not all image formats support resultion. \n\nminor issue: Some images support different x,y resolutions, this should also be taken into account.\n\nMax", "count": 1, "id": 124220, "time": "2009-01-21T01:04:27Z", "bug_id": 46468, "creation_time": "2009-01-21T01:04:27Z", "is_private": false}, {"attachment_id": null, "tags": [], "creator": "jeremias@apache.org", "text": "Sorry for being late here (being the original author of the thing). The issue here shows that someone was able to make use of the image loading framework outside the FOP context which makes me happy. Mission accomplished. ;-) As for the missing resolution information:\n\nIf using Toolkit.getDefaultToolkit().getScreenResolution() for the fallback resolution is a problem, you can always use your own implementation of the ImageContext interfaces. I'm also doing that in FOP where the default source resolution if configured in an XML file.\n\nIf it is important to be notified if an image resolution is missing, I think the most straight-forward solution is to introduce a listener interface which can be made available through the ImageContext. Something like the following maybe:\n\npublic interface ImageLoaderListener {\n    void notifyMissingImageResolution(Object source, String uri, String mime);\n}\n\nI can imagine that, in time, we may add additional features either to the listener or the Image(Session)Context.\n\nMax noted different resolutions for X and Y. Some formats support that. Personally, I've never seen an image with different X and Y resolutions, yet. So if there's no need I wouldn't complicate things prematurely. That can always be easily added in a backwards-compatible way if it's really needed. At any rate, ImageInfo supports separate resolutions, just in case. But I don't believe it's needed for the fallback.\n\nWDYT?", "count": 2, "id": 124755, "time": "2009-02-09T13:38:14Z", "bug_id": 46468, "creation_time": "2009-02-09T13:38:14Z", "is_private": false}, {"attachment_id": null, "tags": [], "bug_id": 46468, "text": "jason, if you would like to submit a patch following Jeremias' recommendation in comment 2, then i'd be happy to apply it; otherwise, i will mark this as resolved+later due to lack of action", "count": 3, "id": 157818, "time": "2012-04-10T21:58:27Z", "creator": "gadams@apache.org", "creation_time": "2012-04-10T21:58:27Z", "is_private": false}]