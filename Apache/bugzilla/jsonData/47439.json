[{"count": 0, "tags": [], "bug_id": 47439, "attachment_id": null, "text": "PooledConnection.connect() fails to check for null return from java.sql.Driver.connect() method.\n\nThis can result in an NPE when the connection is used later.", "id": 128344, "time": "2009-06-27T05:01:35Z", "creator": "sebb@apache.org", "creation_time": "2009-06-27T05:01:35Z", "is_private": false}, {"count": 1, "tags": [], "creator": "fhanik@apache.org", "text": "I'm not aware of any driver that returns null, when there is a checked exception on the method Driver.connect()", "id": 128350, "time": "2009-06-27T11:27:12Z", "bug_id": 47439, "creation_time": "2009-06-27T11:27:12Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 47439, "attachment_id": null, "text": "The Javadoc for Driver.connect() states:\n\n>>\nAttempts to make a database connection to the given URL. The driver should return \"null\" if it realizes it is the wrong kind of driver to connect to the given URL. This will be common, as when the JDBC driver manager is asked to connect to a given URL it passes the URL to each loaded driver in turn. \n\nThe driver should throw an SQLException if it is the right driver to connect to the given URL but has trouble connecting to the database. \n<<\n\nAs it happens, the JDBC driver for Derby also returns null in other cases, which is how I found the problem.", "id": 128351, "time": "2009-06-27T12:09:30Z", "creator": "sebb@apache.org", "creation_time": "2009-06-27T12:09:30Z", "is_private": false}, {"count": 3, "tags": [], "text": "Here's the result of using a \"jdbc:oracle:\" URL with the Derby JDBC client:\n\n Testcase: testException(org.apache.tomcat.jdbc.test.TestException): Caused an ERROR\n null\n java.sql.SQLException\n     at org.apache.tomcat.jdbc.pool.ConnectionPool.createConnection(ConnectionPool.java:540)\n     at org.apache.tomcat.jdbc.pool.ConnectionPool.borrowConnection(ConnectionPool.java:471)\n     at org.apache.tomcat.jdbc.pool.ConnectionPool.init(ConnectionPool.java:370)\n     at org.apache.tomcat.jdbc.pool.ConnectionPool.<init>(ConnectionPool.java:118)\n     at org.apache.tomcat.jdbc.pool.DataSourceProxy.createPool(DataSourceProxy.java:85)\n     at org.apache.tomcat.jdbc.pool.DataSourceProxy.getConnection(DataSourceProxy.java:96)\n     at org.apache.tomcat.jdbc.test.TestException.testException(TestException.java:22)\n Caused by: java.lang.NullPointerException\n     at org.apache.tomcat.jdbc.pool.PooledConnection.connect(PooledConnection.java:168)\n     at org.apache.tomcat.jdbc.pool.ConnectionPool.createConnection(ConnectionPool.java:517)\n\n===\n\nThis is what happens if a local database \"jdbc:derby:dbname\" cannot be found:\n\nTestcase: testGetConnection(org.apache.tomcat.jdbc.test.TestGetConnection): Caused an ERROR\nnull\njava.sql.SQLException\n    at org.apache.tomcat.jdbc.pool.ConnectionPool.createConnection(ConnectionPool.java:540)\n    at org.apache.tomcat.jdbc.pool.ConnectionPool.borrowConnection(ConnectionPool.java:471)\n    at org.apache.tomcat.jdbc.pool.ConnectionPool.init(ConnectionPool.java:370)\n    at org.apache.tomcat.jdbc.pool.ConnectionPool.<init>(ConnectionPool.java:118)\n    at org.apache.tomcat.jdbc.pool.DataSourceProxy.createPool(DataSourceProxy.java:85)\n    at org.apache.tomcat.jdbc.pool.DataSourceProxy.getConnection(DataSourceProxy.java:96)\n    at org.apache.tomcat.jdbc.test.TestGetConnection.testGetConnection(TestGetConnection.java:32)\nCaused by: java.lang.NullPointerException\n    at org.apache.tomcat.jdbc.pool.PooledConnection.connect(PooledConnection.java:168)\n    at org.apache.tomcat.jdbc.pool.ConnectionPool.createConnection(ConnectionPool.java:517)", "is_private": false, "bug_id": 47439, "id": 128352, "time": "2009-06-27T13:03:46Z", "creator": "sebb@apache.org", "creation_time": "2009-06-27T13:03:46Z", "attachment_id": null}, {"count": 4, "tags": [], "creator": "fhanik@apache.org", "text": "In both cases you get a SQLException, as specified by the API for getting a connection.", "id": 128354, "time": "2009-06-27T15:38:13Z", "bug_id": 47439, "creation_time": "2009-06-27T15:38:13Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "creator": "sebb@apache.org", "text": "I think we are talking about two different APIs here.\n\nThe Driver.connect() API specifically says that it returns null for some cases.\n\nI'm not sure which API you are referring to, as I could not find any Javadoc for any of the methods involved.\n\nThe NPE is caught later and converted into an SQLException, but the resulting Exception is difficult to debug.", "id": 128355, "time": "2009-06-27T16:10:47Z", "bug_id": 47439, "creation_time": "2009-06-27T16:10:47Z", "is_private": false, "attachment_id": null}, {"count": 6, "tags": [], "creator": "sebb@apache.org", "text": "(In reply to comment #2)\n> The Javadoc for Driver.connect() states:\n> \n> >>\n> Attempts to make a database connection to the given URL. The driver should\n> return \"null\" if it realizes it is the wrong kind of driver to connect to the\n> given URL. This will be common, as when the JDBC driver manager is asked to\n> connect to a given URL it passes the URL to each loaded driver in turn. \n> \n> The driver should throw an SQLException if it is the right driver to connect to\n> the given URL but has trouble connecting to the database. \n> <<\n> \n> As it happens, the JDBC driver for Derby also returns null in other cases,\n> which is how I found the problem.\n\nThe \"other cases\" turned out to be a red herring - I was using the wrong driver, so it was equivalent to the first case. Derby JDBC behaves as per the API, i.e. returns null if it cannot handle the url.", "id": 128357, "time": "2009-06-28T05:31:18Z", "bug_id": 47439, "creation_time": "2009-06-28T05:31:18Z", "is_private": false, "attachment_id": null}, {"count": 7, "tags": [], "creator": "fhanik@apache.org", "text": "We dont implement the Driver interface, so we have to throw a SQLException since we retrieve using DataSource.getConnection()\nI see what you mean about error message, it will still be a SQLException, just a better error message.\n\nFixed in r789116.", "id": 128361, "time": "2009-06-28T08:58:23Z", "bug_id": 47439, "creation_time": "2009-06-28T08:58:23Z", "is_private": false, "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 47439, "is_private": false, "count": 8, "id": 128362, "time": "2009-06-28T09:10:09Z", "creator": "sebb@apache.org", "creation_time": "2009-06-28T09:10:09Z", "text": "Thanks, that's fixed the two problems:\n- unhelpful error message\n- unnecessary NPE in code"}]