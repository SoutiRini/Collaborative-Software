[{"count": 0, "tags": [], "creator": "1983-01-06@gmx.net", "attachment_id": null, "id": 195027, "time": "2016-11-16T12:38:14Z", "bug_id": 60381, "creation_time": "2016-11-16T12:38:14Z", "is_private": false, "text": "Moving several components from Tomcat 6.0.x to 8.5.x I have noticed that #getInfo() is gone. RealmBase has an abstact method #getName() which is used in #toString()(). ValveBase lacks this abstract method. This makes the #toString() implementations inconsistent.\n\nRealmBase:\n\n> @Override\n> public String toString() {\n>     StringBuilder sb = new StringBuilder(\"Realm[\");\n>     sb.append(getName());\n>     sb.append(']');\n>     return sb.toString();\n> }\n\nValveBase:\n\n> @Override\n> public String toString() {\n>     StringBuilder sb = new StringBuilder(this.getClass().getName());\n>     sb.append('[');\n>     if (container == null) {\n>         sb.append(\"Container is null\");\n>     } else {\n>         sb.append(container.getName());\n>     }\n>     sb.append(']');\n>     return sb.toString();\n> }\n\nI would rather expect a consistent behavior for both base implementations"}, {"count": 1, "text": "I am willing to provide a patch if we agree on one approach.", "bug_id": 60381, "attachment_id": null, "id": 195090, "time": "2016-11-20T19:07:53Z", "creator": "1983-01-06@gmx.net", "creation_time": "2016-11-20T19:07:53Z", "tags": [], "is_private": false}, {"count": 2, "tags": [], "bug_id": 60381, "is_private": false, "id": 195113, "attachment_id": null, "creator": "markt@apache.org", "creation_time": "2016-11-21T13:17:20Z", "time": "2016-11-21T13:17:20Z", "text": "The toString() implementations have been pretty much unchanged since the lifecycle refactoring in 7.0.x. While users shouldn't not be expecting these to be in any particular format, the chances are that there that some users are expecting the current format. Therefore, we can look at this for trunk but I don't think it should be back-ported.\n\nMy current thinking for a standardised format is:\nSimpleClassName[container.toString()] / SimpleClassName[Container is null]\n\nThis could/should apply to any component that is usually associated with a single container (Valve, Realm, Manager, etc.)\n\nIf we make more use of the Contained interface, it should be possible to do this as a single utility method e.g.:\no.a.c.util.DebugUtil.containedToString(Contained)\n\nAlthough, that won't work with Manager, Loader etc. that are Context specific.\n\nMaybe\no.a.c.util.DebugUtil.containedToString(Object, Container)\nas well for those objects that don't/can't implement Contained.\n\nWhich means we might not need to expand the use of Contained anyway. I need to spend some time thinking about how much sense that does or doesn't make."}, {"count": 3, "tags": [], "creator": "1983-01-06@gmx.net", "attachment_id": null, "is_private": false, "id": 195138, "time": "2016-11-22T09:29:25Z", "bug_id": 60381, "creation_time": "2016-11-22T09:29:25Z", "text": "(In reply to Mark Thomas from comment #2)\n> The toString() implementations have been pretty much unchanged since the\n> lifecycle refactoring in 7.0.x. While users shouldn't not be expecting these\n> to be in any particular format, the chances are that there that some users\n> are expecting the current format. Therefore, we can look at this for trunk\n> but I don't think it should be back-ported.\n\nI do not even expect some specific format, but rather a consistent approach. Don't you think it is worthwile to port back to 8.5? This is going to be supported for a long time compared to 6.0/7.0.\n\n> My current thinking for a standardised format is:\n> SimpleClassName[container.toString()] / SimpleClassName[Container is null]\n\nDo you think that the simple class name is sufficient? I was used to #getInfo() previously which has the FQCN, and this method is gone. Consider that people might copy Tomcat's standard component into their source tree, modify code and package but leave class name as-is. Still, this is good compromise.\n \n> If we make more use of the Contained interface, it should be possible to do\n> this as a single utility method e.g.:\n> o.a.c.util.DebugUtil.containedToString(Contained)\n>\n> Maybe\n> o.a.c.util.DebugUtil.containedToString(Object, Container)\n> as well for those objects that don't/can't implement Contained.\n\nThis make defitively sense!\n \n> Which means we might not need to expand the use of Contained anyway. I need\n> to spend some time thinking about how much sense that does or doesn't make.\n\nI have noticed that a lot of components which use Container do not implement Contained at all. Is there a legacy reason for that? It seems awkward.\n\nIt might be worth considering deprecating RealmBase#getName() since only toString() uses it and it is likely to be superseded.\n\nMoreover, toString() has to be well crafted if it is used in MBeans/JMX or log statements to clearly identify the component itself and its location in the server tree."}, {"count": 4, "text": "(In reply to Michael Osipov from comment #3)\n\n> Don't you think it is worthwile to port back to 8.5?\n\nNo.\n\n> Do you think that the simple class name is sufficient?\n\nYes.\n\n> I have noticed that a lot of components which use Container do not implement\n> Contained at all. Is there a legacy reason for that? It seems awkward.\n\nIt was added to solve a specific problem for Valves. It wasn't added to the other components because it wasn't required.\n\n> It might be worth considering deprecating RealmBase#getName() since only\n> toString() uses it and it is likely to be superseded.\n\n+1.\n\n> Moreover, toString() has to be well crafted if it is used in MBeans/JMX or\n> log statements to clearly identify the component itself and its location in\n> the server tree.\n\nJMX name generation should be separate from toString().", "bug_id": 60381, "attachment_id": null, "id": 195160, "time": "2016-11-23T10:10:19Z", "creator": "markt@apache.org", "creation_time": "2016-11-23T10:10:19Z", "tags": [], "is_private": false}, {"count": 5, "tags": [], "text": "I see that you have picked up my proposal to reuse the Contained interface: http://www.mail-archive.com/dev@tomcat.apache.org/msg113336.html", "is_private": false, "bug_id": 60381, "id": 195201, "time": "2016-11-25T09:15:37Z", "creator": "1983-01-06@gmx.net", "creation_time": "2016-11-25T09:15:37Z", "attachment_id": null}, {"count": 6, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "id": 195202, "time": "2016-11-25T09:49:16Z", "bug_id": 60381, "creation_time": "2016-11-25T09:49:16Z", "is_private": false, "text": "Fixed in:\n- trunk for 9.0.0.M14 onwards\n\nI also applied the clean-up to Realm.getName()"}]