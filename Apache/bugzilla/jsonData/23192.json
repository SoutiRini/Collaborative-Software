[{"text": "Even though the browser sends Authorization header in the request it is \napparantly not processed and the username is not set in the request WHEN the \nurl is not one of the protected urls in the web.xml. What this means is that it \nis impossible to have application specific security managment in your code, for \nexample using setStatus(HttpServletResponse.SC_UNAUTHORIZED) in servlet code.\n\nI am using Java v1.4.2_01 and Internet Explorer v6.0.2800.1106\n\nSteps to reproduce:\n1) Install Tomcat 4.1.27-LE\n1) Change to BASIC authentication in web.xml in the examples webapplication.\n2) add \"/jsp/snp\" to protected urls in security-constraint section.\n3) Open browser and go to the page:\n   http://localhost:8080/examples/jsp/snp/snoop.jsp\n   log in as tomcat/tomcat, the page return you as user tomcat, ok so far.\n4) Stop tomcat and remove the \"/jsp/snp\" as a protected url.\n   Start tomcat again\n5) Refresh the page in the browser, remote user is now null.\n\nIf you monitor the communications between the server and browser you will see \nthat the browser sends the Authorization header in the second request, but \ngetRemoteUser still returns null. Here is the request and response:\n\nGET /examples/jsp/snp/snoop.jsp HTTP/1.1\nAccept: */*\nAccept-Language: is\nAccept-Encoding: gzip, deflate\nUser-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.0; T312461)\nHost: localhost\nConnection: Keep-Alive\nCache-Control: no-cache\nCookie: JSESSIONID=9A0358D041949A450A3E87DE750D8EC1\nAuthorization: Basic dG9tY2F0OnRvbWNhdA==\n\nHTTP/1.1 200 OK\nContent-Type: text/html;charset=ISO-8859-1\nContent-Length: 745\nDate: Tue, 16 Sep 2003 11:47:16 GMT\nServer: Apache Coyote/1.0\n\n<html>\n<!--\n  Copyright (c) 1999 The Apache Software Foundation.  All rights \n  reserved.\n-->\n\n<body bgcolor=\"white\">\n<h1> Request Information </h1>\n<font size=\"4\">\nJSP Request Method: GET\n<br>\nRequest URI: /examples/jsp/snp/snoop.jsp\n<br>\nRequest Protocol: HTTP/1.1\n<br>\nServlet path: /jsp/snp/snoop.jsp\n<br>\nPath info: null\n<br>\nQuery string: null\n<br>\nContent length: -1\n<br>\nContent type: null\n<br>\nServer name: localhost\n<br>\nServer port: 80\n<br>\nRemote user: null\n<br>\nRemote address: 127.0.0.1\n<br>\nRemote host: 127.0.0.1\n<br>\nAuthorization scheme: null \n<br>\nLocale: is\n<hr>\nThe browser you are using is Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.0; \nT312461)\n<hr>\n</font>\n</body>\n</html>", "tags": [], "bug_id": 23192, "attachment_id": null, "count": 0, "id": 44237, "time": "2003-09-16T12:50:42Z", "creator": "kbg@hugvit.is", "creation_time": "2003-09-16T12:50:42Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 23192, "is_private": false, "id": 44274, "creation_time": "2003-09-17T18:42:11Z", "time": "2003-09-17T18:42:11Z", "creator": "medthomas@ntlworld.com", "text": "I have had a look at the spec at I think what you are trying to do runs \ncontrary to the concept of programmatic security as described in the spec. The \nrelevant part of the spec is:\n\"SRV.12.3 Programmatic Security\nProgrammatic security is used by security aware applications when declarative\nsecurity alone is not sufficient to express the security model of the \napplication.\nProgrammatic security consists of the following methods of the\nHttpServletRequest interface:\n\u2022 getRemoteUser\n\u2022 isUserInRole\n\u2022 getUserPrincipal\"\n\nMy understanding of this is that using setStatus() to force the sending of an \nauthentication header is not considered a valid part of programmatic security. \nI am therefore marking this bug as INVALID.\n\nHowever, if you have a security model you can't implement using an appropriate \ncombination declarative and programmatic security please reopen this bug, \nprovide a description of your security model and I will be happy to take \nanother look at this.", "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 23192, "text": "Yes I think you are right, apparently this is not supported in J2EE. I also did \nsome testing in Websphere and it behaves exactly the same way. I guess I will \nhave to implement my own security by accessing the username/password from the \nAuthorization header and/or JSESSIONID. I don't see any other way but to re-\nimplement basically all the declarative security model in my application.", "id": 44336, "time": "2003-09-19T11:27:06Z", "creator": "kbg@hugvit.is", "creation_time": "2003-09-19T11:27:06Z", "is_private": false, "attachment_id": null}]