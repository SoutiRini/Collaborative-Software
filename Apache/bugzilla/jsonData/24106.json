[{"count": 0, "tags": [], "bug_id": 24106, "attachment_id": null, "is_private": false, "id": 46247, "time": "2003-10-24T15:43:46Z", "creator": "rusty@putzler.org", "creation_time": "2003-10-24T15:43:46Z", "text": "I have a TestCase that does something like this:\n\npublic void MyTest extends TestCase(){"}, {"count": 1, "tags": [], "bug_id": 24106, "attachment_id": null, "is_private": false, "id": 46248, "time": "2003-10-24T15:56:58Z", "creator": "rusty@putzler.org", "creation_time": "2003-10-24T15:56:58Z", "text": "I have a TestCase that does something like this:\n\npublic void MyTest extends TestCase(){\n\tpublic static Test suite(\"MyTestSuite\") {\n\t\tTestSuite suite = new TestSuite();\n\t\tsuite.addTest(new MyTest(\"testPerformance\"));\n\t\tsuite.addTest(new MyTest(\"testPerformance2\"));\n\t\tsuite.addTest(new CustomDataPoolTest(\"testPerformance\"));\n\t\tsuite.addTest(new CustomDataPoolTest(\"privatePerformanceTest\"));\n\t\treturn suite;\n\t}\n\tpublic void testPerformance(){\n\t\t//do something\n\t}\n\tpublic void testPerformance2(){\n\t\t//do something\n\t}\n  ....\n}\n\nThe output of the Junit Report will record:\n\nMytest\n\ttestPerformance\n\ttestPerformance2\n\ttestPerformance\n\tprivatePerformance\n\n\n\nThere doesn't appear to be a way to determine that the second testPerformance \nor privatePerformance tests orginated from a different TestCase class. It seems \nlike the report should list the suite name instead of the TestCase Name.  For \ninstance:\n\n\nMyTestSuite\n\tMyTest.testPerformance\n\tMyTest.testPerformance2\n\tCustomDataPoolTest.testPerformance\n\tCustomDataPoolTest.privatePerformance\n"}, {"count": 2, "tags": [], "bug_id": 24106, "attachment_id": null, "is_private": false, "id": 60052, "time": "2004-06-29T17:02:19Z", "creator": "jeff@jsheets.net", "creation_time": "2004-06-29T17:02:19Z", "text": "Actually the XML formatter of the JUnit task outputs in this way.  JUnitReport\nmerely reformats the xml that was generated.  So it would appear that the XML\nformatter should be rewritten or a new formatter added.  This is still a problem\nin 1.6.1.  Has anyone looked into writing a new formatter?"}, {"count": 3, "tags": [], "text": "This issue is very popular. Any one wants to write a patch for it ?", "attachment_id": null, "bug_id": 24106, "id": 95186, "time": "2006-10-28T17:11:30Z", "creator": "antoine@apache.org", "creation_time": "2006-10-28T17:11:30Z", "is_private": false}, {"count": 4, "tags": [], "text": "FYI, I spent some time working on this today, not really because I need it, but\nbecause people keep complaining to me that Maven Surefire is broken because it's\nincompatible with JUnitReport.  :-)\n\nhttp://www.nabble.com/Test-Suites,-Ant,-Surefire,-and-JunitReport-td15076378.html\n\nAnt 1.6 (I think?) introduced a helpful attribute on all of its <testcase>\nclasses to include the class name of the class on every <testcase> element:\n\n     <testsuite name=\"com.mycompany.MyTestSuite\" failures=\"0\" errors=\"0\"\ntests=\"4\" time=\"0.031\">\n       <properties><!-- ... --></properties\n       <testcase name=\"test1a\" time=\"0.0\" classname=\"com.mycompany.Test1\" />\n       <testcase name=\"test1b\" time=\"0.0\" classname=\"com.mycompany.Test1\" />\n       <testcase name=\"test2a\" time=\"0.0\" classname=\"com.mycompany.Test2\" />\n       <testcase name=\"test2b\" time=\"0.0\" classname=\"com.mycompany.Test2\" />\n       <testcase name=\"test3a\" time=\"0.0\" classname=\"com.mycompany.Test3\" />\n       <testcase name=\"test3b\" time=\"0.0\" classname=\"com.mycompany.Test3\" />\n     </testsuite>\n\nThis is good, because it allows you to figure out which class the method really\nbelongs to.  This is what both Surefire and TestNG output when they generate\nJUnit-like results.  Unfortunately, nobody honors the \"classname\" attribute,\nincluding Ant 1.7's JunitReport task!\n\nFurther on in the thread linked above, Steve suggested I try my hand at updating\nthe XSLT.  I assert that fixing the XSLT without changing Ant is/would be\nfricking impossible.  We could maybe handle it if the XML were organized like this:\n\n     <testsuite name=\"com.mycompany.MyTestSuite\" failures=\"0\" errors=\"0\"\ntests=\"4\" time=\"0.031\">\n       <properties><!-- ... --></properties>\n       <package name=\"com.mycompany\">\n         <class name=\"Test1\" />\n           <testcase name=\"test1a\" time=\"0.0\"/>\n           <testcase name=\"test1b\" time=\"0.0\"/>\n         </class>\n         <class name=\"Test2\" />\n           <testcase name=\"test2a\" time=\"0.0\"/>\n           <testcase name=\"test2b\" time=\"0.0\"/>\n         </class>\n         <class name=\"Test3\" />\n           <testcase name=\"test3a\" time=\"0.0\"/>\n           <testcase name=\"test3b\" time=\"0.0\"/>\n         </class>\n       </package>\n     </testsuite>\n\nBut getting from the first schema into the second schema is brutally challenging\nin XSLT 1.0 (the version with which we'd have to remain compatible).  \n\nThe hardest part is trying to reorganize the test cases into classes, without\nthe use of XSLT 1.1 node-sets.  You've got to loop through the test cases,\nrecognize classes that you've already seen, and group them together when they match.\n\nEven just splitting the class string into its package, while possible, is really\nannoying in XSLT; right now Ant does it at the suite level in Java in\nXMLResultAggregator.\n\nIf an XSLT masochist, er, I mean WIZARD wants to take a crack at this problem,\nI'm sure it'd be appreciated.  junit-noframes.xsl is only a few hundred lines\nlong; how bad could it be? ;-)\n\nI suppose I could put together a patch in XMLResultAggregator, but then it's not\nentirely clear whether my goal should be to remain backwards compatible with the\nexisting XSLT that's out there (presumably by splitting <testsuite> elements up\ninto multiple <testsuite> elements in the TESTS-TestSuites.xml file) or what.", "is_private": false, "id": 113815, "creator": "dan@fabulich.com", "time": "2008-02-15T18:09:47Z", "bug_id": 24106, "creation_time": "2008-02-15T18:09:47Z", "attachment_id": null}, {"count": 5, "tags": [], "text": "I would prefer the 'evolving' approach as documented on wiki: \nProposals/EnhancedTestReports: \nhttp://wiki.apache.org/ant/Proposals/EnhancedTestReports.\n\nI think that what you try to achieve can be done by the current XML output \nformat.\nSorting and grouping in the standard XSLT files has already been achieved for \npackage.\n\n", "attachment_id": null, "bug_id": 24106, "id": 113824, "time": "2008-02-16T02:15:48Z", "creator": "j_cumps@yahoo.com", "creation_time": "2008-02-16T02:15:48Z", "is_private": false}, {"count": 6, "tags": [], "bug_id": 24106, "attachment_id": null, "is_private": false, "id": 163926, "time": "2012-12-06T16:57:44Z", "creator": "costescuandrei@skymail.ro", "creation_time": "2012-12-06T16:57:44Z", "text": "See 48529. I did a patch for this, but it didn't get any attention right away. Don't know how hard it is to merge that to the latest version."}, {"count": 7, "tags": [], "bug_id": 24106, "attachment_id": null, "is_private": false, "id": 163930, "time": "2012-12-06T18:13:48Z", "creator": "jglick@apache.org", "creation_time": "2012-12-06T18:13:48Z", "text": "Duplicate of bug #48529?"}]