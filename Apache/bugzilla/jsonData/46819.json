[{"count": 0, "attachment_id": 23353, "creator": "anthony@whitford.com", "is_private": false, "id": 125416, "time": "2009-03-07T23:30:10Z", "bug_id": 46819, "creation_time": "2009-03-07T23:30:10Z", "tags": [], "text": "Created attachment 23353\nPatch file to replace new with valueOf, and some valueOf with parse\n\nWhile perusing the code, I noticed that java\\org\\apache\\jasper\\runtime\\JspRuntimeLibrary.java code was doing a few things that I think can be improved:\n\n1.  coerce methods were instantiating new objects, only to convert them to primitives.  For example:\n\n    return Boolean.valueOf(s).booleanValue();\n\nThis can be rewritten (and simplified) as:\n\n    return Boolean.parseBoolean(s);\n\nThis pattern was repeated for numerous primitive types.\n\n\n2.  Objects were being instantiated using new instead of calling valueOf.  For example:\n\n    return new Byte((byte) 0);\n\ninstead of:\n\n    return Byte.valueOf((byte) 0);\n\nAccording to the Java API, valueOf should generally be used in preference to the constructor as this method is likely to yield significantly better space and time performance.\n\n3.  toString methods are instantiating a temporary object just to turn it into a string value.  For example:\n\n    return new Integer(i).toString();\n\nThis can be rewritten (and simplified) as:\n\n    return Integer.toString(i);\n\nThis pattern was repeated for numerous primitive types.\n\n\nI took the liberty of creating a patch.  These changes should yield improved performance and reduce the memory footprint."}, {"count": 1, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "id": 143772, "time": "2011-01-28T18:24:55Z", "bug_id": 46819, "creation_time": "2011-01-28T18:24:55Z", "is_private": false, "text": "The patch has been applied to 7.0.x and will be included in 7.0.7 onwards.\n\nThere are no plans to back-ported it to 6.0.x."}]