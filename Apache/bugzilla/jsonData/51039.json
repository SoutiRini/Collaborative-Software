[{"count": 0, "tags": [], "bug_id": 51039, "text": "Hi there !\n\nI think there is an issue in the method formatISO8601Date of the class org.apache.xmlgraphics.xmp.XMPSchemaAdapter\n\nWhen you have a negative GMT indication and when the negative number is less or equal to -10 then there is a problem.\n\nThe piece of code:\n\nif (zoneOffsetHours > 0) { \nsb.append('+');\n} else {\nsb.append('-'); \n} \n\nif (zoneOffsetHours < 10) {\n         sb.append('0'); \n}\n\nIf I have zoneOffsetHours = -10 I will have zoneOffsetHours < 10 true (-10 < 10) so I will have sb concatenated with \u201c-010\u201d and not with \u201c-10\u201d.\n\nThe result is : 2011-04-07T08:12:11-010:00\n\nI think we should have 2011-04-07T08:12:11-10:00 (no zero before the -10).\n\nIt causes a NumberFormatException in my case, if I use FOP. the error is in the parseISO8601Date method of the same class : \n\nThe line that crashes is the following :\n\noffset += Integer.parseInt(timeZonePart.substring(4, 6));\n\nThe result of timeZonePart.substring(4, 6) is :0 and not 00 as it should be.\n\nException in thread \"main\" java.lang.NumberFormatException: For input string: \":0\"\n\tat java.lang.NumberFormatException.forInputString(NumberFormatException.java:48)\n\tat java.lang.Integer.parseInt(Integer.java:449)\n\tat java.lang.Integer.parseInt(Integer.java:499)\n\tat org.apache.xmlgraphics.xmp.XMPSchemaAdapter.parseISO8601Date(XMPSchemaAdapter.java:236)\n\tat org.apache.xmlgraphics.xmp.XMPSchemaAdapter.getDateValue(XMPSchemaAdapter.java:282)\n\tat org.apache.xmlgraphics.xmp.schemas.XMPBasicAdapter.getMetadataDate(XMPBasicAdapter.java:170)\n\tat org.apache.fop.render.intermediate.IFRenderer.createDefaultDocumentMetadata(IFRenderer.java:549)\n\tat org.apache.fop.render.intermediate.IFRenderer.startPageSequence(IFRenderer.java:500)\n\tat org.apache.fop.area.RenderPagesModel.startPageSequence(RenderPagesModel.java:89)\n\tat org.apache.fop.layoutmgr.PageSequenceLayoutManager.activateLayout(PageSequenceLayoutManager.java:98)\n\tat org.apache.fop.area.AreaTreeHandler.endPageSequence(AreaTreeHandler.java:238)\n\tat org.apache.fop.fo.pagination.PageSequence.endOfNode(PageSequence.java:120)\n\tat org.apache.fop.fo.FOTreeBuilder$MainFOHandler.endElement(FOTreeBuilder.java:349)\n\tat org.apache.fop.fo.FOTreeBuilder.endElement(FOTreeBuilder.java:177)\n\tat org.apache.xalan.transformer.TransformerIdentityImpl.endElement(TransformerIdentityImpl.java:1102)\n\tat com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.endElement(AbstractSAXParser.java:601)\n\tat com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanEndElement(XMLDocumentFragmentScannerImpl.java:1782)\n\tat com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.next(XMLDocumentFragmentScannerImpl.java:2938)\n\tat com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next(XMLDocumentScannerImpl.java:648)\n\tat com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.next(XMLNSDocumentScannerImpl.java:140)\n\tat com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:511)\n\tat com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:808)\n\tat com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:737)\n\tat com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:119)\n\tat com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.parse(AbstractSAXParser.java:1205)\n\tat org.apache.xalan.transformer.TransformerIdentityImpl.transform(TransformerIdentityImpl.java:485)\n\tat com.micropol.micronix.engine.tools.pdf.PdfCreator.convertFO2PDF(PdfCreator.java:95)\n\tat com.micropol.micronix.engine.tools.pdf.PdfCreator.main(PdfCreator.java:121)\n\nAs a result, each part of the word that has a GMT -10,-11,-12,-13 (Tonga) cannot use FOP 1.0. It is the case for many Pacific islands (I'm in French Polynesia).\n\nI think that the good test would be :\n\nif (Math.abs(zoneOffsetHours) < 10) {\n         sb.append('0'); \n}", "id": 145624, "time": "2011-04-07T14:18:55Z", "creator": "f.barbera@hotmail.fr", "creation_time": "2011-04-07T14:18:55Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 51039, "text": "Created attachment 26909\nI propose a patch. I tested it in our soft. It seems to be OK.\n\nI just replace :\n\n  if (zoneOffsetHours < 10) {\n                sb.append('0');\n  }\n\nBy\n\n  if (Math.abs(zoneOffsetHours) < 10) {\n                sb.append('0');\n }", "id": 145877, "time": "2011-04-19T22:30:10Z", "creator": "f.barbera@hotmail.fr", "creation_time": "2011-04-19T22:30:10Z", "is_private": false, "attachment_id": 26909}, {"count": 2, "tags": [], "creator": "jeremias@apache.org", "attachment_id": null, "id": 145942, "time": "2011-04-22T05:31:48Z", "bug_id": 51039, "creation_time": "2011-04-22T05:31:48Z", "is_private": false, "text": "Patch applied: http://svn.apache.org/viewvc?rev=1095897&view=rev\nThanks a lot!"}]