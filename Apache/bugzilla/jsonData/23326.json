[{"attachment_id": null, "tags": [], "bug_id": 23326, "text": "I have the following exception while creating a POIFSFileSystem from an \nInputStream. This is my code :\npublic class Test()\n{\nInputStream ip = this.getClass().getClassLoader().getResourceAsStream(path);\nPOIFSFileSystem fileSystem = new POIFSFileSystem(ip);\nHSSFWorkbook = new HSSFWorkbook(fileSystem);\n}\n\n \n\njava.io.IOException: Unable to read entire block; 1 byte read; expected 512 \nbytes\n        at org.apache.poi.poifs.storage.RawDataBlock.<init>\n(RawDataBlock.java:98)\n        at org.apache.poi.poifs.storage.RawDataBlockList.<init>\n(RawDataBlockList.\njava:88)\n        at org.apache.poi.poifs.filesystem.POIFSFileSystem.<init>\n(POIFSFileSystem\n.java:123)", "count": 0, "id": 44440, "time": "2003-09-22T11:26:40Z", "creator": "fjordan@pictet.com", "creation_time": "2003-09-22T11:26:40Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 23326, "text": "The resource (xls file) is inside the jar file of the application. If the files \nin the jar file is compressed the just describe exception is throw. I try to \nkeep the files in the jar file not compressed and no exception are throw. I \nthink the problem come from the compression/decompression. Do you have a \nsolution or it's a bug ?\n\nTanks for your answer", "id": 44441, "time": "2003-09-22T11:34:37Z", "creator": "fjordan@pictet.com", "creation_time": "2003-09-22T11:34:37Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "text": "Well, I imagine that sun's decompression utilities dont play very nicely with\nPOI's input streams. I doubt we will support this. There is a fix in CVS for\nslow input streams (see bug 13478) which you can try by using latest CVS code or\nwaiting for the next release. However, if that doesnt work, i honestly dont\nthink this will be high priority. ", "attachment_id": null, "id": 45141, "creator": "avik@apache.org", "time": "2003-10-06T10:36:01Z", "bug_id": 23326, "creation_time": "2003-10-06T10:36:01Z", "is_private": false}]