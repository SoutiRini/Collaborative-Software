[{"text": "if i have the following:\n<target name='first' depends='second' if='some.condition.property'>\n  <echo> in first </echo>\n</target>\n\n<target name='second'>\n  <echo> in second </echo>\n</target>\n\nant ignores the 'some.condition.property' check for target 'first' and __always__ executes 'second' target and only after that execution it checks condition property and based on it executes or not execute 'first' target.\n\nI believe it is wrong, condition should define if execute 'first' target and all its dependencies or not.", "tags": [], "bug_id": 46780, "attachment_id": null, "count": 0, "id": 125222, "time": "2009-02-27T13:11:35Z", "creator": "alekseyig@hotmail.com", "creation_time": "2009-02-27T13:11:35Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 46780, "attachment_id": null, "text": "You have described the exact desired behavior of target dependencies.  The depended-upon target is executed first, then the condition is checked and the depending target is executed if proper.  This behavior has been intact in Ant for many years--the intended pattern is that you should depend on a target which runs a test to set the property that tells the \"working\" target whether it should execute.  Please correspond on user@ant.apache.org if you have further questions about Ant usage.", "id": 125225, "time": "2009-02-27T21:49:52Z", "creator": "mbenson@apache.org", "creation_time": "2009-02-27T21:49:52Z", "is_private": false}, {"count": 2, "tags": [], "creator": "alekseyig@hotmail.com", "attachment_id": null, "id": 125226, "time": "2009-02-28T17:30:06Z", "bug_id": 46780, "creation_time": "2009-02-28T17:30:06Z", "is_private": false, "text": "Matt,\n\n>>>... this behavior has been intact in Ant for many years...\nyes, I know it, but it does not make it right. \n\nOf cause, I oversimplified the case to make it clear what I am talking about. Let me complicate it a lit bit more so you can see why I still think it is wrong behavior and may be you can give me a solution for my problem.\n\nLets say I have many independent targets: target1, target2, ... targetN, and they all do different but not simple tasks. Lets say I what to have combination of them depending on some conditions, so I have the following:\n\n<target name='first' depends='target1, target3, target4' if='some.condition1'>\n  <echo> in first </echo>\n</target>\n\n<target name='second' depends='target1, target3, target5' if='some.condition2'>\n  <echo> in second </echo>\n</target>\n\n<target name='third' depends='target3, target5' if='some.condition.3'>\n  <echo> in third </echo>\n</target>\n...\n\nDo you see what I mean?\nIn such case, what would be the right approach to have different sets of targets called in different conditions? <antcall> is what I have, __but__ I do not want to use it, because it is evil. It does not keep  track of dependencies (you can create indefinite loop of targets using it :( )\n\nThank you."}, {"count": 3, "tags": [], "bug_id": 46780, "attachment_id": null, "id": 125227, "time": "2009-02-28T18:50:21Z", "creator": "mbenson@apache.org", "creation_time": "2009-02-28T18:50:21Z", "is_private": false, "text": "I think we need still more information and the userlist is the proper place for this discussion."}, {"count": 4, "tags": [], "bug_id": 46780, "attachment_id": null, "id": 125327, "time": "2009-03-04T20:07:16Z", "creator": "bodewig@apache.org", "creation_time": "2009-03-04T20:07:16Z", "is_private": false, "text": "Well, \"this behavior has been intact in Ant for many years\" *does* make it right since it is the behavior that many many build files rely on.\n\nsomething like\n\n<target name=\"check-property\">\n  <condition that may set property X .../>\n</target>\n\n<target name=\"do-something-if-X\" if=\"X\" depends=\"check-property\">\n  ...\n</target>\n\n<target name=\"do-something-unless-X\" unless=\"X\" depends=\"check-property\">\n  ...\n</target>\n\n<target name=\"do-something\" depends=\"do-something-if-X,do-something-unless-X\"/>\n\nis a very common pattern which would be broken if we changed the behavior.\n\nI know that other tools have taken a different approach (NAnt is one such example, they use if/unless exactly the way you'd prefer it to work), but Ant's behavior is known, documented and has been a conscious choice.\n\nhttp://ant.apache.org/faq.html#stop-dependency"}]