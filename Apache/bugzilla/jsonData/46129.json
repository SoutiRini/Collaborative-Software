[{"count": 0, "tags": [], "creator": "gertjan.donkers@ubs.com", "attachment_id": null, "text": "Thread name is not logged correctly when using async appenders. The name of the thread that runs the async appender is logged, not the name of the thread that did the logging.\n\nThis is because the threadname in the LoggingEvent is never captured upon creation. The constructor that takes the threadname is never used. By the time the threadname is retrieved from the logginfg event it calls the thread.currentThread().getName() which gets the name of the async appender thread.", "id": 122019, "time": "2008-10-30T00:49:30Z", "bug_id": 46129, "creation_time": "2008-10-30T00:49:30Z", "is_private": false}, {"count": 1, "tags": [], "creator": "carnold@apache.org", "attachment_id": null, "text": "Could you confirm this is happening in log4j 1.2.15 or the SVN HEAD?\n\nThere is a call to LoggingEvent.getThreadName() in AsyncAppender.append() which should have the affect of capturing the name of the thread of the thread that called Logger.info() et al.  Can you see something broken in that code path, or is there some other code path that can result in the thread name not being captured?", "id": 122030, "time": "2008-10-30T09:04:30Z", "bug_id": 46129, "creation_time": "2008-10-30T09:04:30Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 46129, "text": "OK, you are right that the problem does not manifest itself in the standard log4j AsyncAppender. We were using our own asyncappender because we use the log4j.properties format for configuration (which does not allow for log4j AsyncAppender to be used to my knowledge).\n\nI still think the thread name should be captured when constructing the LoggingEvent though. The way the asyncappender gets around it now is a bit dodgy, calling a getter to set state and all that.", "id": 122047, "time": "2008-10-30T18:30:58Z", "creator": "gertjan.donkers@ubs.com", "creation_time": "2008-10-30T18:30:58Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 46129, "text": "There was a recent patch to PropertyConfigurator that does allow configuring nested objects (bug 36384), but I haven't tested it with AsyncAppender.  If not, there is a patch to be reviewed to support filters in PropertyConfigurator (bug 46049) that might help.\n\nI agree that the current design is dodgy.  It is not replicated in the skeletal log4j 2 design and it has been in place forever in the log4j 1.2 design, so I'd be hesitant to change it this late in the log4j 1.2.x timeline.\n\n", "id": 122056, "time": "2008-10-30T20:45:22Z", "creator": "carnold@apache.org", "creation_time": "2008-10-30T20:45:22Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 46129, "text": "Marking as WONTIFX.  Bug does not exist with stock AsyncAppender.", "id": 123880, "time": "2009-01-08T10:16:46Z", "creator": "carnold@apache.org", "creation_time": "2009-01-08T10:16:46Z", "is_private": false, "attachment_id": null}]