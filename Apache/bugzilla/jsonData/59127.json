[{"count": 0, "tags": [], "creator": "dtn-asfbugs@corefiling.co.uk", "attachment_id": null, "id": 189154, "time": "2016-03-05T20:33:12Z", "bug_id": 59127, "creation_time": "2016-03-05T20:33:12Z", "is_private": false, "text": "The default font is important because the cell sizes are derived from it.\n\nPOI adds a default font because Excel requires there to be one; we used to swap it for our own like this:\n\nworkbook,getStylseSource().getFonts().clear()\n// create a font as normal, it becomes the default by virtue of being first\n\nUnfortunately that no longer works as Javen (quite reasonably) made the returned list an unmodifiable one in r1721857.\n\nSo I propose we add some proper API to replace the default font, e.g. add to StylesTable:\n\nvoid replaceDefaultFont(XSSFFont font)"}, {"count": 1, "tags": [], "bug_id": 59127, "text": "Would\nXSSFFont defaultFont = StylesTable.getFonts().get(0);\n// mutate defaultFont as needed\nwork?\n\nStylesTable.getDefaultFont() would be convenient here, returning a reference to the current default font in the styles table\n\nreplaceDefaultFont(XSSFFont font) would be tricky because XSSFFonts have an immutable index (into the font table?). All the mutable fields could be copied from the passed-in font to the default font.", "id": 189248, "time": "2016-03-08T05:45:39Z", "creator": "onealj@apache.org", "creation_time": "2016-03-08T05:45:39Z", "is_private": false, "attachment_id": null}, {"count": 2, "text": "Thanks Javen. That approach works for us, so no POI change necessary after all.", "creator": "dtn-asfbugs@corefiling.co.uk", "attachment_id": null, "id": 192006, "time": "2016-06-28T17:16:39Z", "bug_id": 59127, "creation_time": "2016-06-28T17:16:39Z", "tags": [], "is_private": false}]