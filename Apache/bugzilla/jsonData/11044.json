[{"count": 0, "tags": [], "bug_id": 11044, "attachment_id": null, "text": "FTP chmod from Windows to UNIX-style environment does not work. Verbose output \nshows ant attempting to chmod remote files using Windows style separator (\"\\\") \ninstead of the UNIX-style (\"/\") separator. I noticed a potential problem in the \noptional task FTP.java file, which I will cover at the bottom of this message. \nHere is stripped down ant script which I use to duplicate the problem. Note \nthat you must be executing from Windows to the target environment requiring \"/\" \nseparators.\n\nEXAMPLE SCRIPT:\n<target name=\"chmod\">\n    <ftp action=\"chmod\"\n        server=\"${remote.server}\"\n        remotedir=\"${target.dir}\"\n        userid=\"${remote.username}\"\n        password=\"${remote.password}\"\n        separator=\"/\"\n        chmod=\"775\"\n    >\n        <fileset>\n            <include name=\"**/*\"/>\n        </fileset>\n    </ftp>\n</target>\n\nLooking in FTP.java source, I noticed recursive FTP.FTPDirectoryScanner.scandir\n() method implements hard-coded \"File.separator\" as the path separator, where I \nwould have expected the FTP attribute \"remoteFileSep\" to be used instead. \nObviously, since I am executing the script on Windows, the File.separator will \nbe Windows style, but we are doing our directory scan targeted for the remote \nplatform. As an interim solution I replaced the \"File.separator\" occurances \nw/ \"remoteFileSep\" and it works. \n\nA possibly separate, but related bug: the following ftp \"put/send\" script does \nnot work for same reason; that is, verbose output shows windows separators for \nchmod on remote machine. The interim fix above did not fix this.\n\nEXAMPLE SCRIPT:\n<target>\n    <ftp server=\"${remote.server}\"\n        remotedir=\"${target.dir}\"\n        userid=\"${remote.username}\"\n        password=\"${remote.password}\"\n        binary=\"no\"\n        action=\"put\"\n        chmod=\"775\"\n        verbose=\"yes\"\n        depends=\"no\"\n        ignoreNoncriticalErrors=\"true\"\n    >\n        <fileset dir=\"${deploy.dir}\">\n            <!-- xfer these files in ascii -->\n            <include name=\"**/application.webapp\"/>\n            <include name=\"**/version.txt\"/>\n            <include name=\"**/gass.properties\"/>\n            <include name=\"**/user.profiles\"/>\n        </fileset>\n    </ftp>\n</target>", "id": 19989, "time": "2002-07-22T15:32:25Z", "creator": "cmcfarland@onebox.com", "creation_time": "2002-07-22T15:32:25Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 11044, "attachment_id": null, "text": "*** Bug 10994 has been marked as a duplicate of this bug. ***", "id": 21132, "time": "2002-08-15T22:14:25Z", "creator": "sbailliez@apache.org", "creation_time": "2002-08-15T22:14:25Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 11044, "attachment_id": null, "id": 29016, "time": "2003-01-08T15:29:13Z", "creator": "cmcfarland@onebox.com", "creation_time": "2003-01-08T15:29:13Z", "is_private": false, "text": "FYI, these are the changes (hack) I made to FTPDirectoryScanner.scandir() \nmethod that fixed the chmod action:\n\n        protected void scandir(String dir, String vpath, boolean fast) {\n            try {\n                if (!ftp.changeWorkingDirectory(dir)) {\n                    return;\n                }\n\n                FTPFile[] newfiles = ftp.listFiles();\n\n                if (newfiles == null) {\n                    ftp.changeToParentDirectory();\n                    return;\n                }\n\n                for (int i = 0; i < newfiles.length; i++) {\n                    FTPFile file = newfiles[i];\n\n                    if (!file.getName().equals(\".\")\n                         && !file.getName().equals(\"..\")) {\n                        if (file.isDirectory()) {\n                            String name = vpath + file.getName();\n                            if (isIncluded(name)) {\n                                if (!isExcluded(name)) {\n                                    dirsIncluded.addElement(name);\n                                    if (fast) {\n                                        scandir(file.getName(), \n                                                name + remoteFileSep, \nfast);//chris:chg'd File.separator\n                                    }\n                                } else {\n                                    dirsExcluded.addElement(name);\n                                    if (fast && couldHoldIncluded(name)) {\n                                        scandir(file.getName(), \n                                                name + remoteFileSep, \nfast);//chris:chg'd File.separator\n                                    }\n                                }\n                            } else {\n                                dirsNotIncluded.addElement(name);\n                                if (fast && couldHoldIncluded(name)) {\n                                    scandir(file.getName(), \n                                            name + remoteFileSep, \nfast);//chris:chg'd File.separator\n                                }\n                            }\n                            if (!fast) {\n                                scandir(file.getName(), \n                                        name + remoteFileSep, \nfast);//chris:chg'd File.separator\n                            }\n                        } else {\n                            if (file.isFile()) {\n                                String name = vpath + file.getName();\n\n                                if (isIncluded(name)) {\n                                    if (!isExcluded(name)) {\n                                        filesIncluded.addElement(name);\n                                    } else {\n                                        filesExcluded.addElement(name);\n                                    }\n                                } else {\n                                    filesNotIncluded.addElement(name);\n                                }\n                            }\n                        }\n                    }\n                }\n                ftp.changeToParentDirectory();\n            } catch (IOException e) {\n                throw new BuildException(\"Error while communicating with FTP \"\n                     + \"server: \", e);\n            }\n        }\n    }\n"}, {"count": 3, "tags": [], "bug_id": 11044, "attachment_id": null, "text": "Another problem about separators within class FTP:\n\nUsing a Windows client and a Solaris 8 FTP server,\nftp.changeWorkingDirectory(parent) will fail at line 632\nwithin method \n\nprotected void createParents(FTPClient ftp, String filename)\n\nbecause the local file separator has not been replaced.\n\nFix:\n\"parent = resolveFile(parent);\" has to be added at line 632.\n\n            if (parent != null) {\n+               parent = resolveFile(parent);\n                if (!ftp.changeWorkingDirectory(parent)) {", "id": 34300, "time": "2003-04-02T08:16:08Z", "creator": "aloew@t-online.de", "creation_time": "2003-04-02T08:16:08Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 11044, "attachment_id": null, "text": "Andreas, your report is a duplicate of bug 17735 and is fixed in Ant 1.5.3beta1.", "id": 34343, "time": "2003-04-02T15:01:24Z", "creator": "bodewig@apache.org", "creation_time": "2003-04-02T15:01:24Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 11044, "attachment_id": null, "text": "*** Bug 21865 has been marked as a duplicate of this bug. ***", "id": 41563, "time": "2003-07-26T17:19:09Z", "creator": "antoine@apache.org", "creation_time": "2003-07-26T17:19:09Z", "is_private": false}, {"count": 6, "tags": [], "creator": "antoine@apache.org", "attachment_id": null, "id": 41564, "time": "2003-07-26T17:20:04Z", "bug_id": 11044, "creation_time": "2003-07-26T17:20:04Z", "is_private": false, "text": "fixed in CVS, the fix will be available in the next nightly build."}]