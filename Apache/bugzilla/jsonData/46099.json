[{"count": 0, "tags": [], "bug_id": 46099, "attachment_id": null, "is_private": false, "id": 121912, "time": "2008-10-27T08:32:35Z", "creator": "dsmirnov@topsbi.ru", "creation_time": "2008-10-27T08:32:35Z", "text": "hello!\n I can't call method setCellFormula() with argument\n  ADDRESS(1;1)  I means  setCellFormula(\"ADDRESS(1;1)\");\nthis is method rise an exception (see below )\n\nIn previous version of POI this exception  was absent.\n\nP.S. if i write setCellFormula(\"ADDRESS(1,1)\"); then no exception and in excell formula =ADDRESS(1;1)\n\n\n\nException in thread \"main\" org.apache.poi.ss.formula.FormulaParser$FormulaParseException: Parse error near char 9 ';' in specified formula 'ADDRESS(1;1)'. Expected ',' or ')'\n\tat org.apache.poi.ss.formula.FormulaParser.expected(FormulaParser.java:203)\n\tat org.apache.poi.ss.formula.FormulaParser.Arguments(FormulaParser.java:608)\n\tat org.apache.poi.ss.formula.FormulaParser.function(FormulaParser.java:506)\n\tat org.apache.poi.ss.formula.FormulaParser.parseFunctionReferenceOrName(FormulaParser.java:302)\n\tat org.apache.poi.ss.formula.FormulaParser.parseSimpleFactor(FormulaParser.java:671)\n\tat org.apache.poi.ss.formula.FormulaParser.percentFactor(FormulaParser.java:631)\n\tat org.apache.poi.ss.formula.FormulaParser.powerFactor(FormulaParser.java:618)\n\tat org.apache.poi.ss.formula.FormulaParser.Term(FormulaParser.java:920)\n\tat org.apache.poi.ss.formula.FormulaParser.additiveExpression(FormulaParser.java:1001)\n\tat org.apache.poi.ss.formula.FormulaParser.concatExpression(FormulaParser.java:985)\n\tat org.apache.poi.ss.formula.FormulaParser.comparisonExpression(FormulaParser.java:942)\n\tat org.apache.poi.ss.formula.FormulaParser.parse(FormulaParser.java:1043)\n\tat org.apache.poi.ss.formula.FormulaParser.parse(FormulaParser.java:170)\n\tat org.apache.poi.ss.formula.FormulaParser.parse(FormulaParser.java:165)\n\tat org.apache.poi.hssf.model.HSSFFormulaParser.parse(HSSFFormulaParser.java:47)\n\tat org.apache.poi.hssf.usermodel.HSSFCell.setCellFormula(HSSFCell.java:593)\n\tat Test2.main(Test2.java:32)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:585)\n\tat com.intellij.rt.execution.application.AppMain.main(AppMain.java:90)\n\n\nexample code:\n\n\nimport java.io.File;\nimport java.io.FileOutputStream;\n\nimport org.apache.poi.hssf.usermodel.HSSFCell;\nimport org.apache.poi.hssf.usermodel.HSSFRow;\nimport org.apache.poi.hssf.usermodel.HSSFSheet;\nimport org.apache.poi.hssf.usermodel.HSSFWorkbook;\n\npublic class Test {\n    public static void main(String[] args) throws Exception {\n        HSSFWorkbook wb = new HSSFWorkbook();\n        HSSFSheet sheet = wb.createSheet(\"test\");\n        HSSFRow row1 = sheet.createRow(0);\n        HSSFCell cell_11 = row1.createCell(0);\n        cell_11.setCellValue(100);\n        HSSFCell cell_12 = row1.createCell(1);\n        cell_12.setCellValue(100);\n        HSSFRow row2 = sheet.createRow(1);\n        HSSFCell cell_21 = row2.createCell(0);\n        cell_21.setCellFormula(\"ADDRESS(1;1)\");\n\n        final FileOutputStream out = new FileOutputStream(new File(\"C:\\\\test.xls\"));\n        try {\n            wb.write(out);\n        } finally {\n            out.close();\n        }\n\n    }\n}"}, {"count": 1, "tags": [], "creator": "apache@gagravarr.org", "text": "You need to use commas in formulas for this sort of thing \n\n(Some versions of excel do allow other characters, but it's always translated into a comma internally)", "id": 121914, "time": "2008-10-27T09:45:28Z", "bug_id": 46099, "creation_time": "2008-10-27T09:45:28Z", "is_private": false, "attachment_id": null}]