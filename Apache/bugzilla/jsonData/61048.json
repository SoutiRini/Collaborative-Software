[{"count": 0, "tags": [], "text": "Created attachment 34957\nXSSF - newline rendered correctly\n\nUsing the guide here:\n\nhttp://poi.apache.org/spreadsheet/quick-guide.html#NewLinesInCells\n\nI was able to produce a cell with an embedded newline in an XSSF. It looks correct in Excel for Mac.\n\nUsing the same code but swapping out XSSF for SXSSF, the newline is rendered as a regular space (in Excel for Mac, at least).\n\nSXSSF serializes the newline as \"&#xa;\" in the worksheet XML. I found by manually changing this to \"&#xd;\" or \"&#13;\" (hex/decimal encodings of carriage return), and rezipping the xlsx, the newline was correctly rendered.\n\nSample code:\n\npublic class NewlineTest {\n    @Test\n    public void doitStreaming() throws Exception {\n        Workbook workbook = new SXSSFWorkbook();\n        //Workbook workbook = new XSSFWorkbook();\n\n        CellStyle commentStyle = workbook.createCellStyle();\n        commentStyle.setVerticalAlignment(VerticalAlignment.TOP);\n        commentStyle.setWrapText(true);\n\n        Sheet sheet = workbook.createSheet(\"blah\");\n\n        Row row = sheet.createRow(0);\n        Cell cell = row.createCell(0);\n        cell.setCellStyle(commentStyle);\n        cell.setCellValue(\"one two three four\\nnewline six seven eight\");\n\n        workbook.write(new FileOutputStream(\"/tmp/sxssf.xlsx\"));\n\n        workbook.dispose();\n    }\n}\n\nI'm attaching the output from XSSF (xssf.xlsx), SXSSF (sxssf.xlsx), and the manually adjusted file (sxssf_with_cr.xlsx).", "is_private": false, "id": 198563, "creator": "michael@hurts.ca", "time": "2017-04-27T02:49:40Z", "bug_id": 61048, "creation_time": "2017-04-27T02:49:40Z", "attachment_id": 34957}, {"count": 1, "tags": [], "bug_id": 61048, "attachment_id": 34958, "id": 198564, "time": "2017-04-27T02:50:04Z", "creator": "michael@hurts.ca", "creation_time": "2017-04-27T02:50:04Z", "is_private": false, "text": "Created attachment 34958\nSXSSF - newline not rendered"}, {"count": 2, "tags": [], "bug_id": 61048, "text": "Created attachment 34959\nSXSSF - &#xa; changed to &#xd; - newline renders correctly", "id": 198565, "time": "2017-04-27T02:50:35Z", "creator": "michael@hurts.ca", "creation_time": "2017-04-27T02:50:35Z", "is_private": false, "attachment_id": 34959}, {"count": 3, "tags": [], "bug_id": 61048, "text": "On Linux using LibreOffce \"XSSF - newline rendered correctly\" and \" SXSSF - newline not rendered\" are shown correctly, and \" SXSSF - &#xa; changed to &#xd; - newline renders correctly\" is shown without newline. So here the situation is the other way round, the ones created by POI are both shown correctly, the one with Mac Newlines not.\n\nSo it seems there is some platform-dependence introduced.\n\nAs you add \"\\n\" in your sample-code, what happens if you use \"\\r\" or \"\\n\\r\"? I expect that both ways would show correctly on Mac, the second maybe also on Windows and Linux. This would indicate that you can control this in the string that you set.", "id": 199252, "time": "2017-06-16T20:10:05Z", "creator": "dominik.stadler@gmx.at", "creation_time": "2017-06-16T20:10:05Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 61048, "attachment_id": null, "id": 200237, "time": "2017-08-08T15:27:35Z", "creator": "aloe_@mail.ru", "creation_time": "2017-08-08T15:27:35Z", "is_private": false, "text": "I'm experiencing the same issue.\n\nI can confirm that \\r or \\n\\r does not help.\n\nin XSSF \\n is encoded as &#xa; - this is ignored on Mac \nin HSSF \\n is presented as binary '0A' - this works as new line on Mac\n\nif you open xls document generated by HSSF and save it as xlsx then you get '0D0A' combination for line brakes that works on Mac.\n\nBut if I put \\r\\n in original string, then in XSSF I get '&#xa;&#xa;' (why both \\r and \\n are converted to the same &#xa;?) which again ignored by Mac.\n\n-----------------\n\nBTW Can you suggest any workaround for now?"}, {"count": 5, "tags": [], "bug_id": 61048, "attachment_id": null, "id": 200256, "time": "2017-08-09T16:33:13Z", "creator": "aloe_@mail.ru", "creation_time": "2017-08-09T16:33:13Z", "is_private": false, "text": "Here is the cause:\n\norg.apache.poi.xssf.streaming.SheetDataWriter#outputQuotedString\n\ncase '\\n':\ncase '\\r':\n  if (counter > last) {\n     _out.write(chars, last, counter - last);\n  }\n  _out.write(\"&#xa;\");\n  last = counter + 1;\n  break;\n\n\nThere should be _out.write(\"&#xd;\") for '\\r'\nand _out.write(\"&#xa;\") for '\\n'"}, {"count": 6, "attachment_id": null, "bug_id": 61048, "is_private": false, "id": 200257, "time": "2017-08-09T18:38:34Z", "creator": "fanningpj@yahoo.com", "creation_time": "2017-08-09T18:38:34Z", "tags": [], "text": "Added a fix using https://svn.apache.org/viewvc?view=revision&revision=1804596"}]