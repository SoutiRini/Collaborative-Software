[{"count": 0, "tags": [], "bug_id": 46109, "attachment_id": 22784, "id": 121950, "time": "2008-10-28T05:36:21Z", "creator": "mashmk02@gmail.com", "creation_time": "2008-10-28T05:36:21Z", "is_private": false, "text": "Created attachment 22784\npatch to decay_load\n\nThe reply_timeout counter is not cleared by 0 when the worker becomes force\nrecovery state.\n\nIn addition, the counter doesn't decay because the following codes are not executed when Busyness is specified to method directive.\nTherefore, it is easy to become an error state.\n-----jk_lb_worker.c\n600:    if (p->lbmethod != JK_LB_METHOD_BUSYNESS) {\n601:        for (i = 0; i < p->num_of_workers; i++) {\n602:            lb_sub_worker_t *w = &p->lb_workers[i];\n603:            ajp_worker_t *aw = (ajp_worker_t *)w->worker->worker_private;\n604:            w->s->lb_value >>= exponent;\n605:            if (w->s->lb_value > curmax) {\n606:                curmax = w->s->lb_value;\n607:            }\n608:            aw->s->reply_timeouts >>= exponent;\n609:        }\n610:    }\n---\n\nI think that to decay the counter is nice idea for Busyness method as well as in the case of other methods. \nHow about as follows?\n\nIndex: mod_jk-head/native/common/jk_lb_worker.c\n===================================================================\n--- mod_jk-head/native/common/jk_lb_worker.c\t(revision 708408)\n+++ mod_jk-head/native/common/jk_lb_worker.c\t(working copy)\n@@ -597,16 +597,16 @@\n     jk_uint64_t curmax = 0;\n \n     JK_TRACE_ENTER(l);\n-    if (p->lbmethod != JK_LB_METHOD_BUSYNESS) {\n-        for (i = 0; i < p->num_of_workers; i++) {\n-            lb_sub_worker_t *w = &p->lb_workers[i];\n-            ajp_worker_t *aw = (ajp_worker_t *)w->worker->worker_private;\n+    for (i = 0; i < p->num_of_workers; i++) {\n+        lb_sub_worker_t *w = &p->lb_workers[i];\n+        ajp_worker_t *aw = (ajp_worker_t *)w->worker->worker_private;\n+        if (p->lbmethod != JK_LB_METHOD_BUSYNESS) {\n             w->s->lb_value >>= exponent;\n             if (w->s->lb_value > curmax) {\n                 curmax = w->s->lb_value;\n             }\n-            aw->s->reply_timeouts >>= exponent;\n         }\n+        aw->s->reply_timeouts >>= exponent;\n     }\n     JK_TRACE_EXIT(l);\n\nregards."}, {"count": 1, "tags": [], "bug_id": 46109, "attachment_id": null, "id": 121973, "time": "2008-10-28T12:27:32Z", "creator": "rainer.jung@kippdata.de", "creation_time": "2008-10-28T12:27:32Z", "is_private": false, "text": "Fixed in revision 708643.\nI also included a fix for the forced recovery case.\nUnfortunately this bug is not only in 1.2.27-dev, it was already part of 1.2.26\nThanks as always."}]