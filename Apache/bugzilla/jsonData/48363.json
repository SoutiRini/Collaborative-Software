[{"count": 0, "tags": [], "bug_id": 48363, "attachment_id": null, "text": "Since upgrading a number of boxes from 2.2.6 to 2.2.9, I'm seeing occasional errors like this:\n\n:[Wed Dec 09 16:05:16 2009] [error] (125)Address already in use: proxy: HTTP: attempt to connect to 127.0.0.1:8080 (*) failed\n\nresulting in an HTTP 503 being sent back to the client. I'm using mod_proxy_http and mod_rewrite; for example\n\nRewriteCond %{REQUEST_URI} ^/files/(.*)\nRewriteRule (.*) http://localhost:8080/app/url?param=%{ENV:SCRIPT_URI} [QSA,P]\n\n\nI get on average 5-10 failures per day on a system which processes ~500000 proxy requests/day, fewer on quieter systems. A much busier system with 2.2.6 does not show the problem. \nThe errors appear at apparently random intervals, they don't generally cluster, and don't appear to coincide with particularly high load on the system. Other requests are successfully served at the same time as the errors are returned.\n\nAs far as I can tell there is no issue with the back-end server (a JBoss app server in this case).\n\nI haven't, unfortunately, been able to update a sufficiently busy system to a version later than 2.2.9 to determine whether that fixes the problem", "id": 132709, "time": "2009-12-10T02:24:14Z", "creator": "chrismay50@gmail.com", "creation_time": "2009-12-10T02:24:14Z", "is_private": false}, {"count": 1, "tags": [], "creator": "chrismay50@gmail.com", "attachment_id": null, "id": 132860, "time": "2009-12-16T05:45:12Z", "bug_id": 48363, "creation_time": "2009-12-16T05:45:12Z", "is_private": false, "text": "Having investigated further, I now think this is not an apache bug, but rather a bug with Solaris which I happened to trigger at the same time as migrating to 2.2.9. For the benefit of anyone else who should run into it, here are the details:\n\nSolaris bug 6670527 ( http://sunsolve.sun.com/search/document.do?assetkey=1-1-6670527-1 ) says:\n\nSimultaneous connect() issued from multiple shared stack zones fails with EADDRINUSE\n\n[...]\n\nThis is caused by the fact that the zones have a shared stack. This means that we have a single connection hash\nfor the single stack. If we are using INADDR_LOOPBACK(127.0.0.1) in all address specifications and the server in\nquestion is on a static port, the only unique member of the tuple is the local port. This can be duplicated\nin ephemeral port selection or can be explicitly bound to be the same, hence the failure.\n\nApplying the suggested workaround (proxying to the zone's local IP address rather than 127.0.0.1) appears to fix the problem for me. There is also a kernel patch available."}]