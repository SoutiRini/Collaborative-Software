[{"count": 0, "tags": [], "bug_id": 39329, "attachment_id": null, "id": 88179, "time": "2006-04-17T23:10:20Z", "creator": "mkent@magoazul.com", "creation_time": "2006-04-17T23:10:20Z", "is_private": false, "text": "I'm using mod_dbd with persistant mysql connections and another custom module to\ndo vhost document root lookups against a database. \n\nThe problems is that my mod_dbd connections reach the MySQL daemons wait_timeout\nof 600 seconds and are closed automatically. ap_dbd_acquire fails for these\nresources and returns NULL which leaves me without a db connection to work with.\n\nAttached is a suggested patch to invalidate the bad resources and try to acquire\nanother a good one, which should be a newly opened and valid connection."}, {"count": 1, "tags": [], "bug_id": 39329, "attachment_id": 18116, "id": 88180, "time": "2006-04-17T23:11:34Z", "creator": "mkent@magoazul.com", "creation_time": "2006-04-17T23:11:34Z", "is_private": false, "text": "Created attachment 18116\npatch to retry for a valid connection"}, {"count": 2, "tags": [], "bug_id": 39329, "attachment_id": null, "text": "I'm not sure this is safe: the potential problem is that your while() loop \nnever terminates, if some backend returns SUCCESS on acquire but some other \nstatus on check_conn.  I can't think of a realistic case, but that's not the \npoint. \n \nI think I'd be happy with a variant on the patch that keeps a count and bails \nout explicitly if things get silly.  Anyone else? ", "id": 88185, "time": "2006-04-18T01:34:38Z", "creator": "nick@webthing.com", "creation_time": "2006-04-18T01:34:38Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 39329, "text": "(In reply to comment #2)\n\n>  \n> I think I'd be happy with a variant on the patch that keeps a count and bails \n> out explicitly if things get silly.  Anyone else? \n\nSounds reasonable to me. What about about the maximum number of entries in the\nresource list as upper limit for the counter?\n\n", "id": 88224, "time": "2006-04-18T21:03:45Z", "creator": "rpluem@apache.org", "creation_time": "2006-04-18T21:03:45Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 39329, "text": "DBDKeep is surely a maximum.  The problem in question isn't going to apply to \nservers around peak load. \n \nThe implication of looping would seem to be tearing down and opening lots of \nconnections all at once - could be a Bad Thing.  IMHO A better fix - which \nalas can't be easily retrofitted - would be to return an EAGAIN status and \nleave the application to retry. ", "id": 88232, "time": "2006-04-18T22:05:36Z", "creator": "nick@webthing.com", "creation_time": "2006-04-18T22:05:36Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 39329, "text": "(In reply to comment #4)\n> DBDKeep is surely a maximum.  The problem in question isn't going to apply to \n> servers around peak load. \n>  \n> The implication of looping would seem to be tearing down and opening lots of \n> connections all at once - could be a Bad Thing.  IMHO A better fix - which \n> alas can't be easily retrofitted - would be to return an EAGAIN status and \n> leave the application to retry. \n\nThat would be nice.\n\nJust to give you an idea of how your code is being used; these servers are under\nfairly heavy load but the lookup results are stored in memcached and eventually\nthe db connections begin to idle long enough to get killed off. Then every\nminute or so a bad resource is acquired and nuked, adds a bit of fluff to the\nerror log, but works pretty well overall. \n\nThanks for looking at this so quickly.", "id": 88238, "time": "2006-04-18T22:52:39Z", "creator": "mkent@magoazul.com", "creation_time": "2006-04-18T22:52:39Z", "is_private": false, "attachment_id": null}, {"count": 6, "tags": [], "text": "Just revisiting this, I hacked (In reply to comment #0)  \n> I'm using mod_dbd with persistant mysql connections and another custom  \nmodule to  \n> do vhost document root lookups against a database.   \n>   \n> The problems is that my mod_dbd connections reach the MySQL daemons  \nwait_timeout  \n> of 600 seconds and are closed automatically.  \n  \nCome to think of it, I thought mysql_ping (as used in the check_conn function)  \nwould reopen the connection if it had timed out.  ISTR it doing that for me  \nwhen I tested it.  \n  \nAdding a new patch (untested).  Not decided whether to test and commit it. ", "attachment_id": null, "id": 88887, "creation_time": "2006-05-08T00:06:38Z", "time": "2006-05-08T00:06:38Z", "creator": "nick@webthing.com", "bug_id": 39329, "is_private": false}, {"count": 7, "tags": [], "bug_id": 39329, "attachment_id": 18244, "text": "Created attachment 18244\nPatch to retry a problem connection", "id": 88888, "time": "2006-05-08T00:09:04Z", "creator": "nick@webthing.com", "creation_time": "2006-05-08T00:09:04Z", "is_private": false}, {"count": 8, "tags": [], "bug_id": 39329, "text": "(In reply to comment #6)\n> Just revisiting this, I hacked (In reply to comment #0)  \n> > I'm using mod_dbd with persistant mysql connections and another custom  \n> module to  \n> > do vhost document root lookups against a database.   \n> >   \n> > The problems is that my mod_dbd connections reach the MySQL daemons  \n> wait_timeout  \n> > of 600 seconds and are closed automatically.  \n>   \n> Come to think of it, I thought mysql_ping (as used in the check_conn function)  \n> would reopen the connection if it had timed out.  ISTR it doing that for me  \n> when I tested it.  \n>   \n> Adding a new patch (untested).  Not decided whether to test and commit it. \n\nJust tested the latest patch and it almost works but bumps into an issue I've\nrun into with mysql before: when a connection is closed the first mysql_ping\nwill always fail and the handle needs a second command to actually reopen the\nconnection despite what the manual says\n(http://dev.mysql.com/doc/refman/5.0/en/mysql-ping.html). Made a slight change\nto your patch and its working fine in testing so far.\n\nAlso, as noted in the manual page, as of 5.0.3 MYSQL_OPT_RECONNECT is not on by\ndefault, the driver needs to set it after mysql_init like\n\nmysql_options(&mysql, MYSQL_OPT_RECONNECT, &my_true)", "id": 89263, "time": "2006-05-18T18:16:40Z", "creator": "mkent@magoazul.com", "creation_time": "2006-05-18T18:16:40Z", "is_private": false, "attachment_id": null}, {"count": 9, "tags": [], "bug_id": 39329, "attachment_id": 18318, "id": 89264, "time": "2006-05-18T18:18:36Z", "creator": "mkent@magoazul.com", "creation_time": "2006-05-18T18:18:36Z", "is_private": false, "text": "Created attachment 18318\nnow with two connection checks"}, {"count": 10, "tags": [], "bug_id": 39329, "attachment_id": 18989, "text": "Created attachment 18989\nReprepare Statements after autoreconnect\n\nThis patch adds one line attempting to recreate prepared statements after a\nreconnection. This appears to fix the issue, although more errorchecking may be\nneeeded.\n(Patch is working nicely on 2.2.3).", "id": 94720, "time": "2006-10-11T04:50:19Z", "creator": "apache.ei@kefro.st", "creation_time": "2006-10-11T04:50:19Z", "is_private": false}, {"count": 11, "tags": [], "creator": "mkent@magoazul.com", "text": "Just retested this with mod_dbd from trunk (r553563) and apr-util 1.2.7 +\ncurrent apr_dbd_mysql.c compiled against MySQL 5.0.27 and everything works as\nexpected with no modifications. Reconnection no longer seems to be an issue as\nthe need for 2 mysql_pings seems to have dissapeared, see the last couple replies in\n\nhttp://bugs.mysql.com/bug.php?id=9271\n\nbut I believe for any earlier MySQL versions it will still be required. \n\nNow the bad part is since mysql_ping in MySQL 5.0.27 (5.0.20 and later I think)\ndoesn't return an error anymore, just reconnects transparently, and since\nprepared statements are cleared as per \n\nhttp://www.mysql.org/doc/refman/5.0/en/auto-reconnect.html \n\nI'm not sure how you can detect that a mysql_ping has done a reconnection and\nreinit your prepared statements. I suppose you'd need to track the id of the\nmysql connection and look for a change before and after calling apr_dbd_check_conn.", "id": 105160, "time": "2007-07-06T18:33:07Z", "bug_id": 39329, "creation_time": "2007-07-06T18:33:07Z", "is_private": false, "attachment_id": null}, {"count": 12, "tags": [], "bug_id": 39329, "attachment_id": null, "text": "(In reply to comment #11)\n> Just retested this with mod_dbd from trunk (r553563) and apr-util 1.2.7 +\n> current apr_dbd_mysql.c compiled against MySQL 5.0.27 and everything works as\n> expected with no modifications. Reconnection no longer seems to be an issue \nas\n> the need for 2 mysql_pings seems to have dissapeared, see the last couple \nreplies in\n> http://bugs.mysql.com/bug.php?id=9271\n> but I believe for any earlier MySQL versions it will still be required. \n> Now the bad part is since mysql_ping in MySQL 5.0.27 (5.0.20 and later I \nthink)\n> doesn't return an error anymore, just reconnects transparently, and since\n> prepared statements are cleared as per \n> http://www.mysql.org/doc/refman/5.0/en/auto-reconnect.html \n> I'm not sure how you can detect that a mysql_ping has done a reconnection and\n> reinit your prepared statements. I suppose you'd need to track the id of the\n> mysql connection and look for a change before and after calling \napr_dbd_check_conn.\n\nI tried the patch and found something might be a performance issue. this part \nof the patch :\n\n+        if ((rv == APR_SUCCESS) || (rv == APR_ENOTIMPL)) {\n+            rv = dbd_prepared_init(pool, svr, rec);\n+            break;\n+        }\n\ngets executed even if the first apr_dbd_check_conn returns a success. Is this \non purpose? \n", "id": 107030, "time": "2007-08-22T07:33:50Z", "creator": "daniel@bestningning.com", "creation_time": "2007-08-22T07:33:50Z", "is_private": false}, {"count": 13, "tags": [], "bug_id": 39329, "attachment_id": 20794, "text": "Created attachment 20794\nmod_dbd.c patched to invalidate the reslist of all stale connections\n\nThe mod_dbd.c is taken from the trunk before being patched. It simply recreate\na resource if all the connection resource in a reslist fail check_conn.\nRe-prepare the statement doesnt seem to completely fix the problem as\nmysql_ping doesnt seem to restore the connection handle either. Re-create all\nresource wont be a problem because it only happens once for every idle timeout.\nthis patch requires auto-reconnect to be turned off for mysql. Now it works on\nall my servers.", "id": 108044, "time": "2007-09-11T19:44:18Z", "creator": "daniel@bestningning.com", "creation_time": "2007-09-11T19:44:18Z", "is_private": false}, {"count": 14, "tags": [], "bug_id": 39329, "text": "Please provide a patch instead of the full mod_dbd.c (see also\nhttp://httpd.apache.org/dev/patches.html)", "id": 108092, "time": "2007-09-12T11:48:34Z", "creator": "rpluem@apache.org", "creation_time": "2007-09-12T11:48:34Z", "is_private": false, "attachment_id": null}, {"count": 15, "tags": [], "bug_id": 39329, "attachment_id": null, "text": "I may be mistaking something, but it seems to me this bug should be fixed with the fix for bug 45407. What do you think?", "id": 119560, "time": "2008-08-07T13:25:15Z", "creator": "peter@poeml.de", "creation_time": "2008-08-07T13:25:15Z", "is_private": false}]