[{"attachment_id": null, "tags": [], "bug_id": 40048, "is_private": false, "count": 0, "id": 91319, "time": "2006-07-14T17:42:47Z", "creator": "iistomin@ciklum.net", "creation_time": "2006-07-14T17:42:47Z", "text": "The AWTRenderer.getPageFormat(int) method returns incorrect PageFormat. The\nPageFormat contains incorrect imageable area. According to source code imageable\narea should be (0, 0, page-width, page-height) but result PageFormat contains\nanother values.\n\nAfter analyzing of source code of PageFormat it was determined that\nPageFormat.setPaper(Paper) method clones passed Paper and stores reference to\nnew instance. IMHO, the reason of the bug is that AWTRenderer.getPageFormat(int)\ninvokes PageFormat.setPaper(Paper) method BEFORE applying of imageable area to\nthe Paper and as consequence PageFormat clones Paper with default imageable\narea. That  is, imageable area is applied to another (original, not cloned)\ninstance of Paper.\n\nThe correct code should look like this:\n\npublic java.awt.print.PageFormat getPageFormat(int pageIndex)\nthrows IndexOutOfBoundsException {\n\t        try {\n\t            if (pageIndex >= getNumberOfPages()) {\n\t                return null;\n\t            }\n\t    \n\t            PageFormat pageFormat = new PageFormat();\n\t    \n\t            Paper paper = new Paper();\n\t    \n\t            Rectangle2D dim = getPageViewport(pageIndex).getViewArea();\n\t            double width = dim.getWidth();\n\t            double height = dim.getHeight();\n\t    \n\t            // if the width is greater than the height assume lanscape mode\n\t            // and swap the width and height values in the paper format\n\t            if (width > height) {\n\t                paper.setImageableArea(0, 0, height / 1000d, width / 1000d);\n\t                paper.setSize(height / 1000d, width / 1000d);\n\t                pageFormat.setOrientation(PageFormat.LANDSCAPE);\n\t            } else {\n\t                paper.setImageableArea(0, 0, width / 1000d, height / 1000d);\n\t                paper.setSize(width / 1000d, height / 1000d);\n\t                pageFormat.setOrientation(PageFormat.PORTRAIT);\n\t            }\n\n                    // Set Paper AFTER applying of imageable area.\n\t            pageFormat.setPaper(paper);\n\n\t            return pageFormat;\n\t        } catch (FOPException fopEx) {\n\t            throw new IndexOutOfBoundsException(fopEx.getMessage());\n\t        }\n}"}, {"count": 1, "tags": [], "creator": "jeremias@apache.org", "attachment_id": null, "id": 91524, "time": "2006-07-24T08:49:15Z", "bug_id": 40048, "creation_time": "2006-07-24T08:49:15Z", "is_private": false, "text": "*** Bug 38714 has been marked as a duplicate of this bug. ***"}, {"count": 2, "tags": [], "bug_id": 40048, "attachment_id": null, "text": "Fixed: http://svn.apache.org/viewvc?rev=424966&view=rev\n\nThanks for the hint.", "id": 91525, "time": "2006-07-24T08:50:38Z", "creator": "jeremias@apache.org", "creation_time": "2006-07-24T08:50:38Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 40048, "attachment_id": null, "id": 156315, "time": "2012-04-01T07:09:32Z", "creator": "gadams@apache.org", "creation_time": "2012-04-01T07:09:32Z", "is_private": false, "text": "batch transition pre-FOP1.0 resolved+fixed bugs to closed+fixed"}]