[{"count": 0, "tags": [], "bug_id": 25965, "text": "Write two web applications A and B.  In A, create a Servlet, AController, which \nperforms an include to another Servlet, BController, in B.  BController's \nservice() method contains the following code:\n\nRequestDispatcher dispatcher = httpServletRequest.getRequestDispatcher\n(\"test.jsp\");\ndispatcher.include(httpServletRequest, httpServletResponse);  \n\nwhere test.jsp is a simple jsp in web app B.\n\nPoint the browser to request the BController servlet directly.  In this case, \nthe jsp is properly displayed.  Now, point the browser to AController.  I would \nexpect the jsp to be displayed in the same manner.  However, it fails to \ndisplay without an exception or error from the application server.", "id": 50205, "time": "2004-01-07T18:55:59Z", "creator": "sdgoldst@mailandnews.com", "creation_time": "2004-01-07T18:55:59Z", "is_private": false, "attachment_id": null}, {"count": 1, "attachment_id": null, "bug_id": 25965, "text": "It's too bad you didn't discuss this with anyone on the user or dev lists \nwithout posting, or this would have been explained to you.  Bugzilla is a \nresort to be used after pursuing matters on the mailing lists.\n\nMake sure you understand the RequestDispatcher functionality, especially notes \nlike \"The pathname specified may be relative, although it cannot extend outside \nthe current servlet context\" (from ServletRequest#getRequestDispatcher's \njavadoc).  Without seeing your webapp code, it's impossible to say whether this \nis an issue or not, so I'm dismissing it as invalid for now.\n\nProvide your two web applications as WARs attached to this item, if you choose \nto reopen it after discussing on the mailing lists.", "id": 50206, "time": "2004-01-07T19:09:02Z", "creator": "yoavs@computer.org", "creation_time": "2004-01-07T19:09:02Z", "tags": [], "is_private": false}, {"count": 2, "attachment_id": null, "creator": "sdgoldst@mailandnews.com", "text": "I believe that you misunderstood the bug.  I'm trying to include a jsp file \nwithin the same application.  The basic flow is:\n\nAController (Web App A) --> BController (Web App B) --> test.jsp (Web App A)\n\nThe first include is acheived through the following code:\n\nServletContext bServletContext = getServletContext().getContext(B_CONTEXT_ROOT);\nRequestDispatcher requestDispatcher = bServletContext.getRequestDispatcher\n(B_CONTROLLER_SERVLET_PATH);\nrequestDispatcher.include(httpServletRequest, httpServletResponse);\n\nI'll bring it up on the mailing list, though, as you suggested.  I apologize \nfor not doing this first.", "id": 50207, "time": "2004-01-07T19:28:05Z", "bug_id": 25965, "creation_time": "2004-01-07T19:28:05Z", "tags": [], "is_private": false}, {"count": 3, "tags": [], "bug_id": 25965, "attachment_id": 9970, "text": "Created attachment 9970\nThis is the client web app of the test case.  Browse to index.jsp to invoke the test.", "id": 50627, "time": "2004-01-16T01:22:58Z", "creator": "sdgoldst@mailandnews.com", "creation_time": "2004-01-16T01:22:58Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 25965, "attachment_id": 9971, "text": "Created attachment 9971\nThis is the server web app of the test case.  It's invoked through the client web app (also attached)", "id": 50628, "time": "2004-01-16T01:23:53Z", "creator": "sdgoldst@mailandnews.com", "creation_time": "2004-01-16T01:23:53Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 25965, "attachment_id": null, "text": "I've sent an e-mail regarding this bug to both mailing lists and did not \nrecieve a response.  Therefore, I've attached the test case (two war files) and \nhave reopened the issue.\n\nPlease let me know if you cannot reproduce the problem.", "id": 50629, "time": "2004-01-16T01:26:37Z", "creator": "sdgoldst@mailandnews.com", "creation_time": "2004-01-16T01:26:37Z", "is_private": false}, {"count": 6, "attachment_id": null, "bug_id": 25965, "text": "In your original post and in your provided test cases test.jsp is in \napplication B.\n\nIn application B you obtain an RequestDispatcher from the request (which \noriginated in application A) and hence can't find test.jsp\n\nYour test case is invalid.", "id": 56327, "time": "2004-04-24T16:33:17Z", "creator": "markt@apache.org", "creation_time": "2004-04-24T16:33:17Z", "tags": [], "is_private": false}, {"count": 7, "attachment_id": null, "bug_id": 25965, "text": "This appears to be a Tomcat bug. AController (the servlet in application A)\nobtains a context to application B. If Tomcat does not allow this for security\nreasons, it should return null here (as per the API). If Tomcat returns a\ncontext, then this context should be the application context for application B,\nthe same one that we will deal with if the user directly posted to application\nB. When a request dispatcher is obtained from this new context, we are dealing\nentirely with resources in context B (the fact that the request originated from\napplication A is irrelevent at this point since we are dealing with a new\ncontext). Hence, if test.jsp exists in application B, Tomcat should find it. If\nTomcat instead looks for test.jsp in application A, it is incorrect since Tomcat\nis crossing boundaries (from B to A) that is shouldn't because as I mentioned\nbefore we are working with the application context for application B. ", "id": 69213, "time": "2005-01-04T18:55:23Z", "creator": "galwar@nvisia.com", "creation_time": "2005-01-04T18:55:23Z", "tags": [], "is_private": false}, {"count": 8, "tags": [], "bug_id": 25965, "attachment_id": null, "id": 69218, "time": "2005-01-04T23:27:46Z", "creator": "markt@apache.org", "creation_time": "2005-01-04T23:27:46Z", "is_private": false, "text": "In the original post, and in the provided test case, the request dispatcher is\nobtained from the original context A request. It is not obtained from context B.\n\nYour analysis is wrong. This bug is invalid.\n\nThe sequence of events you are describing is fundamentally different because you\nget the RD from context B, not from the request. If you have a test WAR for your\nsequence of events that you believe deomnstrates invalid behaviour please open a\nnew bug report and attach you WAR.\n\n"}, {"count": 9, "tags": [], "bug_id": 25965, "attachment_id": null, "id": 69246, "time": "2005-01-05T18:47:52Z", "creator": "galwar@nvisia.com", "creation_time": "2005-01-05T18:47:52Z", "is_private": false, "text": "You are incorrect when you say that he is not obtaining the RD from context B.\nHe is. Please check the code carefully. Here is the scenario:\n\nThere are two applications deployed to Tomcat: client.war (application A) and\nserver.war (application B). Application A has a servlet called ClientServlet\nthat is mapped to \"/c\". Application B has a servlet called ServerServlet that is\nmapped to \"/serverservlet\"\n\nHere is the sequence of events:\n1) Browser sends a request to http://localhost:8080/client/c.\n2) Tomcat maps request to A (client.war gets the /client context root) and\ninvokes ClientServlet:service()\n3) In ClientServlet:service(), he is getting the application context for B as\nfollows:\n   ServletContext serverServletContext = \n                         getServletContext().getContext(SERVER_CONTEXT_ROOT);\n   where SERVER_CONTEXT_ROOT is \"/server\" (server.war gets the /server context\nroot). Please look up the API for the getContext() method call on the\nServletContext object. This is how one can do server-side includes of content\nfrom servlets/resources in another application that is deployed on the same server.\n4) He is then obtaining the request dispatcher using B's servlet context not his\nown (A's) servlet context:\n   RequestDispatcher requestDispatcher =\n               serverServletContext.getRequestDispatcher(SERVER_SERVLET_PATH);\n   where SERVER_SERVLET_PATH is \"/serverservlet\", the path mapped to B's\nservlet. I think this is the point you are not following. He is not doing\ngetServletContext().getRequestDispatcher(SERVER_SERVLET_PATH) which would be\nusing A's servlet context. \n5) He finally does an include of B's servlet by calling:\n   requestDispatcher.include(httpServletRequest, httpServletResponse);\n   \n   Now although the request first arrived in A, it is not A's request\nexclusively. A request represents a user request to the server and can be\nforwarded to another application or you can include servlets/resources from\nanother application. The server of course can prohibit this due to security\nconstraints. In Tomcat one can override the security restrictions by setting\n\"crossContext\" to \"true\" in the <Context> element for application A in\nserver.xml to allow servlets in A to obtain servlet contexts to other\napplications (such as B). \n\n   With \"crossContext\" set to \"true\" for the client application (A), Tomcat\nreturns a servlet context to B in Step 3. It also returns a request dispatcher\nto B's servlet in Step 4. The include call also works in Step 5 and B's servlet\nis called correctly. However, when B's servlet gets a request dispatcher to\n\"/test.jsp\" and does an include of it, Tomcat is looking for \"/test.jsp\" in\napplication A! THIS IS A BUG! One can verify this by creating a test.jsp file in\nthe root of the WAR in application A and see that it is being called instead. \n   \n   Please do not rush and close this as \"invalid\". This is definitely a bug.\nPlease talk to other Tomcat developers if you must and work towards resolving this. \n   \n"}, {"count": 10, "tags": [], "bug_id": 25965, "attachment_id": null, "id": 69247, "time": "2005-01-05T21:56:49Z", "creator": "markt@apache.org", "creation_time": "2005-01-05T21:56:49Z", "is_private": false, "text": "There are two request dispatchers in this test case. The first is obtained as\nyou describe (and works correctly) but this is not the dispatcher used to\ninclude test.jsp.\n\nA second request dispatcher is created in the service() method of the\nServerServlet in server.war/context B. The code for this method is:\n\npublic void service(HttpServletRequest httpServletRequest,\n                    HttpServletResponse httpServletResponse)\n                    throws ServletException, IOException\n    {\n        httpServletResponse.setContentType(\"text/html\");\n\t\t\n        RequestDispatcher dispatcher =\n                httpServletRequest.getRequestDispatcher(TEST_JSP);\n        dispatcher.include(httpServletRequest, httpServletResponse);\n    }\n\nThe request dispatcher is obtained from the request. Because this is an include,\nthe request is the original request that is associated the client/context A.\nHence this request dispatcher cannot find test.jsp which is in context B.\n\nI would also point out that when originally investigating this bug I downloaded\nthe test case and stepped through it line by line in a debugger to check exactly\nwhat was going on before closing it as invalid."}, {"count": 11, "tags": [], "bug_id": 25965, "attachment_id": null, "id": 69248, "time": "2005-01-05T22:14:19Z", "creator": "william.barker@wilshire.com", "creation_time": "2005-01-05T22:14:19Z", "is_private": false, "text": "It seems that the relevant part of the spec is:\n<spec-quote version=\"2.3\" section=\"14.2.16.1\">\nThe pathname specified may be relative, although it cannot extend outside the\ncurrent servlet context. If the path begins with a \"/\" it is interpreted as \nrelative\nto the current context root. This method returns null if the servlet container\ncannot return a RequestDispatcher.\n</spec-quote>\n\nSo it seems to hinge on what the \"current context\" is in this case."}, {"count": 12, "tags": [], "bug_id": 25965, "attachment_id": null, "id": 69255, "time": "2005-01-06T00:50:35Z", "creator": "galwar@nvisia.com", "creation_time": "2005-01-06T00:50:35Z", "is_private": false, "text": "Let me approach this from a different angle to impress upon you that this is a\nbug. What is the point of invoking a servlet in another application if one is\nexpected to provide all the resources (JSPs etc.) that is going to be included\nby that servlet? Think about this for a second. It is very likely that someone\nelse wrote application B and its purpose is entirely different from application\nA. The folks that wrote application B packaged their application with JSPs/HTML\nfiles etc. that are included/forwarded to by their servlet. If I write\napplication A and want to invoke a servlet in application B, am I expected to\nknow what are all the resources included/forwarded by the servlet in application\nB and in addition provide them in my application??? That is what you are\neffectively saying and it makes no sense. This is a bug in Tomcat. \n\nThanks to William for pointing out the spec. If the request is currently being\nprocessed by the servlet in application B, then the current servlet context is\nclearly B and not A. At the risk of repetition, it doesn't matter that the\nrequest came to application A first. Application A passed along the request to a\nservlet in application B after obtaining the servlet context for B and hence we\nare in B's context now. The resources should then be looked up in application B\nnot application A. \n\nPlease stop dismissing this as invalid as this is a bug (it is quite irritating\nto reopen it again and again). I ran this example in another server (Weblogic\n8.1) and it worked flawlessly (the resource was looked up in application B and\nnot application A). At the very least, leave it as REOPENED so that other folks\ncan provide their input. "}, {"count": 13, "tags": [], "bug_id": 25965, "text": "Please do not bother reopening the report, unless you have more time to waste.\nIf you're only doing includes, the top level path will always be used. With\nforwards, it's the opposite.", "id": 69256, "time": "2005-01-06T01:00:02Z", "creator": "remm@apache.org", "creation_time": "2005-01-06T01:00:02Z", "is_private": false, "attachment_id": null}, {"count": 14, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "text": "The following quotes are from section SRV.14.2.5.1 (RequestDispatcher methods)\nof the spec.\n\n<spec-quote>\npublic void forward(ServletRequest request, ServletResponse response)\n            throws ServletException, IOException\n\nForwards a request from a servlet to another resource (servlet, JSP file, or\nHTML file) on the server. This method allows one servlet to do preliminary\nprocessing of a request and another resource to generate the response.\n\nFor a RequestDispatcher obtained via getRequestDispatcher(), the\nServletRequest object has its path elements and parameters adjusted to\nmatch the path of the target resource.\n...\nThe request and response parameters must be either the same objects as were\npassed to the calling servlet\u2019s service method or be subclasses of the\nServletRequestWrapper or ServletResponseWrapper classes that wrap them.\n</spec-quote>\n\n<spec-quote>\npublic void include(ServletRequest request, ServletResponse response)\n            throws ServletException, IOException\n\nIncludes the content of a resource (servlet, JSP page, HTML file) in the\nresponse. In essence, this method enables programmatic server-side includes.\n\nThe ServletResponse object has its path elements and parameters remain\nunchanged from the caller\u2019s. The included servlet cannot change the response\nstatus code or set headers; any attempt to make a change is ignored.\n\nThe request and response parameters must be either the same objects as were\npassed to the calling servlet\u2019s service method or be subclasses of the\nServletRequestWrapper or ServletResponseWrapper classes that wrap\nthem.\n</spec-quote>\n\nTo address the question raised by Bill above, ie what is the \"current servlet\ncontext\" consider the case of a relative path.\n\nRelative paths are, by definition, relative to the current request. The current\nrequest (since we are doing includes not forwards) is still the original request\n(to context A). Hence the path is relative to the original request. Since it is\nrelative to the original request the path must be within the original servlet\ncontext. Therefore, the \"current servlet context\" must be the original context\n(client or context A in the discussion above).", "id": 69258, "time": "2005-01-06T01:27:31Z", "bug_id": 25965, "creation_time": "2005-01-06T01:27:31Z", "is_private": false}, {"count": 15, "tags": [], "bug_id": 25965, "text": "FYI, I deployed the client.war and server.war (attached to this bug report by\nScott) to the Sun One Application Server 8.1 and it worked as I expected (the RD\nobtained by ServerServlet in application B correctly includes /test.jsp in\napplication B). That's two servers so far that I have tested where it works\n(Weblogic 8.1 and Sun One Application Server 8.1 2005Q1). I would imagine that\nSun got the implementation correct on their own spec? \n\nMark: You stated \"Relative paths are, by definition, relative to the current\nrequest\". I believe that they are relative to the root of the current\napplication context. This might be why the the getRequestDispatcher() method\nexists in the ServletContext (and not in the request).\n\nRemy: I do not think it is a waste of time to report bugs or to discuss spec.\ncompliance so that Tomcat conforms to it. My goal is the same as yours - to\nimprove Tomcat. Otherwise, I would not be spending all this time posting. I hope\nyou would welcome folks reporting bugs and encourage discussion going forward\ninstead of dismissing them as a waste of time.\n\nI am moving the status to REOPENED. I hope that you will recognize that this is\na bug after all and not continue to insist that Tomcat's implementation is\ncorrect and others (Sun, BEA etc) are incorrect.", "id": 69260, "time": "2005-01-06T04:21:52Z", "creator": "galwar@nvisia.com", "creation_time": "2005-01-06T04:21:52Z", "is_private": false, "attachment_id": null}]