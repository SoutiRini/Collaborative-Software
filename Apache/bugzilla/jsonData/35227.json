[{"count": 0, "tags": [], "bug_id": 35227, "attachment_id": null, "id": 76045, "time": "2005-06-05T17:15:54Z", "creator": "gregor@apache.org", "creation_time": "2005-06-05T17:15:54Z", "is_private": false, "text": "--- kipkerplunk-lenya@yahoo.com wrote:\n\n\n>> The site navigation tree (accessed by clicking on the \"Site\" tab in\n>> authoring mode) doesn't work in certain versions of Lenya and for\n>> certain versions of Netscape.\n\n\n--- gregor@apache.org wrote:\n\n\n>> during the development of 1.2.3, the sitetree js was rewritten to be \n>> AJAX-based for better performance. it seems you are seeing problems \n>> related to that rewrite.\n>>\n>> i am curious why nn 7 would fail when ie 6 works given that nn 7 has \n>> the more modern js implementation. can you try to figure out more\n>> details about the nn 7 situation? it seemed to me you were not\n\nrunning\n\n>> against the same lenya in your tests.\n\n\nAgain, I have confirmed that this bug exists in Lenya 1.2.3 and\n1.2.4-dev. It is only an issue for Netscape 7.0 and 7.1. However, I\nhave found the problem and would like to propose a solution.\n\nFirst, a quick description of how the navigation tree on the \"Site\" tab\nworks (for those who aren't familiar with it but want to understand the\nresolution). Basically, JavaScript is used to retrieve the navtree's\ndata as XML and then model it using a custom JavaScript data structure\n-- a tree that is capable of rendering itself as a pretty menu on the\npage. [ on a side note, the XML is retrieved synchronously so I guess\nyou could call it SJAX.  ;)  ]\n\nWhile the JavaScript tree is being built, a few conditional checks are\ndone on the XML source. Specifically, tag names of the various nodes\nare tested. For example:\n\nif( children[i].tagName == 'nav:label' )\n\nThis line checks to make sure the XML tag is \"<nav:label>\". However,\nthis is where the problem lies for some versions of Netscape (due to\nhow the DOM elements interface is implemented). The .tagName property\ndoes NOT include the namespace prefix in NN 7.0/7.1. Continuing the\nexample above, this means that 'label' is returned instead of\n'nav:label'. This fails the test of course (in several locations in\nnavtree.js), causing the whole thing to barf.\n\nI have been able to fix this problem on my own Lenya 1.2.3 installation\nby adding the following little \"helper\" function to navtree.js:\n\nfunction getTagName(element) {\n  var tagName = element.tagName;\n  var prefix = element.prefix;\n\n  if(tagName.indexOf(prefix + ':') == -1) {\n    tagName = prefix + ':' + tagName;\n  }\n\n  return tagName;\n}\n\nBy using this function, you're ensuring that the prefix is always\nincluded. The usage example from above becomes:\n\nif( getTagName(children[i]) == 'nav:label' )\n\nIt's unfortunate that you have to include something like this just for\none browser's DOM implementation, but that's life in JavaScript-land.\nIf the Lenya developers think this is an acceptable solution, I would\nhope that they included it Lenya 1.2.4.\n\nCan someone follow-up on this and put it in Lenya's bugtracker?\n\nclint"}, {"count": 1, "tags": [], "text": "Index: src/webapp/lenya/resources/javascript/navtree.js\n===================================================================\n--- src/webapp/lenya/resources/javascript/navtree.js\t(revision 170253)\n+++ src/webapp/lenya/resources/javascript/navtree.js\t(working copy)\n@@ -58,7 +58,7 @@\n   var items=[];\n   var item;\n   for (var i = 0; i < children.length; i++) {\n-     if (children[i].tagName == \"nav:site\") {\n+     if (getTagName(children[i]) == \"nav:site\") {\n         item = this.addLoadedSite(children[i]);\n         items.push(item);\n         item.addNodesRec(children[i]);\n@@ -352,7 +352,7 @@\n   var children = root.childNodes;\n   var items=[];\n   for (var i = 0; i < children.length; i++) {\n-     if (children[i].tagName == \"nav:node\") {\n+     if (getTagName(children[i]) == \"nav:node\") {\n         items.push(this.addLoadedNode(children[i]));\n      } \n   }\n@@ -368,7 +368,7 @@\n     var nodes = [];\n     var item;\n     for (var i = 0; i < children.length; i++) {\n-       if (children[i].tagName == \"nav:node\") {\n+       if (getTagName(children[i]) == \"nav:node\") {\n           this.reopen = true; // this causes the parent to unfold\n           item = this.addLoadedNode(children[i]);\n           items.push(item);\n@@ -428,7 +428,7 @@\n     // lenya generates the xml and is responsible to insert the label\n     // of the correct language\n     for (var i = 0; i < l; i++) {\n-       if (cs[i].tagName=='nav:label') {\n+       if (getTagName(cs[i]) =='nav:label') {\n           return cs[i].firstChild.nodeValue;\n        } \n     }\n@@ -454,7 +454,7 @@\n {\n     var children = node.childNodes;\n     for (var i = 0; i < children.length; i++) {\n-       if (children[i].tagName=='nav:label' &&\nchildren[i].getAttribute('xml:lang')==CHOSEN_LANGUAGE) {\n+       if (getTagName(children[i]) =='nav:label' &&\nchildren[i].getAttribute('xml:lang')==CHOSEN_LANGUAGE) {\n           return true;\n        } \n     }\n@@ -482,3 +482,15 @@\n       xmlhttp = new XMLHttpRequest();\n     }\n }\n+    \n+//workaround for http://issues.apache.org/bugzilla/show_bug.cgi?id=35227\n+function getTagName(element) \n+{\n+  var tagName = element.tagName;\n+  var prefix = element.prefix;\n+\n+  if(tagName.indexOf(prefix + ':') == -1) {\n+    tagName = prefix + ':' + tagName;\n+  }\n+  return tagName;\n+}\n", "attachment_id": null, "id": 76046, "creator": "gregor@apache.org", "time": "2005-06-05T17:19:05Z", "bug_id": 35227, "creation_time": "2005-06-05T17:19:05Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 35227, "attachment_id": null, "id": 76119, "time": "2005-06-07T03:07:06Z", "creator": "gregor@apache.org", "creation_time": "2005-06-07T03:07:06Z", "is_private": false, "text": "applied, thanks"}]