[{"count": 0, "tags": [], "text": "Steps to reproduce:\n* open a spreadsheet created with Excel.\n* create a new cell style with workbook.createCellStyle()\n* create a new XSSFFont with workbook.createFont()\n* add the font to the new style\n* add the style to one cell\n* save the sheet to a new file\n* try to open the created file in Excel\n\nIf you add FontFamily to the new font, the resulting file opens without issues. Otherwise it complains about corrupted style.\n\nThe issue is apparently also present in some sheets with pre-existing styling that are simply loaded to POI and then saved into another sheet. See https://dev.vaadin.com/ticket/20180 for example files and more details.", "is_private": false, "bug_id": 60184, "id": 194057, "time": "2016-09-28T15:27:54Z", "creator": "anna@vaadin.com", "creation_time": "2016-09-28T15:27:54Z", "attachment_id": null}, {"count": 1, "tags": [], "creator": "onealj@apache.org", "attachment_id": 34312, "id": 194078, "time": "2016-09-29T06:44:29Z", "bug_id": 60184, "creation_time": "2016-09-29T06:44:29Z", "is_private": false, "text": "Created attachment 34312\nunit test\n\nI am unable to reproduce this on the trunk (currently a few commits after 3.15) using LibreOffice 4.2.8.2. I can check with Microsoft Excel later.\n\nIs this behavior a regression in 3.15?\nCan you verify that my unit test is the same as yours (if not, could you submit your unit test)?"}, {"count": 2, "tags": [], "bug_id": 60184, "attachment_id": null, "is_private": false, "id": 194079, "time": "2016-09-29T06:47:09Z", "creator": "anna@vaadin.com", "creation_time": "2016-09-29T06:47:09Z", "text": "LibreOffice doesn't have the problem, Excel does. Also reproducible in Excel Viewer."}, {"count": 3, "tags": [], "bug_id": 60184, "attachment_id": null, "is_private": false, "id": 194089, "time": "2016-09-29T13:55:51Z", "creator": "anna@vaadin.com", "creation_time": "2016-09-29T13:55:51Z", "text": "Does the status change mean that you couldn't reproduce the issue with Excel Viewer?"}, {"count": 4, "tags": [], "creator": "anna@vaadin.com", "attachment_id": null, "id": 194091, "time": "2016-09-29T14:48:25Z", "bug_id": 60184, "creation_time": "2016-09-29T14:48:25Z", "is_private": false, "text": "Behaviour was already present in 3.12, not sure about older ones. Don't have a unit test, tested manually in existing project. I tested the files attached to the linked ticket on Excel 2013 and Excel Viewer, with Libre Office they worked fine."}, {"count": 5, "tags": [], "bug_id": 60184, "is_private": false, "text": "Not-so-nice workaround:\n\nCopy over StylesTable.java to local projet, change writeTo to contain\n\n        for (XSSFFont f : fonts) {\n            if (FontFamily.NOT_APPLICABLE.getValue() == f.getFamily()) {\n                f.setFamily(FontFamily.SWISS);\n            }\n            ctfnt[idx++] = f.getCTFont();\n        }\n\ninstead of\n\n        for(XSSFFont f : fonts) ctfnt[idx++] = f.getCTFont();\n\nand do that again every time you update the version.", "id": 194121, "time": "2016-10-03T11:05:17Z", "creator": "anna@vaadin.com", "creation_time": "2016-10-03T11:05:17Z", "attachment_id": null}, {"count": 6, "tags": [], "creator": "marek.branicky@gmail.com", "attachment_id": null, "id": 195419, "time": "2016-12-09T08:47:54Z", "bug_id": 60184, "creation_time": "2016-12-09T08:47:54Z", "is_private": false, "text": "Guys is this fixed in version POI 3.15 or do you plan to fix it in near future?"}, {"count": 7, "tags": [], "text": "I obtained poi src from git read only repo and built it accordingly. Using MS Excel 2016 (with a MS office home subscription, which expired recently but doesn't restrict much of the functionality of excel 2016 that I needed for trying to reproduce the error), I was unable to reproduce the issue. Here's the code which I used:\n\nimport java.io.*;\n\nimport org.apache.poi.openxml4j.exceptions.InvalidFormatException;\nimport org.apache.poi.xssf.usermodel.XSSFCellStyle;\nimport org.apache.poi.xssf.usermodel.XSSFFont;\nimport org.apache.poi.xssf.usermodel.XSSFWorkbook;\n\npublic class bz60184 {\n\n\tpublic static void main(String[] args) throws IOException, InvalidFormatException {\n\n\t\tFile f = new File(\"file.xlsx\"); //already created with excel in the user.dir\n\t\t\n\t\tXSSFWorkbook wb = new XSSFWorkbook(f);\n\t\tXSSFCellStyle styl  = wb.createCellStyle();\n\t\tXSSFFont font = wb.createFont();\n\t\tstyl.setFont(font);\n\t\twb.getSheetAt(0).getRow(0).getCell(0).setCellStyle(styl);\n\t\tFile f2 = new File(\"save.xlsx\");\n\t\tif(f2.exists())\n\t\t\tf2.delete();\n\t\t\n\t\tFileOutputStream os = new FileOutputStream(f2);\n\t\twb.write(os);\n\t\twb.close();\n\t\tos.close();\n\t\tSystem.out.println(\"DONE\");\n\t\n\t}\n\n}\n\n\n//OS - WIN 10 ; JDK - jdk_8u102", "attachment_id": null, "id": 196263, "creator": "ps26oct@gmail.com", "time": "2017-01-21T10:34:31Z", "bug_id": 60184, "creation_time": "2017-01-21T10:34:31Z", "is_private": false}, {"count": 8, "tags": [], "text": "I just now found this issue, wish I'd seen it earlier.  I see the problem now.\n\nXSSFFont can be created without a family.  This is what happens when calling XSSFWorkbook.createFont().  This is fine per the OOXML XSD.\n\nHowever, XSSFFont.getFamily() creates an empty family element if none exist.  This is invalid, as the family element is required to have a val attribute.\n\nFurther, it's really bad practice for things that are defined as property getters to have side effects like this.\n\nSince the API's been out there a while, we should maintain backward compatibility, but I don't like it too much.\n\nI think in the missing element case it should just return 0, the index for NOT_APPLICABLE, which appears to coincide with \"auto\" in the spec, but NOT create a family element.\n\nBetter would be a method that returns an instance of the enum or null if not defined, or NOT_APPLICABLE if null is undesirable.  For now though, I'll just update to not create the empty element if missing.", "attachment_id": null, "id": 198705, "creator": "gwoolsey@apache.org", "time": "2017-05-05T21:45:03Z", "bug_id": 60184, "creation_time": "2017-05-05T21:45:03Z", "is_private": false}, {"count": 9, "tags": [], "bug_id": 60184, "attachment_id": null, "is_private": false, "id": 198706, "time": "2017-05-05T21:52:32Z", "creator": "gwoolsey@apache.org", "creation_time": "2017-05-05T21:52:32Z", "text": "Fixed in 3.17, r1794111.  No longer creating an empty family entry as a side effect of calling the getter."}]