[{"count": 0, "tags": [], "bug_id": 47626, "attachment_id": null, "id": 129395, "time": "2009-08-03T01:17:43Z", "creator": "tatsushita.ken@oss.ntt.co.jp", "creation_time": "2009-08-03T01:17:43Z", "is_private": false, "text": "Deploy war.\nMake symbolic link in the generated directory.\nSymbolic link refer to the directory.\nUndeploy war. \nAs a result, file of directory which referred by symbolic link was deleted. \n\nThe following are the reproduction methods. \n\n\n1.Deploy the sample.war in $TOMCAT_HOME/webapps/\n\n2.Make symbolic link in the generated directory.\n  Symbolic link refer to the directory.\n[****@**** sample]# ln -s /tmp/sampledir/ sampleln\n[****@**** sample]# ls\nWEB-INF  sampleln  jsp  \n[****@**** sample]# cd sampleln/\n[****@**** sampleln]# ls\nsamplefile.txt\n\n3.Undeploy sample.war.  \n\n4.webapps/sample/ directory is delete. \n\n5.File of directory which referred by symbolic link was deleted.\n[****@**** webapps]# cd /tmp/sampledir/\n[****@**** sampledir]# ls \n\nThe file of that directory must not delete!\n\n\nI made two patches.\nThis patch added the conditional expression that it was a directory and was not the symbolic link.\n\nIndex: java/org/apache/catalina/startup/ExpandWar.java\n===================================================================\n--- java/org/apache/catalina/startup/ExpandWar.java\t(revision 798806)\n+++ java/org/apache/catalina/startup/ExpandWar.java\t(working copy)\n@@ -281,11 +281,17 @@\n         }\n         for (int i = 0; i < files.length; i++) {\n             File file = new File(dir, files[i]);\n-            if (file.isDirectory()) {\n-                deleteDir(file);\n-            } else {\n-                file.delete();\n-            }\n+                try {\n+                    if (file.isDirectory()\n+                            && file.getCanonicalPath().equals(file.getAbsolutePath())) {\n+                        // Directory that is not symbolic link\n+                        deleteDir(file);\n+                    } else {\n+                        file.delete();\n+                    }\n+                } catch (IOException e) {\n+                    log.error(sm.getString(\"expandWar.canonicalizing\",file.getAbsolutePath()), e);\n+                }\n         }\n         return dir.delete();\n\n\nThis patch is LocalStrings\n\nIndex: java/org/apache/catalina/startup/LocalStrings.properties\n===================================================================\n--- java/org/apache/catalina/startup/LocalStrings.properties\t(revision 798806)\n+++ java/org/apache/catalina/startup/LocalStrings.properties\t(working copy)\n@@ -59,6 +59,7 @@\n engineConfig.start=EngineConfig: Processing START\n engineConfig.stop=EngineConfig: Processing STOP\n expandWar.copy=Error copying {0} to {1}\n+expandWar.canonicalizing=Error delete file or directory [{0}]\n hostConfig.appBase=Application base directory {0} does not exist\n hostConfig.canonicalizing=Error delete redeploy resources from context [{0}]\n hostConfig.cce=Lifecycle event data object {0} is not a Host\n\n\n\n\nBest regards"}, {"count": 1, "tags": [], "creator": "tatsushita.ken@oss.ntt.co.jp", "attachment_id": 24085, "text": "Created attachment 24085\nadd new patch\n\nI'm so sorry.My patch is broken.\nI provide new patch.", "id": 129397, "time": "2009-08-03T02:18:39Z", "bug_id": 47626, "creation_time": "2009-08-03T02:18:39Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 47626, "text": "Created attachment 24086\nLocalStrings patch\n\nadd new LocalStrings.patch", "id": 129399, "time": "2009-08-03T02:34:25Z", "creator": "tatsushita.ken@oss.ntt.co.jp", "creation_time": "2009-08-03T02:34:25Z", "is_private": false, "attachment_id": 24086}, {"count": 3, "tags": [], "creator": "funkman@apache.org", "attachment_id": null, "text": "I am thinking this is WONTFIX. If a user starts generating symlinks AND relying on autodeploy - bad things will eventually happen.", "id": 131658, "time": "2009-11-03T17:11:08Z", "bug_id": 47626, "creation_time": "2009-11-03T17:11:08Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 47626, "attachment_id": null, "id": 132212, "time": "2009-11-22T14:19:00Z", "creator": "markt@apache.org", "creation_time": "2009-11-22T14:19:00Z", "is_private": false, "text": "Agree with Tim."}, {"count": 5, "tags": [], "bug_id": 47626, "text": "Note that Tomcat 7 includes alias support that provides a safe way of doing this sort of thing.", "id": 132213, "time": "2009-11-22T14:20:14Z", "creator": "markt@apache.org", "creation_time": "2009-11-22T14:20:14Z", "is_private": false, "attachment_id": null}]