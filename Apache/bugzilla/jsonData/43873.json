[{"count": 0, "tags": [], "bug_id": 43873, "text": "In jk_set_time_fmt(),  memory area is allocated by the following codes. \n fmt = (char *)malloc(JK_TIME_MAX_SIZE + strlen(JK_TIME_PATTERN_MICRO));\nBut this area is not released. \n\nWhen i restart apache with graceful mode, apache master process causes the\nmemory leak a little.\nI tested in the following environments.\n RHEL4.5(Apache2.0.52) + mod_jk 1.2.25/1.2.26-dev\n\nI made following patch for apache-2.0/mod_jk.c.\n===================================================================\n--- mod_jk/native/apache-2.0/mod_jk.c   (revision 594009)\n+++ mod_jk/native/apache-2.0/mod_jk.c   (working copy)\n@@ -2605,6 +2605,13 @@\n         jkl->log = jk_log_to_file;\n         jkl->level = conf->log_level;\n         jk_set_time_fmt(jkl, conf->stamp_format_string);\n+        char *log_fmt_subsec = (char *)jkl->log_fmt_subsec;\n+        if ( log_fmt_subsec != NULL ) {\n+            if (jkl->log_fmt_size > 0)\n+                jkl->log_fmt_subsec = apr_pstrdup(p, jkl->log_fmt_subsec);\n+            free((void*)log_fmt_subsec);\n+        }\n+\n         jkl->logger_private = flp;\n         flp->jklogfp = conf->jklogfp;\n         conf->log = jkl;", "id": 110595, "time": "2007-11-15T07:18:33Z", "creator": "mashmk02@gmail.com", "creation_time": "2007-11-15T07:18:33Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "creator": "mturk@apache.org", "attachment_id": null, "text": "Huh,\n\nYou are correct.\nThe complete log_fmt_subsec is a complete mess.\nIt's either assigned as const char* or allocated.\nEven more it's wrongly used later, presumed as JK_TIME_MAX_SIZE long,\nbut actually JK_TIME_MAX_SIZE + strlen(JK_TIME_PATTERN_MICRO)\n", "id": 110601, "time": "2007-11-15T08:15:41Z", "bug_id": 43873, "creation_time": "2007-11-15T08:15:41Z", "is_private": false}, {"count": 2, "tags": [], "creator": "rainer.jung@kippdata.de", "attachment_id": null, "is_private": false, "id": 110870, "time": "2007-11-20T09:34:15Z", "bug_id": 43873, "creation_time": "2007-11-20T09:34:15Z", "text": "Thanks for reporting. The leak has been fixed in r596746 (in a slightly\ndifferent way, because I don't want to expose the internals of timestamp\nformatting to the web server).\n\nMladens comments about the complicated size handling led to another revision\nr596747.\n\nEven without r596747 there was no buffer overflow issue, because the longer\nstring was truncated with '\\0' before it was used in the shorter context.\n\nThe changes will be part of version 1.2.26, which we expect to release soon.\nThere will be a testing tarball before, with an announcement via the dev list.\n"}]