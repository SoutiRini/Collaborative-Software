[{"count": 0, "tags": [], "text": "I've tried to match 1__ line against ^(1_*)??_$, ^(1_*)*?_$, and ^(1_*)+?_$\nIn all cases I get negative answer.\nBut ^(|1_*)_$ (which is the same as last one) matches the string.\n\nAs far as I understand the cause of this problem is that we use OP_RELUCTANTXXX\nfor these quantifiers and process them incorrectly.\nPerhaps we should do the same as for greedy quantifiers, i.e. replace X?? by\n(|X), X+? - XX*?, and X*? by (|X{gotoX})", "is_private": false, "id": 54202, "creator": "o_sukhodolsky@yahoo.com", "time": "2004-03-18T04:49:17Z", "bug_id": 27763, "creation_time": "2004-03-18T04:49:17Z", "attachment_id": null}, {"count": 1, "tags": [], "creator": "vgritsenko@apache.org", "text": "I think I have another approach - fix processing of OP_RELUCTANTXXX, and\nimplement OP_PLUS etc similarly to cut down on program length and complexity.\n\nWould you have more testcases? Specifically I'd like to have more complicated\ntestcasees where plus/star/maybe are used several times and grouped/nested into\neach other. Thanks.", "id": 100270, "time": "2007-03-10T20:29:51Z", "bug_id": 27763, "creation_time": "2007-03-10T20:29:51Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "creator": "vgritsenko@apache.org", "text": "implemented fix for reluctant closures", "id": 100330, "time": "2007-03-12T19:57:06Z", "bug_id": 27763, "creation_time": "2007-03-12T19:57:06Z", "is_private": false, "attachment_id": null}]