[{"count": 0, "tags": [], "creator": "srohead@webmiles.com", "attachment_id": null, "id": 1957, "time": "2001-04-20T12:30:34Z", "bug_id": 1440, "creation_time": "2001-04-20T12:30:34Z", "is_private": false, "text": "When using ant and junit together, I noticed that calls to getClass\n().getResource(\"xyz\") would always return null while calls to getClass\n().getResourceAsStream(\"xyz\") would work just fine.  Looking at the \njava.lang.ClassLoader source code revealed that JDK 1.2 added a method called \nfindResource(String) which is supposed to be overridden by subclasses.  If a \nsubclass does not override this method, the default implementation simply \nreturns null.  Since AntClassLoader is explicitly overriding getResourceAsStream\n(String), that call works, but calls to getResource(String) end up calling the \ndefault findResource(String) method and always return null.  I suspect that if \nthe code in AntClassLoader.getResourceAsStream(String) should be moved into \nAntClassLoader.findResource(String) and then AntClassLoader.getResourceAsStream\n(String) no longer necessary.  This will not work with JDK 1.1 though.  I don't \nknow what the recommended approach for JDK 1.1/1.2 cross-compatible \nClassLoaders is, but probably you would override getResource(String) and call \nit from getResourceAsStream(String)."}, {"count": 1, "tags": [], "bug_id": 1440, "attachment_id": null, "text": "\n\n*** This bug has been marked as a duplicate of 749 ***", "id": 2367, "time": "2001-05-09T13:52:51Z", "creator": "srohead@webmiles.com", "creation_time": "2001-05-09T13:52:51Z", "is_private": false}]