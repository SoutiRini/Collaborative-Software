[{"count": 0, "tags": [], "bug_id": 16870, "text": "Explanation of bug:\n-------------------\nUnder some circumstances (see below) some hyphenated words are mutilated.\n\nE.g. the german word Altersvorsorge, was SOMETIMES (but not very often) \nhyphenated rsvor-Altesorge.\n\n\nReason:\n-------\nXerces uses the characters() calls to give FOP a character buffer which is \na 'view window' on the current document. It can happen that one word \n(like \"Altersvorsorge\") is fragmented over two calls of characters(). In the \ngiven example : \"Alte\" and \"rsvorsorge\"\n\nFOP adds the first part of the word to the \"pending areas\". This happens in \norg\\apache\\fop\\layout\\LineArea.java in the method addText(). Xerces delivers \nthe rest of the word in his second characters-call which results in a second \ncall to addText(). \n\nIn this second call (if hyphenation is set to true) the method doHyphenation() \n(also in class LineArea) is called which completely ignores pending areas!!! So \nit happens that the word fragment \"rsvorsorge\" is handed over to the \nhyphenation engine, which does a correct job with this fragment.\n\nNow the Hyphenator determines that \"rsvor-\" is added to the current line area. \n\nThe next call to addText checks if there are any pending areas (\"Alte\" in our \nexample) prints it in the next line and continues with the rest of the current \nbuffer (\"sorge [...]\" in the example).\n\nSo the reason that this bug occurs only in very few situations is that it \ndepends on \n1) how often and with which buffer size the xml-parser calls the characters-\nmethod and so I think it definitely depends on the version of the xml parser \nused\n2) how the xml-document looks like; an additional character/newline somewhere \nBEFORE the mutilated word can change the calls to the characters method.\n\n\n\nMY CHANGES\n----------\nI changed the internals of the method doHyphenation(). It now takes into \naccount any pending areas which may contain word fragments. \n\nNew Approach in doHyphenation:\n1) Scan pending areas vector for pending text fragments, and remove them from \nthe pending areas vector\n2) Concatenate result from 1) with the current word to be hyphenated in the \ncurrent char-buffer \n3) call Hyphenator\n4) use addWord to add pre-hyphen word fragment to current line area\n5) Decision: is final hyphenation point somewhere in the pending area or in the \ncurrent char-buffer ?\n\n5a) hyphenation point is somewhere in the pending area :\n--> add rest of characters of the pending pending text fragments to the pending \narea vector (they will be printed in a new line (by addText()) together with \nthe rest of the word which is in the current buffer). For this task I used the \nexisting addSpacedWord() method with the pending parameter set to true.\n\n5b) hyphenation point is somewhere in the current char buffer:\n--> just return new position in current char buffer\n\n\n\nI also changed the signature of doHyphenation():\nParameter TextState was added : addSpacedWord method (used in 5a) needs the \ncurrent textState\n\n\nThe call to doHyphenation() in LineArea.addText() is modified:\nThe remaining width parameter now isn't reduced by the pendingWidth, because \ndoHyphenation now looks at pending areas itself:\n\nret = this.doHyphenation(dataCopy, i, wordStart,\n this.getContentWidth()\n - (finalWidth\n + spaceWidth\n /*+ pendingWidth*/), textState);\n\n\n\nI think it doesn't make sense that I include our xsl-fo documents to reproduce \nthe error, because we use custom fonts, which will likely lead to a different \nlayout on your system and the error will probably not occur.\n\n\n\n\nChris Wewerka\nwewerka@ThreeDimensions.de\nMunich, Germany", "id": 30877, "time": "2003-02-07T10:12:00Z", "creator": "wewerka@ThreeDimensions.de", "creation_time": "2003-02-07T10:12:00Z", "is_private": false, "attachment_id": null}, {"count": 1, "text": "\n\n*** This bug has been marked as a duplicate of 2106 ***", "bug_id": 16870, "attachment_id": null, "id": 30881, "time": "2003-02-07T11:25:04Z", "creator": "j3322ptm@yahoo.de", "creation_time": "2003-02-07T11:25:04Z", "tags": [], "is_private": false}, {"count": 2, "text": "Created attachment 4773\npatch", "bug_id": 16870, "attachment_id": 4773, "id": 30884, "time": "2003-02-07T11:37:19Z", "creator": "wewerka@ThreeDimensions.de", "creation_time": "2003-02-07T11:37:19Z", "tags": [], "is_private": false}, {"count": 3, "tags": [], "creator": "gadams@apache.org", "attachment_id": null, "text": "batch transition to closed remaining pre-FOP1.0 resolved bugs", "id": 156680, "time": "2012-04-01T13:51:17Z", "bug_id": 16870, "creation_time": "2012-04-01T13:51:17Z", "is_private": false}]