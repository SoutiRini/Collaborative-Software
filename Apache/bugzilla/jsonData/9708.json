[{"count": 0, "text": "When sending many large (1MB+) POST requests over a keep-alive connection, the\nhttp process grows in size after each request. For example, after 1000 such\nrequests, the process size may grow by 4MB. Without keep-alive, the processes do\nnot grow. This occurs with CGI scripts and custom C modules in Apache 2.0.36.\nHowever, the memory is apparently not leaked -- running the same 1000 requests\nagain does not cause the size to grow.\n\nThe following CGI script (post.cgi) can be used to accept the POST data:\n\n#!/usr/bin/perl -w\nuse strict;\nmy $len = 0;\nwhile(<STDIN>) {\n    $len += length($_);\n}\nmy $msg = \"Received $len bytes\\n\";\nprintf \"Content-Type: text/plain\\nContent-Length: %d\\n\\n%s\",\n        length($msg), $msg;\nexit;\n\n\nNext, create a large file:\n\n$ dd if=/dev/zero of=big bs=1024 count=1024\n\nThen send many keep-alive requests to the server. This example uses 'curl':\n\n$ curl -T big `perl -e 'print \"http://localhost:8080/post.cgi \" for (0..999)'`\n\nObserve the large (7MB) process size:\n\n$ ps -aux | grep lt-http\nweb  10917  0.0  0.0  3200 1576 ?   S  07:53   0:00 lt-httpd \nweb  10918  0.8  0.0  3672 2072 ?   S  07:53   0:01 lt-httpd \nweb  10919  4.4  0.1  7620 6016 ?   S  07:53   0:06 lt-httpd", "bug_id": 9708, "attachment_id": null, "id": 17428, "time": "2002-06-07T22:17:55Z", "creator": "apxs@fx.org", "creation_time": "2002-06-07T22:17:55Z", "tags": [], "is_private": false}, {"count": 1, "tags": [], "bug_id": 9708, "attachment_id": null, "id": 23627, "time": "2002-09-29T16:37:25Z", "creator": "jerenkrantz@apache.org", "creation_time": "2002-09-29T16:37:25Z", "is_private": false, "text": "You may also use the new MaxMemFree directive to indicate how much 'free' memory\nhttpd will hold on to.  But, remember that processes can never shrink in memory\nonce they have allocated it.\n\nRegardless, I do not see a noticable increase in memory usage with 2.0.42. \nPlease try a later version and see if it is fixed.\n\nThanks for using Apache!"}]