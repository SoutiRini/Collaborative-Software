[{"count": 0, "tags": [], "text": "Class \"org.apache.catalina.tribes.transport.bio.util.FastQueue\" is used in parallel contexts that originate from method org.apache.catalina.tribes.group.interceptors.MessageDispatchInterceptor.run().\n\n1. org.apache.catalina.tribes.group.interceptors.MessageDispatchInterceptor.run()\n2. org.apache.catalina.tribes.group.interceptors.MessageDispatchInterceptor.sendAsyncData(LinkObject)\n3. org.apache.catalina.tribes.group.ChannelInterceptorBase.sendMessage(Member[], ChannelMessage, InterceptorPayload)\n4. org.apache.catalina.tribes.group.interceptors.MessageDispatchInterceptor.sendMessage(Member[], ChannelMessage, InterceptorPayload)\n5. org.apache.catalina.tribes.group.interceptors.MessageDispatchInterceptor.addToQueue(ChannelMessage, Member[], InterceptorPayload)\n6. org.apache.catalina.tribes.transport.bio.util.FastQueue.FastQueue()\n\nTwo public methods of \"FastQueue\", namely \"org.apache.catalina.tribes.transport.bio.util.FastQueue.isCheckLock()\" and \"org.apache.catalina.tribes.transport.bio.util.FastQueue.setCheckLock(boolean)\" access the field \"org.apache.catalina.tribes.transport.bio.util.FastQueue.checkLock\" without proper synchronization. Fortunately, these two methods, i.e. \"FastQueue.isCheckLock()\" and \"FastQueue.setCheckLock(boolean)\", are currently used. So, there is only a potential data race on \"FastQueue.checkLock\". To prevent such a data race in future, I suggest that either accesses to \"FastQueue.checkLock\" get properly syncrhonized or the unused public methods \"FastQueue.isCheckLock()\" and \"FastQueue.setCheckLock(boolean)\" be removed.\n\n\nField \"FastQueue.checkLock\" is declared at\n<http://svn.apache.org/repos/asf/!svn/bc/1220560/tomcat/trunk/java/org/apache/catalina/tribes/transport/bio/util/FastQueue.java>.", "is_private": false, "bug_id": 52355, "id": 152268, "time": "2011-12-18T23:34:54Z", "creator": "reprogrammer@gmail.com", "creation_time": "2011-12-18T23:34:54Z", "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 52355, "attachment_id": null, "text": "That is all essentially debug code. The setter may be accessed via reflection when server.xml is parsed by I haven't checked if it is exposed. I suspect that it is not exposed and that it is just changed in the source when debugging issues.\n\nI'm not concerned about concurrent access but to be on the safe side it should probably be volatile. The flags it then uses to track status during debugging should be certainly be volatile.", "id": 152379, "time": "2011-12-23T21:09:23Z", "creator": "markt@apache.org", "creation_time": "2011-12-23T21:09:23Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 52355, "attachment_id": null, "text": "Fixed in trunk and 7.0.x and will be included in 7.0.24 onwards.", "id": 152381, "time": "2011-12-23T21:16:57Z", "creator": "markt@apache.org", "creation_time": "2011-12-23T21:16:57Z", "is_private": false}, {"count": 3, "tags": [], "text": "Thanks for resolving this issue. Keshmesh <http://keshmesh.cs.illinois.edu/> detected this problem when we ran it on Tomcat using method \"org.apache.catalina.tribes.group.interceptors.MessageDispatchInterceptor.run()\" as an entry point.\n\n(In reply to comment #2)\n> Fixed in trunk and 7.0.x and will be included in 7.0.24 onwards.", "attachment_id": null, "bug_id": 52355, "id": 152389, "time": "2011-12-24T00:09:18Z", "creator": "reprogrammer@gmail.com", "creation_time": "2011-12-24T00:09:18Z", "is_private": false}, {"attachment_id": null, "tags": [], "bug_id": 52355, "is_private": false, "count": 4, "id": 152392, "time": "2011-12-24T00:24:29Z", "creator": "rainer.jung@kippdata.de", "creation_time": "2011-12-24T00:24:29Z", "text": "When I wrote that queue at the end of 2004 using some hand made asymmetric locks I added the checkLock flag to be able to debug in case the lock constructs would turn out to be buggy.\n\nNow, 7 years later, ans after only very few changes to that code, I think we actually no longer need \"checkLock\" and the flags only neded in combination with checkLock, i.e. inAdd, inRemove, inMutex.\n\nIMHO we can remove that part."}, {"count": 5, "tags": [], "creator": "markt@apache.org", "text": "You know me, always happy to delete code :)\n\nMark", "id": 152394, "time": "2011-12-24T08:22:03Z", "bug_id": 52355, "creation_time": "2011-12-24T08:22:03Z", "is_private": false, "attachment_id": null}]