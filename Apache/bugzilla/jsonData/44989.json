[{"count": 0, "tags": [], "bug_id": 44989, "attachment_id": 21957, "id": 116562, "time": "2008-05-13T07:38:23Z", "creator": "clovis.wichoski@gmail.com", "creation_time": "2008-05-13T07:38:23Z", "is_private": false, "text": "Created attachment 21957\nJConsole overview\n\nHi, i migrated from version 6.0.14 to version 6.0.16, and configured tomcat to use NIO connector and compression on, with that i'm getting a thread name 'http-exec-80-2' that consumes 49-50% of CPU, and the thread 'http-80-ClientPoller' that consumes 46-48% of CPU, with this i have a jvm that consumes 100% o my CPU.\n\nuname -a output: \nLinux 2.6.23.1-10.fc7 #1 SMP Fri Oct 19 15:39:08 EDT 2007 i686 i686 i386 GNU/Linux \n\njava -version output:\njava version \"1.5.0_15\"\nJava(TM) 2 Runtime Environment, Standard Edition (build 1.5.0_15-b04)\nJava HotSpot(TM) Server VM (build 1.5.0_15-b04, mixed mode)\n\nhttp-exec-80-2 stack:\norg.apache.coyote.http11.InternalNioOutputBuffer$SocketOutputBuffer.doWrite(InternalNioOutputBuffer.java:806)\norg.apache.coyote.http11.filters.ChunkedOutputFilter.doWrite(ChunkedOutputFilter.java:126)\norg.apache.coyote.http11.filters.GzipOutputFilter$FakeOutputStream.write(GzipOutputFilter.java:164)\njava.util.zip.GZIPOutputStream.finish(GZIPOutputStream.java:95)\norg.apache.coyote.http11.filters.GzipOutputFilter.end(GzipOutputFilter.java:122)\norg.apache.coyote.http11.InternalNioOutputBuffer.endRequest(InternalNioOutputBuffer.java:390)\norg.apache.coyote.http11.Http11NioProcessor.action(Http11NioProcessor.java:1079)\norg.apache.coyote.Response.action(Response.java:183)\norg.apache.coyote.Response.finish(Response.java:305)\norg.apache.catalina.connector.OutputBuffer.close(OutputBuffer.java:276)\norg.apache.catalina.connector.Response.finishResponse(Response.java:492)\norg.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:310)\norg.apache.coyote.http11.Http11NioProcessor.process(Http11NioProcessor.java:879)\norg.apache.coyote.http11.Http11NioProtocol$Http11ConnectionHandler.process(Http11NioProtocol.java:719)\norg.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:2080)\njava.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:650)\njava.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:675)\njava.lang.Thread.run(Thread.java:595)\n\nsometimes the stack of http-exec-80-2 is just changing from this to above:\norg.apache.coyote.http11.InternalNioOutputBuffer.addToBB(InternalNioOutputBuffer.java:620)\norg.apache.coyote.http11.InternalNioOutputBuffer.access$000(InternalNioOutputBuffer.java:46)\norg.apache.coyote.http11.InternalNioOutputBuffer$SocketOutputBuffer.doWrite(InternalNioOutputBuffer.java:803)\norg.apache.coyote.http11.filters.ChunkedOutputFilter.doWrite(ChunkedOutputFilter.java:126)\norg.apache.coyote.http11.filters.GzipOutputFilter$FakeOutputStream.write(GzipOutputFilter.java:164)\njava.util.zip.GZIPOutputStream.finish(GZIPOutputStream.java:95)\norg.apache.coyote.http11.filters.GzipOutputFilter.end(GzipOutputFilter.java:122)\norg.apache.coyote.http11.InternalNioOutputBuffer.endRequest(InternalNioOutputBuffer.java:390)\norg.apache.coyote.http11.Http11NioProcessor.action(Http11NioProcessor.java:1079)\norg.apache.coyote.Response.action(Response.java:183)\norg.apache.coyote.Response.finish(Response.java:305)\norg.apache.catalina.connector.OutputBuffer.close(OutputBuffer.java:276)\norg.apache.catalina.connector.Response.finishResponse(Response.java:492)\norg.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:310)\norg.apache.coyote.http11.Http11NioProcessor.process(Http11NioProcessor.java:879)\norg.apache.coyote.http11.Http11NioProtocol$Http11ConnectionHandler.process(Http11NioProtocol.java:719)\norg.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:2080)\njava.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:650)\njava.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:675)\njava.lang.Thread.run(Thread.java:595)\n\nhttp-80-ClientPoller stack:\nsun.nio.ch.PollArrayWrapper.poll0(Native Method)\nsun.nio.ch.PollArrayWrapper.poll(PollArrayWrapper.java:100)\nsun.nio.ch.PollSelectorImpl.doSelect(PollSelectorImpl.java:56)\nsun.nio.ch.SelectorImpl.lockAndDoSelect(SelectorImpl.java:69)\nsun.nio.ch.SelectorImpl.select(SelectorImpl.java:80)\norg.apache.tomcat.util.net.NioEndpoint$Poller.run(NioEndpoint.java:1473)\njava.lang.Thread.run(Thread.java:595)\n\nattached are the screenshots of JConsole from where you can see the graphs..."}, {"count": 1, "tags": [], "creator": "clovis.wichoski@gmail.com", "attachment_id": 21958, "text": "Created attachment 21958\nJConsole TopThreads", "id": 116563, "time": "2008-05-13T07:39:10Z", "bug_id": 44989, "creation_time": "2008-05-13T07:39:10Z", "is_private": false}, {"count": 2, "tags": [], "creator": "fhanik@apache.org", "attachment_id": null, "id": 116565, "time": "2008-05-13T08:03:51Z", "bug_id": 44989, "creation_time": "2008-05-13T08:03:51Z", "is_private": false, "text": "Hi there, many thanks for the report.\nI would like to ask you for two things\n\n1. Test the latest 6.0.x trunk, there has been changes in the exact code you are refering to\n\nfairly simple to build\n(build with JDK 1.5)\n\nsvn co http://svn.apache.org/repos/asf/tomcat/tc6.0.x/trunk\ncd trunk\nant download\nant\n\noutput ends up in output/build\n\n\nand if that doesn't change your scenario, make sure we are not running into a JDK/NIO bug on linux, so test with the latest 1.6 JVM\n\nbest\nFilip"}, {"count": 3, "tags": [], "creator": "clovis.wichoski@gmail.com", "attachment_id": null, "is_private": false, "id": 116680, "time": "2008-05-15T13:15:18Z", "bug_id": 44989, "creation_time": "2008-05-15T13:15:18Z", "text": "Hi, Filip,\n\non May 13, 2008 when i read your message, i tested with the svn snapshot and put that in production with JDK 1.5.0_15 32bit, and i wait until today to report that the system is working very well, now its processing 1100 request per minute just using an average of 10% of CPU, now the system works as expected, when you commit and have a final version, let me know, for now i will stay using the snapshot version.\n\nthanks for your help.\n\nKR\nCl\u00f3vis"}, {"count": 4, "tags": [], "creator": "fhanik@apache.org", "attachment_id": null, "id": 116692, "time": "2008-05-15T18:42:38Z", "bug_id": 44989, "creation_time": "2008-05-15T18:42:38Z", "is_private": false, "text": "Marking fixed, user reports no more problems in SVN version\n\nthanks for your assistance!"}]