[{"count": 0, "tags": [], "bug_id": 38065, "attachment_id": null, "is_private": false, "id": 84040, "time": "2005-12-28T20:24:57Z", "creator": "ruby@joker.linuxstuff.pl", "creation_time": "2005-12-28T20:24:57Z", "text": "We're running Apache 2.0.55 (from Debian testing package ver 2.0.55-3) on Linux \n2.6.14.3. We use worker MPM, mod_actions, mod_rewrite, mod_layout and fastcgi \nrunning php. Box serves about 40-50 requests per second. Once in a while one of \napache2 processes rapidly starts to consume lot of memory, freezing the system \nand finally crashing it, without any chance to stop it or trace it. We wasn't \nable to find out what is causing this, error.log doesn't say anything useful and \nbecause of sudden apache2 process behaviour tracing is also very hard.\n\nBelow is attached 'top' screen right before the actual crash, as well as some \nsyslog output before another server reboot.\n\n----------\n\n top - 21:15:21 up  1:29,  2 users,  load average: 17.18, 9.77, 6.55\n Tasks: 116 total,2 running, 114 sleeping,0 stopped,0 zombie\n Cpu(s):  1.3% us,  5.3% sy,  0.0% ni,  0.0% id, 90.7% wa,  1.3% hi,  1.3% si\n Mem:905776k total,898128k used,7648k free,404k buffers\n Swap:0k total,0k used,0k free,18236k cached\n\n PID USERPR  NI  VIRT  RES  SHR S %CPU %MEMTIME+  COMMAND\n 130 root150000 S  3.0  0.00:00.13 pdflush\n 6485 www-data  210  881m 600m 1100 S  1.3 67.90:04.83 apache2\n 9959 www-data  160  284m 8404 1124 S  1.0  0.90:00.57 apache2\n 1483 root170  2620  544  412 D  0.3  0.10:01.05 syslogd\n 4789 www-data  250  293m  16m 1136 S  0.3  1.90:06.94 apache2\n 7270 root160  2196 1100  820 R  0.3  0.10:01.30 top\n 9790 www-data  170 17500 5552 1272 D  0.3  0.60:00.43 php\n 10015 www-data  160  284m 8448 1096 S  0.3  0.90:00.59 apache2\n\n----------\n\n Dec 28 03:13:35 werewolf kernel: Out of Memory: Killed process 1080 (apache2).\n Dec 28 03:13:35 werewolf kernel: Out of Memory: Killed process 25021  (apache2\n).\n Dec 28 03:13:55 werewolf kernel: Out of Memory: Killed process 25084 (apache2).\n Dec 28 03:13:55 werewolf kernel: Out of Memory: Killed process 25116 (apache2).\n Dec 28 03:14:28 werewolf kernel: Out of Memory: Killed process 25087 (apache2).\n Dec 28 03:14:29 werewolf kernel: Out of Memory: Killed process 25164 (apache2).\n\n----------\n\napache2.conf (parts):\n\nServerLimit 12\n\n<IfModule worker.c>\nStartServers         3\nMaxClients         384\nMinSpareThreads     20\nMaxSpareThreads     50\nThreadsPerChild     32\nMaxRequestsPerChild  10000\n</IfModule>\n\nAddOutputFilterByType LAYOUT text/html application/x-httpd-php\nLayoutEndTag </BODY>\nLayoutFooter /some_document.html\n\nFastCgiServer /usr/lib/cgi-bin/php4\nFastCgiConfig -idle-timeout 15\nAddHandler php-fastcgi .php .php3 .php4\n<Location /cgi-bin/php>\n    SetHandler fastcgi-script\n</Location>\nAction php-fastcgi /cgi-bin/php\nAddType application/x-httpd-php .php .php3 .php4"}, {"count": 1, "tags": [], "creator": "rpluem@apache.org", "attachment_id": null, "id": 84043, "time": "2005-12-28T22:59:04Z", "bug_id": 38065, "creation_time": "2005-12-28T22:59:04Z", "is_private": false, "text": "Please try to limit the memory of the httpd processes by setting ulimit -m\nbefore starting httpd and limit the memory of processes created by the httpd\nchilds via RLimitMEM. This should give you a chance to do traces and get more\ninformation about the root cause. For debugging httpd please see\nhttp://httpd.apache.org/dev/debugging.html."}, {"count": 2, "tags": [], "bug_id": 38065, "attachment_id": null, "is_private": false, "id": 84071, "time": "2005-12-29T23:53:03Z", "creator": "ruby@joker.linuxstuff.pl", "creation_time": "2005-12-29T23:53:03Z", "text": "(In reply to comment #1)\n> Please try to limit the memory of the httpd processes by setting ulimit -m\n> before starting httpd and limit the memory of processes created by the httpd\n> childs via RLimitMEM. This should give you a chance to do traces and get more\n> information about the root cause. For debugging httpd please see\n> http://httpd.apache.org/dev/debugging.html.\n\nI've added this two lines:\n\nulimit -S -m 25600\nulimit -H -m 25600\n\non top of apache2ctl script (which actually only calls \"/usr/sbin/apache2 -k \nstart\"), without any result. Top still shows apache2 processes with resident \nsize >= 30Mb. It already crashed our server two times, here's top output in last \n4 seconds:\n\n top - 22:03:16 up 1 day,  1:33,  2 users,  load average: 8.26, 6.90, 4.71\n  PID USER      PR  NI  VIRT  RES  SHR S %CPU %MEM    TIME+  COMMAND\n 23439 www-data  19   0  372m  94m 1820 S 28.3 10.7   0:08.90 apache2\n\n top - 22:03:18 up 1 day,  1:33,  2 users,  load average: 9.76, 7.23, 4.83\n PID USER      PR  NI  VIRT  RES  SHR S %CPU %MEM    TIME+  COMMAND\n 23439 www-data  19   0  551m 273m 1820 S 53.1 30.9   0:09.97 apache2\n  132 root      15   0     0    0    0 D  9.9  0.0   0:27.16 kswapd0\n\nThis apache process was spawned after 22:03:14, then it consumed 273Mb of memory \nin about 4 seconds, and finally frozen our box (probably taking rest of memory).\n\nIn this situation you understand it's hard to deliver any debug information. I'm \nsuprised that ulimit doesn't work with apache, maybe we use it the wrong way?\n\nWe have some info that may be useful though. From time to time appear apache \nprocesses consuming a lot of memory. They grow in time, mostly exiting normally, \nso I'm not sure they're related to this bug. But I guess that's better than \nnothing. Below is a trace of one of this kind of processes.\n\n # ls /proc/9200/task\n 9200  9211  9214  9215  9224  9233\n\n # strace -p 9200\n Process 9200 attached - interrupt to quit\n read(4, 0xbfc73f57, 1)                  = ? ERESTARTSYS (To be restarted)\n --- SIGTERM (Terminated) @ 0 (0) ---\n sigreturn()                             = ? (mask now HUP INT QUIT USR1 ALRM \nSTKFLT CHLD CONT TSTP TTIN TTOU URG XCPU XFSZ VTALRM PROF WINCH IO PWR?)\n futex(0xb7024bf8, FUTEX_WAIT, 9202, NULL) = 0\n futex(0xb6824bf8, FUTEX_WAIT, 9203, NULL) = 0\n futex(0xb5824bf8, FUTEX_WAIT, 9205, NULL) = 0\n munmap(0xb7025000, 8388608)             = 0\n futex(0xb5024bf8, FUTEX_WAIT, 9206, NULL) = 0\n munmap(0xa6825000, 8388608)             = 0\n munmap(0xb6825000, 8388608)             = 0\n munmap(0xb6025000, 8388608)             = 0\n munmap(0xb5825000, 8388608)             = 0\n munmap(0xb5025000, 8388608)             = 0\n futex(0xb2824bf8, FUTEX_WAIT, 9211, NULL) = 0\n munmap(0xb4825000, 8388608)             = 0\n munmap(0xb4025000, 8388608)             = 0\n munmap(0xb3825000, 8388608)             = 0\n munmap(0xb3025000, 8388608)             = 0\n\n == more than 100 entries ==\n\n munmap(0xa562d000, 430080)              = 0\n munmap(0xa5a07000, 360448)              = 0\n munmap(0xa5d5e000, 315392)              = 0\n munmap(0xa604d000, 274432)              = 0\n munmap(0xa63dc000, 221184)              = 0\n munmap(0xa6547000, 180224)              = 0\n munmap(0xa6724000, 139264)              = 0\n brk(0x894d000)                          = 0x894d000\n brk(0x889e000)                          = 0x889e000\n brk(0x87ef000)                          = 0x87ef000\n brk(0x87e5000)                          = 0x87e5000\n brk(0x84c2000)                          = 0x84c2000\n brk(0x84c0000)                          = 0x84c0000\n brk(0x828a000)                          = 0x828a000\n brk(0x8286000)                          = 0x8286000\n brk(0x81a3000)                          = 0x81a3000\n brk(0x819b000)                          = 0x819b000\n write(7, \"www.example.com 84.\"..., 1018) = 1018\n write(8, \"111.111.111.111 - - [28/Dec/2005:\"..., 3930) = 3930\n exit_group(0)                           = ?\n Process 9200 detached\n\n # strace -p 9211\n Process 9211 attached - interrupt to quit\n poll({fd=24, events=POLLOUT, revents=POLLOUT}?, 1, 60000) = 1\n sendfile(24, 25, [1982387], 1012962)    = 13140\n poll({fd=24, events=POLLOUT, revents=POLLOUT}?, 1, 60000) = 1\n sendfile(24, 25, [1995527], 999822)     = 13140\n\n == about 70 entries more ==\n\n poll({fd=24, events=POLLOUT, revents=POLLOUT}?, 1, 60000) = 1\n sendfile(24, 25, [2967887], 27462)      = 13140\n poll({fd=24, events=POLLOUT, revents=POLLOUT}?, 1, 60000) = 1\n sendfile(24, 25, [2981027], 14322)      = 13140\n poll({fd=24, events=POLLOUT, revents=POLLOUT}?, 1, 60000) = 1\n sendfile(24, 25, [2994167], 1182)       = 1182\n gettimeofday({1135804066, 798228}, NULL) = 0\n gettimeofday({1135804066, 798456}, NULL) = 0\n times({tms_utime=82, tms_stime=79, tms_cutime=0, tms_cstime=0}) = 1718650698\n gettimeofday({1135804066, 798886}, NULL) = 0\n shutdown(24, 1 /* send */)              = 0\n poll({fd=24, events=POLLIN, revents=POLLIN?, 1, 2000) = 1\n read(24, \"\", 512)                       = 0\n close(24)                               = 0\n close(25)                               = 0\n gettimeofday({1135804068, 189043}, NULL) = 0\n gettimeofday({1135804068, 189074}, NULL) = 0\n _exit(0)                                = ?\n Process 9211 detached\n\nThis poll/sendfile pattern is similar to all of them.\n\nPlease help us. :) We'll be happy with any sane workaround."}, {"count": 3, "tags": [], "creator": "rpluem@apache.org", "attachment_id": null, "id": 84077, "time": "2005-12-30T02:10:20Z", "bug_id": 38065, "creation_time": "2005-12-30T02:10:20Z", "is_private": false, "text": "(In reply to comment #2)\n\n[..cut..]\n\n> \n> I've added this two lines:\n> \n> ulimit -S -m 25600\n> ulimit -H -m 25600\n> \n> on top of apache2ctl script (which actually only calls \"/usr/sbin/apache2 -k \n> start\"), without any result. Top still shows apache2 processes with resident \n> size >= 30Mb. It already crashed our server two times, here's top output in last \n\nUps. I just traced ulimit of bash and it does not seem to set the correct limit.\nIt sets RLIMIT_RSS. ulimit -v sets RLIMIT_AS which also does not seem completely\ncorrect to me, but this is at least checked by the brk syscall. So please try\nagain with ulimit -v.\nAnyway it may be hard to find out the cause for this as you are using a fastcgi\nmodule as a third party module.\n\n[..cut..]\n\n> \n> We have some info that may be useful though. From time to time appear apache \n> processes consuming a lot of memory. They grow in time, mostly exiting normally, \n> so I'm not sure they're related to this bug. But I guess that's better than \n> nothing. Below is a trace of one of this kind of processes.\n\nCan you catch such processes with gdb and sent a backtrace or even better try to\ncatch the whole flow with ltrace?\n\n[..cut..]"}, {"count": 4, "tags": [], "bug_id": 38065, "is_private": false, "text": "i work with Michal (first post author) to solve this bug on our server.\n\nToday i moved to prefork apache + mod_php and the bug is still there, so this \nis not about fastcgi or threads issue.\n\nIts free hosting server, so it is likely somebody is doing something strange \nto make it happen. \n\nI tried limiting apache with -v, and it works, but to even load it i need to \nincrase its virtual memory to around 40 MB or something to load all libs and \nsuch, and so even simple scripts can run. (when i set it so high though, a lot \nof apache process eating memory are still there, but it should stop the one \nthat is crashing the box)\n\nI think the problem has two parts:\n\nOne is a lot of apache process that has more than initial 4MB (thats how much \nprefork apache process has when i start it), are in memory. In just few \nminutes they have usually around 10-15MB each, and are moving from 4MB to 15MB \nslowly. (some of them are moving there faster, some slower)\n\nof course this is just making this box work slow, but not crashing.\n\nAnother issue is happening few times per day, one apache process is going \ncrazy, taking all available memory, crashing the box in around 3-4 seconds.\n\nIts hard to trace it, becouse there are other not-so-dangerous too big apache \nprocess (also some kind of bug or misconfiguration issue i guess). Hard to \npredict which one will sudennly go crazy and trace it, we would have to trace \nall new processes, and thats not possible.\n\nnow, since i set -v limit, i hope this box-crashing bug (the first one) wont \nhappen again, but i still have no idea why these apache processes are growing \nwith time, from 4MB to even 15MB... looks like some memory leak, becouse when \ni strace them, they are sometimes doing nothing, and still taking 15MB of \nmemory, compared to 4MB memory.\n\nIt seems similar to apache-mpm-worker, but with other numbers - with worker it \nwas around 10MB or so initially growing up to 70MB. And also one crazy  \nhappening few times a day.\n\n\nthanks for the -v tip, now i wait to see if server is still crashing or not, \nbut the other memory eating apach processes issue is still there. I dont know \nis it connected to the one that is taking ALL memory in seconds, but it might \nbe.", "id": 84090, "time": "2005-12-30T18:21:19Z", "creator": "juice@tpi.pl", "creation_time": "2005-12-30T18:21:19Z", "attachment_id": null}, {"count": 5, "text": "This bug was caused by hardware problem and wasn't Apache fault. Sorry for \ninconvience.", "bug_id": 38065, "is_private": false, "id": 84833, "time": "2006-01-20T21:43:13Z", "creator": "ruby@joker.linuxstuff.pl", "creation_time": "2006-01-20T21:43:13Z", "tags": [], "attachment_id": null}, {"count": 6, "text": "(In reply to comment #5)\n> This bug was caused by hardware problem and wasn't Apache fault. Sorry for \n> inconvience.\n\nWhat is this hardware problem ?\n\nI have exactly the same problem, using apache 2.2.4 and the worker MPM. On in a\nwhile one of the httpd children consume all the memory in a few seconds. I am\nrunning a pool of apache servers, and the problem occurs randomly on these,\nwhich make me thinks it's not a hardware issue. (I had some bad memory problem\nand the kernel panics, triggered by Machine Check events in my case, no weird\nprocess behavior or things like a process eating up memory).\n\n", "bug_id": 38065, "is_private": false, "id": 99062, "time": "2007-02-07T07:15:17Z", "creator": "gabriel@oxeva.fr", "creation_time": "2007-02-07T07:15:17Z", "tags": [], "attachment_id": null}, {"count": 7, "tags": [], "creator": "rob@alterlinks.fr", "attachment_id": null, "id": 99198, "time": "2007-02-09T13:45:44Z", "bug_id": 38065, "creation_time": "2007-02-09T13:45:44Z", "is_private": false, "text": "Me too I'm interrested in the answer if it was a hardware problem.\nI'm using 4 Apache 1.3.37 instances on one machine and have the same problem;\nOnly one of them forks every now and then a child that eats 2Gb (=all) RAM in \nabout 4 seconds time, then fills up the swap, slowing down the machine.\nEventually, I have the same message in syslog; \nFeb  9 22:07:17 diana kernel: Out of Memory: Killed process 32002 (httpd).\n\nI have a hard time believing it's a hardware problem; only one of the 4 apache \ninstalls is doing this, about 10 to 15 times a day. This \"problem\" started \nabout three weeks ago, never happened before.\nThe other three Apache instances are running fine.\n\nRob\n"}, {"count": 8, "tags": [], "bug_id": 38065, "is_private": false, "text": "Sorry, it's not my intention to change the bug report into some sort of \ndiscussion forum.\nI've upgraded yesterday PHP 5.2.0 to 5.2.1 and the problem disappeared. The \nother three Apache instances are using PHP 4.4.4, only the one instance having \nthis memory problem was using 5.2.0.\nRob starts to look into the direction of PHP ...  ", "id": 99288, "time": "2007-02-12T11:05:07Z", "creator": "rob@alterlinks.fr", "creation_time": "2007-02-12T11:05:07Z", "attachment_id": null}, {"count": 9, "tags": [], "bug_id": 38065, "attachment_id": null, "is_private": false, "id": 99782, "time": "2007-02-26T01:23:42Z", "creator": "wrowe@apache.org", "creation_time": "2007-02-26T01:23:42Z", "text": "1. you don't have to reopen the bug to add a question/comment, and your email\naddresses are all out there to share experiences (users@httpd.a.o is a great\nplace to do this, too).  Bugzilla isn't a user support forum, it's a defect\ntracing forum :)"}]