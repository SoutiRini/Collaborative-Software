[{"count": 0, "tags": [], "bug_id": 53871, "is_private": false, "text": "When starting Tomcat 7.0.29 and 7.0.30, and automatically deploying a war file from webapps the following error is thrown:\n14:01:06,380 ERROR [HostConfig:576] Error waiting for multi-thread deployment of context descriptors to complete java.util.concurrent.ExecutionException: java.lang.StackOverflowError\n    at java.util.concurrent.FutureTask$Sync.innerGet(FutureTask.java:252)\n    at java.util.concurrent.FutureTask.get(FutureTask.java:111)\n    at org.apache.catalina.startup.HostConfig.deployDescriptors(HostConfig.java:574)\n    at org.apache.catalina.startup.HostConfig.deployApps(HostConfig.java:470)\n    at org.apache.catalina.startup.HostConfig.start(HostConfig.java:1413)\n    at org.apache.catalina.startup.HostConfig.lifecycleEvent(HostConfig.java:313)\n    at org.apache.catalina.util.LifecycleSupport.fireLifecycleEvent(LifecycleSupport.java:119)\n    at org.apache.catalina.util.LifecycleBase.fireLifecycleEvent(LifecycleBase.java:90)\n    at org.apache.catalina.util.LifecycleBase.setStateInternal(LifecycleBase.java:401)\n    at org.apache.catalina.util.LifecycleBase.setState(LifecycleBase.java:346)\n    at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:1140)\n    at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:785)\n    at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)\n    at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1559)\n    at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1549)\n    at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334)\n    at java.util.concurrent.FutureTask.run(FutureTask.java:166)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)\n    at java.lang.Thread.run(Thread.java:722)\n\nCaused by: java.lang.StackOverflowError at java.util.HashSet.(HashSet.java:103) at org.apache.catalina.startup.ContextConfig.populateSCIsForCacheEntry(ContextConfig.java:2243) at org.apache.catalina.startup.ContextConfig.populateSCIsForCacheEntry(ContextConfig.java:2260) at org.apache.catalina.startup.ContextConfig.populateSCIsForCacheEntry(ContextConfig.java:2260)\n...(and many more identical lines)...\n\nHowever this works fine in 7.0.28.", "id": 162177, "time": "2012-09-14T12:40:44Z", "creator": "robert.pasztor@tss-yonder.com", "creation_time": "2012-09-14T12:40:44Z", "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 53871, "attachment_id": null, "id": 162218, "time": "2012-09-16T18:21:05Z", "creator": "markt@apache.org", "creation_time": "2012-09-16T18:21:05Z", "is_private": false, "text": "Can you provide the smallest possible WAR that reproduces this issue please?"}, {"count": 2, "tags": [], "creator": "robert.pasztor@tss-yonder.com", "attachment_id": null, "id": 162221, "time": "2012-09-16T21:24:17Z", "bug_id": 53871, "creation_time": "2012-09-16T21:24:17Z", "is_private": false, "text": "I've uploaded the minimal war file causing the issue on http://www.rent-a-car-cluj.com/app.war, since the upload on Apache is limited to 1Mb. \n\nThe app in the war is stripped from JSP's, classes and any item that was not relevant for the issue.\n\nI guess the issue is related to the high number of jars/classes in the libraries. (After removing several libraries, deployment went succesfully. I could not make a correlation with any specific library.\n\nSystem used: Win 7/64 bits."}, {"count": 3, "attachment_id": null, "creator": "markt@apache.org", "is_private": false, "id": 162223, "time": "2012-09-16T21:39:06Z", "bug_id": 53871, "creation_time": "2012-09-16T21:39:06Z", "tags": [], "text": "Perfect. I'm in the middle of something else right now but this is next on my to do list (unless someone beats me to it).\n\nThe test WAR is ~35MB for folks considering downloading it."}, {"count": 4, "tags": [], "text": "To quote from the 7.0.29 changelog:\n<quote>\nAs per section 1.6.2 of the Servlet 3.0 specification and clarification from the Servlet Expert Group, the servlet specification version declared in web.xml no longer controls if Tomcat scans for annotations. Annotation scanning is now always performed - regardless of the version declared in web.xml - unless metadata complete is set to true.\n</quote>\n\nI suspect this is why you see the issue with 7.0.29 onwards.\n\nHowever, I am unable to reproduce this, even if I drop -Xss to the bare minimum required while allowing the JVM to start.\n\nPlease do not re-open this issue unless you can provide the exact steps to reproduce on a clean install of the latest JVM, Tomcat 7.0.x etc.", "attachment_id": null, "bug_id": 53871, "id": 162225, "time": "2012-09-16T22:29:16Z", "creator": "markt@apache.org", "creation_time": "2012-09-16T22:29:16Z", "is_private": false}, {"count": 5, "tags": [], "text": "I had the same problem. Steps to reproduce are:\n\nDue to dependency management problems I deployed a WAR file containing two JAR files containing different versions of a library, where version 1 contained a class A which inherited from B and another version 2 which contained a class B inheriting from A.\nThe classes were loaded in such an order that A and B cyclically inherited from each other which leads to a stack overflow in populateSCIsForCacheEntry because it does not detect cycles in the inheritance tree.", "attachment_id": null, "id": 163787, "creation_time": "2012-12-03T11:49:22Z", "time": "2012-12-03T11:49:22Z", "creator": "mschuetz@gmail.com", "bug_id": 53871, "is_private": false}, {"count": 6, "tags": [], "text": "Changing to an enhancement to see what, if anything, can be done to provide a better error message.", "attachment_id": null, "id": 163789, "creation_time": "2012-12-03T12:35:02Z", "time": "2012-12-03T12:35:02Z", "creator": "markt@apache.org", "bug_id": 53871, "is_private": false}, {"count": 7, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "id": 163794, "time": "2012-12-03T13:22:33Z", "bug_id": 53871, "creation_time": "2012-12-03T13:22:33Z", "is_private": false, "text": "Better error message added to trunk and 7.0.x and will be included in 7.0.34 onwards."}, {"count": 8, "tags": [], "text": "I'm having the same problem, but it is not constant, some times it happens, some time dont. But something that I observed was that it happens more frequently when I'm using x86_64 oracle jvm.\n\njava version \"1.6.0_38\"\nJava(TM) SE Runtime Environment (build 1.6.0_38-b05)\nJava HotSpot(TM) 64-Bit Server VM (build 20.13-b02, mixed mode)\n\nCATALINA_OPTS=\"-XX:MaxPermSize=256m -Xmx1g\"", "is_private": false, "id": 164739, "creator": "kasten@touchtec.com.br", "time": "2013-01-18T18:24:57Z", "bug_id": 53871, "creation_time": "2013-01-18T18:24:57Z", "attachment_id": null}, {"count": 9, "tags": [], "creator": "John.Bize@ExceptionalSoftware.com", "attachment_id": null, "id": 164976, "time": "2013-02-01T12:49:27Z", "bug_id": 53871, "creation_time": "2013-02-01T12:49:27Z", "is_private": false, "text": "This was a serious show stopper.  Calling it an enhancement to make it work is confusing.\n\nIt only happened with certain wars, and oddly enough I could tweak the deploypath to cause it to occur or go away.  E.g. Whith one of my wars, when it was deployed to a path that started C:\\Progs\\... it failed with the populateSCIsForCacheEntry errors.  When I changed it to C:\\Prog\\..., it didn't.\n\nUnfortunately, this is not a practical solution for my current situation.  So until it is fixed, we are stuck at version 7.0.28.  Although this issue says it has been resolved, there is no indication of how it was resolved.  Did someone actually find and fix the problem, or just change the error message as suggested in by Mark Thomas?\n\nThanks."}, {"count": 10, "tags": [], "text": "(In reply to comment #9)\n1. There is no evidence that you have the same problem.\n\n2. There is a number of ways to configure annotation scanning, or avoid it altogether in a specific application. The bonus point is that your application will start up faster. Bugzilla is not a support forum to go into details.\n\nIt is also possible to configure a different value for -Xss.\n\n3. We are volunteers here. Feel free to propose a better patch than r1416502\n\nSometimes it is possible to change algorithm and unroll a recursion. I have not dug whether it is possible here.", "is_private": false, "id": 164986, "creation_time": "2013-02-01T17:30:10Z", "time": "2013-02-01T17:30:10Z", "creator": "knst.kolinko@gmail.com", "bug_id": 53871, "attachment_id": null}, {"count": 11, "tags": [], "text": "(In reply to comment #10)\n\nThanks for your reply, and thanks for all the volunteer efforts on this project.  It is appreciated, and I didn't mean to imply otherwise.\n\nI do believe I have the same problem.  When starting up 7.0.29 and deploying two WARs, one of my WARs fails to deploy with a very similar stack trace.  (I'm in deployWARs instead of deployDescriptors, but I think that must be due to a different version than the original post.  Other than that and the HashMap vs. HashSet, the stacks are pretty much the same.)  My stack ends with the following:\n\n...\nCaused by: java.lang.StackOverflowError at java.util.HashMap.get(HashMap.java:300) at org.apache.catalina.startup.ContextConfig.populateSCIsForCacheEntry(ContextConfig.java:2215) at org.apache.catalina.startup.ContextConfig.populateSCIsForCacheEntry(ContextConfig.java:2227) at ...\n\nThere are 1024 recursions at line 2227 before the stack is exhausted.  I'm not able to set -Xss large enough to make any difference. The populateSCIsForCacheEntry always recurses 1024 times and throws the StackOverflowError Error.  That seems like a very deep recursion.  The fact that different deploy paths (<Host appBase=...) can change the behavior doesn't make sense either.\n\nIt isn't fixed for me, but I will try to find another resolution.  \n\nThanks again.", "is_private": false, "id": 164990, "creation_time": "2013-02-01T20:29:06Z", "time": "2013-02-01T20:29:06Z", "creator": "John.Bize@ExceptionalSoftware.com", "bug_id": 53871, "attachment_id": null}, {"count": 12, "tags": [], "creator": "markt@apache.org", "is_private": false, "id": 164991, "attachment_id": null, "bug_id": 53871, "creation_time": "2013-02-01T20:34:03Z", "time": "2013-02-01T20:34:03Z", "text": "The point here is that if you ship an application that does this:\n\n<quote>\nDue to dependency management problems I deployed a WAR file containing two JAR files containing different versions of a library, where version 1 contained a class A which inherited from B and another version 2 which contained a class B inheriting from A.\nThe classes were loaded in such an order that A and B cyclically inherited from each other which leads to a stack overflow in populateSCIsForCacheEntry because it does not detect cycles in the inheritance tree.\n</quote>\n\nThen the application is going to fall over as soon as it hits those classes. That is an application bug, not a Tomcat bug.\n\nYou might be lucky and not use those classes at all in your application. In which case you wouldn't see this until Tomcat was updated to scan classes for annotations as intended by the Servlet 3.0 EG. Hence it might look like a Tomcat problem.\n\nIf you have a valid set of JARs that can trigger a stack overflow then that would be a new bug and one that would get fairly prompt attention."}, {"count": 13, "tags": [], "bug_id": 53871, "is_private": false, "text": "I have the same problem in 7.0.35 version. My application is very big - over 200 jars, and it's hard to identify the jar which couse the problem. There is no information about classes in infinite loop call stack.\n\nMy call stack:\n\n\nCaused by: java.lang.IllegalStateException: Unable to complete the scan for annotations for web application []. Possible root causes include a too low setting for -Xss and illegal cyclic inheritance dependencies\n\tat org.apache.catalina.startup.ContextConfig.processAnnotationsStream(ContextConfig.java:2109)\n\tat org.apache.catalina.startup.ContextConfig.processAnnotationsJar(ContextConfig.java:1981)\n\tat org.apache.catalina.startup.ContextConfig.processAnnotationsUrl(ContextConfig.java:1947)\n\tat org.apache.catalina.startup.ContextConfig.processAnnotations(ContextConfig.java:1932)\n\tat org.apache.catalina.startup.ContextConfig.webConfig(ContextConfig.java:1326)\n\tat org.apache.catalina.startup.ContextConfig.configureStart(ContextConfig.java:878)\n\tat org.apache.catalina.startup.ContextConfig.lifecycleEvent(ContextConfig.java:369)\n\tat org.apache.catalina.util.LifecycleSupport.fireLifecycleEvent(LifecycleSupport.java:119)\n\tat org.apache.catalina.util.LifecycleBase.fireLifecycleEvent(LifecycleBase.java:90)\n\tat org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5179)\n\tat org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)\n\t... 11 more\nCaused by: java.lang.StackOverflowError\n\tat org.apache.catalina.startup.ContextConfig.populateSCIsForCacheEntry(ContextConfig.java:2269)\n\tat org.apache.catalina.startup.ContextConfig.populateSCIsForCacheEntry(ContextConfig.java:2269)\n\tat org.apache.catalina.startup.ContextConfig.populateSCIsForCacheEntry(ContextConfig.java:2269)", "id": 165191, "time": "2013-02-12T09:07:17Z", "creator": "olexme@gmail.com", "creation_time": "2013-02-12T09:07:17Z", "attachment_id": null}, {"count": 14, "tags": [], "creator": "markt@apache.org", "is_private": false, "id": 165371, "attachment_id": null, "bug_id": 53871, "creation_time": "2013-02-19T15:16:17Z", "time": "2013-02-19T15:16:17Z", "text": "I'll see what I can do to add some class and/or JAR information to the error message."}, {"count": 15, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "id": 165375, "time": "2013-02-19T16:24:46Z", "bug_id": 53871, "creation_time": "2013-02-19T16:24:46Z", "is_private": false, "text": "I have added the class hierarchy to the error message in trunk and 7.0.x. It will be included in 7.0.38 onwards."}, {"count": 16, "tags": [], "text": "I've tried to upgrade to 7.0.37 (latest release at this moment).\nWe still encounter the same issue, but this time the logged stacktrace is more detailed than the one I've added in the initial description:\n\n10:49:06,990 ERROR [ContainerBase:903] ContainerBase.addChild: start:\norg.apache.catalina.LifecycleException: Failed to start component [StandardEngine[Catalina].StandardHost[localhost].StandardContext[/dossier]]\n        at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:154)\n        at org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:901)\n        at org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:877)\n        at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:633)\n        at org.apache.catalina.startup.HostConfig.deployDescriptor(HostConfig.java:657)\n        at org.apache.catalina.startup.HostConfig$DeployDescriptor.run(HostConfig.java:1637)\n        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)\n        at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334)\n        at java.util.concurrent.FutureTask.run(FutureTask.java:166)\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n        at java.lang.Thread.run(Thread.java:722)\nCaused by: java.lang.IllegalStateException: Unable to complete the scan for annotations for web application [/dossier]. Possible root causes include a\n too low setting for -Xss and illegal cyclic inheritance dependencies\n        at org.apache.catalina.startup.ContextConfig.processAnnotationsStream(ContextConfig.java:2109)\n        at org.apache.catalina.startup.ContextConfig.processAnnotationsJar(ContextConfig.java:1981)\n        at org.apache.catalina.startup.ContextConfig.processAnnotationsUrl(ContextConfig.java:1947)\n        at org.apache.catalina.startup.ContextConfig.processAnnotations(ContextConfig.java:1932)\n        at org.apache.catalina.startup.ContextConfig.webConfig(ContextConfig.java:1326)\n        at org.apache.catalina.startup.ContextConfig.configureStart(ContextConfig.java:878)\n        at org.apache.catalina.startup.ContextConfig.lifecycleEvent(ContextConfig.java:369)\n        at org.apache.catalina.util.LifecycleSupport.fireLifecycleEvent(LifecycleSupport.java:119)\n        at org.apache.catalina.util.LifecycleBase.fireLifecycleEvent(LifecycleBase.java:90)\n        at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5179)\n        at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)\n        ... 11 more\nCaused by: java.lang.StackOverflowError\n        at java.util.Random.nextInt(Random.java:239)\n        at sun.misc.Hashing.randomHashSeed(Hashing.java:254)\n        at java.util.HashMap.<init>(HashMap.java:255)\n        at java.util.HashMap.<init>(HashMap.java:305)\n        at java.util.HashSet.<init>(HashSet.java:103)\n        at org.apache.catalina.startup.ContextConfig.populateSCIsForCacheEntry(ContextConfig.java:2252)\n        at org.apache.catalina.startup.ContextConfig.populateSCIsForCacheEntry(ContextConfig.java:2269)\n        at org.apache.catalina.startup.ContextConfig.populateSCIsForCacheEntry(ContextConfig.java:2269)\n...\n\nI thought this might be helpful for further progress on this issue.\nAs mentioned in comment 10 and also on http://collab.sakaiproject.org/pipermail/sakai-dev/2012-November/019574.html ,\n\nI was able to workaround this exception by skipping the jar scannining in catalina.properties:\n\n# Additional JARs (over and above the default JARs listed above) to skip when\n# scanning for Servlet 3.0 pluggability features. These features include web\n# fragments, annotations, SCIs and classes that match @HandlesTypes. The list\n# must be a comma separated list of JAR file names.\norg.apache.catalina.startup.ContextConfig.jarsToSkip=*.jar\n\nIMHO this is still a workaround and not the fix.", "is_private": false, "id": 166072, "creator": "robert.pasztor@tss-yonder.com", "time": "2013-03-21T10:22:40Z", "bug_id": 53871, "creation_time": "2013-03-21T10:22:40Z", "attachment_id": null}, {"count": 17, "tags": [], "creator": "joe@kafsemo.org", "attachment_id": null, "id": 166150, "time": "2013-03-26T09:03:51Z", "bug_id": 53871, "creation_time": "2013-03-26T09:03:51Z", "is_private": false, "text": "Thanks for the new class hierarchy message. Running tomcat master with that improvement showed me exactly what the problem was - a loop caused by an incompatible version of Jaxen bundled with an old dom4j. Upgrading the dependencies in my webapp fixed it."}, {"count": 18, "tags": [], "bug_id": 53871, "attachment_id": null, "is_private": false, "id": 171293, "time": "2013-11-18T21:22:23Z", "creator": "tom.bonavia@kp.org", "creation_time": "2013-11-18T21:22:23Z", "text": "FYI seems kind of weird but we have experienced this when for various reasons we needed to kill -9 the tomcat process. Doesn't necessarily make sense but was fairly consistent."}]