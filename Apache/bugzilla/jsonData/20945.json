[{"count": 0, "tags": [], "bug_id": 20945, "text": "The apache docs describe a trivial 'slowdown' filter here:\n  http://httpd.apache.org/docs-2.0/mod/mod_ext_filter.html\nThis filter rearranges the order of SHTML includes.\n\nWhen both mod_ext_filter and mod_includes target the same document,\nmod_ext_filter is called once for each piece (which is very annoying, but that's\nanother bug).  If the shtml document is large, and the include is small, the\nsmall include will be printed first, causing major errors in the resulting web page.", "id": 39150, "time": "2003-06-20T10:32:52Z", "creator": "apache@neil.fraser.name", "creation_time": "2003-06-20T10:32:52Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "text": "Regarding the scenario where the example \"slowdown\" filter breaks SSI: Please\nsubmit a sample configuration that shows this problem so we can recreate/debug.\n Also, was anything written to the error log at the time?\n\nI don't know what you mean by a problem with a filter being \"called for each\npiece\" though.  mod_ext_filter will write data to the external filter as it\nreceives it, so if the content generator or another filter sends it down in\nrelatively small pieces, mod_ext_filter will write it to the external filter in\nthe same relatively small pieces.  The amount of data received by the external\nfilter in one piece is also limited by the amount of data the kernel will buffer\nfor a pipe.\n", "attachment_id": null, "id": 39215, "creator": "trawick@apache.org", "time": "2003-06-21T00:48:58Z", "bug_id": 20945, "creation_time": "2003-06-21T00:48:58Z", "is_private": false}, {"count": 2, "tags": [], "text": "> Regarding the scenario where the example \"slowdown\"\n> filter breaks SSI: Please submit a sample configuration\n> that shows this problem so we can recreate/debug.\n\nOk:\n1. Copy and paste the 'slowdown' filter from\n  http://httpd.apache.org/docs-2.0/mod/mod_ext_filter.html\n  (or any other filter, as far as I can tell)\n2. Create the following SHTML file called test.shtml:\n  <HTML><HEAD><TITLE>Title</TITLE></HEAD><BODY>\n  <H1>Start</H1>\n  <H3>[<!--#include virtual=\"sub\"-->]</H3>\n  <H1>End</H1>\n  </BODY></HTML>\n3. Create the following include file called sub.html:\n  This is the include.\n\nThe catch (which stumped me for quite a while) is that the include statement is\nlooking for \"sub\", but the file is actually called \"sub.html\".  Apache fills in\nthe missing extention, but the presence of mod_ext_filter causes the include to\nbe printed before the <HTML> tag, not in the <H3>.  With the full extention\nlisted, the include is printed in the correct place.  This is 100% repeatable.\n\nDowngrading this bug from 'Major' to 'Minor' now that I see that this only\naffects server-side includes which have partially broken references.\n\n> Also, was anything written to the error log at the time?\n\nNo, the error log is clean.\n\n(I'll respond to part 2 of your comment as soon as I generate some supporting data.)", "is_private": false, "bug_id": 20945, "id": 39233, "time": "2003-06-21T20:27:38Z", "creator": "apache@neil.fraser.name", "creation_time": "2003-06-21T20:27:38Z", "attachment_id": null}, {"count": 3, "tags": [], "text": "> I don't know what you mean by a problem with a filter being\n> \"called for each piece\" though.  mod_ext_filter will write data\n> to the external filter as it receives it, so if the content\n> generator or another filter sends it down in relatively small pieces,\n> mod_ext_filter will write it to the external filter in the same\n> relatively small pieces.  The amount of data received by the external\n> filter in one piece is also limited by the amount of data the kernel\n> will buffer for a pipe.\n\nTweak the slowdown filter so that it calls \"cat -n\" once on all files.  This\nadds line numbers to Apache's output.  The config is:\n  ExtFilterDefine slowdown mode=output cmd=\"/bin/cat -n\" preservescontentlength\n  <Location />\n  SetOutputFilter slowdown\n  </Location>\n\nNext, view source on the test.shtml page as described above (though with the\ninclude expanded to \"sub.html\" so that it works correctly).  The source looks\nlike this:\n\n     1\t<html><head><title>Title</title></head><body>\n     2\t<h1>Start</h1>\n     3\t<h3>[     1\tThis is the include.  <== NOTE THE \"1\" LINE NUMBER\n     4\t]</h3>\n     5\t<h1>End</h1>\n     6\t</body></html>\n\nAs you can see from the line numbers created by \"cat -n\", the filter was run\ntwice; once on each peice of the page.  Then the two peices were spliced\ntogether my mod_include.  In bug 20946 I argue that the SSI splicing should\noccur before the filter.  That way the filter would only be run once and would\nbe able to see the whole page in context.\n\nI hope these two posts answer your questions.  Let me know if I can provide any\nmore information.", "attachment_id": null, "bug_id": 20945, "id": 39234, "time": "2003-06-21T20:52:02Z", "creator": "apache@neil.fraser.name", "creation_time": "2003-06-21T20:52:02Z", "is_private": false}, {"count": 4, "tags": [], "text": "Do I understand you correctly, that if you use include virtual=\"sub.html\" (full\nname) then it works as expected? Then it's a dupe of Bug 17629 and has nothing\nto do with mod_ext_filter or mod_include. It's a core design flaw (which still\nhas to be resolved ...)", "is_private": false, "bug_id": 20945, "id": 39238, "time": "2003-06-21T22:50:03Z", "creator": "nd@perlig.de", "creation_time": "2003-06-21T22:50:03Z", "attachment_id": null}, {"count": 5, "tags": [], "text": "> Do I understand you correctly, that if you use include\n> virtual=\"sub.html\" (full name) then it works as expected?\n\nCorrect.  When I posted this bug, I thought it applied to all includes.  But\nfurther investigation showed it only affects redirected includes.\n\n> Then it's a dupe of Bug 17629 and has nothing to do with\n> mod_ext_filter or mod_include. It's a core design flaw\n> (which still has to be resolved ...)\n\nGood catch!  Totally different symptoms of what looks like the same bug. \nMarking as duplicate.\n\n*** This bug has been marked as a duplicate of 17629 ***", "attachment_id": null, "id": 39241, "creator": "apache@neil.fraser.name", "time": "2003-06-22T10:02:49Z", "bug_id": 20945, "creation_time": "2003-06-22T10:02:49Z", "is_private": false}]