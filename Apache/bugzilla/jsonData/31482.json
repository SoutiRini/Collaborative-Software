[{"count": 0, "tags": [], "bug_id": 31482, "text": "Hallo,\n\nI am using Tomcat 5 to run two webapplications. For both contexts I set cross \ncontext to true. In one webapplication I put some attributes in the session and \nuse a RequestDispatcher to pass the request to the other webapplication. There \nI need to get these attributes out of the session. This worked with Tomcat 4 \nbut is not working any more with Tomcat 5. I looked in the source code and \nfound the problem in the class org.apache.catalina.core.ApplicationHttpRequest. \nThere is the function HttpSession getSession(boolean create) that overrides the \nsame function of the super class. In Tomcat 4 this function was not overriden \nan thats why you got the exact same session object that you had in the other \ncontext. In Tomcat 5 now there is in this function getSession(boolean create) a \nnew session object created (line 503) that gets only the same session id as the \noriginal session of the other context. That means that this session has not my \nattributes any more which I had put in the session in the other context.\nFor me it is unclear why this function is overriden in this way. I commented \nthis function out and recompiled the class. Whith this it is working again. \nI think that should be fixed.", "id": 64398, "time": "2004-09-30T10:35:51Z", "creator": "R.Suchan@ESRI-Germany.de", "creation_time": "2004-09-30T10:35:51Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "creator": "yoavs@computer.org", "attachment_id": null, "id": 64432, "time": "2004-09-30T15:03:03Z", "bug_id": 31482, "creation_time": "2004-09-30T15:03:03Z", "is_private": false, "text": "This change was done on purpose: the intent of crossContext is not to allow \ncomplete session sharing.  It's for dispatching across web applications.  If \nyou need to pass attributes, you can put them in the request or response, and \nthey will be passed around."}]