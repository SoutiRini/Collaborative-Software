[{"count": 0, "tags": [], "bug_id": 51465, "attachment_id": 27243, "is_private": false, "id": 147698, "time": "2011-07-02T12:05:23Z", "creator": "patches@portaildulibre.fr", "creation_time": "2011-07-02T12:05:23Z", "text": "Created attachment 27243\nProfiler\n\nHello, \nI\u2019m using fop 1.0 (xmlgraphics 1.4) to generate PDF, I noticed that PDF generation with PNG or TIF image is 7 times longer. \nThe problem doesn't appear in the version 1.3 of xmlgraphics.\n\n\nThe problem seems to come from color model associated with the image.\n* if is_sRGB_stdStale = true then getRBG method is very fast\n* if is_sRGB_stdStale = false then getRBG  is slow because the treatment is\ndelegated to ICC_ColorSpace.toRGB\n\nThe color model is correct, but it is modified by the class\norg.apache.xmlgraphics.image.loader.impl.imageio.ImageLoaderImageIO\nby the following code : \n            if (providerIgnoresICC && cm instanceof ComponentColorModel) {\n                // Apply ICC Profile to Image by creating a new image with a new color model.\n                ICC_Profile iccProf = tryToExctractICCProfile(iiometa);\n                if (iccProf != null) {\n                    ColorModel cm2 = new ComponentColorModel(\n                            new ICC_ColorSpace(iccProf), cm.hasAlpha(), cm\n                                    .isAlphaPremultiplied(), cm\n                                    .getTransparency(), cm.getTransferType());\n                    WritableRaster wr = Raster.createWritableRaster(imageData\n                            .getSampleModel(), null);\n                    imageData.copyData(wr);\n                    BufferedImage bi = new BufferedImage(cm2, wr, cm2\n                            .isAlphaPremultiplied(), null);\n                    imageData = bi;\n                    cm = cm2;\n\nI removed this code and it works fine now, but it's dirty. What's the impact ?\n\nUntil a fix, best regards."}, {"count": 1, "tags": [], "creator": "gadams@apache.org", "attachment_id": null, "id": 159626, "time": "2012-06-01T20:10:23Z", "bug_id": 51465, "creation_time": "2012-06-01T20:10:23Z", "is_private": false, "text": "patch (from bug 51149) applied at:\n\nhttp://svn.apache.org/viewvc?rev=1345323&view=rev"}, {"count": 2, "tags": [], "bug_id": 51465, "text": "Hi, \n\nWe applied your patch but it dont fix my issue.\nWhat information do you need about the PNG Image ?\n\nRegards,", "id": 160136, "time": "2012-06-20T15:18:19Z", "creator": "patches@portaildulibre.fr", "creation_time": "2012-06-20T15:18:19Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "creator": "lmpmbernardo@gmail.com", "attachment_id": null, "is_private": false, "id": 160137, "time": "2012-06-20T15:32:06Z", "bug_id": 51465, "creation_time": "2012-06-20T15:32:06Z", "text": "this bug is linked to bug 51149 but the issue may be different... the slowdown addressed by the patch appeared due to a change in the jdk, not from a change in xmlgraphics (from 1.3 to 1.4).\n\nplease provide the image so that the issue can be investigated. does it happen with all images or just some?"}, {"count": 4, "tags": [], "creator": "patches@portaildulibre.fr", "attachment_id": 28971, "is_private": false, "id": 160138, "time": "2012-06-20T15:46:48Z", "bug_id": 51465, "creation_time": "2012-06-20T15:46:48Z", "text": "Created attachment 28971\nPNG image"}, {"attachment_id": null, "tags": [], "bug_id": 51465, "is_private": false, "count": 5, "id": 160139, "time": "2012-06-20T15:52:30Z", "creator": "patches@portaildulibre.fr", "creation_time": "2012-06-20T15:52:30Z", "text": "I attached the concerned PNG image.\n\nThe image is used inside a PDF document generated by FOP.\nThis image used by FOP 0.95+XmlGraphics 1.3.1 had no performance issue during the PDF generation.\nChanging JDK has no effect in my case."}, {"attachment_id": 29041, "tags": [], "bug_id": 51465, "is_private": false, "count": 6, "id": 160518, "time": "2012-07-08T23:15:09Z", "creator": "lmpmbernardo@gmail.com", "creation_time": "2012-07-08T23:15:09Z", "text": "Created attachment 29041\nan example to test icc profiles\n\nthe slowdown that happens between xmlgraphics-1.3 and xmlgraphics-1.4 is due to the fact that the color profiles were being ignored in 1.3 while in 1.4 they are taken into account, as the PNG specification suggests. so even though 1.3 was faster, it was not correct. the impact of removing the check for color profile is that the output may be wrong, although in most cases that does not happen because the color pixel values in the PNG image already match what the embedded color profile expects.\n\nattached is an example with two images that look the same when viewed in an application that does not apply color profiles (like Chrome), but that look different when viewed with an application that applies the color profile (like Safari). the example, when processed with FOP-0.95 (xmlgraphics-1.3) generates two images that look the same, while with FOP-1.0 (xmlgraphics-1.4) the images look different.\n\na workaround, as was suggested somewhere else, is to remove the color profile from the image (this can be done with imagemagick). obviously this only works in the cases where the color profile is not adding anything new to the image. another option is to use the new raw png image loader, which for now, still ignores the color profile (of course, this will not help in the cases where the color profile is important)."}, {"count": 7, "tags": [], "bug_id": 51465, "attachment_id": null, "text": "as a follow-up to previous comment 6, see bug 40676, with attachment 29132 (a patch that adds support for color profiles)", "id": 161448, "time": "2012-08-15T21:48:00Z", "creator": "lmpmbernardo@gmail.com", "creation_time": "2012-08-15T21:48:00Z", "is_private": false}]