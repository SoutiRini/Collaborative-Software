[{"attachment_id": null, "tags": [], "creator": "archie@dellroad.org", "is_private": false, "count": 0, "id": 91823, "time": "2006-08-02T14:33:57Z", "bug_id": 40167, "creation_time": "2006-08-02T14:33:57Z", "text": "There is race condition bug in SoftReferenceCache.java that has the net effect\nof wrongly putting an entry in the cache with null value. This causes all\nsubsequent requests for that value to hang forever in Object.wait() (inside\nrequestImpl()).\n\nThe bug stems from the code's failure to discern between the two meanings of\nHashMap.get(key) returning null, i.e., (a) the key does not exist in the map, or\n(b) the key exists but has a null value.\n\nSequence of events that trigger this bug:\n\n   1. putImpl(key, ref): key -> ref added to map (ref is a SoftRefKey)\n   2. soft reference to value 'ref' is cleared by JVM\n   3. clearImpl(key): key is cleared from the map\n   4. JVM reference queue thread invokes ref.cleared()\n   5. ref.cleared() does cache.map.remove(key), which returns null\n   6. null != this, so cleared() then does cache.map.put(key, null)\n   7. victim thread invokes requestImpl(key), sees that the map\n      contains the key but with null value, and so waits forever\n\nPatch to fix this bug:\n\n--- sources/org/apache/batik/util/SoftReferenceCache.java.orig  2006-08-01\n20:35:11.000000000 -0500\n+++ sources/org/apache/batik/util/SoftReferenceCache.java       2006-08-02\n08:57:12.301341434 -0500\n@@ -173,6 +173,8 @@\n             SoftReferenceCache cache = SoftReferenceCache.this;\n             if (cache == null) return; // Can't really happen.\n             synchronized (cache) {\n+                if (!cache.map.containsKey(key))\n+                    return;\n                 Object o = cache.map.remove(key);\n                 if (this == o) {\n                     // Notify other threads that they may have"}, {"count": 1, "tags": [], "bug_id": 40167, "attachment_id": null, "text": "Patch applied.  Many thanks!\n(I know how hard thread bugs can be).", "id": 92557, "time": "2006-08-26T10:51:47Z", "creator": "deweese@apache.org", "creation_time": "2006-08-26T10:51:47Z", "is_private": false}]