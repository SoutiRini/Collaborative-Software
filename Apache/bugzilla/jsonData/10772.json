[{"count": 0, "tags": [], "creator": "puckman@taglab.com", "attachment_id": null, "text": "Recently in a more complicated HA setup involving apache 1.3.xx we needed to be\nable to set additional headers in the request. This doesn't seem to be possible\nin 1.3.26.\n\nThis patch adds a directive \"RequestHeader\" to mod_headers.c. The syntax is\nexactly as for \"Header\".\n\n\n--- mod_headers.c-2002-07-13    Wed Mar 13 21:05:33 2002\n+++ mod_headers.c       Sat Jul 13 12:57:38 2002\n@@ -59,13 +59,19 @@\n /*\n  * mod_headers.c: Add/append/remove HTTP response headers\n  *     Written by Paul Sutton, paul@ukweb.com, 1 Oct 1996\n+ *     Updated with RequestHeader by Martin Algesten,\n+ *       puckman@taglab.com, 13 Jul 2002.\n  *\n  * New directive, Header, can be used to add/replace/remove HTTP headers.\n  * Valid in both per-server and per-dir configurations.\n+ * In addition directive, RequestHeader, can be used exactly as Header but\n+ * with the difference that the header is added to the request headers rather\n+ * than the response.\n  *\n  * Syntax is:\n  *\n- *   Header action header value\n+ *   Header        action header value\n+ *   RequestHeader action header value\n  *\n  * Where action is one of:\n  *     set    - set this header, replacing any old value\n@@ -77,7 +83,7 @@\n  * Where action is unset, the third argument (value) should not be given.\n  * The header name can include the colon, or not.\n  *\n- * The Header directive can only be used where allowed by the FileInfo \n+ * The directives can only be used where allowed by the FileInfo \n  * override.\n  *\n  * When the request is processed, the header directives are processed in\n@@ -112,7 +118,15 @@\n     hdr_unset = 'u'             /* unset header */\n } hdr_actions;\n \n+\n+typedef enum {\n+  hdrs_in  = 'i',               /* Add header to incoming (request) headers */\n+  hdrs_out = 'o'                /* Add header to outgoing (response) headers */\n+} hdrs_inout;\n+\n+\n typedef struct {\n+    hdrs_inout inout;\n     hdr_actions action;\n     char *header;\n     char *value;\n@@ -154,7 +168,7 @@\n }\n \n \n-static const char *header_cmd(cmd_parms *cmd, headers_conf * dirconf, char\n*action, char *hdr, char *value)\n+static const char *header_cmd(cmd_parms *cmd, headers_conf * dirconf, char\n*action, char *hdr, char *value, hdrs_inout inout )\n {\n     header_entry *new;\n     server_rec *s = cmd->server;\n@@ -169,6 +183,8 @@\n         new = (header_entry *) ap_push_array(serverconf->headers);\n     }\n \n+    new->inout = inout;\n+\n     if (!strcasecmp(action, \"set\"))\n         new->action = hdr_set;\n     else if (!strcasecmp(action, \"add\"))\n@@ -196,33 +212,56 @@\n     return NULL;\n }\n \n+static const char *outheader_cmd(cmd_parms *cmd, headers_conf * dirconf, char\n*action, char *hdr, char *value) {\n+  \n+  header_cmd( cmd, dirconf, action, hdr, value, hdrs_out );\n+\n+}\n+\n+static const char *inheader_cmd(cmd_parms *cmd, headers_conf * dirconf, char\n*action, char *hdr, char *value) {\n+\n+  header_cmd( cmd, dirconf, action, hdr, value, hdrs_in );\n+\n+}\n+\n static const command_rec headers_cmds[] =\n {\n-    {\"Header\", header_cmd, NULL, OR_FILEINFO, TAKE23,\n+    {\"Header\", outheader_cmd, NULL, OR_FILEINFO, TAKE23,\n+     \"an action, header and value\"},\n+    {\"RequestHeader\", inheader_cmd, NULL, OR_FILEINFO, TAKE23,\n      \"an action, header and value\"},\n     {NULL}\n };\n \n static void do_headers_fixup(request_rec *r, array_header *headers)\n {\n-    int i;\n+  int i; table *t;\n \n     for (i = 0; i < headers->nelts; ++i) {\n         header_entry *hdr = &((header_entry *) (headers->elts))[i];\n-        switch (hdr->action) {\n-        case hdr_add:\n-            ap_table_addn(r->headers_out, hdr->header, hdr->value);\n-            break;\n-        case hdr_append:\n-            ap_table_mergen(r->headers_out, hdr->header, hdr->value);\n-            break;\n-        case hdr_set:\n-            ap_table_setn(r->headers_out, hdr->header, hdr->value);\n-            break;\n-        case hdr_unset:\n-            ap_table_unset(r->headers_out, hdr->header);\n-            break;\n-        }\n+       switch (hdr->inout) {\n+       case hdrs_out:\n+         t = r->headers_out;\n+         break;\n+       case hdrs_in:\n+         t = r->headers_in;\n+         break;\n+       }\n+       switch (hdr->action) {\n+       case hdr_add:\n+         ap_table_addn(t, hdr->header, hdr->value);\n+         break;\n+       case hdr_append:\n+         ap_table_mergen(t, hdr->header, hdr->value);\n+         break;\n+       case hdr_set:\n+         ap_table_setn(t, hdr->header, hdr->value);\n+         break;\n+       case hdr_unset:\n+         ap_table_unset(t, hdr->header);\n+         break;\n+       }\n+\n     }\n \n }", "id": 19471, "time": "2002-07-13T12:23:52Z", "bug_id": 10772, "creation_time": "2002-07-13T12:23:52Z", "is_private": false}, {"count": 1, "tags": [], "creator": "nd@perlig.de", "attachment_id": null, "id": 32672, "time": "2003-03-07T17:07:40Z", "bug_id": 10772, "creation_time": "2003-03-07T17:07:40Z", "is_private": false, "text": "Sorry. 1.3 is in maintenance mode. This feature was implemented in 2.0 a long\ntime ago.\n\nThanks for using Apache."}]