[{"count": 0, "tags": [], "text": "A ${__CSVRead(file,next)} function can skip lines when it is called as a side\neffect of certain methods called in the course of a normal test.  This results\nfrom the FunctionProperty.getStringValue() method, which, under some conditions,\nevaluates the function.\n\nTwo methods that can do this in the course of a normal test are:\nHTTPSamplerBase.setProperty() (called when an HTTPSamplerBase is cloned)\nAbstractTaskElement.hashCode()\n\nI inserted \"new Exception().printStackTrace()\" into line 143 of\nFileRowContainer.java to get some stack traces for these two examples.  They're\nat the bottom of this report.\n\nI'll also upload a sample test plan, CSV file, and results.\n\njava.lang.Exception\n  at\norg.apache.jmeter.functions.FileRowColContainer.nextRow(FileRowColContainer.java:143)\n  at org.apache.jmeter.functions.FileWrapper.getColumn(FileWrapper.java:191)\n  at org.apache.jmeter.functions.FileWrapper.getColumn(FileWrapper.java:184)\n  at org.apache.jmeter.functions.CSVRead.execute(CSVRead.java:130)\n  at\norg.apache.jmeter.engine.util.CompoundVariable.execute(CompoundVariable.java:150)\n  at\norg.apache.jmeter.engine.util.CompoundVariable.execute(CompoundVariable.java:113)\n  at\norg.apache.jmeter.testelement.property.FunctionProperty.getStringValue(FunctionProperty.java:99)\n  at\norg.apache.jmeter.protocol.http.sampler.HTTPSamplerBase.setProperty(HTTPSamplerBase.java:200)\n  at\norg.apache.jmeter.testelement.AbstractTestElement.clone(AbstractTestElement.java:71)\n  at org.apache.jmeter.engine.TreeCloner.addNode(TreeCloner.java:64)\n  at org.apache.jorphan.collections.HashTree.traverseInto(HashTree.java:1006)\n  at org.apache.jorphan.collections.HashTree.traverse(HashTree.java:985)\n  at\norg.apache.jmeter.engine.StandardJMeterEngine.cloneTree(StandardJMeterEngine.java:178)\n  at\norg.apache.jmeter.engine.StandardJMeterEngine.run(StandardJMeterEngine.java:303)\n  at java.lang.Thread.run(Thread.java:534)\n\njava.lang.Exception\n  at\norg.apache.jmeter.functions.FileRowColContainer.nextRow(FileRowColContainer.java:143)\n  at org.apache.jmeter.functions.FileWrapper.getColumn(FileWrapper.java:191)\n  at org.apache.jmeter.functions.FileWrapper.getColumn(FileWrapper.java:184)\n  at org.apache.jmeter.functions.CSVRead.execute(CSVRead.java:130)\n  at\norg.apache.jmeter.engine.util.CompoundVariable.execute(CompoundVariable.java:150)\n  at\norg.apache.jmeter.engine.util.CompoundVariable.execute(CompoundVariable.java:113)\n  at\norg.apache.jmeter.testelement.property.FunctionProperty.getStringValue(FunctionProperty.java:99)\n  at\norg.apache.jmeter.testelement.property.AbstractProperty.hashCode(AbstractProperty.java:259)\n  at java.util.HashMap.hash(HashMap.java:261)\n  at java.util.HashMap.containsKey(HashMap.java:339)\n  at java.util.HashSet.contains(HashSet.java:180)\n  at\norg.apache.jmeter.testelement.AbstractTestElement.isTemporary(AbstractTestElement.java:397)\n  at\norg.apache.jmeter.testelement.AbstractTestElement.recoverRunningVersion(AbstractTestElement.java:361)\n  at\norg.apache.jmeter.threads.SamplePackage.recoverRunningVersion(SamplePackage.java:118)\n  at org.apache.jmeter.threads.TestCompiler.done(TestCompiler.java:140)\n  at org.apache.jmeter.threads.JMeterThread.run(JMeterThread.java:260)\n  at java.lang.Thread.run(Thread.java:534)", "attachment_id": null, "id": 59043, "creator": "chris.r.povirk@paytec.com", "time": "2004-06-10T18:29:18Z", "bug_id": 29508, "creation_time": "2004-06-10T18:29:18Z", "is_private": false}, {"count": 1, "tags": [], "creator": "chris.r.povirk@paytec.com", "text": "Created attachment 11819\nSample Test Plan", "id": 59044, "time": "2004-06-10T18:31:23Z", "bug_id": 29508, "creation_time": "2004-06-10T18:31:23Z", "is_private": false, "attachment_id": 11819}, {"count": 2, "text": "Created attachment 11820\nAccompanying CSV File", "bug_id": 29508, "is_private": false, "id": 59045, "time": "2004-06-10T18:32:13Z", "creator": "chris.r.povirk@paytec.com", "creation_time": "2004-06-10T18:32:13Z", "tags": [], "attachment_id": 11820}, {"count": 3, "tags": [], "text": "Created attachment 11821\nJMeter Saved Results", "attachment_id": 11821, "id": 59046, "creator": "chris.r.povirk@paytec.com", "time": "2004-06-10T18:33:17Z", "bug_id": 29508, "creation_time": "2004-06-10T18:33:17Z", "is_private": false}, {"count": 4, "text": "Created attachment 11822\nStack Traces in Context", "bug_id": 29508, "is_private": false, "id": 59047, "time": "2004-06-10T18:34:09Z", "creator": "chris.r.povirk@paytec.com", "creation_time": "2004-06-10T18:34:09Z", "tags": [], "attachment_id": 11822}, {"count": 5, "text": "This may be tricky (or impossible) to fix. The same problem will apply to all \nfunctions that have side effects, e.g. _StringFromFile(), __counter().\n\nA work-round is to add the function calls to a User Parameters pre-Processor \nelement, and then refer to the variables in the Samplers. \n\nThis may well make the test easier to read. It also means that the function \ncalls are all processed at the same time.\n\nBy the way, the __log() or __logn() functions can be used to provide trace \ninformation. See the function documentation.", "bug_id": 29508, "is_private": false, "id": 59074, "time": "2004-06-11T00:01:33Z", "creator": "sebb@apache.org", "creation_time": "2004-06-11T00:01:33Z", "tags": [], "attachment_id": null}, {"count": 6, "tags": [], "text": "I thought that might have been the case.  I did create a new\nFunctionProperty.hashCode() that called function.getRawParamters() instead of\ngetStringValue(), but that doesn't address the larger design choice at all.\n\nPerhaps there should really be getStringValue() and getRawStringValue() on every\nJMeterProperty?  Would that help?  Naturally, that's no minor change, but it\nlooks like FunctionProperty.getStringValue() has been tinkered with to avoid\nthis general problem in the past.\n\nThanks for the Pre-Processor tip... I'd been using User Defined Variables, which\nisn't a lot of fun, since, of course, they can't directly use other variables\nand functions in their values.  So it went like this:\n${__javaScript(\"${__CSVRead(/home/cpovirk/file.csv,0)}\",column0)}\n...\n\nThanks also for the ${__log}/${__logn} note.", "attachment_id": null, "id": 59127, "creator": "chris.r.povirk@paytec.com", "time": "2004-06-11T18:12:07Z", "bug_id": 29508, "creation_time": "2004-06-11T18:12:07Z", "is_private": false}]