[{"count": 0, "tags": [], "bug_id": 40881, "text": "- Message replication failes on the replciated node on creation of\n  a new session (login via form authentication).\n\n-  async cluster configruation is active\n\n- 2 cluster nodes\n\n- statup executed one by one, the second node was added after the first was up fully\n\n- is fully reproducable\n\nError LOG:\n----------------------------------------------------\n\nUnable to receive message through  TCP channel\n java.lang.NullPointerException\n        at\norg.apache.catalina.cluster.session.DeltaRequest.execute(DeltaRequest.java:176)\n        at\norg.apache.catalina.cluster.session.DeltaManager.handleSESSION_DELTA(DeltaManager.java:1573)\n        at\norg.apache.catalina.cluster.session.DeltaManager.messageReceived(DeltaManager.java:1522)\n        at\norg.apache.catalina.cluster.session.DeltaManager.messageDataReceived(DeltaManager.java:1271)\n        at\norg.apache.catalina.cluster.session.ClusterSessionListener.messageReceived(ClusterSessionListener.java\n:85)\n        at\norg.apache.catalina.cluster.tcp.SimpleTcpCluster.receive(SimpleTcpCluster.java:1167)\n        at\norg.apache.catalina.cluster.tcp.ClusterReceiverBase.messageDataReceived(ClusterReceiverBase.java:426)\n        at\norg.apache.catalina.cluster.io.ObjectReader.execute(ObjectReader.java:107)\n        at\norg.apache.catalina.cluster.tcp.TcpReplicationThread.drainChannel(TcpReplicationThread.java:138)\n        at\norg.apache.catalina.cluster.tcp.TcpReplicationThread.run(TcpReplicationThread.java:69)\n\n\n\ncluster confirguation:\n----------------------------------------------------\n   <Cluster  className=\"org.apache.catalina.cluster.tcp.SimpleTcpCluster\"\n                                         doClusterLog=\"true\"\n                                         clusterLogName=\"clusterlog\"\n                                         useDirtyFlag=\"true\"\n                                         expireSessionsOnShutdown=\"false\"\n                                         notifyListenersOnReplication=\"true\"\n                                        \nmanagerClassName=\"org.apache.catalina.cluster.session.DeltaManager\"\n                                        >\n               <Membership \nclassName=\"org.apache.catalina.cluster.mcast.McastService\"\n                                                          mcastAddr=\"228.0.0.4\"\n                                                          mcastPort=\"45552\"\n                                                          mcastFrequency=\"500\"\n                                                          mcastDropTime=\"3000\"/>\n               <Receiver\nclassName=\"org.apache.catalina.cluster.tcp.ReplicationListener\"\n                              tcpListenAddress=\"auto\"\n                              tcpListenPort=\"4001\"\n                              tcpSelectorTimeout=\"100\"\n                              tcpThreadCount=\"6\" />\n\n<!--\n               <Sender\nclassName=\"org.apache.catalina.cluster.tcp.ReplicationTransmitter\"\n                             replicationMode=\"pooled\"\n                             ackTimeout=\"15000\"\n                             waitForAck=\"false\" />\n-->\n        <Sender\n                       \nclassName=\"org.apache.catalina.cluster.tcp.ReplicationTransmitter\"\n                        replicationMode=\"asynchronous\"\n                        doProcessingStats=\"true\"\n                        doWaitAckStats=\"true\"\n                        waitForAck=\"true\"\n                        ackTimeout=\"30000\"\n                        resend=\"true\"\n                        keepAliveTimeout=\"320000\"\n                        keepAliveMaxRequestCount=\"-1\" />\n\n               <Valve className=\"org.apache.catalina.cluster.tcp.ReplicationValve\"\n                             \nfilter=\".*\\.gif;.*\\.js;.*\\.css;.*\\.png;.*\\.jpeg;.*\\.jpg;.*\\.htm;.*\\.html;.*\\.txt;\"\n                              primaryIndicator=\"true\" />\n\n         <!--\n                  <Deployer               \nclassName=\"org.apache.catalina.cluster.deploy.FarmWarDeployer\"\n                                            tempDir=\"${catalina.base}/war-temp\"\n                                          deployDir=\"${catalina.base}/war-deploy/\"\n                                           watchDir=\"${catalina.base}/war-listen/\"\n                                       watchEnabled=\"true\"/>\n          -->\n      </Cluster>", "id": 95368, "time": "2006-11-02T13:37:08Z", "creator": "paul.hettl@mindmatics.com", "creation_time": "2006-11-02T13:37:08Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "creator": "paul.hettl@mindmatics.com", "attachment_id": null, "text": "The problem is caused by the interlan implementaion of tomcat's cluster\nreplciation  DeltaSession. The cluster works only with Principal object derived\nfrom the \"org.apache.catalina.realm.GenericPrincipal\".\n\nI use an one principal implementation, just as implementation of\njava.security.Principal. This avoid any conatiner specific dependencies in the\nweb applications and works around serval problems with the out of the box\nprincipals of tomcat.\n\nTo get rid of the bug, i changed the cluster.session code to get rid of the\nSerializablePrincipal  class. To my readings this class is not very well \ndesigned. The optimised serilaisation can also be places in the implmenetion of\nthe principal interface ( read/write object) method of java serialisation.\n\nAs quick work around, find the changed classes in the attachment:\nCHANGED: SimpleTcpReplicationManager\n\t DeltaSession\nADDED:   PrincipalIO\n\n", "id": 95387, "time": "2006-11-03T05:26:41Z", "bug_id": 40881, "creation_time": "2006-11-03T05:26:41Z", "is_private": false}, {"count": 2, "tags": [], "creator": "paul.hettl@mindmatics.com", "attachment_id": 19078, "text": "Created attachment 19078\nDeltaSession  patched (5.5.20) \n\nuse plain java serialisation", "id": 95388, "time": "2006-11-03T05:28:46Z", "bug_id": 40881, "creation_time": "2006-11-03T05:28:46Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 40881, "attachment_id": 19079, "id": 95389, "time": "2006-11-03T05:29:47Z", "creator": "paul.hettl@mindmatics.com", "creation_time": "2006-11-03T05:29:47Z", "is_private": false, "text": "Created attachment 19079\nDeltaRequest (5.5.20)\n\nuse java serialisation"}, {"count": 4, "tags": [], "bug_id": 40881, "attachment_id": 19080, "id": 95390, "time": "2006-11-03T05:30:24Z", "creator": "paul.hettl@mindmatics.com", "creation_time": "2006-11-03T05:30:24Z", "is_private": false, "text": "Created attachment 19080\nadded\n\nadded util class for java serialisation. old code is still as comment availbale"}, {"count": 5, "tags": [], "creator": "paul.hettl@mindmatics.com", "attachment_id": 19081, "text": "Created attachment 19081\nSimpleTcpReplicationManager  (5.5.20)\n\nuse java serilaisation", "id": 95391, "time": "2006-11-03T05:30:56Z", "bug_id": 40881, "creation_time": "2006-11-03T05:30:56Z", "is_private": false}, {"count": 6, "tags": [], "creator": "paul.hettl@mindmatics.com", "attachment_id": 19082, "text": "Created attachment 19082\nbinary of the cluster  module sources\n\n- binary of the cluster  module sources\n- complied Win XP, JDK 1.5.0_05\n- including the 4 patches found as sources", "id": 95392, "time": "2006-11-03T05:32:33Z", "bug_id": 40881, "creation_time": "2006-11-03T05:32:33Z", "is_private": false}, {"count": 7, "text": "Please produce a really patch and don't send complete patch files.\n\nThen it is easier to help you,\n\nPeter", "creator": "pr@objektpark.de", "attachment_id": null, "id": 95403, "time": "2006-11-03T11:26:44Z", "bug_id": 40881, "creation_time": "2006-11-03T11:26:44Z", "tags": [], "is_private": false}, {"count": 8, "tags": [], "creator": "pr@objektpark.de", "is_private": false, "text": "I have deeper looked at your patch. Arrg!\nNot every Principal that we used implements the java.io.Serializable. Which realm you used?\n\nPeter\n\n", "id": 95404, "time": "2006-11-03T11:34:19Z", "bug_id": 40881, "creation_time": "2006-11-03T11:34:19Z", "attachment_id": null}, {"count": 9, "tags": [], "creator": "pr@objektpark.de", "attachment_id": null, "text": "Hups, I need info and bug is not closed.\nSorry!\n", "id": 95405, "time": "2006-11-03T11:35:07Z", "bug_id": 40881, "creation_time": "2006-11-03T11:35:07Z", "is_private": false}, {"count": 10, "tags": [], "bug_id": 40881, "text": "(In reply to comment #9)\n\nI use an own realm, simlarf to jdbc realm, that creats a principal that is \nserializable and only derived from from java.security.Principal.\n\nAs we also use caucho (resin) the have the authentication modules implemented \nto be independet from the application server type.\n\nThe realm supports a unix crypt password encryption.\n\nI would recomment strongly to make the cluster feature independet from the \nGenericPrincipal as it is to string coupled to tomcat this way.\n\nWhy don't keep both option or adding a serilaizer factory with a configuration\nproperty in the server.xml to choose the serilaizer class ?\n\n\n\n\n", "id": 95417, "time": "2006-11-04T01:06:10Z", "creator": "paul.hettl@mindmatics.com", "creation_time": "2006-11-04T01:06:10Z", "is_private": false, "attachment_id": null}, {"count": 11, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "text": "Changing this to an enhancement request.\n\nThe patch as provided can not be applied. GenericPrincipal is not Serializable so this would break all the existing Realms.\n\nTracing through the code, it is the test for if (!(gp.getRealm() == this)) in RealmBase.hasRole() that is at the root of all the complication. The only purpose of that code for quite some time is to log a debug message. Therefore, it should be possible to remove the Realm completely from GenericPrincipal making it easy to make it Serializable.\n\nThat said, these sort of changes are going to be API changing so will almost certainly have to limited to trunk (aka Tomcat 7).\n\nI'll propose this change on the dev list.", "id": 128931, "time": "2009-07-16T17:11:59Z", "bug_id": 40881, "creation_time": "2009-07-16T17:11:59Z", "is_private": false}, {"count": 12, "tags": [], "bug_id": 40881, "attachment_id": 23999, "id": 128934, "time": "2009-07-16T19:52:35Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2009-07-16T19:52:35Z", "is_private": false, "text": "Created attachment 23999\nAllow any serializable Principal to participate in replication\n\nHow about this patch? It should allow any serializable Principal to be written out and to be read by DeltaSession or SimpleTcpReplicationManager. I have not tested it, though.\n\nIt adds a boolean value to the serialized stream, to differentiate the two cases.\n\nThe patch is against trunk (TC 7)."}, {"count": 13, "tags": [], "bug_id": 40881, "attachment_id": null, "id": 152335, "time": "2011-12-20T20:34:40Z", "creator": "markt@apache.org", "creation_time": "2011-12-20T20:34:40Z", "is_private": false, "text": "This Tomcat 5 enhancement request has been moved to Tomcat 7 (the latest version) since Tomcat 5 development is limited and focussed on bugs and security issues whereas Tomcat 7 is still seeing new feature development."}, {"count": 14, "tags": [], "bug_id": 40881, "attachment_id": null, "text": "NOte sure when (this issur goes back some time) but all currently supported versions of Tomcat will replicate the Principal if it is Serializable.\n\nTomcat versions earlier than (9.0.x where GenericPrincipal is Serializable) also handle non-Serializable Principal instances.", "id": 180693, "time": "2015-02-01T19:37:59Z", "creator": "markt@apache.org", "creation_time": "2015-02-01T19:37:59Z", "is_private": false}]