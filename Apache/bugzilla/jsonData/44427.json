[{"count": 0, "tags": [], "creator": "rainer.jung@kippdata.de", "attachment_id": null, "text": "There is a common problem of how to compress/archive log files without\nrestarting the server processes.\n\nAlthough rotatelogs solves the problem partially by rotating size or time based,\nthere remains the problem of files to which data is written not often enough,\nlike error logs. Rotatelogs only checks the rotation conditions, when it has\nsomething to write to the files.\n\nPeople placing their log files on NFS and running compress cron jobs end up with\na lot of .nfs files, because the compression removes the original files, which\nare still open by rotatelogs waiting (maybe since a long time) for some message\nto handle.\n\nThe solution to (gracefully) restart Apache has the disadvantage, that it\ndestroys status information. Altough the info in the status handler is maybe not\nthat important to accumulate for a long time, there is the example of mod_jk\nthat allows dynamic but non-persistant changes in the configuration, thus\nallowing people to temporarily disable workers. Often people do thet in the\nevening to prepare for updates on the next day and automatic restart scripts for\nthe web servers will undo those changes :(\n\nAnother solution is to allow rotatlogs to wake up by an external trigger and\nthen close the open file if the rotation conditions are fulfilled.\n\nI rearranged the 2.2 rotatelogs and included a signal handler for SIGHUP, which\ncloses the file if size or tim conditions are met. The doesn't get immediately\nopened, because it might be, that there is no need for the new file for more\nthan the next rotation interval.\n\nThe code seems to work fine, but maybe could be improved. I don't attach a\npatch, because I moved bigger code parts into functions and thus the patch is\nnot really helpful. When looking at it logically, the changes mostky are:\n\n- Move condition checks into a function\n- Move Close and open into a function\n- Put the config variables into a struct in order to pass them more easily\nbetween main and functions\n- The same for the dynamic status variables\n- Register signal handler for SIGHUP that calls the rotation check and closes\nthe old file if necessary\n- unblock signal only during the apr_read_file() call\n\nI've got no idea, what needs to get changed for Windows.\n\nThe signal handling relies on the implementation detail of apr_file_read(), that\nit catches any interruption in the inner read in a loop.\n\nIf there is some interest in such a solution, I would also provide 2.3 and 2.2\nhead based code versions.", "id": 113772, "time": "2008-02-14T17:55:04Z", "bug_id": 44427, "creation_time": "2008-02-14T17:55:04Z", "is_private": false}, {"count": 1, "tags": [], "creator": "rainer.jung@kippdata.de", "attachment_id": 21534, "text": "Created attachment 21534\nFull implementation of SIGHUP handler\n\nBased on httpd 2.2.8.", "id": 113773, "time": "2008-02-14T17:57:47Z", "bug_id": 44427, "creation_time": "2008-02-14T17:57:47Z", "is_private": false}, {"count": 2, "tags": [], "creator": "kconnor@proofpoint.com", "attachment_id": null, "text": "I'd like this for webapp testing/debugging purposes.  It would make it easy to\nfind relevant log sections for a given test just by rotating the log prior to\nthe test.", "id": 113799, "time": "2008-02-15T11:05:55Z", "bug_id": 44427, "creation_time": "2008-02-15T11:05:55Z", "is_private": false}, {"count": 3, "tags": [], "text": "Caution: the proposed change doesn not close the file unconditionally. It closes\nthe file only, if the rules about size or time interval given when starting up\nrotatelogs are fulfilled. The only difference to standard rotatelogs is, that a\nstandard version does only check the rules, when a new log line is received. If\nthe logger is idle, then it keeps the file open indefinitly.\n\nFor your use case I would suggest a trivial enhancement: use a different signal\nto unconditionally close the file. There's a caveat then: in case we use the\ncommon interval based log rotation and we force a log rotation at some point in\ntime, we need to calculate the file name for the new log file in a different\nway. Otherwise we would very likely overwrite the most recent file. In this case\nwe should use the actual timestamp instead of the beginning of the interval for\nthe name. That would be OK, if the two uses were seperated by using different\nsignals, so that the admin knows, what the result of his action would be.", "attachment_id": null, "bug_id": 44427, "id": 113802, "time": "2008-02-15T13:03:28Z", "creator": "rainer.jung@kippdata.de", "creation_time": "2008-02-15T13:03:28Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 44427, "attachment_id": 21548, "id": 113834, "time": "2008-02-17T05:29:14Z", "creator": "rainer.jung@kippdata.de", "creation_time": "2008-02-17T05:29:14Z", "is_private": false, "text": "Created attachment 21548\nrotatelogs with HUP and INT handler based n 2.2 HEAD (r598272)"}, {"count": 5, "tags": [], "bug_id": 44427, "attachment_id": 21549, "id": 113835, "time": "2008-02-17T05:30:23Z", "creator": "rainer.jung@kippdata.de", "creation_time": "2008-02-17T05:30:23Z", "is_private": false, "text": "Created attachment 21549\nrotatelogs with HUP and INT handler based on trunk (r615901)"}, {"count": 6, "tags": [], "bug_id": 44427, "attachment_id": null, "id": 113836, "time": "2008-02-17T05:35:55Z", "creator": "rainer.jung@kippdata.de", "creation_time": "2008-02-17T05:35:55Z", "is_private": false, "text": "Inspired by the comment #2 of Kevin Connor I extended my idea to using two\ndifferent signals:\n\n- SIGHUP as before closes the used log file, if the time or size conditions are met\n- SIGINT closes the file unconditionally\n\nIn the SIGINT case when using time interval based rotation it is possible that\nthe new file gets opened before the time interval of the old file is over. In\nthis case the new file uses a file name based on the time of its opening, and\nnot the last start of interval. The end of use time for the file will still be\nthe normal interval boundary (or of course the next INT signal).\n\nIf someone wants to review this: I don't plan any more extensions, so the code\nshould be stable for review.\n"}, {"count": 7, "tags": [], "creator": "kconnor@proofpoint.com", "attachment_id": null, "text": " Would USR1 USR2 signals be more appropriate than SIGHUP SIGINT?", "id": 113894, "time": "2008-02-19T11:46:51Z", "bug_id": 44427, "creation_time": "2008-02-19T11:46:51Z", "is_private": false}, {"count": 8, "tags": [], "bug_id": 44427, "text": "This has been added to trunk in a slightly modified form.", "id": 123940, "time": "2009-01-11T09:39:12Z", "creator": "rainer.jung@kippdata.de", "creation_time": "2009-01-11T09:39:12Z", "is_private": false, "attachment_id": null}, {"count": 9, "tags": [], "text": "FYI (for google), the signal based rotation added to trunk on 2009-01-11\nwas mostly removed again a little later.  Now httpd will automatically\nstart a new logger if one dies, so you can just kill rotatelogs and\nhttpd will do the right thing, starting a new one for you.", "attachment_id": null, "id": 140825, "creator": "poirier@pobox.com", "time": "2010-10-19T11:44:33Z", "bug_id": 44427, "creation_time": "2010-10-19T11:44:33Z", "is_private": false}]