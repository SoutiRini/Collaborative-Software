[{"count": 0, "tags": [], "bug_id": 3165, "attachment_id": null, "text": "When using the <jsp:useBean> tag to initially create a bean (tested on page \ncontext beans only) and then later assigning a that bean an already existing \ninstance of that bean class, subsequent <jsp:getProperty> do not reference that \ninstance, instead it references an empty instance of the bean.\n\n//MessageBean the holds messages\n<jsp:useBean id=\"message\" class=\"MessageBean\"/>\n<%\n//MessageList is custom impl of the Vector class that \n//stores and returns MessageBeans.\n//WebSystem allows easy retreival application messages from the request object\nMessageList msgs = WebSystem.getSystem().getMessages(request);\n\nfor(int i = 0; i < msgs.size(); i++)\n{\n//I retreive an existing MessageBean that was stored within the current \n//MessageList.\n\n   message = msgs.getMessageBean(i);\n%>\n   //I try to display the messageText property of the MessageBean\n   //but all I get is the default value of messageText property instead of\n   //the current value.\t\t \n   <jsp:getProperty name=\"message\" property=\"messageText\"/><br>\n\n<%\t\t\t\n}\n%>\t\n\nThe above code is loosely based on an example shown in \"Web Development with \nJava Server Pages\" by Manning Publications (Chapter 6 page 174) as a correct \nway access beans through scriplets.  \n\nThere are 2 work-arounda for this\n\nWork Around 1.  Explicitly set the text of the MessageBean:\n\n<jsp:useBean id=\"message\" class=\"MessageBean\"/>\n<%\n//MessageList is custom impl of the Vector class that \n//stores and returns MessageBeans.\n//WebSystem allows easy retreival application messages from the request object\n\nMessageList msgs = WebSystem.getSystem().getMessages(request);\n\nfor(int i = 0; i < msgs.size(); i++)\n{\n//I retreive an existing MessageBean that was stored within the current \n//MessageList.  Then set the page context MessageBean's text explicitly.\n\n   message.setMessageText(msgs.getMessageBean(i).getMessageText());\n%>\n   //now the property displays properly\t \n   <jsp:getProperty name=\"message\" property=\"messageText\"/><br>\n\n<%\t\t\t\n}\n%>\n\nWork Around 2.  Use an expression instead of the <jsp:getProperty> tag.:\n\n<jsp:useBean id=\"message\" class=\"MessageBean\"/>\n<%\n//MessageList is custom impl of the Vector class that \n//stores and returns MessageBeans.\n//WebSystem allows easy retreival application messages from the request object\nMessageList msgs = WebSystem.getSystem().getMessages(request);\n\nfor(int i = 0; i < msgs.size(); i++)\n{\n//I retreive an existing MessageBean that was stored within the current \n//MessageList.\n\n   message = msgs.getMessageBean(i);\n%>\n   //This also works\n    <%= message.getMessageText()%><br>\n\n<%\t\t\t\n}\n%>\t\n\nIn my opinion (and from what I have read), the first code snippet should work \nidentically like the 2 work arounds but it does not.", "id": 4630, "time": "2001-08-19T13:10:59Z", "creator": "scottweaver@cinci.rr.com", "creation_time": "2001-08-19T13:10:59Z", "is_private": false}, {"count": 1, "tags": [], "creator": "Larry.Isaacs@sas.com", "attachment_id": null, "id": 4639, "time": "2001-08-20T05:37:51Z", "bug_id": 3165, "creation_time": "2001-08-20T05:37:51Z", "is_private": false, "text": "Thanks for the detailed bug report.  However, I'm afraid I must mark it as\nINVALID.  It basically a spec issue relating how <jsp:useBean> and\n<jsp:getProperty> work.  I believe Tomcat is implementing the \"intended\"\nbehavior correctly, or as best it can.  My justification is:\n\nThe Servlet 2.2 spec does not provide much about the relationship between\nthe instance variable and the variable stored in the specified or\ndefault scope.  They should be equal following the <jsp:useBean>.  But beyond\nthat, the spec doesn't address what you can do with respect to replacing the\ninstance variable. Since, it is not addressed, I don't think it can be assumed\nthat replacing it is supported.\n\nAlso, not addressed in the Servlet 2.2 spec is whether <jsp:getProperty>\nuses the instance variable or the variable stored in the specified or default\nscope.  However, the Servlet 2.3 *does* address this.  It states:\n\n    The value of the name attribute in jsp:setProperty and jsp:getProperty\n    will refer to an object that is obtained from the pageContext object\n    through its findAttribute()method.\n\nThis suggests that the \"real\" object is the one stored in the \"scope\", not\nthe instance variable.  Tomcat 3.2.x and up, implement getProperty and\nsetProperty this way. This is why your first implementation didn't work.\nYour workaround #1 worked by not replacing the object.\n\nMy interpretation of the spec is that it supports setting the object once.\nReplacing the object is beyond the spec and you are on your own as far as\nimplementing something that can update both the instance and scope variables.\nNote that there could be synchronization issues if the scope is \"session\"\nor \"application\".  You can use the getAttribute() and setAttribute()\nmethods on the pageContext, request, etc. to access the \"scoped\" variable.\n\nFeel free to e-mail jsp-spec-comments@eng.sun.com if you think the spec should\nbe changed. Hope this helps."}, {"attachment_id": null, "tags": [], "bug_id": 3165, "is_private": false, "count": 2, "id": 4644, "time": "2001-08-20T08:16:01Z", "creator": "scottweaver@cinci.rr.com", "creation_time": "2001-08-20T08:16:01Z", "text": "Thanks for your response and explanation.  I does appear, from looking at the \njava source file generated from jsp, that the object in question is placed into \nthe page context before it is populated with another object.  That tells me \nthat object in the page attribute carries no real reference to the object that \nwas initially defined by the <jsp:useBean> after it's been added to the page \ncontext using  setAttribute().   I do beleive the spec should be modified.  My \nreasoning for this is the fact that the <jsp:useBean> tag essentially \ntranslates to \"BeanClass myBean = null\" when the jsp is compiled into a \nservlet.  When I change the value of myBean, that change should be reflected \nanywhere else it(myBean) is referenced.  Since the instance variable I was \nchanging was itself initially defined by the <jsp:useBean> which in turn is \n(should be?) part of the page scope, it (myBean), regardless of how or where I \naccess it (as long as it has not gone out of scope) should carry a reference to \nthe initial object.\n\nI know you your not responsible for the specification, but I just wanted you \nsee where my logic was coming from.\n\nThanks,\nScott"}]