[{"count": 0, "tags": [], "text": "I am currently using Log4J with SysLogAppender with the following \nconfiguration file:\n\nThe configuration file I used included the following:\n----------------------------------------------------------\nlog4j.appender.syslog2=org.apache.log4j.net.SyslogAppender\nlog4j.appender.syslog2.SyslogHost=localhost\nlog4j.appender.syslog2.Facility=local2\nlog4j.appender.syslog2.layout=org.apache.log4j.PatternLayout\nlog4j.appender.syslog2.layout.ConversionPattern=%p  (%L) -%m%n\nlog4j.rootLogger=DEBUG, syslog2\n----------------------------------------------------------\n\nI noticed that a random UDP port is being opened by the Java application as \nshown:\n\n---------------------------------------------------------------------------\nlinux:~ # netstat -lpn\nActive Internet connections (only servers)\nProto Recv-Q Send-Q Local Address   Foreign Address  State PID/Program name\nudp        0      0 127.0.0.1:514   0.0.0.0:*              15994/syslog-ng\nudp        0      0 :::21457        :::*                   1364/java\n---------------------------------------------------------------------------\n\nFor security purposes, I would like to be able to bind this socket to a \nconfigurable port and ip address. \n\nI am currently using 1.2.14. Looking at the source code, I noticed that the \nSysLogWriter currently uses the default constructor DatagramSocket() which \nassigns a random port number and is bounded to a wildcard address.\n\nSysLogWriter.java (line 100 - 107):\n\n    try {\n      this.ds = new DatagramSocket();\n    }\n    catch (SocketException e) {\n      e.printStackTrace(); \n      LogLog.error(\"Could not instantiate DatagramSocket to \" + host +\n\t\t\t \". All logging will FAIL.\", e);\n    }\n\nI suggest that a fix should be implemented to use a parameterized constructor \ninstead such that users may set configurations such that the socket can be \nbounded to a user-defined port and/or local address.", "is_private": false, "id": 95918, "creator": "cn.monkey.1125@gmail.com", "time": "2006-11-17T00:35:08Z", "bug_id": 40990, "creation_time": "2006-11-17T00:35:08Z", "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 40990, "attachment_id": null, "text": "Agree this is important, especially with multi-homed machines.", "id": 98646, "time": "2007-01-28T04:29:53Z", "creator": "genman@noderunner.net", "creation_time": "2007-01-28T04:29:53Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 40990, "attachment_id": null, "text": "(In reply to comment #0)\n\n\n> I suggest that a fix should be implemented to use a parameterized constructor \n> instead such that users may set configurations such that the socket can be \n> bounded to a user-defined port and/or local address.\n\nIs it possible to write a testcase for this?  If so, would you do so?\n\nWhat would be reasonable names for these parameters?  port and inetaddress?", "id": 118242, "time": "2008-07-03T12:28:03Z", "creator": "thorbjoern@gmail.com", "creation_time": "2008-07-03T12:28:03Z", "is_private": false}]