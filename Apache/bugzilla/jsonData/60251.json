[{"count": 0, "tags": [], "creator": "apringle@gmail.com", "text": "I've been testing this on a Debian Jessie build (apache 2.4.10), as well as a Debian Stretch build (apache 2.4.23), with the same results.\n\nIn my configuration, mod_remoteip has a single internal trusted proxy, and X-Forwarded-For is evaluated for additional IPs. Under normal circumstances, it correctly \"stops\" at the first untrusted IP, which becomes REMOTE_ADDR.\n\nHowever, when a mod_rewrite rule is triggered, it seems to discard that IP address and continue moving up the X-Forwarded-For header, making the second untrusted IP become the REMOTE_ADDR.\n\nI'm including what I believe is the relevant configuration, but let me know if further details are needed:\n\nRemoteIPHeader X-Forwarded-For\nRemoteIPInternalProxy ::1\nDocumentRoot /app/httpdocs\n\n<Directory /app/httpdocs>\n    Require all granted\n    AllowOverride None\n\n    RewriteEngine On\n    RewriteCond %{REQUEST_FILENAME} !-s\n    RewriteRule ^.*$ index.php\n</Directory>\n\nIn the following tests, I'll connecting from localhost, which is ::1 (the defined RemoteIPInternalProxy). My index.php file is just echoing out the relevant $_SERVER variables.\n\nIn the first case, I hit /index.php directly, which does NOT trigger a RewriteRule. The REMOTE_ADDR becomes the right-most untrusted IP address, 3.3.3.3. This is, I believe, the correct behavior:\n\n# curl -H \"X-Forwarded-For: 1.1.1.1, 2.2.2.2, 3.3.3.3\" http://localhost/index.php\nX-Forwarded-For: 1.1.1.1, 2.2.2.2\nREMOTE_ADDR: 3.3.3.3\n\nNow, if I hit an invalid URL, the RewriteRule is triggered and rewritten to index.php. It appears that 3.3.3.3 is then discarded:\n\n# curl -H \"X-Forwarded-For: 1.1.1.1, 2.2.2.2, 3.3.3.3\" http://localhost/invalidurl\nX-Forwarded-For: 1.1.1.1\nREMOTE_ADDR: 2.2.2.2\n\n----\n\nTo show additional behavior, here's a more complicated example that shows that additional InternalProxies AND TrustedProxies are evaluated after the untrusted IP is discarded:\n\nRemoteIPHeader X-Forwarded-For\nRemoteIPInternalProxy ::1\nRemoteIPTrustedProxy 100.100.100.0/24\nRemoteIPProxiesHeader X-Trusted-Proxies\n\nIn the first case, the trusted proxy is added to the X-Trusted-Proxies header, and REMOTE_ADDR becomes the first untrusted IP (3.3.3.3). This is the correct behavior:\n\n# curl -H \"X-Forwarded-For: 1.1.1.1, 2.2.2.2, 100.100.100.2, ::1, 3.3.3.3, 100.100.100.1\" http://localhost/index.php\nX-Forwarded-For: 1.1.1.1, 2.2.2.2, 100.100.100.2, ::1\nX-Trusted-Proxies: 100.100.100.1\nREMOTE_ADDR: 3.3.3.3\n\nBut again, by triggering a RewriteRule, the 3.3.3.3 address is discarded, Internal & Trusted proxies seem to be evaluated again (X-Trusted-Proxies is now 100.100.100.2 instead of 100.100.100.1), and the REMOTE_ADDR becomes the second untrusted IP, 2.2.2.2:\n\n# curl -H \"X-Forwarded-For: 1.1.1.1, 2.2.2.2, 100.100.100.2, ::1, 3.3.3.3, 100.100.100.1\" http://localhost/invalidurl\nX-Forwarded-For: 1.1.1.1\nX-Trusted-Proxies: 100.100.100.2\nREMOTE_ADDR: 2.2.2.2", "id": 194398, "time": "2016-10-13T19:20:02Z", "bug_id": 60251, "creation_time": "2016-10-13T19:20:02Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "creator": "apringle@gmail.com", "text": "I enabled LogLevel rewrite:trace8 remoteip:trace8 on the system, and included the error log output below. It seems that mod_remoteip is getting executed again after mod_rewrite performs the INTERNAL_REDIRECT, and presumably working on already-modified X-Forwarded-For header. Would it be feasible to detect if such a redirect has happened and not re-process the request in that case?\n\nThis case seems similar to this patch: https://bz.apache.org/bugzilla/show_bug.cgi?id=49839\n\nFor what it's worth, a colleague of mine noted that the code from the above patch doesn't seem to exist in the current mod_remoteip.c source.\n\n---\n\n[Thu Oct 13 21:19:29.913894 2016] [remoteip:trace1] [pid 37] mod_remoteip.c(423): [client 3.3.3.3:53539] Using 3.3.3.3 as client's IP by proxies 100.100.100.1\n[Thu Oct 13 21:19:29.914754 2016] [rewrite:trace3] [pid 37] mod_rewrite.c(477): [client 3.3.3.3:53539] 3.3.3.3 - - [localhost/sid#7f85f6945470][rid#7f85f68bd0a0/initial] [perdir /app/httpdocs/] strip per-dir prefix: /app/httpdocs/invalidurl -> invalidurl\n[Thu Oct 13 21:19:29.914771 2016] [rewrite:trace3] [pid 37] mod_rewrite.c(477): [client 3.3.3.3:53539] 3.3.3.3 - - [localhost/sid#7f85f6945470][rid#7f85f68bd0a0/initial] [perdir /app/httpdocs/] applying pattern '^.*$' to uri 'invalidurl'\n[Thu Oct 13 21:19:29.914853 2016] [rewrite:trace4] [pid 37] mod_rewrite.c(477): [client 3.3.3.3:53539] 3.3.3.3 - - [localhost/sid#7f85f6945470][rid#7f85f68bd0a0/initial] [perdir /app/httpdocs/] RewriteCond: input='/app/httpdocs/invalidurl' pattern='!-s' => matched\n[Thu Oct 13 21:19:29.914863 2016] [rewrite:trace2] [pid 37] mod_rewrite.c(477): [client 3.3.3.3:53539] 3.3.3.3 - - [localhost/sid#7f85f6945470][rid#7f85f68bd0a0/initial] [perdir /app/httpdocs/] rewrite 'invalidurl' -> 'index.php'\n[Thu Oct 13 21:19:29.914872 2016] [rewrite:trace3] [pid 37] mod_rewrite.c(477): [client 3.3.3.3:53539] 3.3.3.3 - - [localhost/sid#7f85f6945470][rid#7f85f68bd0a0/initial] [perdir /app/httpdocs/] add per-dir prefix: index.php -> /app/httpdocs/index.php\n[Thu Oct 13 21:19:29.914884 2016] [rewrite:trace2] [pid 37] mod_rewrite.c(477): [client 3.3.3.3:53539] 3.3.3.3 - - [localhost/sid#7f85f6945470][rid#7f85f68bd0a0/initial] [perdir /app/httpdocs/] strip document_root prefix: /app/httpdocs/index.php -> /index.php\n[Thu Oct 13 21:19:29.914892 2016] [rewrite:trace1] [pid 37] mod_rewrite.c(477): [client 3.3.3.3:53539] 3.3.3.3 - - [localhost/sid#7f85f6945470][rid#7f85f68bd0a0/initial] [perdir /app/httpdocs/] internal redirect with /index.php [INTERNAL REDIRECT]\n[Thu Oct 13 21:19:29.915247 2016] [remoteip:trace1] [pid 37] mod_remoteip.c(423): [client 2.2.2.2:53539] Using 2.2.2.2 as client's IP by proxies 100.100.100.2\n[Thu Oct 13 21:19:29.915304 2016] [rewrite:trace3] [pid 37] mod_rewrite.c(477): [client 2.2.2.2:53539] 2.2.2.2 - - [localhost/sid#7f85f6945470][rid#7f85f68b9a60/initial/redir#1] [perdir /app/httpdocs/] strip per-dir prefix: /app/httpdocs/index.php -> index.php\n[Thu Oct 13 21:19:29.915358 2016] [rewrite:trace3] [pid 37] mod_rewrite.c(477): [client 2.2.2.2:53539] 2.2.2.2 - - [localhost/sid#7f85f6945470][rid#7f85f68b9a60/initial/redir#1] [perdir /app/httpdocs/] applying pattern '^.*$' to uri 'index.php'\n[Thu Oct 13 21:19:29.915372 2016] [rewrite:trace4] [pid 37] mod_rewrite.c(477): [client 2.2.2.2:53539] 2.2.2.2 - - [localhost/sid#7f85f6945470][rid#7f85f68b9a60/initial/redir#1] [perdir /app/httpdocs/] RewriteCond: input='/app/httpdocs/index.php' pattern='!-s' => not-matched\n[Thu Oct 13 21:19:29.915380 2016] [rewrite:trace1] [pid 37] mod_rewrite.c(477): [client 2.2.2.2:53539] 2.2.2.2 - - [localhost/sid#7f85f6945470][rid#7f85f68b9a60/initial/redir#1] [perdir /app/httpdocs/] pass through /app/httpdocs/index.php", "id": 194405, "time": "2016-10-13T21:30:00Z", "bug_id": 60251, "creation_time": "2016-10-13T21:30:00Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 60251, "attachment_id": null, "text": "I compiled the latest version of mod_remoteip.c from the github mirror, and this problem seems to be resolved. I believe it was fixed in commit r1688399 from June 2015, although that appears not to have made it into the any httpd releases yet (as of 2.4.23): \nhttps://mail-archives.apache.org/mod_mbox/httpd-cvs/201506.mbox/%3C20150630084017.C9616AC0043@hades.apache.org%3E\n\nAny idea when this might make its way into a release?", "id": 194435, "time": "2016-10-14T16:01:45Z", "creator": "apringle@gmail.com", "creation_time": "2016-10-14T16:01:45Z", "is_private": false}, {"count": 3, "attachment_id": null, "bug_id": 60251, "is_private": false, "id": 194436, "time": "2016-10-14T16:14:33Z", "creator": "covener@gmail.com", "creation_time": "2016-10-14T16:14:33Z", "tags": [], "text": "(In reply to Ari Pringle from comment #2)\n> I compiled the latest version of mod_remoteip.c from the github mirror, and\n> this problem seems to be resolved. I believe it was fixed in commit r1688399\n> from June 2015, although that appears not to have made it into the any httpd\n> releases yet (as of 2.4.23): \n> https://mail-archives.apache.org/mod_mbox/httpd-cvs/201506.mbox/\n> %3C20150630084017.C9616AC0043@hades.apache.org%3E\n> \n> Any idea when this might make its way into a release?\n\nLooks like it was not backported.  Will propose it shortly\n\n-    temp_sa = c->client_addr;\n+    temp_sa = r->useragent_addr ? r->useragent_addr : c->client_addr;\n\nI think this simplifies to just r->useragent_addr since r->useragent_addr starts out life as a copy of c->client_addr (ap_read_request)\n\nAP_DECLARE(const char *) ap_get_useragent_host(request_rec *r,\n                                               int type, int *str_is_ip)\n{\n    conn_rec *conn = r->connection;\n    int hostname_lookups;\n    int ignored_str_is_ip;\n\n    /* Guard here when examining the host before the read_request hook\n     * has populated an r->useragent_addr\n     */\n    if (!r->useragent_addr || (r->useragent_addr == conn->client_addr)) { \n\nThis also seems to be a little misleading in kind of the same way."}]