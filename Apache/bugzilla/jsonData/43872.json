[{"count": 0, "tags": [], "bug_id": 43872, "attachment_id": null, "id": 110590, "time": "2007-11-15T06:15:58Z", "creator": "emanuele.lombardi@casaccia.enea.it", "creation_time": "2007-11-15T06:15:58Z", "is_private": false, "text": "Apache Tomcat/5.5.25\nJVM 1.5.0_14-b03\nLinux 2.6.16.27-0.9-smp\n\nI found the following strange behavours:\n \n1) Within servlets, getMethod() returns \"GET\" even if the method actually used \nin the HTML form is \"post\". \n2) Variable coming from HTML are all null when method=\"post\" is used in the \nHTML form.\n3) Within servlets doPost(...) is never executed.\n\nI'm aware that this behavour is to \"big\" to be a bug (someone would have \nnoticed it before!) but I don't find anything in docs about any strange tricks \nneeded to get POSTed variables.\n\nAs a test case I wrote a servlet with both doPost(..) and doGet(..) and what \nit happens is that doGet is actually executed even if method=\"post\" is in the \nHTML. doPost is never executed and the servlet can't receive any value form \nthe HTML page when method=\"post\".\nHere it is my coding: \n   lele.html\n   lele.java\n   web.xml\nPlease run it and have a look at catalina.out. You'll see what you have typed \ninto the field \"var2\".\nThen change in lele.html method=\"get\" to method=\"post\", deploy and run the \nservlet again. You'll see that all variables are now null.  \n\nlele.html  ====================================================================\n<html>\n<body>\n<form name=\"work\" method=\"get\" action=\"/lele\" >\n<!-- method=\"get\" works properly\n     method=\"post\" doesn't work as supposed, but like a \"get\" -->\n<input type=\"hidden\" name=\"azione\" value=\"scelta\">\n<input type=\"text\"   name=\"matricola\">\n<input type=\"submit\" value=\"click here\">\n</form>\n</body>\n</html>\n\nlele.java  ==================================================\nimport java.io.*;\nimport javax.servlet.*;\nimport javax.servlet.http.*;\n\npublic class lele extends HttpServlet {\n    public void doPost (HttpServletRequest req, HttpServletResponse res) \nthrows IOException, ServletException {\n\ttry {\n\t    String azione    = req.getParameter(\"azione\"); \n\t    String matricola = req.getParameter(\"matricola\"); \n\t    String method    = req.getMethod(); \n\t    System.out.println(\"doPost: method=\"+method);\n\t    System.out.println(\"doPost: azione=\"+azione);\n\t    System.out.println(\"doPost: matr=\"+matricola);\n\t} catch(Exception e) {\n\t    System.out.println(\"doPost: errore \"+e.toString());\n\t}\n\tServletContext contesto = getServletContext();\n\tRequestDispatcher rd = contesto.getRequestDispatcher(\"/lele.html\");\n\trd.forward(req, res);\n    }\n    public void doGet (HttpServletRequest req, HttpServletResponse res) throws \nIOException, ServletException {\n\ttry {\n\t    String azione    = req.getParameter(\"azione\"); \n\t    String matricola = req.getParameter(\"matricola\"); \n\t    String method    = req.getMethod(); \n\t    System.out.println(\"doGet: method=\"+method);\n\t    System.out.println(\"doGet: azione=\"+azione);\n\t    System.out.println(\"doGet: matr=\"+matricola);\n\t} catch(Exception e) {\n\t    System.out.println(\"doGet: errore \"+e.toString());\n\t}\n\tServletContext contesto = getServletContext();\n\tRequestDispatcher rd = contesto.getRequestDispatcher(\"/lele.html\");\n\trd.forward(req, res);\n    }\n}\n\nweb.xml ====================================================================\n<web-app>\n    <display-name>Applicazione \"lele\"</display-name>\n     <servlet>\n      <servlet-name>lele</servlet-name>\n      <description>lele nostra</description>\n      <servlet-class>lele</servlet-class>\n     </servlet>\n     <servlet-mapping>\n      <servlet-name>lele</servlet-name>\n      <url-pattern>/index.html</url-pattern>\n     </servlet-mapping>\n    <session-config>\n      <session-timeout>30</session-timeout> \n    </session-config>\n</web-app>"}, {"count": 1, "tags": [], "bug_id": 43872, "attachment_id": null, "id": 110848, "time": "2007-11-20T06:52:12Z", "creator": "emanuele.lombardi@casaccia.enea.it", "creation_time": "2007-11-20T06:52:12Z", "is_private": false, "text": "The same behavous is with Tomcat 6.0.14\nI'm sure I miss something but I can't findout what.\n\n"}, {"count": 2, "attachment_id": null, "bug_id": 43872, "is_private": false, "id": 110895, "time": "2007-11-20T15:06:19Z", "creator": "grnch@gmx.net", "creation_time": "2007-11-20T15:06:19Z", "tags": [], "text": "(In reply to comment #1)\n> The same behavous is with Tomcat 6.0.14\n> I'm sure I miss something but I can't findout what.\n\nYes, you are missing something. You form's action points to \"/lele\", but this \nURL is a directory, so Tomcat issues a HTTP redirect to the correct directory \npath \"/lele/\".\n\nMost browsers will follow a HTTP redirect with a GET request, even if the \noriginal form submission was POST.\n\nTo fix your example, just set your form action to \"/lele/\" or \"/lele/\nindex.html\" so your servlet gets accessed directly without any redirects, and \nyou will see the doPost() method and the form parameters.\n"}, {"count": 3, "tags": [], "text": "Ivan, thank you very much for your kind help\nEmanuele", "attachment_id": null, "bug_id": 43872, "id": 110905, "time": "2007-11-21T02:17:28Z", "creator": "emanuele.lombardi@casaccia.enea.it", "creation_time": "2007-11-21T02:17:28Z", "is_private": false}]