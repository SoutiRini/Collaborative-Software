[{"count": 0, "tags": [], "bug_id": 59654, "attachment_id": null, "id": 191369, "time": "2016-06-02T02:26:01Z", "creator": "huxing.zhang@gmail.com", "creation_time": "2016-06-02T02:26:01Z", "is_private": false, "text": "What the spec says:\nJSP.7.3.1 Identifying Tag Library Descriptors\n...\nTLD files should not be placed in /WEB-INF/classes or /WEB-INF/lib, and must not be placed inside /WEB-INF/tags or a subdirectory of it, unless named implicit.tld and intended to configure an implicit tag library with its JSP version and tlib-version.\n\n\nOut test case:\nWe have simple web app with the following structure:\n\ntest\n\u251c\u2500\u2500 WEB-INF\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 classes\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 tags\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 test.tld\n\u2514\u2500\u2500 taglib.jsp\n\ntest.tld:\n\n<?xml version=\"1.0\" encoding=\"UTf-8\" ?>\n\n<taglib version=\"2.0\">\n  <description></description>\n  <display-name></display-name>\n  <tlib-version>1.0</tlib-version>\n  <short-name>f</short-name>\n  <function>\n    <name>get</name>\n    <function-class>java.lang.System</function-class>\n    <function-signature>java.lang.String getProperty(java.lang.String)</function-signature>\n  </function>\n</taglib>\n\ntaglib.jsp:\n\n<%@page contentType=\"text/html;charset=UTF-8\" pageEncoding=\"UTF-8\"%>\n<%@ taglib uri=\"/WEB-INF/tags/test.tld\" prefix=\"f\"%>\n<html>\n<body>\n\t<h3>${f:get(\"java.home\")}</h3>\n</body>\n</html>\n\nTomcat 7.0.69 behavior:\nAfter deploying the test web app and visit http://localhost:8080/test/taglib.jsp, the jsp page gets compiled and java home has been correctly displayed.\n\nTomcat 8 & 9 trunk behavior:\nWhen visiting http://localhost:8080/test/taglib.jsp, server responded with HTTP 500:\n\nHTTP Status 500 - Unable to find taglib \"f\" for URI: /WEB-INF/tags/test.tld\n\norg.apache.jasper.JasperException: Unable to find taglib \"f\" for URI: /WEB-INF/tags/test.tld\n\torg.apache.jasper.compiler.DefaultErrorHandler.jspError(DefaultErrorHandler.java:55)\n\torg.apache.jasper.compiler.ErrorDispatcher.dispatch(ErrorDispatcher.java:277)\n\torg.apache.jasper.compiler.ErrorDispatcher.jspError(ErrorDispatcher.java:75)\n\torg.apache.jasper.compiler.TagLibraryInfoImpl.<init>(TagLibraryInfoImpl.java:183)\n\torg.apache.jasper.compiler.Parser.parseTaglibDirective(Parser.java:421)\n\torg.apache.jasper.compiler.Parser.parseDirective(Parser.java:479)\n\torg.apache.jasper.compiler.Parser.parseElements(Parser.java:1435)\n\torg.apache.jasper.compiler.Parser.parse(Parser.java:139)\n\torg.apache.jasper.compiler.ParserController.doParse(ParserController.java:227)\n\torg.apache.jasper.compiler.ParserController.parse(ParserController.java:100)\n\torg.apache.jasper.compiler.Compiler.generateJava(Compiler.java:199)\n\torg.apache.jasper.compiler.Compiler.compile(Compiler.java:356)\n\torg.apache.jasper.compiler.Compiler.compile(Compiler.java:336)\n\torg.apache.jasper.compiler.Compiler.compile(Compiler.java:323)\n\torg.apache.jasper.JspCompilationContext.compile(JspCompilationContext.java:585)\n\torg.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:363)\n\torg.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:396)\n\torg.apache.jasper.servlet.JspServlet.service(JspServlet.java:340)\n\tjavax.servlet.http.HttpServlet.service(HttpServlet.java:729)\n\torg.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)\n\n\nConclusion:\nClearly the tomcat 7 behavior is against spec, which I think should be fixed.\n\n\nAnalysis:\nAfter some digging, I found that the tld file is skipped during tld scan phase. However, when parsing tag lib directive, the org.apache.jasper.compiler.TagLibraryInfoImpl#generateTLDLocation didn't check the tld file location that is prohibited by spec.\nSince the implementation is quite different between tomcat 7 % tomcat 8+. I found it hard to backport the tomcat 8 implementation to tomcat 7. Therefore, the fix should be specific to tomcat 7(tomcat 6 is not investigated.)\n\n\nProposed Fix:\nPlease refer to the attachment.\nI've added a dedicated message to indicate such an behaivor is violating spec.\n\np.s. \nShould we also add the dedicated message to tomcat 8+ ? Because the message \"Unable to find taglib \"f\" for URI: /WEB-INF/tags/test.tld\"  is somewhat confusing. The file does exist, it is the spec that requires tomcat not to load it."}, {"count": 1, "tags": [], "creator": "huxing.zhang@gmail.com", "attachment_id": 33908, "text": "Created attachment 33908\npatch against tomcat 7 trunk", "id": 191370, "time": "2016-06-02T02:33:19Z", "bug_id": 59654, "creation_time": "2016-06-02T02:33:19Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 59654, "text": "The improved message part of the fix has been applied to:\n- 9.0.x for 9.0.0.M7 onwards\n- 8.5.x for 8.5.3 onwards\n- 8.0.x for 8.0.36 onwards", "id": 191415, "time": "2016-06-06T13:28:19Z", "creator": "markt@apache.org", "creation_time": "2016-06-06T13:28:19Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "text": "Patch applied to 7.0.x for 7.0.70 onwards and 6.0p.x for 6.0.46 onwards.", "id": 191416, "time": "2016-06-06T13:42:51Z", "bug_id": 59654, "creation_time": "2016-06-06T13:42:51Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 59654, "text": "I think this should just be a warning in older releases of Tomcat. Our application does place taglibs here. The application was built against servlet spec 2.5 (as declared in the web.xml) and the accompanying JSP spec 2.1, where there was no such requirement.\n\nWe can update this for future versions of the product, but clients with older versions won't be able to pick up any Tomcat security fixes past 7.0.69.", "id": 193425, "time": "2016-08-31T03:31:07Z", "creator": "evan.greensmith@exari.com", "creation_time": "2016-08-31T03:31:07Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "creator": "evan.greensmith@exari.com", "attachment_id": null, "text": "(In reply to Mark Thomas from comment #3)\n> Patch applied to 7.0.x for 7.0.70 onwards and 6.0p.x for 6.0.46 onwards.\n\nI think applying this to 6.0.x is a bug. The \"which version?\" page http://tomcat.apache.org/whichversion.html states 6.0.x uses jsp spec 2.1, where this is not a requirement.", "id": 193426, "time": "2016-08-31T03:34:11Z", "bug_id": 59654, "creation_time": "2016-08-31T03:34:11Z", "is_private": false}, {"count": 6, "tags": [], "bug_id": 59654, "attachment_id": null, "id": 193427, "time": "2016-08-31T07:40:41Z", "creator": "markt@apache.org", "creation_time": "2016-08-31T07:40:41Z", "is_private": false, "text": "The requirement does apply to Tomcat 7.0.x and 6.0.x. It is present in JSP 2.1 and JSP 2.2. It is in the same section (JSP.7.3.1) as quoted in the original report."}, {"count": 7, "tags": [], "text": "(In reply to Mark Thomas from comment #6)\n> The requirement does apply to Tomcat 7.0.x and 6.0.x. It is present in JSP\n> 2.1 and JSP 2.2. It is in the same section (JSP.7.3.1) as quoted in the\n> original report.\n\nYou're right. I was mistaken.\n\nIt is a frustrating change to back-port so far. Admittedly we're complicit in being non-compliant to the spec; though the same can be said for tomcat, websphere and weblogic, which all did allow this. It is not a change that will fix any application. C'est la vie, I guess.", "attachment_id": null, "id": 193458, "creator": "evan.greensmith@exari.com", "time": "2016-09-02T03:12:01Z", "bug_id": 59654, "creation_time": "2016-09-02T03:12:01Z", "is_private": false}]