[{"count": 0, "tags": [], "bug_id": 45285, "text": "According to the section EE.5.2.3 of the Java EE specification:\n------------------------\nResource annotations may appear on any of the classes listed above, or on any superclass of any class listed above. A resource annotation on any class in the inheritance hierarchy defines a resource needed by the application component.\n------------------------\n\nI use JSF managed beans with @EJB annotated members.\nIf a resource is annotated in a super class of a class it's not injected.\n\nExample:\n\npublic class Base{\n@EJB\nprivate SomeService service;\n....\n}\n\npublic class Child implements Base{\n....\n}\n\nBase class used as managed bean has 'service' injected.\nChild class used as managed bean does NOT have 'service' injected.\n\nIf I dare suggest the problem source ...\n\nAs I can see org.apache.catalina.util.DefaultAnnotationProcessor is used. It has the following lines in its  'public void processAnnotations(Object instance)' method:\n....\nField[] fields = instance.getClass().getDeclaredFields();\n....\nMethod[] methods = instance.getClass().getDeclaredMethods();\n....\n\n\nClass.getDeclaredFields method returns 'public, protected, default (package) access, and private fields, but excludes inherited fields'.\n\nThe same thing is with Class.getDeclaredMethods.", "id": 118002, "time": "2008-06-25T23:58:28Z", "creator": "divanov@khmb.ru", "creation_time": "2008-06-25T23:58:28Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 45285, "text": "A fix has been committed to trunk and proposed for 6.0.x", "id": 118428, "time": "2008-07-09T14:07:06Z", "creator": "markt@apache.org", "creation_time": "2008-07-09T14:07:06Z", "is_private": false, "attachment_id": null}, {"attachment_id": null, "tags": [], "creator": "markt@apache.org", "is_private": false, "count": 2, "id": 118603, "time": "2008-07-13T11:20:51Z", "bug_id": 45285, "creation_time": "2008-07-13T11:20:51Z", "text": "This has been fixed in 6.0.x and will be included in 6.0.18 onwards."}, {"attachment_id": null, "tags": [], "creator": "markt@apache.org", "is_private": false, "count": 3, "id": 120913, "time": "2008-09-24T05:18:40Z", "bug_id": 45285, "creation_time": "2008-09-24T05:18:40Z", "text": "*** Bug 45869 has been marked as a duplicate of this bug. ***"}, {"count": 4, "tags": [], "creator": "removeps-code@yahoo.com", "is_private": false, "id": 121022, "attachment_id": null, "bug_id": 45285, "creation_time": "2008-09-26T08:55:24Z", "time": "2008-09-26T08:55:24Z", "text": "I downloaded Tomcat 6.0.18 yesterday and tried again.  With the workaround mentioned in the JSF bug, which is to add the context-param for injectionProvider, the problem is still there\n\n<context-param>\n   <param-name>com.sun.faces.injectionProvider</param-name>\n   <param-value>com.sun.faces.vendor.WebContainerInjectionProvider</param-value>\n</context-param>\n\nYour comments indicated that this bug is fixed in 6.0.18."}, {"count": 5, "tags": [], "bug_id": 45285, "text": "Sorry - my bad. The fixed missed the preDestroy and postContruct methods. I'll get that fixed.", "id": 121027, "time": "2008-09-26T11:06:26Z", "creator": "markt@apache.org", "creation_time": "2008-09-26T11:06:26Z", "is_private": false, "attachment_id": null}, {"count": 6, "tags": [], "bug_id": 45285, "text": "Created attachment 22728\npostConstruct/preDestroy in super classes\n\nHere is a patch that is fixing this issue for postConstruct/preDestroy methods in super classes (private)", "id": 121512, "time": "2008-10-14T09:56:40Z", "creator": "florent.benoit@objectweb.org", "creation_time": "2008-10-14T09:56:40Z", "is_private": false, "attachment_id": 22728}, {"count": 7, "tags": [], "bug_id": 45285, "text": "Thanks for the patch.  I don't have the compile environment, so will just close verify the bug in the next build.", "id": 121516, "time": "2008-10-14T11:57:27Z", "creator": "removeps-code@yahoo.com", "creation_time": "2008-10-14T11:57:27Z", "is_private": false, "attachment_id": null}, {"count": 8, "tags": [], "creator": "florent.benoit@objectweb.org", "attachment_id": 22738, "text": "Created attachment 22738\nUpdated patch for fields/methods\n\nI notice that the fix that was done by Mark wasn't right also for attributes/methods.\n\nBecause even if we go in the upper classes with a loop, when checking the field/methods we were using instance.getClass() and not the clazz object so fields/methods of superclasses were never obtained.\n\nAlso the default name for ENC field/methods should contain the super class name and not the instance name, so I added the clazz parameter to the lookup methods.", "id": 121551, "time": "2008-10-15T08:48:16Z", "bug_id": 45285, "creation_time": "2008-10-15T08:48:16Z", "is_private": false}, {"count": 9, "tags": [], "bug_id": 45285, "text": "Created attachment 22739\nbinary of the patch\n\nFor people without compiling env, here is the class", "id": 121552, "time": "2008-10-15T08:49:41Z", "creator": "florent.benoit@objectweb.org", "creation_time": "2008-10-15T08:49:41Z", "is_private": false, "attachment_id": 22739}, {"attachment_id": null, "tags": [], "creator": "markt@apache.org", "is_private": false, "count": 10, "id": 121686, "time": "2008-10-20T02:26:06Z", "bug_id": 45285, "creation_time": "2008-10-20T02:26:06Z", "text": "Thanks for the review and the new patch. I didn't apply the new patch directly as there were a number of white space changes that made it harder to read. The proposed patch is http://people.apache.org/~markt/patches/2008-10-20-bug45285-v2.patch"}, {"count": 11, "text": "This has been applied to 6.0.x and will be in 6.0.19 onwards.", "bug_id": 45285, "is_private": false, "id": 121900, "time": "2008-10-27T06:28:44Z", "creator": "markt@apache.org", "creation_time": "2008-10-27T06:28:44Z", "tags": [], "attachment_id": null}]