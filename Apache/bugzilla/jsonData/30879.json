[{"count": 0, "tags": [], "bug_id": 30879, "attachment_id": null, "id": 62560, "time": "2004-08-26T22:24:34Z", "creator": "slutsatchel@yahoo.com", "creation_time": "2004-08-26T22:24:34Z", "is_private": false, "text": "I'm debugging a junit stress test, and set my logging Level to FINE. My test\nstarts outputting a TON to the console. The test is running from a forked JVM\nusing the junit tag's fork attribute=\"yes\" and showoutput=\"yes\".\n\nUsing hprof, I tracked it down to JUnitTestRunner's code which stores up all of\nthe task's stdErr and stdOut in a BYTE ARRAY, and then starts copying it all\nover the place using a TeeOutputStream and ResultFormatters. Please update this\nclass so that it does not hold the task's entire output in memory.\n\nAs of today, this problem is present on the HEAD.\n\nHPROF REPORT\nSITES BEGIN (ordered by live bytes) Thu Aug 26 15:01:48 2004\n          percent         live       alloc'ed  stack class\n rank   self  accum    bytes objs   bytes objs trace name\n    1 52.49% 52.49% 32505872    1 65011752   18  1963 [B\n    2 41.58% 94.07% 25745080    1 25745096    2 13668 [B\n\nTRACE 1963:\njava.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:95)\njava.io.PrintStream.write(PrintStream.java:258)\norg.apache.tools.ant.util.TeeOutputStream.write(TeeOutputStream.java:91)\njava.io.PrintStream.write(PrintStream.java:258)\n\nTRACE 13668:\njava.io.ByteArrayOutputStream.toByteArray(ByteArrayOutputStream.java:136)\norg.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:342)\norg.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:560)"}, {"count": 1, "tags": [], "creator": "sbailliez@apache.org", "text": "Out of curiosity why don't you configure your logger to log somewhere else \nthan the console ? Especially for a stress test.\n\nThe output capture is absolutely not designed to handle huge amount of data. \nThis data is dispatched to every formatter once the test is finished (along \nwith result, timing, etc...), so the easiest solution was just to keep \neverything in memory.\n\nIt could be eventually redesigned so that it outputs all the data to a \ntemporary file which input stream is then created and set for every formatter \n(at least this is what I'm thinking about) but this won't improve things much \nexcept complicate things.\n\nI'm downgrading the severity from major to enhancement for now.", "id": 62856, "time": "2004-08-31T15:40:18Z", "bug_id": 30879, "creation_time": "2004-08-31T15:40:18Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 30879, "attachment_id": null, "text": "\n\n*** This bug has been marked as a duplicate of 12817 ***", "id": 72514, "time": "2005-03-16T17:26:37Z", "creator": "bodewig@apache.org", "creation_time": "2005-03-16T17:26:37Z", "is_private": false}]