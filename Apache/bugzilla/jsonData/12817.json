[{"count": 0, "tags": [], "bug_id": 12817, "attachment_id": null, "id": 23099, "time": "2002-09-19T14:25:10Z", "creator": "tdrury@netvendor.com", "creation_time": "2002-09-19T14:25:10Z", "is_private": false, "text": "In JUnitTestRunner.java, capturing stdout and stderr to a ByteArrayOutputStream\ncauses out of memory exceptions to occur when test cases use classes that\nprint large volumes of text to either output stream (*cough* *cocobase*).  In\nsome cases, this console output cannot be turned off without decompiling\na third party jar.  Capturing this output occurs regardless of whether or not\nprintsummary is on, off, or withStdAndErr.  The printsummary attribute should\nbe passed into the JUnitTestRunner class and tested to check if it is equal to\nwithStdAndErr and, if not, don't capture the output and error streams."}, {"count": 1, "tags": [], "bug_id": 12817, "is_private": false, "text": "Created attachment 3133\nfix stdout/err capture path", "id": 23106, "time": "2002-09-19T17:44:07Z", "creator": "tdrury@netvendor.com", "creation_time": "2002-09-19T17:44:07Z", "attachment_id": 3133}, {"attachment_id": 3134, "tags": [], "creator": "tdrury@netvendor.com", "text": "Created attachment 3134\nfix stdout/error capture", "count": 2, "id": 23107, "time": "2002-09-19T17:44:33Z", "bug_id": 12817, "creation_time": "2002-09-19T17:44:33Z", "is_private": false}, {"count": 3, "tags": [], "creator": "tdrury@netvendor.com", "attachment_id": null, "text": "I added a couple patches to illustrate a possible solution. Another solution would be to make the showoutput attribute 3-state: on, off, alloff.  'on' would tee the output, off would not, and alloff would suppress the stdout and stderr output entirely.", "id": 23109, "time": "2002-09-19T17:46:21Z", "bug_id": 12817, "creation_time": "2002-09-19T17:46:21Z", "is_private": false}, {"count": 4, "tags": [], "creator": "bodewig@apache.org", "attachment_id": null, "text": "Checking for printsummary is not enough as other formatters may be interested in\nthe output as well.", "id": 23368, "time": "2002-09-25T15:28:20Z", "bug_id": 12817, "creation_time": "2002-09-25T15:28:20Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 12817, "attachment_id": null, "id": 72341, "time": "2005-03-14T11:10:32Z", "creator": "bodewig@apache.org", "creation_time": "2005-03-14T11:10:32Z", "is_private": false, "text": "All JUnit result formatters get stderr/out to potentially log it in some way,\nI don't see a way to fix this problem.  Well, the only thing we could do is\nan attribute that explicitly tells the task that we are never interested in the\noutput.\n"}, {"count": 6, "text": "*** Bug 30879 has been marked as a duplicate of this bug. ***", "creator": "bodewig@apache.org", "is_private": false, "id": 72515, "time": "2005-03-16T17:26:38Z", "bug_id": 12817, "creation_time": "2005-03-16T17:26:38Z", "tags": [], "attachment_id": null}, {"attachment_id": 17800, "tags": [], "creator": "mgrosso@acm.org", "text": "Created attachment 17800\npatch for bug 12817 to leave stdout and err alone if showoutput is true.\n\nI'm attaching another proposed patch. This one uses the existing showoutput\nparameter and, if that variable is true, stderr and stdout are left alone,\nunmolested, and no attempt is made to capture either stream in a byte array.\nStefan's comments that this bug cant be fixed confused me, since none of the\nother JUnit formatters are attempting to buffer the entire stream afaik, and\nthis patch did fix the problem for me.", "count": 7, "id": 86237, "time": "2006-02-26T23:47:04Z", "bug_id": 12817, "creation_time": "2006-02-26T23:47:04Z", "is_private": false}, {"count": 8, "text": "I'm increasing the priority of the bug because it is preventing us from\nusing ants junit task without the patch.  One can sometimes workaround \nthis by resetting the log4j log level of a noisy application, but if the \n\"noise\" is part of the test case, that wont work, will it?", "bug_id": 12817, "attachment_id": null, "id": 86238, "time": "2006-02-26T23:55:32Z", "creator": "mgrosso@acm.org", "creation_time": "2006-02-26T23:55:32Z", "tags": [], "is_private": false}, {"count": 9, "tags": [], "bug_id": 12817, "attachment_id": null, "id": 88212, "time": "2006-04-18T14:24:59Z", "creator": "apache@goots.org", "creation_time": "2006-04-18T14:24:59Z", "is_private": false, "text": "\nAt PrismTech we have been using the Sun Real Time Java JVM. We have found that\nredirecting the system streams causes (somewhat unpredictable) memory faults -\nthrowboundaryerrors and the like when using Immortal/Scoped memory. While I\nunderstand that Ant does not 'officially' support Mackinac we have found that by\napplying the patch from comment #7 the memory faults disappear. Without this\npatch  we cannot reliably run our test suites.\n"}, {"count": 10, "text": "Following Stefan's suggestion (#5), I have added a new\nattribute \"outputtoformatters\" which is by default true.\nThis can be set to false to suppress outputting to the\nformatters, and if \"showoutput\" is also false, the\noutput gets thrown away.", "bug_id": 12817, "attachment_id": null, "id": 94745, "time": "2006-10-11T16:14:55Z", "creator": "peterreilly@apache.org", "creation_time": "2006-10-11T16:14:55Z", "tags": [], "is_private": false}]