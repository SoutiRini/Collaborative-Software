[{"count": 0, "tags": [], "text": "Hi, \n\nautoSizeColumn can calculate negative sizes for the column width due to a cast\nfrom integer to short.\n\nIf a column is long (e.g. 3000 characters), the calculated length of\nautoSizeColumn does not fit into a short any more.\n\nHSSFSheet.autoSizeColumn(short) line: 1476\t\n\n           if (width != -1) {\n                sheet.setColumnWidth(column, (short) (width * 256));\n            }\n\ne.g. width = 1668.10  \n\nwidth * 256 = 1668.10 * 256 = 427033,6\n\nwhich is greater than 32767 which a short can hold. Due to the cast to short\nonly the lower two bytes are taken into account which results in -31718.\n\nThus, sheet.setColumnWidth is called with an argument of -31718 and sets the\nwidth to a negative value.\n\nMaybe a check like \n\nif (width > Short.MAX_VALUE) {\n     width = Short.MAX_VALUE;\n}\n\nwould already help.\n\nAttached a small test case which reproduces the problem.\n\nimport java.io.FileOutputStream;\n\nimport org.apache.poi.hssf.usermodel.HSSFCell;\nimport org.apache.poi.hssf.usermodel.HSSFRichTextString;\nimport org.apache.poi.hssf.usermodel.HSSFRow;\nimport org.apache.poi.hssf.usermodel.HSSFSheet;\nimport org.apache.poi.hssf.usermodel.HSSFWorkbook;\n\npublic class AutoSizeColumn {\n\n    public static void main(String args[]) throws Exception {\n\n        HSSFWorkbook workBook = new HSSFWorkbook();\n        HSSFSheet sheet = workBook.createSheet();\n        \n        HSSFRow row = sheet.createRow(0);\n        HSSFCell cell = row.createCell((short)0);\n\n        int size = 3000;\n        \n        StringBuffer value = new StringBuffer(size);\n        for (int i = 0; i < size; i++) {\n            value.append(\".\");\n        }\n        \n        cell.setCellValue(new HSSFRichTextString(value.toString()));\n        \n        sheet.autoSizeColumn((short)0);\n        int width = sheet.getColumnWidth((short)0);\n        \n        if (width < 0) {\n            System.out.println(\"width < 0\");\n        }\n        \n        workBook.write(new FileOutputStream(\"foo.xls\"));\n    }\n}\n\nRegards,\nJan", "attachment_id": null, "id": 106600, "creator": "jan.dostert@sap.com", "time": "2007-08-10T09:21:46Z", "bug_id": 43090, "creation_time": "2007-08-10T09:21:46Z", "is_private": false}, {"count": 1, "tags": [], "creator": "yegor@dinom.ru", "attachment_id": null, "text": "Good catch.\nI applied the suggested fix.\n\nRegards,\nYegor\n", "id": 106604, "time": "2007-08-10T10:35:24Z", "bug_id": 43090, "creation_time": "2007-08-10T10:35:24Z", "is_private": false}]