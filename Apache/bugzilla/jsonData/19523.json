[{"count": 0, "tags": [], "text": "Zip (and Unzip) task and children should allow a mapper. There is a clear \nconcept of a source file (what is being zipped) and a target name (how the \nname appears in the archive). The zipfileset element already supports this in \na very limited way through the prefix attribute. This is not general enaough. \nI would like to do this:\n<zip destfile=\"collectedClasses.zip\">\n   <zipgroupfileset dir=\"zips/\">\n      <include name=\"*.zip\"/>\n   </zipgroupfileset>\n   <mapper type=\"glob\" from=\"bin/*.class\" to=\"*.class\"/>\n</zip>\n\nThis would collect all class files from the set of zip files in the zips \ndirectory. In the zip files there is a bin directory which contains the actual \nclasspaths, so it needs to be removed.", "is_private": false, "bug_id": 19523, "id": 36457, "time": "2003-05-01T18:02:07Z", "creator": "kovesp@sympatico.ca", "creation_time": "2003-05-01T18:02:07Z", "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 19523, "attachment_id": null, "text": "*** Bug 18995 has been marked as a duplicate of this bug. ***", "id": 36471, "time": "2003-05-01T21:57:54Z", "creator": "kovesp@sympatico.ca", "creation_time": "2003-05-01T21:57:54Z", "is_private": false}, {"count": 2, "tags": [], "creator": "kovesp@sympatico.ca", "attachment_id": 6144, "id": 36472, "time": "2003-05-01T22:23:54Z", "bug_id": 19523, "creation_time": "2003-05-01T22:23:54Z", "is_private": false, "text": "Created attachment 6144\nChanges to Zip.java to make zip use a mapper and to Honor top level selectors"}, {"count": 3, "tags": [], "creator": "kovesp@sympatico.ca", "attachment_id": null, "id": 36473, "time": "2003-05-01T22:25:52Z", "bug_id": 19523, "creation_time": "2003-05-01T22:25:52Z", "is_private": false, "text": "In addition, zip should apply the selectors of the implicit fileset. Here is \nwhy:\n\n<zip destfile=\"App.zip\" filesonly=\"yes\">\n   <zipgroupfileset dir=\"${destination.dir}\">\n      <filename id=\"nested\" name=\"abc*.zip\"/>\n   </zipgroupfileset>\n   <filename id=\"toplevel\" name=\"**/*.class\" negate=\"yes\" />\n</zip>\n\nThe \"nested\" filename selector applies to zip files to be included by \nzipgroupfileset. What I want is that only class files be extracted form the \nzips and added to App.zip. \n\nI have created a modified version of the Zip task to handle both cases (see \nattached file). What I have done can probably be implemented in a more \nefficient way, and is not tested for all possible cases.\n\n"}, {"count": 4, "tags": [], "text": "Since Peter marked my feature request (written 2003-04-14) as a DUPLICATE of \nhis (written today), I feel that I need to re-state my original request... If \nthere's any reason why this cannot be supported, please say so.\n\n******* ORIGINAL FEATURE REQUEST 2003-04-14 *******\nWhen building a zip file it would be useful to use a <mapper> to change the \nname of the file stored in the zip.  Currently it is necessary to <copy> the \nfiles and apply a glob <mapper>, and then <zip> the files from there.\n\nIt would be great to be able to apply a <mapper> directly to the <zip> task, or \nperhaps better still, the <fileset> data type.  For example:\n\n  <zip zipfile=\"${export.target.filename}\">\n    <fileset dir=\"${export.source.dir}\">\n      <patternset refid=\"export.project.patternset\"/>\n      <mapper type=\"glob\" from=\".classpath_zip\" to=\".classpath\"/>\n    </fileset>\n  </zip>\n\n***********************", "is_private": false, "bug_id": 19523, "id": 36474, "time": "2003-05-01T22:31:55Z", "creator": "sarcher@us.ibm.com", "creation_time": "2003-05-01T22:31:55Z", "attachment_id": null}, {"count": 5, "tags": [], "text": "Simon,\nLet me explain. The only reason I marked your request as a duplicate of mine \n(and not the other way around, as would have been natural) is because I have \nexpanded on the original by adding a request for zip to honor selectors and I \nwas afraid that this would get lost. Sorry, I know that this procedure was \nless than polite. \n\nIn addition, I have provided an implementation of both features, so I am \nhoping that this way there is more of a chance that our requests will get into \nthe codebase. \n\nIf you wan't to try out my code, here is what you have to do:\n1. Get the source.\n2. Copy the class org.apache.tools.ant.taskdefs.Zip to a package of your own.\n3. Fix the baseclass reference by importing it.\n4. Replace the method addResources with the one I have supplied.\n5. Add the rest of the code I have supplied to the class.\n6. Compile it and place it in a jar, say ext.jar\n7. In your build file add <taskdef name=\"zipx\" classname=\"your.package.Zip\" \nclasspath=\"ext.jar\"/>\n8. Use <zipx ...> instead of <zip...>. You can now use this with a mapper as \nin your example.\n\nI had to use this technique instead of extending the original Zip task because \nthe key method (addResources) is final.\n\nOn second examination your request may require a little more work, because the \nnested filesets would have to allow mapper. My version is simpler, the \nquestion is would that satisfy you? In my version there can be only one mapper \nper zip being built, in your version one could use several filesets, each with \nits own mapper, so it is more general. However, in practice, allowing only the \nsingle mapper, the same result can be achieved by using more than one zip task \nand spcifying update=\"yes\" on all but the first. This of course is less \nelegant than having multiple mappers.\n", "is_private": false, "bug_id": 19523, "id": 36477, "time": "2003-05-02T01:07:50Z", "creator": "kovesp@sympatico.ca", "creation_time": "2003-05-02T01:07:50Z", "attachment_id": null}, {"count": 6, "tags": [], "bug_id": 19523, "attachment_id": null, "id": 36580, "creation_time": "2003-05-02T13:36:19Z", "time": "2003-05-02T13:36:19Z", "creator": "sarcher@us.ibm.com", "text": "Thanks Peter for the clairification... I appreciate your feedback.  I think \nthat your solution will work fine for me, since I only need a single mapper.\n\nBut, as you correctly point out, it would be far more elegant for filesets to \nalso support mappers.  Plus, I'm sure that using nested mappers inside filesets \nwill be useful in tasks other than zip.\n\nThanks again.", "is_private": false}, {"count": 7, "tags": [], "creator": "kovesp@sympatico.ca", "attachment_id": null, "id": 36591, "time": "2003-05-02T15:20:44Z", "bug_id": 19523, "creation_time": "2003-05-02T15:20:44Z", "is_private": false, "text": "On further experimentation with my code:\n- The mapper part is fine.\n- The selector part needs more work. I'll be doing that as soon as I can get \nthe Eclipse debugger to work with ant again."}, {"count": 8, "tags": [], "creator": "kovesp@sympatico.ca", "text": "After some work I think I now have a useable implementation of both features.\nFirst, my selector request as stated earlier makes little sense. I shall now \nrestate it, and describe my solution for both mappers and selectors. \n\nThe real problems in the current implementation are:\n\n1. ZipFileSet is ignoring selectors when using the src attribute (i.e. when \nthe resources are being obtained from an existing archive). Not surprising, \ngiven that ZipScanner is ignoring selectors.\n\n2. Assuming the above is fixed, there is still a conceptual problem for \nZipGroupFileSet. The specified selectors would select among the archives \nspecified and not the _contents_ of the archives.\n\nAccordingly, here is my proposed solution:\n\n1. ZipFileSet allows a nested <mapper> element. Any resource in the set has \nits name translated by the mapper before it is added to the target archive.\n\n2. ZipGroupFileSet allows two new nested elements; clearly these are applied \nto the entries from the archives specified by the parent element.\n\na. <contentselector> which is a selector.\nb. <contentmapper> which is a mapper.\n\nRemarks:\n\n1. This should probably be added at the AbstractFileSet level, I just didn't   \nwant to rock the boat too much.\n\n2.a. A single selector is allowed. One can of course use nested selectors to \nget the most general effect. It would slos be possible to allow all current \nselectors with content prefixed to their name, but I thought that things like \ncontentand and contentnone a bit strange.\n\nI have implemented this on the 1.5.3 codebase as a custom Zip task. To \nimplement it as a part of the standard build the following classes need to be \nmodified\n   Zip\n   ZipFileSet\n   ZipScanner\nA new class\n   ZipGroupFileSet\nis introduced. \nThe modification is quite small: 170 new lines and 8 modified lines.\n\nI shall post the ant extension version today or tomorrow, the version \nintegrated into the 1.6 code base about a day later.\n\nI wish someone from dev would respond as to the chances of this getting into  \nthe 1.6 release.\n", "id": 36636, "time": "2003-05-04T22:05:53Z", "bug_id": 19523, "creation_time": "2003-05-04T22:05:53Z", "is_private": false, "attachment_id": null}, {"count": 9, "text": ">>1. ZipFileSet allows a nested <mapper> element.\n>>Any resource in the set has its name translated\n>>by the mapper before it is added to the target\n>>archive.\n\nHi Peter... Please forgive me for my lack of knowledge of Ant's implementation, \nbut is ZipFileSet specialized kind of FileSet?  If so, would it work to make \nFileSet support nested <mapper> elements?  Surely this way ZipFileSet would \nalso support nested <mapper> elements?\n\nThis would be better approach since the FileSet data type is useful with tasks \nother than <zip>.\n", "bug_id": 19523, "attachment_id": null, "id": 36692, "time": "2003-05-05T14:14:46Z", "creator": "sarcher@us.ibm.com", "creation_time": "2003-05-05T14:14:46Z", "tags": [], "is_private": false}, {"count": 10, "tags": [], "text": "Simon,\n\nZipFileSet is an extension of FileSet, see the Zip task documentation. As I \nnote in my post, you are correct, mapper _should_ be added to FileSet. Note \nhowever, that doing so will not automatically provide mapper support for all \ntasks that use FileSet. That would have to be added to each task individually.", "is_private": false, "bug_id": 19523, "id": 36707, "time": "2003-05-05T16:13:47Z", "creator": "kovesp@sympatico.ca", "creation_time": "2003-05-05T16:13:47Z", "attachment_id": null}, {"count": 11, "tags": [], "creator": "kovesp@sympatico.ca", "text": "Created attachment 6218\nJar with src and binaries of Zip task supporting mappers and selectors with <ZipFileSet src=../>/<ZipGroupFileSet/>", "id": 36715, "time": "2003-05-05T17:19:51Z", "bug_id": 19523, "creation_time": "2003-05-05T17:19:51Z", "is_private": false, "attachment_id": 6218}, {"count": 12, "tags": [], "creator": "kovesp@sympatico.ca", "attachment_id": null, "id": 36716, "time": "2003-05-05T17:36:08Z", "bug_id": 19523, "creation_time": "2003-05-05T17:36:08Z", "is_private": false, "text": "The posted jar contains a custom task for Ant 1.5.3 which supports the \nextensions listed in my previous post. To use, save the attachment as a jar \n(say zipx.jar) and add\n\n<taskdef name=\"zipx\" classname=\"org.kp.ant.taskdefs.Zip\" classpath=\"zipx.jar\"/>\n\nto the build-file. The you can say, e.g.,\n<zipx destfile=\"myZip.zip\">\n  <zipgroupfileset dir=\"someDir\">\n     <filename name=\"prod*.zip\"/>\n     <contentmapper type=\"glob\" from=\"bin/*\" to=\"*\"/>\n     <contentselector><filename name=\"com/utils/**/*.class\"/>\n  </zipgroupfileset>\n</zipx>\n\n\nI am still looking for a response from someone with the time and willingness \nto integrated this into the 1.6 codebase (shouldn't be more than about an hour \nof work). I am quite unfamiliar with CVS, that is why I am hesitant to do it \nmyself."}, {"count": 13, "tags": [], "bug_id": 19523, "attachment_id": null, "text": "*** Bug 19884 has been marked as a duplicate of this bug. ***", "id": 37128, "time": "2003-05-13T14:53:24Z", "creator": "bodewig@apache.org", "creation_time": "2003-05-13T14:53:24Z", "is_private": false}, {"count": 14, "tags": [], "creator": "bodewig@apache.org", "text": "*** Bug 12816 has been marked as a duplicate of this bug. ***", "id": 37183, "time": "2003-05-14T13:23:45Z", "bug_id": 19523, "creation_time": "2003-05-14T13:23:45Z", "is_private": false, "attachment_id": null}, {"count": 15, "tags": [], "text": "*** Bug 27980 has been marked as a duplicate of this bug. ***", "is_private": false, "bug_id": 19523, "id": 68661, "time": "2004-12-17T16:03:38Z", "creator": "peterreilly@apache.org", "creation_time": "2004-12-17T16:03:38Z", "attachment_id": null}, {"count": 16, "tags": [], "text": "Can this be extended to the \"tar\" task as well?", "is_private": false, "bug_id": 19523, "id": 70298, "time": "2005-02-01T10:07:07Z", "creator": "richard.cross@uk.wanadoo.com", "creation_time": "2005-02-01T10:07:07Z", "attachment_id": null}, {"count": 17, "tags": [], "creator": "mbenson@apache.org", "text": "Please note that in CVS HEAD, Unjar/Untar/Unwar/Unzip accept a nested mapper. \nAlso know that the present and different file selectors use mappers and probably\nprovide whatever you could hope to do with a nested fileset mapper, within reason.", "id": 70389, "time": "2005-02-02T17:13:13Z", "bug_id": 19523, "creation_time": "2005-02-02T17:13:13Z", "is_private": false, "attachment_id": null}, {"count": 18, "tags": [], "text": "a partial solution is bug 4240 - it would be complete if zipgroupfileset was a resource collection or we had a resource collection that worked somewhat like zipgroupfileset.\n\nSimon's use case from comment #4 should be fully covered by\n\n  <zip zipfile=\"${export.target.filename}\">\n    <mappedresources>\n      <fileset dir=\"${export.source.dir}\">\n        <patternset refid=\"export.project.patternset\"/>\n      </fileset>\n      <mapper type=\"glob\" from=\".classpath_zip\" to=\".classpath\"/>\n    </mappedresources>\n  </zip>\n", "is_private": false, "bug_id": 19523, "id": 122627, "time": "2008-11-19T03:24:41Z", "creator": "bodewig@apache.org", "creation_time": "2008-11-19T03:24:41Z", "attachment_id": null}, {"count": 19, "tags": [], "bug_id": 19523, "attachment_id": null, "text": "(In reply to comment #18)\n> a partial solution is bug 4240 - it would be complete if zipgroupfileset was a\n> resource collection or we had a resource collection that worked somewhat like\n> zipgroupfileset.\n\nthat resource collection is <archives> of bug 46257", "id": 129045, "time": "2009-07-22T07:27:41Z", "creator": "bodewig@apache.org", "creation_time": "2009-07-22T07:27:41Z", "is_private": false}]