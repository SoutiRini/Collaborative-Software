[{"count": 0, "tags": [], "bug_id": 41062, "attachment_id": null, "is_private": false, "id": 96306, "time": "2006-11-28T14:57:06Z", "creator": "j3322ptm@yahoo.de", "creation_time": "2006-11-28T14:57:06Z", "text": "The PatternParser.characters method used for parsing patterns and other things\nfrom hyphenation XML files can't cope with the parser splitting text in multiple\ncharacter events. This may lead to patterns crossing a buffer boundary to be\nparsed as two wrong patterns.\nFurthermore, the implementation is quite ineffective:\n- copying the characters into a StringBuffer is unnecessary\n- the tokenizer moves the whole array\nThe readToken is declared to return a string, but it always returns null and\nstores the token in a class variable (horrible design)."}, {"count": 1, "tags": [], "bug_id": 41062, "attachment_id": null, "text": "Umm, delete the comment about readToken always returning null. The design is\nstill somewhat horrible.", "id": 96307, "time": "2006-11-28T14:59:48Z", "creator": "j3322ptm@yahoo.de", "creation_time": "2006-11-28T14:59:48Z", "is_private": false}, {"count": 2, "tags": [], "text": "Further points\n- Using a ternary tree for the charclass arrays seems to be wasteful. Two\n  parallel arrays and a Array binary search should be sufficient.\n- The charclass parser wont check whether a . (dot) represents a class. The\n  dot is reserved as begin/end of word marker in patterns, using it als\n  class representation will probably cause problems.\n- The pattern parser wont check whether the non-digits in the patterns are\n  actually charclass representations.", "is_private": false, "bug_id": 41062, "id": 96308, "time": "2006-11-28T15:33:28Z", "creator": "j3322ptm@yahoo.de", "creation_time": "2006-11-28T15:33:28Z", "attachment_id": null}, {"count": 3, "attachment_id": null, "creator": "gadams@apache.org", "text": "resetting P2 open bugs to P3 pending further review", "id": 157555, "time": "2012-04-07T01:44:35Z", "bug_id": 41062, "creation_time": "2012-04-07T01:44:35Z", "tags": [], "is_private": false}]