[{"count": 0, "tags": [], "text": "Created attachment 26853\nPatch to provide Async processing support in Apache Core, MPM Winnt and mod_isapi modules\n\nImplementation of Asynchronous processing support in MPM-WINNT and CORE that doesn't block worker threads (true async file transfers in Core and ISAPI HSE_PENDING_STATUS support)\n\n\nProblem:\nApache Http Server by design does not support asynchronous processing model as IIS, i.e., HTTP requests that take longer duration such as large file downloads and Content generators such as mod_Isapi doing HSE_STATUS_PENDING operations will block worker threads until operations are completed. The provided fix is to make Apache web server mpm_WinNT core utilize Windows API (TransmitFile, IO Completion port) to relinquish worker threads efficiently and thereby increasing the servers scalability significantly.\n\n\nReproduction steps:\n1. Host Apache such that you can download large files greater than 10MB over http.\n2. Download more than 20 files simultaneously, you can see that worker threads used for download operations switch between Kernel and User mode frequently and thereby consuming more CPU resources unnecessarily for long duration.\n\nSolution:\nEnhanced Apache (core, mpm_winnt) request processing pipeline such that HTTP requests are either processed in asynchronous fashion (if possible) or in default/synchronous mode. This includes an additiont to APR 1.4.2 network API.\n\nTesting Done:\nTested this enhancement and found Apache to be stable/robust (less memory and CPU usage).\n\nTest enviornment:\nWindows 2003 or 2008\nModule configuration: \nmpm_winnt, mod_isapi.so, mod_ssl.so, mod_fcgid.so, mod_dir.so, mod_authz_host.so,  mod_env.so, mod_expires.so, mod_headers.so, mod_log_config.so, and mod_mime.so.\nThreadsPerChild: 30 or more\n\nTest case 1: Download more than 30 files of more than 10MB in size, and check whether worker threads are able to handle more than 30 requests in parallel.\nTest case 2: Use Isapi extension that utilizes HSE_STATUS_PENDING server support function, and check whether threads are not getting blocked.\n\nEnhancement details: \nApache core HTTP pipeline is enhanced as follows: \n\n1)Dispatch stage:\nHTTP connection listening thread accepts and dispatches incoming HTTP requests to Apache worker threads, this stage is enhanced to dispatch asynchronous operation completion notifications (refer below) as well.\n\n \n2)Execution stage: \nWorker threads processes incoming requests as follows. \n\na. If incoming requests are deemed to take longer duration, such requests are executed in asynchronous fashion, i.e.,\n       i. File download requests: Apache core is enhanced to probe into HTTP request and identify whether the URI requested involves large data transfer or not (magnitude configurable via httpd.conf, currently set as >=10MB). If magnitude is large enough, asynchronous contexts are setup, file transfer operation is delegated to Windows kernel and worker thread is relinquished back to Apache. When transfer operation is done, completion notification is signaled from kernel to Apache dispatch stage.\n      ii. Long operations: Apache mod_isapi module is enhanced to relinquish worker thread if ISAPI extensions hint about extended operation (HSE_STATUS_PENDING). ISAPI extensions later notify mod_isapi once the extended asynchronous operation is done (HSE_REQ_DONE_WITH_SESSION), and mod_isapi module signals completion notification such that Apache dispatch stage gets notified. \n\nc. If incoming requests cannot be possibly (no hints available) or optimally executed in asynchronous mode, such requests are immediately executed by worker threads in blocking fashion.\n\nd. If incoming request is an asynchronous completion notification, worker thread cleans up resources used for asynchronous processing in blocking fashion. \n\n\n--\nAuthor: L.Thangaraj AntonyCrouse", "is_private": false, "id": 145550, "creation_time": "2011-04-04T14:23:25Z", "time": "2011-04-04T14:23:25Z", "creator": "thangaraj@gmail.com", "bug_id": 51019, "attachment_id": 26853}, {"count": 1, "tags": [], "bug_id": 51019, "text": "Are there any plans to merge this patch into the official 2.2. branch?\n\nCould it be modified to support chunked encoding? This would make it possible to write a module to connect to some pubsub backend (e.g. Redis or RabbitMQ) and incrementally push messages data to clients (certainly mozilla) via a single long-running XmlHttpRequest.", "id": 146202, "time": "2011-05-09T10:35:57Z", "creator": "johannes@jroith.de", "creation_time": "2011-05-09T10:35:57Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "creator": "wrowe@apache.org", "attachment_id": null, "text": "There is no chance of intra-request Async behavior being backported to 2.2 or 2.4.\nThis is due to module author expectations by the httpd API contract.\n\nInter-request (async behavior between requests; connect, keep-alive, linger \nclose) can be backported, but is more likely to live in httpd 2.4.  I'll spend\nsome time reviewing this patch this coming weekend.", "id": 146221, "time": "2011-05-09T16:45:03Z", "bug_id": 51019, "creation_time": "2011-05-09T16:45:03Z", "is_private": false}, {"count": 3, "tags": [], "creator": "neozhang110@126.com", "attachment_id": null, "text": "is this patch useful to httpd 2.4?", "id": 165739, "time": "2013-03-11T09:22:03Z", "bug_id": 51019, "creation_time": "2013-03-11T09:22:03Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 51019, "text": "is this patch useful to httpd 2.4?", "id": 165740, "time": "2013-03-11T09:22:19Z", "creator": "neozhang110@126.com", "creation_time": "2013-03-11T09:22:19Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "creator": "thangaraj@gmail.com", "attachment_id": null, "is_private": false, "id": 178449, "time": "2014-10-14T16:11:41Z", "bug_id": 51019, "creation_time": "2014-10-14T16:11:41Z", "text": ">>is this patch useful to httpd 2.4?\n\nYes, this patch is useful for httpd 2.4 to enable intra-request Async and true Async file download capabilities."}]