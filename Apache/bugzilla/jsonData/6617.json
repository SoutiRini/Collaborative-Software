[{"count": 0, "tags": [], "text": "Attempting to clean up the session by iterating over the enumeration of \nattribute names fails with a ConcurrentModificationException on \norg.apache.catalina.util.Enumerator.nextElement(Enumerator.java:166);\n\n=========CODE=====================================\n\nEnumeration enumeration = session.getAttributeNames();\n\nSystem.out.println(\"Enum: \" + enumeration);\nwhile(enumeration.hasMoreElements()) {\n\n    String name = null;\n    try{\n        name = (String)enumeration.nextElement();\n    }\n    catch(Throwable t){\n\n\n        System.out.println(\"Caught Throwable while getting next element from \nenumeration. name: \" + name);\n        t.printStackTrace();\n        break;\n    }\n\n    System.out.println(\"Attempting to remove from enumeration: \" + name);\n    session.removeAttribute(name);\n    System.out.println(\"Done removing from enumeration: \" + name + \".\");\n}\n\n\n\n=========LOG======================================\nCleaning up the session...\nEnumeration: org.apache.catalina.util.Enumerator@f2225f\nAttempting to remove from enumeration: mk\nDone removing from enumeration: mk.\nCaught Throwable while getting next element from enumeration. name: null\njava.util.ConcurrentModificationException\n        at java.util.HashMap$HashIterator.nextEntry(HashMap.java:750)\n        at java.util.HashMap$KeyIterator.next(HashMap.java:786)\n        at org.apache.catalina.util.Enumerator.nextElement(Enumerator.java:166)\n        at com.bredex.servlet.Login.service(Login.java:113)\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:853)\n        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter\n(ApplicationFilterChain.java:247)\n        at org.apache.catalina.core.ApplicationFilterChain.doFilter\n(ApplicationFilterChain.java:193)\n        at org.apache.catalina.core.StandardWrapperValve.invoke\n(StandardWrapperValve.java:243)\n        at org.apache.catalina.core.StandardPipeline.invokeNext\n(StandardPipeline.java:566)\n        at org.apache.catalina.core.StandardPipeline.invoke\n(StandardPipeline.java:472)\n        at org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:943)\n        at org.apache.catalina.core.StandardContextValve.invoke\n(StandardContextValve.java:201)\n        at org.apache.catalina.core.StandardPipeline.invokeNext\n(StandardPipeline.java:566)\n        at org.apache.catalina.valves.CertificatesValve.invoke\n(CertificatesValve.java:246)\n        at org.apache.catalina.core.StandardPipeline.invokeNext\n(StandardPipeline.java:564)\n        at org.apache.catalina.core.StandardPipeline.invoke\n(StandardPipeline.java:472)\n        at org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:943)\n        at org.apache.catalina.core.StandardContext.invoke\n(StandardContext.java:2344)\n        at org.apache.catalina.core.StandardHostValve.invoke\n(StandardHostValve.java:164)\n        at org.apache.catalina.core.StandardPipeline.invokeNext\n(StandardPipeline.java:566)\n        at org.apache.catalina.valves.ErrorDispatcherValve.invoke\n(ErrorDispatcherValve.java:170)\n        at org.apache.catalina.core.StandardPipeline.invokeNext\n(StandardPipeline.java:564)\n        at org.apache.catalina.valves.ErrorReportValve.invoke\n(ErrorReportValve.java:170)\n        at org.apache.catalina.core.StandardPipeline.invokeNext\n(StandardPipeline.java:564)\n        at org.apache.catalina.valves.AccessLogValve.invoke\n(AccessLogValve.java:462)\n        at org.apache.catalina.core.StandardPipeline.invokeNext\n(StandardPipeline.java:564)\n        at org.apache.catalina.core.StandardPipeline.invoke\n(StandardPipeline.java:472)\n        at org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:943)\n        at org.apache.catalina.core.StandardEngineValve.invoke\n(StandardEngineValve.java:163)\n        at org.apache.catalina.core.StandardPipeline.invokeNext\n(StandardPipeline.java:566)\n        at org.apache.catalina.core.StandardPipeline.invoke\n(StandardPipeline.java:472)\n        at org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:943)\n        at org.apache.catalina.connector.http.HttpProcessor.process\n(HttpProcessor.java:1011)\n        at org.apache.catalina.connector.http.HttpProcessor.run\n(HttpProcessor.java:1106)\n        at java.lang.Thread.run(Thread.java:536)", "is_private": false, "id": 11046, "creator": "kevin.ross@bredex.com", "time": "2002-02-21T17:42:10Z", "bug_id": 6617, "creation_time": "2002-02-21T17:42:10Z", "attachment_id": null}, {"count": 1, "tags": [], "text": "That's because you're changing the set whilst iterating over it with an\nenumerator.  If you clone the list of attribute names and use this to get your\niterator/enumerator, you will be okay..", "attachment_id": null, "id": 12123, "creation_time": "2002-03-21T12:41:07Z", "time": "2002-03-21T12:41:07Z", "creator": "dsl@ts.com", "bug_id": 6617, "is_private": false}, {"count": 2, "tags": [], "bug_id": 6617, "text": "It looks like that the Enumeration its cached by the server , for me this is a bug\nbecause after obtaining the enumeration of the attributes i understand that its\ntotally disconnected from Collection who creates them (probably im wrong).\n\nBut i test that code in other servers and work , probably the server returns a\nclone.\n\nCarlos arana\n", "id": 23618, "time": "2002-09-29T06:02:53Z", "creator": "aranacarlospe@yahoo.es", "creation_time": "2002-09-29T06:02:53Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 6617, "attachment_id": null, "text": "I've seen this exception as well under different circumstances that are \ndefinitely valid.  \n\nSuppose that while enumerating through the session attributes, another request \nis made that accesses the same session and removes an attributes.  Since the \nSession attributes are accessed by different threads and different requests, \nthe use of the Enumerator is definitely valid.  \n\nThis can happen either during stress testing when multiple requests are \nperformed for a single user with little time between or when a user opens \nmultiple browsers and performs two concurrent requests.\n\nIn either case, this is a vliad bug.  The session attributes Collection should \nbe cloned before an Enumerator is returned.", "id": 25293, "time": "2002-10-29T00:02:55Z", "creator": "sdgoldst@mailandnews.com", "creation_time": "2002-10-29T00:02:55Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 6617, "text": "\n\n*** This bug has been marked as a duplicate of 19103 ***", "id": 35736, "time": "2003-04-21T23:06:52Z", "creator": "funkman@joedog.org", "creation_time": "2003-04-21T23:06:52Z", "is_private": false, "attachment_id": null}]