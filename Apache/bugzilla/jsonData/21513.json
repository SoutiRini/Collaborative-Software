[{"count": 0, "tags": [], "bug_id": 21513, "attachment_id": null, "id": 40473, "creation_time": "2003-07-11T14:42:23Z", "time": "2003-07-11T14:42:23Z", "creator": "lubosp@msn.com", "text": "I would like to have ability to set value of User Defined Variables from \ncommand line when starting the test in non-GUI mode.\nFor example I would define ${host}, ${port} user variables with some default\nvalue, and than I would pass the new value for both like:\n\njmeter -n -t my_test.jmx -l log.jtl -Dhost=myhost -Dport=1234", "is_private": false}, {"count": 1, "tags": [], "creator": "tjsb@slb.com", "text": "Have you tried using the new __property() function?", "id": 40487, "time": "2003-07-11T16:04:55Z", "bug_id": 21513, "creation_time": "2003-07-11T16:04:55Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 21513, "attachment_id": null, "id": 40497, "time": "2003-07-11T18:28:58Z", "creator": "lubosp@msn.com", "creation_time": "2003-07-11T18:28:58Z", "is_private": false, "text": "No I didn't. I have 1.9RC2, but there in no __property function documented \nthere.\n\nWhat version is it in and what does it exactly do?"}, {"count": 3, "tags": [], "creator": "tjsb@slb.com", "attachment_id": null, "text": "Sorry, you're right - the __property() function was added after RC2.\n\nIt will presumably be in the latest nightly builds.\n\nOr if you want to build it yourself, you can pick up the new files from CVS. \nYou will need at least the following:\n- Property.java in functions\n- messages.properties\n- component_reference.html (for the documentation)\n\nThe bug with the patches is 20771.\n\nUsage: ${__property(host)} or ${__property(port,variable)}\n\nThe second parameter is optional.\n\n", "id": 40565, "time": "2003-07-13T01:02:15Z", "bug_id": 21513, "creation_time": "2003-07-13T01:02:15Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 21513, "is_private": false, "text": "RC3 will be out very shortly", "id": 40731, "time": "2003-07-15T14:37:33Z", "creator": "mstover1@apache.org", "creation_time": "2003-07-15T14:37:33Z", "attachment_id": null}, {"count": 5, "tags": [], "creator": "lubosp@msn.com", "is_private": false, "id": 40753, "creation_time": "2003-07-15T17:22:10Z", "time": "2003-07-15T17:22:10Z", "bug_id": 21513, "text": "The __property function doesn't worl quite as I expected. What I want is to \ndefine user defined variable like host, port and set their default values.\n\nThen I use those values in HTTP Request Defaults like ${__property(host,host)},\nand ${__property(port,port)}.\nIf it is run from GUI or even non GUI and property is not set, user defined \nvariable value is used. If -Dhost=xxx is used, than value xxx is used instead.\n\nI have modified Property.java execute method to do that:\n\n\tString propertyName = ((CompoundVariable)values[0]).execute();\n        String propertyDefault = propertyName;\n        if (values.length > 1) {\n            String variableName = ((CompoundVariable)values[1]).execute();\n            propertyDefault = getVariables().get(variableName);\n        }\n\tString propertyValue = JMeterUtils.getPropDefault\n(propertyName,propertyDefault);\n\t\tif (values.length > 1) {\n\t\t\tString variableName = ((CompoundVariable)values\n[1]).execute();\n\t\t\tgetVariables().put(variableName,propertyValue);\n\t\t}\n\t\treturn propertyValue;\n\n\n\nI can't check it in. So if you agree with the change would you please put it \nin. Let me know in any case.\n\n", "attachment_id": null}, {"count": 6, "tags": [], "creator": "tjsb@slb.com", "attachment_id": null, "text": "[At present the function is documented to return the property name if the \nproperty is not defined.]\n\nDo you mean that you want to be able to supply a default value which will be \nreturned if the property is not defined?\n\nAt presemt, the second parameter is currently the name of a variable to store \nthe result in.\n\nSo are you suggesting that this is replaced by the default value, or are you \nsuggesting that a new parameter is introduced to store the default value?\n\n[I don't mind which is done.]", "id": 40806, "time": "2003-07-16T11:14:32Z", "bug_id": 21513, "creation_time": "2003-07-16T11:14:32Z", "is_private": false}, {"count": 7, "tags": [], "bug_id": 21513, "is_private": false, "text": "I am suggesting that the user defined variable is also used as default value\nas coded above.\nThis way you can use the testplan from GUI (or cmd.line) without specifying\nthe property value at cmd. line, and the call to __property will return\nuser variable value.\n\nBut if the property is specified at cmd. line, it overrides the value of\nuser defined variable and replaces its value.\n\nThis is exactly how the code above works. I am running JMeter  with the code\nabove, and it works exactly like that.\n1. I can run testplan from GUI (no properties specified, user variable used)\n2. I can run testplan from cmd. line without properties (user variable used)\n3. I can run testplan from cmd. line with properties defined to override the \nuser variables.\n\nBTW, I am using __property() for host, port, number of threads, number of \nloops, and in Uniform Timer for constant and random delay.\n ", "id": 40823, "time": "2003-07-16T13:05:38Z", "creator": "lubosp@msn.com", "creation_time": "2003-07-16T13:05:38Z", "attachment_id": null}, {"count": 8, "tags": [], "text": "So - the second parameter is used both as the default value AND as the name of \nthe variable in which the result is stored?\n\nI don't think that is a good idea - for one thing, if two different calls to \n__property() have the same default value, the variable will be overwritten. And \nis '8080' a valid variable name? It would be confusing referring to ${8080} \nelsewhere in the plan when that could actually be 80 or 123 or whatever ...\n\n==\n\nEither the second parameter needs to become the default value (and the function \nno longer uses it to store the result), or a 3rd parameter is needed.\n\nGiven that the function is fairly simple, I prefer the idea of keeping just two \nparameters, and no longer storing the output value.\n\nIf the plan needs the same value elsewhere, just call _property() again - or \nstore the value in a user parameters test element.", "attachment_id": null, "id": 40831, "creator": "tjsb@slb.com", "time": "2003-07-16T14:10:54Z", "bug_id": 21513, "creation_time": "2003-07-16T14:10:54Z", "is_private": false}, {"count": 9, "tags": [], "bug_id": 21513, "attachment_id": null, "id": 40845, "time": "2003-07-16T16:25:53Z", "creator": "lubosp@msn.com", "creation_time": "2003-07-16T16:25:53Z", "is_private": false, "text": "Sorry I have hard time explaining it. But the default value is the value of \nthe user variable.\nSo for example I define variable portVariable with value 8080.\nThen in HTTP Defaults I use ${__property(portProperty, portVariable)}.\nIf there is no portProperty property defined, the portVariable user variable \nwill stay the same, 8080.\nIf the property portProperty is defined (for example 8090), then portVariable \nwill be overriden by the value of the portProperty (8090).\n\nIn your example you were confusing the name of the variable (port) and the \nvalue of the variable (8080).\n\n__property() expects name of the variable as second parameter, and then uses\nvalue of the variable to return if no property is specified. If property is\nspecified then value of property is used, and the variable specified in second\nparameter is set to this value.\n\nPlease consider adding this functionality there. Otherwise I have no use for\nfor the __property function (I want to make testplan working from GUI and\ncmd. line (with or without property specified). I would have to modify\nProperty.java any time I want to upgrade JMeter, or write my own function.\n\nBTW, feel free to use my email directly if you consider it more convenient.\nAnd thanks for working on JMeter, it is great application, very valuable\nfor testing!\n"}, {"count": 10, "tags": [], "bug_id": 21513, "attachment_id": null, "id": 40848, "time": "2003-07-16T17:07:23Z", "creator": "tjsb@slb.com", "creation_time": "2003-07-16T17:07:23Z", "is_private": false, "text": "Assuming we do as you say, then:\n\n${__property(portProperty, portVariable)}\n\nwill return the value of the property \"portProperty\".\nIf this is not set it will return the contents of portVariable.\n\nSo far, so good.\n\nHowever, the function will also overwrite the contents of portVariable with the \nvalue of the property \"portProperty\". I think that could be confusing.\n\nOne also has to create a separate variable merely to define the default value.\n\nWhat I had in mind was:\n\n  UserVar   Value\n  hostPort  ${__property(portProperty,8080}\nor\n  hostPort  ${__property(portProperty,varname,8080}\n- if we keep the output variable\n\nYou can then refer to ${hostPort} in the HTTP test element.\n\nWould that meet your needs?"}, {"count": 11, "tags": [], "bug_id": 21513, "attachment_id": null, "id": 40855, "creation_time": "2003-07-16T17:58:42Z", "time": "2003-07-16T17:58:42Z", "creator": "lubosp@msn.com", "text": "Yep that will work (I think 8-). I probably missunderstood the use of \n__property, and used it in testplan elements (timers etc), instead of in\nUser Variables definitions in testplan itself.\n\nThat is because I thought the second param of __property must be a variable,\nnot a value.\n\nIt doesn't work like that with the latest code, does it?\nI make modification in my testplan as suggested:\n\n  UserVar   Value\n  hostPort  ${__property(portProperty,8080)}\n\nbut it doesn't work.\n", "is_private": false}, {"count": 12, "tags": [], "bug_id": 21513, "attachment_id": null, "is_private": false, "id": 40914, "time": "2003-07-17T18:02:59Z", "creator": "tjsb@slb.com", "creation_time": "2003-07-17T18:02:59Z", "text": "Agreed - it doesn't work - yet, but read on:\n\nThe existing version of __property() has 2 parameters:\n- property name (required)\n- variable name (optional)\n\nThe patches - to follow - add an extra parameter to make it:\n- property name (required)\n- default value (optional)\n- variable name (optional)\n\nI pushed the variable name into 3rd place, as it is less likely to be needed \nthan the default value.\n\nPut it in User Variables (no need for the 3rd param), or use it in a testplan \nelement. If the value is needed elsewhere, call it with the 3rd param, \notherwise just use 2 or even 1 parameter.\n\n[N.B. all functions can be used anywhere that a variable reference can be used]"}, {"count": 13, "tags": [], "creator": "tjsb@slb.com", "attachment_id": 7350, "text": "Created attachment 7350\n[Patch] add new property default messages", "id": 40915, "time": "2003-07-17T18:04:10Z", "bug_id": 21513, "creation_time": "2003-07-17T18:04:10Z", "is_private": false}, {"count": 14, "tags": [], "bug_id": 21513, "is_private": false, "text": "Created attachment 7351\n[patch] update property description in component reference", "id": 40916, "time": "2003-07-17T18:04:56Z", "creator": "tjsb@slb.com", "creation_time": "2003-07-17T18:04:56Z", "attachment_id": 7351}, {"count": 15, "tags": [], "bug_id": 21513, "is_private": false, "text": "Created attachment 7352\n[patch] new property default value parameter", "id": 40917, "time": "2003-07-17T18:06:08Z", "creator": "tjsb@slb.com", "creation_time": "2003-07-17T18:06:08Z", "attachment_id": 7352}, {"count": 16, "tags": [], "bug_id": 21513, "attachment_id": null, "is_private": false, "id": 41671, "time": "2003-07-28T17:09:48Z", "creator": "lubosp@msn.com", "creation_time": "2003-07-28T17:09:48Z", "text": "Using function __property in Test Plan user defined variables doesn't execute \nthe function, it returns literal value of it instead.\nI define User Variable:\n\nhost     ${__property(host,guava)}\n\nand when running the test It failed with URL error, where url is ${__property\n(host,guava)}.\n\nIf the same function ${__property(host,guava)} is applied to HTTP Request \nDefaults Server Name field, it works as expected, and if host property is not\ndefined Server Name is set to guava.\n\nThis might be more related to how User Variables are evalueted, and might \nrequire to file different bug.\n"}, {"count": 17, "tags": [], "bug_id": 21513, "attachment_id": null, "id": 45407, "time": "2003-10-10T23:51:57Z", "creator": "sebb@apache.org", "creation_time": "2003-10-10T23:51:57Z", "is_private": false, "text": "__property is working now in 1.9.1; CVS has a second property function __P(), \nwhich has the syntax:\n\n__P(property,default)\nor just\n__P(property), in which case the default is 1"}]