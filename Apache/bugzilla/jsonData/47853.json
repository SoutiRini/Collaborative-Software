[{"count": 0, "tags": [], "creator": "trattnh@yahoo.com", "attachment_id": null, "id": 130447, "time": "2009-09-16T07:22:48Z", "bug_id": 47853, "creation_time": "2009-09-16T07:22:48Z", "is_private": false, "text": "I am using opensaml 2 to validate digital signature. Open saml uses the xmlsec jar for validation.\nThis works fine when the saml assertion is validated as is.\nThe problem happens when the signed assertion is wrapped inside a soap envelope.\nThe soap has the soap namespace added to it.\n\nThe problem is that the xmlns declaration is added to the SignedInfo during the validation.\n\nThe xml being validated looks like:\n<Signature xmlns=\"http://www.w3.org/2000/09/xmldsig#\">\n\t<SignedInfo>\n\t\t<CanonicalizationMethod Algorithm=\"http://www.w3.org/2001/10/xml-exc-c14n#WithComments\">\n\n\nbut if I check the canonicalized signed info with signature.getSignedInfo().getCanonicalizedData();\nI get:\n<SignedInfo xmlns=\"http://www.w3.org/2000/09/xmldsig#\">\n\t<CanonicalizationMethod Algorithm=\"http://www.w3.org/2001/10/xml-exc-c14n#WithComments\">\n\t\nThe xmlns=\"http://www.w3.org/2000/09/xmldsig#\" was added into the SignedInfo and this is why the reference validation is failing.\n(The signature is validated successfully, but the reference validation fails because the extra namespace declaration was added).\n\nHow can this be solved?\n\nThanks,"}, {"count": 1, "tags": [], "bug_id": 47853, "attachment_id": null, "text": "(In reply to comment #0)\n> I am using opensaml 2 to validate digital signature. Open saml uses the xmlsec\n> jar for validation.\n> This works fine when the saml assertion is validated as is.\n> The problem happens when the signed assertion is wrapped inside a soap\n> envelope.\n> The soap has the soap namespace added to it.\n> \n> The problem is that the xmlns declaration is added to the SignedInfo during the\n> validation.\n> \n> The xml being validated looks like:\n> <Signature xmlns=\"http://www.w3.org/2000/09/xmldsig#\">\n>     <SignedInfo>\n>         <CanonicalizationMethod\n> Algorithm=\"http://www.w3.org/2001/10/xml-exc-c14n#WithComments\">\n> \n> \n> but if I check the canonicalized signed info with\n> signature.getSignedInfo().getCanonicalizedData();\n> I get:\n> <SignedInfo xmlns=\"http://www.w3.org/2000/09/xmldsig#\">\n>     <CanonicalizationMethod\n> Algorithm=\"http://www.w3.org/2001/10/xml-exc-c14n#WithComments\">\n> \n> The xmlns=\"http://www.w3.org/2000/09/xmldsig#\" was added into the SignedInfo\n> and this is why the reference validation is failing.\n> (The signature is validated successfully, but the reference validation fails\n> because the extra namespace declaration was added).\n> \n> How can this be solved?\n\nThis is not the reason the signature is invalid. SignedInfo validation is part of the signature validation and not the reference validation. You need to check the canonicalized data of the Reference(s) instead. Compare the data when you validate it before and after you move it into the Soap envelope. It is likely a problem in that you are using inclusive C14n instead of exclusive C14N and a namespace in the Soap envelope is being include in the canonicalized Reference and thus invalidating the digest and breaking the signature.", "id": 130449, "time": "2009-09-16T07:51:27Z", "creator": "sean.mullan@oracle.com", "creation_time": "2009-09-16T07:51:27Z", "is_private": false}, {"count": 2, "tags": [], "creator": "trattnh@yahoo.com", "text": "Hi,\nI am using exclusive canonicalization  \n<CanonicalizationMethod\n   Algorithm=\"http://www.w3.org/2001/10/xml-exc-c14n#WithComments\"> \n  ....\n\n\nBasically what I did is sign the assertion and then all I did was manually edit the file by adding <soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\"> at the beginning of the file and </soapenv:Envelope> at the end of the file.\nIf I then try to validate the signature, the signature validates but the reference does not. When using an inclusive canonicaliztion the signature also does not validate, so using the exclusive c14n does have a positive effect, but it does not help the reference validation.\n\nIf I were to add the Envelope tag with out the namespace declaration - it validates successfully.\n\n\nThis is how I came to the conclusion that the reference validation problem only occurs when adding tags with namespace declarations.", "id": 130452, "time": "2009-09-16T10:51:33Z", "bug_id": 47853, "creation_time": "2009-09-16T10:51:33Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "creator": "sean.mullan@oracle.com", "attachment_id": null, "id": 130454, "time": "2009-09-16T11:01:43Z", "bug_id": 47853, "creation_time": "2009-09-16T11:01:43Z", "is_private": false, "text": "(In reply to comment #2)\n> Hi,\n> I am using exclusive canonicalization  \n> <CanonicalizationMethod\n>    Algorithm=\"http://www.w3.org/2001/10/xml-exc-c14n#WithComments\"> \n>   ....\n> \n> \n> Basically what I did is sign the assertion and then all I did was manually edit\n> the file by adding <soapenv:Envelope\n> xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\"> at the beginning of\n> the file and </soapenv:Envelope> at the end of the file.\n> If I then try to validate the signature, the signature validates but the\n> reference does not. When using an inclusive canonicaliztion the signature also\n> does not validate, so using the exclusive c14n does have a positive effect, but\n> it does not help the reference validation.\n> \n> If I were to add the Envelope tag with out the namespace declaration - it\n> validates successfully.\n> \n> \n> This is how I came to the conclusion that the reference validation problem only\n> occurs when adding tags with namespace declarations.\n\nThere is not enough information to proceed. Please attach the XML before and after you added it to the soap envelope.\n\nAlso, get a dump of the canonicalized references in the good signature and the bad signature and compare what is different. See: http://weblogs.java.net/blog/mullan/archive/2006/02/more_xml_signat_1.html"}, {"count": 4, "tags": [], "creator": "trattnh@yahoo.com", "attachment_id": 24279, "id": 130457, "time": "2009-09-16T11:29:04Z", "bug_id": 47853, "creation_time": "2009-09-16T11:29:04Z", "is_private": false, "text": "Created attachment 24279\nfile with namespace soap tags - fails reference validation"}, {"count": 5, "tags": [], "bug_id": 47853, "attachment_id": 24280, "text": "Created attachment 24280\nassertion only - passes reference validation", "id": 130458, "time": "2009-09-16T11:30:12Z", "creator": "trattnh@yahoo.com", "creation_time": "2009-09-16T11:30:12Z", "is_private": false}, {"count": 6, "tags": [], "bug_id": 47853, "attachment_id": null, "text": "I attached the xmls with and without the soap tags (which I added manually)\n\nI will now try to set the logging in order to see what the canonicalized references look like in each of the files\n\nThanks for you quick replies,", "id": 130459, "time": "2009-09-16T11:34:02Z", "creator": "trattnh@yahoo.com", "creation_time": "2009-09-16T11:34:02Z", "is_private": false}, {"count": 7, "tags": [], "creator": "cantor.2@osu.edu", "text": "There's almost no chance this is a bug in xmlsec. Signature issues with OpenSAML should be raised on that mailing list, not as xmlsec bugs. The actual approach to doing so is as Sean says, comparing digest bytes.\n\nThere are known bugs in the OpenSAML XML layer around nesting because it overuses the InclusivePrefix mechanism. Chances are that's the problem.\n\nI would advise closing this and raising the issue on the right list once the digest information is obtained.", "id": 130460, "time": "2009-09-16T11:42:50Z", "bug_id": 47853, "creation_time": "2009-09-16T11:42:50Z", "is_private": false, "attachment_id": null}, {"count": 8, "tags": [], "bug_id": 47853, "attachment_id": null, "text": "Hi,\n\nI did another test without using the opensaml jar. I only used the xmlsec-1.4.2.jar - following is the manifest:\nManifest-Version: 1.0\nAnt-Version: Apache Ant 1.7.0\nCreated-By: 1.4.2_17-b06 (Sun Microsystems Inc.)\nBuilt-By: mullan\n\nName: xmlsec\nImplementation-Title: Apache-XML-Security-J\nImplementation-Version: 1.4.2 June 23 2008\nImplementation-Vendor: Apache Software Foundation\n\n\nI checked the canonicalized references in the good signature and the\nbad signature and compared what is different according to the log.\n\nIn the assertion that was signed there are no namespace declarations for soapenv (since the assertion was signed by itself - and only afterwards it was copy pasted into the soap wrapper):\n\n\n<saml:Assertion AssertionID=\"saml-2\" ID=\"Assertion\" IssueInstant=\"2008-08-15T02:12:44.179Z\" Issuer=\"urn:test-sts\" MajorVersion=\"1\" MinorVersion=\"1\" xmlns:saml=\"urn:oasis:names:tc:SAML:2.0:assertion\">\n  <saml:Conditions NotBefore=\"2008-11-03T05:00:00.000Z\" NotOnOrAfter=\"2009-12-01T03:08:59.000Z\"/>\n  <saml:Advice/>\n  <saml:AttributeStatement>\n    <saml:Subject>\n      <saml:NameID Format=\"urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName\">root</saml:NameID>\n    </saml:Subject>\n    <saml:Attribute Name=\"AppId\">\n      <saml:AttributeValue>SRM</saml:AttributeValue>\n    </saml:Attribute>\n  </saml:AttributeStatement>\n</saml:Assertion>\n\n\n\n but during validation the canonicalized reference looks like this:\n\n<saml:Assertion xmlns:saml=\"urn:oasis:names:tc:SAML:2.0:assertion\" xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:wsse=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd\" AssertionID=\"saml-2\" ID=\"Assertion\" IssueInstant=\"2008-08-15T02:12:44.179Z\" Issuer=\"urn:test-sts\" MajorVersion=\"1\" MinorVersion=\"1\">\n  <saml:Conditions NotBefore=\"2008-11-03T05:00:00.000Z\" NotOnOrAfter=\"2009-12-01T03:08:59.000Z\"></saml:Conditions>\n  <saml:Advice></saml:Advice>\n  <saml:AttributeStatement>\n    <saml:Subject>\n      <saml:NameID Format=\"urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName\">root</saml:NameID>\n    </saml:Subject>\n    <saml:Attribute Name=\"AppId\">\n      <saml:AttributeValue>SRM</saml:AttributeValue>\n    </saml:Attribute>\n  </saml:AttributeStatement>\n</saml:Assertion>\n\n\nAs you can see, the xmlns declarations for soapenv and wsse were added to the saml:Assertion tag even though javax.xml.crypto.dsig.CanonicalizationMethod.EXCLUSIVE_WITH_COMMENTS is being used.\nThis is why the reference validation is failing.", "id": 130479, "time": "2009-09-17T04:42:10Z", "creator": "trattnh@yahoo.com", "creation_time": "2009-09-17T04:42:10Z", "is_private": false}, {"count": 9, "tags": [], "creator": "sean.mullan@oracle.com", "text": "Actually, you are using Inclusive C14N to canonicalize your Reference. This is the Reference in your signature:\n\n<Reference URI=\"#Assertion\"><Transforms><Transform Algorithm=\"http://www.w3.org/2000/09/xmldsig#enveloped-signature\"/></Transforms><DigestMethod Algorithm=\"http://www.w3.org/2000/09/xmldsig#sha1\"/><DigestValue>LFkVUeisRZJTnIwrlZ7pMxp/oeM=</DigestValue></Reference>\n\nIf a Reference that produces a node-set does not specify a canonicalization algorithm as the last transform, then inclusive C14n is implicitly used. See section 4.3.3.2 of http://www.w3.org/TR/xmldsig-core/:\n\n\"If the data object is a node-set and the next transform requires octets, the signature application MUST attempt to convert the node-set to an octet stream using Canonical XML [XML-C14N].\"\n\nThe CanonicalizationMethod specified in the SignedInfo element does not apply to the References, it only applies to the SignedInfo element.\n\nTo fix this, you need to add an explicit exclusive C14N transform after the enveloped transform, ex:\n\n<Reference URI=\"#Assertion\"><Transforms><Transform Algorithm=\"http://www.w3.org/2000/09/xmldsig#enveloped-signature\"/><Transform Algorithm=\"http://www.w3.org/2001/10/xml-exc-c14n#\"></Transform>\n</Transforms><DigestMethod Algorithm=\"http://www.w3.org/2000/09/xmldsig#sha1\"/><DigestValue>LFkVUeisRZJTnIwrlZ7pMxp/oeM=</DigestValue></Reference>\n\nYou may want to check with Scott or the SAML forums as to the best practices\nwhen signing SAML assertions.", "id": 130481, "time": "2009-09-17T06:11:43Z", "bug_id": 47853, "creation_time": "2009-09-17T06:11:43Z", "is_private": false, "attachment_id": null}, {"count": 10, "tags": [], "text": "Hi,\nThat was the problem.\n\nThanks for you prompt support.", "is_private": false, "bug_id": 47853, "id": 130484, "time": "2009-09-17T07:39:38Z", "creator": "trattnh@yahoo.com", "creation_time": "2009-09-17T07:39:38Z", "attachment_id": null}]