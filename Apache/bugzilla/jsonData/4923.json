[{"count": 0, "tags": [], "text": "When we run Tomcat any version \n(i have tried tomcat 3.2.3, 3.3, 4.0.1)\nwith security turned on\nthe following code yeilds exceptions:\n\n<%=new File(pageContext.getServletContext().getRealPath(\"/\")).exists()%>\n\n<%\njava.io.File tempDir=\n(java.io.File)pageContext.getServletContext(\n).getAttribute(\"javax.servlet.context.tempdir\");\n%>\n<%=tempDir.exists()%>\n\nI beleive this happens because when you grant permissions\nof the form \n\ngrant {\n  permission java.io.FilePermission \"../m/-\", \"read\";\n};\n\nthis does not allow you to check if \n\nnew File(\"../m\").exists()\n\nor do\n\nnew File(\"../m\").list()\n\nto do that you need to explicitly do\n\ngrant {\n  permission java.io.FilePermission \"../m/-\", \"read\";\n  permission java.io.FilePermission \"../m\", \"read\";\n};\n\nThe whole issue causes security exceptions when you deploy\nCocoon2 samples, Velocity samples.\nThey both have code like\n\nFile log = new File(..getRealPath(logFile));\nFile parent = new File( log.getParent() );\nif (!parent.exists()) parent.mkdirs();\n\nno surprise this failes.\n\nI beleive that it would be quite reasonable to allow\nchecking exists() and doing list() on \n..getRealPath(\"/\");\nand the temporary working dir.\n\nThis bug (or not bug?) has been reported as #4922 for\nTomcat 4.0.1 final", "attachment_id": null, "id": 7992, "creator": "tagunov@motor.ru", "time": "2001-11-16T06:01:58Z", "bug_id": 4923, "creation_time": "2001-11-16T06:01:58Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 4923, "attachment_id": null, "is_private": false, "id": 10120, "time": "2002-01-31T14:23:04Z", "creator": "Larry.Isaacs@sas.com", "creation_time": "2002-01-31T14:23:04Z", "text": "This has been fixed in the current nightly Tomcat 3.3.x and will appear in\nthe next release of Tomcat 3.3.1."}]