[{"count": 0, "tags": [], "creator": "olivier.navas@netcourrier.com", "attachment_id": null, "text": "Hi.\n\nI see some inconsistent behavior when using JNDI lookups within a\nServletContextListener. \nI join minimal sample files with which this issue can be reproduced.\nI use tomcat 5.0.19 and sun's j2sdk 1.4.2_04, on linux.\n\nWhen i try to read an <Environment> entry defined in the server.xml from my\napplication, I have the following results:\n\nStarting from scratch a new web module, I add a DefaultContext, nested in the\nappropriate Engine, in order to define my environment value in the server.xml,\nlike this:\n\n===== server.xml ===== (this is not the complete file, I write engine and\nservice lines to show where I defined the DefaultContext)\n  <Service name=\"Catalina\">\n    <Engine defaultHost=\"localhost\" name=\"Catalina\">\n\n      <DefaultContext reloadable=\"true\" debug=\"99\">\n         <Environment name=\"testEnvironment\" value=\"value in server.xml\"\ntype=\"java.lang.String\"/>\n      </DefaultContext>\n\n    </Engine>\n  </Service>\n========\n\n\nThen I call this jsp file to read my \"testEnvironment\"\n\n===== index.jsp =====\n<%@page contentType=\"text/html\"%>\n<%@page pageEncoding=\"UTF-8\"%>\n<html>\n<head><title>JSP Page</title></head>\n<body>\n<%\n    javax.naming.Context initCtx = new javax.naming.InitialContext();\n    javax.naming.Context envCtx = (javax.naming.Context)\ninitCtx.lookup(\"java:comp/env\");\n%>\n\n<%=envCtx.lookup(\"testEnvironment\")%>\n</body>\n</html>\n========\n\nat this point, it works, and I can read \"value in server.xml\" in my browser.\n\nThe problem is that I need this value when the application starts. So I add the\nfollowing ServletContextListener:\n\n===== TestListener.java =====\nimport javax.servlet.ServletContextListener;\nimport javax.servlet.ServletContextEvent;\nimport javax.naming.*;\n\npublic class TestListener implements ServletContextListener {\n    public void contextInitialized(ServletContextEvent e) {\n        try {\n            Context initCtx = new InitialContext();\n            Context envCtx = (Context) initCtx.lookup(\"java:comp/env\");\n\n            e.getServletContext().log(\"Found environment entry: \" +\nenvCtx.lookup(\"testEnvironment\"));\n        } catch(Exception ex) {\n            ex.printStackTrace();\n        }\n    }\n    \n    public void contextDestroyed(ServletContextEvent e) {\n    }\n}\n======\n\nand declare this listener in my web.xml:\n\n===== web.xml =====\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<web-app version=\"2.4\" xmlns=\"http://java.sun.com/xml/ns/j2ee\"\nxmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\nxsi:schemaLocation=\"http://java.sun.com/xml/ns/j2ee\nhttp://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd\">\n  <listener>\n    <listener-class>TestListener</listener-class>\n  </listener>\n</web-app>\n======\n\nBut now, when I start the application, I get the following exception (first few\nlines) (in english, the first line should be something like \"testEnvironment is\nnot bound to this context\")\n\njavax.naming.NameNotFoundException: Le Nom testEnvironment n'est pas li\u00e9 \u00e0 ce\nContexte\n        at org.apache.naming.NamingContext.lookup(NamingContext.java:815)\n        at org.apache.naming.NamingContext.lookup(NamingContext.java:198)\n        at TestListener.contextInitialized(TestListener.java:15)\n        at\norg.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:3773)\n        at org.apache.catalina.core.StandardContext.start(StandardContext.java:4270)\n        at\norg.apache.catalina.core.StandardContext.reload(StandardContext.java:2990)\n        at\norg.apache.catalina.manager.ManagerServlet.reload(ManagerServlet.java:1019)\n\n\nIf I add the following entry in my web.xml, I don't get an exception anymore,\nbut the listener logs the value in web.xml while the jsp displays the value in\nserver.xml.\n  <env-entry>\n    <env-entry-name>testEnvironment</env-entry-name>\n    <env-entry-value>value in web.xml</env-entry-value>\n    <env-entry-type>java.lang.String</env-entry-type>\n  </env-entry>\n\n\nThen, if I remove the environment entry from server.xml, of course, both jsp and\nlistener get the value from web.xml.\n\n\nSo, from my point of view, it seems that tomcat calls the contextInitialized\nmethod after it has read the web.xml but before it has completely initialized\nthe context with DefaultContext definitions from server.xml.", "id": 60548, "time": "2004-07-13T15:23:00Z", "bug_id": 30079, "creation_time": "2004-07-13T15:23:00Z", "is_private": false}, {"count": 1, "tags": [], "text": "I think this is not going to be fixed (assuming it really doesn't work, which\nI'm not really convinced of at this point). You should try to work on a patch\n(but this is likely tricky) if you want resolution.", "is_private": false, "bug_id": 30079, "id": 60556, "time": "2004-07-13T17:14:46Z", "creator": "remm@apache.org", "creation_time": "2004-07-13T17:14:46Z", "attachment_id": null}, {"count": 2, "tags": [], "text": "DefaultContext JNDI behavior was a bit shaky with a few Tomcat releases, so it \ncould be your issue is valid.  However:\n- DefaultContext is gone altogether in Tomcat 5.5, replaced with a different \nmechanism,\n- JNDI resources work fine for both normal Contexts and via \nGlobalNamingResources/ResourceLink: either one of those is a better approach \nand more encouraged than using DefaultContext,\n- Several Tomcat versions on the 5.0.x branch have been released since, so if \nyou really must keep using DefaultContext you could try these later versions\n\nGiven those three points, and the lack of response to Remy's comments from two \nmonths ago, I'm going to close this issue as INVALID.", "attachment_id": null, "id": 63739, "creator": "yoavs@computer.org", "time": "2004-09-17T15:50:56Z", "bug_id": 30079, "creation_time": "2004-09-17T15:50:56Z", "is_private": false}]