[{"count": 0, "attachment_id": null, "creator": "fujino.keiichi@oss.ntt.co.jp", "is_private": false, "id": 132640, "time": "2009-12-07T02:09:14Z", "bug_id": 48345, "creation_time": "2009-12-07T02:09:14Z", "tags": [], "text": "I am encountering the problem that Session does time-out shorter than setting in web.xml.\n\nThis is a simple scenario where the problem occurs. \n\nI am using PersistentManager by the following configuration.\n<Context>\n  <Manager className=\"org.apache.catalina.session.PersistentManager\"\n           maxIdleSwap=\"120\">\n    <Store className=\"org.apache.catalina.session.FileStore\"/>\n  </Manager>\n</Context>\n\nI am setting the session-timeout at five minutes.\n<session-config>\n    <session-timeout>5</session-timeout>\n</session-config>\n\n[scenario]\n1. Create Session.\n2. 120 seconds pass. \n   Session does swapOut. \n3. In addition, 120 seconds pass. \n   Get Session.\n   Session does swapIn and access time of session in the memory is updated. \n4. In addition, 90 seconds pass.\n   Get Session.\n\nBecause the access time of the session has been updated in (3),\nThe session should be able to be acquired.\nHowever, the session can not be acquired. \n\nThis cause is StoreBase#processExpires invoked between (3) and (4).\nStoreBase#processExpire deletes the session saved in Store.\nStoreBase#processExpires is as follows.\n\n=====StoreBase#processExpires=====\npublic void processExpires() {\n...\n    for (int i = 0; i < keys.length; i++) {\n        try {\n            StandardSession session = (StandardSession) load(keys[i]);\n            if (session == null) {\n                continue;\n            }\n            if (session.isValid()) {\n                continue;\n            }\n              ...\n            if ( ( (PersistentManagerBase) manager).isLoaded( keys[i] )) {\n                // recycle old backup session\n                session.recycle();\n            } else {\n                // expire swapped out session\n                session.expire();\n            }\n            remove(session.getIdInternal());\n        } catch (Exception e) {\n            ...\n        }\n    }\n}\n======\n\nThe session saved in Store is loaded, and StandardSession#isValid() is executed. \nStandardSession#expire(true) is invoked for the session that passes \nsession time-out in \"StandardSession#isValid()\". \n\nStandardSession#expire(true) invokes Manager#remove(Session).\nAs a result, the session is deleted from the session map. \n\nIn a word, session in memory is deleted by invalidating old session in Store. \nAs a result, session does time-out shorter than setting in web.xml\n\nI made a patch against trunk.\n\nBest regards."}, {"count": 1, "tags": [], "bug_id": 48345, "text": "Created attachment 24674\npatch for trunk.\n\npatch for trunk.\n\n\nIMHO,\nthe following are necessary for backport to 6.0_trunk. \n\nApplies these revisions.\nhttp://svn.apache.org/viewvc?view=revision&revision=711716\nhttp://svn.apache.org/viewvc?view=revision&revision=711720\n\nremove duplicated local variable timeNow.", "id": 132641, "time": "2009-12-07T02:12:06Z", "creator": "fujino.keiichi@oss.ntt.co.jp", "creation_time": "2009-12-07T02:12:06Z", "is_private": false, "attachment_id": 24674}, {"count": 2, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "id": 133215, "time": "2009-12-30T03:36:58Z", "bug_id": 48345, "creation_time": "2009-12-30T03:36:58Z", "is_private": false, "text": "Thanks for the patch. I have committed it to trunk and proposed a variation for 6.0.x"}, {"count": 3, "tags": [], "bug_id": 48345, "text": "The fix for this issue was applied to 6.0 and is in 6.0.23 onwards.", "id": 135120, "time": "2010-03-06T17:49:24Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2010-03-06T17:49:24Z", "is_private": false, "attachment_id": null}]