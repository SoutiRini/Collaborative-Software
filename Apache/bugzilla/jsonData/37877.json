[{"count": 0, "tags": [], "bug_id": 37877, "attachment_id": null, "is_private": false, "id": 83569, "time": "2005-12-12T19:33:15Z", "creator": "ono@java.pl", "creation_time": "2005-12-12T19:33:15Z", "text": "Please look at files at URL. At Batik viewer they look fine. But once PDF is\ngenerated using FOP dimensions of those files get crazy. Those files are clipped\n(sample1) or stretched by fop (sample2, sample3).\n\nThis is serious bug which makes SVG embedding kind of unusable."}, {"count": 1, "tags": [], "bug_id": 37877, "attachment_id": 17204, "id": 83570, "time": "2005-12-12T19:34:53Z", "creator": "ono@java.pl", "creation_time": "2005-12-12T19:34:53Z", "is_private": false, "text": "Created attachment 17204\nBuggy behaviour on SVG of FOP 0.90 TRUNK\n\nThose are samplefiles that shows buggy FOP behaviour."}, {"count": 2, "tags": [], "bug_id": 37877, "attachment_id": 17205, "id": 83575, "time": "2005-12-12T20:12:03Z", "creator": "adelmelle@apache.org", "creation_time": "2005-12-12T20:12:03Z", "is_private": false, "text": "Created attachment 17205\nResult using the most recent revision\n\nAre you using the binary distribution, or did you check out the source and\nbuild yourself?\nThe two last pictures don't seem to get stretched when I run this FO through\nFOP (revision 356327). Take a look at the sample in attach (don't mind the #'s\nfor the missing glyphs). Is this more like it?"}, {"count": 3, "tags": [], "text": "Okay I know what did the trick... I took default config file shipped with FOP\nTRUNK that has the setting of:\n<resolution>72</resolution>\n\nThis setting produced that bug... please try run FOP with this setting in\nconfig.. you will see some SVG images will go stretched.\n\nThis should be fixed.. or this setting should be commented out in sample config.", "is_private": false, "bug_id": 37877, "id": 83597, "time": "2005-12-13T13:42:43Z", "creator": "ono@java.pl", "creation_time": "2005-12-13T13:42:43Z", "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 37877, "is_private": false, "count": 4, "id": 83598, "time": "2005-12-13T13:56:49Z", "creator": "ono@java.pl", "creation_time": "2005-12-13T13:56:49Z", "text": "Can I also kindly ask for explanation why the 1st file is cropped on PDF ??\nI generated it using Inkscape, and both Inkscape and Batik viewer are showing\nthis file complete. But FOP is cropping the file. Seems like some DPI, units\nconversion problem.. resulting that image dimensions are too small comparing to\nreal ones."}, {"count": 5, "tags": [], "bug_id": 37877, "is_private": false, "id": 83608, "attachment_id": null, "creator": "adelmelle@apache.org", "creation_time": "2005-12-13T19:22:20Z", "time": "2005-12-13T19:22:20Z", "text": "[in reply to comment #3]\nSo I did. I still can't reproduce the stretching effect... Maybe it's caused by the fact that I'm on Mac (Apple \nJVM 1.4.2)? Can anyone else running Windows XP confirm the stretching behavior?\n\n[in reply to comment #4]\nI haven't fully sorted out why the clipping happens. I'm not an SVG expert, so may take some time before I \ncan explain this, but as soon as I find something I'll get back to you."}, {"count": 6, "tags": [], "bug_id": 37877, "attachment_id": null, "is_private": false, "id": 83617, "time": "2005-12-13T23:37:56Z", "creator": "jeremias@apache.org", "creation_time": "2005-12-13T23:37:56Z", "text": "(In reply to comment #5)\n> [in reply to comment #3]\n> So I did. I still can't reproduce the stretching effect... Maybe it's caused\nby the fact that I'm on Mac (Apple \n> JVM 1.4.2)? Can anyone else running Windows XP confirm the stretching behavior?\n\nNo, no stretching here with FOP Trunk. I'll try again tomorrow with fresh energy.\n\n> [in reply to comment #4]\n> I haven't fully sorted out why the clipping happens. I'm not an SVG expert, so\nmay take some time before I \n> can explain this, but as soon as I find something I'll get back to you.\n\nIf I set the uaResolution to 96 in\norg.apache.fop.render.pdf.PDFSVGHandler.renderSVGDocument() then the SVG doesn't\nget clipped. PDF normally uses 72dpi. That and the fact that the SVG doesn't use\na viewBox is the reason that the sizes differ. As I learned from Thomas DeWeese,\nhaving an SVG without a viewBox asks for trouble. In this case here the viewBox\nshould be: viewBox=\"0 0 400 350\""}, {"count": 7, "tags": [], "text": "(In reply to comment #6)\n> No, no stretching here with FOP Trunk. I'll try again tomorrow with fresh energy.\nPlease try also with <resolution>96</resolution> in FOP config. After that FOP\ngives me broken PDF at all.. with 72 images are stretched vertically.\nI have no idea maybe AbstractGraphics2D scale causing that or ... no clue ;)\nTell me what is default resolution anyway if I don't set <resolution> in config ?\n\n> If I set the uaResolution to 96 in\n> org.apache.fop.render.pdf.PDFSVGHandler.renderSVGDocument() then the SVG doesn't\n> get clipped. PDF normally uses 72dpi. That and the fact that the SVG doesn't use\n> a viewBox is the reason that the sizes differ. As I learned from Thomas DeWeese,\n> having an SVG without a viewBox asks for trouble. In this case here the viewBox\n> should be: viewBox=\"0 0 400 350\"\nOr even smaller when looking at one set with viewBox=\"0 0 400 350\" the page is\ntoo big comparing one visible on Inkscape. When I use Batik Squiggle it reports\nviewbox as \"0 0 384 336\" which is more like one in Inkscape... maybe we can use\nsame method as it seems to be more acurate for SVG files without viewBox.\nIt is also Inkscape fault coz there is no way to force it to generate viewBox. \n\nHave you been using Inkscape or you do SVG samples by hand ?", "is_private": false, "id": 83649, "creator": "ono@java.pl", "time": "2005-12-14T15:17:11Z", "bug_id": 37877, "creation_time": "2005-12-14T15:17:11Z", "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 37877, "is_private": false, "count": 8, "id": 83705, "time": "2005-12-15T20:25:52Z", "creator": "jeremias@apache.org", "creation_time": "2005-12-15T20:25:52Z", "text": "(In reply to comment #7)\n> (In reply to comment #6)\n> > No, no stretching here with FOP Trunk. I'll try again tomorrow with fresh\nenergy.\n> Please try also with <resolution>96</resolution> in FOP config. After that FOP\n> gives me broken PDF at all.. with 72 images are stretched vertically.\n> I have no idea maybe AbstractGraphics2D scale causing that or ... no clue ;)\n> Tell me what is default resolution anyway if I don't set <resolution> in config ?\n\nI'm not through with this, but at least I have found and fixed a bug in\nFOUserAgent that read the resolution value as if it were a pixelToMillimeter\nvalue: http://svn.apache.org/viewcvs?rev=357063&view=rev\n\nThe default value for the resolution is 72dpi.\n\n> > If I set the uaResolution to 96 in\n> > org.apache.fop.render.pdf.PDFSVGHandler.renderSVGDocument() then the SVG doesn't\n> > get clipped. PDF normally uses 72dpi. That and the fact that the SVG doesn't use\n> > a viewBox is the reason that the sizes differ. As I learned from Thomas DeWeese,\n> > having an SVG without a viewBox asks for trouble. In this case here the viewBox\n> > should be: viewBox=\"0 0 400 350\"\n> Or even smaller when looking at one set with viewBox=\"0 0 400 350\" the page is\n> too big comparing one visible on Inkscape. When I use Batik Squiggle it reports\n> viewbox as \"0 0 384 336\" which is more like one in Inkscape... maybe we can use\n> same method as it seems to be more acurate for SVG files without viewBox.\n> It is also Inkscape fault coz there is no way to force it to generate viewBox. \n\nSquiggle, it turns out, uses a user agent that reports 96dpi. That's why the SVG\nimage looks fine there. The same probably applies to the Adobe SVG Viewer and\nthe SVG support in Firefox. Only FOP uses 72dpi mostly because of PDF and\nPostScript. I'm going to dig a little deeper here. At the very least, I want to\nknow why the images doesn't look good when I set the resolution to 96dpi.\n\n> Have you been using Inkscape or you do SVG samples by hand ?\n\nI have Inkscape installed and produced a few simple test files with it, but\nalways manipulating the produced SVG by hand afterwards. I also don't like\nInkscape too much because of the many bugs. I hope that will soon improve. Most\nSVGs I create are by hand."}, {"count": 9, "tags": [], "bug_id": 37877, "attachment_id": null, "id": 83707, "time": "2005-12-15T20:49:28Z", "creator": "adelmelle@apache.org", "creation_time": "2005-12-15T20:49:28Z", "is_private": false, "text": "> > Have you been using Inkscape or you do SVG samples by hand ?\n\n> I have Inkscape installed and produced a few simple test files with it, but\n> always manipulating the produced SVG by hand afterwards. I also don't like\n> Inkscape too much because of the many bugs. I hope that will soon improve. \n> Most SVGs I create are by hand.\n\nNote on the side: if there's a way to derive the size of the viewBox from the other attributes and the target \nresolution, a possible workaround to avoid the 'manual' intervention may be to insert the SVG as a \nfo:instream-foreign-object, and add the viewBox attribute via XSLT (combination of: document() + \nxsl:copy + xsl:attribute + xsl:copy-of)... Just a suggestion. Should be doable, IIC."}, {"count": 10, "tags": [], "text": "(In reply to comment #9)\n> > > Have you been using Inkscape or you do SVG samples by hand ?\n> \n> > I have Inkscape installed and produced a few simple test files with it, but\n> > always manipulating the produced SVG by hand afterwards. I also don't like\n> > Inkscape too much because of the many bugs. I hope that will soon improve. \n> > Most SVGs I create are by hand.\n> \n> Note on the side: if there's a way to derive the size of the viewBox from the\nother attributes and the target \n> resolution, a possible workaround to avoid the 'manual' intervention may be to\ninsert the SVG as a \n> fo:instream-foreign-object, and add the viewBox attribute via XSLT\n(combination of: document() + \n> xsl:copy + xsl:attribute + xsl:copy-of)... Just a suggestion. Should be\ndoable, IIC.\n\nThere's no way to derive the size of the viewBox. Otherwise, we would certainly\nimplement it. But the idea of using a wrapper for establishing a viewBox and\ntherefore indirectly correcting for a resolution that is differing from the\ndefault is a good one.\n\nHowever, I've just realized that we need two resolutions instead of one. One\nsource resolution (for interpreting the pixel size in an SVG image or a bitmap\nwith no resolution information) and a target resolution (for the effective\nresolution of an XSL-FO file rendered to a multi-page TIFF or for the resolution\nof filter effects generated as bitmaps by Batik). I'm currently implementing the\nnecessary changes. The downside here is that the configuration format and the\nuser agent's API would have to be changed in a backwards-incompatible way to\nhave self-speaking names there. But given that we're still in \"alpha\" mode, that\nshouldn't be a problem.\n", "is_private": false, "bug_id": 37877, "id": 83709, "time": "2005-12-15T22:21:11Z", "creator": "jeremias@apache.org", "creation_time": "2005-12-15T22:21:11Z", "attachment_id": null}, {"count": 11, "tags": [], "bug_id": 37877, "attachment_id": null, "id": 83713, "time": "2005-12-15T23:24:43Z", "creator": "jeremias@apache.org", "creation_time": "2005-12-15T23:24:43Z", "is_private": false, "text": "Resolution parameter split into source and target resolution. For details, see\ncommit message and updated documentation:\nhttp://svn.apache.org/viewcvs?rev=357081&view=rev\n\nFor Adam, this means he has to set the source-resolution parameter in the config\nfile to \"96\". Please retest with the latest sources and close the bug if\neverything's alright. It is on my machine."}, {"count": 12, "tags": [], "bug_id": 37877, "attachment_id": null, "id": 83741, "time": "2005-12-16T16:00:10Z", "creator": "ono@java.pl", "creation_time": "2005-12-16T16:00:10Z", "is_private": false, "text": "Fixes for resolution settings are perfect now. I'm using by default 96dpi for\nsource files and it does the job perfectly now.\n\nThank you for your support. I think we can mark this bug FIXED."}, {"count": 13, "tags": [], "bug_id": 37877, "attachment_id": null, "text": "batch transition pre-FOP1.0 resolved+fixed bugs to closed+fixed", "id": 155909, "time": "2012-04-01T06:48:01Z", "creator": "gadams@apache.org", "creation_time": "2012-04-01T06:48:01Z", "is_private": false}]