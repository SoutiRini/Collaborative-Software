[{"count": 0, "tags": [], "creator": "cohen.yaniv.il@gmail.com", "attachment_id": null, "text": "Hi,\nI'm using POI SXSSFWorkbook for creating XLSX files in multithreaded system.\nSince i read that there are issues with disposing the temporary files in when using the DefaultTempFileCreationStrategy (with poifiles directory), i created each thread is own temporary directory:\n\nprivate TempFileCreationStrategy createTempFileCreationStrategy(File poiTempFileDirectory) {\n        return new TempFileCreationStrategy() {\n            @Override\n            public File createTempFile(String prefix, String suffix) throws IOException {\n                if (!poiTempFileDirectory.exists()) {\n                    poiTempFileDirectory.mkdir();\n                }\n                File newFile = File.createTempFile(prefix, suffix, poiTempFileDirectory);\n                return newFile;\n            }\n\n            @Override\n            public File createTempDirectory(String prefix) throws IOException {\n                return null;\n            }\n        };\n\n\nThis is the code while finishing handling the SXSSFWorkbook object:\n\n       // Write the Stream and close it\n        workBook.write(outputStream);\n\n            outputStream.close();\n\n        } catch (FileNotFoundException e) {\n            throw e;\n        } catch (IOException e) {\n            throw e;\n        } catch (Exception e) {\n            throw e;\n        } finally {\n            //Close the workBook\n            workBook.close();\n            //deleting the temporary files\n            workBook.dispose();\n        }\n\nBut still, from time to time, i'm getting an exception during the dispose. One thread is throwing exception while trying to delete the temporary files of another thread and the message is:\n\"dc319a2c-a663-4cb7-9f13-f7e8cc14c186/poi-sxssf-sheet-xml6608967316211277648.gz (No such file or directory)\" \n\nThanks in advanced", "id": 203330, "time": "2018-01-18T06:02:37Z", "bug_id": 62012, "creation_time": "2018-01-18T06:02:37Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 62012, "text": "Can you post the full stacktrace to let us see where exactly this happens?", "id": 203331, "time": "2018-01-18T06:53:24Z", "creator": "dominik.stadler@gmx.at", "creation_time": "2018-01-18T06:53:24Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 62012, "attachment_id": null, "id": 203392, "time": "2018-01-21T11:24:47Z", "creator": "cohen.yaniv.il@gmail.com", "creation_time": "2018-01-21T11:24:47Z", "is_private": false, "text": "Hi Dominik,\nI'm getting this exception very rarely, (around every 1,000 usings), i'm trying to get the stack trace. The moment i'll get it, i'll send it to you.\n\nThanks\nYaniv"}, {"count": 3, "tags": [], "creator": "fanningpj@yahoo.com", "attachment_id": null, "text": "Is it possible that some external process is reaping files from the temp directory?\nIn my applications, I try to use an explicit java.io.tmpdir to avoid using /tmp. I have multi-threaded apps using POI and have not hit issues with temp files being deleted while they are still in use.", "id": 203408, "time": "2018-01-22T22:36:06Z", "bug_id": 62012, "creation_time": "2018-01-22T22:36:06Z", "is_private": false}]