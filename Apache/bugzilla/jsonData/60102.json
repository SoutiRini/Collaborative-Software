[{"count": 0, "attachment_id": 34228, "bug_id": 60102, "text": "Created attachment 34228\nWord docx file failed to write\n\ndocx XWPFDocument opened from FileInputStream failed to write out to a new FileOutputStream\n\nHere's the stacktrace --\n\norg.apache.poi.openxml4j.exceptions.OpenXML4JRuntimeException: Rule M2.4 exception : this error should NEVER happen! Please raise a bug at https://bz.apache.org/bugzilla/enter_bug.cgi?product=POI and attach a file that triggers it, thanks!\n\tat org.apache.poi.openxml4j.opc.internal.ContentTypeManager.getContentType(ContentTypeManager.java:343)\n\tat org.apache.poi.openxml4j.opc.internal.ContentTypeManager.removeContentType(ContentTypeManager.java:256)\n\tat org.apache.poi.openxml4j.opc.OPCPackage.removePart(OPCPackage.java:958)\n\tat org.apache.poi.openxml4j.opc.PackagePart.getOutputStream(PackagePart.java:522)\n\tat org.apache.poi.xwpf.usermodel.XWPFDocument.commit(XWPFDocument.java:716)\n\tat org.apache.poi.POIXMLDocumentPart.onSave(POIXMLDocumentPart.java:464)\n\tat org.apache.poi.POIXMLDocument.write(POIXMLDocument.java:211)", "id": 193583, "time": "2016-09-09T23:57:39Z", "creator": "kenneth_lau@yahoo.com", "creation_time": "2016-09-09T23:57:39Z", "tags": [], "is_private": false}, {"count": 1, "attachment_id": null, "bug_id": 60102, "text": "I am unable to reproduce this in the latest nightly build of POI (r1755847).\n\nCould you either check this against 3.15-beta2 or later a nightly, or produce a unit test that produces the error seen in comment 0?\nApache commons collections was recently added as a dependency and will need to be added to your class path.\nhttps://builds.apache.org/job/POI/lastSuccessfulBuild/artifact/build/dist/\n\nHere's my test case:\n\n@Test\npublic void test60102() throws Exception {\n    // read in from a java.io.File\n    //XWPFDocument doc = XWPFTestDataSamples.openSampleDocument(\"60102.docx\");\n    \n    // or read in from a java.io.FileInputStream\n    File infile = POIDataSamples.getDocumentInstance().getFile(\"60102.docx\");\n    InputStream fis = new FileInputStream(infile);\n    XWPFDocument doc = new XWPFDocument(fis);\n    \n    // Write out to a file\n    File outfile = TempFile.createTempFile(\"60102-resaved\", \"docx\");\n    OutputStream fos = new FileOutputStream(outfile);\n    doc.write(fos);\n    fos.close();\n    \n    // Write out to a byte array output stream\n    XWPFDocument doc2 = XWPFTestDataSamples.writeOutAndReadBack(doc);\n    doc2.close();\n    \n    doc.close();\n}", "id": 193587, "time": "2016-09-10T05:51:27Z", "creator": "onealj@apache.org", "creation_time": "2016-09-10T05:51:27Z", "tags": [], "is_private": false}, {"count": 2, "tags": [], "creator": "kenneth_lau@yahoo.com", "attachment_id": null, "id": 193600, "time": "2016-09-10T10:01:23Z", "bug_id": 60102, "creation_time": "2016-09-10T10:01:23Z", "is_private": false, "text": "I've debugged into the issue further. The problem is reproduced after the OutputStream is closed by mistake after the first write.\n\nChange test case test60102() to following --\n\n\n// Write out to a file\n    File outfile = TempFile.createTempFile(\"60102-resaved\", \"docx\");\n    OutputStream fos = new FileOutputStream(outfile);\n    doc.write(fos);\n    fos.close();\n    doc.write(fos);\n\n\nThe second doc.write(fos) failed because OutputStream was closed by mistake.\n\nThe exception message was misleading. However, I've consider this is a usage error."}, {"count": 3, "tags": [], "creator": "onealj@apache.org", "is_private": false, "text": "Throw IOException when writing a closed document implemented in r1760206\nOutputStream out;\ndoc.close();\ndoc.write(out);\n\nI have not yet implemented throwing an exception when writing an open document to a closed output stream.\nOutputStream out;\nout.close();\ndoc.write(out);", "id": 193620, "time": "2016-09-10T19:36:47Z", "bug_id": 60102, "creation_time": "2016-09-10T19:36:47Z", "attachment_id": null}, {"count": 4, "tags": [], "creator": "onealj@apache.org", "text": "Created attachment 34231\nReplace OpenXML4J return boolean with throws OpenXML4JException\n\n(In reply to Javen O'Neal from comment #3)\n> I have not yet implemented throwing an exception when writing an open\n> document to a closed output stream.\n> OutputStream out;\n> out.close();\n> doc.write(out);\n\nTo get this one closed, we're going to have to make quite a few changes to  methods in org.apache.poi.openxml4j.opc.internal.\nThese methods currently catch exceptions, occasionally log the error to the POILogger, and then return a boolean success value.\nThese will need to be replaced with void-returning functions that raise an exception. This will eliminate the need to check a return code, enable the POI logger, and check the logs.\n\nA quick glance at the source code history reveals that the OpenXML4j classes have returned boolean success rather than throwing exceptions. Perhaps this is because this library originated from a C project rewritten in Java without replacing the C idioms with Java idioms.\nhttps://svn.apache.org/viewvc/poi/trunk/src/ooxml/java/org/apache/poi/openxml4j/opc/internal/marshallers/DefaultMarshaller.java?revision=738842&view=markup#l41", "id": 193623, "time": "2016-09-10T23:30:31Z", "bug_id": 60102, "creation_time": "2016-09-10T23:30:31Z", "is_private": false, "attachment_id": 34231}, {"count": 5, "tags": [], "text": "*** Bug 59559 has been marked as a duplicate of this bug. ***", "attachment_id": null, "id": 194042, "creator": "onealj@apache.org", "time": "2016-09-27T15:57:43Z", "bug_id": 60102, "creation_time": "2016-09-27T15:57:43Z", "is_private": false}, {"count": 6, "tags": [], "creator": "onealj@apache.org", "text": "*** Bug 60967 has been marked as a duplicate of this bug. ***", "id": 198240, "time": "2017-04-11T16:47:12Z", "bug_id": 60102, "creation_time": "2017-04-11T16:47:12Z", "is_private": false, "attachment_id": null}]