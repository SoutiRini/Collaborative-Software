[{"count": 0, "attachment_id": null, "creator": "macneall@iinet.net.au", "is_private": false, "id": 110085, "time": "2007-10-31T17:47:23Z", "bug_id": 43761, "creation_time": "2007-10-31T17:47:23Z", "tags": [], "text": "I have a catalog that refer to another catalog using CATALOG catalog2\n\nIf I try to call resolvePublic on an identifier that is in catalog2 I get a \ncatalog file not found problem.\n\nThis didn't happen with 1.1, but appears in 1.2\n\nI tracked it down to Catalog.java, parseCatalogFile method. When it is lazy \nloading the catalogs, it generates base, but the fileName may already be a \nfile: reference, so it ends up creating file:/foo/file:/foo/catalog, which \ncan't be found.\n\nI have fixed it locally by changing\n            base = new URL(catalogCwd, fixSlashes(fileName));\nto \n        // this catalog may have been pointed to by another, so we need to \ncheck if it already\n        // has the base prepended            \n        if (!fileName.startsWith(\"file:\")) {\n            base = new URL(catalogCwd, fixSlashes(fileName));\n        } else {\n            base = new URL(fixSlashes(fileName));\n        }\nbut I suspect that that isn't a very clean way of doing it."}]