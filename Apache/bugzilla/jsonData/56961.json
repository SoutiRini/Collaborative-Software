[{"count": 0, "tags": [], "bug_id": 56961, "text": "These parameters can help to better control test data. For distributed environments these parameters will be more valuable, since they can avoid the need to split CSV data file across JMeter slaves.\n\n'Start from line' defines from what line, in a CSV Data file, JMeter will start reading when the first thread requires it. Defaults to 1 (one). If set to 0 or below it will start reading from a random line.\n\n'Step by' defines how many lines will be skipped before reading from CSV file. For example, if 'Step by' is set to 5 then JMeter CSV reader will read lines 1, 6, 11 and so on. If this parameter is set to 0 (zero) no further lines will be read.\n\n'Read random lines' defines if JMeter will read lines sequentially, if false (default), from CSV file or randomly, if set to true. This parameter would be a combination of the two parameters above. If 'Start from line' is set to 0 or less then JMeter CSV reader will read a random line from CSV file for its first thread. If 'Step by' is set to -1 (or any negative number, to prevent errors) then a random line will be read from CSV file every time it is required to.", "id": 177746, "attachment_id": null, "creator": "flaviocysne@gmail.com", "creation_time": "2014-09-11T12:10:46Z", "time": "2014-09-11T12:10:46Z", "is_private": false}, {"attachment_id": null, "tags": [], "bug_id": 56961, "is_private": false, "count": 1, "id": 177748, "time": "2014-09-11T13:40:07Z", "creator": "sebb@apache.org", "creation_time": "2014-09-11T13:40:07Z", "text": "(In reply to Flavio Cysne from comment #0)\n> 'Read random lines' defines if JMeter will read lines sequentially, if false\n> (default), from CSV file or randomly, if set to true. This parameter would\n> be a combination of the two parameters above. If 'Start from line' is set to\n> 0 or less then JMeter CSV reader will read a random line from CSV file for\n> its first thread. If 'Step by' is set to -1 (or any negative number, to\n> prevent errors) then a random line will be read from CSV file every time it\n> is required to.\n\nThis is going to be expensive to implement, as it's not possible to skip to the start of a random line within a file. It's only possible to skip to a random byte in general. Far better to randomise the file before starting the test."}, {"count": 2, "tags": [], "creator": "sebb@apache.org", "is_private": false, "text": "(In reply to Flavio Cysne from comment #0)\n> These parameters can help to better control test data. For distributed\n> environments these parameters will be more valuable, since they can avoid\n> the need to split CSV data file across JMeter slaves.\n\nHowever the slaves will still need to be configured with different starting lines. This means each slave will need a different config anyway.", "id": 177749, "time": "2014-09-11T13:43:44Z", "bug_id": 56961, "creation_time": "2014-09-11T13:43:44Z", "attachment_id": null}, {"count": 3, "text": "Yes, each slave will have to have its own '-J' parameter set to distinguish from others.\n\n'Step by' parameter is hardly needed to be different among JMeter slaves, but it'll be a choice for the tester.\n\nI'm thinking about how to ease the process of distributing CSV files across the distributed environment without the need to split/randomize the main CSV file in as many files as the number of slaves used.\n\nWith this I could have many JMeter slaves within the same machine and even they read the same file, lines read would be distinct ones. Even if slaves were in different machines, I could have then reading the same file (pointing to the same file or with the same content) and each thread of each slave would get a different set of values from it.\n\nThe randomness is a condition that makes JMeter reads a random number of times before really assigning the values to variables.", "creator": "flaviocysne@gmail.com", "attachment_id": null, "id": 177769, "time": "2014-09-11T19:13:20Z", "bug_id": 56961, "creation_time": "2014-09-11T19:13:20Z", "tags": [], "is_private": false}, {"count": 4, "tags": [], "creator": "sebb@apache.org", "attachment_id": null, "id": 177772, "time": "2014-09-11T22:52:48Z", "bug_id": 56961, "creation_time": "2014-09-11T22:52:48Z", "is_private": false, "text": "(In reply to Flavio Cysne from comment #3)\n> \n> The randomness is a condition that makes JMeter reads a random number of\n> times before really assigning the values to variables.\n\nThe user would have to provide the maximum random number or the code would have to read the file once to determine how many lines there were. Unless you just mean it should skip a random number of lines from current position, though there is still the issue of the maximum possible skip value.\n\nThough I suppose it might be possible to seek to the random byte offset in the file and then find the next line boundary (not 100% sure that's always possible with multi-byte characters). If the records varied much in length this would not give a very even distribution; it would favour the next record after long records.\n\nI don't see a use case for this that cannot be solved much more simply by randomising the input before the test starts."}]