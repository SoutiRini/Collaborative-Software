[{"count": 0, "tags": [], "bug_id": 10243, "attachment_id": null, "is_private": false, "id": 18602, "time": "2002-06-26T12:07:40Z", "creator": "Rob.McMahon@warwick.ac.uk", "creation_time": "2002-06-26T12:07:40Z", "text": "Having installed Apache 1.3.26 to fix the chunking vulnerability I was reminded\nof this problem which also occurred in 1.3.19, and which I think I forgot to\nreport at the time.  The symptoms are that CGI scripts get no POST data. \nSpecifically, perl scripts using \n\nuse CGI;\n$q = new CGI;\n@names = $q->param();\n\nget no POST parameters.\n\nTracing this back showed that stdin to the script was in fact closed.\n\nMuch trussing later, it turns out that stdin is being closed in the call of\nap_cleanup_for_exec from cgi_child, because the accepted() socket in child_main\n(csd) was in fact fd 0.  Looking at the daemons, fd 0 is in fact closed\nnormally, though fd 1 is /dev/null.\n\nLooks like this may be happening in PHP (4.0.5) and I'll try to track down\nexactly what's going on. The close(0) occurs after opening all the log files,\nand before reading php.ini.\n\nDefensively it seems to me that when spawn_child_core does its file descriptor\nmanipulation, it should be careful to remove any cleanups for the new setup.  In\nany case this patch to src/main/alloc.c fixes (works around ?) the problem and\nfeels right:\n\n*** alloc.c\t2002/06/26 10:28:22\t1.1\n--- alloc.c\t2002/06/26 10:29:16\n***************\n*** 2008,2013 ****\n--- 2008,2015 ----\n  API_EXPORT(void) ap_kill_cleanups_for_fd(pool *p, int fd)\n  {\n      ap_kill_cleanup(p, (void *) (long) fd, fd_cleanup);\n+     for (p = p->sub_pools; p; p = p->sub_next)\n+ \tap_kill_cleanups_for_fd(p, fd);\n  }\n  \n  API_EXPORT(int) ap_popenf(pool *a, const char *name, int flg, int mode)\n***************\n*** 2522,2539 ****\n--- 2524,2544 ----\n  \n  \tif (pipe_out) {\n  \t    close(out_fds[0]);\n+ \t    ap_kill_cleanups_for_fd(permanent_pool, STDOUT_FILENO);\n  \t    dup2(out_fds[1], STDOUT_FILENO);\n  \t    close(out_fds[1]);\n  \t}\n  \n  \tif (pipe_in) {\n  \t    close(in_fds[1]);\n+ \t    ap_kill_cleanups_for_fd(permanent_pool, STDIN_FILENO);\n  \t    dup2(in_fds[0], STDIN_FILENO);\n  \t    close(in_fds[0]);\n  \t}\n  \n  \tif (pipe_err) {\n  \t    close(err_fds[0]);\n+ \t    ap_kill_cleanups_for_fd(permanent_pool, STDERR_FILENO);\n  \t    dup2(err_fds[1], STDERR_FILENO);\n  \t    close(err_fds[1]);\n  \t}\n\nSorry, don't know how to reproduce for other people, and I don't know why it's\nonly happening to me.  For me it's every time, and you can see descriptor 0\ngetting closed during initialisation.\n\nApache/1.3.26 (Unix) PHP/4.0.5 DAV/0.9.15 mod_ssl/2.8.9 OpenSSL/0.9.6d mod_perl/1.27\n\nHappens for all versions from 1.3.19 through to 1.3.26.\n\n> uname -a\nSunOS crocus 5.8 Generic_108528-10 sun4u sparc\n> \n\nPlease let me know anything else I can do to help you with this problem.\n\nRob"}, {"count": 1, "tags": [], "bug_id": 10243, "attachment_id": null, "text": "Im having the same trouble with php 4.2.1 apache 1.3.26 and redhat 7.3", "id": 18937, "time": "2002-07-03T13:55:06Z", "creator": "brian@virtualnetmedia.com", "creation_time": "2002-07-03T13:55:06Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 10243, "is_private": false, "text": "I believe I may be getting the same bug.  I have apache 1.3.26 on both Solaris 8\nand Redhat 7.3.  I have been getting these types of errors:\n\n Invalid method in request Issue=March+2002&Link=20020300&credits=3GET\n/redesignimages/spacer.gif HTTP/1.1\n\nThey show up when using the POST methond on perl scripts.", "id": 19280, "time": "2002-07-10T20:44:07Z", "creator": "gphillip@aafp.org", "creation_time": "2002-07-10T20:44:07Z", "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 10243, "attachment_id": null, "text": "It seems to me that this bug is the same as the 10177\n\nAm I wrong ?", "id": 22431, "time": "2002-09-07T21:46:58Z", "creator": "emmguyot@free.fr", "creation_time": "2002-09-07T21:46:58Z", "is_private": false}]