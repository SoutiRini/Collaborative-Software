[{"count": 0, "tags": [], "creator": "eugene.petrenko@jetbrains.com", "is_private": false, "text": "Under Tomcat 7.0.23 I have an application\nwith the following web.xml:\n\n\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<web-app id=\"BuildServer\" version=\"2.4\" xmlns=\"http://java.sun.com/xml/ns/j2ee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd\">\n  <display-name>Jetbrains TeamCity</display-name>\n\nIn debugger I see that metadata-complete parameter is set to 'false' meaning that Tomcat processes all of my classes to contain annotations. There are no annotated classes as I have a Servlet 2.4 API based application. I suppose Tomcat must not process annotations for 2.4 applications at all (as there is nothing for annotations processing in the spec)\n\nUpgrading to 2.5 with explicit metadata-complete=\"true\" attribute fixed the issue.", "id": 153221, "time": "2012-01-27T17:59:45Z", "bug_id": 52545, "creation_time": "2012-01-27T17:59:45Z", "attachment_id": null}, {"count": 1, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "is_private": false, "id": 153238, "time": "2012-01-28T19:53:58Z", "bug_id": 52545, "creation_time": "2012-01-28T19:53:58Z", "text": "The following test surrounds the annotation scanning:\nif (webXml.getMajorVersion() >= 3) {\n...\n}\nand a 2.4 web-app (the JSP examples from Tomcat 5.5) reports a major version o2 so no scanning will take place."}, {"count": 2, "tags": [], "creator": "eugene.petrenko@jetbrains.com", "attachment_id": null, "text": "I saw the code. Default value of the flag to ignore attributes is false. As parse code is never called, the value is false at the end (i.e. setter code was not called). \n\nWhat I did was to check with debugger that the option to scan annotation was not disabled for 2.4 application.\n\nTo workaround the bug I had to upgrade to 2.5 and explicitly specify metadata-complete attribute with value=\"true\"\n\nPS. Annotation scanning mechanism uses too much synchronizations and thus slows down the application.", "id": 153264, "time": "2012-01-29T19:10:23Z", "bug_id": 52545, "creation_time": "2012-01-29T19:10:23Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 52545, "is_private": false, "id": 153265, "creation_time": "2012-01-29T19:12:28Z", "time": "2012-01-29T19:12:28Z", "creator": "markt@apache.org", "text": "I tested this with a 2.4 app and no scanning was performed. If you can provide a webapp that triggers scanning on a clean 7.0.25 installation feel free to rte-open this.", "attachment_id": null}, {"count": 4, "attachment_id": 28438, "creator": "dwahler@indeed.com", "is_private": false, "id": 154667, "time": "2012-03-08T01:45:00Z", "bug_id": 52545, "creation_time": "2012-03-08T01:45:00Z", "tags": [], "text": "Created attachment 28438\ntest case\n\nAttached a trivial test case that works on Tomcat 5.5.20 but fails to start on 7.0.25. The application refers to servlet API 2.4, and contains a listener whose single field is annotated with @javax.annotation.Resource. The logs contain this error:\n\nMar 7, 2012 7:27:32 PM org.apache.catalina.core.StandardContext listenerStart\nSEVERE: Error configuring application listener of class testcase.Listener\njavax.naming.NameNotFoundException: Name testcase.Listener is not bound in this Context\n        at org.apache.naming.NamingContext.lookup(NamingContext.java:820)\n        at org.apache.naming.NamingContext.lookup(NamingContext.java:168)\n        at org.apache.catalina.core.DefaultInstanceManager.lookupFieldResource(DefaultInstanceManager.java:578)\n        at org.apache.catalina.core.DefaultInstanceManager.processAnnotations(DefaultInstanceManager.java:468)\n        at org.apache.catalina.core.DefaultInstanceManager.newInstance(DefaultInstanceManager.java:144)\n        at org.apache.catalina.core.DefaultInstanceManager.newInstance(DefaultInstanceManager.java:125)\n        at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4715)\n        at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5273)\n        at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)\n        at org.apache.catalina.startup.HostConfig.checkResources(HostConfig.java:1362)\n        at org.apache.catalina.startup.HostConfig.check(HostConfig.java:1450)\n        at org.apache.catalina.startup.HostConfig.lifecycleEvent(HostConfig.java:295)\n        at org.apache.catalina.util.LifecycleSupport.fireLifecycleEvent(LifecycleSupport.java:119)\n        at org.apache.catalina.util.LifecycleBase.fireLifecycleEvent(LifecycleBase.java:90)\n        at org.apache.catalina.core.ContainerBase.backgroundProcess(ContainerBase.java:1381)\n        at org.apache.catalina.core.ContainerBase$ContainerBackgroundProcessor.processChildren(ContainerBase.java:1539)\n        at org.apache.catalina.core.ContainerBase$ContainerBackgroundProcessor.processChildren(ContainerBase.java:1549)\n        at org.apache.catalina.core.ContainerBase$ContainerBackgroundProcessor.run(ContainerBase.java:1528)\n        at java.lang.Thread.run(Thread.java:662)\nMar 7, 2012 7:27:32 PM org.apache.catalina.core.StandardContext listenerStart\nSEVERE: Skipped installing application listeners due to previous error(s)"}, {"count": 5, "tags": [], "bug_id": 52545, "attachment_id": null, "text": "The test application is not a valid Servlet 2.4 application.\n\nThe issues are:\n- The application has been compiled against a later version of the Servlet API. It is therefore possible that it may call methods that are not valid in Servlet 2.4. Tomcat makes no efforts to ensure that applications claiming a particular version of the specification do not use API calls from a later version of the specification unless the specification explicitly requires it to provide special handling (e.g. for backwards compatibility). To provide general protection of this nature would add complexity and impact performance to address what is essentially a build issue.\n\n- The application can not be compiled using a 1.4 JDK (the minimum Java version required by Servlet 2.4) since it uses annotations. While applications may be compiled with a later Java version, they must be compilable with the minimum Java version.", "id": 154702, "time": "2012-03-08T15:36:08Z", "creator": "markt@apache.org", "creation_time": "2012-03-08T15:36:08Z", "is_private": false}]