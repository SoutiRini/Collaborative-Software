[{"count": 0, "attachment_id": null, "creator": "joelr@viair.com", "text": "Extending the standard layout class and implementing writeHeader() causes \nFileAppender to write header multiple times between application activations.\n\nThe problem is that the FileAppender automatically assumes that the header \nneeds to be written each time the application starts up.\n\nSo, you get logger output like:\n# Header data\n#\n[10/16/2000] Application started.\n[10/16/2000] Application ended.\n# Header data\n#\n[10/16/2000] Application started.\n[10/16/2000] Application ended.\n# Header data\n#\n[10/16/2000] Application started.\n[10/16/2000] Application ended.\n\nExpected:\nThe header should only be output once (the first time the logger ever logs to \nthe file) since that is what a 'header' implies.\n\nA possible fix is to check to see if the file we are logging to has a file \nlength of 0 before attempting to log the header.", "id": 2707, "time": "2001-06-01T15:48:28Z", "bug_id": 1960, "creation_time": "2001-06-01T15:48:28Z", "tags": [], "is_private": false}, {"count": 1, "tags": [], "creator": "armindo@wit-software.com", "text": "This bug is marked as \"RESOLVED\" but i can't find the resolution.\nI'm still getting this beavior in log4j-1.2.12. Where can i find the resolution?\n\nBest regards,\nArmindo\n\n\n\n(In reply to comment #0)\n> Extending the standard layout class and implementing writeHeader() causes \n> FileAppender to write header multiple times between application activations.\n> \n> The problem is that the FileAppender automatically assumes that the header \n> needs to be written each time the application starts up.\n> \n> So, you get logger output like:\n> # Header data\n> #\n> [10/16/2000] Application started.\n> [10/16/2000] Application ended.\n> # Header data\n> #\n> [10/16/2000] Application started.\n> [10/16/2000] Application ended.\n> # Header data\n> #\n> [10/16/2000] Application started.\n> [10/16/2000] Application ended.\n> \n> Expected:\n> The header should only be output once (the first time the logger ever logs to \n> the file) since that is what a 'header' implies.\n> \n> A possible fix is to check to see if the file we are logging to has a file \n> length of 0 before attempting to log the header.\n\n(In reply to comment #0)\n> Extending the standard layout class and implementing writeHeader() causes \n> FileAppender to write header multiple times between application activations.\n> \n> The problem is that the FileAppender automatically assumes that the header \n> needs to be written each time the application starts up.\n> \n> So, you get logger output like:\n> # Header data\n> #\n> [10/16/2000] Application started.\n> [10/16/2000] Application ended.\n> # Header data\n> #\n> [10/16/2000] Application started.\n> [10/16/2000] Application ended.\n> # Header data\n> #\n> [10/16/2000] Application started.\n> [10/16/2000] Application ended.\n> \n> Expected:\n> The header should only be output once (the first time the logger ever logs to \n> the file) since that is what a 'header' implies.\n> \n> A possible fix is to check to see if the file we are logging to has a file \n> length of 0 before attempting to log the header.", "id": 81065, "time": "2005-10-12T19:27:16Z", "bug_id": 1960, "creation_time": "2005-10-12T19:27:16Z", "is_private": false, "attachment_id": null}]