[{"count": 0, "tags": [], "bug_id": 32927, "text": "IMHO it seems a bit silly that the description parameter of the tag element of\nthe javadoc tag is required. Especially when you use the tag element to\n_suppress_ processing of a custom tag (e.g. xdoclet tags when generating javadoc\ndocs), it is strange that you _have_ to specify a description (and moreover: it\nfails without any message when you don't).\nThe javadoc tool itself does not require a 'taghead' (as it is called there): it\nsimply defaults to the tagname.\nI would suggest a fix like (in the TagArgument inner class in Javadoc):\n\n        public String getParameter () throws BuildException {\n            if (name == null || name.equals(\"\")) {\n                throw new BuildException (\"No name specified for custom tag.\");\n            }\n            if (description != null) {\n                return name + \":\" + (enabled ? \"\" : \"X\")\n                    + scope + \":\" + description;\n            } else {\n                return name + \":\" + (enabled ? \"\" : \"X\")\n                    + scope + \":\" + name;\n            }\n        }\n    }", "id": 69187, "time": "2005-01-03T21:45:28Z", "creator": "petertje@luminis.nl", "creation_time": "2005-01-03T21:45:28Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 32927, "text": "I have applied the provided patch, thanks for the report.\n", "id": 95370, "time": "2006-11-02T14:54:33Z", "creator": "peterreilly@apache.org", "creation_time": "2006-11-02T14:54:33Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "creator": "peterreilly@apache.org", "text": "Reopening as patch caused a Backward Compatible issue", "id": 97513, "time": "2007-01-01T16:09:52Z", "bug_id": 32927, "creation_time": "2007-01-01T16:09:52Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "creator": "peterreilly@apache.org", "attachment_id": null, "text": "I have rolled back this change.\nI did however make a small fix, which should cause the\ntag to work without failing - the code now checks\nif \"enabled\" or \"scope\" is not the default.\n\n            if (getDescription() != null) {\n                return name + \":\" + (enabled ? \"\" : \"X\")\n                    + scope + \":\" + getDescription();\n            } else if (!enabled || !\"a\".equals(scope)) {\n                return name + \":\" + (enabled ? \"\" : \"X\") + scope;\n            } else {\n                return name;\n            }\n", "id": 97516, "time": "2007-01-01T16:17:46Z", "bug_id": 32927, "creation_time": "2007-01-01T16:17:46Z", "is_private": false}]