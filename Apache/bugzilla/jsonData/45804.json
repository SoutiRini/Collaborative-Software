[{"attachment_id": 22563, "tags": [], "creator": "drrandys@yahoo.com", "text": "Created attachment 22563\nChanges to the StringChunk class\n\nThis applies to the hsmf component in the scratchpad area.\n\nThis might be the same bug as 45048.  Instantiating a MAPIMessage object on an Outlook 3.0 .msg file does not permit access to any of the items such as the subject or the content.  For example, calling getSubject() triggers a ChunkNotFoundException. \n\nThe simple solution was to add a new constructor to StringChunk which lets you specify both the chunkId and the type.  Previously, the type defaulted to Types.STRING, which doesn't match any of the string items in my .msg files.\n\nWith the new constructor, I can retrieve both the message header and content as follows:\n\n  MAPIMessage msg = new MAPIMessage(\"test.msg\");\n\n  String header = msg.getStringFromChunk(new StringChunk(0x007D, 0x001F));\n  String content = msg.getStringFromChunk(StringChunk(0x1000, 0x001F));", "count": 0, "id": 120596, "time": "2008-09-14T14:54:09Z", "bug_id": 45804, "creation_time": "2008-09-14T14:54:09Z", "is_private": false}, {"attachment_id": null, "tags": [], "creator": "apache@gagravarr.org", "text": "Thanks for this patch.\n\nAny chance you could upload a sample file that triggers this problem, so we can add a test, and we can also investigate if we should tweak the main class too", "count": 1, "id": 120603, "time": "2008-09-15T04:15:55Z", "bug_id": 45804, "creation_time": "2008-09-15T04:15:55Z", "is_private": false}, {"count": 2, "tags": [], "text": "Created attachment 22571\nAn example Outlook 3.0 .msg file\n\nThis is an email file I extracted from Outlook 3.0 by copying it, then pasting it into a directory in Windows XP explorer.", "attachment_id": 22571, "bug_id": 45804, "id": 120617, "time": "2008-09-15T07:17:09Z", "creator": "drrandys@yahoo.com", "creation_time": "2008-09-15T07:17:09Z", "is_private": false}, {"count": 3, "tags": [], "creator": "drrandys@yahoo.com", "attachment_id": null, "id": 120619, "time": "2008-09-15T07:51:04Z", "bug_id": 45804, "creation_time": "2008-09-15T07:51:04Z", "is_private": false, "text": "For the attached .msg file, all of the string items in the message have labels of the form: \"__substg1.0_0078001F\".  The last 8 hex digits are comprised of the chunkId and the type.  For test.msg, the type is always 0x001F. The chunkId varies depending on whether it's the subject, text body, from, to etc..  \n\nBut the StringChunk class, without my changes, always uses 0x001E as the type, so the methods of MAPIMessage always throw a ChunkNotFoundException.  The message items are stored in a hash map in an object of POIFSChunkParser.  These items are supposed to be retrieved using the appropriate StringChunks as keys.  The new constructor for StringChunk lets me create appropriate StringChunks for my .msg files.\n\nI could've fixed the problem by redefining Types.STRING as 0x001F in org.apache.poi.hsmf.datatypes.Types.  But I figured that 0x001E probably works with whatever .msg files this was first developed for.\n\nMaybe the lib could detect the version of the .msg file and define the StringChunk type appropriately as either 0x001E or 0x001F.\n\n "}, {"count": 4, "tags": [], "text": "Thanks for the patch, test file and investigations\n\nIn the end, I've got HSMF working with both the old and the new style outlook files. Hopefully this'll work even better for you now! :)\n\nIn general though, HSMF isn't being actively developed right now (Travis isn't around ATM), so any further patches for HSMF are greatfully received!", "attachment_id": null, "bug_id": 45804, "id": 120637, "time": "2008-09-15T14:52:34Z", "creator": "apache@gagravarr.org", "creation_time": "2008-09-15T14:52:34Z", "is_private": false}]