[{"count": 0, "tags": [], "creator": "msnare@nc.rr.com", "attachment_id": null, "text": "It would be great if filesets could be created starting with a jar and filtering \ndown the contents, similar to the creation of a fileset based on a starting \ndirectory.\n\nExample:\n<fileset jar=\"someJar.jar\" >\n   <include name=\"**/*Test.class\" />\n</fileset>\n\nFor my part, this would enable me to run junit based integration tests using the \nbatchtest task on a jar, but there are certainly other uses.  Right now we have \nto use the unjar task with a patternset", "id": 76653, "time": "2005-06-23T15:51:17Z", "bug_id": 35482, "creation_time": "2005-06-23T15:51:17Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 35482, "attachment_id": null, "id": 76660, "time": "2005-06-23T17:49:09Z", "creator": "mbenson@apache.org", "creation_time": "2005-06-23T17:49:09Z", "is_private": false, "text": "Have you tried just adding a zipfileset to a junit batchtest?  You might also\nhave to set <junit>'s classpath to include the jar, but based on the manual and\nthe source code I would think this already works."}, {"count": 2, "tags": [], "creator": "msnare@nc.rr.com", "attachment_id": null, "text": "(In reply to comment #1)\n> Have you tried just adding a zipfileset to a junit batchtest?  You might also\n> have to set <junit>'s classpath to include the jar, but based on the manual \nand\n> the source code I would think this already works.\n\nI tried that already, and it didn't work.  I got an error saying that the \nbatchtest task does not support the nested zipfileset element.\n\nEven if that did work, I would still need to filter the contents of the \nzipfileset down to what I need, and I don't want to have to unzip the jar to do \nit.\n\nI'm more than willing to try any more suggestions you have, so keep 'em coming \nif you have any.\n\nThanks,\n-Mike", "id": 76673, "time": "2005-06-23T19:21:42Z", "bug_id": 35482, "creation_time": "2005-06-23T19:21:42Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 35482, "text": "ah... here's what you do.  Define your zipfileset with an id.  Then use a \nfileset with its refid declared.  This can/should be improved in future \nversions of Ant as well.  As for filtering down the contents of the zipfileset, \nwhy should you need to open them?  includes/excludes should work on zipfilesets \n(and to some degree selectors as well).\n\n<zipfileset id=\"foo\" src=\"foo.jar\" includes=\"**/*Test.class\" />\n\n<junit ...>\n  <batchtest ...>\n    <fileset refid=\"foo\" />\n  </batchtest>\n</junit>\n\nDoes this or some minimal variant thereof help? (also, please note that your \nbug may be \"lost\" if a developer marks it NEEDINFO and you do not change it \nback to ASSIGNED when you provide that info. :)", "id": 76674, "time": "2005-06-23T19:34:23Z", "creator": "mbenson@apache.org", "creation_time": "2005-06-23T19:34:23Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 35482, "attachment_id": null, "id": 76676, "time": "2005-06-23T21:39:41Z", "creator": "msnare@nc.rr.com", "creation_time": "2005-06-23T21:39:41Z", "is_private": false, "text": "(In reply to comment #3)\n\nIt does successfully create the fileset I need, so technically it solves this \nbug.  It doesn't, however, work with the junit batchtest if I am using the xml \nformatter, as it uses the filename instead of the package-version of the \nfilename to try to create the output file.\n\nExample:  if I am testing a class my.test.SomeTest.class and I set up the \nfileset from a zipfileset as described in the previous post, instead of trying \nto create the Test-my.test.SomeTest.xml file, the xml formatter will try to \ncreate the Test-my\\test\\SomeTest.xml file, and the lack of the correct \ndirectory structure seems to cause it to puke.\n\nI will log a bug against the xml formatter for this.\n\nThanks for the help, feel free to close this bug if you think you should.\n\n-Mike"}, {"count": 5, "tags": [], "creator": "msnare@nc.rr.com", "attachment_id": null, "text": "(In reply to comment #4)\n\n...forgot to mention that I did try using a packagemapper and a mapper with \ntype=\"package\" (just in case) but none of the junit task take it, and it \n(predictably) did nothing when used in the target that holds the junit tasks.\n\n-Mike", "id": 76677, "time": "2005-06-23T21:42:34Z", "bug_id": 35482, "creation_time": "2005-06-23T21:42:34Z", "is_private": false}, {"count": 6, "tags": [], "creator": "mbenson@apache.org", "attachment_id": null, "text": "If the remaining problem is with the formatter I will close this as WORKSFORME.", "id": 76678, "time": "2005-06-23T21:49:45Z", "bug_id": 35482, "creation_time": "2005-06-23T21:49:45Z", "is_private": false}]