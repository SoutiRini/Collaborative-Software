[{"count": 0, "text": "1. Install and configure Apache to act as HTTP proxy\n2. Install RealPlayer 10.0\n3. Configure RealPlayer to use HTTP proxy installed in 1 (Menu->Tools-\n>Preferences->Connection->Proxy->HTTP)\n4. Try listening to the e.g. following sites:\nhttp://www.liveireland.com/live.ram\nhttp://www.wksu.org/listen/wksu-rm.ram\n5. Content is not delivered to RealPlayer, radio doesn't work\n\nDetails:\nICY-over-HTTP\n-------------\nFirst site is using ICY-over-HTTP protocol and replies \"ICY 200 OK\" to apache \nthat mod_proxy_http.c fails to understand. The fix follows:\n<!--ap_proxy_http_process_response function\nif (apr_date_checkmask(buffer, \"HTTP/#.# ###*\")) {\n  //no changes here\n}\nelse if (apr_date_checkmask(buffer, \"ICY ###*\")) {//FIX FIX FIX\n{\n  /*this fixes the problem for RP 10.0*/\n  /*RP 8.0 still doesn't work because it expects ICY/1.0 reply*/\n  /*instead of HTTP/1.x apache provides it with*/\n  int ind = 7;\n  ap_log_error(APLOG_MARK, APLOG_DEBUG, APR_SUCCESS, r->server,\n    \"proxy: tid=%d ICY response!!!\", myGetCurrentThreadId());\n  keepchar = buffer[ind];\n  buffer[ind] = '\\0';\n  r->status = atoi(&buffer[ind-3]);\n  buffer[ind] = keepchar;\n  r->status_line = apr_pstrdup(p, &buffer[ind-3]);\n  r->headers_out = ap_proxy_read_headers(r, rp, buffer,\n     sizeof(buffer), origin);\n  backasswards = 1;\n  r->status = 200;\n  r->status_line = \"200 OK\";\n}\n\n-->\n\nRTSP-over-HTTP\n--------------\nSecond site is using RTSP-over-HTTP protocol.\nThe changes required to mod_proxy_http to support this protocol are minimal and \ninclude the following:\n1. POST requests\n================\nhttp://developer.apple.com/quicktime/icefloe/dispatch028.html says that POST \nrequests specify bogus Content-Length: 32767 while in fact such tunneled RTSP-\nover-HTTP POSTS request are not going to end at all, client/proxy should be \nprepared that connection will be just closed after a while, and it MUST NOT \nexpect any response from remote server, as this is one-way communication \nchannel. So ap_proxy_http_process_response() should not be called for RTSP \nrequests:\n<!--ap_proxy_http_request\n/*...*/\n/* send request headers */\nconst char * ct = apr_table_get(r->headers_in, \"Content-Type\");\nif (r->method_number == M_POST)\t{\n  if ((ct != NULL) && (stricmp(ct, \"application/x-pncmd\") == 0)) {\n    r->connection->keepalive = AP_CONN_CLOSE;\n    /*this is RTSP POST request, remember that!*/\n    /*Q: is there any better/more reliable way to*/\n    apr_table_set(r->notes, \"mod_proxy_http::rtsp_post_request\", \"1\");\n  }\n}\n-->\nand then in the beginning of ap_proxy_http_process_response:\n<!--ap_proxy_http_process_response\nconst char * rtsp_post = apr_table_get(\n           r->notes, \"mod_proxy_http::rtsp_post_request\");\nif ((rtsp_post != NULL) && ((*rtsp_post) == '1'))\n{\n  ap_log_error(APLOG_MARK, APLOG_INFO, APR_SUCCESS, r->server,\n     \"proxy: rtsp post request, no response is expected\");\n  r->status = HTTP_OK;\n  r->status_line = \"200 OK\";\n  p_conn->close += 1;\n  return OK;\n}\n/*...*/\n-->\n\n2. GET requests\n===============\nThe problem with mod_proxy is that it tries to buffer the content, while in \ncase of audio/video streaming, you have to release the content to destination \nas soon as it's possible, regardless of how small amount of data you got from \nnetwork. The problem was that apache was getting 4 bytes of data, and tried to \naccumulate them instead of sending over to RealPlayer... The fix is to add \nFLUSH bucket to the brigade to make apache send it:\nap_proxy_http_process_response function,\n<!--\nconst char * ct = NULL;\n/*...*/\n/* send body - but only if a body is expected */\n...\nif ((!r->header_only) &&                   /* not HEAD request */\n  (r->status > 199) &&...)                 /* not any 1xx response */\n{\n  /*...*/\n  ct = apr_table_get(r->headers_out, \"Content-Type\");\n  if ((ct != NULL) && ((stricmp(ct, \"audio/x-pn-realaudio\") == 0) || \n    (stricmp(ct, \"application/x-pncmd\") == 0)) {\n    flush_rtsp_request = 1;\n  }\n  /*...*/\n}\n/*...*/\nwhile (ap_get_brigade(rp->input_filters, ...) == APR_SUCCESS) {\n  /*...*/\n  /* found the last brigade? */\n  if (APR_BUCKET_IS_EOS(APR_BRIGADE_LAST(bb))) {\n  /*no changes*/\n  }\n  else {\n    if (flush_rtsp_request == 1) {\n      ap_log_error(APLOG_MARK, APLOG_DEBUG, 0, r->server,\n    \t\"proxy: adding FLUSH bucket, rc=%d\", rc);\n      e = apr_bucket_flush_create(c->bucket_alloc);\n      APR_BRIGADE_INSERT_TAIL(bb, e);\n    }\n  }\n  /* try send what we read */\n  rc = ap_pass_brigade(r->output_filters, bb);\n  /*...*/\n}\n\t\t\t\t\t\t}\n\n3. HTTP protocol should be downgraded to 1.0 as RTSP-over-HTTP is using \nHTTP/1.0.", "bug_id": 31952, "attachment_id": null, "id": 66030, "time": "2004-10-29T08:57:26Z", "creator": "ilya_dogadaev@mail.ru", "creation_time": "2004-10-29T08:57:26Z", "tags": [], "is_private": false}, {"count": 1, "tags": [], "bug_id": 31952, "text": "Are you saying you've hacked it to support your needs?\n\nIf so, please attach a patch that others can use if they want it - and that any\ncommitter who knows the relevant protocols can evaluate.", "id": 66032, "attachment_id": null, "creator": "nick@webthing.com", "creation_time": "2004-10-29T09:12:18Z", "time": "2004-10-29T09:12:18Z", "is_private": false}, {"count": 2, "tags": [], "creator": "ilya_dogadaev@mail.ru", "attachment_id": 13258, "id": 66051, "time": "2004-10-29T11:02:57Z", "bug_id": 31952, "creation_time": "2004-10-29T11:02:57Z", "is_private": false, "text": "Created attachment 13258\nmod_proxy_http (from 2.0.52) with my fixes added"}, {"count": 3, "tags": [], "creator": "ilya_dogadaev@mail.ru", "attachment_id": null, "id": 66062, "time": "2004-10-29T12:12:37Z", "bug_id": 31952, "creation_time": "2004-10-29T12:12:37Z", "is_private": false, "text": "btw the version of proxy_http.c file attached to this case also fixes \nhttp://nagoya.apache.org/bugzilla/show_bug.cgi?id=29644 issue:\n\nFix details:\n<!--ap_proxy_http_process_response() function\n/*...*/\n/* try send what we read */\nrc = ap_pass_brigade(r->output_filters, bb);\n/*Changed line follows:*/\nif (rc != APR_SUCCESS || r->connection->aborted == 1 || origin->aborted == 1) {\n/*...*/\n-->"}, {"count": 4, "tags": [], "bug_id": 31952, "text": "Thanks.  An actual patch would be preferred, but this is broadly equivalent. \nAdding PatchAvailable keyword.\n\nThe point of a patch is to highlight diffs.  That way we could evaluate whether\nit appears likely to have side-effects - such as adversely affecting performance\nfor normal proxying - before considering it for inclusion in the httpd codebase.\n We're more likely to adopt it if you make it easy for us!  But it's useful to\nhave it here anyway.", "id": 66082, "time": "2004-10-29T14:37:36Z", "creator": "nick@webthing.com", "creation_time": "2004-10-29T14:37:36Z", "is_private": false, "attachment_id": null}, {"count": 5, "attachment_id": null, "bug_id": 31952, "text": "I would really like to see a fix to this problem. I suspect i'm having the same issue trying to proxy \nrequests to my Darwin Streaming Server.\n\nThe issue is that DSS says it can accept HTTP requests on TCP port 80 (although the default TCP port \n554 behaves no differently) but naturally, that conflics with any HTTPD on the same IP. If you *need* to \nrun DSS on the same IP as Apache, but want your users (who may be firewall restricted to outbound \nport 80) to still get your streams, then you need to proxy the requests.\n\nI have been trying unsucessfully to have mod_proxy/mod_proxy_http handle these requests. It would \nbe great to see either a patch to mod_proxy_http, or a new mod_proxy_rtsp.\n\nAny suggestions for how to help with this? Thank you!\n\nI have DSS set up to listen on 127.0.0.1:554. Apache is listening on external_ip:80. I have put the \nfollowing in httpd.conf, to no avail.\n\nLoadModule proxy_module modules/mod_proxy.so\nLoadModule proxy_http_module modules/mod_proxy_http.so\n\nProxyRequests Off\n<Proxy *>\nOrder deny,allow\nAllow from all\n</Proxy>\n\n\n<Location /media/>\nSetEnv force-proxy-request-1.0 1\nSetEnv proxy-nokeepalive 1\n\nProxyPass http://127.0.0.1:554/\nProxyPassReverse http://127.0.0.1:554/\n</Location>", "id": 79028, "time": "2005-08-26T01:31:06Z", "creator": "ahayes@polkaroo.net", "creation_time": "2005-08-26T01:31:06Z", "tags": [], "is_private": false}, {"count": 6, "tags": [], "creator": "nick@webthing.com", "attachment_id": null, "id": 79029, "time": "2005-08-26T01:55:49Z", "bug_id": 31952, "creation_time": "2005-08-26T01:55:49Z", "is_private": false, "text": "Whay happened when you tried Ilya's patches?  They don't look at a glance like \nsomething that really belongs in the main codebase, but there's nothing to \nstop you using them.  As for a new module, feel free to write one, or pay \nsomeone to write one for you. "}, {"count": 7, "tags": [], "bug_id": 31952, "text": "Thanks for the quick reply Nick.\n\nWish I were clever/rich enough to solve the problem as you describe. As it is, I'm merely a home user \ntrying to serve up some video of my newborn to my wife's family in the UK. I only have one external IP \n(hey... it's a fixed IP. That must be worth *some* cred). I guess I hoped using mod_proxy_http to proxy \nthe claimed \"RTSP over HTTP\" claimed by Darwin Streaming Server would tweak some guru's interest. \nI'm actually surprised it doesn't already work. I very rarely encounter a web content problem of any kind \nfor which Apache httpd hasn't had a module or directive line to solve it. :)\n\nI'm currently digging through the \"patch\" (actually a modified proxy_http.c file, as you know) but \nunfortunately it is based on 2.0.52 and I have 2.0.54. The fact that Apache's source repository server is \ndown and the mirrors don't carry older source means I can't get the right version to generate a diff at \nthe moment. It looks like there were a fair number of changes from 2.0.52 to 2.0.54. I'll probably wait \nto get the 2.0.52 version to help generate a diff.\n\nIf I do figure it out, I'll post a proper diff for 2.0.54. If it doesn't work... oh well. Doesn't sound like it's a \nbig loss to anyone.\n", "id": 79030, "attachment_id": null, "creator": "ahayes@polkaroo.net", "creation_time": "2005-08-26T02:40:48Z", "time": "2005-08-26T02:40:48Z", "is_private": false}]