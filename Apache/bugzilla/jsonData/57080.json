[{"count": 0, "tags": [], "bug_id": 57080, "text": "Hi,\nI will add a zip file containing a test case and the xlsx file.\nThe password protected xlsx was generated using the extenxls jar and I suspect that it creates metadata that is not 100% valid.\nIf I resave the xlsx using Excel 2011, the file can be decrypted ok with poi (v3.10.1).\nWould it be possible for someone to look at why the IndexOutOfBoundsException is happening and if the code could workaround from the underlying xlsx issue?\n\nRegards,\nPJ\n\njava.lang.ArrayIndexOutOfBoundsException: 12\n\tat org.apache.poi.poifs.storage.DocumentBlock.getDataInputBlock(DocumentBlock.java:177)\n\tat org.apache.poi.poifs.filesystem.POIFSDocument.getDataInputBlock(POIFSDocument.java:284)\n\tat org.apache.poi.poifs.filesystem.ODocumentInputStream.getDataInputBlock(ODocumentInputStream.java:107)\n\tat org.apache.poi.poifs.filesystem.ODocumentInputStream.readFully(ODocumentInputStream.java:245)\n\tat org.apache.poi.poifs.filesystem.ODocumentInputStream.read(ODocumentInputStream.java:140)\n\tat org.apache.poi.poifs.filesystem.DocumentInputStream.read(DocumentInputStream.java:118)\n\tat org.apache.poi.poifs.filesystem.DocumentInputStream.read(DocumentInputStream.java:114)\n\tat javax.crypto.CipherInputStream.getMoreData(CipherInputStream.java:103)\n\tat javax.crypto.CipherInputStream.read(CipherInputStream.java:224)\n\tat org.apache.poi.util.BoundedInputStream.read(BoundedInputStream.java:121)\n\tat org.apache.poi.util.BoundedInputStream.read(BoundedInputStream.java:103)\n\tat org.apache.poi.util.IOUtils.toByteArray(IOUtils.java:48)\n\tat test.PoiTest.decrypt(PoiTest.java:22)", "id": 178407, "time": "2014-10-13T18:38:52Z", "creator": "pj.fanning@workday.com", "creation_time": "2014-10-13T18:38:52Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 57080, "is_private": false, "id": 178411, "creation_time": "2014-10-13T19:49:04Z", "time": "2014-10-13T19:49:04Z", "creator": "kiwiwings@apache.org", "text": "> I will add a zip file containing a test case and the xlsx file.\n\nthe xlsx and its password is enough. I'll have a look onto it.", "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 57080, "is_private": false, "id": 178412, "creation_time": "2014-10-13T19:55:55Z", "time": "2014-10-13T19:55:55Z", "creator": "pj.fanning@workday.com", "text": "Created attachment 32103\nxlsx file that causes issue (password=pwd123)", "attachment_id": 32103}, {"count": 3, "attachment_id": null, "bug_id": 57080, "text": "Thanks Andreas.\nAttached xlsx file, password=pwd123.", "id": 178413, "time": "2014-10-13T19:57:25Z", "creator": "pj.fanning@workday.com", "creation_time": "2014-10-13T19:57:25Z", "tags": [], "is_private": false}, {"count": 4, "tags": [], "creator": "apache@gagravarr.org", "attachment_id": null, "is_private": false, "id": 178418, "time": "2014-10-13T20:52:51Z", "bug_id": 57080, "creation_time": "2014-10-13T20:52:51Z", "text": "Can you try it with NPOIFSFileSystem rather than POIFSFileSystem?"}, {"count": 5, "tags": [], "bug_id": 57080, "text": "With NPOIFSFileSystem, I get:\njava.lang.IndexOutOfBoundsException: Can't read past the end of the stream\n\tat org.apache.poi.poifs.filesystem.NPOIFSStream$StreamBlockByteBufferIterator.next(NPOIFSStream.java:164)\n\tat org.apache.poi.poifs.filesystem.NPOIFSStream$StreamBlockByteBufferIterator.next(NPOIFSStream.java:142)\n\tat org.apache.poi.poifs.filesystem.NDocumentInputStream.readFully(NDocumentInputStream.java:248)\n\tat org.apache.poi.poifs.filesystem.NDocumentInputStream.read(NDocumentInputStream.java:150)\n\tat org.apache.poi.poifs.filesystem.DocumentInputStream.read(DocumentInputStream.java:118)\n\tat org.apache.poi.poifs.filesystem.DocumentInputStream.read(DocumentInputStream.java:114)\n\tat javax.crypto.CipherInputStream.getMoreData(CipherInputStream.java:103)\n\tat javax.crypto.CipherInputStream.read(CipherInputStream.java:224)\n\tat org.apache.poi.util.BoundedInputStream.read(BoundedInputStream.java:121)\n\tat org.apache.poi.util.BoundedInputStream.read(BoundedInputStream.java:103)\n\tat org.apache.poi.util.IOUtils.toByteArray(IOUtils.java:48)\n\tat test.PoiTest.decrypt(PoiTest.java:22)", "id": 178421, "time": "2014-10-13T20:57:45Z", "creator": "pj.fanning@workday.com", "creation_time": "2014-10-13T20:57:45Z", "is_private": false, "attachment_id": null}, {"count": 6, "tags": [], "bug_id": 57080, "is_private": false, "id": 178427, "creation_time": "2014-10-13T23:45:17Z", "time": "2014-10-13T23:45:17Z", "creator": "kiwiwings@apache.org", "text": "Fixed with r1631600\nThe ole entry size was to big, so I've limited it based on the encrypted size rounded to the next block size.", "attachment_id": null}, {"count": 7, "tags": [], "bug_id": 57080, "is_private": false, "id": 178453, "creation_time": "2014-10-14T18:22:37Z", "time": "2014-10-14T18:22:37Z", "creator": "pj.fanning@workday.com", "text": "Thanks for the quick response. I have verified that the latest source fixes this for both POIFSFileSystem and NPOIFSFileSystem.", "attachment_id": null}]