[{"count": 0, "tags": [], "bug_id": 58741, "attachment_id": null, "id": 186971, "time": "2015-12-16T06:46:35Z", "creator": "sislam@workforcesoftware.com", "creation_time": "2015-12-16T06:46:35Z", "is_private": false, "text": "SSL Handshake seems to be timing out with Http11Nio2Protocol and large number of entries in the keystore.\n\nI have a connector definition as something like below in server.xml.\n\n    <Connector port=\"10443\" protocol=\"org.apache.coyote.http11.Http11Nio2Protocol\" maxHttpHeaderSize=\"4096\"\n           maxThreads=\"1050\" minSpareThreads=\"25\"\n           maxKeepAliveRequests=\"-1\" keepAliveTimeout=\"180000\"\n           enableLookups=\"false\" disableUploadTimeout=\"true\"\n           acceptCount=\"10\" scheme=\"https\" secure=\"true\" SSLEnabled=\"true\"\n           clientAuth=\"want\" sslProtocol=\"TLSv1.2\" sslEnabledProtocols=\"TLSv1.2,TLSv1\"\n           connectionTimeout=\"180000\"\n           keystoreFile=\"workforce.keystore\"\n           keystorePass=\"xxx\" algorithm=\"SunX509\"\n           truststoreFile=\"workforce.keystore\"\n           truststorePass=\"xxx\"\n           truststoreType=\"JKS\"\n           keyAlias=\"tomcat\"\n           compression=\"on\"\n           compressionMinSize=\"2048\"\n          trustManagerClassName=\"com.workforcesoftware.tomcatssl.WorkforceTrustManager\"\n           useServerCipherSuitesOrder=\"true\"\n           ciphers=\"TLS_DHE_RSA_WITH_AES_128_GCM_SHA256, TLS_EMPTY_RENEGOTIATION_INFO_SCSV, TLS_DHE_RSA_WITH_AES_128_CBC_SHA, TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA, TLS_RSA_WITH_AES_128_CBC_SHA256, TLS_RSA_WITH_AES_128_CBC_SHA\"\n           compressableMimeType=\"text/html,text/xml,text/js,text/css\"/>\n\nSteps to reproduce,\n\n1) Define a connector with something like above.\n2) Use a large keystore file. I have a large keystore with one private key with alias tomcat (as defined in keyAlias) and large number of public certificates that I trust (> 1400). Sample keystore file is attached.\n3) Start/Restart the tomcat.\n4) Try to access the application/tomcat using the specified connector from the browser.\n5) SSL handshake seems to be timing out. SSL/Handshake debug log is attached.\n\nWhen I change the protocol from Http11Nio2Protocol to Http11NioProtocol, SSL handshake seems to be working fine. Besides this, I have also tried separating out keystore (with only tomcat entry) and trust store (with all public certificates), but with that configuration, the handshake still seems to be timing out.\n\nThanks"}, {"count": 1, "tags": [], "bug_id": 58741, "attachment_id": 33353, "id": 186972, "time": "2015-12-16T06:55:17Z", "creator": "sislam@workforcesoftware.com", "creation_time": "2015-12-16T06:55:17Z", "is_private": false, "text": "Created attachment 33353\nZip file containing sample keystore file and SSL/Handshaking debug logs"}, {"count": 2, "tags": [], "text": "I am not going to investigate this since it doesn't make any sense, so please investigate this further if you want it to move forward [I am for starters not downloading random files from random places, and your connector configuration is too convoluted as well ...].\n\nThe configuration of the SSL engine which does the handshake is identical in both connectors, and if it works with \"small\" keystores then it will do the same in both for large ones.", "is_private": false, "id": 186974, "creation_time": "2015-12-16T08:50:44Z", "time": "2015-12-16T08:50:44Z", "creator": "remm@apache.org", "bug_id": 58741, "attachment_id": null}, {"count": 3, "tags": [], "text": "Ok I will try to investigate it further. By the way, I uploaded files at some other location since bugzilla doesn't allow me to upload attachments greater than 1000KB.\nThanks", "attachment_id": null, "bug_id": 58741, "id": 186976, "time": "2015-12-16T09:26:40Z", "creator": "sislam@workforcesoftware.com", "creation_time": "2015-12-16T09:26:40Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 58741, "text": "It could be a good first step to test trunk. Since the keystore size itself shouldn't be a factor, try find some other more likely explanation first.\n\nBoth connectors use the same SSLEngine API, which is configured the same way, and once the key is loaded during the connector initialization the keystore is not used anymore.", "id": 186977, "attachment_id": null, "creator": "remm@apache.org", "creation_time": "2015-12-16T10:04:18Z", "time": "2015-12-16T10:04:18Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 58741, "attachment_id": null, "id": 186992, "time": "2015-12-16T22:51:57Z", "creator": "chris@christopherschultz.net", "creation_time": "2015-12-16T22:51:57Z", "is_private": false, "text": "Could there possibly be a problem in com.workforcesoftware.tomcatssl.WorkforceTrustManager?\n\nTake thread dumps during the long pause before the handshake timeout to see where the JVM is stalling. A thread dump could show whether this is a problem in Tomcat (unlikely), your TrustManager code (likely) or the JVM (semi-likely)."}, {"count": 6, "tags": [], "creator": "chris@christopherschultz.net", "attachment_id": null, "text": "(In reply to Remy Maucherat from comment #4)\n> It could be a good first step to test trunk. Since the keystore size itself\n> shouldn't be a factor, try find some other more likely explanation first.\n> \n> Both connectors use the same SSLEngine API, which is configured the same\n> way, and once the key is loaded during the connector initialization the\n> keystore is not used anymore.\n\nThat's only for server connector configuration. It's clear that Syed is talking about handshakes which include a client-certificate, here. The trust store is certainly consulted when a client-certificate needs to be verified.", "id": 186993, "time": "2015-12-16T22:53:35Z", "bug_id": 58741, "creation_time": "2015-12-16T22:53:35Z", "is_private": false}, {"count": 7, "tags": [], "text": "The policy is to not do user support in BZ, so as to not attract support issues there and having to provide direct support. Now, you're free to handle things the way you'd like :)\n\nThe truststore handling is also 100% identical between the two connectors, and it is up to the user to investigate his custom code, use the NIO connector, test trunk, etc.", "attachment_id": null, "bug_id": 58741, "id": 186996, "time": "2015-12-17T08:58:34Z", "creator": "remm@apache.org", "creation_time": "2015-12-17T08:58:34Z", "is_private": false}]