[{"count": 0, "tags": [], "creator": "unruh@physics.ubc.ca", "attachment_id": null, "id": 100024, "time": "2007-03-04T21:16:26Z", "bug_id": 41760, "creation_time": "2007-03-04T21:16:26Z", "is_private": false, "text": "The .htaccess file appears to be being ignored if the AllowOverride None\ndirective is in /etc/httpd/conf/httpd.conf file. This has changed in the newest\nApache on \nMandrive 2007 ( 2.2.3)\nThis is a security disaster."}, {"count": 1, "attachment_id": null, "creator": "nick@webthing.com", "is_private": false, "id": 100028, "time": "2007-03-05T01:42:18Z", "bug_id": 41760, "creation_time": "2007-03-05T01:42:18Z", "tags": [], "text": "This is documented behaviour going back to the origins of Apache."}, {"text": "(In reply to comment #0)\n> The .htaccess file appears to be being ignored if the AllowOverride None\n> directive is in /etc/httpd/conf/httpd.conf file. This has changed in the\n\nThis has been the case forever and works as designed and documented.\n\n> newest Apache on \n> Mandrive 2007 ( 2.2.3)\n> This is a security disaster.\n\nNow I am confused. It would be a security disaster if httpd would apply the\nsettings of .htaccess in the case that AllowOverride is set to None. Do you\nstate that this is the case since 2.2.3?", "tags": [], "bug_id": 41760, "is_private": false, "count": 2, "id": 100062, "time": "2007-03-05T12:43:44Z", "creator": "rpluem@apache.org", "creation_time": "2007-03-05T12:43:44Z", "attachment_id": null}, {"count": 3, "tags": [], "text": "If you say so. In that case it must be true that AllowOverride default has\nchanged. However, in my case a .htaccess file exists in the directory, but\nAllowOverride was none, and all of the files in that directory were accessible\nby everyone. That is simply wrong behaviour. It should work the same as if the\n.htaccess file is unreadable but there-- ie permission denied, not allowed. \n\nI do not have my old httpd.conf files so do not know if the default has changed,\nbut it certainly used to be the case that the .htaccess files controlled the\naccess to teh directory, and I certainly never recall altering the AllowOverride\nparameter. But the way it works now is just wrong. The default should not be\nuniversal access even in the presence of an .htaccess file. \nSecurity should be conservative, not liberal.", "is_private": false, "bug_id": 41760, "id": 100063, "time": "2007-03-05T12:53:27Z", "creator": "unruh@physics.ubc.ca", "creation_time": "2007-03-05T12:53:27Z", "attachment_id": null}, {"count": 4, "tags": [], "text": ".htaccess is not a security feature, it's convenience.\n\nSpeaking of security: Running a software -- which can everyone in the world\naccess -- with default parameters without even looking at them is the root of\nthe evil here.\n\nThere is still no bug in sight.", "attachment_id": null, "bug_id": 41760, "id": 100065, "time": "2007-03-05T13:18:25Z", "creator": "nd@perlig.de", "creation_time": "2007-03-05T13:18:25Z", "is_private": false}, {"count": 5, "tags": [], "text": "Let me try once again. \nA .htaccess file on a directory should mean that the organizer of that directory\nwants to place some access control on that directory. That is why apache, when\nit finds a .htaccess file which it cannot read ( eg due to permissions) it\ndisallows all access. It assumes that the user has made a mistake, which\nhappens. (Good software design is in part trying to figure out what mistakes a\nuser could make and anticipates them). \nIn this case, a .htaccess file exists, and if for some reason the .conf file is\nchanged ( as happens when people upgrade, or reinstall) and if it happens that\nthe  config file has AllowOverride None ( which is the default apparently) then\nsuddenly the .htaccess files are ignored. \nThis is a security hole and a bug, no matter if this is how it has always been\nor not. \n\nI am a non- maive user, and I have been bitten. Whether or not I should have\nknown that AllowOverride None disables all .htaccess files or not is irrelevant.\nAnything which destroys security is a bug.\n\nNote that there is nothing in the manual either that states that AllowOverride\nNone makes .htaccess files ignored. \nNote also that the description of the AllowOverride says that None is the most\nconservative choice. It is not, it is the most insecure choice.\n\nThe presence of a .htaccess file should always trigger security, with the\ndefault being no access. The default should NEVER be to allow all access if a\n.htaccess file exists. \n\n", "is_private": false, "bug_id": 41760, "id": 100066, "time": "2007-03-05T13:42:32Z", "creator": "unruh@physics.ubc.ca", "creation_time": "2007-03-05T13:42:32Z", "attachment_id": null}, {"count": 6, "tags": [], "creator": "nick@webthing.com", "attachment_id": null, "id": 100067, "time": "2007-03-05T14:07:42Z", "bug_id": 41760, "creation_time": "2007-03-05T14:07:42Z", "is_private": false, "text": "FWIW, this is evidently a case of the first myth discussed at\nhttp://www.regdeveloper.co.uk/2006/08/01/apache_undead/\n"}, {"text": "> That is why apache, when it finds a .htaccess file\n> which it cannot read ( eg due to permissions) it disallows all\n> access. \n\nThis isn't what you reported. \n\n> Note that there is nothing in the manual either that states that\n> AllowOverride None makes .htaccess files ignored.  \n\nhttp://httpd.apache.org/docs/2.2/howto/htaccess.html says:\n>> The use of .htaccess files can be disabled completely \n>> by setting the AllowOverride  directive to none:\n\n\nhttp://httpd.apache.org/docs/2.2/mod/core.html#allowoverride says:\n>> When this directive is set to None, then .htaccess files are\n>> completely ignored. In this case, the server will not even\n>> attempt to read .htaccess files in the filesystem.\n\n", "tags": [], "bug_id": 41760, "is_private": false, "count": 7, "id": 100068, "time": "2007-03-05T14:21:43Z", "creator": "covener@gmail.com", "creation_time": "2007-03-05T14:21:43Z", "attachment_id": null}, {"count": 8, "tags": [], "bug_id": 41760, "is_private": false, "text": "OK, it is clear that this is not going to be addressed. One of the selling\npoints of Apache is taking security seriously, but in this case tradition is\nclearly more important than security. \n\nIt is true that I went by the comments in the .conf file re the AllowOverride\nand did not see the comment in the documentation that None would disable all\n.htaccess. Note that the \"Myths\" clearly states \"The only people to use\n.htaccess should be end-users who want control without having to bug the server\nadmin.\" Which means that some action on the part of the sysadmin ( changing the\nAllowOverride to None) either deliberately or by accident ( installing a new\nversion of Apache) can destroy the user's security. I would call that a design\nbug, but apparently this is a feature, not a bug. \n\nI had a bunch of solutions for assignments on a web directlory which was not\nsupposed to be seen by students ( and no I do not want to bury the security deep\ninside a config file which changes each time the system is upgraded-- security\nbelongs with the stuff being protected, not buried somewhere else) and suddenly\ndiscovered it was available to all. ( I had my own machine as allowd in the\n.htaccess file, so was not surprised that I ccould see the pages.)\n\nI will continue to think that this is idiotic behaviour for anyone who takes\nsecurity at all seriously, but no longer expect that anyone else will pay any\nattention to my ranting about it, so with this rant will quit.", "id": 100069, "time": "2007-03-05T17:53:43Z", "creator": "unruh@physics.ubc.ca", "creation_time": "2007-03-05T17:53:43Z", "attachment_id": null}, {"text": "FWIW, this is evidently a case of the first myth discussed at\nhttp://www.regdeveloper.co.uk/2006/08/01/apache_undead/\n(In reply to comment #8)\n> OK, it is clear that this is not going to be addressed. One of the selling\n> points of Apache is taking security seriously, but in this case tradition is\n> clearly more important than security. \n\nAs Andr\u00e9 already said, .htaccess has nothing to do with security.  Except by\ncoincidence, where a user chooses to make it so.\n\n> It is true that I went by the comments in the .conf file re the AllowOverride\n> and did not see the comment in the documentation that None would disable all\n> .htaccess. Note that the \"Myths\" clearly states \"The only people to use\n> .htaccess should be end-users who want control without having to bug the server\n> admin.\" Which means that some action on the part of the sysadmin ( changing the\n> AllowOverride to None) either deliberately or by accident ( installing a new\n> version of Apache) can destroy the user's security.\n\nNonsense.  Installing a new version of Apache preserves your existing\nhttpd.conf, including AllowOverride settings.  To have messed it up, you must\nhave done something more than just upgrade.\n\n> I would call that a design\n> bug, but apparently this is a feature, not a bug. \n> \n> I had a bunch of solutions for assignments on a web directlory which was not\n> supposed to be seen by students ( and no I do not want to bury the security deep\n> inside a config file which changes each time the system is upgraded--\n\nIf the config file changes, then your upgrade procedure is broken.\n\n> security\n> belongs with the stuff being protected, not buried somewhere else) and suddenly\n> discovered it was available to all. ( I had my own machine as allowd in the\n> .htaccess file, so was not surprised that I ccould see the pages.)\n> \n> I will continue to think that this is idiotic behaviour for anyone who takes\n> security at all seriously, but no longer expect that anyone else will pay any\n> attention to my ranting about it, so with this rant will quit.\n\nWe also take performance seriously, so if there wasn't an option to disable the\nhtaccess overhead, we'd have to invent one.\n\nBut this particular behaviour hasn't changed since Apache 1.0 in 1995.  That's a\nlong time before someone reported it as a bug.\n", "tags": [], "bug_id": 41760, "attachment_id": null, "count": 9, "id": 100084, "time": "2007-03-06T04:13:27Z", "creator": "nick@webthing.com", "creation_time": "2007-03-06T04:13:27Z", "is_private": false}, {"count": 10, "attachment_id": null, "creator": "unruh@physics.ubc.ca", "is_private": false, "id": 100086, "time": "2007-03-06T07:10:54Z", "bug_id": 41760, "creation_time": "2007-03-06T07:10:54Z", "tags": [], "text": "OK, you want response I guess, so I will give one. \n\n.htaccess is and has been advocated in many places as the way to institute\nsecurity. The reason it is claimed as a myth is precisely because it is so\nwidely practiced. Also it makes much more sense to associate security with the\ndirectory that is being secured than it is to burry it in a config file that\nonly the sysadmin is able to get at and forget about. Ie, not only is it widely\npracticed, it is a sensible practice. Except on a very high volume web sites,\nthe overhead is minimal, and for those  high volume sites, having alternatives\nin the .conf file is a great idea. \n \n\nb) I have suggested time and again, but you are not listening, that if\nAllowOverride None is there, the presence of a .htaccess file should disallow \naccess, not allow it. Security defaults should NOT, by default, switch off security.\nYes, .htaccess CAN be used for other things. I suspect that if you look around\nthe world, by far the greatest use of .htaccess is to limit access to\ndirectories-- to impliment security. Ignoring that may be convenient to you, but\n I still place it in the \"That's not a bug, that's a feature\" category.\n\nc) In the .conf file, AllowOverride None is called \"conservative\" and no mention\nis made that this disables .htaccess completely. This is just wrong. Apache, as\nwith all computer programs, is used by people who have other jobs to do and do\nnot memorize the manual. They trust what is written in the sample .conf files.\n\nd) apache has changed from Apache1 to apache2 with massive changes to the .conf\nfiles structures, changes which continue. Furthermore for most Linux\ndistributions the advice is \"reinstall, do not upgrade\". That means that on each\nreinstall .conf files must be recreated.  And a simple diff between the old and\nnew is impossible because so many changes have been made. It is simply\nimpossible for anyone without a massive excess of time on their hands to go\nthrough each and every one of the options once again to see what it does, to see\nif it destroys previously built security. One assumes that the defaults Apache\nputs in will not disable security, especially from a group who claims to value\nsecurity. And to add insult to injury, Apache claims that this destruction of a\nsecurity barrier is \"conservative\" practice.\n\ne) The claim \"You are the first to complain about this\" is the resort of\nincompetent and shady businesses around the world.  I suspect that there are\nstill a number of bugs in apache which have been there since day 1. To dismiss a\nbug report on that basis is simply idiotic. Read my resoning and argue with\nthat. Do not claim \"tradition\" to defend a bad security practice.\n\nIn my opinion, this IS a bug, and for you to defend it on the basis that it has\nalways been there so its OK simply makes you look bad.\n"}, {"count": 11, "tags": [], "creator": "slive@apache.org", "attachment_id": null, "is_private": false, "id": 100090, "time": "2007-03-06T08:22:41Z", "bug_id": 41760, "creation_time": "2007-03-06T08:22:41Z", "text": "Obviously this thread has already gone too far, but I can't resist.\n\nWhat you don't seem to realize is that there are important reasons why you\n*wouldn't* want apache to need to check for the existence of .htaccess.  In\nparticular, this is a significant performance drain for high-traffic static-file\nsites.  \n\nSo you want to make it impossible to tune apache for high performance, because\nsecurity may be compromised by admin errors.  By the same logic, we should\nremove the plain-HTTP protocol from the server and only allow SSL/TLS. \nOtherwise a bad admin could disclose sensitive information to hackers.  (Oh, and\nobviously we also need to remove the AccessFileName directive, since changing\nthis would also cause .htaccess files to be ignored.)  \n\nIn addition, your problem was caused by multiple errors on your end.  First,\nyour admin made an error when upgrading.  Second, you are not following best\npractices for avoiding disclosure of confidential information.  This information\nshould 1) not be in a web-accessible directory; and 2) have unix file-system\npermissions forbidding access to the webserver process."}, {"count": 12, "tags": [], "text": "Yes, it has gone on too long and I think both our positions are clear.\n However, I want nothing of the sort. \n\na) I want at the very least a warning in the .conf file that setting \nAllowOverride None\ndisables all .htaccess control.\n\nb) At the next level, the disabling of .htacceess control should not be \noverloaded onto a configuration option which also does something else. Put in a\nseparate DisableAccessControl directive, which would make it abundantly clear to\nadministrators. \n\nc) Yes, my situation did result from a number of errors, eg, Apache not warning\nthat AllowOverride None disables all .htaccess control and that the description\nof that option claims it to be the default and to be conservative. Good software\ndesign anticipates user's stupidities, and at the very least warns uses where\nproblems could occur.\n\nI also notice that you continue to not respond to my suggestions or complaints,\nbut operate in a \"blame the user\" mode. \n\nThis report is at the very least feedback, that there is a SECURITY issue here\nthat has bitten at least one user ( and by the rules of all business practice,\nif one user complains, it probably means 1000 users have had theproblem and not\nbothered to complain). As I said, from the response I do not believe that you\nwill do anything at all about this. I clearly have no control over that. I will\ncontinue to use Apache, but will no longer believe claims that Apache takes\nsecurity seriously. But I guess that is just my opinion and my problem.\n\n\n\n", "attachment_id": null, "bug_id": 41760, "id": 100092, "time": "2007-03-06T08:52:12Z", "creator": "unruh@physics.ubc.ca", "creation_time": "2007-03-06T08:52:12Z", "is_private": false}, {"count": 13, "attachment_id": null, "creator": "matt@mattmccutchen.net", "is_private": false, "id": 123942, "time": "2009-01-11T17:02:38Z", "bug_id": 41760, "creation_time": "2009-01-11T17:02:38Z", "tags": [], "text": "For what it's worth, I find the reporter's proposed change completely logical, although I realize that the backward-compatibility hassles may outweigh the benefits.  For good reasons, any nonempty AllowOverride setting raises error 500 if an htaccess file contains a disallowed directive; having \"AllowOverride None\" behave differently seems like a gratuitous special case.\n\nIt would make more sense to have a separate directive to skip htaccess processing for server admins who want the performance benefits.  In fact, AccessFileName with an empty list would logically do just this; we would just need a syntax for it, such as \"AccessFileName none\"."}, {"count": 14, "tags": [], "text": "I was also surprised by this.\n\nI would rather a 500 internal server error than allowing global access to a directory I thought was restricted by .htaccess.", "attachment_id": null, "bug_id": 41760, "id": 130591, "time": "2009-09-22T18:01:48Z", "creator": "mikel@mikelward.com", "creation_time": "2009-09-22T18:01:48Z", "is_private": false}, {"count": 15, "attachment_id": null, "creator": "matt@mattmccutchen.net", "is_private": false, "id": 130594, "time": "2009-09-22T18:55:09Z", "bug_id": 41760, "creation_time": "2009-09-22T18:55:09Z", "tags": [], "text": "So I believe unruh, Mikel, and I are in agreement that the current semantic of \"AllowOverride None\" is a gratuitous special case that is harmful to security.  I'll recap the argument in case it isn't clear.\n\nThe normal effect of omitting a directive-type from AllowOverride is to forbid the use of those directives in htaccess; if Apache finds one, it raises a 500 Internal Server Error.  This is a good thing: if for any reason a directive-type is removed from AllowOverride in the master configuration, sites using it stop working rather than become vulnerable.  With \"AllowOverride Foo\", where Foo is a hypothetical directive-type that contains zero directives, an htaccess file containing any directives at all would give a 500 error.  But when we get to \"AllowOverride None\", the behavior suddenly changes: in effect, all directives are silently ignored.\n\nMy web host, DreamHost, centrally manages the master Apache configuration but uses essentially \"AllowOverride All\".  In this way, they leverage the careful thought the developers put into which Apache directives are safe enough for shared hosting to have htaccess context.  They expose a limited amount of the remaining functionality through the customer control panel.  Comment #4 and comment #9 seem to be claiming that htaccess is not supported for security.  I certainly hope that's not the case; if it is, an giant warning in the manual would be warranted, and web hosts will be deprived of a convenient way to offer a safe subset of Apache functionality to their customers.\n\nI understand that changing the behavior of \"AllowOverride None\" would break existing configurations, which is bad.  But at least it should be deprecated in favor of a new \"AccessFileName none\" syntax, which is the completely logical way to say that no access files should be recognized.  Then I would like a new syntax, perhaps \"AllowOverride RejectAll\", to process htaccess files but with no directive-types allowed.\n\nShall I reopen?"}, {"count": 16, "attachment_id": null, "creator": "matt@mattmccutchen.net", "is_private": false, "id": 130597, "time": "2009-09-22T21:50:14Z", "bug_id": 41760, "creation_time": "2009-09-22T21:50:14Z", "tags": [], "text": "I'm sticking my neck out and reopening for the proposal in comment #15.  Again, I understand the need not to break existing configurations that use \"AllowOverride None\", but I would like to call attention to the issue however possible so that web site admins don't make this mistake in the future."}, {"count": 17, "tags": [], "text": "(In reply to comment #15)\n\n> Comment #4 and comment #9 seem to be claiming that htaccess is not\n> supported for security.  \n\nThey don't claim that at all.  Open a concise enhancement request for a way to express that the presence of the AccessFileName should cause an error instead of trying to advocate it here.", "is_private": false, "bug_id": 41760, "id": 130684, "time": "2009-09-25T10:32:31Z", "creator": "covener@gmail.com", "creation_time": "2009-09-25T10:32:31Z", "attachment_id": null}]