[{"count": 0, "tags": [], "bug_id": 20215, "attachment_id": null, "id": 37720, "time": "2003-05-24T15:35:28Z", "creator": "thomas@piratesoft.com", "creation_time": "2003-05-24T15:35:28Z", "is_private": false, "text": "here is the class of printing the system properties\n\nimport java.util.*;\n\npublic class ListSystemProperties\n{\n\tpublic static void main(String[] args)\n\t{\n\t\tProperties props = System.getProperties();\n\t\tSet keys = new TreeSet(props.keySet()); // for sorting keys\n\t\tfor ( Iterator i = keys.iterator(); i.hasNext();)\n\t\t{\n\t\t\tString key = (String)i.next();\n\t\t\tSystem.out.println(key + \"=\" + props.get(key));\n\t\t}\n\t}\n}\n\ntest build file\n<project name=\"test\" default=\"test\" basedir=\".\">\n\n\t<target name=\"test\">\n\t\t<java classname=\"ListSystemProperties\" fork=\"false\">\n\t\t\t<classpath>\n\t\t\t\t<pathelement location=\"./obj\"/>\n\t\t\t</classpath>\n\t\t</java>\n\t</target>\n\n</project>\n\nwhen fork=\"false\"\n\t[java] file.encoding=MS950\n\t[java] user.country=TW\n\t[java] user.language=zh\n\t[java] user.timezone=GMT+08:00\n\nwhen fork=\"true\"\n\t[java] file.encoding=Cp1252\n\t[java] user.country=US\n\t[java] user.language=en\n\t[java] user.timezone=\n\nsome properties is different if non-us locale.\nbut the system properties should identical either fork is true of false."}, {"count": 1, "tags": [], "bug_id": 20215, "attachment_id": null, "id": 37721, "time": "2003-05-24T15:36:32Z", "creator": "thomas@piratesoft.com", "creation_time": "2003-05-24T15:36:32Z", "is_private": false, "text": "but the system properties should identical either fork is true *or* false.\nsorry typo."}, {"count": 2, "tags": [], "creator": "bodewig@apache.org", "attachment_id": null, "id": 37795, "time": "2003-05-26T07:27:24Z", "bug_id": 20215, "creation_time": "2003-05-26T07:27:24Z", "is_private": false, "text": "May I assume that the fork=\"false\" case is what you expect on your machine?\n\nDoes it change if you explicitly add i18n.jar (to be found in JAVA_HOME/jre/lib)\nto the <classpath>?"}, {"count": 3, "tags": [], "text": "ok, i made more tests:\n\ntest in jdk 1.4.1_02-b06\ncommand line: java -cp ./obj ListSystemProperties\n\nfile.encoding=MS950\nuser.country=TW\nuser.language=zh\nuser.timezone=GMT+08:00\n\nomit fork attribute and fork=\"false\" are same with command line.\n\nbut fork=\"true\" are the wrong.\n\t[java] file.encoding=Cp1252\n\t[java] user.country=US\n\t[java] user.language=en\n\t[java] user.timezone=\n\nand there are no i18n.jar in jdk 1.4.1\n\n\ntest in jdk 1.3.1_06-b01\ncommand line:\nfile.encoding=MS950\nuser.region=TW\nuser.language=zh\nuser.timezone=Asia/Taipei\n\nomit fork attribute and fork=\"false\" are same with command line.\n\nbut in fork=\"true\":\n\t[java] file.encoding=MS950\t// correct\n\t[java] user.region=TW\t\t// correct\n\t[java] user.language=zh\t\t// correct\n\t[java] user.timezone=\t\t// missing, either i18n.jar in \nclasspath or no", "is_private": false, "id": 37800, "creator": "thomas@piratesoft.com", "time": "2003-05-26T09:23:51Z", "bug_id": 20215, "creation_time": "2003-05-26T09:23:51Z", "attachment_id": null}, {"count": 4, "attachment_id": null, "bug_id": 20215, "text": "just out of curiousity, how many versions of java/JRE do you have on your box,\nand most importantly the Path? It may be that when <java> forks its running the\nwrong version. \n\nAlso, what happens when you set the jvm attr to point to a particular JVM?", "id": 37820, "time": "2003-05-27T05:35:40Z", "creator": "stevel@apache.org", "creation_time": "2003-05-27T05:35:40Z", "tags": [], "is_private": false}, {"count": 5, "tags": [], "bug_id": 20215, "attachment_id": null, "text": "jdk 1.4.1 test in my desktop box\njdk 1.3.1 test in my laptop\nboth machine has only one jvm.", "id": 37822, "time": "2003-05-27T06:26:51Z", "creator": "thomas@piratesoft.com", "creation_time": "2003-05-27T06:26:51Z", "is_private": false}, {"count": 6, "tags": [], "text": "Hmm, I'm currently trying to reproduce this on Linux.  user.timezone is not\nset in JDK 1.3.1 or 1.4.1 at all and the rest is correct with or without fork.\nThe JDKs disagree on file.encoding, but this is OK for a German locale (1.4.1\nrecognizes the Euro glyph).\n\nWhat do you get for fork=\"true\" when running ant -verbose in JDK 1.3.1 - is the\njava executable that gets executed what you'd expect it to be?", "attachment_id": null, "id": 37826, "creator": "bodewig@apache.org", "time": "2003-05-27T07:53:12Z", "bug_id": 20215, "creation_time": "2003-05-27T07:53:12Z", "is_private": false}, {"count": 7, "tags": [], "bug_id": 20215, "text": "Please do not use Hashtable.keySet() and Hashtable.get() on Properties objects.\nThis is bad programming since it will not look at the chain of default\ndefinitions defined by the Properties API.\n\nUse Properties.propertyNames() and Property.getProperty() instead.\nThis will allow enbedded code that have done System.setProperties()\nto behave correctly, since you may have a chain of properties.\n\nI spend two days tracking a bug in Weblogic just because they do not\nuse this API correctly. Lets not get the same bad codding in ANT.\n", "id": 37833, "time": "2003-05-27T09:54:38Z", "creator": "j_a_fernandez@yahoo.com", "creation_time": "2003-05-27T09:54:38Z", "is_private": false, "attachment_id": null}, {"count": 8, "tags": [], "bug_id": 20215, "attachment_id": null, "text": "as jose said, i modify the the class.\n\nimport java.util.*;\n\npublic class ListSystemProperties\n{\n\tpublic static void main(String[] args)\n\t{\n\t\tProperties props = System.getProperties();\n//\t\tSet keys = new TreeSet(props.keySet()); // for sorting keys\n\t\tfor ( Enumeration i = props.propertyNames(); i.hasMoreElements\n();)\n\t\t{\n\t\t\tString key = (String)i.nextElement();\n\t\t\tSystem.out.println(key + \"=\" + props.get(key));\n\t\t}\n\t}\n}\n\ntest with fork=\"true\" in 1.3.1:\nD:\\java\\sandbox\\thomas\\test>ant -v -f test.xml\nApache Ant version 1.5.3 compiled on April 9 2003\nBuildfile: test.xml\nDetected Java version: 1.3 in: P:\\jdk\\jre\nDetected OS: Windows 2000\nparsing buildfile test.xml with URI = file:D:/java/sandbox/thomas/test/test.xml\nProject base dir set to: D:\\java\\sandbox\\thomas\\test\nBuild sequence for target `test' is [test]\nComplete build sequence is [test]\n\ntest:\n     [java] Executing 'P:\\jdk\\jre\\bin\\java.exe' with arguments:\n     [java] '-classpath'\n     [java] 'D:\\java\\sandbox\\thomas\\test\\obj;P:\\jdk\\jre\\lib\\i18n.jar'\n     [java] 'ListSystemProperties'\n     [java]\n     [java] The ' characters around the executable and arguments are\n     [java] not part of the command.\n     [java] java.runtime.name=Java(TM) 2 Runtime Environment, Standard Edition\n     [java] sun.boot.library.path=P:\\jdk\\jre\\bin\n     [java] java.vm.version=1.3.1_06-b01\n     ......\n     [java] user.timezone=\t\t\t\t\t// still \nmissing!!!\n     [java] file.encoding=MS950\t\t\t\t// correct\n     [java] user.language=zh\t\t\t\t// correct\n     [java] user.region=TW\t\t\t\t\t// correct\n     \ntest with fork=\"true\" in 1.4.1:\nD:\\java\\sandbox\\thomas\\test>ant -v -f test.xml\nApache Ant version 1.5.3 compiled on April 9 2003\nBuildfile: test.xml\nDetected Java version: 1.4 in: P:\\jdk\\jre\nDetected OS: Windows 2000\nparsing buildfile test.xml with URI = file:D:/java/sandbox/thomas/test/test.xml\nProject base dir set to: D:\\java\\sandbox\\thomas\\test\nBuild sequence for target `test' is [test]\nComplete build sequence is [test]\n\ntest:\ndropping P:\\jdk\\jre\\lib\\i18n.jar from path as it doesn't exist\ndropping P:\\jdk\\jre\\lib\\i18n.jar from path as it doesn't exist\n     [java] Executing 'P:\\jdk\\jre\\bin\\java.exe' with arguments:\n     [java] '-classpath'\n     [java] 'D:\\java\\sandbox\\thomas\\test\\obj'\n     [java] 'sandbox.thomas.test.ListSystemProperties'\n     [java]\n     [java] The ' characters around the executable and arguments are\n     [java] not part of the command.\ndropping P:\\jdk\\jre\\lib\\i18n.jar from path as it doesn't exist\ndropping P:\\jdk\\jre\\lib\\i18n.jar from path as it doesn't exist\n     [java] java.runtime.name=Java(TM) 2 Runtime Environment, Standard Edition\n     [java] sun.boot.library.path=P:\\jdk\\jre\\bin\n     [java] java.vm.version=1.4.1_02-b06\n     ......\n     [java] user.country=US\t\t\t\t// shuold be \nuser.country=TW\n     [java] user.timezone=\t\t\t\t// shuold be \nuser.timezone=GMT+08:00\n     [java] file.encoding=Cp1252\t\t// should be file.encoding=MS950\n     [java] user.language=en\t\t\t// should be user.language=zh", "id": 37911, "time": "2003-05-28T11:44:04Z", "creator": "thomas@piratesoft.com", "creation_time": "2003-05-28T11:44:04Z", "is_private": false}, {"count": 9, "attachment_id": null, "bug_id": 20215, "text": "This here\n\n> dropping P:\\jdk\\jre\\lib\\i18n.jar from path as it doesn't exist\n\nlooks suspicious.  Is the file really not there?\n\nIf it isn't, I think all i18n stuff is missing and the VM falls back to an en_US\nlocale.  This would explain the wrong values you report at the bottom.", "id": 44512, "time": "2003-09-23T15:22:45Z", "creator": "bodewig@apache.org", "creation_time": "2003-09-23T15:22:45Z", "tags": [], "is_private": false}, {"count": 10, "tags": [], "bug_id": 20215, "text": "there no i18n.jar in JDK 1.4, there is lib\\charset.jar, lib\\ext\\localedata.jar \nand lib\\zi(directory) for locale and timezone info.\nit should be still correct in JDK 1.4", "id": 44564, "time": "2003-09-24T05:38:56Z", "creator": "thomas@piratesoft.com", "creation_time": "2003-09-24T05:38:56Z", "is_private": false, "attachment_id": null}, {"count": 11, "tags": [], "bug_id": 20215, "text": "ping,\nhas this anything to do with ant ?", "id": 65914, "time": "2004-10-28T17:27:33Z", "creator": "peterreilly@apache.org", "creation_time": "2004-10-28T17:27:33Z", "is_private": false, "attachment_id": null}, {"count": 12, "tags": [], "bug_id": 20215, "attachment_id": null, "text": "ping was over four mos. ago", "id": 72019, "time": "2005-03-08T23:40:16Z", "creator": "mbenson@apache.org", "creation_time": "2005-03-08T23:40:16Z", "is_private": false}]