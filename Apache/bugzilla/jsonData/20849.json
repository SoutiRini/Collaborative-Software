[{"count": 0, "tags": [], "bug_id": 20849, "text": "The class org.apache.catalina.core.ApplicationResponseWrapper overrides the\naddCookie method:\n    /**\n     * Disallow <code>addCookie()</code> calls on an included response.\n     *\n     * @param cookie The new cookie\n     */\n    public void addCookie(Cookie cookie) {\n\n        if (!included)\n            ((HttpServletResponse) getResponse()).addCookie(cookie);\n\n    }\nThe \"included\" boolean value is set to true when this ResponseWrapper subclass\nis being passed to a Servlet or JSP invoked via RequestDispatcher.include.\nThe effect is that if the include servlet/JSP calls response.addCookie(cookie)\nthe cookie is ignored, and is not sent back to the browser.\n\nI have looked hard at the Servlet 2.4 specification, and see nowhere that states\nthat included servlets/JSPs should not be allowed to set cookies.\n\nI think we should just remove the if (!included) test -- always add the cookie\nto the response.", "id": 38989, "attachment_id": null, "creator": "davec@sybase.com", "creation_time": "2003-06-18T01:45:59Z", "time": "2003-06-18T01:45:59Z", "is_private": false}, {"count": 1, "tags": [], "text": "Since Cookies are implemented by setting a response header, it seems that \nsection 8.3 of the 2.3 Servlet spec is pretty clear that included pages can't \n(among other things) set Cookies:\n\n<spec-quote section=\"8.3\" version=\"2.3>\nIt can only write information to the ServletOutputStream or Writer of the\nresponse object and commit a response by writing content past the end of the\nresponse buffer, or by explicitly calling the flushBuffer method of the\nServletResponse interface. It cannot set headers or call any method that affects\nthe headers of the response. Any attempt to do so must be ignored.\n</spec-quote>", "is_private": false, "id": 38994, "creator": "william.barker@wilshire.com", "time": "2003-06-18T02:52:00Z", "bug_id": 20849, "creation_time": "2003-06-18T02:52:00Z", "attachment_id": null}]