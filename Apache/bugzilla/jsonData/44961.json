[{"count": 0, "tags": [], "bug_id": 44961, "text": "In the method 'int ssl_hook_Access(request_rec *r)' the session id context will \nset again in case of a full renegotiation [1]. \nAnd since openssl/0.9.8f the context check of a SSL session has been restricted,\nsee [2].\n\nThat has the effect, that ssl session caching does not work, if the ssl session  \nhas been established by a full renegotiation. (unless a third party ssl session \ncache is used, that is correcting the session id context) \n\nI think the initial reason for changing the session id context was to avoid \nsession resumption if a client cert is requested (SSL_VERIFY_PEER). \nBut since the option SSL_OP_NO_SESSION_RESUMPTION_ON_RENEGOTIATION has been \nintroduced, that is not longer necessary.\n\nSo it would propose the following change:\n\n--- 617,627 ----\n                           \"Performing full renegotiation: \"\n                           \"complete handshake protocol\");\n\n+ #ifndef SSL_OP_NO_SESSION_RESUMPTION_ON_RENEGOTIATION\n              SSL_set_session_id_context(ssl,\n                                         (unsigned char *)&id,\n                                         sizeof(id));\n+ #endif\n\n              SSL_renegotiate(ssl);\n              SSL_do_handshake(ssl);\n\n\n\n\n\n\n\n\n\n[1] file ssl_engine_kernel.c line 620\n\nrequest_rec *id = r->main ? r->main : r;\n\n/* do a full renegotiation */\nap_log_error(APLOG_MARK, APLOG_DEBUG, 0, r->server,\n                         \"Performing full renegotiation: \"\n                         \"complete handshake protocol\");\nSSL_set_session_id_context(ssl,\n                 (unsigned char *)&id,\n                 sizeof(id));\n\n\n\n\n\n\n[2] http://www.openssl.org/news/changelog.html\n\nChanges between 0.9.8e and 0.9.8f  [11 Oct 2007]\n...\n...\n*) In the SSL/TLS server implementation, be strict about session ID\n     context matching (which matters if an application uses a single\n     external cache for different purposes).  Previously,\n     out-of-context reuse was forbidden only if SSL_VERIFY_PEER was\n     set.  This did ensure strict client verification, but meant that,\n     with applications using a single external cache for quite\n     different requirements, clients could circumvent ciphersuite\n     restrictions for a given session ID context by starting a session\n     in a different context.\n     [Bodo Moeller]", "id": 116416, "time": "2008-05-09T02:50:33Z", "creator": "hartmut.keil@gmx.ch", "creation_time": "2008-05-09T02:50:33Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 44961, "text": "Is there anything that can be done to help get this some more attention?  The way HTTPD is currently assigning SSL session contexts during full renegotiation truly does appear to be broken.  This is preventing +OptRenegotiate (quick renegotiation) from working as designed and documented.  The customer base I support uses hardware-based client certificates which are noticeably slow when HTTPD forces full renegotiations for each object because of this bug.  There are workarounds that help, but this is an actual problem and a documented feature that is broken.\n\nI started at bug #47055, and landed here.  I\u2019ve applied each suggested patch along the way and this bug report explanation and patch seems to be the most elegant.  I\u2019d be delighted to assist with testing in order to get an official fix signed off and committed.", "id": 147920, "time": "2011-07-14T20:11:12Z", "creator": "strodgers@caci.com", "creation_time": "2011-07-14T20:11:12Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 44961, "text": "Marking this as a dupe of 47055 since there is a more extensive analysis there and it's basically the same issue.\n\nI've not seen anything to change my opinion at bug 47055 comment 39 but I would love to be convinced either way.  I'd also restate long-held truism:\n\n-> design your sites to rely on per-location renegotiation at your own peril\n\nIf I was writing mod_ssl from scratch I would omit this misfeature entirely.\n\n*** This bug has been marked as a duplicate of bug 47055 ***", "id": 147936, "time": "2011-07-15T10:41:19Z", "creator": "jorton@redhat.com", "creation_time": "2011-07-15T10:41:19Z", "is_private": false, "attachment_id": null}]