[{"count": 0, "tags": [], "bug_id": 58535, "attachment_id": 33210, "text": "Created attachment 33210\nPatch to avoid negation risk\n\nConsider the code:\n\n    @Override\n    public int compare(Session o1, Session o2) {\n        int returnValue = comparator.compare(o1, o2);\n        return (- returnValue);\n    }\n\nThis code negates the return value of the compare method. This is a questionable or bad programming practice, since if the return value is Integer.MIN_VALUE, negating the return value won't negate the sign of the result. You can achieve the same intended result by reversing the order of the operands rather than by negating the results.\n\nSee http://findbugs.sourceforge.net/bugDescriptions.html#RV_NEGATING_RESULT_OF_COMPARETO\n\nRecommend the following:\n\n    @Override\n    public int compare(Session o1, Session o2) {\n        // Note that comparing o2 with o1 to get reverse result...\n        return comparator.compare(o2, o1);\n    }", "id": 185938, "time": "2015-10-25T19:55:18Z", "creator": "anthony@whitford.com", "creation_time": "2015-10-25T19:55:18Z", "is_private": false}, {"attachment_id": null, "tags": [], "bug_id": 58535, "is_private": false, "count": 1, "id": 186054, "time": "2015-10-28T13:41:25Z", "creator": "violetagg@apache.org", "creation_time": "2015-10-28T13:41:25Z", "text": "Hi,\n\nThanks for the report and the patch.\nI decided to remove this class and to use the standard Collections.reverseOrder(Comparator) method.\nThe fix is available in trunk, 8.0.x (for 8.0.29 onwards) and 7.0.x (for 7.0.66\nonwards)\n\nRegards,\nVioleta"}]