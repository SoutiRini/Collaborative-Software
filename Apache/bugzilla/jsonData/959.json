[{"count": 0, "tags": [], "bug_id": 959, "attachment_id": null, "id": 1244, "time": "2001-03-13T04:35:59Z", "creator": "peter.holzwarth@io-software.com", "creation_time": "2001-03-13T04:35:59Z", "is_private": false, "text": "I've sent this to the Ant-Dev mailing list in January, and didn't receive too \nmuch feedback since... So I've decided to try the bug rat now ;-)\n\nThis is a suggestion for a new task for Ant called \"wlrmic\". This task can be\nused to invoke the BEA Weblogic RMI compiler using the same arguments as for the\nexisting rmic task.\n\nI have extended Rmic.java to provide some abstractions for getting the\nstub/skeleton suffixes, for creating the compiler and for adding the command\narguments. These methods are added differently in the WLRmic class added to the\noptional/ejb package.\n\nI've also fixed a bug in the isValidRmiRemote() method which returned true for\njava.rmi.Remote until now. This never caused an error so far because the 'if'\nclause in mapFileName() avoided interfaces before calling isValidRmiRemote();\nbut it looks cleaner like this. Besides that, I've streamlined this method a bit\nto use isAssignableFrom() instead of calling isValidRmiRemote() recursively.\n\nOne issue remains with this implementation: Since the Weblogic RMI compiler\nmangles the names of the classes to be\n<name_of_the_*interface*_extending_weblogic.rmi.Remote>_WLStub and <...>_WLSkel,\nor sometimes even produces files with strange numbers like WLStub123...45.java,\nthe up-to-date check always fails and the rmi compiler is always called on the\nclasses implementing weblogic.rmi.Remote.\n\nThe .zip in my mail from Jan. 31 contains the patch file for Rmic.java and a new \nsource WLRmic.java that should be added to optional/ejb.\n\nPlease let me know if this is worth being added to ant, or if it should be \nconsidered a third party add-on."}, {"count": 1, "tags": [], "creator": "bodewig@apache.org", "attachment_id": null, "text": "Peter,\n\nas far as I can remeber, you received some feedback - including that making\nrmic a facade like javac would be the better solution. Actually such a facade\nversion has just been submitted to ant-dev and is pending review.\n\nRegarding isValidRmiRemote: Let's say class A implements Remote (or a derived\ninterface) and B extends A. rmic will complain and not compile B - no _Stub\nneeded at all - but isAssignableFrom will return true for B.", "id": 1259, "time": "2001-03-14T02:49:29Z", "bug_id": 959, "creation_time": "2001-03-14T02:49:29Z", "is_private": false}, {"count": 2, "tags": [], "text": "rmic is now a factory task - please consider to resubmit your patch", "attachment_id": null, "id": 1319, "creator": "bodewig@apache.org", "time": "2001-03-16T05:06:01Z", "bug_id": 959, "creation_time": "2001-03-16T05:06:01Z", "is_private": false}, {"count": 3, "tags": [], "creator": "bodewig@apache.org", "attachment_id": null, "text": "Added in CVS and nightly build 2001-03-20.", "id": 1360, "time": "2001-03-19T03:26:17Z", "bug_id": 959, "creation_time": "2001-03-19T03:26:17Z", "is_private": false}]