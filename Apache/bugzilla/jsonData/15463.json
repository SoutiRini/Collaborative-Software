[{"count": 0, "tags": [], "bug_id": 15463, "attachment_id": null, "text": "See \n\nhttp://nagoya.apache.org/bugzilla/show_bug.cgi?id=570\n\nThis bug was fixed in 3.x by Marc Saegesser but 4.1.12 suffers\nfrom the same problem.  It appears that the same solution can \nbe applied to 4.1.12.\n\nThis bug produces incorrect early session expiration.", "id": 27977, "time": "2002-12-17T22:32:04Z", "creator": "steven.beal@peregrine.com", "creation_time": "2002-12-17T22:32:04Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 15463, "attachment_id": null, "text": "I've made the same observation.\n\nI was implementing a session keep alive for a client, when I noticed the \nsession's getLastAccessedTime() is not updating.\n\nAfter some testing, I noticed the correct value is displayed for every second \nhit.\n\nMy current workaround is to hit the server twice for every keep alive i need.\n\n\n", "id": 30584, "time": "2003-02-03T18:40:38Z", "creator": "pkhalife@dinmar.com", "creation_time": "2003-02-03T18:40:38Z", "is_private": false}, {"count": 2, "tags": [], "text": "Created attachment 6143\nProject files for test case.", "is_private": false, "bug_id": 15463, "id": 36468, "time": "2003-05-01T21:48:57Z", "creator": "tom.clowers@expeditors.com", "creation_time": "2003-05-01T21:48:57Z", "attachment_id": 6143}, {"count": 3, "tags": [], "creator": "tom.clowers@expeditors.com", "text": "We found this bug also with moving our application from Tomcat 3.3.1 to \n4.1.18/24. I have attached the following files in order that someone may \nattempt to reproduce the error. The whole project is available in attachment \nJSPTester.zip.\n\nJSPTesterServlet.java\nMyHTTPSessionListener.java\nweb.xml\n\nIn addition set the session timeout value to one minute in the default web.xml.\n\n    <session-config>\n        <session-timeout>1</session-timeout>\n    </session-config>\n\nand add an appropriate <Context/> tag to the <Host> section\n\n<Host>\n....\n  <Context path=\"/jsptester/servlet\" docBase=\"D:\\projects\\JSPTester\"    \nworkDir=\"D:\\projects\\JSPTester\\work\\org\\apache\\jsp\" />\n....\n</Host>\n\nIn addition I tried the workaround that Philippe suggests of hitting the server \ntwice for each \"keepalive\". This seems to work.\n\nTom Clowers\nExpeditors International of WA, Inc.\n", "id": 36469, "time": "2003-05-01T21:50:10Z", "bug_id": 15463, "creation_time": "2003-05-01T21:50:10Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "creator": "mark@tweakt.net", "attachment_id": 10095, "is_private": false, "id": 51211, "time": "2004-01-26T22:34:25Z", "bug_id": 15463, "creation_time": "2004-01-26T22:34:25Z", "text": "Created attachment 10095\nFix from 3.x, applies to 4.1.x-current"}, {"count": 5, "tags": [], "creator": "mark@tweakt.net", "attachment_id": null, "is_private": false, "id": 51213, "time": "2004-01-26T22:35:38Z", "bug_id": 15463, "creation_time": "2004-01-26T22:35:38Z", "text": "Please mark Bug#'s 18609, 20667 as duplicates."}, {"count": 6, "text": "*** Bug 18609 has been marked as a duplicate of this bug. ***", "bug_id": 15463, "attachment_id": null, "id": 51253, "time": "2004-01-27T16:22:18Z", "creator": "tom.clowers@expeditors.com", "creation_time": "2004-01-27T16:22:18Z", "tags": [], "is_private": false}, {"count": 7, "tags": [], "bug_id": 15463, "attachment_id": null, "is_private": false, "id": 51255, "time": "2004-01-27T16:23:40Z", "creator": "tom.clowers@expeditors.com", "creation_time": "2004-01-27T16:23:40Z", "text": "*** Bug 20667 has been marked as a duplicate of this bug. ***"}, {"count": 8, "tags": [], "bug_id": 15463, "attachment_id": null, "text": "*** Bug 20083 has been marked as a duplicate of this bug. ***", "id": 56144, "time": "2004-04-20T22:31:48Z", "creator": "markt@apache.org", "creation_time": "2004-04-20T22:31:48Z", "is_private": false}, {"count": 9, "tags": [], "bug_id": 15463, "attachment_id": null, "is_private": false, "id": 56775, "time": "2004-05-03T21:29:28Z", "creator": "glenn@apache.org", "creation_time": "2004-05-03T21:29:28Z", "text": "Problems with expiring sessions have been reported numerous times.\nThe basic problem is as follows, starting at time 0 min and with\na max inactive interval of 30 minutes:\n\n00 min: First request, new session created, LastAccessedTime 0\n02 min: Second request, reuse session, LastAccessedTime 0\n31 min: Third request, reuse session, LastAccessedTime now 2\n33 min: Background manager thread expires session even though\n        it has only been two minutes since the remote clients\n        last request.\n\nThe argument for not changing how this works is based on how\nthe Servlet Spec defines Session.getLastAccessedTime().\n\nBut I agree with all those who have complained about this\nbehaviour that Tomcat session timeouts are buggy.\n\nSo I came up with a compromise that still allows the\nHttpSession.getLastAccessedTime() to return the time of the\nprevious request for those who are Servlet Spec purists.\n\nBut internally sessions are expired when\ncurrent time > last request + max inactive interval.\n\nWhen we do a major revision we should consider adding\nthe StandardSession.getLastUsedTime() method to the\norg.apache.catalina.Session interface.\n\nPatch committed to CVS.\nWill be available in 4.1.31 and later releases."}, {"count": 10, "text": "Does the fix mentioned above work for 4.1.27? Your help is highly appreciated.\n(In reply to comment #9)\n> Problems with expiring sessions have been reported numerous times.\n> The basic problem is as follows, starting at time 0 min and with\n> a max inactive interval of 30 minutes:\n> 00 min: First request, new session created, LastAccessedTime 0\n> 02 min: Second request, reuse session, LastAccessedTime 0\n> 31 min: Third request, reuse session, LastAccessedTime now 2\n> 33 min: Background manager thread expires session even though\n>         it has only been two minutes since the remote clients\n>         last request.\n> The argument for not changing how this works is based on how\n> the Servlet Spec defines Session.getLastAccessedTime().\n> But I agree with all those who have complained about this\n> behaviour that Tomcat session timeouts are buggy.\n> So I came up with a compromise that still allows the\n> HttpSession.getLastAccessedTime() to return the time of the\n> previous request for those who are Servlet Spec purists.\n> But internally sessions are expired when\n> current time > last request + max inactive interval.\n> When we do a major revision we should consider adding\n> the StandardSession.getLastUsedTime() method to the\n> org.apache.catalina.Session interface.\n> Patch committed to CVS.\n> Will be available in 4.1.31 and later releases.\n\n", "bug_id": 15463, "attachment_id": null, "id": 82529, "time": "2005-11-15T22:04:52Z", "creator": "zain.yousafzai@gmail.com", "creation_time": "2005-11-15T22:04:52Z", "tags": [], "is_private": false}, {"count": 11, "tags": [], "text": "We are still running Tomcat 4.1.29 and experiencing the timeout problem almost\nexactly as as Glenn describes it in comment #9. Is the patch as described there\nonly available from release 4.1.31 or can we somehow apply it to 4.1.29? If the\nlatter is true then where do I get this patch, since I can only find the fix\n(id=10095) as per comment #4 from Tomcat 3.x days. It seems however from Glenn's\nnote re the patch and the 4.1.31 release notes that the upgrade path is a better\nchoice than any quick fix, so  it make sense to upgrade to 4.1.31 if one is\nserious to resolve timeout issues, right?", "attachment_id": null, "bug_id": 15463, "id": 94446, "time": "2006-10-03T14:49:43Z", "creator": "nick@silvermoongroup.com", "creation_time": "2006-10-03T14:49:43Z", "is_private": false}, {"count": 12, "tags": [], "bug_id": 15463, "attachment_id": null, "text": "You could generate your own patch but an upgrade to 4.1.31 or later would be\nmuch easier.", "id": 94453, "time": "2006-10-03T16:01:47Z", "creator": "markt@apache.org", "creation_time": "2006-10-03T16:01:47Z", "is_private": false}]