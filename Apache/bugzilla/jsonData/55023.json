[{"count": 0, "tags": [], "bug_id": 55023, "attachment_id": null, "text": "The enhancement to control the reuse of cached SSL Context instances between iterations (51380) is causing a performance bottleneck with http (non-ssl) requests.  In HTTPSamplerBase the following code is executed regardless of whether the HTTPS protocol is being used or not:\n\n@Override\npublic void testIterationStart(LoopIterationEvent event) {\n    if (!USE_CACHED_SSL_CONTEXT) {\n\tJsseSSLManager sslMgr = (JsseSSLManager) SSLManager.getInstance();\n\tsslMgr.resetContext();\n\tnotifySSLContextWasReset();\n    }\n}\n\nWith JVM profiling enabled on the JMeter process (adding: \"-agentlib:hprof=cpu=samples,interval=2,depth=10,monitor=y,thread=n\" to the JVM command line) I noticed that even though I was running a script using only HTTP requests (no SSL in the mix), hot spots were identified in SSL code paths:\n\nTRACE 300823:\nsun.security.provider.X509Factory.getFromCache(X509Factory.java:203)\nsun.security.provider.X509Factory.engineGenerateCertificate(X509Factory.java:93)\njava.security.cert.CertificateFactory.generateCertificate(CertificateFactory.java:339)\nsun.security.provider.JavaKeyStore.engineLoad(JavaKeyStore.java:747)\nsun.security.provider.JavaKeyStore$JKS.engineLoad(JavaKeyStore.java:55)\njava.security.KeyStore.load(KeyStore.java:1214)\nsun.security.ssl.TrustManagerFactoryImpl.getCacertsKeyStore(TrustManagerFactoryImpl.java:221)\nsun.security.ssl.TrustManagerFactoryImpl.engineInit(TrustManagerFactoryImpl.java:51)\njavax.net.ssl.TrustManagerFactory.init(TrustManagerFactory.java:250)\nsun.security.ssl.SSLContextImpl.engineInit(SSLContextImpl.java:83)\n\nTRACE 300844:\njava.io.FileInputStream.read(FileInputStream.java:Unknown line)\njava.io.DataInputStream.readInt(DataInputStream.java:387)\nsun.security.provider.JavaKeyStore.engineLoad(JavaKeyStore.java:667)\nsun.security.provider.JavaKeyStore$JKS.engineLoad(JavaKeyStore.java:55)\njava.security.KeyStore.load(KeyStore.java:1214)\nsun.security.ssl.TrustManagerFactoryImpl.getCacertsKeyStore(TrustManagerFactoryImpl.java:221)\nsun.security.ssl.TrustManagerFactoryImpl.engineInit(TrustManagerFactoryImpl.java:51)\njavax.net.ssl.TrustManagerFactory.init(TrustManagerFactory.java:250)\nsun.security.ssl.SSLContextImpl.engineInit(SSLContextImpl.java:83)\njavax.net.ssl.SSLContext.init(SSLContext.java:283)\n\nMoreover, when the SSL Context Reset code is executed, in the Apache HTTPClient sampler Implementations, open connections are closed even if they are not established with SSL (HTTPHC4ClientImpl.closeThreadLocalConnections()) thus making \"Keep Alive\" ineffective.\n\nAs a simple fix I added a check on the protocol in use like the following:\n\n@Override\npublic void testIterationStart(LoopIterationEvent event) {\n    if (!USE_CACHED_SSL_CONTEXT &&\n        getProtocol().equalsIgnoreCase(HTTPConstants.PROTOCOL_HTTPS)) {\n\tJsseSSLManager sslMgr = (JsseSSLManager) SSLManager.getInstance();\n\tsslMgr.resetContext();\n\tnotifySSLContextWasReset();\n    }\n}\n\nWith keep-alive enabled HTTP request throughput increases by around 500% in my environment.  I'm not certain, however, if this is the \"most correct\" fix because it is based on whether the last request executed in the iteration is SSL or not.", "id": 167466, "time": "2013-05-28T22:50:30Z", "creator": "brent.cromarty@yahoo.ca", "creation_time": "2013-05-28T22:50:30Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 55023, "is_private": false, "text": "Thanks for the report and analysis.\n\nEach HTTP sampler has its own HttpSamplerBase instance, so provided that the protocol is a fixed string, the check you propose is fine. For a dynamic protocol it might depend how the protocol was defined - perhaps the value might not be correctly defined at test iteration start [would need checking].\n\nHowever as you further point out, the HC3/HC4 implementations clear all current connections in the overridden notifySSLContextWasReset() methods. I assume this is because the context is bound to the connection somehow. Ideally one would like to only clear the relevant entry(s). This would be tricky to do at test iteration start, since the connection map key might rely on dynamic values.\n\nSo a possible solution might be to set a flag in the testIterationStart() method if the context is to be reset. The first sample that uses SSL would then ignore any cached connection, and always recreate it. And then clear the flag. I think this should solve both issues.", "id": 167467, "time": "2013-05-29T01:05:34Z", "creator": "sebb@apache.org", "creation_time": "2013-05-29T01:05:34Z", "attachment_id": null}, {"count": 2, "text": "I moved the testIterationStart code to the samplers where the SSL context needs to be reset. This means the code should only now run if there is an HTTPS sample in the test plan.\n\nIf the problem has not been fixed in versions from r1489189 please re-open with full details.\n\nURL: http://svn.apache.org/r1489189\nLog:\nSSL Context reuse feature (51380) adversely affects non-ssl request performance/throughput\nMove testIterationStart code to samplers that actually need it; allows it to be done on first actual sample\nBugzilla Id: 55023\n\nModified:\n    jmeter/trunk/src/protocol/http/org/apache/jmeter/protocol/http/sampler/HTTPAbstractImpl.java\n    jmeter/trunk/src/protocol/http/org/apache/jmeter/protocol/http/sampler/HTTPHC3Impl.java\n    jmeter/trunk/src/protocol/http/org/apache/jmeter/protocol/http/sampler/HTTPHC4Impl.java\n    jmeter/trunk/src/protocol/http/org/apache/jmeter/protocol/http/sampler/HTTPHCAbstractImpl.java\n    jmeter/trunk/src/protocol/http/org/apache/jmeter/protocol/http/sampler/HTTPSampler2.java\n    jmeter/trunk/src/protocol/http/org/apache/jmeter/protocol/http/sampler/HTTPSamplerBase.java\n    jmeter/trunk/src/protocol/http/org/apache/jmeter/protocol/http/sampler/HTTPSamplerProxy.java\n    jmeter/trunk/xdocs/changes.xml", "creator": "sebb@apache.org", "is_private": false, "id": 167637, "time": "2013-06-03T21:41:43Z", "bug_id": 55023, "creation_time": "2013-06-03T21:41:43Z", "tags": [], "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 55023, "attachment_id": null, "text": "Date: Tue Jun  4 20:56:41 2013\nNew Revision: 1489603\n\nURL: http://svn.apache.org/r1489603\nLog:\nBug 55023 - SSL Context reuse feature (51380) adversely affects non-ssl request performance/throughput\nFixed regression on 51380 introduced by fix\nBugzilla Id: 55023\n\nModified:\n    jmeter/trunk/src/protocol/http/org/apache/jmeter/protocol/http/sampler/HTTPSampler2.java\n    jmeter/trunk/src/protocol/http/org/apache/jmeter/protocol/http/sampler/HTTPSamplerBase.java\n    jmeter/trunk/src/protocol/http/org/apache/jmeter/protocol/http/sampler/HTTPSamplerProxy.java\n    jmeter/trunk/test/src/org/apache/jmeter/protocol/http/sampler/HTTPSampler3.java", "id": 167665, "time": "2013-06-04T20:57:33Z", "creator": "p.mouawad@ubik-ingenierie.com", "creation_time": "2013-06-04T20:57:33Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 55023, "attachment_id": null, "is_private": false, "id": 167707, "time": "2013-06-07T07:37:47Z", "creator": "p.mouawad@ubik-ingenierie.com", "creation_time": "2013-06-07T07:37:47Z", "text": "Date: Thu Jun  6 13:43:02 2013\nNew Revision: 1490281\n\nURL: http://svn.apache.org/r1490281\nLog:\nFix bug introduced in http://svn.apache.org/r1489603\nThe testIterationStart method is called from a different thread from any of the samples\n\nModified:\n    jmeter/trunk/src/protocol/http/org/apache/jmeter/protocol/http/sampler/HTTPSamplerProxy.java"}, {"count": 5, "tags": [], "creator": "p.mouawad@ubik-ingenierie.com", "attachment_id": null, "id": 167708, "time": "2013-06-07T07:38:08Z", "bug_id": 55023, "creation_time": "2013-06-07T07:38:08Z", "is_private": false, "text": "Date: Fri Jun  7 07:37:21 2013\nNew Revision: 1490528\n\nURL: http://svn.apache.org/r1490528\nLog:\nBug 55023 - SSL Context reuse feature (51380) adversely affects non-ssl request performance/throughput\nFixed regression on 52310 introduced by fix\n- http://svn.apache.org/r1489603\nFixed regression on 51380 introduced by fix\nhttp://svn.apache.org/r1490281\nBugzilla Id: 55023\n\nModified:\n    jmeter/trunk/src/protocol/http/org/apache/jmeter/protocol/http/sampler/HTTPSamplerProxy.java"}, {"count": 6, "text": "Tested in my environment with developer nightly build (r1493407) and performance for HTTP requests are up where I expect them to be.\n\nThanks for the quick turnaround on this.  My apologies for not getting to validating the fix sooner.\n\nb", "creator": "brent.cromarty@yahoo.ca", "is_private": false, "id": 167883, "time": "2013-06-17T22:11:22Z", "bug_id": 55023, "creation_time": "2013-06-17T22:11:22Z", "tags": [], "attachment_id": null}, {"count": 7, "tags": [], "creator": "p.mouawad@ubik-ingenierie.com", "text": "There is a regression introduced by the fix to this bug.\nSetting implementation in Http Request Defaults does not work anymore, if no property is set then HttpHcImpl4 will always be used.\n\nThis is due to the mergeIn being called after testIterationStart(), so implementation is not set yet.", "id": 168694, "attachment_id": null, "bug_id": 55023, "creation_time": "2013-07-21T19:35:14Z", "time": "2013-07-21T19:35:14Z", "is_private": false}, {"count": 8, "tags": [], "creator": "p.mouawad@ubik-ingenierie.com", "attachment_id": null, "is_private": false, "id": 168697, "time": "2013-07-21T20:42:38Z", "bug_id": 55023, "creation_time": "2013-07-21T20:42:38Z", "text": "Date: Sun Jul 21 20:41:43 2013\nNew Revision: 1505471\n\nURL: http://svn.apache.org/r1505471\nLog:\nBug 55023 - SSL Context reuse feature (51380) adversely affects non-ssl request performance/throughput\nBugzilla Id: 55023\n\nModified:\n    jmeter/trunk/src/protocol/http/org/apache/jmeter/protocol/http/sampler/HTTPAbstractImpl.java\n    jmeter/trunk/src/protocol/http/org/apache/jmeter/protocol/http/sampler/HTTPHC3Impl.java\n    jmeter/trunk/src/protocol/http/org/apache/jmeter/protocol/http/sampler/HTTPHC4Impl.java\n    jmeter/trunk/src/protocol/http/org/apache/jmeter/protocol/http/sampler/HTTPSampler2.java\n    jmeter/trunk/src/protocol/http/org/apache/jmeter/protocol/http/sampler/HTTPSamplerProxy.java"}]