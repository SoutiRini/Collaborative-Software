[{"count": 0, "tags": [], "text": "I need to read and analyze spreadsheets whose initial structure is not entirely\nknown a priori.  Since I could not find anything in the documentation about how\nto do this, and the information which is available in a DimensionsRecord at a\nlow level did not seem to be accessible through the usermodel objects, I propose\nadding the following method to usermodel.HSSFSheet:\n\n    public int getLastColumnNum() {\n    \tList records = sheet.getRecords();\n    \tDimensionsRecord dim = (DimensionsRecord)records.get(sheet.getDimsLoc());\n    \treturn dim.getLastCol();\n    }", "is_private": false, "id": 100731, "creation_time": "2007-03-21T08:18:07Z", "time": "2007-03-21T08:18:07Z", "creator": "gwghome@comcast.net", "bug_id": 41919, "attachment_id": null}, {"count": 1, "text": "Sorry, but this doesn't make sense. You are better off finding the maximum column on each row of the sheet. Either way you are reading all of the sheet's records.", "bug_id": 41919, "is_private": false, "id": 123601, "time": "2008-12-29T16:25:26Z", "creator": "dfisher@jmlafferty.com", "creation_time": "2008-12-29T16:25:26Z", "tags": [], "attachment_id": null}, {"count": 2, "tags": [], "creator": "toni.helenius@lut.fi", "is_private": false, "text": "It would make sense to some... For example I'm reading an Excel to a webpage. Some cells are empty and the webpage then doesn't look quite like the document on Excel. Perfect rectangle is the way to go. Then it is easiest to set out the row- and colspans as well when we know the dimensions before parsing the file.\n\nThere are alternative ways of course, but this made sense the most.", "id": 127141, "time": "2009-05-19T00:49:45Z", "bug_id": 41919, "creation_time": "2009-05-19T00:49:45Z", "attachment_id": null}]