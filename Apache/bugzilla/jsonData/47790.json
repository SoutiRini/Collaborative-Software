[{"count": 0, "tags": [], "bug_id": 47790, "attachment_id": null, "text": "If javadoc gets called with packagenames as well as sourcenames option, all\nclasses are listed twice in the allclasses-frame.html page. E.g.:\n\njavadoc -d build/docs/api \\\n  -classpath /local/apps/javax/slf4j/slf4j-api.jar \\\n  -sourcepath src \\\n  de.ovgu.cs.wizard \\\n  `find src -name \"*.java\" | xargs`\n\nHowever, omitting packagenames or sourcenames option works. E.g.:\n\njavadoc -d build/docs/api \\\n  -classpath /local/apps/javax/slf4j/slf4j-api.jar \\\n  -sourcepath src \\\n  `find src -name \"*.java\" | xargs`\n\njavadoc -d build/docs/api \\\n  -classpath /local/apps/javax/slf4j/slf4j-api.jar \\\n  -sourcepath src \\\n  de.ovgu.cs.wizard\n\nSince ant generates the packagenames option automatically, one can't use the\nfilesets anymore or gets a corrupted  allclasses-frame.html. E.g.:\n\n<javadoc destdir=\"${build.docs.dir}/api\"\n    author=\"true\" version=\"true\" use=\"true\"\n    additionalparam=\"-breakiterator\"\n    doctitle=\"${doctitle}\" windowtitle=\"${windowtitle}\"\n    header=\"${header}\"\n    bottom=\"${bottom}\"\n    sourcepath=\"${src.dir}\"\n    maxmemory=\"512m\"\n>\n    <classpath>\n        <path refid=\"classpath.base\"/>\n    </classpath>\n    <fileset dir=\"${src.dir}/${codebase}\" excludes=\"**/res/**, **/*.dtd,\n        **/test/*.java,**/Test*, **/*.form,@{excludes}\"/>\n    <link href=\"${jdkAPI}\" />\n</javadoc>\n\nproduces such a bogus allclasses-frame.html", "id": 130157, "time": "2009-09-05T21:24:13Z", "creator": "elkner@linofee.org", "creation_time": "2009-09-05T21:24:13Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 47790, "attachment_id": null, "id": 130208, "time": "2009-09-08T07:52:46Z", "creator": "bodewig@apache.org", "creation_time": "2009-09-08T07:52:46Z", "is_private": false, "text": "see also bug #47196 and the updated documentation in svn revision 786510\n\nsourcepath isn't directly equivalent to -sourcepath, it does more.  In fact it implicitly creates nested packagesets for each directory using the packagenames attribute - or \"*\" if no packagenames have been specified.\n\nIn your case this leads to the bogus all-classes frame - if you don't specify a sourcepath attribute at all, it should work."}, {"count": 2, "tags": [], "text": "is \"don't specify the sourcepath attribute at all\" good enough to close this?\n\nThe implementation won't change, we might tweak the documentation, though.", "is_private": false, "bug_id": 47790, "id": 130362, "time": "2009-09-14T03:07:37Z", "creator": "bodewig@apache.org", "creation_time": "2009-09-14T03:07:37Z", "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 47790, "attachment_id": null, "text": "Well, for my puposes it would be ok for now.\n\nHowever, having a pkgnames attribute is IMHO the cleaner way to handle special needs and get closer to the javadoc tool. I.e. if pkgnames is set (even if empty), the ant task should not generate pkgnames, otherwise behave in the traditional way.", "id": 130377, "time": "2009-09-14T09:01:29Z", "creator": "elkner@linofee.org", "creation_time": "2009-09-14T09:01:29Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 47790, "is_private": false, "text": "\nI ran into this issue while attempting to create a javadoc task equivalent to the following javadoc command which generates a couple hundred documentation files (http://code.google.com/p/filewise/source/browse/#svn/trunk/docs/api):\n\njavadoc -private -sourcepath /System/Library/Frameworks/JavaVM.framework/Versions/1.6.0/Home/src -source 1.6 -J-Xmx128m -d docs/api src/com/filewise/*.java src/com/applcore/java/*/*.java\n\nAs indicated, the following seemingly equivalent task definition \"does more\" in that it generates several thousand output files including doc for all of the JDK source files (requiring the memory to be increased to -Xmx768m), which takes about 25 minutes:\n\n<property name=\"sdk.java.src\"  location=\"/System/Library/Frameworks/JavaVM.framework/Versions/1.6.0/Home/src\"/>\n<!-- that property is actually set differently with <whichresource> depending on whether we're on Mac, Linux or Windows -->\n\n<target name=\"doc\" depends=\"init\">\n   <javadoc access=\"protected\" destdir=\"docs/api\" source=\"1.6\" maxmemory=\"768m\">\n      <packageset dir=\"src\"/>\n      <sourcepath>\n         <pathelement location=\"${sdk.java.src}\"/>\n      </sourcepath>\n   </javadoc>\n</target>\n\nI tried the \"don't specify the sourcepath attribute at all\" solution, but then it no longer picks up the inherited comments from the JDK, which makes sense, since there's no longer anything to indicate where the JDK source files are.  Thus all of the \"Description copied from ...\" comments disappeared from the output files.\n \nI tried adding \"-sourcepath\" as an additionalparam, but strangely it thought there was more than one \"-sourcepath\", until I replaced \"<packageset>\" with \"<fileset>\".  So the final workaround for properly specifying the \"-sourcepath\" parameter appears to be:\n\n<target name=\"doc\" depends=\"init\">\n   <javadoc access=\"protected\" destdir=\"docs/api\" source=\"1.6\" maxmemory=\"768m\" additionalparam=\"-sourcepath ${sdk.java.src}\">\n      <fileset dir=\"src\">\n         <include name=\"*.java\"/>\n         <include name=\"**/*.java\"/>\n      </fileset>\n   </javadoc>\n</target>\n\nIt now generates only 250 files and runs in as little as 128m, or with more memory takes 25 seconds rather than 25 minutes.\n\nRob S. http://Lnkd.com?24", "id": 132370, "time": "2009-11-28T16:53:37Z", "creator": "robs.apache4@MailScreen.com", "creation_time": "2009-11-28T16:53:37Z", "attachment_id": null}, {"count": 5, "tags": [], "creator": "robs.apache4@MailScreen.com", "attachment_id": null, "text": "Bug #41292 was a better place to put that.", "id": 132372, "time": "2009-11-28T17:27:36Z", "bug_id": 47790, "creation_time": "2009-11-28T17:27:36Z", "is_private": false}]