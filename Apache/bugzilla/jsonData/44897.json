[{"count": 0, "tags": [], "creator": "calebjones@gmail.com", "text": "As per the JavaDocs:\nhttp://tomcat.apache.org/tomcat-5.5-doc/servletapi/javax/servlet/ServletRequest.html#getParameter(java.lang.String)\n\n\"public java.lang.String getParameter(java.lang.String name)\n\nReturns the value of a request parameter as a String, or null if the parameter does not exist...\"\n\nHowever, given the following URL:\nhttp://localhost/webappName/?foo=bar%4xbaz\n\nhttpServletRequestObject.getParameter(\"foo\") will return null despite the existence of the parameter \"foo\".\n\nThe problem, as far as I can tell, is the presence of the invalid URL encoding '%xy' (where x or y are any non hexadecimal character).  I expected that getParameter(\"foo\") would do one of the following in this situation:\n\n1. Return \"bar%4xbaz\" (as does other languages such as PHP or Ruby on Rails)\n2. Throw a Java UnsupportedEncodingException (see http://java.sun.com/j2se/1.5.0/docs/api/java/io/UnsupportedEncodingException.html).\n\nMaking the data inaccessible via getParameter(String) (ie: returning null) seems to be less helpful than either one of the above.\n\nI was able to confirm this behavior in Tomcat 5.0.23 as well as 5.5.26.", "id": 115991, "time": "2008-04-28T15:25:02Z", "bug_id": 44897, "creation_time": "2008-04-28T15:25:02Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "text": "Other solutions I've proposed:\n\n3. Throw 400 and prevent execution from reaching servlet.\n4. Make the behavior configurable\n\nIn my opinion, following the RFC would obviously be best.  In the absence of an RFC rule on this, doing some research into whether or not there is a common behavior among other languages and frameworks in this situation and consider whether it is reasonable to follow suit.  If there is no RFC and there is no common behavior among other frameworks/languages, then any of the above seem reasonable.", "is_private": false, "id": 115997, "creation_time": "2008-04-28T16:22:57Z", "time": "2008-04-28T16:22:57Z", "creator": "calebjones@gmail.com", "bug_id": 44897, "attachment_id": null}, {"count": 2, "tags": [], "creator": "calebjones@gmail.com", "text": "Sorry I meant to say: \"Other solutions I've SEEN proposed\"\n\nDon't want to take credit for other's ideas.   ;)", "id": 115998, "time": "2008-04-28T16:23:55Z", "bug_id": 44897, "creation_time": "2008-04-28T16:23:55Z", "is_private": false, "attachment_id": null}, {"count": 3, "attachment_id": null, "bug_id": 44897, "text": "For the record, Tomcat ignores invalid parameters and logs that it has done so.\n\nI would be in favour of any patch that:\n- added alternative handling option(s)\n- keep the current as the default\n- wasn't too invasive\n\nIf you *need* this functionality now, you always have the option of parsing the query string yourself.", "id": 115999, "time": "2008-04-28T16:35:58Z", "creator": "markt@apache.org", "creation_time": "2008-04-28T16:35:58Z", "tags": [], "is_private": false}, {"count": 4, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "text": "The input data is invalid therefore ignoring it and logging it seems reasonable. I see no reason to change this, patches have been proposed and I do not recall any other users requesting that this is changed. Therefore resolving as won't fix.", "id": 145733, "time": "2011-04-12T18:04:17Z", "bug_id": 44897, "creation_time": "2011-04-12T18:04:17Z", "is_private": false}]