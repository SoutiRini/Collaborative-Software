[{"count": 0, "tags": [], "bug_id": 52206, "is_private": false, "text": "Created attachment 27967\nPatch adding static declarations and removing 2 trace messages\n\nI was profiling an application running FOP 1.0 and found a few hotspots. Some of them have been already fixed in trunk ( e.g. Bug 50626 ). \n\nThe ones requiring minimal changes are contained in this patch. It adds the 'static' declaration for loggers and removes 2 heavily used trace logging messages. I avoided to include bigger changes (mainly in FObj which would benefit by using a LinkedList instead of the siblings array) as bigger patches seem to be difficult to process ( #46962 )", "id": 151612, "time": "2011-11-17T19:35:51Z", "creator": "alex.giotis@gmail.com", "creation_time": "2011-11-17T19:35:51Z", "attachment_id": 27967}, {"count": 1, "tags": [], "bug_id": 52206, "is_private": false, "text": "Hi Alexis,\n\nThanks for your patch. Just a question about the removal of traces: surely if you disable trace logging there shouldn't be any impact on performance? And if you worry about performance, you would probably disable low-level loggings anyway? Or did I miss something?\n\n(In reply to comment #0)\n> Created attachment 27967 [details]\n> Patch adding static declarations and removing 2 trace messages\n> \n> I was profiling an application running FOP 1.0 and found a few hotspots. Some\n> of them have been already fixed in trunk ( e.g. Bug 50626 ). \n> \n> The ones requiring minimal changes are contained in this patch. It adds the\n> 'static' declaration for loggers and removes 2 heavily used trace logging\n> messages. I avoided to include bigger changes (mainly in FObj which would\n> benefit by using a LinkedList instead of the siblings array) as bigger patches\n> seem to be difficult to process ( #46962 )\n\nYes it takes too much time to process patches. Please don't give up though, we'll try to improve...\n\nThanks,\nVincent", "id": 151701, "time": "2011-11-21T15:51:44Z", "creator": "vhennebert@gmail.com", "creation_time": "2011-11-21T15:51:44Z", "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 52206, "attachment_id": null, "id": 151707, "time": "2011-11-21T21:14:00Z", "creator": "alex.giotis@gmail.com", "creation_time": "2011-11-21T21:14:00Z", "is_private": false, "text": "Hi Vincent, \n\nI guess you are referring to the removed lines in PropertyMaker.java. During the tests, I had disabled most of the logging by setting the log4j priority to WARN for all categories. Normally, a negligible impact is expected but profiling with VisualVM showed the following stacktrace taking a measurable time, I think about 2% :\n\n\tat org.apache.log4j.Category.getEffectiveLevel(Category.java:442)\n\tat org.apache.log4j.Category.isEnabledFor(Category.java:751)\n\tat org.apache.commons.logging.impl.Log4JLogger.isTraceEnabled(Log4JLogger.java:333)\n\tat org.apache.fop.fo.properties.PropertyMaker.make(PropertyMaker.java:380)\n....\nIf I was investigating a FOP issue and I needed this kind of trace information, I would most likely use a debugger. If the trace messages seem useful & changing the logging configuration at runtime is not important, then one could alternatively declare & use:\n\nprivate static final boolean isTraceEnabled = log.isTraceEnabled();\n\nThe o.a.l.Category.getEffectiveLevel()  searches the category hierarchy for a non-null level and returns it. Logback, the intended successor of log4j by the very same authors, has a faster overall implementation. Still according to http://logback.qos.ch/manual/architecture.html\n\n\"When logging is turned off entirely, the cost of a log request consists of a method invocation plus an integer comparison. On a 3.2Ghz Pentium D machine this cost is typically around 20 nanoseconds.\"\n\nTherefore, completely removing some trace messages from 'hotspots' seems a better choice."}, {"count": 3, "tags": [], "bug_id": 52206, "attachment_id": null, "text": "Hi Alex,\n\nPlease bear in mind that it is not always possible to use Remote Java IDE to debug. When investigating issues that cannot be recreated locally, only at customer site tracing is very helpful. As mentioned by you I prefer we change the code to check the isTraceEnabled() method once only, i.e.\n\nprivate static final boolean isTraceEnabled = log.isTraceEnabled();\n\nHopefully this will minimize the cost of the logging in this class.\n\nThanks,\n\nChris", "id": 151719, "time": "2011-11-22T12:49:39Z", "creator": "bowditch_chris@hotmail.com", "creation_time": "2011-11-22T12:49:39Z", "is_private": false}, {"count": 4, "tags": [], "creator": "alex.giotis@gmail.com", "attachment_id": null, "id": 151721, "creation_time": "2011-11-22T12:59:40Z", "time": "2011-11-22T12:59:40Z", "bug_id": 52206, "text": "Yes, this check has no cost. I guess, the changes are too small to create a new patch.", "is_private": false}, {"count": 5, "tags": [], "creator": "vhennebert@gmail.com", "attachment_id": null, "id": 151978, "time": "2011-12-05T15:39:15Z", "bug_id": 52206, "creation_time": "2011-12-05T15:39:15Z", "is_private": false, "text": "Patch applied in rev. 1210477:\nhttp://svn.apache.org/viewvc?rev=1210477&view=rev\n\nAs discussed, in PropertyMaker I store the log status in a static IS_LOG_TRACE_ENABLED variable. I still wonder though if logs really are the appropriate tool for this kind of thing. They add clutter to the code and are useful probably only during the development phase. After that they could be removed and replaced with unit tests. Plus the small but sometimes non-negligible performance impact as found out by Alexis.\n\nThanks for this useful profiling session!\n\nVincent"}, {"count": 6, "tags": [], "creator": "alex.giotis@gmail.com", "attachment_id": null, "is_private": false, "id": 151979, "time": "2011-12-05T16:35:31Z", "bug_id": 52206, "creation_time": "2011-12-05T16:35:31Z", "text": "Vincent, thanks for having a look and committing this. I agree with your comment related to this kind of trace logging but I am happy that the performance impact is now gone."}, {"count": 7, "tags": [], "bug_id": 52206, "attachment_id": null, "id": 155483, "creation_time": "2012-04-01T06:18:34Z", "time": "2012-04-01T06:18:34Z", "creator": "gadams@apache.org", "text": "batch transition to closed; if someone wishes to restore one of these to resolved in order to perform a verification step, then feel free to do so", "is_private": false}]