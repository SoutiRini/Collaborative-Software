[{"count": 0, "tags": [], "bug_id": 38592, "attachment_id": null, "text": "The problem is located in this block in LineArea.java. the doHyphenation will\nreturn 0, and the if statement is entered because there was not enough room for\nthe hyphenated word, and addWord will return 0, because it\u2019s the beginning of\nthe word and it will start all over.\n\nA workaround is to prevent the column size can be smaller then the size of a\nsingle character\n\nif (this.wrapOption == WrapOption.WRAP) {\n\n                        if (hyphProps.hyphenate == Hyphenate.TRUE) {\n                            int ret = wordStart;\n                            ret = this.doHyphenation(data, i, wordStart,\n                                                     this.getContentWidth()\n                                                     - (finalWidth\n                                                        + spaceWidth\n                                                        + pendingWidth),\n                                                     finalWidth + spaceWidth\n                                                     + embeddedLinkStart,\n                                                     ls, textState);\n\n                            // current word couldn't be hypenated\n                            // couldn't fit first word\n                            // I am at the beginning of my line\n                            if ((ret == wordStart) &&\n                                (wordStart == start) &&\n                                (finalWidth == 0)) {\n\n                                MessageHandler.log(\"area contents overflows\"\n                                                   + \" area in line \"\n                                                   + getLineText());\n                                addSpacedWord(new String(data, wordStart,\nwordLength - 1),\n                                              ls,\n                                              embeddedLinkStart,\n                                              spaceWidth, textState, false);\n\n                                finalWidth += wordWidth;\n                                wordWidth = 0;\n                                ret = i;\n                            }\n                            return ret;\n                        } else if (wordStart == start) {\n                            // first word\n                            overrun = true;\n                            // if not at start of line, return word start\n                            // to try again on a new line\n                            if (finalWidth > 0) {\n                                return wordStart;\n                            }\n                        } else {\n                            return wordStart;\n                        }\n\n                    }\n                }", "id": 85633, "time": "2006-02-09T14:48:05Z", "creator": "Flemming.Harms@capgemini.com", "creation_time": "2006-02-09T14:48:05Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 38592, "attachment_id": null, "id": 85668, "time": "2006-02-10T04:22:15Z", "creator": "manuel@apache.org", "creation_time": "2006-02-10T04:22:15Z", "is_private": false, "text": "Thank you for your problem report and for documenting a workaround. \n\nDevelopment including patches and bugfixes for 0.20.5 have been frozen.\n\nFeel free to check if the problem exists in the current beta version of Fop \n(0.91) and re-open the issues in that case."}, {"count": 2, "tags": [], "creator": "gadams@apache.org", "attachment_id": null, "id": 156798, "creation_time": "2012-04-01T13:53:02Z", "time": "2012-04-01T13:53:02Z", "bug_id": 38592, "text": "batch transition to closed remaining pre-FOP1.0 resolved bugs", "is_private": false}]