[{"count": 0, "tags": [], "bug_id": 11028, "attachment_id": null, "id": 19951, "creation_time": "2002-07-22T07:19:35Z", "time": "2002-07-22T07:19:35Z", "creator": "jheight@apache.org", "text": "Currently there are seperate classes for each color ie there is a \nHSSFColor.BLACK class. This patch removes the seperate classes and makes the \nHSSFColor contains instances of itself ie there is a HSSFColor.BLACK instance.\n\nI recently posted this patch on the mailing list. If this solution isnt \ndesirable (it will break existing code that uses POI) then by all means reject \nthis bug\n\nIMHO this solution is better than having numerous classes that perform exactly \nthe same functionality.\n\nI think that when custom colors are supported the methods that currently return \nan index will instead return a HSSFColor. Maybe I will work on this next ...\n\nJason", "is_private": false}, {"count": 1, "tags": [], "creator": "jheight@apache.org", "is_private": false, "text": "Created attachment 2432\nChanges to HSSFColor and other POI classes so that the color class contains instances rather than seperate classes", "id": 19953, "time": "2002-07-22T07:23:05Z", "bug_id": 11028, "creation_time": "2002-07-22T07:23:05Z", "attachment_id": 2432}, {"count": 2, "tags": [], "creator": "poi-support@buni.org", "is_private": false, "text": "here is my problem with this.  You now have x number of classes that may *never*\nbe used.  Having one instance of BLACK and RED, I can stamp on to several\nclasses is less memory consumptive.  Can you think of a way to do this without\nall those static instances created as required overhead?\n\n-Andy", "id": 20057, "time": "2002-07-23T15:01:35Z", "bug_id": 11028, "creation_time": "2002-07-23T15:01:35Z", "attachment_id": null}, {"count": 3, "tags": [], "creator": "jheight@apache.org", "is_private": false, "text": "But isnt there only one instance of each color object being created? they were \ndefined as public static final right? I think that you mean that the color \nBLACK (for instance) is always created but it may never be used, whereas in the \nexisting approach the BLACK instance is only created at the time that it is \nrequired.\n\nWhilst I see your point, I dont think that the overhead of a few default \npallette colours is that bad compared with the memory used when reading in the \nXLS files.\n\nMaybe the overhead (both memory and speed) of the class loader being invoked \nmany times in loading the color classes will negate any perceived benefits, but \nI really dont know. I know that you should try to reduce the number of objects \ncreated, however I dont know that if the approach that exists is any better in \nthe long run (but id like to be corrected ;-) )\n\nLike many things there is a trade off between code readibility and maintenance, \nspeed and memory usage.\n\nObviously since I made the patch I believe that this approach, whilst it may \nsacrifice some memory, is better in the long run.\n\nWhat do you think? Is the patch worth the perceived increase in memory?\n\nJason", "id": 20105, "time": "2002-07-24T07:16:20Z", "bug_id": 11028, "creation_time": "2002-07-24T07:16:20Z", "attachment_id": null}, {"count": 4, "tags": [], "creator": "poi-support@buni.org", "is_private": false, "text": "Personally I don't think so.  But I think you can accomplish what you're trying\nto accomplish and what I'm trying to accomplish another way.\n\nSecondly, I'm resistant to anything that increases memory for this form of\nconvienience.  Memory consumption is the biggest thing I want to fix after 3.0.\n\nThird, any modificaiton to this class needs to keep the issue of \"custom\npalletes\" in mind.  Meaning I don't want to drastically change this twice.  (Not\nto mention it will be a big pain in the serializer)\n\nFourth, is that patch worth the memory -- AND breaking (though we don't\ngurarantee interface backward compatibility in the development tree, we should\n\"be nice\") every piece of code ever written to POI?\n\nHere is what *would* be worth it in my view.\n\n1. Look at custom pallettes \n2. Make this compatibile with a later approach involving custom palettes\n3. probably make the constants static final ints for the indicies into the\ndefault pallette\n\nHere is what you'll come close to (I think, just a guess):\n\nHSSFPallete  ----------------->  HSSFDefaultPallete     \n    p HSSFColor getColorMatchingDefault(int colorindex)\n    p HSSFColor getColorMatchingDefault(String triplet)\n    p HSSFColor createColor(int index, String triplet, double\nwhateveryouneedforcustompallettes)\n    p HSSFColor createColor(int index, String triplet, boolean matchesDefault,\nint defaultindex, double whateveryouneedforcustompallettes)\n    p HSSFColor getColor(int index)\n    p HSSFColor getColor(String triplet)\n    \n\nHSSFDefaultPallete would have, in addition to the usual methods, constants\nmatching the *default* pallette \n pfs int BLACK\n\nHSSFWorkbook\n  getDefaultPallette\n  createCustomPallete\n     (returns a pallete populated with the defaults)\n\nWhile you don't have to implement the custom pallette functionality (I've\nresigned myself to having to do this eventually), anything done to HSSFColor\nthat inconviences all existing users in hopes of convienienceing future users\nneeds to go in this direction IMHO, otherwise we'll just do it again later, and\nthats just mean.\n\nSo I'll give you a vote on this.  If the majority of you, Glen, Avik, and Shawn\nall agree on applying your patch I'll remove my objection.  (active HSSF developers)\n\nWhat do you think?\n\nBTW do you have the Excel 97 Developers kit?  \n\n-Andy", "id": 20124, "time": "2002-07-24T12:03:33Z", "bug_id": 11028, "creation_time": "2002-07-24T12:03:33Z", "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 11028, "attachment_id": null, "id": 20175, "creation_time": "2002-07-24T22:46:34Z", "time": "2002-07-24T22:46:34Z", "creator": "jheight@apache.org", "text": "I think that with the current aproach that there is a point when the number of \ncolors that have been created will exceed the memory usage of this approach. \nLook at it this way, say there are 20 default pallete colors, with the current \napproach there are 20 classes that represent those colors. If i only want to \nuse 10 colors then the class loader needs to load those 10 classes and then \ninstanciate those classes. If I want to use all 20 colors then there are 20 \nclasses plus 20 objects to create. Which uses more memory here the class \nloading or the instanciation of the classes? Is it better to load one class and \ninstanciate 20 objects. To be honest I dont know.\n\nAt the end of the day I dont mind if the old scheme is kept. I see the reason \nbehind it, Andy wanted to keep the memory usage down , which IMHO is *very* \nimportant.\n\nYes I agree the solution should support the custom palletes. As such I am happy \nto leave this area as is for a while until the custom palletes code is worked \non.\n\nNo I do not own the excel developers kit which is probably why i havent got my \nfeet wet in the lower level structures.\n\nHaving said that I did try and find how to add a custom cell background color \nto cell in excel just to see the number of records involved. But i couldnt even \nfind how to allocate a custom color in excel 97 !!! Its probably right in front \nof me but how do you do it?\n\nJason", "is_private": false}, {"count": 6, "tags": [], "creator": "poi-support@buni.org", "is_private": false, "text": "I don't have Excel in front of me at the moment but....IIRC, If you look under\ntools? -> options on \"colors\" there is a modify button.  \n\nThe Excel Developer's kit is about $15(US) on Amazon  (its out of print).  Your\nfellow Aussie Glen picked one up.\n\nAs far as the memory issue, your point is well taken.  Its probably neither here\nnor there.  I think my main issue is I'd like to do this just once.\n\nIf you're about to get the custom pallete stuff working that would be awesome. \nOtherwise I'll get around to it before too long I hope.", "id": 20176, "time": "2002-07-24T22:53:29Z", "bug_id": 11028, "creation_time": "2002-07-24T22:53:29Z", "attachment_id": null}, {"count": 7, "tags": [], "creator": "jheight@apache.org", "attachment_id": null, "id": 20177, "time": "2002-07-24T22:55:38Z", "bug_id": 11028, "creation_time": "2002-07-24T22:55:38Z", "is_private": false, "text": "Yup cool its there all right.\n\nIm going on holidays for the next two weeks. Maybe ill get bored and give it a \ngo !\n\nJason"}, {"count": 8, "tags": [], "bug_id": 11028, "text": "To help out I submitted the starts of the palette record class.  Open a new bug\nor reopen this one when you have something.", "id": 20291, "attachment_id": null, "creator": "poi-support@buni.org", "creation_time": "2002-07-27T01:01:00Z", "time": "2002-07-27T01:01:00Z", "is_private": false}]