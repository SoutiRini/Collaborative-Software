[{"count": 0, "attachment_id": 24222, "bug_id": 47796, "is_private": false, "id": 130194, "time": "2009-09-07T16:21:00Z", "creator": "20090908@csokker.hu", "creation_time": "2009-09-07T16:21:00Z", "tags": [], "text": "Created attachment 24222\nPatch file contatining the proposed fix\n\nWhen a webapp is stopped in tomcat, the annotationProcessor field does not get\nnullified. When the webapp is started again, the start() method of the\nStandardContext class checks whether the annotationProcessor field is null, and\nonly builds a new one if so. This means that the annotationProcessor gets\nreused between application start/stop cycles (not tomcat restart cycles).\nThings that are dependent on the annotationProcessor (like injection, etc) may\nbe broken because of this.\nOne specific example is when using OpenEJB tomcat integration. The\nannotationProcesor itself holds a reference to a javax.naming.Context, which is\ncached between context start/stop cycles. This causes that after a stop/start\ncycle of a context, the annotationProcessor tries to inject the EJB reference\nproxies made at the first start of the context, which was made against\ndifferent instances of the to-be-injected fields' classes. This results that\nthe EJB injection is not working.\nOther types of injections may be broken too.\n\nAttached patch file containing the fix. Tested, works."}, {"count": 1, "tags": [], "bug_id": 47796, "text": "Thanks for the patch. It has been proposed for 6.0.x.\n\nNot that there is no need for a similar patch in trunk, the instanceManager is already set to null on stop.", "id": 130328, "time": "2009-09-12T09:21:34Z", "creator": "markt@apache.org", "creation_time": "2009-09-12T09:21:34Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 47796, "attachment_id": null, "is_private": false, "id": 130851, "time": "2009-10-03T10:56:51Z", "creator": "markt@apache.org", "creation_time": "2009-10-03T10:56:51Z", "text": "This has been applied to 6.0.x and will be included in 6.0.21 onwards.\n\nAgain, many thanks for the patch."}]