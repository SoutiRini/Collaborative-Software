[{"count": 0, "tags": [], "bug_id": 47862, "attachment_id": 24284, "id": 130492, "creation_time": "2009-09-17T13:06:04Z", "time": "2009-09-17T13:06:04Z", "creator": "bstox@yahoo.com", "text": "Created attachment 24284\nPreformatted spreadsheet\n\nI have a spreadsheet that is already preformatted. If you have consecutive\ncolumns with the same column width and you want to change just one of those\ncolumn's width.  When you do it changes all the columns to that width.\n\nI will attach a spreadsheet and a test program to illustrate the problem.\n\nimport java.io.*;\n\nimport org.apache.poi.ss.usermodel.*;\nimport org.apache.poi.hssf.usermodel.*;\nimport org.apache.poi.xssf.usermodel.*;\nimport java.util.*;\npublic class Width_test {\n\n    /**\n     * @param args\n     */\n    public static void main(String[] args) {\n        try {\n\n        Workbook wb = new XSSFWorkbook(\"checkwidth3.xlsx\");\n        Sheet sheet = wb.getSheetAt(0);\n\n        for (int i=5; i > -1;i--){\n            System.out.println(\"Column: \" + i + \" width: \" +\nsheet.getColumnWidth(i));\n            sheet.setColumnWidth(i, sheet.getColumnWidth(i)-1000);\n            System.out.println(\"Column: \" + i + \" width: \" +\nsheet.getColumnWidth(i));\n        }\n\n        FileOutputStream fileOut = new FileOutputStream(\"checkwidth2.xlsx\");\n        wb.write(fileOut);\n        fileOut.close();\n        } catch (Exception e) {\n        }\n    }\n}", "is_private": false}, {"count": 1, "tags": [], "bug_id": 47862, "attachment_id": null, "text": "Are you running in the latest nightly build?\n\nYegor just resolved a similar XSSF issue in https://issues.apache.org/bugzilla/show_bug.cgi?id=47581\n\nRegards,\nDave", "id": 130494, "time": "2009-09-17T14:14:37Z", "creator": "dfisher@jmlafferty.com", "creation_time": "2009-09-17T14:14:37Z", "is_private": false}, {"count": 2, "tags": [], "text": "(In reply to comment #1)\n> Are you running in the latest nightly build?\n> Yegor just resolved a similar XSSF issue in\n> https://issues.apache.org/bugzilla/show_bug.cgi?id=47581\n> Regards,\n> Dave\n\nI tried and it still is working the same way\n\nBob", "attachment_id": null, "bug_id": 47862, "id": 130500, "time": "2009-09-17T18:31:08Z", "creator": "bstox@yahoo.com", "creation_time": "2009-09-17T18:31:08Z", "is_private": false}, {"count": 3, "tags": [], "creator": "bstox@yahoo.com", "text": "After looking at what Yegor did for bug 47581, I was debugging the setColumnWidth in class ColumnHelper.  I add the following line:\nSystem.out.println(col.toString);\n\nAnd the result was the following:\n<xml-fragment min=\"1\" max=\"5\" customWidth=\"true\" width=\"15.77734375\" collapsed=\"false\" xmlns:r=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships\"/>\n\nI saw the min, max to be the columns that have the same width in my spreadsheet.\n\nI first tried just setting the min/max for that column and that worked for the one column but all the other columns were reset to the default width. So I then came up with the following solution and it seems to work.\n\n    public void setColWidth(long index, double width) {\n        CTCol col = getOrCreateColumn1Based(index+1, false);\n        if (col.getMax() != col.getMin()){\n        \tdouble old_width = col.getWidth();\n        \tlong from_column = col.getMin();\n        \tlong to_column = col.getMax();\n            col.setMin(index+1);\n            col.setMax(index+1);\t\n            // Check if there are any columns to the left of columns to be reset\n            if (index >= from_column && index > 0){\n            \tCTCol newCol = getOrCreateColumn1Based(index, false);\n            \tnewCol.setMin(from_column);\n            \tnewCol.setMax(index);\n            \tsetColumnAttributes(col,newCol);\n            \tnewCol.setWidth(old_width);\n            }\n            // Check if there are any columns to the left of columns to be reset\n            if ((index+2) <= to_column){\n            \tCTCol newCol = getOrCreateColumn1Based((index+2), false);\n            \tnewCol.setMin(index+2);\n            \tnewCol.setMax(to_column);\n            \tsetColumnAttributes(col,newCol);\n            \tnewCol.setWidth(old_width);\n            }\n        }\n        col.setWidth(width);\n    }", "id": 130577, "time": "2009-09-22T07:29:43Z", "bug_id": 47862, "creation_time": "2009-09-22T07:29:43Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "creator": "yegor@dinom.ru", "attachment_id": null, "text": "Actually the fix is simple - change the second parameter of getOrCreateColumn1Based from false to true in ColumnHelper.setColWidth:\n\n    public void setColWidth(long index, double width) {\n        CTCol col = getOrCreateColumn1Based(index+1, true);\n        col.setWidth(width);\n    }\n\ntrue causes to split spanned columns which is exactly what we need.\n\n\nThe fix was committed in r821497\n\nYegor", "id": 130873, "time": "2009-10-04T03:15:32Z", "bug_id": 47862, "creation_time": "2009-10-04T03:15:32Z", "is_private": false}]