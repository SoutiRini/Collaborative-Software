[{"text": "Using an invalid Java bean that has setXXX and getXXX property methods that \nhave different in and out types can be difficult to track down. The error \nmessage returned in such a case could be improved by including the property \ntype.\n\nFor example:\n\npublic class MyBeanClass {\n  MyViewClass mvc;\n\n  public void setView(String myViewClass) {\n    try {\n      mvc = (MyViewClass)Class.forName(myViewClass).newInstance();\n    } catch(Exception ex) {}\n  }\n\n  public MyViewClass getView() {\n    return myViewClass;\n  }\n}\n\nThe problem with this java bean class is that the property 'view' has two \ndifferent types i.e. set takes a String but the get returns a MyViewClass \nobject.\n\nIf we use the following code in a JSP:-\n\n<jsp:useBean id=\"myBean\" class=\"MyBeanClass\" scope=\"application\">\n  <jsp:setProperty name=\"myBean\" property=\"view\" value=\"MyViewClass\"/>\n</jsp:useBean>\n\nthe following exception is thrown:-\n\norg.apache.jasper.JasperException: Can't find a method to write property 'view' \nin a bean of type 'MyBeanClass'\n    at org.apache.jasper.runtime.JspRuntimeLibrary.internalIntrospecthelper\n(JspRuntimeLibrary.java)\n    at org.apache.jasper.runtime.JspRuntimeLibrary.introspecthelper\n(JspRuntimeLibrary.java)\n    at org.apache.jsp.myJSP$jsp._jspService(myJSP$jsp.java)\n\nIf the type of the propery was printed out in the error message this would make \nthis mistake a lot easier to track down.\n\nSee line 714 in org.apache.jasper.runtime.JspRuntimeLibrary\n\nprivate static void internalIntrospecthelper(Object bean, ...) ... {\n  ...\n\n  if(type == null)\n    throw new JasperException(\n          Constants.getString(\"jsp.error.beans.noproperty\", \n            new Object[] { prop, bean.getClass().getName() \n          }));\n  else\n    throw new JasperException(\n          Constants.getString(\"jsp.error.beans.nomethod.setproperty\",\n            new Object[] { prop, bean.getClass().getName()\n          }));\n  ...\n}\n\nThe else part of the above code is been excecuted and even that the 'type' is \nfound it is not inserted into the exception.", "tags": [], "bug_id": 13206, "is_private": false, "count": 0, "id": 23750, "time": "2002-10-02T14:07:44Z", "creator": "philip.murphy@iona.com", "creation_time": "2002-10-02T14:07:44Z", "attachment_id": null}]