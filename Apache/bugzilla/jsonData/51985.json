[{"count": 0, "attachment_id": null, "bug_id": 51985, "text": "Here's a custom task definition that asks the user to input their name and then dupes it back:\n\npackage com.runamok.tools.taskdefs;\n\nimport org.apache.tools.ant.BuildException;\nimport org.apache.tools.ant.Project;\nimport org.apache.tools.ant.Task;\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\n\n/**\n *\n */\npublic class ConfirmInputTask  extends Task\n{\n  private BufferedReader _in = new BufferedReader( new InputStreamReader( System.in ) );\n\n  public void execute() throws BuildException\n  {\n    System.out.print(\"Enter your name:\");\n    try\n    {\n      String name = _in.readLine();\n      System.out.println(\"You entered: \" + name);\n    }\n    catch (IOException e)\n    {\n      log(e, Project.MSG_ERR);\n    }\n  }\n}\n\nThe expected behavior is as follows:\n\nC:\\niku\\main.next\\tools>ant -f test-confirm.xml build\nBuildfile: C:\\niku\\main.next\\tools\\test-confirm.xml\n\nbuild:\nEnter your name:test\nYou entered: test\n\nBUILD SUCCESSFUL\nTotal time: 2 seconds\n\nC:\\niku\\main.next\\tools>\n\nThe actual behavior is:\n\nC:\\niku\\main.next\\tools>ant -f test-confirm.xml build\nBuildfile: C:\\niku\\main.next\\tools\\test-confirm.xml\n\nbuild:\nEnter your name:\ntest\nYou entered: test\n\nBUILD SUCCESSFUL\nTotal time: 2 seconds\n\nC:\\niku\\main.next\\tools>\n\nThe DemuxOutputStream class that ANT uses to take over System.out appears to do a println() when it is called to flush the buffer as a result of the DemuxInputStream readLine() call. \n\nIf I remove the two lines in org.apache.tools.ant.Main.runBuild() that override System.out and System.err I get the expected behavior (see commented out lines below)\n\n   private void runBuild(ClassLoader coreLoader) throws BuildException {\n\n        if (!readyToRun) {\n            return;\n        }\n\n        final Project project = new Project();\n        project.setCoreLoader(coreLoader);\n\n        Throwable error = null;\n\n        try {\n            addBuildListeners(project);\n            addInputHandler(project);\n\n            PrintStream savedErr = System.err;\n            PrintStream savedOut = System.out;\n            InputStream savedIn = System.in;\n\n            // use a system manager that prevents from System.exit()\n            SecurityManager oldsm = null;\n            oldsm = System.getSecurityManager();\n\n                //SecurityManager can not be installed here for backwards\n                //compatibility reasons (PD). Needs to be loaded prior to\n                //ant class if we are going to implement it.\n                //System.setSecurityManager(new NoExitSecurityManager());\n            try {\n                if (allowInput) {\n                    project.setDefaultInputStream(System.in);\n                }\n              System.setIn(new DemuxInputStream(project));\n// SA               System.setOut(new PrintStream(new DemuxOutputStream(project, false)));\n// SA               System.setErr(new PrintStream(new DemuxOutputStream(project, true)));\n\n\n                if (!projectHelp) {\n                    project.fireBuildStarted();\n                }\n\n                // set the thread priorities\n                if (threadPriority != null) {\n                    try {\n                        project.log(\"Setting Ant's thread priority to \"\n                                + threadPriority, Project.MSG_VERBOSE);\n                        Thread.currentThread().setPriority(threadPriority.intValue());\n                    } catch (SecurityException swallowed) {\n                        //we cannot set the priority here.\n                        project.log(\"A security manager refused to set the -nice value\");\n                    }\n                }\n\n\n\n                project.init();\n\n                // resolve properties\n                PropertyHelper propertyHelper\n                    = (PropertyHelper) PropertyHelper.getPropertyHelper(project);\n                HashMap props = new HashMap(definedProps);\n                new ResolvePropertyMap(project, propertyHelper,\n                                       propertyHelper.getExpanders())\n                    .resolveAllProperties(props, null, false);\n\n                // set user-define properties\n                for (Iterator e = props.entrySet().iterator(); e.hasNext(); ) {\n                    Map.Entry ent = (Map.Entry) e.next();\n                    String arg = (String) ent.getKey();\n                    Object value = ent.getValue();\n                    project.setInheritedProperty(arg, String.valueOf(value));\n                }\n\n                project.setInheritedProperty(MagicNames.ANT_FILE,\n                                        buildFile.getAbsolutePath());\n                project.setInheritedProperty(MagicNames.ANT_FILE_TYPE,\n                                        MagicNames.ANT_FILE_TYPE_FILE);\n\n                project.setKeepGoingMode(keepGoingMode);\n                if (proxy) {\n                    //proxy setup if enabled\n                    ProxySetup proxySetup = new ProxySetup(project);\n                    proxySetup.enableProxies();\n                }\n\n                ProjectHelper.configureProject(project, buildFile);\n\n                if (projectHelp) {\n                    printDescription(project);\n                    printTargets(project, msgOutputLevel > Project.MSG_INFO,\n                            msgOutputLevel > Project.MSG_VERBOSE);\n                    return;\n                }\n\n                // make sure that we have a target to execute\n                if (targets.size() == 0) {\n                    if (project.getDefaultTarget() != null) {\n                        targets.addElement(project.getDefaultTarget());\n                    }\n                }\n\n                project.executeTargets(targets);\n            } finally {\n                // put back the original security manager\n                //The following will never eval to true. (PD)\n                if (oldsm != null) {\n                    System.setSecurityManager(oldsm);\n                }\n\n                System.setOut(savedOut);\n                System.setErr(savedErr);\n                System.setIn(savedIn);\n            }\n        } catch (RuntimeException exc) {\n            error = exc;\n            throw exc;\n        } catch (Error e) {\n            error = e;\n            throw e;\n        } finally {\n            if (!projectHelp) {\n                try {\n                    project.fireBuildFinished(error);\n                } catch (Throwable t) {\n                    // yes, I know it is bad style to catch Throwable,\n                    // but if we don't, we lose valuable information\n                    System.err.println(\"Caught an exception while logging the\"\n                                       + \" end of the build.  Exception was:\");\n                    t.printStackTrace();\n                    if (error != null) {\n                        System.err.println(\"There has been an error prior to\"\n                                           + \" that:\");\n                        error.printStackTrace();\n                    }\n                    throw new BuildException(t);\n                }\n            } else if (error != null) {\n                project.log(error.toString(), Project.MSG_ERR);\n            }\n        }\n    }", "id": 150276, "time": "2011-10-06T23:46:53Z", "creator": "scott.asire423@gmail.com", "creation_time": "2011-10-06T23:46:53Z", "tags": [], "is_private": false}, {"count": 1, "attachment_id": 27714, "bug_id": 51985, "text": "Created attachment 27714\nTest task definition that reproduces the problem\n\nThis Task demonstrates the incorrect behavior on System.out.print followed by a System.in.readLine(). The input should be accepted on the same line as the message.", "id": 150277, "time": "2011-10-06T23:49:20Z", "creator": "scott.asire423@gmail.com", "creation_time": "2011-10-06T23:49:20Z", "tags": [], "is_private": false}, {"attachment_id": 27715, "tags": [], "creator": "scott.asire423@gmail.com", "text": "Created attachment 27715\nBuild file that calls the ConfirmInput task.\n\nBuild file that I used to test the ConfirmInputTask. I run it using the command:\n\nant -f test-confirm.xml build", "count": 2, "id": 150278, "time": "2011-10-06T23:51:03Z", "bug_id": 51985, "creation_time": "2011-10-06T23:51:03Z", "is_private": false}]