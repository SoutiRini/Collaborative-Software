[{"count": 0, "tags": [], "bug_id": 44577, "attachment_id": null, "text": "There is extremely poor performance under the SITE tab for large subtrees. The problem is even worse if the tree is tall instead of wide. From the best I can tell (and remember from algorithms) the runtime is O(n^2) for 6 usecase tests on that page. And actually each usecase has 2 O(n^2), O(n), O(n log n). \n\nWhat I have found is getPath from o.a.l.c.s.tree2.TreeNodeImpl runs the following number of times for the Index node on the site tab for the following configurations:\n\nDefault: 96\nDefault + Child: 184\nDefault + Child + Nephew: 194\nDefault + Nephew + Child + Grand Child: 500\n\nWhile investigating this, I have found several areas which could use optimization and will document them in this bug.", "id": 114487, "time": "2008-03-11T07:55:44Z", "creator": "rfrovarp@apache.org", "creation_time": "2008-03-11T07:55:44Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 44577, "attachment_id": null, "id": 114499, "time": "2008-03-11T12:34:54Z", "creator": "rfrovarp@apache.org", "creation_time": "2008-03-11T12:34:54Z", "is_private": false, "text": "Cache getPath results in r636074. Reduces the number of calls to 359 from 500. All of my testing has not been able to generate a problem using this caching. "}, {"count": 2, "tags": [], "text": "In r636076 I made it so that both if checks aren't ran in the Comparator. Probably won't help a whole bunch with performance. However, it is confusing for the code to run both checks.", "is_private": false, "id": 114500, "creator": "rfrovarp@apache.org", "time": "2008-03-11T12:40:39Z", "bug_id": 44577, "creation_time": "2008-03-11T12:40:39Z", "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 44577, "is_private": false, "id": 114502, "creation_time": "2008-03-11T12:59:28Z", "time": "2008-03-11T12:59:28Z", "creator": "rfrovarp@apache.org", "text": "Provided functionality to retrieve an unordered iterator to NodeSet in r636082. This should help out usecases who were previously asking for all children in ascending order in getNodesToLock, which has a cost of O(n^2).", "attachment_id": null}, {"count": 4, "tags": [], "text": "Changed getDocuments in NodeSet to now use the unsorted iterator r636095. API made no guarantee about order of returned elements and sorting doesn't appear to help the function any. ", "is_private": false, "id": 114503, "creator": "rfrovarp@apache.org", "time": "2008-03-11T13:34:19Z", "bug_id": 44577, "creation_time": "2008-03-11T13:34:19Z", "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 44577, "attachment_id": null, "text": "ChangeNodeID called NodeSet.ascending directly. This is the last usecase from the sitetab where I have seen the sort being called unecessarily. r636099", "id": 114504, "time": "2008-03-11T13:36:14Z", "creator": "rfrovarp@apache.org", "creation_time": "2008-03-11T13:36:14Z", "is_private": false}, {"count": 6, "tags": [], "bug_id": 44577, "attachment_id": null, "is_private": false, "id": 114785, "time": "2008-03-19T15:51:51Z", "creator": "andreas@apache.org", "creation_time": "2008-03-19T15:51:51Z", "text": "IMO this is a good usecase for AJAX. The JavaScript could request only the set of immediately visible children when opening a node."}, {"count": 7, "tags": [], "bug_id": 44577, "attachment_id": null, "id": 114817, "time": "2008-03-20T10:31:27Z", "creator": "rfrovarp@apache.org", "creation_time": "2008-03-20T10:31:27Z", "is_private": false, "text": "Well, the problem was for the currently selected node. So I don't know that AJAX would help in that regard. However, not testing if the usecases are possible for every click in the sitetree would be good. You did create that menubar module, which should fix that problem when used."}, {"count": 8, "tags": [], "creator": "rfrovarp@apache.org", "text": "This is behaving much better. Would still be nice to have the AJAX menu bar at some point in the future.", "id": 122443, "time": "2008-11-13T12:25:10Z", "bug_id": 44577, "creation_time": "2008-11-13T12:25:10Z", "is_private": false, "attachment_id": null}]