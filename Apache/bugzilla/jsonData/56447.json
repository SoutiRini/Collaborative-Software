[{"count": 0, "tags": [], "text": "I am using POIFS to extract data from OLE2 files generated by an X-ray scanner. Opening small files works fine with both POIFSFileSystem and NPOIFSFileSystem. However, when I try to open large files (say, a few GB or larger), I get an OutOfMemory exception with POIFSFileSystem, and with NPOIFSFileSystem, I get the following exception:\n\njava.lang.IllegalArgumentException\n\tat java.nio.ByteBuffer.allocate(ByteBuffer.java:330)\n\tat org.apache.poi.poifs.filesystem.NPOIFSFileSystem.<init>(NPOIFSFileSystem.java:275)\n\nCould this be a bug in NPOIFSFileSystem?", "attachment_id": null, "id": 174790, "creator": "mskan@dtu.dk", "time": "2014-04-23T07:53:25Z", "bug_id": 56447, "creation_time": "2014-04-23T07:53:25Z", "is_private": false}, {"count": 1, "tags": [], "text": "Any chance you could attach a debugger, and check the values in NPOIFS of maxSize (line 274) and _header.getBATCount()?", "attachment_id": null, "id": 174792, "creator": "apache@gagravarr.org", "time": "2014-04-23T08:38:10Z", "bug_id": 56447, "creation_time": "2014-04-23T08:38:10Z", "is_private": false}, {"count": 2, "tags": [], "text": "I have now created a minimal example that throws the following exception:\n\nException in thread \"main\" java.lang.OutOfMemoryError: Java heap space\n\tat java.nio.HeapByteBuffer.<init>(HeapByteBuffer.java:57)\n\tat java.nio.ByteBuffer.allocate(ByteBuffer.java:331)\n\tat org.apache.poi.poifs.filesystem.NPOIFSFileSystem.<init>(NPOIFSFileSystem.java:273)\n\tat TestApp.main(TestApp.java:16)\n\nThe values in NPOIFS are:\n\n_header.getBATCount() = 493\nmaxSize = 2067795968\n\nThe size of the file that I am opening is 3,365,793,792 bytes.\n\n(In reply to Nick Burch from comment #1)\n> Any chance you could attach a debugger, and check the values in NPOIFS of\n> maxSize (line 274) and _header.getBATCount()?", "is_private": false, "bug_id": 56447, "id": 174795, "time": "2014-04-23T10:00:55Z", "creator": "mskan@dtu.dk", "creation_time": "2014-04-23T10:00:55Z", "attachment_id": null}, {"count": 3, "tags": [], "text": "The NPOIFSFileSystem constructor that takes an InputStream buffers the whole file into memory. So, your heap space needs to be at least the size of the file, plus a bit extra. Nothing we can do to help there - you just have to increase your heap\n\nAlternately, NPOFSFileSystem has a constructor that takes a File, that has a much much lower memory footprint as a File allows for Random Access (InputStream does not)\n\nIf you increase your heap to something like 15% bigger than the file, does it work with an InputStream?\n\nIf you switch to a File, does that fix it without a bigger heap?", "attachment_id": null, "id": 174797, "creator": "apache@gagravarr.org", "time": "2014-04-23T11:19:06Z", "bug_id": 56447, "creation_time": "2014-04-23T11:19:06Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 56447, "is_private": false, "text": "I realize that the numbers that I gave you before were for a file of size 2,066,718,720 bytes. Increasing the heap size (using -Xmx3G) helps when opening the file as an InputStream, and it also works with the standard heap size when I use File instead of InputStream. However, when I try opening the file that is 3,365,793,792 bytes, I get this exception when passing a File object to NPOIFSFileSystem:\n\nException in thread \"main\" java.lang.IllegalArgumentException\n\tat sun.nio.ch.FileChannelImpl.position(FileChannelImpl.java:275)\n\tat org.apache.poi.poifs.nio.FileBackedDataSource.read(FileBackedDataSource.java:57)\n\tat org.apache.poi.poifs.filesystem.NPOIFSFileSystem.getBlockAt(NPOIFSFileSystem.java:426)\n\tat org.apache.poi.poifs.filesystem.NPOIFSFileSystem.readBAT(NPOIFSFileSystem.java:402)\n\tat org.apache.poi.poifs.filesystem.NPOIFSFileSystem.readCoreContents(NPOIFSFileSystem.java:377)\n\tat org.apache.poi.poifs.filesystem.NPOIFSFileSystem.<init>(NPOIFSFileSystem.java:201)\n\tat org.apache.poi.poifs.filesystem.NPOIFSFileSystem.<init>(NPOIFSFileSystem.java:162)\n\tat org.apache.poi.poifs.filesystem.NPOIFSFileSystem.<init>(NPOIFSFileSystem.java:143)\n\nCould this be because of integer overflow? If I use the InputStream and increase the heap size to 4GB, then maxSize is equal to -926937088 (and _header.getBATCount() = 803), and I get the following exception:\n\nException in thread \"main\" java.lang.IllegalArgumentException\n\tat java.nio.ByteBuffer.allocate(ByteBuffer.java:330)\n\tat org.apache.poi.poifs.filesystem.NPOIFSFileSystem.<init>(NPOIFSFileSystem.java:273)\n\tat ReadTXRM.main(ReadTXRM.java:19)", "id": 174798, "time": "2014-04-23T12:30:05Z", "creator": "mskan@dtu.dk", "creation_time": "2014-04-23T12:30:05Z", "attachment_id": null}, {"count": 5, "tags": [], "text": "Looks like we might have one or more ints that need to be a long. \n\nAre you able to generate a file that's >2gb, but data mostly 0s so it can be easily compressed down to something small? That can then be used in unit tests", "is_private": false, "id": 174799, "creator": "apache@gagravarr.org", "time": "2014-04-23T12:37:16Z", "bug_id": 56447, "creation_time": "2014-04-23T12:37:16Z", "attachment_id": null}, {"count": 6, "text": "Unfortunately I don't think that I can create such a file, but I can give you the file that causes the problem (3.37 GB uncompressed and 2.16 GB compressed with bzip2).", "bug_id": 56447, "attachment_id": null, "id": 174802, "time": "2014-04-23T12:55:57Z", "creator": "mskan@dtu.dk", "creation_time": "2014-04-23T12:55:57Z", "tags": [], "is_private": false}, {"count": 7, "tags": [], "text": "Can you try now?\n\nFor an InputStream, you should now get a helpful IllegalArgumentException on a >2gb file, because ByteBuffer has a 2gb limit\n\nFor a File, we ought to be able to go bigger. I've switched a couple of ints to longs, can you see if that helps?", "is_private": false, "id": 174846, "creator": "apache@gagravarr.org", "time": "2014-04-24T16:15:59Z", "bug_id": 56447, "creation_time": "2014-04-24T16:15:59Z", "attachment_id": null}, {"count": 8, "tags": [], "bug_id": 56447, "attachment_id": null, "is_private": false, "id": 174868, "time": "2014-04-25T05:41:59Z", "creator": "mskan@dtu.dk", "creation_time": "2014-04-25T05:41:59Z", "text": "Sure, I can try it. Where do I find the new version? Can you send me a jar file?"}, {"count": 9, "text": "I found the nightly build (poi-3.11-beta1-20140424). It works! Now I can read large data files using File. Thanks for all your help, I really appreciate it!", "bug_id": 56447, "attachment_id": null, "id": 174869, "time": "2014-04-25T06:03:12Z", "creator": "mskan@dtu.dk", "creation_time": "2014-04-25T06:03:12Z", "tags": [], "is_private": false}]