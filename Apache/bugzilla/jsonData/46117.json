[{"count": 0, "tags": [], "bug_id": 46117, "text": "This enhancement request is based on the use case of depending products and re-using property files.\n\nPicture a scenario in which you have product A and product B. Both have property files (A.properties and B.properties):\n\n[A.properties]\nproduct.name=Product A\nproduct.version=1.0.0\nproduct.publish.dir=c:\\publish\\${product.name}\\${product.version}\nproduct.publish.file=${product.publish.dir}/${product.name}.${product.version}.zip\n\n[B.properties]\nproduct.name=Product B\nproduct.version=1.0.1\nproduct.publish.dir=c:\\publish\\${product.name}\\${product.version}\nproduct.publish.file=${product.publish.dir}/${product.name}.${product.version}.zip\n\nNow let's say product B has a dependency on product A. It needs to consume files that are placed in the publish directory of product A.\n\nSo we include the property file of product A and prefix it with \"A\". This means we can have access to the product.publish.dir value using: ${A.product.publish.dir}\n\nThe problem is that ${A.product.publish.dir} uses the ${product.name} and ${product.version}. So in the following scenario:\n\n<property file=\"B.properties\" />\n<property file=\"A.properties\" prefix=\"A\" />\n\nThe value of ${A.product.publish.dir} is actually\n\nc:\\publish\\Product B\\1.0.1\\\n\nIt would be nice if it is possible to also prefix all properties that are used within the property file. This would make the use of the prefix attribute more compelling.\n\nOf course there are workarounds to this situation:\nA) have the prefix by design\nB) copy and manipulate the property file using replace.\n\nTherefore it should be considered as an enhancement.", "id": 121985, "time": "2008-10-29T01:57:29Z", "creator": "remie@backbase.com", "creation_time": "2008-10-29T01:57:29Z", "is_private": false, "attachment_id": null}, {"count": 1, "attachment_id": null, "creator": "bodewig@apache.org", "text": "just offering another workaround: use loadproperties instead of the property task and implement your manipulations as a filter(chain).\n", "id": 121989, "time": "2008-10-29T04:32:31Z", "bug_id": 46117, "creation_time": "2008-10-29T04:32:31Z", "tags": [], "is_private": false}, {"count": 2, "tags": [], "text": "Personally this seems to violate the principle of least surprise.  I would think one would expect \"internal\" substitutions to work properly independently of prefix decoration.  At the same time, when we get this fixed I would expect the change to fall into the \"possibly breaking changes\" section of WHATSNEW.", "attachment_id": null, "id": 121993, "creator": "mbenson@apache.org", "time": "2008-10-29T07:53:02Z", "bug_id": 46117, "creation_time": "2008-10-29T07:53:02Z", "is_private": false}, {"count": 3, "attachment_id": null, "creator": "remie@backbase.com", "text": "I agree that there is a conceptual problem with replacing nested properties. I would see it as an added feature instead of default behavior. \n\nThe suggested workaround of loadproperties with a filterchain would actually work for me. I'm fine with having a default \"property\" task with the least surprise and a more advanced \"loadproperties\" that allows manipulation.\n\nHowever, the workaround of using the loadproperties with a filterchain / replacetokens currently doesn't seem to work for me. The prefixlines works fine, but the replace either doesn't take place, or it takes place after the properties have been resolved and registered (either way not working).\n\nI'm using ant 1.7.0 to test the loadproperties workaround, I will try it with 1.7.1 tomorrow.\n\n\n\n\n", "id": 121994, "time": "2008-10-29T08:01:11Z", "bug_id": 46117, "creation_time": "2008-10-29T08:01:11Z", "tags": [], "is_private": false}, {"count": 4, "tags": [], "bug_id": 46117, "is_private": false, "text": "it looks like this has been fixed in ant 1.8.2 by the introduction of the prefixValues attributes", "id": 139287, "time": "2010-08-20T12:34:02Z", "creator": "owennnn@hotmail.com", "creation_time": "2010-08-20T12:34:02Z", "attachment_id": null}, {"count": 5, "tags": [], "text": "Yes, Owen, you are correct.", "is_private": false, "id": 139301, "creator": "bodewig@apache.org", "time": "2010-08-21T03:57:47Z", "bug_id": 46117, "creation_time": "2010-08-21T03:57:47Z", "attachment_id": null}]