[{"count": 0, "attachment_id": null, "bug_id": 23051, "text": "There is a problem with the apr_file_dup2() function in Windows. I think that \napr_file_dup() has a similar problem. If old_file has an attached mutex, it \nwon't be created in the new file. Therefore attempting to access the file mutex\n(e.g from within apr_file_write()) will cause the application to crash. The \neasiest way to reproduce the problem is to install a copy of apache 2.0.47 and \nthen run it like this:\n\napache -e debug -E temp.log\n\nThis should cause stderr to be redirected to temp.log, but instead of doing \nthis apache crashes with an access violation.\n\n\n\nThe following patch fixes this problem with apr_file_dup2():\n\n---BEGIN-PATCH---\n\n--- httpdw-old/srclib/apr/file_io/win32/filedup.c\t2003-09-09 \n20:07:10.000000000 +0300\n+++ httpdw/srclib/apr/file_io/win32/filedup.c\t2003-09-09 20:36:44.000000000 \n+0300\n@@ -103,6 +103,7 @@\n     HANDLE hproc = GetCurrentProcess();\n     HANDLE newhand = NULL;\n     apr_int32_t newflags;\n+    apr_thread_mutex_t *new_mutex = NULL;\n \n     /* dup2 is not supported literaly with native Windows handles.\n      * We can, however, emulate dup2 for the standard i/o handles,\n@@ -141,10 +142,26 @@\n         newflags = old_file->flags & ~APR_INHERIT;\n     }\n \n+    if (old_file->mutex != NULL) {\n+        apr_status_t rc = apr_thread_mutex_create(&new_mutex,\n+                                                  APR_THREAD_MUTEX_DEFAULT,\n+                                                  new_file->pool);\n+        if (rc != APR_SUCCESS) {\n+            CloseHandle(newhand);\n+            return rc;\n+        }\n+    }\n+\n+\n     if (new_file->filehand && (new_file->filehand != INVALID_HANDLE_VALUE)) {\n         CloseHandle(new_file->filehand);\n     }\n \n+    if (new_file->mutex != NULL) {\n+        apr_thread_mutex_destroy(new_file->mutex);\n+    }\n+\n+    new_file->mutex = new_mutex;\n     new_file->flags = newflags;\n     new_file->filehand = newhand;\n     new_file->fname = apr_pstrdup(new_file->pool, old_file->fname);\n\n\n---END-PATCH---", "id": 43924, "time": "2003-09-10T08:42:23Z", "creator": "emild@cs.technion.ac.il", "creation_time": "2003-09-10T08:42:23Z", "tags": [], "is_private": false}, {"count": 1, "tags": [], "creator": "emild@cs.technion.ac.il", "text": "Created attachment 8122\nPatch for apr_filedup2", "id": 43925, "time": "2003-09-10T08:44:38Z", "bug_id": 23051, "creation_time": "2003-09-10T08:44:38Z", "is_private": false, "attachment_id": 8122}, {"count": 2, "tags": [], "creator": "emild@cs.technion.ac.il", "text": "Created attachment 8123\nPatch for apr_filedup2", "id": 43926, "time": "2003-09-10T08:45:36Z", "bug_id": 23051, "creation_time": "2003-09-10T08:45:36Z", "is_private": false, "attachment_id": 8123}, {"count": 3, "tags": [], "creator": "emild@cs.technion.ac.il", "text": "Created attachment 8124\nPatch for apr_file_dup2() (apr/file_io/os/win32/filedup.c)", "id": 43927, "time": "2003-09-10T08:54:39Z", "bug_id": 23051, "creation_time": "2003-09-10T08:54:39Z", "is_private": false, "attachment_id": 8124}, {"count": 4, "tags": [], "bug_id": 23051, "text": "Sorry for the multiple attachments. My browser froze while I was trying to \nsubmit them . They are all supposed to be the same.", "id": 43931, "time": "2003-09-10T09:10:38Z", "creator": "emild@cs.technion.ac.il", "creation_time": "2003-09-10T09:10:38Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "creator": "jorton@redhat.com", "text": "*** Bug 23055 has been marked as a duplicate of this bug. ***", "id": 58699, "time": "2004-06-03T23:56:14Z", "bug_id": 23051, "creation_time": "2004-06-03T23:56:14Z", "is_private": false, "attachment_id": null}, {"count": 6, "attachment_id": null, "bug_id": 23051, "text": "This was fixed with a slightly different implementation;\n\nRevision 65350  - (view) (download) (as text) - [select for diffs]\nModified Fri Sep 24 23:18:06 2004 UTC (16 months, 2 weeks ago) by stas \n\n  http://svn.apache.org/viewcvs.cgi?rev=65350&view=rev\n\nfix apr_file_dup and apr_file_dup2 win32 implementations to create a mutex\n\nIn the alternate implementation - the existing mutex is properly retained\nuntil the source file is closed.\n", "id": 85716, "time": "2006-02-11T22:14:10Z", "creator": "wrowe@apache.org", "creation_time": "2006-02-11T22:14:10Z", "tags": [], "is_private": false}]