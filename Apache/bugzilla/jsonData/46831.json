[{"count": 0, "tags": [], "text": "I have HTTP response data that contains a text:\n-----------\n...\nEmail Address:<br>\n<input name=\"tbRegisterEmailAddress\" value=\"qatest1\" size=\"8\"/>\n            @<select name=\"RegisterValidEmailGroup$ctl00$drpEmails\" id=\"RegisterValidEmailGroup_ctl00_drpEmails\">\n...\n-----------\n(...) means that something is above and below.\n\nI'm using \"Response Assertion\" for verifying this text with \"Contains\" rule.\n\nRA-1) using of \"Pattern to test\" as\n----\n(?s)Email Address:<br>(.*)\n<input name=\"tbRegisterEmailAddress\" value=\"${ID}\" size=\"8\"/>(.*)\n----\nworks OK, where ${ID} is data from csv config file and ${ID}=\"qatest1\" (without quotes) and \"Debug\" sample has confirmed it;\n\nRA-2) using of \"Pattern to test\" as\n----\n(?s)Email Address:<br>(.*)\n<input name=\"tbRegisterEmailAddress\" value=\"qatest1\" size=\"8\"/>(.*)\n            @<select name=\"RegisterValidEmailGroup\\$ctl00\\$drpEmails\" id=\"RegisterValidEmailGroup_ctl00_drpEmails\">(.*)\n----\nworks OK, where \"qatest1\" is defined as a literal;\n\nRA-3) using of \"Pattern to test\" as\n----\n(?s)Email Address:<br>(.*)\n<input name=\"tbRegisterEmailAddress\" value=\"${ID}\" size=\"8\"/>(.*)\n            @<select name=\"RegisterValidEmailGroup\\$ctl00\\$drpEmails\" id=\"RegisterValidEmailGroup_ctl00_drpEmails\">(.*)\n----\nFAILED, where ${ID}=\"qatest1\" from csv config file and \"Debug\" sample has confirmed it;\n\nWhat is wrong?\nYou can simplify response - the idea is if response data has \"$\" character(s) in the text - using ${VAR} as jmeter variable will not work (in my case ${VAR} comes before a text with \"$\")", "attachment_id": null, "id": 125474, "creator": "slavko_h@yahoo.com", "time": "2009-03-10T18:11:10Z", "bug_id": 46831, "creation_time": "2009-03-10T18:11:10Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 46831, "attachment_id": null, "id": 125475, "time": "2009-03-10T19:35:37Z", "creator": "sebb@apache.org", "creation_time": "2009-03-10T19:35:37Z", "is_private": false, "text": "Could you create a simple test plan and attach it please?\n\nUse the Java Request sampler to generate the response data, and define the variables on the test plan.\n\nI suspect the problem may be one of spurious spaces; these are best dealt with by an actual example."}, {"count": 2, "tags": [], "text": "So, Sebb\nI've attached a simple TestPlan with using Java sample.\nThe issue has a place there as well.", "attachment_id": null, "bug_id": 46831, "id": 125490, "time": "2009-03-11T10:52:33Z", "creator": "slavko_h@yahoo.com", "creation_time": "2009-03-11T10:52:33Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 46831, "attachment_id": 23370, "is_private": false, "id": 125491, "time": "2009-03-11T10:53:33Z", "creator": "slavko_h@yahoo.com", "creation_time": "2009-03-11T10:53:33Z", "text": "Created attachment 23370\ntestPlan"}, {"count": 4, "tags": [], "creator": "sebb@apache.org", "is_private": false, "text": "Looks like the variable processing is messing with the '\\$' in the string - if you look carefully at the assertion error message you should see that the '\\' has been stripped from before the '$'.\n\nIf you change the non-variable version so it fails, you should see that the '\\$' is preserved.\n\nThis is obviously a bug.\n\nOne work-round is to replace '\\$' with '.', but this will allow other characters aprt from $.\n\nAnother is to replace it with '\\\\$' - however this will probably stop working when the bug is fixed.\n\nA third is to use two REs, one with the ${ID} part and another with the rest, but this will not check the order in which the parts appear.\n\nOr you put '\\$' in a variable and use that.\n\nBy the way, there is no point in putting '(.*)' at the end of a contains check.", "id": 125492, "time": "2009-03-11T11:25:03Z", "bug_id": 46831, "creation_time": "2009-03-11T11:25:03Z", "attachment_id": null}, {"count": 5, "tags": [], "text": "Thank Sebb for explanation in details, neither ways will not work for me.\nSo, I will wait for a fix.\nAs you probably recognized that that response is from .NET (.NEt uses \"$\" as part of id-names) - so it is pretty severe issue - marked as \"critical\".", "attachment_id": null, "id": 125495, "creator": "slavko_h@yahoo.com", "time": "2009-03-11T13:58:55Z", "bug_id": 46831, "creation_time": "2009-03-11T13:58:55Z", "is_private": false}, {"count": 6, "tags": [], "text": "(In reply to comment #5)\n> Thank Sebb for explanation in details, neither ways will not work for me.\n\nWhy not?\n\n> So, I will wait for a fix.\n> As you probably recognized that that response is from .NET (.NEt uses \"$\" as\n> part of id-names) - so it is pretty severe issue - marked as \"critical\".\n\nThis is not a critical issue, because there are several work-rounds.", "attachment_id": null, "id": 125496, "creator": "sebb@apache.org", "time": "2009-03-11T14:20:24Z", "bug_id": 46831, "creation_time": "2009-03-11T14:20:24Z", "is_private": false}, {"count": 7, "tags": [], "text": "It's just not possible to fix this now without breaking existing tests.\n\nAny existing tests using functions which require \\$ as part of one of their parameters - e.g. the regexFunction - would need to be recoded.\n\nHowever, the documentation will be updated to describe how to reference such variables.", "attachment_id": null, "bug_id": 46831, "id": 126852, "time": "2009-05-07T06:22:29Z", "creator": "sebb@apache.org", "creation_time": "2009-05-07T06:22:29Z", "is_private": false}, {"count": 8, "tags": [], "text": "Hi Sebb,\n\nWhat about to come back to the issue to fix it?", "attachment_id": null, "id": 151084, "creator": "slavko_h@yahoo.com", "time": "2011-10-31T16:47:53Z", "bug_id": 46831, "creation_time": "2011-10-31T16:47:53Z", "is_private": false}, {"count": 9, "tags": [], "bug_id": 46831, "attachment_id": null, "id": 196418, "time": "2017-01-25T20:02:25Z", "creator": "p.mouawad@ubik-ingenierie.com", "creation_time": "2017-01-25T20:02:25Z", "is_private": false, "text": "It does not seem possible to fix this minor bug without breaking a lot of tests.\nClosing as WONTFIX"}]