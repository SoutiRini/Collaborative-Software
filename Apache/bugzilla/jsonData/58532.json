[{"count": 0, "tags": [], "creator": "apache@gagravarr.org", "is_private": false, "id": 185916, "attachment_id": 33206, "bug_id": 58532, "creation_time": "2015-10-24T21:39:25Z", "time": "2015-10-24T21:39:25Z", "text": "Created attachment 33206\nExample spreadsheet showing the formats and their effects\n\nOne of our business users has tried using formats such as these in a spreadsheet:\n\n[>999999]#,,\"M\";[>999]#,\"K\";#\n[>999999]#.000,,\"M\";[>999]#.000,\"K\";#.000\n\nThe former turns a value like 1021021.02 into 1M, the latter into 1.021M\n\nWhen using DataFormatter, these patterns aren't recognised, and no formatting is currently done. We should add support for these"}, {"count": 1, "attachment_id": null, "creator": "apache@gagravarr.org", "is_private": false, "id": 185918, "time": "2015-10-25T00:02:01Z", "bug_id": 58532, "creation_time": "2015-10-25T00:02:01Z", "tags": [], "text": "As of r1710407 these are now supported by DataFormatter. This is implemented by calling out to CellFormat in these kind of cases, as CellFormat already had most of the support for it\n\nAt some point we need to stop having two different sets of format code, but for now, this works, and also lets us enable some more DataFormatter test cases that were commented out"}, {"count": 2, "tags": [], "bug_id": 58532, "attachment_id": null, "text": "DataFormatter was fixed in r1710399.", "id": 190587, "time": "2016-04-26T23:18:44Z", "creator": "onealj@apache.org", "creation_time": "2016-04-26T23:18:44Z", "is_private": false}]