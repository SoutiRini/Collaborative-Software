[{"count": 0, "tags": [], "bug_id": 57830, "attachment_id": null, "text": "When using TCP load balancing to avoid terminating HTTPS at a load balancer, there are few options for passing client information to the backend server from the load balancer.\n\nAWS uses ProxyProtocol (http://www.haproxy.org/download/1.5/doc/proxy-protocol.txt) as the mechanism to pass client information to servers behind a load balancer. http://docs.aws.amazon.com/ElasticLoadBalancing/latest/DeveloperGuide/enable-proxy-protocol.html\n\nWhen ProxyProtocol is enabled for TCP load balancing over HTTPS, Tomcat cannot serve the request.", "id": 182473, "time": "2015-04-18T19:58:50Z", "creator": "frank.kline@gmail.com", "creation_time": "2015-04-18T19:58:50Z", "is_private": false}, {"text": "Moving this to an enhancement request.\n\nI can see the benefit of this but is would be non-trivial to implement - particularly for HTTPS.\n\nFor NIO and NIO2 (and much like SNI support) it would require the server to process some data before passing it to the SSL engine. Unlike SNI, the data would not be left in the bufffer for the SSL engine to process.\n\nAPR/native needs further investigation to determine what changes would be required to implement this.", "tags": [], "bug_id": 57830, "attachment_id": null, "count": 1, "id": 182484, "time": "2015-04-19T07:52:29Z", "creator": "markt@apache.org", "creation_time": "2015-04-19T07:52:29Z", "is_private": false}, {"count": 2, "tags": [], "creator": "chris@christopherschultz.net", "attachment_id": null, "id": 182486, "time": "2015-04-19T13:17:57Z", "bug_id": 57830, "creation_time": "2015-04-19T13:17:57Z", "is_private": false, "text": "+1 to adding this enhancement.\n\nWithout this feature, AWS ELB won't send anything about an ELB-terminated TLS connection through to the server except for the protocol (e.g. TLSv1) and the remote client's IP address. That means you can't do client certificates, further-validate cipher strength, etc.\n\nAs for the difference between the recently-added SNI code, is it not possible to read a block of data and then discard some of it (after taking-out the relevant data, of course) before passing it down the chain to the SSL handshake processor?"}, {"count": 3, "tags": [], "creator": "billbarker@apache.org", "is_private": false, "id": 182491, "attachment_id": null, "bug_id": 57830, "creation_time": "2015-04-19T21:48:58Z", "time": "2015-04-19T21:48:58Z", "text": "(In reply to Mark Thomas from comment #1)\n> Moving this to an enhancement request.\n> \n> I can see the benefit of this but is would be non-trivial to implement -\n> particularly for HTTPS.\n> \n> For NIO and NIO2 (and much like SNI support) it would require the server to\n> process some data before passing it to the SSL engine. Unlike SNI, the data\n> would not be left in the bufffer for the SSL engine to process.\n> \n> APR/native needs further investigation to determine what changes would be\n> required to implement this.\n\nMy reading of the ProxyProtocol spec linked above states that it is agnostic to the transport protocol between the proxy server and the receiver. Otherwise it can't work if you are using SSH tunneling which is one of the target configurations. That means that the \"PROXY ...\" line is encrypted over SSL/TSL just like everything else in the payload.  This in turn means that all of the code that is required to support this comes at the point of reading the initial request line and no special handling is required for SSL/TSL.\n\nIt would be a huge security hole if the proxy was allowed to inject a plain text (for version 1) payload in front of the encrypted payload. Both of them would have to be encrypted if you are using an encrypted connection between the proxy and the receiver."}, {"count": 4, "attachment_id": null, "creator": "chris@christopherschultz.net", "text": "(In reply to Bill Barker from comment #3)\n> That means that the \"PROXY ...\" line is encrypted\n> over SSL/TSL just like everything else in the payload.  This in turn means\n> that all of the code that is required to support this comes at the point of\n> reading the initial request line and no special handling is required for\n> SSL/TSL.\n\nThat's not my reading of this spec. The proxy prepends the header information to the front of whatever the client is sending. The fact that the original connection is encrypted is irrelevant. The PROXY protocol allows anything to be tunneled, including non-encrypted configurations.\n\n> It would be a huge security hole if the proxy was allowed to inject a plain\n> text (for version 1) payload in front of the encrypted payload.\n\nWhy?\n\n> Both of them would have to be encrypted if you are using an encrypted\n> connection between the proxy and the receiver.\n\nThere is no requirement to encrypt the traffic between the proxy and the receiver.", "id": 182497, "time": "2015-04-20T13:55:37Z", "bug_id": 57830, "creation_time": "2015-04-20T13:55:37Z", "tags": [], "is_private": false}, {"count": 5, "tags": [], "bug_id": 57830, "attachment_id": null, "text": "Ok, so I miss read the spec.  After reading the spec again, I have lost all interest in this issue.", "id": 182520, "time": "2015-04-21T07:09:02Z", "creator": "billbarker@apache.org", "creation_time": "2015-04-21T07:09:02Z", "is_private": false}, {"count": 6, "tags": [], "creator": "chris@christopherschultz.net", "is_private": false, "id": 182663, "attachment_id": null, "bug_id": 57830, "creation_time": "2015-04-27T16:02:47Z", "time": "2015-04-27T16:02:47Z", "text": "(In reply to Bill Barker from comment #5)\n> Ok, so I miss read the spec.  After reading the spec again, I have lost all\n> interest in this issue.\n\nI'm curious: does this simply not interest you, or do you actively think this is a bad idea, in general, or a bad idea to implement in Tomcat?"}, {"count": 7, "tags": [], "text": "(In reply to Christopher Schultz from comment #6)\n> (In reply to Bill Barker from comment #5)\n> > Ok, so I miss read the spec.  After reading the spec again, I have lost all\n> > interest in this issue.\n> \n> I'm curious: does this simply not interest you, or do you actively think\n> this is a bad idea, in general, or a bad idea to implement in Tomcat?\n\nIt just doesn't interest me to support such low-grade proxy servers. Other then that they are popular on a certain well-known hosting site, it doesn't seem worth my effort. \n\nIf I thought it was a bad idea then I would have expressed a vote. But if this is an itch that somebody wants to scratch, by all means scratch away :).\n\nI haven't been able to see how to theoretically break this if it is implemented properly according to the spec, as long as you also have a competent network admin (which presumably applies to the above-mentioned well-known hosting site). If I can sit as man-in-the-middle before the proxy and inject my own \"PROXY ...\" line, then Tomcat gets two such lines (assuming the proxy is working properly) and mine is rejected just like Tomcat does now.", "attachment_id": null, "bug_id": 57830, "id": 182675, "time": "2015-04-28T04:10:46Z", "creator": "billbarker@apache.org", "creation_time": "2015-04-28T04:10:46Z", "is_private": false}, {"text": "+1", "tags": [], "bug_id": 57830, "attachment_id": null, "count": 8, "id": 188687, "time": "2016-02-22T18:07:44Z", "creator": "axel@boxfuse.com", "creation_time": "2016-02-22T18:07:44Z", "is_private": false}, {"count": 9, "tags": [], "bug_id": 57830, "attachment_id": null, "text": "I think Daniel Ruggeri did some work on this. He's been waiting for some feedback from me. Maybe I should get on that!", "id": 188695, "time": "2016-02-22T23:49:52Z", "creator": "chris@christopherschultz.net", "creation_time": "2016-02-22T23:49:52Z", "is_private": false}, {"count": 10, "tags": [], "bug_id": 57830, "text": "Whoops, sorry. I confused this with a similar httpd enhancement request. Please ignore comment #9 (and this one, too).", "id": 188727, "time": "2016-02-23T17:51:45Z", "creator": "chris@christopherschultz.net", "creation_time": "2016-02-23T17:51:45Z", "is_private": false, "attachment_id": null}, {"count": 11, "tags": [], "creator": "kycrow32@gmail.com", "text": "Created attachment 33738\nSVN patch, source code, and jar file\n\n+1\n\nAlso....\n\nI've attached a zip file containing:\ntomcat-coyote-pp-src.zip (a maven project extending tomcat-coyote.jar)\ntomcat-coyote-pp.patch   (an SVN patch for tomcat-coyote's source)\ntomcat-coyote-pp.jar     (the jar built from tomcat-coyote-pp-src)\n\nThis extension is based on tomcat-coyote.jar version 8.0.32, but applying the changes to 8.0.33 works as well.  It enables support for human readable Proxy Protocol (according to the spec at http://www.haproxy.org/download/1.5/doc/proxy-protocol.txt) in the Http11NioProtocol connector.\n\nSimply add 'proxyProtocol=\"off|on|optional\"' to server.xml, eg:\n<Connector port=\"8443\" protocol=\"org.apache.coyote.http11.Http11NioProtocol\" proxyProtocol=\"optional\" />\n\nThis will cause the connector to add two attributes to an incoming request:\n\"ProxyProtocolInfo\" -> org.apache.tomcat.util.net.ProxyProtocolInfo   a class that contains the source and destination addresses and ports extracted from the proxy protocol header\n\"ProxyProtocolSourceAddress\" -> String containing the source IP address\n\n\n\nI've tested this using our own deployment+webapps+integration tests, and it appears to work.  I'd love to see this (or any other support) added to tomcat.  If anyone on the apache team wants to look at this, I'm receptive to feedback, criticism, further instructions, and hate mail.\n\nThis is an extension to tomcat code, so it is licensed under the Apache License v2.0.  If you feel like using this jar provided by \"some guy on the internet\", feel free :)", "id": 190062, "time": "2016-04-07T21:15:01Z", "bug_id": 57830, "creation_time": "2016-04-07T21:15:01Z", "is_private": false, "attachment_id": 33738}, {"count": 12, "tags": [], "bug_id": 57830, "text": "Awesome. I should be able to do some testing using Amazon ELB, which I expect was the impetus for this work.", "id": 190063, "time": "2016-04-07T21:40:04Z", "creator": "chris@christopherschultz.net", "creation_time": "2016-04-07T21:40:04Z", "is_private": false, "attachment_id": null}, {"count": 13, "tags": [], "creator": "chris@christopherschultz.net", "attachment_id": null, "id": 193439, "time": "2016-08-31T16:02:36Z", "bug_id": 57830, "creation_time": "2016-08-31T16:02:36Z", "is_private": false, "text": "Since I'm working with Daniel Ruggeri @ httpd, I've got an AWS lb set up for testing. I should be able to apply your patch and test it... soon. Sorry for the delay on this. Lots to do at $work."}, {"count": 14, "tags": [], "creator": "icicimov@gmail.com", "attachment_id": null, "id": 195673, "time": "2016-12-28T04:22:20Z", "bug_id": 57830, "creation_time": "2016-12-28T04:22:20Z", "is_private": false, "text": "Hi,\n\nJust wonder about the status on this?\n\nThanks,\nIgor"}, {"count": 15, "attachment_id": null, "creator": "chris@christopherschultz.net", "text": "My work on this stalled while I worked with Dan @ httpd on his patches. Ironically, as he was trying to merge his patch set, he discovered that someone else had built the same capabilities and committed them a few hours earlier :(\n\nSo I'm going to get back involved, here, first working with httpd and then it should be easy to validate that the Tomcat patch is working as well.", "id": 195683, "time": "2016-12-28T13:29:46Z", "bug_id": 57830, "creation_time": "2016-12-28T13:29:46Z", "tags": [], "is_private": false}, {"count": 16, "tags": [], "bug_id": 57830, "attachment_id": null, "text": "Is there an update on adding PROXY protocol support?", "id": 197519, "time": "2017-03-08T03:46:35Z", "creator": "ulrich.axel@gmail.com", "creation_time": "2017-03-08T03:46:35Z", "is_private": false}, {"count": 17, "tags": [], "bug_id": 57830, "attachment_id": null, "id": 198244, "time": "2017-04-11T20:41:54Z", "creator": "rwoerner@control4.com", "creation_time": "2017-04-11T20:41:54Z", "is_private": false, "text": "Would it make sense to create a new protocol object either containing or derived from Http11NioProtocol (e.g. ProxyHttp11NioProtocol)?  That would avoid put the proxy protocol code in a class by itself.  I have no idea if this would, work for all configurations."}, {"count": 18, "tags": [], "creator": "chris@christopherschultz.net", "text": "The PROXY protocol should be \"easy\" to roll into an existing class: just have a look at the first few bytes of a request to see if it's got a valid \"PROXY\" command in there. If so, validate the source IP (the proxy), set all of the source IP information (the client's actual IP, port, etc.), and consume the \"PROXY\" command so that the following code just sees the raw request.\n\nI'm not familiar enough with the channel-unwrapping internals of Tomcat to know how best to implement it in the current pipeline. The best I would be able to do is validate that the patch actually works. Which I have not yet done :(", "id": 198270, "time": "2017-04-12T16:20:11Z", "bug_id": 57830, "creation_time": "2017-04-12T16:20:11Z", "is_private": false, "attachment_id": null}, {"count": 19, "tags": [], "creator": "kycrow32@gmail.com", "attachment_id": 35535, "id": 202204, "time": "2017-11-17T14:21:53Z", "bug_id": 57830, "creation_time": "2017-11-17T14:21:53Z", "is_private": false, "text": "Created attachment 35535\nSource and JAR for proxy protocol support for 8.5.23\n\nI've attached a new tomcat-coyote jar, with source code, that supports proxy protocol in tomcat 8.5.23.  Test/use/ignore as you like.\n\n(And yes, this work was done for support with AWS ELB.)"}]