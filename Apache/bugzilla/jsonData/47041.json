[{"count": 0, "tags": [], "text": "Created attachment 23502\ntest files\n\nHi,\n\nI am getting the following run time excception while crting a worksheet using XSSFWorkbook class: \n\nI have written the 2 test cases to create the same error.t I am using removesheetAt(0) method of Workbook Interface (SS Model).\n\nI am doing the same testing with HSSFWorkbook, and this is working as per my requirment.\n\nBut same test case is not working with XSSFWorkbook. I have attached the test code please have a look of this error.\n\n1>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Test Case - FAIL\npublic void testImportMacroXLSM() throws Exception {\n                  String filename = \"C:\\\\poi-src-3.5-beta5-20090219\\\\poi-3.5-beta5\\\\test.xlsm\";\n                  InputStream macro = new FileInputStream(filename);\n                    String file = \"test1.xlsm\";\n                  //POIFSFileSystem poiFileStream = new POIFSFileSystem(macro);\n                  Workbook _workBook = new XSSFWorkbook(Package.open(macro));\n                  _workBook.removeSheetAt(0);\n                  _workBook.createSheet(\"1. test2\").createRow(1).createCell(1).setCellValue(\"test\");\n                    FileOutputStream out = new FileOutputStream(\"c:/\"+file);\n                    _workBook.write(out);\n                         out.close();\n                 \n                 }\n2>>>>>>>>>>>>>>>>>>>>>>>>>>Test Case - PASS\n                 public void testImportMacroXLS() throws Exception {\n                  String filename = \"C:\\\\poi-src-3.5-beta5-20090219\\\\poi-3.5-beta5\\\\test.xls\";\n                  InputStream macro = new FileInputStream(filename);\n                    String file = \"test1.xls\";\n                  //POIFSFileSystem poiFileStream = new POIFSFileSystem(macro);\n                  Workbook _workBook = new HSSFWorkbook(macro);\n                  _workBook.removeSheetAt(0);\n                  _workBook.createSheet(\"1. test2\").createRow(1).createCell(1).setCellValue(\"test\");\n                    FileOutputStream out = new FileOutputStream(\"c:/\"+file);\n                    _workBook.write(out);\n                         out.close();\n                 \n                 }\n3>>>>>>>>>>>>>>>>Test case - FAIL\n\n\n        public void testImportMacroXLSM() throws Exception {\n                String filename = \"C:\\\\poi-src-3.5-beta5-20090219\\\\poi-3.5-beta5\\\\test.xlsx\";\n                InputStream macro = new FileInputStream(filename);\n                  String file = \"test1.xlsx\";\n                //POIFSFileSystem poiFileStream = new POIFSFileSystem(macro);\n                Workbook _workBook = new XSSFWorkbook(Package.open(macro));\n                _workBook.removeSheetAt(0);\n                _workBook.createSheet(\"1. test2\").createRow(1).createCell(1).setCellValue(\"test\");\n                  FileOutputStream out = new FileOutputStream(\"c:/\"+file);\n                  _workBook.write(out);\n                out.close();\n                       \n        } \n\nOn running the 1st and 3rd test case I am getting the following exception :\n\n=======================\n\norg.apache.poi.POIXMLException: org.apache.poi.openxml4j.exceptions.InvalidOperationException: A part with the name '/xl/worksheets/sheet1.xml' already exists : Packages shall not contain equivalent part names and package implementers shall neither create nor recognize packages with equivalent part names. [M1.12]\n                 at org.apache.poi.POIXMLDocumentPart.createRelationship(POIXMLDocumentPart.java:216)\n                 at org.apache.poi.POIXMLDocumentPart.createRelationship(POIXMLDocumentPart.java:189)\n                 at org.apache.poi.xssf.usermodel.XSSFWorkbook.createSheet(XSSFWorkbook.java:467)\n                 at org.apache.poi.xssf.usermodel.XSSFWorkbook.createSheet(XSSFWorkbook.java:1)\n                 at org.apache.poi.hssf.extractor.TestExcelExtractor.testImportMacro(TestExcelExtractor.java:254)\n                 at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n                 at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)\n                 at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)\n                 at java.lang.reflect.Method.invoke(Unknown Source)\n                 at junit.framework.TestCase.runTest(TestCase.java:154)\n                 at junit.framework.TestCase.runBare(TestCase.java:127)\n                 at junit.framework.TestResult$1.protect(TestResult.java:106)\n                 at junit.framework.TestResult.runProtected(TestResult.java:124)\n                 at junit.framework.TestResult.run(TestResult.java:109)\n                 at junit.framework.TestCase.run(TestCase.java:118)\n                 at junit.framework.TestSuite.runTest(TestSuite.java:208)\n                 at junit.framework.TestSuite.run(TestSuite.java:203)\n                 at org.eclipse.jdt.internal.junit.runner.junit3.JUnit3TestReference.run(JUnit3TestReference.java:130)\n                 at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)\n                 at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:460)\n                 at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:673)\n                 at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:386)\n                 at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:196)\nCaused by: org.apache.poi.openxml4j.exceptions.InvalidOperationException: A part with the name '/xl/worksheets/sheet1.xml' already exists : Packages shall not contain equivalent part names and package implementers shall neither create nor recognize packages with equivalent part names. [M1.12]\n                 at org.apache.poi.openxml4j.opc.Package.createPart(Package.java:692)\n                 at org.apache.poi.openxml4j.opc.Package.createPart(Package.java:656)\n                 at org.apache.poi.POIXMLDocumentPart.createRelationship(POIXMLDocumentPart.java:208)\n                 ... 22 more\n\n\n=============================test.zip\n\nI have written the test case in TestExcelExtractor.java file. and I am using the latest jar files which i have downloaded from http://encore.torchbox.com/poi-svn-build/\n\nOne More thing to add:\n\nBoth the input workbook must contain only one sheet.\n\nPlease add the test cases in  TestExcelExtractor.java and test again.\n\nPlease let me know if anything else is required.\n\nRegards\nNaveen", "is_private": false, "id": 126316, "creation_time": "2009-04-16T22:43:45Z", "time": "2009-04-16T22:43:45Z", "creator": "kumar.naveen@in.ibm.com", "bug_id": 47041, "attachment_id": 23502}, {"count": 1, "tags": [], "text": "Your sample code works fin with the latest trunk.\nCheck the classpath. You seems to be using an old version of POI. \n\nSee what the following statement prints:        \nSystem.out.println(XSSFWorkbook.class.getClassLoader().getResource(\"org/apache/poi/xssf/usermodel/XSSFWorkbook.class\"));\n\nYegor", "is_private": false, "id": 126337, "creation_time": "2009-04-17T09:47:55Z", "time": "2009-04-17T09:47:55Z", "creator": "yegor@dinom.ru", "bug_id": 47041, "attachment_id": null}]