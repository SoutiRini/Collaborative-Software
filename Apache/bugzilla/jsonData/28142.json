[{"count": 0, "tags": [], "text": "I would like to change the -X maxerrs option on the javac compiler.  I can't \nfigure out a way to add the attribute for this option in Ant.\n\nI have a target that looks like this:\n\n<target name=\"jxntm.compile\" depends=\"prepare\">\n        <javac -Xmaxerrs 950 srcdir=\"${srcdir}\" destdir=\"${build.classes}\" \nclasspathref=\"javac.classpath\" includes=\"com/jenzabar/**/**.java\"/>   \n        <copy flatten=\"true\" todir=\"${build.classes}\">\n\t   \t<fileset dir=\"${srcdir}\">\n\t     \t<include name=\"**/*.properties\"/>\n        </fileset>\n\t</copy>\n    </target>\n\nWhen I take out the -Xmaxerrs 950 (on line 2 of my example) I compile but my \ncompile stops at 100 errors (the default).  I'd like to override the default \nso that the compiler stops when it counts 950 errors (or even more!).  How do \nI code the -X maxerrs param?\n\nIf I go to the command line and type:\njavac -Xmaxerrs 950 *.java \nthis works just fine.", "attachment_id": null, "bug_id": 28142, "id": 55111, "time": "2004-04-01T21:25:37Z", "creator": "lucille.wilson@jenzabar.net", "creation_time": "2004-04-01T21:25:37Z", "is_private": false}, {"count": 1, "tags": [], "creator": "mbenson@apache.org", "attachment_id": null, "id": 55112, "creation_time": "2004-04-01T21:38:41Z", "time": "2004-04-01T21:38:41Z", "bug_id": 28142, "text": "Due to the ever-changing nature of compiler arguments, in addition to the \ndubious use of non-standard \"-X\" options, there is a ready workaround.  See the \nnested <compilerarg> element of the <javac> task.", "is_private": false}, {"count": 2, "tags": [], "bug_id": 28142, "text": "\nthe compilerarg element in a javac task has no effect. see below.\nI cannot run the command line because arg list is too long.\nThanks.\n\n<javac debug=\"${compile.debug}\"\n               deprecation=\"${compile.deprecation}\"\n               destdir=\"${build.home}/WEB_INF/classes\"\n               optimize=\"${compile.optimize}\"\n               srcdir=\"src\" verbose=\"${compile.verbose}\">\n            <compilerarg value=\"-Xmaxerrs 1000\"/>\n            <classpath refid=\"compile.classpath\"/>\n       </javac>\n", "id": 84810, "time": "2006-01-20T10:50:32Z", "creator": "jycherbonnier@paradigmgeo.com", "creation_time": "2006-01-20T10:50:32Z", "is_private": false, "attachment_id": null}, {"count": 3, "attachment_id": null, "bug_id": 28142, "text": "(In reply to comment #2)\n> the compilerarg element in a javac task has no effect. see below.\n> I cannot run the command line because arg list is too long.\n> Thanks.\n\nWhat exactly makes you say the \"arg list is too long\"?\n", "id": 84818, "time": "2006-01-20T15:04:51Z", "creator": "mbenson@apache.org", "creation_time": "2006-01-20T15:04:51Z", "tags": [], "is_private": false}, {"count": 4, "attachment_id": null, "bug_id": 28142, "text": "Should it be <compilerarg line=\"-Xmaxerrs 1000\"/> ? \"value\" attribute is for a\nsingle argument, but you are passing two arguments together. Another possibility\nis to put two <compilerarg value=\"...\"/> elements, but it is important only if\nyou have spaces in the arguments.", "id": 84826, "time": "2006-01-20T18:30:46Z", "creator": "alexeys@inventigo.com", "creation_time": "2006-01-20T18:30:46Z", "tags": [], "is_private": false}, {"count": 5, "tags": [], "bug_id": 28142, "text": "(In reply to comment #3)\n> (In reply to comment #2)\n> > the compilerarg element in a javac task has no effect. see below.\n> > I cannot run the command line because arg list is too long.\n> > Thanks.\n> \n> What exactly makes you say the \"arg list is too long\"?\n> \n\nif I run \"javac */*/*.java\", it says arg list is too long, but this is a system\nproblem, not an ant problem. \nIn fact, it hasn't \"no effect\", but it sends the help stack (as if javac doesn't\nunderstand the option) - see the next message - Thks", "id": 84882, "attachment_id": null, "creator": "jycherbonnier@paradigmgeo.com", "creation_time": "2006-01-23T10:26:17Z", "time": "2006-01-23T10:26:17Z", "is_private": false}, {"count": 6, "tags": [], "bug_id": 28142, "attachment_id": null, "id": 84883, "time": "2006-01-23T10:36:34Z", "creator": "jycherbonnier@paradigmgeo.com", "creation_time": "2006-01-23T10:36:34Z", "is_private": false, "text": "(In reply to comment #4)\n> Should it be <compilerarg line=\"-Xmaxerrs 1000\"/> ? \"value\" attribute is for a\n> single argument, but you are passing two arguments together. Another possibility\n> is to put two <compilerarg value=\"...\"/> elements, but it is important only if\n> you have spaces in the arguments.\n\nYep, it seems to be a problem of blanks, because if I put the \"-Xswitchcheck\" it\nruns well.So, I put the args on two lines now :\n <compilerarg value=\"-Xmaxerrs\"/>\n <compilerarg value=\"1000\"/>\n\nAnd it works !!! (a bit strange however) - Thanks to all.\nI let you guys change the status of the bug.\n\n"}, {"count": 7, "tags": [], "text": "marking as invalid <arg value> params are single arguments. Ant does not build\nup a command line string to send to the shell, it builds up an array of\narguments to hand off to exec. Even if there is spaces or quotes in a value, it\nis still one argument. ", "attachment_id": null, "id": 84884, "creator": "stevel@apache.org", "time": "2006-01-23T10:56:59Z", "bug_id": 28142, "creation_time": "2006-01-23T10:56:59Z", "is_private": false}]