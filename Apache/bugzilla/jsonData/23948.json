[{"count": 0, "tags": [], "creator": "jemiller@uchicago.edu", "attachment_id": null, "id": 45941, "time": "2003-10-20T17:29:11Z", "bug_id": 23948, "creation_time": "2003-10-20T17:29:11Z", "is_private": false, "text": "I found that HTTP uploads are very slow when using Tomcat on Solaris and \nInternet Explorer on Windows. I tested with Tomcat 5.0.12, J2SE 1.4.2_01, \nSolaris 8 with a recent patch cluster installed, Internet Explorer 6 on \nWindows XP and Windows 2000 with Windows updates applied. The test was \nperformed using a 100 Mbs Ethernet network. Internet Explorer consistently \nonly uploads at about 80 KBs. The problem seems to be specific to Internet \nExplorer. Mozilla 1.5 can upload at about 3 MBs. The problem also seems to be \nspecific to Solaris. I tested with the same version of Tomcat and J2SE on \nLinux and the problem didn't occur. Internet Explorer was able to upload at \nover 4 MBs to my Linux computer. I also tested with a local copy of Tomcat on \nmy Windows computer and the problem didn't occur there either. I also tested \nwith Tomcat 4.1.24 and the problem occurred there as well.\n\nAlso, I have a Perl application on another Solaris computer which is able to \nperform HTTP uploads without a problem. So, the problem seems to be a \ncombination of Solaris, Tomcat, and Internet Explorer.\n\nThe following is the application that I used to test the problem. The \napplication doesn't actually decode the HTTP upload, only reads from the \nstream, so, the problem seems to be with the network code. Could it be a \nbuffer size issue?\n\nI've noticed other odd things as well. For example I found that Mozilla \nactually gets better data transfer rates using HTTPS rather than HTTP.\n\nimport java.io.*;\nimport java.util.*;\nimport javax.servlet.*;\nimport javax.servlet.http.*;\n\npublic class FileUpload3 extends HttpServlet {\n\tpublic void doGet(HttpServletRequest req, HttpServletResponse resp) \nthrows IOException {\n\t\ttry {\n\t\t\tresp.setContentType(\"text/html\");\n\t\t\tPrintWriter pw = resp.getWriter();\n\t\t\tpw.println(\"<!DOCTYPE html PUBLIC \\\"-//W3C//DTD XHTML \n1.0 Transitional//EN\\\" \\\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-\ntransitional.dtd\\\"><?xml version=\\\"1.0\\\" encoding=\\\"ISO-8859-1\\\"?>\");\n\t\t\tpw.println(\"<html><head><title>File \nUpload</title></head><body>\");\n\t\t\tpw.println(\"<form action=\\\"/servlet/FileUpload3\\\" \nenctype=\\\"multipart/form-data\\\" method=\\\"post\\\">\");\n\t\t\tpw.println(\"<p><b>File:</b> <input name=\\\"file\\\" \ntype=\\\"file\\\" /></p>\");\n\t\t\tpw.println(\"<p><input name=\\\"submit\\\" type=\\\"submit\\\" \nvalue=\\\"Submit\\\" /></p>\");\n\t\t\tpw.println(\"</form>\");\n\t\t\tpw.println(\"</body></html>\");\n\t\t\tpw.close();\n\t\t}\n\t\tcatch(Exception e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n\n\tpublic void doPost(HttpServletRequest req, HttpServletResponse resp) \nthrows IOException {\n\t\ttry {\n\t\t\tDate d = new Date();\n\t\t\tServletInputStream sis = req.getInputStream();\n\t\t\twhile(sis.read() != -1);\n\t\t\tsis.close();\n\t\t\tDate d2 = new Date();\n\t\t\tTimeSpan ts = new TimeSpan(d, d2);\n\t\t\tresp.setContentType(\"text/html\");\n\t\t\tPrintWriter pw = resp.getWriter();\n\t\t\tpw.println(\"<!DOCTYPE html PUBLIC \\\"-//W3C//DTD XHTML \n1.0 Transitional//EN\\\" \\\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-\ntransitional.dtd\\\"><?xml version=\\\"1.0\\\" encoding=\\\"ISO-8859-1\\\"?>\");\n\t\t\tpw.println(\"<html><head><title>File \nUpload</title></head><body>\");\n\t\t\tpw.println(\"<p>\");\n\t\t\tpw.println(\"<p>\" + ts + \"</p>\");\n\t\t\tpw.println(\"</p>\");\n\t\t\tpw.println(\"</body></html>\");\n\t\t\tpw.close();\n\t\t}\n\t\tcatch(Exception e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n\nimport java.text.*;\nimport java.util.*;\n\npublic class TimeSpan {\n\tpublic TimeSpan(Date startDate, Date endDate) {\n\t\tlong l = (endDate.getTime() - startDate.getTime()) / 1000;\n\t\thours = l / 60 / 60;\n\t\tminutes = l / 60 - (hours * 60);\n\t\tseconds = l - (hours * 60 * 60) - (minutes * 60);\n\t}\n\t\n\tpublic String toString() {\n\t\tObject[] o = {new Long(hours), new Long(minutes), new Long\n(seconds)};\n\t\treturn new MessageFormat(\"{0,number,00}:{1,number,00}:\n{2,number,00}\").format(o);\n\t}\n\t\n\tpublic long hours;\n\tpublic long minutes;\n\tpublic long seconds;\n}"}, {"count": 1, "tags": [], "creator": "remm@apache.org", "attachment_id": null, "id": 45947, "time": "2003-10-20T19:09:53Z", "bug_id": 23948, "creation_time": "2003-10-20T19:09:53Z", "is_private": false, "text": "Maybe you are having a problem, but you have to point out there's a bug with the\nTomcat network handling, rather than a bug in your setup. Discussing this kind\nof issue on tomcat-user is much better than using BZ."}, {"count": 2, "tags": [], "bug_id": 23948, "is_private": false, "text": "OK, I'll test it on another Solaris box to make sure that it isn't a problem \nspecific to that computer. Note, I'm using the default Tomcat configuration \nfile, so, I don't think it's a misconfiguration problem. Also, as I mentioned, \nit works fine with Mozilla and I tested it with IE from multiple different \nclients to make sure that it wasn't a client configuration problem. If it was \na configuration problem, why would it work fine with Mozilla?\n", "id": 45951, "time": "2003-10-20T19:45:06Z", "creator": "jemiller@uchicago.edu", "creation_time": "2003-10-20T19:45:06Z", "attachment_id": null}, {"count": 3, "tags": [], "text": "It is a solaris tuning problem that the microsoft stack brings out.\n\nndd -set /dev/tcp tcp_deferred_ack_interval 5 \n\nand I suspect you will see a marked improvement.\n", "is_private": false, "bug_id": 23948, "id": 45952, "time": "2003-10-20T19:57:40Z", "creator": "Keith@Apache.org", "creation_time": "2003-10-20T19:57:40Z", "attachment_id": null}, {"count": 4, "tags": [], "text": "Thanks. That did speed it up significantly. It increased the speed to about 7% \nof a 100 Mbs connection from about 1%. However, Mozilla is around 30% and IE \nagainst Linux is 45%, so, it still seems a bit slow. I'm going to try it on a \nSolaris 9 box and see if that makes a difference.\n", "attachment_id": null, "bug_id": 23948, "id": 45953, "time": "2003-10-20T20:23:01Z", "creator": "jemiller@uchicago.edu", "creation_time": "2003-10-20T20:23:01Z", "is_private": false}]