[{"count": 0, "tags": [], "bug_id": 49094, "attachment_id": 25263, "is_private": false, "id": 136046, "time": "2010-04-12T07:02:33Z", "creator": "sami.tolvanen@mywot.com", "creation_time": "2010-04-12T07:02:33Z", "text": "Created attachment 25263\nTest case for reproducing the problem\n\nThe apr_pollset_create_ex function in APR 1.4.2 (and HEAD) always returns APR_SUCCESS even if the pollset provider's create function returns an error. In case of the Linux epoll provider, if epoll_create fails, this also causes a crash in an unsuspecting application when the pollset is destroyed, as demonstrated by the attached test case (assumes a Linux system without epoll_create1, e.g. CentOS 5):\n\n[sami@builder ~]$ gcc -Wall -o test test.c -I /usr/local/apr/include/apr-1 -L /usr/local/apr/lib -lapr-1\n[sami@builder ~]$ ./test\nSegmentation fault\n\nThe application causes epoll_create failure by passing 0 as the pollset size and demonstrates how a) apr_pollset_create_ex returns APR_SUCCESS despite the failure that occurred and that b) apr_pollset_destroy causes a segmentation fault when impl_pollset_cleanup in epoll.c references a NULL pointer."}, {"count": 1, "tags": [], "text": "Created attachment 25264\npollset.c: Fix apr_pollset_create_ex error handling\n\nA proposed patch that causes apr_pollset_create_ex to correctly return an error when the pollset provider's create function fails. The test case exits with code 3 after this patch is applied.", "attachment_id": 25264, "bug_id": 49094, "id": 136047, "time": "2010-04-12T07:07:52Z", "creator": "sami.tolvanen@mywot.com", "creation_time": "2010-04-12T07:07:52Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 49094, "attachment_id": 25265, "text": "Created attachment 25265\nepoll.c: Fix the potential segmentation fault in impl_pollset_cleanup\n\nAdds a check for a NULL pointer to impl_pollset_cleanup. It can be argued that this patch is unnecessary after the first one, but personally I would prefer to see more defensive programming in APR. If this is applied without the first patch, the test case doesn't segfault, but exits with code 0.", "id": 136048, "time": "2010-04-12T07:10:54Z", "creator": "sami.tolvanen@mywot.com", "creation_time": "2010-04-12T07:10:54Z", "is_private": false}, {"count": 3, "tags": [], "text": "The fix has been committed to 1.4.x thru trunk.  Thanks!\n\n(I didn't commit the defensive check in the 2nd patch; we wouldn't ordinarily add such logic until/unless we know that the check is required for some bug free path of execution.)", "is_private": false, "id": 136059, "creator": "trawick@apache.org", "time": "2010-04-12T11:29:03Z", "bug_id": 49094, "creation_time": "2010-04-12T11:29:03Z", "attachment_id": null}]