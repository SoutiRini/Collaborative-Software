[{"count": 0, "tags": [], "text": "Created attachment 29874\nPatch to fix the bug\n\nIn my case client is processing user's InputStream and then sending data in chunks to server. At server end I read till EOF.\nClient can be simple Java program or a web application. \n\nI am facing issue when client gets error on user's InputStream and closes connection with server. In that case ChunkedInputFilter is returning -1.\nI have added logs and confirmed that endChunk is false.\nIssue was fixed after I added following just before \"return result;\"\n\nif (result == -1 && !endChunk)\n\t\t\tthrow new EOFException(\"Unexpected end of stream while reading chunk body\");\n\nI think ChunkedInputFilter should return -1 only when it gets endChunk.\n\nAlso, from client end I am always sending complete chunk. So, in ChunkedInputFilter I should get EOF from socket stream while reading next chunk header (which is handled properly in ChunkedInputFilter) but that is not happening.\n\nI have attached patch. Patch was generated against tomcat/tc7.0.x/trunk", "is_private": false, "id": 164766, "creator": "sudhan.moghe@gmail.com", "time": "2013-01-21T16:45:51Z", "bug_id": 54456, "creation_time": "2013-01-21T16:45:51Z", "attachment_id": 29874}, {"count": 1, "tags": [], "creator": "markt@apache.org", "is_private": false, "text": "Which HTTP connector are you using? I'm having trouble reproducing this. I'm not against the patch but I'd like to understand what is going on first.", "id": 164824, "time": "2013-01-23T11:33:13Z", "bug_id": 54456, "creation_time": "2013-01-23T11:33:13Z", "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 54456, "attachment_id": null, "is_private": false, "id": 164846, "time": "2013-01-23T19:49:00Z", "creator": "markt@apache.org", "creation_time": "2013-01-23T19:49:00Z", "text": "Restoring the severity to something sensible.\n\nNeed requested information to progress this."}, {"count": 3, "tags": [], "text": "I found the issue after we switched to protocol=\"HTTP/1.1\".\nBut I have tested my patch with \"HTTP/1.1\" as well as NIO connector.\nI am getting EOFException(\"Unexpected end of stream while reading chunk body\") with both.\nClient is sending 8kB chunks. The test cases that are failing send around 18mB data before closing connection.\n\nWhy I was not getting EOF in my servlet with NIO connector is something I need to check. ChunkedInputFilter is returning -1 for sure. I wanted to check that before giving update here but not getting time.\nWill check and give details as soon as possible. May be some time next week.\n\nOne sure way of reproducing the issue is setting chunk size as 200 and sending only 100 bytes and then closing connection. \nMy test case is not doing that and why is it happening in my case is something I need to check. I am sending complete 8kB chunks from client. In my case it should fail while reading header (which is handled properly).", "is_private": false, "id": 164987, "creator": "sudhan.moghe@gmail.com", "time": "2013-02-01T17:33:25Z", "bug_id": 54456, "creation_time": "2013-02-01T17:33:25Z", "attachment_id": null}, {"count": 4, "tags": [], "creator": "knst.kolinko@gmail.com", "is_private": false, "text": "The following lines in ChunkedInputFilter.java (162-164 in trunk)\n\n        if (pos >= lastValid) {\n            readBytes();\n        }\n\nis the only place in this file where the return value of \"readBytes()\" is not checked. \n\nLooking at the code, if the method returns -1 then (lastValid - pos) will be -1 and it will proceed with \"chunk.setBytes(buf, pos, result);\", which seems a wrong thing to do in such a case.\n\nI have not tested what is the actual behaviour here, but an explicit \"return -1\" or \"throw new EOFException()\" would be better.", "id": 165094, "time": "2013-02-05T22:34:41Z", "bug_id": 54456, "creation_time": "2013-02-05T22:34:41Z", "attachment_id": null}, {"count": 5, "attachment_id": null, "bug_id": 54456, "text": "(In reply to comment #4)\n> \"throw new EOFException()\" would be better.\n\nOn a thought, it would be better to use org.apache.catalina.connector.ClientAbortException or a generic IOException.\n\nIt is abnormal abort of connection by the client. It is not a proper end of stream.", "id": 165098, "time": "2013-02-06T10:46:24Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2013-02-06T10:46:24Z", "tags": [], "is_private": false}, {"count": 6, "tags": [], "bug_id": 54456, "attachment_id": null, "is_private": false, "id": 165111, "time": "2013-02-06T20:10:18Z", "creator": "sudhan.moghe@gmail.com", "creation_time": "2013-02-06T20:10:18Z", "text": "Tested with protocol=\"HTTP/1.1\" and <async-supported>false</async-supported>\n\nTook latest code from trunk and then added following debug statements to ChunkedInputFilter.\n\nif (pos >= lastValid) {\n        \tint readBytes = readBytes();\n\t\t\tif (readBytes <= 0){\n\t\t\t\tSystem.out.println(\"ChunkedInputFilter.doRead()1 readBytes returned : \" + readBytes);\n\t\t\t}\n        }\n\n        if (remaining > (lastValid - pos)) {\n            result = lastValid - pos;\n            System.out.println(\"ChunkedInputFilter.doRead()2 result: \" + result + \" remaining: \" + remaining + \" lastValid: \" + lastValid + \" pos: \" + pos);\n\nOutput on console\nChunkedInputFilter.doRead()1 readBytes returned : -1\nChunkedInputFilter.doRead()2 result: -1 remaining: 8192 lastValid: 334 pos: 335\n\nMethod returns -1, which is treated as normal EOF. And application ends up processing incomplete data.\n\n\"return -1\" won't do as that is what is being returned.\n\n\"throw new EOFException(\"Unexpected end of stream while reading chunk body\");\"\nor\n\"throw new org.apache.catalina.connector.ClientAbortException()\"\nlooks appropriate."}, {"count": 7, "tags": [], "bug_id": 54456, "text": "(In reply to comment #5)\n> On a thought, it would be better to use\n> org.apache.catalina.connector.ClientAbortException or a generic IOException.\n\nClientAbortException is a disallowed import for org.apache.coyote. It will have to be IOException.", "id": 165116, "time": "2013-02-07T11:53:14Z", "creator": "markt@apache.org", "creation_time": "2013-02-07T11:53:14Z", "is_private": false, "attachment_id": null}, {"count": 8, "tags": [], "creator": "markt@apache.org", "is_private": false, "text": "Fixed in trunk and 7.0.x and will be included in 7.0.37 onwards.", "id": 165117, "time": "2013-02-07T11:58:09Z", "bug_id": 54456, "creation_time": "2013-02-07T11:58:09Z", "attachment_id": null}, {"count": 9, "tags": [], "text": "(In reply to comment #8)\n> Fixed in trunk and 7.0.x and will be included in 7.0.37 onwards.\n7.0.37 or 7.0.36?\nFix in 7.0.36 (if possible) would help a lot. We are already in production and can't use dev build.", "is_private": false, "id": 165123, "creator": "sudhan.moghe@gmail.com", "time": "2013-02-07T15:05:59Z", "bug_id": 54456, "creation_time": "2013-02-07T15:05:59Z", "attachment_id": null}, {"count": 10, "attachment_id": null, "bug_id": 54456, "text": "Which part of \"will be included in 7.0.37 onwards\" was unclear?", "id": 165125, "time": "2013-02-07T15:10:16Z", "creator": "markt@apache.org", "creation_time": "2013-02-07T15:10:16Z", "tags": [], "is_private": false}, {"count": 11, "tags": [], "bug_id": 54456, "text": "Sorry for bothering you. I was just confirming as current release is 7.0.35.", "id": 165126, "time": "2013-02-07T15:19:17Z", "creator": "sudhan.moghe@gmail.com", "creation_time": "2013-02-07T15:19:17Z", "is_private": false, "attachment_id": null}, {"count": 12, "attachment_id": null, "bug_id": 54456, "text": "I proposed backport of r1443430 to 6.0.", "id": 165142, "time": "2013-02-09T14:43:14Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2013-02-09T14:43:14Z", "tags": [], "is_private": false}, {"count": 13, "tags": [], "text": "Fixed in Tomcat 6 by r1476544 , will be in 6.0.37.", "is_private": false, "id": 166884, "creator": "knst.kolinko@gmail.com", "time": "2013-04-27T13:40:06Z", "bug_id": 54456, "creation_time": "2013-04-27T13:40:06Z", "attachment_id": null}]