[{"count": 0, "tags": [], "bug_id": 51371, "attachment_id": null, "text": "I have other configuration issues I need to sort out, but this is a problem with the core code in a clean 2.2.19 build.\n\nThe symptom is an undefined reference to apr_procattr_limit_set when trying to link mod_cgi.so.\n\nIn srclib/apr/threadproc/unix/proc.c, the definition of apr_procattr_limit_set is guarded by APR_HAVE_STRUCT_RLIMIT (at about line 670):\n\n  #if APR_HAVE_STRUCT_RLIMIT\n  APR_DECLARE(apr_status_t) apr_procattr_limit_set(apr_procattr_t *attr,\n                                                   apr_int32_t what,\n                                                   struct rlimit *limit)\n  {\n  /* ... */\n  }\n  #endif /* APR_HAVE_STRUCT_RLIMIT */\n\nBut it's used in modules/generators/mod_cgi.c with only RLIMIT_CPU, RLIMIT_DATA, or RLIMIT_NPROC guards (at about line 429):\n\n  #ifdef RLIMIT_CPU\n          ((rc = apr_procattr_limit_set(procattr, APR_LIMIT_CPU,\n                                        conf->limit_cpu)) != APR_SUCCESS) ||\n  #endif\n  #if defined(RLIMIT_DATA) || defined(RLIMIT_VMEM) || defined(RLIMIT_AS)\n          ((rc = apr_procattr_limit_set(procattr, APR_LIMIT_MEM,\n                                        conf->limit_mem)) != APR_SUCCESS) ||\n  #endif\n  #ifdef RLIMIT_NPROC\n          ((rc = apr_procattr_limit_set(procattr, APR_LIMIT_NPROC,\n                                        conf->limit_nproc)) != APR_SUCCESS) ||\n  #endif\n\nThe obvious fix is to just add APR_HAVE_STRUCT_RLIMIT guards around that bit, but there might be something non-obvious going on.\n\nThis might also be related to bug 40287, but I don't have the resources to pull out the 2.0 codebase and verify.", "id": 147093, "time": "2011-06-14T06:38:11Z", "creator": "anthony.foiani@gmail.com", "creation_time": "2011-06-14T06:38:11Z", "is_private": false}, {"count": 1, "tags": [], "creator": "covener@gmail.com", "attachment_id": null, "id": 147229, "creation_time": "2011-06-17T12:57:02Z", "time": "2011-06-17T12:57:02Z", "bug_id": 51371, "text": "Can you post config.log from APR where RLIMIT_* was defined but APR autoconf decided to not set APR_HAVE_STRUCT_RLIMIT?   And where \"struct rlimit\" is defined in your system?\n\n(I assume that's what cgi is relying on)", "is_private": false}, {"count": 2, "tags": [], "creator": "anthony.foiani@gmail.com", "attachment_id": null, "text": "(In reply to comment #1)\n> Can you post config.log from APR where RLIMIT_* was defined but APR autoconf\n> decided to not set APR_HAVE_STRUCT_RLIMIT?   And where \"struct rlimit\" is\n> defined in your system?\n\nIt's a bit messy, as I'm cross-compiling: building on linux (Fedora 14 x86_64) for a powerpc linux target.\n\nAs such, I'm running the httpd (and hence apr) config machinery against the cross-compiler and the kernel headers for the target system, not my local system.\n\nI'll see if I can't reproduce the problem, but I have been in \"fix and move on mode\" since I reported this issue, so getting back to that exact configuration might be difficult.  My actual configuration stanza is as follows; the extra variables are there to keep the configuration script from trying to run target binaries on the host.\n\n    ac_default_prefix=/                                 \\\n    ac_cv_sizeof_struct_iovec=8                         \\\n    ac_cv_struct_rlimit=yes                             \\\n    ac_cv_define_PTHREAD_PROCESS_SHARED=yes             \\\n    ac_cv_func_setpgrp_void=yes                         \\\n    ac_cv_file__dev_zero=yes                            \\\n    ac_site_file=NONE                                   \\\n    ap_cv_void_ptr_lt_long=no                           \\\n    apr_cv_tcp_nodelay_with_cork=yes                    \\\n    apr_cv_mutex_robust_shared=yes                      \\\n    apr_cv_process_shared_works=yes                     \\\n    manualdir=/doc/httpd-manual                         \\\n    ./configure                                         \\\n        --prefix=/                                      \\\n        --sysconfdir=/etc                               \\\n        --datadir=/www                                  \\\n        --docdir=/doc                                   \\\n        --host=\"$TARGET_TUPLE\"                          \\\n        --enable-auth-digest                            \\\n        --enable-deflate --with-z=\"$PLATFORM_STAGE\"     \\\n        --enable-expires                                \\\n        --enable-headers                                \\\n        --enable-logio                                  \\\n        --enable-ssl=no                                 \\\n      || exit 1\n\n> (I assume that's what cgi is relying on)\n\nI'm not sure how to describe the \"relies on\" relationship any better than in my original problem description: threadproc uses one guard to determine whether it should provide a particular function, while mod_cgi uses a different guard to determine whether it should call said function.\n\nIt's clear that mod_cgi doesn't *need* this call; it will still work even without it, but it just won't enforce resource limits on child processes.", "id": 147235, "time": "2011-06-17T21:37:52Z", "bug_id": 51371, "creation_time": "2011-06-17T21:37:52Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 51371, "text": "Created attachment 27170\nconfig.log output that fails to find 'struct rlimit'\n\nconfig.log for a session which experienced the problem described in the initial description of this bug.", "id": 147237, "time": "2011-06-18T04:37:40Z", "creator": "anthony.foiani@gmail.com", "creation_time": "2011-06-18T04:37:40Z", "is_private": false, "attachment_id": 27170}, {"count": 4, "tags": [], "creator": "anirudh.takkallapally@gmail.com", "attachment_id": null, "text": "Did you find a solution for this?, i am having the same issue.", "id": 147418, "time": "2011-06-23T22:08:18Z", "bug_id": 51371, "creation_time": "2011-06-23T22:08:18Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 51371, "text": "(In reply to comment #4)\n> Did you find a solution for this?, i am having the same issue.\n\nIt's not clear that the developers think it's a real problem, but you can work around it by specifying the appropriate autoconf variable when you run './configure' (as in comment 2). E.g.,\n\n  ac_cv_struct_rlimit=yes ./configure --with...\n\nHope this helps!", "id": 147420, "time": "2011-06-23T22:36:09Z", "creator": "anthony.foiani@gmail.com", "creation_time": "2011-06-23T22:36:09Z", "is_private": false, "attachment_id": null}, {"count": 6, "tags": [], "bug_id": 51371, "attachment_id": null, "id": 149405, "time": "2011-09-17T17:01:40Z", "creator": "covener@gmail.com", "creation_time": "2011-09-17T17:01:40Z", "is_private": false, "text": "fixed in trunk r1172019."}, {"count": 7, "tags": [], "bug_id": 51371, "attachment_id": null, "id": 154253, "time": "2012-02-26T17:12:21Z", "creator": "sf@sfritsch.de", "creation_time": "2012-02-26T17:12:21Z", "is_private": false, "text": "fixed in 2.4.1"}]