[{"count": 0, "tags": [], "bug_id": 27479, "text": "Given a a DefaultContext declaration in server.xml as follows :\n\n          <DefaultContext debug=\"1000\" crossContext=\"true\">\n                <Resource name=\"jdbc/clubmom\" auth=\"Container\"\ntype=\"oracle.jdbc.pool.OracleConnectionCacheImpl\"/>\n                <ResourceParams name=\"jdbc/clubmom\">\n                       \n<parameter><name>factory</name><value>oracle.jdbc.pool.OracleDataSourceFactory</value></parameter>\n                       \n<parameter><name>driverClassName</name><value>oracle.jdbc.OracleDriver</value></parameter>\n                       \n<parameter><name>url</name><value>jdbc:oracle:thin:@oracle-dev:1521:CM_DEV</value></parameter>\n                       \n<parameter><name>user</name><value>clubmom</value></parameter>\n                       \n<parameter><name>password</name><value>clubmom</value></parameter>\n                       \n<parameter><name>maxLimit</name><value>10</value></parameter>\n                       \n<parameter><name>stmtCacheSize</name><value>50</value></parameter>\n                       \n<parameter><name>implicitCachingEnabled</name><value>true</value></parameter>\n                </ResourceParams>\n        </DefaultContext>\n\n\nany deployed application ( via the manager app, dropped into webapps, or using\nant tasks ) has no access to the given resource name.  It seems none of the\nrelevant properties from the DefaultContext are copied over.  \n\nThe problem seems to be that in StandardHostDeployer.install() the only\nproperties that are set are the path and the docBase.  I figure more properties,\nsuch as naming resources should be copied over also.. \n\ni.e. context.setNamingResources( host.getDefaultContext().getNamingResources() )\n\nor some variation of ...\n\n\nA locally patched version adding that one line definitely gets rid of the common\n   issu of  the DBCP data source cannot load driver null for resource null that\neveryone gets..", "id": 53524, "time": "2004-03-05T18:21:37Z", "creator": "adeshpande@clubmom-inc.com", "creation_time": "2004-03-05T18:21:37Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 27479, "attachment_id": null, "id": 53525, "time": "2004-03-05T18:26:03Z", "creator": "remm@apache.org", "creation_time": "2004-03-05T18:26:03Z", "is_private": false, "text": "I will test this, but I doubt this report is valid."}, {"count": 2, "tags": [], "bug_id": 27479, "attachment_id": null, "id": 53536, "time": "2004-03-05T20:47:02Z", "creator": "adeshpande@clubmom-inc.com", "creation_time": "2004-03-05T20:47:02Z", "is_private": false, "text": "it could be possible that it was only happening for the ROOT webapp, and causing\nothers to fail.  Would it possible to test that scenario as well?"}, {"attachment_id": null, "tags": [], "bug_id": 27479, "text": "You should test and report issues accurately. Otherwise, post on tomcat-user to\ninvestigate.", "count": 3, "id": 53541, "time": "2004-03-05T22:30:45Z", "creator": "remm@apache.org", "creation_time": "2004-03-05T22:30:45Z", "is_private": false}, {"count": 4, "tags": [], "creator": "remm@apache.org", "text": "Ok, I tested for all sorts of cases similar to what you mention, and it (still)\nworks ok. Your use case is bad, since it will attempt to create one connection\npool for each webapp. Use a global definition, with ResourceLink instead.", "id": 53542, "time": "2004-03-05T22:41:54Z", "bug_id": 27479, "creation_time": "2004-03-05T22:41:54Z", "is_private": false, "attachment_id": null}]