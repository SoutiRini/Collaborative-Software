[{"count": 0, "tags": [], "bug_id": 39013, "text": "I created a folder called \"webapps-war\" within the Tomcat installation directory\n(CATALINA_HOME). The host's default appBase is \"webapps\" in this directory.\n\nWhat I wanted to do is use the XML Context file deployment method, i.e. put my\nxml file into conf/catalina/localhost (in my case) and specify the docBase to\nlook for the war in ${catalina.home}/webapps-war/myapp.\n\nBut just because the name starts with \"webapps\", it misinterprets the docBase\nsetting and I get in tomcat.log:\n\"A docBase C:\\tomcat-5.5.16\\webapps-war\\myapp inside the host appBase has been\nspecified, and will be ignored\"\nand then my deployment fails.\n\nOn the other hand, if I name my folder \"somethingelse\" instead of \"webapps-war\",\nit works like a charm.\n\nSo not a big problem (trivial workaround) but would be nicer if the rule was\nperfectly implemented. And that would have saved me hours trying to figure out\nwhat was wrong in my deployment!...\n\nIf my investigation is correct, the problem can be traced back to\norg.apache.catalina.startup.HostConfig and below is my suggested change against\nthe download from SVN done today (17 March). I'm not an expert on the catalina\nsource, so it would need another pair of eyes and some testing before you can\nsay this is the resolution of this problem. The proposed solution is simply to\nmake sure the string comparaisons includes a trailing \"/\" after the default appBase.\n\nQuestions on the suggested resolution:\nI'm not sure in particular if you can use \"/\" as the directory separator for all\nplatform of if you'd need to use something like\nSystem.getProperty(\"file.separator\")?\nWould there be other places where this applies?\nIs there a compelling reason why this can't be done like that?\n\nDIFF FILE against $Revision: 386336 $ $Date: 2006-03-16 14:13:00 +0000 (Thu, 16\nMar 2006) $\nCompare:\n(<)D:\\work-bak\\tomcat\\container\\catalina\\src\\share\\org\\apache\\catalina\\startup\\HostConfig.java\n(45038 bytes)\n   with:\n(>)D:\\work-bak\\tomcat\\container\\catalina\\src\\share\\org\\apache\\catalina\\startup\\HostConfig.java.changed\n(44596 bytes)\n\n592c592\n<                 if\n(!docBase.getCanonicalPath().startsWith(appBase().getAbsolutePath())) {\n---\n>                 if\n(!docBase.getCanonicalPath().startsWith(appBase().getAbsolutePath() + \"/\")) {\n995,996c995,996\n<                             if\n((current.getAbsolutePath().startsWith(appBase().getAbsolutePath()))\n<                                     ||\n(current.getAbsolutePath().startsWith(configBase().getAbsolutePath()))) {\n---\n>                             if\n((current.getAbsolutePath().startsWith(appBase().getAbsolutePath() + \"/\"))\n>                                     ||\n(current.getAbsolutePath().startsWith(configBase().getAbsolutePath() + \"/\"))) {\n1035,1036c1035,1036\n<                         if\n((current.getAbsolutePath().startsWith(appBase().getAbsolutePath()))\n<                             ||\n(current.getAbsolutePath().startsWith(configBase().getAbsolutePath()))) {\n---\n>                         if\n((current.getAbsolutePath().startsWith(appBase().getAbsolutePath() + \"/\"))\n>                             ||\n(current.getAbsolutePath().startsWith(configBase().getAbsolutePath() + \"/\"))) {\n1052,1053c1052,1053\n<                         if\n((current.getAbsolutePath().startsWith(appBase().getAbsolutePath()))\n<                             ||\n((current.getAbsolutePath().startsWith(configBase().getAbsolutePath())\n---\n>                         if\n((current.getAbsolutePath().startsWith(appBase().getAbsolutePath() + \"/\"))\n>                             ||\n((current.getAbsolutePath().startsWith(configBase().getAbsolutePath() + \"/\")", "id": 86966, "time": "2006-03-17T13:07:53Z", "creator": "nic.daniau@googlemail.com", "creation_time": "2006-03-17T13:07:53Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "text": "This still appears to exist in the trunk as of today's pull.\n\nI've got a one-liner that appears to fix it that I'll post soon.", "attachment_id": null, "bug_id": 39013, "id": 123184, "time": "2008-12-08T17:45:35Z", "creator": "kirk@mustardgrain.com", "creation_time": "2008-12-08T17:45:35Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 39013, "text": "Created attachment 23007\nPatch in ContextConfig.java\n\nTacking on a '/' to the end of both path strings helps to ensure full path parentage when performing the substring match.", "id": 123206, "time": "2008-12-09T16:30:17Z", "creator": "kirk@mustardgrain.com", "creation_time": "2008-12-09T16:30:17Z", "is_private": false, "attachment_id": 23007}, {"count": 3, "tags": [], "creator": "kirk@mustardgrain.com", "attachment_id": null, "text": "I've attached a patch that fixes the immediate issue as per the bug report. However, there could easily be cases that this doesn't catch. Please review.\n\nThanks.", "id": 123207, "time": "2008-12-09T16:33:18Z", "bug_id": 39013, "creation_time": "2008-12-09T16:33:18Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 39013, "text": "I've gone through HostConfig and appended File.separator where required. It needs to be File.separator rather than '/'. I have applied the fix to trunk and have proposed it for 6.0.x and 5.5.x", "id": 124746, "time": "2009-02-09T11:42:16Z", "creator": "markt@apache.org", "creation_time": "2009-02-09T11:42:16Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 39013, "text": "This has been fixed in 6.0.x and will be included in 6.0.19 onwards.", "id": 125391, "time": "2009-03-06T07:21:19Z", "creator": "markt@apache.org", "creation_time": "2009-03-06T07:21:19Z", "is_private": false, "attachment_id": null}, {"count": 6, "tags": [], "text": "This has been fixed in 5.5.x and will be included in 5.5.28 onwards.", "attachment_id": null, "id": 125754, "creator": "markt@apache.org", "time": "2009-03-24T05:54:41Z", "bug_id": 39013, "creation_time": "2009-03-24T05:54:41Z", "is_private": false}]