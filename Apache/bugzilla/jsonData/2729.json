[{"count": 0, "tags": [], "creator": "tapio.palomaki@linkkitehdas.fi", "attachment_id": null, "is_private": false, "id": 3905, "time": "2001-07-21T21:07:59Z", "bug_id": 2729, "creation_time": "2001-07-21T21:07:59Z", "text": "Starting position is following:\n\nTomcat 3.2.2 (or Jboss 2.2.2 with tomcat 3.2.2.) hosts a jsp-page\nthat includes following code:\n\n  ...\n  ...\n  <A HREF=\"MapFinder.jsp?z=<%=zoom%>&\">\n  <img src=\"http://127.0.0.1:8080/getMap/servlet/getMap?\n  <Someparams> BORDER=0 ISMAP>\n  ...\n  ...\n\n\n\ngetMap -servlet writes to outputstream (http) with following code:\n\n  BufferedImage drawableImage = generatePicture();\n  ServletOutputStream out = res.getOutputStream();\n  res.setContentType(\"image/jpeg\"); //or png\n  JPEGEncodeParam jpegparam = new JPEGEncodeParam();\n  jpegparam.setQuality((float)0.72);\n  JAI.create(\"encode\", drawableImage, out, \"JPEG\", jpegparam);\n\n\n\n\nWhen repeatedly reloading the page tomcat produces following output\nmultiple times (not exactly same every time, of course):\n\n  Exception in thread \"Thread-16\"\n  java.net.SocketException: Connection reset by peer: socket write error\n  at java.net.SocketOutputStream.socketWrite(Native Method)\n  at java.net.SocketOutputStream.write(Unknown Source)\n  at org.apache.tomcat.service.http.HttpResponseAdapter.endHeaders\n  (HttpResponseAdapter.java:124)\n  at org.apache.tomcat.core.BufferedServletOutputStream.sendHeaders\n  (BufferedServletOutputStream.java:126)\n  at org.apache.tomcat.core.BufferedServletOutputStream.reallyFlush\n  (BufferedServletOutputStream.java:236)\n  at org.apache.tomcat.core.BufferedServletOutputStream.write\n  (BufferedServletOutputStream.java:185)\n  at sun.awt.image.codec.JPEGImageEncoderImpl.writeJPEGStream(Native Method)\n  at sun.awt.image.codec.JPEGImageEncoderImpl.encode(Unknown Source)\n  at sun.awt.image.codec.JPEGImageEncoderImpl.encode(Unknown Source)\n  at com.sun.media.jai.codecimpl.JPEGImageEncoder.encode\n  (JPEGImageEncoder.java:203)\n  at com.sun.media.jai.opimage.EncodeRIF.create(EncodeRIF.java:74)\n  at java.lang.reflect.Method.invoke(Native Method)\n  at javax.media.jai.FactoryCache.invoke(FactoryCache.java:130)\n  at javax.media.jai.OperationRegistry.invokeFactory\n  (OperationRegistry.java:1669)\n  at javax.media.jai.ThreadSafeOperationRegistry.invokeFactory\n  (ThreadSafeOperationRegistry.java:481)\n  at javax.media.jai.registry.RIFRegistry.create(RIFRegistry.java:340)\n  at javax.media.jai.RenderedOp.createInstance(RenderedOp.java:805)\n  at javax.media.jai.RenderedOp.createRendering(RenderedOp.java:853)\n  at javax.media.jai.RenderedOp.getRendering(RenderedOp.java:874)\n  at javax.media.jai.JAI.createNS(JAI.java:919)\n  at javax.media.jai.JAI.create(JAI.java:786)\n  at javax.media.jai.JAI.create(JAI.java:1483)\n  at com.linkkitehdas.getMap.doGet(getMap.java:372)\n  at javax.servlet.http.HttpServlet.service(HttpServlet.java:740)\n  at javax.servlet.http.HttpServlet.service(HttpServlet.java:853)\n  at org.apache.tomcat.core.ServletWrapper.doService(ServletWrapper.java:405)\n  at org.apache.tomcat.core.Handler.service(Handler.java:287)\n  at org.apache.tomcat.core.ServletWrapper.service(ServletWrapper.java:372)\n  at org.apache.tomcat.core.ContextManager.internalService\n  (ContextManager.java:797)\n  at org.apache.tomcat.core.ContextManager.service(ContextManager.java:743)\n  at org.apache.tomcat.service.http.HttpConnectionHandler.processConnection\n  (HttpConnectionHandler.java:213)\n  at org.apache.tomcat.service.TcpWorkerThread.runIt(PoolTcpEndpoint.java:416)\n  at org.apache.tomcat.util.ThreadPool$ControlRunnable.run(ThreadPool.java:501)\n  at java.lang.Thread.run(Unknown Source)\n\n  #\n  # An unknown exception code exception has been detected in\n  # native code outside the VM.\n  # Program counter=0x77fb04e5\n  #\n  #\n  # An unknown exception code exception has been detected in\n  # native code outside the VM.\n  # Program counter=0x77fb04e5\n  #\n\n\n\n \nAfter this tomcat crashes.\n\nTomcat should not crash if (for example) clients browser happens to die\nor someone likes to play with \"reload\"-button. I couldn't figure out how\nto find out if current request is still valid and ready to receive the\ndata... (nothing for this in j2ee api javadocs...)"}, {"count": 1, "tags": [], "creator": "tapio.palomaki@linkkitehdas.fi", "attachment_id": null, "is_private": false, "id": 3942, "time": "2001-07-23T20:08:39Z", "bug_id": 2729, "creation_time": "2001-07-23T20:08:39Z", "text": "do this just before the critical call (Jai.create for example)\n\nres.flushBuffer();  //where res is HttpServletResponse\n\nthe problem is not solved with this but it's hard to get the tomcat crash\n(if at all).\n\nA Final fix for this should be done (either Jai group or Tomcat group)"}, {"count": 2, "attachment_id": null, "bug_id": 2729, "text": "This is very difficult bug.. it's crashing for example Weblogic.. i think it \ncan crash any Virtual Machine there is... (on windows)\n\nI have an opportunity to test this on Sparc running Solaris.", "id": 4119, "time": "2001-07-29T17:48:51Z", "creator": "tapio.palomaki@linkkitehdas.fi", "creation_time": "2001-07-29T17:48:51Z", "tags": [], "is_private": false}, {"count": 3, "tags": [], "creator": "cmanolache@yahoo.com", "attachment_id": null, "is_private": false, "id": 4478, "time": "2001-08-11T09:03:15Z", "bug_id": 2729, "creation_time": "2001-08-11T09:03:15Z", "text": " Crashing VM is not Tomcat's fault - it's just a buggy VM, and even if we find \na workaround ( which is almost impossible ), it'll still crash if user code does\nsomething similar. The only solution is to update the VM and fill the bugs\nagainst the VM. \n\nMake sure JAI doesn't use any native code - if it does, the problem may be\nthere."}]