[{"count": 0, "tags": [], "bug_id": 61511, "is_private": false, "text": "Created attachment 35313\npoc file\n\nThe htdigest tool has a stack buffer overflow bug if you pass it an input file with a long line. I'll attach a sample file (it simply consists of 766 times \"a\".)\n\nUsually I'd report this as a security vulnerability, but as it only affects a rarely used command line tool I thought I can skip that. This bug was found with afl.\n\nWhen compiling with address sanitizer and passing that file (and any realm/username) it will show the stack overflow:\n\n==4285==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffe5aa62f70 at pc 0x000000509cb6 bp 0x7ffe5aa623f0 sp 0x7ffe5aa623e8\nWRITE of size 1 at 0x7ffe5aa62f70 thread T0\n    #0 0x509cb5 in getword /f/apache/httpd-2.4.27/support/htdigest.c:83:17\n    #1 0x509cb5 in main /f/apache/httpd-2.4.27/support/htdigest.c:264\n    #2 0x7ff1e92cc520 in __libc_start_main /var/tmp/portage/sys-libs/glibc-2.25-r4/work/glibc-2.25/csu/../csu/libc-start.c:295\n    #3 0x419fa9 in _start (/r/apache/htdigest+0x419fa9)\n\nAddress 0x7ffe5aa62f70 is located in stack of thread T0 at offset 2928 in frame\n    #0 0x5087af in main /f/apache/httpd-2.4.27/support/htdigest.c:187\n\n  This frame has 13 object(s):\n    [32, 33) 'ch.i'\n    [48, 52) 'argc.addr'\n    [64, 72) 'argv.addr'\n    [96, 104) 'f'\n    [128, 132) 'rv'\n    [144, 164) 'tn'\n    [208, 216) 'dirname'\n    [240, 496) 'user'\n    [560, 816) 'realm'\n    [880, 1648) 'line'\n    [1776, 2544) 'l'\n    [2672, 2928) 'w' <== Memory access at offset 2928 overflows this variable\n    [2992, 3248) 'x'", "id": 200772, "time": "2017-09-08T16:26:19Z", "creator": "hanno@hboeck.de", "creation_time": "2017-09-08T16:26:19Z", "attachment_id": 35313}, {"count": 1, "tags": [], "bug_id": 61511, "attachment_id": 35314, "text": "Created attachment 35314\nsmaller poc\n\nAlternative poc: 255 chars \"a\" and a newline", "id": 200773, "time": "2017-09-08T16:29:53Z", "creator": "hanno@hboeck.de", "creation_time": "2017-09-08T16:29:53Z", "is_private": false}, {"text": "Hi Hanno,\n\nthanks a lot for the report. The following patch seems to work for me:\n\n./support/htdigest poc try elukey\n\nThe following line is longer than the maximum allowed (256): aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n\nI am not familiar with the htdigest.c code so I'll need to take a deeper look. Will wait for other people's comments too :)\n\nLuca\n\nPatch:\n\nIndex: support/htdigest.c\n===================================================================\n--- support/htdigest.c\t(revision 1807869)\n+++ support/htdigest.c\t(working copy)\n@@ -256,6 +256,11 @@\n\n     found = 0;\n     while (!(get_line(line, sizeof(line), f))) {\n+        if (strlen(line) >= MAX_STRING_LEN) {\n+            apr_file_printf(errfile, \"The following line is longer than the \"\n+                                     \"maximum allowed (%i): %s\", MAX_STRING_LEN, line);\n+            cleanup_tempfile_and_exit(1);\n+        }\n         if (found || (line[0] == '#') || (!line[0])) {\n             putline(tfp, line);\n             continue;", "tags": [], "bug_id": 61511, "attachment_id": null, "count": 2, "id": 200788, "time": "2017-09-09T10:08:48Z", "creator": "toscano.luca@gmail.com", "creation_time": "2017-09-09T10:08:48Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 61511, "is_private": false, "text": "if (strlen(line) >= MAX_STRING_LEN) should probably be if (strlen(line) > MAX_STRING_LEN).", "id": 200789, "time": "2017-09-09T10:10:16Z", "creator": "toscano.luca@gmail.com", "creation_time": "2017-09-09T10:10:16Z", "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 61511, "attachment_id": null, "is_private": false, "id": 200790, "time": "2017-09-09T12:15:03Z", "creator": "hanno@hboeck.de", "creation_time": "2017-09-09T12:15:03Z", "text": "(In reply to Luca Toscano from comment #3)\n> if (strlen(line) >= MAX_STRING_LEN) should probably be if (strlen(line) >\n> MAX_STRING_LEN).\n\nNo, it needs to be >=, else the smaller poc will still trigger an overflow (I assume it needs to consider a trailing null pointer). Probably it should me MAX_STRING_LEN-1 in the error message."}, {"text": "Created attachment 35315\nhtdigest patch", "tags": [], "bug_id": 61511, "attachment_id": 35315, "count": 5, "id": 200792, "time": "2017-09-09T17:26:36Z", "creator": "toscano.luca@gmail.com", "creation_time": "2017-09-09T17:26:36Z", "is_private": false}, {"count": 6, "tags": [], "bug_id": 61511, "attachment_id": null, "is_private": false, "id": 200793, "time": "2017-09-09T17:26:44Z", "creator": "toscano.luca@gmail.com", "creation_time": "2017-09-09T17:26:44Z", "text": "I added a new patch that is probably better, since the problem is getword() and the MAX_STRING_LEN applies to it (so anything split by a ':'), not to the total line length (that can be up to 3 * MAX_STRING_LEN).\n\nThe attached patch should emit an error and avoid the overflow. Still didn't find a ton of time to test it, will do it in the following days."}, {"count": 7, "tags": [], "bug_id": 61511, "text": "Re-compiled trunk with -fsanitize=address and no overflow is registered:\n\n$ ./support/htdigest poc try elukey\nThe following line contains a string longer than the allowed maximum size (255): aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n\n$ ./support/htdigest smallerpoc try elukey\nThe following line contains a string longer than the allowed maximum size (255): aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", "id": 200797, "time": "2017-09-11T08:28:00Z", "creator": "toscano.luca@gmail.com", "creation_time": "2017-09-11T08:28:00Z", "is_private": false, "attachment_id": null}, {"count": 8, "tags": [], "creator": "hanno@hboeck.de", "text": "I just noted there's already been a patch for an issue that sounds very similar:\nhttps://svn.apache.org/viewvc?view=revision&revision=1475878\n\nEven got a CVE: CVE-2013-1862\n\n(I strongly suggest to add some of the poc files as test cases in order to avoid future reappearing of the same bug type)", "id": 200798, "time": "2017-09-11T09:49:33Z", "bug_id": 61511, "creation_time": "2017-09-11T09:49:33Z", "is_private": false, "attachment_id": null}, {"text": "(In reply to hanno from comment #8)\n> I just noted there's already been a patch for an issue that sounds very\n> similar:\n> https://svn.apache.org/viewvc?view=revision&revision=1475878\n\nYep, different function (getline).\n \n> Even got a CVE: CVE-2013-1862\n\nI am not seeing anything related to htdigest in https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2013-1862, where did you find the mention of the CVE?\n\n> (I strongly suggest to add some of the poc files as test cases in order to\n> avoid future reappearing of the same bug type)\n\nMakes sense, will try to see what I can do in the testing framework.", "tags": [], "bug_id": 61511, "is_private": false, "count": 9, "id": 200799, "time": "2017-09-11T10:07:20Z", "creator": "toscano.luca@gmail.com", "creation_time": "2017-09-11T10:07:20Z", "attachment_id": null}, {"count": 10, "tags": [], "creator": "hanno@hboeck.de", "attachment_id": null, "is_private": false, "id": 200800, "time": "2017-09-11T10:19:56Z", "bug_id": 61511, "creation_time": "2017-09-11T10:19:56Z", "text": "(In reply to Luca Toscano from comment #9)\n> I am not seeing anything related to htdigest in\n> https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2013-1862, where did you\n> find the mention of the CVE?\n\nSorry, that was incorrect.\nI got confused by this bug report: https://bugs.mageia.org/show_bug.cgi?id=10097\nIt references both the CVE and this bug, but it seems they are unrelated and this bug report just discusses fixes for multiple unrelated security bugs."}, {"count": 11, "tags": [], "bug_id": 61511, "attachment_id": null, "id": 200801, "time": "2017-09-11T10:30:11Z", "creator": "toscano.luca@gmail.com", "creation_time": "2017-09-11T10:30:11Z", "is_private": false, "text": "Proposed the fix in http://svn.apache.org/r1808008 (trunk), waiting for the review of other members of the httpd dev community."}, {"count": 12, "tags": [], "bug_id": 61511, "attachment_id": null, "is_private": false, "id": 201124, "time": "2017-09-25T12:20:32Z", "creator": "toscano.luca@gmail.com", "creation_time": "2017-09-25T12:20:32Z", "text": "Change backported to 2.4.x with http://svn.apache.org/r1808853, will be part of the new release (2.4.28)"}]