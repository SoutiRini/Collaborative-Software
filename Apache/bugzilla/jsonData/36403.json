[{"count": 0, "tags": [], "creator": "mm@arcus.com.au", "attachment_id": null, "text": "The fo below throws an IndexOutOfBounds exception when processed through fop. If\none removes the border-collapse attribute no exception is thrown (the generated\nPDF then demonstrates other problems related to backgrounds and padding in cells\nbut thats a different issue I am currently looking at):\n\n    <fo:root xmlns:fo=\"http://www.w3.org/1999/XSL/Format\">\n      <fo:layout-master-set>\n        <fo:simple-page-master master-name=\"normal\" page-width=\"5in\"\npage-height=\"5in\">\n          <fo:region-body/>\n        </fo:simple-page-master>\n      </fo:layout-master-set>\n      <fo:page-sequence master-reference=\"normal\" white-space-collapse=\"true\">\n        <fo:flow flow-name=\"xsl-region-body\">\n          <fo:table border-collapse=\"separate\">\n            <fo:table-column column-number=\"1\" />\n            <fo:table-column column-number=\"2\" />\n            <fo:table-column column-number=\"3\" />\n            <fo:table-body>\n              <fo:table-row>\n                <fo:table-cell>\n                  <fo:block>Row 1 Col 1</fo:block>\n                </fo:table-cell>\n                <fo:table-cell margin=\"0pt\" padding=\"5pt\" background-color=\"blue\">\n                  <fo:block>Row 1 Col 2</fo:block>\n                </fo:table-cell>\n                <fo:table-cell margin=\"0pt\" padding=\"18pt\"\nbackground-color=\"yellow\">\n                  <fo:block>Row 1 Col 3</fo:block>\n                </fo:table-cell>\n              </fo:table-row>\n            </fo:table-body>\n          </fo:table>\n          <fo:block>Table with all yellow cells having 18pt padding and all blue\ncells having 5pt padding.</fo:block>\n        </fo:flow>\n      </fo:page-sequence>\n    </fo:root>", "id": 79122, "time": "2005-08-28T17:19:48Z", "bug_id": 36403, "creation_time": "2005-08-28T17:19:48Z", "is_private": false}, {"attachment_id": null, "tags": [], "creator": "mm@arcus.com.au", "is_private": false, "count": 1, "id": 79129, "time": "2005-08-29T04:14:19Z", "bug_id": 36403, "creation_time": "2005-08-29T04:14:19Z", "text": "Further investigation showed that the problem has nothing to do with the setting\nof border-collapse. The fact it doesn't show with border-collapse=\"collapse\" has\nsimply to do with cell padding being broken in that case. Once I fixed the\npadding problem the AIOOB exception is also thrown in the\nborder-collapse=\"collapse\" case.\n\nThe problem is in the TableStepper which attempts a back track on the first row\ncausing activeRow to be set to -1 (which is an invalid index)."}, {"count": 2, "tags": [], "bug_id": 36403, "text": "Attempting to shed some light on what's happening:\nFrom the debug output, we can derive that TableStepper.getNextStep() has set the variable \nrowBacktrackForLastStep to true (line 513), which in turn leads to \nTableStepper.getCombinedKnuthElementsForRowGroup() to decrease the activeRow index (line 249).\n\nAny subsequent call to TableStepper.getActiveRow() will result in an AIOOBException.\n\nStill looking for the exact reason why the backtrack-switch is flipped to true. Jeremias is probably the \nonly one among us who knows what 'Meeeeep!' means ;-)\n\nI'm thinking: either the backtracking itself is out-of-place and shouldn't happen, or the case where the \nactive row is the first one should be checked for.\nFWIW: simply surrounding TableStepper line 513 with \"if (activeRow > 0) { ... }\" seems to resolve the \nissue, but whether it suffices (i.e. is more than a quick dirty hack), that I'm not sure about.", "id": 81730, "time": "2005-10-25T22:52:12Z", "creator": "adelmelle@apache.org", "creation_time": "2005-10-25T22:52:12Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "text": "(just accepting/assigning to fop-dev so everyone can follow further progress)", "is_private": false, "bug_id": 36403, "id": 81733, "time": "2005-10-26T00:50:18Z", "creator": "adelmelle@apache.org", "creation_time": "2005-10-26T00:50:18Z", "attachment_id": null}, {"count": 4, "tags": [], "text": "(In reply to comment #2)\n> Attempting to shed some light on what's happening:\n> From the debug output, we can derive that TableStepper.getNextStep() has set\nthe variable \n> rowBacktrackForLastStep to true (line 513), which in turn leads to \n> TableStepper.getCombinedKnuthElementsForRowGroup() to decrease the activeRow\nindex (line 249).\n> \n> Any subsequent call to TableStepper.getActiveRow() will result in an\nAIOOBException.\n> \n> Still looking for the exact reason why the backtrack-switch is flipped to\ntrue. Jeremias is probably the \n> only one among us who knows what 'Meeeeep!' means ;-)\n\nHehe. Actually, it should have been \"Meeep, meeep!\" because Roadrunner always\ndoes a double meeeep! :-) I've replace the comment with a more verbose debug\nmessage and added a few comments in an attempt to shed a little more light on this.\n\n> I'm thinking: either the backtracking itself is out-of-place and shouldn't\nhappen, or the case where the \n> active row is the first one should be checked for.\n> FWIW: simply surrounding TableStepper line 513 with \"if (activeRow > 0) { ...\n}\" seems to resolve the \n> issue, but whether it suffices (i.e. is more than a quick dirty hack), that\nI'm not sure about.\n\nYou were almost on course. There's an additional aspect here. This case should\nactually cause that particular step to be skipped, because borders and padding\nallocate more room than the actual step is long which would result in a conflict\nsituation. I solved this by forcing an INFINITE penalty after the skipped step.\nI left a big error sign in there in case a break-before might ruin the fun\nthere. I'm not sure yet if that's possible at all and what would happen.\n\nAnalysis test case on the Wiki documenting a row backtrack situation:\nhttp://wiki.apache.org/xmlgraphics-fop/TableLayout/KnuthElementsForTables/RowBorder2\nHand-written notes with details on the situation (not very verbose, I'm afraid):\nhttp://people.apache.org/~jeremias/fop/NextStepAlgoNotes.pdf\n\nTest case to check this case here:\ntable_bug36403.xml\n(I could actually simplify the case documented in this bug here.)\n\nSVN Revision of the fix:\nhttp://svn.apache.org/viewcvs?rev=328868&view=rev", "is_private": false, "bug_id": 36403, "id": 81818, "time": "2005-10-27T15:21:16Z", "creator": "jeremias@apache.org", "creation_time": "2005-10-27T15:21:16Z", "attachment_id": null}, {"count": 5, "tags": [], "creator": "gadams@apache.org", "attachment_id": null, "text": "batch transition pre-FOP1.0 resolved+fixed bugs to closed+fixed", "id": 156151, "time": "2012-04-01T07:01:12Z", "bug_id": 36403, "creation_time": "2012-04-01T07:01:12Z", "is_private": false}]