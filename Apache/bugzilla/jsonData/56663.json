[{"count": 0, "tags": [], "bug_id": 56663, "attachment_id": null, "id": 176000, "time": "2014-06-24T09:45:02Z", "creator": "longzou@hotmail.com", "creation_time": "2014-06-24T09:45:02Z", "is_private": false, "text": "By from ReadListener, I implemented the method onDataAvailable same as below.\n        \npublic void onDataAvailable() throws IOException {\n            byte[] buf = new byte[1024];\n            int len = 0;\n            try{\n                while ( _input.isReady() && (len = _input.read(buf)) != -1) {\n                    _bufferStream.write(buf, 0, len);\n                }\n            }catch(Exception ex){\n                logger.debug(ex.getMessage());\n            }\n}\n\nWhen I send more than 1024 bytes from client, I can not get all data from method. It will exit the loop by _input.isReady() is false. \nBut when I change the buf size to 2048, I can get all data by this code."}, {"count": 1, "tags": [], "bug_id": 56663, "attachment_id": null, "is_private": false, "id": 176001, "time": "2014-06-24T10:01:41Z", "creator": "longzou@hotmail.com", "creation_time": "2014-06-24T10:01:41Z", "text": "public void onDataAvailable() throws IOException {\n            byte[] buf = new byte[1024];\n            int len = 0;\n            try{\n                while ( _input.isReady() && (len = _input.read(buf)) != -1) {\n                    _bufferStream.write(buf, 0, len);\n                }\n            }catch(Exception ex){\n                logger.debug(ex.getMessage());\n            }\n}\n\nThe client send 1406 bytes. But I can not get all.\n\nIf I changed the buf size to 2048, I can get all of 1406 bytes. But if I send more than 2048, I can not get all again."}, {"count": 2, "tags": [], "bug_id": 56663, "attachment_id": null, "is_private": false, "id": 176002, "time": "2014-06-24T10:36:13Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2014-06-24T10:36:13Z", "text": "1. Exact version of Tomcat 8.0.x = ?\n\n2. What connector implementation is being used (NIO, NIO2, APR, BIO) ?\n(See startup logs of your Tomcat, or ask on the Users mailing list)\n\n3. The onDataAvailable() does not guarantee that _all_ data can be read. It just says that _some_ data can be read.\n\nIf \"isReady()\" returns false then you are expected to exit from this method, and wait until \"onDataAvailable()\" is being called the second time. See [1].\n\n\n\n[1] http://docs.oracle.com/javaee/7/api/javax/servlet/ReadListener.html#onDataAvailable%28%29"}, {"count": 3, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "id": 176003, "time": "2014-06-24T10:46:23Z", "bug_id": 56663, "creation_time": "2014-06-24T10:46:23Z", "is_private": false, "text": "This works - Tomcat's WebSocket implementation is (currently) built on top of Servlet 3.1 async.\n\nThere are also a number of unit tests that cover this functionality.\n\nThere is insufficient information provided in this report to enable the problem to be reproduced.\n\nPlease seek help on the Tomcat users mailing list and only re-open this issue if a) that discussion concludes that there is a bug here and b) you have a reproducible test case (which should be as simple as possible) to demonstrate the issue."}, {"count": 4, "tags": [], "bug_id": 56663, "attachment_id": null, "text": "1. I test tomcat 8.0.5 and 8.0.8.\n2. Connector is using NIO.\n3. I understood the routines. \n\nEnclosing my code as below:\n \n    final class SyncServiceReadListener implements ReadListener {\n        private final AsyncContext _asyncCtx;\n        private final ServletInputStream _input;\n        private final HttpServletResponse _response;\n        private final Locale _locale;\n        private final ByteArrayOutputStream _bufferStream = new ByteArrayOutputStream();\n        SyncServiceReadListener(ServletInputStream input, HttpServletResponse res,  AsyncContext ctx, Locale locale){\n            _input = input;\n            _asyncCtx = ctx;\n            _response = res;\n            _locale = locale;\n            _serviceResponse = serviceResponse;\n        }\n        \n        public void onDataAvailable() throws IOException {\n            byte[] buf = new byte[1024];\n            int len = 0;\n            try{\n                while ( _input.isReady() && (len = _input.read(buf)) != -1) {\n                    _bufferStream.write(buf, 0, len);\n                }\n            }catch(Exception ex){\n                logger.debug(ex.getMessage());\n            }\n        }\n\n        public void onAllDataRead() throws IOException {\n            try{\n                _bufferStream.flush();\n                _bufferStream.close();\n            }catch(Exception ex){\n                logger.debug(ex.getMessage());\n            }\n\n            ///By here, the _bufferStream.toByteArray() just returned 1024 bytes. \n            ...\n        }\n\n        public void onError(Throwable thrwbl) {\n            if( thrwbl != null )\n                logger.error(thrwbl.getMessage(), thrwbl);\n            _asyncCtx.complete();\n        }\n    }", "id": 176011, "time": "2014-06-24T13:42:24Z", "creator": "longzou@hotmail.com", "creation_time": "2014-06-24T13:42:24Z", "is_private": false}, {"count": 5, "tags": [], "creator": "kpreisser@apache.org", "attachment_id": null, "id": 176013, "time": "2014-06-24T14:04:28Z", "bug_id": 56663, "creation_time": "2014-06-24T14:04:28Z", "is_private": false, "text": "Hi,\n\nI can reproduce this problem with current trunk with the provided non-blocking ByteCounter example.\n\n1) Apply the following patch to your working copy:\n\nIndex: ByteCounter.java\n===================================================================\n--- ByteCounter.java\t(revision 1604977)\n+++ ByteCounter.java\t(working copy)\n@@ -81,7 +81,7 @@\n \n         private volatile boolean readFinished = false;\n         private volatile long totalBytesRead = 0;\n-        private byte[] buffer = new byte[8192];\n+        private byte[] buffer = new byte[1024];\n \n         private CounterListener(AsyncContext ac, ServletInputStream sis,\n                 ServletOutputStream sos) {\n\n\n2. Build Tomcat and start it with default settings (NIO connector).\n\n3. Open a TCP connection and send the following request (it contains a Request Body with 1406 bytes):\n\nPOST /examples/servlets/nonblocking/bytecounter HTTP/1.1\nHost: localhost\nConnection: keep-alive\nContent-Type: text/plain\nContent-Length: 1406\n\n0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcd\n\n(remove the line breaks so that the body actually contains 1406 characters).\n\n\n\nActual Result:\n\nHTTP/1.1 200 OK\nServer: Apache-Coyote/1.1\nContent-Type: text/plain;charset=UTF-8\nContent-Length: 28\nDate: Tue, 24 Jun 2014 13:59:37 GMT\n\nTotal bytes written = [1024]\n\n\n\nExpected Result:\n\nHTTP/1.1 200 OK\nServer: Apache-Coyote/1.1\nContent-Type: text/plain;charset=UTF-8\nContent-Length: 28\nDate: Tue, 24 Jun 2014 14:03:42 GMT\n\nTotal bytes written = [1406]"}, {"count": 6, "tags": [], "bug_id": 56663, "attachment_id": 31748, "is_private": false, "id": 176014, "time": "2014-06-24T14:14:47Z", "creator": "longzou@hotmail.com", "creation_time": "2014-06-24T14:14:47Z", "text": "Created attachment 31748\nTestAsyncServlet is the full code by this case.\n\nClient will send below code by text/json content-type.\n\n{\n  \"key-0\" : \"AAAAAAAA\",\n  \"key-4\" : \"AAAAAAAA\",\n  \"deviceId\" : \"22C6A9AFE19D4577808FD1589ADF2AA8\",\n  \"key-8\" : \"AAAAAAAA\",\n  \"completed\" : false,\n  \"key-11\" : \"AAAAAAAA\",\n  \"key-20\" : \"AAAAAAAA\",\n  \"key-13\" : \"AAAAAAAA\",\n  \"key-22\" : \"AAAAAAAA\",\n  \"key-15\" : \"AAAAAAAA\",\n  \"key-24\" : \"AAAAAAAA\",\n  \"key-17\" : \"AAAAAAAA\",\n  \"key-1\" : \"AAAAAAAA\",\n  \"key-19\" : \"AAAAAAAA\",\n  \"key-33\" : \"AAAAAAAA\",\n  \"key-31\" : \"AAAAAAAA\",\n  \"key-35\" : \"AAAAAAAA\",\n  \"key-5\" : \"AAAAAAAA\",\n  \"sessionToken\" : \"O968K64KIL1KHCF3A62CSTAF00\",\n  \"key-37\" : \"AAAAAAAA\",\n  \"key-44\" : \"AAAAAAAA\",\n  \"key-28\" : \"AAAAAAAA\",\n  \"key-9\" : \"AAAAAAAA\",\n  \"key-46\" : \"AAAAAAAA\",\n  \"key-42\" : \"AAAAAAAA\",\n  \"key-48\" : \"AAAAAAAA\",\n  \"key-26\" : \"AAAAAAAA\",\n  \"key-39\" : \"AAAAAAAA\",\n  \"key-40\" : \"AAAAAAAA\",\n  \"count\" : 50,\n  \"key-2\" : \"AAAAAAAA\",\n  \"key-6\" : \"AAAAAAAA\",\n  \"key-10\" : \"AAAAAAAA\",\n  \"key-12\" : \"AAAAAAAA\",\n  \"key-21\" : \"AAAAAAAA\",\n  \"key-14\" : \"AAAAAAAA\",\n  \"key-23\" : \"AAAAAAAA\",\n  \"key-16\" : \"AAAAAAAA\",\n  \"key-30\" : \"AAAAAAAA\",\n  \"key-18\" : \"AAAAAAAA\",\n  \"key-32\" : \"AAAAAAAA\",\n  \"key-25\" : \"AAAAAAAA\",\n  \"key-3\" : \"AAAAAAAA\",\n  \"key-34\" : \"AAAAAAAA\",\n  \"key-27\" : \"AAAAAAAA\",\n  \"key-36\" : \"AAAAAAAA\",\n  \"key-29\" : \"AAAAAAAA\",\n  \"key-7\" : \"AAAAAAAA\",\n  \"key-45\" : \"AAAAAAAA\",\n  \"key-43\" : \"AAAAAAAA\",\n  \"key-41\" : \"AAAAAAAA\",\n  \"key-47\" : \"AAAAAAAA\",\n  \"key-38\" : \"AAAAAAAA\",\n  \"key-49\" : \"AAAAAAAA\"\n}\n\nThere are 1381 bytes."}, {"count": 7, "tags": [], "bug_id": 56663, "text": "I could reproduce a number of bad behaviors using ByteCounter, not limited exclusively to onDataAvailable. r1606136, will be included in 8.0.10.", "id": 176077, "time": "2014-06-27T16:02:39Z", "creator": "remm@apache.org", "creation_time": "2014-06-27T16:02:39Z", "is_private": false, "attachment_id": null}]