[{"count": 0, "text": "Created attachment 21854\nCrash log 1\n\nWhen shutting down the Tomcat server configured to use APR, the JVM will often crash, with the problematic frame being listed as:\n# C  [libapr-1.so.0+0x15f0b]  apr_pool_destroy+0xdb\n\nThe operating system is 64-bit RedHat Enterprise Linux 5, kernel 2.6.18-53.1.14.el5, dual socket dual core Xeon CPUs.\n\nThis also happened with APR 1.2.7 that the distribution came with. I downloaded and compiled the latest version (1.2.12), and the problem was still present. The problem only occurs when the webserver is shutdown.\n\nSince the crash occurs while the APR code is being called within the JVM, the JVM provides crash logs, two of which I will attach (both were created after the update to APR 1.2.12).", "bug_id": 44875, "is_private": false, "id": 115891, "time": "2008-04-25T12:46:25Z", "creator": "paul.miner@gmail.com", "creation_time": "2008-04-25T12:46:25Z", "tags": [], "attachment_id": 21854}, {"count": 1, "text": "Created attachment 21855\nCrash log 2", "bug_id": 44875, "is_private": false, "id": 115892, "time": "2008-04-25T12:47:00Z", "creator": "paul.miner@gmail.com", "creation_time": "2008-04-25T12:47:00Z", "tags": [], "attachment_id": 21855}, {"count": 2, "tags": [], "text": "Any chance you can give us a backtrace with debugging symbols available, so that we can tell where these errors occur in the source?", "is_private": false, "bug_id": 44875, "id": 115944, "time": "2008-04-27T23:45:55Z", "creator": "bojan@rexursive.com", "creation_time": "2008-04-27T23:45:55Z", "attachment_id": null}, {"count": 3, "tags": [], "text": "I got a backtrace by using the following JVM option:\n  -XX:OnError=\"sudo gdb - -x /home/tomcat/gdb.script %p\"\nContaining the following script for GDB:\n  set pagination off\n  thread apply all backtrace\n  backtrace full\n  detach\n  quit\n\nI'm attaching the hotspot error file, the backtrace from GDB, the output from readelf on the APR library (\"readelf -a -W /usr/local/apr/lib/libapr-1.so.0.2.12\"), and a copy of network.c from Tomcat 6.0.16 (Apache's SVN appears to be down at the moment, so I can't post a link to it).\n\nThe thread that causes the SIGSEGV is LWP 4187.\n\nFrom the GDB backtrace:\nThread 28 (Thread 1147427136 (LWP 4187)):\n...\n#5  <signal handler called>\n#6  0x00002aab3c277ad4 in allocator_free (allocator=0x2aab40065af0, node=0x2) at memory/unix/apr_pools.c:354\n#7  0x00002aab3c27822a in apr_pool_destroy (pool=0x2aab407c17f8) at memory/unix/apr_pools.c:798\n#8  0x00002aab3c03856f in Java_org_apache_tomcat_jni_Socket_destroy (e=0x2940998, o=0x446448d8, sock=46915009648744) at src/network.c:236\n\nFrom memory/unix/apr_pools.c, lines 350-354\n350     /* Walk the list of submitted nodes and free them one by one,\n351      * shoving them in the right 'size' buckets as we go.\n352      */\n353     do {\n354         next = node->next;\n\nLines 795-798\n795     /* Free all the nodes in the pool (including the node holding the\n796      * pool struct), by giving them back to the allocator.\n797      */\n798     allocator_free(allocator, active);\n\nFrom Tomcat native, src/network.c, lines 227-236\n227     apr_pool_cleanup_kill(s->pool, s, sp_socket_cleanup);\n228     if (s->net && s->net->cleanup) {\n229         (*s->net->cleanup)(s->opaque);\n230         s->net = NULL;\n231     }\n232     if (as) {\n233         apr_socket_close(as);\n234     }\n235 \n236     apr_pool_destroy(s->pool);\n\nI used diStorm to disassemble the instructions listed in the hotspot log file, which resulted in:\n      MOV RAX, [RBP-0x30]\nPC--> MOV RAX, [RAX]\nWhere RAX=0x0000000000000002\n\nIf there is anything else I can provide, please let me know.", "is_private": false, "bug_id": 44875, "id": 116075, "time": "2008-04-30T13:51:21Z", "creator": "paul.miner@gmail.com", "creation_time": "2008-04-30T13:51:21Z", "attachment_id": null}, {"count": 4, "tags": [], "creator": "paul.miner@gmail.com", "text": "Created attachment 21889\nBacktrace for the process after the crash.", "id": 116076, "time": "2008-04-30T13:52:06Z", "bug_id": 44875, "creation_time": "2008-04-30T13:52:06Z", "is_private": false, "attachment_id": 21889}, {"count": 5, "tags": [], "creator": "paul.miner@gmail.com", "attachment_id": 21890, "is_private": false, "id": 116077, "time": "2008-04-30T13:52:33Z", "bug_id": 44875, "creation_time": "2008-04-30T13:52:33Z", "text": "Created attachment 21890\nHotSpot error log for process 2968"}, {"count": 6, "tags": [], "text": "Created attachment 21891\nOutput of readelf on libapr-1.so.0.2.12", "is_private": false, "bug_id": 44875, "id": 116078, "time": "2008-04-30T13:53:21Z", "creator": "paul.miner@gmail.com", "creation_time": "2008-04-30T13:53:21Z", "attachment_id": 21891}, {"text": "Created attachment 21892\nnetwork.c from Tomcat 6.0.16", "tags": [], "bug_id": 44875, "attachment_id": 21892, "count": 7, "id": 116079, "time": "2008-04-30T13:54:06Z", "creator": "paul.miner@gmail.com", "creation_time": "2008-04-30T13:54:06Z", "is_private": false}, {"count": 8, "text": "> #6  0x00002aab3c277ad4 in allocator_free (allocator=0x2aab40065af0, node=0x2)\n                                                                      ^^^^^^^^\nLooks like something stomped over this. Maybe it's been freed already or something...", "bug_id": 44875, "attachment_id": null, "id": 116082, "time": "2008-04-30T18:35:05Z", "creator": "bojan@rexursive.com", "creation_time": "2008-04-30T18:35:05Z", "tags": [], "is_private": false}, {"count": 9, "tags": [], "creator": "mturk@apache.org", "attachment_id": null, "id": 116232, "time": "2008-05-04T23:35:28Z", "bug_id": 44875, "creation_time": "2008-05-04T23:35:28Z", "is_private": false, "text": "It's a bug caused by double free. The root of the problem\nis the fact that root pool on apr_terminate will destroy\nall subpools before calling cleanups.\nWith APR 1.3 we have two new pool functions, one\nfor registering pre-callbacks allowing to cleanly close everything\nbefore the pool is destroyed, and the other is to create detached\npools from the root pool. Since Java has its own GC, we can trust\nit will always destroy the pool when the object is destroyed.\n\nI'm closing this case in APR, cause its Tomcat Native problem,\nso you might reopen the issue in Tomcat.\nHowever the solution will be fully resolved once when we use 1.3 for TC native."}]