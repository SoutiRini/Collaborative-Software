[{"count": 0, "tags": [], "bug_id": 53822, "attachment_id": 29322, "id": 161929, "time": "2012-09-03T18:45:37Z", "creator": "nistor1@illinois.edu", "creation_time": "2012-09-03T18:45:37Z", "is_private": false, "text": "Created attachment 29322\npatchSmall.diff\n\n\"IdentityStack.containsAll(Collection coll)\" has a similar performance\nproblem as the previously fixed Bug 53622 (for\n\"VectorSet.retainAll(Collection coll)\").  The problem is that\n\"containsAll(Collection coll)\" performs \"this.contains(e.next())\",\nwhich is slow because \"this\" is an IdentityStack, i.e., a Vector, and\ntherefore \"contains\" is linear.\n\nI attached a patch (patchSmall.diff) similar to the one used by Jesse\nGlick in Bug 53622.  I attached an improved patch (patchFull.diff)\nthat builds the IdentityHashMap lazily, which gives slightly better\nperformance than patchSmall.diff (which builds IdentityHashMap\neagerly).  I also attached a test that exposes this problem.  For this\ntest, patchSmall.diff provides a 676X speedup on my machine.\n\nTo run the test, just do:\n\n$ java Test\n\nThe output for the un-patched version is:\nTime is 17572\n\nThe output for the patched version is:\nTime is 26"}, {"count": 1, "tags": [], "text": "Created attachment 29323\npatchFull.diff", "attachment_id": 29323, "id": 161930, "creator": "nistor1@illinois.edu", "time": "2012-09-03T18:45:58Z", "bug_id": 53822, "creation_time": "2012-09-03T18:45:58Z", "is_private": false}, {"count": 2, "tags": [], "text": "Created attachment 29324\ntest", "attachment_id": 29324, "id": 161931, "creator": "nistor1@illinois.edu", "time": "2012-09-03T18:46:29Z", "bug_id": 53822, "creation_time": "2012-09-03T18:46:29Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 53822, "attachment_id": null, "id": 172026, "time": "2014-01-02T14:38:11Z", "creator": "bodewig@apache.org", "creation_time": "2014-01-02T14:38:11Z", "is_private": false, "text": "svn revision 1554813"}]