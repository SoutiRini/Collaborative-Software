[{"count": 0, "tags": [], "bug_id": 50940, "attachment_id": null, "id": 145050, "time": "2011-03-17T06:23:56Z", "creator": "richard.evans@datanomic.com", "creation_time": "2011-03-17T06:23:56Z", "is_private": false, "text": "The compilerSourceVM option for jsp in web.xml is used to set the source language version.  We are testing with Tomcat 7 but wish to ensure that all our JSPs will work in application servers which use a source level of 1.4 (such as WebSphere 6).\n\nIf the compilerSourceVM option is set to 1.4, JSPs fail to compile because Jasper has generating Java including generics, for example:\n\n  private static java.util.List<java.lang.String> _jspx_dependants;"}, {"count": 1, "tags": [], "creator": "markt@apache.org", "text": "The Servlet 3.0 specification requires a minimum of Java 1.6.", "id": 145051, "time": "2011-03-17T06:53:17Z", "bug_id": 50940, "creation_time": "2011-03-17T06:53:17Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "creator": "richard.evans@datanomic.com", "attachment_id": null, "id": 145052, "creation_time": "2011-03-17T06:58:15Z", "time": "2011-03-17T06:58:15Z", "bug_id": 50940, "text": "(In reply to comment #1)\n> The Servlet 3.0 specification requires a minimum of Java 1.6.\n\nThat's fine, but then the compilerSourceVM option should be removed.  I do not wish to run tomcat with anything other than Java 1.6+, I'd just like a mechanism to verify that our JSPs do not use language features after 1.4 - hence trying the compilerSourceVM as I did with tomcat 6.0.x.", "is_private": false}, {"count": 3, "tags": [], "text": "The actual minimum source version for JSPs in Tomcat 7 is currently 1.5.\n\nThe options are:\n- remove the generics from the JSP generation\n- warn if compilerSourceVM is set to anything less than 1.5 and reset it to 1.5\n\nRe-opening to consider the options", "attachment_id": null, "bug_id": 50940, "id": 145053, "time": "2011-03-17T07:02:55Z", "creator": "markt@apache.org", "creation_time": "2011-03-17T07:02:55Z", "is_private": false}, {"count": 4, "tags": [], "creator": "knst.kolinko@gmail.com", "attachment_id": null, "id": 145057, "time": "2011-03-17T08:18:25Z", "bug_id": 50940, "creation_time": "2011-03-17T08:18:25Z", "is_private": false, "text": "I do not think that this is a valid use case. Note, that\n1) JSP precompilation makes sense only for precisely the same Tomcat version that you are targeting it. There is not much guarantee that precompiled JSPs will work in another minor Tomcat version.\n2) The servlet API already uses generics (as in ServletRequest. getAttributeNames() method) and annotations.\n\nIf you want your JSPs to work in another servers or in earlier versions of Tomcat, try those another servers.\n\n\n(In reply to comment #3)\n> - remove the generics from the JSP generation\n\nI do not see why we should that, given that the API uses Java 5 features.\n\n> - warn if compilerSourceVM is set to anything less than 1.5\n\nThe failure reported by compiler already prevents users from setting those values. (As the OP has reported).\n\n> and reset it to 1.5\n\nI do not see the need to autocorrect broken configurations in this case.\n\n(In reply to comment #2)\n> That's fine, but then the compilerSourceVM option should be removed.\n\nI do not think that one has to remove it. E.g., if you are using Java 7 features in your scriptlets in your JSPs and are deploying on a Tomcat that runs on Java 7 you would want to set that option to the value of \"7\". (If the ecj compiler will support that value by that time)."}, {"count": 5, "tags": [], "bug_id": 50940, "text": "On reflection, I agree with Konstantin.", "id": 145103, "time": "2011-03-19T06:31:35Z", "creator": "markt@apache.org", "creation_time": "2011-03-19T06:31:35Z", "is_private": false, "attachment_id": null}]