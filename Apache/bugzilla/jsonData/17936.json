[{"count": 0, "tags": [], "text": "There is a bug in the mod_negotiation module of Apache httpd where it is \nincorrectly returning HTTP status 200 and content when receiving a browser \nclient request that contains restricted Accept headers, when the correct web \nserver response should be a HTTP status 406.\n\nFor example using the HTTP client request header of\n\nGET /images/asf_logo_wide.gif HTTP/1.1\nUser-Agent: Mozilla/4.0 [en] ()\nAccept: text/*\nConnection: keep-alive\nHost: www.apache.org\n\n(note www.apache.org is a 2.x based server, but this defect does apply to \n1.3.27 and other 1.3.x versions)\n\nThe httpd web server should return a HTTP STATUS 406 because the .gif is \nassociated with image/gif and does not match the HTTP client's Accept \ncriteria.  Instead, Apache httpd currently responds with a HTTP STATUS 200 with \nthe gif file's binary content.\n\nAssociated references:\nHTTP 1.1, rfc2616 Section 14\nhttp://www.ietf.org/rfc/rfc2616.txt \nhttp://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html\nand Apache negotiation algorithm in\nhttp://httpd.apache.org/docs/content-negotiation.html", "is_private": false, "bug_id": 17936, "id": 33087, "time": "2003-03-12T22:32:27Z", "creator": "freqout@speakeasy.net", "creation_time": "2003-03-12T22:32:27Z", "attachment_id": null}, {"count": 1, "tags": [], "text": "Related Apache httpd-2.x based bug # 17937", "attachment_id": null, "bug_id": 17936, "id": 33089, "time": "2003-03-12T22:37:15Z", "creator": "freqout@speakeasy.net", "creation_time": "2003-03-12T22:37:15Z", "is_private": false}, {"count": 2, "tags": [], "text": "You're requesting a non-negotiated resource. Therefore negotiation rules don't\napply.\n\nThanks for your care anyway and thanks for using Apache.", "attachment_id": null, "bug_id": 17936, "id": 33094, "time": "2003-03-12T23:11:28Z", "creator": "nd@perlig.de", "creation_time": "2003-03-12T23:11:28Z", "is_private": false}, {"text": "Andre, I'm afraid you'll have to go into more detail concerning non-negotiated \nresource.  There is no mention of non-negotiated resources in either RFC 2616 \nor the Apache content negotiation documentation.  If you could point me towards \ndocumentation, or show me an example where Apache correctly returns the 406, \nthat would be really helpful.\n\nI would also like to point out the Apache negotiation documentation concerning \nthis issue.\n-------------------------< SNIP >-------------------------------------------\nApache Negotiation Algorithm\nApache can use the following algorithm to select the 'best' variant (if any) to \nreturn to the browser. This algorithm is not further configurable. It operates \nas follows:\n\nFirst, for each dimension of the negotiation, check the appropriate Accept* \nheader field and assign a quality to each variant. If the Accept* header for \nany dimension implies that this variant is not acceptable, eliminate it. If no \nvariants remain, go to step 4. \nSelect the 'best' variant by a process of elimination. Each of the following \ntests is applied in order. Any variants not selected at each test are \neliminated. After each test, if only one variant remains, select it as the best \nmatch and proceed to step 3. If more than one variant remains, move on to the \nnext test. \nMultiply the quality factor from the Accept header with the quality-of-source \nfactor for this variant's media type, and select the variants with the highest \nvalue. \nSelect the variants with the highest language quality factor. \nSelect the variants with the best language match, using either the order of \nlanguages in the Accept-Language header (if present), or else the order of \nlanguages in the LanguagePriority directive (if present). \nSelect the variants with the highest 'level' media parameter (used to give the \nversion of text/html media types). \nSelect variants with the best charset media parameters, as given on the Accept-\nCharset header line. Charset ISO-8859-1 is acceptable unless explicitly \nexcluded. Variants with a text/* media type but not explicitly associated with \na particular charset are assumed to be in ISO-8859-1. \nSelect those variants which have associated charset media parameters that are \nnot ISO-8859-1. If there are no such variants, select all variants instead. \nSelect the variants with the best encoding. If there are variants with an \nencoding that is acceptable to the user-agent, select only these variants. \nOtherwise if there is a mix of encoded and non-encoded variants, select only \nthe unencoded variants. If either all variants are encoded or all variants are \nnot encoded, select all variants. \nSelect the variants with the smallest content length. \nSelect the first variant of those remaining. This will be either the first \nlisted in the type-map file, or when variants are read from the directory, the \none whose file name comes first when sorted using ASCII code order. \nThe algorithm has now selected one 'best' variant, so return it as the \nresponse. The HTTP response header Vary is set to indicate the dimensions of \nnegotiation (browsers and caches can use this information when caching the \nresource). End. \nTo get here means no variant was selected (because none are acceptable to the \nbrowser). Return a 406 status (meaning \"No acceptable representation\") with a \nresponse body consisting of an HTML document listing the available variants. \nAlso set the HTTP Vary header to indicate the dimensions of variance.\n-------------------------< SNIP >-------------------------------------------\n\nFollowing the negotiation algorithm above (and I must say kudos to Apache for \nproviding this document) you do step 1, in which you discover that there is no \nmaching Accept type, and must go to step 4, which states that a 406 should be \nreturned.\n\n\n", "tags": [], "bug_id": 17936, "is_private": false, "count": 3, "id": 33121, "time": "2003-03-13T16:00:04Z", "creator": "freqout@speakeasy.net", "creation_time": "2003-03-13T16:00:04Z", "attachment_id": null}, {"count": 4, "tags": [], "creator": "nd@perlig.de", "attachment_id": null, "text": "I know the docs ;-)\n\nBut it's a simple answer: mod_negotiation is not involved in the request.\nMultiviews apply, if and only if the requested resource does not map exactly to\na file (or directory), i.e. if the server would return a 404 otherwise (also\ndescribed in the docs somewhere)\ntype maps apply if the requested (existing) file is handled by the type-map handler.\n\nSo if you're explicitely requesting an existing resource, which isn't magically\nnegotiated (type-maps), mod_negotiation feels not responsible for the request.\nNo bug.\n\nThis is, by the way, the only way it can work. Consider, for example, the\nfollowing situation:\n\n- request with Accept: something\n-> response 406 with a list of available variants.\n-> user explicitely selects one variant but _doesn't_ change his Accept-Header\n-> response 406? no. ignore Accept-Header, because it is an explicitely\nrequested resource which has no alternative variants.", "id": 33126, "time": "2003-03-13T16:27:04Z", "bug_id": 17936, "creation_time": "2003-03-13T16:27:04Z", "is_private": false}, {"text": "Thank you for your quick response Andr\u00e9.\nOngoing, I'll just update this bug rather than have us go back and forth with \nthe same stuff on both bugs.  17937 references this bug, and that is enough.\n\nYour premise is that negotiation will not be invoked if there exists only one \nresource for the requested file, and that the correct thing would be to return \nthe requested file, disregarding the client's Accept headers.  It would help me \nto accept this, if you could show some public documentation that would back \nthis type of response.  I have done my best to comb through relevant \ndocumentation, and to do searches for non-negotiation criteria.\n\nI'm going to take some time to research this some more, while also discussing \nit with others.  I'm afraid that I'm still not convinced that Apache httpd is \nexhibiting the correct behavior.  Although, I will submit that I have seen both \nbehaviors in other web servers.  IIS does return a HTTP 406, and I admit that \nthat does not make it \"correct\".  Apache Tomcat (coyote) does the same as \nApache httpd, but coming from the same group that is not a surprise.  However, \nwhen this is compounded by SUN's Enterprise web server also not returning a \nHTTP 406, I must then be able to supply further evidence that would support \nreturning HTTP 406 in this case.\n\n", "tags": [], "bug_id": 17936, "is_private": false, "count": 5, "id": 33134, "time": "2003-03-13T18:27:39Z", "creator": "freqout@speakeasy.net", "creation_time": "2003-03-13T18:27:39Z", "attachment_id": null}, {"count": 6, "tags": [], "bug_id": 17936, "is_private": false, "text": "Ok Andr\u00e9, I made your case for you.\n\nAccording to rfc2616\n-----------------------------< snip >--------------------------------------\n10.4.7 406 Not Acceptable\n\n   The resource identified by the request is only capable of generating\n   response entities which have content characteristics not acceptable\n   according to the accept headers sent in the request.\n\n   Unless it was a HEAD request, the response SHOULD include an entity\n   containing a list of available entity characteristics and location(s)\n   from which the user or user agent can choose the one most\n   appropriate. The entity format is specified by the media type given\n   in the Content-Type header field. Depending upon the format and the\n   capabilities of the user agent, selection of the most appropriate\n   choice MAY be performed automatically. However, this specification\n   does not define any standard for such automatic selection.\n\n      Note: HTTP/1.1 servers are allowed to return responses which are\n      not acceptable according to the accept headers sent in the\n      request. In some cases, this may even be preferable to sending a\n      406 response. User agents are encouraged to inspect the headers of\n      an incoming response to determine if it is acceptable.\n\n   If the response could be unacceptable, a user agent SHOULD\n   temporarily stop receipt of more data and query the user for a\n   decision on further actions.\n-----------------------------< snip >--------------------------------------\n\nThe important part there is the \"Note:\", where it does specify that a server is \nallowed to return the resource even though it does not match the Accept header, \nand thus it is left up to the client to reject the resource based on the \nreturned headers which hopefully will send the correct content type.\n\nI still think this is an unfortunate flaw in the specification, but I agree \nthat is cannot be considered a Apache httpd flaw, only an implementation choice.\n", "id": 33199, "time": "2003-03-14T16:47:11Z", "creator": "freqout@speakeasy.net", "creation_time": "2003-03-14T16:47:11Z", "attachment_id": null}, {"count": 7, "tags": [], "text": "Thanks for your update. I think we can safely close that bug now :)", "is_private": false, "bug_id": 17936, "id": 33420, "time": "2003-03-19T09:27:30Z", "creator": "nd@perlig.de", "creation_time": "2003-03-19T09:27:30Z", "attachment_id": null}]