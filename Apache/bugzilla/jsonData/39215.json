[{"count": 0, "tags": [], "bug_id": 39215, "attachment_id": null, "id": 87601, "time": "2006-04-05T12:04:57Z", "creator": "ieb@tfd.co.uk", "creation_time": "2006-04-05T12:04:57Z", "is_private": false, "text": "A patch to RtfExternalImage to convert GIF to PNG using javax.image.ImageIO"}, {"count": 1, "attachment_id": 18026, "creator": "ieb@tfd.co.uk", "is_private": false, "id": 87603, "time": "2006-04-05T12:06:24Z", "bug_id": 39215, "creation_time": "2006-04-05T12:06:24Z", "tags": [], "text": "Created attachment 18026\nPatch to RtfExternalImage"}, {"count": 2, "attachment_id": null, "creator": "jeremias@apache.org", "is_private": false, "id": 87604, "time": "2006-04-05T13:07:15Z", "bug_id": 39215, "creation_time": "2006-04-05T13:07:15Z", "tags": [], "text": "Thanks for the patch, Ian. However, there's a fundamental problem with it: It\ngenerates a dependency on JDK 1.4 or later due to the use of ImageIO. FOP must,\nfor the time being, remain compatible with JDK 1.3. FOP's image package contains\nadapters to several image libraries which can read GIF images. The problem is\nthat you cannot easily use them for this particular use case because they\ncurrently create a decoded bitmap image as a byte array. It would have to be\nconverted into a BufferedImage and then written to a PNG through the ImageWriter\ninterface provided by XML Graphics Commons\n(http://svn.apache.org/viewcvs.cgi/xmlgraphics/commons/trunk/src/java/org/apache/xmlgraphics/image/writer/).\n\nI've started documenting requirements for an improved image adapter package:\nhttp://wiki.apache.org/xmlgraphics-fop/ImageSupport. But that's probably for\nlater since this will take some time to implement properly."}, {"count": 3, "tags": [], "bug_id": 39215, "text": "Is it Ok to use JAI to build the BufferedImage ?", "id": 87606, "time": "2006-04-05T14:08:43Z", "creator": "ieb@tfd.co.uk", "creation_time": "2006-04-05T14:08:43Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "text": "(In reply to comment #3)\n> Is it Ok to use JAI to build the BufferedImage ?\n\nHmm, well, it's practically the same problem as with ImageIO. You create a\ndirect dependency which forces people to have JAI installed. Using the image\nadapters decouples the image loading from the underlying image library/codec. It\nallows one to use JAI, the other to use ImageIO to load the image. Sorry that\nit's so complicated but dependency handling is always a touchy topic.", "attachment_id": null, "bug_id": 39215, "id": 87607, "time": "2006-04-05T14:19:00Z", "creator": "jeremias@apache.org", "creation_time": "2006-04-05T14:19:00Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 39215, "text": "Patch is now obsolete since the mentioned image conversion has been implemented by Jeremias.", "id": 129938, "time": "2009-08-26T01:28:58Z", "creator": "max@berger.name", "creation_time": "2009-08-26T01:28:58Z", "is_private": false, "attachment_id": null}, {"count": 6, "tags": [], "bug_id": 39215, "attachment_id": null, "id": 155888, "time": "2012-04-01T06:46:51Z", "creator": "gadams@apache.org", "creation_time": "2012-04-01T06:46:51Z", "is_private": false, "text": "batch transition pre-FOP1.0 resolved+fixed bugs to closed+fixed"}]