[{"count": 0, "tags": [], "bug_id": 48018, "attachment_id": null, "id": 131190, "time": "2009-10-17T05:29:53Z", "creator": "ashokkumar755@yahoo.com", "creation_time": "2009-10-17T05:29:53Z", "is_private": false, "text": "Please check List level processing in Class org.apache.poi.hwpf.model.ListLevel.\n \nI think it needs to be changed to copy character formatting (_grpprlChpx) first followed by paragraph formatting(_grpprlPapx).\n\n/* Change to copy _grpprlChpx first and then _grpprlPapx */\nSystem.arraycopy(buf, offset, _grpprlChpx, 0, _cbGrpprlChpx);\noffset += _cbGrpprlChpx;\n\nSystem.arraycopy(buf, offset, _grpprlPapx, 0, _cbGrpprlPapx);\noffset += _cbGrpprlPapx;\n\n/* Change Ends */\n\nLooks like this bug is carried over from the MS Word (97-2007) Binary File format specification (page 47-48)."}, {"count": 1, "tags": [], "bug_id": 48018, "text": "On second thought may be the actual problem is in method ListLevel.toByteArray rather than in the ListLevel constructor method. \n\nMethod ListLevel.toByteArray() needs to be changed for copying _grpprlPapx first and then copy _grpprlChpx into the buffer (buf). This fixes the paragraph/character formatting issues with list processing.", "id": 131201, "time": "2009-10-18T08:52:27Z", "creator": "ashokkumar755@yahoo.com", "creation_time": "2009-10-18T08:52:27Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 48018, "attachment_id": 24401, "id": 131247, "time": "2009-10-20T11:47:02Z", "creator": "ashokkumar755@yahoo.com", "creation_time": "2009-10-20T11:47:02Z", "is_private": false, "text": "Created attachment 24401\nFix multiple list processing bug in ListTables.java"}, {"count": 3, "tags": [], "creator": "ashokkumar755@yahoo.com", "attachment_id": 24402, "text": "Created attachment 24402\nFix Character/Paragraph formatting problem in ListLevel.java", "id": 131248, "time": "2009-10-20T11:48:12Z", "bug_id": 48018, "creation_time": "2009-10-20T11:48:12Z", "is_private": false}, {"count": 4, "tags": [], "text": "There is another related bug in Class ListTables which causes discrepancy in the way MS Word displays multiple lists in a document. Most of the time Word replaces bullets of 2nd and subsequent lists in the document, with bullets retrieved from the first LSTF/LVLF records. \n\nThis seems to occur due to re-ordering of ListData(LSTF/LVLF) when it is read into a HashMap (_listMap) in ListTables constructor method and then written back to the word document in method writeListDataTo(). \n\nEven though the  MS Word (97-2007) Binary File format specification (Paragraph List Formatting, page 48, point 3) states that the LSTF record will be identified with \"List id\" from corresponding LFO record by searching, this doesn't seem to happen inside Word, still there is some dependency on the original order of LSTF/LVLF records.  \n\nThis is fixed in the attached ListTables.java source with the use of a ArrayList (_ListArr) in the Constructor and writeListDataTo methods in place of the HashMap (_ListMap).\n\nAlso attached is the changed ListLevel.java (method toByteArray()) source for fixing the Character/Paragraph formatting errors.", "is_private": false, "id": 131249, "creator": "ashokkumar755@yahoo.com", "time": "2009-10-20T11:48:56Z", "bug_id": 48018, "creation_time": "2009-10-20T11:48:56Z", "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 48018, "attachment_id": null, "id": 131282, "time": "2009-10-21T14:44:36Z", "creator": "josh@apache.org", "creation_time": "2009-10-21T14:44:36Z", "is_private": false, "text": "Rather than just making arbitrary changes to the code, it would be nice to have some additional justification - junits are usually a good start.  Can you give details as to how the current code causes errors?\n\nI understand very little about the code that you are changing, but there seems to be a few outstanding issues in your patch that either need fixing or explaining.\n\nListLevel.java\n\nProblems with the order of field serialisation.\n\nthe current order is:\n<init>()      { .., cbGrpprlChpx, cbGrpprlPapx, .., grpprlPapx, grpprlChpx, .. }\ntoByteArray() { .., cbGrpprlChpx, cbGrpprlPapx, .., grpprlChpx, grpprlPapx, .. }\n\nbut you suggest:\n<init>()      { .., cbGrpprlPapx, cbGrpprlChpx, .., grpprlPapx, grpprlChpx, .. }\ntoByteArray() { .., cbGrpprlPapx, cbGrpprlChpx, .., grpprlPapx, grpprlChpx, ..  }\n\nSo the patch does the exact opposite of what you describe in (comment 0) which suggests the correct code should be 'Ch' before 'Pa'.  Note - the ordering in the current code is internally inconsistent at lines 106-109 (the only place that currently has 'Pa' before 'Ch').  Perhaps this is the one place you wanted to change.\n\nI am pretty sure that the proposed change at line 122 makes no difference:\n-    _numberText[x] = (char)LittleEndian.getShort(buf, offset);\n+    _numberText[x] = (char)LittleEndian.getUShort(buf, offset);\n\n\nListTables.java\n\nYou've made a new field _listArr which seems to store the same data as _listMap.   Around line 106 should there be an extra line added, similar to what you have done at line 62?\n     _listMap.put(new Integer(lsid), lst);\n+    _listArr.add(lst);\n\nIt would also be good to add a comment explaining why you're forcing the ListData objects to be serialised in the same order they were read in.\n\n\n\nLastly, can you make your changes with respect to the latest code from trunk?  Your original change seems to be from prior to svn r805492 .  Try composing the patch using \"svn diff\" or \"git diff\".  Patch/diff files are easier to manage."}, {"count": 6, "tags": [], "text": "Hi Josh,\nThanks for replying. I'll try to give the requested information in the appropriate format shortly.  But in the meanwhile to clear up your understanding of the problem I will re-state it again:\n\n1. ListLevel.java: \n   Only issue here is in the toByteArray() method, field grpprlPapx need to be \n   copied before grpprlChpx into buf. Please ignore any other changes that you \n   found in the code.\n\n2. ListTables.java \n   Here again the only problem I faced is with multiple lists, Word was not \n   displaying the lists consistently it was showing bullets and formatting from \n   the first list (in LSTF/LVLF records) for most of the other lists. This I \n   found out while testing is caused due to re-ordering of LSTF/LVLF records \n   when using a HashMap. With the ArrayList (as the order is preserved) the \n   Word is displaying all the lists as expected.\n\nLastly I am using source takens out of poi-src-3.5-FINAL-20090928.zip.\n\nThanks Again.", "attachment_id": null, "bug_id": 48018, "id": 131291, "time": "2009-10-22T01:25:07Z", "creator": "ashokkumar755@yahoo.com", "creation_time": "2009-10-22T01:25:07Z", "is_private": false}, {"count": 7, "tags": [], "bug_id": 48018, "text": "Hi Josh,\nThanks for replying. I'll try to give the requested information in the appropriate format shortly.  But in the meanwhile to clear up your understanding of the problem I will re-state it again:\n\n1. ListLevel.java: \n   Only issue here is in the toByteArray() method, field grpprlPapx need to be \n   copied before grpprlChpx into buf. Please ignore any other changes that you \n   found in the code.\n\n2. ListTables.java \n   Here again the only problem I faced is with multiple lists, Word was not \n   displaying the lists consistently it was showing bullets and formatting from \n   the first list (in LSTF/LVLF records) for most of the other lists. This I \n   found out while testing is caused due to re-ordering of LSTF/LVLF records \n   when using a HashMap. With the ArrayList (as the order is preserved) the \n   Word is displaying all the lists as expected.\n\nLastly I am using source taken out of poi-src-3.5-FINAL-20090928.zip.\n\nThanks Again.", "id": 131292, "time": "2009-10-22T01:26:22Z", "creator": "ashokkumar755@yahoo.com", "creation_time": "2009-10-22T01:26:22Z", "is_private": false, "attachment_id": null}, {"count": 8, "tags": [], "bug_id": 48018, "attachment_id": null, "id": 139981, "creation_time": "2010-09-20T11:23:14Z", "time": "2010-09-20T11:23:14Z", "creator": "apache@gagravarr.org", "text": "I believe this has been fixed in r998943, along with lots of unit tests that seem to show everything working fine.\n\nIf the problem still remains, please re-open the bug, and ideally upload a failing unit test that shows the problem.", "is_private": false}]