[{"count": 0, "tags": [], "creator": "tixu@cs.ucsd.edu", "attachment_id": null, "id": 154507, "time": "2012-03-04T22:19:55Z", "bug_id": 52824, "creation_time": "2012-03-04T22:19:55Z", "is_private": false, "text": "This is not a duplicate bug of 52823 (https://issues.apache.org/bugzilla/show_bug.cgi?id=52823)\n\nThe confusion comes from the weird relationship between AllowOverride and AllowOverrideList. Take a look at the example in the manual:\n\nhttp://httpd.apache.org/docs/2.4/mod/core.html#allowoverridelist\n\n-----\n\nExample:\n\nAllowOverride AuthConfig\nAllowOverrideList CookieTracking CookieName\n\nIn the example above AllowOverride grants permission to the AuthConfig directive grouping and AllowOverrideList grants permission to only two directves from the FileInfo directive grouping. All others will cause an internal server error.\n\n-----\n\nIt clearly tells that AuthConfig group as well as CookieTracking and CookieName are allowed in the .htaccess files.\n\nHowever, if you put directives of the AuthConfig group, you will get error messages in the error log and Apache will not parse these directives.\n\nSo, this is completely wrong according to the manual. Or, manual is completely wrong?\n\nIf you trace the source code, the AllowOverrideList maintains a table (override_list) which is in the core_dir_config structure. All the parameters of AllowOverrideList are set in this table.\n\nWhen parsing a .htaccess file, before calling invoke_cmd(), Apache checks whether cmd->name is in this table. If not, it will go to an error return no matter whether this cmd's group is allowed in AllowOverride.    \n\nThe code is shown as follows:\n\n-----\n\nstatic const char *invoke_cmd(const command_rec *cmd, cmd_parms *parms,\n                              void *mconfig, const char *args)\n{\n    ......\n\n    /** Have we been provided a list of acceptable directives? */\n    if(parms->override_list != NULL)\n         if(apr_table_get(parms->override_list, cmd->name) != NULL)\n               override_list_ok = 1;\n\n    if ((parms->override & cmd->req_override) == 0 && !override_list_ok)\n        if (parms->override & NONFATAL_OVERRIDE) {\n            ap_log_perror(APLOG_MARK, APLOG_WARNING, 0, parms->temp_pool,\n                          APLOGNO(02295)\n                          \"%s in .htaccess forbidden by AllowOverride\",\n                          cmd->name);\n            return NULL;\n        }\n        else {\n            return apr_pstrcat(parms->pool, cmd->name,\n                               \" not allowed here\", NULL);\n        }\n    }\n    //invoke the corresponding directive function\n    ...\n}\n\n-----\n\nMy test case is to put the following configuration entries into the httpd.conf\n\n-----\n\n#in httpd.conf\n#both the Indexes group and AuthDBMGroupFile should be allowed\n<Directory />\n    AllowOverride Indexes\n    AllowOverrideList AuthDBMGroupFile\n</Directory>\n\n-----\n\nThen, put a .htaccess file in the DocumentRoot directory with the following lines:\n\n-----\n\n#DirectoryIndex is a directory in the Indexes group according to the manual\nDirectoryIndex index.html\n\n----- \n\nStart the httpd server and use browser to access:\n\nipaddress:port/documentroot/file\n\nYou will get the error log message in the error log:\n\n[Sun Mar 04 13:09:27.492655 2012] [core:alert] [pid 24509:tid 140634204722944] [client 132.239.17.127:57257] /home/tianyin/apache-2.4.1/htdocs/.htaccess: DirectoryIndex not allowed here\n\n\nThanks a lot!"}, {"count": 1, "tags": [], "creator": "sf@sfritsch.de", "attachment_id": null, "is_private": false, "id": 155076, "time": "2012-03-19T21:39:39Z", "bug_id": 52824, "creation_time": "2012-03-19T21:39:39Z", "text": "I can't reproduce this with your example config. Maybe you have another AllowOverrideList line in your config that overrides the one with AuthDBMGroupFile?\n\nAnd I think the code is ok: If the AllowOverride from parms->override does not match and we don't have a match from AllowOverrideList (override_list_ok), we get an error. If any of the two matches, we don't get an error."}, {"count": 2, "tags": [], "text": "(In reply to comment #1)\n> I can't reproduce this with your example config. Maybe you have another\n> AllowOverrideList line in your config that overrides the one with\n> AuthDBMGroupFile?\n> \n> And I think the code is ok: If the AllowOverride from parms->override does not\n> match and we don't have a match from AllowOverrideList (override_list_ok), we\n> get an error. If any of the two matches, we don't get an error.\n\nHi, Stefan, \n\nThanks a lot for the response!\n\nI do not have another AllowOverride or AllowOverrideList, and I replayed it.\nThe point here is not the AuthDBMGroupFile but the DirectoryIndex.\n\nTo make the thing more clear, let me explain a bit more.\n\n(1) According to the example in AllowOverrideList\nhttp://httpd.apache.org/docs/2.4/mod/core.html#allowoverridelist\n\nThe following setting should allow two things: (1) Allow the Indexes directive grouping; (2) the AuthDBMGroupFile directive which is in the AuthConfig grouping.\n\n<Directory />\n    AllowOverride Indexes\n    AllowOverrideList AuthDBMGroupFile\n</Directory>\n\n(2) According to the description of AllowOverride:\nhttp://httpd.apache.org/docs/2.4/mod/core.html#allowoverride\n\nDirectoryIndex belongs to the Indexes grouping.\n\nSo, having (1) and (2), I suppose the DirectoryIndex directive should be allowed in the .htaccess in the /. However, it is not allowed with the error message shown in the last email. This is verified by the code logic: the DirectoryIndex passed the AllowOverride checking but failed in the AllowOverrrideList checking (i.e., the code\u3000snippets I showed in the previous email).\n\nAm I right, Stefan? Or I misunderstood sth? Please let me know :-)", "attachment_id": null, "id": 155078, "creation_time": "2012-03-19T23:16:09Z", "time": "2012-03-19T23:16:09Z", "creator": "tixu@cs.ucsd.edu", "bug_id": 52824, "is_private": false}, {"count": 3, "tags": [], "creator": "covener@gmail.com", "is_private": false, "text": "I was not able to reproduce the behavior either.", "id": 160577, "time": "2012-07-11T01:59:17Z", "bug_id": 52824, "creation_time": "2012-07-11T01:59:17Z", "attachment_id": null}]