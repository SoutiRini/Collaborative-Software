[{"count": 0, "tags": [], "bug_id": 21390, "text": "Hi,\n\nThis problem seems to have started with the 4.1 release of tomcat.\nIt was working fine in 4.0.\nI have 2 tags on a jsp page.\nBoth of them expose variables with the same name and this results in the jsp\ncompiler from 4.1 and above giving the follwing compilation error.\n\nGenerated servlet error:\n    [javac] Compiling 1 source file\n\nC:\\apps\\jakarta-tomcat-5.0.3\\work\\Catalina\\localhost\\oracletest\\org\\apache\\jsp\\test_jsp.java:95:\ncannot resolve symbol\nsymbol  : variable Message \nlocation: class org.apache.jsp.test_jsp\n      Message = (String) pageContext.findAttribute(\"Message\");\n      ^\n\n\n\nAn error occurred at line: 17 in the jsp file: /test.jsp\n\nGenerated servlet error:\nC:\\apps\\jakarta-tomcat-5.0.3\\work\\Catalina\\localhost\\oracletest\\org\\apache\\jsp\\test_jsp.java:96:\ncannot resolve symbol\nsymbol  : variable prop \nlocation: class org.apache.jsp.test_jsp\n      prop = (test.TempProperties) pageContext.findAttribute(\"prop\");\n      ^\n\n\n\nAn error occurred at line: 19 in the jsp f\n\n\nThe following is the jsp page\n\n\n<%@ taglib uri=\"/test\" prefix=\"test\" %>\n\n<%\nint i = 0;\n{\n%>\n\t<test:test/>\n\nMessage 1: <%= Message %><br>\n<%= prop.getProperty(\"one\") %><br>\n\n<%\n}\n\n{\n%>\n\t<test:test1/>\n\nMessage 2: <%= Message %><br>\n<%= prop.getProperty(\"two\") %>\n<%\n}\n%>\n\n\nI can send you a zip file containing the entire web application so that you can\ncheck this out.\n\nCan you please let me know, since this is a serious regression according to me.\n\n\nThanks,\n\n\nRoshan", "id": 40136, "time": "2003-07-08T02:34:55Z", "creator": "rail@actuate.com", "creation_time": "2003-07-08T02:34:55Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 21390, "text": "Created attachment 7144\nA sample application which reports the error in tomcat 4.1 and up", "id": 40137, "time": "2003-07-08T02:48:05Z", "creator": "rail@actuate.com", "creation_time": "2003-07-08T02:48:05Z", "is_private": false, "attachment_id": 7144}, {"count": 2, "tags": [], "bug_id": 21390, "text": "The following JSP page also generates a compile error when added to Roshan's \nsample application:\n\n<%@ taglib uri=\"/test\" prefix=\"test\" %>\n\n<%\n/*\n%>\n<test:test/>\n<%\n*/\n%>\n<test:test1/>\n\nThe problem with both these pages is that the logic in \nScriptingVariableVisitor that determines which scripting variables each custom \ntag declares doesn't consider the effect of the page's scripting elements.  \nThat can be fixed, but on the other hand I can't find anything in the JSP 2.0 \nspec which says scripting variable declarations are optional, except in the \ntrivial case where the variable would not be accessible in the context in \nwhich it were declared, which doesn't apply here.  Should Japser perhaps just \ndeclare all scripting variables, and leave it to page and tag library authors \nto prevent conflicts?", "id": 41123, "time": "2003-07-22T01:27:00Z", "creator": "ecarmich@alumni.rice.edu", "creation_time": "2003-07-22T01:27:00Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "creator": "kin-man.chung@sun.com", "attachment_id": null, "text": "Both JSP 1.2 and JSP 2.0 do not address this issue adequately.  I have talked\nwith JSP 2.0 spec lead, and we are also leaning towards declaring all scripting\nvariables.  Any attempt to \"fix\" multiple definition errors (like what Japser is\ndoing now) will fail, in cases such as this.  So I am in favor of removing this\nfunctionality from Japser.  This amounts to removing ScriptingVariabler.java and\nsome codes from Generator.java.  I also like the fact that Jasper also will be\nsimpler as a result.  :-)\n\nThe only problem is we may break applications that depend on it.  The workaround\nfor simple case like\n\n\t<test:test1/>\n\t<test:test1/>\n\nis to include a <%= { %> and <%= } %> around the tag invokation.  But\nthere is no wrokaround for nested tags\n\n\t<test:test1>\n\t    <test:test1/>\n\t</test:test1>\n\nbecause Java language does not allow the a variable be declared in a block when\na variable of the same name has already been declared in an outer block.  Is it\nOK for us to say tough, the tag handlers cannot be nested when there are\nscripting variables?  I don't know.\n\nMaybe the only solution is for the taglib designer to include an attribute for\nspecifying the name of the scripting variable.  So in the the nested case, one\ncan say\n\n\t<test:test1 var=\"var1\">\n\t    <test:test1 var=\"var2\"/>\n\t</test:test1>\n\nto manually avoid Javac errors.\n\nJSP 2.0 is discouraging the use of scripting variable and is encouraginging the\nuse of EL, partly because of issues like this.\n\nBTW, when you write\n\n<% /* %> <test:test/> <% */ %>\n\nyou are assuming that a comment is not generated for <test:test/>.  This may not\nbe true in general.", "id": 43462, "time": "2003-08-28T23:14:27Z", "bug_id": 21390, "creation_time": "2003-08-28T23:14:27Z", "is_private": false}, {"count": 4, "tags": [], "creator": "rail@actuate.com", "attachment_id": null, "text": "Hi,\n\nI tried it by putting <%= { %> and <%= } %> around the tag invocations but \nthat didn't work either with tomcat 4.1 and above.\nIt works fine on tomcat 4.0.6 if you enclose it within the parantheses.\n\nI am not concerned about nesting since these tags are not meant to be nested \ninside another instance of the same tag.\n\n\nThanks,\n\n\nRoshan", "id": 43463, "time": "2003-08-29T01:58:58Z", "bug_id": 21390, "creation_time": "2003-08-29T01:58:58Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 21390, "attachment_id": null, "id": 43464, "time": "2003-08-29T02:20:32Z", "creator": "kin-man.chung@sun.com", "creation_time": "2003-08-29T02:20:32Z", "is_private": false, "text": "Maybe I didn't express clearly.  I was saying that if we fix Jasper so that your\npage would work, then consecutive tags or nested tags would generate javac\nerrors (currently they don't).  The first case can use <%= { %> and <% } %> as a\nworkaround, but the second has no workaround.  Your tags may not be nested, but\nthere are others that can."}, {"count": 6, "tags": [], "creator": "remm@apache.org", "attachment_id": null, "text": "Resolving this as hinted by Kinman's comments.", "id": 47392, "time": "2003-11-15T09:39:21Z", "bug_id": 21390, "creation_time": "2003-11-15T09:39:21Z", "is_private": false}]