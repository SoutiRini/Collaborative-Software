[{"count": 0, "text": "Created attachment 24623\nSet/remove array formulas patch.\n\nThere is first patch with implementation of set/remove array formulas.\n\nIn the nearest future I will prepare patches with evaluation of array formulas and modifications for functions that supports array formulas and tests for all.", "bug_id": 48292, "is_private": false, "id": 132357, "time": "2009-11-26T07:10:27Z", "creator": "Petr.Udalau@exigenservices.com", "creation_time": "2009-11-26T07:10:27Z", "tags": [], "attachment_id": 24623}, {"count": 1, "attachment_id": null, "creator": "josh@apache.org", "text": "This was originally attachment ID 24632 that was lost as part of the issues.apache.org data loss on 2009-11-26/27.\n\nNote that this attachment ID has since been re-used.\n\nThe original attachment comment was:\nSome improvements to the original patch\n\nThanks for your work on array formulas.  This will be an important addition,\nsince this area is barely covered by POI at the moment (as I'm sure you're\naware).\n\nThere are a few issues with the rest of the patch, so I have re-worked what I\ncan and attached a new draft of the patch (based on the latest svn r885007).\nSome of my fixes might be wrong, so feel free to change anything to improve the\npatch.\n\nA very small amount of your first patch was applied in svn r885006.\n\nThe biggest outstanding concern is the lack of test cases.  Please write\nsomething that calls the new top-level APIs.  Try to make the tests execute the\nnewly changed/added code in all the lower classes.\n\nIn XSSFCell you wrote \"if (isPartOfArrayFormulaGroup() && f == null)\"\nsuggesting that it is possible for \"isPartOfArrayFormulaGroup() to return true\nwith f!=null.  It seems more logical that this condition would represent a\ncorrupted spreadsheet.\n\nAccording to OOO docs the formula parsing rules are slightly different for\narray formulas.  You should use FormulaType.ARRAY, and we'll probably need to\nupdate FormulaParser accordingly.\n\nConstantValueParser - it seems that there are now two alternate ways to encode\narray element values of type text (with String and UnicodeString).  It would be\nmuch better if such an ambiguity was not introduced into the code.  In\naddition, UnicodeStrings can contain a list of FormattingRuns which is\nsomething that is not applicable to array formulas (as far as I understand).\nAccording to the current junit tests, this code is not executed anyway.\n\nFormulaRecordAggregate - field _sharedValueManager can never be null so there\nis no need to check for that.  In general don't write null checks for things\nthat are asserted or documented as being never null - it raises doubts as to\nwhether the check might really be required.\n\nIn CellRangeAddress.valueOf() you added code which presumably allows one to\nwrite valueOf(\"A\") instead of valueOf(\"A:A\") but it is not clear how this is\nuseful or relevant.\n\nTry to keep classes encapsulated - for example the ArrayRecords list should not\nspill out of SharedValueManager, and SharedValueManager should not spill out of\nFormulaRecordAggregate.\n\nPlease don't use your own internal user-id for @author tags.  Full name in\nplain text is best.\n\nI also changed some method names and javadoc on the public API for clarity.", "id": 132491, "time": "2009-11-30T16:25:38Z", "bug_id": 48292, "creation_time": "2009-11-30T16:25:38Z", "tags": [], "is_private": false}, {"count": 2, "tags": [], "creator": "josh@apache.org", "is_private": false, "id": 132525, "creation_time": "2009-11-30T18:39:51Z", "time": "2009-11-30T18:39:51Z", "bug_id": 48292, "text": "Created attachment 24645\nreworked patch\n\nThe patch I previously attached doesn't seem to be linked here anymore, so I am re-submitting it.\n\nThis new version of the patch has been rebased to svn r885585.", "attachment_id": 24645}, {"count": 3, "tags": [], "bug_id": 48292, "text": "Thanks for reworked patch.\nWe have made final patch of array formula support and we will waiting for your review.\n\nNotes:\n\n1) About \"if (isPartOfArrayFormulaGroup() && f == null)\" in XSSFCell:\nI saved Excel document with array formula and when I had opened the xml of sheet I saw that formula was set only for the first cell of array formula range and other cells contained only calculated result.\n\n2) About parsing of array formulas:\nI changed OperandClassTransformer. But may be It is not solution for this problem.\n\n3) About CellRangeAddress.valueOf():\nThis is the case when the array formula is set into one cell. Then the Excel save the \"ref\" param of formula like a \"A1\"(It is only for one-cell array formula, when we set array formula into several cells \"ref\" param will contain range like \"A1:B1\").\n\n4) About evaluation of array formulas:\nThere are two types of array formulas:\n  1.Some formulas (for example \"SQRT({1,2;3,4})\") can take array arguments and have to be evaluated in loop with different args like a simple function.\n  2.Functions that have to be evaluated in special mode when it is in array formula.\n\n5) About optimized CHOOSE and IF:\nOptimization IF/ Choose  was made by analyze of  first argument and evaluated only expression, represented by second argument in true case or by third argument in false case.\nIn Array Formula Context first argument may be Boolean array which contains:\n-only true values\n-only false values\n-mixed true and false values.\nMethod checkBooleanContent() provides analyze, which case we have.\nFist two cases can be optimized in the same manner as usual IF/Choose function.\nThird case does not allow such optimization and requires evaluating both expression and only then  choosing right value from evaluated arrays according  Boolean array value. It means that we need to restore \u201cnon optimized\u201d way to evaluate such IF/Choose function. Restore of \u201cnon optimized\u201d way lead to ignoring of AttrPtg elements, which provide skipping no needed evaluation during optimized way.\n\nDue to  that IF/Choose function may be nested,   decision of optimized/non optimized  is concern only for current IF/Choose function, need to keep in such function stack and be restored after  finishing of  evaluating current IF/Choose.\n\n6) There will suitable to have common interface for Function and FreeRefFunction.\n\nDo you have any ideas and proposals?\n\nP.S. \"test/resources\" must be a source folder to run tests. TestArrays - main test.", "id": 132581, "time": "2009-12-02T05:53:11Z", "creator": "Petr.Udalau@exigenservices.com", "creation_time": "2009-12-02T05:53:11Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 48292, "text": "Created attachment 24658\nFinal patch", "id": 132582, "time": "2009-12-02T05:54:26Z", "creator": "Petr.Udalau@exigenservices.com", "creation_time": "2009-12-02T05:54:26Z", "is_private": false, "attachment_id": 24658}, {"count": 5, "tags": [], "creator": "Petr.Udalau@exigenservices.com", "attachment_id": 24659, "is_private": false, "id": 132583, "time": "2009-12-02T05:55:21Z", "bug_id": 48292, "creation_time": "2009-12-02T05:55:21Z", "text": "Created attachment 24659\nTests for array formulas"}, {"count": 6, "tags": [], "creator": "josh@apache.org", "attachment_id": 24682, "is_private": false, "id": 132686, "time": "2009-12-09T00:16:06Z", "bug_id": 48292, "creation_time": "2009-12-09T00:16:06Z", "text": "Created attachment 24682\nanother draft of the patch\n\nThanks for all your work so far but I'm afraid it's going to take a few more iterations before we are able to commit this patch.  Please take a look at my latest reworked version. I have made several changes which are described below.  There are still outstanding issues that need to be addressed.  A very small amount of work has been submitted (svn r888577, svn r888582, svn r888665).  These changes don't add any functionality; they just resolve existing issues and make the pending patch simpler.\n\nFirstly, I've added Apache License notices to each new file.  It's important that you agree to this, because we cannot take code contributions without it.\nThe tests you provided were in a package \"com.exigen...\". These have been moved to the appropriate POI packages.\nThe tests needed to be converted to junit 3.8 because that's what POI uses (changing junit versions is probably something we'd decide to do project wide).  The test classes were re-named to follow POI conventions, though the names could still be more descriptive.\nPOI expects tests to be silent (not write to std-out or any log) when successful.\nTest code should not throw exceptions to be caught by other test code during successful tests.  The only exceptions that should be thrown are ones deliberately caused in the production code being tested.\nOne test method for every example spreadsheet cell is probably too many.  Some simplification was done, but consider using techniques like those in TestFormulasFromSpreadsheet and TestIndexFunctionFromSpreadsheet etc.\n\nGeneral coding/formatting guidelines:\n  - please use unix line endings (LF instead of CRLF)\n  - don't mix indent style (tabs or spaces) in the same file\n  - always use {} for the bodies of if/else for/while statements\n  - don't assign to parameters\n  - turn on IDE warnings for unnecessary code\n\nI made significant simplifications to ArrayEval (while keeping all your junit tests working).\nI got rid of ArrayEval.illegalForAggregation because there is a much simpler way to get #N/A out of formulas with array size errors:  The #N/A value originates in ArrayFormulaEvaluatorHelper.getArrayValue() (new method), and just flows up the evaluation stack through standard techniques.\nThe method ArrayEval.arrayAsArea() is also not needed (due to introduction of TwoDEval).  TwoDEval simplifies a lot of the code you needed to touch in existing function implementations.\n\nThere are also some problems in your interpretation of how array formulas work.  I am pretty sure that at least one of the test cases is asserting the wrong result (testOffsetArray() - ConstantArray.xls C149).  I have added a new test class TestArrayEvaluationExtra which shows what the correct behaviour should be.  The new failing test cases are currently disabled.  While investigating, I have found out that array eval elements cannot be cell references or areas.  So in this example, OFFSET cannot return an array of cell references.  I've disabled ArrayEval from doing this, and made other fixes to keep all test cases working.  The solution will probably involve getting the RVA types of the tokens correct during the formula parsing phase.  Read the OOO documentation for an introduction to this.  Unfortunately I think that information is incomplete, but it is the best resource I know of.  We will probably have to discover all the missing details for ourselves.\n\nI also found that using the \"Evaluate Formula\" button (available in Excel 2007) helped me understand how some of the example formulas should be evaluated.  \n\nThe short-circuit-if evaluation stuff is probably not needed.  The first parameter to IF has type 'V' and I have a feeling that any parameter of type 'V' should always have a scalar ValueEval passed at runtime.  If you pass an array for a parameter of type 'V' then the whole function gets invoked once for each item in the array.  You have already written some code (prepareArgsForLoop etc) that does this.  It's just a question of having it be invoked at the right time.\n\nThere are a few other problems in the code:  Don't instantiate ArrayEval until you have its contents calculated.   (i.e. don't create half-initialised objects).  FunctionWithArraySupport.supportArray() looks like it is needed for answering questions about function parameters which are probably resolvable by the existing FunctionMetadata.  Similar problems with ArrayMode - it's probably providing an incomplete solution to something that can perhaps be solved better using proper RVA token classification.\n\n\nPlease review the re-worked patch and address these issues as best you can."}, {"count": 7, "attachment_id": 24683, "creator": "josh@apache.org", "is_private": false, "id": 132687, "time": "2009-12-09T00:20:25Z", "bug_id": 48292, "creation_time": "2009-12-09T00:20:25Z", "tags": [], "text": "Created attachment 24683\nadded test files\n\nThe zip contains 6 files destined for test-data/spreadsheet/ (the standard location for test sample spreadsheet files)."}, {"count": 8, "tags": [], "bug_id": 48292, "attachment_id": null, "id": 132929, "time": "2009-12-18T06:36:34Z", "creator": "Petr.Udalau@exigenservices.com", "creation_time": "2009-12-18T06:36:34Z", "is_private": false, "text": "Josh,\nWe appreciate your time and effort to integrate our stuff.\n\n>Thanks for all your work so far but I'm afraid it's going to take a few more\n>iterations before we are able to commit this patch.\nWe understand it and ready to continue our work to match your requirements.\n\n\n>The tests needed to be converted to junit 3.8 because that's what POI uses\n>(changing junit versions is probably something we'd decide to do project wide).\n> The test classes were re-named to follow POI conventions, though the names\n>could still be more descriptive.\n>POI expects tests to be silent (not write to std-out or any log) when\n>successful.\n>Test code should not throw exceptions to be caught by other test code during\n>successful tests.  The only exceptions that should be thrown are ones\n>deliberately caused in the production code being tested.\n>One test method for every example spreadsheet cell is probably too many.  Some\n>simplification was done, but consider using techniques like those in\n>TestFormulasFromSpreadsheet and TestIndexFunctionFromSpreadsheet etc.\nWe reworked our tests to fit your requirements.\n\n>General coding/formatting guidelines:\n>  - please use unix line endings (LF instead of CRLF)\n>  - don't mix indent style (tabs or spaces) in the same file\n>  - always use {} for the bodies of if/else for/while statements\n>  - don't assign to parameters\n>  - turn on IDE warnings for unnecessary code\nWe are in process of improving our code.\n\n>I made significant simplifications to ArrayEval (while keeping all your junit\n>tests working).\n>I got rid of ArrayEval.illegalForAggregation because there is a much simpler\n>way to get #N/A out of formulas with array size errors:  The #N/A value\n>originates in ArrayFormulaEvaluatorHelper.getArrayValue() (new method), and\n>just flows up the evaluation stack through standard techniques.\n>The method ArrayEval.arrayAsArea() is also not needed (due to introduction of\n>TwoDEval).  TwoDEval simplifies a lot of the code you needed to touch in\n>existing function implementations.\nThe above is reasonable improvement. Thanks.\n\n>There are also some problems in your interpretation of how array formulas work.\n> I am pretty sure that at least one of the test cases is asserting the wrong\n>result (testOffsetArray() - ConstantArray.xls C149).  I have added a new test\n>class TestArrayEvaluationExtra which shows what the correct behaviour should\n>be.  The new failing test cases are currently disabled.  While investigating, I\n>have found out that array eval elements cannot be cell references or areas.  So\n>in this example, OFFSET cannot return an array of cell references.  I've\n>disabled ArrayEval from doing this, and made other fixes to keep all test cases\n>working.  The solution will probably involve getting the RVA types of the\n>tokens correct during the formula parsing phase.  Read the OOO documentation\n>for an introduction to this.  Unfortunately I think that information is\n>incomplete, but it is the best resource I know of.  We will probably have to\n>discover all the missing details for ourselves.\nThe issue you have raised is really exists. We spent quite a time researching it. \n1.\tBehavior of function chain based on array of references (could be return by function offset(), index() etc.) is different in Excel 2003 and Excel 2007 (I mean engines, not formats). For example =SUM(SUM((OFFSET(A149:B150,{1,0},{1,0},{1,1},{1,1}))) returns 5 in Excel 2003 and #N/A in Excel 2007. In excel 2003 =average((OFFSET(A149:B150,{1,0},{1,0},{1,1},{1,1})) returns 4 but =sum(average((OFFSET(A149:B150,{1,0},{1,0},{1,1},{1,1}))) returns 2.5. We think that reason is in inconsistency of excel concepts. We decided to stick to Excel 2007 logic. First of all we assume that offset() returns array of references \u2013 if create an array formula {=OFFSET(A149:B150,{1,0},{1,0},{1,1},{1,1})} on two cells, it would fill it with 4 and 1 correspondingly. The behavior we should match is the following one: \na.\t=SUM(OFFSET(A149:B150,{1,0},{1,0},{1,1},{1,1}))   ---->    4\nb.\t=SUM(SUM(OFFSET(A149:B150,{1,0},{1,0},{1,1},{1,1})))   ---->    #N/A!\n(It is very strange result, result of functions have to depend on only args)\nc.\t=SQRT(OFFSET(A149:B150,{1,0},{1,0},{1,1},{1,1}))  ---->    2\nd.\t=SUM(SQRT(OFFSET(A149:B150,{1,0},{1,0},{1,1},{1,1})))  ------->  #Value!\ne.\t=SQRT(SUM(OFFSET(A149:B150,{1,0},{1,0},{1,1},{1,1}))) --------->  2\nf.\t=SUM(SQRT(SUM(OFFSET(A149:B150,{1,0},{1,0},{1,1},{1,1})))) --------> #N/A!\n2.\tThe logic above mathematically seems strange but need to emulate it. To do this we add componentError as element on ArrayEval which contains \u201efuture\u201d error to be exposed by aggregation function used second time.\n3.\tWe consider ArrayEval as \u201euniversal\u201d container which is transfered via evaluation stack and need to contain results of any types including references. Thus OFFSET(A149:B150,{1,0},{1,0},{1,1},{1,1})) returns array of references (ArrayEval contains AreaEvals) and {OFFSET(A149:B150,{1,0},{1,0},{1,1},{1,1}))} on two cells returns 4 and 1. We have removed your validation from ArrayEval.\n \n\n>I also found that using the \"Evaluate Formula\" button (available in Excel 2007)\n>helped me understand how some of the example formulas should be evaluated.  \nThanks for the hint\n\n>The short-circuit-if evaluation stuff is probably not needed.  The first\n>parameter to IF has type 'V' and I have a feeling that any parameter of type\n>'V' should always have a scalar ValueEval passed at runtime.  If you pass an\n>array for a parameter of type 'V' then the whole function gets invoked once for\n>each item in the array.  You have already written some code (prepareArgsForLoop\n>etc) that does this.  It's just a question of having it be invoked at the right\n>time.\nWe need this change because IF first parameter is array. In this case IF optimization not always accepatble. We do iteration over array but in non-optimized manner.\n\n>There are a few other problems in the code:  Don't instantiate ArrayEval until\nyou have its contents calculated.   (i.e. don't create half-initialised\nobjects).\nWe\u2019ll look at it.\n>  FunctionWithArraySupport.supportArray() looks like it is needed for\n>answering questions about function parameters which are probably resolvable by\n>the existing FunctionMetadata.  Similar problems with ArrayMode - it's probably\n>providing an incomplete solution to something that can perhaps be solved better\n>using proper RVA token classification.\nOur investigation showed that RVA types from FunctionMetadata is not enough for decision if function accept array as argument or we need to iterate over it. V and A types are OK but problem is with R type. For example for IF function is\n 1      IF      2       3       R       V R R          \nBut function logic requires second/third parameters needed to be iterated (as scalar values). The same is true for COLUMN, CHOOSE, VLOOKUP, HLOOKUP. Thus, for the moment we stick to our approach.\nThere is some unnecessary code which is commented. This code is represents that specificaiotns differs from our interfaces.\n\nThere is also problem with determining return type of formula for example for formulas:\n=SUM(IF(A67:B68>2;A67:B68;1))\n=SUM(OFFSET(A149:B150,{1,0},{1,0},{1,1},{1,1}))\n\nOFFSET\tmetadata\n78\tOFFSET\t3\t5\tR\tR V V V V\tx\n\nAccording to the specification: arguments that marked \"V\" in specification represented like an array and \"R\"-arguments represented like an area eval. Return type of functions is \"R\" in specification but OFFSET returns single value for SUM(by preparing args for one itaration of loop) and IF returns array for SUM.\n\nSo, we make one-week investigation and you can see result. Our patch is raw but set/remove functionality is done, there is some problems with evaluation but we can't find right specification how to evaluate formulas(and even Excel have problems with evaluations of array formulas)\n\nWe will waiting for your response and your point of view on the problem of array formulas evaluation in Excel. We have to determine way of evaluation in POI: we have to imitate Excel calculations or find some rules of calculations of formulas(may be using RVA specification).\n\nRegards."}, {"count": 9, "tags": [], "bug_id": 48292, "is_private": false, "text": "Created attachment 24731\nlast reworked patch", "id": 132930, "time": "2009-12-18T06:38:37Z", "creator": "Petr.Udalau@exigenservices.com", "creation_time": "2009-12-18T06:38:37Z", "attachment_id": 24731}, {"count": 10, "tags": [], "creator": "Petr.Udalau@exigenservices.com", "text": "Created attachment 24732\nnew test data", "id": 132931, "attachment_id": 24732, "bug_id": 48292, "creation_time": "2009-12-18T06:39:18Z", "time": "2009-12-18T06:39:18Z", "is_private": false}, {"count": 11, "tags": [], "bug_id": 48292, "attachment_id": 24746, "id": 133026, "time": "2009-12-21T07:36:15Z", "creator": "Petr.Udalau@exigenservices.com", "creation_time": "2009-12-21T07:36:15Z", "is_private": false, "text": "Created attachment 24746\nlast reworked patch with test data\n\nUpdated INDEX function and restructured tests."}, {"count": 12, "attachment_id": null, "creator": "Petr.Udalau@exigenservices.com", "is_private": false, "id": 138949, "time": "2010-08-06T09:59:48Z", "bug_id": 48292, "creation_time": "2010-08-06T09:59:48Z", "tags": [], "text": "Hi,\nOur team have made investigation and implement new functionality before. And we need response about our patch with array formulas in POI. We are waiting since 2009 year. So what about that?"}, {"count": 13, "tags": [], "bug_id": 48292, "attachment_id": null, "id": 138990, "creation_time": "2010-08-09T06:10:05Z", "time": "2010-08-09T06:10:05Z", "creator": "yegor@dinom.ru", "text": "\nPetr,\n\nThanks again for your contribution. The patch was partially applied in Dec 2009 but there are still issues to address. I think we will need at least one iteration to sort them out. \n\nThe patch consists of two big parts that were splitted between me and Josh Micich.\n\n (1) usermodel API for arrays formulas (me). It is way more complex than just  setter methods. The API should be consistent and mimic Excel - it should block changing cells included in multi-cell arrays, prevent data corruption, etc.  This part is mostly done, see the history in r894469, r893870 and r893625. \n\nMost of usermodel tests are consolidated in org.apache.poi.ss.usermodel.BaseTestSheetUpdateArrayFormulas which is used both by HSSF and XSSF. \n\n (2) evaluation of array formulas (Josh). This is the hardest part and it is still in progress. Let's wait feedback from Josh on how much remains to be done. \n\nRegards,\nYegor", "is_private": false}, {"count": 14, "tags": [], "bug_id": 48292, "text": "Created attachment 28053\nFile from Excel 2003 that can not be re-save using POI due to Array Formula In Cell B37", "id": 152070, "time": "2011-12-08T15:20:07Z", "creator": "cdugas@calasys.fr", "creation_time": "2011-12-08T15:20:07Z", "is_private": false, "attachment_id": 28053}, {"count": 15, "tags": [], "bug_id": 48292, "text": "Created attachment 28054\n28053: File from Excel 2003 that can be re-save using POI No Array Formula in this one", "id": 152071, "time": "2011-12-08T15:21:25Z", "creator": "cdugas@calasys.fr", "creation_time": "2011-12-08T15:21:25Z", "is_private": false, "attachment_id": 28054}, {"count": 16, "tags": [], "bug_id": 48292, "text": "Comment on attachment 28053\nFile from Excel 2003 that can not be re-save using POI due to Array Formula In Cell B37\n\nHi,\n\nI have a problem with POI due probably to array formula. It's why I'm posting\nthe probleme in this bug.\n\nI have attach 2 xls files. One contain array formula (in cell B37..), the other\nnot. \nI get an error \"java.lang.RuntimeException: Failed to find a matching shared\nformula record\" when I save the file containing array formula using POI\n(method: workbook.write) If I save the file using Excel 2010, and then pass it\nto POI, it's ok. But if it is saved from Excel 2003, there is a problem.\n\nIs there a fix for this? Is it link to the bug describe here?\n\nThanks.\nChristophe.", "id": 152091, "time": "2011-12-09T07:31:41Z", "creator": "cdugas@calasys.fr", "creation_time": "2011-12-09T07:31:41Z", "is_private": false, "attachment_id": 28053}, {"count": 17, "tags": [], "creator": "cdugas@calasys.fr", "attachment_id": null, "text": "Hi,\n\nWhat's up about this bug?\n\nThanks.\nChristophe.", "id": 154684, "time": "2012-03-08T09:06:06Z", "bug_id": 48292, "creation_time": "2012-03-08T09:06:06Z", "is_private": false}, {"count": 18, "tags": [], "bug_id": 48292, "text": "Unfortunately this patch is still not applied. I hope to find time to check it in in the next POI-3.9 cycle.  \n\nYegor\n\n(In reply to comment #17)\n> Hi,\n> \n> What's up about this bug?\n> \n> Thanks.\n> Christophe.", "id": 154793, "time": "2012-03-11T07:26:55Z", "creator": "yegor@dinom.ru", "creation_time": "2012-03-11T07:26:55Z", "is_private": false, "attachment_id": null}, {"count": 19, "attachment_id": null, "creator": "cdugas@calasys.fr", "is_private": false, "id": 160918, "time": "2012-07-26T09:48:28Z", "bug_id": 48292, "creation_time": "2012-07-26T09:48:28Z", "tags": [], "text": "Hi,\n\nI'm sorry to bother you with this functionnality.\nBut I realy need it in my project.\n\nWhat's the news?\nIs there a patch or some code I can add in my soft to fix it without waiting for a new release?\n\nThanks.\nChristophe"}, {"count": 20, "text": "> \n> What's the news?\n\nthere is no news which means that the patch is not applied.\n\nThe patch needs some work and no one yet volunteered to work on it. \n\n> Is there a patch or some code I can add in my soft to fix it without waiting\n> for a new release?\n> \n\nThe patch is attached, go ahead and apply it to trunk. \n\nYegor", "bug_id": 48292, "is_private": false, "id": 160920, "time": "2012-07-26T14:28:04Z", "creator": "yegor@dinom.ru", "creation_time": "2012-07-26T14:28:04Z", "tags": [], "attachment_id": null}, {"count": 21, "tags": [], "creator": "coppertan.au@gmail.com", "is_private": false, "text": "Hi Dugas,\n\n  Did you try applying the patch successfully?  If so, which version of POI did you use?", "id": 164115, "time": "2012-12-17T04:22:16Z", "bug_id": 48292, "creation_time": "2012-12-17T04:22:16Z", "attachment_id": null}, {"count": 22, "tags": [], "bug_id": 48292, "attachment_id": null, "id": 175116, "time": "2014-05-08T16:30:17Z", "creator": "pumpkin@me.com", "creation_time": "2014-05-08T16:30:17Z", "is_private": false, "text": "Any updates? Not having this prevents me from using POI usefully, and it seems like a pity to let all this effort languish for so long (~5 years now?)"}, {"count": 23, "tags": [], "bug_id": 48292, "attachment_id": null, "id": 175153, "time": "2014-05-12T07:33:49Z", "creator": "yegor@dinom.ru", "creation_time": "2014-05-12T07:33:49Z", "is_private": false, "text": "(In reply to Dan Peebles from comment #22)\n> Any updates? Not having this prevents me from using POI usefully, and it\n> seems like a pity to let all this effort languish for so long (~5 years now?)\n\nunfortunately it is not that easy.\n\nThe patch in its current form is not applicable. It breaks unit tests and violates the API. I tried to adapt it but had to give up because of lack of time. We need someone to work it, otherwise it will stay in Bugzilla for good.  If you are willing to contribute then please do work on it!"}, {"count": 24, "tags": [], "bug_id": 48292, "text": "No update on this for a long time, likely some things already work nowadays, so I think it best to report fresh bugs for anything that is still missing.", "id": 181946, "time": "2015-03-22T14:32:47Z", "creator": "dominik.stadler@gmx.at", "creation_time": "2015-03-22T14:32:47Z", "is_private": false, "attachment_id": null}]