[{"count": 0, "tags": [], "text": "ManifestClassPath throws when a relative path would traverse the file system root.\n\nThe relative path to /aux/b.jar from /usr/local should be ../../aux/b.jar, but ManifestClassPath does not tolerate it.  The exception thrown seems to depend on maxParentLevels.  Here are two illustrations.\n\nThis build file produces a java.lang.NullPointerException:\n\n<project name=\"crash\" basedir=\"/usr/local\">\n<manifestclasspath jarfile=\"e.jar\" maxParentLevels=\"99\" property=\"cp\">\n   <classpath>\n      <pathelement location=\"/aux/b.jar\"/>\n   </classpath>\n</manifestclasspath>\n</project>\n\nThis build file produces a java.lang.ArrayIndexOutOfBoundsException:\n\n<project name=\"crash\" basedir=\"/usr/local\">\n<manifestclasspath jarfile=\"e.jar\" maxParentLevels=\"2\" property=\"cp\">\n   <classpath>\n      <pathelement location=\"/aux/b.jar\"/>\n   </classpath>\n</manifestclasspath>\n</project>", "is_private": false, "bug_id": 44499, "id": 114058, "time": "2008-02-27T06:43:11Z", "creator": "wolf@nlm.nih.gov", "creation_time": "2008-02-27T06:43:11Z", "attachment_id": null}, {"count": 1, "attachment_id": null, "bug_id": 44499, "is_private": false, "id": 114882, "time": "2008-03-22T16:04:38Z", "creator": "peterreilly@apache.org", "creation_time": "2008-03-22T16:04:38Z", "tags": [], "text": "Thanks for the report.\nI have a fix for this problem. It will be (most likely) a bit\nlate for ant 1.7.1, but will be in ant 1.8.0.\n"}, {"count": 2, "tags": [], "bug_id": 44499, "attachment_id": null, "is_private": false, "id": 130139, "time": "2009-09-03T10:49:07Z", "creator": "baba.buehler@zilliant.com", "creation_time": "2009-09-03T10:49:07Z", "text": "The fix for 1.8.0 does not appear to work for ant on Windows\n\nI am still able to produce a NullPointerException with usage such as:\n\n<project name=\"crash\" basedir=\"C:/temp\">\n<manifestclasspath jarfile=\"e.jar\" maxParentLevels=\"99\" property=\"cp\">\n   <classpath>\n      <pathelement location=\"C:/a/b/x.jar\"/>\n   </classpath>\n</manifestclasspath>\n</project>"}, {"count": 3, "tags": [], "text": "I was able to get this working on Windows by changing the if at around line 79 to:\n\n            if (!dirs[i].equals(\"\" + File.separatorChar) &&\n                !dirs[i].matches(\"[a-zA-Z]:\\\\\\\\\")) {\n                dirs[i] = dirs[i] + File.separatorChar;\n            }\n\nI also think the for loop at around line 102 should be (< vs <=):\n\n            for (int j = 0; j < maxParentLevels && j < dirs.length; ++j) {\n\n\nThe limitation here is that everything involved needs to be on one Windows drive; in my example above if the basedir were D:\\temp this wouldn't work.", "is_private": false, "bug_id": 44499, "id": 130140, "time": "2009-09-03T11:15:22Z", "creator": "baba.buehler@zilliant.com", "creation_time": "2009-09-03T11:15:22Z", "attachment_id": null}, {"count": 4, "tags": [], "creator": "bodewig@apache.org", "is_private": false, "text": "I think I've found a cleaner approach by using the FileUtils.getRelativePath method in svn revision 812573\n\ntested to work on Windows.", "id": 130213, "time": "2009-09-08T09:17:10Z", "bug_id": 44499, "creation_time": "2009-09-08T09:17:10Z", "attachment_id": null}]