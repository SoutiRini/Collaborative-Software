[{"count": 0, "tags": [], "text": "I'm testing using the Tomcat servlet container with IPlanet 6 and have found \na strange error when I try to use the BACK button in IE to return to a previous \nframeset.  Here's the scenario:\n\nThe first page of my web application displays a frameset which contains 2 \nframes (\"docA\" and \"docB\").  I click on one of the links in the right frame and \nit changes the right frame to a menu for selecting parameters (using a simple\nHREF with no target).  So the frameset now contains the same document in the left\nframe but a different document in the right frame (\"docC\"). I select parameters\nand SUBMIT.  The submission has a target=\"_parent\" which causes the resulting\nreport to be displayed in the complete browser window.  Then, when I press the \nBACK button the frameset refreshes not to the last configuration (containing \ndocA and docC) but to its original configuration (containing docA and docB). \nIt's as if I had pressed the BACK button twice.  \n\nAll of these \"documents\" are dynamically-generated by either servlets or JSPs.\nIf I run the identical code using a straight IPlanet setup the BACK button \nworks as expected.  I only see this problem using IE (version 6.0.2800).  In \naddition, if I save all of the pages as HTML files and run through the same \nsequence the BACK button works as expected.\n\nRight now, I can't provide a URL since this is on my test environment behind \na firewall.  I could set one up if needed (it would just take a little \ntime).  I'm not clear on how the servlet container has anything to do with \nhow a browser BACK button works but I'd appreciate any tips you could give \nme on this subject.", "is_private": false, "bug_id": 24510, "id": 47015, "time": "2003-11-07T19:19:56Z", "creator": "Chris_Emmerich@partner.nps.gov", "creation_time": "2003-11-07T19:19:56Z", "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 24510, "text": "This is more a browser quirk than a Tomcat issue, but is Tomcat-involved. \nProbably due to the headers being set on your frameset page, IE will reload it\nwhen loaded from a server, but not from disk.  When the frameset page is\nreloaded, it contains the pointers to your original docA and docB, so they'll be\nloaded.\n\nIE errs on the side of reload in many cases, esp. if there are Cookie, Pragma,\nor CacheControl headers.\n\nThis isn't a Tomcat problem.  You may investigate setting headers (like\n\"Expires\") to trick IE into not reloading the frameset page, but I'd recommend\nwriting your site to encourage people not to use \"Back\".  Provide good\nnavigation within your pages.\n\nI'm not closing this, because I'm really not a Tomcat developer.  But I'm trying\nto be helpful.", "id": 47018, "time": "2003-11-07T19:31:48Z", "creator": "kylev@yaga.com", "creation_time": "2003-11-07T19:31:48Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "text": "This is a browser issue rather than a tomcat issue, therefore I am resolving \nthis bug.\n\nIf you still have some queries, the tomcat-user list is the best place to get \nthe answers you need.\n\nIf, after further research, you believe a tomcat bug (eg non-spec compliant \nbehaviour) is the root cause please feel free to re-open this bug. In this \ncase please provide the simpliet test case (ideally as a .war) that reproduces \nthe error.", "is_private": false, "bug_id": 24510, "id": 47056, "time": "2003-11-09T11:33:51Z", "creator": "medthomas@ntlworld.com", "creation_time": "2003-11-09T11:33:51Z", "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 24510, "attachment_id": null, "id": 51511, "time": "2004-01-30T23:51:44Z", "creator": "Chris_Emmerich@partner.nps.gov", "creation_time": "2004-01-30T23:51:44Z", "is_private": false, "text": "I wanted to let you know that I found out what was causing the problem \n(see the following from an old thread on the Tomcat users group).  Incidently,\nit was not limited to framesets.  If I filled out a form, went to another \npage, and then returned to the form (in IE only), my edits would be wiped out. \nI'm curious as to why the decision was made to automatically send a \n\"no-cache\" header repsonse.  This seems counter to the tomcat and open \nsource philosophy of maximizing developer control.  In any case, here's the \nthread:\n\nRE: Invalid no-cache http headers\n\n--------------------------------------------------------------------------------\n\nFrom: Dennis van den Berg \nSubject: RE: Invalid no-cache http headers \nDate: Thu, 27 Feb 2003 00:41:13 -0800 \n\n--------------------------------------------------------------------------------\n\nAdam,\n\nYour solution should work fine.\nHowever, I consider this is a bug, and therefore I wondered if other people \nagree with \nme on this point.\nI used a simple Filter to work around the Tomcat bug;\n\n/**\n * <p>Title: </p>\n * <p>Description: Reset cache-control headers set by Tomcat.\n * These headers are set by newer Tomcat versions in the case\n * the request is for a protected URL. We consider this a bug\n * in Tomcat. If we do not reset these headers nothing will be\n * cached, so the back-button will not work properly, and also\n * in the 'open/save'-dialog, open will not work.</p>\n * @author Dennis van den Berg\n * @version 1.0\n */\npublic class CacheControlFilter implements Filter {\n\n  FilterConfig filterConfig = null;\n\n  public void init(FilterConfig filterConfig) throws ServletException {\n    this.filterConfig = filterConfig;\n  }\n\n  public void doFilter(ServletRequest request, ServletResponse response, \nFilterChain \nchain) throws IOException, ServletException {\n    /** reset headers set by new Tomcat Connector to enable caching\n     */\n    HttpServletResponse httpResponse = (HttpServletResponse)response;\n    httpResponse.setHeader(\"Pragma\",null);\n    httpResponse.setHeader(\"Cache-Control\",null);\n    chain.doFilter(request, response);\n  }\n\n  public void destroy() {\n    filterConfig = null;\n  }\n\n}\n\nThanks for any replies,\n\nDennis\n\n-----Original Message-----\nFrom: Szwajkajzer Adam [mailto:[EMAIL PROTECTED]\nSent: donderdag 27 februari 2003 8:30\nTo: Dennis van den Berg\nSubject: RE: Invalid no-cache http headers\n\n\nI've found in previouse discussions that \"no-cache\" feature was added on \npurpose to \n\"avoid possible security problems\".\nI was told to use JBeans to maintain on server site JSP state.\nThere is no way to switch the feature of.\n\nFor my current project (intranet application) I just removed setHeader \ninstructions \nfrom AuthenticatiorBase, recompiled and had a prevoius behaviour.\n\nHope it helps.\n\nAdam Szwajkajzer\n\n> -----Original Message-----\n> From: Dennis van den Berg [mailto:[EMAIL PROTECTED]\n> Sent: Wednesday, February 26, 2003 4:30 PM\n> To: [EMAIL PROTECTED]\n> Subject: Invalid no-cache http headers\n> \n> \n> Hi all,\n> \n> I encountered problems with the newer Tomcat 4 versions.\n> There are caching-headers set on the response, in case of \n> URL's with security constraints, which are not set in older \n> Tomcat 4 versions versions. \n> \n> This results in 2 things;\n> - The user is not able to use the back-button anymore (This \n> page has expired, in IE6 anyway)\n> - When you send a file as an attachement to the browser the \n> user gets an open/save dialog.\n>   When the user presses open, the file is first put into the \n> cache and then opened (by IE6 anyway)\n>   So this results in an 'file not found' message, because \n> caching is disabled.\n> \n> In the following method in \n> org.apache.catalina.authenticator.AuthenticatorBase:\n>     public void invoke(Request request, Response response,\n>                        ValveContext context)\n>         throws IOException, ServletException {\n> \n> I found the following code-fragment:\n>         // Make sure that constrained resources are not \n> cached by web proxies\n>         // or browsers as caching can provide a security hole\n>         if (disableProxyCaching && \n>             !(((HttpServletRequest) \n> hrequest.getRequest()).isSecure())) {\n>             HttpServletResponse sresponse = \n>                 (HttpServletResponse) response.getResponse();\n>             sresponse.setHeader(\"Pragma\", \"No-cache\");\n>             sresponse.setHeader(\"Cache-Control\", \"no-cache\");\n>             sresponse.setDateHeader(\"Expires\", 1);\n>         }\n> \n> I think this piece of code is the source of the problem.\n> When I read the specs for HTTP, I think I can conclude there \n> are more applicable values for the \"Cache-Control\" header in \n> this case. For example \"private\" or \"no-store\".\n> \n> Did anyone else encounter any problems of this kind, or did I \n> overlook something?\n> \n> Thanks for any replies,\n> \n> Dennis\n> \n\n"}, {"count": 4, "tags": [], "text": "I agree this is not a browser issue. But, disabling caching has been \nconfigurable since 4.1.16. Since this is configurable, I don't consider it to \nbe a bug. You can control this with something like:\n\n<Context path=\"/myapp\" docBase=\"myapp\">\n  <Valve className=\"org.apache.catalina.authenticator.FormAuthenticator\"\n          disableProxyCaching=\"false\" />\n</Context>\n\nBug 27122 is related to this bug.", "is_private": false, "bug_id": 24510, "id": 60075, "time": "2004-06-30T23:03:09Z", "creator": "markt@apache.org", "creation_time": "2004-06-30T23:03:09Z", "attachment_id": null}]