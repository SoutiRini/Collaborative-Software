[{"count": 0, "tags": [], "creator": "richard.evans@datanomic.com", "attachment_id": null, "text": "This is for 3.0.2 FINAL.\n\nAreaPtg and similar objects store row numbers as _shorts_ even though row offsets may range from 0-65535.  Various things do not work for row offsets >= 32768.\n\nFor example:\n\n1. When HSSFFormulaEvaluator handles a cell reference it does:\n\n            else if (ptgs[i] instanceof ReferencePtg) {\n                ReferencePtg ptg = (ReferencePtg) ptgs[i];\n                short colnum = ptg.getColumn();\n                short rownum = ptg.getRow();\n                HSSFRow row = sheet.getRow(rownum);\n                HSSFCell cell = (row != null) ? row.getCell(colnum) : null;\n                pushRef2DEval(ptg, stack, cell, row, sheet, workbook);\n            }\n\nif the row is 32768 the short value is -32768 and you get:\n\njava.lang.IndexOutOfBoundsException: Row number must be between 0 and 65535, was <-32768>\n        at org.apache.poi.hssf.usermodel.HSSFRow.setRowNum(HSSFRow.java:211)\n        at org.apache.poi.hssf.usermodel.HSSFSheet.getRow(HSSFSheet.java:330)\n        at org.apache.poi.hssf.usermodel.HSSFFormulaEvaluator.internalEvaluate(HSSFFormulaEvaluator.java:402)\n        at org.apache.poi.hssf.usermodel.HSSFFormulaEvaluator.evaluate(HSSFFormulaEvaluator.java:203)\n\n2. An expression involving a range, such as SUM(A32769:A32770) fails because AreaPtg passes the signed values into CellReference and you get an error like:\n\njava.lang.RuntimeException: Cannot Parse, sorry : Found reference to named range \"A\", but that named range wasn't defined! @ 6 [Formula String was: 'SUM(A-32767:A-32766)']\n\nHSSFFormulaEvaluator uses shorts in a number of places to represent row numbers so there are a lot of things that would exhibit this problem.\n\nTrivial XLS attached which demonstrates the second example.", "id": 114285, "time": "2008-03-05T06:01:21Z", "bug_id": 44539, "creation_time": "2008-03-05T06:01:21Z", "is_private": false}, {"count": 1, "tags": [], "creator": "josh@apache.org", "attachment_id": null, "text": "Turns out to be a big change.  There's many places beyond the two pointed out where 16 unsigned values are represented with java primitive shorts.\n\nHere are two test cases that identify these problems:\n\n    public void testSetFormulaWithRowBeyond32768_Bug44539() {\n        \n        HSSFWorkbook wb = new HSSFWorkbook();\n        HSSFSheet sheet = wb.createSheet();\n        wb.setSheetName(0, \"Sheet1\");\n        \n        HSSFRow row = sheet.createRow(0);\n        HSSFCell cell = row.createCell((short)0);\n        cell.setCellFormula(\"SUM(A32769:A32770)\");\n        if(\"SUM(A-32767:A-32766)\".equals(cell.getCellFormula())) {\n            fail(\"Identified bug 44539\");\n        }\n        assertEquals(\"SUM(A32769:A32770)\", cell.getCellFormula());\n    }\n\n\tpublic void testEvaluateFormulaWithRowBeyond32768_Bug44539() {\n\t\t\n\t\tHSSFWorkbook wb = new HSSFWorkbook();\n\t\tHSSFSheet sheet = wb.createSheet();\n\t\twb.setSheetName(0, \"Sheet1\");\n\t\t\n\t\tHSSFRow row = sheet.createRow(0);\n\t\tHSSFCell cell = row.createCell((short)0);\n\t\tcell.setCellFormula(\"SUM(A32769:A32770)\");\n\n\t\t// put some values in the cells to make the evaluation more interesting\n\t\tsheet.createRow(32768).createCell((short)0).setCellValue(31);\n\t\tsheet.createRow(32769).createCell((short)0).setCellValue(11);\n\t\t\n\t\tHSSFFormulaEvaluator fe = new HSSFFormulaEvaluator(sheet, wb);\n\t\tfe.setCurrentRow(row);\n\t\tCellValue result;\n\t\ttry {\n\t\t\tresult = fe.evaluate(cell);\n\t\t} catch (FormulaParseException e) {\n\t\t\tif(e.getMessage().equals(\"Found reference to named range \\\"A\\\", but that named range wasn't defined!\")) {\n\t\t\t\tfail(\"Identifed bug 44539\");\n\t\t\t}\n\t\t\tthrow new RuntimeException(e);\n\t\t}\n\t\tassertEquals(HSSFCell.CELL_TYPE_NUMERIC, result.getCellType());\n\t\tassertEquals(42.0, result.getNumberValue(), 0.0);\n\t}\n//\n\n\n\n", "id": 114306, "time": "2008-03-05T14:37:47Z", "bug_id": 44539, "creation_time": "2008-03-05T14:37:47Z", "is_private": false}, {"text": "Created attachment 21633\nsvn diff of 23 changed files", "tags": [], "bug_id": 44539, "is_private": false, "count": 2, "id": 114307, "time": "2008-03-05T14:38:52Z", "creator": "josh@apache.org", "creation_time": "2008-03-05T14:38:52Z", "attachment_id": 21633}, {"count": 3, "tags": [], "bug_id": 44539, "is_private": false, "text": "Thanks for the patch Josh. Needed a little bit of tweaking to not break the whole-column stuff, but now applied to svn trunk", "id": 114407, "time": "2008-03-07T04:05:28Z", "creator": "apache@gagravarr.org", "creation_time": "2008-03-07T04:05:28Z", "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 44539, "is_private": false, "id": 125323, "creation_time": "2009-03-04T16:58:58Z", "time": "2009-03-04T16:58:58Z", "creator": "josh@apache.org", "text": "(In reply to comment #3)\nfix was applied in svn r634630", "attachment_id": null}]