[{"count": 0, "tags": [], "bug_id": 2048, "attachment_id": null, "id": 2775, "time": "2001-06-07T06:05:16Z", "creator": "mhuffman@ca.ibm.com", "creation_time": "2001-06-07T06:05:16Z", "is_private": false, "text": "Unique Particle Attribution constraints in:\n\nhttp://www.w3.org/TR/xmlschema-1/#non-ambig\n\nstate that if 2 <element>s appearing in a row in a <sequence> have the same \nnamespace/name/type, then the 1st <element> cannot have minOccurs < maxOccurs.  \nHere is a test which violates this constraint and no error is reported by the \nparser.\n\n3_8si23.xsd\n===========\n<?xml version=\"1.0\"?>\n<schema xmlns             =\"http://www.w3.org/2001/XMLSchema\"\n        xmlns:si          =\"http://www.Test.org/3_8si\"\n        targetNamespace   =\"http://www.Test.org/3_8si\"\n        elementFormDefault=\"qualified\">\n\n<simpleType name=\"str80\">\n  <restriction base=\"string\">\n    <maxLength value=\"80\"/>\n  </restriction>\n</simpleType>\n\n<element name=\"badElem\">\n  <complexType>\n    <sequence>\n      <element ref=\"si:elem1\" minOccurs=\"0\"/>\n      <group ref=\"si:group1\"/>\n    </sequence>\n  </complexType>\n</element>\n\n<group name=\"group1\">\n  <sequence>\n    <element name=\"elem2\" type=\"si:str80\"/>\n  </sequence>\n</group>\n\n<element name=\"elem1\" type=\"si:str80\"/>\n<element name=\"elem2\" type=\"si:str80\" substitutionGroup=\"si:elem1\"/>\n\n<element name=\"root\">\n  <complexType>\n    <sequence>\n      <element ref=\"si:badElem\"/>\n    </sequence>\n  </complexType>\n</element>\n\n</schema>\n\n3_8si23.xml\n===========\n<?xml version=\"1.0\"?>\n<si:root xmlns:xsi         =\"http://www.w3.org/2001/XMLSchema-instance\"\n         xmlns:si          =\"http://www.Test.org/3_8si\"\n         xsi:schemaLocation=\"http://www.Test.org/3_8si\n                             3_8si23.xsd\">\n<si:badElem>\n  <si:elem2>string data</si:elem2>\n</si:badElem>\n</si:root>"}, {"count": 1, "tags": [], "creator": "lmartin@ca.ibm.com", "text": "Fix is in CVS. \n\nThe problem was the fact that element decls in groups were being added at \nTOP_LEVEL_SCOPE.   The fix is to assign groups their own scope, and then when \nreferenced from another group or complexType, elements are then copied from \ngroup scope to currentScope.", "id": 2983, "time": "2001-06-14T08:07:06Z", "bug_id": 2048, "creation_time": "2001-06-14T08:07:06Z", "is_private": false, "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 2048, "text": "*** Bug 2131 has been marked as a duplicate of this bug. ***", "count": 2, "id": 2987, "time": "2001-06-14T08:19:27Z", "creator": "neilg@ca.ibm.com", "creation_time": "2001-06-14T08:19:27Z", "is_private": false}, {"text": "Re-tested OK.", "tags": [], "bug_id": 2048, "is_private": false, "count": 3, "id": 3242, "time": "2001-06-25T12:39:10Z", "creator": "mhuffman@ca.ibm.com", "creation_time": "2001-06-25T12:39:10Z", "attachment_id": null}]