[{"count": 0, "tags": [], "text": "Created attachment 28623\npatch that shows the processing of the servlet's superclass injections\n\nHi folks,\n\nI've been running Tomcat 7.0.26 in a JEE container against the EE6 Web Profile CTS.\nIn many of the tests there is the following scenario: A servlet 'X' extends a regular class 'Y'. An env-entry element for a field in 'Y' with injection-target-class equal to 'Y' is defined in the app's web.xml. The injection-target-name points to a field that is not annotated.\n\nWhen the app boots and Tomcat handles the injections for the servlet it processes only those that are defined explicitly for the 'X' servlet's class name, ignoring its superclasses.\n\nI'm attaching a patch I made on top of 7.0.x/trunk that fixed the issue. It's quite small.\n\nI believe Tomcat should respect the injections for the servlet's superclasses. What do you think is the right behavior?\n\nThank you,\nBobby", "is_private": false, "bug_id": 53090, "id": 158127, "time": "2012-04-17T08:07:14Z", "creator": "b.kapukaranov@gmail.com", "creation_time": "2012-04-17T08:07:14Z", "attachment_id": 28623}, {"count": 1, "tags": [], "creator": "markt@apache.org", "is_private": false, "id": 159415, "attachment_id": null, "bug_id": 53090, "creation_time": "2012-05-28T21:23:34Z", "time": "2012-05-28T21:23:34Z", "text": "Thanks for the patch. It has been applied to trunk and 7.0.x and will be included in 7.0.28 onwards."}, {"text": "Re r1343396 : I wonder whether interfaces should be scanned as well.\n\nCan injection-target-class be an interface?", "tags": [], "bug_id": 53090, "attachment_id": null, "count": 2, "id": 159421, "time": "2012-05-28T23:22:03Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2012-05-28T23:22:03Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 53090, "attachment_id": null, "id": 159467, "time": "2012-05-29T17:26:55Z", "creator": "violetagg@apache.org", "creation_time": "2012-05-29T17:26:55Z", "is_private": false, "text": "Hi,\n\nIn the Java Platform EE 6 Spec, EE.5.2.5. Annotations and Injection, they specify that resource annotations may appear on any superclass of the class.\n\nAnnotations and inheritance topic is described also on the wiki http://java.net/projects/javaee-spec/pages/AnnotationRules\n\n\u201cIn general, annotations on interfaces are ignored.\u201d\n\nHowever there are specified also exceptions of the rule.\n\nFor our use case \u2013 resource annotations (@Resource, @EJB etc.) and injection target classes \u2013 I think that we should ignore them.\n\nRegards\nVioleta"}]