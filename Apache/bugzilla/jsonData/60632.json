[{"count": 0, "tags": [], "creator": "jeff@redradishtech.com", "text": "Many people run Tomcat from systemd, and will be using 'journalctl' to manage Tomcat's stdout. journalctl has a not-easily-fixed bug that causes the last few stdout/stderr lines to be 'lost'. This is a problem, as the last few lines are usually the most important. Here I suggest a small workaround in bin/catalina.sh that I feel would be safe and worthwhile.\n\nA simple example: let's deploy a Tomcat instance running as a dedicated user:\n\n# useradd -s /bin/bash -d /tmp testtomcat\n# su - testtomcat\ncurl -sLO http://www-us.apache.org/dist/tomcat/tomcat-8/v8.5.11/bin/apache-tomcat-8.5.11.tar.gz\ntar xf apache-tomcat-8.5.11.tar.gz\ncd apache-tomcat-8.5.11\n\nIf we run 'bin/catalina.sh run' it starts normally.\n\ntesttomcat@jturner-desktop:~/apache-tomcat-8.5.11$ ./bin/catalina.sh run\nUsing CATALINA_BASE:   /tmp/apache-tomcat-8.5.11\nUsing CATALINA_HOME:   /tmp/apache-tomcat-8.5.11\nUsing CATALINA_TMPDIR: /tmp/apache-tomcat-8.5.11/temp\nUsing JRE_HOME:        /usr/lib/jvm/java-8-oracle\nUsing CLASSPATH:       /tmp/apache-tomcat-8.5.11/bin/bootstrap.jar:/tmp/apache-tomcat-8.5.11/bin/tomcat-juli.jar\n...\n\nLet's introduce an error. Say we got JAVA_HOME wrong. We get an error message as expected:\n\ntesttomcat@jturner-desktop:~/apache-tomcat-8.5.11$ JAVA_HOME=/incorrect/path ./bin/catalina.sh run\nUsing CATALINA_BASE:   /tmp/apache-tomcat-8.5.11\nUsing CATALINA_HOME:   /tmp/apache-tomcat-8.5.11\nUsing CATALINA_TMPDIR: /tmp/apache-tomcat-8.5.11/temp\nUsing JRE_HOME:        /incorrect/path\nUsing CLASSPATH:       /tmp/apache-tomcat-8.5.11/bin/bootstrap.jar:/tmp/apache-tomcat-8.5.11/bin/tomcat-juli.jar\n./bin/catalina.sh: 1: exec: /incorrect/path/bin/java: not found\ntesttomcat@jturner-desktop:~/apache-tomcat-8.5.11$ \n\nAll find and dandy.\n\nNow let's run Tomcat via systemd. Create a minimal service file as root and load it:\n\n# cat > /etc/systemd/system/testtomcat.service <<EOF\n[Service]\nType=simple\nUser=testtomcat\nExecStart=/tmp/apache-tomcat-8.5.11/bin/catalina.sh run\nEOF\n# systemctl daemon-reload\n\n(an aside: see https://jdebp.eu/FGA/systemd-house-of-horror/tomcat.html for why we call catalina.sh run from systemd instead of startup.sh) \n\nStart it, and see the status:\n\n# systemctl start testtomcat\n# systemctl status testtomcat -n5\n\u25cf testtomcat.service\n   Loaded: loaded (/etc/systemd/system/testtomcat.service; static; vendor preset: enabled)\n   Active: active (running) since Tue 2017-01-24 12:43:18 AEDT; 47s ago\n Main PID: 30648 (java)\n    Tasks: 33\n   Memory: 109.2M\n      CPU: 3.979s\n   CGroup: /system.slice/testtomcat.service\n           \u2514\u250030648 /usr/bin/java -Djava.util.logging.config.file=/tmp/apache-tomcat-8.5.11/conf/logging.properties -Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager -Djdk.tls.ephemeralDHKeySize=2\n\nJan 24 12:43:20 jturner-desktop catalina.sh[30648]: 24-Jan-2017 12:43:20.173 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory /tmp/apache-to\nJan 24 12:43:20 jturner-desktop catalina.sh[30648]: 24-Jan-2017 12:43:20.182 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory /tmp/apach\nJan 24 12:43:20 jturner-desktop catalina.sh[30648]: 24-Jan-2017 12:43:20.184 INFO [main] org.apache.coyote.AbstractProtocol.start Starting ProtocolHandler [http-nio-8180]\nJan 24 12:43:20 jturner-desktop catalina.sh[30648]: 24-Jan-2017 12:43:20.187 INFO [main] org.apache.coyote.AbstractProtocol.start Starting ProtocolHandler [ajp-nio-8109]\nJan 24 12:43:20 jturner-desktop catalina.sh[30648]: 24-Jan-2017 12:43:20.188 INFO [main] org.apache.catalina.startup.Catalina.start Server startup in 649 ms\n\n\nHappiness. All working normally.\n\nNow let's introduce an error. Any error that prevents Tomcat startup will do (e.g. incorrect permissions), but let's go with our invalid JAVA_HOME example:\n\ncat > /etc/systemd/system/testtomcat.service <<EOF\n[Service]\nType=simple\nUser=testtomcat\nEnvironment=JAVA_HOME=/incorrect/path\nExecStart=/tmp/apache-tomcat-8.5.11/bin/catalina.sh run\nEOF\n# systemctl daemon-reload\n# systemctl restart testtomcat\n# systemctl status testtomcat -n5\n\u25cf testtomcat.service\n   Loaded: loaded (/etc/systemd/system/testtomcat.service; static; vendor preset: enabled)\n   Active: failed (Result: exit-code) since Tue 2017-01-24 12:44:40 AEDT; 6s ago\n  Process: 30846 ExecStart=/tmp/apache-tomcat-8.5.11/bin/catalina.sh run (code=exited, status=127)\n Main PID: 30846 (code=exited, status=127)\n\nJan 24 12:44:40 jturner-desktop systemd[1]: Started testtomcat.service.\nJan 24 12:44:40 jturner-desktop systemd[1]: testtomcat.service: Main process exited, code=exited, status=127/n/a\nJan 24 12:44:40 jturner-desktop systemd[1]: testtomcat.service: Unit entered failed state.\nJan 24 12:44:40 jturner-desktop systemd[1]: testtomcat.service: Failed with result 'exit-code'.\n\n\nUnhappiness, as expected, but note one important detail: the actual error \"./bin/catalina.sh: 1: exec: /incorrect/path/bin/java: not found\" is missing in the logs.\n\nAgain, the above is just an example. The last log message from ANY failure, generated by scripts or Tomcat itself, will be lost.\n\nHere's what's going on. The logs are not actually 'lost', but just not \"tagged\" as belonging to the testtomcat unit (i.e. you can see them if you 'journalctl -f' before start). This is due to a systemd bug marked cant-fix:\n\nhttps://github.com/systemd/systemd/issues/1347\n\nwhich I was referred to when questioning this behaviour on stackoverflow:\n\nhttps://superuser.com/questions/1169906/systemd-bug-stdout-not-tagged-as-belonging-to-unit-when-non-root-user-specifie\n\nThe systemd bug isn't going to be fixed soon, as it relies on kernel additions.\n\nHere's what Tomcat can do. A simple workaround is to 'sleep' for a short period after emitting our last output, to give systemd a chance to tag it. Put this near the top of bin/catalina.sh:\n\n# If running in systemd, give it a chance to tag the last output. https://github.com/systemd/systemd/issues/1347\ntrap 'sleep 0.1' INT TERM EXIT\n\nand now when we 'systemctl status testtomcat' (or 'journalctl -u testtomcat') we see the final error message:\n\n# systemctl restart testtomcat\n# systemctl status testtomcat\n\u25cf testtomcat.service\n   Loaded: loaded (/etc/systemd/system/testtomcat.service; static; vendor preset: enabled)\n   Active: failed (Result: exit-code) since Tue 2017-01-24 12:58:39 AEDT; 6s ago\n  Process: 32326 ExecStart=/tmp/apache-tomcat-8.5.11/bin/catalina.sh run (code=exited, status=127)\n Main PID: 32326 (code=exited, status=127)\n\nJan 24 12:58:39 jturner-desktop systemd[1]: Started testtomcat.service.\nJan 24 12:58:39 jturner-desktop catalina.sh[32326]: /tmp/apache-tomcat-8.5.11/bin/catalina.sh: 1: exec: /incorrect/path/bin/java: not found\nJan 24 12:58:39 jturner-desktop systemd[1]: testtomcat.service: Main process exited, code=exited, status=127/n/a\nJan 24 12:58:39 jturner-desktop systemd[1]: testtomcat.service: Unit entered failed state.\nJan 24 12:58:39 jturner-desktop systemd[1]: testtomcat.service: Failed with result 'exit-code'.\n\nI'm not a POSIX guru but AFAIK 'trap' and '/bin/sleep' are pretty vanilla. The choice of a 0.1s delay is not very scientific. It fixes the problem on my system.", "id": 196350, "time": "2017-01-24T02:10:36Z", "bug_id": 60632, "creation_time": "2017-01-24T02:10:36Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 60632, "attachment_id": null, "id": 196351, "time": "2017-01-24T02:13:01Z", "creator": "jeff@redradishtech.com", "creation_time": "2017-01-24T02:13:01Z", "is_private": false, "text": "FYI I can't add an attachment - keep getting 'Permission denied' from attachment.cgi. Here's the suggested patch:\n\n\n--- bin/catalina.sh.orig\t2017-01-24 12:54:39.181880382 +1100\n+++ bin/catalina.sh\t2017-01-24 12:55:56.862144647 +1100\n@@ -100,6 +100,9 @@\n #                   case the default is \"true\"\n # -----------------------------------------------------------------------------\n \n+# If running in systemd, give it a chance to tag the last output. https://github.com/systemd/systemd/issues/1347\n+trap 'sleep 0.1' INT TERM EXIT\n+\n # OS specific support.  $var _must_ be set to either true or false.\n cygwin=false\n darwin=false"}, {"count": 2, "tags": [], "text": "I'd prefer to see this enabled with an environment variable (that should also set the length of the sleep). That way the default behaviour doesn't change, those that need to fix it have an option to do so and the delay can be set to an appropriate value for each system.", "attachment_id": null, "bug_id": 60632, "id": 196424, "time": "2017-01-25T20:39:39Z", "creator": "markt@apache.org", "creation_time": "2017-01-25T20:39:39Z", "is_private": false}, {"count": 3, "tags": [], "creator": "jeff@redradishtech.com", "attachment_id": null, "text": "> That way the default behaviour doesn't change, those that need to fix it have an option to do so and the delay can be set to an appropriate value for each system.\n\nOkay, how about:\n\n# If started with systemd, add 'Environment=CATALINA_EXIT_DELAY=0.1' to your service file to prevent systemd losing the last few log messages.  See https://github.com/systemd/systemd/issues/1347\nif [ -n \"${CATALINA_EXIT_DELAY:-}\" ]; then\n        trap 'sleep ${CATALINA_EXIT_DELAY}' INT EXIT TERM\nfi", "id": 196450, "time": "2017-01-26T12:09:32Z", "bug_id": 60632, "creation_time": "2017-01-26T12:09:32Z", "is_private": false}, {"count": 4, "tags": [], "text": "Thanks for the suggestion.\n\nThe new environment variable will be included in:\n- trunk for 9.0.0.M18 onwards\n- 8.5.x for 8.5.12 onwards\n- 8.0.x for 8.0.42 onwards\n- 7.0.x for 7.0.76 onwards", "attachment_id": null, "bug_id": 60632, "id": 196964, "time": "2017-02-13T16:41:21Z", "creator": "markt@apache.org", "creation_time": "2017-02-13T16:41:21Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 60632, "attachment_id": null, "text": "Re: r1782805\n\n+if [ -n \"${CATALINA_EXIT_DELAY:-}\" ]; then\n+    trap 'sleep ${CATALINA_EXIT_DELAY}' INT EXIT TERM\n+fi\n\n1. I suspect that \"trap\" won't see the value of CATALINA_EXIT_DELAY variable.\n\nI think that you either need double quotes there (so that variable expansion occurs), or add a line to export the variable, e.g.\n\nexport CATALINA_EXIT_DELAY\n\n\n2. I think that whatever sets the CATALINA_EXIT_DELAY variable, can also execute a \"trap\" command.\n\nE.g. you can do it in bin/setenv.sh\n\nIn the systemd example, I suspect that you can write several commands (connected with '&&') in the ExecStart line.\n\nThe original issue concerns all programs, started with systemd, so you have to patch all other services that you are starting, not only Tomcat?\n\nWhy a Tomcat-specific patch?\n\n\nOverall, an interesting feature, but\n- if someone configures a significant delay, it will cause concerns\n- it is a bit of a hack\n\n3.\n+#   CATALINA_EXIT_DELAY\n+#                   (Optional) If started with systemd, add\n+#                   'Environment=CATALINA_EXIT_DELAY=0.1' to your service file\n+#                   to prevent systemd losing the last few log messages.\n+#                   See https://github.com/systemd/systemd/issues/1347\n\n1) POSIX says that sleep expects an integer number.\n\nhttp://pubs.opengroup.org/onlinepubs/9699919799/utilities/sleep.html\n\nGNU implementation of sleep (in Linux) allows a floating point number and allows suffixes (s m h d).\n\n2) Maybe reference this bug as well.\nAt least it this bug has an example of how Tomcat can be run with systemd.", "id": 196995, "time": "2017-02-14T11:42:58Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2017-02-14T11:42:58Z", "is_private": false}, {"count": 6, "tags": [], "bug_id": 60632, "attachment_id": null, "id": 197020, "time": "2017-02-15T03:43:29Z", "creator": "jeff@redradishtech.com", "creation_time": "2017-02-15T03:43:29Z", "is_private": false, "text": "Konstantin, thanks for reviewing. You caused me to test and think it over some more. This patch is indeed useless, and should be removed (sorry Mark!).\n\nThe reasons are:\n\n- This patch doesn't help for logs generated by Java/Tomcat/webapps (I thought it would, but never actually tested). That's because 'catalina.sh run' calls 'exec', which replaces the entire bash process, and so the trap is never called. Besides which, it seems that the worry of systemd losing Java output is theoretical, at least on my system. In practice JVM shutdown is sufficiently slow that all output, even from shutdown hooks, is actually caught by systemd [1].\n\n- Making the delay opt-in means most systemd users won't benefit from it automatically. If something must be explicitly done, why not, as Konstantin points out, apply the workaround directly in the systemd service file:\n\nExecStart=/bin/sh -c '/tmp/apache-tomcat-8.5.11/bin/catalina.sh run; sleep 0.1'\n\n\nRegards,\nJeff\n\n\n[1] To verify that the last Java stdout is actually caught by systemd:\n\ncd /tmp\ncat > PrintExit.java <<EOF\npublic class PrintExit {\n\tpublic static void main(String[] args) throws Throwable {\n\n\t\tRuntime.getRuntime().addShutdownHook(new Thread() {\n\t\t\tpublic void run() {\n\t\t\t\tSystem.out.println(\"This is the very last thing printed before shutdown\"); \n\t\t\t}\n\t\t});\n\t\tjava.util.concurrent.TimeUnit.MINUTES.sleep(1000);\n\t\tSystem.out.println(\"Application Terminating ...\");\n\t}\n}\nEOF\njavac PrintExit.java\ncat > /etc/systemd/system/printexit.service <<EOF\n[Service]\nType=simple\nUser=root\nWorkingDirectory=/tmp\nExecStart=/usr/bin/java PrintExit\nEOF\nsystemctl daemon-reload\njournalctl -u printexit -f &\nsystemctl start printexit\n# Feb 15 14:32:27 jturner-desktop systemd[1]: Started printexit.service.\nsystemctl stop printexit\n# Feb 15 14:32:30 jturner-desktop systemd[1]: Stopping printexit.service...\n# Feb 15 14:32:30 jturner-desktop java[30981]: This is the very last thing printed before shutdown\n# Feb 15 14:32:30 jturner-desktop systemd[1]: printexit.service: Main process exited, code=exited, status=143/n/a\n# Feb 15 14:32:30 jturner-desktop systemd[1]: Stopped printexit.service.\n# Feb 15 14:32:30 jturner-desktop systemd[1]: printexit.service: Unit entered failed state.\n# Feb 15 14:32:30 jturner-desktop systemd[1]: printexit.service: Failed with result 'exit-code'.\n\n\n(In reply to Konstantin Kolinko from comment #5)\n> Re: r1782805\n>"}, {"count": 7, "tags": [], "text": "(In reply to Jeff Turner from comment #6)\n> This patch is indeed useless, and should be removed (sorry Mark!).\n\nNo problem. I'll revert those changes and then close this as WONTFIX.", "attachment_id": null, "bug_id": 60632, "id": 197028, "time": "2017-02-15T09:21:48Z", "creator": "markt@apache.org", "creation_time": "2017-02-15T09:21:48Z", "is_private": false}, {"text": "Changes reverted. There were never included in a release.", "tags": [], "bug_id": 60632, "is_private": false, "count": 8, "id": 197030, "time": "2017-02-15T09:43:09Z", "creator": "markt@apache.org", "creation_time": "2017-02-15T09:43:09Z", "attachment_id": null}]