[{"count": 0, "tags": [], "text": "Can JMeter have the option to ignore expired SSL certs when making HTTPS \nconnections? \n\nWhen JMeter 2.2.1 makes SSL requests to a webserver with an expired SSL\ncertificates, all SSL connection attempts fail with a Java\nCertificateExpiredException (see exception below). Having an unexpired SSL\ncertificate on the server fixes the problem. However, many internal test \nservers use expired certs -- hence an option to ignore certificate expiry \nwould be valuable.\n\nJMeter 1.9.1 showed different (and anomalous) behavior dealing with the same \nexpired certificates -- it gave out the misleading error \"HTTPS hostname \nwrong: should be <localhost>\" error, and only the first SSL connection would \nfail. See Bugzilla bug # 25505. \n\nThe error message in JMeter 2.2.1 is now accurate, and all HTTPS connections \n(not just the first) failing consistently with the exception below. \n\nAs JMeter uses JSSE, I had a look at the Sun site, especially at this \"Default \nPolicy Implementation and Policy File Syntax\" document -- no clues there:\n   http://java.sun.com/j2se/1.4.2/docs/guide/security/PolicyFiles.html\n\nEXCEPTION MESSAGE \n==================\njavax.net.ssl.SSLHandshakeException:\njava.security.cert.CertificateExpiredException: NotAfter: Sat Nov 12\n10:22:14 EST 2005\n\tat com.sun.net.ssl.internal.ssl.BaseSSLSocketImpl.a(DashoA6275)\n\tat com.sun.net.ssl.internal.ssl.SSLSocketImpl.a(DashoA6275)\n\tat com.sun.net.ssl.internal.ssl.SSLSocketImpl.a(DashoA6275)\n\tat com.sun.net.ssl.internal.ssl.SunJSSE_az.a(DashoA6275)\n\tat com.sun.net.ssl.internal.ssl.SunJSSE_az.a(DashoA6275)\n\tat com.sun.net.ssl.internal.ssl.SunJSSE_ax.a(DashoA6275)\n\tat com.sun.net.ssl.internal.ssl.SSLSocketImpl.a(DashoA6275)\n\tat com.sun.net.ssl.internal.ssl.SSLSocketImpl.j(DashoA6275)\n\tat\ncom.sun.net.ssl.internal.ssl.SSLSocketImpl.startHandshake(DashoA6275)\n\tat\nsun.net.www.protocol.https.HttpsClient.afterConnect(DashoA6275)\n\tat\nsun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(Da\nshoA6275)\n\tat\ncom.sun.net.ssl.internal.www.protocol.https.HttpsURLConnectionOldImpl.co\nnnect(DashoA6275)\n\tat\norg.apache.jmeter.protocol.http.sampler.HTTPSampler.sample(HTTPSampler.j\nava:424)\n\tat\norg.apache.jmeter.protocol.http.sampler.HTTPSamplerBase.sample(HTTPSampl\nerBase.java:514)\n\tat\norg.apache.jmeter.protocol.http.sampler.HTTPSamplerBase.sample(HTTPSampl\nerBase.java:503)\n\tat\norg.apache.jmeter.threads.JMeterThread.run(JMeterThread.java:247)\n\tat java.lang.Thread.run(Thread.java:534)\nCaused by: java.security.cert.CertificateExpiredException: NotAfter: Sat\nNov 12 10:22:14 EST 2005\n\tat\nsun.security.x509.CertificateValidity.valid(CertificateValidity.java:268\n)\n\tat\nsun.security.x509.X509CertImpl.checkValidity(X509CertImpl.java:564)\n\tat\nsun.security.validator.SimpleValidator.engineValidate(SimpleValidator.ja\nva:123)\n\tat sun.security.validator.Validator.validate(Validator.java:202)\n\tat\ncom.sun.net.ssl.internal.ssl.X509TrustManagerImpl.checkServerTrusted(Das\nhoA6275)\n\tat\ncom.sun.net.ssl.internal.ssl.JsseX509TrustManager.checkServerTrusted(Das\nhoA6275)\n\t... 14 more", "is_private": false, "bug_id": 39279, "id": 87817, "time": "2006-04-12T06:45:48Z", "creator": "sonam.chauhan@ce.com.au", "creation_time": "2006-04-12T06:45:48Z", "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 39279, "is_private": false, "id": 87831, "attachment_id": null, "creator": "sebb@apache.org", "creation_time": "2006-04-12T14:31:17Z", "time": "2006-04-12T14:31:17Z", "text": "Probably meant to refer to 2.1.1 - 2.2.1 does not exist yet"}, {"count": 2, "attachment_id": null, "creator": "sebb@apache.org", "is_private": false, "id": 88178, "time": "2006-04-17T22:37:58Z", "bug_id": 39279, "creation_time": "2006-04-17T22:37:58Z", "tags": [], "text": "This ought to be possible, given that the Java 1.4 browser plugin allows one to\ncontinue even if a certificate has expired."}, {"count": 3, "tags": [], "bug_id": 39279, "attachment_id": null, "is_private": false, "id": 88196, "time": "2006-04-18T12:03:26Z", "creator": "sf@sfritsch.de", "creation_time": "2006-04-18T12:03:26Z", "text": "Please add an option to treat all certificates as valid (even if the common name\ndoes not match the hostname, or if the certificate is self-signed).\n\nMaybe http://javaalmanac.com/egs/javax.net.ssl/TrustAll.html helps.\n\n"}, {"id": 92443, "tags": [], "bug_id": 39279, "is_private": false, "count": 4, "text": "Following on from comment by \"Stefan Fritsch 2006-04-18 12:03\" to treat all \ncertificates as valid, I am changing the subject to a more generic request. \n\nRecently, put a valid \"proper\" certificate on a test server and got this type \nof error:\n================\njava.io.IOException: HTTPS hostname wrong:  should be <internal.test.server>\n\tat sun.net.www.protocol.https.HttpsClient.b(DashoA12275)\n\tat sun.net.www.protocol.https.HttpsClient.afterConnect(DashoA12275)\n\tat \nsun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect\n================\n", "time": "2006-08-23T01:28:33Z", "creator": "sonam.chauhan@ce.com.au", "creation_time": "2006-08-23T01:28:33Z", "attachment_id": null}, {"count": 5, "attachment_id": null, "creator": "sebb@apache.org", "is_private": false, "id": 98942, "time": "2007-02-03T16:32:46Z", "bug_id": 39279, "creation_time": "2007-02-03T16:32:46Z", "tags": [], "text": "This has now been implemented for both the default Java and Httpclient HTTP \nsamplers.\n\nIt's in the current nightly if you want to try it out:\n\nhttp://people.apache.org/builds/jakarta-jmeter/nightly/"}]