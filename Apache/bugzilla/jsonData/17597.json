[{"count": 0, "tags": [], "bug_id": 17597, "attachment_id": null, "id": 32333, "time": "2003-03-03T15:01:59Z", "creator": "wegnerj@informatik.uni-tuebingen.de", "creation_time": "2003-03-03T15:01:59Z", "is_private": false, "text": "Hello,\n\ni used your ANT1.5.1 org.apache.tools.ant.taskdefs.Execute.getProcEnvironment\nmethod to get the System properties under W2K(Service Pack3) with SUN's JDK1.4.1_01.\nWhen trying to access a MySQL database the complete application crashes.\nI've solved this by NOT USING getProcEnvironment for this application !;-)\nI can't point to the problem, even before loading the database driver with\nreflection the application crashes.\nAlso when trying to access a remote database the application crashes.\nWhen not trying to access a database, all seems to work fine.\n\nCalling process:\nANT for calling application which calls getProcEnvironment to resolve path for\nloading shared library. Database is MySQL and i accessed with\norg.gjt.mm.mysql.Driver\n\nSee error in attachement.\n\nRegards, Joerg\n\njava.lang.OutOfMemoryError: unable to create new native thread\n    at java.lang.Thread.start(Native Method)\n    at...tools.ant.taskdefs.PumpStreamHandler.start(PumpStreamHandler.java:106)\n    at org.apache.tools.ant.taskdefs.Execute.execute(Execute.java:440)\n    atorg.apache.tools.ant.taskdefs.Execute.getProcEnvironment(Execute.java:180)\n    at wsi.ra.tool.SystemHelper.loadOSEnvironment(SystemHelper.java:126)"}, {"count": 1, "tags": [], "bug_id": 17597, "attachment_id": null, "id": 32335, "time": "2003-03-03T15:13:26Z", "creator": "levylambert@tiscali-dsl.de", "creation_time": "2003-03-03T15:13:26Z", "is_private": false, "text": "could you try to allocate more memory for ANT\n\n\n\n\nto use 200 Mb of memory for instance\n\n\n(this is just an example, 64 Mb might do)\n\n\n\n\n==> under Windows SET ANT_OPTS=\"-Xmx200m -Xms200m\"\n\n\n==> under UNIX    export ANT_OPTS=\"-Xmx200m -Xms200m\"\n"}, {"count": 2, "tags": [], "bug_id": 17597, "attachment_id": null, "id": 32338, "time": "2003-03-03T15:27:14Z", "creator": "wegnerj@informatik.uni-tuebingen.de", "creation_time": "2003-03-03T15:27:14Z", "is_private": false, "text": "Doesn't work. I used:\n setenv ANT_OPTS \"-Xmx200m -Xms200m\"\nunder Cygwin with a tcsh shell. The application was already started with:\n      <jvmarg value=\"-Xmx521m\"/>\n      <jvmarg value=\"-Xss128m\"/>"}, {"count": 3, "tags": [], "bug_id": 17597, "attachment_id": null, "id": 32341, "time": "2003-03-03T15:33:25Z", "creator": "ddevienne@lgc.com", "creation_time": "2003-03-03T15:33:25Z", "is_private": false, "text": "Then could you try starting without the new generational GC in JDK 1.4.1. A \ncolleage observed that this new GC created *hundreds* of thread, or error seems \nto be that you cannot create any more thread. Switching to the old GC using \njust a few threads might solve your issue!?!?! --DD"}, {"count": 4, "tags": [], "creator": "wegnerj@informatik.uni-tuebingen.de", "is_private": false, "text": "Sounds reasonable, this will explain the rapid-memory-consumption-peak.\nO.k., seems to be a JDK bug. I've tried:\n-Xnoclassgc and -Xincgc\nboth doesn't work. Any other suggestions ? Otherwise you can close this bug and\nsend a bug report to SUN's JDK, because you can explain the problem in more\ndetail and your community is greater !;-)", "id": 32343, "time": "2003-03-03T15:46:18Z", "bug_id": 17597, "creation_time": "2003-03-03T15:46:18Z", "attachment_id": null}]