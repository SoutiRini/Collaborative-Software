[{"count": 0, "tags": [], "bug_id": 22617, "attachment_id": null, "is_private": false, "id": 43079, "time": "2003-08-21T08:11:11Z", "creator": "lipp@danet.de", "creation_time": "2003-08-21T08:11:11Z", "text": "If I use BASIC authentication, tomcat obviously tries to authenticate an initial\nrequest against the security provider although the request does not include the\n\"Authorization: ...\" header yet! I have not tracked what credentials are used\nbut the assumption in the tomcat implementation seems to be that trying\nauthorization with the used \"default credentials\" should fail anyway, causing\ntomcat to then send the 401 reply and the browser to display the login dialog.\n\nAlthough I have to admit that I could not find something specific in the\nspecifications, I think this behaviour is a bug. Tomcat should query the\nsecurity provider only if it has received the \"Authorization: ...\" header as\npart of the request. Any request of a resource secured with BASIC authentication\nthat lacks this header should result in an immediate 401 response, i.e. without\nconsulting the security provider.\n\nWhy is this important? Well, especially in a J2EE environment a security realm\nmay support something like an \"unauthenticated identity\" used for anonymous\naccess of certain resources (but not the servlet in question). The current\nbehaviour of tomcat has the effect that there is an authorization request\nwithout credentials and the user is (without ever being prompted by the browser)\nidentified as the anonymous user. As tomcat thinks identification has been\nsuccessfully performed, it does not repond with a 401 but rather continues\nprocessing with the unauthenticated identity. This identity may (usually does)\nlack a lot of the rights that an authenticated user has and thus the user\nreceives a 403."}, {"count": 1, "tags": [], "creator": "markt@apache.org", "text": "The closest thing I could find in the spec to what you describe is in J2EE.3.4.3\nUnauthenticated Users.\n\nThis makes clear that the anonymous user is unathenticated and that the\ncontainer is responsible for providing a suitable principal for unauthenitcated\nusers to the EJB container.\n\nAuthentication is only required for protected resources and Tomcat will only\nprompt for authentication when accessing a protected resource.\n\nTomcat is consistent with the required behaviour.", "id": 73666, "time": "2005-04-14T22:53:24Z", "bug_id": 22617, "creation_time": "2005-04-14T22:53:24Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 22617, "text": "> Authentication is only required for protected resources and Tomcat will only\n> prompt for authentication when accessing a protected resource.\n\nThis is wrong. The whole point is that Tomcat DOES NOT PROMPT when basic\nauthentication is used. If the security module allows an unauthenticated user,\nyou never get the opportunity to authenticate as someone different, because\nTomcat never sends 401 to the browser.\n\nTomcat finds that the resource I'm trying to access is protected. This is OK.\nBut instead of sending a 401 and give me the opportunity to provide credentials,\nit obviously immediately tries to \"authenticate as unauthenticated user\". If\nthis is successful, it simply continues with this identity and I never get a prompt.\n\nAcing like this, Tomcat is not consistent in its behaviour. Try form based\nauthentication instead. If you use form based authentication, Tomcat ALWAYS\nshows the login form first, even if the security realm supports an\nunauthenticated identity. If form based authentication had been implemented just\nas basic authentication, Tomcat would find that the resource is protected, try\nto authenticate, find that the \"unautheticated identity\" works and continue with\nthis identity, never showing the login form. But it does!\n\nThe point is that basic authentication and form based authentication behave\ndifferently when the security realm supports an unauthenticated identity. Using\nform based authentication, you are prompted for credentials; using basic\nauthentication, you are not prompted. You cannot derive from the specs which\nbehaviour is correct, I agree with this. However, Tomcat should consistently\nstick to one of those possibilities and should not act differently depending on\nthe authentication method chosen.", "id": 73674, "time": "2005-04-15T09:19:01Z", "creator": "lipp@danet.de", "creation_time": "2005-04-15T09:19:01Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "creator": "markt@apache.org", "text": "I have done some testing with the latest code from CVS but the behaviour should\nbe the same with 4.1.24\n\nThe key is how your realm authenticates when username=null and when username=\"\"\n\nusername=null when there are no authentication headers\nusername=\"\"   when there are headers but the user just hit enter on the BASIC\nauth dialog\n\nI have tested this with the memory realm with entries in tomcat-users.xml of the\nform:\n<user username=\"\" password=\"\" roles=\"bug22617\"/>\n<user username=\"tomcat\" password=\"tomcat\" roles=\"tomcat\"/>\n\nand web.xml entries that look like:\n  <security-constraint>\n    <display-name>Bug 22617</display-name>\n    <web-resource-collection>\n      <web-resource-name>Bug 22617</web-resource-name>\n      <url-pattern>/bug22617/*</url-pattern>\n    </web-resource-collection>\n    <auth-constraint>\n      <role-name>bug22617</role-name>\n      <role-name>tomcat</role-name>\n    </auth-constraint>\n  </security-constraint>\n\n  <login-config>\n    <auth-method>BASIC</auth-method>\n  </login-config>\n\nWith this configuration I always get prompted for a user name and password and\njust pressing enter or using tomcat/tomact allows me to see the page.\n\nBased on this, I am pretty sure you need to change your Realm implementation so\nthat username=null always fails authentication. Given that Realm is an internal\nTomcat interface, I don't see this as being an unreasonable requirement to be\nplaced on custom Realm implementations.\n\nI agree that the behaviour is inconsistent if the Realm treats username=null and\nusername=\"\" as equivalent. However, I believe such behaviour in a realm is not\ncorrect.\n\nI'll leave this open for now until you respond, but I am minded to close this as\ninvalid.", "id": 74193, "time": "2005-04-27T23:59:45Z", "bug_id": 22617, "creation_time": "2005-04-27T23:59:45Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 22617, "attachment_id": null, "is_private": false, "id": 74214, "time": "2005-04-28T11:15:16Z", "creator": "lipp@danet.de", "creation_time": "2005-04-28T11:15:16Z", "text": "I think you are bluring the distinction between a user not being identified\n(yet) and thus being \"null\" and the user with name \"\". I admit that the latter\nis a very short username, but -- as you state -- this is what the browser-user\nhas entered by simply hitting enter.\n\nIn my opinion, user \"\" is no longer anonymous, it is simply a user with a very\nshort name. Of course, a Realm implementation may take this as a shortcut for\n\"anonymous\" or \"nobody\", and assign the \"unauthenticated identity\", but it may\nas well require a password for this username. \n\nI still consider it an error that Tomcat calls the Realm implementation at all\nif authentication is BASIC and it has not received any authentication headers\nyet. It should simply have the browser prompt the user for credentials, just\nlike form based authentication ALWAYS displays the form (and does not call the\nRealm implementation first with username being \"null\").\n\nOf course, the Realm interface is an internal interface. But the point is that\nTomcat invokes this interface differently depending on the authentication method\nused!\n\nThe practical problem is that I actually do not supply the realm implementation,\nJBoss does. I simply supply a JAAS login module. And in a J2EE/JBoss context, I\nhave to accept a user being \"null\" as the anonymous user, because this is what\nmy J2EE clients use as credentials when trying to access anonymously (if I was\nto follow your line, a client that wanted to act with the unauthenticated\nidentity would have to include the necesary code to set the username to \"\" -- I\ndon't think this is reasonable). Now don't say \"well this is a JBoss problem\"; I\nstrongly doubt that e.g. Geronimo uses username \"\" instead of user being \"null\"\nto represent an anonymous client.\n\nI still think a fix would be quite simple: if ((authentication == BASIC) AND (no\nauthentication headers)) { \"send 401 to browser\" }. This would make the\nbehaviour consistent with form based login (and Jetty and WebLogicServer, btw.\n-- not being able to derive the correct behaviour from the specifications, this\nmay be a point). As a user, I can still hit the return key and if the Realm\nimplementation allows anonymous access, it can assign the \"unauthenticated\nidentity\" if username is \"\" and password is \"\" (as you have proposed the Realm\nimplementation should).\n"}, {"count": 5, "tags": [], "creator": "markt@apache.org", "text": "Got it. As soon as I read your last post it all made sense.\n\nYour are right, this is a bug and the fix is simple.\n\nI have commited a fix for this to TC4.1.x and TC5.5.x", "id": 74252, "time": "2005-04-28T21:00:21Z", "bug_id": 22617, "creation_time": "2005-04-28T21:00:21Z", "is_private": false, "attachment_id": null}]