[{"count": 0, "tags": [], "creator": "danim@soin.co.cr", "attachment_id": null, "id": 37859, "time": "2003-05-27T18:02:18Z", "bug_id": 20268, "creation_time": "2003-05-27T18:02:18Z", "is_private": false, "text": "I have installed Tomcat 5.0.2 in Windows 2003 server as Administrator, and \nafter I start it, it takes 100% CPU until I stop it.\nThe process using the CPU is tomcatw.exe."}, {"count": 1, "tags": [], "bug_id": 20268, "attachment_id": null, "is_private": false, "id": 37873, "time": "2003-05-27T22:13:15Z", "creator": "remm@apache.org", "creation_time": "2003-05-27T22:13:15Z", "text": "I don't know if this is specific to Windows 2003. If it is, you'll have to debug\nit yourself, or wait until we find a way to reproduce this, as this works for me\non Win 2k and XP, with Sun JDK 1.4.x.\n\nPlease do not reopen the report unless you can provide useful information."}, {"count": 2, "tags": [], "creator": "davidabadir@carfax.com", "text": "We also have Tomcat 5.0.28/Java 1.4.2/ColdFusion 6/Windows Server 2003.  \n\nSometimes when Tomcat is started, it initializes the installed servlets and the\nnext thing you know, it's pegged the CPU at 100% and memory held by Tomcat\n(according to the Task Manager) climbs indefinitely until Windows terminates the\nprocess.\n\nWe can reproduce this problem by hammering our most complex servlet **heavily**\njust as Tomcat is initializing (whether from a boot-up or a restart). If Tomcat\nis not slammed during initialization, everything is *fine* and Tomcat can\noperate normally for months at a time.\n\nThis is a particular problem for us to solve because our business requirements\ndemand up to four full installs a day, and any given one of these installs can\ncause a Tomcat server to go wild.\n\nWe would appreciate any help you can offer on this problem.\n", "id": 84574, "time": "2006-01-12T23:20:46Z", "bug_id": 20268, "creation_time": "2006-01-12T23:20:46Z", "is_private": false, "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 20268, "text": "If you provide a test app and accompanying \"hammering\" script, maybe we could\nhelp.  It would also be useful to take out other variables, like the ColdFusion\nlayer, to further isolate possible performance issue.  In addition, if you could\nplease try testing your app with the latest 5.5 stable instead of a 2+ year-old\nrelease, that'd be awesome.\n\n(Also updating version to 5.0.28)\n(And downgrading priority as this is hard to reproduce and there's an easy\nworkaround via a ServletContextListener or something similar that will deny all\nrequests until the app is done initializing)", "count": 3, "id": 88128, "time": "2006-04-15T16:15:22Z", "creator": "yoavs@computer.org", "creation_time": "2006-04-15T16:15:22Z", "is_private": false}, {"attachment_id": null, "tags": [], "bug_id": 20268, "is_private": false, "count": 4, "id": 88157, "time": "2006-04-17T15:07:23Z", "creator": "vramchandani@aaamissouri.com", "creation_time": "2006-04-17T15:07:23Z", "text": "I had voted for this bug some time back while having similar issue with tomcat \n5.0.28.\nWe finally resolved our server breaking issue by replacing the older version of \njdk (jdk1.4.1_02) with the new one(jdk1.4.2_11).\nThe older version of the JDK had memory leak issues which caused my application \nand eventually the server to crash.We were hammering or application with just 3-\n4 users.Sometimes even with refreshing the page 2-3 times 'quickly enough' \nwould crash the server.Replacing the jdk solved it for us.So I wonder if this \nis really a tomcat 5.0.28 issue?\nThanks.\n\n(In reply to comment #3)\n\n> If you provide a test app and accompanying \"hammering\" script, maybe we could\n> help.  It would also be useful to take out other variables, like the \nColdFusion\n> layer, to further isolate possible performance issue.  In addition, if you \ncould\n> please try testing your app with the latest 5.5 stable instead of a 2+ year-\nold\n> release, that'd be awesome.\n> (Also updating version to 5.0.28)\n> (And downgrading priority as this is hard to reproduce and there's an easy\n> workaround via a ServletContextListener or something similar that will deny \nall\n> requests until the app is done initializing)\n\n"}, {"count": 5, "tags": [], "bug_id": 20268, "attachment_id": null, "text": "I am resolving this as invalid given that:\n- no test case has been provided\n- the Tomact team can not reproduce this\n- the user comment that they experienced this issue and it was resolved by a JVM\nupgrade", "id": 92995, "time": "2006-09-04T22:42:55Z", "creator": "markt@apache.org", "creation_time": "2006-09-04T22:42:55Z", "is_private": false}]