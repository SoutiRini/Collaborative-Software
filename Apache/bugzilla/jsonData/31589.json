[{"count": 0, "tags": [], "creator": "Meg.watson@hp.com", "attachment_id": null, "text": "Hi,\n\nI'm attaching the log of a recent junit test suite run against the latest Ant \nCVS (1.7 Alpha) checkout.\n\nWe're happy to help fix some of these problems as well as we can.  The JVM on \nOpenVMS has some oddities.\n\nWe haven't tried to fix anything except the java task.  We made a patch for \nthe problems (failures) in Javatest; we needed that to work for NetBeans 4.0 \nsupport on OpenVMS.  With our fix, we now see no failures of the Javatest and \n5 errors.   Previously (as this attachment shows) there were 24 tests run, 3 \nfailures and 5 errors.\n\nI'm sure there are probably some obvious things you can tell me to do to get a \nbetter success rate on openvms.  I'm open to your suggestions.\n\nThanks for your help,\nMeg Garrison\nHewlett-Packard OpenVMS Engineering", "id": 64783, "time": "2004-10-07T20:03:39Z", "bug_id": 31589, "creation_time": "2004-10-07T20:03:39Z", "is_private": false}, {"count": 1, "text": "Created attachment 12986\nLog file from ant junit test run against latest cvs sources", "creator": "Meg.watson@hp.com", "is_private": false, "id": 64784, "time": "2004-10-07T20:05:06Z", "bug_id": 31589, "creation_time": "2004-10-07T20:05:06Z", "tags": [], "attachment_id": 12986}, {"count": 2, "tags": [], "bug_id": 31589, "attachment_id": null, "id": 64787, "time": "2004-10-07T21:32:46Z", "creator": "stevel@apache.org", "creation_time": "2004-10-07T21:32:46Z", "is_private": false, "text": "A lot of these seem to have an underlying cause; file system differences. \n\nFor example, lots of tests fail as an expected file isn't where we expect it. \n\nWe also seem to get different return codes from forked java programs, which may\nbe related to either the way VMS does returns differently, \n\n<touch> doesnt set dates:\n\n    [junit] Testcase: testMillis(org.apache.tools.ant.taskdefs.TouchTest):\tFAILED\n    [junit] Time 662256000000 is not within 1000 ms of 3813679200000\n    [junit] junit.framework.AssertionFailedError: Time 662256000000 is not\nwithin 1000 ms of 3813679200000\n    [junit] \tat junit.framework.Assert.fail(Assert.java)\n    [junit] \tat junit.framework.Assert.assertTrue(Assert.java)\n    [junit] \tat\norg.apache.tools.ant.taskdefs.TouchTest.assertTimesNearlyMatch(TouchTest.java)\n\nThis looks like File.touch() doesn't work, as whenever Ant tries to put the\nclock back on a file, we get a failure. Is this a known feature of the VMS JVM?\n\nThe other file system test that fails everywhere is File.isDirectory(). A lot of\ntests verify that directories are not valid sources, and this isnt being picked\nup. Again, is this a known VMS quirk?\n"}, {"count": 3, "tags": [], "creator": "Meg.watson@hp.com", "attachment_id": null, "text": "Yes, file system differences could certainly account for the majority of the \ntest failures.\n\nTouchtests:\nHmm, I'll have to look into this a little deeper.\n\nexec() return codes:\nOn VMS, success is odd, usually 1, but odd nonetheless, and failure is even.  \nI'll check with the JVM folks and see if there is some kind of logical name we \ncan specify to tell the JVM to behave differently.\n\nisDirectory:\nisDirectory does indeed work on OpenVMS.  However, on VMS the directory is a \nfile named \"somefoldername.DIR\" (case of the extension is important, BTW), so \nif there is a file in the same directory as \"somefoldername.DIR\" with the \nname \"somefoldername\" (no extension), then when the call is made to \nFile.isDirectory(new File(\"/a/b/c/somefoldername\")), false is returned.  I \nsuspect that is what is happening.  Note that if there is no file \nnamed \"somefoldername\" (no extension) then File.isDirectory(new File\n(\"/a/b/c/somefoldername\") will return true.\n\nMore on touch and exec a little later today.\n", "id": 64823, "time": "2004-10-08T11:58:40Z", "bug_id": 31589, "creation_time": "2004-10-08T11:58:40Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 31589, "text": ">>This looks like File.touch() doesn't work, as whenever Ant tries to put the\n>>clock back on a file, we get a failure. Is this a known feature of the VMS \n>>JVM?\n\nWhat is File.touch()?  Not part of Java is it?", "id": 64847, "time": "2004-10-08T18:08:55Z", "creator": "Meg.watson@hp.com", "creation_time": "2004-10-08T18:08:55Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "text": "At the moment, it looks like File.setLastModified() is not working correctly \non VMS.  I am in contact with the JVM team and will post more information as I \nhave it.", "attachment_id": null, "bug_id": 31589, "id": 64849, "time": "2004-10-08T18:23:34Z", "creator": "Meg.watson@hp.com", "creation_time": "2004-10-08T18:23:34Z", "is_private": false}, {"count": 6, "tags": [], "creator": "Meg.watson@hp.com", "text": "Turns out to be a VMS JVM bug in their file information cacheing algorithm.  I \nhave a switch to use to turn it off and am re-running the tests now.", "id": 64852, "attachment_id": null, "bug_id": 31589, "creation_time": "2004-10-08T23:36:04Z", "time": "2004-10-08T23:36:04Z", "is_private": false}, {"count": 7, "tags": [], "bug_id": 31589, "text": "Created attachment 13098\nOpenVMS test run results against 1.7 from 11-Oct CVS source", "id": 65187, "time": "2004-10-15T15:12:50Z", "creator": "Meg.watson@hp.com", "creation_time": "2004-10-15T15:12:50Z", "is_private": false, "attachment_id": 13098}, {"count": 8, "text": "Looking at this... if JUnitTaskTest fails, then in theory no other test even \nmatters.  :)  So I'd say that would be the first to get working!", "bug_id": 31589, "attachment_id": null, "id": 81660, "time": "2005-10-24T19:32:55Z", "creator": "mbenson@apache.org", "creation_time": "2005-10-24T19:32:55Z", "tags": [], "is_private": false}]