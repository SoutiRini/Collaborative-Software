[{"attachment_id": null, "tags": [], "creator": "vladimir@bossicard.com", "text": "It seems to me that the <rmic> task will not generate the files into another folder.\n\n <rmic base=\"${classes.rmi.dir} \n       includes=\"**/*.class\" classpath=\"${classes.dir}\" />\n\nwhen\n\n <rmic base=\"${classes.dir} \n       includes=\"**/*.class\" classpath=\"${classes.dir}\" />\n\nworks perfectly.\n\ndefining sourcebase doesn't seem to help either.", "count": 0, "id": 38749, "time": "2003-06-12T04:14:01Z", "bug_id": 20699, "creation_time": "2003-06-12T04:14:01Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 20699, "is_private": false, "text": "I'm not sure I'm following you here.\n\nrmic will generate .class or .idl files (what kind of files depends on the Java\nversion and some attributes) and put them at the same place the .class file you\nare \"rmicing\".  base says where <rmic> is going to find the .class files \"to rmic\".\n\nrmic has the optional ability to generate .java files as well, those will be\nplaced into the directory specified by sourcebase.\n\nIIUC you want the generated .class or .idl files to end up in a different\ndirectory than the .class files they have been generated from, correct?  If so,\nlet's degrade it to an enhancement request 8-)", "id": 39340, "time": "2003-06-24T13:24:43Z", "creator": "bodewig@apache.org", "creation_time": "2003-06-24T13:24:43Z", "attachment_id": null}, {"count": 2, "tags": [], "text": "\"and put them at the same place the .class file you are \"rmicing\" \"\n\nthe question then becomes: is it possible to generate the \"rmicing\" files into\nanother folder?", "is_private": false, "bug_id": 20699, "id": 39342, "time": "2003-06-24T14:17:41Z", "creator": "vladimir@bossicard.com", "creation_time": "2003-06-24T14:17:41Z", "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 20699, "text": "You run rmic on a .class file that has been compiled by javac and written by you,\nyou have the full control over its placement.  Please help me to see what I'm\nmissing.", "id": 39344, "time": "2003-06-24T14:28:42Z", "creator": "bodewig@apache.org", "creation_time": "2003-06-24T14:28:42Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "text": "I'm completely for this.  I believe what we're looking for is a way to utilize \nrmic \"-d <directory> argument, e.g. \"rmic -d /bin/stubs Class1\" etc...\n\nI found the problem after looking at the verbose output from ant.  It already \nuses \"-d\", passing it the \"base\" argument as the value.  That could be o.k., as \nlong as I could specify an absolute path to the \"includes\" argument - but this \nis hardwired to only search underneath \"base\" as far as I can tell.\n\nMy current workaround is to find any **/*_Stub.class files after rmic runs, and \nmove them to the desired folder.  NOT PRETTY, but it's the best I can come up \nwith at the moment.\n\nI'm also not liking how the classpath is always sent to rmic on the command \nline - I'd like to be able to specify the entire path myself (or not at all) \nwithout ant appending the entire existing classpath to it.\n\nI'm thinking about writing my own rmic task implementation at the moment...  :-)", "is_private": false, "bug_id": 20699, "id": 78556, "time": "2005-08-17T01:43:18Z", "creator": "bugs@mark.ziesemer.com", "creation_time": "2005-08-17T01:43:18Z", "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 20699, "is_private": false, "text": "I started digging into the source code for the RMIC task.  I'd like to write a \npatch for this.  We need to split things up so that the \"base\" property \n(baseDir instance variable) is not used for both the directory scanner, and for \nthe \"-d\" argument within setupRmicCommand(String[]) in DefaultRmicAdapter.\n\nWe should use a new property to do this properly.  \"base\" is already clearly \ndefined as \"the location to store the compiled files\".  I'm thinking a property \nlike \"sourcebase\" which would be used for the directory scanner, and would \ndefault to \"base\".  Yes, \"sourcebase\" is already taken, though awkwardly-\nnamed.  Maybe \"includesBase\"?\n\nPlease let me know if something like this is something that would be considered \nfor acceptance as a patch into the main version, or if I should just continue \ncreating my own implementation...", "id": 78593, "time": "2005-08-17T18:36:01Z", "creator": "bugs@mark.ziesemer.com", "creation_time": "2005-08-17T18:36:01Z", "attachment_id": null}, {"count": 6, "tags": [], "text": "Created attachment 16086\nProposed patch to fix bug 20699.\n\nAdds \"includesBase\" field to allow for \"base\" to be used exclusively for the\ndestination directory, as it is currently.  \"includesBase\" will be used to\nprovide the parent for any includes, includesFile, excludes, etc. arguments.", "is_private": false, "bug_id": 20699, "id": 78602, "time": "2005-08-17T20:55:26Z", "creator": "bugs@mark.ziesemer.com", "creation_time": "2005-08-17T20:55:26Z", "attachment_id": 16086}, {"attachment_id": null, "tags": [], "creator": "alexeys@inventigo.com", "is_private": false, "count": 7, "id": 78606, "time": "2005-08-17T21:31:17Z", "bug_id": 20699, "creation_time": "2005-08-17T21:31:17Z", "text": "WFM without any problems. My build does output RMI stabs into a different folder."}, {"count": 8, "tags": [], "bug_id": 20699, "is_private": false, "text": "... sorry. Actually I do not, the build script is copying **/*_Stub.class files\nafter <rmic>.", "id": 78607, "time": "2005-08-17T21:36:03Z", "creator": "alexeys@inventigo.com", "creation_time": "2005-08-17T21:36:03Z", "attachment_id": null}, {"attachment_id": null, "tags": [], "creator": "bugs@mark.ziesemer.com", "text": "That is also my ugly workaround for the moment.  I don't like it, because rmic \nalready provides the option to do this for us.  (And as stated in comment #4, \nthe current implementation even prevents us from using it.)  Granted, this \nhopefully will never be a concern, but what if someone wrote a class called \n*_Stub.class that wasn't even a stub or generated by rmic?  Unlikely, but \nalways plan for the worst-case scenarios...\n\nTo me, this seems like rather important functionality that's missing from RMIC, \nb/c the stubs are generated from the server for use on the client.  Good code \norganization should probably have the interfaces, server, and client in 3 \nseparate source trees.\n\nAlexey, is there any chance at getting this committed into at least HEAD, \nsooner than later?  I\u2019d really like to include this functionality into my build \nscripts, but it will cause problems for others using the code base.  I\u2019d rather \nhave them use something directly from Ant, rather than everyone having to \nmanually patch.  Thanks!!\n", "count": 9, "id": 78608, "time": "2005-08-17T22:31:05Z", "bug_id": 20699, "creation_time": "2005-08-17T22:31:05Z", "is_private": false}, {"count": 10, "tags": [], "text": "I would prefer an inner <fileset> approach.", "is_private": false, "bug_id": 20699, "id": 78609, "time": "2005-08-17T22:37:32Z", "creator": "alexeys@inventigo.com", "creation_time": "2005-08-17T22:37:32Z", "attachment_id": null}, {"count": 11, "tags": [], "text": "... and \"destdir\" attribute", "is_private": false, "bug_id": 20699, "id": 78610, "time": "2005-08-17T22:38:59Z", "creator": "alexeys@inventigo.com", "creation_time": "2005-08-17T22:38:59Z", "attachment_id": null}, {"count": 12, "tags": [], "text": "I completely agree, though I was working carefully to maintain 100% backwards \ncompatibility...\n\nHowever, I really like \u201cdestDir\u201d (can we capitalize the d?) \u2013 it\u2019s much less \nambiguous than \u201cbase\u201d.  The benefits of the FileSet are undisputed\u2026\n\nHow about requiring EITHER \u201cbase\u201d OR (\u201cdestDir\u201d and a <FileSet/>) ?  This \nshould maintain compatibility, and provide the additional functionality \u2013 is \nthis what you were thinking?\n\nWith my \u201cincludesBase\u201d idea, I automatically added it to the classpath, as I \nunderstand it to be a requirement for the given use case.  Should I do this \nwith the FileSet as well?\n\nIf you think that we could get this into HEAD in the next week or two, I\u2019ll \nmake the changes tonight!\n\n(Off-topic, but has anyone had any luck loading the ANT source into Eclipse as \na project?)\n\nThanks for your quick responses.  With over 700+ open bugs on the project, I \nwas worried if this would ever get any attention.  Shame on me for doubting!  :-\n)", "is_private": false, "bug_id": 20699, "id": 78611, "time": "2005-08-17T23:06:39Z", "creator": "bugs@mark.ziesemer.com", "creation_time": "2005-08-17T23:06:39Z", "attachment_id": null}, {"count": 13, "tags": [], "text": "\"destdir\" is everywhere in lower case.", "is_private": false, "bug_id": 20699, "id": 78612, "time": "2005-08-17T23:12:09Z", "creator": "alexeys@inventigo.com", "creation_time": "2005-08-17T23:12:09Z", "attachment_id": null}, {"count": 14, "tags": [], "creator": "bugs@mark.ziesemer.com", "attachment_id": 16129, "text": "Created attachment 16129\nProposed patch to fix bug 20699, #2.\n\nUpdate to my previous patch.  Complete list of changes:\n- Added \"destDir\" attribute and support for inner FileSet.\n- Added \"sourcesOnClasspath\" attribute to automatically include any source\nfolders on the classpath.\n- Updated detection to see if _Skel.class files were created or not, as by\ndefault they are no longer created in JDK1.5.  (This included additional\nfunctionality in JavaEnvUtils for future reusability, I hope.)\n- Fixed the compileList so that is is cleared at the beginning of execute(),\nnot at the end, to fix bug #21089, and maybe #24359.\n- Updates to the Rmic.html manual page.\n- Everything should be 100% backwards compatible; I did a fair amount of\ntesting with various scenarios, but any further checking would be appreciated.\n\nNote: The existing source files had the Rmic.html in Unix format, and all the\nother files in PC format, which can be seen in the diff.  I'm not sure how it's\ngoing to upload as such into Bugzilla...", "id": 78751, "time": "2005-08-20T07:41:00Z", "bug_id": 20699, "creation_time": "2005-08-20T07:41:00Z", "is_private": false}, {"attachment_id": null, "tags": [], "creator": "stevel@apache.org", "is_private": false, "count": 15, "id": 78799, "time": "2005-08-22T11:46:20Z", "bug_id": 20699, "creation_time": "2005-08-22T11:46:20Z", "text": ">- Updated detection to see if _Skel.class files were created or not, as by\n>default they are no longer created in JDK1.5.  (This included additional\n>functionality in JavaEnvUtils for future reusability, I hope.)\n\nYou need to be working with CVS_HEAD rmic. This changed the default to\nexplicitly ask for _Skel files, and should have the JavaEnvUtils stuff to detect\njava1.5 already."}, {"count": 16, "tags": [], "bug_id": 20699, "is_private": false, "text": "Will re-prepare once more.  I looked at CVS_HEAD, and EnvUtils was unchanged.  \nIt already had 1.5 detection - I didn't add that - but there was no good way to \ntest for less than /greater than.  (The 1.5 check would fail for 1.6 (Mustang) \nfor example.)\n\nI also want to check that JRMC 1.1 is still the default for JDK's <1.5 - I \ndidn't see this to be in the head code at first glance, will look into it.\n\nAlso, after reviewing your comments on bug #33862, I can get the \"rmi 1.3\" idea \ntaken care of.  Any ideas better than Float parsing to deal with the version \n#'s the user passes in?\n\nThanks for reviewing this!", "id": 78810, "time": "2005-08-22T15:24:29Z", "creator": "bugs@mark.ziesemer.com", "creation_time": "2005-08-22T15:24:29Z", "attachment_id": null}, {"count": 17, "tags": [], "bug_id": 20699, "text": "Do we really want to be explicitly creating the skeleton files, overriding the \npreference of the JDK, and forcing the user to add the \"-v1.2\" attribute \notherwise?  (Then if/when 1.3 does come out, the Ant buildfile will be \nresponsible for downgrading to the 1.2 version, possibly against the user's \npreference.)\n\nJust let me know if I'm concerning myself with things I shouldn't be concerned \nwith....", "id": 78902, "time": "2005-08-24T04:41:40Z", "creator": "bugs@mark.ziesemer.com", "creation_time": "2005-08-24T04:41:40Z", "is_private": false, "attachment_id": null}, {"count": 18, "tags": [], "bug_id": 20699, "text": "We stay with the original defaults for rmic for the same reason we dont enable\nthe java1.5 language options on javac in Jaa1.5 - minimising the risk of shared\nbuild files breaking.\n\nIf you write a project on java1.4, publish it and someone running java1.5\ndownloads and tries to rebuild your app, you dont want to end up fielding\nsupport calls saying \"enum is now a reserved word\" or \"rmic doesnt generate\nstubs\". you want to know that your build file works consistently across\nplatforms, and that is what we deliver.\n\nSun appear to have different goals, or a different view of the world; one of\nlittle self-contained projects where the developer/dev team can all move up to a\nnew java version simultaneously. They also still think people build using the\ncommand line tools, not via IDE or ant/maven. Accordingly, sometimes they change\nthings that they think are \"best\" for their imagined customer. We, with a focus\nmore on consistency and backwards compability, have to change them back.", "id": 78909, "time": "2005-08-24T11:36:02Z", "creator": "stevel@apache.org", "creation_time": "2005-08-24T11:36:02Z", "is_private": false, "attachment_id": null}, {"count": 19, "tags": [], "bug_id": 20699, "is_private": false, "text": "Created attachment 16183\nProposed patch to fix bug 20699, #3.\n\nUpdate to my previous patch.  Complete list of changes:\n- (NEW) Patched against snapshot of CVS HEAD (ant_20050823101201).\n- Added \"destDir\" attribute and support for inner FileSet.\n- Added \"sourcesOnClasspath\" attribute to automatically include any source\nfolders on the classpath.\n- Fixed the compileList so that is is cleared at the beginning of execute(),\nnot at the end, to fix bug #21089, and maybe #24359.\n- Updates to the Rmic.html manual page.\n- Everything should be 100% backwards compatible; I did a fair amount of\ntesting with various scenarios, but any further checking would be appreciated.", "id": 78947, "time": "2005-08-24T22:46:47Z", "creator": "bugs@mark.ziesemer.com", "creation_time": "2005-08-24T22:46:47Z", "attachment_id": 16183}, {"count": 20, "tags": [], "bug_id": 20699, "is_private": false, "text": "svn revision 805320 contains the destdir part of the patch, which was the original request, hence closing it as fixed.\n\nI'll look into the other parts but won't commit on applying them (the fileset part would be a resource collection by now and may turn out to be a little too much work).  The sourcesOnClasspath part contains too much magic for me.", "id": 129755, "time": "2009-08-18T01:31:26Z", "creator": "bodewig@apache.org", "creation_time": "2009-08-18T01:31:26Z", "attachment_id": null}, {"count": 21, "tags": [], "bug_id": 20699, "is_private": false, "text": "I've opened a new enhancement request (bug #47702) for the resource collection stuff, all other parts of the patch should be in trunk by now.", "id": 129831, "time": "2009-08-21T00:15:41Z", "creator": "bodewig@apache.org", "creation_time": "2009-08-21T00:15:41Z", "attachment_id": null}]