[{"count": 0, "tags": [], "creator": "alex-apache@gossamer-threads.com", "text": "This is a duplicate of PR2074, PR5338, PR6804 and possibly others I couldn't \nfind in bugzilla.\n\nBasically the problem is, if you have:\n\nProxyPass /foo http://newserver/foo\nProxyPassReverse /foo http://newserver/foo\n\nThen an SSI of:\n\n<!--#include virtual=\"/foo/bar\"-->\n\n_will_ be proxied. If instead of ProxyPass you use:\n\nRewriteRule /foo(.*) http://newserver/foo$1 [P]\n\nthen the above SSI is _not proxied_. This is because of:\n\n        /*\n         *  Ignore this rule on subrequests if we are explicitly\n         *  asked to do so or this is a proxy-throughput or a\n         *  forced redirect rule.\n         */\n        if (r->main != NULL &&\n            (p->flags & RULEFLAG_IGNOREONSUBREQ ||\n             p->flags & RULEFLAG_PROXY          || \n             p->flags & RULEFLAG_FORCEREDIRECT    )) {\n            continue;\n        }\n\nin mod_rewrite. If you comment out the RULEFLAG_PROXY, it works as expected. \nI'm not sure of the consequences this has. Can anyone comment on the reasoning \nbehind this? \n\nI believe this also applies to httpd-2.0, but I haven't actually compiled it \nyet.", "id": 26507, "time": "2002-11-18T19:48:58Z", "bug_id": 14648, "creation_time": "2002-11-18T19:48:58Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "creator": "cramer@webkist.com", "text": "This doesn't work perfectly, I've discovered. Take the follwoing setup:\n\n## relevant conf directives\nDirectoryIndex index.html index.php\nRewriteRule ^/(.*\\.php)$ http://localhost:8888/$1 [P]\n##\n\n$DocRoot/blah/ contains: index.php and test.html\n\nNow...*without* patching mod_rewrite, a request for http://www.domain.org/blah/\nwill return index.php just fine, and it will be properly proxied over to\nlocalhost:8888. And, as this bug points out, if test.html just contains\n<!--#include virtual=\"index.php\"-->, requests for it return the unparsed source\nof index.php, which is incorrect.\n\nBut if you remove the one line from mod_rewrite, allowing proxy requests in\nsubrequests, the situation reverses. The SSI part works properly, but requests\nfor /blah/ give you a directory index instead of the output of index.php.\n\nSo this patch doesn't do exactly the right thing. \n", "id": 27062, "time": "2002-11-27T15:15:36Z", "bug_id": 14648, "creation_time": "2002-11-27T15:15:36Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 14648, "text": "I've done some more digging and think I've come a little closer to the real\nsource of the problem:\n\nmod_dir makes subrequests for each of its potential index file names until it\nfinds one to return. Line 165 of mod_dir.c is this:\n\nif (rr->status == HTTP_OK && S_ISREG(rr->finfo.st_mode)) {\n\nSo, for mod_dir to return an index file the subrequest has to be HTTP_OK and it\nmust be a regular file. This works fine with the unpatched mod_rewrite, because\nit will return HTTP_OK and the file will be there -- even if the server is going\nto end up proxying it in the end.\n\nBut, if you patch mod_rewrite then you'll still get the HTTP_OK, but\nrr->filename will have been changed to start with \"proxy:\", so S_ISREG() will fail. \n\nWhich leads to this solution:\n\nchange the call to ap_sub_req_lookup_uri on line 163 of mod_dir.c to\nap_sub_req_lookup_file. ap_sub_req_lookup_file doesn't do the URI translation,\nso it skips mod_rewrite in the subrequest. But then mod_dir still does an\ninternal redirect, which in turn *does* do the URI translation, so everything\nworks out in the end.\n\nWith these changes both mod_include and mod_dir do the right thing when they are\ndealing with a file proxied via mod_rewrite+mod_proxy. I'll attach a patch which\nchanges both parts.", "id": 27088, "time": "2002-11-27T20:08:58Z", "creator": "cramer@webkist.com", "creation_time": "2002-11-27T20:08:58Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 14648, "attachment_id": 3973, "id": 27089, "time": "2002-11-27T20:11:06Z", "creator": "cramer@webkist.com", "creation_time": "2002-11-27T20:11:06Z", "is_private": false, "text": "Created attachment 3973\nOne line fix to each: mod_dir & mod_rewrite"}, {"count": 4, "tags": [], "creator": "trawick@apache.org", "attachment_id": null, "is_private": false, "id": 47828, "time": "2003-11-21T18:08:27Z", "bug_id": 14648, "creation_time": "2003-11-21T18:08:27Z", "text": "I'm going through the bug db to make sure patches are findable.  Please see \nhttp://httpd.apache.org/dev/patches.html\n"}, {"count": 5, "tags": [], "creator": "jeremy.brown@rbc.com", "text": "Another solution to this problem is to utilize the proxy: moniker instead of \n[P} to invoke the proxy client.\n\n[P] as you have pointed out invokes the proxy client but does not continue with \nadditional includes on the invoked page.\n\nWheras the proxy: moniker is invoked in the file mapping handler which contiues \nwith additional ssi requests.\n\nExample:\nRewriteRule ^(.*) proxy:http://host/$1\n\nThis assumes that mod_proxy is installed and configured correctly!\n\nThe other benefit is that additional SSI requests will continue to be processed \non the calling page.\n", "id": 48249, "time": "2003-11-27T15:20:21Z", "bug_id": 14648, "creation_time": "2003-11-27T15:20:21Z", "is_private": false, "attachment_id": null}, {"count": 6, "attachment_id": null, "creator": "nd@perlig.de", "text": "Fixed in 2.1.\n\nThanks for the report and thanks for using Apache.", "id": 50510, "time": "2004-01-14T00:41:39Z", "bug_id": 14648, "creation_time": "2004-01-14T00:41:39Z", "tags": [], "is_private": false}]