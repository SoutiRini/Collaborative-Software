[{"count": 0, "attachment_id": null, "bug_id": 41582, "is_private": false, "id": 99166, "time": "2007-02-09T03:21:15Z", "creator": "jeremias@apache.org", "creation_time": "2007-02-09T03:21:15Z", "tags": [], "text": "(adding this for IP clearance tracking)\n\nDescription of the contribution:\n\nDSC parser/processor\n\nMany PostScript files use special comments to structure a document. This\nallows manipulation of PostScript files without interpreting them. These\nspecial comments are defined in the Document Structuring Conventions.\nhttp://partners.adobe.com/public/developer/en/ps/5001.DSC_Spec.pdf\nThe code in Commons is designed to work with DSC 3.0. For details on how\nDSC is used, please take a look at the DSC specification.\n\nThe DSC support in Commons was primarily developed to implement resource\noptimization features in Apache FOP's PostScript output support.\nResources like images which are used repeatedly in a document should not\nbe written to the PostScript file each time it is used. Instead it is\nwritten once at the beginning of the file as a PostScript form. The form\nis then called whenever the image needs painting.\n\nBut the DSC parser could potentially be used for other purposes. The\nmost obvious is extracting a subset of pages from a DSC-compliant file.\nAssume you want to print only page 45 to 57 of a particular document.\nThere's an example that demonstrates exactly this. Check out the\n\"examples\" directory in the distribution. Other potential use cases for\nthe DSC parser are:\n\n    * Patching PostScript files, for example, adding OMR marks for automatic\npackaging\n    * Imposition (2-up, n-up, rotation, etc.)\n    * EPS graphic extraction\n    * Inspecting the page count\n    * etc. etc.\n\nThe DSC parser (DSCParser) was designed as a pull parser, i.e. you fetch\nnew events from the parser inspecting them and acting on them as they\nare found. If you prefer to work with a push parser, you can pass the\nDSCParser a DSCHandler implementation and the parser will send you all\nthe events.\n\nThe best example to understand how to use the DSC parser is the\nPageExtractor class that implements the page extraction functionality\nmentioned above."}, {"count": 1, "tags": [], "bug_id": 41582, "text": "Created attachment 19559\nThe patch with the new DSC parser/processor", "id": 99167, "time": "2007-02-09T03:29:09Z", "creator": "jeremias@apache.org", "creation_time": "2007-02-09T03:29:09Z", "is_private": false, "attachment_id": 19559}, {"count": 2, "tags": [], "text": "Created attachment 19560\nPGP Signature for the patch file", "is_private": false, "bug_id": 41582, "id": 99168, "time": "2007-02-09T03:30:06Z", "creator": "jeremias@apache.org", "creation_time": "2007-02-09T03:30:06Z", "attachment_id": 19560}, {"count": 3, "tags": [], "creator": "jeremias@apache.org", "text": "Grant has been submitted and recorded. IP Clearance is filed:\nhttp://incubator.apache.org/ip-clearance/xmlgraphics-commons-postscript-dsc-parser.html\n\nPatch applied.", "id": 99900, "time": "2007-02-28T08:47:13Z", "bug_id": 41582, "creation_time": "2007-02-28T08:47:13Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 41582, "is_private": false, "text": "Commit: http://svn.apache.org/viewvc?view=rev&rev=512838", "id": 99901, "time": "2007-02-28T08:49:07Z", "creator": "jeremias@apache.org", "creation_time": "2007-02-28T08:49:07Z", "attachment_id": null}]