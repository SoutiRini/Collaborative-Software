[{"attachment_id": null, "tags": [], "bug_id": 13873, "text": "LRUCache.CacheEntry uses String.length() to compute the size of a string in \nbytes. The specification states that String.length() return the number of 16-\nbit Unicode characters in the string. Unicode characters are usually \nrepresented using two bytes. Hence the real size is actually twice as big as \nthe store one.\n\nAnother minor issue is that size was only registered when lifetime was superior \nto zero.\n\nBelow is a modified version of the constructor:\n   public CacheEntry(String value) {\n      this.value = value;\n      if (lifetime > 0) {\n        this.expiration = (new Date()).getTime() + lifetime;\n      }\n\n      // Pitch's fix: String.length() return the number of 16-bit Unicode \n      // characters in the string. Unicode characters are usually represented \n      // using two bytes. For Chinese characters or new Unicode schema, we\n      // would be closer to reality by calling: String.getBytes().length\n      this.size = 2 * value.length();\n    }", "count": 0, "id": 25029, "time": "2002-10-23T08:52:35Z", "creator": "chevalier@mkms.xerox.com", "creation_time": "2002-10-23T08:52:35Z", "is_private": false}, {"count": 1, "tags": [], "creator": "bayern@essentially.net", "text": "Hi Pitch -\n\nThanks for the note.  I think the most sensible way to keep things consistent \nis simply to avoid concerning ourselves with the actual size of the bytes and \ninstead focus on the characters, which provide a convenient abstraction and a \nfunctional enough one for most purposes.  Accordingly, in true \"it's a \nfeature, not a bug\" style, I have updated the documentation to make this \nclearer.\n\nI've addressed the other issue; we indeed need to compute size in all cases, \nnot just for caches that expire their elements by time.\n\nThanks again,\n\nShawn", "id": 25052, "time": "2002-10-23T15:49:20Z", "bug_id": 13873, "creation_time": "2002-10-23T15:49:20Z", "is_private": false, "attachment_id": null}, {"count": 2, "attachment_id": null, "creator": "chevalier@mkms.xerox.com", "is_private": false, "id": 25061, "time": "2002-10-23T17:54:46Z", "bug_id": 13873, "creation_time": "2002-10-23T17:54:46Z", "tags": [], "text": "Fair enough. Counting the bytes or the chars serves the same purpose that is to \nlimit the total size of the cache to a reasonable amount.\n\n--Pitch"}]