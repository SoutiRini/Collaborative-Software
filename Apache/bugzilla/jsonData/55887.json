[{"count": 0, "tags": [], "bug_id": 55887, "attachment_id": null, "is_private": false, "id": 171760, "time": "2013-12-16T04:30:45Z", "creator": "anoooon@riseup.net", "creation_time": "2013-12-16T04:30:45Z", "text": "https://github.com/SpiderLabs/ModSecurity/issues/616\nhttp://security.stackexchange.com/questions/47002/why-these-2-regexp-wont-work-as-expected-in-mod-security2\n\nHow to test:\n1. Make an environment: Windows and Apache.\n2. access to: https://127.0.0.1/con\n\nReturned result:\nApache returns 403.\nWrite \"doesn't point to a file or directory\" to apache's error log.\n\nIf an admin make a .htaccess which include ErrorDocument statement,\napache ignore it. (doesn't show ErrorDocument's one)\n\nex.\n/ (root of htdocs)\n/.htacccess (*)\n/index.html\n\n(*)\n-------------------\nErrorDocument 403 /error.template.php\nErrorDocument 401 /error.template.php\n\n<files \"error.template.php\">\nRequire all granted\n</files>\n-------------------\n\nExpected result:\nApache should return HTTP 404.\n\n---\nAnd also, attacker can determine whether the webserver OS is Windows or not\nby accessing to /con."}, {"text": "The behavior is correct, only REG and DIR entities can be allowed in the path, other entities such as CHR files must be forbidden.\n\nTreating these as not-found may lead to further iterations by mod_speling and other modules attempting to work around the file name and potentially revealing concealed files. E.g. /CON -> notfound -> /.conf (redirected by mod_speling to a somewhat hidden file.)", "tags": [], "bug_id": 55887, "is_private": false, "count": 1, "id": 199438, "time": "2017-06-26T17:36:27Z", "creator": "wrowe@apache.org", "creation_time": "2017-06-26T17:36:27Z", "attachment_id": null}]