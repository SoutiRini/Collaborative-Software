[{"count": 0, "tags": [], "bug_id": 42430, "text": "If the STRING argument to ap_custom_response() begins with a double quote,\nit prepends another double quote.  This second double quote is later stripped\nby ap_send_error_response(), but the original one remains and is included in the\nmessage. I suspect that users of ap_custom_response() expect it to treat its\nSTRING argument in the same way as the documentation describes the\nErrorDocument directive's second argument.\n\nap_custom_response() uses this code:\n  conf->response_code_strings[idx] =\n     ((ap_is_url(string) || (*string == '/')) && (*string != '\"')) ?\n       apr_pstrdup(r->pool, string) : apr_pstrcat(r->pool, \"\\\"\", string, NULL);\nThe test in the conditional expression doesn't make much sense.\nIf the LHS of the conjunction is true the RHS must also be true, and if the LHS\nis false, the RHS is irrelevant.  If *string == '\"' the test is false and\na double quote will be prepended.\n\nI believe the expression should be:\n  (ap_is_url(string) || *string == '/' || *string == '\"') ?\nThis will add a double quote if the argument is not a URL and not a path and\nnot something that already begins with one.  The double quote will be stripped\nby ap_send_error_response(), yielding the characters that follow as the message.\nI suspect that this is the intended (and correct) behaviour.", "id": 103248, "time": "2007-05-15T17:36:46Z", "creator": "brachman@dss.bc.ca", "creation_time": "2007-05-15T17:36:46Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 42430, "is_private": false, "id": 150868, "attachment_id": null, "creator": "sf@sfritsch.de", "creation_time": "2011-10-23T22:14:26Z", "time": "2011-10-23T22:14:26Z", "text": "No, the current behavior works as intended. If the argument does not begin with a / and is not a valid absolute url, it is treated as a message. I have clarified the ErrorDocument docs in r1187986"}]