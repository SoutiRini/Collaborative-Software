[{"count": 0, "tags": [], "text": "I found this by using the <java> task.  The symptom is that <java> task std output can appear hung even.\n\nboth handleOutput and handleInput methods (as well as many others) are synchronized and handleInput can block waiting for some number of bytes to be read.  While this happens, handleOutput and other methods will block.\n\nSo if <java> appears to be hung, keep typing at the command line and hitting\nreturn.\n\nI workedaround this by subclassing Java.java in a horribly hackish way as\n\n\npackage com.teneo.esa.ant;\n\nimport java.io.InputStream;\nimport java.io.IOException;\nimport org.apache.tools.ant.taskdefs.Java;\n\n/**\n * @author bloch\n */\npublic class JavaWithWorkaround extends Java {\n\n    private InputStream _s;\n\n    /**\n     * {@inheritDoc}\n     */\n    protected void setupRedirector() {\n        super.setupRedirector();\n\n        _s = redirector.getInputStream();\n    }\n    /**\n     * {@inheritDoc}\n     */\n    public int handleInput(byte[] buffer, int offset, int length)\n        throws IOException {\n        // Should work whether or not redirector.inputStream == null:\n        int n = _s.available();\n\n        if (n == 0) {\n            // Throttle\n            try {\n                Thread.sleep(1);\n            } catch (InterruptedException ie) {\n                // Ignore on purpose\n            }\n            return 0;\n        }\n\n        if (length > n) {\n            length = n;\n        }\n        return super.handleInput(buffer, offset, length);\n    }\n}", "is_private": false, "id": 114315, "creator": "bloch@clearwellsystems.com", "time": "2008-03-05T18:05:44Z", "bug_id": 44544, "creation_time": "2008-03-05T18:05:44Z", "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 44544, "is_private": false, "id": 114322, "attachment_id": null, "creator": "peterreilly@apache.org", "creation_time": "2008-03-06T01:15:10Z", "time": "2008-03-06T01:15:10Z", "text": "It would be great if you could provide a testcase that shows the problem.\n"}, {"count": 2, "tags": [], "bug_id": 44544, "attachment_id": null, "id": 114327, "time": "2008-03-06T03:04:56Z", "creator": "bloch@clearwellsystems.com", "creation_time": "2008-03-06T03:04:56Z", "is_private": false, "text": "Here ya go!\n\n--\n\n<project name=\"bug-xxxxx\" default=\"bug\" >\n    <target name=\"bug\">\n        <java classname=\"ReaderAndWriter\" >\n            <classpath>\n                <pathelement path=\"${basedir}\"/>\n            </classpath>\n        </java>\n    </target>\n</project>\n\nand src code for ReaderAndWriter below\n\n--\nimport java.io.*;\n\nclass Reader extends Thread {\n    public void run() {\n        try {\n            while(true) {\n                int x = System.in.read();\n                if (x == -1) {\n                    break;\n                }\n            }\n        } catch (IOException ioe) {\n            return;\n        }\n    }\n}\n\npublic class ReaderAndWriter {\n    static public void main(String[] args) {\n        Reader reader = new Reader();\n        reader.start();\n\n        for(int i = 1; i < 10; i++) {\n            System.out.println(\"I love ant.\");\n        }\n    }\n}\n\n--\n\n\nRun ant and notice the hangs.  Everytime you hit carriage return\nyou can see some output go by.  Expected results is you'd see your 10 lines of output get printed and then ant should exit.  As I read the code in Redirector, it needs some love wrt the aggressive use of synchronization.  There's no need, afa I can tell for writes to be locked out while you're reading.\n\n\n\n\nI fixed by workaround to be more striaghtfwd too.  Here it is now:\n\n/*\n * CONFIDENTIAL COMPUTER CODE AND INFORMATION\n * COPYRIGHT (C) 2004-2008 TENEO SYSTEMS, INC. ALL RIGHTS RESERVED.\n * REPRODUCTION BY ANY MEANS EXPRESSLY FORBIDDEN WITHOUT THE WRITTEN\n * PERMISSION OF THE OWNER.\n */\npackage com.teneo.esa.ant;\n\nimport java.io.InputStream;\nimport java.io.IOException;\nimport org.apache.tools.ant.taskdefs.Java;\nimport org.apache.tools.ant.Project;\n\n/**\n * Workaround for Ant bug: 44544; \n * See https://issues.apache.org/bugzilla/show_bug.cgi?id=44544\n *\n * @author bloch\n */\npublic class JavaWithWorkaround extends Java {\n\n    private InputStream _s;\n\n    /**\n     * {@inheritDoc}\n     */\n    @Override protected void setupRedirector() {\n    }\n\n    /**\n     * {@inheritDoc}\n     */\n    @Override protected void handleOutput(String output) {\n        log(output, Project.MSG_INFO);\n    }\n\n    /**\n     * {@inheritDoc}\n     */\n    @Override protected void handleFlush(String output) {\n        handleOutput(output);\n    }\n\n    /**\n     * {@inheritDoc}\n     */\n    @Override public int handleInput(byte[] buffer, int offset, int length)\n        throws IOException {\n        return getProject().defaultInput(buffer, offset, length);\n    }\n}\n\n\n"}, {"count": 3, "tags": [], "bug_id": 44544, "attachment_id": null, "is_private": false, "id": 114342, "time": "2008-03-06T07:55:08Z", "creator": "mbenson@apache.org", "creation_time": "2008-03-06T07:55:08Z", "text": "Is this, in your opinion, a simple case of synchronization needing to be moved to specific blocks rather than entire methods?  Or has your analysis gone that far?\n\nThanks,\nMatt"}, {"count": 4, "tags": [], "text": "It certainly seems that way wrt the <java> tasks' internal use of Redirector.  But I didn't look into other uses of Redirector and you probably should before going an whacking it. \n\nFwiw, my workaround clearly disables support for input= and inputstring=, but it wouldn't be too hard to put that back if needed.\n\nBest,\nEric", "attachment_id": null, "id": 114348, "creation_time": "2008-03-06T08:58:19Z", "time": "2008-03-06T08:58:19Z", "creator": "bloch@clearwellsystems.com", "bug_id": 44544, "is_private": false}, {"count": 5, "tags": [], "creator": "jkf@apache.org", "attachment_id": null, "text": "There was nothing pseudo about the deadlock described, thanks for the report and the testcase.", "id": 124693, "time": "2009-02-06T04:36:18Z", "bug_id": 44544, "creation_time": "2009-02-06T04:36:18Z", "is_private": false}]