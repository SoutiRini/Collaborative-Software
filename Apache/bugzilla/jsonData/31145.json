[{"count": 0, "tags": [], "bug_id": 31145, "attachment_id": null, "is_private": false, "id": 63294, "time": "2004-09-09T14:53:50Z", "creator": "skrul@yahoo.com", "creation_time": "2004-09-09T14:53:50Z", "text": "I want to serve pre-compressed pages rather than using mod_deflate to compress\nthe pages on the fly.  However, I also want to send uncompressed pages to\nbrowsers that have buggy support for compressed pages and browsers that do not\nstate that they accept compressed pages.  The included patch and the following\nconfiguration make this possible.  Setting the environment variable\n\"force-gunzip\" will bypass mod_deflate's checking of the content type of the\nselected document before it uncompresses it.  I need this because my compressed\nfiles do not end in \".gz\".  Also, setting the environment variable \"no-gunzip\"\ncauses mod_deflate not to uncompress the selected document.\n\n# We always serve compressed data, so add the appropriate header\nHeader append Content-Encoding gzip\n\n# If the request includes Accept-Encoding: gzip and is a browser that\n# works with compressed input, tell mod_deflate not to inflate the content\nSetOutputFilter INFLATE\n\n# Skip the content encoding sanity check that verifies that the content\n# that we might be gunzipping is actually gzipped.  We do this becase we\n# know all of our content is gzipped, but since we don't add the .gz\n# extension, the content encoding header does not get set.\nSetEnv force-gunzip 1\n\n# Since all of our content is compressed, we never want to gunzip the\n# content unless we have a request from a known incompatible browser\n# or the request does not state that gzipped content is acceptable\n# in the Accept-Encoding header\n\n# Always gunzip the response for Netscpae 4.x, but don't mistakenly include\n# IE.  This is based on the mod_deflate setup in the documentation at:\n# http://httpd.apache.org/docs-2.0/mod/mod_deflate.html\nSetEnv bad-browser=0\nBrowserMatch ^Mozilla/4 bad-browser=1\nBrowserMatch \\bMSIE bad-browser=0\n\n# If the browser can accept gzip encoding, don't gunip the response\nSetEnvIf Accept-Encoding gzip no-gunzip\n\n# But if it is a bad browser, re-enable ungzipping by clearing the\n# no-gunzip environment variable\nSetEnvIf bad-browser 1 !no-gunzip"}, {"count": 1, "tags": [], "text": "Created attachment 12683\npatch for mod_deflate.c", "is_private": false, "id": 63295, "creator": "skrul@yahoo.com", "time": "2004-09-09T14:58:34Z", "bug_id": 31145, "creation_time": "2004-09-09T14:58:34Z", "attachment_id": 12683}, {"count": 2, "tags": [], "bug_id": 31145, "attachment_id": null, "id": 63407, "time": "2004-09-11T21:23:36Z", "creator": "nick@webthing.com", "creation_time": "2004-09-11T21:23:36Z", "is_private": false, "text": "Potentially a useful patch, but I think this is overtaken by events.\nSee the \"Emulating mod_gzip with mod_deflate\" example of mod_filter use at\nhttp://httpd.apache.org/docs-2.1/mod/mod_filter.html\n\nSince the purpose of mod_filter is to relieve filter modules of the need for\nthis level of (extra) complexity, I'm a little reluctant to commit such a patch.\n But I'm open to persuasion.  Does this patch actually add anything over a\nmod_filter-based solution?\n\n[ note, this follows discussion on IRC, but I haven't seen you there today -\nhappy to continue discussion in either medium ]"}, {"count": 3, "attachment_id": null, "bug_id": 31145, "is_private": false, "id": 92065, "time": "2006-08-08T22:01:07Z", "creator": "nick@webthing.com", "creation_time": "2006-08-08T22:01:07Z", "tags": [], "text": "This is moot in 2.2 (the problem doesn't exist), and given how long it's been \nignored in 2.0 it doesn't seem to be going anywhere there."}]