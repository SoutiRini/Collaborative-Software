[{"count": 0, "attachment_id": null, "creator": "mu1059@gmail.com", "is_private": false, "id": 158968, "time": "2012-05-11T01:32:29Z", "bug_id": 53218, "creation_time": "2012-05-11T01:32:29Z", "tags": [], "text": "Hi.\n\nI'm tring to change apache from 2.2 to 2.4.2.\nAnd apachectl reports there is error in my configuration file about proxypass.\n\n-----\n# /usr/local/apache24/bin/apachectl -t\nAH00548: NameVirtualHost has no effect and will be removed in the next release /usr/local/apache24/conf/httpd.conf:101\nAH00526: Syntax error on line 615 of /usr/local/apache24/conf/httpd.conf:\nProxyPass worker name (http://localhost:3128/VirtualHostBase/http/www.hogefuga.com:80/fugafugafile/VirtualHostRoot/++resource++Products.HOGEHOGE.public.stylesheets) too long\n-----\n\nI read some sorce files and found there is length limit in worker name.\nIn mod_proxy.h:305 there is define of length of proxy worker name.\n\n----\n#define PROXY_WORKER_MAX_NAME_SIZE      96\n----\n\nI think in some casees this size is not enough.\nIn my case (legth is 177 chars.), I doubled this number and works fine.\nWould you please increase this size.\n\nThank you."}, {"count": 1, "tags": [], "creator": "kiorky@cryptelium.net", "text": "I confirm the bug and second the importance of this bug to be solved.", "id": 173032, "time": "2014-02-13T17:29:52Z", "bug_id": 53218, "creation_time": "2014-02-13T17:29:52Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 53218, "attachment_id": null, "text": "I can also confirm the bug. This version is completely useless have to downgrade. Even the hack does not work. Just changing the #define PROXY_WORKER_MAX_NAME_SIZE      96   by itself does nothing at least on my side even if you place a number beyond what is needed it still says too long.", "id": 173480, "time": "2014-02-25T23:58:22Z", "creator": "masc2279@gmail.com", "creation_time": "2014-02-25T23:58:22Z", "is_private": false}, {"count": 3, "tags": [], "text": "We got our way using PT rewrites, eg \n\n# /-> vhmonster proxyreverse because of redirects !\nRewriteRule ^/(.*)$ /VirtualHostBase/http/edit.foo.bar.net:80/Plone/VirtualHostRoot/$1 [L,PT]\n\n# for https://issues.apache.org/bugzilla/show_bug.cgi?id=53218, only use a simple worker url\nProxyPass         /         http://127.0.0.1:8083/ retry=1\nProxyPassReverse  /         http://127.0.0.1:8083/VirtualHostBase/http/edit.foo.bar.net:80/Plone/VirtualHostRoot/\nProxyPassReverse  /zmiroot/ http://127.0.0.1:8083/VirtualHostBase/http/edit.foo.bar.net:80/VirtualHostRoot/_vh_zmiroot/", "attachment_id": null, "bug_id": 53218, "id": 173483, "time": "2014-02-26T07:02:44Z", "creator": "kiorky@cryptelium.net", "creation_time": "2014-02-26T07:02:44Z", "is_private": false}, {"count": 4, "tags": [], "creator": "alan.oneill@cavtel.net", "attachment_id": null, "is_private": false, "id": 176177, "time": "2014-07-02T22:50:43Z", "bug_id": 53218, "creation_time": "2014-07-02T22:50:43Z", "text": "I can confirm this bug as well on Kubuntu 14.04 LTS 64-bit running Apache 2.4.7.  Unfortunately, it is making it impossible for me to serve Plone pages through Apache, which is preventing me from upgrading my production servers to 14.04 LTS.  It would be great if this issue could be addressed soon.  Thanks."}, {"count": 5, "tags": [], "text": "Alan, you can use rewrites instead of proxypass, even if it is a bug, this workaround which is more another way to do that  workaround will let you upgrade.\n\nIf you are just setting up a proxy, you may also opt for something like nginx.", "attachment_id": null, "bug_id": 53218, "id": 176181, "time": "2014-07-03T07:43:12Z", "creator": "kiorky@cryptelium.net", "creation_time": "2014-07-03T07:43:12Z", "is_private": false}, {"count": 6, "tags": [], "bug_id": 53218, "attachment_id": null, "text": "I second that. Especially with unix domain sockets allowed in mod_proxy the names can get quite long.", "id": 176703, "time": "2014-07-27T18:40:51Z", "creator": "sebastian@himberger.de", "creation_time": "2014-07-27T18:40:51Z", "is_private": false}, {"count": 7, "tags": [], "bug_id": 53218, "is_private": false, "text": "I am looking into whether or not that should be a fatal error... we may be able to get around just reporting it, and still using/accepting a truncated copy.", "id": 177445, "time": "2014-08-29T18:35:06Z", "creator": "jim@apache.org", "creation_time": "2014-08-29T18:35:06Z", "attachment_id": null}, {"count": 8, "tags": [], "bug_id": 53218, "attachment_id": null, "text": "Maximum worker name length increased by jim to 256 in trunk (and some other limits increased as well). Revisions r1540318, r1621367, r1621372, r1621373, r1621382.\nProposed for backport to 2.4.x.", "id": 177527, "time": "2014-09-04T09:21:38Z", "creator": "rainer.jung@kippdata.de", "creation_time": "2014-09-04T09:21:38Z", "is_private": false}, {"count": 9, "attachment_id": null, "creator": "rainer.jung@kippdata.de", "is_private": false, "id": 177534, "time": "2014-09-04T11:24:01Z", "bug_id": 53218, "creation_time": "2014-09-04T11:24:01Z", "tags": [], "text": "There's an API compatibility problem with a straight backport proposal. Backport on hold."}, {"count": 10, "tags": [], "text": "256 is not enougth !", "attachment_id": null, "bug_id": 53218, "id": 177543, "time": "2014-09-04T19:06:18Z", "creator": "kiorky@cryptelium.net", "creation_time": "2014-09-04T19:06:18Z", "is_private": false}, {"count": 11, "tags": [], "creator": "rainer.jung@kippdata.de", "attachment_id": null, "is_private": false, "id": 177617, "time": "2014-09-08T10:53:46Z", "bug_id": 53218, "creation_time": "2014-09-08T10:53:46Z", "text": "There's a workaround available that should be applicable to many situations: combined ProxyPass with RewriteRule [P] flag:\n\nOne can do reverse proxying with mod_proxy ProxyPass but also with mod_rewrite RewriteRule [P] flag. The former often is \"better\", because it uses a pool of persistent connections to the origin server and the characteristics of the connections can be configured in more detail.\n\nWhat is possible here, is a combination of both approaches: Use a \"dummy\" ProxyPass with short right side URI to configure a pool to the origin server but RewriteRule for the individual proxy rules containing the long target URLs. As long as the right side of the ProxyPass matches thebeginning of the RewriteRule target URL, the proxying will be done via the connection pool configured with ProxyPass.\n\nAn Example:\n\n# This directive must come before the following one in order\n# block access to arbitrary URIs on the origin server!\n# As an alternative one can also use \"RewriteRule /UNUSED - [F]\"\nProxyPass /UNUSED !\n\n# Configure a connection pool for the origin server\n# http://myserver.example.org:9081\nProxyPass /UNUSED http://myserver.example.org:9081\n\nRewriteEngine On\n\n# Proxy \"/long\" to a long URI on the origin server,\n# [P] flag at end of line is important\nRewriteRule /long http://myserver.example.org:9081/aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb/long.html [P]\n\n# Proxy \"/verylong\" to an even longer URI on the origin server,\n# again [P] flag at end of line is important\nRewriteRule /verylong http://myserver.example.org:9081/aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb/cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc/dddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd/verylong.html [P]\n\nPro:\n\n- you can use long origin server URIs\n- the requests are still dispatched to a pool of persistent connections\n- You can combine this with ProxyPassReverse and similar directives\n\nCon:\n\n- all requests to this origin server will use the same connection pool, not one pool per target URI. This might be a con in some cases (less separation), in some it might actually be a pro (sharing of resources)\n- need a combination of two different syntaxes (harder to understand)\n- might not work for any protocol to the origin server (ajp, fcgi, scgi etc.), I simply haven't tested it for those."}, {"count": 12, "tags": [], "creator": "kiorky@cryptelium.net", "text": "if you had read the bug report, you would notice that i posted myself this workaround.", "id": 177618, "time": "2014-09-08T10:56:42Z", "bug_id": 53218, "creation_time": "2014-09-08T10:56:42Z", "is_private": false, "attachment_id": null}, {"count": 13, "tags": [], "bug_id": 53218, "is_private": false, "text": "Sorry. I read much more than this bug report (there's also other discussion going on) and overlooked your workaround in comment #3 above.\n\nNote though that\n\n- your recipe opens up the origin server for any URI via the ProxyPass for \"/\". Often that is not wanted, therefore my recipe contains the additional and important ProxyPass with a \"!\". This in turn only makes sense by using some \"/UNUSED\" instead of simply \"/\". This change has security implications.\n\n- you are using the pass-through flag \"PT\", I'm using the proxy flag \"P\". I didn't try \"PT\" but \"P\" seems to be more correct. Your mileage may vary.\n\nRegards,\n\nRainer", "id": 177637, "time": "2014-09-08T18:10:44Z", "creator": "rainer.jung@kippdata.de", "creation_time": "2014-09-08T18:10:44Z", "attachment_id": null}, {"count": 14, "tags": [], "bug_id": 53218, "attachment_id": null, "id": 177642, "time": "2014-09-08T18:58:32Z", "creator": "rpluem@apache.org", "creation_time": "2014-09-08T18:58:32Z", "is_private": false, "text": "Even easier: Create a\n\n<Proxy protocol://server/yourseparationpathprefix>\n   SetProxy anyoption\n</Proxy>\n\nblock in your configuration and you are using a connection pool with RewriteRule [P]"}, {"count": 15, "tags": [], "creator": "chris@christopherschultz.net", "text": "+1 for increasing the URL length limit for proxy targets.\n\nI ran into this recently with an https:// proxy where the hostname was long, causing the URLs to exceed this limit. Using the IP address was not possible because the HTTPS connection refused to handshake because of a mismatched hostname (IP != cert hostname).\n\nThe workaround in my case was to use ProxyPassMatch which is non-ideal as it adds a regular expression evaluation (multiple, since I have many ProxyPassMatch directives) to every request, plus I can't be as specific as I need to when mapping certain URLs and not others.\n\nI would normally use mod_jk, but the client required the use of HTTPS between the reverse proxy and application server (Tomcat, in this case).", "id": 179445, "time": "2014-12-02T14:20:48Z", "bug_id": 53218, "creation_time": "2014-12-02T14:20:48Z", "is_private": false, "attachment_id": null}, {"count": 16, "tags": [], "creator": "emailranjithr@gmail.com", "attachment_id": null, "is_private": false, "id": 203639, "time": "2018-02-06T02:52:48Z", "bug_id": 53218, "creation_time": "2018-02-06T02:52:48Z", "text": "AH02808: Alert! worker name ....too long; truncated to:96 characters\n\nProxyPass / https://somehost.test.com:8080/service=com.test.myservice/version%=0.0.1/routeOffer=default/envContext=TEST/subContext=web/services/myservice/\n\nProxyPassReverse / https://somehost.test.com:8080/service=com.test.myservice/version%=0.0.1/routeOffer=default/envContext=TEST/subContext=web/services/myservice/\n \n\nActual url length is 189 characters. But Proxy pass restricts to 96 characters. How to increase this length ?"}]