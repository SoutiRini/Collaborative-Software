[{"count": 0, "tags": [], "text": "Hi,\n\nI got a NullPointerException using the FindBugs GUI\nI think BCEL has a problem with \"continue\" in the new for\nloop. The source code of the problematic file is\nattached as a simplified test case.\n\nFataler Fehler w\u00e4hrend der Analyse:\njava.lang.NullPointerException:\nWhile finding bugs in class:\nde.his.test.soap.TestSOAPAnnotation\norg.apache.bcel.generic.LineNumberGen.getLineNumber(LineNumberGen.java:72)\norg.apache.bcel.generic.MethodGen.getLineNumberTable(MethodGen.java:474)\nedu.umd.cs.findbugs.SourceLineAnnotation.fromVisitedInstruction(SourceLineAnnotation.java:312)\nedu.umd.cs.findbugs.detect.FindInconsistentSync2$FieldStats.addAccess(FindInconsistentSync2.java:184)\nedu.umd.cs.findbugs.detect.FindInconsistentSync2.analyzeMethod(FindInconsistentSync2.java:532)\nedu.umd.cs.findbugs.detect.FindInconsistentSync2.visitClassContext(FindInconsistentSync2.java:259)\nedu.umd.cs.findbugs.FindBugs.examineClass(FindBugs.java:1598)\nedu.umd.cs.findbugs.FindBugs.executeAnalysisPass(FindBugs.java:1517)\nedu.umd.cs.findbugs.FindBugs.execute(FindBugs.java:1171)\nedu.umd.cs.findbugs.gui.AnalysisRun.execute(AnalysisRun.java:109)\nedu.umd.cs.findbugs.gui.RunAnalysisDialog$1.run(RunAnalysisDialog.java:138)", "attachment_id": null, "bug_id": 36845, "id": 80556, "time": "2005-09-28T17:21:23Z", "creator": "nhb_web@nexgo.de", "creation_time": "2005-09-28T17:21:23Z", "is_private": false}, {"count": 1, "attachment_id": 16544, "bug_id": 36845, "is_private": false, "id": 80557, "time": "2005-09-28T17:22:28Z", "creator": "nhb_web@nexgo.de", "creation_time": "2005-09-28T17:22:28Z", "tags": [], "text": "Created attachment 16544\nTestCase"}, {"count": 2, "tags": [], "text": "Unfortunately, i am unable to reproduce this in FindBugs 0.9.3, in fact the\nFieldStats class, from which this error occurs (in findbugs), does not seem to\never be created. Perhaps I am using a different jdk, or FindBugs, than you. To\nrull out the former, perhaps you could post the .class file of the sample code.", "attachment_id": null, "bug_id": 36845, "id": 80583, "time": "2005-09-29T05:42:44Z", "creator": "dbrosius@mebigfatguy.com", "creation_time": "2005-09-29T05:42:44Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 36845, "is_private": false, "id": 80668, "creation_time": "2005-10-01T21:20:35Z", "time": "2005-10-01T21:20:35Z", "creator": "nhb_web@nexgo.de", "text": "Created attachment 16569\nde/his/test/soap/TestSOAPAnnotation.class\n\nThis file was compiled using Eclipse 3.1 (Build id: I20050627-1435) on\nDebian/GNU Linux. \n\nhendrik@voyager:/mnt/lsf/test-bcel$ java -version\njava version \"1.5.0\"\nJava(TM) 2 Runtime Environment, Standard Edition (build 1.5.0-b64)\nJava HotSpot(TM) Client VM (build 1.5.0-b64, mixed mode)", "attachment_id": 16569}, {"count": 4, "tags": [], "bug_id": 36845, "attachment_id": null, "is_private": false, "id": 80669, "time": "2005-10-02T00:26:17Z", "creator": "dbrosius@mebigfatguy.com", "creation_time": "2005-10-02T00:26:17Z", "text": "Ok, with the attached .class file i am able to reproduce your problem. Thanks!\n\nHere's the javap output for this method:\n\npublic void testContentOfWSDDISAnnotated();\n  Code:\n   Stack=2, Locals=4, Args_size=1\n   0:   new     #16; //class java/util/ArrayList\n   3:   dup\n   4:   invokespecial   #17; //Method java/util/ArrayList.\"<init>\":()V\n   7:   astore_1\n   8:   aload_1\n   9:   invokeinterface #23,  1; //InterfaceMethod java/util/List.iterator:()\nLjava/util/Iterator;\n   14:  astore_3\n   15:  goto    32\n   18:  aload_3\n   19:  invokeinterface #29,  1; //InterfaceMethod java/util/Iterator.next:()\nLjava/lang/Object;\n   24:  checkcast       #31; //class java/lang/String\n   27:  astore_2\n   28:  aload_2\n   29:  ifnonnull       32\n   32:  aload_3\n   33:  invokeinterface #35,  1; //InterfaceMethod java/util/Iterator.hasNext:\n()Z\n   38:  ifne    18\n   41:  return\n  LineNumberTable:\n   line 9: 0\n   line 13: 8\n   line 14: 28\n   line 13: 35\n   line 18: 41\n\n-------------\n\nNotice the LineNumberTable's 4th entry:\n\nline 13:35\n\nthis says source line 13 is at byte offset 35. But notice that byte offset 35 \nis _not_ a valid instruction start. It looks like a bug in the tool that \ngenerated this class file, to me.\n\nit probably should have been\n\nline 13:32"}, {"count": 5, "tags": [], "text": "Applied Patch: If the LineNumberTable has a bad byte offset, don't add a \nLineNumberGen for that line to the MethodGen's list of LineNumbers.", "attachment_id": null, "bug_id": 36845, "id": 80670, "time": "2005-10-02T00:33:01Z", "creator": "dbrosius@mebigfatguy.com", "creation_time": "2005-10-02T00:33:01Z", "is_private": false}, {"count": 6, "attachment_id": null, "bug_id": 36845, "is_private": false, "id": 80915, "time": "2005-10-07T21:21:28Z", "creator": "nhb_web@nexgo.de", "creation_time": "2005-10-07T21:21:28Z", "tags": [], "text": "Thanks, Dave."}]