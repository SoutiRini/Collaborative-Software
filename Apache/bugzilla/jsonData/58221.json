[{"count": 0, "tags": [], "text": "Created attachment 32977\nShifting Rows Stacktrace\n\nHI,\nI was trying to find a way to sort data in Apache poi. I found this solution on Stack but it's not working for it. It seems like the sheet index isn't counting right and it can't find the original row after the shift. I've basically just comparing letters. \n\nI've attached an text document with the stacktrace.\n\nHere is the code I'm trying to sort the rows.\n\n  /**\n\t * Sorts (A-Z) rows by String column\n\t * @param sheet - sheet to sort\n\t * @param column - String column to sort by\n\t * @param rowStart - sorting from this row down\n\t */\n\tprivate void sortSheet(Sheet sheet, int column, int rowStart) {\n\t    boolean sorting = true;\n\t    int lastRow = sheet.getLastRowNum();\n\t    while (sorting == true) {\n\t        sorting = false;\n\t        for (Row row : sheet) {\n\t            // skip if this row is before first to sort\n\t            if (row.getRowNum()<rowStart) continue;\n\t            // end if this is last row\n\t            if (lastRow==row.getRowNum()) break;\n\t            Row row2 = sheet.getRow(row.getRowNum()+1);\n\t            if (row2 == null) continue;\n\t            String firstValue = (row.getCell(column) != null) ? row.getCell(column).getStringCellValue() : \"\";\n\t            String secondValue = (row2.getCell(column) != null) ? row2.getCell(column).getStringCellValue() : \"\";\n\t            //compare cell from current row and next row - and switch if secondValue should be before first\n\t            if (secondValue.compareToIgnoreCase(firstValue)<0) {                    \n\t                sheet.shiftRows(row2.getRowNum(), row2.getRowNum(), -1);\n\t                sheet.shiftRows(row.getRowNum(), row.getRowNum(), 1);\n\t                sorting = true;\n\t            }\n\t        }\n\t    }\n\t}\n\nAny suggestions would be greatly appreciate! Not being able to sort is killing me.", "is_private": false, "id": 184396, "creator": "muckomspam@gmail.com", "time": "2015-08-06T21:50:41Z", "bug_id": 58221, "creation_time": "2015-08-06T21:50:41Z", "attachment_id": 32977}, {"count": 1, "tags": [], "text": "Can you attach a sample file that goes along with the sorting? Otherwise it may be hard to reproduce/see where the actual problem is.", "is_private": false, "id": 187326, "creator": "dominik.stadler@gmx.at", "time": "2016-01-02T21:33:55Z", "bug_id": 58221, "creation_time": "2016-01-02T21:33:55Z", "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 58221, "attachment_id": null, "id": 187327, "time": "2016-01-02T22:53:44Z", "creator": "onealj@apache.org", "creation_time": "2016-01-02T22:53:44Z", "is_private": false, "text": "shiftRows is relatively expensive because it has to shift values, styles, conditional formatting, references, merged ranges, formulas, etc. Doing this n*log(n) or n\u00b2 times is extremely expensive. It might be better to use a sorting algorithm that makes minimal moves [1], or copy the cell values into an array, sort the array and calculate the row offsets, shift each row by the row offsets.\n\nThe Stack example below looks like a bubble sort. If you get yoyr example working and discover that sorting speed is an issue, you might be able to get better speed if you had access to POI's internals by adding a sortRows method to POI. This could reduce the amount of recalculating merged ranges, formulas, and references.\n\n[1] Cycle sort, theoretically minimal number of writes https://en.wikipedia.org/wiki/Cycle_sort"}]