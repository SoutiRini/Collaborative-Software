[{"count": 0, "tags": [], "bug_id": 29188, "text": "A patch that makes the tests runtime goesfrom 46sec to 34sec (at least in my\nmachine). Tomorrow I'll post a more detailed description of the patch, but it\ncontains mostly clean-ups, the replace of b64 encoder by the b64 encoder of\nxerces, and the share of cachedxpathapi between all the methods that work over\nthe signature document. Less garbage is produced and the memory footprint has\nbeen lowered a little.\n\nAll the tests are running ok. But two test has been patch (it seems that the\nxerces b64 adds a \\n where the original does not).\n\nRegards", "id": 57993, "time": "2004-05-24T22:37:23Z", "creator": "raul-info@r-bg.com", "creation_time": "2004-05-24T22:37:23Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 29188, "attachment_id": 11641, "text": "Created attachment 11641\nThe patch", "id": 57994, "time": "2004-05-24T22:38:44Z", "creator": "raul-info@r-bg.com", "creation_time": "2004-05-24T22:38:44Z", "is_private": false}, {"count": 2, "tags": [], "creator": "raul-info@r-bg.com", "attachment_id": null, "text": "There is a bug with the first version of this patch. The Reference.verify method\ndoesn\u00b4t iterate over different references(it evaluetes a couple of time the\nfirst reference).\nThis bug covers another bug that the Here function doesn't work with the cache\nof xpathapi(Is there any xpath expert that can help me? ...... Any one?\nPlease....). \n\nI will fix the issues in a couple of days. Perhaps I revert the cache of\nxpathapi but seems promising :( .\n\nSorry for the problems.", "id": 58140, "time": "2004-05-26T16:14:02Z", "bug_id": 29188, "creation_time": "2004-05-26T16:14:02Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 29188, "attachment_id": 11714, "text": "Created attachment 11714\nNew version of the patch with several bugs fixed, and various eclipse warnings removed.", "id": 58514, "time": "2004-06-01T22:17:50Z", "creator": "raul-info@r-bg.com", "creation_time": "2004-06-01T22:17:50Z", "is_private": false}, {"count": 4, "tags": [], "text": "This patch does mainly:\n\n    * Reduce the number of objects generated while processing (in some case\nthousands of unneeded AttrCompare were insatiate).\n    * Remove unneeded methods.\n    * Changed all the rest of XPathAPI to CachedXPathAPI(or a selectNode)\n    * Fixed the javadocs, eclipse warnings in the touched files\n    * Removed some use of DocumentTraversal(only left in\nTransformXPathFilterCHGP, is it still needed?).\n    * Shared the same CachedXPathAPI for all the methods in the same thread(i.e.\nThreadLocal).\n\nThe memory footprint (in my test cases) during the check has goes from 7M-9M to\n5M-7M.\nThe speed up in my test case is about 5-10% \nThe changelog for the changed files: \n\n    * Init.java\n          o Used cachedXpathAPi instead of XPathAPI for speed reasons.\n          o Modify the patch of the xalan FunctionTable, and do it using\nreflection api, so it can compile in new Xalan versions.\n          o Removed all readUserConfiguration methods(not done correctly),\nregisterKeyinfoContentHandler(), qualifyNamespaces() and\ngetContentHandlerClass() not used in the library(This behavior is more or less\ndone in JCEMapper)\n          o Fixed JAVADOCS\n    * JCEMapper\n          o Used cachedXpathAPi instead of XPathAPI for speed reasons.\n          o Fixed JAVADOCS\n    * IntegrityHmac.java\n          o Remove XPathAPI for XMLUtils.selectDSNode\n          o Fixed JAVADOCS\n          o Refactor a little engineVerify to sharing log functions.\n          o Removed some else when return is used in then(eclipse)\n    * Cannicalizer.java\n          o Fixed JAVADOCS\n          o Removed XPATH_* (except C14N_W_COMMENTS_SINGLE_NODE) as they are not\nused in the library anymore.\n    * AttrCompare.java\n          o Refactor to reduce the call to Node methods.\n    * C14NHelper\n          o Fixed JAVADOCS\n\no       Removed sortAttributes(not needed any more) normalizeAttr,\nnormalizeComment, normalizaeProcessingInstraction, normalizeText, (they are not\nused and are similar to ones in C14NBase)\n          o Refactor namespaceIsAbsolute to one line in string.\n    * Canonicalizer20010315.java\n          o Fixed JAVADOCS\n          o Extract string constants\n          o Used SortedSet instead of a List to do the sorting while inserting nodes\n          o Do the namespaceIsRelative check only in Nodes that are going to be\nemitted.\n    * Canonicalizer20010315Excl.java\n          o Fixed JAVADOCS\n          o Extract string constants\n          o Used SortedSet instead of a List to do the sorting while inserting nodes\n          o Do the namespaceIsRelative check only in Nodes that are going to be\nemitted.\n          o Remove the garbage generated at use in visiblyUtilezed without\nappending xmlns: to the prefixes.\n          o Clone (instead of created anew) some structures for speed reasons.\n    * CanonicalizerBase.java\n          o Fixed JAVADOCS\n          o Extract string constants\n          o Used char arrays or simple chars wherever is possible.\n          o NameSpaceSymbTable used clone instead of a list of removes,\ngenerates less garbage.\n    * XMLCipherInput.java\n          o Fixed JAVADOCS\n          o Removed the handling of exceptions that now are not happening.\n    * KeyInfo.java\n          o Fixed JAVADOCS\n          o Removed unneeded private members\n          o Change ElementProxy.getChildLocalName for XMLUtils.selectDsNode\n          o Remove getChildNodes iteraction for getFirstChild, getNextSibling\nlooping.\n          o Change Vector to a List/ArrayList\n          o Remove registerKeyInfoContentHandler (not needed).\n    * X509Data.java\n          o Fixed JAVADOCS\n          o Removed unneeded private members\n          o Change ElementProxy.getChildLocalName for XMLUtils.selectDsNode\n          o Remove getChildNodes iteraction for getFirstChild, getNextSibling\nlooping.\n    * RetrievalMethodResolver.java\n          o Avoid to use exceptions to implement engineCanResolve\n          o Fixed JAVADOCS\n          o Remove so declared but not thrown exceptions\n          o Do getFirstChildElement private(before was public)\n    * X509CertificateResolver.java\n          o Avoid to use exceptions to implement engineCanResolve\n          o Remove so declared but not thrown exceptions\n          o Fixed JAVADOCS\n    * X509SKIResolver.java\n          o Avoid to use exceptions to implement engineCanResolve\n          o Remove so declared but not thrown exceptions\n          o Fixed JAVADOCS\n    * X509SubjectNameResolver.java\n          o Avoid to use exceptions to implement engineCanResolve\n          o Remove so declared but not thrown exceptions\n          o Fixed JAVADOCS\n    * Manifest.java\n          o Fixed JAVADOCS\n          o Don\u2019t search for references elements, use a cached Element[]\n          o Used a CachedXPathAPI for all the operations in the document of the\nmanifest\n          o Remove in the [set|get]ResolverProperty to no search in the keys for\nthe key(why is this done?)\n    * Reference.java\n          o Fixed JAVADOCS\n          o Change ElementProxy.getChildLocalName for XMLUtils.selectDsNode\n          o Remove getChildNodes iteraction for getFirstChild, getNextSibling\nlooping.\n          o Used a CachedXPathAPI for all the operations in the document of the\nreference\n          o Removed some unused constructors.\n    * SignedInfo.java\n          o Fixed JAVADOCS\n          o Used selectDsNode method instead of using DOM to search for a\nspecific node.\n    * XMLSignature.java\n          o Fixed JAVADOCS\n          o Change ElementProxy.getChildLocalName for XMLUtils.selectDsNode\n          o Throws some unneeded IOException handling\n          o Add some if (log.isDebugEnable()) wrapping\n    * XMLSignatureInput.java\n          o Fixed JAVADOCS\n          o Changed CachedXPathAPI to CachedXPathAPIHolder\n          o Reuse the c14n bytes if there are already calculated.\n          o Make a lot of HTML constants private.\n    * Transforms.java\n          o Used selectDsNode method instead of using DOM to search for a\nspecific node.\n          o Reused the Element to cached transforms between getLength and item\n          o Fixed JAVADOCS\n    * TransformBase64Decode.java\n          o Fixed JAVADOCS\n          o Don\u2019t use DocumentTraversal to obtain the text nodes of all subchildren\n          o Remove process and AlwaysAcceptNodeFilter\n    * TransformC14NExclusive.java\n          o Fixed JAVADOCS\n          o Change ElementProxy.getChildLocalName for XMLUtils.selectDsNode\n    * TransformC14NExclusiveWithComments.java\n          o Fixed JAVADOCS\n          o Change ElementProxy.getChildLocalName for XMLUtils.selectDsNode\n    * TransformEnvelopedSignature.java\n          o Fixed JAVADOCS\n          o Change ElementProxy.getChildLocalName for XMLUtils.selectDsNode\n          o Avoid excessive castings in searchSignatureElement\n    * TransformsXPath.java\n          o Fixed JAVADOCS\n          o Change ElementProxy.getChildLocalName for XMLUtils.selectDsNode\n          o Fixed some weird log (introduce by me in a previous patch).\n    * TransformXPath2Filter.java\n          o Fixed JAVADOCS\n          o Change ElementProxy.getChildLocalName for XMLUtils.selectDsNode\n          o Change Vector to List/ArrayList\n    * TransformXPath2Filter04.java\n          o Fixed JAVADOCS\n          o Change ElementProxy.getChildLocalName for XMLUtils.selectDsNode\n    * TransformXPathFilterCHGP\n          o Fixed JAVADOCS\n          o Change ElementProxy.getChildLocalName for XMLUtils.selectDsNode.\n    * TransformXSLT.java\n          o Fixed JAVADOCS\n          o Change ElementProxy.getChildLocalName for XMLUtils.selectDsNode.\n          o Made constants private.\n    * InclusiveNamespaces\n          o Use SortedSet instead of vector.\n          o Don\u2019t concat xmlns: to the prefixes.\n    * XPathFilter.java\n          o Fixed JAVADOCS\n          o Change ElementProxy.getChildLocalName for XMLUtils.selectDsNode.\n    * Base64.java\n          o Fixed JAVADOCS\n          o Remove [get|set]Base64WrapLength (doesn\u2019t work)\n          o Remove getChildNodes iteraction for getFirstChild, getNextSibling\nlooping.\n          o Remove private method encodeBlock, encodeFullBlock and getValue\n          o Import & modified(to use variable wrapping) the Base64\nimplementation from the used in xerces\n    * CachedXPathFuncHereAPI.java\n          o Reset the cachedXpathAPI dtm if here() function is used.\n          o Fixed JAVADOCS\n    * ElementProxy.java\n          o Fixed JAVADOCS\n          o Add some if (log.isDebugEnable()) wrapping\n          o Generate less garbage doing guaranteeThatElementInCorrectSpace\n          o Remove getChildElementLocalName (used XMLUtils.selectNode instead)\n          o Remove getChildNodes iteraction for getFirstChild, getNextSibling\nlooping.\n    * IdResolver.java\n          o Used cachedXpathAPi instead of XPathAPI for speed reasons.\n          o Fixed JAVADOCS\n    * XMLUtils.java\n          o Fixed JAVADOCS\n          o Removed getNodeTypeString, all getAncestorElements,\ngetDirectChildrenElements, getDirectChild, outputDOM, elementToNodeList,\ncreateAttr, setAttr, setAttr,createElementFromBigint, getBigintFromElement,\ngetBytesFromElement, createElementInEncryptionSpace,\nguaranteeThatElementInSignatureSpace, guaranteeThatElementInEncryptionSpace,\nrandomNSprefix field, getRandomNamespacePrefix, createDSctx(doc,prefix),\nconverSetToNodeList, getXPath()\n    * ResolverFrament.java\n          o Fixed JAVADOCS\n          o Do pass cachedXpathapiholder to XMLSignatureInput constructor.\n    * ResolverXPointer.java\n          o Fixed JAVADOCS\n          o Do pass cachedXpathapiholder to XMLSignatureInput constructor.\n          o Remove some unused parameters in the private methods.\n    * AllTests.java\n          o In the static initialization if the basedir property is not set, set\nit to the current dir.\n    * CachedXPathAPIHolder.java\n          o For hold & cache XPathAPIHolder. Now the cacheXPathAPI is matain &\nsometime reset via ThreadLocal.\n\n ", "is_private": false, "bug_id": 29188, "id": 58586, "time": "2004-06-02T22:00:07Z", "creator": "raul-info@r-bg.com", "creation_time": "2004-06-02T22:00:07Z", "attachment_id": null}, {"count": 5, "text": "Created attachment 12031\nNew patch against the current CVS HEAD", "creator": "raul-info@r-bg.com", "attachment_id": 12031, "id": 60161, "time": "2004-07-05T20:57:16Z", "bug_id": 29188, "creation_time": "2004-07-05T20:57:16Z", "tags": [], "is_private": false}, {"count": 6, "tags": [], "bug_id": 29188, "attachment_id": null, "id": 60506, "time": "2004-07-12T18:13:34Z", "creator": "dims@yahoo.com", "creation_time": "2004-07-12T18:13:34Z", "is_private": false, "text": "Raul,\n\nCan i close this?\n\nthanks,\ndims"}, {"count": 7, "tags": [], "bug_id": 29188, "attachment_id": null, "id": 60517, "time": "2004-07-12T19:02:09Z", "creator": "raul-info@r-bg.com", "creation_time": "2004-07-12T19:02:09Z", "is_private": false, "text": "This patch is still uncommited.\nSome people have report problems with the patch. I'm investigating it but I\nhaven't been able to reproduce them.\nWhen I have my CVS account setted I will try to commit it myself. \n\nThanks,"}, {"count": 8, "tags": [], "creator": "raul-info@r-bg.com", "attachment_id": null, "text": "New Version of the path.\nThis one have give big performance & memory improvments to the users of XPath\ntransformation(x2-x3 times faster) and far lesser improvments for the other kind\nof users. All in All passing all tests ot junit suite goes from 36-37secs in the\nCVS to 15-17secs to the one patched. With a memory footprint of 29meg to 18meg\nwith a less gc pressure.\n\nThis patch also fix a bug intruduced in the c14n rewrite, discover by KM Yung\nJemmee that happends when a dom tree like\n<a xmlns=\"...\">\n  <b xmlns=\"\">\n     <c>\n  </b>\n</a>\nthe subtree c is asked to be c14n.\n\nThat in the current cvs code generates\n<c xmlns=\"\"> output instead of plain <c>", "id": 60780, "time": "2004-07-18T18:17:09Z", "bug_id": 29188, "creation_time": "2004-07-18T18:17:09Z", "is_private": false}, {"count": 9, "tags": [], "bug_id": 29188, "attachment_id": 12151, "id": 60781, "time": "2004-07-18T18:18:35Z", "creator": "raul-info@r-bg.com", "creation_time": "2004-07-18T18:18:35Z", "is_private": false, "text": "Created attachment 12151\nNew patch version with speed-ups & bugfixes."}, {"count": 10, "tags": [], "bug_id": 29188, "attachment_id": null, "id": 60875, "time": "2004-07-20T16:58:26Z", "creator": "raul-info@r-bg.com", "creation_time": "2004-07-20T16:58:26Z", "is_private": false, "text": "Latest version,\n  This one takes the alltest runtime from 16s to 9-10s(UNDER 10secs from 46secs\nat the beginig of the patch from over 1min at the beginig of 1.1 development,\nand the first one have more tests, new test vectors from iop).\n\nThe last speed-up comes from little tweaking in the CannicalizerBase class that\ncan be summarize in:\n       * Don't use outputwriter to do char to UTF8 transformations. Do it by hand.\n       * Make the output* methods static so this._writer is not read everytime\nand can be inlined easyly by the JIT(Seems stupid but it helps a lot).\n\n"}, {"count": 11, "tags": [], "bug_id": 29188, "text": "Created attachment 12175\nLatest version (UTF-8 optimizations)", "id": 60876, "time": "2004-07-20T17:00:03Z", "creator": "raul-info@r-bg.com", "creation_time": "2004-07-20T17:00:03Z", "is_private": false, "attachment_id": 12175}, {"count": 12, "tags": [], "creator": "raul-info@r-bg.com", "attachment_id": null, "text": "Patch applied. Time to test ;)", "id": 61501, "time": "2004-08-03T18:08:38Z", "bug_id": 29188, "creation_time": "2004-08-03T18:08:38Z", "is_private": false}, {"count": 13, "tags": [], "creator": "raul-info@r-bg.com", "attachment_id": null, "text": "Closing old bugs.", "id": 91946, "time": "2006-08-06T17:29:48Z", "bug_id": 29188, "creation_time": "2006-08-06T17:29:48Z", "is_private": false}]