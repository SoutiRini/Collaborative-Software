[{"count": 0, "tags": [], "creator": "bjoern@j3e.de", "attachment_id": null, "id": 178635, "time": "2014-10-21T10:36:11Z", "bug_id": 57121, "creation_time": "2014-10-21T10:36:11Z", "is_private": false, "text": "those mod_ssl oscp default values are set here:\n\nSSLStaplingResponseMaxAge -1 (so the entries should be valid a much more than an hour)\nSSLStaplingStandardCacheTimeout 3600 (so after one hour a new ocsp request is being done by mod_ssl)\n\nnot I had saw the case that after one hour mod_ssl tried to refresh the ocsp rely from the ocsp server but i see in the proxy log that the ocsp server could not be reached. Now instead of attaching the previous (still valid) ocsp reply to the server certificate to the clients it was attaching a \"try later\" ocsp error in the reply to the client. As a result of that the client (firefox 33 here) was displaying an error message that there is a problem with the ocsp status of the server certificate.\n\nIf mod_ssl still have an old but valid ocsp reply in the cache it should never replace that with a \"try later\" ocsp error. Also setting \"SSLStaplingReturnResponderErrors off\" is not an option because the site might have a must-staple policy defined."}, {"attachment_id": null, "tags": [], "bug_id": 57121, "is_private": false, "count": 1, "id": 179235, "time": "2014-11-22T19:43:56Z", "creator": "trawick@apache.org", "creation_time": "2014-11-22T19:43:56Z", "text": "SSLStaplingStandardCacheTimeout directly controls cache expiration, so once the 3600 seconds elapses the old response is no longer available.  Thus, the previous response can't be used as a fallback if the responder can't be reached after the timeout expires.\n\nSSLStaplingResponseMaxAge is a final sanity check on a response, so it doesn't help here.\n\nIdeally a response would be refreshed well before cache expiration, without blocking other threads (which continue to use the previously cached response), and without removing a valid entry from the cache if a temporary communication error occurs."}, {"count": 2, "tags": [], "text": "So we still need a new parameter like \"SSLStaplingRefreshTime\" then. Actually this is required to get an ocsp implementation that is stable enough not to cause problems with OCSP server that don't have perfect availability or to be able to enable stapling by default one day.", "is_private": false, "id": 194770, "creator": "bjoern@j3e.de", "time": "2016-11-02T11:02:46Z", "bug_id": 57121, "creation_time": "2016-11-02T11:02:46Z", "attachment_id": null}, {"count": 3, "tags": [], "text": "Instead of adding new SSLStaplingRefreshTime, why not just use a fraction (e.g. half) of SSLStaplingStandardCacheTimeout to refresh?\nBut still, if it fails at refresh time, then it has to work when cache timeout is reached.\n\nMaybe something like this could work better / be more safe:\nTry to refresh at half of SSLStaplingStandardCacheTimeout, if it fails try to refresh more often, e.g. every 1/10 of SSLStaplingStandardCacheTimeout until it succeeds and then SSLStaplingStandardCacheTimeout starts again at max. Or simply just try to refresh at every 1/10 of SSLStaplingStandardCacheTimeout.\n\nTo make less requests to the CA, set default of SSLStaplingStandardCacheTimeout to 86400 (1 day), so the refresh will happen every 2.4 hours.", "is_private": false, "bug_id": 57121, "id": 200502, "time": "2017-08-28T14:32:57Z", "creator": "fabian@wenks.ch", "creation_time": "2017-08-28T14:32:57Z", "attachment_id": null}]