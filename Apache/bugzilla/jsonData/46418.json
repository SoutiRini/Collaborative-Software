[{"count": 0, "tags": [], "bug_id": 46418, "attachment_id": null, "id": 123412, "time": "2008-12-19T02:26:34Z", "creator": "mhilpert@gmx.de", "creation_time": "2008-12-19T02:26:34Z", "is_private": false, "text": "It seems that Batik is not thread save. We have several fixed/static SVGs that we include in XSL-FO and transform via Apache FOP. As long as we create the reports sequentially, such errors (see below) never occured so far. But when 2 reports are generated concurrently and both have (the same) SVG files included, a NullPointerException can occur:\n\n---------------------------------------------------------------------------\n084942921 SEVERE  T61: SVG Errorfile:/C:/Programme/ddf/xml/images/V10271.svg:\nThe attribute \"style\" represents an invalid CSS declaration (\"fill:#ef7b00; fill-rule:nonzero; stroke:none; stroke-width:1; stroke-linecap:butt; stroke-linejoin:miter; stroke-dasharray:none;\").\nOriginal message:\njava.lang.NullPointerException\n    org.w3c.dom.DOMException: file:/C:/Programme/ddf/xml/images/V10271.svg:\nThe attribute \"style\" represents an invalid CSS declaration (\"fill:#ef7b00; fill-rule:nonzero; stroke:none; stroke-width:1; stroke-linecap:butt; stroke-linejoin:miter; stroke-dasharray:none;\").\nOriginal message:\njava.lang.NullPointerException\n    \tat org.apache.batik.css.engine.CSSEngine.getCascadedStyleMap(Unknown Source)\n    \tat org.apache.batik.css.engine.CSSEngine.getComputedStyle(Unknown Source)\n    \tat org.apache.batik.bridge.CSSUtilities.getComputedStyle(Unknown Source)\n    \tat org.apache.batik.bridge.CSSUtilities.convertDisplay(Unknown Source)\n    \tat org.apache.batik.bridge.GVTBuilder.buildGraphicsNode(Unknown Source)\n    \tat org.apache.batik.bridge.GVTBuilder.buildComposite(Unknown Source)\n    \tat org.apache.batik.bridge.GVTBuilder.build(Unknown Source)\n    \tat org.apache.fop.render.pdf.PDFSVGHandler.renderSVGDocument(PDFSVGHandler.java:188)\n    \tat org.apache.fop.render.AbstractGenericSVGHandler.handleXML(AbstractGenericSVGHandler.java:57)\n    \tat org.apache.fop.render.AbstractRenderer.renderXML(AbstractRenderer.java:808)\n    \tat org.apache.fop.render.PrintRenderer.renderDocument(PrintRenderer.java:169)\n    \tat org.apache.fop.render.pdf.PDFImageHandlerXML.generateImage(PDFImageHandlerXML.java:55)\n    \tat org.apache.fop.render.pdf.PDFRenderer.putImage(PDFRenderer.java:1745)\n    \tat org.apache.fop.render.pdf.PDFRenderer.renderImage(PDFRenderer.java:1679)\n    \tat org.apache.fop.render.AbstractRenderer.renderViewport(AbstractRenderer.java:743)\n    \tat org.apache.fop.render.AbstractPathOrientedRenderer.renderViewport(AbstractPathOrientedRenderer.java:621)\n    \tat org.apache.fop.render.AbstractRenderer.renderInlineArea(AbstractRenderer.java:626)\n    \tat org.apache.fop.render.pdf.PDFRenderer.renderInlineArea(PDFRenderer.java:1345)\n    \tat org.apache.fop.render.AbstractRenderer.renderLineArea(AbstractRenderer.java:601)\n    \tat org.apache.fop.render.pdf.PDFRenderer.renderLineArea(PDFRenderer.java:1336)\n    \tat org.apache.fop.render.AbstractRenderer.renderBlocks(AbstractRenderer.java:536)\n    \tat org.apache.fop.render.AbstractRenderer.renderBlock(AbstractRenderer.java:573)\n    \tat org.apache.fop.render.pdf.PDFRenderer.renderBlock(PDFRenderer.java:1329)\n    \tat org.apache.fop.render.AbstractRenderer.renderBlocks(AbstractRenderer.java:526)\n    \tat org.apache.fop.render.AbstractRenderer.renderBlock(AbstractRenderer.java:573)\n    \tat org.apache.fop.render.pdf.PDFRenderer.renderBlock(PDFRenderer.java:1329)\n    \tat org.apache.fop.render.AbstractRenderer.renderBlocks(AbstractRenderer.java:526)\n    \tat org.apache.fop.render.AbstractPathOrientedRenderer.renderReferenceArea(AbstractPathOrientedRenderer.java:548)\n    \tat org.apache.fop.render.AbstractRenderer.renderBlock(AbstractRenderer.java:560)\n    \tat org.apache.fop.render.pdf.PDFRenderer.renderBlock(PDFRenderer.java:1329)\n    \tat org.apache.fop.render.AbstractRenderer.renderBlocks(AbstractRenderer.java:526)\n    \tat org.apache.fop.render.AbstractRenderer.renderBlock(AbstractRenderer.java:573)\n    \tat org.apache.fop.render.pdf.PDFRenderer.renderBlock(PDFRenderer.java:1329)\n    \tat org.apache.fop.render.AbstractRenderer.renderBlocks(AbstractRenderer.java:526)\n    \tat org.apache.fop.render.AbstractRenderer.renderRegion(AbstractRenderer.java:322)\n    \tat org.apache.fop.render.AbstractRenderer.renderRegionViewport(AbstractRenderer.java:284)\n    \tat org.apache.fop.render.AbstractRenderer.renderPageAreas(AbstractRenderer.java:247)\n    \tat org.apache.fop.render.AbstractRenderer.renderPage(AbstractRenderer.java:229)\n    \tat org.apache.fop.render.pdf.PDFRenderer.renderPage(PDFRenderer.java:801)\n    \tat org.apache.fop.area.RenderPagesModel.addPage(RenderPagesModel.java:113)\n    \tat org.apache.fop.layoutmgr.AbstractPageSequenceLayoutManager.finishPage(AbstractPageSequenceLayoutManager.java:312)\n    \tat org.apache.fop.layoutmgr.PageSequenceLayoutManager.finishPage(PageSequenceLayoutManager.java:167)\n    \tat org.apache.fop.layoutmgr.PageSequenceLayoutManager.activateLayout(PageSequenceLayoutManager.java:108)\n    \tat org.apache.fop.area.AreaTreeHandler.endPageSequence(AreaTreeHandler.java:234)\n    \tat org.apache.fop.fo.pagination.PageSequence.endOfNode(PageSequence.java:123)\n    \tat org.apache.fop.fo.FOTreeBuilder$MainFOHandler.endElement(FOTreeBuilder.java:340)\n    \tat org.apache.fop.fo.FOTreeBuilder.endElement(FOTreeBuilder.java:169)\n    \tat org.apache.xalan.transformer.TransformerIdentityImpl.endElement(TransformerIdentityImpl.java:1101)\n    \tat org.apache.xerces.parsers.AbstractSAXParser.endElement(Unknown Source)\n    \tat org.apache.xerces.impl.XMLNSDocumentScannerImpl.scanEndElement(Unknown Source)\n    \tat org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher.dispatch(Unknown Source)\n    \tat org.apache.xerces.impl.XMLDocumentFragmentScannerImpl.scanDocument(Unknown Source)\n    \tat org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)\n    \tat org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)\n    \tat org.apache.xerces.parsers.XMLParser.parse(Unknown Source)\n    \tat org.apache.xerces.parsers.AbstractSAXParser.parse(Unknown Source)\n    \tat org.apache.xalan.transformer.TransformerIdentityImpl.transform(TransformerIdentityImpl.java:484)\n    \tat de.ddf.xml.FOP.fo2PDF(Unknown Source)\n    \tat java.lang.Thread.run(Unknown Source)\n---------------------------------------------------------------------\n\nThe result is, that the SVG image on one the report is displayed but with strange/different colors."}, {"count": 1, "tags": [], "creator": "jeremias@apache.org", "text": "A similar bug has already been discussed (and fixed in FOP Trunk) in #46360 (https://issues.apache.org/bugzilla/show_bug.cgi?id=46360). Yes, Batik is not thread-safe if you operate off the same DOM and that's what was FOP's problem. Unless your bug still occurs with FOP Trunk I'm inclined to close this bug here as \"WONTFIX\" after Thomas DeWeese explained why we need to clone the DOM in FOP.", "id": 123414, "time": "2008-12-19T02:39:59Z", "bug_id": 46418, "creation_time": "2008-12-19T02:39:59Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 46418, "attachment_id": null, "id": 123417, "time": "2008-12-19T03:41:25Z", "creator": "mhilpert@gmx.de", "creation_time": "2008-12-19T03:41:25Z", "is_private": false, "text": "\"... if you operate off the same DOM ...\". Well, in our case these are 2 separate threads holding their own XML and XSL-FO documents (but referencing the same fixed SVG (as it is a logo)). So I would answer: no, it's not the same DOM ...?"}, {"count": 3, "tags": [], "bug_id": 46418, "text": "(In reply to comment #2)\n> \"... if you operate off the same DOM ...\". Well, in our case these are 2\n> separate threads holding their own XML and XSL-FO documents (but referencing\n> the same fixed SVG (as it is a logo)). So I would answer: no, it's not the same\n> DOM ...?\n> \n\nBut you do know that FOP has an image cache that reuses images from the same location for performance reasons? Yes, it's the same DOM if you reference the same fixed SVG. That's why I asked you to retest with FOP Trunk.", "id": 123418, "time": "2008-12-19T04:34:40Z", "creator": "jeremias@apache.org", "creation_time": "2008-12-19T04:34:40Z", "is_private": false, "attachment_id": null}]