[{"count": 0, "tags": [], "creator": "c.gosch@inovex.de", "attachment_id": null, "text": "On creating a new sheet from scratch, \"IllegalStateException: Cannot create value records before row records exist\" is thrown when creating the first cell using \"HSSFCell cell = ((HSSFRow)row).createCell((short)0);\" (after creating workbook, sheet, row).\n\nThis happens for example when applying some basic sheet formatting and print setup after creating the row and before actually creating the cell at the row. It is not known which precondition is exactly required for reproducing the bug.\n\nAn example (simple JUnit test class) is attached to this bug. The stack trace is inside the exapmle file.\n\nTesting environment was:\nIBM WebSphere 6.0.2.19 / IBM JRE 1.4.2 on WinXP-Pro SP3 and on a Linux system;\nPOI 3.1-FINAL-20080629\n\nThe test class was build and \"tested\" using Eclipse 3.4 Ganymede \"EE\" with the JRE being setup to the mentioned IBM JRE 1.4.2.\n\nThere is a bug the may be related and was fixed for 3.1-FINAL-20080629: It is 45145 (https://issues.apache.org/bugzilla/show_bug.cgi?id=45145).\n\nRegards,\n-- \nc.gosch", "id": 120234, "time": "2008-08-31T06:55:46Z", "bug_id": 45717, "creation_time": "2008-08-31T06:55:46Z", "is_private": false}, {"count": 1, "tags": [], "creator": "c.gosch@inovex.de", "attachment_id": 22503, "text": "Created attachment 22503\nJUnit test class for Exception on HSSFRow.createCell(short)\n\nJUnit test class for Exception on HSSFRow.createCell(short)", "id": 120235, "time": "2008-08-31T06:56:41Z", "bug_id": 45717, "creation_time": "2008-08-31T06:56:41Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 45717, "text": "Retested OK on svn trunk (r690714)\n\nJunit added in svn 690721\n\nThe cause of this bug was bad management of sheet record positions, which caused the RowRecordsAggregate to get out of alignment.  At the time of bug 45145, the RowRecordsAggregate and ValueRecordsAggregate were very independent.  It has since become clearer that RowRecordsAggregate should compose ValueRecordsAggregate (fixed in r683758).  Besides the data structure problem, this bug was also caused by a bad position adjustment when adding margins. In svn r683871 the PageSettingsBlock was introduced, which simplified position management of all page settings records.  The sample code / new junit appears to relate more to the second fix, but either would have done the job.", "id": 120238, "time": "2008-08-31T09:30:43Z", "creator": "josh@apache.org", "creation_time": "2008-08-31T09:30:43Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "text": "Since 3.1 seems to be the current final version, is there any recommendation for a \"code-around\" for this problem with 3.1, like executing the formatting code before / behind other operations? I generally dislike using \"nightly builds\" or alphas in production environments.", "attachment_id": null, "id": 120250, "creator": "c.gosch@inovex.de", "time": "2008-09-01T00:46:00Z", "bug_id": 45717, "creation_time": "2008-09-01T00:46:00Z", "is_private": false}, {"count": 4, "attachment_id": null, "bug_id": 45717, "text": "To make the unit test I reduced your example down to these lines of code:\n\nHSSFSheet sheet = workbook.createSheet(\"Vorschauliste\");\nHSSFRow row = sheet.createRow(0);            // B\nsheet.setMargin(HSSFSheet.LeftMargin, 0.3);  // A \nrow.createCell((short) 0);                   // C\n\nTo cause the IllegalStateException, the critical factor is to execute the three labeled lines in the above order.  The other two possible orderings (A, B, C) and (B, C, A) work OK.  For me, setting the sheet margins before creating rows makes a little more sense. To be clear:\n\nHSSFSheet sheet = workbook.createSheet(\"Vorschauliste\");\nsheet.setMargin(HSSFSheet.LeftMargin, 0.3);  // A \nHSSFRow row = sheet.createRow(0);            // B\nrow.createCell((short) 0);                   // C\n\nEither re-ordering would be a 'code around' for the specific example provided.  However there is no guarantee that this would be the only thing you need to do to avoid the problems fixed in r683758 and r683871.\n", "id": 120262, "time": "2008-09-01T10:14:08Z", "creator": "josh@apache.org", "creation_time": "2008-09-01T10:14:08Z", "tags": [], "is_private": false}, {"count": 5, "tags": [], "text": "\nFinal note:\n\nI have put this on the mailing list just a few minutes earlier :-)\n\nBesides: The reason for the order of statements was that I needed information about how many rows the freeze pane should cover, which is data dependent here. It was just the simplest form to implement (just create the freeze pane rows from the header data and count, set up the freeze pane, and proceed with the real data) -- now I inspect my data first, set up the freeze pane and create rows and cells afterwards.", "attachment_id": null, "id": 120267, "creator": "c.gosch@inovex.de", "time": "2008-09-02T00:32:58Z", "bug_id": 45717, "creation_time": "2008-09-02T00:32:58Z", "is_private": false}]