[{"count": 0, "tags": [], "text": "In systems where system resources are extremely limited or managed tightly,\napplications may be unable to recover from system failures that occur within APR.\n\nFor an example: in an embedded system where applications are given an initial\nvirtual memory limit, malloc in an apr_pool can fail.\n\nThe patch I have available provides a way for to applications to easily install\ntheir own hook handler functions into APR.  The handler functions can be called\neasily by APR on failure and will give the application opportunity to recover\nfrom the system error and for APR to retry.  \n\nFor example: on a malloc failure in apr_pool, the application could attempt to\nincrease virtual memory and have APR retry the malloc.\n\nThere are some similarities between this patch and the hooks facility in APU;\nhowever, this patch is more limited in scope because it is targeted toward\nhandling system failures.  The hooks facility in APU uses dynamic allocation to\nmanage a chain of handler functions.  This is something to be avoided when\ntrying to catch system errors like allocation failures.  The proposed patch\ninstead uses static pointers to single functions.", "attachment_id": null, "bug_id": 44432, "id": 113794, "time": "2008-02-15T07:27:07Z", "creator": "vwfinley@comcast.net", "creation_time": "2008-02-15T07:27:07Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 44432, "is_private": false, "text": "Created attachment 21537\nProposed enhancement", "id": 113795, "time": "2008-02-15T07:28:27Z", "creator": "vwfinley@comcast.net", "creation_time": "2008-02-15T07:28:27Z", "attachment_id": 21537}, {"count": 2, "tags": [], "bug_id": 44432, "attachment_id": 21538, "text": "Created attachment 21538\nProposed enhancement patch\n\nIgnore the previous patch posted for this issue.", "id": 113797, "time": "2008-02-15T10:01:56Z", "creator": "vwfinley@comcast.net", "creation_time": "2008-02-15T10:01:56Z", "is_private": false}]