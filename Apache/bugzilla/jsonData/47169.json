[{"count": 0, "tags": [], "creator": "info@bergmann-it.de", "attachment_id": null, "text": "When using HSSFSheet.shiftRows(), the RowRecordsAggregate seems to get inconsistent with the ValueRecordsAggregate, resulting in the following exception:\n\nException in thread \"main\" java.lang.IllegalArgumentException: Specified rowIndex 30 is outside the allowable range (0..30)\n\tat org.apache.poi.hssf.record.aggregates.ValueRecordsAggregate.removeAllCellsValuesForRow(ValueRecordsAggregate.java:111)\n\tat org.apache.poi.hssf.record.aggregates.RowRecordsAggregate.removeRow(RowRecordsAggregate.java:120)\n\tat org.apache.poi.hssf.model.Sheet.addRow(Sheet.java:677)\n\tat org.apache.poi.hssf.usermodel.HSSFSheet.addRow(HSSFSheet.java:303)\n\tat org.apache.poi.hssf.usermodel.HSSFSheet.createRow(HSSFSheet.java:206)\n\nCode to reproduce:\n\nHSSFWorkbook workbook = new HSSFWorkbook();\nHSSFSheet sheet = workbook.createSheet();\nsheet.createRow(30);\nsheet.shiftRows(29, 29, 1, true, true);\nsheet.createRow(30);\n\nThe first createRow() succeeds, the second fails. The first call can be left out, leading to the same result.\n\nAs workaroud is not enough to create the target explicitely before shifting the source row (as the reproducer code does), but you need to create a cell in this row. The following code works:\n\n        HSSFWorkbook workbook = new HSSFWorkbook();\n        HSSFSheet sheet = workbook.createSheet();\n        sheet.createRow(30).createCell(0);\n        sheet.shiftRows(29, 29, 1, true, true);\n        sheet.createRow(30);", "id": 126874, "time": "2009-05-08T10:57:21Z", "bug_id": 47169, "creation_time": "2009-05-08T10:57:21Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 47169, "attachment_id": null, "id": 183018, "time": "2015-05-18T20:32:58Z", "creator": "dominik.stadler@gmx.at", "creation_time": "2015-05-18T20:32:58Z", "is_private": false, "text": "This works with the latest version of POI, 3.12 and likely was fixed some time ago already."}]