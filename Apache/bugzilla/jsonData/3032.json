[{"count": 0, "text": "java.io.IOException: Cannot recover key exception while using trust key store \nwith multiple key entries with different passwords.\n\nThis is happening due to a bug in \norg.apache.tomcat.net.SSLSocketFactory.initProxy method.\n\nI have designed a fix for it (I am using the same strategy in my SSL client)\n===============================================================================\n\n\n\tString keystoreFile=(String)attributes.get(\"keystore\");\n\tif( keystoreFile==null) keystoreFile=defaultKeystoreFile;\n\t\n\t/* add this for store type*/\n\tString keystoreType=(String)attributes.get(\"storetype\");\n\tif( keystoreType==null) keystoreType=\"JKS\";\n\t\n\tString keyPass=(String)attributes.get(\"keypass\");\n\tif( keyPass==null) keyPass=defaultKeyPass;\n\n\t/* Please please add a param for store pass */\n\tString storePass=(String)attributes.get(\"storepass\");\n\tif( storePass==null) storePass=defaultStorePass;\n\n\n\tcom.sun.net.ssl.SSLContext context =\n\tcom.sun.net.ssl.SSLContext.getInstance(\"TLS\"); //SSL\n\n\tcom.sun.net.ssl.KeyManagerFactory kmf = \ncom.sun.net.ssl.KeyManagerFactory.getInstance(\"SunX509\");\n\t\n\t/* This should be the code to initialize the keyManagerFactory */\n\tks = KeyStore.getInstance(keystoreType);\n\n\tks.load(new FileInputStream(keystoreFile), storePass.toCharArray());\n\n\tKeyStore ksNew = KeyStore.getInstance(keystoreType);\n\tksNew.load(null, keyPass);\n\tEnumeration enum = ks.aliases();\n\twhile(enum.hasMoreElements())\n\t{\n\t\tString alias = (String) enum.nextElement();\n\t\tif(ks.isKeyEntry(alias))\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\tKey key = ks.getKey(alias, keypass);\n\t\t\t\tjava.security.cert.Certificate[] certChain = \nks.getCertificateChain(alias);\n\t\t\t\tksNew.setKeyEntry(alias, key, keypass, \ncertChain);\n\t\t\t}\n\t\t\tcatch(Exception ex)\n\t\t\t{\n\t\t\t\t// Go to the next key\n\t\t\t}\n\t\t}\n\t}\n\n\n\tkmf.init(ksNew, keyPass.toCharArray());\n\t\n\tcom.sun.net.ssl.TrustManager[] tm = null;\n\tif( clientAuth) {\n\tcom.sun.net.ssl.TrustManagerFactory tmf =\n\t    com.sun.net.ssl.TrustManagerFactory.getInstance(\"SunX509\");\n\ttmf.init(kstore);\n\ttm = tmf.getTrustManagers();\n\t}\n\n\tcontext.init(kmf.getKeyManagers(), tm, null);\n\n===============================================================================\nWe also need parameters corresponding to keystore type and keystore pass in the \nserver.xml\n\nthanks and regards\nMandar Joshi", "bug_id": 3032, "attachment_id": null, "id": 4343, "time": "2001-08-07T16:41:01Z", "creator": "joshimandar@yahoo.com", "creation_time": "2001-08-07T16:41:01Z", "tags": [], "is_private": false}, {"count": 1, "tags": [], "bug_id": 3032, "text": "Reopening to change status.", "id": 53577, "attachment_id": null, "creator": "william.barker@wilshire.com", "creation_time": "2004-03-07T06:56:26Z", "time": "2004-03-07T06:56:26Z", "is_private": false}, {"count": 2, "text": "The 'keyAlias' attribute on the CoyoteConnector should resolve this problem.", "creator": "william.barker@wilshire.com", "attachment_id": null, "id": 53578, "time": "2004-03-07T06:57:18Z", "bug_id": 3032, "creation_time": "2004-03-07T06:57:18Z", "tags": [], "is_private": false}]