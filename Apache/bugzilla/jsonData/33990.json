[{"count": 0, "tags": [], "bug_id": 33990, "attachment_id": null, "id": 72302, "time": "2005-03-13T15:11:04Z", "creator": "apache-bugzilla@vitoni.de", "creation_time": "2005-03-13T15:11:04Z", "is_private": false, "text": "I am using Ant to transform some XML files (out of Eclipse).\nThis is a two step procedure which will need two steps:\n\nFirst create index files, then create HTML.\n\nFor the second step I would like to exclude some files from beeing processed.\nI expected (from the documentation) that the \"excludes\" attribute works standalone.\nHowever it doesn't exclude any files as long the XSLT element does not have an\nadditional \"includes\" attribute."}, {"count": 1, "tags": [], "bug_id": 33990, "attachment_id": 14479, "id": 72303, "time": "2005-03-13T15:15:27Z", "creator": "apache-bugzilla@vitoni.de", "creation_time": "2005-03-13T15:15:27Z", "is_private": false, "text": "Created attachment 14479\nSample build.xml to reproduce bug.\n\nThis file contains two main targets:\n\n\"html\" and \"DOES_NOT_EXCLUDE_html\"\n\n\"html\" is the workaround of the supposed to work target\n\"DOES_NOT_EXCLUDE_html\".\n\n\"DOES_NOT_EXCLUDE_html\" should work without the \"includes\" attribute."}, {"count": 2, "tags": [], "creator": "bodewig@apache.org", "attachment_id": null, "id": 72339, "time": "2005-03-14T11:01:36Z", "bug_id": 33990, "creation_time": "2005-03-14T11:01:36Z", "is_private": false, "text": "OK, just found it.  This is a bug we have to preserve because of backwards\ncompatibility.  Set the scanIncludedDirectories attribute to false and it works.\n\nWithout the includes attribute, your xml directory itself is matched and all files\ninside of this directory will get processed as well.\n"}, {"count": 3, "tags": [], "bug_id": 33990, "attachment_id": null, "is_private": false, "id": 72405, "time": "2005-03-14T19:43:35Z", "creator": "apache-bugzilla@vitoni.de", "creation_time": "2005-03-14T19:43:35Z", "text": "I want the \"xml\" directory to be processed (w/o files matching \"content.xml\").\n\nTarget \"DOES_NOT_EXCLUDE_html\" should create files out of _all_ files expect all\nfiles matching \"content.xml\".\n\nHow is it supposed to break if this bug is fixed.\n\nIf someone uses the exclude feature right now, \"includes\" _and_ \"excludes\" is\nmandatory (which is not what the docs say)\n\nIf it is fixed and it needs only \"excludes\" old build files would be still valid.\n\nAm I missing something?\n\n"}, {"count": 4, "tags": [], "creator": "bodewig@apache.org", "attachment_id": null, "id": 72455, "time": "2005-03-15T16:36:37Z", "bug_id": 33990, "creation_time": "2005-03-15T16:36:37Z", "is_private": false, "text": "(In reply to comment #3)\n> I want the \"xml\" directory to be processed (w/o files matching \"content.xml\").\n\nI know.\n\n> Target \"DOES_NOT_EXCLUDE_html\" should create files out of _all_ files expect all\n> files matching \"content.xml\".\n\nNo, it should also create files for all files contained in the directories\nmatched by the patterns, i.e. the xml directory itself.\n\n> How is it supposed to break if this bug is fixed.\n\nNo bug, set scanincludeddirectories to false.  The default is wrong, but this\nis old legacy behavior that we can't fix.\n\n> If someone uses the exclude feature right now, \"includes\" _and_ \"excludes\" is\n> mandatory (which is not what the docs say)\n\nor scanincludeddirectories - and yes, the docs say that, in a crude way.\n\nChanging the default for scanincludeddirectories would break build that rely on\nthis strange behavior - yes, such builds exist."}]