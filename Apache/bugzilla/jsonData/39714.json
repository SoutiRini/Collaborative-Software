[{"count": 0, "tags": [], "bug_id": 39714, "is_private": false, "id": 89740, "attachment_id": null, "creator": "aprinaresh97@gmail.com", "creation_time": "2006-06-04T01:49:59Z", "time": "2006-06-04T01:49:59Z", "text": "I have following implementation to write out svg file. I have geometry with \nLinearGradient fill attribute. When I render that to the SVG2DGraphics, the \nhandlePaint of the derived class is not getting invoked. Is this an known \nissue or am I missing something in my code? The following code is based on the \nexample given in the svggen documentation.\n\n      try\n      {\n         String scSvgNsURI = \"http://www.w3.org/2000/svg\";\n\n         DOMImplementation zDomImpl =\n                               GenericDOMImplementation.getDOMImplementation();\n         Document zDocument = zDomImpl.createDocument(scSvgNsURI, \"svg\", null);\n\n         SVGGeneratorContext zSvgCtx =\n                                  SVGGeneratorContext.createDefault(zDocument);\n         GenericImageHandler zImgHandler =\n                                         new CachedImageHandlerBase64Encoder();\n         zSvgCtx.setGenericImageHandler(zImgHandler);\n         zSvgCtx.setExtensionHandler(new SvgExtensionHandler());\n\n         SVGGraphics2D zSvgGraphics = new SVGGraphics2D(zSvgCtx, true);\n\n         IDrawingSurface zDrawingSurface = super.getDrawingSurface();\n\n         zSvgGraphics.setRenderingHint(\n                                   RenderingHints.KEY_INTERPOLATION,\n                                   RenderingHints.VALUE_INTERPOLATION_BICUBIC);\n         zSvgGraphics.setRenderingHint(RenderingHints.KEY_RENDERING,\n                                       RenderingHints.VALUE_RENDER_QUALITY);\n         zSvgGraphics.setRenderingHint(\n                                   RenderingHints.KEY_COLOR_RENDERING,\n                                   RenderingHints.VALUE_COLOR_RENDER_QUALITY);\n\n//       zSvgCtx.getGraphicContextDefaults().setRenderingHints(\n//                                         zSvgGraphics.getRenderingHints());\n//       SVGHintsDescriptor zSvgHintsDesc =\n//                               SVGRenderingHints.toSVG(\n//                                          zSvgGraphics.getRenderingHints());\n         //\n         // - Following code renders all the geometry primitives to the given\n         //   graphics\n         //\n         zDrawingSurface.render( zSvgGraphics,\n                                 super.getActiveGeomContainer() );\n\n         Writer zWriter = new OutputStreamWriter(\n                                          new FileOutputStream(zFile), \n                                         \"UTF-8\");\n         zSvgGraphics.stream(zWriter, false);\n      }\n      catch( Exception zExcept )\n      {\n      }\n\n\n   /**\n    * Inner class to handle paint extensions.\n    */\n   private class SvgExtensionHandler extends    DefaultExtensionHandler\n                                     implements SVGConstants\n   {\n      public SVGPaintDescriptor handlePaint( Paint               zPaint,\n                                             SVGGeneratorContext zContext ) \n      {\n         System.out.println( \"HandlePaint called: \" +\n                            zPaint.getClass().getName() );\n      }\n   }"}, {"count": 1, "tags": [], "creator": "deweese@apache.org", "text": "I've looked at the code (yours and Batik's) and it all seems good.\nCan you provide a standalone test case that reproduces the problem?\n", "id": 89796, "time": "2006-06-05T23:18:27Z", "bug_id": 39714, "creation_time": "2006-06-05T23:18:27Z", "is_private": false, "attachment_id": null}]