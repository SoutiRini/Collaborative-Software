[{"text": "This exception is thrown in HSSFSheet when dealing with some spreadsheets:\n\nException caught\njava.lang.RuntimeException: Unexpected missing row when some rows already present\n\tat org.apache.poi.hssf.usermodel.HSSFSheet.setPropertiesFromSheet(HSSFSheet.java:171)\n\tat org.apache.poi.hssf.usermodel.HSSFSheet.<init>(HSSFSheet.java:118)\n\tat org.apache.poi.hssf.usermodel.HSSFWorkbook.<init>(HSSFWorkbook.java:289)\n\tat org.apache.poi.hssf.usermodel.HSSFWorkbook.<init>(HSSFWorkbook.java:202)\n\tat org.apache.poi.hssf.usermodel.HSSFWorkbook.<init>(HSSFWorkbook.java:184)\n\nAssumptions:\nRelates to bug 41187\nRow is null - correct\nrowRecordsAlreadyPresent = true\n\nAt this point in time _rows contains:\n[ROW]\n    .rownumber      = 0\n    .firstcol       = 0x0000\n    .lastcol        = 0x0000\n    .height         = 0x0000\n    .optimize       = 0x0000\n    .reserved       = 0x0000\n    .optionflags    = 0x0160\n        .outlinelvl = 0\n        .colapsed   = false\n        .zeroheight = true\n        .badfontheig= true\n        .formatted  = false\n    .xfindex        = f\n[/ROW]\n\nI can't see anything out of the ordinary with the spreadsheet, if I comment our the 41887 workaround (starting on line 170) that throws a runtime exception the spreadsheet is output sucessfully, starting as follows:\n\nSP041808\neffective 04/18/08...\n\nPlease let me know if you need any more info.", "tags": [], "creator": "jonathan.holloway@gmail.com", "is_private": false, "count": 0, "id": 127303, "time": "2009-05-22T10:32:16Z", "bug_id": 47245, "creation_time": "2009-05-22T10:32:16Z", "attachment_id": null}, {"count": 1, "tags": [], "creator": "yegor@dinom.ru", "attachment_id": null, "id": 127325, "time": "2009-05-23T01:35:35Z", "bug_id": 47245, "creation_time": "2009-05-23T01:35:35Z", "is_private": false, "text": "Please attach the problem file.\n\nYegor"}, {"text": "I can't provide you with the initial file because of client confidentility reasons.  I'll take a look at this bug myself on Monday.  Many thanks.", "tags": [], "bug_id": 47245, "is_private": false, "count": 2, "id": 127331, "time": "2009-05-23T11:47:33Z", "creator": "jonathan.holloway@gmail.com", "creation_time": "2009-05-23T11:47:33Z", "attachment_id": null}, {"count": 3, "text": "(In reply to comment #2)\n> I can't provide you with the initial file because of client confidentility\n> reasons.  I'll take a look at this bug myself on Monday.  Many thanks.\n\nDo you know the origin of this file? Which version of Excel produced it?\nOpen the file in Excel and do \"save as\".  Does the problem still persist? \n\nYegor", "bug_id": 47245, "is_private": false, "id": 127352, "time": "2009-05-24T23:19:02Z", "creator": "yegor@dinom.ru", "creation_time": "2009-05-24T23:19:02Z", "tags": [], "attachment_id": null}, {"count": 4, "text": "Created attachment 28594\nPricelist file from http://www.gigatronshop.com/download/Cenovnik.xls\n\nHere is one more file that produces the same reported error.", "bug_id": 47245, "attachment_id": 28594, "id": 157985, "time": "2012-04-12T14:01:48Z", "creator": "sime.essert@gmail.com", "creation_time": "2012-04-12T14:01:48Z", "tags": [], "is_private": false}, {"text": "Commenting these lines fixes the issue (as has already been stated):\n\n//   if (rowRecordsAlreadyPresent) {\n//      // if at least one row record is present, all should be present.\n//      throw new RuntimeException(\"Unexpected missing row when some rows already present\");\n//   }\n\nThe question is that I don't see the reason why if one row record is present, all should be.\n\nCells already contain row and column indexes, so creating the missing rows should be no problem, and if there's a conflict between an existing row record and a row record created internally from an existing cell, probably the exception should be thrown from HSSFRow.createCellFromRecord or HSSFRow.addCell if the cell being added already exist.", "tags": [], "bug_id": 47245, "is_private": false, "count": 5, "id": 162686, "time": "2012-10-11T10:22:05Z", "creator": "pedro.t.garcia@gmail.com", "creation_time": "2012-10-11T10:22:05Z", "attachment_id": null}, {"count": 6, "tags": [], "creator": "pedro.t.garcia@gmail.com", "attachment_id": null, "is_private": false, "id": 162688, "time": "2012-10-11T10:25:24Z", "bug_id": 47245, "creation_time": "2012-10-11T10:25:24Z", "text": "*** Bug 49312 has been marked as a duplicate of this bug. ***"}, {"count": 7, "tags": [], "creator": "mnott@mnsoft.org", "attachment_id": null, "id": 176607, "time": "2014-07-22T21:31:49Z", "bug_id": 47245, "creation_time": "2014-07-22T21:31:49Z", "is_private": false, "text": "I don't know why this runtime exception was thrown; maybe the assumption is to correctly assume this case should never happen - but appears to do with Business Objects. As I ran into this issue, I've removed the error - not understanding it really - to see how POI behaves.\n\nThis unblocked my project; see here how I did it:\n\nhttp://scn.sap.com/message/15236988#15236988"}, {"count": 8, "tags": [], "bug_id": 47245, "attachment_id": null, "text": "I am also facing the above mentioned issue.\n\nI tried using the workaround specified above and it works for me.\n\nDoes commenting this line can lead to any future complication?\n\nPlease advise.\n\nThe link from which the file creating the error can be downloaded is\nhttp://www.bursamalaysia.com/market/derivatives/market-statistics/historical-data/\n\nThe file creating the problem is under Daily Trading Summary section of the webpage.\n\n\nThanks and Regards,\nDeepesh Ramrakhyani", "id": 177234, "time": "2014-08-18T08:16:23Z", "creator": "deepeshdrk@gmail.com", "creation_time": "2014-08-18T08:16:23Z", "is_private": false}, {"text": "We have had that fix working for some time now (almost 2 years) and haven't found any issue with it.", "tags": [], "bug_id": 47245, "is_private": false, "count": 9, "id": 177238, "time": "2014-08-18T09:16:22Z", "creator": "pedro.t.garcia@gmail.com", "creation_time": "2014-08-18T09:16:22Z", "attachment_id": null}, {"count": 10, "tags": [], "creator": "apache@gagravarr.org", "attachment_id": null, "id": 177239, "time": "2014-08-18T09:18:21Z", "bug_id": 47245, "creation_time": "2014-08-18T09:18:21Z", "is_private": false, "text": "It would be great if someone could confirm what the problematic section of records are. BiffViewer should be able to help with this\n\nIt would also be good if someone could run one of these problematic files through the Microsoft Binary File Format Validator to see if Microsoft consider them valid or not"}, {"count": 11, "tags": [], "bug_id": 47245, "attachment_id": null, "text": "The file provided (Cenovnik.xls) gives a different exception when using BiffViewer. I'm gonna attach one of the files metioned by Deepesh.", "id": 177243, "time": "2014-08-18T12:10:08Z", "creator": "pedro.t.garcia@gmail.com", "creation_time": "2014-08-18T12:10:08Z", "is_private": false}, {"count": 12, "tags": [], "bug_id": 47245, "attachment_id": 31927, "id": 177244, "time": "2014-08-18T12:30:00Z", "creator": "pedro.t.garcia@gmail.com", "creation_time": "2014-08-18T12:30:00Z", "is_private": false, "text": "Created attachment 31927\nProblematic file to test\n\nThis file contains the bug, but runs properly with BiffViewer.\nWhat I found after debugging is that in HSSFSheet.setPropertiesFromSheet there is a line where it looks for the row 149 and the file contains 149 RowRecords.\n\nThis line:\n                hrow = getRow(cval.getRow());\n\ncval is the CellIterator. The first problematic cval is a LabelSSTRecord with row number 149.\n\nFrom the javadoc:\nHSSFRow org.apache.poi.hssf.usermodel.HSSFSheet.getRow(int rowIndex)\n\nReturns the logical row (not physical) 0-based. If you ask for a row that is not defined you get a null. This is to say row 4 represents the fifth row on a sheet.\n\nSo, since there are only 149 RowRecords, and getRow(149) represents the 150th row on the sheet, which doesn't exists, then hrow becomes null and then the exception is thrown.\n\nMaybe it's as easy as changing that line to:\n\nhrow = getRow(cval.getRow() - 1);\n\n[LABELSST]\n    .row    = 0x0095\n    .col    = 0x0002\n    .xfindex= 0x0045\n  .sstIndex = 0x0053\n[/LABELSST]"}, {"count": 13, "text": "Hi Triqui,\n\nPlease Note that poi jar is also used for loading other .xls and .xlsx files also so how will this code change affect other files.\n\nBecause after doing the code changes you mentioned above and trying to access zeroth row by using \n\nSheet s=workBook.getSheetAt(0);\nRow r=s.getRow(0);\nIterator<Cell> ci=r.cellIterator();\nwhile(ci.hasNext()){\n\tCell c=ci.next();\nSystem.out.println(\"Data => \"+c);\n\t\t\t}\n\nPlease Advise.\n\nThanks and Regards,\nDeepesh Ramrakhyani.", "bug_id": 47245, "is_private": false, "id": 177246, "time": "2014-08-18T13:32:19Z", "creator": "deepeshdrk@gmail.com", "creation_time": "2014-08-18T13:32:19Z", "tags": [], "attachment_id": null}, {"text": "Hi Triqui,\n\nThe file attached has 150 rows so 149th(Logically) exists\n\nPlus after doing the changes you mentioned while i am trying to access the Zeroth row its giving me the content of the second row in the file.\n\nPlease have a look into it.\n\nThanks and Regards,\nDeepesh Ramrakhyani.", "tags": [], "bug_id": 47245, "attachment_id": null, "count": 14, "id": 177247, "time": "2014-08-18T13:39:15Z", "creator": "deepeshdrk@gmail.com", "creation_time": "2014-08-18T13:39:15Z", "is_private": false}, {"count": 15, "tags": [], "bug_id": 47245, "attachment_id": null, "text": "Sorry for the similar comment twice.\n\nThanks and Regards,\nDeepesh Ramrakhyani.", "id": 177248, "time": "2014-08-18T13:42:49Z", "creator": "deepeshdrk@gmail.com", "creation_time": "2014-08-18T13:42:49Z", "is_private": false}, {"text": "First comment i.e. Comment 13 is incomplete Please consider Comment no 14.\nSorry again.", "tags": [], "bug_id": 47245, "is_private": false, "count": 16, "id": 177249, "time": "2014-08-18T13:46:19Z", "creator": "deepeshdrk@gmail.com", "creation_time": "2014-08-18T13:46:19Z", "attachment_id": null}, {"count": 17, "tags": [], "creator": "pedro.t.garcia@gmail.com", "attachment_id": null, "id": 177250, "time": "2014-08-18T14:09:30Z", "bug_id": 47245, "creation_time": "2014-08-18T14:09:30Z", "is_private": false, "text": "Well, I stated my opinion before (comment 5). If no RowRecords are present, POI creates them, but if some are present and some not, then this exception says it won't do it. I can't see the logic behind this. So, to me, it looks like the best solution is to comment out that exception.\n\nOn the other hand, since I've been trying to find out what is wrong with those files, I've noticed some problems with the row number and the row index.\n\nYou are right. Adding -1 is wrong.\nBut the file has 149 RowRecords (from 0 to 148). They are stored in a TreeMap with a 0-based KeySet. When I debug it it has the following KeySet [0 ... 148].\nSome keys may be missing if a row is empty. But, please note that there is no row 149, which is the one this cell belongs to:\n[LABELSST]\n    .row    = 0x0095\n    .col    = 0x0002\n    .xfindex= 0x0045\n  .sstIndex = 0x0053\n[/LABELSST]\n\nAgain, I think this is a problem with the file and somewhat unrelated to the bug. The real question is what to do when a row records is missing? If no row records exists it's ok, POI creates them. But if there are some row records but not all of them, then it's a problem. Is it really a problem?\nI think POI can create the missing row records and carry on, but I would like it if someone with more knowledge would comment on this."}, {"count": 18, "text": "The excel file on BFFValidation gives positive result so the file is proper hence according to me the fix is correct.\n\nAnd I don't think that if a file has some row records but not all then it should be a problem.\n\nThanks and Regards,\nDeepesh Ramrakhyani.", "bug_id": 47245, "attachment_id": null, "id": 177251, "time": "2014-08-18T14:35:53Z", "creator": "deepeshdrk@gmail.com", "creation_time": "2014-08-18T14:35:53Z", "tags": [], "is_private": false}, {"count": 19, "tags": [], "bug_id": 47245, "is_private": false, "text": "*** Bug 54392 has been marked as a duplicate of this bug. ***", "id": 188711, "time": "2016-02-23T13:36:07Z", "creator": "dominik.stadler@gmx.at", "creation_time": "2016-02-23T13:36:07Z", "attachment_id": null}, {"count": 20, "text": "The bug 41187 was what led to the modification being discussed here.\nThe patch can be seen here: https://svn.apache.org/viewvc/poi/trunk/src/java/org/apache/poi/hssf/usermodel/HSSFSheet.java?r1=655278&r2=655277&pathrev=655278\n\nIt's nice, and it's working. Except for the fact it throws an exception when everything suggest that it shouldn't.\n\nThe problem appears when there is one or more RowRecords [ROW] but then there are also one or more cells for a row which has not been defined/declared.\nFor instance, in the document attached there is a single row record:\n[ROW]\n    .rownumber      = 3\n    .firstcol       = 0x0000\n    .lastcol        = 0x0000\n    .height         = 0x0960\n    .optimize       = 0x0000\n    .reserved       = 0x0000\n    .optionflags    = 0x0140\n        .outlinelvl = 0\n        .colapsed   = false\n        .zeroheight = false\n        .badfontheig= true\n        .formatted  = false\n    .optionsflags2  = 0x000F\n        .xfindex       = f\n        .topBorder     = false\n        .bottomBorder  = false\n        .phoeneticGuide= false\n[/ROW]\n\nAnd then there are several LABELSST records for different rows without a corresponding row record.\n\n[LABELSST]\n    .row    = 0x0000\n    .col    = 0x0000\n    .xfindex= 0x0016\n  .sstIndex = 0x0000\n[/LABELSST]\n\n[LABELSST]\n    .row    = 0x0001\n    .col    = 0x0000\n    .xfindex= 0x0016\n  .sstIndex = 0x0001\n[/LABELSST]\n\n\nEvery comment in this bug and duplicates say that removing the line throwing the exception fixes the problem with no side effects.\n\nI really can't see a reason to keep that exception.\nMaybe Josh Micich could shed some light on this issue. I don't know if he is still involved in the project, though.", "bug_id": 47245, "is_private": false, "id": 188724, "time": "2016-02-23T17:18:35Z", "creator": "pedro.t.garcia@gmail.com", "creation_time": "2016-02-23T17:18:35Z", "tags": [], "attachment_id": null}, {"count": 21, "text": "The problem still persists in 3.14-beta1", "bug_id": 47245, "attachment_id": null, "id": 188725, "time": "2016-02-23T17:20:45Z", "creator": "pedro.t.garcia@gmail.com", "creation_time": "2016-02-23T17:20:45Z", "tags": [], "is_private": false}, {"count": 22, "tags": [], "bug_id": 47245, "is_private": false, "text": "I made a mistake yesterday, sorry.\n\nThe attachment I was referring to in comment #20 is the file from bug 54392, not the one attached here.\nThat file contains only one [ROW] record but there are several [LABELSST] records with a different row number.\n\nThe file I attached in this bug some years ago is a bit different. There is only one error in the first sheet. It contains 149 [ROW] records, but there is a [LABELSST] record for the 150th row.\nAs mentioned in the code if there is at least one [ROW] record, all of them should be present too, otherwise it throws an exception. This is what we are challenging here, and I say that there is no need for that exception.\nWhen that throw is removed, the code goes on to create a RowRecord for the 'orphan' cell and everything works perfectly.\n\nIn fact, if you open the file with LibreOffice (haven't had a chance to try it in Excel) it shows 150 rows, and I have been working with that line commented out for some years now and haven't seen a single error caused by that change.\n\nI keep patching HSSFSheet for every release, but I would like to stop already.\nIs there anything I can do to get this fixed?", "id": 188755, "time": "2016-02-24T10:10:55Z", "creator": "pedro.t.garcia@gmail.com", "creation_time": "2016-02-24T10:10:55Z", "attachment_id": null}, {"count": 23, "tags": [], "bug_id": 47245, "attachment_id": null, "id": 188789, "time": "2016-02-24T22:40:09Z", "creator": "dominik.stadler@gmx.at", "creation_time": "2016-02-24T22:40:09Z", "is_private": false, "text": "Thanks for the thorough review of the problem, I have now commented out the exception and verified that our full test-suite still runs fine, so I think it is ok to change this as it makes POI behave more like LibreOffice/Excel do.\n\nSo this is applied as r1732235 now."}]