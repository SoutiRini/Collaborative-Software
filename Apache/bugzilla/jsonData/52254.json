[{"count": 0, "tags": [], "creator": "princesewani@ymail.com", "text": "Hi,\n\n\nI've a weird problem, I'm using org.apache.fop.svg.PDFTranscoder to generate a\n\nPDf from an SVG document in xml format, the problem that I'm facing is despite of defining 'pdf-renderer-cfg.xml' in the specified format and configuring the PDFTranscoder with it, PDFTranscoder is not embedding the font into the PDF. In the 'embed-url' I've given actual path to the true type font.\n\n\nThe contents of 'pdf-renderer-cfg.xml' are :\n\n\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<pdf-renderer>\n  <fonts>\n         <font metrics-url=\"/home/prince/appDir/webapp/lib/Fonts/cursive-standard.xml\" kerning=\"no\" embed-url=\"/home/prince/appDir/webapp/lib/Fonts/Cursive-standard.ttf\">\n          <font-triplet name=\"Cursive\" style=\"normal\" weight=\"normal\"/>\n        </font>\n  </fonts>\n</pdf-renderer>\n\n\nand to configure the PDF transcoder I've extended org.apache.batik.apps.rasterizer.SVGConverter\n\n\nand overridden 'execute' method as :\n\n\n   public void execute() throws SVGConverterException {\n        // Compute the set of SVGConverterSource from the source properties\n        // (srcDir and srcFile);\n        // This throws an exception if there is not at least one src file.\n        Vector sources =  computeSources();\n\n        // Compute the destination files from dest\n        Vector dstFiles = null;\n        if(sources.size() == 1 && dst != null && isFile(dst)){\n            dstFiles = new Vector();\n            dstFiles.addElement(dst);\n        }\n        else{\n            dstFiles =  computeDstFiles(sources);\n        }\n       \n        //Getting the path of the FOP config file\n        String fopPath = UtilProperties.getPropertyValue(\"fop.properties\", \"fop.path\", \"webapp/lib/Fonts\");\n        File userConfigFile = new File(fopPath + \"/pdf-renderer-cfg.xml\");       \n       \n        //Build the configuration\n        cfgBuilder = new DefaultConfigurationBuilder();       \n        try {\n            cfg = cfgBuilder.buildFromFile(userConfigFile);\n        } catch (ConfigurationException e) {\n            // TODO Auto-generated catch block\n            e.printStackTrace();\n        } catch (SAXException e) {\n            // TODO Auto-generated catch block\n            e.printStackTrace();\n        } catch (IOException e) {\n            // TODO Auto-generated catch block\n            e.printStackTrace();\n        }\n       \n        //Get the PDF Transcoder object\n        pdfTranscoder = new PDFTranscoder();\n       \n        //Configure the transcoder\n        try {\n            pdfTranscoder.configure(cfg);\n        } catch (ConfigurationException e) {\n            // TODO Auto-generated catch block\n            e.printStackTrace();\n        }\n       \n        // Now, get the transcoder to use for the operation       \n        Transcoder transcoder = (Transcoder) pdfTranscoder;\n        if(transcoder == null) {\n            throw new SVGConverterException(ERROR_CANNOT_ACCESS_TRANSCODER,\n                                             new Object[]{destinationType.toString()},\n                                             true /* fatal error */);\n        }\n\n        // Now, compute the set of transcoding hints to use\n        Map hints = computeTranscodingHints();\n        transcoder.setTranscodingHints(hints);\n\n        // Notify listener that task has been computed\n        if(!controller.proceedWithComputedTask(transcoder,\n                                               hints,\n                                               sources,\n                                               dstFiles)){\n            return;\n        }\n\n        // Convert files one by one\n        for(int i = 0 ; i < sources.size() ; i++) {\n            // Get the file from the vector.\n            SVGConverterSource currentFile\n                = (SVGConverterSource)sources.elementAt(i);\n            File outputFile  = (File)dstFiles.elementAt(i);\n\n            createOutputDir(outputFile);\n            transcode(currentFile, outputFile, transcoder);\n        }\n    }\n   \n}\n\n\nand the content of the svg file is  :\n\n\n<svg width=\"432\" height=\"288\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n <!-- Created with SVG-edit - http://svg-edit.googlecode.com/ -->\n <g>\n  <title>Layer 1</title>\n  <image transform=\"rotate(14.4551, 388.899, 199.566)\" xlink:href=\"http://localhost:8080/app/control/app/flex/svgdol/1321955504845/20111123141633795.jpg\" id=\"svg_2\" height=\"362.33104\" width=\"308.62977\" y=\"18.40178\" x=\"234.58535\"/>\n  <image transform=\"rotate(-13.6166, 149.053, 95.3409)\" xlink:href=\"http://localhost:8080/app/control/app/flex/svgdol/1321955504845/20111123141524886.jpg\" id=\"svg_1\" height=\"246.3374\" width=\"314.99999\" y=\"-27.82715\" x=\"-8.44604\"/>\n  <text transform=\"matrix(1, 0, 0, 1.20588, 0, -25.8382)\" xml:space=\"preserve\" text-anchor=\"middle\" font-family=\"Cursive\" font-size=\"24\" id=\"svg_3\" y=\"155.817\" x=\"265\" stroke-width=\"0\" stroke=\"#000000\" fill=\"#000000\">All Mine....!!!!</text>\n </g>\n</svg>\n\n\nbut even after this the PDFTransocder 's output , i.e. the PDF doesn't contain the text in proper font, I tried to install the font on my O.S. as well,\n\nbut that too didn't work.\n\n\nI'm using batik-all-1.6.jar ,Java version is 1.6 and O.S. is Linux(Ubuntu).\n\nAny guidance /pointers will of extreme help as I've been debugging the library at runtime since last couple of days and haven't been able to find the cause.\n\n\nRegards\nPrince", "id": 151826, "time": "2011-11-28T09:20:53Z", "bug_id": 52254, "creation_time": "2011-11-28T09:20:53Z", "is_private": false, "attachment_id": null}]