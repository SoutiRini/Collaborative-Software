[{"count": 0, "tags": [], "creator": "glenn@apache.org", "text": "Platform Sun E450 Dual CPU running Solaris 7 with Apache 2.0.47 and\nthe worker MPM.\n\nHere is a backtrace for a core dump when performing idle server maintenance.\n\nt@1 (l@1) terminated by signal SEGV (Segmentation Fault)\nCurrent function is child_main\n 1308               rv = ap_mpm_pod_check(pod);\n(/opt/SUNWspro/bin/dbx) where                                                \ncurrent thread: t@1\n  [1] _read(0x4, 0xffbef4eb, 0x1, 0xfee5ca0c, 0x0, 0xd90b4), at 0xfef171d4\n  [2] read(0x18a780, 0x6bb00, 0x6c868, 0x152b58, 0x152ad0, 0x1b1e3d), at 0xfee4ac04\n=>[3] child_main(child_num_arg = 1), line 1308 in \"worker.c\"\n  [4] make_child(s = 0xe32d8, slot = 1), line 1391 in \"worker.c\"\n  [5] perform_idle_server_maintenance(), line 1552 in \"worker.c\"\n  [6] server_main_loop(remaining_children_to_start = 0), line 1645 in \"worker.c\"\n  [7] ap_mpm_run(_pconf = 0xe0a90, plog = 0x118b70, s = 0xe32d8), line 1743 in\n\"worker.c\"\n  [8] main(argc = 6, argv = 0xffbef914), line 660 in \"main.c\"", "id": 42158, "time": "2003-08-05T13:47:58Z", "bug_id": 22137, "creation_time": "2003-08-05T13:47:58Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "creator": "trawick@apache.org", "is_private": false, "text": "The portion of the backtrace showing idle server maintenance ran in the parent\nprocess prior to fork()-ing this child.\n\nThis backtrace is from the child.  The backtrace is for the main thread of the\nchild, which sits in read() until the parent tells it to go away.\n\nEither we don't have the backtrace for the thread that segfaulted (> 99.99%\nchance) or Solaris read() is broken.  read() is responsible for returning EFAULT\nif passed an invalid buffer, so this backtrace isn't consistent with any likely\nsegfault.\n\nSee what other backtraces are in the coredump.  Also, the Solaris pflags program\noften identifies the thread that segfaulted.\n", "id": 42161, "time": "2003-08-05T14:18:39Z", "bug_id": 22137, "creation_time": "2003-08-05T14:18:39Z", "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 22137, "is_private": false, "count": 2, "id": 42327, "time": "2003-08-07T13:51:50Z", "creator": "glenn@apache.org", "creation_time": "2003-08-07T13:51:50Z", "text": "I checked pflags and it can only act upon running processes.\nHere is the status of all the threads for the child which died.\nMy reading of this shows that the SEGV occurred in thread 1.\n\nt@1 (l@1) terminated by signal SEGV (Segmentation Fault)\nCurrent function is child_main\n 1308               rv = ap_mpm_pod_check(pod);\n(/opt/SUNWspro/bin/dbx) threads                                              \no>    t@1  a l@1  ?()   signal SIGSEGV  in _read()\n      t@2  b l@2  ?()   LWP suspended   in __signotifywait()\n      t@3         ?()   sleep on (unknown)      in _reap_wait()\n      t@5         dummy_worker()        sleep on 0x152bf8       in\n_cond_wait_cancel()\n      t@6         dummy_worker()        sleep on 0x152bf8       in\n_cond_wait_cancel()\n      t@7  a l@5  dummy_worker()        sleep on 0x152bf8       in __lwp_sema_wait()\n      t@8  a l@8  dummy_worker()        sleep on 0x152bf8       in __lwp_sema_wait()\n      t@9         dummy_worker()        sleep on 0x152bf8       in\n_cond_wait_cancel()\n     t@10         dummy_worker()        sleep on 0x152bf8       in\n_cond_wait_cancel()\n     t@11         dummy_worker()        sleep on 0x152bf8       in\n_cond_wait_cancel()\n     t@12  a l@7  dummy_worker()        sleep on 0x152bf8       in __lwp_sema_wait()\n     t@13  a l@4  dummy_worker()        LWP suspended   in ?()\n     t@14         dummy_worker()        sleep on 0x152bf8       in\n_cond_wait_cancel()\n     t@15         dummy_worker()        sleep on 0x152bf8       in\n_cond_wait_cancel()\n     t@16         dummy_worker()        sleep on 0x152bf8       in\n_cond_wait_cancel()\n     t@17  a l@9  dummy_worker()        LWP suspended   in _poll()\n     t@18         dummy_worker()        sleep on 0x152bf8       in\n_cond_wait_cancel()\n     t@19         dummy_worker()        sleep on 0x152bf8       in\n_cond_wait_cancel()\n     t@20         dummy_worker()        sleep on 0x152bf8       in\n_cond_wait_cancel()\n     t@21  a l@11 dummy_worker()        sleep on 0x152bf8       in __lwp_sema_wait()\n     t@22         dummy_worker()        sleep on 0x152bf8       in\n_cond_wait_cancel()\n     t@23         dummy_worker()        sleep on 0x152bf8       in\n_cond_wait_cancel()\n     t@24  a l@6  dummy_worker()        sleep on 0x152bf8       in __lwp_sema_wait()\n     t@25         dummy_worker()        sleep on 0x152bf8       in\n_cond_wait_cancel()\n     t@26         dummy_worker()        sleep on 0x152bf8       in\n_cond_wait_cancel()\n     t@27         dummy_worker()        sleep on 0x152bf8       in\n_cond_wait_cancel()\n     t@28         dummy_worker()        sleep on 0x152bf8       in\n_cond_wait_cancel()\n     t@29  a l@10 dummy_worker()        sleep on 0x152bf8       in __lwp_sema_wait()"}, {"attachment_id": null, "tags": [], "bug_id": 22137, "is_private": false, "count": 3, "id": 70844, "time": "2005-02-11T17:00:20Z", "creator": "jorton@redhat.com", "creation_time": "2005-02-11T17:00:20Z", "text": "-> closing old bug lacking useful backtrace.\n\nReproduce with 2.0.53 and use \"thread apply backtrace full\" in gdb to get a\nmeaningful backtrace from a coredump of a threaded process. (I don't know the\ndbx equivalent, sorry)\n"}]