[{"count": 0, "tags": [], "creator": "sterno@bigbrother.net", "attachment_id": null, "id": 37204, "time": "2003-05-14T15:25:20Z", "bug_id": 19922, "creation_time": "2003-05-14T15:25:20Z", "is_private": false, "text": "I discovered a problem with Tomcat's extraction of war files.  Let's say that I\nhave a war file representing version 1.0 of an application.  I proceed to\nrelease where I've updated the library \"library-1.1.jar\" in the WEB-INF/lib\ndirectory that supercedes \"library-1.0.jar\" (which is no longer in the war file).  \n\nIf you replace that war file and then restart tomcat to get it to recognize the\nnew war, it will extract the war file as expected but there's a problem.  When I\nlook in the work directory I see both versions of the library despite only\nhaving one version of the library in my war file.  The worst part is that\nbecause it's in alphabetical order in the class path, the old library will take\nprecedent. \n\nThis may behave differently if you use autodeployment, I haven't tested that,\nbut in my case I am using the library as the root context and I've deployed it\nto an arbitrary location on the server."}, {"attachment_id": null, "tags": [], "creator": "remm@apache.org", "text": "I recommend you verify on the code, and double check the bahavior you see. Did\nyou actually verify that the old JAR was being used, or are you just speculating ?\nAlthough the old version remains, the classloader directly references the JARs\nwhich are being used (it's not *.jar), so there's no reason for your old JAR to\nget used.", "count": 1, "id": 37210, "time": "2003-05-14T15:54:07Z", "bug_id": 19922, "creation_time": "2003-05-14T15:54:07Z", "is_private": false}, {"count": 2, "text": "Okay, I thought it was just including all JAR's.  Nevermind.", "bug_id": 19922, "is_private": false, "id": 37216, "time": "2003-05-14T16:55:52Z", "creator": "sterno@bigbrother.net", "creation_time": "2003-05-14T16:55:52Z", "tags": [], "attachment_id": null}]