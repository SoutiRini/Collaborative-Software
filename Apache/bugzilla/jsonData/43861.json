[{"count": 0, "tags": [], "text": "If you restore a subtree from archive, you can create a \"ghost\" node. Steps to\nreproduce:\n- build clean / build\n- import example content\n- go to site tab\n- select subtree \"Tutorials\"\n- create a new document called \"World\" with file / new xhtml document\n- copy subtree \"Resource type examples\"\n- select subtree \"World\"\n- paste subtree \"Resource type examples\"\n- archive subtree \"Resource type examples\"\n- delete subtree \"World\" with edit / delete\n- go to archive, select subtree \"Resource type examples\" and restore it\n- you get a \"ghost\" entry between \"Tutorials\" and \"Resource type examples\"\n  called \"World\" that is greyed out and thus can't be selected / modified", "attachment_id": null, "bug_id": 43861, "id": 110544, "time": "2007-11-14T13:18:40Z", "creator": "mangst@inventec.ch", "creation_time": "2007-11-14T13:18:40Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 43861, "is_private": false, "text": "What should we do about this?\n\na) don't allow to restore if parent doesn't exist\nb) allow to manipulate (delete) \"ghost\" nodes\nc) ... ?", "id": 110597, "time": "2007-11-15T07:29:12Z", "creator": "andreas@apache.org", "creation_time": "2007-11-15T07:29:12Z", "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 43861, "is_private": false, "text": "> What should we do about this?\n> \n> a) don't allow to restore if parent doesn't exist\n\nYes, and show a message like \"The node or subtree cannot be restored to its\noriginal position. Use cut and paste instead to move the node out of the archve\nto the desired position.\" or something like that.\n\n> b) allow to manipulate (delete) \"ghost\" nodes\n\nI think this should only be done if it is necessary for other situations, too.\n\n> c) ... ?\n\nAutomatically skip dead nodes while restoring. This will most probably lead to\nunexpected/unwanted results (like name conflicts).", "id": 110599, "time": "2007-11-15T07:50:58Z", "creator": "mangst@inventec.ch", "creation_time": "2007-11-15T07:50:58Z", "attachment_id": null}, {"count": 3, "tags": [], "creator": "andreas@apache.org", "attachment_id": null, "is_private": false, "id": 110600, "time": "2007-11-15T07:57:53Z", "bug_id": 43861, "creation_time": "2007-11-15T07:57:53Z", "text": "(In reply to comment #2)\n> > What should we do about this?\n> > \n> > a) don't allow to restore if parent doesn't exist\n> \n> Yes, and show a message like \"The node or subtree cannot be restored to its\n> original position. Use cut and paste instead to move the node out of the archve\n> to the desired position.\" or something like that.\n\nOK, whereas we have to be careful with cut&paste because of the workflow.\n\n"}, {"count": 4, "tags": [], "text": "> OK, whereas we have to be careful with cut&paste because of the workflow.\n\nDoes a restore atm work different from cut&paste concerning workflow?\n\n", "is_private": false, "bug_id": 43861, "id": 110602, "time": "2007-11-15T09:03:25Z", "creator": "mangst@inventec.ch", "creation_time": "2007-11-15T09:03:25Z", "attachment_id": null}, {"count": 5, "text": "(In reply to comment #4)\n> > OK, whereas we have to be careful with cut&paste because of the workflow.\n> \n> Does a restore atm work different from cut&paste concerning workflow?\n\nAFAIK the workflow is not triggered with cut&paste. This operation should\nactually not be allowed, if it is, it's certainly a bug.", "bug_id": 43861, "attachment_id": null, "id": 110603, "time": "2007-11-15T09:24:50Z", "creator": "andreas@apache.org", "creation_time": "2007-11-15T09:24:50Z", "tags": [], "is_private": false}, {"count": 6, "tags": [], "creator": "mangst@inventec.ch", "attachment_id": null, "id": 110611, "time": "2007-11-15T12:14:35Z", "bug_id": 43861, "creation_time": "2007-11-15T12:14:35Z", "is_private": false, "text": "> AFAIK the workflow is not triggered with cut&paste. This operation should\n> actually not be allowed, if it is, it's certainly a bug.\n\nYou are right. Cut & paste out of the archive does not work. Well, cutting out\nof the archive *seems* to work (menu entry black and no error message after\ncut), but pasting does not (menu entry black, but error message after paste: \"An\nerror occured. Please contact your system administrator.\"). Hmm.\n\nMaybe we could allow deleting ghost nodes in the archive? :-\\ How do other CMS\nhandle this? Maybe ghost nodes should be reanimated on restore?"}, {"count": 7, "tags": [], "text": "(In reply to comment #6)\n> > AFAIK the workflow is not triggered with cut&paste. This operation should\n> > actually not be allowed, if it is, it's certainly a bug.\n> \n> You are right. Cut & paste out of the archive does not work. Well, cutting out\n> of the archive *seems* to work (menu entry black and no error message after\n> cut)\n\nCut/copy from any area but authoring is now disabled.", "attachment_id": null, "bug_id": 43861, "id": 110713, "time": "2007-11-19T04:43:32Z", "creator": "andreas@apache.org", "creation_time": "2007-11-19T04:43:32Z", "is_private": false}, {"count": 8, "tags": [], "creator": "rfrovarp@apache.org", "attachment_id": null, "id": 111165, "time": "2007-11-27T13:14:30Z", "bug_id": 43861, "creation_time": "2007-11-27T13:14:30Z", "is_private": false, "text": "(In reply to comment #1)\n> What should we do about this?\n> \n> a) don't allow to restore if parent doesn't exist\n\nI would do this. I've done some testing and since the parent is determined by\npath instead of UUID, a new parent can be created and restored content will go\nback under it. "}, {"count": 9, "tags": [], "creator": "rfrovarp@apache.org", "attachment_id": null, "id": 111171, "time": "2007-11-27T14:32:37Z", "bug_id": 43861, "creation_time": "2007-11-27T14:32:37Z", "is_private": false, "text": "(In reply to comment #8)\n> (In reply to comment #1)\n> > What should we do about this?\n> > \n> > a) don't allow to restore if parent doesn't exist\n> \n> I would do this. I've done some testing and since the parent is determined by\n> path instead of UUID, a new parent can be created and restored content will go\n> back under it. \n\nThis is what I've done. It's in r598789. Users can now no longer restore if\nghost nodes will be created. User must recreate the parent nodes, then they can\nrestore. \n\nI'm not saying this should be the final solution, but I do think it allows us to\ndefer the issue until 2.0.1."}]