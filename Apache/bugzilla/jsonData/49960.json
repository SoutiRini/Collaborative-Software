[{"count": 0, "tags": [], "creator": "nigelw@forwardcomputers.co.uk", "text": "This probably affects all versions, not just 5.5.23.\n\nIt comes down to the utility class org.apache.tomcat.util.http.ContentType\n\nIt has the code:\n\n    // Basically return everything after \";charset=\"\n    // If no charset specified, use the HTTP default (ASCII) character set.\n    public static String getCharsetFromContentType(String type) {\n\nWhich is basically lazy. It can't use everything after \";charset=\". It *must* parse it and see if there is another \";\"\n\nBecause if someone sets the Content-Disposition header in an XHR, it might BY NO FAULT OF THAT DEVELOPER end up as\n\nContent-Type: multipart/form-data; charset=UTF-8; boundary=--------------------ext-ux-upload-boundary\n\nThat's taken directly from the Fiddler debugging tool. The browser (Firefox) INSERTED its encoding name (UTF-8 is mandated for XHRs) within the header which I specified. It did not append it, it INSERTED it.\n\nNow, the character set ends up as \"UTF-8; boundary=--------------------ext-ux-upload-boundary\"", "id": 139969, "time": "2010-09-20T06:07:58Z", "bug_id": 49960, "creation_time": "2010-09-20T06:07:58Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 49960, "text": "This was fixed in #42119 (in 2007) - updating to a recent 5.5.x (or preferrably to a 6.0.x) will resolve the issue.\n\n*** This bug has been marked as a duplicate of bug 42119 ***", "id": 140044, "time": "2010-09-22T05:00:53Z", "creator": "timw@apache.org", "creation_time": "2010-09-22T05:00:53Z", "is_private": false, "attachment_id": null}]