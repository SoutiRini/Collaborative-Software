[{"count": 0, "tags": [], "creator": "cm@cmunt.demon.co.uk", "attachment_id": null, "id": 22409, "time": "2002-09-07T13:23:26Z", "bug_id": 12388, "creation_time": "2002-09-07T13:23:26Z", "is_private": false, "text": "Hi,\n\nThis is not, strictly speaking, a bug but is, nevertheless, an issue that is \nquite a headache for vendors of pre-built modules for the Apache server.\n\nI work with a database vendor - InterSystems, the authors of the Cach\u00e9 database \nand programming environment.  We offer two connectivity solutions for Apache \nusers - CGI-based and module-based.  The later is distributed as UNIX shared \nobjects and Windows DLLs.  The module-based solution working to the Apache API \nis obviously superior to the CGI- based solution in that it offers better \nperformance.  However, because of the number of major revisions of the API (as \ndefined by 'MODULE_MAGIC_NUMBER_MAJOR' in ap_mmn.h) we're finding it difficult \nto support this option.  We can accept and cope with having to release new\nbinaries for major version upgrades (e.g. Apache 1.3 to 2.0), but it's hard to \nkeep up with incompatibilities that arise between different releases of v2.0.  \nI'm sure this issue must be a problem for others too.\n\nWould it be possible to build-in enough redundancy and further abstract the API \nsuch that it can be enhanced without disturbing the core functionality ?  \nObviously if one makes use of an API feature in a given release that isn't \navailable for previous builds of Apache then an incompatibility will be the \nresult, but it would be great if the basics remained compatible between upgrades \n- in much the same way as happens with the ISAPI and NSAPI interfaces.\n\nAnyway, thanks for reading this.\n\nRegards,\n\nChris."}, {"count": 1, "tags": [], "text": "See Bill's comments in bug 11778 -- it is a tradeoff.\n\nNote that most times the MMN changes, it simply means a recompile.  You rarely\nneed to actually change the code of your module.   The developers are trying\nto stabalize the 2.0 API, but they will not do so at the expense of important\nfeatures of fixes.\n\n*** This bug has been marked as a duplicate of 11778 ***", "attachment_id": null, "id": 22423, "creator": "slive@apache.org", "time": "2002-09-07T18:27:29Z", "bug_id": 12388, "creation_time": "2002-09-07T18:27:29Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 12388, "attachment_id": null, "id": 22429, "time": "2002-09-07T20:25:08Z", "creator": "cm@cmunt.demon.co.uk", "creation_time": "2002-09-07T20:25:08Z", "is_private": false, "text": "Thanks for the response, but I believe the point I was making has been missed.\n\nI am aware that 'only a recompile' of modules is necessary between builds of \nApache.  In fact, our code has remained unchanged for every single release of \nApache v2.  I believe the issue that needs to be addressed is that commercial \nvendors of modules do not want to have to ship several different versions of the \nbinaries for different builds of Apache - it just creates a support and \nmaintenance headache.  Just one module binary per major upgrade (e.g. Apache \nv1.3 to 2.0) would be good.  Also, for many commercial vendors, simply sending \nthe source code to the end users is not an option.  Certainly, our customers \nwould not want the responsibility for building, what is after all, a pivotal \npiece of connectivity software on site.\n\nI understand that the Developers of Apache want to push forward with new \nfeatures, but I believe that a lack of regard for backwards compatibility \nbecomes counter-productive in the end.  It simply becomes too much hassle for a \ncompany to upgrade Apache and its associated software. \n\nI believe there is a place for an API like ISAPI or NSAPI where, providing one \nsticks to the original core functionality, the binary incompatibilities are few \nand far between.\n"}, {"count": 3, "text": "The issues are well understood.\n\nWhat you want is a simpler API that is not as tightly tied to the apache\ninternals (and therefore not as fast and powerful).  It certainly should be\npossible to create a module that implements\nsuch a thing.  It just hasn't been a priority of the apache developers.\nAny contribution you want to make would be considered.  The best place to\ndiscuss such a thing is the dev@httpd.apache.org mailing list.\n\nThe existing developers have not seen a backward-compatible binary API as\na high priority.  But it is an open development process, so please feel\nfree to contribute.", "bug_id": 12388, "attachment_id": null, "id": 22430, "time": "2002-09-07T21:16:40Z", "creator": "slive@apache.org", "creation_time": "2002-09-07T21:16:40Z", "tags": [], "is_private": false}]