[{"count": 0, "tags": [], "creator": "apaku@gmx.de", "attachment_id": null, "text": "Hi,\n\nI didn't get any responses at the dev mailinglist so I'm filing this as bug:\n\nafter a long journey and with the help of a kind soul I found that apr.h\ncontains an error which makes apr unusable with mingw. The problem is\nline #59 in apr.h.in, that line redefines __attribute__(__x) to nothing,\nhowever mingw uses __attribute__(__stdcall) when declaring a function\nwith __stdcall. This creates a problem when trying to link with the apr\nlibrary, because the import library contains the wrong symbols, in\nparticular it has _apr_foo and __im__?apr_foo@@...\n\nRemoving that define one can create a proper import library for apr from\nthe MSVC dll and the .def file by following the instructions found on\nhttp://www.mingw.org/MinGWiki/index.php/MSVC-MinGW-DLL\n\nI don't understand why apr redefines a compiler-internal symbol like \n__attribute__.", "id": 103805, "time": "2007-05-30T02:39:08Z", "bug_id": 42545, "creation_time": "2007-05-30T02:39:08Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 42545, "text": "It is redefined because it does conflict on some compilers.\n\nHowever, it's a double-edged issue.  1 - we can remove it contingent on the\ncompiler being GCC.  That's cool.\n\n2 - if the syntax in gcc is __attribute__(__stdcall), then we really should\nlook at making gcc-specific DECLARE_* family macros using __attribute__ rather\nthan __declspec, unless you know gcc is happy with both?", "id": 103828, "time": "2007-05-30T12:25:53Z", "creator": "wrowe@apache.org", "creation_time": "2007-05-30T12:25:53Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 42545, "attachment_id": null, "id": 103830, "creation_time": "2007-05-30T12:38:11Z", "time": "2007-05-30T12:38:11Z", "creator": "apaku@gmx.de", "text": "I'm not that familiar with internals of gcc/mingw, but I do know that it \nsupports __stdcall. However AFAIK it internally makes __attribute__(__stdcall) \nfrom that and seemingly at a place that is affected by redefinition.\n\nSo in short 1) sounds good and 2) is not necessary, the whole of KDE uses \n__declspec and as I said just removing the redefinition of __attribute__ makes \n__stdcall also work properly.", "is_private": false}, {"count": 3, "tags": [], "bug_id": 42545, "attachment_id": null, "id": 103866, "time": "2007-05-31T02:58:13Z", "creator": "jorton@redhat.com", "creation_time": "2007-05-31T02:58:13Z", "is_private": false, "text": "The section in apr.h which undefines __attribute__ is only supposed to take\neffect for non-GCC, pre-GCC 2.7 compilers.  Isn't that working?  It's all for\nNeXT systems which APR probably doesn't really work on anyway, so it could just\nas well be nuked for the time being.\n\nOr is it really the arch/win32/apr_private.h #define-to-nothing of __attribute__\nwhich is the problem? "}, {"count": 4, "tags": [], "bug_id": 42545, "attachment_id": null, "text": "Joe - it was apr.hw that initially defined it.  The apr_private.h was actually\nredundant - apr.h was included first, AFAICT.\n", "id": 103894, "time": "2007-05-31T12:13:14Z", "creator": "wrowe@apache.org", "creation_time": "2007-05-31T12:13:14Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 42545, "text": "Fix committed, thanks for the report", "id": 103898, "time": "2007-05-31T14:39:50Z", "creator": "wrowe@apache.org", "creation_time": "2007-05-31T14:39:50Z", "is_private": false, "attachment_id": null}, {"count": 6, "tags": [], "creator": "apaku@gmx.de", "text": "Thanks, which would be the next release that includes this fix?", "id": 103900, "time": "2007-05-31T14:49:57Z", "bug_id": 42545, "creation_time": "2007-05-31T14:49:57Z", "is_private": false, "attachment_id": null}, {"count": 7, "tags": [], "bug_id": 42545, "attachment_id": null, "text": "The 0.9 and 1.2 releases I'm rolling today, but there is no need to wait - and\nif you can help on this,\n\nhttp://svn.apache.org/viewvc?view=rev&rev=543219\n\nis the patch you can apply and confirm that all is now well.  Sooner the better,\nsince I'll be rolling within an hour or few.", "id": 103901, "time": "2007-05-31T14:52:36Z", "creator": "wrowe@apache.org", "creation_time": "2007-05-31T14:52:36Z", "is_private": false}, {"count": 8, "tags": [], "bug_id": 42545, "attachment_id": null, "text": "Wow, thats really great (I expected an answer like the next release after the \nupcoming ones) :)\n\nUnfortuantely I can't help you check that, because I'm still rebuilding kdelibs \nand I don't have a test program at hand (I didn't find this out myself and the \ndeveloper who does have the test program is not available atm). The rebuild \nwill run for another 2 hours or so and only after that I can check wether \nkdevelop which uses the apr libs builds.", "id": 103903, "time": "2007-05-31T15:12:18Z", "creator": "apaku@gmx.de", "creation_time": "2007-05-31T15:12:18Z", "is_private": false}, {"count": 9, "tags": [], "bug_id": 42545, "attachment_id": null, "text": "Ok, I tried and it works perfectly fine. I rebuilt only apr itself using MSVC \nand with the steps explained on the MinGW page I could produce an import \nlibrary for mingw and build my application :)\n\nThanks for the help on this.", "id": 104098, "time": "2007-06-05T13:49:30Z", "creator": "apaku@gmx.de", "creation_time": "2007-06-05T13:49:30Z", "is_private": false}]