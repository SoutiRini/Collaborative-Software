[{"count": 0, "attachment_id": null, "bug_id": 52850, "text": "Problem Description - \n----------------------\nTomcat memory leak detection has the following issues\n- Most of the detection and fixing code has been tested ONLY on Sun JVMs. A lot of  the reflection based code does not work with the IBM JDK. \n- Tests in tomcat7.source\\test\\org\\apache\\catalina\\loader do not seem to run successfully and are incomplete for all the protection that Tomcat provides for classloader memory leaks.\n- For some categories of threadlocal memory leaks the key and value are not displayed correctly in the warning messages; particularly ones dealing with indirect references to threadlocals\n-  org.apache.catalina.loader.WebappClassLoader.loadedByThisOrChild(Object) incorrectly traverses the object classloader hierarchy instead of the current (this) classloader hierarchy\n\nProblem Conclusion - \n--------------------\n- After extensive testing with the IBM JDKs, I have cleaned up and sanitized some of the reflection code to stop executors, timers, threads etc on the IBM JDK\n- Added new tests for detecting threadlocal leaks and thread leaks\n- Better ThreadLocal leak reporting with corrected loadedByThisOrChild method and addition of expungeStaleEntries method\n- Make code more resilient in certain leak detection scenarios.", "id": 154642, "time": "2012-03-07T14:57:15Z", "creator": "kelapure@gmail.com", "creation_time": "2012-03-07T14:57:15Z", "tags": [], "is_private": false}, {"count": 1, "tags": [], "creator": "kelapure@gmail.com", "attachment_id": 28433, "is_private": false, "id": 154643, "time": "2012-03-07T15:02:53Z", "bug_id": 52850, "creation_time": "2012-03-07T15:02:53Z", "text": "Created attachment 28433\nsrc code fixes to WebappClassLoader and new tests for memory leak detection\n\nmemory leak detection src code fixes to org.apache.catalina.loader.WebappClassLoader"}, {"count": 2, "tags": [], "bug_id": 52850, "text": "Created attachment 28434\nnew threadlocal and executor classloader leak detection tests\n\nnew tests for memory leak detection feature", "id": 154644, "time": "2012-03-07T15:03:37Z", "creator": "kelapure@gmail.com", "creation_time": "2012-03-07T15:03:37Z", "is_private": false, "attachment_id": 28434}, {"count": 3, "tags": [], "creator": "kelapure@gmail.com", "attachment_id": null, "is_private": false, "id": 154645, "time": "2012-03-07T15:05:11Z", "bug_id": 52850, "creation_time": "2012-03-07T15:05:11Z", "text": "Developers please code review and proceed with next steps  --Thanks, Rohit Kelapure"}, {"count": 4, "tags": [], "creator": "kelapure@gmail.com", "attachment_id": 28442, "is_private": false, "id": 154705, "time": "2012-03-08T18:19:21Z", "bug_id": 52850, "creation_time": "2012-03-08T18:19:21Z", "text": "Created attachment 28442\nreworked patch after making some modifications to loadedByThisOrChild"}, {"count": 5, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "is_private": false, "id": 154754, "time": "2012-03-09T15:29:13Z", "bug_id": 52850, "creation_time": "2012-03-09T15:29:13Z", "text": "(In reply to comment #0)\n> - Most of the detection and fixing code has been tested ONLY on Sun JVMs.\nCorrect.\n\n> - Tests in tomcat7.source\\test\\org\\apache\\catalina\\loader do not seem to run\n> successfully and are incomplete for all the protection that Tomcat provides for\n> classloader memory leaks.\nThe tests that are present do work. Yes, code coverage of the tests is a long way from 100%.\n\n> - For some categories of threadlocal memory leaks the key and value are not\n> displayed correctly in the warning messages; particularly ones dealing with\n> indirect references to threadlocals\nI don't see any changes to address this. Did I miss them?\n\n> -  org.apache.catalina.loader.WebappClassLoader.loadedByThisOrChild(Object)\n> incorrectly traverses the object classloader hierarchy instead of the current\n> (this) classloader hierarchy\nNo. The test is not \"loaded by this or parent\", it is \"loaded by this or child\" and is correct.\n\nI haven't looked at the tests yet. I'll commit the fixes (less the change to WebappClassLoader.loadedByThisOrChild(Object)) with the tests once I have reviewed the new tests."}, {"count": 6, "tags": [], "bug_id": 52850, "is_private": false, "text": "Fixed in trunk and 7.0.x and will be included in 7.0.27 onwards.\n\nMany thanks for the patch.", "id": 154762, "time": "2012-03-09T19:13:54Z", "creator": "markt@apache.org", "creation_time": "2012-03-09T19:13:54Z", "attachment_id": null}, {"count": 7, "tags": [], "creator": "kelapure@gmail.com", "attachment_id": null, "is_private": false, "id": 154771, "time": "2012-03-09T22:20:48Z", "bug_id": 52850, "creation_time": "2012-03-09T22:20:48Z", "text": "(In reply to comment #5)\n\nThanks for accepting the patch\n\n\"I don't see any changes to address this. Did I miss them?\"\nEnsure that key and value types ALWAYS show up for all types of threadlocal leaks (direct & indirect)\nMethod expungeStaleEntriesMethod = tlmClass.getDeclaredMethod(\"expungeStaleEntries\");\nexpungeStaleEntriesMethod.setAccessible(true);\n\n\nI had to change WebappClassLoader.loadedByThisOrChild(Object)) to get the Threadlocal leak test cases to pass.\n\nI will be grateful if you add a check in the tests that confirms that the leak warnings have showed up in the log. I did not add junit asserts for the presence of log warnings. \n\n--Thanks\n\n\n> (In reply to comment #0)\n> > - Most of the detection and fixing code has been tested ONLY on Sun JVMs.\n> Correct.\n> \n> > - Tests in tomcat7.source\\test\\org\\apache\\catalina\\loader do not seem to run\n> > successfully and are incomplete for all the protection that Tomcat provides for\n> > classloader memory leaks.\n> The tests that are present do work. Yes, code coverage of the tests is a long\n> way from 100%.\n> \n> > - For some categories of threadlocal memory leaks the key and value are not\n> > displayed correctly in the warning messages; particularly ones dealing with\n> > indirect references to threadlocals\n> I don't see any changes to address this. Did I miss them?\n> \n> > -  org.apache.catalina.loader.WebappClassLoader.loadedByThisOrChild(Object)\n> > incorrectly traverses the object classloader hierarchy instead of the current\n> > (this) classloader hierarchy\n> No. The test is not \"loaded by this or parent\", it is \"loaded by this or child\"\n> and is correct.\n> \n> I haven't looked at the tests yet. I'll commit the fixes (less the change to\n> WebappClassLoader.loadedByThisOrChild(Object)) with the tests once I have\n> reviewed the new tests.\n\n(In reply to comment #5)\n> (In reply to comment #0)\n> > - Most of the detection and fixing code has been tested ONLY on Sun JVMs.\n> Correct.\n> \n> > - Tests in tomcat7.source\\test\\org\\apache\\catalina\\loader do not seem to run\n> > successfully and are incomplete for all the protection that Tomcat provides for\n> > classloader memory leaks.\n> The tests that are present do work. Yes, code coverage of the tests is a long\n> way from 100%.\n> \n> > - For some categories of threadlocal memory leaks the key and value are not\n> > displayed correctly in the warning messages; particularly ones dealing with\n> > indirect references to threadlocals\n> I don't see any changes to address this. Did I miss them?\n> \n> > -  org.apache.catalina.loader.WebappClassLoader.loadedByThisOrChild(Object)\n> > incorrectly traverses the object classloader hierarchy instead of the current\n> > (this) classloader hierarchy\n> No. The test is not \"loaded by this or parent\", it is \"loaded by this or child\"\n> and is correct.\n> \n> I haven't looked at the tests yet. I'll commit the fixes (less the change to\n> WebappClassLoader.loadedByThisOrChild(Object)) with the tests once I have\n> reviewed the new tests."}, {"count": 8, "tags": [], "bug_id": 52850, "text": "I've been looking at this some more.\n\nThe test cases don't do what they are meant to because they don't trigger a leak because the web application class loader isn't used to load the servlets and associated classes. That is almost certainly why you incorrectly thought you needed to rework loadedByThisOrChild.\n\nI have re-worked the tests and direct leaks are now being created and detected as intended.\n\nIndirect leaks appear to be being generated (although I need to double check that it is the intended leak rather than some other leak) but are not yet being logged. Work continues.\n\nI have also have found and fixed a JMX related memory leak.", "id": 155062, "time": "2012-03-19T19:12:45Z", "creator": "markt@apache.org", "creation_time": "2012-03-19T19:12:45Z", "is_private": false, "attachment_id": null}, {"count": 9, "tags": [], "bug_id": 52850, "is_private": false, "text": "The unit tests have been fixed. Indirect leaks weren't being detected. We are never going to be able to detect them all but the code does not detect anything that uses collections.", "id": 155063, "time": "2012-03-19T19:38:58Z", "creator": "markt@apache.org", "creation_time": "2012-03-19T19:38:58Z", "attachment_id": null}, {"count": 10, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "is_private": false, "id": 155064, "time": "2012-03-19T19:40:43Z", "bug_id": 52850, "creation_time": "2012-03-19T19:40:43Z", "text": "s/not detect/now detect/"}, {"count": 11, "tags": [], "bug_id": 52850, "text": "Created attachment 28893\n2012-06-05_tc6_52850_WebappClassLoader.patch\n\nBackport of this fix to 6.0, based on r1298986 and r1346519", "id": 159713, "time": "2012-06-05T18:59:34Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2012-06-05T18:59:34Z", "is_private": false, "attachment_id": 28893}, {"count": 12, "attachment_id": null, "bug_id": 52850, "text": "Proposed for 6.0", "id": 159716, "time": "2012-06-05T20:10:37Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2012-06-05T20:10:37Z", "tags": [], "is_private": false}, {"count": 13, "tags": [], "bug_id": 52850, "is_private": false, "id": 160397, "creation_time": "2012-07-02T12:07:49Z", "time": "2012-07-02T12:07:49Z", "creator": "knst.kolinko@gmail.com", "text": "Fixed in 6.0 with r1356198 and will be in 6.0.36", "attachment_id": null}, {"count": 14, "tags": [], "creator": "vijay.1285@gmail.com", "attachment_id": null, "is_private": false, "id": 163375, "time": "2012-11-12T11:19:06Z", "bug_id": 52850, "creation_time": "2012-11-12T11:19:06Z", "text": "I have Tomcat 7.0 running. Where can I download this patch so that I can install on the server?"}]