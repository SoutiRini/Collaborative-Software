[{"count": 0, "attachment_id": null, "creator": "hodgesz@gmail.com", "is_private": false, "id": 154877, "time": "2012-03-13T15:00:57Z", "bug_id": 52899, "creation_time": "2012-03-13T15:00:57Z", "tags": [], "text": "Once we upgraded to 7.0.26 we see the following exception in the logs when viewing the Tomcat JDBC pool properties through the JMXProxy Servlet.  \n\nAs you can see in the following the data is retrieved correctly but a SEVERE exception appears in the logs.\n\n\n\n\nhttp://localhost:8080/manager/jmxproxy/?qry=bean:name=eventingDataSource\n\n\nOK - Number of results: 1 \n\nName: bean:name=eventingDataSource \nmodelerType: org.apache.tomcat.jdbc.pool.DataSource \nMaxIdle: 100 \nJdbcInterceptors: \norg.apache.tomcat.jdbc.pool.interceptor.ConnectionState;org.apache.tomcat.jdbc.pool.interceptor.StatementFinalizer \nDefaultTransactionIsolation: -1 \nValidationQuery: SELECT 1 FROM dual \nTestOnConnect: false \nPassword: Password not available as DataSource/JMX operation. \nAbandonWhenPercentageFull: 0 \nTestOnReturn: false \nUsername: xxxx \nNumActive: 0 \nMinIdle: 10 \nPoolSize: 4 \nValidationInterval: 1800000 \nConnection: \nProxyConnection[PooledConnection[oracle.jdbc.driver.T4CConnection@17f8b39]] \nNumIdle: 2 \nAccessToUnderlyingConnectionAllowed: true \nUrl: jdbc:oracle:thin:@(DESCRIPTION =(ADDRESS = (PROTOCOL = TCP)(HOST = \nlocalhost)(PORT = 1580))(CONNECT_DATA =(SERVER = DEDICATED)( SERVICE_NAME = \nanywhere.com )(INSTANCE_NAME = xxx)(SID = xxx))) \nSize: 4 \nActive: 2 \nAlternateUsernameAllowed: false \nTestOnBorrow: true \nLoginTimeout: 6 \nMaxActive: 100 \nMaxAge: 0 \nSuspectTimeout: 0 \nPool: org.apache.tomcat.jdbc.pool.ConnectionPool@9283bf \nNumTestsPerEvictionRun: 0 \nName: Tomcat Connection Pool[1-6300663] \nMaxWait: 6000 \nPoolProperties: ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; \ndefaultTransactionIsolation=-1; defaultCatalog=null; \ndriverClassName=oracle.jdbc.driver.OracleDriver; maxActive=100; maxIdle=100; \nminIdle=10; initialSize=10; maxWait=6000; testOnBorrow=true; \ntestOnReturn=false; timeBetweenEvictionRunsMillis=30000; \nnumTestsPerEvictionRun=0; minEvictableIdleTimeMillis=30000; \ntestWhileIdle=false; testOnConnect=false; password=xxxxx; \nurl=jdbc:oracle:thin:@(DESCRIPTION =(ADDRESS = (PROTOCOL = TCP)(HOST = \nlocalhost)(PORT = 1580))(CONNECT_DATA =(SERVER = DEDICATED)( SERVICE_NAME = \nanywhere.com )(INSTANCE_NAME = xxx)(SID = xxx))); username=xxx; \nvalidationQuery=SELECT 1 FROM dual; validationInterval=1800000; \naccessToUnderlyingConnectionAllowed=true; removeAbandoned=true; \nremoveAbandonedTimeout=60; logAbandoned=true; connectionProperties=null; \ninitSQL=null; \njdbcInterceptors=org.apache.tomcat.jdbc.pool.interceptor.ConnectionState;org.apache.tomcat.jdbc.pool.interceptor.StatementFinalizer; \njmxEnabled=true; fairQueue=false; useEquals=false; abandonWhenPercentageFull=0; \nmaxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; \nalternateUsernameAllowed=false; \nPoolName: Tomcat Connection Pool[1-6300663] \nWaitCount: 0 \nJmxEnabled: true \nTestWhileIdle: false \nUseEquals: false \nUseLock: false \nDriverClassName: oracle.jdbc.driver.OracleDriver \nRemoveAbandonedTimeout: 60 \nDbProperties: {user=xxxx, password=xxxx} \nIdle: 2 \nLogAbandoned: true \nFairQueue: false \nPoolSweeperEnabled: true \nConnectionAsync: \norg.apache.tomcat.jdbc.pool.ConnectionPool$ConnectionFuture@e9c2d3 \nJdbcInterceptorsAsArray: \nArray[org.apache.tomcat.jdbc.pool.PoolProperties$InterceptorDefinition] of \nlength 2 \n\norg.apache.tomcat.jdbc.pool.PoolProperties$InterceptorDefinition@125f027 \n\norg.apache.tomcat.jdbc.pool.PoolProperties$InterceptorDefinition@1b99628 \nRemoveAbandoned: true \nTimeBetweenEvictionRunsMillis: 30000 \nMinEvictableIdleTimeMillis: 30000 \nInitialSize: 10 \n\n\n\nMar 6, 2012 9:18:20 AM org.apache.catalina.mbeans.MBeanDumper dumpBeans \nSEVERE: Error getting attribute bean:name=eventingDataSource PooledConnection \njavax.management.MBeanException: RuntimeException thrown in RequiredModelMBean \nwhile trying to invoke operation getPooledConnection \n        at \njavax.management.modelmbean.RequiredModelMBean.invokeMethod(RequiredModelMBean.java:1091) \n        at \njavax.management.modelmbean.RequiredModelMBean.invoke(RequiredModelMBean.java:955) \n        at \norg.springframework.jmx.export.SpringModelMBean.invoke(SpringModelMBean.java:90) \n        at \njavax.management.modelmbean.RequiredModelMBean.getAttribute(RequiredModelMBean.java:1358) \n        at \norg.springframework.jmx.export.SpringModelMBean.getAttribute(SpringModelMBean.java:109) \n        at \ncom.sun.jmx.interceptor.DefaultMBeanServerInterceptor.getAttribute(DefaultMBeanServerInterceptor.java:666) \n        at \ncom.sun.jmx.mbeanserver.JmxMBeanServer.getAttribute(JmxMBeanServer.java:638) \n        at \norg.apache.catalina.mbeans.MBeanDumper.dumpBeans(MBeanDumper.java:82) \n        at \norg.apache.catalina.manager.JMXProxyServlet.listBeans(JMXProxyServlet.java:172) \n        at \norg.apache.catalina.manager.JMXProxyServlet.doGet(JMXProxyServlet.java:121) \n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:621) \n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:722) \n        at \norg.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:305) \n        at \norg.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210) \n        at \norg.apache.catalina.filters.SetCharacterEncodingFilter.doFilter(SetCharacterEncodingFilter.java:108) \n        at \norg.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243) \n        at \norg.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210) \n        at \norg.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:224) \n        at \norg.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:169) \n        at \norg.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:581) \n        at \norg.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:168) \n        at \norg.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:98) \n        at \norg.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:927) \n        at \norg.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:118) \n        at \norg.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:407) \n        at \norg.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:987) \n        at \norg.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:579) \n        at \norg.apache.tomcat.util.net.JIoEndpoint$SocketProcessor.run(JIoEndpoint.java:307) \n        at \njava.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886) \n        at \njava.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908) \n        at java.lang.Thread.run(Thread.java:619) \nCaused by: java.lang.ClassCastException: $Proxy5 cannot be cast to \norg.apache.tomcat.jdbc.pool.PooledConnection \n        at \norg.apache.tomcat.jdbc.pool.DataSourceProxy.getPooledConnection(DataSourceProxy.java:156) \n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) \n        at \nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39) \n        at \nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) \n        at java.lang.reflect.Method.invoke(Method.java:597) \n        at sun.reflect.misc.Trampoline.invoke(MethodUtil.java:37) \n        at sun.reflect.GeneratedMethodAccessor31.invoke(Unknown Source) \n        at \nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) \n        at java.lang.reflect.Method.invoke(Method.java:597) \n        at sun.reflect.misc.MethodUtil.invoke(MethodUtil.java:244) \n        at \njavax.management.modelmbean.RequiredModelMBean.invokeMethod(RequiredModelMBean.java:1074) \n        ... 30 more \nMar 6, 2012 9:18:22 AM org.apache.catalina.mbeans.MBeanDumper dumpBeans \nSEVERE: Error getting attribute bean:name=eventingDataSource XAConnection \njavax.management.MBeanException: Exception thrown in RequiredModelMBean while \ntrying to invoke operation getXAConnection \n        at \njavax.management.modelmbean.RequiredModelMBean.invokeMethod(RequiredModelMBean.java:1101) \n        at \njavax.management.modelmbean.RequiredModelMBean.invoke(RequiredModelMBean.java:955) \n        at \norg.springframework.jmx.export.SpringModelMBean.invoke(SpringModelMBean.java:90) \n        at \njavax.management.modelmbean.RequiredModelMBean.getAttribute(RequiredModelMBean.java:1358) \n        at \norg.springframework.jmx.export.SpringModelMBean.getAttribute(SpringModelMBean.java:109) \n        at \ncom.sun.jmx.interceptor.DefaultMBeanServerInterceptor.getAttribute(DefaultMBeanServerInterceptor.java:666) \n        at \ncom.sun.jmx.mbeanserver.JmxMBeanServer.getAttribute(JmxMBeanServer.java:638) \n        at \norg.apache.catalina.mbeans.MBeanDumper.dumpBeans(MBeanDumper.java:82) \n        at \norg.apache.catalina.manager.JMXProxyServlet.listBeans(JMXProxyServlet.java:172) \n        at \norg.apache.catalina.manager.JMXProxyServlet.doGet(JMXProxyServlet.java:121) \n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:621) \n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:722) \n        at \norg.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:305) \n        at \norg.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210) \n        at \norg.apache.catalina.filters.SetCharacterEncodingFilter.doFilter(SetCharacterEncodingFilter.java:108) \n        at \norg.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243) \n        at \norg.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210) \n        at \norg.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:224) \n        at \norg.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:169) \n        at \norg.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:581) \n        at \norg.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:168) \n        at \norg.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:98) \n        at \norg.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:927) \n        at \norg.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:118) \n        at \norg.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:407) \n        at \norg.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:987) \n        at \norg.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:579) \n        at \norg.apache.tomcat.util.net.JIoEndpoint$SocketProcessor.run(JIoEndpoint.java:307) \n        at \njava.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886) \n        at \njava.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908) \n        at java.lang.Thread.run(Thread.java:619) \nCaused by: java.sql.SQLException: Connection from pool does not implement \njavax.sql.XAConnection \n        at \norg.apache.tomcat.jdbc.pool.DataSourceProxy.getXAConnection(DataSourceProxy.java:134) \n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) \n        at \nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39) \n        at \nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) \n        at java.lang.reflect.Method.invoke(Method.java:597) \n        at sun.reflect.misc.Trampoline.invoke(MethodUtil.java:37) \n        at sun.reflect.GeneratedMethodAccessor31.invoke(Unknown Source) \n        at \nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) \n        at java.lang.reflect.Method.invoke(Method.java:597) \n        at sun.reflect.misc.MethodUtil.invoke(MethodUtil.java:244) \n        at \njavax.management.modelmbean.RequiredModelMBean.invokeMethod(RequiredModelMBean.java:1074) \n        ... 30 more \n\n\n\n\nApparently MBeanDumper is exposing any getter even if it isn't a property i.e. getPooledConnection.  Since this throws an exception trying to access getPooledConnection the connection is never closed and returned to the pool properly leading to abandoned connections causing a memory leak.\n\nYou can see more details in the user thread - http://tomcat.10.n6.nabble.com/What-is-the-best-way-to-view-Tomcat-JDBC-pool-properties-in-Tomcat-7-td4557182.html"}, {"count": 1, "attachment_id": null, "creator": "markt@apache.org", "text": "The MBeanDumper only accesses the attributes that are there. It is not responsible for creating the MBeans in the first place.\n\nTomcat isn't creating this MBean so Tomcat is not responsible for incorrectly exposing pooledConnection as an attribute with a getter rather than an operation. You can tell this by looking at the MBean name. Tomcat uses a distinctive naming convention for MBeans [1] and the name used below does not match it.\n\n[1] http://svn.apache.org/viewvc/tomcat/tc7.0.x/trunk/java/org/apache/catalina/core/NamingContextListener.java?view=annotate (line 743 onwards)", "id": 154908, "time": "2012-03-14T15:20:24Z", "bug_id": 52899, "creation_time": "2012-03-14T15:20:24Z", "tags": [], "is_private": false}, {"attachment_id": null, "tags": [], "bug_id": 52899, "is_private": false, "count": 2, "id": 154969, "time": "2012-03-16T02:31:11Z", "creator": "hodgesz@gmail.com", "creation_time": "2012-03-16T02:31:11Z", "text": "Why does the exact same config not throw an exception in the JMXProxy in Tomcat 6.0.26?\n\n\n\n(In reply to comment #1)\n> The MBeanDumper only accesses the attributes that are there. It is not\n> responsible for creating the MBeans in the first place.\n> \n> Tomcat isn't creating this MBean so Tomcat is not responsible for incorrectly\n> exposing pooledConnection as an attribute with a getter rather than an\n> operation. You can tell this by looking at the MBean name. Tomcat uses a\n> distinctive naming convention for MBeans [1] and the name used below does not\n> match it.\n> \n> [1]\n> http://svn.apache.org/viewvc/tomcat/tc7.0.x/trunk/java/org/apache/catalina/core/NamingContextListener.java?view=annotate\n> (line 743 onwards)"}, {"count": 3, "tags": [], "bug_id": 52899, "is_private": false, "text": "Because in that version, all exceptions are silently swallowed.", "id": 154972, "time": "2012-03-16T07:59:53Z", "creator": "markt@apache.org", "creation_time": "2012-03-16T07:59:53Z", "attachment_id": null}]