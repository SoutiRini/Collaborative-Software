[{"count": 0, "text": "I wrote PHP extension for mod_php and find security problem(from my opinion).\nDuring PHP_MINIT_FUNCTION and PHP_MSHUTDOWN_FUNCTION which is \nsomething like   constructor and descructor for PHP extension I have root access\nand  can do everithing like root.\nProblem is, I expect here to be apache user already, this looks more like design\nproblem and can cause more problem  when someone break PHP extension and I think\neven some apache module.\nI understand  this  should  be useful for something like  suexec, but this \nshould  be  forbidden  by default. Why main apache process(which can only bind\nport 80,443 etc..)  even  run childs  with root access, should not be this\nconfigurable?\n\nPlease tell me if I am wrong, thx.\n\nBTW2: sorry for my bad english ;]", "bug_id": 38393, "is_private": false, "id": 85017, "time": "2006-01-26T00:02:30Z", "creator": "sopak@matrixway.cz", "creation_time": "2006-01-26T00:02:30Z", "tags": [], "attachment_id": null}, {"count": 1, "text": "This is Apache bugzilla, not PHP. \n \nIf you're saying that PHP enables unprivileged users to gain root privileges \nduring server startup, that is indeed a major security issue and should be \nreported to PHP. \n \n(it's not clear to me whether that really is what you're saying) ", "bug_id": 38393, "is_private": false, "id": 85022, "time": "2006-01-26T00:36:27Z", "creator": "nick@webthing.com", "creation_time": "2006-01-26T00:36:27Z", "tags": [], "attachment_id": null}, {"count": 2, "text": "Hi\n\nI thing  this  is  apache  design problem during startup , i think  all apache \nmodules  loaded  during start have  root access and  after startup  apache\nswitch to given user from configuration, therefore this is more apache problem\nthen PHP.\n\nI think steps  are  somethink like, I simplified it:\nroot 1]main apache start and  start prefork processes (keep starting  to compete\n needs and settings)\nroot 2]apache start modules\nroot 3]modules initialize\nroot 4]modules initialize their  modules extensione  whatever\nroot 5]apache switch  to unprivileged user\napache 6]apache accept and passig  requests from main  apache proccess(which\nbinds  80,443,...) to  modules and other way\napache 7] apache process reach maximum request or  get signal  to   shutdown\nroot 8] apache somehow  switch  to privileged user again (probably main process??)\nroot 9] apache call shutdown  to all modules \nroot 10] modules  close their work files  resources etc, and PHP call same  to\nall extensions\nroot 11] process die..\n\n\nMaybe this is  not exactly what apache doing,  but I  want reopen this issue.\n\nReason is \"let it be configurable  when apache switch to unprivileged user, I\ndecide prefork processes cant have root acces ever(maybe as configurable\nparameter for suexec  environment and  similar)\"\n", "bug_id": 38393, "attachment_id": null, "id": 85023, "time": "2006-01-26T01:01:04Z", "creator": "sopak@matrixway.cz", "creation_time": "2006-01-26T01:01:04Z", "tags": [], "is_private": false}, {"count": 3, "tags": [], "bug_id": 38393, "attachment_id": null, "text": "Yes of course.  Many modules need root privileges at startup: for example, the \nmodule that opens the logfiles, and the module that binds to port 80.  It's \nthe same security issue as with any software you run as root, including Apache \nitself: don't run it unless you trust it. \n \nIt would be a security hole if modules could be added by unprivileged users, \nas for example CGI and PHP scripts can. ", "id": 85029, "time": "2006-01-26T03:48:21Z", "creator": "nick@webthing.com", "creation_time": "2006-01-26T03:48:21Z", "is_private": false}]