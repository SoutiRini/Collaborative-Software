[{"count": 0, "tags": [], "creator": "richard.evans@datanomic.com", "attachment_id": null, "is_private": false, "id": 121896, "time": "2008-10-27T05:44:55Z", "bug_id": 46096, "creation_time": "2008-10-27T05:44:55Z", "text": "If tomcat is running with a SecurityManager, and a JSP uses PageContext.forward, DefaultAnnotationProcessor code can be called with untristed code on the call stack.\n\nThe processAnnotations method contains the line:\n\n   Field[] fields = instance.getClass().getDeclaredFields();\n\ngetDeclaredFields() is subject to security checks so this throws a java.security.AccessControlException.\n\nDefaultAnnotationProcessor is part of the code in the catlina lib directory, which is granted AllPermissions in the standard policy file.  However, because there is untrusted JSP code on the stack, these permissions are not used.\n\nThe call to getDeclaredFields() should be wrapped in an AccessController.doPrivileged call to avoid the exception."}, {"count": 1, "tags": [], "bug_id": 46096, "text": "This has been fixed in trunk and a patch (http://people.apache.org/~markt/patches/2008-10-27-bug46096.patch) proposed for 6.0.x", "id": 121919, "time": "2008-10-27T11:27:06Z", "creator": "markt@apache.org", "creation_time": "2008-10-27T11:27:06Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "creator": "richard.evans@datanomic.com", "text": "As a temporary workround, I added a java.lang.RuntimePermission for JSPs to catalina.policy.\n\nI then had a different exception:\n\njava.security.AccessControlException: access denied (java.util.PropertyPermission org.apache.jasper.runtime.BodyContentImpl.LIMIT_BUFFER read)\n\tat java.security.AccessControlContext.checkPermission(AccessControlContext.java:323)\n\tat java.security.AccessController.checkPermission(AccessController.java:546)\n\tat java.lang.SecurityManager.checkPermission(SecurityManager.java:532)\n\tat java.lang.SecurityManager.checkPropertyAccess(SecurityManager.java:1285)\n\tat java.lang.System.getProperty(System.java:688)\n\tat org.apache.jasper.runtime.BodyContentImpl.<clinit>(BodyContentImpl.java:44)\n\tat org.apache.jasper.runtime.PageContextImpl.pushBody(PageContextImpl.java:717)\n\tat org.apache.jasper.runtime.PageContextImpl.pushBody(PageContextImpl.java:707)\n\nI think the property access in BodyContentImpl also needs to run in a privileged block.  Or the class should be initialized at startup.\n\nThis probably should be a different bug?", "id": 122073, "attachment_id": null, "bug_id": 46096, "creation_time": "2008-10-31T05:21:13Z", "time": "2008-10-31T05:21:13Z", "is_private": false}, {"count": 3, "attachment_id": null, "creator": "markt@apache.org", "text": "Comment#2 looks like a configuration issue. The security policy already grants that permission to all code.", "id": 122112, "time": "2008-11-01T17:44:21Z", "bug_id": 46096, "creation_time": "2008-11-01T17:44:21Z", "tags": [], "is_private": false}, {"count": 4, "attachment_id": null, "creator": "markt@apache.org", "text": "This has been fixed in 6.0.x and will be in 6.0.19 onwards.", "id": 122194, "time": "2008-11-04T19:26:46Z", "bug_id": 46096, "creation_time": "2008-11-04T19:26:46Z", "tags": [], "is_private": false}]