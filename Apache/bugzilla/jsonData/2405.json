[{"count": 0, "attachment_id": null, "bug_id": 2405, "text": "In order to configure a servlet under a context, a valid <servlet></servlet> \ndefinition must exist in the corresponding web.xml file. An additional \ndefinition inside a <servlet-mapping></servlet-mapping> block defines a URL \npattern for matching servlets defined within the context. As far as I know, in \norder for these maps to work properly from Apache, there must be a JkMount \nstatement in mod_jk.conf-auto that passes a request for them to apj12, apj13, \nor whatever worker you have defined for mod_jk. What I've found is that the \nmod_jk.conf-auto file isn't being properly created, and therefore Apache isn't \nproperly passing the requests along... I tried accessing the servlets I had \ndefined in web.xml using the HttpConnection port on Tomcat, and that works \nfine... the problem only occurs when accessing via Apache.\n\nSo basically, if you have a context called \"Apps\", a servlet within \ncalled \"NumberCruncher\", and you want to access it via a path looking \nlike \"/Apps/NC\", you'd have to define a web.xml file that looks like this:\n\n   <web-app>\n      <servlet>\n         <servlet-name>NumberCruncher</servlet-name>\n         <servlet-class>com.apps.NumberCruncher</servlet-name>\n      </servlet>\n      <servlet-mapping>\n         <servlet-name>NumberCruncher</servlet-name>\n         <url-pattern>/NC</url-pattern>\n      </servlet-mapping>\n   </web-app>\n\n\nWhen Tomcat is started, it scans all of the web.xml files it finds under the \ndirectories under /webapps, and creates a configuration file for mod_jk called \nmod_jk.conf-auto. However, it leaves out a crucial line. Here is the relevant \npart of the file for this context:\n\n   #\n   # The following line mounts all JSP files and the /servlet/ uri to tomcat\n   #\n   JkMount /Apps/servlet/* ajp12\n   JkMount /Apps/*.jsp ajp12\n\nThis causes Apache to _not_ pass requests for /Apps/NC to Tomcat, but to \ninstead report a 404 Not Found. In order to get /Apps/NC to be passed through \nproperly, I had to change this part to look exactly like this:\n\n   #\n   # The following line mounts all JSP files and the /servlet/ uri to tomcat\n   #\n   JkMount /Apps/servlet/* ajp12\n   JkMount /Apps/*.jsp ajp12\n   JkMount /Apps/* ajp12\n\nPosition is important here because as far as I know, the first line is matched \nfirst, and if it fails, the second is tried, and so forth. So the most general \nmatch must come at the end of the list. Fortunately this means I solved my \nimmediate problem, but the real problem is that Tomcat does not properly \ngenerate this file in the first place.\n\nAlso, there is mention that setting the worker.list property in \nworkers.properties allows control over which protocols (ajp12, ajp13, etc) are \nused to communicate between the Apache module and the Tomcat workers handling \nrequests from Apache. I removed all references to ajp12, and have only ajp13 \nlisted in that property. However, the mod_jk.conf-auto file still attempts to \ncommunicate using ajp12, where it should (I think) be referencing ajp13 in the \nJkMount statements.", "id": 3347, "time": "2001-06-29T13:52:11Z", "creator": "guyjr@yahoo.com", "creation_time": "2001-06-29T13:52:11Z", "tags": [], "is_private": false}, {"count": 1, "tags": [], "bug_id": 2405, "attachment_id": null, "text": "Fixed in 3.3 ( most of it). If you use the \"forward all to tomcat\" style - no\nproblems. If you want static served by apache - the automatic conf will work\nin common cases, but you may need to tune it manually.\n", "id": 5260, "time": "2001-09-08T20:21:09Z", "creator": "cmanolache@yahoo.com", "creation_time": "2001-09-08T20:21:09Z", "is_private": false}]