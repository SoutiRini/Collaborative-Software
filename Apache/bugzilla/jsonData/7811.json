[{"count": 0, "tags": [], "creator": "carl@bl.echidna.id.au", "attachment_id": null, "text": "I'm not able to get apache 2.0.35 to start if any IPv6 support is enabled :\n\nThe only way I've been able to get it to start is to explicitly specify non-IPv6\naddresses via Listen directives, or to expliclty tell it to compile without IPv6\n(bad!)\n\nThis may be ok for some(!) but I want to use IPv6 on this box :) It's hosting a\nnumber of IPv6-informational web pages for starters!\n\nHere's my config information :\n\n[rollcage]/opt/local/apache2/bin{242} : ./httpd -V\nServer version: Apache/2.0.35\nServer built:   Apr  6 2002 22:58:05\nServer's Module Magic Number: 20020329:0\nArchitecture:   32-bit\nServer compiled with....\n-D APACHE_MPM_DIR=\"server/mpm/prefork\"\n-D APR_HAS_MMAP\n-D APR_HAVE_IPV6\n-D APR_USE_PROC_PTHREAD_SERIALIZE\n-D APR_USE_PTHREAD_SERIALIZE\n-D SINGLE_LISTEN_UNSERIALIZED_ACCEPT\n-D APR_HAS_OTHER_CHILD\n-D AP_HAVE_RELIABLE_PIPED_LOGS\n-D HTTPD_ROOT=\"/usr/local/apache2\"\n-D SUEXEC_BIN=\"/usr/local/apache2/bin/suexec\"\n-D DEFAULT_ERRORLOG=\"logs/error_log\"\n-D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n[rollcage]/opt/local/apache2/bin{244} : gcc -v\nReading specs from /opt/local/lib/gcc-lib/sparc-sun-solaris2.8/3.0.2/specs\nConfigured with: ./configure --prefix=/opt/local : (reconfigured) ./configure --pr\nefix=/opt/local --disable-java\nThread model: posix\ngcc version 3.0.2\n\n[rollcage]/opt/local/apache2/bin{245} : uname -a\nSunOS rollcage 5.8 Generic sun4m sparc SUNW,SPARCstation-10\n\nI compiled it with ./configure --enable-ipv6, but I think it automagically\nincludes IPv6 anyway on Solaris 8 servers?\n\nAs above, if I tell it not to use IPv6 addresses (you can see the various things\nI've\ntried below ...) :\n#Listen 12.34.56.78:80\n#Listen 80\n#Listen [3ffe:8001:5:2:a00:20ff:fe18:a87d]:80\n#Listen [::1]:80\n#Listen rollcage6.bl.echidna.id.au:80\n#Listen localhost:80\nListen 0.0.0.0:80\n#Listen [::]:80\n#Listen [fe80::a00:20ff:fe18:a87d]:80\n\nIt starts, and serves pages just fine using IPv4.  But, if I ask it to use IPv6\nit opens the network port for listening (I assume, I don't get connection\nrefused, just a server that never replies to any queries when I telnet to\nport 80).  Nothing gets logged.  Truss ends up showing this :\n\n[rollcage]/opt/local/apache2/bin{247} : truss -t open -f ./httpd\n18377:  open(\"/var/ld/ld.config\", O_RDONLY)             Err#2 ENOENT\n18377:  open(\"/usr/openwin/lib/libaprutil.so.0\", O_RDONLY) Err#2 ENOENT\n18377:  open(\"/usr/local/apache2/lib/libaprutil.so.0\", O_RDONLY) = 3\n18377:  open(\"/usr/openwin/lib/libapr.so.0\", O_RDONLY)  Err#2 ENOENT\n18377:  open(\"/usr/local/apache2/lib/libapr.so.0\", O_RDONLY) = 3\n18377:  open(\"/usr/openwin/lib/librt.so.1\", O_RDONLY)   Err#2 ENOENT\n18377:  open(\"/usr/local/apache2/lib/librt.so.1\", O_RDONLY) Err#2 ENOENT\n18377:  open(\"/usr/lib/librt.so.1\", O_RDONLY)           = 3\n18377:  open(\"/usr/openwin/lib/libm.so.1\", O_RDONLY)    Err#2 ENOENT\n18377:  open(\"/usr/local/apache2/lib/libm.so.1\", O_RDONLY) Err#2 ENOENT\n18377:  open(\"/usr/lib/libm.so.1\", O_RDONLY)            = 3\n18377:  open(\"/usr/openwin/lib/libsocket.so.1\", O_RDONLY) Err#2 ENOENT\n18377:  open(\"/usr/local/apache2/lib/libsocket.so.1\", O_RDONLY) Err#2 ENOENT\n18377:  open(\"/usr/lib/libsocket.so.1\", O_RDONLY)       = 3\n18377:  open(\"/usr/openwin/lib/libnsl.so.1\", O_RDONLY)  Err#2 ENOENT\n18377:  open(\"/usr/local/apache2/lib/libnsl.so.1\", O_RDONLY) Err#2 ENOENT\n18377:  open(\"/usr/lib/libnsl.so.1\", O_RDONLY)          = 3\n18377:  open(\"/usr/openwin/lib/libresolv.so.2\", O_RDONLY) Err#2 ENOENT\n18377:  open(\"/usr/local/apache2/lib/libresolv.so.2\", O_RDONLY) Err#2 ENOENT\n18377:  open(\"/usr/lib/libresolv.so.2\", O_RDONLY)       = 3\n18377:  open(\"/usr/openwin/lib/libdl.so.1\", O_RDONLY)   Err#2 ENOENT\n18377:  open(\"/usr/local/apache2/lib/libdl.so.1\", O_RDONLY) Err#2 ENOENT\n18377:  open(\"/usr/lib/libdl.so.1\", O_RDONLY)           = 3\n18377:  open(\"/usr/openwin/lib/libexpat.so.0\", O_RDONLY) Err#2 ENOENT\n18377:  open(\"/usr/local/apache2/lib/libexpat.so.0\", O_RDONLY) = 3\n18377:  open(\"/usr/openwin/lib/libpthread.so.1\", O_RDONLY) Err#2 ENOENT\n18377:  open(\"/usr/local/apache2/lib/libpthread.so.1\", O_RDONLY) Err#2 ENOENT\n18377:  open(\"/usr/lib/libpthread.so.1\", O_RDONLY)      = 3\n18377:  open(\"/usr/openwin/lib/libc.so.1\", O_RDONLY)    Err#2 ENOENT\n18377:  open(\"/usr/local/apache2/lib/libc.so.1\", O_RDONLY) Err#2 ENOENT\n18377:  open(\"/usr/lib/libc.so.1\", O_RDONLY)            = 3\n18377:  open(\"/usr/openwin/lib/libaio.so.1\", O_RDONLY)  Err#2 ENOENT\n18377:  open(\"/usr/lib/libaio.so.1\", O_RDONLY)          = 3\n18377:  open(\"/usr/openwin/lib/libmp.so.2\", O_RDONLY)   Err#2 ENOENT\n18377:  open(\"/usr/lib/libmp.so.2\", O_RDONLY)           = 3\n18377:  open(\"/usr/platform/SUNW,SPARCstation-10/lib/libc_psr.so.1\", O_RDONLY) Err\n#2 ENOENT\n18377:  open(\"/usr/openwin/lib/libthread.so.1\", O_RDONLY) Err#2 ENOENT\n18377:  open(\"/usr/lib/libthread.so.1\", O_RDONLY)       = 3\n18377:  open(\"/usr/share/lib/zoneinfo/Australia/Victoria\", O_RDONLY) = 3\n18377:  open(\"/usr/local/apache2/conf/httpd.conf\", O_RDONLY) = 3\n18377:  open(\"/etc/netconfig\", O_RDONLY)                = 3\n18377:  open(\"/dev/udp\", O_RDONLY)                      = 3\n18377:  open64(\"/etc/.name_service_door\", O_RDONLY)     = 4\n18377:  open(\"/etc/nsswitch.conf\", O_RDONLY)            = 4\n18377:  open(\"/usr/openwin/lib/nss_files.so.1\", O_RDONLY) Err#2 ENOENT\n18377:  open(\"/usr/lib/nss_files.so.1\", O_RDONLY)       = 4\n18377:  open(\"/etc/passwd\", O_RDONLY)                   = 4\n18377:  open64(\"/etc/.name_service_door\", O_RDONLY)     = 4\n18377:  open(\"/etc/group\", O_RDONLY)                    = 4\n\n\n\nAnd there it sits.\n\nIf I go to more detail on the truss, and drop the -t open I get a lot more, but the\n(I think!) relevant bits are :\n\n18380:  open(\"/etc/group\", O_RDONLY)                    = 4\n18380:  fstat64(4, 0xEFFFCF50)                          = 0\n18380:  brk(0x000E2BC8)                                 = 0\n18380:  brk(0x000E4BC8)                                 = 0\n18380:  ioctl(4, TCGETA, 0xEFFFCEDC)                    Err#25 ENOTTY\n18380:  read(4, \" r o o t : : 0 : r o o t\".., 8192)     = 383\n18380:  llseek(4, 0xFFFFFFFFFFFFFFD4, SEEK_CUR)         = 339\n18380:  close(4)                                        = 0\n18380:  stat(\"/opt/local/apache/htdocs\", 0xEFFFF2D0)    = 0\n18380:  brk(0x000E4BC8)                                 = 0\n18380:  brk(0x000E6BC8)                                 = 0\n18380:  brk(0x000E6BC8)                                 = 0\n18380:  brk(0x000E8BC8)                                 = 0\n18380:  brk(0x000E8BC8)                                 = 0\n18380:  brk(0x000EABC8)                                 = 0\n18380:  brk(0x000EABC8)                                 = 0\n18380:  brk(0x000ECBC8)                                 = 0\n18380:  brk(0x000ECBC8)                                 = 0\n18380:  brk(0x000EEBC8)                                 = 0\n18380:  brk(0x000EEBC8)                                 = 0\n18380:  brk(0x000F0BC8)                                 = 0\n18380:  brk(0x000F0BC8)                                 = 0\n18380:  brk(0x000F2BC8)                                 = 0\n18380:  brk(0x000F2BC8)                                 = 0\n18380:  brk(0x000F4BC8)                                 = 0\n18380:  brk(0x000F4BC8)                                 = 0\n18380:  brk(0x000F6BC8)                                 = 0\n18380:  brk(0x000F6BC8)                                 = 0\n18380:  brk(0x000F8BC8)                                 = 0\n18380:  brk(0x000F8BC8)                                 = 0\n18380:  brk(0x000FABC8)                                 = 0\n18380:  brk(0x000FABC8)                                 = 0\n18380:  brk(0x000FCBC8)                                 = 0\n18380:  brk(0x000FCBC8)                                 = 0\n18380:  brk(0x000FEBC8)                                 = 0\n18380:  brk(0x000FEBC8)                                 = 0\n18380:  brk(0x00100BC8)                                 = 0\n18380:  brk(0x00100BC8)                                 = 0\n18380:  brk(0x00102BC8)                                 = 0\n18380:  brk(0x00102BC8)                                 = 0\n18380:  brk(0x00104BC8)                                 = 0\n18380:  brk(0x00104BC8)                                 = 0\n18380:  brk(0x00106BC8)                                 = 0\n18380:  brk(0x00106BC8)                                 = 0\n18380:  brk(0x00108BC8)                                 = 0\n18380:  brk(0x00108BC8)                                 = 0\n18380:  brk(0x0010ABC8)                                 = 0\n18380:  brk(0x0010ABC8)                                 = 0\n18380:  brk(0x0010CBC8)                                 = 0\n18380:  brk(0x0010CBC8)                                 = 0\n18380:  brk(0x0010EBC8)                                 = 0\n18380:  brk(0x0010EBC8)                                 = 0\n18380:  brk(0x00110BC8)                                 = 0\n18380:  brk(0x00110BC8)                                 = 0\n18380:  brk(0x00112BC8)                                 = 0\n18380:  brk(0x00112BC8)                                 = 0\n18380:  brk(0x00114BC8)                                 = 0\n18380:  brk(0x00114BC8)                                 = 0\n18380:  brk(0x00116BC8)                                 = 0\n18380:  brk(0x00116BC8)                                 = 0\n18380:  brk(0x00118BC8)                                 = 0\n18380:  brk(0x00118BC8)                                 = 0\n18380:  brk(0x0011ABC8)                                 = 0\n18380:  setsockopt(3, 65535, 4, 0xEFFFF464, 4, 1)       = 0\n18380:  setsockopt(3, 65535, 8, 0xEFFFF464, 4, 1)       = 0\n18380:  setsockopt(3, 6, 1, 0xEFFFF45C, 4, 1)           = 0\n18380:  bind(3, 0x00097ECC, 32, 3)                      = 0\n18380:  listen(3, 511, 1)                               = 0\n18380:  pipe()                                          = 4 [5]\n18380:  fcntl(4, F_GETFL, 0x00000000)                   = 2\n18380:  fstat64(4, 0xEFFFF3F0)                          = 0\n18380:  fstat64(4, 0xEFFFF3F0)                          = 0\n18380:  fcntl(4, F_SETFL, 0x00000082)                   = 0\n18380:  brk(0x0011ABC8)                                 = 0\n18380:  brk(0x0011CBC8)                                 = 0\n18380:  door_return(0x00000000, 0, 0x00000000, 0)       = 0\n18380:  mmap(0x00000000, 20480, PROT_READ|PROT_WRITE|PROT_EXEC, MAP_PRIVATE|MAP_NO\nRESERVE|MAP_ANON, -1, 0) = 0xEF3E0000\n18380:  mprotect(0xEF3E0000, 4096, PROT_NONE)           = 0\n18380:  lwp_create(0xEF3F49E0, LWP_DETACHED|LWP_SUSPENDED, 0xEF3E4DB4) = 4\n18380:  lwp_create()    (returning as new lwp ...)      = 0\n18380:  lwp_continue(4)                                 = 0\n18380:  sigaction(SIGWAITING, 0xEF42EE68, 0x00000000)   = 0\n18380:  lwp_schedctl(SC_STATE|SC_BLOCK, -1, 0xEF3E4CB4) = 0\n18380:  time()                                          = 1018176473\n18380:  lwp_mutex_wakeup(0xEF7F0778)                    = 0\n18380:  lwp_mutex_lock(0xEF7F0778)                      = 0\n18380:  lwp_mutex_lock(0xEF7F0778)                      = 0\n18380:  lwp_mutex_wakeup(0xEF7F0778)                    = 0\n18380:  lwp_mutex_lock(0xEF4355C0)                      = 0\n18380:  lwp_schedctl(SC_DOOR, 0, 0x00000000)            = 6\n18380:  door_bind(6)                                    = 0\n18380:  close(6)                                        = 0\n18380:  lwp_sema_wait(0x000929F0)       (sleeping...)\n18380:  signotifywait()                 (sleeping...)\n18380:  lwp_cond_wait(0xEF4355B0, 0xEF4355C0, 0xEF3F4BF0) (sleeping...)\n18380:  door_return(0x00000000, 0, 0x00000000, 0) (sleeping...)\n\nwait a few minutes, then this (independant of any attempts to connect to port 80) :\n\n18380:  lwp_cond_wait(0xEF4355B0, 0xEF4355C0, 0xEF3F4BF0) Err#62 ETIME\n18380:  time()                                          = 1018176773\n18380:  lwp_sema_wait(0x000929F0)       (sleeping...)\n18380:  signotifywait()                 (sleeping...)\n18380:  lwp_cond_wait(0xEF4355B0, 0xEF4355C0, 0xEF3F4BF0) (sleeping...)\n18380:  door_return(0x00000000, 0, 0x00000000, 0) (sleeping...)\n\nAnd that's it ... it repeats the above chunk every few minutes, apearing to\nbe stuck in some loop.  Maybe this is a name resolution issue?  I don't know?\nEverything else on the machine uses IPv6 with no dramas (OpenSSH, ircII, IPF etc)\n\nIt seems to loop over this, nothing shows up when I telnet to port 80 in the\ntruss.  I have no virtual hosts defined.  Is this a bug? I found no reference to\nit in the bug database, or what there is of the FAQ, but I've seen other reports\nof the same issue on users@httpd.apache.org.  Apache 1.3.x with Kame patches\nworks ok on this machine, happily serving over IPv6.  I have forward \nentries for my machine names in the DNS, and entries in /etc/inet/ipnodes, and\nname resolution works on the box just fine, although reverse lookups for\nIPv6 addresses will not work via the DNS.", "id": 12952, "time": "2002-04-07T11:14:10Z", "bug_id": 7811, "creation_time": "2002-04-07T11:14:10Z", "is_private": false}, {"count": 1, "tags": [], "text": "Solaris 8 as initially shipped has a bug in the resolver API which causes the\ngetaddrinfo() function to hang forever.  You can verify that you got to the\nhang via getaddrinfo() by running pstack against the hung httpd process.\n\nAnother sign that you have the broken Solaris getaddrinfo() is to try\nthe testipsub program.\n\n  cd srclib/apr/test\n  make testipsub\n  ./testipsub\n\nIt should finish within a few seconds.  If not, you have the broken\ngetaddrinfo().\n\nThe best way to deal with the problem is to get the fix from Sun.\nI don't know exactly which patch resolves the problem, but the Sun-\nrecommended patch set for Solaris 8 definitely has the right patch.\n\nPlease follow up after verifying whether or not testipsub hangs.\n", "is_private": false, "id": 12967, "creator": "trawick@apache.org", "time": "2002-04-07T20:27:00Z", "bug_id": 7811, "creation_time": "2002-04-07T20:27:00Z", "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 7811, "attachment_id": null, "id": 12983, "time": "2002-04-08T05:12:30Z", "creator": "carl@bl.echidna.id.au", "creation_time": "2002-04-08T05:12:30Z", "is_private": false, "text": "Yes, it hangs when testipsub is run.\n\nI'm applying the patch now (Solaris8/SPARC - it's 111327-05) to see if it fixes it."}, {"attachment_id": null, "tags": [], "bug_id": 7811, "text": "testipsub now works in a few seconds, but httpd didn't, doing a make clean and a\nmake and reinstall to see if that helps\n\n", "count": 3, "id": 12984, "time": "2002-04-08T05:31:01Z", "creator": "carl@bl.echidna.id.au", "creation_time": "2002-04-08T05:31:01Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 7811, "attachment_id": null, "id": 13032, "time": "2002-04-08T14:49:12Z", "creator": "carl@bl.echidna.id.au", "creation_time": "2002-04-08T14:49:12Z", "is_private": false, "text": "bizarre, post-reboot with the patch for getaddrinfo applied, and testipsub now\nhangs after opening /dev/udp (according to truss).  I'll bring the box up to the\nlatest patch revision and test again.\n\n\n\n"}, {"count": 5, "tags": [], "text": "ok, this is now working on IPv6 addresses as well as IPv4.\n\nCan something be added to the doco emphasising the criticallity of current patch\nlevels on Solaris 8?\n\n", "is_private": false, "id": 13071, "creator": "carl@bl.echidna.id.au", "time": "2002-04-08T22:44:47Z", "bug_id": 7811, "creation_time": "2002-04-08T22:44:47Z", "attachment_id": null}, {"count": 6, "tags": [], "text": "We've added a new README for critical issues, and this is mentioned there.\nThe README is linked from http://www.apache.org/dist/httpd/.\n\nThanks for your report, and thanks for using Apache!\n", "is_private": false, "id": 13077, "creator": "trawick@apache.org", "time": "2002-04-09T10:58:41Z", "bug_id": 7811, "creation_time": "2002-04-09T10:58:41Z", "attachment_id": null}]