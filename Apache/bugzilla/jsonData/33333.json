[{"count": 0, "tags": [], "bug_id": 33333, "attachment_id": null, "is_private": false, "id": 70308, "time": "2005-02-01T18:06:10Z", "creator": "ah08010-apache@yahoo.com", "creation_time": "2005-02-01T18:06:10Z", "text": "I'm generating a buildfile fragment dynamically, and my primary buildfile needs\nto  do dependency checking on this fragment to determine if a new fragment\nshould be generated.\n\nThe operating scenarios are:\n\n1. No fragment exists.\n\n2. Fragment exists but is out-of-date.\n\n3. Fragment exists and is fine.\n\nCurrently, I am using a HUUUUUUUUUUGE HAAAAAAACK involving <exec> to do 'black\nbox' recursion: \n\nA. <available> & <property> to provide a default (empty) fragment (I don't want\nto use <import optional=\"true\"/> because it ISN'T optional, just missing, in\ncase 1.)\n\nB. Target-based checking and regeneration of the fragment in the init step of\nall the primary targets.\n\nC. <exec> ant with overridden properties to force the inclusion of the\nknown-good fragment.\n\nAll this hackery and cruft would go away if my init step could check the\nfragment, maybe regenerate it, and then import it."}, {"count": 1, "tags": [], "text": "Try doing it outside of the targets. It used to work, I used it in Centipede.", "attachment_id": null, "id": 70310, "creator": "nicolaken@apache.org", "time": "2005-02-01T18:18:34Z", "bug_id": 33333, "creation_time": "2005-02-01T18:18:34Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 33333, "attachment_id": null, "is_private": false, "id": 70314, "time": "2005-02-01T19:35:11Z", "creator": "ah08010-apache@yahoo.com", "creation_time": "2005-02-01T19:35:11Z", "text": "I don't understand what you are suggesting. Can you elaborate a bit?"}, {"count": 3, "tags": [], "bug_id": 33333, "attachment_id": null, "text": "We actually use a task to do what you've suggested thus:\n\n<project ...>\n    <generatescript file=\"xyz.xml\".../>\n\n    <import file=\"xyz.xml\"/>\n\n    <.../>\n</project>\n\nYou can now put arbitrary tasks in Ant scripts in the \"default\" target (i.e. \noutside any explicit target) which will be processed in file order.", "id": 70321, "time": "2005-02-01T20:14:05Z", "creator": "phil.weighill-smith@volantis.com", "creation_time": "2005-02-01T20:14:05Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 33333, "attachment_id": null, "id": 70397, "time": "2005-02-02T18:36:18Z", "creator": "ah08010-apache@yahoo.com", "creation_time": "2005-02-02T18:36:18Z", "is_private": false, "text": "I'm trying the <generate> at toplevel approach, and it shows some promising\nresults. Thanks.\n\nNow, I think this may be a separate issue, but:\n\nI have a file that I <import> containing a series of macrodefs, including my\n<generate> macrodef.\n\nIf I add a <target> to that file, before the <generate> macrodef, when I run ant\nand try to <generate> from the top level, it complains that the task is not defined.\n\nRemoving the <target> def to after the <generate> macrodef fixes this, as does\nremoving the <target> back to the several importing files (but I don't want\nmultiple copies of the target :-(\n\nHas anyone seen this before?"}, {"count": 5, "tags": [], "bug_id": 33333, "attachment_id": null, "id": 70400, "time": "2005-02-02T19:02:03Z", "creator": "peterreilly@apache.org", "creation_time": "2005-02-02T19:02:03Z", "is_private": false, "text": ">Removing the <target> def to after the <generate> macrodef fixes this, as does\n>removing the <target> back to the several importing files (but I don't want\n>multiple copies of the target :-(\n\nThis is due to bug 31487 (fixed in cvs for ant 1.6.3)\n\n* Execution of top level tasks in imported files get delayed by targets.\n  Bugzilla report 31487.\n"}]