[{"count": 0, "tags": [], "creator": "allistair.crossley@qas.com", "attachment_id": null, "id": 80996, "time": "2005-10-11T15:50:26Z", "bug_id": 37020, "creation_time": "2005-10-11T15:50:26Z", "is_private": false, "text": "Here is a catch-22. \n\nWe want to use deployer to deploy web applications to target servers. It \nformalises the process of build a little more. However, deployer does not work \nwell on Windows as JARs get left behind. Furthermore another bug I submitted \nyesterday shows that deploying, restarting the Windows service and then \nundeploying breaks.\n\nThat restart bug aside, in order to even get deploy and undeploy to work we \nhave to use antiJARLocking=\"true\" antiResourceLocking=\"true\" on our context.\n\nI added this just the other day and I noticed that starting Tomcat took a whole \nlot longer than usual (nearly 1 minute), and that compiling class changes to my \ndevelopment Tomcat did not cause the usual web application reload (as indicated \nby reloadable=\"true\" on the context).\n\nI decided that the only thing I changed was the antiJARLocking=\"true\" \nantiResourceLocking=\"true\" attributes. I took them off today and Tomcat starts \nup in 20s. Furthermore, compiling class changes works again.\n\nI thought about why this might be and we have 18M of lib JARs. In order for the \nanti locking to work I notice that copies are made to a temp folder. I can only \nassume therefore that having so many JARs in a web application lib combined \nwith using the anti locking features causes this huge degradation in ability to \ndevelop and test. \n\nI've made sure this is definately the problem by adding and removing the \nantiJARLocking=\"true\" antiResourceLocking=\"true\" attributes a few times, and it \nalways varies from 58s and no reloading with them set to true and 20s and \nreloading ok with them false."}, {"attachment_id": null, "tags": [], "creator": "remm@apache.org", "is_private": false, "count": 1, "id": 81029, "time": "2005-10-12T12:53:16Z", "bug_id": 37020, "creation_time": "2005-10-12T12:53:16Z", "text": "This is not a bug. The webapp is indeed deployed over to another location, which\ntakes time."}, {"count": 2, "tags": [], "bug_id": 37020, "is_private": false, "text": "i thought it may not be a bug, i've changed the severity to \"enhancement\" to \nmake that clear. \n\nthere is clearly an issue with deployer on windows machines, and coupled with a \nlarge web application this kind of performance is not workable when the anti-\nlocking strategy is put in place.  \n\ni suppose the answer will be to add anti locking for deployed applications only \nand keep dev setups without the anti locking off.\n\nthanks anyway.", "id": 81030, "time": "2005-10-12T12:58:04Z", "creator": "allistair.crossley@qas.com", "creation_time": "2005-10-12T12:58:04Z", "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 37020, "attachment_id": null, "id": 81034, "time": "2005-10-12T14:23:36Z", "creator": "remm@apache.org", "creation_time": "2005-10-12T14:23:36Z", "is_private": false, "text": "(In reply to comment #2)\n> i thought it may not be a bug, i've changed the severity to \"enhancement\" to \n> make that clear. \n> \n> there is clearly an issue with deployer on windows machines, and coupled with a \n> large web application this kind of performance is not workable when the anti-\n> locking strategy is put in place.  \n> \n> i suppose the answer will be to add anti locking for deployed applications only \n> and keep dev setups without the anti locking off.\n> \n\nIf you have zillions of JARs, then there's no solution. The MS stuff and the Sun\nJVM seem to both be optimized so that JAR file locking (or even regular file\nlocking) will almost always occur. The workaround for all problems is to copy\nthe whole thing to the temp folder, and just run it from there. JBoss does the\nsame thing to allow hot deployment.\n\nThe other workaround is to consider using OSes with more flexible filesystems.\n\nI told you already that antiJARLocking and antiResourceLocking don't do the same\nthing, and using both is not very useful. BTW, your other bug report is bad.\n"}, {"count": 4, "tags": [], "bug_id": 37020, "is_private": false, "text": ">> BTW, your other bug report is bad.\n\nis it? or is it just that Tomcat does not offer any reasons for its failures \nand I am led to believe there is a problem because of the unexpected behaviour?\n\nthe bug report lists precise steps to a failure that should not be there or if \nthere is a reason should be reported to the user.\n\nconsider it another enhancement than a bug if that is the case.", "id": 81038, "time": "2005-10-12T14:43:04Z", "creator": "allistair.crossley@qas.com", "creation_time": "2005-10-12T14:43:04Z", "attachment_id": null}]