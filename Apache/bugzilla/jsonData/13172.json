[{"count": 0, "tags": [], "creator": "steve.mcroberts@doit.wisc.edu", "attachment_id": null, "id": 23688, "time": "2002-10-01T13:30:35Z", "bug_id": 13172, "creation_time": "2002-10-01T13:30:35Z", "is_private": false, "text": "When protocol is http, getServerPort returns 80 even when port is 8080.\nWhen protocol is https, getServerPort returns 443 even when port is 6443.\nI also notice this in logs.\nThis is for version 4.0.5 and does not occur in 4.0.4"}, {"count": 1, "tags": [], "bug_id": 13172, "is_private": false, "text": "This is a bug in 4.0.4 and 4.0.5 with HTTP 1.0 (e.g. from Apache SOAP 2.3). If \nthe port is TLS and 6443 (for example), getServerPort returns 443. Likewise for \nstandard non-TLS and 8080 (for example), getServerPort returns 80. This does \nnot occur in Tomcat 4.0.3. Nor does it occur for HTTP 1.1.", "id": 23703, "time": "2002-10-01T18:08:49Z", "creator": "steve.mcroberts@doit.wisc.edu", "creation_time": "2002-10-01T18:08:49Z", "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 13172, "text": "I'm seeing this bug in Tomcat 4.1.(12|18):  \n  \n...  \nFeb 12, 2003 4:23:58 PM org.apache.coyote.http11.Http11Protocol start  \nINFO: Starting Coyote HTTP/1.1 on port 8080  \nFeb 12, 2003 4:23:58 PM org.apache.jk.common.ChannelSocket init  \nINFO: JK2: ajp13 listening on tcp port 8009  \n...  \nAuthType: null  \nContextPath: /formstk  \nMethod: GET  \nPathInfo: null  \nPathTranslated: null  \nQueryString: null  \nRequestURI: /formstk/query  \nRequestURL: http://localhost/formstk/query  \nServletPath: /query  \nProtocol: HTTP/1.0  \nServerName: localhost  \nScheme: http  \nServerPort: 80  \n...  \n  \nThis is from a tiny servlet that just dumps some of the HttpServletRequest.get* methods.  Jetty  \nreports the correct values.  \n  \nI would expect this to be a fairly severe bug; it's enough to bring /our/ project to a grinding  \nhalt. \n  \nThis occurs in:  \njakarta-tomcat-4.1.12-LE-jdk14  \njakarta-tomcat-4.1.18  \njava version \"1.4.0_01\"  \nJava(TM) 2 Runtime Environment, Standard Edition (build 1.4.0_01-b03)  \nJava HotSpot(TM) 64-Bit Server VM (build 1.4.0_01-b03, mixed mode)  ", "id": 31306, "time": "2003-02-14T18:16:46Z", "creator": "ser@germane-software.com", "creation_time": "2003-02-14T18:16:46Z", "is_private": false, "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 13172, "is_private": false, "count": 3, "id": 34534, "time": "2003-04-04T14:15:50Z", "creator": "steve.mcroberts@doit.wisc.edu", "creation_time": "2003-04-04T14:15:50Z", "text": "I'm trying a reassign to see if that gets any action.\nWhy this bug fix is important: For messaging components, we use a \"non-\nstandard\" port to force mutual certificate authentication. The code must make a \ncheck to verify it's on the correct port to be assured the authentication has \noccurred."}, {"count": 4, "tags": [], "bug_id": 13172, "is_private": false, "text": "It seems that the getServerPort() method returns the port as specified in the \nHost header of the received message, not the port of the connector through \nwhich the request arrived.\n\nThis seems to be a huge security issue. I am currently using a filter in my \ncode to verify that a request arrived on a particular port (for security \nreasons) and am actually only verifying that the Host header says it came in on \nthe port. It would be trivial for a client to spoof my code if I were to rely \non the getServerPort() method as implemented.", "id": 38066, "time": "2003-05-30T18:56:34Z", "creator": "eric.havens@ericsson.com", "creation_time": "2003-05-30T18:56:34Z", "attachment_id": null}, {"count": 5, "tags": [], "text": "getServerName and getServerPort come from the Host header. Virtual hosting\nbasics. For security, you should be using isSecure, getRemoteUser/Principal,\ngetRemoteAddress, getRemoteHost.", "is_private": false, "bug_id": 13172, "id": 38067, "time": "2003-05-30T19:38:55Z", "creator": "remm@apache.org", "creation_time": "2003-05-30T19:38:55Z", "attachment_id": null}, {"count": 6, "tags": [], "creator": "rckenned@hotmail.com", "attachment_id": null, "id": 41915, "time": "2003-08-01T00:32:34Z", "bug_id": 13172, "creation_time": "2003-08-01T00:32:34Z", "is_private": false, "text": "Remy:\n\nthe servlet javadoc has the following for getServerPort():\n\n    Returns the port number on which this request was received. For \n    HTTP servlets, same as the value of the CGI variable SERVER_PORT.\n\nThe SERVER_PORT variable should store \"The TCP port on which the server is\nrunning.\"\n(http://developer.netscape.com/docs/manuals/js/server/jsref/toplev.htm#1109561).\nThat would seem to indicate that if getServerPort() is returning 80 when the\nrequest comes in on TCP port 8080, it's a bug.\n\nRyan"}, {"count": 7, "tags": [], "bug_id": 13172, "attachment_id": null, "is_private": false, "id": 41922, "time": "2003-08-01T02:30:13Z", "creator": "william.barker@wilshire.com", "creation_time": "2003-08-01T02:30:13Z", "text": "Fixed in 4.1.27.  Now HTTP/1.0 requests without a Host header report the \nconfigured port, instead of assuming that it is 80 or 443."}]