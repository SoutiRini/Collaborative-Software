[{"count": 0, "tags": [], "bug_id": 2117, "attachment_id": null, "text": "If I have a text file containing some XML, and a line in the XML file is a\nProcessingInstruction that looks like this:\n\n<?pi_target command=\"pi_data\"?>\n\nand then parst this file using the DOMParser, the resulting Document stores the\nstring 'command=\"pi_data\"' as the entire ProcessingInstruction's data value,\nwhich if converting the Document back to file, the same line would be written as:\n\n<?pi_targe command=\"command=\"pi_data\"\"?>", "id": 2861, "time": "2001-06-11T08:06:14Z", "creator": "pashford@diamondtechnologies.com", "creation_time": "2001-06-11T08:06:14Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 2117, "attachment_id": null, "text": "I have the feeling that your expectations are wrong. 'command=\"pi_data\"' is the \nPI's data value. So as far as the parser is concerned there is nothing wrong.\nNow, you say \"would be written\", I don't know if this is actually the case or \nnot but if it is the bug would be in the serializer. This said, I doubt it's \nthe case. I simply think you expect this to be parsed by the parser for you \nwhen it's not. As far as the XML spec is concerned the content of a PI is \nsimply a string, if you want to have \"pseudo attributes\" in it, you need to \nparse them at the application level.\n", "id": 2890, "time": "2001-06-12T18:02:09Z", "creator": "lehors@apache.org", "creation_time": "2001-06-12T18:02:09Z", "is_private": false}, {"count": 2, "tags": [], "creator": "sandygao@ca.ibm.com", "attachment_id": null, "id": 2914, "time": "2001-06-13T05:58:56Z", "bug_id": 2117, "creation_time": "2001-06-13T05:58:56Z", "is_private": false, "text": "I agree with Arnaud that the parser's behavior is correct. I'm changing the \nstatus to \"INVALID\"."}, {"count": 3, "tags": [], "creator": "pashford@diamondtechnologies.com", "attachment_id": null, "text": "Sorry about this.  I just found the actuall bug in another piece of code, \nsomeone else had written.  You are correct, and I should have realized this \nbefore actually posting this bug report. Thank you for looking into this, \nhowever.", "id": 2917, "time": "2001-06-13T07:28:31Z", "bug_id": 2117, "creation_time": "2001-06-13T07:28:31Z", "is_private": false}]