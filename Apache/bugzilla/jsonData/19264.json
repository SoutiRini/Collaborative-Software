[{"count": 0, "tags": [], "bug_id": 19264, "attachment_id": null, "id": 35939, "time": "2003-04-24T04:16:41Z", "creator": "yatesmi@nortelnetworks.com", "creation_time": "2003-04-24T04:16:41Z", "is_private": false, "text": "The initialize() method in CoyoteConnector.java does not call a \nsetServerSoTimeout() on the ProtocolHandler. Meaning that the serverSoTimeout \ncan not be set in the server.xml file. This means that the PoolTcpEndpoint \n(referenced by the Http11Protocol implementation of ProtocolHandler) class \nalways uses 1000 milliseconds for the server socket timeout. \n\nThe side effect of this is that server sockets time out every one second and \nthat the this value is not configurable. Each server socket timing out throws a \nlot of garbage (especially when the secure connector is enabled)."}, {"count": 1, "tags": [], "creator": "remm@apache.org", "attachment_id": null, "id": 35942, "time": "2003-04-24T05:59:50Z", "bug_id": 19264, "creation_time": "2003-04-24T05:59:50Z", "is_private": false, "text": "Ok, that makes sense. Can you submit a patch that you would have tested ?"}, {"count": 2, "tags": [], "bug_id": 19264, "attachment_id": null, "text": "Here is a patch. I changed two files CoyoteConnector.java and Constants.orig\nI have tested this fix and all seems well.\nIf I haven't gone about this the exact right way let me know.\n\n\n\n--CoyoteConnector.java--\n224a225,229\n>     /**\n>      * Timeout value for the server socket.\n>      * Note : a value of 0 means no timeout.\n>      */\n>     private int serverSoTimeout = Constants.DEFAULT_SERVER_SO_TIMEOUT;\n422a428,448\n>      * Return the server socket timeout for this Connector.\n>      */\n>     public int getServerSoTimeout() {\n> \n>         return (serverSoTimeout);\n> \n>     }\n> \n> \n>     /**\n>      * Set the server socket timeout for this Connector.\n>      *\n>      * @param _serverSoTimeout the new value for the server socket timeout\n>      */\n>     public void setServerSoTimeout(int _serverSoTimeout) {\n> \n>         this.serverSoTimeout = _serverSoTimeout;\n> \n>     }\n> \n>     /**\n1071a1098,1099\n>         IntrospectionUtils.setProperty(protocolHandler, \"serverSoTimeout\", \n>                                        \"\" + serverSoTimeout);\n\n\n--Constants.java--\n76a77\n>     public static final int DEFAULT_SERVER_SO_TIMEOUT = 1000;\n\n\n\n\n", "id": 35951, "time": "2003-04-24T06:46:13Z", "creator": "yatesmi@nortelnetworks.com", "creation_time": "2003-04-24T06:46:13Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 19264, "text": "If that's in milliseconds, and you found out the default value causes trouble,\nmaybe it can be made to be higher by default (reasonable defalts should be\nprovided). What value do you recommend in production for that setting ? 5 - 10 s ?\n\n+1 for the patch for 4.1.x.\nI'm in favor of a more generic solution for 5.x ASAP (the current alpha builds\ndon't mean much anyway, so there's no problem with delaying them). No more hacks !", "id": 35965, "time": "2003-04-24T09:38:26Z", "creator": "remm@apache.org", "creation_time": "2003-04-24T09:38:26Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 19264, "attachment_id": null, "text": "I'm not sure what a reasonable value should be. I think it depends a little bit \non your enironment. \n\nI ran a couple of soak tests (with no requests. Just tomcat sitting there) over \nthe weekend and found:\n1) That if you specificy 0 as the serverSoTimeout then heap size does not grow\n2) That if you run tomcat with the -Xmx(size) that the heap size does not grow. \n\nI am not sure what the default of -Xmx is on JDK1.4.1 HotSpot (Solaris) but we \nsaw the heap growing beyond 400Meg if we did NOT specify -Xmx or a timeout of \n0. \n\nI am not sure I understand the purpose of timing out the socket on a regular \nbasis. What is wrong with 0 as a timeout value?\n\nThe other thing is that the serverSoTimeout value probably need to be different \nfor \"standard\" and \"secure\" connectors. Certainly the amount of garbage thrown \nwhen just a standard connector is configured is a LOT less than a secure \nconnector.\n\n", "id": 36197, "time": "2003-04-27T23:56:13Z", "creator": "yatesmi@nortelnetworks.com", "creation_time": "2003-04-27T23:56:13Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 19264, "attachment_id": null, "text": "I assume 0 means no timeout (that's why it would fix the problem). I'm not sure\nwhat's the use of throwing an exception once the socket has waited a certain\namount of time in the accept.\nI think defaulting to 0 is ok for most (all ?) environments.", "id": 36208, "time": "2003-04-28T07:27:51Z", "creator": "remm@apache.org", "creation_time": "2003-04-28T07:27:51Z", "is_private": false}, {"count": 6, "tags": [], "bug_id": 19264, "attachment_id": null, "text": "This has been fixed. 0 is the default for optimal performance (which AFAIK was\nwhat was used with the old connector). Let me know if you experience trouble\nwith that setting.", "id": 36249, "time": "2003-04-28T17:25:55Z", "creator": "remm@apache.org", "creation_time": "2003-04-28T17:25:55Z", "is_private": false}]