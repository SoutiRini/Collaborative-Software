[{"count": 0, "tags": [], "text": "java.net.URLDecoder sometimes can't handle decoding correctry.\nIt depends on behaviour of IE's encoding.\n\nBut Tomcat can handle decoding correctry. So I made a patch of decoding in \nreference to Tomcat decoding (org.apache.catalina.util.RequestUtil class).\n\nRegards,", "attachment_id": null, "id": 84198, "creator": "kanekotky@yahoo.co.jp", "time": "2006-01-04T02:55:00Z", "bug_id": 38115, "creation_time": "2006-01-04T02:55:00Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 38115, "attachment_id": 17320, "text": "Created attachment 17320\npatch forJOrphanUtils", "id": 84199, "time": "2006-01-04T02:56:15Z", "creator": "kanekotky@yahoo.co.jp", "creation_time": "2006-01-04T02:56:15Z", "is_private": false}, {"count": 2, "tags": [], "text": "Under what circumstances does java.net.URLDecoder not work correctly?\n\nCan you provide some examples that we can add to a test case?", "attachment_id": null, "id": 84203, "creator": "sebb@apache.org", "time": "2006-01-04T11:13:03Z", "bug_id": 38115, "creation_time": "2006-01-04T11:13:03Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 38115, "attachment_id": 17369, "text": "Created attachment 17369\nEncoding Test JSP Example\n\nThis JSP is tested on Tomcat5.0.30 and WindowsXP(Japanese).", "id": 84357, "time": "2006-01-09T11:38:55Z", "creator": "kanekotky@yahoo.co.jp", "creation_time": "2006-01-09T11:38:55Z", "is_private": false}, {"count": 4, "tags": [], "creator": "kanekotky@yahoo.co.jp", "attachment_id": null, "id": 84359, "time": "2006-01-09T11:45:45Z", "bug_id": 38115, "creation_time": "2006-01-09T11:45:45Z", "is_private": false, "text": "Hi Sebb,\n\nThank you for replying.\n\nI attached new JSP Example for encode/decode tests.\nI expect you will be able to understand circumstances on java.net.URLDecoder.\nPlease check it out.\n\nRegards,"}, {"count": 5, "tags": [], "text": "org.apache.commons.codec.net.URLCodec#encode/decode is better than java.net.URLEncoder/URLDecoder.\n\njava.net.URLDecoder cannot decode correctly in this case:\n\n===example\nString s = \"\u767b\u9332\";\n\nString commons_encoded = new URLCodec(\"MS932\").encode(s);\nSystem.out.println(\"Encoded by commons-codec: \" + commons_encoded);\n// outputs: Encoded by commons-codec: %93o%98%5E\n// some CJK multi-byte encodings use ASCII area at second byte.\n// IE and Firefox (and some other browsers) encodes like as this.\n\nString java_encoded = URLEncoder.encode(s, \"MS932\");\nSystem.out.println(\"Encoded by java.net.URLEncoder: \" + java_encoded);\n// outputs: Encoded by java.net.URLEncoder: %93%6F%98%5E\n\nSystem.out.println(URLDecoder.decode(java_encoded, \"MS932\"));      //OK\nSystem.out.println(URLDecoder.decode(commons_encoded, \"MS932\"));   //NG\nSystem.out.println(new URLCodec(\"MS932\").decode(java_encoded));    //OK\nSystem.out.println(new URLCodec(\"MS932\").decode(commons_encoded)); //OK\n===end example", "attachment_id": null, "id": 149342, "creator": "takatsuru.tetsuya@nttcom.co.jp", "time": "2011-09-16T22:01:43Z", "bug_id": 38115, "creation_time": "2011-09-16T22:01:43Z", "is_private": false}, {"count": 6, "tags": [], "bug_id": 38115, "attachment_id": 27517, "text": "Created attachment 27517\nusing Commons URLCodec instead of java.net.URLDecoder/Encoder", "id": 149343, "time": "2011-09-16T22:14:13Z", "creator": "takatsuru.tetsuya@nttcom.co.jp", "creation_time": "2011-09-16T22:14:13Z", "is_private": false}, {"count": 7, "tags": [], "bug_id": 38115, "attachment_id": 27518, "text": "Created attachment 27518\nscreenshot when running my example", "id": 149344, "time": "2011-09-16T22:31:49Z", "creator": "takatsuru.tetsuya@nttcom.co.jp", "creation_time": "2011-09-16T22:31:49Z", "is_private": false}, {"count": 8, "tags": [], "creator": "p.mouawad@ubik-ingenierie.com", "attachment_id": null, "id": 151428, "time": "2011-11-12T11:46:37Z", "bug_id": 38115, "creation_time": "2011-11-12T11:46:37Z", "is_private": false, "text": "\n\n*** This bug has been marked as a duplicate of bug 45132 ***"}]