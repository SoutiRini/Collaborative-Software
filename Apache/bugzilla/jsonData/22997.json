[{"count": 0, "tags": [], "creator": "lichadexun@yahoo.com", "attachment_id": null, "text": "For the following code snippet:\n\nString s = \"1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 \";\norg.apache.regexp.RE re = new org.apache.regexp.RE(\"([0-9]+ ){17}\");\nSystem.out.println(re.match(s));\n\nBasically i have a string s that consists of a number followed by a whitespace,\nrepeated 17 times. To verify this pattern, my RE uses \"[0-9]+\" to denote the \nnumber, followed by a whitespace \" \", and the 2 are grouped by \"()\", then \nfollowed by the repetition operator {n} (shown above n=17).\n\nThe match result should be \"true\" for n=1 to 17. it does return \"true\" if you \nstart n from 1 and increase all the way to 15. But as soon as n >= 16, an \nArrayIndexOutOfBounds will be thrown with the number \"n\", which seems to \nindicate some hard-coding of capacity somewhere in the code.\n\nI tried this on both REGEXP 1.2 and 1.3. same results.", "id": 43847, "time": "2003-09-08T17:02:48Z", "bug_id": 22997, "creation_time": "2003-09-08T17:02:48Z", "is_private": false}, {"count": 1, "tags": [], "creator": "vgritsenko@apache.org", "is_private": false, "text": "Sorry, can't reproduce. I patched RETest:\n\nIndex: src/java/org/apache/regexp/RETest.java\n===================================================================\nRCS file: /home/cvs/jakarta-regexp/src/java/org/apache/regexp/RETest.java,v\nretrieving revision 1.7\ndiff -u -r1.7 RETest.java\n--- src/java/org/apache/regexp/RETest.java      7 Sep 2003 15:04:14 -0000       1.7\n+++ src/java/org/apache/regexp/RETest.java      9 Sep 2003 01:27:56 -0000\n@@ -619,5 +619,8 @@\n             fail(\"Wrong subst() result: \" + s);\n         }\n\n+        r = new RE(\"([0-9]+ ){17}\");\n+        System.out.println(r.match(\"1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 \"));\n+        System.exit(0);\n     }\n }\n\n\nThen, I ran \"ant test\". Have not seen any exception and got \"true\" on the\nconsole. I tested against CVS version.\n\nPlease provide more details on how to reproduce this issue.\n\nVadim\n", "id": 43863, "time": "2003-09-09T01:33:48Z", "bug_id": 22997, "creation_time": "2003-09-09T01:33:48Z", "attachment_id": null}, {"count": 2, "tags": [], "creator": "lichadexun@yahoo.com", "attachment_id": null, "text": "OK. I was running the snippet from Eclipse's JPage and got the error. I tried \nthe same code in a standalone class file and ran from java commandline (outside \nEclipse), and did not get the error. so i guess the apache regexp library is \nOK. but still i cannot explain the error from JPage, which looked like it's \nfrom RE. here's the stack trace when n=17, strictly FYI - i don't expect \ndevelopers from this group to debug, if it's an eclipse problem.\n\njava.lang.ArrayIndexOutOfBoundsException: 17\n\tat org.apache.regexp.RE.getParenEnd(RE.java:724)\n\tat org.apache.regexp.RE.matchNodes(RE.java:942)\n\tat org.apache.regexp.RE.matchNodes(RE.java:1376)\n\tat org.apache.regexp.RE.matchNodes(RE.java:910)\n\tat org.apache.regexp.RE.matchNodes(RE.java:933)\n\tat org.apache.regexp.RE.matchNodes(RE.java:1376)\n\tat org.apache.regexp.RE.matchNodes(RE.java:910)\n\tat org.apache.regexp.RE.matchNodes(RE.java:933)\n\tat org.apache.regexp.RE.matchNodes(RE.java:1376)\n\tat org.apache.regexp.RE.matchNodes(RE.java:910)\n\tat org.apache.regexp.RE.matchNodes(RE.java:933)\n\tat org.apache.regexp.RE.matchNodes(RE.java:1376)\n\tat org.apache.regexp.RE.matchNodes(RE.java:910)\n\tat org.apache.regexp.RE.matchNodes(RE.java:933)\n\tat org.apache.regexp.RE.matchNodes(RE.java:1376)\n\tat org.apache.regexp.RE.matchNodes(RE.java:910)\n\tat org.apache.regexp.RE.matchNodes(RE.java:933)\n\tat org.apache.regexp.RE.matchNodes(RE.java:1376)\n\tat org.apache.regexp.RE.matchNodes(RE.java:910)\n\tat org.apache.regexp.RE.matchNodes(RE.java:933)\n\tat org.apache.regexp.RE.matchNodes(RE.java:1376)\n\tat org.apache.regexp.RE.matchNodes(RE.java:910)\n\tat org.apache.regexp.RE.matchNodes(RE.java:933)\n\tat org.apache.regexp.RE.matchNodes(RE.java:1376)\n\tat org.apache.regexp.RE.matchNodes(RE.java:910)\n\tat org.apache.regexp.RE.matchNodes(RE.java:933)\n\tat org.apache.regexp.RE.matchNodes(RE.java:1376)\n\tat org.apache.regexp.RE.matchNodes(RE.java:910)\n\tat org.apache.regexp.RE.matchNodes(RE.java:933)\n\tat org.apache.regexp.RE.matchNodes(RE.java:1376)\n\tat org.apache.regexp.RE.matchNodes(RE.java:910)\n\tat org.apache.regexp.RE.matchNodes(RE.java:933)\n\tat org.apache.regexp.RE.matchNodes(RE.java:1376)\n\tat org.apache.regexp.RE.matchNodes(RE.java:910)\n\tat org.apache.regexp.RE.matchNodes(RE.java:933)\n\tat org.apache.regexp.RE.matchNodes(RE.java:1376)\n\tat org.apache.regexp.RE.matchNodes(RE.java:910)\n\tat org.apache.regexp.RE.matchNodes(RE.java:933)\n\tat org.apache.regexp.RE.matchNodes(RE.java:1376)\n\tat org.apache.regexp.RE.matchNodes(RE.java:910)\n\tat org.apache.regexp.RE.matchNodes(RE.java:933)\n\tat org.apache.regexp.RE.matchNodes(RE.java:1376)\n\tat org.apache.regexp.RE.matchNodes(RE.java:910)\n\tat org.apache.regexp.RE.matchNodes(RE.java:933)\n\tat org.apache.regexp.RE.matchNodes(RE.java:1376)\n\tat org.apache.regexp.RE.matchNodes(RE.java:910)\n\tat org.apache.regexp.RE.matchNodes(RE.java:933)\n\tat org.apache.regexp.RE.matchNodes(RE.java:1376)\n\tat org.apache.regexp.RE.matchNodes(RE.java:910)\n\tat org.apache.regexp.RE.matchNodes(RE.java:933)\n\tat org.apache.regexp.RE.matchNodes(RE.java:1376)\n\tat org.apache.regexp.RE.matchNodes(RE.java:910)\n\tat org.apache.regexp.RE.matchAt(RE.java:1448)\n\tat org.apache.regexp.RE.match(RE.java:1498)\n\tat org.apache.regexp.RE.match(RE.java:1468)\n\tat org.apache.regexp.RE.match(RE.java:1561)\n\tat CodeSnippet_2.run(CodeSnippet_2.java:5)\n\tat org.eclipse.jdt.internal.debug.ui.snippeteditor.ScrapbookMain1.eval\n(ScrapbookMain1.java:14)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke\n(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke\n(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:324)\n\tat \norg.eclipse.jdt.internal.debug.ui.snippeteditor.ScrapbookMain.evalLoop\n(ScrapbookMain.java:48)\n\tat org.eclipse.jdt.internal.debug.ui.snippeteditor.ScrapbookMain.main\n(ScrapbookMain.java:29)\n", "id": 43907, "time": "2003-09-09T18:53:18Z", "bug_id": 22997, "creation_time": "2003-09-09T18:53:18Z", "is_private": false}, {"attachment_id": null, "tags": [], "bug_id": 22997, "text": "You've got somewhere a 1.2 version of the regexp library, and 1.2 version has\nthe error you mentioned, it was limited to 16 parens. This error was since then\nfixed, and fix was released as part of version 1.3.\n\nYou can see the source code for version 1.2 here:\nhttp://cvs.apache.org/viewcvs.cgi/jakarta-regexp/src/java/org/apache/regexp/RE.java?annotate=1.6\n\n(closing the bug)", "count": 3, "id": 43910, "time": "2003-09-09T20:00:06Z", "creator": "vgritsenko@apache.org", "creation_time": "2003-09-09T20:00:06Z", "is_private": false}]