[{"count": 0, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "text": "There is a small glitch with NIO and NIO2 with OpenSSL. Because the code doesn't specify a set of trusted certs, OpenSSL doesn't send any CA names to the user agent which in turn (typically) opts to display all of the available client certs. If the user has a lot of certs it can take time to find the right one.", "id": 200239, "time": "2017-08-08T20:16:01Z", "bug_id": 61394, "creation_time": "2017-08-08T20:16:01Z", "is_private": false}, {"count": 1, "attachment_id": null, "creator": "rainer.jung@kippdata.de", "is_private": false, "id": 200240, "time": "2017-08-08T20:46:03Z", "bug_id": 61394, "creation_time": "2017-08-08T20:46:03Z", "tags": [], "text": "The OpenSSL call for this should be SSL_CTX_set_client_CA_list() (at least mod_ssl in Apache httpd uses it).\n\nWe already wired that functionality in tcnative, file native/src/sslcontext.c, function setCACertificate. It gets alrady called in org.apache.tomcat.jni.SSLContext.setCACertificate(long ctx, String file, String path) which in trun is (conditionally) called from org.apache.tomcat.util.net.openssl.OpenSSLContext.init(...) and org.apache.tomcat.util.net.AprEndpoint.createSSLContext(...). Maybe something with the setup is wrong?\n\nRegards,\n\nRainer"}, {"count": 2, "text": "I don't think we are calling that method when we are using JSSE config with the OpenSSL engine. I think we need the equivalent of the call to setCertificateRaw for the trusted certs.", "creator": "markt@apache.org", "is_private": false, "id": 200242, "time": "2017-08-08T21:08:23Z", "bug_id": 61394, "creation_time": "2017-08-08T21:08:23Z", "tags": [], "attachment_id": null}, {"count": 3, "attachment_id": null, "creator": "rainer.jung@kippdata.de", "is_private": false, "id": 200248, "time": "2017-08-09T10:07:53Z", "bug_id": 61394, "creation_time": "2017-08-09T10:07:53Z", "tags": [], "text": "OK, so the problem is only occuring if JSSE style config is used?\n\nAnd the attempt would be to read CA certs from the configured truststore, pass them as raw data to a new method setCACertificateRaw(), whose native impl converts them to OpenSSL X509 analogous to setCertificateRaw() and passes the result directly to OpenSSL via SSL_CTX_set_client_CA_list().\n\nIs that what you expect?\n\nI might give it an attempt this evening.\n\nNote that our docs say:\n\n###################\ntrustManagerClassName\t\n\nJSSE only.\n\nThe name of a custom trust manager class to use to validate client certificates. The class must have a zero argument constructor and must also implement javax.net.ssl.X509TrustManager. If this attribute is set, the trust store attributes may be ignored.\n###################\n\nSo retrieving CA certs from a configured trust store might give wrong results, if e.g. a custom trust manager gets used and a trust store is configured, that the trust manager would not use but we would still use it to feed OpenSSL. One could argue that would be a configuration issue, but at least the docs (\"may be ignored\") would open to interpretation then.\n\nRegards,\n\nRainer"}, {"count": 4, "tags": [], "bug_id": 61394, "attachment_id": null, "is_private": false, "id": 200253, "time": "2017-08-09T15:18:39Z", "creator": "markt@apache.org", "creation_time": "2017-08-09T15:18:39Z", "text": "Yes, this is JSSE style config only.\n\nYes, I was thinking along the lines you describe.\n\nRegarding the custom trust manager, what I think Tomcat needs to do is replicate what JSSE does which is:\n- iterate through the provided TrustManager instances array and select the first instance of X509TrustManager\n- call getAcceptedIssuers() on that instance to get the list of acceptable CAs\n\nThen Tomcat can pass that array of X509Certificates to OpenSSL.\n\nThat should then give us equivalent behaviour for the same configuration with either implementation."}, {"count": 5, "tags": [], "creator": "stanchev@hotmail.com", "is_private": false, "text": "I don't mean to derail the discussion but we implement a trust-all manager thats gets injected from the connector attrobutes:\n\npublic class AnyCertX509TrustManager implements X509TrustManager {\n    public void checkClientTrusted(X509Certificate[] certs, String auth) {}\n    public void checkServerTrusted(X509Certificate[] certs, String auth) {}\n    public X509Certificate[] getAcceptedIssuers() { return new X509Certificate[0]; }\n}\n\nIn case of OpenSSL setup, would the proposed approach to send the accepted issuers as [0] sized array of certs mean \"trust-all\" to OpenSSL or \"trust-none\"", "id": 200254, "time": "2017-08-09T15:27:09Z", "bug_id": 61394, "creation_time": "2017-08-09T15:27:09Z", "attachment_id": null}, {"count": 6, "tags": [], "bug_id": 61394, "attachment_id": null, "is_private": false, "id": 200255, "time": "2017-08-09T15:36:09Z", "creator": "markt@apache.org", "creation_time": "2017-08-09T15:36:09Z", "text": "Currently no trusted certs means trust all. I don't see a reason to change that."}, {"count": 7, "tags": [], "bug_id": 61394, "attachment_id": 35210, "is_private": false, "id": 200260, "time": "2017-08-10T03:42:32Z", "creator": "rainer.jung@kippdata.de", "creation_time": "2017-08-10T03:42:32Z", "text": "Created attachment 35210\nTC trunk support adding client CA list from trust managers"}, {"count": 8, "tags": [], "bug_id": 61394, "attachment_id": null, "text": "The patch is based on the native extension committed in r1804622.\n\nPlease also note a related fix I noticed when looking at that part of the code (r1804595).\n\nI started some testing for the attached patch and will add some new test cases. Simple preliminary tests look OK.\n\nNote that the patch also moved the code for the \"use files instead of trust managers\" case.", "id": 200261, "time": "2017-08-10T03:44:31Z", "creator": "rainer.jung@kippdata.de", "creation_time": "2017-08-10T03:44:31Z", "is_private": false}, {"count": 9, "tags": [], "text": "I applied the patch, wrapping the new native call in a check for a UnsatisfiedLinkError to not break compatibility with older tcnative.\n\nI also added one new test and checks to existing tests to detcet, whether a CA for client cert is contained in the handshake and whether it is the right one.\n\nWe need to decide, whether and how to backport, since the fix relies on the not yet released tcnative 1.2.13. Eve once it is released it might not be widely available.", "is_private": false, "id": 200284, "creator": "rainer.jung@kippdata.de", "time": "2017-08-13T14:41:24Z", "bug_id": 61394, "creation_time": "2017-08-13T14:41:24Z", "attachment_id": null}, {"count": 10, "tags": [], "text": "I am unable to debug the exact SSL error but I too have a problem with OpenSSL & NIO (or NIO2) when I have truststoreFile setup.\n\nAs soon as I enable certificateVerification I start getting SSL errors in chrome. If I switch to JSSE it works as advertised. I can set the verification to optional and not select a certificate and still get the same error.\n\n    <Connector port=\"8443\" protocol=\"org.apache.coyote.http11.Http11NioProtocol\"\n               maxThreads=\"150\" SSLEnabled=\"true\">\n\t\t<SSLHostConfig truststoreFile=\"conf/truststore.jks\" truststorePassword=\"test\" certificateVerification=\"optional\">\n            <Certificate certificateKeystoreFile=\"conf/keystore.jks\"\n                         certificateKeystorePassword=\"test\"\n                         type=\"RSA\" />\n        </SSLHostConfig>\n    </Connector>\n\nIf I open the page in IE it lists all the certificates.\nIs there any chance to get a 1.2.13 snapshot build to test it on windows x64?", "is_private": false, "id": 200303, "creator": "matej.spiller@gmail.com", "time": "2017-08-14T19:20:44Z", "bug_id": 61394, "creation_time": "2017-08-14T19:20:44Z", "attachment_id": null}, {"count": 11, "tags": [], "creator": "matej.spiller@gmail.com", "attachment_id": 35228, "text": "Created attachment 35228\nscreenshot of a chrome ssl protocl error", "id": 200304, "time": "2017-08-14T19:21:36Z", "bug_id": 61394, "creation_time": "2017-08-14T19:21:36Z", "is_private": false}, {"count": 12, "attachment_id": null, "creator": "markt@apache.org", "is_private": false, "id": 200567, "time": "2017-09-01T16:21:25Z", "bug_id": 61394, "creation_time": "2017-09-01T16:21:25Z", "tags": [], "text": "comment #10 looks like the renegotiation issues that were fixed in 1.2.13. I can't reproduce the issue.\n\nI've tested this with 1.2.14 and various combinations and all now behave as expected.\n\nOnce 1.2.14 is available and Tomcat has been updated to require it, this can be closed."}, {"count": 13, "tags": [], "bug_id": 61394, "text": "9.0.x and 8.5.x have been updated to require 1.2.14", "id": 200748, "time": "2017-09-08T09:07:56Z", "creator": "markt@apache.org", "creation_time": "2017-09-08T09:07:56Z", "is_private": false, "attachment_id": null}]