[{"count": 0, "tags": [], "creator": "richard.evans@blueallegro.net", "attachment_id": null, "id": 183989, "time": "2015-07-11T18:43:58Z", "bug_id": 58125, "creation_time": "2015-07-11T18:43:58Z", "is_private": false, "text": "Tomcat 8.0.24, Java 1.8u45.\n\nRun Tomcat is run with a Java security manager, and a ppolicy file containing a grant to a principal class, as in:\n\ngrant principal javax.management.remote.JMXPrincipal \"jmx\" {\n    permission java.security.AllPermission;\n\n};\n\nOn a thread with an implied Subject containing at least one Principal, perform an action which requires a Java permission check.  The Java Policy file implementation will attempt to load the principal class from the policy file.  The tomcat WebAppClassLoaderBase.loadClass method will check for a system class using getResource on the system loader.  This will in turn trigger another permission check which will then attempt to load the principal class again, triggering the ClassCircularityError.  \n\nHere's a stack trace extract showing the error:\n\nClass<T>.forName(String, boolean, ClassLoader) line: 348\t\nPolicyFile.addPermissions(Permissions, CodeSource, Principal[], PolicyFile$PolicyEntry) line: 1357\t\nPolicyFile.getPermissions(Permissions, CodeSource, Principal[]) line: 1228\t\nPolicyFile.getPermissions(Permissions, ProtectionDomain) line: 1191\t\nPolicyFile.getPermissions(ProtectionDomain) line: 1132\t\nPolicyFile.implies(ProtectionDomain, Permission) line: 1086\t\nProtectionDomain.implies(Permission) line: 272\t\nAccessControlContext.checkPermission(Permission) line: 435\t\nAccessController.checkPermission(Permission) line: 884\t\nSecurityManager.checkPermission(Permission) line: 549\t\nURLClassPath.check(URL) line: 607\t\nURLClassPath$JarLoader.checkResource(String, boolean, JarEntry) line: 924\t\nURLClassPath$JarLoader.getResource(String, boolean) line: 1007\t\nURLClassPath.getResource(String, boolean) line: 212\t\nURLClassPath.getResource(String) line: 265\t\nClassLoader.getBootstrapResource(String) line: 1261\t\nLauncher$ExtClassLoader(ClassLoader).getResource(String) line: 1090\t\nWebappClassLoader(WebappClassLoaderBase).loadClass(String, boolean) line: 1230\t\nWebappClassLoader(WebappClassLoaderBase).loadClass(String) line: 1164\t\nClass<T>.forName0(String, boolean, ClassLoader, Class<?>) line: not available [native method]\t\nClass<T>.forName(String, boolean, ClassLoader) line: 348\t\nPolicyFile.addPermissions(Permissions, CodeSource, Principal[], PolicyFile$PolicyEntry) line: 1357\t\nPolicyFile.getPermissions(Permissions, CodeSource, Principal[]) line: 1228\t\nPolicyFile.getPermissions(Permissions, ProtectionDomain) line: 1191\t\nPolicyFile.getPermissions(ProtectionDomain) line: 1132\t\nPolicyFile.implies(ProtectionDomain, Permission) line: 1086\t\nProtectionDomain.implies(Permission) line: 272\t\nAccessControlContext.checkPermission(Permission) line: 435\t\nAccessController.checkPermission(Permission) line: 884\t\nSecurityManager.checkPermission(Permission) line: 549\t\nSecurityManager.checkRead(String) line: 888"}, {"count": 1, "tags": [], "creator": "richard.evans@blueallegro.net", "attachment_id": 32897, "id": 183990, "time": "2015-07-11T19:01:55Z", "bug_id": 58125, "creation_time": "2015-07-11T19:01:55Z", "is_private": false, "text": "Created attachment 32897\nHand crafted test case which provokes similar error"}, {"count": 2, "tags": [], "bug_id": 58125, "attachment_id": 32898, "text": "Created attachment 32898\nJava policy file for use with test", "id": 183991, "time": "2015-07-11T19:02:31Z", "creator": "richard.evans@blueallegro.net", "creation_time": "2015-07-11T19:02:31Z", "is_private": false}, {"count": 3, "tags": [], "text": "Run test with:\n\n$ java -Djava.security.manager -Djava.security.policy==all.policy  rde.tests.security.perm", "attachment_id": null, "id": 183992, "creator": "richard.evans@blueallegro.net", "time": "2015-07-11T19:03:12Z", "bug_id": 58125, "creation_time": "2015-07-11T19:03:12Z", "is_private": false}, {"attachment_id": null, "tags": [], "creator": "markt@apache.org", "text": "Thanks for the report. This has been fixed in trunk and 8.0.x for 8.0.25 onwards. 7.0.x does not use getResource() to avoid the CNFE so is not affected by this bug.", "count": 4, "id": 184232, "time": "2015-07-30T14:16:47Z", "bug_id": 58125, "creation_time": "2015-07-30T14:16:47Z", "is_private": false}, {"count": 5, "tags": [], "text": "*** Bug 58199 has been marked as a duplicate of this bug. ***", "attachment_id": null, "bug_id": 58125, "id": 184348, "time": "2015-08-05T14:03:40Z", "creator": "markt@apache.org", "creation_time": "2015-08-05T14:03:40Z", "is_private": false}]