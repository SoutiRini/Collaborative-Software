[{"count": 0, "tags": [], "bug_id": 29, "is_private": false, "text": "When logging an exception, LOG4J 1.0.2 runs into a NullPointerExcepion under the \nfollowing circumstances (stack trace  and properties file is below):\n\nI have two categories:\ngl.exception\ngl.exception.stack\n\nI defined a static category in the Exception Class:\nprivate static final Category LOG = Category.getInstance(\"gl.exception\");\n\nIn the constructor of the Exception I log the exceptionusng the following code:\nLOG.error(this.getLocalizedMessage(), this);\n\nNow LOG4J get'S a NullPointerException in the method\nCategory.forcedLog(String, Priority, Object, Throwable)\nThis is because myCategory is null.\n\nThis happens only if I have defined both of the categories in the configuration \nfile. if there is on gl.exception in it, there is no error. I assume it has \nsomething to do with the new \"hierarchie management\" in the category classes \nthat was mentioned.\n\nHere is the configuration file:\n\nlog4j.rootCategory=DEBUG, stdout\n\nlog4j.category.gl.servlet=DEBUG\nlog4j.category.gl.dispatcher=DEBUG\nlog4j.category.gl.ucc=DEBUG\nlog4j.category.gl.ejb=DEBUG\nlog4j.category.gl.communication=DEBUG\nlog4j.category.gl.businesscommand=DEBUG\nlog4j.category.gl.xml=DEBUG\nlog4j.category.gl.bucket=DEBUG\nlog4j.category.gl.gui=DEBUG\nlog4j.category.gl.exception=ERROR\nlog4j.category.gl.exception.stack=ERROR\n\nlog4j.appender.stdout=org.apache.log4j.FileAppender\nlog4j.appender.stdout.File=System.out\n\nlog4j.appender.stdout.layout=org.apache.log4j.PatternLayout\nlog4j.appender.stdout.layout.ConversionPattern=%d{ISO8601} [%t] %-5p %c %x - \n%m%n\n\nlog4j.appender.file=org.log4j.RollingFileAppender\nlog4j.appender.file.File=rolling.log\nlog4j.appender.file.MaxFileSize=100KB\nlog4j.appender.file.MaxBackupIndex=2\nlog4j.appender.file.layout=org.apache.log4j.PatternLayout\nlog4j.appender.file.layout.ConversionPattern=%d{ISO8601} %p %t %c - %m%n\n\n\nDebugger Stack Trace Report:\n\nThread[main,5,main] (Alive)\nUncaught exception (java.lang.NullPointerException)\n\n\tCategory.forcedLog(String, Priority, Object, Throwable)\n\t\tthis=(org.apache.log4j.Category) org.apache.log4j.Category@2f65\n\t\tfqn=(java.lang.String) org.apache.log4j.Category\n\t\tpriority=(org.apache.log4j.Priority) ERROR\n\t\tmessage=(java.lang.Object) null\n\t\tt=(java.lang.Throwable) \ntest.org.germanlloyd.tec.log.TestException\n\t\ts=(java.lang.String) null\n\tCategory.error(Object, Throwable)\n\t\tthis=(org.apache.log4j.Category) org.apache.log4j.Category@2f65\n\t\tmessage=(java.lang.Object) null\n\t\tt=(java.lang.Throwable) \ntest.org.germanlloyd.tec.log.TestException\n\tTestException()\n\t\tthis=(test.org.germanlloyd.tec.log.TestException) \ntest.org.germanlloyd.tec.log.TestException\n\tTestLog.main(String [])\n\t\targs=([Ljava.lang.String;) [Ljava.lang.String;@4e1c", "id": 9, "time": "2001-01-11T08:37:20Z", "creator": "woge@germanlloyd.org", "creation_time": "2001-01-11T08:37:20Z", "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 29, "is_private": false, "id": 10, "attachment_id": null, "creator": "bugzilla@apache.org", "creation_time": "2001-01-11T14:24:08Z", "time": "2001-01-11T14:24:08Z", "text": "Wolfram,\n\nI have tried the config file you supplied with the program supplied below. It \nworked just fine. Can you maybe try it? Ceki\n\nimport org.apache.log4j.PropertyConfigurator;\nimport org.apache.log4j.Category;\n\npublic class x {\n\n  private static final Category LOG = Category.getInstance(\"gl.exception\");\n\n  public \n  static \n  void main(String argv[]) {\n    PropertyConfigurator.configure(argv[0]);\n    LOG.error(\"Hello\");\n  }\n}\n"}, {"count": 2, "tags": [], "text": "\nOK. I can reliably reproduce the bug as follows:\n\nFile x.java -------------------------------------------------\nimport org.apache.log4j.PropertyConfigurator;\nimport org.apache.log4j.Category;\n\npublic class x {\n\n  public \n  static \n  void main(String argv[]) {\n    PropertyConfigurator.configure(argv[0]);\n    Category LOG = Category.getInstance(\"gl.exception\");\n    LOG.error(new Integer(0));\n  }\n}\n-------------------------------------------------------------\n\nFile x.lcf --------------------------------------------------\nlog4j.rootCategory=DEBUG, stdout\nlog4j.category.gl.exception.stack=ERROR\nlog4j.appender.stdout=org.apache.log4j.FileAppender\nlog4j.appender.stdout.File=System.out\nlog4j.appender.stdout.layout=org.apache.log4j.PatternLayout\nlog4j.appender.stdout.layout.ConversionPattern=%d{ISO8601} [%t] %-5p %c %x - %m%\nn\n--------------------------------------------------------------------------\n\nThis will systematically result in:\n\nUpdateParents called for gl.exception.stack\nUpdating parent : gl.exception\nNo parent gl.exception found. Creating ProvisionNode.\nUpdating parent : gl\nNo parent gl found. Creating ProvisionNode.\nUpdateParents called for gl.exception\nUpdating parent : gl\nException in thread \"main\" java.lang.NullPointerException\n        at org.apache.log4j.Category.forcedLog(Category.java:452)\n        at org.apache.log4j.Category.error(Category.java:367)\n        at x.main(x.java:12)\n\nI know what the problem is and the fix is on the way! Ceki\n", "is_private": false, "id": 12, "creator": "bugzilla@apache.org", "time": "2001-01-11T14:54:19Z", "bug_id": 29, "creation_time": "2001-01-11T14:54:19Z", "attachment_id": null}]