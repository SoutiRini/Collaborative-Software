[{"count": 0, "tags": [], "text": "According to the document, mod_proxy_http supports X-Forwarded-For, X-Forwarded-Host and X-Forwarded-Server.\nLast year RFC 7239 standardized a new Forwarded header.", "is_private": false, "id": 183321, "creator": "takashi.asfbugzilla@tks.st", "time": "2015-06-04T07:51:25Z", "bug_id": 58001, "creation_time": "2015-06-04T07:51:25Z", "attachment_id": null}, {"count": 1, "tags": [], "creator": "bz.apache.org@chsc.dk", "text": "Created attachment 35207\nAdd Forwarded header\n\nThis patch adds the Forwarded header in the same manor as X-Forwarded-*.\n\nI added a new configuration variable, ProxyAddForwardedHeader, in addition to ProxyAddHeaders that controls the X-Forwarded-* headers. The default is Off in order to stay conservative, but I don't know what the general policy about such things is in this project.", "id": 200241, "time": "2017-08-08T20:48:29Z", "bug_id": 58001, "creation_time": "2017-08-08T20:48:29Z", "is_private": false, "attachment_id": 35207}, {"count": 2, "tags": [], "bug_id": 58001, "is_private": false, "text": "Cool! This looks good. Except that the content of the \"Host\" header is not escaped, which could raise security threats if the request Host header contains chars like \";\n\n3635 host_param = apr_pstrcat(r->pool, \"; host=\\\"\", host, \"\\\"\", NULL);", "id": 200247, "time": "2017-08-09T10:05:32Z", "creator": "best@univention.de", "creation_time": "2017-08-09T10:05:32Z", "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 58001, "is_private": false, "count": 3, "id": 200258, "time": "2017-08-09T18:46:22Z", "creator": "bz.apache.org@chsc.dk", "creation_time": "2017-08-09T18:46:22Z", "text": "AFAICT the Host header is already sanitized. All my attempts to inject invalid characters in this header result in a \"400 Bad Request\" response.\n\nHowever, I am new to Apache development, so I'd appreciate any guidance on how to deal with this issue, i.e. which validation functions to use etc."}]