[{"count": 0, "tags": [], "creator": "fabian.dahms@gmx.net", "attachment_id": null, "is_private": false, "id": 154399, "time": "2012-03-01T09:51:19Z", "bug_id": 52802, "creation_time": "2012-03-01T09:51:19Z", "text": "Hello,\n\ni have some trouble with built the Apache 2.4.1 under Solaris X86 with OpenSSL OpenSSL 1.0.0g 18\nMy System is a X86 DEll System with SunSolaris 10\nuname -a:\nSunOS uzktr 5.10 Generic_147441-01 i86pc i386 i86pc\n\nIt seems that there is a problem in the Makefile with linking the OpenSSL objects.\nThe follow configure options are used:\n\n./configure \\\n--disable-nls \\\n--with-apxs2 \\\n--enable-fastcgi \\\n--disable-short-tags \\\n--with-openssl \\\n--with-zlib \\\n--with-imap-ssl \\\n--with-mysql \\\n--with-mysqli \\\n--with-pdo-pgsql \\\n--with-pdo-sqlite \\\n--with-pgsql \\\n--with-readline \\\n--enable-soap \\\n--enable-sockets \\\n--enable-sqlite-utf8 \\\n--enable-zip \\\n--with-zend-vm \\\n--enable-static-support \\\n--enable-static-htpasswd \\\n--enable-static-rotatelogs \\\n--enable-static-logresolve \\\n--enable-static-htdbm \\\n--enable-static-ab \\\n--enable-static-checkgid \\\n--enable-static-htcacheclean \\\n--enable-static-httxt2dbm \\\n--enable-ssl \\\n--with-ssl=/opt/ae \\\n--prefix=/opt/fd/apache2 \\\n--with-apr=/opt/ae\n\nHere the output from the Configure:\nhttp://www.wholewildworld.de/portal/upload/fabi65/configure_echo\n\nThen i try to build the sources. But  the try to link the openssl libs he doesn't find round about 17.000 symbols!?\n\nThe output from gmake:\nhttp://www.wholewildworld.de/portal/upload/fabi65/gmake_echo\n\nBy the way: The Apache 2.2.22 is buildable on my system.\n\nThanks for you help!"}, {"attachment_id": null, "tags": [], "bug_id": 52802, "is_private": false, "count": 1, "id": 154473, "time": "2012-03-03T09:10:47Z", "creator": "asfbugz@velox.ch", "creation_time": "2012-03-03T09:10:47Z", "text": "The relevant snippets are basically:\n\n/opt/ae/build-1/libtool --silent --mode=link gcc -std=gnu99 -g -O2          -o mod_ssl.la -rpath /opt/fd/apache2/modules -module -avoid-version  mod_ssl.lo ssl_engine_config.lo ssl_engine_dh.lo ssl_engine_init.lo ssl_engine_io.lo ssl_engine_kernel.lo ssl_engine_log.lo ssl_engine_mutex.lo ssl_engine_pphrase.lo ssl_engine_rand.lo ssl_engine_vars.lo ssl_scache.lo ssl_util_stapling.lo ssl_util.lo ssl_util_ssl.lo ssl_engine_ocsp.lo ssl_util_ocsp.lo  -L/opt/ae/lib -lssl -lcrypto -luuid -lsendfile -lrt -lsocket -lnsl -lpthread -export-symbols-regex ssl_module\nText relocation remains                 \treferenced\n    against symbol\t\t    offset\tin file\nSSLv3_server_method_data.0          0x1       \t/opt/ae/lib/libssl.a(s3_srvr.o)\nSSLv3_server_method_data.0          0x11      \t/opt/ae/lib/libssl.a(s3_srvr.o)\n.rodata (section)                   0x177     \t/opt/ae/lib/libssl.a(s3_srvr.o)\n.rodata (section)                   0x5b3     \t/opt/ae/lib/libssl.a(s3_srvr.o)\n.rodata (section)                   0x5e9     \t/opt/ae/lib/libssl.a(s3_srvr.o)\n[...]\nld: fatal: relocations remain against allocatable but non-writable sections\n\n\nI think that's the same issue which was mentioned quite some time ago here:\n\nhttp://mail-archives.apache.org/mod_mbox/httpd-users/200511.mbox/%3C868b524f0511031831uc343f15iac0e8b3fcc159ba1@mail.gmail.com%3E\n\n... i.e., not specific to 2.4 most likely - I assume you did not link 2.2.22 against that same OpenSSL version, or did you?"}, {"count": 2, "tags": [], "bug_id": 52802, "is_private": false, "text": "Hello,\n\nfor the compilation i have use a gcc version 3.4.6 with GNU Make 3.81 and the Solaris Linker.\n\nAnd i used the same Openssl Version for both compilations ( Apache 2.2.22 and 2.4.1). So i think that theres a problem with the Apache 2.4.1 Makefile?", "id": 154558, "time": "2012-03-06T08:09:39Z", "creator": "fabian.dahms@gmx.net", "creation_time": "2012-03-06T08:09:39Z", "attachment_id": null}, {"count": 3, "attachment_id": null, "bug_id": 52802, "text": "(In reply to comment #2)\n> for the compilation i have use a gcc version 3.4.6 with GNU Make 3.81 and the\n> Solaris Linker.\n\nOk - as far as I understand, it seems that you need to add \"-Wl,-Bsymbolic \" to the line in modules/ssl/ starting with \"$(SH_LINK)\" when using GCC and the Sun linker. Did you try that? Does it fix the problem?\n\n> And i used the same Openssl Version for both compilations ( Apache 2.2.22 and\n> 2.4.1). So i think that theres a problem with the Apache 2.4.1 Makefile?\n\nCan you provide the output of the configure command for 2.2.22 as well?", "id": 154608, "time": "2012-03-07T08:39:55Z", "creator": "asfbugz@velox.ch", "creation_time": "2012-03-07T08:39:55Z", "tags": [], "is_private": false}, {"count": 4, "tags": [], "bug_id": 52802, "text": "(In reply to comment #3)\n> the line in modules/ssl/ starting with \"$(SH_LINK)\"\n\nshould read \"modules/ssl/modules.mk\"", "id": 154610, "time": "2012-03-07T08:44:18Z", "creator": "asfbugz@velox.ch", "creation_time": "2012-03-07T08:44:18Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 52802, "is_private": false, "text": "Hello,\n\nHere the output with the exactly same configure options under 2.2.22:\nhttp://www.wholewildworld.de/portal/upload/fabi65/output_configure_2\n\nAnd here the output from gmake with the 2.2.22:\nhttp://www.wholewildworld.de/portal/upload/fabi65/gmake_2_2_22\n\n\nI have add the line in the \"-Wl,-Bsymbolic \", but unfortunately it doesent work.\nHeres the Output from gmake:\nhttp://www.wholewildworld.de/portal/upload/fabi65/output_gmake_2\n\nThanks for your Help", "id": 154618, "time": "2012-03-07T11:00:42Z", "creator": "fabian.dahms@gmx.net", "creation_time": "2012-03-07T11:00:42Z", "attachment_id": null}, {"count": 6, "tags": [], "text": "(In reply to comment #5)\n> And here the output from gmake with the 2.2.22:\n> http://www.wholewildworld.de/portal/upload/fabi65/gmake_2_2_22\n\nOk, the difference to 2.2.22 is that in this case, you're compiling/linking a static version of mod_ssl:\n\n/opt/ae/build-1/libtool --silent --mode=link gcc -g -O2   -static  -L/opt/ae/lib -R/opt/ae/lib   -o libmod_ssl.la mod_ssl.lo ssl_engine_config.lo ssl_engine_dh.lo ssl_engine_init.lo ssl_engine_io.lo ssl_engine_kernel.lo ssl_engine_log.lo ssl_engine_mutex.lo ssl_engine_pphrase.lo ssl_engine_rand.lo ssl_engine_vars.lo ssl_expr.lo ssl_expr_eval.lo ssl_expr_parse.lo ssl_expr_scan.lo ssl_scache.lo ssl_scache_dbm.lo ssl_scache_shmcb.lo ssl_scache_dc.lo ssl_util.lo ssl_util_ssl.lo  -lssl -lcrypto -lsocket -lnsl -ldl\n\n... which is then statically linked with the httpd binary in the last step.\n\nI think there are two solutions to your problem:\n\na) also compile shared libraries for OpenSSL (see its \"shared\" config option), and leave the configure command for httpd 2.4 unchanged - i.e., you will end up with a shared mod_ssl version\n\nb) use the static OpenSSL libraries, but add \"--enable-mods-static=ssl\" to the httpd 2.4 configure command (will get you httpd with a static version of mod_ssl)\n\nCan you give these options a try?\n\n(My current guess is that this is the consequence of the changes in r952007.)", "is_private": false, "bug_id": 52802, "id": 154650, "time": "2012-03-07T17:20:11Z", "creator": "asfbugz@velox.ch", "creation_time": "2012-03-07T17:20:11Z", "attachment_id": null}, {"attachment_id": null, "tags": [], "creator": "rainer.jung@kippdata.de", "is_private": false, "count": 7, "id": 154652, "time": "2012-03-07T20:22:19Z", "bug_id": 52802, "creation_time": "2012-03-07T20:22:19Z", "text": "For Apache 2.2 static module linking was default, for 2.4 shared module linking is default.\n\nSmehow I doubt, that this is the only thing responsible for the observed problem, because the misisng symbols are not only coming from the ssl libs, but are also httpd and apr symbols referenced in mod_ssl files. Something more fundamental seems to be wrong here.\n\nRainer"}, {"attachment_id": null, "tags": [], "bug_id": 52802, "is_private": false, "count": 8, "id": 154673, "time": "2012-03-08T06:03:50Z", "creator": "asfbugz@velox.ch", "creation_time": "2012-03-08T06:03:50Z", "text": "(In reply to comment #7)\n> Smehow I doubt, that this is the only thing responsible for the observed\n> problem, because the misisng symbols are not only coming from the ssl libs, but\n> are also httpd and apr symbols referenced in mod_ssl files.\n\nYes, this additional issue shows up with \"-Wl,-Bsymbolic\"  (output referenced in comment 5), but there were no errors with undefined symbols in the original output, actually (as seen from comment 1).\n\nTo be clear: my suggestion is to *not* add \"-Wl,-Bsymbolic\" when trying the options suggested in comment 6."}, {"count": 9, "tags": [], "bug_id": 52802, "is_private": false, "text": "Hello,\n\nthanks for you help, the Option --enable-mods-static=ssl works for me.\nThanks!\n\nBut for the further the configure script should  detect these option, dont you think?", "id": 154678, "time": "2012-03-08T08:18:20Z", "creator": "fabian.dahms@gmx.net", "creation_time": "2012-03-08T08:18:20Z", "attachment_id": null}, {"count": 10, "tags": [], "bug_id": 52802, "text": "(In reply to comment #9)\n> But for the further the configure script should  detect these option, dont you\n> think?\n\nNot really. Whether modules should be statically or dynamically linked is something you *tell* configure, not something it will figure out.\n\nIt might also be an issue with the specific combination of compiler and linker you're using - what compiler did you use for compiling OpenSSL, actually?\n\nOn at least two other platforms I tried, I was successful in linking a shared mod_ssl version with static OpenSSL libraries (which failed in your case, as seen from the \"gmake_echo\" output).", "id": 154719, "time": "2012-03-09T06:09:35Z", "creator": "asfbugz@velox.ch", "creation_time": "2012-03-09T06:09:35Z", "is_private": false, "attachment_id": null}, {"count": 11, "tags": [], "creator": "asfbugz@velox.ch", "attachment_id": null, "is_private": false, "id": 157148, "time": "2012-04-04T13:10:16Z", "bug_id": 52802, "creation_time": "2012-04-04T13:10:16Z", "text": "(In reply to comment #10)\n> It might also be an issue with the specific combination of compiler and linker\n> you're using - what compiler did you use for compiling OpenSSL, actually?\n\nOk, after some more digging it turns out that the behavior shown in comment 1 is the consequence of turning on a feature in Sun/Oracle's ld - see http://docs.oracle.com/cd/E19963-01/html/821-1461/ld-1.html:\n \n-z text\n    In dynamic mode only, forces a fatal error if any relocations against\n    non-writable, allocatable sections remain. [...]\n\n(see also http://docs.oracle.com/cd/E19963-01/html/819-0690/chapter4-10454.html#chapter4-29405)\n\nlibtool 2.x is calling Sun's ld with \"-z text\" by default, so on Solaris a build failure is expected when trying to compile a shared mod_ssl version against a static build of OpenSSL (for solutions to this problem, see comment 6)."}]