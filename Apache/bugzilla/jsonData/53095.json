[{"count": 0, "tags": [], "bug_id": 53095, "attachment_id": null, "text": "Copy issue ant 1.8.2 windows\n\n(Failed copy deletes targeted file even when copy is not attempted)\n\nIn this case <copy> uses \"overwrite\" but not \"force\".\n\nUsing \"force=true\" also acts as workaround.\n\n\nWhat I assume is happening based on code is targeted file canWrite fails, \"read-only\" exception is thrown, and then targeted file is deleted, which succeeds.\n\nThe later part is what i observe, read-only exception followed by file deletion. This is not the behavior i would expect.\n\nIf the file is not to be copied to the target file, then the target file should not be deleted.\n\nCopy.java\n\n  protected void doResourceOperations(Map map)\n  {\n    if (map.size() > 0) {\n      log(\"Copying \" + map.size() + \" resource\" + (map.size() == 1 ? \"\" : \"s\") + \" to \" + this.destDir.getAbsolutePath());\n\n      Iterator iter = map.keySet().iterator();\n      while (iter.hasNext()) {\n        Resource fromResource = (Resource)iter.next();\n        String[] toFiles = (String[])map.get(fromResource);\n\n        for (int i = 0; i < toFiles.length; i++) {\n          String toFile = toFiles[i];\n          try\n          {\n            log(\"Copying \" + fromResource + \" to \" + toFile, this.verbosity);\n\n            FilterSetCollection executionFilters = new FilterSetCollection();\n\n            if (this.filtering) {\n              executionFilters.addFilterSet(getProject().getGlobalFilterSet());\n            }\n\n            Enumeration filterEnum = this.filterSets.elements();\n            while (filterEnum.hasMoreElements()) {\n              executionFilters.addFilterSet((FilterSet)filterEnum.nextElement());\n            }\n\n            ResourceUtils.copyResource(fromResource, new FileResource(this.destDir, toFile), executionFilters, this.filterChains, this.forceOverwrite, this.preserveLastModified, false, this.inputEncoding, this.outputEncoding, getProject(), getForce());\n          }\n          catch (IOException ioe)\n          {\n            String msg = \"Failed to copy \" + fromResource + \" to \" + toFile + \" due to \" + getDueTo(ioe);\n\n            File targetFile = new File(toFile);\n            if ((targetFile.exists()) && (!targetFile.delete())) { -- file is deleted when canWrite false, \"read-only\" file is not a corrupt file, canWrite is false but delete succeeds\n              msg = msg + \" and I couldn't delete the corrupt \" + toFile;\n            }\n            if (this.failonerror) {\n              throw new BuildException(msg, ioe, getLocation());\n            }\n            log(msg, 0);\n          }\n\n\n\nResourceUtils.java#copyResource\n\n\n\n    File destFile = null;\n    if (dest.as(FileProvider.class) != null) {\n      destFile = ((FileProvider)dest.as(FileProvider.class)).getFile();\n    }\n    if ((destFile != null) && (destFile.isFile()) && (!destFile.canWrite())) {\n      if (!force) {\n        throw new IOException(\"can't write to read-only destination file \" + destFile); -- \"read-only\" exception, canWrite false\n      }", "id": 158142, "time": "2012-04-17T15:30:24Z", "creator": "jweinste@gmail.com", "creation_time": "2012-04-17T15:30:24Z", "is_private": false}, {"attachment_id": 30117, "tags": [], "creator": "bsmith488@gmail.com", "is_private": false, "count": 1, "id": 166224, "time": "2013-03-29T11:01:46Z", "bug_id": 53095, "creation_time": "2013-03-29T11:01:46Z", "text": "Created attachment 30117\ncopy target test\n\nJust a sample copy target."}, {"count": 2, "tags": [], "creator": "bsmith488@gmail.com", "attachment_id": null, "is_private": false, "id": 166225, "time": "2013-03-29T11:09:34Z", "bug_id": 53095, "creation_time": "2013-03-29T11:09:34Z", "text": "Simple steps to reproduce on XP:\n\nC:\\ant>ver\n\nMicrosoft Windows XP [Version 5.1.2600]\n\nC:\\ant>call java -version\njava version \"1.6.0_24\"\nJava(TM) SE Runtime Environment (build 1.6.0_24-b07)\nJava HotSpot(TM) Client VM (build 19.1-b02, mixed mode, sharing)\n\nC:\\ant>call ant -version\nApache Ant(TM) version 1.9.0 compiled on March 5 2013\n\nC:\\ant>type build.xml\n<?xml version=\"1.0\"?>\n<project name=\"testcopy\">\n        <target name=\"testcopy\">\n                <copy verbose=\"true\"\n                          file=\"testfile\"\n                          todir=\"./temp\"\n                />\n        </target>\n</project>\n\nC:\\ant>mkdir temp\n\nC:\\ant>attrib -r testfile\nFile not found - testfile\n\nC:\\ant>attrib -r temp\\testfile\nFile not found - temp\\testfile\n\nC:\\ant>copy c:\\WINDOWS\\system32\\winver.exe .\\testfile\n        1 file(s) copied.\n\nC:\\ant>copy c:\\WINDOWS\\system32\\winver.exe .\\temp\\testfile\n        1 file(s) copied.\n\nC:\\ant>ver > .\\testfile :: update file\n\nC:\\ant>attrib -r testfile\n\nC:\\ant>attrib +r temp\\testfile\n\nC:\\ant>echo :::: before\n:::: before\n\nC:\\ant>attrib testfile\nA          C:\\ant\\testfile\n\nC:\\ant>attrib temp\\testfile\nA    R     C:\\ant\\temp\\testfile\n\nC:\\ant>call ant testcopy\nBuildfile: C:\\ant\\build.xml\n\ntestcopy:\n     [copy] Copying 1 file to C:\\ant\\temp\n     [copy] Copying C:\\ant\\testfile to C:\\ant\\temp\\testfile\n\nBUILD FAILED\nC:\\ant\\build.xml:7: Failed to copy C:\\ant\\testfile to C:\\ant\\temp\\testfile due to can't write to read-only destination file C:\\ant\\temp\\testfile\n\nTotal time: 0 seconds\n\nC:\\ant>echo :::: after (where is temp\\testfile ?)\n:::: after (where is temp\\testfile ?)\n\nC:\\ant>attrib testfile\nA          C:\\ant\\testfile\n\nC:\\ant>attrib temp\\testfile\nFile not found - temp\\testfile\n\nC:\\ant>"}, {"count": 3, "tags": [], "bug_id": 53095, "attachment_id": null, "id": 172073, "time": "2014-01-04T16:20:43Z", "creator": "bodewig@apache.org", "creation_time": "2014-01-04T16:20:43Z", "is_private": false, "text": "finally fixed with svn revision 1555363"}]