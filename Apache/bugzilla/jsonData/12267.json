[{"count": 0, "tags": [], "text": "This is a request for the ant unzip task to be able to unzip a <fileset> of zip\nfiles to newly created folders based on the zip file name. In other words,\ngiving the unzip task a number of zip files, rather than expand them into the\nfolder specified by the dest attribute, use the base name of the zip file as the\nname of a new subfolder created in dest, then expand the contents of the zip\nfile into that subfolder.\nFor example, the following unzip task\n<unzip dest=\"extracts\" separate=\"true\">\n\t<fileset dir=\"${zipFolder}\" >\n\t  <include name=\"*.zip\" >\n\t</fileset>\n</unzip>, \nwhere zipFolder contains buildA.zip and buildB.zip, would expand buildA.zip to\nextracts/buildA and buildB.zip to extracts/buildB.\nThe following additional code inserted at the beginning of \norg.apache.tools.ant.taskdefs.Expand.expandFile(FileUtils, File, File)\nimplements this ability:\nprotected void expandFile(FileUtils fileUtils, File srcF, File destDir) {\n    File dir = destDir;\n    if (separate) {\n        String fileNameBase = srcF.getName();\n        fileNameBase = fileNameBase.substring(0, fileNameBase.indexOf('.'));\n        dir = new File(destDir,fileNameBase);\n        dir.mkdir();\n    }\n    log(\"Expanding: \" + srcF + \" into \" + dir, Project.MSG_INFO);\n    ZipInputStream zis = null;\n    [continues unchanged]\n\nI don't think this accounts for zip files in subdirectories - which would\nprobably need to have the relative path recreated to avoid filename conflicts. \n\nMundane info:\nseparate is defined as\n    private boolean separate = false;  // false default maintains previous\nbehaviour when not used.\n\nand the attribute is made available by\n    /**\n     * Should files in filesets or src be extracted to new subdirectories\n     * of the same name?\n     */\n    public void setSeparate(boolean b){\n        separate = b;\n    }", "is_private": false, "id": 22190, "creator": "adam.mlodzinski@sitraka.com", "time": "2002-09-03T16:37:57Z", "bug_id": 12267, "creation_time": "2002-09-03T16:37:57Z", "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 12267, "text": "\nI am working on a different solution to the same problem.  I believe that my solution is more \nelegant because it simply adds a Mapper to the unjar, untar, unwar unzip tasks.  This is much \nmore flexible and consistent with the copy task.  \n\nShould I submit my code to this bug or create a new one?\n\nAn example of my proposed use is:\n\n\t<unjar dest=\"${dir.preverified}\">\n\t  <fileset dir=\"${dir.src}\">\n\t    <include name=\"*.jar\" />\n\t    <include name=\"*.zip\" />\n\t  </fileset>\n\t  <mapper type=\"regexp\" from=\"^(.*)\\.(jar|zip)$$\" to=\"\\1/\" />\n\t</unjar>\n\n\tThis unpacks all files ending in .jar or .zip in the source directory and puts the contents of \neach into a subdirectory of the preverified directory with the same name as the original archive file \nwithout the trailing .jar or .zip. For example, the contents of src/purifier.zip and src/ant.jar will be \nextracted to preverified/purifier/ and preverified/ant/ directories respectively.", "id": 37338, "attachment_id": null, "creator": "mcrocker@markcrocker.com", "creation_time": "2003-05-16T17:00:38Z", "time": "2003-05-16T17:00:38Z", "is_private": false}, {"count": 2, "attachment_id": null, "creator": "levylambert@tiscali-dsl.de", "is_private": false, "id": 37361, "time": "2003-05-16T20:27:18Z", "bug_id": 12267, "creation_time": "2003-05-16T20:27:18Z", "tags": [], "text": "It is perfectly OK for you to submit your code to this bug."}, {"count": 3, "tags": [], "text": "Created attachment 6401\nPatch to add mapper capability to Expand.java (unjar/tar/war/zip tasks).", "is_private": false, "id": 37392, "creator": "mcrocker@markcrocker.com", "time": "2003-05-18T01:32:55Z", "bug_id": 12267, "creation_time": "2003-05-18T01:32:55Z", "attachment_id": 6401}, {"count": 4, "tags": [], "bug_id": 12267, "text": "Created attachment 6402\nTestCase patch for mapper capability in Expand.java", "id": 37393, "time": "2003-05-18T01:34:52Z", "creator": "mcrocker@markcrocker.com", "creation_time": "2003-05-18T01:34:52Z", "is_private": false, "attachment_id": 6402}, {"count": 5, "tags": [], "bug_id": 12267, "attachment_id": 6403, "text": "Created attachment 6403\nSupporting and build file for TestCase", "id": 37394, "time": "2003-05-18T01:35:51Z", "creator": "mcrocker@markcrocker.com", "creation_time": "2003-05-18T01:35:51Z", "is_private": false}, {"count": 6, "attachment_id": 6404, "bug_id": 12267, "text": "Created attachment 6404\nPatch for unzip documentation changes related to Expand.java mapper addition.", "id": 37395, "time": "2003-05-18T01:37:10Z", "creator": "mcrocker@markcrocker.com", "creation_time": "2003-05-18T01:37:10Z", "tags": [], "is_private": false}, {"count": 7, "tags": [], "creator": "adam.mlodzinski@sitraka.com", "text": "I think I should have been more specific in this request. I need the ability to\nselectively extract into a single directory or into separate directories based\non the archive filename.\nWhile I agree that the <mapper/> capability is more elegant, I don't see any way\nto apply it selectively, other than setting/not setting a new property, and\ncalling two different targets that use if or unless, or using ant-contrib's\nif/else. I think either of these methods counter the elegance provided by the\nmapper solution. But that's just me.\nMaybe the ideal solution would be to add if/unless capability to the (built-in)\n<mapper/>'s. Comments?", "id": 45055, "time": "2003-10-03T18:56:45Z", "bug_id": 12267, "creation_time": "2003-10-03T18:56:45Z", "is_private": false, "attachment_id": null}]