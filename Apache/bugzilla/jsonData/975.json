[{"count": 0, "tags": [], "text": "I'm trying to extend our ANT build stuff(that currently works fine on Linux) to \nWindows2000+cygwin environment. I have figured out that there is a problem in \nthe build process when it tries to read an environment variable that doesn't \nfollow the \"name=value\" pattern(the variable doesn't contain name). It causes \nthe following exception:\n\njava.lang.StringIndexOutOfBoundsException: String index out of range: -1\n        at java.lang.String.substring(String.java:1503)\n        at org.apache.tools.ant.taskdefs.Property.loadEnvironment\n(Property.java:248)\n        at org.apache.tools.ant.taskdefs.Property.execute(Property.java:172)\n        at org.apache.tools.ant.ProjectHelper$TaskHandler.finished\n(ProjectHelper.java:482)\n        at org.apache.tools.ant.ProjectHelper$AbstractHandler.endElement\n(ProjectHelper.java:204)\n        at org.apache.xerces.parsers.SAXParser.endElement(SAXParser.java:1377)\n        at org.apache.xerces.validators.common.XMLValidator.callEndElement\n(XMLValidator.java:837)\n        at org.apache.xerces.framework.XMLDocumentScanner.scanElement\n(XMLDocumentScanner.java:1855)\n        at \norg.apache.xerces.framework.XMLDocumentScanner$ContentDispatcher.dispatch\n(XMLDocumentScanner.java:1233)\n        at org.apache.xerces.framework.XMLDocumentScanner.parseSome\n(XMLDocumentScanner.java:380)\n        at org.apache.xerces.framework.XMLParser.parse(XMLParser.java:861)\n        at javax.xml.parsers.SAXParser.parse(SAXParser.java:211)\n        at org.apache.tools.ant.ProjectHelper.parse(ProjectHelper.java:117)\n        at org.apache.tools.ant.ProjectHelper.configureProject\n(ProjectHelper.java:85)\n        at org.apache.tools.ant.Main.runBuild(Main.java:403)\n        at org.apache.tools.ant.Main.main(Main.java:149)\n\n\nHere there is the fragment of the code that should be fixed + the fix (the line \nwith comment):\n\norg.apache.tools.ant.taskdefs.Property:\nprotected void loadEnvironment( String prefix ) {\n        .\n        .\n        .\n                int pos = entry.indexOf('=');   \n        +        if (pos > 0) {  //CHECK IF '=' HAS BEEN FOUND\n                  props.put(prefix + entry.substring(0, pos),\n                          entry.substring(pos + 1));\n        +        }\n        .\n        .\n        .", "attachment_id": null, "id": 1264, "creator": "jiri_luzny@yahoo.com", "time": "2001-03-14T11:27:29Z", "bug_id": 975, "creation_time": "2001-03-14T11:27:29Z", "is_private": false}, {"attachment_id": null, "tags": [], "creator": "nico@apache.org", "text": "Sometimes (for example with a default installation of cygwin) there are \nenvironment-variables containing a new-line. We now ignore anything after the \nfirst line and log the ignored lines with warning-level.", "count": 1, "id": 1592, "time": "2001-03-25T11:15:04Z", "bug_id": 975, "creation_time": "2001-03-25T11:15:04Z", "is_private": false}, {"count": 2, "tags": [], "creator": "greg.fenton@sybase.com", "attachment_id": null, "id": 2106, "time": "2001-04-25T22:33:05Z", "bug_id": 975, "creation_time": "2001-04-25T22:33:05Z", "is_private": false, "text": "Might I offer the following modification as opposed to the currently\nimplemented fix?  It handles the issue a little more directly.\nI have used it successfully to handle multi-line ENV values \"correctly\".\n\nThanks for your attention to this,\ngreg.fenton\n\n\n242a243,246\n>\n>       String key = null;\n>       StringBuffer value;\n>\n248,253c252,264\n<                 if (pos == -1) {\n<                     log(\"Ignoring: \" + entry, Project.MSG_WARN);\n<                 } else {\n<                     props.put(prefix + entry.substring(0, pos),\n<                               entry.substring(pos + 1));\n<                 }\n---\n>\n>               if ( pos > 0 ) {  // found a new envvar\n>                   key = prefix + entry.substring(0, pos);\n>                   props.put(key,\n>                             entry.substring(pos + 1));\n>               } else if ( null != key ) {\n>                   // the previous envvar value contains this line too...\n>                   value = new StringBuffer( (String)props.get( key ) );\n>                   value.append( System.getProperty(\"line.separator\") );\n>                   value.append( entry );\n>                   props.put( key, value.toString() );\n>               }\n>"}, {"count": 3, "tags": [], "creator": "nico@apache.org", "attachment_id": null, "id": 2107, "time": "2001-04-25T23:13:37Z", "bug_id": 975, "creation_time": "2001-04-25T23:13:37Z", "is_private": false, "text": "Already done - see comment for Rev. 1.16 of Execute.java: \n\nThe completion of the fix for Bug #975: include proper handling of parsing\nchunks of data returned by the external environment listing program\n(whose command is returned by getProcEnvCommand()).  UNIX environment\nvariables can contain text with embedded newlines.\n\nSubmitted by; Daniel Rall <dlr@finemaltcoding.com>\n"}, {"count": 4, "tags": [], "bug_id": 975, "attachment_id": null, "text": "*** Bug 3520 has been marked as a duplicate of this bug. ***", "id": 8889, "time": "2001-12-13T04:29:59Z", "creator": "bodewig@apache.org", "creation_time": "2001-12-13T04:29:59Z", "is_private": false}]