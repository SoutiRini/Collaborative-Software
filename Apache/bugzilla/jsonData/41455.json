[{"count": 0, "attachment_id": null, "bug_id": 41455, "text": "If a tar file contains entries that have non-ASCII encoding, for example encoded\nin 'Shift_JIS', then the encoded entry's filename is not returned correctly in\nthe TarEntry getName method. It is converted to ASCII. (The zip classes work fine)\n\nOne possible way to remove the limitation, and to not cause any incompatibility,\nis to add a new method, getByteName, which returns the name of the entry as a\nbyte array. \n\nI have enclosed a patch to TarInputStream.java which adds the ability to set and\nreturn the byte name for the entry's name. This solution is probably incomplete.\nIdeally, the TarEntry class should have a method getByteName, but more\nmodifcations are needed in order to do that.\n\nI do not have good reproduction steps, but basically:\n\ntar cvpf testfile.tar 'Shift_JIS filename'\ntar xvpf testfile.tar\n\nI do not see a way to attach a patch file, so I include the patch to\nTarInputStream.java below:\n\n--- TarInputStream.java.orig    2007-01-24 10:30:04.321949000 -0500\n+++ TarInputStream.java 2007-01-24 16:45:38.477672000 -0500\n@@ -19,8 +19,34 @@\n /*\n  * This package is based on the work done by Timothy Gerard Endres\n  * (time@ice.com) to whom the Ant project is very grateful for his great code.\n+ *\n+ */\n+\n+/*\n+ * The class is modified from the original to provide the ability\n+ * to return the byte name for the entry.  The byte name array can\n+ * be used to correctly construct a filename with an appropriate\n+ * non-ASCII encoding.  The reason for the modifications is the\n+ * TarInputStream class does not return non-ASCII names in the\n+ * getName method.\n+ *\n+ * The method getNextEntry was modified from the original version to add\n+ * extraction and setting of the protected variable byteName, the byte\n+ * array name for the entry.\n+ *\n+ * New methods to process the byte name array have been added:\n+ *    append        Append a byte buffer to the appendTo byte array.\n+ *    parseByteName Parse the byte name from the header.\n+ *    setByteName   Set this entry's byte name.\n+ *    getByteName   Get this entry's byte name.\n+ *\n+ * The modifcations were written by\n+ * Kelly G. Luetkemeyer\n+ * The MathWorks, Inc.\n+ * 1/24/2007\n  */\n\n+\n package org.apache.tools.tar;\n\n import java.io.FilterInputStream;\n@@ -42,6 +68,7 @@\n     protected long entrySize;\n     protected long entryOffset;\n     protected byte[] readBuf;\n+    protected byte[] byteName;\n     protected TarBuffer buffer;\n     protected TarEntry currEntry;\n\n@@ -191,6 +218,8 @@\n      * If there are no more entries in the archive, null will\n      * be returned to indicate that the end of the archive has\n      * been reached.\n+     *\n+     * The byteName is set from the TarEntry header buffer.\n      *\n      * @return The next TarEntry in the archive, or null.\n      * @throws IOException on error\n@@ -254,10 +283,17 @@\n             StringBuffer longName = new StringBuffer();\n             byte[] buf = new byte[256];\n             int length = 0;\n+            byte [] tmpname;\n+            tmpname = null;\n+\n             while ((length = read(buf)) >= 0) {\n                 longName.append(new String(buf, 0, length));\n+                tmpname = append(tmpname, buf, length);\n             }\n+\n             getNextEntry();\n+            this.byteName = tmpname;\n+\n             if (this.currEntry == null) {\n                 // Bugzilla: 40334\n                 // Malformed tar file - long entry name not followed by entry\n@@ -269,8 +305,9 @@\n                 longName.deleteCharAt(longName.length() - 1);\n             }\n             this.currEntry.setName(longName.toString());\n+       } else {\n+            this.byteName = parseByteName(headerBuf, TarConstants.NAMELEN);\n         }\n-\n         return this.currEntry;\n     }\n\n@@ -387,4 +424,66 @@\n             out.write(buf, 0, numRead);\n         }\n     }\n+  /**\n+    * Append a byte buffer to the appendTo byte array.\n+    *\n+    * @param appendTo The byte buffer to append data to.\n+    * @param buf The byte buffer containing the new data.\n+    * @param length The number of bytes in buf to copy\n+    * @return The new array with appended data.\n+    */\n+   public byte [] append(byte[] appendTo, byte[] buf, int buflength) {\n+\n+      if (appendTo == null) {\n+         byte [] results = new byte[buflength];\n+         System.arraycopy(buf, 0, results, 0, buflength);\n+         return results;\n+\n+      } else {\n+         int length;\n+         length = appendTo.length + buflength;\n+         byte [] results = new byte[length];\n+         System.arraycopy(appendTo, 0, results, 0, appendTo.length);\n+         System.arraycopy(buf, 0, results, appendTo.length-1, buflength);\n+         return results;\n+      }\n+   }\n+\n+   /**\n+    * Parse the byte name from the header.\n+    *\n+    * @param header The TarEntry header array.\n+    * @param length The number of byte to parse.\n+    * @return The byte array name.\n+    */\n+   public byte [] parseByteName(byte[] header, int length) {\n+      int end;\n+      for(end = 0; end < length; ++end) {\n+         if (header[end] == 0) {\n+            break;\n+         }\n+      }\n+      byte [] results = new byte[end];\n+      System.arraycopy(header, 0, results, 0, end);\n+      return results;\n+   }\n+\n+  /**\n+    * Set this entry's byte name.\n+    *\n+    * @param name This entry's name as a byte array.\n+    */\n+   public  void setByteName(byte [] name) {\n+      this.byteName = name;\n+   }\n+\n+   /**\n+    * Get this entry's byte name.\n+    *\n+    * @return This entry's name as a byte array.\n+    */\n+   public byte[] getByteName() {\n+      return this.byteName;\n+   }\n+\n }", "id": 98472, "time": "2007-01-24T14:25:04Z", "creator": "kluetkemeyer@mathworks.com", "creation_time": "2007-01-24T14:25:04Z", "tags": [], "is_private": false}, {"count": 1, "tags": [], "text": "Created attachment 19451\npatch file to TarInputStream.java", "attachment_id": 19451, "bug_id": 41455, "id": 98473, "time": "2007-01-24T14:27:56Z", "creator": "kluetkemeyer@mathworks.com", "creation_time": "2007-01-24T14:27:56Z", "is_private": false}, {"count": 2, "tags": [], "creator": "s.sdorra@fh-wolfenbuettel.de", "text": "Created attachment 20608\nTarUtil.java patch\n\nthis patch should fix the bug too", "id": 106427, "time": "2007-08-07T01:00:18Z", "bug_id": 41455, "creation_time": "2007-08-07T01:00:18Z", "is_private": false, "attachment_id": 20608}, {"count": 3, "tags": [], "creator": "bodewig@apache.org", "text": "\n\n*** This bug has been marked as a duplicate of bug 36851 ***", "id": 120666, "time": "2008-09-16T03:04:13Z", "bug_id": 41455, "creation_time": "2008-09-16T03:04:13Z", "is_private": false, "attachment_id": null}]