[{"count": 0, "tags": [], "bug_id": 1010, "text": "Xerces 1.3.0\n\nI'm using a custom document factory that subclasses \norg.apache.xerces.dom.DocumentImpl.  I subclass DOMParser, call \nsetDocumentClassName().  My document factory is used as I expect.\n\nHowever, I find that when I'm using the custom factory the getElementByID() \nmethod always returns null, whereas it works properly when using the standard \nDocumentImpl factory.\n\nThe problem is at line 934 of the 1.3.0 DOMParser.java.\n\nif (docClass.isAssignableFrom(defaultDocClass))", "id": 1350, "attachment_id": null, "creator": "tom.dillon@trilogy.com", "creation_time": "2001-03-17T22:42:53Z", "time": "2001-03-17T22:42:53Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 1010, "text": "\nwhoops.  submitted this before I was finished.\n\nAnyway, the problem is that isAssignableFrom is being used backwards, and as a \nresult the variable fDocumentImpl doesn't get set.  If fDocumentImpl is not set \nthen we don't call putIdentifier when creating elements.\n\nThe fix is that\n\nif (docClass.isAssignableFrom(defaultDocClass)) {\n\nshould read\n\nif (defaultDocClass.isAssignableFrom(docClass)) {\n\nIf I make this change it works like a champ.\n\nThe problem exists in 1.3.1 as well, albeit in a different form.  In 1.3.0 it \nwas trying to see if you'd subclassed DocumentImpl, and if so it would take \nadvantage of that fact.  This was broken, but hey, it was trying.  In 1.3.1 \nit's not even trying.\n ", "id": 1351, "attachment_id": null, "creator": "tom.dillon@trilogy.com", "creation_time": "2001-03-17T22:53:19Z", "time": "2001-03-17T22:53:19Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 1010, "attachment_id": null, "text": "Alright, I put back the piece of code (corrected).\nI can't test it though, so I'll rely on you to test it and reopen this bug \nreport if it doesn't work. Thanks.\n", "id": 2372, "time": "2001-05-09T18:30:58Z", "creator": "lehors@apache.org", "creation_time": "2001-05-09T18:30:58Z", "is_private": false}]