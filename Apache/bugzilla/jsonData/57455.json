[{"count": 0, "tags": [], "bug_id": 57455, "attachment_id": 32374, "id": 180348, "time": "2015-01-17T20:28:59Z", "creator": "tobias@stoeckmann.org", "creation_time": "2015-01-17T20:28:59Z", "is_private": false, "text": "Created attachment 32374\nFix with tests\n\nDuring bootstrap, repositories for class loaders are scanned from configuration. The syntax allows to quote paths and/or to simply join them with commas.\n\nIf the path starts with a quote (\"), Bootstrap#getPaths assumes that it must have hit the first regular expression match and implies that it will end with a quote, too.\n\nThis is not correct, \"a for example would be allowed due to the second regular expression rule. Bootstrap#getPaths would swallow the last character (a) and proceed.\n\nThe fix is simple: Before removing the quotes, make sure that the string actually ends with a quote.\n\nPlease see attached diff for latest trunk version of Tomcat 9, which also covers the issue with a new test case."}, {"count": 1, "tags": [], "bug_id": 57455, "attachment_id": null, "is_private": false, "id": 180383, "time": "2015-01-19T14:45:53Z", "creator": "markt@apache.org", "creation_time": "2015-01-19T14:45:53Z", "text": "Thanks for the patch. I can confirm that it fixes the issues described. But...\n\nThis has the potential to get messy. Neither \" nor , is permitted in a file name in Windows but both are acceptable in unix and friends.\n\nWe started off simply using ',' (comma) as a delimiter. This assumed ',' never appeared in the value. Then we had a bug report that paths containing ',' broke things. To fix this we added optional quoting using '\"'. This allowed ',' to appear in the value if the value was quoted. This assumed '\"' never appeared in a value. Now we have this bug.\n\nI am concerned that the proposed solution is a sticking plaster rather than a complete fix and that in a few months time we'll have someone raising a bug about a different edge case (I can already see several valid file names that will break this).\n\nUnless we switch to using an escape character of some form, we are always going to have these issues. And I'm not at all sure that escaping will be possible since the values being parsed are obtained - in the default case - via unescaped environment variables.\n\nI'm leaning towards 'fixing' this by adding a comment that paths with '\"' are not permitted to catalina.propeties."}, {"attachment_id": null, "tags": [], "bug_id": 57455, "is_private": false, "count": 2, "id": 180402, "time": "2015-01-19T21:14:10Z", "creator": "tobias@stoeckmann.org", "creation_time": "2015-01-19T21:14:10Z", "text": "Totally fine with that approach!"}, {"attachment_id": null, "tags": [], "bug_id": 57455, "is_private": false, "count": 3, "id": 180419, "time": "2015-01-20T16:37:34Z", "creator": "chris@christopherschultz.net", "creation_time": "2015-01-20T16:37:34Z", "text": "(In reply to Mark Thomas from comment #1)\n> I'm leaning towards 'fixing' this by adding a comment that paths with '\"'\n> are not permitted to catalina.propeties.\n\n+1 with an actual check for the condition and an error message, rather than odd-looking behavior, and another bug being filed down the road."}, {"count": 4, "tags": [], "bug_id": 57455, "attachment_id": null, "id": 180433, "time": "2015-01-21T10:12:51Z", "creator": "markt@apache.org", "creation_time": "2015-01-21T10:12:51Z", "is_private": false, "text": "Fixed in trunk and 8.0.x and will be included in 8.0.18 onwards."}]