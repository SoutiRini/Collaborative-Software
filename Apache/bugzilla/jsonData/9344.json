[{"count": 0, "tags": [], "bug_id": 9344, "attachment_id": null, "text": "Found at StandardSession following that at passivate and activate\nnot the StandardSessionFacade are the event source !\n\norginal:\n--- L642-679\n    public void passivate() {\n\n        // Notify ActivationListeners\n        HttpSessionEvent event = null;\n        String keys[] = keys();\n        for (int i = 0; i < keys.length; i++) {\n            Object attribute = getAttribute(keys[i]);\n            if (attribute instanceof HttpSessionActivationListener) {\n                if (event == null)\n                    event = new HttpSessionEvent(this);\n                // FIXME: Should we catch throwables?\n                ((HttpSessionActivationListener)attribute).sessionWillPassivate\n(event);\n            }\n        }\n\n    }\n\n\n    /**\n     * Perform internal processing required to activate this\n     * session.\n     */\n    public void activate() {\n\n        // Notify ActivationListeners\n        HttpSessionEvent event = null;\n        String keys[] = keys();\n        for (int i = 0; i < keys.length; i++) {\n            Object attribute = getAttribute(keys[i]);\n            if (attribute instanceof HttpSessionActivationListener) {\n                if (event == null)\n                    event = new HttpSessionEvent(this);\n                // FIXME: Should we catch throwables?\n                ((HttpSessionActivationListener)attribute).sessionDidActivate\n(event);\n            }\n        }\n\n    }\n\nbetter are ::\n\n    public void passivate() {\n\n        // Notify ActivationListeners\n        HttpSessionEvent event = new HttpSessionEvent(getSession);\n        String keys[] = keys();\n        for (int i = 0; i < keys.length; i++) {\n            Object attribute = getAttribute(keys[i]);\n            if (attribute instanceof HttpSessionActivationListener) {\n                // FIXME: Should we catch throwables?\n                ((HttpSessionActivationListener)attribute).sessionWillPassivate\n(event);\n            }\n        }\n\n    }\n\n\n    /**\n     * Perform internal processing required to activate this\n     * session.\n     */\n    public void activate() {\n\n        // Notify ActivationListeners\n        HttpSessionEvent event = new HttpSessionEvent(getSession());\n        String keys[] = keys();\n        for (int i = 0; i < keys.length; i++) {\n            Object attribute = getAttribute(keys[i]);\n            if (attribute instanceof HttpSessionActivationListener) {\n                // FIXME: Should we catch throwables?\n                ((HttpSessionActivationListener)attribute).sessionDidActivate\n(event);\n            }\n        }\n\n    }\n\nAlso I thing the throwables better catch!\n\n\nOther Risk is that getServletContext() not give the ServletContextFacade at \nStandardSessionFacade.\n\nAlso the risky implemtation at ApplicationContext! All Event have the Orignal \nStandardContext Object and not the ApplicationContextFacade at source.", "id": 16586, "time": "2002-05-23T12:21:34Z", "creator": "pr@webapp.de", "creation_time": "2002-05-23T12:21:34Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 9344, "text": "Actually, this is not a security risk, as the security manager will prevent \naccess to anything which is specific to the o.a.catalina class (it will only \nallow access to the methods in the shared interface).\nThe facades prevent keeping pointers to the real objects if these can be used \nin another webapp, but in this case it's ok, as the servlet context and the \nsessions are associated with the webapp.", "id": 16592, "time": "2002-05-23T14:36:30Z", "creator": "remm@apache.org", "creation_time": "2002-05-23T14:36:30Z", "is_private": false, "attachment_id": null}]