[{"count": 0, "tags": [], "bug_id": 56636, "attachment_id": null, "id": 175856, "time": "2014-06-17T19:25:28Z", "creator": "artfiedler@gmail.com", "creation_time": "2014-06-17T19:25:28Z", "is_private": false, "text": "Per the javadoc at http://docs.oracle.com/javaee/7/api/javax/el/ELProcessor.html it specifies that defineFunction(String prefix, String function, String className, String method) should support method names (without parenthesis) and method signatures, it gives an example of \"int sum(int, int)\"\n\nThe code I was using from 8.0.8 does not properly parse this example, in the javax.el.ElProcessor.MethodSignature class the constructor first incorrectly cuts off the last character of the method name by using \"methodName.substring(0, paramIndex -1)\" second it continues to include the return type in the name.\n\nA better but not to java specification version would be to replace the following code\n\nint paramIndex = methodName.indexOf('(');\n\nif (paramIndex == -1) {\n    name = methodName.trim();\n    parameterTypeNames = null;\n} else {\n    name = methodName.substring(0, paramIndex -1).trim();\n\n\nwith:\n\nint paramIndex = methodName.indexOf('(');\n\nif (paramIndex == -1) {\n    name = methodName.trim();\n    parameterTypeNames = null;\n} else {\n    String tmpName = methodName.substring(0, paramIndex).trim();\n    int lastWhitespaceIndex = tmpName.lastIndexOf(' ');\n    name = lastWhitespaceIndex > -1 ? tmpName.substring(lastWhitespaceIndex + 1) : tmpName;\n\n\nThis allows the MethodSignature class to return a proper method name that then can be used in the ELProcessor.defineFunction method to compare the reflected classes method names."}, {"count": 1, "tags": [], "bug_id": 56636, "text": "Thanks for the report. This has been fixed in 8.0.x and will be included in 8.0.9 onwards.", "id": 175864, "time": "2014-06-18T10:35:49Z", "creator": "markt@apache.org", "creation_time": "2014-06-18T10:35:49Z", "is_private": false, "attachment_id": null}]