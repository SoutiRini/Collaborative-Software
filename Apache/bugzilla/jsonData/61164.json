[{"count": 0, "tags": [], "bug_id": 61164, "attachment_id": null, "id": 199095, "time": "2017-06-07T08:52:12Z", "creator": "markt@apache.org", "creation_time": "2017-06-07T08:52:12Z", "is_private": false, "text": "In Apache HTTPD there is an option in their access log format to log\nconnection status: \"%X\"\n\nhttp://httpd.apache.org/docs/2.4/mod/mod_log_config.html#formats\n\n\"%X\":\nConnection status when response is completed:\nX = Connection aborted before the response completed.\n+ = Connection may be kept alive after the response is sent.\n- = Connection will be closed after the response is sent."}, {"count": 1, "tags": [], "text": "Hi there,\n\nI have created a PR here (https://github.com/apache/tomcat/pull/70) for this enhancement. Let me know what you think.", "is_private": false, "id": 199911, "creator": "zemiandeng@gmail.com", "time": "2017-07-21T03:17:28Z", "bug_id": 61164, "creation_time": "2017-07-21T03:17:28Z", "attachment_id": null}, {"count": 2, "attachment_id": null, "creator": "markt@apache.org", "is_private": false, "id": 199986, "time": "2017-07-24T16:16:50Z", "bug_id": 61164, "creation_time": "2017-07-24T16:16:50Z", "tags": [], "text": "This is a lot simpler than I imagined. My expectation was that the various places where errors can occur in  in Http11Processor.service() would make this tricky to implement. It looks like I was wrong. Because those errors set the RequestDispatcher.ERROR_EXCEPTION, this actually makes implementation fairly simple.\n\nOne aspect that I think needs a little more thought is container initiated (rather than client initiated) aborts. The easiest way to detect these would be to add another request attribute. Whether both get logged as 'X' or whether one is logged as 'X' and the other as 'x' is open to discussion."}, {"count": 3, "tags": [], "creator": "zemiandeng@gmail.com", "attachment_id": null, "text": "Hi Mark, yes hence the PR wasn't that big. :)\n\nI saw the comment you made on GitHub, I will take a further look later and let you know.", "id": 199994, "time": "2017-07-24T20:27:57Z", "bug_id": 61164, "creation_time": "2017-07-24T20:27:57Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 61164, "attachment_id": null, "id": 200001, "time": "2017-07-25T02:45:36Z", "creator": "zemiandeng@gmail.com", "creation_time": "2017-07-25T02:45:36Z", "is_private": false, "text": "I have pushed a new commit to the PR. Please review.\n\nAs far as adding \"container initiated (rather than client initiated) aborts\", I will need to study some more before I can determine where to add the new req attr. (do give me a hint if you already know.)"}, {"count": 5, "tags": [], "bug_id": 61164, "text": "Mark, I see org.apache.coyote.AbstractProcessor#dispatch() starting line 205 contains error handling code that says \"occurred on 'non-container' thread\". Is this where what you want to start tracking with a new req attribute?", "id": 200002, "time": "2017-07-25T03:26:54Z", "creator": "zemiandeng@gmail.com", "creation_time": "2017-07-25T03:26:54Z", "is_private": false, "attachment_id": null}, {"count": 6, "attachment_id": null, "creator": "markt@apache.org", "is_private": false, "id": 200004, "time": "2017-07-25T07:59:28Z", "bug_id": 61164, "creation_time": "2017-07-25T07:59:28Z", "tags": [], "text": "The updated patch looks good. Thanks. I noticed that the import order has changed. If you could undo that it would be good but it isn't a big deal to fix when the patch is applied.\n\nRegarding tracking container vs client connection abort, I was looking at AbstractProcessor#setErrorState() around line 90. Having thought about this some more, a request attribute is a bit of a hack and I think I can see a batter way. \n\nWhat I was thinking was to also log 'X' if AbstractProcessor#getErrorState()#isIoAllowed() returns false. The correct way to access the Processor via the Request or Response is by defining an ActionCode and calling Request#acton() or Response#action(). Take a look at ActionCode#IS_ERROR and how it is used. I am thinking ActionCode#IS_IO_ALLOWED and then call Request#action() from the access log.\n\nI'm not sure if there is value in differentiating client and container aborts. I'm leaning towards not differentiating for now. If we add support for '%X' now that does not differentiate, we can always add '%x' at a later date that does differentiate if there is demand."}, {"count": 7, "attachment_id": null, "creator": "zemiandeng@gmail.com", "is_private": false, "id": 200034, "time": "2017-07-26T02:46:16Z", "bug_id": 61164, "creation_time": "2017-07-26T02:46:16Z", "tags": [], "text": "Mark, thanks for all the tips. No problem, I can re-fix the imports for better merge experience.\n\nYes, I agree that we should support just '%X' for now until users demands the finer abort types, then we can add the extra '%x' pattern.\n\nAs for the extra '%X' check with ErrorState()#isIoAllowed() == false, I assume you wanted for this patch. I can give it a try and see. Will update later."}, {"count": 8, "tags": [], "creator": "zemiandeng@gmail.com", "attachment_id": null, "text": "I have added the isIoAllowed with action code check to the PR now. Please review.", "id": 200035, "time": "2017-07-26T03:47:40Z", "bug_id": 61164, "creation_time": "2017-07-26T03:47:40Z", "is_private": false}, {"count": 9, "tags": [], "bug_id": 61164, "text": "Thanks for the patch. It has been applied to trunk (for 9.0.0.M26 onwards) and 8.5.x (for 8.5.20 onwards)", "id": 200100, "time": "2017-07-28T14:54:06Z", "creator": "markt@apache.org", "creation_time": "2017-07-28T14:54:06Z", "is_private": false, "attachment_id": null}]