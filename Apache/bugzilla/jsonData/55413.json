[{"count": 0, "tags": [], "creator": "sellison@dig-inc.net", "attachment_id": null, "text": "The formula comes from an .xlsm file, brought out via:\n\ncell.getCellFormula();\n\nThe original formula in Excel is:\n=IFERROR(IF([@Status]=\"C\",ABS([@[Code: Lag]]),ABS([@[Code: Aging]])),\"Data Error\")\n\nThe formula I get back is:\n\nIFERROR(IF(DCASdata[[#This Row],[Status]]=\"C\",ABS(DCASdata[[#This Row],[Code: Lag]]),ABS(DCASdata[[#This Row],[Code: Aging]])),\"Data Error\")\n\nCode:\n\nIn a loop.\n...\nXSSFCell testCell = testRow.createCell(i);\ntestCell.setCellType(2); // Formula Type (ENUM, I know, just testing)\ntestCell.setCellFormula(formula);\n...\n\n\nThis formula is one among many which XSSFCell.setCellFormula(formula) chokes on. The parser spits out this error:\n\nCaused by: org.apache.poi.ss.formula.FormulaParseException: Parse error near char 19 '[' in specified formula 'IFERROR(IF(DCASdata[[#This Row],[Status]]=\"C\",ABS(DCASdata[[#This Row],[Code: Lag]]),ABS(DCASdata[[#This Row],[Code: Aging]])),\"Data Error\")'. Expected ',' or ')'\n\tat org.apache.poi.ss.formula.FormulaParser.expected(FormulaParser.java:219)\n\tat org.apache.poi.ss.formula.FormulaParser.Arguments(FormulaParser.java:1056)\n\tat org.apache.poi.ss.formula.FormulaParser.function(FormulaParser.java:936)\n\tat org.apache.poi.ss.formula.FormulaParser.parseNonRange(FormulaParser.java:558)\n\tat org.apache.poi.ss.formula.FormulaParser.parseRangeable(FormulaParser.java:517)\n\tat org.apache.poi.ss.formula.FormulaParser.parseRangeExpression(FormulaParser.java:268)\n\tat org.apache.poi.ss.formula.FormulaParser.parseSimpleFactor(FormulaParser.java:1119)\n\tat org.apache.poi.ss.formula.FormulaParser.percentFactor(FormulaParser.java:1079)\n\tat org.apache.poi.ss.formula.FormulaParser.powerFactor(FormulaParser.java:1066)\n\tat org.apache.poi.ss.formula.FormulaParser.Term(FormulaParser.java:1426)\n\tat org.apache.poi.ss.formula.FormulaParser.additiveExpression(FormulaParser.java:1526)\n\tat org.apache.poi.ss.formula.FormulaParser.concatExpression(FormulaParser.java:1510)\n\tat org.apache.poi.ss.formula.FormulaParser.comparisonExpression(FormulaParser.java:1467)\n\tat org.apache.poi.ss.formula.FormulaParser.Arguments(FormulaParser.java:1051)\n\tat org.apache.poi.ss.formula.FormulaParser.function(FormulaParser.java:936)\n\tat org.apache.poi.ss.formula.FormulaParser.parseNonRange(FormulaParser.java:558)\n\tat org.apache.poi.ss.formula.FormulaParser.parseRangeable(FormulaParser.java:429)\n\tat org.apache.poi.ss.formula.FormulaParser.parseRangeExpression(FormulaParser.java:268)\n\tat org.apache.poi.ss.formula.FormulaParser.parseSimpleFactor(FormulaParser.java:1119)\n\tat org.apache.poi.ss.formula.FormulaParser.percentFactor(FormulaParser.java:1079)\n\tat org.apache.poi.ss.formula.FormulaParser.powerFactor(FormulaParser.java:1066)\n\tat org.apache.poi.ss.formula.FormulaParser.Term(FormulaParser.java:1426)\n\tat org.apache.poi.ss.formula.FormulaParser.additiveExpression(FormulaParser.java:1526)\n\tat org.apache.poi.ss.formula.FormulaParser.concatExpression(FormulaParser.java:1510)\n\tat org.apache.poi.ss.formula.FormulaParser.comparisonExpression(FormulaParser.java:1467)\n\tat org.apache.poi.ss.formula.FormulaParser.unionExpression(FormulaParser.java:1447)\n\tat org.apache.poi.ss.formula.FormulaParser.parse(FormulaParser.java:1568)\n\tat org.apache.poi.ss.formula.FormulaParser.parse(FormulaParser.java:176)\n\tat org.apache.poi.xssf.usermodel.XSSFCell.setFormula(XSSFCell.java:439)\n\tat org.apache.poi.xssf.usermodel.XSSFCell.setCellFormula(XSSFCell.java:419)\n\nMy workaround:\n\nIn a loop.\n...\nXSSFCell testCell = testRow.createCell(i);\ntestCell.setCellType(2); // Formula Type\n\t\t        \t\nCTCell c = testCell.getCTCell();\nCTCellFormula x = c.getF();\nx.setStringValue(formulas.get(new Integer(i))); // map of formulas <col,formula>\nc.setF(x);\n...\n\nAnd this works perfectly, no errors, and the formulas work perfectly when the workbook is opened in Excel.\n\nIt seems to me that XSSFCell's setCellFormula(String) ought to behave as my workaround does.", "id": 169413, "time": "2013-08-13T20:29:09Z", "bug_id": 55413, "creation_time": "2013-08-13T20:29:09Z", "is_private": false}, {"count": 1, "tags": [], "creator": "dominik.stadler@gmx.at", "attachment_id": null, "text": "I tried to reproduce this, but could not, I did get some different errors that likely are because my sheet looks misses some setup-data, can you please re-check this with the latest version of poi, e.g. 3.13-beta1 and also provide a full code-example including any template-sheet if possible, e.g. as self-sufficient unit-test that we can add to the test-suite to verify this and keep it fixed in the future?", "id": 185180, "time": "2015-09-13T12:37:15Z", "bug_id": 55413, "creation_time": "2015-09-13T12:37:15Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 55413, "attachment_id": null, "id": 191729, "time": "2016-06-17T07:49:53Z", "creator": "onealj@apache.org", "creation_time": "2016-06-17T07:49:53Z", "is_private": false, "text": "Evaluation of structured references (data tables) were not supported until a fix for bug 57840 was implemented.\n\nThis issue has probably been resolved in the latest builds (pre-3.15 beta 2) if it wasn't fixed by 3.13-beta1 (per Dominik's testing).\n\nWithout a test file, I cannot write a unit test to verify if this is fixed or ensure that it stays fixed in the future.\n\nClosing as WorksForMe. Please reopen with an Excel file with a Data Table called \"DCASdata\", columns titled \"Status\", \"Code: Lag\", and \"Code: Aging\" if you are able."}]