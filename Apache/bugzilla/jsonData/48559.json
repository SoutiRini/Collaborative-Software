[{"count": 0, "tags": [], "creator": "luis.aguilera@ca.com", "text": "The fix implemented for CVE-2007-5333  and the related issues is breaking the interoperability with other third party products.\n\nThe fix for this issue, as I understand, has Tomcat encapsulate cookie date between double-quotes (\") such that a cookie, which prior to 6.0.12 would have read like this:\n\ncookiename = cookiedata\n\nnow reads like this:\n\ncookiename = \"cookiedata\"\n\nThe presence of the double-quotes in the begining and end of the cookie data is causing problems to several third-party applications which assume that the double-quote is in fact part of the cookie data.\n\nOur appplication, for instance, encrypts the cookie data and then encodes using Base64. Hence, it has difficulty processing the double-quotes that precede and end the cookie data.\n\nChanging our application could be considered if the number of cookies was small. However, given the design of our application, users can create all sorts of different cookies, hence having an arbitrary rule that ignores or strips the double-quotes of any cookies it receives is not feasible. \n\nIt should be noted that while our application runs in Tomcat, the problem affects components of our application that do NOT run on Tomcat. \n\nI would like to request that the Tomcat team reconsider it's approach towards resolving this security vulnerabilty such that it does not break interoperability with other third party applications.", "id": 133658, "time": "2010-01-17T10:05:06Z", "bug_id": 48559, "creation_time": "2010-01-17T10:05:06Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "text": "The fix for CVE-2007-5333 essentially made Tomcat apply the various cookie specifications more strictly. Where we can safely do so, options have been added to reduce the strictness of these checks.\n\nThe '=' characters that can appear in base64 data will cause the quoting. A new option will be included in the next 6.0.x release that allows = to be used without the quotes being added. This may help.\n\nThe quotes should be transparent to applications that set and read cookie values through the Servlet API. If they are not, that is probably a bug in Tomcat.\n\nApplications that read and set cookies directly should be able to handle specification compliant cookies. If they cannot, that is probably a bug in those applications.\n\nDepending on circumstances, one option may be to bypass the Servlet API and set/read the cookie headers directly. Again, applications that do this should be specification compliant, although they can break the specs at their own risk.\n\nIf you need assistance with a specific case, please ask - with examples - on the Tomcat users mailing list.", "attachment_id": null, "bug_id": 48559, "id": 133659, "time": "2010-01-17T10:18:30Z", "creator": "markt@apache.org", "creation_time": "2010-01-17T10:18:30Z", "is_private": false}, {"attachment_id": null, "tags": [], "bug_id": 48559, "is_private": false, "count": 2, "id": 133660, "time": "2010-01-17T10:33:28Z", "creator": "luis.aguilera@ca.com", "creation_time": "2010-01-17T10:33:28Z", "text": "thanks for the prompt response.\n\nDo you mean to state the the cookie specification requires that cookie data be enclosed in double-quotes? If so, then yes, this may be a bug in those third party applications, such as ours.\n\nHowever, it has been our experience for over 10 years that cookie data is never enclosed in double-quotes. Hence our product has been able to operate successfully with a large number of third-party products, including Tomcat (pre-6.0.12).\n\n\nThe issue is not regarding our product when it is installed along with Tomcat. Instead, the issue is regarding the interoperability of our product running elsewhere.\n\nlet me use an example to illustrate.\n\nI'm a user and I open my browser. I access a site, I do something on this site and acquire a cookie from this site. For arguments sake, this a plain html site running on Apache. Let's call this cookie something like this:\n\napp1cookie = luishasloggedintoapp1\n\nSo far so good. I can continue to traverse through various sites in my enterprise environment (which could feature applications running on various different platforms, IIS, Apache, Sun Java Web Server, Domino, WebLogic, WebSPhere, etc.) And where appropriate, other apps will read this cookie and do things with it; in some cases giving me other cookies.\n\nThe problems comes when I go through an app that is hosted on Tomcat. The cookie that was previously written like this:\n\napp1cookie = luishasloggedintoapp1\n\nIs presented to Tomcat, and after Tomcat processes it, it becomes:\n\napp1cookie = \"luishasloggedintoapp1\"\n\nThe problem is not directly on Tomcat, since it can correctly resolve the double-quotes the enclose the cookie data.\n\nThe problem is that other apps, not running on Tomcat (e.g. the plain html site on Apache),  do not handle the presence of the double-quote correctly.\n\nIt seems to us that forcing all apps to comply with the Tomcat double-quote requirement is a rather heavy-handed approach.\n\nI can anticipate that many other third-party applications will have difficulty with this double-quote requirement.\n\nHowever, if, as you state, the double-quote represents a more strict implementation of the cookie specification, then this an issue for many other third-party vendors to address. Would you please point out to me where the cookie specification specifies this double-quote requirement?\n\nthanks!"}, {"count": 3, "tags": [], "bug_id": 48559, "attachment_id": null, "id": 134255, "time": "2010-02-05T03:01:33Z", "creator": "bugzilla@xrheingauerx.de", "creation_time": "2010-02-05T03:01:33Z", "is_private": false, "text": "I have a problem I think it\u00b4s near this or the same. If not pls move my thread.\n\nOS: Windows XP 32 bit\nTomcat: 6.0.18 / 6.0.24\nlocalhost:8080\n\nProblem:\nIn our web-app we use cookies and the values are first signed, then encrypted and at last Base64 encoded.\n\nBecause the Base64 encoding the Values ends all with == like this:\n...uID4Ibe0QcbH9UxOe332quqCJBiJQ==\n\nIf I use a Browser like Mozilla 3 or IE 8 the function \"String javax.servlet.http.Cookie.getValue()\" returns the correct value and the way back to the plain text/value works fine.\n\nNow I have to test a heavy load on our system and therefore I want to use JMeter. Latest version 2.3.4. I have implemented in my \"Thread-Group\" a \"HTTP Cookie Manager\" and set the cookies to \"compatibility\".\n\nThe Problem here:\nIt doesn\u00b4t work. In the \"Sampler result\" I can see the cookie was set:\n...rxjsakqhgaam4LT0fNAA4UCiA==\"; Version=1; Path=/\n\nBut the function \"String javax.servlet.http.Cookie.getValue()\" returns now:\n...rxjsakqhgaam4LT0fNAA4UCiA\n\neven without == at the end. So the Base64-decoding doesn\u00b4t (can\u00b4t) deliver the wanted result.\n\nAny idea what happens here?"}, {"count": 4, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "id": 134256, "time": "2010-02-05T03:06:49Z", "bug_id": 48559, "creation_time": "2010-02-05T03:06:49Z", "is_private": false, "text": "6.0.24 has a new option that allows = in cookie values without quoting.\n\nIf you need any further assistance, please use the users mailing list."}]