[{"count": 0, "tags": [], "text": "Created attachment 29112\nFO file to demonstrate the problem.\n\nCalling\n\nfop.bat -fo xmlspec.fo -pdf -test.pdf\n\nresults in the error message\n\n\"Illegal value for breakClass: -1\".", "attachment_id": 29112, "id": 160889, "creator": "nick.heyworth@altova.com", "time": "2012-07-25T08:17:47Z", "bug_id": 53598, "creation_time": "2012-07-25T08:17:47Z", "is_private": false}, {"text": "Created attachment 29140\nA patch to resolve the -1 BreakElement default\n\nHi. I had a look at this and it is complaining because it is trying to compare a break with another element but fails because its breakClass is -1. This can be traced back to InlineLayoutManager.java:356 where it is using a default constructor which calls another constructor with BreakElement.java with the -1 value. I have changed the -1 to Constants.EN_AUTO and created a test case to avoid this happening. I checked all other references but this constructor was only called from that one location.", "tags": [], "creator": "rmeyer@hotmail.co.uk", "attachment_id": 29140, "count": 1, "id": 161009, "time": "2012-07-30T15:39:19Z", "bug_id": 53598, "creation_time": "2012-07-30T15:39:19Z", "is_private": false}, {"count": 2, "tags": [], "text": "Patch applied in rev. 1380923:\nhttp://svn.apache.org/viewvc?rev=1380923&view=rev\n\nI also added a check in the setBreakClass method that the parameter value is legal.\n\nNot sure the test case was absolutely necessary, but I added it anyway. BTW, assertEquals takes the expected value as the first parameter, and the actual as the second. I modified the test case accordingly.\n\nThanks!\nVincent", "attachment_id": null, "id": 161951, "creator": "vhennebert@gmail.com", "time": "2012-09-04T22:29:03Z", "bug_id": 53598, "creation_time": "2012-09-04T22:29:03Z", "is_private": false}]