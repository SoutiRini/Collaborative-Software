[{"count": 0, "tags": [], "creator": "gutacker@online.de", "attachment_id": null, "id": 197964, "creation_time": "2017-03-24T10:50:45Z", "time": "2017-03-24T10:50:45Z", "bug_id": 60911, "text": "Prerequisits\n\nenable the use of SSLSessionIds on an Apache HTTPD and tomcat (connected via ajp protocol with Apache HTTPD as TLS connection endpoint):\n\n1. server.xml\n <Connector address=\"xx.xxx.xxx.xx\" port=\"8009\" protocol=\"AJP/1.3\"\n               redirectPort=\"8443\" enableLookups=\"false\" secure=\"true\" />\n\n2. mod_jk.conf:\n\nJkExtractSSL On\nJkSESSIONIndicator SSL_SESSION_ID\n\nSome clients (for example safari, internet explorer 11, curl) are able to issue get requests to our application getting a http 200 response. Some clients (firefox 52, chrome, SoapUI 5.2.1) are getting a http 500 response.\n\nFurther investigation shows this stacktrace in our catalina.out log:\nMar 23, 2017 6:45:52 PM org.apache.coyote.ajp.AjpProcessor process\nSEVERE: Error processing request\njava.lang.NullPointerException\n        at org.apache.catalina.connector.CoyoteAdapter.parseSessionSslId(CoyoteAdapter.java:909)\n        at org.apache.catalina.connector.CoyoteAdapter.postParseRequest(CoyoteAdapter.java:692)\n        at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:403)\n        at org.apache.coyote.ajp.AjpProcessor.process(AjpProcessor.java:193)\n        at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:607)\n        at org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor.run(JIoEndpoint.java:313)\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n        at java.lang.Thread.run(Thread.java:745)\n\nThis is caused by a missing sslsessionId in this code:\nrequest.setRequestedSessionId(request.getAttribute(SSLSupport.SESSION_ID_KEY).toString());\n\nA close look with a debugger shows that the request attribute is not present and this leads to a NullpointerException because of the toString() method call on a null value.\n\nFurther reading in RFC 5077 section 3.4 (see https://tools.ietf.org/html/rfc5077#section-3.4) leads us to the conclusion that the client decides if it wants to include the session id in the request or not.\nThus the parseSessionSslId method should be aware of the possibility that the session id might be missing.\n\nI think the Code in the parseSessionSslId method should look like this:\nString sessionId = request.getAttribute(SSLSupport.SESSION_ID_KEY);\nrequest.setRequestedSessionId(sessionId == null ?  sessionId : sessionId.toString());\n\nDeeper investigation shows that this problem exists in tomcat 8 and 9 too.", "is_private": false}, {"count": 1, "tags": [], "creator": "violetagg@apache.org", "attachment_id": null, "text": "Hi,\n\nThanks for the report and the investigation.\nThe fix was committed in:\n- trunk for 9.0.0.M19 onwards\n- 8.5.x for 8.5.13 onwards\n- 8.0.x for 8.0.43 onwards\n- 7.0.x for 7.0.77 onwards\n\nRegards,\nVioleta", "id": 197995, "time": "2017-03-26T16:53:41Z", "bug_id": 60911, "creation_time": "2017-03-26T16:53:41Z", "is_private": false}]