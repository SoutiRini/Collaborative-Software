[{"count": 0, "tags": [], "bug_id": 29286, "is_private": false, "id": 58357, "attachment_id": null, "creator": "jweir@jweir.com", "creation_time": "2004-05-28T21:40:38Z", "time": "2004-05-28T21:40:38Z", "text": "Actions:\n\n1 - Bring up HTML manager app page\n2 - Click \"Undeploy\" link next to desired application\n3 - Status message indicates success, expanded directory under \"webapps\" is\nremoved, WAR file under same directory is NOT removed\n\nThis prevents re-deployment of the app as Tomcat refuses to overwrite the WAR.\n\nText from your documentation:\n\nWARNING - This command will delete the contents of the web application directory\nif it exists within the appBase directory (typically \"webapps\") for this virtual\nhost . **This will also delete the source .WAR** if expanding occurred, as well\nas the XML Context definition. If you simply want to take an application out of\nservice, you should use the /stop command instead."}, {"count": 1, "tags": [], "bug_id": 29286, "is_private": false, "id": 58358, "attachment_id": null, "creator": "jweir@jweir.com", "creation_time": "2004-05-28T21:50:00Z", "time": "2004-05-28T21:50:00Z", "text": "This is not a problem in 5.0.19\n"}, {"count": 2, "tags": [], "bug_id": 29286, "attachment_id": null, "id": 58370, "time": "2004-05-29T15:08:58Z", "creator": "remm@apache.org", "creation_time": "2004-05-29T15:08:58Z", "is_private": false, "text": "This works for me. It can happen that the .war is locked by windows sometimes\n(very rarely), for a reason which eludes me. I recommend using an OS which\ndoesn't abusively lock reasources."}, {"count": 3, "tags": [], "creator": "bugzilla.e.wuuza@xoxy.net", "attachment_id": null, "is_private": false, "id": 60574, "time": "2004-07-13T22:19:22Z", "bug_id": 29286, "creation_time": "2004-07-13T22:19:22Z", "text": "I'm also having this problem with 5.0.25 but not 5.0.19.  Switching OSes is not\npossible.  Isn't it possible that Tomcat is the process that has the file locked\nbecause of a stream that isn't closed or something?  Nothing else is happening\non the server, and nothing in the configuration has changed except the Tomcat\nversion."}, {"count": 4, "tags": [], "creator": "bugzilla.e.wuuza@xoxy.net", "attachment_id": null, "text": "Using the Process Explorer tool here:\nhttp://www.sysinternals.com/ntw2k/freeware/procexp.shtml, I confirmed that the\njava.exe process that is created when running Tomcat 5.0.25 does indeed hold a\nhandle to the .war file, which prevents its deletion.  The handle is open when\nthe webapp is running as well as after the webapp is removed.  Under 5.0.19, the\n.war file has no handle open while the webapp is running.  If I forcefully close\nthe handle using the PE tool, I can delete the .war file using Windows Explorer,\nbut not before.  Killing or stopping the Tomcat service also releases the file\nhandle, but obviously the handle should be closed without doing any of that.", "id": 60576, "time": "2004-07-13T22:52:18Z", "bug_id": 29286, "creation_time": "2004-07-13T22:52:18Z", "is_private": false}, {"text": "More again - If the war is not deployed and is uploaded via the manager app\n(html in this case), then file handle to the .war file is kept open and\nsubsequent undeploys fail to delete the .war.  If Tomcat is restarted after a\ndeploy, the file handle to the .war is not open and things work as expected.  I\nsuspect this narrows the culprit down to the manager app.", "tags": [], "bug_id": 29286, "is_private": false, "count": 5, "id": 60578, "time": "2004-07-13T23:00:21Z", "creator": "bugzilla.e.wuuza@xoxy.net", "creation_time": "2004-07-13T23:00:21Z", "attachment_id": null}, {"count": 6, "tags": [], "bug_id": 29286, "attachment_id": null, "id": 60612, "time": "2004-07-14T21:18:01Z", "creator": "bugzilla.e.wuuza@xoxy.net", "creation_time": "2004-07-14T21:18:01Z", "is_private": false, "text": "Line 848 of ManagerServlet is the culprit:\n    stream = contextXml.openStream();\n\nBehind the scenes this eventually opens a URLJarFile, which is what actually \nopens the handle to the war file that is left open.  That class has a finalizer \nto close() the handle.  However, by default jar files are cached by \nJarFileFactory, thus the finalizer won't run because of the static reference.  \nI tried switching JarURLConnection.useCaches to false property while debugging \nso the factory would be bypassed, but the handle was still left open.  For some \nreason the finalizer is never ran.  URLConnection has no close-like method so \nthere's no way to force this.\n\nAnyway, this happens because of the new check for a context.xml in the war \nfile, which didn't happen in 5.0.19.  However, setting the host deployXML to \nfalse doesn't help because then the manager app never loads.  The only \nworkaround I can think of at this point is to install the 5.0.19 manager app on \n5.0.25.  Haven't tested that this works yet...\n\nSorry for the multitude of comments"}, {"count": 7, "tags": [], "bug_id": 29286, "is_private": false, "id": 60623, "attachment_id": null, "creator": "remm@apache.org", "creation_time": "2004-07-15T07:03:20Z", "time": "2004-07-15T07:03:20Z", "text": "I think this is useful information (I'm still as tried of these locking issues,\nthough ;) ). Normally in such cases, using setUseCaches on the URL connection\nfixes it. If this doesn't work for some reason (it could be there's another lock\nsomewhere), then I don't know how to fix it.\nI'm planning a deployer refactoring in the next release, as right now it's\nbecome too complex to maintain."}, {"count": 8, "tags": [], "bug_id": 29286, "text": "I'm pretty certain what I described in comment 2004-07-14 21:18 is accurate \nbecause the handle showed up as soon as I stepped into the part where the jar \nis opened to list the files, and the handle is associated with java.exe.\nAs mentioned, I tried turning off the caching, but I did it within the debugger \nand that could have screwed up the finalization of the objects.  That was \neasier than trying to get the sources set up enough to build a new tomcat.  I \nguess a real attempt to flip caching would be something like changing\n\n    stream = contextXml.openStream();\n\nto\n\n    URLConnection urlConn = contextXml.openConnection();\n    urlConn.setUseCaches(false);\n    stream = urlConn.openStream();\n\nI'm not sure if I'll get to try that anytime soon.  For now copying the manager \napp from 5.0.19 to the 5.0.25 installation solves the issue and works fine, at \nleast for what we're using it for, and I'm busy with other things.  This almost \nseems like it should be called a JDK problem, as I doubt anyone would really \nexpect the above code to do such a thing.\n\nThanks for the input and good luck with the refactoring.\n", "id": 60654, "attachment_id": null, "creator": "bugzilla.e.wuuza@xoxy.net", "creation_time": "2004-07-15T20:11:24Z", "time": "2004-07-15T20:11:24Z", "is_private": false}]