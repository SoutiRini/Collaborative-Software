[{"count": 0, "tags": [], "creator": "jesse.glick@netbeans.com", "attachment_id": null, "text": "I have heard it reported frequently that people running Ant from inside NetBeans\n(which reuses the same VM, does not spawn) have troubles with file locks after\ncompiling with modern <javac> on Windows. Finally came up with a self-contained\ntest case which reproduces it. Unpack the (to-be-attached) ZIP into a fresh\ndirectory and run the Ant script on Windows (I used Win2K). It should give an\nerror saying it failed to delete a JAR file. Try again (make sure it is using a\ndifferent directory this time, e.g. wait a minute) with a different\nbuild.compiler - classic works fine, extjavac works fine, etc., it is only\nmodern that produces the problem.\n\nThe problem seems to be that the modern compiler opens a JAR file present in the\nclasspath and does not clean up (release the file lock, i.e. ZipFile.close()).\nOn Unix and so on this does not matter (advisory locking). On Windows it\nprevents any modifications to the file until the VM is exited.\n\nMostly affects people using NetBeans or others tools which could run Ant\nrepeatedly in one VM; frequently heard as \"clean target does not work until VM\nrestarted\". But as demonstrated here it can be observed in standalone Ant as\nwell. I was unable to find any obvious problem by looking through 1.3 Javac\nsources.\n\n----\n\nOriginally reported against NetBeans as:\n\nhttp://www.netbeans.org/issues/show_bug.cgi?id=14843\n\nCredits goes to aaronk@netbeans.org for working on a small test case to\nreproduce with.", "id": 5015, "time": "2001-08-29T13:06:23Z", "bug_id": 3345, "creation_time": "2001-08-29T13:06:23Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 3345, "attachment_id": 469, "id": 5016, "time": "2001-08-29T13:06:56Z", "creator": "jesse.glick@netbeans.com", "creation_time": "2001-08-29T13:06:56Z", "is_private": false, "text": "Created attachment 469\nZIP of a test case"}, {"count": 2, "tags": [], "text": "True, but this is a bug in the modern compiler implementation, isn't it?\nThe workaround is to use a forked javac process (as you already know 8-), what do\nyou expect us to do?", "attachment_id": null, "id": 6094, "creator": "bodewig@apache.org", "time": "2001-09-27T03:57:41Z", "bug_id": 3345, "creation_time": "2001-09-27T03:57:41Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 3345, "attachment_id": null, "id": 6141, "time": "2001-09-27T13:58:42Z", "creator": "jesse.glick@netbeans.com", "creation_time": "2001-09-27T13:58:42Z", "is_private": false, "text": "This should probably be low priority. Anyway, (1) yes it is at root a javac bug\n(I suppose) but it is documented that javac should not be called except as a\ncommandline tool, and Ant doesn't obey this, and it doesn't work, so in some\nsense it is Ant's responsibility to deal with the result; (2) I believe it is\npossible to work around the problem via some kind of hacks (i.e. directly\nclearing internal static fields in javac, or similar). AFAIK an earlier version\nof NetBeans did so successfully (current releases just bundle a modified version\nof javac with various changes to make it embeddable) but I don't know the exact\ntechniques involved (not open-source, alas, because of modified javac code).\n\n(I don't really \"expect\" anyone to fix this if there is not sufficient incentive\nto do so--yes forked javac or jikes works--just wanted to make sure that the\nproblem was recorded together with a test case in case it comes up in the\nfuture.)"}, {"count": 4, "tags": [], "creator": "umagesh@apache.org", "attachment_id": null, "id": 8710, "time": "2001-12-07T15:20:19Z", "bug_id": 3345, "creation_time": "2001-12-07T15:20:19Z", "is_private": false, "text": "*** Bug 4736 has been marked as a duplicate of this bug. ***"}, {"count": 5, "tags": [], "creator": "umagesh@apache.org", "attachment_id": null, "id": 8712, "time": "2001-12-07T15:56:41Z", "bug_id": 3345, "creation_time": "2001-12-07T15:56:41Z", "is_private": false, "text": "Unfortunately, the only thing I feel we can do right now is document it as a \nknown (Javac) issue, and mark this invalid as this is not really an Ant issue - \npublic APIs can and will be called not only by Ant, but other tools too.  It is \nupto the API writer to take care of the issues arising from the API, instead of\nsaying 'Javac must not be used other than as a command line tool'.\n\nSo, is adding documention good enough to close this issue?"}, {"count": 6, "tags": [], "text": "My $0.02: document as a known problem in <javac> task documentation. If I knew\nof a decent workaround I would suggest it, but the problem seems to lie pretty\ndeep.", "is_private": false, "bug_id": 3345, "id": 8735, "time": "2001-12-10T03:16:33Z", "creator": "jesse.glick@netbeans.com", "creation_time": "2001-12-10T03:16:33Z", "attachment_id": null}, {"count": 7, "tags": [], "text": "Documented as a known JDK issue.  Workaround suggested.", "attachment_id": null, "id": 8741, "creator": "umagesh@apache.org", "time": "2001-12-10T07:52:55Z", "bug_id": 3345, "creation_time": "2001-12-10T07:52:55Z", "is_private": false}]