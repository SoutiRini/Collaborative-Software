[{"count": 0, "tags": [], "bug_id": 51418, "attachment_id": 27194, "is_private": false, "id": 147364, "time": "2011-06-22T15:54:00Z", "creator": "bimargulies@gmail.com", "creation_time": "2011-06-22T15:54:00Z", "text": "Created attachment 27194\nA patch to Tomcat.java as described.\n\nthe Tomcat.addWebapp all create a context, set up the default realm, and set up the surrogate global web.xml lifecycle listener. They differ according to allowing more or less specific configuration of the new webapp. At the end, they add the new context to the host.\n\nOnce the container is running, the act of calling addChild starts it. Some configuration steps have to precede 'start' -- for example, setting the loader. Thus, in a complex case, the user needs to take more control of the process.\n\nAs things are today, this requires subclassing the Tomcat class and then copying code from the four-arg addWebapp.\n\nThe patch provided here allows non-subclasses to take complete control of the process. It accomplishes this by providing methods to obtain three things that are otherwise buried in the Tomcat class: the default in-memory realm, the listener that serves as a surrogate global web.xml, and a dummy pathname to allow the listener to work without conflicts.\n\nGiven these accessors, a user can simple create a the context (and its ContextConfig) and configure it to their heart's content, and then pass it to the addChild method of a Host."}, {"count": 1, "tags": [], "text": "Thanks for the patch. It has been applied with a few changes (line lengths, spaces rather than tabs) to 7.0.x and will be included in 7.0.17 onwards.", "attachment_id": null, "bug_id": 51418, "id": 147372, "time": "2011-06-22T18:31:16Z", "creator": "markt@apache.org", "creation_time": "2011-06-22T18:31:16Z", "is_private": false}]