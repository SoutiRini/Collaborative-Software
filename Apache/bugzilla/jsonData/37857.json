[{"count": 0, "tags": [], "bug_id": 37857, "attachment_id": null, "id": 83495, "time": "2005-12-10T00:55:54Z", "creator": "gepardcv@yahoo.com", "creation_time": "2005-12-10T00:55:54Z", "is_private": false, "text": "I'm using Sybase 15.0 for my node store, and I found that it deadlocks when I\ntry to create a user account and then give that user account permissions in one\nexternal (JBoss JCA) transaction. I tracked the bug down to AclMethod.java:234.\n\nFirst, AclMethod.parseRequest is called. At this point, the slideToken does not\nyet know about any external transactions which may be running. (That happens\nlater, in AbstractWebdavMethod.run.) The parseRequest method calls\ncreateNodePermissionList, which then calls createActionUri, which calls\nstructure.retrieve. This last call then takes the incomplete slideToken object,\nand tries to retrieve something from the node store database. Since it cannot\njoin the existing transaction, it tries to request an exclusive row-level lock,\nwhich Sybase is already holding, and blocks forever.\n\nI can switch isolation level down to REPEATABLE_READ in Domain.xml, which does\nsolve the problem, but that sounds wrong. It seems to me that a WebDAV method\nwhich ignores the fact that it's running inside a transaction is doing the wrong\nthing. MySQL does not deadlock here, so it's probably doing a dirty read in\nspite of the SERIALIZABLE isolation level setting.\n\nWhat exactly is the right thing to do? I'll be happy to implement a fix if\nanyone can suggest a good approach. A nasty approach would be to grab the\ntransaction information from the header and apply changes to the slideToken\nbefore the structure.retrieve call, but that would amount to copying code from\nAbstractWebdavMethod.run."}]