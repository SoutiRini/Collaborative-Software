[{"count": 0, "attachment_id": null, "bug_id": 55420, "text": "Issuing a LOCK command returns an XML response describing the acquired lock, including its timeout. \n\nIf the request is issued on a resource which takes a while to lock (e.g., because it's a large collection, or the disk is under heavy load) then the returned timeout is smaller than the request by the amount of time the LOCK request took to execute (this seems ok to me).\n\nIf the request takes so long that the lock has timed out before it is completely acquired, then Apache will expire the lock, but will return a large positive timeout to the client (for example, \"Second-18446744073709551612\" for a 30-second lock which took 34 seconds to acquire). This is obviously incorrect.\n\nAny of the following behaviors would be more correct than the current behavior:\n\n- Fail the request with 408 REQUEST TIMEOUT.\n\n- Return a timeout of \"Second-0\" which clients would plausibly interpret to mean that the lock was acquired but is already gone.\n\n- Adjust the timeout of the lock upwards so that the returned timeout is positive (RFC4918 allows this).\n\n\n(Note that the returned value also violates RFC4918 section 10.7 because it is greater than 2^32, but that is less important, imho.)", "id": 169451, "time": "2013-08-14T23:44:01Z", "creator": "wiml@omnigroup.com", "creation_time": "2013-08-14T23:44:01Z", "tags": [], "is_private": false}, {"count": 1, "tags": [], "creator": "wiml@omnigroup.com", "text": "Still exists in 2.4.12.", "id": 181661, "time": "2015-03-11T02:42:08Z", "bug_id": 55420, "creation_time": "2015-03-11T02:42:08Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "creator": "christophe.jaillet@wanadoo.fr", "text": "Created attachment 32559\nProposed patch\n\nHi,\n\ncould you please try the attached patch?\nIt should implement your second proposal.\n\nI don't have the possibility myself to give it a try.", "id": 181691, "time": "2015-03-11T22:25:39Z", "bug_id": 55420, "creation_time": "2015-03-11T22:25:39Z", "is_private": false, "attachment_id": 32559}, {"count": 3, "tags": [], "text": "+1, it looks good to me. I haven't tried it on an actual loaded machine, but inserting a sleep() call into dav_add_lock() elicits the bug without that patch but doesn't elicit the bug with that patch applied.", "is_private": false, "bug_id": 55420, "id": 181694, "time": "2015-03-12T00:30:05Z", "creator": "wiml@omnigroup.com", "creation_time": "2015-03-12T00:30:05Z", "attachment_id": null}, {"count": 4, "tags": [], "creator": "christophe.jaillet@wanadoo.fr", "text": "r1666361 in trunk", "id": 181721, "time": "2015-03-13T07:21:30Z", "bug_id": 55420, "creation_time": "2015-03-13T07:21:30Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "text": "This is part of the (unreleased) 2.4.13\nbackport in r11670319", "is_private": false, "bug_id": 55420, "id": 183779, "time": "2015-06-27T07:26:09Z", "creator": "christophe.jaillet@wanadoo.fr", "creation_time": "2015-06-27T07:26:09Z", "attachment_id": null}, {"count": 6, "tags": [], "bug_id": 55420, "is_private": false, "text": "oops, r1670319", "id": 183781, "time": "2015-06-27T07:46:25Z", "creator": "christophe.jaillet@wanadoo.fr", "creation_time": "2015-06-27T07:46:25Z", "attachment_id": null}]