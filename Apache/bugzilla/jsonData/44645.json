[{"count": 0, "tags": [], "creator": "seth.leger@raritan.com", "attachment_id": 21695, "id": 114812, "time": "2008-03-20T07:09:08Z", "bug_id": 44645, "creation_time": "2008-03-20T07:09:08Z", "is_private": false, "text": "Created attachment 21695\nPatch for JNDIRealm.java\n\nThe \"java.naming.ldap.factory.socket\" JNDI environment parameter is used to specify the classname of a javax.net.SocketFactory class to be used for all network connections inside a JNDI context.\n\nThis parameter is not supported in the getDirectoryContextEnvironment() function of JNDIRealm. It was probably overlooked because there is no constant for it in the JNDI API (for some reason...). This patch adds support for this parameter to JNDIRealm.\n\nThis is necessary so that you can perform customized SSL negotiation on the connection. For instance, it allows you to connect to an SSL server with an invalid, expired, self-signed, or otherwise untrusted certificate. To do this, you just need to write a javax.net.ssl.SSLSocketFactory that does not perform the normal certificate validation during the SSL handshake and then specify the classname on the new setSocketFactory() call added by this patch."}, {"count": 1, "tags": [], "bug_id": 44645, "text": "This has been open for some time and I don't recall there being wider interest in this feature.\n\nHaving reviewed the patch, it requires setting the SocketFactory directly. All the current getters/setters are intended to be configured via server.xml/context.xml.\n\nIf you are setting the ServerFactory directly, you can just as easily extend the JNDIRealm and override getDirectoryContextEnvironment() to add this or any other additional environment parameter.", "id": 198939, "time": "2017-05-29T18:02:32Z", "creator": "markt@apache.org", "creation_time": "2017-05-29T18:02:32Z", "is_private": false, "attachment_id": null}]