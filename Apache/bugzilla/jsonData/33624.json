[{"count": 0, "tags": [], "bug_id": 33624, "attachment_id": null, "id": 71133, "time": "2005-02-17T19:16:10Z", "creator": "todd.bradley@polycom.com", "creation_time": "2005-02-17T19:16:10Z", "is_private": false, "text": "I have only tested this on Windows XP, using Java 5 and log4j 1.2.9 under Eclipse.\n\nI have a test class that opens a SocketHubAppender and spews some fake log\nmessages to it (I'll call this \"spewer\").  I have another class that opens a\nclient socket connection to the SocketHubAppender and reads log messages from it.\n\nThe problem is that when the SocketHubAppender goes away, the socket doesn't get\nclosed in a consistent way.\n\nWhen I run the spewer class in a separate process from the client, I get an\nEOFException when the spewer finishes, which is what I expect.\n\nWhen I run the spewer class in a thread of the client, I never get an exception\nwhen the spewer finishes.  Therefore, my client hangs forever trying to read on\nthat socket.\n\nI posted this problem to the log4j-user list on Wed 2/9/2005, but nobody seems\nto have any suggestions.  So, I'm guessing this is a bug.\n\nI marked this as Severity: blocker because it's blocking my ability to test my\nclient software.  My JUnit tests rely on the client shutting down correctly and\nconsistently, and it can't do so since the SocketHubAppender doesn't (appear to)\nshut down correctly."}, {"count": 1, "tags": [], "bug_id": 33624, "attachment_id": 14307, "id": 71134, "time": "2005-02-17T20:03:11Z", "creator": "todd.bradley@polycom.com", "creation_time": "2005-02-17T20:03:11Z", "is_private": false, "text": "Created attachment 14307\ncontains 4 java files and 1 readme.txt that explains how to reproduce the problem\n\nSee the readme.txt inside the .zip file"}, {"count": 2, "tags": [], "bug_id": 33624, "attachment_id": null, "id": 76888, "time": "2005-07-01T18:58:45Z", "creator": "mwomack@apache.org", "creation_time": "2005-07-01T18:58:45Z", "is_private": false, "text": "1.2.12 candidate"}, {"text": "I can reproduce the problem with the code that you submitted, thank you.  But \nI don't think this is a problem with the SocketHubAppender.  I think it has \nsomething to do with the way the JVM handles sockets when the server and \nclient are in the same thread.  I can workaround the problem if I do one of \nthe following:\n1) Explicitly call System.exit(0) when the Server thread is exiting the run() \nmethod.\n2) Explicitly call spewAppender.close when the Server thread is exiting.  \nInterestingly, I get a NullPointerException in this case, apparently when \nclosing the oos in SocketHubAppender.cleanUp().\n\nI also played with setting the Server threads to daemon threads, but that does \nnot seem to allow the JVM to exit properly.\n\nI think you should make sure that the spewAppender.close() method is getting \ncalled (by shutting down the repository, or explicitly calling it) or that the \nJVM completely exits.\n\nClosing as WONTFIX, but reopen if you find something more.\n\n1.2.12 declined", "tags": [], "creator": "mwomack@apache.org", "attachment_id": null, "count": 3, "id": 77817, "time": "2005-07-29T05:07:11Z", "bug_id": 33624, "creation_time": "2005-07-29T05:07:11Z", "is_private": false}]