[{"count": 0, "tags": [], "creator": "pugh@cs.umd.edu", "attachment_id": 21732, "is_private": false, "id": 115078, "time": "2008-03-28T14:30:30Z", "bug_id": 44702, "creation_time": "2008-03-28T14:30:30Z", "text": "Created attachment 21732\nPatch to fix bug\n\nThe calculation in LocalVariableTable.getLocalVariable is incorrect:\n\n public final LocalVariable getLocalVariable( int index, int pc ) {\n        for (int i = 0; i < local_variable_table_length; i++) {\n            if (local_variable_table[i].getIndex() == index) {\n                int start_pc = local_variable_table[i].getStartPC();\n                int end_pc = start_pc + local_variable_table[i].getLength();\n                if ((pc >= start_pc) && (pc < end_pc)) {\n                    return local_variable_table[i];\n                }\n            }\n        }\n        return null;\n    }\n\nFrom the VM spec:\n\n\"The given local variable must have a value at indices into the code array in the interval [start_pc, start_pc+length], that is, between start_pc and start_pc+length inclusive. The value of start_pc must be a valid index into the code array of this Code attribute and must be the index of the opcode of an instruction. Either the value of start_pc+length must be a valid index into the code array of this Code attribute and be the index of the opcode of an instruction, or it must be the first index beyond the end of that code array.\"\n\nThe check should be pc <= end_pc, not pc < end_pc.\n\nThis problem exists both in HEAD and in older versions.\n\nI've attached a patch."}, {"count": 1, "tags": [], "bug_id": 44702, "text": "Patch applied. Thanks!", "id": 115080, "time": "2008-03-28T16:10:25Z", "creator": "tcurdt@apache.org", "creation_time": "2008-03-28T16:10:25Z", "is_private": false, "attachment_id": null}]