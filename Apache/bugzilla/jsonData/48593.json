[{"count": 0, "tags": [], "text": "Created attachment 24881\nA simple java program that demonstrates the bug\n\nI have a program that adds slides to a PowerPoint slide deck one slide at a time based on a user action. In between every addition of a new slide a save is performed so that the new slide is written to the slide deck. This save is necessary because the user may decide to view the PowerPoint presentation after the addition of a single slide. The first slide that is added is fine. The second slide that is added is fine. The third slide that is added is corrupt every time. This has nothing to do with slide contents, as the corruption occurs with blank slides as well as slides with content. \n\nThe attached sample code demonstrates this bug. The sample code generates two slide decks. One has two slides and works fine, the other has three slides and the third slide is corrupt. Saving after every addition of a slide is done simply to demonstrate the problem. If we add 3 slides and then perform a single save, the corruption does not happen. But this is not a feasible work around for the issue; we need to be able to write the new slide to the slide deck every time the user initiates the action, since the user could decide to view his new slide deck after the addition of every slide.\n\nIt is also interesting to note that a slide deck created through PowerPoint (not prgorammatically using POI) does not have this problem. I can create a blank PowerPoint presentation and then append and save however many slides I want using POI.\n\nI've also attempted to alleviate the problem by re-reading in the SlideShow object in between every save. This had no effect.", "is_private": false, "id": 133799, "creator": "jdente@21technologies.com", "time": "2010-01-21T13:19:15Z", "bug_id": 48593, "creation_time": "2010-01-21T13:19:15Z", "attachment_id": 24881}, {"count": 1, "tags": [], "bug_id": 48593, "is_private": false, "id": 133859, "attachment_id": null, "creator": "yegor@dinom.ru", "creation_time": "2010-01-24T06:09:41Z", "time": "2010-01-24T06:09:41Z", "text": "Can you attach the template ppt? Evidently, the problem is in the way POI modifies existing ppt files. So, I need the source ppt to analyze what is wrong.\n\nYegor"}, {"count": 2, "tags": [], "bug_id": 48593, "attachment_id": null, "text": "(In reply to comment #1)\n> Can you attach the template ppt? Evidently, the problem is in the way POI\n> modifies existing ppt files. So, I need the source ppt to analyze what is\n> wrong.\n> \n> Yegor\n\nI did not use a template ppt. Initially the ppt is created by simply using \"new SlideShow()\" and then writing that slide show to a new *.ppt file. If you look at the sample java program for demonstrating the bug, the very first run of the program will create the new ppt file which is written during the save operation. In order to reproduce the bug, the sample java program assumes that the \"threeSlides.ppt\" file does not exist initially. In fact, if you run this program with a ppt file generated through PowerPoint (not POI), the problem does not occur. It only happens when POI creates the ppt file.", "id": 133901, "time": "2010-01-25T11:52:22Z", "creator": "jdente@21technologies.com", "creation_time": "2010-01-25T11:52:22Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 48593, "text": "Hi there,\n\nI am having the same problem under Ubuntu 11.10, java-6-openjdk and Apache POI 3.9 (downloaded from Maven Repository).\n\nMy exception trace is:\n\njava.lang.NullPointerException\n\tat org.apache.poi.hslf.usermodel.SlideShow.buildSlidesAndNotes(SlideShow.java:401)\n\tat org.apache.poi.hslf.usermodel.SlideShow.<init>(SlideShow.java:109)\n\tat Main.getPresentation(Main.java:56)\n\tat Main.method2(Main.java:48)\n\tat Main.main(Main.java:14)\n\nI am attaching my source code too. Note that method1() works while method2() is the one that throws the exception.\n\nMaybe this additional information gives you some guidance: The truth is that once I had the same experience just with Sun JDK, but without using Apache POI at all. I just serialized some objects creating a new ObjectOutputStream each time and after overwriting the same file several times I got an StreamCorruptedException. There was a bug in the forums of Sun JDK at that time, but I cannot find it now.\n\nThe problem here is that I am making a service that needs to persist the Powerpoint after every change (e.g.: after I append one slide or change a text), so I don't know what can I do or if you can provide a workaround for that.", "id": 165297, "time": "2013-02-18T07:17:05Z", "creator": "rafael.lopez@udc.es", "creation_time": "2013-02-18T07:17:05Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 48593, "attachment_id": 29961, "id": 165298, "time": "2013-02-18T07:22:19Z", "creator": "rafael.lopez@udc.es", "creation_time": "2013-02-18T07:22:19Z", "is_private": false, "text": "Created attachment 29961\nMy example of the same problem\n\nNote that if you execute the application using method1() (commented) instead of method2(), it doesn't fail"}, {"count": 5, "tags": [], "text": "Comment on attachment 29961\nMy example of the same problem\n\ntext/x-java-sourceHi there,\n\nI am having the same problem under Ubuntu 11.10, java-6-openjdk and Apache POI 3.9 (downloaded from Maven Repository).\n\nMy exception trace is:\n\njava.lang.NullPointerException\n\tat org.apache.poi.hslf.usermodel.SlideShow.buildSlidesAndNotes(SlideShow.java:401)\n\tat org.apache.poi.hslf.usermodel.SlideShow.<init>(SlideShow.java:109)\n\tat Main.getPresentation(Main.java:56)\n\tat Main.method2(Main.java:48)\n\tat Main.main(Main.java:14)\n\nI am attaching my source code too. Note that method1() works while method2() is the one that throws the exception.\n\nMaybe this additional information gives you some guidance: The truth is that once I had the same experience just with Sun JDK, but without using Apache POI at all. I just serialized some objects creating a new ObjectOutputStream each time and after overwriting the same file several times I got an StreamCorruptedException. There was a bug in the forums of Sun JDK at that time, but I cannot find it now.\n\nThe problem here is that I am making a service that needs to persist the Powerpoint after every change (e.g.: after I append one slide or change a text), so I don't know what can I do or if you can provide a workaround for that.", "is_private": false, "id": 165299, "creator": "rafael.lopez@udc.es", "time": "2013-02-18T07:22:58Z", "bug_id": 48593, "creation_time": "2013-02-18T07:22:58Z", "attachment_id": 29961}, {"count": 6, "tags": [], "bug_id": 48593, "attachment_id": 30944, "id": 170685, "time": "2013-10-18T23:49:29Z", "creator": "kiwiwings@apache.org", "creation_time": "2013-10-18T23:49:29Z", "is_private": false, "text": "Created attachment 30944\n[PATCH] Bug 48593 - Multi Rewrites\n\nThe were two issues:\n- the newly create slide has had the same record position as an already exisiting record and the mapping of old to new positions went wrong\n- the position of the usr record wasn't updated\n\nI've copied some code from HSLFSlideShow.write() for updating the position ids -\nit would be nice if these codeparts maybe become refactored to one some day ...\n\nApart from the bugfix, I've allowed me ;) to refactor the SlideShow class a bit. Similar to the patch #55579, which also needs to add a new persistent object.\n\n(Tested with Libre Office 4.0 and Excel Viewer 2010)"}, {"count": 7, "tags": [], "text": "Created attachment 30948\n[PATCH] Bug 48593 - Multi Rewrites\n\nold patch didn't contain a new test helper class", "is_private": false, "id": 170703, "creator": "kiwiwings@apache.org", "time": "2013-10-19T18:14:27Z", "bug_id": 48593, "creation_time": "2013-10-19T18:14:27Z", "attachment_id": 30948}, {"count": 8, "tags": [], "bug_id": 48593, "attachment_id": 31161, "is_private": false, "id": 171944, "time": "2013-12-27T00:05:11Z", "creator": "kiwiwings@apache.org", "creation_time": "2013-12-27T00:05:11Z", "text": "Created attachment 31161\n[PATCH] multiple rewrites fixed\n\nThis patch is a merged version, because in the meantime there were a few changes to the SlideShow class. Furthermore the position recalc code is now only in HSLFSlideShow"}, {"count": 9, "tags": [], "bug_id": 48593, "attachment_id": null, "id": 171945, "time": "2013-12-27T00:50:34Z", "creator": "kiwiwings@apache.org", "creation_time": "2013-12-27T00:50:34Z", "is_private": false, "text": "applied with svn ver r1553610\n\nOpposed to the uploaded attachment, I have removed the hashmap replacements again, as I wasn't sure, if the hashtables have been used with a purpose ... although the scratchpad tests with hashmaps ran 52-54 sec. vs. hashtables 1 min 02 sec on my pc\n\nIf there's no reason for being thread safe one day, the hashtables should be replaced ..."}]