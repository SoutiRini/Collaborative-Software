[{"count": 0, "tags": [], "text": "Today, SSI pages are considered \"dynamic\" and do not pass any cache-related\nheaders back to the browser (e.g. Last-Modified), unless you use the XBitHack\nhack to send a Last-Modified header indicating the modification time of the SSI\npage that was called.  One can use mod_expires to set an Expires header for some\npages, but this isn't a proper solution either.\n\nI would like to see an SSI page intelligently pass cache-related headers back to\nthe browser.  Individual components included in a document might have their own\nLast-Modified dates, their own Expires dates and even some Cache-Control\nheaders.  At a minimum, Apache should pass the most restrictive set of headers\nback up to the browser (e.g. the latest Last-Modified date, the earliest Expires\ndate, and the smallest Cache-Control: max-age time).  If one component sent a\n\"Cache-Control: no-cache\" header back, that should effectively make the entire\nSSI page \"no-cache\" as well.  If a CGI component responded with a Last-Modified\ndate of an hour ago, and that was the only component that changed recently,\nthat's what the browser would receive for the entire SSI page.\n\nObviously, this should be a configurable option, since there would be a\nperformance impact, as the server would need to parse and perform all of the SSI\nfunctions on the document *before* it could return any headers, but this is an\nacceptable loss.  \n\nIf one wanted to go one step further, this could be integrated with mod_proxy\nsuch that <!--#include virtual=\"...\" --> requests would be proxied internally. \nIntelligent CGI components expressing a good max-age and Expires headers could\nsave themselves from being called frequently for SSI, as the proxy module would\nstep in and deliver the cached response to the calling SSI page.", "attachment_id": null, "id": 29104, "creator": "david+apache@fastolfe.net", "time": "2003-01-10T04:13:36Z", "bug_id": 15943, "creation_time": "2003-01-10T04:13:36Z", "is_private": false}, {"count": 1, "tags": [], "text": "If you would like to do this, patches are welcome.  But, this is not trivial to add nor easy.\n\nThe biggest problem is dealing with changes to the cache-related headers once the headers are sent.  In order to try to compute the most restrictive combination, you have to run/buffer the entire request first.  That's not optimal from a performance standpoint and I believe might be worse than the current situation.\n\nI'm going to mark this as WONTFIX, but if you'd like to continue this discussion, the proper place is on the dev@httpd mailing list not the issue database.", "attachment_id": null, "bug_id": 15943, "id": 31398, "time": "2003-02-17T04:21:11Z", "creator": "jerenkrantz@apache.org", "creation_time": "2003-02-17T04:21:11Z", "is_private": false}]