[{"count": 0, "tags": [], "bug_id": 48397, "text": "Created attachment 24712\nPatch for #47424\n\nThis patch solves the problem of an infinite loop in footnotes as reported in bug 47424.\n\nThe infinite loop occurred in org.apache.fop.layoutmgr.PageBreakingAlgorithm.getFootnoteSplit(int, int, int, int, boolean).\n\nThis patch does not solve the problem of another infinite loop in footnotes as reported in bugs 48063 and 48162. This infinite loop occurs in org.apache.fop.layoutmgr.PageBreakingAlgorithm.createFootnotePages(KnuthPageNode). The test attached to 48063 is converted to a testcase and added to the list of disabled testcases.", "id": 132859, "time": "2009-12-16T05:38:00Z", "creator": "heidi.vanparys@gmail.com", "creation_time": "2009-12-16T05:38:00Z", "is_private": false, "attachment_id": 24712}, {"count": 1, "text": "Hi Heidi,\n\nThanks for your patch. Although I'm afraid it's more of a workaround than an actual fix for the issue. Not that it's useless, it may actually help people who run into this issue and need a quick temporary solution. But I'm not sure we want it to be integrated into the code.\n\nI acknowledge that page breaking is not the simplest piece of code, but it would be good to identify the origin of the error. From a quick debugging session that I made some time ago, I noticed errors in the PageBreakingAlgorithm.restartFrom method: some footnote-related variables are not properly reset, which means that when getFootnoteSplit is called it's believed to be more footnote content than there actually is. The problem may lie there.\n\nCreating a simple test case is key to help the debugging. I would try to create an FO file that is just a few lines high, with no side region (region-before, -after, etc.) and specify every dimension in points (to have more 'even' values in the debugger). Then, define the page height such that the content doesn't exactly fit (for example, 105pt high with lines of 10pt), which will trigger the call to the restartFrom method, and start debugging from there. The second attachment to bug 47424 may actually be a good start.\n\nATM I don't have much time to look into this issue in more detail unfortunately. I hope those few notes will help you get started if you want to have a go at it. Meanwhile, your patch will be helpful to people in urgent need for a workaround.\n\n\nThanks,\nVincent\n\n\n(In reply to comment #0)\n> Created an attachment (id=24712) [details]\n> Patch for #47424\n> \n> This patch solves the problem of an infinite loop in footnotes as reported in\n> bug 47424.\n> \n> The infinite loop occurred in\n> org.apache.fop.layoutmgr.PageBreakingAlgorithm.getFootnoteSplit(int, int, int,\n> int, boolean).\n> \n> This patch does not solve the problem of another infinite loop in footnotes as\n> reported in bugs 48063 and 48162. This infinite loop occurs in\n> org.apache.fop.layoutmgr.PageBreakingAlgorithm.createFootnotePages(KnuthPageNode).\n> The test attached to 48063 is converted to a testcase and added to the list of\n> disabled testcases.", "creator": "vhennebert@gmail.com", "attachment_id": null, "id": 132897, "time": "2009-12-17T04:19:26Z", "bug_id": 48397, "creation_time": "2009-12-17T04:19:26Z", "tags": [], "is_private": false}, {"count": 2, "text": "resetting P2 open bugs to P3 pending further review", "bug_id": 48397, "attachment_id": null, "id": 157313, "time": "2012-04-07T01:41:23Z", "creator": "gadams@apache.org", "creation_time": "2012-04-07T01:41:23Z", "tags": [], "is_private": false}, {"count": 3, "tags": [], "bug_id": 48397, "text": "increase priority for bugs with a patch", "id": 157840, "time": "2012-04-11T03:20:25Z", "creator": "gadams@apache.org", "creation_time": "2012-04-11T03:20:25Z", "is_private": false, "attachment_id": null}]