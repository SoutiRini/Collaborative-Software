[{"count": 0, "tags": [], "bug_id": 9705, "attachment_id": null, "text": "I'm using JNDIRealm with the following setup.\n\n<Realm className=\"org.apache.catalina.realm.JNDIRealm\"\n\tdebug=\"99\"\n\tconnectionName=\"cn=Directory Manager\"\n\tconnectionPassword=\"mypassword\"\n\tconnectionURL=\"ldap://myldapserver\"\n\tuserPattern=\"uid={0}, ou=People, dc=mydomain\"\n\tuserRoleName=\"ou\"/>\n\nI noticed that JNDIRealm is performing an extra query with a search base of \"\" \nand a filter of \"(objectClass=*)\". If I perform this search using ldapsearch, \nI receive an error of \"ldap_search: No such object\", so, it appears that that \nsearch isn't returning any meaningful information.\n\nThe following is what gets logged when using iPlanet Directory Server 5.1.\n\n[07/Jun/2002:15:41:36 -0500] conn=23 op=12 BIND dn=\"cn=Directory Manager\" \nmethod=128 version=3\n[07/Jun/2002:15:41:36 -0500] conn=23 op=12 RESULT err=0 tag=97 nentries=0 \netime=0 dn=\"cn=directory manager\"\n[07/Jun/2002:15:41:36 -0500] conn=23 op=13 SRCH base=\"uid=jemiller, ou=People, \ndc=mydomain\" scope=0 filter=\"(objectClass=*)\" attrs=\"ou\"\n[07/Jun/2002:15:41:36 -0500] conn=23 op=13 RESULT err=0 tag=101 nentries=1 \netime=0\n[07/Jun/2002:15:41:36 -0500] conn=23 op=14 BIND dn=\"uid=jemiller, ou=People, \ndc=mydomain\" method=128 version=3\n[07/Jun/2002:15:41:36 -0500] conn=23 op=14 RESULT err=0 tag=97 nentries=0 \netime=0 dn=\"uid=jemiller,ou=people,dc=mydomain\"\n[07/Jun/2002:15:41:36 -0500] conn=23 op=15 SRCH base=\"\" scope=0 \nfilter=\"(objectClass=*)\" attrs=ALL\n[07/Jun/2002:15:41:36 -0500] conn=23 op=15 RESULT err=0 tag=101 nentries=1 \netime=0\n\nAnother possible optimization could be implemented for the following setup. \nWith this setup connectionName and connectionPassword are left unspecified. As \na result, an anonymous bind occurs when querying for the userRoleName. This \nworks as long as the attribute that is being queried for is readable by the \nanonymous user.\n\n<Realm className=\"org.apache.catalina.realm.JNDIRealm\"\n\tdebug=\"99\"\n\tconnectionURL=\"ldap://myldapserver\"\n\tuserPattern=\"uid={0}, ou=People, dc=mydomain\"\n\tuserRoleName=\"ou\"/>\n\nThis is what the log looks like. As you can see, it's the same as above. In \nthis case, really all you need to do is bind as the user that you are \nauthenticating. IMHO, if the connectionName and connectionPassword are left \nunspecified, it shouldn't perform the extra bind.\n\n[07/Jun/2002:15:54:05 -0500] conn=26 op=0 BIND dn=\"\" method=128 version=3\n[07/Jun/2002:15:54:05 -0500] conn=26 op=0 RESULT err=0 tag=97 nentries=0 \netime=0 dn=\"\"\n[07/Jun/2002:15:54:26 -0500] conn=26 op=1 SRCH base=\"uid=jemiller, ou=People, \ndc=mydomain\" scope=0 filter=\"(objectClass=*)\" attrs=\"ou\"\n[07/Jun/2002:15:54:26 -0500] conn=26 op=1 RESULT err=0 tag=101 nentries=1 \netime=0\n[07/Jun/2002:15:54:26 -0500] conn=26 op=2 BIND dn=\"uid=jemiller, ou=People, \ndc=mydomain\" method=128 version=3\n[07/Jun/2002:15:54:26 -0500] conn=26 op=2 RESULT err=0 tag=97 nentries=0 \netime=0 dn=\"uid=jemiller,ou=people,dc=mydomain\"\n[07/Jun/2002:15:54:26 -0500] conn=26 op=3 SRCH base=\"\" scope=0 \nfilter=\"(objectClass=*)\" attrs=ALL\n[07/Jun/2002:15:54:26 -0500] conn=26 op=3 RESULT err=0 tag=101 nentries=1 \netime=0", "id": 17424, "time": "2002-06-07T21:12:01Z", "creator": "jemiller@uchicago.edu", "creation_time": "2002-06-07T21:12:01Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 9705, "attachment_id": null, "text": "AFAIK, nobody is currently actively maintaining the JNDI realm. So the changes \nyou propose won't be implemented anytime soon unless you submit some patches.", "id": 17429, "time": "2002-06-07T22:56:35Z", "creator": "remm@apache.org", "creation_time": "2002-06-07T22:56:35Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 9705, "attachment_id": null, "text": "There are actually two issues here.\n\nFor the first issue, this is the intended behaviour. The \"extra search\" is the \nresult of a call to getAttributes() on the directory context. Although it is \ntrue that this does not actually return any useful information, some such call \nis needed to make JNDI attempt to rebind as the user. (Binding in Sun's JNDI \nLDAP provider is lazy - just changing the credentials in the directory context \nis not enough to make it happen). By the way ldapsearch should not return \"no \nsuch object\" for the equivalent search - perhaps the base was not set correctly.\n\nThe second issue is also by design. The realm is bound as the administrator, or \nanonymously if no admin username/password is given, whenever it searches for a \nuser entry, retrieves a role attribute in a user entry, or searches for roles. \nIt may sometimes be possible to avoid the rebind, if users have sufficient \npermissions, but not in the general case. The cost of a rebind in LDAP v3 is \nactually quite small, since the same connection is used throughout, so the \npotential savings are probably quite small. Also it seems a bit cleaner to have \nall these operations performed as the same, known, user and to have the \npersistent connections in a known state following the authentication epsiode \n(and especially if a connection pool is used later). Incidentally, other LDAP \nauthentication software such as PADL's pam_ldap seem to behave similarly.\n", "id": 17889, "time": "2002-06-16T23:06:03Z", "creator": "j.g.holman@qmul.ac.uk", "creation_time": "2002-06-16T23:06:03Z", "is_private": false}, {"count": 3, "tags": [], "creator": "jemiller@uchicago.edu", "text": "Another way to rebind to the directory is to use the LdapContext.reconnect() \nmethod,\n\nhttp://java.sun.com/j2se/1.4/docs/api/javax/naming/ldap/LdapContext.html#reconn\nect(javax.naming.ldap.Control[])\n\nbut since JNDIRealm is supposed to in theory be generic, I guess that may not \nbe advisable. Also, I'm not sure if that is LDAPv3 specific or not. \nPersonally, I'm a little surprised that there isn't a reconnect method in \nDirContext.\n\nThe reason ldapsearch returns \"No such object\" is because \"\" isn't a valid \nsearch base. Like you said, you're calling DirContext.getAttributes() to force \na bind to the directory and you don't care what the results are, so, it's no \nbig deal, I was just wondering why it was doing that query initially. Since \nDirContext has no reconnect method, it doesn't look like you have much of a \nchoice.\n", "id": 17926, "time": "2002-06-17T17:30:28Z", "bug_id": 9705, "creation_time": "2002-06-17T17:30:28Z", "is_private": false, "attachment_id": null}]