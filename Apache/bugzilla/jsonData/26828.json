[{"count": 0, "tags": [], "creator": "vladimir@contera.sp.ru", "attachment_id": null, "text": "CSVRead function works fine for only one thread\n\nWhen we use one thread requests are built well, but when we set number of \nthreads in 2 at least requests for other threads except of the first one are \ncreated incorrectly.\n\nSee attached file (20040209_jmeter.log) with system log.", "id": 52053, "time": "2004-02-10T14:14:38Z", "bug_id": 26828, "creation_time": "2004-02-10T14:14:38Z", "is_private": false}, {"count": 1, "tags": [], "creator": "vladimir@contera.sp.ru", "text": "Created attachment 10295\n20040209_jmeter.log", "id": 52054, "time": "2004-02-10T14:16:22Z", "bug_id": 26828, "creation_time": "2004-02-10T14:16:22Z", "is_private": false, "attachment_id": 10295}, {"count": 2, "attachment_id": null, "bug_id": 26828, "is_private": false, "id": 52088, "time": "2004-02-11T01:19:20Z", "creator": "sebb@apache.org", "creation_time": "2004-02-11T01:19:20Z", "tags": [], "text": "The log is useful, but can you also please post the CSV file, and either the \nJMX file, or at least details of the usage of the CSV file.\n\n"}, {"count": 3, "tags": [], "bug_id": 26828, "attachment_id": null, "id": 52108, "time": "2004-02-11T12:39:46Z", "creator": "vladimir@contera.sp.ru", "creation_time": "2004-02-11T12:39:46Z", "is_private": false, "text": "Please, try to run the test script Test_CSVReadFunc.jmx.\nIt logins to a site and logs out then only.\nBe carefull with folders structure. \nThe script uses configuration file params-test.cfg which is in the subfolder \n<JMEter home>\\tests\\config\\.\nIn my case I had:\nD:\\jakarta-jmeter-20040209 - JMeter home directory\nD:\\jakarta-jmeter-20040209\\tests\\config - config file directory \n\n1. Run the test with number of threads = 1 at first.\n2. Look into the View Results Tree. It will be successful.\n3. Now set number of threads = 2 and run the test again.\n4. Look into the View Results Tree. It will fail.\nCSVRead function doesn't re-read the file params-test.cfg for the second thread.\n \nWe look forward to getting that bug fixed and we're ready to help if it needs,\nVladimir"}, {"count": 4, "tags": [], "creator": "vladimir@contera.sp.ru", "attachment_id": 10313, "text": "Created attachment 10313\nTest_CSVReadFunc.jmx", "id": 52109, "time": "2004-02-11T12:41:18Z", "bug_id": 26828, "creation_time": "2004-02-11T12:41:18Z", "is_private": false}, {"count": 5, "text": "Created attachment 10314\nparams-test.cfg", "bug_id": 26828, "is_private": false, "id": 52110, "time": "2004-02-11T12:41:56Z", "creator": "vladimir@contera.sp.ru", "creation_time": "2004-02-11T12:41:56Z", "tags": [], "attachment_id": 10314}, {"count": 6, "tags": [], "bug_id": 26828, "text": "I think it's something to do with the fact that only the first line of the CSV \nfile is valid. When the second thread comes to read the file, I think it will \nbe given the next free line, which is empty.\n\nTry creating the file with only one line in it (and no comments), and the test \nshould work - it did for me.", "id": 52111, "time": "2004-02-11T12:59:54Z", "creator": "sebb@apache.org", "creation_time": "2004-02-11T12:59:54Z", "is_private": false, "attachment_id": null}, {"count": 7, "tags": [], "text": "Further thought: the log message does not show the line number (or the Thread \nname).\n\nIf it had, the cause would have been much clearer, so converting this to an \nenhancement to fix these omissions. [I'll do these in a day or so.]", "attachment_id": null, "id": 52113, "creation_time": "2004-02-11T13:16:33Z", "time": "2004-02-11T13:16:33Z", "creator": "sebb@apache.org", "bug_id": 26828, "is_private": false}, {"count": 8, "tags": [], "bug_id": 26828, "attachment_id": null, "id": 52121, "time": "2004-02-11T14:17:13Z", "creator": "vladimir@contera.sp.ru", "creation_time": "2004-02-11T14:17:13Z", "is_private": false, "text": "Yes, you are right. CSVRead function works fine if our input config file has 1 \nline only.\nBut it is not correct!\n\n1. Our CSVRead function doesn't have its second parameter as \"next\" so that \nfunction has to return values from the first row of input \nfile only for all threads (as it was before, I mean release 1.9.1).\nIt looks like that: ${__CSVRead(..\\tests\\config\\params-test.cfg,4)}\n2. That function works fine in 1.9.1 release of JMeter. It is a problem of \nnightly build only\n3. We sent to you simple example of files to show the problem. Our real tests \nhave about 50 parameters in config files (we have about 100 tests scripts which \nworked fine with 1.9.1 release) and it is useful to have many comments in \nconfig file.\nWe can not correct our config files without comments because of many parameters.\n\nOur config files look like that:\n\ntest.athenium.com,80,http,/manager/rqa1/manager,test,pswtest,...................\n\n0                 1  2    3                     4    5       \n\nComments for fields of this file to configurate it\n0-Server Name\n1-Port Number\n2-Protocol\n3-Path to MI\n4-Manager's UserName \n5-Manager's Password\n\nThanks"}, {"count": 9, "attachment_id": null, "creator": "sebb@apache.org", "text": "There were some bugs in the CSVRead code in 1.9.1, which meant that it did not \nalways behave correctly for multiple threads. \n\nUnfortunately, it looks like your code was relying on undocumented (and \nincorrect, in my view) behaviour.\n\nAFAIK, the intention was always to make CSVRead return different rows for \ndifferent threads. Two threads will only get the same row if there are more \nthreads than lines in the file, in which case it wraps round to the beginning \nof the file again.\n\nThis implies that the second thread to access the same file will always \nretrieve the second row, and so on. This must apply whether or not the call to \nnext() has yet been (or will ever be) made, as a thread that fetches one or \nmore columns before calling next() might be interspersed with another thread \nthat does the same.\n\nI can't see how to create the behaviour you require without breaking \nthe \"normal\" behaviour, but if you can supply the code (or just the algorithm) \nI'm happy to apply it.\n\nI'm sorry, but it seems to me that you are using CSVRead in a way for which it \nwas not designed. \nIt just happened to work in 1.9.1 due to a feature of the implementation.\n\nAlternatives are:\n- put the comments in a separate file, and use a one-line file\n- use properties instead\n- code a new function or test element to do what you want.\n\nIf you already have the config files set up, perhaps you could just pre-\nprocess them to create the one-line version just before starting the test.\n\n", "id": 52165, "time": "2004-02-11T22:16:18Z", "bug_id": 26828, "creation_time": "2004-02-11T22:16:18Z", "tags": [], "is_private": false}, {"count": 10, "attachment_id": null, "bug_id": 26828, "is_private": false, "id": 52167, "time": "2004-02-11T23:16:26Z", "creator": "sebb@apache.org", "creation_time": "2004-02-11T23:16:26Z", "tags": [], "text": "Added thread name and line number to reports"}, {"count": 11, "attachment_id": null, "bug_id": 26828, "is_private": false, "id": 52176, "time": "2004-02-12T09:15:39Z", "creator": "sebb@apache.org", "creation_time": "2004-02-12T09:15:39Z", "tags": [], "text": "Doh!\nIt is easy to fix after all - just treat a blank line as the end of the CSV \nfile.\n\nIn theory, this could break some existing uses of CSVRead, but this seems \nrather unlikely. \n\nIf this change does prove to break existing usage of CSVRead, then one could \nperhaps define a special EOF marker, or a comment marker (and allow this to be \nchanged if necessary).\n\nIn case of further problems, please re-open the bug."}, {"count": 12, "tags": [], "text": "Treating of a blank line as the end of the CSV file - perfect decision. We \nwould be grateful for that. Now we left one line in config files only and hope \nit is temporary.\nThanks\n", "attachment_id": null, "id": 52191, "creation_time": "2004-02-12T14:57:16Z", "time": "2004-02-12T14:57:16Z", "creator": "vladimir@contera.sp.ru", "bug_id": 26828, "is_private": false}, {"count": 13, "tags": [], "creator": "sebb@apache.org", "attachment_id": null, "text": "Got there in the end ... the change will appear in the nightly builds in a day \nor so.\n\nI've added a unit test for it, but if it does not work for you, post here in \nBugzilla.\n\n==\n\nI want to add some more flexibilty - e.g. comments, and separator charactor \nother than comma.\n\nTo avoid backward compatibilty problems these will depend on jmeter properties \n(with the default being the old behaviour).\n\nI'll probably add a jmeter property to allow users to revert to the old blank-\nline behaviour - just in case - but leave the default as blank-line = EOF.", "id": 52200, "time": "2004-02-12T16:14:56Z", "bug_id": 26828, "creation_time": "2004-02-12T16:14:56Z", "is_private": false}]