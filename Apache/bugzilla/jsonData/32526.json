[{"count": 0, "tags": [], "bug_id": 32526, "attachment_id": null, "id": 67914, "time": "2004-12-04T01:26:36Z", "creator": "cowwoc@bbs.darktech.org", "creation_time": "2004-12-04T01:26:36Z", "is_private": false, "text": "When I specify <fileset file=\"<path>\"/> I expect it to return a file and if it\ndoes not it should fail the build, right now this is not the case."}, {"count": 1, "tags": [], "bug_id": 32526, "attachment_id": null, "text": "I've renamed the subject line. We should probably use \"whenempty\" because it is\nalready being used by the <jar> and <zip> tasks.\n\nBTW: The actual use-case for this RFE is when a <copy> task has multiple nested\n<fileset>s to copy from, I need to be able to say that all of them must match\nmore than one file or else the entire <copy> operation must fail.", "id": 67915, "time": "2004-12-04T01:30:21Z", "creator": "cowwoc@bbs.darktech.org", "creation_time": "2004-12-04T01:30:21Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 32526, "attachment_id": null, "id": 121268, "creation_time": "2008-10-07T06:15:21Z", "time": "2008-10-07T06:15:21Z", "creator": "mikecepek@yahoo.com", "text": "My use case for this feature is creating release tarballs which must include all specified files:\n\n<tar destfile=\"${patch}/patch-${my.version}.tar.gz\" compression=\"gzip\">\n    <tarfileset dir=\"${dist}\" username=\"admin\" group=\"admin\">\n        <include name=\"lib/my-main.jar\" />\n        <include name=\"tools/lib/my-tools.jar\" />\n        <include name=\"conf/VERSION\" />\n    </tarfileset>\n    <tarfileset dir=\"export/release\" prefix=\"conf\" username=\"admin\" group=\"admin\">\n       <include name=\"spring/menu.xml\" />\n       <include name=\"updates/connections.xml\" />\n    </tarfileset>\n</tar>\n\nI'm pretty shocked that using the NAME attribute like this (without wildcards) will silently succeed even if the file doesn't exist.\n\nI note that only the values \"skip\" and \"fail\" seem to be appropriate for WHENEMPTY with <fileset> (<zip> also allows \"create\", which doesn't seem be applicable in this context).  This somewhat argues for using FAILONERROR instead (which is boolean) as used in <copy>.\n\nThen there's the issue of what to do if this new <fileset> attribute is used in a <zip> task which specifies WHENEMPTY -- which one takes precedence?  Allowing the nested one (<fileset>) to override probably makes the most sense.\n", "is_private": false}, {"count": 3, "tags": [], "creator": "mbenson@apache.org", "text": "The original request is doable using Ant 1.7.0 resourcecollection support.  Please correspond on the user list if help is needed.", "id": 121965, "time": "2008-10-28T09:54:29Z", "bug_id": 32526, "creation_time": "2008-10-28T09:54:29Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 32526, "attachment_id": null, "id": 124923, "creation_time": "2009-02-18T05:37:05Z", "time": "2009-02-18T05:37:05Z", "creator": "mikecepek@yahoo.com", "text": "I tried corresponding on the ant users list, and not one response illustrated how Resource Collections can do this.  Reopening this item for either better documentation or an alternative way of accomplishing this most basic task.", "is_private": false}, {"count": 5, "tags": [], "creator": "bodewig@apache.org", "attachment_id": null, "id": 124928, "time": "2009-02-18T08:31:26Z", "bug_id": 32526, "creation_time": "2009-02-18T08:31:26Z", "is_private": false, "text": "there is no really nice way to do it, agreed.  The problem is the additional stiff only tarfileset can do (otherwise a filelist would do the trick).\n\nsomething like\n\n<fail message=\"Missing files\">\n  <condition>\n    <not>\n      <resourcecount count=\"5\">\n        <tarfileset src=\"${patch}/patch-${my.version}.tar.gz\" compression=\"gzip\"/>\n      </resourcecount>\n    </not>\n  </condition>\n</fail>\n\nshould work as test after you've created the tar file."}, {"count": 6, "tags": [], "bug_id": 32526, "attachment_id": null, "id": 124985, "time": "2009-02-19T08:40:51Z", "creator": "mikecepek@yahoo.com", "creation_time": "2009-02-19T08:40:51Z", "is_private": false, "text": "(In reply to comment #5)\n> there is no really nice way to do it, agreed.  The problem is the additional\n> stiff only tarfileset can do (otherwise a filelist would do the trick).\n\nA filelist example would be helpful.\n\nAs I mentioned in my recent user list thread, counting the number of files isn't feasible for many reasons (overhead, brittleness, doesn't solve the problem).  The goal again is to fail if explicitly named files don't exist.  This ensures that the archive being build contains all of the expected components.  This error should (be allowed to) cause a build failure, rather than having the error occur later during product installation or run-time.\n\nI suggest that any solution that involves re-specifying the named files is not feasible due to brittleness (redundancy) and all the extra ant scripting.\n\nI believe there continues to be merit in this feature request.  Since Resources and Resource Collections don't adequately address this problem, perhaps revisiting the initial request for additional attributes for <tarfileset> (and others) is appropriate.  Or maybe someone can come up with a more elegant solution.\n\nIf this problem is an issue for you too, please vote for this bug.  Thanks."}, {"count": 7, "tags": [], "creator": "mbenson@apache.org", "text": "A filelist is never empty.  I don't see how it relates.  With regard to a basic fileset, if you want to be sure it's not empty:\n\n<macro name=\"failwhenempty\">\n  <attribute name=\"refid\" />\n  <sequential>\n    <fail message=\"fileset @{refid} is empty\">\n      <condition>\n          <resourcecount count=\"0\" refid=\"@{refid}\" />\n      </condition>\n    </fail>\n  </sequential>\n</macro>\n\n<fileset id=\"foo\" file=\"somefoofile\" />\n\n<failwhenempty refid=\"foo\" />\n\nYou're not re-specifying the files you want, and I've even wrapped this up in a nice macro, and all in Bugzilla rather than on the userlist.  Does this help?", "id": 124987, "time": "2009-02-19T08:54:56Z", "bug_id": 32526, "creation_time": "2009-02-19T08:54:56Z", "is_private": false, "attachment_id": null}, {"count": 8, "tags": [], "bug_id": 32526, "attachment_id": null, "text": "This seems sufficient. I'd see prefer to see it added onto the <fileset> or at least documented somewhere more formal...", "id": 124995, "time": "2009-02-19T13:55:36Z", "creator": "cowwoc@bbs.darktech.org", "creation_time": "2009-02-19T13:55:36Z", "is_private": false}, {"count": 9, "tags": [], "creator": "stevel@apache.org", "text": "How about letting you specify a min and max value for a fileset? That way, if you want 5 files and you only get 4, that's an error, if you want 3 files and get 65535, that's an error too?", "id": 125124, "time": "2009-02-24T07:03:46Z", "bug_id": 32526, "creation_time": "2009-02-24T07:03:46Z", "is_private": false, "attachment_id": null}, {"count": 10, "tags": [], "bug_id": 32526, "attachment_id": null, "text": "Again, counting the number of files is _not_ an adequate solution to this problem.  As previously mentioned, it is too brittle to be adopted by our team.\n\nNote that checking against \"zero files matched\" doesn't help, because getting only 2 of 3 expected files, for example, should still be an error.\n\nFeel free to review my Ant example in comment #2 of this bug item.  That is our use case.  If any of the files explicitly named don't exist, the tar (or tarfileset) needs to fail.", "id": 125128, "time": "2009-02-24T07:53:24Z", "creator": "mikecepek@yahoo.com", "creation_time": "2009-02-24T07:53:24Z", "is_private": false}, {"count": 11, "tags": [], "bug_id": 32526, "attachment_id": null, "text": "Imagine if you had some attributes\n\nminFileCount, maxFileCount\n\n\n    <tarfileset dir=\"${dist}\" username=\"admin\" group=\"admin\"\n  >\n        <include name=\"lib/my-main.jar\" />\n        <include name=\"tools/lib/my-tools.jar\" />\n        <include name=\"conf/VERSION\" />\n    </tarfileset>", "id": 125129, "time": "2009-02-24T08:31:39Z", "creator": "stevel@apache.org", "creation_time": "2009-02-24T08:31:39Z", "is_private": false}, {"count": 12, "tags": [], "bug_id": 32526, "attachment_id": null, "text": "I urge you to bring your exact, specific needs to user@ant.apache.org and we can all figure out how to solve your problem.  If you have examples of how your requirements might change over time let's talk about it and see what we can figure out.", "id": 125130, "time": "2009-02-24T09:05:11Z", "creator": "mbenson@apache.org", "creation_time": "2009-02-24T09:05:11Z", "is_private": false}, {"count": 13, "tags": [], "creator": "stevel@apache.org", "text": "Let's try that again without it being sent half completed\n\nImagine if you had some attributes minFileCount, maxFileCount in a fileset\n\n\n    <tarfileset dir=\"${dist}\" username=\"admin\" group=\"admin\"\n           minFileCount=\"3\" maxFilecount=\"3\">\n        <include name=\"lib/my-main.jar\" />\n        <include name=\"tools/lib/my-tools.jar\" />\n        <include name=\"conf/VERSION\" />\n    </tarfileset>\n\nAny number !=3 is failure, hence what you want. \n\nThe min and max numbers can differ, for a broader spread of failures\n\n    <tarfileset dir=\"${dist}\" username=\"admin\" group=\"admin\"\n           minFileCount=\"3\" maxFilecount=\"100\">\n        <include name=\"lib/my-main.jar\" />\n        <include name=\"tools/lib/my-tools.jar\" />\n        <include name=\"conf/VERSION\" />\n        <include name=\"**/*.jar\"/>\n    </tarfileset>\n\nThat now says, at least 3, less than 100. That would give you broader control\nof the range of files you allowed, from exactly those listed, to a range that\nincluded at least those, or a few more or less.", "id": 125131, "time": "2009-02-24T09:17:42Z", "bug_id": 32526, "creation_time": "2009-02-24T09:17:42Z", "is_private": false, "attachment_id": null}, {"count": 14, "tags": [], "bug_id": 32526, "attachment_id": null, "text": "Comment #13 has an acceptable proposal.  A key aspect is that it's integral to the tarfileset, not requiring a separate set definition linked through a refid.  It's a big win to keep it all together in the same task.\n\nAnother advantage is being able to bracket wildcarded include specifications, which otherwise would be uncheckable.\n\nHowever, using wildcards breaks the strictness, since an explicitly named file which doesn't exist could be masked by a new wildcarded file.  To solve this, wildcards could simply be put into their own set(s):\n\n     <tarfileset dir=\"${dist}\" username=\"admin\" group=\"admin\"\n             minFileCount=\"3\" maxFilecount=\"3\">\n         <include name=\"lib/my-main.jar\" />\n         <include name=\"tools/lib/my-tools.jar\" />\n         <include name=\"conf/VERSION\" />\n     </tarfileset>\n     <tarfileset dir=\"${dist}\" username=\"admin\" group=\"admin\"\n             minFileCount=\"5\" maxFilecount=\"10\">\n         <include name=\"**/*.jar\"/>\n     </tarfileset>\n\nI had a completely different idea.  What about a new fileset attribute besides <filename> and <include>, something like <exact name=\"foo.bar\"> which fails if the file doesn't exist.  It would be nice to push the checking down to that level, even to the point of having the maxCount and minCount settings there (instead of for the fileset as a whole).\n\nBTW, I'm fine relegating this discussion to the users list.", "id": 125134, "time": "2009-02-24T10:51:35Z", "creator": "mikecepek@yahoo.com", "creation_time": "2009-02-24T10:51:35Z", "is_private": false}, {"count": 15, "tags": [], "creator": "jan@materne.de", "text": "Some workarounds were provided and it seems that there is no need any more.\n6yrs of silence ...", "id": 183438, "time": "2015-06-10T19:32:00Z", "bug_id": 32526, "creation_time": "2015-06-10T19:32:00Z", "is_private": false, "attachment_id": null}]