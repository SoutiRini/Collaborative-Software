[{"count": 0, "attachment_id": null, "creator": "rz@rdprojekt.pl", "is_private": false, "id": 191314, "time": "2016-05-30T13:46:30Z", "bug_id": 59641, "creation_time": "2016-05-30T13:46:30Z", "tags": [], "text": "In a Jersey REST application I have one of the resources located under \"api/sys:App/{id}\" path. When I request this path (/api/sys:App/13) from a browser Jersey matches the URL and this request is processed. However if the request is forwarded inside the container (in my case I use urlrewrite) the request is being forwarded to \"/api/sys%3AApp/13\" and that does not match the Jersey path.\n\nTo forward the request urlrewrite gets the request dispatcher for this path \n\ndispatcher = request.getRequestDispatcher(toUrl)\n\nand requestURI in the dispatcher is encoded (it wasn't until 8.0.35 release) see Bug 59317"}, {"count": 1, "tags": [], "bug_id": 59641, "is_private": false, "text": "(In reply to Robert from comment #0)\n> In a Jersey REST application I have one of the resources located under\n> \"api/sys:App/{id}\" path. When I request this path (/api/sys:App/13) from a\n> browser Jersey matches the URL and this request is processed. However if the\n> request is forwarded inside the container (in my case I use urlrewrite) the\n> request is being forwarded to \"/api/sys%3AApp/13\" and that does not match\n> the Jersey path.\n> \n> To forward the request urlrewrite gets the request dispatcher for this path \n> \n> dispatcher = request.getRequestDispatcher(toUrl)\n> \n> and requestURI in the dispatcher is encoded (it wasn't until 8.0.35 release)\n> see Bug 59317\n\nAnd the latter is expected and was fixed as a result of the bug that you mentioned:\n\nhttp://docs.oracle.com/javaee/7/api/javax/servlet/http/HttpServletRequest.html#getRequestURI--\n\n\"... The web container does not decode this String. ...\"\n\nRegards,\nVioleta", "id": 191317, "time": "2016-05-30T14:21:28Z", "creator": "violetagg@apache.org", "creation_time": "2016-05-30T14:21:28Z", "attachment_id": null}, {"count": 2, "tags": [], "text": "OK, the web container does not decode the String, but should id force-encode it? The colon character in the path part of an URL is not being encoded in the original request, but it is encoded if I use the requestDispatcher to forward the request. It looks inconsistent. \n\n-- \nRobert", "is_private": false, "id": 191326, "creator": "rz@rdprojekt.pl", "time": "2016-05-31T06:32:50Z", "bug_id": 59641, "creation_time": "2016-05-31T06:32:50Z", "attachment_id": null}, {"count": 3, "attachment_id": null, "creator": "violetagg@apache.org", "is_private": false, "id": 191327, "time": "2016-05-31T08:04:09Z", "bug_id": 59641, "creation_time": "2016-05-31T08:04:09Z", "tags": [], "text": "Hi,\n\n(In reply to Robert from comment #2)\n> OK, the web container does not decode the String, but should id force-encode\n> it? The colon character in the path part of an URL is not being encoded in\n> the original request, but it is encoded if I use the requestDispatcher to\n> forward the request. It looks inconsistent. \n> \n> -- \n> Robert\n\n\nPlease ask your questions on tomcat users list.\n\nRegards,\nVioleta"}]