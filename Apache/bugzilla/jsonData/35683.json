[{"count": 0, "tags": [], "text": "I tried  to  get Indexed image from a *.png  image and obtained the  following  \nexception:\n\njava.lang.ArrayIndexOutOfBoundsException: -7\n\tat org.apache.batik.ext.awt.image.rendered.IndexImage$Cube.splitChannel\n(Unknown Source)\n\tat org.apache.batik.ext.awt.image.rendered.IndexImage$Cube.split\n(Unknown Source)\n\tat org.apache.batik.ext.awt.image.rendered.IndexImage.getIndexedImage\n(Unknown Source)\n\tat ImageUtilities.encodeImageTo8Bit(ImageUtilities.java:49)\n\tat ImageTest.test(ImageTest.java:28)\n\tat ImageTest.main(ImageTest.java:37)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke\n(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke\n(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:324)\n\tat com.intellij.rt.execution.application.AppMain.main(AppMain.java:78)\nException in thread \"main\" \n\n\nFirst  of  all  I  created a BufferedImage  object  from Image object. I  did \nit as  follows:\n\npublic static BufferedImage BufferedFromImage(Image i) {\n        if (i == null)\n            throw new NullPointerException();\n        Panel p = new Panel();\n        if (i instanceof BufferedImage)\n            return (BufferedImage) i;\n        i = new ImageIcon(i).getImage();\n        int type = (hasAlpha(i)) ? BufferedImage.TYPE_INT_ARGB : \nBufferedImage.TYPE_INT_RGB;\n        BufferedImage buf = new BufferedImage(i.getWidth(p), i.getHeight(p), \ntype);\n        Graphics2D g = (Graphics2D)buf.getGraphics();\n        g.drawImage(i, 0, 0, p);\n        g.dispose();\n        return buf;\n    }\n\n    private static boolean hasAlpha(Image i) {\n        if (i == null)\n            throw new NullPointerException();\n        if (i instanceof BufferedImage)\n            return ((BufferedImage) i).getColorModel().hasAlpha();\n        PixelGrabber grab = new PixelGrabber(i, 0, 0, 1, 1, false);\n        try {\n            grab.grabPixels();\n        } catch (InterruptedException ex) {\n        }\n        ColorModel cm = grab.getColorModel();\n        return cm.hasAlpha();\n    }\n\n\nI  attached a picture which results in exception. Note , that I tried to \nprocess other images and all worked properly except this image.\n\nI  investigated source and found that this  exception  is  thrown due to \nnegative array index value.", "is_private": false, "id": 77178, "creation_time": "2005-07-11T12:36:28Z", "time": "2005-07-11T12:36:28Z", "creator": "yroman@dgap.mipt.ru", "bug_id": 35683, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 35683, "text": "Created attachment 15645\nThis image results  in  ArrayIndexOutOfBoundsException.", "id": 77179, "time": "2005-07-11T12:37:42Z", "creator": "yroman@dgap.mipt.ru", "creation_time": "2005-07-11T12:37:42Z", "is_private": false, "attachment_id": 15645}, {"count": 2, "attachment_id": 18015, "bug_id": 35683, "text": "Created attachment 18015\nfix for bug\n\nthe attached patch fixes the bug. The pure fix is in lines 226 and 329.\nThe previous version had problems, when it was requested to quantize to more\ncolors than in the image (you have an image with 25 and ask for 255 colors).\nThe bugs resulted in strange Cube-splits and this index-exception.\n'Normal' images with thousands of colors didnt notice the problem.\nDuring debugging, this was changed as well:\n- the algorithm was split and one part went into computeCounts()\n- the color array-of-lists is converted to a Cube[][] for better iteration\n- comments", "id": 87513, "time": "2006-04-02T16:56:47Z", "creator": "info@dvholten.de", "creation_time": "2006-04-02T16:56:47Z", "tags": [], "is_private": false}, {"count": 3, "tags": [], "bug_id": 35683, "text": "the provided patch fixes the index-exception. but long thinking about the\nworking of the split-algorithm revealed another flaw: because a cube-split may\nreturn a 'un-normalized' cube, which has bounds larger than the actual content,\nthat may lead to the selection of a wrogn split-channel later on. because an\naxis looks longer than it actually is. This in turn leads to a different\nend-result of cubes and colors.\nThe cubes should be 'normalized' after split.\ni continue to work on this.\n", "id": 87661, "time": "2006-04-07T10:58:26Z", "creator": "info@dvholten.de", "creation_time": "2006-04-07T10:58:26Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 35683, "text": "Created attachment 18056\npatch against svn 201374 of o.a.b.ext.awt.image.rendered.IndexImage\n\nthis patch obsoletes previous patch:\nfixed: array-index-exception \nfixed: wrong selection of alternative splitChannels at begin of split()\nfixed: cubes are 'normalized' after split\nenh: comments\nthe main loops of the algorithms have been refactored to separate methods -\nthat more convenient when running a profiler.\ni provide an image resulting from splitting with and without normalized cubes -\nnote the green area in the batik-logo down right.", "id": 87743, "attachment_id": 18056, "creator": "info@dvholten.de", "creation_time": "2006-04-11T09:45:54Z", "time": "2006-04-11T09:45:54Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 35683, "text": "Created attachment 18057\nimage results from un-normalized cubes, green area in batik-logo is dark", "id": 87744, "time": "2006-04-11T09:48:18Z", "creator": "info@dvholten.de", "creation_time": "2006-04-11T09:48:18Z", "is_private": false, "attachment_id": 18057}, {"attachment_id": 18058, "tags": [], "bug_id": 35683, "text": "Created attachment 18058\nimage results from 'normalized' cubes, green area in batik-logo is bright", "count": 6, "id": 87745, "time": "2006-04-11T09:49:14Z", "creator": "info@dvholten.de", "creation_time": "2006-04-11T09:49:14Z", "is_private": false}]