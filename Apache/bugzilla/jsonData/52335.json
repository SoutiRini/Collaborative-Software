[{"count": 0, "tags": [], "bug_id": 52335, "attachment_id": null, "is_private": false, "id": 152174, "time": "2011-12-15T00:35:51Z", "creator": "zhanglili@cn.fujitsu.com", "creation_time": "2011-12-15T00:35:51Z", "text": "hi,\n\nI noticed that there is a problem at the % escape on Tomcat 5.5.34.\n\n(1)The problem\n    The JSP Specification 2.0 says:\n    ------\n    JSP.1.6 Quoting and Escape Conventions\n    \u2192 Quoting in Template Text\n     \u3000\u30fbA literal <% is quoted by <\\%\n    ------\n\n    But the result of the % escape on Tomcat 5.5.34 is :\n    ------\n    Not only the \\% of <\\% is escaped as %.\n    All the \\% in Template Text is escaped as %.\n    ------\n\n    If I want to show \\% on the HTML page, it is needed to write \\\\% in a JSP file.\n\n    The problem  also occurs on Tomcat 5.5.23 or Tomcat7.0.8.\n    And it seems that the problem has already occured on Tomcat 5.5.0.\n\n(2)The reason\n    The reason of the problem is that the following method is not implemented\n    according to JSP Specification.\n         \u30fbThe class:\n                org.apache.jasper.compiler.Parser\n         \u30fbThe method:\n               void parseTemplateText(Node parent)\n         \u30fbThe part of source:\n           ------\n           else if (ch == '\\\\') {\n                if (!reader.hasMoreInput()) {\n                    ttext.write('\\\\');\n                    break;\n                }\n                // Look for \\% or \\$\n                // Only recognize \\$ if isELIgnored is false\n                char next = (char)reader.peekChar();\n                if (next == '%' || (next == '$' && !pageInfo.isELIgnored())) { \u25b2\n                    ch = reader.nextChar();\n                }\n            }\n           ------\n\nIs it a bug?"}, {"count": 1, "tags": [], "text": "I agree that this is an issue.\n\nThe steps to reproduce, 7.0.23:\n1. Create test.jsp containing the following line:\n[[[ \\% \\\\% <\\% ]]]\n\n2. Actual result:\nThe page is rendered as [[[ % \\% <% ]]]\nExpected result: [[[ \\% \\\\% <% ]]] \n\n\nI agree that I do not see provisions for escaping single '%' in the JSP Spec.\nIn JSP.1.3.10.1 EBNF Grammar (in JSP 2.2 Spec) defines template text as\n[[[\nTemplateText ::= ( \u2018<\u2018 | \u2018${\u2018 | \u2018#{\u2018 )\n| ( TemplateChar* -\n( TemplateChar* ( \u2018<\u2018 | \u2018${\u2018 | \u2018#{\u2018 ) ) )\n\nTemplateChar ::= \u2018\\$\u2019\n| \u2018\\#\u2019\n| \u2018<\\%\u2019\n| Char\n[ vc : QuotedDollarMatched ]\n]]]\n\nThe \u2018<\\%\u2019 is explicitly mentioned, but not '\\%'.", "is_private": false, "id": 152187, "creation_time": "2011-12-15T12:26:59Z", "time": "2011-12-15T12:26:59Z", "creator": "knst.kolinko@gmail.com", "bug_id": 52335, "attachment_id": null}, {"count": 2, "attachment_id": null, "bug_id": 52335, "text": "Fixed in trunk and 7.0.x and will be included in 7.0.24 onwards.\n\nProposed for 6.0.x and 5.5.x", "id": 152204, "time": "2011-12-15T19:34:14Z", "creator": "markt@apache.org", "creation_time": "2011-12-15T19:34:14Z", "tags": [], "is_private": false}, {"count": 3, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "is_private": false, "id": 152330, "time": "2011-12-20T20:29:04Z", "bug_id": 52335, "creation_time": "2011-12-20T20:29:04Z", "text": "Fixed in 5.5.x and will be included in 5.5.35 onwards."}, {"count": 4, "tags": [], "text": "Fixed in 6.0 with r1224877 and will be in 6.0.36.", "is_private": false, "id": 152416, "creator": "knst.kolinko@gmail.com", "time": "2011-12-27T07:52:40Z", "bug_id": 52335, "creation_time": "2011-12-27T07:52:40Z", "attachment_id": null}]