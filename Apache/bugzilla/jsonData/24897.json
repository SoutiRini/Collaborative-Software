[{"count": 0, "tags": [], "creator": "wenjun@creditex.com", "attachment_id": null, "id": 47787, "time": "2003-11-21T16:31:34Z", "bug_id": 24897, "creation_time": "2003-11-21T16:31:34Z", "is_private": false, "text": "Tomcat generates the following exception when processing a post with a line\nlonger than 4096 (including the \"\\n\"):\n\njava.io.IOException\n        at org.apache.coyote.tomcat5.InputBuffer.reset(InputBuffer.java:463)\n        at org.apache.coyote.tomcat5.CoyoteReader.reset(CoyoteReader.java:153)\n        at org.apache.coyote.tomcat5.CoyoteReader.readLine\n(CoyoteReader.java:207)\n        at com.creditex.util.TestServlet.doPost(TestServlet.java:138)\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:763)\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:856)\n\nThe following is source for TestServlet:\n\n  public void doPost(HttpServletRequest request, HttpServletResponse res) \nthrows javax.servlet.ServletException  {\n    BufferedReader reqReader = null;\n    int status = res.SC_OK;\n    try{\n      reqReader = request.getReader();\n      String s = null;\n      while ((s=reqReader.readLine()) != null) {\n        System.out.println(\"Read length \" + s.length());\n      }\n    }\n    catch(Exception e){\n     e.printTrace();\n    }\n    finally {\n      try {\n        if (reqReader != null)\n          reqReader.close();\n        res.setStatus(status);\n      } catch (IOException ie) {}\n    }\n  }\n\nIf length is exactly at 4096 (including \"\\n\"), the servlet does not see\nthe data and no exception is thrown."}, {"count": 1, "tags": [], "text": "This is a (reasonable) limit that I did put in on purpose. See the CoyoteReader\nsource for the constant (and recompile to change it for special purpose\napplications).", "attachment_id": null, "id": 47788, "creator": "remm@apache.org", "time": "2003-11-21T16:48:45Z", "bug_id": 24897, "creation_time": "2003-11-21T16:48:45Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 24897, "attachment_id": null, "text": "(In reply to comment #1)\n> This is a (reasonable) limit that I did put in on purpose. See the CoyoteReader\n> source for the constant (and recompile to change it for special purpose\n> applications).\n\nI don't understand how this is reasonable.  If someone sending a request to a\nwebservice, and the request is well formed (doesn't have to have line breaks to\nbe well formed), and it is a request with a lot of data, then this breaks it. \nMaybe I'm missing something, I don't want to have to force my clients to to\ninsert line breaks in their XML requests when there is nothing in the W3C\nstandard that says XML requests have to contain line breaks.\n\nAm I missing something?\n", "id": 74550, "time": "2005-05-06T22:43:10Z", "creator": "alx@acm.org", "creation_time": "2005-05-06T22:43:10Z", "is_private": false}, {"count": 3, "tags": [], "creator": "wenjun@creditex.com", "attachment_id": null, "id": 74666, "time": "2005-05-10T15:40:10Z", "bug_id": 24897, "creation_time": "2005-05-10T15:40:10Z", "is_private": false, "text": "(In reply to comment #2)\n> (In reply to comment #1)\n> > This is a (reasonable) limit that I did put in on purpose. See the CoyoteReader\n> > source for the constant (and recompile to change it for special purpose\n> > applications).\n> \n> I don't understand how this is reasonable.  If someone sending a request to a\n> webservice, and the request is well formed (doesn't have to have line breaks to\n> be well formed), and it is a request with a lot of data, then this breaks it. \n> Maybe I'm missing something, I don't want to have to force my clients to to\n> insert line breaks in their XML requests when there is nothing in the W3C\n> standard that says XML requests have to contain line breaks.\n> \n> Am I missing something?\n> \n\nThis seems to have been fixed in version 5.5.4."}, {"count": 4, "tags": [], "text": "This cannot be unlimited, so 4KB is a very reasonable constant. Using this\nmethod will make your application *extremely* inefficient, BTW.", "is_private": false, "id": 74687, "creator": "remm@apache.org", "time": "2005-05-10T20:26:08Z", "bug_id": 24897, "creation_time": "2005-05-10T20:26:08Z", "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 24897, "is_private": false, "text": "*** Bug 34829 has been marked as a duplicate of this bug. ***", "id": 74689, "time": "2005-05-10T20:27:04Z", "creator": "remm@apache.org", "creation_time": "2005-05-10T20:27:04Z", "attachment_id": null}]