[{"count": 0, "tags": [], "creator": "kpreisser@apache.org", "attachment_id": 30909, "is_private": false, "id": 170479, "time": "2013-10-07T23:16:40Z", "bug_id": 55639, "creation_time": "2013-10-07T23:16:40Z", "text": "Created attachment 30909\nPatch to add the Drawboard example\n\nHi,\n\nI would like to add this Drawboard example to Tomcat's Websocket examples.\n\nIt is a page where you can draw with your mouse or touch input (using different colors) and everybody else which has the page open will immediately see what you are drawing.\nIf someone opens the page later, they will get the current room image (so they can see what was already drawn by other people).\n\nIt uses asynchronous sending of messages so that it doesn't need separate threads for each client to send messages (this needs NIO or APR connector to be used).\nA \"Room\" (where the drawing happens) has a dedicated thread because the actions which are done in one Room are single-threaded (like drawing to a BufferedImage). If multiple rooms were used, then each Room would have its own dedicated thread (but currently only one Room is implemented).\n\nWhen you open the page, first you will receive a binary websocket message containing the current room image as PNG image. After that, you will receive string messages that contain the drawing actions (line from x1,y1 to x2,y2).\nNote that it currently only uses simple string messages instead of JSON because I did not want to introduce a dependency on a JSON lib.\n\nIt uses synchronization mechanisms to ensure that the final image will look the same for every user, regardless of what their network latency/speed is - e.g. if two user draw at the same time on the same place, the server will decide which line was the first one, and that will be reflected on every client.\n\nWhat do you think?"}, {"count": 1, "tags": [], "creator": "kpreisser@apache.org", "text": "Created attachment 30910\nPatch to add the Drawboard example\n\nSorry, I forgot to replace tabs with spaces and to add a required file.\n(And I don't know why my TortoiseSVN sometimes includes every .java file twice...)", "id": 170480, "time": "2013-10-07T23:23:32Z", "bug_id": 55639, "creation_time": "2013-10-07T23:23:32Z", "is_private": false, "attachment_id": 30910}, {"count": 2, "tags": [], "text": "Trunk (a.k.a. 8.0.x) is Commit-the-Review so go for it. So is 7.0.x for that matter, but I'd recommend against an immediate back-port. Get everything sorted in 8 and then back-port.", "attachment_id": null, "id": 170484, "creator": "markt@apache.org", "time": "2013-10-08T13:52:43Z", "bug_id": 55639, "creation_time": "2013-10-08T13:52:43Z", "is_private": false}, {"count": 3, "tags": [], "creator": "kpreisser@apache.org", "text": "(In reply to Mark Thomas from comment #2)\n> Trunk (a.k.a. 8.0.x) is Commit-the-Review so go for it. So is 7.0.x for that\n> matter, but I'd recommend against an immediate back-port. Get everything\n> sorted in 8 and then back-port.\n\nOK, thank you.\n\nThis has been fixed in trunk and will be included in 8.0.0-RC4 onwards.\n\nI'm leaving the bug open against 7.0.x to look at backporting later.", "id": 170488, "time": "2013-10-08T16:12:37Z", "bug_id": 55639, "creation_time": "2013-10-08T16:12:37Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "creator": "chris@christopherschultz.net", "attachment_id": null, "id": 170490, "time": "2013-10-08T16:56:19Z", "bug_id": 55639, "creation_time": "2013-10-08T16:56:19Z", "is_private": false, "text": "Is there any reason to bother sending a PNG image to begin with? Why not just store all the mutations (i.e. draw commands) on the server and send those to the clients when they connect? If you did that, you could also avoid performing any AWT operations on the server.\n\nI suppose as a demo it's nice to see how to handle both binary and text-based data in one example."}, {"count": 5, "tags": [], "bug_id": 55639, "text": "Hi Christopher,\n\n(In reply to Christopher Schultz from comment #4)\n> Is there any reason to bother sending a PNG image to begin with? Why not\n> just store all the mutations (i.e. draw commands) on the server and send\n> those to the clients when they connect? If you did that, you could also\n> avoid performing any AWT operations on the server.\n> \n> I suppose as a demo it's nice to see how to handle both binary and\n> text-based data in one example.\n\nThe reason for sending a PNG at the beginning is because otherwise the server would need to store a huge amount of draw commands so that the client can reconstruct the generated image (because you can never remove a drawed path - you can only overwrite them with your own). This would need a lot of CPU usage at the client and a lot of space on the server.\nAlso the server would need some logic to detect if a previously draw command is not needed because it is completely overlapped with other draw commands, etc.\n\nTherefore I chose to have a current representation of the room image at the server which is sent to the clients at the start of a session.", "id": 170491, "time": "2013-10-08T17:06:34Z", "creator": "kpreisser@apache.org", "creation_time": "2013-10-08T17:06:34Z", "is_private": false, "attachment_id": null}, {"count": 6, "tags": [], "creator": "kpreisser@apache.org", "text": "This has been fixed in 7.0.x and will be included in 7.0.46 onwards.", "id": 170562, "time": "2013-10-11T13:39:18Z", "bug_id": 55639, "creation_time": "2013-10-11T13:39:18Z", "is_private": false, "attachment_id": null}]