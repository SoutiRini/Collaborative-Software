[{"count": 0, "tags": [], "creator": "jonathan.keenan@gmail.com", "text": "", "id": 186578, "time": "2015-11-26T15:18:24Z", "bug_id": 58657, "creation_time": "2015-11-26T15:18:24Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 58657, "is_private": false, "id": 186579, "attachment_id": 33301, "creator": "jonathan.keenan@gmail.com", "creation_time": "2015-11-26T15:22:49Z", "time": "2015-11-26T15:22:49Z", "text": "Created attachment 33301\nMain class of demo\n\nSpring boot java class showing demonstration of error"}, {"count": 2, "tags": [], "bug_id": 58657, "attachment_id": 33302, "id": 186580, "time": "2015-11-26T15:23:26Z", "creator": "jonathan.keenan@gmail.com", "creation_time": "2015-11-26T15:23:26Z", "is_private": false, "text": "Created attachment 33302\nApplication config file for demo\n\nApp config file for Spring boot demo"}, {"count": 3, "tags": [], "bug_id": 58657, "attachment_id": null, "text": "I have attached two classes as part of a spring boot demo to show an issue we are running into. (Would have attached whole war but for file size limit, please contact if you would like it.)\n\nWith a simple Spring MVC controller using Springs DeferredResult object and Servlet 3.1 asynchronous requests, there is an issue whereby if an error occurs in the onDataAvailable() method and the onError() method is called, the error response is never returned to the user.\n\nWith Jetty the exact same code returns the error response message and a HTTP status code.\n\nI have tried to look through both the Jetty code and Tomcat code to see where the difference may lie and unfortunately it is unclear to me. The actual dispatching of the async request seems to happen similarly in both containers in that the Async state is set to DISPATCHING etc. but when the responses are returned to the WebAsyncManager that Spring is using to setConcurrentResultAndDispatch() that the problem appears to occur. I tried to follow the code path but once the tomcat demo goes into NioEndPoint.class, its here that the response is completely severed.\n\nThis issue does not occur if returning normal responses from a Spring Controller, only when using DeferredResults.", "id": 186581, "time": "2015-11-26T15:39:33Z", "creator": "jonathan.keenan@gmail.com", "creation_time": "2015-11-26T15:39:33Z", "is_private": false}, {"count": 4, "tags": [], "text": "Your test case, while welcome, assumes the Tomcat developers are familiar with Spring Boot.\n\nA zip or tar.gz of the source tree, a pointer to a github project or similar to build the WAR would be better. Assuming, of course, the build uses a standard build tool like Ant, Maven, Gradle etc.\n\nWhile the offer of the WAR is appreciated, cynical souls that we are, we aren't too keen on running some random binary we know little about.", "is_private": false, "bug_id": 58657, "id": 186618, "time": "2015-11-27T23:24:42Z", "creator": "markt@apache.org", "creation_time": "2015-11-27T23:24:42Z", "attachment_id": null}, {"count": 5, "tags": [], "text": "Hi Mark,\n\nSorry about that. I've attached a zip there of the project. Its a maven project and can be assembled with the usual mvn clean install to get the WAR", "attachment_id": null, "bug_id": 58657, "id": 186659, "time": "2015-11-30T11:54:24Z", "creator": "jonathan.keenan@gmail.com", "creation_time": "2015-11-30T11:54:24Z", "is_private": false}, {"count": 6, "tags": [], "bug_id": 58657, "is_private": false, "id": 186660, "attachment_id": 33312, "creator": "jonathan.keenan@gmail.com", "creation_time": "2015-11-30T11:55:08Z", "time": "2015-11-30T11:55:08Z", "text": "Created attachment 33312\nMaven project of demo"}, {"count": 7, "tags": [], "text": "Daft question. What URL do I need to request to see the issue?", "attachment_id": null, "bug_id": 58657, "id": 186676, "time": "2015-11-30T17:12:42Z", "creator": "markt@apache.org", "creation_time": "2015-11-30T17:12:42Z", "is_private": false}, {"count": 8, "tags": [], "bug_id": 58657, "is_private": false, "id": 186677, "attachment_id": null, "creator": "jonathan.keenan@gmail.com", "creation_time": "2015-11-30T17:18:17Z", "time": "2015-11-30T17:18:17Z", "text": "(In reply to Mark Thomas from comment #7)\n> Daft question. What URL do I need to request to see the issue?\n\nNot daft at all, terrible naming convention on my part...\n\nhttp://localhost:8080/demo-0.0.1-SNAPSHOT/demo/hello/test"}, {"count": 9, "tags": [], "bug_id": 58657, "text": "OK. I have this working now. Some additional details for other people who want to try this test case:\n- URL expects POST requests. I used JMeter to send one.\n- The POST body needs to be big enough that it isn't all read at the same time. I added an ~8MB text file to the POST\n\nTomcat is handling the error and immediately closing the connection. This is by design. I need to dig further to understand what use case led to this approach and if we can take a more relaxed approach and close the connection cleanly rather than immediately.", "id": 186693, "attachment_id": null, "creator": "markt@apache.org", "creation_time": "2015-11-30T22:48:22Z", "time": "2015-11-30T22:48:22Z", "is_private": false}, {"count": 10, "tags": [], "text": "A little more information for anyone researching this in the future.\n\nOnce Tomcat encounters an error, it normally closes the connection. How quickly it does this depends on the severity of the error. If the error appears to be mild enough to allow a response to be written, Tomcat will:\n- swallow any remaining input\n- write the error response\n- close the connection\n\nThere is a limit to how much input Tomcat will swallow (connector attribute maxSwallowSize). If more data than this needs to be read, Tomcat will close the connection immediately without writing an error response. This is because many clients don't read the response until the request has been fully written.", "attachment_id": null, "bug_id": 58657, "id": 186717, "time": "2015-12-01T15:16:45Z", "creator": "markt@apache.org", "creation_time": "2015-12-01T15:16:45Z", "is_private": false}, {"count": 11, "tags": [], "bug_id": 58657, "attachment_id": null, "text": "Fixed in 9.0.x for 9.0.0.M2 and in 8.0.x for 8.0.30.", "id": 186728, "time": "2015-12-01T20:47:50Z", "creator": "markt@apache.org", "creation_time": "2015-12-01T20:47:50Z", "is_private": false}, {"count": 12, "tags": [], "bug_id": 58657, "text": "Thank you Mark.", "id": 186738, "attachment_id": null, "creator": "jonathan.keenan@gmail.com", "creation_time": "2015-12-02T10:17:33Z", "time": "2015-12-02T10:17:33Z", "is_private": false}]