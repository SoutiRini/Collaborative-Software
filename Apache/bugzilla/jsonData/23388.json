[{"count": 0, "attachment_id": null, "creator": "maverick_grey@mail.ru", "is_private": false, "id": 44597, "time": "2003-09-24T15:12:19Z", "bug_id": 23388, "creation_time": "2003-09-24T15:12:19Z", "tags": [], "text": "It is well known fact that constructor InputSource(java.io.Reader reader) uses \nencoding set in Reader and ignores actual encoding in xml declaration (for \nexample <?xml version=\"1.0\" encoding=\"UTF-8\"?>).\n\nIn the line 191 of org/apache/jasper/compiler/ParserController.java the reader \nis opened with default encoding (see the line 168). After that it is passed as \nan argument to JspDocumentParser.parse() in line 193. As a result, the code in \nline 129 of org/apache/jasper/compiler/JspDocumentParser.java effectively \nconfuses an xml parser.\n\nThere are two small patches solving the problem\n\n=== JspDocumentParser.diff ===\n123c124\n< \t\t\t     InputStreamReader reader) {\n---\n>                      InputStream stream) {\n129c130\n< \tthis.inputSource = new InputSource(reader);\n---\n>     this.inputSource = new InputSource(stream);\n139c140\n< \t\t\t\t   InputStreamReader reader,\n---\n>                          InputStream stream,\n141c142\n< \tJspDocumentParser handler = new JspDocumentParser(pc, path, reader);\n---\n>     JspDocumentParser handler = new JspDocumentParser(pc, path, stream);\n\n=== JspDocumentParser.diff ===\n\nand \n\n=== ParserController.diff ===\n191d193\n<             reader = getReader(absFileName, encoding);\n194,195c196,199\n< \t\t\t\t\t\t     reader, parent);\n<             } else {\n---\n>                                              getInputStream(absFileName), \nparent);\n>       }\n>       else {\n>         reader = getReader(absFileName, encoding);\n220,221c226\n< \t throws JasperException\n<     {\n---\n>       throws JasperException {\n297a306,314\n>   private InputStream getInputStream(String file)\n>       throws FileNotFoundException {\n> \n>       InputStream in = ctxt.getResourceAsStream(file);\n>       if (in == null)\n>         throw new FileNotFoundException(file);\n>       return in;\n>   }\n> \n299,302c316\n< \tthrows FileNotFoundException, JasperException\n<     {\n<         InputStream in;\n<         InputStreamReader reader;\n---\n>       throws FileNotFoundException, JasperException {\n305,307c319\n<             in = ctxt.getResourceAsStream(file);\n<             if (in == null) {\n<                 throw new FileNotFoundException(file);\n---\n>       return new InputStreamReader(getInputStream(file), encoding);\n309,310c321\n<             return new InputStreamReader(in, encoding);\n< \t} catch (UnsupportedEncodingException ex) {\n---\n>     catch (UnsupportedEncodingException ex) {\n\n=== ParserController.diff ==="}, {"count": 1, "tags": [], "creator": "maverick_grey@mail.ru", "attachment_id": null, "id": 44643, "time": "2003-09-25T07:41:39Z", "bug_id": 23388, "creation_time": "2003-09-25T07:41:39Z", "is_private": false, "text": "\n\n*** This bug has been marked as a duplicate of 19778 ***"}]