[{"count": 0, "tags": [], "bug_id": 56265, "attachment_id": null, "id": 173827, "time": "2014-03-14T19:53:26Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2014-03-14T19:53:26Z", "is_private": false, "text": "The following was reported on the users list,\n\"double xmlEscape in dynamic attributes in 7.0.52\"\nhttp://marc.info/?t=139479709800007&r=1&w=2\n\n[quote]\nHi,\nI have several custom jspx tags with dynamic attributes that worked well up to Tomcat 7.0.47, but they do not work properly on Tomcat 7.0.52. Same problems occur also when using Spring form tags (I suspect that other libraries would have same problem, but I didn't test them).\n\nsample (data-test[2] is dynamic attribute, onclick is static):\n<c:set var=\"world\" value=\"'World'\"></c:set>\n<sf:form onclick=\"window.alert('Hello ${world}!')\"\n        data-test=\"window.alert('Hello ${world}!')\"\n        data-test2=\"window.alert('Hello World!')\"\ntomcat 7.0.47 output:\n<form onclick=\"window.alert(&#39;Hello &#39;World&#39;!&#39;)\"\n        data-test=\"window.alert(&#39;Hello &#39;World&#39;!&#39;)\"\n        data-test2=\"window.alert(&#39;Hello World!&#39;)\"\ntomcat 7.0.52 output:\n<form onclick=\"window.alert(&#39;Hello &#39;World&#39;!&#39;)\"\n        data-test=\"window.alert(&amp;#039;Hello &#39;World&#39;!&amp;#039;)\"\n        data-test2=\"window.alert(&#39;Hello World!&#39;)\"\n\nIf there is EL used in dynamic attribute (data-test), non-EL part of that attribute is escaped twice, EL part is escaped only once. Tomcat 7.0.47 would escape everything just once.\nEverything works as before if static attribute is used (onclick) or there is no EL in dynamic attribute (data-test2).\n[/quote]"}, {"count": 1, "tags": [], "bug_id": 56265, "attachment_id": 31388, "id": 173828, "time": "2014-03-14T19:58:44Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2014-03-14T19:58:44Z", "is_private": false, "text": "Created attachment 31388\ntest.war\n\nA simple web application that reproduces this issue.\n\nSteps to reproduce on 7.0.52:\n1. Deploy\n2. Access http://localhost:8080/test/\n3.\nActual:\n---\n[data-test]: [window.alert(&#039;Hello 'World'!&#039;)]\n[data-test2]: [window.alert('Hello World!')]\n---\nExpected:\nThe following rows, in any order:\n---\n[data-test]: [window.alert('Hello 'World'!')]\n[data-test2]: [window.alert('Hello World!')]\n---\n\nTomcat 7.0.42 does not have this issue, produces the \"Expected\" output."}, {"count": 2, "tags": [], "bug_id": 56265, "attachment_id": null, "id": 173829, "time": "2014-03-14T20:01:22Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2014-03-14T20:01:22Z", "is_private": false, "text": "In 7.0.52 the text of index_jspx.java contains:\n\n[[[\n  private boolean _jspx_meth_my_005fmytag_005f0(javax.servlet.jsp.PageContext _jspx_page_context)\n          throws java.lang.Throwable {\n    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;\n    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();\n    //  my:mytag\n    org.apache.jsp.tag.webmytag_tagx _jspx_th_my_005fmytag_005f0 = (new org.apache.jsp.tag.webmytag_tagx());\n    _jsp_instancemanager.newInstance(_jspx_th_my_005fmytag_005f0);\n    _jspx_th_my_005fmytag_005f0.setJspContext(_jspx_page_context);\n    // /index.jspx(27,3) null\n    _jspx_th_my_005fmytag_005f0.setDynamicAttribute(null, \"data-test2\", \"window.alert('Hello World!')\");\n    // /index.jspx(27,3) null\n    _jspx_th_my_005fmytag_005f0.setDynamicAttribute(null, \"data-test\", (java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate(\"window.alert(&#039;Hello ${world}!&#039;)\", java.lang.Object.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));\n    _jspx_th_my_005fmytag_005f0.doTag();\n    _jsp_instancemanager.destroyInstance(_jspx_th_my_005fmytag_005f0);\n    return false;\n  }\n]]]\n\nSo I wonder why is it \"window.alert(&#039;Hello ${world}!&#039;)\" ,"}, {"count": 3, "tags": [], "text": "Thus far:\n\n1. It is reproducible with the current trunk\n\nThe following line numbers are from debugging the reproducer with current trunk @1577714.\n\n2. 'setDynamicAttribute(' is written out at Generator$GenerateVisitor.generateSetters(...) at Generator.java L3098\n\nAt this point attrs[i].getValue() is already\n\"window.alert(&#039;Hello ${world}!&#039;)\"\n\n3. The escaping happens when creating Node.JspAttribute.\nThat is in Validator$ValidateVisitor.getJspAttribute(...) at Validator.java L1379\n\nThe code there originates from r1539173\n\nApparently the goal of r1539173 was to apply xml escaping to attributes in UninterpretedTag nodes, but it was applied to any tag attributes containing EL expressions.", "attachment_id": null, "id": 173839, "creator": "knst.kolinko@gmail.com", "time": "2014-03-15T00:24:25Z", "bug_id": 56265, "creation_time": "2014-03-15T00:24:25Z", "is_private": false}, {"count": 4, "tags": [], "creator": "knst.kolinko@gmail.com", "text": "Created attachment 31390\n2014-03-15_56265_tc8_v1.patch\n\nPatch for this issue.\nEssentially it limits the effect of r1539173 to uninterpreted tags only.\n\nThere is no JUnit testcase for this issue yet.", "id": 173840, "time": "2014-03-15T00:54:51Z", "bug_id": 56265, "creation_time": "2014-03-15T00:54:51Z", "is_private": false, "attachment_id": 31390}, {"count": 5, "tags": [], "bug_id": 56265, "attachment_id": 31400, "id": 173898, "time": "2014-03-18T11:26:12Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2014-03-18T11:26:12Z", "is_private": false, "text": "Created attachment 31400\n2014-03-18_56265_tc8_v2.patch\n\nA better solution, with tests.\n\nThis covers this bug and xmlescaping in attributes of bug 55198.\nhttps://issues.apache.org/bugzilla/show_bug.cgi?id=55198\n\nXmlEscaping in bodies of bug 55198 is not covered, not investigated (nobody raised that besides me in discussion of bug 55198). Mark had compatibility concerns.\nhttps://issues.apache.org/bugzilla/show_bug.cgi?id=55198#c6\n\nIt is possible to introduce an option to make xmlescaping in attributes optional (a TODO comment in the patch)."}, {"count": 6, "tags": [], "bug_id": 56265, "attachment_id": 31401, "id": 173899, "time": "2014-03-18T15:03:17Z", "creator": "markt@apache.org", "creation_time": "2014-03-18T15:03:17Z", "is_private": false, "text": "Created attachment 31401\nProposed patch v3\n\nI've been looking at v2 of the patch.\n\nI think I found a couple of bugs in the testBug56265()\n- The method wasn't annotated with @Test so the test did not execute\n- bug56265.jsp assigned a value to a request attribute named 'text' but tried to use an attribute named 'world'.\n- The test was expected value [1] to be unescaped but I think it should have been expecting it to be escaped\n\nI've attached v3 of the patch for comment that - assuming my analysis of v2 is correct - addresses the issues I found and adds a few more tests. The fix part of the patch is now a lot simpler."}, {"count": 7, "tags": [], "bug_id": 56265, "attachment_id": null, "id": 173905, "time": "2014-03-18T18:17:33Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2014-03-18T18:17:33Z", "is_private": false, "text": "(In reply to Mark Thomas from comment #6)\n> Created attachment 31401 [details]\n> Proposed patch v3\n> \n> I've been looking at v2 of the patch.\n> \n> I think I found a couple of bugs in the testBug56265()\n> - The method wasn't annotated with @Test so the test did not execute\n> - bug56265.jsp assigned a value to a request attribute named 'text' but\n> tried to use an attribute named 'world'.\n\nMy bad. I have to fix it.\n\n> - The test was expected value [1] to be unescaped but I think it should have\n> been expecting it to be escaped\n\nWrong. The tag bug56265.tagx print the values as\n\n   <jsp:text>[${e.key}]: [${e.value}]</jsp:text>\n\nThose are the attribute values how they were provided by XML parser. They are unescaped ones.\n\n\n> I've attached v3 of the patch for comment that - assuming my analysis of v2\n> is correct - addresses the issues I found and adds a few more tests. The fix\n> part of the patch is now a lot simpler.\n\nWrong. Escaping discussed in bug 55198 shall be applied to template content of the document - to attributes of Node.UninterpretedTag only (and to textual content in the bodies if we extend this).\nThere is no reason to apply xmlescaping in the dozen of other cases when getAttribute(...) method is called.\n\nThere is also \"if (pageInfo.isELIgnored())\" branch that shall be handled in the same way as an attribute that does not contain EL expressions. My patch covers that, though I have not wrote a test case."}, {"count": 8, "tags": [], "bug_id": 56265, "text": "Created attachment 31402\nProposed patch v4\n\nI have updated my previous patch to follow the Validator changes in v2 but still with the test fixes from v3. I'm not 100% confident this patch is right yet. I want to spend more time reviewing it but I've put it here in case it is useful.", "id": 173915, "time": "2014-03-18T20:43:59Z", "creator": "markt@apache.org", "creation_time": "2014-03-18T20:43:59Z", "is_private": false, "attachment_id": 31402}, {"count": 9, "tags": [], "bug_id": 56265, "text": "I've spent the morning reviewing this issue and the various related issues. I'm now convinced that Konstantin's v2 patch was correct and that the test changes in the v4 are also correct. I will therefore be applying the v4 patch (with a few extra comments) shortly and then looking at back-porting it.", "id": 173933, "time": "2014-03-19T12:27:10Z", "creator": "markt@apache.org", "creation_time": "2014-03-19T12:27:10Z", "is_private": false, "attachment_id": null}, {"count": 10, "tags": [], "bug_id": 56265, "text": "Fixed in 8.0.x for 8.0.4 onwards.", "id": 173936, "time": "2014-03-19T12:43:10Z", "creator": "markt@apache.org", "creation_time": "2014-03-19T12:43:10Z", "is_private": false, "attachment_id": null}, {"count": 11, "tags": [], "bug_id": 56265, "attachment_id": null, "id": 173943, "time": "2014-03-19T15:10:27Z", "creator": "markt@apache.org", "creation_time": "2014-03-19T15:10:27Z", "is_private": false, "text": "This has also been fixed in 7.0.x for 7.0.53 onwards and in 6.0.x for 6.0.40 onwards."}]