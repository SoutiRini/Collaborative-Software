[{"count": 0, "tags": [], "creator": "ob@dorrboel.com", "text": "The following configuration works fine with Apache 2.0 :\n- client : IE + Windows XP\n- Reverse Proxy : Apache 2.0 running on solaris 9\n- IIS (Windows) server with NTLM authentication enabled\nWhen a protected page (via ACL on the IIS server) is accessed by the \nclient, thanks to Windows integrated authentication, the page is \ndisplayed with any user intervention (user identification prompt).\n\nSince Apache 2.2, user receives an identification prompt and, although \nthe username/password he enters are correct, he is not authorized.\n\nLooking at the network traffic, it seems that the NTLM authentication \nprocess is made of 3 requests.\nBetween the client and the RP, they use a single connection (same \nport).\nBetween the RP and the IIS server, they use a single connection if the \nRP is running on Apache 2.0; however, with Apache 2.2, the 3 requests \nuse 3 different connections (3 ports), which make NTLM fail.\nThis problem is reproductible at will.\nI tried the \"ProxyPass keepalive=On\" directive but it didn't help.\n\n\nIs there a workaround?", "id": 89549, "time": "2006-05-29T12:47:21Z", "bug_id": 39673, "creation_time": "2006-05-29T12:47:21Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 39673, "attachment_id": null, "text": "Have you tried upgrading to 2.2.2? Keepalive in the proxy does not work\ncorrectly with 2.2.0.", "id": 89566, "time": "2006-05-29T19:41:57Z", "creator": "rpluem@apache.org", "creation_time": "2006-05-29T19:41:57Z", "is_private": false}, {"count": 2, "tags": [], "creator": "ob@dorrboel.com", "attachment_id": null, "id": 89573, "time": "2006-05-30T08:28:38Z", "bug_id": 39673, "creation_time": "2006-05-30T08:28:38Z", "is_private": false, "text": "Indeed, Apache 2.2.2 brings some improvement :\n1. ProxyPass directive works fine (i.e. uses the same port for all \nconnections), even without the \"keepalive=On\" option\n2. However, RewriteRule ^(.*)$ http://windows_server$1 [P,NE] still uses \ndifferent ports to communicate with the back-end Windows server although the \ncommunication between the client and the RP uses the same port. In other words, \nthe Rewrite module, when used in conjunction with the Proxy module, \"splits\" \nthe communication on different ports, resulting in NTLM failure.\n\nThanks for your help!"}, {"count": 3, "tags": [], "creator": "ob@dorrboel.com", "attachment_id": null, "id": 89574, "time": "2006-05-30T08:31:36Z", "bug_id": 39673, "creation_time": "2006-05-30T08:31:36Z", "is_private": false, "text": "Indeed, Apache 2.2.2 brings some improvement :\n1. ProxyPass directive works fine (i.e. uses the same port for all \nconnections), even without the \"keepalive=On\" option\n2. However, RewriteRule ^(.*)$ http://windows_server$1 [P,NE] still uses \ndifferent ports to communicate with the back-end Windows server although the \ncommunication between the client and the RP uses the same port. In other words, \nthe Rewrite module, when used in conjunction with the Proxy module, \"splits\" \nthe communication on different ports, resulting in NTLM failure.\n\nThanks for your help!"}, {"attachment_id": null, "tags": [], "bug_id": 39673, "text": "*** Bug 39680 has been marked as a duplicate of this bug. ***", "count": 4, "id": 89593, "time": "2006-05-30T19:54:32Z", "creator": "rpluem@apache.org", "creation_time": "2006-05-30T19:54:32Z", "is_private": false}, {"attachment_id": null, "tags": [], "bug_id": 39673, "text": "Meanwhile I found some time to have a look how NTLM auth actually works. As a\nresult I found out that the current 2.2.x proxy implementation does NOT support\nNTLM, because there is no guarantee that the same backend connection is used for\nthe next request on a keepalive frontend connection. Each request from a\nfrontend connection leases a backend connection from a connection pool for the\nrequest and returns it back to the pool immediately after the request has been\nprocessed. If the next request on this keepalive frontend connection is\nprocessed it may lease a different backend connection from the pool. As far as I\nunderstand NTLM this approach is not compatible with NTLM. I will send a follow\nup on the dev list for further discussion.", "count": 5, "id": 89598, "time": "2006-05-30T20:13:00Z", "creator": "rpluem@apache.org", "creation_time": "2006-05-30T20:13:00Z", "is_private": false}, {"count": 6, "tags": [], "bug_id": 39673, "attachment_id": null, "text": "NTLM Auth by Microsoft violates HTTP/1.1 RFC's all of which defined the protocol\nas stateless.  It might behove us either to\n\n 1) provide a config directive to proxy-stateful and not recycle connections\n    to specific / pattern match of hosts, and/or\n\n 2) detect NTLM crap and mark the connection as non-recycleable.\n\n", "id": 89599, "time": "2006-05-30T20:43:48Z", "creator": "wrowe@apache.org", "creation_time": "2006-05-30T20:43:48Z", "is_private": false}, {"count": 7, "tags": [], "text": "\"Indeed, Apache 2.2.2 brings some improvement :\"\n\nAs does 2.2.4, however, it seems that 2.2.6 breaks it again. This was\nimmediately obvious after upgrade with no change in configs. (keepalives off)\n", "attachment_id": null, "bug_id": 39673, "id": 111827, "time": "2007-12-17T00:49:48Z", "creator": "peter.pearce@petrosa.co.za", "creation_time": "2007-12-17T00:49:48Z", "is_private": false}, {"count": 8, "tags": [], "text": "I noticed there has been no activity for over a year, so I figured I would provide an update.\n\nI am experiencing the same issue in a forward-proxy scenario using mod_proxy (so the issue is not limited to reverse-proxy setups). NTLM authentication over a non-HTTP connection using mod_proxy fails. Interestingly, NTLM authentication over a tunneled SSL connection using mod_proxy_connect seems to work just fine.\n\nThis is using version 2.2.11. None of the environment variables for mod_proxy_http or ProxyPass options seem to help.\n\nI know that NTLM authentication may be requiring some non-RFC behavior (reusing the same connection). However, there are many other places in httpd where options are provided to work around bugs in non-RFC-compliant software. Is it possible to do that here?\n\nWhat other information might be helpful to provide to get a workaround documented or a patch in place that lets us use NTLM? I am not much of a C/C++ jockey anymore, but I can certainly help with packet traces, testing different options, whatever.\n\nI will try to have a look at the Squid bug tracker to see if there were any NTLM issues for their code and if so, how they resolved them. Because I know NTLM works in Squid proxies (somehow).", "attachment_id": null, "bug_id": 39673, "id": 123926, "time": "2009-01-10T12:51:46Z", "creator": "rmalayter@bai.org", "creation_time": "2009-01-10T12:51:46Z", "is_private": false}, {"count": 9, "tags": [], "bug_id": 39673, "attachment_id": null, "text": "I would like to support comment sent by Ryan. I have absolutely the same experience. It looks that there is needed to do an workaround for correct behavior for NTLM which is metioned above in this posting. I've tested latest patched httpd 2.2.3 RHEL version with mod_proxy and it is impossible to get it working. ", "id": 124811, "time": "2009-02-12T07:02:29Z", "creator": "lukas.koranda@homecredit.net", "creation_time": "2009-02-12T07:02:29Z", "is_private": false}, {"attachment_id": null, "tags": [], "bug_id": 39673, "text": "I switched hardware and OS to ALL for this bug, since this was originally reported on SPARC, but also in my testing is an issue on Windows/i386 as well as Linux/amd64.\n\nI also, as promised, checked out the status of NTLM proxy support in Squid, which I had seen work before, and it is not good. Apparently, the issue has been \"fixed\" in some 2.7 releases, broken in others, and still appears to be broken in the latest stable releases of 2.7 and 3.0 Squid.\n\nI think, perhaps, my testing with Squid that seemed to work was only because I was lucky and happened to be re-using the same back-end connections.\n\nIs there a way to make back-end connections \"sticky\" for the same front end client/destination combination? Wouldn't that fix the issue? A simple hash table would suffice to track this, wouldn't it?\n\n", "count": 10, "id": 124815, "time": "2009-02-12T07:18:24Z", "creator": "rmalayter@bai.org", "creation_time": "2009-02-12T07:18:24Z", "is_private": false}, {"count": 11, "tags": [], "creator": "osegarra@gencat.net", "attachment_id": null, "id": 140093, "time": "2010-09-23T05:34:36Z", "bug_id": 39673, "creation_time": "2010-09-23T05:34:36Z", "is_private": false, "text": "Hi, \n\nI am experiencing the same issue. Is there any new or workarround for this issue ?\n\nThanks a lot!!!!!"}, {"count": 12, "tags": [], "creator": "rvandolson@esri.com", "attachment_id": null, "id": 140111, "time": "2010-09-23T11:18:18Z", "bug_id": 39673, "creation_time": "2010-09-23T11:18:18Z", "is_private": false, "text": "(In reply to comment #11)\n> Hi, \n> \n> I am experiencing the same issue. Is there any new or workarround for this\n> issue ?\n> \n> Thanks a lot!!!!!\n\nDon't use NTLM, switch to Apache 2.0.x or MS ISA :)"}, {"count": 13, "tags": [], "creator": "micha@lenk.info", "text": "Created attachment 29994\nproxy NTLM requests received over the same client connection via the same backend connection\n\nLooking at how mod_proxy_ftp.c solves a similar problem, I tried to solve that issue with the attached patch (also attached to bugzilla). If a NTLM request is detected, the cleanup of the currently leased backend connection is skipped. Instead the backend connection is registered with the client connection pool, so that it is closed and cleaned up as soon as the client disconnects. Additionally the backend connection is registered as a config record in the client connection, so that it can get re-used for subsequent requests on the same client connection.", "id": 165493, "time": "2013-02-26T18:00:03Z", "bug_id": 39673, "creation_time": "2013-02-26T18:00:03Z", "is_private": false, "attachment_id": 29994}, {"count": 14, "tags": [], "text": "My patch (attachment 29994) is broken and causes segfaults, so please don't use it. I am working on an improved/fixed version.", "attachment_id": null, "bug_id": 39673, "id": 165566, "time": "2013-03-01T12:56:14Z", "creator": "micha@lenk.info", "creation_time": "2013-03-01T12:56:14Z", "is_private": false}, {"count": 15, "tags": [], "text": "Is there any workaround or fix for this issue in Apache 2.4.x?", "attachment_id": null, "bug_id": 39673, "id": 170252, "time": "2013-09-24T15:20:28Z", "creator": "varkey@varkey.in", "creation_time": "2013-09-24T15:20:28Z", "is_private": false}, {"count": 16, "tags": [], "bug_id": 39673, "attachment_id": 30887, "text": "Created attachment 30887\nmod_proxy_http one for one connection\n\nThis patch (2.4.x) associates the backend's connection with the client's one, when the env variable \"proxy-1for1-connection\" is defined.\n\nOne can use a SetEnv or a RewriteRule like the following to get the expected result :\n\n RewriteCond %{HTTP:Authorization} ^NTLM\n RewriteRule ^ - [E=proxy-1for1-connection]\n\nNote: be sure to only set the env variable in a relevant Location or one can use an Authorization header to force mod_proxy in this mode, which is less efficient...\n\nRegarding the patch, the rationale is that mod_proxy can't use a backend connection from the reslist for the whole lifetime of a client connection, or the other clients would miss that backend connection during the client's Keep-Alive times.\n\nHence the new APR_OPTIONAL_FN(ap_proxy_conn_create), used by mod_proxy_http to get an \"aside\" (off the reslist) connection and bind it to the client's connection (using c->conn_config and built on c->pool, once). The connection will be reused for the next requests, until the client closes (both are destroyed then).\n\nSince I don't know what is really feasible in terms of API/ABI changes in 2.4.x, ap_proxy_conn_create is private (APR_DECLAREd_OPTIONAL in proxy_util.h, which AFAICT is not public). Maybe the ap_proxy_conn_destroy/clear/close functions and the the \"1for1\" handling in mod_proxy_http could also be usefull for other mod_proxy_* modules, I guess this is off topic here...\n\nTo preserve the API still, this patch circumvents the proxy_conn_rec's flag 'inreslist', which used to be a guard not to put back the same connection twice in the reslist, and now indicates whether the connection comes from the reslist or not. Ideally the patch should create another flag (with an API change), but anyhow this guard seems useless should the connection be released twice (the damage is done), there is still the possibility that another thread gets this connection before the second release.\n\nFinally, I would add that it is not only a NTLM compatibility problem, some devices (BigIp LTM's with some configuration IIRC), will simply refuse multiple clients (sessions) in the same TCP connection. Although this can surely be disabled on the device (and is indeed a questionable feature), some like it, and even some want mod_proxy in front of it...\n\nIf the 1for1 feature worth being in mod_proxy (that way), I can provide a trunk patch too.", "id": 170294, "time": "2013-09-26T18:39:26Z", "creator": "ylavic.dev@gmail.com", "creation_time": "2013-09-26T18:39:26Z", "is_private": false}, {"count": 17, "tags": [], "creator": "ylavic.dev@gmail.com", "attachment_id": 30888, "id": 170302, "time": "2013-09-27T14:00:03Z", "bug_id": 39673, "creation_time": "2013-09-27T14:00:03Z", "is_private": false, "text": "Created attachment 30888\nmod_proxy_http one for one connection\n\nThe previous patch segfaults when the backend closes the connection by itself, or when is_address_reusable is unset, or when disablereuse is on (however the two latter cases make few sense in 1for1 mode).\n\nThis new patch fix these issues, and it won't enable 1for1 mode if the address is not reusable or disablereuse is on.\n\nTo come (next comment), another patch that let mod_proxy do the job instead of mod_proxy_http (I find it more simple, so maybe with more chances to be accepted)."}, {"count": 18, "tags": [], "creator": "ylavic.dev@gmail.com", "text": "Created attachment 30889\nmod_proxy one for one connection\n\nAs said in the previous comment, here is a new patch which is maybe more simple.\n\nThe rationale is the same (backend's connection attached to the client's one, out of the reslist), but the job is done by the new ap_proxy_acquire_connection_ex function (declared optional in proxy_util.h too), provided that the caller gives it a conn_rec to attach to (when the conn_rec is NULL, it is the legacy ap_proxy_acquire_connection function, which unfortunately takes a server_rec and not a request_rec as argument).\n\nTherefore the changes in mod_proxy_http and the interaction with mod_proxy are simpler, and other proxy modules can use ap_proxy_acquire_connection_ex to do the same.\n\nHope this patch (or the other) has a chance to be accepted, since I don't really understand why NTLM is less HTTP compliant than wstunnel or any other streaming over HTTP (do you plan to close/reuse the backend connection during client's inactivity for these?).", "id": 170303, "time": "2013-09-27T14:19:55Z", "bug_id": 39673, "creation_time": "2013-09-27T14:19:55Z", "is_private": false, "attachment_id": 30889}, {"count": 19, "tags": [], "creator": "vittorio.guglielmo@gmail.com", "text": "Hi all,\n\nI tried Yann's mod_proxy_one patch against apache-2.4.7 (the only version on which I could apply w/o errors) and it works fine for HTTP.\n\nInstead, in HTTPS, I have a strange behavior:\n\nopening a page containing various iframes each pointing to some of two Sharepoint backends, I find it address calls toward the wrong connection (backend).\n\nI try to figure it better:\n\nMy two backends:\n\n1) backend mssA.foo.com    IP 172.22.47.54\n2) backend mssB.foo.com    IP 172.22.47.52\n\nExtract of my https virtual host:\n\nProxyPass                  /Runtime  http://mssA.foo.com:82/Runtime/\nProxyPassReverse           /Runtime/ http://mssA.foo.com:82/Runtime/\n\nProxyPass                  /fascicoli http://mssB.foo.com/fascicoli/\nProxyPassReverse           /fascicoli/ http://mssB.foo.com/fascicoli/\n\n\nI found this entries in my error.log (debug activated):\n\n[pid 8818:tid 140388427851520] proxy_util.c(2623): AH00962: HTTP: connection complete to 172.22.47.54:80 (mssA.foo.com)\n\n[pid 8819:tid 140388642264832] proxy_util.c(2623): AH00962: HTTP: connection complete to 172.22.47.54:80 (mssB.foo.com)\n\n[pid 8905:tid 140388642264832] proxy_util.c(2623): AH00962: HTTP: connection complete to 172.22.47.54:80 (mssB.foo.com)\n\n[pid 8817:tid 140388490790656] proxy_util.c(2623): AH00962: HTTP: connection complete to 172.22.47.54:80 (mssB.foo.com)\n\n[pid 8819:tid 140388511770368] proxy_util.c(2623): AH00962: HTTP: connection complete to 172.22.47.54:80 (mssB.foo.com)\n\n[pid 8905:tid 140388610795264] proxy_util.c(2623): AH00962: HTTP: connection complete to 172.22.47.54:80 (mssB.foo.com)\n\n[pid 8818:tid 140388511770368] proxy_util.c(2623): AH00962: HTTP: connection complete to 172.22.47.54:80 (mssA.foo.com)\n\n[pid 8905:tid 140388427851520] proxy_util.c(2623): AH00962: HTTP: connection complete to 172.22.47.54:80 (mssB.foo.com)\n\n[pid 8817:tid 140388621285120] proxy_util.c(2623): AH00962: HTTP: connection complete to 172.22.47.54:80 (mssB.foo.com)\n\n[pid 8819:tid 140388343932672] proxy_util.c(2623): AH00962: HTTP: connection complete to 172.22.47.54:80 (mssB.foo.com)\n\n[pid 8905:tid 140388417361664] proxy_util.c(2623): AH00962: HTTP: connection complete to 172.22.47.54:80 (mssB.foo.com)\n\nAs you can see, I have :  \n\nto 172.22.47.54:80 (mssA.foo.com)\nbut it should be \nto 172.22.47.52:82 (mssA.foo.com)\n\nBoth IP address and port are wrong, they are taken from the other backend (mssB.foo.com)\n\nSo, definetely, sometimes it use a wrong connection, causing a lot on 404 errors.\n\nCan you help me ?\n\nThanks \n\nVittorio", "id": 175953, "time": "2014-06-21T08:07:42Z", "bug_id": 39673, "creation_time": "2014-06-21T08:07:42Z", "is_private": false, "attachment_id": null}, {"count": 20, "tags": [], "creator": "ylavic.dev@gmail.com", "text": "Created attachment 31751\nHandle aside connections in mod_proxy (2.4.x)\n\n(In reply to Vittorio Guglielmo from comment #19)\n> opening a page containing various iframes each pointing to some of two\n> Sharepoint backends, I find it address calls toward the wrong connection\n> (backend).\n\nThanks for testing.\n\nThe previous patch did not work correctly whenever multiple requests on the same client connection address different backend.\nThe only backend connection associated with the client one was reused, whether or not the worker has changed.\n\nThis new patch addresses this by handling a hashtable of backend connections (one per worker) for one client connection.\n\nIt is quite different from the previous one, by allowing any (proxy) module to use the new :\n\n+/**\n+ * Acquire a connection from worker connection pool, or associated with\n+ * the given conn_rec or request_rec.\n+ * @param proxy_function calling proxy scheme (http, ajp, ...)\n+ * @param conn    acquired connection\n+ * @param worker  worker used for obtaining connection\n+ * @param s       current server record\n+ * @param baton   associated baton (or conn_rec if @acquire is NULL)\n+ * @param acquire function (if not NULL) used to acquire aside connections,\n+ *\t\t\t\t  given @baton, @conn, @worker, and @s\n+ * @param release function (if not NULL) used to release acquired connection,\n+ *\t\t\t\t  given @baton, @conn, @worker, and @s, as callback\n+ * @return        OK or HTTP_XXX error\n+ * @note If the connection limit has been reached, the function will\n+ * block until a connection becomes available or the timeout has\n+ * elapsed.\n+ * @note If the given @baton is not NULL and @acquire is NULL, the baton is\n+ * considered a conn_rec to which a connection will be attached (by worker).\n+ */\n+PROXY_DECLARE(int) ap_proxy_acquire_connection_ex(const char *proxy_function,\n+                                                  proxy_conn_rec **conn,\n+                                                  proxy_worker *worker,\n+                                                  server_rec *s, void *baton,\n+                                                  ap_proxy_acquire_fn acquire,\n+                                                  ap_proxy_release_fn release);\n+\n\nFor now, only mod_proxy_http and mod_proxy_ajp have been changed to do so, since the others seem not to reuse connections, but maybe it is worth using a quick way to acquire/release a connection (ie. no reslist locks) for those too, especially if it is always closed at the end (no recycling).\n\nCan you give this new patch a try?", "id": 176062, "time": "2014-06-26T14:18:39Z", "bug_id": 39673, "creation_time": "2014-06-26T14:18:39Z", "is_private": false, "attachment_id": 31751}, {"count": 21, "tags": [], "creator": "ylavic.dev@gmail.com", "text": "(In reply to Yann Ylavic from comment #20)\n> +/**\n> + * Acquire a connection from worker connection pool, or associated with\n> + * the given conn_rec or request_rec.\n\nThis description is not correct (bad copy/paste), should be something like :\n\n/**\n * Acquire a connection using the given @acquire function and register\n * a @release callback for it on cleanup, or use the worker's connections\n * pool if the associated @baton is NULL.\n * ...\n */", "id": 176063, "time": "2014-06-26T14:30:18Z", "bug_id": 39673, "creation_time": "2014-06-26T14:30:18Z", "is_private": false, "attachment_id": null}, {"count": 22, "tags": [], "creator": "ylavic.dev@gmail.com", "attachment_id": null, "id": 176064, "time": "2014-06-26T14:35:23Z", "bug_id": 39673, "creation_time": "2014-06-26T14:35:23Z", "is_private": false, "text": "Also, please not that the SetEnv is now \"proxy-aside-c\" for this to be enabled, since the previous \"proxy-1for1-connection\" is quite misleading now."}, {"attachment_id": 31752, "tags": [], "bug_id": 39673, "text": "Created attachment 31752\nHandle aside connections in mod_proxy (2.4.x)\n\nFix from comment #21 above.", "count": 23, "id": 176066, "time": "2014-06-26T14:53:30Z", "creator": "ylavic.dev@gmail.com", "creation_time": "2014-06-26T14:53:30Z", "is_private": false}, {"count": 24, "tags": [], "creator": "ylavic.dev@gmail.com", "attachment_id": 31753, "id": 176067, "time": "2014-06-26T14:56:59Z", "bug_id": 39673, "creation_time": "2014-06-26T14:56:59Z", "is_private": false, "text": "Created attachment 31753\nHandle aside connections in mod_proxy (2.4.x)\n\nOups, I forgot to set the new conn in the hashtable (can't work).\nFixed now."}, {"count": 25, "tags": [], "creator": "ylavic.dev@gmail.com", "attachment_id": 31754, "id": 176068, "time": "2014-06-26T15:08:34Z", "bug_id": 39673, "creation_time": "2014-06-26T15:08:34Z", "is_private": false, "text": "Created attachment 31754\nHandle aside connections in mod_proxy (2.4.9)\n\nSame (latest) patch for 2.4.9 (resolves minor conflicts)."}, {"count": 26, "tags": [], "text": "Many thanks to Yann, his last patch works perfectly.\n\nIt is now a must-have for people working in a Microsoft environment dealing\nwith NTLM and/or Windos Integrated Authentication.\n\nVittorio", "attachment_id": null, "bug_id": 39673, "id": 176148, "time": "2014-07-02T13:27:15Z", "creator": "vittorio.guglielmo@gmail.com", "creation_time": "2014-07-02T13:27:15Z", "is_private": false}, {"count": 27, "tags": [], "creator": "ka.hing.chan@gmail.com", "attachment_id": null, "id": 176411, "time": "2014-07-16T01:24:32Z", "bug_id": 39673, "creation_time": "2014-07-16T01:24:32Z", "is_private": false, "text": "Am I missing something? I have \nProxyPass http://url/\nProxyPassReverse http://url/\nSetEnv \"proxy-aside-c\" inside the location where it is doing the reverse proxy. But I am still getting Error code: ERR_INVALID_AUTH_CREDENTIALS. Is there other configurations I need to do?"}, {"count": 28, "tags": [], "creator": "cdbruun@flyingpigs.dk", "attachment_id": null, "id": 176840, "time": "2014-08-01T23:28:53Z", "bug_id": 39673, "creation_time": "2014-08-01T23:28:53Z", "is_private": false, "text": "I had issues with mod_proxy and NTLM like the ones described in this bug. This happened after a server upgrade (debian) where I had installed apache-mpm-worker.\n\nChanging to the apache-mpm-prefork package made the problem go away.\n\n- this may be a workaround for people in the same situation"}, {"attachment_id": 32040, "tags": [], "bug_id": 39673, "text": "Created attachment 32040\nHandle aside connections in mod_proxy (trunk)", "count": 29, "id": 178016, "time": "2014-09-22T07:49:03Z", "creator": "jkaluza@redhat.com", "creation_time": "2014-09-22T07:49:03Z", "is_private": false}, {"attachment_id": null, "tags": [], "bug_id": 39673, "text": "I've rebased the patch against httpd-trunk.\n\nYann, do you plan to commit/propose this patch or have you already tried and were there some problems with it?", "count": 30, "id": 178017, "time": "2014-09-22T07:49:57Z", "creator": "jkaluza@redhat.com", "creation_time": "2014-09-22T07:49:57Z", "is_private": false}, {"count": 31, "tags": [], "creator": "ylavic.dev@gmail.com", "attachment_id": null, "id": 178109, "time": "2014-09-25T12:07:55Z", "bug_id": 39673, "creation_time": "2014-09-25T12:07:55Z", "is_private": false, "text": "Jan,\n\nno I didn't try to propose the patch, based on the comment(s) in this PR stating that NTLM is stateful and hence not HTTP (RFC) compliant.\n\nOn the other hand this patch is not NTLM specific (see comment #16 about issues I encountered with some load-balancers), I use the different versions I proposed here since a while now, with no problem.\n\nIt is less performant than the \"normal\" connections' reuse implementation, but optional still.\n\nNow we are two maybe it has more chance to be accepted.\nShould I propose it on dev@, or do you plan to?"}, {"count": 32, "tags": [], "bug_id": 39673, "attachment_id": null, "text": "(In reply to ka.hing.chan from comment #27)\n> Am I missing something? I have \n> ProxyPass http://url/\n> ProxyPassReverse http://url/\n> SetEnv \"proxy-aside-c\" inside the location where it is doing the reverse\n> proxy. But I am still getting Error code: ERR_INVALID_AUTH_CREDENTIALS. Is\n> there other configurations I need to do?\n\nNo there shouldn't. Can you provide traces (debug log, maybe pcap on both sides) so that we can analyse what's going on?", "id": 178110, "time": "2014-09-25T12:13:39Z", "creator": "ylavic.dev@gmail.com", "creation_time": "2014-09-25T12:13:39Z", "is_private": false}, {"count": 33, "tags": [], "bug_id": 39673, "attachment_id": null, "text": "Yann,\n\nas you are the author and see more possible use-cases, it would be probably better for you to propose it. I will join the discussion :).", "id": 178192, "time": "2014-09-30T06:23:04Z", "creator": "jkaluza@redhat.com", "creation_time": "2014-09-30T06:23:04Z", "is_private": false}, {"count": 34, "tags": [], "text": "Discussion initiated here: http://www.mail-archive.com/dev@httpd.apache.org/msg60721.html", "attachment_id": null, "bug_id": 39673, "id": 178214, "time": "2014-10-01T09:52:44Z", "creator": "ylavic.dev@gmail.com", "creation_time": "2014-10-01T09:52:44Z", "is_private": false}]