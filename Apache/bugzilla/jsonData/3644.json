[{"count": 0, "tags": [], "creator": "bojan@binarix.com", "text": "The problem occurs when whole or parts of an application are distributed in a\njar file and reload feature of Tomcat is turned on. If jar file is updated,\neither of the following might occur:\n\n- resources from within jar cannot be read\n- class itself cannot be found within jar (comes back to first the first)\n\nTo replicate the problem with class loading do this:\n\n- create a servlet and pack it into WEB-INF/lib/app.jar\n- keep making changes to the servlet, pack it and put into WEB-INF/lib\n- attempt to use the servlet\n\nTo replicate the problem with resource loading do this:\n\n- in your servlet call:\n\n  ServletClassName.class.getResourceAsStream(<file-packed-in-jar>);\n\n  or:\n\n  this.getClass().getClassLoader().getResourceAsStream(<file-packed-in-jar>);\n\n- change the contents of the jar file and distribute into WEB-INF/lib\n- use the servlet\n\nThe 'amount of change' to the jar file seems to make a difference. Small changes\nare less likely to cause errors. If the resource you're attempting to fetch is\npacked in the same jar with the servlet that fetches it, you might get\nintermittent resource loading problems or ClassNotFoundException thrown by\nDependClassLoader (which indicates that class itself could not be loaded).\n\nClassNotFoundException happens due to the IOException being thrown by reading\nfrom ZipFile$1 (this is an InputStream), in method readFully() of\nDependClassLoader. This indicates that it is ZipFile of JDK that is probably\nbroken and cannot read an updated jar file.\n\nThe workaround is to use straight classes and files in WEB-INF/classes\ndirectory.", "id": 5636, "time": "2001-09-16T20:28:21Z", "bug_id": 3644, "creation_time": "2001-09-16T20:28:21Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "creator": "bojan@binarix.com", "text": "Attaching the bug report to Sun and a source code used to replicate the problem\n(just a straight app, no servlet container necessary).\n\n---------------------------------------------------------------------------\n\n\nThis bug seems to be similar to bugs 4040920 and 4103650, which, a far\nas I can tell, some people still reported in 1.3.\n\nI can replicate the problem every single time, so I'll submit the code\nthat I used.\n\nThis is my little test program:\n\n------------------------------------------------------\n/*\n * @(#)ZipFileTest.java\n *\n * This software is licensed under GNU General Public License\n * http://www.gnu.org/copyleft/gpl.html\n *\n */\n\nimport java.io.*;\nimport java.net.*;\nimport java.util.*;\n\nclass ZipFileTest extends ClassLoader{\n\n  public static void main(String argv[]){\n    LineNumberReader in=new LineNumberReader(new\nInputStreamReader(System.in));\n\n    while(true){\n      Properties p=new Properties();\n      try{\n        // Get the resource using the first ClassLoader object (first\nset)\n        ZipFileTest t=new ZipFileTest();\n        System.err.println(\"t=\"+t);\n\n        InputStream\ni=t.getResourceAsStream(\"com/binarix/velocity/application.properties\");\n        System.err.println(\"i=\"+i);\n        p.load(i);\n        p.save(System.out,\"\");\n\n        // Get rid of the objects\n        i=null; t=null; p=null;\n\n        // Wait for user input while replacing the jar\n        in.readLine();\n      } catch(Throwable t){\n        System.out.println(t);\n        t.printStackTrace(System.out);\n        System.exit(1);\n      }\n    }\n  }\n}\n------------------------------------------------------\n\nAs you can see, it's not much to look at. It loops indefinitely until\nsomething bad happens. Anyway...\n\nI run the program like this:\n\n------------------------------------------------------\njava -cp\n/home/httpd/html/binarix.dev/WEB-INF/lib/app.jar:/home/groups/devel/apps/zipfile-test:$CLASSPATH\nZipFileTest\n------------------------------------------------------\n\nYou'll notice a little app.jar at the beginning of the classpath. It\nlooks like this:\n\n------------------------------------------------------\njar tvf /home/httpd/html/binarix.dev/WEB-INF/lib/app.jar \n     0 Tue Sep 18 18:43:34 EST 2001 META-INF/\n     0 Tue Sep 18 17:56:30 EST 2001 com/\n     0 Tue Sep 18 17:56:30 EST 2001 com/binarix/\n     0 Tue Sep 18 17:56:30 EST 2001 com/binarix/wpm/\n     0 Tue Sep 18 18:43:34 EST 2001 com/binarix/velocity/\n   598 Tue Sep 18 17:56:30 EST 2001 com/binarix/wpm/ParseXML.class\n  3868 Tue Sep 18 17:56:30 EST 2001 com/binarix/wpm/ParsePage.class\n  6129 Tue Sep 18 17:56:30 EST 2001\ncom/binarix/velocity/velocity.properties\n   133 Tue Sep 18 17:56:30 EST 2001\ncom/binarix/velocity/beans.properties\n 14012 Tue Sep 18 18:43:34 EST 2001\ncom/binarix/velocity/PumpServlet.class\n   880 Tue Sep 18 17:56:30 EST 2001\ncom/binarix/velocity/application.properties\n    43 Tue Sep 18 18:43:34 EST 2001 META-INF/MANIFEST.MF\n------------------------------------------------------\n\nThis is (accidentally) an application that I give Tomcat to chew. All\nwe're interested in here is the properties file application.properties.\n\nFirst time around, this is the output of the program:\n\n------------------------------------------------------\nt=ZipFileTest@1fef6f\ni=java.util.zip.ZipFile$1@1fbe93\n#\n#Tue Sep 18 19:16:28 EST 2001\nlogfile=/var/tomcat/logs/binarix.dev-dnsearch.log\nwhois=http\\://www.networksolutions.com/cgi-bin/whois/whois?STRING\\=\nregister.feedback=info@binarix.com\njnp-port=1099\ninquiry.validate=name,title,company,phone,fax,email\ndbms=postgresql\nuser=binarix\nregister.mailfields=domain,name,title,company,address,city,state,postcode,country,phone,fax,email,businessname,businessnumber,regstate,austcompanyname,abn,comments\ninquiry.mailfields=name,title,company,phone,fax,email,comments\nwhoisau=http\\://www.aunic.net/cgi-bin/aunicstatus.pl?html-form\\=yes&amp;action\\=Domain+Name+Lookup&amp;domain-name\\=\ninquiry.feedback=info@binarix.com\napplication=binarix\nregister.validate=name,title,company,address,city,state,country,phone,email\ndatabase=binarix\npassword=****************\njnp-host=localhost\ndriver=org.postgresql.Driver\n------------------------------------------------------\n\nSo, the properties are properly read from the file and written out to\nstandard output.\n\nWhile waiting for input (in.readLine()), I build another app.jar and\nreplace the original file. Only PumpServlet.class is actually changed.\nNo other files are changed in any way. This is what happens:\n\n------------------------------------------------------\nt=ZipFileTest@712c4e\ni=java.util.zip.ZipFile$1@13dee9\njava.util.zip.ZipException: invalid distance code\njava.util.zip.ZipException: invalid distance code\n        at\njava.util.zip.InflaterInputStream.read(InflaterInputStream.java:139)\n        at java.io.FilterInputStream.read(FilterInputStream.java:93)\n        at java.io.InputStreamReader.fill(InputStreamReader.java:173)\n        at java.io.InputStreamReader.read(InputStreamReader.java:249)\n        at java.io.BufferedReader.fill(BufferedReader.java:139)\n        at java.io.BufferedReader.readLine(BufferedReader.java:299)\n        at java.io.BufferedReader.readLine(BufferedReader.java:362)\n        at java.util.Properties.load(Properties.java:192)\n        at ZipFileTest.main(ZipFileTest.java:26)\n------------------------------------------------------\n\nNote here that I have brand new ZipFileTest (ClassLoader) and ZipFile$1\nobjects, so we should 'start over'. But, it doesn't happen. The old\nstuff is 'cached' somewhere, somehow and the whole thing blows up.\n\nIf I run the program again (ie. new instance of the VM) with the file\nused the second time around, everything is back to normal, as long as\nthe underlying file is not switched.\n\nIf you wish to test this further, I can send you the jar file I'm using\nfor testing.\n\nThis bug is preventing proper class reloading in Tomcat 3.3 and 4 (to my\nbest knowledge only on Windows), since it depends on ZipFile to work\ncorrectly.\n\nIf class files and other resources are used directly (ie. not through\nthe jar file) everything is working just fine. Actually I have 10+ web\napplications that are reloading themselves and associated resources (in\nmy case properties files) if files are not packed in jars, but rather\nstored as straight files.\n\n", "id": 5703, "time": "2001-09-18T02:46:26Z", "bug_id": 3644, "creation_time": "2001-09-18T02:46:26Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 3644, "text": "Ok, seems like a nasty bug in the VM. We can try a workaround - in a future\nrelease of tomcat. Could you check with the current 1.4 beta and maybe IBM1.3 ?\nMaybe it's fixed. I don't think we can/should attempt to fix for 3.3.0, unless\nyou have a quick and simple patch.", "id": 5793, "attachment_id": null, "creator": "cmanolache@yahoo.com", "creation_time": "2001-09-19T17:05:14Z", "time": "2001-09-19T17:05:14Z", "is_private": false}, {"count": 3, "tags": [], "text": "IBM 1.3 for Linux does not work. I can try 1.4 after I download the monster...\n\nCan't think of any quick fixes since JDK stuff is being used. I think that even\nSimpleClassLoader would suffer from the same issues (didn't verify though) since\nit also relies on java.util.zip.\n\nWe can just tell people that we have seen such behaviour and if they want\nreliable reloads they can use classes instead.\n\nI'll have a look into ZIP support in Ant.", "is_private": false, "bug_id": 3644, "id": 5794, "time": "2001-09-19T17:23:32Z", "creator": "bojan@binarix.com", "creation_time": "2001-09-19T17:23:32Z", "attachment_id": null}, {"count": 4, "attachment_id": null, "bug_id": 3644, "is_private": false, "id": 6037, "time": "2001-09-25T17:37:12Z", "creator": "bojan@binarix.com", "creation_time": "2001-09-25T17:37:12Z", "tags": [], "text": "Replicated the problem with JRE 1.3.1, Windows 2000."}, {"count": 5, "tags": [], "bug_id": 3644, "text": "Reopening to change resolution.", "id": 10223, "attachment_id": null, "creator": "Larry.Isaacs@sas.com", "creation_time": "2002-02-02T14:45:38Z", "time": "2002-02-02T14:45:38Z", "is_private": false}, {"count": 6, "tags": [], "creator": "Larry.Isaacs@sas.com", "text": "With updates made to Tomcat 3.3.1-dev and the new \"use11Loader\" attribute\nadded to LoaderInterceptor11 set true, I was able to get a test case to work\nunder Windows and Linux.  Assuming this has been fixed.", "id": 10224, "time": "2002-02-02T14:47:50Z", "bug_id": 3644, "creation_time": "2002-02-02T14:47:50Z", "is_private": false, "attachment_id": null}, {"count": 7, "tags": [], "creator": "zorro.desbois@wanadoo.fr", "text": "*** Bug 18957 has been marked as a duplicate of this bug. ***", "id": 35485, "time": "2003-04-18T08:04:30Z", "bug_id": 3644, "creation_time": "2003-04-18T08:04:30Z", "is_private": false, "attachment_id": null}]