[{"count": 0, "tags": [], "bug_id": 49570, "is_private": false, "text": "At the moment the Compression Filter example doesn't send the header \"Vary: Accept-Encoding\" with the compressed content (see method writeToGZip(..) in http://svn.apache.org/repos/asf/tomcat/trunk/webapps/examples/WEB-INF/classes/compressionFilters/CompressionResponseStream.java). \n\nFrom many sources like\n\n1. http://httpd.apache.org/docs/2.0/mod/mod_deflate.html#proxies\n2. http://developer.yahoo.net/blog/archives/2007/07/high_performanc_3.html\n\nit looks like a \"Vary: Accept-Encoding\" header should be sent with the compressed content to make sure proxy servers can serve gzipped content correctly.\n\nTo enhance this example, the method writeToGzip(..) should be updated to send Vary: Accept-Encoding header like below:\n\npublic void writeToGZip(byte b[], int off, int len) throws IOException {\n...\n   response.addHeader(\"Content-Encoding\", \"gzip\");\n   response.addHeader(\"Vary\", \"Accept-Encoding\");\n   gzipstream = new GZIPOutputStream(output);\n...\n}", "id": 138269, "time": "2010-07-08T02:11:36Z", "creator": "hathanhthai@gmail.com", "creation_time": "2010-07-08T02:11:36Z", "attachment_id": null}, {"count": 1, "tags": [], "text": "The current approach to gzip compression is fundamentally flawed. See bug46538 and bug39727 for an explanation of why. Transfer-Encoding is the correct way to go but browser support is still patchy.\n\nThat said, the majority of the current botched solutions - Tomcat included - do set the Vary header. The proposed patch isn't quite right - see bug 48660 for details.\n\nI have applied a corrected patch to to 7.0.x and it will be included in 7.0.1 onwards.", "is_private": false, "bug_id": 49570, "id": 138333, "time": "2010-07-10T13:21:15Z", "creator": "markt@apache.org", "creation_time": "2010-07-10T13:21:15Z", "attachment_id": null}, {"count": 2, "tags": [], "creator": "hathanhthai@gmail.com", "text": "The patch in SVN doesn't work for me because there is no method HttpServletResponse.getHeader()\n\n\nprotected HttpServletResponse response = null;\n....\nresponse.addHeader(\"Content-Encoding\", \"gzip\");\nString vary = response.getHeader(\"Vary\");\nif (vary == null) {\n    // Add a new Vary header\n    response.setHeader(\"Vary\", \"Accept-Encoding\");\n} else if (vary.equals(\"*\")) {\n    // No action required\n} else {\n    // Merge into current header\n    response.setHeader(\"Vary\", vary + \",Accept-Encoding\");\n}", "id": 138379, "time": "2010-07-12T23:39:11Z", "bug_id": 49570, "creation_time": "2010-07-12T23:39:11Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 49570, "text": "\nA proposed patch is below:\n\nif (response.containsHeader(\"Vary\")) {\n  response.addHeader(\"Vary\", \"Accept-Encoding\");\n} else {\n  response.setHeader(\"Vary\", \"Accept-Encoding\");\n}", "id": 138449, "time": "2010-07-15T22:12:30Z", "creator": "hathanhthai@gmail.com", "creation_time": "2010-07-15T22:12:30Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "creator": "markt@apache.org", "text": "(In reply to comment #2)\n> The patch in SVN doesn't work for me because there is no method\n> HttpServletResponse.getHeader()\n\nThat is a Servlet 3.0 method and this is Tomcat 7 so that method is available.\n\nA patch similar to what you describe would be required for Tomcat 6 but the patch you propose still suffers from the issues described in bug 48660. Note I do not propose back-porting this fix to Tomcat 6.", "id": 138654, "time": "2010-07-23T08:01:54Z", "bug_id": 49570, "creation_time": "2010-07-23T08:01:54Z", "is_private": false, "attachment_id": null}]