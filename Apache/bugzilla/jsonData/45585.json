[{"count": 0, "tags": [], "bug_id": 45585, "attachment_id": null, "text": "If there is no file CATALINA_BASE/conf/logging.properties, then Tomcat will not start and the JVM outputs the following error:\n\nException in thread \"main\" java.lang.NoClassDefFoundError:\n\nwithout any additional information.\n\nQuoting from a user's mail:\n\nI believe commit 652629 (which appeared in 6.0.17) broke catalina.sh startup when JULI is not used -- that is, when $CATALINA_BASE/conf/logging.properties does not exist.  If this file is absent, LOGGING_CONFIG is not set.  However the variable appears quoted in the shell command to exec the JVM:\n\n    \"$_RUNJAVA\" $JAVA_OPTS \"$LOGGING_CONFIG\" $CATALINA_OPTS ...\n\nWhich introduces an empty argument when LOGGING_CONFIG is unset, and the JVM interprets this empty argument as the class to be invoked.\n\nThree possible fixes are:\n\n* Set LOGGING_CONFIG to a harmless flag if JULI is not used.  With my Sun JVM, a plain -D is safe.  I don't know how portable this is.  It isn't very pretty.\n\n* Maintain separate JVM invocations for the cases when LOGGING_CONFIG is set and when it's unset.  This involves more code duplication.  The code in question is already duplicated; I'm not sure whether that argues for or against this strategy.\n\n* Use a one-item shell array with an @ subscript, which is immune to word splitting when between double quotes but expands to nothing when unpopulated.  For example:\n\n    LOGGING_CONFIG[0]=\"-Djava.util.logging.config.file=$CATALINA_BASE/conf/logging.properties\"\n\nfollowed by:\n\n    \"$_RUNJAVA\" $JAVA_OPTS \"${LOGGING_CONFIG[@]}\" $CATALINA_OPTS ...\n\nThis method may be too clever.  I think POSIX requires shell arrays but being portable to true Bourne shell would require $@, which is already being used.", "id": 119531, "time": "2008-08-06T23:42:31Z", "creator": "rainer.jung@kippdata.de", "creation_time": "2008-08-06T23:42:31Z", "is_private": false}, {"count": 1, "tags": [], "creator": "rainer.jung@kippdata.de", "attachment_id": null, "is_private": false, "id": 119532, "time": "2008-08-07T00:24:02Z", "bug_id": 45585, "creation_time": "2008-08-07T00:24:02Z", "text": "> We were already thinking about your first two solutions, I missed the third one. We'll need to check how reliable that is (w.r.t. POSIX). I am a little in favor of \"-Dnop\" or something similar.\n\nYeah, a nop flag is probably more robust.  If you end up using that, you might want to swap the order of $JAVA_OPTS and \"$LOGGING_CONFIG\", so that users who need whatever property name you pick (for whatever bizarre reason) can override the null setting with JAVA_OPTS. "}, {"count": 2, "tags": [], "text": "I've committed the nop fix to trunk and proposed it for 6.0.x", "attachment_id": null, "bug_id": 45585, "id": 119618, "time": "2008-08-08T09:02:01Z", "creator": "markt@apache.org", "creation_time": "2008-08-08T09:02:01Z", "is_private": false}, {"count": 3, "tags": [], "text": "This has been applied to 6.0.x and will be included in 6.0.19 onwards.", "attachment_id": null, "bug_id": 45585, "id": 119804, "time": "2008-08-13T15:47:46Z", "creator": "markt@apache.org", "creation_time": "2008-08-13T15:47:46Z", "is_private": false}, {"count": 4, "tags": [], "text": "This has been applied to 5.5.x and will be included in 5.5.27 onwards.", "attachment_id": null, "bug_id": 45585, "id": 120150, "time": "2008-08-27T13:52:14Z", "creator": "markt@apache.org", "creation_time": "2008-08-27T13:52:14Z", "is_private": false}, {"count": 5, "tags": [], "creator": "markt@apache.org", "text": "*** Bug 45968 has been marked as a duplicate of this bug. ***", "id": 121326, "time": "2008-10-08T15:18:48Z", "bug_id": 45585, "creation_time": "2008-10-08T15:18:48Z", "is_private": false, "attachment_id": null}, {"count": 6, "tags": [], "text": "*** Bug 45983 has been marked as a duplicate of this bug. ***", "attachment_id": null, "bug_id": 45585, "id": 121390, "time": "2008-10-10T00:02:58Z", "creator": "markt@apache.org", "creation_time": "2008-10-10T00:02:58Z", "is_private": false}]