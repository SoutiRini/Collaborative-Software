[{"count": 0, "tags": [], "bug_id": 645, "attachment_id": null, "is_private": false, "id": 772, "time": "2001-02-19T14:57:24Z", "creator": "patrick.stdennis@med.ge.com", "creation_time": "2001-02-19T14:57:24Z", "text": "I get a SAX exception when generating a junit report.  I've tried against a \nTestCase and a TestSuite, Frames and NoFrames settings.  I've included the \nstack trace.  I'm using JDK 1.2.2/Junit 3.4/ant 1.3beta2/NT4.0SP6.  My \nbuild.xml file is not too complicated:\n\n<project name=\"MyProject\" default=\"dist\" basedir=\".\">\n\n  <!-- set global properties for this build -->\n  <property name=\"src\" value=\".\" />\n  <property name=\"build\" value=\"build\" />\n  <property name=\"dist\"  value=\"dist\" />\n\n  <target name=\"prepare\">\n    <!-- Create the time stamp -->\n    <tstamp/>\n    <!-- Create the build directory structure used by compile -->\n    <mkdir dir=\"${build}\" />\n  </target>\n\n  <target name=\"compile\" depends=\"prepare\">\n    <!-- Compile the java code from ${src} into ${build} -->\n    <property name=\"build.compiler\" value=\"jikes\"/>\n    <javac srcdir=\"${src}\" destdir=\"${build}\" />\n  </target>\n\n  <target name=\"unittest\" depends=\"compile\">\n    <junit printsummary=\"yes\" haltonfailure=\"no\">\n      <test name=\"PatrickTest\" haltonfailure=\"no\" outfile=\"result\" >\n        <formatter type=\"xml\" />\n      </test>\n    </junit>\n    <mkdir dir=\"reports\"/>    \n    <junitreport todir=\"./reports\">\n      <fileset dir=\"./reports\">\n        <include name=\"result.xml\"/>\n      </fileset>\n      <report format=\"noframes\" todir=\"./report/html\"/>\n    </junitreport>\n  </target>\n  \n\n  \n  <target name=\"dist\" depends=\"unittest\">\n    <!-- Create the ${dist}/lib directory -->\n    <mkdir dir=\"${dist}/lib\" />\n\n    <!-- Put everything in ${build} into the MyProject-${DSTAMP}.jar file -->\n    <jar jarfile=\"${dist}/lib/MyProject-${DSTAMP}.jar\" basedir=\"${build}\" />\n  </target>\n\n  <target name=\"clean\">\n    <!-- Delete the ${build} and ${dist} directory trees -->\n    <delete dir=\"${build}\" />\n    <delete dir=\"${dist}\" />\n  </target>\n</project>\n\nHere's the stack trace\n\nXSL Error: Cannot use a DTMLiaison for a input DOM node... pass a \norg.apache.xalan.xpath.xdom.Xerces\nLiaison instead!\nXSL Error: SAX Exception\norg.apache.xalan.xslt.XSLProcessorException:\n        at org.apache.xalan.xslt.XSLTEngineImpl.error(XSLTEngineImpl.java:1676)\n        at org.apache.xalan.xslt.XSLTEngineImpl.error(XSLTEngineImpl.java:1568)\n        at org.apache.xalan.xslt.XSLTEngineImpl.getSourceTreeFromInput\n(XSLTEngineImpl.java:826)\n        at org.apache.xalan.xslt.XSLTEngineImpl.process(Compiled Code)\n        at \norg.apache.tools.ant.taskdefs.optional.junit.AggregateTransformer.transform\n(AggregateTran\nsformer.java:454)\n        at \norg.apache.tools.ant.taskdefs.optional.junit.AggregateTransformer.createSinglePa\ngeSummary\n(AggregateTransformer.java:266)\n        at \norg.apache.tools.ant.taskdefs.optional.junit.AggregateTransformer.transform\n(AggregateTran\nsformer.java:229)\n        at \norg.apache.tools.ant.taskdefs.optional.junit.XMLResultAggregator.execute\n(Compiled Code)\n        at org.apache.tools.ant.Target.execute(Compiled Code)\n        at org.apache.tools.ant.Project.runTarget(Project.java:898)\n        at org.apache.tools.ant.Project.executeTarget(Compiled Code)\n        at org.apache.tools.ant.Project.executeTargets(Compiled Code)\n        at org.apache.tools.ant.Main.runBuild(Compiled Code)\n        at org.apache.tools.ant.Main.main(Main.java:149)"}, {"attachment_id": null, "tags": [], "creator": "sbailliez@imediation.com", "is_private": false, "count": 1, "id": 775, "time": "2001-02-19T18:53:31Z", "bug_id": 645, "creation_time": "2001-02-19T18:53:31Z", "text": "I'm not sure what could cause this. Could you please give more info about \nversion of xalan/xerces used ?\n\nI'd be glad to know if you are able to reproduce it with xalan 1.2.2\nhttp://xml.apache.org/dist/xalan-j/old/xalan-j_1_2_2.zip\n\nAbout your target unittest, I don't know if these are typos or not, but you are \ngenerating result.xml in the current dir, then you create the reports \ndirectory, then you include the result.xml in reports, but it is not located \nhere so you won't find it and after that you are generating the html into \nreport instead of reports.\n\nThanks\n"}, {"count": 2, "tags": [], "bug_id": 645, "attachment_id": null, "id": 870, "time": "2001-02-26T16:29:28Z", "creator": "patrick.stdennis@med.ge.com", "creation_time": "2001-02-26T16:29:28Z", "is_private": false, "text": "Thanks for the reply.  I replaced my xalan/xerces with the ones from your URL \nand still got the same error.  I cleaned up the build.xml file as well.  It now \nlooks like this:\n\n<project name=\"MyProject\" default=\"dist\" basedir=\".\">\n\n  <!-- set global properties for this build -->\n  <property name=\"src\" value=\".\" />\n  <property name=\"build\" value=\"build\" />\n  <property name=\"dist\"  value=\"dist\" />\n  <property name=\"reports\" value=\"reports\" />\n\n  <target name=\"prepare\">\n    <!-- Create the time stamp -->\n    <tstamp/>\n    <!-- Create the build directory structure used by compile -->\n    <mkdir dir=\"${build}\" />\n    <mkdir dir=\"${reports}\"/> \n  </target>\n\n  <target name=\"compile\" depends=\"prepare\">\n    <!-- Compile the java code from ${src} into ${build} -->\n    <!-- <property name=\"build.compiler\" value=\"jikes\"/> -->\n    <javac srcdir=\"${src}\" destdir=\"${build}\" />\n  </target>\n\n  <target name=\"unittest\" depends=\"compile\">\n    <junit printsummary=\"yes\" haltonfailure=\"no\">\n      <test name=\"PatrickTest\" haltonfailure=\"no\" outfile=\"result\" todir=\"./\n${reports}\">\n        <formatter type=\"xml\" />\n      </test>\n    </junit>   \n    <junitreport todir=\"./${reports}\">\n      <fileset dir=\"./${reports}\">\n        <include name=\"result.xml\"/>\n      </fileset>\n      <report format=\"noframes\" todir=\"./${reports}/html\"/>\n    </junitreport>\n  </target>\n  \n  <target name=\"dist\" depends=\"unittest\">\n    <!-- Create the ${dist}/lib directory -->\n    <mkdir dir=\"${dist}/lib\" />\n    <!-- Put everything in ${build} into the MyProject-${DSTAMP}.jar file -->\n    <jar jarfile=\"${dist}/lib/MyProject-${DSTAMP}.jar\" basedir=\"${build}\" />\n  </target>\n</project>\n\n\nThanks again\nPatrick"}, {"count": 3, "tags": [], "text": "I replaced the xalan that Ant was using with the 1.2.2 version and that worked \nnow.  Before I wasn't sure which xalan was getting picked up by Ant.  I thought \nit would be the one from my normal classpath.\n\nthanks\nPatrick", "is_private": false, "id": 1041, "creation_time": "2001-03-07T12:39:47Z", "time": "2001-03-07T12:39:47Z", "creator": "patrick.stdennis@med.ge.com", "bug_id": 645, "attachment_id": null}]