[{"count": 0, "text": "I ran into a situation where Tomcat will not execute appropriate filters on a request that has been forwarded.\n\nI'm using the handy URLRewriteFilter implementation (from tuckey.org).  When I forwarded a request internally, filters that had a matching url-pattern (in the web.xml file) and with a dispatcher setting of both REQUEST and FORWARD were not invoked.\n\nOn tracing the code (hours later), I found that the problem lies inside the ApplicationDispatcher code.  It set the DISPATCHER_REQUEST_PATH_ATTR state attribue to be the servletPath.  That meant that only matches using the servlet path would match, but longer (more exact) urls would fail to match.\n\nFor example, using the following filter mapping:\n\n<filter-mapping>\n   <filter-name>my-filter</filter-name>\t\t   \n   <url-pattern>/app/level/mycode.do</url-pattern>\n   <dispatcher>REQUEST</dispatcher> \n   <dispatcher>FORWARD</dispatcher>\n</filter-mapping>\n\nwould not match a request that was forwarded to /app/level/mycode.do, which it should! \n\nChanging the url pattern to be \"/app/*\" would match, but \"/app/level/*\" would not, since the servletPath was /app in this example.\n\nThe fix for this is quite simple.  In the ApplicationDispatcher.java code, in the method processRequest() (which is only called for forwards), change the following statement:\n\nstate.outerRequest.setAttribute\n   (ApplicationFilterFactory.DISPATCHER_REQUEST_PATH_ATTR,\n   servletPath);\n\nto use requestURI instead as follows:\n\nstate.outerRequest.setAttribute\n   (ApplicationFilterFactory.DISPATCHER_REQUEST_PATH_ATTR,\n   requestURI );\n\nThis resolves the problem and let all the examples above correctly match and run the filter on a forward.\n\nI believe includes will also be broken in the same manner. Similar changes to the doInclude() method in ApplicationDispatcher.java will likely resolve that issue as well, though I have not tested this personally.\n\nBe nice to see this resolved in 6.0.17+.\n\nThanks!\n\n....Andrzej", "bug_id": 45441, "attachment_id": null, "id": 118845, "time": "2008-07-20T10:54:40Z", "creator": "andrzej@chaeron.com", "creation_time": "2008-07-20T10:54:40Z", "tags": [], "is_private": false}, {"count": 1, "tags": [], "text": "This is still a bug in .0.1.  Same fix/patch as before.\n\nSure would be nice if someone implemented this in the trunk code base.", "is_private": false, "id": 120049, "creator": "andrzej@chaeron.com", "time": "2008-08-23T13:46:04Z", "bug_id": 45441, "creation_time": "2008-08-23T13:46:04Z", "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 45441, "attachment_id": null, "id": 120050, "time": "2008-08-23T13:47:17Z", "creator": "andrzej@chaeron.com", "creation_time": "2008-08-23T13:47:17Z", "is_private": false, "text": "Ooops.  That should have said 6.0.18..."}, {"count": 3, "tags": [], "text": "Note that the proposed patch will not work for contexts other than the ROOT context since, as per SRV.3.4:\nrequestURI = contextPath + servletPath + pathInfo\n\nThe correct fix is to append pathInfo to servletPath.\n\nThis has been fixed in trunk and proposed for 6.0.x.", "attachment_id": null, "id": 120704, "creator": "markt@apache.org", "time": "2008-09-17T04:15:35Z", "bug_id": 45441, "creation_time": "2008-09-17T04:15:35Z", "is_private": false}, {"count": 4, "tags": [], "text": "This has been applied to 6.0.x and will be in 6.0.19 onwards.", "attachment_id": null, "id": 121901, "creator": "markt@apache.org", "time": "2008-10-27T06:30:01Z", "bug_id": 45441, "creation_time": "2008-10-27T06:30:01Z", "is_private": false}]