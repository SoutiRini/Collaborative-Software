[{"count": 0, "tags": [], "creator": "dan_tropp@yahoo.com.au", "attachment_id": null, "id": 29224, "time": "2003-01-13T04:50:53Z", "bug_id": 16010, "creation_time": "2003-01-13T04:50:53Z", "is_private": false, "text": "On line 143 the script tries to include classes.zip into the java classpath:\n  if [ -f \"$JAVA_HOME/lib/classes.zip\" ] ; then\n    LOCALCLASSPATH=\"$LOCALCLASSPATH:$JAVA_HOME/lib/classes.zip\"\n\nBut for IBM's 1.4 SDK there is no such file. Perhaps this is also the case with \nSun's 1.4?\n\nInstead there are a selection of jar files in jre/lib, including core.jar\n\nI have modofied my script as follows, but perhaps there is a better more \ngeneral change that can be distributed with the script in future.\n\n  if [ -f \"$JAVA_HOME/lib/classes.zip\" ] ; then\n    LOCALCLASSPATH=\"$LOCALCLASSPATH:$JAVA_HOME/lib/classes.zip\"\n  else # JDK1.4 has a number of jars instead of classes.zip\n    for i in \"${JAVA_HOME}\"/jre/lib/*.jar\n    do\n      # if the directory is empty, then it will return the input string\n      # this is stupid, so case for it\n      if [ -f \"$i\" ] ; then\n        LOCALCLASSPATH=\"$i\":\"$LOCALCLASSPATH\"\n      fi\n    done\n  fi"}, {"count": 1, "tags": [], "creator": "conor@apache.org", "text": "What is the problemn you are having that this would fix?\n\nThe classes.zip reference is in there for JDK 1.1 and because VMs from that\nvintage, if given a classpath not containing the classes.zip file, would not be\nable to find critical classes such as java.lang.Thread\n\nWith more modern VMs, it is not necessary to add the jars in jre/lib, the VM\ntakes care of this and adding to the classpath is probably a bad idea.", "id": 29225, "time": "2003-01-13T05:05:55Z", "bug_id": 16010, "creation_time": "2003-01-13T05:05:55Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "creator": "dan_tropp@yahoo.com.au", "is_private": false, "id": 29226, "attachment_id": null, "bug_id": 16010, "creation_time": "2003-01-13T05:59:54Z", "time": "2003-01-13T05:59:54Z", "text": "> What is the problemn you are having that this would fix?\n\nJikes failed to find any of the classes in the basic java library (java.lang, \njava.util, etc). With my changes in compilation works (using jikes). With my \nchanges out, compilation works with the default compiler but using jikes gives \nthis output:\n\n[dan@tapeworm ant_live]$ ant -f testall.xml -Dbuild.compiler=jikes -\nDcvs.tag=MIS_LIVE_STABLE compile\nBuildfile: testall.xml\n\ninit:\n     [echo] javaclasspath=/usr/local/ant/lib/xml-\napis.jar:/usr/local/ant/lib/xercesImpl.jar:/usr/local/ant/lib/optional.jar:/usr/\nlocal/ant/lib/junit.jar:/usr/local/ant/lib/cruisecontrol.jar:/usr/local/ant/lib/\nant.jar:/usr/local/java/lib/tools.jar\n\ncompile:\n     [echo] ant java version:1.4\n     [echo] java home:/usr/local/java/bin/../jre\n    [javac] Compiling 2 source files to /home/dan/ant_live/build\n\n    [javac] Found 2 system errors:\n\n    [javac] *** Error: Could not find package \"java/util\" in:\n    [javac]                 /usr/local/java/jre/lib/ext/gskikm.jar\n    [javac]                 /usr/local/java/jre/lib/ext/ibmjceprovider.jar\n    [javac]                 /usr/local/java/jre/lib/ext/indicim.jar\n    [javac]                 /usr/local/java/jre/lib/ext/jaccess.jar\n    [javac]                 /usr/local/java/jre/lib/ext/ldapsec.jar\n    [javac]                 /usr/local/java/jre/lib/ext/oldcertpath.jar\n    [javac]                 /home/dan/ant_live/build\n    [javac]                 /usr/local/ant/lib/xml-apis.jar\n    [javac]                 /usr/local/ant/lib/xercesImpl.jar\n    [javac]                 /usr/local/ant/lib/optional.jar\n    [javac]                 /usr/local/ant/lib/junit.jar\n    [javac]                 /usr/local/ant/lib/cruisecontrol.jar\n    [javac]                 /usr/local/ant/lib/ant.jar\n    [javac]                 /usr/local/java/lib/tools.jar\n\n    [javac] *** Error: Could not find package \"java/lang\" in:\n    [javac]                 /usr/local/java/jre/lib/ext/gskikm.jar\n    [javac]                 /usr/local/java/jre/lib/ext/ibmjceprovider.jar\n    [javac]                 /usr/local/java/jre/lib/ext/indicim.jar\n    [javac]                 /usr/local/java/jre/lib/ext/jaccess.jar\n    [javac]                 /usr/local/java/jre/lib/ext/ldapsec.jar\n    [javac]                 /usr/local/java/jre/lib/ext/oldcertpath.jar\n    [javac]                 /home/dan/ant_live/build\n    [javac]                 /usr/local/ant/lib/xml-apis.jar\n    [javac]                 /usr/local/ant/lib/xercesImpl.jar\n    [javac]                 /usr/local/ant/lib/optional.jar\n    [javac]                 /usr/local/ant/lib/junit.jar\n    [javac]                 /usr/local/ant/lib/cruisecontrol.jar\n    [javac]                 /usr/local/ant/lib/ant.jar\n    [javac]                 /usr/local/java/lib/tools.jar\n\nBUILD FAILED\nfile:/home/dan/ant_live/testall.xml:110: Compile failed; see the compiler error \noutput for details.\n\nTotal time: 8 seconds\n\n\nPerhaps you are right, though, and the jars should only be included in the \njikes classpath rather than the general ant classpath.\n"}, {"count": 3, "tags": [], "text": "I think this is an issue with Jikes mostly. You may want to investigate the\nJIKESPATH environment variable and what it does. I don't use Jikes but maybe\nthat will help you.\n\n(did you add me as CC? - there's no need to do that - I get a copy of all bugs\nalready :-) )", "is_private": false, "bug_id": 16010, "id": 29229, "time": "2003-01-13T09:28:43Z", "creator": "conor@apache.org", "creation_time": "2003-01-13T09:28:43Z", "attachment_id": null}]