[{"count": 0, "tags": [], "bug_id": 61275, "attachment_id": 35110, "is_private": false, "id": 199693, "time": "2017-07-10T18:05:36Z", "creator": "cbuxbaum@bamboorose.com", "creation_time": "2017-07-10T18:05:36Z", "text": "Created attachment 35110\ncorrupt xlsx file generated with Websphere IBM JVM 1.8\n\nHi, if I generate an xlsx file using a war deployed on Tomcat, I do not get an error.  When I generate the same xlsx file using a war deployed on WebSphere I get the above error.  I am attributing the difference to a difference in implementation of the zip functionality between Oracle JVM and IBM JVM (so perhaps this bug should go to IBM).\n\nIf I try to open the corrupt version, it gives me the message, and I can choose to fix it, whereupon it opens.  However, the excel log does not give me information about what was fixed.\n\nThere are slight differences between a couple of files in the resulting diffs.  \nHere are the differences in the output of zipinfo:\n\nGood xlsx:\n\ngloucester-pc:Downloads cbuxbaum$ zipinfo Results\\ \\(13\\).xlsx \nArchive:  Results (13).xlsx   6704 bytes   11 files\n-rw----     2.0 fat      598 bl defN 10-Jul-17 13:43 _rels/.rels\n-rw----     2.0 fat     1197 bl defN 10-Jul-17 13:43 [Content_Types].xml\n-rw----     2.0 fat      184 bl defN 10-Jul-17 13:43 docProps/app.xml\n-rw----     2.0 fat      443 bl defN 10-Jul-17 13:43 docProps/core.xml\n-rw----     2.0 fat      131 bl defN 10-Jul-17 13:43 xl/drawings/drawing1.xml\n-rw----     2.0 fat      138 bl defN 10-Jul-17 13:43 xl/sharedStrings.xml\n-rw----     2.0 fat     3601 bl defN 10-Jul-17 13:43 xl/styles.xml\n-rw----     2.0 fat      350 bl defN 10-Jul-17 13:43 xl/workbook.xml\n-rw----     2.0 fat      576 bl defN 10-Jul-17 13:43 xl/_rels/workbook.xml.rels\n-rw----     2.0 fat    22610 bl defN 10-Jul-17 13:43 xl/worksheets/sheet1.xml\n-rw----     2.0 fat      305 bl defN 10-Jul-17 13:43 xl/worksheets/_rels/sheet1.xml.rels\n11 files, 30133 bytes uncompressed, 5230 bytes compressed:  82.6%\n\nBad xlsx:\n\ngloucester-pc:Downloads cbuxbaum$ zipinfo Results\\ \\(15\\).xlsx \nArchive:  Results (15).xlsx   6745 bytes   11 files\n-rw----     2.0 fat      596 bl defN 10-Jul-17 13:52 _rels/.rels\n-rw----     2.0 fat     1195 bl defN 10-Jul-17 13:52 [Content_Types].xml\n-rw----     2.0 fat      184 bl defN 10-Jul-17 13:52 docProps/app.xml\n-rw----     2.0 fat      441 bl defN 10-Jul-17 13:52 docProps/core.xml\n-rw----     2.0 fat      131 bl defN 10-Jul-17 13:52 xl/drawings/drawing1.xml\n-rw----     2.0 fat      138 bl defN 10-Jul-17 13:52 xl/sharedStrings.xml\n-rw----     2.0 fat     3601 bl defN 10-Jul-17 13:52 xl/styles.xml\n-rw----     2.0 fat      350 bl defN 10-Jul-17 13:52 xl/workbook.xml\n-rw----     2.0 fat      574 bl defN 10-Jul-17 13:52 xl/_rels/workbook.xml.rels\n-rw----     2.0 fat    22610 bl defN 10-Jul-17 13:52 xl/worksheets/sheet1.xml\n-rw----     2.0 fat      303 bl defN 10-Jul-17 13:52 xl/worksheets/_rels/sheet1.xml.rels\n\ntail of od command on _rels/.rels:\n\ngood version:\n\n0001100    037057  005015  027474  062522  060554  064564  067157  064163\n0001120    070151  037163  005015                                        \n0001126\n\nbad version:\n\n0001100    037057  005015  027474  062522  060554  064564  067157  064163\n0001120    070151  037163                                                \n0001124\n\nI am attaching the following:\n\nOur Excel struts action\nThe Excel Helper class that builds the excel\n\nThe bad(corrupt) xlsx\nThe good xlsx\n\nThanks!\n\nCarl Buxbaum"}, {"count": 1, "tags": [], "creator": "cbuxbaum@bamboorose.com", "attachment_id": 35111, "id": 199694, "creation_time": "2017-07-10T18:06:57Z", "time": "2017-07-10T18:06:57Z", "bug_id": 61275, "text": "Created attachment 35111\nworking xlsx file, generated with Tomcat Oracle JVM 1.8", "is_private": false}, {"count": 2, "attachment_id": 35112, "creator": "cbuxbaum@bamboorose.com", "is_private": false, "id": 199695, "time": "2017-07-10T18:09:06Z", "bug_id": 61275, "creation_time": "2017-07-10T18:09:06Z", "tags": [], "text": "Created attachment 35112\nstruts action for building excel"}, {"count": 3, "text": "Created attachment 35113\nHelper class for building xlsx", "bug_id": 61275, "is_private": false, "id": 199696, "time": "2017-07-10T18:09:47Z", "creator": "cbuxbaum@bamboorose.com", "creation_time": "2017-07-10T18:09:47Z", "tags": [], "attachment_id": 35113}, {"attachment_id": null, "tags": [], "bug_id": 61275, "is_private": false, "count": 4, "id": 199697, "time": "2017-07-10T18:16:25Z", "creator": "apache@gagravarr.org", "creation_time": "2017-07-10T18:16:25Z", "text": "Assuming you have an active IBM support contract for your troublesome websphere install, I'd suggest punting it over to them. They'll have everything setup to reproduce it, which I'm not sure any of us do here, and they'll be much more experienced at debugging websphere + ibm jvm issues!"}, {"count": 5, "tags": [], "bug_id": 61275, "attachment_id": null, "is_private": false, "id": 199698, "time": "2017-07-10T18:45:32Z", "creator": "cbuxbaum@bamboorose.com", "creation_time": "2017-07-10T18:45:32Z", "text": "Hi Nick,\n\nThis issue originated from a customer of ours, so I would say that it's not\na particular WebSphere install that is the problem.  I would reckon that\nany xlsx built by poi using the IBM JVM will exhibit the same problem, so\nif there is something that poi can do to help create a compatible zip,\nthen it may be useful for someone in the poi project to take a look.\n\n\nThanks,\n\nCarl"}, {"count": 6, "tags": [], "text": "(In reply to Nick Burch from comment #4)\n> I'm not sure any of us [have Websphere IBM Java set up to reproduce this], and\n> they'll be much more experienced at debugging websphere + ibm jvm issues!\n\nHere's are automated builds, for which we do not have an enabled job that runs on an IBM JDK, let alone on Webpphere.\nhttps://builds.apache.org/view/P/view/POI/\n\nIt's difficult to fix something without being able to reproduce or test it.", "attachment_id": null, "id": 199699, "creator": "onealj@apache.org", "time": "2017-07-10T19:16:38Z", "bug_id": 61275, "creation_time": "2017-07-10T19:16:38Z", "is_private": false}, {"count": 7, "tags": [], "text": "Would you mind trying it with the trunk version?\n... I've deactivated indenting after the beta came out - if it's a newline problem, this might be solved by that.\n\nFurthermore I'm not sure if that comment is relevant or true, but regarding [1]:\n\"NOTE: If you are using a unix system, be aware of linebreaks, the OPC uses CRLF not LF.\"\n\n\n[1] https://stackoverflow.com/questions/36063375", "is_private": false, "id": 199700, "creator": "kiwiwings@apache.org", "time": "2017-07-10T19:46:47Z", "bug_id": 61275, "creation_time": "2017-07-10T19:46:47Z", "attachment_id": null}, {"count": 8, "tags": [], "text": "Hi, I put Windows as hardware because the issue occurs when the document is generated and served by a WebSphere instance running under IBM JVM 1.8, not when served by my local, which happens to be a mac.", "is_private": false, "id": 199701, "creator": "cbuxbaum@bamboorose.com", "time": "2017-07-10T20:11:42Z", "bug_id": 61275, "creation_time": "2017-07-10T20:11:42Z", "attachment_id": null}, {"count": 9, "tags": [], "creator": "bodewig@apache.org", "is_private": false, "text": "Created attachment 35114\ncontent diff\n\nThe only content differences are missing new lines at the end of a couple of XML files, this shouldn't throw off an XML parser but if the format is sensitive to line-ends, this may well become a problem.", "id": 199704, "time": "2017-07-11T06:16:18Z", "bug_id": 61275, "creation_time": "2017-07-11T06:16:18Z", "attachment_id": 35114}, {"count": 10, "tags": [], "text": "(In reply to Stefan Bodewig from comment #9)\n> The only content differences are missing new lines at the end of a couple of\n> XML files, this shouldn't throw off an XML parser but if the format is\n> sensitive to line-ends, this may well become a problem.\n\nThere's an info missing, which was in Carls email thread - so the xml is probably not the culprit:\n\n> If I create a \"corrupt\" excel, unzip it, and then zip it back up (on my\n> mac using zip command), the resulting zip file opens without issue.\n> If a colleague on Windows generates the same excel, and does the same\n> probably using windup, the corruption remains.", "is_private": false, "id": 199717, "creator": "kiwiwings@apache.org", "time": "2017-07-11T11:26:42Z", "bug_id": 61275, "creation_time": "2017-07-11T11:26:42Z", "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 61275, "is_private": false, "count": 11, "id": 199720, "time": "2017-07-11T12:06:48Z", "creator": "jmarkmurphy@apache.org", "creation_time": "2017-07-11T12:06:48Z", "text": "I use the IBM JVM v1.6.26 on IBM i, no Websphere. It has no issues with POI 3.14. I can create valid XLSX documents.\n\n(In reply to Carl Buxbaum from comment #5)\n> Hi Nick,\n> \n> This issue originated from a customer of ours, so I would say that it's not\n> a particular WebSphere install that is the problem.  I would reckon that\n> any xlsx built by poi using the IBM JVM will exhibit the same problem, so\n> if there is something that poi can do to help create a compatible zip,\n> then it may be useful for someone in the poi project to take a look.\n> \n> \n> Thanks,\n> \n> Carl"}, {"count": 12, "tags": [], "bug_id": 61275, "attachment_id": null, "id": 199722, "time": "2017-07-11T14:27:53Z", "creator": "bodewig@apache.org", "creation_time": "2017-07-11T14:27:53Z", "is_private": false, "text": "I started looking through the archives in a hex-editor and the first local file headers looked fine, so I skipped to the end.\n\nWhile Results_good.xlsx ends with the \"end of central directory\" record one would expect, the Results_bad.xlsx contains some garbage after it, namely\n\nError 500: java.lang.IllegalStateException\\r\\n\n\nso it seems some log output has made it into the stream.\n\nUsually ZIP archivers will read an archive from the back looking for the EOCD record (or its ZIP64 cousin) and ignore garbage at the end. It is not uncommon to find code for self-extracting archives there. This is why zip and friends won't complain about the archive, Excel seems to be more picky."}, {"count": 13, "tags": [], "bug_id": 61275, "attachment_id": null, "id": 199723, "time": "2017-07-11T14:35:20Z", "creator": "bodewig@apache.org", "creation_time": "2017-07-11T14:35:20Z", "is_private": false, "text": "Just to make sure it really is the garbage at the end you could perform\n\nhead --bytes=-44 < Results_bad.xlsx > Results.xlsx\n\nand try to feed Results.xlsx to Excel. I've only got Libre Office installed which accepts the \"corrupt\" sheet without any warning, so I cannot check myself."}, {"count": 14, "tags": [], "bug_id": 61275, "attachment_id": 35121, "id": 199724, "time": "2017-07-11T14:42:18Z", "creator": "bodewig@apache.org", "creation_time": "2017-07-11T14:42:18Z", "is_private": false, "text": "Created attachment 35121\npotentially \"repaired\" Results_bad.xlsx\n\nI realized my command may have been GNU head specific, so uploaded the result directly."}, {"count": 15, "tags": [], "bug_id": 61275, "attachment_id": null, "is_private": false, "id": 199727, "time": "2017-07-11T16:17:51Z", "creator": "cbuxbaum@bamboorose.com", "creation_time": "2017-07-11T16:17:51Z", "text": "(In reply to Stefan Bodewig from comment #14)\n> Created attachment 35121 [details]\n> potentially \"repaired\" Results_bad.xlsx\n> \n> I realized my command may have been GNU head specific, so uploaded the\n> result directly.\n\nThank you so much!  I don't know why I did not look directly at the excel file in an editor.\n\nI did edit out the IllegalArgumentException and it still appears corrupt, but I am mystified as to how that Exception would get in their n the first place.  I do not see anything being thrown in the logs.\n\nThanks,\n\nCarl"}, {"count": 16, "tags": [], "bug_id": 61275, "attachment_id": null, "id": 201192, "time": "2017-09-28T12:59:27Z", "creator": "dominik.stadler@gmx.at", "creation_time": "2017-09-28T12:59:27Z", "is_private": false, "text": "The latest \"repaired Results_bad.xlsx\" opens for me in Excel without any corruption warning, so I don't see what we can do here from our end. \n\nIf you still think there is a problem in POI please try to provide a more self-sufficient and minimal unit test which produces the corrupt file. The current code is intertwined with Apache Struts code and other things that are not related to the problem at all."}, {"count": 17, "tags": [], "bug_id": 61275, "attachment_id": null, "is_private": false, "id": 201205, "time": "2017-09-28T15:45:33Z", "creator": "cbuxbaum@bamboorose.com", "creation_time": "2017-09-28T15:45:33Z", "text": "(In reply to Dominik Stadler from comment #16)\n> The latest \"repaired Results_bad.xlsx\" opens for me in Excel without any\n> corruption warning, so I don't see what we can do here from our end. \n> \n> If you still think there is a problem in POI please try to provide a more\n> self-sufficient and minimal unit test which produces the corrupt file. The\n> current code is intertwined with Apache Struts code and other things that\n> are not related to the problem at all.\n\nHi Dominik et. al.,\n\nI did finally discover what was causing this.  Essentially doing a redirect instead of a forward fixes it in our struts application:\n\nThe jsp uses JSPWriter to create the jsp page, and the struts action uses the OutputStream from the response to stream the excel. It is not permissible for both to be used in the same request, and the error generated results in a message being appended to the OutputStream( and therefore to the excel spreadsheet, corrupting it). Therefore, the fix is to do a redirect to the struts action, which creates a new request that only handles the response OutputStream, instead of forwarding to the struts action, which handles the streaming of the excel in the same request as the jsp. I don't know why this only manifests in WebSphere, and Tomcat seems to not have this issue."}]