[{"count": 0, "tags": [], "bug_id": 59311, "attachment_id": null, "id": 190190, "creation_time": "2016-04-12T14:49:40Z", "time": "2016-04-12T14:49:40Z", "creator": "apache-bugzilla@michael-kaufmann.ch", "text": "Apache httpd sends these response headers to HTTP/1.1 clients if the HTTP/2 protocol is enabled:\n\nUpgrade: h2\nConnection: Upgrade\n\nThese headers should NOT be sent when SSL is used, because support for HTTP/2 is advertised using ALPN. If the client does not advertise that it supports HTTP/2 with ALPN, then Apache httpd knows that the client does not support HTTP/2, so it should not send these headers.\n\nThis is a compatibility issue: Some clients behave strangely when they receive these headers, e.g. old versions of NodeJS ( https://github.com/nodejs/node/issues/4334 )\n\nI have tested some popular sites, and none of them sends these headers to HTTP/1.1 clients:\n- https://www.nghttp2.org/ (nghttpx nghttp2/1.10.0-DEV)\n- https://www.google.ch/ (gws)\n- https://twitter.com/ (tsa_b)\n- https://www.nginx.com/ (nginx)\n- https://h2o.examp1e.net/ (h2o/2.0.0-beta2)\n- https://www.facebook.com\n\nNote: This has previously been reported here: https://github.com/icing/mod_h2/issues/73", "is_private": false}, {"count": 1, "attachment_id": 33755, "creator": "apache-bugzilla@michael-kaufmann.ch", "is_private": false, "id": 190205, "time": "2016-04-13T08:56:32Z", "bug_id": 59311, "creation_time": "2016-04-13T08:56:32Z", "tags": [], "text": "Created attachment 33755\nProposed patch: Do not send \"Upgrade: h2\""}, {"count": 2, "tags": [], "creator": "apache-bugzilla@michael-kaufmann.ch", "is_private": false, "id": 190279, "attachment_id": null, "bug_id": 59311, "creation_time": "2016-04-14T20:44:27Z", "time": "2016-04-14T20:44:27Z", "text": "From RFC 7540 (HTTP/2), section 3.2:\n\n> A server MUST ignore an \"h2\" token in an Upgrade header field. Presence of a token with \"h2\" implies HTTP/2 over TLS, which is instead negotiated as described in Section 3.3.\n\n\nThis means that clients must not upgrade from HTTP/1.1 to HTTP/2 when using TLS. It makes no sense that Apache sends an \"Upgrade: h2\" response header."}, {"text": "This has been fixed in trunk in r1740075. Proposal for backport to 2.4.x: r1740079", "tags": [], "bug_id": 59311, "is_private": false, "count": 3, "id": 190404, "time": "2016-04-20T10:49:47Z", "creator": "apache-bugzilla@michael-kaufmann.ch", "creation_time": "2016-04-20T10:49:47Z", "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 59311, "attachment_id": null, "is_private": false, "id": 191682, "time": "2016-06-15T14:52:05Z", "creator": "stefan@eissing.org", "creation_time": "2016-06-15T14:52:05Z", "text": "Thinking about this again, I tested a simple solution using mod_headers. Just add the following to your host config:\n\n  Header unset Upgrade\n\nThis will suppress any 'Upgrade' header in responses from the given host (or all hosts if placed in the base server). Further conditional application is possible using expressions. See mod_headers documentation for details.\n\nPlease let me know if this works for you."}, {"count": 5, "tags": [], "creator": "apache-bugzilla@michael-kaufmann.ch", "text": "I don't need a workaround, I can compile Apache from the sources and apply r1740075 + r1740119 ;-)\n\nI think a good solution would be that the setting \"H2Upgrade on/off\" also controls whether the \"Upgrade: h2\" or \"Upgrade: h2c\" is sent to the client (depending on the type of the virtual host). I think wrowe would agree on this (see http://mail-archives.apache.org/mod_mbox/httpd-dev/201606.mbox/%3CCACsi251E_DoG-xoHL-Y5bKFWwNouDGZYbadyemB2TCfFbNUH6g%40mail.gmail.com%3E )\n\nIf you disagree, then please go ahead and close this bug as \"won't fix\".", "id": 191683, "time": "2016-06-15T15:15:37Z", "bug_id": 59311, "creation_time": "2016-06-15T15:15:37Z", "is_private": false, "attachment_id": null}, {"count": 6, "tags": [], "creator": "stefan@eissing.org", "is_private": false, "id": 191710, "attachment_id": null, "bug_id": 59311, "creation_time": "2016-06-16T08:12:22Z", "time": "2016-06-16T08:12:22Z", "text": "It's not really HTTP/2 specific, although that is where you currently observer it. So, a better directive would be placed in core, such as\n\n  ProtocolsHttpUpgradeAnnounce on|off\n\nto suppress a response header and\n\n  ProtocolsHttpUpgrade on|off\n\nto disable the whole mechanism (including announce)."}, {"count": 7, "tags": [], "creator": "greenreaper@hotmail.com", "attachment_id": null, "id": 194462, "time": "2016-10-16T23:28:46Z", "bug_id": 59311, "creation_time": "2016-10-16T23:28:46Z", "is_private": false, "text": "One other thing this breaks: nginx cached responses. This caused us to rollback our Apache HTTP/2 upgrade because iOS Safari clients were unable to load files from our nginx caches which had been served from our Apache origin.\n\nWe worked around this at the time with proxy_hide_header Upgrade;\nThe Headers fix is better because it then doesn't even save to the cache."}, {"count": 8, "tags": [], "text": "Unfortunately, the commit mentioned in comment 3 has been reverted in r1748591, so this bug is still present :-(\n\nSee this thread: http://mail-archives.apache.org/mod_mbox/httpd-dev/201606.mbox/%3CB388B626-2EC2-4F67-B418-98F8DF8D3968%40greenbytes.de%3E", "attachment_id": null, "id": 195131, "creation_time": "2016-11-21T21:55:24Z", "time": "2016-11-21T21:55:24Z", "creator": "apache-bugzilla@michael-kaufmann.ch", "bug_id": 59311, "is_private": false}, {"count": 9, "tags": [], "text": "Michael, it is nice that you reference my mail. It would be even more helpful if you could answer the question I asked you:\n\nAs per dev discussion on the list, we'd like to fix this (by default without further config) for the UAs that have problems with it. I asked you for the UA strings (or pattern) where the fix is needed. Unless I overlooked something, you did not give an answer to that.\n\nAs stated in that mail discussion, Apache httpd will make workarounds for UAs with faults in implementing the HTTP specs. It will however make use of all features of the protocol and expect others to cope with that as well.\n\nIf you prefer your installations to behave in a non-default way, there are plenty of directives that allow you to do so. In this case, an easy example to suppress the header was provided.\n\nEither you can make a case for UA strings where httpd should make a work-around or I will close this ticket as wont-fix.", "attachment_id": null, "bug_id": 59311, "id": 195139, "time": "2016-11-22T09:31:13Z", "creator": "stefan@eissing.org", "creation_time": "2016-11-22T09:31:13Z", "is_private": false}, {"count": 10, "tags": [], "bug_id": 59311, "attachment_id": null, "id": 195142, "creation_time": "2016-11-22T12:16:04Z", "time": "2016-11-22T12:16:04Z", "creator": "apache-bugzilla@michael-kaufmann.ch", "text": "> As per dev discussion on the list, we'd like to fix this (by default without further config) for the UAs that have problems with it. I asked you for the UA strings (or pattern) where the fix is needed. Unless I overlooked something, you did not give an answer to that.\n\nThere was a consensus on the mailing list that more discussion is needed about how to address this issue. There was no consensus about what to implement.\n\nI have no such list of affected user-agents. NodeJS is affected, but I don't know the affected versions.\n\n\n> If you prefer your installations to behave in a non-default way, there are plenty of directives that allow you to do so. In this case, an easy example to suppress the header was provided.\n\nIt is disputed whether sending the \"Upgrade: h2\" header is a \"default\". Most other HTTP/2 servers don't send it.", "is_private": false}]