[{"count": 0, "tags": [], "bug_id": 18106, "attachment_id": null, "id": 33346, "time": "2003-03-18T15:07:53Z", "creator": "apache@dima.spb.ru", "creation_time": "2003-03-18T15:07:53Z", "is_private": false, "text": "Format tags (like fmt:formatDate) use\n\n\tLocale locale = SetLocaleSupport.getFormattingLocale(\n            pageContext,\n\t    this,\n\t    true,\n\t    DateFormat.getAvailableLocales());\n\nSince the third parameter is \"true\", SetLocaleSupport.getFormattingLocale will \neventually do:\n\n\tsetResponseLocale(pc, XXXXXXX);\n\nwhich directly results in:\n\n\tresponse.setLocale(XXXXXXX);\n\nThe problem is: *each* format tag sets response locale. This works well under \nTomcat but throws and exception under OC4J 9.0.2 \n(\"java.lang.IllegalStateException: Response is already committed!\")\n\nAfter all, if I have multiple formatDate with different locales (say Russian \nand German). What is response locale supposed to be? I suppose the only need \nfor response.setLocale is to define response character set. We explicitly set \noutput encoding to UTF-8, but the very first formatDate replaces it with \ndifferent value.\n\nFormat tags should not change locale which was already set (either explicitly \nby the setLocale or implicitly by another format tag)."}, {"count": 1, "attachment_id": null, "creator": "pierre.delisle@sun.com", "text": "The behavior of the formatting tags is in accordance with the\nJSTL spec. This being said, let's see what can be done with your\nspecific situation.\n\nWith respect to the following exception:\n\"java.lang.IllegalStateException: Response is already committed!\"\n\nthe spec clearly states in section 8.4 that:\n\n\"This assumes that the response is buffered with a big enough buffer size, since\nServletResponse.setLocale() and ServletResponse.setContentType()\nmust be called before ServletResponse.getWriter() in order for the specified\nlocale or charset to affect the construction of the writer.(1)\n(1). It also assumes that the JSP container doesn't call getWriter() until it's \nabout to flush the buffer. An errata has been published for the JSP 1.2\nspecification \nto clarify this.\"\n\nYou should make sure that you have a big enough buffer, as well as verify\nthat your container vendor complies with this errata of the JSP spec.\n\nWith respect to the following comment:\n> After all, if I have multiple formatDate with different locales (say Russian \n> and German). What is response locale supposed to be? I suppose the only need \n> for response.setLocale is to define response character set. We explicitly set \n> output encoding to UTF-8, but the very first formatDate replaces it with \n> different value.\n\nSuch a situation, where multiple locales are used in a single page, is not\nwhat I would think a common use case for internationalization. I agree with \nyou however that setting the locale repetitively with different values is wrong \nin such a case.\n\nThe current workaround would be to add a Java statement after the last formatting\ntag to reset the content-type and character encoding of the response.\n\nNot ideal, I agree. In a better world, we should probably check\nwhether the char encoding has been set explicitely for the page, and\nrefrain from re-setting it in such situations. This would require a\nspec change. I've filed this as an item to discuss with the expert\ngroup for JSTL.next.", "id": 36789, "time": "2003-05-07T00:08:21Z", "bug_id": 18106, "creation_time": "2003-05-07T00:08:21Z", "tags": [], "is_private": false}]