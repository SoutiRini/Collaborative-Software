[{"count": 0, "tags": [], "bug_id": 42937, "text": "The loop of LazyReplicatedMap.publishEntryInfo doesn't end.\n\nReproduction condition\n Tomcat6.0.13\n Three cluster configurations or more(tomcat1\u0081Atomcat2\u0081Atomcat3..).\n Use BackupManager.\n \norg.apache.catalina.tribes.tipis.LazyReplicatedMap.publishEntryInfo has \ndo-while loop.\nThe end condition of this loop is \"success==true\" or \"firstIdx==nextIdx\".\n\nIn the 157th line\n(UniqueId id = getChannel().send(backup, msg, getChannelSendOptions())),\nIf ChannelException is thrown (For instance, Tomcat of the destination is \nstopped), success keeps false.\nTherefore, it tries to send MapMessage to the next backup node. \nHowever, The 157th line is Member next = members[firstIdx].\nBecause firstIdx is immutable, MapMessage is send to The same node last time.\nAs a result, ChannelException is thrown again. \nIn this case, success keeps false forever.\n\nIn addition,\nfirstIdx==nextIdx never consists. \nBecause firstIdx is immutable, and nextIdx is either 0 or firstIdx + 1. \n(Both firstIdx and nextIdx never become 0 \n in three cluster configurations or more(tomcat1\u0081Atomcat2\u0081Atomcat3..).)\n\nThus, \nWhen ChannelException is thrown once, \nsuccess keeps false and firstIdx==nextIdx never consists.\nAs a result, \nThe do-while loop of LazyReplicatedMap.publishEntryInfo doesn't end.\n\nThe following messages are repeatedly output. \n***\nJul 19, 2007 4:23:05 PM org.apache.catalina.tribes.tipis.LazyReplicatedMap \npublishEntryInfo\nSEVERE: Unable to replicate backup \nkey:C46A261B805660196F84A9832F6DFC8B.tomcat1 to \nbackup:org.apache.catalina.tribes.membership.MemberImpl\n[tcp://XXXXXXXX:14001,XXXXXXXX,14001, alive=2735,id={-83 97 -47 -57 117 -79 \n76 -12 -97 -115 19 -40 -88 -34 -12 -92 }, payload={}, command={}, domain=\n{}, ]. Reason:Send failed, attempt:2 max:1; Faulty \nmembers:tcp://XXXXXXXX:14001; \norg.apache.catalina.tribes.ChannelException: Send failed, attempt:2 max:1; \nFaulty members:tcp://XXXXXXXX:14001; \n\n        ...omits\n\n\tat org.apache.catalina.tribes.group.GroupChannel.send\n(GroupChannel.java:175)\n\tat org.apache.catalina.tribes.tipis.LazyReplicatedMap.publishEntryInfo\n(LazyReplicatedMap.java:157)\n\tat org.apache.catalina.tribes.tipis.AbstractReplicatedMap.put\n(AbstractReplicatedMap.java:878)\n\tat org.apache.catalina.tribes.tipis.AbstractReplicatedMap.put\n(AbstractReplicatedMap.java:864)\n\tat org.apache.catalina.session.ManagerBase.add(ManagerBase.java:740)\n\tat org.apache.catalina.session.StandardSession.setId\n(StandardSession.java:368)\n\tat org.apache.catalina.ha.session.DeltaSession.setId\n(DeltaSession.java:243)\n\tat org.apache.catalina.session.ManagerBase.createSession\n(ManagerBase.java:829)\n\tat org.apache.catalina.session.StandardManager.createSession\n(StandardManager.java:291)\n\n\t...omits\n\nCaused by: java.net.ConnectException: Connection refused: no further \ninformation\n\tat sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)\n\tat sun.nio.ch.SocketChannelImpl.finishConnect\n(SocketChannelImpl.java:527)\n\tat org.apache.catalina.tribes.transport.nio.NioSender.process\n(NioSender.java:87)\n\tat org.apache.catalina.tribes.transport.nio.ParallelNioSender.doLoop\n(ParallelNioSender.java:130)\n        ... 42 more\n***", "id": 105772, "time": "2007-07-19T02:35:43Z", "creator": "keiichi.fujino@gmail.com", "creation_time": "2007-07-19T02:35:43Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 42937, "attachment_id": null, "id": 105780, "time": "2007-07-19T07:22:16Z", "creator": "fhanik@apache.org", "creation_time": "2007-07-19T07:22:16Z", "is_private": false, "text": "Thanks for the report, the correct index nextIdx is now used in the algorithm"}, {"count": 2, "tags": [], "bug_id": 42937, "attachment_id": null, "id": 105781, "time": "2007-07-19T08:02:48Z", "creator": "keiichi.fujino@gmail.com", "creation_time": "2007-07-19T08:02:48Z", "is_private": false, "text": "Thanks for these revision.\n http://svn.apache.org/viewvc?view=rev&rev=557635 \n http://svn.apache.org/viewvc?view=rev&rev=557638\n\nbut, I think this revision is not enough.\n\nnextIdx is still immutable.\nI think following correction is needed.\n\n //nextIdx = firstIdx + 1; \n nextIdx++;\n"}, {"count": 3, "tags": [], "bug_id": 42937, "text": "absolutely correct, thanks for helping out", "id": 105783, "time": "2007-07-19T09:27:18Z", "creator": "fhanik@apache.org", "creation_time": "2007-07-19T09:27:18Z", "is_private": false, "attachment_id": null}]