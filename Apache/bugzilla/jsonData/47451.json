[{"count": 0, "tags": [], "creator": "dan.rabe@oracle.com", "attachment_id": null, "id": 128410, "time": "2009-06-29T14:53:48Z", "bug_id": 47451, "creation_time": "2009-06-29T14:53:48Z", "is_private": false, "text": "I've been getting a NullPointerException when using the JnlpDownloadServlet\nfrom JDK 1.6.0_14 with Tomcat 6.0.20:\n\nJun 29, 2009 3:35:03 PM org.apache.coyote.http11.Http11Processor process\nSEVERE: Error finishing response\njava.lang.NullPointerException\n\tat org.apache.tomcat.util.buf.MessageBytes.indexOf(MessageBytes.java:479)\n\tat org.apache.tomcat.util.buf.MessageBytes.indexOf(MessageBytes.java:485)\n\tat org.apache.coyote.http11.Http11Processor.isCompressable(Http11Processor.java:1441)\n\tat org.apache.coyote.http11.Http11Processor.prepareResponse(Http11Processor.java:1517)\n\tat org.apache.coyote.http11.Http11Processor.action(Http11Processor.java:944)\n\tat org.apache.coyote.Response.action(Response.java:181)\n\tat org.apache.coyote.http11.InternalOutputBuffer.endRequest(InternalOutputBuffer.java:379)\n\tat org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:889)\n\tat org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:583)\n\tat org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:454)\n\tat java.lang.Thread.run(Thread.java:619)\n\nA brief analysis of the JnlpDownloadServlet code shows that the content-encoding\nheader on the response is being set to null in DownloadResponse$FileDownloadResponse.\n\nThe Tomcat code tries to guard against a null header in Http11Process.isCompressable:\n        if ((contentEncodingMB != null)\n            && (contentEncodingMB.indexOf(\"gzip\") != -1))\n            return false;\n\nHowever, it appears that it's possible for contentEncodingMB, which is an\ninstance of MessageBytes, to be non-null, while the value encapsulated by\nthe MessageBytes IS null, resulting in an NPE in MessageBytes.indexOf().\n\nSince this occurs with the JnlpDownloadServlet provided by Sun (see http://java.sun.com/j2se/1.5.0/docs/guide/javaws/developersguide/downloadservletguide.html), I imagine more people might be running into this problem."}, {"count": 1, "tags": [], "text": "(In reply to comment #0)\n> A brief analysis of the JnlpDownloadServlet code shows that the\n> content-encoding\n> header on the response is being set to null in\n> DownloadResponse$FileDownloadResponse.\n> \n> (...)\n> \n> Since this occurs with the JnlpDownloadServlet provided by Sun (see\n> http://java.sun.com/j2se/1.5.0/docs/guide/javaws/developersguide/downloadservletguide.html),\n> I imagine more people might be running into this problem.\n\nNull should not be used as a value in a call to HttpServletResponse#setHeader()/#addHeader().\n\nThe servlet spec (including the proposed final draft of servlet-3.0) does not define the behavior of null value for those methods, but certainly such value cannot be transmitted over the wire and cannot be interpreted as removal of the header, as the spec does not allow removal of the headers.\n\nThe same applies to null value for name.\n\nThus expect #setHeader(name, null) to fail in a container-dependent way. I would prefer an early failure with an NPE in setHeader/addHeader, as opposed to the late failure seen by the OP. Should we make it configurable, e.g. with STRICT_SERVLET_COMPLIANCE?", "attachment_id": null, "id": 130809, "creation_time": "2009-10-02T04:34:03Z", "time": "2009-10-02T04:34:03Z", "creator": "knst.kolinko@gmail.com", "bug_id": 47451, "is_private": false}, {"count": 2, "tags": [], "bug_id": 47451, "attachment_id": null, "text": "Fixed in trunk and proposed for 6.0.x", "id": 131537, "time": "2009-11-01T14:59:12Z", "creator": "markt@apache.org", "creation_time": "2009-11-01T14:59:12Z", "is_private": false}, {"count": 3, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "id": 133040, "time": "2009-12-21T11:19:12Z", "bug_id": 47451, "creation_time": "2009-12-21T11:19:12Z", "is_private": false, "text": "This has been fixed in 6.0.x and will be included in 6.0.21 onwards."}]