[{"count": 0, "tags": [], "creator": "shijiewang@agiliance.com", "attachment_id": 22816, "id": 122080, "time": "2008-10-31T10:06:11Z", "bug_id": 46137, "creation_time": "2008-10-31T10:06:11Z", "is_private": false, "text": "Created attachment 22816\nA test Excel file that cannot be loaded due to this bug\n\nSometimes, Excel generates a Continue record after an EOF record for some unknown reasons. It should be considered as a bug. Excel itself, Excel Viewer, and Ruby all can handle it without any incident. However, the POI package fails to handle it.\n\nBased on a Google search on \"Unhandled Continue Record\", this issue was reported as early as 2005. See http://www.mail-archive.com/poi-dev@jakarta.apache.org/msg10360.html. However, it is not fixed in all the versions we tested, namely, 3.0 rc4, 3.1 FINAL, 3.2 FINAL, and 3.5.1 beta.\n\nThe fix seems pretty simple. If the following lines are added to the method createRecords() in org.apache.poi.hssf.record.RecordFactory, the problem goes away with those \"offending\" Excel files.\n\n\t} else if (lastRecord instanceof EOFRecord) {\n            // System.err.println(\"Warning: Unexpected Continue Record after an End of File record!\");\n            records.add(record);"}, {"count": 1, "tags": [], "text": "Fixed in svn trunk", "attachment_id": null, "id": 122334, "creator": "apache@gagravarr.org", "time": "2008-11-10T04:20:51Z", "bug_id": 46137, "creation_time": "2008-11-10T04:20:51Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 46137, "attachment_id": null, "is_private": false, "id": 124847, "time": "2009-02-13T12:59:02Z", "creator": "josh@apache.org", "creation_time": "2009-02-13T12:59:02Z", "text": "(In reply to comment #1)\n> Fixed in svn trunk\n> \n\nsvn r46137 which made it into the 3.5-beta4 release\n\n"}, {"count": 3, "attachment_id": null, "bug_id": 46137, "is_private": false, "id": 124849, "time": "2009-02-13T13:01:16Z", "creator": "josh@apache.org", "creation_time": "2009-02-13T13:01:16Z", "tags": [], "text": "*** Bug 46094 has been marked as a duplicate of this bug. ***"}, {"count": 4, "tags": [], "bug_id": 46137, "attachment_id": null, "is_private": false, "id": 126773, "time": "2009-05-05T02:16:58Z", "creator": "joern@muehlencord.de", "creation_time": "2009-05-05T02:16:58Z", "text": "reproduced error with 3.5 Beta 5"}, {"count": 5, "attachment_id": 23611, "bug_id": 46137, "text": "Created attachment 23611\nFile to reproduce the error with Poi 3.2 fianl and 3.5 beta 5", "id": 126774, "time": "2009-05-05T02:18:18Z", "creator": "joern@muehlencord.de", "creation_time": "2009-05-05T02:18:18Z", "tags": [], "is_private": false}, {"count": 6, "attachment_id": null, "creator": "joern@muehlencord.de", "is_private": false, "id": 126775, "time": "2009-05-05T02:18:58Z", "bug_id": 46137, "creation_time": "2009-05-05T02:18:58Z", "tags": [], "text": "Test Source Code\n    try {\n      String dataFile = \"BrokenExampleFile.xls\";\n      POIFSFileSystem fs1 = new POIFSFileSystem(new FileInputStream(dataFile));\n      HSSFWorkbook workbook = new HSSFWorkbook(fs1);\n      HSSFSheet sheet = workbook.getSheetAt(0);\n\n    } catch (Exception ex) {\n      ex.printStackTrace();\n    }"}, {"count": 7, "tags": [], "bug_id": 46137, "attachment_id": null, "is_private": false, "id": 129696, "time": "2009-08-14T12:53:42Z", "creator": "yegor@dinom.ru", "creation_time": "2009-08-14T12:53:42Z", "text": "Both attached files can be read by the latest build of\ntrunk without any problems. \n\nDaily builds can be downloaded from http://encore.torchbox.com/poi-svn-build/\n\nYegor"}, {"count": 8, "tags": [], "bug_id": 46137, "attachment_id": null, "is_private": false, "id": 133597, "time": "2010-01-14T04:12:46Z", "creator": "merav.eshet@precise.com", "creation_time": "2010-01-14T04:12:46Z", "text": "Does this fix exist for version 3.2 too?\nIf yes, what is the link to download it?\nOtherwise, how can we download the source code of the 3.2 version? (I found code only for new versions)\nThanks."}]