[{"count": 0, "tags": [], "creator": "tero_t_vaananen@hotmail.com", "attachment_id": null, "is_private": false, "id": 104722, "time": "2007-06-26T07:46:31Z", "bug_id": 42744, "creation_time": "2007-06-26T07:46:31Z", "text": "Our server hangs during ResourceCache allocation roughly once a week. The\nconsequence is that all HTTP threads go into BLOCKED state waiting for the\nallocations to finish, which never happens. Strangely enough, the hang occurs\nduring a native method call:\n\nName: http-0.0.0.0-8080-2\nState: RUNNABLE\nTotal blocked: 400,211  Total waited: 2,487\n\nStack trace: \njava.lang.StrictMath.floor(Native Method)\njava.lang.Math.floor(Math.java:407)\norg.apache.naming.resources.ResourceCache.allocate(ResourceCache.java:233)\norg.apache.naming.resources.ProxyDirContext.cacheLoad(ProxyDirContext.java:1599)\norg.apache.naming.resources.ProxyDirContext.cacheLookup(ProxyDirContext.java:1448)\norg.apache.naming.resources.ProxyDirContext.lookupCache(ProxyDirContext.java:1376)\norg.apache.catalina.servlets.DefaultServlet.serveResource(DefaultServlet.java:663)\norg.apache.catalina.servlets.DefaultServlet.doGet(DefaultServlet.java:335)\njavax.servlet.http.HttpServlet.service(HttpServlet.java:697)\njavax.servlet.http.HttpServlet.service(HttpServlet.java:810)\norg.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:252)\norg.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)\norg.jboss.web.tomcat.filters.ReplyHeaderFilter.doFilter(ReplyHeaderFilter.java:81)\norg.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:202)\norg.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)\norg.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:213)\norg.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:178)\norg.jboss.web.tomcat.security.CustomPrincipalValve.invoke(CustomPrincipalValve.java:39)\norg.jboss.web.tomcat.security.SecurityAssociationValve.invoke(SecurityAssociationValve.java:159)\norg.jboss.web.tomcat.security.JaccContextValve.invoke(JaccContextValve.java:59)\norg.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:126)\norg.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:105)\norg.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:107)\norg.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:148)\norg.apache.coyote.http11.Http11Processor.process(Http11Processor.java:856)\norg.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.processConnection(Http11Protocol.java:744)\norg.apache.tomcat.util.net.PoolTcpEndpoint.processSocket(PoolTcpEndpoint.java:527)\norg.apache.tomcat.util.net.MasterSlaveWorkerThread.run(MasterSlaveWorkerThread.java:112)\njava.lang.Thread.run(Thread.java:595)\n\nand we then have several hundred cache-related requests (based on the threads\nreserved for Tomcat) blocked, all waiting for the thread above:\n\nName: http-0.0.0.0-8080-3\nState: BLOCKED on org.apache.naming.resources.ResourceCache@b844b7 owned by:\nhttp-0.0.0.0-8080-2\nTotal blocked: 470,313  Total waited: 2,755\n\nStack trace: \norg.apache.naming.resources.ProxyDirContext.cacheLoad(ProxyDirContext.java:1599)\norg.apache.naming.resources.ProxyDirContext.cacheLookup(ProxyDirContext.java:1448)\norg.apache.naming.resources.ProxyDirContext.lookup(ProxyDirContext.java:282)\norg.apache.tomcat.util.http.mapper.Mapper.internalMapWrapper(Mapper.java:778)\norg.apache.tomcat.util.http.mapper.Mapper.internalMap(Mapper.java:622)\norg.apache.tomcat.util.http.mapper.Mapper.map(Mapper.java:512)\norg.apache.catalina.connector.CoyoteAdapter.postParseRequest(CoyoteAdapter.java:262)\norg.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:146)\norg.apache.coyote.http11.Http11Processor.process(Http11Processor.java:856)\norg.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.processConnection(Http11Protocol.java:744)\norg.apache.tomcat.util.net.PoolTcpEndpoint.processSocket(PoolTcpEndpoint.java:527)\norg.apache.tomcat.util.net.MasterSlaveWorkerThread.run(MasterSlaveWorkerThread.java:112)\njava.lang.Thread.run(Thread.java:595)"}, {"count": 1, "tags": [], "text": "This is most likely a JDK bug with the StrictMath package, as the dead lock is a\nresult of the StrictMath.floor method never returning.", "is_private": false, "id": 104723, "creator": "fhanik@apache.org", "time": "2007-06-26T08:39:53Z", "bug_id": 42744, "creation_time": "2007-06-26T08:39:53Z", "attachment_id": null}, {"count": 2, "tags": [], "text": "(In reply to comment #1)\n> This is most likely a JDK bug with the StrictMath package, as the dead lock is a\n> result of the StrictMath.floor method never returning.\n\nIt seems that the call was circumvented in one of the later Tomcat releases\nshipping with:\n\nJBossAS-4.0.5.CR1\n\nFound this bug note:\nhttp://jira.jboss.com/jira/browse/JBAS-3199?decorator=printable\n", "attachment_id": null, "bug_id": 42744, "id": 104764, "time": "2007-06-27T07:39:20Z", "creator": "tero_t_vaananen@hotmail.com", "creation_time": "2007-06-27T07:39:20Z", "is_private": false}]