[{"count": 0, "tags": [], "text": "iterating on a Vector with 4 elements with forEach tag, set begin=2 and end=3, \nand it yielded the second and third elements instead of the third and fourth.\n\nthe problem appears to be in the IteratorTagSupport.discard() method. the index \nvariable gets incremented every time through the while loop in this method, but \nif index == 0, it shouldn't get incremented the first time through (as noted in \nthe IteratorTagSupport.doStartTag() when it calls next() ).\n\n(Shawn, thank you very much for all the work you put into this EA1!!!)", "attachment_id": null, "id": 5788, "creator": "dheath@hbs.edu", "time": "2001-09-19T15:50:21Z", "bug_id": 3732, "creation_time": "2001-09-19T15:50:21Z", "is_private": false}, {"count": 1, "tags": [], "text": "Thanks for the bug, Doug.  The problem was indeed in discard() but wasn't \nspecifically related to the increment of index, which is just done locally\nin order to \"prime\" atEnd().  The problem was that discard() used atEnd()\nin all cases; atEnd() takes into account 'begin', which is clearly \ninappropriate until 'begin' is abided by (i.e., in this one particular case).\nI've fixed by added a discardIgnoreSubset() function.\n\n(Note:  this part of the implementation could still be cleaned up; I've\nnever really liked this particular strategy and the way that index/count/\ngetIndex() interact.  But I think it's relatively simple and instructive,\nso I've left it for the moment.)", "is_private": false, "id": 5796, "creator": "bayern@essentially.net", "time": "2001-09-19T20:59:08Z", "bug_id": 3732, "creation_time": "2001-09-19T20:59:08Z", "attachment_id": null}]