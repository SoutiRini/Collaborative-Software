[{"count": 0, "attachment_id": null, "bug_id": 23958, "text": "I am trying to create a footer with formulas to set the printable area and \nfooter text when printing the an excel report.  When I implemented using a \ntemplate to satisfy this requirement, the excel sheet started being created as \nblank.  There is data being put into the object, but when I got to write that \ndata to the excel sheet, it comes out as blank.  Here is some sample code.  \nPlease let me know if I am doing something wrong here.\n\npublic void generate(LevelOfProcessing aLevel, String excelFileTemplate, String \nexcelFileName)\n            throws ReportGenerationException {\n\n        //clear out instance variables so this method\n        //can be called multiple times for the same payroll file\n        initialize();\n\n        this.level = aLevel;\n        //this.excelFileTemplate = excelFileTemplate;\n\n        createSpreadsheet();\n        createHeader();\n        \n        writeExcelFile(excelFileName);\n\n    }\n\n private void createSpreadsheet() {\n        if (this.excelFileTemplate != null) {\n            if (logging.isInfoEnabled()) {\n                logging.info(\"Reading from excel template file \" + \nthis.excelFileTemplate);\n            }\n             \n         try {\n\n\t     InputStream templateStream = \nClasspathResourceLocator.getResourceStream(this.excelFileTemplate);\n             this.workbook = new ExcelWorkbook(templateStream);\n             this.workbook = new ExcelWorkbook();\n             this.sheet = this.workbook.getSheet(REPORT_NAME);\n             templateStream.close();\n\t    } catch (FileNotFoundException fnfe) {\n                if (logging.isDebugEnabled()) {\n                    logging.debug(\"Unable to read from file \" + \nthis.excelFileTemplate +\n                            \".  Creating a new workbook.\");\n                }\n                this.workbook = new ExcelWorkbook();\n                this.sheet = this.workbook.createSheet(REPORT_NAME);\n\n            } catch (IOException ioe) {\n                if (logging.isDebugEnabled()) {\n                    logging.debug(\"Unable to read from file \" + \nthis.excelFileTemplate +\n                            \". Creating a new workbook.\");\n                }\n                this.workbook = new ExcelWorkbook();\n                this.sheet = this.workbook.createSheet(REPORT_NAME);\n\n            } catch (ResourceNotFoundException rnfe) {\n                if (logging.isDebugEnabled()) {\n                    logging.debug(\"Unable to find file \" + \nthis.excelFileTemplate +\n                            \". Creating a new workbook.\");\n                }\n                this.workbook = new ExcelWorkbook();\n                this.sheet = this.workbook.createSheet(REPORT_NAME);\n\n            }\n        } else {\n            if (logging.isInfoEnabled()) {\n                logging.info(\"Excel template file not specified.  Creating a \nnew workbook.\");\n            }\n\n            this.workbook = new ExcelWorkbook();\n            this.sheet = this.workbook.createSheet(REPORT_NAME);\n\n        }\n\n        this.sheet.setColumnWidth((short) 0, (short) (15 * 256));\n        this.sheet.setColumnWidth((short) 1, (short) (12 * 256));\n        this.sheet.setColumnWidth((short) 2, (short) (10 * 256));\n        this.sheet.setColumnWidth((short) 3, (short) (50 * 256));\n        this.sheet.setColumnWidth((short) 4, (short) (13 * 256));\n        this.sheet.setColumnWidth((short) 5, (short) (35 * 256));\n        this.sheet.setColumnWidth((short) 6, (short) (35 * 256));\n        this.sheet.setFitToPage(true);\n    }\n private void createHeader() {\n\n        row = this.sheet.createRow(HEADER_ROW);\n        ExcelCell cell = row.getOrCreateCell(HEADER_COLUMN);\n        cell.setCellTypeString();\n        cell.setCellValue(STRONG);\n        cell.setCellStyle(getTitleStyle());\n\n        row = this.sheet.createRow((short) (HEADER_ROW + 1));\n        cell = row.getOrCreateCell(HEADER_COLUMN);\n        cell.setCellTypeString();\n        cell.setCellValue(REPORT_NAME);\n        cell.setCellStyle(getTitleStyle());\n\n    }\n\nprivate void writeExcelFile(String excelFileName)\n            throws ReportGenerationException {\n\n        Long payrollKey = payrollData.getPayrollFile().getId().getLongValue\n(\"payroll_file_key\");\n        Long levelKey = this.level.getId().getLongValue(\"level_key\");\n\n        try {\n            if (logging.isInfoEnabled()) {\n                logging.info(\"Writing edit report for payroll file key \" + \npayrollKey.toString() +\n                        \" and level key \" + levelKey.toString() +\n                        \" to file \" + excelFileName);\n            }\n            FileOutputStream out = new FileOutputStream(excelFileName);\n\n            this.workbook.write(out);\n            out.close();\n\n        } catch (FileNotFoundException fnfe) {\n            if (logging.isDebugEnabled()) {\n                logging.debug(\"Unable to write to file \" + excelFileName +\n                        \" for payroll file key \" + payrollKey.toString() +\n                        \" and level key \" + levelKey.toString(),\n                        fnfe);\n            }\n            throw new ReportGenerationException(fnfe, \"Unable to write edit \nreport to \" + excelFileName);\n\n        } catch (IOException ioe) {\n            if (logging.isDebugEnabled()) {\n                logging.debug(\"Unable to write to file \" + excelFileName +\n                        \" for payroll file key \" + payrollKey.toString() +\n                        \" and level key \" + levelKey.toString(),\n                        ioe);\n\n            }\n            throw new ReportGenerationException(ioe, \"Unable to write edit \nreport to \" + excelFileName);\n        }\n    }", "id": 45957, "time": "2003-10-20T22:05:34Z", "creator": "mjmoore@strong.com", "creation_time": "2003-10-20T22:05:34Z", "tags": [], "is_private": false}, {"count": 1, "tags": [], "creator": "yegor@dinom.ru", "text": "I can't reproduce the problem from its description. The sample code isn\u2019t of much help because it uses custom wrapper around HSSF and it makes impossible to compile and run.\n\nTry the latest POI-3.5-beta4 or download daily builds from http://encore.torchbox.com/poi-svn-build/\n\nIf the problem is still there, re-open the bug and attach a unit test to reproduce it.\n\nYegor\n", "id": 123635, "time": "2008-12-30T09:57:10Z", "bug_id": 23958, "creation_time": "2008-12-30T09:57:10Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "creator": "dfisher@jmlafferty.com", "text": "We've done headers and footers and they seem to work. Yegor tried as much as possible with the sample code.", "id": 124934, "time": "2009-02-18T09:29:30Z", "bug_id": 23958, "creation_time": "2009-02-18T09:29:30Z", "is_private": false, "attachment_id": null}]