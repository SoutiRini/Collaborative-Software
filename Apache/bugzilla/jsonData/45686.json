[{"count": 0, "tags": [], "creator": "thorstenbux@gmx.de", "is_private": false, "id": 120076, "attachment_id": 22479, "bug_id": 45686, "creation_time": "2008-08-25T08:36:40Z", "time": "2008-08-25T08:36:40Z", "text": "Created attachment 22479\nsample source code\n\nHi,\n\n I try to update RichTextRun-Objects in a TextRun-Object.\n\nWhen I call TextRun.changeTextInRichTextRun(RichTextRun[0],\"\") the first time everything works fine. But when I call it a second time TextRun.changeTextInRichTextRun(RichTextRun[1],\"Hello\") I get the following Exception:\n\nException in thread \"main\" java.lang.StringIndexOutOfBoundsException: String index out of range: 68\n     at java.lang.String.substring(Unknown Source)\n     at org.apache.poi.hslf.usermodel.RichTextRun.getRawText(RichTextRun.java:158)\n     at org.apache.poi.hslf.model.TextRun.changeTextInRichTextRun(TextRun.java:435)\n     at substitutionClassesForPptParser.SimpleSubstitution.handeSubstitution(SimpleSubstitution.java:99)\n     at methodsFromPptParser.ProcessPptDocumet.importPlaceholder(ProcessPptDocumet.java:94)\n     at Tester.main(Tester.java:16)\n\n\n I try something like that.\n\n RichTextRun[0] --> \"Hello\"\n RichTextRun[1] --> \"World\"\n RichTextRun[2] --> \"POI\"\n\n\n TextRun.changeTextInRichTextRun(RichTextRun[0], \"\");\n TextRun.changeTextInRichTextRun(RichTextRun[1], \"Java\");\n TextRun.changeTextInRichTextRun(RichTextRun[0], \"Apache\");\n\n\nI have attached some sample source code"}, {"count": 1, "attachment_id": null, "bug_id": 45686, "is_private": false, "id": 182792, "time": "2015-05-01T20:22:06Z", "creator": "dominik.stadler@gmx.at", "creation_time": "2015-05-01T20:22:06Z", "tags": [], "text": "I quickly tried to reproduce this old bug report, but could not. Also the code that you posted is not self-sufficient, so it is hard to exactly run what you did back then. \n\nSo I believe that this is fixed in the meantime and thus will close this as WORKSFORME for now. If this is still a problem for you then please reopen the bug together with a self-sufficient unit test and any sample files that are used in the test so we can reproduce the problem."}]