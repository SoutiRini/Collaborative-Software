[{"count": 0, "tags": [], "text": "I'd like to see a total line at the bottom (or top) of the Aggregate Report.", "attachment_id": null, "bug_id": 15041, "id": 27370, "time": "2002-12-03T23:44:41Z", "creator": "jsalvata@atg.com", "creation_time": "2002-12-03T23:44:41Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 15041, "attachment_id": 4101, "is_private": false, "id": 27576, "time": "2002-12-10T09:14:16Z", "creator": "jsalvata@atg.com", "creation_time": "2002-12-10T09:14:16Z", "text": "Created attachment 4101\nPatch for the Aggregate Report"}, {"count": 2, "tags": [], "bug_id": 15041, "is_private": false, "text": "The attached patch makes the following changes to the aggregate report:\n\n- Added a \"TOTAL\" line to the report.\n\n- Changed the \"rate\" column to represent physical pages per unit of time --\ninstead of some theoretical value that nobody understood. This has the\nadditional advantage of being much cheaper to compute (no need to track which\nthreads generated the samples anymore).\n\n- Improved performance of the report by avoiding unnecessary information copying\n(as per Swing's TableModel recommendations) and firing table changed events for\nonly the rows that have actually changed. Some other minor performance\nimprovements by avoiding unnecessary hash lookups -- one is saved by holding a\nRunningSample's order in the table in an index field in the RunningSample\nitself, the other one by avoiding a hashmap.containsKey immediately followed by\na hashmap.get.\n\n- Solved a minor bug in getMin and getMax (were returning nonsense for a\njust-created RunningSample).\n\n- Correctly internationalized the Aggregate Report component name.\n\n- Corrected at least one race condition in which if two threads 'simultaneously'\nreported a sample which was not yet in the table, you could end up loosing one\nof the samples. There may be other similar issues solved, because I was\ngenerally carefull with synchronization, which didn't seem to be the case in the\nearlier code.\n\nPerformance test resuts:\n\n- I ran a very simple script creating 3 rows in the table: one changing slowly,\none changing as rapidly as possible, and the totals. I got over 15500 requests\nin 1 minute, where I was getting just 14200 with the old code (which didn't have\nthe burden of computing and refreshing the totals line). I expect the difference\nto be *much* bigger as the size of the table grows.\n\nRemaining issues:\n\n- Table sorting still not implemented.\n\n- Would like to represent the totals in a different background or in bold font.\n\n- I feel the StatVisualizerModel should return the results in numeric form and\nthe Visualizer itself should be all the formatting. It's not currently done this\nway.", "id": 27577, "time": "2002-12-10T09:15:41Z", "creator": "jsalvata@atg.com", "creation_time": "2002-12-10T09:15:41Z", "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 15041, "is_private": false, "count": 3, "id": 32815, "time": "2003-03-10T09:40:28Z", "creator": "jsalvata@atg.com", "creation_time": "2003-03-10T09:40:28Z", "text": "Bulk-editing to close all bugs reported fixed by 1.8.1."}]