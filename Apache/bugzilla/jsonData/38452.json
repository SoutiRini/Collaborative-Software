[{"count": 0, "tags": [], "creator": "victor@pskov.e-nginet.com", "is_private": false, "text": "Now it is a problem to generate a big pdf document with many data. For example,\nreport based on a lot of different data. Usually \"OutOfMemory\" exception throws. \n\nMy idea to generate pdf step by step,to create a lot of xml sources and one or\nmore xslfo source files. At first it is necessary to point FOP-builder that\nspecific transformation has been started and send the first xml,xslfo source and\npdf target to process. After the first transformation, send the next xml sources\nto process and so on. When the last xml source remains, it needs to indicate\nthat it will be the last process. And Fop will complete generating pdf.\n\nI released this logic in fop-0.20.5. I used old classes: Driver, FoTreeBuilder,\nStreamRenderer. But some of this clasess have been changed or absented in new\nversion of Fop. Have you opportunity to realize generating only one pdf-document\nbased on a plenty of data?", "id": 85205, "time": "2006-01-30T17:57:10Z", "bug_id": 38452, "creation_time": "2006-01-30T17:57:10Z", "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 38452, "attachment_id": null, "is_private": false, "id": 85352, "time": "2006-02-02T16:36:33Z", "creator": "jeremias@apache.org", "creation_time": "2006-02-02T16:36:33Z", "text": "It seems you used FOP 0.20.5 in a way that was not really intended. This\noperation has, until now, never been a supported operation. The redesign has\nabviously removed the direct possibility to do again what you could do with\n0.20.5. However, there are a few points that will help you:\n\n1. Normally, concatenating documents to a single document should be done at XSLT\nstage. FOP is designed to take one input document and generate one output\ndocument. If this still you still get memory problem with the latest release if\nyou process one big document at once instead of multiple separate ones, we'd\nlike to know about it because this is something that should work. Would you\nplease do us the favor and retest processing the whole document in normal\nfashion using 0.91beta? Thanks.\n\n2. About a month ago, I introduce the \"intermediate format\". It allows you to\ncreate an XML representation of the formatted document and save that as a file.\nYou can later reparse these intermediate files and concatenate them to one big\nPDF file. If you download the latest FOP from Subversion (FOP Trunk), you can\nfollow the instructions in [1] to achieve what you want.\n\n[1] http://xmlgraphics.apache.org/fop/trunk/intermediate.html\n\n3. If you subclass org.apache.fop.area.AreaTreeHandler and override its\nsetupModel method you should be able to reuse the RenderPagesModel instance and\nachieve the same effect as with 0.20.5. You will also need to instantiate the\nAreaTreeHandler yourself and set it on the FOUserAgent using\nsetFOEventHandlerOverride(). Note that you need to know what you're doing here.  :-)\n\nGood luck!"}, {"count": 2, "tags": [], "creator": "jeremias@apache.org", "text": "I assume the problem is resolved. Closing the bug. Please reopen should anything\nbe unclear.", "id": 85624, "time": "2006-02-09T08:26:17Z", "bug_id": 38452, "creation_time": "2006-02-09T08:26:17Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 38452, "attachment_id": null, "text": "batch transition to closed remaining pre-FOP1.0 resolved bugs", "id": 156802, "time": "2012-04-01T13:53:06Z", "creator": "gadams@apache.org", "creation_time": "2012-04-01T13:53:06Z", "is_private": false}]