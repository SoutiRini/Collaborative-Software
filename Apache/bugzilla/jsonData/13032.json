[{"count": 0, "attachment_id": null, "creator": "S.M.Flood@ucs.cam.ac.uk", "is_private": false, "id": 23447, "time": "2002-09-26T13:25:01Z", "bug_id": 13032, "creation_time": "2002-09-26T13:25:01Z", "tags": [], "text": "Module: mod_setenvif\n\nI'm trying to use the SetEnvIf and SetEnvIfNoCase directives to determine which \nlog file a request should get logged to based on the values of the Request_URI \nand Remote_Host variables.\n\nI'm using SetEnvIfNoCase to set three flags when a request is a Code Red/Nimda \nprobe - attack, attack_uk, and attack_not_uk - and then I'm unsetting the \nrelevant one depending on whether the request came from a UK- or non-UK-based \nmachine.\n\nAlthough I've flagged this as a problem with Apache/1.3.26 on NetWare I've also \nfound this to be the case with Apache/1.3.26 on Windows NT 4.0 Workstation.\n\nThe relevant lines from my httpd.conf file are:\n\nSetEnvIfNoCase Request_URI \"cmd\\.exe\"      attack attack_uk attack_not_uk\nSetEnvIfNoCase Request_URI \"root\\.exe\"     attack attack_uk attack_not_uk\nSetEnvIfNoCase Request_URI \"default\\.ida\"  attack attack_uk attack_not_uk\nSetEnvIfNoCase Request_URI \"msadcs\\.dll\"   attack attack_uk attack_not_uk\nSetEnvIfNoCase Request_URI \"pbserver\\.dll\" attack attack_uk attack_not_uk\n\nSetEnvIfNoCase Request_URI \"^/default\\.ida\" default_ida\n\nSetEnvIfNoCase Remote_Host \\.uk$  !attack_not_uk access_uk\nSetEnvIfNoCase Remote_Host !\\.uk$ !attack_uk\n\nCustomLog logs/access.log   common env=!attack\nCustomLog logs/accessuk.log common env=access_uk\nCustomLog logs/attackuk.log common env=attack_uk\nCustomLog logs/attack.log   common env=attack_not_uk\nCustomLog logs/default.log  common env=default_ida\n\nBasically the 'SetEnvIfNocase Remote_Host !\\.uk$ !attack_uk\" isn't working and \nI think it's because the '!' in front of the regex is getting ignored.  I've \nalso tried enclosing the whole regex in '\"'s plus all except the '!' but it \ndoesn't make any difference.\n\naccessuk.log is correctly logging just accesses from machines with DNS names \nending \".uk\".\n\nAs an aside I'm finding that requests for 'default\\.ida' are not getting \ninterpreted as attacks hence the reason for adding '^/default\\.ida' as a test \nbut I haven't had one of these probes since implementing this!  Though if I \ntelnet in and enter the appropriate request it does log it correctly.\n\nBTW the reason for wanting to log all UK-based attacks to a separate file is so \nthat I can pass it on to our local CERT team.  Since they receive so many \nattack reports from around the University they're only really interested in UK-\nbased probes that they can then pass on to the JANet (Joint Academic Network) \nCERT team for action.\n\nAm I right in thinking that '!' isn't working or is even supposed to work?\n\nIf it isn't supposed to work what is the alternative?\n\nMany thanks,\n\nSimon Flood, Computer Officer,\nUniversity of Cambridge Computing Service, United Kingdom"}, {"count": 1, "attachment_id": null, "creator": "slive@apache.org", "is_private": false, "id": 24043, "time": "2002-10-07T01:16:12Z", "bug_id": 13032, "creation_time": "2002-10-07T01:16:12Z", "tags": [], "text": "In Apache 1.3 I don't believe there is a standard way to do negative\nregexes.  In 2.0, PCRE does allow this; see the PCRE man page or the\nPerl 5 regular expression documentation.\n\nBut there are several ways to work around this.  One is\nSetEnvIfNoCase Remote_Host . access_not_uk\nSetEnvIfNoCase access_uk 1 !access_not_uk\nSetEnvIfNoCase access_not_uk 1 !attack_uk"}]