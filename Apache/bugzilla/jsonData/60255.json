[{"count": 0, "tags": [], "bug_id": 60255, "attachment_id": null, "text": "When i create Drawing from sheet.createDrawingPatriarch()\nI got Exception: org.apache.poi.openxml4j.exceptions.PartAlreadyExistsException: A part with the name '/xl/drawings/drawing7.xml' already exists : Packages shall not contain equivalent part names and package implementers shall neither create nor recognize packages with equivalent part names. [M1.12]\n\nI tested with 3.14 and 3.15. Problem i found maybe: in org.apache.poi.xssf.usermodel.XSSFSheet.createDrawingPatriarch, \nwe get new drawing index by code line\nint drawingNumber = getPackagePart().getPackage().getPartsByContentType(XSSFRelation.DRAWINGS.getContentType()).size() + 1;\nThe index is count of exist drawings + 1. And correct if exist indexes are consecutive.\n\nMy Excel file containing multiple drawings, getPackagePart().getPackage().getPartsByContentType(XSSFRelation.DRAWINGS.getContentType()) return indexes are nonconsecutive. Then I got Exception\n/xl/drawings/drawing1.xml\n/xl/drawings/drawing2.xml\n/xl/drawings/drawing3.xml\n/xl/drawings/drawing5.xml\n/xl/drawings/drawing7.xml\n/xl/drawings/drawing10.xml\n\nThere is another way for me to re-index exist drawing by poi library or How can I override this method to get new index = get lastest index + 1\n\nThank you very much for reading and support", "id": 194410, "time": "2016-10-14T08:16:39Z", "creator": "tuyenivt@gmail.com", "creation_time": "2016-10-14T08:16:39Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 60255, "attachment_id": null, "text": "POI should probably look through all defined drawing IDs and either pick the lowest available ID greater than 0 (fill in the gaps) or 1 greater than the largest drawing ID.\n\nWill there be any issues with the first approach, such as drawing z-order or breaking references (hopefully no detached xml element exceptions)?\n\nZero, can you upload a workbook with non-consecutive drawing numbers that we could use for a unit test?", "id": 194412, "time": "2016-10-14T08:27:46Z", "creator": "onealj@apache.org", "creation_time": "2016-10-14T08:27:46Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 60255, "text": "Created attachment 34372\nexcel file after clear content, now duplicate at /xl/drawings/drawing13.xml\n\nThank Javen O'Neal, I upload the file", "id": 194414, "time": "2016-10-14T09:16:36Z", "creator": "tuyenivt@gmail.com", "creation_time": "2016-10-14T09:16:36Z", "is_private": false, "attachment_id": 34372}, {"count": 3, "tags": [], "bug_id": 60255, "text": "I think I found the bug,\nthe method getPackagePart().getPackage().getPartsByContentType(XSSFRelation.DRAWINGS.getContentType()) not load all /xl/drawings/drawing#.xml\n\nI debug with getPackagePart().getPackage(), then I found hidden drawing, \nin partList, registerPartNameStr include\n/xl/drawings/drawing1.xml, /xl/drawings/drawing2.xml, /xl/drawings/drawing3.xml, /xl/drawings/drawing4.xml, /xl/drawings/drawing5.xml, /xl/drawings/drawing6.xml, /xl/drawings/drawing7.xml, /xl/drawings/drawing8.xml, /xl/drawings/drawing9.xml, /xl/drawings/drawing10.xml, /xl/drawings/drawing11.xml, /xl/drawings/drawing12.xml, /xl/drawings/drawing13.xml, /xl/drawings/drawing14.xml, /xl/drawings/drawing15.xml, /xl/drawings/drawing16.xml, /xl/drawings/drawing17.xml, /xl/drawings/drawing18.xml, /xl/drawings/drawing19.xml, /xl/drawings/drawing20.xml, /xl/drawings/drawing21.xml, /xl/drawings/drawing22.xml, /xl/drawings/drawing23.xml, /xl/drawings/drawing24.xml, /xl/drawings/drawing25.xml, /xl/drawings/drawing26.xml, /xl/drawings/drawing27.xml, /xl/drawings/drawing28.xml\n\nbut getPackagePart().getPackage().getPartsByContentType(XSSFRelation.DRAWINGS.getContentType()) just return 1,4,7,8,12,13,16,19,20,21,24,28", "id": 194415, "time": "2016-10-14T09:37:48Z", "creator": "tuyenivt@gmail.com", "creation_time": "2016-10-14T09:37:48Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 60255, "attachment_id": null, "text": "I found reason why drawing2,3 not in list of getPackagePart().getPackage().getPartsByContentType(XSSFRelation.DRAWINGS.getContentType())\n\nIn function org.apache.poi.openxml4j.opc.OPCPackage.getPartsByContentType\n\n/xl/drawings/drawing2.xml - Content Type: application/vnd.openxmlformats-officedocument.drawingml.chartshapes+xml\n/xl/drawings/drawing3.xml - Content Type: application/vnd.openxmlformats-officedocument.drawingml.chartshapes+xml\n\nnot equals\n\nXSSFRelation.DRAWINGS.getContentType() = application/vnd.openxmlformats-officedocument.drawing+xml\n\nthen retArr added\n\nThanks for reading", "id": 194416, "time": "2016-10-14T09:48:22Z", "creator": "tuyenivt@gmail.com", "creation_time": "2016-10-14T09:48:22Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 60255, "is_private": false, "text": "edit: then part not added to retArr\nsorry", "id": 194417, "time": "2016-10-14T10:06:33Z", "creator": "tuyenivt@gmail.com", "creation_time": "2016-10-14T10:06:33Z", "attachment_id": null}, {"count": 6, "text": "Normally parts of type application/vnd.openxmlformats-officedocument.drawingml.chart+xml use the /xl/charts/chart#.xml naming scheme, but I guess this proves it doesn't always!", "bug_id": 60255, "is_private": false, "id": 194420, "time": "2016-10-14T10:12:35Z", "creator": "apache@gagravarr.org", "creation_time": "2016-10-14T10:12:35Z", "tags": [], "attachment_id": null}, {"count": 7, "tags": [], "creator": "apache@gagravarr.org", "attachment_id": null, "text": "Fixed in r1764863 - util method added to find the next available part number even with other parts claiming the \"wrong\" one, and used from the drawing creation", "id": 194421, "time": "2016-10-14T10:44:45Z", "bug_id": 60255, "creation_time": "2016-10-14T10:44:45Z", "is_private": false}, {"count": 8, "tags": [], "bug_id": 60255, "is_private": false, "text": "Thank you very much, Nick Burch", "id": 194422, "time": "2016-10-14T12:33:50Z", "creator": "tuyenivt@gmail.com", "creation_time": "2016-10-14T12:33:50Z", "attachment_id": null}, {"count": 9, "tags": [], "bug_id": 60255, "text": "(In reply to Nick Burch from comment #7)\n> r1764863\nIs there anything special about the special 9999 and 1000? Could a workbook have more drawings than this (and then POI artificially limits drawing creation to 1000)?\n\nI was thinking of something along the lines of\n\nNavigableSet<Integer> takenIDs = new TreeSet<Integer>();\nfor (PackagePart part : packages) {\n    takenIDs.add(part.getRefID());\n}\nint previous = 0;\nfor (int id : takenIDs.tailSet(1)) {\n    if (id != previous+1) {\n        // a gap was found or the taken IDs did not start at 1\n        return previous+1;\n    }\n}\n// there were no gaps in takenIDs. Assign the max taken ID + 1.\nreturn takenIDs.last() + 1;", "id": 194430, "time": "2016-10-14T14:45:38Z", "creator": "onealj@apache.org", "creation_time": "2016-10-14T14:45:38Z", "is_private": false, "attachment_id": null}, {"count": 10, "tags": [], "bug_id": 60255, "text": "The most I've seen were part numberss in the double digits, so I added an order of magnitude and rounded up! If you have a cleaner solution, please feel free to replace the logic :) Unit tests should hopefully help with that too!", "id": 194432, "time": "2016-10-14T15:01:36Z", "creator": "apache@gagravarr.org", "creation_time": "2016-10-14T15:01:36Z", "is_private": false, "attachment_id": null}, {"count": 11, "tags": [], "creator": "onealj@apache.org", "attachment_id": null, "text": "*** Bug 55516 has been marked as a duplicate of this bug. ***", "id": 194454, "time": "2016-10-15T17:11:59Z", "bug_id": 60255, "creation_time": "2016-10-15T17:11:59Z", "is_private": false}, {"count": 12, "text": "(In reply to Nick Burch from comment #10)\n> The most I've seen were part numberss in the double digits, so I added an\n> order of magnitude and rounded up! If you have a cleaner solution, please\n> feel free to replace the logic :)\n\nReplaced 1000 part limit by querying the OOXML package for the number of package parts in r1765546.", "bug_id": 60255, "is_private": false, "id": 194540, "time": "2016-10-19T07:58:45Z", "creator": "onealj@apache.org", "creation_time": "2016-10-19T07:58:45Z", "tags": [], "attachment_id": null}]