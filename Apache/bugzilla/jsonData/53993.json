[{"count": 0, "tags": [], "bug_id": 53993, "text": "During a load test of tomcat 7.0.30, we occasionally see NPEs from the AccessLogValve.  Some of the requests that are being executed as part of the load test call HttpSession.invalidate.  I mention this because the code in question appears to be susceptible to multithreaded manipulation of the session.  I think the fix should be as simple as a check for null on the return value of request.getSessionInternal.\n\nOf course, our access log pattern includes logging the session id.\n\njava.lang.NullPointerException \n    org.\u200bapache.\u200bcatalina.\u200bvalves.\u200bAccessLogValve$\u200bSessionIdElement.\u200baddElement(\u200bAccessLogValve.java:1733) \n    org.apache.catalina.valves.AccessLogValve.log(AccessLogValve.java:955) \n    org.apache.catalina.core.AccessLogAdapter.log(AccessLogAdapter.java:51) \n    org.apache.catalina.core.StandardEngine.logAccess(StandardEngine.java:332) \n    org.apache.catalina.core.ContainerBase.logAccess(ContainerBase.java:1270) \n    org.apache.catalina.core.ContainerBase.logAccess(ContainerBase.java:1270) \n    org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:441) \n    org.\u200bapache.\u200bcoyote.\u200bhttp11.\u200bAbstractHttp11Processor.\u200bprocess(\u200bAbstractHttp11Processor.java:1002) \n    org.\u200bapache.\u200bcoyote.\u200bAbstractProtocol$\u200bAbstractConnectionHandler.\u200bprocess(\u200bAbstractProtocol.java:585) \n    org.\u200bapache.\u200btomcat.\u200butil.\u200bnet.\u200bJIoEndpoint$\u200bSocketProcessor.\u200brun(\u200bJIoEndpoint.\u200bjava:\u200b312)\u200b \n    java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110) \n    java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603) \n    java.lang.Thread.run(Thread.java:722)\n\nexisting code for convenience:\n\n    protected static class SessionIdElement implements AccessLogElement {\n        @Override\n        public void addElement(StringBuilder buf, Date date, Request request,\n                Response response, long time) {\n            if (request != null) {\n                if (request.getSession(false) != null) {\n                    buf.append(request.getSessionInternal(false) // LINE 1733\n                            .getIdInternal());\n                } else {\n                    buf.append('-');\n                }\n            } else {\n                buf.append('-');\n            }\n        }\n    }\n\n\npossible fix:\n\n...\n                if (request.getSession(false) != null) {\n                    Session internalSession = request.getSessionInternal(false);\n                    if (internalSession != null) {\n                        buf.append(internalSession.getIdInternal());\n                    } else {\n                        buf.append('-');\n                    }\n                } else {\n                    buf.append('-');\n                }", "id": 162698, "time": "2012-10-11T19:56:38Z", "creator": "clucas@e-miles.com", "creation_time": "2012-10-11T19:56:38Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 53993, "attachment_id": null, "text": "Thanks for the report. Fixed in trunk and 7.0.x and will be included in 7.0.33 onwards.", "id": 162726, "time": "2012-10-13T16:00:59Z", "creator": "markt@apache.org", "creation_time": "2012-10-13T16:00:59Z", "is_private": false}]