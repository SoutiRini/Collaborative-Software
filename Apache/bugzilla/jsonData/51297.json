[{"count": 0, "tags": [], "bug_id": 51297, "attachment_id": null, "is_private": false, "id": 146753, "time": "2011-05-31T07:23:56Z", "creator": "vijay@collab.net", "creation_time": "2011-05-31T07:23:56Z", "text": "While unlocking a file forcibly using subversion client, and if the unlock is blocked by pre-unlock hook script, the client is getting \"500 Internal Server Error\" instead of the error message sent by the subversion server.\n\nSimple reproduction recipe:\n\n1. Lock a file. \"svn lock testfile.txt --username user1\"\n\n2. Make pre-unlock hook script to fail.\n\n3. Try to unlock the file forcibly as a different user. \"svn unlock testfile.txt --force --username user2\"\n\nstep 3 fails with \"500 Internal Server Error\" message.\n\nWhenever the pre-unlock hook fails, Subversion server sends the error message \"Unlock blocked by pre-unlock hook (exit \ncode 1)....\" to mod_dav. But mod_dav is not handling the error and it is not sending any error messages to \nclient side, instead it sends only HTTP_STATUS code alone(confirmed it with the following codepath). \n\nFrom dav/main/mod_dav.c: dav_method_unlock(),\n<snip>\n\n    if ((result = dav_unlock(r, resource, locktoken)) != OK) {\n        return result;\n    }\n\n</snip>\nFrom dav/main/util_lock.c: dav_unlock(),\n<snip>\n\n    err = (*repos_hooks->walk)(&ctx.w, DAV_INFINITY, &multi_status);\n\n    /* ### fix this! */\n    /* ### do something with multi_status */\n    result = err == NULL ? OK : err->status;\n\n    (*hooks->close_lockdb)(lockdb);\n\n    return result;\n\n</snip>\n\nThis walk() method finds out the resource to unlock and walker callback functin dav_unlock_walker() removes lock from that resource.\n\nFrom dav/main/util_lock.c: dav_unlock_walker(),\n<snip>\n\n    if ((err = (*ctx->w.lockdb->hooks->remove_lock)(ctx->w.lockdb,\n                                                    wres->resource,\n                                                    ctx->locktoken)) != NULL) {\n        /* ### should we stop or return a multistatus? looks like STOP */\n        /* ### add a higher-level description? */\n        return err;\n\n</snip>\n\nIn this case, unlock is blocked by pre-unlock hook, subvesion server marshalls the error back to mod_dav, mod_dav's dav_unlock_walker() returns the error sent by svn server, but dav_unlock() returns only the HTTP_STATUS code(err->status) and the error message is *lost* there."}, {"count": 1, "tags": [], "bug_id": 51297, "attachment_id": 27095, "id": 146758, "time": "2011-05-31T09:06:29Z", "creator": "vijay@collab.net", "creation_time": "2011-05-31T09:06:29Z", "is_private": false, "text": "Created attachment 27095\npatch that improves error handling during \"dav unlock\"\n\nAttaching the patch that fixes this issue.\n\nThis patch does the following things to maintain backward compatibility.\n\n1. Copied dav/main/util_lock.c: dav_unlock() to a static function do_dav_unlock() which accepts \"dav_error **err\" as an outparam and preserves any error in case of failures.\n\n2. dav_unlock() will call do_dav_unlock() and return HTTP_STATUS code in case of any failures; Otherwise return OK.(Old callers can still use this method)\n\n3.dav_unlock2() will also call do_dav_unlock() and return dav_error type in case of any failures; Otherwise return NULL.\n\n4.dav/main/mod_dav.c: dav_method_unlock() will call dav_unlock2() and *handles* the error in case of any failures."}, {"count": 2, "tags": [], "text": "Updating Keyword as \"PatchAvailable\".", "attachment_id": null, "id": 146759, "creator": "vijay@collab.net", "time": "2011-05-31T09:08:51Z", "bug_id": 51297, "creation_time": "2011-05-31T09:08:51Z", "is_private": false}]