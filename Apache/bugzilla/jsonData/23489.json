[{"count": 0, "tags": [], "bug_id": 23489, "is_private": false, "id": 44846, "attachment_id": null, "creator": "liviut@cimage.com", "creation_time": "2003-09-29T16:33:40Z", "time": "2003-09-29T16:33:40Z", "text": "When using forms that accept say ISO charsets that represents characters on 2\nbytes, even though the browser encodes them properly (e.g. %413 etc.), they are\ntranslated into the String as 2 separate characters( e.g. as if it was %41%03).\nIt works fine with UTF-8 chars as far as I can cee though."}, {"count": 1, "tags": [], "creator": "markt@apache.org", "text": "There have been many fixes to TC4 (and TC5) to address this sort of issue. I \nhave attached my standard text on this issue below.\n\nREQUESTS\n========\n\nThere are a number of situations where there may be a requirement to use non-\nUS ASCII characters in a URI. These include:\n- Parameters in the query string\n- Servlet paths\n\nThere is a standard for encoding URIs (http://www.w3.org/International/O-URL-\ncode.html) but this standard is not consistently followed by clients. This \ncauses a number of problems.\n\nThe functionality provided by Tomcat (4 and 5) to handle this less than ideal \nsituation is described below.\n\n1. The Coyote HTTP/1.1 connector has a useBodyEncodingForURI attribute which \nif set to true will use the request body encoding to decode the URI query \nparameters.\n  - The default value is true for TC4 (breaks spec but gives consistent \nbehaviour across TC4 versions)\n  - The default value is false for TC5 (spec compliant but there may be \nmigration issues for some apps)\n2. The Coyote HTTP/1.1 connector has a URIEncoding attribute which defaults to \nISO-8859-1.\n3. The parameters class (o.a.t.u.http.Parameters) has a QueryStringEncoding \nfield which defaults to the URIEncoding. It must be set before the parameters \nare parsed to have an effect.\n\nThings to note regarding the servlet API:\n1. HttpServletRequest.setCharacterEncoding() normally only applies to the \nrequest body NOT the URI.\n2. HttpServletRequest.getPathInfo() is decoded by the web container.\n3. HttpServletRequest.getRequestURI() is not decoded by container.\n\nOther tips:\n1. Use POST with forms to return parameters as the parameters are then part of \nthe request body.\n\n\nRESPONSES\n=========\n\nHTML META\n tags are ignored by Tomcat. You may use <%@ page pagEncoding=\"...\" %> for \nJSPs.", "id": 59448, "time": "2004-06-17T22:22:05Z", "bug_id": 23489, "creation_time": "2004-06-17T22:22:05Z", "is_private": false, "attachment_id": null}]