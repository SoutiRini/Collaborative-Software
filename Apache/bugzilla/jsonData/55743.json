[{"attachment_id": null, "tags": [], "creator": "f.becker@douglas.de", "text": "I disabled the tomcat shutdown port on my production systems for sanity and security reasons. I'm only using the CATALINA_PID mechanism.\n\nWhen shutting down the the tomcat server with ./shutdown.sh, nothing happens. I always have to use ./shutdown.sh -force which triggers an kill -9 internally.\n\nWhen using \"kill <tomcatpid>\", the tomcat is shutting down cleanly.\n\nIn the catalina.sh i can only find kill -0 and kill -9, but no normal kill (SIGTERM).\n\nI would expect, that the ./shutdown.sh / catalina.sh script at first sends a normal kill (15, SIGTERM), and, if the -force parameter is set, sends an kill -9 after a small timeout - but that never happens.\n\nThis problem exists with all tomcat 7 versions on 32 / 64 bit linux.", "count": 0, "id": 171053, "time": "2013-11-05T11:04:11Z", "bug_id": 55743, "creation_time": "2013-11-05T11:04:11Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 55743, "attachment_id": null, "is_private": false, "id": 171056, "time": "2013-11-05T14:40:04Z", "creator": "chris@christopherschultz.net", "creation_time": "2013-11-05T14:40:04Z", "text": "Though I don't disagree that use of CATALINA_PID should allow a normal shutdown of Tomcat when the shutdown port has been disabled (which I assume it has been in your case, even though you don't exactly say how you did it), I don't see anything in the documentation that suggests that CATALINA_PID is used to stop Tomcat under these conditions.\n\nI'm therefore marking this as an enhancement."}, {"count": 2, "tags": [], "text": "Hi,\n\nhttp://tomcat.apache.org/tomcat-7.0-doc/config/server.html \n\n\n=== Quote\nNote: Disabling the shutdown port works well when Tomcat is started using Apache Commons Daemon (running as a service on Windows or with jsvc on un*xes). It cannot be used when running Tomcat with the standard shell scripts though, as it will prevent shutdown.bat|.sh and catalina.bat|.sh from stopping it gracefully.\n=== End quote\n\nOkay, the \"It cannot be used when running Tomcat with the standard shell scripts though, as it will prevent shutdown.bat|.sh and catalina.bat|.sh from stopping it gracefully.\" describes my situation correctly.\n\nBut I'm wondering why that is implemented in this way because a normal SIGTERM causes a graceful shutdown - is there any reason why the catalina.sh doesn't send this SIGTERM?\n\nIs there a chance that this improvement will be added to the stable line of TC7? If not i'll try to patch my catalina.sh by myself.", "is_private": false, "bug_id": 55743, "id": 171058, "time": "2013-11-05T14:54:37Z", "creator": "f.becker@douglas.de", "creation_time": "2013-11-05T14:54:37Z", "attachment_id": null}, {"attachment_id": null, "tags": [], "creator": "chris@christopherschultz.net", "is_private": false, "count": 3, "id": 171065, "time": "2013-11-05T18:25:03Z", "bug_id": 55743, "creation_time": "2013-11-05T18:25:03Z", "text": "I wasn't objecting to you having filed this BZ issue: I was just changing the classification from BUG to ENHANCEMENT. I don't see why it couldn't be added.\n\nDid you want to propose a patch? They are of course always welcome.\n\nThere is no good way that I know of for the Tomcat script(s) to check for a disabled shutdown in server.xml, so perhaps having another environment variable to control that behavior is appropriate. For instance, using CATALINA_PID can be reasonably used without asking catalina.sh to send a 'kill' signal to terminate the process. So, maybe a new CATALINA_KILL_TO_SHUTDOWN env var would be appropriate."}, {"count": 4, "tags": [], "bug_id": 55743, "attachment_id": null, "is_private": false, "id": 171146, "time": "2013-11-08T16:33:12Z", "creator": "markt@apache.org", "creation_time": "2013-11-08T16:33:12Z", "text": "It should be possible to check a return value from the call to stop(). If that is non-zero and we have a pid, try that next?"}, {"attachment_id": null, "tags": [], "creator": "knst.kolinko@gmail.com", "is_private": false, "count": 5, "id": 171152, "time": "2013-11-09T05:01:47Z", "bug_id": 55743, "creation_time": "2013-11-09T05:01:47Z", "text": "(In reply to Felix Becker from comment #2)\n> \n> But I'm wondering why that is implemented in this way because a normal\n> SIGTERM causes a graceful shutdown - is there any reason why the catalina.sh\n> doesn't send this SIGTERM?\n> \n\n1. Apache Commons Daemon stops Tomcat from the \"inside\". It has direct access to JVM that runs Tomcat.  Thus no need for an external connection and that is the reason why the port may be disabled.\n\n\n2. Using SIGTERM is not guaranteed to be as clear as proper shutdown command. \n\nThere may be several shutdown hooks in the JVM. They all will be started at the same time and may suffer from a race condition.\n\nE.g. if Log4J had such a hook (very likely, but I do not know whether it has one) then it might be shut down before a web application that uses it.\n\n(In reply to Mark Thomas from comment #4)\n> It should be possible to check a return value from the call to stop(). If\n> that is non-zero and we have a pid, try that next?\n\n+1.\n\nCatalina.stopServer() already has the necessary code and exits with return code of \"1\".\n\nI was thinking whether there should be a separate return code for this use case. IMO, we do not need one. If \"stopServer()\" failed then Tomcat does not know that we tried to stop it and it is logical to try SIGTERM next.\n\nOne good thing is that with this we can stop Tomcats that are in the process of starting up and have not opened the shutdown port yet."}, {"attachment_id": null, "tags": [], "creator": "markt@apache.org", "text": "This has been fixed in 8.0.x for 8.0.0 onwards and in 7.0.x for 7.0.51 onwards.", "count": 6, "id": 172334, "time": "2014-01-13T15:28:49Z", "bug_id": 55743, "creation_time": "2014-01-13T15:28:49Z", "is_private": false}]