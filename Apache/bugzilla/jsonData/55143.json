[{"count": 0, "tags": [], "bug_id": 55143, "attachment_id": 30483, "id": 168031, "time": "2013-06-25T12:48:34Z", "creator": "nickytd@gmail.com", "creation_time": "2013-06-25T12:48:34Z", "is_private": false, "text": "Created attachment 30483\nWsSession patch\n\nCurrent implementation in WsSession skips checks for custom decoders when addMessageHandler is called for a programmatic endpoint. The same checks are performed for annotated pojos. Here I attach a sample (as there are multiple way of implementing this) and would like to hear your opinion. \n\ncheers\nniki"}, {"count": 1, "tags": [], "creator": "markt@apache.org", "text": "The specification is not particularly clear on this but the discussion in the EG was explicit.\n\nThe only permitted values of T in MessageHandler are those the WsSession implementation checks for. Developers are responsible for any decoding.\n\nThis restriction may be relaxed in a later version of the specification but reviewing the discussion any such relaxation is very likely to create lots of  nasty edge cases. Any such relaxation is going to have to be very carefully thought through.", "id": 168036, "time": "2013-06-25T14:35:57Z", "bug_id": 55143, "creation_time": "2013-06-25T14:35:57Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 55143, "attachment_id": null, "text": "Thanks Mark. From the spec text this is not obvious at all. May I ask if such discussion exists and respective decision is made to be added to the next revision of the spec? May be we can improve the error of the exception as well.", "id": 168043, "time": "2013-06-25T15:34:19Z", "creator": "nickytd@gmail.com", "creation_time": "2013-06-25T15:34:19Z", "is_private": false}, {"count": 3, "attachment_id": null, "creator": "nickytd@gmail.com", "is_private": false, "id": 168048, "time": "2013-06-25T16:14:43Z", "bug_id": 55143, "creation_time": "2013-06-25T16:14:43Z", "tags": [], "text": "Please close it again if you find it as inpropriate. I'd like to continue the discussion on this topic (just to keep everything on same place):\nHere I attach a sample war file (decoder.war) that when deployed on WebSocket RI (glassfish4) handles endpoint just fine:\nOutput\tGlassfish4 \n\nsystem:\tconnection established, ws://localhost:8181/decoder/pep\ncommand:\t/binary test\nsent:\t<4B of binary data>           74 65 73 74                                        |test            |\n\nreceived:\t<4B of binary data>   74 65 73 74                                        |test            |\n\nOn Tomcat 8 sample example produces\nSEVERE: Error reading request, ignored\njava.lang.IllegalArgumentException: Unable to add the message handler [pd.mh.AppMessageHandler@2cb5e028] as it was for the unrecognised type [class pd.bean.StringBean]\n\tat org.apache.tomcat.websocket.WsSession.addMessageHandler(WsSession.java:182)\n\nThe RI is normative and if the spec text is unclear then the implementation should be correct. If that is not the case here then  RI and the spec should be changed IMHO, otherwise we should implement the same behaviour in Tomcat 8.\nOpinions ?"}, {"count": 4, "tags": [], "bug_id": 55143, "attachment_id": 30484, "text": "Created attachment 30484\ndecoder.war", "id": 168049, "time": "2013-06-25T16:16:15Z", "creator": "nickytd@gmail.com", "creation_time": "2013-06-25T16:16:15Z", "is_private": false}, {"count": 5, "attachment_id": null, "creator": "markt@apache.org", "text": "The spec is defined by the doc plus Javadoc. Anything else (TCK, RI, EG lists) merely provides indications of how the spec has been interpreted by others and/or what was intended but ultimately, only the spec counts.\n\nI've had a quick scan though the archives and I can't find the discussion I'm sure I had with the EG lead on this. I've found some related discussions. I'll spend some more time digging.", "id": 168052, "time": "2013-06-25T18:44:27Z", "bug_id": 55143, "creation_time": "2013-06-25T18:44:27Z", "tags": [], "is_private": false}, {"count": 6, "attachment_id": null, "creator": "markt@apache.org", "is_private": false, "id": 168053, "time": "2013-06-25T19:15:28Z", "bug_id": 55143, "creation_time": "2013-06-25T19:15:28Z", "tags": [], "text": "Bingo! Found it and it is my memory that is at fault. The Javadoc for MessageHandler Whole<T> and Partial<T> have explicit lists of the values that are permitted for T.\n\nLooking at the code again, there appear to be several issues including the one raised here."}, {"count": 7, "attachment_id": null, "creator": "markt@apache.org", "text": "The WAR is helpful, but any chance you could convert your WAR to Tomcat unit test? The more cases the unit test or tests can cover the better.\n\nThe ideal would be once that includes cover for the following:\nCircle extends Shape\nSquare extends Shape\n\nProgrammatic endpoint with MessageHandler<Shape>, Decoder.Text<Circle> and Decoder.Binary<Square>\n\nand a similar annotated endpoint.\n\nI'm sure there are other 'interesting' edge cases along similar themes. Any additional cases you can include in the test case would be incredibly helpful.", "id": 168065, "time": "2013-06-26T12:14:51Z", "bug_id": 55143, "creation_time": "2013-06-26T12:14:51Z", "tags": [], "is_private": false}, {"count": 8, "attachment_id": null, "creator": "nickytd@gmail.com", "text": "yep I'll prepare a change", "id": 168069, "time": "2013-06-26T12:44:39Z", "bug_id": 55143, "creation_time": "2013-06-26T12:44:39Z", "tags": [], "is_private": false}, {"count": 9, "tags": [], "bug_id": 55143, "attachment_id": null, "id": 168070, "time": "2013-06-26T13:07:21Z", "creator": "markt@apache.org", "creation_time": "2013-06-26T13:07:21Z", "is_private": false, "text": "Thanks. Current trunk should have fixed this now. I'll leave the issue open until your test case is complete."}, {"count": 10, "attachment_id": null, "creator": "nickytd@gmail.com", "is_private": false, "id": 168097, "time": "2013-06-27T14:18:33Z", "bug_id": 55143, "creation_time": "2013-06-27T14:18:33Z", "tags": [], "text": "Here is an extension of my favourite TestEncodingDecoding which validates the original case. Mark if you want we can close this issue. \nHowever I will continue on this topic in two directions:\n1. I spotted an issue when switched to MsgBytes instead of MsgString and will look further.\n\nThe scenario you describe with message handler for a given user class and decoder/encoders dedicated to subclasses kind of fail on the RI as well. But will check it carefully. The javadoc is a bit unclear on the matter. It just refers to a type without further explanation. May we can support this case if we revert the isAssignable check when we do the iterations over the decoders. I'll look into this as well."}, {"count": 11, "tags": [], "bug_id": 55143, "attachment_id": 30491, "id": 168098, "creation_time": "2013-06-27T14:19:09Z", "time": "2013-06-27T14:19:09Z", "creator": "nickytd@gmail.com", "text": "Created attachment 30491\nTestEncodingDecoding patch", "is_private": false}, {"count": 12, "attachment_id": null, "creator": "markt@apache.org", "is_private": false, "id": 168100, "time": "2013-06-27T14:48:45Z", "bug_id": 55143, "creation_time": "2013-06-27T14:48:45Z", "tags": [], "text": "Thanks for the patch.\n\nThe code has been a bit of a moving target over that last few days. You might want to make sure you have the latest version.\n\nIf you do find any more issues, please do open a new bug report.\n\nCheers,\n\nMark"}]