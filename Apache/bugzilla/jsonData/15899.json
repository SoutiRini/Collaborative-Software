[{"count": 0, "tags": [], "bug_id": 15899, "attachment_id": null, "text": "General:\n\nIn using org.apache.log4j.net.SocketServer on internal machines that don't have \nDNS or host entries, I realized that I won't be able to set the remote \nconfiguration files with a IP based name (ie. 192.168.1.10.lcf).  I assume that \nmost name resolution will return an IP if a host name does not exist.  So \ncurrently SocketServer attempts to look for a configuration file named \".lcf\" \nif no host name is found for the remote host writing to it.\n\nTested environment:\n\nSuSE Linux 8.0 Pro\nSun's JDK 1.4.1-rc-b19, Client VM, mixed mode\nLog4j 1.2.7\n\nCommand:\n\njava -cp .:log4j.jar org.apache.log4j.SocketServer 3000 conf .\n\nInvestigation:\n\nSocketServer current assumes that java.net.InetAddress.toString() will always \nreturn a host/ip string in the format \"host.name.net/D1.D2.D3.D4\" .  If \njava.net.InetAddress.toString() returns \"/D1.D2.D3.D4\", then the file name is \nset to empty string.\n\nProposed solution/patch:\n\nThe following patch will have SocketServer check for an empty sting and if \ntrue, return the other portion of that string without the trailing leading \nslash ultimatly setting the configuration file name to the IP address with \na .lcf extention:\n\n--- SocketServerorig.java\tFri Jan  3 19:42:08 2003\n+++ SocketServer.java\tFri Jan  3 19:42:08 2003\n@@ -70,7 +70,7 @@\n \n  @since 1.0 */\n \n-public class SocketServerorig {\n+public class SocketServer {\n \n     static String GENERIC = \"generic\";\n     static String CONFIG_FILE_EXT = \".lcf\";\n@@ -143,7 +143,7 @@\n \n \n     public\n-            SocketServerorig(File directory) {\n+            SocketServer(File directory) {\n         this.dir = directory;\n         hierarchyMap = new Hashtable(11);\n     }\n@@ -161,7 +161,16 @@\n                     \"]. Using default hierarchy.\");\n             return genericHierarchy();\n         } else {\n-            String key = s.substring(0, i);\n+\n+            String key = null;\n+\n+            //  This will return the IP string if there is no host\n+ name.\n+\n+            if (i == 0) {\n+                key = s.substring(1);\n+            } else {\n+                key = s.substring(0, i);\n+            }\n \n             File configFile = new File(dir, key + CONFIG_FILE_EXT);\n             if (configFile.exists()) {", "id": 29030, "time": "2003-01-08T19:29:47Z", "creator": "jonathan.cowherd@genscape.com", "creation_time": "2003-01-08T19:29:47Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 15899, "attachment_id": null, "text": "Tested same configuration on a windows 2000 machine without name resolution and \nstring returned from java.net.InetAddress.toString() \nlists \"D1.D2.D3.D4/D1.D2.D3.D4\" opposed to \"/D1.D2.D3.D4\" on Linux. This seems \nto be a difference in the implementations of Sun's java JVM on Linux versus \nwindows 2000.  So the recommended patch is more of a work around to the JVM's \nbug opposed to a problem with log4j.\n\nI used JDK1.3.1_06 for Linux and Windows in this test.\n\nI'll submit this issue to Sun.\n\nJonathan", "id": 31711, "time": "2003-02-20T23:06:56Z", "creator": "jonathan.cowherd@genscape.com", "creation_time": "2003-02-20T23:06:56Z", "is_private": false}, {"count": 2, "tags": [], "creator": "jonathan.cowherd@genscape.com", "text": "I made the mistake of reporting that this is a bug with JVM 1.3.1_06 when I  \nactually was using version 1.4.1 .  This is more of a JVM 1.4 compatibility \nissue that a bug in log4j.  In version 1.4, Sun has change the way that \nInetAddress.toString() worked, and instead of returning a IP, it will return a \nempty String if a hostname can not be resolved. \n  \nhttp://java.sun.com/j2se/1.4.1/docs/api/java/net/InetAddress.html#toString()  ", "id": 33178, "time": "2003-03-14T07:34:53Z", "bug_id": 15899, "creation_time": "2003-03-14T07:34:53Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 15899, "attachment_id": null, "text": "OK, then.", "id": 68357, "time": "2004-12-13T16:30:29Z", "creator": "yoavs@computer.org", "creation_time": "2004-12-13T16:30:29Z", "is_private": false}]