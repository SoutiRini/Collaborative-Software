[{"count": 0, "tags": [], "creator": "giedrius.noreikis@gmail.com", "text": "When executed concurrently in several threads, org.apache.xml.security.keys.KeyInfo.getX509Certificate() occasionally returns null.\n\n\nThe log entries made from the failing thread are:\n--------------------------------------------------\n2008-05-13T20:21:50\norg.apache.xml.security.keys.KeyInfo\ngetX509CertificateFromInternalResolvers\nStart getX509CertificateFromInternalResolvers() with 0 resolvers\n--------------------------------------------------\n2008-05-13T20:21:50\norg.apache.xml.security.keys.KeyInfo\ngetX509Certificate\nI couldn't find a X509Certificate using the per-KeyInfo key resolvers\n--------------------------------------------------\n2008-05-13T20:21:50\norg.apache.xml.security.keys.KeyInfo\ngetX509CertificateFromStaticResolvers\nStart getX509CertificateFromStaticResolvers() with 7 resolvers\n--------------------------------------------------\n2008-05-13T20:21:50\norg.apache.xml.security.keys.keyresolver.implementations.X509SKIResolver\nengineLookupResolveX509Certificate\nCan I resolve X509Data?\n--------------------------------------------------\n2008-05-13T20:21:50\norg.apache.xml.security.keys.keyresolver.implementations.X509SKIResolver\nengineLookupResolveX509Certificate\nI can't\n--------------------------------------------------\n2008-05-13T20:21:50\norg.apache.xml.security.keys.keyresolver.implementations.X509SubjectNameResolver\nengineLookupResolveX509Certificate\nCan I resolve X509Data?\n--------------------------------------------------\n2008-05-13T20:21:50\norg.apache.xml.security.keys.keyresolver.implementations.X509SubjectNameResolver\nengineLookupResolveX509Certificate\nI can't\n--------------------------------------------------\n2008-05-13T20:21:50\norg.apache.xml.security.keys.keyresolver.implementations.X509IssuerSerialResolver\nengineLookupResolveX509Certificate\nCan I resolve X509Data?\n--------------------------------------------------\n2008-05-13T20:21:50\norg.apache.xml.security.utils.ElementProxy\n<init>\nsetElement(\"X509Data\", \"http://www.w3.org/2000/09/xmldsig#\")\n--------------------------------------------------\n2008-05-13T20:21:50\norg.apache.xml.security.keys.KeyInfo\ngetX509Certificate\nI couldn't find a X509Certificate using the system-wide key resolvers\n--------------------------------------------------\n\nPossible cause:\nKeyInfo.getX509CertificateFromStaticResolvers() operates on org.apache.xml.security.keys.keyresolver.KeyResolver class: it iterates through all KeyResolver items, trying to applyCurrentResolver(), and, in case of success, calls KeyResolver.hit().\nWhen getX509CertificateFromStaticResolvers() in Thread-1 founds a \"good\" resolver at iteration, say, i=5, and calls hit(), that resolver is moved at the beginning of the static KeyResolver._resolverVector list. If Thread-2 at the same time executes getX509CertificateFromStaticResolvers() at iteration, say, i=3, it will never see that resolver.\n\nPossible fix:\nWith the present design, it seems, KeyResolver can not support item() and hit() methods together, since hit() changes the order of the _resolverVector items. Either hit() should be removed or a copy of _resolverVector should be made before accessing it's elements.", "id": 116574, "attachment_id": null, "bug_id": 44991, "creation_time": "2008-05-13T11:25:48Z", "time": "2008-05-13T11:25:48Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 44991, "is_private": false, "text": "Thanks for the report. I don't found it, but you are right. I forgot to use the pointer of the old list to make the RCU working.\nWith this change it should work and shouldn't be more concurrency problems.\nThis change is already commited to CVS head.\n\nThanks again\n\nIndex: src/org/apache/xml/security/keys/keyresolver/KeyResolver.java\n===================================================================\n--- src/org/apache/xml/security/keys/keyresolver/KeyResolver.java\t(revision 657575)\n+++ src/org/apache/xml/security/keys/keyresolver/KeyResolver.java\t(working copy)\n@@ -123,9 +123,11 @@\n            Element element, String BaseURI, StorageResolver storage)\n               throws KeyResolverException {\n \n-      for (int i = 0; i < KeyResolver._resolverVector.size(); i++) {\n+\t  // use the old vector to not be hit by updates\n+\t  List resolverVector = KeyResolver._resolverVector;\n+      for (int i = 0; i < resolverVector.size(); i++) {\n \t\t  KeyResolver resolver=\n-            (KeyResolver) KeyResolver._resolverVector.get(i);\n+            (KeyResolver) resolverVector.get(i);\n \n \t\t  if (resolver==null) {\n             Object exArgs[] = {\n@@ -165,10 +167,11 @@\n    public static final PublicKey getPublicKey(\n            Element element, String BaseURI, StorageResolver storage)\n               throws KeyResolverException {\n-\n-      for (int i = 0; i < KeyResolver._resolverVector.size(); i++) {\n+\t  \n+\t  List resolverVector = KeyResolver._resolverVector;\n+      for (int i = 0; i < resolverVector.size(); i++) {\n \t\t  KeyResolver resolver=\n-            (KeyResolver) KeyResolver._resolverVector.get(i);\n+            (KeyResolver) resolverVector.get(i);\n \n \t\t  if (resolver==null) {\n             Object exArgs[] = {\n@@ -186,7 +189,7 @@\n          if (cert!=null) {\n         \t if (i!=0) {\n             \t //update resolver.        \t\t \n-        \t\t List resolverVector=(List)((ArrayList)_resolverVector).clone();        \t\t   \t\t \n+        \t\t resolverVector=(List)((ArrayList)_resolverVector).clone();        \t\t   \t\t \n \t\t  \t\t Object ob=resolverVector.remove(i);\n \t\t  \t\t resolverVector.add(0,ob);\n    \t\t \t\t _resolverVector=resolverVector;\n", "id": 116775, "time": "2008-05-18T10:12:45Z", "creator": "raul-info@r-bg.com", "creation_time": "2008-05-18T10:12:45Z", "attachment_id": null}, {"count": 2, "text": "Sorry the patch only change half of the problem. I'm working in a solution but it should be in the like of returning a list for iteration.\nI will create a single thread unit testing. \nThanks again", "bug_id": 44991, "attachment_id": null, "id": 116780, "time": "2008-05-18T12:16:27Z", "creator": "raul-info@r-bg.com", "creation_time": "2008-05-18T12:16:27Z", "tags": [], "is_private": false}, {"count": 3, "tags": [], "creator": "giedrius.noreikis@gmail.com", "text": "Created attachment 21978\nKeyResolverVector\n\nYes, copying just a *reference* to the *same* object changes nothing - returned list must be a copy of the *object*, which will not be affected by the subsequent updates.\n\nReproducing this bug is not easy (nevertheless, it appears in our production from time to time). I create 100 threads, each sleeps random time before proceeding, and repeat the procedure 100 times. Almost always it fails at some iteration.\n\nIn case you are interested in my solution, I attach the files (I couldn't wait any longer, 'cause I had to fix this bug in our system). I decided to introduce a new class - KeyResolverVector - to encapsulate the shared resource and the synchronized methods for accessing it. Of course, KeyResolver and KeyInfo had to be adjusted accordingly.\n\nRegards,\nGiedrius", "id": 116783, "attachment_id": 21978, "bug_id": 44991, "creation_time": "2008-05-18T13:15:15Z", "time": "2008-05-18T13:15:15Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 44991, "attachment_id": null, "text": "Hi Giedrius,\n\nCould you resubmit your fix as a patch (and tick the patch box)?\n\nI think I'd prefer to keep the Iterator implementation in KeyResolver, for API backwards compatibility reasons, but this can be easily done.\n\nColm.", "id": 128236, "time": "2009-06-24T10:14:49Z", "creator": "coheigea@apache.org", "creation_time": "2009-06-24T10:14:49Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 44991, "attachment_id": null, "text": "Hi Colm,\n\nI proposed this fix because I had to fix the problem in our production immediately and I couldn't wait for the Raul's solution to come.\n\nIt was more than a year ago. I've tried to recover the history of fixing the bug:\n1. Initially this bug was \"fixed\" in rev.657592 (http://svn.apache.org/viewvc?view=rev&revision=657592) at 2008-05-18 17:15:25 UTC.\n2. At 2008-05-18 20:16:27 UTC Raul posted the comment above, promising another solution with iterators.\n3. I implemented my own fix before 2008-05-18 21:15:15 UTC.\n4. The promised fix from Raul followed at 2008-05-26 17:43:10 UTC (http://svn.apache.org/viewvc?view=rev&revision=660248).\n\nSo I guess the bug should fixed by now, though I've never tested that solution. Anyway, since ResolverIterator is already implemented in KeyResolver, it hardly makes sense to apply the old patch now. It would be nice to run some concurrency tests against the current version, but I will have some time for this only after a month. For the time being, I'd suggest to mark this as fixed.\n\nGiedrius", "id": 128349, "time": "2009-06-27T07:47:20Z", "creator": "giedrius.noreikis@gmail.com", "creation_time": "2009-06-27T07:47:20Z", "is_private": false}, {"count": 6, "tags": [], "bug_id": 44991, "attachment_id": null, "is_private": false, "id": 128383, "time": "2009-06-29T03:22:58Z", "creator": "coheigea@apache.org", "creation_time": "2009-06-29T03:22:58Z", "text": "\nMarking as fixed as per Giedrius' suggestion."}]