[{"count": 0, "tags": [], "creator": "john@johncorrigan.net", "attachment_id": null, "id": 37491, "time": "2003-05-20T17:59:07Z", "bug_id": 20073, "creation_time": "2003-05-20T17:59:07Z", "is_private": false, "text": "Unable to use message.setContent( messageText, encodingType ) method without\ntriggering an exception when trying to send the e-mail.  This occurs in both\n4.1.24 and 4.1.18 and both the example servlet (SendMailServlet) and code I created.\n\n\nENCOUNTERED EXCEPTION: javax.mail.SendFailedException: Sending failed; nested\nexception is: javax.mail.MessagingException: IOException while sending message;\nnested exception is: javax.activation.UnsupportedDataTypeException: no object\nDCH for MIME type text/plain\n\njavax.mail.SendFailedException: Sending failed;\n  nested exception is: \n\tjavax.mail.MessagingException: IOException while sending message;\n  nested exception is: \n\tjavax.activation.UnsupportedDataTypeException: no object DCH for MIME type\ntext/plain\n\tat javax.mail.Transport.send0(Transport.java:219)\n\tat javax.mail.Transport.send(Transport.java:81)\n\tat SendMailServlet.doPost(SendMailServlet.java:75)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:760)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:853)\n\tat\norg.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:247)\n\tat\norg.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:193)\n\tat\norg.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:260)\n\tat\norg.apache.catalina.core.StandardPipeline$StandardPipelineValveContext.invokeNext(StandardPipeline.java:643)\n\tat org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:480)\n\tat org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:995)\n\tat\norg.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)\n\tat\norg.apache.catalina.core.StandardPipeline$StandardPipelineValveContext.invokeNext(StandardPipeline.java:643)\n\tat\norg.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:493)\n\tat\norg.apache.catalina.core.StandardPipeline$StandardPipelineValveContext.invokeNext(StandardPipeline.java:641)\n\tat org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:480)\n\tat org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:995)\n\tat org.apache.catalina.core.StandardContext.invoke(StandardContext.java:2415)\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:180)\n\tat\norg.apache.catalina.core.StandardPipeline$StandardPipelineValveContext.invokeNext(StandardPipeline.java:643)\n\tat\norg.apache.catalina.valves.ErrorDispatcherValve.invoke(ErrorDispatcherValve.java:170)\n\tat\norg.apache.catalina.core.StandardPipeline$StandardPipelineValveContext.invokeNext(StandardPipeline.java:641)\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:172)\n\tat\norg.apache.catalina.core.StandardPipeline$StandardPipelineValveContext.invokeNext(StandardPipeline.java:641)\n\tat org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:480)\n\tat org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:995)\n\tat\norg.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:174)\n\tat\norg.apache.catalina.core.StandardPipeline$StandardPipelineValveContext.invokeNext(StandardPipeline.java:643)\n\tat org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:480)\n\tat org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:995)\n\tat org.apache.coyote.tomcat4.CoyoteAdapter.service(CoyoteAdapter.java:223)\n\tat org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:432)\n\tat\norg.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.processConnection(Http11Protocol.java:386)\n\tat org.apache.tomcat.util.net.TcpWorkerThread.runIt(PoolTcpEndpoint.java:534)\n\tat\norg.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run(ThreadPool.java:530)\n\tat java.lang.Thread.run(Thread.java:536)"}, {"count": 1, "attachment_id": null, "bug_id": 20073, "is_private": false, "id": 45836, "time": "2003-10-17T14:15:32Z", "creator": "arobert@cogsci.ucsd.edu", "creation_time": "2003-10-17T14:15:32Z", "tags": [], "text": "Came across this problem with own code invoking JavaMail, using Tomcat 4.1.24 on Mac OS X, \nusing smtp to localhost sendmail.  Same code, jars, environment, etc. works correctly on Tomcat \n4.1.24 and 4.1.18 on Linux and Solaris.\n\nVerified that mail.jar (including the 'mailcap' meta-inf file) is on classpath, and classes from the jar \nare being loaded.  For example, you can explicitly load com.sun.mail.handlers.text_plain before \nattempting to use the JavaMail package, to no avail."}, {"count": 2, "tags": [], "text": "Hi,\n\nOur client also got the exactly same exception.\nTheir environment is Tomcat 4.1.12 with:\n   mail.jar\n   activation.jar\ninstalled in:\n   ${catalina.home}/shared/lib\nEven we placed these JAR files into:\n   (docBase)/WEB-INF/lib\nwe still had the same problem.\nAs you pointed, the implementation of DataContentHandler is available within\n\"activation.jar\".\nSo, I investigated how JavaMail API (Transport class) get DataContentHandler...\nAccording to the Java Doc of Java Activation Framework, DataContentHandler is\navailable within CommandMap object.\nOn the CommandMap object, we can query the DataContentHandler object appropriate\nfor the specified mime-type String.\nThe code fragment will look like this:\n\n    CommandMap cmap=CommandMap.getDefaultCommandMap();\n    DataContentHandler dch=cmap.createDataContentHandler(\"text/plain\");\n\nThe return value of the first line is always \"MailCapCommandMap\".\nTo create the appropriate DataContentHandler for the given mime-type,\n\"MailCapCommandMap\" searched the mailcap file in the several places.\nAccording to the Java Doc of Java Activation Framework again, the last place to\nbe searched is:\n   META-INF/mailcap.default\nthat should exist within \"activation.jar\" in usual case.\nI extracted the \"activation.jar\", but\n   META-INF/mailcap.default\nexists in fact, and its contents also look fine...\n\nThe question here is... What prevents this mailcap to be loaded?\nThe answer on our case is SecurityManager!\n\nIf I understand Servlet Spec correctly, the classes marked as \"Java Extension\"\nshould be searched by the parent class-loader at first.\nSo, when we place \"activation.jar\" into:\n   ${catalina.home}/shared/lib\nall the classes in Java Activation Framework will be loaded from this JAR file,\neven if we place it also in:\n   (docBase)/WEB-INF/lib\nBut, with SecurityManager enabled, the classes loaded from:\n   ${catalina.home}/shared/lib/activation.jar\nneed the \"read\" permission for:\n   ${catalina.home}/shared/lib/activation.jar!META-INF/mailcap.default\n\nWe updated:\n   ${catalina.home}/conf/catalina.policy\nand add:\n   grant codeBase \"file:${catalina.home}/shared/lib/activation.jar\" {\n      permission java.io.FilePermission \"/usr/local/tomcat418/shared/lib/-\",\"read\";\n   };\nAnd the problem gone way.\n\nI'm not sure about the details of your environment, but if you run your Tomcat\nwith SecurityManager, the my solution may help you too.\nAny questions are welcome to me.\n\n----------------------\nHappy Java programming!\n\nJun Inamori\nOOP-Reserch Corporation\nE-mail: jun@oop-reserch.com\nURL:    http://www.oop-reserch.com/", "is_private": false, "bug_id": 20073, "id": 47923, "time": "2003-11-22T15:20:03Z", "creator": "jun@oop-reserch.com", "creation_time": "2003-11-22T15:20:03Z", "attachment_id": null}, {"count": 3, "tags": [], "creator": "jun@oop-reserch.com", "attachment_id": null, "id": 47938, "time": "2003-11-22T21:05:09Z", "bug_id": 20073, "creation_time": "2003-11-22T21:05:09Z", "is_private": false, "text": "Hi again,\n\nI was somewhat confused in my previous message.\nThe definition of mime-type and DCH should be:\n   META-INF/mailcap\nin \"mail.jar\", not\n   META-INF/mailcap.default\nin \"activation.jar\".\nAnd the required entity in \"catalina.policy\" will look like this:\n   grant codeBase \"file:${catalina.home}/shared/lib/activation.jar\" {\n      permission java.io.FilePermission\n\"/usr/local/jakarta-tomcat-4.1.12-LE-jdk14/shared/lib/mail.jar\",\"read\";\n   };\n\nAnyway, I re-wrote my message...\n-------------------------------------------------\n\nAs you did, our client got the exception like this:\n\njavax.mail.SendFailedException: Sending failed;\n  nested exception is: \n\tjavax.mail.MessagingException: IOException while sending message;\n  nested exception is: \n\tjavax.activation.UnsupportedDataTypeException: no object DCH for MIME type\ntext/plain\n\tat javax.mail.Transport.send0(Transport.java:219)\n\nTo re-produce it on our development machine, I tried several configurations.\nAnd only when I start Tomcat with ScurityManager, I got the same one.\n\"DCH\" is short hand of DataContentHandler, and it is responsible for creating\nthe binary stream that will be sent to the SMTP server.\nBecause there are many kinds of mail body, the several implementations are\nincluded in \"mail.jar\".\nFor example, \"mail.jar\" shipped with the DataContentHandler for \"text/plain\" and\n\"image/jpeg\".\nWhen \"javax.mail.Transport\" tries to send the e-mail, it creates the\nDataContentHandler implementation appropriate for the mime-type of the out-going\ne-mail.\nThe mapping between the mime-map and the class name of DataContentHandler is\ndefined by:\n   META-INF/mailcap\nin \"mail.jar\", and this \"mailcap\" is read by CommandMap object.\nFor example, to create DataContentHandler implementation for \"text/plain\", your\ncode will look like this:\n\n    CommandMap cmap=CommandMap.getDefaultCommandMap();\n    DataContentHandler dch=cmap.createDataContentHandler(\"text/plain\");\n\nThen, CommandMap object reads:\n   META-INF/mailcap\nfrom \"mail.jar\", and creates the DataContentHandler object for \"text/plain\".\nThis is what is done by \"javax.mail.Transport\" to send the e-mails.\n\nBy the way, where CommandMap comes from?\nIts fully qualified class name is:\n   javax.activation.CommandMap\nYes, this class is included in \"activation.jar\".\nAccording to Servlet Spec, the classes marked as \"Java Extension\" should be\nsearched by the parent class-loader at first, rather than by the class-loader\nfor each web application.\nSo, when we place \"activation.jar\" into:\n   ${catalina.home}/shared/lib\nall the classes in Java Activation Framework will be loaded from this JAR file,\neven if we place it also in:\n   (docBase)/WEB-INF/lib\n\nTo read:\n   META-INF/mailcap\nfrom:\n   ${catalina.home}/shared/lib/mail.jar\nCommandMap object from:\n   ${catalina.home}/shared/lib/activation.jar\nneeds the \"read\" permission to:\n   ${catalina.home}/shared/lib/mail.jar\n\nTo make it possible, \"catalina.policy\" should include the entity like:\n\n   grant codeBase \"file:${catalina.home}/shared/lib/activation.jar\" {\n      permission java.io.FilePermission\n\"/usr/local/jakarta-tomcat-4.1.12-LE-jdk14/shared/lib/mail.jar\",\"read\";\n   };\n\nIn addition, \"mail.jar\" in:\n   ${catalina.home}/shared/lib\nneeds the Socket permission to access the SMTP server.\nSo, \"catalina.policy\" also need the entities like:\n\n   grant codeBase \"file:${catalina.home}/shared/lib/mail.jar\" {\n      permission java.net.SocketPermission \"localhost\", \"connect,resolve\";\n   };\n\nI'm not sure about the details of your environment, but if you run your Tomcat\nwith SecurityManager, the my solution may help you too.\nAny questions are welcome to me.\n\nBest regards,\n----------------------\nHappy Java programming!\n\nJun Inamori\nOOP-Reserch Corporation\nE-mail: jun@oop-reserch.com\nURL:    http://www.oop-reserch.com/"}, {"count": 4, "tags": [], "creator": "glenn@apache.org", "attachment_id": null, "id": 48024, "time": "2003-11-24T16:55:01Z", "bug_id": 20073, "creation_time": "2003-11-24T16:55:01Z", "is_private": false, "text": "This is not a bug in Tomcat bug a misconfigured catalina.policy for\nusing the JavaMail API.\n"}, {"count": 5, "tags": [], "bug_id": 20073, "attachment_id": null, "text": "In fact, there is another possible cause for this problem depending on the platform:\n\non Mac OS X (server), the existence of a different version of \"activation.jar\" in /Library/Java/\nExtensions will cause this error, and no amount of catalina.policy manipulation will clear it up.  The \nsolution is to remove /Library/Java/Extensions/activation.jar .  (Not sure if this causes other \nproblems on the system, haven't run into any yet.)\n", "id": 49369, "time": "2003-12-18T18:52:14Z", "creator": "arobert@cogsci.ucsd.edu", "creation_time": "2003-12-18T18:52:14Z", "is_private": false}]