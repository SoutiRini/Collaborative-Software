[{"attachment_id": null, "tags": [], "bug_id": 46274, "text": "XSLT throws a build exception \"no resources specified\" when it is called with a nested file set which is empty (has no matching files).  This is inconsistent because XSLT does not throw exceptions when the same fileset is given in an implicit manner.\n\nI believe that the code within the execute method of \norg.apache.tools.ant.taskdefs.XSLTProcess.java is too harsh.  Here is where the exception is being thrown:\n\n> if (useImplicitFileset) {\n>    ...\n> } else { // only resource collections, there better be some\n>    if (resources.size() == 0) {\n>       throw new BuildException(\"no resources specified\");\n>    }\n> }\n> processResources(xslResource);\n\nI am uncertain exactly why resources is empty when the fileset is empty and not empty otherwise.  However, stopping the build is too drastic an action when a simple log message would suffice as a warning.  The processResources method doesn't crash on an empty resources.\n\nBelow is an example build.xml which illustrates the problem. In my real build.xml, I use an explicit fileset because I want to re-use a pre-defined fileset through refid.  XSLT works well when the refid'd fileset contains at least one file; the build comes to a halt otherwise.  This causes problems.\n\nThe XSLT task does not support refid attributes.  And, even if it did, I would prefer to use a nested fileset because there are too many attributes in that task already.\n\n------------------\nC:\\>type build.xml\n<project>\n    <target name=\"foo\">\n        <mkdir dir=\"junk\"/>\n        <touch file=\"junk/temp.xsl\"/>\n\n        <xslt\n            destdir=\"junk\"\n            style=\"junk/temp.xsl\"\n            basedir=\"junk\"\n        >\n            <include name=\"missing-file\"/>\n        </xslt>\n\n        <xslt\n            destdir=\"junk\"\n            style=\"junk/temp.xsl\"\n            useImplicitFileset=\"no\"\n        >\n            <fileset file=\"junk/missing-file\"/>\n        </xslt>\n    </target>\n</project>\nC:\\>ant -v foo\nApache Ant version 1.7.0 compiled on December 13 2006\nBuildfile: build.xml\nDetected Java version: 1.5 in: C:\\PROGRA~1\\IBM\\Java50\\jre\nDetected OS: Windows Server 2003\nparsing buildfile C:\\build.xml with URI = file:/C:/build.xml\nProject base dir set to: C:\\\nBuild sequence for target(s) `foo' is [foo]\nComplete build sequence is [foo, ]\n\nfoo:\n[antlib:org.apache.tools.ant] Could not load definitions from resource org/apache/tools/ant/antlib.xml. It could not be found.\n    [mkdir] Created dir: C:\\junk\n    [touch] Creating C:\\junk\\temp.xsl\n     [xslt] Using class org.apache.tools.ant.taskdefs.optional.TraXLiaison\n     [xslt] Transforming into C:\\junk\n     [xslt] Using class org.apache.tools.ant.taskdefs.optional.TraXLiaison\n\nBUILD FAILED\nC:\\build.xml:18: no resources specified\n        at org.apache.tools.ant.taskdefs.XSLTProcess.execute(XSLTProcess.java:367)\n        at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:288)\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n        at java.lang.reflect.Method.invoke(Method.java:615)\n        at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:105)\n        at org.apache.tools.ant.Task.perform(Task.java:348)\n        at org.apache.tools.ant.Target.execute(Target.java:357)\n        at org.apache.tools.ant.Target.performTasks(Target.java:385)\n        at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1329)\n        at org.apache.tools.ant.Project.executeTarget(Project.java:1298)\n        at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n        at org.apache.tools.ant.Project.executeTargets(Project.java:1181)\n        at org.apache.tools.ant.Main.runBuild(Main.java:698)\n        at org.apache.tools.ant.Main.startAnt(Main.java:199)\n        at org.apache.tools.ant.launch.Launcher.run(Launcher.java:257)\n        at org.apache.tools.ant.launch.Launcher.main(Launcher.java:104)\n\nTotal time: 0 seconds\nC:\\>", "count": 0, "id": 122772, "time": "2008-11-24T05:02:40Z", "creator": "gjfdh@yahoo.com", "creation_time": "2008-11-24T05:02:40Z", "is_private": false}, {"count": 1, "tags": [], "creator": "bodewig@apache.org", "text": "While I agree that the behavior for resource collections and the implicit fileset are different, resource collections have worked that way since 1.7.0 (i.e. since xslt supported them) and still do in 1.7.1.\n\nIf we changed the behavior to just log a warning, we might break existing builds that rely on the process to fail.\n\nWe'll need a separate attribute to control behavior, I'm afraid.", "id": 122782, "time": "2008-11-24T08:09:25Z", "bug_id": 46274, "creation_time": "2008-11-24T08:09:25Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "text": "svn revision 720862 adds a failOnNoResources attribute.", "is_private": false, "id": 122867, "creator": "bodewig@apache.org", "time": "2008-11-26T06:24:25Z", "bug_id": 46274, "creation_time": "2008-11-26T06:24:25Z", "attachment_id": null}]