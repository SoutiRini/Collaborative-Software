[{"count": 0, "tags": [], "bug_id": 58319, "is_private": false, "id": 184922, "attachment_id": null, "creator": "yilong.li@runtimeverification.com", "creation_time": "2015-09-03T09:50:47Z", "time": "2015-09-03T09:50:47Z", "text": "Reported by RV-Predict (a dynamic race detector) when running the test suite:\n\nData race on field java.util.ArrayList.$state: {{{\nConcurrent write in thread T98 (locks held: {Monitor@5e5cc762})\n ---->  at org.apache.catalina.valves.TesterAccessLogValve.log(TesterAccessLogValve.java:48)\n        at org.apache.catalina.core.AccessLogAdapter.log(AccessLogAdapter.java:51)\n        at org.apache.catalina.core.ContainerBase.logAccess(ContainerBase.java:1042)\n        at org.apache.catalina.connector.CoyoteAdapter.event(CoyoteAdapter.java:245)\n        at org.apache.coyote.http11.Http11NioProcessor.event(Http11NioProcessor.java:106)\n        at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:661)\n        at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1527)\n        at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1484)\n        - locked Monitor@5e5cc762 at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1483)\n        at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\n    T98 is created by T90\n        at java.util.concurrent.ThreadPoolExecutor.addWorker(ThreadPoolExecutor.java:1010)\n\nConcurrent read in thread T1 (locks held: {})\n ---->  at org.apache.catalina.valves.TesterAccessLogValve.validateAccessLog(TesterAccessLogValve.java:79)\n        at org.apache.catalina.comet.TestCometProcessor.doSimpleCometTest(TestCometProcessor.java:347)\n        at org.apache.catalina.comet.TestCometProcessor.testSimpleCometClientEndFail(TestCometProcessor.java:261)\n        at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n        at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n        at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n        at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n        at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\n        at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)\n        at org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:55)\n        at org.junit.rules.RunRules.evaluate(RunRules.java:20)\n        at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n        at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n        at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n        at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n        at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n        at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n        at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n        at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n        at junit.framework.JUnit4TestAdapter.run(JUnit4TestAdapter.java:38)\n        at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:532)\n        at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:1165)\n        at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:1016)\nT1 is the main thread\n}}}\n\nLooks like TesterAccessLogValve.entries is accessed from multiple threads without proper synchronization."}, {"count": 1, "tags": [], "bug_id": 58319, "attachment_id": null, "id": 184924, "time": "2015-09-03T10:26:43Z", "creator": "markt@apache.org", "creation_time": "2015-09-03T10:26:43Z", "is_private": false, "text": "The way the tests are written it is extremely unlikely that this could ever be a problem. I certainly don't recall any test failures triggered by something along these lines.\n\nJust to be safe, I've switched the ist for a ConcurrentLinkedQueue in trunk, 8.0.x and 7.0.x."}]