[{"count": 0, "tags": [], "creator": "jm@ccn.net", "attachment_id": null, "id": 46631, "time": "2003-11-02T10:45:38Z", "bug_id": 24331, "creation_time": "2003-11-02T10:45:38Z", "is_private": false, "text": "Problem:\nWhen setting up a SSL VHost the SSLPassPhraseDialog exec: binary _always_ gets\nthe default port 443 in argv.\nIf there are more SSL VHosts with same IP/Name and different ports in httpd.conf\ni got no chance to figure out the correct PassPhrase for this particular Vhost\nbacause they all get port 443 in argv.\n\nPossible solution:\nIn ssl_util.c: ssl_util_vhostid tries to get the port of the actual VHost from\ns->port. s->port is always 0 so DEFAULT_HTTPS_PORT is returned. I did some\nchanges in ssl_util.c so ssl_util_vhostid returs s->addrs->host_port instead of\ns->port which works fine for me.\n\nhttpd.conf snippet:\n<IfDefine SSL>\n       SSLPassPhraseDialog exec:/usr/local/bin/get_passphrase\n</IfDefine>\n\nListen 192.168.9.1:444\nListen 192.168.9.1:445\n<VirtualHost 192.168.9.1:444>\n    ......\n    SSLCertificateFile fl1.crt\n    SSLCertificateKeyFile fl1.key\n    ......\n</VirtualHost>\n<VirtualHost 192.168.9.1:445>\n    ......\n    SSLCertificateFile fl2.crt\n    SSLCertificateKeyFile fl2.key\n    ......\n</VirtualHost>\n\nchanges in ssl_util.c:\n*** ssl_util.c  Sun Nov  2 00:09:01 2003\n--- /usr/local/apache-2.0.47/src/httpd-2.0.47/modules/ssl/ssl_util.c  Fri May 16\n20:12:19 2003\n***************\n*** 80,97 ****\n      apr_port_t port;\n  \n      host = s->server_hostname;\n!     if (s->addrs->host_port != 0)\n!         port = s->addrs->host_port;\n      else {\n!         if (s->port != 0)\n!             port = s->port;\n!         else {\n!             sc = mySrvConfig(s);\n!             if (sc->enabled)\n!                 port = DEFAULT_HTTPS_PORT;\n!             else\n!                 port = DEFAULT_HTTP_PORT;\n!         }\n      }\n      id = apr_psprintf(p, \"%s:%lu\", host, (unsigned long)port);\n      return id;\n--- 80,93 ----\n      apr_port_t port;\n  \n      host = s->server_hostname;\n!     if (s->port != 0)\n!         port = s->port;\n      else {\n!         sc = mySrvConfig(s);\n!         if (sc->enabled)\n!             port = DEFAULT_HTTPS_PORT;\n!         else\n!             port = DEFAULT_HTTP_PORT;\n      }\n      id = apr_psprintf(p, \"%s:%lu\", host, (unsigned long)port);\n      return id;"}, {"count": 1, "tags": [], "bug_id": 24331, "text": "Could you please post a unified diff (diff -u).", "id": 47465, "time": "2003-11-17T03:24:37Z", "creator": "mads@apache.org", "creation_time": "2003-11-17T03:24:37Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 24331, "attachment_id": null, "text": "I changed it in 2.0.48 but the ssl_util_vhostid function hasn't been changed\nbetween 2.0.47 and 2.0.48.\n\nmy diff -u output:\n\n--- ssl_util.c  Fri May 16 20:12:19 2003\n+++ /usr/local/apache-2.0.48/src/httpd-2.0.48/modules/ssl/ssl_util.c      Sun\nNov  2 00:09:01 2003\n@@ -80,14 +80,18 @@\n     apr_port_t port;\n \n     host = s->server_hostname;\n-    if (s->port != 0)\n-        port = s->port;\n+    if (s->addrs->host_port != 0)\n+        port = s->addrs->host_port;\n     else {\n-        sc = mySrvConfig(s);\n-        if (sc->enabled)\n-            port = DEFAULT_HTTPS_PORT;\n-        else\n-            port = DEFAULT_HTTP_PORT;\n+        if (s->port != 0)\n+            port = s->port;\n+        else {\n+            sc = mySrvConfig(s);\n+            if (sc->enabled)\n+                port = DEFAULT_HTTPS_PORT;\n+            else\n+                port = DEFAULT_HTTP_PORT;\n+        }\n     }\n     id = apr_psprintf(p, \"%s:%lu\", host, (unsigned long)port);\n     return id;\n\n\n\n\nThe complete CHANGED function in ssl_util.c:\n\nchar *ssl_util_vhostid(apr_pool_t *p, server_rec *s)\n{\n    char *id;\n    SSLSrvConfigRec *sc;\n    char *host;\n    apr_port_t port;\n\n    host = s->server_hostname;\n    if (s->addrs->host_port != 0)\n        port = s->addrs->host_port;\n    else {\n        if (s->port != 0)\n            port = s->port;\n        else {\n            sc = mySrvConfig(s);\n            if (sc->enabled)\n                port = DEFAULT_HTTPS_PORT;\n            else\n                port = DEFAULT_HTTP_PORT;\n        }\n    }\n    id = apr_psprintf(p, \"%s:%lu\", host, (unsigned long)port);\n    return id;\n}", "id": 47487, "time": "2003-11-17T09:51:08Z", "creator": "jm@ccn.net", "creation_time": "2003-11-17T09:51:08Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 24331, "attachment_id": null, "id": 56447, "time": "2004-04-27T04:11:53Z", "creator": "warp-9.9@usa.net", "creation_time": "2004-04-27T04:11:53Z", "is_private": false, "text": "Same exact problem under Linux, so it's probably ALL platforms, ALL OS.  I don't\nneed this to work, yet, but for people that depend on this functionality, the\nproblem is more critical, so priority should be higher than \"Other\" I think, so\nit gets some attention.  ;-)  This does not appear to be fixed in 2.0.49 either."}, {"count": 4, "tags": [], "bug_id": 24331, "attachment_id": null, "id": 56448, "time": "2004-04-27T04:16:16Z", "creator": "warp-9.9@usa.net", "creation_time": "2004-04-27T04:16:16Z", "is_private": false, "text": "Oh, btw, it was a bug in 2.0.48 as well.  Changed version to current, 2.0.49."}, {"count": 5, "tags": [], "text": "FYI,\n\nI can confirm this very same behavior for 2.0.50 compiling it on AIX 5L.\nI too only need one virtualhost for the time being.\n\n", "attachment_id": null, "id": 63542, "creation_time": "2004-09-14T19:20:09Z", "time": "2004-09-14T19:20:09Z", "creator": "shortt@cgicafe.com", "bug_id": 24331, "is_private": false}, {"count": 6, "tags": [], "bug_id": 24331, "attachment_id": null, "id": 63543, "time": "2004-09-14T19:36:53Z", "creator": "shortt@cgicafe.com", "creation_time": "2004-09-14T19:36:53Z", "is_private": false, "text": "\nMy comment was a bit terse. I should elaborate a bit further. The behavior I \nhave experienced is that my script does not get called with any arguments.\nNo hostname or port number. So if I had multiple IP's and multiple hostnames \non port 443, they would not work either.\n\nI have compiled apache 2.0.50 with openssl 0.9.6m on AIX 5L.\n\nI have verified it with the following script, my work around is\nsimply echo out the password. I have this same script in place on a server \nusing Apache 1.3.27 with multiple virtual hosts on port 443. I only have more \ncases in my case statement.\n\n# ===== BEGIN = script\nPATH=''; export PATH;\n\nOPT=$1\n\n# NOTE: It is best output this password without a newline.\n#       This can be different on many operating systems.\n#\n#   Solaris use:    /usr/ucb/echo -n \"<password>\"\n#   AIX use:        /usr/bin/echo \"<password>\\c\"\n#   Linux use:      /bin/echo -n \"<password>\"\n#\n\n#kms 08/17/2004 - used for debugging.\n/usr/bin/echo \"OPT:[$OPT]\">>/usr/local/scripts/apache/opt.log;\n\n/usr/bin/echo \"password\\c\"\nexit;\n\n#\n#case $OPT in\n#\n#        hostname.santized.com)\n#\n#                /usr/bin/echo \"password\\c\"\n#                ;;                      \n#\n#        *)\n#                /usr/bin/echo \"USAGE:    $0 servername:port\"\n#                exit\n#                ;;\n#esac    \n\n\n# ===== END = script"}, {"count": 7, "tags": [], "text": "Created attachment 13453\nThis is a much more simplified version.  if->else if->else", "is_private": false, "id": 66881, "creator": "warp-9.9@usa.net", "time": "2004-11-14T18:31:37Z", "bug_id": 24331, "creation_time": "2004-11-14T18:31:37Z", "attachment_id": 13453}, {"count": 8, "tags": [], "bug_id": 24331, "attachment_id": null, "text": "Your perseverance in following this up is appreciated, Leif!\n\nBut (and this won't be what you want to hear :) I can't reproduce the problem\nwith the trunk, and it looks like s->port *should* be getting set up correctly\nalready in vhost.c's ap_parse_vhost_addrs:\n\n    if (s->addrs) {\n        if (s->addrs->host_port) {\n            /* override the default port which is inherited from main_server */\n            s->port = s->addrs->host_port;\n        }\n    }\n\nI'm not sure whether there's something different in your config which triggers\nthis, maybe something has changed between 2.0.x and the trunk, or maybe I'm just\nmissing something.", "id": 67985, "time": "2004-12-06T16:59:31Z", "creator": "jorton@redhat.com", "creation_time": "2004-12-06T16:59:31Z", "is_private": false}, {"count": 9, "tags": [], "text": "(In reply to comment #8)\n> Your perseverance in following this up is appreciated, Leif!\n\nThanks!  Just trying to make sure it's fixed, and if so, one less bug!\n\nEither way it's good news if it's fixed.  \n\n> I can't reproduce the problem with the trunk\n\n2.0 or 2.1?  The code in both was exactly the same in the affected part when I\nlast looked at both 2.0-HEAD amd 2.1-HEAD.  Unless I am looking in the wrong\nplaces, which is possible.  However, I am positive that the bug did exist in\n2.0.48-49, and the code in this section hadn't changed.  Maybe a fix was made\nelsewhere.\n\n2.0-HEAD:\nhttp://cvs.apache.org/viewcvs.cgi/httpd-2.0/modules/ssl/ssl_util.c?view=markup\n\n2.1-HEAD:\nhttp://svn.apache.org/repos/asf/httpd/httpd/trunk/modules/ssl/ssl_util.c\n \n> and it looks like s->port *should* be getting set up correctly\n> already in vhost.c's ap_parse_vhost_addrs:\n> \n>     if (s->addrs) {\n>         if (s->addrs->host_port) {\n>             /* override the default port which is inherited from main_server */\n>             s->port = s->addrs->host_port;\n>         }\n>     }\n\nThat looks familiar.  Maybe the vhost.c was not setting the s->addrs->host_port\nbefore, and this was a duplicate of that bug?  Where the bug report for that, I\nwonder?  I'll definitely check it again.\n\n> I'm not sure whether there's something different in your config which triggers\n> this, maybe something has changed between 2.0.x and the trunk, or maybe I'm just\n> missing something.\n\nThis bug may be the symptom of larger problem.  Or maybe some bug exists in\nbetween server/vhost.c:ap_parse_vhost_addrs and\nmodules/ssl/ssl_util.c:ssl_util_vhostid .", "is_private": false, "id": 68014, "creation_time": "2004-12-07T02:38:35Z", "time": "2004-12-07T02:38:35Z", "creator": "warp-9.9@usa.net", "bug_id": 24331, "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 24331, "is_private": false, "count": 10, "id": 68017, "time": "2004-12-07T03:22:06Z", "creator": "jorton@redhat.com", "creation_time": "2004-12-07T03:22:06Z", "text": "Ah, OK, from the config fragments you sent me, the difference is whether or not\nthe port is explicitly configured in the ServerName directive.  With \"ServerName\nwww.foo.com\" s->port ends up as zero, indeed, clearing the s->port setting from\nthe address in the VirtualHost directive."}, {"count": 11, "tags": [], "bug_id": 24331, "attachment_id": null, "is_private": false, "id": 68021, "time": "2004-12-07T04:02:30Z", "creator": "warp-9.9@usa.net", "creation_time": "2004-12-07T04:02:30Z", "text": "(In reply to comment #10)\n> Ah, OK, from the config fragments you sent me, the difference is whether or not\n> the port is explicitly configured in the ServerName directive.  With \"ServerName\n> www.foo.com\" s->port ends up as zero, indeed, clearing the s->port setting from\n> the address in the VirtualHost directive.\n\nOk, so the question I guess, should the port be taken from the <VirtualHost\nip:port> (if specified), or ServerName host:port?  Should it be checked that it\nis specified nowhere (ok, assume whatever you're listening on, default port 80\nor 443, however that is determined), both places the same (ok: if listening),\none place but not the other (ok if listening), or in both places if different\n(error, regardless of listening).  How does it get the IP address correctly and\nnot always assume one IP address, when I listen to * or 0.0.0.0 ?  Should I try\nmy hand fiddling with vhost.c?  Or should there be an error raised if a port is\nspecified in one place but not the other?\n\nMy own order of preference (regarding ip:port in VirtualHost and ServerName\ndirectives):\n\n1) a) defined nowhere, use default\n   b) defined in VirtualHost, not ServerName, use VirtualHost if Listening to\nip:port\n   c) defined in ServerName, not VirtualHost, use ServerName if Listening to ip:port\n   d) not defined in VirtualHost or ServerName, use default\n   e) defined in both VirtualHost and ServerName, but different, error out with\nhelpful message\n\n2) If not listening to a default port, port must be specified and the same in\nboth VirtualHost and ServerName\n   a) port specified in VirtualHost but not ServerName, error\n   b) port not specified in VirtualHost, but is defined in ServerName, error\n   c) specified in VirtualHost and ServerName, but different, error\n\nThe first is more forgiving of config errors but maybe harder to code?  The\nsecond is simpler to code, but not so forgiving of config errors and requires\nsomewhat redundant config.  I specify the port once for the Listen, once for the\nVirtualHost, so why doesn't ServerName inherit from the virtualHost in which it\nresides?\n\nAnd, thanks a lot for the help with this little snafu!"}, {"count": 12, "tags": [], "bug_id": 24331, "attachment_id": null, "text": "I think, you have a logical problem here.\nIn Apache 2, ServerName defines the *canonical name and port* of a host. If you\nomit the port, it's chosen for you to be default (80 or 443). And this port is\npassed to the pp dialog tool.\n\nIf you think about it, that perfectly makes sense. Consider a host, which is\nreachable on different ports (<VirtualHost ip1:port1 ip2:port2>. Which one is\npassed to the dialog tool? The canonical hostname and port -- defined by servername.\n\nI think, we should just leave it as is.", "id": 68034, "time": "2004-12-07T10:25:59Z", "creator": "nd@perlig.de", "creation_time": "2004-12-07T10:25:59Z", "is_private": false}, {"count": 13, "tags": [], "bug_id": 24331, "attachment_id": null, "text": "Ha, Andre collided with me making the same conclusion :)\n\nThe only thing which contradicts this is the vhost.c code which *does* set\ns->port to the port of the first-specified address, albeit only until the\nServerName directive sans port is processed and resets it.  But that code is a\nleft-over from 1.3.", "id": 68035, "time": "2004-12-07T10:32:45Z", "creator": "jorton@redhat.com", "creation_time": "2004-12-07T10:32:45Z", "is_private": false}, {"attachment_id": null, "tags": [], "bug_id": 24331, "is_private": false, "count": 14, "id": 71616, "time": "2005-02-28T16:35:20Z", "creator": "jorton@redhat.com", "creation_time": "2005-02-28T16:35:20Z", "text": "I think the conclusion here was NOTABUG: you must specify the port in the\nServerName directive, otherwise you get the default port."}, {"count": 15, "attachment_id": null, "creator": "warp-9.9@usa.net", "text": "> I think the conclusion here was NOTABUG: you must specify the port in the\n> ServerName directive, otherwise you get the default port.\n\nThis probably is a feature enhancement for the config parsing, as it should be\nfixed once there, and not in every other module.  So the RESOLVED/WONTFIX makes\nsense here and hopefully plenty of explanation for anyone who's curious.  And if\nanyone really just needs this specific module to work without specifying the\nServerName port number, the patches are here.\n\nWhile this will work with specifying the ServerName port (as indicated in the\ndocs), I still think that it is redundant to require the port when it will be\nthe same as the one specified for the VirtualHost.  I think for the case with\none IP:port pair, the port should be inherited from the VirtualHost context.\n\nIt would never make sense to do this, would it?\n\n<VirtualHost 1.2.3.4:4300>\n    ServerName foo:9999\n</VirtualHost>\n\nIf the only reason the ServerName port is specified is to make sure that it is\nthe same as the one specified for the VirtualHost, then it's redundant.  If the\nServerName port within a VirtualHost is not set, then it can be made the same as\nthe VirtualHost.  It's neither confusing nor redundant nor expensive to do so,\nso I don't see the problem.", "id": 71622, "time": "2005-02-28T17:58:25Z", "bug_id": 24331, "creation_time": "2005-02-28T17:58:25Z", "tags": [], "is_private": false}]