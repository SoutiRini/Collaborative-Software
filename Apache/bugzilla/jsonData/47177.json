[{"count": 0, "tags": [], "text": "mod_proxy rewrites a received request of \nGET http://[2001:4860:a005::84]/search?q=cache:KD9mYbWwEgkJ:www.apache.org/+apache&cd=1&hl=en&ct=clnk HTTP/1.1\nHost: [2001:4860:a005::84]\n\ninto \n\nGET /search?q=cache:KD9mYbWwEgkJ:www.apache.org/+apache&cd=1&hl=en&ct=clnk HTTP/1.1\nHost: 2001:4860:a005::84\n\nWhich is incorrect, loosely according to RFC 3986 (for URI syntax), (http://tools.ietf.org/html/rfc3986), that says \"A host identified by an Internet Protocol literal address, version 6 [RFC3513] or later, is distinguished by enclosing the IP literal within square brackets (\"[\" and \"]\")\".\n\nThe right way to do it would be to use\nGET /search?q=cache:KD9mYbWwEgkJ:www.apache.org/+apache&cd=1&hl=en&ct=clnk HTTP/1.1\nHost: [2001:4860:a005::84]\n\nThis behaviour can be worked around by using \"ProxyPreserveHost On\", but that should be the default behaviours. \n\nThis behaviour leads to infinite redirection in servers that detect the error and redirect to http://[2001:4860:a005::84]/search... (like Google Web Server when used for caching)", "attachment_id": null, "id": 126909, "creator": "cgbraschi@gmail.com", "time": "2009-05-09T06:48:19Z", "bug_id": 47177, "creation_time": "2009-05-09T06:48:19Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 47177, "attachment_id": null, "id": 126910, "time": "2009-05-09T06:50:22Z", "creator": "cgbraschi@gmail.com", "creation_time": "2009-05-09T06:50:22Z", "is_private": false, "text": "I don't mean to say ProxyPreserveHost On\" should be the default behaviour, is that not stripping brackets should be the default behaviour"}, {"count": 2, "tags": [], "bug_id": 47177, "attachment_id": null, "id": 126926, "time": "2009-05-10T23:24:06Z", "creator": "cgbraschi@gmail.com", "creation_time": "2009-05-10T23:24:06Z", "is_private": false, "text": "Referring to the HTTP/1.1 spec, it is clear that a Host: IPv6 field cannot be sent without brackets, as it would be then ambiguous if it contains or not a :port part.\nhttp://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.23"}, {"count": 3, "tags": [], "bug_id": 47177, "text": "mod_proxy_http.c\n\nA naive and untested fix (I'm sorry, but I don't have a developer environment to test it), borrowing from the proxy_http_canon function, would be to change function ap_proxy_http_request in this way. \n\nfrom:\n    if (conf->preserve_host == 0) {\n        if (uri->port_str && uri->port != DEFAULT_HTTP_PORT) {\n            buf = apr_pstrcat(p, \"Host: \", uri->hostname, \":\", uri->port_str,\n                              CRLF, NULL);\n        } else {\n            buf = apr_pstrcat(p, \"Host: \", uri->hostname, CRLF, NULL);\n        }\n    }\n\nto \n    if (conf->preserve_host == 0) {\n        if (ap_strchr_c(uri->hostname, ':')) { /* if literal IPv6 address */\n            if (uri->port_str && uri->port != DEFAULT_HTTP_PORT) {\n                buf = apr_pstrcat(p, \"Host: [\", uri->hostname, \"]:\", \n                                  uri->port_str, CRLF, NULL);\n            } else {\n                buf = apr_pstrcat(p, \"Host: [\", uri->hostname, \"]\", CRLF, NULL);\n            }\n        } else {\n            if (uri->port_str && uri->port != DEFAULT_HTTP_PORT) {\n                buf = apr_pstrcat(p, \"Host: \", uri->hostname, \":\", \n                                  uri->port_str, CRLF, NULL);\n            } else {\n                buf = apr_pstrcat(p, \"Host: \", uri->hostname, CRLF, NULL);\n            }\n        }\n    }\n\nI'm not sure if a more architectural fix having apr_uri_parse function leaving the brackets for IPv6 hostnames would be better, as they are always required to be there in URIs... but that means apr_uri and all of the code depending on apr_uri to be fixed....", "id": 126928, "time": "2009-05-11T00:17:43Z", "creator": "cgbraschi@gmail.com", "creation_time": "2009-05-11T00:17:43Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "creator": "nick@webthing.com", "attachment_id": null, "text": "Your patch looks fine to me.  Fixed in trunk in r778531.\n\nThere may be a similar issue with ProxyRemote and literal ipv6 addresses: I haven't checked for it.", "id": 127395, "time": "2009-05-25T16:22:12Z", "bug_id": 47177, "creation_time": "2009-05-25T16:22:12Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 47177, "text": "Changelog shows fixed in 2.2.12", "id": 133125, "time": "2009-12-26T14:41:52Z", "creator": "nick@webthing.com", "creation_time": "2009-12-26T14:41:52Z", "is_private": false, "attachment_id": null}, {"count": 6, "tags": [], "bug_id": 47177, "text": "*** Bug 46195 has been marked as a duplicate of this bug. ***", "id": 134453, "time": "2010-02-12T08:08:50Z", "creator": "nick@webthing.com", "creation_time": "2010-02-12T08:08:50Z", "is_private": false, "attachment_id": null}]