[{"count": 0, "tags": [], "bug_id": 34828, "text": "This is the preview of the HSSFFormulaEvaluator. The design is modular, so\nanybody should be able to contribute the Excel function library implementation.\nCurrently about 20-30 functions are implemented (admittedly buggy).\nComments invited. \n\nREADME.txt follows:\n*** WARNING: This is a work in progress  :) ***\n\n\n\n*********************** TESTING *********************\nQuick Test:\nNo JUnit tests are provided as of now. For a quick test (and guaranteed results)\nuse eclipse!\nAfter applying patch to HEAD, go to \n                   xxxxxx.hssf.usermodel.HSSFFormulaEvaluator\nThis class has a main method so it can be run from eclipse.\nBe sure you adjust the file path that is hard coded in the main method to point\nto the included\ntest excel.\n\nThe HSSFFormulaEvaluator interface is not complete so as of now there is only\none method that\nyou can use in case you want to do custom testing: \n                   evaluateToString(formula, sheet, wb)\n\n\n\n****************** BLAH *******************\n\nBasic description:\n1. Take the cell formula string, parse it into RPN tokens using FormulaParser.\n2. For each RPN token:\n   If it is operation token, pop the numberOfOperands reqd by this operation \n     Create approproate OperationEval instance and perform the operation by\ncalling \"evaluate\"\n   If it is an AreaPtg token, evaluate every cell in the area, create 1D Array\nof values, put values there\n     For area tokens, use AreaEval to store the reference to AreaPtg and the\narray of values.\n     Push AreaEval.\n   If it is ReferencePtg token, evaluate it, put the ReferencePtg and the value\nin RefEval. \n     Push RefEval.\n   Else, it is one of IntPtg, NumberPtg, StringPtg, BoolPtg -> these are pushed on \n     Push a ValueEval\n3. Eventually there will be just one token on stack (if all goes well).\n   This can either be NumericEval, StringEval or RefEval.\n   for RefEval, one more step is required to extract the inner ValueEval\n4. Done.\n\n\n****************** BLAH BLAH *******************\n\nFile/Class organization:\n0. Formulatokens are mapped to Eval impls\n1. Base interface for all Evals is.... \"Eval\" !!!\n2. This is extended as follows:\n   \n   ValueEval extends Eval: For value elements (ie. not operations)\n   OperationEval extends Eval: For operation elements\n   \n   NumericValueEval extends ValueEval: For value elements that can be directly\nevaluated as numbers\n   StringValueEval extends ValueEval: For value elements that can be directly\nevaluated as strings\n   ErrorEval extends ValueEval: Error values\n   \n   AddEval, SubtractEval etc. implement OperationEval: Individual operations\n   FunctionEval implements OperationEval: For special operations that are functions\n   \n   FuncVarEval extends FunctionEval: Operations that are functions.\n     Note: this is because I dont know what FuncPtg does. In case I need it, I\nwill extend FuncPtg from FunctionEval. \n     Hence I have FunctionEval\n   \n   *** functions ***\n   functions are in package: xxxxx.hssf.record.formula.functions\n   Base interface is Function\n   DefaultFunctionImpl extends Function: For functions that are not yet implemented.\n     default behavious is to return ErrorEval (resutls in the entire value being\nan error of type FUNCTION_NOT_IMPLEMENTED.\n   Individual function classes extend from DefaultFunctionImpl.", "id": 74641, "time": "2005-05-10T00:17:29Z", "creator": "amolweb@yahoo.com", "creation_time": "2005-05-10T00:17:29Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 34828, "attachment_id": 14977, "id": 74642, "time": "2005-05-10T00:18:25Z", "creator": "amolweb@yahoo.com", "creation_time": "2005-05-10T00:18:25Z", "is_private": false, "text": "Created attachment 14977\nPATCH on HEAD for FormulaEvaluator functionality"}, {"count": 2, "tags": [], "bug_id": 34828, "is_private": false, "id": 74650, "creation_time": "2005-05-10T05:36:31Z", "time": "2005-05-10T05:36:31Z", "creator": "amolweb@yahoo.com", "text": "Created attachment 14979\n[PATCH] Overrides previous patch, default impl of all function classes\n\nThis patch has all of previous patch and:\n1. Impl of all core classes in xxxxx.function.eval is now complete\n2. Default impl for *all* function classes is added\n   (defalt impl is to return an error value)", "attachment_id": 14979}, {"count": 3, "tags": [], "bug_id": 34828, "is_private": false, "text": "This is good! I like it:) Thanks Amol.\n\nA couple of q's\n\n1. I realise you're going thru hoops to decouple this, thanks.. i'm sure this\nwill turn out to be a good decision in the long run. However, I was wondering if\nmaking the Evals extend Ptgs may not be a better option than delegating. Will it\nsave some typing, and get rid of the ugly  MAP? Alternately, if  delegating,\ndoes it makes sense to implement the delegate attribute and the common methods\n(such as getNumberofOperands) in an abstract base class? I must admit I havent\nthought these thru  completely. \n\n2. Should the function implementations be in one big class as individual\nmethods, or as separate classes (which in any case have only one method)? What\nis easier to code/maintain?\n\n3. This will need enormous testing before we expect this to be used in\nproduction. We will essentially need to test complete excel math. So people, if\nyou are interested in this feature in POI, writing tests for this is the\nsimplest way to contribute. Also, we need unit tests first, rather than\nfunctional tests.. ie, test the POI functionality in isolation, without reading\nand writing excel files. Functional tests will necessarily be less in number. \n\n4. Amol, could you teach eclipse not to add default comments, and remove the\nones that are currently there. It just adds noise. the \"non-javadoc @see ...\"\nstuff... \n\nOnce again, amol, great piece of work.\n\n\n", "id": 74659, "time": "2005-05-10T13:37:33Z", "creator": "avik@apache.org", "creation_time": "2005-05-10T13:37:33Z", "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 34828, "is_private": false, "count": 4, "id": 74672, "time": "2005-05-10T16:43:00Z", "creator": "amolweb@yahoo.com", "creation_time": "2005-05-10T16:43:00Z", "text": "**** **** **** **** **** **** **** **** ****  **** \n**** Note: I goofed up a bit on the second    **** \n**** version of the patch #14979              **** \n**** As a result, you may have to apply the   **** \n**** patch to /src/scratchpad/src instead of  **** \n**** the root folder                          ****\n**** **** **** **** **** **** **** **** ****  **** \n\nAvik, Thanks for the encouraging response\n\n1. Ptg and Eval: Delegating or extending?\nInitially I had an impl that added hooks into *Ptgs to get/store values.\nBut with input from you and Andy I realised that integrating tightly with Ptgs\nwould mean that the code could not go in until it was completely tested (read a\nlong long time :)\n\nIMHO, having Evals separate from Ptg is not too bad since there are only so many\n*Evals and  all the important Evals have been covered. Delegation has the\nadvantage (in this case atleast) of decoupling FormulaParser from\nFormulaEvaluator. But I guess extending from Ptg could also work...\n\n2. Functions in one class or one class per function?\nHonestly, I did not give this much thought when I designed - I just assumed one\nclass per function was superior. Thinking about it now, it seems like multiple\nfunctions in one class is an alternative - though wrt maintainability i think it\nwould be easier to test-develop-maintain individual classes than one big class.\nSome of the function implementations themselves can be quite big themselves, so\none huge class would be /really/ huge. Also one function per class should make\nit easier to organize unit tests.\nUnless one class per function causes problems, I'd vote for one class per function.\n\n3. Testing...\nUnit testing would be a big effort. Almost as big as writing individual\nfunctions, a distributed effort would be great!\n\n4. My eclipse...\nYeah, sorry about that. I have two different versions of eclipse, I still havent\ntaught one of them not to do the default comments :) \n\n5. Under contruction:\nThe work on core eval classes is not yet \"complete\". I think there is need for a\nBlankEval class to handle empty cells - which are currently being handled as\nStringEval(\"\")."}, {"attachment_id": 14992, "tags": [], "bug_id": 34828, "is_private": false, "count": 5, "id": 74700, "time": "2005-05-11T06:02:35Z", "creator": "amolweb@yahoo.com", "creation_time": "2005-05-11T06:02:35Z", "text": "Created attachment 14992\nPATCH file zipped, several bugs in core fixed\n\nBlankEval introduced, Removed eclipse generated comments, Core classes bug\nfixes done, RelationalOperators implemented as per excel (not Oo)."}, {"count": 6, "tags": [], "bug_id": 34828, "attachment_id": 15012, "id": 74817, "time": "2005-05-12T18:29:05Z", "creator": "amolweb@yahoo.com", "creation_time": "2005-05-12T18:29:05Z", "is_private": false, "text": "Created attachment 15012\nHSSF User's Guide to the FormulaEvaluator\n\nuser api guide. comments invited. current patch #14992 does NOT reflect this\nuser api - next patch will."}, {"count": 7, "tags": [], "creator": "amolweb@yahoo.com", "attachment_id": 15013, "is_private": false, "id": 74818, "time": "2005-05-12T18:31:19Z", "bug_id": 34828, "creation_time": "2005-05-12T18:31:19Z", "text": "Created attachment 15013\nHSSF User's Guide to the FormulaEvaluator\n\nsorry, wrong file uploaded earlier :("}, {"count": 8, "tags": [], "text": "Created attachment 15014\nHSSF Contributors Guide to the FormulaEvaluator\n\ndev guide. Overview of design and info on how to contribute function\nimplementation. May change. Comments welcome.", "is_private": false, "bug_id": 34828, "id": 74819, "time": "2005-05-12T18:33:46Z", "creator": "amolweb@yahoo.com", "creation_time": "2005-05-12T18:33:46Z", "attachment_id": 15014}, {"count": 9, "attachment_id": 15015, "bug_id": 34828, "text": "Created attachment 15015\nSheet for test data\n\nSheet for entering test data. Test code has already been written. See dev guide\nfor more info on how to use the sheet. Comments invited.", "id": 74820, "time": "2005-05-12T18:36:49Z", "creator": "amolweb@yahoo.com", "creation_time": "2005-05-12T18:36:49Z", "tags": [], "is_private": false}, {"count": 10, "tags": [], "bug_id": 34828, "attachment_id": null, "id": 74823, "time": "2005-05-12T20:38:58Z", "creator": "avik@apache.org", "creation_time": "2005-05-12T20:38:58Z", "is_private": false, "text": "This is great, i'll convert it into xdocs tom. In the meanwhile, you can add the\ntests in batches if you want. \n\nAnother thought, on the tests... Why do you need separate test methods/classes\nfor each eval if you are directly reading it from the excel sheet... your public\nclass TestAddEval/public void testAdd() does not contain any code specific to\nthe AddEval. All you need is some logic/convention to read multiple rows from\nthe sheet.. probably an odd/even row num with blank checks should do. That way,\none method (with asserts in a loop) will test all functions/operators. "}, {"count": 11, "attachment_id": null, "creator": "avik@apache.org", "is_private": false, "id": 74856, "time": "2005-05-13T18:03:45Z", "bug_id": 34828, "creation_time": "2005-05-13T18:03:45Z", "tags": [], "text": "Documents converted to xdocs (phew!) and comitted. "}, {"id": 74874, "tags": [], "bug_id": 34828, "is_private": false, "count": 12, "text": "Thanks for making such a patch.\n\nI don't know why, but I cannot find any constructor in HSFFormulaEvaluator. \n\nI am using the patch created in 2005-05-11 06:02. \n\nWhat's wrong?", "time": "2005-05-14T09:48:29Z", "creator": "e.xudong@gmail.com", "creation_time": "2005-05-14T09:48:29Z", "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 34828, "is_private": false, "count": 13, "id": 74876, "time": "2005-05-14T09:51:39Z", "creator": "e.xudong@gmail.com", "creation_time": "2005-05-14T09:51:39Z", "text": "Thanks for making such a patch.\n\nI don't know why, but I cannot find any constructor in HSFFormulaEvaluator. \n\nI am using the patch created in 2005-05-11 06:02. \n\nI think I am using a wrong patch. But where can I find the correct one?"}, {"attachment_id": 15039, "tags": [], "bug_id": 34828, "is_private": false, "count": 14, "id": 74918, "time": "2005-05-16T09:10:18Z", "creator": "amolweb@yahoo.com", "creation_time": "2005-05-16T09:10:18Z", "text": "Created attachment 15039\nStable patch with updated xdocs included in patch\n\nThis FormulaEvaluator patch contains:\n1. All core classes complete, stable and tested.\n2. Several Function classes completely implemented, stable and tested.\n3. IMPORTANT: Very minor change in FormulaParser in HEAD (+ 4lines).\nFormulaParser failed for UnaryPlus operations and UnaryPlusPtg was not being\ncreated during parse(). This has been fixed looking at how UnaryMinus was being\nhandled. Please verify the fix is correct!!!\n4. updated xdocs included in patch.\n5. Automated test class included but needs a source file change to configure\nfor particular environment. This mechanism needs to be changed once the patch\nis certified stable :) The test xls is added separately, not included in patch."}, {"attachment_id": 15040, "tags": [], "bug_id": 34828, "is_private": false, "count": 15, "id": 74919, "time": "2005-05-16T09:12:15Z", "creator": "amolweb@yahoo.com", "creation_time": "2005-05-16T09:12:15Z", "text": "Created attachment 15040\nTest data for automated tests\n\nThis is the workbook containing the sheet for automated tests. Adding tests for\n\nimplemented function is easy - see dev guide for additional info."}, {"count": 16, "tags": [], "bug_id": 34828, "is_private": false, "id": 74947, "creation_time": "2005-05-17T05:26:57Z", "time": "2005-05-17T05:26:57Z", "creator": "e.xudong@gmail.com", "text": "Thank you, Amol. It works!!\n\nBTW, I found there are some minor errors in XDocs (eval.xml):\n*line 56\n \"evaluator.evaluate(formulaString);\"\n should be\n evaluator.evaluate(cell);\n\n*line 60\n \"System.out.println(cellValue.getBooleanCellValue());\"\n should be\n System.out.println(cellValue.getBooleanValue());\n\n*line 63\n \"System.out.println(cellValue.getNumberCellValue());\"\n should be\n System.out.println(cellValue.getNumberValue());\n\n*line 66\n \"System.out.println(cellValue.getStringCellValue());\"\n should be\n System.out.println(cellValue.getStringValue());\n\nHi, Amoy. Thanks again for your excellent job.", "attachment_id": null}, {"count": 17, "tags": [], "creator": "amolweb@yahoo.com", "attachment_id": 15056, "id": 74958, "time": "2005-05-17T14:46:49Z", "bug_id": 34828, "creation_time": "2005-05-17T14:46:49Z", "is_private": false, "text": "Created attachment 15056\nPatch file (not zipped)\n\nSorry, I was not aware that patch files could not be zipped and uploaded. The\nprevious file seemed to have been uploaded as \"text/plain\" (since I added it as\na patch?). This patch file is not zipped, so it should work."}, {"count": 18, "tags": [], "creator": "avik@apache.org", "attachment_id": null, "text": "OK, patch help please. Why does the following does not work? My working dir is\nthe top level poi dir, ie, the dir containing src/\n\nbash-3.00$ pwd\n/home/aviks/projects/jakarta-poi-HEAD\nbash-3.00$ patch -p1 <FormulaEvaluator_v0.5.patch\n(Stripping trailing CRs from patch.)\ncan't find file to patch at input line 8\nPerhaps you used the wrong -p or --strip option?\nThe text leading up to this was:\n--------------------------\n|Index: src/documentation/content/xdocs/hssf/eval-devguide.xml\n|===================================================================\n|RCS file:\n/home/cvspublic/jakarta-poi/src/documentation/content/xdocs/hssf/eval-devguide.xml,v\n|retrieving revision 1.1\n|diff -u -r1.1 eval-devguide.xml\n|--- src/documentation/content/xdocs/hssf/eval-devguide.xml     13 May 2005\n14:52:42 -0000      1.1\n|+++ src/documentation/content/xdocs/hssf/eval-devguide.xml     17 May 2005\n12:43:06 -0000\n--------------------------\nFile to patch:                    ", "id": 74972, "time": "2005-05-17T19:37:42Z", "bug_id": 34828, "creation_time": "2005-05-17T19:37:42Z", "is_private": false}, {"count": 19, "tags": [], "bug_id": 34828, "attachment_id": 15063, "is_private": false, "id": 74978, "time": "2005-05-17T23:53:08Z", "creator": "amolweb@yahoo.com", "creation_time": "2005-05-17T23:53:08Z", "text": "Created attachment 15063\nPatch that works from command line CVS\n\nThis is getting too long: This latest patch works on command line - confirmed.\nHowever it does not include the proposed fix to FormulaParser and the updated\nxdocs (which seemed to be causing the problem). Will try submitting changes to\nxdocs+FormulaParser as a separate patch."}, {"count": 20, "tags": [], "bug_id": 34828, "is_private": false, "text": "The formula parser patch I can apply manually, since I know the source well. For\nthe xdocs, just attach the changed files in their entirety for now. ", "id": 74983, "time": "2005-05-18T07:11:21Z", "creator": "avik@apache.org", "creation_time": "2005-05-18T07:11:21Z", "attachment_id": null}, {"count": 21, "tags": [], "bug_id": 34828, "text": "Created attachment 15073\nZipped FormulaEvaluator xdocs (eval and eval-devguide)\n\nThese are updated & zipped xdocs. Sending them into the patch failed earlier.", "id": 75027, "time": "2005-05-18T18:32:07Z", "creator": "amolweb@yahoo.com", "creation_time": "2005-05-18T18:32:07Z", "is_private": false, "attachment_id": 15073}, {"count": 22, "attachment_id": null, "bug_id": 34828, "text": "Comitted. Thanks once again, Amol!", "id": 75062, "time": "2005-05-19T14:16:51Z", "creator": "avik@apache.org", "creation_time": "2005-05-19T14:16:51Z", "tags": [], "is_private": false}]