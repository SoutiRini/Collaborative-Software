[{"attachment_id": null, "tags": [], "bug_id": 35327, "is_private": false, "count": 0, "id": 76299, "time": "2005-06-11T11:09:40Z", "creator": "roman@cyber.ee", "creation_time": "2005-06-11T11:09:40Z", "text": "When user authenticates himself with a name and includes a trailing white \nspace in it, apache uses skips white space and authentication succeeds. \nHowever, %{REMOTE_USER} still contains that trailing space.\nMight be mod_auth_ldap bug only. Haven't checked with other auth modules"}, {"count": 1, "tags": [], "creator": "bnicholes@apache.org", "text": "The user field in the request_rec is assigned the exact value that was sent by \nthe user in the request.  This value is then assigned to the REMOTE_USER \nenvironment variable without any manipulation at all.  The same user value \n(with white spaces) is also sent to ldap for authentication.  It is the ldap \nlibrary that decides to strip trailing white space.  Since the user field is \nassigned during the call to ap_get_basic_auth_pw() and the REMOTE_USER \nvariable is assigned during the call to ap_add_common_vars(), both of which \nare core API's, the issue is not unique to mod_auth_ldap.  It only manifests \nitself because of the underlaying way in which authentication happens.", "id": 83321, "time": "2005-12-06T17:42:02Z", "bug_id": 35327, "creation_time": "2005-12-06T17:42:02Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "text": "As pointed out by Brad, there is no special handing of trailing spaces in httpd. If some ldap lib handles them specially, that's not our issue.", "is_private": false, "id": 147616, "creator": "sf@sfritsch.de", "time": "2011-06-29T18:26:47Z", "bug_id": 35327, "creation_time": "2011-06-29T18:26:47Z", "attachment_id": null}]