[{"count": 0, "attachment_id": null, "creator": "chris@techadapt.com", "is_private": false, "id": 136510, "time": "2010-04-28T23:17:10Z", "bug_id": 49216, "creation_time": "2010-04-28T23:17:10Z", "tags": [], "text": "I'm using the Transcoder API to rasterize an SVG into JPEG.  I'm getting the following NPE, followed by a complete crash of the Java VM (there's two stack traces here - I'm not sure if it happened twice on two separate images or if these are related somehow):\n\njava.lang.NullPointerException\n\tat java.awt.image.DataBufferInt.getBankData(DataBufferInt.java:162)\n\tat org.apache.batik.ext.awt.image.rendered.PadRed$ZeroRecter_INT_PACK.<init>(PadRed.java:156)\n\tat org.apache.batik.ext.awt.image.rendered.PadRed$ZeroRecter.getZeroRecter(PadRed.java:123)\n\tat org.apache.batik.ext.awt.image.rendered.PadRed.handleZero(PadRed.java:193)\n\tat org.apache.batik.ext.awt.image.rendered.PadRed.copyData(PadRed.java:92)\n\tat org.apache.batik.ext.awt.image.rendered.ColorMatrixRed.copyData(ColorMatrixRed.java:116)\n\tat org.apache.batik.ext.awt.image.rendered.FormatRed.copyData(FormatRed.java:116)\n\tat org.apache.batik.ext.awt.image.rendered.AbstractRed.getData(AbstractRed.java:526)\n\tat org.apache.batik.ext.awt.image.GraphicsUtil.drawImage(GraphicsUtil.java:264)\n\tat org.apache.batik.ext.awt.image.GraphicsUtil.drawImage(GraphicsUtil.java:455)\n\tat org.apache.batik.ext.awt.image.renderable.PadRable8Bit.paintRable(PadRable8Bit.java:135)\n\tat org.apache.batik.ext.awt.image.GraphicsUtil.drawImage(GraphicsUtil.java:440)\n\tat org.apache.batik.ext.awt.image.renderable.PadRable8Bit.paintRable(PadRable8Bit.java:135)\n\tat org.apache.batik.ext.awt.image.GraphicsUtil.drawImage(GraphicsUtil.java:440)\n\tat org.apache.batik.ext.awt.image.renderable.FilterChainRable8Bit.paintRable(FilterChainRable8Bit.java:251)\n\tat org.apache.batik.ext.awt.image.GraphicsUtil.drawImage(GraphicsUtil.java:440)\n\tat org.apache.batik.gvt.AbstractGraphicsNode.paint(AbstractGraphicsNode.java:549)\n\tat org.apache.batik.gvt.CompositeGraphicsNode.primitivePaint(CompositeGraphicsNode.java:165)\n\tat org.apache.batik.gvt.AbstractGraphicsNode.paint(AbstractGraphicsNode.java:509)\n\tat org.apache.batik.gvt.CompositeGraphicsNode.primitivePaint(CompositeGraphicsNode.java:165)\n\tat org.apache.batik.gvt.filter.GraphicsNodeRed8Bit.genRect(GraphicsNodeRed8Bit.java:140)\n\tat org.apache.batik.gvt.filter.GraphicsNodeRed8Bit.copyData(GraphicsNodeRed8Bit.java:116)\n\tat org.apache.batik.ext.awt.image.rendered.PadRed.copyData(PadRed.java:88)\n\tat org.apache.batik.ext.awt.image.rendered.AbstractRed.getData(AbstractRed.java:526)\n\tat org.apache.batik.ext.awt.image.rendered.Any2LumRed.copyData(Any2LumRed.java:71)\n\tat org.apache.batik.ext.awt.image.rendered.AbstractRed.getData(AbstractRed.java:526)\n\tat org.apache.batik.ext.awt.image.rendered.FilterAsAlphaRed.copyData(FilterAsAlphaRed.java:83)\n\tat org.apache.batik.ext.awt.image.rendered.AbstractRed.getData(AbstractRed.java:526)\n\tat org.apache.batik.ext.awt.image.rendered.MultiplyAlphaRed.INT_PACK_BYTE_COMP_Impl(MultiplyAlphaRed.java:107)\n\tat org.apache.batik.ext.awt.image.rendered.MultiplyAlphaRed.copyData(MultiplyAlphaRed.java:183)\n\tat org.apache.batik.ext.awt.image.rendered.Any2sRGBRed.copyData(Any2sRGBRed.java:166)\n\tat org.apache.batik.ext.awt.image.rendered.FormatRed.copyData(FormatRed.java:116)\n\tat org.apache.batik.ext.awt.image.GraphicsUtil.drawImage(GraphicsUtil.java:347)\n\tat org.apache.batik.ext.awt.image.GraphicsUtil.drawImage(GraphicsUtil.java:455)\n\tat org.apache.batik.gvt.AbstractGraphicsNode.paint(AbstractGraphicsNode.java:549)\n\tat org.apache.batik.gvt.CompositeGraphicsNode.primitivePaint(CompositeGraphicsNode.java:165)\n\tat org.apache.batik.gvt.AbstractGraphicsNode.paint(AbstractGraphicsNode.java:509)\n\tat org.apache.batik.gvt.CompositeGraphicsNode.primitivePaint(CompositeGraphicsNode.java:165)\n\tat org.apache.batik.gvt.AbstractGraphicsNode.paint(AbstractGraphicsNode.java:509)\n\tat org.apache.batik.gvt.CompositeGraphicsNode.primitivePaint(CompositeGraphicsNode.java:165)\n\tat org.apache.batik.gvt.AbstractGraphicsNode.paint(AbstractGraphicsNode.java:509)\n\tat org.apache.batik.gvt.CompositeGraphicsNode.primitivePaint(CompositeGraphicsNode.java:165)\n\tat org.apache.batik.gvt.AbstractGraphicsNode.paint(AbstractGraphicsNode.java:509)\n\tat org.apache.batik.gvt.CompositeGraphicsNode.primitivePaint(CompositeGraphicsNode.java:165)\n\tat org.apache.batik.gvt.CanvasGraphicsNode.primitivePaint(CanvasGraphicsNode.java:159)\n\tat org.apache.batik.gvt.AbstractGraphicsNode.paint(AbstractGraphicsNode.java:509)\n\tat org.apache.batik.gvt.CompositeGraphicsNode.primitivePaint(CompositeGraphicsNode.java:165)\n\tat org.apache.batik.gvt.AbstractGraphicsNode.paint(AbstractGraphicsNode.java:509)\n\tat org.apache.batik.gvt.renderer.MacRenderer.repaint(MacRenderer.java:361)\n\tat org.apache.batik.gvt.renderer.MacRenderer.repaint(MacRenderer.java:291)\n\tat org.apache.batik.transcoder.image.ImageTranscoder.transcode(ImageTranscoder.java:111)\n\tat org.apache.batik.transcoder.XMLAbstractTranscoder.transcode(XMLAbstractTranscoder.java:142)\n\tat org.apache.batik.transcoder.SVGAbstractTranscoder.transcode(SVGAbstractTranscoder.java:156)\n\tat com.dji.converter.epub.constructor.ImageConstructor.convertVectorImage(ImageConstructor.java:305)\n\tat com.dji.converter.epub.constructor.ImageConstructor.createImage(ImageConstructor.java:109)\n\tat com.dji.converter.epub.constructor.ImageConstructor.handleStartEvent(ImageConstructor.java:80)\n\tat com.dji.converter.epub.ePubConverter.processEvents(ePubConverter.java:334)\n\tat com.dji.converter.epub.ePubConverter.convert(ePubConverter.java:202)\n\tat com.dji.converter.ConverterBase.run(ConverterBase.java:91)\n\tat java.lang.Thread.run(Thread.java:613)\njava.lang.NullPointerException\n\tat java.awt.image.DataBufferInt.getBankData(DataBufferInt.java:162)\n\tat org.apache.batik.ext.awt.image.rendered.PadRed$ZeroRecter_INT_PACK.<init>(PadRed.java:156)\n\tat org.apache.batik.ext.awt.image.rendered.PadRed$ZeroRecter.getZeroRecter(PadRed.java:123)\n\tat org.apache.batik.ext.awt.image.rendered.PadRed.handleZero(PadRed.java:193)\n\tat org.apache.batik.ext.awt.image.rendered.PadRed.copyData(PadRed.java:92)\n\tat org.apache.batik.ext.awt.image.rendered.ColorMatrixRed.copyData(ColorMatrixRed.java:116)\n\tat org.apache.batik.ext.awt.image.rendered.FormatRed.copyData(FormatRed.java:116)\n\tat org.apache.batik.ext.awt.image.rendered.AbstractRed.getData(AbstractRed.java:526)\n\tat org.apache.batik.ext.awt.image.GraphicsUtil.drawImage(GraphicsUtil.java:264)\n\tat org.apache.batik.ext.awt.image.GraphicsUtil.drawImage(GraphicsUtil.java:455)\n\tat org.apache.batik.ext.awt.image.renderable.PadRable8Bit.paintRable(PadRable8Bit.java:135)\n\tat org.apache.batik.ext.awt.image.GraphicsUtil.drawImage(GraphicsUtil.java:440)\n\tat org.apache.batik.ext.awt.image.renderable.PadRable8Bit.paintRable(PadRable8Bit.java:135)\n\tat org.apache.batik.ext.awt.image.GraphicsUtil.drawImage(GraphicsUtil.java:440)\n\tat org.apache.batik.ext.awt.image.renderable.FilterChainRable8Bit.paintRable(FilterChainRable8Bit.java:251)\n\tat org.apache.batik.ext.awt.image.GraphicsUtil.drawImage(GraphicsUtil.java:440)\n\tat org.apache.batik.gvt.AbstractGraphicsNode.paint(AbstractGraphicsNode.java:549)\n\tat org.apache.batik.gvt.CompositeGraphicsNode.primitivePaint(CompositeGraphicsNode.java:165)\n\tat org.apache.batik.gvt.AbstractGraphicsNode.paint(AbstractGraphicsNode.java:509)\n\tat org.apache.batik.gvt.CompositeGraphicsNode.primitivePaint(CompositeGraphicsNode.java:165)\n\tat org.apache.batik.gvt.filter.GraphicsNodeRed8Bit.genRect(GraphicsNodeRed8Bit.java:140)\n\tat org.apache.batik.gvt.filter.GraphicsNodeRed8Bit.copyData(GraphicsNodeRed8Bit.java:116)\n\tat org.apache.batik.ext.awt.image.rendered.PadRed.copyData(PadRed.java:88)\n\tat org.apache.batik.ext.awt.image.rendered.AbstractRed.getData(AbstractRed.java:526)\n\tat org.apache.batik.ext.awt.image.rendered.Any2LumRed.copyData(Any2LumRed.java:71)\n\tat org.apache.batik.ext.awt.image.rendered.AbstractRed.getData(AbstractRed.java:526)\n\tat org.apache.batik.ext.awt.image.rendered.FilterAsAlphaRed.copyData(FilterAsAlphaRed.java:83)\n\tat org.apache.batik.ext.awt.image.rendered.AbstractRed.getData(AbstractRed.java:526)\n\tat org.apache.batik.ext.awt.image.rendered.MultiplyAlphaRed.INT_PACK_BYTE_COMP_Impl(MultiplyAlphaRed.java:107)\n\tat org.apache.batik.ext.awt.image.rendered.MultiplyAlphaRed.copyData(MultiplyAlphaRed.java:183)\n\tat org.apache.batik.ext.awt.image.rendered.Any2sRGBRed.copyData(Any2sRGBRed.java:166)\n\tat org.apache.batik.ext.awt.image.rendered.FormatRed.copyData(FormatRed.java:116)\n\tat org.apache.batik.ext.awt.image.GraphicsUtil.drawImage(GraphicsUtil.java:347)\n\tat org.apache.batik.ext.awt.image.GraphicsUtil.drawImage(GraphicsUtil.java:455)\n\tat org.apache.batik.gvt.AbstractGraphicsNode.paint(AbstractGraphicsNode.java:549)\n\tat org.apache.batik.gvt.CompositeGraphicsNode.primitivePaint(CompositeGraphicsNode.java:165)\n\tat org.apache.batik.gvt.AbstractGraphicsNode.paint(AbstractGraphicsNode.java:509)\n\tat org.apache.batik.gvt.CompositeGraphicsNode.primitivePaint(CompositeGraphicsNode.java:165)\n\tat org.apache.batik.gvt.AbstractGraphicsNode.paint(AbstractGraphicsNode.java:509)\n\tat org.apache.batik.gvt.CompositeGraphicsNode.primitivePaint(CompositeGraphicsNode.java:165)\n\tat org.apache.batik.gvt.AbstractGraphicsNode.paint(AbstractGraphicsNode.java:509)\n\tat org.apache.batik.gvt.CompositeGraphicsNode.primitivePaint(CompositeGraphicsNode.java:165)\n\tat org.apache.batik.gvt.AbstractGraphicsNode.paint(AbstractGraphicsNode.java:509)\n\tat org.apache.batik.gvt.CompositeGraphicsNode.primitivePaint(CompositeGraphicsNode.java:165)\n\tat org.apache.batik.gvt.CanvasGraphicsNode.primitivePaint(CanvasGraphicsNode.java:159)\n\tat org.apache.batik.gvt.AbstractGraphicsNode.paint(AbstractGraphicsNode.java:509)\n\tat org.apache.batik.gvt.CompositeGraphicsNode.primitivePaint(CompositeGraphicsNode.java:165)\n\tat org.apache.batik.gvt.AbstractGraphicsNode.paint(AbstractGraphicsNode.java:509)\n\tat org.apache.batik.gvt.renderer.MacRenderer.repaint(MacRenderer.java:361)\n\tat org.apache.batik.gvt.renderer.MacRenderer.repaint(MacRenderer.java:291)\n\tat org.apache.batik.transcoder.image.ImageTranscoder.transcode(ImageTranscoder.java:111)\n\tat org.apache.batik.transcoder.XMLAbstractTranscoder.transcode(XMLAbstractTranscoder.java:142)\n\tat org.apache.batik.transcoder.SVGAbstractTranscoder.transcode(SVGAbstractTranscoder.java:156)\n\tat com.dji.converter.epub.constructor.ImageConstructor.convertVectorImage(ImageConstructor.java:305)\n\tat com.dji.converter.epub.constructor.ImageConstructor.createImage(ImageConstructor.java:109)\n\tat com.dji.converter.epub.constructor.ImageConstructor.handleStartEvent(ImageConstructor.java:80)\n\tat com.dji.converter.epub.ePubConverter.processEvents(ePubConverter.java:334)\n\tat com.dji.converter.epub.ePubConverter.convert(ePubConverter.java:202)\n\tat com.dji.converter.ConverterBase.run(ConverterBase.java:91)\n\tat java.lang.Thread.run(Thread.java:613)\nInvalid memory access of location 0x128 eip=0x4dcd8a\n\n\nThe code in question is pretty straightforward, but one odd thing did happen: I never hit the catch(Exception e) clause, which I should have done for an NPE:\n\ntry {\n    \t    String parser = XMLResourceDescriptor.getXMLParserClassName();\n    \t    SAXSVGDocumentFactory f = new SAXSVGDocumentFactory(parser);\n\t        String svgURI = imageSourcePath.toURL().toString();\n    \t    Document doc = f.createDocument(svgURI);\n\n    \t    // Get the root element (the 'svg' element).\n    \t    final Element svgRoot = doc.getDocumentElement();\n\n    \t    // Set the width and height attributes on the root 'svg' element.\n    \t    final String strWidth = svgRoot.getAttributeNS(null, \"width\");\n    \t    if (strWidth != null) {\n    \t    \tactualWidth = Float.parseFloat(strWidth);\n    \t    }\n    \t    final String strHeight = svgRoot.getAttributeNS(null, \"height\");\n    \t    if (strHeight != null) {\n    \t    \tactualHeight = Float.parseFloat(strHeight);\n    \t    }\n    \t    \n            if ((actualWidth != Float.MAX_VALUE) && (actualWidth > maxImageWidth)) {\n                float proportion = maxImageWidth / actualWidth;\n                actualWidth = proportion * actualWidth;\n                actualHeight = proportion * actualHeight;\n            }\n\n            if ((actualHeight != Float.MAX_VALUE) && (actualHeight > maxImageHeight)) {\n                float proportion = maxImageHeight / actualHeight;\n                actualWidth = proportion * actualWidth;\n                actualHeight = proportion * actualHeight;\n            }\n    \t    \n\t        // Create a JPEG transcoder\n            ImageTranscoder t = null;\n            if (imageOutputFormat.equalsIgnoreCase(\"jpeg\")) {\n            \tt = new JPEGTranscoder();\n            } else if (imageOutputFormat.equalsIgnoreCase(\"png\")) {\n            \tt = new PNGTranscoder();\n            } else {\n            \tthrow new UnsupportedImageFormatException(\"Cannot convert SVG to \" + imageOutputFormat);\n            }\n\t\n\t        // Set the transcoding hints.\n\t        t.addTranscodingHint(JPEGTranscoder.KEY_QUALITY, new Float(.8));\n\t        t.addTranscodingHint(JPEGTranscoder.KEY_WIDTH, actualWidth);\n\t        t.addTranscodingHint(JPEGTranscoder.KEY_HEIGHT, actualHeight);\n\t\n\t        // Create the transcoder input.\n\t        TranscoderInput input = new TranscoderInput(doc);\n\t\n\t        // Create the transcoder output.\n\t        OutputStream ostream = new FileOutputStream(imageDestPath);\n\t        TranscoderOutput output = new TranscoderOutput(ostream);\n\t\n\t        // Save the image.\n\t        t.transcode(input, output);\n\t\n\t        // Flush and close the stream.\n\t        ostream.flush();\n\t        ostream.close();\n\n\t        finalImagePath = imageDestPath;\n        } catch (FileNotFoundException e) {\n            logger.error(\"Image file not found\", e);\n            getStatusAccumulator().addWarningMessage(\"The image file \" + imageSourcePath + \" specified in the XML was not found.\");\n            finalImagePath = imageSourcePath;\n        } catch (IOException e) {\n            logger.error(\"Image I/O error\", e);\n            getStatusAccumulator().addWarningMessage(\"An error occurred while processing image file \" + imageSourcePath + \": \" + e.getMessage());\n            finalImagePath = imageSourcePath;\n        } catch (TranscoderException e) {\n            logger.error(\"Image conversion error\", e);\n            getStatusAccumulator().addWarningMessage(\"An error occurred while processing image file \" + imageSourcePath + \": \" + e.getMessage());\n            finalImagePath = imageSourcePath;\n        } catch (Exception e) {\n        \t// Batik sometimes NPEs...\n            logger.error(\"Image conversion error\", e);\n            getStatusAccumulator().addWarningMessage(\"An error occurred while processing image file \" + imageSourcePath + \": \" + e.getMessage());\n            finalImagePath = imageSourcePath;\n        }\n\n\nThanks in advance for any help you can provide.\n\nCheers\nChris"}, {"count": 1, "attachment_id": null, "creator": "chris@techadapt.com", "is_private": false, "id": 136511, "time": "2010-04-28T23:27:18Z", "bug_id": 49216, "creation_time": "2010-04-28T23:27:18Z", "tags": [], "text": "One additional tidbit: this exception occurred while running the program under the Eclipse debugger using JVM arguments \"-Xmx1024M -Dcom.sun.management.jmxremote\".  I tried running it outside the debugger with -Xmx1024M and it appears to have worked (or at least I didn't get an NPE)."}, {"count": 2, "tags": [], "text": "(In reply to comment #0)\n> I'm using the Transcoder API to rasterize an SVG into JPEG.  I'm getting the\n> following NPE, followed by a complete crash of the Java VM (there's two stack\n> traces here - I'm not sure if it happened twice on two separate images or if\n> these are related somehow):\n\n   I think it must be a side effect of running out of memory. I'm not\nsure why an OOM exeception isn't thrown.\n\n\n> java.lang.NullPointerException\n>     at java.awt.image.DataBufferInt.getBankData(DataBufferInt.java:162)\n>     at\n> org.apache.batik.ext.awt.image.rendered.PadRed$ZeroRecter_INT_PACK.<init>(PadRed.java:156)\n>     at\n> org.apache.batik.ext.awt.image.rendered.PadRed$ZeroRecter.getZeroRecter(PadRed.java:123)\n>     at\n> org.apache.batik.ext.awt.image.rendered.PadRed.handleZero(PadRed.java:193)\n>     at org.apache.batik.ext.awt.image.rendered.PadRed.copyData(PadRed.java:92)\n>     at\n> org.apache.batik.ext.awt.image.rendered.ColorMatrixRed.copyData(ColorMatrixRed.java:116)\n>     at\n> org.apache.batik.ext.awt.image.rendered.FormatRed.copyData(FormatRed.java:116)\n>     at\n> org.apache.batik.ext.awt.image.rendered.AbstractRed.getData(AbstractRed.java:526)\n\n    The Writable Raster who's DataBuffer is 'bad' is allocated a few lines\nbefore this.  And that Raster is just passed down to the point where getting\nthe DataBuffer's data bank causes the NPE.\n\n    If you are looking to rasterize large documents you would be much better\noff using the TiledImageTranscoder (contrib/tiledTranscoder) which uses\nTiff for the output and renders the image in strips to greatly reduce memory\nconsumption.", "is_private": false, "id": 136513, "creator": "deweese@apache.org", "time": "2010-04-29T05:58:54Z", "bug_id": 49216, "creation_time": "2010-04-29T05:58:54Z", "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 49216, "text": "Thank you for your comments, Thomas.  I'll take a look at TiledImageTranscoder, but I'm wondering if I won't still run into memory issues since I'm required to end up with a JPEG at the end of the process.  Do you think that converting SVG -> TIFF -> JPEG will have lower memory requirements than a direct SVG -> TIFF conversion? and are TIFF image readers generally available with the JVM so that I can use the standard ImageIO methods to convert TIFF to JPEG?\n\n\nBest,\nChris", "id": 136521, "time": "2010-04-29T10:24:50Z", "creator": "chris@techadapt.com", "creation_time": "2010-04-29T10:24:50Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 49216, "text": "I'm continuing to get this error even if I raise the JVM maximum memory allocation substantially.  The most recent stack trace with -Xmx1536M is:\n\njava.lang.NullPointerException\n\tat java.awt.image.DataBufferInt.getBankData(DataBufferInt.java:162)\n\tat org.apache.batik.ext.awt.image.rendered.PadRed$ZeroRecter_INT_PACK.<init>(PadRed.java:156)\n\tat org.apache.batik.ext.awt.image.rendered.PadRed$ZeroRecter.getZeroRecter(PadRed.java:123)\n\tat org.apache.batik.ext.awt.image.rendered.PadRed.handleZero(PadRed.java:193)\n\tat org.apache.batik.ext.awt.image.rendered.PadRed.copyData(PadRed.java:92)\n\tat org.apache.batik.ext.awt.image.rendered.ColorMatrixRed.copyData(ColorMatrixRed.java:116)\n\tat org.apache.batik.ext.awt.image.rendered.FormatRed.copyData(FormatRed.java:116)\n\tat org.apache.batik.ext.awt.image.rendered.AbstractRed.getData(AbstractRed.java:526)\n\tat org.apache.batik.ext.awt.image.GraphicsUtil.drawImage(GraphicsUtil.java:264)\n\tat org.apache.batik.ext.awt.image.GraphicsUtil.drawImage(GraphicsUtil.java:455)\n\tat org.apache.batik.ext.awt.image.renderable.PadRable8Bit.paintRable(PadRable8Bit.java:135)\n\tat org.apache.batik.ext.awt.image.GraphicsUtil.drawImage(GraphicsUtil.java:440)\n\tat org.apache.batik.ext.awt.image.renderable.PadRable8Bit.paintRable(PadRable8Bit.java:135)\n\tat org.apache.batik.ext.awt.image.GraphicsUtil.drawImage(GraphicsUtil.java:440)\n\tat org.apache.batik.ext.awt.image.renderable.FilterChainRable8Bit.paintRable(FilterChainRable8Bit.java:251)\n\tat org.apache.batik.ext.awt.image.GraphicsUtil.drawImage(GraphicsUtil.java:440)\n\tat org.apache.batik.gvt.AbstractGraphicsNode.paint(AbstractGraphicsNode.java:549)\n\tat org.apache.batik.gvt.CompositeGraphicsNode.primitivePaint(CompositeGraphicsNode.java:165)\n\tat org.apache.batik.gvt.AbstractGraphicsNode.paint(AbstractGraphicsNode.java:509)\n\tat org.apache.batik.gvt.CompositeGraphicsNode.primitivePaint(CompositeGraphicsNode.java:165)\n\tat org.apache.batik.gvt.filter.GraphicsNodeRed8Bit.genRect(GraphicsNodeRed8Bit.java:140)\n\tat org.apache.batik.gvt.filter.GraphicsNodeRed8Bit.copyData(GraphicsNodeRed8Bit.java:116)\n\tat org.apache.batik.ext.awt.image.rendered.PadRed.copyData(PadRed.java:88)\n\tat org.apache.batik.ext.awt.image.rendered.AbstractRed.getData(AbstractRed.java:526)\n\tat org.apache.batik.ext.awt.image.rendered.Any2LumRed.copyData(Any2LumRed.java:71)\n\tat org.apache.batik.ext.awt.image.rendered.AbstractRed.getData(AbstractRed.java:526)\n\tat org.apache.batik.ext.awt.image.rendered.FilterAsAlphaRed.copyData(FilterAsAlphaRed.java:83)\n\tat org.apache.batik.ext.awt.image.rendered.AbstractRed.getData(AbstractRed.java:526)\n\tat org.apache.batik.ext.awt.image.rendered.MultiplyAlphaRed.INT_PACK_BYTE_COMP_Impl(MultiplyAlphaRed.java:107)\n\tat org.apache.batik.ext.awt.image.rendered.MultiplyAlphaRed.copyData(MultiplyAlphaRed.java:183)\n\tat org.apache.batik.ext.awt.image.rendered.Any2sRGBRed.copyData(Any2sRGBRed.java:166)\n\tat org.apache.batik.ext.awt.image.rendered.FormatRed.copyData(FormatRed.java:116)\n\tat org.apache.batik.ext.awt.image.GraphicsUtil.drawImage(GraphicsUtil.java:347)\n\tat org.apache.batik.ext.awt.image.GraphicsUtil.drawImage(GraphicsUtil.java:455)\n\tat org.apache.batik.gvt.AbstractGraphicsNode.paint(AbstractGraphicsNode.java:549)\n\tat org.apache.batik.gvt.CompositeGraphicsNode.primitivePaint(CompositeGraphicsNode.java:165)\n\tat org.apache.batik.gvt.AbstractGraphicsNode.paint(AbstractGraphicsNode.java:509)\n\tat org.apache.batik.gvt.CompositeGraphicsNode.primitivePaint(CompositeGraphicsNode.java:165)\n\tat org.apache.batik.gvt.AbstractGraphicsNode.paint(AbstractGraphicsNode.java:509)\n\tat org.apache.batik.gvt.CompositeGraphicsNode.primitivePaint(CompositeGraphicsNode.java:165)\n\tat org.apache.batik.gvt.AbstractGraphicsNode.paint(AbstractGraphicsNode.java:509)\n\tat org.apache.batik.gvt.CompositeGraphicsNode.primitivePaint(CompositeGraphicsNode.java:165)\n\tat org.apache.batik.gvt.AbstractGraphicsNode.paint(AbstractGraphicsNode.java:509)\n\tat org.apache.batik.gvt.CompositeGraphicsNode.primitivePaint(CompositeGraphicsNode.java:165)\n\tat org.apache.batik.gvt.CanvasGraphicsNode.primitivePaint(CanvasGraphicsNode.java:159)\n\tat org.apache.batik.gvt.AbstractGraphicsNode.paint(AbstractGraphicsNode.java:509)\n\tat org.apache.batik.gvt.CompositeGraphicsNode.primitivePaint(CompositeGraphicsNode.java:165)\n\tat org.apache.batik.gvt.AbstractGraphicsNode.paint(AbstractGraphicsNode.java:509)\n\tat org.apache.batik.gvt.renderer.MacRenderer.repaint(MacRenderer.java:361)\n\tat org.apache.batik.gvt.renderer.MacRenderer.repaint(MacRenderer.java:291)\n\tat org.apache.batik.transcoder.image.ImageTranscoder.transcode(ImageTranscoder.java:111)\n\tat org.apache.batik.transcoder.XMLAbstractTranscoder.transcode(XMLAbstractTranscoder.java:142)\n\tat org.apache.batik.transcoder.SVGAbstractTranscoder.transcode(SVGAbstractTranscoder.java:156)\n\tat com.dji.converter.epub.renderer.ImageRenderer.convertVectorImage(ImageRenderer.java:332)\n\tat com.dji.converter.epub.renderer.ImageRenderer.render(ImageRenderer.java:113)\n\tat com.dji.converter.epub.renderer.ImageRenderer.render(ImageRenderer.java:56)\n\tat com.dji.converter.epub.ePubWriter.writeContent(ePubWriter.java:218)\n\tat com.dji.converter.epub.ePubConverter.writeContent(ePubConverter.java:376)\n\tat com.dji.converter.epub.ePubConverter.processEvents(ePubConverter.java:335)\n\tat com.dji.converter.epub.ePubConverter.convert(ePubConverter.java:185)\n\tat com.dji.converter.ConverterBase.run(ConverterBase.java:88)\n\tat java.lang.Thread.run(Thread.java:613)\nInvalid memory access of location 0x128 eip=0x4dcd8a", "id": 136745, "time": "2010-05-09T13:25:09Z", "creator": "chris@techadapt.com", "creation_time": "2010-05-09T13:25:09Z", "is_private": false, "attachment_id": null}]