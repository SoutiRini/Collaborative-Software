[{"count": 0, "tags": [], "text": "Long paths in request are prematurely rejected\n\nget_path_info(), in http_request.c, does a stat() on the path of the request,\nand rejects requests (by returning HTTP_FORBIDDEN) that exist, yet cannot be\naccesssed.  However, the case where the filename is too long for the native\nfilesystem (where stat() returns ENAMETOOLONG) gets treated as 'file exists yet\nis unreadable' rather than 'file doesn't exist'.\n\nThis behavior, results in path lengths larger than a certain length to be\nrejected by Apache before JServ (as an example) can handle them.  \n\n\nTo reproduce:\n\nInstall JServ with Apache.\n\nSet up a file extension to be handled by JServ in jserv.conf:\n\nApJServAction .foo /servlets/Whatever\n\nNow request /aaaaaaaaaaa[....]aaaa.foo, where there are more than 256 'a's.  The\nrequest will fail before JServ receives it.\n\nThis can probably be reproduced with CGI or other language modules (mod_perl?)\nas well.", "is_private": false, "id": 14451, "creator": "broz@andrew.cmu.edu", "time": "2002-04-23T14:07:46Z", "bug_id": 8416, "creation_time": "2002-04-23T14:07:46Z", "attachment_id": null}, {"count": 1, "tags": [], "creator": "broz@andrew.cmu.edu", "attachment_id": 1664, "text": "Created attachment 1664\npatch for http_request.c", "id": 14453, "time": "2002-04-23T14:09:09Z", "bug_id": 8416, "creation_time": "2002-04-23T14:09:09Z", "is_private": false}, {"count": 2, "tags": [], "text": "\n  This is correct behavior.  When the files were identified as non-existant,\n  those paths introduced security holes.  To go from existant to non-existant,\n  all one needed were additional slashes in the path.  Exploits included serving\n  an autoindex pages that would otherwise should have served an index document.\n\n  For security, Apache denies access when the path exceeds the max path length.\n  This behavior is by design.\n", "is_private": false, "bug_id": 8416, "id": 14463, "time": "2002-04-23T16:18:04Z", "creator": "wrowe@apache.org", "creation_time": "2002-04-23T16:18:04Z", "attachment_id": null}]