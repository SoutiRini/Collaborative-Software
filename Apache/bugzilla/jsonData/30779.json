[{"count": 0, "tags": [], "creator": "javamike9@yahoo.com", "attachment_id": null, "id": 62257, "time": "2004-08-20T19:56:36Z", "bug_id": 30779, "creation_time": "2004-08-20T19:56:36Z", "is_private": false, "text": "I added a \"View Results Tree\" listener to my jmeter test, and specified a file \nin the filename textfield.  I ran the test and verified that the file existed \nand had data.  After closing and then opening jmeter, i tried to load the file \ninto the listener, but nothing appeared in the gui.\n\nI closed jmeter, and modified the \"jmeter.properties\" to \nhave \"log_level.jmeter=DEBUG\".\n\nI opened jmeter, added a new \"View Results Tree\" listener into an empty test \nplan and tried to open the file again.  I saw a NumberFormatException in the \njmeter.log.\n\nThe log snippet follows:\n\n2004/08/20 13:21:49 INFO  - jmeter.visualizers.gui.AbstractVisualizer: getting \nnew collector\n2004/08/20 13:21:49 DEBUG - jmeter.gui.AbstractJMeterGuiComponent: setting \nelement to enabled: true\n2004/08/20 13:21:49 DEBUG - jmeter.visualizers.ViewResultsFullVisualizer: \nStart : clear1\n2004/08/20 13:21:49 DEBUG - jmeter.visualizers.ViewResultsFullVisualizer: \nclear1 : total child - 0\n2004/08/20 13:21:49 DEBUG - jmeter.visualizers.ViewResultsFullVisualizer: End : \nclear1\n2004/08/20 13:21:50 DEBUG - jmeter.visualizers.gui.AbstractVisualizer: Error \noccurred while loading file java.lang.NumberFormatException: <?xml \nversion=\"1.0\" encoding\n=\"UTF-8\"?>\n        at java.lang.Long.parseLong(Long.java:305)\n        at java.lang.Long.parseLong(Long.java:358)\n        at org.apache.jmeter.save.SaveService.makeResultFromDelimitedString\n(SaveService.java:298)\n        at org.apache.jmeter.reporters.ResultCollector.loadExistingFile\n(ResultCollector.java:186)\n        at org.apache.jmeter.visualizers.gui.AbstractVisualizer.stateChanged\n(AbstractVisualizer.java:231)\n        at org.apache.jmeter.gui.util.FilePanel.fireFileChanged\n(FilePanel.java:128)\n        at org.apache.jmeter.gui.util.FilePanel.actionPerformed\n(FilePanel.java:141)\n        at javax.swing.AbstractButton.fireActionPerformed\n(AbstractButton.java:1445)\n        at javax.swing.AbstractButton$ForwardActionEvents.actionPerformed\n(AbstractButton.java:1499)\n        at javax.swing.DefaultButtonModel.fireActionPerformed\n(DefaultButtonModel.java:373)\n        at javax.swing.DefaultButtonModel.setPressed\n(DefaultButtonModel.java:245)\n        at javax.swing.plaf.basic.BasicButtonListener.mouseReleased\n(BasicButtonListener.java:211)\n        at java.awt.Component.processMouseEvent(Component.java:3710)\n        at java.awt.Component.processEvent(Component.java:3539)\n        at java.awt.Container.processEvent(Container.java:1159)\n        at java.awt.Component.dispatchEventImpl(Component.java:2588)\n        at java.awt.Container.dispatchEventImpl(Container.java:1208)\n        at java.awt.Component.dispatchEvent(Component.java:2492)\n        at java.awt.LightweightDispatcher.retargetMouseEvent\n(Container.java:2451)\n        at java.awt.LightweightDispatcher.processMouseEvent(Container.java:2216)\n        at java.awt.LightweightDispatcher.dispatchEvent(Container.java:2125)\n        at java.awt.Container.dispatchEventImpl(Container.java:1195)\n        at java.awt.Window.dispatchEventImpl(Window.java:923)\n        at java.awt.Component.dispatchEvent(Component.java:2492)\n        at java.awt.EventQueue.dispatchEvent(EventQueue.java:334)\n        at java.awt.EventDispatchThread.pumpOneEventForHierarchy\n(EventDispatchThread.java:126)\n        at java.awt.EventDispatchThread.pumpEventsForHierarchy\n(EventDispatchThread.java:93)\n        at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:88)\n        at java.awt.EventDispatchThread.run(EventDispatchThread.java:80)"}, {"count": 1, "tags": [], "creator": "sebb@apache.org", "attachment_id": null, "id": 62314, "time": "2004-08-22T19:14:46Z", "bug_id": 30779, "creation_time": "2004-08-22T19:14:46Z", "is_private": false, "text": "Looks like it thinks the results file is CSV, whereas it is actually XML.\n\nThis would account for it trying to parse \n    <?xml version=\"1.0\" encoding =\"UTF-8\"?>\nas a Long.\n\nIf the output format disagrees with the file format, then JMeter won't read the\nfile properly.\n\nNote that if one creates a results file using xml format, and then changes the\noutput format to csv, JMeter will append the new results to the existing file,\nthus creating a file which is a mixture of XML and CSV formats, which will not\nload successfully using either format.\n\nIt would be worth checking the result format setting in jmeter.properties, and\nthat the whole results file is one format or the other ...\n\nWithout seeing the files, my analysis could be wrong, so if the two formats do\nagree, please could you attach the failing results file and jmeter.properties?"}, {"count": 2, "tags": [], "bug_id": 30779, "attachment_id": 12511, "text": "Created attachment 12511\nExample results with error.", "id": 62341, "time": "2004-08-23T16:50:08Z", "creator": "javamike9@yahoo.com", "creation_time": "2004-08-23T16:50:08Z", "is_private": false}, {"count": 3, "tags": [], "creator": "javamike9@yahoo.com", "attachment_id": null, "id": 62342, "creation_time": "2004-08-23T16:51:00Z", "time": "2004-08-23T16:51:00Z", "bug_id": 30779, "text": "I tried to open the attached file with an aggregate listener and got the same \nreaction.", "is_private": false}, {"count": 4, "tags": [], "bug_id": 30779, "attachment_id": 12512, "text": "Created attachment 12512\nJmeter config", "id": 62343, "time": "2004-08-23T16:51:23Z", "creator": "javamike9@yahoo.com", "creation_time": "2004-08-23T16:51:23Z", "is_private": false}, {"count": 5, "tags": [], "creator": "javamike9@yahoo.com", "attachment_id": null, "is_private": false, "id": 62358, "time": "2004-08-23T19:42:27Z", "bug_id": 30779, "creation_time": "2004-08-23T19:42:27Z", "text": "There seems to be some problem loading line 3235 (which has some strange stuff \nin it).  As soon as I delete that line the file loads into the listener."}, {"count": 6, "tags": [], "bug_id": 30779, "attachment_id": null, "text": "Well spotted! \n\nI've had a look at the Result loading code, and the problem becomes clear - if\nthe XML does not parse correctly, the code silently assumes that the file must\nbe in CSV format, and passes it to the CSV parser.\n\nThis expects to find a numeric timestamp at the start of the line. \nInstead it gets the XML header. \n\nIn this case, the line contains some invalid XML, viz &#8; and &#1; and possibly\nothers.\n\nI will check in a fix to log some messages to show what is happening.\n\nBut how did the invalid XML find its way into the file? \nIt is possibly significant that the responseCode = \"-1\", which is not a normal\nHTTP response code. What does the \"Load Eligibility Request\" sampler do?", "id": 62366, "time": "2004-08-23T22:08:13Z", "creator": "sebb@apache.org", "creation_time": "2004-08-23T22:08:13Z", "is_private": false}, {"count": 7, "tags": [], "bug_id": 30779, "is_private": false, "text": "It actually does very little.  I have noticed that there are several '-1' \nresponse codes in the file.  The samplers that produce these invalid responses \nare often very straightforward 'get' requests.  In some cases thay are just \nrequests for images.\n\nThe 'responseMessage' attribute consistantly has strange garbage in it when \nthis happens.  I am wondering if this is caused by the server that the sampler \nis making requests against when placed under load, not sure.\n\nRegardless, I am uncomfortable that the sampler is able to write invalid xml \ninto the file.", "id": 62438, "time": "2004-08-24T20:58:06Z", "creator": "javamike9@yahoo.com", "creation_time": "2004-08-24T20:58:06Z", "attachment_id": null}, {"count": 8, "tags": [], "creator": "sebb@apache.org", "attachment_id": null, "id": 62506, "time": "2004-08-25T21:23:57Z", "bug_id": 30779, "creation_time": "2004-08-25T21:23:57Z", "is_private": false, "text": "I agree that the sampler should not write invalid XML into the file.\n\nI've had a look at the code, and can't see anything obvious. \nThis part of the code uses Avalon Config to create the XML.\nThe response message itself is obtained directly from the HttpURLConnection object.\n\nIt might be interesting to run a test with CSV output instead of XML, as this\nappears to save the data as-is. Having obtained the raw data, it should be\neasier to find out why it is not being encoded correctly.\n\n[BTW, the JavaTest sampler is quite useful for testing what happens to response\ncodes and messages etc as you can supply your own text]\n\nAre you able to supply a test case?\n\nIf not, perhaps there is some scope for a debug version of JMeter that detects\nwhen the response code is -1 and dumps the raw response message - if the CSV\nmethod does not produce useful results."}, {"count": 9, "attachment_id": null, "bug_id": 30779, "text": "I've created a simple test script that uses a BeanShell Assertion to check the \nresponse code and conditionally write the ResponseMessage to a file.\n\n[To use this, you need to add the BeanShell jar from www.beanshell.org to the \nlib directory.]\n\nIt's not ideal, but it might be enough to track down the problem.\n\nBTW, I first tried using the BeanShell Assertion to set a JMeter Variable. This \nworked, but unfortunately the If Controller seems to resolve the condition just \nthe once, so it did not detect changes in the value.", "id": 62580, "time": "2004-08-27T12:51:09Z", "creator": "sebb@apache.org", "creation_time": "2004-08-27T12:51:09Z", "tags": [], "is_private": false}, {"count": 10, "tags": [], "bug_id": 30779, "attachment_id": null, "id": 64700, "creation_time": "2004-10-06T15:43:13Z", "time": "2004-10-06T15:43:13Z", "creator": "mstover1@apache.org", "text": "In HEAD, .jtl files are written using XStream instead of Avalon's Configuration.\n Hopefully this will fix this problem.", "is_private": false}, {"count": 11, "tags": [], "bug_id": 30779, "is_private": false, "text": "No point fixing this now we are using Xstream. Please re-open if it occurs \nwith Xstream", "id": 87178, "time": "2006-03-23T21:07:52Z", "creator": "sebb@apache.org", "creation_time": "2006-03-23T21:07:52Z", "attachment_id": null}, {"count": 12, "tags": [], "creator": "msechres@redhat.com", "attachment_id": 18256, "id": 89038, "time": "2006-05-11T13:11:36Z", "bug_id": 30779, "creation_time": "2006-05-11T13:11:36Z", "is_private": false, "text": "Created attachment 18256\nSmall result file"}, {"count": 13, "tags": [], "bug_id": 30779, "is_private": false, "text": "I'm seeing similar behaviour trying to reload a results file created with the\nSimpleDataListener in 2.1.1.\n\nJmeter.log:\n2006/05/11 09:04:05 INFO  - jmeter.visualizers.gui.AbstractVisualizer: getting\nnew collector\n2006/05/11 09:04:09 INFO  - jmeter.protocol.http.sampler.HTTPSampler2:\nhttpsampler2.basicauth=false\n2006/05/11 09:04:09 WARN  - jmeter.save.SaveService: Could not set up alias\nBeanShellSampler java.lang.ClassNotFoundException:\norg.apache.jmeter.protocol.java.sampler.BeanShellSampler\n2006/05/11 09:04:09 INFO  - jmeter.save.SaveService: Using SaveService\nproperties file 1.7\n2006/05/11 09:04:09 INFO  - jmeter.save.SaveService: All converter versions\npresent and correct\n2006/05/11 09:04:09 WARN  - jmeter.reporters.ResultCollector: File load failure,\ntrying old data format.\n2006/05/11 09:04:09 WARN  - jmeter.reporters.ResultCollector: Error parsing XML\nresults com.thoughtworks.xstream.converters.ConversionException: sampleResult :\nsampleResult\n---- Debugging information ----\nrequired-type       : org.apache.jmeter.save.TestResultWrapper\ncause-message       : sampleResult : sampleResult\nclass               : org.apache.jmeter.save.TestResultWrapper\nmessage             : sampleResult : sampleResult\nline number         : 4\npath                : /testResults/sampleResult\ncause-exception     : com.thoughtworks.xstream.alias.CannotResolveClassException\n-------------------------------\n2006/05/11 09:04:09 INFO  - jmeter.reporters.ResultCollector: Assuming CSV\nformat instead\n2006/05/11 09:04:09 WARN  - jmeter.save.OldSaveService: Error parsing number\njava.lang.NumberFormatException: For input string: \"<?xml version=\"1.0\"\nencoding=\"UTF-8\"?>\"\n\nLooking at the results file, it seems to be incorrectly formatted after about 20\nlines. I tried just getting the lines before the formatting changed to a\nseparate file, and loading that, but it give the same error. I have attached the\nshorter file.\n\nI can open some saved files. It appears to be longer runs (larger data files)\nthat have this problem.", "id": 89039, "time": "2006-05-11T13:13:16Z", "creator": "msechres@redhat.com", "creation_time": "2006-05-11T13:13:16Z", "attachment_id": null}, {"count": 14, "tags": [], "creator": "sebb@apache.org", "attachment_id": null, "id": 89040, "time": "2006-05-11T13:30:10Z", "bug_id": 30779, "creation_time": "2006-05-11T13:30:10Z", "is_private": false, "text": "The \"Small result file\" JTL is incomplete - there is no trailing \n</testResults> tag.\n\nHowever, when I added it, it still would not load, even though the XML was \nthen syntactically OK.  This is a different problem from the original - the \nXML in that case was incorrect.\n\nI'll take a look at this later."}, {"count": 15, "tags": [], "bug_id": 30779, "attachment_id": null, "text": "FWIW, I checked several other of my results files, and many of them did not have\nthe closing </testResults> tag.", "id": 89049, "time": "2006-05-11T17:24:43Z", "creator": "msechres@redhat.com", "creation_time": "2006-05-11T17:24:43Z", "is_private": false}, {"count": 16, "tags": [], "bug_id": 30779, "is_private": false, "text": "I found a bug in the code - if the Avalon XML reader does not like the input (as\nin this case), the log message uses the old XStream exception, which is rather\nconfusing.\n\nWhen I fixed this, it showed that the last sampleResult is also missing its\nclosing tag. It looks as though some nested samples may have been missing.\n\nDid the test fail to complete in some way? That could explain the missing output.\n\nThe original Avalon JTL files have the following second line:\n<testResults>\nand the samples look like\n<sampleResult timeStamp=\"1146770278785\" ...\n\nwhereas later XStream JTL files have a version number:\n<testResults version=\"1.1\">\nand the samples look like\n<sample t=\"300\" ...\nor\n<httpSample t=\"1002\" ...\n\n\"Small result file\" has a version number, but is otherwise an Avalon file.\nThis means that the property file_format.testlog has been set to 2.0.\nUnless you particularly need this format, I suggest you revert to the default.", "id": 89058, "time": "2006-05-11T20:45:04Z", "creator": "sebb@apache.org", "creation_time": "2006-05-11T20:45:04Z", "attachment_id": null}, {"count": 17, "tags": [], "bug_id": 30779, "attachment_id": null, "text": "I think this is now fixed in the 2.1 branch\n\nPlease re-open if not.", "id": 89505, "time": "2006-05-25T23:23:28Z", "creator": "sebb@apache.org", "creation_time": "2006-05-25T23:23:28Z", "is_private": false}, {"count": 18, "attachment_id": null, "bug_id": 30779, "text": "(In reply to comment #16)\n> Did the test fail to complete in some way?\nNo, the test ran fine.\n\n> This means that the property file_format.testlog has been set to 2.0.\n> Unless you particularly need this format, I suggest you revert to the default.\n\nfile_format.testlog IS set to 2.0, but I didn't set it. It would seem that is\nthe default for the version I installed. (jmeter.properties is v 1.124.2.2)", "id": 90111, "time": "2006-06-12T20:42:37Z", "creator": "msechres@redhat.com", "creation_time": "2006-06-12T20:42:37Z", "tags": [], "is_private": false}]