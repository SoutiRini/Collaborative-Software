[{"count": 0, "tags": [], "bug_id": 17695, "attachment_id": null, "id": 32509, "time": "2003-03-05T21:46:57Z", "creator": "brian.brooks@metavante.com", "creation_time": "2003-03-05T21:46:57Z", "is_private": false, "text": "I'm encountering a situation where the ant tasks keep thinking a file is \nmodified when it isn't (it was just checked out with the starteam task).  After \na some analysis it seems that the \"modified\" state is because the starteam task \nis grabbing a CR/LF version that differes in bytes from the the purely LF \nversion of the file.\n\n** Configuration\nPC Running ANT - 4.2.699 (Service Pack 2), Windows 2000\nStarteam Server - 4.2 (Service Pack 2), Windows 2000\n\n** Ant Session\nThe file the starteam tasks unexpectantly reports as modified is C1RDO.java.  \n\nO:\\c1\\ant-scripts\\src2>ant checkout_baseline\nBuildfile: build.xml\n\ninit:\n\ncheckout-init:\n\ncheckout_baseline:\n   [delete] Deleting directory O:\\c1\\ant-scripts\\src2\\s1\\com\\brokatfs\\charterone\n[stcheckout] Ignoring createworkingdirs while using a revision label.  Folders \nwill be created only as needed.\n[stcheckout] Recursive Checkout from: ps\\charterone\\com\\brokatfs\\charterone\\\n[stcheckout]   Checking out to: O:\\c1\\ant-scripts\\src2\\.\\s1\n\\com\\brokatfs\\charterone\n[stcheckout]   Using revision label R20030126-pcr7\n[stcheckout]   Items will be checked out with no change in lock status.\n[stcheckout]   Items will be checked out with repository timestamps.\n[stcheckout]   Items will be checked out in accordance with repository status.\n[stcheckout]   Local items not found in the repository will be deleted.\n[stcheckout]   Directories will be created only where needed to check out files.\n[stcheckout] Creating folder: .\\s1\\com\\brokatfs\\charterone\n[stcheckout] Checked out \nps\\charterone\\com\\brokatfs\\charterone\\AccountSummary.java --> .\\s1\n\\com\\brokatfs\\charterone\\AccountSummary\n.java\n[stcheckout] Checked out \nps\\charterone\\com\\brokatfs\\charterone\\AlsResponse.java --> .\\s1\n\\com\\brokatfs\\charterone\\AlsResponse.java\n[stcheckout] Checked out \nps\\charterone\\com\\brokatfs\\charterone\\C1AccountUtils.java --> .\\s1\n\\com\\brokatfs\\charterone\\C1AccountUtils\n.java\n[stcheckout] Checked out ps\\charterone\\com\\brokatfs\\charterone\\C1HistLoad.java -\n-> .\\s1\\com\\brokatfs\\charterone\\C1HistLoad.java\n[stcheckout] Checked out ps\\charterone\\com\\brokatfs\\charterone\\C1RDO.java --\n> .\\s1\\com\\brokatfs\\charterone\\C1RDO.java\n[stcheckout] Checked out \nps\\charterone\\com\\brokatfs\\charterone\\HostMessage.java --> .\\s1\n\\com\\brokatfs\\charterone\\HostMessage.java\n[stcheckout] Checked out \nps\\charterone\\com\\brokatfs\\charterone\\HostResponse.java --> .\\s1\n\\com\\brokatfs\\charterone\\HostResponse.jav\na\n[stcheckout] Checked out ps\\charterone\\com\\brokatfs\\charterone\\Total.java --\n> .\\s1\\com\\brokatfs\\charterone\\Total.java\n[stcheckout] Checked out \nps\\charterone\\com\\brokatfs\\charterone\\C1Accounts.properties --> .\\s1\n\\com\\brokatfs\\charterone\\C1Accounts.p\nroperties\n[stcheckout] Checked out ps\\charterone\\com\\brokatfs\\charterone\\C1Util.java --\n> .\\s1\\com\\brokatfs\\charterone\\C1Util.java\n[stcheckout] Checked out \nps\\charterone\\com\\brokatfs\\charterone\\HostRequester.java --> .\\s1\n\\com\\brokatfs\\charterone\\HostRequester.j\nava\n[stcheckout] Checked out \nps\\charterone\\com\\brokatfs\\charterone\\HostTransaction.java --> .\\s1\n\\com\\brokatfs\\charterone\\HostTransacti\non.java\n\nBUILD SUCCESSFUL\nTotal time: 18 seconds\nO:\\c1\\ant-scripts\\src2>ant checkout_overlay_label\nBuildfile: build.xml\n\ninit:\n\ncheckout-init:\n\ncheckout_overlay_label:\n[stcheckout] Recursive Checkout from: ps\\charterone\\com\\brokatfs\\charterone\\\n[stcheckout]   Checking out to: O:\\c1\\ant-scripts\\src2\\.\\s1\n\\com\\brokatfs\\charterone\n[stcheckout]   Using view label TR0000003\n[stcheckout]   Items will be checked out with no change in lock status.\n[stcheckout]   Items will be checked out with repository timestamps.\n[stcheckout]   Items will be checked out regardless of repository status.\n[stcheckout]   Directories will be created wherever they exist in the \nrepository, even if empty.\n[stcheckout] Checking out: \nps\\charterone\\com\\brokatfs\\charterone\\C1OfxDataHandlerSTPCHKRQ.java --> O:\\c1\n\\ant-scripts\\src2\\s1\\com\\b\nrokatfs\\charterone\\C1OfxDataHandlerSTPCHKRQ.java\n[stcheckout] Forced checkout of \nps\\charterone\\com\\brokatfs\\charterone\\C1RDO.java --> O:\\c1\\ant-scripts\\src2\\s1\n\\com\\brokatfs\\charte\nrone\\C1RDO.java over status Modified\n[stcheckout] Checking out: \nps\\charterone\\com\\brokatfs\\charterone\\UserStatusAssembler.java --> O:\\c1\\ant-\nscripts\\src2\\s1\\com\\brokat\nfs\\charterone\\UserStatusAssembler.java\n[stcheckout] Checking out: \nps\\charterone\\com\\brokatfs\\charterone\\UserStatusVO.java --> O:\\c1\\ant-\nscripts\\src2\\s1\\com\\brokatfs\\char\nterone\\UserStatusVO.java\n[stcheckout] Checking out: \nps\\charterone\\com\\brokatfs\\charterone\\UserStatusClientState.java --> O:\\c1\\ant-\nscripts\\src2\\s1\\com\\brok\natfs\\charterone\\UserStatusClientState.java\n\nBUILD SUCCESSFUL\nTotal time: 11 seconds\nO:\\c1\\ant-scripts\\src2>"}, {"count": 1, "text": "I'm beginning to think this issue isn't EOL related.  Instead, I think it might \nbe that the stcheckout task isn't communicating to the server the \"Revision on \nDisk\".  \n\nGiven: file F in starteam with branch revisions 1.1 and 1.2, and revision on \ndisk 1 and 2, respecitively.  Let revision 1.1 have file size 10 and revision \n1.2 have file size 20.  Let the tip for file F be 1.2.  Let Attach \nlabel \"mylabel1\" to 1.1 and \"mylabel2\" to 1.2.  In summary,\n\n for file F\n       branch revision   revision on disk  label     file size\n       ---------------   ----------------  -------   ---------\n tip-> 1.2               2                 mylabel2  20 bytes\n       1.1               1                 mylabel1  10 bytes\n\nTest: If stcheckout grabs the file with \"mylabel1\", I assume the starteam \nwindows client would report \"Revision on Disk\" as 1.  However, I'm seeing the \nstarteam windows client reporting \"Revision on Disk\" as 2.\n\nQuestions: \n1. How does the starteam windows client determine the \"Revision on Disk\"?\n2. Why is the file Status=Modified?  I assume because the file size is 10 and \ndoesn't match the file size for the tip revision 20.\n3. How does the starteam SDK determine if a file is modified?", "creator": "brian.brooks@metavante.com", "is_private": false, "id": 32607, "time": "2003-03-06T22:02:41Z", "bug_id": 17695, "creation_time": "2003-03-06T22:02:41Z", "tags": [], "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 17695, "attachment_id": null, "id": 32701, "time": "2003-03-07T22:33:50Z", "creator": "scohen@apache.org", "creation_time": "2003-03-07T22:33:50Z", "is_private": false, "text": "*** Bug 17646 has been marked as a duplicate of this bug. ***"}, {"count": 3, "tags": [], "bug_id": 17695, "attachment_id": null, "id": 32703, "time": "2003-03-07T22:37:49Z", "creator": "scohen@apache.org", "creation_time": "2003-03-07T22:37:49Z", "is_private": false, "text": "This is not a duplicate of 17646, that was an error that has propagated here."}, {"count": 4, "tags": [], "bug_id": 17695, "attachment_id": null, "id": 32704, "time": "2003-03-07T23:07:30Z", "creator": "scohen@apache.org", "creation_time": "2003-03-07T23:07:30Z", "is_private": false, "text": "Before I get too deeply into this, I need to understand better.  There is no\ncommunication per se between the star team tasks and the GUI.  Both read from\nthe repository.  The question is when.  I was able to duplicate at least part of\nyour scenario simply from opening two instances of the GUI.  I pointed both at\nthe same file, and from instance 1, checked it out, made some changes, and then\nchecked it back in.  In instance 1, the \"Revision on Disk\" immediately updated\nas the file was checked in.  However, in instance 2, \"Revision on Disk\" stayed\nat the previous value.  I had to do an \"Update Status\" or a \"Refresh\" to get\nthat current.\n\nAre you sure that is not what is happening here?"}, {"count": 5, "tags": [], "text": "I agree the GUI isn't the best tool to detect the status of a file.  The GUI \nisn't essential to reproducing the issue.  The issue happens purely from \nstcheckout tasks.", "is_private": false, "id": 32856, "creator": "brian.brooks@metavante.com", "time": "2003-03-10T14:03:06Z", "bug_id": 17695, "creation_time": "2003-03-10T14:03:06Z", "attachment_id": null}, {"count": 6, "tags": [], "text": "I think I need a more detailed description to proceed with looking at this. \nAlso, your StarTeam version is older than any I have access to.\n\nSince both your client and server are Win2K machines, I am assuming that CRLF\nconsiderations are not involved.  Also the whole discussion about \"Revision On\nDisk\" seems to be a false trail, since that is inherently GUI dependent.\n\nI wonder if the problem is not inherent in the operation of checking out to a\nlabel.  Could it perhaps be that StarTeam sees a later version of the file on\ndisk and therefore assumes that the file is \"modified\" vis-a-vis the labeled\nversion you are trying to check out?  Personally, when checking out a labeled\nproject version through ant, I'd be tempted to start with an empty local\ndirectory tree.  Otherwise, to get a fully correct local tree you must make sure\nto also set the createworkingdirs and deleteuncontrolled attributes.  I'd like\nto understand more of your use case here.\n\nAt any rate I am going to set this to INVALID.  If you can provide me with more\nexact details, I will take a further look.  Sorry to take so long on this, but I\nhave been very busy the past six months.", "is_private": false, "id": 43563, "creator": "scohen@apache.org", "time": "2003-09-01T19:14:58Z", "bug_id": 17695, "creation_time": "2003-09-01T19:14:58Z", "attachment_id": null}]