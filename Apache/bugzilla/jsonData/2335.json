[{"text": "After DOM object tree is created (either with DOMParser, or manualy by using \nDocument.createElement(), Document.createNode(), etc. functions), it causes \nNullPointerExceptions in programmer's code. Here are the steps:\n1) Build a 3 level DOM tree: <a><b><c_1/><c_2/><c_3/>...<c_n/></b></a> where \nthere n is  over 4000. Document can be either parsed from text or built \nmanually.\n2) use getChildNodes() to get children of <b> in the form of NodeList instance.\n3) Iterate through the NodeList instance. Return of the item(int) will be Null \nfor some items. This is a bug since under no circumstances should item of a \nNodeList be null, if it is in range (and it is here).\n4) This problem occurs in multithreaded environment and the iteration through \nthe same document may or may not produce this error right away. Namely, the bug \ndoes not arise if the DOM object tree is iterated in the same thread \nimmediately after it was created, but may arise later against the same DOM \nobject. Also this problem occurs only sometimes against the same XML input \nwhich implies some thread-related problems.", "tags": [], "bug_id": 2335, "attachment_id": null, "count": 0, "id": 3276, "time": "2001-06-26T11:28:58Z", "creator": "aparfeno@brightlane.com", "creation_time": "2001-06-26T11:28:58Z", "is_private": false}, {"count": 1, "tags": [], "creator": "vsinaniyev@doubleclick.net", "attachment_id": null, "id": 3581, "time": "2001-07-10T14:05:41Z", "bug_id": 2335, "creation_time": "2001-07-10T14:05:41Z", "is_private": false, "text": "I see the same behavior"}, {"count": 2, "tags": [], "bug_id": 2335, "attachment_id": null, "is_private": false, "id": 3638, "time": "2001-07-11T08:29:52Z", "creator": "elena@apache.org", "creation_time": "2001-07-11T08:29:52Z", "text": "I hate to ask it.. but do you know that DOM does not provide any support for \nconcurrent access? It is application that have to do the synchronization.\nDo you synchronize the access to DOM in your application?"}, {"count": 3, "text": "The document that I read and iterate on is read only. Synchronized access to \nread only documents is a big performance hit for us. Also, I have seen the null \npointer exception on documents that have function scope\t(document reference is \ncreated locally on the stack).\n", "bug_id": 2335, "is_private": false, "id": 3642, "time": "2001-07-11T08:44:22Z", "creator": "vsinaniyev@doubleclick.net", "creation_time": "2001-07-11T08:44:22Z", "tags": [], "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 2335, "attachment_id": null, "id": 7409, "time": "2001-10-31T15:06:50Z", "creator": "elena@apache.org", "creation_time": "2001-10-31T15:06:50Z", "is_private": false, "text": "As Vlad mentions, DOM does not provide any support for \nconcurrent access: an application is responsible for the synchronization, \nmeaning that the operations on accessing and modifying DOM should be \nsynchronized by application."}]