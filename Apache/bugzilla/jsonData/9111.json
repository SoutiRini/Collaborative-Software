[{"count": 0, "tags": [], "bug_id": 9111, "attachment_id": null, "id": 16150, "time": "2002-05-15T13:16:55Z", "creator": "alexander.lamm@livinglogic.de", "creation_time": "2002-05-15T13:16:55Z", "is_private": false, "text": "I recently moved from Tomcat 3.2.3 to Tomcat 3.3.1 final.\nWhen using a context path containing a '~' character, relative URLs within this \ncontext were not properly URL encoded when turning off cookies. Since this had \nworked up to now with Tomcat 3.2.3, I went searching the source code and found \nthe following in org.apache.tomcat.facade.HttpServletResponseFacade:\n\nWhen calling encodeURL() for a relative URL, it is made absolute based on the \nrequest URL retrieved by calling javax.servlet.http.HttpUtils.getRequestURL() \non the current request object. Now, with Tomcat 3.3.1 the request object \nreturns an encoded string for getRequestURI(), which is called by HttpUtils \ninternally in getRequestURL(). This is due to the Servlet 2.2 Specification \nErrata (4/27/00).\nBefore returning the current request URI, which is already decoded, it \ntherefore has to be reencoded by using the org.apache.tomcat.util.buf.UEncoder. \nUEncoder encodes all characters in a given string with the proper hexadecimal \nescape sequence except certain \"safe\" characters which are allowed to be \nunescaped. These \"safe\" characters include by default \"unreserved\" characters \nas defined by RFC1738. In contrast to the newer RFC2396 this \"unreserved\" set \ndoesn't include the '~' character. The '~' in our request's path is therefore \nencoded by '%7e'.\n\nNow that the absolute URL for the given relative one is found, it is checked if \nit contains the current request's context path. If it doesn't, no URL encoding \nis desired for this URL. But, since this context path is returned unencoded, \nthere is no match between '~' in the context path and '%7e' in the absolute URL \nto encode. This means that our relative URL is not encoded as it should be.\n\nTo solve the encountered problem I propose the following patch:\n\nIndex: src/facade22/org/apache/tomcat/facade/HttpServletResponseFacade.java\n===================================================================\nRCS file: /home/cvspublic/jakarta-\ntomcat/src/facade22/org/apache/tomcat/facade/HttpServletResponseFacade.java,v\nretrieving revision 1.28\ndiff -u -r1.28 HttpServletResponseFacade.java\n--- src/facade22/org/apache/tomcat/facade/HttpServletResponseFacade.java        \n22 Mar 2002 02:54:34 -0000      1.28\n+++ src/facade22/org/apache/tomcat/facade/HttpServletResponseFacade.java        \n15 May 2002 07:45:04 -0000\n@@ -64,6 +64,7 @@\n\n package org.apache.tomcat.facade;\n\n+import org.apache.tomcat.util.buf.UDecoder;\n import org.apache.tomcat.util.res.StringManager;\n import org.apache.tomcat.util.http.*;\n import org.apache.tomcat.core.*;\n@@ -416,8 +417,9 @@\n            Request request = response.getRequest();\n            HttpServletRequestFacade reqF=(HttpServletRequestFacade)request.\n                getFacade();\n-           String requrl =\n-               HttpUtils.getRequestURL(reqF).toString();\n+           UDecoder udecoder = request.getURLDecoder();\n+           String requrl = udecoder.convert(\n+               HttpUtils.getRequestURL(reqF).toString());\n            try {\n                url = new URL(new URL(requrl), location);\n            } catch (MalformedURLException e2) {\n\nIt could be more sensible though, to change the way the current request's URL \nis retrieved, or to change UEncoder to conform to RFC2396. I don't have enough \ninsight into Tomcat code and the underlying specifications to know about \npossible implications. The patch above worked for me however.\n\nThanks for regarding my proposal.\n\nAlex."}, {"count": 1, "tags": [], "bug_id": 9111, "attachment_id": null, "id": 18990, "time": "2002-07-04T04:12:59Z", "creator": "william.barker@wilshire.com", "creation_time": "2002-07-04T04:12:59Z", "is_private": false, "text": "This is now fixed in the CVS HEAD.\n"}]