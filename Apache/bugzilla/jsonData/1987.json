[{"count": 0, "tags": [], "creator": "paul.houghton@wcom.com", "attachment_id": null, "id": 2735, "time": "2001-06-04T10:20:35Z", "bug_id": 1987, "creation_time": "2001-06-04T10:20:35Z", "is_private": false, "text": "When creating a Subclass of Catagory, the location information output is\nnot correct because overriding FQCN is ignored.\n\nORIGINAL CODE:\n  /**\n     The fully qualified name of the class that this Category\n     object. Subclasses should override this variable.  */\n  private static final String FQCN = Category.class.getName();\n\nFor the override to have any affect, FQCN should be:\n\nNEW CODE:\n  /**\n     The fully qualified name of the class that this Category\n     object. Subclasses should override this variable.  */\n  protected static String FQCN = Category.class.getName();\n\n\nThanks for an outstanding class library!\n\nPaul Houghton"}, {"count": 1, "tags": [], "creator": "pglezen@us.ibm.com", "attachment_id": null, "id": 2795, "time": "2001-06-07T23:13:35Z", "bug_id": 1987, "creation_time": "2001-06-07T23:13:35Z", "is_private": false, "text": "I'm sorry if this is repeated.  I typed something like the following once, hit \nsome key by accident and it all disappeared.  I don't know if was submitted or \nnot.\n\nI don't know of a reason why a Category subclass would need/want access to the \nCategory FQCN.  The focus of Category polymorphism is the forcedLog method.  \nThe FCQN field needs to correspond to whatever class is executing the method.  \nA subclass overriding forcedLog should not be using Category's FQCN.  This will \ncause the stack trace analysis to fail.\n\nCan Paul Houghton be more specific as to why Category's FQCN is needed from \nwithin a subclass?  I don't have an objection to making it protected.  But I'd \nbe interested in why it would be needed."}]