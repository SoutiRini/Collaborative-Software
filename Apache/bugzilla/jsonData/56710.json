[{"count": 0, "tags": [], "bug_id": 56710, "attachment_id": null, "id": 176338, "time": "2014-07-10T21:15:27Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2014-07-10T21:15:27Z", "is_private": false, "text": "I encountered this while testing 8.0.10 release candidate while investigating bug 56658 regression.\n\nSteps to reproduce - see Comment 3 in bug 56658, but skip step 4,\nhttps://issues.apache.org/bugzilla/show_bug.cgi?id=56658#c3\n\nThat is: cause reload of the examples webapp, but ask for \"index.html\" while reloading has not been completed yet.\n\nExpected: The request shall wait for web application reload to complete and then display the page (or error 404 in case of that bug that I was investigating). There is a loop in CoyoteAdapter that waits while context is being reloaded.\n\nActual: A blank page is rendered, and an IllegalStateException is logged.\n\nA snippet from catalina.2014-07-11.log:\n[[[\n11-Jul-2014 00:45:08.124 INFO [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.startup.HostConfig.reload Reloading context [/examples]\n11-Jul-2014 00:45:08.125 INFO [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.core.StandardContext.reload Reloading Context with name [/examples] has started\n11-Jul-2014 00:45:08.164 SEVERE [http-nio-8080-exec-1] org.apache.coyote.http11.AbstractHttp11Processor.process Error processing request\n java.lang.IllegalStateException: The resources may not be accessed if they are not currently started\n\tat org.apache.catalina.webresources.StandardRoot.validate(StandardRoot.java:245)\n\tat org.apache.catalina.webresources.StandardRoot.getResource(StandardRoot.java:212)\n\tat org.apache.catalina.webresources.StandardRoot.getResource(StandardRoot.java:206)\n\tat org.apache.catalina.mapper.Mapper.internalMapWrapper(Mapper.java:946)\n\tat org.apache.catalina.mapper.Mapper.internalMap(Mapper.java:765)\n\tat org.apache.catalina.mapper.Mapper.map(Mapper.java:635)\n\tat org.apache.catalina.connector.CoyoteAdapter.postParseRequest(CoyoteAdapter.java:861)\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:521)\n\tat org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1078)\n\tat org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:658)\n\tat org.apache.coyote.http11.Http11NioProtocol$Http11ConnectionHandler.process(Http11NioProtocol.java:222)\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1566)\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1523)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\n\tat java.lang.Thread.run(Thread.java:745)\n\n11-Jul-2014 00:45:09.007 INFO [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.core.StandardContext.reload Reloading Context with name [/examples] is completed\n]]]\n\nA snippet from localhost.2014-07-11.log:\n[[[\n127.0.0.1 - - [11/Jul/2014:00:44:10 +0400] \"GET /examples/index.html HTTP/1.1\" 200 1156\n127.0.0.1 - - [11/Jul/2014:00:44:21 +0400] \"GET /examples/index.html HTTP/1.1\" 304 -\n127.0.0.1 - - [11/Jul/2014:00:44:21 +0400] \"GET /favicon.ico HTTP/1.1\" 304 -\n127.0.0.1 - - [11/Jul/2014:00:44:24 +0400] \"GET /examples/index.html HTTP/1.1\" 304 -\n127.0.0.1 - - [11/Jul/2014:00:44:50 +0400] \"GET /examples/index.html HTTP/1.1\" 404 1000\n127.0.0.1 - - [11/Jul/2014:00:44:50 +0400] \"GET /favicon.ico HTTP/1.1\" 304 -\n127.0.0.1 - - [11/Jul/2014:00:45:08 +0400] \"GET /examples/index.html HTTP/1.1\" 500 -\n127.0.0.1 - - [11/Jul/2014:00:45:11 +0400] \"GET /examples/index.html HTTP/1.1\" 404 1000\n127.0.0.1 - - [11/Jul/2014:00:45:16 +0400] \"GET /examples/index.html HTTP/1.1\" 404 1000\n]]]\n\nThe 404 are from the bug that I was investigating. The 500 is from this bug.\n\nI was running with jpda debugging enabled, so webapp reload was a bit slower than usual."}, {"count": 1, "tags": [], "bug_id": 56710, "attachment_id": null, "id": 176340, "time": "2014-07-10T21:47:45Z", "creator": "remm@apache.org", "creation_time": "2014-07-10T21:47:45Z", "is_private": false, "text": "\"Expected: The request shall wait for web application reload to complete and then display the page (or error 404 in case of that bug that I was investigating). There is a loop in CoyoteAdapter that waits while context is being reloaded.\"\n\nThis feature is actually a bug, the server should return a response and move on. It is not a good idea to tie up an indefinite amount of requests/threads waiting for something to happen."}, {"count": 2, "tags": [], "creator": "knst.kolinko@gmail.com", "attachment_id": null, "text": "(In reply to Remy Maucherat from comment #1)\n> It is not a good idea (...)\n\nAck, but some people find it useful. See bug 53024 that asked for it.", "id": 176341, "time": "2014-07-10T22:00:28Z", "bug_id": 56710, "creation_time": "2014-07-10T22:00:28Z", "is_private": false}, {"count": 3, "tags": [], "text": "(In reply to Konstantin Kolinko from comment #2)\n> (In reply to Remy Maucherat from comment #1)\n> > It is not a good idea (...)\n> \n> Ack, but some people find it useful. See bug 53024 that asked for it.\n\nThis was not a feature reuqets in bug 53024. For as long as I cam remember (so back to Tomcat 4.1.x) the intended behaviour has been for the thread to wait while the context reloads.\n\nThis looks like a regression in the new static resource implementation in 8.0.x.", "is_private": false, "bug_id": 56710, "id": 176354, "time": "2014-07-11T18:58:09Z", "creator": "markt@apache.org", "creation_time": "2014-07-11T18:58:09Z", "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 56710, "is_private": false, "text": "(In reply to Mark Thomas from comment #3)\n> (In reply to Konstantin Kolinko from comment #2)\n> > (In reply to Remy Maucherat from comment #1)\n> > > It is not a good idea (...)\n> > \n> > Ack, but some people find it useful. See bug 53024 that asked for it.\n> \n> This was not a feature reuqets in bug 53024. For as long as I cam remember\n> (so back to Tomcat 4.1.x) the intended behaviour has been for the thread to\n> wait while the context reloads.\n\nI filed the wait time issue as bug 56713.", "id": 176370, "time": "2014-07-12T15:55:47Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2014-07-12T15:55:47Z", "attachment_id": null}, {"count": 5, "tags": [], "text": "Fixed in trunk by r1610220 and will be in 8.0.11 onwards.", "is_private": false, "bug_id": 56710, "id": 176380, "time": "2014-07-13T14:57:04Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2014-07-13T14:57:04Z", "attachment_id": null}, {"count": 6, "attachment_id": null, "bug_id": 56710, "text": "Fixed in tc7.0.x by r1611472 and will be in 7.0.55 onwards.", "id": 176468, "time": "2014-07-17T20:54:08Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2014-07-17T20:54:08Z", "tags": [], "is_private": false}]