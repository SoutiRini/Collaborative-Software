[{"count": 0, "tags": [], "bug_id": 51801, "text": "When any method is instrumented with BCEL to include additional constants, and the method was originally compiled with local variables that have generic arguments, the method is no longer viewable in the Eclipse debugger. For these methods, it complains \"com.sun.jdi.InternalException: Got error code in reply:35 occurred retrieving 'this' from stack frame.\" It sounds like the local variable table is somehow not compatible with the debugger, even if the instrumentation activity did not touch the generic local variables. \n\nI'm currently using the 6.0-20110805.040858-2 snapshot. Please let me know if there is any workaround. Thanks!", "id": 149158, "attachment_id": null, "creator": "byron@hawkinssoftware.net", "creation_time": "2011-09-12T04:17:32Z", "time": "2011-09-12T04:17:32Z", "is_private": false}, {"count": 1, "tags": [], "creator": "byron@hawkinssoftware.net", "attachment_id": null, "text": "Here is an icky workaround:\n\n\n        Method method = <initialize>;\n        MethodGen methodGenerator = new MethodGen(method, ...);\n    \tInstructionList instructions = methodGenerator.getInstructionList();\n\n\t\tMap<Integer, InstructionHandle> handlesByPosition = new HashMap<Integer, InstructionHandle>();\n\t\tfor (InstructionHandle handle : instructions.getInstructionHandles())\n\t\t{\n\t\t\thandlesByPosition.put(handle.getPosition(), handle);\n\t\t}\n\n\t\tif (method.getLocalVariableTable() != null)\n\t\t{\n\t\t\tmethodGenerator.removeLocalVariables();\n\t\t\tfor (LocalVariable local : method.getLocalVariableTable().getLocalVariableTable())\n\t\t\t{\n\t\t\t\tmethodGenerator.addLocalVariable(local.getName(), Type.getType(local.getSignature()), local.getIndex(),\n\t\t\t\t\t\thandlesByPosition.get(local.getStartPC()), handlesByPosition.get(local.getStartPC() + local.getLength()));\n\t\t\t}\n\t\t}", "id": 149159, "time": "2011-09-12T06:12:00Z", "bug_id": 51801, "creation_time": "2011-09-12T06:12:00Z", "is_private": false}]