[{"count": 0, "tags": [], "bug_id": 18166, "attachment_id": null, "id": 33496, "time": "2003-03-19T22:19:45Z", "creator": "kmtang@yahoo.com", "creation_time": "2003-03-19T22:19:45Z", "is_private": false, "text": "Can you enable filtering for the task \"concat\" please?"}, {"count": 1, "tags": [], "bug_id": 18166, "attachment_id": 5458, "id": 33595, "time": "2003-03-21T09:58:59Z", "creator": "peter.reilly@corvil.com", "creation_time": "2003-03-21T09:58:59Z", "is_private": false, "text": "Created attachment 5458\nPatch to enhance concat with filerchain, path, header and footer"}, {"count": 2, "tags": [], "bug_id": 18166, "is_private": false, "id": 33596, "creation_time": "2003-03-21T10:02:47Z", "time": "2003-03-21T10:02:47Z", "creator": "peter.reilly@corvil.com", "text": "I have appended a patch to enhance concat:\n\nadd path sub-element\nadd filterchain sub-element\nadd header footer sub-elements\nadd overwrite attribute\n\nThe patch contains mods for four files:\n docs/manual/CoreTasks/concat.html\n src/etc/testcases/taskdefs/concat.xml\n src/main/org/apache/tools/ant/taskdefs/Concat.java\n src/testcases/org/apache/tools/ant/taskdefs/ConcatTest.java\n", "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 18166, "attachment_id": null, "id": 33708, "time": "2003-03-24T18:07:03Z", "creator": "peter.reilly@corvil.com", "creation_time": "2003-03-24T18:07:03Z", "is_private": false, "text": "I have updated the patch to fix two bugs.\n\n1) inline text was not filtered\n2) the filtering code would see\n   multi eof for multi files, this\n   would cause filters like \"tailfilter\"\n   to fail.\n\nthe patch contains the mods to the four files\nagainst cvs, and containing the fixes and\nunittests for the fixes.\n   "}, {"count": 4, "tags": [], "bug_id": 18166, "is_private": false, "text": "Created attachment 5480\nupdated patch to fix in-line bug and mutli-file bug", "id": 33709, "time": "2003-03-24T18:10:12Z", "creator": "peter.reilly@corvil.com", "creation_time": "2003-03-24T18:10:12Z", "attachment_id": 5480}, {"count": 5, "attachment_id": null, "creator": "bodewig@apache.org", "is_private": false, "id": 33749, "time": "2003-03-25T11:50:08Z", "bug_id": 18166, "creation_time": "2003-03-25T11:50:08Z", "tags": [], "text": "Peter,\n\nI have a couple of issues with your patch.  I've reverted parts of your patch\nthat contained removal of comments and the addition of wildcard imports.  I'll\nattach what I have now so that we can go from there.\n\nThe issues I have:\n\n* you completely ignore all <fileset>'s and so on if nested text is present.\n\n* encoding is ignored when reading from files.\n\n* The handling of header and footer would reintroduce the bug where a newline\n  incorrectly gets appended - I've sort of fixed that by using print instead\n  of println.\n\n* I don't think TextElement#setFile should ignore that the referenced file\n  doesn't exist.\n\n* The trim attribute in TextElement should apply to nested text as well (instead\n  of unconditionally trimming it.\n\n* We might need the sanitizeText logic for header and footer as well.\n\n* What do you need trimleading for?\n\n* Why do you apply filterchains to nested text but not to header and footer?\n\nA long list, I know.  And still incomplete, I guess.  I'm not sure about the\nchanged semantics of the append attribute, for example.\n\n"}, {"count": 6, "tags": [], "bug_id": 18166, "attachment_id": 5495, "id": 33750, "time": "2003-03-25T11:51:01Z", "creator": "bodewig@apache.org", "creation_time": "2003-03-25T11:51:01Z", "is_private": false, "text": "Created attachment 5495\nModified version of Concat - smaller diff against original."}, {"count": 7, "tags": [], "bug_id": 18166, "attachment_id": null, "id": 33755, "time": "2003-03-25T13:05:02Z", "creator": "peter.reilly@corvil.com", "creation_time": "2003-03-25T13:05:02Z", "is_private": false, "text": "Cool... Thanks for the feedback.\nOk i had a quick look at the list and the code.\n\n>> * I've reverted parts of your patch that contained removal of comments\n     and the addition of wildcard imports.\nCool, I had attempted a merge between my concat2 and concat, but missed\nthese.\n>> * you completely ignore all <fileset>'s and so on if nested text is present.\nI think this is the original behaviour of concat. - it throws a buildexception.\n\n>> * encoding is ignored when reading from files.\nThis is a bug I introduced when fixing the multi file bug, I\ncan attach a new concat file, if needed.\n\n>> * The handling of header and footer would reintroduce the bug where a newline\n  incorrectly gets appended - I've sort of fixed that by using print instead\n  of println.\nThis is true, especially since I added the file attribute. I'll check\nto see what effect this has on my build scripts.\n\n>> * I don't think TextElement#setFile should ignore that the referenced file\n  doesn't exist.\nThis is true, I sort of put setFile in as a last-minute idea\n\n>> * The trim attribute in TextElement should apply to nested text as well (instead\n  of unconditionally trimming it.\nIt only looks like it unconditionally trims it.\n\n>> * We might need the sanitizeText logic for header and footer as well.\nThe line (if (value.trim().length() == 0) sort of does this.\n\n>> * What do you need trimleading for?\nThis is in to make the xml look nice...\nThe useage is like this:\n        <header stripleading=\"true\"><![CDATA[\n            #include <common/unittest.h>\n            #include \"register_suites.h\"\n            void register_suites() {\n        ]]></header>\nI want the output to be:\n#include <common/unittest.h>\n#include \"register_suites.h\"\nvoid register_suites() {\n\n>> * Why do you apply filterchains to nested text but not to header and footer?\nI use this task generate header and c files like this:\n        <property name=\"suite.pat\" value=\"^ *SUITE\\(.*,\\s*(.*)\\s*\\).*\"/>\n        <concat destfile=\"${gen.dir}/register_suites.h\" overwrite=\"no\">\n            <header trimleading=\"true\">\n                #ifndef R\n                #define R\n            </header>\n            <fileset dir=\"test/unit\" includes=\"**/unit_*.cpp\"/>\n            <filterchain>\n                <tokenfilter>\n                    <containsregex \n                        pattern=\"${suite.pat}\"\n                        replace=\"void register_\\1();\"/>\n                </tokenfilter>\n            </filterchain>\n            <footer trimleading=\"true\">\n                void register_suites();\n                #endif\n            </footer>\n        </concat>\n      \n>> * changed semantics of the append attribute\nI am not sure I changed the semantics. I found the original code\nand explaination confusing.\n\nAlso: I dropped a public method \"reset\", this has been reintroduced\nWill we need to modify it to to reset the new fields of concat?\n\nPeter."}, {"count": 8, "tags": [], "bug_id": 18166, "attachment_id": 5516, "is_private": false, "id": 33847, "time": "2003-03-26T18:43:55Z", "creator": "peter.reilly@corvil.com", "creation_time": "2003-03-26T18:43:55Z", "text": "Created attachment 5516\nAdd fixes,  input encoding and textelement file not present, add comments"}, {"count": 9, "tags": [], "bug_id": 18166, "attachment_id": null, "is_private": false, "id": 33918, "time": "2003-03-27T14:15:01Z", "creator": "bodewig@apache.org", "creation_time": "2003-03-27T14:15:01Z", "text": ">>> * you completely ignore all <fileset>'s and so on if nested text is present.\n> I think this is the original behaviour of concat. - it throws a buildexception.\n\nYou are right.\n\n>>> * The trim attribute in TextElement should apply to nested text as well \n>>> (instead of unconditionally trimming it.\n> It only looks like it unconditionally trims it.\n\nYep.\n\n>>> * We might need the sanitizeText logic for header and footer as well.\n> The line (if (value.trim().length() == 0) sort of does this.\n\nbut only sort-of as the parts in cat() only check for existance of the header\nand footer elements, not their value.  But we are not doing any harm\nhere after I've turned the printlns into prints.\n\nI still don't like the \"cosmetic\" trimleading attribute.\n\nI still don't understand why filters get applied to nested text but not to\nheader and footer.  I'd like to see it consistent - and not applying filters\nto nested text either is the second option for consistency.\n\nWRT reset.  I'm not sure why it has been there in the first place, we cannot\nremove a public method.  Making it work on the new attributes seems a good idea.\n\nWRT append semantics, you are right, it hasn't changed.  But the name of the\noverwrite attribute is misleading (at least it has mislead me 8-).  The\ncombination of overwrite=\"yes\" and append=\"true\" does not overwrite the\ndest file.  How about force instead of overwrite?  <style> uses force as well.\n\nLet's resolve the filtering part and we are there 8-)"}, {"count": 10, "tags": [], "bug_id": 18166, "attachment_id": null, "is_private": false, "id": 33933, "time": "2003-03-27T15:30:04Z", "creator": "peter.reilly@corvil.com", "creation_time": "2003-03-27T15:30:04Z", "text": ">>but only sort-of as the parts in cat() only check for existance of the header\n>>and footer elements, not their value.  But we are not doing any harm\n>> here after I've turned the printlns into prints.\nWhich is why I said sort-of :)\n\n>>I still don't like the \"cosmetic\" trimleading attribute.\nok... I can live without it, but would like to have it. I like\nmy generated files and my build files to be readable.\n\n>>I still don't understand why filters get applied to nested text but not to\n>>header and footer.  I'd like to see it consistent - and not applying filters\n>>to nested text either is the second option for consistency.\nThey are used different purposes. The main (only) purpose I see for\nheader and footer is to generate headers and footers for generated files.\nThe header may be for example a copyright notice, a do not edit message,\nheader include magic guards. The body of the generated file is a result\nof filtering multiple files. The requirements for these are quite different.\n\nThe nested text of the concat I see as a replacement for the files in\nthe body. (It also makes it easy to test filtering).\n\nTo make things consistent, could a new attribute on textelement\ndo the job (something like \"preserve\", \"asis\", \"nofilter\"). default\nto false, so that it is obvious when reading the\nbuild file that filtering will not take place.\n\n>>WRT reset.  I'm not sure why it has been there in the first place, we cannot\n>>remove a public method.  Making it work on the new attributes seems a good \nidea.\nOn thinking about this, I think it may be there for <script/> to use\nin the dark old days of ant 1.2, but I may be wrong.\n\n>>WRT append semantics, you are right, it hasn't changed.  But the name of the\n>>overwrite attribute is misleading (at least it has mislead me 8-).  The\n>>combination of overwrite=\"yes\" and append=\"true\" does not overwrite the\n>>dest file.  How about force instead of overwrite?  <style> uses force as well.\n\nI realize this is misleading, but it is used by <copy>. It confused me there\nas well... force is fine for me.\n\n>> Let's resolve the filtering part and we are there 8-)\n\nmagic!\n\n\n"}, {"count": 11, "text": "OK, force it is.  And attributes to header and footer are fine with me. The name,\nhmm, filterering like in copy?  Wanna send another diff?\n\nNot only have I been there in the dark days of Ant 1.2 (I've been the \"release\nmanager\" of 1.1 - well, there hasn't been much managment, to be fair), but also\nhas concat only been added in Ant 1.4 - so your guess is off.  No idea\nwhy it is there, only Gus will know. 8-)\n", "bug_id": 18166, "attachment_id": null, "id": 33936, "time": "2003-03-27T15:36:50Z", "creator": "bodewig@apache.org", "creation_time": "2003-03-27T15:36:50Z", "tags": [], "is_private": false}, {"count": 12, "tags": [], "text": "Created attachment 5539\nupdated mods to unit tests and to the manual", "is_private": false, "id": 33954, "creator": "peter.reilly@corvil.com", "time": "2003-03-27T17:27:48Z", "bug_id": 18166, "creation_time": "2003-03-27T17:27:48Z", "attachment_id": 5539}, {"count": 13, "tags": [], "bug_id": 18166, "attachment_id": 5540, "id": 33955, "time": "2003-03-27T17:29:33Z", "creator": "peter.reilly@corvil.com", "creation_time": "2003-03-27T17:29:33Z", "is_private": false, "text": "Created attachment 5540\nUpdated concat - force attribute, filtering attribute + cleanup changes"}, {"count": 14, "tags": [], "text": "Ok, made two new uploads:\n\n5539: this contains the cvs diff -c on the test files and the manual entry\n     docs/manual/CoreTasks/concat.html\n     src/etc/testcases/taskdefs/concat.xml\n     src/testcases/org/apache/tools/ant/taskdefs/ConcatTest.java\n\n5540: this contains the moded concat.java file.\n     changed overwrite to force\n     added filtering attribute to textelement\n     made updates to cleanup\n\nI should have looked at the history of concat before making\nassertions  :-)~\n\nI have used ant since 1.1, it is a trully awesome body of\ncode. I still can't believe that it is all possible just\nusing java 1.1 !!\n", "is_private": false, "id": 33957, "creator": "peter.reilly@corvil.com", "time": "2003-03-27T17:41:35Z", "bug_id": 18166, "creation_time": "2003-03-27T17:41:35Z", "attachment_id": null}, {"count": 15, "tags": [], "bug_id": 18166, "attachment_id": null, "id": 34043, "time": "2003-03-28T12:42:54Z", "creator": "bodewig@apache.org", "creation_time": "2003-03-28T12:42:54Z", "is_private": false, "text": "will be in nightly 2003-03-29.  I even didn't remove the trimleading attribute ;-)"}, {"count": 16, "tags": [], "bug_id": 18166, "attachment_id": null, "is_private": false, "id": 34067, "time": "2003-03-28T15:07:06Z", "creator": "peter.reilly@corvil.com", "creation_time": "2003-03-28T15:07:06Z", "text": "Great news!\nPeter"}]