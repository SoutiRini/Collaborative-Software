[{"count": 0, "tags": [], "creator": "roman.fiedler@telbiomed.at", "attachment_id": null, "id": 109202, "time": "2007-10-10T10:09:09Z", "bug_id": 43588, "creation_time": "2007-10-10T10:09:09Z", "is_private": false, "text": "Tomcat uses IP 127.0.0.1 when talking to localhost. This will be correct in most\ncases but will not work on special setups, e.g. linux vserver guests where\n127.0.0.1 is the host machine, the guest machine \"localhost IP\" can be any other\n(e.g. 127.0.0.2 or 10.0.0.1). Though unusual, such configuration seems to be ok\naccording to the IP RFCs. \n\nThe problem is that tomcat ignores this possibility and does not ask the OS for\nthe localhost IP via getAddressByName(\"localhost\"), it uses a hardcoded\n127.0.0.1, e.g.\n\n./java/org/apache/catalina/startup/Catalina.java:            Socket socket = new\nSocket(\"127.0.0.1\", server.getPort());"}, {"text": "Created attachment 20989\nThis patch changes hardcoded references of 127.0.0.1\n\nPlease review this patch, and ensure that there are no errors or potential\nregression issues.  Apply accordingly.", "tags": [], "bug_id": 43588, "attachment_id": 20989, "count": 1, "id": 109389, "time": "2007-10-16T05:00:21Z", "creator": "paul.shemansky@gmail.com", "creation_time": "2007-10-16T05:00:21Z", "is_private": false}, {"count": 2, "tags": [], "creator": "paul.shemansky@gmail.com", "text": "Created attachment 21036\nRevised patch.  Please review / vote.", "id": 109705, "time": "2007-10-24T08:58:34Z", "bug_id": 43588, "creation_time": "2007-10-24T08:58:34Z", "is_private": false, "attachment_id": 21036}, {"count": 3, "tags": [], "creator": "fhanik@apache.org", "text": "I think this patch is invalid,\nfor the end points, if I bind to an interface, then I can't unlock the accept by\ndoing (\"localhost\",port), since the port wont be bound to localhost at all.\n\ngranted, that the problem I'm describing is already existing, and not related to\nthe localhost bug\n\nFilip", "id": 109712, "time": "2007-10-24T12:13:49Z", "bug_id": 43588, "creation_time": "2007-10-24T12:13:49Z", "is_private": false, "attachment_id": null}, {"text": "ignore my previous comment, I'm a retard, didn't look into it enough", "tags": [], "bug_id": 43588, "attachment_id": null, "count": 4, "id": 109713, "time": "2007-10-24T12:14:27Z", "creator": "fhanik@apache.org", "creation_time": "2007-10-24T12:14:27Z", "is_private": false}, {"count": 5, "tags": [], "creator": "fhanik@apache.org", "attachment_id": 21039, "id": 109715, "time": "2007-10-24T12:21:16Z", "bug_id": 43588, "creation_time": "2007-10-24T12:21:16Z", "is_private": false, "text": "Created attachment 21039\nIncl. Nio\n\nAdded NIO connector to patch"}, {"count": 6, "tags": [], "creator": "pr@objektpark.de", "attachment_id": null, "is_private": false, "id": 109935, "time": "2007-10-29T23:18:51Z", "bug_id": 43588, "creation_time": "2007-10-29T23:18:51Z", "text": "Can we change the patch?\n\nSee comment at STATUS File:\n-1: funkman InetAddress.getLocalHost() != localhost - it should be\n            InetAddress.getByName(\"localhost\").getHostAddress()"}, {"count": 7, "tags": [], "text": "(In reply to comment #6)\n> Can we change the patch?\n> See comment at STATUS File:\n> -1: funkman InetAddress.getLocalHost() != localhost - it should be\n>             InetAddress.getByName(\"localhost\").getHostAddress()\n\nI will not claim to be an expert in IPv4 or IPv6.  Granted, after tracing the\nactual InetAddress source code for both getLocalHost() and getByName(), I\nbelieve the original patch should stay, keeping getLocalHost().  If anyone\ndisagrees with my choice, and feels that getByName(\"localhost\") is better, I\nwould have to further recommend that we use : getAllByName(\"localhost\")[0],\nwhich is a shortcut to the new proposal.  If I am completely incorrect, I\napologize - please correct me in a separate email so that I have a better\nunderstanding.\n\nNew Choices/My Votes :\n1.) +1  - Keep : InetAddress.getLocalHost() and apply current proposed patch\n2.) -1  - Change to new proposal : InetAddress.getByName(\"localhost\")\n3.) +1? - Change to new proposal 'shortcut' :\nInetAddress.getAllByName(\"localhost\")[0]\n\n(In reply to comment #4)\n> ignore my previous comment, I'm a retard, didn't look into it enough\n\nFilip, did you get the same results I did?  Why did you agree with me?\n", "attachment_id": null, "bug_id": 43588, "id": 110023, "time": "2007-10-31T05:15:32Z", "creator": "paul.shemansky@gmail.com", "creation_time": "2007-10-31T05:15:32Z", "is_private": false}, {"count": 8, "tags": [], "bug_id": 43588, "is_private": false, "text": "InetAddress.getLocalHost().getHostAddress() does not necessarily return \nlocalhost - it (can and usually) returns the IP address that other folks can \nsee.\n\nThis means that the shutdown listener by default would listen on a publicly \naddressable location - which means now ANYONE by default can shutdown tomcat \ninstead of someone who has access to the machine. \n", "id": 110025, "time": "2007-10-31T05:27:18Z", "creator": "funkman@joedog.org", "creation_time": "2007-10-31T05:27:18Z", "attachment_id": null}, {"count": 9, "tags": [], "text": "(In reply to comment #8)\nOkay, I can see how that can definitely a problem.\n\nHowever, by using getByName(\"localhost\") OR getAllByName(\"localhost\")[0], the\njava.net API, seems to automatically use the \"common\" loopback address of\n127.0.0.1, completely ignoring the system configuration.  This brings us back to\nthe original bug post which involves not being able to use any customized IP for\nthe \"localhost\" (i.e. 127.0.0.2 or 10.0.0.1).\n\nShould we instead be looking to separate the shutdown listener somehow?\n\n", "attachment_id": null, "bug_id": 43588, "id": 110052, "time": "2007-10-31T08:18:22Z", "creator": "paul.shemansky@gmail.com", "creation_time": "2007-10-31T08:18:22Z", "is_private": false}, {"count": 10, "tags": [], "bug_id": 43588, "is_private": false, "id": 110089, "attachment_id": null, "creator": "lgalfaso@gmail.com", "creation_time": "2007-10-31T19:05:05Z", "time": "2007-10-31T19:05:05Z", "text": "(In reply to comment #9)\nInstead of doing a refactor, and if no solution is best, why not just add a new\nproperty \"org.apache.tomcat.localhost.ip\" that defaults to \"127.0.0.1\" that\nwhoever starts tomcat is able to override?\nNot an automagic solution, but will address the original issue and will not\ncreate any new security issues"}, {"count": 11, "tags": [], "creator": "paul.shemansky@gmail.com", "attachment_id": null, "is_private": false, "id": 110106, "time": "2007-11-01T04:46:31Z", "bug_id": 43588, "creation_time": "2007-11-01T04:46:31Z", "text": "\n(In reply to comment #10)\n> (In reply to comment #9)\n> Instead of doing a refactor, and if no solution is best, why not just add a new\n> property \"org.apache.tomcat.localhost.ip\" that defaults to \"127.0.0.1\" that\n> whoever starts tomcat is able to override?\n> Not an automagic solution, but will address the original issue and will not\n> create any new security issues\n\n+1 - That still requires slight refactoring, but it sounds like a worthy idea to\nme. ;)\n\n"}, {"text": "(In reply to comment #8)\n> InetAddress.getLocalHost().getHostAddress() does not necessarily return \n> localhost - it (can and usually) returns the IP address that other folks can \n> see.\n> \n> This means that the shutdown listener by default would listen on a publicly \n> addressable location - which means now ANYONE by default can shutdown tomcat \n> instead of someone who has access to the machine. \n> \n\nFor all the connectors:\nThe correct way is doing InetAddress.getLocalHost().getHostAddress()\nwe are not trying to get the IP of \"localhost\" here, we are trying to just get\none of the interfaces that Tomcat listens to so that we can release the accept\nthread. \n\nWhat I would suggest, use InetAddress.getLocalHost().getHostAddress() wherever\nwe need to access a port that is listening on 0.0.0.0, and file a separate\nbugzilla item for the other locations\n\nFilip", "tags": [], "bug_id": 43588, "attachment_id": null, "count": 12, "id": 110124, "time": "2007-11-01T08:48:03Z", "creator": "fhanik@apache.org", "creation_time": "2007-11-01T08:48:03Z", "is_private": false}, {"count": 13, "tags": [], "creator": "marcel.may.tomcat@metacube.net", "text": "Proposed solution for StandardServer.java:\n\nKeep 127.0.0.1 as a default and enable an override 'address' field for a\ndifferent default ip address. So that you can set the shutdown ip address like\nfor the other connectors etc. in the server.xml. This is a very flexible and\nconsistent way to configure the shutdown ip address.", "id": 111995, "time": "2007-12-21T10:14:58Z", "bug_id": 43588, "creation_time": "2007-12-21T10:14:58Z", "is_private": false, "attachment_id": null}, {"text": "This was fixed with\nhttp://svn.apache.org/viewvc?view=rev&revision=596761", "tags": [], "bug_id": 43588, "attachment_id": null, "count": 14, "id": 112219, "time": "2007-12-26T18:18:09Z", "creator": "funkman@joedog.org", "creation_time": "2007-12-26T18:18:09Z", "is_private": false}, {"count": 15, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "is_private": false, "id": 115160, "time": "2008-03-31T14:55:47Z", "bug_id": 43588, "creation_time": "2008-03-31T14:55:47Z", "text": "*** Bug 44505 has been marked as a duplicate of this bug. ***"}]