[{"count": 0, "tags": [], "bug_id": 47722, "attachment_id": null, "id": 129847, "time": "2009-08-22T03:05:30Z", "creator": "felix.schaefer@tu-dortmund.de", "creation_time": "2009-08-22T03:05:30Z", "is_private": false, "text": "At the end of http://httpd.apache.org/docs/2.3/en/urlmapping.html#user , there is ans example for user directories:\n\"\"\"\nAliasMatch ^/upages/([a-zA-Z0-9]+)/?(.*) /home/$1/public_html/$2\n\"\"\"\n\nOne could think the regex would only match \"/upages/\"+$login, maybe followed by \"/\"+$somestuff. The problem here is that the question mark makes the \"/\" between the 2 matches optional, and you end up with a regex more akin to \"anything that begins with a small letter, a big letter or a number\".\n\nExample: trying to access (with the above example) /upages/favicon.ico makes apache look for a /home/favicon directory.\n\nThe improved AliasMatch I came up with, and which should solve the problem, would be:\n\"\"\"\nAliasMatch ^/upages/([a-zA-Z0-9]+)(/(.*))?$ /home/$1/public_html/$3\n\"\"\"\n\nThis regex matches either \"/upages/\"+$login+\"/\"+$somestuff, or \"/upages/\"+$login, which I think fits more closely to the intent."}, {"count": 1, "tags": [], "bug_id": 47722, "attachment_id": null, "is_private": false, "id": 129850, "time": "2009-08-22T06:50:00Z", "creator": "covener@gmail.com", "creation_time": "2009-08-22T06:50:00Z", "text": "Your take looks right to me, leaving bug open for a bit before fixing the regex in case anyone else chimes in to the contrary.  Thanks for the report.\n\nMaybe better to sacrifice the readability of the substitution for the benefit of the simpler regex though?\n\nAliasMatch ^/upages/([a-zA-Z0-9]+)(.*) /home/$1/public_html$2\n\nor even \n\nAliasMatch ^/upages/([^/]+)(.*) /home/$1/public_html$2\n\nSince I'm not completely sold on the idea that /upages/foo.bar shouldn't be looking for a user."}, {"count": 2, "attachment_id": null, "bug_id": 47722, "text": "Well, IIRC, a login on linux is [a-z0-9]+ (now that I think of it, I'm not even sure the A-Z would be necessary in the regex), so I'd limit the regex to those, not sure how it is on other platforms. That would rule out your second proposition.\n\nPertaining the first one, you are right that it improves readability, but I'd still make the / mandatory as a first character for the \"rest\" after the login part, or else you might end up again matching \"/upages/favicon.ico\" to \"/home/favicon/public_html.ico\". I think the middle ground would be:\n\"\"\"\nAliasMatch ^/upages/([a-z0-9]+)(/.*)?$ /home/$1/public_html$2\n\"\"\"", "id": 129851, "time": "2009-08-22T14:32:51Z", "creator": "felix.schaefer@tu-dortmund.de", "creation_time": "2009-08-22T14:32:51Z", "tags": [], "is_private": false}, {"count": 3, "tags": [], "creator": "covener@gmail.com", "is_private": false, "text": "Not sure what I meant with that first regex, it doesn't seem to make any sense. \n\nI'm not a fan of the narrow view of userids in the proposed regex or of the seemingly unnecessary complexity of the expression in an example.\n\nTo be frank, this section should probably punt to mod_rewrite where you can more properly mimic mod_userdir, where you can actually tell if the thing you're about to map to is a directory.", "id": 129852, "time": "2009-08-22T17:03:11Z", "bug_id": 47722, "creation_time": "2009-08-22T17:03:11Z", "attachment_id": null}, {"count": 4, "tags": [], "creator": "rbowen@apache.org", "is_private": false, "text": "Moving docs bugs to docs@httpd.a.o ownership.", "id": 141213, "time": "2010-10-29T11:07:01Z", "bug_id": 47722, "creation_time": "2010-10-29T11:07:01Z", "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 47722, "attachment_id": null, "is_private": false, "id": 141304, "time": "2010-11-01T11:43:09Z", "creator": "poirier@pobox.com", "creation_time": "2010-11-01T11:43:09Z", "text": "Fixed in trunk doc, r1029715.  Thanks for the report."}]