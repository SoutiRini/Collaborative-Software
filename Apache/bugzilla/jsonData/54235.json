[{"count": 0, "tags": [], "text": "I'm evaluating jdbc pool after reading some blogs on  tomcatexpert.com. But when I try to switch to jdbc pool from dbcp, I'm  getting stackoverflow error like this:\n\nCaused by: java.lang.StackOverflowError\n    at java.util.concurrent.AbstractExecutorService.<init>(AbstractExecutorService.java:71)\n    at java.util.concurrent.ThreadPoolExecutor.<init>(ThreadPoolExecutor.java:1270)\n    at java.util.concurrent.ThreadPoolExecutor.<init>(ThreadPoolExecutor.java:1163)\n    at org.apache.tomcat.jdbc.pool.ConnectionPool.<init>(ConnectionPool.java:117)\n    at org.apache.tomcat.jdbc.pool.DataSourceProxy.pCreatePool(DataSourceProxy.java:116)\n    at org.apache.tomcat.jdbc.pool.DataSourceProxy.createPool(DataSourceProxy.java:103)\n    at org.apache.tomcat.jdbc.pool.DataSourceProxy.getConnection(DataSourceProxy.java:127)\n    at org.apache.tomcat.jdbc.pool.DataSourceProxy.getConnection(DataSourceProxy.java:86)\n    at org.apache.tomcat.jdbc.pool.PooledConnection.connectUsingDataSource(PooledConnection.java:224)\n    at org.apache.tomcat.jdbc.pool.PooledConnection.connect(PooledConnection.java:180)\n    at org.apache.tomcat.jdbc.pool.ConnectionPool.createConnection(ConnectionPool.java:699)\n    at org.apache.tomcat.jdbc.pool.ConnectionPool.borrowConnection(ConnectionPool.java:631)\n    at org.apache.tomcat.jdbc.pool.ConnectionPool.init(ConnectionPool.java:485)\n    at org.apache.tomcat.jdbc.pool.ConnectionPool.<init>(ConnectionPool.java:143)\n    at org.apache.tomcat.jdbc.pool.DataSourceProxy.pCreatePool(DataSourceProxy.java:116)\n    at org.apache.tomcat.jdbc.pool.DataSourceProxy.createPool(DataSourceProxy.java:103)\n    at org.apache.tomcat.jdbc.pool.DataSourceProxy.getConnection(DataSourceProxy.java:127)\n    at org.apache.tomcat.jdbc.pool.DataSourceProxy.getConnection(DataSourceProxy.java:86)\n    at org.apache.tomcat.jdbc.pool.PooledConnection.connectUsingDataSource(PooledConnection.java:224)\n    at org.apache.tomcat.jdbc.pool.PooledConnection.connect(PooledConnection.java:180)\n    at org.apache.tomcat.jdbc.pool.ConnectionPool.createConnection(ConnectionPool.java:699)\n    at org.apache.tomcat.jdbc.pool.ConnectionPool.borrowConnection(ConnectionPool.java:631)\n    at org.apache.tomcat.jdbc.pool.ConnectionPool.init(ConnectionPool.java:485)\n    at org.apache.tomcat.jdbc.pool.ConnectionPool.<init>(ConnectionPool.java:143)\n    at org.apache.tomcat.jdbc.pool.DataSourceProxy.pCreatePool(DataSourceProxy.java:116)\n    at org.apache.tomcat.jdbc.pool.DataSourceProxy.createPool(DataSourceProxy.java:103)\n    at org.apache.tomcat.jdbc.pool.DataSourceProxy.getConnection(DataSourceProxy.java:127)\n    at org.apache.tomcat.jdbc.pool.DataSourceProxy.getConnection(DataSourceProxy.java:86)\n    at org.apache.tomcat.jdbc.pool.PooledConnection.connectUsingDataSource(PooledConnection.java:224)\n\nand I noticed that someone had the same issue before but not answered:\nhttp://mail-archives.apache.org/mod_mbox/tomcat-users/201107.mbox/%3C32046311.post@talk.nabble.com%3E\n\nmy web app is a typical springmvc+hibernate application, and here is my applicationcontext datasource part:\n\n<bean id=\"dataSource\" class=\"org.apache.tomcat.jdbc.pool.DataSource\" destroy-method=\"close\">\n<property name=\"driverClassName\" value=\"${telregistry.jdbc.driverClassName}\" />\n<property name=\"url\" value=\"${telregistry.jdbc.url}\"/>\n<property name=\"username\" value=\"${telregistry.jdbc.username}\"/>\n<property name=\"password\" value=\"${telregistry.jdbc.password}\"/>\n<property name=\"initialSize\" value=\"5\"/>\n<property name=\"initSQL\" value=\"SELECT 1\"/>\n<property name=\"minIdle\" value=\"5\"/>\n<property name=\"maxIdle\" value=\"50\"/>\n<property name=\"maxActive\" value=\"100\"/>\n<property name=\"maxWait\" value=\"6000\"/>\n<property name=\"validationInterval\" value=\"1800000\"/>\n<property name=\"validationQuery\" value=\"SELECT 1\"/>\n</bean>\n\nmy system:\nwin7 32bit\njdk1.7.0_9(also test on jdk1.6.0_25)\nmysql 5.5(also test oracle11g)\nspring 3.1.0\njdbc pool(tomcat-jdbc-7.0.30.jar from official maven repo)\n\nAnd by tomcat container resource configuration, I find a workaround to make jdbc pool work with spring: \n1. add a Resource section in tomcat server.xml to make a global naming resource\n2. add a resource-ref section in WEB-INF/web.xml to reference container resource\n3. add a bean section to spring applicationContext.xml to reference container resouce by spring provided JndiObjectFacetoryBean", "attachment_id": null, "id": 163784, "creator": "yanky.young@gmail.com", "time": "2012-12-03T11:29:47Z", "bug_id": 54235, "creation_time": "2012-12-03T11:29:47Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 54235, "attachment_id": null, "id": 163857, "time": "2012-12-04T20:32:24Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2012-12-04T20:32:24Z", "is_private": false, "text": "1. The call to ConnectionPool.borrowConnection( ) is caused by setting \n\n  <property name=\"initialSize\" value=\"5\"/>\n\nwhich causes ConnectionPool.init() to create 5 connections.\n\n\n2. The call to PooledConnection.connectUsingDataSource() is seriously wrong.\nIt should have called PooledConnection.connectUsingDriver() instead.\n\nThis can happen only if poolProperties.getDataSource() is not null.\n\nI do not see how this could have happened. Did Spring injected a recursive reference by calling DataSource.setDataSource()?\n\n\n3. When you define the pool via <Resource>, it is created using org.apache.tomcat.jdbc.pool.DataSourceFactory. The factory calls dataSource.createPool().\n\nSo it might be better to add init-method=\"createPool\"."}, {"count": 2, "tags": [], "text": "Do you have autowire in Spring enabled? If so, it'll inject a 'dataSource'-object in the setDataSource-property of your DataSource-instance...\n\nIts a bit weird that the object has a setDataSource-method at all, but you can fairly easily fix it by setting autowire=\"no\" on the particular pool, like so:\n\n<bean id=\"dataSource\" class=\"org.apache.tomcat.jdbc.pool.DataSource\" destroy-method=\"close\" autowire=\"no\">", "is_private": false, "id": 166987, "creator": "acm@tweakers.net", "time": "2013-05-01T13:25:46Z", "bug_id": 54235, "creation_time": "2013-05-01T13:25:46Z", "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 54235, "attachment_id": null, "text": "This can only happen if you inject your datasource (the actual pool).\nSo this must be a misconfiguration on the users part.\n\nPool now prevents it through r1616595", "id": 176994, "time": "2014-08-07T21:09:25Z", "creator": "fhanik@apache.org", "creation_time": "2014-08-07T21:09:25Z", "is_private": false}]