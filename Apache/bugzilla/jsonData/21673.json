[{"count": 0, "tags": [], "bug_id": 21673, "attachment_id": null, "id": 40876, "time": "2003-07-17T01:12:39Z", "creator": "eladner@goldinc.com", "creation_time": "2003-07-17T01:12:39Z", "is_private": false, "text": "In the toString method of FormulaParser, the SheetReferences variable refs is\nnot correctly assigned a value, making parsed formulas drop 3DRefs when printing\nformula output.  As far as I can tell, this only affects raw formula output and\nnot formula parsing in general."}, {"count": 1, "tags": [], "creator": "eladner@goldinc.com", "text": "Created attachment 7343\nrefs assignment fix for FormulaParser.toString()", "id": 40877, "time": "2003-07-17T01:13:45Z", "bug_id": 21673, "creation_time": "2003-07-17T01:13:45Z", "is_private": false, "attachment_id": 7343}, {"count": 2, "tags": [], "bug_id": 21673, "attachment_id": null, "id": 40878, "time": "2003-07-17T01:15:03Z", "creator": "eladner@goldinc.com", "creation_time": "2003-07-17T01:15:03Z", "is_private": false, "text": "'refs' isn't assigned correctly in FormulaParser.toString().  Patch below (and\nalso attached as an individual patch file)\n\n--- jakarta-poi-original/src/java/org/apache/poi/hssf/model/FormulaParser.java \n2003-07-16 20:00:46.000000000 -0500\n+++ jakarta-poi/src/java/org/apache/poi/hssf/model/FormulaParser.java  \n2003-07-16 20:05:59.000000000 -0500\n@@ -891,7 +891,9 @@\n      */\n     public String toString() {\n         SheetReferences refs = null;\n-        if (book!=null)  book.getSheetReferences();\n+        if (book!=null)  {\n+            refs = book.getSheetReferences();\n+        }\n         StringBuffer buf = new StringBuffer();\n            for (int i=0;i<tokens.size();i++) {\n             buf.append( ( (Ptg)tokens.get(i)).toFormulaString(refs));\n"}, {"count": 3, "tags": [], "bug_id": 21673, "attachment_id": null, "text": "Patch 7337 for bug 21444 also fixes this, but in a different way.  If that \npatch is applied, then this one is not needed.", "id": 40907, "time": "2003-07-17T15:11:16Z", "creator": "pkrause@soundbite.com", "creation_time": "2003-07-17T15:11:16Z", "is_private": false}, {"count": 4, "text": "should be evaluated.  A test case would be REALLY nice. :-(", "bug_id": 21673, "attachment_id": null, "id": 41427, "time": "2003-07-24T17:14:34Z", "creator": "poi-support@buni.org", "creation_time": "2003-07-24T17:14:34Z", "tags": [], "is_private": false}, {"count": 5, "tags": [], "bug_id": 21673, "attachment_id": null, "id": 41572, "time": "2003-07-26T19:49:52Z", "creator": "eladner@goldinc.com", "creation_time": "2003-07-26T19:49:52Z", "is_private": false, "text": "I'm fairly NOOB when it comes to JUnit, but I'll take a look.  The other problem\nis that this patch is really aimed at resolving 3DRefs, which when parsing\nformulas, is rather useless without the HSSFWorkbook.getWorkbook() being public.\n As far as I can tell, the only way to get the formula parser to be aware of the\nsheet names to resolve references is to pass in the workbook to the parser.  In\nshort, it'd be hard to write a unit test aginst the stock tree without that\npatch or some other method to get the workbook into the parser.\n\nIn fact, I can't see any way for a class outside HSSFWorkbook to be able to pass\nthe workbook into the FormulaParser constructor without the calling class\nextending HSSFWorkbook.\n\nI haven't investigated using the low level Workbook for this yet, however."}, {"count": 6, "tags": [], "creator": "poi-support@buni.org", "text": "The unit tests are all in the SAME package as the classes they test.  They are just \"seperate\" \nmeaning they aren't packaged in the final jar.  Thus they have full access to \"workbook\"..  I'm never \never going to let up on the making the model public.  In fact...I'm going to become an even worse \nencapsulation fanatic and be even more ZEALOUS about seperating the two.  The model is not for \nthe user level.  ", "id": 41573, "time": "2003-07-26T20:23:39Z", "bug_id": 21673, "creation_time": "2003-07-26T20:23:39Z", "is_private": false, "attachment_id": null}, {"count": 7, "tags": [], "bug_id": 21673, "text": "I think we should go with the approach in bug 21444 .. Thats solves this and\nmany others. ", "id": 41887, "attachment_id": null, "creator": "avik@apache.org", "creation_time": "2003-07-31T18:39:14Z", "time": "2003-07-31T18:39:14Z", "is_private": false}]