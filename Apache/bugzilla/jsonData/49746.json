[{"count": 0, "tags": [], "creator": "jhmartin@toger.us", "attachment_id": null, "id": 139075, "time": "2010-08-12T15:07:43Z", "bug_id": 49746, "creation_time": "2010-08-12T15:07:43Z", "is_private": false, "text": "I suggest adding a flag to mod_rewrite to optionally url-encode captured values.  \n\nSomething like:\nRewriteRule /(.*) /some/other/url=&target=http://www.example.com/handler?foo=bar&target=$1&zed=zee [UE]\n\nwhere UE causes the (.*) value to be urlencoded before being placed into $1.\n\nThis handles cases where you want to rewrite the request url into an argument of another url, and the requested url might have a multivalue query string in it.\n\nExample:\nhttp://www.example.com/foo/?bar=zed&foo=zee \nbecomes\nhttp://www.example.com/handler?foo=bar&target=%2Ffoo%2F%3Fbar%3Dzed%26foo%3Dzee&zed=zee"}, {"count": 1, "text": "This feature is already available.\n\nhttp://httpd.apache.org/docs/2.2/mod/mod_rewrite.html#mapfunc\n\nLook for the internal map for \"escape\".", "bug_id": 49746, "is_private": false, "id": 139076, "time": "2010-08-12T15:28:17Z", "creator": "poirier@pobox.com", "creation_time": "2010-08-12T15:28:17Z", "tags": [], "attachment_id": null}, {"count": 2, "tags": [], "creator": "jhmartin@toger.us", "attachment_id": null, "id": 139077, "time": "2010-08-12T16:24:06Z", "bug_id": 49746, "creation_time": "2010-08-12T16:24:06Z", "is_private": false, "text": "This does not appear to work for escaping query-string arguments, as the & sign is not being escaped:\n\n(5) map lookup OK: map=escape key=foo=bar&zed=zee&fib/fib -> val=foo=bar&zed=zee&fib/fib\n\nThis is with\nApache/2.2.15 (Unix) mod_ssl/2.2.15 OpenSSL/1.0.0 \n\nI'm using\nRewriteMap escape int:escape\nand\n${escape:%{QUERY_STRING}} in the rewrite rule.\n\nwget -O- \"http://www.example.com/?foo=bar&zed=zee&fib/fib\"\n\nPerhaps there is use in adding another map function with a more comprehensive translation list?"}, {"count": 3, "tags": [], "bug_id": 49746, "attachment_id": null, "id": 139087, "time": "2010-08-13T12:03:13Z", "creator": "jhmartin@toger.us", "creation_time": "2010-08-13T12:03:13Z", "is_private": false, "text": "Since it looks like the escape map really just calls ap_escape_uri, which is a macro for ap_escape_os_path; how about a htmlescape map that calls ap_escape_html?"}, {"count": 4, "tags": [], "bug_id": 49746, "attachment_id": null, "id": 139089, "time": "2010-08-14T04:55:07Z", "creator": "bobsiegen@googlemail.com", "creation_time": "2010-08-14T04:55:07Z", "is_private": false, "text": "> where UE causes the (.*) value to be urlencoded before being placed into $1.\n\nThat's already done by the B flag."}, {"count": 5, "tags": [], "bug_id": 49746, "attachment_id": null, "is_private": false, "id": 139456, "time": "2010-08-25T12:44:56Z", "creator": "jhmartin@toger.us", "creation_time": "2010-08-25T12:44:56Z", "text": "Ah didn't see that (was looking at 2.0).  Thank you."}, {"count": 6, "tags": [], "text": "I'm sorry, have to reopen again.  Neither int:escape or [B] handle the case where the original request had a query string, and I now want to package up the entire original request and pass it in the query string.\n\nExample:\n\n/foo/bar?zed=zee&ivy=true  Should be come /some/other/url?target=/foo/bar%3Fzed=zee%26ivy=true, or something along those lines.\n\nWith the current mechanisms, the & in the query string is not escaped by either int:escape or [B] (as there is no way to backreference query_string), meaning the servlet thinks everything after the first name/value pair is a separate argument and not part of target.\n\nRewriteMap escape int:escape\nRewriteRule /(.*) /some/url?resource=fibble&target=http://%{HTTP_HOST}/$1?${escape:%{QUERY_STRING}} [B,PT,L]\n\n(2) init rewrite engine with requested uri /foo/bar\n(3) applying pattern '/(.*)' to uri '/foo/bar'\n(5) escaping backreference 'foo/bar' to 'foo%2fbar'\n(5) map lookup OK: map=escape key=zed=zee&ivy=true -> val=zed=zee&ivy=true\n(2) rewrite '/foo/bar' -> '/some/url?resource=fibble&target=http://127.0.0.1:26080/foo%2fbar?zed=zee&ivy=true'\n(3) split uri=/some/url?resource=fibble&target=http://127.0.0.1:26080/foo%2fbar?zed=zee&ivy=true -> uri=/some/url, args=resource=fibble&target=http://127.0.0.1:26080/foo%2fbar?zed=zee&ivy=true\n(2) forcing '/some/url' to get passed through to next API URI-to-filename handler", "attachment_id": null, "bug_id": 49746, "id": 139460, "time": "2010-08-25T13:34:31Z", "creator": "jhmartin@toger.us", "creation_time": "2010-08-25T13:34:31Z", "is_private": false}, {"count": 7, "tags": [], "creator": "plantin@cobaltgroup.com", "attachment_id": 33414, "id": 187444, "time": "2016-01-06T23:48:38Z", "bug_id": 49746, "creation_time": "2016-01-06T23:48:38Z", "is_private": false, "text": "Created attachment 33414\nAdd urlencode function.\n\nPatch against 2.2.31 that adds urlencode function from apr. Sample usage:\n\nRewriteMap urlencode int:urlencode\nRewriteRule /(.*) /some/url?resource=fibble&target=http://%{HTTP_HOST}/$1?${urlencode:%{QUERY_STRING}} [B,PT,L]"}]