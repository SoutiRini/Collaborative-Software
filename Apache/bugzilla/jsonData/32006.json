[{"count": 0, "tags": [], "bug_id": 32006, "attachment_id": null, "is_private": false, "id": 66250, "time": "2004-11-01T17:29:57Z", "creator": "ian.springer@hp.com", "creation_time": "2004-11-01T17:29:57Z", "text": "I propose adding a new optional 'basedir' attribute to the property task. This \nattribute could be use in conjunction with the 'location' attribute to specify \nthe base directory to use when resolving relative locations (overriding the \ndefault of using the project basedir). For example:\n\n<property name=\"myPath\" location=\"xml/foo.xml\" \nbasedir=\"C:/projects/otherProject\" />\n\nwould set myPath to \"C:/projects/otherProject/xml/foo.xml\"\n\nAnd, similar to the current behavior, if the specified location is already \nabsolute, basedir would be ignored, e.g.:\n\n<property name=\"myPath\" location=\"C:/foo.xml\" \nbasedir=\"C:/projects/otherProject\" />\n\nwould set myPath to \"C:/foo.xml\"."}, {"count": 1, "tags": [], "creator": "ian.springer@hp.com", "attachment_id": 13293, "text": "Created attachment 13293\npatch that implements the requested enhancement", "id": 66255, "time": "2004-11-01T18:18:37Z", "bug_id": 32006, "creation_time": "2004-11-01T18:18:37Z", "is_private": false}, {"count": 2, "tags": [], "creator": "ian.springer@hp.com", "attachment_id": 13317, "text": "Created attachment 13317\nplease disregard previous patch (had error), and use this one instead", "id": 66315, "time": "2004-11-02T21:35:35Z", "bug_id": 32006, "creation_time": "2004-11-02T21:35:35Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 32006, "text": "Ian,\n\nI am going to have to be ruthless and mark as wontfix.\n\n1. you get exactly the semantics you want with\n\n<property name=\"base.dir\" location=\"C:/projects/otherProject\" />\n<property name=\"myPath\" location=\"${base.dir}xml/foo.xml\"  />\n\n (though you should *not* be hard coding paths into portable files)\n\n2. changing the type of a setter for one of the core ant tasks is absolutely\nforbidden. That is the programmatic API to ant, and one that gets used a lot,\nespecially by extension tasks. There may be no uses of that method in the ant\ncodebase, but we don't know what other things use it, and have to assume the\nworst. You can overload an existing option, but then you have to deal with the\nexisting one may still be called. \n\n3. we have enough functionality stuck in that task already. What would the\nsemantics be of setting basedir for any other operation? An error? Then we'd\nneed the error checking code -and the tests that it worked. \n\n4. If you do not find point #1 adequate, then the solution would be some\nexplicit task to set a property to a bound dir:\n\n<setlocation property=\"foo\" base=\"c://something\" subdir=\"subdir\" \n basemustexist=\"true\" subdirMustExist=\"true\"/>\n\nThere may be some merit in that, as you can add more tests (base must exist,\nmust be a dir, perhaps), and it may be more readable. ", "id": 66319, "time": "2004-11-02T22:34:35Z", "creator": "stevel@apache.org", "creation_time": "2004-11-02T22:34:35Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "creator": "ian.springer@hp.com", "text": "Steve,\n\nMy use case is that I have a property that is passed in on the command line \nthat represents a path that may be absolute or relative. If it's relative I \nwant to resolve it relative to a base directory other than the project \nbasedir. I wrote a custom task that does the job, but to me, it seems like a \ncommon enough use case that there should be a way to do it with the core \ntasks. property seemed like the logical place to put it, since it already \nprovides absolute path resolution functionality via the location attribute.\n\nRegards,\nIan \n", "id": 66322, "time": "2004-11-02T22:41:55Z", "bug_id": 32006, "creation_time": "2004-11-02T22:41:55Z", "is_private": false, "attachment_id": null}]