[{"count": 0, "tags": [], "creator": "x_tadoor@ugs.com", "text": "We are using the HierarchyDynamicMBean Mbean to get  all the log4j mbeans registered.\nWe have a in built Monitoring, Logging and Debugging tool Mbean and we using HierarchyDynamicMBean to register it to the PlatformMBeanServer and the HTML Adaptor so that the MLD MBean appears in the log4j hiearchy.\nWhen we are setting the \"priority\" of this logger it sets the priority but prints the following message\n\n 477 All Attributes Not Set\n--------------------------------------------------------------------------------\n2/3 attribute(s) were not set:\n\nSTEPS TO FOLLOW TO REPRODUCE THE PROBLEM :\nStep one:\n  From the eclipse launch the application code from the Source code for an executable test case section below.\n\nStep two:\nfrom the internet explorer launch http://localhost:9393\n\nStep Three:\nIn the log4J section of the page\nSelect \"logger=root\" MBean , in its attribute page change the priority from DEBUG to WARN and click on apply button below and we get the following message as\n\n 477 All Attributes Not Set\n\nACTUAL -\n 477 All Attributes Not Set\n\nERROR MESSAGES/STACK TRACES THAT OCCUR :\njavax.management.AttributeNotFoundException: Attribute appender%3Dorg.apache.log4j.FileAppender@1c9a690 not found in org.apache.log4j.jmx.LoggerDynamicMBean\n\tat org.apache.log4j.jmx.LoggerDynamicMBean.setAttribute(LoggerDynamicMBean.java:242)\n\tat org.apache.log4j.jmx.AbstractDynamicMBean.setAttributes(AbstractDynamicMBean.java:118)\n\tat com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.setAttributes(DefaultMBeanServerInterceptor.java:819)\n\tat com.sun.jmx.mbeanserver.JmxMBeanServer.setAttributes(JmxMBeanServer.java:728)\n\tat com.sun.jdmk.comm.HtmlObjectPage.setObjectValue(HtmlObjectPage.java:426)\n\tat com.sun.jdmk.comm.HtmlRequestHandler.processGetRequest(HtmlRequestHandler.java:301)\n\tat com.sun.jdmk.comm.HtmlRequestHandler.processRequest(HtmlRequestHandler.java:155)\n\tat com.sun.jdmk.comm.HtmlRequestHandler.doRun(HtmlRequestHandler.java:82)\n\tat com.sun.jdmk.comm.ClientHandler.run(ClientHandler.java:99)\n\tat java.lang.Thread.run(Thread.java:619)\njavax.management.AttributeNotFoundException: Attribute appender%3Dorg.apache.log4j.FileAppender@1c9a690 not found in org.apache.log4j.jmx.LoggerDynamicMBean\n\tat org.apache.log4j.jmx.LoggerDynamicMBean.setAttribute(LoggerDynamicMBean.java:242)\n\tat org.apache.log4j.jmx.AbstractDynamicMBean.setAttributes(AbstractDynamicMBean.java:118)\n\tat com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.setAttributes(DefaultMBeanServerInterceptor.java:819)\n\tat com.sun.jmx.mbeanserver.JmxMBeanServer.setAttributes(JmxMBeanServer.java:728)\n\tat com.sun.jdmk.comm.HtmlObjectPage.setObjectValue(HtmlObjectPage.java:426)\n\tat com.sun.jdmk.comm.HtmlRequestHandler.processGetRequest(HtmlRequestHandler.java:301)\n\tat com.sun.jdmk.comm.HtmlRequestHandler.processRequest(HtmlRequestHandler.java:155)\n\tat com.sun.jdmk.comm.HtmlRequestHandler.doRun(HtmlRequestHandler.java:82)\n\tat com.sun.jdmk.comm.ClientHandler.run(ClientHandler.java:99)\n\tat java.lang.Thread.run(Thread.java:619)\n\n\nREPRODUCIBILITY :\nThis bug can be reproduced always.\n\n---------- BEGIN SOURCE ----------\nThis is the example source code that we have done outside our dev environment\n\nthe following is the source code\n\nimport java.io.IOException;\nimport java.lang.management.ManagementFactory;\nimport java.util.Vector;\n\nimport javax.management.InstanceAlreadyExistsException;\nimport javax.management.JMException;\nimport javax.management.MBeanAttributeInfo;\nimport javax.management.MBeanRegistrationException;\nimport javax.management.MBeanServer;\nimport javax.management.MalformedObjectNameException;\nimport javax.management.NotCompliantMBeanException;\nimport javax.management.ObjectName;\n\n\nimport org.apache.log4j.Appender;\nimport org.apache.log4j.FileAppender;\nimport org.apache.log4j.Level;\nimport org.apache.log4j.Logger;\nimport org.apache.log4j.SimpleLayout;\nimport org.apache.log4j.jmx.*;\nimport com.sun.jdmk.comm.HtmlAdaptorServer;\n\n//import org.apache.log4j.BasicConfigurator;\n\npublic class MyTestApp  {\n\tprivate Vector dAttributes = new Vector();\n\tprivate static Logger logger = Logger.getRootLogger();\n\tstatic MBeanServer server = ManagementFactory.getPlatformMBeanServer();\n\tprivate static Logger cat = Logger.getLogger(MyTestApp.class);\n//\tpublic MyTestApp(Logger logger)\n//\t{\n//\t\tsuper(logger);\n//\n//\t}\t\t\t\t\t\n\t public void go() throws Exception{\n\t        while(true){\n\t            logger.debug(\"DEBUG\") ;\n\t            logger.info(\"INFO\") ;\n\t            logger.warn(\"WARN\");\n\t            logger.error(\"ERROR\");\n\t            logger.fatal(\"FATAL\");\n\t            Thread.sleep(2000);\n\t        }\n\t    }\n\t \n\t \n//\t void registerAppenderMBean1(Appender appender) {\n//\t\t    String name = getAppenderName(appender);\n//\t\t    cat.debug(\"Adding AppenderMBean for appender named \"+name);\n//\t\t    ObjectName objectName = null;\n//\t\t    try {\n//\t\t      AppenderDynamicMBean appenderMBean = new AppenderDynamicMBean(appender);\n//\t\t      objectName = new ObjectName(\"log4j\", \"appender\", name);\n//\t\t      if (!server.isRegistered(objectName)) {\n//\t\t        server.registerMBean(appenderMBean, objectName);\n//\t\t        dAttributes.add(new MBeanAttributeInfo(\"appender=\" + name, \"javax.management.ObjectName\",\n//\t\t                \"The \" + name + \" appender.\", true, true, false));\n//\t\t      }\n//\n//\t\t    } catch(JMException e) {\n//\t\t      cat.error(\"Could not add appenderMBean for [\"+name+\"].\", e);\n//\t\t    } catch(java.beans.IntrospectionException e) {\n//\t\t      cat.error(\"Could not add appenderMBean for [\"+name+\"].\", e);\n//\t\t    } catch(RuntimeException e) {\n//\t\t      cat.error(\"Could not add appenderMBean for [\"+name+\"].\", e);\n//\t\t    }\n//\t\t  }\n\n\tpublic static void main(String[] args) {\n\t\n\t\t//BasicConfigurator.configure();\n\t\torg.apache.log4j.Layout layout = new SimpleLayout();\n\t\tFileAppender appender = null;\n\t\ttry {\n\t\tappender = new FileAppender(layout, \"app.log\");\n\t\t} catch (IOException e1) {\n\t\t\t\n\t\t\te1.printStackTrace();\n\t\t}\n\t\tLogger logger = Logger.getRootLogger();\n\t\tlogger.addAppender(appender);\n\n\t\tMyTestApp app = new MyTestApp();\n\t\t\n\t\tHierarchyDynamicMBean hdm = new HierarchyDynamicMBean();\n\t\t\n\t\ttry {\n\t\t\tObjectName mbo = new ObjectName(\"log4j:hiearchy=root\");\n\t\t\ttry {\n\t\t\t\tserver.registerMBean(hdm, mbo);\n\t\t\t} catch (InstanceAlreadyExistsException e) {\n\t\t\t\n\t\t\t\te.printStackTrace();\n\t\t\t} catch (MBeanRegistrationException e) {\n\t\t\t\n\t\t\t\te.printStackTrace();\n\t\t\t} catch (NotCompliantMBeanException e) {\n\t\t\t\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t\t\n\t\t} catch (MalformedObjectNameException e1) {\n\t\t\n\t\t\te1.printStackTrace();\n\t\t} catch (NullPointerException e1) {\n\t\t\n\t\t\te1.printStackTrace();\n\t\t}\n\t\t\n//\t\tapp.registerAppenderMBean1(appender);\n\t\t\n\t\tint portNumber=9393;\n\t    //ObjectName htmlName = new ObjectName(\"log4j:hiearchy=default,port=\" + portNumber) ;\n\t   \tObjectName htmlName = null;\n\t\ttry {\n\t\t\thtmlName = new ObjectName(\"log4j:logger=root,port=\" + portNumber);\n\t\t} catch (MalformedObjectNameException e1) {\n\t\t\t\n\t\t\te1.printStackTrace();\n\t\t} catch (NullPointerException e1) {\n\t\t\t\n\t\t\te1.printStackTrace();\n\t\t}\n\t   \t//ObjectName htmlName = new ObjectName(\"jmxexample:type=MyApp,port=\" + portNumber) ;\n\t    HtmlAdaptorServer html = new HtmlAdaptorServer(portNumber);\n\t    html.setPort(portNumber);\n\t    try {\n\t\t\tserver.registerMBean(html, htmlName);\n\t\t} catch (InstanceAlreadyExistsException e1) {\n\n\t\t\te1.printStackTrace();\n\t\t} catch (MBeanRegistrationException e1) {\n\t\n\t\t\te1.printStackTrace();\n\t\t} catch (NotCompliantMBeanException e1) {\n\t\t\n\t\t\te1.printStackTrace();\n\t\t}\n\t    html.start();\n\t\ttry {\n\t\t\tapp.go();\n\t\t} catch (Exception e) {\n\t\t\te.printStackTrace();\n\t\t}\n\n\t}\n\n}\n---------- END SOURCE ----------\n\nThanks\nVilas", "id": 138421, "time": "2010-07-14T07:31:22Z", "bug_id": 49592, "creation_time": "2010-07-14T07:31:22Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "creator": "x_tadoor@ugs.com", "text": "We are using log4j to implement dynamic logging in our application.", "id": 138422, "time": "2010-07-14T07:38:12Z", "bug_id": 49592, "creation_time": "2010-07-14T07:38:12Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "creator": "x_tadoor@ugs.com", "attachment_id": null, "id": 138433, "time": "2010-07-15T02:37:59Z", "bug_id": 49592, "creation_time": "2010-07-15T02:37:59Z", "is_private": false, "text": "Any advice on the same."}]