[{"count": 0, "attachment_id": null, "bug_id": 13833, "text": "To programmatically install a webapp at runtime, the Deployer interface is \nused.  StandardHost implements this interface.  According to its install() \ndocumentation, \"if this application is successfully installed, a ContainerEvent \nof type INSTALL_EVENT will be sent to all registered listeners.\"  If a webapp \ntries to get installed/started that is invalid (e.g., contains a malformed \nweb.xml file), during the StandardContext Lifecycle start() operation, Tomcat \nknows that it cannot configure the context.  In such a case, it automatically \ntries to stop the context and marks it unavailable.\n\nHowever, the problem is that StandardContext start() fails to alert the caller \nthat the operation failed.  Thus, the install operation succeeds and the caller \nis notified with a [successful] INSTALL_EVENT.  Furthermore, the \nunavailable/invalid context object gets added to the container hierarchy \nleading to invalid state if/when it tries to get uninstalled.\n\nTo fix this problem, StandardContext start() should throw a LifecycleException \nwhen it marks the context as unavailable.\n\n(I haven't checked whether or not this bug also exists in Tomcat 4.1.x.)", "id": 24966, "time": "2002-10-21T23:18:52Z", "creator": "ruvinsky@yahoo.com", "creation_time": "2002-10-21T23:18:52Z", "tags": [], "is_private": false}, {"count": 1, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "text": "I have fixed this in TC4. Thanks for reporting this.", "id": 54122, "time": "2004-03-17T00:01:34Z", "bug_id": 13833, "creation_time": "2004-03-17T00:01:34Z", "is_private": false}]