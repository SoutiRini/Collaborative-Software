[{"count": 0, "tags": [], "bug_id": 27810, "attachment_id": null, "text": "For tags created with the new JSP 2.0 tag file feature, Jasper throws an \nexception saying it cannot locate the setter method for any attribute whose \nfirst 2 letters are of different case.\n\nA sample webapp showing the problem can be found here:\nhttp://jlware.com/public/tomcat-5019-bug.zip.\n\nFor example, in this tag, the presence of either of the last 2 attributes will \ncause the exception.\n\n  <t:foo xok=\"1\"\n\tXOK=\"2\"\n\txxOk=\"3\"\n\tXXok=\"4\"\n\txNotOk=\"5\"\n\tXnotOk=\"6\"\n\t/>\n\nThe exception is thrown even though the generated source code contains the \nattributes and their getter/setter methods.", "id": 54294, "time": "2004-03-19T22:34:52Z", "creator": "post@jlware.com", "creation_time": "2004-03-19T22:34:52Z", "is_private": false}, {"count": 1, "attachment_id": 10878, "bug_id": 27810, "is_private": false, "id": 54295, "time": "2004-03-19T22:36:03Z", "creator": "post@jlware.com", "creation_time": "2004-03-19T22:36:03Z", "tags": [], "text": "Created attachment 10878\nAttached is a simple webapp demonstrating the problem"}, {"count": 2, "tags": [], "creator": "kin-man.chung@sun.com", "text": "Looks like this is a JDK bug in that the bean Instropector returns incorrect\nvalue for the PropertyDescriptor.  I'll look into this more.", "id": 54428, "time": "2004-03-22T21:47:34Z", "bug_id": 27810, "creation_time": "2004-03-22T21:47:34Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 27810, "attachment_id": null, "id": 54522, "time": "2004-03-24T01:01:31Z", "creator": "kin-man.chung@sun.com", "creation_time": "2004-03-24T01:01:31Z", "is_private": false, "text": "There is actually a section on the beans spec that explains all this.  Since\nJasper is using bean Intropector to extract bean info from tag handlers, we are\nfollowing the rules there.  In other words this is an INVALID or WONTFIX.\n\nThe rules is just what you have discovered: the first 2 letters of a property\nmust either be all lower case or all upper case.  This applies to bean\nproperties as well as regular tag attributes.\n\nBelow is taken from the bean spec.\n\n8.8 Capitalization of inferred names.\n\nWhen we use design patterns to infer a property or event name, we need to decide\n what rules to follow for capitalizing the inferred name. If we extract the name\nfrom the middle of a normal mixedCase style Java name then the name will, by\ndefault, begin with a capital letter.  Java programmers are accustomed to having\nnormal identifiers start with lower case letters.  Vigorous reviewer input has\nconvinced us that we should follow this same conventional rule for property and\nevent names.\n\nThus when we extract a property or event name from the middle of an existing Jav\na name, we normally convert the first character to lower case. However to\nsupport the occasional use of all upper-case names, we check if the first two\ncharacters of the name are both upper case and if so leave it alone. So for example,\n    \"FooBah\" becomes \"fooBah\"\n    \"Z\" becomes z\"\n    \"URL\" becomes \"URL\"\n\nWe provide a method Introspector.decapitalize which implements this conversion rule."}, {"count": 4, "tags": [], "bug_id": 27810, "attachment_id": null, "id": 61563, "time": "2004-08-04T20:52:36Z", "creator": "kin-man.chung@sun.com", "creation_time": "2004-08-04T20:52:36Z", "is_private": false, "text": "*** Bug 30479 has been marked as a duplicate of this bug. ***"}]