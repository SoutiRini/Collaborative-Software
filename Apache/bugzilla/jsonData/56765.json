[{"count": 0, "tags": [], "bug_id": 56765, "is_private": false, "text": "Created attachment 31843\nApplication and its source code to reproduce the issue\n\nOverview: Classloader leak when redeploying a web application which uses Tomcat 8 Database Connection Pool (DBCP 2).\nThis only affects Tomcat 8, probably because it uses DBCP 2; it doesn't occur in Tomcat 7.\nI attached the test application with source code. The relevant part is in META-INF/context.xml:\n\n<Context>\n  <Resource name=\"jdbc/TestDB\" auth=\"Container\" type=\"javax.sql.DataSource\"\n      initialSize=\"1\"\n      username=\"admin\" password=\"\" driverClassName=\"com.mysql.jdbc.Driver\"\n      url=\"jdbc:mysql://localhost:3306/\" />\n</Context>\n\nSteps to reproduce:\n1. Copy \"tomcat8-leak-test.war\" to Tomcat's webapps directory.\n2. Start Tomcat.\n3. Open http://localhost:8080/manager\n4. Find \"/tomcat8-leak-test\" and press Reload.\n5. Press Find leaks.\nNote: You should have MySQL running.\n\nActual Results: Tomcat complains about a memory leak.\n\nExpected Results: No leak.\n\nBuild Date & Hardware: Tomcat 8.0.9 on Windows 7 SP1\n\nAdditional Information: Using VisualVM I got the following path from GC root:\n\nthis     - value: org.apache.catalina.loader.WebappClassLoader #1\n <- factoryClassLoader     - class: org.apache.tomcat.dbcp.pool2.impl.GenericObjectPool, value: org.apache.catalina.loader.WebappClassLoader #1\n  <- resource     - class: com.sun.jmx.mbeanserver.MXBeanSupport, value: org.apache.tomcat.dbcp.pool2.impl.GenericObjectPool #1\n   <- object     - class: com.sun.jmx.mbeanserver.NamedObject, value: com.sun.jmx.mbeanserver.MXBeanSupport #19\n    <- value     - class: java.util.HashMap$Entry, value: com.sun.jmx.mbeanserver.NamedObject #54\n     <- [1]     - class: java.util.HashMap$Entry[], value: java.util.HashMap$Entry #6263\n      <- table     - class: java.util.HashMap, value: java.util.HashMap$Entry[] #505 (16 items)\n       <- value     - class: java.util.HashMap$Entry, value: java.util.HashMap #694\n        <- [11]     - class: java.util.HashMap$Entry[], value: java.util.HashMap$Entry #5834\n         <- table     - class: java.util.HashMap, value: java.util.HashMap$Entry[] #216 (16 items)\n          <- domainTb     - class: com.sun.jmx.mbeanserver.Repository, value: java.util.HashMap #278\n           <- repository     - class: com.sun.jmx.interceptor.DefaultMBeanServerInterceptor, value: com.sun.jmx.mbeanserver.Repository #1\n            <- mbsInterceptor     - class: com.sun.jmx.mbeanserver.JmxMBeanServer, value: com.sun.jmx.interceptor.DefaultMBeanServerInterceptor #1\n             <- platformMBeanServer (sticky class)     - class: java.lang.management.ManagementFactory, value: com.sun.jmx.mbeanserver.JmxMBeanServer #1", "id": 176627, "time": "2014-07-23T13:13:19Z", "creator": "dtgjyhdty@yahoo.com", "creation_time": "2014-07-23T13:13:19Z", "attachment_id": 31843}, {"count": 1, "tags": [], "bug_id": 56765, "is_private": false, "text": "I tried to replace tomcat-dbcp.jar in Tomcat's lib directory with the file from Tomcat 7.0.54 and it indeed fixed the leak. I only had to add factory=\"org.apache.tomcat.dbcp.dbcp.BasicDataSourceFactory\" to my context.xml.", "id": 176740, "time": "2014-07-29T07:47:42Z", "creator": "dtgjyhdty@yahoo.com", "creation_time": "2014-07-29T07:47:42Z", "attachment_id": null}, {"count": 2, "tags": [], "creator": "prabashbala@yahoo.com", "attachment_id": null, "text": "Had the same issue and below is my gc root . Applied the solution mentioned here and it was successful. I am using tomcat-8.0.15 and downgraded tomcat-dbcp.jar file from tomcat-7.0.35.\n\nthis     - value: org.apache.catalina.loader.WebappClassLoader #1\n <- <classLoader>     - class: oracle.jdbc.driver.T4CConnection, value: org.apache.catalina.loader.WebappClassLoader #1\n  <- <class>     - class: oracle.jdbc.driver.T4CConnection, value: oracle.jdbc.driver.T4CConnection class T4CConnection\n   <- _conn     - class: org.apache.tomcat.dbcp.dbcp2.PoolableConnection, value: oracle.jdbc.driver.T4CConnection #1\n    <- resource     - class: com.sun.jmx.mbeanserver.MXBeanSupport, value: org.apache.tomcat.dbcp.dbcp2.PoolableConnection #1\n     <- object     - class: com.sun.jmx.mbeanserver.NamedObject, value: com.sun.jmx.mbeanserver.MXBeanSupport #19\n      <- value     - class: java.util.HashMap$Entry, value: com.sun.jmx.mbeanserver.NamedObject #46\n       <- [130]     - class: java.util.HashMap$Entry[], value: java.util.HashMap$Entry #6594\n        <- table     - class: java.util.HashMap, value: java.util.HashMap$Entry[] #1274 (512 items)\n         <- value     - class: java.util.HashMap$Entry, value: java.util.HashMap #275\n          <- [4]     - class: java.util.HashMap$Entry[], value: java.util.HashMap$Entry #1931\n           <- table     - class: java.util.HashMap, value: java.util.HashMap$Entry[] #211 (16 items)\n            <- domainTb     - class: com.sun.jmx.mbeanserver.Repository, value: java.util.HashMap #268\n             <- repository     - class: com.sun.jmx.interceptor.DefaultMBeanServerInterceptor, value: com.sun.jmx.mbeanserver.Repository #1\n              <- mbsInterceptor     - class: com.sun.jmx.mbeanserver.JmxMBeanServer, value: com.sun.jmx.interceptor.DefaultMBeanServerInterceptor #1\n               <- platformMBeanServer (sticky class)     - class: java.lang.management.ManagementFactory, value: com.sun.jmx.mbeanserver.JmxMBeanServer #1", "id": 180827, "time": "2015-02-06T14:31:41Z", "bug_id": 56765, "creation_time": "2015-02-06T14:31:41Z", "is_private": false}, {"count": 3, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "is_private": false, "id": 180828, "time": "2015-02-06T14:49:06Z", "bug_id": 56765, "creation_time": "2015-02-06T14:49:06Z", "text": "Fix the product."}, {"count": 4, "tags": [], "bug_id": 56765, "attachment_id": null, "id": 180866, "time": "2015-02-09T10:59:48Z", "creator": "markt@apache.org", "creation_time": "2015-02-09T10:59:48Z", "is_private": false, "text": "This was fixed in Commons Pool 2 with r1626998 for version 2.3\n\nThis fix was in turn picked up by Tomcat 8.0.17 onwards."}]