[{"count": 0, "tags": [], "text": "I beleive that there's a problem with apxs, it only gets the CFLAGS \nconfigured at Apache's compile time. And they are not right for every \nmodule that one will want to add to Apache.\n\nTake for example ndbm.h which is needed by mod_ssl. When compiling \nmod_ssl statically into Apache, there's no problem since Apache takes \ncare of finding where it is located. But when we're building mod_ssl with \napxs, if Apache's configure has not figured out where ndbm.h is, \ncompilation will fail.\n\nHere's an example:\n\n$ tar zxf apache_1.3.26.tar.gz\n$ cd apache_1.3.26\n\n$ ./configure --enable-module=so\n$ make\n$ make install\n$ /usr/local/apache/bin/apxs -q CFLAGS\n-DLINUX=22 -DUSE_HSREGEX -DUSE_EXPAT -I../lib/expat-lite\n\napxs does not provide the location of ndbm.h since configure didn't \nneeded it.\n\n$ cd ..\n$ rm -rf apache_1.3.26\n$ tar zxf apache_1.3.26.tar.gz\n$ cd apache_1.3.26\n\nIf, for example, I enable mod_rewrite which requires DBM support, apxs \nwill \"know\" where to look for DBM.\n\n$ ./configure --enable-module=so --enable-module=rewrite\n[...]\n + adding selected modules\n    o rewrite_module uses ConfigStart/End\n + using -ldb1 for DBM support\n      enabling DBM support for mod_rewrite\n[...]\n$ make\n$ make install\n$ /usr/local/apache/bin/apxs -q CFLAGS\n-DLINUX=22 -I/usr/include/db1 -DUSE_HSREGEX -DUSE_EXPAT \n-I../lib/expat-lite\n\nThis is wrong since not enabling a module that requires DBM doesn't \nmean that I'll never want to add one that does in the future.\n\nI don't see any trivial solution to this problem. The easier one, IMHO, is to \ndo every check when mod_so is enabled.\n\nAdding this to src/modules/standard/mod_so.c (in Apache tarball) does \nthe trick:\n\n /* The section for the Configure script:\n  * MODULE-DEFINITION-START\n  * Name: so_module\n  * ConfigStart\n  . ./helpers/find-dbm-lib\n  * ConfigEnd\n  * MODULE-DEFINITION-END\n  */\n\nI didn't find any other helper/check to add, but a more experienced Apache \ndeveloper may find more.\n\nI'm marking major severity since it breaks the compilation of mod_ssl \nusing APXS.", "attachment_id": null, "id": 19935, "creator": "gfk@logidac.com", "time": "2002-07-21T18:36:59Z", "bug_id": 11020, "creation_time": "2002-07-21T18:36:59Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 11020, "text": "(i am not an apache developer)\n\nmod_ssl? mod_ssl requires some EAPI patches to be in Apache for it to work \n(Once EAPI is applied it can be built as DSO)", "id": 24055, "time": "2002-10-07T09:46:44Z", "creator": "rolyv@bigpond.com", "creation_time": "2002-10-07T09:46:44Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 11020, "attachment_id": null, "id": 24107, "time": "2002-10-08T00:06:45Z", "creator": "gfk@logidac.com", "creation_time": "2002-10-08T00:06:45Z", "is_private": false, "text": "What you say is true, but mod_ssl uses the DBM library and will fail to compile if ndbm.h is not in its include \npath. \n\nWhen compiling mod_ssl with APXS, mod_ssl will use the include path provided by APXS (in CFLAGS). If \nAPXS does not provide the path to ndbm.h in CFLAGS, mod_ssl's compilation will fail.\n\nTry it and you'll see, it's been reported about 5 times in mod_ssl's bug database in the last months."}]