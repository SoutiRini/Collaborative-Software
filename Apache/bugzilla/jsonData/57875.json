[{"count": 0, "text": "https://tomcat.apache.org/tomcat-8.0-doc/class-loader-howto.html\nThe guide writes\nAny JAR file that contains Servlet API classes will be explicitly ignored by the classloader \u2014 Do not include such JARs in your web application.\n\nI try including javaee-api-7.0.jar in my webapp in Tomcat 8. It contains Servlet API classes as well as other JEE API such as JPA and JTA. My webapp which depends on JPA and JTA runs normally, which implies the classes from javaee-api-7.0.jar are loaded.\n\nWhen the same webapp is deployed in Tomcat 7, the following error is shown and my webapp failed to deploy because of NoClassDefFoundError of some JPA/JTA class.\nINFO: validateJarFile(C:\\apache-tomcat-7.0.54\\webapps\\ROOT\\WEB-INF\\lib\\javaee-api-7.0.jar) - jar not loaded.\nSee Servlet Spec 3.0, section 10.7.2. Offending class: javax/servlet/Servlet.class\n\nIt appears that the classloader is changed in Tomcat 8 and that restriction is lifted. If so, please update the guide accordingly.", "bug_id": 57875, "attachment_id": null, "id": 182745, "time": "2015-04-30T02:35:57Z", "creator": "psfung@clustertech.com", "creation_time": "2015-04-30T02:35:57Z", "tags": [], "is_private": false}, {"count": 1, "tags": [], "bug_id": 57875, "attachment_id": null, "id": 182751, "time": "2015-04-30T08:39:27Z", "creator": "markt@apache.org", "creation_time": "2015-04-30T08:39:27Z", "is_private": false, "text": "Thanks for the report.\n\nTomcat 8 is more relaxed about this. It delegates first for all the JavaEE API classes for the specs Tomcat implements. This achieves the same ends with less impact on the user if they accidently ship an JavaEE API JAR in their web application.\n\nThe updated docs will be in 8.0.23 onwards."}]