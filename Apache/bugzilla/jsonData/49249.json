[{"count": 0, "tags": [], "bug_id": 49249, "text": "1. In a Tomcat cluster forwarded by Apache\n2. Config \"KeepAlive on\" in httpd.conf\n3. No static resource cache in Apache\n4. Download a large file (jre.exe, 16M) with load (200+ downloads per Tomcat) directly from Tomcat, a \"GC overhead limit exceeded\" error will occur in a short time.  The stacktrace in Tomcat's log looks like below: \n\njava.lang.reflect.InvocationTargetException\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:597)\n\tat com.nazca.io.httpd.HttpServletTool.processResponse(HttpServletTool.java:100)\n\tat com.nazca.io.httpd.HttpServletTool.processRequest(HttpServletTool.java:57)\n\tat com.nazca.consult.leader.server.servlet.LeaderHttpRPCServlet.processRequest(LeaderHttpRPCServlet.java:55)\n\tat com.nazca.consult.leader.server.servlet.LeaderHttpRPCServlet.doPost(LeaderHttpRPCServlet.java:83)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:637)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:717)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:128)\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:286)\n\tat org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:845)\n\tat org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:583)\n\tat org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:447)\n\tat java.lang.Thread.run(Thread.java:619)\nCaused by: java.lang.OutOfMemoryError: GC overhead limit exceeded\nException in thread \"pool-6-thread-3\" java.lang.OutOfMemoryError: GC overhead limit exceeded\n2010-05-05 09:06:53,913 [ERROR] org.apache.catalina.core.ContainerBase.[Standalone].[localhost].[/consult_workerPortal].[jnlpServlet]\n Servlet.service() for servlet jnlpServlet threw exception\njava.lang.OutOfMemoryError: GC overhead limit exceeded", "id": 136636, "time": "2010-05-05T00:44:27Z", "creator": "mustangxu@gmail.com", "creation_time": "2010-05-05T00:44:27Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 49249, "attachment_id": null, "text": "A quick search gives me this reference:\nhttp://java.sun.com/javase/technologies/hotspot/gc/gc_tuning_6.html#par_gc.oom\n\"The parallel collector will throw an OutOfMemoryError if too much time is being spent in garbage collection\"\n\nOut of memory errors mean that you must profile your own application to identify the root cause. See users@ list archives for further pointers.\n\nhttp://wiki.apache.org/tomcat/OutOfMemory\nhttp://tomcat.apache.org/bugreport.html#Bugzilla_is_not_a_support_forum\n\nClosing as INVALID, because there is no Tomcat issue here.", "id": 136637, "time": "2010-05-05T01:29:35Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2010-05-05T01:29:35Z", "is_private": false}, {"count": 2, "tags": [], "creator": "mustangxu@gmail.com", "text": "(In reply to comment #1)\n> A quick search gives me this reference:\n> http://java.sun.com/javase/technologies/hotspot/gc/gc_tuning_6.html#par_gc.oom\n> \"The parallel collector will throw an OutOfMemoryError if too much time is\n> being spent in garbage collection\"\n> \n> Out of memory errors mean that you must profile your own application to\n> identify the root cause. See users@ list archives for further pointers.\n> \n> http://wiki.apache.org/tomcat/OutOfMemory\n> http://tomcat.apache.org/bugreport.html#Bugzilla_is_not_a_support_forum\n> \n> Closing as INVALID, because there is no Tomcat issue here.\n\nI am not a new developer to Java and do know what is a OutOfMemoryError. This application is only a servlet generating dynamic JNLP file and providing JRE download. It ran smoothly during the past one year with load. After we turned \"keep alive\" on in apache a few days ago, Tomcat crashed this morning. Then we turned it back to off and now it serves with no error.\nMy team supposed that if download a large file from tomcat with keep-alive connection, since all the requests from the same user use the same connection, maybe the stream buffer doesn't close correctly during the download and then cause this ERROR. Pls check in this bug and validate it with patience.", "id": 136638, "time": "2010-05-05T02:16:12Z", "bug_id": 49249, "creation_time": "2010-05-05T02:16:12Z", "is_private": false, "attachment_id": null}]