[{"count": 0, "tags": [], "text": "The fix for Bug 49555 adds the following code call:\n\n                clazz = Class.forName(className, true, tccl);\n\nThe 2nd argument (initialize) is set to true resulting in it attempting to initialize the class.  This can result in compilation failures if the class has ugly static initializer requirements.  It can also increases the time and memory footprint of compilation as the classes.\n\nI think for the purposes of the getCanonicalName() call, the second argument should be set to false to prevent initialization of the class in question.", "attachment_id": null, "bug_id": 50895, "id": 144835, "time": "2011-03-08T15:27:00Z", "creator": "dopey@moonteeth.com", "creation_time": "2011-03-08T15:27:00Z", "is_private": false}, {"attachment_id": null, "tags": [], "bug_id": 50895, "text": "Initialisation has to happen at some point. If it doesn't happen at compilation it will happen at first use very shortly afterwards. Failing early is actually better. Therefore I am closing this as INVALID.\n\nIf you have a test case that currently fails that changing initialize to false will allow to work then please re-open this issue and attach the test case.", "count": 1, "id": 144841, "time": "2011-03-08T17:30:09Z", "creator": "markt@apache.org", "creation_time": "2011-03-08T17:30:09Z", "is_private": false}, {"attachment_id": null, "tags": [], "bug_id": 50895, "text": "We have a tag that contructs a class that has runtime dependencies in it's constructor.\n\nWhen using the Jspc ant task to compile, these runtime dependencies don't exist.  However, when the class is actually called during runtime (i.e. within a running tomcat instance) the runtime requirements exist and are fine.\n\nI can't provide you our usecase because it's dependent on many many layers of our code, but I can easily provide you with a contrived usecase of a jsp file that will compile and load fine when tomcat is running but will not when using the out of band Jspc ant task to perform a precompile if you wish.\n\nI think this is a valid scenario.", "count": 2, "id": 144842, "time": "2011-03-08T17:42:39Z", "creator": "dopey@moonteeth.com", "creation_time": "2011-03-08T17:42:39Z", "is_private": false}, {"attachment_id": null, "tags": [], "bug_id": 50895, "is_private": false, "count": 3, "id": 144843, "time": "2011-03-08T18:05:16Z", "creator": "dopey@moonteeth.com", "creation_time": "2011-03-08T18:05:16Z", "text": "I haven't coded this up, here's a simple example:\n\nmy.jsp page that contians the following\n\nMyClass class = new MyClass();\n\nMyClass contains the following code\n\n static {\n     File file = new File(\"/path/to/file/that/only/exists/at/runtime\");\n     if (!file.exists()) {\n        throw new Exception();\n     }\n }\n\n\nmy.jsp is perfectly valid to precompile in this case, but precompilation using the Jspc ant task will fail because the instantiation of MyClass will fail due to the file that doesn't exist.\n\nWhile this is a horrible example and I won't argue the coding pattern isn't ideal, we have a couple of cases where a jsp page relies on a class that has a static constructor that has runtime dependencies.  As a result, we are unable to precompile the jsps without patching tomcat and making the initialize flag false.\n\nThe other thing.  All of our JSPs takes 96 minutes to pre-compile with 6.0.32.\nTook about an hour with 6.0.28.  With the initialize set to false it's somewhere in between.  The initialization step of some of our classes with  complicated static initializers can be time consuming."}, {"count": 4, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "is_private": false, "id": 144870, "time": "2011-03-09T08:52:28Z", "bug_id": 50895, "creation_time": "2011-03-09T08:52:28Z", "text": "Yep, that is a really ugly example but I take the point.\n\nFixed in 7.0.x and will be included in 7.0.11 onwards."}, {"attachment_id": null, "tags": [], "bug_id": 50895, "text": "Thanks.  Any plans to put this into 6.0?  We're patching 6.0.32 to deal with this, so not a huge deal.  Just want to know if we should expect to continue maintaining this change ourselves for 6.0.", "count": 5, "id": 144882, "time": "2011-03-09T14:53:44Z", "creator": "dopey@moonteeth.com", "creation_time": "2011-03-09T14:53:44Z", "is_private": false}, {"count": 6, "tags": [], "creator": "markt@apache.org", "is_private": false, "text": "It will go into 6. I have my hands full with 7 at the moment but someone (maybe me, maybe someone else) will propose this for backport.", "id": 144884, "time": "2011-03-09T15:18:26Z", "bug_id": 50895, "creation_time": "2011-03-09T15:18:26Z", "attachment_id": null}, {"count": 7, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "text": "Proposed for 6.0.x", "id": 144910, "time": "2011-03-10T08:21:38Z", "bug_id": 50895, "creation_time": "2011-03-10T08:21:38Z", "is_private": false}, {"count": 8, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "is_private": false, "id": 145833, "time": "2011-04-18T09:57:13Z", "bug_id": 50895, "creation_time": "2011-04-18T09:57:13Z", "text": "Fixed in 6.0.x and will be in 6.0.33 onwards."}]