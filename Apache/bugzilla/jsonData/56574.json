[{"count": 0, "tags": [], "text": "Created attachment 31676\nAbove description is achived in this file.\n\nStep 1 : Create \".xlsx\" file write any formula at A1 cell like \"=Today()\".\nStep 2 : Drag \"A1\" Cell up to \"A20\" and save the file.\nStep 3 : Through POI refer saved excel file and \nremove formula by using (cell.setFormula(null)) and write data to sheet containing formulas, write starts from Cells \"A1\" to \"A10\".\nStep 4 : Execute your java program.\nStep 5 : Try to open excel file, its giving error \"Excel found unreadable content.\". After opening below formulas cells formula and styles are overwriting to written style.", "is_private": false, "bug_id": 56574, "id": 175539, "time": "2014-05-29T07:39:41Z", "creator": "ranganath.196@scii.in", "creation_time": "2014-05-29T07:39:41Z", "attachment_id": 31676}, {"count": 1, "tags": [], "creator": "dominik.stadler@gmx.at", "attachment_id": null, "is_private": false, "id": 175540, "time": "2014-05-29T08:28:17Z", "bug_id": 56574, "creation_time": "2014-05-29T08:28:17Z", "text": "Can you provide the actual code that you use? Preferably as self-contained unit test so we can incorporate the steps into our test-suite and avoid the"}, {"count": 2, "tags": [], "creator": "ranganath.196@scii.in", "attachment_id": null, "is_private": false, "id": 175584, "time": "2014-06-02T05:49:27Z", "bug_id": 56574, "creation_time": "2014-06-02T05:49:27Z", "text": "(In reply to Dominik Stadler from comment #1)\n> Can you provide the actual code that you use? Preferably as self-contained\n> unit test so we can incorporate the steps into our test-suite and avoid the\n\nBelow is the code I am using to remove formula from excel file.\n               Row row = sheet.getRow(1);\n                if (row == null){\n\t\t\trow = sheet.createRow(1);\n\t\t}\n\n\t\tCell cell = row.getCell(1);\n\t\tif(cell == null){\n\t\t\tcell = row.createCell(1);\n\t\t} else {\n                       /** Code to remove formula from cell **/\n\t\t\tif(cell.getCellType() == Cell.CELL_TYPE_FORMULA) {\n\t\t\t\tcell.setCellFormula(null);\n\t\t\t\tcell.getCellStyle().setDataFormat((short) 0);\n\t\t\t}\n                       /** End **/\n\t\t}"}, {"count": 3, "tags": [], "text": "Below is the entire code I used for above bug\n\nimport java.io.File;\nimport java.io.FileInputStream;\nimport java.io.FileNotFoundException;\nimport java.io.FileOutputStream;\nimport java.io.IOException;\nimport java.util.Map;\nimport java.util.Set;\nimport java.util.TreeMap;\n\nimport org.apache.poi.ss.usermodel.Cell;\nimport org.apache.poi.ss.usermodel.Row;\nimport org.apache.poi.ss.usermodel.Workbook;\nimport org.apache.poi.xssf.usermodel.XSSFFormulaEvaluator;\nimport org.apache.poi.xssf.usermodel.XSSFSheet;\nimport org.apache.poi.xssf.usermodel.XSSFWorkbook;\npublic class ExcelFormulaDrag {\n\tpublic static Workbook workbook07;\n\tpublic static Map<String, Object[]> data;\n\tpublic void setData() {\n\t\t//This data needs to be written (Object[])\n        data = new TreeMap<String, Object[]>();\n        data.put(\"1\", new Object[] {\"ID\", \"NAME\", \"LASTNAME\"});\n        data.put(\"2\", new Object[] {2, \"Amit\", \"Shukla\"});\n        data.put(\"3\", new Object[] {1, \"Lokesh\", \"Gupta\"});\n        data.put(\"4\", new Object[] {4, \"John\", \"Adwards\"});\n        data.put(\"5\", new Object[] {2, \"Brian\", \"Schultz\"});\n\t}\n\n\tpublic void format2007() throws IOException {\n        XSSFSheet sheet = (XSSFSheet) workbook07.getSheet(\"Emp\");\n\t\tif(sheet == null){\n\t\t   sheet = (XSSFSheet) workbook07.createSheet(\"Emp\");\n\t\t}\n\t\tSet<String> keyset = data.keySet();\n        int rownum = 1;\n        for (String key : keyset)\n        {\n            Row row = sheet.createRow(rownum++);\n            this.writeToSheet(row, key);\n        }\n\t}\n\n\n\n\tpublic void writeToSheet(Row row, String key){\n            Object [] objArr = data.get(key);\n            int cellnum = 0;\n            for (Object obj : objArr)\n            {\n            \tCell cell = row.getCell(cellnum);\n        \t\tif(cell == null){\n        \t\t\tcell = row.createCell(cellnum);\n        \t\t} else {\n        \t\t\tif(cell.getCellType() == Cell.CELL_TYPE_FORMULA) {\n        \t\t\t\tif(cell.getCellType() == Cell.CELL_TYPE_FORMULA) {\n        \t\t\t\t\tcell.setCellFormula(null);\n        \t\t\t\t\tcell.getCellStyle().setDataFormat((short) 0);\n        \t\t\t\t}\n        \t\t\t}\n        \t\t}\n               if(obj instanceof String) {\n                    cell.setCellValue((String)obj);\n               } else if(obj instanceof Integer) {\n                    cell.setCellValue((Integer)obj);\n               }\n\t\t\t\tXSSFFormulaEvaluator.evaluateAllFormulaCells((XSSFWorkbook) workbook07);\n\t\t\t\tworkbook07.getCreationHelper().createFormulaEvaluator().evaluateAll();\n               cellnum++;\n            }\n\t}\n\n\t/**\n\t * @param args\n\t */\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n    \ttry {\n    \t\tExcelFormulaDrag excelFormulaDrag = new ExcelFormulaDrag();\n    \t\texcelFormulaDrag.setData();\n    \t\tworkbook07 = new XSSFWorkbook(new FileInputStream(\"D:\\\\testing7.xlsx\"));\n\t\t\texcelFormulaDrag.format2007();\n\t\t\tFileOutputStream out = new FileOutputStream(new File(\"D:\\\\testing4.xlsx\"));\n\t\t\tworkbook07.write(out);\n\t\t\tout.close();\n\t\t} catch (FileNotFoundException e) {\n\t\t\t// TODO Auto-generated catch block\n\t\t\te.printStackTrace();\n\t\t} catch (IOException e) {\n\t\t\t// TODO Auto-generated catch block\n\t\t\te.printStackTrace();\n\t\t}\n\n\t}\n}\n\n\nIn .xlsx file in cell A1 type '=TODAY()' and drag up to A20, and refer same to above code and execute.", "attachment_id": null, "bug_id": 56574, "id": 175590, "time": "2014-06-02T08:48:42Z", "creator": "ranganath.196@scii.in", "creation_time": "2014-06-02T08:48:42Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 56574, "attachment_id": null, "text": "The problem in your code is \n\n    Row row = sheet.createRow(rownum++);\n\nwith this you are effectively overwriting an existing row and POI seems to not handle this nicely right now. \n\nBy using \n\n    Row row = sheet.getRow(rownum++);\n\nyour example works as expected.", "id": 183032, "time": "2015-05-19T09:12:03Z", "creator": "dominik.stadler@gmx.at", "creation_time": "2015-05-19T09:12:03Z", "is_private": false}, {"count": 5, "tags": [], "creator": "dominik.stadler@gmx.at", "attachment_id": null, "id": 183037, "time": "2015-05-19T13:14:16Z", "bug_id": 56574, "creation_time": "2015-05-19T13:14:16Z", "is_private": false, "text": "I have also fixed the case with using createRow() under r1680280, the Cells were invalidated, but not correctly removed when a createRow() overwrites an existing row. This should work correctly now."}]