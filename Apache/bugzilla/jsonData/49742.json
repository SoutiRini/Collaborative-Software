[{"count": 0, "tags": [], "bug_id": 49742, "attachment_id": null, "is_private": false, "id": 139066, "time": "2010-08-12T06:45:54Z", "creator": "christoph.bimminger@systema.info", "creation_time": "2010-08-12T06:45:54Z", "text": "not repeatable, not clearly reproducable. bug occurs frequently in our Jemmy application GUI tests.\n\njava.lang.NullPointerException\n\tat org.apache.batik.dom.events.EventListenerList.removeListener(EventListenerList.java:88)\n\tat org.apache.batik.dom.events.EventSupport.removeEventListenerNS(EventSupport.java:180)\n\tat org.apache.batik.dom.AbstractNode.removeEventListenerNS(AbstractNode.java:991)\n\tat org.apache.batik.dom.svg.SVGOMDocument.removeCSSNavigableDocumentListener(SVGOMDocument.java:473)\n\tat org.apache.batik.css.engine.CSSEngine.removeEventListeners(CSSEngine.java:487)\n\tat org.apache.batik.css.engine.CSSEngine.dispose(CSSEngine.java:516)\n\tat org.apache.batik.bridge.BridgeContext.removeDOMListeners(BridgeContext.java:1291)\n\tat org.apache.batik.bridge.BridgeContext.dispose(BridgeContext.java:1444)\n\tat org.apache.batik.swing.svg.AbstractJSVGComponent.installSVGDocument(AbstractJSVGComponent.java:721)\n\tat org.apache.batik.swing.JSVGCanvas.installSVGDocument(JSVGCanvas.java:591)\n\tat org.apache.batik.swing.svg.AbstractJSVGComponent$2.run(AbstractJSVGComponent.java:679)\n\n\nI guess it's because we do call AbstractJSVGComponent's setSVGDocument frequently. I assume while one call of setSVGDocument still processes its installSVGDocument, another thread also tries to remove listeners. \n\nCode in EventListenerList, which causes NPE, is eht \"else if\" condition:\n\n    else if (head != null\n                && (namespaceURI != null && namespaceURI.equals(head.namespaceURI)\n                    || namespaceURI == null && head.namespaceURI == null)\n                && listener == head.listener) {\n            head = head.next;\n        }\n\nThe only reason for NPE that I can figure out is, that the member \"head\" in thread A passes the \"head != null\" condition, then thread B already processes head=head.next (what may set head = NULL), and then thread A resumes with accessing head.namecpaceURI or head.listener -> NPE.\n\nWhat about assigning head to a local variable before entering the IF condition; and using the local variable for the conditions (and as source for assignment)?"}]