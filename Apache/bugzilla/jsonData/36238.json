[{"attachment_id": null, "tags": [], "bug_id": 36238, "is_private": false, "count": 0, "id": 78620, "time": "2005-08-18T10:09:50Z", "creator": "bowditch_chris@hotmail.com", "creation_time": "2005-08-18T10:09:50Z", "text": "Bug reported by Martin Valkanov <m.valkanov.at.is-bg.net>\n\nQuote:\n\n\"we recently migrated from fop 0.20.5 to 1.0dev (rev232979)\nand can not get text-align=\"justify\" to work with custom fonts embedded in a\npdf.\nIt works ok with fop 0.20.5.\n\nUsing the built-in font-family=\"Helvetica\" or font-family=\"Courier\" text is\njustified correctly.\""}, {"attachment_id": null, "tags": [], "bug_id": 36238, "is_private": false, "count": 1, "id": 78690, "time": "2005-08-19T09:39:51Z", "creator": "jeremias@apache.org", "creation_time": "2005-08-19T09:39:51Z", "text": "Confirmed. It looks like nothing at all happens for embedded TrueType fonts \nand a not quite successful attempt for Type 1 fonts. Will have to investigate \nfurther.\n\nDoes anybody know about some free, non-bullshit fonts (one TrueType and one \nType 1, with kerning tables) that we could place in our repo for testing \npurposes? The license is important."}, {"count": 2, "tags": [], "bug_id": 36238, "is_private": false, "text": "I have tried several times to get a collection of fonts into the FOray \nrepository, but have been unable to get it done. There seem to be a lot of free \nfonts out there, but the ones I have found still have licensing restrictions \nthat would prevent distribution of them. Another problem is that there are \nquite a few axes WRT fonts, and you could end up needing a fairly large number \nof fonts to cover the various issues, especially if you want to create tests \nthat will handle poorly-constructed fonts properly.\n\nOne less-than-ideal alternative might be to identify and document some commonly-\nused typefaces for which almost everyone will have a license, or perhaps to \ndocument the URL for downloading free fonts, so that everyone can at least go \nget the same thing from that location.\n\nAnother alternative is to appeal to the user base to see if someone would take \non the project of creating a set of fonts that could be used for testing. Since \nbeauty of output is not the main object, hand-drawn stuff would be fine.", "id": 78712, "time": "2005-08-19T17:01:40Z", "creator": "vic@outfitr.com", "creation_time": "2005-08-19T17:01:40Z", "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 36238, "is_private": false, "text": "Look no further than your sister project (for TrueType):\nhttp://svn.apache.org/viewcvs.cgi/xmlgraphics/batik/trunk/samples/tests/resources/ttf/\n\nYou might use font-forge to convert that to Type 1.\nThere is also a very simple SVG font that I did a while ago\n(useful for testing SVG text layout, among other things). It also has\nsome kerning (although perhaps not a full set):\n\nhttp://svn.apache.org/viewcvs.cgi/xmlgraphics/batik/trunk/samples/strokeFont.svg\n\nI don't know if font-forge can do anything with SVG fonts.\n", "id": 78975, "time": "2005-08-25T12:02:56Z", "creator": "deweese@apache.org", "creation_time": "2005-08-25T12:02:56Z", "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 36238, "text": "Jeremias, it just tried to reproduce this and couldn't. In my example the \ncustom font aligns just fine. Could it be that it is fixed as a side effect of \nother changes made by Luca to the Knuth elements for justification? Can you \nstill reproduce it?\n\nBTW - very comprehensive lists of Unicode fonts (free, shareware, commercial) \nfor (nearly) every possible script can be found at \nhttp://www.travelphrases.info/fonts.html and http://www.alanwood.net/unicode/.", "id": 80935, "time": "2005-10-10T02:06:22Z", "creator": "manuel@apache.org", "creation_time": "2005-10-10T02:06:22Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "text": "(In reply to comment #4)\n> Jeremias, it just tried to reproduce this and couldn't. In my example the \n> custom font aligns just fine. Could it be that it is fixed as a side effect of \n> other changes made by Luca to the Knuth elements for justification? Can you \n> still reproduce it?\n\nYes, I can. I configured the Windows Arial font in the font config and used that\nfont with text-align=\"justify\".", "is_private": false, "bug_id": 36238, "id": 80938, "time": "2005-10-10T08:43:47Z", "creator": "jeremias@apache.org", "creation_time": "2005-10-10T08:43:47Z", "attachment_id": null}, {"count": 6, "tags": [], "bug_id": 36238, "attachment_id": null, "text": "To document what's wrong, here are two PDF lines generated once with FOP 0.20.5\nand once with FOP Trunk. This illustrates what is done differently:\n\nFop 0.20.5:\n1 0 0 1 56.692 678.637 Tm [<00040005000600070008> -293.0 <0009000a000b000c0008>\n-293.0 <000d0005000e00050006> -293.0 <000b0009000f> -293.0\n<001000080007000f0011> -293.0 <001200050013000b00070012000f0007000f000c00070006>\n-293.0 <0010000d0009000a0009000b0012000900130014> -293.0 <0007000e0009000f0015>\n-293.0 <00160013> -293.0 <0017000c0009000b> -293.0\n<000f00050006000f000500060015> -293.0 <001800190010000b0007000e000e000c000b>\n-293.0 <0010000f> -293.0 <0005000600120009> -293.0 <00100012> ] TJ\n\nFOP Trunk:\n1 0 0 -1 0.0 112.164 Tm 0.0 Tc 1.437 Tw\n[<000500060007000800090003000A000B000C000D00090003000E0006000F000600070003000C000A00100003001100090008001000120003001300060014000C00080013001000080010000D0008000700030011000E000A000B000A000C0013000A0014001500030008000F000A0010001600030017001400030018000D000A000C0003001000060007001000060007001600030019001A0011000C0008000F000F000D000C0003001100100003000600070013000A>\n] TJ\n\nLooks like the spaces don't get recognized by the PDF implementation this way.", "id": 80939, "time": "2005-10-10T10:09:53Z", "creator": "jeremias@apache.org", "creation_time": "2005-10-10T10:09:53Z", "is_private": false}, {"count": 7, "tags": [], "text": "I'm not sure this is directly related to the bug: it seems that 0.20.5 creates a\ntext area for each word / space, while trunk creates a single text area for all\nthe text a TextLM has to put in a line (this is done in TextLM.addAreas, and\nuntil a few months ago trunk created several text areas too).\n\nI did a simple test with two justified blocks with the same text, one using the\ndefault font, the other an embedded font, and this is the resulting output (I\njust added System.out.println(pdf.toString()) in PDFRenderer.renderText()):\n\n(block with the default font)\n/F1 12.0 Tf\n0 g\n1 0 0 -1 0.0 10.266 Tm 0.0 Tc 0.047 Tw [(Font test; some text in order to\ndiscover why there are justification) \n/F1 12.0 Tf\n1 0 0 -1 0.0 24.666 Tm 0.0 Tc -1.081 Tw [(problems whit embedded fonts. More\ntext to create more lines: what) \n/F1 12.0 Tf\n1 0 0 -1 0.0 39.066 Tm 0.0 Tc 0.0 Tw [(happens?) \n\n(block with the embedded font)\n/F15 12.0 Tf\n0 g\n1 0 0 -1 0.0 54.564 Tm 0.0 Tc 0.072 Tw\n[<0005000600070008000300080009000A0008000B0003000A0006000C0009000300080009000D00080003000E000700030006000F00100009000F00030008000600030010000E000A0011000600120009000F00030013001400150003000800140009000F000900030016000F0009000300170018000A0008000E0019000E001100160008000E00060007>\n\n/F15 12.0 Tf\n1 0 0 -1 0.0 68.964 Tm 0.0 Tc -1.057 Tw\n[<001A000F0006001B001C0009000C000A000300130014000E000800030009000C001B0009001000100009001000030019000600070008000A001D0003001E0006000F0009000300080009000D000800030008000600030011000F00090016000800090003000C0006000F00090003001C000E00070009000A001F00030013001400160008>\n\n/F15 12.0 Tf\n1 0 0 -1 0.0 83.364 Tm 0.0 Tc 0.0 Tw [<00140016001A001A00090007000A0020> \n\nThe only difference (apart from small differences in the numeric values) is that\n  the embedded font is multibyte. Maybe the different encoding of a space\ncharacter prevents the adjustment to be applied?\n\nRegards\n    Luca", "attachment_id": null, "id": 81309, "creator": "lfurini@cs.unibo.it", "time": "2005-10-18T12:35:14Z", "bug_id": 36238, "creation_time": "2005-10-18T12:35:14Z", "is_private": false}, {"count": 8, "tags": [], "bug_id": 36238, "text": "Quotation from the pdf reference, version 1.6, section 5.2.2 Word spacing:\n\n  \"Word spacing is applied to every occurrence of the single-byte character code\n32 in a string when using a simple font or a composite font that defines code 32\nas a single-byte code. It does not apply to occurrences of the byte value 32 in\nmultiple-byte codes.\"\n\nSo, it seems that at least we have found where the problem lies ... anyone has\nan idea how to solve it too? :-)\n\nRegards\n    Luca", "id": 81311, "time": "2005-10-18T12:53:22Z", "creator": "lfurini@cs.unibo.it", "creation_time": "2005-10-18T12:53:22Z", "is_private": false, "attachment_id": null}, {"count": 9, "tags": [], "text": "resetting P2 open bugs to P3 pending further review", "is_private": false, "bug_id": 36238, "id": 157588, "time": "2012-04-07T01:44:56Z", "creator": "gadams@apache.org", "creation_time": "2012-04-07T01:44:56Z", "attachment_id": null}, {"count": 10, "tags": [], "text": "change status from ASSIGNED to NEW for consistency", "is_private": false, "bug_id": 36238, "id": 157900, "time": "2012-04-11T06:17:07Z", "creator": "gadams@apache.org", "creation_time": "2012-04-11T06:17:07Z", "attachment_id": null}]