[{"count": 0, "tags": [], "bug_id": 33716, "text": "The suexec security model is described here as 20 checks:\n\nhttp://httpd.apache.org/docs-2.0/suexec.html#model\n\nThe code in support/suexec.c does not match the same checks.\n\nIf the suexec binary behaved as the model described I would have no troubles in\nmy environment. Since it isn't, then I do have troubles, and in fact the\nsecurity is harmed by the actual behavior.\n\nDetails:\n\nThe problem is that the code checks to see if the directory containing the cgi\nprogram has the same uid and gid as the cgi program.\n\nThis is a bad bad check and not described in the security model.\n\nIt is bad because in order to make suexec run, the directory containing the cgi\nneeds to be owned by the same user as the cgi. Very commonly (thanks to\nScriptAliasMatch and friends) the cgis are mixed with content. This means that\nif the cgi program has a security hole/bug in it (very common) then the cgis can\ndelete, overwrite, and change web content.\n\nIn other words to avoid defacement, make sure the web content isn't writeable by\ncgis. This has long been best practice.\n\nIn short: make the behavior match the (very good) model and everything is good.\n\nI'll attach a patch.", "id": 71418, "attachment_id": null, "creator": "dax@gurulabs.com", "creation_time": "2005-02-23T22:00:16Z", "time": "2005-02-23T22:00:16Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 33716, "is_private": false, "text": "Created attachment 14353\nRemove extraneous bad check in suexec so it matches documented security model", "id": 71419, "time": "2005-02-23T22:01:16Z", "creator": "dax@gurulabs.com", "creation_time": "2005-02-23T22:01:16Z", "attachment_id": 14353}, {"count": 2, "tags": [], "text": "Your POV. Actually a lot of people use suexec in order to be able to write their\ncontent and not to disturb any other user on the system.\n\nYour patch still allows to modify the program itself, and so doesn't improve\nsecurity but makes the security model even more weak.", "attachment_id": null, "bug_id": 33716, "id": 71421, "time": "2005-02-23T22:14:56Z", "creator": "nd@perlig.de", "creation_time": "2005-02-23T22:14:56Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 33716, "attachment_id": null, "text": "(In reply to comment #2)\n> Your POV. Actually a lot of people use suexec in order to be able to write their\n> content and not to disturb any other user on the system.\n\nWith my patch people can still OPTIONALLY write to their content. Currently the\nbehavior is such that it is MANDATED that their content can be written to.\n\nNot a good security practice to be forcing on people.\n\n> Your patch still allows to modify the program itself, and so doesn't improve\n> security but makes the security model even more weak.\n\nThe program can write to itself before and after my patch. So my patch is\nirrelevant to that legitimate issue. That issue can't be resolved without\nchanging the fundamental design and usage of suexec.\n\nHow does my change make the security model more weak? Describe a scenario please.", "id": 71424, "time": "2005-02-23T22:24:15Z", "creator": "dax@gurulabs.com", "creation_time": "2005-02-23T22:24:15Z", "is_private": false}, {"count": 4, "tags": [], "text": "(In reply to comment #3)\n> (In reply to comment #2)\n> > Your POV. Actually a lot of people use suexec in order to be able to write their\n> > content and not to disturb any other user on the system.\n> \n> With my patch people can still OPTIONALLY write to their content. Currently the\n> behavior is such that it is MANDATED that their content can be written to.\n> \n\nA complete description of the change is:\n\nUsers who depend on the current behavior in regards to having cgis modifying\ntheir content will not be effected by the patch. Things will still function as\nexpected. No change.\n\nUsers who don't want their content writable by cgis can adjust directory and\nfile ownerships to prevent this from happening. This is what the patch offers\nand is was not possible before.", "attachment_id": null, "bug_id": 33716, "id": 71426, "time": "2005-02-23T22:29:26Z", "creator": "dax@gurulabs.com", "creation_time": "2005-02-23T22:29:26Z", "is_private": false}, {"count": 5, "tags": [], "creator": "nd@perlig.de", "text": "http://httpd.apache.org/docs-2.0/suexec.html, condition 14.", "id": 71427, "time": "2005-02-23T22:30:54Z", "bug_id": 33716, "creation_time": "2005-02-23T22:30:54Z", "is_private": false, "attachment_id": null}, {"count": 6, "tags": [], "bug_id": 33716, "attachment_id": null, "text": "(In reply to comment #5)\n> http://httpd.apache.org/docs-2.0/suexec.html, condition 14.\n\nI hope you are not serious.\n\nPlease tell me how:\n\n\"the directory NOT writable by anyone else\"\n\nis equal to the code:\n\n    if ((uid != dir_info.st_uid) ||\n        (gid != dir_info.st_gid) ||\n        (uid != prg_info.st_uid) ||\n        (gid != prg_info.st_gid)) {\n\nI want my content directory to be the following:\n\ndr-xr-xr-x   2 root root 4096 Feb 23 14:36 htdocs\n\nThis matches with the described security model, but not with the code.\n\nPlease change the code to match condition 14, no more, no less.", "id": 71430, "time": "2005-02-23T22:38:18Z", "creator": "dax@gurulabs.com", "creation_time": "2005-02-23T22:38:18Z", "is_private": false}, {"count": 7, "tags": [], "creator": "nd@perlig.de", "text": "Look some lines above. In conclusion with those lines:\n\n    if ((dir_info.st_mode & S_IWOTH) || (dir_info.st_mode & S_IWGRP)) {\n        log_err(\"directory is writable by others: (%s)\\n\", cwd);\n        exit(116);\n    }\n\nit matches cond. 14.\n\n> I want my content directory to be the following:\n> dr-xr-xr-x   2 root root 4096 Feb 23 14:36 htdocs\n\nSo you're editing your files as root? Nice ;-)\n\nAnyway, you're mixing comfort and security. Your directory model should also\nmatch your security needs. Just don't put active scripts in such directories and\nyou're done.", "id": 71433, "attachment_id": null, "bug_id": 33716, "creation_time": "2005-02-23T22:45:34Z", "time": "2005-02-23T22:45:34Z", "is_private": false}, {"count": 8, "tags": [], "text": "(In reply to comment #7)\n> Look some lines above. In conclusion with those lines:\n> \n>     if ((dir_info.st_mode & S_IWOTH) || (dir_info.st_mode & S_IWGRP)) {\n>         log_err(\"directory is writable by others: (%s)\\n\", cwd);\n>         exit(116);\n>     }\n> \n> it matches cond. 14.\n\nNo it does not match. What cond 14 says, and what is checked is not the same.\n\nIn other words, where is the condition that says: \"directory containing the cgi\nprogram MUST have same owner and group as the cgi program\"?\n\nSuch a condition wisely does not exist.\n\n> > I want my content directory to be the following:\n> > dr-xr-xr-x   2 root root 4096 Feb 23 14:36 htdocs\n> \n> So you're editing your files as root? Nice ;-)\n\nNo. Consider the following:\n\ndr-xr-xr-x  2 root    root    4096 Feb 23 14:51 .\ndrwxr-xr-x  3 root    root    4096 Feb 23 14:36 ..\n-rw-r--r--  1 dkelson dkelson   19 Feb 23 14:50 index.html\n-rw-r--r--  1 root    root       8 Feb 23 14:51 mypic.png\n-rwxr-xr-x  1 dkelson dkelson   16 Feb 23 14:52 update-index.cgi\n\n> Anyway, you're mixing comfort and security. Your directory model should also\n> match your security needs. Just don't put active scripts in such directories and\n> you're done.\n\nThis is hand waving and ignores the problem.", "attachment_id": null, "bug_id": 33716, "id": 71439, "time": "2005-02-23T22:57:29Z", "creator": "dax@gurulabs.com", "creation_time": "2005-02-23T22:57:29Z", "is_private": false}, {"count": 9, "tags": [], "bug_id": 33716, "text": ">> So you're editing your files as root? Nice ;-)\n> No. Consider the following:\n> dr-xr-xr-x  2 root    root    4096 Feb 23 14:51 .\n> drwxr-xr-x  3 root    root    4096 Feb 23 14:36 ..\n> -rw-r--r--  1 root    root       8 Feb 23 14:51 mypic.png\n\nTell me how to edit mypic.png without being root.\n\nFurther, consider the following:\ndr-xr-xr-x  2 nd      nd      4096 Feb 23 14:51 .\ndrwxr-xr-x  3 nd      nd      4096 Feb 23 14:36 ..\n-rw-r--r--  1 nd      nd        19 Feb 23 14:50 required_by_update_index.pm\n-rwxr-xr-x  1 dkelson dkelson   16 Feb 23 14:52 update-index.cgi\n\nReally unwise to disallow that...\n\n> This is hand waving and ignores the problem.\n\nNo, it describes a fact you're permanently ignoring: suexec follows a different\nsecurity model than you. There are reasons for the things suexec does. If\nyou don't like the model or need another one, suexec as distributed simply\nisn't for you and you need to use something else (e.g. a patched suexec or\njust another wrapper). That's it. We won't change the model for you.\n    \nIf it helps you, I personally don't use vanilla suexec either. I'm using a\ndifferent model, so I've adjusted suexec for me *shrug*.", "id": 71451, "attachment_id": null, "creator": "nd@perlig.de", "creation_time": "2005-02-24T06:34:32Z", "time": "2005-02-24T06:34:32Z", "is_private": false}, {"count": 10, "tags": [], "bug_id": 33716, "attachment_id": null, "is_private": false, "id": 71548, "time": "2005-02-25T22:32:37Z", "creator": "dax@gurulabs.com", "creation_time": "2005-02-25T22:32:37Z", "text": "(In reply to comment #9)\n> No, it describes a fact you're permanently ignoring: suexec follows a different\n> security model than you.\n\nWhat I want and what I'm doing is totally irrelevent to the facts.\n\nThe fact is that the documented suexec policy very explicitly lists out the\nchecks that suexec is to perform. The suxec code performs a mostly overlapping\nyet different set of checks. This is undisputable.\n\nThe problem that you are \"permanetly ignoring\" is either:\n\na. The code does not match (1:1, exactly, no more no less) the policy\nb. The documented policy is wrong\n\nI argue that the policy is correct and the problem is \"a\". The supplied patch\nfixes problem \"a\".\n\nIf you think that the problem is \"b\", defend your position. In comment 2 you\nsaid, \"Your patch ... makes the security model even more weak\". In comment 3 I\nasked for details and an example scenario. You ignored this."}, {"count": 11, "tags": [], "creator": "nd@perlig.de", "text": "Huh? I've described a scenario. If you don't want to see this... *shrug*.\n\nSeems, you only want to troll. So I will ignore this report from now on.", "id": 71549, "time": "2005-02-25T22:38:33Z", "bug_id": 33716, "creation_time": "2005-02-25T22:38:33Z", "is_private": false, "attachment_id": null}, {"count": 12, "tags": [], "text": "(In reply to comment #11)\n> Huh? I've described a scenario. If you don't want to see this... *shrug*.\n> \n> Seems, you only want to troll. So I will ignore this report from now on.\n\nPersonal attacks aside, looking back at your comments, the closest thing to a\nscenario you offered is:\n\n\"Your POV. Actually a lot of people use suexec in order to be able to write\ntheir content and not to disturb any other user on the system.\"\n\nThis makes little sense as the patch does not prevent this.\n\nIt removes an ill-conceived \"security\" check (that is not listed in the official\npolicy documentation) that actually prevents more secure deployments (irony).\n\nIf the patch *added* some check then you might have a point.\n\nDid you even look at the patch?", "attachment_id": null, "bug_id": 33716, "id": 71552, "time": "2005-02-25T23:01:57Z", "creator": "dax@gurulabs.com", "creation_time": "2005-02-25T23:01:57Z", "is_private": false}, {"count": 13, "tags": [], "creator": "wrowe@apache.org", "attachment_id": null, "is_private": false, "id": 71554, "time": "2005-02-26T00:32:00Z", "bug_id": 33716, "creation_time": "2005-02-26T00:32:00Z", "text": "The documentation could be clearer, however it's 100% accurate;\n\n#  Is the directory NOT writable by anyone else?\n\n    We don't want to open up the directory to others; only the owner user may be\nable to alter this directories contents. \n\n#  Is the target program NOT writable by anyone else?\n\n    We don't want to give anyone other than the owner the ability to change the\nprogram. \n\nNOW, if we are running as user a group x, and the document is owned by user b\nand group y, then user b or any member of group y can change the permissions,\nmodify the file, etc, and we don't want that to happen.\n\nI'm going to close this bug again, since the documentation is accurate.\n\nNow perhaps you wish it said;\n\n#  Is the directory NOT writable by anyone else, other than root?\n#  Is the target program NOT writable by anyone else, other than root?\n\nor also perhaps\n\n#  Is the directory NOT writable by anyone else, other than \n   a specific, expected list of users?\n#  Is the target program NOT writable by anyone else, other \n   a specific, than the expected list of groups.\n\nIn that case, you likely need to modify your own suexec.c code, and carefully\nconsider the security ramifications of each change.\n"}]