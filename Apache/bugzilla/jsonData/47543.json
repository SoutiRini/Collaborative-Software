[{"count": 0, "tags": [], "creator": "curtis@spss.com", "attachment_id": null, "id": 128916, "time": "2009-07-16T09:44:06Z", "bug_id": 47543, "creation_time": "2009-07-16T09:44:06Z", "is_private": false, "text": "Creating too many HSSFRichTextString cells causes Excel 2003 and lower to crash when changing the color of the cells and then saving the Excel file.\n\nRun the attached Driver program, which creates a file that demonstrates the Excel 2003 errors.\n \n 1. Run the program, then open the resulting file in Excel 2003 or lower.\n 2. Select all cells by clicking on the corner cell\n 3. Press the color toolbar button to change the color of all cells\n 4. Press the save button in Excel and it will crash.\n\nNote: The row and column count is only 10 in the attached example, but if you increse the ROWS and COLS constants to 100 in the makeData()method below, then Excel 2003 will crash after step 3 above.\n\nThis is a critical bug for our product, with very large customers complaining vociferously. We are running POI 3.1 now but I tested this with 3.5 beta and get the same results.\n\nWe often generate large workbooks that contain tables with many footnotes, hence the need for HSSFRichTextString. To work around the HSSFRichTextString problem for other cells, we have been forced to fallback to using the deprecated version of HSSFCell.setCellValue() that takes a plain String instead of the recommended HSSFRichTextString."}, {"count": 1, "tags": [], "creator": "curtis@spss.com", "attachment_id": 23995, "id": 128917, "time": "2009-07-16T09:47:31Z", "bug_id": 47543, "creation_time": "2009-07-16T09:47:31Z", "is_private": false, "text": "Created attachment 23995\nDemonstrates the problem\n\nI thought this was attached with the first submittal, but it didn't seem to take it."}, {"count": 2, "attachment_id": null, "creator": "yegor@dinom.ru", "is_private": false, "id": 128987, "time": "2009-07-19T23:40:27Z", "bug_id": 47543, "creation_time": "2009-07-19T23:40:27Z", "tags": [], "text": "The problem confirmed in current trunk. \n\nChanging font color for a 10x10 grid works fine but crashes Excel for a 100x100 grid. \n\nExcel 2007 has no problems with such 100x100 files, the problem is observed in Excel 2003 and lower. \n\nRegards,\nYegor"}, {"count": 3, "tags": [], "creator": "curtis@spss.com", "attachment_id": null, "id": 128999, "time": "2009-07-20T07:32:13Z", "bug_id": 47543, "creation_time": "2009-07-20T07:32:13Z", "is_private": false, "text": "I would like to note also that in the 10x10 example, Excel 2003 will also crash if one attempts to save the Excel file immediately after changing the cell colors."}, {"count": 4, "tags": [], "creator": "apache@gagravarr.org", "attachment_id": null, "id": 129177, "time": "2009-07-27T08:04:06Z", "bug_id": 47543, "creation_time": "2009-07-27T08:04:06Z", "is_private": false, "text": "Just to check - if you create a file like the one that crashes Excel 2003 using excel itself, does that open fine in excel 2003? (i.e. is it a problem with excel and lots of rich text formatting, or just in how poi writes out the rich text formatting?)\n\nIf it is a poi issue, any chance you could create two files:\n* the smallest file produced by poi with rich text that crashes excel 2003\n* a file with the same contents produced by excel\n\n(If you have time, it'd be great if you could use BiffViewer to try to spot what excel and poi have done differently between these two files)"}, {"count": 5, "tags": [], "text": "Created attachment 24042\nGenerated by the attached test program using POI \n\nThis file was generated by the test program attached to this report. If one follows the steps in the report, Excel will crash when the save button is pressed.", "attachment_id": 24042, "id": 129178, "creation_time": "2009-07-27T09:03:22Z", "time": "2009-07-27T09:03:22Z", "creator": "curtis@spss.com", "bug_id": 47543, "is_private": false}, {"count": 6, "tags": [], "text": "Created attachment 24043\nGenerated manually in Excel - same content as test program\n\nThis file was (painstakingly) created in Excel 2003 by manually editing each cell. It has the same visual content as the file generated by the POI test program, but it doesn't crash Excel 2003 when the cell colors are changed and the file is saved.", "attachment_id": 24043, "id": 129179, "creation_time": "2009-07-27T09:05:19Z", "time": "2009-07-27T09:05:19Z", "creator": "curtis@spss.com", "bug_id": 47543, "is_private": false}, {"count": 7, "tags": [], "text": "Hello, \n\nIn response to your first question:\nNo, this is not a problem with many rich strings in Excel 2003. \n\nSee the two attached Excel documents which contain the same visual information (a 10x10 cell matrix with superscripts on each cell value). The one named test_poi_export.xls was generated using the attached test program. When one highlights all the cells, changes their text color, then presses Save in Excel 2003, Excel 2003 will crash. When one follows the same steps with the second attached Excel workbook (from_excel.xls), the text color changes correctly and pressing the Save button in Excel 2003 does not crash the application.\n\nI attempted to open these files in BiffViewer, but whereas the one created by POI opens fine, the second file (\"from_excel.xls\", created manually in Excel 2003), crashes the BiffViewer application with a general protection fault. I don't care that the one created in Excel 2003 crashes BiffViewer, what we need is for POI to generate a file that does not crash Excel 2003.\n\nRegards,\nCurtis", "attachment_id": null, "id": 129180, "creation_time": "2009-07-27T09:13:57Z", "time": "2009-07-27T09:13:57Z", "creator": "curtis@spss.com", "bug_id": 47543, "is_private": false}, {"count": 8, "tags": [], "creator": "apache@gagravarr.org", "attachment_id": null, "is_private": false, "id": 129203, "time": "2009-07-28T06:32:03Z", "bug_id": 47543, "creation_time": "2009-07-28T06:32:03Z", "text": "Thanks for the info and files Curtis\n\nStep one will be to get BiffViewer to be able to open the excel file without crashing. \n\nOnce we've sorted that, we can then compare the two files at the record level, and see what Excel has done differently about encoding the rich text. \n\nFinally, when we know that, we can make a stab at changing how poi saves large amounts to rich text to closer match excel"}, {"count": 9, "tags": [], "creator": "curtis@spss.com", "attachment_id": null, "id": 129214, "time": "2009-07-28T07:53:30Z", "bug_id": 47543, "creation_time": "2009-07-28T07:53:30Z", "is_private": false, "text": "Thanks Nick,\n\nAre you asking me to track down the reason why the file created in Excel 2003 does not open in BiffViewer, or is that something that you will pursue?\n\nMy guess is that it has something to do with the CONTINUE record in the SST. When I was writing Excel export code in C++ many years ago, I found that there are documentation problems with the way that CONTINUE records are handled by Excel. It took a long time and much effort to figure out what Excel really does when rich text strings are continued in the SST, but we finally got it working correctly.\n\nRegards,\nCurtis"}, {"count": 10, "tags": [], "creator": "yegor@dinom.ru", "attachment_id": null, "is_private": false, "id": 129227, "time": "2009-07-28T22:45:53Z", "bug_id": 47543, "creation_time": "2009-07-28T22:45:53Z", "text": "Guys,\n\nCreating a text .xls file manually is  not a good idea - Excel creates a lot of garbage in this case. I created a simple VBA script that does a job similar to the attached Driver.java. The output is always readable by BiffViewer AND tolerant to changing font colors, no matter how large the grid is - 10x10, 100x100, etc. For all tests produced by the VBA script Excel allows changing the font color. \n\nI compared POI- and VBA- versions and didn't see anything suspicious about CONTINUE records - all looks sane.  \n\nI won't be able to look into it more earlier than this weekend. If anyone wants to track this bug, I suggest the following strategy:\n\n - modify Driver.java and driver.vbs to produce equivalent output\n - for both POI- and VBA- code use a blank template XLS to minimize the differences. \n - start with a small grid, say 5x5. \n - start tweaking POI to produce output as much close to VBA as possible. For testing purposes you may need to temporary modify record classes.\n \nI won't be surprised if the culprit is a record absolutely irrelevant to SST - you never know it with Excel :)\n \nRegards,\nYegor"}, {"count": 11, "attachment_id": 24056, "creator": "yegor@dinom.ru", "is_private": false, "id": 129228, "time": "2009-07-28T22:46:52Z", "bug_id": 47543, "creation_time": "2009-07-28T22:46:52Z", "tags": [], "text": "Created attachment 24056\ndriver.vbs - a VBA script for testing"}, {"count": 12, "tags": [], "creator": "yegor@dinom.ru", "attachment_id": 24057, "id": 129229, "time": "2009-07-28T22:48:05Z", "bug_id": 47543, "creation_time": "2009-07-28T22:48:05Z", "is_private": false, "text": "Created attachment 24057\nvba-100.xls - a 10x10 grid produced by driver.vbs"}, {"count": 13, "tags": [], "bug_id": 47543, "is_private": false, "text": "Quite an interesting bug.\n\nHere is the problem in a nutshell:\n\nFor reach text containing N runs Excel saves font the first run in the cell style and subsequent N-1 runs override the font in the cell style.\n\nCompare two snippets that produce equivalent output:\n\n1. POI approach: \n\n HSSFCell hssfCell = row.createCell(idx);\n //rich text consists of two runs\n HSSFRichTextString richString = new HSSFRichTextString( \"Bug 47543\" );\n richString.applyFont( 0, 4, font1 );\n richString.applyFont( 4, 8, font2 );\n hssfCell.setCellValue( richString );\n\n2. Excel approach\n\n //create a cell style and assign the first font to it\n HSSFCellStyle style = workbook.createCellStyle();\n style.setFont(font1);\n\n HSSFCell hssfCell = row.createCell(idx);\n hssfCell.setCellStyle(style);\n\n //rich text consists of one run overriding the cell style\n HSSFRichTextString richString = new HSSFRichTextString( cellValue );\n richString.applyFont( 4, 8, font2 );\n hssfCell.setCellValue( richString );\n\nIt turns out that the way you create HSSFRichTextString cells is important, (1) results in Excel crash while (2) always seems to work. \n\nSee Driver2 - a version of the attached Driver program that produces valid output readable and modifiable by Excel 2003. \n\ndriver2-10000.xls is a sample output of 100x100 grid.\n\nRegards,\nYegor", "id": 129357, "time": "2009-07-31T12:11:06Z", "creator": "yegor@dinom.ru", "creation_time": "2009-07-31T12:11:06Z", "attachment_id": null}, {"count": 14, "tags": [], "bug_id": 47543, "is_private": false, "text": "Created attachment 24075\nDriver2.java - a version of Driver.java that produces output modifiable by Excel 2003", "id": 129358, "time": "2009-07-31T12:13:03Z", "creator": "yegor@dinom.ru", "creation_time": "2009-07-31T12:13:03Z", "attachment_id": 24075}, {"count": 15, "tags": [], "creator": "yegor@dinom.ru", "attachment_id": 24076, "id": 129359, "time": "2009-07-31T12:13:50Z", "bug_id": 47543, "creation_time": "2009-07-31T12:13:50Z", "is_private": false, "text": "Created attachment 24076\ndriver2-10000.xls - 100x100 grid produced by Driver2.java"}, {"count": 16, "tags": [], "creator": "yegor@dinom.ru", "attachment_id": null, "is_private": false, "id": 129360, "time": "2009-07-31T12:16:34Z", "bug_id": 47543, "creation_time": "2009-07-31T12:16:34Z", "text": "Curtis,\n\nCan you try the suggested workaround and let me know whether it works for you or not. \n\nYegor"}, {"count": 17, "tags": [], "bug_id": 47543, "is_private": false, "text": "Thanks very much Yegor, the suggested change did indeed address the problem. It makes sense also given the way that Excel stores font information for rich strings in the SST. \n\nI would suggest also that the POI documentation on using rich text strings be updated to reflect your findings regarding the correct usage. When I looked back at some of the internet questions and postings related to problems using POI with large numbers of HSSFRichTextString objects, I now suspect that the same issue may be involved.\n\nThanks again for your help, \nCurtis", "id": 129410, "time": "2009-08-03T08:59:17Z", "creator": "curtis@spss.com", "creation_time": "2009-08-03T08:59:17Z", "attachment_id": null}, {"count": 18, "tags": [], "text": "Finally, I updated the javadoc for HSSFRichTextString  to reflect my research on this issue.\n\nYegor", "attachment_id": null, "bug_id": 47543, "id": 130344, "time": "2009-09-13T07:56:46Z", "creator": "yegor@dinom.ru", "creation_time": "2009-09-13T07:56:46Z", "is_private": false}]