[{"count": 0, "tags": [], "bug_id": 55692, "attachment_id": 30955, "id": 170759, "time": "2013-10-23T02:21:53Z", "creator": "bearbalu@hotmail.com", "creation_time": "2013-10-23T02:21:53Z", "is_private": false, "text": "Created attachment 30955\nThis is the xlsx that crashes\n\nI have an xlsx file which I can open perfectly fine using Excel 2010. However, POI crashes with the following message. If I open the file and re-save it, the crash goes away. See the attached xlsx file. Interestingly, HSSF (not XSSF) is invoked by the WorkbookFactory. \n\nAdditional clues to reproducing the issue: \n\n1. Started with an xls file -> NO crash -> I can e-mail this to someone -> 1.7 MB, can't upload it, and can't upload multiple attachments. \n2. I saved it once as xls (no content changed) -> NO crash\n3. I \"Save As\" xlsx (no content changed)-> CRASHES(attached) \n4. If I open the xlsx and save it again (no content changes) -> NO crash.\n\nIf I skip step 2, the crash does NOT happen. \n\n\n==========================================================================\n\njava.lang.IllegalArgumentException: The supplied POIFSFileSystem does not contain a BIFF8 'Workbook' entry. Is it really an excel file?\n\tat org.apache.poi.hssf.usermodel.HSSFWorkbook.getWorkbookDirEntryName(HSSFWorkbook.java:222)\n\tat org.apache.poi.hssf.usermodel.HSSFWorkbook.<init>(HSSFWorkbook.java:263)\n\tat org.apache.poi.hssf.usermodel.HSSFWorkbook.<init>(HSSFWorkbook.java:243)\n\tat org.apache.poi.hssf.usermodel.HSSFWorkbook.<init>(HSSFWorkbook.java:187)\n\tat org.apache.poi.hssf.usermodel.HSSFWorkbook.<init>(HSSFWorkbook.java:322)\n\tat org.apache.poi.hssf.usermodel.HSSFWorkbook.<init>(HSSFWorkbook.java:303)\n\tat org.apache.poi.ss.usermodel.WorkbookFactory.create(WorkbookFactory.java:70)"}, {"count": 1, "tags": [], "bug_id": 55692, "text": "Your file looks to be a password protected xlsx file, which somewhat confusingly get stored within an OLE2 structure (I'm sure Microsoft had their reasons....)\n\nSee http://poi.apache.org/encryption.html for how to read them\n\nIn r1534967 I've added a more helpful error message from HSSF if you give it an encrypted .xlsx file by mistake", "id": 170762, "time": "2013-10-23T09:44:41Z", "creator": "apache@gagravarr.org", "creation_time": "2013-10-23T09:44:41Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 55692, "text": "Created attachment 31452\nThis Excel crashes too....", "id": 174152, "time": "2014-03-27T22:14:18Z", "creator": "bearbalu@hotmail.com", "creation_time": "2014-03-27T22:14:18Z", "is_private": false, "attachment_id": 31452}, {"count": 3, "tags": [], "bug_id": 55692, "text": "As per the original issue when I call,  workbook = WorkbookFactory.create(fileInputStream), I get the exception java.lang.IllegalArgumentException: The supplied\nPOIFSFileSystem does not contain a BIFF8 'Workbook' entry. Is it really an excel\n file?. \n\nSo I was able to use the following code in most cases to get to the underlying excel.\n\nNPOIFSFileSystem fs =  new NPOIFSFileSystem(stream);\nEncryptionInfo info = new EncryptionInfo(fs);\nDecryptor d = Decryptor.getInstance(info);\nString password = Decryptor.DEFAULT_PASSWORD;\nInputStream fInputStream = getEncryptedFileInputStream(xlsFile,errorMessages);\nif (fInputStream != null) { \n    Workbook workbook = WorkbookFactory.create(fInputStream);\n    fInputStream.close(); \n    return workbook; \n}\n    \nHowever, when I do this for the attached excel file, it crashes in EncryptionInfo with the Exception org.apache.poi.EncryptedDocumentException: Unsupported hash algorithm. So I am not even sure if this an encrypted file.\n\nIf I open the Excel and just re-save it, WorkbookFactory.create(fileInputStream) works fine.", "id": 174154, "time": "2014-03-27T22:16:09Z", "creator": "bearbalu@hotmail.com", "creation_time": "2014-03-27T22:16:09Z", "is_private": false, "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 55692, "is_private": false, "count": 4, "id": 174155, "time": "2014-03-27T22:43:21Z", "creator": "apache@gagravarr.org", "creation_time": "2014-03-27T22:43:21Z", "text": "Attachment 31452 is not a regular .xls file. It appears to be a password protected .xlsx file, which must be opened as per http://poi.apache.org/encryption.html#XML-based+formats+-+Decryption (along with the password of course!)\n\nAlso, don't forget that Apache Tika is very good at working out what files are, if you ask Apache Tika to detect the file with no file extension, it correctly identifies the type as application/x-tika-ooxml-protected\n\nAs for hash alg problems, either try with the latest trunk, or raise a new bug if you really have got a file that uses a format we don't support"}]