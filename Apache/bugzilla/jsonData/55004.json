[{"count": 0, "tags": [], "bug_id": 55004, "text": "Right now if Rivet's configured with an AfterEveryScript and that script does an abort_page, it is treated as an error and it writes an emergency \"<b>Rivet AfterEveryScript failed!</b>\" and logs a traceback.\n\nThe check is performed near the end of Rivet_ExecuteAndCheck in mod_rivet.c\n\nBefore emitting the message an inquiry of Tcl's errorCode variable (or whatever C-level mechanism is available) to see if the source of the error is abort_page and in that case the error message should not be issued.", "id": 167350, "time": "2013-05-22T10:46:11Z", "creator": "karllehenbauer@gmail.com", "creation_time": "2013-05-22T10:46:11Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 55004, "text": "Since filing this I have been wondering if it is reasonable to invoke abort_page in an AfterEveryScript handler.  If we stopped doing that, we'd stop getting the error, with no changes to Rivet.\n\nIf Rivet is to be modified to accept abort_page as not an error in an AfterEveryScript, then there's code earlier in Rivet_ExecuteAndCheck that does exactly that.\n\nIt's complicated enough, though, that it should probably be factored into a routine that returns a 1/0 as to whether or not the Tcl error is RIVET ABORTPAGE.", "id": 167353, "time": "2013-05-22T11:00:03Z", "creator": "karllehenbauer@gmail.com", "creation_time": "2013-05-22T11:00:03Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 55004, "attachment_id": null, "text": "Yes, abort_page was meant to interrupt execution in any scripts before AbortScript (the abort handler) and eventualy AfterEveryScript (also AfterScript can be interrupted by abort_page IIRC). Having abort_page interrupt the execution flow after AbortPage doesn't fit the design because AfterEveryScript was meant to run as very last execution segment. \n\nAs to the routine returning a boolean condition I'm not sure if the current way abort_page works can help. from http://tcl.apache.org/rivet/manual2.1/abort_page.html \n\nSynopsis: ::rivet::abort_page (abort code | -aborting)\n\n....\n\nThe argument -aborting causes abort_page to return 1 when the current execution is the outcome of an abort condition. In other words this query is meaningful in code specified as AfterEveryScript to understand if an abort condition took place beforehand.", "id": 167363, "time": "2013-05-22T20:37:06Z", "creator": "mxmanghi@apache.org", "creation_time": "2013-05-22T20:37:06Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 55004, "attachment_id": null, "text": "For sake of completeness also ErrorScript is uneffective to catch an error that might occur in AfterEveryScript (with either ABORTPAGE or any other error code). AfterEveryScript is actually the very last script that runs in a request processing", "id": 167365, "time": "2013-05-22T20:58:52Z", "creator": "mxmanghi@apache.org", "creation_time": "2013-05-22T20:58:52Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 55004, "attachment_id": null, "text": "continuing on the ranting about abort_page, AfterEveryScript and ErrorScript. In case AfterEveryScript fails because of a Tcl error there is no way to catch this error which probably results in the usual backtrace being printed on the browser window and no chance to prevent it. Therefore execution of AfterEveryScript should likewise trigger ErrorScript in case of uncaught errors, opening the question of having abort_page disabled during AfterEveryScript execution or not. If abort_page is not disabled also AbortScript should be in case executed, making the whole request processing slightly more expensive. Karl, what do you think?", "id": 167402, "time": "2013-05-24T17:45:11Z", "creator": "mxmanghi@apache.org", "creation_time": "2013-05-24T17:45:11Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 55004, "text": "Created attachment 30521\nsorry, wrong bug", "id": 168220, "time": "2013-07-02T08:40:06Z", "creator": "harald.oehlmann@elmicron.de", "creation_time": "2013-07-02T08:40:06Z", "is_private": false, "attachment_id": 30521}, {"count": 6, "tags": [], "creator": "mxmanghi@apache.org", "attachment_id": null, "id": 186964, "time": "2015-12-15T14:48:45Z", "bug_id": 55004, "creation_time": "2015-12-15T14:48:45Z", "is_private": false, "text": "fixed in 2.2.3"}]