[{"count": 0, "attachment_id": null, "creator": "glenn@apache.org", "text": "When we upgraded to Apache 2.0 we found that a javascript one of our customers\nuses can cause a big problem.  The javascript would cause the remote browser to\ngo into an infinite loop reloading the same page. This is especially nasty if\nthe page being reloaded is a CGI script or a request which is processed by an\napplicaiton server like Tomcat. We have contacted our customer and had them\nremove the nasty javascript.\n\nWith Apache 1.3 this same javascript did not seem to trigger this problem.\n\nApache 2.0 seems less robust in handling this type of problem than Apache 1.3.\n\nHere is a copy of the javascript in case you are interested.  It triggered\nthis problem primarily in IE 5.5 and 6.0.\n\nfunction MM_reloadPage(init) {  //reloads the window if Nav4 resized\n  if (init==true) with (navigator) {\n     if ((appName==\"Netscape\")&&(parseInt(appVersion)==4)) {\n         document.MM_pgW=innerWidth; document.MM_pgH=innerHeight;\n         onresize=MM_reloadPage;\n     }\n  }\n  else if (innerWidth!=document.MM_pgW || innerHeight!=document.MM_pgH) \n     location.reload();\n}\nMM_reloadPage(true);", "id": 32866, "time": "2003-03-10T16:17:28Z", "bug_id": 17832, "creation_time": "2003-03-10T16:17:28Z", "tags": [], "is_private": false}, {"count": 1, "tags": [], "bug_id": 17832, "text": "Huh?\n\nWhere is the webserver-problem?\n\nThat such scripts can produce endless loops is a browser issue not a webserver one.\nBtw: I'd guess document.MM_pgW will not be set in IE<anyversion> so the endless\nloop is quite logical ...\n\nSorry, can't see a bug with the webserver here.", "id": 32869, "time": "2003-03-10T16:37:18Z", "creator": "nd@perlig.de", "creation_time": "2003-03-10T16:37:18Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 17832, "attachment_id": null, "id": 32871, "time": "2003-03-10T18:05:43Z", "creator": "glenn@apache.org", "creation_time": "2003-03-10T18:05:43Z", "is_private": false, "text": "I agree the root cause of the problem is the evil nasty javascript.\n\nMy point is that Apache 1.3 is much more robust in handling the problem\ncaused by this evil nasty javascript than Apache 2.0.\n\nI rarely if ever saw the cascading infinite loop of requests with Apache 1.3,\nbut I do see them with Apache 2.0.44."}, {"count": 3, "tags": [], "bug_id": 17832, "attachment_id": null, "id": 32872, "time": "2003-03-10T18:12:39Z", "creator": "ianh@apache.org", "creation_time": "2003-03-10T18:12:39Z", "is_private": false, "text": "Hi Glenn,\nare you trying to say that apache2 crashes when the buggy javascript runs, or is\nit consuming more system resources as it is spawning more processes for the CGI?"}, {"count": 4, "tags": [], "bug_id": 17832, "attachment_id": null, "text": "Apache 2.0 hasn't crashed yet due to this bug.  In our case the page which\nwas using the nasty evil javascript was in a JSP page which Apache forwards\nto Tomcat using mod_jk 1.2. This problem occurred frequently and many times\na client would spew 3-4 requests for the same page per second. This could\ncontinue for many seconds spawning hundreds of requests to Tomcat for the JSP.\nIt is like a mini DOS attack. And sometimes would starve Tomcat for resources.", "id": 32873, "time": "2003-03-10T19:25:16Z", "creator": "glenn@apache.org", "creation_time": "2003-03-10T19:25:16Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 17832, "attachment_id": null, "id": 32901, "time": "2003-03-11T00:16:44Z", "creator": "nd@perlig.de", "creation_time": "2003-03-11T00:16:44Z", "is_private": false, "text": "Hmm. Actually I believe it's a bug in 1.3 then *g*\n\nSorry, it's all a bit vague. We need to specify the actual problem in order to\nfix it. I'm stuck a bit at this point.\n\nAre you _sure_ that nothing else changed than the httpd version?"}, {"count": 6, "tags": [], "bug_id": 17832, "text": "I checked all of the content which triggers this problem, the content had not\nchanged in quite a while.\n\nYes, this is vague.  We setup a test server to try and reproduce the problem,\nbut have not been able to reproduce it yet. :-(\n\nI filed the bug report to see if any of the core httpd developers familiar with\nboth the 1.3 and 2.0 codebase might have an idea what the difference is \nbetween 1.3 and 2.0 which causes this.\n\nIt may or may not be a bug.  There is no real way to know until it can be\nreproduced and the network snooped to track down what is different between\nthe two.\n\n\n\n", "id": 32956, "time": "2003-03-11T14:58:33Z", "creator": "glenn@apache.org", "creation_time": "2003-03-11T14:58:33Z", "is_private": false, "attachment_id": null}, {"count": 7, "tags": [], "bug_id": 17832, "text": "The customer ended up leaving in production a 'fixed' version of the\npage reload javascript.  I am still seeing the mini DOS flood this\nscript can create a few times a day.  Argh!\n\nI just found it interesting how the Apache 1.3 and 2.0 behaviour differed.\nThought it might be something you would want to look into.\n\nFor a long term solution I am looking at porting the mod_dosevasive\nApache 1.3 module to Apache 2.0.\n\nhttp://www.networkdweebs.com/stuff/security.html", "id": 33257, "time": "2003-03-16T15:49:30Z", "creator": "glenn@apache.org", "creation_time": "2003-03-16T15:49:30Z", "is_private": false, "attachment_id": null}, {"count": 8, "tags": [], "text": "I'm still confused.\nCan you describe, how 1.3 and 2.0 differ in behaviour when DoSed via an endless\nJS loop? I've still the simple problem to recognize, what the \"thing\" is that\nyou're calling a bug.\nI believe, there must be something else what has changed (e.g. the script).", "attachment_id": null, "id": 33390, "creation_time": "2003-03-19T00:54:56Z", "time": "2003-03-19T00:54:56Z", "creator": "nd@perlig.de", "bug_id": 17832, "is_private": false}, {"count": 9, "attachment_id": null, "creator": "glenn@apache.org", "text": "With Apache 2.0.44 I saw a flood of requests from the same IP, 2-4 requests\nper second, for a period of 30 - 90 seconds.  This was noticed when the request\nis for a JSP page handled by mod_jk and forwarded to Tomcat for processing.\nThis problem is not seen when running Apache 1.3.\n\nI verified that the javascript had not changed by checking the last modified\ntime of the file and I also verified this with the customer.\n\nSince the javascript had not changed remote client browsers would be exhibiting\nthe same infinite loop reload behaviour regardless of whether Apache 1.3 or\nApache 2 served the original request.\n\nIt also looks like the remote browser closes the socket for the previous request\nwhen it makes the next request during the infinite loop.\n\nI suspect that Apache 1.3 was detecting that the remote client aborted its\nrequest prior to passing the request on to the mod_jk handler.  And that\nApache 2.0 is not detecting that the remote client aborted the request before\npassing the request to the mod_jk handler.\n\nI have no proof of what causes this, but I have a suspicion that it is\nrelated to timing.\n\nApache 2 can pass the request off to mod_jk in a much shorter time after the\nrequest was initiated than Apache 1.3.  This could be due to switching from\nthe Apache 1.3 prefork model to the worker process/thread model in Apache 2.\nBy avoiding the overhead of forking a process the time it takes to pass\nthe request to mod_jk is much shorter, therefore it is less likely to\ndetect that the remote client has aborted the request before passing it\nto mod_jk.\n\n\n\n\n\n\n\n", "id": 33453, "time": "2003-03-19T15:05:53Z", "bug_id": 17832, "creation_time": "2003-03-19T15:05:53Z", "tags": [], "is_private": false}, {"count": 10, "tags": [], "creator": "glenn@apache.org", "attachment_id": null, "id": 33455, "time": "2003-03-19T15:17:48Z", "bug_id": 17832, "creation_time": "2003-03-19T15:17:48Z", "is_private": false, "text": "Let me retract that last bit about prefork vs worker.  That doesn't apply\ndue to Apache 1.3 processes handling up to MaxChildRequests.\n\nI still suspect its a timing issue due to Apache 2 passing the request off\nto mod_jk in a much shorter time before the abort of the request by the\nremote client is detected."}, {"count": 11, "tags": [], "bug_id": 17832, "attachment_id": null, "id": 63641, "time": "2004-09-15T22:29:18Z", "creator": "nd@perlig.de", "creation_time": "2004-09-15T22:29:18Z", "is_private": false, "text": "afaik mod_jk2 hooks way earlier, so the timing issue may be true. But this\npoints to mod_jk not being able to handle the load."}]