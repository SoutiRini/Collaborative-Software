[{"count": 0, "tags": [], "bug_id": 10617, "attachment_id": null, "text": "This happens when a filtered URL returns a Location: redirect (the example I\nlooked at was the Zope management console) - the bucket-brigade for the\n(non-existant) body is forwarded to the external filter, but no content_type is\nset (and there is no content). You obviously don't want to filter a content-less\nbody. The following is a patch to mod_ext_filter.c that fixes the problem:\n\n*** mod_ext_filter.c    Tue Jul  9 18:01:47 2002\n--- mod_ext_filter.c_orig       Tue Jul  9 17:57:05 2002\n***************\n*** 491,499 ****\n          return APR_EINVAL;\n      }\n      ctx->p = f->r->pool;\n!     if ((f->r->content_type == NULL) ||\n!       (ctx->filter->intype && ctx->filter->intype != INTYPE_ALL &&\n!         strcasecmp(ctx->filter->intype, f->r->content_type))) {\n          /* wrong IMT for us; don't mess with the output */\n          ctx->noop = 1;\n      }\n--- 491,499 ----\n          return APR_EINVAL;\n      }\n      ctx->p = f->r->pool;\n!     if (ctx->filter->intype &&\n!         ctx->filter->intype != INTYPE_ALL &&\n!         strcasecmp(ctx->filter->intype, f->r->content_type)) {\n          /* wrong IMT for us; don't mess with the output */\n          ctx->noop = 1;\n      }", "id": 19210, "time": "2002-07-09T22:20:39Z", "creator": "apsmith@aps.org", "creation_time": "2002-07-09T22:20:39Z", "is_private": false}, {"count": 1, "tags": [], "text": "Note this was for a location also serviced by mod_proxy - I haven't tried it for\nCGI or other ways you could get a Location: directive returned, so it could be\nreally a problem in mod_proxy. I'd suspect mod_ext_filter though first.", "attachment_id": null, "id": 19211, "creator": "apsmith@aps.org", "time": "2002-07-09T22:27:56Z", "bug_id": 10617, "creation_time": "2002-07-09T22:27:56Z", "is_private": false}, {"count": 2, "tags": [], "creator": "trawick@apache.org", "text": "mod_ext_filter definitely needs to watch out for NULL content_type.\nAt the very least, the if statement should be changed to:\n\n     if (ctx->filter->intype &&\n         ctx->filter->intype != INTYPE_ALL &&\n         (!f->r->content_type ||\n          strcasecmp(ctx->filter->intype, f->r->content_type))) {\n\nSo if the user specifies a certain content_type to process we'll make\ncertain that there is a content_type associated with the response.\nI do not know whether or not a NULL content_type always implies that there \nis no actual response body.  I doubt that it is true in general.  \n\nmod_ext_filter should already handle an empty response okay (or that is another \nbug :) ), so the fix above should be sufficient for your problem and\nwe don't worry about whether or not there is a response body to filter.\n", "id": 19226, "time": "2002-07-10T01:23:36Z", "bug_id": 10617, "creation_time": "2002-07-10T01:23:36Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 10617, "attachment_id": null, "id": 19228, "time": "2002-07-10T01:47:03Z", "creator": "apsmith@aps.org", "creation_time": "2002-07-10T01:47:03Z", "is_private": false, "text": "Good point - your fix is definitely the right one. Thanks!"}, {"count": 4, "tags": [], "text": "The fix has been committed and will be in the next release of Apache.\n\nThanks for your report/patch, and thanks for using Apache!\n", "attachment_id": null, "id": 19251, "creator": "trawick@apache.org", "time": "2002-07-10T11:59:47Z", "bug_id": 10617, "creation_time": "2002-07-10T11:59:47Z", "is_private": false}]