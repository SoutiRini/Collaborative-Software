[{"attachment_id": null, "tags": [], "creator": "reinhard.nissl@fee.de", "text": "After upgrading from openSUSE 12.1 (apache2-2.2.21) to openSUSE 13.2 (apache2-2.4.10), piped logging for ErrorLog is no longer reliable. I. e., killing the program for log rotation doesn't start a new instance.\n\nPiped logging is still reliable for CustomLog though. From looking at the source, CustomLog uses a totally different code than ErrorLog, but only CustomLog implements \"reliability\".\n\nI've verified this behavior for 2.4.12 too.\n\nSteps to reproduce this issue:\n- replace in httpd.conf\nErrorLog /var/log/apache2/error_log\nby\nErrorLog \"|$cat >>/var/log/apache2/error_log\"\n- restart apache2\n- kill the cat process\n- no new instance of cat will be created", "count": 0, "id": 181996, "time": "2015-03-23T12:47:13Z", "bug_id": 57742, "creation_time": "2015-03-23T12:47:13Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 57742, "attachment_id": null, "id": 181998, "time": "2015-03-23T12:58:21Z", "creator": "covener@gmail.com", "creation_time": "2015-03-23T12:58:21Z", "is_private": false, "text": "Does seem to be broken in 2.4.x HEAD as well"}, {"count": 2, "tags": [], "bug_id": 57742, "text": "AFAICT it didn't work in 2.2.21 either. Perhaps SUSE was patching 2.2.x and thought it was no longer needed when they moved to 2.4.  Does opensuse make the patches obvious in some kind of srpm?", "id": 182003, "time": "2015-03-23T16:44:26Z", "creator": "covener@gmail.com", "creation_time": "2015-03-23T16:44:26Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 57742, "attachment_id": null, "id": 182006, "time": "2015-03-23T17:15:09Z", "creator": "reinhard.nissl@fee.de", "creation_time": "2015-03-23T17:15:09Z", "is_private": false, "text": "This is the source rpm of the version which was running on the old machine:\n\nhttp://ftp.uni-paderborn.de/pub/linux/opensuse/update/12.1/src/apache2-2.2.21-3.13.1.src.rpm\n\nAt first glance, I didn't see anything obvious in it.\n\nI just had a look for /var/log/apache2/error_log* on the old machine and it seems it didn't work there either. I only find some files for days, when apache2 was restarted.\n\nAnyway, this is not what \"reliable\" is expected for."}, {"count": 4, "tags": [], "creator": "Chaosed0@gmail.com", "attachment_id": 32604, "text": "Created attachment 32604\nEnable reliable piped logging for virtualhost error logs\n\nIt looks like there was never reliable piped logging for ErrorLog. A quick grep through the patches in the RPM shows no changes to the logging, so it's likely that it never worked.\n\nIt looks pretty easy to add reliable logging for virtualhost error logs, but there's an issue with the main error log that makes it harder. The issue requires some understanding of PR40651; the code change made there requires the main error log to be opened using log_child(), which is the function made for unreliable logging.\n\nA few options we have:\n - Ignore PR40651 and use ap_open_piped_log() for the main error log. Probably low impact, since we don't use /bin/sh by default to fork anymore.\n - Make reliable logging available for virtualhost error logs, but not for the main error log, and doc this fact.\n - Copy/paste log_child() and add the one function call (apr_proc_other_child_register()) to restart the process when it goes down.\n\nI had some trouble when trying the first option - the main error log seemed not to want to restart, and I'm still not sure why. The attached patch takes the second route, which isn't ideal, but it should hopefully get some discussion going.", "id": 182063, "time": "2015-03-24T15:24:39Z", "bug_id": 57742, "creation_time": "2015-03-24T15:24:39Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 57742, "text": "Created attachment 32627\nEnable reliable piped logging for error logs\n\nHere's a patch that enables reliable piped logging on both the main and virtualhost error logs. It seems to work fine on some simple tests.\n\nThe patch is a little more complicated than anticipated; it wasn't enough to simply attach the maintenance function to the main error logging program. Here's a description of the problem I was running into, for any reviewers: for the main error log, we close the fd originally intended to be used as the writing end of the pipe to rotatelogs, and use stderr instead. However, when rotatelogs goes down, we try to re-use the original fd as the descriptor for the pipe to the new rotatelogs process, which fails since the descriptor's been closed. I got around this by stashing away the stderr descriptor instead of the original fd, and then making sure that it doesn't get cleaned up.\n\nI also introduced an ap_open_piped_log_helper() function to pass dummy_stderr down, so we can still avoid the problem described in PR40651.", "id": 182218, "time": "2015-04-01T17:44:24Z", "creator": "Chaosed0@gmail.com", "creation_time": "2015-04-01T17:44:24Z", "is_private": false, "attachment_id": 32627}]