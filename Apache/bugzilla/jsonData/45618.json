[{"count": 0, "tags": [], "text": "In the class ParallelNioSender [1], a Selector (selector) is declared as a field. In line 60, it is opened (selector = Selector.open()). However, it is not closed in any situations. As shown by its Javadoc [2], it has a close() method, and this method should be called to close the selector.\n\n\n[1]http://www.google.com/codesearch?hl=en&q=lang:java+open+java.nio.channels.Selector+show:hsMlF-2s6UU:ZSXpd2XI4bI:dK-_LkuTzG4&sa=N&ct=rx&cd=4&cs_p=http://archive.apache.org/dist/tomcat/tomcat-6/v6.0.0/src/apache-tomcat-6.0.0-src.tar.gz&cs_f=apache-tomcat-6.0.0-src/java/org/apache/catalina/tribes/transport/nio/ParallelNioSender.java&cs_p=http://archive.apache.org/dist/tomcat/tomcat-6/v6.0.0/src/apache-tomcat-6.0.0-src.tar.gz&cs_f=apache-tomcat-6.0.0-src/java/org/apache/catalina/tribes/transport/nio/ParallelNioSender.java\n\n[2]http://java.sun.com/j2se/1.5.0/docs/api/java/nio/channels/Selector.html", "is_private": false, "id": 119698, "creator": "ackel@sohu.com", "time": "2008-08-11T22:45:15Z", "bug_id": 45618, "creation_time": "2008-08-11T22:45:15Z", "attachment_id": null}, {"count": 1, "tags": [], "text": "Have you observed a memory leak associated with these objects? If so, in what circumstances?", "is_private": false, "id": 119713, "creator": "markt@apache.org", "time": "2008-08-12T07:01:06Z", "bug_id": 45618, "creation_time": "2008-08-12T07:01:06Z", "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 45618, "attachment_id": null, "id": 119808, "time": "2008-08-13T18:17:39Z", "creator": "ackel@sohu.com", "creation_time": "2008-08-13T18:17:39Z", "is_private": false, "text": "(In reply to comment #1)\n> Have you observed a memory leak associated with these objects? If so, in what\n> circumstances?\n\nActually, I am a PhD student in Computer Science and I am conducting an experiment on automatically detecting bugs. As my approach detected the bug statically, I cannot provide in what circumstances it will cause memory leak. \nStill, I will be quite happy if my tool really finds some useful results for you."}, {"count": 3, "tags": [], "bug_id": 45618, "attachment_id": null, "id": 119813, "creation_time": "2008-08-14T01:29:21Z", "time": "2008-08-14T01:29:21Z", "creator": "markt@apache.org", "text": "Given how the selector is used, I can't see this causing a problem.\n\nIt is my experience that automated tools tend to produce a lot of false positives. Any automated analysis of the Tomcat code base is welcome but there is a risk that a large amount of effort is expended investigating potential issues that turn out not to be bugs.\n\nThe best way to avoid this is to filter issues before reporting them. Ideally, a bug report should contain a test case that demonstrates the issue, eg memory leak. If that isn't possible, then an explanation of how the issue may occur.\n\nAs I stated above, I can't see how this could cause an issue so I am closing it as invalid. If you believe this to be incorrect, please re-open this report with an explanation of how not closing the selector leads to problems.", "is_private": false}, {"count": 4, "tags": [], "text": "Please take a look at a confirmed bug in JDK 1.5 [1]. This bug is caused by not explicitly closing a selector. I copy some descriptions from the bug report as follows.\n\n\"However, when SocketAdaptor is done with the temporarily created selector, it never explicitly calls selector.close(), which causes the Pipe-related sockets to be orphaned and left in an ESTABLISHED state until process death.  Over time, this exhausts the number of available sockets and degrades both application and operating system performance. Pipe-related sockets are only cleaned up when the owning process is killed.\"\n\nI agree that automatic tools can produce some false positives. As you suggested, I do not report all the violations but report those violations that make sense in my opinion.\n\nI am sorry that my tool cannot provide in what situation a bug will cause problem as my tool relies on static analysis. Still, I believe that you should take the report into careful considerations because as you can see, not closing a selector has already cause some problems in JDK 1.5 and they do take efforts to fix the problems.\n\n\n[1] http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=5083450\n", "attachment_id": null, "id": 119847, "creator": "ackel@sohu.com", "time": "2008-08-14T18:48:32Z", "bug_id": 45618, "creation_time": "2008-08-14T18:48:32Z", "is_private": false}, {"count": 5, "tags": [], "text": "I still can't see this causing an issue in any real world deployment. You would have to go out of your way to create the circumstances where this bug would occur. I came close to closing this as INVALID again for this reason.\n\nHowever, there is - technically - a bug here so it has been fixed in trunk and proposed for 6.0.x.", "is_private": false, "id": 120298, "creator": "markt@apache.org", "time": "2008-09-02T14:46:37Z", "bug_id": 45618, "creation_time": "2008-09-02T14:46:37Z", "attachment_id": null}, {"count": 6, "attachment_id": null, "creator": "markt@apache.org", "text": "The fix has been applied to 6.0.x and will be included in 6.0.19 onwards.", "id": 121342, "time": "2008-10-09T05:37:12Z", "bug_id": 45618, "creation_time": "2008-10-09T05:37:12Z", "tags": [], "is_private": false}]