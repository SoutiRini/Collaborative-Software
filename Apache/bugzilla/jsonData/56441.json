[{"count": 0, "tags": [], "creator": "matty_riddle@hotmail.com", "text": "An invalid regex in the allow parameter leads to raising of a misleading exception: The property \"allow\" is not defined for filters of type \"org.apache.catalina.filters.RemoteAddrFilter\".\n\n\nTest config in web.xml\n\n  <filter>\n     <filter-name>TestFilter</filter-name>\n     <filter-class>org.apache.catalina.filters.RemoteAddrFilter</filter-class>\n     <init-param>\n        <param-name>allow</param-name>\n        <param-value>127\\.0\\.\\0.1</param-value>\n     </init-param>\n  </filter>\n\n  <filter-mapping>\n     <filter-name>TestFilter</filter-name> \n     <url-pattern>*</url-pattern> \n  </filter-mapping>\n\n\nApr 22, 2014 3:50:10 PM org.apache.catalina.core.StandardContext filterStart\nSEVERE: Exception starting filter TestFilter\njavax.servlet.ServletException: The property \"allow\" is not defined for filters of type \"org.apache.catalina.filters.RemoteAddrFilter\"\n        at org.apache.catalina.filters.FilterBase.init(FilterBase.java:53)\n        at org.apache.catalina.core.ApplicationFilterConfig.initFilter(ApplicationFilterConfig.java:269)\n        at org.apache.catalina.core.ApplicationFilterConfig.getFilter(ApplicationFilterConfig.java:258)\n        at org.apache.catalina.core.ApplicationFilterConfig.setFilterDef(ApplicationFilterConfig.java:382)\n        at org.apache.catalina.core.ApplicationFilterConfig.<init>(ApplicationFilterConfig.java:103)\n        at org.apache.catalina.core.StandardContext.filterStart(StandardContext.java:4650)\n        at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5306)\n        at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)\n        at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1559)\n        at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1549)\n        at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334)\n        at java.util.concurrent.FutureTask.run(FutureTask.java:166)\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110)\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)\n        at java.lang.Thread.run(Thread.java:722)", "id": 174757, "attachment_id": null, "bug_id": 56441, "creation_time": "2014-04-22T07:05:33Z", "time": "2014-04-22T07:05:33Z", "is_private": false}, {"count": 1, "attachment_id": null, "bug_id": 56441, "is_private": false, "id": 174777, "time": "2014-04-22T19:41:02Z", "creator": "chris@christopherschultz.net", "creation_time": "2014-04-22T19:41:02Z", "tags": [], "text": "Confirmed.\n\nIt seems that IntrospectionUtils.setProperty catches things like InvocationTargetException and logs them at the DEBUG level. I assert that such things should be logged at the WARN level.\n\nWithout DEBUG logging enabled, a user cannot see the underlying error."}, {"count": 2, "tags": [], "bug_id": 56441, "attachment_id": null, "text": "I looked into changing the current error message to better describe the problem and to mention enabling debug logs for more detail. The issue with that approach is there are a lot of 'normal' debug logs and a single error.\n\nLogging these errors as warnings seems appropriate to me.\n\nI have fixed this in 8.0.x for 8.0.6 onwards and in 7.0.x for 7.0.54 onwards.", "id": 174895, "time": "2014-04-26T19:33:56Z", "creator": "markt@apache.org", "creation_time": "2014-04-26T19:33:56Z", "is_private": false}]