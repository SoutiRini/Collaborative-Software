[{"count": 0, "tags": [], "bug_id": 40184, "text": "Why: \n  The property task currently does resolve and expand\n  the properties read from a property file \n  (with <property file=\"...\"/>) in an unsynchronised way,\n  both accessing the Project and PropertyHelper interfaces.\n  In a multithreaded situation this could lead to\n  unexpected results. It would also be better to have all\n  property handling code in the property helper.\n\nProposed solution:\n  The handling of the properties is naturally moved from the\n  Property task to the PropertyHelper. This allows easier \n  synchronisation and possibly code reuse. It also lets\n  custom property helpers reimplement the exposed methods.\n\nStefano Marsili", "id": 91884, "time": "2006-08-04T05:32:00Z", "creator": "efanomars@yahoo.com", "creation_time": "2006-08-04T05:32:00Z", "is_private": false, "attachment_id": null}, {"attachment_id": 18677, "tags": [], "bug_id": 40184, "is_private": false, "count": 1, "id": 91885, "time": "2006-08-04T05:38:04Z", "creator": "efanomars@yahoo.com", "creation_time": "2006-08-04T05:38:04Z", "text": "Created attachment 18677\nModified Property, PropertyHelper\n\n** Sources **\nPropertyHelper.java:\n - added public setNewInheritedProperty(ns, n, v)\n   like setNewProperty, adds a user property only if \n   there isn't one already defined\n - added addNewProperties(ns, props, prefix)\n   resolves, expands, prefixes and adds a set of properties \n - added addNewInheritedProperties(ns, props, prefix)\n   resolves, expands, prefixes and adds a set of user properties \n\nProperty.java:\n - removed resolveAllProperties(props), now in PropertyHelper\n - modified addProperties and addProperty to call the \n   corresponding PropertyHelper methods\n\n** Tests **\nNo additional testcases added.\n\n** Note **\nModified and patched against latest 1.70alpha.\n\nI did this patch a bit quickly. Probably everything \n(interface, comments, implementation) can be improved.\nMaybe the public methods added to the PropertyHelper \nshould also be added to the Project (and called from \nthe Property task)?\n(I also noticed that replaceProperties is not synchronized,\nI'm not sure but maybe properties could be set while \nreplacing, leading to inconsistent results (not in the patch).)\n\nStefano Marsili"}, {"count": 2, "tags": [], "bug_id": 40184, "attachment_id": null, "text": "I realised that also MacroInstance's expansion of attributes \n(macrodef task) could be moved to the PropertyHelper so that\nall evaluation of expressions is centralized (and may also be\nreimplemented).\n\nThank you\nStefano Marsili", "id": 92181, "time": "2006-08-14T06:29:13Z", "creator": "efanomars@yahoo.com", "creation_time": "2006-08-14T06:29:13Z", "is_private": false}, {"count": 3, "attachment_id": 18713, "bug_id": 40184, "text": "Created attachment 18713\nModified Property, MacroInstance and PropertyHelper\n\nCorrection, improvements, ideas are welcome.\nStefano Marsili", "id": 92182, "time": "2006-08-14T06:32:08Z", "creator": "efanomars@yahoo.com", "creation_time": "2006-08-14T06:32:08Z", "tags": [], "is_private": false}, {"attachment_id": null, "tags": [], "creator": "bodewig@apache.org", "is_private": false, "count": 4, "id": 130097, "time": "2009-09-01T05:04:40Z", "bug_id": 40184, "creation_time": "2009-09-01T05:04:40Z", "text": "Property#resolveAllProperties uses PropertyHelper by now (svn revision 578769 ) while the PropertyHelper logic has been modified strong enough to keep the MacroInstance code separate (we most likely do not want to use the same logic for macro attribute expansions as for property expansions).\n\nUsing FIXED; but WONTFIX or \"INVALID by now\" would be as good as resolution types."}]