[{"count": 0, "tags": [], "bug_id": 43139, "attachment_id": null, "text": "Hello Apache ANT team,\n\nI have found what appears to be the following bug with ANT 1.7.0:\n\n=-=-=-=-=-=-=-=-=-=-\nBUG DESCRIPTION:\n=-=-=-=-=-=-=-=-=-=-\n\nRegarding ANT 1.7.0, the <unjar> task will NOT \"unjar\" (i.e. unzip) a very \nlarge JAR file (e.g. 10GigaBytes or more).  However, it *will* unjar smaller \nJAR files (e.g. 66KiloBytes).  I have done extensive checking and \"sanity \ntests\" to ensure what I am seeing is correct - and yep - 10GB JARs cannot be \nunjar'd.  The specific code in my build.xml file is as follows, where the \nproperty values that are used at runtime are CORRECT.  In short, the below \ncode works for small JAR files, but NOT large files.\n\n<unjar \noverwrite=\"true\" \nsrc=\"${user.machine.gold_image.dir.home}\n\\${user.machine.target.gold_image.zip_file.name}\"\ndest=\"${user.machine.gold_image.dir.home}\"/>\n<echo message=\"done.\"/>\n</target>\n\nIn the case of the large JAR file that CANNOT be unjar'd, the <echo...> task \nin the above code is immediately executed -- with NOTHING be unjar'd.  It's as \nif the expanding operation is SKIPPED completely. Btw, the SAME large JAR file \nthat CANNOT be unjar'd using this ANT code, can **successfully** be unjar'd \nwhen using the \"JAR.EXE\" program that ships with the J2SE 1.5.0. Thus, the JAR \nfile itself is ok.  This alludes to the problem being in ANT 1.7.0.\n\nWhen will this bug be fixed?  At MapInfo (www.mapinfo.com) we have products \nthat we test using ANT, which have data sets that are 20GB in size. We need \nANT to be able to handle unjaring files of that magnitude.  Would be nice if \nyour team could look into this, when ya have a chance. :)  Thanks for your \nhelp.\n\nRegards,\nJohn Leonard Dove\nwork email: john_dove@mapinfo.com\nwork phone: 518-285-7388", "id": 106814, "time": "2007-08-15T19:50:32Z", "creator": "john_dove@mapinfo.com", "creation_time": "2007-08-15T19:50:32Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 43139, "text": "John,\n\nthis does sound like a bug. Being a volunteer-only team, we are invariably\nway-behind in outstanding bugs, and tend to focus on those that hurt the most\npeople ...I think you are the first here. Which means it may fall on you to help\nfix the problem\n\n1. check out and build the SVN_HEAD version -it may already be fixed.\n2. work with us on the developer team to build a test for this (it can be\nautomated, but I worry about creating 10GB files on every test run, as it would\nbreak any vmware/xen hosted build in a small VM). \n3. help us find and fix the problem\n\n-steve", "id": 106819, "time": "2007-08-16T02:33:47Z", "creator": "stevel@apache.org", "creation_time": "2007-08-16T02:33:47Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 43139, "attachment_id": null, "text": "The reson for this is the ZIP format supported by Ant.  Support for archives > 4GB has been added later to the base format (the so called Zip64 extensions) and Ant's zip package doesn't understand this extension.\n\nCommons Compress 1.3 supports them, so using the unzip task of the Compress Antlib should work.", "id": 152830, "time": "2012-01-16T16:17:56Z", "creator": "bodewig@apache.org", "creation_time": "2012-01-16T16:17:56Z", "is_private": false}]