[{"count": 0, "tags": [], "bug_id": 21440, "attachment_id": null, "text": "It appears that tomcat does not behave properly when a JSP\npage invokes a <jsp:include> whose target performs a 'forward'.\n\nDetails below.\n\n---\nSETUP\n\nFoo.html\n <!-- An HTML page that simply outputs \"FOO\" -->\n FOO\n\nForwardServlet.java:\n /**\n  * A servlet that performs a RequestDispatcher.forward()\n  * to \"Foo.html\".\n  */\n package tsc.servlet;\n \n import java.io.IOException;\n import javax.servlet.*;\n \n public class ForwardServlet extends GenericServlet {\n     public void service(ServletRequest req, ServletResponse res)\n     throws ServletException, IOException {\n      ServletContext context = getServletContext();              String\npath=\"/Foo.html\";\n      RequestDispatcher rd = context.getRequestDispatcher(path);\n      rd.forward(req, res);\n     }\n }\nForward.jsp:\n <!-- A JSP page that performs a <jsp:forward> to \"Foo.html\". -->\n <jsp:forward page=\"Foo.html\"/>\n\n---\nTestCase 1\n\nWith the following example:\n\n TestCase1.jsp\n -------------\n ***1***\n <jsp:include page=\"/ForwardServlet\"/>   ***2***\n <% System.out.println(\"TestCase1.jsp\"); %>\n\nThe expected result is that only \"FOO\" will be displayed\non the resulting page, and \"TestCase1.jsp\" will be\ndisplayed on the console.\n\nHere is why:\n\nIn JSP 5.4, it is stated that:\n \"Inclusion is into the current value of out.\"\n ...\n \"An included page only has access to the JspWriter object  and it cannot set\nheaders. This precludes invoking methods  like setCookie. Attempts to invoke\nthese methods will be ignored.  The constraint is equivalent to the one imposed on\n the include method of the RequestDispatcher class.\"\n\nAlthough it would not hurt the spec to be a little more specific, the assumption\nhere is that the RequestDispatcher.include()\nhas to be called with a response object whose 'writer' is shared\nwith the \"including\" page.\n\nGiven that the target of the 'include' is a servlet that performs\na RequestDispather.forward(), the following will happen\n(as per SRV 8.4):\n  - output data in the response buffer is cleared\n  - response content is sent and committed, and closed.\n\n> From the viewpoint of our original TestCase1.jsp page, this therefore \n\nmeans that:\n- \"***1***\" is added to the response output\n- \"***1***\" gets cleared from the response output\n- FOO is added to the response output\n- the response output is closed\n- '***2***' does not get added to the response output because\n  it has already been closed\n- The 'System.out()' statement gets executed.\n\nIf this example is run with Tomcat 4.1.24, the output\nis:\n ***1***\n FOO\nand \"TestCase1.jsp\" is NOT displayed on the console.\nNot as expected.\n\n---\nMoreover, with the following example:\n\n TestCase2.jsp\n -------------\n ***1***\n <jsp:include page=\"/ForwardServlet\"/>   ***2***\n <% System.out.println(\"TestCase2-a.jsp\"); %>\n <jsp:include page=\"/ForwardServlet\"/>   ***3***\n <% System.out.println(\"TestCase2-b.jsp\"); %>\n\nThe expected result is that \"TestCase2-a.jsp\" will be displayed on the console\nand that an IllegalStateException will be\nthrown.\n[Exception should be thrown because the response has already been committed with\nthe first forward (via the first include), and a forward\ncannot be done (via the second include) when a response has already\nbeen committed.]\n\nIf this example is run with Tomcat 4.1.24, the output\nis:\n ***1***\n FOO\nnothing is displayed on the console, and no exception is thrown.\n\n---\nAlso, in the above two test cases, if ForwardServlet is replaced by\nForward.jsp as the target of the <jsp::include>'s:\n\nTestCase1\n works as expected\n\nTestCase2\n FOO\n \"TestCase2-a.jsp\" is displayed on the console  \n IllegalStateException is not thrown", "id": 40283, "time": "2003-07-09T18:14:55Z", "creator": "pierre.delisle@sun.com", "creation_time": "2003-07-09T18:14:55Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 21440, "text": "The test case 2 is giving me a headache, so I won't comment on it.\nFor the first one, I think that since you're inside an include, the forwarded\npage can't close the response, which I think is very logical.\nI think the report is invalid, sorry Pierre (and even if it's not, there are\nmany other, way more important request dispatcher issues which have an actual\nimpact unlike this report, waiting to be clarified by the specification, such as\nreq/resp wrapping).\nI think I am against attempting to fix this bug (if confirmed it is actually\none) in 4.1.x.", "id": 40286, "time": "2003-07-09T18:56:42Z", "creator": "remm@apache.org", "creation_time": "2003-07-09T18:56:42Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 21440, "attachment_id": null, "id": 40289, "time": "2003-07-09T19:18:27Z", "creator": "pierre.delisle@sun.com", "creation_time": "2003-07-09T19:18:27Z", "is_private": false, "text": "Agree this is severity 'minor', since this is a corner case that \nshould not occur often.\n\n> The test case 2 is giving me a headache, so I won't comment on it.\n\nWith some more coffee, I know you can do it Remy :-)\n\n> For the first one, I think that since you're inside an include, the forwarded\n> page can't close the response, which I think is very logical.\n\nThat was my impression at first, but after checking with the spec leads,\nit looks like the response object is to be shared between the including and\nincluded pages. Given the following in the servlet spec:\n\n  - response content is sent and committed, and closed.\n\nThis would mean that the output stream of the including page is closed.\n\n> I think the report is invalid, sorry Pierre (and even if it's not, there are\n> many other, way more important request dispatcher issues which have an actual\n> impact unlike this report, waiting to be clarified by the specification, \n> such as req/resp wrapping).\n> I think I am against attempting to fix this bug (if confirmed it is \n> actually one) in 4.1.x.\n\nNot sure it is invalid, but clarifications from the spec leads would\nbe important. I'll copy the spec leads on this report to make sure\nit eventually gets addressed.\n\nAs mentioned above, this is 'minor' and I understand this may not be\nfixed in 4.1.x, and that there are way more important issues pending. \nHaving it logged will hopefully ensure it does not fall \nthrough the cracks... \n(A JSTL bug report on <c:import> is what triggered this investigation\nbecause the behavior of <c:import> in JSTL is defined in function of <jsp:include>).\n"}, {"count": 3, "tags": [], "bug_id": 21440, "text": "I believe I have a fix for testcase_1:\n\n<jsp:include> wraps the response into an instance of\norg.apache.jasper.runtime..ServletResponseWrapperInclude, so that the\nincluded resource may append its output to the output buffer of the\nincluding page.\n\nTherefore, in the case of \"ForwardServlet\", the response object passed\nto RequestDispatcher.forward() is an instance of\nServletResponseWrapperInclude. RequestDispatcher.forward() calls\nresetBuffer() on the response object, which\nServletResponseWrapperInclude delegates to the wrapped response. At\nthis point, \"***1***\" has not been committed to the response buffer\nyet: it was buffered in the JspWriter associated with the including\npage, to which the PrintWriter associated with the\nServletResponseWrapperInclude appends. This means that calling\nresetBuffer() on the response does not really have any effect, and\ntherefore, \"FOO\" gets appended to \"***1***\".\n\nOn the other hand, when replacing \"ForwardServlet\" with \"forward.jsp\",\nthe code generated for \"forward.jsp\" calls RequestDispatcher.forward()\nwith a response object obtained as follows:\n\n  // Make sure that the response object is not the wrapper for include\n  while (response instanceof ServletResponseWrapperInclude) {\n    response = ((ServletResponseWrapperInclude)response).getResponse();\n  }\n\nAs a consequence of passing the original response to the\nRequestDispatcher, the response consists of just \"FOO\", which does not\nget appended to \"***1***\".\n\nA fix is to override ServletResponseWrapperInclude.resetBuffer() as follows:\n\n    public void resetBuffer() {\n\ttry {\n\t    writer.clearBuffer();\n\t} catch (IOException ioe) {\n\t}\n    }\n\nwhich clears the output buffer of the including page, which is what we want.\n\nHowever, independently of this fix, running testcase_1 throws this exception:\n\n  SEVERE: Servlet.service() for servlet jsp threw exception\n  java.io.IOException: Stream closed\n        at\norg.apache.jasper.runtime.JspWriterImpl.ensureOpen(JspWriterImpl.java:233)\n        at\norg.apache.jasper.runtime.JspWriterImpl.clearBuffer(JspWriterImpl.java:188)\n        at org.apache.jsp.test1_jsp._jspService(test1_jsp.java:48)\n\nWhen replacing \"ForwardServlet\" with \"forward.jsp\", it throws this exception:\n\n  SEVERE: Servlet.service() for servlet jsp threw exception\n  java.lang.IllegalStateException: getOutputStream() has already been called for\nthis response\n        at\norg.apache.coyote.tomcat5.CoyoteResponse.getWriter(CoyoteResponse.java:628)\n        at\norg.apache.coyote.tomcat5.CoyoteResponseFacade.getWriter(CoyoteResponseFacade.java:192)\n        at\norg.apache.jasper.runtime.JspWriterImpl.initOut(JspWriterImpl.java:165)\n        at\norg.apache.jasper.runtime.JspWriterImpl.flushBuffer(JspWriterImpl.java:158)\n        at\norg.apache.jasper.runtime.PageContextImpl.release(PageContextImpl.java:245)\n        at\norg.apache.jasper.runtime.JspFactoryImpl.internalReleasePageContext(JspFactoryImpl.java:160)\n        at\norg.apache.jasper.runtime.JspFactoryImpl.releasePageContext(JspFactoryImpl.java:120)\n        at org.apache.jsp.test11_jsp._jspService(test11_jsp.java:52)\n\n\nStill investigating ....\n\n\nJan\n\n", "id": 40300, "time": "2003-07-09T22:40:17Z", "creator": "jan.luehe@sun.com", "creation_time": "2003-07-09T22:40:17Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 21440, "attachment_id": null, "id": 40301, "time": "2003-07-09T22:52:02Z", "creator": "remm@apache.org", "creation_time": "2003-07-09T22:52:02Z", "is_private": false, "text": "I find the spec's section on the RD to be impossible to understand, and, IMO,\nself contradicting. Wrapping is the most obvious issue. I think I'll veto any RD\nchange until all these issues are resolved, since I'm personally tired of trying\nto hack something in the dark (and hopefully, the section will be reworked so\nthat it can be implemented without too many headaches) :)"}, {"count": 5, "attachment_id": null, "bug_id": 21440, "is_private": false, "id": 40302, "time": "2003-07-09T23:09:00Z", "creator": "jan.luehe@sun.com", "creation_time": "2003-07-09T23:09:00Z", "tags": [], "text": "Remy, I agree in general with your comments about the RD.\n\nHowever, I think this particular case (testcase_1) is covered by SRV.8.4:\n\n\"If output data exists in the response buffer that has not been committed, the\ncontent must be cleared before the target servlet's service method is called.\"\n\nand\n\n\"Before the forward method of the RequestDispatcher interface returns, the\nresponse content must be sent and committed, and closed by the servlet\ncontainer.\"\n\nMy proposed change (in org.apache.jasper.runtime.ServletResponseWrapperInclude)\nwill make the \"ForwardServlet\" case consistent with <jsp:forward>, which already\nimplements the required behaviour.\n"}, {"count": 6, "attachment_id": null, "creator": "jmikus@gmail.com", "is_private": false, "id": 73197, "time": "2005-04-01T20:39:29Z", "bug_id": 21440, "creation_time": "2005-04-01T20:39:29Z", "tags": [], "text": "(In reply to comment #2)\n\n> Agree this is severity 'minor', since this is a corner case that \n> should not occur often.\n...\n> > I think I am against attempting to fix this bug (if confirmed it is \n> > actually one) in 4.1.x.\n\nThis bug does not seem to be fixed yet. This functionality is needed, it is not\na \"corner case\". Tomcat 5.0.28 seem to have this bug too. Please, fix it,\nincluding Tomcat 4.1.x too."}, {"count": 7, "attachment_id": null, "creator": "markt@apache.org", "is_private": false, "id": 83397, "time": "2005-12-07T23:56:52Z", "bug_id": 21440, "creation_time": "2005-12-07T23:56:52Z", "tags": [], "text": "Quick update.\n\nThis is partially fixed in 5.5.x and I have just ported the same partial fix to\n4.1.x.\n\nThe current state is now:\n- for 4.1.x and 5.5.x the resulting pages display correctly in all cases\n- for 4.1.x and 5.5.x console messages display as expected with forward.jsp\n- for 4.1.x and 5.5.x no console messages are displayed with ForwardServlet\n- for 4.1.x and 5.5.x the IlegalStateException is never thrown in test case 2\n- for 5.5.x an addtional warning is logged to the console with ForwardServlet\n\nI'll look at these remaining issues next."}, {"count": 8, "tags": [], "bug_id": 21440, "attachment_id": null, "text": "I have just taken a closer look at the remaining issues and the behaviour seen\nis as expected. The use of newlines and \"***2***\" etc in the test jsps was\ncausing output to be written after the response had been committed. With all the\nsuperfluous output removed, the test cases behaved as expected. Specifically:\n- for 4.1.x and 5.5.x console messages are displayed with ForwardServlet\n- for 4.1.x and 5.5.x the IlegalStateException is thrown for test case 2\n\nThe exceptions Jan referred to in comment #3 no longer appear.\n\nThe additional warnings in 5.5.x are just that. The response has been committed\nso trying to flush the buffer on the release of the PageContext fails. This is\nexpected.", "id": 83866, "time": "2005-12-21T00:11:59Z", "creator": "markt@apache.org", "creation_time": "2005-12-21T00:11:59Z", "is_private": false}]