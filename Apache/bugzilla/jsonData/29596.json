[{"count": 0, "tags": [], "creator": "jez@jezuk.co.uk", "text": "Ant manual for XSLT task says\n\nclasspath  \tthe classpath to use when looking up the XSLT processor.\n\nThe XSLT task uses the defined classpath to look up the XSLTLiason class. \nHistorically, this made sense.  Now, Trax is standard and the XSL:P and Xalan\nliasons are deprecated.  It would seem to make sense to allow the TraXLiason to\nuse the defined classpath to look up the transformer to use.  The factory\nelement allows you to specify the precise transformer class to use, but if that\nclass isn't on the default classpath you're sunk.  If TraXLiason could use the\nXSLTProcess' classpath, you can ship your processor of choice in your build\nconfiguration and the problem is solved.", "id": 59273, "time": "2004-06-16T10:50:55Z", "bug_id": 29596, "creation_time": "2004-06-16T10:50:55Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 29596, "is_private": false, "text": "Proposed patches to implement -\n\ndiff -u -r1.85 XSLTProcess.java\n--- XSLTProcess.java    16 Apr 2004 09:59:02 -0000      1.85\n+++ XSLTProcess.java    16 Jun 2004 10:53:00 -0000\n@@ -414,7 +414,7 @@\n      * @return the requested class.\n      * @exception Exception if the class could not be loaded.\n      */\n-    private Class loadClass(String classname) throws Exception {\n+    public Class loadClass(String classname) throws Exception {\n         if (classpath == null) {\n             return Class.forName(classname);\n         } else {\n\ndiff -u -r1.35 TraXLiaison.java\n--- TraXLiaison.java    9 Mar 2004 16:48:15 -0000       1.35\n+++ TraXLiaison.java    16 Jun 2004 10:53:49 -0000\n@@ -66,6 +66,9 @@\n      */\n     private String factoryName = null;\n\n+    /** the owning XSLT task */\n+    private XSLTProcess xsltTask = null;\n+\n     /** The trax TransformerFactory */\n     private TransformerFactory tfactory = null;\n\n@@ -259,7 +262,7 @@\n             tfactory = TransformerFactory.newInstance();\n         } else {\n             try {\n-                Class clazz = Class.forName(factoryName);\n+                Class clazz = xsltTask.loadClass(factoryName);\n                 tfactory = (TransformerFactory) clazz.newInstance();\n             } catch (Exception e) {\n                 throw new BuildException(e);\n@@ -401,6 +404,8 @@\n      *        is to be configured.\n      */\n     public void configure(XSLTProcess xsltTask) {\n+        this.xsltTask = xsltTask;\n+\n         XSLTProcess.Factory factory = xsltTask.getFactory();\n         if (factory != null) {\n             setFactory(factory.getName());\n@@ -413,6 +418,8 @@\n                 setAttribute(attr.getName(), attr.getValue());\n             }\n         }\n+\n+\n\n         XMLCatalog xmlCatalog = xsltTask.getXMLCatalog();\n         // use XMLCatalog as the entity resolver and URI resolver", "id": 59274, "time": "2004-06-16T10:56:44Z", "creator": "jez@jezuk.co.uk", "creation_time": "2004-06-16T10:56:44Z", "attachment_id": null}, {"count": 2, "attachment_id": null, "creator": "bodewig@apache.org", "text": "Ant 1.6.2 will set the context classloader for the current thread since the\nTransformerFactory will use that.  This is probably going to help with your issue.\n\nAny chance you could try a hand-crafted build of Ant's CVS HEAD?\n\nIf not, please revisit this bug once Ant 1.6.2 has been released as beta (shouldn't\nbe too long from now).", "id": 59970, "time": "2004-06-28T08:02:04Z", "bug_id": 29596, "creation_time": "2004-06-28T08:02:04Z", "tags": [], "is_private": false}, {"count": 3, "tags": [], "bug_id": 29596, "is_private": false, "text": "*** Bug 39248 has been marked as a duplicate of this bug. ***", "id": 87703, "time": "2006-04-08T11:24:19Z", "creator": "surfer@kalto.de", "creation_time": "2006-04-08T11:24:19Z", "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 29596, "is_private": false, "text": "Not solved in 1.6.5 see duplicate BUG 39248 !!!\n\nGreetings Surfer ", "id": 87708, "time": "2006-04-09T10:45:32Z", "creator": "surfer@kalto.de", "creation_time": "2006-04-09T10:45:32Z", "attachment_id": null}, {"count": 5, "tags": [], "creator": "m_pupil@163.com", "attachment_id": null, "id": 87769, "time": "2006-04-11T16:17:12Z", "bug_id": 29596, "creation_time": "2006-04-11T16:17:12Z", "is_private": false, "text": "neither the classpath element/attribute nor the classpathref attribute works"}, {"count": 6, "tags": [], "bug_id": 29596, "is_private": false, "text": "Fixed it for me i just use the contextClassLoader in Class.forName because there\nis nothing to change in calling class:\n\nTraXLiaison.java\n\ntry {\n    final Class clazz = Class.forName(factoryName, true, \n                        Thread.currentThread().getContextClassLoader());\n    tfactory = (TransformerFactory) clazz.newInstance();\n} catch (Exception e) {\n    throw new BuildException(e);\n}\n\nSurfer", "id": 87770, "time": "2006-04-11T16:49:03Z", "creator": "surfer@kalto.de", "creation_time": "2006-04-11T16:49:03Z", "attachment_id": null}, {"count": 7, "tags": [], "bug_id": 29596, "is_private": false, "text": "well, we have two options here. the original patch or the context class loader.\n\nI'm not overhappy with the second, even though it does work, because I dont like\ncontext class loaders -they are a bit of a hack. Can we be 100% sure that it\nwill always be set and valid?", "id": 87771, "time": "2006-04-11T17:18:18Z", "creator": "stevel@apache.org", "creation_time": "2006-04-11T17:18:18Z", "attachment_id": null}, {"count": 8, "tags": [], "creator": "surfer@kalto.de", "attachment_id": null, "text": "So the TraXLiaison is only called from XSLTProcess and if there is a defined\nclasspath the contextclassloader is set and valid. But if there is no defined\nclasspath i knew the contextclassloader must also be set but not if it is valid\n- in the current meaning. In my environment i only work with a defined\nclasspath. So what about mixing the two options... first try to load in the\noriginal way and if not found try to load from contextloader. Then it should\nwork as expected...\n\nClass clazz = null;\ntry {\n  clazz = Class.forName(factoryName); \n} catch(...) {\n  try {\n    clazz = Class.forName(factoryName, true, \n                        Thread.currentThread().getContextClassLoader());\n  } catch ...\n\n", "id": 87772, "time": "2006-04-11T17:54:12Z", "bug_id": 29596, "creation_time": "2006-04-11T17:54:12Z", "is_private": false}, {"count": 9, "tags": [], "creator": "bodewig@apache.org", "attachment_id": null, "id": 122788, "time": "2008-11-24T08:29:49Z", "bug_id": 29596, "creation_time": "2008-11-24T08:29:49Z", "is_private": false, "text": "\n\n*** This bug has been marked as a duplicate of bug 46172 ***"}]