[{"count": 0, "attachment_id": null, "bug_id": 58571, "text": "This is a followup from Bug 54786, the fix applied there is not complete yet, the following unit-test still fails:\n\n\t@Test\n\tpublic void testFormula() throws IOException {\n\t\ttry (Workbook wb = new XSSFWorkbook()) {\n\t\t\tFormulaEvaluator eval = wb.getCreationHelper().createFormulaEvaluator();\n\n\t\t\tSheet sheet = wb.createSheet(\"test\");\n\t\t\tRow row = sheet.createRow(0);\n\t\t\tCell cell = row.createCell(0);\n\t\t\tcell.setCellFormula(\"TEXT(B1, \\\"[h]\\\"\\\"h\\\"\\\" m\\\"\\\"m\\\"\\\"\\\")\");\n\n\t\t\tCell cellValue = row.createCell(1);\n\t\t\tcellValue.setCellValue(0.0104166666666666);;\n\n\t\t\tCellValue value = eval.evaluate(cell);\n\t\t\tassertEquals(Cell.CELL_TYPE_STRING, value.getCellType());\n\t\t\tassertEquals(\"1h 0m\", value.getStringValue());\n\t\t}\n\t}\n\nIt seems the StringPtg internally stores the two double quotes (\"\") as one double quote and the format is passed this way to the TEXT-function and further on to DataFormatter.formatRawCellContents(). However in Bug 54786 we built the replacement there on two doulbe-quotes.\n\nTwo options:\n* Adjust DataFormatter to replace one double quote with a single quote\n* Adjust StringPtg to return the doulbe-quotes in the call to getValue() similar to toString()/toFormulaString()\n\nI am not sure which one is the better option here as both may have side-effects to existing code/functionality.", "id": 186168, "time": "2015-11-02T06:40:45Z", "creator": "dominik.stadler@gmx.at", "creation_time": "2015-11-02T06:40:45Z", "tags": [], "is_private": false}]