[{"count": 0, "tags": [], "bug_id": 54716, "text": "If Session#close() is called from an onOpen method, the container throws a NullPointerException, as evidenced below:\n\nMar 17, 2013 10:57:50 PM org.apache.coyote.AbstractProtocol$AbstractConnectionHandler process\nSEVERE: Error reading request, ignored\njava.lang.IllegalArgumentException: Failed to call onOpen method of POJO end point for POJO of type [com.wrox.chat.ChatEndpoint]\n\tat org.apache.tomcat.websocket.pojo.PojoEndpointBase.doOnOpen(PojoEndpointBase.java:54)\n\tat org.apache.tomcat.websocket.pojo.PojoEndpointServer.onOpen(PojoEndpointServer.java:69)\n\tat org.apache.tomcat.websocket.server.WsProtocolHandler.init(WsProtocolHandler.java:107)\n\tat org.apache.coyote.http11.upgrade.AbstractProcessor.<init>(AbstractProcessor.java:51)\n\tat org.apache.coyote.http11.upgrade.NioProcessor.<init>(NioProcessor.java:31)\n\tat org.apache.coyote.http11.Http11NioProtocol$Http11ConnectionHandler.createUpgradeProcessor(Http11NioProtocol.java:309)\n\tat org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:634)\n\tat org.apache.coyote.http11.Http11NioProtocol$Http11ConnectionHandler.process(Http11NioProtocol.java:223)\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1581)\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1540)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)\n\tat java.lang.Thread.run(Thread.java:722)\nCaused by: java.lang.reflect.InvocationTargetException\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:487)\n\tat org.apache.tomcat.websocket.pojo.PojoEndpointBase.doOnOpen(PojoEndpointBase.java:51)\n\t... 12 more\nCaused by: java.lang.NullPointerException\n\tat org.apache.tomcat.websocket.BackgroundProcessManager.unregister(BackgroundProcessManager.java:75)\n\tat org.apache.tomcat.websocket.WsWebSocketContainer.unregisterSession(WsWebSocketContainer.java:283)\n\tat org.apache.tomcat.websocket.server.WsServerContainer.unregisterSession(WsServerContainer.java:283)\n\tat org.apache.tomcat.websocket.WsSession.sendCloseMessage(WsSession.java:357)\n\tat org.apache.tomcat.websocket.WsSession.close(WsSession.java:305)\n\tat com.wrox.chat.ChatEndpoint.onOpen(ChatEndpoint.java:54)\n\t... 17 more\n\nIf this or any other exceptions are thrown from an onOpen method, even if the session isn't closed, Tomcat starts randomly rejecting a handful of requests with no explanation in the logs, and on shut down dozens of these errors appear on stderr:\n\nMar 17, 2013 11:22:11 PM org.apache.tomcat.util.modeler.Registry unregisterComponent\nSEVERE: Error unregistering mbean \njavax.management.RuntimeOperationsException: Object name cannot be null\n\tat com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.isRegistered(DefaultMBeanServerInterceptor.java:569)\n\tat com.sun.jmx.mbeanserver.JmxMBeanServer.isRegistered(JmxMBeanServer.java:628)\n\tat org.apache.tomcat.util.modeler.Registry.unregisterComponent(Registry.java:420)\n\tat org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.unregister(AbstractProtocol.java:768)\n\tat org.apache.coyote.AbstractProtocol$RecycledProcessors.clear(AbstractProtocol.java:820)\n\tat org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.recycle(AbstractProtocol.java:578)\n\tat org.apache.tomcat.util.net.NioEndpoint.releaseCaches(NioEndpoint.java:318)\n\tat org.apache.tomcat.util.net.NioEndpoint.unbind(NioEndpoint.java:481)\n\tat org.apache.tomcat.util.net.AbstractEndpoint.destroy(AbstractEndpoint.java:675)\n\tat org.apache.coyote.AbstractProtocol.destroy(AbstractProtocol.java:522)\n\tat org.apache.catalina.connector.Connector.destroyInternal(Connector.java:1020)\n\tat org.apache.catalina.util.LifecycleBase.destroy(LifecycleBase.java:305)\n\tat org.apache.catalina.core.StandardService.destroyInternal(StandardService.java:584)\n\tat org.apache.catalina.util.LifecycleBase.destroy(LifecycleBase.java:305)\n\tat org.apache.catalina.core.StandardServer.destroyInternal(StandardServer.java:835)\n\tat org.apache.catalina.util.LifecycleBase.destroy(LifecycleBase.java:305)\n\tat org.apache.catalina.startup.Catalina.stop(Catalina.java:719)\n\tat org.apache.catalina.startup.Catalina.start(Catalina.java:680)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:487)\n\tat org.apache.catalina.startup.Bootstrap.start(Bootstrap.java:357)\n\tat org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:491)\nCaused by: java.lang.IllegalArgumentException: Object name cannot be null\n\t... 24 more", "id": 165946, "time": "2013-03-18T05:48:12Z", "creator": "nicholas@nicholaswilliams.net", "creation_time": "2013-03-18T05:48:12Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "is_private": false, "id": 165993, "time": "2013-03-19T14:23:14Z", "bug_id": 54716, "creation_time": "2013-03-19T14:23:14Z", "text": "Thanks for the report. Should be fixed now. I made onError and onClose handling more robust too. There might still be a way to breaks things. Feel free to re-open if you find one."}, {"count": 2, "tags": [], "bug_id": 54716, "text": "This definitely improves robustness, but it does not solve the problem where a NullPointerException is thrown in BackgroundProcessManeger#unregister(...) if a Session#close(...) is called in an onOpen method:\n\nCaused by: java.lang.NullPointerException\n\tat org.apache.tomcat.websocket.BackgroundProcessManager.unregister(BackgroundProcessManager.java:75)\n\tat org.apache.tomcat.websocket.WsWebSocketContainer.unregisterSession(WsWebSocketContainer.java:283)\n\tat org.apache.tomcat.websocket.server.WsServerContainer.unregisterSession(WsServerContainer.java:283)\n\tat org.apache.tomcat.websocket.WsSession.sendCloseMessage(WsSession.java:357)\n\tat org.apache.tomcat.websocket.WsSession.close(WsSession.java:305)\n\tat com.wrox.chat.ChatEndpoint.onOpen(ChatEndpoint.java:54)\n\t... 17 more\n\nCalling Session#close(...) from onOpen is a valid use-case: At onOpen I may check to make sure the user is authenticated, and if not, I need to close the session.\n\nThe root-cause of this NullPointerException is that, in WsWebSocketContainer and WsProtocolHandler, WsWebSocketContainer#registerSession(...) is called AFTER onOpen. registerSession ultimately calls BackgroundProcessManager#register(...), which instantiates the background thread if it does not already exist. So, if there are NO active Sessions, and a new Session is created, and that Session is closed onOpen, the background thread will not already exist when BackgroundProcessManeger#unregister(...) is called, and that causes the NullPointerException.\n\nThere are two possible solutions to this that I can see, though there very well may be others:\n\n1) In BackgroundProcessManeger#unregister(...), make sure the background thread is not null before calling #halt().\n2) In WsWebSocketContainer and WsProtocolHandler, call registerSession BEFORE onOpen. This doesn't seem correct to me, but I don't understand it fully.", "id": 165997, "time": "2013-03-19T15:30:13Z", "creator": "nicholas@nicholaswilliams.net", "creation_time": "2013-03-19T15:30:13Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 54716, "is_private": false, "text": "Assuming the solution is 1, the patch is simply changing this:\n\n            if (processes.size() == 0) {\n                wsBackgroundThread.halt();\n                wsBackgroundThread = null;\n            }\n\nTo this:\n\n            if (wsBackgroundThread != null && processes.size() == 0) {\n                wsBackgroundThread.halt();\n                wsBackgroundThread = null;\n            }", "id": 165998, "time": "2013-03-19T15:35:29Z", "creator": "nicholas@nicholaswilliams.net", "creation_time": "2013-03-19T15:35:29Z", "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 54716, "text": "The solution is 1) plus an additional change so that sessions closed during onOpen are not registered.", "id": 166007, "time": "2013-03-19T19:59:06Z", "creator": "markt@apache.org", "creation_time": "2013-03-19T19:59:06Z", "is_private": false, "attachment_id": null}]