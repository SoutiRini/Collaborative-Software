[{"count": 0, "tags": [], "bug_id": 47991, "attachment_id": null, "is_private": false, "id": 131105, "time": "2009-10-13T04:52:49Z", "creator": "yoda@oleco.net", "creation_time": "2009-10-13T04:52:49Z", "text": "If an attachment is read from a msg file via the getAttachmentFiles() of the MapiMessage class and streamed to a file, the result will be a file with even length and lots of zeros in the end. For example a PDF file ends with %%EOF{CR}, but the attachment from the msg show in an editor: %%EOF{CR}{NUL}{NUL}{NUL}{NUL}{NUL}{NUL}{NUL}{NUL}{NUL}{NUL}{NUL}.\n\nJust compare the original files that were put into the msg and the result of the getAttachmentFiles() method using a diff tool and you will see. Outlook extracts the attachments correctly by the way, it seems to know the exact length of the files."}, {"count": 1, "tags": [], "bug_id": 47991, "attachment_id": null, "id": 131649, "time": "2009-11-03T16:10:11Z", "creator": "apache@gagravarr.org", "creation_time": "2009-11-03T16:10:11Z", "is_private": false, "text": "Can you upload a sample .msg file with an attachment that displays this behaviour? We'll want to use that so we have something to test a fix against"}, {"count": 2, "tags": [], "bug_id": 47991, "attachment_id": 24690, "id": 132746, "time": "2009-12-11T04:00:00Z", "creator": "yoda@oleco.net", "creation_time": "2009-12-11T04:00:00Z", "is_private": false, "text": "Created attachment 24690\nTest files as zip, contains msg and attachments before and after processing\n\nMy sample code:\n\nMAPIMessage mapiMsg = new MAPIMessage( new FileInputStream( new File(\"plain.msg\") ) );\nMap<String, ByteArrayInputStream> atts = mapiMsg.getAttachmentFiles();\nif( atts != null && atts.size() == 1 )\n{\n\tString attName = atts.keySet().iterator().next();\n\tByteArrayInputStream att = atts.get( attName );\n\tFileUtils.stream( att, new FileOutputStream( new File(\"after.txt\") ) );\n}"}, {"count": 3, "tags": [], "creator": "apache@gagravarr.org", "is_private": false, "text": "Please do keep looking for a file that displays this problem, and which you can share. Without the message to investigate, there's unfortunately nothing we can do to fix it.", "id": 132750, "time": "2009-12-11T04:43:39Z", "bug_id": 47991, "creation_time": "2009-12-11T04:43:39Z", "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 47991, "attachment_id": null, "is_private": false, "id": 137241, "time": "2010-06-01T03:37:51Z", "creator": "yoda@oleco.net", "creation_time": "2010-06-01T03:37:51Z", "text": "I tried again with the newer revision 898295 (Jan 12 2010) and it seems to work now for me, but you and me should keep an eye on it :-)"}]