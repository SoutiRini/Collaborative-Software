[{"count": 0, "tags": [], "creator": "yilong.li@runtimeverification.com", "attachment_id": null, "text": "I am running the test suite against a dynamic race detector called RV-Predict. I get a few race reports on the HashMap org.apache.catalina.connector.OutputBuffer.encoders:\n\nData race on field java.util.HashMap.$state: {{{\nConcurrent write in thread T83 (locks held: {Monitor@67298f15})\n ---->  at org.apache.catalina.connector.OutputBuffer.clearEncoders(OutputBuffer.java:255)\n        at org.apache.catalina.connector.Response.clearEncoders(Response.java:295)\n        at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:587)\n        at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1091)\n        at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:668)\n        at org.apache.tomcat.util.net.Nio2Endpoint$SocketProcessor.doRun(Nio2Endpoint.java:1073)\n        at org.apache.tomcat.util.net.Nio2Endpoint$SocketProcessor.run(Nio2Endpoint.java:1032)\n        - locked Monitor@67298f15 at org.apache.tomcat.util.net.Nio2Endpoint$SocketProcessor.run(Nio2Endpoint.java:1031)\n        at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\n    T83 is created by T82\n        at java.util.concurrent.ThreadPoolExecutor.addWorker(ThreadPoolExecutor.java:1010)\n\nConcurrent read in thread T84 (locks held: {})\n ---->  at org.apache.catalina.connector.OutputBuffer.setConverter(OutputBuffer.java:580)\n        at org.apache.catalina.connector.OutputBuffer.checkConverter(OutputBuffer.java:563)\n        at org.apache.catalina.connector.Response.getWriter(Response.java:599)\n        at org.apache.catalina.connector.ResponseFacade.getWriter(ResponseFacade.java:212)\n        at org.apache.coyote.http11.TestAbstractHttp11Processor$Bug57621Servlet$1.run(TestAbstractHttp11Processor.java:757)\n        at org.apache.catalina.core.AsyncContextImpl$RunnableWrapper.run(AsyncContextImpl.java:549)\n        at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\n    T84 is created by T83\n        at java.util.concurrent.ThreadPoolExecutor.addWorker(ThreadPoolExecutor.java:1010)\n}}} \n\nData race on field java.util.HashMap.$state: {{{\nConcurrent write in thread T60 (locks held: {Monitor@93a8632})\n ---->  at org.apache.catalina.connector.OutputBuffer.clearEncoders(OutputBuffer.java:255)\n        at org.apache.catalina.connector.Response.clearEncoders(Response.java:295)\n        at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:587)\n        at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1091)\n        at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:668)\n        at org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor.run(JIoEndpoint.java:277)\n        - locked Monitor@93a8632 at org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor.run(JIoEndpoint.java:259)\n        at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\n    T60 is created by T58\n        at java.util.concurrent.ThreadPoolExecutor.addWorker(ThreadPoolExecutor.java:1010)\n\nConcurrent read in thread T61 (locks held: {})\n ---->  at org.apache.catalina.connector.OutputBuffer.setConverter(OutputBuffer.java:604)\n        at org.apache.catalina.connector.OutputBuffer.checkConverter(OutputBuffer.java:563)\n        at org.apache.catalina.connector.Response.getWriter(Response.java:599)\n        at org.apache.catalina.connector.ResponseFacade.getWriter(ResponseFacade.java:212)\n        at org.apache.coyote.http11.TestAbstractHttp11Processor$Bug57621Servlet$1.run(TestAbstractHttp11Processor.java:757)\n        at org.apache.catalina.core.AsyncContextImpl$RunnableWrapper.run(AsyncContextImpl.java:549)\n        at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\n    T61 is created by T60\n        at java.util.concurrent.ThreadPoolExecutor.addWorker(ThreadPoolExecutor.java:1010)\n}}} \n\nLooks like OutputBuffer.encoders is accessed from multiple threads without proper synchronization.", "id": 184897, "time": "2015-09-01T13:34:55Z", "bug_id": 58313, "creation_time": "2015-09-01T13:34:55Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 58313, "text": "I agree that this is an issue. A switch to ConcurrentHashMap should address the immediate problem.\n\nThe idea behind clearEncoders() is a good one. The encoders are expensive objects and don't scale well. We don't really want to keep the Map around during an async request. On the otherhand, we don't really want to have to keep re-creating it.\n\nI'm wondering about ways to improve the currenty approach. I'm going to do some simple testing to see how an approach based on pools of encoders would perform.", "id": 184917, "time": "2015-09-02T15:19:24Z", "creator": "markt@apache.org", "creation_time": "2015-09-02T15:19:24Z", "is_private": false, "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 58313, "text": "Fixed in trunk, 8.0.x (for 8.0.27 onwards) and 7.0.x (for 7.0.65 onwards). Back-port proposed for 6.0.x.", "count": 2, "id": 184918, "time": "2015-09-02T19:08:44Z", "creator": "markt@apache.org", "creation_time": "2015-09-02T19:08:44Z", "is_private": false}, {"count": 3, "tags": [], "creator": "knst.kolinko@gmail.com", "attachment_id": null, "text": "Fixed in Tomcat 6 by r1710487 and will be in 6.0.45 onwards.", "id": 185944, "time": "2015-10-25T21:58:01Z", "bug_id": 58313, "creation_time": "2015-10-25T21:58:01Z", "is_private": false}]