[{"count": 0, "tags": [], "creator": "mail@noelmarkham.com", "attachment_id": null, "id": 110734, "time": "2007-11-19T09:41:51Z", "bug_id": 43905, "creation_time": "2007-11-19T09:41:51Z", "is_private": false, "text": "Have the HSSFSheet and HSSFRow implement the Iterator interface - this would\nallow the Java 5 foreach to be used resulting in cleaner code. Considering there\nis only one Iterator method on each class, it is clear what the iterator() class\nwould return."}, {"count": 1, "tags": [], "creator": "apache@gagravarr.org", "text": "HSSFRow.cellIterator and HSSFSheet.rowIterator should already provide what you\nwant. Use row.cellIterator or sheet.rowIterator in your foreach loop\n", "id": 111403, "time": "2007-12-04T04:06:50Z", "bug_id": 43905, "creation_time": "2007-12-04T04:06:50Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "creator": "leifarne@storset.net", "text": "Sadly, Nick Burch is mistaken. If you test the code sample \"Iterate over rows \nand cells (including Java 5 foreach loops)\" at http://poi.apache.org/hssf/quick-\nguide.html#Iterator, you will find that it generates a compiler error \"Can only \niterate over an array or an instance of java.lang.Iterable\". (Was this tested \nbefore publishing?)\n\nFor this to work, Noel Markham's original suggestion should be implemented. For \nHSSFSheet and HSSFRow to be Iterable, there must be a method called iterator(). \nAlternatively (and perhaps more logically), you could return Iterable data \nstructures through HSSFSheet.rows() and HSSFRow.cells().", "id": 113424, "time": "2008-02-04T23:51:37Z", "bug_id": 43905, "creation_time": "2008-02-04T23:51:37Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "creator": "leifarne@storset.net", "attachment_id": null, "id": 113437, "time": "2008-02-05T07:05:04Z", "bug_id": 43905, "creation_time": "2008-02-05T07:05:04Z", "is_private": false, "text": "Additionally, the Iterator returned by iterator() should be typed - i. e. \nreturn an Iterator<HSSFRow> or Iterator<HSSFSheet>. This avoids compiler \nwarnings about type safety and increases user confidence."}, {"count": 4, "tags": [], "bug_id": 43905, "attachment_id": null, "text": "(In reply to comment #3)\n> Additionally, the Iterator returned by iterator() should be typed - i. e. \n> return an Iterator<HSSFRow> or Iterator<HSSFSheet>. This avoids compiler \n> warnings about type safety and increases user confidence.\n\nTyping requires Java 1.5, and POI is aiming to stay working with Java 1.4, so\nthat isn't going to be possible\n", "id": 113438, "time": "2008-02-05T07:23:35Z", "creator": "apache@gagravarr.org", "creation_time": "2008-02-05T07:23:35Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 43905, "attachment_id": null, "text": "It seems that the way sun introduced foreach loops in java 1.5 was rather\nstupid, and prevents your code from then working on java 1.4. Since we require\njava 1.4 compatibility, we can't implement java.lang.Iterable (though trunk does\nhave the method that that requires). For now, you'll need to just use the normal\niterator methods\n\nIn the ooxml branch, we do have some workarounds for java 1.4 vs java 1.5\nfeatures, so Sheet/HSSFSheet/XSSFSheet and Row/HSSFRow/XSSFRow do implement\njava.lang.Iterable (when build on java 1.5), so foreach loops will work there.", "id": 113439, "time": "2008-02-05T08:35:46Z", "creator": "apache@gagravarr.org", "creation_time": "2008-02-05T08:35:46Z", "is_private": false}]