[{"count": 0, "attachment_id": null, "bug_id": 32719, "is_private": false, "id": 68584, "time": "2004-12-15T18:44:11Z", "creator": "rgc197@zepler.org", "creation_time": "2004-12-15T18:44:11Z", "tags": [], "text": "class: org.apache.tomcat.util.IntrospectionUtils\nmethod: replaceProperties(String, Hashtable, PropertySource[])\nCVS:\njakarta-tomcat-connectors/util/java/org/apache/tomcat/util/IntrospectionUtils.java\n\n\nA possibily unintentional feature of IntrospectionUtils.replaceProperties causes\nthe $ character to the stripped from web.xml files when they are loaded. \n\nThis was discovered when the name of an inner class was specified as a parameter:\n\n<init-param>\n <param-name>source.factory</param-name>\n <param-value>com.ssl.javaservlets.tihinterface.PcoRegionsSqlDataSource$Factory</param-value>\n</init-param>\n\nHowever when the servlet retrieved this parameter, the $ character had been\nremoved yeilding the result:\n\"com.ssl.javaservlets.tihinterface.PcoRegionsSqlDataSourceFactory\"\nrather than:\n\"com.ssl.javaservlets.tihinterface.PcoRegionsSqlDataSource$Factory\"\n\nThis seemed related to the processing of replacement properties defined in the\nstyle ${property.name}. However if the is no property \"property.name\" then the\nraw text \"${property.name}\" passes through untouched, likewise if a $ is placed\na the end of a string.\n\nUpon inspecting the IntrospectionUtils.replaceProperties method, I noticed that\nthis behaviour was due to the following code starting @ line 475:\n\n} else if (value.charAt(pos + 1) != '{') {\n    sb.append(value.charAt(pos + 1));\n    prev = pos + 2; // XXX\n} else {\n\nTherefore after consuming a $ and the lookahead says that a non { character\nfollows, only the non { character is placed on the buffer and the $ which has\njust been consumed is dropped. This can be fixed by simply adding the $ to the\nbuffer, thus:\n\n} else if (value.charAt(pos + 1) != '{') {\n    sb.append('$');\n    sb.append(value.charAt(pos + 1));\n    prev = pos + 2; \n} else {\n\n\nI looking back over the CVS history this faulty logic is almost 3 years old, yet\nI could not find an entry in the bug database for it. I've been using Tomcat for\nover 3 years now myself and find it strange to of only stubled over this bug\nafter all this time, I guess I've never used a string with the $ character before :P"}, {"count": 1, "attachment_id": 13761, "creator": "rgc197@zepler.org", "is_private": false, "id": 68585, "time": "2004-12-15T19:03:31Z", "bug_id": 32719, "creation_time": "2004-12-15T19:03:31Z", "tags": [], "text": "Created attachment 13761\npatch fixing this problem\n\nAdded patch"}, {"count": 2, "tags": [], "bug_id": 32719, "text": "*** Bug 32577 has been marked as a duplicate of this bug. ***", "id": 68605, "time": "2004-12-16T03:26:55Z", "creator": "bsouther@fwdco.com", "creation_time": "2004-12-16T03:26:55Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "text": "This is fixed in the CVS.  The fix is modified from the patch here, since your \npatch doesn't handle the case:\n   <listener-class>package.MyClass$${inner.class}</listener-class>\n\n \n\n", "attachment_id": null, "bug_id": 32719, "id": 68606, "time": "2004-12-16T04:54:57Z", "creator": "william.barker@wilshire.com", "creation_time": "2004-12-16T04:54:57Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 32719, "text": "*** Bug 34843 has been marked as a duplicate of this bug. ***", "id": 82840, "time": "2005-11-24T17:26:07Z", "creator": "stevel@apache.org", "creation_time": "2005-11-24T17:26:07Z", "is_private": false, "attachment_id": null}]