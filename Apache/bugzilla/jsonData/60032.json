[{"attachment_id": null, "tags": [], "bug_id": 60032, "text": "In method AstFunction#getValue,  the vargargs values are resolved and added to named varargs variable. The  varargs variables is never added to the parameter list used to call the method.\n\n       if (inputParameterCount > 0) {\n            params = new Object[methodParameterCount];\n            try {\n                for (int i = 0; i < methodParameterCount; i++) {\n                    if (m.isVarArgs() && i == methodParameterCount - 1) {\n                        if (inputParameterCount < methodParameterCount) {\n                            params[i] = null;\n                        } else {\n                            Object[] varargs =\n                                    new Object[inputParameterCount - methodParameterCount + 1];\n                            Class<?> target = paramTypes[i].getComponentType();\n                            for (int j = i; j < inputParameterCount; j++) {\n                                varargs[j-i] = parameters.jjtGetChild(j).getValue(ctx);\n                                varargs[j-i] = coerceToType(ctx, varargs[j-i], target);\n                            }\n                        }\n                    } else {\n                        params[i] = parameters.jjtGetChild(i).getValue(ctx);\n                        params[i] = coerceToType(ctx, params[i], paramTypes[i]);\n                    }\n                }\n            } catch (ELException ele) {\n                throw new ELException(MessageFactory.get(\"error.function\", this\n                        .getOutputName()), ele);\n            }\n        }\n        try {\n            result = m.invoke(null, params);\n        } catch (IllegalAccessException iae) {\n            throw new ELException(MessageFactory.get(\"error.function\", this\n                    .getOutputName()), iae);\n        } catch (InvocationTargetException ite) {\n            Throwable cause = ite.getCause();\n            if (cause instanceof ThreadDeath) {\n                throw (ThreadDeath) cause;\n            }\n            if (cause instanceof VirtualMachineError) {\n                throw (VirtualMachineError) cause;\n            }\n            throw new ELException(MessageFactory.get(\"error.function\", this\n                    .getOutputName()), cause);\n        }\n        return result;", "count": 0, "id": 193278, "time": "2016-08-23T09:54:12Z", "creator": "d02bernard@gmail.com", "creation_time": "2016-08-23T09:54:12Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 60032, "text": "This has been fixed in the following branches:\n- 9.0.x for 9.0.0.M10 onwards\n- 8.5.x for 8.5.5 onwards\n- 8.0.x for 8.0.37 onwards", "id": 193300, "time": "2016-08-24T11:34:06Z", "creator": "markt@apache.org", "creation_time": "2016-08-24T11:34:06Z", "is_private": false, "attachment_id": null}]