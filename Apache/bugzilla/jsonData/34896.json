[{"attachment_id": null, "tags": [], "creator": "amcraft@emailplus.org", "text": "When wrapping connections in a Transaction tag like:\n<sql:transaction dataSource=\"JNDI.DS\">\n<sql:query var=\"query1\" >\nSELECT * from etc\n</sql:query>\n<sql:query var=\"query2\" >\nSELECT * from etc\n</sql:query>\n</sql:transaction>\n\nThe transaction tag causes a connection leak, the reason is as follows\n\nThe nested connection correctly uses the parent connection object. The \nTransactionTagSupport class tries to close the connection in the doFinally() \nmethod, the problem is before the doFinally() tag is called the release() \nmethod is called which calls init() which sets the connection object to null \nand hence the doFinally() is unable to close the connection as there is no \nlonger a reference to the object and hence the leak.\n\nProposal would be to remove the init() method from the release() method.\n\nEnvironment:\nWeblogic 8.1 sp3\ndatasource is sybase looked up by jndi reference.\n\nclass:\norg.apache.taglibs.standard.tag.common.sql.TransactionTagSupport", "count": 0, "id": 74809, "time": "2005-05-12T15:42:45Z", "bug_id": 34896, "creation_time": "2005-05-12T15:42:45Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 34896, "attachment_id": null, "id": 98854, "time": "2007-01-31T13:46:42Z", "creator": "bayard@apache.org", "creation_time": "2007-01-31T13:46:42Z", "is_private": false, "text": "Looking at the code, I think a simpler approach would be to remove the conn =\nnull; from init(). It's unnecessary as doFinally takes care of that."}, {"count": 2, "tags": [], "bug_id": 34896, "attachment_id": null, "id": 99084, "time": "2007-02-07T18:35:10Z", "creator": "bjorn@sourcelabs.com", "creation_time": "2007-02-07T18:35:10Z", "is_private": false, "text": "FYI - I tried to reproduce this with Tomcat 5.5.20 and mysql using the jdbc\nconnector, and failed -- behavior was as expected. This must be pretty specific\nto the JNDI driver, and I don't have a Sybase DB to test with. I did try\npreventing garbage collection on the connection, to no avail."}, {"count": 3, "tags": [], "creator": "bayard@apache.org", "text": "Created attachment 19543\nFix\n\nAttached fix. From inspection, it's definitely a problem. \n\nThe init() method is only called by the constructor and release(), so I've\ndeleted the init() method. All of its statements are in the constructor, and\ntwo are then added to the release.\n\nThere is also a bug concerning the isolation once the Connection bug is fixed.\nIt won't get set back to the origIsolation but will always become\nTRANSACTION_NONE. So I've fixed that by adding it to the doFinally() rather\nthan the release().", "id": 99086, "time": "2007-02-07T20:58:59Z", "bug_id": 34896, "creation_time": "2007-02-07T20:58:59Z", "is_private": false, "attachment_id": 19543}, {"count": 4, "tags": [], "text": "Applying fix:\n\nsvn ci -m \"Applying fix from 34896\" src/\n\nSending       \nsrc/org/apache/taglibs/standard/tag/common/sql/TransactionTagSupport.java\nTransmitting file data .\nCommitted revision 504780.\n\nNeed to make sure nothing has been broken in the standard-examples (or in your\nattempted reproduction Bjorn?) before closing as FIXED.", "is_private": false, "bug_id": 34896, "id": 99087, "time": "2007-02-07T21:01:02Z", "creator": "bayard@apache.org", "creation_time": "2007-02-07T21:01:02Z", "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 34896, "attachment_id": null, "id": 99132, "creation_time": "2007-02-08T12:59:34Z", "time": "2007-02-08T12:59:34Z", "creator": "bjorn@sourcelabs.com", "text": "Henri, your fix does not change the behavior of my attempted repro, so I don't\nthink it broke anything. :)", "is_private": false}]