[{"count": 0, "tags": [], "creator": "peterj@liberate.com", "attachment_id": null, "id": 21912, "time": "2002-08-28T17:29:37Z", "bug_id": 12134, "creation_time": "2002-08-28T17:29:37Z", "is_private": false, "text": "The replacefilter does not require an end token to be present when it does its\nreplacements, and winds up getting \"out of sync\" if there are an odd number of\nbegin tokens.  For example:\n\nbuild.xml fragment:\n<copy todir=\"/tmp\">\n  <fileset dir=\".\" includes=\"test*.java\"/>\n  <filterchain>\n    <replacetokens>\n      <token key=\"FOO\" value=\"bar\"/>\n    </replacetokens>\n  </filterchain>\n</copy>\n\ntest1.java:\n/**\n * @author Me\n * This is not replaced: @FOO@\n */\n\ntest2.java:\n/**\n * @author Me\n * @author You\n * This is replaced: @FOO@\n */"}, {"count": 1, "tags": [], "creator": "peterj@liberate.com", "attachment_id": 2862, "id": 21923, "time": "2002-08-28T21:11:45Z", "bug_id": 12134, "creation_time": "2002-08-28T21:11:45Z", "is_private": false, "text": "Created attachment 2862\nHandles case where begintoken==endtoken"}, {"count": 2, "tags": [], "bug_id": 12134, "attachment_id": null, "text": "The patch I just attached handles the case where begintoken == endtoken; in all\nother cases it should behave identically to the original version.\n\nThe change is basically this: when a token candidate is found, the last\ncharacter (endToken) is saved.  If the candidate is actually a token, it is\nreplaced as always.  If it is not a token, the next loop will use the saved\ncharacter as if it were a new beginToken.\n\n(It occurs that this might have been easier with a PushBackReader.  Feel free to\nchange the implementation if desired.)\n\nTest cases are forthcoming; manual testing suggests everything works, I just\nneed to automate it.", "id": 21924, "time": "2002-08-28T21:23:28Z", "creator": "peterj@liberate.com", "creation_time": "2002-08-28T21:23:28Z", "is_private": false}, {"count": 3, "text": "OK, fixed - try the next nightly build or the upcoming beta. I did not use your\npatch directly since I wanted to make a few other changes (elimination of string\ncreations, etc). Should also now handle overlapping token candidates where the\nbegin token is not the same as the end token\n\ne.g.\n\n@author @AUTHNAME#\n\n", "bug_id": 12134, "attachment_id": null, "id": 31598, "time": "2003-02-19T14:21:42Z", "creator": "conor@apache.org", "creation_time": "2003-02-19T14:21:42Z", "tags": [], "is_private": false}]