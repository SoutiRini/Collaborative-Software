[{"attachment_id": null, "tags": [], "creator": "stig@vangen.org", "is_private": false, "count": 0, "id": 158214, "time": "2012-04-20T07:02:19Z", "bug_id": 53112, "creation_time": "2012-04-20T07:02:19Z", "text": "This problem is related to this issue:\nhttps://issues.apache.org/bugzilla/show_bug.cgi?id=50753\n\nThe first asynchronous request lets you set the response header, and that response gets parsed correctly on the client side. The following requests in the same async context does not let you set the response headers, and Tomcat seem to give some default headers only. In addition, it also switches to chunked transfer encoding because of missing content length. This results in errors in clients trying to read the response from a Tomcat context. These problems does not occur when using Jetty using the same Servlet 3.0 API's.\n\nThis problem was discovered while updating the BOSH plugin for the Vysper project:\nhttps://issues.apache.org/jira/browse/VYSPER-307\n\nThe same problem was observed in both Tomcat version 7.0.25 and 7.0.27."}, {"count": 1, "tags": [], "bug_id": 53112, "is_private": false, "text": "This bug report does not make sense. There is only ever one request/response per AsyncContext.", "id": 158772, "time": "2012-05-03T08:19:58Z", "creator": "markt@apache.org", "creation_time": "2012-05-03T08:19:58Z", "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 53112, "attachment_id": 28729, "text": "Created attachment 28729\nTomcat backend for XMPP connection", "id": 158815, "time": "2012-05-04T11:29:30Z", "creator": "stig@vangen.org", "creation_time": "2012-05-04T11:29:30Z", "is_private": false}, {"count": 3, "text": "Created attachment 28730\nJetty backend for XMPP connection", "creator": "stig@vangen.org", "attachment_id": 28730, "id": 158816, "time": "2012-05-04T11:30:03Z", "bug_id": 53112, "creation_time": "2012-05-04T11:30:03Z", "tags": [], "is_private": false}, {"count": 4, "tags": [], "bug_id": 53112, "is_private": false, "text": "My original report might not have been too clear. I'll try to clearify a bit. I've added two attachments to this bug, logs that describes how both Jetty and Tomcat handles the same code for handling XMPP requests.\n\nFirst off, with \"request\" I meant several blocks of communication back and forth between the server and client in the same HTTP request. Using async communication, it is possible to leave the connection open, and let the client and server talk to eachother at any time. Between each communication block, the request is \"ended\" as a normal request would be, using the content-length header to determine where the request and response ends. This is supported by both Tomcat and Jetty. The difference is that while Jetty correctly hands out the headers you configure every single time, this only works for the first block for Tomcat.\n\nThe request would work as follows:\n\n* Client connects to server to servlet defined with async support\n* Client sends first request as normal\n* Server responds with content-length\n* AsyncContext.dispatch()\n* Client reads response, leaves connection open\n* Client sends new \"request\" in the same manner as last time\n* Server again responds with content-length\n* AsyncContext.dispatch()\n* Client reads response, leaves connection open\n...\n\nThis is how I've understood that this should work, and this is how Jetty currently does it. It might be that I'm wrong, so please correct me.", "id": 158818, "time": "2012-05-04T11:48:18Z", "creator": "stig@vangen.org", "creation_time": "2012-05-04T11:48:18Z", "attachment_id": null}]