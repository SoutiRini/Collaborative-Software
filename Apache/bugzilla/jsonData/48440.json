[{"text": "I have a apache 2.2.14 running Solaris 5.10\nApache is built using SunStudio 12 Update 1. \nOn this setup I have a custom module and wlproxy(mod_wl_22.so)\nWhen I request pages which are delivered via wlproxy(mod_wl_22.so) I see segmentation faults. The requests are server properly but at the end of every request I see the following error\n\n[Wed Dec 23 21:08:52 2009] [notice] child pid 11624 exit signal Segmentation fault (11)\n\nFollowing is what I see when I opened the core in dbx \n\nbash-3.00# dbx httpd /tmp/apache2-gdb-dump/core\nFor information about new features see `help changes'\nTo remove this message, put `dbxenv suppress_startup_message 7.7' in your .dbxrc\nReading httpd\ncore file header read successfully\nReading ld.so.1\nReading libm.so.2\nReading libaprutil-1.so.0.3.9\nReading libexpat.so.0.1.0\nReading libapr-1.so.0.3.9\nReading libuuid.so.1\nReading libsendfile.so.1\nReading librt.so.1\nReading libsocket.so.1\nReading libnsl.so.1\nReading libpthread.so.1\nReading libc.so.1\nReading libaio.so.1\nReading libmd.so.1\nReading libc_psr.so.1\nReading libCrun.so.1\nReading mod_alias.so\nReading mod_wl_22.so\nReading mod_cwmp.so\nt@1 (l@1) program terminated by signal SEGV (Segmentation Fault)\n0xff0465c8: __pollsys+0x0008:   blu      _cerror        ! 0xfefa34c0\n(dbx) where\ncurrent thread: t@1\n=>[1] __pollsys(0x4, 0x0, 0xffbf9820, 0x0, 0xffbf9820, 0x0), at 0xff0465c8\n  [2] _pollsys(0xffbf97b8, 0x0, 0xffbf9820, 0x0, 0x0, 0x0), at 0xff03965c\n  [3] _pselect(0xffbf97b8, 0xff0723d0, 0xff0723d0, 0x0, 0xffbf9820, 0x0), at 0xfefe6b10\n  [4] _select(0x0, 0x0, 0x0, 0x0, 0xffbf9888, 0xf4240), at 0xfefe6e88\n  [5] apr_sleep(0x0, 0xf4240, 0x1, 0x1, 0x0, 0x40000), at 0xff224fe0\n  [6] ap_wait_or_timeout(0x11000, 0xffffffff, 0xffbf9a30, 0xa93e8, 0x7, 0xffbf99b4), at 0x4a9e8\n  [7] server_main_loop(0x9e5cc, 0x3f, 0x0, 0x9d324, 0x1f, 0x20), at 0x6ba6c\n  [8] ap_mpm_run(0x20, 0x9ea40, 0x9d320, 0x0, 0x20, 0x60), at 0x6c840\n  [9] main(0x9bb98, 0x9cc00, 0x7c608, 0x9ce1c, 0x9cc00, 0x7c504), at 0x299dc\n\nHelp me out please.", "tags": [], "bug_id": 48440, "is_private": false, "count": 0, "id": 133091, "time": "2009-12-23T08:49:11Z", "creator": "aurabhi@yahoo.com", "creation_time": "2009-12-23T08:49:11Z", "attachment_id": null}, {"count": 1, "tags": [], "text": "Could this be Bug 48030?\n\nYour dbx information is unhelpful: it just shows the parent process.  If it's not the same as PR 48030, you should try to diagnose the role of your third-party module.", "attachment_id": null, "bug_id": 48440, "id": 133094, "time": "2009-12-23T09:27:16Z", "creator": "nick@webthing.com", "creation_time": "2009-12-23T09:27:16Z", "is_private": false}, {"text": "Is there a way to get a dump from the child which exits due to the SEGV or a\nway to force apache to dump core for every SEGV?\n\nAny help would be really gr8. I am totally new to this field. \nThank you!\n\n\n(In reply to comment #1)\n> Could this be Bug 48030?\n> \n> Your dbx information is unhelpful: it just shows the parent process.  If it's\n> not the same as PR 48030, you should try to diagnose the role of your\n> third-party module.", "tags": [], "bug_id": 48440, "is_private": false, "count": 2, "id": 133105, "time": "2009-12-23T18:59:21Z", "creator": "aurabhi@yahoo.com", "creation_time": "2009-12-23T18:59:21Z", "attachment_id": null}, {"count": 3, "tags": [], "creator": "rpluem@apache.org", "attachment_id": null, "id": 133106, "time": "2009-12-24T06:25:15Z", "bug_id": 48440, "creation_time": "2009-12-24T06:25:15Z", "is_private": false, "text": "http://httpd.apache.org/docs/2.2/mod/mpm_common.html#coredumpdirectory\nhttp://httpd.apache.org/dev/debugging.html"}, {"count": 4, "tags": [], "creator": "aurabhi@yahoo.com", "attachment_id": null, "is_private": false, "id": 133143, "time": "2009-12-28T02:51:30Z", "bug_id": 48440, "creation_time": "2009-12-28T02:51:30Z", "text": "I could get the stack using dbx of a particular thread which crashes. I see that apr_file_read throws the SEGV. \n\nThe problem is the content from the file are read and request gets processed. I get response back on my client but I see this SEGV error always. At times I see that request times out. \n\nI tried using std file io instead of apr_file io. In which case I see an error in __fseek(); \n\n\n(dbx) cont\nt@65 (l@65) signal SEGV (no mapping at the fault address) in apr_file_read at 0xff212fcc\n0xff212fcc: apr_file_read+0x0020:       ld       [%i0 + 32], %g3\n(dbx) where\ncurrent thread: t@65\n=>[1] apr_file_read(0xffffffff, 0x1c7c38, 0xfad7bb0c, 0x0, 0xbc6, 0x0), at 0xff212fcc\n  [2] apr_file_read_full(0xffffffff, 0x1c7c38, 0xbc6, 0xfad7bb88, 0xfad7bb0c, 0x0), at 0xff211be4\n  [3] my_input_filter(0x1ba8b0, 0x1bbc98, 0xbc7, 0x0, 0x1c7c38, 0x0), at 0xfeee46bc\n  [4] ap_discard_request_body(0x1b2cf0, 0x4, 0x0, 0xc, 0x0, 0x0), at 0x60334\n  [5] ap_finalize_request_protocol(0x1b2cf0, 0x1b2cf0, 0xfeee5ab4, 0x14, 0x1258e0, 0x1b2cf0), at 0x32e3c\n  [6] my_handler(0xfffffffe, 0x4, 0x0, 0xc, 0x0, 0x0), at 0xfeee3a38\n  [7] ap_run_handler(0x1b6050, 0x7, 0x126470, 0x9dc80, 0x12649c, 0x1), at 0x40dc4\n  [8] ap_invoke_handler(0x1b6050, 0x0, 0x126544, 0x0, 0x1258e0, 0x0), at 0x413dc\n  [9] ap_process_request(0x1b6050, 0x4, 0x0, 0x9cc00, 0x0, 0x1b6050), at 0x5d898\n  [10] ap_process_http_connection(0x1ac2d8, 0x1b6050, 0xafde0, 0x9cd98, 0x80000000, 0x9cc00), at 0x5a418\n  [11] ap_process_connection(0x1ac2d8, 0x1ac028, 0x1268b8, 0x0, 0x9e4a0, 0x9e400), at 0x490bc\n  [12] worker_thread(0x129958, 0x3be, 0x1afff8, 0x1ac2d8, 0x9d340, 0x3e), at 0x6aad0"}, {"count": 5, "tags": [], "creator": "rpluem@apache.org", "attachment_id": null, "id": 133149, "time": "2009-12-28T06:50:51Z", "bug_id": 48440, "creation_time": "2009-12-28T06:50:51Z", "is_private": false, "text": "(In reply to comment #4)\n> I could get the stack using dbx of a particular thread which crashes. I see\n> that apr_file_read throws the SEGV. \n> \n> The problem is the content from the file are read and request gets processed. I\n> get response back on my client but I see this SEGV error always. At times I see\n> that request times out. \n> \n> I tried using std file io instead of apr_file io. In which case I see an error\n> in __fseek(); \n> \n> \n> (dbx) cont\n> t@65 (l@65) signal SEGV (no mapping at the fault address) in apr_file_read at\n> 0xff212fcc\n> 0xff212fcc: apr_file_read+0x0020:       ld       [%i0 + 32], %g3\n> (dbx) where\n> current thread: t@65\n> =>[1] apr_file_read(0xffffffff, 0x1c7c38, 0xfad7bb0c, 0x0, 0xbc6, 0x0), at\n> 0xff212fcc\n>   [2] apr_file_read_full(0xffffffff, 0x1c7c38, 0xbc6, 0xfad7bb88, 0xfad7bb0c,\n> 0x0), at 0xff211be4\n>   [3] my_input_filter(0x1ba8b0, 0x1bbc98, 0xbc7, 0x0, 0x1c7c38, 0x0), at\n> 0xfeee46bc\n\nThis looks like a bug in my_input_filter in a way that it calls apr_file_read_full with invalid parameters. my_input_filter is no code from httpd. Please remove this filter and let us know if the segmentation fault goes away. If not please provide a stack trace without my_input_filter."}, {"count": 6, "tags": [], "creator": "aurabhi@yahoo.com", "attachment_id": null, "id": 133151, "time": "2009-12-28T08:14:54Z", "bug_id": 48440, "creation_time": "2009-12-28T08:14:54Z", "is_private": false, "text": "(In reply to comment #5)\n> (In reply to comment #4)\n> > I could get the stack using dbx of a particular thread which crashes. I see\n> > that apr_file_read throws the SEGV. \n> > \n> > The problem is the content from the file are read and request gets processed. I\n> > get response back on my client but I see this SEGV error always. At times I see\n> > that request times out. \n> > \n> > I tried using std file io instead of apr_file io. In which case I see an error\n> > in __fseek(); \n> > \n> > \n> > (dbx) cont\n> > t@65 (l@65) signal SEGV (no mapping at the fault address) in apr_file_read at\n> > 0xff212fcc\n> > 0xff212fcc: apr_file_read+0x0020:       ld       [%i0 + 32], %g3\n> > (dbx) where\n> > current thread: t@65\n> > =>[1] apr_file_read(0xffffffff, 0x1c7c38, 0xfad7bb0c, 0x0, 0xbc6, 0x0), at\n> > 0xff212fcc\n> >   [2] apr_file_read_full(0xffffffff, 0x1c7c38, 0xbc6, 0xfad7bb88, 0xfad7bb0c,\n> > 0x0), at 0xff211be4\n> >   [3] my_input_filter(0x1ba8b0, 0x1bbc98, 0xbc7, 0x0, 0x1c7c38, 0x0), at\n> > 0xfeee46bc\n> \n> This looks like a bug in my_input_filter in a way that it calls\n> apr_file_read_full with invalid parameters. my_input_filter is no code from\n> httpd. Please remove this filter and let us know if the segmentation fault goes\n> away. If not please provide a stack trace without my_input_filter.\n\nmy_input_filter is a filter that I have added which modifies the BB. I can not take this filter away as this my application requires this to talk to a weblogic apache plugin. \n\nIf the seg fault was where I do apr_file_read_full then request flow should fail at that point but whats happening is the requests complete and the response is sent back to the client. I can see all the debug messages that I have included in the debug log. I have handlers for each of the phases including the log_transaction phase and I see all the handlers being invoked and processed successfully. \n\nHas this got something to do with https://issues.apache.org/bugzilla/show_bug.cgi?id=48029?"}]