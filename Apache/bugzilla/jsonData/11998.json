[{"count": 0, "tags": [], "creator": "msweiger@cisco.com", "text": "The function spot_cookie() in mod_usertrack does not allow Apache to set a new \ncookie that is a substring of another, already existent cookie.  The code that \ndoes the checking to see if the Apache cookie has previously been set is \nwrong.  Suppose the following directives are set:\n\nCookieTracking on\nCookieDomain .cisco.com\nCookieName cpc\nCookieExpires \"25 years\"\n\nSuppose that another application has previously created a persistent cookie \ncalled \"cpc3\".  cpc3 will come across in the http Cookie: header string and the \nspot cookie code will fail as follows:\n\nThe code calls the C library strstr function \n\nstrstr(\"cpc3=2039839\", \"cpc\")\n\nwhich finds the new cookie \"cpc\" string as a substring match on the first three \ncharacters of \"cpc3\".  This code wrongly assumes that we have found the cookie \nbecause it fails to check whether the next character in the string is an \"=\".  \nInstead it just assumes it is and skips the next character, in this case \"3\", \nand uses the remainder of the cookie string as the value field, which is also \nwrong because in this case it has a leading \"=\".  I have verified the above \nscenario here at Cisco on a fresh install of Apache 1.3.26 and this is clearly \na major bug.  In general, Apache will silently fail to set cookies if the \ncookie being set is a substring of an existing persistent cookie. \n\nThe code for spot_cookie is included below:\n\nstatic int spot_cookie(request_rec *r)\n{\n    cookie_dir_rec *dcfg = ap_get_module_config(r->per_dir_config,\n\t\t\t\t\t\t&usertrack_module);\n    const char *cookie;\n    char *value;\n\n    if (!dcfg->enabled) {\n        return DECLINED;\n    }\n\n    if ((cookie = ap_table_get(r->headers_in, \"Cookie\")))\n        if ((value = strstr(cookie, dcfg->cookie_name))) {\n            char *cookiebuf, *cookieend;\n\n            value += strlen(dcfg->cookie_name) + 1;  /* Skip over the '=' */\n            cookiebuf = ap_pstrdup(r->pool, value);\n            cookieend = strchr(cookiebuf, ';');\n            if (cookieend)\n                *cookieend = '\\0';      /* Ignore anything after a ; */\n\n            /* Set the cookie in a note, for logging */\n            ap_table_setn(r->notes, \"cookie\", cookiebuf);\n\n            return DECLINED;    /* There's already a cookie, no new one */\n        }\n    make_cookie(r);\n    return OK;                  /* We set our cookie */\n}", "id": 21653, "time": "2002-08-23T22:28:14Z", "bug_id": 11998, "creation_time": "2002-08-23T22:28:14Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 11998, "attachment_id": null, "text": "Is this bug ever going to be assigned to anyone?  There has been no activity for \nover 1 month.\n\nMark Sweiger\nmsweiger@cisco.com\nCisco Systems\n408-527-1663", "id": 23576, "time": "2002-09-27T19:07:04Z", "creator": "msweiger@cisco.com", "creation_time": "2002-09-27T19:07:04Z", "is_private": false}, {"count": 2, "tags": [], "creator": "trawick@apache.org", "attachment_id": null, "id": 23578, "time": "2002-09-27T19:16:15Z", "bug_id": 11998, "creation_time": "2002-09-27T19:16:15Z", "is_private": false, "text": "Just FYI regarding the PR database:\n\nWe don't have a paid staff to which PRs can be assigned to people\nwho are then compelled to fix it.  Instead, a volunteer will work on it \nif/when they become interested.\n\nA working patch attached to the PR increases the likelihood that a\nfix will be committed.\n"}, {"count": 3, "tags": [], "bug_id": 11998, "attachment_id": null, "is_private": false, "id": 44546, "time": "2003-09-23T22:37:53Z", "creator": "jwoolley@apache.org", "creation_time": "2003-09-23T22:37:53Z", "text": "\n\n*** This bug has been marked as a duplicate of 16661 ***"}]