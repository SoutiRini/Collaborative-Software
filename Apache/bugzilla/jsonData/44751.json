[{"count": 0, "tags": [], "creator": "brent.pacheco@cerner.com", "text": "Created attachment 21779\nThe WMFImage that cannot be converted\n\nWhen processing the attached WMF file using the WMFTranscoder, an IllegalArgumentException is thrown with the following text: \"Dimensions (width=23789568 height=65536) are too large.\"  It appears that this IllegalArgumentException is being thrown from the java.awt.image.BufferedImage class because the width * height is greater than the capacity of the integer used to store the dimensions.  The actual height and width of the WMF is nowhere near this large, however.", "id": 115301, "time": "2008-04-03T12:59:03Z", "bug_id": 44751, "creation_time": "2008-04-03T12:59:03Z", "is_private": false, "attachment_id": 21779}, {"count": 1, "tags": [], "creator": "herve.girod@club-internet.fr", "attachment_id": null, "id": 128496, "time": "2009-07-04T09:16:55Z", "bug_id": 44751, "creation_time": "2009-07-04T09:16:55Z", "is_private": false, "text": "I'm back to Batik ;)\n\nThe bitmap image embedded in the WMF File is defined as having a very big and inconsistent width and height (width=23789568 height=65536). I have a working patch which avoids to return an Exception and returns gracefully in these cases, the problem is that the WMF Record itself defines another inconsistent 0 width, so I don't now where to get the correct width for this image. I think that in this case one must infer the width and height from the available size of the bitmap in the Metafile.\n\nIn all cases this WMF image is not correct."}, {"count": 2, "tags": [], "creator": "herve.girod@club-internet.fr", "attachment_id": null, "id": 128500, "time": "2009-07-05T02:15:38Z", "bug_id": 44751, "creation_time": "2009-07-05T02:15:38Z", "is_private": false, "text": "I will send a patch as soon as I can, but these lines in WMFRecordStore:\n\nif (_bext && functionId == WMFConstants.META_SETWINDOWEXT) {\n   vpW = width;\n   vpH = height;\n   if (! isotropic) scaleXY = (float)vpW / (float)vpH;\n   vpW = (int)(vpW * scaleXY);                      \n   _bext = false;\n}\n\nshould be changed to:\n\nif (functionId == WMFConstants.META_SETWINDOWEXT) {\n   if ((width > 0) && (height > 0)) {\n       vpW = width;\n       vpH = height;\n       if (! isotropic) scaleXY = (float)vpW / (float)vpH;\n       vpW = (int)(vpW * scaleXY);  \n   }                    \n}\n\nOf course, _bext is not useful anymore. The check for width and height being greater than 0 is \"just in case\". There are so many faulty WMF files in the wild ;)"}, {"count": 3, "tags": [], "creator": "herve.girod@club-internet.fr", "text": "(In reply to comment #2)\n> I will send a patch as soon as I can, but these lines in WMFRecordStore:\n> \n> if (_bext && functionId == WMFConstants.META_SETWINDOWEXT) {\n>    vpW = width;\n>    vpH = height;\n>    if (! isotropic) scaleXY = (float)vpW / (float)vpH;\n>    vpW = (int)(vpW * scaleXY);                      \n>    _bext = false;\n> }\n> \n> should be changed to:\n> \n> if (functionId == WMFConstants.META_SETWINDOWEXT) {\n>    if ((width > 0) && (height > 0)) {\n>        vpW = width;\n>        vpH = height;\n>        if (! isotropic) scaleXY = (float)vpW / (float)vpH;\n>        vpW = (int)(vpW * scaleXY);  \n>    }                    \n> }\n> \n> Of course, _bext is not useful anymore. The check for width and height being\n> greater than 0 is \"just in case\". There are so many faulty WMF files in the\n> wild ;)\n\nSorry answered for the wrong bug...", "id": 128501, "time": "2009-07-05T02:16:48Z", "bug_id": 44751, "creation_time": "2009-07-05T02:16:48Z", "is_private": false, "attachment_id": null}]