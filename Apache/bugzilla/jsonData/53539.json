[{"count": 0, "tags": [], "bug_id": 53539, "text": "The content type and character set are changing when the content is served from a stale disk_cache (due to original source (tomcat) being unavailable). HTTP headers showing changes for same CSS file are listed below.\n\nI installed Apache 2.4.2 from source on RHEL6.2.\n\n-----------------------\nWhen tomcat available\n-----------------------\nDate\tTue, 19 Jun 2012 14:18:40 GMT\nAge\t6\nConnection\tKeep-Alive\nContent-Length\t339\nLast-Modified\tMon, 18 Jun 2012 15:50:24 GMT\nServer\tWeb Server\nETag\tW/\"339-1340034624000\"\nContent-Type\ttext/css;charset=utf-8\nAccept-Ranges\tbytes\nKeep-Alive\ttimeout=3, max=99\n\n-----------------------\nWhen tomcat unavailable - from disk_cache\n-----------------------\nDate\tTue, 19 Jun 2012 08:48:53 GMT\nConnection\tclose\nContent-Length\t339\nLast-Modified\tMon, 18 Jun 2012 15:50:24 GMT\nServer\tApache-Coyote/1.1\nETag\tW/\"339-1340034624000\"\nWarning\t111 Revalidation failed\nContent-Type\ttext/html; charset=iso-8859-1\nAccept-Ranges\tbytes", "id": 160601, "attachment_id": null, "creator": "p.beckett@uea.ac.uk", "creation_time": "2012-07-12T08:33:36Z", "time": "2012-07-12T08:33:36Z", "is_private": false}, {"count": 1, "tags": [], "creator": "rpluem@apache.org", "text": "Can you please check if r1132816 fixes your problem? The patch is at http://svn.apache.org/viewvc/httpd/httpd/trunk/modules/cache/mod_cache.c?r1=1132816&r2=1132815&pathrev=1132816&view=patch", "id": 160605, "time": "2012-07-12T13:27:24Z", "bug_id": 53539, "creation_time": "2012-07-12T13:27:24Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "text": "(In reply to comment #1)\n> Can you please check if r1132816 fixes your problem? The patch is at\n> http://svn.apache.org/viewvc/httpd/httpd/trunk/modules/cache/mod_cache.\n> c?r1=1132816&r2=1132815&pathrev=1132816&view=patch\n\nI have very little experience of using patch.... so sorry if this is my mistake / mis-understanding.\n\nIt looks to me like this 'change' is already in Apache 2.4.2, which I'm using, the modules/cache/mod_cache lines look like:\n\n            r->headers_out = cache->stale_handle->resp_hdrs;\n\n            ap_set_content_type(r, apr_table_get(\n                    cache->stale_handle->resp_hdrs, \"Content-Type\"));\n\n            /* add a revalidation warning */\n            warn_head = apr_table_get(r->err_headers_out, \"Warning\");\n            if ((warn_head == NULL) || ((warn_head != NULL)\n\nrunning the patch file, results in a some warnings:\n\npatch /usr/local/httpd-2.4.2/modules/cache/mod_cache.c /server-build/installers/apache_httpd/mod_cache.c.patch\npatching file /usr/local/httpd-2.4.2/modules/cache/mod_cache.c\nReversed (or previously applied) patch detected!  Assume -R? [n]\nApply anyway? [n] y\nHunk #1 succeeded at 795 with fuzz 2 (offset -48 lines).\n\n\nand a file that looks like:\n            r->headers_out = cache->stale_handle->resp_hdrs;\n\n            ap_set_content_type(r, apr_table_get(\n                    cache->stale_handle->resp_hdrs, \"Content-Type\"));\n\n            ap_set_content_type(r, apr_table_get(\n                    cache->stale_handle->resp_hdrs, \"Content-Type\"));\n\n            /* add a revalidation warning */\n            warn_head = apr_table_get(r->err_headers_out, \"Warning\");\n\n\nI haven't built or tried this, as I assume duplicating the ap_set_content_type line isn't the intention.", "is_private": false, "id": 160607, "creator": "p.beckett@uea.ac.uk", "time": "2012-07-12T13:53:49Z", "bug_id": 53539, "creation_time": "2012-07-12T13:53:49Z", "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 53539, "is_private": false, "count": 3, "id": 160608, "time": "2012-07-12T15:12:38Z", "creator": "rpluem@apache.org", "creation_time": "2012-07-12T15:12:38Z", "text": "(In reply to comment #2)\n\nYou are correct. I looked in two different locations. The patch I mentioned is already in 2.4.2. Can you please try the following one:\n\nIndex: modules/cache/mod_cache.c\n===================================================================\n--- modules/cache/mod_cache.c   (revision 1352429)\n+++ modules/cache/mod_cache.c   (working copy)\n@@ -1686,6 +1686,9 @@\n\n             r->err_headers_out = cache->stale_handle->resp_hdrs;\n\n+            ap_set_content_type(r, apr_table_get(\n+                                cache->stale_handle->resp_hdrs, \"Content-Type\"));\n+\n             /* add a revalidation warning */\n             warn_head = apr_table_get(r->err_headers_out, \"Warning\");\n             if ((warn_head == NULL) || ((warn_head != NULL)"}, {"attachment_id": null, "tags": [], "bug_id": 53539, "is_private": false, "count": 4, "id": 160622, "time": "2012-07-13T10:26:56Z", "creator": "p.beckett@uea.ac.uk", "creation_time": "2012-07-13T10:26:56Z", "text": "Thanks for your help. I've applied this patch and rebuilt, but I'm still seeing the same problem:\n\nInitially CSS pages from cache have:\nHTTP request status: 200 (OK)\nName\tValue\nDate\tFri, 13 Jul 2012 09:14:38 GMT\nAge\t2815\nContent-Length\t374\nLast-Modified\tThu, 12 Jul 2012 15:27:06 GMT\nServer\tWeb Server\nETag\tW/\"374-1342106826000\"\nContent-Type\ttext/css;charset=utf-8\nAccept-Ranges\tbytes\n\n\n\nbut once the content has become stale, the content-type / character set is changing:\nDate\tFri, 13 Jul 2012 08:27:43 GMT\nConnection\tclose\nContent-Length\t374\nLast-Modified\tThu, 12 Jul 2012 15:27:06 GMT\nServer\tApache-Coyote/1.1\nETag\tW/\"374-1342106826000\"\nWarning\t111 Revalidation failed\nContent-Type\ttext/html; charset=iso-8859-1\nAccept-Ranges\tbytes\n\n\nThanks,\nPaul"}, {"count": 5, "tags": [], "bug_id": 53539, "attachment_id": null, "text": "Some more information:\n\n1) Reproduction\n===============\n\nI can easily reproduce with 2.4.x head using\n\nListen 9080\nProxyPass / http://localhost:8080/\nCacheRoot /some/existing/path/cache\nCacheEnable disk  /\n\nand loading mod_proxy, mod_proxy_http, mod_cache and mod_cache_disk. I had many more modules loaded but hope they don't interfere.\n\nOn port 8080 there was a Tomcat running.\n\nTo reproduce, start Tomcat and retrieve some CSS from Tomcat, e.g. the tomcat.css from the default Tomcat ROOT context:\n\ncurl -v -D - http://localhost:9080/tomcat.css\n\nPart of the response headers will be\n\nContent-Type: text/css\n\nNow stop tomcat and send the same request with the additional Header\n\nCache-Control: max-age=0\n\ncurl -v -D - -H 'Cache-Control: max-age=0' http://localhost:9080/tomcat.css\n\nYou will get\n\nContent-Type: text/html; charset=iso-8859-1\n\n\n2) Partial analysis\n===================\n\nI added some log outputs to check where the wrong content type is set.\n\n- proxy_util fails to connect to the stopped Tomcat\n\n[Wed Aug 15 10:55:37.446443 2012] [proxy:error] [pid 13963:tid 27] (146)Connection refused: AH00957: HTTP: attempt to connect to 127.0.0.1:8080 (localhost) failed\n\n- proxy_util disables the worker\n\n[Wed Aug 15 10:55:37.446559 2012] [proxy:error] [pid 13963:tid 27] AH00959: ap_proxy_connect_backend disabling worker for (localhost) for 60s\n\n- mod_proxy_http notices the failure, the proxy handler will return with HTTP_SERVICE_UNAVAILABLE\n\n[Wed Aug 15 10:55:37.446582 2012] [proxy_http:error] [pid 13963:tid 27] [client 127.0.0.1:38783] AH01114: HTTP: failed to make connection to backend: localhost\n\n- cleanup in proxy_util\n\n[Wed Aug 15 10:55:37.446602 2012] [proxy:debug] [pid 13963:tid 27] proxy_util.c(1991): AH00943: HTTP: has released connection for (localhost)\n\n- process_async_request calls ap_die() (log statement added)\n\n[Wed Aug 15 10:55:37.446663 2012] [http:error] [pid 13963:tid 27] [client 127.0.0.1:38783] AH99999: Calling ap_die for 503 from process_async_request\n\n- ap_die() calls ap_send_ap_send_error_response() (log statement added)\n\n[Wed Aug 15 10:55:37.446707 2012] [http:error] [pid 13963:tid 27] [client 127.0.0.1:38783] AH99999: Calling ap_send_error_response from ap_die\n\n- ap_send_error_response() calls ap_run_insert_error_filter() (log statement added)\n\n[Wed Aug 15 10:55:37.446739 2012] [http:error] [pid 13963:tid 27] [client 127.0.0.1:38783] AH99999: In ap_send_error_response calling ap_run_insert_error_filter\n\n- mod_cache sets correct Content-Type text/css (log statement added)\n\n[Wed Aug 15 10:55:37.446762 2012] [cache:error] [pid 13963:tid 27] [client 127.0.0.1:38783] AH99999: Setting Content-Type to text/css\n\n- end of ap_run_insert_error_filter() (log statement added)\n\n[Wed Aug 15 10:55:37.446821 2012] [http:error] [pid 13963:tid 27] [client 127.0.0.1:38783] AH99999: In ap_send_error_response done ap_run_insert_error_filter\n- ap_send_error_response() sets wrong Content-Type text/html in \"if (!r->assbackwards) ...\" branch around line 1230 in modules/http/http_protocol.c\n\n[Wed Aug 15 10:55:37.446875 2012] [http:error] [pid 13963:tid 27] [client 127.0.0.1:38783] AH99999: Setting Content-Type in protocol to text/html; charset=iso-8859-1\n\n- Finally some more cache activity but no more calls to ap_set_content_type() (the cache had already set its content type early)\n\n[Wed Aug 15 10:55:37.446994 2012] [cache:debug] [pid 13963:tid 27] mod_cache.c(564): [client 127.0.0.1:38783] AH00763: cache: running CACHE_OUT filter\n[Wed Aug 15 10:55:37.447037 2012] [cache:debug] [pid 13963:tid 27] mod_cache.c(586): [client 127.0.0.1:38783] AH00764: cache: serving /tomcat.css\n\nI do not know how to proceed from here, e.g. whether we should have not entered ap_send_error_response() or the overwriting of the content type there needs to be conditional, possibly suppressed by some env var or similar.\n\nAny hints?", "id": 161415, "time": "2012-08-15T09:20:49Z", "creator": "rainer.jung@kippdata.de", "creation_time": "2012-08-15T09:20:49Z", "is_private": false}, {"attachment_id": null, "tags": [], "bug_id": 53539, "is_private": false, "count": 6, "id": 161418, "time": "2012-08-15T09:43:04Z", "creator": "rpluem@apache.org", "creation_time": "2012-08-15T09:43:04Z", "text": "(In reply to comment #5)\n> Some more information:\n> \n> 1) Reproduction\n> ===============\n> \n> I can easily reproduce with 2.4.x head using\n> \n\nHave you checked with or without r1361153?"}, {"count": 7, "tags": [], "creator": "rainer.jung@kippdata.de", "text": "> Have you checked with or without r1361153?\n\nWith it.\n\nThe line is executed and sets the content type during the run of ap_run_insert_error_filter() called by ap_send_error_response(). But after that still in ap_send_error_response() the content type is overwritten around line 1230 with text/html (if !r->assbackwards).\n\nRegards,\n\nRainer", "id": 161419, "time": "2012-08-15T09:52:12Z", "bug_id": 53539, "creation_time": "2012-08-15T09:52:12Z", "is_private": false, "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 53539, "is_private": false, "count": 8, "id": 161420, "time": "2012-08-15T09:56:21Z", "creator": "rpluem@apache.org", "creation_time": "2012-08-15T09:56:21Z", "text": "(In reply to comment #6)\n> (In reply to comment #5)\n> > Some more information:\n> > \n> > 1) Reproduction\n> > ===============\n> > \n> > I can easily reproduce with 2.4.x head using\n> > \n> \n> Have you checked with or without r1361153?\n\nOk forget this. Should have read more carefully through your analysis. How about:\n\nIndex: http_protocol.c\n===================================================================\n--- http_protocol.c     (revision 1373239)\n+++ http_protocol.c     (working copy)\n@@ -1221,18 +1221,21 @@\n         r->content_encoding = NULL;\n         r->clength = 0;\n\n-        if (apr_table_get(r->subprocess_env,\n-                          \"suppress-error-charset\") != NULL) {\n-            core_request_config *request_conf =\n-                        ap_get_core_module_config(r->request_config);\n-            request_conf->suppress_charset = 1; /* avoid adding default\n-                                                 * charset later\n-                                                 */\n-            ap_set_content_type(r, \"text/html\");\n+        /* Only set content type if none is already set, e.g. by mod_cache */\n+        if (!r->content_type) {\n+            if (apr_table_get(r->subprocess_env,\n+                              \"suppress-error-charset\") != NULL) {\n+                core_request_config *request_conf =\n+                            ap_get_core_module_config(r->request_config);\n+                request_conf->suppress_charset = 1; /* avoid adding default\n+                                                     * charset later\n+                                                     */\n+                ap_set_content_type(r, \"text/html\");\n+            }\n+            else {\n+                ap_set_content_type(r, \"text/html; charset=iso-8859-1\");\n+            }\n         }\n-        else {\n-            ap_set_content_type(r, \"text/html; charset=iso-8859-1\");\n-        }\n\n         if ((status == HTTP_METHOD_NOT_ALLOWED)\n             || (status == HTTP_NOT_IMPLEMENTED)) {\n\nAnother option would be to let mod_cache set someting into r->note and do not set the content type if found."}, {"count": 9, "tags": [], "bug_id": 53539, "attachment_id": null, "text": "(In reply to comment #8)\n> (In reply to comment #6)\n> > (In reply to comment #5)\n> > > Some more information:\n> > > \n> > > 1) Reproduction\n> > > ===============\n> > > \n> > > I can easily reproduce with 2.4.x head using\n> > > \n> > \n> > Have you checked with or without r1361153?\n> \n> Ok forget this. Should have read more carefully through your analysis. How\n> about:\n> \n> Index: http_protocol.c\n> ===================================================================\n> --- http_protocol.c     (revision 1373239)\n> +++ http_protocol.c     (working copy)\n> @@ -1221,18 +1221,21 @@\n>          r->content_encoding = NULL;\n>          r->clength = 0;\n> \n> -        if (apr_table_get(r->subprocess_env,\n> -                          \"suppress-error-charset\") != NULL) {\n> -            core_request_config *request_conf =\n> -                        ap_get_core_module_config(r->request_config);\n> -            request_conf->suppress_charset = 1; /* avoid adding default\n> -                                                 * charset later\n> -                                                 */\n> -            ap_set_content_type(r, \"text/html\");\n> +        /* Only set content type if none is already set, e.g. by mod_cache\n> */\n> +        if (!r->content_type) {\n> +            if (apr_table_get(r->subprocess_env,\n> +                              \"suppress-error-charset\") != NULL) {\n> +                core_request_config *request_conf =\n> +                            ap_get_core_module_config(r->request_config);\n> +                request_conf->suppress_charset = 1; /* avoid adding default\n> +                                                     * charset later\n> +                                                     */\n> +                ap_set_content_type(r, \"text/html\");\n> +            }\n> +            else {\n> +                ap_set_content_type(r, \"text/html; charset=iso-8859-1\");\n> +            }\n>          }\n> -        else {\n> -            ap_set_content_type(r, \"text/html; charset=iso-8859-1\");\n> -        }\n> \n>          if ((status == HTTP_METHOD_NOT_ALLOWED)\n>              || (status == HTTP_NOT_IMPLEMENTED)) {\n> \n> Another option would be to let mod_cache set someting into r->note and do\n> not set the content type if found.\n\nBoth would work, but: to me it seems the problem is something else: this content type setting code in ap_send_error_response() is part of a bigger block, that actually prepares for sending out a standard or customized error page. When reproducing the problem the code runs through all of the error page construction further down although we had already inserted the cached normal page. That error page does not go through to the client but instead is later replaced by the mod_cache OUT filter with the cached content.\n\nSo fix 1 would be setting the content type in this OUT filter:\n\nIndex: modules/cache/mod_cache.c\n===================================================================\n--- modules/cache/mod_cache.c   (revision 1373297)\n+++ modules/cache/mod_cache.c   (working copy)\n@@ -573,6 +573,10 @@\n             apr_bucket_brigade *bb = apr_brigade_create(r->pool,\n                     r->connection->bucket_alloc);\n\n+            /* restore content type of cached response */\n+            ap_set_content_type(r, apr_table_get(cache->handle->resp_hdrs,\n+                                                 \"Content-Type\"));\n+\n             /* restore status of cached response */\n             r->status = cache->handle->cache_obj->info.status;\n\n\nI checked it would work.\n\nFix 2 would be to shortcut ap_send_error_response() due to some marker a filter or module could set to indicate, that it is going to provide the error page itself. I guess there is no such mechanism defined at the moment so I would prefer to use Fix 1 on the short hand. For trunk it would be nice if we could define an enhancement like proposed as Fix 2.\n\nRegards,\n\nRainer", "id": 161421, "time": "2012-08-15T10:38:32Z", "creator": "rainer.jung@kippdata.de", "creation_time": "2012-08-15T10:38:32Z", "is_private": false}, {"count": 10, "tags": [], "creator": "rpluem@apache.org", "text": "Sounds sensible. Care to commit fix 1 and propagate it through to 2.4?", "id": 161424, "time": "2012-08-15T12:48:28Z", "bug_id": 53539, "creation_time": "2012-08-15T12:48:28Z", "is_private": false, "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 53539, "is_private": false, "count": 11, "id": 161428, "time": "2012-08-15T15:13:46Z", "creator": "rainer.jung@kippdata.de", "creation_time": "2012-08-15T15:13:46Z", "text": "Done in r1373447 for trunk and proposed for 2.4.x."}, {"count": 12, "tags": [], "creator": "p.beckett@uea.ac.uk", "is_private": false, "text": "I think this patch has made it into Apache 2.4.3, and have been using that to retest the same scenario (serving stale content from disk cache, due to Proxyied location being unavailable) I previously described.\n\nThis now works perfectly for me in Google Chrome, but I am extremely puzzled as to why Internet Explorer and Firefox are returning 503 Service Unavailable responses.\n\nThe HTTP header in chrome shows:\nHTTP request status: 200 (OK)\nName\tValue\nDate\tMon, 08 Oct 2012 13:05:17 GMT\nContent-Encoding\tgzip\nConnection\tclose\nContent-Length\t6359\nServer\tApache-Coyote/1.1\nVary\tAccept-Encoding\nStrict-Transport-Security\tmax-age=31536000; includeSubDomains, max-age=31536000; includeSubDomains\nContent-Type\ttext/html; charset=iso-8859-1\nWarning\t111 Revalidation failed\nExpires\tMon, 08 Oct 2012 14:15:18 GMT\n\nThe expires time is in the past (point where it became stale I think).\n\nI have tried accessing it from another PC to make absolutely sure I'm not seeing any effect from client PC caching stuff, and get the same difference in browser / apache behaviour.", "id": 162623, "time": "2012-10-08T15:12:03Z", "bug_id": 53539, "creation_time": "2012-10-08T15:12:03Z", "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 53539, "is_private": false, "count": 13, "id": 164914, "time": "2013-01-28T21:27:36Z", "creator": "christophe.jaillet@wanadoo.fr", "creation_time": "2013-01-28T21:27:36Z", "text": "2.4.3 was released on 18/aug/2012.\nThis has been backported on 02/oct./2012\n\nSo it will only be available in 2.4.4.\n\nCould you re-test when 2.4.4 will be available ?"}, {"count": 14, "tags": [], "creator": "sf@sfritsch.de", "is_private": false, "text": "fixed in 2.4.4, does this affect 2.2?", "id": 165617, "time": "2013-03-03T16:55:55Z", "bug_id": 53539, "creation_time": "2013-03-03T16:55:55Z", "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 53539, "is_private": false, "count": 15, "id": 166139, "time": "2013-03-25T16:50:40Z", "creator": "andy.hutson+apache@gmail.com", "creation_time": "2013-03-25T16:50:40Z", "text": "Looks like the Content-Encoding header is affected in the same way (eg adding \"gzip\" when the stale content isn't gzip'ed). Doesn't look as though the fix here covers that."}]