[{"count": 0, "tags": [], "bug_id": 47676, "attachment_id": null, "id": 129615, "time": "2009-08-11T08:57:22Z", "creator": "holger.dippel@umassd.edu", "creation_time": "2009-08-11T08:57:22Z", "is_private": false, "text": "I am attempting to use a combination of CAS, LDAP, and local group files for authentication and authorization.\n\nmod_auth_cas (from JSIG) is loaded dynamically, mod_ldap, mod_authnz_ldap, mod_authz_groupfile are compiled into our custom build of Apache.\n\nThe .htaccess file looks like this:\n\nAuthType CAS\nAuthName \"Auth Test\"\nAuthGroupFile /path/to/groupfile/.groups\nAuthLDAPUrl ldap://...?uid?sub\nAuthzLDAPAuthoritative off\nRequire ldap-user userone\nRequire group testing\n\nThe .groups file looks like this:\n\ntesting: usertwo\n\nCAS authentication is successful for both users, but userone is denied access with a 401 Authorization Required. The error log says:\n\n\"Authorization of user userone to access ... failed, reason: user doesn't appear in group file (/path/to/groupfile/.groups)\"\n\nusertwo is granted access without any problems based on the group file authorization.\n\nI've tried adding filters to the AuthLDAPUrl directive, and different Require ldap-... directives, with and with out a Satisfy Any, but this behavior is consistently the same.\n\nThe mod_authnz_ldap documentation seems to indicate under the AuthzLDAPAuthoritative directive that authorization is only passed to a lower-level module (mod_authz_groupfile in this case) if it fails with LDAP.\n\nThe actual behavior is that it is always passed on."}, {"count": 1, "tags": [], "creator": "holger.dippel@umassd.edu", "attachment_id": null, "text": "I forgot to mention that I've tested LDAP authorization without the fallback to the \"Require group\" directive and it works fine, filters, etc. deny authorization as intended.", "id": 129616, "time": "2009-08-11T09:02:50Z", "bug_id": 47676, "creation_time": "2009-08-11T09:02:50Z", "is_private": false}, {"count": 2, "tags": [], "creator": "covener@gmail.com", "attachment_id": null, "text": "(In reply to comment #0)\n> The actual behavior is that it is always passed on.\n\nFWIW It should always pass it on if the directive is set _or_ if there's no ldap-* requirement present -- maybe this clouded some of the testing?", "id": 129617, "time": "2009-08-11T09:49:28Z", "bug_id": 47676, "creation_time": "2009-08-11T09:49:28Z", "is_private": false}, {"count": 3, "tags": [], "text": "(In reply to comment #0)\n\n> Require ldap-user userone\n> Require group testing\n> \n> \"Authorization of user userone to access ... failed, reason: user doesn't\n> appear in group file (/path/to/groupfile/.groups)\"\n\nCan you attach/pastebbin loglevel debug of the authorization messages? you should see LDAP at least trying to search for userone.\n\nAre you sure no .htaccess is <location> block is changing the effective configuration?  Without the auhthzldapauthoritative, but with the addl \"require group\", do you see the authz failure reported by LDAP or someone else?", "is_private": false, "bug_id": 47676, "id": 129618, "time": "2009-08-11T09:52:46Z", "creator": "covener@gmail.com", "creation_time": "2009-08-11T09:52:46Z", "attachment_id": null}, {"count": 4, "tags": [], "creator": "holger.dippel@umassd.edu", "attachment_id": 24126, "text": "Created attachment 24126\nDebug log (access & error log)\n\nEric, thank you for the comments and quick response.\n\nI've been trying various combinations of directives between mod_authnz_ldap with filters and without, and with AuthzLDAPAuthoritative on/off. Here are some of the results:\n\n1) CAS with a user file authorization and \"Require valid-user\" works.\n2) CAS with LDAP authorization (and a filter that applies to userone or no filter) and \"Require valid-user\" works.\n3) CAS with \"Require group\" and userone member of the group works.\n4) CAS with LDAP authorization (valid filter and/or other \"Require ldap-...\" directives applicable to userone, or neither of these) and Require group (userone not a member) fails.\n\nAbout passing it on -- in the mod_authnz_ldap manual, AuthzLDAPAuthoritative:\n\"Set to off if this module should let other authorization modules attempt to authorize the user, should authorization with this module fail. Control is only passed on to lower modules if there is no DN or rule that matches the supplied user name (as passed by the client).\"\n\nThis makes me think \"Require group\" should only be tested when LDAP authorization fails.", "id": 129620, "time": "2009-08-11T11:22:19Z", "bug_id": 47676, "creation_time": "2009-08-11T11:22:19Z", "is_private": false}, {"count": 5, "tags": [], "text": "(In reply to comment #4)\n> Created an attachment (id=24126) [details]\n> Debug log (access & error log)\n\nWas the config for this the same as in the original report?   \n\nLDAP seems to be bailing out fantastically early, he should be trying to determine a DN for your web userid and doesn't even do that.  He needs to change the web userid into a DN then finally pull the \"uid\" out to match your require ldap-user IIUC.\n\n> 1) CAS with a user file authorization and \"Require valid-user\" works.\n\nI think this is actually not handeld by authz_groupfile.\n\n> 2) CAS with LDAP authorization (and a filter that applies to userone or no\n> filter) and \"Require valid-user\" works.\n\nLDAP authz skips itself in this case, meaning you degrade to the same test as in '1'. The filter shouldn't come into play.\n\n> 3) CAS with \"Require group\" and userone member of the group works.\n\nCan you try this with basic authentication and not CAS? I'm wondering if this CAS module is subverting the normal processing and LDAP is never really getting control (the only LDAP trace you have is the AuthLDAPURl getting pulled into the config via .htaccess)", "is_private": false, "bug_id": 47676, "id": 129621, "time": "2009-08-11T11:37:25Z", "creator": "covener@gmail.com", "creation_time": "2009-08-11T11:37:25Z", "attachment_id": null}, {"count": 6, "tags": [], "text": "(In reply to comment #5)\n> (In reply to comment #4)\n> > Created an attachment (id=24126) [details] [details]\n> > Debug log (access & error log)\n> \n> Was the config for this the same as in the original report?   \n\nYes.\n\n> LDAP seems to be bailing out fantastically early, he should be trying to\n> determine a DN for your web userid and doesn't even do that.  He needs to\n> change the web userid into a DN then finally pull the \"uid\" out to match your\n> require ldap-user IIUC.\n> \n> > 1) CAS with a user file authorization and \"Require valid-user\" works.\n> \n> I think this is actually not handeld by authz_groupfile.\n\nTrue. That's mod_authz_user. I've just included it for sake of completeness.\n \n> > 2) CAS with LDAP authorization (and a filter that applies to userone or no\n> > filter) and \"Require valid-user\" works.\n> \n> LDAP authz skips itself in this case, meaning you degrade to the same test as\n> in '1'. The filter shouldn't come into play.\n\nActually, it does. As soon as I add a filter that doesn't apply to userone such as (uid=xyz) or (department=xyz), authorization is denied. \n\n> > 3) CAS with \"Require group\" and userone member of the group works.\n> \n> Can you try this with basic authentication and not CAS? I'm wondering if this\n> CAS module is subverting the normal processing and LDAP is never really getting\n> control (the only LDAP trace you have is the AuthLDAPURl getting pulled into\n> the config via .htaccess)\n\nYeah. I was wondering about that. I'll try AuthType Basic with AuthBasicProvider ldap and see what it does.", "is_private": false, "bug_id": 47676, "id": 129622, "time": "2009-08-11T11:50:31Z", "creator": "holger.dippel@umassd.edu", "creation_time": "2009-08-11T11:50:31Z", "attachment_id": null}, {"count": 7, "tags": [], "creator": "holger.dippel@umassd.edu", "attachment_id": null, "text": "I've tried this in the .htaccess file -- I've verified that there's no Location directive interfering:\n\nAuthType Basic\nAuthBasicProvider ldap\nAuthName \"Auth Test\"\nAuthGroupFile /path/to/groupfile/.groups\nAuthLDAPUrl ldap://...?uid?sub\nAuthzLDAPAuthoritative off\nRequire ldap-user userone\nRequire group testing\n\n\nIt looks as if LDAP works, but still is blocked by the failing group authorization:\n\n[Tue Aug 11 15:03:07 2009] [debug] mod_authnz_ldap.c(960): [9065] auth_ldap url parse: `ldap://dsp.....edu:389/ou=people,dc=...,dc=edu?uid?sub', Host: dsp.....edu:389, Port: 389, DN: ou=people,dc=...,dc=edu, attrib: uid, scope: subtree, filter: (null), connection mode: not using SSL\n[Tue Aug 11 15:03:07 2009] [debug] mod_authnz_ldap.c(377): [client x.x.x.x] [9065] auth_ldap authenticate: using URL ldap://dsp.....edu:389/ou=people,dc=...,dc=edu?uid?sub\n[Tue Aug 11 15:03:07 2009] [debug] mod_authnz_ldap.c(474): [client x.x.x.x] [9065] auth_ldap authenticate: accepting userone\n[Tue Aug 11 15:03:07 2009] [error] [client x.x.x.x] Authorization of user userone to access /auth_test/ failed, reason: user doesn't appear in group file (/path/to/groupfile/.groups).\n\nIf I deliberately type the wrong password, LDAP authentication fails:\n\n[Tue Aug 11 15:02:29 2009] [debug] mod_authnz_ldap.c(960): [9044] auth_ldap url parse: `ldap://dsp.....edu:389/ou=people,dc=...,dc=edu?uid?sub', Host: dsp.....edu:389, Port: 389, DN: ou=people,dc=...,dc=edu, attrib: uid, scope: subtree, filter: (null), connection mode: not using SSL\n[Tue Aug 11 15:02:29 2009] [debug] mod_authnz_ldap.c(377): [client x.x.x.x] [9044] auth_ldap authenticate: using URL ldap://dsp.....edu:389/ou=people,dc=...,dc=edu?uid?sub\n[Tue Aug 11 15:02:29 2009] [warn] [client x.x.x.x] [9044] auth_ldap authenticate: user userone authentication failed; URI /auth_test/ [ldap_simple_bind_s() to check user credentials failed][Invalid credentials]\n[Tue Aug 11 15:02:29 2009] [error] [client x.x.x.x] user userone: authentication failure for \"/auth_test/\": Password Mismatch", "id": 129624, "time": "2009-08-11T12:08:12Z", "bug_id": 47676, "creation_time": "2009-08-11T12:08:12Z", "is_private": false}, {"count": 8, "tags": [], "creator": "holger.dippel@umassd.edu", "attachment_id": null, "text": "I've been digging a bit through the source code of mod_authnz_ldap and judging by the missing debug output, it seems as if the function authz_ldap_check_user_access is not called at all or aborts at a very early stage without any debug output.\n\nCould it be related how this function is registered in the order with other modules?\n\nstatic void register_hooks(apr_pool_t *p)\n{\n    static const char * const aszPost[]={ \"mod_authz_user.c\", NULL };\n\n    ap_register_provider(p, AUTHN_PROVIDER_GROUP, \"ldap\", \"0\",\n                         &authn_ldap_provider);\n    ap_hook_post_config(authnz_ldap_post_config,NULL,NULL,APR_HOOK_MIDDLE);\n    ap_hook_auth_checker(authz_ldap_check_user_access, NULL, aszPost, APR_HOOK_MIDDLE);\n\n    ap_hook_optional_fn_retrieve(ImportULDAPOptFn,NULL,NULL,APR_HOOK_MIDDLE);\n}", "id": 129630, "time": "2009-08-11T12:49:58Z", "bug_id": 47676, "creation_time": "2009-08-11T12:49:58Z", "is_private": false}, {"count": 9, "tags": [], "creator": "holger.dippel@umassd.edu", "attachment_id": null, "text": "Based on my previous thought I've decided to allow mod_authz_groupfile pass authorization on to other modules by setting AuthzGroupFileAuthoritative to off:\n\nAuthType Basic\nAuthBasicProvider ldap\nAuthName \"Auth Test\"\nAuthGroupFile /path/to/groupfile/.groups\nAuthzGroupFileAuthoritative off\nAuthLDAPUrl ldap://...?uid?sub\nRequire ldap-user userone\nRequire group testing\n\nAnd also with CAS authentication:\n\nAuthType CAS\nAuthName \"Auth Test\"\nAuthGroupFile /path/to/groupfile/.groups\nAuthzGroupFileAuthoritative off\nAuthLDAPUrl ldap://...?uid?sub\nRequire ldap-user userone\nRequire group testing\n\nAnd sure enough it now works -- which seems inconsistent with the documentation where mod_authz_groupfile is suggested to be a lower-level module.\n\nSo it seems that the hook registry for authorization needs to happen differently. Maybe the problem lies outside mod_authnz_ldap?", "id": 129632, "time": "2009-08-11T13:20:27Z", "bug_id": 47676, "creation_time": "2009-08-11T13:20:27Z", "is_private": false}, {"count": 10, "tags": [], "bug_id": 47676, "attachment_id": null, "id": 129634, "time": "2009-08-11T13:34:42Z", "creator": "rpluem@apache.org", "creation_time": "2009-08-11T13:34:42Z", "is_private": false, "text": "(In reply to comment #9)\n\n> \n> And sure enough it now works -- which seems inconsistent with the documentation\n> where mod_authz_groupfile is suggested to be a lower-level module.\n\nWhich module is loaded first? mod_authz_groupfile or mod_authnz_ldap?\nTry reversing the load order and see if your original configuration works"}, {"count": 11, "tags": [], "bug_id": 47676, "attachment_id": null, "id": 129635, "time": "2009-08-11T13:58:48Z", "creator": "holger.dippel@umassd.edu", "creation_time": "2009-08-11T13:58:48Z", "is_private": false, "text": "(In reply to comment #10)\n> (In reply to comment #9)\n> \n> > \n> > And sure enough it now works -- which seems inconsistent with the documentation\n> > where mod_authz_groupfile is suggested to be a lower-level module.\n> \n> Which module is loaded first? mod_authz_groupfile or mod_authnz_ldap?\n> Try reversing the load order and see if your original configuration works\n\nThis may be a silly question, but how would I find out? They are compiled in and not loaded with LoadModule."}, {"count": 12, "tags": [], "bug_id": 47676, "attachment_id": null, "id": 129644, "time": "2009-08-11T23:52:05Z", "creator": "rpluem@apache.org", "creation_time": "2009-08-11T23:52:05Z", "is_private": false, "text": "(In reply to comment #11)\n\n> This may be a silly question, but how would I find out? They are compiled in\n> and not loaded with LoadModule.\n\nMy bad. I missed that you compiled them statically."}, {"count": 13, "tags": [], "bug_id": 47676, "attachment_id": 24138, "id": 129691, "time": "2009-08-14T07:28:44Z", "creator": "holger.dippel@umassd.edu", "creation_time": "2009-08-14T07:28:44Z", "is_private": false, "text": "Created attachment 24138\nmod_authnz_ldap patch file to fix authz hook insertion order\n\nThis patch modifies the hook sequence of the authz hook to be before mod_authz_user AND mod_authz_groupfile for mod_authnz_groupfile to work according to the documentation."}, {"count": 14, "tags": [], "bug_id": 47676, "attachment_id": null, "id": 129692, "time": "2009-08-14T07:44:14Z", "creator": "holger.dippel@umassd.edu", "creation_time": "2009-08-14T07:44:14Z", "is_private": false, "text": "I've modified the hock registration in mod_authnz_ldap.c:\n\nstatic void register_hooks(apr_pool_t *p)\n{\n    static const char * const aszPost[]={ \"mod_authz_user.c\", \"mod_authz_groupfile.c\", NULL };\n\n    ap_register_provider(p, AUTHN_PROVIDER_GROUP, \"ldap\", \"0\",\n                         &authn_ldap_provider);\n    ap_hook_post_config(authnz_ldap_post_config,NULL,NULL,APR_HOOK_MIDDLE);\n    ap_hook_auth_checker(authz_ldap_check_user_access, NULL, aszPost, APR_HOOK_MIDDLE);\n\n    ap_hook_optional_fn_retrieve(ImportULDAPOptFn,NULL,NULL,APR_HOOK_MIDDLE);\n}\n\nNow the AuthzLDAPAuthoritative directive works according to the documentation. The .htaccess file now looks like this:\n\nAuthType CAS\nAuthName \"Auth Test\"\nAuthGroupFile /path/to/groupfile/.groups\nAuthLDAPUrl ldap://...?uid?sub\nAuthzLDAPAuthoritative off\nRequire ldap-user userone\nRequire group testing\n\nIt would be nice if the patch could be included in a future release."}, {"count": 15, "tags": [], "creator": "covener@gmail.com", "attachment_id": null, "text": "After looking again at this, I think the user must make authz_groupfile non-authoritative since all access checks in 2.2 must be run.  \n\nJust changing the order LDAP registers itself IMO is only applicable to 2.2.x and is unnecessary change for users expecting the other order.\n\nNet: all authz providers are checked, and generally if an authz provider has any of its own requirements in effect it will return unauthorized unless you set it's authoritative flag.", "id": 149736, "time": "2011-09-25T21:25:44Z", "bug_id": 47676, "creation_time": "2011-09-25T21:25:44Z", "is_private": false}]