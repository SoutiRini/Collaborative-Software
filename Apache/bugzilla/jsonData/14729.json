[{"count": 0, "attachment_id": null, "bug_id": 14729, "is_private": false, "id": 26681, "time": "2002-11-21T04:50:11Z", "creator": "tony.poppleton@wanadoo.fr", "creation_time": "2002-11-21T04:50:11Z", "tags": [], "text": "If more than 1027 merged regions are added to a sheet, then the xls file \ndoesn't work (the number of cells merged is unimportant).\n\nhere is some code that produces a corrupt excel file... \n\nimport org.apache.poi.hssf.usermodel.*;\nimport org.apache.poi.hssf.util.*;\nimport java.io.*;\n\nclass POIBug\n{\n\tpublic static void main(String[] args) throws IOException\n\t{\n\t\tint rows    = 1028;\n\t\tint cols    = 1;\n\t\tint rowSpan = 1;\n\t\tint colSpan = 1;\n\t\t//can't merge more than 1027 times\n\t\t//ie rows = 514, cols = 2 also doesnt work\n\t\t//number of cells merged is not important\n\n\t\tHSSFWorkbook workbook = new HSSFWorkbook();\n\t\tHSSFSheet    sheet    = workbook.createSheet();\n\n\t\t//create all the rows and the cells\n\t\tfor (int row = 0; row < rows; row++)\n\t\t{\n\t\t\tHSSFRow r = sheet.createRow(row);\n\t\t\tfor (int col = 0; col < cols; col++)\n\t\t\t\tr.createCell((short) col);\n\t\t}\n\n\t\t//merge the approriate cells\n\t\tint merged = 0;\n\t\tfor (int row = 0; row < rows; row += rowSpan)\n\t\t{\n\t\t\tfor (int col = 0; col < cols; col += colSpan)\n\t\t\t{\n\t\t\t\tint   rowFrom = row;\n\t\t\t\tshort colFrom = (short) col;\n\t\t\t\tint   rowTo   = rowFrom + rowSpan - 1;\n\t\t\t\tshort colTo   = (short) (colFrom + colSpan - \n1);\n\t\t\t\tsheet.addMergedRegion(new Region(rowFrom, \ncolFrom, rowTo, colTo));\n\t\t\t\tmerged++;\n\t\t\t}\n\t\t}\n\n\t\tSystem.out.println(\"Added \" + merged + \" merged regions\");\n\t\tFileOutputStream fos = new FileOutputStream(\"bug.xls\");\n\t\tworkbook.write(fos);\n\t\tfos.close();\n\t}\n}"}, {"count": 1, "tags": [], "bug_id": 14729, "attachment_id": null, "id": 26713, "time": "2002-11-21T16:33:12Z", "creator": "poi-support@buni.org", "creation_time": "2002-11-21T16:33:12Z", "is_private": false, "text": "cool.  Can you merge > 1027 in excel?  (w/o using POI)?  I'd like to know\nwhether we should just put a bounds check in or if Excel does something\ndifferent for larger numbers.  If so attach a sheet (press create a new attachment)"}, {"count": 2, "tags": [], "bug_id": 14729, "text": "I have tried in excel, and yes it works for at least upto 65000 merged cells.  \nI can send you the excel file I you like.\n\nI think I know what the cause of the bug is however - I think the CONTINUE \nrecord is not being used correctly.\n\nIn BIFF8 the maximum biff size is of 8224 for the biff contents without the \nheader, and a merged cell record requires 8 bytes per range.  An additional 2 \nbytes are required at the beginning for the number of merged cell entries.  \nFor 1027 merged cells this equals 8*1027 + 2 = 8218 bytes, for 1028 merges a \ncorrupt xls file is produced, and the biff entry contains 8*1028 + 2 = 8226 \nbytes, which exceeds the biff8 record structure!  I assume the bug is \ntherefore is the incorrect use of a CONTINUE record.", "id": 26727, "time": "2002-11-21T19:18:14Z", "creator": "tony.poppleton@wanadoo.fr", "creation_time": "2002-11-21T19:18:14Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 14729, "attachment_id": null, "id": 26740, "time": "2002-11-21T20:59:27Z", "creator": "poi-support@buni.org", "creation_time": "2002-11-21T20:59:27Z", "is_private": false, "text": "so please attach the xls file here (click create attachment).  Your analysis\nthough sounds an awful like you might be the best person to submit a patch:\nhttp://jakarta.apache.org/poi/getinvolved/index.html"}, {"count": 4, "tags": [], "bug_id": 14729, "text": "Created attachment 3914\na sample file with 1028 merged cells - causes errors when opening in excep", "id": 26749, "time": "2002-11-21T23:27:21Z", "creator": "tony.poppleton@wanadoo.fr", "creation_time": "2002-11-21T23:27:21Z", "is_private": false, "attachment_id": 3914}, {"count": 5, "tags": [], "bug_id": 14729, "attachment_id": null, "id": 26750, "time": "2002-11-21T23:32:06Z", "creator": "tony.poppleton@wanadoo.fr", "creation_time": "2002-11-21T23:32:06Z", "is_private": false, "text": "I have had a go at creating a patch, but failed miserably.  I don't understand \nhow POI fits together just yet, will give it another go in two weeks time \n(fully booked till then).  I did get as far as confirming my suspicion using \nthe BiffViewer util in POI, and here is an excerp from the example file I just \nsubmitted (above):\n\n============================================\nOffset 0x5a8b (23179)\nrecordid = 0xe5, size =8226\n[MERGEDCELLS]\n     .sid        =229\n     .numregions =1028\n     .rowfrom    =0\n     .colfrom    =0\n\nSo the size is 8226 which exceeds the biff record size of 8224.  I am unsure \nhow to divide up the MergedCells record into Continue records to resolve it \nthough."}, {"count": 6, "tags": [], "creator": "tony.poppleton@wanadoo.fr", "attachment_id": null, "text": "I have found a quick one-liner that can solve the problem, but couldn't figure \nout how to get CVS to create the proper patch file.  Could someone in the know \nupload this change please.  Thanks.\n\nIn package org.apache.poi.hssf.model, change the following method to:\n\npublic int addMergedRegion(int rowFrom, short colFrom, int rowTo,short colTo)\n{\n //only 1027 entries can be packed into a single BIFF8 MergedCellsRecord\n if (merged == null || merged.getNumAreas() == 1027)\n ...\n\nThe if just had (merger == null) before.  This change causes a new \nMergeCellsRecord to be created (instead of a ContinueRecord - which would also \nsolve the problem, but this is much easier to do) when there are too many \nmerged areas in the current merged record.  I have tested it and it works.\n\nThanks,\nTony", "id": 26757, "time": "2002-11-22T01:15:18Z", "bug_id": 14729, "creation_time": "2002-11-22T01:15:18Z", "is_private": false}, {"text": "Created attachment 3932\nPatch file to fix this bug", "tags": [], "creator": "tony.poppleton@wanadoo.fr", "attachment_id": 3932, "count": 7, "id": 26879, "time": "2002-11-23T20:30:55Z", "bug_id": 14729, "creation_time": "2002-11-23T20:30:55Z", "is_private": false}, {"count": 8, "tags": [], "creator": "poi-support@buni.org", "attachment_id": null, "text": "thanks.  Can you also submit a junit test that replicates this?  Do you think\nyou could make the changes necessary to make this READ in the case of\ncontinuations?  I'll apply this shortly.", "id": 26880, "time": "2002-11-23T20:51:09Z", "bug_id": 14729, "creation_time": "2002-11-23T20:51:09Z", "is_private": false}, {"count": 9, "attachment_id": 4802, "creator": "tony.poppleton@wanadoo.fr", "is_private": false, "id": 30985, "time": "2003-02-10T03:52:22Z", "bug_id": 14729, "creation_time": "2003-02-10T03:52:22Z", "tags": [], "text": "Created attachment 4802\nmuch better patch, which handles reads and writes"}, {"count": 10, "tags": [], "bug_id": 14729, "attachment_id": 4803, "id": 30986, "time": "2003-02-10T03:53:43Z", "creator": "tony.poppleton@wanadoo.fr", "creation_time": "2003-02-10T03:53:43Z", "is_private": false, "text": "Created attachment 4803\nstarted test case for Sheet in hssf.model package"}, {"count": 11, "attachment_id": null, "creator": "tony.poppleton@wanadoo.fr", "is_private": false, "id": 32192, "time": "2003-02-28T22:42:01Z", "bug_id": 14729, "creation_time": "2003-02-28T22:42:01Z", "tags": [], "text": "could someone please apply this patch, thanks"}, {"count": 12, "tags": [], "bug_id": 14729, "attachment_id": null, "id": 32227, "time": "2003-03-01T17:52:15Z", "creator": "avik@apache.org", "creation_time": "2003-03-01T17:52:15Z", "is_private": false, "text": "applied, thanks. This issue was marked resolved, and thus was not shoing up in\nmy query. Would appreciate if you could complete the testcases. "}]