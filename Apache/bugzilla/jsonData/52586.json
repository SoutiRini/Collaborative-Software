[{"count": 0, "tags": [], "bug_id": 52586, "attachment_id": null, "text": "As per the servlet spec, the values for:\n\njavax.servlet.forward.request_uri\njavax.servlet.forward.context\njavax.servlet.forward.servlet_path\njavax.servlet.forward.path_info\njavax.servlet.forward.query_string\n\nMUST be set to the values from the very first servlet that serviced the current request.  However, it seems that Tomcat is populating path_info with the value of the LAST path_info serviced in the request (i.e. the final servlet that serviced the request).  It's possible the other value assignments are afflicted by similar defects, I've not explicitly tested for this.\n\nBecause of this issue, it's impossible to correctly reconstruct the original request's URI piecemeal by concatenating context+servlet_path+path_info+?+query_string, since path_info will contain the path to another servlet and thus this concatenation will produce a probably invalid URI target.\n\nTherefore, creating \"click here to retry\" links is impossible without workaround code.\n\nThe critical issue here is the deviation from the servlet spec, which spells out the behavior of those attributes.", "id": 153379, "time": "2012-02-02T18:49:59Z", "creator": "diego.rivera.cr@gmail.com", "creation_time": "2012-02-02T18:49:59Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 52586, "attachment_id": null, "id": 153384, "time": "2012-02-02T21:48:48Z", "creator": "diego.rivera.cr@gmail.com", "creation_time": "2012-02-02T21:48:48Z", "is_private": false, "text": "The problem seems to be in StandardHostValve, on (or about) line 438:\n\n    private boolean custom(Request request, Response response,\n                             ErrorPage errorPage) {\n\n        if (container.getLogger().isDebugEnabled())\n            container.getLogger().debug(\"Processing \" + errorPage);\n\n        request.setPathInfo(errorPage.getLocation());\n\n        try {\n            // Forward control to the specified location\n            ServletContext servletContext =\n                request.getContext().getServletContext();\n\nHere, evidently the pathinfo for the request being serviced is set to the location of the error page being forwarded to:\n\n        request.setPathInfo(errorPage.getLocation());\n\nThis is evidently incorrect: pathInfo should be set to the path info of the topmost request on the stack, not the location of the error page being forwarded to (this explicitly contradicts the Servlet spec).\n\nIn my mind, this line should simply not exist.  I'll leave it up to you Tomcat experts to determine what the impact of that is."}, {"count": 2, "tags": [], "bug_id": 52586, "attachment_id": null, "text": "The second time this evening I have had to dig back more than 5 years into the svn history to figure out why some code is the way it is. It must be code archaeology week and but no-one bothered to tell me.\n\nThat line was added in r301993 which was a modification to 301883 which was an ugly hack to fix bug 20018.\n\nWith the current Tomcat code, there is no need for the hack (I didn't dig into when the hack became unnecessary) so the line can be removed.\n\nFor the record, only the path info was affected and then, only during error handling.\n\nThis has been fixed in trunk and 7.0.x and will be included in 7.0.26 onwards.", "id": 153477, "time": "2012-02-05T21:58:04Z", "creator": "markt@apache.org", "creation_time": "2012-02-05T21:58:04Z", "is_private": false}]