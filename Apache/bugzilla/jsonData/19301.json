[{"count": 0, "tags": [], "bug_id": 19301, "attachment_id": null, "text": "With Xalan Java 2.2.D11:\n[junitreport] jar:file:/C:/Programs/Ant/lib/optional.jar!/org/apache/tools/ant/t\naskdefs/optional/junit/xsl/junit-frames.xsl; Line 134; Column 74; java.lang.refl\nect.InvocationTargetException\n\nWith Xalan Java 2.5.D1:\nBUILD FAILED\nfile:C:/Documents%20and%20Settings/Eric/My%20Documents/Projects/Expasy/build.xml\n:299: Errors while applying transformations: java.lang.StackOverflowError", "id": 36037, "time": "2003-04-25T00:51:26Z", "creator": "eric.jain@gmail.com", "creation_time": "2003-04-25T00:51:26Z", "is_private": false}, {"count": 1, "tags": [], "creator": "eric.jain@gmail.com", "is_private": false, "id": 36038, "attachment_id": 6002, "bug_id": 19301, "creation_time": "2003-04-25T00:52:38Z", "time": "2003-04-25T00:52:38Z", "text": "Created attachment 6002\nThe test result file that causes junitreport to fail."}, {"count": 2, "tags": [], "creator": "eric.jain@gmail.com", "attachment_id": null, "is_private": false, "id": 36095, "time": "2003-04-25T12:51:54Z", "bug_id": 19301, "creation_time": "2003-04-25T12:51:54Z", "text": "I tracked down the problem to the JS-escape template, which produces a \nStackOverFlowError with Xalan 2.5D1 if the string parameter passed to the \ntemplate is too long, as can easily happen when processing the java.class.path \nproperty. Not sure where the real limit is, all I know is that 7952 characters \nis too much :-)\n\nA temporary fix is to simply skip any long values and display them as '...' \ninstead:\n\n  <xsl:when test=\"string-length($string) > 1000\">\n    <xsl:text>...</xsl:text>\n  </xsl:when>\n"}, {"count": 3, "tags": [], "bug_id": 19301, "attachment_id": null, "text": "*** Bug 20977 has been marked as a duplicate of this bug. ***", "id": 45627, "time": "2003-10-14T14:20:45Z", "creator": "bodewig@apache.org", "creation_time": "2003-10-14T14:20:45Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 19301, "is_private": false, "text": "You could use a copy of Ant's stylesheets, add the snippet above to it and\nuse <junitreport>'s styledir attribute.\n\nI wouldn't want to hardcode any arbitrary limit into the default stylesheets, even\nif too long literals would cause problems with all existing xslt processors.\n\nMaybe Saxon works, maybe a future version of Xalan will work.  If we \"fix\" the\nstylesheets now, users may complain about truncated output in the future.\n\nCould you please try my advice above and verify that it works for you?  If so\nI'd put a pointer into the FAQ (and <junitreport>'s manual) and close this report.", "id": 45629, "time": "2003-10-14T14:25:48Z", "creator": "bodewig@apache.org", "creation_time": "2003-10-14T14:25:48Z", "attachment_id": null}, {"count": 5, "tags": [], "creator": "eric.jain@gmail.com", "attachment_id": null, "is_private": false, "id": 45879, "time": "2003-10-18T13:47:37Z", "bug_id": 19301, "creation_time": "2003-10-18T13:47:37Z", "text": "Specifying a styledir that contains modified stylesheets is indeed a possible \nworkaround.\n\nI agree that putting arbitrary limits into the default style sheets doesn't \nseem like a good idea. On the other hand it is the default setup that is \nbroken, not some exotic configuration.\n\nPerhaps a more convenient solution for people who run into this problem would \nbe to have a switch junit/formatter@nodetails=\"yes\" that supresses output of \nthe test property data. Such a switch may even be welcomed by others as well, \nas I suspect this would reduce the size of the generated test output files and \nsignificantly speed up transformation time."}, {"count": 6, "tags": [], "creator": "bodewig@apache.org", "is_private": false, "id": 48159, "attachment_id": null, "bug_id": 19301, "creation_time": "2003-11-26T12:50:29Z", "time": "2003-11-26T12:50:29Z", "text": "*** Bug 24799 has been marked as a duplicate of this bug. ***"}, {"count": 7, "tags": [], "text": "*** Bug 26329 has been marked as a duplicate of this bug. ***", "attachment_id": null, "bug_id": 19301, "id": 50964, "time": "2004-01-22T10:53:54Z", "creator": "peter.reilly@corvil.com", "creation_time": "2004-01-22T10:53:54Z", "is_private": false}, {"count": 8, "tags": [], "bug_id": 19301, "is_private": false, "text": "*** Bug 26230 has been marked as a duplicate of this bug. ***", "id": 50966, "time": "2004-01-22T10:55:36Z", "creator": "peter.reilly@corvil.com", "creation_time": "2004-01-22T10:55:36Z", "attachment_id": null}, {"count": 9, "tags": [], "text": "There is no XSLT-only fix to this as far as I can see. The main problem is \nthat a function such as translate() only operates with single character rather \nthan string so you are left with a recursive template.\n\nAn easy fix (and that should probably speed up things as well) is to use Xalan \nJava extension. I don't have time right now to fully test the solution but \nhere is it:\n\nedit <xsl:stylesheet> root element and add the attribute \nxmlns:stringutils=\"xalan://org.apache.tools.ant.util.StringUtils\"\n\nReplace the JS-escape template with the following one:\n\n<xsl:template name=\"JS-escape\">\n    <xsl:param name=\"string\"/>\n    <xsl:param name=\"tmp1\" select=\"stringutils:replace(string\n($string),'\\','\\\\')\"/>\n    <xsl:param name=\"tmp2\" select=\"stringutils:replace(string\n($tmp1),&quot;'&quot;,&quot;\\&apos;&quot;)\"/>\n    <xsl:value-of select=\"$tmp2\"/>\n</xsl:template>\n\nPlease give your feedback.", "is_private": false, "bug_id": 19301, "id": 51105, "time": "2004-01-24T13:36:56Z", "creator": "sbailliez@apache.org", "creation_time": "2004-01-24T13:36:56Z", "attachment_id": null}, {"count": 10, "tags": [], "bug_id": 19301, "text": "Fixed in CVS HEAD to use the xalan extension mechanism described in my \nprevious comment. Should be part of 1.6.1", "id": 51788, "time": "2004-02-05T22:49:32Z", "creator": "sbailliez@apache.org", "creation_time": "2004-02-05T22:49:32Z", "is_private": false, "attachment_id": null}, {"count": 11, "tags": [], "bug_id": 19301, "text": "OK will put this into ant 1.6.1 \n\nAntoine", "id": 51794, "time": "2004-02-06T00:25:47Z", "creator": "antoine@apache.org", "creation_time": "2004-02-06T00:25:47Z", "is_private": false, "attachment_id": null}]