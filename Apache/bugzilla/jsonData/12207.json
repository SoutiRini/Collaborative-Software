[{"count": 0, "tags": [], "bug_id": 12207, "attachment_id": null, "id": 22061, "time": "2002-08-31T07:09:55Z", "creator": "andrew@tellme.com", "creation_time": "2002-08-31T07:09:55Z", "is_private": false, "text": "If Apache has the FileETag directive set to \"None\" and an If-None-Match header \nis sent in a request, Apache always sends back a 304 Not Modified response, \nregardless of the content of the ETag(s) sent in the If-None-Match header.\n\nThis bug is pretty high priority, because it means that if a site running \nApache normally serves ETags but then stops serving them by setting FileETag \nNone, any downstream caches which understand ETags and send If-None-Match \nrequests will stop getting updated content.\n\nHow to reproduce:\n\n    1. Make a regular HTTP request to Apache for any static file,\n       and note its ETag.\n\n    2. Make another HTTP request for that file, sending an If-None-Match\n       header (for example, if the ETag from step 1 is \"abcdef\", send\n       the header If-None-Match: \"abcdef\"). Apache should correctly\n       return a 304 Not Modified response.\n\n    3. Make a new If-None-Match request with a bogus ETag, for example\n       by sending If-None-Match: \"xxx\". Apache should correctly return\n       a 200 OK and include an entity body.\n\n    4. Add a FileETag None directive to the Apache configuration,\n       and restart Apache.\n\n    5. Make the same If-None-Match request as in step 2. Again, Apache\n       should correctly return a 304 Not Modified response.\n\n    6. Make the same bogus If-None-Match request as in step 3 (or any\n       other If-None-Match request with a bogus ETag). Apache will\n       incorrectly return a 304 Not Modified response.\n\nSteps 4 and 6 are enough to reproduce the bug but the other steps give a little \ncontext by showing the correct behavior.\n\nI have reproduced this bug with Apache 2.0.40 on Solaris x86. I strongly \nsuspect the bug to be platform independent, as it is a simple missing check in \nhttp_protocol.c for an empty ETag. Apache 1.3 has an identical bug, for which \ndetails can be found in Bug 12202."}, {"count": 1, "tags": [], "bug_id": 12207, "attachment_id": 2880, "id": 22062, "time": "2002-08-31T07:40:44Z", "creator": "andrew@tellme.com", "creation_time": "2002-08-31T07:40:44Z", "is_private": false, "text": "Created attachment 2880\nPatch against httpd-2.0/modules/http/http_protocol.c"}, {"count": 2, "tags": [], "bug_id": 12207, "is_private": false, "id": 22063, "attachment_id": null, "creator": "andrew@tellme.com", "creation_time": "2002-08-31T07:41:04Z", "time": "2002-08-31T07:41:04Z", "text": "Still a problem in HEAD. The attached patch fixes the problem."}, {"count": 3, "tags": [], "creator": "jerenkrantz@apache.org", "is_private": false, "text": "Fixed in revision 1.455 of http_protocol.c.", "id": 22083, "time": "2002-09-01T18:48:10Z", "bug_id": 12207, "creation_time": "2002-09-01T18:48:10Z", "attachment_id": null}]