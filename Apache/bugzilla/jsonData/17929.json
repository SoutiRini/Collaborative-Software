[{"count": 0, "tags": [], "creator": "erik@beijnoff.com", "attachment_id": null, "text": "When i use the xml syntax for a jsp page with Tomcat 5.0 Alpha and try to \nreference an EL parameter in a template data attribute, the EL expression gets \noutput as plain text, i.e. it is treated as quoted plaintext within the \nattribute. The behavior seems a bit strange to me, I'd expect it to output the \nparameter. I've been trying to find a clarification in the JSP 2.0, and JSTL \n1.0 specification but unfonrtunately no luck so far.\n\nExample, please note that the first EL expression is treated as plain text, \nwhile the second evaluates correctly.:\n\n<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<jsp:root\n xmlns:jsp=\"http://java.sun.com/JSP/Page\"\n xmlns:c=\"http://java.sun.com/jstl/core\"\n version=\"2.0\">\n\n<jsp:directive.page\n contentType=\"text/html\"\n pageEncoding=\"ISO-8859-1\"/>\n\n<html>\n<body>\n    <div class=\"${1+2}\">${1+2}</div>\n</body>\n</html>\n</jsp:root>", "id": 33077, "time": "2003-03-12T19:21:29Z", "bug_id": 17929, "creation_time": "2003-03-12T19:21:29Z", "is_private": false}, {"count": 1, "tags": [], "creator": "kin-man.chung@sun.com", "attachment_id": null, "text": "The attributes for an unterpreted tag in XML syntax are not evaluated.  That\nmeans that any EL or rt expressions are not evaluated.  This is intended.\n\nTo get around this problem, instead of\n\n\t<div class=\"${1+2}\">${1+2}</div>\n\nyou can write\n\n\t<jsp:element name=\"div\">\n\t    <jsp:attribute name=\"class\">${1+2}</jsp:attribute>\n\t    <jsp:body>${1+2}</jsp:body>\n\t</jsp:element>\n\n", "id": 34659, "time": "2003-04-08T00:10:59Z", "bug_id": 17929, "creation_time": "2003-04-08T00:10:59Z", "is_private": false}, {"count": 2, "tags": [], "creator": "hans@gefionsoftware.com", "is_private": false, "id": 34673, "creation_time": "2003-04-08T06:20:41Z", "time": "2003-04-08T06:20:41Z", "bug_id": 17929, "text": "Sorry, but I disagree that EL expressions in XML element attributes are not\nevaluated. \"JSP.6.3.10 Dynamic Template Content\" in PFD2 says this about it:\n\n  In some cases, the dynamic content that is generated can be described as\n  simple substitutions on otherwise static templates. JSP documents can have \n  XML templates where EL expressions are used as the values of the body or \n  of attributes. For instance, the next example uses the expression \n  table.indent as the value of an attribute, and the expression table.value \n  as that for the body of an element:\n\n    <table indent=\"${table.indent}\">\n      <row>${table.value}</row>\n    </table>", "attachment_id": null}]