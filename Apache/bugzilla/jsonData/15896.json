[{"count": 0, "tags": [], "creator": "ceki@apache.org", "text": "I have found the problem now:\n\nWhen using PropertyConfigurator.configureAndWatch(...), an instance of \\\norg.apache.log4j.helpers.FileWatchdog is instantiated and started in a separate \n\\\nthread. Redeployment of the application (meaning removal and deployment) does \nnot \\\nremove this thread. So, after redeployment there are two such threads in the \nserver's \\\nVM instance. The second one cannot access (and therefore not rename) the \nlogfile, \\\nbecause it is locked by the remaining previous FileWatchDog-thread.\n\nTricky and dangerous: I am constantly producing dead threads in the server's VM \n\\\ninstance.\n\nNow, I have to find out how I can remove this thread at destroy time of my \\\napplication ... If anybody knows how, please let me know.", "id": 29025, "time": "2003-01-08T17:37:27Z", "bug_id": 15896, "creation_time": "2003-01-08T17:37:27Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "creator": "hoju@visi.com", "attachment_id": null, "text": "Well, if you are talking about a servlet application, you should be able to \ncall LogManager.shutdown() in the contextDestroyed() method of a servlet \ncontext listener (beginning with servlet-2.3).  That is what I do.  Any reload \nor removal of the application without shutting down the server should then \nclean up log4j so it will be ready for the next load.\n\nDoes that solve the issue for you?\n\nJake", "id": 29035, "time": "2003-01-08T19:46:38Z", "bug_id": 15896, "creation_time": "2003-01-08T19:46:38Z", "is_private": false}, {"count": 2, "attachment_id": null, "creator": "ceki@apache.org", "text": "\nLogManager.shutdown() has no effect on the watchdog thread altough it should \nsolve the file lock problem. Thanks for the heads up Jake!", "id": 29044, "time": "2003-01-08T21:45:52Z", "bug_id": 15896, "creation_time": "2003-01-08T21:45:52Z", "tags": [], "is_private": false}, {"count": 3, "attachment_id": null, "creator": "hans-joachim.odlozinski@axentiv.de", "text": "For current productive installations, one cannot rely on having a servlet-2.3-\ncompliant environment. One can generally only rely on the availability of the \ndestroy-method per servlet instance. Therefore some sort of registration \nprocedure is needed. Each object (it does not need to be a request thread \nhandled by a servlet), that requires a properly initialized log4j-environment \nand cannot rely on others to do so, registers with the watchdog thread (if not \npresent, it is created). In its finalize()-method (or similar end-of-lifecycle \nmethod), it unregisters. If no more registered objects are present, the \nFileWatchdog-thread terminates.", "id": 29063, "time": "2003-01-09T11:37:05Z", "bug_id": 15896, "creation_time": "2003-01-09T11:37:05Z", "tags": [], "is_private": false}, {"count": 4, "tags": [], "creator": "mwomack@apache.org", "text": "The whole file watchdog mechanism used in v1.2.x is going to be replaced in \nv1.3 with new plugin functionality.  A whole class of \"watchdog\" plugins will \nbe implemented and available for use.  They will be configurable via \nconfiguration files (at least xml configuration files) and much more control \nwill be available to start/stop/restart them as needed.  They will be shutdown \nas part of the repository shutdown process, etc.  One of the reasons this is \nbeing done is because of this bug.  Until then, I don't think there is an easy \nfix for this issue.  I would suggest not using the configureAndWatch() \nmechanism, and instead include a servlet in your application that can be \naccessed via http requests to reload the log4j settings as needed.  I would \nappreciate any feedback you might have on the new plugin architecture, and \nwatchdogs in particular.  There have been many discussion threads on the dev \nemail list about the new watchdogs, though implementing them in the new plugin \narchitecture still needs to be done.  Soon.", "id": 29083, "time": "2003-01-09T18:23:12Z", "bug_id": 15896, "creation_time": "2003-01-09T18:23:12Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "creator": "yoavs@computer.org", "attachment_id": null, "text": "Mark's remarks (which are done done) and my opinion that you now CAN rely on \nServlet Spec 2.3 behavior, combined to close this item.", "id": 68356, "time": "2004-12-13T16:30:02Z", "bug_id": 15896, "creation_time": "2004-12-13T16:30:02Z", "is_private": false}]