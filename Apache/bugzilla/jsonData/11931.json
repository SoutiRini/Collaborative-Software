[{"attachment_id": null, "tags": [], "bug_id": 11931, "is_private": false, "count": 0, "id": 21533, "time": "2002-08-22T13:50:51Z", "creator": "ad553@dcx.com", "creation_time": "2002-08-22T13:50:51Z", "text": "Inside jsp:include \"value\" attribute the parser failed to recognize 2\nconsecutive expressions:\n\n<% String x = \"abc\"; String y = \"def\"; %>\n<jsp:include page=\"nothing.jsp\">\n\t<jsp:param name=\"param_name\" value=\"<%= x %><%= y %>\"/>\n</jsp:include>\n\nRelevent protion of the bug_jsp.java:\n...\nString x = \"abc\"; String y = \"def\";  out.write(\"\\r\\n\\r\\n\");\nJspRuntimeLibrary.include(request, response, \"nothing.jsp\" + \"?\" + \"param_name=\"\n+ java.net.URLEncoder.encode( x %><%= y ), out, false);\n...\n\n\"x %><%= y\" is really not what one expects to find there."}, {"attachment_id": null, "tags": [], "bug_id": 11931, "text": "Is there any reason why you dont just do <%= var + var %> instead of <%= var %> \n<%= var %>\n\nI have made a patch that will make it behave the way you would like it to, but \nI would like to get the opinion of others before I submit it to see if they \nfeel it is realy a bug.\n\nJohn Trollinger", "count": 1, "id": 21554, "time": "2002-08-22T18:54:10Z", "creator": "jakarta@trollingers.com", "creation_time": "2002-08-22T18:54:10Z", "is_private": false}, {"count": 2, "attachment_id": null, "bug_id": 11931, "text": "An attribute that takes a rtexpr can use \"<%= x %>\" to denote an expression, and\nonly allows for one expression.", "id": 21558, "time": "2002-08-22T19:48:50Z", "creator": "kin-man.chung@sun.com", "creation_time": "2002-08-22T19:48:50Z", "tags": [], "is_private": false}, {"count": 3, "tags": [], "creator": "ad553@dcx.com", "is_private": false, "text": "I can think about two:\n - it's more optimal: just two calls to out.write() instead of String + String\nwith a hidden allocation of a StringBuffer, string content accumulation in the\nbuffer and then immediate copying of it to the output \"buffer\"\n - it's in line (consistent) with similar uses in any other place (attribute),\nso a developer should not expect a different behaviour in jsp:include\n\nCurrently Im using a string concatentation (similarly to what you have\nsuggested) as a workaroud, but this (the way I see it) should be just a\ntemporary workaround.", "id": 21590, "time": "2002-08-23T12:28:21Z", "bug_id": 11931, "creation_time": "2002-08-23T12:28:21Z", "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 11931, "attachment_id": null, "is_private": false, "id": 21592, "time": "2002-08-23T12:41:00Z", "creator": "ad553@dcx.com", "creation_time": "2002-08-23T12:41:00Z", "text": "Addendum:\n- probably the \"more optimum\" reason is not really a case here as entire \"value\"\ncontent still has to be concatenated before going though URLEncoder.encode\n- I cannot really follow Kin-Man's argument - in all other attributes it just\nworks, so why _this_one_ should be incosistent??... Approaching this formally\none also may say that rtexpr is a string expression that is a little more than a\nmere literal, but is build of subexpressions. Is there a specific reason to\nallow only a single subexpression within a string expression? "}, {"attachment_id": null, "tags": [], "bug_id": 11931, "text": "You do realize that the String + String with a hidden allocation of a \nStringBuffer, string content accumulation in the buffer and then immediate \ncopying of it to the output \"buffer\" will still happen it will just happen \nsomewhere else.  \n\n", "count": 5, "id": 21595, "time": "2002-08-23T12:48:22Z", "creator": "jakarta@trollingers.com", "creation_time": "2002-08-23T12:48:22Z", "is_private": false}, {"attachment_id": null, "tags": [], "bug_id": 11931, "text": "Yes, this specific case (the need to go through URLEncoder) makes\n\"concatenation\" argument moot. Though we still have an inconsistency of use...\n\nIMNSHO, JSP (purely based on Kin-Man's response) allows for itself to \"look\"\nlike it follows XML rules (jsp namespace), but conveniently treats outer HTML as\nan unfomatted text. Hence this \"relaxed\" requirement that rtexpr within a jsp\nattribute \"only allows for one expression\". What from a developer point of view\nare two similar uses - two expressions that are OK in <A href=\"<%= x %><%= y\n%>\"> is something that is prohibited in JSP attributes. Is that because that\n\"href\" is not really an attribute from the JSP point of view?? :-( It would be\nmuch better if JSP at least pretends that it follows the rules of the sandbox\nwhere it plays.\n\n<rant ref=\"An attribute that takes a rtexpr...\">\nCurrently we have the situation when one needs to switch the mode (VI-style)\nbased on where in the JSP template one is. The incosistency is a big\ndistraction. We (the JSP users) have to pay attention to minor details (where\nare we now? Is this syntax allowed in this tag?) instead of comprehending the\nbig picture, need to learn instricacies instead of using the technology. And all\nof this just to make the parser a little bit simpler??! :-(((\n</rant>", "count": 6, "id": 21596, "time": "2002-08-23T13:19:26Z", "creator": "ad553@dcx.com", "creation_time": "2002-08-23T13:19:26Z", "is_private": false}, {"count": 7, "tags": [], "creator": "jakarta@trollingers.com", "text": "You might want to bring this up in the mail list to get more visablity on it.  \nI somewhat agree with you, and the fix is rather easy, but to get it into the \ncode base is the sell you will have to make.", "id": 21597, "time": "2002-08-23T13:46:08Z", "bug_id": 11931, "creation_time": "2002-08-23T13:46:08Z", "is_private": false, "attachment_id": null}]