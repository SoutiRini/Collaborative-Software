[{"count": 0, "attachment_id": null, "bug_id": 44284, "is_private": false, "id": 113075, "time": "2008-01-23T05:18:50Z", "creator": "james@jsptags.com", "creation_time": "2008-01-23T05:18:50Z", "tags": [], "text": "---\napache-tomcat-6.0.10-src/java/org/apache/jasper/tagplugins/jstl/core/ForEach.java\n  Tue Feb 13 05:04:52 2007\n+++ webapp/WEB-INF/classes/org/apache/jasper/tagplugins/jstl/core/ForEach.java \nFri Mar  2 09:07:07 2007\n@@ -137,9 +137,9 @@\n         ctxt.generateJavaSource(\"else if (\" + itemsV + \" instanceof double[])\");\n         ctxt.generateJavaSource(iterV + \"=toIterator((double[])\" + itemsV + \");\");\n         \n-        // Collection\n-        ctxt.generateJavaSource(\"else if (\" + itemsV + \" instanceof Collection)\");\n-        ctxt.generateJavaSource(iterV + \"=((Collection)\" + itemsV +\n\").iterator();\");\n+        // Iterable\n+        ctxt.generateJavaSource(\"else if (\" + itemsV + \" instanceof Iterable)\");\n+        ctxt.generateJavaSource(iterV + \"=((Iterable)\" + itemsV + \").iterator();\");\n         \n         // Iterator\n         ctxt.generateJavaSource(\"else if (\" + itemsV + \" instanceof Iterator)\");\n\n\n\n\n\n---\njakarta-taglibs/standard/src/org/apache/taglibs/standard/tag/common/core/ForEachSupport.java\n       Tue Aug 29 01:13:06 2006\n+++\nwebapp/WEB-INF/classes/org/apache/taglibs/standard/tag/common/core/ForEachSupport.java\n     Fri Mar  2 09:21:06 2007\n@@ -17,7 +17,6 @@\n package org.apache.taglibs.standard.tag.common.core;\n \n import java.util.Arrays;\n-import java.util.Collection;\n import java.util.Enumeration;\n import java.util.Iterator;\n import java.util.Map;\n@@ -201,8 +200,8 @@\n             items = toForEachIterator((float[]) o);\n         else if (o instanceof double[])\n             items = toForEachIterator((double[]) o);\n-        else if (o instanceof Collection)\n-            items = toForEachIterator((Collection) o);\n+        else if (o instanceof Iterable)\n+            items = toForEachIterator((Iterable) o);\n         else if (o instanceof Iterator)\n             items = toForEachIterator((Iterator) o);\n         else if (o instanceof Enumeration)\n@@ -324,8 +323,8 @@\n         return new SimpleForEachIterator(Arrays.asList(wrapped).iterator());\n     }\n \n-    // retrieves an iterator from a Collection\n-    protected ForEachIterator toForEachIterator(Collection c) {\n+    // retrieves an iterator from a Iterable\n+    protected ForEachIterator toForEachIterator(Iterable c) {\n         return new SimpleForEachIterator(c.iterator());\n     }"}, {"count": 1, "tags": [], "text": "Overall I'm confused by the state of JSTL with Tomcat.  The only clear/obvious place to get an up-to-date JSTL (including for use with Tomcat) is the Glassfish site.", "is_private": false, "id": 146057, "creator": "jessh@ptc.com", "time": "2011-05-01T14:01:19Z", "bug_id": 44284, "creation_time": "2011-05-01T14:01:19Z", "attachment_id": null}, {"count": 2, "attachment_id": null, "bug_id": 44284, "text": "The JSTL spec requires that \"items\" that are of type \"array\", java.util.Collection, java.util.Iterator, java.util.Enumeration, java.util.Map, and String be supported by forEach implementations. I don't see anything that suggests that support for /other/ types should be prohibited.\n\nMy only concern would be that of portability of the JSP that uses an implementation that supports Iterable: other implementations may not support it, so the Tomcat implementation would effectively fragment the standard.\n\nIt should be easy write a method that accepts an Iterable and returns an Iterator, and then wrap your Iterable objects in a call to that method before passing it into the <c:forEach> tag. That seems like a more portable solution.", "id": 161339, "time": "2012-08-13T14:47:41Z", "creator": "chris@christopherschultz.net", "creation_time": "2012-08-13T14:47:41Z", "tags": [], "is_private": false}, {"count": 3, "tags": [], "bug_id": 44284, "text": "I am resolving this as WONTFIX due to the portability issues raised by Chris.\n\nTo answer Jesse's question, Apache's JSTL project was part of Jakarta and it moved to Tomcat when Jakarta was dis-banded. There has been very little progress since and - absent some renewed interest - the work will be formally placed in the attic shortly. I believe there isn't too much work required to get to a complete 1.2 release but the current developers are unlikely to find sufficient time to complete this work.\n\nTomcat's plug-in implementation has seen very little (make that no) love for many years and only covers the core 1.1 tags. There has been some renewed interest recently but so far that has been around bug fixes and performance improvements - not 1.2 or additional tags.", "id": 162989, "time": "2012-10-27T17:19:51Z", "creator": "markt@apache.org", "creation_time": "2012-10-27T17:19:51Z", "is_private": false, "attachment_id": null}, {"count": 4, "attachment_id": null, "creator": "chris@christopherschultz.net", "is_private": false, "id": 163096, "time": "2012-10-31T17:49:44Z", "bug_id": 44284, "creation_time": "2012-10-31T17:49:44Z", "tags": [], "text": "I think just about everyone uses Glassfish's JSTL implementation, anyway, right?"}]