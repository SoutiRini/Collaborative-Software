[{"count": 0, "tags": [], "bug_id": 55824, "text": "Created attachment 31081\nA test websocket endpoint implementation, a JS client to test it, and a context.xml for container deployment.\n\nIn a webapp with just a websocket implementation, an HttpSession does not seem to be created in time for the modifyHandshake call.  Attached is a test to show this.  I have no idea if there are any downsides to it but I have a proposed fix that does solve my test case, call the HttpServletRequest.getSession(boolean create) method with a true parameter instead of false from the WsHandshakeRequest constructor:\n\nIndex: /d/sd0h/h/niklas/java/workspace-1/Tomcat8/java/org/apache/tomcat/websocket/server/WsHandshakeRequest.java\n===================================================================\n--- /d/sd0h/h/niklas/java/workspace-1/Tomcat8/java/org/apache/tomcat/websocket/server/WsHandshakeRequest.java\t(revision 1546042)\n+++ /d/sd0h/h/niklas/java/workspace-1/Tomcat8/java/org/apache/tomcat/websocket/server/WsHandshakeRequest.java\t(working copy)\n@@ -51,7 +51,7 @@\n \n         queryString = request.getQueryString();\n         userPrincipal = request.getUserPrincipal();\n-        httpSession = request.getSession(false);\n+        httpSession = request.getSession(true);\n \n         // URI\n         StringBuilder sb = new StringBuilder(request.getRequestURI());", "id": 171478, "time": "2013-11-28T09:27:11Z", "creator": "niklas+apache@appli.se", "creation_time": "2013-11-28T09:27:11Z", "is_private": false, "attachment_id": 31081}, {"count": 1, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "id": 171479, "time": "2013-11-28T09:46:04Z", "bug_id": 55824, "creation_time": "2013-11-28T09:46:04Z", "is_private": false, "text": "Fixed the title.\n\nThe WebSocket specification and Javadoc refer to the HTTP Session that already exists when the WebSocket handshake is received. There is no requirement for an Http ses"}, {"count": 2, "tags": [], "bug_id": 55824, "attachment_id": null, "id": 171480, "time": "2013-11-28T09:46:38Z", "creator": "markt@apache.org", "creation_time": "2013-11-28T09:46:38Z", "is_private": false, "text": "...session to be created if one does not already exist."}, {"count": 3, "tags": [], "bug_id": 55824, "text": "Granted, this may not be a bug, I am not a native english speaker and did not interpret the standards text quite as rigidly as you.  For me, there is an HTTP session, although not an HttpSession, at the time. I consider that lazy creation to be just an optimization.  Anyway, it's quite inconvenient to have to create something else, a dummy, that creates the HttpSession, just to get at the container's context, and thus, parameters needed to configure the websocket.  Perhaps this is better seen as a feature request, and as such, much too late in the release process.  Sad :-(", "id": 171481, "time": "2013-11-28T10:39:45Z", "creator": "niklas+apache@appli.se", "creation_time": "2013-11-28T10:39:45Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "creator": "niklas+apache@appli.se", "attachment_id": null, "id": 171482, "time": "2013-11-28T10:42:51Z", "bug_id": 55824, "creation_time": "2013-11-28T10:42:51Z", "is_private": false, "text": "\"Because websocket connections are initiated with an\nhttp request, there is an association between the HttpSession under which a client is operating and any\nwebsockets that are established within that HttpSession. The API allows access in the opening handshake\nto the unique HttpSession corresponding to that same client. [WSC-7.2-1]\"\n\nTo me this seems to imply there should be an HttpSession."}, {"count": 5, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "text": "That isn't how I read it.\n\nIf there is no \"HTTP session under which a client is operating\" then there is no requirement to create one.\n\nIf you want an HTTP session to be available then you'll have to create one first (e.g. with a filter). Note that the lifecycle of the HTTP session is separate from that of the WebSocket session and the HTTP session can timeout irrespective of whether or not the WebSocket session is still active.\n\n\"Anyway, it's quite inconvenient to have to create something else, a dummy, that creates the HttpSession, just to get at the container's context, and thus, parameters needed to configure the websocket.\" suggests you aren't configuring your WebSocket connections correctly. There should be no need for access to the HTTP session to do this. The users list is the place to follow up on that.", "id": 171483, "time": "2013-11-28T13:07:30Z", "bug_id": 55824, "creation_time": "2013-11-28T13:07:30Z", "is_private": false}, {"count": 6, "tags": [], "creator": "niklas+apache@appli.se", "text": "OK, I accept the ruling, no problems.\n\nI made the Configurator a @WebListener to get at the context instead.  It's actually a better design.  Thanks for bearing with me.  I post this final comment here since it may be useful resolution for others having the same issue.", "id": 171487, "time": "2013-11-28T15:35:43Z", "bug_id": 55824, "creation_time": "2013-11-28T15:35:43Z", "is_private": false, "attachment_id": null}, {"count": 7, "tags": [], "creator": "hfmanson@gmail.com", "attachment_id": null, "id": 175344, "time": "2014-05-20T12:19:45Z", "bug_id": 55824, "creation_time": "2014-05-20T12:19:45Z", "is_private": false, "text": "I totally agree with Nikla Hallqvist that it would really be convenient to get an non-null httpSession when calling request.getHttpSession() in modifyHandshake. My endpoint uses File resources with a path that would be retrieved with ServletContext. I tried Nikla Hallqvist's method to obtain a ServletContext using @WebListener but that fails on Apache 8.0.3.\nI hope to get a solution for this problem"}]