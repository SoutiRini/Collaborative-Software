[{"count": 0, "tags": [], "bug_id": 57142, "attachment_id": null, "is_private": false, "id": 178740, "time": "2014-10-24T21:57:09Z", "creator": "artfiedler@gmail.com", "creation_time": "2014-10-24T21:57:09Z", "text": "The JSP 2.3 Spec mentions in \"Table JSP.1-8\" \"Page Directive Attributes\" that \"An import attribute describes the types that are available to\nthe scripting environment.\" \n\nSo if you had a JSP page with <%page import=\"org.test.*\" the \"org.test\" package reference does not make it into the EL context's ImportHandler for resolving classes. This all does depend however, if as by the term \"scripting environment\" the EL expressions are included.\n\nIf JSP 2.3 is to support resolving static fields etc(Bug #57141), like enums then it makes sense that the import attribute would make available those packages/classes to the EL processor. To make custom classes/enums work other than the default java.lang.* for example ${MyCarEnum.PONTIAC == car.make}\n\nThe current workaround for importing packages into the EL processor in jsp pages is to use something like the following in the contextInitialized method inside a ServletContextListener...\n\nJspFactory.getDefaultFactory().getJspApplicationContext(sce.getServletContext()).addELContextListener((ELContextEvent e) -> {\n    e.getELContext().getImportHandler().importPackage(\"org.test.util\");\n    e.getELContext().getImportHandler().importPackage(\"org.test.enums\");\n});"}, {"count": 1, "tags": [], "bug_id": 57142, "is_private": false, "text": "This is one of several areas that could benefit from some clarification in the JSP spec.\n\nNote the approach suggested above will add the imports to every JSP page in the application. On a per page basis you can use:\n<%\npageContext.getELContext().getImportHandler().importStatic(\"java.lang.Integer.MAX_VALUE\");\n%>\n\nMy current thinking os that this behaviour could be optional - i.e. controlled by configuration - until such time as there is some clarification in the JSP spec.", "id": 178884, "time": "2014-11-01T23:57:26Z", "creator": "markt@apache.org", "creation_time": "2014-11-01T23:57:26Z", "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 57142, "text": "Marking this as an enahncement request.\n\nConfiguration via a servlet context init-param is probably the way I'd look to implement this. Not sure whether to enable or disable by default at this point.", "id": 178887, "time": "2014-11-02T00:41:56Z", "creator": "markt@apache.org", "creation_time": "2014-11-02T00:41:56Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 57142, "attachment_id": null, "text": "> The JSP 2.3 Spec mentions in \"Table JSP.1-8\" \"Page Directive Attributes\" that\n> \"An import attribute describes the types that are available to\n> the scripting environment.\" \n\nOriginally the \"scripting environment\" as mentioned in JSP spec is just the java language. If that covers EL as well then it would better be explicitly explained as a chapter in section JSP.2 that defines interaction between EL and JSP.\n\n\nIn chapter JSP.1.10.1 The page Directive in Table JSP.1-8 it also says that\n\"Packages java.lang.*, javax.servlet.*, javax.servlet.jsp.*, and javax.servlet.http.* are imported implicitely by the JSP container.\"\n\nThe EL.3.0 chapter 1.22.1 Access Restrictions and Imports says that only \"java.lang.*\" is imported, for security reasons.\n\n[quote]\nFor security, the following restrictions are enforced.\n... 3. Except for classes with java.lang.* package names, a class has to be explicitly imported before its static fields or methods can be referenced.\n[/quote]\n\nSo if page imports should affect the EL, then how does it deal with those default imports from servlet packages?  The safer default would be to just import java.lang.*, but it would be odd to require someone to explicitly import those servlet packages with @page directive.", "id": 178904, "time": "2014-11-02T19:21:42Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2014-11-02T19:21:42Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 57142, "attachment_id": null, "text": "I think it would be fair to say to merge the two statements. JSP spec says as you stated, \"Packages java.lang.*, javax.servlet.*, javax.servlet.jsp.*, and javax.servlet.http.* are imported implicitly by the JSP container.\"\n\nThen the EL spec says \"For security, the following restrictions are enforced.\n... 3. Except for classes with java.lang.* package names, a class has to be explicitly imported before its static fields or methods can be referenced.\"\n\nMeaning that \"javax.servlet.*, javax.servlet.jsp.* and javax.servlet.http.*\" would NOT be included by default into the EL import handler. Unless \"explicitly\" imported using @page import=\"\".\n\nBecause at face value when you make a JSP page that you specify <@page import=\"org.test.*\"... you expect EL to be able to use those objects. After you call ${MyCarEnum.PONTIAC} you start bashing your head as to why X server is bugged as <%= MyCarEnum.PONTIAC %> is working, and the current recommendation is to use EL instead of scriptlets. Not only does this confuse the user on what to do next and how to get it working (they would need to find this page, and use Marks work-around or apply to all of jsp) it also confuses IDE makers as to how to provide auto-complete for EL syntax, the page directive would make the most sense.\n\nI also would provide this functionality by default until the spec is clarified(how long will that take), because a user is just going to think this is a bug and try to work around it with scriptlets most likely. Or if you guys have the contacts to get an official clarification that would be ideal.\n\nThese comments are however just my two cents.", "id": 178935, "time": "2014-11-04T00:58:15Z", "creator": "artfiedler@gmail.com", "creation_time": "2014-11-04T00:58:15Z", "is_private": false}, {"count": 5, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "id": 178940, "time": "2014-11-04T09:32:17Z", "bug_id": 57142, "creation_time": "2014-11-04T09:32:17Z", "is_private": false, "text": "Those are all good points. Please can you add them to https://java.net/jira/browse/JSP-44 ?"}, {"count": 6, "tags": [], "bug_id": 57142, "attachment_id": null, "text": "Thanks Mark. I'll add them tonight", "id": 178968, "time": "2014-11-04T22:15:31Z", "creator": "artfiedler@gmail.com", "creation_time": "2014-11-04T22:15:31Z", "is_private": false}, {"count": 7, "tags": [], "creator": "artfiedler@gmail.com", "attachment_id": null, "is_private": false, "id": 179086, "time": "2014-11-13T15:30:36Z", "bug_id": 57142, "creation_time": "2014-11-13T15:30:36Z", "text": "It seems that the clarification recommendation(per kchung on the JIRA link mentioned in comment#5) is that EL is covered by the \"scripting environment\" label in relation to the JSP page import attribute. The EL environment should contain all the default packages that are included in JSP, to keep it consistent. Those being java.lang.*, javax.servlet.*, javax.servlet.jsp.*, and javax.servlet.http.*\n\nAlso currently the imports should be resolved in the ScopedAttributeELResolver for now, as bug#57141 corrects already"}, {"count": 8, "tags": [], "bug_id": 57142, "is_private": false, "text": "Fixed in trunk. I'll leave it a few days for folks to comment before back-porting it to 8.0.x.", "id": 179339, "time": "2014-11-27T21:17:06Z", "creator": "markt@apache.org", "creation_time": "2014-11-27T21:17:06Z", "attachment_id": null}, {"count": 9, "tags": [], "bug_id": 57142, "is_private": false, "text": "Reviewing r1642233 and r1642280.\n\nIn general:\na) I wonder whether we can do some work once when JSP page servlet class initializes, instead of doing everything a-new on each request.\n\nb) I wonder whether all ImportHandler.importFoo() methods can be made faster. \n\nc) I think that pageContext.getELContext() is not fast, as it has to initialize the ELContext, and ELContext is not reused between requests.\n\n\nFor b):\n======\n1. E.g. is Class.forName(), Package.getPackage() validation needed at import time? Can it store imports as Map<String shortName,String fullName> and defer Class.forName() calls?\n\nFrom Javadoc, I do not see a need for validation at import time.\n\nhttp://docs.oracle.com/javaee/7/api/javax/el/ImportHandler.html\n\nThe javadoc mentions trivial \"class name contains '.'\" check. We need to do lastIndexOf('.') to split class name from package name and \"no '.'\" found is a clear error condition.\n\n\n2. I think there is a bug in ImportHandler.findClass().\n\nIt shall not use Class.forName(), but use TCCL. I expect that Class.forName() does not use WebappClassLoader and that it cannot load webapp classes.\n\n(Not tested)\n\nAs a contrast, ImportHandler.importPackage() already uses TCCL when validating a Package.\n\n\nFor c):\n=====\n3. Move the code that initializes imports from JSP class (the code that Generator adds in r1642233) and move it into PageContextImpl.getELContext() where ELContext is created.\n\nThis removes the need for PageInfo.isELUsed() flag added in r1642233 and premature initialization of ELContext that Generator adds to JSP pages.  The PageContextImpl.getELContext() method may initialize it when it is needed for the first time.\n\nTrivial\n======\n4. in ImportHandler.findClass() r1642280:\nThe \"int modifiers = clazz.getModifiers();\" call can be skipped when validate==false.", "id": 179346, "time": "2014-11-28T14:40:53Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2014-11-28T14:40:53Z", "attachment_id": null}, {"count": 10, "tags": [], "bug_id": 57142, "attachment_id": null, "text": "Per comment #9's mention of #2 I ran into this issue with the class loader before, I believe what I was doing was accessing EL 3.0 classes directly in the context initialize listener and it could not see my classes, I ended up writing my own EL Resolver that resolved my classes, since my resolver was created in the servlets class loader.\n\nI wasn't sure how to fix it or how its truly suppose to function so I didn't report it and made my own work around.\n\nAs for \"C\" is it better to reuse the ELContext instead of creating it each time? Wouldn't the object need to be reset and synchronized for every request to that jsp? I didn't look at the code so I don't know the in's and outs of how jsps are processed, but if you wanted to do that maybe a ThreadModel would work to avoid synchronizing, just a thought.", "id": 179435, "time": "2014-12-02T07:52:01Z", "creator": "artfiedler@gmail.com", "creation_time": "2014-12-02T07:52:01Z", "is_private": false}, {"count": 11, "tags": [], "bug_id": 57142, "text": "(In reply to Konstantin Kolinko from comment #9)\n> a)\n\nWe could do some pre-processing of the imports. Not sure how much it would speed things up. Needs some testing to see if this part is a bottle neck.\n\n> b) 1.\n\nYes, I think things could be deferred which should give some performance improvements. Again, testing is required to see how much gain we get from this.\n\n> b) 2.\n\nAgreed. Possible bug. Need to test and confirm.\n \n> c)\n\nPageContextImpl doesn't have access to the imports. They'd have to be exposed somehow e.g. via the Servlet.", "id": 179671, "time": "2014-12-09T21:35:11Z", "creator": "markt@apache.org", "creation_time": "2014-12-09T21:35:11Z", "is_private": false, "attachment_id": null}, {"count": 12, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "is_private": false, "id": 179696, "time": "2014-12-10T15:07:22Z", "bug_id": 57142, "creation_time": "2014-12-10T15:07:22Z", "text": "Switch this to bug now we have clarification of the required behaviour from the spec lead."}, {"count": 13, "tags": [], "bug_id": 57142, "attachment_id": null, "text": "a) and c) are addressed in r1644516 for trunk.\n\nLooking at b) next.", "id": 179705, "time": "2014-12-10T20:20:51Z", "creator": "markt@apache.org", "creation_time": "2014-12-10T20:20:51Z", "is_private": false}, {"count": 14, "tags": [], "bug_id": 57142, "attachment_id": null, "text": "b) address in r1644523 for trunk.", "id": 179706, "time": "2014-12-10T21:09:22Z", "creator": "markt@apache.org", "creation_time": "2014-12-10T21:09:22Z", "is_private": false}, {"count": 15, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "id": 179707, "time": "2014-12-10T21:15:57Z", "bug_id": 57142, "creation_time": "2014-12-10T21:15:57Z", "is_private": false, "text": "This has been fixed in 8.0.x for 8.0.16 onwards."}]