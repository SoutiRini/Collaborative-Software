[{"count": 0, "tags": [], "bug_id": 61118, "text": "Using the Save Responses to File is really inconsistent to the point that it is unusable.\n\nUsing all the default options except where noted and making http requests, here are the outcomes:\n\nCompletely blank options - nothing filled in\n============================================\n\nFiles are placed *in the JMeter bin directory* of the form:\n1.html\n2.html\netc.\n\nThe problem:  The JMeter bin directory should never be the current directory for any file interaction - It should always default to the same directory as the current jmx file.\n\nUse '~/' as the filename prefix\n============================================\n\nFiles are written to *the directory above the directory containing the .jmx file* (its parent-parent directory).  These files are named like this:\n[parent-parent directory name]1.html\n[parent-parent directory name]2.html\netc.\n\nThe Problem:  Using ~/ is the (somewhat) well advertised way to refer to the directory containing the jmx file, however, it doesn't work and instead targets the directory above that.  Really I believe this should target the current user's home directory, but that bridge seems to have been crossed.\n\nAdditionally, the file name is messed up in this case, pulling in the name of the JMX file's parent-parent directory as part of the generated filename.\n\nUse '~/output/' as the filename prefix\n============================================\n\nFiles are written to *the directory containing the .jmx file* (not any sort of /output subdirectory).  These files are named like this:\noutput1.html\noutput2.html\netc.\n\nThe problem:  While this does now target the directory containing the JMX file, it incorrectly adds 'output' to the file name rather than attempting to place the files in an /output directory despite the trailing slash.\n\nUse '~/output/output/' as the filename prefix\n============================================\n\nFiles are written to a /output subdirectory next to the JMX file.  These files are named like this:\noutput1.html\noutput2.html\netc.\n\nThe problem:  'output' is still added to the file name.  Additionally, this will fail is a /output subdirectory does not exist - This may be by design but should be documented.  It think it would be preferable to create the directory by default.\n\n\nNote:  Using the './' path results in the same behavior as using no filename prefix.\nNote:  The single quotes in the filename prefix were not actually used.\n\nThe propose fix\n============================================\n* Centralize all path resolution so that behaviors are consistent throughout JMeter (similar problems existing in other components like the CSV DataSet config).\n* Use ~/ to refer to the user's home directory\n* Use ./ to refer to the current directory, which would always be the same directory as the current JMX file.\n\nIn the case of the Save Responses to a File component specifically, there should be a separate directory property to configure where files should be written to so that users don't have to try to cram path into a file name.", "id": 198863, "time": "2017-05-23T18:45:48Z", "creator": "toogoodtopassup@gmail.com", "creation_time": "2017-05-23T18:45:48Z", "is_private": false, "attachment_id": null}, {"count": 1, "attachment_id": null, "creator": "p.mouawad@ubik-ingenierie.com", "text": "Hello,\nThanks for analysis which I share.\nHaving used this component, it is true it's not clear at all where files are output.\n\nAdding an output directory would make it much clearer.", "id": 198915, "time": "2017-05-27T15:18:08Z", "bug_id": 61118, "creation_time": "2017-05-27T15:18:08Z", "tags": [], "is_private": false}, {"count": 2, "tags": [], "creator": "p.mouawad@ubik-ingenierie.com", "is_private": false, "id": 199957, "attachment_id": null, "bug_id": 61118, "creation_time": "2017-07-23T13:06:48Z", "time": "2017-07-23T13:06:48Z", "text": "(In reply to toogoodtopassup from comment #0)\n> Using the Save Responses to File is really inconsistent to the point that it\n> is unusable.\n> \n> Using all the default options except where noted and making http requests,\n> here are the outcomes:\n> \n> Completely blank options - nothing filled in\n> ============================================\n> \n> Files are placed *in the JMeter bin directory* of the form:\n> 1.html\n> 2.html\n> etc.\n> \n> The problem:  The JMeter bin directory should never be the current directory\n> for any file interaction - It should always default to the same directory as\n> the current jmx file.\n\nAs per docs, Filename Prefix is required so this test case may not be significant\n\n> \n> Use '~/' as the filename prefix\n> ============================================\n> \n> Files are written to *the directory above the directory containing the .jmx\n> file* (its parent-parent directory).  These files are named like this:\n> [parent-parent directory name]1.html\n> [parent-parent directory name]2.html\n> etc.\n> \n> The Problem:  Using ~/ is the (somewhat) well advertised way to refer to the\n> directory containing the jmx file, however, it doesn't work and instead\n> targets the directory above that.  Really I believe this should target the\n> current user's home directory, but that bridge seems to have been crossed.\n> \n> Additionally, the file name is messed up in this case, pulling in the name\n> of the JMX file's parent-parent directory as part of the generated filename.\n\nThe issue here is that your filename prefix is a folder prefix. \nSo this seems to be an edgy case also. \n\n> \n> Use '~/output/' as the filename prefix\n> ============================================\n> \n> Files are written to *the directory containing the .jmx file* (not any sort\n> of /output subdirectory).  These files are named like this:\n> output1.html\n> output2.html\n> etc.\n> \n> The problem:  While this does now target the directory containing the JMX\n> file, it incorrectly adds 'output' to the file name rather than attempting\n> to place the files in an /output directory despite the trailing slash.\n> \n\nThe issue here is that your filename prefix is a folder prefix. \nSo this seems to be an edgy case also. \n\n> Use '~/output/output/' as the filename prefix\n> ============================================\n> \n> Files are written to a /output subdirectory next to the JMX file.  \nThis looks ok as per dcos;\n\n> These files are named like this:\n> output1.html\n> output2.html\n> etc.\n> \n> The problem:  'output' is still added to the file name.  Additionally, this\n> will fail is a /output subdirectory does not exist - This may be by design\n> but should be documented.  It think it would be preferable to create the\n> directory by default.\n\nYou're again in an edgy case as instead of providing a Filename prefix, you're providing a Folder prefix.\n> \n> \n> Note:  Using the './' path results in the same behavior as using no filename\n> prefix.\n> Note:  The single quotes in the filename prefix were not actually used.\n> \n> The propose fix\n> ============================================\n> * Centralize all path resolution so that behaviors are consistent throughout\n> JMeter (similar problems existing in other components like the CSV DataSet\n> config).\n> * Use ~/ to refer to the user's home directory\nThis has a different meaning today shared with other components by the way.\nIt means \"the path is assumed to be relative to the JMX file location\"\n\n> * Use ./ to refer to the current directory, which would always be the same\n> directory as the current JMX file.\n> \n> In the case of the Save Responses to a File component specifically, there\n> should be a separate directory property to configure where files should be\n> written to so that users don't have to try to cram path into a file name.\n\nI agree with this proposal but managing backward compatibility is a big annoying."}]