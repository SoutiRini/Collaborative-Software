[{"count": 0, "tags": [], "bug_id": 47350, "text": "There is a bug in ISO8601DateFormat and AbsoluteTimeDateFormat when there is appenders that use different timezone.\n\nThe effect is that the log of all appenders using ISO8601DateFormat or AbsoluteTimeDateFormat will jump regularily from 1 timezone to an other.\n\nA workaround is to use the SimpleDateFormet (using %d{yyyy-MM-dd HH:mm:ss,SSS} instead of %d for instance).  However, this workaround has a performance impact.", "id": 127819, "time": "2009-06-10T13:20:44Z", "creator": "gscokart@gmail.com", "creation_time": "2009-06-10T13:20:44Z", "is_private": false, "attachment_id": null}, {"count": 1, "text": "Created attachment 23789\nUnit test + fix\n\nHere is a unit test and a fix for this bug.\nI didn't find the check box like there is in jira saying that I grant you right for it, but feel free to use it like you want (I have anyway signed an ICLA).", "creator": "gscokart@gmail.com", "attachment_id": 23789, "id": 127847, "time": "2009-06-10T13:36:43Z", "bug_id": 47350, "creation_time": "2009-06-10T13:36:43Z", "tags": [], "is_private": false}, {"count": 2, "tags": [], "creator": "carnold@apache.org", "attachment_id": null, "id": 127854, "creation_time": "2009-06-10T21:00:30Z", "time": "2009-06-10T21:00:30Z", "bug_id": 47350, "text": "Will look at this, but will be next week at least.\n\nThere were a lot of issues with date formatter that were addressed in the log4j 1.3 development and then back ported into the EnhancedPatternLayout in the extras companion.", "is_private": false}, {"count": 3, "tags": [], "bug_id": 47350, "text": "Created attachment 23793\nSame unit test + patch rebased on the trunk (Revision: 783721)\n\nThe first patch was done from the tag.  I update it to align it on the trunk.\n\nI think indeed there is still an issues with those 2 formaters : they are not thread safe.  The access to the static fields are not synchronized.  Because of this you might have jumps of 1 seconds in the past or in the futur.\n\nThe problem is that synchronizing the update of the cache might impact the scalability of an application.", "id": 127866, "time": "2009-06-11T04:52:25Z", "creator": "gscokart@gmail.com", "creation_time": "2009-06-11T04:52:25Z", "is_private": false, "attachment_id": 23793}, {"count": 4, "tags": [], "bug_id": 47350, "attachment_id": null, "id": 127906, "time": "2009-06-12T01:01:07Z", "creator": "gscokart@gmail.com", "creation_time": "2009-06-12T01:01:07Z", "is_private": false, "text": "There is a possibility to make this code thread safe without requiring strong synchronization (by creating a charachter new array every seconds).  I can provide a patch doing this, but that's useless if you plan to bring the EnhancedPatternLayout into the release.\nDo you plan to do that, or dis I provide you the thread safe patch?"}, {"count": 5, "tags": [], "bug_id": 47350, "text": "Created attachment 23809\nCode+Unit test fixing the timzone and the thread safety issue\n\nIn case you don't want to bring EnhancedPatternLayout into the next release, here is the patch I mentioned last week.  This one should be thread safe (a review is of curse welcome) and fix the original timzone issue I mentioned.", "id": 127945, "time": "2009-06-15T00:25:15Z", "creator": "gscokart@gmail.com", "creation_time": "2009-06-15T00:25:15Z", "is_private": false, "attachment_id": 23809}, {"count": 6, "tags": [], "bug_id": 47350, "text": "The patch is substantial enough that I'd prefer to backport EnhancedLayoutPattern from the extras instead of adding that much new code for something that is already fixed there.  I've closed this bug by adding a recommendation in the Javadoc to use EnhancedPatternLayout.\n\nCommitted rev 824004.", "id": 131063, "time": "2009-10-10T20:07:29Z", "creator": "carnold@apache.org", "creation_time": "2009-10-10T20:07:29Z", "is_private": false, "attachment_id": null}]