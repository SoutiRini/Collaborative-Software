[{"count": 0, "tags": [], "bug_id": 21219, "is_private": false, "text": "The servlet container tries to send a 500 Repsonse on Servlet/RuntimeExceptions\neven though the response is already committed. This leads to currupted\nmessage content, sometimes even without the client being able to notice\nthat something went wrong. \nExample: servlet dies with a RuntimeException while copying content to\nthe response.getOutputStream(). Only 1000 bytes are missing from the\nContentLength as specified in the response header. Then tomcat sends the\n500 response on the same connection which is just long enough so that\nthe client is able to read the last 1000 bytes of the response. The\nclient will not notice that the response body is corrupted.\n\nSolution: do not generate the 500 response when the original response is\nalready committed. Instead close the HTTP connection immediately so that\nthe client will know that the response is incomplete. Without closing\nthe HTTP connection, the client will hang trying to read the rest of the\nresponse which will never come.", "id": 39735, "time": "2003-07-01T12:37:26Z", "creator": "stefan.eissing@greenbytes.de", "creation_time": "2003-07-01T12:37:26Z", "attachment_id": null}, {"count": 1, "tags": [], "creator": "remm@apache.org", "text": "This won't be fixed (and is not a bug). You should add special handling in your\nservlet. Please do not reopen this report.", "id": 39738, "attachment_id": null, "bug_id": 21219, "creation_time": "2003-07-01T12:52:19Z", "time": "2003-07-01T12:52:19Z", "is_private": false}, {"count": 2, "tags": [], "creator": "julian.reschke@gmx.de", "attachment_id": null, "is_private": false, "id": 39782, "time": "2003-07-01T18:49:12Z", "bug_id": 21219, "creation_time": "2003-07-01T18:49:12Z", "text": "Can you be a bit more specific about what kind of special handling the servlet\nis supposed to do in this case?"}, {"count": 3, "tags": [], "creator": "remm@apache.org", "attachment_id": null, "is_private": false, "id": 39783, "time": "2003-07-01T19:07:06Z", "bug_id": 21219, "creation_time": "2003-07-01T19:07:06Z", "text": "Well, you have a few options to play with:\n- try to catch the runtime exception; it it happens that often, you should\nhandle it better\n- extend the error report valve to suit your needs better\n- don't set content-length (it doesn't improve performance on the server side,\nas Coyote's chunking is extremely efficient)\n\nCoyote considers that if less bytes are written, then there's a protocol error\n(obviously). If too many bytes are written, the remaining bytes are eaten, but\nthere's no protocol error; maybe the error flag could be set in that cases (in\nwhich case the connection would be closed at the end of the request processing)."}, {"count": 4, "tags": [], "bug_id": 21219, "text": "Well.\n\n1) \"handle it better\" -- that's actually the issue -- how is a servlet supposed \nto handle this situation. Note that because the response may be already \nsubmitted, the only way to signal the client that there's an error condition \nseems to be force the container to close the connection. How do I do that?\n\n2) That would be a change to Tomcat, right? (just clarifying)\n\n3) That would be really an extreme measure. In particular, it would deny \nexisting download clients the ability to show a useful progress indicator.", "id": 39789, "time": "2003-07-01T20:04:09Z", "creator": "julian.reschke@gmx.de", "creation_time": "2003-07-01T20:04:09Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 21219, "text": "I personally think that there's a big issue here, that needs a solution both in \nthe spec and in Tomcat. If somebody thinks that there *is* a robust way to \nhandle this situation, please elaborate.\n", "id": 39975, "time": "2003-07-04T07:19:53Z", "creator": "julian.reschke@gmx.de", "creation_time": "2003-07-04T07:19:53Z", "is_private": false, "attachment_id": null}, {"count": 6, "text": "Bugzilla is not a user support or a forum to ask for expert advice, but\nexclusively meant to report confirmed (or at least issues you have a certain\nlevel of confidence on) issues against Tomcat. You should use tomcat-user, or\nother similar resources.\nI have carefully evaluated this report, and do not think there is any fix needed\nin Tomcat (other than the possibility I mentioned in my last comment). The\ndefault behavior is acceptable for the vast majority of cases. If you want to\nadvocate a new, better, default behavior, feel free to post on tomcat -dev, but\nyou'll have to provide a patch, and convince people it is a useful change.\nPlease do not reopen the report.", "bug_id": 21219, "is_private": false, "id": 39980, "time": "2003-07-04T07:51:01Z", "creator": "remm@apache.org", "creation_time": "2003-07-04T07:51:01Z", "tags": [], "attachment_id": null}, {"count": 7, "tags": [], "creator": "william.barker@wilshire.com", "text": "Reopening to change status.", "id": 39981, "attachment_id": null, "bug_id": 21219, "creation_time": "2003-07-04T08:22:42Z", "time": "2003-07-04T08:22:42Z", "is_private": false}, {"count": 8, "text": "I disagree with Remy on this one.  This is different from how Apache/httpd \nhandles bad requests, and I think that we should follow them when at all \npossible. I have posted a patch to TC 5.0.x that resolves it.  If it is not \nvetoed, then I'll back-port it to TC 4.1.25.  ", "bug_id": 21219, "is_private": false, "id": 39982, "time": "2003-07-04T08:27:57Z", "creator": "william.barker@wilshire.com", "creation_time": "2003-07-04T08:27:57Z", "tags": [], "attachment_id": null}, {"count": 9, "tags": [], "creator": "remm@apache.org", "text": "Apache closes the connection on a 404 ?\nIf the answer is always yes, then -0 for your patch (so I'm not vetoing, but I'm\nvery close to that), otherwise, -1. I don't think we should always attempt to\nmatch the HTTPd behavior when we can do something which matches the spec and is\nmore powerful. At least add a flag on the connector to allow configuring this\n(just like there's a flag to disconnect after a certain amount of requests).\n\nIf the response has already been committed, I think your patch is ineffective,\nso is why I think it is a bad idea overall. There's also the fact that you're\nclosing the connection without adding a Connection: close header (it's ok not\nto, but still ...).\n\nAs I said in a previous comment, the only error we should detect in the HTTP\nlayer is if the amount of data written doesn't match the content length. Right\nnow, it is an error when less bytes are written, but if more are written, bytes\nare swallowed and the error flag is not set (which of course, is not a protocol\nviolation).", "id": 39992, "attachment_id": null, "bug_id": 21219, "creation_time": "2003-07-04T11:50:49Z", "time": "2003-07-04T11:50:49Z", "is_private": false}, {"count": 10, "tags": [], "creator": "julian.reschke@gmx.de", "text": "1) If the response is commited, *how* would you send out a connection: close?\n\n2) Let me repeat what the issue is: the response is committed, but for some \nreason, the servlet isn't able to supply the advertised amount of bytes. In \nthis case, there must be a way to fail the request. At this point, the only way \nto inform the client about the problem is to close the connection. Therefore, \nthere should be a way for the servlet to reliably cause the servlet container \nto do this (for instance, by throwing a severe exception). Ultimately, the \nservlet spec should say something about this issue.", "id": 39994, "attachment_id": null, "bug_id": 21219, "creation_time": "2003-07-04T12:42:19Z", "time": "2003-07-04T12:42:19Z", "is_private": false}, {"count": 11, "tags": [], "bug_id": 21219, "text": "I feel this bug should be reopened -- my understanding that only a change in \nTomcat will enable servlets to behave properly.\n", "id": 40941, "time": "2003-07-18T16:31:57Z", "creator": "julian.reschke@gmx.de", "creation_time": "2003-07-18T16:31:57Z", "is_private": false, "attachment_id": null}]