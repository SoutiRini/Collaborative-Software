[{"count": 0, "tags": [], "bug_id": 23890, "attachment_id": null, "id": 45833, "time": "2003-10-17T13:07:46Z", "creator": "vshaikh@hss.hns.com", "creation_time": "2003-10-17T13:07:46Z", "is_private": false, "text": "We are using JSVGCanvas to display a large graphical image on JPanel in our \njava application.\nFirst we are creating the SVG Document having all the parts of the image as \nelements and then setting this document to the SVG Canvas.\n\nAn OUT OF MEMORY Exception is thrown if the number of elements in the SVG \nDocument is very large and nothing is displayed on the SVG Canvas.\n\nIf any body has faced the similar problem, then pls let us know the solution \nfor this or else any other solution/code will be of gr8 help.\n\nthanx & regards\nVahida"}, {"count": 1, "tags": [], "bug_id": 23890, "attachment_id": null, "is_private": false, "id": 46952, "time": "2003-11-06T22:01:32Z", "creator": "deweese@apache.org", "creation_time": "2003-11-06T22:01:32Z", "text": "I would suggest using the -Xmx option to increase the amount of memory\navailable to the Java Virtual machine (it defaults to 32-64MB).  For\ntodays machines I would use something like: \"-Xmx256m\"\n\nLet me know if this is suitable for closing the bug, or respond with\nadditional information on why you think this is a bug."}, {"count": 2, "tags": [], "creator": "biscaro@webscience.it", "is_private": false, "text": "squiggle memory occupation increases each time i reload the document.\nMaybe there is a vector or similar that continues to increase?\nUsing -Xmx256m is not meaningful because reloading fills large memory too.\nAnd the more you reload the slower application goes", "id": 47346, "time": "2003-11-14T15:14:33Z", "bug_id": 23890, "creation_time": "2003-11-14T15:14:33Z", "attachment_id": null}, {"count": 3, "tags": [], "creator": "deweese@apache.org", "is_private": false, "text": "So this sounds like a memory leak.\nIs it possible your application is holding onto the document\nbetween reloads?  Also what version of batik are you using,\nin 1.5 we fixed a number of potential memory leaks.\n\nFailing that can you provide a standalone example that \nreproduces this problem?\n\nWe do have a number of memory leak tests however it is\npossible that something about your content is ticking a bug.", "id": 47501, "time": "2003-11-17T17:07:42Z", "bug_id": 23890, "creation_time": "2003-11-17T17:07:42Z", "attachment_id": null}, {"count": 4, "text": "I hope that my application dont retain memory because we did many checks.\nAnyway we tried to reload our svg many times in squiggle until we get \"Out of \nmemory exception\". \nThis error wasn't present in batik 1.5 but is present in the last (cvs) \nversion. We use the last version instead of batik 1.5 because it's at least \ntwice faster.\nIn our svg we do large use of javascript. Maybe memory error is there?\n\nIf you wish I can send you a copy of svg. Can I send it to deweese@apache.org ?\nThanks!", "bug_id": 23890, "attachment_id": null, "id": 47675, "time": "2003-11-20T12:03:20Z", "creator": "biscaro@webscience.it", "creation_time": "2003-11-20T12:03:20Z", "tags": [], "is_private": false}, {"count": 5, "tags": [], "bug_id": 23890, "attachment_id": null, "is_private": false, "id": 47710, "time": "2003-11-20T15:54:27Z", "creator": "deweese@apache.org", "creation_time": "2003-11-20T15:54:27Z", "text": "The bug was on our end.\nWe used a WeakHashMap to track JavaScript objects\nregistered with addEventListener (so we can remove\nthem when removeEventListener is called).  In your\ncase the problem was that the object registered as\nthe listener contained a reference to the event target.\nThis prevented the WeakHashMap from purging the entry.\n\nThis is now fixed locally and I will commit the change\nlater today.\n\nThanks for reporting this, it was a tricky bug!"}]