[{"attachment_id": null, "tags": [], "bug_id": 9856, "is_private": false, "count": 0, "id": 17761, "time": "2002-06-14T00:10:57Z", "creator": "nvick@capcollege.bc.ca", "creation_time": "2002-06-14T00:10:57Z", "text": "A response.sendError(404) invokation will not work correctly if it is done \nafter a response.getOutputStream() invokation AND you have a custom 404 error-\npage.\n\nThe following code works correctly. If you have configured a custom 404 error-\npage, you receive it; if you have not configured a custom error page, you will \nreceive a default 404 error page.\n\npublic void doGet(HttpServletRequest request, HttpServletResponse response)\nthrows ServletException, IOException {\n  response.sendError(404);\n}\n\nThe following code does not work correctly, but I think it should. If you have \nconfigured a custom 404 error-page, you will receive nothing (each browser will \nhandle this differntly); however, if you have not configured a custom error \npage, you will receive a default 404 error page.\n\npublic void doGet(HttpServletRequest request, HttpServletResponse response)\nthrows ServletException, IOException {\n  response.getOutputStream();\n  response.sendError(404);\n}\n\nI am using Tomcat 4.0.2 final with Sun's JDK 1.4 final on Linux 7.1 on a single \nIntel processor with 512 MB of memory. I am quite sure that my custom 404 error-\npage is configured correctly because it is displayed when the DefaultServlet \ncan not find a page and when any Servlet calls sendError(404) without calling \ngetOutputStream()."}, {"attachment_id": null, "tags": [], "bug_id": 9856, "is_private": false, "count": 1, "id": 17836, "time": "2002-06-15T00:29:55Z", "creator": "remm@apache.org", "creation_time": "2002-06-15T00:29:55Z", "text": "It depends on what your error page is doing. If the errorPage wants to use a\nwriter, then it will fail, because you already used the output stream in your\nresponse. That limitation of the servlet API is arbitrary (Tomcat - esp 3.3 and\n4.1 - would handle mixed output very well), but you seem to be running into it here.\n\nThe workaround is to have your error page use an output stream if the writer is\nnot available (assuming it is not a JSP).\n\nAlternatly, it could be seen as a Tomcat limitation (the response state could be\nfully reset when the forward is done), although this is not clear to me.\n\nMarking as an enhancement."}, {"count": 2, "tags": [], "creator": "niels_meersschaert@businessweek.com", "is_private": false, "text": "This is a more significant issue than an enhancement.  I've run into an issue with a filter which modifies \nthe response object.  It appears that error-page is handled after the filters.  If the filter modifies a \nresponse object (effectively calling getOutputStream()), the error-page will throw the exception \ndescribed.  Since much of the benefit of the error-page directive is to setup a jsp page for displaying of \nerror messages (including exceptions and error-codes like 404), this is a major bug.  I've been unable \nto determine any workaround other than either not using the filter, or not using error-page directives, \nwhich of course severley limits functionality.", "id": 71995, "time": "2005-03-08T19:15:34Z", "bug_id": 9856, "creation_time": "2005-03-08T19:15:34Z", "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 9856, "text": "Well, sorry you don't like it, but this will not be changed, as it derives from\nthe specification.", "id": 71999, "time": "2005-03-08T19:26:49Z", "creator": "remm@apache.org", "creation_time": "2005-03-08T19:26:49Z", "is_private": false, "attachment_id": null}]