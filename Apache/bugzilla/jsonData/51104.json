[{"count": 0, "tags": [], "creator": "ioemen@gmail.com", "attachment_id": null, "id": 145940, "time": "2011-04-21T18:25:07Z", "bug_id": 51104, "creation_time": "2011-04-21T18:25:07Z", "is_private": false, "text": "Hi All,\nThis is Torden Cho, I doing development little module base on C++.\n\nCurrent I doing 1.3 api migration 2.x api however I have a problem in http_config.h\n\nthat's line is below\n\n159: typedef const char *(*cmd_func) ();\n\nand below is g++ error message.\n\nerror: invalid conversion from \u2018const char* (*)(cmd_parms*, void*, const char*)\u2019 to \u2018const char* (*)()\u2019\n\nAnyway, I have been self path to http_config.h so therefore I be fine.\nI thinks so we providing solution to who c++ module developer.\n\n--- /usr/local/httpd/include/http_config.h      2011-04-22 05:18:19.000000000 +0900\n+++ /usr/local/httpd/include/http_config.h.new  2011-04-22 05:17:59.000000000 +0900\n@@ -155,7 +155,11 @@\n \n #else /* AP_HAVE_DESIGNATED_INITIALIZER */\n \n-typedef const char *(*cmd_func) (cmd_parms *, void *, const char *);\n+#ifdef __cplusplus\n+typedef const char *(*cmd_func) (cmd_parms *cmd, void *dummy, const char *path);\n+#else\n+typedef const char *(*cmd_func) ();\n+#endif\n \n # define AP_NO_ARGS  func\n # define AP_RAW_ARGS func\n\nAny Idea? Any Suggest?\n\n\nThanks Buddy.\n--Torden."}, {"count": 1, "tags": [], "bug_id": 51104, "text": "The types of the union members differ. Therefore you cannot find a definition for cmd_func that works for all union members. For example, your patch will only work with AP_RAW_ARGS and AP_TAKE1 but not with AP_TAKE2, ...\n\nI think the only valid solution in current C++ is to use a cast.", "id": 145988, "time": "2011-04-25T16:28:18Z", "creator": "sf@sfritsch.de", "creation_time": "2011-04-25T16:28:18Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "creator": "m-takahashi@if.jp.nec.com", "attachment_id": null, "id": 185751, "time": "2015-10-14T07:39:17Z", "bug_id": 51104, "creation_time": "2015-10-14T07:39:17Z", "is_private": false, "text": "> I think the only valid solution in current C++ is to use a cast.\n\nC++11 supports designated initializer for union.\nSo it must be fixed.\n\nFollowing works fine.\n\n$ diff /usr/include/apache2/ap_config.h /usr/include/apache2/ap_config.h.old\n175c175\n< #if (defined(__GNUC__) && !defined(__cplusplus)) || (defined(__cplusplus) && 201103L <= __cplusplus) || defined(AP_HAVE_C99)\n---\n> #if (defined(__GNUC__) && !defined(__cplusplus)) || defined(AP_HAVE_C99)"}]