[{"attachment_id": null, "tags": [], "bug_id": 33868, "is_private": false, "count": 0, "id": 71874, "time": "2005-03-06T10:50:26Z", "creator": "contact@gm-mathar.de", "creation_time": "2005-03-06T10:50:26Z", "text": "Problem:\nThe Xslt core task has a required \"style\" attribute which specifies a single\nstylesheet to be used for transforming, even if multiple xml source files are\nprocessed in one task run. IMHO this is a major flexibility drawback and not a\ngood thing :)\n\nSolution:\nThe TraX API knows about the \"xml-stylesheet\" processing instruction. This\ninstruction in an xml source file tells the XSLT processor which stylesheet to\nuse for transforming this particular xml file. The Xslt task should support\nthis, so if no style attribute is given, it would try to use the stylesheet(s)\nspecified by processing instruction in the xml source file(s).\n\nImplementation:\nThe following patch implements the solution mentioned above. It was generated\nagainst todays HEAD revision and affects three files:\n/ant/src/main/org/apache/tools/ant/taskdefs/XSLTLiaison2.java\n/ant/src/main/org/apache/tools/ant/taskdefs/XSLTProcess.java\n/ant/src/main/org/apache/tools/ant/taskdefs/optional/TraXLiaison.java\n\nLimitations:\n- The W3C recommendation defining the \"xml-stylesheet\" processing instruction\nallows any number of them to show up in an xml file. The active one is selected\nby several optional pseudo-attributes of the processing instructions on each\ntrasformation run. The patch doesnt support this, but it wouldnt be hard to do.\n- Works for TraX processors only. Forget about the others anyway... :)\n- The reloadstylesheet attribute of the Xslt task is implicitly set true if the\nxml-stylesheet proc. inst. are used.\n\n---------------------------------- snip -------------------------------------\n\nIndex: src/main/org/apache/tools/ant/taskdefs/XSLTLiaison2.java\n===================================================================\nRCS file:\n/home/cvspublic/ant/src/main/org/apache/tools/ant/taskdefs/XSLTLiaison2.java,v\nretrieving revision 1.7\ndiff -u -r1.7 XSLTLiaison2.java\n--- src/main/org/apache/tools/ant/taskdefs/XSLTLiaison2.java\t9 Mar 2004\n16:48:07 -0000\t1.7\n+++ src/main/org/apache/tools/ant/taskdefs/XSLTLiaison2.java\t6 Mar 2005 08:39:25\n-0000\n@@ -17,6 +17,9 @@\n \n package org.apache.tools.ant.taskdefs;\n \n+import java.io.File;\n+import org.apache.tools.ant.BuildException;\n+\n /**\n  * Extended Proxy interface for XSLT processors.\n  *\n@@ -28,4 +31,9 @@\n      * Configure the liasion from the XSLTProcess task\n      */\n     void configure(XSLTProcess xsltTask);\n+    \n+    /**\n+     * Get the stylesheet for an xml source file\n+     */\n+    File getStylesheet(File xmlFile) throws BuildException;\n }\nIndex: src/main/org/apache/tools/ant/taskdefs/XSLTProcess.java\n===================================================================\nRCS file:\n/home/cvspublic/ant/src/main/org/apache/tools/ant/taskdefs/XSLTProcess.java,v\nretrieving revision 1.90\ndiff -u -r1.90 XSLTProcess.java\n--- src/main/org/apache/tools/ant/taskdefs/XSLTProcess.java\t6 Jan 2005\n12:05:05 -0000\t1.90\n+++ src/main/org/apache/tools/ant/taskdefs/XSLTProcess.java\t6 Mar 2005 08:39:28\n-0000\n@@ -36,7 +36,7 @@\n  * Processes a set of XML documents via XSLT. This is\n  * useful for building views of XML based documentation.\n  *\n- * @version $Revision: 1.90 $\n+ * @version $Revision: 1.78.2.7 $\n  *\n  * @since Ant 1.1\n  *\n@@ -197,10 +197,6 @@\n         String[]         list;\n         String[]         dirs;\n \n-        if (xslFile == null) {\n-            throw new BuildException(\"no stylesheet specified\", getLocation());\n-        }\n-\n         if (inFile != null && !inFile.exists()) {\n             throw new BuildException(\"input file \" + inFile.toString() + \" does\nnot exist\", getLocation());\n         }\n@@ -219,17 +215,35 @@\n \n             log(\"Using \" + liaison.getClass().toString(), Project.MSG_VERBOSE);\n \n-            File stylesheet = getProject().resolveFile(xslFile);\n-            if (!stylesheet.exists()) {\n-                stylesheet = FILE_UTILS.resolveFile(baseDir, xslFile);\n-                /*\n-                 * shouldn't throw out deprecation warnings before we know,\n-                 * the wrong version has been used.\n-                 */\n-                if (stylesheet.exists()) {\n-                    log(\"DEPRECATED - the style attribute should be relative \"\n-                        + \"to the project\\'s\");\n-                    log(\"             basedir, not the tasks\\'s basedir.\");\n+            /* if no style attribute is given, the stylesheet will be\n+             * determined by the \"xml-stylesheet\" processing directive\n+             * of every single xml file\n+             */\n+            File stylesheet = null;\n+            if (xslFile == null) {\n+                if (!(liaison instanceof XSLTLiaison2)) {\n+                    throw new BuildException(\n+                        \"attribute \\\"style\\\" is required if \\\"processor\\\" is\nnot \\\"trax\\\"\",\n+                        getLocation());\n+                }\n+                log(\"Using \\\"xml-stylesheet\\\" processing directive(s), \" +\n+                    \" the reloadstylesheet attribute is set to \\\"true\\\"\", +\n+                    Project.MSG_INFO);\n+                this.reuseLoadedStylesheet = false;\n+            }\n+            else {\n+                stylesheet = getProject().resolveFile(xslFile);\n+                if (!stylesheet.exists()) {\n+                    stylesheet = FILE_UTILS.resolveFile(baseDir, xslFile);\n+                    /*\n+                     * shouldn't throw out deprecation warnings before we know,\n+                     * the wrong version has been used.\n+                     */\n+                    if (stylesheet.exists()) {\n+                        log(\"DEPRECATED - the style attribute should be relative \"\n+                            + \"to the project\\'s\");\n+                        log(\"             basedir, not the tasks\\'s basedir.\");\n+                    }\n                 }\n             }\n \n@@ -464,7 +478,6 @@\n         File   inF = null;\n \n         try {\n-            long styleSheetLastModified = stylesheet.lastModified();\n             inF = new File(baseDir, xmlFile);\n \n             if (inF.isDirectory()) {\n@@ -493,15 +506,7 @@\n \n             outF = new File(destDir, outFileName[0]);\n \n-            if (force\n-                || inF.lastModified() > outF.lastModified()\n-                || styleSheetLastModified > outF.lastModified()) {\n-                ensureDirectoryFor(outF);\n-                log(\"Processing \" + inF + \" to \" + outF);\n-\n-                configureLiaison(stylesheet);\n-                liaison.transform(inF, outF);\n-            }\n+            update(inF, outF, stylesheet);\n         } catch (Exception ex) {\n             // If failed to process document, must delete target document,\n             // or it will not attempt to process it the second time\n@@ -526,25 +531,11 @@\n     private void process(File inFile, File outFile, File stylesheet)\n          throws BuildException {\n         try {\n-            long styleSheetLastModified = stylesheet.lastModified();\n             log(\"In file \" + inFile + \" time: \" + inFile.lastModified(),\n                 Project.MSG_DEBUG);\n             log(\"Out file \" + outFile + \" time: \" + outFile.lastModified(),\n                 Project.MSG_DEBUG);\n-            log(\"Style file \" + xslFile + \" time: \" + styleSheetLastModified,\n-                Project.MSG_DEBUG);\n-            if (force || inFile.lastModified() >= outFile.lastModified()\n-                || styleSheetLastModified >= outFile.lastModified()) {\n-                ensureDirectoryFor(outFile);\n-                log(\"Processing \" + inFile + \" to \" + outFile,\n-                    Project.MSG_INFO);\n-                configureLiaison(stylesheet);\n-                liaison.transform(inFile, outFile);\n-            } else {\n-                log(\"Skipping input file \" + inFile\n-                    + \" because it is older than output file \" + outFile\n-                    + \" and so is the stylesheet \" + stylesheet,\nProject.MSG_DEBUG);\n-            }\n+            update(inFile, outFile, stylesheet);\n         } catch (Exception ex) {\n             log(\"Failed to process \" + inFile, Project.MSG_INFO);\n             if (outFile != null) {\n@@ -555,6 +546,38 @@\n     }\n \n     /**\n+     * Configure and call the liaison transformation\n+     * \n+     * @param inFile the input file to process.\n+     * @param outFile the destination file.\n+     * @param stylesheet the stylesheet to use.\n+     */\n+    private void update(File inFile, File outFile, File stylesheet)\n+            throws BuildException, Exception {\n+        File xslFile;\n+        if (stylesheet == null) {\n+            xslFile = ((XSLTLiaison2)liaison).getStylesheet(inFile);\n+        }\n+        else {\n+            xslFile = stylesheet;\n+        }\n+        log(\"Style file \" + xslFile + \" time: \" + xslFile.lastModified(),\n+            Project.MSG_DEBUG);\n+        if (force || inFile.lastModified() >= outFile.lastModified()\n+                || xslFile.lastModified() >= outFile.lastModified()) {\n+            ensureDirectoryFor(outFile);\n+            log(\"Processing \" + inFile + \" to \" + outFile, Project.MSG_INFO);\n+            configureLiaison(xslFile);\n+            liaison.transform(inFile, outFile);\n+        } else {\n+            log(\"Skipping input file \" + inFile\n+                + \" because it is older than output file \" + outFile\n+                + \" and so is the stylesheet \" + stylesheet,\n+                Project.MSG_DEBUG);\n+        }\n+    }\n+\n+    /**\n      * Ensure the directory exists for a given file\n      *\n      * @param targetFile the file for which the directories are required.\nIndex: src/main/org/apache/tools/ant/taskdefs/optional/TraXLiaison.java\n===================================================================\nRCS file:\n/home/cvspublic/ant/src/main/org/apache/tools/ant/taskdefs/optional/TraXLiaison.java,v\nretrieving revision 1.35\ndiff -u -r1.35 TraXLiaison.java\n--- src/main/org/apache/tools/ant/taskdefs/optional/TraXLiaison.java\t9 Mar 2004\n16:48:15 -0000\t1.35\n+++ src/main/org/apache/tools/ant/taskdefs/optional/TraXLiaison.java\t6 Mar 2005\n08:39:30 -0000\n@@ -25,6 +25,7 @@\n import java.io.IOException;\n import java.io.InputStream;\n import java.io.OutputStream;\n+import java.net.URI;\n import java.util.Vector;\n import java.util.Enumeration;\n import javax.xml.parsers.ParserConfigurationException;\n@@ -430,4 +431,32 @@\n             setOutputProperty(prop.getName(), prop.getValue());\n         }\n     }\n+    \n+    /**\n+     * Get the stylesheet for an xml source file from its \"xml-stylesheet\"\n+     * processing instruction\n+     * \n+     * @param xmlFile the xml source file in question\n+     * @return the stylesheet file\n+     */\n+    public File getStylesheet(File xmlFile)\n+            throws BuildException {\n+        File xslFile = null;\n+        Source xmlSource = new StreamSource(xmlFile);\n+        Source xslSource;\n+        \n+        try {\n+            xslSource = getFactory().getAssociatedStylesheet(\n+                xmlSource, null, null, null);\n+            if (xslSource == null) {\n+                throw new TransformerConfigurationException(\n+                    \"no matching \\\"xml-stylesheet\\\" processing instruction\");\n+            }\n+            xslFile = new File((new URI(xslSource.getSystemId())).getPath());\n+        }\n+        catch (Exception e) {\n+            throw new BuildException(e);\n+        }\n+        return xslFile;\n+    }\n }"}, {"count": 1, "tags": [], "text": "Created attachment 14438\nThe correct patch without the additional line breaks", "is_private": false, "id": 72045, "creator": "contact@gm-mathar.de", "time": "2005-03-09T10:18:39Z", "bug_id": 33868, "creation_time": "2005-03-09T10:18:39Z", "attachment_id": 14438}, {"count": 2, "tags": [], "bug_id": 33868, "is_private": false, "text": "(In reply to comment #0)\nThe patch included in the original report is broken because of additional line\nbreaks, sry :o/. I attached the correct one to it. ", "id": 72046, "time": "2005-03-09T10:22:41Z", "creator": "contact@gm-mathar.de", "creation_time": "2005-03-09T10:22:41Z", "attachment_id": null}]