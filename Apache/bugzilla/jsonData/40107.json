[{"count": 0, "tags": [], "creator": "jongjin.choe@gmail.com", "attachment_id": null, "text": "I am using mod_jk 1.2.14 with SUN ONE web server 6.1 on HP-UX.\n\nI found that this error message on mod_jk log file.\n-------------------------------------------------------\n[&#54868; 7&#50900; 19 15:27:55 2006] [16718:0016] [info]  jk_ajp_common.c (1178): Socket 35\nis not connected any more (errno=11)\n[&#54868; 7&#50900; 19 15:27:55 2006] [16718:0016] [info]  jk_ajp_common.c (1202): Error\nsending request. Will try another pooled connection\n[&#54868; 7&#50900; 19 15:27:55 2006] [16718:0016] [info]  jk_ajp_common.c (1178): Socket 34\nis not connected any more (errno=11)\n[&#54868; 7&#50900; 19 15:27:55 2006] [16718:0016] [info]  jk_ajp_common.c (1202): Error\nsending request. Will try another pooled connection\n[&#54868; 7&#50900; 19 15:27:55 2006] [16718:0016] [info]  jk_ajp_common.c (1225): All\nendpoints are disconnected or dead\n-------------------------------------------------------------\n\nDigging into mod_jk source code, jk_is_socket_connected() in jk_connect.c seems\n to have a problem.\n\nIn HP-UX, non-blocking read() would fail with errno 11 (EAGAIN) instead of\nEWOULDBLOCK.\n\nReviewing errno.h and related files in several platforms, I found that\nEWOULDBLOCK is same as EAGAIN in Linux, but NOT in HP-UX.\nI feel that EAGAIN should be treated same as EWOULDBLOCK in\njk_is_socket_connected(). \n\n-- Jongjin", "id": 91563, "time": "2006-07-25T02:43:24Z", "bug_id": 40107, "creation_time": "2006-07-25T02:43:24Z", "is_private": false}, {"count": 1, "attachment_id": null, "bug_id": 40107, "text": "For the unenlightened what are the semantic differences ?  Is EAGAIN used for\nread/accept operations and EWOULDBLOCK used for write/connect operations ?", "id": 91565, "time": "2006-07-25T05:00:51Z", "creator": "darryl@darrylmiles.org", "creation_time": "2006-07-25T05:00:51Z", "tags": [], "is_private": false}, {"count": 2, "tags": [], "bug_id": 40107, "text": "Darryl, \nI don't know exactly what the difference is between EAGAIN and EWOULDBLOCK. \nAs a quick google search result, I got following link : \nhttp://www.codecomments.com/archive286-2005-10-641948.html\n\nThat may be helpful. Thanks for your interest.\n\n\n\n", "id": 91566, "time": "2006-07-25T05:11:36Z", "creator": "jongjin.choe@gmail.com", "creation_time": "2006-07-25T05:11:36Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "text": "(In reply to comment #2)\n\n> http://www.codecomments.com/archive286-2005-10-641948.html\n\nThat whole discussion is utterly bizarre and pointless - the thread drifts off\ninto arguing about how to handle situations where EWOULDBLOCK is not defined. \n\nThe issue here is that on some OSes, the two constants have different values,\nand read() can return either value depending on the circumstances of how the\nsocket was set up. (But from a semantic point of view, what it's saying in both\ncases is that there is a need to retry the operation, which is the important\nthing to take away. See\nhttp://devrsrc1.external.hp.com/STKS/cgi-bin/man2html?manpage=/usr/share/man/man2.Z/send.2\n- the link in the quoted thread)\n\nOn other OSes, the two constants are the same value.  Are there any on which\nEWOULDBLOCK is not even defined? I don't think so. \n\nIn any case, the code could be fixed as:\n\n  if (errno == EAGAIN\n#if defined(EWOULDBLOCK) && EWOULDBLOCK != EAGAIN\n      || errno == EWOULDBLOCK\n#endif\n     )\n  {\n     // try again later\n  }\n", "attachment_id": null, "id": 91581, "creator": "shankarunni@netscape.net", "time": "2006-07-25T21:05:57Z", "bug_id": 40107, "creation_time": "2006-07-25T21:05:57Z", "is_private": false}, {"count": 4, "tags": [], "creator": "jongjin.choe@gmail.com", "text": "Seeing manpages of read() from various platforms(Linux, HP-UX, Solaris, AIX), \nI found that EWOULDBLOCK is not described in read()'s error code. \nAnyway, I think Shakar's patch (in comment #3) is right.\nIs there any plan to apply that patch?\n", "id": 91727, "attachment_id": null, "bug_id": 40107, "creation_time": "2006-07-31T12:07:30Z", "time": "2006-07-31T12:07:30Z", "is_private": false}, {"count": 5, "tags": [], "creator": "mturk@apache.org", "attachment_id": null, "text": "jk_is_socket_connected() has been rewritten and does not use\nnon-blocking socket mode any more.\nPlease check the current SVN trunk.\n", "id": 92524, "time": "2006-08-25T07:37:38Z", "bug_id": 40107, "creation_time": "2006-08-25T07:37:38Z", "is_private": false}, {"count": 6, "tags": [], "bug_id": 40107, "attachment_id": null, "text": "(In reply to comment #5)\n> jk_is_socket_connected() has been rewritten and does not use\n> non-blocking socket mode any more.\n> Please check the current SVN trunk.\n\nDo you have any other reason why not using non-blocking socket mode? From my \nview, non-blocking socket should have better performance. In my stress test, I \nsaw 2x performance boost with non-blocking vs. blocking socket. \n\nTo fix this issue on HP-UX, I think the patch (in comment #3) is good. \n\nThx, Xuekun", "id": 104584, "time": "2007-06-20T20:54:00Z", "creator": "xuekun.hu@gmail.com", "creation_time": "2007-06-20T20:54:00Z", "is_private": false}, {"count": 7, "tags": [], "bug_id": 40107, "attachment_id": null, "text": "Move a couple of fixed JK issues from resolved to closed.", "id": 112400, "time": "2008-01-01T16:51:27Z", "creator": "rainer.jung@kippdata.de", "creation_time": "2008-01-01T16:51:27Z", "is_private": false}]