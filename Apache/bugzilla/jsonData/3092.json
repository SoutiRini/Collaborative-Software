[{"count": 0, "tags": [], "text": "If the servlet is not mapped to a URL (i.e. there are no <servlet-mapping> tag),\nthe servlet init method can not get the initial parameters.\n\nThe servlet sample code are attached:\n\npackage servlets.testservlets;\n\nimport java.io.*;\nimport javax.servlet.*;\nimport javax.servlet.http.*;\n\n\n\npublic class ParameterizedServlet extends HttpServlet {\n\n   private int repeats = 1;\n   private String message;\n   private final static String defaultMessage = \"No Message\" ;\n   \n   public void init (ServletConfig config) throws ServletException {\n\n      super.init(config);\n\n      System.err.println(\"INIT: Initializing the ParameterizedServlet ...\");\n\n      message = config.getInitParameter(\"message\");\n\n      if (message == null ) {\n         System.err.println(\"INIT: Init Param message is null. \" +\n                            \"Reverting to default ...\");\n         message = ParameterizedServlet.defaultMessage;\n      }\n\n      try {\n         repeats = Integer.parseInt(config.getInitParameter(\"repeats\"));\n         System.err.println(\"INIT: Init Param repeats set to \" + repeats );\n      } catch (NumberFormatException nfe ) {\n         System.err.println(\"INIT: Init Param repeats raised exception : \" +\n                            nfe.getMessage());\n      }\n\n   }\n\n   public void doGet (HttpServletRequest request , \n                      HttpServletResponse response)\n      throws ServletException, IOException {\n      \n      response.setContentType(\"text/html\");\n      PrintWriter out = response.getWriter();\n   \n      String docType = \n         \"<!DOCTYPE HTML PUBLIC \\\"-//W3C//DTD HTML 4.0 Transitional//EN\\\">\\n\";\n \n      out.println(docType +\n         \"<HTML>\\n\" +\n         \"<HEAD><TITLE>Servlet with Init Params</TITLE></HEAD>\\n\" +\n         \"<BODY BGCOLOR=\\\"#FDF5E6\\\">\\n\" +\n         \"<H1 ALIGN=CENTER> The Detention Room </H1>\"); \n     \n      for (int i=0; i < repeats; i++ ) {\n         out.println(message + \"<BR>\");\n      }\n      out.println(\"</HTML>\");\n\n    }\n\n}\n\nIn the web.xml set\n\n\t<servlet>\n\t\t<servlet-name>\n\t\t\tParameterizedServlet\n\t\t</servlet-name>\n\t\t<servlet-class>\n\t\t\tservlets.testservlets.ParameterizedServlet\n\t\t</servlet-class>\n\t\t<init-param>\n\t\t\t<param-name>\n\t\t\t\tmessage\n\t\t\t</param-name>\n\t\t\t<param-value>\n\t\t\t\tThis is the message in web.xml\n\t\t\t</param-value>\n\t\t</init-param>\n\t</servlet>\n\nBut got:\n\nINIT: Initializing the ParameterizedServlet ...\nINIT: Init Param message is null. Reverting to default ...\nINIT: Init Param repeats raised exception : null\n\nin log file", "is_private": false, "id": 4465, "creator": "jian.cai@sun.com", "time": "2001-08-10T14:38:31Z", "bug_id": 3092, "creation_time": "2001-08-10T14:38:31Z", "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 3092, "attachment_id": null, "id": 4595, "time": "2001-08-15T18:30:36Z", "creator": "craig.mcclanahan@sun.com", "creation_time": "2001-08-15T18:30:36Z", "is_private": false, "text": "That is the way it is supposed to work.\n\nThe only way to execute a servlet that is not mapped is through the \"invoker\"\nfacility (/servlet/servlets.testservlet.ParameterizedServlet).  Because this\nfeature is *not* defined in the servlet specification, you are not guaranteed\nanything about how it works.  In Tomcat, this feature creates a new <servlet>\ndefinition for each unique class you execute.\n\nThe fact that you might have a <servlet> definition for the same class name is\ncoincidence.  In fact, it's perfectly legal to have more than one <servlet>\ndefinition for the same servlet class (with different init parameters).\n\nIf you want your init parameters to be recognized, you *must* define a\n<servlet-mapping> that selects this <servlet> definition.\n"}]