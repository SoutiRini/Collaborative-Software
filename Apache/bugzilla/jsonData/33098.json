[{"count": 0, "tags": [], "bug_id": 33098, "text": "Tony Bennett reported to dav-dev that mod_dav does not notice if you send a\nrequest body with a \"C-L: X\" header but send EOF before sending X bytes of\nrequest body; probably this needs to be caught somewhere above mod_dav.", "id": 69678, "time": "2005-01-14T14:33:36Z", "creator": "jorton@redhat.com", "creation_time": "2005-01-14T14:33:36Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 33098, "attachment_id": null, "id": 127295, "time": "2009-05-22T08:21:59Z", "creator": "poirier@pobox.com", "creation_time": "2009-05-22T08:21:59Z", "is_private": false, "text": "Seems like an issue in core rather than mod_dav."}, {"count": 2, "tags": [], "creator": "sf@sfritsch.de", "attachment_id": null, "text": "I have a report that mod_dav occasionally deletes files after an unsuccessful upload. See\nhttp://bugs.debian.org/cgi-bin/bugreport.cgi?bug=525137\n\nThere is the error message \"Could not get next bucket brigade [500, #0]\" in the error log. Could this be the same issue?", "id": 127659, "time": "2009-06-04T11:38:30Z", "bug_id": 33098, "creation_time": "2009-06-04T11:38:30Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 33098, "attachment_id": null, "id": 128602, "time": "2009-07-07T12:16:17Z", "creator": "sf@sfritsch.de", "creation_time": "2009-07-07T12:16:17Z", "is_private": false, "text": "The Debian bug is a different issue."}, {"count": 4, "tags": [], "bug_id": 33098, "text": "It would be possible to fix this in mod_dav by counting the bytes received and comparing with the number in the C-L header. If there is some encoding like chunked or gzip, the C-L will already have been removed, so no problem there.\n\nOr should the core / some input filter do the counting and return an error when mod_dav tries to read the missing data?", "id": 128603, "time": "2009-07-07T12:20:48Z", "creator": "sf@sfritsch.de", "creation_time": "2009-07-07T12:20:48Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 33098, "attachment_id": null, "id": 128604, "time": "2009-07-07T12:32:34Z", "creator": "rpluem@apache.org", "creation_time": "2009-07-07T12:32:34Z", "is_private": false, "text": "Doesn't mod_dav get an error message (at least a timeout error) if it tries to read from the input filter chain and no more data is present?"}, {"count": 6, "tags": [], "creator": "sf@sfritsch.de", "attachment_id": null, "text": "mod_dav just reads until it sees an EOS bucket.\n\nIt ignores all metadata buckets. Is there some error bucket when the post body is too short that mod_dav could use to detect the error?", "id": 128605, "time": "2009-07-07T12:45:39Z", "bug_id": 33098, "creation_time": "2009-07-07T12:45:39Z", "is_private": false}, {"count": 7, "tags": [], "bug_id": 33098, "attachment_id": null, "id": 128606, "time": "2009-07-07T13:38:24Z", "creator": "rpluem@apache.org", "creation_time": "2009-07-07T13:38:24Z", "is_private": false, "text": "(In reply to comment #6)\n> mod_dav just reads until it sees an EOS bucket.\n> \n> It ignores all metadata buckets. Is there some error bucket when the post body\n> is too short that mod_dav could use to detect the error?\n\nNo, but if not all content was sent it shouldn't see an EOS bucket. Instead if the content is not sent completely ap_get_brigade should return an error (most likely a timeout).\nAnd in fact it does (see line 978 of mod_dav.c on trunk).\nAnd ap_xml_parse_input does as well."}, {"count": 8, "tags": [], "bug_id": 33098, "attachment_id": null, "id": 128608, "time": "2009-07-07T13:48:48Z", "creator": "sf@sfritsch.de", "creation_time": "2009-07-07T13:48:48Z", "is_private": false, "text": "(In reply to comment #7)\n> No, but if not all content was sent it shouldn't see an EOS bucket. Instead if\n> the content is not sent completely ap_get_brigade should return an error (most\n> likely a timeout).\n\nok, then the bug is in the input filter.\n\nI was under the (wrong) impression that this bug only appears if C-L is given. But it also appears with chunked encoding if the first chunk is transferred completely and the body is truncated later."}, {"count": 9, "tags": [], "text": "Created attachment 23936\nfix to return an errror when EOS is seen in an incomplete body in ap_http_filter()\n\nthis seems to fix the issue (haven't done much testing, though)", "attachment_id": 23936, "id": 128612, "creator": "sf@sfritsch.de", "time": "2009-07-07T15:20:34Z", "bug_id": 33098, "creation_time": "2009-07-07T15:20:34Z", "is_private": false}, {"count": 10, "tags": [], "bug_id": 33098, "attachment_id": null, "text": "(In reply to comment #9)\n> Created an attachment (id=23936) [details]\n> fix to return an errror when EOS is seen in an incomplete body in\n> ap_http_filter()\n> \n> this seems to fix the issue (haven't done much testing, though)\n\nBasicly looks good. IMHO it is safe to assume that if there is an EOS bucket in the brigade then it is the last bucket. Thus you can safe the loop and just check if the last bucket is an EOS bucket.", "id": 128626, "time": "2009-07-08T00:17:45Z", "creator": "rpluem@apache.org", "creation_time": "2009-07-08T00:17:45Z", "is_private": false}, {"count": 11, "tags": [], "bug_id": 33098, "attachment_id": 23944, "text": "Created attachment 23944\nupdated fix\n\nThanks. It works without the loop, too.", "id": 128646, "time": "2009-07-08T13:39:36Z", "creator": "sf@sfritsch.de", "creation_time": "2009-07-08T13:39:36Z", "is_private": false}, {"count": 12, "tags": [], "bug_id": 33098, "attachment_id": null, "id": 128655, "time": "2009-07-08T23:30:00Z", "creator": "rpluem@apache.org", "creation_time": "2009-07-08T23:30:00Z", "is_private": false, "text": "Committed to trunk a r792409."}, {"count": 13, "tags": [], "text": "Backported to 2.2.x.  Should be in the next 2.2 release after 2.2.14.", "attachment_id": null, "id": 131245, "creator": "poirier@pobox.com", "time": "2009-10-20T07:39:09Z", "bug_id": 33098, "creation_time": "2009-10-20T07:39:09Z", "is_private": false}]