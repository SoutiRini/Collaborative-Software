[{"count": 0, "attachment_id": null, "creator": "aklimuk@iba.by", "text": "If loop variable is named 'param', tag 'out' evaluates it to EMPTY string.\nIf loop variable has any other name, it is processed correctly.\n\nExample 1. Incorrect processing.\n\t<c:forEach items=\"${cols}\" var=\"param\">\n\t\t<c:out value=\"${param.name}\"/><br>\n\t</c:forEach>\n\nExample 2. Correct processing.\n\t<c:forEach items=\"${cols}\" var=\"col\">\n\t\t<c:out value=\"${col.name}\"/><br>\n\t</c:forEach>\n\nExample 3. Correct processing. This is modified Example 1.\n\t<c:forEach items=\"${cols}\" var=\"param\">\n\t\t<c:out value=\"${pageScope.param.name}\"/><br>\n\t</c:forEach>\n\nI checked the code in debugger. In all cases 'pageContext' contains attribute with correct name. E.g. in Example 1, 'pageContext' contains an attribute 'param' with correct value.\n\nThe same problem exists if <c:forEach> is replaced by <logic:iterate>.\n\nOther tags work correctly in this case. E.g. following code works correctly:\n\t<c:forEach items=\"${cols}\" var=\"param\">\n                <html:text name=\"param\" property=\"name\"/><br>\n\t</c:forEach>\n\nSo, the problem is somewhere inside 'out'.", "id": 95322, "time": "2006-11-02T02:47:11Z", "bug_id": 40870, "creation_time": "2006-11-02T02:47:11Z", "tags": [], "is_private": false}, {"count": 1, "attachment_id": 19069, "creator": "aklimuk@iba.by", "text": "Created attachment 19069\ntest.jsp\n\nFor simplicity, this JSP contains definition of bean class used in the\ndescribed examples.", "id": 95323, "time": "2006-11-02T02:50:26Z", "bug_id": 40870, "creation_time": "2006-11-02T02:50:26Z", "tags": [], "is_private": false}, {"count": 2, "tags": [], "creator": "bayard@apache.org", "attachment_id": null, "text": "Is this with the JSTL 1.1.2 release?\n\nLooking at the source, I don't see the word 'param' mentioned, which is odd as\nyou'd expect either the Out of the ForEach code to mention 'param' somewhere for\nthis bug to be happening.", "id": 95492, "time": "2006-11-06T12:22:31Z", "bug_id": 40870, "creation_time": "2006-11-06T12:22:31Z", "is_private": false}, {"count": 3, "tags": [], "creator": "rahul@apache.org", "attachment_id": null, "is_private": false, "id": 95493, "time": "2006-11-06T12:31:37Z", "bug_id": 40870, "creation_time": "2006-11-06T12:31:37Z", "text": "'param' is an implicit JSP variable (map of HTTP request parameters), and IMO, \nits best to not step over implicit variables by re-defining them in any scope \n(choose a different variable name)\n"}, {"count": 4, "tags": [], "bug_id": 40870, "text": "Thanks Rahul - I'm very rusty :)", "id": 95507, "time": "2006-11-06T17:16:21Z", "creator": "bayard@apache.org", "creation_time": "2006-11-06T17:16:21Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 40870, "text": "(In reply to comment #3)\n> 'param' is an implicit JSP variable (map of HTTP request parameters), and IMO, \n> its best to not step over implicit variables by re-defining them in any scope \n> (choose a different variable name)\n> \n\nYou are right, 'param' is am implicit EL variable. But despite this, tags 'forEach' and 'iterate' correctly create the loop variable 'param' and correctly place it to the page context. While looping, this variable is correctly changed. Besides, the tag 'html:text' correctly retrieves variable 'param' from the page context and correctly processes it.\n\nSo why these three tags correctly process 'param' variable, but 'out' doesn't?\nThis seems to be an inconsistency. Why some tags process 'param' in one way, some - in another way? Either NONE of tags should process 'param' as local variable, or ALL of them should process it in the same way.\n", "id": 95562, "time": "2006-11-08T01:31:00Z", "creator": "aklimuk@iba.by", "creation_time": "2006-11-08T01:31:00Z", "is_private": false, "attachment_id": null}, {"count": 6, "tags": [], "bug_id": 40870, "is_private": false, "text": "The loop isn't necessary, the following confirms the bug:\n\n<c:set var=\"param\" value=\"52\"/>\n<c:out value=\"${pageScope.param}\"/><br/>\n<c:out value=\"${param}\"/><br/>", "id": 97606, "time": "2007-01-03T16:25:44Z", "creator": "bayard@apache.org", "creation_time": "2007-01-03T16:25:44Z", "attachment_id": null}, {"count": 7, "attachment_id": null, "creator": "bayard@apache.org", "is_private": false, "id": 97608, "time": "2007-01-03T16:40:00Z", "bug_id": 40870, "creation_time": "2007-01-03T16:40:00Z", "tags": [], "text": "Digging into it, my gut feel is that it's due to line 70 of\norg/apache/taglibs/standard/lang/jstl/JSTLVariableResolver.java. It also\nsuggests that the same problem will exist for:\n\npageContext\npageScope\nrequestScope\nsessionScope\napplicationScope\nparam\nparamValues\nheader\nheaderValues\ninitParam\ncookie\n\nTesting 'header', it's got the same problem.\n\nI think it's not worth the time to try and rewrite this so that things can work\nfor some of them in certain contexts and not for other ones. \nSo we should FAQ this and point out the pageScope workaround."}, {"count": 8, "tags": [], "creator": "bayard@apache.org", "attachment_id": null, "text": "Added to the FAQ:\n\nhttp://wiki.apache.org/jakarta-taglibs/Standard1%2e1%2e3FAQ\n\nResoling WONTFIX.", "id": 98727, "time": "2007-01-29T17:10:26Z", "bug_id": 40870, "creation_time": "2007-01-29T17:10:26Z", "is_private": false}]