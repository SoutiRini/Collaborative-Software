[{"count": 0, "text": "I am running Apache2 with mod_fcgid and am trying to upload a 700MB file. By the end of the upload proccess Apache dies with:\n\nexit signal Segmentation fault (11)\n\nhowever I am able to upload smaller files (around 200MB). PHP settings allow me to upload up to 2GB files as well as the mod_fcgid directive MaxRequestLen.\n\nI have tried to backtrack the error and this is what I have on a gdb command:\n\nProgram terminated with signal 11, Segmentation fault.\n#0  0xb76bb8f3 in apr_bucket_free () from /usr/lib/libaprutil-1.so.0\n\n...\n\n#0  0xb76bb8f3 in apr_bucket_free () from /usr/lib/libaprutil-1.so.0\n#1  0xb76bbd1c in ?? () from /usr/lib/libaprutil-1.so.0\n#2  0xb6ff5e1c in proc_write_ipc () from /usr/lib/apache2/modules/mod_fcgid.so\n#3  0xb6fed2a2 in ?? () from /usr/lib/apache2/modules/mod_fcgid.so\n#4  0xb6fed87a in ?? () from /usr/lib/apache2/modules/mod_fcgid.so\n#5  0xb6fee273 in bridge_request () from /usr/lib/apache2/modules/mod_fcgid.so\n#6  0xb6feb13a in ?? () from /usr/lib/apache2/modules/mod_fcgid.so\n#7  0xb7779c2e in ap_run_handler (r=0xa966b918)\n    at /build/buildd/apache2-2.2.20/server/config.c:159\n#8  0xb777a0a6 in ap_invoke_handler (r=0xa966b918)\n    at /build/buildd/apache2-2.2.20/server/config.c:377\n#9  0xb778b15c in ap_internal_redirect (new_uri=0xa966b908 \"/index.php\", r=0xb734d058)\n    at /build/buildd/apache2-2.2.20/modules/http/http_request.c:554\n#10 0xb7330981 in ?? () from /usr/lib/apache2/modules/mod_rewrite.so\n#11 0xb7779c2e in ap_run_handler (r=0xb734d058)\n    at /build/buildd/apache2-2.2.20/server/config.c:159\n#12 0xb777a0a6 in ap_invoke_handler (r=0xb734d058)\n    at /build/buildd/apache2-2.2.20/server/config.c:377\n#13 0xb778bae8 in ap_process_request (r=0xb734d058)\n    at /build/buildd/apache2-2.2.20/modules/http/http_request.c:282\n#14 0xb7788600 in ap_process_http_connection (c=0xb73ad208)\n    at /build/buildd/apache2-2.2.20/modules/http/http_core.c:190\n#15 0xb77811fe in ap_run_process_connection (c=0xb73ad208)\n    at /build/buildd/apache2-2.2.20/server/connection.c:43\n#16 0xb7792e26 in process_socket (bucket_alloc=<optimized out>, my_thread_num=0, \n    my_child_num=0, sock=0xb73ad058, p=<optimized out>)\n    at /build/buildd/apache2-2.2.20/server/mpm/worker/worker.c:544\n#17 worker_thread (thd=0xb7108428, dummy=0xb90403c8)\n    at /build/buildd/apache2-2.2.20/server/mpm/worker/worker.c:894\n#18 0xb76a651f in ?? () from /usr/lib/libapr-1.so.0\n#19 0xb7669d31 in start_thread () from /lib/i386-linux-gnu/libpthread.so.0\n#20 0xb75b90ce in clone () from /lib/i386-linux-gnu/libc.so.6\nBacktrace stopped: Not enough registers or memory available to unwind further\n\nThe generated core file is around 3GB ...\n\nAny help would be appreciated. \n\nThank you.", "bug_id": 52282, "is_private": false, "id": 151949, "time": "2011-12-04T04:22:29Z", "creator": "nickdragomir@gmail.com", "creation_time": "2011-12-04T04:22:29Z", "tags": [], "attachment_id": null}, {"count": 1, "text": "Could I get an answer on this one please? I can't upload any large files without crashing Apache2.2.20.\n\nThank you.", "bug_id": 52282, "is_private": false, "id": 152052, "time": "2011-12-07T11:39:26Z", "creator": "nickdragomir@gmail.com", "creation_time": "2011-12-07T11:39:26Z", "tags": [], "attachment_id": null}, {"count": 2, "text": "Nick.\n\nWhat version of apr, and apr-util?", "bug_id": 52282, "is_private": false, "id": 152900, "time": "2012-01-18T20:11:32Z", "creator": "wrowe@apache.org", "creation_time": "2012-01-18T20:11:32Z", "tags": [], "attachment_id": null}, {"count": 3, "tags": [], "creator": "nickdragomir@gmail.com", "attachment_id": null, "id": 152924, "time": "2012-01-19T12:46:59Z", "bug_id": 52282, "creation_time": "2012-01-19T12:46:59Z", "is_private": false, "text": "libapr1 Version: 1.4.5-1\nlibaprutil1 Version: 1.3.12+dfsg-2"}, {"count": 4, "text": "I have the exact same problem. I can upload files of around 500MB without problems. But when I come close to or over 1GB apache dies as soon as the upload is at ~99% with a segmentation fault. When this happens a new apache process is taking over the upload and a new temp file is created (filling up again to ~99% of the original file). I could let it run forever until my /tmp dir is full of those almost finished uploads.\n\nMy system:\nGentoo Linux x86_64 with kernel 3.2.12\napache-2.2.22 with worker mpm\napr-1.4.5\naprutil.1.3.12\nmod_fcgid-2.3.6\nphp-5.3.10", "bug_id": 52282, "is_private": false, "id": 158076, "time": "2012-04-14T15:27:25Z", "creator": "tim@3towers.de", "creation_time": "2012-04-14T15:27:25Z", "tags": [], "attachment_id": null}, {"count": 5, "text": "This sounds very similar to what I found in bug 51747 (especially if combined with bug 51749, which exacerbates it) - that the memory usage shoots up at the end of the client data transfer, as the request is read back and handed off to the backend. \n\nThe comment 'The generated core file is around 3GB ...' would support this as the cause, as on 32-bit, the process will run out of addressable memory around this point.", "bug_id": 52282, "is_private": false, "id": 161413, "time": "2012-08-15T09:04:35Z", "creator": "dominic.benson@thirdlight.com", "creation_time": "2012-08-15T09:04:35Z", "tags": [], "attachment_id": null}, {"count": 6, "tags": [], "bug_id": 52282, "attachment_id": null, "text": "Have to agree with Dominic here that this is simply a symptom of the larger issue already reported.  What could help was a stack trace with mod_fcgid built with the -g option (building mod_fcgid against httpd built with maintainer mode should automatically set those flags using that maintainer mode apxs command).\n\n*** This bug has been marked as a duplicate of bug 51747 ***", "id": 163070, "time": "2012-10-30T21:23:25Z", "creator": "wrowe@apache.org", "creation_time": "2012-10-30T21:23:25Z", "is_private": false}]