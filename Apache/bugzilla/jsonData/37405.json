[{"count": 0, "tags": [], "text": "When using the replacefilterfile attribute, it would be handy to be able to\nspecify what delimiter should be used. Unfortunately, someone here has already\ncreated a good number of config files using the pattern  #property.name# so one\nwould have to first create the temporary property file argument to\nreplacefilterfile with the delimeters appended/prepended. I've made a simple\nchange that allows for an optional attribute (default value \"@@\") to do this\nprepending/appending when retrieving the token from the set of properties loaded\nfrom the replacefilterfile file.\nThis way, a property file could be used as is and allow the Replace task to\ncreate the 'correct' pattern.\nHere is the diff:\n[shespelt_cr16875] racssv05:62> diff Replace.java.orig Replace.java\n60a61\n>     private String delimiter=\"@@\";\n238c239,245\n<                     replaceFilter.setToken(token);\n---\n>                     if ( token.startsWith( this.delimiter ) ) {\n>                         replaceFilter.setToken(token);\n>                     } else {\n>                         // this allows for our replacefilterfile to be a\nsimple property file\n>                         replaceFilter.setToken( this.delimiter + token +\nthis.delimiter );\n>                     }\n>\n503a511,514\n>     }\n>\n>     public void setDelimiter( String delim ) {\n>         delimiter = delim;", "is_private": false, "id": 82223, "creation_time": "2005-11-08T17:29:29Z", "time": "2005-11-08T17:29:29Z", "creator": "shespelt@bear.com", "bug_id": 37405, "attachment_id": null}]