[{"count": 0, "tags": [], "text": "If a browser sends a mistaken port number as per\norg.apache.coyote.http11.Http11Processor.parseHost(MessageBytes valueMB)\nthis will overwrite the true host port.\n\nNot that relying on the local server host as an access control is a particularly\nrecommendable access control approach, but still, firewalls ought to block ports\ncoming from the outside while other processes from within a DMZ should be able\nto connect to such ports.\n\nSo, an outside host might be able to fake being an insider in the view of a web\napplication programmer?\n\nI doubt that the specs intended it to behave this way.", "is_private": false, "bug_id": 37859, "id": 83513, "time": "2005-12-10T16:20:45Z", "creator": "hauser@acm.org", "creation_time": "2005-12-10T16:20:45Z", "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 37859, "text": "(In reply to comment #0)\n> So, an outside host might be able to fake being an insider in the view of a \nweb\n> application programmer?\n> I doubt that the specs intended it to behave this way.\n\nThen you would be wrong.  This is exactly the way that the specs intended it \nto behave, and why they created getLocalPort().\n\n", "id": 83519, "time": "2005-12-10T17:49:24Z", "creator": "william.barker@wilshire.com", "creation_time": "2005-12-10T17:49:24Z", "is_private": false, "attachment_id": null}, {"count": 2, "attachment_id": null, "bug_id": 37859, "is_private": false, "id": 84827, "time": "2006-01-20T19:00:13Z", "creator": "hauser@acm.org", "creation_time": "2006-01-20T19:00:13Z", "tags": [], "text": "ok, understood - especially if there is a proxy in-between you don't want the\nproxy address but the address and port of the original requestor.\n\nHowever, wouldn't it be useful, to add e.g. in\norg.apache.coyote.http11.Http11Processor\n\na request.setAttribute(\"javax.servlet.request.real_remote_host\", socket.\ngetRemoteSocketAddress()); //or socket.getInetAddress() ?\nand a request.setAttribute(\"javax.servlet.request.real_remote_port\",\nsocket.getPort())\n?"}, {"count": 3, "tags": [], "creator": "funkman@joedog.org", "attachment_id": null, "is_private": false, "id": 84828, "time": "2006-01-20T19:21:02Z", "bug_id": 37859, "creation_time": "2006-01-20T19:21:02Z", "text": "In the case of proxies - that is what proxyName and proxyPort are for:\nhttp://tomcat.apache.org/tomcat-5.5-doc/config/http.html"}, {"count": 4, "attachment_id": null, "bug_id": 37859, "is_private": false, "id": 84835, "time": "2006-01-20T23:02:51Z", "creator": "william.barker@wilshire.com", "creation_time": "2006-01-20T23:02:51Z", "tags": [], "text": "(In reply to comment #2)\n> ok, understood - especially if there is a proxy in-between you don't want the\n> proxy address but the address and port of the original requestor.\n> However, wouldn't it be useful, to add e.g. in\n> org.apache.coyote.http11.Http11Processor\n> a request.setAttribute(\"javax.servlet.request.real_remote_host\", socket.\n> getRemoteSocketAddress()); //or socket.getInetAddress() ?\n> and a request.setAttribute(\"javax.servlet.request.real_remote_port\",\n> socket.getPort())\n> ?\n\nSeems pretty useless, since it simply duplicates what is already available via \nrequest.getRemoteAddr() and request.getRemotePort().\n\n\n"}]