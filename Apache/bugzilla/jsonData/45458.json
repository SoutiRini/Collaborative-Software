[{"count": 0, "tags": [], "bug_id": 45458, "text": "sebb <sebbaz@gmail.com> \n\nThe JMS Publisher and Subscriber sampler GUIs both have\nUsername/Password fields which are used by the samplers; however for\nsome reason the JMS Point to Point GUI does not.\n\nI've no idea why that is so - perhaps it was an oversight.\n\nI suggest someone creates a Bugzilla issue asking for these fields to\nbe added to the GUI and the sampler. [Unfortunately the GUI is already\nvery full, but I guess that can be rearranged a bit]\n\nNote RKU:\n\n  I have got the authentication working with IBM MQSeries using the JMS\n  Point to Point sampler.\n\n  I modified the code as follows:\n\n  In the class org.apache.jmeter.protocol.jms.sampler.JMSSampler I have\n  added 2 methods:\n\n    /**\n     * RKU: get us the user\n     *\n     * @param context\n     * @return\n     * @throws NamingException\n     */\n    private String getUser(Context context) throws NamingException{\n            Hashtable env = context.getEnvironment();\n            return (String) env.get(\"java.naming.security.principal\");\n    }\n\n    /**\n     * RKU: get us the password\n     *\n     * @param context\n     * @return\n     * @throws NamingException\n     */\n    private String getPassword(Context context) throws NamingException{\n            Hashtable env = context.getEnvironment();\n            return (String) env.get(\"java.naming.security.credentials\");\n    }\n\nIn the same class I have replaced the line that creates the queue connection in the method threadStarted() of the same class:\n\nif (null != getUser(context) && null != getPassword(context)){\n     System.out.println(\"explicit user and password\");\n     connection = factory.createQueueConnection(\n                          getUser(context), \n                          getPassword(context));\n}else{\n     System.out.println(\"without explicit authentication\");\n     connection = factory.createQueueConnection();\n}\n\nPerhaps IBM MQSeries uses different properties for the user and the password but I am not very knowledgeable in this area.\n\nThe following link suggests that the used properties are correct for MQ series:\nhttp://www.oracle.com/technology/tech/java/oc4j/1013/how_to/how-to-connect-to-mqseries/doc/how-to-connect-to-mqseries.html#env\n\nIf anyone wants to reproduce this then you should know the following:\n\n- use the com.sun.jndi.fscontext.RefFSContextFactory class as initial\ncontext factory with a url to the JNDI repository;\n- use IBM JMSAdmin tool to create a JNDI mapping between your JMS world\nand the MQ world in your JNDI repository;\n\nAnd of course you will have to add the ibm mq jars to the lib directory of jmeter.\n\nJAR\t         Obtained via\nmail.jar\t jmeter site\nactivation.jar\t jmeter site\ncom.ibm.mq.jar\t MQ installation\ncom.ibm.mqjms.jar\tMQ installation\nconnector.jar\t MQ installation\ndhbcore.jar\t MQ installation\nfscontext.jar\t MQ installation\njms.jar\t         MQ installation\njta.jar\t         MQ installation\nproviderutil.jar MQ installation\nmqcontext.jar\t support pac ME01\ncom.ibm.mq.pcf-6.0.3.jar support pac MS0B", "id": 118906, "attachment_id": null, "creator": "ronald.van.de.kuil@nl.ibm.com", "creation_time": "2008-07-22T07:38:21Z", "time": "2008-07-22T07:38:21Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 45458, "attachment_id": null, "is_private": false, "id": 118909, "time": "2008-07-22T09:56:23Z", "creator": "sebb@apache.org", "creation_time": "2008-07-22T09:56:23Z", "text": "Are there any circumstances where the properties need to be set differently for the context compared to values used in the QueueConnection?\n\nIf not, then the solution seems OK, otherwise perhaps the GUI needs separate fields for them.\n\n"}, {"count": 2, "tags": [], "creator": "ronald.van.de.kuil@nl.ibm.com", "attachment_id": null, "is_private": false, "id": 118929, "time": "2008-07-23T02:37:22Z", "bug_id": 45458, "creation_time": "2008-07-23T02:37:22Z", "text": "I am not really sure. The properties java.naming.security.principal and java.naming.security.credentials are intended for a vendor neutral approach for specifying a user and a password as far as I know. \n\nA safer solution would probably be to add a user and password textfield to the panel and call factory.createQueueConnection with an explicit user and password when the textfields have filled. This would also be more user friendly.\n\n\n"}, {"text": "The code suggested on 2008-07-22 07:38 works for the RequestOnly sampler.\n\nFor the RequestResponse sampler I had to change the receiver as well.\n\nI made the following changes:\n\nIn the class org.apache.jmeter.protocol.jms.sampler.Receiver I modified the 2 of its methods as follows:\n\nprivate Receiver(QueueConnectionFactory factory, Queue receiveQueue, String aUser, String aPassword) throws JMSException {\n\t\t\nif (null != aUser && null != aPassword) {\n\tlog.info(\"creating receiver WITH authorisation credentials\");\n\tconn = factory.createQueueConnection(aUser, aPassword);\n}else{\n\tlog.info(\"creating receiver without authorisation credentials\");\n\tconn = factory.createQueueConnection();\t\n}\n\t\t\nsession = conn.createQueueSession(false, Session.AUTO_ACKNOWLEDGE);\nconsumer = session.createReceiver(receiveQueue);\nlog.debug(\"Receiver - ctor. Starting connection now\");\nconn.start();\nlog.info(\"Receiver - ctor. Connection to messaging system established\");\n}\n\npublic static synchronized Receiver createReceiver(QueueConnectionFactory factory, Queue receiveQueue, String aUser, String aPassword)\n\tthrows JMSException {\n// if (receiver == null) {\n  Receiver receiver = new Receiver(factory, receiveQueue, aUser, aPassword);\n  Thread thread = new Thread(receiver);\n  thread.start();\n// }\nreturn receiver;\n}\n\nIn short, I added the user name and password and logic to use it.\n\nIn the org.apache.jmeter.protocol.jms.sampler.JMSSampler class I made the following change in the method threadStarted()\n\nif (!useTemporyQueue()) {\n\treceiveQueue = (Queue) context.lookup(getReceiveQueue());\n\treceiverThread = Receiver.createReceiver(factory, receiveQueue, getUser(context), getPassword(context));\n}\n\nThis works for us here, we tested it this morning.\n", "tags": [], "bug_id": 45458, "is_private": false, "count": 3, "id": 119339, "time": "2008-08-04T01:49:59Z", "creator": "ronald.van.de.kuil@nl.ibm.com", "creation_time": "2008-08-04T01:49:59Z", "attachment_id": null}, {"count": 4, "tags": [], "creator": "sebb@apache.org", "attachment_id": null, "id": 122264, "time": "2008-11-06T16:20:54Z", "bug_id": 45458, "creation_time": "2008-11-06T16:20:54Z", "is_private": false, "text": "Thanks for the patches.\n\nI've committed the changes to SVN:\n\nURL: http://svn.apache.org/viewvc?rev=712018&view=rev\nLog:\nBug 45458 - Point to Point JMS in combination with authentication\n\nso the code will be in nightly builds after r712018.\n\nJust in case the changes cause a problem, users can set the property:\n\nJMSSampler.useSecurity.properties=false"}]