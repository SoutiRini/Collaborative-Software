[{"count": 0, "tags": [], "bug_id": 32064, "attachment_id": null, "is_private": false, "id": 66472, "time": "2004-11-04T19:14:08Z", "creator": "carnold@houston.rr.com", "creation_time": "2004-11-04T19:14:08Z", "text": "See\nhttp://nagoya.apache.org/eyebrowse/ReadMsg?listName=log4j-dev@logging.apache.org&msgNo=7803\nand following for the back story.\n\n\nThe attached patch:\n\nAdds a TimeZone and Locale attribute for PatternLayout allowing date formatting\nto arbitrary time zones and locales.\n\nGreatly simplified the nearly obsolete\norg.apache.log4j.helpers.AbsoluteDateFormat, ISO8601DateFormat and\nDateTimeDateFormat by making the extensions of SimpleDateFormat.  These classes\nhad complicated and flawed caching code that would have interfered with support\nfor multiple time zones.\n\nAdds a CachedDateFormat class that wraps arbitrary DateFormat's and will attempt \nto reuse the result from a previous formatting request.  Same concept as the\nflawed caching code in the previous classes.\n\nRemoved the JavaDoc in PatternLayout that strongly recommended %d{ISO8601} and\nsimilar over %d{yyyy-MM-dd HH:mm:ss} for performance reasons.  The performance\nbenefit apparently came from the caching code that has not been used for some time.\n\nModified DatePatternConverter to use CachedDateFormat.  This had the effect of\nreducing the performance benchmark involving date formatting to a null appender\nfrom 30 ms to 23 ms.\n\nAdded a test (test15) to PatternLayoutTest to check the effectiveness of\nspecifying TimeZone and Locale in configuration. \ntests/input/patternLayout15.properties is an\nexample of the use.\n\nAdded tests for CachedDateFormat and the other DateFormat's in\norg.apache.log4j.helpers.  The tests of the obsolete date formats now are\noverkill since they were attempting to identify the bugs in the previous\nimplementations."}, {"count": 1, "tags": [], "bug_id": 32064, "attachment_id": 13331, "is_private": false, "id": 66473, "time": "2004-11-04T19:15:33Z", "creator": "carnold@houston.rr.com", "creation_time": "2004-11-04T19:15:33Z", "text": "Created attachment 13331\ngzip'd tar file containing patch and newly added files"}, {"count": 2, "attachment_id": null, "bug_id": 32064, "is_private": false, "id": 66599, "time": "2004-11-07T22:28:36Z", "creator": "carnold@houston.rr.com", "creation_time": "2004-11-07T22:28:36Z", "tags": [], "text": "Please search for \"xtest\" in tests.  I used that construct to hide certain tests\nthat would fail with the current implementation.  I should have restored them to\n\"test\", but think that I might have missed one or more (specifically\ntests/src/helpers/absolutetimedateformattestcase.cpp)."}, {"count": 3, "tags": [], "bug_id": 32064, "is_private": false, "text": "Created attachment 13427\nRefinement of CachedDateFormat.java", "id": 66831, "time": "2004-11-13T03:24:48Z", "creator": "carnold@houston.rr.com", "creation_time": "2004-11-13T03:24:48Z", "attachment_id": 13427}, {"count": 4, "tags": [], "bug_id": 32064, "is_private": false, "text": "The previous attachment fixes two bugs in the original submission:\n\nfindMillisecondStart has been modified so it should be able to identify the\nmillisecond field when a non-arabic digit set is in use.  Previously, it had '0'\nand '9' hard-coded to represent 0 and 9.\n\nCachedDateFormatter.format would not properly refresh the millisecondStart\nvariable when the overall length changed.  The string passed did not correspond\nto  an integral second which would result in a failure to detect the millisecond\nfield .\n\np.s. Most of the *DateFormatTestCase classes are no longer necessary since the\nclasses under test have been rewritten as shells of SimpleDateFormat.  They were\nhelpful in the rework of the time formatting classes in log4cxx.", "id": 66832, "time": "2004-11-13T03:40:33Z", "creator": "carnold@houston.rr.com", "creation_time": "2004-11-13T03:40:33Z", "attachment_id": null}, {"count": 5, "tags": [], "creator": "carnold@houston.rr.com", "text": "Recent discussion on jakarta-common has led me to think that it may be better to\nspecify locale on Appender instead of or in addition to specifying locale on\nlayout.  For example, if you have a SocketAppender (which has no layout), you\nmay want to force the locale used in rendering the message.  I'll have to\ninvestigate.", "id": 68694, "time": "2004-12-19T00:37:16Z", "bug_id": 32064, "creation_time": "2004-12-19T00:37:16Z", "is_private": false, "attachment_id": null}, {"text": "More discussion in\nhttp://nagoya.apache.org/eyebrowse/ReadMsg?listName=log4j-dev@logging.apache.org&msgNo=8589\nand following.\n\nI have committed the simplifications of the o.a.l.helpers.AbsoluteDateFormat et\nal from the initial patch, but not the CachedDateFormat or the TimeZone or\nLocale configuration pending further discussion.", "tags": [], "bug_id": 32064, "is_private": false, "count": 6, "id": 68746, "time": "2004-12-21T05:32:28Z", "creator": "carnold@apache.org", "creation_time": "2004-12-21T05:32:28Z", "attachment_id": null}, {"count": 7, "tags": [], "bug_id": 32064, "text": "Created attachment 13811\nAnother iteration of CachedDateFormat and CachedDateFormatTestCase\n\nNow checks that the milliseconds field is three digits with accompanying test\ncase.  You could probably still fool this implementation by specifying \"SS0\".", "id": 68748, "time": "2004-12-21T06:36:22Z", "creator": "carnold@apache.org", "creation_time": "2004-12-21T06:36:22Z", "is_private": false, "attachment_id": 13811}, {"count": 8, "tags": [], "bug_id": 32064, "text": "Added bug 32810 to contain the Locale related issues raised in the earlier version of the bug.\n\nCVS commits on 22-Dec (likely http://nagoya.apache.org/eyebrowse/ReadMsg?listName=log4j-\ndev@logging.apache.org&msgNo=8623 and 8624)\n\nImproves CachedDateFormat to handle formats where the milliseconds can change position but the \nlength stays the same.  Now it only preserves the millisecond position for at most 1 second before \nrecalculating.  The means that the first logging request in an integral second will require 3 evaluations \nof DateFormat.format, however each subsequent evaluation should only require formatting the \nmillisecond digits.\n\nCachedDateFormat is currently in the builds, but is not wired into DatePatternLayout and not actually \nused in log4j.  That might change very soon.\n\n\nModifies PatternParser to allow each conversion specification to have multiple options enclosed in \nbraces and interprets the second option following %d to specify the time zone.  For example, the \nfollowing format should result in the UTC time and the local time starting the formatted logging event:\n\n%d{yyyy-MM-dd HH:mm:ss}{GMT}Z %d{HH:mm:ss Z} %c - %m%n\n\n", "id": 68861, "time": "2004-12-22T21:56:20Z", "creator": "carnold@apache.org", "creation_time": "2004-12-22T21:56:20Z", "is_private": false, "attachment_id": null}, {"count": 9, "tags": [], "creator": "carnold@apache.org", "attachment_id": null, "is_private": false, "id": 92853, "time": "2006-09-01T05:30:34Z", "bug_id": 32064, "creation_time": "2006-09-01T05:30:34Z", "text": "*** Bug 40295 has been marked as a duplicate of this bug. ***"}]