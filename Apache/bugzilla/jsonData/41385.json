[{"attachment_id": null, "tags": [], "creator": "aalmiray@yahoo.com", "text": "When using Eclipse I noticed it was possible to filter out some lines of a stack\ntrace when doing unit testing, I thought that feature was on Log4J but it turns\nout it is Eclipse only. I have already coded two appenders that have this\nfeature enabled (source can be browsed at\nhttps://construct.dev.java.net/source/browse/construct/src/java/org/kordamp/construct/commons/log/)\nand I think this may be added to Log4j.\n\nThe current implementation relies on JDK 1.4+ regexps, but I'm reworking it so\nit may choose between ORO and JDK1.4+ depending on environment or the user's\nchoice, also I think the best place to put the code is in AppenderSkeleton and\nretrofit every Log4j provided Appender with the option to call the filtering\n(inside append, doAppend or subAppend, whichever the case is). Of course the\ndefault functionality will be to filter nothing to be backwards compatible.", "count": 0, "id": 98155, "time": "2007-01-16T11:34:06Z", "bug_id": 41385, "creation_time": "2007-01-16T11:34:06Z", "is_private": false}, {"attachment_id": 19450, "tags": [], "creator": "aalmiray@yahoo.com", "is_private": false, "count": 1, "id": 98464, "time": "2007-01-24T10:53:32Z", "bug_id": 41385, "creation_time": "2007-01-24T10:53:32Z", "text": "Created attachment 19450\nProposed patch & tests\n\nIncludes the following:\nNew Classes -> \norg.apache.log4j.RegexpMatcher\norg.apache.log4j.AbstractRegexpMatcher \norg.apache.log4j.JDKRegexpMatcher\norg.apache.log4j.Perl5RegexpMatcher\norg.apache.log4j.StackTraceFilteringHelper\n\nUpdates on existing classes:\norg.apache.log4j.AppenderSkeleton\norg.apache.log4j.WriterAppender\norg.apache.log4j.net.SyslogAppender\norg.apache.log4j.net.SMTPAppender\norg.apache.log4j.net.TelnetAppender\norg.apache.log4j.nt.NTEventLogAppender\n\nUpdate on build.xml to include jakarta-oro\nUpdate on tests/build.xml to include new testcase StackTraceFilterTest\nNew test case -> org.apache.log4j.StackTraceFilterTest"}, {"attachment_id": null, "tags": [], "creator": "aalmiray@yahoo.com", "is_private": false, "count": 2, "id": 98483, "time": "2007-01-24T20:16:35Z", "bug_id": 41385, "creation_time": "2007-01-24T20:16:35Z", "text": "The proposed patch is against branches/v1_2-branch"}, {"count": 3, "tags": [], "bug_id": 41385, "text": "Better if this was done inside of a layout and the layout returns false for ignoresThrowables which will skip \nthe appenders fallback implementation for outputting the stack trace.  Could could just have a wrapping \nLayout that could encapsulate another layout (say PatternLayout or EnhancedPatternLayout) for the \nprimary line and then filters the stack trace as appropriate using your filter.  The log4j extras companion \n(the likely home of such a Layout) depends on JDK 1.4 regex and would prefer the use of that instead of \njakarta-oro.", "id": 107109, "time": "2007-08-22T19:52:37Z", "creator": "carnold@apache.org", "creation_time": "2007-08-22T19:52:37Z", "is_private": false, "attachment_id": null}]