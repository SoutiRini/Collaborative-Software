[{"count": 0, "attachment_id": null, "bug_id": 51862, "is_private": false, "id": 149600, "time": "2011-09-21T21:56:46Z", "creator": "slaurent@apache.org", "creation_time": "2011-09-21T21:56:46Z", "tags": [], "text": "Enhancement proposed : add a \"classesToInitialize\" parameter to JreMemoryLeakPreventionListener to provoke the loading of arbitrary classes.\nThis will allow users to tune the memory leak protection features to avoid leaks triggered when loading JRE classes not yet identified as leaky, or even third-party classes.\n\nI'll commit a patch in the next days..."}, {"count": 1, "tags": [], "bug_id": 51862, "attachment_id": null, "id": 149657, "time": "2011-09-22T20:36:59Z", "creator": "slaurent@apache.org", "creation_time": "2011-09-22T20:36:59Z", "is_private": false, "text": "Committed to trunk and tc7, will be available in tomcat 7.0.22.\n\nProposed backport to tc6\n\nhttp://svn.apache.org/viewvc?rev=1174359&view=rev"}, {"count": 2, "tags": [], "creator": "knst.kolinko@gmail.com", "is_private": false, "text": "Added to 6.0 in r1181719 and will be in 6.0.34.", "id": 150462, "time": "2011-10-11T11:33:18Z", "bug_id": 51862, "creation_time": "2011-10-11T11:33:18Z", "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 51862, "attachment_id": null, "text": "It seems like this feature could be used to reduce the amount of code in JMLPL by providing a default list of classes to load, since that's mainly what's going on in there.\n\nIs that worth it, or is it better to handle the cases we already handle and leave this feature for use with webapp-specific (e.g. private) classes?", "id": 150471, "time": "2011-10-11T15:50:29Z", "creator": "chris@christopherschultz.net", "creation_time": "2011-10-11T15:50:29Z", "is_private": false}, {"count": 4, "attachment_id": null, "bug_id": 51862, "is_private": false, "id": 150480, "time": "2011-10-11T23:34:11Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2011-10-11T23:34:11Z", "tags": [], "text": "If you have predefined list of classes, what will this configuration property do: add to it, or replace it?\n\nIf it adds to it, how you remove items from predefined list (that is currently done by setting some properties to false) - by editing catalina.properties?\n\nIn general it makes sense, because it is easier to edit some default list (if we have to add some new classes to it in the default configuration) than introduce new setters and property name."}, {"count": 5, "tags": [], "bug_id": 51862, "attachment_id": null, "is_private": false, "id": 150487, "time": "2011-10-12T05:03:18Z", "creator": "slaurent@apache.org", "creation_time": "2011-10-12T05:03:18Z", "text": "It would indeed simplify JMLPL but would break the existing \"API\" if the setters and getters were removed. Or we can refactor to have the flag setters merely add some known class names to the set of classes to load."}, {"count": 6, "tags": [], "text": "Konstantin: good point about add/remove/replace... I hadn't thought too hard about that. Some of the classes loaded should only be loaded if the user wants them loaded (e.g. AWT-related stuff, optional libraries, etc.) so there probably shouldn't be a far-reaching default.\n\nSylvain: the API can be (somewhat) simply refactored to modify a list of classes to load.\n\nI'll think about it and log another enhancement request with a more well-thought-out description.", "is_private": false, "id": 150505, "creator": "chris@christopherschultz.net", "time": "2011-10-12T21:48:44Z", "bug_id": 51862, "creation_time": "2011-10-12T21:48:44Z", "attachment_id": null}]