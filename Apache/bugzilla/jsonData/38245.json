[{"count": 0, "tags": [], "bug_id": 38245, "is_private": false, "text": "The following code NPEs in ant, and it aint the jdbc driver.\n\n    <sql driver=\"${jdbc.driver}\"\n         classpathref=\"compile.classpath\"\n         userid=\"sa\"\n         password=\"\"\n         url=\"${jdbc.url}\">\n      <transaction src=\"${hsqldb.sql}\"/>\n    </sql>\n\ndiary/persist/build.xml:128: java.lang.NullPointerException\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:114)\n\tat org.apache.tools.ant.Task.perform(Task.java:365)\n\tat org.apache.tools.ant.Target.execute(Target.java:356)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:384)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1243)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1212)\n\tat\norg.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:40)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1095)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:676)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:195)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:276)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:96)\nCaused by: java.lang.NullPointerException\n\tat\norg.apache.tools.ant.types.resources.FileResource.toString(FileResource.java:280)\n\tat\norg.apache.tools.ant.taskdefs.SQLExec$Transaction.runTransaction(SQLExec.java:713)\n\tat org.apache.tools.ant.taskdefs.SQLExec$Transaction.access$000(SQLExec.java:658)\n\tat org.apache.tools.ant.taskdefs.SQLExec.execute(SQLExec.java:393)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:275)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:585)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:104)\n\t... 11 more\n--- Nested Exception ---\njava.lang.NullPointerException\n\tat\norg.apache.tools.ant.types.resources.FileResource.toString(FileResource.java:280)\n\tat\norg.apache.tools.ant.taskdefs.SQLExec$Transaction.runTransaction(SQLExec.java:713)\n\tat org.apache.tools.ant.taskdefs.SQLExec$Transaction.access$000(SQLExec.java:658)\n\tat org.apache.tools.ant.taskdefs.SQLExec.execute(SQLExec.java:393)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:275)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:585)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:104)\n\tat org.apache.tools.ant.Task.perform(Task.java:365)\n\tat org.apache.tools.ant.Target.execute(Target.java:356)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:384)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1243)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1212)\n\tat\norg.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:40)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1095)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:676)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:195)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:276)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:96)\n\n\nPresumably this is new to Ant1.7 ;)", "id": 84563, "time": "2006-01-12T20:54:38Z", "creator": "stevel@apache.org", "creation_time": "2006-01-12T20:54:38Z", "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 38245, "is_private": false, "text": "This was cause in the logging of the file name; the file resource is null.\nSomehow  SQL is broken in Ant1.7, and we dont (yet) have the regression tests to\ncheck it.", "id": 84566, "time": "2006-01-12T21:00:04Z", "creator": "stevel@apache.org", "creation_time": "2006-01-12T21:00:04Z", "attachment_id": null}, {"count": 2, "tags": [], "creator": "stevel@apache.org", "attachment_id": null, "id": 84568, "time": "2006-01-12T21:41:00Z", "bug_id": 38245, "creation_time": "2006-01-12T21:41:00Z", "is_private": false, "text": "<sql> is fundamentally broken. It doesnt need a file or depend on nested\ntransactions; text or src inline is sufficient.\n\n  <target name=\"hsql-command\" depends=\"ready-to-compile,init-hsqldb\">\n    <sql driver=\"${jdbc.driver}\"\n         classpathref=\"compile.classpath\"\n         userid=\"sa\"\n         password=\"\"\n         url=\"${jdbc.url}\">\n      ;\n    </sql>\n  </target>"}, {"count": 3, "text": "Steve, didn't you fix the NPE?  Should we change the heading of this bug?", "bug_id": 38245, "attachment_id": null, "id": 84686, "time": "2006-01-16T19:40:44Z", "creator": "mbenson@apache.org", "creation_time": "2006-01-16T19:40:44Z", "tags": [], "is_private": false}, {"attachment_id": null, "tags": [], "creator": "stevel@apache.org", "text": "Correct. Marked as the current problem, we have no SQL tests.", "count": 4, "id": 84700, "time": "2006-01-17T10:37:11Z", "bug_id": 38245, "creation_time": "2006-01-17T10:37:11Z", "is_private": false}, {"count": 5, "tags": [], "text": "Out of not-so-idle curiousity, what type of tests are you looking for?  I see\nseveral issues and or levels of testing that might be done.\n\n1) The SQL task is tightly coupled to the JDBC task, using Mocks to test for\nvery basic capability may be an option.\n\n2) \"Real\" JDBC instances require some sort of DB on the other end - what is\navailable in the Ant/GUMP testbeds?  Derby?  MySql?\n\n3)  Would this be a \"good time\" to allow for Platform-specific \"decorators\" for\nthe SQL task?  (Factory would be in JDBC, based on rdbms/rdbmsversion.  This\nalso allows for a \"test\" decorator to be inserted for verification/pre/post\nconditions)\n\nI guess, in general, I'm looking for what type/level of testing and against what\nenvironments is feasible.", "attachment_id": null, "bug_id": 38245, "id": 84710, "time": "2006-01-17T14:18:06Z", "creator": "j.kenneth.gentle@acm.org", "creation_time": "2006-01-17T14:18:06Z", "is_private": false}, {"count": 6, "text": "-HSQLDB builds in gump and is the easiest to test against. \n\n-Right now we just need to test that we can make SQL commands and transactions\nfrom inline text and files.\n\n-Test the property expansion stuff I just added\n\n-see what happens when an invalid command is issued (ie does it fail)\n\nI don't have any opinion on SQL decorators; I have only just started using the\ntask. For testing, I'd point you at dbunit of course.\n\nWe may want a specific JDBC datatype that can be reused; containing all the jdbc\noptions, multiple sql tasks can then share it.\n\n-steve", "bug_id": 38245, "attachment_id": null, "id": 84739, "time": "2006-01-18T12:43:26Z", "creator": "stevel@apache.org", "creation_time": "2006-01-18T12:43:26Z", "tags": [], "is_private": false}, {"count": 7, "tags": [], "bug_id": 38245, "is_private": false, "id": 84747, "attachment_id": null, "creator": "j.kenneth.gentle@acm.org", "creation_time": "2006-01-18T17:51:02Z", "time": "2006-01-18T17:51:02Z", "text": "(In reply to comment #6)\n> -HSQLDB builds in gump and is the easiest to test against. \nOK, unfortunately another learning curve for me...\n> -Right now we just need to test that we can make SQL commands and transactions\n> from inline text and files.\nUnderstand this one.\n> -Test the property expansion stuff I just added\nOK, I need to look at this. \n> -see what happens when an invalid command is issued (ie does it fail)\nWell, this depends on the \"continue on error\" setting (I forget the attribute at\nthe moment) doesn't it?\n> I don't have any opinion on SQL decorators; I have only just started using the\n> task. For testing, I'd point you at dbunit of course.\nI can discuss this with you offline;  For Oracle, there are several posted\nmodifications of the SQL task that allow for turning on \"dbms_output\" prior to\nexecuting the command and retrieving its \"output\" after the command has executed\n- seems to be almost tailor made for a SQL task \"decorator\" that is instantiated\nwhen Oracle is specified.\n> We may want a specific JDBC datatype that can be reused; containing all the jdbc\n> options, multiple sql tasks can then share it.\nI'll need more explanation here - is this a test fixture you're referring to? \n\nKen\n\n"}, {"count": 8, "tags": [], "creator": "stevel@apache.org", "attachment_id": null, "id": 84773, "time": "2006-01-19T12:35:18Z", "bug_id": 38245, "creation_time": "2006-01-19T12:35:18Z", "is_private": false, "text": "My idea for a JDBC datype would be\n\n\n<sql:jdbc  id=\"jdbc.connection\"\n   driver=\"hsqldb\"   //some well known options or a classname\n   url=\"jdbc:hsqldb:file:${tmp.dir}/database\"\n   >\n  <property name=\"jdbc.timeout\" value=\"5\" />\n  <propertyset prefix=\"jdbc.mysql\" />\n</sql:jdbc />\n\n<sql:sql jdbcid=\"jdbc.connection\">\n CREATE TABLE customers ...\n</sql:sql>\n\n//and something I just made up:\n\n<sql:query jdbcid=\"jdbc.connection\" property=\"select.response\">\n <query>\n  SELECT UNIQUE c FROM customers WHERE c.id=?1\n <query>\n  <param number=\"1\" value=\"${custid}\" />\n</sql:query>\n\n"}, {"count": 9, "text": "Excellent, Steve!  This addresses one of my other itches at the moment, being\nable to connect to Oracle as \"sysoper\" or \"sysdba\".  You have to use connection\nparameters to do so and I've been unable to puzzle out how to do so with the\ncurrent JDBC code.\n\nGreat!  When will you have it ready? ;^)", "bug_id": 38245, "is_private": false, "id": 84777, "time": "2006-01-19T17:49:04Z", "creator": "j.kenneth.gentle@acm.org", "creation_time": "2006-01-19T17:49:04Z", "tags": [], "attachment_id": null}, {"count": 10, "text": "It'll be ready as soon as you've written it :)", "bug_id": 38245, "attachment_id": null, "id": 84809, "time": "2006-01-20T10:49:45Z", "creator": "stevel@apache.org", "creation_time": "2006-01-20T10:49:45Z", "tags": [], "is_private": false}, {"count": 11, "text": "Pasting in Ken's todo list for the testss \nfrom the mailing list\n\nTests for \"onError\", \"delimiter\", \"delimterType\", \"keepFormat\" on either files\nor embedded text are where I'd focus, I think, because they *are* platform\nspecific.  IIRC the history of this task correctly, all of those attributes were\nadded to support loading Oracle PL/SQL procedures and SQL/PLUS scripts.\n\n\"onError\" is really subjective, depending on what you're executing - a table\ndrop before recreating it is standard procedure, but the \"table or view does not\nexist\" *is* an error\n\nTesting aside for the moment, this is one of the reasons that I think the\n\"decorator\" idea has merit.  Let the JDBC class create the DB specific\ndecorator, or a generic pass through if no db is specified.  BWC is maintained\nif the addition of the \"decorator\" is driven from YAA (yet another attribute).\n\nHere's my suggestion:\n\n0.  Convince my boss and my wife that this is really beneficial for the world at\nlarge and is worth the investment of some work and leisure time. ;^)\n\n1.  Develop base tests for current behavior using what ever is readily available\non Gump (sounds like HSQL and Derby), using DBUnit for basic CRUD testing\nverification.  I think we should assume a schema, not including schema script\ngeneration in the base tests of the SQL task.\n\n2.  Refactor JDBC/SQL to allow for db specific decorators:\n    * Extract the java interface to the SQL task.\n    * Rename the existing SQL task to CoreSql or BaseSql, implementing the\ninterface.\n    * Edit JDBC to invoke via I/F\n    * Retest.\n\n3.  Create a \"pass-through\" decorator, 100% delegation of all methods to the\nCoreSql code.\n    * Refactor SQL to use it.\n    * Retest.\n\n4.  Create HSQL and or Derby decorators.  Unfortunately, I don't know what I'd\nput in these - my particular itch is around the Oracle specifics.\n\n5.  Open the door for some \"community\" development/testing of the commercial\nplatforms.\n\n", "bug_id": 38245, "attachment_id": null, "id": 84811, "time": "2006-01-20T11:54:27Z", "creator": "stevel@apache.org", "creation_time": "2006-01-20T11:54:27Z", "tags": [], "is_private": false}, {"attachment_id": null, "tags": [], "creator": "bodewig@apache.org", "text": "*** Bug 19921 has been marked as a duplicate of this bug. ***", "count": 12, "id": 129883, "time": "2009-08-24T06:30:20Z", "bug_id": 38245, "creation_time": "2009-08-24T06:30:20Z", "is_private": false}]