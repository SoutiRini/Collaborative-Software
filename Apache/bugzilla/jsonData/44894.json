[{"count": 0, "attachment_id": null, "creator": "josh@apache.org", "text": "This is some clean-up that's been due for a while.  I didn't apply directly because with the 3.1-beta release, I thought some others should perhaps eye-ball these changes first.\n\nRecordFactory was deprecated a while ago, (EventRecordFactory is the preferred class) but the duplicate code has not been maintained properly.  This patch is a small step toward consolidating the list of record classes.\n\nThe biggest change is in EventRecordFactory (adding 30 odd missing record types).  In RecordFactory the method createRecord() would now call EventRecordFactory.createRecord().  After making that initial change, much of the old duplicate code can be deleted from RecordFactory.\n\n\nBTW - Can someone please post a comment regarding the incentive behind moving to EventRecordFactory?  As far as I can understand the most important client of this logic (HSSFWorkBook) doesn't even use it.", "id": 115980, "time": "2008-04-28T11:49:03Z", "bug_id": 44894, "creation_time": "2008-04-28T11:49:03Z", "tags": [], "is_private": false}, {"count": 1, "tags": [], "bug_id": 44894, "text": "Created attachment 21874\nsvn diff of 2 changed files", "id": 115982, "time": "2008-04-28T11:51:43Z", "creator": "josh@apache.org", "creation_time": "2008-04-28T11:51:43Z", "is_private": false, "attachment_id": 21874}, {"count": 2, "tags": [], "bug_id": 44894, "attachment_id": null, "id": 118516, "time": "2008-07-10T15:55:19Z", "creator": "apache@gagravarr.org", "creation_time": "2008-07-10T15:55:19Z", "is_private": false, "text": "I guess this patch could be applied now?\n\nI think the difference between RecordFactory and EventRecordFactory is when the records are created - in one go, or as required"}, {"count": 3, "tags": [], "bug_id": 44894, "attachment_id": null, "id": 119374, "time": "2008-08-04T14:16:37Z", "creator": "josh@apache.org", "creation_time": "2008-08-04T14:16:37Z", "is_private": false, "text": "Fixed in svn r682508/r682510\n\nThe duplicate logic referred to here was RecordFactory.createRecord() (and supporting methods).  This logic is more at home on RecordFactory.  EventRecordFactory has been greatly simplified."}]