[{"count": 0, "tags": [], "bug_id": 36713, "is_private": false, "text": "It is not clear from the docs how to limit the size of the tomcat stdout log file.\n\nWe are using log4j.  Isnt there a way to get log4j properties to apply to the\nstdout log file\n\nWe have a customer who is running out of disk space due to 100GB+ stdout log\nfiles which are logging stack traces from network errors which they can't fix like:\n\nClientAbortException:  java.net.SocketException: Connection reset by peer:\nsocket write error\n\n            at\norg.apache.coyote.tomcat5.OutputBuffer.realWriteBytes(OutputBuffer.java:373)\n\n            at org.apache.tomcat.util.buf.ByteChunk.flushBuffer(ByteChunk.java:398)\n\n            at org.apache.tomcat.util.buf.ByteChunk.append(ByteChunk.java:318)\n\n            at\norg.apache.coyote.tomcat5.OutputBuffer.writeBytes(OutputBuffer.java:401)\n\n            at org.apache.coyote.tomcat5.OutputBuffer.write(OutputBuffer.java:388)\n\n            at\norg.apache.coyote.tomcat5.CoyoteOutputStream.write(CoyoteOutputStream.java:76)\n\n            at com.haht.io.OutputStream.write(OutputStream.java:157)\n\n            at sun.nio.cs.StreamEncoder$CharsetSE.writeBytes(Unknown Source)\n\n            at sun.nio.cs.StreamEncoder$CharsetSE.implFlushBuffer(Unknown Source)\n\n            at sun.nio.cs.StreamEncoder$CharsetSE.implFlush(Unknown Source)\n\n            at sun.nio.cs.StreamEncoder.flush(Unknown Source)\n\n            at java.io.OutputStreamWriter.flush(Unknown Source)\n\n            at java.io.PrintWriter.flush(Unknown Source)\n\n            at com.haht.io.HtmlWriter.print(HtmlWriter.java:77)\n\n            at Suite.HsWorkflowTasks.run(HsWorkflowTasks.java:362)\n\n            at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\n            at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)\n\n            at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)\n\n            at java.lang.reflect.Method.invoke(Unknown Source)\n\n            at\ncom.haht.project.JavaApplication.runDynamicPage(JavaApplication.java:109)\n\n            at com.haht.project.Application.handleDynamic(Application.java:2626)\n\n            at\ncom.haht.project.Application.processValidRequest(Application.java:2541)\n\n            at com.haht.project.Application.handleRequest(Application.java:2401)\n\n            at com.haht.project.Application.doGet(Application.java:2106)\n\n            at javax.servlet.http.HttpServlet.service(HttpServlet.java:689)\n\n            at javax.servlet.http.HttpServlet.service(HttpServlet.java:802)\n\n            at\norg.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:237)\n\n            at\norg.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:157)\n\n            at\norg.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:214)\n\n            at\norg.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:104)\n\n            at\norg.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:520)\n\n            at\norg.apache.catalina.core.StandardContextValve.invokeInternal(StandardContextValve.java:198)\n\n            at\norg.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:152)\n\n            at\norg.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:104)\n\n            at\norg.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:520)\n\n            at\norg.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:137)\n\n            at\norg.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:104)\n\n            at\norg.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:118)\n\n            at\norg.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:102)\n\n            at\norg.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:520)\n\n            at\norg.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)\n\n            at\norg.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:104)\n\n            at\norg.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:520)\n\n            at org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:929)\n\n            at\norg.apache.coyote.tomcat5.CoyoteAdapter.service(CoyoteAdapter.java:160)\n\n            at\norg.apache.coyote.http11.Http11Processor.process(Http11Processor.java:799)\n\n            at\norg.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.processConnection(Http11Protocol.java:705)\n\n            at\norg.apache.tomcat.util.net.TcpWorkerThread.runIt(PoolTcpEndpoint.java:577)\n\n            at\norg.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run(ThreadPool.java:683)\n\n            at java.lang.Thread.run(Unknown Source)", "id": 80121, "time": "2005-09-19T17:22:06Z", "creator": "deltadad2000@yahoo.com", "creation_time": "2005-09-19T17:22:06Z", "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 36713, "attachment_id": null, "id": 80360, "time": "2005-09-23T13:15:33Z", "creator": "remm@apache.org", "creation_time": "2005-09-23T13:15:33Z", "is_private": false, "text": "It's the application that is logging these things to standard output. Plese use\ntomcat-user instead."}, {"attachment_id": null, "tags": [], "creator": "deltadad2000@yahoo.com", "is_private": false, "count": 2, "id": 80363, "time": "2005-09-23T14:55:42Z", "bug_id": 36713, "creation_time": "2005-09-23T14:55:42Z", "text": "Hi, \n\nThe response was incomplete and not understood.  \n\nWhat do you mean use tomcat-user?  \n\nAre you saying there is some configuration setting to get the logs to log\nsomewhere as and tomcat-user is an alias within the tomcat runtime?\n\nAre you saying that tomcat-user is another bugzilla area?\n\nNo comprende."}, {"count": 3, "tags": [], "bug_id": 36713, "attachment_id": null, "is_private": false, "id": 80365, "time": "2005-09-23T15:04:21Z", "creator": "funkman@joedog.org", "creation_time": "2005-09-23T15:04:21Z", "text": "Everything you wish to know about tomcat-user\n\nhttp://jakarta.apache.org/tomcat/faq/tomcatuser.html"}, {"count": 4, "tags": [], "text": "I know it is the application that is logging this stuff.\n\nI want to know from the people who WRITE TOMCAT how to tell TOMCAT that it's\nLOGFILE should have some size limits like LOG4J does.\n\nAssume I'm not stupid and that you guys aren't reading what I am typing.\n\nI am looking for an answer from a developer please.\n", "attachment_id": null, "id": 80394, "creator": "deltadad2000@yahoo.com", "time": "2005-09-23T20:33:39Z", "bug_id": 36713, "creation_time": "2005-09-23T20:33:39Z", "is_private": false}, {"count": 5, "tags": [], "text": "Bugzilla is NOT a support forum. It is for resolving bugs.\n\nThe issue described is a configuration problem which can be answered via the\ntomcat-users mailing list (or archives).\n\nSee http://jakarta.apache.org/tomcat/faq/logging.html for logging help first -\nit answers this question.\n\n", "attachment_id": null, "id": 80395, "creator": "funkman@joedog.org", "time": "2005-09-23T20:40:16Z", "bug_id": 36713, "creation_time": "2005-09-23T20:40:16Z", "is_private": false}]