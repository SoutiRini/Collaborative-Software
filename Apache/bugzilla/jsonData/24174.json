[{"count": 0, "tags": [], "bug_id": 24174, "is_private": false, "text": "This may be a bug.I  used junit3.8.1 to compile this source,but failed.Because \nthere is no \"assert\" in junit3.8.1 ,but \"assertTrue\" can be used.\n\nIndex: BaseDirContextTestCase.java\n===================================================================\nRCS file: /home/cvspublic/jakarta-tomcat-\n4.0/catalina/src/test/org/apache/naming/resources/BaseDirContextTestCase.java,v\nretrieving revision 1.3\ndiff -u -r1.3 BaseDirContextTestCase.java\n--- BaseDirContextTestCase.java\t21 Oct 2001 22:03:34 -0000\t1.3\n+++ BaseDirContextTestCase.java\t28 Oct 2003 08:29:49 -0000\n@@ -247,7 +247,7 @@\n             // Look up the WEB-INF entry\n             Object webInfEntry = context.lookup(\"WEB-INF\");\n             assertNotNull(\"Found WEB-INF entry\", webInfEntry);\n-            assert(\"WEB-INF entry is a DirContext\",\n+\t\t\tassertTrue(\"WEB-INF entry is a DirContext\",\n                    webInfEntry instanceof DirContext);\n             DirContext webInfContext = (DirContext) webInfEntry;\n \n@@ -303,7 +303,7 @@\n             // Look up the WEB-INF entry\n             Object webInfEntry = context.lookup(\"WEB-INF\");\n             assertNotNull(\"Found WEB-INF entry\", webInfEntry);\n-            assert(\"WEB-INF entry is a DirContext\",\n+\t\t\tassertTrue(\"WEB-INF entry is a DirContext\",\n                    webInfEntry instanceof DirContext);\n             DirContext webInfContext = (DirContext) webInfEntry;\n \n@@ -353,20 +353,20 @@\n         while (ne.hasMore()) {\n \n             Object next = ne.next();\n-            assert(\"list() returns NameClassPair instances\",\n+\t\t\tassertTrue(\"list() returns NameClassPair instances\",\n                    next instanceof NameClassPair);\n             NameClassPair ncp = (NameClassPair) next;\n \n-            assert(\"Name '\" + ncp.getName() + \"' is expected\",\n+\t\t\tassertTrue(\"Name '\" + ncp.getName() + \"' is expected\",\n                    isListed(ncp.getName(), list));\n \n             if (isDirContext(ncp.getName())) {\n-                assert(\"Class '\" + ncp.getClassName() + \"' is '\" +\n+\t\t\t\tassertTrue(\"Class '\" + ncp.getClassName() + \"' \nis '\" +\n                        contextClassName + \"'\",\n                        contextClassName.equals(ncp.getClassName()));\n             }\n \n-            assert(\"Relative is 'true'\", ncp.isRelative());\n+\t\t\tassertTrue(\"Relative is 'true'\", ncp.isRelative());\n \n         }\n \n@@ -391,29 +391,29 @@\n         while (ne.hasMore()) {\n \n             Object next = ne.next();\n-            assert(\"listBindings() returns Binding instances\",\n+\t\t\tassertTrue(\"listBindings() returns Binding instances\",\n                    next instanceof Binding);\n             Binding b = (Binding) next;\n \n-            assert(\"Name '\" + b.getName() + \"' is expected\",\n+\t\t\tassertTrue(\"Name '\" + b.getName() + \"' is expected\",\n                    isListed(b.getName(), list));\n \n             if (isDirContext(b.getName())) {\n-                assert(\"Class '\" + b.getClassName() + \"' is '\" +\n+\t\t\t\tassertTrue(\"Class '\" + b.getClassName() + \"' \nis '\" +\n                        contextClassName + \"'\",\n                        contextClassName.equals(b.getClassName()));\n             }\n \n-            assert(\"Relative is 'true'\", b.isRelative());\n+\t\t\tassertTrue(\"Relative is 'true'\", b.isRelative());\n \n             Object object = b.getObject();\n             assertNotNull(\"Name '\" + b.getName() + \"' has a non-null object\",\n                           object);\n             if (b.getName().equals(\"web.xml\")) {\n-                assert(\"Entry '\" + b.getName() + \"' is a Resource\",\n+\t\t\t\tassertTrue(\"Entry '\" + b.getName() + \"' is a \nResource\",\n                        object instanceof Resource);\n             } else {\n-                assert(\"Entry '\" + b.getName() + \"' is a DirContext\",\n+\t\t\t\tassertTrue(\"Entry '\" + b.getName() + \"' is a \nDirContext\",\n                        object instanceof DirContext);\n             }\n \n@@ -445,35 +445,35 @@\n         while (ne.hasMore()) {\n \n             Object next = ne.next();\n-            assert(\"getAll() returns Attribute instances\",\n+\t\t\tassertTrue(\"getAll() returns Attribute instances\",\n                    next instanceof Attribute);\n             Attribute attr = (Attribute) next;\n             String name = attr.getID();\n             int index = getIndex(name, webInfAttrs);\n-            assert(\"WEB-INF attribute '\" + name + \"' is expected\",\n+\t\t\tassertTrue(\"WEB-INF attribute '\" + name + \"' is \nexpected\",\n                    index >= 0);\n             Object value = attr.get();\n             assertNotNull(\"get() returned non-null\", value);\n \n             if (name.equals(\"creationdate\")) {\n-                assert(\"Creation date is a date\",\n+\t\t\t\tassertTrue(\"Creation date is a date\",\n                        value instanceof Date);\n-                assert(\"Creation date equals \" + creationDate,\n+\t\t\t\tassertTrue(\"Creation date equals \" + \ncreationDate,\n                        creationDate.equals((Date) value));\n             } else if (name.equals(\"displayname\")) {\n-                assert(\"Display name is a string\",\n+\t\t\t\tassertTrue(\"Display name is a string\",\n                        value instanceof String);\n-                assert(\"Display name equals \" + displayName,\n+\t\t\t\tassertTrue(\"Display name equals \" + displayName,\n                        displayName.equals((String) value));\n             } else if (name.equals(\"getcontentlength\")) {\n-                assert(\"Content length is a long\",\n+\t\t\t\tassertTrue(\"Content length is a long\",\n                        value instanceof Long);\n-                assert(\"Content length equals \" + contentLength,\n+\t\t\t\tassertTrue(\"Content length equals \" + \ncontentLength,\n                        contentLength == ((Long) value).longValue());\n             } else if (name.equals(\"getlastmodified\")) {\n-                assert(\"Last modified date is a date\",\n+\t\t\t\tassertTrue(\"Last modified date is a date\",\n                        value instanceof Date);\n-                assert(\"Last modified date is \" + lastModifiedDate,\n+\t\t\t\tassertTrue(\"Last modified date is \" + \nlastModifiedDate,\n                        lastModifiedDate.equals((Date) value));\n             }\n \n@@ -505,35 +505,35 @@\n         while (ne.hasMore()) {\n \n             Object next = ne.next();\n-            assert(\"getAll() returns Attribute instances\",\n+\t\t\tassertTrue(\"getAll() returns Attribute instances\",\n                    next instanceof Attribute);\n             Attribute attr = (Attribute) next;\n             String name = attr.getID();\n             int index = getIndex(name, webXmlAttrs);\n-            assert(\"WEB-INF/web.xml attribute '\" + name + \"' is expected\",\n+\t\t\tassertTrue(\"WEB-INF/web.xml attribute '\" + name + \"' is \nexpected\",\n                    index >= 0);\n             Object value = attr.get();\n             assertNotNull(\"get() returned non-null\", value);\n \n             if (name.equals(\"creationdate\")) {\n-                assert(\"Creation date is a date\",\n+\t\t\t\tassertTrue(\"Creation date is a date\",\n                        value instanceof Date);\n-                assert(\"Creation date equals \" + creationDate,\n+\t\t\t\tassertTrue(\"Creation date equals \" + \ncreationDate,\n                        creationDate.equals((Date) value));\n             } else if (name.equals(\"displayname\")) {\n-                assert(\"Display name is a string\",\n+\t\t\t\tassertTrue(\"Display name is a string\",\n                        value instanceof String);\n-                assert(\"Display name equals \" + displayName,\n+\t\t\t\tassertTrue(\"Display name equals \" + displayName,\n                        displayName.equals((String) value));\n             } else if (name.equals(\"getcontentlength\")) {\n-                assert(\"Content length is a long\",\n+\t\t\t\tassertTrue(\"Content length is a long\",\n                        value instanceof Long);\n-                assert(\"Content length equals \" + contentLength,\n+\t\t\t\tassertTrue(\"Content length equals \" + \ncontentLength,\n                        contentLength == ((Long) value).longValue());\n             } else if (name.equals(\"getlastmodified\")) {\n-                assert(\"Last modified date is a date\",\n+\t\t\t\tassertTrue(\"Last modified date is a date\",\n                        value instanceof Date);\n-                assert(\"Last modified date is \" + lastModifiedDate,\n+\t\t\t\tassertTrue(\"Last modified date is \" + \nlastModifiedDate,\n                        lastModifiedDate.equals((Date) value));\n             }", "id": 46360, "time": "2003-10-28T08:38:57Z", "creator": "liujiboy@hotmail.com", "creation_time": "2003-10-28T08:38:57Z", "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 24174, "text": "*** This bug has been confirmed by popular vote. ***", "count": 1, "id": 139651, "time": "2010-09-03T04:47:02Z", "creator": "markt@apache.org", "creation_time": "2010-09-03T04:47:02Z", "is_private": false}, {"attachment_id": null, "tags": [], "creator": "markt@apache.org", "text": "Looking at the 5.5.x code base, this was fixed some time ago.", "count": 2, "id": 143531, "time": "2011-01-20T17:45:32Z", "bug_id": 24174, "creation_time": "2011-01-20T17:45:32Z", "is_private": false}]