[{"count": 0, "tags": [], "bug_id": 42996, "attachment_id": null, "text": "When using Wicket 1.2.6 to post a form, Tomcat 6 appears to prematurely close\nthe HTTP connection when using the nio connector.  This manifests itself as a\nblank page being delivered to the end user.  Viewing the TCP dump, it looks like\nafter the POST data is delivered, Tomcat just closes the connection.\n\nOn other dynamic and static pages, Tomcat behaves as-expected.  This only seems\nto be a problem when delivering a page using the redirect-to-buffer form\nprocessing pattern.\n\nWicket's default form processing strategy is to render the output to a buffer,\nissue a redirect to the user, and then display the content of the buffer.  (See\nhttp://cwiki.apache.org/WICKET/render-strategies.html and a long discussion of\nthe redirect-after-post strategy here:\nhttp://www.theserverside.com/tt/articles/article.tss?l=RedirectAfterPost )\n\nThis works as-expected every time with the standard HTTP/1.1 connector.  With\nthe nio connector it fails about 9 times out of 10.\n\nThe workaround is to use only the HTTP/1.1 connector.\n\nI'm not 100% certain that this is a Tomcat bug and not a Wicket bug, but it does\nseem to be a consequence of the interaction between the two.  Fortunately,\nWicket is an Apache project now too :-)", "id": 106042, "time": "2007-07-29T23:00:41Z", "creator": "apache@spatula.net", "creation_time": "2007-07-29T23:00:41Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 42996, "attachment_id": null, "id": 106060, "time": "2007-07-30T09:43:37Z", "creator": "fhanik@apache.org", "creation_time": "2007-07-30T09:43:37Z", "is_private": false, "text": "Could you please attach a test case, and I'll be happy to look into it for you.\n\nthanks\nFilip"}, {"count": 2, "tags": [], "bug_id": 42996, "attachment_id": null, "id": 106083, "time": "2007-07-30T22:18:24Z", "creator": "apache@spatula.net", "creation_time": "2007-07-30T22:18:24Z", "is_private": false, "text": "I'm still trying to zero in on the exact nature of the problem.   Right now it\nlooks like the redirect-to-buffer is a red herring.  I wrote a simple filter to\ndump out the parameters to the request, and it looks like all of the POST\nvariables are missing, though the GET variable is there.  tcpdump shows that\nthey *are* being delivered over the wire, however.\n\nSometimes *some* variables make it into the request and others don't.\n\nOnce I get a better idea of what's going on, I'll submit a proper test case.\n\nIt seems to misbehave less often if the native library is not used, but that\nmight also be a red herring."}, {"count": 3, "tags": [], "creator": "apache@spatula.net", "text": "Also, I'm not sure if it's relevant, but it's more information anyway; this is\nhappening much more often on my FreeBSD system, which is running Tomcat via\njsvc, than it is happening on the Windows machine I use for development work...\nit's possible that jsvc figures into it somehow.  Once I get port 8080 unblocked\non my firewall, I'll see if it persists without jsvc.\n\nIt's also possible that there's something particular to the way nio behaves on\nFreeBSD (and there's always the unusual possibility of a JVM bug on the platform).\n\nThe other thing that strikes me as interesting/unusual about the request is that\nit contains both GET and POST variables... something I'll probably take into\nconsideration as I try to wire up a test case.", "id": 106084, "time": "2007-07-30T22:33:33Z", "bug_id": 42996, "creation_time": "2007-07-30T22:33:33Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 42996, "attachment_id": null, "text": "This looks exactly like what I saw with the NIO connector; POST parameters\nsometimes went missing. It happened very infrequently, and when I tried to\nproduce an isolated test case (which I spent several hours on), I could not\nreproduce it. Note that my requests in which this happened had POST params only\nand no GET params.\n\nWhen debugging in my application I saw behavior that I found suspect: the\nparametersParsed flag on the Request was sometimes true even though the\nparameters had not been parsed yet, causing all the POST params to not be parsed\nand the parameters map to be empty. Unfortunately this problem happened so\ninfrequently that I only caught it in the debugger once, and was not able to\ndetermine how this could come about.\n\nThe strange thing is, that the problem went away in my application (I don't know\nwhat caused it to go away), and I have not seen it since. I figured it may have\nbeen incorrect synchronization on my part...\n\nRegards,\nSebastiaan", "id": 106090, "time": "2007-07-31T02:31:44Z", "creator": "sebster@sebster.com", "creation_time": "2007-07-31T02:31:44Z", "is_private": false}, {"count": 5, "tags": [], "creator": "fhanik@apache.org", "attachment_id": null, "text": "Hey guys,\nplease test with 6.0.14 or 6.x as there have been numerous bug fixes.\nthe 6.0.14 binaries can be found here:\nhttp://people.apache.org/~remm/tomcat-6/v6.0.14/\n\nLet me know what you come up with\nFilip", "id": 106092, "time": "2007-07-31T06:42:16Z", "bug_id": 42996, "creation_time": "2007-07-31T06:42:16Z", "is_private": false}, {"count": 6, "tags": [], "creator": "apache@spatula.net", "text": "Some additional testing indicates that this MAY be the result of too low a value\nfor maxHttpHeaderSize.  My simple test of POST works as-expected, but posts with\nmy actual site don't seem to.  The inference I got from this was that the\ncontent of the POST matters.  No idea why it would behave differently for nio vs\nthe standard connector though, unless the two have different defaults or react\ndifferently when the default is exceeded.\n\nI will do some more testing and report what I find.", "id": 106118, "time": "2007-07-31T13:30:07Z", "bug_id": 42996, "creation_time": "2007-07-31T13:30:07Z", "is_private": false, "attachment_id": null}, {"count": 7, "tags": [], "bug_id": 42996, "attachment_id": null, "id": 106119, "time": "2007-07-31T14:00:54Z", "creator": "apache@spatula.net", "creation_time": "2007-07-31T14:00:54Z", "is_private": false, "text": "Unfortunately, adjusting the maxHttpHeaderSize doesn't seem to fix the problem.\n\nStrangely enough, though, it seems like having multiple Connectors defined with\nat least one of them being the standard connector and the two sharing the same\nexecutor pool makes the problem happen less frequently, though that could be my\nimagination too.  Maybe there's some state that isn't getting reset for the\nexecutors with the nio connector?"}, {"count": 8, "tags": [], "bug_id": 42996, "attachment_id": null, "text": "At first glance, it looks like 6.0.14 fixes the problem.", "id": 106123, "time": "2007-07-31T14:58:42Z", "creator": "apache@spatula.net", "creation_time": "2007-07-31T14:58:42Z", "is_private": false}, {"count": 9, "tags": [], "creator": "apache@spatula.net", "text": "A day later, things still seem OK, so at this point I'm comfortable saying that\nit's fixed in 6.0.14.", "id": 106151, "time": "2007-08-01T09:06:13Z", "bug_id": 42996, "creation_time": "2007-08-01T09:06:13Z", "is_private": false, "attachment_id": null}, {"count": 10, "text": "The problem still exists up to and including version 6.0.19.\nBut it can be avoided by setting HTTP 1.1 Header 'Connection: close'.\n\nAlso, It seems that sometimes an HTTP POST hangs until a <Connector connectionTimeout=\"xx\"> occurs.", "bug_id": 42996, "attachment_id": null, "id": 126984, "time": "2009-05-13T05:52:59Z", "creator": "holger.schott@tsi-mms.de", "creation_time": "2009-05-13T05:52:59Z", "tags": [], "is_private": false}, {"count": 11, "tags": [], "bug_id": 42996, "attachment_id": null, "text": "Please provide a test case.", "id": 126998, "time": "2009-05-13T10:46:57Z", "creator": "markt@apache.org", "creation_time": "2009-05-13T10:46:57Z", "is_private": false}, {"count": 12, "tags": [], "bug_id": 42996, "attachment_id": null, "id": 127371, "time": "2009-05-25T03:28:59Z", "creator": "steven.yates@springsource.com", "creation_time": "2009-05-25T03:28:59Z", "is_private": false, "text": "Just received word from that a client of our's is experiencing exactly this problem in Tomcat 6.0.18 . Claims to be using Wicket in several web-applications but not in this particular application. I will know more when I make a site visit next week as to the particular configuration causing this problem.\n\nRGS SY"}, {"count": 13, "text": "Having reviewed the comments, I am reminded of similar issues that have been reported in the past. Namely, sporadic loss of parameters which is very hard to replicate.\n\nThe reference (in comment #4) to parametersParsed being true before the request has been processed also rang some bells.\n\nI believe that the root cause is that the application (or possibly the framework being used - in this case wicket) is retaining a reference to the request object and attempting to re-use this retained request object during the processing of a subsequent request. Tomcat recycles request objects so if an application retains a reference to a request then the processing of subsequent requests can break. This hypothesis is also consistent with comments #7 & #10\n\nOf course, this is all supposition based on experience. Although I am closing this as INVALID, if anyone does find a reproducible test case that points to a Tomcat bug then please do re-open this issue, attach your test case and someone will take a look.", "bug_id": 42996, "attachment_id": null, "id": 127387, "time": "2009-05-25T13:02:34Z", "creator": "markt@apache.org", "creation_time": "2009-05-25T13:02:34Z", "tags": [], "is_private": false}, {"count": 14, "tags": [], "bug_id": 42996, "attachment_id": null, "text": "How to reproduce:\n\n1. use IE 7 or IE 8\n2. have two XMLHttpRequest at the same session\n     - one HTTP POST against a HttpServlet\n     - one HTTP GET against a CommetProcessor with Long-Poll\n     - but both on the same NIO connector\n\n     - the POST sends messages to the Long-Poll\n\n3. adjust server.xml to make sure the NIO connectors maxKeepAliveRequests is not 1\n\nTestcase will be attached soon", "id": 127478, "time": "2009-05-28T08:18:36Z", "creator": "holger.schott@tsi-mms.de", "creation_time": "2009-05-28T08:18:36Z", "is_private": false}, {"count": 15, "tags": [], "bug_id": 42996, "attachment_id": 23725, "text": "Created attachment 23725\ntestcase maven2 project", "id": 127485, "time": "2009-05-28T12:35:08Z", "creator": "holger.schott@tsi-mms.de", "creation_time": "2009-05-28T12:35:08Z", "is_private": false}, {"count": 16, "tags": [], "creator": "holger.schott@tsi-mms.de", "attachment_id": null, "text": "I have tested with 6.0.19, IE7 and NIO connector with keep-alive enabled.", "id": 127486, "time": "2009-05-28T13:00:49Z", "bug_id": 42996, "creation_time": "2009-05-28T13:00:49Z", "is_private": false}, {"count": 17, "text": "I forgot to descirbe the settings I used.\n\nThis is what I changed in the server.xml:\n\n        <Connector\n            connectionTimeout=\"5000\"\n            port=\"8080\"\n            protocol=\"org.apache.coyote.http11.Http11NioProtocol\"\n             />\n\nand in CometObserver.java I set the CometEvent.setTimeout() to 10 seconds.\n\nA least the Connectors connectionTimeout must be lower then the CometEvent timeout .", "bug_id": 42996, "attachment_id": null, "id": 127748, "time": "2009-06-09T00:23:03Z", "creator": "holger.schott@tsi-mms.de", "creation_time": "2009-06-09T00:23:03Z", "tags": [], "is_private": false}, {"count": 18, "tags": [], "bug_id": 42996, "attachment_id": null, "id": 127764, "time": "2009-06-09T09:25:21Z", "creator": "fhanik@apache.org", "creation_time": "2009-06-09T09:25:21Z", "is_private": false, "text": "Thank you, I will take a look today!"}, {"count": 19, "tags": [], "bug_id": 42996, "attachment_id": null, "text": "Some Restlet users encountered a very similar issue: their sometimes get requests with an empty content (the POST/PUT entity is somehow lost).\n\nI was able to reproduce the issue with load testing and chaining GET/PUT calls. It seemed to me that Tomcat broke some connections, while still allowing the Servlet request to go through. \n\nThis was tested with Tomcat 5.5.27, Tomcat 6.0.18 and Tomcat 6.0.20. The exact same WAR deployed in Jetty 6.1 doesn't have any issue.\n\nSee history of our issue here:\nhttp://restlet.tigris.org/issues/show_bug.cgi?id=843", "id": 129125, "time": "2009-07-24T10:00:31Z", "creator": "jerome.louvel@noelios.com", "creation_time": "2009-07-24T10:00:31Z", "is_private": false}, {"count": 20, "tags": [], "bug_id": 42996, "attachment_id": null, "text": "I ran this through a TCP monitor, and at the time of the request that failed (ie, it had 0 parameters, here is what it looks like\n\n\nREQUEST\n----------------8<----------------------------\nPOST /test/action HTTP/1.1\nAccept: */*\nAccept-Language: en-us\nReferer: http://10.0.2.2:8082/test/#send\nContent-Type: application/x-www-form-urlencoded; charset=UTF-8\nAccept-Encoding: gzip, deflate\nUser-Agent: Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.2; WOW64; Trident/4.0; GTB6; .NET CLR 2.0.50727; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729)\nHost: 10.0.2.2:8082\nContent-Length: 25\nConnection: Keep-Alive\nCache-Control: no-cache\nCookie: JSESSIONID=A6DABF8D3A1FEB0A173CCD78D8CD8BE8\n\n\n----------------8<----------------------------\n\nThe request says there should be a 25 byte content length, but there are no parameters in the request.\nAnother (succesful request looks like this)\n\n\n\n\nSUCCESSFUL REQUEST\n----------------8<----------------------------\nPOST /test/action HTTP/1.1\nAccept: */*\nAccept-Language: en-us\nReferer: http://10.0.2.2:8082/test/#send\nContent-Type: application/x-www-form-urlencoded; charset=UTF-8\nAccept-Encoding: gzip, deflate\nUser-Agent: Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.2; WOW64; Trident/4.0; GTB6; .NET CLR 2.0.50727; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729)\nHost: 10.0.2.2:8082\nContent-Length: 25\nConnection: Keep-Alive\nCache-Control: no-cache\nCookie: JSESSIONID=A6DABF8D3A1FEB0A173CCD78D8CD8BE8\n\nparam1=Lorem&param2=ipsum\n----------------8<----------------------------", "id": 129130, "time": "2009-07-24T12:46:34Z", "creator": "fhanik@apache.org", "creation_time": "2009-07-24T12:46:34Z", "is_private": false}, {"count": 21, "text": "Created attachment 24034\nOutput from wireshark, shows no body\n\nSame with an example from Wireshark, there is no body in the request", "bug_id": 42996, "attachment_id": 24034, "id": 129131, "time": "2009-07-24T12:52:43Z", "creator": "fhanik@apache.org", "creation_time": "2009-07-24T12:52:43Z", "tags": [], "is_private": false}, {"count": 22, "tags": [], "bug_id": 42996, "attachment_id": null, "id": 129132, "time": "2009-07-24T12:54:06Z", "creator": "fhanik@apache.org", "creation_time": "2009-07-24T12:54:06Z", "is_private": false, "text": "(In reply to comment #19)\n> Some Restlet users encountered a very similar issue: their sometimes get\n> requests with an empty content (the POST/PUT entity is somehow lost).\n> \n> I was able to reproduce the issue with load testing and chaining GET/PUT calls.\n> It seemed to me that Tomcat broke some connections, while still allowing the\n> Servlet request to go through. \n> \n> This was tested with Tomcat 5.5.27, Tomcat 6.0.18 and Tomcat 6.0.20. The exact\n> same WAR deployed in Jetty 6.1 doesn't have any issue.\n> \n> See history of our issue here:\n> http://restlet.tigris.org/issues/show_bug.cgi?id=843\n\nJerome, do you want to work with me to help setup a test case.\nThat way I can try to reproduce it. I was able to reproduce the error with the test case provided, but it clearly shows that the client is not sending any body."}, {"count": 23, "tags": [], "creator": "jerome.louvel@noelios.com", "text": "Hi Filip,\n\nYes, I can help you reproducing the issue. I've been using JMeter for the load testing and a Restlet application (WAR) on the server-side.\n\nLet me try to wrap everything together and attach it to this issue.\n\nCheers,\nJerome", "id": 129217, "time": "2009-07-28T13:42:44Z", "bug_id": 42996, "creation_time": "2009-07-28T13:42:44Z", "is_private": false, "attachment_id": null}, {"count": 24, "tags": [], "creator": "jerome.louvel@noelios.com", "text": "Created attachment 24053\nJMeter TestPlan and input file to reproduce the issue\n\nRemember to adjust the path to the \"Input.txt\" file in JMeter for the PUT request, as well as the port number for Tomcat if necessary.", "id": 129218, "time": "2009-07-28T14:06:26Z", "bug_id": 42996, "creation_time": "2009-07-28T14:06:26Z", "is_private": false, "attachment_id": 24053}, {"count": 25, "tags": [], "bug_id": 42996, "attachment_id": 24054, "id": 129219, "time": "2009-07-28T14:09:12Z", "creator": "jerome.louvel@noelios.com", "creation_time": "2009-07-28T14:09:12Z", "is_private": false, "text": "Created attachment 24054\nEclipse project to reproduce the issue\n\nThis is a standalone Eclipse project, with full Restlet source code in addition to the small application/test code to reproduce (see the test.HelloWorldResource class)."}, {"count": 26, "tags": [], "bug_id": 42996, "attachment_id": 24055, "text": "Created attachment 24055\nFull project WAR\n\nThe WAR also includes the source code", "id": 129220, "time": "2009-07-28T14:11:54Z", "creator": "jerome.louvel@noelios.com", "creation_time": "2009-07-28T14:11:54Z", "is_private": false}, {"count": 27, "tags": [], "bug_id": 42996, "attachment_id": null, "text": "When running the load test, the console will log access messages. If you look carefully, you will see error lines like this:\n\nINFO: 2009-07-28\t23:01:20\t127.0.0.1\t-\t127.0.0.1\t8080\tGET\t/Bug843/hello\t-\t200\t12\t-\t0\thttp://localhost:8080\tJava/1.6.0_13\t-\n28 juil. 2009 23:01:20 org.restlet.engine.log.LogFilter afterHandle\nINFO: 2009-07-28\t23:01:20\t127.0.0.1\t-\t127.0.0.1\t8080\tPUT\t/Bug843/hello\t-\t200\t0\t10\t0\thttp://localhost:8080\tJava/1.6.0_13\t-\n28 juil. 2009 23:01:20 org.restlet.engine.log.LogFilter afterHandle\nINFO: 2009-07-28\t23:01:20\t127.0.0.1\t-\t127.0.0.1\t8080\tGET\t/Bug843/hello\t-\t200\t12\t-\t16\thttp://localhost:8080\tJava/1.6.0_13\t-\n########### ERROR (2) ###########\n28 juil. 2009 23:01:20 org.restlet.engine.log.LogFilter afterHandle\nINFO: 2009-07-28\t23:01:20\t127.0.0.1\t-\t127.0.0.1\t8080\tGET\t/Bug843/hello\t-\t200\t12\t-\t16\thttp://localhost:8080\tJava/1.6.0_13\t-\n28 juil. 2009 23:01:20 org.restlet.engine.log.LogFilter afterHandle\n\nMy machine is an Intel386 with WinXP Pro SP3.", "id": 129221, "time": "2009-07-28T14:13:30Z", "creator": "jerome.louvel@noelios.com", "creation_time": "2009-07-28T14:13:30Z", "is_private": false}, {"count": 28, "tags": [], "creator": "jerome.louvel@noelios.com", "text": "I'm changing the status to NEW as I believe I have provided enough information to reproduce the issue.", "id": 129233, "time": "2009-07-29T00:51:16Z", "bug_id": 42996, "creation_time": "2009-07-29T00:51:16Z", "is_private": false, "attachment_id": null}, {"count": 29, "tags": [], "creator": "fhanik@apache.org", "text": "Awesome Jerome, I will take a look at this early next week!", "id": 129246, "time": "2009-07-29T07:51:42Z", "bug_id": 42996, "creation_time": "2009-07-29T07:51:42Z", "is_private": false, "attachment_id": null}, {"count": 30, "tags": [], "creator": "fhanik@apache.org", "attachment_id": 24101, "text": "Created attachment 24101\nWireshark output for a request that went wrong\n\nJerome, I ran your load test. I'm not very familiar with what the app does, so maybe you can help me.\nHowever, when the application throws a 400 error (ERROR (2)) it does so when the client issued a GET request without a body.\n\nbest\nFilip", "id": 129453, "time": "2009-08-04T13:34:18Z", "bug_id": 42996, "creation_time": "2009-08-04T13:34:18Z", "is_private": false}, {"count": 31, "tags": [], "bug_id": 42996, "attachment_id": null, "id": 129512, "time": "2009-08-06T00:16:42Z", "creator": "jerome.louvel@noelios.com", "creation_time": "2009-08-06T00:16:42Z", "is_private": false, "text": "Hi Filip,\n\nIf you look at the source code in HelloWorldResource.java, you will see that \"ERROR (2)\" is displayed by the PUT method \"store()\" and not the GET method \"represent()\".\n\nThe fact that it 'appears' to come after the GET trace in the console is just an issue with the console as the requests are multi-threaded.\n\nThe HTTP GET method invokes the annotated represent() method which returns a static \"hello, world\" string.\n\nThe HTTP PUT method invokes the annotated store(Representation) method, with the HTTP entity as a parameter and sets the status to 400 only if the entity is missing or is empty.\n\nI've looked at the wireshark log but the content seems to be mixed up a little, so we don't clearly see the order of requests and responses.\n\nHope this helps,\nJerome"}, {"count": 32, "tags": [], "bug_id": 42996, "attachment_id": null, "id": 129532, "time": "2009-08-06T06:02:16Z", "creator": "fhanik@apache.org", "creation_time": "2009-08-06T06:02:16Z", "is_private": false, "text": "(In reply to comment #31)\n> Hi Filip,\n> \n> If you look at the source code in HelloWorldResource.java, you will see that\n> \"ERROR (2)\" is displayed by the PUT method \"store()\" and not the GET method\n> \"represent()\".\n\nok, I will check this out. If your system thinks youre getting a PUT when you're actually getting a GET\n\n> \n> The fact that it 'appears' to come after the GET trace in the console is just\n> an issue with the console as the requests are multi-threaded.\n\nits not, the run1.txt file contains one single connection and the requests on that connection. I filtered out all the other connections that were making requests.\n\n> \n> The HTTP GET method invokes the annotated represent() method which returns a\n> static \"hello, world\" string.\n> \n> The HTTP PUT method invokes the annotated store(Representation) method, with\n> the HTTP entity as a parameter and sets the status to 400 only if the entity is\n> missing or is empty.\n> \n> I've looked at the wireshark log but the content seems to be mixed up a little,\n\nits not, the run1.txt file contains one single connection and the requests on that connection. I filtered out all the other connections that were making requests.\n\n> so we don't clearly see the order of requests and responses.\n\nwith wireshark we do, since a connection in HTTP is request/response based. A response always follows a request.\n\n> \n> Hope this helps,\n\nI will take a look again and see if I can trace down more of what is going on.\n\n> Jerome"}, {"count": 33, "text": "Created attachment 24110\nDebug output from application\n\nhi Jerome,\nI did a few modifications\n\n1. I added a counter to Jmeter so I could see a diff between the request\n>?c=${__counter(false)}\n\n2. I added in a filter that prints out the\n - thread name\n - the counter\n - the method type (GET/PUT etc)\n\n3. I changed the test application to print out the thread name when it reports an error\n\nI've attached the output of the log, but to summarize, here is what the filter and the application prints out (System.out)\n\nThread:tomcat-exec-3 Counter:5 Method:PUT\nThread:tomcat-exec-3 Counter:11 Method:GET\nThread:tomcat-exec-3 Counter:13 Method:GET\nThread:tomcat-exec-3 ########### ERROR (2) ###########\nThread:tomcat-exec-3 Counter:28 Method:PUT\nThread:tomcat-exec-3 Counter:23 Method:GET\n\nThe thread tomcat-exec-3 reports a method GET, and then the application reports and error on the same thread.", "bug_id": 42996, "attachment_id": 24110, "id": 129535, "time": "2009-08-06T07:06:59Z", "creator": "fhanik@apache.org", "creation_time": "2009-08-06T07:06:59Z", "tags": [], "is_private": false}, {"count": 34, "text": "turned on access logging, shows the same\n\n192.168.3.98 - - [06/Aug/2009:09:39:44 -0600] GET /Bug843/hello?c=222 HTTP/1.1 400 345 - GET tomcat-exec-9\n\nGET request returns a 400", "bug_id": 42996, "attachment_id": null, "id": 129541, "time": "2009-08-06T08:45:39Z", "creator": "fhanik@apache.org", "creation_time": "2009-08-06T08:45:39Z", "tags": [], "is_private": false}, {"count": 35, "text": "Thanks for investigating. This is weird. Note that the same application deployed in Jetty doesn't have any issue.\n\nMaybe Tomcat mixes up the method name in some cases?", "bug_id": 42996, "attachment_id": null, "id": 129542, "time": "2009-08-06T08:47:35Z", "creator": "jerome.louvel@noelios.com", "creation_time": "2009-08-06T08:47:35Z", "tags": [], "is_private": false}, {"count": 36, "text": "(In reply to comment #35)\n> Thanks for investigating. This is weird. Note that the same application\n> deployed in Jetty doesn't have any issue.\n> \n> Maybe Tomcat mixes up the method name in some cases?\n\nthen the filter should have reported that.\nI can take a look again tomorrow, but right now, I don't see an error in Tomcat", "bug_id": 42996, "attachment_id": null, "id": 129543, "time": "2009-08-06T09:34:04Z", "creator": "fhanik@apache.org", "creation_time": "2009-08-06T09:34:04Z", "tags": [], "is_private": false}, {"count": 37, "tags": [], "bug_id": 42996, "attachment_id": null, "id": 129544, "time": "2009-08-06T12:03:27Z", "creator": "fhanik@apache.org", "creation_time": "2009-08-06T12:03:27Z", "is_private": false, "text": "Jerome, I narrowed it down for you\n\nin ServerResource.doNegotiatedHandle()\n\nList<Variant> variants = getAvailableVariants(getMethod());\n\nwhen the error occurs, \ngetMethod() -> return GET\n\nbut the list coming back, \n\nvariants.get(0).getAnnotationInfo().getRestletMethod() -> return PUT\n\nand so the preferred variant, contains a put method, and then it fails.\n\nbest\nFilip"}, {"count": 38, "tags": [], "bug_id": 42996, "attachment_id": null, "id": 129545, "time": "2009-08-06T12:07:32Z", "creator": "fhanik@apache.org", "creation_time": "2009-08-06T12:07:32Z", "is_private": false, "text": "(In reply to comment #10)\n> The problem still exists up to and including version 6.0.19.\n> But it can be avoided by setting HTTP 1.1 Header 'Connection: close'.\n> \n> Also, It seems that sometimes an HTTP POST hangs until a <Connector\n> connectionTimeout=\"xx\"> occurs.\n\nThat is when the body is missing, the wireshark dump showed that there was no body, so yes, parsing body will hang, and then timeout. \n\nin the other connector, there is setting, disableUploadTimeout, and what if the body comes way later.\n\nso the solution here would be to increase the read timeout if the body is expected to show up way later."}, {"count": 39, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "text": "Whlist Filip has been looking at Jerome's test case, I have been looking at Holger's and I am seeing similar results.\n\nI can only reproduce the error when using 127.0.0.1. This means the data isn't visible to Wireshark. When I use any of the normal Wireshark on Windows tricks to view the data, I can no longer reproduce the problem.\n\nI was able, with NT Kernel's Local Network Monitor, to view the traffic on 127.0.0.1. I saw the same thing Filip saw. When the error occurs, the client doesn't send any data.\n\nThis is looking  increasing like a client issue rather than a Tomcat one.\n\nWithout a test case that shows Tomcat ignoring data that was sent or otherwise doing something as the TCP level that it should not that causes the client not to send the data, this issue is likely to get closed as INVALID.", "id": 129721, "time": "2009-08-16T14:03:13Z", "bug_id": 42996, "creation_time": "2009-08-16T14:03:13Z", "is_private": false}, {"count": 40, "tags": [], "creator": "jerome.louvel@noelios.com", "attachment_id": null, "text": "Thanks guys for all the tests (including Restlet code) and additional info. I'm busy right now but will try to get to by next week. Please keep this issue open a bit more.\n\nCheers,\nJerome", "id": 129745, "time": "2009-08-17T10:38:00Z", "bug_id": 42996, "creation_time": "2009-08-17T10:38:00Z", "is_private": false}, {"count": 41, "tags": [], "bug_id": 42996, "attachment_id": null, "text": "Filip, I do confirm your conclusion and was able to fix the underlying issue introduced in Restlet 2.0 code base.\n\nThanks for helping us spotting this bug. I wish I wouldn't have wasted your time on this!\n\nCheers,\nJerome", "id": 129849, "time": "2009-08-22T03:52:06Z", "creator": "jerome.louvel@noelios.com", "creation_time": "2009-08-22T03:52:06Z", "is_private": false}, {"count": 42, "tags": [], "bug_id": 42996, "attachment_id": null, "id": 129900, "time": "2009-08-24T09:22:48Z", "creator": "fhanik@apache.org", "creation_time": "2009-08-24T09:22:48Z", "is_private": false, "text": "Unable to reproduce the problem."}]