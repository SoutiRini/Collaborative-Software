[{"count": 0, "tags": [], "bug_id": 25732, "attachment_id": null, "id": 49628, "time": "2003-12-23T19:22:46Z", "creator": "bckfnn@worldonline.dk", "creation_time": "2003-12-23T19:22:46Z", "is_private": false, "text": "This patch fixes the problem with leading spaces after a line-break. \n\nSuch spaces should be suppressed according to J.Pietschmann:\nhttp://marc.theaimsgroup.com/?l=fop-dev&m=107185453129923&w=2"}, {"count": 1, "tags": [], "bug_id": 25732, "attachment_id": 9687, "id": 49629, "time": "2003-12-23T19:24:52Z", "creator": "bckfnn@worldonline.dk", "creation_time": "2003-12-23T19:24:52Z", "is_private": false, "text": "Created attachment 9687\nThe patch against HEAD"}, {"count": 2, "tags": [], "creator": "bckfnn@worldonline.dk", "text": "Created attachment 9688\nA test .fo that illustrate the problem.", "id": 49630, "time": "2003-12-23T19:26:30Z", "bug_id": 25732, "creation_time": "2003-12-23T19:26:30Z", "is_private": false, "attachment_id": 9688}, {"count": 3, "tags": [], "bug_id": 25732, "text": "I think the new boolean first is equivalent to vecInlineBreaks.isEmpty(), so\nthat the patch could be:\n\n   inlineLC.setFlags(LayoutContext.SUPPRESS_LEADING_SPACE,\n\t\t\t\t   (vecInlineBreaks.size() == iPrevLineEnd\n-                               && !vecInlineBreaks.isEmpty()\n                                && ((BreakPoss)\nvecInlineBreaks.get(vecInlineBreaks.size() - 1)).\n                                    isForcedBreak() == false));", "id": 49634, "attachment_id": null, "creator": "spepping@apache.org", "creation_time": "2003-12-23T21:00:38Z", "time": "2003-12-23T21:00:38Z", "is_private": false}, {"count": 4, "attachment_id": null, "creator": "bckfnn@worldonline.dk", "is_private": false, "id": 49635, "time": "2003-12-23T21:21:25Z", "bug_id": 25732, "creation_time": "2003-12-23T21:21:25Z", "tags": [], "text": "Simon, your patch is certainly too simple. When vecInlineBreaks happens to be \nempty, then we are not allowed to access the vecInlineBreaks()-1 'th element.\nSo there have to be at least a check for that.\n"}, {"count": 5, "tags": [], "creator": "glenmazza@yahoo.com", "text": "We need code comments, also a more descriptive variable name so people \nunderstand X months from now what it is for--what does the boolean \"first\" \nvariable refer to -- first line?\n\nThanks,\nGlen", "id": 49637, "time": "2003-12-23T21:33:22Z", "bug_id": 25732, "creation_time": "2003-12-23T21:33:22Z", "is_private": false, "attachment_id": null}, {"count": 6, "tags": [], "creator": "glenmazza@yahoo.com", "attachment_id": null, "id": 49641, "time": "2003-12-23T22:31:23Z", "bug_id": 25732, "creation_time": "2003-12-23T22:31:23Z", "is_private": false, "text": "Finn, I can add the comments in, but, apologies for my slowness here--what \ndoes \"first\" precisely indicate within the processing of the document?  First \nline after a preceding line-break or block or what?\n\nThanks,\nGlen"}, {"count": 7, "tags": [], "text": "The use of 'first' is to indicate that space suppression should only happen at \nthe very first flow object in a block. But Simon and Glen's comments have made \nme realize that that is probably wrong. Space suppression should occur for each \nflow object until a bp is added. So the test \n   vecInlineBreaks.size() == iPrevLineEnd\nis enough and the badly named 'first' vrbl can be removed.\n\nUnfortunately this triggers a different bug where setting space suppression on \na InlineStackingLM cause space suppression to occurs for each of the LM's \nchildren.\n\nI'll take a look at that problem, and until I come up with something, this \npatch should be suspended.", "attachment_id": null, "bug_id": 25732, "id": 49662, "time": "2003-12-24T12:30:52Z", "creator": "bckfnn@worldonline.dk", "creation_time": "2003-12-24T12:30:52Z", "is_private": false}, {"count": 8, "tags": [], "creator": "bckfnn@worldonline.dk", "text": "A new patch, that doesn't introduce new vrbls but uses the existing test for a \nnew line.\n\nThe patch also ensure that a child InlineStackingLM always uses the parent LM \nvalue for SUPPRESS_LEADING_SPACES. As it were, the parent value was only used \nwhen the InlineStackingLM started a new area.\n\nThis patch also fixes bug 25743.\n\nThank you Simon and Glen for your help.\n\nregards,\nfinn", "id": 49666, "time": "2003-12-24T13:52:25Z", "bug_id": 25732, "creation_time": "2003-12-24T13:52:25Z", "is_private": false, "attachment_id": null}, {"count": 9, "tags": [], "creator": "bckfnn@worldonline.dk", "text": "Created attachment 9696\nA new unified patch against HEAD that overrides the previous patch.", "id": 49667, "time": "2003-12-24T13:53:24Z", "bug_id": 25732, "creation_time": "2003-12-24T13:53:24Z", "is_private": false, "attachment_id": 9696}, {"count": 10, "tags": [], "bug_id": 25732, "attachment_id": 9697, "id": 49668, "time": "2003-12-24T13:54:24Z", "creator": "bckfnn@worldonline.dk", "creation_time": "2003-12-24T13:54:24Z", "is_private": false, "text": "Created attachment 9697\nA slightly diffrent test that also checks for the bug in 25743."}, {"count": 11, "tags": [], "bug_id": 25732, "text": "Problem fixed long ago by knuth algo, patch no longer valid anyway.", "id": 79782, "time": "2005-09-12T10:12:00Z", "creator": "bckfnn@worldonline.dk", "creation_time": "2005-09-12T10:12:00Z", "is_private": false, "attachment_id": null}, {"count": 12, "tags": [], "bug_id": 25732, "attachment_id": null, "id": 155912, "time": "2012-04-01T06:48:14Z", "creator": "gadams@apache.org", "creation_time": "2012-04-01T06:48:14Z", "is_private": false, "text": "batch transition pre-FOP1.0 resolved+fixed bugs to closed+fixed"}]