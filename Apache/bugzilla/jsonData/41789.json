[{"count": 0, "tags": [], "bug_id": 41789, "text": "If text contains characters from outside the Basic Multilingual Plane, and the\ntext is rendered as paths (with text-rendering='geometricPrecision', or having\nsome rotation on the text), then the rendered glyphs are wrong.  In the example\nat the URL given, the same text string is used twice.  The upper text element is\nrendered by the Java2D classes and is done correctly.  The lower text element is\npainted as shapes since it has text-rendering='geometricPrecision', but just\nrepeats the first glyph over the whole string (although the combining diereses\nare rendered).\n\nAt least in AWTGVTGlyphVector.java:113, the call to glyphVector.getNumGlyphs()\nreturns a number that makes it look like java.awt.font.GlyphVector assumes each\nof the two surrogates in a pair are separate glyphs.\n\nI suspect there are a few places in the code that doesn't handle surrogate pairs\nproperly.", "id": 100171, "time": "2007-03-07T17:11:28Z", "creator": "cam@apache.org", "creation_time": "2007-03-07T17:11:28Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "text": "According to http://java.sun.com/developer/technicalArticles/Intl/Supplementary/\nmany of the JRE's classes that deal with characters have been updated in Java\n1.5 to support surrogates.  Once 1.7 is shipped, we may want to consider making\nJava 1.5 the baseline for support.", "is_private": false, "bug_id": 41789, "id": 100175, "time": "2007-03-07T18:25:05Z", "creator": "cam@apache.org", "creation_time": "2007-03-07T18:25:05Z", "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 41789, "text": "Oh and for the example, you may need the Code2001 font\n(http://home.att.net/~jameskass/code2001.htm) for it to render.", "id": 100176, "time": "2007-03-07T18:26:10Z", "creator": "cam@apache.org", "creation_time": "2007-03-07T18:26:10Z", "is_private": false, "attachment_id": null}]