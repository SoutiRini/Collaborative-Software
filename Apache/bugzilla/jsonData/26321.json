[{"count": 0, "attachment_id": null, "creator": "jmnguyen@mail.arc.nasa.gov", "is_private": false, "id": 50906, "time": "2004-01-21T19:19:58Z", "bug_id": 26321, "creation_time": "2004-01-21T19:19:58Z", "tags": [], "text": "Hi,\n I am working on a workbook with Macros in it. I'm not sure if this is the \nproblem. I am currently on Windows 2000, using Excel 2000. When I execute my \ncode, I get \"Unknown PTG\" warnings, but I am not modifying or inserting any \nFormulas at all. The formula cells are left alone. When I open the workbook, I \nget a \"File Error: Data may have been lost\" message. Some of the cells have \n#NAME? values in them, and if I re-save the file, almost every cell that had \nvalues changes to either #NAME? or #REF!, and sometimes it would not allow me \nto save the file at all (\"File not saved\"). I don't know what I am doing wrong, \nany help is greatly appreciated! Below is the code the causes this problem: \n\n    //this method writes to the xsl workbook -- Gets File error when opening and\n    //re-saving\n    private void set_intros_values()\n    {\n        FileInputStream fin = null;\n        FileOutputStream fout = null;\n        POIFSFileSystem poifs;\n        HSSFWorkbook wb;\n        HSSFName hssfname;\n        HSSFSheet hssfsheet;\n        HSSFCell cell;\n        int index = 0, i = 0;\n        int rownum = 0, colnum = 0;\n        String name, cell_ref = null, sheet_name = null;\n        StringTokenizer st, prev_str;\n        Object new_val;\n        double prev;\n        try {\n            fin = new FileInputStream(intros_filename);\n            poifs = new POIFSFileSystem(fin);\n            wb = new HSSFWorkbook(poifs);\n\n            //go through the names and see if any of the named ranges\n            for (Enumeration e = name_to_vals.keys(); e.hasMoreElements();)\n            {\n                name = (String)e.nextElement();\n                index = wb.getNameIndex(name);\n                hssfname = wb.getNameAt(index);\n                cell_ref = hssfname.getReference();\n\n                    //format -- sheet_name!$col$row\n                    st = new StringTokenizer(cell_ref, \"$ \");\n                    st.nextToken();\n                    //get cell column and row\n                    colnum = get_col(st.nextToken().toLowerCase());\n                    rownum = Integer.valueOf(st.nextToken()).intValue() - 1;\n\n                    //the cell to write new value to\n                    hssfsheet = wb.getSheet(hssfname.getSheetName());\n                    cell = (HSSFCell)(hssfsheet.getRow((short)rownum).getCell\n((short)colnum));\n\n                    new_val = name_to_vals.get(name);\n                    int cell_type = cell.getCellType();\n                    //check for cell type\n                    switch(cell_type){\n                        //Double\n                        case HSSFCell.CELL_TYPE_NUMERIC:\n                            cell.setCellValue(((Double)new_val).doubleValue());\n                            break;\n\n                        //Formula -- *** DO NOTHING IF FORMULA !! *****\n                        case HSSFCell.CELL_TYPE_FORMULA:\n                            break;\n                        default:\n                            break;\n                    }\n                }\n            }\n            //write out results to intros workbook\n            fout = new FileOutputStream(intros_filename);\n            wb.write(fout);\n            fout.close();\n            fin.close();\n        }\n        catch (Exception exc){\n            exc.printStackTrace();\n        }\n    }"}, {"count": 1, "attachment_id": 10520, "creator": "marcus@stwing.upenn.edu", "is_private": false, "id": 52879, "time": "2004-02-24T18:27:42Z", "bug_id": 26321, "creation_time": "2004-02-24T18:27:42Z", "tags": [], "text": "Created attachment 10520\nInitial XL file"}, {"count": 2, "tags": [], "creator": "marcus@stwing.upenn.edu", "is_private": false, "id": 52880, "attachment_id": 10521, "bug_id": 26321, "creation_time": "2004-02-24T18:28:25Z", "time": "2004-02-24T18:28:25Z", "text": "Created attachment 10521\nPOI Generated XL file"}, {"count": 3, "tags": [], "bug_id": 26321, "text": "I had a similar issue.  It only arose on array formulas. I have attached the\ninitial excel file and the POI generated file.  The code is simply:\n\n  POIFSFileSystem fs = \n    new POIFSFileSystem(new FileInputStream(\"c:\\test\\before.xls\"));\n  HSSFWorkbook wb = new HSSFWorkbook(fs);\n  FileOutputStream out = \n    new FileOutputStream(\"c:\\test\\after.xls\");\n  wb.write( out );\n  out.close();\n\n", "id": 52881, "time": "2004-02-24T18:31:28Z", "creator": "marcus@stwing.upenn.edu", "creation_time": "2004-02-24T18:31:28Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 26321, "text": "Still have it in 3.1-beta2.\nArray-Entered Formula (221h) are not yet supported and it might be a clue. The attached workbook contains a couple of such ARRAY records mixed with FORMULA records. After serialization the order if records is changed and it seems to be the problem. \n \nYegor", "id": 116731, "time": "2008-05-17T04:28:54Z", "creator": "yegor@dinom.ru", "creation_time": "2008-05-17T04:28:54Z", "is_private": false, "attachment_id": null}, {"count": 5, "attachment_id": null, "creator": "josh@apache.org", "text": "Fixed in svn r690636.\n\nPOI now does round trip re-serialization of workbooks with ArrayRecords and/or TableRecords without introducing errors.\n\nHowever, POI is still not able to create/edit Array or Table formulas. \n", "id": 120232, "time": "2008-08-30T21:51:53Z", "bug_id": 26321, "creation_time": "2008-08-30T21:51:53Z", "tags": [], "is_private": false}]