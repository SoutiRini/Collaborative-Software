[{"count": 0, "tags": [], "text": "When using ServletContext.getContext(String) in a parallel deployment the context is not returned.\n\nFor example:\nfoo_a##001 and foo_b##001 are deployed.\nPage on /foo_a/test.jsp calls ServletContext.getContext(\"/foo_b\").  In non parallel deployments this returns the ServletContext for \"/foo_b\". However in parallel deployments the ServletContext for \"/\" is returned instead.\n\nThis was encountered using a custom filter that is set to forward certain requests to files in one application to a central default application.\n\nCrossContext is set to true for the context.xml.  This works as long as the wars do not use the version name such as foo_b.war instead of foo_b##001.war.\n\nI would expect ServletContext.getContext(\"/foo_b\") to return the current active context for a URL.  Instead it looks like it will require to specify the exact version of a context instead such as ServletContext.getContext(\"/foo_b##001\").  \n\nThis puts the burden of finding the active version of the context on the calling application rather than the underlying servlet container to provide the most current context when ServletContext.getContext(String) is referenced.", "is_private": false, "bug_id": 57190, "id": 178985, "time": "2014-11-05T17:13:18Z", "creator": "charles.phillips@performtechnology.com", "creation_time": "2014-11-05T17:13:18Z", "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 57190, "text": "I'd like to point out that this gets complicated since Tomcat uses session identification to determine which version of the target web application will be used.\n\nSince the client likely didn't send their session identifier for the /other/ web application, ServletContext.getContext(String path) can't actually determine the correct ServletContext to return.\n\nIs it possible for you to avoid using ServletContext.getContext(String) in your application, and instead issue a blind redirect?", "id": 178986, "time": "2014-11-05T18:41:52Z", "creator": "chris@christopherschultz.net", "creation_time": "2014-11-05T18:41:52Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "text": "Blind redirect isn't an option.  We would rather just not use parallel deployments instead.\n\nThis seams like a limiting factor of the servlet implementation when using parallel deployments.  Is there no other way to get the context for cross context operations w/o knowing the specific version?", "is_private": false, "bug_id": 57190, "id": 178987, "time": "2014-11-05T22:03:03Z", "creator": "charles.phillips@performtechnology.com", "creation_time": "2014-11-05T22:03:03Z", "attachment_id": null}, {"count": 3, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "is_private": false, "id": 179078, "time": "2014-11-13T10:19:14Z", "bug_id": 57190, "creation_time": "2014-11-13T10:19:14Z", "text": "I think the correct behaviour here would be for getContext(\"/foo_b\") to return the latest version of foo_b, exactly as would happen if a user requested that URL.\n\nI like the idea of being able to specify a specific version if necessary although I'm not sure on the best way of doing this. I like /foo_b##ver but I wouldn't want that exposed to external clients."}, {"count": 4, "tags": [], "creator": "chris@christopherschultz.net", "attachment_id": null, "id": 179084, "time": "2014-11-13T14:22:27Z", "bug_id": 57190, "creation_time": "2014-11-13T14:22:27Z", "is_private": false, "text": "I suppose that's the best we can do, but if the client has a session with an older-than-latest-version of the /foo_b context, things might behave oddly.\n\nAlso, when the request-processing switches to the other web application, there will either be no session available there (I've never bothered to read about the session implications of cross-context forwards) or the wrong session (the one from /foo_a).\n\nCharles, I think that even if Tomcat can do this for you, your application still might not be able to tolerate the situation.\n\nBut I agree with both of you: doing *something* is better than doing nothing.\n\n+1 to returning the ServletContext that matches the latest-deployed version."}, {"count": 5, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "id": 179407, "time": "2014-12-01T15:20:59Z", "bug_id": 57190, "creation_time": "2014-12-01T15:20:59Z", "is_private": false, "text": "This has been fixed in trunk, 8.0.x (for 8.0.16 onwards) and 7.0.x (for 7.0.58 onwards).\n\nAn explicit version can be selected by appending ##version to the end of the context path. Otherwise, the latest available version will be returned."}, {"count": 6, "tags": [], "bug_id": 57190, "attachment_id": null, "id": 179577, "time": "2014-12-06T14:28:49Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2014-12-06T14:28:49Z", "is_private": false, "text": "REOPENING. Reviewing r1642697\n\nUsing Mapper.map() for this purpose returns wrong result for missing contexts. The mapper maps prefix of an URL, and so for getContext(\"/foo/bar\") it may return the context of \"/foo\" or the ROOT context.\n\nI added a test case in r1643536, but commented-out the check, as it currently fails.\n\nThis needs either a special method in Mapper or in Host (such as getLatestVersion(contextName)), or a check that the path of returned context is the same as expected.\n\nA difference between Mapper and Host is that Mapper returns only those contexts that are available. Using Host may return a context that has been stopped or have not started yet.  The same concern for the exact match branch of this method: does it need to return a non-started context, even if the name matches exactly?"}, {"count": 7, "tags": [], "text": "It needs to be a currently running context in all cases.\n\nI have a patch for this. I'll apply it shortly.", "is_private": false, "id": 179740, "creation_time": "2014-12-12T17:38:08Z", "time": "2014-12-12T17:38:08Z", "creator": "markt@apache.org", "bug_id": 57190, "attachment_id": null}, {"text": "Fixed. Fixed versions remain unchanged.", "tags": [], "bug_id": 57190, "is_private": false, "count": 8, "id": 179741, "time": "2014-12-12T18:18:49Z", "creator": "markt@apache.org", "creation_time": "2014-12-12T18:18:49Z", "attachment_id": null}]