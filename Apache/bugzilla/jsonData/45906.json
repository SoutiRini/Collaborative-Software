[{"count": 0, "tags": [], "creator": "chris@hubick.com", "is_private": false, "id": 121038, "creation_time": "2008-09-27T15:07:04Z", "time": "2008-09-27T15:07:04Z", "bug_id": 45906, "text": "Created attachment 22642\nFix ResourceAttributes ETag handling\n\nThe ResourceAttributes class and it's clients have a few problems WRT ETag handling:\n\n- ResourceAttributes only has a \"getetag\" attribute (apparently for WebDav?), and doesn't expose this value through an HTTP header compatible ALTERNATE_ETAG attribute like it does it's other attributes.\n- ResourceAttributes doesn't expose it's ETag through the getIDs(), getAll(), or get(String) methods, meaning FileDirContext.FileResourceAttributes won't return the value to DirContextURLConnection clients along with the other attributes.\n- The ResourceAttributes API is confusing, in that setETag(String) sets the *strong* etag, but getETag() returns the *weak* etag.\n- ResourceAttributes.getETag(boolean) is broken in that it sets the 'result' variable if there is an ETAG attribute value, but then immediately proceeds to overwrite that result value with the 'strongETag' or 'weakETag' value.\n- The only user of ResourceAttributes.getETag(boolean) is DefaultServlet.getETag(ResourceAttributes), which calls both ResourceAttributes.getETag() and ResourceAttributes.getETag(boolean) in succession - this method can be totally removed (making access more consistent with other attributes) by having just the simpler ResourceAttributes.getETag() return a strong tag if there is one, else fallback to returning the weak one.\n- The DefaultServlet.getETag(ResourceAttributes) method has a redundant and dead-code path to generate a weak etag using the content length and last modified values - which will have already been done and returned by ResourceAttributes.getETag(boolean).\n\nThe attached patch against trunk should fix all of this.\n\nFYI: This is a continuation of the DirContextURLConnection problems I fixed in bug 44611.", "attachment_id": 22642}, {"count": 1, "tags": [], "creator": "chris@hubick.com", "attachment_id": null, "is_private": false, "id": 121040, "time": "2008-09-27T15:55:00Z", "bug_id": 45906, "creation_time": "2008-09-27T15:55:00Z", "text": "Sorry, this may be a dup of bug 45735, but provides more extensive cleanups."}, {"count": 2, "tags": [], "text": "I have applied the patch to trunk with a minor modification (setETag was not renamed). I will propose it for 6.0.x.\n\nMany thanks.", "attachment_id": null, "bug_id": 45906, "id": 121061, "time": "2008-09-29T06:29:53Z", "creator": "markt@apache.org", "creation_time": "2008-09-29T06:29:53Z", "is_private": false}, {"count": 3, "tags": [], "creator": "chris@hubick.com", "attachment_id": null, "id": 121063, "creation_time": "2008-09-29T09:11:05Z", "time": "2008-09-29T09:11:05Z", "bug_id": 45906, "text": "Sounds great Mark, I renamed that before I realized getETag() could replace getETag(boolean) and return either the weak or strong value.  With the single generic getter, having a single generic setter makes more sense.\n\nAnyhow, the quick response makes it a pleasure to contribute, so thanks for helping get the fix in :)\n", "is_private": false}, {"count": 4, "tags": [], "text": "This has been applied to 6.0.x (with getETag(boolean) marked as deprecated) and will be included in 6.0.19 onwards. Thanks again for the patch.", "is_private": false, "bug_id": 45906, "id": 121894, "time": "2008-10-27T04:52:33Z", "creator": "markt@apache.org", "creation_time": "2008-10-27T04:52:33Z", "attachment_id": null}]