[{"count": 0, "tags": [], "bug_id": 32843, "attachment_id": null, "is_private": false, "id": 68995, "time": "2004-12-26T17:14:55Z", "creator": "gregor@apache.org", "creation_time": "2004-12-26T17:14:55Z", "text": "While there is a getSituation in AbstractUsecase, the corresponding setSituation\nis currently missing and should probably be added to allow to set workflow\ntransitions after successful completion of a usecase. Some older usecases do\nthis in flow but i think it should really be done in the business logic."}, {"count": 1, "tags": [], "creator": "andreas@apache.org", "text": "> it should really be done in the business logic.\n\n+1", "id": 69147, "time": "2005-01-03T13:21:57Z", "bug_id": 32843, "creation_time": "2005-01-03T13:21:57Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 32843, "text": "Actually the workflow situation is already obtained by AbstractUsecase:\n\n    protected void doInitialize() throws Exception {\n        Map objectModel = ContextHelper.getObjectModel(this.context);\n        Situation situation;\n        try {\n            situation = WorkflowHelper.buildSituation(objectModel);\n        } catch (WorkflowException e) {\n            throw new RuntimeException(e);\n        }\n        Request request = ObjectModelHelper.getRequest(objectModel);\n        String webappUri = ServletHelper.getWebappURI(request);\n        \n        setup(webappUri, situation);\n    }\n\nYou can just use this situation to invoke a workflow transition.\n", "id": 69148, "time": "2005-01-03T13:50:12Z", "creator": "andreas@apache.org", "creation_time": "2005-01-03T13:50:12Z", "is_private": false, "attachment_id": null}]