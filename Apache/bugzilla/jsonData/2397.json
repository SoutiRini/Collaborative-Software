[{"count": 0, "tags": [], "bug_id": 2397, "is_private": false, "id": 3343, "creation_time": "2001-06-29T08:27:54Z", "time": "2001-06-29T08:27:54Z", "creator": "heather@trifolium.com", "text": "Using substring() function with a string which has an apostrophe causes the \nfollowing error message:\norg.apache.xalan.xslt.XSLProcessorException: String index out of range: 29\n\nDetails:\nI have a template which takes a string parameter and inserts <br/>s\nin the string if there are no spaces in the string and the string is greater\nthan 32 characters.  It just prints out the string as is if there are\nspaces.  This works just fine unless I try to pass it a string with a\nspecial character.  For example, my string = \"It doesn't work like this.\"  This \nstring gets passed to the XSLT as an <xsl:param .../>.  If I pass the template \na string with an apostraphe then I get the following error:\norg.apache.xalan.xslt.XSLProcessorException: String index out of range: 29\n\nHere is the template:\n\n<xsl:template name=\"splitString\">\n\t<xsl:param name=\"string\"/>\n\t<xsl:choose>\n\t\t<xsl:when test=\"string-length($string) > 32 and\nnot(contains(substring($string,1,32), ' '))\">\n\t\t\t<xsl:value-of select =\n\"substring($string,1,32)\"/><BR/>\n\t\t\t<xsl:call-template name=\"splitString\">\n\t\t\t\t<xsl:with-param name=\"string\"\nselect=\"substring($string,33,string-length($string))\" />\n\t\t\t</xsl:call-template>\n\t\t</xsl:when>\n\t\t<xsl:otherwise>\n\t\t\t<xsl:value-of select=\"$string\"/>\n\t\t</xsl:otherwise>\n\t</xsl:choose>\n</xsl:template>\n\nAny insight into how to get around this problem would be greatly appreciated. \n\nThanks,\nHeather", "attachment_id": null}]