[{"count": 0, "tags": [], "bug_id": 17014, "attachment_id": null, "text": "ServletResponse.flushBuffer() no longer commits the response (writing status \ncode and headers) as specified in the Servlet spec ...\n\n> public void flushBuffer() throws java.io.IOException\n>\n> Forces any content in the buffer to be written to the client. A call \n> to this method automatically commits the response, meaning the status \n> code and headers will be written. \n\nPresumably this was lost in the transition from HttpConnector to \nCoyoteConnector.  This can be fixed by altering \norg.apache.coyote.tomcat4.CoyoteReponse.\n\n> public void flushBuffer() throws IOException {\n>\n>     // NEW *****\n>     if  ( !isCommitted() )\n>         coyoteResponse.sendHeaders();        \t \n>     // *********\n>\n>     outputBuffer.flush();\n> }", "id": 31160, "time": "2003-02-12T18:06:55Z", "creator": "justin.s@liquidlogic.co.uk", "creation_time": "2003-02-12T18:06:55Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 17014, "is_private": false, "id": 33629, "creation_time": "2003-03-22T02:27:20Z", "time": "2003-03-22T02:27:20Z", "creator": "wenjun@creditex.com", "text": "I am seeing the same problem after upgrading from 4.0.1 to 4.1.18-21.\nThere are definitely delays for client side to get response.  It\nhappens intermittenly and is not easy to reproduce yet consistently enough\nto becomes a performance issue.  I am seeing the problem with TC4.1.18+ \nrunning in Windows 2000 and Solaris 2.6 with jdk1.3 and jdk1.4.  If I \ninstall the legacy http connector, it works fine.\n\nThe server code is very simple:\n\n  public void doGet(HttpServletRequest req, HttpServletResponse res) throws \njavax.servlet.ServletException {\n    res.setStatus(res.SC_OK);\n    PrintWriter out = null;\n    // generate response and assign to tmp\n    out = res.getWriter();\n    res.setContentType(\"text/plain\");\n    out.write(tmp);\n    out.flush();\n    out.close();\n  }\n\nThe same code has been working great with TC4.0.1.\n\nAny help is greatly appreciated.\n\n\n", "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 17014, "attachment_id": null, "is_private": false, "id": 36063, "time": "2003-04-25T09:30:34Z", "creator": "remm@apache.org", "creation_time": "2003-04-25T09:30:34Z", "text": "You should be aware that flushing manually is bad for performance in the vast\nmajority of cases. For example, there's no need to fulsh and close the writer\nyourself; those are just redundant, wasteful operations (which have the side\neffect to make TC use the chunked encoding although it could have calculated the\ncontent-length automatically, and save extra processing on both the server and\nthe client).\n\nAnyway, I think Coyote's commit behavior is correct in 4.1.24."}, {"count": 3, "attachment_id": null, "creator": "jks@iname.com", "text": "This bug appears in tomcat 5.0.19", "id": 54047, "time": "2004-03-16T04:43:37Z", "bug_id": 17014, "creation_time": "2004-03-16T04:43:37Z", "tags": [], "is_private": false}, {"count": 4, "tags": [], "bug_id": 17014, "attachment_id": null, "text": "Hmmm. No.", "id": 54050, "time": "2004-03-16T08:16:58Z", "creator": "remm@apache.org", "creation_time": "2004-03-16T08:16:58Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 17014, "attachment_id": null, "text": "I just ran into this problem myself. I've been working on integrating my own\nsocket factory into the coyote connecter code (a socket factory that produces\nsecure sockets) and this socket factory produces sockets that do not flush on\nclose so I never get any replies. I don't think that socket.close() can be\nassumed to flush the output stream (at least the javadoc doesn't say so) and\nshutdownOutput() or flush() are never called. I think that this line in\norg.apache.coyote.http11.Http11Protocol:\n\n                // recycle kernel sockets ASAP\n                try { if (socket != null) socket.close (); }\n\nshould be changed to either include a call to socket.shutdownOutput() or\nout.flush() before the close.\n\n/Sam", "id": 64204, "time": "2004-09-24T22:44:43Z", "creator": "meder@mcs.anl.gov", "creation_time": "2004-09-24T22:44:43Z", "is_private": false}, {"count": 6, "tags": [], "bug_id": 17014, "attachment_id": null, "is_private": false, "id": 64209, "time": "2004-09-25T05:23:38Z", "creator": "remm@apache.org", "creation_time": "2004-09-25T05:23:38Z", "text": "All the other streams and IO objects flush. Please do not reopen this report."}, {"count": 7, "tags": [], "bug_id": 17014, "text": "Can you tell me what the problem is with at least calling\nsocket.shutdownOutput() before closing? \nYou have to agree that you are making a assumption about implementations that is\nnot stated in the interface specification.\n\n/Sam", "id": 64212, "time": "2004-09-25T12:12:55Z", "creator": "meder@mcs.anl.gov", "creation_time": "2004-09-25T12:12:55Z", "is_private": false, "attachment_id": null}]