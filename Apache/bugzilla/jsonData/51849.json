[{"count": 0, "tags": [], "creator": "cbvarun@yahoo.com", "text": "I am hitting an exception while trying to load the log4j configuration from a URL whose base is an ipv6 address. \n\nI debugged this issue for a while but could not find a workaround.\nI am confused now (where to file a bug - java or apache) because even though the code flow is started from LogManager the real issue could be in com.sun.org.apache.xerces.internal.impl.XMLEntityManager::private static String expandSystemIdStrictOff(String systemId, String baseSystemId).\n\n\nimport org.apache.log4j.LogManager;\nimport org.apache.log4j.spi.DefaultRepositorySelector;\n\npublic class TestLog4j\n{\n    public static void main(String[] aInCommandLineParameters)\n    {\n        LogManager.setRepositorySelector(new DefaultRepositorySelector(LogManager.getLoggerRepository()), \"test\");\n        LogManager.resetConfiguration();\n    }\n}\n\n/**\n\tjavac -classpath C:\\Projects\\trunk\\perfocarta\\centrale\\libs\\log4j\\log4j-1.2.15.jar C:\\Users\\varbalak\\Desktop\\TestLog4j.java\n\tjava  -classpath C:\\Projects\\trunk\\perfocarta\\centrale\\libs\\log4j\\log4j-1.2.15.jar;C:\\Users\\varbalak\\Desktop -Dlog4j.configuration=\"https://[fe80::92]:443/ucsm/log4j.xml\" C:\\Users\\varbalak\\Desktop\\TestLog4j\n\n\n\tlog4j:ERROR Could not parse url [https://[fe80::92]:443/ucsm/log4j.xml].\n\tjava.net.MalformedURLException: For input string: \":92%5D:443\"\n\t        at java.net.URL.<init>(URL.java:601)\n\t        at java.net.URL.<init>(URL.java:464)\n\t        at java.net.URL.<init>(URL.java:413)\n\t        at com.sun.org.apache.xerces.internal.impl.XMLEntityManager.setupCurrentEntity(XMLEntityManager.java:650)\n\t        at com.sun.org.apache.xerces.internal.impl.XMLVersionDetector.determineDocVersion(XMLVersionDetector.java:186)\n\t        at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:772)\n\t        at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:737)\n\t        at com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:119)\n\t        at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(DOMParser.java:235)\n\t        at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(DocumentBuilderImpl.java:284)\n\t        at javax.xml.parsers.DocumentBuilder.parse(DocumentBuilder.java:180)\n\t        at org.apache.log4j.xml.DOMConfigurator$2.parse(DOMConfigurator.java:690)\n\t        at org.apache.log4j.xml.DOMConfigurator.doConfigure(DOMConfigurator.java:789)\n\t        at org.apache.log4j.xml.DOMConfigurator.doConfigure(DOMConfigurator.java:696)\n\t        at org.apache.log4j.helpers.OptionConverter.selectAndConfigure(OptionConverter.java:471)\n\t        at org.apache.log4j.LogManager.<clinit>(LogManager.java:125)\n\t        at TestLog4j.main(TestLog4j.java:8)\n\tPress any key to continue . . .\n\n*/", "id": 149516, "time": "2011-09-20T09:03:23Z", "bug_id": 51849, "creation_time": "2011-09-20T09:03:23Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "creator": "ggregory@seagullsw.com", "text": "What version of Java are you using? \"java -version\"", "id": 149523, "time": "2011-09-20T12:13:19Z", "bug_id": 51849, "creation_time": "2011-09-20T12:13:19Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "creator": "cbvarun@yahoo.com", "is_private": false, "text": "(In reply to comment #1)\n> What version of Java are you using? \"java -version\"\n\njava version \"1.6.0_18\"\nJava(TM) SE Runtime Environment (build 1.6.0_18-b07)\nJava HotSpot(TM) Server VM (build 16.0-b13, mixed mode)", "id": 149525, "time": "2011-09-20T13:22:25Z", "bug_id": 51849, "creation_time": "2011-09-20T13:22:25Z", "attachment_id": null}, {"count": 3, "tags": [], "creator": "ggregory@seagullsw.com", "text": "This works for me:\n\n    @Test\n    public void test() throws MalformedURLException {\n        new URL(\"https://[fe80::92]:443/ucsm/log4j.xml\");\n    }\n\nwith:\n\nJava version: 1.6.0_24, vendor: Sun Microsystems Inc.\nJava home: C:\\Program Files\\Java\\jdk1.6.0_24\\jre\nDefault locale: en_US, platform encoding: Cp1252\nOS name: \"windows 7\", version: \"6.1\", arch: \"amd64\", family: \"windows\"\n\nMake sure you are calling the JRE you really think you are. You could also test with the latest JRE.", "id": 149526, "time": "2011-09-20T16:06:08Z", "bug_id": 51849, "creation_time": "2011-09-20T16:06:08Z", "is_private": false, "attachment_id": null}, {"count": 4, "attachment_id": null, "bug_id": 51849, "is_private": false, "id": 149528, "time": "2011-09-20T16:52:13Z", "creator": "cbvarun@yahoo.com", "creation_time": "2011-09-20T16:52:13Z", "tags": [], "text": "(In reply to comment #3)\n> This works for me:\n> \n>     @Test\n>     public void test() throws MalformedURLException {\n>         new URL(\"https://[fe80::92]:443/ucsm/log4j.xml\");\n>     }\n> \n> with:\n> \n> Java version: 1.6.0_24, vendor: Sun Microsystems Inc.\n> Java home: C:\\Program Files\\Java\\jdk1.6.0_24\\jre\n> Default locale: en_US, platform encoding: Cp1252\n> OS name: \"windows 7\", version: \"6.1\", arch: \"amd64\", family: \"windows\"\n> \n> Make sure you are calling the JRE you really think you are. You could also test\n> with the latest JRE.\n\nAs I have mentioned in my bug report,\n\ncom.sun.org.apache.xerces.internal.impl.XMLEntityManager::private static String\nexpandSystemIdStrictOff(String systemId, String baseSystemId) removes both left and right square brackets and replaces those with %5B and %5D respectively at some point of time. This happens during the initialization. So the string passed to URL would be \"https://%5Bfe80::92%5D:443/ucsm/log4j.xml\" and this fails."}, {"count": 5, "tags": [], "bug_id": 51849, "text": "Ah, right, sorry!\n\nHow about testing with the latest version of Xerces instead of the old one bundled in the JRE?", "id": 149532, "time": "2011-09-20T18:45:19Z", "creator": "ggregory@seagullsw.com", "creation_time": "2011-09-20T18:45:19Z", "is_private": false, "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 51849, "is_private": false, "count": 6, "id": 149533, "time": "2011-09-20T19:01:28Z", "creator": "ggregory@seagullsw.com", "creation_time": "2011-09-20T19:01:28Z", "text": "FYI, here is the implementation of the method in Xerces 2.11.0:\n\n    private static String expandSystemIdStrictOff(String systemId, String baseSystemId)\n        throws URI.MalformedURIException {\n        \n        URI systemURI = new URI(systemId, true);\n        // If it's already an absolute one, return it\n        if (systemURI.isAbsoluteURI()) {\n            if (systemURI.getScheme().length() > 1) {\n                return systemId;\n            }\n            /** \n             * If the scheme's length is only one character,\n             * it's likely that this was intended as a file\n             * path. Fixing this up in expandSystemId to\n             * maintain backwards compatibility.\n             */\n            throw new URI.MalformedURIException();\n        }\n        \n        // If there isn't a base URI, use the working directory\n        URI baseURI = null;\n        if (baseSystemId == null || baseSystemId.length() == 0) {\n            baseURI = getUserDir();\n        }\n        else {\n            baseURI = new URI(baseSystemId, true);\n            if (!baseURI.isAbsoluteURI()) {\n                // assume \"base\" is also a relative uri\n                baseURI.absolutize(getUserDir());\n            }\n        }\n        \n        // absolutize the system identifier using the base URI\n        systemURI.absolutize(baseURI);\n        \n        // return the string rep of the new uri (an absolute one)\n        return systemURI.toString();\n        \n        // if any exception is thrown, it'll get thrown to the caller.\n        \n    } // expandSystemIdStrictOff(String,String):String"}, {"count": 7, "tags": [], "bug_id": 51849, "text": "(In reply to comment #6)\n> FYI, here is the implementation of the method in Xerces 2.11.0:\n> \n>     private static String expandSystemIdStrictOff(String systemId, String\n> baseSystemId)\n>         throws URI.MalformedURIException {\n> \n>         URI systemURI = new URI(systemId, true);\n>         // If it's already an absolute one, return it\n>         if (systemURI.isAbsoluteURI()) {\n>             if (systemURI.getScheme().length() > 1) {\n>                 return systemId;\n>             }\n>             /** \n>              * If the scheme's length is only one character,\n>              * it's likely that this was intended as a file\n>              * path. Fixing this up in expandSystemId to\n>              * maintain backwards compatibility.\n>              */\n>             throw new URI.MalformedURIException();\n>         }\n> \n>         // If there isn't a base URI, use the working directory\n>         URI baseURI = null;\n>         if (baseSystemId == null || baseSystemId.length() == 0) {\n>             baseURI = getUserDir();\n>         }\n>         else {\n>             baseURI = new URI(baseSystemId, true);\n>             if (!baseURI.isAbsoluteURI()) {\n>                 // assume \"base\" is also a relative uri\n>                 baseURI.absolutize(getUserDir());\n>             }\n>         }\n> \n>         // absolutize the system identifier using the base URI\n>         systemURI.absolutize(baseURI);\n> \n>         // return the string rep of the new uri (an absolute one)\n>         return systemURI.toString();\n> \n>         // if any exception is thrown, it'll get thrown to the caller.\n> \n>     } // expandSystemIdStrictOff(String,String):String\n\n\n\n1) I downloaded Xerces 2.11.0 and added to my application classpath\n2) What I observed was, neither the log4j initialization nor my application started with log4j.configuration=\"https://[fe80::92]:443/ucsm/log4j.xml\"\n3) Everything was fine when log4j.configuration=\"https://<ipv4 address>:80/ucsm/log4j.xml\"\n\nI will debug more and let you know once I have something concrete. Thanks for your support.", "id": 149566, "time": "2011-09-21T06:16:10Z", "creator": "cbvarun@yahoo.com", "creation_time": "2011-09-21T06:16:10Z", "is_private": false, "attachment_id": null}, {"count": 8, "tags": [], "creator": "cbvarun@yahoo.com", "text": "(In reply to comment #7)\n> (In reply to comment #6)\n> > FYI, here is the implementation of the method in Xerces 2.11.0:\n> > \n> >     private static String expandSystemIdStrictOff(String systemId, String\n> > baseSystemId)\n> >         throws URI.MalformedURIException {\n> > \n> >         URI systemURI = new URI(systemId, true);\n> >         // If it's already an absolute one, return it\n> >         if (systemURI.isAbsoluteURI()) {\n> >             if (systemURI.getScheme().length() > 1) {\n> >                 return systemId;\n> >             }\n> >             /** \n> >              * If the scheme's length is only one character,\n> >              * it's likely that this was intended as a file\n> >              * path. Fixing this up in expandSystemId to\n> >              * maintain backwards compatibility.\n> >              */\n> >             throw new URI.MalformedURIException();\n> >         }\n> > \n> >         // If there isn't a base URI, use the working directory\n> >         URI baseURI = null;\n> >         if (baseSystemId == null || baseSystemId.length() == 0) {\n> >             baseURI = getUserDir();\n> >         }\n> >         else {\n> >             baseURI = new URI(baseSystemId, true);\n> >             if (!baseURI.isAbsoluteURI()) {\n> >                 // assume \"base\" is also a relative uri\n> >                 baseURI.absolutize(getUserDir());\n> >             }\n> >         }\n> > \n> >         // absolutize the system identifier using the base URI\n> >         systemURI.absolutize(baseURI);\n> > \n> >         // return the string rep of the new uri (an absolute one)\n> >         return systemURI.toString();\n> > \n> >         // if any exception is thrown, it'll get thrown to the caller.\n> > \n> >     } // expandSystemIdStrictOff(String,String):String\n> \n> \n> \n> 1) I downloaded Xerces 2.11.0 and added to my application classpath\n> 2) What I observed was, neither the log4j initialization nor my application\n> started with log4j.configuration=\"https://[fe80::92]:443/ucsm/log4j.xml\"\n> 3) Everything was fine when log4j.configuration=\"https://<ipv4\n> address>:80/ucsm/log4j.xml\"\n> \n> I will debug more and let you know once I have something concrete. Thanks for\n> your support.\n\n\nThe URL (ipv6 address part) I was trying to connect was no longer existing when I tried with Xerces 2.11.0. I think something is working now. I do not get the parser error for the URL but there is something wrong with the client side logging. I will explore more.", "id": 149570, "time": "2011-09-21T06:44:47Z", "bug_id": 51849, "creation_time": "2011-09-21T06:44:47Z", "is_private": false, "attachment_id": null}]