[{"count": 0, "attachment_id": null, "bug_id": 10269, "is_private": false, "id": 18629, "time": "2002-06-27T02:37:30Z", "creator": "schneidp@lathanda.de", "creation_time": "2002-06-27T02:37:30Z", "tags": [], "text": "The Repostiroty method\npublic static boolean implementationOf(JavaClass clazz, JavaClass inter);\nIsn't working correctly. Therefore the Cast checks performed in the Pass3b \nverifier are wrong.\nWith this simple program the verifcation fails.\n(tested with jdk1.4.0 W32)\n<code>\nclass A implements B{\n\tstatic C temp;\n\tpublic static void main(String[] args){\n\t\ttemp = new A();\n\t}\n}\ninterface B extends C{\n}\ninterface C{\n}\n</code>\n\nThe reason is simple. Interfaces are checked only directly. Interfaces \ninherited indirectly are forgotten.\n\nThere is another version of this bug, where even direct implemented interfaces \nare not recognized, but i wasn't able to reduce it to a simple example."}, {"count": 1, "tags": [], "bug_id": 10269, "attachment_id": null, "id": 19019, "time": "2002-07-04T21:50:28Z", "creator": "ehaase@inf.fu-berlin.de", "creation_time": "2002-07-04T21:50:28Z", "is_private": false, "text": "This is not a \"simple\" bug. Interfaces implemented directly are NOTforgotten.---------import org.apache.bcel.*;import org.apache.bcel.classfile.*; public class Test{public static void main(String[] args){     JavaClass a = Repository.lookupClass(\"A\");    JavaClass c = Repository.lookupClass(\"B\");    System.out.println(a.implementationOf(c));}}-------This program prints \"true\"; and JavaClass.implementationOf()is what the static Repository methods are mapped to.The original test program lets the VERIFIER fail, it hasa bug in its pass 3b implementation:----------------Pass 3b, method number 0 ['void <init>()']:VERIFIED_REJECTEDConstraint violated in method 'void <init>()':Instruction INVOKESPECIAL constraint violated: The 'objref' item '<UNINITIALIZED OBJECT OF TYPE 'A'>' does not implement 'java.lang.Object' as expected.InstructionHandle:    1: invokespecial[183](3) 1 Execution Frame:Local Variables:0: <UNINITIALIZED OBJECT OF TYPE 'A'>OperandStack:Slots used: 1 MaxStack: 1.<UNINITIALIZED OBJECT OF TYPE 'A'> (Size: 1)Execution flow:   0: aload_0   [InstructionContext]   1: invokespecial 1   [InstructionContext]-----------------Problem is that the JVM spec 4.9.4 mentions UNINITIALIZEDobjects as a special type, and this type indeed does notimplement any interfaces."}, {"count": 2, "tags": [], "bug_id": 10269, "text": "\nJavaClass.instanceOf(JavaClass) is broken.\n\n\n\n*** This bug has been marked as a duplicate of 10490 ***", "id": 19022, "time": "2002-07-04T23:11:40Z", "creator": "ehaase@inf.fu-berlin.de", "creation_time": "2002-07-04T23:11:40Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "creator": "schneidp@lathanda.de", "attachment_id": null, "text": "That's not the complete truth. The reason for this bug can be easily located.\nRepository#getInterfaces\nreplace:\n      if(clazz.isInterface())\n\tvec.addElement(clazz);\n      else if(!s.equals(\"java.lang.Object\"))\n\tqueue.enqueue(lookupClass(s));\nwith:\n      if(clazz.isInterface())\n\tvec.addElement(clazz);\n      if(!s.equals(\"java.lang.Object\"))\n\tqueue.enqueue(lookupClass(s));\n\nand everything will work fine.\nThe reason is simple if an interface extends another interface this interface \nis forgotten. As in the given example B extends C so C will not occure in the \ninterface[] simply because B.superClass will not be added.\n", "id": 19026, "time": "2002-07-05T00:29:16Z", "bug_id": 10269, "creation_time": "2002-07-05T00:29:16Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 10269, "attachment_id": null, "text": "\nI believe the problem is fixed in the current CVS version\n(05-Jul-2002) but it has another problem; see bug 10240.", "id": 19061, "time": "2002-07-05T14:14:14Z", "creator": "ehaase@inf.fu-berlin.de", "creation_time": "2002-07-05T14:14:14Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 10269, "attachment_id": null, "id": 19062, "time": "2002-07-05T14:17:04Z", "creator": "ehaase@inf.fu-berlin.de", "creation_time": "2002-07-05T14:17:04Z", "is_private": false, "text": "Argh, I meant bug 10490 - NOT 10240.\n"}, {"count": 6, "tags": [], "text": "The actual CVS doesn't contain that bug anymore.\nso it will be fixed after 5.0", "attachment_id": null, "id": 19071, "creator": "schneidp@lathanda.de", "time": "2002-07-05T17:23:17Z", "bug_id": 10269, "creation_time": "2002-07-05T17:23:17Z", "is_private": false}]