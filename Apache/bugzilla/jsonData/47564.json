[{"count": 0, "tags": [], "creator": "mgainty@hotmail.com", "attachment_id": null, "id": 129079, "time": "2009-07-23T07:47:54Z", "bug_id": 47564, "creation_time": "2009-07-23T07:47:54Z", "is_private": false, "text": "Apache Tomcat 4.1.0 through 4.1.39, 5.5.0 through 5.5.27, 6.0.0 through 6.0.18, and possibly earlier versions normalizes the target pathname before filtering the query string when using the RequestDispatcher method, which allows remote attackers to bypass intended access restrictions and conduct directory traversal attacks via .. (dot dot) sequences and the WEB-INF directory in a Request.\n\nhttp://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-5515\norg.apache.catalina.core.ApplicationDispatcher.java\n public ApplicationDispatcher\n        (Wrapper wrapper, String requestURI, String servletPath,\n         String pathInfo, String queryString, String name) {\n\n        super();\n\n        // Save all of our configuration parameters\n        this.wrapper = wrapper;\n        this.context = (Context) wrapper.getParent();\n        this.requestURI = requestURI;\n        this.servletPath = servletPath;\n//change\n//        this.pathInfo = pathInfo;\n//to\n       Pattern p = Pattern.compile(\"\\\\..\");\n       Matcher m = p.matcher(pathinfo);\n       if (m.find())\n         System.err.println(\"pathinfo should not contain dot dot\");\n\n      //Checks for pathinfo that start with\n      //WEB-INF and prints a message if it does.\n       p = Pattern.compile(\"WEB-INF\");\n       m = p.matcher(pathinfo);\n       if (m.find()) \n       {\n        System.err.println(\"pathinfo should not contain WEB-INF \");\n       }\n\n//everything in kitchen sink except for .. or WEB-INF\n       p = Pattern.compile(\"[a-zA-Z0-9-[\\\\..][WEB-INF]];\n       m = p.matcher(pathinfo);\n       boolean result = m.find();\n       StringBuffer sb  = new StringBuffer();;\n       while (m.find())\n       {\n            sb.append(m.group());\n       }\n      // Add the last segment of input to the new String\n      m.appendTail(sb);\n\n       this.pathInfo = sb.toString();\n//end mod\n\n        this.queryString = queryString;\n        this.name = name;\n        if (wrapper instanceof StandardWrapper)\n            this.support = ((StandardWrapper) wrapper).getInstanceSupport();\n        else\n            this.support = new InstanceSupport(wrapper);\n\n    }\n\nbeen a while since i worked with regexp so tweaking is appreciated\nMartin Gainty\n23 July 2009"}, {"count": 1, "tags": [], "text": "Bugzilla is not the correct forum for reporting security issues. Please read:\nhttp://tomcat.apache.org/security.html\n\nThis is a known, fixed issue. Again, please read:\nhttp://tomcat.apache.org/security.html\n\nThere is no need to report bugs that have already been fixed.\n\nThe patch proposed above is bad and should not be applied. Users are strongly encouraged to follow the advice in the security advisories to resolve this issue. More information can be found in the Tomcat security pages:\nhttp://tomcat.apache.org/security.html", "is_private": false, "bug_id": 47564, "id": 129085, "time": "2009-07-23T09:27:54Z", "creator": "markt@apache.org", "creation_time": "2009-07-23T09:27:54Z", "attachment_id": null}]