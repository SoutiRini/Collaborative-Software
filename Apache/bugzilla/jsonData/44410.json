[{"count": 0, "tags": [], "bug_id": 44410, "text": "Hello All, \n\nDescription\n-----------\nIf a formula in Excel specifies a data range involving single letters only (i.e.\n\"C:C\" meaning \"all of column D\"), when parsed in POI, this data range is not\nexpanded properly.  But, if the data range is specified as\nLetterNumber:LetterNumber, all works fine with POI.\n\nSteps to Reproduce\n------------------\n1/\nCreate a simple spreadsheet as follows\n     A    B    C\n   ------------------\n1 |    |    | 1  |\n2 |    |    | 2  |\n3 |    |    | 3  |\n4 | ** |    |    |\n5 | %% |    |    |\n\n** contains formula =INDEX(C:C,2,1)\n%% contains formula =SUM(C:C)\n\n2/\nNotice in Excel (2003), cell A4 evaluates to 2 and Cell A5 evaluates to 6.\n\n3/\nParse the Excel file using POI to evaulate cell formulas (i.e. using\nHSSFFormulaEvaluator.CellValue cellValue = evaluator.evaluate(cell); for example)\n\n4/\nOutput for cell A4 shows an exception, output for A5 shows 0.\n\nActual Results\n--------------\nAs stated in 4/ above.\nException is:\n\njava.lang.ArrayIndexOutOfBoundsException: 1\n        at\norg.apache.poi.hssf.record.formula.functions.Index.evaluate(Index.java:83)\n        at\norg.apache.poi.hssf.record.formula.eval.FuncVarEval.evaluate(FuncVarEval.java:43)\n        at\norg.apache.poi.hssf.usermodel.HSSFFormulaEvaluator.internalEvaluate(HSSFFormulaEvaluator.java:395)\n        at\norg.apache.poi.hssf.usermodel.HSSFFormulaEvaluator.evaluate(HSSFFormulaEvaluator.java:203)\n        at ExcelParser2.getCellValue(ExcelParser2.java:71)\n        at ExcelParser2.printWorkSheetTable(ExcelParser2.java:261)\n        at ExcelParser2.main(ExcelParser2.java:293)\n\n\nExpected Results\n----------------\nSame as Excel as stated in 2/ above.\n\nBuild Date & Platform\n---------------------\n2008-02-13 on Windows XP\n\nAdditional Information\n----------------------\n\nIn HSSFFormulaEvaluator.java, method internalEvaluate(), it seems like when\nevaluating \"C:C\", it is translated into \"$C$1:$C$0\".\n\nFor instance, \nLine 422 (for area and 2d area eval) and Line 439 (3d area eval) both show local\nvariable \"row1\" equalling -1 when evaulating, so the subsequent looping through\nthe rows and columns does not execute, hence the 'values' array is never filled.\n\nObviously different formulas (INDEX, SUM) handle this unexpected empty values\narray differently ... \n\nThe same exception occurs for the INDEX formula with ranges such as\n\"=INDEX(B:C)\" (which works okay in Excel 2003).\n\nAt lines HSSFFormulaEvaluator.java:422 and HSSFFormulaEvaluator.java:439 I tried\nadding the code: \n\n// 422:\n// fix for evaluating range \"D:D\" which returns lastRow() of -1 instead of max row\nif ( row1 == -1 )\n{\n  ap.setLastRow((short) (sheet.getLastRowNum()+1));\n  row1 = ap.getLastRow();\n}\n\n// 439:\n// fix for evaluating range \"D:D\" which returns lastRow() of -1 instead of max row\nif ( row1 == -1 )\n{\n  a3dp.setLastRow((short) (sheet.getLastRowNum()+1));\n  row1 = a3dp.getLastRow();\n}\n\nbut that only made the INDEX() function work and the SUM() one fail with an\nException - I clearly don't know conceptually where the change should go. As\nmentioned above, using a fully specified data range such as \"C1:C3\" works fine\nwith both INDEX() and SUM() functions.\n\nAnyways, any help or insights appreciated.\n\nMuch thanks as always,\n\nDave", "id": 113695, "time": "2008-02-13T04:08:09Z", "creator": "dave.webster@virginmedia.co.uk", "creation_time": "2008-02-13T04:08:09Z", "is_private": false, "attachment_id": null}, {"count": 1, "attachment_id": 21516, "creator": "dave.webster@virginmedia.co.uk", "text": "Created attachment 21516\nExcel file showing INDEX and SUM functions failing with single character data range", "id": 113696, "time": "2008-02-13T04:12:22Z", "bug_id": 44410, "creation_time": "2008-02-13T04:12:22Z", "tags": [], "is_private": false}, {"count": 2, "attachment_id": null, "bug_id": 44410, "text": "Fixed in SVN. Now not only does the formula evaluator handle these properly,\ncalling cell.getFormulaString() will also contain the correct formula", "id": 113791, "time": "2008-02-15T05:50:43Z", "creator": "apache@gagravarr.org", "creation_time": "2008-02-15T05:50:43Z", "tags": [], "is_private": false}]