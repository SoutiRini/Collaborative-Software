[{"count": 0, "tags": [], "creator": "zachcalvert@gmail.com", "is_private": false, "text": "If you run a ThreadGroup which hits the same server, same domain, different ports, the cookies generated on Port A (ie Set-Cookie header) will not be sent to port B.\n\nQuote from RFC:\nhttp://tools.ietf.org/html/rfc6265\nSimilarly, cookies for a given host are shared\n   across all the ports on that host, even though the usual \"same-origin\n   policy\" used by web browsers isolates content retrieved via different\n   ports.\nI have tested using IE and FireFox, and the expected behavior of cross-port cookie transfer is supported.\n\nTest method:\nCreate a test thread group with a cookie manager and any configuration will fail (I have tried them all, all behave the same way)\nRun an HTTP GET such as http://remote:10008/get/cookie\nService should set a cookie, such as \nSet-Cookie: test=value;Max-Age=120;Path=/;Version=1\n\nRun another HTTP GET on a different port such as \nhttp://remote:10001/test/me\n\nExpected behavior:\nCookie \"test\" should be provided to the server\n\nActual behavior:\nCookie is not provided to the server", "id": 174329, "time": "2014-04-07T18:32:23Z", "bug_id": 56358, "creation_time": "2014-04-07T18:32:23Z", "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 56358, "attachment_id": 31486, "id": 174330, "time": "2014-04-07T20:10:46Z", "creator": "p.mouawad@ubik-ingenierie.com", "creation_time": "2014-04-07T20:10:46Z", "is_private": false, "text": "Created attachment 31486\nTest Plan showing there is no bug\n\nHello,\nTo use this plan start the 2 mirror servers .\nRun plan, you will see that Fist Request to localhost:8082 contains cookie."}, {"count": 2, "tags": [], "bug_id": 56358, "text": "What value is the SetCookie coming back with?\n\nIt will work for \"/\", but not for anything where the port and path are specified, and this may be the difference.  I was under the impression the port was the problem, but perhaps it is because I'm setting the path.  \n\nI'll try to specify the request ins and outs that I'm currently dealing with.\n\nRequest 1:\nGET http://rhel55:10008/custom/simulated/1.0/sso?generate=true\n\nResponse:\nResponse headers:\nHTTP/1.1 200 OK\nContent-Type: text/xml\nSet-Cookie: simulatedCookie=Tk9URk9SUFJPRFVDVElPTjEzOTY5MDE3NDE5MzF8MTIzNDU2Nzg5MA==;Max-Age=120;Path=/ssc;Version=1\n\nRequest 2:\nPOST http://rhel55:10001/ssc/auth/1.0/validate\n\nThe 2nd request matches the same domain, with the \"/ssc\" path as specified in the cookie.  Again, this works for browsers IE, FireFox, and Chrome, so I believe there is a problem to JMeter.\n\nI can open a browser to \nhttp://rhel55:10008/custom/simulated/1.0/sso?generate=true\nand then open the same browser to GET\nhttp://rhel55:10001/ssc/auth/1.0/validate\nand the cookie is sent. \n\nMy differences in my actual code as listed above are \na) the Path is specified, max-age is specified, and version is specified.\nb) The path is a full path (I specify /ssc but the next request path is /ssc/auth/1.0/validate)\nc) The second request is a POST, not a get in the jmeter script", "id": 174332, "time": "2014-04-07T20:21:11Z", "creator": "zachcalvert@gmail.com", "creation_time": "2014-04-07T20:21:11Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "creator": "zachcalvert@gmail.com", "attachment_id": null, "is_private": false, "id": 174333, "time": "2014-04-07T20:34:40Z", "bug_id": 56358, "creation_time": "2014-04-07T20:34:40Z", "text": "Also, could this be because the domain isn't specified in the result cookie?"}, {"count": 4, "tags": [], "bug_id": 56358, "text": "Possibly, try changing this in user.properties:\n# CookieManager behaviour - check received cookies are valid before storing them?\n# Default is true. Use false to revert to previous behaviour\nCookieManager.check.cookies=false", "id": 174335, "time": "2014-04-07T20:38:20Z", "creator": "p.mouawad@ubik-ingenierie.com", "creation_time": "2014-04-07T20:38:20Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 56358, "text": "The more I play with it, the more I do believe this is more a problem with the path pattern matching than with the port.\n\nGET:\nhttp://rhel55:10008/custom/simulated/1.0/sso?generate=true\nresponse:\nSet-Cookie: simulatedSsoCookie=Tk9URk9SUFJPRFVDVElPTjEzOTY5MDI5NTMyMzN8MTIzNDU2Nzg5MA==;Max-Age=1;Path=/ssc;Version=1\n\nGET: http://rhel55:10008/ssc\n\nno cookie is delivered as part of the request\n\n\"/ssc\" in the 2nd request should match the \"Path=/ssc\" listed in the first request.", "id": 174336, "time": "2014-04-07T20:40:26Z", "creator": "zachcalvert@gmail.com", "creation_time": "2014-04-07T20:40:26Z", "is_private": false, "attachment_id": null}, {"id": 174337, "tags": [], "bug_id": 56358, "attachment_id": null, "count": 6, "text": "I tried your \n\n# CookieManager behaviour - check received cookies are valid before storing them?\n# Default is true. Use false to revert to previous behaviour\nCookieManager.check.cookies=false\n\n\nto no avail", "time": "2014-04-07T20:40:48Z", "creator": "zachcalvert@gmail.com", "creation_time": "2014-04-07T20:40:48Z", "is_private": false}, {"count": 7, "tags": [], "creator": "p.mouawad@ubik-ingenierie.com", "is_private": false, "text": "Could you show your Test Plan structure ?", "id": 174338, "time": "2014-04-07T20:45:46Z", "bug_id": 56358, "creation_time": "2014-04-07T20:45:46Z", "attachment_id": null}, {"count": 8, "tags": [], "bug_id": 56358, "attachment_id": null, "text": "The moment you said that I was reading again through the HTTP Cookie Manager docs and saw it required addition to the User Threads, not the Test Plan.  The moment I moved it into the User Threads, it started working correctly.\n\nIn this case, it seems RTFM is an appropriate request.  You are correct, this is an invalid ticket.", "id": 174339, "time": "2014-04-07T20:50:37Z", "creator": "zachcalvert@gmail.com", "creation_time": "2014-04-07T20:50:37Z", "is_private": false}, {"count": 9, "tags": [], "bug_id": 56358, "attachment_id": 31487, "id": 174341, "time": "2014-04-07T20:53:21Z", "creator": "p.mouawad@ubik-ingenierie.com", "creation_time": "2014-04-07T20:53:21Z", "is_private": false, "text": "Created attachment 31487\nUpdated Test plan showing it works fine"}, {"count": 10, "tags": [], "bug_id": 56358, "attachment_id": null, "id": 174342, "time": "2014-04-07T20:53:49Z", "creator": "p.mouawad@ubik-ingenierie.com", "creation_time": "2014-04-07T20:53:49Z", "is_private": false, "text": "Thanks for feedback."}, {"count": 11, "tags": [], "creator": "zachcalvert@gmail.com", "attachment_id": null, "is_private": false, "id": 174343, "time": "2014-04-07T20:58:14Z", "bug_id": 56358, "creation_time": "2014-04-07T20:58:14Z", "text": "*sigh*\nI'm making too many parallel movements and it is causing me to trip up and make a mess of this.  Let's try again.\n\nThe fix was \n# CookieManager behaviour - check received cookies are valid before storing them?\n# Default is true. Use false to revert to previous behaviour\nCookieManager.check.cookies=false\nand it works.  I was working in the wrong jmeter window.\n\nSo now I believe you are correct in that JMeter is treating \nSet-Cookie: simulatedSsoCookie=Tk9URk9SUFJPRFVDVElPTjEzOTY5MDQxMjA3NzN8MTIzNDU2Nzg5MA==;Max-Age=120;Path=/ssc;Version=1\nas an invalid cookie.\n\nBrowsers IE, Chrome, and FireFox treat this cookie as acceptable.\n\nIs the filter killing it because I use Max-Age instead of expires, or is it due to lack of a domain?  I will try playing with both and report back."}, {"count": 12, "tags": [], "creator": "zachcalvert@gmail.com", "text": "Alright, we will try this again.  I have modified my code to make this a bit easier to inspect.  I have put together two test cases and have proven that this is a path matching problem, not a port problem.  Note that the only difference of value in the response is the \"/ssc\" vs \"/\" in the Path of the Set-Cookie.\n\nRequest execution that fails:\nGET http://rhel55:10008/custom/simulated/1.0/sso?generate=true\n\n[no cookies]\n\n\nPOST http://rhel55:10001/ssc/auth/1.0/validate\n\nPOST data:\n\n\n[no cookies]\n\n\nRequest execution that succeeds (in that the POST contains the cookie):\nGET http://rhel55:10008/custom/simulated/1.0/sso?generate=true\n\n[no cookies]\n\nPOST http://rhel55:10001/ssc/auth/1.0/validate\n\nPOST data:\n\n\nCookie Data:\nsimulatedCookie=testing", "id": 174345, "attachment_id": null, "bug_id": 56358, "creation_time": "2014-04-07T21:24:40Z", "time": "2014-04-07T21:24:40Z", "is_private": false}, {"count": 13, "tags": [], "creator": "zachcalvert@gmail.com", "text": "Would help if I actually managed to specify the response.\n\nRequest execution that fails:\nGET http://rhel55:10008/custom/simulated/1.0/sso?generate=true\n\n[no cookies]\n\n\nResponse headers:\nHTTP/1.1 200 OK\nContent-Type: text/xml\nSet-Cookie: simulatedCookie=testing;Domain=rhel55;Path=/ssc;Version=1\nTransfer-Encoding: chunked\nServer: Jetty(7.2.2.v20101205)\n\n\nPOST http://rhel55:10001/ssc/auth/1.0/validate\n\nPOST data:\n\n\n[no cookies]\n\n\nRequest execution that succeeds (in that the POST contains the cookie):\nGET http://rhel55:10008/custom/simulated/1.0/sso?generate=true\n\n[no cookies]\n\nResponse headers:\nHTTP/1.1 200 OK\nContent-Type: text/xml\nSet-Cookie: simulatedCookie=testing;Domain=rhel55;Path=/ssc;Version=1\nTransfer-Encoding: chunked\nServer: Jetty(7.2.2.v20101205)\n\nPOST http://rhel55:10001/ssc/auth/1.0/validate\n\nPOST data:\n\n\nCookie Data:\nsimulatedCookie=testing", "id": 174346, "attachment_id": null, "bug_id": 56358, "creation_time": "2014-04-07T21:26:10Z", "time": "2014-04-07T21:26:10Z", "is_private": false}, {"count": 14, "tags": [], "creator": "zachcalvert@gmail.com", "attachment_id": null, "is_private": false, "id": 174347, "time": "2014-04-07T21:29:00Z", "bug_id": 56358, "creation_time": "2014-04-07T21:29:00Z", "text": "And the mistakes are just piling on.  Sorry, I'm working on a VM tied to a VPN and my copy paste is functioning only sometimes.\n\nThat should read that the first GET, in the failing request, results in \nResponse headers:\nHTTP/1.1 200 OK\nContent-Type: text/xml\nSet-Cookie: simulatedCookie=testing;Domain=rhel55;Path=/ssc;Version=1\nTransfer-Encoding: chunked\nServer: Jetty(7.2.2.v20101205)\n\nThe second GET that sets the cookie in the successful request results in\nResponse headers:\nHTTP/1.1 200 OK\nContent-Type: text/xml\nSet-Cookie: simulatedCookie=testing;Domain=rhel55;Path=/;Version=1\nTransfer-Encoding: chunked\nServer: Jetty(7.2.2.v20101205)\n\n\nThe only change is the Path value.  The request will provide the cookie when the Path is \"/\" but not when it is \"/ssc\".  Note the request that will have/not have the cookie is consistent to \nPOST http://rhel55:10001/ssc/auth/1.0/validate"}, {"count": 15, "tags": [], "creator": "zachcalvert@gmail.com", "text": "In other words, you should be able to update your code to where it will provide a \"/ssc\" in the path portion of the Set-Cookie, and your next request to localhost:8181/ssc/test/this/path should result in a cookie being sent, but it will not.\n\nIf I may ask, so I can set up an environment using your code base, what are you using to process the requests?", "id": 174348, "attachment_id": null, "bug_id": 56358, "creation_time": "2014-04-07T21:33:55Z", "time": "2014-04-07T21:33:55Z", "is_private": false}, {"count": 16, "tags": [], "bug_id": 56358, "text": "In addition, I have confirmed (just to be sure)\nCookieManager.check.cookies=false\nflips the behavior.  So \"CookieManager.check.cookies\" doesn't seem to think that having \"Path=/ssc\" makes the cookie valid, but having \"Path=/\" is acceptable.", "id": 174349, "time": "2014-04-07T21:44:16Z", "creator": "zachcalvert@gmail.com", "creation_time": "2014-04-07T21:44:16Z", "is_private": false, "attachment_id": null}, {"count": 17, "tags": [], "bug_id": 56358, "text": "Alright, went home and burned some of my personal time to figure this one out.  I will be attaching a WAR file, some code, and a jmeter script shortly.  \n\nFirst, make sure you have commented out your cookie manager config:\n# CookieManager.check.cookies=false\n\nKey elements:\nThe request to get the cookie must be on a path not corresponding to the cookie.  \nie request to http://localhost:8080/cookie/get, and the Set-Cookie should have the path set like /ssc,  something NOT related to the request GET query string.\n\nThe next Jmeter request http://localhost:8080/ssc will not provide the cookie.  Browsers IE, FireFox, and Chrome support an unrelated path setting the cookie for another path.  I believe this is where the \"check.cookies\" filter comes into play. What I mean by this is JMeter will not allow http://localhost:8080/cookie to set a cookie with \"/ssc\" as the path.\n\nSo, example request sequence:\nGET http://localhost:8080/ssc/somepath/cookie/test?cookieName=test&age=1&path=/cookie&version=1&value=sampleValue\nResponse cookie:\nSet-Cookie: test=sampleValue;Max-Age=1;Path=/cookie;Version=1\n\nNext:\nPOST http://localhost:8081/cookie/test\nThis SHOULD have the cookie, but it will not.  I will attach my WAR, my WAR code, and my jmeter script.", "id": 174354, "time": "2014-04-08T03:07:36Z", "creator": "zachcalvert@gmail.com", "creation_time": "2014-04-08T03:07:36Z", "is_private": false, "attachment_id": null}, {"count": 18, "tags": [], "creator": "zachcalvert@gmail.com", "text": "Alright, went home and burned some of my personal time to figure this one out.  I will be attaching a WAR file, some code, and a jmeter script shortly.  \n\nFirst, make sure you have commented out your cookie manager config:\n# CookieManager.check.cookies=false\n\nKey elements:\nThe request to get the cookie must be on a path not corresponding to the cookie.  \nie request to http://localhost:8080/cookie/get, and the Set-Cookie should have the path set like /ssc,  something NOT related to the request GET query string.\n\nThe next Jmeter request http://localhost:8080/ssc will not provide the cookie.  Browsers IE, FireFox, and Chrome support an unrelated path setting the cookie for another path.  I believe this is where the \"check.cookies\" filter comes into play. What I mean by this is JMeter will not allow http://localhost:8080/cookie to set a cookie with \"/ssc\" as the path.\n\nSo, example request sequence:\nGET http://localhost:8080/ssc/somepath/cookie/test?cookieName=test&age=1&path=/cookie&version=1&value=sampleValue\nResponse cookie:\nSet-Cookie: test=sampleValue;Max-Age=1;Path=/cookie;Version=1\n\nNext:\nPOST http://localhost:8081/cookie/test\nThis SHOULD have the cookie, but it will not.  I will attach my WAR, my WAR code, and my jmeter script.", "id": 174355, "attachment_id": null, "bug_id": 56358, "creation_time": "2014-04-08T03:07:46Z", "time": "2014-04-08T03:07:46Z", "is_private": false}, {"count": 19, "tags": [], "bug_id": 56358, "attachment_id": 31488, "id": 174356, "time": "2014-04-08T03:10:17Z", "creator": "zachcalvert@gmail.com", "creation_time": "2014-04-08T03:10:17Z", "is_private": false, "text": "Created attachment 31488\nThe webapp that supports a servlet on path /ssc/* and /cookie/*\n\nThis WAR file can be deployed on any servlet service.  Note this was built using a JDK 1.6, so it should function on 6/7/8 JDKs."}, {"count": 20, "tags": [], "bug_id": 56358, "text": "Created attachment 31489\nJmeter script showing the problem\n\nRun this script against the previously attached WAR.  The second execution, POST labeled Show broken for /cookie as Path, should have the cookie as part of the request body.  It will not.", "id": 174357, "time": "2014-04-08T03:11:47Z", "creator": "zachcalvert@gmail.com", "creation_time": "2014-04-08T03:11:47Z", "is_private": false, "attachment_id": 31489}, {"count": 21, "tags": [], "bug_id": 56358, "text": "Created attachment 31490\nSource code for creating WAR file\n\nZip file of the source code.  Can be built by unzipping and running \nmvn clean install\nOutput will be in the target directory, webapp.war", "id": 174358, "time": "2014-04-08T03:12:58Z", "creator": "zachcalvert@gmail.com", "creation_time": "2014-04-08T03:12:58Z", "is_private": false, "attachment_id": 31490}, {"count": 22, "tags": [], "creator": "p.mouawad@ubik-ingenierie.com", "text": "Could you confirm you use Compatibility policy for CookieManager ?\nAlso which implementation of CookieHandler do you use ?\nThanks", "id": 174383, "attachment_id": null, "bug_id": 56358, "creation_time": "2014-04-08T21:11:13Z", "time": "2014-04-08T21:11:13Z", "is_private": false}, {"count": 23, "tags": [], "bug_id": 56358, "attachment_id": null, "id": 174384, "time": "2014-04-08T21:13:01Z", "creator": "zachcalvert@gmail.com", "creation_time": "2014-04-08T21:13:01Z", "is_private": false, "text": "I attached my example.jmx file, you should be able to see everything I have configured.\n\nI used Cookie Policy: \"Compatibility\" and Implementation: \"HC4CookieHandler\""}, {"count": 24, "tags": [], "bug_id": 56358, "attachment_id": null, "id": 175444, "time": "2014-05-25T20:14:36Z", "creator": "p.mouawad@ubik-ingenierie.com", "creation_time": "2014-05-25T20:14:36Z", "is_private": false, "text": "See:\nhttp://mail-archives.apache.org/mod_mbox/jmeter-dev/201404.mbox/%3C1398174351.7661.9.camel%40ubuntu%3E"}, {"count": 25, "tags": [], "bug_id": 56358, "text": "Changing to enhancement as it is possible currently to workaround this as described below:\nSet CookieManager.check.cookies=false\n\nAls as per Oleg answer, we need the fix in HTTPClient.", "id": 175445, "time": "2014-05-25T20:16:21Z", "creator": "p.mouawad@ubik-ingenierie.com", "creation_time": "2014-05-25T20:16:21Z", "is_private": false, "attachment_id": null}, {"count": 26, "tags": [], "bug_id": 56358, "text": "Bug fixed within Bug 57319\n\nAdded JUNIT Test case for it.\nAuthor: pmouawad\nDate: Sun Dec 27 21:12:04 2015\nNew Revision: 1721846\n\nURL: http://svn.apache.org/viewvc?rev=1721846&view=rev\nLog:\nBug 56358 - Cookie manager supports cross port cookies and RFC6265\nBugzilla Id: 56358\n\nModified:\n    jmeter/trunk/test/src/org/apache/jmeter/protocol/http/control/TestCookieManager.java\n    jmeter/trunk/xdocs/changes.xml", "id": 187155, "time": "2015-12-27T21:12:42Z", "creator": "p.mouawad@ubik-ingenierie.com", "creation_time": "2015-12-27T21:12:42Z", "is_private": false, "attachment_id": null}]