[{"count": 0, "tags": [], "bug_id": 24325, "text": "Currently, the complete apr_reslist source is surrounded by an #if\nAPR_HAS_THREADS, thus making it impossible to use resource lists whenever APR\ndoesn't support threads (which unfortunatly includes FreeBSD).\n\nAdmittedly I'm pretty unsure if this issue should be addressed in the product's\nsource, apr_reslist or maybe even both.\n\nIt's main use is surely in a threaded environment, however I guess there might\nbe cases when a resource list could be useful in a non-threaded environment, too\n(although I cannot come up with an example right now).\nSo, instead of excluding the complete apr_reslist, I'd suggest to limit the #if\nAPR_HAS_THREADS sections to those lines that actually make use of thread locks.\n\nHowever, if you think this doesn't belong into apr_reslist, I'd suggest to at\nleast place an \n\n+  #else\n+  #error \"apr_reslist doesn't support non-threaded environments\"\n   #endif /* APR_HAS_THREADS */\n\nat the end of apr_reslist.h. The compiler's error messages aren't very clear and\neven seem to vary from platform to platfrom, making it hard to find the source\nof a problem on a FreeBSD (i.e. no threads) machine if you only have Linux (i.e.\nthreads) at hand. Short: Would have saved me a few hours :-)", "id": 46617, "time": "2003-11-01T16:50:58Z", "creator": "st@kino-fahrplan.de", "creation_time": "2003-11-01T16:50:58Z", "is_private": false, "attachment_id": null}, {"count": 1, "attachment_id": null, "bug_id": 24325, "text": "Threads are now enabled by default for FreeBSD.(fixing your problem case)\n\nI agree it would be nice to enable reslist for non-threaded enviroments, but it\nwould take some reworking of the core functions. apr_reslist works fine in *non*\nthreaded places like the prefork MPM, it just requires some pthread fuctions in\nits current design.", "id": 59599, "time": "2004-06-19T16:51:38Z", "creator": "chip@force-elite.com", "creation_time": "2004-06-19T16:51:38Z", "tags": [], "is_private": false}, {"text": "Well, even if reslist works fine in a non-threaded mpm, it still can't possibly\nbe used in its current state in a !APR_HAS_THREADS situation, so is there any\nharm in adding the #error as suggested and making that explicit?\n\nIf someone later wants to reimplement parts of it without the use of threads\nthat's fine, we can change it then, but for now it's kind of lame to just remove\nthe symbols from the header in that case.", "tags": [], "creator": "rooneg@electricjellyfish.net", "is_private": false, "count": 2, "id": 67154, "time": "2004-11-18T17:25:03Z", "bug_id": 24325, "creation_time": "2004-11-18T17:25:03Z", "attachment_id": null}, {"count": 3, "tags": [], "text": "Mass reassign the 44 open apr-bugs to apr bug list", "is_private": false, "bug_id": 24325, "id": 93833, "time": "2006-09-19T19:54:37Z", "creator": "wrowe@apache.org", "creation_time": "2006-09-19T19:54:37Z", "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 24325, "text": "Would the right approach be to simply make apr_reslist_create() return\nAPR_ENOTIMPL on a non-threaded build? It seems to make more sense\napr wide and for an application which might also take a hint from\nAPR_HAS_THREADS at build time.\n", "id": 104936, "time": "2007-06-29T16:40:15Z", "creator": "davi@apache.org", "creation_time": "2007-06-29T16:40:15Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 24325, "is_private": false, "id": 119001, "creation_time": "2008-07-24T16:47:45Z", "time": "2008-07-24T16:47:45Z", "creator": "bojan@rexursive.com", "text": "I think we should close this bug with WONTFIX for the following reasons:\n\n1. If we add:\n\n+  #else\n+  #error \"apr_reslist doesn't support non-threaded environments\"\n\nExisting software that correctly checks APR_HAS_THREADS in the code will fail compilation, because it will now error on apr_reslist.h inclusion.\n\n2. I'm not sure what the point of reslist would be (as implemented) when there is no more than one thread - you can simply store that object into a global variable (or a hash table, ring etc. if you have more than one). The pattern in the code should be:\n\n#if APR_HAS_THREADS\n  do something with reslist\n#else\n  do something with global variable holding the resource\n#endif", "attachment_id": null}, {"count": 6, "tags": [], "bug_id": 24325, "attachment_id": null, "id": 119010, "creation_time": "2008-07-25T01:11:57Z", "time": "2008-07-25T01:11:57Z", "creator": "st@kino-fahrplan.de", "text": "> +  #error \"apr_reslist doesn't support non-threaded environments\"\n>\n> Existing software that correctly checks APR_HAS_THREADS in the code will fail\n> compilation, because it will now error on apr_reslist.h inclusion.\n\nWell, #warning could still be used instead of #error - no harm done and still some level of exact information. As I wrote, I only came up with this report because I didn't know that [name your favourite unknown OS here] didn't support threads, and the compiler messages didn't really point me in the right direction.\n\nBut appart from that: Shouldn't source that checks for APR_HAS_THREADS avoid #including apr_reslist.h in the first place instead of including but not using? At least that's what I'd call 100% correct usage of APR_HAS_THREADS. So, if they don't include, they won't get an error message. \nFor those only 99% correct adding a conditional block around #include takes just a few seconds, and I can assure you that little message would be greatly appreciated by less experienced developers who have to remotely debug their stuff with the help of a user who has almost no idea about programming.", "is_private": false}, {"count": 7, "tags": [], "creator": "bojan@rexursive.com", "is_private": false, "id": 119035, "attachment_id": null, "bug_id": 24325, "creation_time": "2008-07-25T15:23:04Z", "time": "2008-07-25T15:23:04Z", "text": "Our versioning rules, that are defined here:\n\nhttp://apr.apache.org/versioning.html#source\n\nDo not permit us to change the behaviour so that people have to surround inclusion of that header with an #if. Not until the major version change, anyway.\n\nWe could emit a warning, but then we'd pollute the compile of people that are correctly using the whole thing. For instance, perfectly good use of reslist in httpd would start emitting warnings out of nowhere.\n\nAs I wrote earlier, there is no point using reslist when there are no threads. And that's what APR_HAS_THREADS is for."}, {"count": 8, "tags": [], "creator": "st@kino-fahrplan.de", "attachment_id": null, "id": 119039, "creation_time": "2008-07-26T15:51:19Z", "time": "2008-07-26T15:51:19Z", "bug_id": 24325, "text": "Guess I should make something clear: This suggestion is, at it's heart, _not_ about \"using reslist when there are no threads\", it's about preventing people from (accidentally) doing so - and running into cryptic compiler errors.\nThe only reason I brought up enabling apr_reslist in a non-threaded environment was to get a straight-forward interface, so the developer doesn't need to care about OS details; if no threads, apr_reslist transparently drops all the mumbo-jumbo. But I'm fine with a simple note, too, no need to argue about apr_reslist's use, or the lack thereof, without threads.\n\nNow, I do see that #error causes more harm than good, yet, and ironically, by claiming that those including apr_reslist even though there's no thread support might be annoyed even by a short #warning, you're now actually defending what you say should not be done in the first place.\n\nI'd still say there should be a warning in order to push good coding style, and it wouldn't come out of nowhere if written clearly (that's the whole idea anyway, to make something clear), but do as you believe.\n", "is_private": false}, {"count": 9, "tags": [], "bug_id": 24325, "is_private": false, "text": "> The only reason I brought up enabling apr_reslist in a non-threaded environment was to get a straight-forward interface, so the developer doesn't need to care about OS details; if no threads, apr_reslist transparently drops all the mumbo-jumbo.\n\nThat's what I've been trying to explain - in its current implementation reslist cannot do that (and I personally don't see why it should). It is up to everyone using reslist to provide such a thing for the other developers/users (i.e. wrap it up with some code).\n\nSo, if you're building an app, you include apr_reslist.h, because for threaded version of it, you'll need it. Then, inside your code, you have:\n\n#if APR_HAS_THREADS\n  do stuff with reslist\n#else\n  do stuff without reslist\n#endif\n\nUsers or developers using your code can't tell the difference when they are interfacing with it whether they are using reslist or not. It just works.\n\nIf we warn people about inclusion of apr_reslist.h into their code above, we are obviously warning them incorrectly, as they used the right design pattern in their code. No point warning them.\n\nHow about we mention in the docs that reslist can only be used with threads, so that there is no more confusion?", "id": 119040, "time": "2008-07-26T18:12:09Z", "creator": "bojan@rexursive.com", "creation_time": "2008-07-26T18:12:09Z", "attachment_id": null}, {"count": 10, "tags": [], "bug_id": 24325, "attachment_id": 22322, "id": 119051, "creation_time": "2008-07-27T16:59:52Z", "time": "2008-07-27T16:59:52Z", "creator": "bojan@rexursive.com", "text": "Created attachment 22322\nImplement trivial reslist when threads are unavailable", "is_private": false}, {"count": 11, "tags": [], "creator": "bojan@rexursive.com", "attachment_id": null, "id": 119052, "time": "2008-07-27T17:00:34Z", "bug_id": 24325, "creation_time": "2008-07-27T17:00:34Z", "is_private": false, "text": "OK, change of pace. Could you see if this patch does it for you?"}, {"count": 12, "tags": [], "creator": "bojan@rexursive.com", "attachment_id": null, "is_private": false, "id": 119088, "time": "2008-07-28T15:03:50Z", "bug_id": 24325, "creation_time": "2008-07-28T15:03:50Z", "text": "The patch has been committed to trunk. Unfortunately, we cannot backport this to 1.3.x, because we'd break backward binary compatibility."}]