[{"count": 0, "attachment_id": null, "bug_id": 57610, "is_private": false, "id": 181210, "time": "2015-02-20T09:47:08Z", "creator": "stefan.esch@sap.com", "creation_time": "2015-02-20T09:47:08Z", "tags": [], "text": "Hello,\n\nafter upgrading from POI 3.8 to POI 3.10.1 my application is generating XLSX files, which are not accepted completely by Excel 2010 or later. \n\nExcel is reporting inconsistencies in the file and offering, to repair those. Reparing creates messages like \"Repaired Records: Table from /xl/tables/table1.xml part (Table)\". Functionally the XLSX seems to be fine after repair and my application can still consume it with POI library. \n\nAnyway, I am concerned about my users complaining about my application creating inconsistent XLSX file so that I would like to have you providing me guidance on how to get that fixed (either by a patch for POI 3.10.1 or instructions on how to adjust my Java Coding).\n\nKindly note, that POI 3.11 or later is no viable option, because my application has to be build with Java 1.5. \n\nPlease find attached a sample program to reproduce the behavior without all my additional application logic. POI_Sample simply reads by raw XLSX template file into a POI Workbook and writes that Workbook back to a ByteArray and a File. I would expect the XLSX not being changed at all in course of that. Instead POI_Sample aborts with following stacktrace when writing the Workbook to the file:\norg.apache.xmlbeans.impl.values.XmlValueDisconnectedException\n\tat org.apache.xmlbeans.impl.values.XmlObjectBase.check_orphaned(XmlObjectBase.java:1258)\n\tat org.apache.xmlbeans.impl.values.XmlObjectBase.newCursor(XmlObjectBase.java:286)\n\tat org.apache.xmlbeans.impl.values.XmlComplexContentImpl.arraySetterHelper(XmlComplexContentImpl.java:1124)\n\tat org.openxmlformats.schemas.spreadsheetml.x2006.main.impl.CTDefinedNamesImpl.setDefinedNameArray(Unknown Source)\n\tat org.apache.poi.xssf.usermodel.XSSFWorkbook.saveNamedRanges(XSSFWorkbook.java:1288)\n\tat org.apache.poi.xssf.usermodel.XSSFWorkbook.commit(XSSFWorkbook.java:1309)\n\tat org.apache.poi.POIXMLDocumentPart.onSave(POIXMLDocumentPart.java:322)\n\tat org.apache.poi.POIXMLDocument.write(POIXMLDocument.java:179)\n\tat POI_Sample.main(POI_Sample.java:43)\n\nAny help is highly appreciated.\n\nThank You,\nStefan"}, {"count": 1, "attachment_id": 32501, "bug_id": 57610, "is_private": false, "id": 181211, "time": "2015-02-20T10:03:55Z", "creator": "stefan.esch@sap.com", "creation_time": "2015-02-20T10:03:55Z", "tags": [], "text": "Created attachment 32501\nSample program to reproduce behavior\n\nExecutable JAR created with Eclipse 3.3.x, POI library files excluded from JAR to meet upload requirements. Please use poi-bin-3.10.1-20140818.zip to execute class POI_Sample."}, {"count": 2, "tags": [], "creator": "apache@gagravarr.org", "is_private": false, "text": "Any chance you could try with a recent POI nightly build (on a newer JVM just for testing), and see if the problem remains? That'll let you work out if you need to backport an existing fix, or if the problem remains to be solved acorss all versions?", "id": 181235, "time": "2015-02-21T12:46:52Z", "bug_id": 57610, "creation_time": "2015-02-21T12:46:52Z", "attachment_id": null}, {"count": 3, "tags": [], "creator": "stefan.esch@sap.com", "is_private": false, "text": "(In reply to Nick Burch from comment #2)\nHi Nick,\n\nall I can try is changing the POI version for my sample program. I will give that a try and share results. Finally I still would need a solution working with POI 3.10.1 (or at least same JVM) because there is no chance to increase the JVM version for the entire application. \n\nI will share test results, soon.\n\nThank You,\nStefan", "id": 181245, "time": "2015-02-23T07:45:12Z", "bug_id": 57610, "creation_time": "2015-02-23T07:45:12Z", "attachment_id": null}, {"count": 4, "attachment_id": null, "bug_id": 57610, "text": "Hi Nick,\n\nI did try my sample program on JRE 1.6 with POI library 3.11 binary of December, 2014. It completes successfully and writes a XLSX to the file system accepted by MS Excel. \n\nSo far so good. It seems POI release 3.11 having solved the issue delivered with release 3.10.1. For your reference, I did update from release 3.8 to 3.10.1 in order to run into the issue. The XSLX file created with release 3.8 had been fine.\n\nDoes hat give you a clue where to look at in release 3.10.1?\n\nThank You,\nStefan", "id": 181253, "time": "2015-02-23T13:24:23Z", "creator": "stefan.esch@sap.com", "creation_time": "2015-02-23T13:24:23Z", "tags": [], "is_private": false}, {"count": 5, "tags": [], "text": "Hello,\n\ncan anyone please support on how to get the solution downported from 3.11 to 3.10.1 because a secure libary running on Java EE 5 is required ?\n\nI already tried to build 3.10.1 locally from the sources provided but I am constantly failing, because some OOXML basic types are missing. I tried to work around that known issue by using OOXL libraries shipped with releases 3.8 and 3.9, but they are not compatible with 3.10.1 either. I am now at trying to recompile releases 3.11 with Java EE 5. \n\nAs you might see, I am really lost. Any help would be highly appreciated.\n\nThank You,\nStefan", "is_private": false, "id": 182353, "creator": "stefan.esch@sap.com", "time": "2015-04-14T15:03:56Z", "bug_id": 57610, "creation_time": "2015-04-14T15:03:56Z", "attachment_id": null}, {"count": 6, "attachment_id": null, "bug_id": 57610, "text": "If you really need to backport this I would try to check out the source of 3.10.1 from https://svn.apache.org/repos/asf/poi/branches/REL_3_10_BRANCH/ and build from there as the official release was also built from that.\n\nHowever we are currently not planning to officially down-port features/fixes to previous versions as our available development resources are scarce and this would take away even more of the time people can spend on new bugfixes and features.\n\nBTW, Java 5 is deprecated and unsupported for a long time now. Even Java 6 is already unsupported and deprecated for some time and Java 7 is currently entering desupport mode.", "id": 182403, "time": "2015-04-15T20:12:20Z", "creator": "dominik.stadler@gmx.at", "creation_time": "2015-04-15T20:12:20Z", "tags": [], "is_private": false}, {"count": 7, "tags": [], "bug_id": 57610, "text": "Hello Dominik,\n\nI will create the downport from the sources specified and deliver a version 3.11.downported with my application. Please let me know if you want to have a copy of the downported version for your archives. \n\nThank you for the clarification on the support strategy for the library. I completely agree with that especially in respect to the deprecated Java Releases. Unfortunately that conflicts with the company me being with is provided support for the application build on top of the POI library until year 2020 simply ignoring deprecation of used technologies.\n\nThank You,\nStefan", "id": 182417, "time": "2015-04-16T07:14:11Z", "creator": "stefan.esch@sap.com", "creation_time": "2015-04-16T07:14:11Z", "is_private": false, "attachment_id": null}, {"count": 8, "attachment_id": null, "bug_id": 57610, "text": "Hi, the binaries of the downport are likely not useful as we would not be able to use them due to security and licensing concerns anyway, but if you want to contribute the work you can paste a patch of the resulting changes here on this bug entry so we have it available if someone else needs it.", "id": 182419, "time": "2015-04-16T10:07:16Z", "creator": "dominik.stadler@gmx.at", "creation_time": "2015-04-16T10:07:16Z", "tags": [], "is_private": false}]