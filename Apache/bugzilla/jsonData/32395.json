[{"count": 0, "tags": [], "creator": "prak23@gmail.com", "attachment_id": null, "text": "The problem and logs described here come from 2.1.20041011, but I saw it from\nearlier binary distributions too. In the regex component, if I have a\n<group_variable_1><constant or variable><group_variable_2>, the result ends up\nbeing <group_variable_1><group_variable_2><constant or variable>. \n\n\nHere's an example instance. \n\nHTTP Request\n      Regex for editionURL\n                         Reference name = editionURL\n                         Regular Expression =\n(action=\")(.*\\.gx)(.*changeEdition\\/)([^\"]+)\n                         Template = $3$${EditionID}/$4$\n                         Match No. = 1\n                         Default Value = null\n      Regex for EditionID\n                         Reference name = EditionID\n                         Regular Expression = (<option\nvalue=\")(\\d+)(\"[^>\\s]*>\\w\\w<\\/option>)\n                         Template = $2$\n                         Match No. = 0\n                         Default Value = null\n\nLogs: \n\n2004/11/23 17:40:51 [GUO Thread Group1-1] DEBUG -\njmeter.extractor.RegexExtractor: Pattern =\norg.apache.oro.text.regex.Perl5Pattern@1c0b204\n2004/11/23 17:40:51 [GUO Thread Group1-1] DEBUG -\njmeter.extractor.RegexExtractor: template = $2$\n2004/11/23 17:40:51 [GUO Thread Group1-1] DEBUG -\njmeter.extractor.RegexExtractor: template split into 2 pieces, starts\nwith = true\n2004/11/23 17:40:51 [GUO Thread Group1-1] DEBUG -\njmeter.extractor.RegexExtractor: RegexExtractor processing result\n2004/11/23 17:40:51 [GUO Thread Group1-1] DEBUG -\njmeter.extractor.RegexExtractor: Regex = (<option\nvalue=\")(\\d+)(\"[^>\\s]*>\\w\\w<\\/option>)\n2004/11/23 17:40:51 [GUO Thread Group1-1] DEBUG -\njmeter.extractor.RegexExtractor: RegexExtractor: Match found!\n2004/11/23 17:40:51 [GUO Thread Group1-1] DEBUG -\njmeter.extractor.RegexExtractor: RegexExtractor: Match found!\n2004/11/23 17:40:51 [GUO Thread Group1-1] DEBUG -\njmeter.extractor.RegexExtractor: RegexExtractor: Match found!\n2004/11/23 17:40:51 [GUO Thread Group1-1] DEBUG -\njmeter.extractor.RegexExtractor: RegexExtractor: Template piece #0 = 2\n2004/11/23 17:40:51 [GUO Thread Group1-1] DEBUG -\njmeter.extractor.RegexExtractor: RegexExtractor: Template piece #1 =\n2004/11/23 17:40:51 [GUO Thread Group1-1] DEBUG -\njmeter.extractor.RegexExtractor: RegexExtractor: Template piece #2 =\n2004/11/23 17:40:51 [GUO Thread Group1-1] DEBUG -\njmeter.extractor.RegexExtractor: Regex Extractor result = 493\n2004/11/23 17:40:51 [GUO Thread Group1-1] DEBUG -\njmeter.extractor.RegexExtractor: Pattern =\norg.apache.oro.text.regex.Perl5Pattern@1c0b204\n2004/11/23 17:40:51 [GUO Thread Group1-1] DEBUG -\njmeter.extractor.RegexExtractor: template = $3$493$4$\n2004/11/23 17:40:51 [GUO Thread Group1-1] DEBUG -\njmeter.extractor.RegexExtractor: template split into 3 pieces, starts\nwith = true\n2004/11/23 17:40:51 [GUO Thread Group1-1] DEBUG -\njmeter.extractor.RegexExtractor: RegexExtractor processing result\n2004/11/23 17:40:51 [GUO Thread Group1-1] DEBUG -\njmeter.extractor.RegexExtractor: Regex =\n(action=\")(.*\\.gx)(.*changeEdition\\/)([^\"]+)\n2004/11/23 17:40:51 [GUO Thread Group1-1] DEBUG -\njmeter.extractor.RegexExtractor: RegexExtractor: Match found!\n2004/11/23 17:40:51 [GUO Thread Group1-1] DEBUG -\njmeter.extractor.RegexExtractor: RegexExtractor: Template piece #0 = 3\n2004/11/23 17:40:51 [GUO Thread Group1-1] DEBUG -\njmeter.extractor.RegexExtractor: RegexExtractor: Template piece #1 =\n2004/11/23 17:40:51 [GUO Thread Group1-1] DEBUG -\njmeter.extractor.RegexExtractor: RegexExtractor: Template piece #2 = 4\n2004/11/23 17:40:51 [GUO Thread Group1-1] DEBUG -\njmeter.extractor.RegexExtractor: RegexExtractor: Template piece #3 =\n493\n2004/11/23 17:40:51 [GUO Thread Group1-1] DEBUG -\njmeter.extractor.RegexExtractor: RegexExtractor: Template piece #4 =\n2004/11/23 17:40:51 [GUO Thread Group1-1] DEBUG -\njmeter.extractor.RegexExtractor: Regex Extractor result =\n/5133460/3542940/4719119/468/1101253233790/loot/C/changeEdition/loot493/\n  <=====\n2004/11/23 17:40:51 [GUO Thread Group1-1] DEBUG -\njmeter.protocol.http.sampler.HTTPSampler: Start :\nsamplehttp://loot:8080/g-control/gocentura.gx/5133460/3542940/4719119/468/1101253233790/loot/C/changeEdition/loot493/\n\n\nIn the regex for editionURL, the template is $3$${EditionID}$4$.\n\n     $3$ has been evaluated to\n\"5133460/3542940/4719119/468/1101253233790/loot/C/changeEdition/\"\n      ${EditionID} = 493\n     $4$ has been evaluated to \"loot\"\n\n  But ${editionURL} ends up being:\n/5133460/3542940/4719119/468/1101253233790/loot/C/changeEdition/loot493/", "id": 67466, "time": "2004-11-25T20:54:59Z", "bug_id": 32395, "creation_time": "2004-11-25T20:54:59Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 32395, "text": "I can confirm the bug with 2.0.2. As a possible temporary work-round, it looks\nas though patterns which  start with a constant work OK.", "id": 67477, "attachment_id": null, "creator": "sebb@apache.org", "creation_time": "2004-11-26T03:39:21Z", "time": "2004-11-26T03:39:21Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 32395, "is_private": false, "text": "Fix applied to CVS branch 2.0.", "id": 67945, "time": "2004-12-05T01:35:03Z", "creator": "sebb@apache.org", "creation_time": "2004-12-05T01:35:03Z", "attachment_id": null}]