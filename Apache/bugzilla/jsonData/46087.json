[{"count": 0, "tags": [], "creator": "asusnjar@hotmail.com", "attachment_id": null, "text": "Currently there is no way to aggregate multiple filesets. I attempted to make a custom aggregating fileset and came close - what stopped me is not the filesets themselves but they way they are used (or actually bypassed). Resource objects it returns are not \"asked\" to provide access to resources but only their location, which is then opened/created/accessed by the task using a fileset - for example, a zip task appears to differentiate 'zip' and 'ordinary' resources instead of having this functionality encapsulated within the resource itself.\n\nWhat would be the functional meaning of this? Well, take any task that can take multiple filesets. Zip, for example. These filesets can have different base directories and can include/match different resources within them. Their base directories are not important at all in many (most or all?) such cases. Currently aggregation of filesets has to be deferred until they are referenced by such tasks, which may be too late. Consider a very large projects with many semi-independent components that need to make it into the same archive, say *.ear file. Each one of these components knows what should go in there, but the \"bundling\" build script and associated task do not - they are supposed to delegate this responsibility to those components. So current options in that example are:\n\n1. Have a single ear task that must know about all filesets of all components. If a component changes (and adds a new fileset), that bundling task must also change.\n\n2. Build ear in stages, letting each component update it (enrich it) with its own stuff. This is very slow.\n\nPerhaps there is more, but you can appreciate how useful it would be if each component could define a single aggregate fileset of all of its stuff and publish that single one. Any changes to it would be localized to that component, and the external bundle script would not have to 'care'.", "id": 121870, "time": "2008-10-25T06:46:52Z", "bug_id": 46087, "creation_time": "2008-10-25T06:46:52Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 46087, "text": "One more thing: why is this important? From my perspective, one differentiating factor between ant and other build software is that it can do what other, perhaps simpler-to-use, software cannot do. This leaves ant with the more complex scenarios, rather than the simple one. And in these complex scenarios, features that can enhance build script structure, maintenance and flexibility becomes very important.", "id": 121871, "time": "2008-10-25T07:06:30Z", "creator": "asusnjar@hotmail.com", "creation_time": "2008-10-25T07:06:30Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 46087, "attachment_id": null, "id": 129349, "time": "2009-07-31T07:44:03Z", "creator": "bodewig@apache.org", "creation_time": "2009-07-31T07:44:03Z", "is_private": false, "text": "doesn't a <union>-ResourceCollection do the trick?"}, {"count": 3, "tags": [], "bug_id": 46087, "attachment_id": null, "text": "Union does not seem to work for archive filesets. If I attempt to create a union of zipfilesets (so that I can reuse it to create a zip and a tar), the non-basic-fileset attributes appear to get lost in the union. For example, zipfileset.prefix is not used in the archive that gets created.", "id": 152191, "time": "2011-12-15T13:55:55Z", "creator": "ewan.chalmers@gmail.com", "creation_time": "2011-12-15T13:55:55Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 46087, "text": "(In reply to comment #3)\n> Union does not seem to work for archive filesets. If I attempt to create a\n> union of zipfilesets (so that I can reuse it to create a zip and a tar), the\n> non-basic-fileset attributes appear to get lost in the union. For example,\n> zipfileset.prefix is not used in the archive that gets created.\n\nHmm, that shouldn't be the case.  Any chance the <archives> collection works any better for you?  A sample buildfile, particularly one presented in antunit form, would be very helpful.", "id": 152229, "time": "2011-12-16T20:03:32Z", "creator": "mbenson@apache.org", "creation_time": "2011-12-16T20:03:32Z", "is_private": false, "attachment_id": null}]