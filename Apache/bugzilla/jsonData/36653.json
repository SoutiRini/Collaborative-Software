[{"attachment_id": null, "tags": [], "creator": "elkner@linofee.org", "is_private": false, "count": 0, "id": 79936, "time": "2005-09-14T12:10:25Z", "bug_id": 36653, "creation_time": "2005-09-14T12:10:25Z", "text": "Actually, many people wanna use XIncludes in their projects (e.g. for docbook\nrelated stuff), and this requires at least for xalan2, that the System property\nkey \"org.apache.xerces.xni.parser.XMLParserConfiguration\" is set to\n\"org.apache.xerces.parsers.XIncludeParserConfiguration\". \n\nSince the xslt task does not allow to set system properties temporarily, another\noption is need - the invocation of ant with -D... is a bad workaround, since\nthan all task would see/use this value. \n\nSo one option would be, to allow a parser.config attribute, where one could set\nappropriate value.\n\nEven easier, if the processor is xalan2 aka trax, allow an attribute\n\"xinclude={on|off}\" and if on, just set the system property as described above\nand reset it to its original value, when the task is finished ..."}, {"count": 1, "attachment_id": null, "creator": "bodewig@apache.org", "text": "*** Bug 31331 has been marked as a duplicate of this bug. ***", "id": 122791, "time": "2008-11-24T08:38:17Z", "bug_id": 36653, "creation_time": "2008-11-24T08:38:17Z", "tags": [], "is_private": false}, {"count": 2, "tags": [], "creator": "bodewig@apache.org", "text": "*** Bug 44831 has been marked as a duplicate of this bug. ***", "id": 122795, "time": "2008-11-24T08:51:34Z", "bug_id": 36653, "creation_time": "2008-11-24T08:51:34Z", "is_private": false, "attachment_id": null}, {"attachment_id": null, "tags": [], "creator": "bodewig@apache.org", "text": "svn revision 720892 allows setting of arbitrary system properties during processing.\n\n<xslt ...>\n    <sysproperty key=\"org.apache.xerces.xni.parser.XMLParserConfiguration\"\n                 value=\"org.apache.xerces.parsers.XIncludeParserConfiguration\"\n     />\n<xslt>\n\nshould have the desired effect.", "count": 3, "id": 122869, "time": "2008-11-26T06:46:11Z", "bug_id": 36653, "creation_time": "2008-11-26T06:46:11Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 36653, "text": "More details on the Saxon side of this can be found here:\n\nhttp://www.saxonica.com/documentation/sourcedocs/XInclude.html\n", "id": 123021, "time": "2008-12-02T20:02:03Z", "creator": "trevor@vocaro.com", "creation_time": "2008-12-02T20:02:03Z", "is_private": false, "attachment_id": null}, {"attachment_id": null, "tags": [], "creator": "bodewig@apache.org", "text": "> or to set the attribute denoted by FeatureKeys.XINCLUDE to Boolean.TRUE\n> on the TransformerFactory.\n\ntogether with http://www.saxonica.com/documentation/javadoc/constant-values.html#net.sf.saxon.FeatureKeys.XINCLUDE\n\nwould correspond to\n\n<xslt ...>\n  <factory>\n    <param name=\"http://saxon.sf.net/feature/xinclude-aware\"\n           value=\"true\"/>\n  </factory>\n</xslt>\n\nbut the system property should also work.\n\nI don't think the task is lacking any features that would prevent you from using\nXInclude with either Saxon or Xalan.", "count": 5, "id": 123028, "time": "2008-12-03T01:43:21Z", "bug_id": 36653, "creation_time": "2008-12-03T01:43:21Z", "is_private": false}, {"attachment_id": null, "tags": [], "creator": "bodewig@apache.org", "text": "replace param with attribute in comment #5", "count": 6, "id": 123029, "time": "2008-12-03T01:48:11Z", "bug_id": 36653, "creation_time": "2008-12-03T01:48:11Z", "is_private": false}, {"count": 7, "attachment_id": null, "bug_id": 36653, "text": "I'm trying out the current Ant 1.8.0 nightly build with Saxon-B 9.1.0.3, but I still can't Xinclude to work. I've tried both the <factory> and the system property techniques, but it's simply ignoring my <xi:include> directives. Any suggestions?", "id": 123045, "time": "2008-12-03T07:11:07Z", "creator": "trevor@vocaro.com", "creation_time": "2008-12-03T07:11:07Z", "tags": [], "is_private": false}, {"count": 8, "tags": [], "creator": "bodewig@apache.org", "attachment_id": null, "text": "On second thought the system property approach may be failing because saxon is started in the same VM that runs Ant and ends up using the same Xerces which could be ignoring the system property because it had a different value when Ant started (it might evaluate the property only once).\n\nDepending on what Saxon does when the attribute is set, it may fail to enable XInclude for the same reason (Xerces started without XInclude and isn't willing to change).\n\nI'm not sure what we can do short of adding a fork mode to <xslt> which doesn't look like a trivial task at first glance.", "id": 123071, "time": "2008-12-04T01:30:56Z", "bug_id": 36653, "creation_time": "2008-12-04T01:30:56Z", "is_private": false}, {"count": 9, "tags": [], "bug_id": 36653, "is_private": false, "text": "Actually, I think the problem is more serious than that. Xinclude still doesn't work even if you work around the issue in comment #8 by setting the system property ahead of time.\n\nUsing the current Ant trunk, I started out by setting ANT_OPTS=\"-Dorg.apache.xerces.xni.parser.XMLParserConfiguration=org.apache.xerces.parsers.XIncludeParserConfiguration\". This has the desired effect of changing Xerces to use XIncludeParserConfiguration instead of the default XIncludeAwareParserConfiguration. I've confirmed this through debugging. XIncludeParserConfiguration is definitely being instantiated with this setting.\n\nNext, since I'm using Saxon 9.1, I added this nested element to my <xslt> task:\n\n  <factory name=\"net.sf.saxon.TransformerFactoryImpl\">\n      <attribute name=\"http://saxon.sf.net/feature/xinclude-aware\" value=\"true\"/>\n  </factory>\n\nThis is where problems start. Adding the above factory attribute causes org.apache.xerces.xni.parser.XMLConfigurationException.\n\nI've done some debugging to find out why this is being thrown, and I can see that Saxon is definitely trying to configure the parser for Xinclude. The sendSAXSource method in its Sender.java is making this call:\n\n  parser.setFeature(\"http://apache.org/xml/features/xinclude-aware\", true);\n\nBut when this call propagates to Xerces, its ParserConfiguration.java looks in its list of recognized feature strings, doesn't find \"http://apache.org/xml/features/xinclude-aware\", and throws XMLConfigurationException.\n\nActually, this is to be expected because the current Ant trunk is bundled with the Xerces 2.9.0 parser, and that version doesn't know about \"http://apache.org/xml/features/xinclude-aware\". It only knows about \"http://apache.org/xml/features/xinclude\". (Not sure why.)\n\nSaxon attempts to handle this gracefully, as shown in this snippet from its Sender.java:\n\n  boolean tryAgain = false;\n  try {\n      // This feature name is supported in the version of Xerces bundled with JDK 1.5\n      parser.setFeature(\"http://apache.org/xml/features/xinclude-aware\", true);\n  } catch (SAXNotRecognizedException err) {\n      tryAgain = true;\n  } catch (SAXNotSupportedException err) {\n      tryAgain = true;\n  }\n  if (tryAgain) {\n      try {\n          // This feature name is supported in Xerces 2.9.0\n          parser.setFeature(\"http://apache.org/xml/features/xinclude\", true);\n      } catch (SAXNotRecognizedException err) {\n        ...\n      } catch (SAXNotSupportedException err) {\n        ...\n      }\n  }\n  \nUnfortunately, this failover technique does not work, apparently due to a Xerces problem. When Xerces encounters the unrecognized feature string in its ParserConfigurationSettings.checkFeature method, it throws its own proprietary org.apache.xerces.xni.parser.XMLConfigurationException. I don't know why it doesn't use the standard org.xml.sax.SAXNotRecognizedException or org.xml.sax.SAXNotSupportedException. It is either a bug in Saxon (because it catches the wrong exception) or a bug in Xerces (because it throws the wrong exception).\n\nIn this case, though, it doesn't actually matter because even if Saxon specified \"xinclude\" instead of \"xinclude-aware\", it still wouldn't work. That's because the feature list variable in Xerces doesn't contain either one! When ParserConfigurationSettings.checkFeature is called, I see that \"http://apache.org/xml/features/xinclude/fixup-base-uris\" and \"http://apache.org/xml/features/xinclude/fixup-language\" are there, but \"http://apache.org/xml/features/xinclude\" is not.\n\nSo the root of this problem is that Xerces is not adding \"http://apache.org/xml/features/xinclude\" to its feature list. I even tried to add it explicitly in Ant's TraXLiaison.getSource methods:\n\n  spFactory.setFeature(\"http://apache.org/xml/features/xinclude\", true);\n\nor:\n\n  spFactory.setXIncludeAware(true);\n\nBut they simply cause javax.xml.parsers.ParserConfigurationException to be thrown in org.apache.xerces.jaxp.SAXParserFactoryImpl.newSAXParser.\n\nSo now I'm basically stuck, but I hope that the analysis above might help someone.\n\n", "id": 123272, "time": "2008-12-13T12:57:54Z", "creator": "trevor@vocaro.com", "creation_time": "2008-12-13T12:57:54Z", "attachment_id": null}, {"count": 10, "tags": [], "bug_id": 36653, "attachment_id": 23023, "text": "Created attachment 23023\nResolve xi:include using xslt\n\nSince the XInclude standard is pretty simple, you can also just implement your own xi:include resolver using XSLT and XPath (see attachment).\n\nThis is a very basic implementation: it only supports the xpointer attribute to resolve an element based on a match with the xml:id attribute.\n\nIt is probably not as perfect as using the XInclude resolving methods of the xslt parsers (although i have found that those implementation also differ in regard to the xpointer, so personally I like to use the snippet for it gives me more flexibility in my projects).", "id": 123319, "time": "2008-12-15T08:28:51Z", "creator": "remie@backbase.com", "creation_time": "2008-12-15T08:28:51Z", "is_private": false}, {"attachment_id": null, "tags": [], "creator": "bodewig@apache.org", "text": "(In reply to comment #9)\n> Actually, I think the problem is more serious than that. Xinclude still doesn't\n> work even if you work around the issue in comment #8 by setting the system\n> property ahead of time.\n\nI agree that if it doesn't work that way then we are out of luck on the Ant side (but we should make it possible to get as close as we can).  This means we should implement a fork-option in <xslt>, IMHO.\n\nIt would be nice if you took your findings here and reported bugs against Xerces-J and Saxon respectively.\n\n", "count": 11, "id": 123397, "time": "2008-12-18T05:40:41Z", "bug_id": 36653, "creation_time": "2008-12-18T05:40:41Z", "is_private": false}]