[{"count": 0, "tags": [], "bug_id": 36648, "text": "OK, You'll probably tell me exactly why I screwed up, but I'm going to report  \nthis anyway.  \n  \nIf you have a CGI script using the GET method, and the browser sends an  \n\"If-Modified-Since\", apache will return a \"304 NOT MODIFIED\", without regard to  \nwhether the resource is changing - it only looks at the modification time of  \nthe file itself.  While this is allowed by the HTTP spec, I believe this to be  \nincorrect behavior, especially as this happens before the CGI is executed.  \n  \nI added a patch to look for r->handler == \"cgi_script\" in  \nmodules/http/http_protocol.c.  It seems to work fine for our purposes but is  \nprobably not a general enough solution to make it into the apache tree.  Glad  \nto listen to other options - perhaps it should be tied to XBitHack?", "id": 79916, "time": "2005-09-14T08:01:19Z", "creator": "rmiller@duskglow.com", "creation_time": "2005-09-14T08:01:19Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "creator": "nick@webthing.com", "attachment_id": null, "text": "Are you running with mod_cache (or any other caching software)? \n \nYou're right that apache shouldn't return 304 for a CGI script without \nreference to the script itself, except as a configuration option under your \ncontrol. \n \nThis sounds like a similar issue to that of filters that affect the HTTP \nprotocol, and could be treated with something similar to the FilterProtocol \ndirective. ", "id": 79933, "time": "2005-09-14T11:26:22Z", "bug_id": 36648, "creation_time": "2005-09-14T11:26:22Z", "is_private": false}, {"count": 2, "tags": [], "creator": "slive@apache.org", "attachment_id": null, "is_private": false, "id": 79948, "time": "2005-09-14T16:07:58Z", "bug_id": 36648, "creation_time": "2005-09-14T16:07:58Z", "text": "I think you have a cache or some other configuration complexity in there.  In\nap_meets_conditions, mtime should always be set to apr_time_now() on cgi\nrequests, because they don't have a Last-Modified time (unless you set one\nexplicitly).  So the full response will always be sent.  And it works for me."}]