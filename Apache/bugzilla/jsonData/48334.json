[{"count": 0, "tags": [], "bug_id": 48334, "attachment_id": null, "id": 132596, "time": "2009-12-02T17:32:12Z", "creator": "ms419@freezone.co.uk", "creation_time": "2009-12-02T17:32:12Z", "is_private": false, "text": "http://thread.gmane.org/gmane.text.xml.fop.user/29778\n\nhttp://thread.gmane.org/gmane.text.xml.xsl.general.mulberrytech/77602\n\nI wish FOP supported the xml:base=\"\" attribute, http://www.w3.org/TR/xmlbase/\n\ne.g. I wish the following worked,\n\n  [...]\n  <fo:block xml:base=\"http://ica-atom.org/docs/index.php?title=File:UM-2.1.png\">\n    <fo:external-graphic src=\"url(/docs/images/b/bb/UM-2.1.png)\"/>\n  </fo:block>\n  [...]"}, {"count": 1, "tags": [], "creator": "adelmelle@apache.org", "attachment_id": 26496, "id": 143397, "time": "2011-01-16T16:05:45Z", "bug_id": 48334, "creation_time": "2011-01-16T16:05:45Z", "is_private": false, "text": "Created attachment 26496\nprototype implementation\n\nAttached patch adds a rough prototype implementation of xml:base by means of a new URIProperty (+ small fotree testcase). \nCurrently, in addition to xml:base, only the src property has been marked as a URIProperty in FOPropertyMapping, but a quick glance through the spec reveals others that might use this functionality.\n\nNothing really changes if it is not used, except that the value of \"src\" is now validated against the URI syntax. I assume that, if an exception were to arise there, this would normally happen further downstream anyway.\nIf xml:base is used, relative URIs on the element itself or its descendants will be resolved against it.\nThe property is assumed to be inherited.\nIf it is itself specified as a relative URI, then it will be resolved against the inherited value. If no inherited value is present, it will lead to behavior similar to a regular relative URI.\nThat is, given:\n\n<fo:block xml:base=\"./resources/\">\n  <fo:external-graphic src=\"images/image-1.png\" />\n</fo:block>\n\nThe \"src\" property will be resolved to \"resources/images/image-1.png\", which will trigger the usual relative URI resolution downstream. It will be stored in resolved form only. The originally specified relative URI is not retained (although that could easily be added)."}, {"count": 2, "tags": [], "text": "Created attachment 26500\nslightly revised prototype\n\n\nMinor corrections plus some additional tests.\n\nFor backward compatibility, URIProperty works such that, without xml:base, it will the yield exactly the same value as before (including the url() function call, if present). Before the patch, the src property was just parsed as a StringProperty.\nThis causes a slight inconsistency in the resulting values, shown in the testcase. A relative URI resolved against a relative xml:base yields a normalized string representation, while in the regular case without xml:base, no resolution happens, so there we would get the value as specified in the FO source. Strictly speaking, both are equivalent, yet not identical...", "attachment_id": 26500, "id": 143419, "creator": "adelmelle@apache.org", "time": "2011-01-17T13:53:45Z", "bug_id": 48334, "creation_time": "2011-01-17T13:53:45Z", "is_private": false}, {"count": 3, "tags": [], "creator": "adelmelle@apache.org", "text": "\nNote that, apart from fo:external-graphic, the src property also applies to fo:color-profile and fo:external-document. If xml:base is set on fo:root or fo:declarations, the prototype will work for those cases as well.\n\nWith only a trivial change (untested), the same could be applied to external-destination.\nThat would allow one to create a document with a fo:block containing images from a specific website, and in the same block, specify relative URIs as external-destinations. If xml:base is set correctly, those links will then point to locations on the website the images are hosted on. \nThinking more about it, it does seem like a powerful addition to being able to set a single base URI via the user-config. That case could also easily be covered by setting xml:base on the fo:root. Benefit being that the base-uri is available in the source (instead of only in a configuration that, perhaps, only exists while the source is rendered).\n\nImplementing xml:base in the user-config itself is an entirely different story, but there might be interesting use-cases for that as well.", "id": 143420, "time": "2011-01-17T14:17:51Z", "bug_id": 48334, "creation_time": "2011-01-17T14:17:51Z", "is_private": false, "attachment_id": null}, {"count": 4, "attachment_id": null, "bug_id": 48334, "is_private": false, "id": 143556, "time": "2011-01-21T10:05:59Z", "creator": "spepping@apache.org", "creation_time": "2011-01-21T10:05:59Z", "tags": [], "text": "The idea and your implementation look good. Some code is missing: xml:base should be listed as a valid property in PropertyList.addAttributesToList.\n\nThe backward compatibility case causes some complexity, but it seems to work well. I think that the class requires a better explanation of this case: when it applies and how it is handled. Having that explanation in this bug report does not suffice."}, {"count": 5, "tags": [], "creator": "adelmelle@apache.org", "text": "(In reply to comment #4)\n> The idea and your implementation look good. Some code is missing: xml:base\n> should be listed as a valid property in PropertyList.addAttributesToList.\n\nOops! Forgot to add that one... :-(\n  \n> The backward compatibility case causes some complexity, but it seems to work\n> well. I think that the class requires a better explanation of this case: when\n> it applies and how it is handled. Having that explanation in this bug report\n> does not suffice.\n\nOK, makes sense. I will post a slightly revised patch for final review. Unless anyone objects, this will find its way into FOP Trunk beginning of next week.", "id": 143583, "time": "2011-01-22T13:54:04Z", "bug_id": 48334, "creation_time": "2011-01-22T13:54:04Z", "is_private": false, "attachment_id": null}, {"count": 6, "tags": [], "bug_id": 48334, "text": "Created attachment 26538\nrevised patch\n\n\nNew patch, taking into account the feedback.\n\nSome unrelated changes to the affected classes have been committed separately, so the patch now only contains changes relevant to this issue.\n\nChange wrt previous version: the String constructor for URIProperty has been made private and marked as the alternate constructor rather than the default one. That seemed to make more sense since that constructor was actually only needed for the backward compatibility case.\n\nCome to think of it, the only compatibility issues that arose within our own code, appeared in the fotree tests... Something to take a look at later.", "id": 143588, "time": "2011-01-23T05:18:30Z", "creator": "adelmelle@apache.org", "creation_time": "2011-01-23T05:18:30Z", "is_private": false, "attachment_id": 26538}, {"count": 7, "tags": [], "bug_id": 48334, "text": "Patch applied as proposed in r1066190 (http://svn.apache.org/viewvc?rev=1066190&view=rev)", "id": 143872, "time": "2011-02-01T15:28:02Z", "creator": "adelmelle@apache.org", "creation_time": "2011-02-01T15:28:02Z", "is_private": false, "attachment_id": null}, {"count": 8, "tags": [], "bug_id": 48334, "attachment_id": null, "id": 155479, "time": "2012-04-01T06:18:22Z", "creator": "gadams@apache.org", "creation_time": "2012-04-01T06:18:22Z", "is_private": false, "text": "batch transition to closed; if someone wishes to restore one of these to resolved in order to perform a verification step, then feel free to do so"}]