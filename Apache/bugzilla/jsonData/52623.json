[{"count": 0, "tags": [], "creator": "oeriksson@mandriva.com", "text": "Hi there,\n\nI upgraded pcre to 8.30 in Mandriva cooker and now apache won't build due to:\n\nhttpd-2.2.22/server/util_pcre.c:140: undefined reference to `pcre_info'\n\nA similar problem was reported and fixed in php recently:\n\nhttps://bugs.php.net/bug.php?id=60986\n\nCheers.", "id": 153568, "time": "2012-02-08T07:12:12Z", "bug_id": 52623, "creation_time": "2012-02-08T07:12:12Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 52623, "text": "This might be the correct fix:\n\n--- server/util_pcre.c  2005-11-10 16:20:05.000000000 +0100\n+++ server/util_pcre.c.oden     2012-02-07 10:47:42.382844294 +0100\n@@ -137,7 +137,7 @@ preg->re_erroffset = erroffset;\n \n if (preg->re_pcre == NULL) return AP_REG_INVARG;\n \n-preg->re_nsub = pcre_info((const pcre *)preg->re_pcre, NULL, NULL);\n+preg->re_nsub = pcre_fullinfo((const pcre *)preg->re_pcre, NULL, NULL, NULL);\n return 0;\n }", "id": 153569, "time": "2012-02-08T07:23:10Z", "creator": "oeriksson@mandriva.com", "creation_time": "2012-02-08T07:23:10Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 52623, "attachment_id": null, "text": "(In reply to comment #1)\n> This might be the correct fix:\n> \n> --- server/util_pcre.c  2005-11-10 16:20:05.000000000 +0100\n> +++ server/util_pcre.c.oden     2012-02-07 10:47:42.382844294 +0100\n> @@ -137,7 +137,7 @@ preg->re_erroffset = erroffset;\n> \n>  if (preg->re_pcre == NULL) return AP_REG_INVARG;\n> \n> -preg->re_nsub = pcre_info((const pcre *)preg->re_pcre, NULL, NULL);\n> +preg->re_nsub = pcre_fullinfo((const pcre *)preg->re_pcre, NULL, NULL, NULL);\n>  return 0;\n>  }\n\nI think this fix is wrong. IMHO it should be:\n\nIndex: server/util_pcre.c\n===================================================================\n--- server/util_pcre.c  (revision 1241805)\n+++ server/util_pcre.c  (working copy)\n@@ -124,6 +124,7 @@\n     const char *errorptr;\n     int erroffset;\n     int options = 0;\n+    int nsub;\n\n     if ((cflags & AP_REG_ICASE) != 0)\n         options |= PCRE_CASELESS;\n@@ -139,7 +140,9 @@\n     if (preg->re_pcre == NULL)\n         return AP_REG_INVARG;\n\n-    preg->re_nsub = pcre_info((const pcre *)preg->re_pcre, NULL, NULL);\n+    pcre_fullinfo((const pcre *)preg->re_pcre, NULL,\n+                   PCRE_INFO_CAPTURECOUNT, &nsub);\n+    preg->re_nsub = nsub;\n     return 0;\n }\n\n\nor even better:\n\nIndex: server/util_pcre.c\n===================================================================\n--- server/util_pcre.c  (revision 1241805)\n+++ server/util_pcre.c  (working copy)\n@@ -139,7 +139,8 @@\n     if (preg->re_pcre == NULL)\n         return AP_REG_INVARG;\n\n-    preg->re_nsub = pcre_info((const pcre *)preg->re_pcre, NULL, NULL);\n+    pcre_fullinfo((const pcre *)preg->re_pcre, NULL,\n+                   PCRE_INFO_CAPTURECOUNT, &(preg->re_nsub));\n     return 0;\n }\n\nIndex: include/ap_regex.h\n===================================================================\n--- include/ap_regex.h  (revision 1241805)\n+++ include/ap_regex.h  (working copy)\n@@ -88,7 +88,7 @@\n /* The structure representing a compiled regular expression. */\n typedef struct {\n     void *re_pcre;\n-    apr_size_t re_nsub;\n+    int re_nsub;\n     apr_size_t re_erroffset;\n } ap_regex_t;\n\n\n\nbut this requires a major bump since it changes a public API. Can you please test the above patches?", "id": 153572, "time": "2012-02-08T08:34:43Z", "creator": "rpluem@apache.org", "creation_time": "2012-02-08T08:34:43Z", "is_private": false}, {"count": 3, "tags": [], "creator": "rainer.jung@kippdata.de", "attachment_id": null, "id": 153686, "time": "2012-02-11T22:39:55Z", "bug_id": 52623, "creation_time": "2012-02-11T22:39:55Z", "is_private": false, "text": "Hi R\u00fcdiger,\n\nboth of your patch variants seem right to me. I tested them as follows:\n\n(In reply to comment #2)\n> (In reply to comment #1)\n> Index: server/util_pcre.c\n> ===================================================================\n> --- server/util_pcre.c  (revision 1241805)\n> +++ server/util_pcre.c  (working copy)\n> @@ -124,6 +124,7 @@\n>      const char *errorptr;\n>      int erroffset;\n>      int options = 0;\n> +    int nsub;\n> \n>      if ((cflags & AP_REG_ICASE) != 0)\n>          options |= PCRE_CASELESS;\n> @@ -139,7 +140,9 @@\n>      if (preg->re_pcre == NULL)\n>          return AP_REG_INVARG;\n> \n> -    preg->re_nsub = pcre_info((const pcre *)preg->re_pcre, NULL, NULL);\n> +    pcre_fullinfo((const pcre *)preg->re_pcre, NULL,\n> +                   PCRE_INFO_CAPTURECOUNT, &nsub);\n> +    preg->re_nsub = nsub;\n>      return 0;\n>  }\n\nTested on trunk and 2.2.x. No additional build warnings or test suite failures.\nThis seems to be the best solution for 2.2.x, because no MMN bump is needed.\n\n> or even better:\n> \n> Index: server/util_pcre.c\n> ===================================================================\n> --- server/util_pcre.c  (revision 1241805)\n> +++ server/util_pcre.c  (working copy)\n> @@ -139,7 +139,8 @@\n>      if (preg->re_pcre == NULL)\n>          return AP_REG_INVARG;\n> \n> -    preg->re_nsub = pcre_info((const pcre *)preg->re_pcre, NULL, NULL);\n> +    pcre_fullinfo((const pcre *)preg->re_pcre, NULL,\n> +                   PCRE_INFO_CAPTURECOUNT, &(preg->re_nsub));\n>      return 0;\n>  }\n> \n> Index: include/ap_regex.h\n> ===================================================================\n> --- include/ap_regex.h  (revision 1241805)\n> +++ include/ap_regex.h  (working copy)\n> @@ -88,7 +88,7 @@\n>  /* The structure representing a compiled regular expression. */\n>  typedef struct {\n>      void *re_pcre;\n> -    apr_size_t re_nsub;\n> +    int re_nsub;\n>      apr_size_t re_erroffset;\n>  } ap_regex_t;\n\nI tested this one only for trunk. Again no additional warnings, no test suite failures.\n\nI will apply this one to trunk and 2.4.x and propose the other one for 2.2.x.\n\nRegards,\n\nRainer"}, {"count": 4, "attachment_id": null, "creator": "rainer.jung@kippdata.de", "is_private": false, "id": 153687, "time": "2012-02-11T23:08:15Z", "bug_id": 52623, "creation_time": "2012-02-11T23:08:15Z", "tags": [], "text": "Patch applied for trunk (r1243176) and 2.4.x (r1243177) and proposed for 2.2.x."}, {"count": 5, "tags": [], "bug_id": 52623, "text": "It seems you have jumped the gun here a little, considering PCRE 8.3 is not yet released. I know it has been tagged, but has not been made available yet as GA.\n\nAs far as 2.2.x, well, since that ships with a older PCRE (I know, all the devs hate it), you may want to think about making it work for either.", "id": 153695, "time": "2012-02-12T08:22:15Z", "creator": "gls@gknw.net", "creation_time": "2012-02-12T08:22:15Z", "is_private": false, "attachment_id": null}, {"count": 6, "tags": [], "text": "ignore that :-)", "attachment_id": null, "bug_id": 52623, "id": 153696, "time": "2012-02-12T08:37:51Z", "creator": "gls@gknw.net", "creation_time": "2012-02-12T08:37:51Z", "is_private": false}, {"count": 7, "tags": [], "creator": "oeriksson@mandriva.com", "text": "(In reply to comment #2)\n\n[...]\n\n> or even better:\n> \n> Index: server/util_pcre.c\n> ===================================================================\n> --- server/util_pcre.c  (revision 1241805)\n> +++ server/util_pcre.c  (working copy)\n> @@ -139,7 +139,8 @@\n>      if (preg->re_pcre == NULL)\n>          return AP_REG_INVARG;\n> \n> -    preg->re_nsub = pcre_info((const pcre *)preg->re_pcre, NULL, NULL);\n> +    pcre_fullinfo((const pcre *)preg->re_pcre, NULL,\n> +                   PCRE_INFO_CAPTURECOUNT, &(preg->re_nsub));\n>      return 0;\n>  }\n> \n> Index: include/ap_regex.h\n> ===================================================================\n> --- include/ap_regex.h  (revision 1241805)\n> +++ include/ap_regex.h  (working copy)\n> @@ -88,7 +88,7 @@\n>  /* The structure representing a compiled regular expression. */\n>  typedef struct {\n>      void *re_pcre;\n> -    apr_size_t re_nsub;\n> +    int re_nsub;\n>      apr_size_t re_erroffset;\n>  } ap_regex_t;\n> \n> \n> \n> but this requires a major bump since it changes a public API. Can you please\n> test the above patches?\n\nThanks Ruediger for your quick responce here. I used the second version of the fix and applied it, but unfortunately I have not yet found time to test this much.", "id": 153697, "time": "2012-02-12T08:47:22Z", "bug_id": 52623, "creation_time": "2012-02-12T08:47:22Z", "is_private": false, "attachment_id": null}]