[{"count": 0, "tags": [], "text": "Currently, both variants of the HTTP Request (the normal and the one using HTTP\nClient) is using default encoding when submitt a POST request.\n\nIt ought to be possible to specify what encoding should be used when posting the\ndata to the web server.\n\nThe Http Request (class name HttpSampler / PostWriter) is currently using the\ndefault platform character encoding when doing a POST request.\nThe Http Request HTTPClient (class name HttpSampler2) is currently using\nISO-8859-1 as the character encoding when doing a POST request.\n\nIt would be nice if it was possible to specify the encoding to use for the POST\nin the HTTP Request parameters section.\n\nAs the situation is today, if you have som values which are encoded as UTF-8,\nthey are not properly transmitted to the web server.", "is_private": false, "id": 99798, "creation_time": "2007-02-26T06:09:52Z", "time": "2007-02-26T06:09:52Z", "creator": "alf@i100.no", "bug_id": 41705, "attachment_id": null}, {"count": 1, "tags": [], "creator": "alf@i100.no", "text": "I think this bug is related, but I'm not exactly sure, to the following existing\nbugs : 41305, 33435.\n\nIt also seems to be somewhat related to 38287, 25753, 30823, both they seem to\ntalk about http get requests, and not http post requests, like I do.", "id": 99799, "time": "2007-02-26T06:15:25Z", "bug_id": 41705, "creation_time": "2007-02-26T06:15:25Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "creator": "alf@i100.no", "is_private": false, "text": "Created attachment 19638\nPatch for allowing http post with specified encoding\n\nAttached is a patch for allow HTTP POST requests to be sent with user specified\nencoding.\n\nThe patch is against the\nsvn.apache.org/repos/asf/jakarta/jmeter/branches/rel-2-2 as of today.\n\nComment / suggestions to the patch are welcomed.", "id": 99800, "time": "2007-02-26T06:20:48Z", "bug_id": 41705, "creation_time": "2007-02-26T06:20:48Z", "attachment_id": 19638}, {"count": 3, "tags": [], "text": "Note that the patch above does not change the POSTing of multiform/files,\nhandled in the same \"sendPostData\" method in the \"HTTPSampler2\" class.\nCurrently, UTF-8 is hardcoded for multiform/files in that method, it would be\ntrivial to change that code to use the user specified encoding, as is now done\nfor normal POST request.\nI haven't changed the posting of files in the \"HTTPSampler\" class neither.\n\nI think that the org.apache.jmeter.protocol.http.sampler.HTTPSampleResult, which\nI think is the class which writes the output that is shown in the \"View results\ntree\"->Request pane, incorrectly displays what is sent to the web server.\nThe reason why I think so, is that it displays the same data before and after I\napply the patch above. The \"HTTPSampleResult\" seems to just be using Strings,\nand not actually displaying the content as written to the output stream to the\nweb server, so that explains, I think, why it displays different from what is\nbeing sent to the web server.\nI was thinking about patching the \"HTTPSampleResult\", so that it would print the\nname of the encoding used, but I will wait for feedback on the patch above\nbefore doing more work.\n", "is_private": false, "id": 99801, "creator": "alf@i100.no", "time": "2007-02-26T06:37:30Z", "bug_id": 41705, "creation_time": "2007-02-26T06:37:30Z", "attachment_id": null}, {"count": 4, "tags": [], "creator": "alf@i100.no", "is_private": false, "text": "The code for PostWriter.java in the patch, should probably be changed slightly, from\n    String postData = sampler.getQueryString();\n    OutputStreamWriter out = new\nOutputStreamWriter(connection.getOutputStream(), sampler.getContentEncoding());\n    out.write(postData);\n\nto\n    String postData = sampler.getQueryString();\n    OutputStreamWriter out = null;\n    if(sampler.getContentEncoding() != null &&\nsampler.getContentEncoding().trim().length() > 0) {\n         out = new OutputStreamWriter(connection.getOutputStream(),\nsampler.getContentEncoding());\n     }\n     else {\n         out = new OutputStreamWriter(connection.getOutputStream());\n     }\n     out.write(postData);\n\nso that the behavior is backwards compatible, i.e. if no encoding is specified,\nthe default one is used.", "id": 99850, "time": "2007-02-27T06:23:29Z", "bug_id": 41705, "creation_time": "2007-02-27T06:23:29Z", "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 41705, "is_private": false, "id": 100237, "attachment_id": null, "creator": "sebb@apache.org", "creation_time": "2007-03-09T17:08:39Z", "time": "2007-03-09T17:08:39Z", "text": "Applied to SVN. It will be in the next nightly build.\n\nWhat about the file encoding? Is that still needed?\n\nAs regards the HTTPSampleResult/View Results issue - probably best to raise a \nseparate Bugzilla entry for that."}, {"count": 6, "tags": [], "text": "(In reply to comment #5)\n> Applied to SVN. It will be in the next nightly build.\n\nThanks\n\n> \n> What about the file encoding? Is that still needed?\n> \n\nI'm assuming you are referring to the encoding used when send files as part of\nthe POST.\nThe file is either sent as the post body or as a multipart.\n\nFor the PostWriter.java, which is used by the HTTPSampler.java, the file content\nis in both scenarios sent raw, i.e. the bytes are read directly from the input\nfile, and sent as raw bytes to the web server.\nThe parameters sent in the multipart is always encoded as iso-8859-1.\nThe encoding specified for the POST request is not used at all in that case.\nI think that is correct, because I think the parameters should be encoded using\niso-8859-1.\n\nFor the HTTPSampler2.java (the one using HttpClient code), the two scenarioes\nare handled differently, from what I can see from the code.\nIf the file is sent as the post body, then the bytes are sent raw.\nIf the file is sent as a multipart, then currently the code does this :\n//TODO should allow charset to be defined ...\nparts[i]= new FilePart(getFileField(), input, getMimetype(), \"UTF-8\" );//$NON-NLS-1$\n\nThis looks to me like one assumes that the input text file is encoded using\nutf-8, and one includes a \"; charset=\" in the \"Content-Type:\" which is sent in\nthe multipart for the file.\nIn my opinion, this makes HTTPSampler and HTTPSampler2 send different data to\nthe web server if the file is sent as multipart.\nThe HTTPSampler always include a \"; charset=UTF-8\".\n\nEither one can remove the hardcoded \"UTF-8\" in the HTTPSampler2, and just use\nnull for charset when constructing the FilePart. Then FilePart will have default\ncharset, which is \"ISO-8859-1\". Then one could explicitly do \"setCharSet(null)\"\non the FilePart. With charset set to null, the \"; charset=\" will not be included\nwhen the multiform is sent.\nI've been looking at the source for the files in the\norg.apache.commons.httpclient.methods.multipart package.\n\nOr one can let the HTTPSampler2 use the specified \"Content encoding\" parameter\nwhen constructing the FilePart. Then I think one should also change the\nPostWriter, so that it includes the \"; charset\" in the \"Content-Type\" in the\nwriteFileToURL method in the PostWriter, if the \"Content encoding\" parameter is\nspecified for the sampler.\n\nI prefer to add support for having the \"; charset=\" set to the \"content\nencoding\" specified by the user. If others prefer that as well, I can supply a\npatch.\n\n> As regards the HTTPSampleResult/View Results issue - probably best to raise a \n> separate Bugzilla entry for that.\nI might have a closer look at the \"View results\" issue, and if I do, I will open\na separate entry for it.\n", "is_private": false, "id": 100416, "creator": "alf@i100.no", "time": "2007-03-15T03:20:52Z", "bug_id": 41705, "creation_time": "2007-03-15T03:20:52Z", "attachment_id": null}, {"count": 7, "tags": [], "creator": "sebb@apache.org", "text": "It looks as though this is fixed by the recent commits I made.\n\nIf not, please re-open with details of what still needs to be done.", "id": 101735, "time": "2007-04-15T12:03:04Z", "bug_id": 41705, "creation_time": "2007-04-15T12:03:04Z", "is_private": false, "attachment_id": null}]