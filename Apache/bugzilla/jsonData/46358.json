[{"count": 0, "tags": [], "bug_id": 46358, "attachment_id": null, "id": 123146, "time": "2008-12-06T11:00:13Z", "creator": "ori@avtalion.name", "creation_time": "2008-12-06T11:00:13Z", "is_private": false, "text": "mod_rewrite does not escape '&' in query strings, since it's used as a separator, but it does escape ';' when used in the same context.\n\nThe W3C HTML 4.01 specification recommends in:\n<http://www.w3.org/TR/1999/REC-html401-19991224/appendix/notes.html#h-B.2.2>\nto allow the use of ';' in place of '&'.\n\nmod_rewrite should follow suit.\n\nExample:\n\nWith this rule:\nRewriteRule ^.*$ http://new\\.domain\\.com%{REQUEST_URI} [R=301]\n\ngot    : http://old.domain.com/foo?a=1&b=2\nrewrote: http://new.domain.com/foo?a=1&b=2\n\ngot    : http://old.domain.com/foo?a=1;b=2\nrewrote: http://new.domain.com/foo?a=1%3bb=2\n\nUsing the 'noescape' flag prevents the ';' from being escaped, but it should not be necessary to specify it."}, {"count": 1, "tags": [], "bug_id": 46358, "attachment_id": null, "id": 123290, "time": "2008-12-14T14:24:58Z", "creator": "bobsiegen@googlemail.com", "creation_time": "2008-12-14T14:24:58Z", "is_private": false, "text": "I think we have to move one step higher...: I'm wondering why we're escaping the QueryString for a redirect at all. We don't decode the QS if we receive one, why do we encode the QS if we send a redirect?\n\nJust think about the following situation which creates \"bad behavior\", too.\n\nRewriteEngine on\nRewriteCond %{QUERY_STRING} ^\nRewriteRule ^ -\nRewriteRule ^/f(.*) /$1 [R,L]\n\nand request GET /foo%25bar?args%25are=bar\n\nYou'll get a redirect to /oo%25bar?args%2525are=bar (note the double-encoded % in the QS; we did not modify the QS with our rule).\n\nIf the client requests the given location header, this resolves to r->uri = /oo%bar and r->args = args%2525are=bar\n\nIn that case, the QS is not the same anymore. Using the NE-flag is not an option, because the URL-path won't be escaped anymore, too, but escaping of '%' within an URL-path is required. (As a workaround, we could use the internal map function \"escape\" for the URL-path in combination with the NE-flag in server-context, but if you're using the rules in per-dir context without having access to the server config, you cannot define such a map so I don't consider this as a solution.) \n\nSince Apache does not decode the QS while processing the request, why do we encode it? Note: Using RedirectMatch from mod_alias, only the URL-path but not the QS is encoded:\n\nRedirectMatch ^/f(.*) http://localhost/$1\nrequest GET /foo%25bar?args%25are=bar\nLocation header: http://localhost/oo%25bar?args%25are=bar\n\nI'll attach a RewriteLog, the purpose of the first rule is to show the value of r->args."}, {"count": 2, "tags": [], "text": "Created attachment 23018\nRewriteLog showing behavior", "attachment_id": 23018, "id": 123291, "creator": "bobsiegen@googlemail.com", "time": "2008-12-14T14:26:43Z", "bug_id": 46358, "creation_time": "2008-12-14T14:26:43Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 46358, "attachment_id": null, "id": 123298, "time": "2008-12-14T17:19:51Z", "creator": "wrowe@apache.org", "creation_time": "2008-12-14T17:19:51Z", "is_private": false, "text": "httpd server implements standards, and you don't apparently understand\nthe relevant standards.\n\nThe query string (?arg) applies to a URL, everything following the ? character\nis the query arg pattern.\n\nThe ; argument is an element that applies to each and every segment of the\nURI path elements.  E.g. /my;elt=first/path;elt=second/file.html;elt=third\ncontains three attributes, the first applys to the /my path, the second\napplies to /my/path and the third applies to /my/path/file.html - this is\nentirely unrelated to QUERY_STRING.\n"}]