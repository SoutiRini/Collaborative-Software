[{"count": 0, "tags": [], "creator": "arjones@simultan.dyndns.org", "is_private": false, "text": "On an IPv6-enabled host with an IPv6-enabled Apache, but only IPv4 connectivity\nto the Internet, proxy requests for FTP data from FTP servers that have an IPv6\n(and IPv4) entry in DNS cause the assigned Apache worker process to crash with a\nSIGSEGV. There are two reasons for this. The first is that apr_socket_connect()\ndoesn't check its input parameters to see if they are NULL before dereferencing\nthem. The second is that proxy_ftp_handler() first does a lookup with\napr_sockaddr_info_get(), which primarily returns the AAAA record, and family ==\nAF_INET6. Later, i assume during ap_proxy_acquire_connection(),\nap_proxy_connect_backend(), or ap_proxy_connection_create(), something is\nintelligent enough to figure out that the IPv6 address cannot be reached, and\nuses the IPv4 address for the control connection. Over the control connection,\nthe EPSV command is issued. After the result is returned (assuming the server\nsupports EPSV), apr_sockaddr_info_get() is called with connect_addr->family as\nthe family parameter, and data_ip as the address. connect_addr->family still has\nAF_INET6, but data_ip has the IPv4 address of the server. This causes glibc to\nreturn EAI_ADDRFAMILY, and epsv_addr is left NULL. That is passed to\napr_socket_connect(), and we know what happens after that.\n\nIn addition, there is the potential for a *slight* performance improvement. On\nline 1235 of mod_proxy_ftp.c apr_sockaddr_info_get() is called with flags == 0.\nSince, as far as i can determine, these flags are passed to getaddrinfo(), if\nflags is set to at least AI_NUMERICHOST (this is guarunteed by the code above),\nsome coding and/or DNS lookups could be avoided. The 0 can't simply be replaced\nwith AI_NUMERICHOST, because the proper header file (netdb.h on Linux) is not\nincluded.\n\nI am attaching a patch to fix both problems. I realize that the first problem is\nin APR, and not in Apache, but i ran across both as part of my attempt to fix my\nproblem.", "id": 95194, "time": "2006-10-29T07:04:27Z", "bug_id": 40841, "creation_time": "2006-10-29T07:04:27Z", "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 40841, "text": "Created attachment 19050\nPatch for APR and mod_proxy_ftp", "id": 95195, "attachment_id": 19050, "creator": "arjones@simultan.dyndns.org", "creation_time": "2006-10-29T07:05:48Z", "time": "2006-10-29T07:05:48Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 40841, "text": "I should have mentioned a test case: ftp.isc.org.", "id": 95196, "attachment_id": null, "creator": "arjones@simultan.dyndns.org", "creation_time": "2006-10-29T07:06:20Z", "time": "2006-10-29T07:06:20Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 40841, "attachment_id": null, "id": 95197, "time": "2006-10-29T07:17:47Z", "creator": "arjones@simultan.dyndns.org", "creation_time": "2006-10-29T07:17:47Z", "is_private": false, "text": "I originally put this under 2.3-HEAD because i wasn't thinking. It's actually in\n2.2.3, for which there is not a version entry in Bugzilla."}, {"count": 4, "tags": [], "creator": "arjones@simultan.dyndns.org", "attachment_id": null, "id": 95306, "time": "2006-11-01T11:36:57Z", "bug_id": 40841, "creation_time": "2006-11-01T11:36:57Z", "is_private": false, "text": "By the way, the same problem most likely exists a few lines down in the PASV\nsection, and again a few lines down from that in the PORT section."}, {"count": 5, "tags": [], "bug_id": 40841, "attachment_id": 29281, "text": "Created attachment 29281\nrediff against 2.2.22 modified to affect only mod_proxy_ftp.c\n\nThe segfault still happens with 2.2.22 and the patch still fixes it.\n\nExample: ftp.netfilter.org returns an AAAA as well as an A address.\n\nAAAA 2001:780:45:1d:20d:93ff:fe9b:e442\nA    213.95.27.115\n\nWhen trying to connect to the AAAA address we get a \"connection refused\":\n\n\nflepo tmp # tcpdump -i ppp0 -n -v -s 2048 -A ip6\ntcpdump: listening on ppp0, link-type LINUX_SLL (Linux cooked), capture size 2048 bytes\n00:31:59.102705 IP6 (hlim 64, next-header TCP (6) payload length: 40) 2001:a60:18ff:eedf:d11d:2256:d944:ad16.3798 > 2001:780:45:1d:20d:93ff:fe9b:e442.21: Flags [S], cksum 0x4d0c (incorrect -> 0x5481), seq 2079833585, win 14320, options [mss 1432,sackOK,TS val 73277849 ecr 0,nop,wscale 9], length 0\n`....(.@ .\n.....B....{.........7.M..........\n.^!........\n00:31:59.115245 IP6 (hlim 58, next-header TCP (6) payload length: 20) 2001:780:45:1d:20d:93ff:fe9b:e442.21 > 2001:a60:18ff:eedf:d11d:2256:d944:ad16.3798: Flags [R.], cksum 0x1a1e (correct), seq 0, ack 2079833586, win 0, length 0\n.....B . ....E...\n`......\"V.D..........{...P.......\n^C\n2 packets captured\n2 packets received by filter\n0 packets dropped by kernel\n\n\n\nThen mod_proxy_ftp tries the \"A\" address and segfaults after doing the \"EPSV\" command without the patch.", "id": 161715, "time": "2012-08-26T23:11:00Z", "creator": "ast@domdv.de", "creation_time": "2012-08-26T23:11:00Z", "is_private": false}, {"count": 6, "tags": [], "creator": "jim@apache.org", "attachment_id": null, "id": 163118, "time": "2012-11-01T15:03:24Z", "bug_id": 40841, "creation_time": "2012-11-01T15:03:24Z", "is_private": false, "text": "Updated for new conn_rec info.\nCommitted revision 1404625"}]