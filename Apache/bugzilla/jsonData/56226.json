[{"count": 0, "tags": [], "creator": "frank.meier@ergon.ch", "text": "With the worker MPM it is possible to configure different KeepAliveTimeout for each VirtualHost. \n\nUsing the same configuration with the event MPM, the Server seems not to recognize the per VirtualHost KeepAliveTimeouts. The experienced keepAliveTimeout is always the one configured in the global section (or 5s (default) if nothing is configured globally).\n\nI do not completely understand the event MPM code, but it looks strange to me, that in event.c the only references to server_rec::keep_alive_timeout are references to the global server_rec \"ap_server_conf\". May be this is a give away.\n\n\nWith the config (extract) bellow I got 25 seconds (virtual host) keepalive with the worker MPM and 10 seconds (global) with the event MPM. Testet with telnet on port 18080, sent Request and waited for the TCP connection to close.\n\nRequest:\nGET / HTTP/1.1\nHost: localhost\n\n\nextract from httpd.conf:\n....\nListen 127.0.0.1:18080\nLogLevel debug\n\nKeepAlive             On\nKeepAliveTimeout     10\n\n<VirtualHost 127.0.0.1:18080>\nServerName localhost\n\nKeepAlive             On\nKeepAliveTimeout      25\n.....", "id": 173668, "time": "2014-03-06T14:34:24Z", "bug_id": 56226, "creation_time": "2014-03-06T14:34:24Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "text": "any comments on this? anyone?", "is_private": false, "id": 175244, "creator": "frank.meier@ergon.ch", "time": "2014-05-15T12:35:52Z", "bug_id": 56226, "creation_time": "2014-05-15T12:35:52Z", "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 56226, "text": "Created attachment 31641\nUse vhost's keepalive timeout in event MPM\n\nCould you please try the attached patch?\nIt should apply to both trunk and 2.4.x.", "id": 175356, "time": "2014-05-20T14:43:03Z", "creator": "ylavic.dev@gmail.com", "creation_time": "2014-05-20T14:43:03Z", "is_private": false, "attachment_id": 31641}, {"count": 3, "tags": [], "bug_id": 56226, "text": "Great! I tested the patch with different virtual hosts (global, port based, name based). The timeouts work now according to their configuration section.\n\nCode looks fine as well. One Question though: Is their any advantage to use the 'fixups'-Hook over e.g 'post_read_request'-Hook? The documentation sounds more like \"fixups\" is to fix/change the request:\nap_hook_fixups: \"Allows modules to perform module-specific fixing of header fields...\" vs. ap_hook_post_read_request: \"...This allows modules to make decisions based upon the input header fields\"\n\ncheers Frank", "id": 175372, "time": "2014-05-21T13:55:31Z", "creator": "frank.meier@ergon.ch", "creation_time": "2014-05-21T13:55:31Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "creator": "ylavic.dev@gmail.com", "text": "Created attachment 31645\nUse vhost's keepalive timeout in event MPM\n\nThanks Franck for testing, however after some digging it seems that the first patch is incomplete.\n\nFirst, yes the post_read_request hook is enough (the sooner the better).\nFor now I just wanted to be sure the vhost was determined, and actually it's done in a very early step of the request (before post_read).\n\nSecond, all the connections in the KeepAlive state are currently kept in a single queue, the unique keepalive timeout ensuring that entries are ordered, hence to expire them we can simply look for the first entry (as the oldest) and stop iterating as soon as the current one is ok (that's why vhosts' timeouts were ignored for now, performance).\n\nBut this won't work with different timeouts, for example :\n- vhost1 has 60s timeout,\n- vhost2 has 15s timeout,\n- request vhost1 (keep the connection alive),\n- request vhost2 immediately,\n- wait 60s (instead of 15s) for the second connection to be closed...\n\nTo preserve the ordering with different (vhosts) timeouts, I think we must move from a queue, and maybe use a skiplist instead (ordered by expiration time), as for timers.\nBut in any case it can't be as efficient as the current implementation (skiplist_insert/remove are O(log n) whereas these are O(1) on queues).\nThat probably would have to be optional or heuristical (depending on whether vhosts have multiple keepalive timeouts or not).\n\nMoreover skiplist seems to consider only one value for a key (you can't add another value with the same key, it is ignored), which can be problematic if some expiration date collide (it's maybe already an issue for timers implementation, not sure).\n\nAnyway, I'll start a discussion on dev@ about this, to see what others think.\nFor now I'm attaching this new patch which uses ap_hook_post_read_request() and a skiplist, still for testing.", "id": 175377, "time": "2014-05-22T08:03:40Z", "bug_id": 56226, "creation_time": "2014-05-22T08:03:40Z", "is_private": false, "attachment_id": 31645}, {"count": 5, "tags": [], "creator": "frank.meier@ergon.ch", "text": "are there any new approaches/ideas for this problem? or is there any work in progress?", "id": 181298, "time": "2015-02-24T16:58:12Z", "bug_id": 56226, "creation_time": "2015-02-24T16:58:12Z", "is_private": false, "attachment_id": null}, {"count": 6, "tags": [], "creator": "ylavic.dev@gmail.com", "text": "Created attachment 32526\nUse vhost's connection (write completion) and keepalive timeouts for MPM event queues\n\nThis new patch does not use a skiplist but still the existing timeout_queue, modified to have its own timeout and chainable to other timeout_queues of the same type (write_completion_q or keepalive_q) with different timeouts.\n\nEach queue is built/chained in post_config() according to the declared vhosts' timeouts (same timeout reuses the same existing queue if any, no duplicate).\nThe queues are then set to each s->module_config, so that we can get the relevant one in post_read_request() and associate it to the connection state (cs).\n\nHence TO_QUEUE_INSERT(cs->cfg->{wc,ka}_q, cs) inserts the entry in the right queue (with wc == write_completion and ka == keepalive), and process_timeout_queue() can use its passed-in queue's timeout to check expiries (and possible clock skews, cf. bug 57374).\n\nFrank, can you give it a try?\nTested here already, more tests welcome...", "id": 181382, "time": "2015-02-27T20:03:40Z", "bug_id": 56226, "creation_time": "2015-02-27T20:03:40Z", "is_private": false, "attachment_id": 32526}, {"count": 7, "tags": [], "bug_id": 56226, "text": "Created attachment 32527\nUse vhost's connection (write completion) and keepalive timeouts for MPM event queues (2.4.x)\n\nSmall fix to return early in process_timeout_queue() when nothing is to be done.", "id": 181383, "time": "2015-02-27T20:23:17Z", "creator": "ylavic.dev@gmail.com", "creation_time": "2015-02-27T20:23:17Z", "is_private": false, "attachment_id": 32527}, {"count": 8, "tags": [], "bug_id": 56226, "text": "Created attachment 32528\nUse vhost's connection (write completion) and keepalive timeouts for MPM event queues (trunk)\n\nSame for trunk version.", "id": 181384, "time": "2015-02-27T20:25:23Z", "creator": "ylavic.dev@gmail.com", "creation_time": "2015-02-27T20:25:23Z", "is_private": false, "attachment_id": 32528}, {"count": 9, "tags": [], "bug_id": 56226, "is_private": false, "id": 181404, "attachment_id": 32532, "creator": "ylavic.dev@gmail.com", "creation_time": "2015-03-01T01:55:15Z", "time": "2015-03-01T01:55:15Z", "text": "Created attachment 32532\nUse vhost's connection (write completion) and keepalive timeouts for MPM event queues (trunk)\n\nApplies to latest trunk (after r1663017)."}, {"count": 10, "tags": [], "creator": "ylavic.dev@gmail.com", "text": "Created attachment 32533\nUse vhost's connection (write completion) and keepalive timeouts for MPM event queues (2.4.x)\n\nSame for 2.4.x.", "id": 181406, "time": "2015-03-01T02:14:19Z", "bug_id": 56226, "creation_time": "2015-03-01T02:14:19Z", "is_private": false, "attachment_id": 32533}, {"count": 11, "tags": [], "text": "Created attachment 32534\nUse vhost's connection (write completion) and keepalive timeouts for MPM event queues (trunk)\n\nArgh! Fixes main server's stored hash values (sc => q).", "is_private": false, "id": 181407, "creator": "ylavic.dev@gmail.com", "time": "2015-03-01T02:37:06Z", "bug_id": 56226, "creation_time": "2015-03-01T02:37:06Z", "attachment_id": 32534}, {"count": 12, "tags": [], "text": "Created attachment 32535\n32533: Use vhost's connection (write completion) and keepalive timeouts for MPM event queues (2.4.x)\n\nSame for 2.4.x.", "is_private": false, "id": 181408, "creator": "ylavic.dev@gmail.com", "time": "2015-03-01T02:38:15Z", "bug_id": 56226, "creation_time": "2015-03-01T02:38:15Z", "attachment_id": 32535}, {"count": 13, "tags": [], "bug_id": 56226, "is_private": false, "text": "I did some testing with \"httpd-2.4.x-event_vhost_timeouts-v4.patch\" on 2.4.x branch. I'm sorry to report, that the per virtual host setting did not work as expected. \nAs soon I configure the \"KeepAliveTimeout\" directive in a \"VirtualHost\" the experience a keep alive timeout is 60s. Even I've nowhere configured 60s (neither global nor per virtual host).", "id": 181440, "time": "2015-03-02T17:41:34Z", "creator": "frank.meier@ergon.ch", "creation_time": "2015-03-02T17:41:34Z", "attachment_id": null}, {"count": 14, "attachment_id": 32540, "creator": "ylavic.dev@gmail.com", "text": "Created attachment 32540\nUse vhost's connection (write completion) and keepalive timeouts for MPM event queues (trunk)\n\nSorry for the typo in the patch (bad copy/paste) :\n@@ -511,7 +511,7 @@\n +            ka.q = apr_hash_get(ka.hash, &s->keep_alive_timeout,\n +                                sizeof s->keep_alive_timeout);\n +            if (!ka.q) {\n-+                TO_QUEUE_INIT(ka.q, pconf, s->timeout, ka.tail);\n++                TO_QUEUE_INIT(ka.q, pconf, s->keep_alive_timeout, ka.tail);\n +                apr_hash_set(ka.hash, &s->keep_alive_timeout,\n +                             sizeof s->keep_alive_timeout, ka.q);\n +                ka.tail = ka.tail->next = ka.q;\n\nThis v5 should work.", "id": 181445, "time": "2015-03-02T18:25:10Z", "bug_id": 56226, "creation_time": "2015-03-02T18:25:10Z", "tags": [], "is_private": false}, {"count": 15, "tags": [], "bug_id": 56226, "attachment_id": 32541, "text": "Created attachment 32541\nUse vhost's connection (write completion) and keepalive timeouts for MPM event queues (2.4.x)\n\nv5 for 2.4.x.\n\nThanks for testing.", "id": 181446, "time": "2015-03-02T18:26:40Z", "creator": "ylavic.dev@gmail.com", "creation_time": "2015-03-02T18:26:40Z", "is_private": false}, {"count": 16, "tags": [], "creator": "frank.meier@ergon.ch", "text": "Now it looks better. As far as I can tell it works as expected.\n\nHowever i found a discrepancy in behavior compared to worker MPM. There is only one KeepAliveTimeout considered per ip:port. This is also stated in the documentation of the KeepAliveTimeout Directive: \"In a name-based virtual host context, the value of the first defined virtual host best matching the local IP and port will be used.\". \nWith your patch also name based virtual hosts can handle different keepAliveTimeouts. I think it's \"better\" this way, but it is a different behavior nonetheless.", "id": 181470, "time": "2015-03-03T16:01:12Z", "bug_id": 56226, "creation_time": "2015-03-03T16:01:12Z", "is_private": false, "attachment_id": null}, {"count": 17, "tags": [], "creator": "ylavic.dev@gmail.com", "text": "I was about to discuss this on dev@ mailing list and propose a more general patch for non-async MPMs (worker, prefork...) too. Stay tuned.\n\nThanks for testing anyway.", "id": 181473, "time": "2015-03-03T16:34:18Z", "bug_id": 56226, "creation_time": "2015-03-03T16:34:18Z", "is_private": false, "attachment_id": null}, {"count": 18, "tags": [], "bug_id": 56226, "text": "Committed in r1664071, for event MPM and also non-async ones.", "id": 181506, "time": "2015-03-04T17:05:14Z", "creator": "ylavic.dev@gmail.com", "creation_time": "2015-03-04T17:05:14Z", "is_private": false, "attachment_id": null}, {"count": 19, "tags": [], "bug_id": 56226, "is_private": false, "id": 181508, "attachment_id": null, "creator": "ylavic.dev@gmail.com", "creation_time": "2015-03-04T17:37:21Z", "time": "2015-03-04T17:37:21Z", "text": "*** Bug 57374 has been marked as a duplicate of this bug. ***"}, {"count": 20, "tags": [], "bug_id": 56226, "text": "Fixed in 2.4.16 (r1670326).", "id": 184123, "time": "2015-07-22T09:57:01Z", "creator": "apache-bugzilla@michael-kaufmann.ch", "creation_time": "2015-07-22T09:57:01Z", "is_private": false, "attachment_id": null}]