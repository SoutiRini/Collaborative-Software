[{"count": 0, "tags": [], "bug_id": 21487, "attachment_id": null, "text": "CSSStyleDeclaration on setting URI reference (local URI(fragment only), not\nexternal & not absolute) always reformat the value provided into absolute URI path.\nCSSStyleDeclaration.setProperty(name,value) always reformat the value provided\ninto absolute URI path.\n\nis this bug, design, or specification of CSS on local URI?\ndoes it suppose to just validate the value and if valid accept the value as it\nis? Then if using ComputedValue on ViewCSS it is appended the baseURI, if not\ncomputed value the value is still local URI reference\n\n\nex:\nSVGStylable svgStylable = (SVGStylable)element;\nCSSStyleDeclaration cssStyle = svgStylable.getStyle();\ncssStyle.setProperty(attr, \"url(\"+localUri+\")\",\"\");  //set local relative uri,\nusing only fragment eg:#gradient01\nSystem.out.println(cssStyle.getCssText()); // show absolute uri, is this\nbug,design,or spec?", "id": 40422, "time": "2003-07-11T06:01:17Z", "creator": "tonny@kiyut.com", "creation_time": "2003-07-11T06:01:17Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 21487, "attachment_id": null, "text": "note:\nCSSStyleDeclaration.setCssText(String) accept the value as it is doesn't\nreformat/append absolute URI\n\nCSSStyleDeclaration.setProperty(name,value,important) reformat the value into\nabsolute URI", "id": 40423, "time": "2003-07-11T06:10:53Z", "creator": "tonny@kiyut.com", "creation_time": "2003-07-11T06:10:53Z", "is_private": false}, {"count": 2, "tags": [], "creator": "tonny@kiyut.com", "attachment_id": null, "id": 41744, "creation_time": "2003-07-30T01:05:41Z", "time": "2003-07-30T01:05:41Z", "bug_id": 21487, "text": "possible fix on SVGPaintManager only (work only for fill & stroke attribute)\n\npackage org.apache.batik.css.engine.value.svg;\n\npublic class SVGPaintManager extends SVGColorManager {\n\npublic Value createValue(LexicalUnit lu, CSSEngine engine) throws DOMException {\n....\n// after the switch statement\nString uri = lu.getStringValue();\n        try {\n            java.net.URL baseURI = engine.getCSSBaseURI();\n            if (!uri.startsWith(baseURI.toString())) { // check whether from the\nsame baseURI or not\n                uri = resolveURI(baseURI, uri);\n            }\n        } catch (Exception e) {\n            // this catch block is needed for resolveURI (on loaded document vs\ncreated document) see bug #21919\n        }\n...\n}", "is_private": false}, {"count": 3, "tags": [], "text": "It _is_ intentional that the computed value be an absolute URL.\nOtherwise if the value is inherited across documents what it points\nto would change (a total violation of the notion of computed value).  \n\nAs a consiquence I am curious about the case where it doesn't\nreformat the value - setCssText.  Can you provide a standalone\nexample?", "is_private": false, "id": 41758, "creator": "deweese@apache.org", "time": "2003-07-30T10:35:38Z", "bug_id": 21487, "creation_time": "2003-07-30T10:35:38Z", "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 21487, "attachment_id": null, "id": 41826, "time": "2003-07-31T07:28:06Z", "creator": "tonny@kiyut.com", "creation_time": "2003-07-31T07:28:06Z", "is_private": false, "text": "Sorry, my english is poor :)\nWhat I mean is something like this.\nThe computed value will be reformated value.\nThe cssText will still be the value as it is set.\nI just want to know is this intentionally or bug ? because the current CSS\nimplementation is not like this :), both the computed value & cssText is\nreformated value.\n\nCSSStyleDeclaration.setCSSText(String) is correct\nCSSStyleDeclaration.setProperty(name,value,important) reformat the content of\ncssText into absolute URI\n\nSample case:\nif I load the svgDocument and change one of the element attibute using\nlocal/relative URI, then I save the document back into the file. I expect that\nthe value of cssText is the value that I set, not the reformated value. Because\nif I move the file into another location the reference URI will be broken.\n\nSVGStylable svgStylable = (SVGStylable)element;\nCSSStyleDeclaration cssStyle = svgStylable.getStyle();\ncssStyle.setProperty(attr, \"url(\"+localUri+\")\",\"\");  //set local relative uri,\nusing only fragment eg:#grad01\nCSSStyleDeclaration computedValue = getComputedValue(element);\n\nSystem.out.println(cssStyle.getCssText()); // should be print url(#localUri) /\nprint the same value as it is set\nSystem.out.println(computedValue.getCssText()); // should be print\nurl(#absoluteURI) / reformat the value\n\nbut current Implementation\nSystem.out.println(cssStyle.getCssText()); // print url(#absoluteURI) / reformat\nthe value\nSystem.out.println(computedValue.getCssText()); // print url(#absoluteURI) /\nreformat the value"}, {"count": 5, "tags": [], "creator": "deweese@apache.org", "attachment_id": null, "id": 44770, "creation_time": "2003-09-27T17:20:18Z", "time": "2003-09-27T17:20:18Z", "bug_id": 21487, "text": "This should now be fixed in CVS.\nthe cssText on the style is the 'relative' URI.\nthe StringValue on the style is the 'absolute' URI.\nBoth are the absolute URI for the computed value.", "is_private": false}]