[{"count": 0, "tags": [], "text": "I am embedding FOP into a servlet that generates PDF files when requested.  I \nhave noticed there are a few calls to System.exit() in the FOP source (like in \nBufferManager.java).  If this code is executed, Tomcat's JVM will die, which is \nreal bad.  Instead of calling System.exit(), exceptions should be allowed to \npercolate to the top.", "attachment_id": null, "id": 6056, "creator": "jswap@yahoo.com", "time": "2001-09-26T10:19:49Z", "bug_id": 3840, "creation_time": "2001-09-26T10:19:49Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 3840, "attachment_id": null, "is_private": false, "id": 14233, "time": "2002-04-22T08:40:32Z", "creator": "keiron@aftexsw.com", "creation_time": "2002-04-22T08:40:32Z", "text": "All relevant System.exit calls have been removed."}, {"count": 2, "tags": [], "bug_id": 3840, "attachment_id": null, "id": 25032, "creation_time": "2002-10-23T10:05:24Z", "time": "2002-10-23T10:05:24Z", "creator": "lsubramaniam@selectica.com", "text": "\nkeiron@aftexsw.com \n\nI checked the system.exit entries in fop0.20.2 and also the latest released \nversion of fop ie fop0.20.4.\n \nI got System.exit entries in the following java files.\n \nSystem.exit entries in fop0.20.2:\n1)CommandLineStarter.java\n2)Options.java\n3)PrintStarter.java\n4)FOText.java\n5)BufferManager.java\n6)SerializeHyphPattern.java\n7)PreviewDialog.java\n \nSystem.exit entries in fop0.20.4:\n1)AWTStarter.java\n2)Fop.java\n3)Options.java\n4)PrintStarter.java\n5)FOText.java\n6)BufferManager.java\n7)SerializeHyphPattern.java\n\nStill in fop0.20.4, BufferManager.java has \"System.exit()\", which needs to \nremoved, since it may cause the JVM to exit, which is not desirable.\n", "is_private": false}, {"count": 3, "tags": [], "text": "First of all I don't believe System.exit() can hurt any  modern properly\nconfigured servlet container, there is obvious security stuff.\nSecond: don't forget fop can be run as standalone application also.\n\n> System.exit entries in fop0.20.4:\n> 1)AWTStarter.java\n> 2)Fop.java\n> 3)Options.java\n> 4)PrintStarter.java\nAll these are used when fop is running as standalone java application.\n\n5)FOText.java\nexit stuff removed as far back as in July.\n\n6)BufferManager.java\nThis class was removed altogether at the same time.\n\n7)SerializeHyphPattern.java\nThis one works during fop build.\n\nHence, the bug does fixed in cvs, wait for the next maintenance release or check\nout cvs version.", "is_private": false, "bug_id": 3840, "id": 25045, "time": "2002-10-23T13:47:07Z", "creator": "oleg@tkachenko.com", "creation_time": "2002-10-23T13:47:07Z", "attachment_id": null}, {"count": 4, "tags": [], "text": "I'm quite curious as to know how this is killing Tomcat anyway.  We used FOP in \nTomcat without issue for months before we moved to Jetty for unrelated reasons.", "is_private": false, "bug_id": 3840, "id": 25046, "time": "2002-10-23T13:49:03Z", "creator": "raultman@fcci-group.com", "creation_time": "2002-10-23T13:49:03Z", "attachment_id": null}, {"count": 5, "attachment_id": null, "creator": "jswap@yahoo.com", "is_private": false, "id": 25051, "time": "2002-10-23T15:44:53Z", "bug_id": 3840, "creation_time": "2002-10-23T15:44:53Z", "tags": [], "text": "I am the original poster of this bug.  I am using FOP (I think it's v2.1) with \nTomcat v3.2 and FOP would sometimes kill Tomcat's JVM.  I traced the problem to \nthe System.exit() call in BufferManager.java.  I removed this call in my local \nbuild and the problem went away.  I have been using my modified FOP build ever \nsince (over a year) with no problems.  I cannot comment on whether or not the \nbug is fixed in later FOP versions, as I have not tried them."}, {"count": 6, "attachment_id": null, "bug_id": 3840, "text": "batch transition pre-FOP1.0 resolved+fixed bugs to closed+fixed", "id": 155957, "time": "2012-04-01T06:50:20Z", "creator": "gadams@apache.org", "creation_time": "2012-04-01T06:50:20Z", "tags": [], "is_private": false}]