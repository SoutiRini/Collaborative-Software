[{"count": 0, "tags": [], "creator": "david.berkman@reardencommerce.com", "text": "Clear appenders call on logger calls a helper which calls close on the appenders, even though appenders are shared objects and may still be active in other loggers, or re-used later. You can't assume that removal equates to a desire to close.", "id": 117801, "time": "2008-06-18T17:10:55Z", "bug_id": 45231, "creation_time": "2008-06-18T17:10:55Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "creator": "thorbjoern@gmail.com", "text": "Please attach a testcase demonstrating the behaviour you are reporting.", "id": 118252, "time": "2008-07-03T13:37:24Z", "bug_id": 45231, "creation_time": "2008-07-03T13:37:24Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 45231, "is_private": false, "text": "(In reply to comment #1)\n> Please attach a testcase demonstrating the behaviour you are reporting.\n> \n\nYou've got to be kidding. It's directly in your code. Here's the stack trace...\n\n\tat org.apache.log4j.helpers.AppenderAttachableImpl.removeAllAppenders(AppenderAttachableImpl.java:141)\nat org.apache.log4j.Category.removeAllAppenders(Category.java:891)\n\nCalling Category.removeAllAppenders() results in a call to AppenderAttachableImpl.removeAllAppenders(), probably because this is set as the default listener for the remove event internally. Looking at the code fro the removeAllAppenders method in AppenderAttachableImpl, we see...\n\n  public\n  void removeAllAppenders() {\n    if(appenderList != null) {\n      int len = appenderList.size();      \n      for(int i = 0; i < len; i++) {\n\tAppender a = (Appender) appenderList.elementAt(i);\n\ta.close();\n      }\n      appenderList.removeAllElements();\n      appenderList = null;      \n    }\n  }\n\nLook at that a.close(). Why is this method calling close on an Appender simply because it has been removed from a logger? Appenders are shared objects. I wonder how the other loggers that Appender is attached to will feel about it being closed underneath them? What happens when I re-use this Appender?\n\nIn my opinion this is incorrect behavior.", "id": 118259, "time": "2008-07-03T14:32:48Z", "creator": "david.berkman@reardencommerce.com", "creation_time": "2008-07-03T14:32:48Z", "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 45231, "attachment_id": null, "text": "(In reply to comment #2)\n \n> You've got to be kidding. It's directly in your code. Here's the stack trace...\n\nI am not kidding, and it is not my code (you can see that in the Subversion history).  By providing a testcase it can be demonstrated that the bug exists, and that the patch removed the bug.  Otherwise we can only guess what caused the bug and if the handwaving code introduced fixed it in the way you expected.\n\nHence, please provide a testcase.\n\n> In my opinion this is incorrect behavior.\n\nMost likely. \n", "id": 118271, "time": "2008-07-03T16:47:35Z", "creator": "thorbjoern@gmail.com", "creation_time": "2008-07-03T16:47:35Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 45231, "attachment_id": null, "is_private": false, "id": 123870, "time": "2009-01-08T09:09:50Z", "creator": "carnold@apache.org", "creation_time": "2009-01-08T09:09:50Z", "text": "There is enough info to address the bug, so I'm dropping the NEEDINFO designation.\n\nThe behavior described is undesirable but long established.  I don't think that removing the \"a.close()\" would be acceptable since some app might depend on removeAllAppenders() closing the appenders.  However, I could see only closing the appenders that are not otherwise attached, however detecting that might be complicated."}]