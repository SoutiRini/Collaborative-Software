[{"count": 0, "tags": [], "bug_id": 56070, "text": "previously,my servlet:\n(WebappClassLoader)getClass().getClassLoader().getResource(\"/../tmplog/logs\")\nreturn url:\n/myweb/../tmplog/logs\nand my security validation code:\n-------------\nif (url.indexOf(\"/../\")>-1)\n  return false;\n-------------will false!!!!\nbut now:\nit's will be:\n/tmplog/logs\nif (url.indexOf(\"/../\")>-1)\n  return false;\n---------------will true!!!!!\n\nso,the resourse url is \"/myweb/../tmplog/logs\", not \"/tmplog/logs\".", "id": 172721, "time": "2014-01-28T04:39:18Z", "creator": "fortomcat@126.com", "creation_time": "2014-01-28T04:39:18Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "text": "There is nothing in the Servlet specification or the Javadoc for ClassLoader.getResource() that states that if the input is not normalized that this must be retained in the provided URL.\n\nYour security validation code should be testing the input to ClassLoader.getResource() rather than the output. Even then, depending on the rest of the code, that may be very easy to bypass.\n\nNote that Tomcat will not allow an application to access a resource that it outside of the web application context root. \"/\" returns the path to \"/WEB-INF/classes\", \"../..\" returns the path to the context root and \"../../..\" returns null. This is more to detect bugs than a security measure as an application could easily just access the file system directly. You need to run under a security manager to prevent that sort of thing.", "attachment_id": null, "bug_id": 56070, "id": 172736, "time": "2014-01-28T13:45:20Z", "creator": "markt@apache.org", "creation_time": "2014-01-28T13:45:20Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 56070, "attachment_id": null, "id": 172740, "time": "2014-01-28T14:34:07Z", "creator": "fortomcat@126.com", "creation_time": "2014-01-28T14:34:07Z", "is_private": false, "text": "my site real path is :\n/home/tomcat/webapps/ROOT/\nand this case resource url:\n/home/tomcat/webapps/ROOT/WEB-INF/classes/myweb/../tmplog/logs\nit isn't out site my web.\n\nAnd ,StandardRoot had the \"allowLinking\",not need normalize url.\nif \"normalized url\" the \"allowLinking\" not work."}, {"count": 3, "tags": [], "text": "That previous comment does not make any sense. My comment #1 above stands. If you require further assistance please use the Apache Tomcat users mailing list.", "attachment_id": null, "bug_id": 56070, "id": 172741, "time": "2014-01-28T14:37:26Z", "creator": "markt@apache.org", "creation_time": "2014-01-28T14:37:26Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 56070, "is_private": false, "text": "How the:\nif (!allowLinking||crossContext)\n{\n  normalizing...\n}", "id": 172742, "time": "2014-01-28T14:42:21Z", "creator": "fortomcat@126.com", "creation_time": "2014-01-28T14:42:21Z", "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 56070, "is_private": false, "text": "\nif (!allowLinking||!crossContext)\n{\n  normalizing...\n}\n\n\nor\n\nprivate Boolean disallowOutSite;\n\npublic void setDisallowOutSite(Boolean disallowOutSite){\n this.disallowOutSite=disallowOutSite;\n}\n\nif (disallowOutSite)\n{\n  normalizing...\n}", "id": 172743, "time": "2014-01-28T14:46:39Z", "creator": "fortomcat@126.com", "creation_time": "2014-01-28T14:46:39Z", "attachment_id": null}, {"count": 6, "tags": [], "bug_id": 56070, "text": "infact,the \"crossContext\" needed \"../../..\"", "id": 172744, "time": "2014-01-28T14:49:21Z", "creator": "fortomcat@126.com", "creation_time": "2014-01-28T14:49:21Z", "is_private": false, "attachment_id": null}, {"count": 7, "tags": [], "text": "You need to stop spamming this issue with meaningless code snippets with no context and direct your query to the Apache Tomcat users mailing list. I strongly suggest you read this first:\nhttp://www.catb.org/~esr/faqs/smart-questions.html\n\nIf you continue to spam this issue, your account will be disabled.", "is_private": false, "bug_id": 56070, "id": 172745, "time": "2014-01-28T14:50:08Z", "creator": "markt@apache.org", "creation_time": "2014-01-28T14:50:08Z", "attachment_id": null}]