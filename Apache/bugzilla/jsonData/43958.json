[{"count": 0, "tags": [], "creator": "t.wijnands@inxights.com", "attachment_id": null, "text": "I\u2019m having a setup on Gentoo, Apache 2.2.6 with a setup that relies on\nmod_proxy_balancer: Apache is the proxy and proxies request to 3 workers (in\nfact, Mongrel which is a basic HTTP server server Ruby code).\n \nRewriting rules are in places and on normal use no issues, so I guess the setup\nis correct.\n\nIn my testing enviroment (i.e. I have full control over de requests sent to the\nsetup), I experience the following:\n\nSetup A:\n\n    <Proxy balancer://ips.dev.test_setup.com.mongrel_cluster>\n        BalancerMember http://localhost:8010\n        BalancerMember http://localhost:8011\n        BalancerMember http://localhost:8012\n    </Proxy>\n\nI request an action that takes a long time to execute (10 minutes). This is for\ntesting purposes. Than I fire subsequents requests with normal execution time (<\n1 second). The results are:\n\n-          worker 8010 gets the first long request and starts handling this\n-          worker 8011 and 8012 get the next two requests\n-          request 4 is proxied to 8010 where it has to wait for the long\nrequest to finish before it gets served.\n\nThis is expected behaviour.\n \n\nNext, I\u2019ve changed the configuration to\n\nSetup B:\n\n    <Proxy balancer://ips.dev.test_setup.com.mongrel_cluster>\n        BalancerMember http://localhost:8010 max=1\n        BalancerMember http://localhost:8011 max=1\n        BalancerMember http://localhost:8012 max=1\n    </Proxy>\n\nI\u2019m repeating the experiment. The results are the same as in setup A. In my\nopinion this is unexpected behaviour: 8010 gets the first long request and while\nserving this, it should not get any subsequent request until the initial request\n has been fully served. IMHO this is the meaning of parameter MAX=1. The other\nworkers should handle the subsequent requests. (I fire the request by hand, with\na large enough interval to get a free worker available). \n\nMore-over if I look in the balancer-manager, all workers have state Ok. I would\nexpect to see a state Busy (or something like that for 8010). This seems related\nto bug #42668.\n\nEffectively, I\u2019m looking for a solution that one \u2018bad performance\u2019 thread does\nnot hurt the overall response", "id": 111088, "time": "2007-11-26T01:26:58Z", "bug_id": 43958, "creation_time": "2007-11-26T01:26:58Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 43958, "text": "You need to set the acquire parameter correctly to your workers:\n\n<Proxy balancer://ips.dev.test_setup.com.mongrel_cluster>\n        BalancerMember http://localhost:8010 max=1 acquire=100\n        BalancerMember http://localhost:8011 max=1 acquire=100\n        BalancerMember http://localhost:8012 max=1 acquire=100\n</Proxy>\n\nset it to 100ms.", "id": 111092, "time": "2007-11-26T05:42:43Z", "creator": "rpluem@apache.org", "creation_time": "2007-11-26T05:42:43Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 43958, "text": "Dear Ruediger,\n\nThanks for the input\nI've tested with acquire=100; This does not help.\n\nFrom the docs:\n\"acquire  \t-  \tIf set this will be the maximum time to wait for a free\nconnection in the connection pool. If there are no free connections in the pool\nthe Apache will return SERVER_BUSY status to the client.\"\n\nThe problem at hand is *not* that there is no free worker available (in that\ncase setting the acquire parameter is correct). The problem at hand is: there\nare free workers available. However, they are not selected. Instead the 'busy'\nworker is selected, in spite of the fact that it is configured to receive at max\n1 request.", "id": 111094, "time": "2007-11-26T06:37:23Z", "creator": "t.wijnands@inxights.com", "creation_time": "2007-11-26T06:37:23Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 43958, "attachment_id": null, "id": 111114, "time": "2007-11-26T13:23:00Z", "creator": "rpluem@apache.org", "creation_time": "2007-11-26T13:23:00Z", "is_private": false, "text": "(In reply to comment #2)\n> Dear Ruediger,\n> \n> Thanks for the input\n> I've tested with acquire=100; This does not help.\n> \n> From the docs:\n> \"acquire  \t-  \tIf set this will be the maximum time to wait for a free\n> connection in the connection pool. If there are no free connections in the pool\n> the Apache will return SERVER_BUSY status to the client.\"\n> \n> The problem at hand is *not* that there is no free worker available (in that\n\nNo the problem is that there are no *free* connections available for some worker\nand this is what acquire should prevent. In the unbalanced case this causes a\nHTTP_SERVICE_UNAVAILABLE to be returned to the client if no free connection can\nbe obtained from the worker in acquire ms time and in the balanced case it\nshould cause a fail over to the next worker after this time. If it does not (and\naccording to you it does not) this is a bug.\n\n"}, {"count": 4, "tags": [], "bug_id": 43958, "attachment_id": null, "id": 111122, "time": "2007-11-26T23:38:55Z", "creator": "t.wijnands@inxights.com", "creation_time": "2007-11-26T23:38:55Z", "is_private": false, "text": "Ok. Is there a way I can contribute more testdata about this situation, which\nwill help the developer fixing this?"}]