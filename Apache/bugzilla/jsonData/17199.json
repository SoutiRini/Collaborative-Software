[{"count": 0, "attachment_id": null, "bug_id": 17199, "text": "Hi,\n\nThe included patch allows custom conditions.\n\nBackground:\n\nCurrently in ant one can implement custom mappers, selectors and\nfilters (see Java Development with Ant, chapter 20).\nHowever there is no way to implement custom conditions. Also\nthe usage of the custom filters, mappers and selectors in build files\nis not nice, in comparison to custom tasks and datatypes.\n\nThe idea of the patch is to allow the current custom datatypes to be\nused as conditions (and mapper, filters and selectors). The classes\nhandling conditions, filters and selectors implement DynamicConfigurator\ncreate the custom object from the datatype api.\n\nThe following examples are from the testsuite.\nexample: custom condition\n\n<target name=\"custom-condition\">\n\n    <path id=\"testclasses\">\n      <pathelement location=\"../../../../build/testcases\" />\n      <pathelement path=\"${java.class.path}\" />\n    </path>\n\n    <typedef\n      name=\"custom_condition\" \n      classname=\"org.apache.tools.ant.taskdefs.condition.CustomCondition\"\n      classpathref=\"testclasses\"\n    />\n    <condition property=\"custom-condition-true\">\n      <custom_condition testvalue=\"true\"/>\n    </condition>\n    <echo>${custom-condition-true}</echo>\n  </target>\n\ncustom filter:\n\n  <target name=\"test-custom-filter\">\n    <path id=\"testclasses\">\n      <pathelement location=\"../../../../build/testcases\" />\n      <pathelement path=\"${java.class.path}\" />\n    </path>\n    \n    <typedef\n      name=\"custom_filter\" \n      classname=\"org.apache.tools.ant.types.CustomFilter\"\n      classpathref=\"testclasses\"\n    />\n\n    <delete file=\"dest_custom.txt\"/>\n    <copy file=\"custom_filter.txt\" tofile=\"dest_custom.txt\">\n      <filterchain>\n        <custom_filter replace=\"@\" with=\"*\"/>\n      </filterchain>\n    </copy>\n  </target>\n\nMappers are done differently:\nthe datatype is used as an attribute.\n\n  <target name=\"custom_mapper\">\n    <path id=\"testclasses\">\n      <pathelement location=\"../../../../build/testcases\" />\n      <pathelement path=\"${java.class.path}\" />\n    </path>\n    \n    <typedef\n      name=\"custom_mapper\" \n      classname=\"org.apache.tools.ant.types.CustomMapper\"\n      classpathref=\"testclasses\"\n    />\n    <mkdir dir=\"customcopytest\"/>\n    <copy todir=\"customcopytest\">\n      <fileset dir=\"../../../main\">\n        <include name=\"**/taskdefs/*.java\"/>\n      </fileset>\n      <mapper type=\"custom_mapper\"/>\n    </copy>\n  </target>\n\n\n---------------------\n\nChanges to src/main/org/apache/tools/ant:\n\nTaskAdapter.java:\n    The setProject() method has been overridden to set the project on the\n    proxied task. If this is not done, createDynamicElement in\n    taskdefs/condition/ConditionBase is called before setProject.\n\ntaskdefs/condition/ConditionBase.java:\n    Implements DynamicConfigurator.createDynamicElement(String name).\n    this method creates the datatype (name), checks if it is a condition\n    and addes it to the conditions.\n\ntypes/FilterChain.java:\n    same as ConditionBase\n\ntypes/AbstractFileSet.java:\n    same as ConditionBase.\n\ntypes/Mapper.java:\n    *** THIS IS A CHANGE TO THE CURRENT API *******\n    The setType(MapperType type) method has been changed to\n    setType(String type).\n    ****************************************************\n    The getImplementation() method has been modified to\n    check if the name is a known mapper and if not to treat\n    it as a datatype and use the getProject().createDataType()\n    api call to create the mapper.\n\n\ntaskdefs/optional/RenameExtensions.java:\n   This as been modified to use the Mapper.setType(String) method.\n\n\nChanges to unit tests:\n\ntests have been added to ensure that the mechanism works. Also\nthe mapper java test code has been changed to reflect the new\napi.\n\nPatch information:\nThe patch is against the current cvs (or a few hours ago) and\ngenerated using:\n\ndiff -Naur ant ant-custom > custom-patch\n\nThe patch was then applied to a copy of ant (cvs source) \nand the unit tests were run.", "id": 31588, "time": "2003-02-19T12:36:18Z", "creator": "peter.reilly@corvil.com", "creation_time": "2003-02-19T12:36:18Z", "tags": [], "is_private": false}, {"count": 1, "tags": [], "text": "Created attachment 4921\npatch to implement custom selectors", "attachment_id": 4921, "id": 31589, "creation_time": "2003-02-19T12:38:45Z", "time": "2003-02-19T12:38:45Z", "creator": "peter.reilly@corvil.com", "bug_id": 17199, "is_private": false}, {"count": 2, "tags": [], "bug_id": 17199, "attachment_id": null, "text": "Add the patch as an attachment.\nNote that the name is custom-patch.gz\nand one needs to gunzip it.\nI could send an uncompressed file if necessary.\nPeter.", "id": 31590, "time": "2003-02-19T12:42:25Z", "creator": "peter.reilly@corvil.com", "creation_time": "2003-02-19T12:42:25Z", "is_private": false}, {"count": 3, "attachment_id": null, "bug_id": 17199, "text": "Thanks for this thorough patch, of a very valuable (to me) addition.\n\nI have two comments though:\n\n1) I'm not really fond of 'miss-using' <typedef> to declare you're custom \ncondition/filter/mapper/selector. I think you should either add new \n<conditiondef> / <selectordef> / etc... declarations for each type of \nextension, and/or directly declare these extension at the point of use, like in:\n\n<target name=\"custom-condition\">\n    <path id=\"testclasses\" path=\"...\" />\n    <typedef\n      name=\"custom_condition\" \n      classname=\"org.apache.tools.ant.taskdefs.condition.CustomCondition\"\n      classpathref=\"testclasses\"\n    />\n    <condition property=\"custom-condition-true\">\n      <custom name=\"custom_condition\"\n              classname=\"com.acme.CustomCondition\"\n              classpathref=\"testclasses\">\n        <custom_condition testvalue=\"true\"/>\n      <custom />\n    </condition>\n    <echo>${custom-condition-true}</echo>\n  </target>\n\nPerhaps instead of having one <somethingdef> for various types of \nclasses/interfaces, we could have a single <extensiondef> new task taking an \nadditional 'implements' attribute?\n\n<extensiondef name=\"mycondition\"\n              implements=\"org.apache.tools.ant.taskdefs.condition.Condition\"\n              classname=\"com.acme.MyCondition\"\n              classpathref=\"testclasses\" />\n\n2) Changing the API of <mapper>... Always better to keep the current API, and \nadd a new way to declare a custom mapper.\n\nBut beside this nit picking, this is a great addition, which was something that \nhad been bothering me with Ant.\n\nI hope Stefan, Conor, and others will look at it, and comment on it, so it can \nmake it to 1.6!\n\nThanks, --DD", "id": 31773, "time": "2003-02-21T18:14:02Z", "creator": "ddevienne@lgc.com", "creation_time": "2003-02-21T18:14:02Z", "tags": [], "is_private": false}, {"count": 4, "tags": [], "bug_id": 17199, "attachment_id": null, "id": 31775, "time": "2003-02-21T18:35:33Z", "creator": "peter.reilly@corvil.com", "creation_time": "2003-02-21T18:35:33Z", "is_private": false, "text": "Thanks for your comments. \n \na) \nI initially had a conditiondef, fiterdef, mapperdef and selectordef, they were basicly the \nsame as typedef and taskdef. The code was a cut and paste of \nthe code for typedef - in ant/Project.java. It just looked a bit silly \nto have 6 maps of definititons. After looking at the code in \nant/ComponentHelper.createComponent(), the comments suggested that in the \nfuture the difference between tasks and datatypes would disappear, I realized that \nif I used typedefs, it would probally fit in better to the way ant is meant to work - \nand a lot of code disappears (which is also a good thing). \n \nb) I would have to agree on the mapper mod, initialy I did have a seperate \n   attribute, but I could not think of a good name for it. The change I made \n   will affect custom extensions that use the mapper class, but it does not \n   affect build scripts. "}, {"count": 5, "tags": [], "creator": "ddevienne@lgc.com", "attachment_id": null, "text": "What format is the attachment? It's not a ZIP, and the only intellegible string \nI can see is 'custom-patch'. Could you please re-submit as a .zip (so I can \neasily open it on Windows)? Thanks, --DD", "id": 31881, "time": "2003-02-24T22:55:24Z", "bug_id": 17199, "creation_time": "2003-02-24T22:55:24Z", "is_private": false}, {"count": 6, "tags": [], "bug_id": 17199, "attachment_id": 5005, "id": 31914, "time": "2003-02-25T14:22:27Z", "creator": "peter.reilly@corvil.com", "creation_time": "2003-02-25T14:22:27Z", "is_private": false, "text": "Created attachment 5005\nNew patch file: use mapper map=\"custom\" instead of mapper type=\"custom\""}, {"count": 7, "tags": [], "bug_id": 17199, "text": "Made the following changes to the patch:\n1) changed signature of mapper back to orignal ant and added an extra\nattribute to mapper <mapper map=\"custom or current\">\n\nThis means that current java code that uses Mapper.java will\nstill work.\n\n2) As a result of this, the changes to taskdefs/optional/RenameExtensions.java have\nbeen reverted.\n\n3) The patch was compressed (using gzip), it is now in uncompressed format.\n\n4) Tested against current cvs of 25-feb-03.\n \nThe use of Mapper is now:\n  <target name=\"custom_mapper\">\n    <path id=\"testclasses\">\n      <pathelement location=\"../../../../build/testcases\" />\n      <pathelement path=\"${java.class.path}\" />\n    </path>\n    \n    <typedef\n      name=\"custom_mapper\" \n      classname=\"org.apache.tools.ant.types.CustomMapper\"\n      classpathref=\"testclasses\"\n    />\n    <mkdir dir=\"customcopytest\"/>\n    <copy todir=\"customcopytest\">\n      <fileset dir=\"../../../main\">\n        <include name=\"**/taskdefs/*.java\"/>\n      </fileset>\n      <mapper map=\"custom_mapper\"/>\n    </copy>\n  </target>\n\n\n", "id": 31915, "time": "2003-02-25T14:31:05Z", "creator": "peter.reilly@corvil.com", "creation_time": "2003-02-25T14:31:05Z", "is_private": false, "attachment_id": null}, {"count": 8, "tags": [], "creator": "peter.reilly@corvil.com", "attachment_id": 5006, "text": "Created attachment 5006\nzipped file of patch and  resultant patched core classes", "id": 31916, "time": "2003-02-25T14:32:40Z", "bug_id": 17199, "creation_time": "2003-02-25T14:32:40Z", "is_private": false}, {"count": 9, "tags": [], "bug_id": 17199, "attachment_id": null, "id": 31917, "time": "2003-02-25T14:50:52Z", "creator": "peter.reilly@corvil.com", "creation_time": "2003-02-25T14:50:52Z", "is_private": false, "text": "I have added a zip file containing\n  1) the patch custom.patch2\n  2) the resultant patched core java files:\n           TaskAdapter.java      (src/main/org/apache/tools/ant)\n           ConditionBase.java   (src/main/org/apache/tools/taskdefs/condition)\n           AbstractFileSet.java  (src/main/org/apache/tools/types)\n           FilterChain.java         (src/main/org/apache/tools/types)\n           Mapper.java               (src/main/org/apache/tools/types)\n   3) the patch file I use to\n               - copy compiled ant.jar and optional.jar to ant home\n               - comment out parts of the test CommandlineJavaTest that\n                  does not work on my system\n\nTest of patch:\n\n 1) check out ant\n     cvs -d :pserver:anoncvs@cvs.apache.org:/home/cvspublic checkout ant\n\n  2) apply the patch\n      >cd ant\n      >patch -Np1 -i [path to]custom.patch2\n\n      apply local patch\n      >patch -Np1 -i [path to]local.patch\n\n      compile ant\n      >ant\n      \n       copy the ant.jar and optional.jar to ${ant.home}/lib\n       (I need to do this to get the tests to work)\n\n      >ant t\n\n       run the tests. - Important, it seems that one needs to be\n       in the top level directory to run the tests.\n\n      > ant test\n"}, {"count": 10, "tags": [], "creator": "peter.reilly@corvil.com", "text": "Created attachment 5715\nNew patch against current ant cvs", "id": 34758, "time": "2003-04-08T20:48:32Z", "bug_id": 17199, "creation_time": "2003-04-08T20:48:32Z", "is_private": false, "attachment_id": 5715}, {"count": 11, "attachment_id": null, "bug_id": 17199, "text": "I have made a new patch against the current ant cvs.\nThis patch is now dependent on the setproject patch - 18613,\nalso I have removed the filterchain mod as it is covered by another patch - \n18312.\nI moved stuff a little around so that there is no new files, only patches\nto the current ant files and tests.\n\nChanged files are:\n\nsrc/main/org/apache/tools/ant/types/Mapper.java:\n   add new attribute map\nsrc/etc/testcases/types/mapper.xml:\n   add test for dynamic mapper\n   add test for dynamic file selector\nsrc/testcases/org/apache/tools/ant/types/MapperTest.java\n   add test for dynamic mapper\n   add test for dynamic file selector\nsrc/main/org/apache/tools/ant/types/AbstractFileSet.java\n   add dynamic file selector\nsrc/main/org/apache/tools/ant/taskdefs/condition/ConditionBase.java\n   add dynamic condition\nsrc/etc/testcases/taskdefs/condition.xml\n   add test for dynamic condition\nsrc/testcases/org/apache/tools/ant/taskdefs/ConditionTest.java\n   add test for dynamic condition\n\n", "id": 34759, "time": "2003-04-08T20:56:35Z", "creator": "peter.reilly@corvil.com", "creation_time": "2003-04-08T20:56:35Z", "tags": [], "is_private": false}, {"count": 12, "tags": [], "bug_id": 17199, "attachment_id": null, "text": "Most of this is in ant now. - I will open\na mapper report later.", "id": 45332, "time": "2003-10-10T08:29:22Z", "creator": "peter.reilly@corvil.com", "creation_time": "2003-10-10T08:29:22Z", "is_private": false}]