[{"count": 0, "tags": [], "text": "We are using ant to build our Vitria application. One of the requirements is to run a utility \ncalled \"importidl\". The files in a given directory need to be imported in a particular order. We \ncreated a flat file with the files in the required order and used it in fileset statement as shown in \nthe extract below:\n\n     <apply executable=\"${vitria_bin}/importidl\"\n           \ndir=\"${idl_dir}\">\n        <arg value=\"-verbose -register\"/>\n        <fileset \ndir=\"${idl_dir}/${idl_modules}/connector/crm/\"\n         \nincludesfile=\"${idl_dir}/${idl_modules}/connector/crm/buildfiles\"/>\n\nFor some \nreason, ant re-orders the files according to the last modified date, instead of taking the files in \nthe order in which they appear in the file \"buildfiles\" (i.e. order is same as if specifying \nincludes=\"*.idl\"). The only workaround we have come up with is to <apply> each file \nindependently, which is a major pain (both for setup and maintenance). Is there a standard way of \nestablishing the dependencies?\n\nThanks.", "attachment_id": null, "id": 29082, "creator": "richard@dftltd.demon.co.uk", "time": "2003-01-09T17:52:48Z", "bug_id": 15929, "creation_time": "2003-01-09T17:52:48Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 15929, "text": "Ant doesn't resort files, it simply returns them in the same order Java's File#list\ndoes. <fileset>'s are - by our definition - unordered.  The order is dependent on\nOS, JVM vendor and even JVM version.\n", "id": 29247, "time": "2003-01-13T13:21:14Z", "creator": "bodewig@apache.org", "creation_time": "2003-01-13T13:21:14Z", "is_private": false, "attachment_id": null}, {"attachment_id": null, "tags": [], "creator": "ddevienne@lgc.com", "is_private": false, "count": 2, "id": 29298, "time": "2003-01-13T20:19:58Z", "bug_id": 15929, "creation_time": "2003-01-13T20:19:58Z", "text": "Sure Stefan, but...\n\nShouldn't <apply> accept a <filelist> as well, and shouldn't <filelist> accept \nan external file listing the files (in the correct order)???\n\nAnd more importantly, shouldn't all tasks accept a generic FileCollection data \ntype that fileset/filelist/etc would implement??? This polymorphism of \ndatatypes can be achieved with references, and each datatype would order the \nfiles or not as it pleases from datatype specific criteria. Tasks would just \nprocess the files in whatever order the concrete data type returns them ;-)\n\n--DD"}, {"count": 3, "tags": [], "creator": "bodewig@apache.org", "text": "OK, reopening as enhancement request.\n\nI don't see <fileset> and <filelist> as polymorphic ideas of the same concept, as\nthey do have different semantics that the task has to be aware of IMHO.", "id": 29339, "attachment_id": null, "bug_id": 15929, "creation_time": "2003-01-14T07:59:29Z", "time": "2003-01-14T07:59:29Z", "is_private": false}, {"text": "support added in nightly build 2003-05-20.", "tags": [], "bug_id": 15929, "is_private": false, "count": 4, "id": 37423, "time": "2003-05-19T12:21:33Z", "creator": "bodewig@apache.org", "creation_time": "2003-05-19T12:21:33Z", "attachment_id": null}]