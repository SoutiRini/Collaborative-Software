[{"count": 0, "tags": [], "creator": "michele.bissoli.83@gmail.com", "attachment_id": 33425, "is_private": false, "id": 187563, "time": "2016-01-12T08:22:16Z", "bug_id": 58838, "creation_time": "2016-01-12T08:22:16Z", "text": "Created attachment 33425\ntestFile.xls\n\nHi all,\nwhen I try to read some values into the xls (as attach) I obtain that a lot of cells result as null when they aren't.\n\nExample code: print all the cells in the first row that contain a value (not null)\n\nHSSFWorkbook workbook = new HSSFWorkbook(new FileInputStream(pathToTestFileXls));\nHSSFSheet sheet = workbook.getSheet(\"InitCharge\");\nint lastCol = CellReference.convertColStringToIndex(\"BC\");\nfor (int c=0; c <= lastCol; c++) {\n    HSSFCell cell = sheet.getRow(1).getCell(c);\n    if (cell != null)\n        System.out.print(new CellReference(1, c).formatAsString() + \", \");\n}\n\nResult:\nA2, B2, AA2, AD2,\n\nThis is very strange! Only few cells doesn't contain a value!\nEven stranger: open the xls with Excel, do NOTHING, click save, re-execute the same code, result:\nA2, B2, Z2, AA2, AB2, AD2, AE2, AG2, AH2, AI2, AJ2, AK2, AL2, AM2, AN2, AO2, AP2, AQ2, AR2, AS2, AT2, AU2, AV2, AW2, AX2, AY2, AZ2, BA2, BB2, BC2, \n\nThe xls used as input was generated previously with POI.\n\nThanks,\nMichele"}, {"count": 1, "tags": [], "creator": "dominik.stadler@gmx.at", "attachment_id": null, "is_private": false, "id": 187571, "time": "2016-01-12T16:33:13Z", "bug_id": 58838, "creation_time": "2016-01-12T16:33:13Z", "text": "Can you also share the code that creates the strange Excel sheet?"}, {"count": 2, "attachment_id": null, "creator": "onealj@apache.org", "is_private": false, "id": 187574, "time": "2016-01-12T17:47:57Z", "bug_id": 58838, "creation_time": "2016-01-12T17:47:57Z", "tags": [], "text": "Could you also try this with explicitly setting the CellCreationPolicy[1] to RETURN_NULL_AND_BLANK or RETURN_BLANK_AS_NULL before calling getCell?\n\n[1] https://poi.apache.org/apidocs/org/apache/poi/ss/usermodel/class-use/Row.MissingCellPolicy.html"}, {"count": 3, "tags": [], "creator": "michele.bissoli.83@gmail.com", "attachment_id": null, "id": 187599, "time": "2016-01-13T09:06:47Z", "bug_id": 58838, "creation_time": "2016-01-13T09:06:47Z", "is_private": false, "text": "Setting RETURN_NULL_AND_BLANK or RETURN_BLANK_AS_NULL has no effects.\n\nThe code \"that creates the strange Excel sheet\" is quite complex, I add it as attachment (BLSintesi_VerReport.java).\n\nOne of the cell that I need to read is writed in xls in BLSintesi_VerReport.java:174\n\nI add as attachment also other two classes used to write the xls file (XlsUtil.java, BLSummaryReportXlsStyles.java).\n\nThanks"}, {"count": 4, "tags": [], "creator": "michele.bissoli.83@gmail.com", "attachment_id": 33430, "id": 187601, "time": "2016-01-13T09:07:35Z", "bug_id": 58838, "creation_time": "2016-01-13T09:07:35Z", "is_private": false, "text": "Created attachment 33430\nBLSintesi_VerReport.java"}, {"count": 5, "tags": [], "creator": "michele.bissoli.83@gmail.com", "attachment_id": 33431, "id": 187602, "time": "2016-01-13T09:07:57Z", "bug_id": 58838, "creation_time": "2016-01-13T09:07:57Z", "is_private": false, "text": "Created attachment 33431\nBLSintesi_XlsStyles.java"}, {"count": 6, "tags": [], "creator": "michele.bissoli.83@gmail.com", "text": "Created attachment 33432\nXlsUtil.java", "id": 187603, "time": "2016-01-13T09:08:21Z", "bug_id": 58838, "creation_time": "2016-01-13T09:08:21Z", "is_private": false, "attachment_id": 33432}, {"count": 7, "tags": [], "text": "(In reply to Michele from comment #3)\n \n> I add as attachment also other two classes used to write the xls file\n> (XlsUtil.java, BLSummaryReportXlsStyles.java).\n\nSorry, the correct file is BLSintesi_XlsStyles.java and not BLSummaryReportXlsStyles.java.", "is_private": false, "bug_id": 58838, "id": 187604, "time": "2016-01-13T09:09:41Z", "creator": "michele.bissoli.83@gmail.com", "creation_time": "2016-01-13T09:09:41Z", "attachment_id": null}, {"count": 8, "tags": [], "creator": "dominik.stadler@gmx.at", "attachment_id": null, "text": "Hmm, not easy to reproduce with all the SQL statements and other stuff, any chance of a more reduced test-case which can be run without any of your infrastructure?", "id": 187628, "time": "2016-01-13T20:10:09Z", "bug_id": 58838, "creation_time": "2016-01-13T20:10:09Z", "is_private": false}, {"count": 9, "tags": [], "creator": "michele.bissoli.83@gmail.com", "attachment_id": null, "id": 187651, "time": "2016-01-14T07:40:34Z", "bug_id": 58838, "creation_time": "2016-01-14T07:40:34Z", "is_private": false, "text": "Unluckyly, I don't know why some cell results null and I am not able to create a small program for reproduce the same problem.\n\nBut if I had said I get the report from another program/office/collegue or the report was created with a tool different from POI instead create it by myself with POI?\nThe problem remains the same.\n\nI don't understand why I can't read some cells when these cells have correctly a value (or a formula) and I can see these values using Excel. So the values exist (and they are saved) somewhere into the file and POI isn't able to read it, I don't know why."}, {"count": 10, "tags": [], "creator": "dominik.stadler@gmx.at", "attachment_id": null, "id": 188427, "time": "2016-02-15T08:47:25Z", "bug_id": 58838, "creation_time": "2016-02-15T08:47:25Z", "is_private": false, "text": "initial attempt at a unit test for this:\n\n    @Test\n    public void testBug58838() throws IOException {\n        Workbook wb = HSSFTestDataSamples.openSampleWorkbook(\"58838.xls\");\n\n        Sheet sheet = wb.getSheet(\"InitCharge\");\n        Row row = sheet.getRow(1);\n\n        //int lastCol = CellReference.convertColStringToIndex(\"BC\");\n        for (int c=0; c <= row.getLastCellNum(); c++) {\n            Cell cell = row.getCell(c);\n            if (cell != null) {\n                System.out.print(new CellReference(1, c).formatAsString() + \", \");\n            } else {\n                System.out.print(\"(\" + new CellReference(1, c).formatAsString() + \"), \");\n            }\n        }\n\n        wb.close();\n    }"}]