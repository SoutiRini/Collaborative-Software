[{"count": 0, "tags": [], "creator": "pkrupets@yahoo.com", "attachment_id": null, "id": 108030, "time": "2007-09-11T09:15:01Z", "bug_id": 43354, "creation_time": "2007-09-11T09:15:01Z", "is_private": false, "text": "Hello,\n\nNot sure about the version, I got latest stuff from CVS.\nhttp://svn.apache.org/repos/asf/poi/trunk\nif I try to calculate the following: \"DATE(,1,1)\" I'll have an exception.\n\njava.util.EmptyStackException\n\tat java.util.Stack.peek(Stack.java:79)\n\tat java.util.Stack.pop(Stack.java:61)\n\tat\norg.apache.poi.hssf.usermodel.HSSFFormulaEvaluator.internalEvaluate(HSSFFormulaEvaluator.java:326)\n\tat\norg.apache.poi.hssf.usermodel.HSSFFormulaEvaluator.evaluate(HSSFFormulaEvaluator.java:192)\n\tat\norg.apache.poi.hssf.record.formula.functions.DateTest.testValid(DateTest.java:38)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:585)\n\tat junit.framework.TestCase.runTest(TestCase.java:154)\n\tat junit.framework.TestCase.runBare(TestCase.java:127)\n\tat junit.framework.TestResult$1.protect(TestResult.java:106)\n\tat junit.framework.TestResult.runProtected(TestResult.java:124)\n\tat junit.framework.TestResult.run(TestResult.java:109)\n\tat junit.framework.TestCase.run(TestCase.java:118)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:208)\n\tat junit.framework.TestSuite.run(TestSuite.java:203)\n\tat\norg.eclipse.jdt.internal.junit.runner.junit3.JUnit3TestReference.run(JUnit3TestReference.java:130)\n\tat org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)\n\tat\norg.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:460)\n\tat\norg.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:673)\n\tat\norg.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:386)\n\tat\norg.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:196)"}, {"count": 1, "tags": [], "bug_id": 43354, "attachment_id": null, "id": 111406, "time": "2007-12-04T04:18:28Z", "creator": "apache@gagravarr.org", "creation_time": "2007-12-04T04:18:28Z", "is_private": false, "text": "Is this one still a problem, or has it been fixed by the formula parser updates?"}, {"count": 2, "tags": [], "bug_id": 43354, "attachment_id": null, "is_private": false, "id": 121168, "time": "2008-10-03T04:34:32Z", "creator": "antti.koskimaki@joinex.com", "creation_time": "2008-10-03T04:34:32Z", "text": "\nThis does still happen, with r701302. Some earlier versions failed on parse-phase, thus \"hiding\" this bug.\n\nEasy to reproduce:\n\nExcel having \"=IF(B1=1,5,)\" in cell A1\n\nEvaluate it:\ncell = sheet.getRow(0).getCell(0);\nif(cell.getCellType() == HSSFCell.CELL_TYPE_FORMULA) {\n    evaluator.evaluateFormulaCell(cell);\n}\n\nGet exception:\n\njava.util.EmptyStackException\n\tat java.util.Stack.peek(Stack.java:85)\n\tat java.util.Stack.pop(Stack.java:67)\n\tat org.apache.poi.ss.formula.WorkbookEvaluator.evaluateFormula(WorkbookEvaluator.java:300)\n\tat org.apache.poi.ss.formula.WorkbookEvaluator.internalEvaluate(WorkbookEvaluator.java:213)\n\tat org.apache.poi.ss.formula.WorkbookEvaluator.evaluate(WorkbookEvaluator.java:179)\n\tat org.apache.poi.hssf.usermodel.HSSFFormulaEvaluator.evaluateFormulaCellValue(HSSFFormulaEvaluator.java:272)\n\tat org.apache.poi.hssf.usermodel.HSSFFormulaEvaluator.evaluateFormulaCell(HSSFFormulaEvaluator.java:165)\n"}, {"count": 3, "tags": [], "bug_id": 43354, "attachment_id": null, "id": 121246, "time": "2008-10-06T12:21:35Z", "creator": "josh@apache.org", "creation_time": "2008-10-06T12:21:35Z", "is_private": false, "text": "Fixed in svn r702231\n\nYou're right.  POI was fixed a little while back to *parse* missing args properly, but the formula evaluator has never been capable of handling them.\n\nThe new implementation assumes that missing arguments are equivalent to references to blank cells.  The only example found (so far) that needed special attention was the count functions (COUNT and COUNTA) which really *do* count missing args (but not blank cells)."}]