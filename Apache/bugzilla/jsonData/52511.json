[{"count": 0, "tags": [], "bug_id": 52511, "is_private": false, "text": "Created attachment 28196\nerror and exception trace\n\nAny web app not containing a /WEB-INF/classes directory appears to cause an error and exception trace to be logged during web app startup.  This is new Tomcat 7.0.25 (or 7.0.24) and did not occur in 7.0.23.", "id": 153079, "time": "2012-01-23T21:02:08Z", "creator": "jessh@ptc.com", "creation_time": "2012-01-23T21:02:08Z", "attachment_id": 28196}, {"count": 1, "tags": [], "text": "This appears to be due to a change in ContextConfig from:\n\n                        webinfClasses = context.getServletContext().getResource(\n                                \"/WEB-INF/classes\");\n                        processAnnotationsUrl(webinfClasses, webXml);\n\nto\n\n                        NamingEnumeration<Binding>  listBindings =\n                            context.getResources().listBindings(\"/WEB-INF/classes\");\n                        while (listBindings.hasMoreElements()) {\n                            Binding binding = listBindings.nextElement();\n                            if (binding.getObject() instanceof FileDirContext) {\n                                File webInfCLassDir =\n                                    new File(\n                                        ((FileDirContext) binding.getObject()).getDocBase());\n                                processAnnotationsFile(webInfCLassDir, webXml);\n                            }\n                        }\n\nwhich is all well and good except for the differences in behavior when /WEB-INF/classes is not found.  The old code did not consider this an error and just moved on.  The new code considers this an error to be logged including an exception trace.\n\nI'd patch this myself, but I'm not familiar with the code.  This leaves open questions like: should listBindings() throw an exception upon finding no bindings -- or should it really just return an empty enumeration?  What other side-effects will this have?  Or should this ContextConfig code be changed.\n\nOverall this makes any perfectly fine web app without /WEB-INF/classes look suspect/unreliable, which is not appropriate.", "attachment_id": null, "bug_id": 52511, "id": 153080, "time": "2012-01-23T21:06:50Z", "creator": "jessh@ptc.com", "creation_time": "2012-01-23T21:06:50Z", "is_private": false}, {"count": 2, "tags": [], "text": "I'm seeing this, too.", "attachment_id": null, "bug_id": 52511, "id": 153084, "time": "2012-01-23T22:45:17Z", "creator": "drees76@gmail.com", "creation_time": "2012-01-23T22:45:17Z", "is_private": false}, {"count": 3, "tags": [], "text": "Several notes.\n\nFirst, this exception would not happen if either of the following two is true:\n\n1. The web.xml specifies earlier version of servlet specification than 3.0\n2. The web.xml has metadata-complete=\"true\"\n\nNote that using metadata-complete=\"true\" is generally recommended to speed up web application startup. That is if you do not need features disabled by that option. All applications in default Tomcat distributive have metadata-complete=\"true\".\n\n\nSecond, this exception is harmless.\n\nScanning of WEB-INF/classes is skipped, as it should be.\n\nThe exception is caught and logged. It does not impede further annotation scanning. Execution in ContextConfig#webConfig() continues.\n\n\n\nThis issue was introduced in r1209686\n\n> 1210 \tlog.error(sm.getString(\n> 1211 \t\"contextConfig.webinfClassesUrl\"), e);\n\nBTW, the exception handling was changed in r1209686 ,but the log message template above has not been updated.", "is_private": false, "bug_id": 52511, "id": 153091, "time": "2012-01-24T08:48:37Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2012-01-24T08:48:37Z", "attachment_id": null}, {"count": 4, "tags": [], "creator": "jessh@ptc.com", "attachment_id": null, "id": 153101, "time": "2012-01-24T12:54:54Z", "bug_id": 52511, "creation_time": "2012-01-24T12:54:54Z", "is_private": false, "text": "Clearly the exception is harmless -- except that it causes unnecessary confusion, consternation, and loss of trust from those administering, maintaining, and troubleshooting applications on Tomcat 7.0.25 that produce this error.\n\nI'm trying to understand the best fix here so I can patch this onto my 7.0.25 -- as I want other fixes in 7.0.25, but don't want all the downsides of inappropriate error/exception messages, nor do I want to accidentally hide any real errors."}, {"count": 5, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "id": 153227, "time": "2012-01-27T22:10:39Z", "bug_id": 52511, "creation_time": "2012-01-27T22:10:39Z", "is_private": false, "text": "Fixed in trunk and 7.0.x and will be included in 7.0.26 onwards."}]