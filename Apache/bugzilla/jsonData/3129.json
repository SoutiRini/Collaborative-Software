[{"count": 0, "tags": [], "bug_id": 3129, "attachment_id": null, "is_private": false, "id": 4576, "time": "2001-08-14T23:42:46Z", "creator": "niclas@localbar.com", "creation_time": "2001-08-14T23:42:46Z", "text": "If you give a relative path in the <exec> Task, the Runtime will exit with an\nerror code and not executing the script. If the relative path of the script is\nreplaced with an absolute path, it works. Could perhaps be considered a JVM problem.\n\nJVM used Sun 1.3.1 on Linux"}, {"count": 1, "tags": [], "bug_id": 3129, "attachment_id": null, "is_private": false, "id": 8611, "time": "2001-12-05T10:47:36Z", "creator": "kjw@rightsock.com", "creation_time": "2001-12-05T10:47:36Z", "text": "on solaris, this is the behaviour I am seeing.  If the executable path is \nrelative, ant first checks if it exists, relative to the current directory.  \nTHen, and cd's to dir= and then tries to run the executable.  Since I just did \na 'cd' to a different location, the executable path obviously won't exist!\n\nIf I make the executable path relative to dir=, then the first 'does the \nexecutable even exist\" check will fail.  \n\ndamned if I do, damned if I don't.\n"}, {"count": 2, "tags": [], "bug_id": 3129, "attachment_id": null, "id": 8612, "time": "2001-12-05T10:47:52Z", "creator": "kjw@rightsock.com", "creation_time": "2001-12-05T10:47:52Z", "is_private": false, "text": "on solaris, this is the behaviour I am seeing.  If the executable path is \nrelative, ant first checks if it exists, relative to the current directory.  \nTHen, and cd's to dir= and then tries to run the executable.  Since I just did \na 'cd' to a different location, the executable path obviously won't exist!\n\nIf I make the executable path relative to dir=, then the first 'does the \nexecutable even exist\" check will fail.  \n\ndamned if I do, damned if I don't.\n"}, {"count": 3, "tags": [], "text": "Workaround for unix machines:\n\n<!-- workaround is to cd to the desired dir and run /bin/pwd -->\n    <exec os=\"SunOS Solaris\"\n        executable=\"/bin/pwd\"\n        outputproperty=\"i18n_dir\"\n        dir=\"${src}/build/i18n\"\n        />                     \n    <exec os=\"SunOS Solaris\"    \n        executable=\"${i18n_dir}/do_build_translation\"\n        failonerror=\"true\"\n        dir=\"${src}/templates\"\n.....\n\nin this example, ${src} is a relative path.", "is_private": false, "id": 8617, "creator": "kjw@rightsock.com", "time": "2001-12-05T12:28:32Z", "bug_id": 3129, "creation_time": "2001-12-05T12:28:32Z", "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 3129, "attachment_id": null, "is_private": false, "id": 10898, "time": "2002-02-19T14:55:36Z", "creator": "bodewig@apache.org", "creation_time": "2002-02-19T14:55:36Z", "text": "does it work if you set add vmlauncher=\"false\" to your <exec> task?"}, {"count": 5, "tags": [], "bug_id": 3129, "attachment_id": null, "is_private": false, "id": 12599, "time": "2002-04-01T02:53:44Z", "creator": "holtdl@yahoo.com", "creation_time": "2002-04-01T02:53:44Z", "text": "I'm not sure I understand -- if you know where do_build_translation lives (ie., \nin ${src}/build/i18n), why do you need to 'cd' to it and 'pwd' it to set a \nproperty to hold the directory name, rather than simply do:\n  <property name=\"i18n_dir\" location=\"${src}/build/i18n\"/>\n\nI mean, I suppose we could add, say, a 'commanddir' attribute to use for \npointing to where the command you want to run lives -- but you'd still have to \nput the directory in there anyway, so I'm not sure it wins you anything.\n\nOr am I missing something here?"}, {"count": 6, "tags": [], "bug_id": 3129, "attachment_id": null, "is_private": false, "id": 14531, "time": "2002-04-23T21:58:04Z", "creator": "kgrey@dynamicsoft.com", "creation_time": "2002-04-23T21:58:04Z", "text": "He's saying that ${src} is a relative path.  pwd gives him the absolute path which solves the \nproblem.\n\nI personally use Environment variables to solve this problem, where SRC_TREE \nwould be the absolute path to the root of my source, then construct paths accordingly.  If you need \nto reference something above your SRC_TREE path, then you could always define another \nenvironment variable.\n\nThis way you don't require someone to be in a specific directory when \nexecuting the build process..."}, {"count": 7, "tags": [], "bug_id": 3129, "attachment_id": null, "id": 14533, "time": "2002-04-23T22:03:09Z", "creator": "holtdl@yahoo.com", "creation_time": "2002-04-23T22:03:09Z", "is_private": false, "text": "> He's saying that ${src} is a relative path.  pwd gives him the\n> absolute path which solves the problem.\n\nSo does <property name=\"whatever\" location=\"relative/path\"/>\n\n"}, {"count": 8, "tags": [], "bug_id": 3129, "attachment_id": null, "is_private": false, "id": 17595, "time": "2002-06-11T14:45:51Z", "creator": "bodewig@apache.org", "creation_time": "2002-06-11T14:45:51Z", "text": "Ant is not checking whether the executable exists at all, so I really think\nit is the VM.\n\nRepeating my question: does it work if you set vmlauncher to false?"}, {"count": 9, "tags": [], "text": "OK, I have reproduced it on Windows using the attached build file.\nResult with vmlauncher=\"false\":\n\nBuildfile: /tmp/test.xml\n\ntest:\n    [mkdir] Created dir: /tmp/foo\n    [mkdir] Created dir: /tmp/bar\n\nBUILD FAILED\n/tmp/test.xml:11: Execute failed: java.io.IOException: ../foo/test.sh: not found\nTotal time: 1 second\n\nsetting it to false:\n\nBuildfile: /tmp/test.xml\n\ntest:\n   [delete] Deleting directory /tmp/foo\n   [delete] Deleting directory /tmp/bar\n    [mkdir] Created dir: /tmp/foo\n    [mkdir] Created dir: /tmp/bar\n     [exec] /tmp/bar\n\nBUILD SUCCESSFUL\nTotal time: 1 second\n\nI'll add this to <exec>'s documentation.\n\nCANTFIX with a workaround.", "is_private": false, "id": 17660, "creator": "bodewig@apache.org", "time": "2002-06-12T14:01:50Z", "bug_id": 3129, "creation_time": "2002-06-12T14:01:50Z", "attachment_id": null}, {"count": 10, "text": "Created attachment 2066\nTestscript", "creator": "bodewig@apache.org", "attachment_id": 2066, "id": 17661, "time": "2002-06-12T14:03:00Z", "bug_id": 3129, "creation_time": "2002-06-12T14:03:00Z", "tags": [], "is_private": false}, {"count": 11, "tags": [], "text": "reproduced on Linux, not Windows (did I really write that?).", "is_private": false, "id": 17662, "creator": "bodewig@apache.org", "time": "2002-06-12T14:09:13Z", "bug_id": 3129, "creation_time": "2002-06-12T14:09:13Z", "attachment_id": null}, {"count": 12, "tags": [], "bug_id": 3129, "attachment_id": null, "id": 18709, "time": "2002-06-28T07:33:55Z", "creator": "bodewig@apache.org", "creation_time": "2002-06-28T07:33:55Z", "is_private": false, "text": "*** Bug 10289 has been marked as a duplicate of this bug. ***"}, {"count": 13, "text": "*** Bug 17263 has been marked as a duplicate of this bug. ***", "creator": "bodewig@apache.org", "attachment_id": null, "id": 31984, "time": "2003-02-26T11:17:48Z", "bug_id": 3129, "creation_time": "2003-02-26T11:17:48Z", "tags": [], "is_private": false}]