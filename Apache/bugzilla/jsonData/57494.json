[{"count": 0, "attachment_id": 32396, "bug_id": 57494, "is_private": false, "id": 180553, "time": "2015-01-26T01:50:45Z", "creator": "hugo.tagle@gmail.com", "creation_time": "2015-01-26T01:50:45Z", "tags": [], "text": "Created attachment 32396\n10 row spreadsheet. Second row missing data\n\nThe spreadsheet attached is missing the first row of data after the header row. Creating a XSSFWorkbook(FileInputStream fis) object eliminates the empty row. The sheet rowsIterator contains only the header and the rest of valid rows in the spreadsheet. However, trying to access the rows using the sheet getRow(#) method throws a NullPointerException when trying getSheetAt(0).getRow(1).\n\nUsed a testcase to quickly show the issue:\n\n        FileInputStream fis = new FileInputStream(new File(\"2nd_Row_Missing.xlsx\"));\n        \n        Workbook wb = new XSSFWorkbook(fis);                \n\n        logger.debug(\"rowIterator()\");\n\n        Iterator x = wb.getSheetAt(0).rowIterator();\n        int i = -1;\n        while (x.hasNext()) {\n            i++;\n            Row row = (Row) x.next();\n\n            Iterator y = row.cellIterator();\n            \n            y.next(); // don't care for first numeric cell\n            Cell cell = (Cell) y.next(); // I want the second one (string)\n            \n            logger.debug(\"row = \" + i + \", cell = 1, value =  \" + cell.getStringCellValue());\n        }\n\n        logger.debug(\"getRow()\");\n        logger.debug(\"row = 0, cell = 1, value = \" + wb.getSheetAt(0).getRow(0).getCell(1).toString());\n        logger.debug(\"row = 1, cell = 1, value = null; throws NullPointerException\");\n        logger.debug(\"row = 2, cell = 1, value = \" + wb.getSheetAt(0).getRow(2).getCell(1).toString());\n        logger.debug(\"row = 3, cell = 1, value = \" + wb.getSheetAt(0).getRow(3).getCell(1).toString());\n        logger.debug(\"row = 4, cell = 1, value = \" + wb.getSheetAt(0).getRow(4).getCell(1).toString());\n        logger.debug(\"row = 5, cell = 1, value = \" + wb.getSheetAt(0).getRow(5).getCell(1).toString());\n        logger.debug(\"row = 6, cell = 1, value = \" + wb.getSheetAt(0).getRow(6).getCell(1).toString());\n        logger.debug(\"row = 7, cell = 1, value = \" + wb.getSheetAt(0).getRow(7).getCell(1).toString());\n        logger.debug(\"row = 8, cell = 1, value = \" + wb.getSheetAt(0).getRow(8).getCell(1).toString());\n        logger.debug(\"row = 9, cell = 1, value = \" + wb.getSheetAt(0).getRow(9).getCell(1).toString());\n\n\n==Standard Output==\nrowIterator()\nrow = 0, cell = 1, value =  ADDR\nrow = 1, cell = 1, value =  1220 STATE CAPITOL\nrow = 2, cell = 1, value =  121 S 3RD ST\nrow = 3, cell = 1, value =  1419 ADAMS BLVD\nrow = 4, cell = 1, value =  408 NORFOLK AVE\nrow = 5, cell = 1, value =  704 PROSPECT AVE\nrow = 6, cell = 1, value =  U S HWY 30 WEST\nrow = 7, cell = 1, value =  1600 GREAT PLAINS CENTRE\nrow = 8, cell = 1, value =  1623 HARNEY ST\ngetRow()\nrow = 0, cell = 1, value = ADDR\nrow = 1, cell = 1, value = null; throws NullPointerException\nrow = 2, cell = 1, value = 1220 STATE CAPITOL\nrow = 3, cell = 1, value = 121 S 3RD ST\nrow = 4, cell = 1, value = 1419 ADAMS BLVD\nrow = 5, cell = 1, value = 408 NORFOLK AVE\nrow = 6, cell = 1, value = 704 PROSPECT AVE\nrow = 7, cell = 1, value = U S HWY 30 WEST\nrow = 8, cell = 1, value = 1600 GREAT PLAINS CENTRE\nrow = 9, cell = 1, value = 1623 HARNEY ST"}, {"count": 1, "tags": [], "creator": "kiwiwings@apache.org", "text": "This is by design ... please have a look at the API:\nhttp://poi.apache.org/apidocs/org/apache/poi/xssf/usermodel/XSSFSheet.html#rowIterator()\n\nAnd the NullPointerException is thrown because ... well getRow(1) is null, as you mentioned it, so getCell(1) fails", "id": 180555, "time": "2015-01-26T08:33:16Z", "bug_id": 57494, "creation_time": "2015-01-26T08:33:16Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "creator": "hugo.tagle@gmail.com", "is_private": false, "text": "Created attachment 32398\nFour top rows contain data. 158 empty ones at the bottom", "id": 180568, "time": "2015-01-26T14:45:30Z", "bug_id": 57494, "creation_time": "2015-01-26T14:45:30Z", "attachment_id": 32398}, {"count": 3, "tags": [], "bug_id": 57494, "attachment_id": null, "id": 180569, "time": "2015-01-26T14:46:08Z", "creator": "hugo.tagle@gmail.com", "creation_time": "2015-01-26T14:46:08Z", "is_private": false, "text": "Great. Thx for the quick resolution.\n\nAs I understand then, the attached spreadsheet is 9 physical rows which is the result of 10 logical rows minus the empty one.\n\nWhy would a second spreadsheet with 4 physical rows and 158 empty ones at the bottom return 162? Should the 158 empty ones at the bottom NOT be considered physical ones as in the case where the empty one appeared in the second logical row?\n\nwb.getSheetAt(0).getPhysicalNumberOfRows() = 162\n\nI attached the second spreadsheet I'm referring to just in case."}, {"count": 4, "tags": [], "text": "POI tells you the values that Excel wrote into the file, you'd need to ask Microsoft if you're struggling to make sense of what POI is telling you the file claims to have...", "attachment_id": null, "bug_id": 57494, "id": 180575, "time": "2015-01-26T16:26:44Z", "creator": "apache@gagravarr.org", "creation_time": "2015-01-26T16:26:44Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 57494, "attachment_id": null, "id": 180624, "time": "2015-01-28T14:53:58Z", "creator": "hugo.tagle@gmail.com", "creation_time": "2015-01-28T14:53:58Z", "is_private": false, "text": "Ok. That's fair. \n\nI assumed, from POI perspective, that if an empty row in the middle of a spreadsheet was not considered a physical row, empty rows at the end would not be either.\n\nNothing else from me about this bug.\n\nBest regards."}]