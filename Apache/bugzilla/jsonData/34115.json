[{"count": 0, "tags": [], "creator": "bjoern@hoehrmann.de", "attachment_id": null, "id": 45067, "time": "2005-03-21T23:28:30Z", "bug_id": 34115, "creation_time": "2005-03-21T23:28:30Z", "is_private": false, "text": "For\n\n<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\">\n\n  <rect id=\"test\" fill=\"green\" style=\"fill:red;fill:green\" x=\"0\" y=\"0\" \nwidth=\"100\" height=\"100\" />\n\n  <script type=\"text/ecmascript\">\n    var test = document.getElementById('test');\n    try\n    {\n      if (test.style.length != 1)\n      {\n        test.setAttributeNS(null, \"fill\", \"red\")\n        test.removeAttributeNS(null, \"style\");\n      }\n    }\n    catch (e)\n    {\n      test.setAttributeNS(null, \"fill\", \"red\")\n      test.removeAttributeNS(null, \"style\");\n    }\n  </script>\n\n</svg>\n\nBatik should show a green rect, not a red one. This is not very obvious from \nthe specification but the only reasonable behavior; Mozilla does it properly \n(for HTML documents, at least)."}, {"count": 1, "tags": [], "bug_id": 34115, "attachment_id": null, "is_private": false, "id": 43876, "time": "2005-03-22T02:19:09Z", "creator": "deweese@apache.org", "creation_time": "2005-03-22T02:19:09Z", "text": "Hi Bj\u00f6rn,\n   I guess I'd like some pointers into the specification.\nHow are they supposed to collapse, is the style attribute\nsupposed to be updated?  What is expected to happen when someone\nmodifes the CSSStyleDeclaration (adding/removing/modifying\nproperties).\n"}, {"count": 2, "tags": [], "creator": "deweese@apache.org", "attachment_id": null, "id": 40411, "time": "2005-03-22T12:16:39Z", "bug_id": 34115, "creation_time": "2005-03-22T12:16:39Z", "is_private": false, "text": "Reassigning all open bugs to the development list.\nSorry for the mass mailing."}, {"count": 3, "tags": [], "bug_id": 34115, "attachment_id": null, "text": "http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSStyleDeclaration states \nthat length is \"The number of properties that have been explicitly set in this \ndeclaration block\" and in style=\"fill:x;fill:y\" only one property is explicitly \nset, no?\n\nThe section also refers to the decription of CSS2Properties for shorthand \nproperties which in turn defines that getPropertyValue provides equivalent \nresults, so if you have e.g. style=\"font: ...;\" (and you don't use system font \nvalues) you would have a .length > 1 as font always explicitly sets multiple \nproperties.\n\nSo it seems clear that CSSStyleDeclaration provides an abstract view of the \ndeclaration block with shorthand properties resolved and excluding all \noverridden declarations. If you modify the CSSStyleDeclaration you would do it \nin terms of this abstract view, so for my example test.style.removeProperty\n(\"fill\") would yield in test.style.length == 0, and test.style.setProperty\n(\"fill\", \"green\", \"\") would yield in test.style.length == 1.\n\nI am not sure whether and if how this affects getAttributeNS(null, \"style\") or \ntest.style.cssText...", "id": 37211, "time": "2005-03-22T15:44:55Z", "creator": "bjoern@hoehrmann.de", "creation_time": "2005-03-22T15:44:55Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 34115, "attachment_id": null, "is_private": false, "id": 6427, "time": "2005-03-23T12:10:54Z", "creator": "deweese@apache.org", "creation_time": "2005-03-23T12:10:54Z", "text": "This is now fixed in CVS.\n\nFYI, In our implementation, as long as you look and don't touch \nthe Style Declaraction the stlye attribute stays the same, \nbut as soon as you modify the style declaration it is totally\nrewritten based on the collapsed StyleDecl.\n\n"}]