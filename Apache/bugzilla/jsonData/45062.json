[{"count": 0, "tags": [], "creator": "domenico.napoletano@exprivia.it", "attachment_id": 21989, "text": "Created attachment 21989\nTable reading test class\n\nTable-related text() method seems to be screwed up. Given a table cell, TableCell.text() method returns not only cell's text, but also part of text of nearest cells. Given a sample 3x3 table with cell texts marked \"CELLij\", with i=row, j=column, if the top left cell is empty, returned texts are as follows (from Eclipse console output):\n\nCELL[0][0]=\u0007CELL01\u0007\nCELL[0][1]=CELL01\u0007CELL02\u0007\nCELL[0][2]=CELL02\u0007\u0007\nCELL[1][0]=CELL10\u0007CELL11\u0007\nCELL[1][1]=CELL11\u0007CELL12\u0007\nCELL[1][2]=CELL12\u0007\u0007\nCELL[2][0]=CELL20\u0007CELL21\u0007\nCELL[2][1]=CELL21\u0007CELL22\u0007\nCELL[2][2]=CELL22\u0007\u0007\n\nOnly last cell's text seems to be right.\n\nThe simple test class I've used is\n\n[code]\npackage org.apache.poi.hwpf;\n\nimport java.io.*;\n\nimport javax.swing.JFileChooser;\nimport javax.swing.JOptionPane;\n\nimport org.apache.poi.hwpf.usermodel.*;\n\npublic class QuickTest\n{\n  public QuickTest()\n  {\n  }\n\n  public static void main(String[] args)\n  {\n\t  try\n\t  {\n      \n      JFileChooser jfc = new JFileChooser();\n\t\t\n\t\tint esito = jfc.showOpenDialog(null);\n\t\t\n\t\tif(esito != JFileChooser.APPROVE_OPTION)\n\t\t{\n\t\t\tJOptionPane.showMessageDialog(null, \"No file selected\");\n\t\t}\n\t\telse\n\t\t{\n\t\t\tString percorso = jfc.getSelectedFile().getAbsolutePath();\n\t\t\t\n\t\t\tHWPFDocument doc = new HWPFDocument(new FileInputStream(percorso));\n\t\t\t\n\t\t\tRange r = doc.getRange();\n\t\t\tfor(int i = 0; i < r.numParagraphs(); i++)\n\t\t\t{\n\t\t\t\tParagraph p = r.getParagraph(i);\n\t\t\t\t\n\t\t\t\tif(p.isInTable())\n\t\t\t\t{\n\t\t\t\t\tTable t = r.getTable(p);\n\t\t\t\t\tint cl = numCol(t);\n\t\t\t\t\t\n\t\t\t\t\tSystem.out.println(\"Found \" + t.numRows() + \"x\" + cl + \" table\");\n\t\t\t\t\t\n\t\t\t\t\tdumpTab(t);\n\t\t\t\t\t\n\t\t\t\t\ti += t.numParagraphs() - 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t  }\n\t  catch(Exception er)\n\t  {\n\t\t  er.printStackTrace();\n\t  }\n  }\n  \n  \n  private static int numCol(Table t)\n  {\n\t  int col = 0;\n\t  for(int i = 0; i < t.numRows(); i++)\n\t  {\n\t\t  if(t.getRow(i).numCells() > col)\n\t\t\t  col = t.getRow(i).numCells();\n\t  }\n\t  \n\t  return col;\n  }\n  \n  private static void dumpTab(Table t)\n  {\n\t  for(int i = 0; i < t.numRows(); i++)\n\t  {\n\t\t  TableRow tr = t.getRow(i);\n\t\t  \n\t\t  for(int j = 0; j < tr.numCells(); j++)\n\t\t  {\n\t\t\t  TableCell tc = tr.getCell(j);\n\t\t\t  System.out.println(\"CELL[\" + i + \"][\" + j + \"]=\" + tc.text());\n\t\t  }\n\t  }\n  }\n\n}\n[/code]\n\nSample test doc attached", "id": 116900, "time": "2008-05-22T06:55:18Z", "bug_id": 45062, "creation_time": "2008-05-22T06:55:18Z", "is_private": false}, {"count": 1, "tags": [], "text": "*** Bug 45167 has been marked as a duplicate of this bug. ***", "is_private": false, "bug_id": 45062, "id": 117507, "time": "2008-06-09T04:43:06Z", "creator": "perrot.thomas@gmail.com", "creation_time": "2008-06-09T04:43:06Z", "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 45062, "attachment_id": null, "id": 117508, "time": "2008-06-09T05:03:19Z", "creator": "perrot.thomas@gmail.com", "creation_time": "2008-06-09T05:03:19Z", "is_private": false, "text": "      \nAs a fix: needs to put back old constructor settings for TableCell (end+1->end)\n\nWorks fine (in TableRow.java)\n_cells[cellIndex] = new TableCell(start, end, this, levelNum,\n                                        _tprops.getRgtc()[cellIndex],\n                                        _tprops.getRgdxaCenter()[cellIndex],\n                                        _tprops.getRgdxaCenter()[cellIndex+1]-_tprops.getRgdxaCenter()[cellIndex]);"}, {"count": 3, "tags": [], "bug_id": 45062, "is_private": false, "id": 118092, "attachment_id": null, "creator": "apache@gagravarr.org", "creation_time": "2008-06-28T11:40:23Z", "time": "2008-06-28T11:40:23Z", "text": "Any chance you could upload a simple file that shows up that problem? I'd like to commit a test at the same time as your fix, so we know it won't get broken again in the future. Your code looks like a good basis for a test, just need a file to drive it!"}, {"count": 4, "tags": [], "bug_id": 45062, "attachment_id": null, "id": 119406, "time": "2008-08-05T07:46:25Z", "creator": "domenico.napoletano@exprivia.it", "creation_time": "2008-08-05T07:46:25Z", "is_private": false, "text": "Test code can be tried with the same Word document attached for bug\n\n44292 - [PATCH] TableCell skip its last Paragraphs\n\nwhich, given to the QuickTest class I posted, gives as output\n\nFound 1x3 table\nCELL[0][0]=One paragraph is ok\u0007\nCELL[0][1]=First para is ok\nSecond paragraph is skipped\u0007\nCELL[0][2]=One paragraph is ok\u0007\n\n\nshowing that bugs 44292 and 45062 (this one) do not appear anymore using Trunk source code version, because table cells text is *right* and TableCell *does not skip* its last Paragraphs.\n\nJUnit docet."}, {"count": 5, "tags": [], "bug_id": 45062, "attachment_id": null, "id": 120841, "time": "2008-09-21T12:32:05Z", "creator": "apache@gagravarr.org", "creation_time": "2008-09-21T12:32:05Z", "is_private": false, "text": "Just re-tested with svn trunk, and hwpf works properly"}, {"count": 6, "tags": [], "bug_id": 45062, "text": "(In reply to comment #5)\n> Just re-tested with svn trunk, and hwpf works properly\n> \n\nThe problem seems to be located in the way in which HWPF handles paragraphs and character runs of table cells. In TestProblems.java (the JUnit testcase related to this bug and bug 44292) I tried to add the lines (in first table cell checks)\n\n//A - the *already existing* tests on first table cell\nassertEquals(1, cell.numParagraphs());\nassertEquals(\"One paragraph is ok\\7\", cell.getParagraph(0).text());\n//A end\n\n//B - mine, added\nassertEquals(1, cell.numCharacterRuns());\nassertEquals(\"One paragraph is ok\\7\", cell.getCharacterRun(0).text());\n//B end\n\n//C - mine, added\nassertEquals(\"One paragraph is ok\\7\", cell.text());\n\nand,\n\n1) if in TableCell.java \"end+1\" is used, \"A\" and \"C\" blocks pass the test, but \"B\" fails: then, in this case paragraphs list and text() run correctly, but character runs retrieval does not\n\n2) if in TableCell.java \"end\" is used, \"B\" block passes and \"A\" and \"C\" fail: then, in this case, character runs list is retrieved correctly correctly, but paragraph retrieval and text() doe not", "id": 120875, "time": "2008-09-23T04:32:06Z", "creator": "domenico.napoletano@exprivia.it", "creation_time": "2008-09-23T04:32:06Z", "is_private": false, "attachment_id": null}]