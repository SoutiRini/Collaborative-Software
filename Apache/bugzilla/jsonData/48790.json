[{"count": 0, "tags": [], "creator": "qiyaoltc@gmail.com", "attachment_id": null, "id": 134760, "time": "2010-02-22T03:41:21Z", "bug_id": 48790, "creation_time": "2010-02-22T03:41:21Z", "is_private": false, "text": "We are running tomcat 6.0.18 with a race detector (http://www.alphaworks.ibm.com/tech/msdk), and find one race condition in class \norg.apache.catalina.session.ManagerBase field maxActive.\n\nData Race 1 : org.apache.catalina.session.ManagerBase : maxActive\n\n  Thread \"http-8080-3\" : Tid 34 : WRITE\n        Lock Set : [ ]\n      [org.apache.catalina.session.ManagerBase : add(Lorg/apache/catalina/Session;)V :  : 741]\n      [org.apache.catalina.session.StandardSession : setId(Ljava/lang/String;)V :  : 368]\n      [org.apache.catalina.session.ManagerBase : createSession(Ljava/lang/String;)Lorg/apache/catalina/Session; :  : 827]\n      [org.apache.catalina.session.StandardManager : createSession(Ljava/lang/String;)Lorg/apache/catalina/Session; :  : 291]\n      [org.apache.catalina.connector.Request : doGetSession(Z)Lorg/apache/catalina/Session; :  : 2324]\n      [org.apache.catalina.connector.Request : getSession(Z)Ljavax/servlet/http/HttpSession; :  : 2074]\n      [org.apache.catalina.connector.RequestFacade : getSession(Z)Ljavax/servlet/http/HttpSession; :  : 833]\n      [org.apache.catalina.connector.RequestFacade : getSession()Ljavax/servlet/http/HttpSession; :  : 844]\n      [com.ecyrd.jspwiki.auth.AuthenticationManager : login(Ljavax/servlet/http/HttpServletRequest;)Z :  : 270]\n........\n  Thread \"http-8080-1\" : Tid 32 : READ\n        Lock Set : [ ]\n      [org.apache.catalina.session.ManagerBase : add(Lorg/apache/catalina/Session;)V :  : 740]\n      [org.apache.catalina.session.StandardSession : setId(Ljava/lang/String;)V :  : 368]\n      [org.apache.catalina.session.ManagerBase : createSession(Ljava/lang/String;)Lorg/apache/catalina/Session; :  : 827]\n      [org.apache.catalina.session.StandardManager : createSession(Ljava/lang/String;)Lorg/apache/catalina/Session; :  : 291]\n........\n\nHere is the code snip of ManagerBase.java\n\n    public void add(Session session) {\n\n        sessions.put(session.getIdInternal(), session);\n        int size = sessions.size();\n1->      if( size > maxActive ) {\n2->         maxActive = size;\n        }\n    }\n\nStatement 1 and statement 2 should executed in an atomic manner.  One fix to this problem is to move statement 1 and statement 2 into a synchronized block."}, {"count": 1, "tags": [], "bug_id": 48790, "is_private": false, "text": "Fixed in trunk and proposed for 6.0.x.\n\nI came very close to marking this as WONTFIX because I don't think the thread safety issues are going to cause any harm.", "id": 135218, "time": "2010-03-09T22:23:07Z", "creator": "markt@apache.org", "creation_time": "2010-03-09T22:23:07Z", "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 48790, "attachment_id": null, "id": 135222, "creation_time": "2010-03-10T01:22:50Z", "time": "2010-03-10T01:22:50Z", "creator": "qiyaoltc@gmail.com", "text": "(In reply to comment #1)\n> Fixed in trunk and proposed for 6.0.x.\n> \n\nI'll go to trunk and have a look.\n\n> I came very close to marking this as WONTFIX because I don't think the thread\n> safety issues are going to cause any harm.\nRight, the boundary of harmful race and benign race is not very clear.", "is_private": false}, {"count": 3, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "is_private": false, "id": 136006, "time": "2010-04-11T09:49:24Z", "bug_id": 48790, "creation_time": "2010-04-11T09:49:24Z", "text": "This has been fixed in 6.0.x and will be included in 6.0.27 onwards."}]