[{"count": 0, "tags": [], "bug_id": 44375, "text": "Impossible to create an HSSFWorkbook from an excel file.\nThere is a StringIndexOutOfBoundsException in POIDocument.readProperties().\nIt worked with POI 3.0.1.\n\nHere is the full stack trace:\nException in thread \"main\" java.lang.StringIndexOutOfBoundsException: String\nindex out of range: 541934449\n\tat java.lang.String.checkBounds(String.java:372)\n\tat java.lang.String.<init>(String.java:404)\n\tat org.apache.poi.hpsf.Property.readDictionary(Property.java:257)\n\tat org.apache.poi.hpsf.Property.<init>(Property.java:153)\n\tat org.apache.poi.hpsf.Section.<init>(Section.java:291)\n\tat org.apache.poi.hpsf.PropertySet.init(PropertySet.java:454)\n\tat org.apache.poi.hpsf.PropertySet.<init>(PropertySet.java:249)\n\tat org.apache.poi.hpsf.PropertySetFactory.create(PropertySetFactory.java:61)\n\tat org.apache.poi.POIDocument.getPropertySet(POIDocument.java:97)\n\tat org.apache.poi.POIDocument.readProperties(POIDocument.java:77)\n\tat org.apache.poi.hssf.usermodel.HSSFWorkbook.<init>(HSSFWorkbook.java:171)\n\tat org.apache.poi.hssf.usermodel.HSSFWorkbook.<init>(HSSFWorkbook.java:148)\n\tat Test.<init>(Test.java:18)\n\tat Test.main(Test.java:38)", "id": 113533, "time": "2008-02-07T08:46:06Z", "creator": "lpoublan@triloggroup.com", "creation_time": "2008-02-07T08:46:06Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 44375, "text": "Created attachment 21493\nxls file not readable with POI HSSF 3.0.2 (ok with 3.0.1)\n\nTo reproduce, simply try:\nPOIFSFileSystem fs=new POIFSFileSystem(new\nFileInputStream(\"C:/temp/test.xls\"));\nnew HSSFWorkbook(fs); // this line throws a StringIndexOutOfBoundsException", "id": 113534, "time": "2008-02-07T08:51:29Z", "creator": "lpoublan@triloggroup.com", "creation_time": "2008-02-07T08:51:29Z", "is_private": false, "attachment_id": 21493}, {"count": 2, "tags": [], "creator": "apache@gagravarr.org", "attachment_id": null, "text": "Hmm, no changes to org.apache.poi.hpsf.Property have been made since 2006, so\nit's not anything obvious there ", "id": 113536, "time": "2008-02-07T09:03:18Z", "bug_id": 44375, "creation_time": "2008-02-07T09:03:18Z", "is_private": false}, {"count": 3, "tags": [], "creator": "apache@gagravarr.org", "attachment_id": null, "text": "I don't know if your document has a corrupt SummaryInformation stream, or if\nthere's a bug in the SummaryInformation stream parsing.\n\nI've added a disabled failing testcase for it to svn trunk, which can be a start\nfor someone to take a look at why the SummaryInformation isn't working.\n\n(3.0.1 didn't do document metadata by default, but 3.0.2 does)", "id": 113537, "time": "2008-02-07T09:13:57Z", "bug_id": 44375, "creation_time": "2008-02-07T09:13:57Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 44375, "attachment_id": null, "id": 113552, "time": "2008-02-07T14:56:31Z", "creator": "josh@apache.org", "creation_time": "2008-02-07T14:56:31Z", "is_private": false, "text": "It seems that the method:\norg.apache.poi.hpsf.Property.readDictionary(byte[], long, int, int)\nis not exercised by any of the existing junits.\n\nWhen comparing the execution flow of this bug with the successful test cases, \ndivergence can be seen at line 151 of the constructor - \norg.apache.poi.hpsf.Property.Property(long, byte[], long, int, int)\nFor the sample spreadsheet, the Property constructor is invoked successfully \n19 times before this.id==0 and readDictionary() gets invoked.\n"}, {"count": 5, "tags": [], "bug_id": 44375, "attachment_id": null, "id": 113563, "time": "2008-02-08T02:19:57Z", "creator": "klute@apache.org", "creation_time": "2008-02-08T02:19:57Z", "is_private": false, "text": "The properties are broken. Neither the Windows XP Explorer nor Excel are able to\nshow them. But at least they don't fail. I am going to implement the same\nbehaviour in HPSF."}, {"count": 6, "tags": [], "bug_id": 44375, "text": "Fixed with revision 619765. HPSF now copes with a broken dictionary in Document\nSummary Information streams. RuntimeExceptions that occured when trying to read\nbogus data are now caught. Dictionary entries up to but not including the bogus\none are preserved, the rest is ignored.", "id": 113565, "time": "2008-02-08T04:01:52Z", "creator": "klute@apache.org", "creation_time": "2008-02-08T04:01:52Z", "is_private": false, "attachment_id": null}]