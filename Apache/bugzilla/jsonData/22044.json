[{"text": "Look at the following example and think about\nwhat would happend if $myparam is undefined\nin build.xml:\n\nbuild.xml:\n\n<style ... style=\"template.xsl\">\n  <param name=\"myparam\" expression=\"$myparam\"/>\n</style>\n\ntemplate.xsl:\n\n...\n<xsl:param name=\"myparam\">MyParamDefaultValue</xsl:param>\n...\n\nThe value of myparam in the stylesheet would be \"${myparam}\" (litterally),\nnot \"MyParamDefaultValue\" as expected. I think the style-task needs\nto remove undefined param values, or at least set them to \"\".", "tags": [], "bug_id": 22044, "attachment_id": null, "count": 0, "id": 41936, "time": "2003-08-01T10:28:07Z", "creator": "ja@tim.se", "creation_time": "2003-08-01T10:28:07Z", "is_private": false}, {"count": 1, "tags": [], "creator": "jan@materne.de", "text": "If you would use the correct property syntax ${myparam} instead of $myparam \nthis works. (I used that so many times in several scripts by me, so close this \nbug.)", "id": 42044, "time": "2003-08-04T09:15:11Z", "bug_id": 22044, "creation_time": "2003-08-04T09:15:11Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "creator": "ja@tim.se", "text": "My example is bad. It should ofcourse be ${myparam}.\nBut that does not work either.", "id": 42047, "time": "2003-08-04T09:40:21Z", "bug_id": 22044, "creation_time": "2003-08-04T09:40:21Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 22044, "attachment_id": null, "text": "Ok, I did a bigger test:\n\n\nbuild.xml\n-------------------------------------\n<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<project name=\"test\" basedir=\".\" default=\"main\">\n    <target name=\"main\">\n        <!-- Define a property for later use -->\n        <property name=\"myparam\" value=\"This is a test.\"/>\n\n        <!-- Do the test -->\n        <style in=\"test.xml\" style=\"test.xsl\" out=\"out.xml\">\n            <!-- xsl-parameter with a defined value -->\n            <param name=\"another\" expression=\"Hello World\"/>\n            <!-- xsl-parameter with a property as value -->\n            <param name=\"myparam\" expression=\"${myparam}\"/>\n            <!-- xsl-parameter which is not set -->\n            <!-- <param name=\"notused\" expression=\"notused\"/> -->\n        </style>\n\n        <!-- Prints the result -->\n        <concat>\n            <filelist dir=\".\" files=\"out.xml\"/>\n        </concat>\n    </target>\n</project>\n\n\n\ntest.xml\n-------------------------------------\n<test/>\n\n\n\n\ntest.xsl\n-------------------------------------\n<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n\n<xsl:stylesheet\n  version=\"1.0\"\n  xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\"\n  xmlns:fo=\"http://www.w3.org/1999/XSL/Format\">\n\n<!-- get the xsl-parameter -->\n<xsl:param name=\"myparam\">mymaram default value</xsl:param>\n<xsl:param name=\"another\">another default value</xsl:param>\n<xsl:param name=\"notused\">notused default value</xsl:param>\n\n<!-- use the xsl-parameter -->\n<xsl:template match=\"/\">\nmyparam: '<xsl:value-of select=\"$myparam\"/>'\nanother: '<xsl:value-of select=\"$another\"/>'\nnotused: '<xsl:value-of select=\"$notused\"/>'\n</xsl:template>\n\n</xsl:stylesheet>\n\n\n\nant output\n-------------------------------------\nC:\\tmp\\anttests\\xmlparameter2>ant\nAnt-Home:  d:\nJava-Home: c:\\seu\\jdk142\nBuildfile: build.xml\n\nmain:\n    [style] Processing C:\\tmp\\anttests\\xmlparameter2\\test.xml to \nC:\\tmp\\anttests\\xmlparameter2\\out.xml\n    [style] Loading stylesheet C:\\tmp\\anttests\\xmlparameter2\\test.xsl\n   [concat] <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\n   [concat] myparam: 'This is a test.'\n   [concat] another: 'Hello World'\n   [concat] notused: 'notused default value'\n\nBUILD SUCCESSFUL\nTotal time: 0 seconds\n\n\n\n\nSo what\u00b4s wrong in your opinion? Please send an example.", "id": 42050, "time": "2003-08-04T10:54:19Z", "creator": "jan@materne.de", "creation_time": "2003-08-04T10:54:19Z", "is_private": false}, {"count": 4, "tags": [], "creator": "ja@tim.se", "text": "build.xml:\n\n\n<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<project name=\"test\" basedir=\".\" default=\"main\">\n    <target name=\"main\">\n        <!-- Define a property for later use -->\n        <property name=\"myparam\" value=\"This is a test.\"/>\n\n        <!-- Do the test -->\n        <style in=\"test.xml\" style=\"test.xsl\" out=\"out.xml\">\n            <!-- xsl-parameter with a defined value -->\n            <param name=\"another\" expression=\"Hello World\"/>\n            <!-- xsl-parameter with a property as value -->\n            <param name=\"myparam\" expression=\"${myparam}\"/>\n            <!-- xsl-parameter which is not set -->\n            <!-- <param name=\"notused\" expression=\"notused\"/> -->\n            <!-- xsl-parameter with a non defined ant parameter -->\n            <param name=\"notdefined\" expression=\"${notdefined}\"/>\n        </style>\n\n        <!-- Prints the result -->\n        <concat>\n            <filelist dir=\".\" files=\"out.xml\"/>\n        </concat>\n    </target>\n</project>\n\n\ntext.xsl:\n\n<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n\n<xsl:stylesheet\n  version=\"1.0\"\n  xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\"\n  xmlns:fo=\"http://www.w3.org/1999/XSL/Format\">\n\n<!-- get the xsl-parameter -->\n<xsl:param name=\"myparam\">mymaram default value</xsl:param>\n<xsl:param name=\"another\">another default value</xsl:param>\n<xsl:param name=\"notused\">notused default value</xsl:param>\n<xsl:param name=\"notdefined\">notdefined default value</xsl:param>\n\n<!-- use the xsl-parameter -->\n<xsl:template match=\"/\">\nmyparam: '<xsl:value-of select=\"$myparam\"/>'\nanother: '<xsl:value-of select=\"$another\"/>'\nnotused: '<xsl:value-of select=\"$notused\"/>'\nnotdefined: '<xsl:value-of select=\"$notdefined\"/>'\n</xsl:template>\n\noutput (will require special hacks in stylesheets to work with ant):\n\nmyparam: 'This is a test.'\nanother: 'Hello World'\nnotused: 'notused default value'\nnotdefined: '${notdefined}'\n\nexpected output:\n\nmyparam: 'This is a test.'\nanother: 'Hello World'\nnotused: 'notused default value'\nnotdefined: 'notdefined default value'\n\n", "id": 42056, "time": "2003-08-04T12:16:53Z", "bug_id": 22044, "creation_time": "2003-08-04T12:16:53Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "creator": "jan@materne.de", "attachment_id": null, "id": 42061, "time": "2003-08-04T12:34:26Z", "bug_id": 22044, "creation_time": "2003-08-04T12:34:26Z", "is_private": false, "text": "That\u00b4s usual Ant behaviour: if you use a property that is not set, the name is \ndisplayed. You can solve this in the xsl stylesheet:\n\n<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n\n<xsl:stylesheet\n  version=\"1.0\"\n  xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\"\n  xmlns:fo=\"http://www.w3.org/1999/XSL/Format\">\n\n<!-- get the xsl-parameter -->\n<xsl:param name=\"myparam\">mymaram default value</xsl:param>\n<xsl:param name=\"another\">another default value</xsl:param>\n<xsl:param name=\"notused\">notused default value</xsl:param>\n<xsl:param name=\"notdefined\">notdefined default value</xsl:param>\n\n<!-- use the xsl-parameter -->\n<xsl:template match=\"/\">\n\n    <xsl:variable name=\"useThisInsteadOfNotdefined\">\n        <xsl:choose>\n            <xsl:when test=\"$notdefined!='${notdefined}'\"><xsl:value-of \nselect=\"$notdefined\"/></xsl:when>\n            <xsl:otherwise>notdefined default value</xsl:otherwise>\n        </xsl:choose>\n    </xsl:variable>\n\nmyparam   : '<xsl:value-of select=\"$myparam\"/>'\nanother   : '<xsl:value-of select=\"$another\"/>'\nnotused   : '<xsl:value-of select=\"$notused\"/>'\nnotdefined: '<xsl:value-of select=\"$notdefined\"/>'\nuse this  : '<xsl:value-of select=\"$useThisInsteadOfNotdefined\"/>'\n</xsl:template>\n\n</xsl:stylesheet>\n\n"}, {"count": 6, "attachment_id": null, "bug_id": 22044, "text": "The value \"${variable}\" will most likely be totally useless in the\nstylesheet. It will require ant-specific stylessheets to work around.\nJust a lot of extra work if you ask me.\n\n", "id": 42082, "time": "2003-08-04T15:54:30Z", "creator": "ja@tim.se", "creation_time": "2003-08-04T15:54:30Z", "tags": [], "is_private": false}, {"count": 7, "tags": [], "creator": "jan@materne.de", "attachment_id": null, "id": 42125, "time": "2003-08-05T06:40:13Z", "bug_id": 22044, "creation_time": "2003-08-05T06:40:13Z", "is_private": false, "text": "Yep, the argue of \"Ant-specific XSL-stylesheet\" is good. I\u00b4m thinking about \nan \"if\" attribute for the param. \n\n<style ... style=\"template.xsl\">\n  <param name=\"myparam\" expression=\"${myparam}\" if=\"myparam\"/>\n</style>\n\nChanging the default behaviour would cause to an incompatibility for older \nbuildscripts. (Mmmh, maybe not ... Have to think about that).\n\nBut there werde disussions on the dev-list about having if/unless-attributes on \ntask-level and other places. I have to reread these ..."}, {"count": 8, "tags": [], "creator": "peter.reilly@corvil.com", "attachment_id": null, "id": 42129, "time": "2003-08-05T08:32:02Z", "bug_id": 22044, "creation_time": "2003-08-05T08:32:02Z", "is_private": false, "text": "This is std ant behaviour used by lots of scripts.\nIf you want to set myparam to \"\" if it is not set\nbefore, use\n\n<property name=\"myparam\" value=\"\"/>\n<style ... style=\"template.xsl\">\n  <param name=\"myparam\" expression=\"${myparam}\"/>\n</style>\n"}, {"count": 9, "attachment_id": null, "bug_id": 22044, "text": "\"\" and undefined is not the same thing.\nIf the parameter is set to \"\", then this value will be used rather than\nthe default specified by the stylesheet. You will still have\nto write ant specific choose-statements in the stylesheet:\n\n    <xsl:variable name=\"useThisInsteadOfNotdefined\">\n        <xsl:choose>\n            <xsl:when test=\"$notdefined==''\"><xsl:value-of \nselect=\"$notdefined\"/></xsl:when>\n            <xsl:otherwise>notdefined default value</xsl:otherwise>\n        </xsl:choose>\n    </xsl:variable>\n\n", "id": 42130, "time": "2003-08-05T08:51:38Z", "creator": "ja@tim.se", "creation_time": "2003-08-05T08:51:38Z", "tags": [], "is_private": false}, {"count": 10, "tags": [], "creator": "peter.reilly@corvil.com", "text": "Created attachment 7650\nPatch file to add if/unless attribute to param sub-element of style", "id": 42133, "time": "2003-08-05T09:28:56Z", "bug_id": 22044, "creation_time": "2003-08-05T09:28:56Z", "is_private": false, "attachment_id": 7650}, {"count": 11, "attachment_id": null, "bug_id": 22044, "text": "Ok, in this case Jan's suggestion of an if attribute to \"param\" should be used.\nI have attached a patch file that does this (a little bit of cut&paste from\nthe junit task).\n\n- simplified test\n<project name=\"test\" basedir=\".\" default=\"main\">\n    <target name=\"main\">\n        <property name=\"defined\" value=\"This is a Defined.\"/>\n        <style in=\"test.xml\" style=\"test.xsl\" out=\"out.xml\">\n            <param name=\"defined\" expression=\"${defined}\" if=\"defined\"/>\n            <param name=\"notdefined\" expression=\"${notdefined}\"\n                   if=\"notdefined\"/>\n        </style>\n\n        <!-- Prints the result -->\n        <concat>\n            <filelist dir=\".\" files=\"out.xml\"/>\n        </concat>\n    </target>\n</project>\n\n<xsl:stylesheet\n  version=\"1.0\"\n  xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\">\n\n<!-- get the xsl-parameter -->\n<xsl:param name=\"defined\">defined default value</xsl:param>\n<xsl:param name=\"notdefined\">notdefined default value</xsl:param>\n\n<!-- use the xsl-parameter -->\n<xsl:template match=\"/\">\ndefined: '<xsl:value-of select=\"$defined\"/>'\nnotdefined: '<xsl:value-of select=\"$notdefined\"/>'\n</xsl:template>\n\n</xsl:stylesheet>\n\n-- Output:\nmain:\n    [style] Processing /home/preilly/proj/learning/style/test.xml to\n/home/preilly/proj/learning/style/out.xml\n    [style] Loading stylesheet /home/preilly/proj/learning/style/test.xsl\n   [concat] <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\n   [concat] defined: 'This is a Defined.'\n   [concat] notdefined: 'notdefined default value'\n\n", "id": 42135, "time": "2003-08-05T09:36:02Z", "creator": "peter.reilly@corvil.com", "creation_time": "2003-08-05T09:36:02Z", "tags": [], "is_private": false}, {"attachment_id": null, "tags": [], "bug_id": 22044, "text": "Will you commit that to CVS?", "count": 12, "id": 42136, "time": "2003-08-05T09:38:00Z", "creator": "jan@materne.de", "creation_time": "2003-08-05T09:38:00Z", "is_private": false}, {"count": 13, "attachment_id": null, "bug_id": 22044, "text": "I could, but is this the desired fix ?, and unit-tests and doc\nare needed...\n", "id": 42138, "time": "2003-08-05T09:50:26Z", "creator": "peter.reilly@corvil.com", "creation_time": "2003-08-05T09:50:26Z", "tags": [], "is_private": false}, {"count": 14, "tags": [], "text": "Created attachment 7657\nZIP containing testcase and doc", "attachment_id": 7657, "bug_id": 22044, "id": 42151, "time": "2003-08-05T13:10:42Z", "creator": "jan@materne.de", "creation_time": "2003-08-05T13:10:42Z", "is_private": false}, {"count": 15, "attachment_id": null, "bug_id": 22044, "text": "I don\u00b4t know if that is enough for Jens :-)", "id": 42153, "time": "2003-08-05T13:11:21Z", "creator": "jan@materne.de", "creation_time": "2003-08-05T13:11:21Z", "tags": [], "is_private": false}, {"count": 16, "attachment_id": null, "bug_id": 22044, "text": "Thanks for the fast fix!\n\nSo, what about:\n\n  <mkdir dir=\"${undefined}\"/> \n\nHehe ;)\n\n\n", "id": 42159, "time": "2003-08-05T14:02:26Z", "creator": "ja@tim.se", "creation_time": "2003-08-05T14:02:26Z", "tags": [], "is_private": false}, {"count": 17, "tags": [], "text": "No problem - you a directy \"${undefined}\" :-) \n\n(I got several of these showing me that an initialization missed ...)", "attachment_id": null, "bug_id": 22044, "id": 42170, "time": "2003-08-05T15:10:13Z", "creator": "jan@materne.de", "creation_time": "2003-08-05T15:10:13Z", "is_private": false}, {"count": 18, "tags": [], "creator": "peter.reilly@corvil.com", "text": "Commited the changes", "id": 42175, "time": "2003-08-05T16:10:13Z", "bug_id": 22044, "creation_time": "2003-08-05T16:10:13Z", "is_private": false, "attachment_id": null}]