[{"count": 0, "tags": [], "text": "We have a sample involving a SAML 1.1 assertion that's internally including a SAML 2.0 element inside one of the components, and the SAML library happens to be using the prefix \"saml\" for both of the namespaces involved. The prefix is also included in the inclusive prefix list, but I don't know if that's a trigger for the bug yet.\n\nIn any case, what happens is that the c14n output to the digester is omitting the second, nested namespace declaration because the prefix is already declared up above, not noticing that the namespace itself has changed.\n\nWe're observing both an older Java version (1.4.1) and the latest C++ xmlsec code rejecting this signature, so I suspect it's a regression and was working correctly before, but need more time to prove that.\n\nThe relevant case looks like this:\n\n<Foo xmlns:bar=\"https://bar.com\">\n    <Foo2 xmlns:bar=\"https://bar2.com\"/>\n</Foo>\n\nWhat we're seeing is bar omitted from the Foo2 element. I don't know if a sample that small will trip it, but the full example that does is attached. Search for NameID and you'll see the second declaration of xmlns:saml", "is_private": false, "bug_id": 46975, "id": 126026, "time": "2009-04-06T12:31:05Z", "creator": "cantor.2@osu.edu", "creation_time": "2009-04-06T12:31:05Z", "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 46975, "attachment_id": 23447, "text": "Created attachment 23447\nSigned SAML 1 assertion with SAML 2 NameID in AttributeValue", "id": 126027, "time": "2009-04-06T12:31:50Z", "creator": "cantor.2@osu.edu", "creation_time": "2009-04-06T12:31:50Z", "is_private": false}, {"count": 2, "tags": [], "creator": "cantor.2@osu.edu", "is_private": false, "id": 126029, "creation_time": "2009-04-06T12:50:03Z", "time": "2009-04-06T12:50:03Z", "bug_id": 46975, "text": "Created attachment 23448\nLog output from xmlsec showing input to digester, with missing namespace.\n\nI believe the implementations rejecting the signature are probably (correctly) redeclaring the namespace down below, while at least 1.4.2 omits it.\n\nOnce I obtain the C++ digest input, I'll attach that for comparison.", "attachment_id": 23448}, {"attachment_id": null, "tags": [], "creator": "cantor.2@osu.edu", "is_private": false, "count": 3, "id": 126050, "time": "2009-04-07T11:37:48Z", "bug_id": 46975, "creation_time": "2009-04-07T11:37:48Z", "text": "Marking invalid. Further investigation identified a bug in the calling code, not in xmlsec."}]