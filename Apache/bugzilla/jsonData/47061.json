[{"count": 0, "tags": [], "bug_id": 47061, "attachment_id": 23518, "id": 126404, "time": "2009-04-21T05:28:50Z", "creator": "britsp@bristol.gov.uk", "creation_time": "2009-04-21T05:28:50Z", "is_private": false, "text": "Created attachment 23518\nPatch JDBCStore to use datasource.\n\nWe are using the JDBCStore to store sessions. The current implementation can only be configured with database connection parameters. Each web application will create and hold on to its own connection to the session store.\nOur tomcats contain a large number of webapps, and this causes and unduly large number of connections to be made to the database. In addition, all our other database connections are configured using datasources, and so for consistency we would much prefer to use a datasource.\n\nI have patched JDBCStore to allow the use of datasource to obtain the connection. I have added a parameter called \"datasourceName\". If this is defined it will use this to lookup the datasource in JNDI. If it is not configured, it will fall back to using direct connection.\n\nPatch is attached."}, {"count": 1, "tags": [], "bug_id": 47061, "attachment_id": 23521, "id": 126408, "time": "2009-04-21T07:48:00Z", "creator": "britsp@bristol.gov.uk", "creation_time": "2009-04-21T07:48:00Z", "is_private": false, "text": "Created attachment 23521\n Patch JDBCStore to use datasource v2.\n\nSupplied updated version of patch"}, {"count": 2, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "id": 126672, "time": "2009-05-01T08:48:56Z", "bug_id": 47061, "creation_time": "2009-05-01T08:48:56Z", "is_private": false, "text": "A couple of comments on your patch:\n- It appears to more than advertised - eg moving the call to remove(). Should this be a separate issue?\n- The documentation is not updated.\n- Think about the visibility of the new attributes and methods you are adding. I'd probably start them off as private and increase visibility of required."}, {"count": 3, "text": "Created attachment 23639\nJDBCStore.java patch 1", "bug_id": 47061, "attachment_id": 23639, "id": 126931, "time": "2009-05-11T02:46:00Z", "creator": "britsp@bristol.gov.uk", "creation_time": "2009-05-11T02:46:00Z", "tags": [], "is_private": false}, {"count": 4, "tags": [], "creator": "britsp@bristol.gov.uk", "attachment_id": 23640, "text": "Created attachment 23640\n JDBCStore.java patch 2", "id": 126932, "time": "2009-05-11T02:46:48Z", "bug_id": 47061, "creation_time": "2009-05-11T02:46:48Z", "is_private": false}, {"count": 5, "tags": [], "creator": "britsp@bristol.gov.uk", "attachment_id": null, "text": "\nThe patch does indeed move the remove() method. This is because in the original code, the call to remove() is inside the block of code in save(), which gets the connection. But the remove() method then gets the connection again! This isn't such a problem for the \"direct connection\" method as the connection is left open after remove() has finished with it. But in the case where the datasource is being used, the remove() method returns the connection, and then the connection is then not available to the rest of the save() method.\n\nAs you mentioned, maybe this is a separate issue, so I have posted this a separate patch (patch 1), so that if you decide to treat it separately it will be easier to do so.\n\nThe other patch (patch 2) adds in the code required for datasource support using JNDI lookup as before. I have also made the new member variables private as suggested. This patch needs to be applied after patch 1.", "id": 126933, "time": "2009-05-11T02:57:37Z", "bug_id": 47061, "creation_time": "2009-05-11T02:57:37Z", "is_private": false}, {"count": 6, "attachment_id": 23778, "creator": "britsp@bristol.gov.uk", "is_private": false, "id": 127752, "time": "2009-06-09T04:07:18Z", "bug_id": 47061, "creation_time": "2009-06-09T04:07:18Z", "tags": [], "text": "Created attachment 23778\nNew version of JDBCStore supporting datasource only\n\nI have also come up with an alternative for the JDBC session store.\nAttached JDBCStoreDS.java is a new file which ONLY supports the datasource method of getting the connection. Therefore this doesn't require any changes to the existing \"direct connection\" version of the code.\n\nThe code can be used by adding the following into context.xml\n\n<Manager className=\"org.apache.catalina.session.PersistentManager\" maxIdleBackup=\"0\">\n  <Store className=\"org.apache.catalina.session.JDBCStoreDS\" datasourceName=\"java:/comp/env/jdbc/DB-TOMCAT\" sessionDataCol=\"session_data\" sessionIdCol=\"session_id\" sessionLastAccessedCol=\"last_access\" sessionMaxInactiveCol=\"max_inactive\" sessionTable=\"tomcat_sessions\" sessionValidCol=\"valid_session\">\n  </Store>\n</Manager>\n\nwhere DB-TOMCAT is a datasource defined elsewhere.\n\nThere is also an optional parameter \"requireDistributable\". Setting this to true will mean sessions will only be persisted to the database if the webapp is marked as \"distributable\" in the web.xml. The default is false which means the the sessions will be persisted anyway."}, {"count": 7, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "text": "This was implemented (slightly differently for Tomcat 7). I don't see this feature being back-ported to Tomcat 6.\n\n*** This bug has been marked as a duplicate of bug 51264 ***", "id": 146864, "time": "2011-06-04T17:33:38Z", "bug_id": 47061, "creation_time": "2011-06-04T17:33:38Z", "is_private": false}]