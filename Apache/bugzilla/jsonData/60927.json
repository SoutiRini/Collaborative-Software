[{"count": 0, "tags": [], "text": "Background:\n\nTomcat provides the org.apache.catalina.startup.Tomcat class to easily build embedded web applications. By default, it set the name \"Tomcat\" for both Service and Engine component.\n\nHowever, for a \"standard\" tomcat instance, the default name is \"Catalina\", which is configured via server.xml.\n\nBecause the name is part of the object name for JMX, external programs will suffer from inconsistent object names when monitoring tomcat under such two scenarios. For example, a spring-boot application uses embedded tomcat as default servlet container, to query the tomcat version exposed by StandardServer, one must use 'Tomcat:type=Server' as object name.\n\n\nProposal:\n\nEnsure the object name of all internal components are consistent for both standard and embedded tomcat scenarios.\n\nDetails improvements includes:\n1. Change the default name of embedded tomcat to 'Catalina', to achieve this, I think we just need to remove the explicit call to 'setName( \"Tomcat\" )' since 'Catalina' is the default name.\n2. Provide a programmable interface for org.apache.catalina.startup.Tomcat ( via both constructor and setter) so that the name of Tomcat can be configurable rather that hard-coded 'Tomcat'.\n\nAny thoughts?\n\nI would like to provide a patch if it is agreed to do so.", "attachment_id": null, "bug_id": 60927, "id": 198034, "time": "2017-03-28T06:54:34Z", "creator": "huxing.zhang@gmail.com", "creation_time": "2017-03-28T06:54:34Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 60927, "attachment_id": null, "id": 198036, "time": "2017-03-28T08:44:05Z", "creator": "huxing.zhang@gmail.com", "creation_time": "2017-03-28T08:44:05Z", "is_private": false, "text": "One of the workaround might be: \n1) call javax.management.MBeanServer#queryNames('*:type=Server', null) to get a set of possible object names.\n2) iterate through all the possible object names and get the info you want.\n\nBut I feel that providing the ability to config domain name in embeded tomcat is still useful, at least it allows the user the simplify the way getting information via JMX."}, {"count": 2, "tags": [], "bug_id": 60927, "attachment_id": null, "text": "It has been this way since the class was first introduced some 8+ years ago. Users have always been able to change the names if they wish to do so.\n\nExperience has shown that changing the default JMX name of a component in a point release breaks JMX monitoring for existing users. That limits any change to 9.0.x only and it will still break things for existing 9.0.x users.\n\nGiven that this is only a default, it doesn't look to me as if the benefit outweighs the risk.", "id": 198041, "time": "2017-03-28T10:33:28Z", "creator": "markt@apache.org", "creation_time": "2017-03-28T10:33:28Z", "is_private": false}, {"count": 3, "tags": [], "creator": "huxing.zhang@gmail.com", "attachment_id": null, "id": 198044, "time": "2017-03-28T15:22:54Z", "bug_id": 60927, "creation_time": "2017-03-28T15:22:54Z", "is_private": false, "text": "(In reply to Mark Thomas from comment #2)\n> It has been this way since the class was first introduced some 8+ years ago.\n\nI don't know that exists for so long time until you mentioned.\n\n> Users have always been able to change the names if they wish to do so.\n\nYes, with only following 2 lines of code:\n\nTomcat tomcat = new Tomcat();\ntomcat.getEngine().setName(\"Catalina\");\n\nNote that the following code won't work:\n\nTomcat tomcat = new Tomcat();\ntomcat.getService().setName(\"Catalina\");\n\nWhat I thought is sth. likes this:\n\nTomcat tomcat = new Tomcat(\"Catalina\");\n\nBut there is no much difference.\n\n> \n> Experience has shown that changing the default JMX name of a component in a\n> point release breaks JMX monitoring for existing users. That limits any\n> change to 9.0.x only and it will still break things for existing 9.0.x users.\n\nIt looks reasonable to me.\n\n> Given that this is only a default, it doesn't look to me as if the benefit\n> outweighs the risk.\n\nAgreed.\n\nI will withdraw this proposal, our monitoring tools has been updated using the above workaround."}]