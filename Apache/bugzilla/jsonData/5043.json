[{"count": 0, "tags": [], "creator": "davidw@apache.org", "attachment_id": null, "is_private": false, "id": 8208, "time": "2001-11-23T02:33:24Z", "bug_id": 5043, "creation_time": "2001-11-23T02:33:24Z", "text": "> please keep in mind that with mod_websh, you will not find HTTP\n> headers in the environment.\n\nWould it make sense to put them there?  If I were writing an\napplication that I subsequently decided to run under mod_websh, I\nwould find the absence of these a bit irritating.\n\n> I think you should use an accessor to be websh/mod_websh\n> independent.  I thought that we have such an accessor at C level,\n> but that seems not to be true. Just to explain the concept (I assume\n> you realized that long ago, but anyway):\n\n> - foo.h     declares the \"interface\"\n> - foo_ap.c  provides the implementation in the mod_websh case\n> - foo_cgi.c provides the implementation for the websh case\n> - foo.c     implements common parts\n\n> In this example, the method \"requestFillRequestValues\" is\n> implemented both in request_ap.c and request_cgi.c.\n\n> So, I think what we will need is something like\n> Tcl_Obj *getHttpHeader(Tcl_Obj *key) {}\n> abd use this instead of\n> >   +\tchar *https = Tcl_GetVar2(interp, \"env\", \"HTTPS\", 0);\n\n> What do you think ?\n\nThat's a good idea, but what's to prevent us from just filling in the\n'env' array, so that people can see these variables from the user\nlevel as well?  That's what I do in mod_dtcl/rivet, and the NWS guys\ndo as well."}, {"count": 1, "tags": [], "creator": "davidw@apache.org", "attachment_id": null, "id": 8306, "time": "2001-11-27T03:26:15Z", "bug_id": 5043, "creation_time": "2001-11-27T03:26:15Z", "is_private": false, "text": "How about this:\n\nby default, urlData->scheme is not filled in, leaving it as a config\noption, which does fill it in.\n\nAt 'runtime' (when cmdurl is run), it then either fills it in with 1)\nthe config option (takes precedence) 2) https, if that's found amongst\nthe environmental variables, or 3) the default.\n\nA bit more calculation each time around, but it does keep the code\nsimpler in other places, and makes the calculation at the correct time\nfor mod_websh (which it wasn't for my original code)."}, {"count": 2, "tags": [], "creator": "ronnie.brunner@netcetera.ch", "attachment_id": null, "is_private": false, "id": 8819, "time": "2001-12-12T07:10:17Z", "bug_id": 5043, "creation_time": "2001-12-12T07:10:17Z", "text": "Concerning the question: \"What's to prevent us from just filling the 'env' \narray?\" I'd say: this sounds cool at first glance but this is something you \nhave to reset every request. However we decided, that global stuff should be \nand stay global, because developers might use it on purpose.\n\nThe accessor abstraction we are using would imply that a design pattern would \nbe: never access the envirnoment directly anyway. \n"}, {"count": 3, "tags": [], "bug_id": 5043, "attachment_id": null, "text": "Another way around this problem has been found, and committed.", "id": 11022, "time": "2002-02-21T12:51:01Z", "creator": "davidw@apache.org", "creation_time": "2002-02-21T12:51:01Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 5043, "attachment_id": null, "text": "fixed long ago, thus closed", "id": 162178, "time": "2012-09-14T12:51:36Z", "creator": "mxmanghi@apache.org", "creation_time": "2012-09-14T12:51:36Z", "is_private": false}]