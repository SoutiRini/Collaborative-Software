[{"count": 0, "tags": [], "bug_id": 60131, "attachment_id": 34246, "text": "Created attachment 34246\ndstar_OperandResolver_refactor.patch\n\nNon functionality changing refactor of DStarRunner.java to not use custom implementations to resolve references or coerce to string, but use the OperandResolver static methods instead.\nTests still all pass.\nAlso removes an unused method.", "id": 193693, "time": "2016-09-14T09:14:38Z", "creator": "patrick.zimmermann@haltec.de", "creation_time": "2016-09-14T09:14:38Z", "is_private": false}, {"count": 1, "tags": [], "creator": "apache@gagravarr.org", "attachment_id": null, "text": "With this patch applied to trunk, but not your other patch, the unit tests fail with:\n\nTestcase: processFunctionRow[strange types as headers - wrong number] took 0.001 sec\n   Caused an ERROR\nError evaluating cell DGet!B98\norg.apache.poi.ss.formula.eval.NotImplementedException: Error evaluating cell DGet!B98\n   at org.apache.poi.ss.formula.WorkbookEvaluator.addExceptionInfo(WorkbookEvaluator.java:386)\n   at org.apache.poi.ss.formula.WorkbookEvaluator.evaluateAny(WorkbookEvaluator.java:327)\n   at org.apache.poi.ss.formula.WorkbookEvaluator.evaluate(WorkbookEvaluator.java:259)\n   at org.apache.poi.hssf.usermodel.HSSFFormulaEvaluator.evaluateFormulaCellValue(HSSFFormulaEvaluator.java:200)\n   at org.apache.poi.ss.formula.BaseFormulaEvaluator.evaluate(BaseFormulaEvaluator.java:101)\n   at org.apache.poi.ss.formula.functions.BaseTestFunctionsFromSpreadsheet.processFunctionRow(BaseTestFunctionsFromSpreadsheet.java:151)\nCaused by: org.apache.poi.ss.formula.eval.NotImplementedException: D* function with formula conditions\n   at org.apache.poi.ss.formula.functions.DStarRunner.fullfillsConditions(DStarRunner.java:227)\n   at org.apache.poi.ss.formula.functions.DStarRunner.evaluate(DStarRunner.java:102)\n   at org.apache.poi.ss.formula.functions.DStarRunner.evaluate(DStarRunner.java:55)\n   at org.apache.poi.ss.formula.OperationEvaluatorFactory.evaluate(OperationEvaluatorFactory.java:132)\n   at org.apache.poi.ss.formula.WorkbookEvaluator.evaluateFormula(WorkbookEvaluator.java:550)\n   at org.apache.poi.ss.formula.WorkbookEvaluator.evaluateAny(WorkbookEvaluator.java:317)\n\nDo we need to get your other patch fixed and applied first? Or do we need to fix the current tests for this patch?", "id": 193700, "time": "2016-09-14T11:52:47Z", "bug_id": 60131, "creation_time": "2016-09-14T11:52:47Z", "is_private": false}, {"count": 2, "tags": [], "text": "(In reply to Nick Burch from comment #1)\n> With this patch applied to trunk, but not your other patch, the unit tests\n> fail with:\n> \n> ...\n> \n> Do we need to get your other patch fixed and applied first? Or do we need to\n> fix the current tests for this patch?\n\nI messed up a bit. Sorry for that.\nBoth patches together work fine.\n\n\nThere is a fix relating to error values in the D* database headers in here I overlooked while preparing the patches. Because of that the new DGet.xls (which tests that behavior) fails without this patch.\n\nAlso the DGet.xls has a false-positive test now <skip>ed which this patch relies on.\n\nEasiest way forward: Just apply both patches and the DGet.xls.\nAlternative: I prepare another intermediate DGet.xls so one can apply the patches one after the other.\n\nWhat do you think?", "is_private": false, "id": 193707, "creator": "patrick.zimmermann@haltec.de", "time": "2016-09-14T13:52:03Z", "bug_id": 60131, "creation_time": "2016-09-14T13:52:03Z", "attachment_id": null}, {"count": 3, "tags": [], "text": "Together is fine.", "is_private": false, "bug_id": 60131, "id": 193708, "time": "2016-09-14T13:53:28Z", "creator": "onealj@apache.org", "creation_time": "2016-09-14T13:53:28Z", "attachment_id": null}, {"count": 4, "tags": [], "creator": "apache@gagravarr.org", "attachment_id": null, "text": "Patch applied in r1760717, thanks!", "id": 193711, "time": "2016-09-14T14:59:29Z", "bug_id": 60131, "creation_time": "2016-09-14T14:59:29Z", "is_private": false}]