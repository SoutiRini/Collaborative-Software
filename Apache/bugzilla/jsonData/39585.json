[{"count": 0, "attachment_id": null, "creator": "crossley@apache.org", "is_private": false, "id": 89136, "time": "2006-05-15T15:26:45Z", "bug_id": 39585, "creation_time": "2006-05-15T15:26:45Z", "tags": [], "text": "Using the \"fixcrlf\" task with default \"eol\" on Mac OS X doesn't set the\nline-endings to UNIX CRLF but instead uses CR. This seems to be because the\nos.name is not detected properly in tools/ant/taskdefs/condition/Os.java\n\nos.name: Mac OS X"}, {"count": 1, "attachment_id": null, "creator": "stevel@apache.org", "is_private": false, "id": 89137, "time": "2006-05-15T15:36:06Z", "bug_id": 39585, "creation_time": "2006-05-15T15:36:06Z", "tags": [], "text": "What version of Java are you using? They may have gone and changed the version\nstring (again)."}, {"count": 2, "tags": [], "creator": "crossley@apache.org", "attachment_id": null, "is_private": false, "id": 89153, "time": "2006-05-16T00:14:18Z", "bug_id": 39585, "creation_time": "2006-05-16T00:14:18Z", "text": "Using java version \"1.4.2_09\". Also i was using Ant 1.6.2 and switching to Ant\n1.6.5 all is well. Sorry for the noise.\n\n\n\n"}, {"count": 3, "tags": [], "text": "Woops, i was wrong. I get the same problem with Ant-1.6.5 and with today's trunk.\n\nDoing 'build test'\n----\n...\n     [echo] java.vm.info=mixed mode\n     [echo] java.vm.name=Java HotSpot(TM) Client VM\n     [echo] java.vm.vendor=\"Apple Computer, Inc.\"\n     [echo] java.vm.version=1.4.2-54\n     [echo] os.arch=ppc\n     [echo] os.name=Mac OS X\n     [echo] os.version=10.4.6\n...\n----", "attachment_id": null, "bug_id": 39585, "id": 89155, "time": "2006-05-16T01:21:06Z", "creator": "crossley@apache.org", "creation_time": "2006-05-16T01:21:06Z", "is_private": false}, {"count": 4, "tags": [], "creator": "crossley@apache.org", "text": "Using ant-trunk and following the second example at\nhttp://ant.apache.org/manual/CoreTasks/condition.html\nshows that it is *not* detected as MacOS, and doing\n<condition property=\"isUnix\">\n <os family=\"unix\"/>\n</condition>\nshows that it *is* being detected as \"unix\".\n\nSo perhaps the problem is that fixcrlf task is not handling Mac OS X properly\nfor the default setting of no \"eol\" attribute.", "id": 89157, "time": "2006-05-16T03:47:59Z", "bug_id": 39585, "creation_time": "2006-05-16T03:47:59Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 39585, "attachment_id": null, "text": "wait... okay, what is the standard eol on OS X?  According to your original\nreport, fixcrlf is using cr i.e. \\r and that is what its code is telling it to\ndo... using the Os condition:  Os.isFamily(MAC).  So the only problem I see is\nif OS X uses standard Unix line endings; then we need to rearrange the tests in\nfixcrlf to detect OS X as Unix \"more strongly\" than as \"mac\".  I was not able to\nlocate a definitive answer here though, so in the absence of some kind of\nstatement that would explicitly or implicitly declare a \"standard\" OS X line\nending this issue might remain in limbo as a \"threat\" to backwards compatibility\n(were it implemented).  Documentation affirming that LF is the correct separator\non this platform would, for me, identify this positively as a bug, rendering the\nbackwards-compatibility issue moot.\n\nbr,\nMatt", "id": 89165, "time": "2006-05-16T15:39:56Z", "creator": "mbenson@apache.org", "creation_time": "2006-05-16T15:39:56Z", "is_private": false}, {"text": "I tried to scour the net and managed to find one useful reference. Of course my\nsearch was not exhaustive and i am not really a Mac developer so do not know how\nto find authoritative references.\n\nhttp://developer.apple.com/technotes/tn2002/tn2065.html\nSee \"What are the rules for line endings?\"\nThey also describe the problems that will be encountered if UNIX-style line\nendings are not used, e.g. 'grep' returns the whole file content as a \"matching\nline\".\n\nI presume when they say \"Mac-style\" they mean MacOs prior to \"Mac OS X\".\n\nWe have implemented a workaround by detecting 'os family=\"unix\"' as per my\nComment #4, and specifically using fixcrlf/@eol=unix and otherwise using fixcrlf\nwith no @eol value.\n\np.s. The initial issue Description should say: \"UNIX LF\" and the second sentence\nshould be ignored. See Comment #5.\np.p.s. You might want to change the issue Summary.", "tags": [], "bug_id": 39585, "is_private": false, "count": 6, "id": 89187, "time": "2006-05-17T01:55:51Z", "creator": "crossley@apache.org", "creation_time": "2006-05-17T01:55:51Z", "attachment_id": null}, {"count": 7, "attachment_id": null, "creator": "mbenson@apache.org", "is_private": false, "id": 89203, "time": "2006-05-17T13:54:07Z", "bug_id": 39585, "creation_time": "2006-05-17T13:54:07Z", "tags": [], "text": "Good point RE the issue summary."}, {"count": 8, "attachment_id": null, "creator": "mbenson@apache.org", "text": "Rick Genter responded to my followup query on ant-dev with this link:\n\nhttp://developer.apple.com/documentation/MacOSX/Conceptual/BPFileSystem/Articles/FileSystemGuidelines.html#//apple_ref/doc/uid/20002296-DontLinkElementID_2\n\nI accept this as definitive and support the reworking of fixcrlf to give the\nunix higher priority than mac when determining the appropriate line ending.  I\ncan only assume this means that OS X JVMs use \\n for line.separator as well.", "id": 89215, "time": "2006-05-17T15:45:17Z", "bug_id": 39585, "creation_time": "2006-05-17T15:45:17Z", "tags": [], "is_private": false}, {"count": 9, "tags": [], "bug_id": 39585, "attachment_id": null, "text": "As a fellow OSX user and developer, I've always assumed that the line-ending was\nthe same as unix - any file created with the command line tools (vi etc)\ndefinitely uses the unix line-endings (as they don't transfer to windows boxes\ncleanly)\n\n+1 on making fixcrlf use unix style for Mac OSX (there's an X in the name for a\nreason :)", "id": 89230, "time": "2006-05-18T01:19:57Z", "creator": "kevin.jackson@it.fts-vn.com", "creation_time": "2006-05-18T01:19:57Z", "is_private": false}, {"count": 10, "tags": [], "text": "Okay, like a genius :| I finally thought to google \"OS X\" JVM line.separator,\nand turned up this:\n\nhttp://gemma.apple.com/documentation/Java/Conceptual/Java14Development/06-JavaVM/JavaVM.html\n\nwhich confirms that line.separator is \\n, with the comment \"This is consistent\nwith UNIX-based Java implementations, but different from Mac OS 9 and Windows.\"\n So there is no controversy, current implementation is wrong.", "is_private": false, "bug_id": 39585, "id": 89248, "time": "2006-05-18T13:43:54Z", "creator": "mbenson@apache.org", "creation_time": "2006-05-18T13:43:54Z", "attachment_id": null}, {"count": 11, "tags": [], "text": "fixed in SVN HEAD. Thanks for the report!  Oh, probably best if someone (KEV!)\nwith OS X tests the change.  ;)", "is_private": false, "bug_id": 39585, "id": 89252, "time": "2006-05-18T14:36:22Z", "creator": "mbenson@apache.org", "creation_time": "2006-05-18T14:36:22Z", "attachment_id": null}, {"count": 12, "tags": [], "bug_id": 39585, "is_private": false, "text": "(In reply to comment #11)\n> fixed in SVN HEAD. Thanks for the report!  Oh, probably best if someone (KEV!)\n> with OS X tests the change.  ;)\n\nI'll check it this weekend - btw last day at fts, so gmail from now on...\n\n", "id": 89277, "time": "2006-05-19T02:29:31Z", "creator": "kevin.jackson@it.fts-vn.com", "creation_time": "2006-05-19T02:29:31Z", "attachment_id": null}, {"count": 13, "tags": [], "creator": "mbenson@apache.org", "attachment_id": null, "id": 89349, "time": "2006-05-22T16:50:22Z", "bug_id": 39585, "creation_time": "2006-05-22T16:50:22Z", "is_private": false, "text": "Kev posted to ant-dev (as his bugzilla account is in transition ATM):\n---\nI've just tested this now against the latest trunk on the latest  \nversion of OSX (10.4.6) with Java 1.5.0_06 - everything is fine using  \nthe defaults against a CRLF file modifies the file to LF (unix style).\n---\n\nThanks Kev!"}]