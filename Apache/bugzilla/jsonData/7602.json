[{"attachment_id": null, "tags": [], "creator": "marczi@dev-labs.com", "text": "I have to servlets, let's call them\nForwarder and Test. I send requests (both GET and POST) to the\nForwarder servlet which uses request.getRequestDispatcher to forward\nit to the Test servlet. I'm using Tomcat 4.0.3, but 4.0.4 produced the\nsame.\n\nThe problem is the following: when the Test servlet receives the\nrequest in doGet or doPost, or even in service(), the parameters are\nalready parsed according to the ISO-8859-1 character encoding. This\nmakes impossible to specify the character encoding with\nrequest.setCharacterEncoding() in the Test servlet.\n\nThe Servlet API 2.3 Specification says on page 56: \"Parameters\nspecified in the query string used to create the RequestDispatcher\ntake precedence over other parameters of the same name passed to the\nincluded servlet. The parameters associated with a RequestDispatcher\nare scoped to apply only for the duration of the include or forward\ncall.\"\n\nSo when forwarding to a path \"/servlet/Test?id=5678\" the original id\nparameter is overwritten with value 1234, if, for example the original\nrequest was /servlet/Forwarder?id=1234.\n\nI guess this overwriting is made by parsing the parameters in the\noriginal request and parsing the parameters in the path specified for\nthe Dispatcher and after that they are merged. But at this point, the\noriginal parameters are encoded with ISO-8859-1, and I'm loosing\nvaluable accented characters... Moreover, even posted parameters are\nparsed, although the specification is not clear about it, but on page\n58 (SRV.8.4.1) it says \"The request dispatching mechanism is\nresponsible for aggregating query string parameters when forwarding or\nincluding requests.\"\n\nIMHO this means only query strings should be merged, but posted data\nnot.\n\nAdditionally the ServletInputStream is completely read (0 bytes can be\nread from it) in the Test servlet, so I even can't reparse the\nparameters.\n\nMy suggestion is that neither path nor the original query string\nshould be URLDecoded. Only those parts should be overwritten in the\noriginal query string in which the parameter name equals to any in the\npath string. Parameter parsing should be done in Test servlet, not in\nForwarder servlet.", "count": 0, "id": 12487, "time": "2002-03-29T09:43:33Z", "bug_id": 7602, "creation_time": "2002-03-29T09:43:33Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 7602, "text": "This is unspecified i18n behavior (there is no recognized standard for this, or\nany requirement in the spec). Tomcat will tend to default to UTF8 for req\nparameters encoding in the future (probably in the next major release), which\ncould help a bit.", "id": 12827, "time": "2002-04-04T21:33:17Z", "creator": "remm@apache.org", "creation_time": "2002-04-04T21:33:17Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "text": "Why use a default of \"ISO-8859-1\" or \"UTF-8\" ? Why don't use the page encoding \ndefined by, e.g. <%@ page contentType=\"text/html; charset=Big5\"%> on the page \nhead ?\n\nPeople always use same encoding across the whole application, even for \ninternationisation they will choose whatever suitable encoding and fixed to use \nit across whole application.\n\nAs we, the Multi-byte character user, need to explicitly call \n\nrequest.setCharacterEncoding(\"BIG5\");\n\nbefore getting the passed in Chinese parameters for processing, or-else the \nparameters are decoded using \"ISO-8859-1\" uselessly.\n\nAlso, I suggest to add / change the code of method to facilitate for re-doing \nthe parameter parsing using another encoding for the rare case that different \nencodings are required to use across application.\n\n", "is_private": false, "bug_id": 7602, "id": 20188, "time": "2002-07-25T11:02:10Z", "creator": "richso@i-cable.com", "creation_time": "2002-07-25T11:02:10Z", "attachment_id": null}, {"count": 3, "tags": [], "text": "This continues to be a bug in 4.1.12.", "is_private": false, "bug_id": 7602, "id": 25268, "time": "2002-10-28T13:28:45Z", "creator": "dturkel@acumensolutions.com", "creation_time": "2002-10-28T13:28:45Z", "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 7602, "is_private": false, "text": "With the current state of i18n in HTTP and the servlet specification, I don't\nagree that this is really a bug. i18n can't really work with parameters in RD as\nthey are currently specified (and IMO they shouldn't exist in the first place,\nas the implementation is by definition extremely inefficient; don't use it !!).\n\nIn Tomcat 5, (as an experiment, it may change if people complain) the URL will\nbe processed according to the encoding specified in the connector. As an option,\nit could also use the request content type, but I have to point out that the\nHTTP spec says that the content type only applies to the entity body (= not the\nHTTP header).\n\nIf you want to really control how things are parsed, you should read the request\ncontent before using getParameters (note that i18n will work fine and is well\nspecified for POSTed content).", "id": 35787, "time": "2003-04-22T14:11:03Z", "creator": "remm@apache.org", "creation_time": "2003-04-22T14:11:03Z", "attachment_id": null}]