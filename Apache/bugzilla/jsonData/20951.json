[{"count": 0, "tags": [], "bug_id": 20951, "attachment_id": null, "text": "Using httpd-2.0.46-win32-src.zip, in modules/ssl/ssl_engine_init.c:\n\nOn line 278, ssl_util_thread_setup is called which eventually calls\nCRYPTO_set_locking_callback. Prior to this, no locking callback is set.\n\nHowever, on line 272, ssl_init_Engine is called which, when using the chil\nopenssl engine, eventually gets to this chunk of code in hw_init\n(openssl-0.9.7b/crypto/engine/hw_ncipher.c):\n\n        /* Check if the application decided to support dynamic locks,\n           and if it does, use them. */\n        if (disable_mutex_callbacks == 0)\n                {\n                if (CRYPTO_get_dynlock_create_callback() != NULL &&\n                        CRYPTO_get_dynlock_lock_callback() != NULL &&\n                        CRYPTO_get_dynlock_destroy_callback() != NULL)\n                        {\n                        hwcrhk_globals.mutex_init = hwcrhk_mutex_init;\n                        hwcrhk_globals.mutex_acquire = hwcrhk_mutex_lock;\n                        hwcrhk_globals.mutex_release = hwcrhk_mutex_unlock;\n                        hwcrhk_globals.mutex_destroy = hwcrhk_mutex_destroy;\n                        }\n                else if (CRYPTO_get_locking_callback() != NULL)\n                        {\n                        HWCRHKerr\n(HWCRHK_F_HWCRHK_INIT,HWCRHK_R_DYNAMIC_LOCKING_MISSING);\n                        ERR_add_error_data(1,\"You HAVE to add dynamic locking \ncallbacks via\nCRYPTO_set_dynlock_{create,lock,destroy}_callback()\");\n#if 1 /* This is a HACK which will disappear in 0.9.8 */\n                        hwcrhk_globals.maxmutexes    = 1; /* Only have one lock \n*/\n                        hwcrhk_globals.mutex_init    = hwcrhk_static_mutex_init;\n                        hwcrhk_globals.mutex_acquire = hwcrhk_static_mutex_lock;\n                        hwcrhk_globals.mutex_release = \nhwcrhk_static_mutex_unlock;\n                        hwcrhk_globals.mutex_destroy = \nhwcrhk_static_mutex_destroy;\n#else\n                        goto err;\n#endif\n                        }\n                }\n\nNo dynamic locking callbacks have been set so it checks,\nif (CRYPTO_get_locking_callback() != NULL),\nyet no static locking callback has been set either as\nssl_util_thread_setup has still to be called.\nIt therefore proceeds with no hwcrhk mutex calls which causes an assertion \nfailure in ncipher's software.\n\nCalling ssl_util_thread_setup before ssl_init_Engine results in the\nhwcrhk_static_* calls being used and Apache functioning normally.", "id": 39163, "time": "2003-06-20T13:09:45Z", "creator": "adunn@ncipher.com", "creation_time": "2003-06-20T13:09:45Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 20951, "attachment_id": null, "text": "Fixed in r525709. Moving the ssl_util_thread_setup block makes the assert()\noccurrences go away. ", "id": 101447, "time": "2007-04-04T22:45:05Z", "creator": "sander@temme.net", "creation_time": "2007-04-04T22:45:05Z", "is_private": false}]