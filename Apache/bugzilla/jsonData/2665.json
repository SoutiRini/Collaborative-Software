[{"count": 0, "tags": [], "bug_id": 2665, "attachment_id": null, "id": 3792, "time": "2001-07-18T02:29:47Z", "creator": "omeyer@i3.informatik.rwth-aachen.de", "creation_time": "2001-07-18T02:29:47Z", "is_private": false, "text": "In a complex project I experienced that I sometime get and sometimes don't get\ndeprecation warning. I have a class flagged as deprecated and use it in some\nother class. If I rebuild only the using class (by throwing its class file away)\nI get loads of warnings. If I rebuild both classes (or the complete project for\nthat matter) I get no warning at all.\n\nThis is a major bug as I can't be sure about the static analyse of the program\neven if I compile everything at once.\n\nWe use jdk 1.3 for this."}, {"count": 1, "tags": [], "bug_id": 2665, "attachment_id": null, "id": 3796, "time": "2001-07-18T04:45:13Z", "creator": "conor@apache.org", "creation_time": "2001-07-18T04:45:13Z", "is_private": false, "text": "Can you provide a test case at all?"}, {"count": 2, "tags": [], "bug_id": 2665, "attachment_id": null, "id": 3799, "time": "2001-07-18T05:24:45Z", "creator": "omeyer@i3.informatik.rwth-aachen.de", "creation_time": "2001-07-18T05:24:45Z", "is_private": false, "text": "I did some more testing and documentation reading and found that its not a bug\nbut a feature. javac itself does not issue any warnings when you compile a\ndeprecated code fragment together with its user. From\nhttp://java.sun.com/products/jdk/1.1/docs/guide/misc/deprecation/deprecation.html:\n\nNote: A deprecation warning is suppressed if the compilation unit containing the\ndeprecation is being compiled at the same time as the compilation unit using the\ndeprecated class or member. This allows legacy APIs to be built without\nwarnings. There currently is no other way to suppress the deprecation warnings. \n\n:-("}, {"count": 3, "tags": [], "bug_id": 2665, "attachment_id": null, "id": 3830, "time": "2001-07-18T16:40:05Z", "creator": "robert.watkins@qsipayments.com", "creation_time": "2001-07-18T16:40:05Z", "is_private": false, "text": "You could always structure your build so that the classes declaring the \ndeprecation are built seperately from the classes that use the deprecation."}, {"count": 4, "tags": [], "creator": "omeyer@i3.informatik.rwth-aachen.de", "text": "But I do not know, which classes (or even methodds) are deprecated, as other\npeople in the development process deprecate them. \n\nWhat do you have in mind? Moving the classes to a specific folder, that is build\nfirst? How do I do that with a single method? \n\nDo the complete dependency check and then order the classes according to\ndeprecation within them? Does not sound feasible to me.\n\nIf you have votes left, think about voting for jdc RFE: 4216683", "id": 3833, "time": "2001-07-19T00:33:09Z", "bug_id": 2665, "creation_time": "2001-07-19T00:33:09Z", "is_private": false, "attachment_id": null}]