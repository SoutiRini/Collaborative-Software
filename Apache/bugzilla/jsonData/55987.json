[{"count": 0, "attachment_id": null, "creator": "temp@rafalsujak.com", "is_private": false, "id": 172281, "time": "2014-01-11T14:29:47Z", "bug_id": 55987, "creation_time": "2014-01-11T14:29:47Z", "tags": [], "text": "org.apache.log4j.rolling.RollingFileAppender is hanging application while rollover is running. This situation is noticable when the log file is very large, e.g. application is freezing for about 5 minutes when the log file has 20GB data. \nThe problem is that the methods run() and close() in ActionBase class(GZCompressAction and ZipComressAction inherit from it) are synchronized.\nRollover() in RollingFileAppender is executing for each append event and that method checks if the action is still running. If yes, it calls close() on that action but it will never happen because run and close are synchronized. So application is freezing for time while the log file is rolling.\nHere is a fragment from RollingFileAppender:\n\t\t//\n        //  block until complete\n        //\n        lastRolloverAsyncAction.close();\n        //\n        //    or don't block and return to rollover later\n        //\n        //if (!lastRolloverAsyncAction.isComplete()) return false;\nAs we can see someone thought about it. If we comment close and uncomment isComplete everything looks ok.\nMight it make sense to change it in next version or whether this change will cause other problems?"}]