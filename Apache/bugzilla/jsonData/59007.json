[{"count": 0, "tags": [], "text": "Created attachment 33556\nmod_proxy and mod_proxy_ajp patch\n\nI've encountered a very annoying bug in mod_proxy that causes it to disable balancer worker after a timeout from backend even if the failontimeout set to off.\n\nFollowing messages in the error log appears:\n[2016-02-15 13:00:08.042994] [proxy_ajp:error] [pid 11478:tid 25] [VsGhbMCoW2YAACzWK-0AAABW] AH00992: ajp_read_header: ajp_ilink_receive failed\n[2016-02-15 13:00:08.043068] [proxy_ajp:error] [pid 11478:tid 25] [VsGhbMCoW2YAACzWK-0AAABW] (70007)The timeout specified has expired: AH00893: dialog to x.x.x.x:port (x.x.x.x) failed\n\nI'm using sticky sessions, and after each such timeout (which is normal for some applications that does not handle too long queries well) half of the users are being disconnected and forced to re-login into the application.\n\nI've made a small patch to make mod_proxy_ajp+mod_proxy respect failontimeout property. It is included.", "is_private": false, "bug_id": 59007, "id": 188430, "time": "2016-02-15T10:14:48Z", "creator": "k.j.chernov@gmail.com", "creation_time": "2016-02-15T10:14:48Z", "attachment_id": 33556}, {"count": 1, "tags": [], "bug_id": 59007, "text": "Created attachment 33557\npatch that introduces new option ProxyAllowTimeouts\n\nI did a quick research and it looks like that mod_proxy_http suffers from the same problem -- I got another timeout error that disabled my worker even though failontimeout set to off.\n\n[Mon Feb 15 19:56:14.191054 2016] [proxy_http:error] [pid 14722:tid 22] (70007)The timeout specified has expired: [client x.x.x.x:port] AH01102: error reading stat\nus line from remote server x.x.x.x:port, referer: http://x.x.x.x:port/url\n[Mon Feb 15 19:56:14.191547 2016] [proxy:error] [pid 14722:tid 22] [client x.x.x.x:port] AH00898: Timeout on 100-Continue returned by /url/here, referer: http://x.x.x.x:port/referer/here\n\nI attached another patch that adds new option ProxyAllowTimeouts that disables this annoying behaviour of the mod_proxy.", "id": 188438, "time": "2016-02-15T14:08:21Z", "creator": "k.j.chernov@gmail.com", "creation_time": "2016-02-15T14:08:21Z", "is_private": false, "attachment_id": 33557}, {"count": 2, "tags": [], "text": "I have retry on trunk it is that the failontimeout=On is ignored with ajp and works with http\n\n\nLoadModule proxy_balancer_module modules/mod_proxy_balancer.so\n<Proxy balancer://mycluster forcerecovery=Off failontimeout=On>\n    #BalancerMember http://localhost:8080 ping=1 timeout=5\n    BalancerMember ajp://localhost:8009 ping=1 timeout=5\n</Proxy>\n\nI have fixed a related issue JBCS-390 in trunk", "is_private": false, "bug_id": 59007, "id": 200659, "time": "2017-09-05T07:25:12Z", "creator": "jfclere@gmail.com", "creation_time": "2017-09-05T07:25:12Z", "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 59007, "text": "Looks like it must fix an issue with mod_proxy_http.\n\nI also found that the problem with mod_proxy_ajp was fixed a very long time ago in trunk: https://github.com/apache/httpd/commit/89b7aba0f33d296b52b58d73f2805352a3f83db9\n\nHowever that change didn't make it into 2.4.x tree, so the problem is still there :(", "count": 3, "id": 200662, "time": "2017-09-05T08:40:45Z", "creator": "k.j.chernov@gmail.com", "creation_time": "2017-09-05T08:40:45Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 59007, "is_private": false, "text": "According to my test in trunk it is fixed now,", "id": 200709, "time": "2017-09-06T15:58:14Z", "creator": "jfclere@gmail.com", "creation_time": "2017-09-06T15:58:14Z", "attachment_id": null}, {"count": 5, "tags": [], "text": "Should we keep this open until the fix lands to 2.4.x ?", "is_private": false, "id": 200787, "creation_time": "2017-09-09T09:02:01Z", "time": "2017-09-09T09:02:01Z", "creator": "toscano.luca@gmail.com", "bug_id": 59007, "attachment_id": null}, {"count": 6, "attachment_id": null, "creator": "ylavic.dev@gmail.com", "is_private": false, "id": 200791, "time": "2017-09-09T12:30:12Z", "bug_id": 59007, "creation_time": "2017-09-09T12:30:12Z", "tags": [], "text": "This is how we usually do, it helps keeping track of fixes still to be backported (here r1807318 and r1807338).\n\nAdding the keyword \"FixedInTrunk\", that's where we are now."}]