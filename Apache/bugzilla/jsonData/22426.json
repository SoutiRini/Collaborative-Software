[{"count": 0, "attachment_id": null, "bug_id": 22426, "is_private": false, "id": 42743, "time": "2003-08-14T15:15:57Z", "creator": "dougvanhorn@yahoo.com", "creation_time": "2003-08-14T15:15:57Z", "tags": [], "text": "Summary:  Using <%= request.getContextPath() %> in one of the new, schmancy .tag\nfiles results in the following error:\n\n\n\norg.apache.jasper.JasperException: Unable to compile class for JSP\n\nAn error occurred at line: 2 in the jsp file: /WEB-INF/tags/basePath.tag\n\nGenerated servlet error:\n    [javac] Compiling 1 source file\n\nC:\\usr\\software\\jakarta-tomcat-5.0.7\\work\\Catalina\\localhost\\Tomcat5\\org\\apache\\jsp\\tag\\web\\basePath_tag.java:51:\ncannot resolve symbol\nsymbol  : method getContextPath ()\nlocation: interface javax.servlet.ServletRequest\n      out.write(String.valueOf( request.getContextPath() ));\n                                       ^\n1 error\n\n\n\nThis expression works fine in a regular .jsp file, though.  I can work around\nthe problem with the following:\n\n<%= ((javax.servlet.http.HttpServletRequest)request).getContextPath() %>\n\nThis seems to be because the underlying object is\norg.apache.coyote.tomcat5.CoyoteRequestFacade which implements the\nHttpServletRequest interface.\n\nAnyway, hopefully this isn't some obscure configuration or usage error on my part.\n\nHope this helps.\n\n\ndoug.\n\n\nFULL STACK TRACE:\n\n2003-08-14 09:50:26 StandardWrapperValve[jsp]: Servlet.service() for servlet jsp\nthrew exception\norg.apache.jasper.JasperException: Unable to compile class for JSP\n\nAn error occurred at line: 2 in the jsp file: /WEB-INF/tags/basePath.tag\n\nGenerated servlet error:\n    [javac] Compiling 1 source file\n\nC:\\usr\\software\\jakarta-tomcat-5.0.7\\work\\Catalina\\localhost\\Tomcat5\\org\\apache\\jsp\\tag\\web\\basePath_tag.java:51:\ncannot resolve symbol\nsymbol  : method getContextPath ()\nlocation: interface javax.servlet.ServletRequest\n      out.write(String.valueOf( request.getContextPath() ));\n                                       ^\n1 error\n\n\n\tat\norg.apache.jasper.compiler.DefaultErrorHandler.javacError(DefaultErrorHandler.java:128)\n\tat org.apache.jasper.compiler.ErrorDispatcher.javacError(ErrorDispatcher.java:307)\n\tat org.apache.jasper.compiler.Compiler.generateClass(Compiler.java:415)\n\tat org.apache.jasper.compiler.Compiler.compile(Compiler.java:455)\n\tat org.apache.jasper.compiler.Compiler.compile(Compiler.java:439)\n\tat org.apache.jasper.JspCompilationContext.compile(JspCompilationContext.java:555)\n\tat\norg.apache.jasper.servlet.JspServletWrapper.loadTagFile(JspServletWrapper.java:218)\n\tat\norg.apache.jasper.compiler.TagFileProcessor.loadTagFile(TagFileProcessor.java:506)\n\tat org.apache.jasper.compiler.TagFileProcessor.access$000(TagFileProcessor.java:85)\n\tat\norg.apache.jasper.compiler.TagFileProcessor$TagFileLoaderVisitor.visit(TagFileProcessor.java:552)\n\tat org.apache.jasper.compiler.Node$CustomTag.accept(Node.java:1444)\n\tat org.apache.jasper.compiler.Node$Nodes.visit(Node.java:2142)\n\tat org.apache.jasper.compiler.Node$Visitor.visitBody(Node.java:2184)\n\tat org.apache.jasper.compiler.Node$Visitor.visit(Node.java:2190)\n\tat org.apache.jasper.compiler.Node$Root.accept(Node.java:471)\n\tat org.apache.jasper.compiler.Node$Nodes.visit(Node.java:2142)\n\tat\norg.apache.jasper.compiler.TagFileProcessor.loadTagFiles(TagFileProcessor.java:570)\n\tat org.apache.jasper.compiler.Compiler.generateJava(Compiler.java:271)\n\tat org.apache.jasper.compiler.Compiler.compile(Compiler.java:453)\n\tat org.apache.jasper.compiler.Compiler.compile(Compiler.java:439)\n\tat org.apache.jasper.JspCompilationContext.compile(JspCompilationContext.java:555)\n\tat org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:300)\n\tat org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:293)\n\tat org.apache.jasper.servlet.JspServlet.service(JspServlet.java:240)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:856)\n\tat\norg.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:286)\n\tat\norg.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n\tat\norg.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:254)\n\tat\norg.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:151)\n\tat org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:564)\n\tat\norg.apache.catalina.core.StandardContextValve.invokeInternal(StandardContextValve.java:256)\n\tat\norg.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:210)\n\tat\norg.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:151)\n\tat org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:564)\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:190)\n\tat\norg.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:151)\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:175)\n\tat\norg.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:149)\n\tat org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:564)\n\tat\norg.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:156)\n\tat\norg.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:151)\n\tat org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:564)\n\tat org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:974)\n\tat org.apache.coyote.tomcat5.CoyoteAdapter.service(CoyoteAdapter.java:207)\n\tat org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:647)\n\tat\norg.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.processConnection(Http11Protocol.java:489)\n\tat org.apache.tomcat.util.net.TcpWorkerThread.runIt(PoolTcpEndpoint.java:575)\n\tat\norg.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run(ThreadPool.java:649)\n\tat java.lang.Thread.run(Thread.java:534)"}, {"count": 1, "tags": [], "creator": "dougvanhorn@yahoo.com", "attachment_id": null, "text": "Oops,  so here's the tag file:\n\n<%= ((javax.servlet.http.HttpServletRequest)request).getContextPath() %>\n<%= request.getContextPath() %>\n\nwhere the first line succeeds and the second line fails.", "id": 42744, "time": "2003-08-14T15:18:42Z", "bug_id": 22426, "creation_time": "2003-08-14T15:18:42Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 22426, "attachment_id": null, "id": 43487, "time": "2003-08-29T22:28:48Z", "creator": "kin-man.chung@sun.com", "creation_time": "2003-08-29T22:28:48Z", "is_private": false, "text": "The spec (see JSP.8.8) only required that request be a subclass of\njavax.servlet.ServletResponse, but not necessarily\njavax.servlet.http.HttpServletRequest.  Use your workaround when it works.  :-)"}, {"count": 3, "tags": [], "text": "Arghh.  I meant javax.servlet.ServletRequest, not javax.servlet.ServletResponse!\n", "attachment_id": null, "id": 43488, "creator": "kin-man.chung@sun.com", "time": "2003-08-29T22:48:48Z", "bug_id": 22426, "creation_time": "2003-08-29T22:48:48Z", "is_private": false}, {"count": 4, "tags": [], "text": "After thinking about this issue more, I have decided that there's no harm in\nmaking request a HttpServletRequest and response a HttpServletRequest in a tag\nfile.  Though this is not strictly necessary according to the spec, it will make\npage authors' life easier, and is consistent with those objects in a servlet. \nThe latest source includes such changes.", "attachment_id": null, "id": 43682, "creator": "kin-man.chung@sun.com", "time": "2003-09-03T21:39:19Z", "bug_id": 22426, "creation_time": "2003-09-03T21:39:19Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 22426, "attachment_id": null, "id": 43731, "time": "2003-09-04T21:31:37Z", "creator": "dougvanhorn@yahoo.com", "creation_time": "2003-09-04T21:31:37Z", "is_private": false, "text": "You da Kin-Man!\n\n...\n\nSorry.  Couldn't resist.  FWIW, that's what I was thinking but I didn't want to\nsay anything b/c I'm not privvy to the political inner-workings of the dev group\nand how things like this are handled.\n\nAnyway, excellent work!  (regardless of the fix)\n\nDoes the resolution need to change on this to reflect the now added change?  You\nknow, for posterity and all."}]