[{"count": 0, "tags": [], "creator": "pyropunk@usa.net", "attachment_id": null, "text": "Looks like encodeURL does not encode the url if the protocol, server or port is \nnot the same as the page that is generated.\ni.e. if the context is http://some.server.com/context/path/page\nand the servlet tries to generate encoded urls to:\nhttps://some.server.com/context/path/page\nor\nhttp://some.server.com:81/context/path/page\nor\nhttp://other.server.com/context/path/page\nencodeURL does not add the session id.\n\nI would like to hear an explanation for this bizzarre behaviour.\n\nShould it not just determine whether cookies enabled and encode the URL if they \nare disabled?", "id": 54062, "time": "2004-03-16T12:59:59Z", "bug_id": 27705, "creation_time": "2004-03-16T12:59:59Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 27705, "text": "If the protocol, server or port are different, then the URL refers to a \ndifferent webapp (see section 9.1 of the servlet spec).  Therefore, the URL \nshould not be encoded.", "id": 54082, "time": "2004-03-16T16:15:00Z", "creator": "william.barker@wilshire.com", "creation_time": "2004-03-16T16:15:00Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 27705, "attachment_id": null, "id": 54252, "time": "2004-03-19T05:35:08Z", "creator": "pyropunk@usa.net", "creation_time": "2004-03-19T05:35:08Z", "is_private": false, "text": "I have read the specs (Servlet API version 2.3 and 2.4) and I must disagree \nwith you. All that the spec says is that a webapp lives at a PATH on a server. \nThis does not mean that when the server part changes that it _necessarily_ is a \ndifferent webapp. All three the cases I mentioned in the bug could end up in \nthe same webapp.\n1) https - very likely will end up in the same webapp and I think addresses \nthat have the same structure except for a protocol change must be encoded, \notherwise you have no way of passing the user's session to a secure site.\n2) port - less likely to end up in the same webapp, but it depends on the \nconfig of the connector between the web server and Tomcat.\n3) server name - unlikley but may still end up in the same webapp because the \nweb server may have virtual hosts all pointing to the same webapp.\n\nPlease explain, why Tomcat has chosen to interpret the spec in such a \nrestrictive way instead of looking at the problem logically.\n\nFrom what I have read in some of the newsgroups is that a lot of people had to \ndo their own encodeURL because Tomcat's implementation is too restrictive.\n\nPS: I realize you may have a lot of experience with this, but is is annoying if \nthese \"quirks\" are not documented anywhere and one then usually spends a lot of \ntime debugging a \"feature\"."}, {"count": 3, "tags": [], "creator": "funkman@joedog.org", "attachment_id": null, "text": "reread paragraph 1 on section 9.1 (https is a different prefix than http and\nworse yet some.server.com is a different prefix thatn other.server.com)", "id": 54262, "time": "2004-03-19T12:16:21Z", "bug_id": 27705, "creation_time": "2004-03-19T12:16:21Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 27705, "attachment_id": null, "id": 54266, "time": "2004-03-19T14:31:32Z", "creator": "pyropunk@usa.net", "creation_time": "2004-03-19T14:31:32Z", "is_private": false, "text": "I'm sorry but I do not agree. The spec states:\n[quote]\nA web application is rooted at a specific path within a web server. For\nexample, a catalog application could be located at http://www.mycorp.com/\ncatalog. All requests that start with this prefix will be routed to the\nServletContext which represents the catalog application.\n[/quote]\nIt does not say: Any prefix that is different will/shall/must be routed to a \ndifferent web application. \nIt unfortunately does not state either: There may be many prefixes pointing to \nthe same web application, depending on the configuration of the web server.\n\n..and this is my point: The spec is ambiguous. The programmers should look at \nthe problem and not at an ambigous spec and resolve the ambiguity by coding \nresrictivly."}, {"count": 5, "tags": [], "text": "Don't bother reopening without a patch (disclaimer: we might not accept it). Thanks.", "attachment_id": null, "id": 54275, "creator": "remm@apache.org", "time": "2004-03-19T17:31:27Z", "bug_id": 27705, "creation_time": "2004-03-19T17:31:27Z", "is_private": false}]