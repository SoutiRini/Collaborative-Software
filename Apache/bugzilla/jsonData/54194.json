[{"count": 0, "tags": [], "text": "Created attachment 29626\nPatch against DataSource.java (rev 1412899) from /tomcat/tc7.0.x/trunk\n\nThe exception does not seem to have any impact (at least not for my application) on the connection pools functionality , it's merely a minor annoyance. \n\nThe attached patch fixed the problem for me.\n\nOS: Ubuntu 12.04 64-bit\n\nJDK: \n\njava version \"1.7.0_09\"\nJava(TM) SE Runtime Environment (build 1.7.0_09-b05)\nJava HotSpot(TM) 64-Bit Server VM (build 23.5-b02, mixed mode)\n\nVersion of tomcat-jdbc.jar: 7.0.33\n\nI create the datasource inside a custom ObjectFactory (because I need to retrieve JDBC URL/username/password from a config file on the classpath):\n\nResources are configured inside tomcat/conf/context.xml as follows:\n------------------------------------ \n<Resource name=\"jdbc/db0\"\n          database=\"db0\"\n          auth=\"Container\"\n          type=\"javax.sql.DataSource\"          factory=\"my.DatasourceResourceFactory\" />\n\n<Resource name=\"jdbc/db1\"\n          database=\"db1\"\n          auth=\"Container\"\n          type=\"javax.sql.DataSource\"\n          factory=\"my.DatasourceResourceFactory\" />\n\n------------------------------------\n\nI'm creating the datasource like so:\n\n------------------------------------\n    private DataSource createDataSource(String jdbcUrl,String username,String password) \n    {\n        final PoolProperties p = new PoolProperties();\n        p.setUrl( jdbcUrl );\n        p.setDriverClassName(\"org.postgresql.Driver\");\n        p.setUsername( username );\n        p.setPassword( password );      \n\n        p.setJmxEnabled(false); // JMX disabled\n\n        p.setTestWhileIdle(false);\n        p.setTestOnBorrow(true);\n        p.setValidationQuery(\"SELECT 1\");\n        p.setTestOnReturn(false);\n        p.setValidationInterval(30000);\n        p.setInitialSize(5); \n        p.setMaxActive(25);      \n        p.setMinIdle(0); \n        p.setMaxIdle(8); \n        p.setTimeBetweenEvictionRunsMillis(30000);\n        p.setMinEvictableIdleTimeMillis(30000);         \n        p.setRemoveAbandonedTimeout(60);\n        p.setLogAbandoned(false);\n        p.setRemoveAbandoned(false);   p.setJdbcInterceptors(\"org.apache.tomcat.jdbc.pool.interceptor.ConnectionState;org.apache.tomcat.jdbc.pool.interceptor.StatementFinalizer\");\n\n        final DataSource datasource = new DataSource();\n        datasource.setPoolProperties(p);\n        return datasource;        \n    }\n------------------------------------\n\nThis is the exception showing up in the log file:\n\n------------------------------------\n\n2012-11-23 14:53:48,109 [pool-2-thread-1] ERROR org.apache.tomcat.jdbc.pool.DataSource  - Unable to register JDBC pool with JMX\njava.lang.NullPointerException\n        at org.apache.tomcat.jdbc.pool.DataSource.registerJmx(DataSource.java:135)\n        at org.apache.tomcat.jdbc.pool.DataSource.preRegister(DataSource.java:102)\n        at org.apache.tomcat.util.modeler.BaseModelMBean.preRegister(BaseModelMBean.java:1132)\n        at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.preRegister(DefaultMBeanServerInterceptor.java:1007)\n        at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerDynamicMBean(DefaultMBeanServerInterceptor.java:919)\n        at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerObject(DefaultMBeanServerInterceptor.java:900)\n        at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean(DefaultMBeanServerInterceptor.java:324)\n        at com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean(JmxMBeanServer.java:512)\n        at org.apache.tomcat.util.modeler.Registry.registerComponent(Registry.java:742)\n        at org.apache.catalina.core.NamingContextListener.addResource(NamingContextListener.java:1062)\n        at org.apache.catalina.core.NamingContextListener.createNamingContext(NamingContextListener.java:671)\n        at org.apache.catalina.core.NamingContextListener.lifecycleEvent(NamingContextListener.java:270)\n        at org.apache.catalina.util.LifecycleSupport.fireLifecycleEvent(LifecycleSupport.java:119)\n        at org.apache.catalina.util.LifecycleBase.fireLifecycleEvent(LifecycleBase.java:90)\n        at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5161)\n        at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)\n        at org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:895)\n        at org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:871)\n        at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:615)\n        at org.apache.catalina.startup.HostConfig.deployWAR(HostConfig.java:958)\n        at org.apache.catalina.startup.HostConfig$DeployWar.run(HostConfig.java:1599)\n        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)\n        at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334)\n        at java.util.concurrent.FutureTask.run(FutureTask.java:166)\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110)\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)\n        at java.lang.Thread.run(Thread.java:722)", "attachment_id": 29626, "bug_id": 54194, "id": 163620, "time": "2012-11-23T14:35:58Z", "creator": "tobias.gierke@voipfuture.com", "creation_time": "2012-11-23T14:35:58Z", "is_private": false}, {"attachment_id": null, "tags": [], "bug_id": 54194, "is_private": false, "count": 1, "id": 163822, "time": "2012-12-04T06:37:37Z", "creator": "kfujino@apache.org", "creation_time": "2012-12-04T06:37:37Z", "text": "Thanks for the report.\nThe cause of this NPE is not initializing connection pool.\nYou can avoid this problem by calling dataSource.createPool().\n\nAnyway, I am going to apply your patch. \nAnd it will be included in 7.0.34 onwards."}]