[{"count": 0, "attachment_id": null, "creator": "rsmudz@logicon.com", "is_private": false, "id": 5684, "time": "2001-09-17T14:06:42Z", "bug_id": 3663, "creation_time": "2001-09-17T14:06:42Z", "tags": [], "text": "When validating against what appears to be a valid schema (most current \nTurboXML says so anyway), I get the following error: Schema error: Anonymous \ncomplexType: src-ct.2: Cannot find type definition for 'system'.  In consulting \nthe source, the error seems to be thrown at line 4140 of \norg.apache.xerces.validators.schema.TraverseSchema.  I have included the schema \nand the accompanying .xml file.  (You won't be able to get to the server \nholding the schema so please modify as necessary)\n\n<?xml version = \"1.0\" encoding = \"UTF-8\"?>\n<!--Generated by XML Authority. Conforms to w3c \nhttp://www.w3.org/2001/XMLSchema-->\n<xsd:schema xmlns = \"http://ems.spawar.navy.mil/schema/status/basic\"\n\t targetNamespace = \"http://ems.spawar.navy.mil/schema/status/basic\"\n\t xmlns:xsd = \"http://www.w3.org/2001/XMLSchema\"\n\t version = \"1.0\"\n\t elementFormDefault = \"qualified\">\n\t<xsd:element name = \"system\">\n\t\t<xsd:annotation>\n\t\t\t<xsd:documentation>all status is provided by systems \nand subsystems of the system both of which implement the StatusProvider \ninterface.  This tag is replaced \nat runtime by the software with valid configuration data in the dataFile listed \nand allow for validation of the document prior to the\nsubstitution as well as after by this schema.  </xsd:documentation>\n\t\t</xsd:annotation>\n\t\t<xsd:complexType>\n\t\t\t<xsd:attribute name = \"id\" use = \"required\">\n\t\t\t\t<xsd:simpleType>\n\t\t\t\t\t<xsd:restriction base = \"xsd:string\">\n\t\t\t\t\t\t<xsd:whiteSpace value \n= \"collapse\"/>\n\t\t\t\t\t</xsd:restriction>\n\t\t\t\t</xsd:simpleType>\n\t\t\t</xsd:attribute>\n\t\t</xsd:complexType>\n\t</xsd:element>\n\t<xsd:element name = \"choice\">\n\t\t<xsd:annotation>\n\t\t\t<xsd:documentation>allows the specification of default \nchoice(s) should the user not configure the system.  It is imperative the \nsystem developers specify the subsystem of \ndefault choices should the user not configure the system through the \ninterface</xsd:documentation>\n\t\t</xsd:annotation>\n\t\t<xsd:complexType>\n\t\t\t<xsd:attribute name = \"id\" use = \"required\">\n\t\t\t\t<xsd:simpleType>\n\t\t\t\t\t<xsd:restriction base = \"xsd:string\">\n\t\t\t\t\t\t<xsd:whiteSpace value \n= \"collapse\"/>\n\t\t\t\t\t</xsd:restriction>\n\t\t\t\t</xsd:simpleType>\n\t\t\t</xsd:attribute>\n\t\t\t<xsd:attribute name = \"value\" use = \"required\">\n\t\t\t\t<xsd:simpleType>\n\t\t\t\t\t<xsd:restriction base = \"xsd:string\">\n\t\t\t\t\t\t<xsd:whiteSpace value \n= \"collapse\"/>\n\t\t\t\t\t</xsd:restriction>\n\t\t\t\t</xsd:simpleType>\n\t\t\t</xsd:attribute>\n\t\t\t<xsd:attribute name = \"selected\" default = \"false\" type \n= \"xsd:boolean\"/>\n\t\t\t<xsd:attribute name = \"tip\" use = \"optional\" type \n= \"xsd:string\"/>\n\t\t\t<xsd:attribute name = \"visible\" default = \"true\" type \n= \"xsd:boolean\"/>\n\t\t\t<xsd:attribute name = \"system\" use = \"optional\" type \n= \"xsd:string\"/>\n\t\t</xsd:complexType>\n\t</xsd:element>\n\t<xsd:element name = \"preferences\">\n\t\t<xsd:complexType>\n\t\t\t<xsd:sequence>\n\t\t\t\t<xsd:element ref = \"choice\" minOccurs = \"0\" \nmaxOccurs = \"unbounded\"/>\n\t\t\t</xsd:sequence>\n\t\t</xsd:complexType>\n\t</xsd:element>\n\t<xsd:element name = \"select\">\n\t\t<xsd:annotation>\n\t\t\t<xsd:documentation>tag allows the specification of the \nclass to be used for configuring this setting.  The class can be one of the \ndefined configuration classes\nor it can be a custom class which implements the StatusConfigurationProvider \ninterface which can be instantiated via an empty constructor.\nthe class attribute must be the fully qualifed class name.  height and width \nattributes are optional and should be used when a custom \nStatusConfigurationProvider is created which requires specific \ndimensions.</xsd:documentation>\n\t\t</xsd:annotation>\n\t\t<xsd:complexType>\n\t\t\t<xsd:simpleContent>\n\t\t\t\t<xsd:extension base = \"xsd:string\">\n\t\t\t\t\t<xsd:attribute name = \"height\" use \n= \"optional\">\n\t\t\t\t\t\t<xsd:simpleType>\n\t\t\t\t\t\t\t<xsd:restriction base \n= \"xsd:positiveInteger\">\n\t\t\t\t\t\t\t\t<xsd:whiteSpace \nvalue = \"collapse\"/>\n\t\t\t\t\t\t\t</xsd:restriction>\n\t\t\t\t\t\t</xsd:simpleType>\n\t\t\t\t\t</xsd:attribute>\n\t\t\t\t\t<xsd:attribute name = \"width\" use \n= \"optional\">\n\t\t\t\t\t\t<xsd:simpleType>\n\t\t\t\t\t\t\t<xsd:restriction base \n= \"xsd:positiveInteger\">\n\t\t\t\t\t\t\t\t<xsd:whiteSpace \nvalue = \"collapse\"/>\n\t\t\t\t\t\t\t</xsd:restriction>\n\t\t\t\t\t\t</xsd:simpleType>\n\t\t\t\t\t</xsd:attribute>\n\t\t\t\t\t<xsd:attribute name = \"class\" use \n= \"optional\">\n\t\t\t\t\t\t<xsd:simpleType>\n\t\t\t\t\t\t\t<xsd:restriction base \n= \"xsd:string\">\n\t\t\t\t\t\t\t\t<xsd:whiteSpace \nvalue = \"collapse\"/>\n\t\t\t\t\t\t\t</xsd:restriction>\n\t\t\t\t\t\t</xsd:simpleType>\n\t\t\t\t\t</xsd:attribute>\n\t\t\t\t</xsd:extension>\n\t\t\t</xsd:simpleContent>\n\t\t</xsd:complexType>\n\t</xsd:element>\n\t<xsd:element name = \"conditional\">\n\t\t<xsd:annotation>\n\t\t\t<xsd:documentation>tag which represents data which is \nconfigurable based on the selection of other settings.  May be removed in the \nfuture.</xsd:documentation>\n\t\t</xsd:annotation>\n\t\t<xsd:complexType>\n\t\t\t<xsd:sequence>\n\t\t\t\t<xsd:element ref = \"select\" minOccurs = \"0\"/>\n\t\t\t\t<xsd:element ref = \"preferences\" minOccurs \n= \"0\"/>\n\t\t\t</xsd:sequence>\n\t\t\t<xsd:attribute name = \"nodeName\" default \n= \"Conditional\">\n\t\t\t\t<xsd:simpleType>\n\t\t\t\t\t<xsd:restriction base = \"xsd:string\">\n\t\t\t\t\t\t<xsd:whiteSpace value \n= \"collapse\"/>\n\t\t\t\t\t</xsd:restriction>\n\t\t\t\t</xsd:simpleType>\n\t\t\t</xsd:attribute>\n\t\t\t<xsd:attribute name = \"prefid\" use = \"required\">\n\t\t\t\t<xsd:simpleType>\n\t\t\t\t\t<xsd:restriction base = \"xsd:string\">\n\t\t\t\t\t\t<xsd:whiteSpace value \n= \"collapse\"/>\n\t\t\t\t\t</xsd:restriction>\n\t\t\t\t</xsd:simpleType>\n\t\t\t</xsd:attribute>\n\t\t\t<xsd:attribute name = \"value\" use = \"required\">\n\t\t\t\t<xsd:simpleType>\n\t\t\t\t\t<xsd:restriction base = \"xsd:string\">\n\t\t\t\t\t\t<xsd:whiteSpace value \n= \"collapse\"/>\n\t\t\t\t\t</xsd:restriction>\n\t\t\t\t</xsd:simpleType>\n\t\t\t</xsd:attribute>\n\t\t\t<xsd:attribute name = \"disabled\" use = \"required\" type \n= \"xsd:boolean\"/>\n\t\t\t<xsd:attribute name = \"controllable\" use = \"required\" \ntype = \"xsd:boolean\"/>\n\t\t\t<xsd:attribute name = \"tip\" use = \"optional\" type \n= \"xsd:string\"/>\n\t\t\t<xsd:attribute name = \"configurable\" default = \"true\" \ntype = \"xsd:boolean\"/>\n\t\t</xsd:complexType>\n\t</xsd:element>\n\t<xsd:element name = \"columns\">\n\t\t<xsd:annotation>\n\t\t\t<xsd:documentation>tag represents configuration of \ncolumn data.</xsd:documentation>\n\t\t</xsd:annotation>\n\t\t<xsd:complexType>\n\t\t\t<xsd:sequence>\n\t\t\t\t<xsd:element ref = \"select\"/>\n\t\t\t\t<xsd:element ref = \"preferences\"/>\n\t\t\t</xsd:sequence>\n\t\t\t<xsd:attribute name = \"nodeName\" fixed = \"Column \nSelection\">\n\t\t\t\t<xsd:simpleType>\n\t\t\t\t\t<xsd:restriction base = \"xsd:string\">\n\t\t\t\t\t\t<xsd:whiteSpace value \n= \"collapse\"/>\n\t\t\t\t\t</xsd:restriction>\n\t\t\t\t</xsd:simpleType>\n\t\t\t</xsd:attribute>\n\t\t\t<xsd:attribute name = \"disabled\" use = \"required\" type \n= \"xsd:boolean\"/>\n\t\t\t<xsd:attribute name = \"controllable\" use = \"required\" \ntype = \"xsd:boolean\"/>\n\t\t\t<xsd:attribute name = \"tip\" use = \"optional\" type \n= \"xsd:string\"/>\n\t\t\t<xsd:attribute name = \"configurable\" default = \"true\" \ntype = \"xsd:boolean\"/>\n\t\t</xsd:complexType>\n\t</xsd:element>\n\t<xsd:element name = \"data\">\n\t\t<xsd:annotation>\n\t\t\t<xsd:documentation>contains all data for that system, \nspecifically attributes, filters, and providers for that \nsystem.</xsd:documentation>\n\t\t</xsd:annotation>\n\t\t<xsd:complexType>\n\t\t\t<xsd:choice>\n\t\t\t\t<xsd:sequence>\n\t\t\t\t\t<xsd:element ref = \"attributes\" \nminOccurs = \"0\"/>\n\t\t\t\t\t<xsd:element ref = \"filters\" minOccurs \n= \"0\"/>\n\t\t\t\t\t<xsd:element ref = \"providers\" \nminOccurs = \"0\"/>\n\t\t\t\t</xsd:sequence>\n\t\t\t\t<xsd:element ref = \"conditional\" minOccurs \n= \"0\" maxOccurs = \"unbounded\"/>\n\t\t\t</xsd:choice>\n\t\t\t<xsd:attribute name = \"nodeName\" fixed = \"Data\">\n\t\t\t\t<xsd:simpleType>\n\t\t\t\t\t<xsd:restriction base = \"xsd:string\">\n\t\t\t\t\t\t<xsd:whiteSpace value \n= \"collapse\"/>\n\t\t\t\t\t</xsd:restriction>\n\t\t\t\t</xsd:simpleType>\n\t\t\t</xsd:attribute>\n\t\t\t<xsd:attribute name = \"disabled\" use = \"required\" type \n= \"xsd:boolean\"/>\n\t\t\t<xsd:attribute name = \"tip\" use = \"optional\" type \n= \"xsd:string\"/>\n\t\t</xsd:complexType>\n\t</xsd:element>\n\t<xsd:element name = \"engine\">\n\t\t<xsd:annotation>\n\t\t\t<xsd:documentation>the engine which drives the display \nfor that particular system.  This tag is typically used when the system \nprovides its own display interface for\ndisplaying status.   In most cases, device will be subsystems of the circuit \nsystem so it is not used. </xsd:documentation>\n\t\t</xsd:annotation>\n\t\t<xsd:complexType>\n\t\t\t<xsd:sequence>\n\t\t\t\t<xsd:element ref = \"select\"/>\n\t\t\t\t<xsd:element ref = \"preferences\"/>\n\t\t\t</xsd:sequence>\n\t\t\t<xsd:attribute name = \"nodeName\" fixed = \"Driver\">\n\t\t\t\t<xsd:simpleType>\n\t\t\t\t\t<xsd:restriction base = \"xsd:string\">\n\t\t\t\t\t\t<xsd:whiteSpace value \n= \"collapse\"/>\n\t\t\t\t\t</xsd:restriction>\n\t\t\t\t</xsd:simpleType>\n\t\t\t</xsd:attribute>\n\t\t\t<xsd:attribute name = \"disabled\" use = \"required\" type \n= \"xsd:boolean\"/>\n\t\t\t<xsd:attribute name = \"controllable\" use = \"required\" \ntype = \"xsd:boolean\"/>\n\t\t\t<xsd:attribute name = \"tip\" use = \"optional\" type \n= \"xsd:string\"/>\n\t\t\t<xsd:attribute name = \"configurable\" default = \"true\" \ntype = \"xsd:boolean\"/>\n\t\t</xsd:complexType>\n\t</xsd:element>\n\t<xsd:element name = \"display\">\n\t\t<xsd:annotation>\n\t\t\t<xsd:documentation>defines custom settings for the \ndisplay of system information.   typically read-only \ninformation</xsd:documentation>\n\t\t</xsd:annotation>\n\t\t<xsd:complexType>\n\t\t\t<xsd:sequence>\n\t\t\t\t<xsd:element ref = \"engine\" minOccurs = \"0\"/>\n\t\t\t\t<xsd:element ref = \"columns\" minOccurs = \"0\"/>\n\t\t\t\t<xsd:element ref = \"view\" minOccurs = \"0\"/>\n\t\t\t\t<xsd:element ref = \"title\" minOccurs = \"0\"/>\n\t\t\t\t<xsd:element ref = \"conditional\" minOccurs \n= \"0\" maxOccurs = \"unbounded\"/>\n\t\t\t</xsd:sequence>\n\t\t\t<xsd:attribute name = \"nodeName\" fixed = \"Display\">\n\t\t\t\t<xsd:simpleType>\n\t\t\t\t\t<xsd:restriction base = \"xsd:string\">\n\t\t\t\t\t\t<xsd:whiteSpace value \n= \"collapse\"/>\n\t\t\t\t\t</xsd:restriction>\n\t\t\t\t</xsd:simpleType>\n\t\t\t</xsd:attribute>\n\t\t\t<xsd:attribute name = \"disabled\" use = \"required\" type \n= \"xsd:boolean\"/>\n\t\t\t<xsd:attribute name = \"tip\" use = \"optional\" type \n= \"xsd:string\"/>\n\t\t</xsd:complexType>\n\t</xsd:element>\n\t<xsd:element name = \"configuration\">\n\t\t<xsd:annotation>\n\t\t\t<xsd:documentation>configurations are the expression of \na system in explicit terms and are thus members of the substitution group \nsystem.  This allows for validation of xml documents\nbefore and after the substitution of system specific data.  All systems are \nembodied by the configuration tag as the root element found in the file defined \nin the\ndataFile attribute of the system tag.</xsd:documentation>\n\t\t</xsd:annotation>\n\t\t<xsd:complexType>\n\t\t\t<xsd:complexContent>\n\t\t\t\t<xsd:extension base = \"system\">\n\t\t\t\t\t<xsd:sequence>\n\t\t\t\t\t\t<xsd:element ref = \"display\" \nminOccurs = \"0\"/>\n\t\t\t\t\t\t<xsd:element ref = \"data\"/>\n\t\t\t\t\t\t<xsd:element ref = \"subsystem\" \nminOccurs = \"0\" maxOccurs = \"unbounded\"/>\n\t\t\t\t\t</xsd:sequence>\n\t\t\t\t\t<xsd:attribute name = \"nodeName\" use \n= \"required\">\n\t\t\t\t\t\t<xsd:simpleType>\n\t\t\t\t\t\t\t<xsd:restriction base \n= \"xsd:string\">\n\t\t\t\t\t\t\t\t<xsd:whiteSpace \nvalue = \"collapse\"/>\n\t\t\t\t\t\t\t</xsd:restriction>\n\t\t\t\t\t\t</xsd:simpleType>\n\t\t\t\t\t</xsd:attribute>\n\t\t\t\t\t<xsd:attribute name = \"disabled\" use \n= \"required\" type = \"xsd:boolean\"/>\n\t\t\t\t\t<xsd:attribute name = \"tip\" use \n= \"optional\" type = \"xsd:string\"/>\n\t\t\t\t\t<xsd:attribute name = \"controllable\" \nuse = \"required\" type = \"xsd:boolean\"/>\n\t\t\t\t</xsd:extension>\n\t\t\t</xsd:complexContent>\n\t\t</xsd:complexType>\n\t</xsd:element>\n\t<xsd:element name = \"font\">\n\t\t<xsd:annotation>\n\t\t\t<xsd:documentation>determines the font to use during \nthe display of systems.  A master setting not recognized in the configuration \ntag available to systems. </xsd:documentation>\n\t\t</xsd:annotation>\n\t\t<xsd:complexType>\n\t\t\t<xsd:sequence>\n\t\t\t\t<xsd:element ref = \"select\"/>\n\t\t\t\t<xsd:element ref = \"preferences\"/>\n\t\t\t</xsd:sequence>\n\t\t\t<xsd:attribute name = \"nodeName\" fixed = \"Font\">\n\t\t\t\t<xsd:simpleType>\n\t\t\t\t\t<xsd:restriction base = \"xsd:string\">\n\t\t\t\t\t\t<xsd:whiteSpace value \n= \"collapse\"/>\n\t\t\t\t\t</xsd:restriction>\n\t\t\t\t</xsd:simpleType>\n\t\t\t</xsd:attribute>\n\t\t\t<xsd:attribute name = \"disabled\" use = \"required\" type \n= \"xsd:boolean\"/>\n\t\t\t<xsd:attribute name = \"controllable\" use = \"required\" \ntype = \"xsd:boolean\"/>\n\t\t\t<xsd:attribute name = \"tip\" use = \"optional\" type \n= \"xsd:string\"/>\n\t\t\t<xsd:attribute name = \"configurable\" default = \"true\" \ntype = \"xsd:boolean\"/>\n\t\t</xsd:complexType>\n\t</xsd:element>\n\t<xsd:element name = \"layout\">\n\t\t<xsd:annotation>\n\t\t\t<xsd:documentation>defines selections available in \nlaying out the status desktop.  a master setting not recognized in the \nconfiguration section available to systems.</xsd:documentation>\n\t\t</xsd:annotation>\n\t\t<xsd:complexType>\n\t\t\t<xsd:sequence>\n\t\t\t\t<xsd:element ref = \"select\"/>\n\t\t\t\t<xsd:element ref = \"preferences\"/>\n\t\t\t</xsd:sequence>\n\t\t\t<xsd:attribute name = \"nodeName\" fixed = \"Layout\">\n\t\t\t\t<xsd:simpleType>\n\t\t\t\t\t<xsd:restriction base = \"xsd:string\">\n\t\t\t\t\t\t<xsd:whiteSpace value \n= \"collapse\"/>\n\t\t\t\t\t</xsd:restriction>\n\t\t\t\t</xsd:simpleType>\n\t\t\t</xsd:attribute>\n\t\t\t<xsd:attribute name = \"disabled\" use = \"required\" type \n= \"xsd:boolean\"/>\n\t\t\t<xsd:attribute name = \"tip\" use = \"optional\" type \n= \"xsd:string\"/>\n\t\t\t<xsd:attribute name = \"controllable\" use = \"required\" \ntype = \"xsd:boolean\"/>\n\t\t\t<xsd:attribute name = \"configurable\" default = \"true\" \ntype = \"xsd:boolean\"/>\n\t\t</xsd:complexType>\n\t</xsd:element>\n\t<xsd:element name = \"master\">\n\t\t<xsd:annotation>\n\t\t\t<xsd:documentation>universal settings for all system \ndisplays</xsd:documentation>\n\t\t</xsd:annotation>\n\t\t<xsd:complexType>\n\t\t\t<xsd:sequence>\n\t\t\t\t<xsd:element ref = \"layout\"/>\n\t\t\t\t<xsd:element ref = \"conditional\" minOccurs \n= \"0\" maxOccurs = \"unbounded\"/>\n\t\t\t\t<xsd:element ref = \"font\"/>\n\t\t\t</xsd:sequence>\n\t\t\t<xsd:attribute name = \"nodeName\" fixed = \"Master\">\n\t\t\t\t<xsd:simpleType>\n\t\t\t\t\t<xsd:restriction base = \"xsd:string\">\n\t\t\t\t\t\t<xsd:whiteSpace value \n= \"collapse\"/>\n\t\t\t\t\t</xsd:restriction>\n\t\t\t\t</xsd:simpleType>\n\t\t\t</xsd:attribute>\n\t\t\t<xsd:attribute name = \"disabled\" use = \"required\" type \n= \"xsd:boolean\"/>\n\t\t\t<xsd:attribute name = \"tip\" use = \"optional\" type \n= \"xsd:string\"/>\n\t\t</xsd:complexType>\n\t</xsd:element>\n\t<xsd:element name = \"host\">\n\t\t<xsd:annotation>\n\t\t\t<xsd:documentation>hosts available to the client.  \nTypically, data for this tag is filled in dynamically based on runtime \ndiscovery of hosts so it is empty initially.</xsd:documentation>\n\t\t</xsd:annotation>\n\t\t<xsd:complexType>\n\t\t\t<xsd:sequence>\n\t\t\t\t<xsd:element ref = \"system\" maxOccurs \n= \"unbounded\"/>\n\t\t\t</xsd:sequence>\n\t\t\t<xsd:attribute name = \"ipAddress\" use = \"optional\">\n\t\t\t\t<xsd:simpleType>\n\t\t\t\t\t<xsd:restriction base = \"xsd:string\">\n\t\t\t\t\t\t<xsd:whiteSpace value \n= \"collapse\"/>\n\t\t\t\t\t</xsd:restriction>\n\t\t\t\t</xsd:simpleType>\n\t\t\t</xsd:attribute>\n\t\t\t<xsd:attribute name = \"nodeName\" use = \"required\">\n\t\t\t\t<xsd:simpleType>\n\t\t\t\t\t<xsd:restriction base = \"xsd:string\">\n\t\t\t\t\t\t<xsd:whiteSpace value \n= \"collapse\"/>\n\t\t\t\t\t</xsd:restriction>\n\t\t\t\t</xsd:simpleType>\n\t\t\t</xsd:attribute>\n\t\t\t<xsd:attribute name = \"disabled\" use = \"required\" type \n= \"xsd:boolean\"/>\n\t\t\t<xsd:attribute name = \"tip\" use = \"optional\" type \n= \"xsd:string\"/>\n\t\t</xsd:complexType>\n\t</xsd:element>\n\t<xsd:element name = \"status\">\n\t\t<xsd:annotation>\n\t\t\t<xsd:documentation>the root element for the \nconfiguration document which is loaded into the configuration tree.   This \nstructure is not the same \nas that which actually registers with StatusService.  Rather it is a superset \ncontaining not only configuration selection but\nalso display specific data useful only to the client. </xsd:documentation>\n\t\t</xsd:annotation>\n\t\t<xsd:complexType>\n\t\t\t<xsd:sequence>\n\t\t\t\t<xsd:element ref = \"master\"/>\n\t\t\t\t<xsd:element ref = \"host\" maxOccurs \n= \"unbounded\"/>\n\t\t\t</xsd:sequence>\n\t\t\t<xsd:attribute name = \"nodeName\" use = \"required\">\n\t\t\t\t<xsd:simpleType>\n\t\t\t\t\t<xsd:restriction base = \"xsd:string\">\n\t\t\t\t\t\t<xsd:whiteSpace value \n= \"collapse\"/>\n\t\t\t\t\t</xsd:restriction>\n\t\t\t\t</xsd:simpleType>\n\t\t\t</xsd:attribute>\n\t\t</xsd:complexType>\n\t</xsd:element>\n\t<xsd:element name = \"subsystem\">\n\t\t<xsd:annotation>\n\t\t\t<xsd:documentation>subsystems may be systems themselves \nin that they implement the StatusProvider interface. In their position as a \nsubsystem\nthey are subservient to the system.  The tag structure here allows for the \nproper substitution of configuration data at runtime\nby the software while still providing a valid document prior to that \nsubstitution.</xsd:documentation>\n\t\t</xsd:annotation>\n\t\t<xsd:complexType>\n\t\t\t<xsd:complexContent>\n\t\t\t\t<xsd:extension base = \"system\"/>\n\t\t\t</xsd:complexContent>\n\t\t</xsd:complexType>\n\t</xsd:element>\n\t<xsd:element name = \"attributes\">\n\t\t<xsd:annotation>\n\t\t\t<xsd:documentation>defines an attribute of the system \nor subsystem which are available to the user</xsd:documentation>\n\t\t</xsd:annotation>\n\t\t<xsd:complexType>\n\t\t\t<xsd:choice>\n\t\t\t\t<xsd:element ref = \"attribute\" maxOccurs \n= \"unbounded\"/>\n\t\t\t\t<xsd:sequence>\n\t\t\t\t\t<xsd:element ref = \"select\"/>\n\t\t\t\t\t<xsd:element ref = \"preferences\"/>\n\t\t\t\t</xsd:sequence>\n\t\t\t</xsd:choice>\n\t\t\t<xsd:attribute name = \"nodeName\" fixed = \"Attributes\">\n\t\t\t\t<xsd:simpleType>\n\t\t\t\t\t<xsd:restriction base = \"xsd:string\">\n\t\t\t\t\t\t<xsd:whiteSpace value \n= \"collapse\"/>\n\t\t\t\t\t</xsd:restriction>\n\t\t\t\t</xsd:simpleType>\n\t\t\t</xsd:attribute>\n\t\t\t<xsd:attribute name = \"disabled\" use = \"required\" type \n= \"xsd:boolean\"/>\n\t\t\t<xsd:attribute name = \"controllable\" use = \"required\" \ntype = \"xsd:boolean\"/>\n\t\t\t<xsd:attribute name = \"tip\" use = \"optional\" type \n= \"xsd:string\"/>\n\t\t\t<xsd:attribute name = \"prefid\" use = \"required\">\n\t\t\t\t<xsd:simpleType>\n\t\t\t\t\t<xsd:restriction base = \"xsd:string\">\n\t\t\t\t\t\t<xsd:whiteSpace value \n= \"collapse\"/>\n\t\t\t\t\t</xsd:restriction>\n\t\t\t\t</xsd:simpleType>\n\t\t\t</xsd:attribute>\n\t\t\t<xsd:attribute name = \"configurable\" default = \"true\" \ntype = \"xsd:boolean\"/>\n\t\t</xsd:complexType>\n\t</xsd:element>\n\t<xsd:element name = \"filters\">\n\t\t<xsd:annotation>\n\t\t\t<xsd:documentation>filters available to the system for \nfiltering data.  Is not dependent on attributes selected.</xsd:documentation>\n\t\t</xsd:annotation>\n\t\t<xsd:complexType>\n\t\t\t<xsd:choice>\n\t\t\t\t<xsd:element ref = \"filter\" maxOccurs \n= \"unbounded\"/>\n\t\t\t\t<xsd:sequence>\n\t\t\t\t\t<xsd:element ref = \"select\"/>\n\t\t\t\t\t<xsd:element ref = \"preferences\"/>\n\t\t\t\t</xsd:sequence>\n\t\t\t</xsd:choice>\n\t\t\t<xsd:attribute name = \"nodeName\" fixed = \"Filters\">\n\t\t\t\t<xsd:simpleType>\n\t\t\t\t\t<xsd:restriction base = \"xsd:string\">\n\t\t\t\t\t\t<xsd:whiteSpace value \n= \"collapse\"/>\n\t\t\t\t\t</xsd:restriction>\n\t\t\t\t</xsd:simpleType>\n\t\t\t</xsd:attribute>\n\t\t\t<xsd:attribute name = \"tip\" use = \"optional\" type \n= \"xsd:string\"/>\n\t\t</xsd:complexType>\n\t</xsd:element>\n\t<xsd:element name = \"view\">\n\t\t<xsd:complexType>\n\t\t\t<xsd:sequence>\n\t\t\t\t<xsd:element ref = \"select\"/>\n\t\t\t\t<xsd:element ref = \"preferences\"/>\n\t\t\t</xsd:sequence>\n\t\t\t<xsd:attribute name = \"nodeName\" fixed = \"View Options\">\n\t\t\t\t<xsd:simpleType>\n\t\t\t\t\t<xsd:restriction base = \"xsd:string\">\n\t\t\t\t\t\t<xsd:whiteSpace value \n= \"collapse\"/>\n\t\t\t\t\t</xsd:restriction>\n\t\t\t\t</xsd:simpleType>\n\t\t\t</xsd:attribute>\n\t\t\t<xsd:attribute name = \"disabled\" use = \"required\" type \n= \"xsd:boolean\"/>\n\t\t\t<xsd:attribute name = \"tip\" use = \"optional\" type \n= \"xsd:string\"/>\n\t\t\t<xsd:attribute name = \"controllable\" use = \"required\" \ntype = \"xsd:boolean\"/>\n\t\t\t<xsd:attribute name = \"configurable\" default = \"true\" \ntype = \"xsd:boolean\"/>\n\t\t</xsd:complexType>\n\t</xsd:element>\n\t<xsd:element name = \"attribute\">\n\t\t<xsd:complexType>\n\t\t\t<xsd:sequence>\n\t\t\t\t<xsd:element ref = \"select\"/>\n\t\t\t\t<xsd:element ref = \"preferences\"/>\n\t\t\t</xsd:sequence>\n\t\t\t<xsd:attribute name = \"type\" use = \"optional\" type \n= \"xsd:string\"/>\n\t\t\t<xsd:attribute name = \"nodeName\" use = \"required\">\n\t\t\t\t<xsd:simpleType>\n\t\t\t\t\t<xsd:restriction base = \"xsd:string\">\n\t\t\t\t\t\t<xsd:whiteSpace value \n= \"collapse\"/>\n\t\t\t\t\t</xsd:restriction>\n\t\t\t\t</xsd:simpleType>\n\t\t\t</xsd:attribute>\n\t\t\t<xsd:attribute name = \"tip\" use = \"optional\" type \n= \"xsd:string\"/>\n\t\t</xsd:complexType>\n\t</xsd:element>\n\t<xsd:element name = \"filter\">\n\t\t<xsd:complexType>\n\t\t\t<xsd:choice>\n\t\t\t\t<xsd:sequence/>\n\t\t\t\t<xsd:sequence>\n\t\t\t\t\t<xsd:element ref = \"select\"/>\n\t\t\t\t\t<xsd:element ref = \"preferences\"/>\n\t\t\t\t</xsd:sequence>\n\t\t\t</xsd:choice>\n\t\t\t<xsd:attribute name = \"type\" use = \"optional\" type \n= \"xsd:string\"/>\n\t\t\t<xsd:attribute name = \"nodeName\" use = \"required\">\n\t\t\t\t<xsd:simpleType>\n\t\t\t\t\t<xsd:restriction base = \"xsd:string\">\n\t\t\t\t\t\t<xsd:whiteSpace value \n= \"collapse\"/>\n\t\t\t\t\t</xsd:restriction>\n\t\t\t\t</xsd:simpleType>\n\t\t\t</xsd:attribute>\n\t\t\t<xsd:attribute name = \"directive\" use = \"required\">\n\t\t\t\t<xsd:simpleType>\n\t\t\t\t\t<xsd:restriction base = \"xsd:string\">\n\t\t\t\t\t\t<xsd:enumeration value \n= \"INCLUDE\"/>\n\t\t\t\t\t\t<xsd:enumeration value \n= \"EXCLUDE\"/>\n\t\t\t\t\t\t<xsd:enumeration value \n= \"EXCLUDE_ALL\"/>\n\t\t\t\t\t</xsd:restriction>\n\t\t\t\t</xsd:simpleType>\n\t\t\t</xsd:attribute>\n\t\t\t<xsd:attribute name = \"disabled\" use = \"required\" type \n= \"xsd:boolean\"/>\n\t\t\t<xsd:attribute name = \"controllable\" use = \"required\" \ntype = \"xsd:boolean\"/>\n\t\t\t<xsd:attribute name = \"configurable\" default = \"true\" \ntype = \"xsd:boolean\"/>\n\t\t\t<xsd:attribute name = \"tip\" use = \"optional\" type \n= \"xsd:string\"/>\n\t\t</xsd:complexType>\n\t</xsd:element>\n\t<xsd:element name = \"providers\">\n\t\t<xsd:complexType>\n\t\t\t<xsd:sequence>\n\t\t\t\t<xsd:element ref = \"select\"/>\n\t\t\t\t<xsd:element ref = \"preferences\"/>\n\t\t\t</xsd:sequence>\n\t\t\t<xsd:attribute name = \"nodeName\" use = \"required\">\n\t\t\t\t<xsd:simpleType>\n\t\t\t\t\t<xsd:restriction base = \"xsd:string\">\n\t\t\t\t\t\t<xsd:whiteSpace value \n= \"collapse\"/>\n\t\t\t\t\t</xsd:restriction>\n\t\t\t\t</xsd:simpleType>\n\t\t\t</xsd:attribute>\n\t\t\t<xsd:attribute name = \"tip\" use = \"optional\" type \n= \"xsd:string\"/>\n\t\t\t<xsd:attribute name = \"controllable\" use = \"required\" \ntype = \"xsd:boolean\"/>\n\t\t\t<xsd:attribute name = \"disabled\" use = \"required\" type \n= \"xsd:boolean\"/>\n\t\t\t<xsd:attribute name = \"configurable\" default = \"true\" \ntype = \"xsd:boolean\"/>\n\t\t</xsd:complexType>\n\t</xsd:element>\n\t<xsd:element name = \"title\">\n\t\t<xsd:complexType>\n\t\t\t<xsd:sequence>\n\t\t\t\t<xsd:element ref = \"select\"/>\n\t\t\t\t<xsd:element ref = \"preferences\"/>\n\t\t\t</xsd:sequence>\n\t\t\t<xsd:attribute name = \"nodeName\" use = \"required\">\n\t\t\t\t<xsd:simpleType>\n\t\t\t\t\t<xsd:restriction base = \"xsd:string\">\n\t\t\t\t\t\t<xsd:whiteSpace value \n= \"collapse\"/>\n\t\t\t\t\t</xsd:restriction>\n\t\t\t\t</xsd:simpleType>\n\t\t\t</xsd:attribute>\n\t\t\t<xsd:attribute name = \"disabled\" use = \"required\" type \n= \"xsd:boolean\"/>\n\t\t\t<xsd:attribute name = \"tip\" use = \"optional\" type \n= \"xsd:string\"/>\n\t\t\t<xsd:attribute name = \"controllable\" use = \"required\" \ntype = \"xsd:boolean\"/>\n\t\t\t<xsd:attribute name = \"configurable\" default = \"true\" \ntype = \"xsd:boolean\"/>\n\t\t</xsd:complexType>\n\t</xsd:element>\n</xsd:schema>\n\n<?xml version = \"1.0\" encoding = \"UTF-8\"?>\n<basic:status xmlns:basic = \"http://ems.spawar.navy.mil/schema/status/basic\" \nxmlns:xsi = \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation \n= \"http://ems.spawar.navy.mil/schema/status/basic \nhttp://137.51.75.223/schema/status/basic_configuration.xsd\" nodeName = \"Status\">\n\t<!--master data for the engine-->\n\t<basic:master nodeName = \"Master\" disabled = \"false\" tip = \"allows \nselection of properties which apply to all displays\">\n\t\t<basic:layout nodeName = \"Layout\" configurable = \"true\" \ncontrollable = \"true\" disabled = \"false\" tip = \"how you want to see it\">\n\t\t\t<basic:select class \n= \"MIL.Navy.SPAWAR.ADNS.EMS.Util.Status.Client.SingleOption\"><![CDATA\n[title=Display Layout Selection;description=Select the layout you would like \nfor the available configurations.  CardLayout will show you each status \nconfiguration in sequence based on the scroll rate.  It has the advantage of \nusing the entire screen for each configuration.  GridLayout will show each \nconfiguration simultaneously in its own sub-window (all windows of equal size) \nand you can size them.;prefid=layout;options=CardLayout,GridLayout;]]\n></basic:select>\n\t\t\t<basic:preferences>\n\t\t\t\t<basic:choice id = \"layout\" value \n= \"GridLayout\" selected = \"true\"/>\n\t\t\t\t<basic:choice id = \"layout\" value \n= \"CardLayout\" selected = \"false\"/>\n\t\t\t</basic:preferences>\n\t\t</basic:layout>\n\t\t<basic:conditional nodeName = \"Scroll Rate\" prefid = \"layout\" \nvalue = \"CardLayout\" configurable = \"true\" controllable = \"true\" disabled \n= \"false\" tip = \"sets how often configs rotate if in CardLayout\">\n\t\t\t<basic:select class \n= \"MIL.Navy.SPAWAR.ADNS.EMS.Util.Status.Client.BoundedSelector\"><![CDATA\n[title=Scroll Rate Selection;description=Select the time in minutes that the \ndisplay will spend showing each configuration before rotating to the next one.  \nOnly applies for CardLayouts and when more than one display is \nup.;prefid=scroll;minor=1;major=5;min=0;max=10;unit=minutes;]]></basic:select>\n\t\t\t<basic:preferences>\n\t\t\t\t<basic:choice id = \"scroll\" value = \"5\" \nselected = \"true\"/>\n\t\t\t</basic:preferences>\n\t\t</basic:conditional>\n\t\t<basic:font nodeName = \"Font\" controllable = \"true\" disabled \n= \"false\" tip = \"set font characteristics\">\n\t\t\t<basic:select class \n= \"MIL.Navy.SPAWAR.ADNS.EMS.Util.Status.Client.FontChooser\"><![CDATA\n[prefid=font;]]></basic:select>               \n\t\t\t<basic:preferences>\n\t\t\t\t<basic:choice id = \"name\" value = \"Dialog\" \nselected = \"true\"/>\n\t\t\t\t<basic:choice id = \"size\" value = \"16\" selected \n= \"true\"/>\n\t\t\t\t<basic:choice id = \"style\" value = \"0\" selected \n= \"true\"/>\n\t\t\t\t<basic:choice id = \"color\" value = \"0\" selected \n= \"true\"/>\n\t\t\t</basic:preferences>\n\t\t</basic:font>        \t  \n\t</basic:master>\n\t<!--host to which the configuration(s) belong.  to support multiple \nhosts, add another host element and the systems it supportes similar to what is \nshown below-->\n\t<basic:host ipAddress = \"\" nodeName = \"Local\" disabled = \"false\" tip \n= \"host to be configured\">\n\t\t<basic:system id = \"circuit\"/>\n\t\t<!--UPDATE REQUIRED IF NEW SYSTEM ADDED-->\n\t</basic:host>\n</basic:status>"}, {"count": 1, "tags": [], "bug_id": 3663, "text": "The schema file doesn't appears to be a valid schema file. In the schema, you\nhave a one global element by the name \"system\". Further, you have a complexType\ndeclaration with extension having base as \"system\"\n<snip>\n<xsd:complexType>\n    <xsd:complexContent>\n        <xsd:extension base = \"system\">\n</snip>\n\nHere's the problem. You are trying to refer to a global type definition viz.\n\"system\". But, the global \"system\" is an element. Whereas, here the allowed base\ntype can only be another global complexType definition.", "id": 7084, "time": "2001-10-23T22:01:51Z", "creator": "rahul.srivastava@sun.com", "creation_time": "2001-10-23T22:01:51Z", "is_private": false, "attachment_id": null}]