[{"count": 0, "tags": [], "text": "The following works:\n  <path id=\"modulespecific\">\n    <fileset dir=\"${basedir}/..\">\n      <include name=\"net/build/net.jar\"/>\n    </fileset>\n  </path>\nDebug output from javac rule is:\n[...]\nfileset: Setup scanner in dir /[path]/modules with patternSet{ includes:\n[net/build/net.jar] excludes: [] }\n[...]\n    [javac] '-classpath'\n    [javac] '[...]:/[path]/modules/net/build/net.jar:[...]'\n\n\nThen when I change to:\n  <path id=\"modulespecific\">\n    <fileset dir=\"${basedir}\">\n      <include name=\"../net/build/net.jar\"/>\n    </fileset>\n  </path>\nIt suddenly doesn't find the file anymore. The debug output is:\nfileset: Setup scanner in dir /[path]/modules/ic with patternSet{ includes:\n[../net/build/net.jar] excludes: [] }\n[...]\n    [javac] '-classpath'\n    [javac] '[...net/build/net.jar not included...]'\n\nI would have expected the second alternative to work just as well as the first\none. This is confusing. I consider it an error in ant.\n\nI am trying to add some user libraries to the build.xml file that was included\nin the jcoverage GPL-version. The whole of the modified build.xml file is here:\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project name=\"jcoverage.examples\" default=\"main\" basedir=\".\">\n  <description>\n    jcoverage copyright (C)2003 jcoverage ltd. http://jcoverage.com/\n    jcoverage is licensed under the GNU General Public License\n    jcoverage licensing policy, http://jcoverage.com/license.html\n    jcoverage comes with ABSOLUTELY NO WARRANTY\n  </description>\n\n\n  <!--\n    all build artefacts are deposited under this directory.\n  -->\n  <property name=\"build.dir\" value=\"${basedir}/build\"/>\n\n  <!--\n    classes generated by the javac compiler are deposited in this\n    directory.\n  -->\n  <property name=\"build.classes.dir\" value=\"${build.dir}/classes\"/>\n  <property name=\"build.tests.dir\" value=\"${build.dir}/tests\"/>\n\n  <!--\n    instrumented classes are deposited into this directory.\n  -->\n  <property name=\"build.instrumented.dir\"\nvalue=\"${build.dir}/instrumented-classes\"/>\n\n  <!--\n    coverage reports are deposited into this directory. For the\n    HTML report, look at ${build.coverage.dir}/index.html. For the XML\n    report look at ${build.coverage.dir}/coverage.xml.\n  -->\n  <property name=\"build.coverage.dir\" value=\"${build.dir}/coverage\"/>\n\n  <!--\n    unit test reports from junit are deposited in this directory.\n  -->\n  <property name=\"build.reports.dir\" value=\"${build.dir}/reports\"/>\n\n  <!--\n    the root of a jcoverage distribution\n  -->\n  <property name=\"dist.dir\"\nvalue=\"${basedir}/../../tools/jcoverage/jcoverage-1.0.5\"/>\n\n  <!--\n    third party libraries that are also shipped with jcoverage can be\n    found in this directory.\n  -->\n  <property name=\"lib.dir\" value=\"${dist.dir}/lib\"/>\n\n  <!--\n    the source code can be found in this directory.\n  -->\n  <property name=\"src.dir\" value=\"${basedir}/src/java\"/>\n  <property name=\"testsrc.dir\" value=\"${basedir}/src/java-tests\"/>\n\n  <target name=\"main\" depends=\"clean,init,compile,instrument,test,coverage\"\ndescription=\"clean build, instrument and unit test\"/>\n\n  <path id=\"modulespecific\">\n    <fileset dir=\"${basedir}\">\n      <include name=\"../net/build/net.jar\"/>\n    </fileset>\n  </path>\n\n  <path id=\"junit\">\n    <fileset dir=\"${lib.dir}\">\n      <include name=\"junit/3.8.1/*.jar\"/>\n    </fileset>\n  </path>\n\n  <path id=\"log4j\">\n    <fileset dir=\"${lib.dir}\">\n      <include name=\"log4j/1.2.8/*.jar\"/>\n    </fileset>\n  </path>\n\n  <path id=\"jcoverage\">\n    <fileset dir=\"${dist.dir}\">\n      <include name=\"jcoverage.jar\"/>\n    </fileset>\n  </path>\n\n  <taskdef classpathref=\"jcoverage\" resource=\"tasks.properties\"/>\n\n  <target name=\"clean\" description=\"clean up build artefacts\">\n    <delete quiet=\"true\">\n      <fileset dir=\"${build.dir}\"/>\n      <fileset dir=\"${basedir}\">\n        <include name=\"jcoverage.ser\"/>\n        <include name=\"jcoverage.log\"/>\n      </fileset>\n    </delete>\n  </target>\n\n  <target name=\"init\" description=\"create build directories\">\n    <mkdir dir=\"${build.dir}\"/>\n    <mkdir dir=\"${build.classes.dir}\"/>\n    <mkdir dir=\"${build.coverage.dir}\"/>\n    <mkdir dir=\"${build.instrumented.dir}\"/>\n    <mkdir dir=\"${build.reports.dir}\"/>\n  </target>\n\n  <target name=\"compile\" description=\"compile all classes\">\n    <javac srcdir=\"${src.dir}\" destdir=\"${build.classes.dir}\" failonerror=\"yes\"\ndebug=\"yes\" source=\"1.4\">\n      <classpath refid=\"junit\"/>\n      <classpath refid=\"log4j\"/>\n      <classpath refid=\"modulespecific\"/>\n    </javac>\n    <javac srcdir=\"${testsrc.dir}\" destdir=\"${build.tests.dir}\"\nfailonerror=\"yes\" debug=\"yes\" source=\"1.4\">\n      <classpath location=\"${build.classes.dir}\"/>\n      <classpath refid=\"junit\"/>\n      <classpath refid=\"log4j\"/>\n      <classpath refid=\"modulespecific\"/>\n    </javac>\n  </target>\n\n  <target name=\"instrument\" description=\"Add jcoverage instrumentation\">\n    <!--\n      instrument the application classes, writing the instrumented\n      classes into ${build.instrumented.dir}.\n    -->\n    <instrument todir=\"${build.instrumented.dir}\">\n      <!--\n        Note that the following line causes instrument to ignore any\n        source line containing a reference to log4j, for the purposes\n        of coverage reporting.\n      -->\n      <ignore regex=\"org.apache.log4j.*\"/>\n\n      <fileset dir=\"${build.classes.dir}\">\n        <!--\n          instrument all the application classes, but don't instrument\n          the test classes.\n        -->\n        <include name=\"**/*.class\"/>\n      </fileset>\n    </instrument>\n  </target>\n\n  <target name=\"test\" description=\"Unit test the application\">\n    <junit fork=\"yes\" dir=\"${basedir}\" errorProperty=\"test.failed\"\nfailureProperty=\"test.failed\">\n      <!--\n        note the classpath order, instrumented classes are before the\n        original (uninstrumented) classes.\n      -->\n      <classpath location=\"${build.instrumented.dir}\"/>\n      <classpath location=\"${build.classes.dir}\"/>\n      <classpath location=\"${build.tests.dir}\"/>\n      <classpath refid=\"modulespecific\"/>\n\n      <!--\n        the instrumented classes reference classes used by the\n        jcoverage runtime.\n      -->\n      <classpath refid=\"jcoverage\"/>\n      <formatter type=\"xml\"/>\n\n      <test name=\"${testcase}\" todir=\"${build.reports.dir}\" if=\"testcase\"/>\n\n      <batchtest todir=\"${build.reports.dir}\" unless=\"testcase\">    \t\n        <fileset dir=\"${testsrc.dir}\">\n          <include name=\"**/Test*.java\"/>\n        </fileset>\n      </batchtest>\n    </junit>\n  </target>\n\n  <target name=\"coverage\" description=\"HTML and XML coverage reports can be\nfound in build/coverage\">\n    <report srcdir=\"${src.dir}\" destdir=\"${build.coverage.dir}\"/>\n    <report srcdir=\"${src.dir}\" destdir=\"${build.coverage.dir}\" format=\"xml\"/>\n\n    <echo>\njcoverage reports have been generated.\nThe HTML report is ${build.coverage.dir}/index.html\nThe XML report is ${build.coverage.dir}/coverage.xml\n    </echo>\n  </target>\n</project>", "is_private": false, "bug_id": 32148, "id": 66658, "time": "2004-11-10T08:28:14Z", "creator": "linus@tigris.org", "creation_time": "2004-11-10T08:28:14Z", "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 32148, "attachment_id": null, "id": 67120, "time": "2004-11-18T10:46:48Z", "creator": "bodewig@apache.org", "creation_time": "2004-11-18T10:46:48Z", "is_private": false, "text": "This is by design.\n\nI've added the following blurb to the manual in the section talking about patterns:\n\nIn general, patterns are considered relative paths, relative to a task dependent\nbase directory (the dir attribute in the case of <fileset>).  Only files found\nbelow that base directory are considered.  So while a pattern like ../foo.java is\npossible, it will not match anything when applied since the base directory's parent \nis never scanned for files."}]