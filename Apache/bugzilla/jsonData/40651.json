[{"attachment_id": null, "tags": [], "bug_id": 40651, "text": "I use Apache 2.2.3 on Solaris. All Logfiles are configured to use rotatelogs.\nWhenever I restart Apache either with \"restart\" or with \"graceful\" The first\npiped logger, which cares about the global error log, is left over in the\nprocess table. To be more precise: For all loggers new processes get started,\nand all apart from the described old one terminate. The problem is this\nunnecessary old process that doesn't die.\n\nOne description of a reason is, that Apache 2.2 uses APR to do the fork and APR\nuses \"/bin/sh -c\" to do that. Unfortunately /bin/sh on Solaris doesn an\nadditional fork when called with \"-c\" and we end up with a process tree of depth\nthree: Apache-/bin/sh-rotatelogs. It looks like the termination mechanism and\nthe signal handling of Apache is not made for this situation.\n\nI described a related problem in Bugzilla \n\nhttp://issues.apache.org/bugzilla/show_bug.cgi?id=38989\n\nI didn't really trace the signal problem down to the details for Apache 2.2/APR\nbut again the same solution does work: If I use another Shell in SHELL_PATH,\nwhich does not fork for \"-c\", the problem goes away.\n\nChanging the SHELL_PATH in apr_arch_threadproc.h from \"/bin/sh\" to\n\"/usr/xpg4/bin/sh\" worked. That's a XPG4 compliant shell\nwhich exists on Solaris since Solaris 2.5, so for about 10 years.\n\nThe shell is similar to ksh (see \"man ksh\") and does *not* fork when called with\n\"-c\".\n\nIt would be nice to at least document the behaviour. Really nice would be to\nmake SHELL_PATH changeable via configure and to be able to change it via Apaches\nconfigure (and if that would be documented).\n\nIf it's really necessary, I could pin down, why the problem only applies for the\nfirst error logger. On the other hand, I also would like to get rid of the\nadditional /bin/sh processes, so using another shell would solve both problems.", "count": 0, "id": 94335, "time": "2006-10-01T12:49:18Z", "creator": "rainer.jung@kippdata.de", "creation_time": "2006-10-01T12:49:18Z", "is_private": false}, {"count": 1, "tags": [], "creator": "rpluem@apache.org", "attachment_id": null, "text": "(In reply to comment #0)\n> I use Apache 2.2.3 on Solaris. All Logfiles are configured to use rotatelogs.\n> Whenever I restart Apache either with \"restart\" or with \"graceful\" The first\n> piped logger, which cares about the global error log, is left over in the\n> process table. To be more precise: For all loggers new processes get started,\n> and all apart from the described old one terminate. The problem is this\n> unnecessary old process that doesn't die.\n\nSome questions:\n\n1. Does the respective /bin/sh -c die?\n2. Does a new rotatelog process get forked after the restart?\n3. What is the parent process of the hanging logrotate process\n4. What version of Solaris do you use?\n5. Could you please truss /bin/sh -c and logrotate during the restart with\n   options -faedl -vall -rall -wall?\n\n> It would be nice to at least document the behaviour. Really nice would be to\n> make SHELL_PATH changeable via configure and to be able to change it via Apaches\n> configure (and if that would be documented).\n\nSounds reasonable to me.", "id": 94337, "time": "2006-10-01T13:50:08Z", "bug_id": 40651, "creation_time": "2006-10-01T13:50:08Z", "is_private": false}, {"count": 2, "tags": [], "text": "Hi R\u00fcdiger,\n\nSome questions:\n\n1. Does the respective /bin/sh -c die?\n\nYes. All of them die.\n\n2. Does a new rotatelog process get forked after the restart?\n\nYes. All needed new ones get started.\n\n3. What is the parent process of the hanging logrotate process\n\nPID 1\n\n4. What version of Solaris do you use?\n\nThe behaviour was observed on SunOS 5.9 Generic_118558-05 sun4u sparc. I could\ntry with Solaris 8 and 10 to, but that would have to wait until tuesday.\n\n5. Could you please truss /bin/sh -c and logrotate during the restart with\n   options -faedl -vall -rall -wall?\n\nYes, I'll attach them in a minute. I didn't do the \"rall\", because I don't want\nthe whole config to be in the truss. I'm confident, that the reads are not that\nimportant. Otherwise I need to redo the thing with a test configuration.\n\nAlso I'll attach three ps excerpts, one directly after start, the second after\ngraceful and the third after restart. The processes I'm talking about are:\n\nps1.out:    root 11820 11818  0 22:58:45 ?        0:00 /bin/sh -c\n/usr/local/apache22/bin/rotatelogs /var/apache/logs/error_log_main 8\nps1.out:    root 11822 11820  0 22:58:45 ?        0:00\n/usr/local/apache22/bin/rotatelogs /var/apache/logs/error_log_main 86400\n\n!ps2.out:    root 11822     1  0 22:58:45 ?        0:00\n/usr/local/apache22/bin/rotatelogs /var/apache/logs/error_log_main 86400\nps2.out:    root 11926 11818  0 22:59:32 ?        0:00 /bin/sh -c\n/usr/local/apache22/bin/rotatelogs /var/apache/logs/error_log_main 8\nps2.out:    root 11929 11926  0 22:59:32 ?        0:00\n/usr/local/apache22/bin/rotatelogs /var/apache/logs/error_log_main 86400\n\n!ps3.out:    root 11822     1  0 22:58:45 ?        0:00\n/usr/local/apache22/bin/rotatelogs /var/apache/logs/error_log_main 86400\n!ps3.out:    root 11929     1  0 22:59:32 ?        0:00\n/usr/local/apache22/bin/rotatelogs /var/apache/logs/error_log_main 86400\nps3.out:    root 12034 11818  0 23:00:04 ?        0:00 /bin/sh -c\n/usr/local/apache22/bin/rotatelogs /var/apache/logs/error_log_main 8\nps3.out:    root 12037 12034  0 23:00:04 ?        0:00\n/usr/local/apache22/bin/rotatelogs /var/apache/logs/error_log_main 86400\n\n", "attachment_id": null, "id": 94338, "creator": "rainer.jung@kippdata.de", "time": "2006-10-01T14:06:41Z", "bug_id": 40651, "creation_time": "2006-10-01T14:06:41Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 40651, "text": "Created attachment 18944\ngzipped truss", "id": 94339, "time": "2006-10-01T14:11:15Z", "creator": "rainer.jung@kippdata.de", "creation_time": "2006-10-01T14:11:15Z", "is_private": false, "attachment_id": 18944}, {"count": 4, "tags": [], "bug_id": 40651, "attachment_id": 18945, "id": 94340, "time": "2006-10-01T14:11:59Z", "creator": "rainer.jung@kippdata.de", "creation_time": "2006-10-01T14:11:59Z", "is_private": false, "text": "Created attachment 18945\nProcess table after start"}, {"count": 5, "tags": [], "text": "Created attachment 18946\nProcess table after apachectl graceful", "attachment_id": 18946, "bug_id": 40651, "id": 94341, "time": "2006-10-01T14:12:28Z", "creator": "rainer.jung@kippdata.de", "creation_time": "2006-10-01T14:12:28Z", "is_private": false}, {"count": 6, "tags": [], "text": "Created attachment 18947\nProcess table after apachectl restart", "attachment_id": 18947, "id": 94342, "creator": "rainer.jung@kippdata.de", "time": "2006-10-01T14:12:49Z", "bug_id": 40651, "creation_time": "2006-10-01T14:12:49Z", "is_private": false}, {"count": 7, "tags": [], "text": "Hi Rainer,\n\nmany thanks for the quick feedback. I think I know why this problem only happens\nto the main error logrotater:\n\nhttpd closes the writing side of the pipe to the logrotater. This auses the\nlogrotater to exit and thus /bin/sh -c to exit. There is no need to send a\nSIGTERM to either /bin/sh -c or logrotate in this case. This does not work this\nway with the main error logrotater since the writing side fd has been previously\ncopied (dup2ed) to stderr. After a start of the new main error log logrotater\nits wrting side should be dup2ed again to stderr. This should cause the old\nstderr file descriptor to be closed and thus causing the logrotator to exit as\nthis is the last open writing side of the pipe. This does not seem to work on\nSolaris (libc on Solaris seems to do a fcntl(13, F_DUP2FD, 0x00000002) instead\nof dup2(13,2)). I did not have the time to do further tests on this issue. As\nyou may notice the logrotater dies after the main httpd process has died as the\nOS does now seem to close the file descriptor correctly.\n\nSince I personally do not use logrotation on the main error log file for years\n(and this works perfectly if you do everything else in virtual hosts and nothing\nin the main server) I am not quite sure anymore, but I think I stopped\nlogrotating the main error log file because log messages did not arrive there\nduring restart / graceful restart.\n\nNevertheless it makes still sense to me to stop hardcoding /bin/sh in APR.\nAdditionally to be able to set SHELL_PATH via configure it might be even better\nif you can set the shell path via some APR function and APR only uses SHELL_PATH\nif nothing was set.", "attachment_id": null, "bug_id": 40651, "id": 94349, "time": "2006-10-01T16:19:47Z", "creator": "rpluem@apache.org", "creation_time": "2006-10-01T16:19:47Z", "is_private": false}, {"count": 8, "tags": [], "bug_id": 40651, "attachment_id": null, "id": 94351, "time": "2006-10-01T16:34:15Z", "creator": "rainer.jung@kippdata.de", "creation_time": "2006-10-01T16:34:15Z", "is_private": false, "text": "Hi R\u00fcdiger,\n\nI'm impressed! I had a look at the truss output to, but got stuck exactly around\nthe dup2 fcntl.\n\nYou comments about main error logger are interesting. In fact it would be better\nnot to pipe that one to be sure, that errors can be written at any time. And\nusually everything else happens in vhosts, so not rotating that one is not a\nhuge problem.\n\nBut nevertheless, freeing up half of the log child processes by using another\nshell to invoke still would be nice. The process table looks a lot cleaner after\ndropping the \"/bin/sh -c\" processes.\n\nI'm not very experienced with the auto(conf|make|header) stuff, although I did\nsome changes to the configure process in mod_jk. If time permits, I could have a\nlook at it for APR next sunday, but if you or anyone else knows easily how to\ninclude this feature I would be happy.\n"}, {"count": 9, "tags": [], "bug_id": 40651, "text": "Created attachment 18949\nSmall test program for dup2\n\nAttached a small quick and dirty test program. If dup2 really does not work on\nSolaris it should print out: \n\nChild: Hello World!\n\nand NOT return to shell. If it returns to the shell dup2 works as expected. On\nmy Solaris 9 testbox dup2 seems to work as expected. Odd!", "id": 94365, "time": "2006-10-02T02:43:12Z", "creator": "rpluem@apache.org", "creation_time": "2006-10-02T02:43:12Z", "is_private": false, "attachment_id": 18949}, {"count": 10, "tags": [], "creator": "rpluem@apache.org", "attachment_id": null, "text": "If it turns out not to be a Solaris bug with dup2, can you please do the following:\n\n1. Do a truss again as previously (-vall -wall -faedl).\n2. Do a graceful restart.\n3. Issue pfiles <pid of remaining logrotater>\n4. Issue pfiles <pid of httpd main process>\n5. Attach outputs of pfiles and truss and let me know the pids of the httpd main\n   process and the remaining logrotater.\n", "id": 94366, "time": "2006-10-02T02:47:12Z", "bug_id": 40651, "creation_time": "2006-10-02T02:47:12Z", "is_private": false}, {"count": 11, "tags": [], "text": "This is reproducible on Linux by using, e.g.:\n\nErrorLog \"| true; /path/to/rotatelogs etc\"\n\nwhich forces the sh process to hang around.", "attachment_id": null, "bug_id": 40651, "id": 94367, "time": "2006-10-02T05:02:52Z", "creator": "jorton@redhat.com", "creation_time": "2006-10-02T05:02:52Z", "is_private": false}, {"count": 12, "tags": [], "text": "This is a fun bug!\n\nAfter the graceful restart, the *new* piped logger for the main error log is\nrunning with its fd 2 pointing to the pipe to the *old* piped logger which it is\nreplacing.  That is the only place that fd is left open, and it's what is\npreventing the old piped logger from exiting.\n\nThe use of the \"sh\" process is just what is needed to make this problem\napparent.  Otherwise the rotatelogs will get SIGTERMed by the parent directly on\nrestart.  (courtesy of piped_log_cleanup)\n", "attachment_id": null, "bug_id": 40651, "id": 94368, "time": "2006-10-02T05:13:04Z", "creator": "jorton@redhat.com", "creation_time": "2006-10-02T05:13:04Z", "is_private": false}, {"count": 13, "tags": [], "bug_id": 40651, "attachment_id": 18950, "id": 94369, "time": "2006-10-02T05:41:04Z", "creator": "jorton@redhat.com", "creation_time": "2006-10-02T05:41:04Z", "is_private": false, "text": "Created attachment 18950\nproof-of-concept fix\n\nThis should prevent the orphaned piped loggers, not sure if this is the optimal\nsolution though."}, {"count": 14, "text": "Re-assigning this to httpd.", "creator": "jorton@redhat.com", "attachment_id": null, "id": 94370, "time": "2006-10-02T05:43:25Z", "bug_id": 40651, "creation_time": "2006-10-02T05:43:25Z", "tags": [], "is_private": false}, {"count": 15, "tags": [], "bug_id": 40651, "text": "(In reply to comment #12)\n> This is a fun bug!\n\nIndeed yes\n\n> \n> After the graceful restart, the *new* piped logger for the main error log is\n> running with its fd 2 pointing to the pipe to the *old* piped logger which it is\n> replacing.  That is the only place that fd is left open, and it's what is\n> preventing the old piped logger from exiting.\n\nExcellent analysis many thanks.", "id": 94377, "time": "2006-10-02T08:55:33Z", "creator": "rpluem@apache.org", "creation_time": "2006-10-02T08:55:33Z", "is_private": false, "attachment_id": null}, {"count": 16, "text": "(In reply to comment #13)\n> Created an attachment (id=18950) [edit]\n> proof-of-concept fix\n> \n> This should prevent the orphaned piped loggers, not sure if this is the optimal\n> solution though.\n\nI am a little worried that nobody reads at the other end of the pipe. What if\nthe logger writes a huge amount of data to its stderr? Wouldn't it get blocked?\nWhat about using the stdout of the main process (should be /dev/null) for the\nlogger? I modified your patch to do this. A quick test shows that it works.\nComments welcome.\n\n\n", "creator": "rpluem@apache.org", "attachment_id": null, "id": 94378, "time": "2006-10-02T08:58:38Z", "bug_id": 40651, "creation_time": "2006-10-02T08:58:38Z", "tags": [], "is_private": false}, {"count": 17, "tags": [], "text": "Created attachment 18952\nAdjust proof-of-concept fix to use stdout of main process", "attachment_id": 18952, "id": 94379, "creator": "rpluem@apache.org", "time": "2006-10-02T08:59:42Z", "bug_id": 40651, "creation_time": "2006-10-02T08:59:42Z", "is_private": false}, {"attachment_id": null, "tags": [], "bug_id": 40651, "text": "Hi Rainer,\n\nas your specific problem has to be fixed inside of httpd I propose that you open\na new report for the enhancement of APR's configure to make SHELL_PATH configurable.", "count": 18, "id": 94380, "time": "2006-10-02T09:01:39Z", "creator": "rpluem@apache.org", "creation_time": "2006-10-02T09:01:39Z", "is_private": false}, {"count": 19, "attachment_id": null, "bug_id": 40651, "is_private": false, "id": 94393, "time": "2006-10-02T11:25:04Z", "creator": "wrowe@apache.org", "creation_time": "2006-10-02T11:25:04Z", "tags": [], "text": "This raises a deeper question though.  Should a graceful restart even recycle\nthe logger processes in httpd?  Or should they be persistent and continue to\nrun (short circuit the open logs to keep the existing files *and processes*\naround?)\n\n\n\n"}, {"count": 20, "tags": [], "text": "Created attachment 18954\nUpdated version of the stdout version of the fix, which fixes a fd leak", "attachment_id": 18954, "bug_id": 40651, "id": 94402, "time": "2006-10-02T13:25:55Z", "creator": "rpluem@apache.org", "creation_time": "2006-10-02T13:25:55Z", "is_private": false}, {"count": 21, "tags": [], "bug_id": 40651, "attachment_id": null, "id": 94422, "time": "2006-10-03T04:41:31Z", "creator": "jorton@redhat.com", "creation_time": "2006-10-03T04:41:31Z", "is_private": false, "text": "Thanks Ruediger, that's definitely a better approach.\n\nI've tweaked that, and also realised that this needs to be done *only* for the\nlogger for the main server.  Piped loggers for vhosts should continue to inherit\nstderr from the main server as before.\n\nCommitted as http://svn.apache.org/viewvc?view=rev&revision=452431"}, {"attachment_id": null, "tags": [], "bug_id": 40651, "text": "(In reply to comment #21)\n> Thanks Ruediger, that's definitely a better approach.\n> \n> I've tweaked that, and also realised that this needs to be done *only* for the\n\nThanks for tweaking and committing.\n\n> logger for the main server.  Piped loggers for vhosts should continue to  inherit\n> stderr from the main server as before.\n\nJust for my clarification: This works because the error log of the main server\nis the first logger that gets \"restarted\" during a graceful / restart, right?\nSo the other loggers inherit a stderr that is the writing side of the pipe to\nthe *restarted* main server error logger, correct?", "count": 22, "id": 94423, "time": "2006-10-03T05:32:28Z", "creator": "rpluem@apache.org", "creation_time": "2006-10-03T05:32:28Z", "is_private": false}, {"count": 23, "attachment_id": null, "bug_id": 40651, "text": "Yes, exactly correct. ap_open_logs handles it: opens the main server log, does\nthe dup2-to-stderr trick, then loops through all the vhosts and opens their logs. ", "id": 94424, "time": "2006-10-03T05:55:15Z", "creator": "jorton@redhat.com", "creation_time": "2006-10-03T05:55:15Z", "tags": [], "is_private": false}, {"count": 24, "tags": [], "creator": "rpluem@apache.org", "attachment_id": null, "text": "(In reply to comment #23)\n> Yes, exactly correct. ap_open_logs handles it: opens the main server log, does\n> the dup2-to-stderr trick, then loops through all the vhosts and opens their logs. \n\nThanks for clarification. Proposed for backport to 2.2.x as r452457\n(http://svn.apache.org/viewvc?view=rev&rev=452457).", "id": 94425, "time": "2006-10-03T06:00:38Z", "bug_id": 40651, "creation_time": "2006-10-03T06:00:38Z", "is_private": false}, {"count": 25, "text": "The error log still spawns the process using \n\nrc = apr_procattr_cmdtype_set(procattr,\n                                        APR_SHELLCMD_ENV)) == APR_SUCCESS)\n\ninstead of \n\nrc = apr_procattr_cmdtype_set(procattr,\n                                        APR_PROGRAM_ENV)) == APR_SUCCESS)\n\nas documented http://issues.apache.org/bugzilla/show_bug.cgi?id=16761\n\nTypically this is an issue with Windows env . Any chance if the same patch \nproposal from 16761 can be applied here as well?\n\n\n", "creator": "toadie643@gmail.com", "attachment_id": null, "id": 96574, "time": "2006-12-06T11:38:04Z", "bug_id": 40651, "creation_time": "2006-12-06T11:38:04Z", "tags": [], "is_private": false}, {"count": 26, "tags": [], "bug_id": 40651, "attachment_id": null, "id": 96670, "time": "2006-12-08T13:17:08Z", "creator": "rpluem@apache.org", "creation_time": "2006-12-08T13:17:08Z", "is_private": false, "text": "Backported to 2.2.4"}, {"count": 27, "attachment_id": null, "creator": "rpluem@apache.org", "text": "(In reply to comment #25)\n\n> \n> Typically this is an issue with Windows env . Any chance if the same patch \n\nHave you really checked that there is an issue on windows?\nAnyway the original bug described here is now fixed thus I will close the report\nagain. Feel free to open a new one if there is really a problem on windows with\nthis.", "id": 96671, "time": "2006-12-08T13:20:03Z", "bug_id": 40651, "creation_time": "2006-12-08T13:20:03Z", "tags": [], "is_private": false}]