[{"count": 0, "tags": [], "text": "When you fork off processes in Ant, they don't get notified when Ant is \ndestroyed (via a ctrl-C for instance).  This patch registers a shutdown hook \n(if Runtime.addShutdownHook() is available, it is in post JDK 1.3 VMs) that \ndestroys all processes that have been registered with it.  After the process \nfinishes, it is removed from the list.  This then allows any shutdown hooks \nthat the execed process has registered to be run.\n\nnew file: org/apache/tools/ant/taskdefs/ProcessDestroyer.java:\n\n/*\n * The Apache Software License, Version 1.1\n *\n * Copyright (c) 2000 The Apache Software Foundation.  All rights\n * reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above copyright\n *    notice, this list of conditions and the following disclaimer in\n *    the documentation and/or other materials provided with the\n *    distribution.\n *\n * 3. The end-user documentation included with the redistribution, if\n *    any, must include the following acknowlegement:\n *       \"This product includes software developed by the\n *        Apache Software Foundation (http://www.apache.org/).\"\n *    Alternately, this acknowlegement may appear in the software itself,\n *    if and wherever such third-party acknowlegements normally appear.\n *\n * 4. The names \"The Jakarta Project\", \"Ant\", and \"Apache Software\n *    Foundation\" must not be used to endorse or promote products derived\n *    from this software without prior written permission. For written\n *    permission, please contact apache@apache.org.\n *\n * 5. Products derived from this software may not be called \"Apache\"\n *    nor may \"Apache\" appear in their names without prior written\n *    permission of the Apache Group.\n *\n * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n * SUCH DAMAGE.\n * ====================================================================\n *\n * This software consists of voluntary contributions made by many\n * individuals on behalf of the Apache Software Foundation.  For more\n * information on the Apache Software Foundation, please see\n * <http://www.apache.org/>.\n */\n\npackage org.apache.tools.ant.taskdefs;\n\nimport java.lang.reflect.Method;\nimport java.util.Collections;\nimport java.util.HashSet;\nimport java.util.Iterator;\nimport java.util.Set;\n\n/**\n * Destroys all registered <code>Process</code>es when the VM exits.\n *\n * @author <a href=\"mailto:mnewcomb@tacintel.com\">Michael Newcomb</a>\n */\nclass ProcessDestroyer\n  extends Thread\n{\n  private Set processes = Collections.synchronizedSet(new HashSet());\n\n  /**\n   * Constructs a <code>ProcessDestroyer</code> and registers it as a shutdown\n   * hook.\n   */\n  public ProcessDestroyer()\n  {\n    try\n    {\n      // check to see if the method exists (support pre-JDK 1.3 VMs)\n      //\n      Class[] paramTypes = {Thread.class};\n      Method addShutdownHook =\n        Runtime.class.getMethod(\"addShutdownHook\", paramTypes);\n\n      // add the hook\n      //\n      Object[] args = {this};\n      addShutdownHook.invoke(Runtime.getRuntime(), args);\n    }\n    catch (Exception e)\n    {\n      // it just won't be added as a shutdown hook... :(\n    }\n  }\n\n  /**\n   * Returns <code>true</code> if the specified <code>Process</code> was\n   * successfully added to the list of processes to destroy upon VM exit.\n   *\n   * @param   process the process to add\n   * @return  <code>true</code> if the specified <code>Process</code> was\n   *          successfully added\n   */\n  public boolean add(Process process)\n  {\n    return processes.add(process);\n  }\n\n  /**\n   * Returns <code>true</code> if the specified <code>Process</code> was\n   * successfully removed from the list of processes to destroy upon VM exit.\n   *\n   * @param   process the process to remove\n   * @return  <code>true</code> if the specified <code>Process</code> was\n   *          successfully removed\n   */\n  public boolean remove(Process process)\n  {\n    return processes.remove(process);\n  }\n\n  /**\n   * Invoked by the VM when it is exiting.\n   */\n  public void run()\n  {\n    synchronized(processes)\n    {\n      Iterator i = processes.iterator();\n      while (i.hasNext())\n      {\n        ((Process) i.next()).destroy();\n      }\n    }\n  }\n}\n\n\npatch to org/apache/tools/ant/taskdefs/Execute.java:\n\n--- Execute.java.orig\tFri Oct 12 00:58:28 2001\n+++ Execute.java\tWed Nov 21 15:35:59 2001\n@@ -97,6 +97,9 @@\n     private static CommandLauncher shellLauncher = null;\n     private static Vector procEnvironment = null;\n \n+    /** Used to destroy processes when the VM exits. */\n+    private static ProcessDestroyer processDestroyer = new ProcessDestroyer();\n+\n     /** \n      * Builds a command launcher for the OS and JVM we are running under\n      */\n@@ -391,8 +394,18 @@\n             throw e;\n         }\n         streamHandler.start();\n+\n+        // add the process to the list of those to destroy if the VM exits\n+        //\n+        processDestroyer.add(process);\n+\n         if (watchdog != null) watchdog.start(process);\n         waitFor(process);\n+\n+        // remove the process to the list of those to destroy if the VM exits\n+        //\n+        processDestroyer.remove(process);\n+\n         if (watchdog != null) watchdog.stop();\n         streamHandler.stop();\n         if (watchdog != null) watchdog.checkException();", "is_private": false, "id": 8315, "creator": "mnewcomb@tacintel.com", "time": "2001-11-27T06:08:59Z", "bug_id": 5125, "creation_time": "2001-11-27T06:08:59Z", "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 5125, "attachment_id": null, "id": 8319, "time": "2001-11-27T06:24:27Z", "creator": "j_a_fernandez@yahoo.com", "creation_time": "2001-11-27T06:24:27Z", "is_private": false, "text": "I do not thik this patch is JDK1.1 compatible as it uses Collections, Sets, etc \nwhich are post JDK1.1 types.\n\nJose Alberto\n"}, {"count": 2, "tags": [], "creator": "mnewcomb@tacintel.com", "is_private": false, "text": "As Jose pointed out, ProcessDestroyer used the Collections framework.  Sorry \nabout that (started with jdk 1.2 beta).  I've rewritten ProcessDestroyer to use \na Hashtable instead of a Set.\n\nHere is the new ProcessDestroyer.java:\n\n/*\n * The Apache Software License, Version 1.1\n *\n * Copyright (c) 2000 The Apache Software Foundation.  All rights\n * reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above copyright\n *    notice, this list of conditions and the following disclaimer in\n *    the documentation and/or other materials provided with the\n *    distribution.\n *\n * 3. The end-user documentation included with the redistribution, if\n *    any, must include the following acknowlegement:\n *       \"This product includes software developed by the\n *        Apache Software Foundation (http://www.apache.org/).\"\n *    Alternately, this acknowlegement may appear in the software itself,\n *    if and wherever such third-party acknowlegements normally appear.\n *\n * 4. The names \"The Jakarta Project\", \"Ant\", and \"Apache Software\n *    Foundation\" must not be used to endorse or promote products derived\n *    from this software without prior written permission. For written\n *    permission, please contact apache@apache.org.\n *\n * 5. Products derived from this software may not be called \"Apache\"\n *    nor may \"Apache\" appear in their names without prior written\n *    permission of the Apache Group.\n *\n * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n * SUCH DAMAGE.\n * ====================================================================\n *\n * This software consists of voluntary contributions made by many\n * individuals on behalf of the Apache Software Foundation.  For more\n * information on the Apache Software Foundation, please see\n * <http://www.apache.org/>.\n */\n\npackage org.apache.tools.ant.taskdefs;\n\nimport java.lang.reflect.Method;\n\nimport java.util.Enumeration;\nimport java.util.Hashtable;\n\n/**\n * Destroys all registered <code>Process</code>es when the VM exits.\n *\n * @author <a href=\"mailto:mnewcomb@tacintel.com\">Michael Newcomb</a>\n */\nclass ProcessDestroyer\n  extends Thread\n{\n  private Hashtable processes = new Hashtable();\n\n  /**\n   * Constructs a <code>ProcessDestroyer</code> and registers it as a shutdown\n   * hook.\n   */\n  public ProcessDestroyer()\n  {\n    try\n    {\n      // check to see if the method exists (support pre-JDK 1.3 VMs)\n      //\n      Class[] paramTypes = {Thread.class};\n      Method addShutdownHook =\n        Runtime.class.getMethod(\"addShutdownHook\", paramTypes);\n\n      // add the hook\n      //\n      Object[] args = {this};\n      addShutdownHook.invoke(Runtime.getRuntime(), args);\n    }\n    catch (Exception e)\n    {\n      // it just won't be added as a shutdown hook... :(\n    }\n  }\n\n  /**\n   * Returns <code>true</code> if the specified <code>Process</code> was\n   * successfully added to the list of processes to destroy upon VM exit.\n   *\n   * @param   process the process to add\n   * @return  <code>true</code> if the specified <code>Process</code> was\n   *          successfully added\n   */\n  public boolean add(Process process)\n  {\n    processes.put(process, process);\n    return true;\n  }\n\n  /**\n   * Returns <code>true</code> if the specified <code>Process</code> was\n   * successfully removed from the list of processes to destroy upon VM exit.\n   *\n   * @param   process the process to remove\n   * @return  <code>true</code> if the specified <code>Process</code> was\n   *          successfully removed\n   */\n  public boolean remove(Process process)\n  {\n    return processes.remove(process) != null;\n  }\n\n  /**\n   * Invoked by the VM when it is exiting.\n   */\n  public void run()\n  {\n    synchronized(processes)\n    {\n      Enumeration e = processes.elements();\n      while (e.hasMoreElements())\n      {\n        ((Process) e.nextElement()).destroy();\n      }\n    }\n  }\n}\n", "id": 8321, "time": "2001-11-27T06:39:02Z", "bug_id": 5125, "creation_time": "2001-11-27T06:39:02Z", "attachment_id": null}, {"count": 3, "tags": [], "creator": "tim@adjective.org", "attachment_id": null, "id": 8367, "creation_time": "2001-11-27T20:55:29Z", "time": "2001-11-27T20:55:29Z", "bug_id": 5125, "text": "In general, it is preferable if you are able to add the files as attachments, \nrather than embedding them in the comments section.\n\nIt makes it easier for commiters to apply, and simple to read the thread of \ncomments.\n", "is_private": false}, {"count": 4, "tags": [], "creator": "mnewcomb@tacintel.com", "is_private": false, "text": "Created attachment 843\nThe new file which registers as a shutdown hook and destroys all processes registered with it.", "id": 8380, "time": "2001-11-28T05:37:26Z", "bug_id": 5125, "creation_time": "2001-11-28T05:37:26Z", "attachment_id": 843}, {"count": 5, "tags": [], "text": "Created attachment 844\nthe patch file for Execute.java", "is_private": false, "id": 8381, "creator": "mnewcomb@tacintel.com", "time": "2001-11-28T05:37:58Z", "bug_id": 5125, "creation_time": "2001-11-28T05:37:58Z", "attachment_id": 844}, {"count": 6, "tags": [], "bug_id": 5125, "text": "Created attachment 845\nrun with regular ant: sub-process shutdown hook not called; run with patch: sub-process shutdown hook gets called (when you ctrl-C out of ant)", "id": 8382, "time": "2001-11-28T05:39:23Z", "creator": "mnewcomb@tacintel.com", "creation_time": "2001-11-28T05:39:23Z", "is_private": false, "attachment_id": 845}, {"count": 7, "tags": [], "bug_id": 5125, "attachment_id": null, "text": "Any status on this fix?  Has anyone had a chance to review it?\n\nThanks,\nMichael\n", "id": 8697, "time": "2001-12-07T10:47:27Z", "creator": "mnewcomb@tacintel.com", "creation_time": "2001-12-07T10:47:27Z", "is_private": false}, {"count": 8, "tags": [], "text": "patch applied for nightly build 2001-12-12", "attachment_id": null, "id": 8771, "creator": "bodewig@apache.org", "time": "2001-12-11T06:06:42Z", "bug_id": 5125, "creation_time": "2001-12-11T06:06:42Z", "is_private": false}]