[{"count": 0, "attachment_id": null, "bug_id": 39122, "text": "uptodate does not seem to handle target directories properly.  It will incorrectly determine that a \ngenerated directory with an out-of-date timestamp is actually up to date.  Example script:\n\n<project name=\"test-uptodate\">\n\n  <target name=\"update-source\" >\n    <touch file=\"source\" />\n    <echo message=\"Source updated.  Target is out of date.\" />\n  </target>\n\n  <target name=\"update-target\" depends=\"check-generate\" unless=\"generated\" >\n    <delete dir=\"target\" />\n    <mkdir dir=\"target\" />\n  </target>\n\n  <fileset id=\"source-files\" dir=\"${basedir}\" includes=\"source\" />\n\n  <target name=\"check-generate\">\n    <uptodate property=\"generated\" targetfile=\"target\">\n      <srcfiles refid=\"source-files\" />\n    </uptodate>\n  </target>\n\n</project>\n\n\nIf, in an empty directory, I do the following:\n- ant update-source (to generate the source file)\n- ant update-target (to generate the target directory)\n- ant update-source (to change the timestamp on the source file)\n- ant update-target (to generate a *new* target directory)\n\nOn the second \"update-target\" uptodate incorrectly determines that the directory is up to date.\n\nIf I modify my script to do the following:\n <uptodate property=\"generated\" srcfile=\"source\" targetfile=\"target\" />\nit will work as expected.\n\nIt also works as expected if I generate a target *file* instead of a target *directory*.\n\nI've tested this now under Ant 1.6.5 and 1.6.2, and on two different Java 1.5.0 platforms.  I submitted a \nmessage about the problem to the users mailing list, and got no response, so I assume this is not a \nproblem that has been recognized previously.\n\n\u2014Dan Smith", "id": 87328, "time": "2006-03-27T20:18:17Z", "creator": "dlsmith@users.sourceforge.net", "creation_time": "2006-03-27T20:18:17Z", "tags": [], "is_private": false}, {"count": 1, "tags": [], "bug_id": 39122, "text": "uptodate compares files, not directories (at least according to the documentation).\nIt can compare (sometimes using mappers) one file to one file\nmany files to one file, one file to many files and many files to many files. It\ndoesn't compare directories though.\n\nWhat problem is caused by this limitation?\n\n", "id": 87332, "time": "2006-03-27T21:40:50Z", "creator": "jkf@apache.org", "creation_time": "2006-03-27T21:40:50Z", "is_private": false, "attachment_id": null}, {"count": 2, "attachment_id": null, "bug_id": 39122, "text": "I expect uptodate to work with a target directory because it operates on FileSets.  The documentation is \nconfusing and inconsistent about whether a directory is or is not considered a \"file\" for the purpose of \nFileSets, FileLists, etc.  \"copy\" and \"move\" appear to include directories in their FileSets (see the \n\"includeEmptyDirs\" documentation for each of them).  Other tasks, such as this one, say nothing about \ndirectories; even the FileSet documentation neglects to mention them.\n\nContributing further to my confusion, and making this feel a lot more like a bug, is the fact that \nspecifying a \"srcfile\" attribute rather than a nested source FileSet somehow affects whether I can specify \na target directory.\n\nHere's my (rather mundane) problem: I have a set of libraries in jar files, which are expanded into a \ntarget directory.  I want to perform this expansion iff one of the jars has been modified since the last \nexpansion.  I can't check against the expanded files, because their date stamps are preserved by the \narchive.  But whenever I perform the expansion, I will delete and recreate the target directory, so I know \nI can compare against its date stamp.\n\nMore generally, I want to define a target that will compare the files in a given source directory to a given \ntarget directory and set a property if the target is out of date.\n", "id": 87371, "time": "2006-03-28T23:27:54Z", "creator": "dlsmith@users.sourceforge.net", "creation_time": "2006-03-28T23:27:54Z", "tags": [], "is_private": false}, {"count": 3, "tags": [], "creator": "gman.spalding@gmail.com", "attachment_id": null, "text": "Hi, I've got similar problems.\nFrom what I've gathered when finding a work-around,\nthe problem is maybe in the nested <srcfiles/> element.\n\nConsider the following setup on the filesystem:\n\n.\n\\-${jspsrc}\n   \\- index.jsp\t(modified 2007-08-01 09:00)\n   \\- ... (other .jsp pages)\n\\-${jspdest}  (Inside exploded war, modified 2007-08-01 09:00)\n\nThe following build.xml-snippet does NOT set the jspc.uptodate prop:\n\t<uptodate property=\"jspc.uptodate\" targetfile=\"${jspdest}\">\n\t\t<srcfiles dir=\"${jspsrc}\" includes=\"**/*.jsp\"/>\n\t</uptodate>\n\nThe following build.xml-snippet DOES set the jspc.uptodate prop:\n\t<uptodate property=\"jspc.uptodate\" targetfile=\"${jspdest}\">\n\t\t<srcfiles dir=\"${jspsrc}\">\n\t\t\t<include name=\"**/*.jsp\"/>\n\t\t</srcfiles>\n\t</uptodate>\n\nThis behaviour IMHO is a bit unconsistent.\nPlatform details: \n- Apache Ant version 1.7.0 compiled on December 13 2006\n- Windows XP\n- Java 142_08\n", "id": 106136, "time": "2007-08-01T02:00:02Z", "bug_id": 39122, "creation_time": "2007-08-01T02:00:02Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 39122, "text": "using srcresources instead of srcfiles will work, see passing antunit test in svn revision 806550 and documentation update in svn revision 806551", "id": 129841, "time": "2009-08-21T06:52:08Z", "creator": "bodewig@apache.org", "creation_time": "2009-08-21T06:52:08Z", "is_private": false, "attachment_id": null}]