[{"count": 0, "tags": [], "creator": "esersin@hotmail.com", "attachment_id": null, "id": 11343, "time": "2002-03-01T13:05:01Z", "bug_id": 6784, "creation_time": "2002-03-01T13:05:01Z", "is_private": false, "text": "***** test1.jsp**************\n<HTML><HEAD><TITLE>Test RequestDispatcher........</TITLE></HEAD>\n<BODY><H3>Test RequestDispatcher........</H3>\nHello..................1.2 JSP SPEC<BR>\n\n<% RequestDispatcher rd = request.getRequestDispatcher(\"junk.html\");\nrd.include(request, response); %><BR>\nThe end!!!!!!!!\n</BODY>\n</HTML>\n************ end test1.jsp **************\n\n*****junk.html*****************\n<b><i>Contents inlcuded from junk.html</b></i>\n******end junk.html**************\n\nthis crashes with the following message:\n\njava.lang.IllegalStateException: getOutputStream() has already been called for \nthis response\n\tat org.apache.catalina.connector.ResponseBase.getWriter\n(ResponseBase.java:755)\n\tat org.apache.catalina.connector.ResponseFacade.getWriter\n(ResponseFacade.java:165)\n\tat org.apache.jasper.runtime.JspWriterImpl.initOut\n(JspWriterImpl.java:166)\n\tat org.apache.jasper.runtime.JspWriterImpl.flushBuffer\n(JspWriterImpl.java:158)\n\tat org.apache.jasper.runtime.JspWriterImpl.flush(JspWriterImpl.java:205)\n\tat org.apache.jasper.runtime.PageContextImpl.release\n(PageContextImpl.java:177)\n\tat org.apache.jasper.runtime.JspFactoryImpl.internalReleasePageContext\n(JspFactoryImpl.java:198)\n\tat org.apache.jasper.runtime.JspFactoryImpl.releasePageContext\n(JspFactoryImpl.java:193)\n\tat org.apache.jsp.test1$jsp._jspService(test1$jsp.java:71)\n\tat org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:107)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:853)\n\tat org.apache.jasper.servlet.JspServlet$JspServletWrapper.service\n(JspServlet.java:202)\n\tat org.apache.jasper.servlet.JspServlet.serviceJspFile\n(JspServlet.java:382)\n\tat org.apache.jasper.servlet.JspServlet.service(JspServlet.java:474)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:853)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter\n(ApplicationFilterChain.java:247)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter\n(ApplicationFilterChain.java:193)\n\tat org.apache.catalina.core.StandardWrapperValve.invoke\n(StandardWrapperValve.java:243)\n\tat org.apache.catalina.core.StandardPipeline.invokeNext\n(StandardPipeline.java:566)\n\tat org.apache.catalina.core.StandardPipeline.invoke\n(StandardPipeline.java:472)\n\tat org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:943)\n\tat org.apache.catalina.core.StandardContextValve.invoke\n(StandardContextValve.java:190)\n\tat org.apache.catalina.core.StandardPipeline.invokeNext\n(StandardPipeline.java:566)\n\tat org.apache.catalina.core.StandardPipeline.invoke\n(StandardPipeline.java:472)\n\tat org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:943)\n\tat org.apache.catalina.core.StandardContext.invoke\n(StandardContext.java:2343)\n\tat org.apache.catalina.core.StandardHostValve.invoke\n(StandardHostValve.java:180)\n\tat org.apache.catalina.core.StandardPipeline.invokeNext\n(StandardPipeline.java:566)\n\tat org.apache.catalina.valves.ErrorDispatcherValve.invoke\n(ErrorDispatcherValve.java:170)\n\tat org.apache.catalina.core.StandardPipeline.invokeNext\n(StandardPipeline.java:564)\n\tat org.apache.catalina.valves.ErrorReportValve.invoke\n(ErrorReportValve.java:170)\n\tat org.apache.catalina.core.StandardPipeline.invokeNext\n(StandardPipeline.java:564)\n\tat org.apache.catalina.valves.AccessLogValve.invoke\n(AccessLogValve.java:468)\n\tat org.apache.catalina.core.StandardPipeline.invokeNext\n(StandardPipeline.java:564)\n\tat org.apache.catalina.core.StandardPipeline.invoke\n(StandardPipeline.java:472)\n\tat org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:943)\n\tat org.apache.catalina.core.StandardEngineValve.invoke\n(StandardEngineValve.java:174)\n\tat org.apache.catalina.core.StandardPipeline.invokeNext\n(StandardPipeline.java:566)\n\tat org.apache.catalina.core.StandardPipeline.invoke\n(StandardPipeline.java:472)\n\tat org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:943)\n\tat org.apache.catalina.connector.http.HttpProcessor.process\n(HttpProcessor.java:1012)\n\tat org.apache.catalina.connector.http.HttpProcessor.run\n(HttpProcessor.java:1107)\n\tat java.lang.Thread.run(Thread.java:484)\n\nhere is the servlet\npackage org.apache.jsp;\n\nimport javax.servlet.*;\nimport javax.servlet.http.*;\nimport javax.servlet.jsp.*;\nimport org.apache.jasper.runtime.*;\n\n\npublic class test1$jsp extends HttpJspBase {\n\n\n    static {\n    }\n    public test1$jsp( ) {\n    }\n\n    private static boolean _jspx_inited = false;\n\n    public final void _jspx_init() throws \norg.apache.jasper.runtime.JspException {\n    }\n\n    public void _jspService(HttpServletRequest request, HttpServletResponse  \nresponse)\n        throws java.io.IOException, ServletException {\n\n        JspFactory _jspxFactory = null;\n        PageContext pageContext = null;\n        HttpSession session = null;\n        ServletContext application = null;\n        ServletConfig config = null;\n        JspWriter out = null;\n        Object page = this;\n        String  _value = null;\n        try {\n\n            if (_jspx_inited == false) {\n                synchronized (this) {\n                    if (_jspx_inited == false) {\n                        _jspx_init();\n                        _jspx_inited = true;\n                    }\n                }\n            }\n            _jspxFactory = JspFactory.getDefaultFactory();\n            response.setContentType(\"text/html;charset=ISO-8859-1\");\n            pageContext = _jspxFactory.getPageContext(this, request, response,\n            \t\t\t\"\", true, 8192, true);\n\n            application = pageContext.getServletContext();\n            config = pageContext.getServletConfig();\n            session = pageContext.getSession();\n            out = pageContext.getOut();\n\n            // HTML // begin [file=\"/test1.jsp\";from=(0,0);to=(6,0)]\n                out.write(\"\\r\\n\\r\\n<HTML><HEAD><TITLE>Test \nRequestDispatcher........</TITLE></HEAD>\\r\\n<BODY><H3>Test \nRequestDispatcher........</H3>\\r\\nHello..................1.2 JSP \nSPEC<BR>\\r\\n\\r\\n\");\n\n            // end\n            // begin [file=\"/test1.jsp\";from=(6,2);to=(7,31)]\n                 RequestDispatcher rd = request.getRequestDispatcher\n(\"junk.html\");\n                rd.include(request, response); \n            // end\n            // HTML // begin [file=\"/test1.jsp\";from=(7,33);to=(10,7)]\n                out.write(\"<BR>\\r\\nThe end!!!!!!!!\\r\\n</BODY>\\r\\n</HTML>\");\n\n            // end\n\n        } catch (Throwable t) {\n            if (out != null && out.getBufferSize() != 0)\n                out.clearBuffer();\n            if (pageContext != null) pageContext.handlePageException(t);\n        } finally {\n//following is the line 71\n            if (_jspxFactory != null) _jspxFactory.releasePageContext\n(pageContext);\n        }\n    }\n}\n\n\n************\n*************\n**************\n\nWhy it is crashing while container trying to release the pageContext with a \nmessage\njava.lang.IllegalStateException: getOutputStream() has already been called for \nthis response\"\n\nregards\nersin eser"}, {"count": 1, "tags": [], "bug_id": 6784, "attachment_id": null, "id": 12154, "time": "2002-03-21T19:55:02Z", "creator": "remm@apache.org", "creation_time": "2002-03-21T19:55:02Z", "is_private": false, "text": "Jasper is using a writer to output the page, but the default servlet (used in\nthe include) will use the output stream if it can. So it doesn't work (it's\nforbidden by the servlet API). Flushing before the include should fix it."}]