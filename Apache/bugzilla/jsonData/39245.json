[{"count": 0, "tags": [], "bug_id": 39245, "attachment_id": null, "id": 87685, "time": "2006-04-07T20:36:58Z", "creator": "jtharp@esri.com", "creation_time": "2006-04-07T20:36:58Z", "is_private": false, "text": "From a post on the Apache httpd-dev mailing list:\nHi,\n\nThe \"ProxyErrorOverride On\" setting is correctly catching the errors\nfrom the (reverse) proxied server. Only, it overrides too much IMHO.\nRight now it overrides anything that's not in the 2xx range, but I think\nit should allow also the 3xx range for redirects etc.\n\nA commonly used \"trick\" is to set a cookie with a 302 header so the\nbrowser gets redirected to the page which \"needs\" the cookie. When using\nProxyErrorOverride, mod_proxy_http sets its own headers and the cookie\nis lost.\n\nThe attached patch check not only for ap_is_HTTP_SUCCESS but also for\nap_is_HTTP_REDIRECT which should solve the problem.\n\nThanks,\nBart van der Schans\n\nI can second this claim, as we also see it with our applications, most notably\nwhen attempting to reverse proxy the login process of SAP E-Recruiting, IBM\nWebSphere Portal Server, and Roller (http://rollerweblogger.org/page/project).\n\nI have attached the patch proposed by the original poster.  Please see the list\nthread for some further discussion of this patch"}, {"count": 1, "tags": [], "creator": "jtharp@esri.com", "is_private": false, "text": "Created attachment 18043\nBart's proposed patch\n\nHere are some comments made on this patch on the httpd-dev list by Ruediger\nPluem along with Bart's replies:\nPl&#65533;m wrote:\n> \n>> -----Urspr&#65533;ngliche Nachricht-----\n>> Von: Bart van der Schans\n>>\n>> Hi,\n>>\n>> The \"ProxyErrorOverride On\" setting is correctly catching the errors\n>> from the (reverse) proxied server. Only, it overrides too much IMHO.\n>> Right now it overrides anything that's not in the 2xx range, \n>> but I think\n>> it should allow also the 3xx range for redirects etc.\n> \n> I had a quick look into this and noticed the following:\n> \n> 1. It may make sense to add ap_is_HTTP_INFO to this also.\nYes, that shounds like a good idea.\n\n> 2. ProxyErrorOverride is currently only honoured by mod_proxy_http,\n>    mod_proxy_ajp ignores it. Is this intended?\nI don't have much experience with ajp, but being able to set a custom\nerror is a good idea I think.\n\n> 3. This is a change in behaviour for people who use customized redirect\n>    pages for browsers that do not support redirects (are there any?)\nWouldn't that change from currently broken to working?\n\n> 4. 304 not modified responses from the backend are currently not supported\n>    without this patch.\nI didn't actually tested that.\n\nRegards,\nBart", "id": 87686, "time": "2006-04-07T20:40:39Z", "bug_id": 39245, "creation_time": "2006-04-07T20:40:39Z", "attachment_id": 18043}, {"count": 2, "tags": [], "bug_id": 39245, "attachment_id": null, "is_private": false, "id": 88460, "time": "2006-04-25T07:42:40Z", "creator": "rpluem@apache.org", "creation_time": "2006-04-25T07:42:40Z", "text": "Have you tried to set a custom error document?\nCan you check if\n\nErrorDocument 301 /dummy.html\nErrorDocument 302 /dummy.html\nErrorDocument 303 /dummy.html\n\nfixes your problem? Of course dummy.html must be a file in your document root."}, {"count": 3, "text": "Finally able to work on this bug again.  Tested this behavior using version\n2.2.3 and it looks like the issue is now resolved.  Cookies are correctly set on\n302 redirect requests with ProxyErrorOverride On.  I suspect changes elsewhere\ncleaned up this issue since the bug was first reported.", "bug_id": 39245, "is_private": false, "id": 95042, "time": "2006-10-23T13:12:07Z", "creator": "jtharp@esri.com", "creation_time": "2006-10-23T13:12:07Z", "tags": [], "attachment_id": null}, {"count": 4, "attachment_id": null, "creator": "jonah@jonah.com", "is_private": false, "id": 97451, "time": "2006-12-29T10:28:32Z", "bug_id": 39245, "creation_time": "2006-12-29T10:28:32Z", "tags": [], "text": "NOT FIXED in vanilla 2.2.3. \n\nI'm using mod_proxy_http to reverse proxy a resin application server. Cookies\nand most headers set by resin in a 302 response are dropped by 2.2.3 when\nproxyerroroverride is on. \n\nWhat follows are transcripts with our internal 2.2.3 server; the first\ntranscript is with proxyerroroverride on in the specified virtual host config;\nthe second with proxyerroroverride off. \n\nTranscript #1, proxyerroroverride on\n\n[user@HOST ~]$ telnet HOST 80\nTrying 172.20.17.48...\nConnected to HOST (172.20.17.48).\nEscape character is '^]'.\nPOST /ec/login.htm HTTP/1.1\nHost: HOST\nCookie: JSESSIONID=A6534nqtHTaUTMwp-q\nContent-Type: application/x-www-form-urlencoded\nContent-Length: 33\n\nuserName=z10000&password=password\nHTTP/1.1 302 Found\nDate: Fri, 29 Dec 2006 17:56:23 GMT\nLocation: http://HOST/ec/postLogin.htm\nContent-Length: 234\nContent-Type: text/html; charset=iso-8859-1\n\n<!DOCTYPE HTML PUBLIC \"-//IETF//DTD HTML 2.0//EN\">\n<html><head>\n<title>302 Found</title>\n</head><body>\n<h1>Found</h1>\n<p>The document has moved <a href=\"http://HOST/ec/postLogin.htm\">here</a>.</p>\n</body></html>\nConnection closed by foreign host.\n\n\n\nTranscript #2, proxyerroroverride off\n\n[user@HOST ~]$ telnet HOST 80\nTrying 172.20.17.48...\nConnected to HOST (172.20.17.48).\nEscape character is '^]'.\nPOST /ec/login.htm HTTP/1.1\nHost: HOST\nCookie: JSESSIONID=A6534nqtHTaUTMwp-q\nContent-Type: application/x-www-form-urlencoded\nContent-Length: 33\n\nuserName=z10000&password=password\nHTTP/1.1 302 Found\nDate: Fri, 29 Dec 2006 17:57:44 GMT\nServer: Resin/3.0.14\nPragma: No-cache\nExpires: Thu, 01 Jan 1970 00:00:00 GMT\nCache-Control: no-cache\nCache-Control: no-store\nContent-Language: en-US\nLocation: http://HOST/ec/postLogin.htm\nContent-Length: 88\nSet-Cookie: userInfo=VARIOUSSTUFF; domain=HOST; path=/\nSet-Cookie: XXXX=w0NIFrSTDuo250TP4oXq13pk9C1Rlt9Q; domain=HOST; path=/\nContent-Type: text/html; charset=UTF-8\n\nThe URL has moved <a href=\"http://HOST/ec/postLogin.htm\">here</a>\n\nConnection closed by foreign host.\n\n"}, {"text": "Update: we applied Bart's proposed patch, with line numbers modified to suit\n2.2.3, and it solved the problem for us. \n\nSo with proxyerroroverride On and patched 2.2.3, we are able to pass cookies\nback from a resin app server serving 302 responses over http.\n\nVery good! ", "tags": [], "creator": "jonah@jonah.com", "is_private": false, "count": 5, "id": 97545, "time": "2007-01-02T14:23:03Z", "bug_id": 39245, "creation_time": "2007-01-02T14:23:03Z", "attachment_id": null}, {"count": 6, "attachment_id": null, "creator": "stuart@terminus.co.uk", "is_private": false, "id": 99333, "time": "2007-02-13T07:46:59Z", "bug_id": 39245, "creation_time": "2007-02-13T07:46:59Z", "tags": [], "text": "*** Bug 41601 has been marked as a duplicate of this bug. ***"}, {"count": 7, "text": "I can confirm this is indeed NOT FIXED in httpd 2.2.4.  I had thought it was\nbased on some tests I did earlier, but today we had application who displayed\nthe exact same symptoms as others have reported...when issuing a 302 redirect\nwith ProxyErrorOverride On, the Set-Cookie header was lost.  I used the patch\nfrom Bug ID 41601 submitted by Stuart Children as this was updated for 2.2.4.  I\ncan confirm that applying this patch fixed my problem...could this patch please\nbe applied to both trunk and/or 2.2?", "bug_id": 39245, "is_private": false, "id": 99394, "time": "2007-02-14T17:46:44Z", "creator": "jtharp@esri.com", "creation_time": "2007-02-14T17:46:44Z", "tags": [], "attachment_id": null}, {"count": 8, "text": "I don't think this can reasonably be described as a bug: rather it's documented\nbehaviour of ProxyErrorOverride.  We can't apply the suggested patch, because it\nbreaks that.  *You* can of course apply the patch yourself, since it's the\nbehaviour you want.\n\nHowever, it's a reasonable enhancement request, to provide an option to preserve\n*headers* from the backend while substituting a local response *body*.\n\nSimple solution: if you want your cookies from the backend, don't override them.\n", "bug_id": 39245, "is_private": false, "id": 99401, "time": "2007-02-15T01:34:00Z", "creator": "nick@webthing.com", "creation_time": "2007-02-15T01:34:00Z", "tags": [], "attachment_id": null}, {"count": 9, "tags": [], "bug_id": 39245, "attachment_id": null, "id": 99402, "time": "2007-02-15T01:39:56Z", "creator": "stuart@terminus.co.uk", "creation_time": "2007-02-15T01:39:56Z", "is_private": false, "text": "(In reply to comment #8)\n> I don't think this can reasonably be described as a bug: rather it's\n> documented behaviour of ProxyErrorOverride.\n\nHuh? http://httpd.apache.org/docs/2.2/mod/mod_proxy.html#proxyerroroverride\n\n[quote]\nThis directive is useful for reverse-proxy setups, where you want to have a\ncommon look and feel on the error pages seen by the end user. This also allows\nfor included files (via mod_include's SSI) to get the error code and act\naccordingly (default behavior would display the error page of the proxied\nserver, turning this on shows the SSI Error message).\n[/quote]\n\nSince when are redirects considered errors?\n\nThis bug is a *regression* in behaviour from 2.0.x.\n\n> However, it's a reasonable enhancement request, to provide an option to\n> preserve *headers* from the backend while substituting a local response\n> *body*.\n\nWe (well, I) don't want that. We want the entire proxied request to be left\nalone, because there's nothing wrong with it! Don't replace the body with the\nErrorDocument, don't remove the headers.\n\n> Simple solution: if you want your cookies from the backend, don't override\n> them.\n\nI'm not..."}, {"text": "Clearly the documentation is not explicit enough here to define how the\nimplementation should act; I'd certainly agree that not treating 3xx response as\n\"errors\" for the purposes of ProxyErrorOverride would be the obvious default.\n\nAre you sure this is a regression since vanilla 2.0.x Stuart?  AFAICT the 2.0.x\ncode will override errors for any non-2xx response too.", "tags": [], "creator": "jorton@redhat.com", "is_private": false, "count": 10, "id": 99415, "time": "2007-02-15T05:17:08Z", "bug_id": 39245, "creation_time": "2007-02-15T05:17:08Z", "attachment_id": null}, {"text": "(In reply to comment #10)\n> Clearly the documentation is not explicit enough here to define how the\n> implementation should act; I'd certainly agree that not treating 3xx response\n> as \"errors\" for the purposes of ProxyErrorOverride would be the obvious\n> default.\n\nYes, granted it does give a definition of \"error pages\" - but as you seem to\nagree, most people would not take that to include redirects (or 304 responses\ncome to that).\n\n> Are you sure this is a regression since vanilla 2.0.x Stuart?  AFAICT the\n> 2.0.x code will override errors for any non-2xx response too.\n\nGranted we do apply patches and our own modules to the server I saw this on\n(when just upgrading the httpd version and looking for broken things), but I'm\npretty sure none of those would affect this area of behaviour. However, I have\nconfirmed that (see below).\n\nThe 2.0.x code is actually pretty confused, and potentially broken in other\nways. Within ap_proxy_http_process_response  we see:\n\n    * if we are overriding the errors, we can't put the content\n    * of the page into the brigade\n    */\n    if ( (conf->error_override ==0) || r->status < 400 ) {\n\nWhich would be correct in my book (though better expressed using the macros).\nBut then later:\n\n    if ( conf->error_override ) {\n        /* the code above this checks for 'OK' which is what the hook expects */\n        if ( r->status == HTTP_OK )\n            return OK;\n        else  {\n            int status = r->status;\n            r->status = HTTP_OK;\n            /* Discard body, if one is expected */\n            if ((status > 199) && /* not any 1xx response */\n                (status != HTTP_NO_CONTENT) && /* not 204 */\n                (status != HTTP_RESET_CONTENT) && /* not 205 */\n                (status != HTTP_NOT_MODIFIED)) { /* not 304 */\n               ap_discard_request_body(rp);\n           }\n            return status;\n        }\n    } else \n        return OK;\n\nwhich would seem to indicate that only 200 would ever be considered a non-error\nresponse (even more wrong I hope you'll agree)!\n\nHowever, there is something more going on - which I've not had time to follow\nthrough/debug as yet. Proof is in what an actual vanilla server does, so here goes:\n\nBuilt Apache (2.2.4 and 2.0.58) with:\n./configure --prefix=/tmp/httpd-X.X.X --with-mpm=prefork --enable-so\n--enable-mods-shared='rewrite expires info deflate speling headers unique-id\nproxy asis'\n\nwith: gcc (GCC) 4.1.1 20070105 (Red Hat 4.1.1-51)\non: Linux gnl05024.int.gnl 2.6.19-1.2895.fc6 #1 SMP Wed Jan 10 19:28:18 EST 2007\ni686 i686 i386 GNU/Linux\n\nOn one server (I guess being fair you'd put this somewhere independent - but I\ntried it both way rounds), create a CGI which does this:\n\n$ curl --get --verbose http://localhost:2058/cgi-bin/redirect\n* About to connect() to localhost port 2058\n*   Trying 127.0.0.1... connected\n* Connected to localhost (127.0.0.1) port 2058\n> GET /cgi-bin/redirect HTTP/1.1\n> User-Agent: curl/7.15.5 (i686-redhat-linux-gnu) libcurl/7.15.5 OpenSSL/0.9.8b\nzlib/1.2.3 libidn/0.6.5\n> Host: localhost:2058\n> Accept: */*\n> \n< HTTP/1.1 302 Found\n< Date: Thu, 15 Feb 2007 18:07:36 GMT\n< Server: Apache/2.0.58 (Unix)\n< X-My-Secret-Header: moo\n< Location: http://httpd.apache.org/\n< Content-Length: 283\n< Content-Type: text/html; charset=iso-8859-1\n<!DOCTYPE HTML PUBLIC \"-//IETF//DTD HTML 2.0//EN\">\n<html><head>\n<title>302 Found</title>\n</head><body>\n<h1>Found</h1>\n<p>The document has moved <a href=\"http://httpd.apache.org/\">here</a>.</p>\n<hr>\n<address>Apache/2.0.58 (Unix) Server at localhost Port 2058</address>\n</body></html>\n* Connection #0 to host localhost left intact\n* Closing connection #0\n\nOK, so we've got a 302 response, with a custom header in there.\n\nNow take both our 2.2 and 2.0 servers with respective vanilla configs and add:\n\nProxyPass /rproxy http://localhost:2058/cgi-bin\nProxyPassReverse /rproxy http://localhost:2058/cgi-bin\nProxyErrorOverride On\n\nand restart. Now we can make the request to the CGI above but going through each\nreverse proxy. Firstly, on the 2.0.58 server:\n\n$ curl --get --verbose http://localhost:2058/rproxy/redirect\n* About to connect() to localhost port 2058\n*   Trying 127.0.0.1... connected\n* Connected to localhost (127.0.0.1) port 2058\n> GET /rproxy/redirect HTTP/1.1\n> User-Agent: curl/7.15.5 (i686-redhat-linux-gnu) libcurl/7.15.5 OpenSSL/0.9.8b\nzlib/1.2.3 libidn/0.6.5\n> Host: localhost:2058\n> Accept: */*\n> \n< HTTP/1.1 302 Found\n< Date: Thu, 15 Feb 2007 18:16:54 GMT\n< Server: Apache/2.2.4 (Unix)\n< X-My-Secret-Header: moo\n< Location: http://httpd.apache.org/\n< Content-Length: 208\n< Content-Type: text/html; charset=iso-8859-1\n<!DOCTYPE HTML PUBLIC \"-//IETF//DTD HTML 2.0//EN\">\n<html><head>\n<title>302 Found</title>\n</head><body>\n<h1>Found</h1>\n<p>The document has moved <a href=\"http://httpd.apache.org/\">here</a>.</p>\n</body></html>\n* Connection #0 to host localhost left intact\n* Closing connection #0\n\nCorrect HTTP status and custom header is present. Now on the 2.2.4 server:\n\n$ curl --get --verbose http://localhost:2204/rproxy/redirect\n* About to connect() to localhost port 2204\n*   Trying 127.0.0.1... connected\n* Connected to localhost (127.0.0.1) port 2204\n> GET /rproxy/redirect HTTP/1.1\n> User-Agent: curl/7.15.5 (i686-redhat-linux-gnu) libcurl/7.15.5 OpenSSL/0.9.8b\nzlib/1.2.3 libidn/0.6.5\n> Host: localhost:2204\n> Accept: */*\n> \n< HTTP/1.1 302 Found\n< Date: Thu, 15 Feb 2007 18:17:40 GMT\n< Location: http://httpd.apache.org/\n< Content-Length: 208\n< Content-Type: text/html; charset=iso-8859-1\n<!DOCTYPE HTML PUBLIC \"-//IETF//DTD HTML 2.0//EN\">\n<html><head>\n<title>302 Found</title>\n</head><body>\n<h1>Found</h1>\n<p>The document has moved <a href=\"http://httpd.apache.org/\">here</a>.</p>\n</body></html>\n* Connection #0 to host localhost left intact\n* Closing connection #0\n\nWe've lost the headers. QED.\n\n\nInterestingly, making HEAD requests we see behaviour the other way around:\n\n$ curl --head --verbose http://localhost:2058/rproxy/redirect\n* About to connect() to localhost port 2058\n*   Trying 127.0.0.1... connected\n* Connected to localhost (127.0.0.1) port 2058\n> HEAD /rproxy/redirect HTTP/1.1\n> User-Agent: curl/7.15.5 (i686-redhat-linux-gnu) libcurl/7.15.5 OpenSSL/0.9.8b\nzlib/1.2.3 libidn/0.6.5\n> Host: localhost:2058\n> Accept: */*\n> \n< HTTP/1.1 302 Found\nHTTP/1.1 302 Found\n< Date: Thu, 15 Feb 2007 18:18:11 GMT\nDate: Thu, 15 Feb 2007 18:18:11 GMT\n< Location: http://httpd.apache.org/\nLocation: http://httpd.apache.org/\n< Content-Type: text/html; charset=iso-8859-1\nContent-Type: text/html; charset=iso-8859-1\n\n* Connection #0 to host localhost left intact\n* Closing connection #0\n\n$ curl --head --verbose http://localhost:2204/rproxy/redirect\n* About to connect() to localhost port 2204\n*   Trying 127.0.0.1... connected\n* Connected to localhost (127.0.0.1) port 2204\n> HEAD /rproxy/redirect HTTP/1.1\n> User-Agent: curl/7.15.5 (i686-redhat-linux-gnu) libcurl/7.15.5 OpenSSL/0.9.8b\nzlib/1.2.3 libidn/0.6.5\n> Host: localhost:2204\n> Accept: */*\n> \n< HTTP/1.1 302 Found\nHTTP/1.1 302 Found\n< Date: Thu, 15 Feb 2007 18:18:52 GMT\nDate: Thu, 15 Feb 2007 18:18:52 GMT\n< Server: Apache/2.2.4 (Unix)\nServer: Apache/2.2.4 (Unix)\n< X-My-Secret-Header: moo\nX-My-Secret-Header: moo\n< Location: http://httpd.apache.org/\nLocation: http://httpd.apache.org/\n< Content-Type: text/html; charset=iso-8859-1\nContent-Type: text/html; charset=iso-8859-1\n\n* Connection #0 to host localhost left intact\n* Closing connection #0\n\nAlso note that *both* servers \"pause\" for ~5s between receiving the request and\nresponding. I think that this is caused by the backend server trying to stream\nits body out, and the frontend server not consuming it - possibly a seperate\nissue. Why the custom header comes through in 2.2.4 and not in 2.0.5 I haven't\nlooked into - but the fact that GET and HEAD give you different headers would\nseem to be a bug with each version yes?\n\nAnyway, applying my patch to 2.2.4:\n\n$ curl --get --verbose http://localhost:2204/rproxy/redirect\n* About to connect() to localhost port 2204\n*   Trying 127.0.0.1... connected\n* Connected to localhost (127.0.0.1) port 2204\n> GET /rproxy/redirect HTTP/1.1\n> User-Agent: curl/7.15.5 (i686-redhat-linux-gnu) libcurl/7.15.5 OpenSSL/0.9.8b\nzlib/1.2.3 libidn/0.6.5\n> Host: localhost:2204\n> Accept: */*\n> \n< HTTP/1.1 302 Found\n< Date: Thu, 15 Feb 2007 18:30:59 GMT\n< Server: Apache/2.2.4 (Unix)\n< X-My-Secret-Header: moo\n< Location: http://httpd.apache.org/\n< Content-Length: 208\n< Content-Type: text/html; charset=iso-8859-1\n<!DOCTYPE HTML PUBLIC \"-//IETF//DTD HTML 2.0//EN\">\n<html><head>\n<title>302 Found</title>\n</head><body>\n<h1>Found</h1>\n<p>The document has moved <a href=\"http://httpd.apache.org/\">here</a>.</p>\n</body></html>\n* Connection #0 to host localhost left intact\n* Closing connection #0\n\nSo it now passes the header through correctly. Also, the HEAD is now the same:\n\n$ curl --head --verbose http://localhost:2204/rproxy/redirect\n* About to connect() to localhost port 2204\n*   Trying 127.0.0.1... connected\n* Connected to localhost (127.0.0.1) port 2204\n> HEAD /rproxy/redirect HTTP/1.1\n> User-Agent: curl/7.15.5 (i686-redhat-linux-gnu) libcurl/7.15.5 OpenSSL/0.9.8b\nzlib/1.2.3 libidn/0.6.5\n> Host: localhost:2204\n> Accept: */*\n> \n< HTTP/1.1 302 Found\nHTTP/1.1 302 Found\n< Date: Thu, 15 Feb 2007 18:31:37 GMT\nDate: Thu, 15 Feb 2007 18:31:37 GMT\n< Server: Apache/2.2.4 (Unix)\nServer: Apache/2.2.4 (Unix)\n< X-My-Secret-Header: moo\nX-My-Secret-Header: moo\n< Location: http://httpd.apache.org/\nLocation: http://httpd.apache.org/\n< Content-Type: text/html; charset=iso-8859-1\nContent-Type: text/html; charset=iso-8859-1\n\n* Connection #0 to host localhost left intact\n* Closing connection #0\n\nAnd the \"pause\" has gone - hence my theory.\n\nI think the above all indicates:\n\n1) 2.2.x has different behaviour from 2.0.x (as myself - and others it would\nseem - were expecting/relying on that, I call it a regression) in how they treat\n3xx response when erroroveride is on.\n2) Both branches may have a bug with HEAD not being the same as GET.\n3) There's a potential issue left with bodies not being consumed (?) \n\nI'll look further into 2) and 3) tomorrow, if time allows. Have been stuck in\nmeetings most of this afternoon, it's past home time, and I've looked at this\nenough already for one day. :)", "tags": [], "creator": "stuart@terminus.co.uk", "is_private": false, "count": 11, "id": 99442, "time": "2007-02-15T10:40:59Z", "bug_id": 39245, "creation_time": "2007-02-15T10:40:59Z", "attachment_id": null}, {"attachment_id": null, "tags": [], "creator": "stuart@terminus.co.uk", "is_private": false, "count": 12, "id": 99443, "time": "2007-02-15T10:45:16Z", "bug_id": 39245, "creation_time": "2007-02-15T10:45:16Z", "text": "(In reply to comment #11)\n> Yes, granted it does give a definition of \"error pages\" - but as you seem to\n> agree, most people would not take that to include redirects (or 304 responses\n> come to that).\n\nSigh, see what happens when you're tired. That should obviously read:\n\nit does *not* give a definition of \"error pages\""}, {"count": 13, "tags": [], "bug_id": 39245, "attachment_id": null, "is_private": false, "id": 99499, "time": "2007-02-16T10:25:53Z", "creator": "stuart@terminus.co.uk", "creation_time": "2007-02-16T10:25:53Z", "text": "(In reply to comment #11)\n> 2) Both branches may have a bug with HEAD not being the same as GET.\n\nThis one is slightly complex. See bug #41646\n\n> 3) There's a potential issue left with bodies not being consumed (?) \n\nRelatively straight-forward. See bug #41644\n\nI think these are all independent issues (well, they are related in the block of\ncode the affect which makes for confusion testing when you start discovering\nthem, but they can be resolved on their own)."}, {"count": 14, "tags": [], "bug_id": 39245, "attachment_id": 19915, "id": 101437, "time": "2007-04-04T14:11:15Z", "creator": "covener@gmail.com", "creation_time": "2007-04-04T14:11:15Z", "is_private": false, "text": "Created attachment 19915\nextend directive based on Nick's comments\n\nsee\nhttp://mail-archives.apache.org/mod_mbox/httpd-dev/200704.mbox/%3c20070404163031.71e4da7b@grimnir%3e"}, {"count": 15, "tags": [], "creator": "trawick@apache.org", "is_private": false, "text": "simple fix to skip override processing for 1xx and 3xx (in addition to 2xx)\nresponses committed to trunk and proposed for backport to 2.2.x", "id": 101621, "time": "2007-04-12T08:18:42Z", "bug_id": 39245, "creation_time": "2007-04-12T08:18:42Z", "attachment_id": null}, {"count": 16, "text": "For posterity; references to the fixes committed:\n\ntrunk: http://svn.apache.org/viewvc?view=rev&rev=527969\n2.2.x: http://svn.apache.org/viewvc?view=rev&rev=534068\n", "bug_id": 39245, "is_private": false, "id": 103182, "time": "2007-05-14T08:19:18Z", "creator": "jorton@redhat.com", "creation_time": "2007-05-14T08:19:18Z", "tags": [], "attachment_id": null}]