[{"count": 0, "tags": [], "bug_id": 51765, "text": "Hello,\n\nThe text-decoration:underline attribute does not work when used inside a flowSpan. I attach a svg file demonstrating the problem.\nJust rasterize it and you'll see a line appear way above the text.\n\nThanks for your consideration.", "id": 149030, "time": "2011-09-05T11:55:00Z", "creator": "antoine.ansel@gmail.com", "creation_time": "2011-09-05T11:55:00Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "creator": "antoine.ansel@gmail.com", "attachment_id": 27459, "id": 149031, "time": "2011-09-05T11:56:04Z", "bug_id": 51765, "creation_time": "2011-09-05T11:56:04Z", "is_private": false, "text": "Created attachment 27459\nSvg describing underline problem"}, {"attachment_id": 27460, "tags": [], "creator": "antoine.ansel@gmail.com", "is_private": false, "count": 2, "id": 149032, "time": "2011-09-05T11:56:30Z", "bug_id": 51765, "creation_time": "2011-09-05T11:56:30Z", "text": "Created attachment 27460\nPng describing underline problem"}, {"count": 3, "attachment_id": 29267, "creator": "m.s.ganzeboom@rug.nl", "is_private": false, "id": 161642, "time": "2012-08-23T13:26:32Z", "bug_id": 51765, "creation_time": "2012-08-23T13:26:32Z", "tags": [], "text": "Created attachment 29267\nFixes the incorrect positioning of underline, overline and line-through in flowing text tags\n\nAs the previously attached test case illustrates perfectly, the underline is positioned incorrect. As it seems, it always gets positioned at the top of the defined flowRegion. This is also true for the overline and line-through text decorations.\nAfter two to three days of analysing I found that the cause was in the GlyphLayout class in the code painting the text decorations (paintDecorations(...)). The protected methods getUnderlineShape(), getOverlineShape() and getStrikethroughShape() (i.e. SVG calls it line-through), all use the offset property to determine the offset of the text decoration in relation to the text. With regular <text> and <tspan> tags somehow this property gets the right offset values set (probably through manual x, y tag attributes or derived from parent tags) and the text decoration is showed correct. However, with flowing text tags (<flowPara>, <flowSpan>) the offset values do not get set at all (both offset.x and offset.y stay 0.0). That is probably because flowing text elements have their own <flowRegion> defined in which the text flows 'freely'. As a result the offset determined for the text decoration only reaches to the top of the defined flow region. Hence, the text decoration is always shown at the top. \nTo fix this, one could either try to let the GlyphLayout.offset property values get set and take into account the possible multiline flowing text or instead of using the offset property, determine the text decoration offset with help of the available glyph vector. This vector contains all the glyphs (i.e. typographic representation of characters), that are subject to the text decoration. Those glyphs have bounds from which their positions can be determined. And with the other components (line thickness and what not) making up the total offset the correct position of the text decoration can be determined.\n\nThe latter solution I chose to implement and is attached in the patch. It is implemented such that for regular <text> and <tspan> tags the GlyphLayout.offset property (i.e. the original way) is still used, but for flowing text (i.e. flowPara, flowSpan) the glyph vector is used. That is why the patch also contains changes in FlowTextPainter.java and FlowGlyphLayout.java, because I had to change that instances of both of those classes get loaded when Batik is dealing with flowing text instead of regular text.\n\nLooking forward to seeing your comments on this fix and possibly how to commit it to the repository if requested."}, {"attachment_id": null, "tags": [], "bug_id": 51765, "text": "In reflect to my previous post. I would say that the status of this bug has changed to Resolved: Worksforme.", "count": 4, "id": 161643, "time": "2012-08-23T13:27:48Z", "creator": "m.s.ganzeboom@rug.nl", "creation_time": "2012-08-23T13:27:48Z", "is_private": false}, {"count": 5, "tags": [], "text": "Comment on attachment 29267\nFixes the incorrect positioning of underline, overline and line-through in flowing text tags\n\nThis patch does not fix everything regarding the positioning of the text decorations. Especially I later noticed that the line-through text decoration was not positioned correctly. That was because I used the max y position of the geometric bounds of the glyph vector. When the text descends beyond the baseline (as it does with characters like 'g', 'j', etc.) the line-through appeared still too low.\nThe patch marked as [CORRECT] fixes this by not using the max y position of the geometric bounds of the glyph vector, but employing the y position of the first glyph in the glyph vector. That is basically the baseline of the glyph vector as I figure it. Results in tests confirm that (see patch test case svg).", "is_private": false, "id": 161677, "creator": "m.s.ganzeboom@rug.nl", "time": "2012-08-24T15:41:34Z", "bug_id": 51765, "creation_time": "2012-08-24T15:41:34Z", "attachment_id": 29267}, {"count": 6, "attachment_id": 29276, "creator": "m.s.ganzeboom@rug.nl", "is_private": false, "id": 161678, "time": "2012-08-24T15:44:44Z", "bug_id": 51765, "creation_time": "2012-08-24T15:44:44Z", "tags": [], "text": "Created attachment 29276\nFixes the incorrect positioning of underline, overline and line-through in flowing text tags\n\nThis is the correct patch (previous one removed). The text-decorations were still positioned incorrectly if text descended. In this patch the usage of the max y position of the geometric bounds of the glyph vector has been changed in employing the y position of the first glyph in the glyph vector. That is basically the baseline of the glyph vector as I figured it. Results in tests confirm that (see patch test case svg)."}, {"count": 7, "attachment_id": 29277, "creator": "m.s.ganzeboom@rug.nl", "text": "Created attachment 29277\nSVG test case file to test the patch for this bug", "id": 161679, "time": "2012-08-24T15:47:05Z", "bug_id": 51765, "creation_time": "2012-08-24T15:47:05Z", "tags": [], "is_private": false}, {"count": 8, "tags": [], "creator": "helder.magalhaes@gmail.com", "text": "(In reply to comment #4)\n> In reflect to my previous post. I would say that the status of this bug has\n> changed to Resolved: Worksforme.\n\nThanks for the patch submission, Mario! :-)\n\nAgain, having a patch available doesn't mean the issue's fixed: a committer [1] familiar with the code (Thomas?) still needs to review it and integrate it into the mainstream code. Best way to flag this is using the \"PatchAvailable\" in the keywords, as has been done. I'm therefore reopening the issue.\n\n[1] http://xmlgraphics.apache.org/batik/contributors.html#committers", "id": 161714, "time": "2012-08-26T23:05:09Z", "bug_id": 51765, "creation_time": "2012-08-26T23:05:09Z", "is_private": false, "attachment_id": null}]