[{"count": 0, "tags": [], "creator": "jsalvata@atg.com", "attachment_id": null, "is_private": false, "id": 28925, "time": "2003-01-07T00:10:35Z", "bug_id": 15826, "creation_time": "2003-01-07T00:10:35Z", "text": "From an e-mail I wrote a while ago:\n\n[...]\n\nI also would like to see limited scripting functionality\nreplacing/complementing the current ${functions} with ECMAScript\nexpresions. This would also address Mike's wish to have more complex\nparsing..\n\nBeing more specific, I was thinking about a simplification of the\nfunctions functionality. A function currently produces a value from the\ncurrent test execution context, which includes the results of the last\nrequest and little more. This causes difficulties, for example, if you\nwant to use a piece of info in a response two requests later. The\nsolution was this \"variable-names\" stuck to the end of the function call\nso that you can (re-)use that value later on -- but it's all tied with\nstrings.\n\nMy idea is to create a new kind of component, an \"Extractor\", which\nwould receive samples and extract data from them, placing the results in\nvariables. Similar to Assertions, these extractors would most often be\nplaced inside a Sampler, but it could make sense to put one in a\ncontroller if it needs to repeat the extraction for each sampler in there.\n\nOnce you have this, you can almost eliminate the concept of ${functions}\nand almost stick to ${variables} -- although being able to use\nexpressions on the variables, possibly including real functions, would\nbe great. I say \"real functions\" because the current ones are very badly\nnamed, since their results depend (almost exclusively) on things other\nthan their parameters, so they are not functions in a proper sense.\n\nA side advantage of this \"Extractor\" idea is that complex stuff like\nregular expressions could go into their own field in a GUI form, instead\nof being embedded in a longer text.\n\nPossible extractors:\n- Regexp extractor\n- Cookie extractor\n- Session id extractor\n- Form field extractor\n[...]"}, {"count": 1, "tags": [], "text": "They are called Post and Pre Processors", "is_private": false, "bug_id": 15826, "id": 36310, "time": "2003-04-29T19:49:44Z", "creator": "mstover1@apache.org", "creation_time": "2003-04-29T19:49:44Z", "attachment_id": null}]