[{"attachment_id": null, "tags": [], "bug_id": 53870, "text": "While load testing our apache web servers this week I observed in the server-status output numerous requests in a state ?...reading...  In addition during this load test the apache web server was hitting the maxclients setting which is unusual for the load we were applying.\n\nI did a pstack on one of the httpd child processes and noticed numerous threads in a 'zombie' state.  This is not crashing apache and I have not noticed an increase in CPU or memory utilization.  The zombie threads however do not go away until the httpd process is stopped and started again.\n\nThe pstack output is included below.  The apache version is 2.2.22 and was compiled using the Sun Studio 11 compiler.  I can provide the config, a core dump, etc if necessary.  If anyone has any troubleshooting recommendations I would greatly appreciate it.\n\nServer version: Apache/2.2.22 (Unix)\nServer built:   Aug 16 2012 09:46:33\nServer's Module Magic Number: 20051115:30\nServer loaded:  APR 1.4.5, APR-Util 1.4.1\nCompiled using: APR 1.4.5, APR-Util 1.4.1\nArchitecture:   64-bit\nServer MPM:     Worker\n  threaded:     yes (fixed thread count)\n    forked:     yes (variable process count)\nServer compiled with....\n -D APACHE_MPM_DIR=\"server/mpm/worker\"\n -D APR_HAS_SENDFILE\n -D APR_HAS_MMAP\n -D APR_HAVE_IPV6 (IPv4-mapped addresses enabled)\n -D APR_USE_FCNTL_SERIALIZE\n -D APR_USE_PTHREAD_SERIALIZE\n -D SINGLE_LISTEN_UNSERIALIZED_ACCEPT\n -D APR_HAS_OTHER_CHILD\n -D AP_HAVE_RELIABLE_PIPED_LOGS\n -D DYNAMIC_MODULE_LIMIT=128\n -D HTTPD_ROOT=\"/app/asf/WS/2.2\"\n -D SUEXEC_BIN=\"/app/asf/WS/2.2/bin/suexec\"\n -D DEFAULT_SCOREBOARD=\"logs/apache_runtime_status\"\n -D DEFAULT_ERRORLOG=\"logs/error_log\"\n -D AP_TYPES_CONFIG_FILE=\"conf/mime.types\"\n -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n\n19836:  /app/asf/WS/2.2/bin/httpd -D SSL -f /app/asf/WS/2.2/conf/qaws04.nyenet\n-----------------  lwp# 1 / thread# 1  --------------------\n ffffffff7d8a9088 lwp_wait (6, ffffffff7ffff2ac)\n ffffffff7da0b690 _thrp_join (6, 0, ffffffff7ffff368, 1, 0, 0) + 48\n ffffffff7eb2bf30 apr_thread_join (ffffffff7ffff434, 100299d30, fffffffffffffff0, 100299d58, 7a120, 100299d58) + c\n 0000000100054560 child_main (7a000, 1003e60c0, 2, 10029a178, 10017a05c, 10017d328) + 7b8\n 00000001000550c8 perform_idle_server_maintenance (ffffffffffffffff, 0, 0, 0, 10017a030, 10017a060) + 750\n 0000000100055500 server_main_loop (0, ffffffff, 0, 100308250, 100308250, 1) + 2e8\n 00000001000558e0 ap_mpm_run (2, 10017e000, 100070000, 100070000, 100070000, 10017d374) + 3b0\n 0000000100020470 main (100000, 100177, 1001971b8, 100177a38, 100000, 2400) + ba8\n 000000010001f79c _start (0, 0, 0, 0, 0, 0) + 17c\n-----------------  lwp# 30 / thread# 30  --------------------\n ffffffff7d8a755c poll     (ffffffff757fbb60, 0, 3e8)\n ffffffff7da1091c select (0, 0, 0, 0, ffffffff757fbcd0, 1) + 6c\n ffffffff7c3851a8 __1cIcm_sleep6FLl_v_ (1, 0, 6, 0, 0, 0) + 30\n ffffffff7c38673c ConnectionService (10046fe40, ffffffff7c62f950, ffffffff7c62fd41, 7, 1, 3) + 35c\n ffffffff7da17cd0 _lwp_start (0, 0, 0, 0, 0, 0)\n-----------------  lwp# 6 / thread# 6  --------------------\n ffffffff7da17de0 lwp_park (0, 0, 0)\n ffffffff7da1437c slow_lock (1002c04b8, ffffffff7cf01400, ffffffff7992b498, 75a8, a, 7400) + 58\n ffffffff7916155c CRYPTO_add_lock (100185538, 1, a, ffffffff7945bf00, 120, c00) + 4c\n ffffffff7944c094 ssl_cert_dup (100252950, 1002529b0, 1006f5950, 0, ffffffff7945bf00, 0) + 2e4\n ffffffff79446088 SSL_new (1006fcfe0, 100252500, 105400, 11b66c, ffffffff79561640, ffffffff7945be48) + b8\n ffffffff79808f04 ssl_init_ssl_connection (48, 1006dd028, 1006dd7c8, 80, ffffffff7992b498, 1001b1ea8) + dc\n 0000000100043aa0 ap_process_connection (1006dd028, 1006dced0, 1001b9858, 3, 10017d2b0, 2) + 40\n 0000000100053470 worker_thread (100299d30, 1006dce58, 1006dd028, 10017d358, 10017a048, 18) + 2b8\n ffffffff7da17cd0 _lwp_start (0, 0, 0, 0, 0, 0)\n-----------------  lwp# 8 / thread# 8  --------------------\n ffffffff7da17de0 lwp_park (0, 0, 0)\n ffffffff7da1437c slow_lock (1002c04b8, ffffffff7cf01c00, ffffffff7992b498, 75a8, a, 7400) + 58\n ffffffff7916155c CRYPTO_add_lock (100185538, 1, a, ffffffff7945bf00, 120, c00) + 4c\n ffffffff7944c094 ssl_cert_dup (100252950, 1002529b0, 1006256e0, 0, ffffffff7945bf00, 0) + 2e4\n ffffffff79446088 SSL_new (1006253a0, 100252500, 105400, 11b66c, ffffffff79561640, ffffffff7945be48) + b8\n ffffffff79808f04 ssl_init_ssl_connection (48, 100623588, 100623d28, 80, ffffffff7992b498, 1001b1ea8) + dc\n 0000000100043aa0 ap_process_connection (100623588, 100623430, 1001b9858, 5, 10017d2b0, 2) + 40\n 0000000100053470 worker_thread (100299d90, 1006233b8, 100623588, 10017d358, 10017a048, 28) + 2b8\n ffffffff7da17cd0 _lwp_start (0, 0, 0, 0, 0, 0)\n-----------------  lwp# 10 / thread# 10  --------------------\n ffffffff7da17de0 lwp_park (0, 0, 0)\n ffffffff7da1437c slow_lock (1002c04b8, ffffffff7cf02400, ffffffff7992b498, 75a8, a, 7400) + 58\n ffffffff7916155c CRYPTO_add_lock (100185538, 1, a, ffffffff7945bf00, 120, c00) + 4c\n ffffffff7944c094 ssl_cert_dup (100252950, 1002529b0, 10046d9d0, 0, ffffffff7945bf00, 0) + 2e4\n ffffffff79446088 SSL_new (1004e8550, 100252500, 105400, 11b66c, ffffffff79561640, ffffffff7945be48) + b8\n ffffffff79808f04 ssl_init_ssl_connection (48, 1004e6738, 1004e6ed8, 80, ffffffff7992b498, 1001b1ea8) + dc\n 0000000100043aa0 ap_process_connection (1004e6738, 1004e65e0, 1001b9858, 7, 10017d2b0, 2) + 40\n 0000000100053470 worker_thread (100299df0, 1004e6568, 1004e6738, 10017d358, 10017a048, 38) + 2b8\n ffffffff7da17cd0 _lwp_start (0, 0, 0, 0, 0, 0)\n-----------------  lwp# 12 / thread# 12  --------------------\n ffffffff7da17de0 lwp_park (0, 0, 0)\n ffffffff7da1437c slow_lock (1002c04b8, ffffffff7cf02c00, ffffffff7992b498, 75a8, a, 7400) + 58\n ffffffff7916155c CRYPTO_add_lock (100185538, 1, a, ffffffff7945bf00, 120, c00) + 4c\n ffffffff7944c094 ssl_cert_dup (100252950, 1002529b0, 1004e1120, 0, ffffffff7945bf00, 0) + 2e4\n ffffffff79446088 SSL_new (1004e5920, 100252500, 105400, 11b66c, ffffffff79561640, ffffffff7945be48) + b8\n ffffffff79808f04 ssl_init_ssl_connection (48, 1004e1af8, 1004e2298, 80, ffffffff7992b498, 1001b1ea8) + dc\n 0000000100043aa0 ap_process_connection (1004e1af8, 1004e19a0, 1001b9858, 9, 10017d2b0, 2) + 40\n 0000000100053470 worker_thread (100299e50, 1004e1928, 1004e1af8, 10017d358, 10017a048, 48) + 2b8\n ffffffff7da17cd0 _lwp_start (0, 0, 0, 0, 0, 0)\n-----------------  lwp# 20 / thread# 20  --------------------\n ffffffff7da17de0 lwp_park (0, 0, 0)\n ffffffff7da1437c slow_lock (1002c04b8, ffffffff73600c00, ffffffff7992b498, 75a8, a, 7400) + 58\n ffffffff7916155c CRYPTO_add_lock (100185538, 1, a, ffffffff7945bf00, 120, c00) + 4c\n ffffffff7944c094 ssl_cert_dup (100252950, 1002529b0, 100323c80, 0, ffffffff7945bf00, 0) + 2e4\n ffffffff79446088 SSL_new (100323940, 100252500, 105400, 11b66c, ffffffff79561640, ffffffff7945be48) + b8\n ffffffff79808f04 ssl_init_ssl_connection (48, 1004ad7a8, 1004adf48, 80, ffffffff7992b498, 1001b1ea8) + dc\n 0000000100043aa0 ap_process_connection (1004ad7a8, 1004ad650, 1001b9858, 11, 10017d2b0, 2) + 40\n 0000000100053470 worker_thread (100299fd0, 1004ad5d8, 1004ad7a8, 10017d358, 10017a048, 88) + 2b8\n ffffffff7da17cd0 _lwp_start (0, 0, 0, 0, 0, 0)\n-----------------  lwp# 25 / thread# 25  --------------------\n ffffffff7da17de0 lwp_park (0, 0, 0)\n ffffffff7da1437c slow_lock (1002c04b8, ffffffff73602000, ffffffff7992b498, 75a8, a, 7400) + 58\n ffffffff7916155c CRYPTO_add_lock (100185538, 1, a, ffffffff7945bf00, 120, c00) + 4c\n ffffffff7944c094 ssl_cert_dup (100252950, 1002529b0, 10045a680, 0, ffffffff7945bf00, 0) + 2e4\n ffffffff79446088 SSL_new (10045a340, 100252500, 105400, 11b66c, ffffffff79561640, ffffffff7945be48) + b8\n ffffffff79808f04 ssl_init_ssl_connection (48, 1004e9348, 1004e9ae8, 80, ffffffff7992b498, 1001b1ea8) + dc\n 0000000100043aa0 ap_process_connection (1004e9348, 1004e91f0, 1001b9858, 16, 10017d2b0, 2) + 40\n 0000000100053470 worker_thread (10029a0c0, 1004e9178, 1004e9348, 10017d358, 10017a048, b0) + 2b8\n ffffffff7da17cd0 _lwp_start (0, 0, 0, 0, 0, 0)\n-----------------  lwp# 26 / thread# 26  --------------------\n ffffffff7da17de0 lwp_park (0, 0, 0)\n ffffffff7da1437c slow_lock (1002c04b8, ffffffff73602400, ffffffff7992b498, 75a8, a, 7400) + 58\n ffffffff7916155c CRYPTO_add_lock (100185538, ffffffffffffffff, a, ffffffff792b8310, 189, c00) + 4c\n ffffffff7920ff54 EVP_PKEY_free (100185530, 10dc00, ffffffff793c61a8, ffffffff793c61a8, 1b627c, 1a800) + 34\n ffffffff7944c1f0 ssl_cert_free (10040d9c0, ffffffffffefa8c0, 105400, 1, 1154ec, 10040da20) + a8\n ffffffff794467d0 SSL_free (100470480, 3e9, 6, 0, 11afdc, 100470570) + 178\n ffffffff79811634 ssl_io_filter_output (ffffffffffefb2c0, 48, 100492c10, 10048a418, ffffffff7992b498, 100470480) + 4fc\n 000000010004394c ap_lingering_close (100489a70, 100489bc8, 100179000, 100489c70, 100179, 100000) + 3c\n 0000000100053478 worker_thread (10029a0f0, 1004899f8, 100489bc8, 10017d358, 10017a048, b8) + 2c0\n ffffffff7da17cd0 _lwp_start (0, 0, 0, 0, 0, 0)\n-----------------  lwp# 27 / thread# 27  --------------------\n ffffffff7da17de0 lwp_park (0, 0, 0)\n ffffffff7da1437c slow_lock (1002c04b8, ffffffff73602800, ffffffff7992b498, 75a8, a, 7400) + 58\n ffffffff7916155c CRYPTO_add_lock (100185d58, ffffffffffffffff, a, ffffffff792b8310, 189, c00) + 4c\n ffffffff7920ff54 EVP_PKEY_free (100185d50, 10dc00, ffffffff7992b498, ffffffff793c61a8, 1b627c, 7400) + 34\n ffffffff79222c3c X509_PUBKEY_get (100185d50, 100300bd0, ffffffffffef36e8, ffffffff793dc5c8, 10c800, 100185fd0) + 14c\n ffffffff7924b85c internal_verify (ffffffff723fb630, ffffffff792499c4, 0, 22, 100300a70, 4000) + d8\n ffffffff792498a8 X509_verify_cert (1, ffffffff723fb630, ffffffff723fb568, 0, 0, ffffffff792492d0) + 5b8\n ffffffff7942e2c4 ssl3_output_cert_chain (1003291f0, 100300a70, 0, 7, 133414, 1004135a0) + 9c\n ffffffff7941c3cc ssl3_accept (1003291f0, 100475ac9, 2150, 2, 21a0, 2112) + f14\n ffffffff79430158 ssl23_get_client_hello (1003291f0, b, 300, ffffffff79561640, 3, ffffffff723fb8d4) + 8b8\n ffffffff7942f818 ssl23_accept (1003291f0, ffffffff79815668, 4000, 100307d10, ffffffff79561640, 2210) + 298\n ffffffff798104a8 ssl_io_filter_connect (100308d30, 100308518, 0, 11b324, 100308cb8, ffffffff7992b498) + 338\n ffffffff79810c24 ssl_io_filter_input (100472ad8, 100475070, 1, 0, 0, 100472ad8) + 98\n 000000010002a098 ap_rgetline_core (100473b40, 2000, ffffffff723fbcf0, 100473b10, 0, 100475070) + 70\n 000000010002ae24 ap_read_request (100308518, 64, 3, 0, 100473b40, ffffffff79701968) + 17c\n 00000001000488b8 ap_process_http_connection (100308518, 0, 80000000, 1002194a8, 100179, 10017e000) + 14\n 0000000100043b30 ap_process_connection (100308518, 1003083c0, 1002194a8, 0, 10017d2b0, 3) + d0\n 0000000100053470 worker_thread (10029a120, 100308348, 100308518, 10017d358, 10017a048, c0) + 2b8\n ffffffff7da17cd0 _lwp_start (0, 0, 0, 0, 0, 0)\n-----------------  lwp# 31 / thread# 31  --------------------\n ffffffff7d8a755c poll     (ffffffff6d7fbcf0, 0, 3e8)\n ffffffff7da1091c select (0, 0, 0, 0, ffffffff6d7fbe68, ffffffff7c62d2c8) + 6c\n ffffffff7c36b310 __1cPCSmWorkerThreadFSleep6MLl_v_ (10045b820, 1, 0, 0, 1, 0) + 30\n ffffffff7c33392c __1cPCSmAdminManagerRManageAgentThread6Fpv_1_ (10045b820, 0, 0, 0, 0, 100322418) + 54\n ffffffff7da17cd0 _lwp_start (0, 0, 0, 0, 0, 0)\n-----------------  lwp# 7 / thread# 7  --------------------\n ffffffff7eb2bd88 dummy_worker(), exit value = 0x0000000000000000\n        ** zombie (exited, not detached, not yet joined) **\n-----------------  lwp# 9 / thread# 9  --------------------\n ffffffff7eb2bd88 dummy_worker(), exit value = 0x0000000000000000\n        ** zombie (exited, not detached, not yet joined) **\n-----------------  lwp# 13 / thread# 13  --------------------\n ffffffff7eb2bd88 dummy_worker(), exit value = 0x0000000000000000\n        ** zombie (exited, not detached, not yet joined) **\n-----------------  lwp# 14 / thread# 14  --------------------\n ffffffff7eb2bd88 dummy_worker(), exit value = 0x0000000000000000\n        ** zombie (exited, not detached, not yet joined) **\n-----------------  lwp# 15 / thread# 15  --------------------\n ffffffff7eb2bd88 dummy_worker(), exit value = 0x0000000000000000\n        ** zombie (exited, not detached, not yet joined) **\n-----------------  lwp# 11 / thread# 11  --------------------\n ffffffff7eb2bd88 dummy_worker(), exit value = 0x0000000000000000\n        ** zombie (exited, not detached, not yet joined) **\n-----------------  lwp# 16 / thread# 16  --------------------\n ffffffff7eb2bd88 dummy_worker(), exit value = 0x0000000000000000\n        ** zombie (exited, not detached, not yet joined) **\n-----------------  lwp# 17 / thread# 17  --------------------\n ffffffff7eb2bd88 dummy_worker(), exit value = 0x0000000000000000\n        ** zombie (exited, not detached, not yet joined) **\n-----------------  lwp# 18 / thread# 18  --------------------\n ffffffff7eb2bd88 dummy_worker(), exit value = 0x0000000000000000\n        ** zombie (exited, not detached, not yet joined) **\n-----------------  lwp# 21 / thread# 21  --------------------\n ffffffff7eb2bd88 dummy_worker(), exit value = 0x0000000000000000\n        ** zombie (exited, not detached, not yet joined) **\n-----------------  lwp# 22 / thread# 22  --------------------\n ffffffff7eb2bd88 dummy_worker(), exit value = 0x0000000000000000\n        ** zombie (exited, not detached, not yet joined) **\n-----------------  lwp# 23 / thread# 23  --------------------\n ffffffff7eb2bd88 dummy_worker(), exit value = 0x0000000000000000\n        ** zombie (exited, not detached, not yet joined) **\n-----------------  lwp# 24 / thread# 24  --------------------\n ffffffff7eb2bd88 dummy_worker(), exit value = 0x0000000000000000\n        ** zombie (exited, not detached, not yet joined) **\n-----------------  lwp# 19 / thread# 19  --------------------\n ffffffff7eb2bd88 dummy_worker(), exit value = 0x0000000000000000\n        ** zombie (exited, not detached, not yet joined) **", "count": 0, "id": 162159, "time": "2012-09-13T14:19:38Z", "creator": "jmarcinko@ltionline.com", "creation_time": "2012-09-13T14:19:38Z", "is_private": false}, {"count": 1, "tags": [], "text": "This is a process trying to exit from e.g. MaxRequestsPerChild or MaxSpareThreads, but it still has threads wrapping up their work.\n\nBut, these threads in SSL are blocked on a lock and not just waiting for some I/O to finish, which is why they don't wrap up without taking any action.\n\nIn the meantime I'd suggest for relief maxRequestsPerChild = 0 and MaxSpareThreads=MaxClients do you don't end up with half-exited processes building up.", "attachment_id": null, "id": 162160, "creator": "covener@gmail.com", "time": "2012-09-13T14:36:09Z", "bug_id": 53870, "creation_time": "2012-09-13T14:36:09Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 53870, "attachment_id": null, "text": "As this is an issue encountered in load testing and presumably not a production environment, you might try to reproduce with the latest OpenSSL.\n\nBTW, what level of OpenSSL is this?", "id": 162161, "time": "2012-09-13T15:08:04Z", "creator": "trawick@apache.org", "creation_time": "2012-09-13T15:08:04Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 53870, "attachment_id": null, "text": "(In reply to comment #2)\n> As this is an issue encountered in load testing and presumably not a\n> production environment, you might try to reproduce with the latest OpenSSL.\n> \n> BTW, what level of OpenSSL is this?\n\nI would be happy to replace OpenSSL if there is a newer version currently we are using:\n\n/usr/local/ssl/bin] ./openssl version\nOpenSSL 1.0.1b 26 Apr 2012\n\nHere is the configure options for my last apache compile:\n\n\n\nCC=\"/opt/SUNWspro/bin/cc\"; export CC\nCFLAGS=\"-xarch=generic64 -xO5\"; export CFLAGS\nCPPFLAGS=\"-I/usr/local/ssl/includ/openssl\"; export CPPFLAGS\nLDFLAGS=\"-L/usr/local/ssl/lib -R/usr/local/ssl/lib\"; export LDFLAGS\n\"./configure\" \\\n\"--prefix=/app/asf/WS/2.2\" \\\n\"--with-included-apr\" \\\n\"--with-mpm=worker\" \\\n\"--with-ssl=/usr/local/ssl\" \\\n\"--enable-ssl=shared\" \\\n\"--disable-userdir\" \\\n\"--disable-asis\" \\\n\"--disable-autoindex\" \\\n\"--disable-mod_authn_file\" \\\n\"--disable-mod_authn_default\" \\\n\"--disable-mod_authz_host\" \\\n\"--disable-mod_authz_groupfile\" \\\n\"--disable-mod-authz_user\" \\\n\"--disable-mod-authz_default\" \\\n\"--disable-mod_auth_basic\" \\\n\"--enable-mods-shared=most\" \\\n\"CC=/opt/SUNWspro/bin/cc\" \\\n\"CFLAGS=-xarch=generic64 -xO5\" \\\n\"LDFLAGS=-L/usr/local/ssl/lib -R/usr/local/ssl/lib\" \\\n\"CPPFLAGS=-I/usr/local/ssl/includ/openssl\" \\\n\"$@\"\n\n\nThanks,\n\nJeff", "id": 162162, "time": "2012-09-13T15:32:49Z", "creator": "jmarcinko@ltionline.com", "creation_time": "2012-09-13T15:32:49Z", "is_private": false}, {"count": 4, "tags": [], "text": "Nothing between 1.0.1b and 1.0.1c looks interesting w.r.t. this issue.", "attachment_id": null, "id": 162164, "creator": "trawick@apache.org", "time": "2012-09-13T15:45:33Z", "bug_id": 53870, "creation_time": "2012-09-13T15:45:33Z", "is_private": false}, {"count": 5, "tags": [], "text": "Could it be this one:\n\nhttp://rt.openssl.org/Ticket/Display.html?id=2813\n\nPatch for OpenSSL 1.0.1 would be:\n\nhttp://cvs.openssl.org/chngview?cn=22570\n\nRegards,\n\nRainer", "attachment_id": null, "id": 162165, "creator": "rainer.jung@kippdata.de", "time": "2012-09-13T16:54:48Z", "bug_id": 53870, "creation_time": "2012-09-13T16:54:48Z", "is_private": false}, {"count": 6, "tags": [], "bug_id": 53870, "attachment_id": null, "id": 162167, "time": "2012-09-13T18:37:58Z", "creator": "jmarcinko@ltionline.com", "creation_time": "2012-09-13T18:37:58Z", "is_private": false, "text": "(In reply to comment #5)\n> Could it be this one:\n> \n> http://rt.openssl.org/Ticket/Display.html?id=2813\n> \n> Patch for OpenSSL 1.0.1 would be:\n> \n> http://cvs.openssl.org/chngview?cn=22570\n> \n> Regards,\n> \n> Rainer\n\nThank you for the recommendation.  I will patch openssl and recompile apache and test again.\n\n-Jeff"}, {"count": 7, "tags": [], "bug_id": 53870, "attachment_id": null, "id": 163569, "time": "2012-11-21T09:34:55Z", "creator": "micha@lenk.info", "creation_time": "2012-11-21T09:34:55Z", "is_private": false, "text": "I just observed the same (or at least a very similar) behavior on a Linux\ninstallation. I tried to fix it by patching OpenSSL, but this didn't change\nanything. What should I check next?"}, {"count": 8, "tags": [], "creator": "DRuggeri@primary.net", "is_private": false, "text": "For those seeing the issue: Are you using an engine (SSLCryptoDevice)? I know some register their own callbacks for locks - not sure if that's coming into play.\n\n\n\n\n\nI see similar behavior as well on Solaris 10 w/ worker in openssl-0.9.8u, but far fewer zombie processes. This is on a particularly busy production install rather than under a load test scenario. Just like the original bug, I see a few threads interacting with a proxied resource with most threads sitting in CRYPTO_add_lock. There is at least one zombie thread in 5 of the 6 running child processes. The child process without any zombies are still sitting in CRYPTO_add_lock.\n\n\nI can attach pstack output as well, but the short version is:\n*Very few threads doing work\n*Many threads waiting in CRYPTO_add_lock\n*Did not seem to happen in 2.2.13 w/ openssl-0.9.8l with an otherwise identical config\n\n\nHappy to provide more info if needed", "id": 163706, "time": "2012-11-28T21:30:16Z", "bug_id": 53870, "creation_time": "2012-11-28T21:30:16Z", "attachment_id": null}, {"count": 9, "tags": [], "bug_id": 53870, "attachment_id": null, "id": 163796, "time": "2012-12-03T14:01:35Z", "creator": "micha@lenk.info", "creation_time": "2012-12-03T14:01:35Z", "is_private": false, "text": "Please ignore my comment 7, the mentioned OpenSSL patch seems to fix the issue,\nI just did not apply it correctly. So thanks for the hint."}]