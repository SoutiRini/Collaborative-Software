[{"count": 0, "tags": [], "creator": "slobo@matavnet.hu", "attachment_id": null, "text": "the URL object returned by the ServletContext's getResource() method\ndoesn't figure out the content-type of the wrapped resource\n\nstrictly speaking this is maybe not a bug\nbut shurely is a low-quality implementation\n\nthe javadoc for ServletContext's getResourceAsStream() method says:\n\"Meta-information such as content length and CONTENT TYPE that is available via \ngetResource method is lost when using this method.\"\nso it implicitly states, that the content type should be available from the \ngetResource() method", "id": 24223, "time": "2002-10-09T19:15:07Z", "bug_id": 13467, "creation_time": "2002-10-09T19:15:07Z", "is_private": false}, {"count": 1, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "id": 51214, "time": "2004-01-26T23:47:41Z", "bug_id": 13467, "creation_time": "2004-01-26T23:47:41Z", "is_private": false, "text": "Having read the spec I think that this is actually a problem with the javadoc \nfor getResourceAsStream(). The spec clearly states that (section SRV.3.5) for \ngetResource() and getResourceAsStream()\n<spec-quote>\nThese methods are not used to obtain dynamic content. For example, in a \ncontainer supporting the JavaServer PagesTM specification, a method call of \nthe form getResource(\"/index.jsp\") would return the JSP source code and not the\nprocessed output. See Chapter SRV.8, \u201cDispatching Requests\u201d for more \ninformation about accessing dynamic content.\n</spec-quote>\nSince these methods return the source, not the dynamic content, the meta-data \navailable will be that available for the source. In this case the source file \nlength is available but the content type is not."}]