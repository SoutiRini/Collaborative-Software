[{"count": 0, "tags": [], "text": "TLS-SRP (RFC 5054)[1] is an implementation of the Secure Remote Password (SRP)[2] protocol as a key exchange method for TLS. It uses a shared secret derived from a user's password to supplement or replace third-party certificates in setting up a TLS connection.\n\nThis patch adds TLS-SRP support to mod_ssl, adds two new directives (SSLSRPVerifierFile and SSLSRPUnknownUserSeed), adds two new SSL env vars (SSL_SRP_USER and SSL_SRP_USERINFO), and includes basic documentation.\n\nThe TLS-SRP-specific code uses preprocessor guards on OPENSSL_NO_SRP and is enabled only if OpenSSL >= 1.0.1, which is the first version of OpenSSL that will include SRP support[3]. \n\nTo use this patch:\n(1) install OpenSSL 1.0.1;\n(2) create an OpenSSL SRP verifier (passwd) file with `openssl srp -srpvfile passwd.srpv -add username`;\n(3) specify this file in the server config with: SSLSRPVerifierFile /path/to/passwd.srpv\n(4) optionally, for easier testing, force the use of SRP: SSLCipherSuite \"!DSS:!aRSA:SRP\"\n\nTo test the TLS-SRP functionality, use gnutls-cli or a version of cURL with TLS-SRP support:\n\ngnutls-cli --srpusername user --srppasswd secret host\ncurl --tlsuser user --tlspassword secret -k https://host\n\nTLS-SRP support for Apache is already provided by mod_gnutls[4]. Now that PAKE patents have expired and the security of CAs is increasingly being doubted, TLS-SRP is gaining wider acceptance. GnuTLS, mod_gnutls, and TLSLite have supported it for years; cURL since February; OpenSSL will support it in the next release; and I have also assembled patches[5] for Chrome, Firefox, and NSS.\n\nThis patch was originally created by Christophe Renou and Peter Sylvester of EdelWeb. I updated it to work with Apache 2's mod_ssl.\n\n\n[1] http://tools.ietf.org/html/rfc5054\n[2] http://srp.stanford.edu/\n[3] http://cvs.openssl.org/chngview?cn=20484\n[4] http://trustedhttp.org/wiki/TLS-SRP_in_Apache_mod_gnutls\n[5] http://trustedhttp.org/", "is_private": false, "id": 145830, "creator": "sqs@cs.stanford.edu", "time": "2011-04-17T17:29:17Z", "bug_id": 51075, "creation_time": "2011-04-17T17:29:17Z", "attachment_id": null}, {"count": 1, "attachment_id": 26892, "bug_id": 51075, "text": "Created attachment 26892\nadd TLS-SRP (RFC 5054) support to mod_ssl", "id": 145831, "time": "2011-04-17T17:34:00Z", "creator": "sqs@cs.stanford.edu", "creation_time": "2011-04-17T17:34:00Z", "tags": [], "is_private": false}, {"count": 2, "attachment_id": null, "bug_id": 51075, "is_private": false, "id": 159644, "time": "2012-06-02T21:51:36Z", "creator": "sf@sfritsch.de", "creation_time": "2012-06-02T21:51:36Z", "tags": [], "text": "(In reply to comment #0)\n> This patch was originally created by Christophe Renou and Peter Sylvester of\n> EdelWeb. I updated it to work with Apache 2's mod_ssl.\n\nYou do have permission to submit the patch under the Apache License, don't you?\n\nSome more questions: Is there any documentation for the openssl interface available somewhere? Do you know why SRP_VBASE_init() and SRP_VBASE_new() take char* as argument and not const char*?"}, {"count": 3, "tags": [], "text": "Committed as r1347980 to trunk. Thanks for the patch.", "is_private": false, "id": 159812, "creator": "sf@sfritsch.de", "time": "2012-06-08T09:39:55Z", "bug_id": 51075, "creation_time": "2012-06-08T09:39:55Z", "attachment_id": null}, {"count": 4, "tags": [], "creator": "peter.sylvester@edelweb.fr", "is_private": false, "text": "(In reply to comment #2)\n> (In reply to comment #0)\n> > This patch was originally created by Christophe Renou and Peter Sylvester of\n> > EdelWeb. I updated it to work with Apache 2's mod_ssl.\n\ngood. \n\n> \n> You do have permission to submit the patch under the Apache License, don't\n> you?\n\nI hereby confirm that this is the case. \n \n> \n> Some more questions: Is there any documentation for the openssl interface\n> available somewhere? Do you know why SRP_VBASE_init() and SRP_VBASE_new()\n> take char* as argument and not const char*?\n\nThe original version was made before the \"const\"ification attempts in openssl.\n\nIMO, the srp_vbase stuff should not be used. Instead a dynamic approach, reading\nfrom an LDAP or database can be used to retrieve a verifier. this can be done\nwithout blocking.", "id": 161994, "time": "2012-09-06T15:46:09Z", "bug_id": 51075, "creation_time": "2012-09-06T15:46:09Z", "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 51075, "is_private": false, "count": 5, "id": 165614, "time": "2013-03-03T16:52:50Z", "creator": "sf@sfritsch.de", "creation_time": "2013-03-03T16:52:50Z", "text": "fixed in 2.4.4"}]