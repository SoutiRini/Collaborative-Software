[{"count": 0, "tags": [], "creator": "joachimz@sina.com", "is_private": false, "text": "after update to tomcat5.0.14Beta, old page occurs some encoding issues, it \nseemed that request.setCharacterEncoding(String enc) doesn't work! Since \nrequest.getCharacterEncoding() is return the correct encoding that I've set\n(GBK: a chinese encoding), but the String get by request.getParameter\n(\"field_name\") is still iso-8859-1! (ONLY after do like \n\nString newString = new String(request.getParameter(\"field_name\")).getBytes(\"iso-\n8859-1\"), \"GBK\");\n\ncould get corrent String).\n\nFollowing is my test JSP source:\n\n\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\">\n<HTML>\n<%@ page\n\tlanguage = \"java\"\n\tsession = \"false\"\n\tcontentType = \"text/html; charset=GBK\" \n%><%request.setCharacterEncoding(\"GBK\");%>\n<HEAD>\n<TITLE>Test page</TITLE>\n<META HTTP-EQUIV=\"Content-Type\" content=\"text/html; charset=GBK\">\n\n<META NAME=\"Author\" CONTENT=\"Joachim\">\n<META NAME=\"Keywords\" CONTENT=\"\">\n</HEAD>\n\n<BODY BGCOLOR=\"#FFFFFF\">\n<FORM METHOD=POST ACTION=\"\">\n<TEXTAREA NAME=\"text\" ROWS=\"6\" COLS=\"60\" wrap=\"off\">\n\t<%=new String(cl(request.getParameter(\"text\")).getBytes(\"iso-8859-\n1\"), \"GBK\")%>\n</TEXTAREA>\n\n<BR/><INPUT TYPE=\"submit\" value=\"Submit\">\n</FORM>\n<%=request.getCharacterEncoding()%>\n</BODY>\n</HTML>\n<%!\n\tString cl(String v)\n\t{\n\t\treturn (null == v) ? \"\" : v;\n\t}\n\n%>", "id": 46653, "time": "2003-11-03T10:06:17Z", "bug_id": 24345, "creation_time": "2003-11-03T10:06:17Z", "attachment_id": null}, {"count": 1, "tags": [], "creator": "remm@apache.org", "attachment_id": null, "text": "URI parameters encoding isn't handled with that. See the URI encoding parameter.\nHowever, URI encoding can't be ade to work reliably in all cases, due to the\nabsence of a standard. If you want i18n, use POST. Please do not reopen the report.", "id": 46664, "time": "2003-11-03T11:34:47Z", "bug_id": 24345, "creation_time": "2003-11-03T11:34:47Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 24345, "is_private": false, "text": "Remy,\n\nthe example submited with the bug report should produce the result expected by\nthe reporter without having to use the getBytes() workaround (and it does use\nPOST). \n\nI cannot verify this as I don't have a tomcat 5 installation, but marking this\nas invalid for the reasons mentioned is just wrong.", "id": 46667, "time": "2003-11-03T13:21:18Z", "creator": "stefos@msc.gr", "creation_time": "2003-11-03T13:21:18Z", "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 24345, "is_private": false, "text": "I did look at it (it does indeed POST), and added traces into the\no.a.tomcat.util.http.Parameters class, and (unsurprisingly) the correct encoding\nname is being used for character decoding (the input being a byte array). So the\nexample should work fine.", "id": 46673, "time": "2003-11-03T14:50:43Z", "creator": "remm@apache.org", "creation_time": "2003-11-03T14:50:43Z", "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 24345, "attachment_id": null, "text": "I find the real reason: It's my fault, I use a filter(atlassian \nProfilingFilter) which is called before Servlet service method and invoke \nrequest.getParameter() before!\nThanks all, I will carefully test and verifiy before report!", "id": 46708, "time": "2003-11-04T00:50:58Z", "creator": "joachimz@sina.com", "creation_time": "2003-11-04T00:50:58Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 24345, "attachment_id": null, "text": "Sorry for bothering you again, but I'm not completely with you... Though there \nis no standard for the URI encodings, there is a servlet specification (see \n2.4pfd3, chapter SRV.4.9).\n\nAlso, there are many cases when developer is not the one who will impose POST \nrequests to his application - he is forced to get parameters from URI. So, this \nmethod SHOULD definitely work as before...\n\nI have prepared a 'clean' test file 'bug.jsp' which can be dropped either in \nTomcat 5.0.9 or 5.0.14 to see the difference between these two points of \ndevelopmnent (this file contains some russian text in Cp1251 as a sample). \n5.0.9 works fine whereas 5.0.14 does not.\n\n<%@ page \n  pageEncoding=\"Cp1251\" \n  language=\"java\"\n  contentType=\"text/html; charset=utf-8\"\n%>    \n<html>\n<head>\n  <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n</head>\n<body>\n\n<%\n  request.setCharacterEncoding(\"utf-8\"); \n  String test = request.getParameter(\"test\");\n  if (test != null) {\n    out.write(\"the length of the test value after decoding: \" + test.length());\n  }\n  out.write(\"<br>\");\n  out.write(\"the value of the test parameter: \" + test);\n  out.write(\"<br>\");\n%>\n\n<form action=\"bug.jsp\" method=\"get\">\n  <input type=\"text\" name=\"test\" value=\"\u0442\u0435\u0441\u0442\">\n  <input type=\"submit\" value=\"test this russian text (4 characters)!\">\n</form>\n\n</body>\n</html>\n\nWhat do you think?", "id": 47395, "time": "2003-11-15T09:52:53Z", "creator": "alex@lib.msu.ru", "creation_time": "2003-11-15T09:52:53Z", "is_private": false}, {"count": 6, "attachment_id": null, "bug_id": 24345, "text": "The previous behavior was breaking the HTTP spec. Of course, since you were\nusing UTF-8, you were basically in the only situation that could work.\nYou can use the URIEncoding attribute on the Connector to specify the URI\nencoding (so set it to UTF-8).", "id": 47397, "time": "2003-11-15T10:14:33Z", "creator": "remm@apache.org", "creation_time": "2003-11-15T10:14:33Z", "tags": [], "is_private": false}]