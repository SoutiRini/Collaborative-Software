[{"count": 0, "tags": [], "bug_id": 44384, "attachment_id": null, "id": 113584, "time": "2008-02-09T07:47:55Z", "creator": "dev-apache.org@humph.com", "creation_time": "2008-02-09T07:47:55Z", "is_private": false, "text": "2.2.8 on Leopard (Mac OS X 10.5.1) can be built and installed, but if mod_ssl is included, it fails at \nruntime.\nThe failure is owed to missing symbols (_ssl_cmd_SSLCACertificateFile for example).\n\nI traced this to the option -export-symbols-regex ssl_module set by configure.\n\nIf this is changed to -export-symbols-regex \".*[Ss][Ss][Ll].*\" all the required symbols are exported.\nThe problem does not manifest itself on 10.4.x with the same export-symbols-regex ssl_module."}, {"count": 1, "tags": [], "bug_id": 44384, "attachment_id": null, "id": 113607, "time": "2008-02-11T03:22:04Z", "creator": "jorton@redhat.com", "creation_time": "2008-02-11T03:22:04Z", "is_private": false, "text": "How does it fail, and what version of libtool is being used?"}, {"count": 2, "tags": [], "text": "\n(In reply to comment #1)\n> How does it fail, and what version of libtool is being used?\n\nin reverse order:\n\nI use the builtin libtool, as you can see in the compilation line for mod_ssl\n\n/usr/local/src/apache.org/httpd-2.2.8/srclib/apr/libtool --silent --mode=link gcc   -arch x86_64    -arch x86_64    -o \nmod_ssl.la -rpath /usr/local/apache2/modules -module -avoid-version  mod_ssl.lo ssl_engine_config.lo ssl_engine_dh.lo \nssl_engine_init.lo ssl_engine_io.lo ssl_engine_kernel.lo ssl_engine_log.lo ssl_engine_mutex.lo ssl_engine_pphrase.lo \nssl_engine_rand.lo ssl_engine_vars.lo ssl_expr.lo ssl_expr_eval.lo ssl_expr_parse.lo ssl_expr_scan.lo ssl_scache.lo \nssl_scache_dbm.lo ssl_scache_shmcb.lo ssl_scache_dc.lo ssl_util.lo ssl_util_ssl.lo  -lssl -lcrypto -export-symbols-regex ssl_module\n\nand at installation time:\n\nMaking install in ssl\n/usr/local/src/apache.org/httpd-2.2.8/srclib/apr/libtool --silent --mode=install cp mod_ssl.la /usr/local/apache2/modules/\nranlib: file: /usr/local/apache2/modules/mod_ssl.a(ssl_scache_dc.o) has no symbols\n\nand this is the failure:\n\n /usr/local/apache2/bin/apachectl configtest\nhttpd: Syntax error on line 85 of /usr/local/apache2/conf/httpd.conf: Cannot load /usr/local/apache2/modules/mod_ssl.so into \nserver: dlopen(/usr/local/apache2/modules/mod_ssl.so, 10): Symbol not found: _ssl_cmd_SSLCACertificateFile\\n  Referenced from: \n/usr/local/apache2/modules/mod_ssl.so\\n  Expected in: flat namespace\\n\n\nThis is apparently a common problem with Leopard, and some suggest dropping the -export-symbols-regex option altogether, \nwhile I simply solved it by making it export the symbols that are not found.\n\nIn other words I (think I) simply make the symbols globally accessible (although it is mod_ssl itself that cannot find them..) so, for \nthe non functioning mod_ssl:\n\nnm /usr/local/apache2/modules/mod_ssl.so |grep _ssl_cmd_SSLCACertificateFile\n00000000000030b0 t _ssl_cmd_SSLCACertificateFile\n\nwhile for the working one:\n\nnm /usr/local/apache2/modules/mod_ssl.so |grep _ssl_cmd_SSLCACertificateFile\n00000000000030b0 T _ssl_cmd_SSLCACertificateFile\n\n", "attachment_id": null, "id": 113617, "creator": "dev-apache.org@humph.com", "time": "2008-02-11T04:49:24Z", "bug_id": 44384, "creation_time": "2008-02-11T04:49:24Z", "is_private": false}, {"count": 3, "tags": [], "text": "It shouldn't be necessary; it sounds like a libtool bug, I've reported it upstream.", "is_private": false, "bug_id": 44384, "id": 113620, "time": "2008-02-11T05:01:21Z", "creator": "jorton@redhat.com", "creation_time": "2008-02-11T05:01:21Z", "attachment_id": null}, {"count": 4, "tags": [], "text": "Please run the \"libtool --silent --mode=link\" command without --silent\nand post all output, thanks.", "attachment_id": null, "id": 113621, "creator": "Ralf.Wildenhues@gmx.de", "time": "2008-02-11T05:04:06Z", "bug_id": 44384, "creation_time": "2008-02-11T05:04:06Z", "is_private": false}, {"count": 5, "tags": [], "text": "(In reply to comment #4)\n> Please run the \"libtool --silent --mode=link\" command without --silent\n\n$ /usr/local/src/apache.org/httpd-2.2.8/srclib/apr/libtool  --mode=link gcc   -arch x86_64    -arch x86_64    -o mod_ssl.la -rpath /usr/local/apache2/modules -\nmodule -avoid-version  mod_ssl.lo ssl_engine_config.lo ssl_engine_dh.lo ssl_engine_init.lo ssl_engine_io.lo ssl_engine_kernel.lo ssl_engine_log.lo ssl_engine_mutex.lo \nssl_engine_pphrase.lo ssl_engine_rand.lo ssl_engine_vars.lo ssl_expr.lo ssl_expr_eval.lo ssl_expr_parse.lo ssl_expr_scan.lo ssl_scache.lo ssl_scache_dbm.lo \nssl_scache_shmcb.lo ssl_scache_dc.lo ssl_util.lo ssl_util_ssl.lo  -lssl -lcrypto -export-symbols-regex ssl_module\nrm -fr  .libs/mod_ssl.a .libs/mod_ssl.exp .libs/mod_ssl.la .libs/mod_ssl.lai .libs/mod_ssl.so\ngenerating symbol list for `mod_ssl.la'\n/usr/bin/nm -p  .libs/mod_ssl.o .libs/ssl_engine_config.o .libs/ssl_engine_dh.o .libs/ssl_engine_init.o .libs/ssl_engine_io.o .libs/ssl_engine_kernel.o .libs/ssl_engine_log.o \n.libs/ssl_engine_mutex.o .libs/ssl_engine_pphrase.o .libs/ssl_engine_rand.o .libs/ssl_engine_vars.o .libs/ssl_expr.o .libs/ssl_expr_eval.o .libs/ssl_expr_parse.o \n.libs/ssl_expr_scan.o .libs/ssl_scache.o .libs/ssl_scache_dbm.o .libs/ssl_scache_shmcb.o .libs/ssl_scache_dc.o .libs/ssl_util.o .libs/ssl_util_ssl.o  | sed -n -e 's/^.*[ \t\n]\\([BCDEGRST][BCDEGRST]*\\)[ \t][ \t]*_\\([_A-Za-z][_A-Za-z0-9]*\\)$/\\1 _\\2 \\2/p' | /usr/bin/sed 's/.* //' | sort | uniq > .libs/mod_ssl.exp\n/usr/bin/nm: no name list\n/usr/bin/grep -E -e \"ssl_module\" \".libs/mod_ssl.exp\" > \".libs/mod_ssl.expT\"\nmv -f \".libs/mod_ssl.expT\" \".libs/mod_ssl.exp\"\nsed -e \"s,#.*,,\" -e \"s,^[ ]*,,\" -e \"s,^\\(..*\\),_&,\" < .libs/mod_ssl.exp > .libs/mod_ssl-symbols.expsym\ngcc ${wl}-flat_namespace ${wl}-undefined ${wl}suppress -o .libs/mod_ssl.so -bundle  .libs/mod_ssl.o .libs/ssl_engine_config.o .libs/ssl_engine_dh.o \n.libs/ssl_engine_init.o .libs/ssl_engine_io.o .libs/ssl_engine_kernel.o .libs/ssl_engine_log.o .libs/ssl_engine_mutex.o .libs/ssl_engine_pphrase.o .libs/ssl_engine_rand.o \n.libs/ssl_engine_vars.o .libs/ssl_expr.o .libs/ssl_expr_eval.o .libs/ssl_expr_parse.o .libs/ssl_expr_scan.o .libs/ssl_scache.o .libs/ssl_scache_dbm.o \n.libs/ssl_scache_shmcb.o .libs/ssl_scache_dc.o .libs/ssl_util.o .libs/ssl_util_ssl.o  -lssl -lcrypto -arch x86_64 -arch x86_64\nnmedit -s .libs/mod_ssl-symbols.expsym .libs/mod_ssl.so\nar cru .libs/mod_ssl.a  mod_ssl.o ssl_engine_config.o ssl_engine_dh.o ssl_engine_init.o ssl_engine_io.o ssl_engine_kernel.o ssl_engine_log.o ssl_engine_mutex.o \nssl_engine_pphrase.o ssl_engine_rand.o ssl_engine_vars.o ssl_expr.o ssl_expr_eval.o ssl_expr_parse.o ssl_expr_scan.o ssl_scache.o ssl_scache_dbm.o ssl_scache_shmcb.o \nssl_scache_dc.o ssl_util.o ssl_util_ssl.o\nranlib: file: .libs/mod_ssl.a(ssl_scache_dc.o) has no symbols\nranlib .libs/mod_ssl.a\nranlib: file: .libs/mod_ssl.a(ssl_scache_dc.o) has no symbols\ncreating mod_ssl.la\n(cd .libs && rm -f mod_ssl.la && ln -s ../mod_ssl.la mod_ssl.la)\n\n\n\n", "attachment_id": null, "id": 113627, "creator": "dev-apache.org@humph.com", "time": "2008-02-11T06:44:07Z", "bug_id": 44384, "creation_time": "2008-02-11T06:44:07Z", "is_private": false}, {"count": 6, "tags": [], "text": "In response to Peter O'Gorman who posted to the list and is going to report here with the suggestion to \ntry libtool 1.5.26:\n\nit appears to work:\n\n/usr/local/bin/libtool --version\nltmain.sh (GNU libtool) 1.5.26 (1.1220.2.492 2008/01/30 06:40:56)\n\nI only did the step for mod_ssl\n\n$ cd modules/mod_ssl\n\n$ /usr/local/bin/libtool  --mode=link gcc   -arch x86_64    -arch x86_64    -o mod_ssl.la -rpath \n/usr/local/apache2/modules -module -avoid-version  mod_ssl.lo ssl_engine_config.lo \nssl_engine_dh.lo ssl_engine_init.lo ssl_engine_io.lo ssl_engine_kernel.lo ssl_engine_log.lo \nssl_engine_mutex.lo ssl_engine_pphrase.lo ssl_engine_rand.lo ssl_engine_vars.lo ssl_expr.lo \nssl_expr_eval.lo ssl_expr_parse.lo ssl_expr_scan.lo ssl_scache.lo ssl_scache_dbm.lo \nssl_scache_shmcb.lo ssl_scache_dc.lo ssl_util.lo ssl_util_ssl.lo  -lssl -lcrypto -export-symbols-regex \nssl_module\nrm -fr  .libs/mod_ssl.a .libs/mod_ssl.exp .libs/mod_ssl.la .libs/mod_ssl.lai .libs/mod_ssl.so\ngenerating symbol list for `mod_ssl.la'\n/usr/bin/nm -p  .libs/mod_ssl.o .libs/ssl_engine_config.o .libs/ssl_engine_dh.o .libs/ssl_engine_init.o \n.libs/ssl_engine_io.o .libs/ssl_engine_kernel.o .libs/ssl_engine_log.o .libs/ssl_engine_mutex.o \n.libs/ssl_engine_pphrase.o .libs/ssl_engine_rand.o .libs/ssl_engine_vars.o .libs/ssl_expr.o \n.libs/ssl_expr_eval.o .libs/ssl_expr_parse.o .libs/ssl_expr_scan.o .libs/ssl_scache.o \n.libs/ssl_scache_dbm.o .libs/ssl_scache_shmcb.o .libs/ssl_scache_dc.o .libs/ssl_util.o .libs/ssl_util_ssl.o  \n| sed -n -e 's/^.*[ \t]\\([BCDEGRST][BCDEGRST]*\\)[ \t][ \t]*_\\([_A-Za-z][_A-Za-z0-9]*\\)$/\\1 _\\2 \n\\2/p' | /usr/bin/sed 's/.* //' | sort | uniq > .libs/mod_ssl.exp\n/usr/bin/nm: no name list\n/usr/bin/grep -E -e \"ssl_module\" \".libs/mod_ssl.exp\" > \".libs/mod_ssl.expT\"\nmv -f \".libs/mod_ssl.expT\" \".libs/mod_ssl.exp\"\nsed -e 's,^,_,' < .libs/mod_ssl.exp > .libs/mod_ssl-symbols.expsym\ngcc ${wl}-flat_namespace ${wl}-undefined ${wl}suppress -o .libs/mod_ssl.so -bundle  .libs/mod_ssl.o \n.libs/ssl_engine_config.o .libs/ssl_engine_dh.o .libs/ssl_engine_init.o .libs/ssl_engine_io.o \n.libs/ssl_engine_kernel.o .libs/ssl_engine_log.o .libs/ssl_engine_mutex.o .libs/ssl_engine_pphrase.o \n.libs/ssl_engine_rand.o .libs/ssl_engine_vars.o .libs/ssl_expr.o .libs/ssl_expr_eval.o \n.libs/ssl_expr_parse.o .libs/ssl_expr_scan.o .libs/ssl_scache.o .libs/ssl_scache_dbm.o \n.libs/ssl_scache_shmcb.o .libs/ssl_scache_dc.o .libs/ssl_util.o .libs/ssl_util_ssl.o  -lssl -lcrypto  -arch \nx86_64 -arch x86_64 -Wl,-exported_symbols_list,.libs/mod_ssl-symbols.expsym\ndsymutil .libs/mod_ssl.so || :\nwarning: no debug map in executable (-arch x86_64)\nar cru .libs/mod_ssl.a  mod_ssl.o ssl_engine_config.o ssl_engine_dh.o ssl_engine_init.o ssl_engine_io.o \nssl_engine_kernel.o ssl_engine_log.o ssl_engine_mutex.o ssl_engine_pphrase.o ssl_engine_rand.o \nssl_engine_vars.o ssl_expr.o ssl_expr_eval.o ssl_expr_parse.o ssl_expr_scan.o ssl_scache.o \nssl_scache_dbm.o ssl_scache_shmcb.o ssl_scache_dc.o ssl_util.o ssl_util_ssl.o\nranlib: file: .libs/mod_ssl.a(ssl_scache_dc.o) has no symbols\nranlib .libs/mod_ssl.a\nranlib: file: .libs/mod_ssl.a(ssl_scache_dc.o) has no symbols\ncreating mod_ssl.la\n(cd .libs && rm -f mod_ssl.la && ln -s ../mod_ssl.la mod_ssl.la)\n\n$ cd ../..\n$ sudo make install\n\n$ /usr/local/apache2/bin/apachectl configtest\nSyntax OK\n\nand the symbols are not all exported:\n\n$ nm /usr/local/apache2/modules/mod_ssl.so |grep _ssl_cmd_SSLCACertificateFile00000000000036f0 \nt _ssl_cmd_SSLCACertificateFile\n", "attachment_id": null, "bug_id": 44384, "id": 113633, "time": "2008-02-11T09:39:48Z", "creator": "dev-apache.org@humph.com", "creation_time": "2008-02-11T09:39:48Z", "is_private": false}, {"count": 7, "tags": [], "text": "(In reply to comment #6)\n> In response to Peter O'Gorman who posted to the list and is going to report\nhere with the suggestion to \n> try libtool 1.5.26:\n\nI was not sure that it would work - glad that it did.\n\nThis was my mail to the list:\nI have had other reports of this, and changed libtool in 1.5.26 and HEAD\nto use ld's  -exported_symbols_list flag if it is available, instead of\na separate invocation of nmedit. In one case this fixed the problem.\n\nI have not had time to reproduce on my own system to gather enough\ninformation to file a bug with Apple - a trivial test case I tried a\nmonth or two ago worked fine with nmedit being used to limit the\nexported symbols.\n\nI will try to find the time to investigate, in the meantime, either\nremove the exported symbol limiting on darwin (ugh.) or try with latest\nlibtool-1.5.26.", "attachment_id": null, "id": 113638, "creator": "peter@pogma.com", "time": "2008-02-11T10:53:39Z", "bug_id": 44384, "creation_time": "2008-02-11T10:53:39Z", "is_private": false}, {"count": 8, "tags": [], "text": "Final test with:\n\nmake clean\n\n[...] ./configure [...]\n\nln -sf srclib/apr/libtool /usr/local/bin/libtool\n(libtool 1.5.26)\n\nmake\nsudo make install\n\nand it works. This was tested with CFLAGS=\"-arch x86_64\" LDFLAGS=\"-arch x86_64\"  to create  64bit \nbinaries.\n\n", "attachment_id": null, "id": 113669, "creator": "dev-apache.org@humph.com", "time": "2008-02-12T14:03:44Z", "bug_id": 44384, "creation_time": "2008-02-12T14:03:44Z", "is_private": false}, {"count": 9, "tags": [], "bug_id": 44384, "is_private": false, "text": "*** Bug 45514 has been marked as a duplicate of this bug. ***", "id": 119505, "time": "2008-08-06T07:59:58Z", "creator": "jorton@redhat.com", "creation_time": "2008-08-06T07:59:58Z", "attachment_id": null}, {"count": 10, "tags": [], "bug_id": 44384, "attachment_id": null, "id": 120909, "time": "2008-09-24T01:32:06Z", "creator": "jorton@redhat.com", "creation_time": "2008-09-24T01:32:06Z", "is_private": false, "text": "*** Bug 45758 has been marked as a duplicate of this bug. ***"}]