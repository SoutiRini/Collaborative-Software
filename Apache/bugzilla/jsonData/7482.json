[{"count": 0, "attachment_id": null, "creator": "stephan@wanderinghorse.net", "is_private": false, "id": 12337, "time": "2002-03-26T12:28:32Z", "bug_id": 7482, "creation_time": "2002-03-26T12:28:32Z", "tags": [], "text": "It appears that PatternSet.setIncludes() does not actualy set the pattern, \nbut appends it to the list of patterns. This means the classes using Zip\nand Jar, for example, cannot re-use their Jar or Zip objects if they plan on\ndoing something in a loop like this:\n// start loop:\njar.setIncludes(...);\njar.setExcludes(...);\njar.setJarfile( new java.io.File(\"somefile.jar\" ) );\njar.execute();\n// end loop\n\nThis makes extending Jar and Zip very difficult, even using delegation, since\nall attributes appropriate to the object have to be re-set on a new copy of \nthe Jar/Zip object on each run through the loop.\n:/\nThis problem came up when i added multiple-pattern support to the Jar class\nfor handling multiple jars with one task."}, {"count": 1, "tags": [], "text": "Now do you understand why I feel uncomfortable re-using \"tasks\" internally?  :)\n\nI'm marking this as WONTFIX as its by design.  Its for the case where you have \na nested <include> and use the 'includes' attribute - so it *must* be this way.\n\nRefactor!\n\nBut more importantly, perhaps discuss your needs on ant-user or ant-dev on what \nyou're doing that can't already be done.", "attachment_id": null, "id": 12339, "creator": "jakarta@ehatchersolutions.com", "time": "2002-03-26T13:39:10Z", "bug_id": 7482, "creation_time": "2002-03-26T13:39:10Z", "is_private": false}]