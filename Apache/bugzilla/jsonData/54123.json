[{"count": 0, "tags": [], "creator": "bluewolf.chung@gmail.com", "attachment_id": 29575, "id": 163304, "time": "2012-11-09T10:30:48Z", "bug_id": 54123, "creation_time": "2012-11-09T10:30:48Z", "is_private": false, "text": "Created attachment 29575\ntest war file within java source\n\nServlet 3.0 Spec. says that\n\n\n2.3.3.3 Asynchronous processing\n\n...\n\nIn the event that an asynchronous operation times out, the container must run \nthrough the following steps: \n\u25a0 Invoke the AsyncListener.onTimeout method on all the AsyncListener \ninstances registered with the ServletRequest on which the asynchronous \noperation was initiated. \n\u25a0 If none of the listeners called AsyncContext.complete() or any of the \nAsyncContext.dispatch methods, perform an error dispatch with a status \ncode equal to HttpServletResponse.SC_INTERNAL_SERVER_ERROR. \n\u25a0 If no matching error page was found, or the error page did not call \nAsyncContext.complete() or any of the AsyncContext.dispatch \nmethods, the container MUST call AsyncContext.complete().\n\n(servlet-3_0-mrel-spec.pdf / pdf page 40, Spec page 18)\n\n\nIn other words, if there are no AsyncListeners which calls AsyncContext.complete() or any of the \nAsyncContext.dispatch, the container must perform an error dispatch with 500 error code.\n\nBut tomcat 7 does not send 500 error response. It sends 200 OK.\n\nIn org.apache.catalina.core.AsyncContextImpl.timeout(), \n\n                if (listenerInvoked) {\n                    request.getCoyoteRequest().action(\n                            ActionCode.ASYNC_IS_TIMINGOUT, result);\n                    return !result.get();\n                } else {\n                    // No listeners, container calls complete\n                    complete();\n                }\n\nit just calls complete(). So I think it must be spec violation.\n\n\nI've attached the test war file within a test source.\nTest URL is http://localhost:8080/asyncTimeoutTest/AsyncTimeoutTestServlet ."}, {"count": 1, "tags": [], "bug_id": 54123, "attachment_id": null, "id": 163359, "time": "2012-11-11T23:36:37Z", "creator": "markt@apache.org", "creation_time": "2012-11-11T23:36:37Z", "is_private": false, "text": "Fixed in trunk and 7.0.x and will be included in 7.0.33 onwards.\n\n\"error dispatch\" is not defined anywhere I could find in the servlet spec. I implemented based on what I could deduce from the spec text quoted in this issue."}, {"count": 2, "tags": [], "bug_id": 54123, "attachment_id": null, "id": 163364, "time": "2012-11-12T01:26:01Z", "creator": "bluewolf.chung@gmail.com", "creation_time": "2012-11-12T01:26:01Z", "is_private": false, "text": "Yes, I haven't seen the def. of 'error dispatch', too. In our product, I just used response.sendError(500) that was internally using forward with DispatcherType.ERROR."}]