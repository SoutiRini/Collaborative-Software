[{"attachment_id": null, "tags": [], "bug_id": 4223, "text": "When reading from InputStream got from HttpServletRequest.getInputStream()\nwith read(byte[]) it newer returns -1;\n\nFollowing code causes infinite loop via ajp13 connector but works fine with\nHttp1.1 connector:\n\n\tInputStream in = req.getInputStream();\n\twhile ((count = in.read(buf)) != -1) {\n\t    total += count;\n\t}", "count": 0, "id": 6778, "time": "2001-10-17T00:25:22Z", "creator": "pvainio@sci.fi", "creation_time": "2001-10-17T00:25:22Z", "is_private": false}, {"attachment_id": null, "tags": [], "bug_id": 4223, "text": "it think this bug might actually be a bug in the jk layer...\n\nin ajp_process_callback, here is the block of code that handles sending the\nnext chunk of data from the webserver to tomcat:\n\n--- snip ---\n        case JK_AJP13_GET_BODY_CHUNK:\n            {\n\t\tunsigned len = (unsigned)jk_b_get_int(msg);\n                jk_log(l, JK_LOG_DEBUG, \"received JK_AJP13_GET_BODY_CHUNK,\nlen=%d\\n\", len);\n\n                if(len > AJP13_MAX_SEND_BODY_SZ) {\n                    len = AJP13_MAX_SEND_BODY_SZ;\n                }\n                if(len > ae->left_bytes_to_send) {\n                    jk_log(l, JK_LOG_DEBUG, \"len > ae->left_bytes_to_send\n(%d > %d)\\n\",\n                           len, ae->left_bytes_to_send);\n                    len = ae->left_bytes_to_send;\n                }\n\t\tif(len < 0) {\n\t\t    len = 0;\n\t\t}\n\n\t\t/* the right place to add file storage for upload */\n\t\tif ((len = ajp_read_into_msg_buff(ae, r, msg, len, l)) >= 0)\n{\n\t\t    r->content_read += len;\n\t\t    return JK_AJP13_HAS_RESPONSE;\n\t\t}                  \n\n\t\tjk_log(l, JK_LOG_ERROR, \"Error ajp_process_callback -\najp_read_into_msg_buff failed\\n\");\n\t\treturn JK_INTERNAL_ERROR;\t    \n            }\n\t    break;\n--- end snip ---\n\nin this line:\n\n  if ((len = ajp_read_into_msg_buff(ae, r, msg, len, l)) >= 0){\n\nshouldn't pmsg (the post message) be read into, not msg?  i don't know the code \nwell enough to be sure....\n\nanyway, i was running into a problem with an infinite loop in the ajp layer.\nwhen i made this change, the problem went away.", "count": 1, "id": 8683, "time": "2001-12-06T18:54:43Z", "creator": "seguin@motive.com", "creation_time": "2001-12-06T18:54:43Z", "is_private": false}, {"attachment_id": null, "tags": [], "bug_id": 4223, "text": "this bug was due to a bug in jk, as suspected.\n\nit is now fixed on the HEAD of jakarta-tomcat-connectors.  the fix was in \njk/native/common/jk_ajp_common.c.", "count": 2, "id": 8972, "time": "2001-12-17T07:31:52Z", "creator": "seguin@motive.com", "creation_time": "2001-12-17T07:31:52Z", "is_private": false}]