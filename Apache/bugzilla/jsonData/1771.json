[{"count": 0, "tags": [], "bug_id": 1771, "is_private": false, "text": "I include a JSP page via RequestDispatcher.include(request,\nresponseWrapper), being responseWrapper a subclass of\nServletResponseWrapper. This responseWrapper object has its own\nServletOutputStream, the JSP page must write its out to the\nresponseWrapper's ServletOutputStream. However, it writes its out to the\nresponse provided by the servlet engine. In addiction, if I change\nRequestDispatcher.include(request, responseWrapper) for\nRequestDispatcher.forward(request, responseWrapper), the JSP page writes\nits out to the responseWrapper's ServletOutputStream.\n\nAn example:\n\npublic class MyServletOutputStream extends ServletOutputStream{\n\n    private CharArrayWriter writer;\n\n    public MyServletOutputStream (){\n\twriter = new CharArrayWriter();\n    }\n\n    public void print(boolean b) throws java.io.IOException{\n\twriter.write((new StringBuffer()).append(b).toString());\n    }\n\n    public void print(char c) throws java.io.IOException{\n\tchar[] cc = new char[1];\n\tcc[0]=c;\n\twriter.write(cc);\n    }\n\n    public void print(double d) throws java.io.IOException{\n\twriter.write((new StringBuffer()).append(d).toString());\n    }\n\n    public void print(float f) throws java.io.IOException{\n\twriter.write((new StringBuffer()).append(f).toString());\n    }\n\n    .\n    .\n    .\n\n    public String toString(){\n\treturn writer.toString();\n    }\n\n    public char[] getCharArray(){\n\treturn writer.toCharArray();\n    }\n}\n\npublic class MyResponseWrapper extends HttpServletResponseWrapper{\n\n    private MyServletOutputStream output;\n\n    public MyResponseWrapper (HttpServletResponse response){\n\tsuper(response);\n\toutput = new MyServletOutputStream();\n    }\n\n    public Reader getReader(){\n\treturn new CharArrayReader(output.getCharArray());\n    }\n\n    public void flushBuffer() throws IOException {\n    }\n    \n    public ServletOutputStream getOutputStream() throws java.io.IOException{\n\treturn output;\n    }\n\n    public PrintWriter getWriter() throws java.io.IOException{\n\treturn new PrintWriter(getOutputStream(), true);\n    }\n\n    public void reset() {\n    }\n\n    public void resetBuffer(){\n    }\n}\n\npublic class MyServlet extends HttpServlet{\n\n   public void service(HttpServletRequest request, HttpServletResponse response) \nthrows java.io.IOException, ServletException{\n      ...\n      MyResponseWrapper resWrapper = new MyResponseWrapper(response);\n      \ngetServletConfig().getServletContext().getRequestDispatcher(\"MyPage.jsp\").forwar\nd(request, resWrapper); // page's out is written to resWrapper\n\n      \ngetServletConfig().getServletContext().getRequestDispatcher(\"MyPage.jsp\").includ\ne(request, resWrapper); // page's out is written to response\n      ...\n}", "id": 2466, "time": "2001-05-16T01:40:24Z", "creator": "rjimenez@tissat.es", "creation_time": "2001-05-16T01:40:24Z", "attachment_id": null}, {"count": 1, "tags": [], "creator": "craig.mcclanahan@sun.com", "attachment_id": null, "text": "If you wish to capture the output of a JSP page, your response wrapper must\noverride getWriter() instead of getOutputStream() -- because that is the call\nthat the JSP engine will be using to acquire the destination of its processing.\n", "id": 3598, "time": "2001-07-10T17:00:54Z", "bug_id": 1771, "creation_time": "2001-07-10T17:00:54Z", "is_private": false}, {"count": 2, "attachment_id": null, "creator": "rjimenez@tissat.es", "text": "The response wrapper method getWriter() is overrided!!!", "id": 3609, "time": "2001-07-10T23:01:08Z", "bug_id": 1771, "creation_time": "2001-07-10T23:01:08Z", "tags": [], "is_private": false}, {"count": 3, "tags": [], "bug_id": 1771, "attachment_id": null, "text": "The presented test case is not valid.  Here's the reasoning:\n\n* JSP pages are prohibited from writing binary output (and therefore from\n  calling response.getOutputStream()).  Therefore, they use\n  response.getWriter() to acquire a way to write their output.\n\n* If response.getOutputStream() has already been called on this response,\n  the JSP page's call to response.getWriter() should fail on an\n  IllegalStateException.  If it doesn't (as is true with your wrapper)\n  then you are violating the servlet spec contract.\n\n* To make this response wrapper work, you should implement the getWriter()\n  method to create a PrintWriter implementation (say MyPrintWriter)\n  instead of a ServletOutputStream implementation.\n\n* Alternatively, you can use output streams in this manner if you include\n  a servlet, but you won't be able to include a JSP page.\n\nA new unit test case was just checked in to the \"tester\" subdirectory, and will\nshow up in the 20010719 nightly build of Tomcat 4.0, illustrating that Tomcat\ncorrectly processes included JSP pages through the response wrapper, as long as\nit is implemented as described in the notes above.  In the unit test case, the\nwrapper capitalizes all characters and then checks that the response ultimately\nsent back to the client is in upper case.  If the included JSP page was writing\ndirectly to the real response, as your test case alleges, you'd have lower case\ncharacters included and the unit test would fail.\n", "id": 3824, "time": "2001-07-18T13:21:37Z", "creator": "craig.mcclanahan@sun.com", "creation_time": "2001-07-18T13:21:37Z", "is_private": false}]