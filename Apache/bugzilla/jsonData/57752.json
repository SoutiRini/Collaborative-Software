[{"count": 0, "tags": [], "bug_id": 57752, "is_private": false, "id": 182081, "attachment_id": null, "creator": "adam.mlodzinski@software.dell.com", "creation_time": "2015-03-25T00:29:43Z", "time": "2015-03-25T00:29:43Z", "text": "The method org.apache.catalina.webresources.Cache.getResource(String, boolean) is used to retrieve a resource given a particular path.  Some resources are cached by the Cache class, while others bypass the cache.  A request for those resources which bypass the cache are forwarded somewhere else to find the resource (the 'root' object).\nThe problem is that every request for a resource, whether for a resource that is potentially in the cache, or for a resource which always bypasses the cache, is counted as a resource lookup, while the hit count is incremented only if the resource was found in the cache.  This leads to a highly disproportionate ratio of lookups to hits from the cache.\n\nThere are 2 ways to fix this:\n\n1)  If a resource request bypasses the cache, do not increment the lookup count.\n\nOR\n\n2) If a resource request which bypasses the cache was found by the alternate source, then increment the hit count.\n\nI think the 2nd option would lead to values higher than they ought to be.  The first option ought to provide more accurate representation of the usage of the cache.\n\n\nFor the fist option, the code fix is trivial:\n{code}\n*** Cache.java  2015-02-15 13:16:26.000000000 -0500\n--- Cache.java.fixed    2015-03-24 19:08:52.630609500 -0400\n***************\n*** 59,70 ****\n\n      protected WebResource getResource(String path, boolean useClassLoaderResources) {\n\n-         lookupCount.incrementAndGet();\n-\n          if (noCache(path)) {\n              return root.getResourceInternal(path, useClassLoaderResources);\n          }\n\n          CachedResource cacheEntry = resourceCache.get(path);\n\n          if (cacheEntry != null && !cacheEntry.validateResource(useClassLoaderResources)) {\n--- 59,70 ----\n\n      protected WebResource getResource(String path, boolean useClassLoaderResources) {\n\n          if (noCache(path)) {\n              return root.getResourceInternal(path, useClassLoaderResources);\n          }\n\n+         lookupCount.incrementAndGet();\n+\n          CachedResource cacheEntry = resourceCache.get(path);\n\n          if (cacheEntry != null && !cacheEntry.validateResource(useClassLoaderResources)) {\n{code}"}, {"count": 1, "tags": [], "text": "Thanks for the report, the spot-on analysis and the patch. I agree the first option is beter.\n\nYour patch has been applied to trunk and to 8.0.x for 8.0.22 onwards.\n\nThanks again.", "attachment_id": null, "id": 182131, "creator": "markt@apache.org", "time": "2015-03-26T21:51:20Z", "bug_id": 57752, "creation_time": "2015-03-26T21:51:20Z", "is_private": false}]