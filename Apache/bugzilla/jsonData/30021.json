[{"count": 0, "tags": [], "creator": "spage@macromedia.com", "attachment_id": null, "id": 60395, "time": "2004-07-10T05:09:08Z", "bug_id": 30021, "creation_time": "2004-07-10T05:09:08Z", "is_private": false, "text": "The fine documentation for the \"Swiss Army knife voodoo\" of mod_rewrite at\nhttp://httpd.apache.org/docs-2.0/mod/mod_rewrite.html says under \"API Phases\":\n\n\"the API currently provides only a URL-to-filename hook. In Apache 2.0 the two\nmissing hooks will be added to make the processing more clear.\"\n\nIt would be great if this were updated to describe how the API Phases are\nimplemented in Apache 2.0.\n\n\nThanks, I have 750 Rewrite rules in my Apache2 config!"}, {"count": 1, "tags": [], "creator": "noodl@apache.org", "text": "That text is gone in the 2.0 docs, and the whole section gone (or at least moved elsewhere) in 2.2/trunk.", "id": 105933, "time": "2007-07-25T04:37:06Z", "bug_id": 30021, "creation_time": "2007-07-25T04:37:06Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "creator": "chealer@gmail.com", "text": "current \"Apache mod_rewrite Technical Details\" still contains this in its \"API phases\" section: http://httpd.apache.org/docs/current/en/rewrite/tech.html#InternalAPI\n\nNote that this documentation is about internals, but says \"The internal processing of this module is very complex but needs to be explained once even to the average user to avoid common mistakes and to let you exploit its full functionality.\"\n\nI am such an average user and have no idea what an API phase is. Adding these outdated parts, my understanding of the page is quite limited. It would be great not to require explanations of internals in user documentation :-/", "id": 150213, "time": "2011-10-05T20:43:14Z", "bug_id": 30021, "creation_time": "2011-10-05T20:43:14Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 30021, "attachment_id": null, "text": "Yes. That whole \"technical details\" document needs a lot of help. It's on my list.\n\nThe phrasing is condescending, and it doesn't actually impart much in the way of technical details. I'll see what we can do with it.\n\nThe 2.0 docs are pretty much not going to get improved at this point, but hopefully we can do something with the trunk docs.", "id": 150279, "time": "2011-10-07T00:57:37Z", "creator": "rbowen@apache.org", "creation_time": "2011-10-07T00:57:37Z", "is_private": false}, {"count": 4, "tags": [], "text": "I've rewritten that entire section ('API Phases') in the trunk docs. Let me know what you think of it. If you think it addresses the concerns, I'll probably copy it back to the 2.2 docs as well.", "attachment_id": null, "bug_id": 30021, "id": 150411, "time": "2011-10-10T12:48:18Z", "creator": "rbowen@apache.org", "creation_time": "2011-10-10T12:48:18Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 30021, "text": "Thank you very much Rich. First, I now understand what API phases are about. The API in question seems to be an interface for modules.\n\nI wonder if this could be further clarified/simplified. Is \"API phase\" a very official name :-? Could this document simply refer to them as \"Request processing phases\" or something like that?\n\n\nOtherwise, there remains a part that I don't understand much:\n\nIn per-directory context (i.e., within .htaccess files and Directory blocks), these rules are being applied after a URL has already been translated to a filename. Because of this, mod_rewrite temporarily translates the filename back into a URL, by stripping off directory path before appling the rules. (See the RewriteBase directive to see how you can further manipulate how this is handled.) Then, a new internal subrequest is issued with the new URL. This restarts processing of the API phases.\n\n\n\"Because of this, mod_rewrite temporarily translates the filename back into a URL, by stripping off directory path before appling the rules. (See the RewriteBase directive to see how you can further manipulate how this is handled.)\" is particularly unclear to me. RewriteBase adds/restores to the beginning of the match, but this is phrased as if it controlled the stripping. I think something is missing explaining that the path is stripped, *and then \"re-padded\" to a URL*.\nAlso, this says that processing of API phases restarts at the end. It is unclear what happens differently in the second processing. In other words, if processing restarts, there seems to be a loop, but the loop's exit condition is not obvious.", "id": 150431, "attachment_id": null, "creator": "chealer@gmail.com", "creation_time": "2011-10-10T17:04:08Z", "time": "2011-10-10T17:04:08Z", "is_private": false}, {"count": 6, "tags": [], "creator": "rbowen@apache.org", "text": "Yes, \"API Phase\" is the official way of referencing it. It *does* refer to modules, as at any given API phase, you can have various different modules register to handle that particular API phase, or \"hook\".", "id": 151311, "time": "2011-11-09T00:23:14Z", "bug_id": 30021, "creation_time": "2011-11-09T00:23:14Z", "is_private": false, "attachment_id": null}, {"count": 7, "tags": [], "bug_id": 30021, "attachment_id": null, "text": "Regarding the phase starting over - yes, it can indeed result in looping if the target of the rewrite matches the pattern the second time around. If this is the case, a loop would hace to be avoided with a RewriteCond.", "id": 151312, "time": "2011-11-09T00:24:13Z", "creator": "rbowen@apache.org", "creation_time": "2011-11-09T00:24:13Z", "is_private": false}, {"count": 8, "tags": [], "bug_id": 30021, "text": "I think that the clarifications in r1199569 address this.", "id": 151313, "attachment_id": null, "creator": "rbowen@apache.org", "creation_time": "2011-11-09T00:49:11Z", "time": "2011-11-09T00:49:11Z", "is_private": false}, {"count": 9, "tags": [], "creator": "chealer@gmail.com", "text": "Thank you Rich. What I meant was that the documentation seems to say there is a loop in all cases:\n\nIn per-directory context (i.e., within .htaccess files and Directory blocks), these rules are being applied after a URL has already been translated to a filename. Because of this, mod_rewrite temporarily translates the filename back into a URL, by stripping off directory path before appling the rules. (See the RewriteBase directive to see how you can further manipulate how this is handled.) Then, a new internal subrequest is issued with the new URL. This restarts processing of the request phases.\n\nA subrequest would seem to generate a subrequest, which would itself generate a subrequest, etc. I imagine a request only generates a subrequest in some conditions, but the documentation doesn't mention that such conditions exist.\n\nBy the way, there is a closing parenthesis missing:\n\n(Be careful to avoid rules that can cause looping. See RewriteLooping for further discussion of this problem.", "id": 151316, "time": "2011-11-09T03:43:05Z", "bug_id": 30021, "creation_time": "2011-11-09T03:43:05Z", "is_private": false, "attachment_id": null}]