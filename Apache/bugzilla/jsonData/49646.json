[{"count": 0, "tags": [], "bug_id": 49646, "attachment_id": 25800, "is_private": false, "id": 138672, "time": "2010-07-25T11:44:36Z", "creator": "kappa@psilambda.com", "creation_time": "2010-07-25T11:44:36Z", "text": "Created attachment 25800\npatch that fixes the incorrect error handling\n\nThe odbc driver reports an error if the apr_dbd_pbquery is used.  This precludes using it to query the database for empty data sets."}, {"count": 1, "tags": [], "bug_id": 49646, "attachment_id": null, "is_private": false, "id": 140152, "time": "2010-09-24T17:36:34Z", "creator": "trawick@apache.org", "creation_time": "2010-09-24T17:36:34Z", "text": "should this have a compile-time check like\n\n#ifdef SQL_NO_DATA\n\nor \n\n#if ODBCVER >= 0x03\n\naround it?\n\nWhat does SQL_SUCCEEDED(SQL_NO_DATA) return?  If false, then APR would return APR_EGENERAL from the function.\n\nCan anyone state what other drivers return in this situation?"}, {"count": 2, "tags": [], "text": "It is an error for the underlying database driver to return SQL_NO_DATA in response to a prepared SELECT statement, even if there are zero rows returned.  \n\nIn this case, the first call to SQLFetch (i.e. the first call to apr_dbd_get_row) should return SQL_NO_DATA, and apr_dbd_get_row returns APR_EGENERAL.\n\nIt is allowed for a searched UPDATE, INSERT, or DELETE statement that does not affect any rows to return SQL_NO_DATA.  Not intuitive perhaps, but expected behavior per  ISO/IEC 9075-3 SQL/CLI.  This is the only case where a call to apr_dbd_pquery should get ever SQL_NO_DATA and return APR_EGENERAL.\n\nCurrent ODBC driver code appears correct.", "is_private": false, "id": 172106, "creator": "Tom.Donovan@acm.org", "time": "2014-01-06T13:58:12Z", "bug_id": 49646, "creation_time": "2014-01-06T13:58:12Z", "attachment_id": null}]