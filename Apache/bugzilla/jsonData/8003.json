[{"count": 0, "tags": [], "creator": "mike@vee.net", "attachment_id": null, "text": "When creating images using FopImageFactory, instances of images are stored in\nFopImageFactory.m_urlMap so that further request for the same image can be\nresolved without reloading and constructing the image.\n\nThis is problematic for long-running FOP instances for two reasons:\n\n - If the image changes, the changes are never picked up.\n - Memory useage will only ever increase.\n\nA simple fix would be to use a java.util.WeakHashMap, but weak references don't\nwork properly in 1.2 and 1.3 (apparently) and WeakHashMap isn't available in \n1.1 or 1.0.\n\nI'll assign this to myself for now because the fix outlined above should be\nquite straight-forward, and I'll probably get around to fixing it in the course\nof my background-image work.", "id": 13327, "time": "2002-04-12T07:56:02Z", "bug_id": 8003, "creation_time": "2002-04-12T07:56:02Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 8003, "text": "I ran into this as well; it was a killer for our app, which uses it as a\nsnapshot/report facility for a map view via SVG and FO. Both memory usage and\nreuse of images which have changed on disk are a big problem.\n\nCurrently I am disabling the cache altogether; even commented out the variable\nto be sure. Just using weak references would help with memory, but does not\nsolve the stale image problem - for that you need a staleness check, probably in\nyour *Reader implementations. You could go by date or something I suppose -\nthere'd be problems occasionally but that would be better than nothing. Rather\nthan check for newer modifiedDate I would just save the original modified date\nand check for if it changed at all-\n", "id": 14640, "time": "2002-04-24T16:45:53Z", "creator": "preavis@partnersoft.com", "creation_time": "2002-04-24T16:45:53Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 8003, "attachment_id": null, "id": 14680, "time": "2002-04-25T04:35:23Z", "creator": "mike@vee.net", "creation_time": "2002-04-25T04:35:23Z", "is_private": false, "text": "You're right about the staleness check, but only if FOP is continually\nprocessing. As soon as it gets a breather and a thorough GC pass occurs, then\nthe cached images should get reclaimed and reloaded.\n\nBut yeah, using the image's last modification date (if present) would be the way\nto go. If no last modification date is given, I'd cache it for the duration of\nthe current document only."}, {"count": 3, "tags": [], "bug_id": 8003, "text": "*** Bug 10941 has been marked as a duplicate of this bug. ***", "id": 26590, "time": "2002-11-19T17:03:35Z", "creator": "oleg@tkachenko.com", "creation_time": "2002-11-19T17:03:35Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 8003, "attachment_id": null, "id": 61362, "time": "2004-07-30T08:05:24Z", "creator": "mhilpert@gmx.de", "creation_time": "2004-07-30T08:05:24Z", "is_private": false, "text": "This memory problem also has a file problem: we create a temporary directory \nthat contains all necessary files for FOP transforming, incl. images. After FOP \ntransforming, I can't delete this temporary directory because the (used) image \nfiles can't be deleted. Even though I call driver.reset() or release all \nXML/FOP objects. Only after i exit the application, i'm able to delete those \nfiles through Windows.\n\nIs there any chance to get a fix for this problem in the 0.20.x cycle or do we \nhave to wait until the completely new fop is released (sometime in the future)?"}, {"count": 5, "tags": [], "creator": "apache.org@tisc.de", "attachment_id": null, "text": "The caching has been improved and streams are being closed - see the patch in\nbug #34308 .\n\nI'm leaving this bug open because image changes are not picked up yet.", "id": 73312, "time": "2005-04-05T18:29:34Z", "bug_id": 8003, "creation_time": "2005-04-05T18:29:34Z", "is_private": false}, {"count": 6, "tags": [], "bug_id": 8003, "attachment_id": null, "id": 127828, "time": "2009-06-10T13:24:17Z", "creator": "markt@apache.org", "creation_time": "2009-06-10T13:24:17Z", "is_private": false, "text": "Reset assignee so mails go to list."}, {"count": 7, "tags": [], "creator": "gadams@apache.org", "attachment_id": null, "text": "no such class FopImageFactory", "id": 157211, "time": "2012-04-05T05:32:15Z", "bug_id": 8003, "creation_time": "2012-04-05T05:32:15Z", "is_private": false}, {"count": 8, "attachment_id": null, "bug_id": 8003, "text": "batch transition resolved+wontfix to closed+wontfix", "id": 158566, "time": "2012-04-30T00:14:45Z", "creator": "gadams@apache.org", "creation_time": "2012-04-30T00:14:45Z", "tags": [], "is_private": false}, {"attachment_id": null, "tags": [], "creator": "gadams@apache.org", "text": "batch transition resolved+wontfix to closed+wontfix; if you believe this remains a bug and can demonstrate it with appropriate input FO file and output PDF file (as applicable), then you may reopen", "count": 9, "id": 158611, "time": "2012-04-30T00:17:14Z", "bug_id": 8003, "creation_time": "2012-04-30T00:17:14Z", "is_private": false}]