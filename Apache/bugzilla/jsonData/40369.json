[{"count": 0, "tags": [], "text": "Also fixes #40103.\n\nI have made the following improvements to the JMeter LDAP support\nwhich I wanted to share with the list:\n   1. Changed LDAP sampler to:\n       a. sort search results (by DN), attributes for each result (by\nid) and values (by toString()) for searches returning less the a\nconfigured constant (1000) entries. Having a stable ordering allows a\nnew class of response assertion detailed below.\n       b. fix bugzilla 40103 (extra \"</operation>\").\n       c. use StringBuffer instead of '+' for search results where\nthere may be big numbers of results to be marshalled to XML.\n       d. Added extra <searchresults> tag and nested <dn> ...\n<attribute> stuff inside the <searchresult> tag. This was because the\nexisting structure is not very XSD/JAXB etc friendly, and there seems\nno good reason why it shouldn't be.\n   2. Changed ResponseAssertion.java to:\n       a. support a new \"Pattern Matching Rule\" called \"Equals\" which\ndoes a direct string comparison between the response and the first\n\"Patterns To Test\" string which has been entered. This is not directly\ntied to the LDAP sampler but requires a sampler to output fields in a\nstable order to be used effectively. It is better for simple\ncomparing against a full response then \"Matches\" because there is no\nneed to consider quoting of special regex chars.\n       b. log.info() information about failed assertions so that the\nreason for failures is clear immediately from the log, including the\nassertion's name. In the case of the new \"Equals\" assertions, a small\ndiff showing markers for initial matching sequence (if any) and final\nmatching sequence (if any) is also logged, so that the non-matching\ntext is aligned in the middle for easy identification.\n\nThese changes greatly improve the ease with which you can script an\nLDAP interaction and then use the results seen in the View Results\nTree to turn the interaction into a unit test asserting correct\nbehaviour (after suitable manual review of course).", "attachment_id": null, "bug_id": 40369, "id": 92764, "time": "2006-08-30T23:55:50Z", "creator": "nrhope@gmail.com", "creation_time": "2006-08-30T23:55:50Z", "is_private": false}, {"count": 1, "tags": [], "creator": "nrhope@gmail.com", "text": "Created attachment 18772\nuse next patch instead (replaced a > with a >=)\n\nAgainst rel-2.2 branch", "id": 92765, "time": "2006-08-30T23:57:14Z", "bug_id": 40369, "creation_time": "2006-08-30T23:57:14Z", "is_private": false, "attachment_id": 18772}, {"count": 2, "tags": [], "text": "Created attachment 18799\nuse this patch instead\n\nchanged a > to a >=", "attachment_id": 18799, "bug_id": 40369, "id": 92887, "time": "2006-09-01T13:05:02Z", "creator": "nrhope@gmail.com", "creation_time": "2006-09-01T13:05:02Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 40369, "attachment_id": 18820, "is_private": false, "id": 93013, "time": "2006-09-05T06:16:34Z", "creator": "nrhope@gmail.com", "creation_time": "2006-09-05T06:16:34Z", "text": "Created attachment 18820\nimproved diff format, included patch for 40381\n\nPatch after thorough testing and changing the diff format to deal with longer\nstrings (now looks like\n\nreceived   : initial...<<delta...>>final...\ncomparison : initial...<<delta...>>final...\n\nwhere all sections are present and longer then the limit defined by\n\"assertion.equals_section_diff_len=\" property in jmeter.properties, which\ndefaults to 50 chars if not specified).\n\nIncludes patch for 40381 as was too difficult for me to maintain a separate\nworking directory."}, {"count": 4, "attachment_id": 18821, "bug_id": 40369, "is_private": false, "id": 93014, "time": "2006-09-05T06:31:05Z", "creator": "nrhope@gmail.com", "creation_time": "2006-09-05T06:31:05Z", "tags": [], "text": "Created attachment 18821\nimproved diff format, included patch for 40381\n\nPrevious patch was obsolete patch from wrong working directory (bugzilla was\nreporting wrong size)."}, {"count": 5, "tags": [], "bug_id": 40369, "attachment_id": 18824, "is_private": false, "id": 93075, "time": "2006-09-06T07:00:23Z", "creator": "nrhope@gmail.com", "creation_time": "2006-09-06T07:00:23Z", "text": "Created attachment 18824\nimprove config of diff format + map to/from symbolic descriptions\n\nStill contains patch for 40381. Now seq at start and end of diff delta can be\nconfigured via jmeter.properties (\"[[[\" and \"]]]\" by default) and default diff\ndelta section length increased to 100 chars after observing real-world diff\noutput). Added methods to map scope and modification ops to/from strings for\neasier reuse/better clarity."}, {"count": 6, "tags": [], "bug_id": 40369, "attachment_id": null, "id": 93083, "time": "2006-09-06T08:15:19Z", "creator": "nrhope@gmail.com", "creation_time": "2006-09-06T08:15:19Z", "is_private": false, "text": "Also note that last patch fixed a typo in ResponseAssertion.java where\n\n   public final static String TEST_STRINGS = \"Asserion.test_strings\"; \n\nshould be\n\n   public final static String TEST_STRINGS = \"Assertion.test_strings\"; \n"}, {"count": 7, "tags": [], "creator": "sebb@apache.org", "text": "(In reply to comment #6)\n> Also note that last patch fixed a typo in ResponseAssertion.java where\n> \n>    public final static String TEST_STRINGS = \"Asserion.test_strings\"; \n> \n> should be\n> \n>    public final static String TEST_STRINGS = \"Assertion.test_strings\"; \n> \n\nUnfortunately, fixing that would invalidate any existing test plans, as the name\nis stored in the plan. But it does not matter; the name is largely irrelevant.\n", "id": 93710, "time": "2006-09-17T23:03:43Z", "bug_id": 40369, "creation_time": "2006-09-17T23:03:43Z", "is_private": false, "attachment_id": null}, {"count": 8, "attachment_id": null, "bug_id": 40369, "text": "The commented out main method generates test results of the form:\n\nreceived  : \nreceived  : [[[aaa]]]\ncomparison: \ncomparison: [[[zzz]]]\n\nThe first received and comparison lines are always blank - so what is their\npurpose? Is there a bug in the equalsComparisonText() method?", "id": 93711, "time": "2006-09-17T23:37:29Z", "creator": "sebb@apache.org", "creation_time": "2006-09-17T23:37:29Z", "tags": [], "is_private": false}, {"count": 9, "tags": [], "creator": "nrhope@gmail.com", "text": "(In reply to comment #7)\n> Unfortunately, fixing that would invalidate any existing test plans, as the name\n> is stored in the plan. But it does not matter; the name is largely irrelevant.\n> \n\nTrue, but its just a global search and replace. Not a biggy if not included in\nthe applied patch, but I thought while it was alpha it might be a good idea...\n\n", "id": 93895, "time": "2006-09-20T04:03:29Z", "bug_id": 40369, "creation_time": "2006-09-20T04:03:29Z", "is_private": false, "attachment_id": null}, {"count": 10, "tags": [], "text": "(In reply to comment #8)\n> The commented out main method generates test results of the form:\n> \n> received  : \n> received  : [[[aaa]]]\n> comparison: \n> comparison: [[[zzz]]]\n> \n> The first received and comparison lines are always blank - so what is their\n> purpose? Is there a bug in the equalsComparisonText() method?\n\n\nThese lines are just to provide better visibility for the [[[ text following, as\nI found them hard to spot visually when there is lots of XML logged to\njmeter.log. Again, no biggy...", "attachment_id": null, "bug_id": 40369, "id": 93896, "time": "2006-09-20T04:09:05Z", "creator": "nrhope@gmail.com", "creation_time": "2006-09-20T04:09:05Z", "is_private": false}, {"attachment_id": null, "tags": [], "bug_id": 40369, "is_private": false, "count": 11, "id": 93909, "time": "2006-09-20T10:21:28Z", "creator": "sebb@apache.org", "creation_time": "2006-09-20T10:21:28Z", "text": "(In reply to comment #9)\n> (In reply to comment #7)\n> > Unfortunately, fixing that would invalidate any existing test plans, as \nthe name\n> > is stored in the plan. But it does not matter; the name is largely \nirrelevant.\n> > \n> True, but its just a global search and replace. Not a biggy if not included \nin\n> the applied patch, but I thought while it was alpha it might be a good \nidea...\n\nThe proposed correction relates to a string that is in *released* code, which \nwould mean global search and replace in every single test plan using a \nresponse assertion. This could be a very large number.\n"}, {"count": 12, "tags": [], "text": "(In reply to comment #11)\n> (In reply to comment #9)\n> > (In reply to comment #7)\n> > > Unfortunately, fixing that would invalidate any existing test plans, as \n> the name\n> > > is stored in the plan. But it does not matter; the name is largely \n> irrelevant.\n> > > \n> > True, but its just a global search and replace. Not a biggy if not included \n> in\n> > the applied patch, but I thought while it was alpha it might be a good \n> idea...\n> \n> The proposed correction relates to a string that is in *released* code, which \n> would mean global search and replace in every single test plan using a \n> response assertion. This could be a very large number.\n> \nRight you are; I was forgetting this was in the generic assertion code. My bad.\n", "is_private": false, "bug_id": 40369, "id": 93946, "time": "2006-09-21T07:07:49Z", "creator": "nrhope@gmail.com", "creation_time": "2006-09-21T07:07:49Z", "attachment_id": null}, {"count": 13, "attachment_id": 18960, "bug_id": 40369, "is_private": false, "id": 94461, "time": "2006-10-03T21:49:44Z", "creator": "nrhope@gmail.com", "creation_time": "2006-10-03T21:49:44Z", "tags": [], "text": "Created attachment 18960\nremove fix for \"asserion.test_string\" spelling error\n\nAlso improved output from Equals so only outputs diff text rather then complete\nstring, making it much easier to see what the offending text is"}, {"count": 14, "tags": [], "text": "I've added the Response Assertion \"Equals\" enhancement.\n\nHad to fix a bug - the equals code only checked the first entry, which does \nnot make sense for negative matching: one might want to check that something \ndoes not match several different strings.\n\n[By the way, please don't change the spacing etc of existing code; it makes \nreviewing and applying patches much harder. I had to fix a lot of tabs/spaces \nto work out what was actually changed. Likewise changing imports to use .*]\n\nThe LDAP changes have not yet been reviewed or applied.", "is_private": false, "id": 99214, "creator": "sebb@apache.org", "time": "2007-02-10T04:03:28Z", "bug_id": 40369, "creation_time": "2007-02-10T04:03:28Z", "attachment_id": null}, {"count": 15, "attachment_id": null, "bug_id": 40369, "is_private": false, "id": 102038, "time": "2007-04-22T15:42:44Z", "creator": "sebb@apache.org", "creation_time": "2007-04-22T15:42:44Z", "tags": [], "text": "Fixed in SVN in r531295\n\nHad to add some LimitException handling to the formatting routines."}]