[{"count": 0, "tags": [], "bug_id": 21420, "attachment_id": null, "is_private": false, "id": 40224, "time": "2003-07-08T21:36:32Z", "creator": "junk@galbraiths.org", "creation_time": "2003-07-08T21:36:32Z", "text": "It is well known that Adobe Photoshop for unknown reasons inverts the channel\nvalues in a CMYK JPG file, such that 0 is black rather white.  The author of\norg.apache.fop.image.JpegImage knew this and wrote support for it.\n\nHowever, the condition used to determine if the JPG was generated by Photoshop\nis incorrect.  JpegImage checks if the Adobe APPE marker is present in the file.\n If it is, it assumes that Photoshop created the file.  Actually, many other\napplications use the Adobe APPE marker standard when creating JPG files but do\n*not* invert the CMYK channel values.  As a result, these JPG files are being\ndisplayed with inverted colors."}, {"attachment_id": 7175, "tags": [], "creator": "junk@galbraiths.org", "is_private": false, "count": 1, "id": 40225, "time": "2003-07-08T21:40:47Z", "bug_id": 21420, "creation_time": "2003-07-08T21:40:47Z", "text": "Created attachment 7175\nFixes the described bug"}, {"count": 2, "tags": [], "text": "Attachment 7175 is my solution to the bug.\n\nIt examines a region of the header FFE1 which appears to consistently identify\nJPGs generated by Adobe Photoshop with the text string \"Adobe Photoshop\"\nbeginning 124 bytes past the index of \"FFE1\".  I have tested this patch with\nfive unique CMYK JPGs generated by Adobe Photoshop 7.\n\nWhile a better solution would be to check if the CMYK channel values are indeed\ninverted, I know of no way to perform such a test.  The following URL, part of\nthe IJG JPEG library, seems to confirm that there is no such test:\n\nhttp://courses.cs.deu.edu.tr/cse566/libjpeg.htm", "is_private": false, "id": 40226, "creator": "junk@galbraiths.org", "time": "2003-07-08T21:45:00Z", "bug_id": 21420, "creation_time": "2003-07-08T21:45:00Z", "attachment_id": null}, {"count": 3, "tags": [], "text": "Created attachment 7192\nCMYK JPEG generated by Adobe Photoshop", "is_private": false, "bug_id": 21420, "id": 40265, "time": "2003-07-09T14:43:23Z", "creator": "junk@galbraiths.org", "creation_time": "2003-07-09T14:43:23Z", "attachment_id": 7192}, {"count": 4, "attachment_id": 7193, "creator": "junk@galbraiths.org", "is_private": false, "id": 40266, "time": "2003-07-09T14:44:14Z", "bug_id": 21420, "creation_time": "2003-07-09T14:44:14Z", "tags": [], "text": "Created attachment 7193\nCMYK JPEG generated by the \"ImageWrite\" image I/O plug-in for JAI"}, {"attachment_id": null, "tags": [], "creator": "vic@outfitr.com", "is_private": false, "count": 5, "id": 41606, "time": "2003-07-27T22:39:32Z", "bug_id": 21420, "creation_time": "2003-07-27T22:39:32Z", "text": "After testing before and after, I have applied the patch to the maintenance \nbranch. Thanks very much.\n\nPlease note that this class has been modified in what look to my eye like \nsubstantial ways in the trunk. The image logic or something related to layout \nof images appears to be broken in the trunk ATM, as placing either test file \ninto normal.fo throws FOP into an infinite loop. So, we may need to revisit \nthis in the trunk code at some future time. I'm sorry for that inconvenience."}, {"count": 6, "tags": [], "bug_id": 21420, "text": "Thanks for applying the patch!\n\nLet me know when you're ready to revisit this for the trunk code; I'll be happy\nto write a new patch.  Or better yet, I'll just do it when the first milestone\ntrunk version is released.", "id": 41803, "time": "2003-07-30T20:23:36Z", "creator": "junk@galbraiths.org", "creation_time": "2003-07-30T20:23:36Z", "is_private": false, "attachment_id": null}, {"attachment_id": null, "tags": [], "creator": "gadams@apache.org", "is_private": false, "count": 7, "id": 156350, "time": "2012-04-01T07:13:11Z", "bug_id": 21420, "creation_time": "2012-04-01T07:13:11Z", "text": "batch transition pre-FOP1.0 resolved+fixed bugs to closed+fixed"}]