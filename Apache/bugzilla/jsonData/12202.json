[{"count": 0, "tags": [], "bug_id": 12202, "text": "If Apache has the FileETag directive set to \"None\" and an If-None-Match header \nis sent in a request, Apache always sends back a 304 Not Modified response, \nregardless of the content of the ETag(s) sent in the If-None-Match header.\n\nThis bug is pretty high priority, because it means that if a site running \nApache normally serves ETags but then stops serving them by setting FileETag \nNone, any downstream caches which understand ETags and send If-None-Match \nrequests will stop getting updated content.\n\nHow to reproduce:\n\n    1. Make a regular HTTP request to Apache for any static file,\n       and note its ETag.\n\n    2. Make another HTTP request for that file, sending an If-None-Match\n       header (for example, if the ETag from step 1 is \"abcdef\", send\n       the header If-None-Match: \"abcdef\"). Apache should correctly\n       return a 304 Not Modified response.\n\n    3. Make a new If-None-Match request with a bogus ETag, for example\n       by sending If-None-Match: \"xxx\". Apache should correctly return\n       a 200 OK and include an entity body.\n\n    4. Add a FileETag None directive to the Apache configuration,\n       and restart Apache.\n\n    5. Make the same If-None-Match request as in step 2. Again, Apache\n       should correctly return a 304 Not Modified response.\n\n    6. Make the same bogus If-None-Match request as in step 3 (or any\n       other If-None-Match request with a bogus ETag). Apache will\n       incorrectly return a 304 Not Modified response.\n\nSteps 4 and 6 are enough to reproduce the bug but the other steps give a little \ncontext by showing the correct behavior.\n\nWe have reproduced this bug with Apache 1.3.23 on OpenBSD and Apache 1.3.26 on \nSolaris x86. We strongly suspect the bug to be platform independent; a quick \nperusal of the code makes it look like the culprit is the strstr() inside \nap_meets_conditions() in src/main/http_protocol.c (line 612 of the Apache \n1.3.26 distribution):\n\n    if_nonematch = ap_table_get(r->headers_in, \"If-None-Match\");\n    if (if_nonematch != NULL) {\n        if (r->method_number == M_GET) {\n            if (if_nonematch[0] == '*')\n                return HTTP_NOT_MODIFIED;\n            if (etag != NULL) {\n                if (ap_table_get(r->headers_in, \"Range\")) {\n                    if (etag[0] != 'W' &&\n                        ap_find_list_item(r->pool, if_nonematch, etag)) {\n                        return HTTP_NOT_MODIFIED;\n                    }\n                }\n   /* here */   else if (strstr(if_nonematch, etag)) {\n                    return HTTP_NOT_MODIFIED;\n                }\n\nThe problem appears to be that when FileETag None is set, the If-None-Match \nheader is set to \"\" because ap_make_etag() returns \"\" in that case. \nUnfortunately, strstr(str, \"\") always returns true, so Apache incorrectly \nreturns 304 Not Modified for all requests.\n\nA quick hack would be to have ap_make_etag() return an impossible sentinel \nvalue instead of \"\" when FileETag None is set. A better fix would be to ignore \nthe If-None-Match logic altogether if FileETag None is set, as there is no \nother sensible behavior.", "id": 22053, "time": "2002-08-31T00:13:16Z", "creator": "andrew@tellme.com", "creation_time": "2002-08-31T00:13:16Z", "is_private": false, "attachment_id": null}, {"attachment_id": null, "tags": [], "creator": "andrew@tellme.com", "text": "I have confirmed that the bug exists in the current CVS HEAD.\nSimple one-line patch is coming...", "count": 1, "id": 22058, "time": "2002-08-31T05:59:46Z", "bug_id": 12202, "creation_time": "2002-08-31T05:59:46Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 12202, "attachment_id": 2879, "id": 22059, "time": "2002-08-31T06:01:31Z", "creator": "andrew@tellme.com", "creation_time": "2002-08-31T06:01:31Z", "is_private": false, "text": "Created attachment 2879\nPatch against apache-1.3/src/main/http_protocol.c"}, {"count": 3, "tags": [], "bug_id": 12202, "text": "Fixed in revision 1.327 of http_protocol.c", "id": 22082, "time": "2002-09-01T18:47:17Z", "creator": "jerenkrantz@apache.org", "creation_time": "2002-09-01T18:47:17Z", "is_private": false, "attachment_id": null}]