[{"count": 0, "tags": [], "bug_id": 31121, "text": "Just to suggest adding two attributes: suffix and property and also to improve \nthe printing output:\n\n-Having a prefix only, it is quite restrictive, because some times people use \nsuffix notation instead of prefix notation.\n\n- Considering the attribute property, for just informing about a given \nproperty, usefull for debugging. I don't know how using the prefix attribute to \nprint only the property 'class' and not 'class.resources'. At least it is not \nso well documented about the syntax of prefix attribute (do it accept regular \nexpressions?, could you give some examples?)\n\n- Give the possibility of printing on the system output on the same you will \nsee it using the <echo> task. <echoproperties> interpret some spetial \ncharacters, such us: new line, ':', '\\', etc. Which is a good idea for printing \nto a properties file (using destdir attribute), but for printing to the \nstandard output it is not so frendly (see the example). Such behaviour chould \nbe controlled adding another attribute, for example(format = {output, file})\n\nExample:\nI want to print the property, defined on the properties file like this:\nmessage.junit.present = \\\nWARNING(Isfx): The build process detected${nl}\\\n\\  junit.jar/ant-junit.jar doesn't exist or it location is${nl}\\\n\\  wrong. We expect such files should be located on the${nl}\\\n\\  ${ant.lib}${nl}\\\n\\  For more information please read the file:${nl}\\\n\\  ${antdoc.index}\n\nNote: I use the backslash at the begining for indenting. This property is going \nto be used on <echo> task for informing about the building process. I prefer to \nuse <echo message =\"${message.junit.present}\", instead of printing directly the \nmessage using <echo>bla bla bla</echo>, because the indentation is not so \npretty and also for avoiding a lot of message information on my build.xml.\n\nprint-properties:\n[echoproperties] #Ant properties\n[echoproperties] #Wed Sep 08 17:27:11 GMT+01:00 2004\n[echoproperties] message.junit.present=WARNING(Isfx)\\: The build process detecte\nd\\r\\n  junit.jar/ant-junit.jar doesn't exist or it location is\\r\\n  wrong. We ex\npect such files should be located on the\\r\\n  C\\:\\\\Archivos de programa\\\\apache-\nant-1.6.2\\\\lib\\r\\n  For more information please read the file\\:\\r\\n  P\\:\\\\isfx\\\\\ndoc\\\\antdoc\\\\index.html\n\nAnd I would expect something like this, when printing to the standard output:\n\nprint-properties:\n[echoproperties] #Ant properties\n[echoproperties] #Wed Sep 08 17:27:11 GMT+01:00 2004\n[echoproperties] message.junit.present=WARNING(Isfx): The build process detecte\nd\n  junit.jar/ant-junit.jar doesn't exist or it location is\n  wrong. We expect such files should be located on the\n  C:\\Archivos de programa\\apache-ant-1.6.2\\lib\n  For more information please read the file:\n  P:\\isfx\\doc\\antdoc\\index.html\n\nThanks in advance,\n\nDavid Leal", "id": 63222, "time": "2004-09-08T15:53:48Z", "creator": "achepati67@yahoo.es", "creation_time": "2004-09-08T15:53:48Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 31121, "text": "since Ant 1.6, you can supply a propertyset to echoproperties.  You can use the\nregex attribute on this propertyset to get suffix behavior.  As for echoing a\nsingle property, I feel your pain, but it's not much worse for testing to type:\n\n<echo>$${foo}=${foo}</echo>\n\nSometimes I define a macrodef if I'm going to do this a lot.\n\nNot sure what we can/will do about the escaping issue.", "id": 75450, "time": "2005-05-26T22:18:19Z", "creator": "mbenson@apache.org", "creation_time": "2005-05-26T22:18:19Z", "is_private": false, "attachment_id": null}, {"count": 2, "attachment_id": null, "creator": "jan@materne.de", "text": "Workaround provided.\nAlso we have a Props AntLib.", "id": 183423, "time": "2015-06-10T08:01:16Z", "bug_id": 31121, "creation_time": "2015-06-10T08:01:16Z", "tags": [], "is_private": false}]