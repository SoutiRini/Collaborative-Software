[{"count": 0, "tags": [], "creator": "brian.brooks@metavante.com", "is_private": false, "id": 38054, "attachment_id": null, "bug_id": 20360, "creation_time": "2003-05-30T16:13:04Z", "time": "2003-05-30T16:13:04Z", "text": "In our environment, we have multiple labels.  I'm working on a a release \nprocess and I'm switching between labels.  I've written an stcheckout similar to\n\n    <stcheckout\n      username=\"myuserid\" password=\"mypassword\"\n      URL                    = \"thor:49201/ps/c1_prod-02-branch_maint\"\n      rootStarteamFolder     = \"/charterone/com\"\n      rootlocalfolder        = \"${basedir}\"\n      label                  = \"c1ret_tr8\"\n      deleteuncontrolled     = \"false\"      \n      userepositorytimestamp = \"true\" \n    />\n\nFor label c1ret_tr16 I have files in starteam /charterone/com but in c1ret_tr8 \nI don't.  Stcheckout causes the build to fail whevenever I execute this task \nwith c1ret_tr8.  The output for this failure is\n\nC:\\temp\\ant1>ant -debug >c:\\temp\\ant2.txt\n\nBUILD FAILED\nfile:C:/temp/ant1/build.xml:14: Unable to find root folder /charterone/com in re\npository at thor:49201/ps/c1_prod-02-branch_maint\n        at org.apache.tools.ant.taskdefs.optional.starteam.TreeBasedTask.execute\n(TreeBasedTask.java:560)\n        at org.apache.tools.ant.Task.perform(Task.java:341)\n        at org.apache.tools.ant.Target.execute(Target.java:309)\n        at org.apache.tools.ant.Target.performTasks(Target.java:336)\n        at org.apache.tools.ant.Project.executeTarget(Project.java:1339)\n        at org.apache.tools.ant.Project.executeTargets(Project.java:1255)\n        at org.apache.tools.ant.Main.runBuild(Main.java:609)\n        at org.apache.tools.ant.Main.start(Main.java:196)\n        at org.apache.tools.ant.Main.main(Main.java:235)\n--- Nested Exception ---\nUnable to find root folder /charterone/com in repository at thor:49201/ps/c1_pro\nd-02-branch_maint\n        at org.apache.tools.ant.taskdefs.optional.starteam.TreeBasedTask.configu\nreRootStarteamFolder(TreeBasedTask.java:481)\n        at org.apache.tools.ant.taskdefs.optional.starteam.TreeBasedTask.execute\n(TreeBasedTask.java:545)\n        at org.apache.tools.ant.Task.perform(Task.java:341)\n        at org.apache.tools.ant.Target.execute(Target.java:309)\n        at org.apache.tools.ant.Target.performTasks(Target.java:336)\n        at org.apache.tools.ant.Project.executeTarget(Project.java:1339)\n        at org.apache.tools.ant.Project.executeTargets(Project.java:1255)\n        at org.apache.tools.ant.Main.runBuild(Main.java:609)\n        at org.apache.tools.ant.Main.start(Main.java:196)\n        at org.apache.tools.ant.Main.main(Main.java:235)\n\nTotal time: 6 seconds\nC:\\temp\\ant1>\n\nThe only way I have to work around this issue is to change the \nrootStarteamFolder to a less specific /charterone like so\n\n    <stcheckout\n      username=\"BBrooks\" password=\"mcsp7wgw\"\n      URL                    = \"thor:49201/ps/c1_prod-02-branch_maint\"\n      rootStarteamFolder     = \"/charterone\"\n      rootlocalfolder        = \"${basedir}\"\n      label                  = \"c1ret_tr8\"\n      deleteuncontrolled     = \"false\"      \n      userepositorytimestamp = \"true\" \n    />\n\nHowever, this causes the average checkout time to increase by 8 minutes!!!  \n\nStcheckout should handle this situation more gracefully.  The build should not \nfail when no files are found for a particular label.  Only a warning message or \nat least parameterize the behavior similar to the <jar> task's attribute \nwhenempty.\n\nHere's the full ant -debug ...\nApache Ant version 1.5.3 compiled on April 16 2003\nBuildfile: build.xml\nDetected Java version: 1.3 in: j:\\jre\nDetected OS: Windows 2000\n +User task: propertyfile     \norg.apache.tools.ant.taskdefs.optional.PropertyFile\n +User task: vsscheckin     \norg.apache.tools.ant.taskdefs.optional.vss.MSVSSCHECKIN\n +User task: sql     org.apache.tools.ant.taskdefs.SQLExec\n +User task: cvspass     org.apache.tools.ant.taskdefs.CVSPass\n +User task: p4reopen     \norg.apache.tools.ant.taskdefs.optional.perforce.P4Reopen\n +User task: csc     org.apache.tools.ant.taskdefs.optional.dotnet.CSharp\n +User task: dirname     org.apache.tools.ant.taskdefs.Dirname\n +User task: wlrun     org.apache.tools.ant.taskdefs.optional.ejb.WLRun\n +User task: p4label     org.apache.tools.ant.taskdefs.optional.perforce.P4Label\n +User task: p4revert     \norg.apache.tools.ant.taskdefs.optional.perforce.P4Revert\n +User task: replaceregexp     \norg.apache.tools.ant.taskdefs.optional.ReplaceRegExp\n +User task: get     org.apache.tools.ant.taskdefs.Get\n +User task: jjtree     org.apache.tools.ant.taskdefs.optional.javacc.JJTree\n +User task: sleep     org.apache.tools.ant.taskdefs.Sleep\n +User task: jarlib-display     \norg.apache.tools.ant.taskdefs.optional.extension.JarLibDisplayTask\n +User task: dependset     org.apache.tools.ant.taskdefs.DependSet\n +User task: zip     org.apache.tools.ant.taskdefs.Zip\n +User task: patch     org.apache.tools.ant.taskdefs.Patch\n +User task: jspc     org.apache.tools.ant.taskdefs.optional.jsp.JspC\n +User task: style     org.apache.tools.ant.taskdefs.XSLTProcess\n +User task: test     org.apache.tools.ant.taskdefs.optional.Test\n +User task: tstamp     org.apache.tools.ant.taskdefs.Tstamp\n +User task: unwar     org.apache.tools.ant.taskdefs.Expand\n +User task: vsshistory     \norg.apache.tools.ant.taskdefs.optional.vss.MSVSSHISTORY\n +User task: icontract     org.apache.tools.ant.taskdefs.optional.IContract\n +User task: cvschangelog     org.apache.tools.ant.taskdefs.cvslib.ChangeLogTask\n +User task: p4submit     \norg.apache.tools.ant.taskdefs.optional.perforce.P4Submit\n +User task: ccmcheckin     \norg.apache.tools.ant.taskdefs.optional.ccm.CCMCheckin\n +User task: p4change     \norg.apache.tools.ant.taskdefs.optional.perforce.P4Change\n +User task: bzip2     org.apache.tools.ant.taskdefs.BZip2\n +User task: p4delete     \norg.apache.tools.ant.taskdefs.optional.perforce.P4Delete\n +User task: vssadd     org.apache.tools.ant.taskdefs.optional.vss.MSVSSADD\n +User task: javadoc     org.apache.tools.ant.taskdefs.Javadoc\n +User task: translate     org.apache.tools.ant.taskdefs.optional.i18n.Translate\n +User task: signjar     org.apache.tools.ant.taskdefs.SignJar\n +User task: vajload     \norg.apache.tools.ant.taskdefs.optional.ide.VAJLoadProjects\n +User task: jarlib-available     \norg.apache.tools.ant.taskdefs.optional.extension.JarLibAvailableTask\n +User task: WsdlToDotnet     \norg.apache.tools.ant.taskdefs.optional.dotnet.WsdlToDotnet\n +User task: buildnumber     org.apache.tools.ant.taskdefs.BuildNumber\n +User task: jpcovmerge     \norg.apache.tools.ant.taskdefs.optional.sitraka.CovMerge\n +User task: ejbjar     org.apache.tools.ant.taskdefs.optional.ejb.EjbJar\n +User task: war     org.apache.tools.ant.taskdefs.War\n +User task: stlist     \norg.apache.tools.ant.taskdefs.optional.starteam.StarTeamList\n +User task: rename     org.apache.tools.ant.taskdefs.Rename\n +User task: sequential     org.apache.tools.ant.taskdefs.Sequential\n +User task: serverdeploy     \norg.apache.tools.ant.taskdefs.optional.j2ee.ServerDeploy\n +User task: property     org.apache.tools.ant.taskdefs.Property\n +User task: move     org.apache.tools.ant.taskdefs.Move\n +User task: copydir     org.apache.tools.ant.taskdefs.Copydir\n +User task: cccheckin     \norg.apache.tools.ant.taskdefs.optional.clearcase.CCCheckin\n +User task: wljspc     org.apache.tools.ant.taskdefs.optional.jsp.WLJspc\n +User task: fixcrlf     org.apache.tools.ant.taskdefs.FixCRLF\nCould not load a dependent class (com/oroinc/net/SocketClient) for task telnet\n +User task: sosget     org.apache.tools.ant.taskdefs.optional.sos.SOSGet\n +User task: pathconvert     org.apache.tools.ant.taskdefs.PathConvert\n +User task: record     org.apache.tools.ant.taskdefs.Recorder\n +User task: p4sync     org.apache.tools.ant.taskdefs.optional.perforce.P4Sync\n +User task: exec     org.apache.tools.ant.taskdefs.ExecTask\n +User task: p4edit     org.apache.tools.ant.taskdefs.optional.perforce.P4Edit\n +User task: manifest     org.apache.tools.ant.taskdefs.ManifestTask\n +User task: maudit     org.apache.tools.ant.taskdefs.optional.metamata.MAudit\n +User task: antlr     org.apache.tools.ant.taskdefs.optional.ANTLR\n +User task: netrexxc     org.apache.tools.ant.taskdefs.optional.NetRexxC\nCould not load a dependent class (com/oroinc/net/ftp/FTP) for task ftp\n +User task: jpcovreport     \norg.apache.tools.ant.taskdefs.optional.sitraka.CovReport\n +User task: execon     org.apache.tools.ant.taskdefs.ExecuteOn\n +User task: ccmcheckout     \norg.apache.tools.ant.taskdefs.optional.ccm.CCMCheckout\n +User task: ant     org.apache.tools.ant.taskdefs.Ant\n +User task: xmlvalidate     \norg.apache.tools.ant.taskdefs.optional.XMLValidateTask\n +User task: xslt     org.apache.tools.ant.taskdefs.XSLTProcess\n +User task: iplanet-ejbc     \norg.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbcTask\n +User task: ccmcheckintask     \norg.apache.tools.ant.taskdefs.optional.ccm.CCMCheckinDefault\n +User task: gzip     org.apache.tools.ant.taskdefs.GZip\n +User task: native2ascii     \norg.apache.tools.ant.taskdefs.optional.Native2Ascii\n +User task: starteam     \norg.apache.tools.ant.taskdefs.optional.scm.AntStarTeamCheckOut\n +User task: ear     org.apache.tools.ant.taskdefs.Ear\n +User task: input     org.apache.tools.ant.taskdefs.Input\n +User task: rmic     org.apache.tools.ant.taskdefs.Rmic\n +User task: checksum     org.apache.tools.ant.taskdefs.Checksum\n +User task: mail     org.apache.tools.ant.taskdefs.email.EmailTask\n +User task: loadfile     org.apache.tools.ant.taskdefs.LoadFile\n +User task: vsscheckout     \norg.apache.tools.ant.taskdefs.optional.vss.MSVSSCHECKOUT\n +User task: stylebook     org.apache.tools.ant.taskdefs.optional.StyleBook\n +User task: soscheckin     \norg.apache.tools.ant.taskdefs.optional.sos.SOSCheckin\n +User task: mimemail     org.apache.tools.ant.taskdefs.optional.net.MimeMail\n +User task: stlabel     \norg.apache.tools.ant.taskdefs.optional.starteam.StarTeamLabel\n +User task: gunzip     org.apache.tools.ant.taskdefs.GUnzip\n +User task: concat     org.apache.tools.ant.taskdefs.Concat\n +User task: cab     org.apache.tools.ant.taskdefs.optional.Cab\n +User task: touch     org.apache.tools.ant.taskdefs.Touch\n +User task: parallel     org.apache.tools.ant.taskdefs.Parallel\n +User task: splash     org.apache.tools.ant.taskdefs.optional.splash.SplashTask\n +User task: antcall     org.apache.tools.ant.taskdefs.CallTarget\n +User task: cccheckout     \norg.apache.tools.ant.taskdefs.optional.clearcase.CCCheckout\n +User task: typedef     org.apache.tools.ant.taskdefs.Typedef\n +User task: p4have     org.apache.tools.ant.taskdefs.optional.perforce.P4Have\n +User task: filter     org.apache.tools.ant.taskdefs.Filter\n +User task: xmlproperty     org.apache.tools.ant.taskdefs.XmlProperty\nCould not load a dependent class (jdepend/xmlui/JDepend) for task jdepend\n +User task: copy     org.apache.tools.ant.taskdefs.Copy\n +User task: antstructure     org.apache.tools.ant.taskdefs.AntStructure\nCould not load a dependent class (com/ibm/bsf/BSFException) for task script\n +User task: ccmcreatetask     \norg.apache.tools.ant.taskdefs.optional.ccm.CCMCreateTask\n +User task: rpm     org.apache.tools.ant.taskdefs.optional.Rpm\n +User task: delete     org.apache.tools.ant.taskdefs.Delete\n +User task: replace     org.apache.tools.ant.taskdefs.Replace\n +User task: mmetrics     \norg.apache.tools.ant.taskdefs.optional.metamata.MMetrics\n +User task: waitfor     org.apache.tools.ant.taskdefs.WaitFor\n +User task: untar     org.apache.tools.ant.taskdefs.Untar\n +User task: loadproperties     org.apache.tools.ant.taskdefs.LoadProperties\n +User task: available     org.apache.tools.ant.taskdefs.Available\n +User task: echoproperties     \norg.apache.tools.ant.taskdefs.optional.EchoProperties\nCould not load a dependent class (junit/framework/TestListener) for task junit\n +User task: stcheckin     \norg.apache.tools.ant.taskdefs.optional.starteam.StarTeamCheckin\n +User task: vajexport     org.apache.tools.ant.taskdefs.optional.ide.VAJExport\n +User task: stcheckout     \norg.apache.tools.ant.taskdefs.optional.starteam.StarTeamCheckout\n +User task: bunzip2     org.apache.tools.ant.taskdefs.BUnzip2\n +User task: copyfile     org.apache.tools.ant.taskdefs.Copyfile\n +User task: vsscreate     \norg.apache.tools.ant.taskdefs.optional.vss.MSVSSCREATE\n +User task: ejbc     org.apache.tools.ant.taskdefs.optional.ejb.Ejbc\n +User task: unjar     org.apache.tools.ant.taskdefs.Expand\n +User task: wsdltodotnet     \norg.apache.tools.ant.taskdefs.optional.dotnet.WsdlToDotnet\n +User task: mkdir     org.apache.tools.ant.taskdefs.Mkdir\n +User task: condition     org.apache.tools.ant.taskdefs.ConditionTask\n +User task: cvs     org.apache.tools.ant.taskdefs.Cvs\n +User task: tempfile     org.apache.tools.ant.taskdefs.TempFile\n +User task: junitreport     \norg.apache.tools.ant.taskdefs.optional.junit.XMLResultAggregator\n +User task: taskdef     org.apache.tools.ant.taskdefs.Taskdef\n +User task: echo     org.apache.tools.ant.taskdefs.Echo\n +User task: ccupdate     \norg.apache.tools.ant.taskdefs.optional.clearcase.CCUpdate\n +User task: java     org.apache.tools.ant.taskdefs.Java\n +User task: renameext     \norg.apache.tools.ant.taskdefs.optional.RenameExtensions\n +User task: vsslabel     org.apache.tools.ant.taskdefs.optional.vss.MSVSSLABEL\n +User task: basename     org.apache.tools.ant.taskdefs.Basename\n +User task: javadoc2     org.apache.tools.ant.taskdefs.Javadoc\n +User task: vsscp     org.apache.tools.ant.taskdefs.optional.vss.MSVSSCP\n +User task: tar     org.apache.tools.ant.taskdefs.Tar\n +User task: vajimport     org.apache.tools.ant.taskdefs.optional.ide.VAJImport\n +User task: setproxy     org.apache.tools.ant.taskdefs.optional.net.SetProxy\n +User task: wlstop     org.apache.tools.ant.taskdefs.optional.ejb.WLStop\n +User task: p4counter     \norg.apache.tools.ant.taskdefs.optional.perforce.P4Counter\n +User task: ilasm     org.apache.tools.ant.taskdefs.optional.dotnet.Ilasm\n +User task: soscheckout     \norg.apache.tools.ant.taskdefs.optional.sos.SOSCheckout\n +User task: apply     org.apache.tools.ant.taskdefs.Transform\n +User task: ccuncheckout     \norg.apache.tools.ant.taskdefs.optional.clearcase.CCUnCheckout\n +User task: jarlib-resolve     \norg.apache.tools.ant.taskdefs.optional.extension.JarLibResolveTask\n +User task: jlink     org.apache.tools.ant.taskdefs.optional.jlink.JlinkTask\n +User task: cvstagdiff     org.apache.tools.ant.taskdefs.cvslib.CvsTagDiff\n +User task: javacc     org.apache.tools.ant.taskdefs.optional.javacc.JavaCC\n +User task: chmod     org.apache.tools.ant.taskdefs.Chmod\n +User task: pvcs     org.apache.tools.ant.taskdefs.optional.pvcs.Pvcs\n +User task: jarlib-manifest     \norg.apache.tools.ant.taskdefs.optional.extension.JarLibManifestTask\n +User task: jar     org.apache.tools.ant.taskdefs.Jar\n +User task: sound     org.apache.tools.ant.taskdefs.optional.sound.SoundTask\n +User task: mparse     org.apache.tools.ant.taskdefs.optional.metamata.MParse\n +User task: blgenclient     \norg.apache.tools.ant.taskdefs.optional.ejb.BorlandGenerateClient\n +User task: uptodate     org.apache.tools.ant.taskdefs.UpToDate\n +User task: genkey     org.apache.tools.ant.taskdefs.GenerateKey\n +User task: javah     org.apache.tools.ant.taskdefs.optional.Javah\n +User task: ccmreconfigure     \norg.apache.tools.ant.taskdefs.optional.ccm.CCMReconfigure\n +User task: fail     org.apache.tools.ant.taskdefs.Exit\n +User task: unzip     org.apache.tools.ant.taskdefs.Expand\n +User task: javac     org.apache.tools.ant.taskdefs.Javac\n +User task: p4add     org.apache.tools.ant.taskdefs.optional.perforce.P4Add\n +User task: jpcoverage     \norg.apache.tools.ant.taskdefs.optional.sitraka.Coverage\n +User task: soslabel     org.apache.tools.ant.taskdefs.optional.sos.SOSLabel\n +User task: depend     org.apache.tools.ant.taskdefs.optional.depend.Depend\n +User task: vssget     org.apache.tools.ant.taskdefs.optional.vss.MSVSSGET\n +User task: deltree     org.apache.tools.ant.taskdefs.Deltree\n +User task: ddcreator     org.apache.tools.ant.taskdefs.optional.ejb.DDCreator\n +User datatype: patternset     org.apache.tools.ant.types.PatternSet\n +User datatype: filterset     org.apache.tools.ant.types.FilterSet\n +User datatype: libfileset     \norg.apache.tools.ant.taskdefs.optional.extension.LibFileSet\n +User datatype: filterreader     org.apache.tools.ant.types.AntFilterReader\n +User datatype: extension     \norg.apache.tools.ant.taskdefs.optional.extension.ExtensionAdapter\n +User datatype: fileset     org.apache.tools.ant.types.FileSet\n +User datatype: dirset     org.apache.tools.ant.types.DirSet\n +User datatype: filelist     org.apache.tools.ant.types.FileList\n +User datatype: filterchain     org.apache.tools.ant.types.FilterChain\n +User datatype: path     org.apache.tools.ant.types.Path\n +User datatype: classfileset     \norg.apache.tools.ant.types.optional.depend.ClassfileSet\n +User datatype: description     org.apache.tools.ant.types.Description\n +User datatype: xmlcatalog     org.apache.tools.ant.types.XMLCatalog\n +User datatype: selector     \norg.apache.tools.ant.types.selectors.SelectSelector\n +User datatype: mapper     org.apache.tools.ant.types.Mapper\n +User datatype: substitution     org.apache.tools.ant.types.Substitution\n +User datatype: extensionSet     \norg.apache.tools.ant.taskdefs.optional.extension.ExtensionSet\n +User datatype: regexp     org.apache.tools.ant.types.RegularExpression\nSetting ro project property: ant.version -> Apache Ant version 1.5.3 compiled \non April 16 2003\nSetting ro project property: ant.file -> C:\\temp\\ant1\\build.xml\nparsing buildfile build.xml with URI = file:C:/temp/ant1/build.xml\nSetting ro project property: ant.project.name -> test-ant\nAdding reference: test-ant -> org.apache.tools.ant.Project@19d0a1\nProject base dir set to: C:\\temp\\ant1\n +Target: test1\n   +Task: stcheckout\nBuild sequence for target `test1' is [test1]\nComplete build sequence is [test1]\n\ntest1:\n[stcheckout] StarTeam version: StarGate SDK 5.1.2, Build 264\n[stcheckout] checking label c1ret_tr16\n[stcheckout] checking label c1biz_tr17\n[stcheckout] checking label c1ret_tr17\n[stcheckout] checking label c1ret_tr16v\n[stcheckout] checking label c1ret_tr14\n[stcheckout] checking label c1ret_tr13\n[stcheckout] checking label c1ret_tr12\n[stcheckout] checking label c1_host\n[stcheckout] checking label c1ret_base_1_1_sync-needed\n[stcheckout] checking label c1biz_base_1_1\n[stcheckout] checking label c1biz_tr9\n[stcheckout] checking label c1ret_tr10\n[stcheckout] checking label c1biz_tr10\n[stcheckout] checking label c1ret_tr9\n[stcheckout] checking label TR0000009_BIZ\n[stcheckout] checking label TR0000009_RET\n[stcheckout] checking label c1ret_tr8\n[stcheckout] using label c1ret_tr8\nBUILD FAILED\nfile:C:/temp/ant1/build.xml:14: Unable to find root folder /charterone/com in re\npository at thor:49201/ps/c1_prod-02-branch_maint\n        at org.apache.tools.ant.taskdefs.optional.starteam.TreeBasedTask.execute\n(TreeBasedTask.java:560)\n        at org.apache.tools.ant.Task.perform(Task.java:341)\n        at org.apache.tools.ant.Target.execute(Target.java:309)\n        at org.apache.tools.ant.Target.performTasks(Target.java:336)\n        at org.apache.tools.ant.Project.executeTarget(Project.java:1339)\n        at org.apache.tools.ant.Project.executeTargets(Project.java:1255)\n        at org.apache.tools.ant.Main.runBuild(Main.java:609)\n        at org.apache.tools.ant.Main.start(Main.java:196)\n        at org.apache.tools.ant.Main.main(Main.java:235)\n--- Nested Exception ---\nUnable to find root folder /charterone/com in repository at thor:49201/ps/c1_pro\nd-02-branch_maint\n        at org.apache.tools.ant.taskdefs.optional.starteam.TreeBasedTask.configu\nreRootStarteamFolder(TreeBasedTask.java:481)\n        at org.apache.tools.ant.taskdefs.optional.starteam.TreeBasedTask.execute\n(TreeBasedTask.java:545)\n        at org.apache.tools.ant.Task.perform(Task.java:341)\n        at org.apache.tools.ant.Target.execute(Target.java:309)\n        at org.apache.tools.ant.Target.performTasks(Target.java:336)\n        at org.apache.tools.ant.Project.executeTarget(Project.java:1339)\n        at org.apache.tools.ant.Project.executeTargets(Project.java:1255)\n        at org.apache.tools.ant.Main.runBuild(Main.java:609)\n        at org.apache.tools.ant.Main.start(Main.java:196)\n        at org.apache.tools.ant.Main.main(Main.java:235)\n\nTotal time: 6 seconds"}, {"count": 1, "tags": [], "bug_id": 20360, "text": "Created attachment 6572\nFolders in our Starteam server", "id": 38062, "time": "2003-05-30T17:58:45Z", "creator": "brian.brooks@metavante.com", "creation_time": "2003-05-30T17:58:45Z", "is_private": false, "attachment_id": 6572}, {"count": 2, "tags": [], "bug_id": 20360, "text": "Created attachment 6573\nlabel c1ret_tr8 in our Starteam server", "id": 38063, "time": "2003-05-30T18:01:24Z", "creator": "brian.brooks@metavante.com", "creation_time": "2003-05-30T18:01:24Z", "is_private": false, "attachment_id": 6573}, {"count": 3, "tags": [], "creator": "brian.brooks@metavante.com", "attachment_id": 6574, "is_private": false, "id": 38064, "time": "2003-05-30T18:01:54Z", "bug_id": 20360, "creation_time": "2003-05-30T18:01:54Z", "text": "Created attachment 6574\nlabel c1ret_tr16 in our Starteam server"}, {"count": 4, "text": "I agree that this behavior is not as it should be - however, I suspect that the\nfault lies with StarTeam code.  The ant code would simply recurse through the\ndirectory trees unless the StarTeam code it calls were throwing an exception.\n\nI also notice that you are using ST 4.2.  This is even older than the 5.1 I used\nwhen coding these tasks and that is causing me trouble that I can't deal with\nwithout access to a 5.2 server.\n\nNonetheless, I will take a look at this when I get the chance and see what I can\ndo with it.", "bug_id": 20360, "attachment_id": null, "id": 38173, "time": "2003-06-02T13:50:53Z", "creator": "scohen@apache.org", "creation_time": "2003-06-02T13:50:53Z", "tags": [], "is_private": false}, {"count": 5, "tags": [], "creator": "brian.brooks@metavante.com", "is_private": false, "id": 38186, "attachment_id": null, "bug_id": 20360, "creation_time": "2003-06-02T15:23:33Z", "time": "2003-06-02T15:23:33Z", "text": "I've been investigated workarounds for the issue.  I've come up with four. \n1. implement stavail that sets a property only if a folder is avail (like the \nant available task).\n2. implement a build listener that tries to stop the build exception \npropagation.\n3. implement failOnError flag\n4. code stcheckout to handle \"Unable to find\" error differently\n\nI think option #4 is ideal.  Option #3 might be faster to implement but mask \ntrue errors.  I don't think option #2 is possible.  Option #1 isolates the \nstcheckout error but still requires would increase the build.xml complexity."}, {"count": 6, "tags": [], "creator": "scohen@apache.org", "is_private": false, "id": 38196, "attachment_id": null, "bug_id": 20360, "creation_time": "2003-06-02T17:14:44Z", "time": "2003-06-02T17:14:44Z", "text": "Could you possibly submit a patch?  I would have to test it against 5.1 but it\nmight be the fastest way forward.\n\nSteve"}, {"count": 7, "tags": [], "creator": "jgraham@metlife.com", "attachment_id": null, "text": "Line 481 in the 1.5.3 code is the check for starteamrootfolder == null (not a \ncatch from ST API block), so the behavior is eas(y|ier) to change.  But (even \nthough I could use similar behavior in TreeBasedTask) I'm not sure the options \npresented are ideal (i.e. why would the behavior of not finding a ViewLabel be \nany different than not finding an explicitly specified Folder).  Perhaps the \nmost ideal solution is to get includes/excludes to work more like fileset (or \nat least include simple folder matching/globbing).  I have an idea how \nsomething like that would work but a) i'm having trouble seeing backwards \ncompatability effects (from both an includes/excludes and ST API perspective) \nand b) given the scope of such a change, would it make sense to attempt it \nagainst the current HEAD???", "id": 39819, "time": "2003-07-02T05:46:53Z", "bug_id": 20360, "creation_time": "2003-07-02T05:46:53Z", "is_private": false}, {"count": 8, "text": "Are you asking whether the change would be better made against the head than\nagainst 1.5.3?  If that is what you are asking, the answer is definitely to go\nagainst the head.  1.5.3 is the end of that line.\n\nI have always had the same inclination to want to make the includes/excludes\nmore like a fileset but have always been deterred by the effect that these\nStarTeam File and Folder objects aren't really files.  I would like to hear more\nabout your idea.", "bug_id": 20360, "attachment_id": null, "id": 39851, "time": "2003-07-02T13:09:06Z", "creator": "scohen@apache.org", "creation_time": "2003-07-02T13:09:06Z", "tags": [], "is_private": false}, {"count": 9, "tags": [], "text": "Jamey, to answer your question \"[w]hy would the behavior of not finding a \nViewLabel be any different than not finding an explicitly specified Folder?\"\n\nHere is the situation.  Code base evolves (new folders/files are added old \nfolders are removed) over time.  At time t=0, we have release r=0.  r=0 \ncontains F1.  D1 contains file F1.  A developer attaches label 1 to file F1.\n\n project\n +---D1\n     \\---F1*1\n\n\nAt time t=1, we have release r=1.  r=1 contains file F2.  D2 contains F2.  The \ndeveloper attaches label 2 to F2.  To include the new D2, the developer \nmodifies the checkout section in build.xml; the developer adds a stcheckout for \nD2.\n\n project\n +---D1\n |   \\---F1*1\n |\n \\---D2\n     \\---F2*2\n     \nAt time t=2, a developer tries to fix a defect in r=0.  The developer tries to \ncheckout label 1 using the latest build.xml (created at t=1).  However, \nbuild.xml,t=1 references D2.  So when stcheckout tries to checkout D2, the \ndeveloper gets an error like\n\n  file:C:/temp/ant1/build.xml:14: Unable to find root folder /project/D2 in re\n  pository at thor:49201/ps/c1_prod-02-branch_maint\n\nBut no developer has attached label 1 to files below D2.  IMHO, stcheckout \nshould gracefully understand that at time t=2, \n\n1. the folder D2 exists in the starteam repository. (*)\n2. no developer has attached label 1 to files below D2.\n\nSo the task can warn the user, but should not fail the build.  The task should \nfail the build only if (*) is false.\ning when I try to checkout", "is_private": false, "bug_id": 20360, "id": 40638, "time": "2003-07-14T14:38:46Z", "creator": "brian.brooks@metavante.com", "creation_time": "2003-07-14T14:38:46Z", "attachment_id": null}, {"count": 10, "tags": [], "bug_id": 20360, "attachment_id": null, "id": 40641, "time": "2003-07-14T15:01:48Z", "creator": "scohen@apache.org", "creation_time": "2003-07-14T15:01:48Z", "is_private": false, "text": "Sounds a bit tricky.  Code would have to catch this StarTeam exception (which\nhopefully would have some attribute distinguishing it from other exceptions) and\nthen look for the folder in the parent view before deciding whether to throw an\nexception or merely warn.  Further, I think this process would need to recurse\nup the view tree.  Not saying we shouldn't do it, but it's a non-trivial change."}, {"count": 11, "tags": [], "creator": "brian.brooks@metavante.com", "is_private": false, "id": 40643, "attachment_id": null, "bug_id": 20360, "creation_time": "2003-07-14T15:15:49Z", "time": "2003-07-14T15:15:49Z", "text": "Do you think this situation is common?  The situation meaning  \n\n1. new stcheckout tasks are added over time the reference new top-level folders \nand developers \n2. developers use new build.xml to access older releases"}, {"count": 12, "tags": [], "creator": "scohen@apache.org", "is_private": false, "id": 43564, "attachment_id": null, "bug_id": 20360, "creation_time": "2003-09-01T19:37:17Z", "time": "2003-09-01T19:37:17Z", "text": "As I think about this, I am strongly inclined not to attempt this fix and have\nset the status to WONTFIX (even though I'm not sure it's fair to classify this\nas a bug), and here is why:\n\nI think it this request puts too much demand for intelligence on Ant and not\nenough on the build script.  It sounds as though you want to use the same build\nscript to build widely different versions of your target, merely changing the\nlabel and have the tool be smart enough to understand the whole StarTeam\nrepository structure over time - even when the versions differ to an extent such\nthat they do not even share the same root local folder!  Might it not be simpler\nto just have different versions of the build script than to change the whole way\nthis task works?  RootStarteamFolder is a fundamental concept to this task and I\nthink you're expecting too much if you're expecting consistent behavior over\nlabeled versions when the root directory is not consistent.\n\nI'm willing to reopen this, but I need a stronger justification for doing so."}]