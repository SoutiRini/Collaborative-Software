[{"count": 0, "tags": [], "text": "Overview:\nWhen contexts are updated through the Tomcat manager interface, ServletContextListener.contextDestroyed implementations which need to load classes throw ClassNotFoundError.\n\nSteps to reproduce:\n1. Create an instance of Tomcat 8.0.20\n2. In server.xml, configure the Host with unpackWARs=\"true\" autoDeploy=\"false\".\n3. Check out the example webapp from https://github.com/austinjones/ClassNotFoundGenerator\n4. Build the testing WAR using the 'distribute' ant task.\n5. Deploy the WAR using an HTTP request to this URL:\nhttp://<your-local-tomcat>/manager/text/deploy?\n war=path/to/workspace/ClassNotFoundGenerator/dist/ClassNotFoundGenerator.war\n &config=path/to/workspace/ClassNotFoundGenerator/web/context.xml\n &path=/ClassNotFoundGenerator\n &update=true\n6. Open localhost.log, and verify the ClassNotFoundError was logged.\n\nActual results:\nThe ClassNotFoundError is thrown by TestcaseContextListener.contextDestroyed, and printed to localhost.log.  Any further work the context listener was responsible for is not executed.\n\nExpected Results:\nThe WebappClassLoader successfully loads classes during ServletContextListener.contextDestroyed, and completes without a throw.  No ClassNotFoundError is printed to localhost.log\n\nBuild Date & Hardware:\nTomcat 8.0.12 on CentOS Linux 6.6\n\nAdditional Builds and Platforms:\nTomcat 8.0.12 on Windows 7 SP1\nTomcat 8.0.20 on Windows 7 SP1\nTomcat 8.0.20 on CentOS Linux 6.6\n\nNote: if you try the 'steps to reproduce' on 8.0.12, the deployment will probably fail due to bug 56398 - which I worked around in 8.0.12.  You'll be able to deploy if you change the name of the test app to 'classnotfoundgenerator'.\n\nAdditional Information:\nServletContextListeners that need to load classes during the contextDestroyed call throw ClassNotFoundError, when the application is deployed as a WAR through the Manager interface.  Here is an example listener, where ThisClassNotFound is not loaded for the first time in contextDestroyed.\n  https://github.com/austinjones/ClassNotFoundGenerator/blob/master/src/com/avadyne/TestcaseContextListener.java\n\nThe stack trace of the ClassNotFoundError on 8.0.20 is:\n6-Mar-2015 14:38:46.838 SEVERE [http-nio-8443-exec-5] org.apache.catalina.core.StandardContext.listenerStop Exception sending context destroyed event to listener instance of class com.avadyne.TestcaseContextListener\n java.lang.NoClassDefFoundError: com/avadyne/ThisClassNotFound\n\tat com.avadyne.TestcaseContextListener.contextDestroyed(TestcaseContextListener.java:27)\n\tat org.apache.catalina.core.StandardContext.listenerStop(StandardContext.java:4775)\n\tat org.apache.catalina.core.StandardContext.stopInternal(StandardContext.java:5385)\n\tat org.apache.catalina.util.LifecycleBase.stop(LifecycleBase.java:232)\n\tat org.apache.catalina.core.StandardContext.reload(StandardContext.java:3739)\n\tat org.apache.catalina.startup.HostConfig.reload(HostConfig.java:1304)\n\tat org.apache.catalina.startup.HostConfig.checkResources(HostConfig.java:1236)\n\tat org.apache.catalina.startup.HostConfig.check(HostConfig.java:1491)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:483)\n\tat org.apache.tomcat.util.modeler.BaseModelMBean.invoke(BaseModelMBean.java:300)\n\tat com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.invoke(DefaultMBeanServerInterceptor.java:819)\n\tat com.sun.jmx.mbeanserver.JmxMBeanServer.invoke(JmxMBeanServer.java:801)\n\tat org.apache.catalina.manager.ManagerServlet.check(ManagerServlet.java:1460)\n\tat org.apache.catalina.manager.ManagerServlet.deploy(ManagerServlet.java:906)\n\tat org.apache.catalina.manager.ManagerServlet.doGet(ManagerServlet.java:344)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:618)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:725)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:291)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n\tat org.apache.catalina.filters.SetCharacterEncodingFilter.doFilter(SetCharacterEncodingFilter.java:108)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:219)\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:613)\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:142)\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)\n\tat org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:610)\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:516)\n\tat org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1086)\n\tat org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:659)\n\tat org.apache.coyote.http11.Http11NioProtocol$Http11ConnectionHandler.process(Http11NioProtocol.java:223)\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1558)\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1515)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\n\tat java.lang.Thread.run(Thread.java:745)\nCaused by: java.lang.ClassNotFoundException: com.avadyne.ThisClassNotFound\n\tat org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1305)\n\tat org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1157)\n\t... 45 more\n\nThe stack trace where Tomcat attempts to load ThisClassNotFound is (8.0.20):\nDaemon Thread [http-nio-8443-exec-31] (Suspended)\t\n\towns: WebappClassLoader  (id=3483)\t\n\towns: TestcaseContextListener  (id=3488)\t\n\towns: StandardContext  (id=3324)\t\n\towns: HostConfig  (id=3323)\t\n\towns: SecureNioChannel  (id=3313)\t\n\tStandardRoot.getResourceInternal(String, boolean) line: 302\t\n\tCache.getResource(String, boolean) line: 65\t\n\tStandardRoot.getResource(String, boolean, boolean) line: 216\t\n\tStandardRoot.getClassLoaderResource(String) line: 225\t\n\tWebappClassLoader(WebappClassLoaderBase).findResourceInternal(String, String) line: 2548\t\n\tWebappClassLoader(WebappClassLoaderBase).findClassInternal(String) line: 2405\t\n\tWebappClassLoader(WebappClassLoaderBase).findClass(String) line: 854\t\n\tWebappClassLoader(WebappClassLoaderBase).loadClass(String, boolean) line: 1274\t\n\tWebappClassLoader(WebappClassLoaderBase).loadClass(String) line: 1157\t\n\tTestcaseContextListener.contextDestroyed(ServletContextEvent) line: 27\t\n\tStandardContext.listenerStop() line: 4775\t\n\tStandardContext.stopInternal() line: 5385\t\n\tStandardContext(LifecycleBase).stop() line: 232\t\n\tStandardContext.reload() line: 3739\t\n\tHostConfig.reload(HostConfig$DeployedApplication) line: 1304\t\n\tHostConfig.checkResources(HostConfig$DeployedApplication) line: 1236\t\n\tHostConfig.check(String) line: 1491\t\n\tNativeMethodAccessorImpl.invoke0(Method, Object, Object[]) line: not available [native method]\t\n\tNativeMethodAccessorImpl.invoke(Object, Object[]) line: 62\t\n\tDelegatingMethodAccessorImpl.invoke(Object, Object[]) line: 43\t\n\tMethod.invoke(Object, Object...) line: 483\t\n\tBaseModelMBean.invoke(String, Object[], String[]) line: 300\t\n\tDefaultMBeanServerInterceptor.invoke(ObjectName, String, Object[], String[]) line: 819\t\n\tJmxMBeanServer.invoke(ObjectName, String, Object[], String[]) line: 801\t\n\tManagerServlet.check(String) line: 1460\t\n\tManagerServlet.deploy(PrintWriter, String, ContextName, String, boolean, StringManager) line: 906\t\n\tManagerServlet.doGet(HttpServletRequest, HttpServletResponse) line: 344\t\n\tManagerServlet(HttpServlet).service(HttpServletRequest, HttpServletResponse) line: 618\t\n\tManagerServlet(HttpServlet).service(ServletRequest, ServletResponse) line: 725\t\n\tApplicationFilterChain.internalDoFilter(ServletRequest, ServletResponse) line: 291\t\n\tApplicationFilterChain.doFilter(ServletRequest, ServletResponse) line: 206\t\n\tWsFilter.doFilter(ServletRequest, ServletResponse, FilterChain) line: 52\t\n\tApplicationFilterChain.internalDoFilter(ServletRequest, ServletResponse) line: 239\t\n\tApplicationFilterChain.doFilter(ServletRequest, ServletResponse) line: 206\t\n\tSetCharacterEncodingFilter.doFilter(ServletRequest, ServletResponse, FilterChain) line: 108\t\n\tApplicationFilterChain.internalDoFilter(ServletRequest, ServletResponse) line: 239\t\n\tApplicationFilterChain.doFilter(ServletRequest, ServletResponse) line: 206\t\n\tStandardWrapperValve.invoke(Request, Response) line: 219\t\n\tStandardContextValve.invoke(Request, Response) line: 106\t\n\tBasicAuthenticator(AuthenticatorBase).invoke(Request, Response) line: 613\t\n\tStandardHostValve.invoke(Request, Response) line: 142\t\n\tErrorReportValve.invoke(Request, Response) line: 79\t\n\tAccessLogValve(AbstractAccessLogValve).invoke(Request, Response) line: 610\t\n\tStandardEngineValve.invoke(Request, Response) line: 88\t\n\tCoyoteAdapter.service(Request, Response) line: 516\t\n\tHttp11NioProcessor(AbstractHttp11Processor).process(SocketWrapper<S>) line: 1086\t\n\tHttp11NioProtocol$Http11ConnectionHandler(AbstractProtocol$AbstractConnectionHandler).process(SocketWrapper<S>, SocketStatus) line: 659\t\n\tHttp11NioProtocol$Http11ConnectionHandler.process(SocketWrapper<NioChannel>, SocketStatus) line: 223\t\n\tNioEndpoint$SocketProcessor.doRun(SelectionKey, NioEndpoint$KeyAttachment) line: 1558\t\n\tNioEndpoint$SocketProcessor.run() line: 1515\t\n\tThreadPoolExecutor(ThreadPoolExecutor).runWorker(ThreadPoolExecutor$Worker) line: 1142\t\n\tThreadPoolExecutor$Worker.run() line: 617\t\n\tTaskThread$WrappingRunnable.run() line: 61\t\n\tTaskThread(Thread).run() line: 745\t\n\nThe ClassLoader gives up on loading the class.  The WebResourceSet it would have used to load the class from (in the method StandardRoot.getResourceInternal) is a DirResourceSet pointed to the exploded directory path - e.g. /path/to/tomcat/webapps/ClassNotFoundGenerator/.  The path it generates in DirResourceSet.getResource is /path/to/tomcat/webapps/ClassNotFoundGenerator/WEB-INF/classes/com/avadyne/ThisClassNotFound.class - the path is correct.  The file doesn't exist, and it returns a new EmptyResource(root, path, f).\n\nWhen the WebappClassLoader attempts to load the class, the .class file (and the entire exploded directory) is not on the disk.  The bug occurs during these frames of the ClassNotFoundError stack trace (8.0.20).\n\n java.lang.NoClassDefFoundError: com/avadyne/ThisClassNotFound\n...\n \tat org.apache.catalina.core.StandardContext.reload(StandardContext.java:3739)\n\tat org.apache.catalina.startup.HostConfig.reload(HostConfig.java:1304)\n\tat org.apache.catalina.startup.HostConfig.checkResources(HostConfig.java:1236)\n...\n\nHostConfig.checkResources:1231 deletes the exploded directory\nHostConfig.checkResources:1236 calls into StandardContext.reload\nStandardContext.reload:3739 eventually invokes the ServletContextListeners\n\nOnce the contextDestroyed listeners are executed, the .class file doesn't exist (HostConfig.checkResources deleted it).  \n\nIt is unsafe for HostConfig.checkResources to delete the unpacked directory before the context is stopped.  However, WebappClassLoader is correct to throw a ClassNotFoundError, since the class doesn't exist on disk.", "is_private": false, "id": 182156, "creator": "austinjones@avadynehealth.com", "time": "2015-03-27T18:53:32Z", "bug_id": 57772, "creation_time": "2015-03-27T18:53:32Z", "attachment_id": null}, {"count": 1, "attachment_id": null, "bug_id": 57772, "is_private": false, "id": 182157, "time": "2015-03-27T18:54:29Z", "creator": "austinjones@avadynehealth.com", "creation_time": "2015-03-27T18:54:29Z", "tags": [], "text": "There is additional information in the Tomcat users mailing list thread entitled 'ClassNotFoundError on context unload'."}, {"count": 2, "tags": [], "bug_id": 57772, "attachment_id": null, "text": "(In reply to Austin Jones from comment #1)\n> There is additional information in the Tomcat users mailing list thread\n> entitled 'ClassNotFoundError on context unload'.\n\nThe thread referred to is here:\nhttp://marc.info/?l=tomcat-user&m=142697641505022&w=2", "id": 182158, "time": "2015-03-27T19:10:57Z", "creator": "chuck.caldarale@unisys.com", "creation_time": "2015-03-27T19:10:57Z", "is_private": false}, {"count": 3, "attachment_id": null, "bug_id": 57772, "is_private": false, "id": 182160, "time": "2015-03-27T21:53:15Z", "creator": "austinjones@avadynehealth.com", "creation_time": "2015-03-27T21:53:15Z", "tags": [], "text": "Sorry, the 8.0.12 case issue is bug 56938."}, {"count": 4, "tags": [], "bug_id": 57772, "text": "IIRC, this also affects 8.0.21.", "id": 182162, "time": "2015-03-28T01:58:14Z", "creator": "chris@christopherschultz.net", "creation_time": "2015-03-28T01:58:14Z", "is_private": false, "attachment_id": null}, {"count": 5, "attachment_id": null, "bug_id": 57772, "is_private": false, "id": 182163, "time": "2015-03-28T09:04:27Z", "creator": "markt@apache.org", "creation_time": "2015-03-28T09:04:27Z", "tags": [], "text": "Thanks for the analysis. I see what is going on and why. In theory, the fix is simple: don't delete the directory until the app has been stopped. In practice, the cleanest way to fix this needs some thought."}, {"count": 6, "tags": [], "bug_id": 57772, "text": "Fixed in trunk, 8.0.x (for 8.0.22 onwards) and 7.0.x (for 7.0.62 onwards).\n\nThanks for the report, the analysis and the test case.", "id": 182217, "attachment_id": null, "creator": "markt@apache.org", "creation_time": "2015-04-01T17:10:07Z", "time": "2015-04-01T17:10:07Z", "is_private": false}, {"count": 7, "tags": [], "bug_id": 57772, "text": "(In reply to Mark Thomas from comment #6)\n> Thanks for the report, the analysis and the test case.\n\nNo problem.  Thank you for fixing this so quickly!", "id": 182220, "time": "2015-04-01T18:35:53Z", "creator": "austinjones@avadynehealth.com", "creation_time": "2015-04-01T18:35:53Z", "is_private": false, "attachment_id": null}]