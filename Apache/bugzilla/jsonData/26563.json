[{"count": 0, "tags": [], "bug_id": 26563, "attachment_id": null, "id": 51516, "time": "2004-01-31T04:33:45Z", "creator": "senthilandsenthil@yahoo.com", "creation_time": "2004-01-31T04:33:45Z", "is_private": false, "text": "I am using fileset inside a script def task. beanshell is used as a scripting \nlanguage.\n\nWhen I supply just one fileset to the the task defined with scriptdef then it \npasses it as fileset.\n\nIf I supply more than one element then it passes it as ArrayList. \n\nSay \n\n\t <scriptdef name=\"scanandrunscript\" language=\"beanshell\">\n\t    <attribute name=\"scriptname\"/>\n\t    <element name=\"fileset\" type=\"fileset\"/>\n\t    <![CDATA[\n\n\t    java.util.ArrayList fs = elements.get(\"fileset\");\n\t    \n\t    java.util.Iterator itr = fs.iterator();\n\t    \n\t    while(itr.hasNext()){\n\t    \n\t    \torg.apache.tools.ant.types.FileSet fs = \n(org.apache.tools.ant.types.FileSet)itr.next();\n\t\torg.apache.tools.ant.DirectoryScanner scanner = \nfs.getDirectoryScanner(project);\n\t\tscanner.scan();\n\t\tString[] incfiles = scanner.getIncludedFiles();\n\t\tfor(int i = 0 ; i < incfiles.length ; i++ ){\n\t\t\tSystem.out.println(incfile[i]);\n\t\t\tsource(incfile[i]);\n\t\t}\n\t    }\n\n\t    ]]>\n\t  </scriptdef>\n\nruns properly with \n\n\t<target name=\"hello\" >\n\n\t\t<scanandrunscript>\n\t\t\t<fileset dir=\"./ssa/services\" casesensitive=\"no\">\n\t\t\t  <filename name=\"*/misc/backend/installscripts/*.bsh\"/>\n\t\t\t</fileset>\n\t\t\t<fileset dir=\"./ssa/services\" casesensitive=\"no\">\n\t\t\t  <filename name=\"*/backend/installscripts/*.bsh\"/>\n\t\t\t</fileset>\n\t\t\t\n\t\t</scanandrunscript>\n\n\t</target>\nbut not with\n\n\t<target name=\"hello\" >\n\n\t\t<scanandrunscript>\n\t\t\t<fileset dir=\"./ssa/services\" casesensitive=\"no\">\n\t\t\t  <filename name=\"*/backend/installscripts/*.bsh\"/>\n\t\t\t</fileset>\t\t\t\n\t\t</scanandrunscript>\n\n\t</target>\n\nI have to change the implementation to \t    FileSet fs = elements.get\n(\"fileset\");\n\nThis is not generic enough for a library task like script def."}, {"count": 1, "tags": [], "creator": "conor@apache.org", "text": "Ant always passes nested elements as an ArrayList regardless of the number of\nactual elements. I tried with the latest beanshell and bsf and this can be\nverified by printing the type of fs in your script. I added this line to your\nscript.\n\nSystem.out.println(\"Type of fs = \" + fs.getClass().getName());\n\nNote, however, that your script has an error.\n\nIn the line \nSystem.out.println(incfile[i]);\n\nthe variable you refer to is incfile, but the array you have extracted is\nincfiles. This does give an error about \" Not an array\", which is essentially\ncorrect. Spare me from implicit declaration languages :-)\n\nIt can be hard to track down script errors since they are embedded in an ant\nscript and the line numbers are hard to interpret. When I corrected the error\nabove, I got the following output \n\nD:\\development\\apache\\ant-bugs\\26563>ant test1\nBuildfile: build.xml\n\ntest1:\n[scanandrunscript] Type of fs = java.util.ArrayList\n[scanandrunscript] scripts\\group1\\test1.bsh\n\nBUILD SUCCESSFUL\nTotal time: 1 second\nD:\\development\\apache\\ant-bugs\\26563>ant test2\nBuildfile: build.xml\n\ntest2:\n[scanandrunscript] Type of fs = java.util.ArrayList\n[scanandrunscript] scripts\\group1\\test1.bsh\n[scanandrunscript] scripts\\group2\\test2.bsh\n\nBUILD SUCCESSFUL\nTotal time: 2 seconds\n\nNote that I had to change the script around since my dirs are not the same as\nyour's, of course. Note also that bsh may not find your scripts unless the names\nare relative to current dir - i.e. I had to set my fileset's basedir to \".\"", "id": 51518, "time": "2004-01-31T09:37:03Z", "bug_id": 26563, "creation_time": "2004-01-31T09:37:03Z", "is_private": false, "attachment_id": null}]