[{"count": 0, "tags": [], "creator": "rwinch@gmail.com", "is_private": false, "text": "If ServletRequest.getAsyncContext() IllegalStateException is invoked and has not been put into asynchronous mode an . From the javadoc [1]:\n\n> Throws: IllegalStateException - if this request has not been put into\n> asynchronous mode, i.e., if neither startAsync() nor \n> startAsync(ServletRequest,ServletResponse) has been called\n\nFor implementations of HttpServletRequestWrapper that override this method, the fact that result can be null can cause problems [2]. It appears there are parts of tomcat that check if getAsyncContext() is null rather than checking isAsycStarted(). For example, ApplicationDispatcher checks if getAsyncContext() is null.\n\n\n[1] http://docs.oracle.com/javaee/6/api/javax/servlet/ServletRequest.html#getAsyncContext()\n[2] https://github.com/spring-cloud/spring-cloud-netflix/issues/868", "id": 189890, "time": "2016-04-01T15:05:15Z", "bug_id": 59261, "creation_time": "2016-04-01T15:05:15Z", "attachment_id": null}, {"count": 1, "attachment_id": null, "bug_id": 59261, "is_private": false, "id": 189891, "time": "2016-04-01T15:06:39Z", "creator": "rwinch@gmail.com", "creation_time": "2016-04-01T15:06:39Z", "tags": [], "text": "I messed up the description some. Sorry about that. It should read:\n\nIf ServletRequest.getAsyncContext() is invoked and has not been put into asynchronous mode an IllegalStateException should be thrown."}, {"count": 2, "attachment_id": null, "bug_id": 59261, "text": "Maybe that is what the specification says, but using null in this situation is considerably better than using an ISE which should be reserved for some invalid/meaningless situations.\n\nBad design ! [being part of that EG, I include myself in that since I missed it then ...]", "id": 189892, "time": "2016-04-01T15:32:24Z", "creator": "remm@apache.org", "creation_time": "2016-04-01T15:32:24Z", "tags": [], "is_private": false}, {"count": 3, "tags": [], "text": "Right now the spec is that getAsyncContext() should throw an ISE if isAsyncStarted returns false (which is not the same as asyncContext != null). This is an extremely risky change, some other places do check if asyncContext is null because it may have been there but is no longer started, so it cannot be swapped with isAsyncStarted.", "is_private": false, "id": 189984, "creator": "remm@apache.org", "time": "2016-04-05T20:58:55Z", "bug_id": 59261, "creation_time": "2016-04-05T20:58:55Z", "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 59261, "is_private": false, "count": 4, "id": 190032, "time": "2016-04-06T22:02:02Z", "creator": "markt@apache.org", "creation_time": "2016-04-06T22:02:02Z", "text": "On the plus side, the async code is reasonably well covered by the unit tests.\n\nThe down side, as R\u00e9my points out is that we'll need to carefully review all the calls to getAsyncContext(). We may also need a getAsyncContextInternal() method (or something along those lines) so we can get the async context in those cases where we need it even if isAsyncStarted() is false.\n\nI guess working on this in 9.0.x, and ironing out the wrinkles before slowly back-porting is the way to go."}, {"count": 5, "attachment_id": null, "bug_id": 59261, "text": "Reading the Javadoc, the test is 'has one of the startAsync() methods been called' which is not quite the same as isAsyncStarted() == false. The spec document isn't much better. It uses the phrase 'has not been put in asynchronous mode'.\n\nThe key question is does the spec really mean '...has not been put in...' or was the intent to mean '...is not currently in...'. R\u00e9my, do you have any insight on this?", "id": 190033, "time": "2016-04-06T22:14:25Z", "creator": "markt@apache.org", "creation_time": "2016-04-06T22:14:25Z", "tags": [], "is_private": false}, {"count": 6, "attachment_id": null, "bug_id": 59261, "is_private": false, "id": 190034, "time": "2016-04-06T22:33:57Z", "creator": "remm@apache.org", "creation_time": "2016-04-06T22:33:57Z", "tags": [], "text": "isAsyncStarted is correct, and it's not the same as asyncContext != null, I checked GF before writing comment 3. However; Tomcat needs to know if a startAsync has been called earlier for its cleanup operations.\n\nI was also thinking about a getAsyncContextInternal method, but it needs to be accessed on the internal Request class, which is harder."}, {"attachment_id": null, "tags": [], "bug_id": 59261, "text": "isAsyncStarted() makes sense and if we code to that and it is later relaxed we won't need to change anything. I think I am most of the way to a working patch for this.\n\nWe also need to raise this with the Servlet EG for clarification.", "count": 7, "id": 190043, "time": "2016-04-07T12:53:52Z", "creator": "markt@apache.org", "creation_time": "2016-04-07T12:53:52Z", "is_private": false}, {"count": 8, "tags": [], "creator": "markt@apache.org", "text": "Fixed in trunk for 9.0.0.M5 and the unit tests still all pass.", "id": 190047, "time": "2016-04-07T16:21:04Z", "bug_id": 59261, "creation_time": "2016-04-07T16:21:04Z", "is_private": false, "attachment_id": null}, {"count": 9, "attachment_id": null, "bug_id": 59261, "is_private": false, "id": 190056, "time": "2016-04-07T19:48:08Z", "creator": "markt@apache.org", "creation_time": "2016-04-07T19:48:08Z", "tags": [], "text": "I've back-ported this to 8.5.x for 8.5.1 and 8.0.x for 8.0.34.\n\nI'll hold off on back-porting this to 7.0.x until after the 7.0.69 tag."}, {"count": 10, "attachment_id": null, "bug_id": 59261, "text": "Fix applied to 7.0.x for 7.0.70 onwards.", "id": 190221, "time": "2016-04-13T19:22:12Z", "creator": "markt@apache.org", "creation_time": "2016-04-13T19:22:12Z", "tags": [], "is_private": false}]