[{"count": 0, "tags": [], "bug_id": 38903, "attachment_id": null, "text": "There is a \"request_rec::allowed\" member, which is documented like so\n(in include/httpd.h, struct request_rec):\n\n    /**\n     *  'allowed' is a bitvector of the allowed methods.\n     *\n     *  A handler must ensure that the request method is one that\n     *  it is capable of handling.  Generally modules should DECLINE\n     *  any request methods they do not handle.  Prior to aborting the\n     *  handler like this the handler should set r->allowed to the list\n     *  of methods that it is willing to handle.  This bitvector is used\n     *  to construct the \"Allow:\" header required for OPTIONS requests,\n     *  and HTTP_METHOD_NOT_ALLOWED and HTTP_NOT_IMPLEMENTED status codes.\n     *\n     *  Since the default_handler deals with OPTIONS, all modules can\n     *  usually decline to deal with OPTIONS.  TRACE is always allowed,\n     *  modules don't need to set it explicitly.\n     *\n     *  Since the default_handler will always handle a GET, a\n     *  module which does *not* implement GET should probably return\n     *  HTTP_METHOD_NOT_ALLOWED.  Unfortunately this means that a Script GET\n     *  handler can't be installed by mod_actions.\n     */\n    apr_int64_t allowed; \n\nBut \"Allow:\" is never actually constructed out of this member (done\nin http/http_protocol.c, by make_allow()):\n\n/* Build the Allow field-value from the request handler method mask.\n * Note that we always allow TRACE, since it is handled below.\n */\nstatic char *make_allow(request_rec *r) \n\nNaturally, this member is never referenced in this function,\nnor in any other one across the entire package, except that it is\nonly _set_ by various modules as to how it is documented --  see above,\nlike for example in mod_status.c.\n\nThus, setting of r->allowed does not work, and only \"Allow: TRACE\" gets\nreturned in the response headers regardless of the value of r->allowed\nwhen HTTP_METHOD_NOT_ALLOWED results from a handler.", "id": 86628, "time": "2006-03-09T03:06:05Z", "creator": "lavr@ncbi.nlm.nih.gov", "creation_time": "2006-03-09T03:06:05Z", "is_private": false}, {"count": 1, "tags": [], "text": "This is a real problem.\n\nap_send_http_options() looks at r->allowed_methods->method_mask, not r->allowed.\n\nYou can do something like this as a workaround:\n... r->allowed_methods->method_mask = r->allowed;\n... ap_send_http_options(r);\n", "attachment_id": null, "id": 101226, "creator": "osxauth@yahoo.com", "time": "2007-03-30T08:01:13Z", "bug_id": 38903, "creation_time": "2007-03-30T08:01:13Z", "is_private": false}]