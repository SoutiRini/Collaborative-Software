[{"count": 0, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "text": "As per section 1.23 of the EL spec, the current ELResolver should be given an opportunity to apply custom type conversion before falling back on the standard rules.\n\nSee also http://tomcat.markmail.org/thread/utk3nsn4aakjl4gj", "id": 179511, "time": "2014-12-04T14:14:44Z", "bug_id": 57309, "creation_time": "2014-12-04T14:14:44Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 57309, "attachment_id": null, "id": 179515, "time": "2014-12-04T15:07:40Z", "creator": "markt@apache.org", "creation_time": "2014-12-04T15:07:40Z", "is_private": false, "text": "Proposed fix:\nhttps://github.com/markt-asf/tomcat/commit/53e9f7b44e1cd450ab27025a0202dbf4d383851d\nhttps://github.com/markt-asf/tomcat/commit/d075c49460df3bcfbda3e6ed9f3e357003bad5df\n\nI plan to commit this to trunk and back-port to 8.0.x once svn returns to read-write."}, {"count": 2, "tags": [], "bug_id": 57309, "text": "This has been fixed in trunk and 8.0.x (for 8.0.16 onwards).", "id": 179557, "time": "2014-12-05T17:39:18Z", "creator": "markt@apache.org", "creation_time": "2014-12-05T17:39:18Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 57309, "text": "Reviewing r1643367\nReviewing ELSupport.compare(Object, Object) and coerceToNumber(ctx, Object, BigDecimal.class) calls there:\n\n1. The first branch in compare() method:\n        if (isBigDecimalOp(obj0, obj1)) {\n            BigDecimal bd0 = (BigDecimal) coerceToNumber(ctx, obj0, BigDecimal.class);\n            BigDecimal bd1 = (BigDecimal) coerceToNumber(ctx, obj1, BigDecimal.class);\n            return bd0.compareTo(bd1);\n        }\n\nIn this branch isBigDecimalOp check returned true, so one of operands is already a BigDecimal.\n\nQUESTION: Does coerceToNumber() need to call ELResolver to convert it? Can it skip conversion if the object is already of the expected type.\n\n\n2. Minor\n                if (ctx.isPropertyResolved()) {\n                    return (Number) result;\n                }\nIt could be type.cast(result).", "id": 179583, "time": "2014-12-06T16:43:04Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2014-12-06T16:43:04Z", "is_private": false, "attachment_id": null}]