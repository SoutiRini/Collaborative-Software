[{"count": 0, "tags": [], "creator": "aberglas@rsa.com", "is_private": false, "text": "Jasper is *extremely* slow at compiling .tag files packaged in a .jar -- tens \nof seconds per JSP. One cause is that .tag files are repeatedly recompiled for \neach .jsp even though they have not changed.\n\nThe following few lines fix this.  The added code is marked between // --------\n AJB markers.  \nIt effectively turns off the timestamp checking on .jar files.\n\nThis does NOT actually introduce a bug.  There is an existing bug in that .jsp \nfiles are not \nautomatically recompiled if any .tags in .jars are changed.  So you need to \npurge work in either case.  \nA proper fix would be to check dependencies properly, at least to the .jar \nfile itself.  \nBut the current fix is *much* better that the existing behavior.\n\nThere are better solutions, but an 80% solution is better than no solution.\n\n\n// Tomcat 6.0.10 Src deployed version.\n\npublic class JspCompilationContext {...\n\n    public void compile() throws JasperException, FileNotFoundException {\n        createCompiler();\n\n        // ------------ begin AJB\n        // Hack to stop .tag files that are packaged in .jars being recompiled \nfor every single .jsp that uses them.\n        // The hack means that .tag files will not be automatically recompiled \nif they change -- you need to delete work area.\n        // But that was actually an existing bug -- .jsps are not dependent on \nthe .tag .jars so the work area needed deleting anyway.\n        // (Outstanding is to compile multiple .tags in one pass and so make \nthe process Much faster.)\n        boolean outDated;\n        if (isPackagedTagFile) outDated = ! new File(getClassFileName()).exists\n();\n        else outDated = jspCompiler.isOutDated();\n//        AjbLog.log(\"### Compiler.compile \" + jspUri + \" pkgTagFile \" + \nisPackagedTagFile + \" outDated \" + outDated + \" \" + getClassFileName());\n        if (outDated) {\n//     if (isPackagedTagFile || jspCompiler.isOutDated()) { // original code.\n//     ---------------- end AJB\n            try {\n                jspCompiler.removeGeneratedFiles();\n                jspLoader = null;\n                jspCompiler.compile();\n                jsw.setReload(true);\n                jsw.setCompilationException(null);\n            } catch (JasperException ex) {\n                // Cache compilation exception\n                jsw.setCompilationException(ex);\n                throw ex;\n            } catch (Exception ex) {\n                JasperException je = new JasperException(\n                            Localizer.getMessage(\"jsp.error.unable.compile\"),\n                            ex);\n                // Cache compilation exception\n                jsw.setCompilationException(je);\n                throw je;\n            }\n        }\n    }", "id": 109996, "time": "2007-10-30T21:10:48Z", "bug_id": 43741, "creation_time": "2007-10-30T21:10:48Z", "attachment_id": null}, {"count": 1, "tags": [], "text": "I'd much rather fix the cause than the symptom. The proper fix for this will be\nto implement the enhancement described in bug 43742.\n\nI'll check the code to see if the JSP -> JAR dependency has been fixed (and if\nit hasn't - fix it) but if you have a bug number that would save me some time.", "is_private": false, "id": 112605, "creator": "markt@apache.org", "time": "2008-01-07T15:52:21Z", "bug_id": 43741, "creation_time": "2008-01-07T15:52:21Z", "attachment_id": null}, {"count": 2, "tags": [], "creator": "markt@apache.org", "text": "I have looked at this some more.\n\nI think your patch is pretty much spot on. Generally, if a JAR changes, the app\nneeds to be re-loaded (eg using reloadable or watched resources). That is true\nfor any other JAR and I don't see why it shouldn't be true for JARs containing\ntag files.\n\nCompiling tags in a single pass (bug 43742) would also help.\n\nBug 43878 will also contribute to poor performance, although in a different way.\n\nYour patch has been applied to trunk and proposed for 6.0.x.", "id": 113277, "time": "2008-01-29T15:17:14Z", "bug_id": 43741, "creation_time": "2008-01-29T15:17:14Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "text": "My relaoding comment is wrong. The app needs to be redployed (ie the work dir\ncleared as pointed out in the original report). I have reverted the patch and am\nworking on one that handles tags in JARs.", "is_private": false, "id": 113351, "creator": "markt@apache.org", "time": "2008-02-01T14:33:24Z", "bug_id": 43741, "creation_time": "2008-02-01T14:33:24Z", "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 43741, "is_private": false, "count": 4, "id": 113418, "time": "2008-02-04T15:01:56Z", "creator": "markt@apache.org", "creation_time": "2008-02-04T15:01:56Z", "text": "I have a proper fix for this now:\nhttp://svn.apache.org/viewvc?rev=618481&view=rev\n\nIt has been committed to trunk and proposed for 6.0.x"}, {"count": 5, "attachment_id": null, "bug_id": 43741, "is_private": false, "id": 113984, "time": "2008-02-21T14:42:19Z", "creator": "markt@apache.org", "creation_time": "2008-02-21T14:42:19Z", "tags": [], "text": "This has been committed to 6.0.x and will be in 6.0.17 onwards."}]