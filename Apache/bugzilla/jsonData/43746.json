[{"count": 0, "tags": [], "text": " ", "is_private": false, "id": 110019, "creator": "andreas@apache.org", "time": "2007-10-31T05:03:31Z", "bug_id": 43746, "creation_time": "2007-10-31T05:03:31Z", "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 43746, "text": "The save request still contains the attribute, so it is removed on the server.", "id": 110020, "time": "2007-10-31T05:03:57Z", "creator": "andreas@apache.org", "creation_time": "2007-10-31T05:03:57Z", "is_private": false, "attachment_id": null}, {"count": 2, "attachment_id": null, "bug_id": 43746, "is_private": false, "id": 110021, "time": "2007-10-31T05:06:22Z", "creator": "andreas@apache.org", "creation_time": "2007-10-31T05:06:22Z", "tags": [], "text": "It is removed in modules/xhtml/xslt/clean-xhtml.xsl:\n\n  <!-- Unsupported by the schema -->\n  <xsl:template match=\"@shape|@target|xhtml:u\">\n    <xsl:apply-templates />\n  </xsl:template>\n  \nWhy does the XSLT make assumptions about the schema?"}, {"count": 3, "tags": [], "text": "So the problem lies in the XHTML module.", "is_private": false, "bug_id": 43746, "id": 110022, "time": "2007-10-31T05:07:55Z", "creator": "andreas@apache.org", "creation_time": "2007-10-31T05:07:55Z", "attachment_id": null}, {"count": 4, "attachment_id": null, "bug_id": 43746, "text": "target isn't a valid attribute of, well anything in XHTML 1.0 strict. And u\nisn't an element in XHTML 1.0 strict either. @shape is valid for area and a, so\nthat one could be removed.(In reply to comment #2)\n> It is removed in modules/xhtml/xslt/clean-xhtml.xsl:\n> \n>   <!-- Unsupported by the schema -->\n>   <xsl:template match=\"@shape|@target|xhtml:u\">\n>     <xsl:apply-templates />\n>   </xsl:template>\n>   \n> Why does the XSLT make assumptions about the schema?\n\nThe assumption is to support XHTML 1.0 Strict, which would make sense to me.\ntarget isn't a valid attribute of, well anything in XHTML 1.0 strict. And u\nisn't an element in XHTML 1.0 strict either. @shape is valid for area and a, so\nthat one could be removed.", "id": 110031, "time": "2007-10-31T06:51:29Z", "creator": "rfrovarp@apache.org", "creation_time": "2007-10-31T06:51:29Z", "tags": [], "is_private": false}, {"count": 5, "tags": [], "bug_id": 43746, "text": "The Uniklinik Freiburg needs the attribute.\n\nMaybe we could add an option which XHTML schema to use\n(strict/transitional/basic) and choose the schema and clean-xhtml.xsl accordingly?", "id": 110032, "attachment_id": null, "creator": "andreas@apache.org", "creation_time": "2007-10-31T06:55:11Z", "time": "2007-10-31T06:55:11Z", "is_private": false}, {"count": 6, "tags": [], "creator": "rfrovarp@apache.org", "text": "(In reply to comment #5)\n> The Uniklinik Freiburg needs the attribute.\n> \n> Maybe we could add an option which XHTML schema to use\n> (strict/transitional/basic) and choose the schema and clean-xhtml.xsl accordingly?\n\nWell, this is a larger issue. They should go through and edit the file, due to\nthe fact they have a custom non-standard need and should be able to put their\nversion of the file in their publication. I need center align and have had to\nhack my rng files to include it. \n\nAnyone who uses FCKeditor or TinyMCE has to hack the\nsrc/modules/xhtml/resources/schemas/xhtml.rng file to include a larger set of\nXHTML. Doing this break BXE unfortunately. \n\nAdding an option to easily choose the level of support makes sense. However, the\ndefault should be a subset of XHTML Strict. ", "id": 110033, "time": "2007-10-31T07:05:05Z", "bug_id": 43746, "creation_time": "2007-10-31T07:05:05Z", "is_private": false, "attachment_id": null}]