[{"count": 0, "tags": [], "bug_id": 25202, "attachment_id": null, "id": 48492, "creation_time": "2003-12-04T14:39:21Z", "time": "2003-12-04T14:39:21Z", "creator": "dietmar.rabich@web.de", "text": "I'm using XHTML 1.1 with SSI and Encoding UTF-8. Within the document is a\nvariable declaration like this:\n\n<!--#set var=\"test\" value=\"&auml;&ouml;&uuml;\" -->\n\nFor the output I take this Statements:\n\n<!--#echo encoding=\"entity\" var=\"test\" -->\n<!--#echo encoding=\"none\" var=\"test\" -->\n\nThe page shown in the browser doesn't contain the HTML entities &auml; etc., but\n1-Byte-Characters (instead of 2-Byte-Characters) possibly coded by ISO-8859-1,\nnot UTF-8. (So the document is not Valid XHTML.)\n\nI expected the HTML entity in the generated HTML-File.", "is_private": false}, {"count": 1, "tags": [], "bug_id": 25202, "text": "Confirmed for 2.0.40\n", "id": 50827, "time": "2004-01-20T18:37:22Z", "creator": "zart@zartsoft.ru", "creation_time": "2004-01-20T18:37:22Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 25202, "attachment_id": null, "text": "I've been having the same problem -- confirmed in both Apache 1.3.29 and Apache 2.0.48.\n\nmod_include decodes HTML entities in the #set var command. This may be useful/desirable for other \nSSI commands, but really the encoding of variables should be left to user (who can use the #echo \nencoding=\"xxx\" command to influence how it's output.", "id": 52458, "time": "2004-02-17T22:42:18Z", "creator": "apache@slebog.net", "creation_time": "2004-02-17T22:42:18Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 25202, "text": "Created attachment 10399\nPatch for Apache 1.3.29", "id": 52459, "time": "2004-02-17T22:47:52Z", "creator": "apache@slebog.net", "creation_time": "2004-02-17T22:47:52Z", "is_private": false, "attachment_id": 10399}, {"count": 4, "tags": [], "bug_id": 25202, "text": "Created attachment 10400\nPatch for Apache 2.0.48", "id": 52460, "time": "2004-02-17T22:48:34Z", "creator": "apache@slebog.net", "creation_time": "2004-02-17T22:48:34Z", "is_private": false, "attachment_id": 10400}, {"count": 5, "tags": [], "bug_id": 25202, "attachment_id": null, "id": 52467, "time": "2004-02-18T06:22:04Z", "creator": "nd@perlig.de", "creation_time": "2004-02-18T06:22:04Z", "is_private": false, "text": "We have a backwards compat problem. I think, something like <!-- set\nencode=\"none\" var=\"foo\" value=\"bar\" --> would be better.\nIf nobody comes with something else -- it's on my todo."}, {"count": 6, "tags": [], "bug_id": 25202, "text": "Created attachment 10406\nAmended patch for Apache 1.3.29", "id": 52470, "time": "2004-02-18T08:56:22Z", "creator": "apache@slebog.net", "creation_time": "2004-02-18T08:56:22Z", "is_private": false, "attachment_id": 10406}, {"count": 7, "tags": [], "creator": "apache@slebog.net", "attachment_id": 10407, "text": "Created attachment 10407\nAmended patch for Apache 2.0.48", "id": 52471, "time": "2004-02-18T08:56:50Z", "bug_id": 25202, "creation_time": "2004-02-18T08:56:50Z", "is_private": false}, {"count": 8, "tags": [], "creator": "apache@slebog.net", "attachment_id": null, "text": "I think the current behaviour is broken (from the point of view of everyone not using iso-8859-1) and \nshould be fixed, but if there are backwards compatibility issues I've added amended patches that follow \nthe behaviour suggested by Andr\u00e9 Malo.\n\n<!--#set encoding=\"iso-8859-1\" var=\"test\" value=\"&auml;&ouml;&uuml;\" -->\nfollows current behaviour, and is the default if no encoding specified for backwards compat.\n\n<!--#set encoding=\"none\" var=\"test\" value=\"&auml;&ouml;&uuml;\" -->\nwill leave the HTML entities untouched.\n\n(used \"encoding\" instead of \"encode\" to follow the style of the #echo var command)", "id": 52473, "time": "2004-02-18T09:03:23Z", "bug_id": 25202, "creation_time": "2004-02-18T09:03:23Z", "is_private": false}, {"count": 9, "tags": [], "bug_id": 25202, "is_private": false, "id": 52893, "creation_time": "2004-02-24T22:18:27Z", "time": "2004-02-24T22:18:27Z", "creator": "nd@perlig.de", "text": "Just a note. I didn't forget you ;) I'm just working on a more general solution\nfor this, to (a) open decodehtml for external modules and (b) build a stable but\nextensible API (for 2.1+).", "attachment_id": null}, {"count": 10, "tags": [], "bug_id": 25202, "attachment_id": null, "id": 71082, "time": "2005-02-16T14:46:33Z", "creator": "noah@hd.se", "creation_time": "2005-02-16T14:46:33Z", "is_private": false, "text": "The bug is still present and is causing problems with XHTML.\nWhy is the translation even done in the first place?"}, {"count": 11, "tags": [], "bug_id": 25202, "attachment_id": null, "is_private": false, "id": 93107, "time": "2006-09-06T18:00:13Z", "creator": "bth01@health.state.ny.us", "creation_time": "2006-09-06T18:00:13Z", "text": "Are there any plans to complete and commit a solution for this as discussed in\nprevious comments? We maintain a site containing about 25K pages and growing\nwith content in multiple languages. We're trying to decide whether to use a\nworkaround to generate valid XHTML or wait for a solution.\n\n(In reply to comment #9)\n> Just a note. I didn't forget you ;) I'm just working on a more general solution\n> for this, to (a) open decodehtml for external modules and (b) build a stable but\n> extensible API (for 2.1+).\n\n"}, {"count": 12, "tags": [], "creator": "rpluem@apache.org", "attachment_id": null, "text": "Is the bug still there in 2.2.3?", "id": 93109, "time": "2006-09-06T19:01:35Z", "bug_id": 25202, "creation_time": "2006-09-06T19:01:35Z", "is_private": false}, {"count": 13, "tags": [], "bug_id": 25202, "text": "I just tested 2.2.3. HTML entities stored in variables set using 'set' are still\nevaluated and replaced their equivalent characters. For example, the following\nstatements produce a document containing \"Espa\u00f1ol\", not \"Espa&ntilde;ol\".\n\n<!--#set var=\"LANG\" value=\"Espa&ntilde;ol\" -->\n<!--#echo encoding=\"none\" var=\"LANG\" -->\n\n\n(In reply to comment #12)\n> Is the bug still there in 2.2.3?\n\n", "id": 93413, "time": "2006-09-12T16:06:49Z", "creator": "bth01@health.state.ny.us", "creation_time": "2006-09-12T16:06:49Z", "is_private": false, "attachment_id": null}, {"count": 14, "tags": [], "bug_id": 25202, "attachment_id": null, "id": 123654, "time": "2008-12-30T18:29:21Z", "creator": "nick@webthing.com", "creation_time": "2008-12-30T18:29:21Z", "is_private": false, "text": "Oh dear, this seems to have been long-overlooked.\n\nFixed in trunk in r730296.\n"}, {"count": 15, "tags": [], "bug_id": 25202, "is_private": false, "id": 123849, "creation_time": "2009-01-07T17:25:12Z", "time": "2009-01-07T17:25:12Z", "creator": "nick@webthing.com", "text": "Fix backported to 2.2 in r732583", "attachment_id": null}, {"count": 16, "tags": [], "bug_id": 25202, "attachment_id": null, "id": 129723, "time": "2009-08-16T15:40:25Z", "creator": "andersk@mit.edu", "creation_time": "2009-08-16T15:40:25Z", "is_private": false, "text": "This patch broke the display of non-ASCII values in a multibyte encoding like UTF-8.\n\nFor example,\n<!--#set var=\"foo\" value=\"\u00e9\" --><!--#echo var=\"foo\" -->\nresults in a correct\n  \u00e9\nin httpd 2.2.11, but the incorrect\n  &#195;&#169;\nin httpd 2.2.12, which gets displayed as:\n  \u00c3\u00a9"}, {"count": 17, "tags": [], "bug_id": 25202, "text": "(In reply to comment #16)\n> This patch broke the display of non-ASCII values in a multibyte encoding like\n> UTF-8.\n\nAh, this regression is already filed as bug 47686.", "id": 129742, "time": "2009-08-17T07:27:20Z", "creator": "andersk@mit.edu", "creation_time": "2009-08-17T07:27:20Z", "is_private": false, "attachment_id": null}]