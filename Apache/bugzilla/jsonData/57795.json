[{"count": 0, "tags": [], "bug_id": 57795, "attachment_id": null, "text": "We use mod_proxy_wstunnel on port 80 because we want all traffic over the same port. Http as well as the websocket. \n\nIn this configuration once connected everything works ok. But sometimes the websocket does not connect and most of the time the websocket does not disconnect. For example on browser refresh, the server does not notice the disconnection and the server needs to ping to know the client is no longer connected.\n\nThis seems to be a mod_proxy_wstunnel issue because websockets always connect to- and disconnect from the application-server port. The difference between a working configuration and a not working configuration is that there is mod_proxy_wstunnel in between.", "id": 182266, "time": "2015-04-07T10:27:34Z", "creator": "bob@itnm.nl", "creation_time": "2015-04-07T10:27:34Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 57795, "text": "I am sorry but i am not able to reproduce the problem.\nI tried it with 2 different servers and 3 different browsers.\nPlease disregard bugreport. If it happens again i'll file a new one, hopefully with additional information.", "id": 182268, "time": "2015-04-07T12:39:40Z", "creator": "bob@itnm.nl", "creation_time": "2015-04-07T12:39:40Z", "is_private": false, "attachment_id": null}, {"count": 2, "attachment_id": null, "creator": "gael.oberson@gmail.com", "is_private": false, "id": 183013, "time": "2015-05-18T19:46:14Z", "bug_id": 57795, "creation_time": "2015-05-18T19:46:14Z", "tags": [], "text": "Using Chrome or Safari on IOS, open a Websocket to Tomcat8 over Apache wstunnel (http connector). We use SockJS in an AngularJS WebApp, on iPad.\n\nIf you normally close the browser's tab or if you kill (swipe up) the App, then the Javascript App will apparently not fire a websocket close(). In that case, the socket remains open forever between Apache and Tomcat. Apache does not 'see' that the client went away.\n\nOther browsers (on desktop OS's) are sending the close, but IOS (and perhap's Android??) not.\n\nIn such a situation, the subsequent websockets handshakes are routed to this \"half closed\" socket, and we run into error and a not working XHR fallback. It just completely blocks the service.\n\nRunning the same use case without Apache and working directly with Tomcat runs fine. Tomcat itself is capable to react to a 'disapeared' client and does close the websocket."}, {"count": 3, "tags": [], "text": "Which version of Apache HTTP Server are you using?\n\nThis (maybe relative) fix was done in 2.4.10:\n  *) mod_proxy_wstunnel: Don't pool backend websockets connections,\n     because we need to handshake every time. bug 55890.\nThere are also more fixes up to latest 2.4.12.", "is_private": false, "id": 183019, "creator": "ylavic.dev@gmail.com", "time": "2015-05-18T20:52:28Z", "bug_id": 57795, "creation_time": "2015-05-18T20:52:28Z", "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 57795, "attachment_id": null, "text": "I just checked and we use Apache 2.4.7 on Ubuntu 14.04.1 LTS. The description telling \"don't pool connections\" is the same as our thoughts. We came to the conclusion that the connection is pooled and therefore subsequent handshakes on this connection are logically not working.\n\nBut you also need to handle a client going away. I mean, not pooling is a good point, but you also need to send a close() to tomcat in case the client goes away without closing the WebSocket.\n\nI think the simple use of disablereuse=on for the ProxyPass directive is not enough.", "id": 183020, "time": "2015-05-18T21:11:31Z", "creator": "gael.oberson@gmail.com", "creation_time": "2015-05-18T21:11:31Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 57795, "text": "Latest versions do close both client and backend connections when done (on any side).", "id": 183021, "time": "2015-05-18T21:16:06Z", "creator": "ylavic.dev@gmail.com", "creation_time": "2015-05-18T21:16:06Z", "is_private": false, "attachment_id": null}, {"count": 6, "tags": [], "bug_id": 57795, "attachment_id": null, "text": "(In reply to Ga\u00ebl Oberson from comment #4)\n> \n> But you also need to handle a client going away. I mean, not pooling is a\n> good point, but you also need to send a close() to tomcat in case the client\n> goes away without closing the WebSocket.\n\nWait, the client is gone away when it closes its connection, mod_proxy_wstunnel has no knowledge of the application (close) semantic.", "id": 183023, "time": "2015-05-18T21:19:53Z", "creator": "ylavic.dev@gmail.com", "creation_time": "2015-05-18T21:19:53Z", "is_private": false}, {"count": 7, "tags": [], "text": "It's exactly what I point out. An IOS Chrome or Safari may be killed (just swipe up) by the user. In that case, je JavaScript thread is instantly terminated, and thus the SockJS client has no chance to close() the socket.\n\nTherefore, Apache needs to handle this and become the ability to \"be aware\" that the client just went away.\n\nIf you run this scenario without Apache, and directly use Tomcat, you will see that Tomcat has this ability. When the IOS Browser is killed, Tomcat closes the Socket immediately and releases the resources.\n\nThus, it should be possible for mod_proxy_wstunnel to do the same. Otherwise, this will lead to a ressource leak.", "is_private": false, "id": 183025, "creator": "gael.oberson@gmail.com", "time": "2015-05-18T21:27:56Z", "bug_id": 57795, "creation_time": "2015-05-18T21:27:56Z", "attachment_id": null}, {"count": 8, "tags": [], "creator": "ylavic.dev@gmail.com", "text": "I don't known much about IOS' browsers but it seems to me that if a socket has no owner it should be closed...\nAnd if the application is being killed, it can't even signal the application by any mean, so how Tomcat knows?\n\nThus I think you are hitting the pooled connection issue, and latest version should fix it, can you give it a try? \n\nBTW, Tomcat is (running) the application, so it knows about the close semantic (should it be anything other than socket closing), whereas mod_proxy (the *tunnel*) does not, it can't known about any possible/existing websocket application passing through.", "id": 183026, "time": "2015-05-18T21:45:20Z", "bug_id": 57795, "creation_time": "2015-05-18T21:45:20Z", "is_private": false, "attachment_id": null}, {"count": 9, "tags": [], "text": "(In reply to Yann Ylavic from comment #8)\n> And if the application is being killed\ns/application/browser/", "is_private": false, "id": 183027, "creator": "ylavic.dev@gmail.com", "time": "2015-05-18T21:48:35Z", "bug_id": 57795, "creation_time": "2015-05-18T21:48:35Z", "attachment_id": null}, {"count": 10, "tags": [], "bug_id": 57795, "attachment_id": null, "id": 197043, "time": "2017-02-15T18:44:30Z", "creator": "Ryan.Slominski@gmail.com", "creation_time": "2017-02-15T18:44:30Z", "is_private": false, "text": "It does appear that mod_proxy_wstunnel does not handle half-open connections well.   If you setup Tomcat for websockets and then have a client pull their network cable Tomcat will get a \"connection forcibly closed by the remote host\" error on the session.   Do the same test going through mod_proxy_wstunnel to get to Tomcat and the server isn't notified of the connection loss.  Worse, the Session.isOpen() method returns true and sendMessage doesn't throw any exceptions!   I don't know if this is due to TCP/IP keepalive or what.  Maybe the proxy server responds that the connection is still alive, but fails to check with the client."}]