[{"text": "When I created a Jar file with a specified manifest file using the Jar Task in \nAnt, I discovered that you are not able to retrieve the Manifest information \nusing the java.util.jar.JarInputStream class.  The reason for this problem is \nthat the Manifest file (META-INF/MANIFEST.MF) is entered as the last element in \nthe JAR file.  java.util.jar.JarInputStream only looks at the first JarEntry and \nchecks to see if it is either \"META-INF/MANIFEST.MF\" or \"META-INF/\".  If the \nJarEntry is \"META-INF\", then it checks the next JarEntry.  If \n\"META-INF/MANIFEST.MF\" is found in this initial check, then the Manifest \ninformation is retrievable through the getManifest() method.  If the file is not \nfound in this initial check then all calls to the JarInputStream's getManifest \nmethod will return null.  \n\nThe problem is also found in Ant 1.3, but only if a manifest file was specified \nin the Jar task.  The manifest is located if a Manifest file is not speicified.  \nIn version 1.4, the problem occurs whether or not you specify a Manifest file.\n\nHow to reproduce:\n\n  1) Have class that reads in Jar file and looks for manifest info:\n         JarInputStream jis = new JarInputStream(new FileInputStream(new \nFile(\"myJar.jar\")));\n         Manifest mf = jis.getManifest();\n         if (mf == null) {\n             throw new Exception(\"manifest missing\");\n         }\n   2) Using ant build jar file with a specified manifiest:\n        <jar basedir=\"classes\"\n             manifest=\"MYMANIFEST.MF\"\n             jarfile=\"myJar.jar\" />\n   3) Run program\n       -- will result in the exception being thrown (\"manifest missing\")         \n\nThe fix for this problem would be to add the MANIFEST.MF file to the Jar file \nafter adding the META-INF directory in the Jar.initZipOutputStream() method \ninstead of in the Jar.finalizeZipOutputStream() method.\n\nThe Jar specifications do not exactly specify that the MANIFEST.MF file should \nbe located at the beginning of the archive, although the documentation for JDK \n1.1 specifies the following:\n\n\"Archives are signed by creating a \"META-INF/\" directory at the top level of the \npath tree.\"  -- see \nhttp://java.sun.com/products/jdk/1.1/docs/guide/jar/manifest.html\n\nThe location of the MANIFEST.MF file only appears to be an issue with \nJarInputStream, the Jar/Java programs do not have any issues with reading and \nusing the Manifest information.", "tags": [], "bug_id": 3947, "attachment_id": null, "count": 0, "id": 6327, "time": "2001-10-03T11:33:11Z", "creator": "babster_vt@yahoo.com", "creation_time": "2001-10-03T11:33:11Z", "is_private": false}, {"count": 1, "tags": [], "creator": "conor@apache.org", "text": "Fixed in Ant 1.4.1 - Can you try the Beta please and let me know if there are\nissues.", "id": 6458, "time": "2001-10-08T07:04:41Z", "bug_id": 3947, "creation_time": "2001-10-08T07:04:41Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "text": "I checked it out and it appears to be fixed in 1.4.1b.  I was able to access the \nManifest file directly using the JarInputStream's getManifest method.  ", "is_private": false, "id": 6460, "creation_time": "2001-10-08T08:02:38Z", "time": "2001-10-08T08:02:38Z", "creator": "babster_vt@yahoo.com", "bug_id": 3947, "attachment_id": null}]