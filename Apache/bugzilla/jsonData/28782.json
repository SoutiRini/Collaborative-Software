[{"count": 0, "tags": [], "text": "Hi all,\n\nDiving deeper into Ant's code I might have identified the problem...\n\nFirst of all the Definer uses the Project.createClassLoader method to get a\nClassLoader in order to lookup the antlib.xml file and further instanciate\nthe tasks. However, by default, this ClassLoader does not have any parent\nand uses the java.class.path sysprop as its path\n\nSo I first try adding the project instance's ClassLoader as the parent of\nthe newly created ClassLoader\n\nHowever this does not solved the problem...\n\nThis is because later on, when lookin'up the antlib.xml using the\ngetResources method, the AntClassLoader (through the findResources method)\nuses its inner class ResourceEnumeration to delegate the lookup but this\nClass does not take into account the parent classloader (which is different\nfrom the \"normal\" parent which is always null).\nThus, only the java.class.path is taken into account when trying to find the\nantlib.xml, which obviously only works when in standalone mode.\n\nI additionaly changed the findResource method in AntClassLoader to use a\nCompoundEnumeration when a parent has been set and it finally worked :-)\n\nI guess I should enter a bug report...\n\nCheers,\nClaude\n\n\n> -----Original Message-----\n> From: Claude Vedovini [mailto:CVedovini@odyssey-group.com]\n> Sent: 4 May 2004 11:29\n> To: 'Ant Users List'\n> Subject: RE: Antlib & ClassLoading issues\n> \n> \n> Hi,\n> \n> Actually I tried to modify the code for the <ant> task, \n> initializing the\n> coreloader of the called build this does not seems to be enough.\n> \n> Thanks for the hint, seems like I used the core loader for \n> nothing since two\n> years :-)\n> \n> Anyhow, could someone tell me how to set the classloader for the whole\n> stuff?\n> \n> Thanks in advance,\n> Claude\n> \n> \n> > -----Original Message-----\n> > From: Peter Reilly [mailto:peter.reilly@corvil.com]\n> > Sent: 4 May 2004 10:57\n> > To: Ant Users List\n> > Subject: Re: Antlib & ClassLoading issues\n> > \n> > \n> > Hi,\n> > I did not know that the coreloader was actually used.\n> > See:\n> > http://marc.theaimsgroup.com/?l=ant-dev&m=107451990930463&w=2\n> > for some discussion on this.\n> > \n> > Be that as is may, if the coreloader is in the code, it should be\n> > passed to the child projects.\n> > \n> > As a work-around, you could trigger the loading of the antlib\n> > tasks and types\n> > in the initial project: For example add a macro to the\n> > antlib : \"init\"\n> > \n> > <macrodef name=\"init\">\n> >   <sequential>\n> >   </sequential>\n> > </macrodef>\n> > \n> >  and call it in the initial project:\n> > \n> > <project xmlns:s=\"antlib:com.company.project\" default=\"subs\">\n> >   <s:init/>\n> >   <target name=\"subs\">\n> >     <subant ../>\n> >   </target>\n> > </project>\n> > \n> > It may be better to do something like this in any case, \n> > otherwise the tasks/types\n> > will be loaded in each of the sub-projects.\n> > \n> > Peter\n> > \n> > Claude Vedovini wrote:\n> > \n> > >I all,\n> > >\n> > >I am just trying to take advantage of the Antlib feature and \n> > it seems that\n> > >in certain circumstances it does not work as expected :-)\n> > >\n> > >Ok, here is the background:\n> > >\n> > >We built a nice continuous integration infrastructure using \n> > ant, which is\n> > >driven by a web application (our build launcher, currently \n> > running with\n> > >Websphere, Weblogic and Tomcat) we also developed some \n> tasks that are\n> > >automatically put in the context of the build by our launcher.\n> > >Grosso-modo the launcher is a servlet that creates a Project \n> > instance,\n> > >configures it and so on.\n> > >As you can imagine it also uses the setCoreLoader method to \n> > give the Project\n> > >the web-app ClassLoader (which is a non-delegating J2EE \n> ClassLoader).\n> > >All this used to work since two years or so...\n> > >\n> > >Those last days I tried to promote out own tasks to an \n> > Antlib library in\n> > >order to take advantage of the namespace stuff and here is \n> > the problem I ran\n> > >into:\n> > >\n> > > - When I declare my antlib: namespace in a \"sub\" build \n> > (called via the\n> > ><ant> task) I got a ClassNotFoundException (and Ant tells me that I\n> > >certainly forgot to add a jar in the lib folder)\n> > >\n> > >I took a look at the <ant> task and it seems that the \n> > CoreLoader of the\n> > >calling project (which should further be used to load tasks \n> > I guess) is not\n> > >passed through to the called project. Taskdefs are, which \n> > explains why it\n> > >was working previously, but as I guess that antlibs are \n> > loaded on request\n> > >(when the namespace declaration is met) and using the \n> > project's ClassLoader\n> > >then my tasks' classes are no more in the scope.\n> > >\n> > >I am not 100% sure the problem lies where I think, so if \n> > someone could have\n> > >a look (or two) at that issue I think it could help (at \n> least me ;-)\n> > >\n> > >\n> > >Thanks in advance,\n> > >Claude", "attachment_id": null, "id": 56867, "creator": "cvedovini@odyssey-group.com", "time": "2004-05-05T14:09:42Z", "bug_id": 28782, "creation_time": "2004-05-05T14:09:42Z", "is_private": false}, {"count": 1, "tags": [], "text": "Could you provide a patch against ant head cvs?\n", "attachment_id": null, "id": 57083, "creator": "peter.reilly@corvil.com", "time": "2004-05-10T13:01:39Z", "bug_id": 28782, "creation_time": "2004-05-10T13:01:39Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 28782, "attachment_id": 11500, "is_private": false, "id": 57119, "time": "2004-05-10T17:48:29Z", "creator": "cvedovini@odyssey-group.com", "creation_time": "2004-05-10T17:48:29Z", "text": "Created attachment 11500\nHi Peter, here is the patch, cheers"}, {"count": 3, "tags": [], "creator": "antoine@apache.org", "attachment_id": null, "text": "I think this is a duplicate of bug 30161", "id": 60768, "time": "2004-07-18T14:34:40Z", "bug_id": 28782, "creation_time": "2004-07-18T14:34:40Z", "is_private": false}, {"count": 4, "tags": [], "creator": "jglick@apache.org", "is_private": false, "text": "Yes, even the patch here is very similar to that in issue 30161. Differences:\n\n- 30161's checks isParentFirst\n\n- somewhat different API method added to CollectionUtils; 30161's is simpler but\n28782's is more powerful for other purposes\n\n- 30161's patch checks the case that CL.parent == ACL.parent (but still does not\nhandle the more general problem that ACL.parent might have CL.parent as an\nancestor and produce duplicate entries in the enumeration)\n\n- 28782's patch does something in Project.java to handle the case where\n${java.class.path} is not set to anything relevant; this may be useful, or it\nmay suffice for embedders to set Path.systemClassPath to a different value\n\nNeither patch includes a unit test, which may be important since the logic is\nfairly subtle and could easily be reverted unintentionally by a later commit.", "id": 60782, "time": "2004-07-18T18:35:20Z", "bug_id": 28782, "creation_time": "2004-07-18T18:35:20Z", "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 28782, "text": "Hi Claude, the change made by Jesse should do the same as\nthis patch. The modification to Project is not necesary are\nthe parent classloader has already been set correctly.\nCan you check to see if ant 1.6.2 works correctly for\nyou?\n", "count": 5, "id": 68239, "time": "2004-12-10T16:23:14Z", "creator": "peterreilly@apache.org", "creation_time": "2004-12-10T16:23:14Z", "is_private": false}, {"attachment_id": null, "tags": [], "bug_id": 28782, "text": "please reopen if the problem still exists in 1.6.2", "count": 6, "id": 72212, "time": "2005-03-11T17:04:30Z", "creator": "bodewig@apache.org", "creation_time": "2005-03-11T17:04:30Z", "is_private": false}]