[{"text": "A couple of bug reports boil down to this punch line - use this report to\ncollect them in one place.", "tags": [], "bug_id": 1613, "is_private": false, "count": 0, "id": 2237, "time": "2001-05-03T06:27:30Z", "creator": "bodewig@apache.org", "creation_time": "2001-05-03T06:27:30Z", "attachment_id": null}, {"count": 1, "tags": [], "text": "*** Bug 1066 has been marked as a duplicate of this bug. ***", "attachment_id": null, "id": 2238, "creator": "bodewig@apache.org", "time": "2001-05-03T06:30:17Z", "bug_id": 1613, "creation_time": "2001-05-03T06:30:17Z", "is_private": false}, {"text": "*** Bug 1362 has been marked as a duplicate of this bug. ***", "tags": [], "bug_id": 1613, "is_private": false, "count": 2, "id": 2240, "time": "2001-05-03T06:32:53Z", "creator": "bodewig@apache.org", "creation_time": "2001-05-03T06:32:53Z", "attachment_id": null}, {"count": 3, "attachment_id": null, "bug_id": 1613, "is_private": false, "id": 2380, "time": "2001-05-10T06:43:54Z", "creator": "conor@apache.org", "creation_time": "2001-05-10T06:43:54Z", "tags": [], "text": "I've investigated this issue and it is not an Ant specific limitation. Firstly \nit is not the classloader's responsibility to initialize classes (run static \ninitializers). It seems that the JDK's Class.forName does initialize the class \nbut when a class is loaded through a classloader it is not. Under JDK1.1 there \nis no clean way to force initialization. Attempting to create an instance via \nnewInstance does work, even if the instance cannot be created. This will be the \nworkaround adopted for Ant 1.x"}, {"text": "I have added the newInstance call to force inirtialization of the loaded class. ", "tags": [], "bug_id": 1613, "is_private": false, "count": 4, "id": 2382, "time": "2001-05-10T07:28:52Z", "creator": "conor@apache.org", "creation_time": "2001-05-10T07:28:52Z", "attachment_id": null}]