[{"count": 0, "tags": [], "creator": "delafran@sybase.com", "text": "The exit/errorlevel logic seems weird, maybe there are some other environments\nthat I am unaware of, but with 4NT and MKS the following issues appear:\n\n1. Under MKS there is a color.exe command that does not properly return 0 when\nbg and fg colours are set.  So if the build fails under MKS you black. :-)\n\n2. Under 4NT the command \"echo 1 > nul | choice /n /c:1\" only applies the echo\nto the if the choice after the pipe gets executed.\n\nIn the current logic, both of the following ifs will just return 1\n\nrem Set the return code if we are not in NT.  We can only set\nrem a value of 1, but it's better than nothing.\nif not \"%OS%\"==\"Windows_NT\" echo 1 > nul | choice /n /c:1\n\nrem Set the ERRORLEVEL if we are running NT.\nif \"%OS%\"==\"Windows_NT\" color 00\n\nI have rem'd out the two above ifs and replaced them with \n\nset ANT_ERROR=1\n\nThen at the bottom of the script just do:\n\nexit /b %ANT_ERROR%\n\nI have done some testing:\n\nConsider the following ANT script (build.xml) fragment:\n\n  <target name=\"pass\">\n    <echo>Pass</echo>\n  </target>\n\n  <target name=\"fail\">\n    <fail>Fail</fail>\n  </target>\n\nand the batch file b.bat:\n\n   > cat b.bat\n  call ant %1\n  echo errorlevel = %errorlevel%\n\nthe output under cmd.exe is:\n\n  [w:\\eas-6.1\\dotnet\\calc]\n  [jagmain_delafran_vu] > cmd\n  Microsoft Windows XP [Version 5.1.2600]\n  (C) Copyright 1985-2001 Microsoft Corp.   \n\n  [W:\\eas-6.1\\dotNet\\calc]\n  [jagmain_delafran_vu] > ver\n\n  Microsoft Windows XP [Version 5.1.2600]\n\n  [W:\\eas-6.1\\dotNet\\calc]\n  [jagmain_delafran_vu] > b pass\n\n  [W:\\eas-6.1\\dotNet\\calc]\n  [jagmain_delafran_vu] > call ant pass\n  Buildfile: build.xml\n\n  pass:\n       [echo] Pass\n\n  BUILD SUCCESSFUL\n  Total time: 0 seconds\n  errorlevel = 0 \n\n  [W:\\eas-6.1\\dotNet\\calc]\n  [jagmain_delafran_vu] > b fail\n\n  [W:\\eas-6.1\\dotNet\\calc]\n  [jagmain_delafran_vu] > call ant fail\n  Buildfile: build.xml\n\n  fail:\n\n  BUILD FAILED\n  W:\\eas-6.1\\dotNet\\calc\\build.xml:33: Fail\n\n  Total time: 0 seconds\n  errorlevel = 1\n\n  [W:\\eas-6.1\\dotNet\\calc]\n  [jagmain_delafran_vu] >\n\nThe output under 4NT.exe is:\n\n  [w:\\eas-6.1\\dotnet\\calc]\n  [jagmain_delafran_vu] > ver\n\n  4NT  8.00.49   Windows XP [Version 5.1.2600]\n\n  [w:\\eas-6.1\\dotnet\\calc]\n  [jagmain_delafran_vu] > b pass\n  Buildfile: build.xml\n\n  pass:\n       [echo] Pass\n\n  BUILD SUCCESSFUL\n  Total time: 0 seconds\n  errorlevel = 0\n\n  [w:\\eas-6.1\\dotnet\\calc]\n  [jagmain_delafran_vu] > b fail\n  Buildfile: build.xml\n\n  fail:\n\n  BUILD FAILED\n  W:\\eas-6.1\\dotNet\\calc\\build.xml:33: Fail\n\n  Total time: 0 seconds\n  errorlevel = 1\n\n  [w:\\eas-6.1\\dotnet\\calc]\n  [jagmain_delafran_vu] >\n\nSo, the caller b.bat will properly get the return code (errorlevel) from the\nant.bat file.  I expect that any process the launches ant.bat will also get the\nproper return value.", "id": 96154, "time": "2006-11-24T12:11:02Z", "bug_id": 41039, "creation_time": "2006-11-24T12:11:02Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 41039, "is_private": false, "id": 96155, "attachment_id": 19170, "creator": "delafran@sybase.com", "creation_time": "2006-11-24T12:12:22Z", "time": "2006-11-24T12:12:22Z", "text": "Created attachment 19170\npatch generated from the SVN codeline"}, {"count": 2, "tags": [], "bug_id": 41039, "attachment_id": null, "id": 96218, "time": "2006-11-27T10:58:03Z", "creator": "stevel@apache.org", "creation_time": "2006-11-27T10:58:03Z", "is_private": false, "text": "First, know that the .bat file is a source of much grief, much more than its\nshort length would imply. We are scared of it.\n\nHistorically the trouble has always been win98x support, as its batch language\nis much simpler. If you tried any of your patched scripts on win9x, things would\nbreak.\n\nAnt.7 doesnt support win98. so we may be able to change things, though as I\nsaid, we are scared of changes. There's no way we'd make the changes without\ngoing through a release cycle.\n\nLooking at the code, exit /b does look good; it sets the exit code and does not\nexit from nested batch files, which is probably exactly what everyone needs.\n\nThe issue for the ant group is\n -do we adopt this (and so ensure no win98 compatibility)\n -what's our test process going to be."}, {"count": 3, "tags": [], "bug_id": 41039, "attachment_id": null, "id": 96223, "time": "2006-11-27T11:29:33Z", "creator": "delafran@sybase.com", "creation_time": "2006-11-27T11:29:33Z", "is_private": false, "text": "What about the idea of two batch files:\n\n- antw98.bat (does the best job it can for windows 98 and possibly windows nt)\n- ant.bat (works best with Windows XP, 2000, 2003, Vista) and uses new script\ncapabilities.\n\nOr use the same strategy and present a new ant.bat file:\n\n- ant2.bat (works best with Windows XP, 2000, 2003, Vista) and uses new script\ncapabilities.\n- ant.bat (does the best job it can for windows 98 and possibly windows nt)\n\nant.bat continues to keep the backward compatibility at its maximum.  Existing\nbuild environments will continue to use the older script by default and will\ncontinue to function in its, much grief, state.\n\nant2.bat could then be advertised as the new approach that takes advantage of\nbetter error reporting script features.\n\n"}, {"count": 4, "tags": [], "bug_id": 41039, "attachment_id": null, "id": 96315, "time": "2006-11-28T18:08:10Z", "creator": "antoine@apache.org", "creation_time": "2006-11-28T18:08:10Z", "is_private": false, "text": "Hello Mark,\n\ngoing for antw98.bat and ant.bat sounds to me like the right choice.\n\nRegards,\n\nAntoine"}, {"count": 5, "attachment_id": null, "creator": "stevel@apache.org", "text": "I'm +1 for a separate 'legacy' win98 bat file, with a 'no support' clause. \n\nHowever, there is no way I'd release Ant with a new bat file without going\nthrough at least one beta cycle, so its too late to make the 1.7.0 cut. We can\nput this in Ant 1.7.1 though, and test it thoroughly before shipping to a wider\naudience. \n\nThis could be a good time to clean up the .bat file altogether. ", "id": 96348, "time": "2006-11-29T05:12:40Z", "bug_id": 41039, "creation_time": "2006-11-29T05:12:40Z", "tags": [], "is_private": false}, {"count": 6, "tags": [], "creator": "arve.knudsen@gmail.com", "text": "Why hasn't anything been done about this? Since ant.bat doesn't return an error code, my ant Python wrapper doesn't get when a build has failed (and I spent hours just identifying the cause). I've tested the attached patch on Windows Server 2008, Ant 1.8.1, and it fixes the issue.", "id": 140255, "time": "2010-09-28T05:04:27Z", "bug_id": 41039, "creation_time": "2010-09-28T05:04:27Z", "is_private": false, "attachment_id": null}, {"count": 7, "tags": [], "bug_id": 41039, "attachment_id": null, "id": 140837, "time": "2010-10-19T16:51:02Z", "creator": "antoine@apache.org", "creation_time": "2010-10-19T16:51:02Z", "is_private": false, "text": "Will try the patch. Antoine"}, {"count": 8, "tags": [], "creator": "antoine@apache.org", "attachment_id": null, "text": "I have used the patch and simplified it, removing the lines which were commented out. Also I have removed the line which said set ANT_ERROR=1 because I think this one would not have allowed to get different exit status.\n\nAs I understand it, ant.bat will now provide an accurate exit status and not use these funny \"color 00\" and \"echo 1 | choice\" statements.\n\nMoving the status to fixed, hoping that it will not create other errors.", "id": 140841, "time": "2010-10-19T17:26:33Z", "bug_id": 41039, "creation_time": "2010-10-19T17:26:33Z", "is_private": false}]