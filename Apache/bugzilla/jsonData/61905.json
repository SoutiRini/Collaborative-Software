[{"count": 0, "tags": [], "bug_id": 61905, "attachment_id": 35612, "id": 202784, "time": "2017-12-14T14:54:22Z", "creator": "davide.angelocola@gmail.com", "creation_time": "2017-12-14T14:54:22Z", "is_private": false, "text": "Created attachment 35612\nactive cell is A1, instead of E11\n\nThe method setActiceCell seems to be not working on latest stable version. The same method on XSSF is working as expected. \n\nPlease find a minimal reproducer below:\n\n\n    @Test\n    public void xlsx() throws IOException {\n        XSSFWorkbook wb = new XSSFWorkbook();\n        XSSFSheet sheet = wb.createSheet(\"new sheet\");\n        sheet.setActiveCell(new CellAddress(\"E11\"));\n        wb.write(new FileOutputStream(\"c:/temp/yyy.xlsx\"));\n        wb.close();\n    }\n\n    @Test\n    public void xls() throws IOException {\n        HSSFWorkbook wb = new HSSFWorkbook();\n        HSSFSheet sheet = wb.createSheet(\"new sheet\");\n        sheet.setActiveCell(new CellAddress(\"E11\"));\n        wb.write(new FileOutputStream(\"c:/temp/yyy.xls\"));\n        wb.close();\n    }"}, {"count": 1, "tags": [], "text": "Created attachment 35613\nactive cell is E11, as expected", "is_private": false, "id": 202785, "creator": "davide.angelocola@gmail.com", "time": "2017-12-14T14:55:02Z", "bug_id": 61905, "creation_time": "2017-12-14T14:55:02Z", "attachment_id": 35613}, {"count": 2, "tags": [], "text": "This works for me with LibreOffice on Linux, can you provide details about your environment?\n\nAlso does the following unit test pass?\n\n    @Test\n    public void test61905xlsx() throws IOException {\n        Workbook wb = new XSSFWorkbook();\n        checkActiveSheet(wb, XSSFITestDataProvider.instance);\n        //wb.write(new FileOutputStream(\"/tmp/yyy.xlsx\"));\n        wb.close();\n    }\n\n    @Test\n    public void test61905xls() throws IOException {\n        Workbook wb = new HSSFWorkbook();\n        checkActiveSheet(wb, HSSFITestDataProvider.instance);\n        //wb.write(new FileOutputStream(\"/tmp/yyy.xls\"));\n        wb.close();\n    }\n\n    private void checkActiveSheet(Workbook wb, ITestDataProvider instance) throws IOException {\n        Sheet sheet = wb.createSheet(\"new sheet\");\n        sheet.setActiveCell(new CellAddress(\"E11\"));\n        assertEquals(\"E11\", sheet.getActiveCell().formatAsString());\n\n        Workbook wbBack = instance.writeOutAndReadBack(wb);\n        sheet = wbBack.getSheetAt(0);\n        assertEquals(\"E11\", sheet.getActiveCell().formatAsString());\n        wbBack.close();\n    }", "is_private": false, "bug_id": 61905, "id": 202908, "time": "2017-12-25T08:43:00Z", "creator": "dominik.stadler@gmx.at", "creation_time": "2017-12-25T08:43:00Z", "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 61905, "text": "I'm using Windows 10 Enterprise with Excel 2016 (MSO 16.0.8201.2207 32-bit). \nWhen I open the file yyy.xls with Excel the cell A1 is marked as active, instead of E11 (please see the attached screenshot).\nWhereas when I open the file yyy.xlsx the cell E11 is marked as active, as expected.", "id": 202928, "time": "2017-12-27T09:22:35Z", "creator": "davide.angelocola@gmail.com", "creation_time": "2017-12-27T09:22:35Z", "is_private": false, "attachment_id": null}, {"count": 4, "attachment_id": 35629, "bug_id": 61905, "text": "Created attachment 35629\nproof", "id": 202929, "time": "2017-12-27T09:24:02Z", "creator": "davide.angelocola@gmail.com", "creation_time": "2017-12-27T09:24:02Z", "tags": [], "is_private": false}]