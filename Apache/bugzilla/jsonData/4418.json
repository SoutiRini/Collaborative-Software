[{"count": 0, "tags": [], "bug_id": 4418, "text": "public static ServerSocketFactory getDefault () {\n        //\n        // optimize typical case:  no synch needed\n        //\n\n        if (theFactory == null) {\n            synchronized (ServerSocketFactory.class) {\n                //\n                // Different implementations of this method could\n                // work rather differently.  For example, driving\n                // this from a system property, or using a different\n                // implementation than JavaSoft's.\n                //\n\n                theFactory = new DefaultServerSocketFactory ();\n            }\n        }\n\nThis code is incorrect as the intention is to only ever create 1 \ndefaultserversocketfactory.  Code should be changed to something like\n\n    public static ServerSocketFactory getDefault () {\n        //\n        // optimize typical case:  no synch needed\n        //\n\n        if (theFactory == null) {\n            synchronized (ServerSocketFactory.class) {\n                //\n                // Different implementations of this method could\n                // work rather differently.  For example, driving\n                // this from a system property, or using a different\n                // implementation than JavaSoft's.\n                //\n                if (theFactory == NULL) {\n                theFactory = new DefaultServerSocketFactory ();\n                }\n            }\n        }", "id": 7147, "time": "2001-10-25T06:54:03Z", "creator": "Pete.Sage@gefanuc.com", "creation_time": "2001-10-25T06:54:03Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "creator": "Pete.Sage@gefanuc.com", "attachment_id": null, "text": "    public static ServerSocketFactory getDefault () {\n        //\n        // optimize typical case:  no synch needed\n        //\n\n        if (theFactory == null) {\n            synchronized (ServerSocketFactory.class) {\n                //\n                // Different implementations of this method could\n                // work rather differently.  For example, driving\n                // this from a system property, or using a different\n                // implementation than JavaSoft's.\n                //\n\n                theFactory = new DefaultServerSocketFactory ();\n            }\n        }\n\nthis code is incorrect, as two threads could perform the check and create a new \nDefaultServerSocketFactory.  Change the code to something like\n\n    public static ServerSocketFactory getDefault () {\n        //\n        // optimize typical case:  no synch needed\n        //\n\n        if (theFactory == null) {\n            synchronized (ServerSocketFactory.class) {\n                //\n                // Different implementations of this method could\n                // work rather differently.  For example, driving\n                // this from a system property, or using a different\n                // implementation than JavaSoft's.\n                //\n\n                //***** Prevent two threads from doing this after unsychronized \ncheck!\n                if (theFactory == NULL)\n                theFactory = new DefaultServerSocketFactory ();\n            }\n        }\n\n", "id": 7148, "time": "2001-10-25T06:56:01Z", "bug_id": 4418, "creation_time": "2001-10-25T06:56:01Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 4418, "text": "This is the double-check lock idiom, which is fatally flawed. \n\nq.v. : \nThe \"Double-Checked Locking is Broken\" Declaration \nhttp://www.cs.umd.edu/~pugh/java/memoryModel/DoubleCheckedLocking.html\n\nCan double-checked locking be fixed? \nNo matter how you rig it, double-checked locking still fails \nhttp://www.javaworld.com/javaworld/jw-05-2001/jw-0525-double.html\n\ntheFactory should be initialized as a static, that is\n\nprivate static ServerSocketFactory theFactory = new ServerSocketFactory();\n\neither that, or the getDefault() method must be synchronised.\n\n", "id": 7175, "time": "2001-10-25T18:09:43Z", "creator": "steve.downey@netfolio.com", "creation_time": "2001-10-25T18:09:43Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "text": "Fixed for Tomcat 3.2.4 beta 1.  I synchronized the getDefaultFactory() method \ninstead of using a static initializer so that derived classes to more easily \nchange the default socket factory.", "attachment_id": null, "id": 7197, "creator": "marc.saegesser@apropos.com", "time": "2001-10-26T07:26:35Z", "bug_id": 4418, "creation_time": "2001-10-26T07:26:35Z", "is_private": false}]