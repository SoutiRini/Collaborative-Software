[{"count": 0, "tags": [], "creator": "kiza@kcore.de", "attachment_id": null, "id": 40799, "time": "2003-07-16T10:39:11Z", "bug_id": 21645, "creation_time": "2003-07-16T10:39:11Z", "is_private": false, "text": "I'm running 2.0.47 on OpenBSD, prefork. The following problem exists:\n\nAfter Apache is running for some time, could be minutes or hours, every child\nprocess exits after the request has been served. Meaning: client connects, a\nfree httpd takes the connection, the client closes, the httpd that served the\nrequest exits, a new one is spawned instead.\n\nMaxRequestPerChild is set to 0. The relevant section looks like this:\n\n<IfModule prefork.c>\nStartServers         5\nMinSpareServers      5\nMaxSpareServers     10\nMaxClients         100\nMaxRequestsPerChild  0\n</IfModule>\n\nThis behaviour only starts after some uptime of httpd and puts unnecessary load\non the server, because many children are killed and spawned again for every request.\n\nIn the server status it looks like this:\n\nSlot 1-4 serves a request (if browser uses keepalive more than 1 request gets\nserved)\n1-4\t12441\t0/0/162\tW\n\nConnection closes, child pid 12441 has exited\n1-4\t-\t0/0/170\t.\n\nThis problem seems to be specific with OpenBSD and also existed with 2.0.46\nwhich was the first version we tested."}, {"count": 1, "tags": [], "creator": "trawick@apache.org", "attachment_id": null, "text": "What is logged in error_log?  Are the requests logged in access_log?  If there\nis a piped logger, disable it.\n\nIf the child exited with a fatal signal (e.g., segmentation fault), you need to\nget a coredump and then send us a backtrace so we know what code crashed.  This\nusually requires \n\na) using the CoredumpDirectory directive to point to a location with plenty of\nfree space\nb) setting ulimits to allow core files to be written prior to starting Apache\nc) possibly some OS-specific hacks to get core files from setuid processes (I'm\nnot familiar with OpenBSD requirements in this area)\n", "id": 40802, "time": "2003-07-16T10:48:45Z", "bug_id": 21645, "creation_time": "2003-07-16T10:48:45Z", "is_private": false}, {"attachment_id": null, "tags": [], "bug_id": 21645, "text": "Nothing gets logged to error_log unfortunately, access_log logs the requests as\nusual. Piped logging is already disabled (mostly because of this problem\nhttp://marc.theaimsgroup.com/?l=apache-httpd-users&m=105726459414927&w=2).\n\nThe log directives are as followes if it matters:\nCustomLog logs/access_log combined\nCustomLog logs/access_log.parsable parsable\n\nTwo logs are written, \"combined\" is standard format that comes with Apache,\n\"parsable\" is same as \"combined\" with \\t instead of spaces.\n\nAt the moment we are using ktrace to hopefully see what happens if the child\nprocess dies. But of course since we attached ktrace to one of httpd's PIDs the\nproblem is gone. If I can get useful output from the syscall trace I'll post that.\n\nAny more ideas maybe? I didn't find too much on OpenBSD + Apache 2 anywhere.", "count": 2, "id": 40807, "time": "2003-07-16T11:23:55Z", "creator": "kiza@kcore.de", "creation_time": "2003-07-16T11:23:55Z", "is_private": false}, {"count": 3, "text": "Ok, I successfully produced a syscall trace for the killed child. The output\n\nhttp://home.kcore.de/~kiza/stuff/kdump-child\nis a trace of one httpd child that dies after the connection gets closed.\n\nhttp://home.kcore.de/~kiza/stuff/kdump-parent\nis a trace of the parent httpd process while one of its children dies, because\nof the problem.\n\nThe server also writes the following into the error_log. Though I have no idea\nif it's related to this problem:\n[Wed Jul 16 15:08:15 2003] [warn] (22)Invalid argument: connect to listener\n\nI hope this is helpful in pinpointing the problem. Let me know if there is\nanything else I can do.", "creator": "kiza@kcore.de", "attachment_id": null, "id": 40830, "time": "2003-07-16T13:27:07Z", "bug_id": 21645, "creation_time": "2003-07-16T13:27:07Z", "tags": [], "is_private": false}, {"attachment_id": null, "tags": [], "bug_id": 21645, "text": "I tried to track down this problem a bit further:\n\nWhen the problem occurs, child_main() (prefork.c) always exits after serving the first request. More \nspecifically, die_now is set to 1 after ap_mpm_pod_check() in line 704, every time.\n\nI am not familiar with the Apache source code. However, as far as I can tell, this means that the \nparent found too many idle children during perform_idle_server_maintenance() and killed one by \nsending something through the \"pipe-of-death\".\n\nWe are still not entirely sure how to reproduce this problem. Last time, we could reproduce it by \nmaking lots of request so that many childs are spawned, then waiting until Apache starts to kill \nsome of the idle ones. Suddenly, the server *always* killed each and every child after the first \nrequest.\n\nI am also not sure if I understand the way the parent kills an idle child (prefork.c, \nperform_idle_server_maintenance, line 889). The line simply says this:\n\nap_mpm_pod_signal(pod);\n\nDoes this mean that there is only a single pipe shared between the parent and all children? For \nexample, could it happen that the data sent through the pipe gets \"stuck\" and returned to each \nchild on a read? (I'm asking because this seems to be a platform-specific problem on OpenBSD - \nperhaps OpenBSD behaves differently or is simply bugged?)", "count": 4, "id": 40843, "time": "2003-07-16T15:58:08Z", "creator": "rene.puls@gmxpro.de", "creation_time": "2003-07-16T15:58:08Z", "is_private": false}, {"attachment_id": null, "tags": [], "bug_id": 21645, "text": ">Does this mean that there is only a single pipe shared between the parent \n>and all children? \n\nyes\n\n>For example, could it happen that the data sent through \n>the pipe gets \"stuck\" and returned to each child on a read? (I'm asking \n>because this seems to be a platform-specific problem on OpenBSD - \n>perhaps OpenBSD behaves differently or is simply bugged?)\n\nIf that happens, it is {dependence-on-nonportable-behavior|OpenBSD-bug} (your\nchoice).  All I can say is that nobody else has reported this.  Make sure thread\nsupport didn't get enabled in APR (check APR_HAS_THREADS in apr.h) whenever\nthere is screwy behavior in Apache 2 on a *BSD system.\n\nHere's how to check: Trace the parent process to see if it wrote one '!'\ncharacter (intending to terminate one extra child process) or if it wrote\nmultiple.  If it wrote one but multiple children were able to read the\ncharacter, there is some sort of race condition in OpenBSD kernel and this\nshould be taken up with the OpenBSD experts.\n", "count": 5, "id": 49321, "time": "2003-12-18T12:33:44Z", "creator": "trawick@apache.org", "creation_time": "2003-12-18T12:33:44Z", "is_private": false}, {"count": 6, "text": "Is this still reproducible in 2.0.53?\n\nTo help diagnose or solve \"connect to listener\" errors please try:\n\nhttp://www.apache.org/~jorton/ap_dummy.diff", "bug_id": 21645, "is_private": false, "id": 71521, "time": "2005-02-25T17:23:01Z", "creator": "jorton@redhat.com", "creation_time": "2005-02-25T17:23:01Z", "tags": [], "attachment_id": null}, {"count": 7, "text": "Looking for feedback", "creator": "chip@force-elite.com", "attachment_id": null, "id": 75892, "time": "2005-06-03T02:06:09Z", "bug_id": 21645, "creation_time": "2005-06-03T02:06:09Z", "tags": [], "is_private": false}, {"attachment_id": null, "tags": [], "bug_id": 21645, "is_private": false, "count": 8, "id": 76040, "time": "2005-06-05T14:12:41Z", "creator": "kiza@kcore.de", "creation_time": "2005-06-05T14:12:41Z", "text": "Yes, this problem does still exist with 2.0.53, on OpenBSD 3.5. Maybe a newer\nrelease of OpenBSD will help, but we didn't have time to upgrade it, yet."}, {"count": 9, "tags": [], "bug_id": 21645, "attachment_id": null, "text": "This is quite old. Please test/confirm with more recent versions and reopen if needed.", "id": 106285, "time": "2007-08-03T08:06:05Z", "creator": "jim@apache.org", "creation_time": "2007-08-03T08:06:05Z", "is_private": false}]