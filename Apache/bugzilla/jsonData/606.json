[{"count": 0, "tags": [], "bug_id": 606, "text": "I found this because I have a servlet that starts a TimerTask in its static \ninitializer.  (JDK 1.3)\n\nThe static initializer of a class runs twice and two instances of all static \nvariables are created if that class is a servlet and I tag it to load-on-\nstartup.  There must be two completely different instances of the class, \nprobably due to multiple class loaders?  However, if the servlet is not tagged \nto load on startup, I do not have the problem.  It simply starts a single \ninstance the first time the servlet loads.\n\nTo duplicate, just put a println in the static initializer of a servlet that \nloads on startup.  You will see two instances of the println in the console.\n\nFor me this is a huge problem, because I schedule a task to run and I get two \ninstances of the tasks running.  In other situations it may not be a big deal \ntwo have two copies as long as they are separate and one of the copies is never \nused.", "id": 678, "attachment_id": null, "creator": "gmoriak@excite.com", "creation_time": "2001-02-14T07:08:27Z", "time": "2001-02-14T07:08:27Z", "is_private": false}, {"count": 1, "tags": [], "creator": "marc.saegesser@apropos.com", "text": "There is one instance of a servlet class for each servlet definition within the \ncontainer (See Servlet 2.2 spec. section 3.2).  There are two ways that a \nservlet class can be instantiated more than once:  Multiple <servlet></servlet> \ntags in web.xml that give the servlet class different names, or the same class \nappears is multiple webapps.  In either case this isn't a bug.", "id": 680, "time": "2001-02-14T08:09:59Z", "bug_id": 606, "creation_time": "2001-02-14T08:09:59Z", "is_private": false, "attachment_id": null}]