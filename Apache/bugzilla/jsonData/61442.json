[{"count": 0, "tags": [], "text": "Created attachment 35248\nwas unable to attach to files so both output from 1.6.1 and 1.10.1 are in this files\n\nwe are migrating our ant version from 1.6.1 to 1.10.1 which was due since ages.\n\nwhen we use ant 1.6.2 the following code generates file as shown in echopropeties.txt ( in attachments) , and when we use ant 1.10.1  generates the file as echopropeties.txt(in attachments).\n\nThe issue we are having is that in 1.10.1 it is writing the properties with empty string into the .txt file(refer echopropeties_1_10_1.txt ), is there way to omit these values in the destfile?\n\nfor example \nin .xml file \n     <ExcludedFeatureTypeList>\n                               <ExcludedFeatureType></ExcludedFeatureType>\n                               <ExcludedFeatureType></ExcludedFeatureType>\n                               <ExcludedFeatureType></ExcludedFeatureType>\n                               <ExcludedFeatureType></ExcludedFeatureType>\n                                <ExcludedFeatureType></ExcludedFeatureType>\n      </ExcludedFeatureTypeList>\n\nin ant 1.6.2 , there was no entry in .txt file but in 1.10.1\n\nConversionSpec.ExcludedFeatureTypeList.ExcludedFeatureType=,,,,\nConversionSpec.Midpoint.SGMidpoint.MidpointInputFile=\n\n\n<echoproperties destfile=\"echoproperties.txt\" failonerror=\"false\">\n  <propertyset>\n      <propertyref prefix=\"ProductSpec.\"/>\n      <propertyref prefix=\"ConversionSpec.\"/>\n      <propertyref prefix=\"ExtendedListingsSpec.\"/>\n      <propertyref prefix=\"Has.\"/>\n      <propertyref name=\"DATA_RELDATE\"/>\n      <propertyref name=\"VOICE_RELDATE\"/>\n      <propertyref name=\"UK_RELDATE\"/>\n      <propertyref name=\"CAN_RELDATE\"/>\n\t  <propertyref name=\"SGP_RELDATE\"/>\n\t  <propertyref name=\"BRA_RELDATE\"/>\n      <propertyref name=\"OracleServerHostName\"/>\n      <propertyref name=\"OracleDBInstance\"/>\n      <propertyref name=\"oracleNetServiceName\"/>\n      <propertyref name=\"rdfUserName\"/>\n      <propertyref name=\"rdfPassword\"/>\n      <propertyref name=\"xmobUserName\"/>\n      <propertyref name=\"xmobPassword\"/>\n      <propertyref name=\"xmobSID\"/>\n      <propertyref name=\"xmobUserNameSec\"/>\n      <propertyref name=\"xmobPasswordSec\"/>\n      <propertyref name=\"IS_CMOB\"/>\n      <propertyref name=\"ExcludedCIFeature\"/>\n      <propertyref name=\"ExcludedCIValue\"/>\n      <propertyref name=\"PublishDiscoverCities\"/>\n      <propertyref name=\"PublishXtdl\"/>\n      <propertyref name=\"Publish4WD\"/>\n      <propertyref name=\"PublishCityModels\"/>\n      <propertyref name=\"Publish3DJunctions\"/>\n      <propertyref name=\"PublishPriority\"/>\n\t  <propertyref name=\"AdminCountryInclude\"/>\t  \n\t  <propertyref name=\"AdminCountryExclude\"/>\t\t  \n    </propertyset>\n</echoproperties>", "is_private": false, "bug_id": 61442, "id": 200365, "time": "2017-08-17T20:37:31Z", "creator": "chandra.chekuri@here.com", "creation_time": "2017-08-17T20:37:31Z", "attachment_id": 35248}, {"count": 1, "tags": [], "creator": "bodewig@apache.org", "attachment_id": null, "is_private": false, "id": 200374, "time": "2017-08-18T13:58:47Z", "bug_id": 61442, "creation_time": "2017-08-18T13:58:47Z", "text": "I'm afraid I don't see what you describe - or misunderstand what you are saying\n\n$ cat 61442.xml \n<project default=\"test\">\n  <property name=\"a\" value=\"\"/>\n  <property name=\"b\" value=\"x\"/>\n  <target name=\"test\">\n    <echoproperties>\n      <propertyset>\n        <propertyref name=\"ant.version\"/>\n        <propertyref name=\"a\"/>\n        <propertyref name=\"b\"/>\n        <propertyref name=\"c\"/>\n      </propertyset>\n    </echoproperties>\n  </target>\n</project>\n\nI echo ant.version just to be sure, a non-existent property with \"c\", a property with an empty value with \"a\" and a \"normal\" property with \"b\". Here are the results\n\n$ /devel/ASF/apache-ant-1.6.1/bin/ant -f /tmp/61442.xml \nBuildfile: /tmp/61442.xml\n\ntest:\n[echoproperties] #Ant properties\n[echoproperties] #Fri Aug 18 15:57:22 CEST 2017\n[echoproperties] b=x\n[echoproperties] a=\n[echoproperties] ant.version=Apache Ant version 1.6.1 compiled on February 12 2004\n\nBUILD SUCCESSFUL\nTotal time: 0 seconds\n\n$ ant -f /tmp/61442.xml \nBuildfile: /tmp/61442.xml\n\ntest:\n[echoproperties] #Ant properties\n[echoproperties] #Fri Aug 18 15:57:41 CEST 2017\n[echoproperties] a=\n[echoproperties] ant.version=Apache Ant(TM) version 1.10.2alpha compiled on July 23 2017\n[echoproperties] b=x\n\nBUILD SUCCESSFUL\nTotal time: 0 seconds\n\nAs you can see 1.6.1 both seem to behave the same, both echo the property a with an empty value and neither echoes anything for a non-existent property."}, {"count": 2, "tags": [], "bug_id": 61442, "text": "sorry for not being clear.\n\nwhen i run using ant 1.6.1 , I do not see the properties which are empty .\n\nbut now when we are using ant 1.10.1 , we are seeing the properties which are empty and thats causing our existing workflow to fail.\n\nas shown in attachment the output of 1.6.1 and 1.10.1 \n\nConversionSpec.ExcludedFeatureTypeList.ExcludedFeatureType=,,,,\n\nthe above property was not echoed when used with 1.6.1\n\nmy question is there a option not to echo properties which are empty?", "id": 200375, "time": "2017-08-18T14:47:34Z", "creator": "chandra.chekuri@here.com", "creation_time": "2017-08-18T14:47:34Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 61442, "attachment_id": null, "id": 200377, "time": "2017-08-18T16:12:37Z", "creator": "bodewig@apache.org", "creation_time": "2017-08-18T16:12:37Z", "is_private": false, "text": "As I've shown I do see properties with empty values in 1.6.1 a well.\n\nThere must be something different going on in your case, can you create a small self-contained example like the one I've shown that creates different results for 1.6.1 and 1.10.1?\n\nSimilar to bug 61315 I suspect it is the way you set properties (and you don't tell us how it happens).\n\nBack in bug 61315 I suspected you'd use xmlproperty to read properties and bug 26286 could indeed explain why you see properties with empty values now that you didn't see in 1.6.1. If this is the case then the properties simply don't exist in your 1.6.1 build and the reason is not whether their values is empty. So in this case we would simply be looking at the wrong task and we'd need to talk about xmlproperty reading things rather than echoproperties writing things."}, {"count": 4, "tags": [], "bug_id": 61442, "text": "is there anything we can do to resolve this?", "id": 200624, "time": "2017-09-03T15:22:43Z", "creator": "bodewig@apache.org", "creation_time": "2017-09-03T15:22:43Z", "is_private": false, "attachment_id": null}]