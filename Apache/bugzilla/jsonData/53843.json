[{"count": 0, "tags": [], "creator": "rstoyanchev@yahoo.com", "is_private": false, "text": "After async processing starts in some container thread A, subsequent calls to request.isAsyncStarted() return true as expected.\n\nHowever as soon as an application thread B calls asyncContext.dispatch(), isAsyncStarted() begins to return false even if the actual dispatch has not yet occurred. For this case the spec says: \"the dispatch operation will be delayed until after the container-initiated dispatch has returned to the container.\"\n\nFor the brief period after dispatch() is called but before the actual dispatch begins (and DispatcherType becomes ASYNC), isAsyncStarted should return true. Without that, the return value of isAsyncStarted() may suddenly change while thread A is still exiting causing it to not recognize that async processing started and that it needs to exit as quickly as possible.", "id": 162018, "time": "2012-09-08T00:42:57Z", "bug_id": 53843, "creation_time": "2012-09-08T00:42:57Z", "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 53843, "text": "Thanks for the report. The same holds for complete() as well as dispatch(). This has been fixed in trunk and 7.0.x and will be included in 7.0.31 onwards.", "id": 162023, "time": "2012-09-08T15:13:49Z", "creator": "markt@apache.org", "creation_time": "2012-09-08T15:13:49Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 53843, "text": "Actually, complete() is different (the TCK fails if we treat it the same way). As soon as complete() is called , isAsyncStarted() must return false.", "id": 162299, "time": "2012-09-20T09:57:23Z", "creator": "markt@apache.org", "creation_time": "2012-09-20T09:57:23Z", "is_private": false, "attachment_id": null}]