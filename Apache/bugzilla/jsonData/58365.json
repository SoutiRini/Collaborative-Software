[{"count": 0, "tags": [], "text": "The current Sheet interface allows the retrieval of comments only by location (row,col). In XSLX files, it is easily possible to have a comment reference a cell that is not physically present in the file.\nIterating over all rows and columns as reported by get{First,Last}RowNum and get{First,Last}CellNum with hence miss comments that reference positions in \"null\" rows as well as positions to the left/right of physically present cells in a given row.\n\n\nAs discussed on poi-dev[1], I propose adding the following method to Sheet:\n\n    /**\n     * Returns all cell addresses of this sheet\n     * having one or more comments associated.\n     * @return A set of cell references (in no particular order).\n     */\n    Set<String> getAllCellCommentRefs();\n\n\n\n[1] http://mail-archives.apache.org/mod_mbox/poi-dev/201509.mbox/ajax/%3C55E84053.4080002%40erven.at%3E", "is_private": false, "id": 185119, "creator": "hannes@erven.at", "time": "2015-09-11T16:20:41Z", "bug_id": 58365, "creation_time": "2015-09-11T16:20:41Z", "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 58365, "attachment_id": 33098, "is_private": false, "id": 185120, "time": "2015-09-11T16:21:37Z", "creator": "hannes@erven.at", "creation_time": "2015-09-11T16:21:37Z", "text": "Created attachment 33098\nSuggested patch\n\nSuggested patch with implementation for HSSF, XSSF and SXSSF."}, {"count": 2, "tags": [], "bug_id": 58365, "attachment_id": null, "is_private": false, "id": 185218, "time": "2015-09-14T07:59:51Z", "creator": "onealj@apache.org", "creation_time": "2015-09-14T07:59:51Z", "text": "I think a Set<CellAddress> would be better than Set<String> since it eliminates the burden of string parsing in client code. Unfortunately, the class CellAddress doesn't currently exist in POI.\n\nYou don't want CellReference, since that has a concept of relative/absolute that doesn't apply here.\nYou don't want CellRangeAddress since that forms an area defined by the top left and lower left cells.\n\nTaking a step back, can you get away with returning an array/list/iterator on the CellComment objects themselves instead of the anchors? I'm guessing the CellComment objects would be more useful to most people. If you need both, consider some kind of Map<CellAddress, CellComment>.\n\nIf you end up writing a CellAddress class, there are a quite a few classes that could be updated with this higher-level data structure."}, {"count": 3, "tags": [], "text": "Created attachment 33143\nSuggested patch, version 2\n\nJaven, thank you for your suggestions.\n\nI'll attach a new patch that includes a new class org.apache.poi.ss.util.CellAddress and now suggests a Sheet.getCellComments() with return type Map<CellAdress, Comment> method.\n\nInternally, XSSF's CommentsTable still uses String cell references (addresses, in fact) to manage the comments; on first sight, changing that is possible, but will bloat the patch.\n\nAlso, I noticed that various XSSF implementation use CellReference(row,col) as a CellAddress replacement. I guess that's the places you meant that would also benefit from a switch to CellAddress ?", "is_private": false, "bug_id": 58365, "id": 185488, "time": "2015-09-25T19:59:57Z", "creator": "hannes@erven.at", "creation_time": "2015-09-25T19:59:57Z", "attachment_id": 33143}, {"count": 4, "tags": [], "creator": "hannes@erven.at", "is_private": false, "text": "Created attachment 33144\nSuggested patch, version 2, with CellAdress extended usage\n\nHere's another version of the patch.\nXSSF's CommentsTable now also internally uses CellAddress objects to manage the comments, and hence a bunch of locations that previously used \"String ref\" were converted to \"CellAdress ref\".", "id": 185489, "time": "2015-09-25T20:14:47Z", "bug_id": 58365, "creation_time": "2015-09-25T20:14:47Z", "attachment_id": 33144}, {"count": 5, "tags": [], "bug_id": 58365, "attachment_id": null, "is_private": false, "id": 185787, "time": "2015-10-18T16:06:38Z", "creator": "hannes@erven.at", "creation_time": "2015-10-18T16:06:38Z", "text": "Hi,\n\n\nis there any feedback/thoughts on the patches?\n\n\n\nThanks!\n\n-hannes"}, {"count": 6, "tags": [], "bug_id": 58365, "attachment_id": null, "is_private": false, "id": 186494, "time": "2015-11-23T09:40:00Z", "creator": "onealj@apache.org", "creation_time": "2015-11-23T09:40:00Z", "text": "Added in r1715743.\n\nDocs updated r1715746."}, {"count": 7, "tags": [], "creator": "onealj@apache.org", "attachment_id": null, "text": "Disregard comment 6.", "id": 186495, "time": "2015-11-23T09:40:50Z", "bug_id": 58365, "creation_time": "2015-11-23T09:40:50Z", "is_private": false}, {"count": 8, "tags": [], "creator": "onealj@apache.org", "attachment_id": null, "is_private": false, "id": 186502, "time": "2015-11-23T15:24:25Z", "bug_id": 58365, "creation_time": "2015-11-23T15:24:25Z", "text": "Updated CommentsTable in r1715784.\nUpdated XSSFSheetXMLHandler in r1715794.\nUpdated remainder of patch in r1715839, plus a unit test for Sheet.getCellComments.\n\nDocs and quick-guide updated in r1715840 and r1715842.\n\nHannes, thanks for your contribution to the POI project!\nThese changes should be available in the upcoming POI 3.14beta1 release."}]