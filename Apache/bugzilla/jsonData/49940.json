[{"count": 0, "tags": [], "bug_id": 49940, "attachment_id": null, "id": 139895, "time": "2010-09-16T07:41:12Z", "creator": "vineet.potdar@yahoo.com", "creation_time": "2010-09-16T07:41:12Z", "is_private": false, "text": "I am trying to read and write to a .xlsx file from two separate Java methods. The first write goes through fine, at the second write (workbook.write(fileoutputstream) throws the error:\norg.apache.xmlbeans.impl.values.XmlValueDisconnectedException\n\nStacktrace:\n\nException in thread \"main\" org.apache.xmlbeans.impl.values.XmlValueDisconnectedException\n\tat org.apache.xmlbeans.impl.values.XmlObjectBase.check_orphaned(XmlObjectBase.java:1213)\n\tat org.apache.xmlbeans.impl.values.XmlObjectBase.newCursor(XmlObjectBase.java:243)\n\tat org.apache.xmlbeans.impl.values.XmlComplexContentImpl.arraySetterHelper(XmlComplexContentImpl.java:1073)\n\tat org.openxmlformats.schemas.spreadsheetml.x2006.main.impl.CTFontsImpl.setFontArray(Unknown Source)\n\tat org.apache.poi.xssf.model.StylesTable.writeTo(StylesTable.java:319)\n\tat org.apache.poi.xssf.model.StylesTable.commit(StylesTable.java:377)\n\tat org.apache.poi.POIXMLDocumentPart.onSave(POIXMLDocumentPart.java:177)\n\tat org.apache.poi.POIXMLDocumentPart.onSave(POIXMLDocumentPart.java:181)\n\tat org.apache.poi.POIXMLDocument.write(POIXMLDocument.java:214)\n\tat attendancerecorder.code.StudentRosterTest.checkOutStudent(StudentRosterTest.java:230)\n\tat attendancerecorder.code.AttendanceRecorderView.main(AttendanceRecorderView.java:46)"}, {"count": 1, "tags": [], "bug_id": 49940, "attachment_id": null, "id": 139897, "time": "2010-09-16T07:58:23Z", "creator": "vineet.potdar@yahoo.com", "creation_time": "2010-09-16T07:58:23Z", "is_private": false, "text": "Forgot to add that it did work the first few times. Then suddenly it started throwing the error"}, {"count": 2, "attachment_id": null, "bug_id": 49940, "is_private": false, "id": 139898, "time": "2010-09-16T09:48:44Z", "creator": "apache@gagravarr.org", "creation_time": "2010-09-16T09:48:44Z", "tags": [], "text": "I've confirmed the bug, and added a failing, disabled unit test to xssf/usermodel/TestXSSFBugs\n\nThe problem is coming from deep within xmlbeans, so will leave it for someone who knows more about that to look into"}, {"count": 3, "tags": [], "text": "Can I have any updates on it? I am also facing the same issue. writing a fileOutputStream into a workbook works fine for the first time, but throws this exception in second attempt. This issue is critical. Would like to know the possible causes for this exception. A quick help is highly appreciated.", "is_private": false, "bug_id": 49940, "id": 151786, "time": "2011-11-25T11:24:25Z", "creator": "csparulekar@gmail.com", "creation_time": "2011-11-25T11:24:25Z", "attachment_id": null}, {"text": "I think we're still not sure if this is an XMLBeans bug (either runtime or schema), or a problem with how we're calling XMLBeans\n\nIf you do make progress with identifying the cause of this, or the solution, please do report back!", "tags": [], "creator": "apache@gagravarr.org", "attachment_id": null, "count": 4, "id": 151787, "time": "2011-11-25T11:56:50Z", "bug_id": 49940, "creation_time": "2011-11-25T11:56:50Z", "is_private": false}, {"text": "Hi,\n\nThere is a need for our applications to be comaptible with Excel 2007 along\nwith 2003. \n\nWe have a multiple write functionality and with the POI 3.7 using Workbook and\nWorkbookFactory class works fine for 2003 version but fails for 2007 version.\nWe get an XMLValueDisconnectedException when we try to write the same workbook\ntwice.\n\n\nLooks like there is a xmlbeans bug or may be POI calling xmlbeans...\nIs there any code of POI calling xmlbeans that triggers the problem...\n\nAny help in this view is appreciated.\n\nRevert in case you need any further info.\n\nRegards\nVivek Majithia.", "tags": [], "creator": "vivek.majithia@igatepatni.com", "attachment_id": null, "count": 5, "id": 157151, "time": "2012-04-04T13:27:42Z", "bug_id": 49940, "creation_time": "2012-04-04T13:27:42Z", "is_private": false}, {"count": 6, "tags": [], "bug_id": 49940, "attachment_id": null, "id": 164358, "time": "2013-01-03T16:15:30Z", "creator": "lank81@gmail.com", "creation_time": "2013-01-03T16:15:30Z", "is_private": false, "text": "This bug has been around for quite a while.  I'm still seeing this issue as of 1/3/2013 POI-3.8.  Any idea as to when this will be updated?  I'm not able to do any writing to an XMLFile with the workbook.write functionality.\n\nThanks,\nMatt"}, {"text": "This bug will remain open until someone with the time is able to work out first if it's a bug in XMLBeans, or a bug in how POI calls XMLBeans, then secondly work to get the issue (once tracked down) resolved. If this bug affects you, then you're a prime candidate to help!", "tags": [], "creator": "apache@gagravarr.org", "is_private": false, "count": 7, "id": 164426, "time": "2013-01-07T09:56:44Z", "bug_id": 49940, "creation_time": "2013-01-07T09:56:44Z", "attachment_id": null}, {"count": 8, "attachment_id": null, "bug_id": 49940, "is_private": false, "id": 165713, "time": "2013-03-08T07:43:26Z", "creator": "drmeier@gmx.de", "creation_time": "2013-03-08T07:43:26Z", "tags": [], "text": "I had the same problem too.\n\nException in thread \"main\" org.apache.xmlbeans.impl.values.XmlValueDisconnectedException\n\tat org.apache.xmlbeans.impl.values.XmlObjectBase.check_orphaned(XmlObjectBase.java:1258)\n\nXmlBeans Version 2.6.0.\n\nI found out that i had the problem with an element that was there over 1000 times in a list.\n\nAs soon as i reduced the amount to 523 it works. As soon as i increased it over 524 it stops.\n\nThe filesize itself doesn't seem to be the problem ~ 500kb."}, {"count": 9, "tags": [], "bug_id": 49940, "attachment_id": null, "is_private": false, "id": 165826, "time": "2013-03-14T08:10:28Z", "creator": "drmeier@gmx.de", "creation_time": "2013-03-14T08:10:28Z", "text": "Now i had the problem in another context. I used the \"getXXXXArray()\" method to iterate over a list of XML Elements.\n\nI removed an element with the removeXXXX() method.\n\nAs soon as i forgot to refresh the Array afterwards with .getXXXXArray() the XmlValueDisconnectedException happens again.\n\nAfter the correction the code works fine:\n\nDTCVALUE[] dtcValues = envData.getDTCVALUES().getDTCVALUEArray();\nfor(int k=dtcValues.length-1; k > 0 ;k--) {\n\tDTCVALUE dtcValue = dtcValues[k];\n\tif(!dtcMap.containsKey(dtcValue.getStringValue())){\n\t\tdtcMap.put(dtcValue.getStringValue(), envData);\n\t}else{\n\t\tDTCVALUES vals = envData.getDTCVALUES();\n\t\tvals.removeDTCVALUE(k);\n\n\t\t// !!!!!!! This is necessary, otherwise the Disconnected\n                // Exception occors. !!!!!!!\n\t\tdtcValues = envData.getDTCVALUES().getDTCVALUEArray();\n\t}\n}"}, {"count": 10, "tags": [], "bug_id": 49940, "attachment_id": null, "id": 165827, "time": "2013-03-14T08:20:08Z", "creator": "drmeier@gmx.de", "creation_time": "2013-03-14T08:20:08Z", "is_private": false, "text": "(In reply to comment #8)\n> I had the same problem too.\n> \n> Exception in thread \"main\"\n> org.apache.xmlbeans.impl.values.XmlValueDisconnectedException\n> \tat\n> org.apache.xmlbeans.impl.values.XmlObjectBase.check_orphaned(XmlObjectBase.\n> java:1258)\n> \n> XmlBeans Version 2.6.0.\n> \n> I found out that i had the problem with an element that was there over 1000\n> times in a list.\n> \n> As soon as i reduced the amount to 523 it works. As soon as i increased it\n> over 524 it stops.\n> \n> The filesize itself doesn't seem to be the problem ~ 500kb.\n\nThis also could be solved with my statement in Comment #9. It doesn't have something to do with the size, simply the reassigment of the array is necesarry."}, {"count": 11, "tags": [], "bug_id": 49940, "attachment_id": null, "is_private": false, "id": 165837, "time": "2013-03-14T13:13:59Z", "creator": "drmeier@gmx.de", "creation_time": "2013-03-14T13:13:59Z", "text": "(In reply to comment #9)\n> Now i had the problem in another context. I used the \"getXXXXArray()\" method\n> to iterate over a list of XML Elements.\n> \n> I removed an element with the removeXXXX() method.\n> \n> As soon as i forgot to refresh the Array afterwards with .getXXXXArray() the\n> XmlValueDisconnectedException happens again.\n> \n> After the correction the code works fine:\n> \n> DTCVALUE[] dtcValues = envData.getDTCVALUES().getDTCVALUEArray();\n> for(int k=dtcValues.length-1; k > 0 ;k--) {\n> \tDTCVALUE dtcValue = dtcValues[k];\n> \tif(!dtcMap.containsKey(dtcValue.getStringValue())){\n> \t\tdtcMap.put(dtcValue.getStringValue(), envData);\n> \t}else{\n> \t\tDTCVALUES vals = envData.getDTCVALUES();\n> \t\tvals.removeDTCVALUE(k);\n> \n> \t\t// !!!!!!! This is necessary, otherwise the Disconnected\n>                 // Exception occors. !!!!!!!\n> \t\tdtcValues = envData.getDTCVALUES().getDTCVALUEArray();\n> \t}\n> }\n\n\nLoop must run until \"k >= 0\", sorry!"}, {"text": "Not sure about my analysis, but I got that error when I tried to duplicate a Row. I did createRow(rowIndex+1). By that, I meant \"insert a Row at index rowIndex+1\". After that I had to clone the value of each cell from the Row at rowIndex to the Row at rowIndex+1. However I already had a Row at rowIndex+1 (before the createRow), and I think that the previous cells on this Row get lost and don't point on anything anymore.\n\nIf I am correct, then it would not be a problem in the XMLBeans library. How does the Apache Poi library handle the creation of a Row (or a Cell) if this Row/Cell already exists ? Does it overwrite it ? If yes, the previous Row/Cell object becomes indeed obsolete (which is freaking problematic, since each createRow/createCell can make great damage)\n\nAgain, that's just a guess, and I have to dig a little further in my code ...", "tags": [], "creator": "j.aden54@gmail.com", "attachment_id": null, "count": 12, "id": 167125, "time": "2013-05-09T21:52:40Z", "bug_id": 49940, "creation_time": "2013-05-09T21:52:40Z", "is_private": false}, {"text": "(In reply to comment #12)\n\nNow a minimal code that triggers the error :\n\nRow row = _sheet.getRow(0);     // defined\nCell orphaned = row.getCell(0); // defined\nRow row1 = _sheet.createRow(0); // we lose orphaned\nSystem.out.println(orphaned);   // we trigger the exception", "tags": [], "creator": "j.aden54@gmail.com", "attachment_id": null, "count": 13, "id": 167140, "time": "2013-05-10T21:45:25Z", "bug_id": 49940, "creation_time": "2013-05-10T21:45:25Z", "is_private": false}, {"count": 14, "tags": [], "bug_id": 49940, "attachment_id": 30271, "id": 167141, "time": "2013-05-10T22:18:10Z", "creator": "j.aden54@gmail.com", "creation_time": "2013-05-10T22:18:10Z", "is_private": false, "text": "Created attachment 30271\n(patch) Code in org.apache.poi.xssf.usermodel.XSSFSheet (Library poi-ooxml-3.9)\n\nI don't know exactly what the CTRow.Factory.newInstance() does, but I am pretty sure that it creates a new CTRow which is decorellated from the first one.\n\nIf we look at all the cells in the Row and remove them, it should do the trick !"}, {"count": 15, "tags": [], "text": "(In reply to Jolteon from comment #13)\n> (In reply to comment #12)\n> \n> Now a minimal code that triggers the error :\n> \n> Row row = _sheet.getRow(0);     // defined\n> Cell orphaned = row.getCell(0); // defined\n> Row row1 = _sheet.createRow(0); // we lose orphaned\n> System.out.println(orphaned);   // we trigger the exception\n\nYou shouldn't be calling createRow for a row that already exists. I'm surprised that it doesn't blow up earlier...\n\nHowever, there does seem to be some logic in XSSFSheet for this case, which I don't understand.\n\nDoes anyone know the use case for calling createRow with the index of a row that already exists?", "is_private": false, "bug_id": 49940, "id": 168046, "time": "2013-06-25T15:56:22Z", "creator": "apache@gagravarr.org", "creation_time": "2013-06-25T15:56:22Z", "attachment_id": null}, {"count": 16, "tags": [], "text": "It also occurred when calling cloneSheet() method before write():\n--------------------------------------------------------------------------\n      wb.cloneSheet(0);\n      File destPath = new File(outputFilePathName).getParentFile();\n      if (!destPath.exists())\n      {\n        log.info(\"Created path {}? {}\", destPath.getAbsolutePath(), destPath.mkdirs());\n      }\n      wb.write(new FileOutputStream(outputFilePathName));\n--------------------------------------------------------------------------", "is_private": false, "bug_id": 49940, "id": 168389, "time": "2013-07-09T01:32:41Z", "creator": "innocentliny@gmail.com", "creation_time": "2013-07-09T01:32:41Z", "attachment_id": null}, {"count": 17, "tags": [], "bug_id": 49940, "attachment_id": null, "id": 169152, "time": "2013-08-05T20:18:57Z", "creator": "dominik.stadler@gmx.at", "creation_time": "2013-08-05T20:18:57Z", "is_private": false, "text": "*** Bug 46662 has been marked as a duplicate of this bug. ***"}, {"count": 18, "tags": [], "bug_id": 49940, "attachment_id": null, "id": 169987, "time": "2013-09-09T13:57:58Z", "creator": "dominik.stadler@gmx.at", "creation_time": "2013-09-09T13:57:58Z", "is_private": false, "text": "There are multiple things that can lead to these XmlValueDisconnectedException, they basically indicate that an XmlBeans-object was removed from the tree of object, but later still used, either because it is still referenced or was incorrectly removed. \n\nA few such cases were fixed over the last weeks, however this one still remains. \n\nIt seems to be located in StylesTable.writeTo() where all the styles are copied around, not sure why this is necessary in the first place..."}, {"count": 19, "tags": [], "bug_id": 49940, "attachment_id": null, "id": 170283, "time": "2013-09-26T12:19:34Z", "creator": "dean.walker@friendslife.co.uk", "creation_time": "2013-09-26T12:19:34Z", "is_private": false, "text": "I've seen this behaviour in various places (I'm using POI 3.10 Beta 1).\nThis disconnection happens during the first save where new 'container' objects are created.\nFor example:\n\t\t// Fonts\n\t\tCTFonts ctFonts = CTFonts.Factory.newInstance();\n\t\tctFonts.setCount(fonts.size());\n\t\tCTFont[] ctfnt = new CTFont[fonts.size()];\n\t\tidx = 0;\n\t\tfor(XSSFFont f : fonts) ctfnt[idx++] = f.getCTFont();\n\t\tctFonts.setFontArray(ctfnt);\n\t\tstyleSheet.setFonts(ctFonts);\n\nHere CTFonts is a container for a CTFont array.\nIf we reuse the existing container, the problem goes away, example:\n\n\t\t// Fonts\n\t\tCTFonts ctFonts = styleSheet.getFonts();\n\t\tif (ctFonts == null) {\n\t\t\tctFonts = CTFonts.Factory.newInstance();\n\t\t}\n\t\tctFonts.setCount(fonts.size());\n\t\tCTFont[] ctfnt = new CTFont[fonts.size()];\n\t\tidx = 0;\n\t\tfor(XSSFFont f : fonts) ctfnt[idx++] = f.getCTFont();\n\t\tctFonts.setFontArray(ctfnt);\n\t\tstyleSheet.setFonts(ctFonts);\n\nThis works for my use case where I read an existing spreadsheet, update cell values only, and then save the modified spreadsheet. I've not tried the use case where fonts (or other objects) are programatically modified or added or deleted.\nThere are numerous places in StylesTable.writeTo() where I have applied this same solution.\nI also encountered the same problem with named ranges and applied the same solution to XSSFWorkBook.saveNamedRanges().\nThere may be other places where the same symptom appears depending on the features you use in your spreadsheet.\nThis solution is not ideal (it cures the symptom rather than the cause) but I hope this information will help resolve this bug."}, {"text": "Created attachment 30885\nUpdate to StylesTable to reuse existing container objects.\n\nSuspect similar changes need to be applied to 'Formats' if your spreadsheet has custom formats", "tags": [], "creator": "dean.walker@friendslife.co.uk", "attachment_id": 30885, "count": 20, "id": 170284, "time": "2013-09-26T12:24:26Z", "bug_id": 49940, "creation_time": "2013-09-26T12:24:26Z", "is_private": false}, {"count": 21, "tags": [], "bug_id": 49940, "attachment_id": null, "id": 170851, "time": "2013-10-26T07:34:06Z", "creator": "dominik.stadler@gmx.at", "creation_time": "2013-10-26T07:34:06Z", "is_private": false, "text": "I have applied this patch now as r1535938. \n\nAs for the other places where this potentially can happen, I looked at a few of them and could not immediately decide if the problem can happen for them as well or not. On the other hand we are working on some \"stress-tests\" which will run the set of sample-files that we use for testing and do various things on them, this way we should uncover more of these cases if there are still places left where it can happen. \n\nAdditional patches with test-cases are very welcome as well, naturally!"}, {"text": "Created attachment 31596\nPatch proposal for solving this problem after cloneSheet() call\n\nHere is a patch proposal for POI 3.10 to solve the problem occurring after cloneSheet() call.", "tags": [], "creator": "guarale@hotmail.com", "is_private": false, "count": 22, "id": 175052, "time": "2014-05-06T10:37:54Z", "bug_id": 49940, "creation_time": "2014-05-06T10:37:54Z", "attachment_id": 31596}, {"count": 23, "tags": [], "text": "I have created an object of the Xls_Reader only once, and saved it at the last, still I got the exception...\n\nI am creating a .xlsx file every time I am trying to write with date and time stamp.\n\nStill I have encountered the error.\n\nI am not using the same file to write twice into...\n\nERROR\n=======\n\norg.apache.xmlbeans.impl.values.XmlValueDisconnectedException\n\tat org.apache.xmlbeans.impl.values.XmlObjectBase.check_orphaned(XmlObjectBase.java:1244)\n\tat org.apache.xmlbeans.impl.values.XmlObjectBase.newCursor(XmlObjectBase.java:272)\n\tat org.apache.xmlbeans.impl.values.XmlComplexContentImpl.arraySetterHelper(XmlComplexContentImpl.java:1073)\n\tat org.openxmlformats.schemas.spreadsheetml.x2006.main.impl.CTFontsImpl.setFontArray(Unknown Source)\n\tat org.apache.poi.xssf.model.StylesTable.writeTo(StylesTable.java:319)\n\tat org.apache.poi.xssf.model.StylesTable.commit(StylesTable.java:377)\n\tat org.apache.poi.POIXMLDocumentPart.onSave(POIXMLDocumentPart.java:177)\n\tat org.apache.poi.POIXMLDocumentPart.onSave(POIXMLDocumentPart.java:181)\n\tat org.apache.poi.POIXMLDocument.write(POIXMLDocument.java:214)\n\tat com.soapuitutorial.util.Xls_Reader.save(Xls_Reader.java:547)\n\tat com.soapuitutorial.script.ProjectTestRunner.main(ProjectTestRunner.java:73)\n\n\nCODE - save()\n==============\n\npublic void save(){\n\t\ttry{\n\t\tfileOut = new FileOutputStream(path);\n\n\t\tworkbook.write(fileOut);\n\t\t//fileOut.flush();\n\t    fileOut.close();\n\t    fileOut=null;\n\t    }catch(Exception e){\n\t    \te.printStackTrace();\n\t    }\n\t}", "attachment_id": null, "bug_id": 49940, "id": 187460, "time": "2016-01-07T06:48:18Z", "creator": "dey.avik5@gmail.com", "creation_time": "2016-01-07T06:48:18Z", "is_private": false}, {"count": 24, "tags": [], "bug_id": 49940, "attachment_id": null, "id": 187461, "time": "2016-01-07T07:44:58Z", "creator": "dominik.stadler@gmx.at", "creation_time": "2016-01-07T07:44:58Z", "is_private": false, "text": "Please don't post onto an old bug that is set to resolved, it likely will go unnoticed. If you still have an issue when using the latest released version of POI, please post full steps to reproduce the problem (best as self-contained unit test) together with sample files if needed in a new bug report."}]