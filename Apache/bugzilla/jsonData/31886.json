[{"attachment_id": null, "tags": [], "bug_id": 31886, "text": "We have a pretty heavily loaded website that periodically (1 or 2 times a day) hangs (stops servicing \nrequests) with the following stack trace:\n\njava.util.ConcurrentModificationException\n        at java.util.HashMap$HashIterator.nextEntry(HashMap.java:782)\n        at java.util.HashMap$EntryIterator.next(HashMap.java:824)\n        at java.util.HashMap.writeObject(HashMap.java:976)\n        at sun.reflect.GeneratedMethodAccessor133.invoke(Unknown Source)\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n        at java.lang.reflect.Method.invoke(Method.java:324)\n        at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:809)\n        at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1296)\n        at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1247)\n        at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1052)\n        at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:278)\n        at org.apache.catalina.session.StandardSession.writeObject(StandardSession.java:1429)\n        at org.apache.catalina.session.StandardSession.writeObjectData(StandardSession.java:852)\n        at org.apache.catalina.session.JDBCStore.save(JDBCStore.java:690)\n        at org.apache.catalina.session.PersistentManagerBase.writeSession(PersistentManagerBase.java:\n739)\n        at \norg.apache.catalina.session.PersistentManagerBase.processMaxIdleBackups(PersistentManagerBase.java\n:1063)\n        at \norg.apache.catalina.session.PersistentManagerBase.processPersistenceChecks(PersistentManagerBase.ja\nva:477)\n        at org.apache.catalina.session.PersistentManagerBase.run(PersistentManagerBase.java:1141)\n        at java.lang.Thread.run(Thread.java:534)\n\nHere are a couple ways this could be fixed:\n\n1. catch the ConcurrentModificationException in JDBCStore.save()\n2. catch Exception in PersistentManagerBase.run()\n\nI don't believe this is will be a problem with Tomcat 5 because ContainerBase.backgroundProcess() \ncatches Exception.   But I haven't tested this in Tomcat 5 yet (soon I hope).\n\nNote: I am currently running Tomcat 4.1.31 but I know we had this problem with earlier versions \n(4.1.24).   I have worked around it before and will do so again by making my own custom build but it \nwould be nice to get this one fixed.", "count": 0, "id": 65672, "time": "2004-10-25T21:32:08Z", "creator": "tom@squeat.com", "creation_time": "2004-10-25T21:32:08Z", "is_private": false}, {"count": 1, "tags": [], "creator": "markt@apache.org", "text": "This has been fixed in CVS HEAD. Grateful if you could test when the \nopportunity arises.", "id": 66980, "time": "2004-11-15T23:15:43Z", "bug_id": 31886, "creation_time": "2004-11-15T23:15:43Z", "is_private": false, "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 31886, "is_private": false, "count": 2, "id": 73322, "time": "2005-04-06T03:10:35Z", "creator": "tom@squeat.com", "creation_time": "2005-04-06T03:10:35Z", "text": "Sorry to respond so late... but this particular bug does seem to be fixed."}]