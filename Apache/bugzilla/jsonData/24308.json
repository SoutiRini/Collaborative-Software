[{"count": 0, "tags": [], "text": "Example JSP:\n<%@ page contentType=\"text/html;charset=UTF8\" %>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF8\" />\n\n<FORM>\n\t<INPUT TYPE=\"text\" NAME=\"i1\" />\n</FORM>\n\n<%    \t\n\tString i1=request.getParameter(\"i1\");\n\tif(i1 ==null)return;\n\tbyte[] bytes=i1.getBytes();\n%>\nValue of String(bytes,\"UTF8\"):<br>\n<%=new String(bytes,\"UTF8\") %>\n<br>\n\nValues of the byte array:<br>\n\n<% \n    for(int i=0; i<bytes.length; i++){\n%>\n\t<%= bytes[i]%> <br>\n<%  } %>\n\n\nWhen I enter some characters above 127 e.g. the character \n\"\u00c4\" or a cyrillic character then\n\nrequest.getParameter(\"i1\").getBytes()\n\nreturns a byte array that does not contain the \ncorrect UTF( encoding for these characters.\nThis is easily seen by looking at the output generated by\n<%=new String(bytes,\"UTF8\") %>\n\nBy the way the length of the byte array is ok so for \"\u00c4\" it has length two\nand for chinese characters it hastb length 3.\n\nSame Problem already in Tomcat 4.1.27", "is_private": false, "id": 46598, "creator": "thilowill@gmx.net", "time": "2003-10-31T22:17:29Z", "bug_id": 24308, "creation_time": "2003-10-31T22:17:29Z", "attachment_id": null}, {"count": 1, "tags": [], "creator": "whoschek@lbl.gov", "attachment_id": null, "is_private": false, "id": 46601, "time": "2003-11-01T01:14:15Z", "bug_id": 24308, "creation_time": "2003-11-01T01:14:15Z", "text": "Same problem here using 4.1.29 with\n\nHttpServletResponse.getOutputStream().write(byte[])\n\nHowever, this worked fine with tomcat-4.1.27, so it seems to be a regression\nagainst 4.1.29"}, {"count": 2, "tags": [], "creator": "medthomas@ntlworld.com", "attachment_id": null, "is_private": false, "id": 47150, "time": "2003-11-10T23:48:40Z", "bug_id": 24308, "creation_time": "2003-11-10T23:48:40Z", "text": "Are you using GET or POST with your form? Basically GET is fine for US ascii \nbut it is pot luck what will happen with anything else. Best bet is to use \nPOST. If you still see the same problem with POST, add a comment to this bug \nreport and I'll try to look at it in more detail."}, {"count": 3, "tags": [], "bug_id": 24308, "is_private": false, "text": "Make sure you know what encodings are used in each of the steps in your JSP\npage.\n\n1. request.getParameter() uses the request encoding when reading the\nparameters.  Since most browers do not set the request encoding, it is likely\nthat request.getCharacterEncoding() will be null.  If you are sure that the\nrequest is encoded in UTF-8, you should add the following at the beginning of\nthe page to set it explicily:\n\n\t<% request.setCharacterEncoding(\"UTF-8\");\n\notherwise, it'll be defaulted to \"ISO8859-1\", per the servlet spec.\n\n2. String.getBytes() uses the platform default encoding in converting to bytes,\nand that may not be the same as the request (or its default) encoding.  For\nmeanful comparisons, you should use the one with an explicit encoding.", "id": 47153, "time": "2003-11-11T00:39:13Z", "creator": "kin-man.chung@sun.com", "creation_time": "2003-11-11T00:39:13Z", "attachment_id": null}, {"count": 4, "tags": [], "creator": "likwong815@hotmail.com", "attachment_id": null, "is_private": false, "id": 47950, "time": "2003-11-23T16:21:33Z", "bug_id": 24308, "creation_time": "2003-11-23T16:21:33Z", "text": "I've encountered the same problem when submitting form with the get method. \nHowever, there is no problem with the post method.\n\nEven I've set the encoding of the request with the line:\nrequest.setCharacterEncoding(\"UTF-8\");\nThe problem still exists.\n \nSame as what hoschek said, this work fine in tomcat4.1.27 but not in 4.1.29"}, {"count": 5, "tags": [], "creator": "apache.org@baggins.org", "attachment_id": null, "text": "I believe I have just hit this problem - but on a POST request.\nI had a form where the user entered a \u00a3 sign (UK currency symbol). When I\ncarried out a request.getParameter(\"myParam\");, the result came through with the\nfunny \"A\" character preceding the currency symbol. Despite other reporters\ndescriptions of this only occurring on a GET - my form was definately a POST.\nThe workaround for me has been to use request.setCharacterEncoding(\"UTF8\"); -\nand now everything is fine. (Note: someone above reported this not to make any\ndifference - you *must* call this prior to making any calls to getParameter()\nor, getReader() )\nThis was on tomcat 4.1.29", "id": 50279, "time": "2004-01-08T21:01:18Z", "bug_id": 24308, "creation_time": "2004-01-08T21:01:18Z", "is_private": false}, {"count": 6, "tags": [], "bug_id": 24308, "is_private": false, "text": "This is a regression in the 4.1.x branch, and will be fixed in the next release.\nSorry about this problem.", "id": 50287, "time": "2004-01-08T22:51:16Z", "creator": "remm@apache.org", "creation_time": "2004-01-08T22:51:16Z", "attachment_id": null}]