[{"count": 0, "tags": [], "bug_id": 59849, "is_private": false, "text": "Tomcat: 7.0.57\nOS: SunOS HOST 5.10 Generic_150401-20 i86pc i386 i86pc\n$ java -version\njava version \"1.8.0_65\"\nJava(TM) SE Runtime Environment (build 1.8.0_65-b17)\nJava HotSpot(TM) 64-Bit Server VM (build 25.65-b01, mixed mode)\n\nOur application relies on initSQL to set the current_schema on each JDBC connection. We noticed that when our application is under heavy load (maxActive DB connections), the application sometimes gets handed a connection that did not have initSQL executed on it.\n\nWe had a look at the ConnectionPool.java source code (TOMCAT_7_0_57 and trunk) and found that there is a scenario where the pool creates a new connection without running `PooledConnection#validate(PooledConnection.VALIDATE_INIT)` on it.\n\nTo reproduce this issue, two conditions need to coincide:\n\n1) The server has to be under load. The pool needs to be saturated to the point where no new connections get created for incoming requests (requests > maxActive). Threads block on the 'idle' queue/the waitcount atomic is > 0.\n\n2) Active connections need to be released from the pool (unhandled exceptions, maxAge, suspectTimeout etc.)\n\nUnder load, the ConnectionPool#release method will create an 'ad-hoc' connection to replace the active connection it just removed from the ConnectionPool:\n\nif (waitcount.get() > 0) {\n   idle.offer(create(true));\n} \n\nThe #connect call for a PooledConnection object created this way follows in #borrowConnection instead of #createConnection. In #borrowConnection there is no call to #validate(VALIDATE_INIT) before that 'ad-hoc' connection is returned to the requesting thread.\n\nOur best \"workaround\" at the moment: \n - Use a validationQuery that fails when initSQL was not run\n - enable testOnBorrow\n - validationInterval at 1ms\n\nThe short validation interval is necessary because the 'ad-hoc' connection object will have its lastValidation time stamp set to currentTimeMillis on object creation, causing it to skip onBorrow validation immediately after it is being created.\n\nNeedless to say this workaround comes at a significant performance cost to the entire application (short validationInterval) in addition to creating those uninitialized DB connections just to throw them away immediately when they inevitably fail onBorrow validation.", "id": 192340, "time": "2016-07-13T07:40:22Z", "creator": "christian.klauser@adnovum.ch", "creation_time": "2016-07-13T07:40:22Z", "attachment_id": null}, {"count": 1, "tags": [], "creator": "kfujino@apache.org", "attachment_id": null, "is_private": false, "id": 192545, "time": "2016-07-20T08:29:32Z", "bug_id": 59849, "creation_time": "2016-07-20T08:29:32Z", "text": "Thanks for the report.\n\nWhen the internal connection not discarded, but the internal connection is null,\nit needs to do VALIDATE_INIT.\nHowever, the validation is not done. (connect only.)\n\nAlthough r1616760 and r1616625 is a fix of another problem, It contains fixes for this problem.\nHowever r1616760 and r1616625 have not backported to the 7.0.x.\nI will backport r1616760 and r1616625 partially."}, {"count": 2, "tags": [], "creator": "kfujino@apache.org", "attachment_id": null, "id": 192547, "time": "2016-07-20T08:46:42Z", "bug_id": 59849, "creation_time": "2016-07-20T08:46:42Z", "is_private": false, "text": "Fixed at r1753467. \n- 7.0.x for 7.0.71 onwards"}]