[{"count": 0, "tags": [], "bug_id": 43348, "attachment_id": null, "is_private": false, "id": 107994, "time": "2007-09-10T15:07:23Z", "creator": "stevel@apache.org", "creation_time": "2007-09-10T15:07:23Z", "text": "In ant1.7, the only valid resource that provides filename is a FileResource, or\nsubclass. Other resources should be able to serve files. I propose we factor\nthis out into an interface that those tasks/types that want file sources should\nbe able to work with directly. Here it is, posted for discussion before I commit\nthe change\n\n/**\n * This is an interface that resources that can provide a file should implement.\n * This is a refactoring of {@link FileResource}, to allow other resources\n * to act as sources of files (and to make components that only support\n * file-based resources from only support FileResource resources.\n */\npublic interface FileProvider {\n    /**\n     * Get the file represented by this Resource.\n     * @return the file.\n     */\n    File getFile();\n}"}, {"count": 1, "tags": [], "text": "+1", "attachment_id": null, "id": 108029, "creator": "mbenson@apache.org", "time": "2007-09-11T08:20:33Z", "bug_id": 43348, "creation_time": "2007-09-11T08:20:33Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 43348, "attachment_id": null, "is_private": false, "id": 108309, "time": "2007-09-18T01:20:57Z", "creator": "stevel@apache.org", "creation_time": "2007-09-18T01:20:57Z", "text": "interface added, not yet rolled out to any classes that expect FileResource\nonly. Ideally we should find all such classes and convert them to requiring\nFileProvider instances instead"}, {"count": 3, "tags": [], "bug_id": 43348, "attachment_id": null, "id": 108584, "time": "2007-09-25T11:40:08Z", "creator": "mbenson@apache.org", "creation_time": "2007-09-25T11:40:08Z", "is_private": false, "text": "Are we agreed that ResourceCollection.isFilesystemOnly() == true -> all child resources implement \nFileProvider?"}, {"count": 4, "tags": [], "bug_id": 43348, "is_private": false, "id": 108615, "attachment_id": null, "creator": "stevel@apache.org", "creation_time": "2007-09-26T02:22:23Z", "time": "2007-09-26T02:22:23Z", "text": "Makes sense, though everyone needs to be aware that there is a risk that\ntriggers a full walk of the tree to check. some collections, those that only\nsupport FileResource and FileProvider instances could exit faster, but something\nlike Union lacks that option"}, {"count": 5, "tags": [], "text": "(In reply to comment #4)\n> Makes sense, though everyone needs to be aware that there is a risk that\n> triggers a full walk of the tree to check. some collections, those that only\n> support FileResource and FileProvider instances could exit faster, but something\n> like Union lacks that option\n\nYeah, but subclasses of BaseResourceCollectionContainer try to do the isFilesystemOnly check as \nefficiently as possible to avoid a full walk... in theory anyway.\n\nBeyond this, note that a lot of the tasks that currently expect FileResources (I started working on the \nchanges to FileProvider before I saw that you had already started) want a basedir, etc.  Do you (or \nanyone else) think we should (or shouldn't) make\n\nFile getBasedir();\n\npart of the FileProvider interface?\n\nPersonally, I think we might need to...", "is_private": false, "bug_id": 43348, "id": 108629, "time": "2007-09-26T07:27:20Z", "creator": "mbenson@apache.org", "creation_time": "2007-09-26T07:27:20Z", "attachment_id": null}, {"count": 6, "tags": [], "bug_id": 43348, "attachment_id": null, "id": 108631, "time": "2007-09-26T07:36:08Z", "creator": "stevel@apache.org", "creation_time": "2007-09-26T07:36:08Z", "is_private": false, "text": "do you mean for the base resource, as opposed to the collection?"}, {"count": 7, "tags": [], "bug_id": 43348, "attachment_id": null, "text": "(In reply to comment #6)\n> do you mean for the base resource, as opposed to the collection?\n\nYeah, FileResource has a basedir for the resource itself...", "id": 108643, "time": "2007-09-26T09:25:46Z", "creator": "mbenson@apache.org", "creation_time": "2007-09-26T09:25:46Z", "is_private": false}, {"count": 8, "tags": [], "bug_id": 43348, "attachment_id": null, "is_private": false, "id": 117758, "time": "2008-06-17T09:00:50Z", "creator": "mbenson@apache.org", "creation_time": "2008-06-17T09:00:50Z", "text": "I forgot that this was already under discussion.  What I did was add a convenience method to ResourceUtils to generate a FileResource (with default basedir) for those tasks that require the basedir to use to obtain a FileResource from any FileProvider.  Those clients who only need the File itself can simply get it from the FileProvider instance directly."}, {"count": 9, "tags": [], "text": "fixed in svn 668724", "attachment_id": null, "id": 117759, "creator": "mbenson@apache.org", "time": "2008-06-17T09:05:47Z", "bug_id": 43348, "creation_time": "2008-06-17T09:05:47Z", "is_private": false}]