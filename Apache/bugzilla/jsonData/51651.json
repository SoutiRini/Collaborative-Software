[{"count": 0, "tags": [], "creator": "jayrturner99@gmail.com", "attachment_id": null, "id": 148571, "time": "2011-08-11T18:24:58Z", "bug_id": 51651, "creation_time": "2011-08-11T18:24:58Z", "is_private": false, "text": ""}, {"count": 1, "tags": [], "creator": "jayrturner99@gmail.com", "attachment_id": null, "id": 148574, "creation_time": "2011-08-11T18:59:10Z", "time": "2011-08-11T18:59:10Z", "bug_id": 51651, "text": "log4j runs the static block of code in LogManager, which initializes all of log4j, before a user can setup their own configuration. The user cannot set an UnrecognizedElementHandler or call setRepositoryHandler based off of the default repository without log4j initializing before the customizations are made. Consider:\n\nprivate static final Object guard = new Object();\nprivate static final LoggerRepositoryHandler handler = setupLoggerRepositoryHandler();\n\nprivate static LoggerRepositoryHandler setupLoggerRepositoryHandler() {\n    LoggerRepositoryHandler handle = new LoggerRepositoryHandler(org.apache.log4j.LogManager.getLoggerRepository().getRootLogger());\n\n    org.apache.log4j.LogManager.setRepositorySelector(new RepositorySelector() {\n        public LoggerRepository getLoggerRepository() {\n            return handler;\n        }}, guard\n    );\n    return handle;\n}\n\nThis gets called first, but the org.apache.log4j.LogManager.getLoggerRepository() call to link my repository with the default repository invokes the log4j setup, which completes and uses the default repository before my new repository (with the parseUnrecognizedElement method) is setup. If I set the selector first then when I call getLoggerRepository() it will go through my selector which has no default repository setup. Lazily calling setLoggerRepository doesn't work because the first reference into log4j initializes everything before returning.\n\nA possible solution is to have setters like setUnrecognizedElementHandler(). Another is to have statics that set options and have the static block in LogManager be called through a guarded init() call.", "is_private": false}]