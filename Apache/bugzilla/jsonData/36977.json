[{"count": 0, "tags": [], "text": "The patch add FOP ability to handle CJK line breaking.\nIt use java.text.BreakIterator to determine all line breakable points in space\nseparated words. Between 2 CJK indeographics, a KnuthGlue is inserted, which\nallow 1pt shrink. Between CJK indeographic and Latine letter, a KnuthGlue is\ninserted, which advise half wordspace. And some CJK indeographic that glyph\noccupy halfwidth is set halfwidth shrinkable.\n\nthe patch is based on revision 307247. see attachment.", "attachment_id": null, "id": 80928, "creator": "ravenix2@yahoo.com", "time": "2005-10-09T11:19:09Z", "bug_id": 36977, "creation_time": "2005-10-09T11:19:09Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 36977, "text": "Created attachment 16627\nPatch for TextLayoutManager.java", "id": 80929, "attachment_id": 16627, "creator": "ravenix2@yahoo.com", "creation_time": "2005-10-09T11:21:49Z", "time": "2005-10-09T11:21:49Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 36977, "text": "Thank you very much for submitting this patch. Would it be possible for you to \nalso add a sample fo file demonstrating the effect of the patch? I believe \nthere is little experience within the current group of committers with respect \nto non western scripts. Therefore I would appreaciate if you could briefly \nsummarise for the uninitiated Westerner the line breaking rules for CJK.\n\nThanks again for you interest in and support of FOP.", "id": 80930, "time": "2005-10-09T12:35:53Z", "creator": "mm@arcus.com.au", "creation_time": "2005-10-09T12:35:53Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "text": "Every CJK indeographic is a LETTER. A sentence is a sequence of letters and\npunctuations with NO space required between them.\n\nLine breaking rules:\nA feasible breaking point befor and after a CJK letter, except the follwing\npunctuations rules.\n\nLine breaking is NOT allowed after a punctuation which belongs:\nunicode General Category Pi [Punctuation, Initial quote]\nunicode General Category Ps [Punctuation, Open]\n\nLine breaking is NOT allowed before a punctuation which belongs:\nunicode General Category Pf [Punctuation, Final quote]\nunicode General Category Pe [Punctuation, Close]\nunicode General Category Po [Punctuation, Other] and Line Break IS [Infix\nSeparator (Numeric)]\nunicode General Category Po [Punctuation, Other] and Line Break CL [Closing\nPunctuation]\nunicode General Category Po [Punctuation, Other] and Line Break NS [Non Starter]\nunicode General Category Po [Punctuation, Other] and Line Break EX\n[Exclamation/Interrogation]\n\nThe rules is trivial. So it's better to let java.text.BreakIterator take care of it.\n\n\nTypesetting Adjustment: (For Chinese, Japanese and Korea is uncertain)\nTerms:\n\tHALFWIDTH: most western character, width is about half of height.\n\tFULLWIDTH: most CJK character, width is about equal height.\n\tLEFTHALFGLYPH: some CJK punctuation, the glyph only occupy the left half width.\nsuch as \\u300B \\u201D\n\tRIGHTHALFGLYPH: some CJK punctuation, the glyph only occupy the right half\nwidth. such as \\u300A \\u201C\nNOTE: some letters, for example \\u201C, is HALFWIDTH in western fonts. In this\ncase, it's glyph occupy whole width, not be considered as HALFGLYPH.\n\nAdjustment Rules:\nR1. If a RIGHTHALFGLYPH follows by a RIGHTHALFGLYPH(IDEOGRAPHIC_FULL_STOP,\nRIGHT_DOUBLE_QUOTATION_MARK), the first one should be compressed to it's\nminimum, half width.(opt=half_width, shrink=0)\nA LEFTHALFGLYPH follows by a LEFTHALFGLYPH would not occur in normal text. Don't\nconsider.\n\nR2. Between a FULLWIDTH letter and a HALFWIDTH letter or digit, a small sapce is\nadvised. The samll sapce is set to (opt=half_sapce, shrink=half_sapce)\n\nR3. Between 2 FULLWIDTH letter, a small shrink is allowed. 1/16 of width would\nbe good to avoid glyph overlapping. The feature should be configurable.\n\nR4. When a line stretch, all feasible breaking point is stretchable. The stretch\nof a glue between 2 CJK Letter should be smaller than the glue following a\npunctuation. The ratio is not considered yet. Currently, the TextLayoutManager\nis not consider it even for western style layout(space between words/space\nfollowing sentence end dot). \n\nR5. When a line shink, first compress HALFGLYPH, HALFGLYPH can be compressed to\nhalf width. 2nd, compress the samll sapce between FULLWIDTH letter and HALFWIDTH\nletter or digit (R2). 3rd, shrink the letterspace(R3).\nThe shrink priority is hard to implement unless modify the knuth algorithm.", "is_private": false, "id": 80976, "creator": "ravenix2@yahoo.com", "time": "2005-10-11T06:59:22Z", "bug_id": 36977, "creation_time": "2005-10-11T06:59:22Z", "attachment_id": null}, {"count": 4, "tags": [], "text": "Created attachment 16651\nchinese example, includes fo, pdf before and after patch", "attachment_id": 16651, "id": 80977, "creator": "ravenix2@yahoo.com", "time": "2005-10-11T07:24:46Z", "bug_id": 36977, "creation_time": "2005-10-11T07:24:46Z", "is_private": false}, {"count": 5, "tags": [], "text": "Created attachment 16694\nnew patch\n\nThis new patch fulfill all rules mentioned in Comment #3 except Typesetting\nAdjustment R3 and shrink priority of R5.\nIt use java.text.BreakIterator.getLineInstance(locale) to decide line breaking\npoints, and use BreakIterator.getWordInstance(locale) to decide word boundary\nfor implementing Typesetting Adjustment R1.\n\nNow, line breaking works well. \n\n* ISSUE NEED HELP *\nAll the width of KnuthGlues inserted for Typesetting Adjustment appear at line\nend instead of their inserted position. I think I make mistakes about KnuthGlue\nand AreaInfo. I'm trying to dig it out. however, I hope someone can give me\nsome hints. Is it caused by KnuthGlue/AreaInfo has no corresponding string?", "is_private": false, "bug_id": 36977, "id": 81154, "time": "2005-10-14T04:55:10Z", "creator": "ravenix2@yahoo.com", "creation_time": "2005-10-14T04:55:10Z", "attachment_id": 16694}, {"count": 6, "tags": [], "bug_id": 36977, "is_private": false, "text": "I don't have the font you use in your example, so I cannot directly test it to\nsee what happens.\n\nAnyway, if you could attach the list of elements created it could be easier to\nsee if they are correct.\n\nFor example, you could put this method in LineLayoutManager.java ...\n\nprivate void outputElementList(Paragraph par) {\n    System.out.println(\"\");\n    System.out.println(\"paragraph start\");\n    ListIterator iter = par.listIterator();\n    KnuthElement el;\n    while (iter.hasNext()) {\n        el = (KnuthElement) iter.next();\n        if (el.isBox()) {\n            System.out.println(iter.previousIndex() + \") box w=\" + el.getW());\n        } else if (el.isGlue()) {\n            System.out.println(iter.previousIndex() + \") gllue w=\" + el.getW() +\n\" y=\" + el.getY() + \" z=\" + el.getZ());\n        } else {\n            System.out.println(iter.previousIndex() + \") penalty w=\" + el.getW()\n+ \" p=\" + el.getP());\n        }\n    }\n    System.out.println(\"paragraph end\");\n}\n\n... call it in createLineBreaks() just before findOptimalBreakingPoints(), with\nseq as parameter, and attach the resulting output file.\n\nRegards\n    Luca", "id": 81160, "time": "2005-10-14T16:35:15Z", "creator": "lfurini@cs.unibo.it", "creation_time": "2005-10-14T16:35:15Z", "attachment_id": null}, {"count": 7, "tags": [], "bug_id": 36977, "is_private": false, "text": "The problem you mention (all the adjustment space appears at the end of the\nline, in other words the line is not justified) is probably due to the bug 36238.\n\nRegards\n    Luca", "id": 81310, "time": "2005-10-18T12:40:33Z", "creator": "lfurini@cs.unibo.it", "creation_time": "2005-10-18T12:40:33Z", "attachment_id": null}, {"count": 8, "tags": [], "text": "I had a look at the patch and think it would be really great to get a proper \nUnicode / international line breaking algorithm into FOP.\n\nUnfortunately there seems to be a bug in the code which breaks the current \nlayout engine test suite. The test text-decoration_1.xml fails. I think it has \nto do with text like \"/over/under/through\" and FOPs handling of \"/\" as a \nbreaking char somehow conflicts with your work.\n\nI am also uncomfortable with the triple breaking being done: First FOP natively \nbreaks text into chunks based on sp, nbsp, lf, and the like. Then you take \nthose chunks and break them using a BreakIterator in line mode. After that \nthose pieces are broken again using another BreakIterator in word mode. That \nseem to be a lot of iterations over those characters.\n\nWould it be possible / sensible to have a single breaker which does all three \nthings?\n\nMay be we should simplify the problem and concentrate on line breaking first. \nLeaving the type setting fine tuning to a subsequent patch once we are happy \nwith the line breaking?\n\nWhat do you think?", "is_private": false, "bug_id": 36977, "id": 81712, "time": "2005-10-25T15:13:17Z", "creator": "manuel@apache.org", "creation_time": "2005-10-25T15:13:17Z", "attachment_id": null}, {"count": 9, "tags": [], "text": "It seems that the new method createElementsForLineBoundary() is called and\nappends elements even if there are no cjk characters, and I think this should\nnot happen.\n\nWhen I tried applying the patch some days ago, the testcases concerning\nhyphenation failed too: the output had both missing and repeated pieces of text. ", "is_private": false, "id": 81762, "creator": "lfurini@cs.unibo.it", "time": "2005-10-26T12:31:33Z", "bug_id": 36977, "creation_time": "2005-10-26T12:31:33Z", "attachment_id": null}, {"count": 10, "tags": [], "bug_id": 36977, "text": "Created attachment 16846\nline break patch\n\nThis is a line break patch without typesetting fine tuning.\nIt still base on BreakIterator and satisfy testcases.\nSorry for my previous buggy patch.\nBefor the new Unicode Line Breaking algorithm available,\nthe patch make it possible to test FOP with CJK characters.", "id": 82002, "time": "2005-11-01T06:49:29Z", "creator": "ravenix2@yahoo.com", "creation_time": "2005-11-01T06:49:29Z", "is_private": false, "attachment_id": 16846}, {"count": 11, "tags": [], "bug_id": 36977, "text": "increase priority for bugs with a patch", "id": 157847, "time": "2012-04-11T03:20:39Z", "creator": "gadams@apache.org", "creation_time": "2012-04-11T03:20:39Z", "is_private": false, "attachment_id": null}]