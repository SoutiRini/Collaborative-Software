[{"count": 0, "tags": [], "bug_id": 34295, "attachment_id": null, "text": "Hello,\n\nWe were running CGI successfully in Apache 1.3.33. We have CGI form which sends \nthe request parameters in POST.\n\nThe QUERY_STRING will be \"htype=Lvl4&repname=Report1\"\n\nSince, it is POST, the QUERY_STRING will be read from stdin.\n\nThe following code reads from file pointer (In this case it will be stdin) \nuntil it finds a \"stop\" character. (In this case it is '&')\n\nThis code works perfect in Apache 1.3.33. \n\nBut in Apache 2, it hangs at \nfgets(stdin).\n\nPlease check whether Apache2 has either closed or reopened STDIN. \n\nsiStatus siFmakeWord (char stop, FILE* pFile, int& cl, siString& sWord)\n{\n    // Output string to null\n    sWord.Set (NULL);\n\n    if (pFile == NULL) {\n\terrRegister (siERR_BAD_ARG);\n\treturn siFAILED;\n    }\n\n    while (!feof (pFile) && cl != 0) {\n\tcl--;\n\tint ch = fgetc (pFile);\n\n        -- blah blah --\n    }\n\n    return siOK;\n\n} // siFmakeWord\n\n** End of code snippet **\n\nAny clue is greatly appreciated. Support for Apache 2 is very critical for our \nproduct.\n\nWe are using standard httpd.conf file. No changes were made.\n\nThanks", "id": 73277, "time": "2005-04-05T01:33:10Z", "creator": "paran.umapathy@ca.com", "creation_time": "2005-04-05T01:33:10Z", "is_private": false}, {"count": 1, "tags": [], "creator": "jorton@redhat.com", "attachment_id": null, "text": "Please try a user support forum for assistance your script;\nhttp://httpd.apache.org/lists.html#http-users", "id": 73280, "time": "2005-04-05T09:10:13Z", "bug_id": 34295, "creation_time": "2005-04-05T09:10:13Z", "is_private": false}, {"count": 2, "tags": [], "text": "It is nothing to do with our program. The problem in a nutshell is this \"STDIN\" \nis closed during POST operation. When we just try reading QUERY_STRING from \nSTDIN, stdin is already closed and we go in infinite loop (fgetc(stdin)). \nIn Apache 2.0.35 and 2.0.36, it worked fine. But in version 2.0.39 (and above) \nthe problem persists. May be the changes done from 2.0.36 to 2.0.39 have \nintroduced this problem.", "is_private": false, "id": 73355, "creator": "paran.umapathy@ca.com", "time": "2005-04-06T22:16:11Z", "bug_id": 34295, "creation_time": "2005-04-06T22:16:11Z", "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 34295, "attachment_id": null, "is_private": false, "id": 75829, "time": "2005-06-03T00:04:54Z", "creator": "chip@force-elite.com", "creation_time": "2005-06-03T00:04:54Z", "text": "Unless you have other information, this sounds like a programming error in your\ncode?"}, {"count": 4, "tags": [], "bug_id": 34295, "attachment_id": null, "is_private": false, "id": 79125, "time": "2005-08-29T00:32:03Z", "creator": "nick@webthing.com", "creation_time": "2005-08-29T00:32:03Z", "text": "The CGI spec gives you CONTENT_LENGTH.  It does NOT give you any form of EOF.   \nCode that reads *until* EOF is not valid CGI. \n \nThe code posted is confused: you mention fgets, but in fact uses fgetc and \nmakes a bogus feof check. "}, {"count": 5, "tags": [], "bug_id": 34295, "attachment_id": null, "is_private": false, "id": 79208, "time": "2005-08-31T01:23:53Z", "creator": "paran.umapathy@ca.com", "creation_time": "2005-08-31T01:23:53Z", "text": "Hi Nick,\n\nThanks for taking time to work on this issue.\n\nI modified the code as per your suggestion by removing EOF check.\nI read the CONTENT_LENGTH from env. variable.\n\nint cl = atoi(getenv(\"CONTENT_LENGTH\");\nchar *buf = new char[cl+1];\n\nfgets(buf, cl+1, stdin);\n\nWhen I debugged, it is waiting forever in fgets() call.\n\nSo, the original bug issue still persists.\nFYI - The apache version used : 2.0.54\nIs the stdin is closed in this case ?\n\nThanks,\n\nParan\n\n(In reply to comment #4)\n> The CGI spec gives you CONTENT_LENGTH.  It does NOT give you any form of \nEOF.   \n> Code that reads *until* EOF is not valid CGI. \n>  \n> The code posted is confused: you mention fgets, but in fact uses fgetc and \n> makes a bogus feof check. \n\n"}, {"count": 6, "tags": [], "bug_id": 34295, "attachment_id": null, "is_private": false, "id": 79314, "time": "2005-09-02T01:24:25Z", "creator": "paran.umapathy@ca.com", "creation_time": "2005-09-02T01:24:25Z", "text": "This issue is currently reproducible only on Windows. I installed Apache 2.0-50 \non Suse Linux today and CGI execution was successful. Issue is with windows. \n(hang on reading from stdin during POST operation)."}, {"count": 7, "tags": [], "bug_id": 34295, "attachment_id": null, "is_private": false, "id": 79316, "time": "2005-09-02T02:01:42Z", "creator": "nick@webthing.com", "creation_time": "2005-09-02T02:01:42Z", "text": "For heavens sake, what do you ****ing well expect if you have cl bytes and try \nto read cl+1 ?  Please try it with someone else's CGI that works before \nreopening this yet again. "}, {"text": "As per my colleague's comment, I had already changed the code and tested this.\n\nint cl = atoi(getenv(\"CONTENT_LENGTH\");\nchar *buf = new char[cl+1];\n\nfgets(buf, cl, stdin);\nbuf[cl+1]='\\0';\n\nWhen I debugged, it is waiting forever in fgets() call.\n\nAlso for testing puposes, I tried to read fewer chars like 5 chars, that also \ndidn't work.\n\nI read in the user groups that they are seeing this issue even in IIS. \nMicrosoft now has strict rules to handle CGI post.\n\nAs I said before, the existing code works fine on unix platforms.\n", "tags": [], "creator": "paran.umapathy@ca.com", "is_private": false, "count": 8, "id": 79334, "time": "2005-09-02T17:20:36Z", "bug_id": 34295, "creation_time": "2005-09-02T17:20:36Z", "attachment_id": null}, {"count": 9, "tags": [], "text": "As per the Microsoft support website info, \nhttp://support.microsoft.com/default.aspx?scid=kb;en-us;203298\n\nI also included\n_setmode(_fileno(stdin), _O_BINARY);\n\nbefore reading the bytes from the STDIN. But that also did not work.", "attachment_id": null, "id": 79462, "creator": "paran.umapathy@ca.com", "time": "2005-09-06T19:27:15Z", "bug_id": 34295, "creation_time": "2005-09-06T19:27:15Z", "is_private": false}, {"count": 10, "tags": [], "text": "\n  This is a bug in MS's implementation of fgets() as your kb article correctly\n  noted.  Whatever data the *client* sends is sent read from stdin().  One of\n  two things are happening; you are trying to read beyond eof (test feof()?)\n  or fgets() doesn't recognize EOF.  Try using read() instead until EOF.\n\n  Changing to binary mode is also good, but not the entire solution.", "attachment_id": null, "id": 79544, "creator": "wrowe@apache.org", "time": "2005-09-07T16:58:58Z", "bug_id": 34295, "creation_time": "2005-09-07T16:58:58Z", "is_private": false}, {"count": 11, "tags": [], "bug_id": 34295, "attachment_id": null, "text": "(In reply to comment #6)\n> This issue is currently reproducible only on Windows. \n\nI have the same bug on IRIX 2.0.46(I'm compiling 2.0.54 to see if it exists\nthere..I had verified it once before but I'm doing this again to be certain). I\nknow for certain it is not my script. CONTENT_LENGTH will report 24kb but when I\nread from stdin I only get about 9348 bytes. If I do the same under Apache 1.3,\nthe script works fine. Nothing about the script relies on anything of Apache\nother than the STDIN so the only choice is that it is an Apache bug.\n", "id": 80296, "time": "2005-09-22T02:26:37Z", "creator": "ehrichweiss@yahoo.com", "creation_time": "2005-09-22T02:26:37Z", "is_private": false}, {"count": 12, "tags": [], "bug_id": 34295, "attachment_id": null, "id": 80297, "time": "2005-09-22T02:29:12Z", "creator": "ehrichweiss@yahoo.com", "creation_time": "2005-09-22T02:29:12Z", "is_private": false, "text": "(In reply to comment #11)\n> I have the same bug on IRIX 2.0.46\n\nLet me clarify that. I have the same bug on IRIX64 6.5.22m w/Apache 2.0.46.\nScripting language is REXX, just in case you want to know."}, {"text": "(In reply to comment #11)\n\n> I have the same bug on IRIX 6.5 Apache 2.0.46(I'm compiling 2.0.54 to see if\nit > exists  there..I had verified it once before but I'm doing this again to be \n> certain).\n\nI compiled 2.0.54 with and without modules to test if the modules might have\ncarried the problem, it seems to be resolved at least for IRIX. ", "tags": [], "creator": "ehrichweiss@yahoo.com", "attachment_id": null, "count": 13, "id": 80335, "time": "2005-09-22T19:27:26Z", "bug_id": 34295, "creation_time": "2005-09-22T19:27:26Z", "is_private": false}]