[{"count": 0, "tags": [], "text": "I am using the access log sampler to populate the URLs for the tests. jmeter is\nedcoding all urls by default. It would be great if it didnt encode the urls.", "is_private": false, "id": 83602, "creation_time": "2005-12-13T17:41:32Z", "time": "2005-12-13T17:41:32Z", "creator": "dhanush@direct-revenue.com", "bug_id": 37888, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 37888, "is_private": false, "id": 83603, "attachment_id": null, "creator": "woolfel@yahoo.com", "creation_time": "2005-12-13T17:47:34Z", "time": "2005-12-13T17:47:34Z", "text": "could you provide a few lines of access logs. It would help debug the issue. the\ncurrent implementation of the log parser does not decode the value, so most\nlikely what is happen is the parser isn't decoding the URL and the httpsampler\nis re-encoding the value, which causes double encoding.\n\npeter"}, {"count": 2, "tags": [], "bug_id": 37888, "attachment_id": 17210, "id": 83604, "time": "2005-12-13T18:06:22Z", "creator": "dhanush@direct-revenue.com", "creation_time": "2005-12-13T18:06:22Z", "is_private": false, "text": "Created attachment 17210\nsample lines of log\n\nsample lines of log."}, {"count": 3, "tags": [], "bug_id": 37888, "is_private": false, "id": 83605, "attachment_id": null, "creator": "woolfel@yahoo.com", "creation_time": "2005-12-13T18:11:05Z", "time": "2005-12-13T18:11:05Z", "text": "thanks.. I'll take a look tonight and try to fix the bug. it should be straight\nforward.\n\npeter"}, {"count": 4, "tags": [], "bug_id": 37888, "attachment_id": null, "id": 83632, "time": "2005-12-14T08:45:55Z", "creator": "woolfel@yahoo.com", "creation_time": "2005-12-14T08:45:55Z", "is_private": false, "text": "I've checked in a patch for this. I still need to update the GUI, but by default\nthe accesslog sampler now decodes the value portion of the request parameters.\nplease give it a try and let me know if that fixes the problem for you.\n\npeter lin"}, {"count": 5, "tags": [], "text": "The nightly build 2-1.20051214 contains the patch.", "attachment_id": null, "bug_id": 37888, "id": 83644, "time": "2005-12-14T13:31:30Z", "creator": "sebb@apache.org", "creation_time": "2005-12-14T13:31:30Z", "is_private": false}, {"count": 6, "tags": [], "text": "Hi,\n\nAppreciate your help, but the urls are still encoded (I looked at em from the\nserver's access logs since the gui was not updated and it still encodes \"|\" and\n\":\" and \"curly braces - {}\" and probably many more characters).\n\nThanks\nDhanush\n\n(In reply to comment #5)\n> The nightly build 2-1.20051214 contains the patch.", "attachment_id": null, "bug_id": 37888, "id": 83655, "time": "2005-12-14T17:26:08Z", "creator": "dhanush@direct-revenue.com", "creation_time": "2005-12-14T17:26:08Z", "is_private": false}, {"count": 7, "tags": [], "bug_id": 37888, "attachment_id": null, "id": 83656, "time": "2005-12-14T17:34:54Z", "creator": "woolfel@yahoo.com", "creation_time": "2005-12-14T17:34:54Z", "is_private": false, "text": "Is it the URL of the requested page or the request parameter values that are\nincorrectly encoded?  the patch I checked in decodes the values, but not the URL\npath portion. I've always tried to stay away from URL encoding the URL of the page.\n\npeter"}, {"count": 8, "tags": [], "text": "I am talking about the parameters that are passed on.\n\nFor example....if the URL thats hitting the server has to be \nhttp://blah.com/blah.arch?code={464|6784|}\n\nthe actual url that hits the server is \nhttp://blah.com/blah.arch?code=%7B464%7C6784%7C%7D\n\nAnd all this happens only when I use the access log sampler.\n\nDhanush\n\n(In reply to comment #7)\n> Is it the URL of the requested page or the request parameter values that are\n> incorrectly encoded?  the patch I checked in decodes the values, but not the URL\n> path portion. I've always tried to stay away from URL encoding the URL of the\npage.\n> \n> peter\n\n", "is_private": false, "id": 83657, "creation_time": "2005-12-14T17:45:21Z", "time": "2005-12-14T17:45:21Z", "creator": "dhanush@direct-revenue.com", "bug_id": 37888, "attachment_id": null}, {"count": 9, "tags": [], "bug_id": 37888, "attachment_id": null, "id": 83658, "time": "2005-12-14T17:54:45Z", "creator": "woolfel@yahoo.com", "creation_time": "2005-12-14T17:54:45Z", "is_private": false, "text": "Is {} even allowed in the URL?  I thought most special characters had to be\nURLencoded. From the W3C spec for HTTP http://www.w3.org/Addressing/rfc1738.txt\n\nIt states the following:\n\nUnsafe:\n\n   Characters can be unsafe for a number of reasons.  The space\n   character is unsafe because significant spaces may disappear and\n   insignificant spaces may be introduced when URLs are transcribed or\n   typeset or subjected to the treatment of word-processing programs.\n   The characters \"<\" and \">\" are unsafe because they are used as the\n   delimiters around URLs in free text; the quote mark (\"\"\") is used to\n   delimit URLs in some systems.  The character \"#\" is unsafe and should\n   always be encoded because it is used in World Wide Web and in other\n   systems to delimit a URL from a fragment/anchor identifier that might\n   follow it.  The character \"%\" is unsafe because it is used for\n   encodings of other characters.  Other characters are unsafe because\n   gateways and other transport agents are known to sometimes modify\n   such characters. These characters are \"{\", \"}\", \"|\", \"\\\", \"^\", \"~\",\n   \"[\", \"]\", and \"`\".\n\n\nI believe JMeter is handling it correctly, since the specification says curly\nbraces are not safe."}, {"count": 10, "tags": [], "text": "Thanks Peter. I guess we should change the server and client not to send those\ncharacters. Thanks again\n\nDhanush\n\n(In reply to comment #9)\n> Is {} even allowed in the URL?  I thought most special characters had to be\n> URLencoded. From the W3C spec for HTTP http://www.w3.org/Addressing/rfc1738.txt\n> \n> It states the following:\n> \n> Unsafe:\n> \n>    Characters can be unsafe for a number of reasons.  The space\n>    character is unsafe because significant spaces may disappear and\n>    insignificant spaces may be introduced when URLs are transcribed or\n>    typeset or subjected to the treatment of word-processing programs.\n>    The characters \"<\" and \">\" are unsafe because they are used as the\n>    delimiters around URLs in free text; the quote mark (\"\"\") is used to\n>    delimit URLs in some systems.  The character \"#\" is unsafe and should\n>    always be encoded because it is used in World Wide Web and in other\n>    systems to delimit a URL from a fragment/anchor identifier that might\n>    follow it.  The character \"%\" is unsafe because it is used for\n>    encodings of other characters.  Other characters are unsafe because\n>    gateways and other transport agents are known to sometimes modify\n>    such characters. These characters are \"{\", \"}\", \"|\", \"\\\", \"^\", \"~\",\n>    \"[\", \"]\", and \"`\".\n> \n> \n> I believe JMeter is handling it correctly, since the specification says curly\n> braces are not safe.\n\n", "is_private": false, "id": 83668, "creator": "dhanush@direct-revenue.com", "time": "2005-12-14T22:06:11Z", "bug_id": 37888, "creation_time": "2005-12-14T22:06:11Z", "attachment_id": null}, {"count": 11, "tags": [], "creator": "woolfel@yahoo.com", "is_private": false, "text": "\nif you don't want to comply to W3C, you could always enhance the access log\nsampler to not encode the parameter values :)\n\nof course, that's not a good idea, but it's one way around it.\n\npeter lin", "id": 83669, "time": "2005-12-14T22:18:54Z", "bug_id": 37888, "creation_time": "2005-12-14T22:18:54Z", "attachment_id": null}]