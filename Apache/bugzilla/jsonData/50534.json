[{"attachment_id": null, "tags": [], "creator": "milkuncle@telenet.be", "is_private": false, "count": 0, "id": 143015, "time": "2010-12-31T10:09:37Z", "bug_id": 50534, "creation_time": "2010-12-31T10:09:37Z", "text": "Hi,\n\nI defined a loadbalancer with 2 workers (who connect to JBoss application server)\nWhen I stopped both Jboss backends, I got immediately a 503 response from the loadbalancer, this is ok.\n\nBut when you're having network issues, for example broker firewall,switch\nthe workers goes in error (normal), but when they are both in error, I don't receive immedately a 503 response, I loadbalancer forces the workers each time to retry, and when they timeout I got my 503.\nThe timeout can be tuned with defining a socket_timeout for the worker. \nI would suspect that ones they are in error, I should get immediately a 503 response. And that after 60 seconds the workers will retry (with the recover time)\nIs this a bug, or do I need to configure something.\nThx for your help.\n\nHow to simmulate :\nDrop packets on the your jboss application server with iptables.\n# iptables -A INPUT -s (apache webserver) -p tcp --destination-port (port jboss) -j DROP   \n\nBasic config\n  worker.list=applb\n\n  # Define a worker using ajp13\n  worker.worker1.port=8009\n  worker.worker1.host=backend1\n  worker.worker1.type=ajp13\n  worker.worker1.lbfactor=1\n  worker.worker1.socket_timeout=15\n  worker.basic.socket_keepalive=true\n\n \n  # Define another worker using ajp13\n  worker.worker2.port=8009\n  worker.worker2.host=backend2\n  worker.worker2.type=ajp13\n  worker.worker2.lbfactor=1\n  worker.worker2.socket_timeout=15\n  worker.basic.socket_keepalive=true\n\n  # Define the LB worker\n  worker.applb.type=lb\n  worker.applb.balanced_workers=worker1,worker2"}, {"count": 1, "tags": [], "creator": "rainer.jung@kippdata.de", "attachment_id": null, "id": 143016, "time": "2010-12-31T11:40:53Z", "bug_id": 50534, "creation_time": "2010-12-31T11:40:53Z", "is_private": false, "text": "Bugzilla is not a support forum. If you have questions about mod_jk please ask on the Tomcat users list. In that case please provide your confguration there again and also version info about the components used.\n\nSome hints:\n\n- mod_jk does forced receovery, if no more workers are available. Instead of only returning errors, in this case it tries to use the broken workers although their recvery_time is not yet reached.\n\n- Newer version od mod_jk do not handle as many errors as fatal as older ones. You can adjust with \"error_escalation_time\"\n\n- Reliable problem detection especially in the network area relies on correct setiings of several timeouts. Have a look at the example configuration bundled with the source download of version 1.2.31. Older mod_jk versions do not come with a nice example configuration, the one that comes with 1.2.31 is fine.\n\nPlease do not proceed the discussion here. In case of further questions switch to the users list."}]