[{"count": 0, "tags": [], "creator": "tboemker@elynx.com", "attachment_id": null, "id": 129775, "time": "2009-08-18T08:44:44Z", "bug_id": 47703, "creation_time": "2009-08-18T08:44:44Z", "is_private": false, "text": "I think that log4j assumes that ObjectRenderer.doRender completes quickly and cannot block.  If so, then the assumption should be stated.  (Even if so, perhaps the implementation could be changed to eliminate the assumption.)\n\nHere is a partial stack trace showing how that assumption--if, indeed, it is an assumption--might inadvertently be violated:\n\n\n        at org.hibernate.loader.Loader.loadCollection(Loader.java:1994)\n        at org.hibernate.loader.collection.CollectionLoader.initialize(CollectionLoader.java:36)\n        at org.hibernate.persister.collection.AbstractCollectionPersister.initialize(AbstractCollectionPersister.java:565)\n        at org.hibernate.event.def.DefaultInitializeCollectionEventListener.onInitializeCollection(DefaultInitializeCollectionEventListener.java:60)\n        at org.hibernate.impl.SessionImpl.initializeCollection(SessionImpl.java:1716)\n        at org.hibernate.collection.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:344)\n        at org.hibernate.collection.AbstractPersistentCollection.read(AbstractPersistentCollection.java:86)\n        at org.hibernate.collection.PersistentSet.toString(PersistentSet.java:309)\n        at java.util.Formatter$FormatSpecifier.printString(Formatter.java:2790)\n        at java.util.Formatter$FormatSpecifier.print(Formatter.java:2673)\n        at java.util.Formatter.format(Formatter.java:2430)\n        at java.util.Formatter.format(Formatter.java:2364)\n        at java.lang.String.format(String.java:2558)\n        at com.eLynx.Context.SessionContext.render(SessionContext.java:1062)\n        at com.eLynx.logging.Renderer.doRender(Renderer.java:32)\n        at org.apache.log4j.or.RendererMap.findAndRender(RendererMap.java:79)\n        at org.apache.log4j.spi.LoggingEvent.getRenderedMessage(LoggingEvent.java:297)\n        at org.apache.log4j.helpers.PatternParser$BasicPatternConverter.convert(PatternParser.java:403)\n        at org.apache.log4j.helpers.PatternConverter.format(PatternConverter.java:64)\n        at org.apache.log4j.PatternLayout.format(PatternLayout.java:503)\n        at org.apache.log4j.WriterAppender.subAppend(WriterAppender.java:301)\n        at org.apache.log4j.DailyRollingFileAppender.subAppend(DailyRollingFileAppender.java:358)\n        at org.apache.log4j.WriterAppender.append(WriterAppender.java:159)\n        at org.apache.log4j.AppenderSkeleton.doAppend(AppenderSkeleton.java:230)\n        at org.apache.log4j.helpers.AppenderAttachableImpl.appendLoopOnAppenders(AppenderAttachableImpl.java:65)\n        at org.apache.log4j.Category.callAppenders(Category.java:203)"}]