[{"count": 0, "tags": [], "bug_id": 57714, "attachment_id": 32575, "id": 181800, "time": "2015-03-16T11:24:09Z", "creator": "sawan_p@spanservices.com", "creation_time": "2015-03-16T11:24:09Z", "is_private": false, "text": "Created attachment 32575\nThread Dump\n\nHi,\nWe found the below issue in our Thread Dumps. Please let us know your thoughts if this is a known issue with log4j. The JVM that we use is 'BEA JRockit(R) R27.6.5-32_o-121899-1.6.0_14-20091001-2113-linux-x86_64'. The JDK is - 1.6.0_14 and the Java Vendor is BEA Systems, Inc. The OS is Linux-x86_64. Because of this issue other threads are getting struck in the JVM forming too many blocked-threads. We have attached our thread-dumps as well. In the thread-dumps, we can see the blocked chains pointing to this below struck thread - ExecuteThread: '3'. We are using the following jars for logging:\n1.  log4j-1.2.17.jar\n2. slf4j-api-1.7.5.jar\n3. slf4j-log4j12-1.7.5.jar\n\nPlease let us know if any information that needs to be shared.\n\n\n\n\n\n\n\"[STUCK] ExecuteThread: '3' for queue: 'weblogic.kernel.Default (self-tuning)'\" id=43 idx=0xb0 tid=6731 prio=1 alive, in native, native_waiting, daemon\n    at jrockit/vm/RNI.generateFixedCode(J)J(Native Method)\n    at org/apache/log4j/spi/ThrowableInformation.getThrowableStrRep(ThrowableInformation.java:0)\n    at org/apache/log4j/spi/LoggingEvent.getThrowableStrRep(LoggingEvent.java:413)\n    at org/apache/log4j/WriterAppender.subAppend(WriterAppender.java:313)\n    at org/apache/log4j/RollingFileAppender.subAppend(RollingFileAppender.java:276)\n    at org/apache/log4j/WriterAppender.append(WriterAppender.java:162)\n    at org/apache/log4j/AppenderSkeleton.doAppend(AppenderSkeleton.java:251)\n    ^-- Holding lock: org/apache/log4j/RollingFileAppender@0x553f0ab8[thin lock]\n    at org/apache/log4j/helpers/AppenderAttachableImpl.appendLoopOnAppenders(AppenderAttachableImpl.java:66)\n    at org/apache/log4j/Category.callAppenders(Category.java:206)\n    ^-- Holding lock: org/apache/log4j/spi/RootLogger@0x553efbf8[thin lock]\n    at org/apache/log4j/Category.forcedLog(Category.java:391)\n    at org/apache/log4j/Category.log(Category.java:856)\n    at org/slf4j/impl/Log4jLoggerAdapter.error(Log4jLoggerAdapter.java:575)"}, {"count": 1, "tags": [], "bug_id": 57714, "text": "All new development work is happening on Log4j 2. I would recommend you use\n1. slf4j-api-1.7.5.jar\n2. log4j-slf4j-impl-2.2.jar\n3. log4j-api-2.2.jar\n4. log4j-core-2.2.jar\n\nThen change your log4j configuration to match the format used by Log4j 2.  See http://logging.apache.org/log4j/2.x/manual/configuration.html.", "id": 181805, "time": "2015-03-16T14:21:41Z", "creator": "Ralph.Goers@dslextreme.com", "creation_time": "2015-03-16T14:21:41Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 57714, "text": "Thank you Ralph. But I have one concern, which is, how can we be sure if its gonna solve our problem? Has this sort of issue been reported earlier or anything similar? I am asking this question because we between two minds here since we are seeing this line - 'jrockit/vm/RNI.generateFixedCode(J)J(Native Method)' in our thread-dumps. Our eyes are on Jrockit JVM too because that seems to be the root cause as seen in the stack trace. Please share your thoughts on this.\n\nThanks a lot in advance.\n\nRegards,\n-Sawan.Patwari", "id": 181812, "time": "2015-03-16T16:15:02Z", "creator": "sawan_p@spanservices.com", "creation_time": "2015-03-16T16:15:02Z", "is_private": false, "attachment_id": null}, {"count": 3, "text": "Log4j 2 does not lock when processing the appenders collection. Individual appenders may hold locks while writing to streams, sockets, etc. where you wouldn't see same sort of behavior as below.\n\nAlso, in general processing a stack trace in Log4j 2 is going to be more efficient than in Log4j 1.\n\nYou may also want to take advantage of Asynchronous Loggers in Log4j 2 as that should keep your application threads from being hindered by logging.", "bug_id": 57714, "is_private": false, "id": 181813, "time": "2015-03-16T16:23:10Z", "creator": "Ralph.Goers@dslextreme.com", "creation_time": "2015-03-16T16:23:10Z", "tags": [], "attachment_id": null}, {"count": 4, "tags": [], "creator": "sawan_p@spanservices.com", "attachment_id": null, "text": "\nAre you hinting by saying that we may perhaps not see the below issue in future with log4j 2? The below information is gotten from Thread-Dumps. ExecuteThread: '22' and like others are all struck due to ExecuteThread: '3' in the below fashion. Likewsie, there are 23 other Blocked-Chains in thread-dumps with the same issue. \n\nChain 24:\n\"[STUCK] ExecuteThread: '22' for queue: 'weblogic.kernel.Default (self-tuning)'\" id=415 idx=0x368 tid=10747 waiting for org/apache/log4j/spi/RootLogger@0x553efbf8 held by:\n\"[STUCK] ExecuteThread: '3' for queue: 'weblogic.kernel.Default (self-tuning)'\" id=43 idx=0xb0 tid=6731 in chain 1\n\nThank you again.\n\nRegards,\n-Sawan.Patwari", "id": 181815, "time": "2015-03-16T16:41:39Z", "bug_id": 57714, "creation_time": "2015-03-16T16:41:39Z", "is_private": false}, {"count": 5, "tags": [], "text": "Yes, I am saying that the code in Log4j 2 is much different and locking is handled much differently. There is no lock on the root logger or on the appender loop.", "attachment_id": null, "id": 181822, "creator": "Ralph.Goers@dslextreme.com", "time": "2015-03-16T18:36:33Z", "bug_id": 57714, "creation_time": "2015-03-16T18:36:33Z", "is_private": false}, {"count": 6, "tags": [], "bug_id": 57714, "text": "Thank you Ralph. Appreciate your inputs. \n\nRegards,\n-Sawan.Patwari", "id": 181828, "time": "2015-03-17T05:27:17Z", "creator": "sawan_p@spanservices.com", "creation_time": "2015-03-17T05:27:17Z", "is_private": false, "attachment_id": null}, {"count": 7, "tags": [], "text": "Hi Team,\n\nI am facing issue with log4j root logger. RootLogger is getting blocked. Below are the thread dumps from our managed server. Could you please help me to resolve the issue.\n\n###<Jul 21, 2015 9:23:58 AM IST> <Info> <Server> <aukpczbr.dc-dublin.de> <aukpczbr_p2> <[ACTIVE] ExecuteThread: '13' for queue: 'weblogic.kernel.Default (self-tuning)'> <<WLS Kernel>> <> <> <1437467038573> <BEA-002634> <The server \"pci_p2_ad_admin\" disconnected from this server.> \n####<Jul 21, 2015 9:23:58 AM IST> <Error> <WebLogicServer> <aukpczbr.dc-dublin.de> <aukpczbr_p2> <[STANDBY] ExecuteThread: '11' for queue: 'weblogic.kernel.Default (self-tuning)'> <<WLS Kernel>> <> <> <1437467038600> <BEA-000337> <[STUCK] ExecuteThread: '16' for queue: 'weblogic.kernel.Default (self-tuning)' has been busy for \"652\" seconds working on the request \"weblogic.work.SelfTuningWorkManagerImpl$WorkAdapterImpl@58887aee\", which is more than the configured time (StuckThreadMaxTime) of \"600\" seconds. Stack trace:\nThread-3471 \"[STUCK] ExecuteThread: '16' for queue: 'weblogic.kernel.Default (self-tuning)'\" <alive, suspended, blocked, priority=1, DAEMON> {\n    -- Blocked trying to get lock: org.apache.log4j.spi.RootLogger@21cb1369[not locked]\n    org.apache.log4j.Category.callAppenders(Category.java:204)\n    org.apache.log4j.Category.forcedLog(Category.java:391)\n    org.apache.log4j.Category.log(Category.java:856)\n    org.slf4j.impl.Log4jLoggerAdapter.error(Log4jLoggerAdapter.java:541)\n    com.vodafone.pciadaptor.core.emis.HttpConnectionProbe.onRun(HttpConnectionProbe.java:105)\n    com.vodafone.pciadaptor.core.scheduling.AbstractScheduledTask.run(AbstractScheduledTask.java:42)\n    org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:51)\n    java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:439)\n    java.util.concurrent.FutureTask$Sync.innerRunAndReset(FutureTask.java:317)\n    java.util.concurrent.FutureTask.runAndReset(FutureTask.java:150)\n    org.springframework.scheduling.commonj.TimerManagerTaskScheduler$TimerScheduledFuture.timerExpired(TimerManagerTaskScheduler.java:112)\n    org.springframework.scheduling.commonj.TimerManagerTaskScheduler$ReschedulingTimerListener.timerExpired(TimerManagerTaskScheduler.java:165)\n    weblogic.timers.internal.commonj.ListenerWrap.timerExpired(ListenerWrap.java:37)\n    weblogic.timers.internal.TimerImpl.run(TimerImpl.java:273)\n    weblogic.work.SelfTuningWorkManagerImpl$WorkAdapterImpl.run(SelfTuningWorkManagerImpl.java:528)\n    weblogic.work.ExecuteThread.execute(ExecuteThread.java:207)\n    weblogic.work.ExecuteThread.run(ExecuteThread.java:176)\n}\n\n>", "attachment_id": null, "id": 184381, "creation_time": "2015-08-06T12:14:08Z", "time": "2015-08-06T12:14:08Z", "creator": "AL00339146@techmahindra.com", "bug_id": 57714, "is_private": false}, {"count": 8, "attachment_id": null, "bug_id": 57714, "is_private": false, "id": 184384, "time": "2015-08-06T14:05:18Z", "creator": "garydgregory@gmail.com", "creation_time": "2015-08-06T14:05:18Z", "tags": [], "text": "FYI: https://blogs.apache.org/foundation/entry/apache_logging_services_project_announces"}, {"count": 9, "tags": [], "creator": "AL00339146@techmahindra.com", "attachment_id": null, "text": "Could you please help with a temporary solution for this. As this is creating issue on production server with business impact.\n\nThanks in advance", "id": 184385, "time": "2015-08-06T14:16:34Z", "bug_id": 57714, "creation_time": "2015-08-06T14:16:34Z", "is_private": false}, {"count": 10, "tags": [], "bug_id": 57714, "text": "Hi Gary,\n\nCould you please help with a temporary solution for resolving this issue. Also will upgrading log4j 1.x to log4j2 resolve this issue?", "id": 184400, "time": "2015-08-07T08:49:33Z", "creator": "AL00339146@techmahindra.com", "creation_time": "2015-08-07T08:49:33Z", "is_private": false, "attachment_id": null}, {"count": 11, "text": "There is no temporary fix for this issue and is one of the reasons Log4j 2 came about. The only fix is to upgrade to Log4j 2.", "bug_id": 57714, "is_private": false, "id": 184401, "time": "2015-08-07T09:24:37Z", "creator": "Ralph.Goers@dslextreme.com", "creation_time": "2015-08-07T09:24:37Z", "tags": [], "attachment_id": null}, {"count": 12, "tags": [], "creator": "AL00339146@techmahindra.com", "attachment_id": null, "id": 184403, "time": "2015-08-07T09:28:42Z", "bug_id": 57714, "creation_time": "2015-08-07T09:28:42Z", "is_private": false, "text": "Thanks a lot Ralph. Appreciate your quick response."}, {"count": 13, "attachment_id": null, "bug_id": 57714, "is_private": false, "id": 184406, "time": "2015-08-07T13:02:37Z", "creator": "AL00339146@techmahindra.com", "creation_time": "2015-08-07T13:02:37Z", "tags": [], "text": "As stated in the reference link provided by you, we have two solutions for upgrading lo4j 1.x to log4j2.At this point of time we wont be able to upgrade to log4j2 completely as this application deals with live transactions. So please suggest if we can can go with migrating to log4j 2 with the help of log4j 1.2 Bridge.Also let me know the latest and and stable version log4j1.2 bridge \n\nCan you also confirm if this solution is going to resolve this issue as it is affecting the live transactions.\n\nMany thanks."}, {"count": 14, "tags": [], "bug_id": 57714, "text": "Your stack trace shows you are calling Log4j1 via the SLF4J API. You can use Log4J 2's sLF4J binding instead of the Binding to Log4j 1 provided by the SLF4J project. \n\nLog4j 2 does not have this issue with locking.", "id": 184409, "time": "2015-08-07T13:18:32Z", "creator": "Ralph.Goers@dslextreme.com", "creation_time": "2015-08-07T13:18:32Z", "is_private": false, "attachment_id": null}, {"count": 15, "tags": [], "bug_id": 57714, "attachment_id": null, "id": 184447, "time": "2015-08-10T13:38:04Z", "creator": "AL00339146@techmahindra.com", "creation_time": "2015-08-10T13:38:04Z", "is_private": false, "text": "Many Thanks Ralph.\n\nCurrently I am using log4j version 1.2.16 and slf4j version 1.6.1. Which is the stable version that can be used to resolve this issue."}, {"count": 16, "tags": [], "bug_id": 57714, "text": "Stable version for migrating using logging Bridge 1.x", "id": 184448, "time": "2015-08-10T13:39:27Z", "creator": "AL00339146@techmahindra.com", "creation_time": "2015-08-10T13:39:27Z", "is_private": false, "attachment_id": null}, {"count": 17, "tags": [], "bug_id": 57714, "text": "*** Bug 58218 has been marked as a duplicate of this bug. ***", "id": 184455, "time": "2015-08-10T14:06:05Z", "creator": "Ralph.Goers@dslextreme.com", "creation_time": "2015-08-10T14:06:05Z", "is_private": false, "attachment_id": null}, {"count": 18, "text": "Hi Ralph \n\nI have replaced the existing log4j 1.2.16 jar with log4j1.2-api jar version 2.3.Am I  replacing with the right jar for using bridge for migrating from log4j1.x to log4j 2. Could you please help.\n\nThanks in advance.", "bug_id": 57714, "attachment_id": null, "id": 184482, "time": "2015-08-12T07:08:31Z", "creator": "AL00339146@techmahindra.com", "creation_time": "2015-08-12T07:08:31Z", "tags": [], "is_private": false}, {"count": 19, "tags": [], "bug_id": 57714, "text": "Please see https://logging.apache.org/log4j/2.x/manual/migration.html", "id": 184520, "time": "2015-08-12T15:50:48Z", "creator": "garydgregory@gmail.com", "creation_time": "2015-08-12T15:50:48Z", "is_private": false, "attachment_id": null}]