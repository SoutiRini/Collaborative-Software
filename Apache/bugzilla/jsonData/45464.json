[{"count": 0, "tags": [], "bug_id": 45464, "text": "The mod_dav_fs module is very slow when listing 500+ files in a directory.\n\nWe were using 2.0.55, after an upgrade to 2.2.8, the dav module became extemely slow. By 10+ times compared to 2.0.55.\n\nI've tried the latest 2.0.63 but the slowness remained. After a bit of checks the first version with this \"slowness\" is 2.0.61 (on 2.0.59 there is no problem).\nThis bug remained up to 2.2.8 and 2.2.9 which are the latest stable releases.\n\nSome info about the tests:\nI've tested on Windows XP and Windows 2003 Server.\nI've tried disabling all the modules which are not needed.\nThese are 500+ xml files that should be listed.\n\nThe dav module makes no change. I suppose there was a faulty change in 2.0.61 or a change that was not synchronized with mod_dav or mod_dav_fs module which causes this problem.\n\nI have network traces for 2.0.55 and 2.2.8 but they look almost the same, only the network speed (number of packets in second) is much slower, as if something blocks apache from giving the fast results.\n\nPlease check the changes in 2.0.61 and their affect on mod_dav and mod_dav_fs module.", "id": 118920, "time": "2008-07-23T00:46:42Z", "creator": "m_vitaly@topixoft.com", "creation_time": "2008-07-23T00:46:42Z", "is_private": false, "attachment_id": null}, {"count": 1, "text": "I compared 2059 vs. 2061 on OpenSolaris and didn't find any difference in CPU usage or apparent throughput.  I have a collection \"col1\" with 5000 entries and had cadaver run \"ls col1\" 20 times.\n\nIn case my testcase is bad, could you try to reproduce the problem with cadaver as I did?\n\ncadaver http://your-dav-url\nPROMPT>ls your-collection\n\nI see a Windows-specific change in apr between those levels that might cause more system overhead: http://svn.apache.org/viewvc?view=rev&revision=425624\n\nI didn't examine the code in enough detail to see if that extra system overhead would affect listing a collection.\n\n", "bug_id": 45464, "is_private": false, "id": 118984, "time": "2008-07-24T08:31:23Z", "creator": "trawick@apache.org", "creation_time": "2008-07-24T08:31:23Z", "tags": [], "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 45464, "text": "For now, scratch my previous request to try with cadaver and try this patch instead:\n\nIndex: modules/dav/fs/repos.c\n===================================================================\n--- modules/dav/fs/repos.c\t(revision 679477)\n+++ modules/dav/fs/repos.c\t(working copy)\n@@ -1480,9 +1480,8 @@\n         dav_buffer_place_mem(pool, &fsctx->path1, dirent.name, len + 1, 0);\n \n \n-        /* ### Optimize me, dirent can give us what we need! */\n         status = apr_stat(&fsctx->info1.finfo, fsctx->path1.buf,\n-                          APR_FINFO_NORM | APR_FINFO_LINK, pool);\n+                          APR_FINFO_TYPE | APR_FINFO_LINK, pool);\n         if (status != APR_SUCCESS && status != APR_INCOMPLETE) {\n             /* woah! where'd it go? */\n             /* ### should have a better error here */\n\ntesting further with 2.0.61, I found a call to apr_*stat which would trigger the extra Windows system overhead in 2.0.61+:\n\nwanted=7582064 in the apr_stat call means retrieve lots of information about the file, even though this code only needs to know the type (dir, regular file, etc.)\n\nfor each member of collection!\n\n(dbx) where\ncurrent thread: t@1\n=>[1] apr_stat(finfo = 0x8047594, fname = 0x82251a0 \"/export/home/trawick/davfs/col1/testfile.3148\", wanted = 7582065, pool = 0x81eb0b8), line 234 in \"filestat.c\"\n  [2] apr_lstat(finfo = 0x8047594, fname = 0x82251a0 \"/export/home/trawick/davfs/col1/testfile.3148\", wanted = 7582064, pool = 0x81eb0b8), line 287 in \"filestat.c\"\n  [3] dav_fs_walker(fsctx = 0x8047550, depth = 1), line 1458 in \"repos.c\"\n  [4] dav_fs_internal_walk(params = 0x80476f0, depth = 1, is_move = 0, root_dst = (nil), response = 0x80476ec), line 1729 in \"repos.c\"\n  [5] dav_fs_walk(params = 0x80476f0, depth = 1, response = 0x80476ec), line 1738 in \"repos.c\"\n  [6] dav_method_propfind(r = 0x81eb0f0), line 2045 in \"mod_dav.c\"\n  [7] dav_handler(r = 0x81eb0f0), line 4626 in \"mod_dav.c\"\n  [8] ap_run_handler(0x81eb0f0, 0x0), at 0x8077866 \n  [9] ap_invoke_handler(r = 0x81eb0f0), line 364 in \"config.c\"\n  [10] ap_process_request(r = 0x81eb0f0), line 249 in \"http_request.c\"\n  [11] ap_process_http_connection(c = 0x817b358), line 253 in \"http_core.c\"\n  [12] ap_run_process_connection(0x817b358, 0x0), at 0x8084ff6 \n  [13] ap_process_connection(c = 0x817b358, csd = 0x817b280), line 176 in \"connection.c\"\n  [14] child_main(child_num_arg = 5), line 610 in \"prefork.c\"\n  [15] make_child(s = 0x80d0168, slot = 5), line 704 in \"prefork.c\"\n  [16] ap_mpm_run(_pconf = 0x80ce388, plog = 0x80fa438, s = 0x80d0168), line 1001 in \"prefork.c\"\n  [17] main(argc = 3, argv = 0x8047978), line 623 in \"main.c\"\n\nI tested essentially the same patch onto 2.0.61 on Open Solaris, but the extra overhead wasn't required on Unix anyway and performance didn't change noticeably.\n\nThere are likely some other apr_*stat() calls in dav/fs/repos.c that can be optimized.  For now please see how much this helps on Windows.\n", "id": 118991, "time": "2008-07-24T11:26:42Z", "creator": "trawick@apache.org", "creation_time": "2008-07-24T11:26:42Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 45464, "text": "First of all I have to say that this bug affects only Windows systems. Or at least my tests on ubuntu with their version of apache 2.2 it doesn't happen.\n\nI've downloaded the source of 2.0.63. That file (modules/dav/fs/repos.c) was slightly older. In any case, I've changed the line:\n        /* ### Optimize me, dirent can give us what we need! */\n        status = apr_lstat(&fsctx->info1.finfo, fsctx->path1.buf, \n                           APR_FINFO_NORM, pool);\n\nChanged the same APR_FINFO_NORM to APR_FINFO_TYPE.\n\nCompiled twice, once with the original value, tested, and then compiled after the change and tested again.\n\nNow the test and results:\nI've set \"Dav On\" on the icons directory that comes with apache and copied the files there twice to multiply them (Copy of... , Copy of Copy of...).\nThat gave me a directory with 620 files.\n\nWith the original version of mod_dav_fs (comes with 2.0.63): 9sec.\nWith the original module recompiled (debug mode): 10sec.\nWith the patched module (debug mode): 3sec.\nWith the patched module (release mode): 0.5sec.\n\nThe tests were run with this command:\necho ls | time cadaver http://path to apache folder with 620 files/\nThe last result line is:\n0.06user 0.01system 0:00.51elapsed 14%CPU (0avgtext+0avgdata 0maxresident)k\n0inputs+0outputs (0major+664minor)pagefaults 0swaps\nNotice the 0:00.51 elapsed time.\n\nIf the change I've made is equivalent to your suggested change (I suppose so), then this is the fix for my bug.\n\nIf you need another tests just let me know.\n\nThank you.", "id": 119025, "time": "2008-07-25T10:16:20Z", "creator": "m_vitaly@topixoft.com", "creation_time": "2008-07-25T10:16:20Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 45464, "attachment_id": null, "id": 119028, "time": "2008-07-25T11:31:32Z", "creator": "trawick@apache.org", "creation_time": "2008-07-25T11:31:32Z", "is_private": false, "text": ">If the change I've made is equivalent to your suggested change (I suppose so)\nYes, that's the exact change I tested with 2.0.61.\n\n>then this is the fix for my bug.\nGreat!  Thanks so much for narrowing down the release where the issue was introduced, and then testing the proposed fix on the affected platform.\n\nI'll get the fix committed to trunk in the next couple of days then see how far back folks want to backport.\n"}, {"count": 5, "tags": [], "text": "This is fixed in trunk and proposed for backport to 2.2.x.\n", "attachment_id": null, "id": 119714, "creator": "trawick@apache.org", "time": "2008-08-12T07:13:40Z", "bug_id": 45464, "creation_time": "2008-08-12T07:13:40Z", "is_private": false}, {"count": 6, "tags": [], "creator": "rpluem@apache.org", "text": "Backported to 2.2.10.", "id": 121568, "time": "2008-10-15T12:58:42Z", "bug_id": 45464, "creation_time": "2008-10-15T12:58:42Z", "is_private": false, "attachment_id": null}]