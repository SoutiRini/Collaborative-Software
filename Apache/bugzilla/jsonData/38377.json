[{"count": 0, "tags": [], "bug_id": 38377, "attachment_id": null, "id": 84972, "time": "2006-01-25T05:48:24Z", "creator": "neumann@lostwebsite.net", "creation_time": "2006-01-25T05:48:24Z", "is_private": false, "text": "The property java.system.class.loader is supposed to allow JVM users to change \nthe default class loader to another class. \n \norg.apache.bcel.util.ClassLoader cannot be used with this property.  Setting \n-Djava.system.class.loader=org.apache.bcel.util.ClassLoader provokes this at \nload time. \n \nError occurred during initialization of VM \njava.lang.Error: java.lang.IllegalStateException: recursive invocation \n \njava version \"1.5.0_06\" \nJava(TM) 2 Runtime Environment, Standard Edition (build 1.5.0_06-b05) \nJava HotSpot(TM) 64-Bit Server VM (build 1.5.0_06-b05, mixed mode) \n \nthis bug also applies to SVN-HEAD."}, {"count": 1, "tags": [], "creator": "neumann@lostwebsite.net", "attachment_id": null, "text": "This link might provide additionnal informations: \n \nhttp://www.mail-archive.com/bcel-dev%40jakarta.apache.org/msg00451.html ", "id": 84973, "time": "2006-01-25T05:49:21Z", "bug_id": 38377, "creation_time": "2006-01-25T05:49:21Z", "is_private": false}, {"count": 2, "tags": [], "creator": "dbrosius@apache.org", "attachment_id": null, "text": "hmmm. I attempted to do as you suggest, but can't seem to shake the \njava.lang.Error: java.lang.IllegalStateException: recursive invocation \n\nerror.\n\ncould getParent() be returning org.apache.bcel.util.ClassLoader, in this case?\n\nUnfortunately the error occurs before debugging begins.\n\nAny ideas?", "id": 84976, "time": "2006-01-25T07:50:28Z", "bug_id": 38377, "creation_time": "2006-01-25T07:50:28Z", "is_private": false}, {"count": 3, "tags": [], "creator": "neumann@lostwebsite.net", "attachment_id": null, "text": "To reproduce: \n \npublic class EmptyMain \n{ \n   public static void main(String[] args) \n     { \n     } \n} \n \nneumann@Silvester:/tmp$ javac EmptyMain.java \nneumann@Silvester:/tmp$ java \n-Djava.system.class.loader=org.apache.bcel.util.ClassLoader \n-cp /home/neumann/Libs/bcel-5.1/bcel-5.1.jar:. EmptyMain \nError occurred during initialization of VM \njava.lang.Error: java.lang.IllegalStateException: recursive invocation \nneumann@Silvester:/tmp$ java -version \njava version \"1.5.0_06\" \nJava(TM) 2 Runtime Environment, Standard Edition (build 1.5.0_06-b05) \nJava HotSpot(TM) 64-Bit Server VM (build 1.5.0_06-b05, mixed mode) \n \nA tentative patch will soon follow. \n ", "id": 84990, "time": "2006-01-25T14:54:20Z", "bug_id": 38377, "creation_time": "2006-01-25T14:54:20Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 38377, "attachment_id": 17501, "text": "Created attachment 17501\nTentative patch.\n\nThis is a tentative patch.  It may not well be the solution to the problem, but\nit does remove the IllegalStateException error.\n\nI think the problem is that, once initSystemClassLoader is called (it's in\njava.lang.ClassLoader), no class should depend load java.lang.ClassLoader or\nyou get a indirectly recursive call of initSystemClassLoader.", "id": 84991, "time": "2006-01-25T14:59:32Z", "creator": "neumann@lostwebsite.net", "creation_time": "2006-01-25T14:59:32Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 38377, "text": "Now that I think of it, my idea of the source of the problem is probably wrong \nso disregard the explanation after the patch. \n \nThe patch, though, still solves the problem. ", "id": 84992, "time": "2006-01-25T15:05:39Z", "creator": "neumann@lostwebsite.net", "creation_time": "2006-01-25T15:05:39Z", "is_private": false, "attachment_id": null}, {"count": 6, "tags": [], "bug_id": 38377, "attachment_id": null, "text": "tentative this looks ok ...I am not 100% but since it solves the problem I've just committed it", "id": 86366, "time": "2006-03-02T03:11:22Z", "creator": "tcurdt@apache.org", "creation_time": "2006-03-02T03:11:22Z", "is_private": false}, {"count": 7, "tags": [], "creator": "mail@dcoy.org", "attachment_id": 18930, "text": "Created attachment 18930\nPatch for ClassLoader constructor\n\nI created a subclass of org..ClassLoader (lets call is SLoader) and tried to\nuse it as the system class loader, but it gave me the same error as described\nin the initial comment.\n\nThe class looks like this:\n\npublic class SLoader extends ClassLoader{\n [...]\n    public SLoader(java.lang.ClassLoader deferTo) {\n\tsuper(deferTo, new String[]{ \"java.\",\n\t\t\t\t     \"javax.\",\n\t\t\t\t     \"com.sun.\",\n\t\t\t\t     \"sun.\"}\n\t);\n    }\n [...]\n}\n\nThe JVM calls the above constructor when the class is passed with the\n-Djava.system.class.loader VM argument. This constructor then calls the\nconstructor of the org..ClassLoader\n\npublic class ClassLoader extends java.lang.ClassLoader {\n [...]\n    public ClassLoader(java.lang.ClassLoader deferTo, String[]\nignored_packages) {\n\tthis(ignored_packages);\n\tthis.repository = new ClassLoaderRepository(deferTo);\n    }\n [...]\n}\n\nAs you can see, there is no explicit call the any constructor of the\njava..ClassLoader class. This causes its default constructor to be invoked,\nwhich tries to resolv the parent class loader by calling\njava..ClassLoader.getSystemClassLoader() which causes the loop in the class\nloader hierarchy.\n\nThe appended patch fixes this by explicitly invoking the\n\n    java.lang.ClassLoader.ClassLoader(ClassLoader parent)\n\nconstructor which does not use the getSystemClassLoader() method.\n\n\nA question about the bug reporting process: Should I REOPEN the bug and then\nset it RESOLVED/FIXED again?", "id": 94223, "time": "2006-09-28T11:23:12Z", "bug_id": 38377, "creation_time": "2006-09-28T11:23:12Z", "is_private": false}]