[{"count": 0, "tags": [], "bug_id": 15120, "attachment_id": null, "id": 27476, "time": "2002-12-05T20:24:33Z", "creator": "kcassell@360Commerce.com", "creation_time": "2002-12-05T20:24:33Z", "is_private": false, "text": "It would be nice if the user had the option of viewing a rendered HTML response \ninstead of the raw text.  This would make it easier to evaluate the response at \na glance.\n\n---------------\n\nThe patch below gives the user the option of viewing a response as the HTML\nsource text or as rendered HTML.  Although the JEditorPane has limited\ncapabilities compared to most web browsers, it at least makes it possible to get\na quick and dirty idea of what the response looks like without digging through\nall of the HTML source.\n\n--- \\temp\\ViewResultsFullVisualizer.java      Mon Nov 18 12:44:49 2002\n+++ ViewResultsFullVisualizer.java Mon Nov 18 13:08:42 2002\n@@ -59,9 +59,13 @@\n import java.awt.GridBagConstraints;\n import java.awt.GridBagLayout;\n import java.awt.Insets;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n import java.io.UnsupportedEncodingException;\n\n import javax.swing.ImageIcon;\n+import javax.swing.JButton;\n+import javax.swing.JEditorPane;\n import javax.swing.JLabel;\n import javax.swing.JPanel;\n import javax.swing.JScrollPane;\n@@ -70,6 +74,7 @@\n import javax.swing.JTree;\n import javax.swing.event.TreeSelectionEvent;\n import javax.swing.event.TreeSelectionListener;\n+import javax.swing.text.html.HTMLEditorKit;\n import javax.swing.tree.DefaultMutableTreeNode;\n import javax.swing.tree.DefaultTreeCellRenderer;\n import javax.swing.tree.DefaultTreeModel;\n@@ -93,19 +98,34 @@\n  ***************************************/\n public class ViewResultsFullVisualizer\n     extends AbstractVisualizer\n-    implements TreeSelectionListener, Clearable\n+    implements ActionListener, TreeSelectionListener, Clearable\n {\n     public final static Color SERVER_ERROR_COLOR = Color.red;\n     public final static Color CLIENT_ERROR_COLOR = Color.blue;\n     public final static Color REDIRECT_COLOR = Color.green;\n+    protected static final String HTML_BUTTON_LABEL = \"Render HTML\";\n+    protected static final String TEXT_BUTTON_LABEL = \"Show Text\";\n     protected DefaultMutableTreeNode root;\n     protected DefaultTreeModel treeModel;\n     protected GridBagLayout gridBag;\n     protected GridBagConstraints gbc;\n+\n+    /** The button that will pop up the response as rendered HTML or\n+        text.  **/\n+    protected JButton htmlOrTextButton;\n+\n+    /** The response to be displayed.  **/\n+    protected String response;\n+\n+    /** The pane where the rendered HTML response is displayed.  **/\n+    protected JEditorPane htmlEditPane;\n+\n     protected JPanel resultPanel;\n     protected JScrollPane treePane;\n     protected JScrollPane resultPane;\n     protected JSplitPane treeSplitPane;\n+    /** The text area where the response is displayed.  **/\n+    protected JTextArea textArea;\n     protected JTree jTree;\n     protected int childIndex;\n     transient private static Logger log =\n@@ -271,7 +291,6 @@\n                    // get the text response and image icon\n                    // to determine which is NOT null\n                    byte[] responseBytes = (byte[]) res.getResponseData();\n-                   String response = null;\n                    ImageIcon icon = null;\n                    if (res.getDataType() != null\n                         && res.getDataType().equals(SampleResult.TEXT))\n@@ -291,15 +310,22 @@\n                    }\n                    if (response != null)\n                    {\n-                        JTextArea textArea = new JTextArea();\n-                        textArea.setText(response);\n-                        textArea.setColumns(70);\n-                        textArea.setLineWrap(true);\n-                        textArea.setWrapStyleWord(true);\n-                        textArea.setTabSize(4);\n                         gbc.gridx = 0;\n-                        gridBag.setConstraints(textArea, gbc);\n-                        resultPanel.add(textArea);\n+                        gbc.gridy++;\n+                        gridBag.setConstraints(htmlOrTextButton,\n+                                         gbc);\n+                        resultPanel.add(htmlOrTextButton);\n+\n+                        // Text display <=> HTML labeled button\n+                        if\n(HTML_BUTTON_LABEL.equals(htmlOrTextButton.getText()))\n+                        {\n+                             showTextResponse(response);\n+                        }\n+                        // HTML display <=> Text labeled button\n+                        else\n+                        {\n+                             showRenderedResponse(response);\n+                        }\n                    }\n                    else if (icon != null)\n                    {\n@@ -315,6 +341,89 @@\n          }\n          log.debug(\"End : valueChanged1\");\n     }\n+\n+    protected void initTextArea()\n+    {\n+         textArea = new JTextArea();\n+         textArea.setColumns(70);\n+         textArea.setLineWrap(true);\n+         textArea.setWrapStyleWord(true);\n+         textArea.setTabSize(4);\n+         gridBag.setConstraints(textArea, gbc);\n+         resultPanel.add(textArea);\n+         gbc.gridy++;\n+    }\n+\n+    protected void showTextResponse(String response)\n+    {\n+         resultPanel.remove(htmlEditPane);\n+\n+         gbc.gridx = 0;\n+         gbc.gridy++;\n+         gridBag.setConstraints(textArea, gbc);\n+         textArea.setText(response);\n+         textArea.setCaretPosition(0);\n+         resultPanel.add(textArea);\n+    }\n+\n+\n+    /**********************************************************************\n+     * Display the response as text or as rendered HTML.  Change the\n+     * text on the button appropriate to the current display.\n+     * @param e the ActionEvent being processed\n+     *********************************************************************/\n+\n+    public void actionPerformed(ActionEvent e)\n+    {\n+         // If the htmlOrTextButton is clicked, show the response in the\n+         // appropriate way, and change the button label\n+         if (htmlOrTextButton.equals(e.getSource()))\n+         {\n+              // Show rendered HTML\n+              if (HTML_BUTTON_LABEL.equals(htmlOrTextButton.getText()))\n+              {\n+                   showRenderedResponse(response);\n+                   htmlOrTextButton.setText(TEXT_BUTTON_LABEL);\n+              }\n+              // Show the textual response\n+              else\n+              {\n+                   showTextResponse(response);\n+                   htmlOrTextButton.setText(HTML_BUTTON_LABEL);\n+              }\n+         }\n+    }\n+\n+\n+    protected void initHtmlEditPane()\n+    {\n+         htmlEditPane = new JEditorPane();\n+         HTMLEditorKit htmlKit = new HTMLEditorKit();\n+         htmlEditPane.setEditorKit(htmlKit);\n+    }\n+\n+    protected void showRenderedResponse(String response)\n+    {\n+         resultPanel.remove(textArea);\n+\n+         int htmlIndex = response.indexOf(\"<html>\");\n+         String html = response.substring(htmlIndex, response.length());\n+         htmlEditPane.setText(html);\n+         htmlEditPane.setCaretPosition(0);\n+\n+         gbc.gridx = 0;\n+         gbc.gridy++;\n+         gridBag.setConstraints(htmlEditPane, gbc);\n+         resultPanel.add(htmlEditPane);\n+    }\n+\n+    protected void initHtmlOrTextButton()\n+    {\n+         htmlOrTextButton = new JButton(HTML_BUTTON_LABEL);\n+         htmlOrTextButton.addActionListener(this);\n+    }\n+\n+\n     /****************************************\n      * Initialize this visualizer\n      ***************************************/\n@@ -336,6 +445,9 @@\n          gbc = new GridBagConstraints();\n          resultPanel = new JPanel(gridBag);\n          resultPane = new JScrollPane(resultPanel);\n+         initHtmlOrTextButton();\n+         initTextArea();\n+         initHtmlEditPane();\n          treeSplitPane =\n               new JSplitPane(JSplitPane.VERTICAL_SPLIT, treePane, resultPane);\n          getFilePanel().add(getErrorLoggingCheckbox());."}, {"count": 1, "tags": [], "bug_id": 15120, "attachment_id": null, "text": "Bulk-editing to close all bugs reported fixed by 1.8.1.", "id": 32840, "time": "2003-03-10T09:40:58Z", "creator": "jsalvata@atg.com", "creation_time": "2003-03-10T09:40:58Z", "is_private": false}]