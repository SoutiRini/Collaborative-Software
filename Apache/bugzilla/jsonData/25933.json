[{"count": 0, "tags": [], "creator": "adelmelle@apache.org", "attachment_id": null, "text": "This patch as a more extensive tryout ( apart from a few superfluous diffs caused by a local styling \nof the code, I think it's even quite okay ) Table support in HEAD seems very basic up to here, so ...\n\nFollowing changes were made:\n\n- added an instance variable 'colcnt' to fop.fo.flow.Table: this allows for convenient support for the \nFO properties column-number / number-columns-spanned ( on columns ) / number-columns-\nrepeated (see Table.addChild() --thanks again, Chris)\n\n- added a few accessors to fop.fo.flow.TableCell for properties column-number / number-\ncolumns-spanned, and to fop.fo.flow.TableColumn additionally for number-columns-repeated\n\n- a few changes to fop.fo.flow.TableRow: not too sure about the way this is handled, considering \nthe multiple casts; also the 'convenience method' I added seems to be a bit ugly too --Is there a \nmore 'clever' way of doing this? Any pieces of code in particular I can look at to get the idea?\n\n- then, of course, the layout managers: fop.layoutmgr.table.Cell, where mods analogous to \nTableCell had to be made and fop.layoutmgr.table.Row, for which I have already discussed the \nchanges here :\nhttp://marc.theaimsgroup.com/?l=fop-dev&m=107307084723834&w=2\n\nAfter these changes, still lacking any support for rowspan: basic logic for this would be, as \ndescribed earlier, to increase the column-indexes of the affected cells at the time the FO tree is \nbuilt. The cell LM can then take care of the cell-height adjustment of spanned cells. By having the \ncolumn-indexes set correctly earlier, the row LM will be able to calculate the reference IPD for the \naffected cells based upon the correct column ( see added private method computeCellRefIPD() )\n\nEnjoy!", "id": 50146, "time": "2004-01-06T21:10:56Z", "bug_id": 25933, "creation_time": "2004-01-06T21:10:56Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 25933, "text": "Created attachment 9832\nunified diff", "id": 50147, "time": "2004-01-06T21:11:56Z", "creator": "adelmelle@apache.org", "creation_time": "2004-01-06T21:11:56Z", "is_private": false, "attachment_id": 9832}, {"count": 2, "tags": [], "creator": "bckfnn@worldonline.dk", "attachment_id": null, "is_private": false, "id": 50270, "time": "2004-01-08T18:23:23Z", "bug_id": 25933, "creation_time": "2004-01-08T18:23:23Z", "text": "The patch cause several of the test in the NIST testsuite, which worked before, \nto throw exceptions. I've attached two different testcases which doesn't work \nwith the patch."}, {"count": 3, "tags": [], "bug_id": 25933, "attachment_id": 9864, "id": 50271, "time": "2004-01-08T18:24:27Z", "creator": "bckfnn@worldonline.dk", "creation_time": "2004-01-08T18:24:27Z", "is_private": false, "text": "Created attachment 9864\nTestcase .fo which throws IOOBE."}, {"count": 4, "tags": [], "bug_id": 25933, "attachment_id": 9865, "id": 50272, "time": "2004-01-08T18:24:57Z", "creator": "bckfnn@worldonline.dk", "creation_time": "2004-01-08T18:24:57Z", "is_private": false, "text": "Created attachment 9865\nTestcase .fo which throws NPE."}, {"count": 5, "tags": [], "creator": "adelmelle@apache.org", "attachment_id": null, "is_private": false, "id": 50291, "time": "2004-01-08T23:42:01Z", "bug_id": 25933, "creation_time": "2004-01-08T23:42:01Z", "text": "Will definitely take a closer look this weekend... As for the second test, I \ncan see immediately that the cause is the absence of any column specs."}, {"count": 6, "tags": [], "bug_id": 25933, "is_private": false, "text": "OK, I think I found the solution to the first case (as already mentioned to \nFinn off-list):\n\nThe first patch adds a for-loop to Table.addChild(). In case of a 3-column-span \nthis created 1 column with i.e. column-number = 1, but increased the index of \nthe following column to 4. However, further on, in the Row LM, a cell in the \nspanning column would need access to column 1, 2 and 3 for their respective \nwidths. The latter two weren't created... so an AIOOBE was thrown. Fixed this \nby adding an inner for-loop to create the 'table-grid' columns, so now in the \nsame case 3 columns would be added as children to the table ( while only one \nhas been specified in the FO; in case\n  <fo:table-column number-columns-spanned=\"3\" number-columns-repeated=\"3\" />\nI believe 9 columns should be created to allow the Row LMs to calculate the \ncell-widths, if not specified).\n\nThe second case I believe to have been partially caused/resolved by the patch \nGlen applied earlier today (bugzilla ref. 25809)... IIC, Finn was already using \nthe altered version at home/work, so that would explain why this was working \nbefore. *But* an NPE gets thrown anyway because the TableRow would need access \nto the TableColumns, and Finn's patch adds the 'column' in AddLMVisitor, so it \nwould not yet be available at FO Tree stage.\n\nRevised patch will be posted (I hope) later this weekend.", "id": 50347, "time": "2004-01-10T00:25:47Z", "creator": "adelmelle@apache.org", "creation_time": "2004-01-10T00:25:47Z", "attachment_id": null}, {"count": 7, "tags": [], "creator": "adelmelle@apache.org", "attachment_id": null, "text": "Irrelevant for current FOP trunk", "id": 99248, "time": "2007-02-11T11:10:51Z", "bug_id": 25933, "creation_time": "2007-02-11T11:10:51Z", "is_private": false}, {"count": 8, "tags": [], "bug_id": 25933, "is_private": false, "text": "batch transition to closed remaining pre-FOP1.0 resolved bugs", "id": 156839, "time": "2012-04-01T13:53:42Z", "creator": "gadams@apache.org", "creation_time": "2012-04-01T13:53:42Z", "attachment_id": null}]