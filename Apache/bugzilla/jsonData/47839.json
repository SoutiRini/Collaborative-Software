[{"count": 0, "attachment_id": null, "bug_id": 47839, "text": "hello\n\ni tried to update custom properties of a remote xlsx document, which is located in a local network, via outputstream.\n\nafter writing the file, i can't open it, because some parts seems to be damaged.\n\nhere is the code:\n\n\t\tOPCPackage opcpackage = OPCPackage.open(file.getAbsolutePath());\n\n\t\tPOIXMLProperties props = new POIXMLProperties(opcpackage);\n\t\torg.openxmlformats.schemas.officeDocument.x2006.customProperties.CTProperty property = props.getCustomProperties().getUnderlyingProperties()\n\t\t\t\t.addNewProperty();\n\t\tproperty.setName(\"FileID\");\n\t\tproperty.setI4(123);\n\n\t\t// props.commit();\n\t\tXSSFWorkbook workbook = new XSSFWorkbook(opcpackage);\n\t\tFileOutputStream out = new FileOutputStream(file);\n\t\tworkbook.write(out);\n\t\topcpackage.close();\n\t\tout.close();\n\nthanks\nwaldek", "id": 130392, "time": "2009-09-14T13:05:48Z", "creator": "waldek@hotmail.ru", "creation_time": "2009-09-14T13:05:48Z", "tags": [], "is_private": false}, {"count": 1, "tags": [], "bug_id": 47839, "is_private": false, "text": "POI provides low-level access to the underlying xml beans but in this case the caller is responsible for setting correct XML and supplying all needed attributes. In your case two required properties of the CTProperty bean were not set, see the OOXML markup Language Reference, section 7.3.2.2:\n<complexType name=\"CT_Property\">\n...\n <attribute name=\"fmtid\" use=\"required\" type=\"vt:ST_Clsid\"/>\n <attribute name=\"pid\" use=\"required\" type=\"xsd:int\"/>\n</complexType>\n\nfmtid is a Global Unique Identifier (GUID) in the form of {HHHHHHHHHHHH-HHHH-HHHH-HHHHHHHH} where each H is a hexidecimal.\npid is a sequential integer. \n\nThe spec does not impose any additional requirements on fmtid and pid. In my first fix I tried to generate GUID using java.util.UUID and set pid using a sequence starting with 1. Unfortunately it didn't work.  \n\nSearching MSDN I found more requirements that are not in the official ECMA spec:\n - Each property element contains an fmtid attribute with the same GUID value ({D5CDD505-2E9C-101B-9397-08002B2CF9AE}). \nProperties with other values are ignored and not visible to Excel. \n - pid always starts with 2. The value of 1 results in corrupted workbook. \n\nSee http://msdn.microsoft.com/en-us/magazine/cc337894.aspx\n\nSo, in your case the code should be as follows:\n\n        property.setName(\"FileID\");\n        property.setI4(123);\n        property.setFmtid(\"{D5CDD505-2E9C-101B-9397-08002B2CF9AE}\");\n        property.setPid(2);\n\n\nCurrent API for OOXML custom properties is pretty much low-level and inappropriate usage can result in unreadable workbook. I simplified it and added four addProperty methods that can set string, float, integer and boolean custom properties. Fmtid and pid are set behind the scene - user does not have to carry about such low-level things.\n\nuser code may look something like this:\n\n        POIXMLProperties props = workbook.getProperties();\n\n        POIXMLProperties.CustomProperties cust =  props.getCustomProperties();\n        cust.addProperty(\"Author\", \"John Smith\");\n        cust.addProperty(\"Year\", 2009);\n        cust.addProperty(\"Price\", 45.50);\n        cust.addProperty(\"Available\", true);\n \nThe fix was committed in r821496\n\nRegards,\nYegor", "id": 130870, "time": "2009-10-04T03:03:55Z", "creator": "yegor@dinom.ru", "creation_time": "2009-10-04T03:03:55Z", "attachment_id": null}]