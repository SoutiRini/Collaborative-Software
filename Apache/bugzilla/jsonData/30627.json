[{"count": 0, "tags": [], "text": "Our central campus web server has been having stability issues \nevery since we've upgraded to Solaris 9.  Initially, we have just\ncopied the apache binaries from the previous installation, but\nwe've recently rebuilt using apache 1.3.31 and see the same behavior.\n\nIn general, we see two problems, which I think have the same cause:\n\n1. Apache servers will occationally fail to acquire an fcntl accept\n   lock, causing the server to exit.\n2. Apache servers occationally segfault.\n\nWe tried moving the location of the lockfile and the type of the lockfile\nwithout any luck.\n\nAfter trussing the apache servers during these two different problems,\nI noticed that in both cases, immediately before the segfault or EDEADLK,\napache recieves an ALARM signal interupting an lwp_park system call.  Normally\nthe ALARMs just come in during read/writes from what I can see.\n\nAnyways, it seems that the ALARM is received in a thread other than lwp#1 \nwhich seems to handle the main loop.\n\nIn the following trace, apache is clearing working in LWP#1, but after\nan ALARM signal is received inside lwp_park, control seems to go to \na different thread, with unexpected results:\n\n/1:     poll(0xFFBFF8B8, 1, 0)                          = 0\n/1:     write(7, \" H T T P / 1 . 1   3 0 4\".., 222)     = 222\n/1:     door_info(4, 0xFFBFD5E0)                        = 0\n/1:     door_call(4, 0xFFBFD5C8)                        = 0\n/1:     time()                                          = 1092327277\n/1:     write(6, \" u b - c o u n s e l i n\".., 207)     = 207\n/1:     times(0x7EAC09CC)                               = 14875555\n/1:     llseek(8, 0, SEEK_CUR)                          = 0\n/1:     close(8)                                        = 0\n/1:     sigaction(SIGUSR1, 0xFFBFF950, 0xFFBFFA70)      = 0\n/1:     read(7, 0x004E1CF0, 4096)       (sleeping...)   \n/203:   lwp_park(0x7F71FC98, 0)                         Err#62 ETIME\n/203:   lwp_park(0x7F71FC98, 0)         (sleeping...)   \n/203:       Received signal #14, SIGALRM, in lwp_park() [caught]\n/203:   lwp_park(0x7F71FC98, 0)                         Err#4 EINTR\n/203:   sigprocmask(SIG_SETMASK, 0x7F71F7DC, 0x00000000) = 0\n/1:     read(7, 0x004E1CF0, 4096)                       Err#9 EBADF\n/203:   close(7)                                        = 0\n/203:   getcontext(0x7F71F538)                          \n/203:   sigprocmask(SIG_SETMASK, 0x7F83A074, 0x7F71F300) = 0\n/203:   lwp_unpark(203, 1)                              = 0\n/203:   setcontext(0x7F71F310)                          \n/1:     time()                                          = 1092327294\n/1:     close(-1)                                       Err#9 EBADF\n/1:     sigaction(SIGUSR1, 0xFFBFF950, 0xFFBFFA70)      = 0\n/203:   sigaction(SIGALRM, 0xFFBFF950, 0xFFBFFA70)      = 0\n/203:   sigaction(SIGUSR1, 0xFFBFF950, 0xFFBFFA70)      = 0\n/203:   fcntl(21, F_SETLKW, 0x004B444C)                 Err#45 EDEADLK\n/203:   time()                                          = 1092327294\n/203:   write(15, \" [ T h u   A u g   1 2  \".., 229)    = 229\n/203:   sigaction(SIGHUP, 0xFFBFF890, 0xFFBFF9B0)       = 0\n/203:   sigaction(SIGUSR1, 0xFFBFF890, 0xFFBFF9B0)      = 0\n/203:   lwp_mutex_lock(0x7F838A00)                      = 0\n/203:   write(1, \" L a u n c h i n g . . .\".., 48)      = 48\n/203:   _exit(15)\n\n\nhere is another trace of the deadlock where I just watched open/close/fcntl:\n\n\n/1:     close(8)                                        = 0\n/757:       Received signal #14, SIGALRM, in lwp_park() [caught]\n/757:   close(7)                                        = 0\n/1:     fcntl(21, F_SETLKW, 0x004B4428)                 = 0\n/1:     fcntl(7, F_SETFD, 0x00000001)                   = 0\n/1:     fcntl(7, F_GETFL, 0x00000000)                   = 130\n/1:     fcntl(7, F_SETFL, 0x00000002)                   = 0\n/1:     open(\"/info/www/.htaccess\", O_RDONLY)           Err#2 ENOENT\n...stuff deleted...\n/1:     close(40)                                       = 0\n/1:     close(8)                                        = 0\n/1:     close(7)                                        = 0\n/1:     fcntl(21, F_SETLKW, 0x004B444C)                 Err#45 EDEADLK\n\n\nand here is a trace of the same sort of signal handling, resulting in\na segfault: (this one is very odd in that it seems two threads are\ntrying to execute the same code concurrently)\n\n/1:     close(8)                                        = 0\n/1:     close(58)                                       = 0\n/1:     close(56)                                       = 0\n/1:     close(45)                                       = 0\n/194:       Received signal #14, SIGALRM, in lwp_park() [caught]\n/1:     close(7)                                        Err#9 EBADF\n/194:   close(7)                                        = 0\n/1:     fcntl(21, F_SETLKW, 0x004B444C) (sleeping...)\n/194:   fcntl(21, F_SETLKW, 0x004B444C) (sleeping...)\n/194:   fcntl(21, F_SETLKW, 0x004B444C)                 = 0\n/1:     fcntl(21, F_SETLKW, 0x004B444C)                 = 0\n/1:     fcntl(21, F_SETLKW, 0x004B4428)                 = 0\n/1:     fcntl(7, F_SETFD, 0x00000001)                   = 0\n/1:     fcntl(7, F_GETFL, 0x00000000)                   = 130\n/194:       Incurred fault #6, FLTBOUNDS  %pc = 0x7F952540\n/194:         siginfo: SIGSEGV SEGV_MAPERR addr=0x00000000\n/194:       Received signal #11, SIGSEGV [caught]\n/194:         siginfo: SIGSEGV SEGV_MAPERR addr=0x00000000\n/1:     fcntl(7, F_SETFL, 0x00000002)                   = 0\n/1:         Received signal #11, SIGSEGV [default]\n/1:           siginfo: SIGSEGV pid=16796 uid=60001\n/194:       Incurred fault #6, FLTBOUNDS  %pc = 0x7F952540\n/194:         siginfo: SIGSEGV SEGV_MAPERR addr=0x00000000\n\nWe're running apache 1.3.31 with a bunch of modules.  Since this\nappears to be a race condition that we only see under load and we\ncan't disable modules on our production server, I haven't tested disabling\nindividual modules.\n\nmod_auth_dce uses threads, but we haven't seen this problem before when\nusing mod_auth_dce.  php4, fastcgi and apache-ssl are also being used.\n\nAnyways, the reason I feel this is related to ALARM handling on solaris 9\nis because of a note in the solaris 9 developer docs:\n\nhttp://docs.sun.com/db/doc/806-6867/6jfpgdcnt?q=alarm&a=view\n\n>Effective with the Solaris 9 Operating Environment, calls to alarm() or to \n>setitimer(ITIMER_REAL) will cause the resulting SIGALRM signal to be sent to \n>the process.\n\n\nsome info on our server:\n\n> /usr/local/apache/httpsd -V\nServer version: Apache/1.3.31 Ben-SSL/1.55 (Unix)\nServer built:   Aug  4 2004 10:28:40\nServer's Module Magic Number: 19990320:16\nServer compiled with....\n -D HAVE_MMAP\n -D USE_MMAP_SCOREBOARD\n -D USE_MMAP_FILES\n -D NO_WRITEV\n -D HAVE_FCNTL_SERIALIZED_ACCEPT\n -D HAVE_SYSVSEM_SERIALIZED_ACCEPT\n -D HAVE_PTHREAD_SERIALIZED_ACCEPT\n -D DYNAMIC_MODULE_LIMIT=64\n -D HARD_SERVER_LIMIT=1024\n -D HTTPD_ROOT=\"/usr/local/apache\"\n -D SUEXEC_BIN=\"/usr/local/apache/bin/suexec\"\n -D DEFAULT_PIDLOG=\"logs/httpd.pid\"\n -D DEFAULT_SCOREBOARD=\"logs/apache_runtime_status\"\n -D DEFAULT_LOCKFILE=\"logs/accept.lock\"\n -D DEFAULT_ERRORLOG=\"logs/error_log\"\n -D TYPES_CONFIG_FILE=\"conf/mime.types\"\n -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n -D ACCESS_CONFIG_FILE=\"conf/access.conf\"\n -D RESOURCE_CONFIG_FILE=\"conf/srm.conf\"\n> /usr/local/apache/httpsd -l\nCompiled-in modules:\n  http_core.c\n  mod_php4.c\n  mod_env.c\n  mod_log_config.c\n  mod_mime_magic.c\n  mod_mime.c\n  mod_negotiation.c\n  mod_status.c\n  mod_info.c\n  mod_include.c\n  mod_autoindex.c\n  mod_dir.c\n  mod_cgi.c\n  mod_fastcgi.c\n  mod_asis.c\n  mod_imap.c\n  mod_actions.c\n  mod_speling.c\n  mod_userdir.c\n  mod_alias.c\n  mod_rewrite.c\n  mod_access.c\n  mod_auth_dce.c\n  mod_auth.c\n  mod_expires.c\n  mod_headers.c\n  mod_setenvif.c\n  apache_ssl.c\nsuexec: disabled; invalid wrapper /usr/local/apache/bin/suexec\n>", "attachment_id": null, "id": 61909, "creator": "jmurphy@buffalo.edu", "time": "2004-08-12T18:00:18Z", "bug_id": 30627, "creation_time": "2004-08-12T18:00:18Z", "is_private": false}, {"text": "Created attachment 12421\nproposed patch to prevent alarms from calling longjump out of main thread", "tags": [], "bug_id": 30627, "attachment_id": 12421, "count": 1, "id": 61957, "time": "2004-08-13T17:50:01Z", "creator": "jmurphy@buffalo.edu", "creation_time": "2004-08-13T17:50:01Z", "is_private": false}, {"count": 2, "tags": [], "creator": "jmurphy@buffalo.edu", "text": "Created attachment 12422\nignore previous patch file, this one is right", "id": 61958, "time": "2004-08-13T17:57:21Z", "bug_id": 30627, "creation_time": "2004-08-13T17:57:21Z", "is_private": false, "attachment_id": 12422}, {"count": 3, "tags": [], "bug_id": 30627, "attachment_id": null, "text": "As far as having the signal delivered on the wrong thread:\n\nThreaded plug-in modules need to block the asynchronous signals which Apache\nuses (SIGALRM, SIGTERM, SIGHUP, etc.) on threads they create in order to ensure\nthat the signals used by Apache are delivered on the thread which Apache knows\nabout -- the main thread.  That's a restriction on threaded modules for all the\nUnix-ish platforms.  (I can't comment on whether or not the alarm signal\nhappened to only be sent on the main thread prior to Solaris 9.  There's no\ncapability for the Apache parent process to pick a thread anyway.)\n\nAs far as fcntl returning an error:\n\nThere have been such failures for years with threaded plug-in modules on\nSolaris.  The recommendation is to switch to \"AcceptMutex sysvsem\", but note\nthat you'll need to bump up the number of kernel semaphore undo structures and\nreboot as the default Solaris sysdef on that is not sufficient for Apache.\n\nThe sysdef command displays the semaphore stuff.  You need an undo structure\n(SEMMNU) per possible Apache child process, as well as enough for all other\napplications on the system.  This is configured in the file /etc/system with\n\nset semsys:seminfo_semmnu=500     (or whatever; should be > MaxClients)", "id": 61960, "time": "2004-08-13T18:15:22Z", "creator": "trawick@apache.org", "creation_time": "2004-08-13T18:15:22Z", "is_private": false}]