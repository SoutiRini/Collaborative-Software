[{"count": 0, "tags": [], "text": "In a recent post on the Tomcat user forum, I discussed with Rainer Jung the need for a simple command line utility like wget that would allow me to make requests to the AJP connector in Tomcat.  This can be very useful when trying to troubleshoot a problem with the AJP connector, or could even be used to do some simple stress testing.  Rainer suggested I open an enhancement request here, so this is it.\n\nRainer's comment:\nCoud you please open an enhancement request in Bugzilla for this? There\nis some code floating around, which we might be able to bundle with the\nmod_jk source release. Not sure, how soon we would provide a windows\nbinary, but at least we should offer what we already have lying around.\n\nIt would definitely make sense to have an AJP commandline client to test\nconnectivity. \n\nFull text of the issue that led to this discussion can be found here:\nhttp://www.nabble.com/AJP-connections-just-stop-working-td1118618.html#a23669763\n\nThank you.\nKen Van Camp", "is_private": false, "bug_id": 47242, "id": 127281, "time": "2009-05-22T07:13:27Z", "creator": "ken.vancamp@andesaservices.com", "creation_time": "2009-05-22T07:13:27Z", "attachment_id": null}, {"count": 1, "tags": [], "creator": "sebb@apache.org", "attachment_id": null, "text": "Apache JMeter has an AJP/1.3 Sampler which uses the Tomcat mod_jk protocol, see:\n\nhttp://jakarta.apache.org/jmeter/usermanual/component_reference.html#HTTP_Request\n\nThat might perhaps be usable here?\n\nJMeter is obviously trickier to set up than a command-line utility, but it does offer stress tesing, and tests can be run without the GUI once set up.", "id": 127283, "time": "2009-05-22T07:31:20Z", "bug_id": 47242, "creation_time": "2009-05-22T07:31:20Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 47242, "text": "I think JMeter is definitely worth using for stress testing, but is overkill for what I need.  If, as Rainer suggests, there is already some code floating around that does what I need, I'd appreciate someone pointing me to it.  And it does seem like it's worth bundling into some future release (but obviously not a high priority).", "id": 127408, "time": "2009-05-26T06:51:14Z", "creator": "ken.vancamp@andesaservices.com", "creation_time": "2009-05-26T06:51:14Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "creator": "chamibuddhika@gmail.com", "attachment_id": null, "id": 134661, "time": "2010-02-18T15:36:16Z", "bug_id": 47242, "creation_time": "2010-02-18T15:36:16Z", "is_private": false, "text": "Any updates on this? I would like to have a look at this if this is required. But I would need some advice on AJP and the the use case requirements since I am relatively new to the project."}, {"count": 4, "tags": [], "bug_id": 47242, "attachment_id": null, "text": "I have not heard any updates, but I'll give you a little more detail on my use case: It is frequently useful to be able to test the health of a web server by making individual requests to it, for instance if receiving reports of server being unreachable.  We may also wish to institute automated health checks from a script or third-party software, and it is easy to do both over an HTTP connection because many tools exist.  Over AJP, however, this is not generally feasible.\n\nMy Tomcat web server is not on the Internet - it sits behind an IIS proxy server.  Users connect to the IIS proxy over HTTPS, and the proxy communicates to my Tomcat server over AJP.  When I get reports that my web server is unreachable via the proxy over HTTPS, my next step is to hit my Tomcat server over HTTP and verify that's working.  If Tomcat is working properly over HTTP, but the proxy is not responding over HTTPS, there are still a number of possible causes, including the proxy server itself, network connectivity between the proxy and Tomcat, and the AJP connections on Tomcat.  I currently have no way to directly test Tomcat over AJP - no simple tools exist that I know of.\n\nThere are many possible ways to fill this need - one way I've found useful, and fairly reusable, in the HTTP world is a simple command line tool like wget, which is a standard command-line utility in Linux.  It allows me to issue a simple GET request from the command line, or a script, which may be used to check the health of my web server, and may be automated.\n\nWget has a large number of command line options, but all of my use cases could be satisfied with probably just one of them: a timeout option so the request doesn't hang there forever if the server is unresponsive.  The only other parameter I need to give this wget-like AJP utility is the URL I'd like to hit on Tomcat.\n\nPlease let me know if you need any further clarification.  Thanks.\nKen", "id": 134676, "time": "2010-02-18T21:37:38Z", "creator": "ken.vancamp@andesaservices.com", "creation_time": "2010-02-18T21:37:38Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 47242, "attachment_id": null, "text": "(In reply to comment #3)\n> Any updates on this? I would like to have a look at this if this is required.\n> But I would need some advice on AJP and the the use case requirements since I\n> am relatively new to the project.\n\nAs the initial contributor to the JMeter AJP/1.3 Sampler (mentioned by Sebb), I would look there for a starting point.  That contains all of the Java code to create an AJP/1.3 client.\n\nPersonally, I prefer working with JMeter for this type of low-level connection analysis, but if you want to create a stand-alone version, knock yourself out.", "id": 134680, "time": "2010-02-19T04:56:29Z", "creator": "billbarker@apache.org", "creation_time": "2010-02-19T04:56:29Z", "is_private": false}, {"count": 6, "tags": [], "creator": "chamibuddhika@gmail.com", "attachment_id": null, "text": "(In reply to comment #5)\n\n> As the initial contributor to the JMeter AJP/1.3 Sampler (mentioned by Sebb), I\n> would look there for a starting point.  That contains all of the Java code to\n> create an AJP/1.3 client.\n> \n> Personally, I prefer working with JMeter for this type of low-level connection\n> analysis, but if you want to create a stand-alone version, knock yourself out.\n\nIf there is already some code lying around for this I also think it would be best to come up with some sort of a client with that as per this requirement rather than reinventing the wheel.I will keep in touch with any updates on Bill's findings. I am currently going through AJP protocol documentation to see how it works. Btw I just wanted to have an entry point for making some contributions for Tomcat project since I am new to the project. :-)", "id": 134687, "time": "2010-02-19T09:34:41Z", "bug_id": 47242, "creation_time": "2010-02-19T09:34:41Z", "is_private": false}, {"count": 7, "tags": [], "bug_id": 47242, "attachment_id": null, "id": 134724, "time": "2010-02-20T15:32:26Z", "creator": "rainer.jung@kippdata.de", "creation_time": "2010-02-20T15:32:26Z", "is_private": false, "text": "Go with the JMeter AJP client if you want to implement in Java. If you need or want to implement in C, there is also:\n\nhttp://svn.apache.org/viewvc/tomcat/archive/connectors/trunk/ajp/ajplib/\n\nRegards,\n\nRainer"}, {"count": 8, "tags": [], "creator": "chamibuddhika@gmail.com", "attachment_id": null, "text": "(In reply to comment #7)\n> Go with the JMeter AJP client if you want to implement in Java.\n\nI will look in that. Thanks for pointing that out.\n\nRegards", "id": 134743, "time": "2010-02-21T12:31:36Z", "bug_id": 47242, "creation_time": "2010-02-21T12:31:36Z", "is_private": false}, {"count": 9, "tags": [], "bug_id": 47242, "text": "Created attachment 25056\nAJP command line client\n\nHi all,\n\nI am attaching the initial version of the client that I have been working on. It is capable of fetching URLs specified on the command line and also is capable of reading a configuration file to get the URL details. But it's not very comprehensive and may have bugs. I would appreciate your suggestions on this.", "id": 134877, "time": "2010-02-25T03:23:26Z", "creator": "chamibuddhika@gmail.com", "creation_time": "2010-02-25T03:23:26Z", "is_private": false, "attachment_id": 25056}, {"count": 10, "tags": [], "bug_id": 47242, "text": "Hi Chamith, I downloaded your AJP client to give it a try.  It's not clear to me how to specify the URL for an AJP request.  As you can see below, I tried a few alternatives (even tried telling it to use HTTP just to get past the malformed URL exception) to no avail.  Can you provide a command-line example?  Thanks!\nKen\n\n$ java -jar ajpc.jar abeitmts1:9009/itm/\nException in thread \"main\" java.net.MalformedURLException: unknown protocol: abe\nitmts1\n        at java.net.URL.<init>(Unknown Source)\n        at java.net.URL.<init>(Unknown Source)\n        at java.net.URL.<init>(Unknown Source)\n        at org.apache.coyote.ajp.client.ClientContext.init(ClientContext.java:98\n)\n        at org.apache.coyote.ajp.client.AJPClient.init(AJPClient.java:200)\n        at org.apache.coyote.ajp.client.AJPClient.main(AJPClient.java:53)\n$ java -jar ajpc.jar ajp://abeitmts1:9009/itm/\nException in thread \"main\" java.net.MalformedURLException: unknown protocol: ajp\n\n        at java.net.URL.<init>(Unknown Source)\n        at java.net.URL.<init>(Unknown Source)\n        at java.net.URL.<init>(Unknown Source)\n        at org.apache.coyote.ajp.client.ClientContext.init(ClientContext.java:98\n)\n        at org.apache.coyote.ajp.client.AJPClient.init(AJPClient.java:200)\n        at org.apache.coyote.ajp.client.AJPClient.main(AJPClient.java:53)\n$ java -jar ajpc.jar http://abeitmts1:9009/itm/\nException in thread \"Thread-0\" java.lang.StringIndexOutOfBoundsException: String\n index out of range: 41082\n        at java.lang.String.checkBounds(Unknown Source)\n        at java.lang.String.<init>(Unknown Source)\n        at org.apache.coyote.ajp.client.AjpProcessor.getString(AjpProcessor.java\n:546)\n        at org.apache.coyote.ajp.client.AjpProcessor.parseHeaders(AjpProcessor.j\nava:482)\n        at org.apache.coyote.ajp.client.AjpProcessor.handshake(AjpProcessor.java\n:434)\n        at org.apache.coyote.ajp.client.AjpProcessor.execute(AjpProcessor.java:4\n21)\n        at org.apache.coyote.ajp.client.AjpProcessor.process(AjpProcessor.java:1\n04)\n        at org.apache.coyote.ajp.client.AjpProcessor.run(AjpProcessor.java:95)\n        at java.lang.Thread.run(Unknown Source)\n\n$", "id": 135061, "time": "2010-03-04T18:53:04Z", "creator": "ken.vancamp@andesaservices.com", "creation_time": "2010-03-04T18:53:04Z", "is_private": false, "attachment_id": null}, {"count": 11, "tags": [], "bug_id": 47242, "attachment_id": null, "is_private": false, "id": 135068, "time": "2010-03-05T02:08:14Z", "creator": "chamibuddhika@gmail.com", "creation_time": "2010-03-05T02:08:14Z", "text": "(In reply to comment #10)\n\nHi Ken,\n\nThe basic syntax currently is as follows.\n\njava -jar ajpc.jar -o=- http://localhost:8009/axis2\n \n-o switch with - tells to output to the console. \n8009 is the port Tomcat is listening for AJP connections.\n\nOutput should be some thing like this\n\nRun: 10/03/05 07:17:06\n\n|Connection     |StartTime           |TimedOut  |TimeElapsed(ms)|ReplyCode |URL                                                                        \n\n|0              |10/03/05 07:17:06   |false     |2              |302       |http://localhost:8009/axis2          \n\n\nI think first two exceptions you encountered are due to the fact that specifying URL differently. Currently you have to give the URL in full with the protocol (http) to make it work. Last one is bit strange because it seems to be a problem with protocol handling logic. I also came up with this error once during half way implementing the client. But it was random and only occured once and disappeared once I completed client in full. But anyway I will see in to that if you come across it again.\n\nBtw I guess 9009 is the port tomcat is listening for AJP connections. It has to be like that and not the normal http port for correct functioning for now. \n\nLet me know if you come across any issues again. Also you can get a some description of the switches by using -h switch on the command line.\n\nRegards,\nChamith"}, {"count": 12, "tags": [], "creator": "chamibuddhika@gmail.com", "attachment_id": 25106, "text": "Created attachment 25106\nAJP Client Bug Fix Version\n\nAfter some debugging I was able to fix the issue above mentioned by Ken. I am attaching new version with this. Any suggestions are welcome.", "id": 135177, "time": "2010-03-09T03:01:22Z", "bug_id": 47242, "creation_time": "2010-03-09T03:01:22Z", "is_private": false}, {"count": 13, "tags": [], "bug_id": 47242, "text": "Thanks Chamith for your prompt fixes!  Could you please attach your updated source code too?  Looks like your latest attachment is just the jar file.\nKen", "id": 135249, "time": "2010-03-10T18:14:47Z", "creator": "ken.vancamp@andesaservices.com", "creation_time": "2010-03-10T18:14:47Z", "is_private": false, "attachment_id": null}, {"count": 14, "tags": [], "bug_id": 47242, "attachment_id": 25118, "id": 135291, "time": "2010-03-12T02:36:23Z", "creator": "chamibuddhika@gmail.com", "creation_time": "2010-03-12T02:36:23Z", "is_private": false, "text": "Created attachment 25118\nAJPClient sources\n\nHi Ken,\n\nAttached you will find modified sources. I have been doing some changes lately but has not been incorporated to this as yet since I couldn't test the additions. Btw now no need to use -o switch explicitly since the by default it will output to the console."}, {"count": 15, "tags": [], "bug_id": 47242, "text": "Created attachment 25223\nAJPClient patch\n\nI have attached the related patch file. If possible some committer please have a look at it and make a comment. Anyway I am not sure where this should belong to in the code base if this is to be incorporated in to trunk subsequently.", "id": 135850, "time": "2010-04-02T10:01:00Z", "creator": "chamibuddhika@gmail.com", "creation_time": "2010-04-02T10:01:00Z", "is_private": false, "attachment_id": 25223}, {"count": 16, "tags": [], "bug_id": 47242, "attachment_id": null, "is_private": false, "id": 145230, "time": "2011-03-23T20:42:30Z", "creator": "rebeccah.h.prastein@questdiagnostics.com", "creation_time": "2011-03-23T20:42:30Z", "text": "Rainer, Chamith, any update on when this patch will be incorporated into JMeter?  As of JMeter 2.4, the header parsing exception mentioned in comment 6 is occurring in the AjpSampler, preventing me from doing the testing I want to do.  I logged Bug 50963 before I realized it was the same exception.\n\nThanks,\n\nRebeccah"}, {"count": 17, "attachment_id": null, "bug_id": 47242, "text": "(In reply to comment #16)\n> Rainer, Chamith, any update on when this patch will be incorporated into\n> JMeter?  As of JMeter 2.4, the header parsing exception mentioned in comment 6\n> is occurring in the AjpSampler, preventing me from doing the testing I want to\n> do.  I logged Bug 50963 before I realized it was the same exception.\n> \n> Thanks,\n> \n> Rebeccah\n\nOf the people that have replied here, I believe that only Sebb has karma to fix JMeter.  So you are better off posting to Bug 50963 to get JMeter fixed.", "id": 145232, "time": "2011-03-23T21:22:05Z", "creator": "billbarker@apache.org", "creation_time": "2011-03-23T21:22:05Z", "tags": [], "is_private": false}, {"count": 18, "tags": [], "text": "Bug 50963 has just been fixed.\n\nWhat I would like to see is an AJP client jar which includes methods for generating requests and parsing responses. Then JMeter and other applications can make use of the same code.\n\nDoes that sound reasonable? Any takers to define an API?", "is_private": false, "bug_id": 47242, "id": 145233, "time": "2011-03-23T21:54:49Z", "creator": "sebb@apache.org", "creation_time": "2011-03-23T21:54:49Z", "attachment_id": null}, {"count": 19, "tags": [], "text": "Moving to Tomcat 7 during review of Tomcat 6 bugs at Tomcat 6 EOL.\nPossible GSoC project?", "attachment_id": null, "id": 198170, "creator": "markt@apache.org", "time": "2017-04-05T09:38:21Z", "bug_id": 47242, "creation_time": "2017-04-05T09:38:21Z", "is_private": false}]