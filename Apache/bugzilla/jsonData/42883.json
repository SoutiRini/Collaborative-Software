[{"count": 0, "tags": [], "bug_id": 42883, "attachment_id": null, "is_private": false, "id": 105356, "time": "2007-07-12T20:04:48Z", "creator": "isurues@gmail.com", "creation_time": "2007-07-12T20:04:48Z", "text": "Normal Chainsaw log panels can be hidden or shown as the user needs. But this\nfeature is not working with 'Welcome' and 'Drag & Drop' panels. Hiding these\npanels also can be useful for some users to concentrate only one one panel."}, {"count": 1, "tags": [], "text": "Created attachment 20501\nAdding ability to hide 'Welcome' and 'Drag & Drop' panels\n\nThis patch contains the modifications in LogUI to hide and show 'Welcome' and\n'Drag & Drop' panels panels whenever needed.", "is_private": false, "id": 105357, "creator": "isurues@gmail.com", "time": "2007-07-12T20:09:13Z", "bug_id": 42883, "creation_time": "2007-07-12T20:09:13Z", "attachment_id": 20501}, {"count": 2, "tags": [], "bug_id": 42883, "attachment_id": 20502, "is_private": false, "id": 105358, "time": "2007-07-12T20:46:40Z", "creator": "isurues@gmail.com", "creation_time": "2007-07-12T20:46:40Z", "text": "Created attachment 20502\nNew version of the previous patch with no comments\n\nCommented lines are removed in this patch"}, {"count": 3, "tags": [], "bug_id": 42883, "attachment_id": null, "is_private": false, "id": 106575, "time": "2007-08-09T23:12:57Z", "creator": "sdeboy@iname.com", "creation_time": "2007-08-09T23:12:57Z", "text": "This patch has already been applied, but it would be nice if this feature could\nbe enhanced to remember if these tabs were hidden on app exit and hide them if\nappropriate (with menu options to view them again?)\n\nThis is also serving as a reminder to myself if you don't get to it."}, {"count": 4, "tags": [], "bug_id": 42883, "attachment_id": 20661, "id": 106751, "time": "2007-08-14T06:46:04Z", "creator": "isurues@gmail.com", "creation_time": "2007-08-14T06:46:04Z", "is_private": false, "text": "Created attachment 20661\nAdding ability to remember previous tab settings after restarts\n\nIn this patch, I have implemented the feature of saving the tab setting (what\nare hidden and what are shown) at closing and loading it back at restarting\nChainsaw. I used an XML file to save the setting. Methods to save and load this\nsetting is included in the \"ChainsawTabbedPane\" class. I wonder whether it is\nthe correct place to include that code. But I couldn't fine somewhere more\nsuitable.\nI have used a separate class called \"SavableTabSetting\" to represent the tab\nsetting that should saved. \"Welcome\", \"Drag & Drop\" and \"chainsaw-log\" are the\nmain log panels which are always running in Chainsaw. Existence of other log\npanels depends on the situation. For example, the user may load a receiver once\nand close Chainsaw and later restart and load some other receiver. I think\nsaving the state of such panels will be useless. So I have made Chainsaw\nremember only the state of the above mentioned main log panels.\nThere may be some adjustments to be done. Hope this will help as an initial\nwork to get the job done.So please check this and comment..."}, {"count": 5, "tags": [], "bug_id": 42883, "attachment_id": null, "is_private": false, "id": 106953, "time": "2007-08-20T18:24:25Z", "creator": "psmith@apache.org", "creation_time": "2007-08-20T18:24:25Z", "text": "\n\n1) SavableTabSetting - Can this be a normal Java bean with getters/settings? \nIt's stylistic, and I know this is a simple class but I'd prefer it with\ngetters/setters\n2) ChainsawTabbedPane - Can this implement the SettingsListener interface and\nuse the standard save/load call backs that provides?\n3) This patch might now be slightly out of date, it's not applying cleanly at\nall.  The LogUI file has 2 patch chunks that don't apply cleanly:\n\n\n@@ -2055,8 +2073,10 @@\n               if (\n                 getTabbedPane().getSelectedIndex() == getTabbedPane()\n                                                           .indexOfTab(ident)) {\n-                getTabbedPane().setIconAt(\n-                  getTabbedPane().indexOfTab(ident), SELECTED);\n+                if(getTabbedPane().indexOfTab(ident) > 0){\n+                  getTabbedPane().setIconAt(\n+                    getTabbedPane().indexOfTab(ident), SELECTED);\n+                }\n                 newEvents = false;\n                 seenEvents = true;\n               } else if (getTabbedPane().indexOfTab(ident) > -1) {\n\nand \n\n@@ -2094,7 +2114,7 @@\n \n     public void stateChanged(ChangeEvent event) {\n       if (\n-        getTabbedPane().indexOfTab(ident) == getTabbedPane().getSelectedIndex()) {\n+        getTabbedPane().indexOfTab(ident) == getTabbedPane().getSelectedIndex()\n&& getTabbedPane().indexOfTab(ident) > 0) {\n         getTabbedPane().setIconAt(getTabbedPane().indexOfTab(ident), SELECTED);\n       }\n     }\n\n\nI'm not really sure why.. Can you double check ?  Does it apply cleanly for you?"}, {"count": 6, "tags": [], "bug_id": 42883, "attachment_id": 20689, "is_private": false, "id": 107022, "time": "2007-08-22T04:36:11Z", "creator": "isurues@gmail.com", "creation_time": "2007-08-22T04:36:11Z", "text": "Created attachment 20689\nAdding ability to remember tab settings improved version\n\nThis patch includes all the improvements proposed by paul."}, {"count": 7, "tags": [], "bug_id": 42883, "attachment_id": null, "is_private": false, "id": 107023, "time": "2007-08-22T04:47:43Z", "creator": "isurues@gmail.com", "creation_time": "2007-08-22T04:47:43Z", "text": "(In reply to comment #5)\n> \n> 1) SavableTabSetting - Can this be a normal Java bean with getters/settings? \n> It's stylistic, and I know this is a simple class but I'd prefer it with\n> getters/setters\nOK. Done in the new patch...\n> 2) ChainsawTabbedPane - Can this implement the SettingsListener interface and\n> use the standard save/load call backs that provides?\nYes. Done in the new patch..\n> 3) This patch might now be slightly out of date, it's not applying cleanly at\n> all.  The LogUI file has 2 patch chunks that don't apply cleanly:\n> \n> \n> @@ -2055,8 +2073,10 @@\n>                if (\n>                  getTabbedPane().getSelectedIndex() == getTabbedPane()\n>                                                            .indexOfTab(ident)) {\n> -                getTabbedPane().setIconAt(\n> -                  getTabbedPane().indexOfTab(ident), SELECTED);\n> +                if(getTabbedPane().indexOfTab(ident) > 0){\n> +                  getTabbedPane().setIconAt(\n> +                    getTabbedPane().indexOfTab(ident), SELECTED);\n> +                }\n>                  newEvents = false;\n>                  seenEvents = true;\n>                } else if (getTabbedPane().indexOfTab(ident) > -1) {\n> \n> and \n> \n> @@ -2094,7 +2114,7 @@\n>  \n>      public void stateChanged(ChangeEvent event) {\n>        if (\n> -        getTabbedPane().indexOfTab(ident) ==\ngetTabbedPane().getSelectedIndex()) {\n> +        getTabbedPane().indexOfTab(ident) == getTabbedPane().getSelectedIndex()\n> && getTabbedPane().indexOfTab(ident) > 0) {\n>          getTabbedPane().setIconAt(getTabbedPane().indexOfTab(ident), SELECTED);\n>        }\n>      }\n> \n> \n> I'm not really sure why.. Can you double check ?  Does it apply cleanly for you?\n\nThere was a bug in those two statements and I had fixed it in the previous\npatch. But after that someone has committed that fix. So that why it was\nconflicting. These two statements are not included in the new patch as it is\nalready fixed.\nNew patch applies without any problem. Please check it...\n\n"}, {"count": 8, "tags": [], "bug_id": 42883, "attachment_id": null, "id": 107024, "time": "2007-08-22T04:50:14Z", "creator": "isurues@gmail.com", "creation_time": "2007-08-22T04:50:14Z", "is_private": false, "text": "(In reply to comment #5)\n> \n> 1) SavableTabSetting - Can this be a normal Java bean with getters/settings? \n> It's stylistic, and I know this is a simple class but I'd prefer it with\n> getters/setters\nOK. Done in the new patch...\n> 2) ChainsawTabbedPane - Can this implement the SettingsListener interface and\n> use the standard save/load call backs that provides?\nYes. Done in the new patch..\n> 3) This patch might now be slightly out of date, it's not applying cleanly at\n> all.  The LogUI file has 2 patch chunks that don't apply cleanly:\n> \n> \n> @@ -2055,8 +2073,10 @@\n>                if (\n>                  getTabbedPane().getSelectedIndex() == getTabbedPane()\n>                                                            .indexOfTab(ident)) {\n> -                getTabbedPane().setIconAt(\n> -                  getTabbedPane().indexOfTab(ident), SELECTED);\n> +                if(getTabbedPane().indexOfTab(ident) > 0){\n> +                  getTabbedPane().setIconAt(\n> +                    getTabbedPane().indexOfTab(ident), SELECTED);\n> +                }\n>                  newEvents = false;\n>                  seenEvents = true;\n>                } else if (getTabbedPane().indexOfTab(ident) > -1) {\n> \n> and \n> \n> @@ -2094,7 +2114,7 @@\n>  \n>      public void stateChanged(ChangeEvent event) {\n>        if (\n> -        getTabbedPane().indexOfTab(ident) ==\ngetTabbedPane().getSelectedIndex()) {\n> +        getTabbedPane().indexOfTab(ident) == getTabbedPane().getSelectedIndex()\n> && getTabbedPane().indexOfTab(ident) > 0) {\n>          getTabbedPane().setIconAt(getTabbedPane().indexOfTab(ident), SELECTED);\n>        }\n>      }\n> \n> \n> I'm not really sure why.. Can you double check ?  Does it apply cleanly for you?\n\nThere was a bug in those two statements and I had fixed it in the previous\npatch. But after that someone has committed that fix. So that why it was\nconflicting. These two statements are not included in the new patch as it is\nalready fixed.\nNew patch applies without any problem. Please check it...\n\n"}, {"count": 9, "tags": [], "bug_id": 42883, "attachment_id": null, "is_private": false, "id": 107130, "time": "2007-08-23T00:14:29Z", "creator": "psmith@apache.org", "creation_time": "2007-08-23T00:14:29Z", "text": "Fixed in revision 568858. THX"}, {"count": 10, "tags": [], "text": "I'm seeing quite weird behaviour with this feature now. It did look ok when I\ntested this yesterday but I tried the following:\n\n1) Start Chainsaw, run the tutorial and get the 3 tabs from the generators\n2) Hide all 3 of the generator tabs\n3) exit and restart Chainsaw\n5) Run the tutorial again with generators, they come back to life.\n\nSo, the restore logic does hide any hidden tab that appears at app startup time,\nbut does not hide any new tabs that turn up.\n", "attachment_id": null, "id": 107206, "creator": "psmith@apache.org", "time": "2007-08-23T16:36:55Z", "bug_id": 42883, "creation_time": "2007-08-23T16:36:55Z", "is_private": false}, {"count": 11, "tags": [], "bug_id": 42883, "attachment_id": null, "is_private": false, "id": 107210, "time": "2007-08-23T20:59:28Z", "creator": "isurues@gmail.com", "creation_time": "2007-08-23T20:59:28Z", "text": "(In reply to comment #10)\n> I'm seeing quite weird behaviour with this feature now. It did look ok when I\n> tested this yesterday but I tried the following:\n> 1) Start Chainsaw, run the tutorial and get the 3 tabs from the generators\n> 2) Hide all 3 of the generator tabs\n> 3) exit and restart Chainsaw\n> 5) Run the tutorial again with generators, they come back to life.\n> So, the restore logic does hide any hidden tab that appears at app startup \ntime,\n> but does not hide any new tabs that turn up.\nYes. I didn't try to save the configuration of tabs other than Welcome, Drag \nand Drop and chainsaw-log. This is because we don't know whether the user will \nstart exactly the same tabs when chainsaw is restarted. This was done as an \nintial step for this feature. We can work on saving any tab's setting in the \nfuture. But there will be some problems comming up. I'll try it..\n\n"}]