[{"count": 0, "tags": [], "bug_id": 26312, "attachment_id": null, "id": 50883, "time": "2004-01-21T15:43:48Z", "creator": "tmbg@mindspring.com", "creation_time": "2004-01-21T15:43:48Z", "is_private": false, "text": "Hello,\nI am attempting to concat a shell script and a tgz file but here is the \nproblem, the gzip file is corrupted after the concat (I have tested the gz file \nfrom before the concat it is fine. In particular when I do a od -x I see things \nlike an 8f -> 3f ... (many thousands like that) I am wondering if it may have \nto do w/ the encoding? \nHere is my concat block:\n\n      <concat destfile=\"${dist}/${websearch}_${version}.bin\">\n         <filelist dir=\"${dist}\" files=\"install.pl\"/>\n         <filelist dir=\"${dist}\" files=\"${websearch}.${version}.tar.gz\"/>\n      </concat>\n\nAm I missing something?"}, {"count": 1, "tags": [], "bug_id": 26312, "attachment_id": null, "is_private": false, "id": 50892, "time": "2004-01-21T16:04:01Z", "creator": "peter.reilly@corvil.com", "creation_time": "2004-01-21T16:04:01Z", "text": "Yep there is a problem with encoding. By default concat\nuses an output and inputstream reader using the default encoding\n(which I think is UTF-8) this does not work too good with\nbinary files.\n\nTry using:\n\n<concat destfile=\"${dist}/${websearch}_${version}.bin\" encoding=\"ISO-8859-1\">\n  <filelist dir=\"${dist}\" files=\"install.pl\"/>\n  <filelist dir=\"${dist}\" files=\"${websearch}.${version}.tar.gz\"/>\n</concat>\n\n"}, {"count": 2, "tags": [], "bug_id": 26312, "attachment_id": null, "id": 51000, "time": "2004-01-22T19:35:11Z", "creator": "peter.reilly@corvil.com", "creation_time": "2004-01-22T19:35:11Z", "is_private": false, "text": "Ping, did the suggestion work?"}, {"count": 3, "tags": [], "bug_id": 26312, "attachment_id": null, "id": 51051, "time": "2004-01-23T14:07:42Z", "creator": "tmbg@mindspring.com", "creation_time": "2004-01-23T14:07:42Z", "is_private": false, "text": "Yep, that put the files together right... \nJust curious, why didn't the UTF-8 work, if we decode-encode to the same, \nshouldn't it be the same?"}, {"count": 4, "tags": [], "text": "How to corrupt a non UTF8 file using UTF8:\n\nIf the first file (or any other non last file) doesn't originally end with a\nfull character and / or if the file contains characters that aren't most simply\nencoded according to UTF8 (and thus wrong).  These wrong characters could be\nhandled in two ways (a) replaced by U+FFFD to indicate wrong character or (b) be\nsimplified. For a truncated character who knows what happens, maybe padded with 0s?", "attachment_id": null, "id": 51101, "creator": "jkf@apache.org", "time": "2004-01-24T10:13:03Z", "bug_id": 26312, "creation_time": "2004-01-24T10:13:03Z", "is_private": false}, {"count": 5, "tags": [], "text": "Just tested with the following:\n    <scripttypedef name=\"encodedecode\" language=\"beanshell\">\n      package scriptpackages;\n      import java.io.*;\n      import org.apache.tools.ant.Task;\n      import org.apache.tools.ant.BuildException;\n      public class EncodeDecode extends Task {\n          private File source;\n          private File dest;\n          public void setSource(File source) {\n              this.source = source;\n          }\n          public void setDest(File dest) {\n              this.dest = dest;\n          }\n          public void execute() {\n              if (source == null || dest == null) {\n                  throw new BuildException(\"Missing source or dest\");\n              }\n              Writer writer = null;\n              Reader reader = null;\n              try {\n                  writer = new PrintWriter(\n                      new BufferedWriter(new FileWriter(dest)));\n                  reader = new BufferedReader(\n                      new FileReader(source));\n                  while (true) {\n                      int ch = reader.read();\n                      if (ch == -1) {\n                          break;\n                      }\n                      writer.write(ch);\n                  }\n              } catch (Exception ex) {\n                  throw new BuildException(\"exception\", ex);\n              } finally {\n                  try { writer.close();} catch (Throwable t) {}\n                  try { reader.close();} catch (Throwable t) {}\n              }\n          }\n      }\n    </scripttypedef>\n    <encodedecode source=\"${ant.home}/lib/ant.jar\"\n                  dest=\"x.jar\"/>\n\nThe input file is : 960963 bytes and the output file is 1628221.\nPs the default encodeing for readers may not be UTF-8, the doc only says that\nit is locale dependant.\n\n<copy> does not have this problem. It checks if thers are any filters or\nfilterchains and if not it uses InputStreams and OutputStreams and not\nReaders and Writers. It may be possible to do something similar with\nconcat.", "attachment_id": null, "id": 51455, "creator": "peter.reilly@corvil.com", "time": "2004-01-30T10:12:33Z", "bug_id": 26312, "creation_time": "2004-01-30T10:12:33Z", "is_private": false}, {"count": 6, "tags": [], "bug_id": 26312, "attachment_id": null, "id": 53258, "time": "2004-03-01T11:01:35Z", "creator": "gabriele.garuglieri@infoblu.it", "creation_time": "2004-03-01T11:01:35Z", "is_private": false, "text": "Just hit by the very same problem.\nI can confirm too that encoding=\"ISO-8859-1\" do works.\nI hope this is working consistently and is not dependent on data and that it\nwon't choke on some byte combinations, i'm using this method to deliver\nproduction packages.\nHi Peter, just coming from Bug 27226, nice to see you again :), can you confirm\nthe above? Thanks.\nRegards,  Gabriele"}, {"count": 7, "tags": [], "creator": "peter.reilly@corvil.com", "is_private": false, "id": 53260, "creation_time": "2004-03-01T11:17:59Z", "time": "2004-03-01T11:17:59Z", "bug_id": 26312, "text": "Hi Gabriele,\nI think (!) that the work-around works, I tried it with a small number\nof binary files.\n\nIt is on my to-do list to fix concat so that it operates in the\nsame way as <copy> - if there is no filters, or other modifiers, concat\nshould use Input/Output Stream rather than Reader/Writers.\n\nCheers, Peter", "attachment_id": null}, {"count": 8, "tags": [], "text": "Peter:\n  I have a ConcatFileInputStream that is constructed with a File[], then sends \nback the files' contents in order.  It was going to be a private inner class of \nRedirector for redirecting input from multiple files, but we could put in in \noata.util if you think it might help <concat>.\n\n-Matt", "attachment_id": null, "id": 53282, "creator": "mbenson@apache.org", "time": "2004-03-01T16:22:37Z", "bug_id": 26312, "creation_time": "2004-03-01T16:22:37Z", "is_private": false}, {"count": 9, "tags": [], "bug_id": 26312, "attachment_id": null, "is_private": false, "id": 58422, "time": "2004-05-31T08:35:09Z", "creator": "peter.reilly@corvil.com", "creation_time": "2004-05-31T08:35:09Z", "text": "Added a binary option to <concat>\nIt will be in ant 1.6.2.\n\nThe option is explicit rather than implicit, one needs to specify binary=yes\nfor concat to work in a binary fashion.\n\nHi Matt,\nWe could look at refactoring the code, the code\nfor concatenating the files in in Concat#binaryCat()\nPeter"}, {"count": 10, "tags": [], "text": "I'll try to have a look.", "attachment_id": null, "id": 58460, "creator": "mbenson@apache.org", "time": "2004-06-01T13:56:46Z", "bug_id": 26312, "creation_time": "2004-06-01T13:56:46Z", "is_private": false}]