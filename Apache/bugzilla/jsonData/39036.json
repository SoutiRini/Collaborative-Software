[{"count": 0, "tags": [], "text": "Using a large thread group I can consistently lock up jMeter while the Graph\nResults listener is active. Once the program locks I did a thread dump and every\nsampling thread is locked waiting to lock the GraphVisualizer object. The\nGraphVisualizer object is locked by a thread updating it and that thread is\nwaiting to lock a swing component which is locked by the AWT-Event thread. The\nthread dump is available here:\nhttps://mywebspace.wisc.edu/dalquist/web/jMeter/ThreadDump.txt and graph of the\nthreads & locks here: https://mywebspace.wisc.edu/dalquist/web/jMeter/locktree1.png", "is_private": false, "bug_id": 39036, "id": 87031, "time": "2006-03-20T15:51:33Z", "creator": "eric.dalquist@doit.wisc.edu", "creation_time": "2006-03-20T15:51:33Z", "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 39036, "text": "I can't reproduce this with 200 threads using the Java Sampler (the sampler \ntype should not affect the listeners).\n\nWhat type of system are you using? OS/Java?\n\nPlease can you attach a test case and jmeter.log output (obliterate any \nsensitive data first)", "id": 87040, "time": "2006-03-20T18:35:40Z", "creator": "sebb@apache.org", "creation_time": "2006-03-20T18:35:40Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 39036, "attachment_id": null, "id": 87043, "time": "2006-03-20T19:03:55Z", "creator": "eric.dalquist@doit.wisc.edu", "creation_time": "2006-03-20T19:03:55Z", "is_private": false, "text": "I just realized I could be seeing this more regularly since we are running\nJMeter on dual CPU or dual core CPU machines. All running Windows XP and JDK1.5\nI'll work on getting a test case & log up today."}, {"count": 3, "tags": [], "bug_id": 39036, "attachment_id": null, "is_private": false, "id": 87044, "time": "2006-03-20T19:14:37Z", "creator": "woolfel@yahoo.com", "creation_time": "2006-03-20T19:14:37Z", "text": "doh! if that's the case, then it would appear to be an issue with JDK1.5 on dual\ncore CPU's. I tried searching Sun's bugparade and didn't see any issues related\nto dual core.\n\npeter"}, {"count": 4, "attachment_id": null, "bug_id": 39036, "is_private": false, "id": 87064, "time": "2006-03-21T14:47:11Z", "creator": "sebb@apache.org", "creation_time": "2006-03-21T14:47:11Z", "tags": [], "text": "More likely a bug in JMeter which is exposed by the dual-core system.\n\nIt would be useful to know if the problem occurs with Java 1.4 as well - if \nthat is easy for you to test."}, {"count": 5, "tags": [], "bug_id": 39036, "attachment_id": null, "text": "Of course now I'm having problems reproducing the deadlock. I have made some\nmodifications to the test script I'm using. I'll see if I can find the one that\nwas causing the problem and reproduce it. As soon as I can I will also try to\nreproduce the problem on JDK1.4.\n\nAfter doing a bit more research I'm wondering if this is a JMeter issue or JDK\nissue. According to the JavaDocs the setText() method of JTextComponent is ok to\ncall from a worker thread and in the thread dump that is all that appears to be\nhappening.", "id": 87075, "time": "2006-03-21T18:45:39Z", "creator": "eric.dalquist@doit.wisc.edu", "creation_time": "2006-03-21T18:45:39Z", "is_private": false}, {"count": 6, "tags": [], "text": "Unless the problem can be reproduced, it's going to be impossible to fix", "attachment_id": null, "id": 126886, "creator": "sebb@apache.org", "time": "2009-05-08T18:10:59Z", "bug_id": 39036, "creation_time": "2009-05-08T18:10:59Z", "is_private": false}]