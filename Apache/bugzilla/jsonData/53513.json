[{"count": 0, "tags": [], "bug_id": 53513, "attachment_id": null, "id": 160469, "time": "2012-07-05T21:56:22Z", "creator": "djohle@industrialinfo.com", "creation_time": "2012-07-05T21:56:22Z", "is_private": false, "text": "My configuration:\n\n2 nodes running Tomcat 7.0.26\nUsing a custom session manager, which extends the DeltaManager\n\nMy startInternal() method first calls super.startInternal(), then performs a few additional initializations.\n\nI reviewed the code of DeltaManager.startInternal(), and it calls getAllClusterSessions() which in turn calls waitForSendAllSessions(), which requires either getStateTransfered() to return true, or a timeout.\n\nSo by this, I should be able to trust that as the second node starts, the initial sync up of all session data from the first node has completed prior to the startInternal() method exiting (and thus prior to my initializations).\n\nThis is, however, not the case!  I can confirm this by repeatedly logging the value of findSessions().length during my inializations, and see that number going up!\n\nThere appears to be a race condition between the processing of the message containing the actual session data & the \"transfer complete\" message.  After tracing this through a little further, I see the stateTransfered is set to true in the handleALL_SESSION_TRANSFERCOMPLETE() callback method.  And that callback is being called PRIOR to the session data itself even being received!\n\nHere is the debug logging output (slightly scrubbed) which shows this out of order messaging:\n\nJul 5, 2012 4:20:41 PM org.apache.catalina.ha.session.DeltaManager getAllClusterSessions\nINFO: Manager [wwwtest#], requesting session state from org.apache.catalina.tribes.membership.MemberImpl[...].\nThis operation will timeout if no session state has been received within 60 seconds.\n\nJul 5, 2012 4:20:41 PM org.apache.catalina.ha.session.DeltaManager messageReceived\nFINE: Manager [wwwtest#]: Received SessionMessage of type=(SESSION-STATE-TRANSFERED) from [org.apache.catalina.tribes.membership.MemberImpl[...]\n\nJul 5, 2012 4:20:41 PM org.apache.catalina.ha.session.DeltaManager handleALL_SESSION_TRANSFERCOMPLETE\nFINE: Manager [wwwtest#] received from node [[B@6789b939:4,000] session state transfered.\n\nJul 5, 2012 4:20:41 PM org.apache.catalina.ha.session.DeltaManager messageReceived\nFINE: Manager [wwwtest#]: Received SessionMessage of type=(ALL-SESSION-DATA) from [org.apache.catalina.tribes.membership.MemberImpl[...]\n\nJul 5, 2012 4:20:41 PM org.apache.catalina.ha.session.DeltaManager handleALL_SESSION_DATA\nFINE: Manager [wwwtest#]: received session state data"}, {"count": 1, "tags": [], "bug_id": 53513, "attachment_id": null, "id": 160470, "time": "2012-07-05T22:25:34Z", "creator": "djohle@industrialinfo.com", "creation_time": "2012-07-05T22:25:34Z", "is_private": false, "text": "In case it's helpful, here's the Cluster configuration...fairly basic stuff:\n\n\n        <Cluster className=\"org.apache.catalina.ha.tcp.SimpleTcpCluster\">\n          <Manager  className=\"my.deltamanager.extension.CustomManager\"\n            expireSessionsOnShutdown=\"false\"\n            notifyListenersOnReplication=\"true\"/>\n\n          <Channel className=\"org.apache.catalina.tribes.group.GroupChannel\">\n          \n            <Membership className=\"org.apache.catalina.tribes.membership.McastService\"\n                        address=\"239.1.1.1\"\n                        port=\"45564\"\n                        frequency=\"500\"\n                        dropTime=\"3000\"/>\n            <Receiver className=\"org.apache.catalina.tribes.transport.nio.NioReceiver\"\n                      address=\"auto\"\n                      port=\"4000\"\n                      autoBind=\"100\"\n                      selectorTimeout=\"5000\"\n                      maxThreads=\"6\"/>\n\n            <Sender className=\"org.apache.catalina.tribes.transport.ReplicationTransmitter\">\n              <Transport className=\"org.apache.catalina.tribes.transport.nio.PooledParallelSender\"/>\n            </Sender>\n\n            <Interceptor className=\"org.apache.catalina.tribes.group.interceptors.TcpFailureDetector\"/>\n\n            <Interceptor className=\"org.apache.catalina.tribes.group.interceptors.MessageDispatch15Interceptor\"/>\n\n          </Channel>\n\n          <Valve className=\"org.apache.catalina.ha.tcp.ReplicationValve\"\n                 filter=\"\\*\\.page\"/>\n          <Valve className=\"org.apache.catalina.ha.session.JvmRouteBinderValve\"/>\n\n          <ClusterListener className=\"org.apache.catalina.ha.session.JvmRouteSessionIDBinderListener\"/>\n          <ClusterListener className=\"org.apache.catalina.ha.session.ClusterSessionListener\"/>\n\n        </Cluster>"}, {"count": 2, "tags": [], "bug_id": 53513, "attachment_id": null, "id": 160521, "time": "2012-07-09T08:00:45Z", "creator": "kfujino@apache.org", "creation_time": "2012-07-09T08:00:45Z", "is_private": false, "text": "Thanks for the report.\n\nI think there is a problem with the behavior of the DeltaManager.\n\nAs you know, DeltaManager is responsible for synchronizing the session on startup.\nA node receiving the EVT_GET_ALL_SESSIONS message is to serialize all session, \nand then sends back a EVT_ALL_SESSION_DATA message.\nAfter completing  EVT_ALL_SESSION_DATA message, sends a EVT_ALL_SESSION_TRANSFERCOMPLETE message.\n\nAt this time, if channelSendOptions is asynchronous(default),\nEVT_ALL_SESSION_DATA message is sent asynchronously.\n\nAs a result, will be a race condition between the processing of the message containing \nthe actual session data and the \"transfer complete\" message.\n\nI'm going to fix this behavior.\nI intend to make EVT_ALL_SESSION_DATA message always send in synchronous mode.\n\nAnyway the current workaround is to set 6 (sync + ack) to channelSendOptions.\n\nBest Regards."}, {"count": 3, "tags": [], "bug_id": 53513, "is_private": false, "id": 160524, "attachment_id": null, "creator": "kfujino@apache.org", "creation_time": "2012-07-09T10:49:12Z", "time": "2012-07-09T10:49:12Z", "text": "Fixed in trunk and 7.0.x and will be included in 7.0.30 onwards.\nProposed for 6.0.x.\n\nNote:\nIn this fix, EVT_ALL_SESSION_DATA message is sent in synchronous mode. \nTherefore, it waits for completion of a the message till Sender#timeout (default 3000 milliseconds). \nWhen timeout occurs while sending the EVT_ALL_SESSION_DATA message, \nyou can configure following attributes. \nSender#timeout\nDeltaManager#sendAllSessions DeltaManager#sendAllSessionsSize \nDeltaManager#sendAllSessionsWaitTime"}, {"count": 4, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "text": "Moving to Tomcat 6 since it has been fixed in 7.", "id": 160592, "time": "2012-07-11T18:22:12Z", "bug_id": 53513, "creation_time": "2012-07-11T18:22:12Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 53513, "attachment_id": null, "id": 161754, "time": "2012-08-27T22:20:29Z", "creator": "markt@apache.org", "creation_time": "2012-08-27T22:20:29Z", "is_private": false, "text": "Fixed in 6.0.x and will be included in 6.0.36 onwards."}]