[{"count": 0, "tags": [], "text": "xmlsec-1.4.RC3 gives an NPE in IdResolver. xmlsec-1.4.beta2 did not do this.\n\n\njava.lang.NullPointerException\n\tat org.apache.xml.security.utils.IdResolver.isElement(IdResolver.java:237)\n\tat org.apache.xml.security.utils.IdResolver.getEl(IdResolver.java:198)\n\tat\norg.apache.xml.security.utils.IdResolver.getElementBySearching(IdResolver.java:176)\n\tat org.apache.xml.security.utils.IdResolver.getElementById(IdResolver.java:117)\n\tat\norg.apache.xml.security.utils.resolver.implementations.ResolverFragment.engineResolve(ResolverFragment.java:88)\n\tat\norg.apache.xml.security.utils.resolver.ResourceResolver.resolve(ResourceResolver.java:259)\n\tat\norg.apache.xml.security.signature.Reference.getContentsBeforeTransformation(Reference.java:400)\n\tat\norg.apache.xml.security.signature.Reference.dereferenceURIandPerformTransforms(Reference.java:612)\n\tat org.apache.xml.security.signature.Reference.calculateDigest(Reference.java:689)\n\tat\norg.apache.xml.security.signature.Reference.generateDigestValue(Reference.java:364)\n\tat\norg.apache.xml.security.signature.Manifest.generateDigestValues(Manifest.java:180)\n\tat org.apache.xml.security.signature.XMLSignature.sign(XMLSignature.java:491)", "attachment_id": null, "id": 95112, "creator": "info@frankcornelis.be", "time": "2006-10-26T06:36:10Z", "bug_id": 40819, "creation_time": "2006-10-26T06:36:10Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 40819, "attachment_id": null, "id": 95115, "time": "2006-10-26T06:56:12Z", "creator": "raul-info@r-bg.com", "creation_time": "2006-10-26T06:56:12Z", "is_private": false, "text": "Looks really bad,\nCan you send also the signature that is failing?\n\n\n"}, {"count": 2, "tags": [], "bug_id": 40819, "attachment_id": null, "id": 95122, "time": "2006-10-26T09:01:48Z", "creator": "info@frankcornelis.be", "creation_time": "2006-10-26T09:01:48Z", "is_private": false, "text": "It happens when I use the following during the construction of the DOM document\nthat I'm about to sign:\n   anElement.setAttribute(\"Id\", id);\ninstead of:\n   anElement.setAttributeNS(null, \"Id\", id);\nProbably my code should use the \"setAttributeNS(null\" setter???"}, {"count": 3, "tags": [], "text": "You must always use *NS methods, The non *NS methods should dia a horrible death.\n\nAlso the code that is throwing the exception has not changed so I suppose it\nalso happens in 1.4.beta2 and even 1.3.\n\nI can prevent the NPE but it will silently fail and will never find a element.\nThe only sensible thing is to throw an exception when localName  is null (i.e.\nhas be done with non NS member). \nThe problem is that then we should fill the code in several other parts with\nthis check, to be consistent.\n\n\nWhat do you all think?\n\nAnyway I downgrade the severity of the bug. ", "is_private": false, "id": 95127, "creator": "raul-info@r-bg.com", "time": "2006-10-26T11:26:23Z", "bug_id": 40819, "creation_time": "2006-10-26T11:26:23Z", "attachment_id": null}, {"count": 4, "tags": [], "text": "(In reply to comment #3)\n> You must always use *NS methods, The non *NS methods should dia a horrible \ndeath.\n> Also the code that is throwing the exception has not changed so I suppose it\n> also happens in 1.4.beta2 and even 1.3.\n> I can prevent the NPE but it will silently fail and will never find a element.\n> The only sensible thing is to throw an exception when localName  is null (i.e.\n> has be done with non NS member). \n> The problem is that then we should fill the code in several other parts with\n> this check, to be consistent.\n\nWhy don\u00b4t you use both Attr APIs (i.e. getLocalName and getName)? This way, if \ngetLocalName returns null for DOM1 cases or non qualified attributes, you could \nuse getName for backward compatibility.\n\nGreetings,\nJorge.\n> What do you all think?\n> Anyway I downgrade the severity of the bug. \n\n", "is_private": false, "id": 98965, "creator": "jorge.nevado@ericsson.com", "time": "2007-02-05T03:51:11Z", "bug_id": 40819, "creation_time": "2007-02-05T03:51:11Z", "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 40819, "attachment_id": null, "is_private": false, "id": 100182, "time": "2007-03-08T04:56:00Z", "creator": "zkovacevic@gmx.de", "creation_time": "2007-03-08T04:56:00Z", "text": "For DOM Level 1 *NS methods doesn't work.\n\nFor me I applied following fix:\nwas:\n String name=n.getLocalName();\n if (name.length()>2)\n\nnow:\nString name = n.getNodeName();\nint x = name.length()-Math.max(name.indexOf(':'), 0)-1;\nif (x>2)\n\n\n(In reply to comment #4)\n> (In reply to comment #3)\n> > You must always use *NS methods, The non *NS methods should dia a horrible \n> death.\n> > Also the code that is throwing the exception has not changed so I suppose it\n> > also happens in 1.4.beta2 and even 1.3.\n> > I can prevent the NPE but it will silently fail and will never find a element.\n> > The only sensible thing is to throw an exception when localName  is null (i.e.\n> > has be done with non NS member). \n> > The problem is that then we should fill the code in several other parts with\n> > this check, to be consistent.\n> \n> Why don\u00b4t you use both Attr APIs (i.e. getLocalName and getName)? This way, if \n> getLocalName returns null for DOM1 cases or non qualified attributes, you could \n> use getName for backward compatibility.\n> \n> Greetings,\n> Jorge.\n> > What do you all think?\n> > Anyway I downgrade the severity of the bug. \n> \n> \n\n"}, {"attachment_id": null, "tags": [], "bug_id": 40819, "is_private": false, "count": 6, "id": 100183, "time": "2007-03-08T05:24:39Z", "creator": "raul-info@r-bg.com", "creation_time": "2007-03-08T05:24:39Z", "text": "Sorry guys DOM level1 is a dinosaur that should rest in peace. Get better\nimplementations & use the newer api. If we patch to make it works here, you are\ngoing to have unreliable canonicalization because the process only use *NS methods.\n\nIs a known and reasonable limitation that we will not fix.\n\n\n\n"}, {"count": 7, "tags": [], "text": "Closing old bugs.", "attachment_id": null, "id": 108398, "creator": "sean.mullan@oracle.com", "time": "2007-09-19T12:20:49Z", "bug_id": 40819, "creation_time": "2007-09-19T12:20:49Z", "is_private": false}]