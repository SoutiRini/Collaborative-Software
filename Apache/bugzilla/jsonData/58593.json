[{"count": 0, "tags": [], "creator": "s.tabacchiera@gmail.com", "attachment_id": null, "id": 186287, "time": "2015-11-06T11:43:14Z", "bug_id": 58593, "creation_time": "2015-11-06T11:43:14Z", "is_private": false, "text": ""}, {"count": 1, "tags": [], "bug_id": 58593, "attachment_id": null, "id": 186288, "time": "2015-11-06T11:54:54Z", "creator": "ylavic.dev@gmail.com", "creation_time": "2015-11-06T11:54:54Z", "is_private": false, "text": "Wrong description often leads to wrong decision ;)"}, {"count": 2, "attachment_id": null, "bug_id": 58593, "text": "Hi Yann,\nnot sure if this is a bug, anyway I don't know how to handle this case.\n\nScenario:\nWe have to serve both http and ws requests under the same URI, through an apache reverse proxy.\n\nI thought this would work:\n<Location /ws/live/>\n    ### Settings for WebSocket\n    ProxyPass        ws://vip-be/wwgw/var/ disablereuse=on  timeout=30\n\n    ### Settings for HTTP\n    ProxyPass        http://vip-be/wwgw/var/ smax=0  ttl=15\n    ProxyPassReverse http://vip-be/wwgw/var/\n</Location> \n\nbut in case of websocket requests it seems mod_proxy always selects http handler, instead of ws, despite the right choice of scheme done by the core.\n\nHere are the logs:\n\n[core:debug]  protocol.c(1840): [client 172.26.130.177:59719] select protocol from , choices=websocket for server wstest\n[proxy:debug]  mod_proxy.c(1160): [client 172.26.130.177:59719] AH01143: Running scheme http handler (attempt 0)\n[proxy:debug]  proxy_util.c(2160): AH00942: HTTP: has acquired connection for (vip-be)\n[proxy:debug]  proxy_util.c(2213): [client 172.26.130.177:59719] AH00944: connecting http://vip-be/wwgw/var/5 to vip-be:80\n[proxy:debug]  proxy_util.c(2422): [client 172.26.130.177:59719] AH00947: connected /wwgw/var/5 to vip-be:80\n[proxy:debug]  proxy_util.c(2799): AH02824: HTTP: connection established with 172.26.110.165:80 (vip-be)\n[proxy:debug]  proxy_util.c(2965): AH00962: HTTP: connection complete to 172.26.110.165:80 (vip-be)\n[proxy:debug]  proxy_util.c(2175): AH00943: http: has released connection for (vip-be)\n\nAm I missing something or doing it wrong?\nThanks\n\nST", "id": 186290, "time": "2015-11-06T12:03:51Z", "creator": "s.tabacchiera@gmail.com", "creation_time": "2015-11-06T12:03:51Z", "tags": [], "is_private": false}, {"count": 3, "tags": [], "bug_id": 58593, "is_private": false, "id": 186655, "creation_time": "2015-11-30T09:48:30Z", "time": "2015-11-30T09:48:30Z", "creator": "s.tabacchiera@gmail.com", "text": "Sorry for bothering,\nany advice on this?\n\nThanks\nST", "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 58593, "is_private": false, "id": 186666, "creation_time": "2015-11-30T14:40:33Z", "time": "2015-11-30T14:40:33Z", "creator": "rpluem@apache.org", "text": "(In reply to Tabby from comment #2)\n> Hi Yann,\n> not sure if this is a bug, anyway I don't know how to handle this case.\n> \n> Scenario:\n> We have to serve both http and ws requests under the same URI, through an\n> apache reverse proxy.\n> \n> I thought this would work:\n> <Location /ws/live/>\n>     ### Settings for WebSocket\n>     ProxyPass        ws://vip-be/wwgw/var/ disablereuse=on  timeout=30\n> \n>     ### Settings for HTTP\n>     ProxyPass        http://vip-be/wwgw/var/ smax=0  ttl=15\n>     ProxyPassReverse http://vip-be/wwgw/var/\n> </Location> \n> \n\nThe configuration is wrong. You can only have one ProxyPass in a Location block. If you really need to serve normal HTTP requests and Websockets from the same URL you need to do some mod_rewrite magic looking for the Upgrade header.", "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 58593, "attachment_id": null, "id": 186667, "creation_time": "2015-11-30T15:15:47Z", "time": "2015-11-30T15:15:47Z", "creator": "s.tabacchiera@gmail.com", "text": "Hi,\nthat's exactly how I did as a workaround.\n---------------------------------------------------------------------------\n  RewriteEngine On\n\n  # default protocol = ws\n  RewriteRule ^(.*)$ - [env=proto:ws]\n\n  # if request is plain http, set protocol = http\n  RewriteCond %{HTTP:Upgrade} !websocket [NC]\n  RewriteRule ^ - [env=proto:http]\n\n  RewriteCond %{REQUEST_URI} ^/ws/live/ [NC]\n  RewriteRule ^/ws/live/(.*)  %{ENV:proto}://vip-be/wwgw/var/$1 [P,QSA,L]\n---------------------------------------------------------------------------\n\nAnyway, this way I'm forced to use mod_rewrite \"Proxy\" flag and this leads to performance penalties, 'cause it won't use backend connection pooling (default worker being used).\n\nIs should be really nice if I could use Env interpolation even in the scheme part of the URL (something like: ProxyPass  %{ENV:proto}://vip-be/wwgw/var/ ), but the doc states that isn't supported.\n\nSo, is there a better solution?\n\nThanks.\nST", "is_private": false}, {"count": 6, "tags": [], "bug_id": 58593, "is_private": false, "id": 186678, "creation_time": "2015-11-30T17:27:42Z", "time": "2015-11-30T17:27:42Z", "creator": "ylavic.dev@gmail.com", "text": "You could probably use something like:\n    <Proxy http://vip-be/wwgw/var/>\n        ....\n    </Proxy>\nin your configuration, so that this proxy http worker can be reused.", "attachment_id": null}, {"count": 7, "attachment_id": null, "bug_id": 58593, "is_private": false, "id": 186679, "time": "2015-11-30T17:31:46Z", "creator": "ylavic.dev@gmail.com", "creation_time": "2015-11-30T17:31:46Z", "tags": [], "text": "(In reply to Yann Ylavic from comment #6)\n> so that this proxy http worker can be reused.\n\nI meant connections for this worker can be reused (kept alive)..."}, {"count": 8, "tags": [], "bug_id": 58593, "is_private": false, "id": 186680, "attachment_id": 33314, "creator": "ylavic.dev@gmail.com", "creation_time": "2015-11-30T17:41:35Z", "time": "2015-11-30T17:41:35Z", "text": "Created attachment 33314\nmod_proxy_wstunnel fall through http\n\nPossibly a patch like this one could allow ProxyPass to either ws(s) or http(s) on the same URL, depending on the Upgrade header, but it is probably a hack :/\n\nWe'd rather use the new Protocols negotiation to enable/decline mod_proxy_wstunnel for a request, if that's possible/compatible."}, {"count": 9, "tags": [], "bug_id": 58593, "attachment_id": null, "text": "(In reply to Yann Ylavic from comment #8)\n> Created attachment 33314 [details]\n> mod_proxy_wstunnel fall through http\n> \n> Possibly a patch like this one could allow ProxyPass to either ws(s) or\n> http(s) on the same URL, depending on the Upgrade header, but it is probably\n> a hack :/\n> \n> We'd rather use the new Protocols negotiation to enable/decline\n> mod_proxy_wstunnel for a request, if that's possible/compatible.\n\nI vaguelly recall Jim trying something here for this requirement, but it was not a 100% match -- but the thread died.", "id": 186683, "time": "2015-11-30T18:01:30Z", "creator": "covener@gmail.com", "creation_time": "2015-11-30T18:01:30Z", "is_private": false}, {"count": 10, "tags": [], "bug_id": 58593, "is_private": false, "id": 186707, "creation_time": "2015-12-01T09:33:24Z", "time": "2015-12-01T09:33:24Z", "creator": "s.tabacchiera@gmail.com", "text": "Sorry, but I'm a bit confused.\nSince using the same URL for ws(s) and http(s) seems to be perfectly legal (although I'd always go with distinct URL patterns), I'm not sure about what you are suggesting to do.\n\nAt the moment, is there a valid alternative to this?\n---\nRewriteRule ^/ws/live/(.*)  %{ENV:proto}://vip-be/wwgw/var/$1 [P,QSA,L]\n<Proxy http://vip-be/wwgw/var>\n  ProxySet smax=0 ttl=15\n</Proxy>\n---\n\nFurthermore: is it necessary, in your opinion, to add a <Proxy> block also for ws, in order to keep its connection alive or is it worthless because of its long-living nature?\n\nThanks\nST", "attachment_id": null}, {"count": 11, "tags": [], "bug_id": 58593, "attachment_id": null, "id": 186713, "creation_time": "2015-12-01T12:46:48Z", "time": "2015-12-01T12:46:48Z", "creator": "ylavic.dev@gmail.com", "text": "(In reply to Tabby from comment #10)\n> \n> At the moment, is there a valid alternative to this?\n> ---\n> RewriteRule ^/ws/live/(.*)  %{ENV:proto}://vip-be/wwgw/var/$1 [P,QSA,L]\n> <Proxy http://vip-be/wwgw/var>\n>   ProxySet smax=0 ttl=15\n> </Proxy>\n> ---\n\nNo currently there isn't an alternative, mod_proxy can't work either ws: or http: on the same path.\n\nThe patch I proposed above may help though (not tested), maybe you could try it (instead of the RewriteRules, it should work without).\n\n> \n> Furthermore: is it necessary, in your opinion, to add a <Proxy> block also\n> for ws, in order to keep its connection alive or is it worthless because of\n> its long-living nature?\n\nOnce the connection is upgraded to websocket, it can't (and must not) be reused/kept-alive.\nmod_proxy_wstunnel takes care of that already, whatever is set for disablereuse (if the proxy worker is declared).", "is_private": false}, {"count": 12, "tags": [], "bug_id": 58593, "text": "(In reply to Yann Ylavic from comment #11)\n> \n> The patch I proposed above may help though (not tested), maybe you could try\n> it (instead of the RewriteRules, it should work without).\n\nPlease note that you may need to place \"ProxyPass ws://...\" before \"ProxyPass http://...\" for it to work.", "id": 186715, "time": "2015-12-01T13:36:36Z", "creator": "ylavic.dev@gmail.com", "creation_time": "2015-12-01T13:36:36Z", "is_private": false, "attachment_id": null}]