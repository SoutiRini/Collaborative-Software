[{"count": 0, "tags": [], "bug_id": 55225, "text": "Hi all,\n\nI'm facing a strange behavior of Launcher class. My application is calling ANT launcher programmatically in a new process.\n\nWhen I set classpath using the wildcard (something like folder/*), I received this error:\n\nBUILD FAILED\nD:\\JEM-runtime\\gfs\\output\\0000000000000000001-0000001373385349868\\jcl.xml:3: The following error occurred while executing this line:\njar:file:/D:/Git/jem_the_bee/JEM/lib/ant/ant.jar!/org/apache/tools/ant/antlib.xml:37: Could not create task or type of type: componentdef.\n\nBut if I set classpath with all files (something like folder/ant.jar), it works !\n\nIS there any restrictions to use classpath wildcard, avaialble in JDK 1.6?\n\nThanks a lot", "id": 168433, "time": "2013-07-09T20:20:34Z", "creator": "stocki.nail@gmail.com", "creation_time": "2013-07-09T20:20:34Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 55225, "is_private": false, "text": "The error you see typically comes up when an old version of Ant (likely 1.6.x) is used and finds a newer version of Ant on the classpath.  In most cases you do not want the 1.6.x version of Ant and have added it by to your classpath in front of the version you really want by accident.\n\nMy wild guess is that one of the jars you are adding via wildcard imports contains Ant 1.6.x (I know some jboss jars do) and you get that into your classpath first.  When you use explicit file names you get the version of Ant you want to use first and things work fine.  \"wild guess\"", "id": 171974, "time": "2013-12-31T10:23:10Z", "creator": "bodewig@apache.org", "creation_time": "2013-12-31T10:23:10Z", "attachment_id": null}]