[{"attachment_id": null, "tags": [], "bug_id": 4315, "is_private": false, "count": 0, "id": 6937, "time": "2001-10-21T07:00:57Z", "creator": "pr@webapp.de", "creation_time": "2001-10-21T07:00:57Z", "text": "I inserted weblogic.jar at WEB-INF/lib/ and than I get a\nException for usage InitialContext context = new InitialContext();\n(s. error message)\n\nBut I can access the weblogic ejb with\n\n>>>\nProperties props = new Properties() ;\n         props.put(Context.INITIAL_CONTEXT_FACTORY,\n                   \"weblogic.jndi.WLInitialContextFactory\");\n         props.put(Context.PROVIDER_URL,\n                   \"t3://127.0.0.1:7001\" );\n         Context   ctx = new InitialContext(props);\n\n<<<\nalso when I copy a correct jndi.properties to WEB-INF/classes/\nI got with InitialContext context = new InitialContext() the weblogic server.\n\nQuestion is:\nHow can I access the local Tomcat context also ?\nHow can I setup at server.xml remote ejb references ?\n\nThe current syntax is little bit strange:\n\n          <Ejb   name=\"ejb/Echo\" type=\"Session\"\n                 home=\"echo.EchoHome\"\n               remote=\"echo.Echo\" />\n\nOn which Server the EJB is located ?\n\n\nWhy we can't used the following example ?\n\n          <Ejb name=\"ejb/Echo\"\n               type=\"Session\"\n               home=\"echo.EchoHome\"\n               remote=\"echo.Echo\"\n               remote-jndi=\"echo.EchoHome\" \n \t       factory=\"weblogic.jndi.WLInitialContextFactory\"\n               factoryLocation=\"t3://127.0.0.1:7001\"\n               principal=\"system\"\n               credentials=\"weblogic\"\n/>\n\nAt Weblogic WEBAPP'S you can transfer with weblogic.xml from\nweb.xml ejb reference to concrete jndi lookups.\n\n----web.xml\n   <ejb-ref>\n      <description>Example EJB Reference</description>\n      <ejb-ref-name>ejb/Echo</ejb-ref-name>\n      <ejb-ref-type>Session</ejb-ref-type>\n      <home>echo.EchoHome</home>\n      <remote>echo.Echot</remote>\n    </ejb-ref>\n\n----weblogic.xml\n<weblogic-webapp>\n <reference-descriptor>\n    <ejb-reference-description>\n  \t<ejb-ref-name>ejb/Echo</ejb-ref-name>\n  \t<jndi-name>echo.EchoBean</jndi-name>\n    </ejb-reference-description>\n  </reference-descriptor>\n<weblogic-webapp>\n\n\nOr is the EJB Syntax only for J2EE 1.3 Reference Implementation usefull ?\n\nRegards,\nPeter\n\nError Message:\nApache Tomcat/4.0.1 - HTTP Status 500 - Internal Server Error\n\n--------------------------------------------------------------------------------\n\ntype Exception report\n\nmessage Internal Server Error\n\ndescription The server encountered an internal error (Internal Server Error) \nthat prevented it from fulfilling this request.\n\nexception \n\njavax.servlet.ServletException: Cannot instantiate class: \norg.apache.naming.java.javaURLContextFactory\n\tat AccessJndiServlet.init(AccessJndiServlet.java:26)\n\tat javax.servlet.GenericServlet.init(GenericServlet.java:258)\n\tat \norg.apache.catalina.core.StandardWrapper.load(StandardWrapper.java:852)\n\tat \norg.apache.catalina.core.StandardWrapper.allocate(StandardWrapper.java:615)\n\tat \norg.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:2\n14)\n\tat \norg.apache.catalina.core.StandardPipeline.invokeNext(StandardPipeline.java:566)\n\tat \norg.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:472)\n\tat org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:943)\n\tat \norg.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:2\n01)\n\tat \norg.apache.catalina.core.StandardPipeline.invokeNext(StandardPipeline.java:566)\n\tat \norg.apache.catalina.valves.CertificatesValve.invoke(CertificatesValve.java:246)\n\tat \norg.apache.catalina.core.StandardPipeline.invokeNext(StandardPipeline.java:564)\n\tat \norg.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:472)\n\tat org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:943)\n\tat \norg.apache.catalina.core.StandardContext.invoke(StandardContext.java:2344)\n\tat \norg.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:164)\n\tat \norg.apache.catalina.core.StandardPipeline.invokeNext(StandardPipeline.java:566)\n\tat \norg.apache.catalina.valves.ErrorDispatcherValve.invoke(ErrorDispatcherValve.java\n:170)\n\tat \norg.apache.catalina.core.StandardPipeline.invokeNext(StandardPipeline.java:564)\n\tat \norg.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:170)\n\tat \norg.apache.catalina.core.StandardPipeline.invokeNext(StandardPipeline.java:564)\n\tat \norg.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:462)\n\tat \norg.apache.catalina.core.StandardPipeline.invokeNext(StandardPipeline.java:564)\n\tat \norg.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:472)\n\tat org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:943)\n\tat \norg.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:163\n)\n\tat \norg.apache.catalina.core.StandardPipeline.invokeNext(StandardPipeline.java:566)\n\tat \norg.apache.catalina.valves.RequestDumperValve.invoke(RequestDumperValve.java:221\n)\n\tat \norg.apache.catalina.core.StandardPipeline.invokeNext(StandardPipeline.java:564)\n\tat \norg.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:472)\n\tat org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:943)\n\tat \norg.apache.catalina.connector.http.HttpProcessor.process(HttpProcessor.java:1011\n)\n\tat \norg.apache.catalina.connector.http.HttpProcessor.run(HttpProcessor.java:1106)\n\tat java.lang.Thread.run(Thread.java:484)\n\n\nroot cause \n\njavax.naming.NoInitialContextException: Cannot instantiate class: \norg.apache.naming.java.javaURLContextFactory.  Root exception is \njava.lang.ClassCastException: org.apache.naming.java.javaURLContextFactory\n\tat \njavax.naming.spi.NamingManager.getInitialContext(NamingManager.java:658)\n\tat \njavax.naming.InitialContext.getDefaultInitCtx(InitialContext.java:242)\n\tat javax.naming.InitialContext.init(InitialContext.java:218)\n\tat javax.naming.InitialContext.(InitialContext.java:174)\n\tat AccessJndiServlet.init(AccessJndiServlet.java:20)\n\tat javax.servlet.GenericServlet.init(GenericServlet.java:258)\n\tat \norg.apache.catalina.core.StandardWrapper.load(StandardWrapper.java:852)\n\tat \norg.apache.catalina.core.StandardWrapper.allocate(StandardWrapper.java:615)\n\tat \norg.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:2\n14)\n\tat \norg.apache.catalina.core.StandardPipeline.invokeNext(StandardPipeline.java:566)\n\tat \norg.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:472)\n\tat org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:943)\n\tat \norg.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:2\n01)\n\tat \norg.apache.catalina.core.StandardPipeline.invokeNext(StandardPipeline.java:566)\n\tat \norg.apache.catalina.valves.CertificatesValve.invoke(CertificatesValve.java:246)\n\tat \norg.apache.catalina.core.StandardPipeline.invokeNext(StandardPipeline.java:564)\n\tat \norg.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:472)\n\tat org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:943)\n\tat \norg.apache.catalina.core.StandardContext.invoke(StandardContext.java:2344)\n\tat \norg.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:164)\n\tat \norg.apache.catalina.core.StandardPipeline.invokeNext(StandardPipeline.java:566)\n\tat \norg.apache.catalina.valves.ErrorDispatcherValve.invoke(ErrorDispatcherValve.java\n:170)\n\tat \norg.apache.catalina.core.StandardPipeline.invokeNext(StandardPipeline.java:564)\n\tat \norg.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:170)\n\tat \norg.apache.catalina.core.StandardPipeline.invokeNext(StandardPipeline.java:564)\n\tat \norg.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:462)\n\tat \norg.apache.catalina.core.StandardPipeline.invokeNext(StandardPipeline.java:564)\n\tat \norg.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:472)\n\tat org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:943)\n\tat \norg.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:163\n)\n\tat \norg.apache.catalina.core.StandardPipeline.invokeNext(StandardPipeline.java:566)\n\tat \norg.apache.catalina.valves.RequestDumperValve.invoke(RequestDumperValve.java:221\n)\n\tat \norg.apache.catalina.core.StandardPipeline.invokeNext(StandardPipeline.java:564)\n\tat \norg.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:472)\n\tat org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:943)\n\tat \norg.apache.catalina.connector.http.HttpProcessor.process(HttpProcessor.java:1011\n)\n\tat \norg.apache.catalina.connector.http.HttpProcessor.run(HttpProcessor.java:1106)\n\tat java.lang.Thread.run(Thread.java:484)\n\n\n\n--------------------------------------------------------------------------------"}, {"count": 1, "tags": [], "creator": "remm@apache.org", "text": "Bug reports are not meant to replace tomcat-user. Please, don't ask questions \ninside a bug report, and it's always better to investigate an issue before \nfiling the bug.\n\nTo reference an EJB, use the ejb-link element, and set its value to the JNDI \nname in your external initial context (of course, you have to set the \nappropriate system properties in that case, as you did).\n\nIf you want to use only Weblogic's JNDI environment, use the '-nonaming' \ncommand line option. I would recommend doing that (it's simpler).\n\nThe exception may be caused because you have the JNDI base classes in /WEB-\nINF/lib (and they clash with the ones from the JDK).", "id": 6939, "time": "2001-10-21T12:08:56Z", "bug_id": 4315, "creation_time": "2001-10-21T12:08:56Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "text": "I thought about it more, and there could be another way to get a clean \nintegration, by using a custom object factory which would access the weblogic \nnaming context.\n\nYou can use the ResourceParams element in server.xml. More details:\nhttp://jakarta.apache.org/tomcat/tomcat-4.0-doc/jndi-resources-howto.html\nThe Reference object your factory will get will get all the parameters you \nspecified there.", "is_private": false, "bug_id": 4315, "id": 6942, "time": "2001-10-21T15:33:57Z", "creator": "remm@apache.org", "creation_time": "2001-10-21T15:33:57Z", "attachment_id": null}, {"count": 3, "tags": [], "text": "I read the tomcat-user problem also before wrote the bug report!\n\nI want show that we must change the server.xml <ejb> semantic's, to \naddress Servlet API conform ejb access. At my source code I don't directly\nreference the EJB JNDI names from Weblogic or JBoss. I want not used\nabsolute jndi names. The local names as java:/comp/env/ejb/Customer are\nbetter for portable code. \n\nBEA address this feature with the weblogic.xml mapping and I thing we\ncan do more with the <ejb> tag.\n\n          <Ejb name=\"ejb/Echo\"\n               type=\"Session\"\n               home=\"echo.EchoHome\"\n               remote=\"echo.Echo\"\n               remote-jndi=\"echo.EchoHome\" \n               factory=\"weblogic.jndi.WLInitialContextFactory\"\n               factoryLocation=\"t3://127.0.0.1:7001\"\n               principal=\"system\"\n               credentials=\"weblogic\"\n/>\n\nor for grouping \n   <ejb-context>\n        <factory>weblogic.jndi.WLInitialContextFactory</factory>\n        <location>t3://127.0.0.1:7001<location>\n        <param>\n           <param-name>principal<param-name>\n           <param-value>system<param-value>\n         </param>\n       <param>\n           <param-name>credentials<param-name>\n           <param-value>weblogic<param-value>\n       </param>\n       <ejb name=\"ejb/Echo\"\n               type=\"Session\"\n               home=\"echo.EchoHome\"\n               remote=\"echo.Echo\"\n               remote-jndi-name=\"echo.EchoHome\" \n       />\n  <ejb-context>\n\nI hope know is the bug or missing feature report clear.\n\nPeter\n", "is_private": false, "bug_id": 4315, "id": 6945, "time": "2001-10-21T15:52:23Z", "creator": "pr@webapp.de", "creation_time": "2001-10-21T15:52:23Z", "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 4315, "is_private": false, "text": "No, you can't add additional attributes to the Ejb element because of the way \nthe xml mapper / digester works. Instead, you can use the ResourceParams \nelement to specify the custom parameters of the Reference.\n(Then, of course, you need the custom object factory)\n\nThat's why I said it would probably be simpler to use the Weblogic naming \nenvironment (if possible).\n\nAlso, you could use:\n- specify the env properties for the Weblogic IC\n- use ejb-link:\n  <Ejb   name=\"ejb/Echo\" type=\"Session\"\n         home=\"echo.EchoHome\"\n         remote=\"echo.Echo\"\n         link=\"jndi_name_in_the_weblogic_context\" />\nThat's totally untested, but the factory should do a lookup on the JNDI name \nyou specify. You also have to put the Weblogic classes in the shared \nclassloader.\n", "id": 6946, "time": "2001-10-21T16:05:44Z", "creator": "remm@apache.org", "creation_time": "2001-10-21T16:05:44Z", "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 4315, "text": "I have no success with setup tomcat with weblogic jndi.\n\nI copy my weblogic.jar to WEB-INF/lib and setup a resource\n/WEB-INF/weblogic-jndi.properties to configure my remote\nejb access.\n\nHere my jsp access :\n\n>>>\n        Properties props = new Properties() ;\n         props.load(\n           application.getResourceAsStream(\"/WEB-INF/weblogic-jndi.properties\") \n) ;\n         \n         Context   ctx = new InitialContext(props);\n         EchoHome home =\n            (EchoHome) \njavax.rmi.PortableRemoteObject.narrow(ctx.lookup(\"echo.EchoHome\"),\n                 EchoHome.class);\n         Echo     echo = home.create();\n<<<\n\nBut with weblogic.jar I have no chance to accces Tomcat JNDI tree!\nThat is very bad. I want access some remote EJB and access JDBC datasources\ndirectly via tomcat.\n\n>>>\njavax.naming.NoInitialContextException: Cannot instantiate class: \norg.apache.naming.java.javaURLContextFactory.  Root exception is \njava.lang.ClassCastException: org.apache.naming.java.javaURLContextFactory\n\tat \njavax.naming.spi.NamingManager.getInitialContext(NamingManager.java:658)\n\tat \njavax.naming.InitialContext.getDefaultInitCtx(InitialContext.java:242)\n\tat javax.naming.InitialContext.init(InitialContext.java:218)\n\tat javax.naming.InitialContext.<init>(InitialContext.java:174)\n\tat \norg.apache.jsp.jdbc_0002daccess$jsp._jspService(jdbc_0002daccess$jsp.java:67)\n\tat org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:107)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:853)\n\tat \norg.apache.jasper.servlet.JspServlet$JspServletWrapper.service(JspServlet.java:2\n02)\n<<<\nHups!\n\nI thing the big weblogic.jar with all j2ee classes load some other\nclasses at the tomcat 4 distribution have at common/lib.\n\n...\n\n\nWhen have next week time, I working on spezial JNDI Resource factory\nor at night I made a spezial weblogic.jar without j2ee classes that included at \ntomcat.\n\nHelp are very welcome ??\n\nThanx,\nPeter\n", "id": 6965, "time": "2001-10-22T04:31:27Z", "creator": "pr@webapp.de", "creation_time": "2001-10-22T04:31:27Z", "is_private": false, "attachment_id": null}, {"count": 6, "tags": [], "text": "Hey,\n\nlong way, but I have strip down the bea weblogic.jar.\n\n  <target name=\"wlclient\" >\n     <mkdir dir=\"_weblogictemp\"/>\n     <exec executable=\"jar\" dir=\"_weblogictemp\" >\n        <arg value=\"-xf\" />\n        <arg value=\"${weblogic.home}/wlserver6.1/lib/weblogic.jar\" />\n        <arg value=\"javax/ejb\" />\n        <arg value=\"javax/management\" />\n        <arg value=\"javax/security\" />\n        <arg value=\"weblogic/common\" />\n        <arg value=\"weblogic/io/common\" />\n        <arg value=\"weblogic/jndi\" />\n        <arg value=\"weblogic/rmi\" />\n        <arg value=\"weblogic/utils\" />\n        <arg value=\"weblogic/security\" />\n        <arg value=\"weblogic/j2ee\" />\n        <arg value=\"weblogic/kernel\" />\n        <arg value=\"weblogic/rjvm\" />\n        <arg value=\"weblogic/socket\" />\n        <arg value=\"weblogic/servlet\" />\n        <arg value=\"weblogic/server\" />\n        <arg value=\"weblogic/server\" />\n        <arg value=\"weblogic/transaction\" />\n        <arg value=\"weblogic/net\" />\n        <arg value=\"weblogic/logging\" />\n        <arg value=\"weblogic/time\" />\n        <arg value=\"weblogic/t3\" />\n        <arg value=\"weblogic/i18n\" />\n        <arg value=\"weblogic/i18ntools\" />\n    </exec>\n    <jar jarfile=\"etc/lib/weblogic.jar\"\n       basedir=\"_weblogictemp\"\n       manifest=\"resource/WEBLOGIC-MANIFEST.MF\"\n    />\nmy manifest --resource/WEBLOGIC-MANIFEST.MF---\nManifest-version: 1.0\nImplementation-Vendor: BEA Systems\nImplementation-Title: WebLogic Server 6.1  07/23/2001 22:31:20 #129251 \nImplementation-Version: 6.1.0.0\n\n\nIt working.\n\nAccess jdbc orcale database with tomcat server.xml config and bea ejb's.\n\nPuuh.\nPeter\n\nyet both tomcat 4 jndi tree and the bea jndi ", "is_private": false, "bug_id": 4315, "id": 7011, "time": "2001-10-22T12:45:51Z", "creator": "pr@webapp.de", "creation_time": "2001-10-22T12:45:51Z", "attachment_id": null}, {"count": 7, "tags": [], "text": "Ok good. Did you want to put some additional comments (the last sentence looks \nincomplete) ?", "is_private": false, "bug_id": 4315, "id": 7012, "time": "2001-10-22T13:11:35Z", "creator": "remm@apache.org", "creation_time": "2001-10-22T13:11:35Z", "attachment_id": null}, {"count": 8, "attachment_id": null, "bug_id": 4315, "is_private": false, "id": 7073, "time": "2001-10-23T13:57:19Z", "creator": "pr@webapp.de", "creation_time": "2001-10-23T13:57:19Z", "tags": [], "text": "\nboth tomcat 4 jndi tree and the bea jndi working\nnow correct.\n\nYEEP!\n\n"}]