[{"count": 0, "tags": [], "creator": "awilkinson@pivotal.io", "attachment_id": null, "is_private": false, "id": 193834, "time": "2016-09-20T10:48:44Z", "bug_id": 60152, "creation_time": "2016-09-20T10:48:44Z", "text": "Currently, when a Connector fails to start, Tomcat logs the exception twice (once in the protocol and once in the service) and then swallows the exception. This isn't very friendly when embedding Tomcat as it means that handling of the exception and reporting it to the user is out of the embedder's control. We'd like a couple of things to be possible:\n\n1. Catching the exception that's thrown when the Connector is started.\n2. Tomcat not to log anything\n\nThis would allow an embedder to take complete control of how the problem is reported to a user.\n\nIn discussing this with Mark Thomas, one possibility that he raised was a Connector equivalent of failCtxIfServletStartFails that both StandardContext and StandardHost have today."}, {"attachment_id": null, "tags": [], "creator": "remm@apache.org", "text": "+1 for 1) if it's not too hard, however -1 for 2) (Tomcat logs errors and stuff pretty much everywhere, there's no switch for any of them, and it doesn't make sense; please adjust the logging configuration to use some custom logger of your own instead).", "count": 1, "id": 193835, "time": "2016-09-20T10:52:13Z", "bug_id": 60152, "creation_time": "2016-09-20T10:52:13Z", "is_private": false}, {"count": 2, "tags": [], "creator": "awilkinson@pivotal.io", "attachment_id": null, "is_private": false, "id": 193836, "time": "2016-09-20T11:19:38Z", "bug_id": 60152, "creation_time": "2016-09-20T11:19:38Z", "text": ">  and it doesn't make sense\n\nThe current behaviour makes sense given that Tomcat swallows the exception; otherwise, there'd be no way to see that a problem has occurred. If a change is made such that Tomcat can be configured to throw the exception, then I would argue that it no longer makes sense for Tomcat to also log the exception.\n\n> please adjust the logging configuration to use some custom logger of your own instead\n\nThat would only work if it's possible for a logger to distinguish between exceptions that Tomcat is going to swallow and those that it's also going to throw to be caught by embedding code."}, {"count": 3, "tags": [], "bug_id": 60152, "attachment_id": null, "id": 193837, "time": "2016-09-20T11:39:43Z", "creator": "remm@apache.org", "creation_time": "2016-09-20T11:39:43Z", "is_private": false, "text": "Ok so basically Tomcat needs to remove all logging I suppose. Nice. I don't think all the necessary information to produce the best logging is contained in the exception, also.\nEx: How do I know if it's a bind exception or a SSL configuration error ? Your solution: dump the exception to the user and he'll figure it out.\nSo -1, sorry, you'll have to figure things out at the logging layer, even if you don't like it."}, {"count": 4, "tags": [], "bug_id": 60152, "attachment_id": null, "text": "(Calm down, R\u00e9my.)\n\nI think the proper way to handle this is for Tomcat to change the way the exceptions are handled, here. Instead of introducing a new option (c.f. failCtxIfServletStartFails), why not just move the exception-handling to one layer higher than an embedded controller would see?\n\nThat way, standalone Tomcat can still catch and log the exceptions which is appropriate, and embedded controllers can do whatever they like.", "id": 193849, "time": "2016-09-20T18:46:39Z", "creator": "chris@christopherschultz.net", "creation_time": "2016-09-20T18:46:39Z", "is_private": false}, {"attachment_id": null, "tags": [], "creator": "markt@apache.org", "text": "The complication - and I need to dig through the archives to find the details - is that there was a requirement that Tomcat started even if a connector failed.\n\nWhat we have here is two requirements for exactly opposite behavior. I suspect configuration will have to be part of the solution but if someone can find a way to do this without a new option, great.", "count": 5, "id": 193850, "time": "2016-09-20T18:52:04Z", "bug_id": 60152, "creation_time": "2016-09-20T18:52:04Z", "is_private": false}, {"count": 6, "tags": [], "creator": "chris@christopherschultz.net", "attachment_id": null, "is_private": false, "id": 193852, "time": "2016-09-20T19:08:40Z", "bug_id": 60152, "creation_time": "2016-09-20T19:08:40Z", "text": "(In reply to Mark Thomas from comment #5)\n> The complication - and I need to dig through the archives to find the\n> details - is that there was a requirement that Tomcat started even if a\n> connector failed.\n\nI apologize as I'm ignorant of the code in question, but isn't Tomcat's bootstrap process circumvented by an embedded controller? In that case, Tomcat can just try/catch around the Connector.start() calls and log there, no?\n\n> What we have here is two requirements for exactly opposite behavior. I\n> suspect configuration will have to be part of the solution but if someone\n> can find a way to do this without a new option, great.\n\nIt's ugly, but we could also have a callback-registration that would indicate errors for certain components that failed to start. Post-start, the embedded controller could take remunerative action."}, {"attachment_id": null, "tags": [], "creator": "markt@apache.org", "text": "The current behaviour derives to bug 49030 and r752323.\n\nI'm still looking at options for implementing this but it does look like it is going to involve some form of new configuration option.", "count": 7, "id": 194054, "time": "2016-09-28T12:22:29Z", "bug_id": 60152, "creation_time": "2016-09-28T12:22:29Z", "is_private": false}, {"attachment_id": null, "tags": [], "creator": "markt@apache.org", "text": "Fixed in 9.0.x for 9.0.12 onwards.", "count": 8, "id": 194204, "time": "2016-10-07T14:39:57Z", "bug_id": 60152, "creation_time": "2016-10-07T14:39:57Z", "is_private": false}]