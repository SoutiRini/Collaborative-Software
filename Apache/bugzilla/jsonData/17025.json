[{"count": 0, "tags": [], "bug_id": 17025, "text": "I have noticed a condition that apparently prevent an Ajp13Processor\nfrom handling additional requests. \n\nThe server environment includes:\n\n        4 webservers running iWS 6.0 SP5 and configured to use the\n        iWS ajp connector\n\n        3 tomcat servers, tomcat 4.0.4, tomcat servers are set for\n        max AjpProcessors of 512 each.\n\n        The iWS servers load balance across all three tomcat servers.\n\nOccasionally in the catalina_log.*.txt files, I would notice \nIllegalArgumentExceptions like this:\n\n2003-02-07 12:12:30 Ajp13Processor[8009][3] process: invoke\njava.lang.IllegalArgumentException: Cookie name EXPIRES is a reserved token\n\tat javax.servlet.http.Cookie.<init>(Cookie.java:185)\n\tat org.apache.ajp.tomcat4.Ajp13Request.addCookies(Ajp13Request.java:189)\n\tat org.apache.ajp.tomcat4.Ajp13Request.setAjpRequest(Ajp13Request.java:148)\n\tat org.apache.ajp.tomcat4.Ajp13Processor.process(Ajp13Processor.java:446)\n\tat org.apache.ajp.tomcat4.Ajp13Processor.run(Ajp13Processor.java:551)\n\tat java.lang.Thread.run(Thread.java:479)\nls\n\nUsually followed pretty closely by a new Ajp13Processor being created:\n\n2003-02-07 13:04:19 Ajp13Processor[8009][8] Starting background thread\n\nThis would happen even on the weekends when I know the traffic is so\nmuch lower that the existing number of Ajp13Processors should handle\nthe load just fine.\n\nI turned Ajp13Connector debugging on at one point to get a better handle\non how things are behaving. What I noticed is once an Ajp13Processor\nhas errored like the above, although it would reset itself, there\nwas never any more log entries showing it accepting and procssing \nrequests.\n\nFurther, when I shut down any of the three tomcat servers, I would \nimmediately see in the catalina_log.*.txt files of the other two server\nthat additional Ajp13Connectors were being created *and* they immediately\nspeq the IllegalArgumentException.\n\nIt would seem that although the Ajp13Connector things it has reset \nitself, it hasn't let the web server on the other side of the connection\nknow about this, assuming the Ajp13Connector just hasn't replied yet.\n\nNote bug 5181 and bug 7177 may be related issues.", "id": 31174, "time": "2003-02-12T21:31:33Z", "creator": "mock-apache@misfit.dhs.org", "creation_time": "2003-02-12T21:31:33Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 17025, "attachment_id": null, "id": 35346, "time": "2003-04-16T15:39:33Z", "creator": "remm@apache.org", "creation_time": "2003-04-16T15:39:33Z", "is_private": false, "text": "The old AJP connector is now deprecated. Use Coyote JK 2 (the Java side of JK 2;\nyou can still use mod_jk on the native side) if you have a problem."}, {"count": 2, "tags": [], "bug_id": 17025, "text": "This bug in Ajp13 was fixed in January.\nYou can either upgrade to Tomcat 4.1.24 or try upgrading the jar which\ncontains Ajp13 in your tomcat 4.0 install with the server/lib/tomcat-jk.jar\nwhich comes with Tomcat 4.1.24.", "id": 35405, "time": "2003-04-17T11:29:10Z", "creator": "glenn@apache.org", "creation_time": "2003-04-17T11:29:10Z", "is_private": false, "attachment_id": null}]