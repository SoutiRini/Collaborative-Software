[{"attachment_id": null, "tags": [], "bug_id": 14261, "is_private": false, "count": 0, "id": 25701, "time": "2002-11-05T17:01:34Z", "creator": "mmangino@acm.org", "creation_time": "2002-11-05T17:01:34Z", "text": "I followed the direction on the site http://jakarta.apache.org/tomcat/tomcat-\n4.1-doc/jndi-datasource-examples-howto.html and I am unable to get a connection \nto the datasource. I put code in the commons-dbcp code to print what is \nhappening: On startup, I see that all of the values are set and a datasource is \ncreated. When I call lookup in my servlet, I see that only the following \nRefAddr's are passed in. \n\nType: description\nContent: Storms Connection\n\nType: scope\nContent: Shareable\n\nType: auth\nContent: Container\n\nThis means that no values are set in the BasicDataSource class, and when I call \ngetConnection, it throws an error because driverClassName is null. \n\nI am specifying the datasource in the global naming section of server.xml, and \nam requesting it in a self deploying web application."}, {"count": 1, "tags": [], "bug_id": 14261, "is_private": false, "text": "Created attachment 3726\nServer.xml file", "id": 25702, "time": "2002-11-05T17:04:48Z", "creator": "mmangino@acm.org", "creation_time": "2002-11-05T17:04:48Z", "attachment_id": 3726}, {"count": 2, "tags": [], "creator": "mmangino@acm.org", "attachment_id": 3727, "is_private": false, "id": 25703, "time": "2002-11-05T17:05:31Z", "bug_id": 14261, "creation_time": "2002-11-05T17:05:31Z", "text": "Created attachment 3727\nweb.xml file for servlet"}, {"count": 3, "tags": [], "bug_id": 14261, "text": "Created attachment 3728\nJava code that includes jndi lookup", "id": 25705, "time": "2002-11-05T17:06:21Z", "creator": "mmangino@acm.org", "creation_time": "2002-11-05T17:06:21Z", "is_private": false, "attachment_id": 3728}, {"attachment_id": null, "tags": [], "bug_id": 14261, "is_private": false, "count": 4, "id": 25707, "time": "2002-11-05T17:53:25Z", "creator": "mmangino@acm.org", "creation_time": "2002-11-05T17:53:25Z", "text": "I also tried the testing 4.1.14 release, this doesn't seem to fix the problem."}, {"count": 5, "text": "*** Bug 14275 has been marked as a duplicate of this bug. ***", "bug_id": 14261, "is_private": false, "id": 25814, "time": "2002-11-06T19:53:59Z", "creator": "remm@apache.org", "creation_time": "2002-11-06T19:53:59Z", "tags": [], "attachment_id": null}, {"count": 6, "tags": [], "bug_id": 14261, "is_private": false, "text": "I see no ResourceLink definition for your context. I don't see how this can work.", "id": 25817, "time": "2002-11-06T20:16:44Z", "creator": "remm@apache.org", "creation_time": "2002-11-06T20:16:44Z", "attachment_id": null}, {"attachment_id": 3761, "tags": [], "bug_id": 14261, "is_private": false, "count": 7, "id": 25821, "time": "2002-11-06T20:27:40Z", "creator": "mmangino@acm.org", "creation_time": "2002-11-06T20:27:40Z", "text": "Created attachment 3761\nupdated server.xml with resource link"}, {"count": 8, "text": "I just uploaded a new server.xml file that shows my attempt at using a resource \nlink. I have tried several different names in the global resource. It must be \nfinding the basics, as I get a message from the BasicDataSource. The parameters \nit is sent just appear to be the ones for the resource-ref. Can somebody give \nme an example of a working data source?", "bug_id": 14261, "is_private": false, "id": 25822, "time": "2002-11-06T20:29:33Z", "creator": "mmangino@acm.org", "creation_time": "2002-11-06T20:29:33Z", "tags": [], "attachment_id": null}, {"count": 9, "tags": [], "creator": "pkrishna@learnframe.com", "attachment_id": null, "text": "Is this problem resolved? Could you give an example of what the Context \nattributes should be and where in the server.xml should this Context section go.", "id": 25881, "time": "2002-11-07T18:26:56Z", "bug_id": 14261, "creation_time": "2002-11-07T18:26:56Z", "is_private": false}, {"count": 10, "tags": [], "creator": "mmangino@acm.org", "attachment_id": null, "text": "I have the configuration information in the Global naming section. Upon \nstartup, I see the following RefAddrs passed in to the BasicDataSourceFactory \ncode:\n\nINFO: Initializing Coyote HTTP/1.1 on port 9080\nIn code!\nType: scope\nContent: Shareable\n\nType: auth\nContent: Container\n\nType: url\nContent: jdbc:oracle:thin:@east2:1521:DWMSDEV\n\nType: maxIdle\nContent: 2\n\nType: maxActive\nContent: 5\n\nType: maxWait\nContent: -1\n\nType: driverClassName\nContent: oracle.jdbc.driver.OracleDriver\n\nType: removeAbandoned\nContent: true\n\nType: username\nContent: s154480\n\nType: factory\nContent: org.apache.commons.dbcp.BasicDataSourceFactory\n\nType: logAbandoned\nContent: true\n\nType: password\nContent: mjm2278\n\nra=Type: driverClassName\nContent: oracle.jdbc.driver.OracleDriver\n\n\n\nThe following entry is from within the BasicDataSource code.\nDriverClassName=oracle.jdbc.driver.OracleDriver\n\n\nWhen I actually visit the first page that uses the data source, I see the \nBasicDataSourceFactory called with the following refaddrs:\n\nIn code!\nType: description\nContent: Storms Connection\n\nType: scope\nContent: Shareable\n\nType: auth\nContent: Application\n\n\nThis last line shows that BasicDataSource does not get the DriverClass, because \nthere is no refaddr for that parameter. Essentially, when the application tries \nto use the datasource, it can't find the object that was already created, and \nthe BasicDataSourceFactory does not get the parameters specified in the global \nnaming section, so the BasicDataSource that is created is unusable. \n\nI find quite a few references to this problem on the web. It appears to be \nsomewhat common.\n\nI am willing to help debug in any way I can. This has pretty much stopped my \ndevelopment. \n\nMike\nra=null\n", "id": 25883, "time": "2002-11-07T19:10:45Z", "bug_id": 14261, "creation_time": "2002-11-07T19:10:45Z", "is_private": false}, {"count": 11, "tags": [], "creator": "drobert@bfm.bm", "attachment_id": null, "is_private": false, "id": 28942, "time": "2003-01-07T14:36:19Z", "bug_id": 14261, "creation_time": "2003-01-07T14:36:19Z", "text": "This bug seems to be due to the fact that the JNDI resource config is located in\nthe GlobalNamingResources. When the data source config is put in the Context, it\nseems to work. I haven't had a chance to check the source code, but I suspect\nthere is something amiss in the global resource configs."}, {"count": 12, "tags": [], "bug_id": 14261, "text": "I've run into this with the MySQL Driver. I've noticed that the members:\nurl, username, password, driverClassName are set to null. I will be more than \nhappy to test any suggestions, as this is a show stopper. \n\n", "id": 30453, "time": "2003-02-01T00:18:18Z", "creator": "steven.fines@cotelligent.com", "creation_time": "2003-02-01T00:18:18Z", "is_private": false, "attachment_id": null}, {"count": 13, "tags": [], "bug_id": 14261, "text": "I have run into something what seems like this bug as well. I have a DataSource\nwith a selfwritten JNDI ObjectFactory configured in the DefaultContext:\n\n<DefaultContext>\n  <Resource auth=\"Container\" name=\"jdbc/TCDB\" scope=\"Shareable\"\n     type=\"de.cegedim.iss.tyrex.OracleXAConnectionCacheTyrexImpl\"/>\n  <ResourceParams name=\"jdbc/TCDB\">\n    <parameter>\n      <name>factory</name>\n      <value>de.cegedim.iss.naming.OracleConnectionCacheFactory</value>\n    </parameter>\n    ...\n  </ResourceParams>\n</DefaultContext>\n\nI have a ServletContextListener registered. In the #contextInitialized method\nand during Servlet#init the DataSource returned if of type BasicDataSource and\nthe driverName is null.\n\nBut when the first request comes, everything works as intended. A JNDI Lookup\nreturns a OracleXAConnectionCacheTyrexImpl.\n\nwhen I put the same Resource definition into a <Context> tag for a single\nwebapplication, it does work even in the\nServletContextListener#contextInitialized method. It seems like the binding of\nGlobal Resources to the context happens to late.", "id": 30723, "time": "2003-02-05T11:15:19Z", "creator": "ole@sugarshark.com", "creation_time": "2003-02-05T11:15:19Z", "is_private": false, "attachment_id": null}, {"count": 14, "tags": [], "creator": "remm@apache.org", "attachment_id": null, "is_private": false, "id": 30729, "time": "2003-02-05T11:44:20Z", "bug_id": 14261, "creation_time": "2003-02-05T11:44:20Z", "text": "No, you are confusing diffrent things. Using the default context is mostly the\nsame as defining a data source in each context (= it is not global). Due to\nlimitations in the default context model, I don't think this can be made to work\nin your situation, and you should use the global resources instead (I improved\nit as much as I could)."}, {"attachment_id": null, "tags": [], "bug_id": 14261, "text": "I came to use the default context because I could not get the global resources\nto work. It does work with a standard DataSource but not with my special one. \nIt's probably a classloading problem, as the classes for the Datasource and the\nfactory are located within the webapplication war. (wild guess :-).\n\nThe point is, that using the DefaultContext is apparently only _mostly_ the same\nas defining resources in every context. It _does_ work if you define them in\nevery context.\n", "count": 15, "id": 30737, "time": "2003-02-05T13:03:39Z", "creator": "ole@sugarshark.com", "creation_time": "2003-02-05T13:03:39Z", "is_private": false}, {"count": 16, "tags": [], "bug_id": 14261, "text": "Yes, as global resources classes are resolved in the server classloader\n(otherwise, they would be local), they would need to be located in common/lib or\ncommon/classes.", "id": 30739, "time": "2003-02-05T13:14:51Z", "creator": "remm@apache.org", "creation_time": "2003-02-05T13:14:51Z", "is_private": false, "attachment_id": null}]