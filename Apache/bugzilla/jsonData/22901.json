[{"count": 0, "tags": [], "bug_id": 22901, "attachment_id": null, "id": 43646, "time": "2003-09-02T22:25:34Z", "creator": "alexeys@inventigo.com", "creation_time": "2003-09-02T22:25:34Z", "is_private": false, "text": "The patch adds '-only' option to be able to execute target(s) without their dependencies."}, {"count": 1, "tags": [], "creator": "alexeys@inventigo.com", "attachment_id": 8043, "text": "Created attachment 8043\npatch file", "id": 43647, "time": "2003-09-02T22:26:11Z", "bug_id": 22901, "creation_time": "2003-09-02T22:26:11Z", "is_private": false}, {"count": 2, "tags": [], "creator": "mbenson@apache.org", "is_private": false, "text": "Solution:  implement org.apache.tools.ant.Executor:\n\n    public void executeTargets(Project project, String[] targetNames)\n        throws BuildException {\n        Hashtable targets = project.getTargets();\n        for (int i = 0; i < targetNames.length; i++) {\n            ((Target)(targets.get(targetNames[i])).performTasks();\n        }\n    }\n", "id": 67243, "time": "2004-11-19T18:29:36Z", "bug_id": 22901, "creation_time": "2004-11-19T18:29:36Z", "attachment_id": null}, {"count": 3, "tags": [], "creator": "alexeys@inventigo.com", "is_private": false, "text": "While trying to port old feature into new ANT I found that one cannot set \"only\" executor during ANT startup - \n\"only\" executor cannot be inherited, because inner <ant>, <antcall>, and Co \nshould work with full dependencies execution. This still requires a special mode\nof execution. The patch is obsolete, but I can produce a new one.", "id": 69144, "time": "2005-01-03T10:21:09Z", "bug_id": 22901, "creation_time": "2005-01-03T10:21:09Z", "attachment_id": null}, {"count": 4, "tags": [], "text": "The Ant task and its derivatives use the SingleCheckExecutor for simplicity's\nsake because it gives all the behavior they need.  Adding the ability to specify\na particular Executor would not be that difficult but it doesn't seem like much\nmore than clutter, really.  In this particular instance, it strikes me as odd\nthat you want/need to execute a target without its dependencies.  If so, why do\nyou have the dependencies?  Ordinarily you declare dependencies and the tasks\ndecide whether they have any work to do, so that your build incurs as little\nwork as possible.  If you have two tasks and sometimes you want to execute one\nbased on the other you could impose that structure with helper targets.  It\nsounds as though restructuring your buildfiles could be immensely helpful.", "is_private": false, "bug_id": 22901, "id": 69162, "time": "2005-01-03T17:24:08Z", "creator": "mbenson@apache.org", "creation_time": "2005-01-03T17:24:08Z", "attachment_id": null}, {"count": 5, "tags": [], "text": "Executors should be inherited from the parent ANT by default. If one wants\nto use a parallel executor, subants should use it too. Plus they should use\nthe same executor instance to have a single thread pool to enforce thread number\nlimitation across all subants.", "is_private": false, "id": 69171, "creator": "alexeys@inventigo.com", "time": "2005-01-03T18:34:50Z", "bug_id": 22901, "creation_time": "2005-01-03T18:34:50Z", "attachment_id": null}, {"count": 6, "tags": [], "text": "Interesting argument.  I will have a look at that.", "is_private": false, "bug_id": 22901, "id": 69176, "time": "2005-01-03T19:13:44Z", "creator": "mbenson@apache.org", "creation_time": "2005-01-03T19:13:44Z", "attachment_id": null}, {"count": 7, "tags": [], "text": "A big problem here, again, is the fact the sensible way to process multiple\ntargets specified via nested elements on a single ant(call) invocation is with\nsingle-check execution; otherwise multiple tasks could be used.  Ordinarily,\nthen, you have default target execution for the main Project and single-check\nexecution for ant(call)-based Project instances.  The parallel case and its\nthreadcount limitations is a good one; executor inheritance would definitely be\nuseful here, but we end up with this conflict.  At this point the only\ncompromise I see is to inherit the executor, with the rule being that nested\ntargets will cause a single-check executor to be used in place of a default\nexecutor; or a new keep-going/single-check executor to be used in place of a\nkeep-going executor; but no other combination of circumstances will result in\nsuch a substitution.", "is_private": false, "bug_id": 22901, "id": 69183, "time": "2005-01-03T19:32:56Z", "creator": "mbenson@apache.org", "creation_time": "2005-01-03T19:32:56Z", "attachment_id": null}, {"count": 8, "tags": [], "bug_id": 22901, "is_private": false, "id": 69192, "attachment_id": null, "creator": "alexeys@inventigo.com", "creation_time": "2005-01-04T05:42:38Z", "time": "2005-01-04T05:42:38Z", "text": "I think something like\n\nExecutor getChildExecutor()\n\nwill solve this problem."}, {"attachment_id": 13904, "tags": [], "bug_id": 22901, "is_private": false, "count": 9, "id": 69261, "time": "2005-01-06T05:47:21Z", "creator": "alexeys@inventigo.com", "creation_time": "2005-01-06T05:47:21Z", "text": "Created attachment 13904\nproposed patch"}, {"count": 10, "tags": [], "text": "Created attachment 13905\nOnlyExecutor.java", "attachment_id": 13905, "bug_id": 22901, "id": 69262, "time": "2005-01-06T05:48:57Z", "creator": "alexeys@inventigo.com", "creation_time": "2005-01-06T05:48:57Z", "is_private": false}, {"count": 11, "tags": [], "creator": "alexeys@inventigo.com", "is_private": false, "text": "This is the patch that uses Executor.getChildExecutor() method.", "id": 69263, "time": "2005-01-06T05:49:36Z", "bug_id": 22901, "creation_time": "2005-01-06T05:49:36Z", "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 22901, "is_private": false, "count": 12, "id": 72025, "time": "2005-03-08T23:53:44Z", "creator": "mbenson@apache.org", "creation_time": "2005-03-08T23:53:44Z", "text": "Hmm.. I didn't see where you were going with the childExecutor before, but I\njust looked at this again and I don't hate it.  After 1.6.3 comes out I don't\nwant to alter the Executor interface unless I have to so I will be thinking\nabout this.\n\nMaybe when (if) we start doing Ant libraries there could be an executor library;\notherwise I don't necessarily want to get into adding a million of them to core.\n But would OnlyExecutor not want to return itself as a child?  If I add the\nchild I will probably do an AbstractExecutor with a default getChildExecutor()\n{return this;} and make all existing Executors inherit from that.  Then I'd\nprobably add an executor attribute to the Ant task as well."}, {"count": 13, "tags": [], "text": "I would expect inner <ant>s to be executed fully, only the first level targets should be executed without dependencies.", "attachment_id": null, "id": 72028, "creator": "alexeys@inventigo.com", "time": "2005-03-09T00:54:40Z", "bug_id": 22901, "creation_time": "2005-03-09T00:54:40Z", "is_private": false}]