[{"count": 0, "tags": [], "bug_id": 56525, "is_private": false, "text": "NOTE: Haven't tested against newest version (or maybe I did but can't recall), but couldn't find anything in changelog to indicate it's been fixed.\n\nProblem:\nXSSFSheet.getColumnStyle behaves differently than the corresponding method on HSSFSheet & what the API doc for Sheet says it should do.\n\n\nThe javadoc for org.apache.poi.ss.usermodel.Sheet states for getColumnStyle(int):\n\n\"Returns the CellStyle that applies to the given (0 based) column, or null if no style has been set for that column\"\n\nFor XSSFSheet, however, if no cell style has been set for the column, then a new style is created and returned.\nHSSFSheet conforms to the API doc, whereas XSSFSheet does not.\n\nReasoning/Why this causes problems:\nEssentially, I want to use a Excel file as a \"template\" (though not a xlt/xltx, just a normal xls/xlsx) and write to a new spreadsheet, just taking the formatting from the template. If the \"template\" spreadsheet contains cell formatting, I want to preserve that formatting. In order to do this, I need to check if there is a style applied on the existing cell, then row, then column - although I guess the row then column ordering doesn't matter.\nAccording to the API, I should just be able to check if, in the template, the \"template\"'s Sheet.getColumnStyle(col) returns null.\nHowever if it came from an XLSX format, then the XSSFSheet will always return a style, which I then have to compare against what is returned from Workbook.createCellStyle to see if this is different from the default before working out if there really was a cell style applied for this column.\n\nAlso, it just breaks the API contract doesn't it?", "id": 175217, "time": "2014-05-14T17:32:01Z", "creator": "tmeagher@lavastorm.com", "creation_time": "2014-05-14T17:32:01Z", "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 56525, "is_private": false, "text": "*** Bug 56524 has been marked as a duplicate of this bug. ***", "id": 175219, "time": "2014-05-14T17:37:32Z", "creator": "tmeagher@lavastorm.com", "creation_time": "2014-05-14T17:37:32Z", "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 56525, "text": "Correct. XSSFSheet#getColumnStyle returns the default column style rather than returning null.\nAs a workaround, you could check of the index of the returned style == 0. Unfortunately, there is a setDefaultColumnStyle method in the Sheet interface but not a getDefaultColumnStyle method (though ColumnHelper offers something similar). Furthermore, I'm unsure if XSSFSheet.getColumnStyle on an unstyled column returns the correct default column style after setDefaultColumnStyle has been called.\n\n\n> /**\n>  * Returns the CellStyle that applies to the given\n>  *  (0 based) column, or null if no style has been\n>  *  set for that column\n>  */\n> @Override\n> public CellStyle getColumnStyle(int column) {\n>     int idx = columnHelper.getColDefaultStyle(column);\n>     return getWorkbook().getCellStyleAt((short)(idx == -1 ? 0 : idx));\n> }\n\n> /**\n>  * Returns the HSSFCellStyle that applies to the given\n>  * (0 based) column, or null if no style has been\n>  * set for that column\n>  */\n> @Override\n> public HSSFCellStyle getColumnStyle(int column) {\n>     short styleIndex = _sheet.getXFIndexForColAt((short) column);\n> \n>     if (styleIndex == 0xf) {\n>         // None set\n>         return null;\n>     }\n> \n>     ExtendedFormatRecord xf = _book.getExFormatAt(styleIndex);\n>     return new HSSFCellStyle(styleIndex, xf, _book);\n> }", "id": 194505, "time": "2016-10-18T16:35:52Z", "creator": "onealj@apache.org", "creation_time": "2016-10-18T16:35:52Z", "is_private": false, "attachment_id": null}, {"count": 3, "attachment_id": 34385, "creator": "onealj@apache.org", "is_private": false, "id": 194506, "time": "2016-10-18T16:38:57Z", "bug_id": 56525, "creation_time": "2016-10-18T16:38:57Z", "tags": [], "text": "Created attachment 34385\nFix XSSFSheet.getColumnStyle to abide to javadoc"}, {"count": 4, "tags": [], "bug_id": 56525, "is_private": false, "text": "Created attachment 34389\nFix XSSFSheet.getColumnStyle to abide to javadoc\n\nI'm a bit hesitant to commit this because it does change the current behavior, even if it is inconsistent with the javadoc and with HSSF.", "id": 194537, "time": "2016-10-19T07:26:50Z", "creator": "onealj@apache.org", "creation_time": "2016-10-19T07:26:50Z", "attachment_id": 34389}]