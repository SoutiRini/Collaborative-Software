[{"count": 0, "tags": [], "bug_id": 42690, "attachment_id": null, "text": "When the following configuration is set in httpd.conf file:\n\n<Directory \"/var/www/webapps/*/cgi-bin\">\n        AllowOverride None\n        Order allow,deny\n        Allow from all\n        AuthType Digest\n        AuthDigestDomain /var/www/webapps/*/cgi-bin/\n        AuthName My_Realm\n        AuthUserFile /etc/apache/.htdigest\n        AuthGroupFile /etc/apache/.htgroups\n        Require group users\n    </Directory>\n\n    <Directory \"/var/www/webapps/admin/cgi-bin\">\n        AuthDigestDomain /admin/cgi-bin/\n        Require group admins\n    </Directory>\n\n\"Segmentation fault (11)\" is logged in Apache error log because realm (AuthName)\nfor /var/www/webapps/admin/cgi-bin directory is not initialized.\nWhen AuthDigestDomain directive is not set for this directory then Apache work\ncorrectly. Here is gdb output:\n\n# gdb httpd -d /source/\nGNU gdb 5.2.1\nCopyright 2002 Free Software Foundation, Inc.\nGDB is free software, covered by the GNU General Public License, and you are\nwelcome to change it and/or distribute copies of it under certain conditions.\nType \"show copying\" to see the conditions.\nThere is absolutely no warranty for GDB.  Type \"show warranty\" for details.\nThis GDB was configured as \"powerpc-hardhat-linux\"...\n(gdb) b create_digest_dir_config\nBreakpoint 1 at 0x10051998: file mod_auth_digest.c, line 405.\n(gdb) b set_uri_list\nBreakpoint 2 at 0x100521d0: file mod_auth_digest.c, line 581.\n(gdb) b set_realm\nBreakpoint 3 at 0x10051a88: file mod_auth_digest.c, line 423.\n(gdb) b authenticate_digest_user\nBreakpoint 4 at 0x10054be0: file mod_auth_digest.c, line 1594.\n(gdb) run -X  -f /etc/apache/httpd.conf\nStarting program: /usr/sbin/httpd -X  -f /etc/apache/httpd.conf\n\nBreakpoint 1, create_digest_dir_config (p=0x10114968, dir=0x0) at\nmod_auth_digest.c:405\n405         if (dir == NULL) {\n(gdb) c\nContinuing.\n\nBreakpoint 1, create_digest_dir_config (p=0x10114968, dir=0x101ab0e8\n\"/var/www/webapps/*/cgi-bin/\") at mod_auth_digest.c:405\n405         if (dir == NULL) {\n(gdb) c\nContinuing.\n\nBreakpoint 2, set_uri_list (cmd=0x7ffffcf0, config=0x101ab498, uri=0x101ab550\n\"/var/www/webapps/*/cgi-bin/\") at mod_auth_digest.c:581\n581         digest_config_rec *c = (digest_config_rec *) config;\n(gdb) c\nContinuing.\n\nBreakpoint 3, set_realm (cmd=0x7ffffcf0, config=0x101ab498, realm=0x101ab5a8\n\"My_Realm\") at mod_auth_digest.c:423\n423         digest_config_rec *conf = (digest_config_rec *) config;\n(gdb) c\nContinuing.\n\nBreakpoint 1, create_digest_dir_config (p=0x10114968, dir=0x101ab9d0\n\"/var/www/webapps/admin/cgi-bin/\") at mod_auth_digest.c:405\n405         if (dir == NULL) {\n(gdb) c\nContinuing.\n\nBreakpoint 2, set_uri_list (cmd=0x7ffffcf0, config=0x101abba8, uri=0x101abc60\n\"/admin/cgi-bin/\") at mod_auth_digest.c:581\n581         digest_config_rec *c = (digest_config_rec *) config;\n(gdb) c\nContinuing.\nDetaching after fork from child process 3115.\ncDetaching after fork from child process 3117.\n\nBreakpoint 1, create_digest_dir_config (p=0x10114968, dir=0x0) at\nmod_auth_digest.c:405\n405         if (dir == NULL) {\n(gdb) c\nContinuing.\n\nBreakpoint 1, create_digest_dir_config (p=0x10114968, dir=0x1018f510\n\"/var/www/webapps/*/cgi-bin/\") at mod_auth_digest.c:405\n405         if (dir == NULL) {\n(gdb) c\nContinuing.\n\nBreakpoint 2, set_uri_list (cmd=0x7ffffcf0, config=0x1018f8a8, uri=0x1018f960\n\"/var/www/webapps/*/cgi-bin/\") at mod_auth_digest.c:581\n581         digest_config_rec *c = (digest_config_rec *) config;\n(gdb) c\nContinuing.\n\nBreakpoint 3, set_realm (cmd=0x7ffffcf0, config=0x1018f8a8, realm=0x1018f9b8\n\"My_Realm\") at mod_auth_digest.c:423\n423         digest_config_rec *conf = (digest_config_rec *) config;\n(gdb) c\nContinuing.\n\nBreakpoint 1, create_digest_dir_config (p=0x10114968, dir=0x101af8f0\n\"/var/www/webapps/admin/cgi-bin/\") at mod_auth_digest.c:405\n405         if (dir == NULL) {\n(gdb) c\nContinuing.\n\nBreakpoint 2, set_uri_list (cmd=0x7ffffcf0, config=0x101afac8, uri=0x101afb80\n\"/admin/cgi-bin/\") at mod_auth_digest.c:581\n581         digest_config_rec *c = (digest_config_rec *) config;\n(gdb) c\nContinuing.\nDetaching after fork from child process 3119.\nDetaching after fork from child process 3121.\n\nBreakpoint 4, authenticate_digest_user (r=0x10214d30) at mod_auth_digest.c:1594\n1594        if (!(t = ap_auth_type(r)) || strcasecmp(t, \"Digest\")) {\n(gdb) n\n1598        if (!ap_auth_name(r)) {\n(gdb) n\n1607        mainreq = r;\n(gdb) n\n1608        while (mainreq->main != NULL) {\n(gdb) n\n1611        while (mainreq->prev != NULL) {\n(gdb) n\n1614        resp = (digest_header_rec *)\nap_get_module_config(mainreq->request_config,\n(gdb) n\n1616        resp->needed_auth = 1;\n(gdb) n\n1621        conf = (digest_config_rec *) ap_get_module_config(r->per_dir_config,\n(gdb) n\n1627        if (resp->auth_hdr_sts != VALID) {\n(gdb) n\n1644        r->user         = (char *) resp->username;\n(gdb) n\n1645        r->ap_auth_type = (char *) \"Digest\";\n(gdb) n\n1649        if (strcmp(resp->uri, resp->raw_request_uri)) {\n(gdb) n\n1737        if (resp->opaque && resp->opaque_num == 0) {\n(gdb) n\n1745        if (strcmp(resp->realm, conf->realm)) {\n(gdb) p conf->realm\n$1 = 0x0\n(gdb) n\n\nProgram received signal SIGSEGV, Segmentation fault.\n0x0fb0aba4 in strcmp () from /lib/libc.so.6\n(gdb) where\n#0  0x0fb0aba4 in strcmp () from /lib/libc.so.6\n#1  0x10055204 in authenticate_digest_user (r=0x10214d30) at mod_auth_digest.c:1745\n#2  0x100363f0 in ap_run_check_user_id (r=0x10214d30) at request.c:71\n#3  0x1003751c in ap_process_request_internal (r=0x10214d30) at request.c:194\n#4  0x10087eb0 in ap_process_request (r=0x10214d30) at http_request.c:256\n#5  0x10084248 in ap_process_http_connection (c=0x1020eeb0) at http_core.c:184\n#6  0x10048dc4 in ap_run_process_connection (c=0x1020eeb0) at connection.c:43\n#7  0x100493d0 in ap_process_connection (c=0x1020eeb0, csd=0x1020ed18) at\nconnection.c:178\n#8  0x100c4040 in child_main (child_num_arg=0) at prefork.c:640\n#9  0x100c415c in make_child (s=0x1011b028, slot=0) at prefork.c:680\n#10 0x100c48b0 in ap_mpm_run (_pconf=0x10114968, plog=0x10158a78, s=0x1011b028)\nat prefork.c:956\n#11 0x1001e608 in main (argc=4, argv=0x7ffffe24) at main.c:717\n#12 0x0faad6cc in __libc_start_main () from /lib/libc.so.6\n(gdb) q\n#", "id": 104500, "time": "2007-06-18T07:33:39Z", "creator": "grzegorz.sala@motorola.com", "creation_time": "2007-06-18T07:33:39Z", "is_private": false}, {"count": 1, "attachment_id": null, "bug_id": 42690, "is_private": false, "id": 157066, "time": "2012-04-02T17:40:56Z", "creator": "stanger@sourcegear.com", "creation_time": "2012-04-02T17:40:56Z", "tags": [], "text": "Ran into the same stack trace in a deployment I am currently working on.  This setup involves mod_auth_digest, mod_authn_dbd and mod_vhost_alias.  The abbreviated relevant portions of my config are:\n\n\tVirtualDocumentRoot /vhosts/%0\n\n\t<Directory /vhosts>\n\t\tAllowOverride AuthConfig\n\t</Directory>\n\n\t<LocationMatch \"^(/private/).*\">\n\t\tAuthType Digest\n\t\tAuthDigestProvider dbd\n\t\t\n\t\t# core authorization configuration\n\t\tRequire valid-user\n\t\t\n\t\tAuthDBDUserRealmQuery \\\n\t\t\"SELECT password FROM apache_users WHERE username = %s AND realm = %s\"\n\t</LocationMatch>\n\nIn the Document Root for each virtual host is an .htaccess file that defines the AuthName for that virtual host\n\n\tAuthName \"some_realm\"\n\nI have a patch that fixes two issues this segfault exposes.\n\n1) (Obviously) Apache shouldn't segfault when either the expected or provided auth realm is null.  The if() statement that calls strcmp on those two values should also ensure neither is null.  Additionally, this check should probably be done on all calls to strcmp in the module.\n\n2)  For some reason the realm mod_auth_digest and mod_authn_core are reporting different realms for the same request.  This is due to different merge rules on dir_config struct members ap_auth_name/realm in the mod_authn_core and mod_auth_digest modules.  \n\nThe patch I've included performs NULL checks before calling strcmp and it adds a dir_config merge function that matches the merge rules in mod_authn_core."}, {"count": 2, "tags": [], "bug_id": 42690, "attachment_id": 28531, "is_private": false, "id": 157069, "time": "2012-04-02T17:44:49Z", "creator": "stanger@sourcegear.com", "creation_time": "2012-04-02T17:44:49Z", "text": "Created attachment 28531\nPatch to fix segfaults and incorrect realm values in mod_auth_digest"}]