[{"text": "When JspC compiler of Jasper is called with caching turned on (the default), it omits dependency on .tld file of a library from generated java code of all the pages that reference the library, except the first one compiled.\n\nIt does not occur when compiling the pages at runtime, because tag information caching is only implemented in JspC command line / ant task compiler.\n\nThe workaround is to turn caching off, but you will face performance issues (see #33650).\n\nI do not think that this issue is of great value. Most likely nobody will be bothered by omitting that dependency. I encountered it while investigating the bug #37084", "tags": [], "bug_id": 46470, "is_private": false, "count": 0, "id": 123746, "time": "2009-01-04T13:36:58Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2009-01-04T13:36:58Z", "attachment_id": null}, {"count": 1, "tags": [], "creator": "knst.kolinko@gmail.com", "attachment_id": 23082, "id": 123747, "time": "2009-01-04T13:55:47Z", "bug_id": 46470, "creation_time": "2009-01-04T13:55:47Z", "is_private": false, "text": "Created attachment 23082\nwebapp that reproduces the issue when compiled by JspC\n\nTo reproduce the issue:\n\n1. Create the following subdirectory and two subdirectories in it:\n bugNnnnn\n   /output\n   /source\n\n2. Unzip the war file into bugNnnnn/source\n\n3. Launch JspC compiler from an ant task, or from command line with the following arguments:\n\n-uriroot bugNnnnn\\source -d bugNnnnn\\output\n\n4. Compare the generated files \"source1_jsp.java\" and \"source2_jsp.java\" that are in a subdirectory of bugNnnnn\\output\n\nHere is the difference:\n\n***** source1_jsp.java\n\n  static {\n    _jspx_dependants = new java.util.ArrayList(1);\n    _jspx_dependants.add(\"/WEB-INF/example-taglib.tld\");\n  }\n\n  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005feg_005fShowSource_0026_005fjspFile_005fnobody;\n***** source2_jsp.java\n\n  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005feg_005fShowSource_0026_005fjspFile_005fnobody;\n*****\n\nThe source1.jsp and source2.jsp files are the same, thus there should be no such difference in the generated files.\n\n5. Delete the generated files from bugNnnnn/output\n\nCredits: This web application is an excerpt from the examples application bundled with TC.\n\nThe cause:\nThis dependency information is generated by the following lines of TagLibraryInfoImpl class (as of tc6.0.x):\n\n165:   PageInfo pageInfo = ctxt.createCompiler().getPageInfo();\n166:   if (pageInfo != null) {\n167:        pageInfo.addDependant(location[0]);\n168:   }\n\nThose lines belong to the constructor of the class and are not executed when the class is reused from the cache.\n\nI reproduced the issue in the current tc6.0.x and I expect it to exist in TC 6.0.18 release as well.\n\nI suppose that it also exists in TC 5.5.27, though have not yet tested there."}, {"count": 2, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "id": 123749, "time": "2009-01-04T15:53:18Z", "bug_id": 46470, "creation_time": "2009-01-04T15:53:18Z", "is_private": false, "text": "The dependency information is used when doing on-the-fly compilation. I don't believe it is used in the case of pre-compilation therefore, I do not see a need to fix this.\n\nYou could go as far as arguing the dependency information is unnecessary when using JspC and remove it but I doubt that that optimisation is worth the effort it would take to code it.\n\nIf you can think of a use case where this would matter, please feel free to re-open this issue."}]