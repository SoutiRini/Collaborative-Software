[{"count": 0, "tags": [], "creator": "damien@tacheron.fr", "attachment_id": null, "is_private": false, "id": 195539, "time": "2016-12-18T09:55:17Z", "bug_id": 60493, "creation_time": "2016-12-18T09:55:17Z", "text": "When you declare a logger in JULI configuration file, if you don't assign it a handler, it will no produce outputs, even if there is a handler connected to root handler (and useParents left to default value).\n\nThe problem resides in org.apache.juli.ClassLoaderLogManager\n\naddLogger m\u00e9thod use setUseParentHandlers (true) or (false) depending on configuration : \n- is useParentHandlers is setted : OK \n- if handler associated to the logger, useParentHandlers setted to false : OK\nBUT\nthere is no default value (nor initialization of the attribute)\nAND\nas a boolean default value is false, in some cases the useParentHandlers attribute is not setted and his value remains false.\n\nThis is abnormal. With JUL (not JULI), useParentHandlers defaults to true and this is a good thing."}, {"attachment_id": null, "tags": [], "creator": "damien@tacheron.fr", "is_private": false, "count": 1, "id": 195543, "time": "2016-12-18T11:07:01Z", "bug_id": 60493, "creation_time": "2016-12-18T11:07:01Z", "text": "JDK 1.7.0_79\n\nI'm not sure of my diagnostic as i found this :\nprivate volatile boolean useParentHandlers = true;\nin java.util.logging.Logger\nand JULI DirectJDKLog simply delegates to JDK loggers\n\nSo it seems that when a logger is instanciated, it defaults to true correctly\n\n\nBut the problem is real.\n\nI try to understand where and how the object loggers are initialized"}, {"count": 2, "tags": [], "bug_id": 60493, "text": "I had a problem with my tests protocol\nThere is no bug\n\nSorry", "id": 195549, "time": "2016-12-18T13:33:43Z", "creator": "damien@tacheron.fr", "creation_time": "2016-12-18T13:33:43Z", "is_private": false, "attachment_id": null}]