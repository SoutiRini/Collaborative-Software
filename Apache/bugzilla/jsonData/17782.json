[{"count": 0, "text": "I have a properties file of the following form:\nprop1=foo\nprop2=${prop1}.bar\n\nWhen I use loadproperties with an expandproperties filterchain, prop2 is still \nset to \"${foo}.bar\". No substitution occurs in this case. If however, prop1 had \nbeen declared before the call to loadproperties, if even it occurred as a \nresult of another loadproperties call, then the substitution works as expected.", "bug_id": 17782, "attachment_id": null, "id": 32681, "time": "2003-03-07T19:00:05Z", "creator": "svandijk@us.ibm.com", "creation_time": "2003-03-07T19:00:05Z", "tags": [], "is_private": false}, {"count": 1, "tags": [], "creator": "dlwhiteman@us.ibm.com", "attachment_id": null, "id": 33059, "time": "2003-03-12T16:43:12Z", "bug_id": 17782, "creation_time": "2003-03-12T16:43:12Z", "is_private": false, "text": "Is this issue similar to the one that caused <sequential> and other \nTaskContainer implementors to have to override maybeConfigure(), as described \nin bug 17883 ?"}, {"attachment_id": null, "tags": [], "bug_id": 17782, "text": "No, unrelated.\n\nThis bug here has a rather simple reason.  The expandproperties filter gets to\nread the file line by line and ask the project instance for defined properties.\nloadproperties in turn will read the entire file, before setting any properties\nin the project.  This means, the project won't know about the properties in the\nfile before it has been read completely.\n\nThis is rather tedious to fix as the filter must not keep track of the properties\nit has already read as a filter coming later in the chain may cancel out the\nline defining the property.\n\nMaking loadproperties read the file line by line may not solve the problem either\nas we may have filters in the chain that have to read multiple lines at once\nto do their job.  If they read four lines further just to realize they can\npass up a certain line, property expansion wouldn't work for these four lines\nand an expandproperties filter that gets invoked first (hope I haven't lost you).\n\nI don't see a solution ATM (otherwise the bug would have been assigned to\nmyself).  If loading a property file and expanding properties that have been\ndefined in the file on the fly is all you need, <property file=\"...\"/> currently\nlooks like the better alternative.\n", "count": 2, "id": 33065, "time": "2003-03-12T16:58:50Z", "creator": "bodewig@apache.org", "creation_time": "2003-03-12T16:58:50Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 17782, "attachment_id": null, "is_private": false, "id": 39852, "time": "2003-07-02T13:51:40Z", "creator": "peter.reilly@corvil.com", "creation_time": "2003-07-02T13:51:40Z", "text": "Why not use Property#addProperties(Properties) at\nLoadProperties#execute() line 178 instead of directly placing\nthe properties directly in the project.\nProperty#addProperties() calls Property#resolveProperties()\nwhich is nearly equivalent to <expandproperties/> but using\nthe new properties as well as the current properties (I think).\n\nThis would mean that\n<property file=\"x.props\"/> and <loadproperties srcfile=\"x.props\"/>\ndo the same things.\n"}, {"attachment_id": null, "tags": [], "creator": "bodewig@apache.org", "text": "Because <loadproperties srcfile=\"x.props\"/> is not supposed to do the same\nas <property file=\"x.props\"/> - at least in absence of an <expandproperties/>\nfilter.", "count": 4, "id": 39855, "time": "2003-07-02T14:17:15Z", "bug_id": 17782, "creation_time": "2003-07-02T14:17:15Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 17782, "attachment_id": null, "is_private": false, "id": 39856, "time": "2003-07-02T14:26:44Z", "creator": "peter.reilly@corvil.com", "creation_time": "2003-07-02T14:26:44Z", "text": "The manual for \"loadproperties\" says:\n\n   Load a file's contents as Ant properties. This is equivalent to\n   <propertyfile=\"...\"/> except that it supports nested <filterchain>\n   elements and it cannot be specified outside a target.\n\nSo one could implement it that way .... (well except for \"outside a target\")"}, {"count": 6, "text": "OK, so I was wrong 8-)  Your idea looks fine, then.", "bug_id": 17782, "attachment_id": null, "id": 39858, "time": "2003-07-02T15:00:32Z", "creator": "bodewig@apache.org", "creation_time": "2003-07-02T15:00:32Z", "tags": [], "is_private": false}, {"count": 7, "tags": [], "bug_id": 17782, "text": "fixed in CVS HEAD and 1.6beta2, you will no longer need <expandproperties> when\nyou use <loadproperties>.", "id": 45600, "time": "2003-10-14T12:52:47Z", "creator": "bodewig@apache.org", "creation_time": "2003-10-14T12:52:47Z", "is_private": false, "attachment_id": null}]