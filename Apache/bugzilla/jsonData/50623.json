[{"count": 0, "tags": [], "creator": "elaine.wong.kl@gmail.com", "attachment_id": null, "text": "I have created a new HSSFWorkbook and created new sheets, rows and cells. All in all, I have 9 sheets, and the largest sheet has more than 10,000 rows. After saving the workbook to a file, I opened the generated Excel file and noticed that some cells are blank even though a value has been set. \n\nI created a simple JUnit test to prove this(see below). What might be the cause of this problem - and how should I overcome this?\n\nAny advice would be much appreciated!\n\nElaine\n\n---------------------- start of JUnit Test code\n//1) Create 2 workbooks\nString filePath = System.getProperty(\"user.dir\") + File.seperator + \"myFile.xls\";\nWorkbook wb1 = new HSSFWorkbook();\nsetWorkbook(wb1); //function to set a lot of data in wb1\nFileOutputStream fileOut = new FileOutputStream(filePath , false);\nwb1.write(fileOut);\nfileOut.close();\n\nWorkbook wb2 = new HSSFWorkbook();\t\t\nInputStream inp = new FileInputStream(filePath);\nwb2 = new HSSFWorkbook(inp);\t\n\n//2) Start comparing\nassertTrue(wb1.getNumberOfSheets()==wb2.getNumberOfSheets());\nfor(int i=0; i<wb1.getNumberOfSheets(); i++){\n    String name = wb1.getSheetName(i);\n    Sheet sheet1 = wb1.getSheetAt(i);\n    Sheet sheet2 =  wb2.getSheetAt(i);\n    assertTrue(sheet1.getLastRowNum()==sheet2.getLastRowNum());\n    for(int j=0; j<sheet1.getLastRowNum(); j++){\t\t\t\n        Row row1 = sheet1.getRow(j);\n        Row row2 = sheet2.getRow(j);\n        assertTrue(row1.getLastCellNum()==row2.getLastCellNum());\n        for(int k=0; k<row1.getLastCellNum(); k++){\n\t    if(row1.getCell(k)==null){\t\t  \n                assertTrue(row2.getCell(k)==null);\n                continue;\n            }\n            if(row2.getCell(k)==null){\n                assertTrue(row1.getCell(k)==null); \n                //ASSERTION ERROR HAPPENS HERE!\n                continue;\n            }\n            assertTrue(row1.getCell(k).getCellType()==row2.getCell(k).getCellType());\n            if(row1.getCell(k).getCellType()==Cell.CELL_TYPE_NUMERIC || row1.getCell(k).getCellType()==Cell.CELL_TYPE_FORMULA){\n                assertTrue(row1.getCell(k).getNumericCellValue()==row2.getCell(k).getNumericCellValue());\n            if(row1.getCell(k).getCellType()==Cell.CELL_TYPE_STRING){\n                assertTrue(row1.getCell(k).getStringCellValue().trim().equals(row2.getCell(k).getStringCellValue().trim()));\n            }\n        }\n    }\n}", "id": 143490, "time": "2011-01-19T23:13:12Z", "bug_id": 50623, "creation_time": "2011-01-19T23:13:12Z", "is_private": false}, {"count": 1, "tags": [], "creator": "apache@gagravarr.org", "text": "Are you able to create a self-contained unit test for this? One that populates two sheets with the same data, and then verifies the contents + shows something's missing?\n\nAs it stands, there's not enough to show the problem's in POI rather than in your own code that populates the workbook...", "id": 143493, "time": "2011-01-20T07:38:02Z", "bug_id": 50623, "creation_time": "2011-01-20T07:38:02Z", "is_private": false, "attachment_id": null}, {"count": 2, "attachment_id": null, "creator": "dominik.stadler@gmx.at", "text": "No update for a long time, thus resolving this as WORKSFORME for now. If this is still a problem then please reopen this bug with more information via a self-sufficient unit-test that allows us to reproduce the problem.", "id": 183217, "time": "2015-05-31T21:46:09Z", "bug_id": 50623, "creation_time": "2015-05-31T21:46:09Z", "tags": [], "is_private": false}]