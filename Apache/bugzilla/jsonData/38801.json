[{"count": 0, "tags": [], "creator": "kevin.wise@motorola.com", "attachment_id": null, "is_private": false, "id": 86288, "time": "2006-02-28T01:12:55Z", "bug_id": 38801, "creation_time": "2006-02-28T01:12:55Z", "text": "The second part of revision 239927 to filepath.c in August 2005 resulted in a\nnew bug in function apr_filepath_root (file_io/win32/filepath.c).\nSee\nhttp://svn.apache.org/viewcvs.cgi/apr/apr/trunk/file_io/win32/filepath.c?rev=239927&r1=151412&r2=239927&diff_format=h\n\nI believe the problem only occurs when the paths being merged meet certain\ncriteria (in my example and test case, basepath is a root path, and addpath\ncontains only one level).  The result is that the function incorrectly returns\nAPR_EABOVEROOT.\n\nNOTE: In httpd, this bug breaks mod_rewrite's ability to rewrite to full paths.\n Rules like the following return an invalid request:\n    RewriteRule  ^/images/(.+)  D:/Sites/mysite.org/images/$1 [NC,L]\nThis is because mod_rewrite (in prefix_stat) attempts to stat() the first\ndirectory above the root (the prefix-- in this rule, D:\\Sites), which never\nhappens because \"D:\\\" and \"Sites\" fails to be merged using apr_filepath_merge.\n\nI believe the problematic behavior can be reproduced with the following code\nfragment (assuming that the directory D:\\temp does exist):\n\n    const char *basepath = \"D:\\\\\";\n    const char *addpath = \"temp\";\n    char *newpath;\n    apr_status_t rv;\n\n    rv = apr_filepath_merge(&newpath, basepath, addpath,\nAPR_FILEPATH_NOTABOVEROOT | APR_FILEPATH_NOTRELATIVE, pool);\n    if (rv == APR_SUCCESS) {\n        printf( \"apr_filepath_merge worked. Merged path: %s\", newpath );\n    } else {\n        printf( \"apr_filepath_merge did not work.  Status: %d\", rv );\n    }"}, {"count": 1, "tags": [], "bug_id": 38801, "attachment_id": 17806, "id": 86289, "time": "2006-02-28T01:14:59Z", "creator": "kevin.wise@motorola.com", "creation_time": "2006-02-28T01:14:59Z", "is_private": false, "text": "Created attachment 17806\nPatch to resolve bug\n\nThe attached patch reverses the second part of revision 239927.  The comment on\nthis revision indicates this was a performance optimization (and also appears\nto apply only to the first part of the change), so I am fairly confident this\nadequately resolves the problem.  In addition, I have rebuilt with this patch\nin place, and it restores mod_rewrite functionality as described in the bug\ndescription."}, {"count": 2, "tags": [], "creator": "wrowe@apache.org", "attachment_id": null, "is_private": false, "id": 86290, "time": "2006-02-28T03:31:15Z", "bug_id": 38801, "creation_time": "2006-02-28T03:31:15Z", "text": "Thank you for evaluating and reporting this before our next release; I'm reviewing\nthe optimization and will commit this or an appropriate patch shortly, as well\nas add -this- case also to the incident.\n\nGood catch!"}, {"count": 3, "tags": [], "bug_id": 38801, "attachment_id": null, "id": 86320, "time": "2006-03-01T08:25:31Z", "creator": "wrowe@apache.org", "creation_time": "2006-03-01T08:25:31Z", "is_private": false, "text": "I'm very sorry; but in spite of my best effort at tweaking various tests across\ntest/testnames.c, I cannot reproduce this bug :(  Can you please modify any one\nof the existing tests in testnames.c or introduce a new test that you can confirm\nreproduces this bug for yourself?\n\nMany thanks."}, {"count": 4, "tags": [], "bug_id": 38801, "attachment_id": null, "id": 86325, "time": "2006-03-01T10:11:27Z", "creator": "kevin.wise@motorola.com", "creation_time": "2006-03-01T10:11:27Z", "is_private": false, "text": "I will look at the test cases and see if I can reproduce the problem with a\nsimple test case.  In the mean time, perhaps it would help if you know how I\nfound this in the first place.  The following is a rewrite rule that wasn't working:\n\nRewriteRule  ^/images/(.+)  D:/Sites/abc.com/wwwroot/images/$1 [NC,L]\n\nURLs that matched the pattern in this rule would result in a HTTP_BAD_REQUEST\nerror.  As far as I could tell, prefix_stat() in mod_rewrite.c was returning 0\nbecause apr_filepath_merge was not returning APR_SUCCESS."}, {"count": 5, "tags": [], "bug_id": 38801, "is_private": false, "text": "I should also have said that when I changed apr_filepath_merge as indicated by\nthe patch, the given rewrite rule begins working again (it was working under\nhttpd v2.0.54 as well).", "id": 86326, "time": "2006-03-01T10:13:14Z", "creator": "kevin.wise@motorola.com", "creation_time": "2006-03-01T10:13:14Z", "attachment_id": null}, {"count": 6, "tags": [], "bug_id": 38801, "is_private": false, "text": "I came up with a test case that shows the problem.  Unfortunately I am not\nfamiliar with the test framework, so it's just a main() that does everything\nneeded.  In creating the test, I also realized the patch I gave you was only\naddressing part of the problem.\n\nI just checked, and I see that you have commited change 382095 to SVN.  This\nsolution is almost identical to what I was going to propose (and functionally\nthe same).  Based on this, it appears that you have been able to reproduce the\nproblem and fix it.  Let me know if you need further information or would like\nto see the test case and patch I came up with.", "id": 86355, "time": "2006-03-01T21:27:32Z", "creator": "kevin.wise@motorola.com", "creation_time": "2006-03-01T21:27:32Z", "attachment_id": null}, {"text": "The code you identified was simply incorrect.  I've replaced it with\nthe corrected code, optimized only a little for the case where there\nwas no basepath to test above-root (this test case is and should be\na noop because comparing the two roots is far earlier in the process.)\n\nThe only bit your reproduction case missed was APR_FILEPATH_TRUENAME :)\n\nSee version 382029 for the correct testcase, and version 382095 for the\ncorrected 1.x module (096 for the backport to 1.2, 098 for 0.9).\n\nThanks for your detailed report!", "tags": [], "bug_id": 38801, "attachment_id": null, "count": 7, "id": 86359, "time": "2006-03-02T00:36:46Z", "creator": "wrowe@apache.org", "creation_time": "2006-03-02T00:36:46Z", "is_private": false}]