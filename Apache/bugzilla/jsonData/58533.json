[{"count": 0, "tags": [], "creator": "anthony@whitford.com", "attachment_id": null, "id": 185933, "time": "2015-10-25T18:45:54Z", "bug_id": 58533, "creation_time": "2015-10-25T18:45:54Z", "is_private": false, "text": "I noticed code in org.apache.tomcat.dbcp.dbcp2.DelegatingConnection like:\n\n    @Override\n    public PreparedStatement prepareStatement(String sql) throws SQLException {\n        checkOpen();\n        try {\n            DelegatingPreparedStatement dps = new DelegatingPreparedStatement(\n                    this, _conn.prepareStatement(sql));\n            initializeStatement(dps);\n            return dps;\n        }\n        catch (SQLException e) {\n            handleException(e);\n            return null;\n        }\n    }\n\nIf there is a SQLException, I would expect that that gets propagated (just like the signature suggests), not get a null.  I think this violates the spec.\n\nThis issue exists for 2 prepareStatement and 2 prepareCall implementations."}, {"count": 1, "tags": [], "creator": "knst.kolinko@gmail.com", "is_private": false, "text": "1. These classes are copied from Apache Commons DBCP project.\n\nIf there is a bug in them, it needs to be reported (and fixed) in that project first.\n\nhttp://tomcat.apache.org/bugreport.html#Third_party_components\n\n2. The handleException(e); method called in that fragment of code rethrows the exception. So the behaviour is already as you are expecting it.", "id": 185934, "time": "2015-10-25T19:00:04Z", "bug_id": 58533, "creation_time": "2015-10-25T19:00:04Z", "attachment_id": null}]