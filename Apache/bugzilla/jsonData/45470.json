[{"count": 0, "tags": [], "text": "I have the requirement to replace the default BlockContainerLayoutManagerMaker with my own implementation. After searching the code base I think the suggested way is by using the setLayoutManagerMakerOverride(LayoutManagerMaker) method of the FopFactory to override the default LayoutManagerMaker implementation.\n\nMy own LayoutManagerMaker is a subclass of the default LayoutManagerMapping.\nUnfortunately, 'cause the map of LayoutManagerMakers is private and no protected setter is given to change the default mapping set during initialize(), one has to provide a second map of LayoutManagerMakers and duplicate a lot of code to tell fop to use this new mapping.\n\nMy suggestion:\nEither make the map of LayoutManagerMakers protected or preferably provide a protected setter to change the default mapping.\n\nThanks in advance\nRainer", "is_private": false, "bug_id": 45470, "id": 118948, "time": "2008-07-23T12:38:55Z", "creator": "langbehn@netcologne.de", "creation_time": "2008-07-23T12:38:55Z", "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 45470, "is_private": false, "text": "Created attachment 22308\nProposed patch for the improvement\n\nAgreed, this is indeed not a good situation at the moment. I guess nobody really needed that feature. I prefer a protected setter. I'll attach a patch as proposal. If I don't hear any objections in the next 72 hours I'll commit the patch. Out of curiosity: what do you need to replace the block-container LM for?", "id": 118950, "time": "2008-07-23T12:53:37Z", "creator": "jeremias@apache.org", "creation_time": "2008-07-23T12:53:37Z", "attachment_id": 22308}, {"attachment_id": null, "tags": [], "creator": "langbehn@netcologne.de", "text": "(In reply to comment #1)\n> Created an attachment (id=22308) [details]\n> Proposed patch for the improvement\n> \n> Agreed, this is indeed not a good situation at the moment. I guess nobody\n> really needed that feature. I prefer a protected setter. I'll attach a patch as\n> proposal. If I don't hear any objections in the next 72 hours I'll commit the\n> patch. Out of curiosity: what do you need to replace the block-container LM\n> for?\n> \n\nJeremias,\n...you're really fast :-) Thanks for the patch.\n\nFYI, I'm working on a collection of XSL Transformation stylesheets (XSLT) to convert documents/forms from Adobe's XML Data Package (XDP) vocabulary into documents in the W3C's XSL Formatting Objects (XSL-FO) vocabulary (eventually with embedded XForms), http://xdp2fo.sourceforge.net. This project is still\nin an early phase but the already produced outputs are very promising.\n\nSome of the XDP container elements, which I map to absolute positioned block containers, use the concept of an anchor point for positioned layout. The location of the container's anchor point can be: topLeft, topCenter, topRight, middleLeft, middleCenter, middleRight, bottomLeft, bottomCenter, bottomRight.\nThe given top and left coordinates are always related to the anchor point. In\nmy opinion there is no corresponding concept in XSL-FO. Therefore you have to transform the left and top coordinates (writing mode is currently not respected) in accordance to the anchor type given.\n\nAfter some research my choosen solution looks like this:\n\n1. During transformation embed the XDP anchorType attribute in the\n   corresponding block-container element (with XDP namespace).\n2. Provide an extended BlockContainerLayoutManager that looks for this special\n   attribute during layout processing. If such an attribute is found, perform\n   the position adjustment after bpd and ipd are computed.\n3. Remove the XDP attribute after processing.\n\nWhat do you think about this solution? Do you know a better or simpler solution? The drawback of my solution is, you have to provide this extension\nfor every possible XSL-FO processor.\n\nBTW, for barcode processing I'm using Barcode4J. Thanks for all your great work.\n\nBye Rainer\n", "count": 2, "id": 118955, "time": "2008-07-23T13:47:14Z", "bug_id": 45470, "creation_time": "2008-07-23T13:47:14Z", "is_private": false}, {"count": 3, "tags": [], "creator": "jeremias@apache.org", "attachment_id": null, "is_private": false, "id": 118963, "time": "2008-07-23T23:33:31Z", "bug_id": 45470, "creation_time": "2008-07-23T23:33:31Z", "text": "(In reply to comment #2)\n> What do you think about this solution? Do you know a better or simpler\n> solution? The drawback of my solution is, you have to provide this extension\n> for every possible XSL-FO processor.\n\nSorry, but I don't have a qualified opinion here as I know nothing of this XDP. But it definitely sounds suboptimal if you have to hack a FO processor to make this work."}, {"attachment_id": null, "tags": [], "creator": "jeremias@apache.org", "is_private": false, "count": 4, "id": 119079, "time": "2008-07-28T07:27:38Z", "bug_id": 45470, "creation_time": "2008-07-28T07:27:38Z", "text": "Change done as proposed: http://svn.apache.org/viewvc?view=rev&revision=680369"}, {"attachment_id": null, "tags": [], "creator": "gadams@apache.org", "text": "batch transition pre-FOP1.0 resolved+fixed bugs to closed+fixed", "count": 5, "id": 156162, "time": "2012-04-01T07:01:50Z", "bug_id": 45470, "creation_time": "2012-04-01T07:01:50Z", "is_private": false}]