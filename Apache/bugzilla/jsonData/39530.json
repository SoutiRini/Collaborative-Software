[{"count": 0, "tags": [], "text": "Tomcat 5.5.17 generates incorrect results with trimSpaces turned on.\n\nTEST.JSP\n==========\n<%\n            String onClickCmd  = \"onclick=\\\"\" + \"dummyOnclick\" + \"\\\"\";\n            String onKeydownCmd= \"onkeydown=\\\"if (event.keyCode==13) {\" +\n\"dummyOnkeydown()\" + \"}\\\"\";\n            String tabIndexAttr= \"tabindex=\\\"0\\\"\";\n            String tClass      = \"InfWizardStep_Active\";\n\n%>\n        <td class=\"<%=tClass%>\"\n            <%=tabIndexAttr%>\n            <%=onClickCmd%>\n            onmouseover=\"dummyOnmouseover()\"\n        />\n\n\n\nWhen precompiling with org.apache.jasper.JspC and trimSpaces=\"true\" the\nfollowing Java is generated:\n\n\nGenerated Java with trimSpaces\n=======================\n            String onClickCmd  = \"onclick=\\\"\" + \"dummyOnclick\" + \"\\\"\";\n            String onKeydownCmd= \"onkeydown=\\\"if (event.keyCode==13) {\" +\n\"dummyOnkeydown()\" + \"}\\\"\";\n            String tabIndexAttr= \"tabindex=\\\"0\\\"\";\n            String tClass      = \"InfWizardStep_Active\";\n\n\n      out.write(\"<td class=\\\"\");\n      out.print(tClass);\n      out.write(\"\\\"\\r\\n\");\n      out.write(\"            \");\n      out.print(tabIndexAttr);\n      out.print(onClickCmd);\n      out.write(\"\\r\\n\");\n      out.write(\"            onmouseover=\\\"dummyOnmouseover()\\\"\\r\\n\");\n      out.write(\"        />\\r\\n\");\n    } catch (Throwable t) {\n      if (!(t instanceof SkipPageException)){\n        out = _jsp\n\n \nThis generates the following incorrect fragment:\n\nGenerated HTML with trimSpaces. Note that there is no space between \"0\" and onclick\n========================\n<td class=\"InfWizardStep_Active\"\n            tabindex=\"0\"onclick=\"dummyOnclick\"\n            onmouseover=\"dummyOnmouseover()\"\n        />\n\n\n\n\nThis code works when trimSpaces is not enabled, following are the results\nwithout trimSpaces.\n\nWhen precompiling with org.apache.jasper.JspC and trimSpaces=\"false\" the\nfollowing Java is generated\nGenerated Java without trimSpaces\n==========================\n            String onClickCmd  = \"onclick=\\\"\" + \"dummyOnclick\" + \"\\\"\";\n            String onKeydownCmd= \"onkeydown=\\\"if (event.keyCode==13) {\" +\n\"dummyOnkeydown()\" + \"}\\\"\";\n            String tabIndexAttr= \"tabindex=\\\"0\\\"\";\n            String tClass      = \"InfWizardStep_Active\";\n\n\n      out.write(\"\\r\\n\");\n      out.write(\"        <td class=\\\"\");\n      out.print(tClass);\n      out.write(\"\\\"\\r\\n\");\n      out.write(\"            \");\n      out.print(tabIndexAttr);\n      out.write(\"\\r\\n\");\n      out.write(\"            \");\n      out.print(onClickCmd);\n      out.write(\"\\r\\n\");\n      out.write(\"            onmouseover=\\\"dummyOnmouseover()\\\"\\r\\n\");\n      out.write(\"        />\\r\\n\");\n\n\nGenerated HTML without trimSpaces\n===========================\n        <td class=\"InfWizardStep_Active\"\n            tabindex=\"0\"\n            onclick=\"dummyOnclick\"\n            onmouseover=\"dummyOnmouseover()\"\n        />", "is_private": false, "bug_id": 39530, "id": 88955, "time": "2006-05-09T13:24:45Z", "creator": "ajbanck@informatica.com", "creation_time": "2006-05-09T13:24:45Z", "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 39530, "attachment_id": null, "id": 100768, "time": "2007-03-21T17:57:36Z", "creator": "mctozzy@gmail.com", "creation_time": "2007-03-21T17:57:36Z", "is_private": false, "text": "We've just come across this problem, and I can't believe nobody else has either\ncommented on this bug or discussed it at all? Surely lots of people must strike\nthis problem using jsp's with trimSpaces on?"}, {"count": 2, "tags": [], "text": "Apparently not.", "attachment_id": null, "id": 100911, "creator": "yoavs@computer.org", "time": "2007-03-25T14:12:36Z", "bug_id": 39530, "creation_time": "2007-03-25T14:12:36Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 39530, "is_private": false, "text": "Perhaps no-one's too worried about tuning the output of their JSP's so that\nnetwork traffic is reduced?  Ah...bandwidth....", "id": 101014, "time": "2007-03-27T00:48:16Z", "creator": "mctozzy@gmail.com", "creation_time": "2007-03-27T00:48:16Z", "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 39530, "is_private": false, "text": "We have seen this same problem with Tomcat 6.\n\nObviously the fix is to treat whitespace around JSP expressions as significant\n(while leaving those around JSP declarations and scriptlets and as insignificant).", "id": 103484, "time": "2007-05-22T02:05:00Z", "creator": "acottrell@blacksunplc.com", "creation_time": "2007-05-22T02:05:00Z", "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 39530, "attachment_id": null, "id": 105796, "time": "2007-07-19T22:10:23Z", "creator": "cowan@aconex.com", "creation_time": "2007-07-19T22:10:23Z", "is_private": false, "text": "This also applies to EL expressions. e.g. the JSP code\n\n<h1>${a} ${b}</h1>\n\nproduces the Java:\n\nout.write(\"<h1>\");\nout.write((java.lang.String)\norg.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate(\"${a}\",\njava.lang.String.class, (PageContext)_jspx_page_context, null, false));\nout.write((java.lang.String)\norg.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate(\"${b}\",\njava.lang.String.class, (PageContext)_jspx_page_context, null, false));\nout.write(\"</h1>\");\n\nwhich is clearly not correct.\n\nI would suggest 2 options here:\n\n1) Whitespace around any 'expression', whether EL ${} or JSP <%= %> should count\nas 'significant', as Andrew has suggested above.\n\n2) Optionally, and additionally rather than removing all this whitespace,\ncollapse it into one (html-significant) space. This would address the fact that,\nsay, \n<% out.write(\"a\"); %>             <% out.write(\"b\"); %>\nwould produce (to the end user, after the browser collapses spaces per normal)\n\"a b\" with trimspaces off, but \"ab\" with it on. Collapsing n whitespaces -> 1\npossibly makes more sense than n -> 0 (at least as an option).\n\nI'm less worried about #2, but #1 certainly seems to be a bug to me.\n"}, {"count": 6, "tags": [], "bug_id": 39530, "is_private": false, "text": "Although the 2.0 JSP spec doesn't refer to trimming spaces, the 2.1 spec does. I think it is reasonable for Tomcat 5.5.x to be consistent with 6.0.x.\n\nThe JSP 2.1 spec requires that trim spaces removes all of the whitespace. See bug 45931 for more information.", "id": 121176, "time": "2008-10-03T07:23:07Z", "creator": "markt@apache.org", "creation_time": "2008-10-03T07:23:07Z", "attachment_id": null}]