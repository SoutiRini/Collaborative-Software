[{"count": 0, "tags": [], "bug_id": 27916, "text": "The deployment documentation states that you can put a context.xml in the META-\nINF directory of your war file to specify Tomcat specific settings. However, \nwhenever I put a context.xml in my war file that looks like this:\n\n<Context path=\"/atd\" reloadable=\"true\">\n</Context>\n\nI get an NPE (see below) after dropping this file in the webapps directory and \nstarting Tomcat. If I set the docBase this doesn't happen. However it doesn't \nmake sense to set the docBase since who knows where the war file will actually \nbe deployed at. Shouldn't the attributes in the context.xml file I provide with \nmy web app just be defaults while the other attributes come from the xml file \nin the conf/Catalina/localhost directory? Of course there isn't a context file \nin there the first time I start the server up, but then again there isn't one \nin there when I drop in a war file without a context.xml file and one is \ncreated with a correct docBase.\n\n\n\nSEVERE: End event threw exception\njava.lang.reflect.InvocationTargetException\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke\n(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke\n(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:324)\n\tat org.apache.commons.beanutils.MethodUtils.invokeMethod\n(MethodUtils.java:252)\n\tat org.apache.commons.digester.SetNextRule.end(SetNextRule.java:256)\n\tat org.apache.commons.digester.Rule.end(Rule.java:276)\n\tat org.apache.commons.digester.Digester.endElement(Digester.java:1058)\n\tat org.apache.catalina.util.CatalinaDigester.endElement\n(CatalinaDigester.java:123)\n\tat org.apache.xerces.parsers.AbstractSAXParser.endElement(Unknown \nSource)\n\tat org.apache.xerces.impl.XMLDocumentFragmentScannerImpl.scanEndElement\n(Unknown Source)\n\tat \norg.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher.\ndispatch(Unknown Source)\n\tat org.apache.xerces.impl.XMLDocumentFragmentScannerImpl.scanDocument\n(Unknown Source)\n\tat org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)\n\tat org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)\n\tat org.apache.xerces.parsers.XMLParser.parse(Unknown Source)\n\tat org.apache.xerces.parsers.AbstractSAXParser.parse(Unknown Source)\n\tat org.apache.commons.digester.Digester.parse(Digester.java:1567)\n\tat org.apache.catalina.core.StandardHostDeployer.install\n(StandardHostDeployer.java:519)\n\tat org.apache.catalina.core.StandardHost.install(StandardHost.java:906)\n\tat org.apache.catalina.startup.HostConfig.deployDescriptors\n(HostConfig.java:527)\n\tat org.apache.catalina.startup.HostConfig.deployApps\n(HostConfig.java:472)\n\tat org.apache.catalina.startup.HostConfig.start(HostConfig.java:1008)\n\tat org.apache.catalina.startup.HostConfig.lifecycleEvent\n(HostConfig.java:394)\n\tat org.apache.catalina.util.LifecycleSupport.fireLifecycleEvent\n(LifecycleSupport.java:166)\n\tat org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1134)\n\tat org.apache.catalina.core.StandardHost.start(StandardHost.java:832)\n\tat org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1126)\n\tat org.apache.catalina.core.StandardEngine.start\n(StandardEngine.java:521)\n\tat org.apache.catalina.core.StandardService.start\n(StandardService.java:519)\n\tat org.apache.catalina.core.StandardServer.start\n(StandardServer.java:2345)\n\tat org.apache.catalina.startup.Catalina.start(Catalina.java:594)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke\n(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke\n(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:324)\n\tat org.apache.catalina.startup.Bootstrap.start(Bootstrap.java:297)\n\tat org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:398)\nCaused by: java.lang.NullPointerException\n\tat java.io.File.<init>(File.java:180)\n\tat org.apache.catalina.core.StandardContext.getBasePath\n(StandardContext.java:4722)\n\tat org.apache.catalina.core.StandardContext.getServletContext\n(StandardContext.java:1464)\n\tat org.apache.catalina.core.StandardContext.postWorkDirectory\n(StandardContext.java:4972)\n\tat org.apache.catalina.core.StandardContext.start\n(StandardContext.java:4128)\n\tat org.apache.catalina.core.ContainerBase.addChildInternal\n(ContainerBase.java:866)\n\tat org.apache.catalina.core.ContainerBase.addChild\n(ContainerBase.java:850)\n\tat org.apache.catalina.core.StandardHost.addChild(StandardHost.java:638)\n\tat org.apache.catalina.core.StandardHostDeployer.addChild\n(StandardHostDeployer.java:839)", "id": 54586, "time": "2004-03-24T19:12:43Z", "creator": "David.Holscher@nav-international.com", "creation_time": "2004-03-24T19:12:43Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 27916, "text": "I'll eventually test this.", "id": 54589, "time": "2004-03-24T19:43:52Z", "creator": "remm@apache.org", "creation_time": "2004-03-24T19:43:52Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 27916, "is_private": false, "text": "*** Bug 28272 has been marked as a duplicate of this bug. ***", "id": 55510, "time": "2004-04-08T08:35:49Z", "creator": "remm@apache.org", "creation_time": "2004-04-08T08:35:49Z", "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 27916, "is_private": false, "text": "Hope this isn't stating the obvious, but you if your .war file is named\n\"myapp.war\", you can set the docBase to \"myapp.war\", do a manager deploy, and it\nwill work fine.  It does seem a bit redundant, though, since Tomcat could\nprovide that info itself.  I guess I haven't run into an issue with the way\nthings currenly work so this arguable redundancy isn't overly important to me.\n\nJake", "id": 55635, "time": "2004-04-11T05:33:56Z", "creator": "hoju@visi.com", "creation_time": "2004-04-11T05:33:56Z", "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 27916, "text": "Yes, it works with the manager tool even if I don't have a docBase set, but I \nwasn't using the manager tool. Is dropping a war file into the webapps \ndirectory no longer supported? If it is the requirements for what you can put \nin the context.xml file are not clear. How that file is used is also not clear. \nI assumed it provided default settings for fields not set in the context file \ncreated in the conf/Catalina/localhost directory, but that doesn't seem to be \nthe case.", "id": 55652, "time": "2004-04-12T12:49:55Z", "creator": "David.Holscher@nav-international.com", "creation_time": "2004-04-12T12:49:55Z", "is_private": false, "attachment_id": null}, {"count": 5, "attachment_id": null, "creator": "yoavs@computer.org", "text": "docBase, like path, is a required attribute of the Context element.  It doesn't \nmatter with the current implementation whether that Context is defined in \nserver.xml or in a WAR file (and I'm not sure we want it to matter).\n\nI agree that under some circumstances, Tomcat might be able to deduce the \ndocBase for you, but that's not always the case.  If you wish to make the \ndocBase attribute optional, please open a separate request for enhancement \nissue in Bugzilla and explain your reasoning.", "id": 58142, "time": "2004-05-26T16:48:43Z", "bug_id": 27916, "creation_time": "2004-05-26T16:48:43Z", "tags": [], "is_private": false}, {"count": 6, "tags": [], "creator": "David.Holscher@nav-international.com", "text": "Tomcat not only can, but does deduce the docBase. Anything that I deploy with \nthe manager app has a docBase in the Catalina/localhost/blah.xml file. If I \ndrop a war into the webapps directory that doesn't have a context.xml file set \nit a docBase automatically set for it too.\n\nIf docBase is not optional then the bug is that the manager app lets me deploy \na war file without the docBase set. This should fail and does not.\n\nI'm not sure how this make sense though. When I deploy using the manager app is \nthe docBase used to determine where to upload the war file to on the server? If \nnot how would one deal with a docBase that doesn't match the location of where \nTomcat decides to put the upload.\n\nPutting a relative path in there doesn't make sense to me either. If I put \nfoo.war for the docBase in foo.war I can't just rename the war file and deploy \nit to another context - which would have been possible if I had not put a \ncontext.xml file in the war file.\n", "id": 58143, "time": "2004-05-26T17:03:21Z", "bug_id": 27916, "creation_time": "2004-05-26T17:03:21Z", "is_private": false, "attachment_id": null}, {"count": 7, "tags": [], "creator": "petr.jiricka@netbeans.com", "attachment_id": null, "text": "I may have a different motivation than David, but I too think that docBase\nshould not be required in some situations. Consider the following scenario:\n\n1. I deploy the war file (or expanded war structure) locally, it's already\npresent on the machine where I run Tomcat.\n2. The war file is not under webapps; it resides outside the server installation\n3. I have put context.xml into the archive's META-INF directory, as recommended\nby http://jakarta.apache.org/tomcat/tomcat-5.0-doc/appdev/deployment.html\n\nIn this case, I will supply the location of the war file when deploying using\nmanager, and I expect the server will use the 'path' attribute for the context\npath. However, it shouldn't require the 'docBase' attribute, as that's already\ndetermined by the war location. After all, Jan Luehe says in his evaluation of\n28272 that sometimes docBase is ignored:\n\n   'path' attribute inside META-INF/context.xml is used, whereas 'docBase'\n   attribute is ignored (it is implicitly set to the WAR file location).\n\nCurrently, omitting 'docBase' in my scenario will not work, because the server\nwill not find the deployed application after restart.\n\nI suggest this could be fixed as follows: When manager deploys the application,\nthen besides copying context.xml into $CATALINA_BASE/conf/Catalina/localhost, it\nalso maintains information about the 'docBase' of deployed applications for apps\nthat do not specify docBase in context.xml. (This could be done by maintaining a\nproperties file that maps file names of context.xml files in\n$CATALINA_BASE/conf/Catalina/localhost to real docBase locations of the\napplications.)\n\n", "id": 58190, "time": "2004-05-27T09:39:37Z", "bug_id": 27916, "creation_time": "2004-05-27T09:39:37Z", "is_private": false}, {"count": 8, "tags": [], "bug_id": 27916, "text": "Per Yoav's suggestion, I filed a new enhancement request which asks for docBase\nto be optional, see issue 29390.", "id": 58730, "time": "2004-06-04T10:56:40Z", "creator": "petr.jiricka@netbeans.com", "creation_time": "2004-06-04T10:56:40Z", "is_private": false, "attachment_id": null}, {"count": 9, "tags": [], "bug_id": 27916, "text": "*** Bug 29390 has been marked as a duplicate of this bug. ***", "id": 58733, "time": "2004-06-04T11:04:03Z", "creator": "remm@apache.org", "creation_time": "2004-06-04T11:04:03Z", "is_private": false, "attachment_id": null}, {"count": 10, "tags": [], "bug_id": 27916, "text": "Ok, I was just following Yoav's suggestion. Nevermind, so I am reopening this\nissue. Please feel free to comment on the use case I stated above.", "id": 58748, "time": "2004-06-04T12:33:00Z", "creator": "petr.jiricka@netbeans.com", "creation_time": "2004-06-04T12:33:00Z", "is_private": false, "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 27916, "is_private": false, "count": 11, "id": 58750, "time": "2004-06-04T13:04:40Z", "creator": "remm@apache.org", "creation_time": "2004-06-04T13:04:40Z", "text": "I see some anectodical benefits to this, but due to the JavaBean way of doing\nthings in Catalina (at least right now), it's not easy to do. And I don't want\nto add more hacks in that poor deployer, so my opinion on this enh is WONTFIX.\nAs usual, you don't care ;)\nAnyway, there's no point in creating duplicates. You probably misunderstood what\nYoav meant."}, {"count": 12, "tags": [], "bug_id": 27916, "text": "Given the refactoring of the deployer in Tomcat 5.1, I also think this item is \nobsolete.", "id": 61275, "time": "2004-07-28T21:39:46Z", "creator": "yoavs@computer.org", "creation_time": "2004-07-28T21:39:46Z", "is_private": false, "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 27916, "is_private": false, "count": 13, "id": 61298, "time": "2004-07-29T11:31:00Z", "creator": "petr.jiricka@netbeans.com", "creation_time": "2004-07-29T11:31:00Z", "text": "Is there a spec of the new deployer somewhere? Thanks."}, {"count": 14, "tags": [], "bug_id": 27916, "text": "No. How are you doing stuff right now ?", "id": 61305, "time": "2004-07-29T13:24:55Z", "creator": "remm@apache.org", "creation_time": "2004-07-29T13:24:55Z", "is_private": false, "attachment_id": null}, {"count": 15, "tags": [], "bug_id": 27916, "is_private": false, "text": "Here's our current approach (Martin, please correct me if I am wrong).\n\n1) In the source, the docBase attribute is not present. This allows us to share\ncontext.xml in CVS. context.xml is placed under <docBase>/META-INF\n\n2) At build time, we insert docBase with absolute value to context.xml in the\n\"build\" directory. The disadvantage of this is that the build products (war\nfile) are not transferable to another machine - that's what we'd like to fix.\n\n3) We use manager to deploy the application directly from the \"build\" directory,\nwithout copying it under <catalina_base>/webapps, which saves time when\n(re)deploying.\n", "id": 61310, "time": "2004-07-29T14:30:10Z", "creator": "petr.jiricka@netbeans.com", "creation_time": "2004-07-29T14:30:10Z", "attachment_id": null}, {"attachment_id": null, "tags": [], "creator": "remm@apache.org", "is_private": false, "count": 16, "id": 61311, "time": "2004-07-29T14:42:42Z", "bug_id": 27916, "creation_time": "2004-07-29T14:42:42Z", "text": "The next Tomcat relies more on copying, esp in order to fight file locking.\n\nSo what you'll do with that release is that you'll give the deployer your XML\nfile, with the right docBase, rather than the folder name (it would copy it to\nwebapps; this is indeed slower, but the idea is that hot deployment would\nactually really work if everything is consistent)."}, {"count": 17, "tags": [], "bug_id": 27916, "is_private": false, "text": "OK, I'm closing this item.  In summary:\n- For Tomcat 5.0.x, docBase is required.  For some scenarios we could deduce \nit, but that's extra work that's not always trivial and will not be that \nportable to Tomcat 5.5.x.\n- Use relative docBases whenever possible to make WAR files more transferable \nacross machines.\n- Use the other usual mechanisms, e.g. Ant filter tokens, so that only one \nversion of the WAR file needs to be in source control.\n- For Tomcat 5.5.x, the behavior of the deployer is sufficiently different that \nthis item MAY be reconsidered.  Let's wait for 5.5.0, test it out, and if need \nbe discuss the item on the mailing list BEFORE re-opening this issue or another \none for 5.5.0.\n\nThanks ;)", "id": 62805, "time": "2004-08-30T19:59:06Z", "creator": "yoavs@computer.org", "creation_time": "2004-08-30T19:59:06Z", "attachment_id": null}]