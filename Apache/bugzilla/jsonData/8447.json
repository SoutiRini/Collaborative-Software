[{"count": 0, "tags": [], "text": "Here is some code I wrote to reload a Tomcat Context. I thought you might like \nto integrate it into ant.\n\n/*\n * The Apache Software License, Version 1.1\n *\n * Copyright (c) 1999 The Apache Software Foundation.  All rights \n * reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer. \n *\n * 2. Redistributions in binary form must reproduce the above copyright\n *    notice, this list of conditions and the following disclaimer in\n *    the documentation and/or other materials provided with the\n *    distribution.\n *\n * 3. The end-user documentation included with the redistribution, if\n *    any, must include the following acknowlegement:  \n *       \"This product includes software developed by the \n *        Apache Software Foundation (http://www.apache.org/).\"\n *    Alternately, this acknowlegement may appear in the software itself,\n *    if and wherever such third-party acknowlegements normally appear.\n *\n * 4. The names \"The Jakarta Project\", \"Ant\", and \"Apache Software\n *    Foundation\" must not be used to endorse or promote products derived\n *    from this software without prior written permission. For written \n *    permission, please contact apache@apache.org.\n *\n * 5. Products derived from this software may not be called \"Apache\"\n *    nor may \"Apache\" appear in their names without prior written\n *    permission of the Apache Group.\n *\n * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n * SUCH DAMAGE.\n * ====================================================================\n *\n * This software consists of voluntary contributions made by many\n * individuals on behalf of the Apache Software Foundation.  For more\n * information on the Apache Software Foundation, please see\n * <http://www.apache.org/>.\n */ \n\n\n\nimport org.apache.tools.ant.*;\nimport java.io.*;\nimport java.net.*;\n\n/**\n * Reloads a Tomcat Context\n *\n * @author mpepar@hotmail.com\n */\n\npublic class TomcatReload extends Task {\n\n    private URL url;\n    private String context = \"/\";\n    public String user = \"tomcat\";\n    public String password = \"tomcat\";\n\npublic class MyAuth extends java.net.Authenticator{\n\tboolean sent;\n\tjava.net.PasswordAuthentication pa;\n\tpublic MyAuth() { pa = new java.net.PasswordAuthentication(user, \npassword.toCharArray());}\n\tprotected java.net.PasswordAuthentication getPasswordAuthentication() { \nif (sent) { log(\"HTTP Authentication failure.\", Project.MSG_ERR); return null; }\nsent=true; return pa;}\n}\n\n    public void execute() throws BuildException {\n\tString res = \"\";\n\ttry\n\t{\n        if (url == null) \n            url = new URL(\"http://localhost:8080\");\n\n\tAuthenticator.setDefault(new MyAuth());\n\n\turl = new URL(url, \"/manager/reload?path=\"+URLEncoder.encode(context));\n\tURLConnection urlC = url.openConnection();\n\turlC.setDoInput(true);\n\tInputStream o = urlC.getInputStream();\n\tBufferedReader r = new BufferedReader( new InputStreamReader(o));\n\n\tString s;\n\twhile ((s = r.readLine()) != null)\n\t\tres += s;\n\to.close();\n\t}\n\tcatch (Exception e)\n\t{\n\t\tthrow new BuildException(e.getMessage());\n\t}\n\tif (res.startsWith(\"OK\"))\n\t\tlog(res, Project.MSG_INFO);\n\telse\n\t\tthrow new BuildException(res);\n\t\t\n    }\n\n    public void setURL(URL url) {\n\tthis.url = url;\n    }\n    public void setContext(String context) {\n\tthis.context = context;\n    }\n    public void setUser(String user) {\n\tthis.user = user;\n    }\n    public void setPassword(String password) {\n\tthis.password = password;\n    }\n\n}", "attachment_id": null, "bug_id": 8447, "id": 14583, "time": "2002-04-24T02:02:09Z", "creator": "mpepar@hotmail.com", "creation_time": "2002-04-24T02:02:09Z", "is_private": false}, {"count": 1, "tags": [], "text": "Something like this already exists in the Tomcat CVS tree.  Application-specific\ntasks are better released with the application anyway, as they really don't form\npart of the ANT core and often change depending on the version of the application.", "attachment_id": null, "bug_id": 8447, "id": 14776, "time": "2002-04-25T20:36:09Z", "creator": "peterj@liberate.com", "creation_time": "2002-04-25T20:36:09Z", "is_private": false}]