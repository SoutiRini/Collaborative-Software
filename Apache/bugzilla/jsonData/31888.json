[{"count": 0, "tags": [], "bug_id": 31888, "attachment_id": null, "id": 65676, "time": "2004-10-26T00:35:11Z", "creator": "avi@cherrydev.com", "creation_time": "2004-10-26T00:35:11Z", "is_private": false, "text": "For some reason the Monitor Results displays memory usage as % (used/total).\n\nWhile this would be useful, the data that's returned by tomcat manager is, in\nfact, memory FREE and total memory, NOT memory USED and total memory. \nObviously, this gives very misleading results and does not warn when an\napplication is running out of memory."}, {"count": 1, "tags": [], "creator": "woolfel@yahoo.com", "attachment_id": null, "text": "If you want to view the raw results, there's two options: save it to a file or\nwrite a new graph. I went through several different prototypes and the raw\nmemory used is actually not useful. What ends up causing problems is actually\nthe percent of total memory. As load increases, typically the  heap can't\nincrease fast enough and causes a OutOfMemoryException. Running out of memory\noccurs under several different scenarios, so which scenario is more important?\n\nfrom my own experience, a gradual increase in load typically is fine. a sudden\nincreases tends to overwhelm the VM. For example, say a system has 2Gb of ram,\nbut the current heap is 20Mb. If a sudden flood of traffic hits your site, most\nlikely the VM cannot allocate enough heap space to keep up. that is proportional\nthe the current allocated memory.\n\nHopefully that makes sense. I'm open to suggestions if there's a particular type\nof memory allocation pattern you had in mind. the graph works as designed and is\nbased on weight.", "id": 65688, "time": "2004-10-26T02:39:34Z", "bug_id": 31888, "creation_time": "2004-10-26T02:39:34Z", "is_private": false}, {"count": 2, "tags": [], "creator": "avi@cherrydev.com", "attachment_id": null, "id": 65690, "time": "2004-10-26T02:54:06Z", "bug_id": 31888, "creation_time": "2004-10-26T02:54:06Z", "is_private": false, "text": "Well, the scenario that prompted me to enter this as a bug was the fact that I was viewing a web \napplication with a slow memory leak that eventually ran out of memory.  The less memory that was still \navailable, the lower the load that the graph showed, which seems completely opposite from what I \nwould expect.  Just before the application ran out of memory, the graph basically showed a memory \nload of 0%.  I'm unsure of how this can be the intended utility of the graph.\n\nJust as a note, the VM being monitored had a bounded heap size, set by the command-line options.  \nThe 'total memory' that the manager/status servlet showed was this value."}, {"count": 3, "tags": [], "creator": "woolfel@yahoo.com", "attachment_id": null, "is_private": false, "id": 65692, "time": "2004-10-26T03:56:59Z", "bug_id": 31888, "creation_time": "2004-10-26T03:56:59Z", "text": "Thanks for taking time to explain the problem you're having. The error is in the\ncaption. It should read \"free/total. My original implementation I did the following.\n\nmax - free = used\nused /total = weight.\n\nafter some testing I switched it to free/total, but forgot to change the\ncaption. the behavior of the graph is correct, but the caption is totally wrong.\nthanks for pointing that out, i will make the change and update the docs. As the\nload increases, the memory line should drop as should the health line. As the\nload increases, the thread and load should go up.\n"}, {"count": 4, "tags": [], "text": "This now makes a bit more sense to me.  However, since thread and overall load, is signified by a rise in \npercentage value, shouldn't also memory usage also rise as it increases?  Additionally, a dangerously \nlow amount of available memory does NOT signal, on the alternate screen (the one with the colored \n'lights'), a warning situation.  Shouldn't it?", "is_private": false, "bug_id": 31888, "id": 65693, "time": "2004-10-26T04:03:11Z", "creator": "avi@cherrydev.com", "creation_time": "2004-10-26T04:03:11Z", "attachment_id": null}, {"count": 5, "tags": [], "creator": "woolfel@yahoo.com", "attachment_id": null, "text": "I guess, but that would mean switching the graph back to used/total. the reason\nthe status tab shows different value is because it is a weighted calculation. I\nwill try to update the documentation in the next few days so it is explained in\ngreater detail.\n\nsince tomcat returns heap free, I took the lazy route and changed it from\nused/total to free/total. whether that is more intuitive is beyond me, but i\nwill update the docs to make it more clear. I've already commited the change to\nthe resource bundle so it says free/total.", "id": 65694, "time": "2004-10-26T04:52:20Z", "bug_id": 31888, "creation_time": "2004-10-26T04:52:20Z", "is_private": false}, {"count": 6, "tags": [], "bug_id": 31888, "is_private": false, "text": "I've updated the docs and fixed a bug in the load calculation. it was using\nfree/total, instead of used/total for the load calculation. this means the graph\nnow shows the load (used/total + active thread/total) and free total.\n\nI've also updated the screen captures for the docs. thanks for posting the bug\nentry. if you have any more comments, feel free to post a response.\n\npeter", "id": 65762, "time": "2004-10-26T17:24:00Z", "creator": "woolfel@yahoo.com", "creation_time": "2004-10-26T17:24:00Z", "attachment_id": null}]