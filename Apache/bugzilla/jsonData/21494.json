[{"count": 0, "tags": [], "bug_id": 21494, "is_private": false, "text": "I have found it would be very useful to have an version of property.location\nthat searches for parent directories. For example, I would like to be able to\nwrite in a nested build.xml file:\n\n<property name=\"build\" searchparents=\"build\"/>\n\n<property name=\"global-properties\" searchparents=\"global.properties\"/>\n\nwhich would set build to the first build dir found in project's base dir or its\nparents and similarly for global-properties. If such file or directory does not\nexist, searchparents would work exactly as current location attribute.\n\nIn this way I can safely invoke ant against build.xml in an arbitrary\nsubdirectory and it will properly initialize itself without the need to specify\nabsolute path names in the environment or on command line.\n\nI emulate this functionality by wrapping ant invocation into a shell script that\ndoes that for all properties that I need to search but it would be nice to have\nthe option in the ant directly.", "id": 40433, "time": "2003-07-11T10:40:26Z", "creator": "igor@fastmail.fm", "creation_time": "2003-07-11T10:40:26Z", "attachment_id": null}, {"count": 1, "tags": [], "text": "Created attachment 7240\nPatch to extend <property> with searchparents attribute", "attachment_id": 7240, "bug_id": 21494, "id": 40434, "time": "2003-07-11T10:42:38Z", "creator": "igor@fastmail.fm", "creation_time": "2003-07-11T10:42:38Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 21494, "attachment_id": 7252, "text": "Created attachment 7252\nAnother idea: adding searchparents flag to influence either file or location attribute", "id": 40493, "time": "2003-07-11T17:47:49Z", "creator": "igor@fastmail.fm", "creation_time": "2003-07-11T17:47:49Z", "is_private": false}, {"count": 3, "tags": [], "creator": "igor@fastmail.fm", "attachment_id": null, "is_private": false, "id": 40494, "time": "2003-07-11T18:00:55Z", "bug_id": 21494, "creation_time": "2003-07-11T18:00:55Z", "text": "The above patch takes a different approach to extend <property>. It adds\nsearchparents as a boolean attribute that can be used either with location or\nfile. When set to true it makes location or file to search for their argument in\nparents directories if it is a relative path. With this version one can not only\nwrite:\n\n<property name=\"build\" location=\"igor\"  searchparents=\"on\"/>\n\nbut also:\n\n<property file=\"global.properties\" searchparents=\"on\"/>\n\nto make ant to search for global.properties in base dir or its parents.\n\nSuch functionality can be implement withthe first version of the patch by the\nfollowing 2 liner:\n\n<property name=\"global-location\" searchparents=\"global.properties\"/>\n<property file=\"${global-location}\"/>\n\nbut it require to introduce unnecessary global-location property.\n\nOn the other hand the patch is bigger and more intrusive since it has to change\nsetLocation/setFile signatures from File to String as File arguments are already\nresolved into absolute path and searchparents option requires access to the\noriginal relative path.\n"}, {"count": 4, "tags": [], "creator": "igor@fastmail.fm", "text": "Created attachment 7253\nThe version of the previous patch with searchparents renamed to find to match command line option -find", "id": 40495, "time": "2003-07-11T18:07:26Z", "bug_id": 21494, "creation_time": "2003-07-11T18:07:26Z", "is_private": false, "attachment_id": 7253}, {"count": 5, "tags": [], "text": "Ok, the third version of the patch: I renamed searchparents to find since it has\nexactly the same semantics as -find command line option to ant itself. So the\nabove example now reads:\n\n<property name=\"build\" location=\"igor\"  find=\"on\"/>\n\n<property file=\"global.properties\" find=\"on\"/>\n\n", "attachment_id": null, "bug_id": 21494, "id": 40496, "time": "2003-07-11T18:09:11Z", "creator": "igor@fastmail.fm", "creation_time": "2003-07-11T18:09:11Z", "is_private": false}]