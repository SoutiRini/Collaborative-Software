[{"count": 0, "tags": [], "bug_id": 34076, "attachment_id": null, "text": "When using the manager webapp specifying to deploy a local directory with the\nwar parameter and specifying a context.xml that specifies a war file with the\ndocBase parameter, the manager fails with java.util.zip.ZipException.\n\nHere is an example deployment URL\nhttp://localhost:8080/manager/deploy?config=file://C:/Projects/tts/apps/tts-webapp/src/conf/tts-dev-local.xml&war=file://C:/Projects/tts/apps/tts-webapp/build/war\n\nError Message:\nFAIL - Encountered exception java.io.IOException: java.util.zip.ZipException:\nThe system cannot find the file specified\n\nwhere:\n    the URL file://C:/Projects/tts/apps/tts-webapp/src/conf/tts-dev-local.xml\n    points to a file containing this config (slightly abreviated):\n    <Context displayName=\"My App Name\" path=\"\" docBase=\"tts.war\" debug=\"99\">\n        ... some stuff ...\n    </Context>\n\n    the URL file://C:/Projects/tts/apps/tts-webapp/build/war points to my\n    directory where I construct a war-format layout with my webapp\n\nIf I change the docBase in the context.xml to \"tts.wart\" it deploys:\nOK - Deployed application from context file\nfile://C:/Projects/tts/apps/tts-webapp/src/conf/tts-dev-local.xml\n\nIt appears that the determination of whether we are deploying from a war file or\na directory is made when the context.xml is read and isn't overriden when the\n\"war\" parameter to the manager's \"deploy\" action is specified.  Therefore, it's\neither still using the value from the context.xml (and looking for it under\nwebapps) or it's trying to open the directory as a zip file or the directory\nplus + \".war\" or something.", "id": 72674, "time": "2005-03-18T18:10:07Z", "creator": "daniel.santos@pobox.com", "creation_time": "2005-03-18T18:10:07Z", "is_private": false}, {"count": 1, "text": "More info on this bug:\n\nThe context.xml that you supply to the Manager is unaltered, it appears to be\ncopied verbatim to $CATALINA_HOME/conf/<serviceName>/<hostName>/ (where\ncontext.xml files go).  The next time that Tomcat starts, it reads these values\nand will thus deploy (or attempt to deploy) differently than when it was\ndeployed with the Manager specifying the overriding parameters.\n\nI think that the solution is to re-write the context.xml file rather than adding\ncode to handle the special case of the overridden war file.  After it is\nre-written, it can then be parsed and processed as though there were no\nexceptions.  This would solve several problems at once.  If I understand the\ncommons component correctly that creates these objects (which I only barely\nunderstand it) from the xml then we would only be running that after we re-wrote\nthe xml.\n\nThat would solve both problems, the \".war file vs. war layout directory\" issue\nand the \"next time you boot Tomcat it uses old war value\" issue.  Then the file\ncould be written to conf/<service name>/<host name> correctly and it's much\nsmoother.\n\nNow, how should we re-write it?  We can parse it, change the values and then\nwrite it out or we can basically find and replace hack it.  But I'm personally\nfor a more sophisticated solution that is probably a bigger mouthful then\nanybody wants, but it's an idea....\n\nI have long since been unsatisfied with the Admin webapps behavior of writing\nout my xml files with comments stripped and it's own (not too friendly)\nformatting.  It would be really nice if there was a somewhat extended parsing\nfunctionality that records comments as metadata.  If we wanted to go a bit\nfurther, we could also attempt to analyze the formatting to determine what\nformatting conventions is being used along with a probability factor of how\ncertain they are using that convention (some people just sorta throw up in their\ncode editor and call it art).  Then, when we write it, we can write the comments\nback out and reusing their original formatting convention if it was consistent\nenough, or use a better formatting convention than we are currently at least.\n\nDaniel", "bug_id": 34076, "attachment_id": null, "id": 73546, "time": "2005-04-11T18:27:18Z", "creator": "daniel.santos@pobox.com", "creation_time": "2005-04-11T18:27:18Z", "tags": [], "is_private": false}, {"attachment_id": null, "tags": [], "bug_id": 34076, "text": "Daniel, does this happen in 5.5.9?  Chances of it getting fixed in 5.0 are slim...", "count": 2, "id": 77596, "time": "2005-07-23T00:15:17Z", "creator": "yoavs@computer.org", "creation_time": "2005-07-23T00:15:17Z", "is_private": false}, {"count": 3, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "id": 93318, "time": "2006-09-11T01:41:49Z", "bug_id": 34076, "creation_time": "2006-09-11T01:41:49Z", "is_private": false, "text": "This is handled cleanly (with a single warning on Tomcat restart) by the latest\n5.5.x code.\n\nGiven that there has been little development on the 5.0.x branch for some time\nand little chance of future development I am closing this as WONTFIX for 5.0.x"}]