[{"attachment_id": null, "tags": [], "bug_id": 43670, "is_private": false, "count": 0, "id": 109530, "time": "2007-10-21T23:59:26Z", "creator": "asf@raikoeckstein.de", "creation_time": "2007-10-21T23:59:26Z", "text": "When trying to extract text from a visio file I encounter a\njava.lang.NegativeArraySizeException which is caused by a negative length of a\nChunkHeader. That seems to be caused by casting the result of\nLittleEndian.getUInt(byte[],int) to int. \n\nStacktrace:\njava.lang.NegativeArraySizeException\n\tat org.apache.poi.hdgf.chunks.ChunkFactory.createChunk(ChunkFactory.java:155)\n\tat org.apache.poi.hdgf.streams.ChunkStream.findChunks(ChunkStream.java:54)\n\tat\norg.apache.poi.hdgf.streams.PointerContainingStream.findChildren(PointerContainingStream.java:92)\n\tat\norg.apache.poi.hdgf.streams.PointerContainingStream.findChildren(PointerContainingStream.java:99)\n\tat\norg.apache.poi.hdgf.streams.PointerContainingStream.findChildren(PointerContainingStream.java:99)\n\tat org.apache.poi.hdgf.HDGFDiagram.<init>(HDGFDiagram.java:89)\n\tat\norg.apache.poi.hdgf.extractor.VisioTextExtractor.<init>(VisioTextExtractor.java:44)\n\tat\norg.apache.poi.hdgf.extractor.VisioTextExtractor.<init>(VisioTextExtractor.java:48)\n\tat\norg.raikoeckstein.search.indexer.handlingtypes.visio.POIVisioHandler.getDocument(POIVisioHandler.java:35)\n\tat\ntest.org.forflow.search.indexer.handlingtypes.POIVisioHandlerTest.testGetDocument(POIVisioHandlerTest.java:55)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:585)\n\tat\norg.junit.internal.runners.TestMethodRunner.executeMethodBody(TestMethodRunner.java:99)\n\tat\norg.junit.internal.runners.TestMethodRunner.runUnprotected(TestMethodRunner.java:81)\n\tat\norg.junit.internal.runners.BeforeAndAfterRunner.runProtected(BeforeAndAfterRunner.java:34)\n\tat org.junit.internal.runners.TestMethodRunner.runMethod(TestMethodRunner.java:75)\n\tat org.junit.internal.runners.TestMethodRunner.run(TestMethodRunner.java:45)\n\tat\norg.junit.internal.runners.TestClassMethodsRunner.invokeTestMethod(TestClassMethodsRunner.java:71)\n\tat\norg.junit.internal.runners.TestClassMethodsRunner.run(TestClassMethodsRunner.java:35)\n\tat\norg.junit.internal.runners.TestClassRunner$1.runUnprotected(TestClassRunner.java:42)\n\tat\norg.junit.internal.runners.BeforeAndAfterRunner.runProtected(BeforeAndAfterRunner.java:34)\n\tat org.junit.internal.runners.TestClassRunner.run(TestClassRunner.java:52)\n\tat\norg.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:38)\n\tat org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)\n\tat\norg.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:460)\n\tat\norg.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:673)\n\tat\norg.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:386)\n\tat\norg.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:196)"}, {"count": 1, "attachment_id": null, "creator": "apache@gagravarr.org", "is_private": false, "id": 109537, "time": "2007-10-22T02:27:32Z", "bug_id": 43670, "creation_time": "2007-10-22T02:27:32Z", "tags": [], "text": "Can up upload the problem file? That way we can check to see if there are any\nother issues, and we'll have a testcase to ensure we don't break this again once\nit's fixed :)"}, {"count": 2, "tags": [], "text": "Created attachment 21022\nProblematic visio file", "is_private": false, "id": 109578, "creation_time": "2007-10-22T22:33:20Z", "time": "2007-10-22T22:33:20Z", "creator": "asf@raikoeckstein.de", "bug_id": 43670, "attachment_id": 21022}, {"count": 3, "tags": [], "text": "Java Arrays need to be indexed by an int, not a long, so if the chunk length\nreally was that large we'd be stuff anyway.\n\nLooking at the header for that chunk, all the values look really really large.\nI'm not sure if the problem is that we're de-compressing the stream incorrectly\n(it's in a compressed stream), or if we're getting the size of a previous chunk\nwrong (so we wind on the wrong amount to get to this chunk)\n\nIt's going to need some more investigating, probably comparing lots of things\nwith vsdump, but that'll have to happen another time :/", "is_private": false, "bug_id": 43670, "id": 109846, "time": "2007-10-28T13:08:50Z", "creator": "apache@gagravarr.org", "creation_time": "2007-10-28T13:08:50Z", "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 43670, "attachment_id": null, "id": 114582, "time": "2008-03-13T06:21:54Z", "creator": "apache@gagravarr.org", "creation_time": "2008-03-13T06:21:54Z", "is_private": false, "text": "*** Bug 44596 has been marked as a duplicate of this bug. ***"}, {"count": 5, "tags": [], "bug_id": 43670, "is_private": false, "text": "Created attachment 21769\nThe attachment that", "id": 115259, "time": "2008-04-02T11:21:10Z", "creator": "durgadeep@gmail.com", "creation_time": "2008-04-02T11:21:10Z", "attachment_id": 21769}, {"count": 6, "tags": [], "bug_id": 43670, "is_private": false, "text": "Created attachment 21770\nThe attachment thats causing this error", "id": 115260, "time": "2008-04-02T11:21:34Z", "creator": "durgadeep@gmail.com", "creation_time": "2008-04-02T11:21:34Z", "attachment_id": 21770}, {"count": 7, "tags": [], "text": "This should now be fixed", "attachment_id": null, "id": 115374, "creation_time": "2008-04-07T08:21:52Z", "time": "2008-04-07T08:21:52Z", "creator": "apache@gagravarr.org", "bug_id": 43670, "is_private": false}, {"count": 8, "tags": [], "bug_id": 43670, "is_private": false, "text": "still throws an exception", "id": 116630, "time": "2008-05-15T04:39:39Z", "creator": "batrakov@gmail.com", "creation_time": "2008-05-15T04:39:39Z", "attachment_id": null}, {"count": 9, "tags": [], "bug_id": 43670, "is_private": false, "text": "I still get this bug with POI 3.1 and 3.2.", "id": 123967, "time": "2009-01-12T13:11:17Z", "creator": "farrell_brent@bah.com", "creation_time": "2009-01-12T13:11:17Z", "attachment_id": null}, {"count": 10, "tags": [], "bug_id": 43670, "attachment_id": null, "text": "Same problem in 3.5-beta7-20090630", "id": 128430, "time": "2009-06-30T04:40:02Z", "creator": "max.valjanski@gmail.com", "creation_time": "2009-06-30T04:40:02Z", "is_private": false}, {"count": 11, "tags": [], "text": "Created attachment 23910\nfile that causes exception", "attachment_id": 23910, "id": 128431, "creation_time": "2009-06-30T04:41:29Z", "time": "2009-06-30T04:41:29Z", "creator": "max.valjanski@gmail.com", "bug_id": 43670, "is_private": false}, {"count": 12, "tags": [], "bug_id": 43670, "attachment_id": null, "id": 128432, "time": "2009-06-30T04:43:11Z", "creator": "max.valjanski@gmail.com", "creation_time": "2009-06-30T04:43:11Z", "is_private": false, "text": "Exception in thread \"main\" org.apache.tika.exception.TikaException: Unexpected RuntimeException from org.apache.tika.parser.microsoft.OfficeParser@15ee671\n\tat org.apache.tika.parser.CompositeParser.parse(CompositeParser.java:121)\n\tat org.apache.tika.parser.AutoDetectParser.parse(AutoDetectParser.java:85)\n\tat org.apache.tika.cli.TikaCLI.process(TikaCLI.java:116)\n\tat org.apache.tika.cli.TikaCLI.main(TikaCLI.java:57)\nCaused by: java.lang.IllegalArgumentException: Found a chunk with a negative length, which isn't allowed\n\tat org.apache.poi.hdgf.chunks.ChunkFactory.createChunk(ChunkFactory.java:120)\n\tat org.apache.poi.hdgf.streams.ChunkStream.findChunks(ChunkStream.java:59)\n\tat org.apache.poi.hdgf.streams.PointerContainingStream.findChildren(PointerContainingStream.java:93)\n\tat org.apache.poi.hdgf.streams.PointerContainingStream.findChildren(PointerContainingStream.java:100)\n\tat org.apache.poi.hdgf.streams.PointerContainingStream.findChildren(PointerContainingStream.java:100)\n\tat org.apache.poi.hdgf.HDGFDiagram.<init>(HDGFDiagram.java:98)\n\tat org.apache.poi.hdgf.extractor.VisioTextExtractor.<init>(VisioTextExtractor.java:52)\n\tat org.apache.poi.hdgf.extractor.VisioTextExtractor.<init>(VisioTextExtractor.java:49)\n\tat org.apache.tika.parser.microsoft.OfficeParser.parse(OfficeParser.java:132)\n\tat org.apache.tika.parser.CompositeParser.parse(CompositeParser.java:119)"}, {"count": 13, "attachment_id": null, "creator": "david.sitsky@gmail.com", "is_private": false, "id": 130085, "time": "2009-08-31T18:40:46Z", "bug_id": 43670, "creation_time": "2009-08-31T18:40:46Z", "tags": [], "text": "I also still see this exact exception on my 4 .vsd files I put through 3.5 beta 6.\n\njava.lang.IllegalArgumentException: Found a chunk with a negative length, which isn't allowed\n\tat org.apache.poi.hdgf.chunks.ChunkFactory.createChunk(ChunkFactory.java:120)\n\tat org.apache.poi.hdgf.streams.ChunkStream.findChunks(ChunkStream.java:59)\n\tat org.apache.poi.hdgf.streams.PointerContainingStream.findChildren(PointerContainingStream.java:93)\n\tat org.apache.poi.hdgf.streams.PointerContainingStream.findChildren(PointerContainingStream.java:100)\n\tat org.apache.poi.hdgf.streams.PointerContainingStream.findChildren(PointerContainingStream.java:100)\n\tat org.apache.poi.hdgf.HDGFDiagram.<init>(HDGFDiagram.java:98)\n\tat org.apache.poi.hdgf.HDGFDiagram.<init>(HDGFDiagram.java:59)\n\nand something slightly different:\n\nNeeded 19 bytes to create the next chunk header, but only found 4 bytes, ignoring rest of data\nNeeded 19 bytes to create the next chunk header, but only found 4 bytes, ignoring rest of data\nNeeded 19 bytes to create the next chunk header, but only found 4 bytes, ignoring rest of data\nNeeded 19 bytes to create the next chunk header, but only found 4 bytes, ignoring rest of data\n\njava.lang.IllegalArgumentException: Found a chunk with a negative length, which isn't allowed\n\tat org.apache.poi.hdgf.chunks.ChunkFactory.createChunk(ChunkFactory.java:120)\n\tat org.apache.poi.hdgf.streams.ChunkStream.findChunks(ChunkStream.java:59)\n\tat org.apache.poi.hdgf.streams.PointerContainingStream.findChildren(PointerContainingStream.java:93)\n\tat org.apache.poi.hdgf.streams.PointerContainingStream.findChildren(PointerContainingStream.java:100)\n\tat org.apache.poi.hdgf.streams.PointerContainingStream.findChildren(PointerContainingStream.java:100)\n\tat org.apache.poi.hdgf.HDGFDiagram.<init>(HDGFDiagram.java:98)\n\tat org.apache.poi.hdgf.HDGFDiagram.<init>(HDGFDiagram.java:59)"}, {"count": 14, "attachment_id": null, "creator": "trejkaz@trypticon.org", "is_private": false, "id": 130088, "time": "2009-08-31T19:48:11Z", "bug_id": 43670, "creation_time": "2009-08-31T19:48:11Z", "tags": [], "text": "That's a bugger.\n\nSpeaking of POI 3.5 beta 6, did it pass all the other tests?  I think the last one I tried was before that one.  Have been waiting for them to produce one which doesn't fail our existing tests so that we can at least upgrade to the beta and pass a few more which have been shelved for new features which are only in 3.5."}, {"count": 15, "tags": [], "text": "Ack.  That comment wasn't supposed to be here... sorry about that. (and about this redundant one too.)", "attachment_id": null, "id": 130089, "creation_time": "2009-08-31T19:48:51Z", "time": "2009-08-31T19:48:51Z", "creator": "trejkaz@trypticon.org", "bug_id": 43670, "is_private": false}, {"count": 16, "tags": [], "text": "Is there an update on this issue?  Thanks.", "is_private": false, "id": 131630, "creation_time": "2009-11-03T09:51:16Z", "time": "2009-11-03T09:51:16Z", "creator": "dogbertyh@yahoo.com", "bug_id": 43670, "attachment_id": null}, {"count": 17, "tags": [], "text": "I just tested this and can verify that the problem still exists in POI 3.6-FINAL.\nThe original NegativeArraySizeException is just replaced with an\nIllegalArgumentException.", "attachment_id": null, "id": 133959, "creation_time": "2010-01-26T09:55:50Z", "time": "2010-01-26T09:55:50Z", "creator": "jukka@apache.org", "bug_id": 43670, "is_private": false}, {"count": 18, "attachment_id": 24895, "creator": "jukka@apache.org", "is_private": false, "id": 133972, "time": "2010-01-27T06:48:35Z", "bug_id": 43670, "creation_time": "2010-01-27T06:48:35Z", "tags": [], "text": "Created attachment 24895\nProposed patch\n\nI inspected the troublesome files and the byte patterns in the chunk streams\nseem to indicate that the parsing logic is not correctly detecting some separator\nbytes.\n\nThe proposed patch adds the missing logic for all the misdiagnosed entries in\nthe attached example files, though it seems likely that there are also other\ncases out there where the current logic would fail. Without better information\nabout the semantics of the chunk header fields it's hard to do anything better.\nWith this patch all the attached files get parsed without problems.\n\nThe patch also contains a change to the chunks_parse_cmds.tbl file for avoiding\nincorrect parsing of a chunk in attachment 21770. The entry that I commented out\nseemed vague in the first place, so I don't believe this change will cause (m)any\nregressions."}, {"attachment_id": null, "tags": [], "bug_id": 43670, "is_private": false, "count": 19, "id": 133992, "time": "2010-01-28T04:21:55Z", "creator": "apache@gagravarr.org", "creation_time": "2010-01-28T04:21:55Z", "text": "Thanks for investigating this in detail Jukka\n\nI've applied your patch for the v11 chunk header. As vsdump didn't have an issue with the short string on type 45 / format 52, I decided to just have a string length chunk, and treat those cases as an empty string\n\nThe result is that we can extract text without error from the files! :)"}, {"count": 20, "tags": [], "bug_id": 43670, "attachment_id": null, "id": 137299, "time": "2010-06-03T07:15:14Z", "creator": "apache@gagravarr.org", "creation_time": "2010-06-03T07:15:14Z", "is_private": false, "text": "*** Bug 44781 has been marked as a duplicate of this bug. ***"}]