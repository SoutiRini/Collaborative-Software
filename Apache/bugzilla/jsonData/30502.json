[{"count": 0, "tags": [], "bug_id": 30502, "attachment_id": null, "text": "I found this in v1.6.1, but the code looks like it didn't change in 1.6.2.\n\nThe code in SQLExec.runStatements(Reader reader, PrintStream out) that parses\nthe sql input into individual statements fails if the input contains a string\nwith \"--\" inside of it.  So, for example, if the input looks like\n\n   INSERT INTO some_table VALUES (1, \"Blah blah blah--blah blah blah\");\n   INSERT INTO some_table VALUES (2, \"Blah blah blah blah blah blah\");\n\nit never finds the first delimiter character, so you get a SQL syntax exception:\n\n$ ant blah\nBuildfile: build.xml\n\nblah:\n      [sql] Executing commands\n      [sql] Failed to execute:   INSERT INTO some_table VALUES (1, 'Blah blah\nblah--blah blah blah');\n      [sql]  INSERT INTO some_table VALUES (2, \"Blah blah blah blah blah blah\")\n\nBUILD FAILED\nC:\\ici\\r180\\build\\build.xml:814: java.sql.SQLException: Syntax error or access\nviolation,  message from server: \"You have an error in your SQL syntax.  Check\nthe manual that corresponds to your MySQL\nserver version for the right syntax to use near ';\n INSERT INTO some_table VALUES (2, \"Blah blah blah blah blah \"\n\nTotal time: 2 seconds\n\n\nThe same sql seems to work from the \"mysql\" command line and other jdbc-based tools.\n\nHere's the problem:\n\n            // SQL defines \"--\" as a comment to EOL\n            // and in Oracle it may contain a hint\n            // so we cannot just remove it, instead we must end it\n            if (!keepformat) {\n                if (line.indexOf(\"--\") >= 0) {\n                    sql.append(\"\\n\");\n                }\n            }\n            if ((delimiterType.equals(DelimiterType.NORMAL)\n                 && sql.toString().endsWith(delimiter))\n                ||\n                (delimiterType.equals(DelimiterType.ROW)\n                 && line.equals(delimiter))) {\n                execSQL(sql.substring(0, sql.length() - delimiter.length()),\n                        out);\n                sql.replace(0, sql.length(), \"\");\n            }\n\n\nThe code that looks for the delimiter character checks only that the sql buffer\nendsWith \";\", but the previous section appends a \" \" or \"\\n\" character to the\nsql buffer, so we never find it.", "id": 61612, "time": "2004-08-05T21:48:43Z", "creator": "jkan@iconstructs.com", "creation_time": "2004-08-05T21:48:43Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 30502, "attachment_id": null, "text": "Oh, here's the build.xml snippet:\n\n    <target name=\"blah\"\n        <sql driver=\"${mysql.driver}\"\n             url=\"jdbc:mysql://${db.host.mysql}/${db.dbname.mysql}\"\n             userid=\"${db.user.mysql}\"\n             password=\"${db.password.mysql}\"\n             classpathref=\"compile.path\"\n             autocommit=\"false\">\n\nDROP TABLE IF EXISTS some_table;\nCREATE TABLE some_table\n(\n  id    tinyint(4) NOT NULL,\n  text  varchar(20) NOT NULL default '',\n  PRIMARY KEY  (id)\n) TYPE=InnoDB;\n\nINSERT INTO some_table VALUES (1, 'Blah blah blah--blah blah blah');\nINSERT INTO some_table VALUES (2, \"Blah blah blah blah blah blah\");\n\n        </sql>\n    </target>\n", "id": 61613, "time": "2004-08-05T21:51:12Z", "creator": "jkan@iconstructs.com", "creation_time": "2004-08-05T21:51:12Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 30502, "attachment_id": null, "id": 93254, "time": "2006-09-08T22:16:15Z", "creator": "peterreilly@apache.org", "creation_time": "2006-09-08T22:16:15Z", "is_private": false, "text": "A work-around is to use the \"keepformat\" attribute.\nThis is by default false, set it to true and your\nexample should work.\n -- is perfectly value in a string value, but\nkeepformat does not know that it in a string and removes it\nand the characters after is."}, {"count": 3, "tags": [], "creator": "l.courtin@cadwin.com", "attachment_id": null, "text": "Same problems with :\ninsert into dm_prod_macro_family (id, descr) values ('***********', '---');\n\n\nProposed correction :\nRemove all strings values before making the test of comment.\n\nSomething like this :\nIn src/main/org/apache/tools/ant/taskdefs/SQLExec.java, replace \n\n            // SQL defines \"--\" as a comment to EOL\n            // and in Oracle it may contain a hint\n            // so we cannot just remove it, instead we must end it\n            if (!keepformat) {\n                if (line.indexOf(\"--\") >= 0) {\n                    sql.append(\"\\n\");\n                }\n            }\n\nby\n\n            // SQL defines \"--\" as a comment to EOL\n            // and in Oracle it may contain a hint\n            // so we cannot just remove it, instead we must end it\n            if (!keepformat) {\n                if (line.replaceAll(\"'.*?'\", \"''\").indexOf(\"--\") >= 0) {\n                    sql.append(\"\\n\");\n                }\n            }\n\nRegards,", "id": 114947, "time": "2008-03-25T06:30:22Z", "bug_id": 30502, "creation_time": "2008-03-25T06:30:22Z", "is_private": false}, {"count": 4, "tags": [], "creator": "bodewig@apache.org", "attachment_id": null, "text": "\n\n*** This bug has been marked as a duplicate of bug 27739 ***", "id": 118476, "time": "2008-07-10T08:21:19Z", "bug_id": 30502, "creation_time": "2008-07-10T08:21:19Z", "is_private": false}]