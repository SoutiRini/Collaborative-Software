[{"count": 0, "tags": [], "bug_id": 48425, "is_private": false, "text": "I have done some performance testing for code reading data from large spreadsheets using POI.  In this use case, I found that half of the CPU time was spent in a single method in POI: DateUtil.isCellDateFormatted(cell).  We call this method every time we extract a value from a cell in order to correctly create Date objects when cells contain dates.\n\nLooking at this method, it spends most of its time in DateUtil.isADateFormat().  This method is very slow, as it performs seven regular expression substitutions on the formatString parameter and one additional regex match.  None of the regexes are precompiled, so they're all compiled on every call to this method.\n\nI would suggest replacing the first five regexes with calls to a string substitution method that doesn't require regexes, as they are simple replacements.  For the remaining three regexes, I would suggest precompiling them instead of just calling String.replaceAll() and String.matches().", "id": 133018, "time": "2009-12-21T05:18:30Z", "creator": "jan.stette@gmail.com", "creation_time": "2009-12-21T05:18:30Z", "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 48425, "attachment_id": null, "is_private": false, "id": 133051, "time": "2009-12-22T00:03:45Z", "creator": "yegor@dinom.ru", "creation_time": "2009-12-22T00:03:45Z", "text": "A good catch, thanks. \n\nAs you suggested, I replaced the first five regexes with a loop collecting characters into a buffer. The remaining three regexes are pre-compiled at class initialization time. \n\nIn my benchmark I measured the number of calls to DateUtil.isCellDateFormatted() made in ten seconds. The reworked code is significantly faster: the throughput is at least five times greater. \n\nI committed the fix in r893105. \n\nYegor"}, {"count": 2, "tags": [], "creator": "jan.stette@gmail.com", "attachment_id": null, "id": 133053, "time": "2009-12-22T02:12:24Z", "bug_id": 48425, "creation_time": "2009-12-22T02:12:24Z", "is_private": false, "text": "Great, thanks for the very quick response!"}]