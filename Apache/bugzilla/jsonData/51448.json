[{"count": 0, "tags": [], "bug_id": 51448, "attachment_id": 27226, "id": 147589, "time": "2011-06-29T07:07:23Z", "creator": "antti.koskimaki@joinex.com", "creation_time": "2011-06-29T07:07:23Z", "is_private": false, "text": "Created attachment 27226\nPlainCellCache, raise suitable sheet count to 4096\n\nWhen updating calculations for Workbook having more than 256 sheets, the evaluation cache at some point throws exception:\n\n java.lang.IllegalStateException: value changed\n\tat org.apache.poi.ss.formula.EvaluationCache.getPlainValueEntry(EvaluationCache.java:144)\n\tat org.apache.poi.ss.formula.EvaluationTracker.acceptPlainValueDependency(EvaluationTracker.java:146)\n\tat org.apache.poi.ss.formula.WorkbookEvaluator.evaluateAny(WorkbookEvaluator.java:258)\n\tat org.apache.poi.ss.formula.WorkbookEvaluator.evaluateReference(WorkbookEvaluator.java:618)\n\tat org.apache.poi.ss.formula.SheetRefEvaluator.getEvalForCell(SheetRefEvaluator.java:47)\n\tat org.apache.poi.ss.formula.LazyRefEval.getInnerValueEval(LazyRefEval.java:44)\n\n\nInitial reason is PlainCellCache packing sheet-index to 8 bits, i.e. supporting only 256 sheets. Excel does not limit sheet number (\"is limited by available memory\"), so 256 is far too low limit. Included patch raises the limit to 4096 (12bit), at the same time dropping the workbook count from 256 to 16 (4bit) which seemed to me more suitable compromise.\n\nDocumentation should also point out such \"invisible limits\" and code should Assert the situation when such limits are exceeded, instead of just getting messed up."}, {"count": 1, "tags": [], "bug_id": 51448, "text": "A unit test demonstrating the problem, please!\n\nYegor", "id": 147654, "time": "2011-06-30T16:12:06Z", "creator": "yegor@dinom.ru", "creation_time": "2011-06-30T16:12:06Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 51448, "attachment_id": 27234, "id": 147666, "time": "2011-07-01T09:55:10Z", "creator": "antti.koskimaki@joinex.com", "creation_time": "2011-07-01T09:55:10Z", "is_private": false, "text": "Created attachment 27234\nTest code demonstrating the problem\n\nCouldn't find proper documentation on how to write suitable junit for this kind of bug, but simple test-code demonstrating the problem attached."}, {"count": 3, "tags": [], "creator": "yegor@dinom.ru", "attachment_id": null, "is_private": false, "id": 147681, "time": "2011-07-01T13:26:37Z", "bug_id": 51448, "creation_time": "2011-07-01T13:26:37Z", "text": "It is a pretty low-level stuff. Thanks for digging that deep!\n\nThe patch looks good, but I'm inclined to change the type of the index to long. This way we don't need to compromise between the number of workbooks and worksheets.\n\nThe fix is coming soon - I'm going to write some tests first.\n\nYegor"}, {"count": 4, "tags": [], "bug_id": 51448, "text": "Fixed in r1142181, junit added.\n\nI changed the type of the index from int to long. This way the number of workbook and sheets is unlimited (actually less 65536). \n\nYegor", "id": 147691, "time": "2011-07-02T09:09:51Z", "creator": "yegor@dinom.ru", "creation_time": "2011-07-02T09:09:51Z", "is_private": false, "attachment_id": null}]