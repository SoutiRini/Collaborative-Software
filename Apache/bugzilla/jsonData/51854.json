[{"text": "Hello,\nI am implementing a specific RequestView for a particular kind of requests.\nI package my JAR and put it in lib/ext.\nI run JMeter but my RequestView is not found.\nI debugged RequestPanel constructor:\n\ntry {\n            classesToAdd = JMeterUtils.findClassesThatExtend(RequestView.class);\n        } catch (IOException e1) {\n            // ignored\n        }\n\nThis find my class.\nBut this code:\nfinal RequestView requestView = \n      (RequestView)   Class.forName(clazz).newInstance();\n\nFails with ClassNotFoundException.\n\nI changed this to final RequestView requestView = (RequestView) Thread.currentThread().getContextClassLoader().loadClass(clazz).newInstance();\nand it works.\n\n\nIs there something wrong in my approach or should I submit a patch ?\nThis issue also occurs on 2.5.\n\nThank you\nRegards\nPhilippe Mouawad", "tags": [], "creator": "p.mouawad@ubik-ingenierie.com", "is_private": false, "count": 0, "id": 149539, "time": "2011-09-20T20:07:43Z", "bug_id": 51854, "creation_time": "2011-09-20T20:07:43Z", "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 51854, "attachment_id": null, "is_private": false, "id": 149543, "time": "2011-09-20T20:50:50Z", "creator": "p.mouawad@ubik-ingenierie.com", "creation_time": "2011-09-20T20:50:50Z", "text": "Hello,\nNote that JUnitSampler uses:\nThread.currentThread().getContextClassLoader().loadClass\n\nRegards"}, {"count": 2, "tags": [], "text": "However, FunctionHelper.initializeFunctionList() uses Class.forName().\nFunctionHelper is in the core jar; functions are in their own jar.\n\nSo I don't quite understand why it seems to work in some cases but not another.\nIf there is a problem, it may affect other uses of Class.forName().", "attachment_id": null, "id": 149583, "creator": "sebb@apache.org", "time": "2011-09-21T12:21:12Z", "bug_id": 51854, "creation_time": "2011-09-21T12:21:12Z", "is_private": false}, {"count": 3, "tags": [], "creator": "p.mouawad@ubik-ingenierie.com", "text": "Hello Sebb,\nI found why it fails.\nTnis issue occurs when debugging in Eclipse and when doing so, my Launcher had more that ApacheJMeter.jar in classpath.\n\nI changed Launcher to use only ApacheJMeter and now it works with initial code.\n\nRegards\nPhilippe", "id": 149587, "attachment_id": null, "bug_id": 51854, "creation_time": "2011-09-21T12:35:51Z", "time": "2011-09-21T12:35:51Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 51854, "attachment_id": null, "id": 149701, "time": "2011-09-23T14:56:34Z", "creator": "p.mouawad@ubik-ingenierie.com", "creation_time": "2011-09-23T14:56:34Z", "is_private": false, "text": "A little not about that:\n- I succeed testing but I cannot hot debug (change a class and have it reloaded by debugger) because my launcher uses JARS while it was possible with:\nThread.currentThread().getContextClassLoader().loadClass(clazz).newInstance(); \n\nSo maybe this should be investigated a little more and Class.forName replaced by Thread.currentThread().getContextClassLoader().loadClass(clazz).\n\nRegards\nPhilippe"}]