[{"count": 0, "tags": [], "bug_id": 57403, "text": "The status worker should have an optional feature to save any configuration changes made via its GUI to workers.properties.\n\nWriting a configuraiton file is typically not an easy task, because you would loose comments and other structure of the original file, e.g. property inheritance via the \"reference\" attribute.\n\nOne implementation idea would be second \"journal\" file to which one would write a protocol of all new propertiy values coming our of status worker changes. Only changes with a \"persist\" checkbox set in the GUI would be written there.\n\nDuring startup mod_jk would read the original workers.properties and then overlay the journal file to reacreate the last \"persisted\" configuration state.\n\nA sysadmin could at any time either roll back by deleting the journal file or parts of it, or reintegrate the journal file contents into the original workers.properties.\n\nThe default name of the journal file could be the value of JkWorkersFile plus some suffix, like \".journal\" or \".changes\". For situations, where the file has to go to some other place, a JkWorkersJounrnalFile directive could be used to explicitely set the file (and dir).\n\nThe default in the status worker GUI would be not to persist, activating it via a checkbox in the forms, in which one can set new property values. A configuration item for the status worker could switch defaults (it would still show the same checkbox, but then it would be checked by default).\n\nIf saving the properties fails, the status workr would show an error message and also log an error.\n\nIf mod_jk finds a journal file, it would log its existence and processing on info log level during startup.\n\nThe journal file could also contain a comment line for each property line, which contains a timestamp of the change and maybe user name and other meta data (client IP? User comment added via GUI?).\n\nI currently do not plan to work on this but patches are welcome.", "id": 180076, "time": "2014-12-30T10:22:38Z", "creator": "rainer.jung@kippdata.de", "creation_time": "2014-12-30T10:22:38Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "creator": "chris@christopherschultz.net", "attachment_id": null, "id": 180081, "time": "2014-12-30T14:39:20Z", "bug_id": 57403, "creation_time": "2014-12-30T14:39:20Z", "is_private": false, "text": "Please make the persistability something that needs to be explicitly enabled for the module. We don't need an accidental security hole added for users who don't ever want to use the feature."}, {"count": 2, "tags": [], "bug_id": 57403, "attachment_id": null, "id": 180105, "time": "2014-12-31T15:11:37Z", "creator": "rainer.jung@kippdata.de", "creation_time": "2014-12-31T15:11:37Z", "is_private": false, "text": "*** Bug 42723 has been marked as a duplicate of this bug. ***"}]