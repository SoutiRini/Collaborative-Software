[{"count": 0, "tags": [], "bug_id": 58528, "attachment_id": null, "text": "I am trying to get HTTPD 2.4.16 to not access any .htaccess files in the filesystem, but it seems to fail.\n\nChecking with procmon (think strace for windows..), i see the httpd.exe process is touching a lot of .htaccess files with win32 CreateFile() when loading the favicon.ico.\n\nIt touches: d:\\.htaccess and then every dir all the way up to the location where favicon.ico is stored. A debugger confirms it is done core/ap_directory_walk().\n\nIt should not touch the .htaccess parsing, but this code does not trigger:\n  \n  /* No htaccess in an incomplete root path,\n   * nor if it's disabled\n   */\n  if (seg < startseg || (!opts.override && opts.override_list == NULL)) {\n     break;\n  }\n\nopts.override_list is non-NULL (pointing to some address in memory).\n\nLooking at the code that sets override_list (in core.c / set_override_list()), this smells fishy:\n\n    d->override_list = apr_table_make(cmd->pool, argc);\n\n    for (i=0;i<argc;i++){\n        if (!strcasecmp(argv[i], \"None\")) {\n            if (argc != 1) {\n                return \"'None' not allowed with other directives in \"\n                       \"AllowOverrideList\";\n            }\n            return NULL;\n        }\n    ...\n\nd->override_list gets initialized with an empty table, but is not cleared in the 'None' branch, when the return NULL is hit. So the above check on opts.override_list == NULL would fail (if this value ends up there).\n\nNot sure if that is the issue, but the effect is that .htaccess files get touched, even though they should not be touched.\n\nI have a rather trivial httpd.conf:\n\nLoadModule authz_core_module modules/mod_authz_core.so\nLoadModule alias_module modules/mod_alias.so\nLoadModule authz_host_module modules/mod_authz_host.so\nLoadModule log_config_module modules/mod_log_config.so\n\n<VirtualHost *:8080>\n    ServerName                  localhost\n    Protocol                    http\n    DocumentRoot                \"d:/code/trunk_clean/cdb\"\n</VirtualHost>\n\nListen 8080\nPidFile \"d:/temp/httpd.pid\"\n     \n<Directory \"/\">\nAllowOverride None\nAllowOverrideList None\n</Directory>\n<Directory \"d:/code/trunk_clean/cdb\">\nAllowOverride None\nAllowOverrideList None\n</Directory>\n\n# Setup logging\nErrorLog \"d:/temp/apache_error.log\"\nLogLevel warn\n\n# We create our runtime files in the tempdir\nDefaultRuntimeDir \"d:/temp\"\n\nAlias \"/favicon.ico\" \"d:/code/trunk_clean/cdb/w3/images/favicon.ico\"", "id": 185897, "time": "2015-10-23T15:45:41Z", "creator": "msc@contact.de", "creation_time": "2015-10-23T15:45:41Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 58528, "attachment_id": 33221, "is_private": false, "id": 185972, "time": "2015-10-26T10:33:53Z", "creator": "msc@contact.de", "creation_time": "2015-10-26T10:33:53Z", "text": "Created attachment 33221\nPatch for set_override_list() to properly handle 'None'"}, {"count": 2, "tags": [], "bug_id": 58528, "attachment_id": null, "text": "I added a patch for the issue.\n\nTesting with a broken .htaccess file, in one of the directories it is easily verifiable if .htaccess files get loaded and parsed when 'AllowOverride None' and 'AllowOverrideList None' are set. This leads to a start failure if the .htaccess file contains junk.\n\nWith the attached patch, the behaviour is better. .htaccess files do not get touched when AllowOverrideList is set to None (or left on default settings).", "id": 185973, "time": "2015-10-26T10:37:19Z", "creator": "msc@contact.de", "creation_time": "2015-10-26T10:37:19Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 58528, "attachment_id": null, "is_private": false, "id": 189835, "time": "2016-03-30T13:53:03Z", "creator": "DRuggeri@primary.net", "creation_time": "2016-03-30T13:53:03Z", "text": "Thanks, Michael;\n   The patch has the right idea for sure, but we took a slightly different path to fix in trunk to make the intention of the check during request processing more clear rather than just a null check.\n\nI've committed the fix in trunk in r1737114 and proposed the fix for backport in 2.4's STATUS file.\n\nThanks!"}, {"count": 4, "text": "Bakcported to 2.4.20 in r1737366.", "bug_id": 58528, "is_private": false, "id": 189889, "time": "2016-04-01T12:37:15Z", "creator": "ylavic.dev@gmail.com", "creation_time": "2016-04-01T12:37:15Z", "tags": [], "attachment_id": null}]