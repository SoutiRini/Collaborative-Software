[{"count": 0, "tags": [], "bug_id": 44428, "text": "In FunctionMapperImpl.Function it is possible for writeExternal to fail if the\nclass has just been de-serialised and is then serialised again.\n\nIf you look at writeExternal:\n\n   public void writeExternal(ObjectOutput out) throws IOException {\n      out.writeUTF((this.prefix != null) ? this.prefix : \"\");\n      out.writeUTF(this.localName);\n      out.writeUTF(this.m.getDeclaringClass().getName());\n      out.writeUTF(this.m.getName());\n      out.writeObject(ReflectionUtil.toTypeNameArray(\n         this.m.getParameterTypes()));\n   }\n\nyou can see that it externalises the function to be invoked by using the\nreference to the Method itself.\n\nIf you look at readExternal however:\n\n   public void readExternal(ObjectInput in) throws IOException,\n         ClassNotFoundException {\n            \n      this.prefix = in.readUTF();\n      if (\"\".equals(this.prefix)) this.prefix = null;\n      this.localName = in.readUTF();\n      this.owner = in.readUTF();\n      this.name = in.readUTF();\n      this.types = (String[]) in.readObject();\n   }\n\nYou can see that it doesn't restore the Method after deserialisation. The method\nis restored if it is accessed, however if it's not and then serialisation is\nperformed writeExternal will throw a NPE (as m is still null).\n\nThe fix is to either get the method to be reconstructed as soon as\ndeserialisation completes - or perhaps to be a bit more efficient, in\nwriteExternal change it such that if m is null it externalises using the\ncomponents of the method:\n\n   public void writeExternal(ObjectOutput out) throws IOException {\n      out.writeUTF((this.prefix != null) ? this.prefix : \"\");\n      out.writeUTF(this.localName);\n      if (m == null) {\n         out.writeUTF(this.owner);\n         out.writeUTF(this.name);\n         out.writeObject(this.types);\n      } else if (this.m != null) {\n         out.writeUTF(this.m.getDeclaringClass().getName());\n         out.writeUTF(this.m.getName());\n         out.writeObject(ReflectionUtil.toTypeNameArray(\n            this.m.getParameterTypes()));\n      }\n   }", "id": 113775, "attachment_id": null, "creator": "lee.smith@mobile-j.com", "creation_time": "2008-02-15T02:36:16Z", "time": "2008-02-15T02:36:16Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 44428, "attachment_id": null, "text": "Fixed in trunk with a different patch. I went with simple that didn't duplicate code. I have proposed the patch for 6.0.x.", "id": 115473, "time": "2008-04-09T15:31:05Z", "creator": "markt@apache.org", "creation_time": "2008-04-09T15:31:05Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 44428, "text": "This bug has been fixed in svn and will be in 6.0.17 onwards.", "id": 115676, "attachment_id": null, "creator": "markt@apache.org", "creation_time": "2008-04-17T10:25:44Z", "time": "2008-04-17T10:25:44Z", "is_private": false}]