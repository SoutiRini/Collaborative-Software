[{"count": 0, "tags": [], "creator": "sebb@apache.org", "is_private": false, "text": "There seem to be rather a lot of instances where Strings and bytes are cconverted using the default charset.\n\nSince the default charset is unknown, its behaviour cannot be relied on.", "id": 147333, "time": "2011-06-21T15:47:16Z", "bug_id": 51408, "creation_time": "2011-06-21T15:47:16Z", "attachment_id": null}, {"count": 1, "tags": [], "creator": "markt@apache.org", "text": "It has been like this for many years with zero issues reported by users.", "id": 147334, "time": "2011-06-21T15:52:58Z", "bug_id": 51408, "creation_time": "2011-06-21T15:52:58Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "creator": "chris@christopherschultz.net", "text": "I object to marking this bug as INVALID, since I think it's something that should be fixed.\n\nHow about marking it \"minor\" and fixing it lazily. Just being explicit about the character set (ISO-8859-1? UTF-8?) should be easy to do and is unlikely to affect anyone.", "id": 147339, "time": "2011-06-21T16:28:53Z", "bug_id": 51408, "creation_time": "2011-06-21T16:28:53Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 51408, "attachment_id": null, "text": "What exactly needs fixing? I don't see a report from a user reporting an error. Neither do I see any analysis that demonstrates how an error may occur.\n\nGiven that the code has remained unchanged for many years without any reports of errors from a world-wide user base, I find it unlikely there is actually anything here to fix.\n\nThere is a greater risk, in my view, of a change introducing a regression. \"If it isn't broken, don't fix it.\"\n\nI have changed this to enhancement. If there has been no activity when I next come back to this, it is likely to get re-closed.", "id": 147340, "time": "2011-06-21T16:48:00Z", "creator": "markt@apache.org", "creation_time": "2011-06-21T16:48:00Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 51408, "text": "(In reply to comment #0)\n> There seem to be rather a lot of instances where Strings and bytes are\n> cconverted using the default charset.\n\nPlease be specific!\n\nSearching through the TC7 source code I found\n\n=====================================\n1) 0 wrong calls to String.getBytes()\n\nThat is\n1. Disregarding the test classes - have not looked through them at all,\n2. Disregarding some never called test code in o.a.c.tribes.membership.Constants.main()\n3. Disregading legit calls to this method, when encoding is configurable and the default encoding is used as fallback.\n\nNothing to do there.\n\n=====================================\n2) 2 places where new String(byte[]) calls might be fixed:\n\n2.1. In SSIFilter#doFilter(), the following line:\n\n   res.getWriter().write(new String(bytes));\n\nIt is some fallback code, when there is no OutputStream available, but only a writer. Is it possible to get encoding of the writer there, e.g. from content-type header?\n\nPatches are welcome. It is an odd and rare use case though.\n\n2.2. In JNDIRealm#getAttributeValue(String,Attributes)\n\n  valueString = new String((byte[]) value);\n\nI do not know JNDI API enough to comment here.\n\nThe rest are fallbacks, debug code etc.\n\n=====================================\n3) new String(byte[],int,int):\n\n3.1. WebappClassLoader#findResourceInternal()\n\n  String str = new String(binaryContent,0,pos);\n\nThat is the correct code and should stay as is. See r303915.\n\nThe rest are fallbacks, debug code etc.\n\n=====================================\n4) new FileWriter(String) or new FileWriter(String,[boolean]) instead of OutputStreamWriter + FileOutputStream\n\nIs used in one place only:\n\n4.1. in AccessLogValve.open()\n\nThis can be fixed - to add \"encoding\" configuration option for the valve. I think there was an enhancement request for that.\n\n=====================================\n\nThat is all.", "id": 147350, "attachment_id": null, "creator": "knst.kolinko@gmail.com", "creation_time": "2011-06-21T23:57:20Z", "time": "2011-06-21T23:57:20Z", "is_private": false}, {"count": 5, "tags": [], "creator": "sebb@apache.org", "text": "Sorry, I see now that the subject was misleading.\n\nI was actually referring to the calls to getBytes(Charset.defaultCharset()) which were added recently in r1138019.\n\nThere are lots more of those, for example:\n\nDigestAuthenticator.generateNonce\nJNDIRealm.compareCredentials\n\netc.", "id": 147352, "time": "2011-06-22T00:19:06Z", "bug_id": 51408, "creation_time": "2011-06-22T00:19:06Z", "is_private": false, "attachment_id": null}, {"text": "I'm reluctant to change this for 7.0.x since there is a risk it could break something and no-one has reported a bug as a result of this.\n\nI have changed these to explicitly use ISO-8859-1 for 8.0.x onwards. There are some places where UTF-8 may be a better choice in the future as standards move towards UTF-8. We can change these as users request it.", "tags": [], "creator": "markt@apache.org", "is_private": false, "count": 6, "id": 152935, "time": "2012-01-19T15:05:26Z", "bug_id": 51408, "creation_time": "2012-01-19T15:05:26Z", "attachment_id": null}]