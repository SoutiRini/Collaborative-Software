[{"count": 0, "tags": [], "bug_id": 30760, "is_private": false, "text": "ant: 1.6.2\nos: linux 2.4.26\njava: 1.4.2_05\ndb: postgresql 7.4.3\n\n- Current <sql> task behavior:\n\nWhen supplying a sql file to <sql> task any line ending in a ';'\nresults in the end of the statement, and that statement is sent to the\nrdbms.  Problems exists when a create function call contains pl/sql code\nthat has line ending ';' denoting statements within the procedure.\nWhen <sql> task encounters the ';' in the procedure only the portion of\nthe procedure up to the first line ending ';' is sent to the rdbms.\n\nEx. Procedure statement:\n\nCREATE OR REPLACE FUNCTION test () RETURNS TRIGGER AS '\n  DECLARE\n    theTime timestamp;\n  BEGIN\n    theTime := ''now'';\n    UPDATE TheTable\n      SET theTime = theTime\n      WHERE tableId = NEW.tableId;\n    RETURN NEW;\n  END;\n' LANGUAGE 'plpgsql';\n\nEx. Fragment sent to rdbms:\n\nCREATE OR REPLACE FUNCTION test () RETURNS TRIGGER AS '\n  DECLARE\n    theTime timestamp\n\nAlthough there are workarounds for this, (delimetertype=\"row\", etc),\nthey all result in reformatting the sql script.  This is very\ncumbersome if the script is auto generated from any sort of relational tool.\n\n\n- Patch:\n  i've attached a patch that fixes this issue by checking if line ending\n  ';' chars occur with a quoted expression or not.\n\n  The patch works fine on postgresql, but i have yet to test it on\n  oracle, sybase, sqlserver, etc.\n\nI'm hoping people can check this patch for issues, bugs, etc and\nhopefully this functionality can make it into future release of ant.", "id": 62192, "time": "2004-08-19T18:02:23Z", "creator": "ervandew@yahoo.com", "creation_time": "2004-08-19T18:02:23Z", "attachment_id": null}, {"count": 1, "attachment_id": 12491, "creator": "ervandew@yahoo.com", "text": "Created attachment 12491\nSQLExec.java patch", "id": 62193, "time": "2004-08-19T18:03:36Z", "bug_id": 30760, "creation_time": "2004-08-19T18:03:36Z", "tags": [], "is_private": false}, {"count": 2, "tags": [], "creator": "j_a_fernandez@yahoo.com", "attachment_id": null, "is_private": false, "id": 62330, "time": "2004-08-23T11:14:44Z", "bug_id": 30760, "creation_time": "2004-08-23T11:14:44Z", "text": "First, remember that <sql/> is not Oracle specific but generic and need to \nwork with ALL JDBC drivers.\n\nSecond, I believe you can configure <sql/> to accept exactly what plsql would \naccept, except perhaps for the treatment of $. There are swithes to control \nwhether formating should be kept, and what is the end of statement terminator \nand so on.\n\nTake a look at ALL the options. If you do not want to set them all the time, \ntake a look at <presetdef/>(sp?) on how to preset the option you use all the \ntime.\n"}, {"count": 3, "tags": [], "bug_id": 30760, "text": "well, as i stated in my initial comments, i DO realize that the <sql> task is\ndatabase independent and that although i've only tested my patch on postgres, i\nDO intend to test it on oracle, sybase, and sqlserver since the product we are\ndeveloping will will be deployed on all four.\n\nagain, as i stated in my original comments, i DO realize that there are flags on\nthe <sql> task to change delimeters and what not.  but like i said, these\nworkarounds do require changes to the sql scripts to work and i find that\nunacceptable given that many people use tools to automate the generation of the\nsql scripts, and i for one do not want to reformat those scripts after each\ngeneration just so i can run it in ant.  Especially when a simple solution such\nas the one i provided, is so easily achieved.\n\nIf there is a setting where the following two statements can coexist in a sql\nscript (without reformatting the sql itself), then an example would be\nappreciated.  But, while looking at the code for SQLExec.java, i do not see any\nway for that to work (without the patch of course).\n\nCREATE TABLE SomeTable (\n    tableId NUMERIC(16) NOT NULL,\n    anotherColumn NUMERIC(4) NOT NULL,\n    PRIMARY KEY (tableId)\n);\n\nCREATE OR REPLACE FUNCTION test () RETURNS TRIGGER AS '\n  DECLARE\n    theTime timestamp;\n  BEGIN\n    theTime := ''now'';\n    UPDATE TheTable\n      SET theTime = theTime\n      WHERE tableId = NEW.tableId;\n    RETURN NEW;\n  END;\n' LANGUAGE 'plpgsql';\n", "id": 62336, "time": "2004-08-23T14:23:18Z", "creator": "ervandew@yahoo.com", "creation_time": "2004-08-23T14:23:18Z", "is_private": false, "attachment_id": null}, {"count": 4, "attachment_id": null, "creator": "j_a_fernandez@yahoo.com", "text": "Usually PL/SQL code uses the \"//\" at begining of line to separate\nsql statements that must be processed in separate commits, but there\nis no restriction on pl/sql to have more than one DDL statement sent at once\nAFAIR (I may be wrong).\n\nWith this in mind, have you tried just giving your file with delimeter=\"//\" \ndelimetertype=\"row\" (check attribute names) and see what the Oracle JDBC driver\nwill do?\n\nOn the other hand, as every generation tool may do their particular quirks on \nthe generated code, I see no reason why you could not have a step in your \nbuilding process where the generatedfiles are preprocessed to produce \nsomething more friendly to a generic <sql/> task. \n\nI do not see why the <sql/> task needs to be maintained (and BC verified) \nagainst the whims of every generation tool that there is around.\n\nAlternatively you could subclass. Sql.java and have your own version \nspecialized for your tools and maintained by you (as oppose to us).\nThis is my main problem, who is goin to maintain all this special behaviors.\n", "id": 62338, "time": "2004-08-23T14:59:42Z", "bug_id": 30760, "creation_time": "2004-08-23T14:59:42Z", "tags": [], "is_private": false}, {"count": 5, "tags": [], "bug_id": 30760, "is_private": false, "text": "well, i'm not trying to make your life difficult, and i'm deffinetly not trying\nto turn the SQLExec.java into some monster that handles \"the whims of every\ngeneration tool that there is around\".  \n\nI do however have issues with the fact that the task is not recognizing valid\nsql.  The stored procedure example i gave is valid sql, and i can take that sql\n(unmodified) to any other database independent tool and run it with no problems.\n But i take that very same sql and give it to the <sql> task and it fails.  To\nme that is a flaw in the task, not the tool that generated the statement nor the\nstatement itself.\n\nNow, i don't mind doing the leg work and testing this against the 4 databases i\nmentioned, but won't be able to do so until later this year.  I just assumed\nthat the developers maintaining the task had unit tests for ensuring the\nfunctionality and compatability of their code and that it wouldn't be too\ndifficult to run those tests with my patch or a similar patch created with the\nsame goal in mind.\n\nIf you still think this is a one off (even though valid sql statements fail),\nthen i will stop harrassing you and just spawn off my own task.  I am surprised\nthat others are not complaining about this, with the exception of a couple\nmailing list posts i found. \n\nI REALLY DO appreciate you taking the time to consider this and giving me good\nresponses on you opinions why you don't see a need for this.\n", "id": 62339, "time": "2004-08-23T15:31:11Z", "creator": "ervandew@yahoo.com", "creation_time": "2004-08-23T15:31:11Z", "attachment_id": null}, {"count": 6, "tags": [], "text": "\nAre stored procedures part of a SQL9x standard? They are not in SQL 92 and as \nI remember Oracle PL/SQL procedures are not exactly what the newer SQL specs \ndefined. I already think we have way too many stuff which is server specific \nhardcoded on this beast like \"REM\" (for MSSQL) for example. \n\nI look at your code and I am not sure whether it will play well with every \nother JDBC out there which may or may not support X,Y or Z. What is some allow \nfor multiline strings? \n\nI wish we could define some new sql task with pluggability in mind so that \neach manufacturer could provide an ANT module (as part of the JDBC driver jar) \nthat would do the syntactic checks required for that particular driver. \n\nSo that the task just needs to identify the driver and delegate all this \nparsing issues. Then we could modularly and separately test all this stuff and\nencourage manufactures to provide certified versions of the plug-in.\n\nIt would make this big monster into something manageable and neat.\n\n", "attachment_id": null, "bug_id": 30760, "id": 62349, "time": "2004-08-23T18:12:54Z", "creator": "j_a_fernandez@yahoo.com", "creation_time": "2004-08-23T18:12:54Z", "is_private": false}, {"count": 7, "tags": [], "bug_id": 30760, "attachment_id": null, "id": 62356, "time": "2004-08-23T19:16:01Z", "creator": "ervandew@yahoo.com", "creation_time": "2004-08-23T19:16:01Z", "is_private": false, "text": "Well, i think the only goal of the <sql> task needs to be how to delimit\nstatements.  The parsing of the statement is ultimatly done by the driver and\nthe database.  The <sql> task just needs to be smart enough to determine where\none statement ends and a new one begins.  Unfortunatly the task just fails to do\nso in my example.\n\nWith that in mind the task only needs to be responsible for knowing what the\nstandard is on delimiting statements.  As far as i know that standard is ';'.\nAllowing the user to override that is obviously a necessity and no surprise that\nyou guys included it.\n\nNow, my issues is, does that ';' (or other delimiter) count as a delimiter when\nit's in an unterminated string?  I don't believe any database would consider a\nstatement containing an unterminated string valid, which is why all the other\ndatabase independent tools (which are java based just like ant) that i've tried\nwill not delimit a statement on a line ending ';' when it's enclosed in an\nunterminated string.  They will continue to parse the remainder of the statement\nuntil that string is closed and then a ';' is encountered.\n\nIt's my opinion that the <sql> task should do the same.\n\nAlso, just to clarify, i'm doing all my tesing on Postgresql, not Oracle.  If\nthis was just an Oracle specific problem, then i would be behind you 100%. \nOracle has earned it's reputation as the Microsoft of databases, and i wouldn't\nexpect you to add 1 to 101 different cases to handle quirks they tend to throw\nat people.  Although, they do own a substantial market share, and supporting\ntheir caveats is a necessity these days even in open source software.\n\n"}, {"count": 8, "attachment_id": null, "creator": "j_a_fernandez@yahoo.com", "is_private": false, "id": 62391, "time": "2004-08-24T11:40:15Z", "bug_id": 30760, "creation_time": "2004-08-24T11:40:15Z", "tags": [], "text": "\nOK, took a look at what actually your example here says and I am even more \nhorrified than before 8-O\n\nAparently in POSTGRESSQL an stored procedure is of the form:\n  \"CREATE\" ... \"AS\" <multi-line-string> \";\"\n\nThis is extremely POSTGRESS specific, it seems like. Certaintly it does not \nmatch SQL99 spec which is the one standarizing PSMs (i.e., stored procedures).\nThe truth is that as with any other programming language, there is no unique \nseparator in SQL99, you need to understand the grammar of the language to know \nwhen things end due to the presence of nested statements.\n\nWhat the current <sql/> does is a complete hack. I may be willing to accept \nthat <sql/> should be able ignore the ending char when inside a SQL string,\nwhich is the fundamental of what you provide. But we need to think not only \non '....' SQL strings, but maybe also on \".....\" SQL table names, for example.\n\nNotice that this does not mean that this will solve any of the issues you were \npretending to solve (i.e., a CREATE statement in SQL99 can have multiple \";\"s \noutside strings). But it may just happen to be enough for POSGRESS.\n"}, {"count": 9, "tags": [], "bug_id": 30760, "attachment_id": null, "id": 62429, "time": "2004-08-24T20:14:10Z", "creator": "ervandew@yahoo.com", "creation_time": "2004-08-24T20:14:10Z", "is_private": false, "text": "Ok, that is a completely acceptable response.  It' been awhile since i've done\npl/sql on any other platform, and i didn't realize that i was accounting for a\npostgres specific issue.\n\nthat still leaves the <sql> task incomplete in my opinion, but i now agree that\nmy patch is not a catch all solution, and a better approach needs to be formulated.\n\nwith that being the case, i think your pluggable approach seems like the real\nsolution to the problem.  I wouldn't necessarily rely on the dabase vendors to\nprovide their own implementations though.  I'd at least provide working tasks\nfor the major players, and the most commonly used databases (oracle, sybase,\nsqlserver, postgres, mysql, hsql, etc)."}, {"count": 10, "tags": [], "bug_id": 30760, "text": "\nAgree 100%. Any takers on proposing a design?\n", "id": 62451, "time": "2004-08-25T09:31:40Z", "creator": "j_a_fernandez@yahoo.com", "creation_time": "2004-08-25T09:31:40Z", "is_private": false, "attachment_id": null}, {"count": 11, "attachment_id": 12700, "creator": "ervandew@yahoo.com", "is_private": false, "id": 63379, "time": "2004-09-10T18:31:31Z", "bug_id": 30760, "creation_time": "2004-09-10T18:31:31Z", "tags": [], "text": "Created attachment 12700\ndiff of original 1.6.2 code and new patch"}, {"count": 12, "tags": [], "bug_id": 30760, "attachment_id": null, "id": 63380, "time": "2004-09-10T18:32:08Z", "creator": "ervandew@yahoo.com", "creation_time": "2004-09-10T18:32:08Z", "is_private": false, "text": "Ok, now i have moved beyond Postgresql and i'm now working with Postgresql,\nSybase, and SQL Server.\n\nPOSTGRES:\nWith Postgres i was able to remove my patch and use a workaround to get the\n<sql> task to feed the entire .sql file as a single statement to the database\n(by setting the delimiter to a string that never occurs in the sql script) and\nletting Postgres determine where one statement began and a new one ended.\n\nSYBASE:\nThe same senario works.\n\nSQL SERVER:\nThe work around fails.  This is because SQL Server complains that any CREATE\nVIEW statements should be sent one at a time.\n\nSO... I revisted patching the <sql> task to support delimiting the statements\nonce again.  Now that i have 3 databases to use as examples, i can now make sure\nthat i'm not creating a one off for one database vendor (which my original\nquoted expression patch was).\n\nMy new patch works similar to the first one i submitted, except now instead of\nchecking for quoted expression (postgres specific), i check for BLOCK\nstatements.  A block statement in this case is defined as one that starts with\nBEGIN and ends with END.  It also checks for nesting of other BEGIN, END pairs\nto prevent sending a statement fragment to the datbase.  The only requirement is\nthat BEGIN and END occur on a line of there own.\n\nSO, now the following work for Postgresql, Sybase, AND Sql Server (Oracle to be\ntested here next week).\n\nPOSTGRES: (only change to my original example is that the final END no longer\nhas a trailing ';'\n \n  CREATE OR REPLACE FUNCTION test () RETURNS TRIGGER AS '\n    DECLARE\n      theTime timestamp;\n    BEGIN\n      theTime := ''now'';\n      UPDATE TheTable\n        SET theTime = theTime\n        WHERE tableId = NEW.tableId;\n      RETURN NEW;\n    END\n  ' LANGUAGE 'plpgsql';\n\nSYBASE:\n\n  CREATE TRIGGER BI_Test\n  BEFORE UPDATE ON TestTable\n  REFERENCING NEW AS newRow\n  FOR EACH ROW\n  BEGIN\n    UPDATE TheTable\n      SET theTime = (SELECT GETDATE())\n      WHERE tableId = newRow.tableId;\n  END;\n\nSQL SERVER:\n\n  CREATE TRIGGER AI_Test\n  ON TestTable\n  AFTER INSERT AS\n  BEGIN\n    DECLARE @tableId NUMERIC(16);\n    SELECT @tableId = (SELECT tableId FROM Inserted);\n    Update TheTable set theTime = (SELECT GETDATE()) WHERE tableId = @tableId;\n  END;\n"}, {"count": 13, "attachment_id": null, "creator": "j_a_fernandez@yahoo.com", "text": "I would suggest taking a look at the syntax of SQL99 to see if you cover it.\n\nLooking at the syntax of PL/SQL it is much more complicated as, for example, \nfor a stored function there will be \";\" as part of specifying the RESULT TYPE\nbut before the BEGIN ... END block.\n\nAs I said is not a simple problem.\n", "id": 63588, "time": "2004-09-15T15:01:09Z", "bug_id": 30760, "creation_time": "2004-09-15T15:01:09Z", "tags": [], "is_private": false}, {"count": 14, "tags": [], "bug_id": 30760, "text": "so far it has been a very simple problem to solve.  adding the code took a\nwopping 10 minutes to do, and adding additional cases as i come across them,\ntakes only a few minutes.  if at some point the code for determining when a\ndelimiter occurs within a code block gets too big, then i'll break it out by\ndatabase and add an attribute to <sql> for the target database.\n\nsince no one else is taking any initiative to solve this, i will just maintain\nit for my own project and stop pressing the issue here.\n\n\"work is the path of least resistance\"", "id": 63610, "time": "2004-09-15T17:23:18Z", "creator": "ervandew@yahoo.com", "creation_time": "2004-09-15T17:23:18Z", "is_private": false, "attachment_id": null}]