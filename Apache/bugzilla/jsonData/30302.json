[{"count": 0, "tags": [], "bug_id": 30302, "text": "I am loading cells on a hour base. The cells are formatted as TT.MM.JJJJ hh:mm, \nLanguage is German.\nThe Sheet looks like this\n01.01.2005 00:00\n01.01.2005 01:00\n01.01.2005 02:00\netc.\n\nThe Cells are calculated like this: =(A1+$D$1), where d1 is a helper cell that \nholds an hour 01:00 formatted hh:mm\n\nThe Sheet has rows for one year (365*24=8760 Rows).\n\nI loop through all the rows an fetch the date and on the row of Sun Apr 10 I \nget the Date as 10:59:59 CEST 2005 Numeric Val= 38452.458333327544, instead of \n11:00:00!\nAfter this Date all the times are wrong, it means also, I get on that day 25 \nvalues back and everything screws up!\n\nKind reagrds \nHeinz", "id": 61076, "time": "2004-07-24T06:31:05Z", "creator": "heinzernst@yahoo.com", "creation_time": "2004-07-24T06:31:05Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "creator": "elong@taylor.com", "is_private": false, "text": "I am having this problem too. I use the auto generate cell function in excel. I\nbasic copy time of one cell and paste to other cells. The original cell import\nok, however the other cells read 1 sec less. ", "id": 74396, "time": "2005-05-03T19:38:50Z", "bug_id": 30302, "creation_time": "2005-05-03T19:38:50Z", "attachment_id": null}, {"count": 2, "attachment_id": 23034, "bug_id": 30302, "text": "Created attachment 23034\nXLS where POI reads dates incorrectly\n\ncell.getDateCellValue() returns xx:59:59 instead of xx:00:00. Not on every row, rather randomly...", "id": 123369, "time": "2008-12-17T06:05:10Z", "creator": "toni.helenius@lut.fi", "creation_time": "2008-12-17T06:05:10Z", "tags": [], "is_private": false}, {"count": 3, "tags": [], "bug_id": 30302, "text": "I can confirm this bug. I attached a test XLS for you guys so you can hurry up the fixing. No need for extra 4 years anymore! :)", "id": 123370, "time": "2008-12-17T06:06:03Z", "creator": "toni.helenius@lut.fi", "creation_time": "2008-12-17T06:06:03Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 30302, "attachment_id": null, "text": "I can't unzip the attached file. Please re-attach.\n\nYegor", "id": 123374, "time": "2008-12-17T11:37:04Z", "creator": "yegor@dinom.ru", "creation_time": "2008-12-17T11:37:04Z", "is_private": false}, {"attachment_id": 23035, "tags": [], "creator": "toni.helenius@lut.fi", "is_private": false, "count": 5, "id": 123378, "time": "2008-12-17T13:21:51Z", "bug_id": 30302, "creation_time": "2008-12-17T13:21:51Z", "text": "Created attachment 23035\nXLS where POI reads dates incorrectly (repack)"}, {"count": 6, "attachment_id": null, "bug_id": 30302, "text": "It's not a POI bug, rather a difference in Excel vs Java date format. When formatting seconds, Excel rounds the milliseconds part while Java does not.\n\nChange format of the date cells in Excel to show milliseconds: m/d/yyyy h:mm.000\n\nExcel outputs the top ten cells as follows:\n\n1/1/2008 0:00.000\n1/1/2008 1:00.000\n1/1/2008 2:00.000\n1/1/2008 2:59.985\n1/1/2008 3:59.980\n1/1/2008 4:59.975\n1/1/2008 5:59.970\n1/1/2008 6:59.965\n1/1/2008 7:59.960\n1/1/2008 8:59.955\n\nJava prints the same:\n\n\n        SimpleDateFormat fmt = new SimpleDateFormat(\"M/d/yyyy h:mm.SSS\");\n\n        HSSFWorkbook book = new HSSFWorkbook(new FileInputStream(\"poi_bug.xls\"));\n        HSSFSheet sheet = book.getSheetAt(0);\n\n        for (int i = 1; i <= 10; i++) {\n            HSSFCell cell = sheet.getRow(i).getCell(0);\n            System.out.println(fmt.format(cell.getDateCellValue()) );\n        }\n\n\n1/1/2008 12:00.000\n1/1/2008 1:00.000\n1/1/2008 2:00.000\n1/1/2008 2:59.985\n1/1/2008 3:59.980\n1/1/2008 4:59.975\n1/1/2008 5:59.970\n1/1/2008 6:59.965\n1/1/2008 7:59.960\n1/1/2008 8:59.955\n\n\nThen remove milliseconds from the format:\n\nExcel (m/d/yyyy h:mm)\n\n1/1/2008 0:00\n1/1/2008 1:00\n1/1/2008 2:00\n1/1/2008 3:00\n1/1/2008 4:00\n1/1/2008 5:00\n1/1/2008 6:00\n1/1/2008 7:00\n1/1/2008 8:00\n1/1/2008 9:00\n\nJava (M/d/yyyy h:mm)\n1/1/2008 12:00\n1/1/2008 1:00\n1/1/2008 2:00\n1/1/2008 2:59\n1/1/2008 3:59\n1/1/2008 4:59\n1/1/2008 5:59\n1/1/2008 6:59\n1/1/2008 7:59\n1/1/2008 8:59\n\nAs you see, Excel date formatter rounds the milliseconds part while Java just strips it off. \n\nA simple workaround is to use a wrapper that rounds milliseconds:\n\n\n   public static Date getRoundedDate(double date) {\n       int SECONDS_PER_DAY = 24*3600;\n\n       int wholeDays = (int)Math.floor(date);\n       double ms = date - wholeDays;\n\n       /**\n        * round the time part to seconds\n        */\n       int millisecondsInDay = (int)Math.round(SECONDS_PER_DAY*ms)*1000;\n\n       Calendar calendar = new GregorianCalendar(); // using default time-zone\n       org.apache.poi.ss.usermodel.DateUtil.setCalendar(calendar, wholeDays, millisecondsInDay, false);\n       return calendar.getTime();\n   }\n\n        HSSFWorkbook book = new HSSFWorkbook(new FileInputStream(\"poi_bug/poi_bug.xls\"));\n        HSSFSheet sheet = book.getSheetAt(0);\n\n        SimpleDateFormat fmt = new SimpleDateFormat(\"M/d/yyyy h:mm\");\n\n        for (int i = 1; i <= 10; i++) {\n            HSSFCell cell = sheet.getRow(i).getCell(0);\n            System.out.println(fmt.format(cell.getDateCellValue()) + \"\\t\" + fmt.format(getRoundedDate(cell.getNumericCellValue())));\n        }\n\n\n1/1/2008 12:00\t1/1/2008 12:00\n1/1/2008 1:00\t1/1/2008 1:00\n1/1/2008 2:00\t1/1/2008 2:00\n1/1/2008 2:59\t1/1/2008 3:00\n1/1/2008 3:59\t1/1/2008 4:00\n1/1/2008 4:59\t1/1/2008 5:00\n1/1/2008 5:59\t1/1/2008 6:00\n1/1/2008 6:59\t1/1/2008 7:00\n1/1/2008 7:59\t1/1/2008 8:00\n1/1/2008 8:59\t1/1/2008 9:00\n\n\nRegards,\nYegor", "id": 123511, "time": "2008-12-24T09:23:48Z", "creator": "yegor@dinom.ru", "creation_time": "2008-12-24T09:23:48Z", "tags": [], "is_private": false}]