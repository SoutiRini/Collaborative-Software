[{"count": 0, "tags": [], "creator": "ceki@apache.org", "attachment_id": null, "is_private": false, "id": 29394, "time": "2003-01-15T11:51:34Z", "bug_id": 16105, "creation_time": "2003-01-15T11:51:34Z", "text": "Subject: RE: AsyncAppender Waiting for BoundedFIFO to Empty\nTo: <log4j-dev@jakarta.apache.org>\nCc: \"development\" <development@afterbot.com> \n\n\nIf anyone is interested, we have solved the problem.  It appears that\nthe dispatcher thread is dying in AsyncAppender class which causes the\nBoundedFIFO buffer to be filled with LoggingEvents and those events are\nnever consumed.  The interesting part is how the Dispatcher thread died.\nThe thread will die if a null object is logged (for example, the\ngetMessage() on a NullPointerException will return null) and the\nXMLLayout class is used.  The Formatter object does not check for a null\nmessage and performs a length() on the message thus resulting in an\nexception and the death of the thread.\n \nTo resolve the problem, we wrote our own XMLLayout class that will not\nallow a null to be passed to the Formatter class and everything appears\nto be working.\n \n-Matt\n\n\n-----Original Message-----\nFrom: Matt Bates \nSent: Wednesday, January 08, 2003 6:50 PM\nTo: 'log4j-dev@jakarta.apache.org'\nSubject: AsyncAppender Waiting for BoundedFIFO to Empty\n\n\n\nI am using log4j 1.2.4 and running into a problem where the append\nmethod in the AsyncAppender is in a wait state because the BoundedFIFO\nis full (see code snippet of AsyncAppender class below).  Because of the\nsynchronization, other log messages can not be added to the queue and\nthey are in a wait state as well ... basically bringing the system\n(weblogic 6.1 SP4 on JDK 1.3.1) to a halt.  \n \nCan anyone tell me why this is happening?  It does not happen very\nfrequent but when more load (i.e. more logs) is put on the system, it\nappears more often.  Our config XML contains 3 appenders with one\nwriting to a ConsoleAppender, one writing to the\nDailyRollingFileAppender, and one writing to the AsyncAppender.  Is it\nas simple as increasing the BoundedFIFO size or is that just masking the\nproblem.\n \nthe method that is causing the block in AsyncAppender:\n \nvoid append(LoggingEvent event) {\n --- omitted ---\n synchronized(bf) {\n    while(bf.isFull()) {\n     try {\n       //LogLog.debug(\"Waiting for free space in buffer, \"+bf.length());\n       bf.wait();\n     } catch(InterruptedException e) {\n       if(!interruptedWarningMessage) {\n         interruptedWarningMessage = true;\n         LogLog.warn(\"AsyncAppender interrupted.\", e);\n       } else {\n         LogLog.warn(\"AsyncAppender interrupted again.\");\n     }\n   }\n\n\n --- omitted ---\n   \n \nThank you for any comments/suggestions you may have\n \nMatthew Bates\nAfterBOT, Inc.\n4351 Shackleford Road\nNorcross, GA 30093"}, {"count": 1, "tags": [], "text": "The Transform class has been modified to check for and handle null inputs.", "attachment_id": null, "bug_id": 16105, "id": 68375, "time": "2004-12-13T17:18:33Z", "creator": "yoavs@computer.org", "creation_time": "2004-12-13T17:18:33Z", "is_private": false}]