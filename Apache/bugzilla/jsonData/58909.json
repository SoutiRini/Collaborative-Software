[{"count": 0, "tags": [], "text": "Created attachment 33476\nproposed patch\n\nHi all,\nI noticed a performance problem using the cloneSheet method of the XSSFWorbook class.\nCurrently, the cloneSheet generates an unique name for the cloned sheet.\nHowever, it is common that the generated name has to be changed later to something more meaningful.\nSo, a typical use is the following:\n\nXSSFSheet cloned = wb.cloneSheet(idx);\nint origCopyIndex = wb.getSheetIndex(cloned);\nwb.setSheetName(origCopyIndex, \"OtherName\");\n\nIn our application we use this pattern and we have noticed a huge performance hit in the setSheetName method because the setSheetName triggers the check of all the formulas in the workbook to update references to the sheet whose name was changed. When the workbook has a lot of cells this operation can last a significant amount of time.\n\nHowever, this operation on a cloned sheet is completely not necessary because the generated name won't be in any formula in the workbook.\n\nWhat I suggest is to add another version of the clonedSheet method for creating a cloned version with a given name. In this way, it is possible to avoid the setSheetName.\n\nSomething like:\n\n/**\n  * Create an XSSFSheet from an existing sheet in the XSSFWorkbook.\n  *  The cloned sheet is a deep copy of the original but with a new given\n  *  name.\n  *\n  * @return XSSFSheet representing the cloned sheet.\n  * @throws IllegalArgumentException if the sheet index or the sheet\n  *         name is invalid\n  * @throws POIXMLException if there were errors when cloning\n  */\n  public XSSFSheet cloneSheet(int sheetNum, String newName)\n\n\nI attach a patch that includes the newly added method on the XSSFWorkbook class and some unit tests. I already checked that all existing tests still succeed after the application of the patch.\n\nYou can evaluate if this method should be pull up to the Workbook interface (in this case it is necessary to provide implementations for the other formats).", "is_private": false, "id": 187895, "creator": "lucamartini@tagetik.com", "time": "2016-01-22T10:38:42Z", "bug_id": 58909, "creation_time": "2016-01-22T10:38:42Z", "attachment_id": 33476}, {"count": 1, "tags": [], "creator": "lucamartini@tagetik.com", "is_private": false, "text": "Created attachment 33477\nproposed patch in tar.gz.format\n\nI'm sorry but in my previous comment I uploaded a patch in the Eclipse format. This new attachment is in the requested format (generated by the patch.xml ant script).", "id": 187896, "time": "2016-01-22T10:55:57Z", "bug_id": 58909, "creation_time": "2016-01-22T10:55:57Z", "attachment_id": 33477}, {"count": 2, "tags": [], "text": "This was applied via r1737237 in time for the upcoming 3.15-beta1. For now only XSSF has this method. I have adjusted and combined the unit-tests somewhat. \n\nThanks for the Patch!", "is_private": false, "id": 189857, "creator": "dominik.stadler@gmx.at", "time": "2016-03-31T13:33:37Z", "bug_id": 58909, "creation_time": "2016-03-31T13:33:37Z", "attachment_id": null}, {"count": 3, "tags": [], "creator": "onealj@apache.org", "attachment_id": null, "text": "Either patch format (or github pull request) is acceptable.", "id": 189865, "time": "2016-03-31T16:14:05Z", "bug_id": 58909, "creation_time": "2016-03-31T16:14:05Z", "is_private": false}]