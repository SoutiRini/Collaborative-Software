[{"count": 0, "attachment_id": null, "bug_id": 41610, "is_private": false, "id": 99369, "time": "2007-02-14T05:48:20Z", "creator": "bmaras@flaht.eu", "creation_time": "2007-02-14T05:48:20Z", "tags": [], "text": "Under specific circumstances, the mod_jk adds a content-length:0 header, even if\nthere was already another content-length:0 header.\n\nTomcat seems to handle it without problem. But if tomcat forwards the packet to\nanother Apache, this second Apache sends an http 400 error (incorrect request),\ndue to this duplicate header.\n\nWe have this behavior when an empty (i.e. without any body) POST request is sent\nby Internet Explorer. This happens when IE tries to authenticate through NTLM\nwith a POST request.\n\nWe have the following architecture :\nServer 1 :\n- A: a web application (Jahia 5.0.1_02) running under tomcat 5.5.17 \n- B: an apache 2.0.40 running on the same server, with mod_jk 1.2.20\nServer 2 :\n- C: a web application (Jahia cache server r370) running under tomcat 5.5.16\n- D: an apache 2.0.40 running on the same server, with mod_jk 1.2.20\nBoth servers run with Linux Redhat.\n\nTomcat A is configured to authenticate users through NTLM, with the java library\njcifs 1.2.11\nTomcat C behaves (roughly) as a reverse-proxy : it sends the packets to Apache B.\nApache B and D have been set up to implement optional SSL encryption.\nNTLM authentication is made with Active Directory 2003.\n\nIf I send my requests to Apache D, I have the http 400 error with every POST\nrequest. By sniffing the packets, I discovered that this http error was sent by\nApache B, and not D.\nIf I send my requests to Tomcat C, I don't have any http 400 errors.\nThe duplicate content-length:0 is created by Apache D, accepted by Tomcat C, but\nrefused by Apache B.\n\nThese http errors happen with or without SSL encryption.\nThey do not happen if I disable NTLM authentication on Tomcat A, probably\nbecause no empty POST requests are sent."}, {"count": 1, "tags": [], "bug_id": 41610, "attachment_id": null, "id": 99371, "time": "2007-02-14T05:56:14Z", "creator": "bmaras@flaht.eu", "creation_time": "2007-02-14T05:56:14Z", "is_private": false, "text": "We tried an upgrade to Apache 2.0.59 (with mod_jk-apache-2.0.58.so) and Apache\n2.2.4 (with mod_jk-apache-2.2.3.so) : not better."}, {"count": 2, "tags": [], "bug_id": 41610, "attachment_id": 19590, "id": 99373, "time": "2007-02-14T06:14:05Z", "creator": "bmaras@flaht.eu", "creation_time": "2007-02-14T06:14:05Z", "is_private": false, "text": "Created attachment 19590\nPacket captures of the duplicate content-length:0\n\nThese are 4 packet captures that follow a single packet through the servers :\n\nclient -> Apache D -> Tomcat C -> Apache B -> Tomcat A\n\nWe can see in these captures that :\n- the client sends only one content-lenth:0 header\n- Apache D sends duplicate headers\n- Tomcat C re-sends the same duplicate headers\n- Apache B rejects the request and does not send anything to Tomcat A"}, {"count": 3, "tags": [], "bug_id": 41610, "attachment_id": 19591, "id": 99375, "time": "2007-02-14T06:23:33Z", "creator": "bmaras@flaht.eu", "creation_time": "2007-02-14T06:23:33Z", "is_private": false, "text": "Created attachment 19591\nProposed patch in mod_jk.c\n\nOur problem has been solved with the following patch in mod_jk.c\n\nThe code seems to look for an existing content-length header before adding the\ncontent-length:0 header.\nSo it loops through the headers and compares them to the string\n\"content-length\". But the comparison was made on the header values. We changed\nit to make the comparison on the header names."}, {"count": 4, "tags": [], "text": "Thanks for the analysis. I committed you patch. It will be part of 1.2.21.", "attachment_id": null, "bug_id": 41610, "id": 99414, "time": "2007-02-15T05:16:37Z", "creator": "rainer.jung@kippdata.de", "creation_time": "2007-02-15T05:16:37Z", "is_private": false}, {"count": 5, "tags": [], "text": "YEPLA! Our first committed bugfix in such a great project !\n\nThanks Rainer for such a quick answer and thanks for all the work done by the \napache team. The patch has been backported for our use in version 1.2.19 and \nalso works without any problem. We didn't study porting this patch to 2.2.x \nversion but it seems to have a similar behaviour.\n\nPS for boris :D APERO !!", "is_private": false, "bug_id": 41610, "id": 99418, "time": "2007-02-15T07:31:11Z", "creator": "step.pubinfo@laposte.net", "creation_time": "2007-02-15T07:31:11Z", "attachment_id": null}, {"count": 6, "tags": [], "text": "I applied the fix to the Apache 1.3 and 2 code lines of mod_jk. The Apache 2\ncode line fixes it for 2.0 and 2.2.", "attachment_id": null, "bug_id": 41610, "id": 99444, "time": "2007-02-15T11:06:18Z", "creator": "rainer.jung@kippdata.de", "creation_time": "2007-02-15T11:06:18Z", "is_private": false}, {"count": 7, "tags": [], "text": "Move a couple of fixed JK issues from resolved to closed.", "attachment_id": null, "bug_id": 41610, "id": 112392, "time": "2008-01-01T16:32:31Z", "creator": "rainer.jung@kippdata.de", "creation_time": "2008-01-01T16:32:31Z", "is_private": false}]