[{"count": 0, "tags": [], "bug_id": 54904, "attachment_id": null, "text": "Since the last update of the JRE the autoSizeColumn method in org.apache.poi.xssf.usermodel.XSSFSheet doesn't work anymore. \n\nIt uses the method getCellWidth in org.apache.poi.ss.util.SheetUtil. This method uses the getBounds() Method of java.awt.font.TextLayout. And this delivers different values for JDK 1.6.43 and JDK 1.6.45", "id": 166937, "time": "2013-04-29T13:47:22Z", "creator": "jens.popp@process-relations.com", "creation_time": "2013-04-29T13:47:22Z", "is_private": false}, {"count": 1, "tags": [], "creator": "apache@gagravarr.org", "attachment_id": null, "is_private": false, "id": 166938, "time": "2013-04-29T13:57:15Z", "bug_id": 54904, "creation_time": "2013-04-29T13:57:15Z", "text": "This sounds like it might be a JRE bug not a POI bug, in which case you'd need to report it to OpenJDK or Oracle (depending on who's JRE you use)"}, {"count": 2, "tags": [], "bug_id": 54904, "is_private": false, "text": "I had the same effect. It vanished when I set the font name to \"Arial\" explicitly in the CellStyle I use for the header row of my table.\n\n...\nFont font = workbook.createFont();\nfont.setFontName(\"Arial\");\nstyle.setFont(font);\n...", "id": 167165, "time": "2013-05-13T09:40:57Z", "creator": "iywb@cajo.de", "creation_time": "2013-05-13T09:40:57Z", "attachment_id": null}, {"count": 3, "tags": [], "creator": "jens.popp@process-relations.com", "attachment_id": null, "is_private": false, "id": 167367, "time": "2013-05-23T07:35:41Z", "bug_id": 54904, "creation_time": "2013-05-23T07:35:41Z", "text": "The problem is only with the fonts Calibri and Cambria.\n\nExchanging the fontmanager.dll in jre/bin with an older version also solves the problem. So it is a JRE problem with Oracle JRE 1.6.0_45 and 1.7.0_21.\n\nI filed a bug at oracle (30.4.) but it is still invisible (at least for me)\n\nhttp://bugs.sun.com/bugdatabase/view_bug.do?bug_id=9002214"}, {"count": 4, "tags": [], "creator": "jens.popp@process-relations.com", "attachment_id": null, "is_private": false, "id": 167368, "time": "2013-05-23T07:40:42Z", "bug_id": 54904, "creation_time": "2013-05-23T07:40:42Z", "text": "To test your JRE use this bit of code. It prints the font name and a number. If the number is 0.0 than autosize won't work for that font.\n\n\nfinal java.awt.GraphicsEnvironment gEnv =\n\tjava.awt.GraphicsEnvironment.getLocalGraphicsEnvironment();\nfinal String envfonts[] = gEnv.getAvailableFontFamilyNames();\nfor(String font : envfonts) {\n\tfinal String txt = \"Test\";\n\tfinal java.text.AttributedString str = new java.text.AttributedString(txt);\n\tstr.addAttribute(java.awt.font.TextAttribute.FAMILY, font, 0, txt.length());\n\tstr.addAttribute(java.awt.font.TextAttribute.SIZE, (float) 14.0);\n\tstr.addAttribute(java.awt.font.TextAttribute.WEIGHT, java.awt.font.TextAttribute.WEIGHT_BOLD, 0, txt.length());\n\tfinal java.awt.font.FontRenderContext fontRenderContext = new java.awt.font.FontRenderContext(null, true, true);\n\tfinal java.awt.font.TextLayout layout = new java.awt.font.TextLayout(str.getIterator(), fontRenderContext);\n\tSystem.out.println(font + \" : \" + layout.getBounds().getWidth());\n}"}]