[{"count": 0, "tags": [], "bug_id": 24683, "attachment_id": null, "text": "In a module for 1.3, namely auth_mod_ldap from www.rudedog.org, there seems to be a  \nbug. The bug is best described at  \nhttp://www.rudedog.org/pipermail/auth_ldap/2001-December/043545.html  \nand I quote:  \n<quote>  \nThe problem was happening apparently because in  \nldap_authenticate_basic_user(), when the module binds as the actual user  \ntrying to authenticate, the boundas flag of the LDAPconnection struct  \nwas being set to bind_user.  However, the bounddn member was not being  \nchanged - so it was still set to the AuthLDAPBindDN value from the  \nfirst, initial search bind.  Then on the next authentication by that  \nhttpd child process, in auth_ldap_find_connection() bounddn is compared  \nto the configuration sec->binddn value (AuthLDAPBindDN) and since they  \nmatch, boundas is set to bind_system.  Then finally in  \nauth_ldap_connect_to_server() since boundas is now set to bind_system,  \nit returns immediately without rebinding - however the LDAP server  \nconnection at this point is still bound as the last successfully  \nauthenticated user, and it is as that DN that the directory search is  \nbeing done for the new user.  If that DN doesn't have permissions to see  \nthe new non-public user that is trying to authenticate, the search fails  \nand the new user can't authenticate.  \n  \nThe non-public user would be successful if he/she were the first user to  \nauthenticate via that httpd child process, because for the very first  \nsearch, it _would_ bind as AuthLDAPBindDN.  What was interesting was  \nthat if the last user to successfully authenticate on that particular  \nhttpd child process was the same non-public user currently trying to  \nauthenticate, the authentication would succeed - because a DN typically  \nhas permissions to search for and find itself!  \n  \nThe patch basically just ensures that when boundas is set to bind_user,  \nbounddn is set to the user's DN, and when boundas is set to bind_none,  \nbounddn is set to NULL.  I also added the PID to the debug error output  \nfor the failed search message.  \n</quote>  \n  \nHowever, the patch that Brent Putnam wrote, never made it to verison 1.6.0 of the module,  \nalthough the patch is from december 2001.   \n  \nIt seems that the same problem persists in the mod_auth_ldap module distributed with 2.0.44 \n(I tried Suse Linux 8.2). \n \nFurthermore, it seems that the problem not only occurs when binding with AuthLdapBindDN, \nbut also when binding anonymously. I did various traces of traffic to port 389 and it seems \nthat this is the same problem. What happens is that you login succesfully as UserA, but then \neven in another realm, as UserB, you can't login. However, this is ONLY a problem if UserA \ncan't see UserB - it seems that in many public directory services, users can see eachother and \nthen the problem is not noticed. \n \nPlease find the patch in above URL and apply it to the 2.0 code. However, the patch in above \nurl didn't work for me, and Brent sent me a modified auth_ldap.c, which I diffed against the \noriginal. To state clearly onxe again: this is a patch agains auth_ldap.c of the mod_auth_ldap \nmodule 1.6.0 from rudedog.org, it's NOT a patch against the 2.0 code ! \n \nace@desktop:/new/home/ace/authldap> cat \npatch_for_auth.ldap.c-1.6.0-by-brent.putnam.patch \n \n334c334 \n<       (sec->binddn && l->bounddn && strcmp(sec->binddn, l->bounddn) != 0)) \n--- \n>       (sec->binddn && l->bounddn && strcmp(sec->binddn, l->bounddn) != 0)) { \n336c336,338 \n<     else \n--- \n>       free(l->bounddn); \n>       l->bounddn = NULL; \n>     } else \n609c611 \n<                        \"Search must return exactly 1 entry; found \" \n--- \n>                        \"{%d} Search must return exactly 1 entry; found \" \n611c613 \n<                        count, filtbuf, r->uri); \n--- \n>                        (int)getpid(), count, filtbuf, r->uri); \n656d657 \n<   sec->ldc->boundas = bind_user; \n663a665,667 \n>   } else { \n>   sec->ldc->boundas = bind_user; \n>   sec->ldc->bounddn = strdup(sec->dn); \n \n------ \n \nI hope this is usefull for you. \nThx in advance for considering fixing the bug! \n \n_Ace", "id": 47305, "time": "2003-11-13T13:46:02Z", "creator": "apache-dev@suares.nl", "creation_time": "2003-11-13T13:46:02Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 24683, "attachment_id": null, "is_private": false, "id": 47374, "time": "2003-11-14T20:36:14Z", "creator": "tjeffers@iquest.net", "creation_time": "2003-11-14T20:36:14Z", "text": "This sounds very similar to the problem I am having with the \"require group\" \ndirective. I have added my thoughts and possible code fix to bug report 17599."}, {"count": 2, "tags": [], "bug_id": 24683, "attachment_id": null, "text": "Is it possible to repost the patch as a unified diff (diff -u)? - as the\nattached patch is for the v1.6.0 module, and not for v2.0, I have to apply it by\nhand, and a normal patch like this is difficult to read.", "id": 48767, "time": "2003-12-09T22:36:27Z", "creator": "minfrin@sharp.fm", "creation_time": "2003-12-09T22:36:27Z", "is_private": false}, {"count": 3, "tags": [], "creator": "apache-dev@suares.nl", "is_private": false, "text": "Created attachment 9473\nsame diff but unfied.", "id": 48772, "time": "2003-12-09T23:12:12Z", "bug_id": 24683, "creation_time": "2003-12-09T23:12:12Z", "attachment_id": 9473}, {"count": 4, "tags": [], "bug_id": 24683, "attachment_id": null, "text": "Just looked at the patch, and the code in v2.0 - the code was changed quite\ndrastically, and I cannot find any reference to the variable names in the Apache\ncode. Can you post the patched auth_ldap.c as you have it in its entirety, I'll\ngo through it and see if I can find the corresponding piece of code in Apache...", "id": 48773, "time": "2003-12-09T23:24:09Z", "creator": "minfrin@sharp.fm", "creation_time": "2003-12-09T23:24:09Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 24683, "attachment_id": 9474, "text": "Created attachment 9474\nfully patched 1.6.0 auth_ldap.c", "id": 48777, "time": "2003-12-10T00:17:57Z", "creator": "apache-dev@suares.nl", "creation_time": "2003-12-10T00:17:57Z", "is_private": false}, {"count": 6, "tags": [], "bug_id": 24683, "attachment_id": null, "text": "For version 2.x, I have added more information on this issue in bug 27134.\n(I have created a new bug since component/version are different).\nJust to let you know.", "id": 52733, "time": "2004-02-21T15:30:10Z", "creator": "dgl@softec.lu", "creation_time": "2004-02-21T15:30:10Z", "is_private": false}, {"text": "There is a new patch for the 1.3 version and an explanation at \nhttp://www.suares.com/auth_ldap \n \n ", "tags": [], "creator": "apache-dev@suares.nl", "attachment_id": null, "count": 7, "id": 52738, "time": "2004-02-21T17:40:04Z", "bug_id": 24683, "creation_time": "2004-02-21T17:40:04Z", "is_private": false}, {"count": 8, "tags": [], "bug_id": 24683, "attachment_id": null, "text": "Please try the patch at http://nagoya.apache.org/bugzilla/show_bug.cgi?id=27748\nand tell me if it fixes this problem. This patch has been applied to v2.1.0-dev,\nand awaits backporting to v2.0.50-dev.\n", "id": 57744, "time": "2004-05-20T22:55:07Z", "creator": "minfrin@sharp.fm", "creation_time": "2004-05-20T22:55:07Z", "is_private": false}, {"count": 9, "tags": [], "creator": "minfrin@sharp.fm", "attachment_id": null, "id": 57823, "time": "2004-05-21T15:51:27Z", "bug_id": 24683, "creation_time": "2004-05-21T15:51:27Z", "is_private": false, "text": "\n\n*** This bug has been marked as a duplicate of 27748 ***"}]