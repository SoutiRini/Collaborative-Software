[{"count": 0, "tags": [], "bug_id": 8624, "is_private": false, "id": 15045, "attachment_id": null, "creator": "avik@apache.org", "creation_time": "2002-04-29T14:58:32Z", "time": "2002-04-29T14:58:32Z", "text": " "}, {"text": "Created attachment 1733\nPatch file", "tags": [], "creator": "avik@apache.org", "attachment_id": 1733, "count": 1, "id": 15046, "time": "2002-04-29T14:59:37Z", "bug_id": 8624, "creation_time": "2002-04-29T14:59:37Z", "is_private": false}, {"count": 2, "tags": [], "creator": "avik@apache.org", "text": "Created attachment 1734\nNew File added", "id": 15047, "time": "2002-04-29T15:00:49Z", "bug_id": 8624, "creation_time": "2002-04-29T15:00:49Z", "is_private": false, "attachment_id": 1734}, {"count": 3, "tags": [], "bug_id": 8624, "attachment_id": null, "text": "I will commit tonight.", "id": 15058, "time": "2002-04-29T16:54:31Z", "creator": "poi-support@buni.org", "creation_time": "2002-04-29T16:54:31Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 8624, "is_private": false, "id": 15063, "attachment_id": null, "creator": "avik@apache.org", "creation_time": "2002-04-29T17:46:54Z", "time": "2002-04-29T17:46:54Z", "text": "Add the following to createPtg(byte [] data, int offset) in Ptg.java . Sorry, \ncouldnt figure how to create an incremental patch, full patch takes too much \ntime. \n------------------------------------------------------------------------------\n case NumberPtg.sid :\n                retval = new NumberPtg(data, offset);\n                break;\n\n------------------------------------------------------------------------------\nAlso, add the following to testcases/../../usermodel/TestFormulas.java .. the \ntest writes correctly, still working on the read, which works, except for the \nfact that one needs to take care of the fact that anything written as 1.10 will \ncome back as 1.1\n-------------------------------------------------------------------------------\npublic void testFloat()\n    throws Exception {\n        String operator = \"+\";\n        short            rownum = 0;\n        File file = File.createTempFile(\"testFormulaFloat\",\".xls\");\n        FileOutputStream out    = new FileOutputStream(file);\n        HSSFWorkbook     wb     = new HSSFWorkbook();\n        HSSFSheet        s      = wb.createSheet();\n        HSSFRow          r      = null;\n        HSSFCell         c      = null;\n        \n            for (short x = 1; x < Short.MAX_VALUE && x > 0; x=(short)(x*2)) {\n            r = s.createRow((short) x);\n\n            for (short y = 1; y < 256 && y > 0; y++) {\n\n                c = r.createCell((short) y);\n                c.setCellFormula(\"\" + (100*x)+\".\"+y + operator + (10000*y)\n+\".\"+x);\n                \n            }\n        }\n        \n        wb.write(out);\n        out.close();\n        assertTrue(\"file exists\",file.exists());\n              \n        \n    }\n\n-------------------------------------------------------------------------------"}, {"count": 5, "tags": [], "bug_id": 8624, "text": "applied, please cross check (Also added some new code for functionions)", "id": 15090, "attachment_id": null, "creator": "poi-support@buni.org", "creation_time": "2002-04-30T03:59:49Z", "time": "2002-04-30T03:59:49Z", "is_private": false}]