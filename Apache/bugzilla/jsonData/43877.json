[{"count": 0, "tags": [], "bug_id": 43877, "attachment_id": null, "is_private": false, "id": 110620, "time": "2007-11-15T16:51:34Z", "creator": "tishikawa@gbcc.co.jp", "creation_time": "2007-11-15T16:51:34Z", "text": "1. Create a XLS with Excel 2000 and add 58 checkbox controls \n2. Load the file with HSSFWorkbook(), and save with HSSFWorkbook#write()\n3. Open the saved file with Excel, appears an alert \"Uable to read file\" \n\nThis problem is seems same as:\nhttp://issues.apache.org/bugzilla/show_bug.cgi?id=39512"}, {"count": 1, "attachment_id": 21134, "bug_id": 43877, "is_private": false, "id": 110621, "time": "2007-11-15T16:53:24Z", "creator": "tishikawa@gbcc.co.jp", "creation_time": "2007-11-15T16:53:24Z", "tags": [], "text": "Created attachment 21134\nxls has 58 controls"}, {"count": 2, "attachment_id": 21135, "bug_id": 43877, "text": "Created attachment 21135\nsaved xls", "id": 110622, "time": "2007-11-15T16:54:26Z", "creator": "tishikawa@gbcc.co.jp", "creation_time": "2007-11-15T16:54:26Z", "tags": [], "is_private": false}, {"count": 3, "tags": [], "creator": "apache@gagravarr.org", "text": "Can you confirm if 58 controls is the point where the problem kicks in?\n\n(i.e. does a sheet with 57 controls save and re-open just fine, or is it some\nsmaller number where that's the case?)", "id": 110641, "time": "2007-11-16T07:28:11Z", "bug_id": 43877, "creation_time": "2007-11-16T07:28:11Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "creator": "tishikawa@gbcc.co.jp", "is_private": false, "text": "Yes, I confirmed that no problem in some case about 30 to 57 controls.\n\nBut another confirmer in a japanese communitiy said:\nLess than 59 controls: fine\n59 controls: problem\n(however no evidence)", "id": 110691, "time": "2007-11-18T16:56:24Z", "bug_id": 43877, "creation_time": "2007-11-18T16:56:24Z", "attachment_id": null}, {"count": 5, "tags": [], "creator": "apache@gagravarr.org", "text": "I think to be able to debug this, we'll want 4 very closely related files:\n* file generated in excel, with 57 controls\n* same file, saved by poi, which excel can read in again\n* re-open excel file, add in 58 controls, do save as\n* that 58 controller file, saved by poi, which excel can't read\n\nThey ought to be created something like that, so that pretty much the only\ndifferences will be the number of controls. That will help us narrow down the\ndifferences", "id": 110710, "time": "2007-11-19T04:17:55Z", "bug_id": 43877, "creation_time": "2007-11-19T04:17:55Z", "is_private": false, "attachment_id": null}, {"count": 6, "attachment_id": 21156, "bug_id": 43877, "is_private": false, "id": 110745, "time": "2007-11-19T16:50:25Z", "creator": "tishikawa@gbcc.co.jp", "creation_time": "2007-11-19T16:50:25Z", "tags": [], "text": "Created attachment 21156\n4 related files of the sequence\n\nWell, I've created 4 related files of the sequence that you said:\n\n1. file generated in excel, with 57 controls\n2. same file, saved by poi, which excel can read in again\n3. re-open excel file, add in 58 controls, do save as\n4. that 58 controller file, saved by poi, which excel can't read\n\nSee new an attatched zip file."}, {"count": 7, "tags": [], "creator": "apache@gagravarr.org", "is_private": false, "text": "Thanks. Not sure when someone will get to look at it, but at least all we need\nto do know is compare the 4 files, spot the differences, and hopefully spot what\npoi is doing wrong with all those controls (I suspect writing out a record\nthat's too long or something like that)", "id": 110841, "time": "2007-11-20T04:27:10Z", "bug_id": 43877, "creation_time": "2007-11-20T04:27:10Z", "attachment_id": null}, {"count": 8, "tags": [], "bug_id": 43877, "text": "\nI'm looking into the problem.\n\n1. It's even worse in trunk. POI produces invalid xls from a workbook with the\nonly checkbox control, i.e any number of checkboxes results in a invalid xls\ndocument. (In 3.0.1 it works fine, re-save of a workbook with 1 checkbox\nproduces correct xls). My investigation revealed that the problem is in\norg.apache.poi.hssf.record.SubRecord.\nIt was a patch by Daniel Noll with support for getting OLE objects from\nHSSFWorkbook ( bug 43222 ). \n\nAfter I commented out the following three lines the situation has improved. \n\n+            case EmbeddedObjectRefSubRecord.sid:\n+                r = new EmbeddedObjectRefSubRecord( in );\n+                break;\n\nDaniel, would you please look into it? We are going to release soon and if it is\nnot fixed, I will have to revert your patch.\n\n2. I confirmed that MSODRAWINGGROUP record gets corrupted if the number of\ncontrols is greater than 58.\nSince it works with smaller values most likely we have a continue\nrecord issue. I keep researching.\n\nRegards,\nYegor", "id": 110877, "attachment_id": null, "creator": "yegor@dinom.ru", "creation_time": "2007-11-20T10:19:58Z", "time": "2007-11-20T10:19:58Z", "is_private": false}, {"count": 9, "tags": [], "creator": "trejkaz@trypticon.org", "is_private": false, "text": "I think I know what's responsible for this.  Just trying to figure out the\ncorrect behaviour.", "id": 110897, "time": "2007-11-20T17:01:46Z", "bug_id": 43877, "creation_time": "2007-11-20T17:01:46Z", "attachment_id": null}, {"count": 10, "attachment_id": null, "bug_id": 43877, "text": "Okay, I did some sanity fixes to the way that record class reads and writes, but\nit still doesn't open in Excel.\n\nIn fact if I go into SubRecord and comment out those lines, that doesn't make it\nwork either.  So there may have been a problem in my code, but even when my code\nis omitted it still doesn't work.\n", "id": 110899, "time": "2007-11-20T17:35:05Z", "creator": "trejkaz@trypticon.org", "creation_time": "2007-11-20T17:35:05Z", "tags": [], "is_private": false}, {"count": 11, "tags": [], "creator": "trejkaz@trypticon.org", "is_private": false, "text": "Created attachment 21169\nFix for EmbeddedObjectRefSubRecord\n\nPatch contains the following fixes made to EmbeddedObjectRefSubRecord:\n\n1. serialize() wasn't writing the record's sid and length (I forgot that it\n   was the subclass' responsibility... blame the API ;-))\n\n2. getRecordSize() was off by 2 as it wasn't taking into account the length of\n   the stream ID offset field.\n\n3. Storing the amount of padding instead of figuring it out from the offsets.\n   Makes no difference but is somewhat more sane to look at.  Still a hack\n   because it should probably write all the stuff and then set the offset field\n\n   once it knows how far in it is.\n\nIn any case after this that file still doesn't work for me.  But commenting out\nthe EmbeddedObjectRefSubRecord check in SubRecord doesn't make it work either.", "id": 110900, "time": "2007-11-20T17:59:23Z", "bug_id": 43877, "creation_time": "2007-11-20T17:59:23Z", "attachment_id": 21169}, {"count": 12, "tags": [], "creator": "yegor@dinom.ru", "is_private": false, "text": "Daniel,\n\n1. After I applied the fix for EmbeddedObjectRefSubRecord the test for 1\ncheckbox passes. That is if I create \na xls with 1 checkbox ans re-save it by POI the xls is still valid.\nPatch applied, thanks.\n\n2. The problem may also be related to EscherMetafileBlip.\nAn attempt to view the binary structure of attached saved.xls using BiffViewer\nresults in ArrayIndexOutOfBoundsException:\n\njava.lang.ArrayIndexOutOfBoundsException\n        at java.lang.System.arraycopy(Native Method)\n        at\norg.apache.poi.ddf.EscherMetafileBlip.fillFields(EscherMetafileBlip.java:87)\n        at org.apache.poi.ddf.EscherBSERecord.fillFields(EscherBSERecord.java:94)\n        at\norg.apache.poi.ddf.EscherContainerRecord.fillFields(EscherContainerRecord.java:56)\n        at\norg.apache.poi.ddf.EscherContainerRecord.fillFields(EscherContainerRecord.java:56)\n        at\norg.apache.poi.hssf.record.AbstractEscherHolderRecord.convertToEscherRecords(AbstractEscherHolderRecord.java:104)\n        at\norg.apache.poi.hssf.record.AbstractEscherHolderRecord.fillFields(AbstractEscherHolderRecord.java:93)\n        at org.apache.poi.hssf.record.Record.<init>(Record.java:53)\n        at\norg.apache.poi.hssf.record.AbstractEscherHolderRecord.<init>(AbstractEscherHolderRecord.java:66)\n        at\norg.apache.poi.hssf.record.DrawingGroupRecord.<init>(DrawingGroupRecord.java:42)\n        at org.apache.poi.hssf.dev.BiffViewer.createRecord(BiffViewer.java:282)\n        \n\nAlthough BiffViewer is happy with the original has58controls.xls. I can dump and\nsee its structure\n\n\nI look at the code and it seems I see a bug:\n\n    public int serialize( int offset, byte[] data, EscherSerializationListener\nlistener )\n    {\n        listener.beforeRecordSerialize(offset, getRecordId(), this);\n\n        int pos = offset;\n        LittleEndian.putShort( data, pos, getOptions() ); pos += 2;\n        LittleEndian.putShort( data, pos, getRecordId() ); pos += 2;\n!bug    LittleEndian.putInt( data, getRecordSize() - HEADER_SIZE ); pos += 4;\n\nit writes the record size at a wrong position. Should be\n       LittleEndian.putInt( data, pos, getRecordSize() - HEADER_SIZE ); pos += 4;\n\nPlease confirm.\n\n\nYegor", "id": 110907, "time": "2007-11-21T02:44:10Z", "bug_id": 43877, "creation_time": "2007-11-21T02:44:10Z", "attachment_id": null}, {"count": 13, "tags": [], "creator": "yegor@dinom.ru", "text": "Oops. I can't apply the patch because it causes \norg.apache.poi.hssf.usermodel.TestOLE2Embeding to fail. Definitely more work is\nneeded.\n\nYegor ", "id": 110908, "time": "2007-11-21T02:48:53Z", "bug_id": 43877, "creation_time": "2007-11-21T02:48:53Z", "is_private": false, "attachment_id": null}, {"count": 14, "tags": [], "creator": "trejkaz@trypticon.org", "is_private": false, "text": "Now that's interesting, it didn't affect our own OLE2 unit test at all.  I don't suppose the one in POI was \nsomehow reliant on the buggy behaviour?  The one I sent through should have become the one which was \nused but perhaps it was adjusted somehow.", "id": 110920, "time": "2007-11-21T05:55:02Z", "bug_id": 43877, "creation_time": "2007-11-21T05:55:02Z", "attachment_id": null}, {"count": 15, "tags": [], "creator": "yegor@dinom.ru", "is_private": false, "text": "No, it wasn't adjusted.\nCurrent version is \nhttp://svn.apache.org/viewvc/poi/trunk/src/testcases/org/apache/poi/hssf/usermodel/TestOLE2Embeding.java?revision=573878&view=markup\nand the exception is\njava.io.FileNotFoundException: no such entry: \"MBD00000000\"\n\tat org.apache.poi.poifs.filesystem.DirectoryNode.getEntry(DirectoryNode.java:247)\n\tat\norg.apache.poi.hssf.usermodel.HSSFObjectData.getDirectory(HSSFObjectData.java:76)\n\tat\norg.apache.poi.hssf.usermodel.TestOLE2Embeding.testEmbeddedObjects(TestOLE2Embeding.java:52)\n", "id": 110921, "time": "2007-11-21T06:04:03Z", "bug_id": 43877, "creation_time": "2007-11-21T06:04:03Z", "attachment_id": null}, {"count": 16, "tags": [], "creator": "trejkaz@trypticon.org", "text": "Weird, that looks exactly the same as the test I have which still works.\n\n", "id": 110923, "time": "2007-11-21T06:43:29Z", "bug_id": 43877, "creation_time": "2007-11-21T06:43:29Z", "is_private": false, "attachment_id": null}, {"count": 17, "tags": [], "creator": "yegor@dinom.ru", "text": "Are we checking against the same file? \n\nPlease check\nhttp://svn.apache.org/viewvc/poi/trunk/src/testcases/org/apache/poi/hssf/data/ole2-embedding.xls?view=log", "id": 110924, "time": "2007-11-21T07:36:18Z", "bug_id": 43877, "creation_time": "2007-11-21T07:36:18Z", "is_private": false, "attachment_id": null}, {"count": 18, "tags": [], "bug_id": 43877, "text": "Diff says they're the same.  My own unit test is (the filename is different):\n\n    public void testEmbeddedObjects2003() throws Exception {\n        File file = getDataFile(\"office/ole2-embedding-2003.xls\");\n        HSSFWorkbook workbook = new HSSFWorkbook(new FileInputStream(file));\n        //noinspection unchecked\n        List<HSSFObjectData> objects = workbook.getAllEmbeddedObjects();\n        assertEquals(\"Wrong number of objects\", 2, objects.size());\n        assertEquals(\"Wrong name for first object\", \"MBD06CAB431\",\n                     objects.get(0).getDirectory().getName());\n        assertEquals(\"Wrong name for second object\", \"MBD06CAC85A\",\n                     objects.get(1).getDirectory().getName());\n    }\n\nThe thing is, my patch didn't actually change the reading code anyway, and the\nunit test doesn't test the writing code (it probably should though...)\n", "id": 110955, "attachment_id": null, "creator": "trejkaz@trypticon.org", "creation_time": "2007-11-21T13:40:26Z", "time": "2007-11-21T13:40:26Z", "is_private": false}, {"count": 19, "tags": [], "creator": "yegor@dinom.ru", "text": "I found what's wrong. It wasn't trivial and took two brain-teasing days to\nfigure it out :).\n\nIn org.apache.poi.hssf.record.RecordFactory we have a place where continuation\nfor drawing records is handled:\n\n\n                        else if (record.getSid() == ContinueRecord.sid &&\n                                 ((lastRecord instanceof ObjRecord) ||\n(lastRecord instanceof TextObjectRecord))) {\n                          // Drawing records have a very strange continue behaviour.\n                          //There can actually be OBJ records mixed between the\ncontinues.\n                          lastDrawingRecord.processContinueRecord(\n((ContinueRecord)record).getData() );\n\nThe problem is that this case is not handled when writing out the records. That\nis if we have an OBJ record mixed with continues we read them properly.\nBUT when we serialize the drawing record this structure  is lost and it results\nin corrupted xls. It is reproducible with any xls file having a\ncontinue record after OBJ. I reproduced it with 35565.xls used by\norg.apache.poi.hssf.usermodel.TestBugs.test35565(). After re-save it becomes\nunreadable.\n\nThe fix is coming soon.\n\nYegor", "id": 110990, "time": "2007-11-22T08:34:22Z", "bug_id": 43877, "creation_time": "2007-11-22T08:34:22Z", "is_private": false, "attachment_id": null}, {"count": 20, "tags": [], "bug_id": 43877, "attachment_id": null, "is_private": false, "id": 111004, "time": "2007-11-23T04:56:30Z", "creator": "yegor@dinom.ru", "creation_time": "2007-11-23T04:56:30Z", "text": "Finally fixed. \n\nYegor"}, {"count": 21, "tags": [], "creator": "yegor@dinom.ru", "is_private": false, "text": "*** Bug 39512 has been marked as a duplicate of this bug. ***", "id": 111006, "time": "2007-11-23T04:57:03Z", "bug_id": 43877, "creation_time": "2007-11-23T04:57:03Z", "attachment_id": null}]