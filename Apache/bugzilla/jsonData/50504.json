[{"count": 0, "text": "Currently tomcat is using ISO-8859-1 by default to decode query parameters. This can be modified with connector attributes like URIEncoding and useBodyEncodingForURI, however these are server wide settings and affect every web application served trough that connector.\n\nI suggest an alternative, optional way: to define query encoding with a special request attribute. It has the benefit that it allows to use different query parameter encoding per web application (per request). So a new application can use UTF-8 without effecting old ones.\n\nJetty has a similar approach: it is using \"org.eclipse.jetty.server.Request.queryEncoding\" for that (however in Jetty UTF-8 is the default encoding for query parameters).\nThis is also similar to how content type charset is set for UTF-8 POST-s (using request.setCharacterEncoding()).\n\nWithout this in mixed environments (where already existing applications are served with the default settings of tomcat) new, UTF-8 based applications can not use query parameters because browsers are using the served html page's character set to encode query parameters (the same they are doing with POST bodies).\n\nI am attaching a patch containing the suggested changes with a new junit test. I named the special request attribute \"org.apache.tomcat.request.query_encoding\".", "bug_id": 50504, "attachment_id": null, "id": 142878, "time": "2010-12-21T04:16:17Z", "creator": "kiralyattila.hu@gmail.com", "creation_time": "2010-12-21T04:16:17Z", "tags": [], "is_private": false}, {"count": 1, "tags": [], "creator": "kiralyattila.hu@gmail.com", "text": "Created attachment 26432\nPatch implementing the suggestion + junit test\n\nAttaching patch.", "id": 142879, "time": "2010-12-21T04:17:22Z", "bug_id": 50504, "creation_time": "2010-12-21T04:17:22Z", "is_private": false, "attachment_id": 26432}, {"count": 2, "tags": [], "creator": "chris@christopherschultz.net", "text": "Couldn't this just be written as a Valve?\n\nThe only utility I can see for checking for a request attribute like \"org.apache.tomcat.request.query_encoding\" would be to have /another/ Valve set that value conditionally (or even unconditionally) for some reason. If you're writing a Valve, why not just go ahead and set the character encoding yourself at that point?\n\nI briefly considered a Valve that inspected a request /parameter/ to see if the client wanted to specify that everything was to be decoded in, say, shift-jis or something, but that gets you into a chicken-in-an-egg scenario so it's not a valid use case.\n\nI don't see why the Request class should be modified in this way when a Valve can accomplish the same thing.", "id": 149549, "time": "2011-09-20T21:50:03Z", "bug_id": 50504, "creation_time": "2011-09-20T21:50:03Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "creator": "kiralyattila.hu@gmail.com", "text": "A Valve could be a solution too if it comes with Tomcat. It would mean that encoding can be configured per webapp which is what this ticket is about.", "id": 149565, "time": "2011-09-21T05:17:51Z", "bug_id": 50504, "creation_time": "2011-09-21T05:17:51Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "creator": "markt@apache.org", "text": "Request URI decoding has to bee connector wide since the URI has to be decoded before it is mapped.\n\nIf you want per web application control of query string encoding, use a filter and call ServletRequest.setCharacterEncoding().", "id": 180815, "time": "2015-02-05T20:44:45Z", "bug_id": 50504, "creation_time": "2015-02-05T20:44:45Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 50504, "attachment_id": null, "text": "(In reply to Mark Thomas from comment #4)\n> Request URI decoding has to bee connector wide since the URI has to be\n> decoded before it is mapped.\n\nIf it can be assumed that the mapping has been done correctly and won't change, could the query string itself be re-decoded from the original bytes if the request contains an attribute that differs from the initial character set used for decoding?", "id": 180818, "time": "2015-02-06T02:26:56Z", "creator": "chris@christopherschultz.net", "creation_time": "2015-02-06T02:26:56Z", "is_private": false}, {"count": 6, "tags": [], "bug_id": 50504, "attachment_id": null, "text": "The query string remains as bytes until it is required (if at all). Take a look at Http11InputBuffer.parseRequestLine() in trunk and when it is called.\n\nHence why setting the character encoding on the request (assuming they do that before they read the query string) allows applications to choose the encoding they want to use for the query string on a per request basis.\n\nThe URI is a different matter. It gets used for mapping so it has to be decoded before the mapping can take place so a per web application URI decoding makes no sense.", "id": 180822, "time": "2015-02-06T09:13:36Z", "creator": "markt@apache.org", "creation_time": "2015-02-06T09:13:36Z", "is_private": false}]