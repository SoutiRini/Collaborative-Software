[{"count": 0, "tags": [], "bug_id": 57155, "text": "Many of Tomcat test cases do the following to create and configure a web application programmatically:\n\n        // Must have a real docBase - just use temp\n        Context ctx =\n            tomcat.addContext(\"\", System.getProperty(\"java.io.tmpdir\"));\n\nEssentially, it makes Tomcat to serve the contents of the system temporary directory. Sometimes it results in failures on CI servers (bug 57154 is an example).\n\nThere shall be a way to configure a context that does not need a real docbase.\n\nI do not see a use case for that when running a standalone Tomcat, because docbase is needed to provide executable code for the application, but I do see the use case when running embedded Tomcat. In embedded Tomcat the entire web application can be configured programmatically.\n\n\nIf I use a non-existent docbase, e.g.\n\n        Context ctx = \n            tomcat.addContext(\"\", \"ROOT\");\n\nTomcat startup fails with\n\n[[[\nCaused by: org.apache.catalina.LifecycleException: Failed to start component [StandardEngine[Tomcat].StandardHost[localhost].StandardContext[]]\n\tat org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:154)\n\t... 6 more\nCaused by: org.apache.catalina.LifecycleException: Failed to start component [org.apache.catalina.webresources.StandardRoot@123f26]\n\tat org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:154)\n\tat org.apache.catalina.core.StandardContext.resourcesStart(StandardContext.java:4875)\n\tat org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5004)\n\tat org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)\n\t... 6 more\nCaused by: java.lang.IllegalArgumentException: The main resource set specified [(censored)\\test-tmp\\webapps\\ROOT] is not valid\n\tat org.apache.catalina.webresources.StandardRoot.startInternal(StandardRoot.java:665)\n\tat org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)\n\t... 9 more\n]]]\n\n\nIf I do the following:\n\n        Context ctx =\n            tomcat.addContext(\"\", \"\");\n\nthe test passes successfully. Apparently it is using docBase = appBase. An odd configuration, but it works if there are no other web applications in appBase.", "id": 178782, "time": "2014-10-28T00:44:09Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2014-10-28T00:44:09Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 57155, "attachment_id": null, "id": 178783, "time": "2014-10-28T01:03:32Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2014-10-28T01:03:32Z", "is_private": false, "text": "I think that docBase that is equal to the empty string can be treated specially as this \"No doc base\" case. I mean that in this case one needs to configure the resources (org.apache.catalina.webresources.StandardRoot) so that no files are served.\n\nI think that now there is a risk that somebody will be unwillingly serving files from appbase if one specifies <Context docBase=\"\"/> . If anybody really wants to serve files from appbase directory, one can use \".\" or an absolute path.\n\n\nAlternatively, add one-argument method to Tomcat class as\n public Context addContext(String contextPath)\nand perform all configuration of StandardRoot programmatically. In this case we can avoid special processing of docBase=\"\"."}, {"count": 2, "attachment_id": null, "bug_id": 57155, "is_private": false, "id": 178831, "time": "2014-10-29T15:52:00Z", "creator": "markt@apache.org", "creation_time": "2014-10-29T15:52:00Z", "tags": [], "text": "I'm leaning towards treating a docBase value of \"\" as invalid and using null to signal that a docBase on the file system is not required. I need to do some testing of this."}, {"count": 3, "tags": [], "bug_id": 57155, "attachment_id": null, "id": 178834, "time": "2014-10-29T18:30:10Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2014-10-29T18:30:10Z", "is_private": false, "text": "I envision a caveat with ContextConfig.fixDocBase().\nThe fixDocBase() method replaces null docBase with one calculated from path, (new ContextName(path, context.getWebappVersion())).getBaseName().\n\nUsing null in tomcat.addContext(path, null) is indeed a good API. (Maybe add a single-argument Tomcat.addContext(path) for this use case)."}, {"count": 4, "attachment_id": null, "bug_id": 57155, "is_private": false, "id": 178836, "time": "2014-10-29T22:21:37Z", "creator": "markt@apache.org", "creation_time": "2014-10-29T22:21:37Z", "tags": [], "text": "I don't see a need to change ContextConfig. That is not intended for use in embedding. If it was used it would only be used when there was a docBase on the filesystem.\n\nThis has been fixed in 8.0.x for 8.0.15 onwards."}]