[{"count": 0, "tags": [], "bug_id": 9675, "text": "This bug is a regression in 1.5 from earlier releases, which is why I chose\n\"Major\" as severity.\n\nIt seems that in some, but not all, cases, defining and running a custom task\ntwice in Ant 1.5 will (1) result in a strange warning, (2) leave the task\nunconfigured (no setters called).\n\nUnzip the attached test case and try running the script with different versions\nof Ant. The script has a target 'once' which defines and runs a custom task with\na property set. 'twice' calls 'once' twice with <antcall>. I tried both\n\nant twice\n\nand\n\nant once once\n\non the same script. These behave *differently* for whatever reason.\n\nAnt 1.3: \"ant once once\" does not redefine the task at all. The old copy is\nsilently used. However the call works when called either way, other than the\ntask not being reloaded.\n\nAnt 1.4: \"ant twice\" creates extra instances of the task but this seems\nharmless; the class is redefined. \"ant once once\" now redefines the class but\nnot (apparently) the actual task instance: the property is set only once. Again\nthe task works called either way.\n\nAnt 1.5 (beta 2): \"ant twice\" has apparently been fixed to not create an extra\ninstance; works fine. \"ant once once\" however is broken on the second pass. The\nmessage\n\nTrying to override old definition of task t\n\nappears, and a new task instance is created but never configured. When run, it\nis in an uninitialized state.\n\nBuild scripts which thus called a taskdef twice, and which worked in previous\nreleases, now do not. Cf. NetBeans build system bug in URL - for which a good\nworkaround probably exists.\n\nIn the NetBeans case, a custom task was calling Project.executeTarget in such a\nway as to cause the target containing the <taskdef> and custom task to be run\ntwice on the same project (unintentionally). For some reason, it seems Ant's own\n<antcall> does not suffer from this problem. But listing the target twice on the\ncommand-line does. Did not try <ant>.\n\nThere does not seem to be any documentation describing this phenomenon. I would\nguess that using loaderrefs on <taskdef> in Ant 1.5 (or <classpath> IDs?) would\nwork around it, assuming you did not want to try to reload the taskdef class.\nThe WHATSNEW mentions only this:\n\n* <taskdef> and <typedef> will now emit a warning if a task/type of\n  the given name already exists.\n\nbut says nothing of unconfigured tasks being run, nor of why this would happen\nonly in some usages.", "id": 17343, "time": "2002-06-06T20:38:58Z", "creator": "jesse.glick@netbeans.com", "creation_time": "2002-06-06T20:38:58Z", "is_private": false, "attachment_id": null}, {"count": 1, "text": "Created attachment 2018\nZIP file of test case", "bug_id": 9675, "attachment_id": 2018, "id": 17344, "time": "2002-06-06T20:39:40Z", "creator": "jesse.glick@netbeans.com", "creation_time": "2002-06-06T20:39:40Z", "tags": [], "is_private": false}, {"count": 2, "text": "I've tracked this down to the maybeConfigure method in RuntimeConfigurable.\nThe statement\n  attributes = null\n\nmeans the RuntimeConfigurable cannot be reused. When the task is invalidated by\nthe second taskdef, the new instance needs to be configured from the same\nRuntimeConfigurable.\n\nI'm not sure of the motivation for setting to null and what other impacts not\nsetting it to null may have. Obviously the statement\n  characters.setLength(0);\nis also a problem.\n\nCommenting these out allows your build to run OK.\n\nIt does not appear that the child list is nulled out though. Want to test with a\nnested element?", "bug_id": 9675, "attachment_id": null, "id": 17372, "time": "2002-06-07T00:32:59Z", "creator": "conor@apache.org", "creation_time": "2002-06-07T00:32:59Z", "tags": [], "is_private": false}, {"count": 3, "text": "I believe this is happening to me as well in maven.\n\nWe have seen this with our use of checkstyle and nested filesets. The filesets\nuse includes and excludes attributes. I'll try with nested elements as well.", "bug_id": 9675, "is_private": false, "id": 17374, "time": "2002-06-07T00:48:43Z", "creator": "dion@apache.org", "creation_time": "2002-06-07T00:48:43Z", "tags": [], "attachment_id": null}, {"count": 4, "tags": [], "creator": "conor@apache.org", "attachment_id": null, "text": "I'm guessing that the setting to null is there to make the maybeConfigure method\nidempotent. THis could be changed to use a flag which gets reset in the setProxy\nmethod when the wrapped object is changed", "id": 17389, "time": "2002-06-07T06:37:56Z", "bug_id": 9675, "creation_time": "2002-06-07T06:37:56Z", "is_private": false}, {"count": 5, "text": "Created attachment 2032\nTestcase showing problems with nested elements (from Jesse)", "creator": "conor@apache.org", "attachment_id": 2032, "id": 17437, "time": "2002-06-08T11:08:49Z", "bug_id": 9675, "creation_time": "2002-06-08T11:08:49Z", "tags": [], "is_private": false}, {"count": 6, "tags": [], "creator": "conor@apache.org", "attachment_id": null, "text": "I've committed a fix to the 1.5 branch. If you can test from CVS, please do.\nOtherwise please wait for Stefan to build as part of his 1.5 Gump runs.", "id": 17463, "time": "2002-06-09T12:54:53Z", "bug_id": 9675, "creation_time": "2002-06-09T12:54:53Z", "is_private": false}, {"count": 7, "tags": [], "creator": "bodewig@apache.org", "attachment_id": null, "text": "1.5 branch build containing Conor's patch is now available at\n<http://cvs.apache.org/~bodewig/gump/ant1.5beta/>", "id": 17481, "time": "2002-06-10T08:39:37Z", "bug_id": 9675, "creation_time": "2002-06-10T08:39:37Z", "is_private": false}]