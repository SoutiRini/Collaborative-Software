[{"count": 0, "tags": [], "bug_id": 43537, "attachment_id": null, "is_private": false, "id": 108909, "time": "2007-10-02T11:30:39Z", "creator": "glenn@fenris.net", "creation_time": "2007-10-02T11:30:39Z", "text": "javac task\n\nWhen writing a temporary file that contains the names of the java files to\ncompile, a PrintWriter is used, presumably to make native EOLs in the file.\nHowever, the checkError method is never called, and a partial list of file names\ncan be created. This occurred on my system when the file system used by\ntemporary files was nearly full. It allowed the creation of the temp file, but\ncouldn't hold all the data. It manifested as not all class files getting created\nby the javac task.\n\nHere's a patch that works for me:\n\n--- DefaultCompilerAdapter.java.orig    Tue Oct  2 11:12:10 2007\n+++ DefaultCompilerAdapter.java Tue Oct  2 11:11:03 2007\n@@ -21,10 +21,10 @@\n //Java5 style\n //import static org.apache.tools.ant.util.StringUtils.LINE_SEP;\n\n+import java.io.BufferedWriter;\n import java.io.File;\n import java.io.FileWriter;\n import java.io.IOException;\n-import java.io.PrintWriter;\n import org.apache.tools.ant.BuildException;\n import org.apache.tools.ant.Location;\n import org.apache.tools.ant.Project;\n@@ -462,19 +462,21 @@\n              */\n             if (Commandline.toString(args).length() > 4096\n                 && firstFileName >= 0) {\n-                PrintWriter out = null;\n+                BufferedWriter out = null;\n                 try {\n                     tmpFile = FILE_UTILS.createTempFile(\n                         \"files\", \"\", getJavac().getTempdir());\n                     tmpFile.deleteOnExit();\n-                    out = new PrintWriter(new FileWriter(tmpFile));\n+                    out = new BufferedWriter(new FileWriter(tmpFile));\n+                    String lineSeparator = System.getProperty(\"line.separator\");\n                     for (int i = firstFileName; i < args.length; i++) {\n                         if (quoteFiles && args[i].indexOf(\" \") > -1) {\n                             args[i] = args[i].replace(File.separatorChar, '/');\n-                            out.println(\"\\\"\" + args[i] + \"\\\"\");\n+                            out.write(\"\\\"\" + args[i] + \"\\\"\");\n                         } else {\n-                            out.println(args[i]);\n+                            out.write(args[i]);\n                         }\n+                       out.write(lineSeparator);\n                     }\n                     out.flush();\n                     commandArray = new String[firstFileName + 1];\n@@ -481,7 +483,7 @@\n                     System.arraycopy(args, 0, commandArray, 0, firstFileName);\n                     commandArray[firstFileName] = \"@\" + tmpFile;\n                 } catch (IOException e) {\n-                    throw new BuildException(\"Error creating temporary file\",\n+                    throw new BuildException(\"Error creating temporary file: \" + e,\n                                              e, location);\n                 } finally {\n                     FileUtils.close(out);"}, {"count": 1, "tags": [], "text": "I used this report for a more complete audit of Ant's sources, the results are mainly svn revision 793462 and svn revision 793528 - with some minor patches in between.\n\nThanks!", "attachment_id": null, "id": 128781, "creator": "bodewig@apache.org", "time": "2009-07-13T03:08:54Z", "bug_id": 43537, "creation_time": "2009-07-13T03:08:54Z", "is_private": false}, {"count": 2, "tags": [], "text": "*** Bug 48844 has been marked as a duplicate of this bug. ***", "attachment_id": null, "id": 135056, "creator": "bodewig@apache.org", "time": "2010-03-04T16:11:37Z", "bug_id": 43537, "creation_time": "2010-03-04T16:11:37Z", "is_private": false}]