[{"count": 0, "tags": [], "bug_id": 56096, "is_private": false, "id": 172831, "creation_time": "2014-01-31T20:59:36Z", "time": "2014-01-31T20:59:36Z", "creator": "jim-apache@spudsoft.co.uk", "text": "Adding this Listener to the Server:\n  <Listener className=\"org.apache.catalina.mbeans.JmxRemoteLifecycleListener\"\n          rmiRegistryPortPlatform=\"10001\" rmiServerPortPlatform=\"10002\" rmiBindAddress=\"${ip.address}\" />\nAlong with this setenv.sh:\nCATALINA_OPTS=\"${CATALINA_OPTS} -Dcom.sun.management.jmxremote.password.file=$CATALINA_HOME/conf/jmxremote.password\"\nCATALINA_OPTS=\"${CATALINA_OPTS} -Dcom.sun.management.jmxremote.access.file=$CATALINA_HOME/conf/jmxremote.access\"\nCATALINA_OPTS=\"${CATALINA_OPTS} -Dcom.sun.management.jmxremote.ssl=false\"\n\nPrevents tomcat from starting as the two RMI components cannot talk to each other, producing this error:\njava.io.IOException: Cannot bind to URL [rmi://localhost:10001/jmxrmi]: javax.naming.ServiceUnavailableException [Root exception is java.rmi.ConnectException: Connection refused to host: localhost; nested exception is:\n\n\n\nThis is caused by the preparation of the URL in createServer, which doesn't take into account that rmiBindAddress has been used and useLocalPorts has not.\nI believe that if useLocalPorts was used tomcat would start, but this would force different instances to use different ports, which is what I'm trying to avoid.", "attachment_id": null}, {"count": 1, "tags": [], "creator": "jim-apache@spudsoft.co.uk", "attachment_id": null, "id": 172832, "time": "2014-01-31T21:00:21Z", "bug_id": 56096, "creation_time": "2014-01-31T21:00:21Z", "is_private": false, "text": "Diff of a fix that works for me:\nIndex: java/org/apache/catalina/mbeans/JmxRemoteLifecycleListener.java\n===================================================================\n--- java/org/apache/catalina/mbeans/JmxRemoteLifecycleListener.java     (revision 1563195)\n+++ java/org/apache/catalina/mbeans/JmxRemoteLifecycleListener.java     (working copy)\n@@ -255,7 +255,7 @@\n\n\n             // Create the Platform server\n-            csPlatform = createServer(\"Platform\", rmiRegistryPortPlatform,\n+            csPlatform = createServer(\"Platform\", rmiBindAddress, rmiRegistryPortPlatform,\n                     rmiServerPortPlatform, env, csf, ssf,\n                     ManagementFactory.getPlatformMBeanServer());\n\n@@ -264,7 +264,7 @@\n         }\n     }\n\n-    private JMXConnectorServer createServer(String serverName,\n+    private JMXConnectorServer createServer(String serverName, String bindAddress,\n             int theRmiRegistryPort, int theRmiServerPort,\n             HashMap<String,Object> theEnv, RMIClientSocketFactory csf,\n             RMIServerSocketFactory ssf, MBeanServer theMBeanServer) {\n@@ -278,12 +278,20 @@\n                     serverName, Integer.toString(theRmiRegistryPort)), e);\n             return null;\n         }\n+\n+        if (bindAddress == null) {\n+            bindAddress = \"localhost\";\n+        }\n\n         // Build the connection string with fixed ports\n         StringBuilder url = new StringBuilder();\n-        url.append(\"service:jmx:rmi://localhost:\");\n+        url.append(\"service:jmx:rmi://\");\n+        url.append(bindAddress);\n+        url.append(\":\");\n         url.append(theRmiServerPort);\n-        url.append(\"/jndi/rmi://localhost:\");\n+        url.append(\"/jndi/rmi://\");\n+        url.append(bindAddress);\n+        url.append(\":\");\n         url.append(theRmiRegistryPort);\n         url.append(\"/jmxrmi\");\n         JMXServiceURL serviceUrl;"}, {"count": 2, "tags": [], "bug_id": 56096, "attachment_id": null, "text": "Thanks for the report.\nFixed in trunk and 7.0.x and will be included in 8.0.2 and 7.0.51 onwards.\n\nRegards\nVioleta", "id": 172887, "time": "2014-02-04T18:56:38Z", "creator": "violetagg@apache.org", "creation_time": "2014-02-04T18:56:38Z", "is_private": false}]