[{"attachment_id": null, "tags": [], "bug_id": 37664, "text": "Some patches for apr-util/trunk/dbd/apr_dbd_oracle.c, based on\ntesting and initial production usage.  More to come, no doubt!  :-)\n\n- replaced leftover dbd_oracle_lob_size() declaration with\n  native dbd_oracle_long_size_set() function\n\n- dbd_oracle_query() uses a private pool to ensure that both Stmt and\n  LOB callback cleanups are performed\n\n- in dbd_oracle_prepare():\n  - don't count %% towards nargs\n\n  - don't attempt to support native Oracle params (e.g., :foo)\n    because we get fooled by SQL like TO_DATE(sysdate, 'HH:MM:SS')\n\n  - calculate length for orastr using maximum param length (:aprNNN...),\n    and add trailing '\\0' for strlen(orastr)\n\n  - no need to iterate through orastr when calling OCIBindByPos(),\n    and avoids false detection of native params in SQL like\n    TO_DATE(sysdate, 'HH:MM:SS')\n\n  - always register freeStatement callback against pool; assumption\n    is that pool passed to dbd_oracle_prepare() lasts as long as\n    prepared statement will be retained\n\n  - for output params, handle common data types according to\n    \"Perl standard\" :-)\n\n- in dbd_oracle_get_entry():\n  - removed USE_LOB_LOCATOR ifdef\n\n  - added handling for LVC/LVB long structures", "count": 0, "id": 82912, "time": "2005-11-28T17:02:17Z", "creator": "chrisd@apache.org", "creation_time": "2005-11-28T17:02:17Z", "is_private": false}, {"count": 1, "tags": [], "creator": "chrisd@apache.org", "text": "Created attachment 17064\npatch for apr_dbd_oracle.c", "id": 82913, "time": "2005-11-28T17:02:40Z", "bug_id": 37664, "creation_time": "2005-11-28T17:02:40Z", "is_private": false, "attachment_id": 17064}, {"count": 2, "tags": [], "creator": "chrisd@apache.org", "text": "Created attachment 17065\nbetter patch for apr_dbd_oracle.c", "id": 82922, "time": "2005-11-28T20:33:38Z", "bug_id": 37664, "creation_time": "2005-11-28T20:33:38Z", "is_private": false, "attachment_id": 17065}, {"count": 3, "tags": [], "creator": "chrisd@apache.org", "attachment_id": 17078, "text": "Created attachment 17078\nmove output_params for clarity\n\nThis second patch simply moves dbd_oracle_output_params() up underneath\ndbd_oracle_prepare() for purposes of clarity, since the following\nfour function have very similar structures and will be edited in\nconjunction in the patches to follow (soon ... I hope).", "id": 82997, "time": "2005-11-29T22:41:33Z", "bug_id": 37664, "creation_time": "2005-11-29T22:41:33Z", "is_private": false}, {"count": 4, "tags": [], "creator": "chrisd@apache.org", "attachment_id": 17090, "id": 83022, "time": "2005-11-30T18:02:41Z", "bug_id": 37664, "creation_time": "2005-11-30T18:02:41Z", "is_private": false, "text": "Created attachment 17090\npreparatory cleanup\n\nThis patch has some general whitespace and comments cleanup, preparatory\nto various functionality patches (coming soon, I hope!)  The main items\napply to the pselect, pvselect, pquery, and pvquery functions, since\nthey have very similar structure and will be patched in conjunction\nw/r/t input parameter handling.\n\n- cleanup function declarations and definitions and braces\n\n- removed Static #define, because:\n  - it only affects Nick's private test suite :-)\n  - in general probably makes sense from here on to debug against\n    full apr-util using apr_dbd wrapper\n  - would like to eventually remove the DEBUG #define entirely and\n    simply output full error messages from dbd_oracle_error(); this is\n    a start in that direction\n\n- removed unused CHECK_TRANSACTION #define (and only partially implemented\n  in some of the p[v][query|select] functions); might replace with\n  sub-function or #define in all four later\n\n- renamed dbd_oracle_output_params() as outputParams(), using\n  \"internal\" naming scheme"}, {"count": 5, "attachment_id": 17170, "bug_id": 37664, "is_private": false, "id": 83393, "time": "2005-12-07T23:11:39Z", "creator": "chrisd@apache.org", "creation_time": "2005-12-07T23:11:39Z", "tags": [], "text": "Created attachment 17170\ncreation and pool fixes\n\nThis small patch fixes the OCI environment creation step on certain platforms\nand fixes the pool used for a cleanup callback registration in outputParams()."}, {"count": 6, "tags": [], "bug_id": 37664, "attachment_id": 17179, "id": 83420, "time": "2005-12-08T15:39:25Z", "creator": "chrisd@apache.org", "creation_time": "2005-12-08T15:39:25Z", "is_private": false, "text": "Created attachment 17179\nbetter creation patch\n\nAs per Nick's offline comment, remove OCI_OBJECT."}, {"count": 7, "tags": [], "text": "Created attachment 17180\ncheck for OCIEnvCreate in m4\n\nAssociated with patch 17179, check for new-style OCIEnvCreate() function.", "is_private": false, "bug_id": 37664, "id": 83421, "time": "2005-12-08T15:41:24Z", "creator": "chrisd@apache.org", "creation_time": "2005-12-08T15:41:24Z", "attachment_id": 17180}, {"count": 8, "text": "Created attachment 17235\nallow LONGs > 64KB to be written\n\nAllows LONGs (i.e., APR_DBD_ORACLE_LOB) fields to be written if their\nlengths are larger than fit into a ub2.  Also sets alen pointer to NULL\nin OCIBindByPos() calls, otherwise, it needs to match the ub4 len, but\nit's only a ub2.", "bug_id": 37664, "attachment_id": 17235, "id": 83757, "time": "2005-12-17T04:58:25Z", "creator": "chrisd@apache.org", "creation_time": "2005-12-17T04:58:25Z", "tags": [], "is_private": false}, {"count": 9, "tags": [], "creator": "chrisd@apache.org", "attachment_id": 18441, "id": 90037, "time": "2006-06-10T02:03:14Z", "bug_id": 37664, "creation_time": "2006-06-10T02:03:14Z", "is_private": false, "text": "Created attachment 18441\nquery and select fixes\n\nThis patch file contains a variety of fixes and cleanups, mostly related to\nthe prepare function and the various query and select functions.\n\nThe pvquery and pvselect functions were looking for true int and double\narguments in the va_list args.\tThis is not how other drivers function; for\nexample, the pgsql and sqlite3 drivers assume all va_list arguments as strings.\n\nThis is in keeping with the pquery and pselect functions too.  So, make the\nOracle driver do the same.\n\nThe OCIStmtRelease() function should only be used if Oracle statement handles\nhave been prepared with OCIStmtPrepare2(), which is only available in Oracle\n9.2 and above.\tFor now, stick with just OCIHandleFree() and put the stuff\nrelated to OCIStmtRelease() into unused #ifdef blocks in the freeStatement()\nand freeStatements() APR memory pool callback cleanup functions.  Note that\nwhen OCIStmtRelease() is used in the future, OCIHandleFree() should not be\nused because OCIStmtRelease() will do that for you.\n\nThe freeStatement() callback cleanup function should return apr_status_t to\nmatch the return value expected by apr_pool_cleanup_register() and friends.\n\nThe freeStatement() callback cleanup function should also use a private\nOracle error handle like the freeStatements() one (if and when it uses\nOCIStmtRelease() in the future).  Otherwise, if an error occurs during\nthe execution of dbd_oracle_query(), then the call to apr_pool_destory()\non the private pool causes freeStatement() to be called, which if it\nthen encounters its own error, would then overwrite the previous error data\nin the Oracle handle.  That in turn means the caller can't access the\noriginal error message that caused apr_dbd_query() to fail.\n\nIn all #ifdef DEBUG blocks, never overwrite sql->status.  Otherwise the\ndebugging code changes the error values and messages output, which isn't\nreally what you want debugging code to do; instead, it should be non-invasive.\n\nIn dbd_oracle_prepare(), make sure to set stmt->nargs to 0 before counting\narguments in the SQL query.  Otherwise, if the caller passes a non-NULL\nstatement pointer (i.e., a previously allocated apr_dbd_prepared_t structure),\nwe miscalculate the number of expected arguments to query/select().\n\nFinally, remove some non-functional BLOB/CLOB trial code from pvquery()\nand make it similar to the other three p[v]query/select() functions in\nthis regard."}, {"count": 10, "attachment_id": 18580, "bug_id": 37664, "text": "Created attachment 18580\nquery and select fixes\n\nRevised to work with latest trunk version.", "id": 91066, "time": "2006-07-10T17:08:17Z", "creator": "chrisd@apache.org", "creation_time": "2006-07-10T17:08:17Z", "tags": [], "is_private": false}, {"count": 11, "tags": [], "bug_id": 37664, "attachment_id": null, "id": 102581, "time": "2007-04-27T15:28:36Z", "creator": "davi@apache.org", "creation_time": "2007-04-27T15:28:36Z", "is_private": false, "text": "Fix committed to trunk in revision 421212."}]