[{"count": 0, "tags": [], "text": "Server Setup:\niPlanetTM Web Server, Enterprise Edition 6.0\nWindows 2000\nTomcat 5.0.19\n\niPlanet is connected to the Tomcat server using the jk2 connector.\n\nI configured JMeter with 40 threads to repeated request the same JSP over and over.\nAll this JSP did was print out the Total Memory, Free Memory.\nAfter about 5000 requests, Tomcat got an out of memory error.\n\nSame test was done but hitting the tomcat container directly, \nsuccessfully served 15k requests with no memory leak\n\nTest was done again, but instead of IPlanet used Apache 2.  Successfully\nserved 15k requests with no memory leak.\n\nIn the test case using IPlanet, there were continuous error files that\nwere not present in the other test cases:\n\nApr 8, 2004 6:24:57 PM org.apache.jk.common.HandlerRequest decodeRequest\nWARNING: Error registering request\nApr 8, 2004 6:24:57 PM org.apache.jk.common.HandlerRequest invoke\nINFO: Unknown message 0", "is_private": false, "id": 55593, "creator": "rpatel@rajix.com", "time": "2004-04-09T21:26:49Z", "bug_id": 28321, "creation_time": "2004-04-09T21:26:49Z", "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 28321, "text": "Created attachment 11203\nTomcat stdout.log", "id": 55594, "time": "2004-04-09T21:28:42Z", "creator": "rpatel@rajix.com", "creation_time": "2004-04-09T21:28:42Z", "is_private": false, "attachment_id": 11203}, {"count": 2, "tags": [], "bug_id": 28321, "attachment_id": null, "id": 55595, "time": "2004-04-09T21:30:47Z", "creator": "rpatel@rajix.com", "creation_time": "2004-04-09T21:30:47Z", "is_private": false, "text": "Also, I tried the IPlanet->Tomcat test case using\nTomcat 5.0.18.  There was not memory leak."}, {"count": 3, "tags": [], "creator": "rpatel@rajix.com", "attachment_id": 11220, "text": "Created attachment 11220\nJProfiler Heap Snapshot showing path to garbage collection root.", "id": 55677, "time": "2004-04-12T22:01:33Z", "bug_id": 28321, "creation_time": "2004-04-12T22:01:33Z", "is_private": false}, {"count": 4, "tags": [], "creator": "remm@apache.org", "text": "And did you try adding response = null; in JspWriterImpl.recycle to see what\nhappened ?\nI don't quite understand why or how it would really be a problem, though, as the\nreferences will go away sooner or later.", "id": 55684, "time": "2004-04-12T22:42:02Z", "bug_id": 28321, "creation_time": "2004-04-12T22:42:02Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "creator": "rpatel@rajix.com", "attachment_id": 11221, "text": "Created attachment 11221\nList of objects in memory", "id": 55685, "time": "2004-04-12T22:51:00Z", "bug_id": 28321, "creation_time": "2004-04-12T22:51:00Z", "is_private": false}, {"count": 6, "tags": [], "creator": "rpatel@rajix.com", "attachment_id": null, "id": 55686, "creation_time": "2004-04-12T22:52:15Z", "time": "2004-04-12T22:52:15Z", "bug_id": 28321, "text": "No I didn't want to mess around with the Tomcat code.  I would be happy if I\ncould just turn off JMX completely.", "is_private": false}, {"count": 7, "tags": [], "creator": "william.barker@wilshire.com", "text": "You could try setting:\n  request.registerRequests=false\nin your jk2.properties file.  This will turn off the JMX registration of \nRequests.  \n\n", "id": 55687, "time": "2004-04-12T23:11:32Z", "bug_id": 28321, "creation_time": "2004-04-12T23:11:32Z", "is_private": false, "attachment_id": null}, {"count": 8, "tags": [], "bug_id": 28321, "text": "Turning off the jmx registrations has solved the problem for us.  We were able to\ndo 100k requests with no memory leak.", "id": 55701, "time": "2004-04-13T15:26:27Z", "creator": "rpatel@rajix.com", "creation_time": "2004-04-13T15:26:27Z", "is_private": false, "attachment_id": null}, {"count": 9, "tags": [], "creator": "jessh@ptc.com", "attachment_id": null, "id": 55704, "creation_time": "2004-04-13T15:31:22Z", "time": "2004-04-13T15:31:22Z", "bug_id": 28321, "text": "Bill, did you possibly fix this in 5.0.20?\n\nI am specifically referring to the changelog entry:\n\n  \"Fix JMX Request registration in JK (billbarker)\"\n\nI know that fixed other issues for which I was using\n\n  request.registerRequests=false\n\nRajesh, I would be interested in knowing if 5.0.2x exhibit the same issues in\nyour testing.", "is_private": false}, {"count": 10, "tags": [], "bug_id": 28321, "attachment_id": null, "id": 55712, "time": "2004-04-13T17:48:10Z", "creator": "william.barker@wilshire.com", "creation_time": "2004-04-13T17:48:10Z", "is_private": false, "text": "There are a couple of other entries in the changelog that are related, but \nyes, this should be fixed in 5.0.20+.\n\nYou still should need to disable request-registration if you are using the JNI \nChannel, since the leak is still there.  Fixing it here requires changes to \nthe native side of the connector as well, since that is the only place that \nknows that a thread has died.\n\nMarking this as FIXED, since it looks like its a dup of the same-old request-\nregistration problem."}, {"count": 11, "attachment_id": null, "creator": "william.barker@wilshire.com", "is_private": false, "id": 56727, "time": "2004-05-02T19:57:51Z", "bug_id": 28321, "creation_time": "2004-05-02T19:57:51Z", "tags": [], "text": "*** Bug 28731 has been marked as a duplicate of this bug. ***"}]