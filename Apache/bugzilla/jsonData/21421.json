[{"count": 0, "tags": [], "text": "By default \u2018ant A B\u2019 will re-execute all common A\u2019s and B\u2019s dependencies. It is at least not efficient. This patch allows \u2018ant \u201cA,B\u201d\u2019 arguments. In this case the patch creates a new pseudo target named \u201cA,B\u201d with dependencies \u201cA,B\u201d and executes the target.", "is_private": false, "bug_id": 21421, "id": 40228, "time": "2003-07-08T22:08:08Z", "creator": "alexeys@inventigo.com", "creation_time": "2003-07-08T22:08:08Z", "attachment_id": null}, {"count": 1, "tags": [], "creator": "alexeys@inventigo.com", "attachment_id": 7176, "is_private": false, "id": 40229, "time": "2003-07-08T22:09:48Z", "bug_id": 21421, "creation_time": "2003-07-08T22:09:48Z", "text": "Created attachment 7176\nProject.java patch"}, {"count": 2, "tags": [], "bug_id": 21421, "is_private": false, "text": "Created attachment 7177\ntest file", "id": 40230, "time": "2003-07-08T22:10:19Z", "creator": "alexeys@inventigo.com", "creation_time": "2003-07-08T22:10:19Z", "attachment_id": 7177}, {"count": 3, "tags": [], "text": "Created attachment 7178\nupdated test build.xml file", "attachment_id": 7178, "bug_id": 21421, "id": 40233, "time": "2003-07-08T22:27:38Z", "creator": "alexeys@inventigo.com", "creation_time": "2003-07-08T22:27:38Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 21421, "attachment_id": 7179, "text": "Created attachment 7179\nupdated patch without debug output", "id": 40234, "time": "2003-07-08T22:32:18Z", "creator": "alexeys@inventigo.com", "creation_time": "2003-07-08T22:32:18Z", "is_private": false}, {"count": 5, "tags": [], "creator": "peter.reilly@corvil.com", "attachment_id": null, "id": 45534, "time": "2003-10-13T15:49:15Z", "bug_id": 21421, "creation_time": "2003-10-13T15:49:15Z", "is_private": false, "text": "*** Bug 23783 has been marked as a duplicate of this bug. ***"}, {"count": 6, "tags": [], "creator": "sgabriel@brainfuse.com", "attachment_id": null, "id": 45540, "time": "2003-10-13T16:37:30Z", "bug_id": 21421, "creation_time": "2003-10-13T16:37:30Z", "is_private": false, "text": "Can some body incorporate this into the main ant. it seems odd that the \nproject share the same properties but not the depedency graph. \n\n"}, {"count": 7, "tags": [], "bug_id": 21421, "is_private": false, "text": "*** Bug 27459 has been marked as a duplicate of this bug. ***", "id": 53471, "time": "2004-03-05T01:21:23Z", "creator": "trevor@vocaro.com", "creation_time": "2004-03-05T01:21:23Z", "attachment_id": null}, {"count": 8, "tags": [], "creator": "alexeys@inventigo.com", "attachment_id": null, "id": 53472, "time": "2004-03-05T01:23:18Z", "bug_id": 21421, "creation_time": "2004-03-05T01:23:18Z", "is_private": false, "text": "Fixed text:\n\nBy default \"ant A B\" will re-execute all common A's and B's dependencies. \nIt is at least not efficient. This patch allows \"ant 'A,B'\" arguments. \nIn this case the patch creates a new pseudo target named \"A,B\" with dependencies \n\"A,B\" and executes the target."}, {"count": 9, "tags": [], "text": "What is needed to get this patch into HEAD? If it needs more testing, I volunteer.\n\nAlso, can someone please explain why running the dependency twice is \"by\ndesign\", according to Dominique Devienne's comment to bug 23783? I can't imagine\nhow this would be expected behavior.", "attachment_id": null, "bug_id": 21421, "id": 53473, "time": "2004-03-05T01:46:03Z", "creator": "trevor@vocaro.com", "creation_time": "2004-03-05T01:46:03Z", "is_private": false}, {"count": 10, "tags": [], "creator": "alexeys@inventigo.com", "attachment_id": null, "is_private": false, "id": 53474, "time": "2004-03-05T01:48:03Z", "bug_id": 21421, "creation_time": "2004-03-05T01:48:03Z", "text": "I just want to note that we are running our builds with this patch all the time."}, {"count": 11, "attachment_id": null, "creator": "j_a_fernandez@yahoo.com", "is_private": false, "id": 53499, "time": "2004-03-05T10:29:25Z", "bug_id": 21421, "creation_time": "2004-03-05T10:29:25Z", "tags": [], "text": "How do people feel about this new feature? \nShall we put it in the 1.7 target list?\n\nIf we were to do this, I think we need to do the complete job\nand allow similar functionality to <[sub]ant[call]> which means\nto be able to say 'target=\"A, B\"' with the same effect.\n"}, {"count": 12, "attachment_id": null, "creator": "ddevienne@lgc.com", "is_private": false, "id": 53515, "time": "2004-03-05T15:04:37Z", "bug_id": 21421, "creation_time": "2004-03-05T15:04:37Z", "tags": [], "text": "When I wrote by-design, I meant it is coded up like that. Hence, it can't be \nchanged for BC reasons. I never said it was the good design decision ;-) I \noften execute more than one target from the CLI, and run afool of this too.\n\nFor critial target, I guard against re-execution with a property, since \nproperties are still shared (unlike the target dependency analysis).\n\nI agree with Jose Alberto. <[sub]ant[call]> should be made to work the same, \nexcept I wouldn't override the meaning of the target attribute, and add a new \ntargets attributes. For BC reasons, again, . You can currently call a target \nwith a comma in its name with <[sub]ant[call]>, so supporting multi-target \ncalling using the 'target' attribute would not be BC. --DD\n\nSo +1 to the feature of that patch. (haven't look at the code itself)."}, {"count": 13, "tags": [], "creator": "alexeys@inventigo.com", "attachment_id": null, "id": 53517, "time": "2004-03-05T15:07:52Z", "bug_id": 21421, "creation_time": "2004-03-05T15:07:52Z", "is_private": false, "text": "I think all <ant>, <subant>, ... tasks are automatically targeted, since the patch changes how Project class executes targets. If it sees a non existing target with comma, it just adds it (do we need synchronized here?)."}, {"count": 14, "tags": [], "text": "> When I wrote by-design, I meant it is coded\n> up like that.\n\nWell, just because a feature is coded up doesn't mean that it was by design. If\nthe author made the wrong assumptions or missed something, then it's not design;\nit's a bug.\n\n> Hence, it can't be changed for BC reasons.\n\nIs BC really an issue here? I don't see how anyone would rely on dependencies\nbeing run multiple times. Once a dependency has been resolved, any further\nexececutions of that dependency would be redundant. Remember, too, that this is\nthe command line we're talking about, so no scripts would be affected by\nchanging the semantics of the argument list.", "is_private": false, "bug_id": 21421, "id": 53529, "time": "2004-03-05T19:37:54Z", "creator": "trevor@vocaro.com", "creation_time": "2004-03-05T19:37:54Z", "attachment_id": null}, {"count": 15, "tags": [], "text": "> ... then it's not design; it's a bug.\n\nMaybe.\n\n> Is BC really an issue here?\n\nI think it always is. I'm sure many people have .bat or .sh script, or crontab \nentries or whatever that call several targets. I don't think it would be nice \nto break those people.\n\nBelieve it or not, for purely selfish reasons, I'd vote to change to existing \nbehavior. But if I have to consider BC, I'd vote -0. BTW, my vote doesn't \ncount ;-) --DD", "attachment_id": null, "bug_id": 21421, "id": 53532, "time": "2004-03-05T19:50:38Z", "creator": "ddevienne@lgc.com", "creation_time": "2004-03-05T19:50:38Z", "is_private": false}, {"count": 16, "tags": [], "text": "> I'm sure many people have .bat or .sh script, or crontab\n> entries or whatever that call several targets. I don't\n> think it would be nice to break those people.\n\nI understand, but what I'm saying is, how could these batch files and crontabs\npossibly get broken? Dependencies are idempotent: Running a dependency twice\nproduces results no different from when the dependency was first resolved.\nUnless you can give me an example where a dependency in Ant is not idempotent, I\ncan't agree that there is a BC issue here.\n\n> I'd vote to change to existing behavior.\n\nYou mean, change nothing?\n", "attachment_id": null, "bug_id": 21421, "id": 53533, "time": "2004-03-05T20:19:15Z", "creator": "trevor@vocaro.com", "creation_time": "2004-03-05T20:19:15Z", "is_private": false}, {"text": "I hate the current behavior just as anyone else, but there is a BC issue here \nand really I see few ways out. For an example just think what the following \ndoes today:\n\nant clean test1 clean test2 clean test3 ....\n\nAssuming the target clean just wipes clean the build, then the above list of \ntargets will have very different behavior if the way targets are executed from \nthe command line changes.\n\nSo, BC is a real issue. This is why the proposal uses \",\" to indicate\nexecution without dependency reexecution: \"clean,test1,clean,test2,clean,test3\"\nwhich is equivalent to: \"clean,test1,test2,test3\".\n\nAlternatively, we could provide an option \"-noredo\" (or something like that)\nthat will treat the list of targets as comma separated. So if one wants that \nbehavior all the time just stick the option in ANT_OPTS in your environment.\n", "tags": [], "bug_id": 21421, "attachment_id": null, "count": 17, "id": 53604, "time": "2004-03-07T17:04:29Z", "creator": "j_a_fernandez@yahoo.com", "creation_time": "2004-03-07T17:04:29Z", "is_private": false}, {"count": 18, "tags": [], "creator": "alexeys@inventigo.com", "attachment_id": null, "id": 53606, "time": "2004-03-07T17:34:50Z", "bug_id": 21421, "creation_time": "2004-03-07T17:34:50Z", "is_private": false, "text": "I have a special use for ',' in my build system. I added \"-sooner\" option that makes the mentioned targets (they failed in previous builds) to execute as soon as possible. Because the failed targets can be deleted or renamed I cannot put them directly on command line with ',' sign - ANT will complain, instead Project.java checks that the targets exists and only adds them in that case."}, {"count": 19, "attachment_id": null, "creator": "mbenson@apache.org", "is_private": false, "id": 61582, "time": "2004-08-05T14:01:37Z", "bug_id": 21421, "creation_time": "2004-08-05T14:01:37Z", "tags": [], "text": "Since commas can be part of target names (for good or ill) and targets so named \ncan be called from the command line--despite the fact that such targets are \nbroken in that they cannot be specified in a \"depends\" attribute--the BC issue \nis real.  Under the circumstances Jose Alberto's suggestion of a new Ant option \nsounds like a reasonable compromise."}, {"count": 20, "tags": [], "creator": "alexeys@inventigo.com", "attachment_id": null, "is_private": false, "id": 61584, "time": "2004-08-05T14:28:49Z", "bug_id": 21421, "creation_time": "2004-08-05T14:28:49Z", "text": "It is up to you to decide. It is just convenient to use comma \u2013 I do not have \nto type more than usual to have \"noredo\" functionality, but maybe there can be \n(or will be) a way to configure ANT to make the option default. I also have not \nseen any build scripts that have commas in the target names. One would be able \nto run those targets in a very limited number of situations (command line, \nfor example). I would say it is reasonable to assume there are no such targets \nin the wild.\n\n\n\n"}, {"count": 21, "attachment_id": null, "creator": "mbenson@apache.org", "is_private": false, "id": 61585, "time": "2004-08-05T14:37:20Z", "bug_id": 21421, "creation_time": "2004-08-05T14:37:20Z", "tags": [], "text": "Yes, but we're not dealing with reality here.  We are unfortunately constrained \nto dealing with the worst-case scenario.  And Jose mentioned environment \ncustomization; you should be able to add the option to your ANT_ARGS \nenvironment variable to make that behavior the default."}, {"count": 22, "tags": [], "creator": "alexeys@inventigo.com", "attachment_id": null, "is_private": false, "id": 61586, "time": "2004-08-05T14:42:28Z", "bug_id": 21421, "creation_time": "2004-08-05T14:42:28Z", "text": "Actually it is even easier - I have my own ANT launcher script that preconfigures\nmy build environment, I can just add the option into it.\n\nSome of my other changes use this feature, but now they can just directly call \nnew topoSort().\nLets have an additional command line option.\n"}, {"count": 23, "tags": [], "bug_id": 21421, "is_private": false, "text": "Created attachment 12344\nproposed patch to Main.java", "id": 61591, "time": "2004-08-05T15:45:16Z", "creator": "mbenson@apache.org", "creation_time": "2004-08-05T15:45:16Z", "attachment_id": 12344}, {"count": 24, "tags": [], "creator": "mbenson@apache.org", "attachment_id": null, "is_private": false, "id": 61592, "time": "2004-08-05T15:52:58Z", "bug_id": 21421, "creation_time": "2004-08-05T15:52:58Z", "text": "Alexey--how does that last patch strike you?"}, {"count": 25, "tags": [], "text": "Thank you. The patch should work. May I ask you to add a short alias for the option and a way to turn it off (maybe \"-nosinglecheck\")?\n\n", "is_private": false, "bug_id": 21421, "id": 61596, "time": "2004-08-05T17:28:52Z", "creator": "alexeys@inventigo.com", "creation_time": "2004-08-05T17:28:52Z", "attachment_id": null}, {"count": 26, "tags": [], "creator": "mbenson@apache.org", "attachment_id": null, "id": 61598, "time": "2004-08-05T18:31:39Z", "bug_id": 21421, "creation_time": "2004-08-05T18:31:39Z", "is_private": false, "text": "The first request I have no ideological problem with, but what option to use?  \nMost short options are a single letter, and for example, \"-singlecheck\", while \nlonger than \"-noredo\", is no longer than \"-diagnostics\", and indeed is shorter \nthan \"-propertyfile\" or \"-inputhandler\".\n\nAs for the -nosinglecheck idea, I think I can see how you would want to use it, \nbut I can't say that I really think it's necessary to basic Ant.  Not \nspecifying the option would be equivalent to specifying a negative version of \nthe same option.  In fact, I changed \"-noredo\" to the hardly more descriptive \"-\nsinglecheck\" due to a reluctance on my part to use such a \"negative option\".  I \nwould have preferred a boolean argument to two different forms of the same \noption, but did not because of the implementation of Ant's command-line \noptions.  This is very straightforward; for example to use the -s option \nwithout specifying a buildfile name, -s has to be the last option given.  This \nmakes me reluctant to solve the issue by adding an optional argument to this \nnew option.\n\nIn summary, if these issues came to a committer vote, my responses would be:\n\n[+1] adding -singlecheck (or equivalent) option to work in conjunction with the \nnew Target sorting options on Project\n[-0] adding a short form of -singlecheck\n[-1] complementing -singlecheck with -nosinglecheck\n\nbr,\nMatt"}, {"count": 27, "tags": [], "bug_id": 21421, "attachment_id": null, "text": "I like -singlecheck as you sugested. I will also suggest -s (is that taken?) \nas its short version (like -projecthelp & -p).\n\nI will also suggest using the common UNIX practice for boolean switches of \nusing + to negate an option. So +s (or +singlecheck) will mean NO -singlecheck.\n", "id": 61632, "time": "2004-08-06T09:54:59Z", "creator": "j_a_fernandez@yahoo.com", "creation_time": "2004-08-06T09:54:59Z", "is_private": false}, {"count": 28, "tags": [], "text": "-s is the alternative form of -find.  As for the + concept, what a step!  \nFirstly, won't you agree that if we make this available for one option, it \nshould be available for all switch-style options?  Parsing the command line \nsuddenly becomes much more involved a process.  At this point I would seriously \nconsider switching to commons CLI and incur the 30K jar.  Now I will duck...", "is_private": false, "bug_id": 21421, "id": 61636, "time": "2004-08-06T15:15:43Z", "creator": "mbenson@apache.org", "creation_time": "2004-08-06T15:15:43Z", "attachment_id": null}, {"count": 29, "tags": [], "text": "Matt, I will join you. \n\nI thought about suggesting \"+singlecheck\", but I think \nthat using plus sign for negating is strange. \"-singlecheck-\" would be better.", "is_private": false, "bug_id": 21421, "id": 61645, "time": "2004-08-06T20:16:16Z", "creator": "alexeys@inventigo.com", "creation_time": "2004-08-06T20:16:16Z", "attachment_id": null}, {"count": 30, "tags": [], "creator": "mbenson@apache.org", "attachment_id": null, "id": 61646, "time": "2004-08-06T20:20:51Z", "bug_id": 21421, "creation_time": "2004-08-06T20:20:51Z", "is_private": false, "text": "To clarify my position-- :) --I am not opposed to using + (although it does \nseem a little strange for this particular option).  I am still not entirely \nconvinced that we need any form of negation for any option switch when not \nspecifying that switch is equivalent.  If we do need negation of one switch, I \nam for adding it for all switches via CLI.  But I highly doubt many will join \nme due to the notorious aversion of the Ant developer community to external \ndependencies.  :)  Also check my latest comments on Bug 29248 regarding making \ntarget execution mode a property instead of a switch.\n\n-Matt"}, {"count": 31, "tags": [], "creator": "mbenson@apache.org", "attachment_id": null, "id": 62870, "time": "2004-08-31T22:38:14Z", "bug_id": 21421, "creation_time": "2004-08-31T22:38:14Z", "is_private": false, "text": "Alexey, you're so good about testing... do you mind trying out\n\n-Dant.executor.class=org.apache.tools.ant.helper.SingleCheckExecutor from CVS \nHEAD to see if it satisfies the request, and mark this as FIXED if so?\n\nThanks,\nMatt"}, {"count": 32, "attachment_id": null, "creator": "alexeys@inventigo.com", "is_private": false, "id": 62922, "time": "2004-09-01T19:46:29Z", "bug_id": 21421, "creation_time": "2004-09-01T19:46:29Z", "tags": [], "text": "Thank you, works great. Not sure about closing the bug - I think we still need a command line option that one would be able to easily type."}, {"count": 33, "tags": [], "creator": "alexeys@inventigo.com", "attachment_id": null, "is_private": false, "id": 62923, "time": "2004-09-01T19:48:37Z", "bug_id": 21421, "creation_time": "2004-09-01T19:48:37Z", "text": "Please also make an executor for bug 29248."}, {"count": 34, "tags": [], "creator": "mbenson@apache.org", "attachment_id": null, "id": 62925, "time": "2004-09-01T20:08:36Z", "bug_id": 21421, "creation_time": "2004-09-01T20:08:36Z", "is_private": false, "text": "Regarding the ParallelExecutor--I may.  This is not trivial however.  Assuming \nthe Executor does not get shot out of Ant, anyone could write it.  As for the \ncommand-line option, my concern is when would they end?  Someone else can come \nalong next week and ask for an option for Ant to run everything except for the \nspecified targets ... and so on.  If you really needed a switch to do this, \nit's not impossible to do it yourself... for example, if you added this to \nyour .antrc (assuming you use the \"ant\" script):\n\n_ant_exec_args=\n\nfor arg in \"$@\" ; do\n  if [ \"$arg\" = \"--single\" ] ; then\n    arg=-Dant.executor.class=org.apache.tools.ant.helper.SingleCheckExecutor\n  fi\n  _ant_exec_args=\"$_ant_exec_args \\\"$arg\\\"\"\ndone\n\nant_exec_args=$_ant_exec_args\nunset _ant_exec_args\n\nYou have aliased\n \"-Dant.executor.class=org.apache.tools.ant.helper.SingleCheckExecutor\"\n to \"--single\".\n\nPS:  guess who wrote \"I have my own ANT launcher script that preconfigures\nmy build environment, I can just add the option into it.\"\n\n;)"}, {"count": 35, "attachment_id": null, "creator": "alexeys@inventigo.com", "is_private": false, "id": 62926, "time": "2004-09-01T20:15:01Z", "bug_id": 21421, "creation_time": "2004-09-01T20:15:01Z", "tags": [], "text": "It was me... But some other people said they wanted this feature too."}, {"count": 36, "tags": [], "bug_id": 21421, "is_private": false, "text": "I think the execution logic should be moved out of Project.executeTarget() \ninto Executor.executeTargets(). In this case It would be easier to create \nParallelExecutor and also KeepGoingExecutor becomes meaningful. \n\nAlso the executor needs to be propagated into sub-ants \u2013 we will need to share \nthread pooling in ParallelExecutor.\n", "id": 62927, "time": "2004-09-01T20:45:59Z", "creator": "alexeys@inventigo.com", "creation_time": "2004-09-01T20:45:59Z", "attachment_id": null}, {"count": 37, "attachment_id": null, "creator": "mbenson@apache.org", "is_private": false, "id": 62930, "time": "2004-09-01T22:28:44Z", "bug_id": 21421, "creation_time": "2004-09-01T22:28:44Z", "tags": [], "text": "I see that SubAnt uses Ant tasks... I am not familiar enough with it to know \nwhat else it might need.  As for moving other stuff into Executor, it might be \nan idea, but I am really hesitant to move so much stuff around.  I had hoped \nthe implementation classes would stay simple.  Maybe the ParallelExecutor \nexercise would reveal something I haven't thought of yet that would make it \nnecessary."}, {"count": 38, "attachment_id": null, "creator": "alexeys@inventigo.com", "is_private": false, "id": 62931, "time": "2004-09-01T22:56:01Z", "bug_id": 21421, "creation_time": "2004-09-01T22:56:01Z", "tags": [], "text": "I did not mean just <subant>, but <ant> and <antcall> too."}, {"count": 39, "tags": [], "creator": "mbenson@apache.org", "attachment_id": null, "is_private": false, "id": 62957, "time": "2004-09-02T13:55:41Z", "bug_id": 21421, "creation_time": "2004-09-02T13:55:41Z", "text": "Oh.  Ant is used by CallTarget (antcall) as well, and I already modified it to \nuse a SingleCheckExecutor.  ;)"}, {"count": 40, "attachment_id": null, "creator": "alexeys@inventigo.com", "is_private": false, "id": 63070, "time": "2004-09-03T19:57:55Z", "bug_id": 21421, "creation_time": "2004-09-03T19:57:55Z", "tags": [], "text": "I think the logic should be different:\n\nclass Main {\n  String executorClassName;\n  void processArgs(...) {\n    \n  ...\n    else if (arg.equals(\"-keep-going\")...) {\n     this.executorClassName=KeepGoingExecutor.class.getName(); // with optional check that the field is not set already\n    }\n    else if (arg.equals(\"-single-check\")...) {\n     executorClassName=SingleCheckExecutor.class.getName(); // with optional check that the field is not set already\n    }\n  ...\n    if (definedProps.hasKey(\"ant.executor.class\")) { // system properties too?\n      executorClassName=definedProps.getProperty(\"ant.executor.class\");\n    }\n  }\n\n  void runBuild() {\n    ...\n    project.setExecutor((Executor)Class.forName(executorClassName).newInstance());\n    ...\n  }\n}\n\nclass Project {\n// remove keepGoingMode\n// add\n  public final Executor executor;\n\n  void initSubProject(...) {\n    ...\n    subProject.setExecutor(this.executor);\n  }\n\n  void executeTargets(list) { // executeTarget,....\n    // maybe check if executor==null\n    this.executor.executeTargets(list);\n  }\n}\n\nclass DefaultExecutor implements Executor {\n  private boolean keepGoingMode;\n  public void executeTargets() {\n    ...\n  }\n}\nclass KeepGoingExecutor extends DefaultExecutor { // for code reuse\n  KeepGoingExecutor() {\n    super(true); // keep-going mode\n  }\n}\n\nclass ParallelExecutor {\n  // thread pool, ...\n}\nclass NoDependenciesExecutor {\n}\n.....\n"}, {"count": 41, "attachment_id": null, "creator": "mbenson@apache.org", "is_private": false, "id": 67241, "time": "2004-11-19T18:17:01Z", "bug_id": 21421, "creation_time": "2004-11-19T18:17:01Z", "tags": [], "text": "-Dant.executor.class=org.apache.tools.ant.helper.SingleCheckExecutor works and \nthere are ways to alias your own switch as well.  Closing."}]