[{"count": 0, "tags": [], "text": "There is a bug in Apache where Apache does not provide the correct redirect URL.\n\nOn my web server, I have the following redirect setting for HTTP requests:\n\n'Redirect / https://nikolaskallis.com'\n\nThis works fine when someone visits 'http://nikolaskallis.com', as Apache redirects the client to 'https://nikolaskallis.com', however, when someone visits 'http://nikolaskallis.com/contact/', then Apache redirects the client to 'https://nikolaskallis.comcontact/'.\n\nApache fails to separate the 'contact' directory with the FQDN.\n\n\nWhat needs to happen is for Apache to check if there is a forward-slash at the end of the URL specified in the redirect setting, and if there isn't one, to then add a forward-slash before the directory.", "attachment_id": null, "id": 165331, "creator": "continuumslipgate@gmail.com", "time": "2013-02-19T00:03:17Z", "bug_id": 54580, "creation_time": "2013-02-19T00:03:17Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 54580, "is_private": false, "id": 165332, "attachment_id": null, "creator": "continuumslipgate@gmail.com", "creation_time": "2013-02-19T00:07:33Z", "time": "2013-02-19T00:07:33Z", "text": "* (for Apache to check if there is a forward-slash at the end of the URL specified in the redirect URL WHEN a directory is involved)\n\nSorry."}, {"count": 2, "tags": [], "creator": "continuumslipgate@gmail.com", "attachment_id": null, "id": 165333, "time": "2013-02-19T00:12:11Z", "bug_id": 54580, "creation_time": "2013-02-19T00:12:11Z", "is_private": false, "text": "The process should apply to documents also."}, {"count": 3, "text": "We could either warn that the configuration looks fishy without a path in the URL, and/or add a trailing slash permanently, but I am not so thrilled about either option.  It's going to usually be an invalid configuration but not one we want to start treating differently when maintenance is applied.\n\nAny other opinions?", "creator": "covener@gmail.com", "attachment_id": null, "id": 165334, "time": "2013-02-19T01:22:24Z", "bug_id": 54580, "creation_time": "2013-02-19T01:22:24Z", "tags": [], "is_private": false}, {"count": 4, "tags": [], "creator": "continuumslipgate@gmail.com", "attachment_id": null, "id": 165335, "time": "2013-02-19T01:29:31Z", "bug_id": 54580, "creation_time": "2013-02-19T01:29:31Z", "is_private": false, "text": "There shouldn't be a path in the URL as that is not a FQDN.\n\nA trailing forward-slash permanently in the redirect is wrong, because if a client visits 'http://nikolaskallis.com', then it would take them to 'https://nikolaskallis.com/'. That's incorrect."}, {"count": 5, "tags": [], "bug_id": 54580, "is_private": false, "id": 165336, "attachment_id": null, "creator": "covener@gmail.com", "creation_time": "2013-02-19T01:32:26Z", "time": "2013-02-19T01:32:26Z", "text": "(In reply to comment #4)\n> There shouldn't be a path in the URL as that is not a FQDN.\n\nThe manual says the argument is a URL. \n\nYours has a scheme and a hostname.  With no path, / should be assumed.\n\n> \n> A trailing forward-slash permanently in the redirect is wrong, because if a\n> client visits 'http://nikolaskallis.com', then it would take them to\n> 'https://nikolaskallis.com/'. That's incorrect.\n\nThose are equivalent.  If it's not clear, just add the trailing slash if this actually blocking your work -- you do not need a fix."}, {"count": 6, "tags": [], "text": "No, they are not the equivilent.\n\nThe HTTPS equivilent of 'http://nikolaskallis.com' is:\n\n'https://nikolaskallis.com'\n\nnot\n\n'https://nikolaskallis.com/'\n\nIf Apache behaves in the way I specified in my original post, then the problem will be fixed.\n\nI would do it myself, but I don't have the neccessary programming skills needed to do it.", "is_private": false, "bug_id": 54580, "id": 165337, "time": "2013-02-19T01:35:31Z", "creator": "continuumslipgate@gmail.com", "creation_time": "2013-02-19T01:35:31Z", "attachment_id": null}, {"count": 7, "tags": [], "text": "(In reply to comment #6)\n> No, they are not the equivilent.\n> \n> The HTTPS equivilent of 'http://nikolaskallis.com' is:\n> \n> 'https://nikolaskallis.com'\n> \n> not\n> \n> 'https://nikolaskallis.com/'\n\nFor all intents and purposes, those are equivalent URLs.  For example, type either in your browser and you will request the same \"/\" from nikolaskallis.com.", "attachment_id": null, "id": 165338, "creator": "covener@gmail.com", "time": "2013-02-19T01:41:17Z", "bug_id": 54580, "creation_time": "2013-02-19T01:41:17Z", "is_private": false}, {"count": 8, "tags": [], "creator": "continuumslipgate@gmail.com", "attachment_id": null, "id": 165339, "time": "2013-02-19T02:00:28Z", "bug_id": 54580, "creation_time": "2013-02-19T02:00:28Z", "is_private": false, "text": "Work arounds are to fix the intent of the purpose, but do you think they are professional? I don't. What you suggested is a work around.\n\nI knew at the time of submitting this bug report that I could have simply added a forward-slash on the end of the redirect URL to get directories working with aredirect, but then I would not be correctly redirecting people who enter my domain using a FQDN with a FQDN.\n\nI find the work around disgusting. Its a presentation/logic thing that irritates the hell out of me.\n\n\nBy the way, because of a stupid design in this bug tracker software where after you make a post it takes you to another bug page, I accidently posted a message to another page, that was meant for here - for you, Eric Covener:\n\nYou said \"With no path, / should be assumed.\"\n\nNo it shouldn't. People generally don't visit a website by typing I.E 'google.com/' - they type 'google.com'."}, {"count": 9, "tags": [], "creator": "covener@gmail.com", "attachment_id": null, "text": "> I knew at the time of submitting this bug report that I could have simply\n> added a forward-slash on the end of the redirect URL to get directories\n> working with aredirect, but then I would not be correctly redirecting people\n> who enter my domain using a FQDN with a FQDN.\n\nI think you're still mistaken.", "id": 165341, "time": "2013-02-19T02:54:10Z", "bug_id": 54580, "creation_time": "2013-02-19T02:54:10Z", "is_private": false}, {"count": 10, "tags": [], "text": "Its simple:\n\nI redirect to 'https://nikolaskallis.com'... Cool\n\nPeople come to my website 'http://nikolaskallis.com'... Cool.\n\nPeople get redirected to 'https://nikolaskallis.com'... Cool.\n\nSomeone types in 'https://nikolaskallis.com/foobar/'... Cool.\n\nSomeone gets redirected to 'https://nikolaskallis.comfoobar/'... Drama!\n\n\nYour suggestion: Add '/' to redirect URL:\n\nPeople come to my website 'http://nikolaskallis.com'... Cool.\n\nPeople get redirected to 'https://nikolaskallis.com/'... Drama!\n\nSomeone types in 'nikolaskallis.com/foobar/'... Cool.\n\nSomeone gets redirected to 'https://nikolaskallis.com/foobar/'... Cool.\n\n\nSo, as you can see. What you suggested still produces a drama, however, should my behavior instructions described in the first three posts of this bug report be implimented into Apache, then this bug will be fixed.", "attachment_id": null, "id": 165342, "creator": "continuumslipgate@gmail.com", "time": "2013-02-19T03:02:09Z", "bug_id": 54580, "creation_time": "2013-02-19T03:02:09Z", "is_private": false}, {"count": 11, "tags": [], "creator": "covener@gmail.com", "attachment_id": null, "id": 165343, "time": "2013-02-19T03:06:53Z", "bug_id": 54580, "creation_time": "2013-02-19T03:06:53Z", "is_private": false, "text": "> People get redirected to 'https://nikolaskallis.com/'... Drama!\n\nOnly if you choose to call it drama.  Everyone else just calls it \"exactly what happens whan any user types 'https://nikolaskallis.com and hits enter\"."}, {"count": 12, "text": "\"Everyone\"? Your tripping mate. You just have a tollerance for bugs where as I don't.\n\nAll that has to be done to make Apache check if the redirect URL has a forward-slash on the end of it when a document or directory is being served along with the FQDN, and if it doesn't have one, then inserta forward-slash between the redirect URL and the document\\directory being served. That way the request-response is equivilent. Problem solved!\n\n\nAt the end of the day a bug is a bug - no matter how big or how small, and if your going to dismiss a bug in a project such as Apache HTTP Server Project simply because it has no personal effect on you, then you shouldn't be here.\nOne of Apache's mission statements is 'providing software products for the public good'.", "creator": "continuumslipgate@gmail.com", "attachment_id": null, "id": 165344, "time": "2013-02-19T03:24:16Z", "bug_id": 54580, "creation_time": "2013-02-19T03:24:16Z", "tags": [], "is_private": false}, {"count": 13, "text": "(In reply to comment #10)\n[...]\n> Your suggestion: Add '/' to redirect URL:\n> People get redirected to 'https://nikolaskallis.com/'... Drama!\n\nIf given \"https://nikolaskallis.com\", the browser will make a connection to the server, and ask to get a ressource, by giving the name of it. This part of the URL is called \"abs_path\" in RFC2616, and if it's empty (as in your example), then it MUST be given as a \"/\". No drama here.\n\nWhatever you say/do, the HTTP request will still be:\nGET / HTTP/1.1\nServer: nikolaskallis.com\n\nThis MAY be different if you consider this:\nRedirect / https://nikolaskallis.com/blob", "creator": "erwann.abalea@keynectis.com", "attachment_id": null, "id": 165355, "time": "2013-02-19T07:48:45Z", "bug_id": 54580, "creation_time": "2013-02-19T07:48:45Z", "tags": [], "is_private": false}, {"count": 14, "tags": [], "text": "Erwann, what you say is correct, however, you have missed the point entirely.", "is_private": false, "bug_id": 54580, "id": 165356, "time": "2013-02-19T08:00:31Z", "creator": "continuumslipgate@gmail.com", "creation_time": "2013-02-19T08:00:31Z", "attachment_id": null}, {"count": 15, "tags": [], "creator": "continuumslipgate@gmail.com", "attachment_id": null, "id": 165357, "time": "2013-02-19T08:13:32Z", "bug_id": 54580, "creation_time": "2013-02-19T08:13:32Z", "is_private": false, "text": "A FQDN is a valid URL, and although Apache allows a FQDN a URL redirect, it has a bug where it cannot handle FQDN as URL redirect in conjunction with files and or directories.\n\nI really can't think of any other way to explain it."}, {"count": 16, "text": "(In reply to comment #15)\n> A FQDN is a valid URL, and although Apache allows a FQDN a URL redirect, it\n> has a bug where it cannot handle FQDN as URL redirect in conjunction with\n> files and or directories.\n> \n> I really can't think of any other way to explain it.\n\nI'll quote a larger portion of a comment you wrote:\n\n-----\nYour suggestion: Add '/' to redirect URL:\nPeople come to my website 'http://nikolaskallis.com'... Cool.\nPeople get redirected to 'https://nikolaskallis.com/'... Drama!\nSomeone types in 'nikolaskallis.com/foobar/'... Cool.\nSomeone gets redirected to 'https://nikolaskallis.com/foobar/'... Cool.\n-----\n\nWhy do you think that a redirection from \"http://nikolaskallis.com\" to \"https://nikolaskallis.com/\" is a drama?\n\n\"https://nikolaskallis.com\" and \"https://nikolaskallis.com/\" are equivalent URLs. Don't trust me, check by yourself (RFC2616, sections 3.2.2 and 3.2.3). Using either one will give the exact same result.", "creator": "erwann.abalea@keynectis.com", "attachment_id": null, "id": 165358, "time": "2013-02-19T11:37:13Z", "bug_id": 54580, "creation_time": "2013-02-19T11:37:13Z", "tags": [], "is_private": false}, {"count": 17, "tags": [], "text": "Its a drama because I am a perfectionist and don't settle for work arounds.\n\nWe should just fix the software so it works correctly. My solution will fix this bug. I can already visualise a fix for it.\n\nif ($_POST['request'] != $redirecturl) {$redirecturl = ''.$redirecturl.'/'.$_POST['request'].'';}\nheader('Location: $redirecturl');\n\nOK, so that was an example in PHP and Apache was written in C, but my point is to fix this would be trivial. If I could code in C, I would have already submitted a patch for this bug hours ago.", "attachment_id": null, "id": 165361, "creator": "continuumslipgate@gmail.com", "time": "2013-02-19T12:16:14Z", "bug_id": 54580, "creation_time": "2013-02-19T12:16:14Z", "is_private": false}, {"count": 18, "tags": [], "creator": "covener@gmail.com", "attachment_id": null, "id": 165362, "time": "2013-02-19T12:51:31Z", "bug_id": 54580, "creation_time": "2013-02-19T12:51:31Z", "is_private": false, "text": "Closing as WONTFIX, not adding extra validation or fixups to the 2nd parm of the Redirect directive because it only helps when every redirect except / is catastrophically broken by the mis-configuration so it will already be pretty clear to the user already."}, {"count": 19, "tags": [], "bug_id": 54580, "attachment_id": null, "is_private": false, "id": 165363, "time": "2013-02-19T12:54:41Z", "creator": "continuumslipgate@gmail.com", "creation_time": "2013-02-19T12:54:41Z", "text": "Reopened. World does not revolve around Eric Covener."}, {"count": 20, "tags": [], "text": "Closing as INVALID, as this is a PEBKAC.\nOur documentation clearly states; \"Additional path information beyond the matched URL-Path will be appended to the target URL\", thus it is clear, that if you do not add a trailing slash, you'll get the \"error\" that you are getting. How else would I be able to redirect http://foo/bar to http://foo.bar ? Your \"fix\" would change that to http://foo/.bar which is wrong in my fictitious use case, or would you have us implement a mind reading module that does exactly what you think you want it to do?\n\nWhether your narcissistic tendencies compel you to omit the trailing slash or not is none of our concern. Read the docs, act accordingly.", "is_private": false, "bug_id": 54580, "id": 165364, "time": "2013-02-19T13:03:41Z", "creator": "humbedooh@apache.org", "creation_time": "2013-02-19T13:03:41Z", "attachment_id": null}, {"count": 21, "tags": [], "text": "Daniel Gruno,\n\nYes, our documentation does say \"Additional path information beyond the matched URL-Path will be appended to the target URL\". It is this action which is the damn problem I have been talking about this whole time, have you not understood anything that I have said?\n\nAs for your question about \"http://foo/bar to http://foo.bar\": See my example of logic in comment 17. The logic in that that solution of mine would solve the bug in Apache.\n\nAlso, my strive to get this bug fixed has nothing to do with what you call \"narcissistic tendencies\", its called quality control.\n\nReopening due to closure by ignorance.", "attachment_id": null, "id": 165365, "creator": "continuumslipgate@gmail.com", "time": "2013-02-19T13:32:03Z", "bug_id": 54580, "creation_time": "2013-02-19T13:32:03Z", "is_private": false}, {"count": 22, "tags": [], "text": "My suggestion would be to use the RedirectMatch directive instead:\n\nRedirectMatch (.*) https://nikolaskallis.com$1\n\nwhich will do, I think, exactly what you want.\n\nChanging the behaviour of Redirect doesn't seem right, as it is clearly described as appending whatever is left of the path to the new URL. As Daniel suggested, there may very well be people using it who *rely* on concatenating onto the hostname.", "is_private": false, "bug_id": 54580, "id": 165366, "time": "2013-02-19T13:48:57Z", "creator": "dominic.benson@thirdlight.com", "creation_time": "2013-02-19T13:48:57Z", "attachment_id": null}, {"count": 23, "tags": [], "bug_id": 54580, "is_private": false, "id": 165367, "attachment_id": null, "creator": "rpluem@apache.org", "creation_time": "2013-02-19T13:59:22Z", "time": "2013-02-19T13:59:22Z", "text": "Everything has been said. I agree with Daniel and Eric. Nikolas if you reopen again we cannot be prevent that. We will just ignore this report and not feeding the troll any longer. We have no issue keeping this open until you lost interest and close it in several years during a cleanup just as invalid."}, {"count": 24, "tags": [], "text": "I can't code in C, but I can in PHP. I am going to use this piece of PHP code for the purpose of demonstrating its logic, and how this logic can be applied to the C code for Apache, to fix this bug:\n\n// Logic\n$redirecturl = 'example.com';\n$_POST['request'] = '/foobar/';\nif ($_POST['request'] != $redirecturl) {$redirecturl = $redirecturl.$_POST['request'];}\nheader('Location: $redirecturl');\n\nWhich turns out to be:\n\nif (/foobar/ != example.com) {$redirecturl = 'example.com/foobar/';}\n// This in turn would make the following:\nheader('Location: example.com/foobar/');\n// Else, if someone is entering via FQDN:\nheader('Location: example.com');\n\nSo there you have it, my problem solved without breaking functionality that others users.\n\nThanks for the RedirectMatch demo. I will check it out if this bug doesn't get fixed any time soon.\n\n\nReudiger Pluem, you should learn to shut your mouth. You, along with your ignorant/arrogant pals just got put in your place by a PHP coder.", "is_private": false, "bug_id": 54580, "id": 165369, "time": "2013-02-19T14:15:40Z", "creator": "continuumslipgate@gmail.com", "creation_time": "2013-02-19T14:15:40Z", "attachment_id": null}, {"count": 25, "tags": [], "text": "> header('Location: example.com');\n\nThis is invalid for HTTP for multiple reasons, as is the premise of \"entering via  FQDN\".  If you want to discuss further, I'd suggest a mailing list rather than abusing both bugzilla and the sympathetic people who are trying to explain this to you.", "is_private": false, "bug_id": 54580, "id": 165370, "time": "2013-02-19T15:10:43Z", "creator": "covener@gmail.com", "creation_time": "2013-02-19T15:10:43Z", "attachment_id": null}, {"count": 26, "tags": [], "text": "Eric,\n\nIts not invalid. If someone requests /foobar/ and the redirect URL is 'example.com', then Apache should be putting 'example.com' and '/foobar/' together, to make 'example.com/foobar/. Instead, Apache leaves out the forward-slash at the beggining of 'foobar' resulting in 'example.comfoobar'.\n\nHow is this not a bug?\n\n\nAbusing people? I'm not the one who has started drama. I came here and submitted a bug report and debated, then in typical open source community fashion, a couple of cock smokers came along and started yelling out 'troll' just because I did not systematicly agree with everyone.\nPeople like this are pathetic and should not be allowed in open source projects.\n\nI have no need for the mailing-list. I have submitted my bug. If no one is going to fix it, then what ever.", "is_private": false, "bug_id": 54580, "id": 165372, "time": "2013-02-19T15:32:22Z", "creator": "continuumslipgate@gmail.com", "creation_time": "2013-02-19T15:32:22Z", "attachment_id": null}, {"count": 27, "text": "Closing.  Nikolas, if you reopen this issue or fail to mind your language, your bugzilla account will be disabled.  I suggest you follow on the users@httpd.apache.org mailing list.", "creator": "danielsh@apache.org", "attachment_id": null, "id": 165373, "time": "2013-02-19T15:54:55Z", "bug_id": 54580, "creation_time": "2013-02-19T15:54:55Z", "tags": [], "is_private": false}, {"count": 28, "tags": [], "creator": "erwann.abalea@keynectis.com", "attachment_id": null, "id": 165374, "time": "2013-02-19T16:10:33Z", "bug_id": 54580, "creation_time": "2013-02-19T16:10:33Z", "is_private": false, "text": "(In reply to comment #26)\n> Eric,\n> \n> Its not invalid. If someone requests /foobar/ and the redirect URL is\n> 'example.com', then Apache should be putting 'example.com' and '/foobar/'\n> together, to make 'example.com/foobar/. Instead, Apache leaves out the\n> forward-slash at the beggining of 'foobar' resulting in 'example.comfoobar'.\n> \n> How is this not a bug?\n\nIt's the intended purpose. But you fail to read the documentation and normative documents.\n\nThe directive:\nRedirect / http://example.com\nis to be read like this: if the request starts with a '/' (did you notice the first argument? you don't mention it, but it's here), then strip this leading '/' and add what remains to the end of \"http://example.com\".\n\nWith such a directive and your example (/foobar/), then yes, the result will be a redirect to \"http://example.comfoobar/\" which probably won't work (it may work, depending on your network configuration).\n\nIf what you want is redirect everything from \"http://nikolaskallis.com\" to \"https://nikolaskallis.com\", then you can use either one of (probably non exhaustive list):\n\nRedirect / https://nikolaskallis.com/\nRedirectMatch (.*) https://nikolaskallis.com$1\nRewriteRule ^(.*)$ https://nikolaskallis.com$1 [redirect=301]\n\nYour first PHP pseudocode didn't work (see comment 20). Your second PHP pseudocode don't allow to perform the following kind of redirection:\nRedirect /documents/lang/en/ /lang.en."}, {"count": 29, "tags": [], "creator": "continuumslipgate@gmail.com", "attachment_id": null, "id": 165377, "time": "2013-02-19T17:04:37Z", "bug_id": 54580, "creation_time": "2013-02-19T17:04:37Z", "is_private": false, "text": "Daniel Shahaf, your a discrace to the open source movement.\n\n\nErwann Abalea,\n\nNo, I didn't fail to read documentation. I expected Apache to do something that it should have done, but didn't.\n\nSorry. The PHP pseudocodes were not meant to be working code. They were kinda a hybrid example of what I was visualising in the only programming logic I understand.\n\nIf Apache just checked for a FQDN in the redirect setting when anything other than 'GET /' was being requested, then the bug would be fixed.\n\n\nThis discussion has become majorly draining."}, {"count": 30, "tags": [], "creator": "danielsh@apache.org", "attachment_id": null, "text": "Closing.  Further discussion should take place on the users@ list.", "id": 165378, "time": "2013-02-19T17:18:02Z", "bug_id": 54580, "creation_time": "2013-02-19T17:18:02Z", "is_private": false}]