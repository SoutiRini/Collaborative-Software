[{"count": 0, "tags": [], "creator": "dmitri.bourlatchkov@gmail.com", "is_private": false, "text": "Created attachment 31214\nPatch for DigesterFactory.ifFor(...) method to relax assumptions related to class loading\n\nThe idFor(String url) method in org.apache.tomcat.util.descriptor.DigesterFactory appears to try loading resources from the javax.servlet.jsp.resources package using the defining class loader of javax.servlet.ServletContext.\n\nThis is perfectly fine for standalone Tomcat, of course. However, in our application we run embedded Tomcat in an isolated class loader, which includes all of Tomcat's jar files _except_ servlet-api.jar. servlet-api.jar is part of the class loader that is a  parent of the class loader for the embedded Tomcat.\n\nTomcat 7.0.47 worked well in this setup. However in 7.0.50 we hit exceptions like the following:\n\njava.lang.ExceptionInInitializerError\n    at org.apache.catalina.startup.TldConfig.createTldDigester(TldConfig.java:94)\n    at org.apache.catalina.startup.TldConfig.init(TldConfig.java:576)\n    at org.apache.catalina.startup.TldConfig.lifecycleEvent(TldConfig.java:559)\n    at org.apache.catalina.util.LifecycleSupport.fireLifecycleEvent(LifecycleSupport.java:119)\n    at org.apache.catalina.util.LifecycleBase.fireLifecycleEvent(LifecycleBase.java:90)\n    at org.apache.catalina.util.LifecycleBase.setStateInternal(LifecycleBase.java:402)\n    at org.apache.catalina.util.LifecycleBase.init(LifecycleBase.java:110)\n    at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:139)\n    at org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:901)\n    at org.apache.catalina.core.ContainerBase.access$000(ContainerBase.java:133)\n    at org.apache.catalina.core.ContainerBase$PrivilegedAddChild.run(ContainerBase.java:156)\n    at org.apache.catalina.core.ContainerBase$PrivilegedAddChild.run(ContainerBase.java:145)\n    at java.security.AccessController.doPrivileged(Native Method)\n    at org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:875)\n    at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:634)\n    [...]\nCaused by: java.lang.NullPointerException\n    at org.apache.tomcat.util.descriptor.DigesterFactory.idFor(DigesterFactory.java:107)\n    at org.apache.tomcat.util.descriptor.DigesterFactory.<clinit>(DigesterFactory.java:59)\n    ... 25 more \n\nThe reason why the resource is not found is apparently that the class loader of ServletContext does not 'see' resources from jsp-api.jar.\n\nWe can work around that by placing jsp-api.jar into the same class loader that has servlet-api.jar, however this workaround is not ideal from our design perspective.\n\nFrom the source of the idFor(...) method one could guess that the fallback attempt to find the requested resource in the javax.servlet.jsp.resources package is meant to look in jsp-api.jar. For that reason, would it be appropriate to perform the fallback lookup in the defining class loader of javax.servlet.jsp.JspContext? A patch file for the proposed fix is attached. If it is accepted please credit Juan Carlos Estibariz with it.", "id": 172409, "time": "2014-01-15T23:51:30Z", "bug_id": 56016, "creation_time": "2014-01-15T23:51:30Z", "attachment_id": 31214}, {"count": 1, "attachment_id": null, "bug_id": 56016, "text": "The affected url parameter for the idFor(...) method in this case is \"web-jsptaglibrary_1_1.dtd\"", "id": 172410, "time": "2014-01-16T00:01:46Z", "creator": "dmitri.bourlatchkov@gmail.com", "creation_time": "2014-01-16T00:01:46Z", "tags": [], "is_private": false}, {"count": 2, "attachment_id": null, "bug_id": 56016, "is_private": false, "id": 172429, "time": "2014-01-16T19:49:45Z", "creator": "markt@apache.org", "creation_time": "2014-01-16T19:49:45Z", "tags": [], "text": "Thsi doe snot affect 8.0.x where all the referenced resources have been moved to the servlet-api.jar\n\nThis has been fixed in 7.0.x for 7.0.51 onwards.\n\nThis has been proposed for 6.0.x."}, {"count": 3, "tags": [], "bug_id": 56016, "attachment_id": null, "text": "This has been fixed in 6.0.x for 6.0.38 onwards.", "id": 172455, "time": "2014-01-17T15:46:14Z", "creator": "markt@apache.org", "creation_time": "2014-01-17T15:46:14Z", "is_private": false}]