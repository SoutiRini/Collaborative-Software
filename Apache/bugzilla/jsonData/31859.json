[{"count": 0, "tags": [], "creator": "robertmurphy@insightbb.com", "text": "The two diffs add the folowing:\n\n<mt:message url=\"http://www.domain.net\"/>\n\n<mt:message url=\"\">\n   http://www.domain.net\n</mt:message>\n\nAnd, when attaching a file, each attachment will have a Content-ID based on the\nfilename.\n\n\n\nIndex: AttachTag.java\n===================================================================\n--- AttachTag.java\t(revision 1)\n+++ AttachTag.java\t(working copy)\n@@ -97,8 +97,13 @@\n         }\n         mbp = new MimeBodyPart();  // create the bodypart for this attachment\n         body = null;\n-        if (type != null || (file != null && file.length() == 0) ||\n-                (url != null && url.length() == 0) ) {\n+        if (\n+            type != null \n+        || \n+            (file != null && file.length() == 0) \n+        ||\n+            (url != null && url.length() == 0) \n+        ) {\n             return EVAL_BODY_TAG;\n         }\n         return SKIP_BODY;\n@@ -233,10 +238,13 @@\n         try {\n             URL url = new URL(value);\n             mbp.setDataHandler(new DataHandler(url));\n-            if(url.getFile() != null)\n+            if(url.getFile() != null) {\n                 mbp.setFileName(url.getFile());\n-            else\n+                mbp.setContentID(url.getFile());\n+            } else {\n                 mbp.setFileName(value);\n+                mbp.setContentID(value);\n+            }\n \n         } catch(MalformedURLException e) {\n             throw new JspException(\"The URL entered as an attachment was \" +\n@@ -268,6 +276,7 @@\n                 DataSource attachment = new FileDataSource(file);\n                 mbp.setDataHandler(new DataHandler(attachment));\n                 mbp.setFileName(file.getName());\n+                mbp.setContentID(file.getName());\n             } else {\n                 // if the file does not exist it is probably an error in the way\n                 // the page author is adding the path throw an exception so this\nIndex: MessageTag.java\n===================================================================\n--- MessageTag.java\t(revision 1)\n+++ MessageTag.java\t(working copy)\n@@ -19,6 +19,11 @@\n import javax.servlet.jsp.JspException;\n import javax.servlet.jsp.tagext.BodyContent;\n import javax.servlet.jsp.tagext.BodyTagSupport;\n+import java.net.URL;\n+import javax.mail.internet.MimeBodyPart;\n+import javax.activation.DataHandler;\n+import java.net.MalformedURLException;\n+import javax.mail.MessagingException;\n \n /**\n  * MessageTag - JSP tag <b>Message</b> is used to set the message in an e-mail.\n@@ -55,11 +60,27 @@\n     private String type = \"text\";\n \n     /**\n+     * holds the value of body if the url is to be retrieved from the body of\n+     * tag\n+     */\n+    private String url = null;\n+    \n+    /**\n      * character set to be used (default is unspecified)\n      */\n     private String charset = null;\n \n     /**\n+     * object in which the attachment is stored within the e-mail message\n+     */\n+    private MimeBodyPart mbp = null;\n+    \n+    /**\n+     * pointer to the parent tag\n+     */\n+    private MailTag myparent = null;\n+    \n+    /**\n      *  implementation of the method from the tag interface that tells the JSP\n      *  page what to do after the body of this tag\n      *\n@@ -71,26 +92,81 @@\n      *\n      */\n     public int doAfterBody() throws JspException {\n+        BodyContent body = getBodyContent();\n+        mbp = new MimeBodyPart();  // create the bodypart for this attachment \n      \n+        myparent = (MailTag)findAncestorWithClass(this, MailTag.class);\n+        if (url == null) {\n+            // parent tag must be a MailTag, gives access to methods in parent\n+            if (myparent == null) {\n+                throw new JspException(\"message tag not nested within mail tag\");\n+            }\n+            \n+            String message = body.getString();\n+            // Clear the body since we only used it as input for the email address\n+            body.clearBody();\n+            if (message == null) {\n+                throw new JspException(\"The message tag is empty\");\n+            }\n+            myparent.setMessage(message); // set message in the parent tag\n+            myparent.setType(type);  // set the mime type of the message\n+            myparent.setCharset(charset);  // set the character set of the message\n+            \n+        } else if (url.length() == 0 && body != null) {\n+            String s_body = body.getString();\n+            if(s_body != null)\n+                s_body = s_body.trim();\n+            // the url is supposed to come from the body of the tag\n+            if (s_body.length() > 0) {\n+                // prepare the file or url resource to be an attachment\n+                setUrlBodyPart(s_body);\n+            } else {\n+                // body is empty throw error\n+                throw new JspException(\n+                    \"The url must be givenin the body of this tag.\");\n+            }\n+        } else\n+            // create the attachment with the url in the url attribute\n+            setUrlBodyPart(url);\n+        return SKIP_BODY;\n+    }\n \n-\t// parent tag must be a MailTag, gives access to methods in parent\n-\tMailTag myparent = (MailTag)findAncestorWithClass(this, MailTag.class);\n-\tif (myparent == null) {\n-\t    throw new JspException(\"message tag not nested within mail tag\");\n-        }\n+    /**\n+     * wrap the url named attachment in the approiate datahandler and create a\n+     * mimebodypart to be added to the list of attachments\n+     *\n+     * @param value  string that represents a URL\n+     *\n+     */\n+    protected void setUrlBodyPart(String value) throws JspException {\n \n-        BodyContent body = getBodyContent();\n-        String message = body.getString();\n-        // Clear the body since we only used it as input for the email address\n-        body.clearBody();\n-        if (message == null) {\n-            throw new JspException(\"The message tag is empty\");\n+// Added by Jayson Falkner - 5/8/2001\n+\n+        try {\n+            URL url = new URL(value);\n+            mbp.setDataHandler(new DataHandler(url));\n+            if(url.getFile() != null) {\n+                mbp.setFileName(url.getFile());\n+                mbp.setContentID(url.getFile());\n+            } else {\n+                mbp.setFileName(value);\n+                mbp.setContentID(value);\n+            }   \n+            myparent.setMessage((String)mbp.getContent()); // set message in\nthe parent tag\n+            myparent.setType(type);  // set the mime type of the message\n+            myparent.setCharset(charset);  // set the character set of the message\n+        } catch(MalformedURLException e) {\n+            throw new JspException(\"The URL entered as an attachment was \" +\n+                        \"incorrectly formatted please check it and try again.\");\n+        } catch(MessagingException e) {\n+            throw new JspException(\"The Resource named by \" + url + \" could not\"\n+                                   + \" be used as the message body.\");\n+        } catch(java.io.IOException ioe) {\n+            throw new JspException(\"The Resource named by \" + url + \" could not\"\n+                                   + \" be cast to a String.\");\n         }\n-\tmyparent.setMessage(message); // set message in the parent tag\n-\tmyparent.setType(type);  // set the mime type of the message\n-\tmyparent.setCharset(charset);  // set the character set of the message\n-\treturn SKIP_BODY;\n+// End of added\n     }\n-\n+    \n     /**\n      * set the mime type for this email text or html\n      *\n@@ -110,4 +186,15 @@\n     public void setCharset(String value) {\n \tcharset = value;\n     }\n+    \n+    /**\n+     * set the resource named by URL into a mimebodypart so that it can be added\n+     * to the list of attachments for this e-mail\n+     *\n+     * @param value  full url including http://, to the resource to be added as\n+     *               an attachment\n+     */\n+    public void setUrl(String value) {\n+        url = value;\n+    }\n }", "id": 65561, "time": "2004-10-23T02:41:51Z", "bug_id": 31859, "creation_time": "2004-10-23T02:41:51Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 31859, "text": "Created attachment 13203\nMake the message tag capable of handling a url attribute or a url attribute and a url body", "id": 65562, "time": "2004-10-23T02:47:51Z", "creator": "robertmurphy@insightbb.com", "creation_time": "2004-10-23T02:47:51Z", "is_private": false, "attachment_id": 13203}, {"count": 2, "attachment_id": 13204, "bug_id": 31859, "text": "Created attachment 13204\nAdd a Content-ID for each attachment based on its source filename", "id": 65563, "time": "2004-10-23T02:48:44Z", "creator": "robertmurphy@insightbb.com", "creation_time": "2004-10-23T02:48:44Z", "tags": [], "is_private": false}, {"count": 3, "tags": [], "text": "The two patches attached were generated with SubVersion 1.1, don't know if they\nare the same as files generated with other diff programs.\n\nDid not include the modified tld, just requires copying the url block from\nattach to message.", "is_private": false, "id": 65564, "creator": "robertmurphy@insightbb.com", "time": "2004-10-23T02:53:56Z", "bug_id": 31859, "creation_time": "2004-10-23T02:53:56Z", "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 31859, "text": "Resolving. Taglib has been retired.", "id": 132418, "time": "2009-11-29T19:40:21Z", "creator": "bayard@apache.org", "creation_time": "2009-11-29T19:40:21Z", "is_private": false, "attachment_id": null}]