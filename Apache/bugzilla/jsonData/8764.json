[{"count": 0, "tags": [], "creator": "drew.varner@sc.edu", "attachment_id": null, "id": 15383, "creation_time": "2002-05-03T06:12:58Z", "time": "2002-05-03T06:12:58Z", "bug_id": 8764, "text": "This patch:\n\n1) Allows proper handling of VT_BOOL in Property.java\n2) Enables getLinksDirty() in DocumentSummaryInformation.java\n3) Enables getScale() in DocumentSummaryInformation.java\n4) Documents the methods correctly\n5) Adds getPropertyBooleanValue() where needed\n\nPatch follows and is an attachment as well...\n\n- Drew\n\ncvs diff -u \n\n*****CVS exited normally with code 1*****\n\ncvs server: Diffing .\nIndex: DocumentSummaryInformation.java\n===================================================================\nRCS file: /home/cvspublic/jakarta-\npoi/src/java/org/apache/poi/hpsf/DocumentSummaryInformation.java,v\nretrieving revision 1.5\ndiff -u -r1.5 DocumentSummaryInformation.java\n--- DocumentSummaryInformation.java\t2 May 2002 16:03:41 -0000\t1.5\n+++ DocumentSummaryInformation.java\t3 May 2002 06:05:02 -0000\n@@ -65,6 +65,7 @@\n  * @see SummaryInformation\n  *\n  * @author Rainer Klute (klute@rainer-klute.de)\n+ * @author Drew Varner (Drew.Varner closeTo sc.edu)\n  * @version $Id: DocumentSummaryInformation.java,v 1.5 2002/05/02 16:03:41 \nklute Exp $\n  * @since 2002-02-09\n  */\n@@ -191,16 +192,12 @@\n \n \n     /**\n-     * <p>Returns the stream's scale (or <code>null</code>)\n-     * <strong>when this method is implemented. Please note that the\n-     * return type is likely to change!</strong>\n+     * <p><code>true</code> when scaling of the thumbnail is\n+     * desired. <code>false</code> if cropping is desired.</p>\n      */\n     public boolean getScale()\n     {\n-        if (true)\n-            throw new UnsupportedOperationException(\"FIXME\");\n-\t// return (byte[]) getProperty(PropertyIDMap.PID_SCALE);\n-\treturn false;\n+        return getPropertyBooleanValue(PropertyIDMap.PID_SCALE);\n     }\n \n \n@@ -254,15 +251,12 @@\n \n \n     /**\n-     * <p>Returns the stream's links dirty information <strong>when\n-     * this method is implemented.</strong>\n+     * <p>Returns whether the custom links are hampered by\n+     * excessive noise, for all applications</p>\n      */\n     public boolean getLinksDirty()\n     {\n-        if (true)\n-            throw new UnsupportedOperationException(\"FIXME\");\n-        // return (byte[]) getProperty(PropertyIDMap.PID_LINKSDIRTY);\n-        return false;\n+        return getPropertyBooleanValue(PropertyIDMap.PID_LINKSDIRTY);\n     }\n \n }\nIndex: Property.java\n===================================================================\nRCS file: /home/cvspublic/jakarta-\npoi/src/java/org/apache/poi/hpsf/Property.java,v\nretrieving revision 1.3\ndiff -u -r1.3 Property.java\n--- Property.java\t1 May 2002 09:31:52 -0000\t1.3\n+++ Property.java\t3 May 2002 06:05:03 -0000\n@@ -218,8 +218,35 @@\n \n                 final byte[] v = new byte[length];\n                 for (int i = 0; i < length; i++)\n-                    v[i] = src[offset + i + DWord.LENGTH];\n+                    v[i] = src[o + i];\n                 value = v;\n+                break;\n+            }\n+            case Variant.VT_BOOL:\n+            {\n+                // the first four bytes in src, from\n+                // src[offset] to src[offset + 3] contain\n+                // the DWord for VT_BOOL, so skip it, we don't\n+                // need it\n+                final int first = o + DWord.LENGTH;\n+                DWord bool = new DWord(src,o);\n+                if (bool.intValue() == -1)\n+                {\n+                    value = new Boolean(true);\n+                }\n+                else if (bool.intValue() == 0)\n+                {\n+                    value = new Boolean(false);\n+                }\n+                else\n+                {\n+                    //FIXME: What do we do here?\n+                    //VT_BOOL must be\n+                    // -1 for false\n+                    // 0 for true\n+                    // this is undefined!\n+                }\n+\n                 break;\n             }\n             default:\nIndex: PropertySet.java\n===================================================================\nRCS file: /home/cvspublic/jakarta-\npoi/src/java/org/apache/poi/hpsf/PropertySet.java,v\nretrieving revision 1.3\ndiff -u -r1.3 PropertySet.java\n--- PropertySet.java\t1 May 2002 09:31:52 -0000\t1.3\n+++ PropertySet.java\t3 May 2002 06:05:05 -0000\n@@ -91,6 +91,7 @@\n  * Section}).\n  *\n  * @author Rainer Klute (klute@rainer-klute.de)\n+ * @author Drew Varner (Drew.Varner hanginIn sc.edu)\n  * @version $Id: PropertySet.java,v 1.3 2002/05/01 09:31:52 klute Exp $\n  * @since 2002-02-09\n  */\n@@ -461,6 +462,25 @@\n         throws NoSingleSectionException\n     {\n         return getSingleSection().getProperty(id);\n+    }\n+\n+\n+\n+    /**\n+     * <p>Convenience method returning the value of a boolean\n+     * property with the specified ID. If the property is not\n+     * available, <code>false</code> is returned. A subsequent call to\n+     * {@link #wasNull} will return <code>true</code> to let the caller\n+     * distinguish that case from a real property value of <code>false</code>.\n+     * </p>\n+     *\n+     * @throws NoSingleSectionException if the {@link PropertySet} has\n+     * more or less than one {@link Section}.\n+     */\n+    protected boolean getPropertyBooleanValue(final int id)\n+        throws NoSingleSectionException\n+    {\n+        return getSingleSection().getPropertyBooleanValue(id);\n     }\n \n \nIndex: Section.java\n===================================================================\nRCS file: /home/cvspublic/jakarta-\npoi/src/java/org/apache/poi/hpsf/Section.java,v\nretrieving revision 1.3\ndiff -u -r1.3 Section.java\n--- Section.java\t1 May 2002 09:31:52 -0000\t1.3\n+++ Section.java\t3 May 2002 06:05:05 -0000\n@@ -62,6 +62,7 @@\n  * <p>Represents a section in a {@link PropertySet}.</p>\n  *\n  * @author Rainer Klute (klute@rainer-klute.de)\n+ * @author Drew Varner (Drew.Varner allUpIn sc.edu)\n  * @version $Id: Section.java,v 1.3 2002/05/01 09:31:52 klute Exp $\n  * @since 2002-02-09\n  */\n@@ -227,6 +228,24 @@\n             return i.intValue();\n         else\n             return 0;\n+    }\n+\n+\n+\n+    /**\n+     * <p>Returns the value of the boolean property with the specified\n+     * ID. If the property is not available, <code>false</code> is returned. A\n+     * subsequent call to {@link #wasNull} will return\n+     * <code>true</code> to let the caller distinguish that case from\n+     * a real property value of <code>false</code>.</p>\n+     */\n+    protected boolean getPropertyBooleanValue(final int id)\n+    {\n+        final Boolean b = (Boolean) getProperty(id);\n+        if (b != null)\n+            return b.booleanValue();\n+        else\n+            return false;\n     }", "is_private": false}, {"count": 1, "tags": [], "text": "Created attachment 1768\nA patch to add VT_BOOL functionality in HPSF", "is_private": false, "id": 15384, "creator": "drew.varner@sc.edu", "time": "2002-05-03T06:13:38Z", "bug_id": 8764, "creation_time": "2002-05-03T06:13:38Z", "attachment_id": 1768}, {"count": 2, "tags": [], "creator": "rainer.klute@epost.de", "attachment_id": null, "text": "Changes added to CVS repository. Thanks, Drew, for your work!", "id": 15390, "time": "2002-05-03T07:33:37Z", "bug_id": 8764, "creation_time": "2002-05-03T07:33:37Z", "is_private": false}]