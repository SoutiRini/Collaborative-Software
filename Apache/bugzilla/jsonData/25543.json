[{"count": 0, "tags": [], "text": "Hello,\n\nwe have httpd-2.0.48 installed which acts as a reverse proxy with mod_rewrite to\nbackend servers which runs PHP.\nIf an user accesses a proxied page the first time that arrives at the site,\nmod_usertrack does not set the cookie, although the cookie value appears in the\nlog. This ends up in having lines referring to the same user with different\ncookie values in the log.\nThis happens also when calling static content (i.e. an html page) from the\nbackend, so it is not related to PHP.\n\nThe test I have made is the following:\n\n1) I created an HTML page on the backend\n2) I have removed the cookie that is set by mod_usertrack from my browser\n3) I opened the page through the frontend\n\nIf I Look at the webserver log, filtering only the page I'm loading, for every\npage load a different cookie value appears in the log.\nUsing Netscape cookie manager I discovered that the cookie is not received at all.\n\nHere is the configuration for the reverse proxy:\n\n<VirtualHost 194.177.116.167:80>\n    ServerName www.venere.com\n\n    CustomLog logs/venerecom.log combined_plus_webid env=!no_log\n\n     # Cookie tracking\n    CookieDomain  .venere.com\n    CookieExpires \"1 years\"\n    CookieName WEB_ID\n    CookieTracking on\n\n                                                                               \n                                            DocumentRoot /home/httpd/venerecom/\n     # This is a reverse proxy so proxyrequests should be off\n    ProxyRequests off\n                                                                               \n                                        \n    RewriteEngine on\n\n    RewriteMap server prg:/etc/httpd/conf/lb/loadbalance.pl\n\n    # Round Robin\n    RewriteRule ^/(cgi/.*)$                     to://${server:cgi}/$1\n    RewriteRule ^to://([^/]+)/(.*)              http://$1/$2                   \n[E=REAL_SERVER:$1,P,L]\n                                                                               \n                                        \n#### Whatever arrives here is handled by this server as a local file under\nDocumentRoot    \n\n</VirtualHost>\n                                                                               \n                                        \n\nIf you need more info let me know.\n\nMatteo Fago", "attachment_id": null, "id": 49148, "creator": "fago@venere.com", "time": "2003-12-15T19:27:24Z", "bug_id": 25543, "creation_time": "2003-12-15T19:27:24Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 25543, "attachment_id": null, "id": 67391, "time": "2004-11-23T14:47:53Z", "creator": "apachebugzilla@mikecorlett.com", "creation_time": "2004-11-23T14:47:53Z", "is_private": false, "text": "Just to add that I have exactly the same problem. Slightly different setup, but\nsame issue of a new cookie being created for each object requested by the browser ;\n\nApache Version 2.0.51\nOS : Solaris 9 fully patched\n\nI'm not using the ReverseProxyPath function, but using the [P] parameter in my\nRewriteRules, which obviously does pretty much the same thing.\n\nAgain if you need more information, just yell !\n\nMike\n"}, {"count": 2, "tags": [], "bug_id": 25543, "attachment_id": null, "id": 84308, "time": "2006-01-06T18:11:23Z", "creator": "romain.bourgue@agriculture.gouv.fr", "creation_time": "2006-01-06T18:11:23Z", "is_private": false, "text": "Hi,\n\nI think that I have the same problem with the following situation :\nI use the SSO authentication module \"mod_cas\" to authenticate users on a reverse\nproxied site (Apache 2.0.55 debian).\n\nProblem : Everytime mod_cas tries to set a cookie for the user the Set-Cookie\nisn't recieved by the user.\n\nAttempt of explanation :\nMod_cas module sets a header_out 'Set-cookie:' _before_ the request is handle by\nmod_proxy.\nThen, mod_proxy submits the request to the backend server, take the response and\nseems to override all the headers_out before returning them to the user.\n(Note : the backend server *doesn't*  send a Set-Cookie)\n\nIf I wasn't clear enough, let me know.\n\nI will look into the code to confirm/cancel this explanation and, maybe, find a\nfix...\n\nRomain Bourgue"}, {"count": 3, "tags": [], "bug_id": 25543, "text": "This problem has been fixed in 2.2.\nI made a patch for 2.0.55 that makes mod_proxy to merge the backend_header with\nany pre-existing ones instead of replacing them.\nWith this patch, Set-Cookie headers are kept and forwarded to the user.\n\nI posted it on dev@httpd.apache.org to (re)start a discussion about pre-existing\nheaders for mod-proxy...", "id": 84517, "time": "2006-01-12T10:22:53Z", "creator": "romain.bourgue@agriculture.gouv.fr", "creation_time": "2006-01-12T10:22:53Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 25543, "text": "Created attachment 17398\nDiff file made against proxy_http.c apache 2.0.55\n\nMake mod_proxy keep the pre-existing headers_in", "id": 84518, "time": "2006-01-12T10:34:51Z", "creator": "romain.bourgue@agriculture.gouv.fr", "creation_time": "2006-01-12T10:34:51Z", "is_private": false, "attachment_id": 17398}, {"count": 5, "tags": [], "creator": "romain.bourgue@agriculture.gouv.fr", "attachment_id": null, "text": "BTW, this bug is due to mod_proxy, not mod_usertrack", "id": 84519, "time": "2006-01-12T10:36:08Z", "bug_id": 25543, "creation_time": "2006-01-12T10:36:08Z", "is_private": false}, {"count": 6, "text": "I have apache-2.2.3 and it still don't work in following configuration:  ### proxy rewrite ProxyRequests Off RewriteEngine On RewriteCond  %{REQUEST_URI}    !^/proxy-(status|info) RewriteRule (.*) ajp://localhost:8009/Alexa-0.3/filez$1 [P] ProxyPreserveHost On  ###tracker CookieDomain .filez.com CookieExpires \"4 months\" CookieTracking On  and no cookies in proxied requests. cookies in /proxy-status|info pages are ok. Its not fixed in Apache-2.2 as stated in bug comments ", "creator": "hsn@netmag.cz", "is_private": false, "id": 92089, "time": "2006-08-09T19:18:10Z", "bug_id": 25543, "creation_time": "2006-08-09T19:18:10Z", "tags": [], "attachment_id": null}, {"count": 7, "tags": [], "creator": "rpluem@apache.org", "attachment_id": null, "text": "This should work with mod_proxy_http. I guess it does not work with mod_proxy_ajp.", "id": 92094, "time": "2006-08-09T20:58:30Z", "bug_id": 25543, "creation_time": "2006-08-09T20:58:30Z", "is_private": false}, {"count": 8, "tags": [], "bug_id": 25543, "attachment_id": null, "id": 116206, "time": "2008-05-03T12:06:09Z", "creator": "arh14@cornell.edu", "creation_time": "2008-05-03T12:06:09Z", "is_private": false, "text": "I am seeing this with our own Apache authentication module (performs essentially like mod_cas) for requests which are proxied via mod_proxy_ajp in httpd 2.2.8.  If our module authenticates the request, and then it is proxied via mod_proxy_ajp, our cookie never comes back out to the client.  My superficial skimming of the source reveals that this code in ajp_header.c, 'ajp_unmarshal_response' function, may be the problem:\n\nrc = ajp_msg_get_uint16(msg, &num_headers);\n    if (rc == APR_SUCCESS) {\n        r->headers_out = apr_table_make(r->pool, num_headers);\n    } else {\n        r->headers_out = NULL;\n        num_headers = 0;\n    }\n\nIt looks like the r->headers_out table is being overwritten here, instead of having headers merged into it, as described in previous comments.\n\nWorkaround is to use mod_proxy_http instead where this has been apparently fixed already."}, {"count": 9, "tags": [], "bug_id": 25543, "attachment_id": null, "id": 116207, "time": "2008-05-03T12:15:42Z", "creator": "arh14@cornell.edu", "creation_time": "2008-05-03T12:15:42Z", "is_private": false, "text": "Taking the liberty of updating the title of this bug report.  It looks like Romain's fix may be reused for mod_proxy_ajp."}, {"count": 10, "tags": [], "bug_id": 25543, "text": "Created attachment 21915\nPatch against trunk\n\nCan you please give the attached patch a try and report back?", "id": 116208, "time": "2008-05-03T12:47:46Z", "creator": "rpluem@apache.org", "creation_time": "2008-05-03T12:47:46Z", "is_private": false, "attachment_id": 21915}]