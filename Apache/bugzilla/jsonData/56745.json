[{"count": 0, "attachment_id": null, "bug_id": 56745, "is_private": false, "id": 176524, "time": "2014-07-18T23:53:43Z", "creator": "onealj@apache.org", "creation_time": "2014-07-18T23:53:43Z", "tags": [], "text": "I am getting the following exception when trying to write my workbook out to a file:\n\norg.apache.poi.POIXMLException: java.io.IOException: Can't obtain the input stream from /docProps/app.xml\n\nHere's the code to reproduce the problem (my best translation from Jython to Java)\n// open workbook\n    String filename = \"C:\\\\path\\\\to\\\\file.xlsx\";\n    File file = new File(filename);\n    Workbook wb = new XSSFWorkbook(filename);\n\n    // save the workbook to disk\n    FileOutputStream out = new FileOutputStream(file);\n    wb.write(out);\n    out.close();\n\nThe error occurs while writing the file (wb.write(out)).\n\nAdditionally, after XSSFWorkbook(filename) has run, if I try to rename the file in Windows Explorer, I get a \"File In Use: The application can't be completed because the file is open in Java(TM) Platform SE binary\". I'm not sure if this is a related problem.\n\nThe following code does not have this problem:\n    // open workbook\n    FileInputStream in = new FileInputStream(file);\n    wb = WorkbookFactory.create(file);\n    in.close();\n\n    // save the workbook to disk\n    FileOutputStream out = new FileOutputStream(file);\n    wb.write(out);\n    out.close();\n\nRelated: bug #56537. Does the fix for 56537 also fix this bug?"}, {"count": 1, "tags": [], "text": "Can you try with a recent svn checkout / nightly build + adding a Workbook.close() call?", "attachment_id": null, "id": 176528, "creator": "apache@gagravarr.org", "time": "2014-07-19T08:15:40Z", "bug_id": 56745, "creation_time": "2014-07-19T08:15:40Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 56745, "text": "Using POI 3.11 nightly (2014-07-21), I get the same behavior as 3.10-FINAL.\n\n    // open workbook\n    String filename = \"C:\\\\path\\\\to\\\\New Microsoft Excel Worksheet.xlsx\";\n    Workbook wb = new XSSFWorkbook(filename);\n\n    // save workbook\n    File file = new File(filename);  // output and input filename are the same\n    FileOutputStream out = new FileOutputStream(file);\n    wb.write(out);\n    out.close();\n    wb.close();\n\nraises the following while trying to write to the FileOutputStream\nTraceback (most recent call last):\n  File \"<input>\", line 1, in <module>\nPOIXMLException: org.apache.poi.POIXMLException: java.io.IOException: Can't obtain the input stream from /docProps/app.xml\n\nIt appears that if I read the file unbuffered (either via String or File), the file becomes write protected after calling XSSFWorkbook(String) or XSSFWorkbook(File). The only way to release the write protection after running the above code is to kill the application.\n\nClosing the workbook after reading it frees up the write protection (so the file can be renamed in Windows Explorer or edited in another application), however it causes a problem when trying to write the workbook.\n\n    // open workbook\n    String inFilename = \"C:\\\\path\\\\to\\\\New Microsoft Excel Worksheet.xlsx\";\n    Workbook wb = new XSSFWorkbook(inFilename);\n    wb.close();\n    int sheetCount = wb.getNumberOfSheets(); //returns 3\n\n    // save workbook\n    String outFilename = \"C:\\\\path\\\\to\\\\output.xlsx\";\n    File file = new File(outFilename);\n    FileOutputStream out = new FileOutputStream(file);\n    wb.write(out);\n    out.close();\n    wb.close();\n\nraises the following exception while trying to write to the FileOutputStream.\nTraceback (most recent call last):\n  File \"<input>\", line 1, in <module>\nOpenXML4JRuntimeException: org.apache.poi.openxml4j.exceptions.OpenXML4JRuntimeException: Rule M2.4 exception : this error should NEVER happen, if so please send a mail to the developers team, thanks !\n\nIt seems like the solution for this is to not read and write to the same file (or at least while the workbook hasn't been closed). Maybe this was my misunderstanding of the POI API, but it's possible there's something broken that I've discovered. The problem with this code is that I must keep the file locked for access from XSSFWorkbook(inFilename) to wb.close().\n\n    // open workbook\n    String inFilename = \"C:\\\\path\\\\to\\\\New Microsoft Excel Worksheet.xlsx\";\n    wb = XSSFWorkbook(inFilename);\n\n    // save workbook\n    String outFilename = \"C:\\\\path\\\\to\\\\output.xlsx\";\n    File file = new File(outFilename);\n    FileOutputStream out = new FileOutputStream(file);\n    wb.write(out);\n    out.close();\n    wb.close();", "id": 176571, "attachment_id": null, "creator": "onealj@apache.org", "creation_time": "2014-07-21T20:55:33Z", "time": "2014-07-21T20:55:33Z", "is_private": false}, {"count": 3, "tags": [], "creator": "onealj@apache.org", "is_private": false, "text": "Correction: no wb.close() after out.close() on the 2nd code example of comment #2. The workbook was already closed after XSSFWorkbook(inFilename).", "id": 176572, "time": "2014-07-21T20:58:39Z", "bug_id": 56745, "creation_time": "2014-07-21T20:58:39Z", "attachment_id": null}, {"count": 4, "tags": [], "creator": "apache@gagravarr.org", "is_private": false, "text": "Try any other operating system other than Windows, and it should work just fine...\n\nThe underlying OpenXML code supports in-place write, but XSSF does not, so your options are:\n * Use another OS\n * Write to a different file\n * Write a pile of code to allow XSSF to do an in-place update of the OPCPakcage\n\nHistorically, HSSF only supported writing to a new outputstream because POIFSFileSystem didn't support updating streams within the OLE2 structure. These days, the replacement NPOIFSFileSystem does support it, as does the OPC code, but no-one has been bothered to spend the not insignificant amount of time to update HSSF and XSSF to do in-place updates of streams within open packages", "id": 176573, "time": "2014-07-21T21:06:30Z", "bug_id": 56745, "creation_time": "2014-07-21T21:06:30Z", "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 56745, "attachment_id": null, "id": 180906, "time": "2015-02-10T15:58:13Z", "creator": "dominik.stadler@gmx.at", "creation_time": "2015-02-10T15:58:13Z", "is_private": false, "text": "Based on the previous comments this is nothing that we plan to fix anytime soon unless someone can provide patches."}]