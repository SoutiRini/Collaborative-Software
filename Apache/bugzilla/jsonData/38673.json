[{"count": 0, "tags": [], "bug_id": 38673, "attachment_id": null, "text": "The documentation says that the Web Application classloader delegates the \nloading of classes in the javax.* packages to its parent first. Furthermore, \nit is said that \"any JAR containing Servlet API classes will be ignored by the \n[Web Application] classloader\". Neither statements are true in practice.\n\nThe problem can be easily reproduced:\n1) Create a Web application with a JAR file containing a different version of \nthe JSP specifications classes then the one Tomcat uses;\n2) Explicitely load a class from the javax.servlet.jsp.* package inside the \ncontextInitialized method of a ServletContextListener using the Web \nApplication classloader and its parent;\n3) Compare the classes that are returned.\n\nAn example is shown below.\n\n// This returns the Web Application ClassLoader (the one used\n// to load the implementation of the ServletContextListener\n// interface).\nClassLoader web = getClass().getClassLoader();\n\n// This returns the parent ClassLoader to which loading classes\n// from the javax.* package should be delegated.\nClassLoader parent = web.getParent();\n\n// Both classes should be the same since web should delegate its\n// loading to parent.\nClass c1 = web.loadClass(\"javax.servlet.jsp.el.ELException\");\nClass c2 = web.loadClass(\"javax.servlet.jsp.el.ELException\");\nSystem.out.println(c1 == c2 ? \"As expected!\" : \"BUG!\");", "id": 85840, "time": "2006-02-16T10:19:46Z", "creator": "frederic.poels@ing.be", "creation_time": "2006-02-16T10:19:46Z", "is_private": false}, {"count": 1, "tags": [], "creator": "remm@apache.org", "attachment_id": null, "text": "This got changed.", "id": 85846, "time": "2006-02-16T14:58:43Z", "bug_id": 38673, "creation_time": "2006-02-16T14:58:43Z", "is_private": false}]