[{"count": 0, "tags": [], "bug_id": 57380, "is_private": false, "text": "Imagine we have the following context descriptor, and the application is protected with security constraints:\n\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<Context>\n    \n    <Resource name=\"jdbc/FooDB\"\n            type=\"javax.sql.DataSource\"\n            driverClassName=\"org.postgresql.Driver\"\n            url=\"jdbc:postgresql:foo\"\n            ... />\n    \n    <Realm className=\"org.apache.catalina.realm.DataSourceRealm\"\n           dataSourceName=\"jdbc/FooDB\"\n           ... />\n    \n</Context>\n\nIf DataSource has any problems (driver class not found, connection refused, username/password mismatch, no database etc.), login attempt will give the following in the log:\n\n21-Dec-2014 03:08:58.707 SEVERE [http-nio-8080-exec-1] org.apache.catalina.realm.DataSourceRealm.open Exception performing authentication\n javax.naming.NameNotFoundException: Name [jdbc/FooDB] is not bound in this Context. Unable to find [jdbc].\n\tat org.apache.naming.NamingContext.lookup(NamingContext.java:818)\n\tat org.apache.naming.NamingContext.lookup(NamingContext.java:166)\n\tat org.apache.catalina.realm.DataSourceRealm.open(DataSourceRealm.java:363)\n\tat org.apache.catalina.realm.DataSourceRealm.authenticate(DataSourceRealm.java:260)\n\tat org.apache.catalina.authenticator.BasicAuthenticator.authenticate(BasicAuthenticator.java:111)\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:576)\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:142)\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)\n\tat org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:610)\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:537)\n\tat org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1085)\n\tat org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:658)\n\tat org.apache.coyote.http11.Http11NioProtocol$Http11ConnectionHandler.process(Http11NioProtocol.java:222)\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1556)\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1513)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\n\tat java.lang.Thread.run(Thread.java:745)\n\nThe message is completely misleading, since the actual cause is not printed. Obtaining actual cause requires the knowledge of initialSize=\"1\" hint. Moreover, if we disable security constraints, and (provided that driver is present) try to resolve java:comp/env/jdbc/FooDB from an application, it turns out that the resource in fact *is* bound and alive.\n\nIt would be great if Tomcat did actually log the relevant stacktrace, making easy to diagnose network or database problems with JNDI DataSource + DataSourceRealm combo.", "id": 179901, "time": "2014-12-21T00:39:16Z", "creator": "mitya@cargosoft.ru", "creation_time": "2014-12-21T00:39:16Z", "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 57380, "is_private": false, "text": "Your assumptions are wrong.\n\nYou are missing localDataSource=\"true\" on your Realm. As such it looks for Resource defined in the Global JNDI Context (configured in server.xml). Thus you have a NameNotFoundException.", "id": 179902, "time": "2014-12-21T00:55:09Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2014-12-21T00:55:09Z", "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 57380, "is_private": false, "text": "(In reply to Konstantin Kolinko from comment #1)\n\nKonstantin, thank you for your tip, with localDataSource=\"true\" I can see relevant stacktrace in the log. Still I can't get why does it work without localDataSource=\"true\" if the DataSource is OK?", "id": 179903, "time": "2014-12-21T01:13:01Z", "creator": "mitya@cargosoft.ru", "creation_time": "2014-12-21T01:13:01Z", "attachment_id": null}, {"count": 3, "tags": [], "creator": "markt@apache.org", "is_private": false, "id": 179990, "attachment_id": null, "bug_id": 57380, "creation_time": "2014-12-23T09:52:39Z", "time": "2014-12-23T09:52:39Z", "text": "Given that the JNDI name can not be found, the excpetion is not at all mis-leading.\n\nBugzilla is not a support forum. If you don't understand what a configuration option does and/or when/why it should be used, please ask on the users' mailing list."}]