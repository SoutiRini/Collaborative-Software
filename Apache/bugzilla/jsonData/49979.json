[{"count": 0, "tags": [], "bug_id": 49979, "is_private": false, "text": "thread dump here:\n---------------------\nhttp-8080-1@2990 daemon, prio=5, in group 'main', status: 'runnable'\n  java.lang.Thread.State: RUNNABLE\n\t  at java.lang.String.charAt(String.java:686)\n\t  at java.text.SimpleDateFormat.subParse(SimpleDateFormat.java:1778)\n\t  at java.text.SimpleDateFormat.parse(SimpleDateFormat.java:1312)\n\t  at java.text.DateFormat.parse(DateFormat.java:335)\n\t  at org.apache.tomcat.util.http.FastHttpDateFormat.internalParseDate(FastHttpDateFormat.java:191)\n\t  at org.apache.tomcat.util.http.FastHttpDateFormat.parseDate(FastHttpDateFormat.java:166)\n\t  at org.apache.catalina.connector.Request.getDateHeader(Request.java:1837)\n\t  at org.apache.catalina.connector.RequestFacade.getDateHeader(RequestFacade.java:632)\n\t  at org.apache.catalina.servlets.DefaultServlet.checkIfModifiedSince(DefaultServlet.java:1604)\n\t  at org.apache.catalina.servlets.DefaultServlet.checkIfHeaders(DefaultServlet.java:615)\n\t  at org.apache.catalina.servlets.DefaultServlet.serveResource(DefaultServlet.java:723)\n\t  at org.apache.catalina.servlets.DefaultServlet.doGet(DefaultServlet.java:332)\n\t  at javax.servlet.http.HttpServlet.service(HttpServlet.java:617)\n\t  at javax.servlet.http.HttpServlet.service(HttpServlet.java:717)\n\t  at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)\n\t  at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n\t  at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)\n\t  at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)\n\t  at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:128)\n\t  at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)\n\t  at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)\n\t  at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:293)\n\t  at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:849)\n\t  at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:583)\n\t  at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:454)\n\t  at java.lang.Thread.run(Thread.java:619)\n------------------------\nThe date variable it attempts to parse above is: \n\"Wed, 21 Apr 2010 21:20:26 GMT\"\n\nOS: CentOS5\nTomcat ver.: 6.0.20\nrequests are coming from \nWindows XP/IE6 SP3\n\nthe same can be reproduced with requests from Vista/Firefox 3.6.9. Will add other environments/details as I test this on various Windows stations/locale as cannot reproduce in linux.", "id": 140079, "time": "2010-09-22T14:19:02Z", "creator": "sosigene@gmail.com", "creation_time": "2010-09-22T14:19:02Z", "attachment_id": null}, {"count": 1, "tags": [], "text": "> OS: CentOS5\n> Tomcat ver.: 6.0.20\n> requests are coming from \n> Windows XP/IE6 SP3\n\nWhich JVM version are you using?", "attachment_id": null, "bug_id": 49979, "id": 140094, "time": "2010-09-23T06:14:03Z", "creator": "pidster@apache.org", "creation_time": "2010-09-23T06:14:03Z", "is_private": false}, {"count": 2, "tags": [], "text": "(In reply to comment #1)\n> > OS: CentOS5\n> > Tomcat ver.: 6.0.20\n> > requests are coming from \n> > Windows XP/IE6 SP3\n> \n> Which JVM version are you using?\n\nsun jdk1.6.0_16", "attachment_id": null, "bug_id": 49979, "id": 140117, "time": "2010-09-23T14:13:22Z", "creator": "sosigene@gmail.com", "creation_time": "2010-09-23T14:13:22Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 49979, "attachment_id": null, "is_private": false, "id": 140218, "time": "2010-09-27T09:32:07Z", "creator": "sosigene@gmail.com", "creation_time": "2010-09-27T09:32:07Z", "text": "closing issue as it is really about the jdk 1.6.0_16 implementation, see SimpleDateFormat lines 1767-1785\n\n\t\t    // For time zones that have no known names, look for strings\n\t\t    // of the form:\n\t\t    //    GMT[+-]hours:minutes or\n\t\t    //    GMT.\n\t\t    if ((text.length() - start) >= GMT.length() &&\n\t\t\ttext.regionMatches(true, start, GMT, 0, GMT.length())) {\n\t\t\tint num;\n\t\t\tcalendar.set(Calendar.DST_OFFSET, 0);\n\t\t\tpos.index = start + GMT.length();\n\n\t\t\ttry { // try-catch for \"GMT\" only time zone string\n\t\t\t    char c = text.charAt(pos.index);\n\t\t\t    if (c == '+') {\n\t\t\t\tsign = 1;\n\t\t\t    } else if (c == '-') {\n\t\t\t\tsign = -1;\n\t\t\t    } \n\t\t\t}\n\t\t\tcatch(StringIndexOutOfBoundsException e) {}"}]