[{"count": 0, "tags": [], "text": "org.apache.log4j.helpers.AppenderAttachableImpl utilizes a java.util.Vector for internal storage, but at least in \"removeAllAppenders()\" additional synchronization is needed. We've got an integration test (part of a bigger setup) where we get reproducible an ArrayIndexOutOfBoundsException (see below).\nPerhaps there is an issue with the test case (i.e. multiple calls to org.apache.log4j.PropertyConfigurator.configureAndWatch(..)) but this should be handled gracefully.\n\nThis is the exception we get:\n\njava.lang.ArrayIndexOutOfBoundsException: 1 >= 1\nat java.util.Vector.elementAt(Vector.java:470)\nat org.apache.log4j.helpers.AppenderAttachableImpl.removeAllAppenders(AppenderAttachableImpl.java:139)\nat org.apache.log4j.Category.removeAllAppenders(Category.java:868)\nat org.apache.log4j.PropertyConfigurator.parseCategory(PropertyConfigurator.java:603)\nat org.apache.log4j.PropertyConfigurator.configureRootCategory(PropertyConfigurator.java:509)\nat org.apache.log4j.PropertyConfigurator.doConfigure(PropertyConfigurator.java:415)\nat org.apache.log4j.PropertyConfigurator.doConfigure(PropertyConfigurator.java:316)\nat org.apache.log4j.PropertyWatchdog.doOnChange(PropertyConfigurator.java:682)\nat org.apache.log4j.helpers.FileWatchdog.checkAndConfigure(FileWatchdog.java:88)\nat org.apache.log4j.helpers.FileWatchdog.<init>(FileWatchdog.java:57)\nat org.apache.log4j.PropertyWatchdog.<init>(PropertyConfigurator.java:674)\nat org.apache.log4j.PropertyConfigurator.configureAndWatch(PropertyConfigurator.java:382)\nat de.espirit.firstspirit.server.logging.LoggingManagerImpl.init(LoggingManagerImpl.java:118)\nat de.espirit.firstspirit.server.AbstractManagerHost.addManager(AbstractManagerHost.java:99)\nat de.espirit.firstspirit.server.MockManagerHost.getManager(MockManagerHost.java:177)\nat de.espirit.firstspirit.server.MockManagerHost.getManager(MockManagerHost.java:166)\nat de.espirit.firstspirit.server.ServerTestCase.getManager(ServerTestCase.java:251)\nat de.espirit.firstspirit.server.ServerTestCase.setUp(ServerTestCase.java:175)\nat de.espirit.firstspirit.io.servlet.TestRemoteLoggingDispatcher.setUp(TestRemoteLoggingDispatcher.java:48)\nat java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334)\nat java.util.concurrent.FutureTask.run(FutureTask.java:166)\nat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110)\nat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)\nat java.lang.Thread.run(Thread.java:722)", "is_private": false, "bug_id": 54325, "id": 164141, "time": "2012-12-19T07:49:38Z", "creator": "pjodeleit@gmx.de", "creation_time": "2012-12-19T07:49:38Z", "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 54325, "text": "This is one area where I've long since been patching log4j -- so that I can use a CopyOnWriteArrayList and avoid synchronization in this area, most especially on callAppenders().", "id": 164148, "time": "2012-12-19T12:12:32Z", "creator": "jessh@ptc.com", "creation_time": "2012-12-19T12:12:32Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "creator": "pjodeleit@gmx.de", "attachment_id": null, "is_private": false, "id": 164150, "time": "2012-12-19T12:51:01Z", "bug_id": 54325, "creation_time": "2012-12-19T12:51:01Z", "text": "I agree, using CopyOnWriteArrayList and iterator() would be the easiest fix. Is compatibility to JDK5 or lower still a prerequisite?"}]