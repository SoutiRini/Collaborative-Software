[{"count": 0, "tags": [], "bug_id": 49423, "attachment_id": null, "id": 137547, "time": "2010-06-10T12:26:16Z", "creator": "jiangpeng.shi@utsouthwestern.edu", "creation_time": "2010-06-10T12:26:16Z", "is_private": false, "text": "One of my project need to read images from an excel file (.xls). Besides reading out the image data, I also need to read out the image position (row and column) from excel file. During this process, I found there is a bug when I tried to get EscherContainerRecord. \nHere was my plan: I tried to read EscherAggregate from HSSFSheet, and then From EscherAggreage, I retrieved a list of the EscherRecord. By going though this list of EscherRecord, and their children, I can get EscherClientAnchorRecord which contains row number and column number. \n\nBut every time if I process a file which has around 50+ or 60+ images, I got an warning: \n WARNING: xxxx bytes remaining but no space left\n WARNING: xxxx bytes remaining but no space left\n\nAnd from the output, I can see there are only about 30+ EscherClientAnchorRecord are retrieved. I believe that EscherClientAnchorRecord is a child of EscherContainerRecord this this case, and the process of creating this EscherContainerRecord get some problems. I checked around the source code, and found the only place where create this warning message is in class : \norg/apache/poi/ddf/EscherContainerRecord.java: with following method:\n  public int fillFields(byte[] data, int pOffset, EscherRecordFactory recordFactory) {\n        int bytesRemaining = readHeader(data, pOffset);\n        int bytesWritten = 8;\n        int offset = pOffset + 8;\n        while (bytesRemaining > 0 && offset < data.length) {\n            EscherRecord child = recordFactory.createRecord(data, offset);\n            int childBytesWritten = child.fillFields(data, offset, recordFactory);\n            bytesWritten += childBytesWritten;\n            offset += childBytesWritten;\n            bytesRemaining -= childBytesWritten;\n            addChildRecord(child);\n            if (offset >= data.length && bytesRemaining > 0) {\n                System.out.println(\"WARNING: \" + bytesRemaining + \" bytes remaining but no space left\");\n            }\n        }\n        return bytesWritten;\n    }"}, {"count": 1, "tags": [], "bug_id": 49423, "attachment_id": 26009, "id": 139793, "time": "2010-09-09T15:39:44Z", "creator": "oleg.kuryan@gmail.com", "creation_time": "2010-09-09T15:39:44Z", "is_private": false, "text": "Created attachment 26009\nClass to reproduce the problem\n\nAttaching java class to repro the problem"}, {"count": 2, "tags": [], "bug_id": 49423, "attachment_id": 26010, "text": "Created attachment 26010\nTest file to use to repro problem\n\nAdding test file to make it easier to repro the problem. It shoulf be passed to the attached Main.java class", "id": 139794, "time": "2010-09-09T15:41:15Z", "creator": "oleg.kuryan@gmail.com", "creation_time": "2010-09-09T15:41:15Z", "is_private": false}, {"count": 3, "attachment_id": null, "creator": "oleg.kuryan@gmail.com", "is_private": false, "id": 139795, "time": "2010-09-09T15:42:50Z", "bug_id": 49423, "creation_time": "2010-09-09T15:42:50Z", "tags": [], "text": "Setting priority as it blocks development of the production task"}, {"count": 4, "tags": [], "text": "If this is a blocker problem for you, then you'll need to either investigate it more yourself, or pay someone who provides POI consultancy to do so for you. POI is a volunteer project!\n\nIf you want to look into this yourself, you'll need to read up the Microsoft specifications on the file format, then manually decode the escher records by hand. Somewhere along the way, you'll hopefully spot the place where POI makes an incorrect assumption about one of the escher records. When you've found that, it will hopefully be quite a quick job to patch it, the hard bit is discovering where our assumptions on the file format and what actually crops up in some files differs.", "attachment_id": null, "bug_id": 49423, "id": 139796, "time": "2010-09-09T16:33:35Z", "creator": "apache@gagravarr.org", "creation_time": "2010-09-09T16:33:35Z", "is_private": false}, {"count": 5, "tags": [], "text": "Hi Nick,\n\nThx, for your comments. Just a quick question, maybe you know about another way to get image position? I believe it is commonly used task that is good to have in the POI library.", "attachment_id": null, "id": 139798, "creator": "oleg.kuryan@gmail.com", "time": "2010-09-10T02:48:51Z", "bug_id": 49423, "creation_time": "2010-09-10T02:48:51Z", "is_private": false}, {"count": 6, "tags": [], "text": "HSSF provides a way to iterate over shapes and read their positions. The following code works fine to me:\n\n        HSSFWorkbook workbook = new HSSFWorkbook(new FileInputStream(file));\n        int numSheets = workbook.getNumberOfSheets();\n        for (int i = 0; i < numSheets; i++) {\n            HSSFSheet sheet = workbook.getSheetAt(i);\n            List<HSSFShape> shapes = sheet.getDrawingPatriarch().getChildren();\n            for(HSSFShape shape : shapes){\n                HSSFAnchor anchor = shape.getAnchor();\n\n                if(anchor instanceof HSSFClientAnchor){\n                    // absolute coordinates\n                    HSSFClientAnchor clientAnchor = (HSSFClientAnchor)anchor;\n                    System.out.println(clientAnchor.getRow1() + \",\" + clientAnchor.getRow2());\n                } else if (anchor instanceof HSSFChildAnchor){\n                    // shape is grouped and the anchor is expressed in the coordinate system of the group \n                    HSSFChildAnchor childAnchor = (HSSFChildAnchor)anchor;\n                    System.out.println(childAnchor.getDy1() + \",\" + childAnchor.getDy2());\n                }\n            }\n        }\n\nIf this code misses some images then please attach the problem file and a junit demonstrating what particular is missing. \n\nYegor", "attachment_id": null, "id": 145336, "creator": "yegor@dinom.ru", "time": "2011-03-28T03:51:16Z", "bug_id": 49423, "creation_time": "2011-03-28T03:51:16Z", "is_private": false}, {"count": 7, "tags": [], "creator": "oleg.kuryan@gmail.com", "attachment_id": null, "id": 148829, "time": "2011-08-25T18:55:27Z", "bug_id": 49423, "creation_time": "2011-08-25T18:55:27Z", "is_private": false, "text": "Yegor,\n\nI have to reopen it. Please, try your code with excel file that I have attached to the current issue. I got the following Warnings:\n\nWARNING: 9940 bytes remaining but no space left\nWARNING: 9940 bytes remaining but no space left"}, {"count": 8, "tags": [], "bug_id": 49423, "attachment_id": null, "id": 148830, "time": "2011-08-25T18:56:48Z", "creator": "oleg.kuryan@gmail.com", "creation_time": "2011-08-25T18:56:48Z", "is_private": false, "text": "Forgot to mention that NO image coordinates are printed out at all"}, {"count": 9, "tags": [], "bug_id": 49423, "attachment_id": null, "id": 181950, "time": "2015-03-22T17:24:33Z", "creator": "dominik.stadler@gmx.at", "creation_time": "2015-03-22T17:24:33Z", "is_private": false, "text": "Seems to be fixed, I tried to reproduce this, but testing as described in the previous comments works now with the test file attached here."}]