[{"count": 0, "tags": [], "creator": "jose@w3.org", "attachment_id": null, "id": 101053, "time": "2007-03-27T10:31:04Z", "bug_id": 41960, "creation_time": "2007-03-27T10:31:04Z", "is_private": false, "text": "Apache version:\n\n This error is consistent in both Apache 2.0.54 (debian stable), \n Apache 2.2.3 (debian testing), and \n Apache 2.2.4 (official tar-ball compiled in-place),\n\n This wasn't an error in Apache 1.3.6 (and older 1.3.x versions).\n\nTest scenario:\n\nWe're overriding the content-type (and charset) for a specific\nlocation:\n\nServer configuration\n\n<LocationMatch \"^/conneg-test\">\n Options MultiViews\n AddType text/html;charset=utf-8      html htm\n</LocationMatch>\n\nRequesting a file in that directory using the complete URI returns the\ncustom content-type:\n\n$ HEAD http://localhost/conneg-test/design.html\n200 OK\nConnection: close\nDate: Tue, 27 Mar 2007 17:26:14 GMT\nAccept-Ranges: bytes\nETag: \"48131-1acb-c5210c00\"\nServer: Apache/2.2.4 (Unix)\nContent-Length: 6859\nContent-Type: text/html; charset=utf-8\nLast-Modified: Mon, 26 Mar 2007 10:21:36 GMT\nClient-Date: Tue, 27 Mar 2007 17:26:14 GMT\nClient-Peer: 127.0.0.1:80\nClient-Response-Num: 1\n\nRequesting the same file in that directory using conneg returns the\nserver's default content-type for an \".html .htm\" resource. The custom\none has not been taken into account when Apache is doing its internal\nsubrequest for solving the content-negotiated resource:\n\n$ HEAD http://localhost/conneg-test/design \n200 OK\nConnection: close\nDate: Tue, 27 Mar 2007 17:27:35 GMT\nAccept-Ranges: bytes\nETag: \"48131-1acb-c5210c00;a4376980\"\nServer: Apache/2.2.4 (Unix)\nVary: negotiate\nContent-Length: 6859\nContent-Location: design.html\nContent-Type: text/html\nLast-Modified: Mon, 26 Mar 2007 10:21:36 GMT\nClient-Date: Tue, 27 Mar 2007 17:27:35 GMT\nClient-Peer: 127.0.0.1:80\nClient-Response-Num: 1\nTCN: choice\n\nProof:\n\nThe server's default content-type is being served for\ncontent-negotiated resources.  If I add the following configuration\ndirective before the declarations of the virtual servers:\n\nAddType text/my_html;charset=utf-16      html htm\n\nThat is the content-type that is returned by my conneg request:\n\n$ HEAD http://localhost/conneg-test/design \n200 OK\nConnection: close\nDate: Tue, 27 Mar 2007 17:25:43 GMT\nAccept-Ranges: bytes\nETag: \"48131-1acb-c5210c00;a4376980\"\nServer: Apache/2.2.4 (Unix)\nVary: negotiate\nContent-Length: 6859\nContent-Location: design.html\nContent-Type: text/my_html; charset=utf-16\nLast-Modified: Mon, 26 Mar 2007 10:21:36 GMT\nClient-Date: Tue, 27 Mar 2007 17:25:43 GMT\nClient-Peer: 127.0.0.1:80\nClient-Response-Num: 1\nTCN: choice\n\nRequesting http://localhost/conneg-test/design.html still returns the\ncustom content-type, not the default one."}, {"count": 1, "tags": [], "text": "I am able to reproduce the issue. It works fine in httpd 1.3.x but doesn't work\nin httpd 2.2.x as reported.\n", "attachment_id": null, "bug_id": 41960, "id": 101076, "time": "2007-03-27T19:19:58Z", "creator": "basant.kukreja@sun.com", "creation_time": "2007-03-27T19:19:58Z", "is_private": false}, {"count": 2, "tags": [], "creator": "basant.kukreja@sun.com", "attachment_id": null, "id": 101119, "time": "2007-03-28T11:20:01Z", "bug_id": 41960, "creation_time": "2007-03-28T11:20:01Z", "is_private": false, "text": "When we send request /conneg-test/design, in mod_nogotiation walks through the\ndirectory and after it finds a matching design.html then it starts a sub\nrequest calling ap_sub_req_lookup_dirent. (In apache 1.3.x\nap_sub_req_lookup_file is invoked)\n\nSub request will eventually call ap_process_request_internal (called\nprocess_request_internal in 1.3.x). Processing of ap_process_request_internal\nis changed from 2.2.x from 1.3.x. In apache 1.3, location_walk was called\nunconditionally while in apache 2.2.x ap_location_walk is called only file_req\nis false.\n\nrequest.c\n-------------\n    int file_req = (r->main && r->filename);\n...\n    if (!file_req) {\n        if ((access_status = ap_location_walk(r))) {\n...\n\n\nSo as a result ap_location_walk is not called for sub request in apache 2.2.x while\nit is getting called for 1.3.x.\nBecause of this difference in logic, different behaviour is observed in\ndifferent apache versions ( 1.3.x and  2.2.x)\n\nI guess that the above mentioned change in apache 2.2.x is made because of\nperformance reason.\n"}, {"count": 3, "attachment_id": null, "bug_id": 41960, "text": "As I mentioned before, the issue is not limited to Content type, but the\nactual issue is not calling ap_location_walk from ap_process_request_internal.\n\nSuppose, we do the setting like this :\n\n<LocationMatch \"^/conneg-test\">\n    Options MultiViews\n    AddHandler htmlhandler .html\n    Action htmlhandler /cgi-bin/test.php\n</LocationMatch>\n\n------------------------------------------------\nIf we send the /conneg-test/design.html then /cgi-bin/test.php executes. But\nif we send /conneg-test/design request then design.html document is sent.\n------------------------------------------------\n[/disk/apache/httpd-2.2.x] $ curl --dump-header - -o -\nhttp://lbasantk3:4004/conneg-test/design.html\nHTTP/1.1 200 OK\nDate: Wed, 28 Mar 2007 19:39:33 GMT\nServer: Apache/2.2.5-dev (Unix) mod_ssl/2.2.5-dev OpenSSL/0.9.8a DAV/2\nContent-Length: 21\nContent-Type: text/plain\n\ntest.php cgi script!\n------------------------------------------------\n[/disk/apache/httpd-2.2.x] $ curl --dump-header - -o -\nhttp://lbasantk3:4004/conneg-test/design HTTP/1.1 200 OK\nDate: Wed, 28 Mar 2007 19:39:36 GMT\nServer: Apache/2.2.5-dev (Unix) mod_ssl/2.2.5-dev OpenSSL/0.9.8a DAV/2\nContent-Location: design.html\nVary: negotiate\nTCN: choice\nLast-Modified: Wed, 28 Mar 2007 01:12:02 GMT\nETag: \"7a79d-2c-53687c80;5377bec0\"\nAccept-Ranges: bytes\nContent-Length: 44\nContent-Type: text/html\n\n<HTML>\n<BODY>\ntest message\n</BODY>\n</HTML>\n------------------------------------------------\n\nThe behaviour does not seem to be intuitive to apache users.\n", "id": 101129, "time": "2007-03-28T12:52:18Z", "creator": "basant.kukreja@sun.com", "creation_time": "2007-03-28T12:52:18Z", "tags": [], "is_private": false}, {"count": 4, "text": "Following your suggestion, and after doing some tests, I applied the following \npatch to server/request.c:\n\n[[\n*** /tmp/request.c      Sat May 12 04:54:31 2007\n--- ./request.c Wed Jul 12 05:38:44 2006\n***************\n*** 152,161 ****\n          return access_status;\n      }\n\n!     /* Rerun the location walk, which overrides any map_to_storage config.\n       */\n!     if ((access_status = ap_location_walk(r))) {\n!       return access_status;\n      }\n\n      /* Only on the main request! */\n--- 152,165 ----\n          return access_status;\n      }\n\n!     /* Excluding file-specific requests with no 'true' URI...\n       */\n!     if (!file_req) {\n!         /* Rerun the location walk, which overrides any map_to_storage config.\n!          */\n!         if ((access_status = ap_location_walk(r))) {\n!             return access_status;\n!         }\n      }\n\n      /* Only on the main request! */\n]]\n \nThis solves the problem I originally stated, when using the plain-vanilla \napache. Could you confirm if this patch works for you too (without any side \neffect)? \n\nrequest.c:ap_process_request_internal() does two conditional evaluations\nusing filereq. By doing tests, I saw that the the patch worked when suppressing\nit in the second conditional evaluation. I didn't notice any difference in \nbehavior if I supressed it in the first evaluation too.  I'm not sure if you \nhad proposed suppressing all filereq evaluations throughout all of  \nrequest.c:ap_process_request_internal(). In all cases, one of \nthe consequences of keeping the first evaluation, is that ap_translate_name() \nwon't be called when evaluating subrequests... and maybe this is not good.\n\nI was unsure on how to translate\nthe code differences between apache1.3.37 and apache2.2.4. Apache 1.3.37\nreturns calls ap_die() for some of the functions functions that are inside\nthese evaluations, where apache2.2.4 just does a return access_status. Is it \nequivalent in the new architecture?\n\nCould you confirm if this patch works for you (without any side effect)? Or\nprovide further advice? I'm willing to continue testing and trying code \nchanges.\n \nWhen I add our custom aaa modules, I've a side-effect where some of the \npreviously authorized requests that returned HTTP 200, are now giving back HTTP \n403. This may come from work arounds I had added to copy the request's context. \nI will look at this in some days and report again.\n\nThanks!\n\n-jose\n\n\n", "bug_id": 41960, "attachment_id": null, "id": 103123, "time": "2007-05-11T20:25:11Z", "creator": "jose@w3.org", "creation_time": "2007-05-11T20:25:11Z", "tags": [], "is_private": false}, {"count": 5, "tags": [], "bug_id": 41960, "attachment_id": null, "id": 103431, "time": "2007-05-21T12:04:52Z", "creator": "basant.kukreja@sun.com", "creation_time": "2007-05-21T12:04:52Z", "is_private": false, "text": "Can you provide the patch in diff -u format?"}, {"count": 6, "text": "Sorry for the delay. My laptop broke down.\n\nI continued my tests. I removed all the file_req optimizations in\nrequest.c:ap_process_request_internal() and this solved the bug I had reported,\nwithout any noticeable side-effect on our server. The aaa behavior I had\nseen in our modules was due to something else. \n\nHere's the diff -Naur patch. Could you confirm if this patch works for you\n(without any side effect) or provide further advice? I'm willing to continue\ntesting and trying code \nchanges.\n\nThanks!\n\n-jose\n\n--- request.c.orig\t2007-05-31 15:35:57.000000000 +0000\n+++ request.c\t2007-06-04 23:18:48.000000000 +0000\n@@ -101,7 +101,6 @@\n  */\n AP_DECLARE(int) ap_process_request_internal(request_rec *r)\n {\n-    int file_req = (r->main && r->filename);\n     int access_status;\n \n     /* Ignore embedded %2F's in path for proxy requests */\n@@ -133,16 +132,15 @@\n      * next several steps.  Only file subrequests are allowed an empty uri,\n      * otherwise let translate_name kill the request.\n      */\n-    if (!file_req) {\n-        if ((access_status = ap_location_walk(r))) {\n-            return access_status;\n-        }\n+    if ((access_status = ap_location_walk(r))) {\n+      return access_status;\n+    }\n \n-        if ((access_status = ap_run_translate_name(r))) {\n-            return decl_die(access_status, \"translate\", r);\n-        }\n+    if ((access_status = ap_run_translate_name(r))) {\n+      return decl_die(access_status, \"translate\", r);\n     }\n \n+\n     /* Reset to the server default config prior to running map_to_storage\n      */\n     r->per_dir_config = r->server->lookup_defaults;\n@@ -152,14 +150,10 @@\n         return access_status;\n     }\n \n-    /* Excluding file-specific requests with no 'true' URI...\n+    /* Rerun the location walk, which overrides any map_to_storage config.\n      */\n-    if (!file_req) {\n-        /* Rerun the location walk, which overrides any map_to_storage config.\n-         */\n-        if ((access_status = ap_location_walk(r))) {\n-            return access_status;\n-        }\n+    if ((access_status = ap_location_walk(r))) {\n+      return access_status;\n     }\n \n     /* Only on the main request! */\n\n", "bug_id": 41960, "attachment_id": null, "id": 104055, "time": "2007-06-04T16:32:09Z", "creator": "jose@w3.org", "creation_time": "2007-06-04T16:32:09Z", "tags": [], "is_private": false}, {"count": 7, "attachment_id": null, "bug_id": 41960, "text": "Nitpicking: put patches in the Attachments list on a bug.", "id": 104072, "time": "2007-06-05T05:49:40Z", "creator": "davi@apache.org", "creation_time": "2007-06-05T05:49:40Z", "tags": [], "is_private": false}, {"count": 8, "text": "Created attachment 20313\nRestored location walking in subrequests. Optimized released code in 2.2.4 was broken.", "bug_id": 41960, "attachment_id": 20313, "id": 104086, "time": "2007-06-05T08:30:28Z", "creator": "jose@w3.org", "creation_time": "2007-06-05T08:30:28Z", "tags": [], "is_private": false}, {"count": 9, "tags": [], "bug_id": 41960, "attachment_id": null, "text": "I think the patch you submitted will work but ...\n\nI fear from comments \n    /* All file subrequests are a huge pain... they cannot bubble through the\n     * next several steps.  Only file subrequests are allowed an empty uri,\n     * otherwise let translate_name kill the request.\n     */\nthat there may be other consequences of the fix especially performance. I\ncould not arrive at the fix which behaves well as well as perform better.\n\n", "id": 104311, "time": "2007-06-11T13:01:59Z", "creator": "basant.kukreja@sun.com", "creation_time": "2007-06-11T13:01:59Z", "is_private": false}, {"count": 10, "tags": [], "bug_id": 41960, "text": "We have been using this patch for over a month in an internal Apache2 \nproduction mirror of our W3C server. While we can't give yet any evaluation of \nits performance as it's not yet being used as an official mirror, we haven't \ndetected any side-effect from the patch so far (over 50 staff guys use this \nmirror server in their every day activities).\n\nThis is just an empirical observation based on our use and our configuration of \nthe Apache2 server. We're still waiting for the approval from the Apache gurus \nat ASF that it is a solid patch.\n\nI'm less worried by the patch affecting performance of a correctly working \nserver than by the non-use of the patch affecting the content-negotiation \nskills of a more performant server. The best solution would be to have a patch \nthat doesn't affect performance and solves the bug :)\n", "id": 105072, "time": "2007-07-04T13:36:54Z", "creator": "jose@w3.org", "creation_time": "2007-07-04T13:36:54Z", "is_private": false, "attachment_id": null}, {"count": 11, "tags": [], "bug_id": 41960, "attachment_id": 20600, "id": 106371, "time": "2007-08-06T01:36:07Z", "creator": "jose@w3.org", "creation_time": "2007-08-06T01:36:07Z", "is_private": false, "text": "Created attachment 20600\nRestablishes location walking in subrequests (Against v/2.2.4)\n\nThere was a case where the previous patch didn't work. This is a revision (and\nsimplification) of the previous patch that includes one of the changes commited\nto SVN and which solves both conneg issues. These issues are new with respect\nto v2.2.4. They used to work on v.1.3.x\n\nTest scenario for this additional conneg bug. Like in the previous scenario,\nI assume we have a location called /conneg-test. In this location, there's a\nfile called test.html\n\n1. Put in the global server configuration:\n  AddType text/html;charset=iso-8859-1\t\t\t  html htm\n\n2. Add the following specific rule for /conneg-test\n\n<LocationMatch \"^/conneg-test/\">\n  Options +Multiviews\n  AddType text/html;charset=utf-8\t  html htm\n</LocationMatch>\n\n3. Get the file using its own location: specific content-type override works\n\nHEAD http://www.example.com/conneg-test/test.html | grep -i Content\n\nContent-Type: text/html; charset=utf-8\n\n4. Get the file using content-negotiation: we get the global content-type.\nThe specific one wasn't taken into account by the subrequest\n\nHEAD http://www.example.com/conneg-test/test.html | grep -i Content\n\nContent-Location: test.html\nContent-Type: text/html; charset=iso-8859-1\n\n----------------\n\nThis issue is different from the previous one in that the specific Content-Type\nis stated inside the server's configuration, rather than in a .htaccess file.\nThe revised patch fixes both issues."}, {"count": 12, "tags": [], "bug_id": 41960, "attachment_id": 20638, "text": "Created attachment 20638\nRestablishes location walking in subrequests (against httpd trunk)\n\nSame patch as before, but this time against Apache's svn trunk (following\nNick Kew's suggestion).\nThe trunk version has the same bug as 2.2.4. I tested the patch and the\nfix is still valid.", "id": 106590, "time": "2007-08-10T07:33:04Z", "creator": "jose@w3.org", "creation_time": "2007-08-10T07:33:04Z", "is_private": false}, {"count": 13, "tags": [], "bug_id": 41960, "attachment_id": null, "text": "Thank you for your bug submission and analysis.  Commenting so that my primary\nbugzilla filter (open, and comments by myself) keeps your report on my own radar.\n\nAgain, thanks for submitting these proposed changes and the detailed explanation\nof your proposal.", "id": 108189, "time": "2007-09-13T23:09:03Z", "creator": "wrowe@apache.org", "creation_time": "2007-09-13T23:09:03Z", "is_private": false}, {"count": 14, "text": "Patch applied in trunk in r579664.  Better unoptimised than buggy.\n", "bug_id": 41960, "attachment_id": null, "id": 108630, "time": "2007-09-26T07:28:29Z", "creator": "nick@webthing.com", "creation_time": "2007-09-26T07:28:29Z", "tags": [], "is_private": false}, {"count": 15, "text": "Created attachment 21456\nRestablishes location walking in subrequests (Against v/2.2.8)\n\nRemoved a small part of the patch (contributed by someone else) that is already\nproposed by 2.2.8.", "bug_id": 41960, "attachment_id": 21456, "id": 113318, "time": "2008-01-31T09:05:01Z", "creator": "jose@w3.org", "creation_time": "2008-01-31T09:05:01Z", "tags": [], "is_private": false}, {"count": 16, "tags": [], "bug_id": 41960, "attachment_id": null, "id": 122518, "time": "2008-11-15T15:46:23Z", "creator": "nick@webthing.com", "creation_time": "2008-11-15T15:46:23Z", "is_private": false, "text": "*** Bug 45959 has been marked as a duplicate of this bug. ***"}, {"count": 17, "tags": [], "creator": "nick@webthing.com", "attachment_id": null, "id": 122520, "time": "2008-11-15T15:51:21Z", "bug_id": 41960, "creation_time": "2008-11-15T15:51:21Z", "is_private": false, "text": "Was fixed in 2.2.9!"}]