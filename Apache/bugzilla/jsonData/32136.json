[{"count": 0, "tags": [], "text": "When using mod_auth_ldap on Win2k with Apache compiled binaries\napache crashes when any ldap authentication operation is performed.\n\nI believe this is due to the fact that the precompiled binaries\nare using the (unsupported) Microsoft LDAP SDK. The log shows:\n\n[Tue Nov 02 15:14:48 2004] [debug] mod_auth_ldap.c(308): [client\n150.135.47.62] [1724] auth_ldap authenticate: using URL\nldap://draco.library.arizona.edu/dc=library,dc=arizona,dc=edu?sAMAccount\nName?sub?(objectClass=*)\n\n[Tue Nov 02 15:14:48 2004] [debug] mod_auth_ldap.c(313): [client\n150.135.47.62] [1724] auth_ldap authenticate: ap_get_basic_auth_pw()\nreturns 401\n\n[Tue Nov 02 15:15:00 2004] [debug] mod_auth_ldap.c(308): [client\n150.135.47.62] [1724] auth_ldap authenticate: using URL\nldap://draco.library.arizona.edu/dc=library,dc=arizona,dc=edu?sAMAccount\nName?sub?(objectClass=*)\n\n[Tue Nov 02 15:15:03 2004] [notice] Parent: child process exited with\nstatus 1073807364 -- Restarting.\n \n\nWhen I compile against the openldap SDK, modules mod_auth_ldap \nand util_ldap are not found even though they are in the modules \ndirectory with other modules which load fine.\n\nPlease compile windows binaries against an ssl supported LDAP SDK.\n\nAdditionally, the documentation for compilation of Apache on windows\nfor ssl+ldap is atrocious.  I am using VC++ 6.0.", "is_private": false, "bug_id": 32136, "id": 66648, "time": "2004-11-09T23:28:42Z", "creator": "bowent@u.library.arizona.edu", "creation_time": "2004-11-09T23:28:42Z", "attachment_id": null}, {"count": 1, "tags": [], "text": "The effort to fix the LDAP stuff within httpd v2.0 has been effectively\nabandoned, as most of the fixes require major changes to APR v0.9 instead.\n\nThe LDAP effort is now focused on httpd v2.1 (soon to be httpd v2.2), where it\nis no longer experiemental code, and the native Microsoft LDAP libraries are\nsupported.\n\nThe httpd v2.1 source can be obtained via subversion or a simple web mirror from\nhere:\n\nhttp://svn.apache.org/repos/asf/httpd/httpd/trunk/\n\nAPR and APR-util can be obtained from here:\n\nhttp://svn.apache.org/repos/asf/apr/apr/trunk/\nhttp://svn.apache.org/repos/asf/apr/apr-util/trunk/\n\nIf you could test the httpd v2.1 tree to see if the native Microsoft LDAP\nlibraries work, I would be very grateful.\n", "attachment_id": null, "id": 69942, "creation_time": "2005-01-21T22:30:21Z", "time": "2005-01-21T22:30:21Z", "creator": "minfrin@apache.org", "bug_id": 32136, "is_private": false}, {"count": 2, "tags": [], "creator": "bowent@u.library.arizona.edu", "attachment_id": null, "id": 70034, "time": "2005-01-24T17:32:45Z", "bug_id": 32136, "creation_time": "2005-01-24T17:32:45Z", "is_private": false, "text": "I downloaded the source for httpd v2.1, apr and apr-util from the links\nprovided.  When compiling I get the errors:\n\napr_ldap_init.c\n./include\\apr_ldap.h(95) : fatal error C1189: #error :  Support for LDAP v2.0\ntoolkits has been removed from apr-util. Please use an LDAP v3.0 toolkit.\napr_ldap_url.c\n./include\\apr_ldap.h(95) : fatal error C1189: #error :  Support for LDAP v2.0\ntoolkits has been removed from apr-util. Please use an LDAP v3.0 toolkit.\napr_ldap_option.c\n./include\\apr_ldap.h(95) : fatal error C1189: #error :  Support for LDAP v2.0\ntoolkits has been removed from apr-util. Please use an LDAP v3.0 toolkit.\n\n\nI looked at the WINLDAP.H file referenced from apr-ldap.h and it sets \n#define LDAP_VERSION            LDAP_VERSION2\n\nI am using VC++6.0 on an up-to-date Win2KPro box."}, {"count": 3, "tags": [], "creator": "manu.blot@gmail.com", "attachment_id": null, "id": 76619, "time": "2005-06-22T19:58:27Z", "bug_id": 32136, "creation_time": "2005-06-22T19:58:27Z", "is_private": false, "text": "Any news about this trouble ?\n\nIs there no way to have LDAP working out of a Windows box ?\nAre the 2.1 available somewhere ? I do not own a VC M$ compiler.\n\nThanks."}, {"count": 4, "tags": [], "creator": "tmalaher@netstart.com", "attachment_id": null, "is_private": false, "id": 76763, "time": "2005-06-28T19:51:08Z", "bug_id": 32136, "creation_time": "2005-06-28T19:51:08Z", "text": "Further info:\n\nI suspect some of the segfaults with the LDAP module are due to a\nmutliply-defined symbol: ldap_url_parse\n\nBy running \"gdb httpd\", setting a breakpoint in invoke_cmd, \"continue\"ing a few\ntimes, then setting a breakpoint in mod_auth_ldap_parse_url, I'm able to get\nthis output:\n\nBreakpoint 3, mod_auth_ldap_parse_url (cmd=0xbfffa180, config=0x9ec1648,\n    url=0x9ec1710\n\"ldap://bcbmc001/DC=watchtower,DC=ads?sAMAccountName?sub?(objectClass=user)\") at\nmod_auth_ldap.c:758\n758         ap_log_error(APLOG_MARK, APLOG_DEBUG|APLOG_NOERRNO, 0,\n(gdb) n\n762         result = apr_ldap_url_parse(url, &(urld));\n(gdb) s\n\nBreakpoint 2, 0x003e7fc2 in ldap_url_parse () from\n/opt/oracle/9.2/lib/libclntsh.so.9.0\n\nThat's not the function in srclib/apr-util/ldap/apr_ldap_url.c\n\nSo probably the calling parameter lists are different, or the urld structure is\ndifferent, or something.  This explains the subsequent segfault in ap_log_error:\n\n#0  0x00dc277f in apr_vformatter (flush_func=0xdc2fe4 <snprintf_flush>,\nvbuff=0xbfff5ff8, fmt=0xe7bcdf \"s\",\n    ap=0xbfffa0a8) at apr_snprintf.c:945\n#1  0x00dc30b8 in apr_vsnprintf (buf=0xbfff6030 \"[25623] auth_ldap url parse:\nDN: : -1219051216\", len=8135,\n    format=0xe7bcc0 \"[%d] auth_ldap url parse: DN: %s\", ap=0xbfffa0a8) at\napr_snprintf.c:1305\n#2  0x08081bc5 in log_error_core (file=0xe7b10e \"mod_auth_ldap.c\", line=783,\nlevel=15, status=0, s=0x9da7868, r=0x0,\n    pool=0x0, fmt=0xe7bcc0 \"[%d] auth_ldap url parse: DN: %s\", args=0xbfffa0a8)\nat log.c:508\n#3  0x08081cf5 in ap_log_error (file=0xe7b10e \"mod_auth_ldap.c\", line=783,\nlevel=15, status=0, s=0x9da7868,\n    fmt=0xe7bcc0 \"[%d] auth_ldap url parse: DN: %s\") at log.c:557\n#4  0x00e7a909 in mod_auth_ldap_parse_url (cmd=0xbfffa180, config=0x9ec1648,\n    url=0x9ec1710\n\"ldap://server/DC=mydomain,DC=ads?sAMAccountName?sub?(objectClass=user)\") at\nmod_auth_ldap.c:783\n#5  0x0807fa31 in invoke_cmd (cmd=0xe7da88, parms=0xbfffa180, mconfig=0x9ec1648,\nargs=0x9ec1412 \"\") at config.c:797\n\nError log output up to this point is:\n[Tue Jun 28 10:22:20 2005] [debug] mod_auth_ldap.c(758): [25623] auth_ldap url\nparse: `ldap://server/DC=mydomain,DC=ads?sAMAccountName?sub?(objectClass=user)'\n[Tue Jun 28 10:44:32 2005] [debug] mod_auth_ldap.c(779): [25623] auth_ldap url\nparse: Host: DC=mydomain,DC=ads\n[Tue Jun 28 10:44:32 2005] [debug] mod_auth_ldap.c(781): [25623] auth_ldap url\nparse: Port: -1219051216\n\nAs you can see, the urld structure is completely botched:\n(gdb) up\n#4  0x00e7a909 in mod_auth_ldap_parse_url (cmd=0xbfffa180, config=0x9ec1648,\n    url=0x9ec1710\n\"ldap://bcbmc001/DC=watchtower,DC=ads?sAMAccountName?sub?(objectClass=user)\") at\nmod_auth_ldap.c:783\n783         ap_log_error(APLOG_MARK, APLOG_DEBUG|APLOG_NOERRNO, 0,\n(gdb) print urld\n$1 = (LDAPURLDesc *) 0xb756c070\n(gdb) print *urld\n$2 = {lud_next = 0xb756c0b0, lud_scheme = 0x0, lud_host = 0xb756c0b9\n\"DC=watchtower,DC=ads\", lud_port = -1219051216,\n  lud_dn = 0x2 <Address 0x2 out of bounds>, lud_attrs = 0xb756c0e1, lud_scope =\n-1219051344,\n  lud_filter = 0x1 <Address 0x1 out of bounds>, lud_exts = 0x0, lud_crit_exts = 0}\n\nSo the problem is that apache is finding an LDAP URL parse subroutine in the\noracle client libraries instead of the one in APR.\n\nAny suggestions?"}, {"count": 5, "tags": [], "creator": "tmalaher@netstart.com", "attachment_id": null, "id": 76764, "time": "2005-06-28T19:53:55Z", "bug_id": 32136, "creation_time": "2005-06-28T19:53:55Z", "is_private": false, "text": "Whoops. Sorry, futher to the above:\nVersion 2.0.54,\nwith php 4.3.11 compiled dynamically, using oci... which is what pulls in Oracle.\n\nI didn't notice that this bug is marked as 2.1-HEAD.  Apologies."}, {"count": 6, "tags": [], "creator": "jorton@redhat.com", "attachment_id": null, "is_private": false, "id": 76765, "time": "2005-06-28T22:05:05Z", "bug_id": 32136, "creation_time": "2005-06-28T22:05:05Z", "text": "Breakpoint 2, 0x003e7fc2 in ldap_url_parse () from\n/opt/oracle/9.2/lib/libclntsh.so.9.0\n\nthat's \"game over\", Tom.  If Oracle uses the ldap_* namespace as well as\nOpenLDAP then there is no realiable way round this save getting either Oracle or\nOpenLDAP to change the namespace.  You'll have to set up two separate\ninstallations, one of which does not pull in the Oracle libraries, t'other which\ndoes not pull in OpenLDAP."}, {"count": 7, "tags": [], "creator": "tmalaher@netstart.com", "attachment_id": null, "id": 76766, "time": "2005-06-28T22:13:27Z", "bug_id": 32136, "creation_time": "2005-06-28T22:13:27Z", "is_private": false, "text": "Agreed. However a workaround seems to be to build mod_auth_ldap statically, and\nwith libphp4.so loading dynamically, I'm able to get my stuff done.\n\nSince I'm not interested in calling LDAP routines from php, I don't need to\nworry about what would happen in that case (I'm betting bad things.)  I do need\nto call Oracle routine from PHP, so I can't get rid of Oracle's library altogether.\n\nBut you're right. Oracle and OpenLDAP have a fundamental incompatibility."}, {"count": 8, "tags": [], "creator": "jorton@redhat.com", "attachment_id": null, "id": 80469, "time": "2005-09-26T09:00:33Z", "bug_id": 32136, "creation_time": "2005-09-26T09:00:33Z", "is_private": false, "text": "Is the original problem reported here reproducible using the 2.1.7 beta? There\nhave been a number of LDAP problems fixed since 2004-11-09."}, {"count": 9, "tags": [], "creator": "wrowe@apache.org", "attachment_id": null, "is_private": false, "id": 151573, "time": "2011-11-16T22:33:20Z", "bug_id": 32136, "creation_time": "2011-11-16T22:33:20Z", "text": "No reply to info request; closing."}]