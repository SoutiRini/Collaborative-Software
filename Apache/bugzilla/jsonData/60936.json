[{"count": 0, "tags": [], "text": "On TIKA-2313, Steven Hall submitted an example Word 6.0 file whose extracted text is garbage.\n\nFrom what I can tell so far, our more modern code to check for isUnicode in TextPieceTable should not be used on Word 6.0 files.  If I disable that, the text is correctly extracted.\n\nWe should figure out what mechanism was used in Word 6.0 files to determine codepage, and we should look into disabling the isUnicode check for Word 6.0 files.", "attachment_id": null, "bug_id": 60936, "id": 198060, "time": "2017-03-29T16:21:26Z", "creator": "tallison@mitre.org", "creation_time": "2017-03-29T16:21:26Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 60936, "attachment_id": null, "text": "I'm not able easily to figure out how the code page was encoded.\n\nI could only find Win1252 encoded docs (on a quick look) in Tika's regression corpus.\n\nI was able to generate a win1250 via OpenOffice, which I'll attach shortly.\n\nFrom that file, it looks like the codepage _might_ be encoded in 2 ways.\n\n1) (pure guess) in the font information, value \"EE\" at 133B is the code for Windows-1250. \n\n2) \"0504\" at 0F5E-0F5F specifies the Czech language\n\n\nTo test my guesses, I tried modifying each.\n\n1) If I modify the \"EE\" to \"00\" default, ansi, the text is still correctly rendered in Word.\n\n2) However, if I modify the 0504 to 0409 (U.S. English), the text is corrupted.\n\nThis means that Word and OpenOffice are inferring the code page from the language, and preferring that information to the codepage...unless I'm wrong about \"EE\".\n\nI propose opening a half-step issue (60942) to avoid the Unicode check for Word 6.0.  This at least prevents quite a few exceptions in our test corpus.", "id": 198086, "time": "2017-03-30T16:11:32Z", "creator": "tallison@mitre.org", "creation_time": "2017-03-30T16:11:32Z", "is_private": false}, {"count": 2, "tags": [], "creator": "tallison@mitre.org", "attachment_id": 34891, "is_private": false, "id": 198087, "time": "2017-03-30T17:51:48Z", "bug_id": 60936, "creation_time": "2017-03-30T17:51:48Z", "text": "Created attachment 34891\nBug60936 test doc\n\nThis should include a small r with caron.\n\nI generated this file with OpenOffice.\n\nI'll commit this as an ignored test when I commit the fix to BUG 60942."}, {"count": 3, "tags": [], "creator": "tallison@mitre.org", "text": "For posterity, I also checked the FIB's LID, the default system's language, and that was 1033 (English)...so, that doesn't help with this doc.", "id": 198088, "time": "2017-03-30T17:54:30Z", "bug_id": 60936, "creation_time": "2017-03-30T17:54:30Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "creator": "tallison@mitre.org", "attachment_id": null, "is_private": false, "id": 198089, "time": "2017-03-30T18:06:10Z", "bug_id": 60936, "creation_time": "2017-03-30T18:06:10Z", "text": "See https://bz.apache.org/bugzilla/show_bug.cgi?id=50955 where one commenter supports our guess that 6.0 does not contain Unicode.  We still need to figure out how to get the right codepage."}, {"count": 5, "tags": [], "creator": "tallison@mitre.org", "text": "\n\n*** This bug has been marked as a duplicate of bug 50955 ***", "id": 198113, "time": "2017-03-31T18:37:10Z", "bug_id": 60936, "creation_time": "2017-03-31T18:37:10Z", "is_private": false, "attachment_id": null}, {"count": 6, "tags": [], "text": ">1) If I modify the \"EE\" to \"00\" default, ansi, the text is still correctly rendered in Word.\n\n>2) However, if I modify the 0504 to 0409 (U.S. English), the text is corrupted.\n\nHowever, if I modify \"EE\" to the Cyrillic codepage, the text is corrupted.  This suggests that the correct way to handle codepage/languages:\n\n1) get the default language from the block starting 02 75 ...\n2) somehow map that to a character code\n3) if the font's codepage is \"00\", use the  default language->codepage, otherwise use the font's codepage", "attachment_id": null, "bug_id": 60936, "id": 198118, "time": "2017-03-31T18:53:41Z", "creator": "tallison@mitre.org", "creation_time": "2017-03-31T18:53:41Z", "is_private": false}]