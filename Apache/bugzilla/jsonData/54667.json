[{"count": 0, "tags": [], "bug_id": 54667, "text": "Created attachment 30033\njmx example: double quote doesn't match for 031, 032 and 033", "id": 165750, "time": "2013-03-11T17:10:31Z", "creator": "marco.ullasci@gmail.com", "creation_time": "2013-03-11T17:10:31Z", "is_private": false, "attachment_id": 30033}, {"count": 1, "tags": [], "bug_id": 54667, "text": "Created attachment 30034\njmx example: no quotes makes double matches for 029, 035 and others", "id": 165751, "time": "2013-03-11T17:11:57Z", "creator": "marco.ullasci@gmail.com", "creation_time": "2013-03-11T17:11:57Z", "is_private": false, "attachment_id": 30034}, {"count": 2, "tags": [], "bug_id": 54667, "text": "Created attachment 30035\nparameter file used for the jmx files", "id": 165752, "time": "2013-03-11T17:12:43Z", "creator": "marco.ullasci@gmail.com", "creation_time": "2013-03-11T17:12:43Z", "is_private": false, "attachment_id": 30035}, {"count": 3, "tags": [], "creator": "marco.ullasci@gmail.com", "is_private": false, "text": "The attached JMX are skeletons to show the behavior.\nThe actual sampler are only used to check the structure: JDBC samplers can point to any database.\n\nWith 32 lines in the parameter file, each with a different value, the expectation was to have 64 sampler executions.\nWhen quotes are not used several If Controllers are (appear to be) triggered twice: 029 and 035 are an example. In total 88 samplers get executed.\nIf single quotes are used 031, 032 and 033 are not (don't appear to be) triggered at all.\n\nIn order to get all the controller to be triggered exactly once I had to place single quotes as a condition in all the controllers with the exception of 031, 032 and 033\n\n\nAdditional tests with the JMX without quotes:\nTested also on 2.7 on the same W7 64bit machine\nC:\\Users\\MU186000>java -version\njava version \"1.6.0_39\"\nJava(TM) SE Runtime Environment (build 1.6.0_39-b04)\nJava HotSpot(TM) 64-Bit Server VM (build 20.14-b01, mixed mode)\n\nTested with 2.9 also on Win2003\nC:\\Documents and Settings\\Administrator>java -version\njava version \"1.7.0_13\"\nJava(TM) SE Runtime Environment (build 1.7.0_13-b20)\nJava HotSpot(TM) 64-Bit Server VM (build 23.7-b01, mixed mode)\n\nTested with 2.9 also on SLES 10\ns10-1310:~ # java -version\njava version \"1.6.0_16\"\nJava(TM) SE Runtime Environment (build 1.6.0_16-b01)\nJava HotSpot(TM) 64-Bit Server VM (build 14.2-b01, mixed mode)\n\nResult was the same as with 2.9 on W7 64bit.", "id": 165753, "time": "2013-03-11T17:24:13Z", "bug_id": 54667, "creation_time": "2013-03-11T17:24:13Z", "attachment_id": null}, {"count": 4, "attachment_id": null, "bug_id": 54667, "is_private": false, "id": 165761, "time": "2013-03-11T19:36:00Z", "creator": "sebb@apache.org", "creation_time": "2013-03-11T19:36:00Z", "tags": [], "text": "There's insufficient detail here to show that there is a problem, and the test case is not usable as it stands.\n\nAlso remember that the condition is evaluated by Javascript AFTER any variable references are resolved, for example:\n\n${Report_id}=='001'\n\nmight be seen as\n\n028=='001'\n\n==\n\nIf you can provide a minimal stand-alone test case - e.g. using Java sampler rather than JDBC - feel free to re-open"}, {"attachment_id": 30038, "tags": [], "bug_id": 54667, "is_private": false, "count": 5, "id": 165763, "time": "2013-03-11T20:30:58Z", "creator": "marco.ullasci@gmail.com", "creation_time": "2013-03-11T20:30:58Z", "text": "Created attachment 30038\nTest case without any external dependence. Uses the same parameter file\n\nThis test case doesn't require an external connection or library and shows the same behaviour."}, {"count": 6, "tags": [], "bug_id": 54667, "text": "Test 2 runs with the debug sampler.", "id": 165764, "time": "2013-03-11T20:31:49Z", "creator": "marco.ullasci@gmail.com", "creation_time": "2013-03-11T20:31:49Z", "is_private": false, "attachment_id": null}, {"count": 7, "tags": [], "bug_id": 54667, "is_private": false, "text": "The problem is with the condition.\n\nJavascript is interpreting 011 as an octal number, so it matches 009 as well.\n\nIf you want to match strings, ensure you quote *both* sides of the comparison.", "id": 165767, "time": "2013-03-11T23:05:36Z", "creator": "sebb@apache.org", "creation_time": "2013-03-11T23:05:36Z", "attachment_id": null}]