[{"count": 0, "tags": [], "bug_id": 35264, "attachment_id": null, "text": "There is a typo at the end of jk_get_lb_lock in jk_util.c. The last line looks\nlike a copy and paste error taken from jk_get_lb_method. I attached a one line\npatch.\n\nThere is also a slight inconsistency between allowed configuration values for\nthe lock attribute of a worker (1 means optimistic and 0 means pessimistic) and\nthe internal representation (JK_LB_LOCK_PESSIMISTIC=1 and JK_LB_LOCK_DEFAULT=0).\nTo minimize confusion I exchanged the internal representations between the two.\nContained in the same patch.", "id": 76155, "time": "2005-06-08T11:26:08Z", "creator": "rainer.jung@kippdata.de", "creation_time": "2005-06-08T11:26:08Z", "is_private": false}, {"count": 1, "tags": [], "creator": "rainer.jung@kippdata.de", "text": "Created attachment 15332\nSmall patch for shm locking", "id": 76156, "time": "2005-06-08T11:32:13Z", "bug_id": 35264, "creation_time": "2005-06-08T11:32:13Z", "is_private": false, "attachment_id": 15332}, {"count": 2, "tags": [], "bug_id": 35264, "attachment_id": null, "text": "No,\n\nIt should mean 1 pessimistic (locking shared memory on each access)\nand 0 (default or optimistic) meaning no lock are needed.\n\nYour patch is forcing pessimistic locking which should\nbe used only if interested in high accuracy for multi cpu boxes.\n\nI can only agree on the copy/paste typo for\n-        return JK_LB_BYREQUESTS;\n+        return JK_LB_LOCK_DEFAULT;\n\nThat BTW would lead to the same behaviour because both defines are 0\nso there are no functional difference.", "id": 76179, "time": "2005-06-08T20:02:31Z", "creator": "mturk@apache.org", "creation_time": "2005-06-08T20:02:31Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 35264, "attachment_id": null, "is_private": false, "id": 76182, "time": "2005-06-08T21:57:00Z", "creator": "rainer.jung@kippdata.de", "creation_time": "2005-06-08T21:57:00Z", "text": "> No,\n> \n> It should mean 1 pessimistic (locking shared memory on each access)\n> and 0 (default or optimistic) meaning no lock are needed.\n> \n> Your patch is forcing pessimistic locking which should\n> be used only if interested in high accuracy for multi cpu boxes.\n\nI definitely don't want to change the default behaviour. As I understand the\ncode, the numerical values of the constants JK_LB_LOCK_DEFAULT and\nJK_LB_LOCK_PESSIMISTIC have no functional relevance in the code, because all\ncompares are always done to the constants themselves. You could also use 42 and\n99 as the two values:\n\njk_lb_worker.c:    if (p->lblock == JK_LB_LOCK_PESSIMISTIC)\njk_lb_worker.c:    if (p->lblock == JK_LB_LOCK_PESSIMISTIC)\njk_lb_worker.c:    if (p->lblock == JK_LB_LOCK_PESSIMISTIC)\njk_lb_worker.c:    if (p->lblock == JK_LB_LOCK_PESSIMISTIC)\njk_lb_worker.c:    if (p->lblock == JK_LB_LOCK_PESSIMISTIC)\njk_lb_worker.c:    if (p->lblock == JK_LB_LOCK_PESSIMISTIC)\njk_lb_worker.c:        if (p->lblock == JK_LB_LOCK_PESSIMISTIC)\njk_lb_worker.c:        if (p->lblock == JK_LB_LOCK_PESSIMISTIC)\njk_lb_worker.h:#define JK_LB_LOCK_DEFAULT     (1)\njk_lb_worker.h:#define JK_LB_LOCK_PESSIMISTIC (0)\njk_status.c:            jk_printf(s, \"<td>%s</td>\", lb->lblock ==\nJK_LB_LOCK_DEFAULT ? JK_LB_LM_DEFAULT : JK_LB_LM_PESSIMISTIC);\njk_util.c:        return JK_LB_LOCK_DEFAULT;\njk_util.c:        return JK_LB_LOCK_DEFAULT;\njk_util.c:        return JK_LB_LOCK_DEFAULT;\njk_util.c:        return JK_LB_LOCK_PESSIMISTIC;\njk_util.c:        return JK_LB_LOCK_DEFAULT;\n\nWhat I don't like, is that the configuration value \"0\" in workers.properties is\nat the moment internally translated to \"1\" and vice versa. This might lead to\nconfusion and is corrected by that part of my patch.\n\n> I can only agree on the copy/paste typo for\n> -        return JK_LB_BYREQUESTS;\n> +        return JK_LB_LOCK_DEFAULT;\n> \n> That BTW would lead to the same behaviour because both defines are 0\n> so there are no functional difference.\n\nI know, no bug in the code, but I guess the proposed correction is what you\nreally wanted to type ;)"}, {"count": 4, "tags": [], "creator": "mturk@apache.org", "text": "Fixed in the CVS.", "id": 76198, "time": "2005-06-09T10:16:09Z", "bug_id": 35264, "creation_time": "2005-06-09T10:16:09Z", "is_private": false, "attachment_id": null}]