[{"count": 0, "tags": [], "text": "The value of SCRIPT_NAME is wrong in apache 2.0.x...\nTo test it use apache-1.3.x with \nhttp://somewhere/printenv.cgi/http://otherplace\nthen SCRIPT_NAME will be \n/printenv.cgi but with apache-2.0.39\nit will be /printenv.cgi/http:\n\nThis will also result \nin wrong values from the CGI module in perl\n($Q->url(-absolute=>1);) and maybe in PHP somewhere \nelse.\n\nI am also hunting a bug in PHP redirection (header('Location: ...')) but i am not sure \nyet if it's a problem in PHP or apache.", "attachment_id": null, "id": 19478, "creator": "goldt@solidmedia.de", "time": "2002-07-13T18:37:06Z", "bug_id": 10775, "creation_time": "2002-07-13T18:37:06Z", "is_private": false}, {"count": 1, "tags": [], "text": "This is probably the same bug as reported to RedHat in:\n\n   https://bugzilla.redhat.com/bugzilla/show_bug.cgi?id=68125\n\nIn which case, PATH_TRANSLATED and SCRIPT_NAME are corrupted as well as PATH_INFO.", "attachment_id": null, "id": 20085, "creator": "ellson@lucent.com", "time": "2002-07-23T22:01:38Z", "bug_id": 10775, "creation_time": "2002-07-23T22:01:38Z", "is_private": false}, {"count": 2, "tags": [], "text": " The reference provided by John Ellson does appear to be\nthe same bug.\n\nThe proximate cause problem is in the function ap_find_path_info\nin server/util_script.c.  It assumes that the tails\nof the uri and the path_info arguments will match exactly.\nBut in the example case, the uri argument is '/cgi-bin/env/http://bluh'\nand the path_info argument is '/http:/bluh' -- note that the other slash\nbefore the 'bluh' is missing.  Apparently the path_info argument\n(which comes directly from the request structure) has been either\ngarbled or inappropriately normalized.  I don't know yet where this\ngarbling occurs.\n", "is_private": false, "id": 20866, "creator": "mjd-apache-bugzilla+@plover.com", "time": "2002-08-10T04:34:33Z", "bug_id": 10775, "creation_time": "2002-08-10T04:34:33Z", "attachment_id": null}, {"count": 3, "tags": [], "creator": "mjd-apache-bugzilla+@plover.com", "is_private": false, "text": "The normalized value is assigned to r->path_info\nduring the call to ap_directory_walk.  ap_directory_walk contains the following\ncomment:\n\n    /* XXX Notice that this forces path_info to be canonical.  That might\n     * not be desired by all apps. ...\n\nIt would appear that any application that depends on the PATH_INFO from a uri\nsuch as 'http://www.plover.com/cgi-bin/myprogram/http://some.other.url/' \nfalls into the category of \"an app that does not desire this behavior.\"\n\nBut there is still a bug, because ap_find_path_info assumes that the\ntails of the r->path_info and r->uri will match, and they don't,\nbecause the path_info was canonicalized in ap_directory_walk, but the\nr->uri was not canonicalized.  \n\nThe ap_directory_walk comment cited above continues:\n\n\t...  However, some of those same apps likely\n     * have significant security holes.\n     */\n\nI believe this is referring to apps that might be invoked as\nhttp://perl.plover.com/cgi-bin/myapp/../../../../../../../../../etc/passwd.\nCanonicalizing this path may well save 'myapp' from a severe security\nproblem.  However, compressing repeated slashes from the path_info\ndoes not appear to have any analogous security benefit.\n\n\n", "id": 20867, "time": "2002-08-10T05:20:22Z", "bug_id": 10775, "creation_time": "2002-08-10T05:20:22Z", "attachment_id": null}, {"count": 4, "tags": [], "text": "*** Bug 13783 has been marked as a duplicate of this bug. ***", "attachment_id": null, "id": 24933, "creator": "bodewig@apache.org", "time": "2002-10-21T07:07:30Z", "bug_id": 10775, "creation_time": "2002-10-21T07:07:30Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 10775, "attachment_id": null, "is_private": false, "id": 39308, "time": "2003-06-23T23:57:32Z", "creator": "trawick@apache.org", "creation_time": "2003-06-23T23:57:32Z", "text": "2.0.46 as well as HEAD still have this problem."}, {"count": 6, "tags": [], "bug_id": 10775, "text": "*** Bug 20047 has been marked as a duplicate of this bug. ***", "id": 62749, "time": "2004-08-30T10:25:07Z", "creator": "chip@force-elite.com", "creation_time": "2004-08-30T10:25:07Z", "is_private": false, "attachment_id": null}, {"count": 7, "tags": [], "bug_id": 10775, "attachment_id": 13169, "is_private": false, "id": 65463, "time": "2004-10-21T19:02:54Z", "creator": "mail@apexo.de", "creation_time": "2004-10-21T19:02:54Z", "text": "Created attachment 13169\nfix for SCRIPT_NAME, skips multiple-slashes in URI while matching against PATH_INFO (note: this doesn't fix PATH_INFO)"}, {"count": 8, "text": "patch has only been tested against 2.1-HEAD, but should apply to 2.0-HEAD as well\nto fix the issue with PATH_INFO would require a bunch of more work (like\nincluding the functionality of apr_filepath_merge into ap_directory_walk)", "creator": "mail@apexo.de", "attachment_id": null, "id": 65465, "time": "2004-10-21T19:05:49Z", "bug_id": 10775, "creation_time": "2004-10-21T19:05:49Z", "tags": [], "is_private": false}, {"count": 9, "tags": [], "bug_id": 10775, "attachment_id": null, "text": "Debian's apache2_2.0.52-2 has this problem as described. It can also be triggered\nby \"%2f\"s appearing after the script name with \"AllowEncodedSlashes on\", if the\nencoded slash abuts either unencoded slash or another %2f.", "id": 66882, "time": "2004-11-14T18:32:54Z", "creator": "andrewc-apache2bugs2004@piffle.org", "creation_time": "2004-11-14T18:32:54Z", "is_private": false}, {"count": 10, "tags": [], "bug_id": 10775, "attachment_id": null, "text": "according to some CGI spec I recently found the somehow garbled PATH_INFO is \nlegal so the proposed patch should indeed fix the bug  ", "id": 71249, "time": "2005-02-19T18:23:56Z", "creator": "mail@apexo.de", "creation_time": "2005-02-19T18:23:56Z", "is_private": false}, {"count": 11, "tags": [], "bug_id": 10775, "attachment_id": null, "id": 73358, "time": "2005-04-06T22:55:32Z", "creator": "chip@force-elite.com", "creation_time": "2005-04-06T22:55:32Z", "is_private": false, "text": "Patch Seems reasonable to me... Comments from the Crowd?"}, {"count": 12, "tags": [], "text": "Committed patch to HEAD. ", "is_private": false, "id": 76573, "creator": "nick@webthing.com", "time": "2005-06-21T12:53:59Z", "bug_id": 10775, "creation_time": "2005-06-21T12:53:59Z", "attachment_id": null}, {"count": 13, "tags": [], "bug_id": 10775, "text": "Note that the PATH_INFO issue must still be fixed here.  Bug #20047 is about\nPATH_INFO, but it has been marked as a duplicate of this one.  Thus, either we\nfix it here, or we open a new bug report for it.\n\nI do not believe that a PATH_INFO of \"foo//bar\" should be equivalent to\n\"foo/bar\".  Many existing applications certainly do not think so.", "id": 76934, "time": "2005-07-03T06:52:58Z", "creator": "james@jmarshall.com", "creation_time": "2005-07-03T06:52:58Z", "is_private": false, "attachment_id": null}, {"count": 14, "tags": [], "text": "Hello, I am the author of the Perl CGI module and just ran into this bug \nmyself. For those who are interested, I have created a workaround for the bug \nin CGI.pm version 3.11; it will return correct values for script_name(), \npath_info() and url() for versions of Apache both with and without this bug. \nHowever, it will not correct the situation described below in which ScriptAlias \nis used to pass additional path information to the CGI script in such a way \nthat the info does not appear in REQUEST_URI. \n \n ", "is_private": false, "id": 78038, "creator": "lstein@cshl.edu", "time": "2005-08-03T23:22:42Z", "bug_id": 10775, "creation_time": "2005-08-03T23:22:42Z", "attachment_id": null}, {"count": 15, "tags": [], "text": "Committed to HEAD two years ago, and I can't reproduce the problem.  Assuming fixed.", "attachment_id": null, "id": 105797, "creator": "nick@webthing.com", "time": "2007-07-20T01:41:00Z", "bug_id": 10775, "creation_time": "2007-07-20T01:41:00Z", "is_private": false}]