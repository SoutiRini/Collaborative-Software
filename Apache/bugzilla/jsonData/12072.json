[{"count": 0, "tags": [], "text": "Platform: Linux for zSeries (Linux for IBM mainframes)\nWe want to run under Linux for zSeries apache with ssl-support:\n1) We run on 31bit Linux apache 1.3.26 with mod_ssl_2.8.10-1.3.26 and openssl-\n0.9.6g. This works fine with SW-ssl support\n2) We run the same now with openssl-engine-0.9.6g. This works fine with HW-\nengine ssl support.\n3) We run now on 64bit apache 1.3.26 with mod_ssl-1.3.26 and openssl-0.9.6g. \nNow we found following: \n           a) apache started without ssl support >> no problem. \n           b) apache started with ssl support >> problem that apache hang\n4) we run on 64bit now with HW-engine ssl support >> same problem as 3).\n\nWhat we see and found when the problem appeared:\n1. When apache hang. You can see that TCP/IP has established the http or https \nconnections, but the browser gets nothing back. If you send a get request \nnothing happens.\n2. In the apache and ssl logs nothing was found\n3. we run strace on single http daemon and found that apache did not get a \nsemaphore he requested. So he can not read (accept) the socket data. During \nfurther debugging we could localize the problem in http_main.c. \n4. A developer here found the problem in the code.\nHere is the solution he provided us:\n\nError is caused because of the wrong definition of the semun union in the \nApache sources. The member val has to be an int not a long. The diff below will \nfix the problem...\n\ndiff -urN apache_1.3.26/src/main/http_main.c apache_1.3.26-semun-\nfix/src/main/http_main.c\n--- apache_1.3.26/src/main/http_main.c  Wed Jun  5 06:53:15 2002\n+++ apache_1.3.26-semun-fix/src/main/http_main.c        Fri Aug 23 14:27:19 2002\n@@ -747,7 +747,7 @@\n #ifdef NEED_UNION_SEMUN\n /* it makes no sense, but this isn't defined on solaris */\n union semun {\n-    long val;\n+    int val;\n     struct semid_ds *buf;\n     ushort *array;\n };\n\nWe used this temporary fix and the problem was gone. We can use now apache \nunder 64bit with ssl-support (SW and HW-engine).\n\nCan this fix be integrated into apache?", "attachment_id": null, "id": 21787, "creator": "winterling@de.ibm.com", "time": "2002-08-27T09:41:49Z", "bug_id": 12072, "creation_time": "2002-08-27T09:41:49Z", "is_private": false}, {"count": 1, "attachment_id": null, "bug_id": 12072, "text": "I think that fix can be integrated with no controversy.  The same \nfix was necessary in Apache 2.0 (actually in the APR support library) to fix a\nhang on a 64-bit build on HP-UX.\n\nBut!  I don't think that Apache 1.3.x has seen much 64-bit use and I don't\nknow that you should expect that absolutely any 64-bit issue would be fixed in\n1.3.x.  Certainly 64-bit problems will be resolved in 2.0.x, and it has seen\na fair amount of use.", "id": 21810, "time": "2002-08-27T15:03:09Z", "creator": "trawick@apache.org", "creation_time": "2002-08-27T15:03:09Z", "tags": [], "is_private": false}, {"count": 2, "attachment_id": null, "bug_id": 12072, "text": "Your fix has been committed and will be in the next release of Apache 1.3.x.\n\nThanks for your report, and thanks for using Apache!\n", "id": 23143, "time": "2002-09-20T10:16:23Z", "creator": "trawick@apache.org", "creation_time": "2002-09-20T10:16:23Z", "tags": [], "is_private": false}]