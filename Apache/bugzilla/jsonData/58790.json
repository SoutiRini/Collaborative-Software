[{"count": 0, "tags": [], "bug_id": 58790, "attachment_id": null, "id": 187339, "time": "2016-01-03T14:53:29Z", "creator": "p.mouawad@ubik-ingenierie.com", "creation_time": "2016-01-03T14:53:29Z", "is_private": false, "text": "Currently there is an issue in ActionRouter#getInstance()\nIt returns a partially initialized object so a fix would be to use a local object and affect it :\n    public static ActionRouter getInstance() {\n        if (router == null) {\n            synchronized (LOCK) {\n                if(router == null) {\n                    ActionRouter router = new ActionRouter();\n                    router.populateCommandMap();\n                    ActionRouter.router = router;\n                }\n            }\n        }\n        return router;\n    }\n\n\nBut due to CheckDirty using getInstance() in its constructor to register itself as a PreAction to ExitCommand, it leads to a StackoverflowError.\n\nEven without fixing this issue, it reveals an issue that could occur if a Constructor of an AbstractCommand subclass uses ActionRouter.getInstance()"}, {"count": 1, "tags": [], "bug_id": 58790, "text": "(In reply to Philippe Mouawad from comment #0)\n> Currently there is an issue in ActionRouter#getInstance()\n> It returns a partially initialized object so a fix would be to use a local\n> object and affect it :\n>     public static ActionRouter getInstance() {\n>         if (router == null) {\n>             synchronized (LOCK) {\n>                 if(router == null) {\n>                     ActionRouter router = new ActionRouter();\n>                     router.populateCommandMap();\n>                     ActionRouter.router = router;\n>                 }\n>             }\n>         }\n>         return router;\n>     }\n\nAlternatively one could use the IODH idiom.\n\n> \n> But due to CheckDirty using getInstance() in its constructor to register\n> itself as a PreAction to ExitCommand, it leads to a StackoverflowError.\n\nNot sure I follow this.\n\n> Even without fixing this issue, it reveals an issue that could occur if a\n> Constructor of an AbstractCommand subclass uses ActionRouter.getInstance()", "id": 187411, "time": "2016-01-06T12:13:55Z", "creator": "sebb@apache.org", "creation_time": "2016-01-06T12:13:55Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "text": "(In reply to Sebb from comment #1)\n> (In reply to Philippe Mouawad from comment #0)\n> > Currently there is an issue in ActionRouter#getInstance()\n> > It returns a partially initialized object so a fix would be to use a local\n> > object and affect it :\n> >     public static ActionRouter getInstance() {\n> >         if (router == null) {\n> >             synchronized (LOCK) {\n> >                 if(router == null) {\n> >                     ActionRouter router = new ActionRouter();\n> >                     router.populateCommandMap();\n> >                     ActionRouter.router = router;\n> >                 }\n> >             }\n> >         }\n> >         return router;\n> >     }\n> \n> Alternatively one could use the IODH idiom.\n> \n> > \n> > But due to CheckDirty using getInstance() in its constructor to register\n> > itself as a PreAction to ExitCommand, it leads to a StackoverflowError.\n> \n> Not sure I follow this.\nTry you will see\n> \n> > Even without fixing this issue, it reveals an issue that could occur if a\n> > Constructor of an AbstractCommand subclass uses ActionRouter.getInstance()", "attachment_id": null, "id": 187412, "creation_time": "2016-01-06T12:21:33Z", "time": "2016-01-06T12:21:33Z", "creator": "p.mouawad@ubik-ingenierie.com", "bug_id": 58790, "is_private": false}, {"count": 3, "tags": [], "bug_id": 58790, "text": "(In reply to Philippe Mouawad from comment #2)\n> > > But due to CheckDirty using getInstance() in its constructor to register\n> > > itself as a PreAction to ExitCommand, it leads to a StackoverflowError.\n> > \n> > Not sure I follow this.\n> Try you will see\n\nTry what exactly?\n\nJMeter works fine for me if I try to exit without saving an updated test plan.", "id": 187417, "time": "2016-01-06T14:00:14Z", "creator": "sebb@apache.org", "creation_time": "2016-01-06T14:00:14Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 58790, "text": "Note: I agree that the code needs to be changed because there's a clear threading issue. However I have not seen any related failures.", "id": 187418, "time": "2016-01-06T14:01:25Z", "creator": "sebb@apache.org", "creation_time": "2016-01-06T14:01:25Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 58790, "attachment_id": null, "id": 187433, "time": "2016-01-06T20:46:29Z", "creator": "p.mouawad@ubik-ingenierie.com", "creation_time": "2016-01-06T20:46:29Z", "is_private": false, "text": "(In reply to Sebb from comment #3)\n> (In reply to Philippe Mouawad from comment #2)\n> > > > But due to CheckDirty using getInstance() in its constructor to register\n> > > > itself as a PreAction to ExitCommand, it leads to a StackoverflowError.\n> > > \n> > > Not sure I follow this.\n> > Try you will see\n> \n> Try what exactly?\n> \n> JMeter works fine for me if I try to exit without saving an updated test\n> plan.\n\nTry the code that I wrote and run the junit tests."}, {"count": 6, "attachment_id": null, "creator": "sebb@apache.org", "text": "(In reply to Philippe Mouawad from comment #5)\n> (In reply to Sebb from comment #3)\n> > (In reply to Philippe Mouawad from comment #2)\n> > > > > But due to CheckDirty using getInstance() in its constructor to register\n> > > > > itself as a PreAction to ExitCommand, it leads to a StackoverflowError.\n> > > > \n> > > > Not sure I follow this.\n> > > Try you will see\n> > \n> > Try what exactly?\n> > \n> > JMeter works fine for me if I try to exit without saving an updated test\n> > plan.\n> \n> Try the code that I wrote and run the junit tests.\n\nSorry, I see now, you meant that the fix causes the Stack Overflow.\n\nIODH won't help here.\n\nA possible work-round is for ActionRouter to add CheckDirty as a PreAction Listener after it has finished populating the command map. i.e. we ban the use of getInstance from classes that implement Command. I don't like that.\n\nAnother might be to get org.apache.jmeter.JMeter.startGui to run the populateCommandMap code instead of doing it in getInstance. AFAICT that is the first place where ActionRouter is created. This would mean making populateCommandMap public, but it could protect itself from repeated invocations by having a done flag (or seeing if there are any commands). A quick test shows this seems to work.", "id": 187451, "time": "2016-01-07T02:55:20Z", "bug_id": 58790, "creation_time": "2016-01-07T02:55:20Z", "tags": [], "is_private": false}, {"count": 7, "tags": [], "bug_id": 58790, "attachment_id": null, "text": "Fixed:\n\nURL: http://svn.apache.org/viewvc?rev=1723468&view=rev\nLog:\nIssue in CheckDirty and its relation to ActionRouter\nBugzilla Id: 58790\n\nModified:\n    jmeter/trunk/src/core/org/apache/jmeter/JMeter.java\n    jmeter/trunk/src/core/org/apache/jmeter/gui/action/ActionRouter.java\n    jmeter/trunk/xdocs/changes.xml", "id": 187458, "time": "2016-01-07T06:33:43Z", "creator": "sebb@apache.org", "creation_time": "2016-01-07T06:33:43Z", "is_private": false}]