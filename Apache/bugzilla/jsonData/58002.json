[{"count": 0, "tags": [], "bug_id": 58002, "is_private": false, "id": 183323, "attachment_id": 32793, "creator": "robert_kish@yahoo.com", "creation_time": "2015-06-04T12:47:51Z", "time": "2015-06-04T12:47:51Z", "text": "Created attachment 32793\nSample code to read comments.\n\nI have this XLS file that when I attempt to retrieve all HSSFComment via worksheet's drawing patriarch's children, I get a NullPointerException when I attempt to get the comment's column (and row). The _note component didn't get initialized. I have tracked this issue down to:\n\n\norg.apache.poi.hssf.record.EscherAggregate.createAggregate, near line 442:\n\n        // any NoteRecords that follow the drawing block must be aggregated and and saved in the tailRec collection\n        while (loc < records.size()) {\n            if (sid(records, loc) == NoteRecord.sid) {\n                NoteRecord r = (NoteRecord) records.get(loc);\n                agg.tailRec.put(r.getShapeId(), r);\n            } else {\n                break;\n            }\n            loc++;\n        }\n\nIf the current loc points to a record where the sid is NOT NoteRecord, the loop exits without checking additional records. In my test file, the next record is a DrawingSelectionRecord [MSODRAWINGSELECTION] with sid 237 (0xED). The fix that works for my document is to remove the else break, as in:\n\n        // any NoteRecords that follow the drawing block must be aggregated and and saved in the tailRec collection\n        while (loc < records.size()) {\n            if (sid(records, loc) == NoteRecord.sid) {\n                NoteRecord r = (NoteRecord) records.get(loc);\n                agg.tailRec.put(r.getShapeId(), r);\n            }\n            loc++;\n        }\n\nThis code change seems without side effects because loc is not referenced anymore in the method.\n\nAttached is my document that causes this error. I tried changing the pictures or adding new comments, and it ends up rewriting the file in such a way that there's no error. So I have it in the original form. (The pictures come from Windows 7 sample pictures). The document is currently 1.6 MB and might be too large to upload.\n\nAlso attached is a simple program (Java 8) to read the file comments:\n\nExpected output (when I use the debugger to change loc to the next value before testing if it's a NoteRecord):\nRobert Kish:\nYo!: 0,2\n\nRobert Kish:\n2nd note!: 1,2\n\nRobert Kish:\nWoah!: 22,45\n\nRobert Kish:\nWoah top!: 21,0\n\n\nActual output:\nRobert Kish:\nYo!: Exception in thread \"main\" java.lang.NullPointerException\n\tat org.apache.poi.hssf.usermodel.HSSFComment.getColumn(HSSFComment.java:184)\n\tat NoteTest.main(NoteTest.java:26)\n\nThank you."}, {"count": 1, "tags": [], "text": "As mentioned before, when I try to change the pictures in the xls file, the file gets rewritten in a better way and I can't reproduce the error. If you want to see the file, please recommend some file sharing service I should use. The error message that bugzilla displayed didn't provide recommendations. Or even email works.", "attachment_id": null, "id": 183324, "creator": "robert_kish@yahoo.com", "time": "2015-06-04T13:09:36Z", "bug_id": 58002, "creation_time": "2015-06-04T13:09:36Z", "is_private": false}, {"count": 2, "tags": [], "creator": "dominik.stadler@gmx.at", "attachment_id": null, "text": "Does it get smaller when you compress it using zip? Oterwise please try sending the document via mail to the poi-dev or user-list or upload it to dropbox or some other file sharing functionality.", "id": 183656, "time": "2015-06-20T09:46:14Z", "bug_id": 58002, "creation_time": "2015-06-20T09:46:14Z", "is_private": false}, {"count": 3, "tags": [], "creator": "robert_kish@yahoo.com", "attachment_id": null, "text": "I tried dropbox and placed a zip file with an xls inside.\n\nhttps://www.dropbox.com/s/im6khacdotpv28i/Book1.zip?dl=0", "id": 183719, "time": "2015-06-23T19:59:16Z", "bug_id": 58002, "creation_time": "2015-06-23T19:59:16Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 58002, "attachment_id": null, "id": 183793, "time": "2015-06-29T13:12:56Z", "creator": "dominik.stadler@gmx.at", "creation_time": "2015-06-29T13:12:56Z", "is_private": false, "text": "FYI, the proposed change breaks unit tests, at least TestDrawingAggregate, not sure if these are expected or if they indicate a problem with the changes..."}, {"count": 5, "tags": [], "creator": "robert_kish@yahoo.com", "attachment_id": null, "text": "You are correct; my patch fails :(. I downloaded trunk from source and tried at it some more. This will take some time for me to figure out, I'll give it a try in the next week or so and try to submit a new patch. The problem is still the same, NoteRecords out of sequence. What I learned is that the code assumes the records are always in sequence, so it can remove records start to end. But what we really have is start1 to end1, start2 to end2, etc. The referenced JUnit has the same assumption and needs to be updated also.", "id": 183801, "time": "2015-06-29T21:41:15Z", "bug_id": 58002, "creation_time": "2015-06-29T21:41:15Z", "is_private": false}, {"count": 6, "tags": [], "bug_id": 58002, "attachment_id": 32868, "is_private": false, "id": 183819, "time": "2015-06-30T23:38:50Z", "creator": "robert_kish@yahoo.com", "creation_time": "2015-06-30T23:38:50Z", "text": "Created attachment 32868\nDebug version of TestDrawingAggregate\n\nget method in this test now detects all DrawingRecord blocks in the file - not just the first. There is debugging with println and stacktrace to aid in trying to get all the unit tests to pass."}, {"count": 7, "tags": [], "creator": "robert_kish@yahoo.com", "attachment_id": 32869, "text": "Created attachment 32869\nDebug version of EsceherAggregate.java\n\nThis debug version has a modified version of createAggregate which processes multiple DrawingRecords - not just the one mentioned at locFirstDrawingRecord. There is use of println debugging.\n\nThe section \"// Create one big buffer\" will now find all sections to copy bytes.\n\nThe section \"// Associate the object records with the shapes\" now has an additional loop around it so that each DrawingRecord can be processed. The records added to the aggregate are removed at the end of the loop.\n\nThe EscherAggregate is added after the loop.\n\nWith the updated JUnit, this still fails some files. Many files pass, including those with multiple DrawingRecords. But some files fail.", "id": 183820, "time": "2015-06-30T23:46:03Z", "bug_id": 58002, "creation_time": "2015-06-30T23:46:03Z", "is_private": false}, {"count": 8, "tags": [], "creator": "robert_kish@yahoo.com", "attachment_id": null, "text": "I have spent many hours in the past day trying to figure this out, but it is beyond my current level of experience in the POI innards. I leave my work to someone else who may continue at what I started, or learn from my mistakes and come up with a better fix.", "id": 183821, "time": "2015-06-30T23:48:24Z", "bug_id": 58002, "creation_time": "2015-06-30T23:48:24Z", "is_private": false}, {"count": 9, "tags": [], "bug_id": 58002, "attachment_id": 32887, "is_private": false, "id": 183926, "time": "2015-07-07T07:37:23Z", "creator": "dominik.stadler@gmx.at", "creation_time": "2015-07-07T07:37:23Z", "text": "Created attachment 32887\nSmall addition to the integration tests to verify the comments which triggers this bug\n\nAttached a small addition to the integration test which we can apply when this is fixed as it currently triggers this bug as well."}]