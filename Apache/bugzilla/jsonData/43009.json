[{"count": 0, "tags": [], "text": "In this method from org.apache.catalina.manager.ManagerServlet\n\nprotected void uploadWar(HttpServletRequest request, File war)\n    throws IOException {\n\n        ...\n\n        BufferedOutputStream ostream = null;\n        try {\n            istream = request.getInputStream();\n            ostream =\n                new BufferedOutputStream(new FileOutputStream(war), 1024);\n            ...\n        } catch (IOException e) {\n            war.delete();\n            throw e;\n        } finally {\n          ...\n        }\n   ...\n}\n\nIf an Exception is thrown while creating the OutputStream to write the war (say\ndue to lack of write permission in appBase), the useful Exception thrown is\ncaught and the method attempts to clean up with a war.delete(); If an Exception\nis thrown during the delete (as is quite likely), that is thrown out and logged\ninstead of the original more useful one.\n\nSo the catch block in the code above would be better written something like this:\n\n        } catch (IOException originalException) {\n            try {\n                  war.delete();\n            } catch (IOException deleteException)\n                  log(\"Unable to clean up following [\"+originalException+\"] due\nto [\"+deleteException+\"]\");\n                  throw originalException;\n            }\n        }", "attachment_id": null, "bug_id": 43009, "id": 106142, "time": "2007-08-01T07:21:49Z", "creator": "d.alexander@lse.ac.uk", "creation_time": "2007-08-01T07:21:49Z", "is_private": false}, {"attachment_id": null, "tags": [], "bug_id": 43009, "is_private": false, "count": 1, "id": 106143, "time": "2007-08-01T07:23:17Z", "creator": "d.alexander@lse.ac.uk", "creation_time": "2007-08-01T07:23:17Z", "text": "Ooops, patch should have been:\n\n        } catch (IOException originalException) {\n            try {\n                  war.delete();\n            } catch (IOException deleteException)\n                  log(\"Unable to clean up following [\"+originalException+\"] due\nto [\"+deleteException+\"]\");\n            }\n            finally {\n                  throw originalException;\n            }\n        }"}, {"count": 2, "tags": [], "bug_id": 43009, "attachment_id": null, "is_private": false, "id": 106145, "time": "2007-08-01T07:37:13Z", "creator": "d.alexander@lse.ac.uk", "creation_time": "2007-08-01T07:37:13Z", "text": "Rather File.delete throws a SecurityException, not an IOException so it should\nhave been:\n\n        } catch (IOException originalException) {\n            try {\n                  war.delete();\n            } catch (Exception deleteException)\n                  log(\"Unable to clean up following [\"+originalException+\"] due\nto [\"+deleteException+\"]\");\n            }\n            finally {\n                  throw originalException;\n            }\n        }"}, {"count": 3, "text": "In the end, I think there isn't a bug here after all so this issue could be\nsafely ignored.\n\nwar.delete(); is called earlier as the first statement in the method, so if it\nis going to throw a SecurityException, it will already have done so.\n\nThe actual problem I was investigating turned out to be elsewhere (will submit\nthat separately).", "bug_id": 43009, "attachment_id": null, "id": 106168, "time": "2007-08-02T01:52:14Z", "creator": "d.alexander@lse.ac.uk", "creation_time": "2007-08-02T01:52:14Z", "tags": [], "is_private": false}, {"attachment_id": null, "tags": [], "bug_id": 43009, "is_private": false, "count": 4, "id": 106623, "time": "2007-08-10T17:05:20Z", "creator": "john@sourcelabs.com", "creation_time": "2007-08-10T17:05:20Z", "text": "Yes. This shouldn't be a problem."}, {"count": 5, "tags": [], "bug_id": 43009, "is_private": false, "text": "Based on previous comments.", "id": 116213, "time": "2008-05-03T13:26:41Z", "creator": "markt@apache.org", "creation_time": "2008-05-03T13:26:41Z", "attachment_id": null}]