[{"count": 0, "tags": [], "text": "Trying to extract the text from a power point presentation throws an OutOfMemoryError immediately.  Trying to increase the Heap proved useless.  Trying to create a VM of 2Gigs fails because the VM can't allocate enough space, and anything smaller still provides an OutOfMemoryError.\n\nHere is the following code being executed:\n\npublic class Test {\n    public static void main(String[] args) throws Exception{\n        try {\n            PowerPointExtractor _extractor = new PowerPointExtractor(new FileInputStream(\"Presentation - Spani#113D94.ppt\"));\n            String _text = _extractor.getText();\n            System.out.print(_text);\n        } catch( Throwable e ) {\n            e.printStacktrace();\n            System.out.println( Runtime.getRuntime().freeMemory() + \" free out of \" + Runtime.getRuntime().totalMemory() );\n        }\n    }\n}", "attachment_id": null, "id": 122355, "creation_time": "2008-11-10T18:44:17Z", "time": "2008-11-10T18:44:17Z", "creator": "charlie.hubbard@gmail.com", "bug_id": 46182, "is_private": false}, {"count": 1, "tags": [], "text": "The expectation would be that it would parse correctly given that this powerpoint presentation is only 5MB so it seems like even given 20MB of RAM it could parse it without a problem.  This file won't even parse if you give it 1 Gig!  If you can't parse it then I would expect some more predictable exception to thrown rather than OutOfMemory.", "is_private": false, "id": 122356, "creator": "charlie.hubbard@gmail.com", "time": "2008-11-10T18:54:30Z", "bug_id": 46182, "creation_time": "2008-11-10T18:54:30Z", "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 46182, "text": "Fixed in r713009\n\nYegor", "id": 122363, "time": "2008-11-11T02:07:36Z", "creator": "yegor@dinom.ru", "creation_time": "2008-11-11T02:07:36Z", "is_private": false, "attachment_id": null}]