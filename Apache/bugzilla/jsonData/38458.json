[{"count": 0, "tags": [], "bug_id": 38458, "is_private": false, "id": 85240, "creation_time": "2006-01-31T00:44:28Z", "time": "2006-01-31T00:44:28Z", "creator": "amross@stagingconnections.com", "text": "When calling Ant tasks directly from Java, instead of through Ant, the Task has\nno Project associated with it. Unfortunately, some code in Task.java assumes\nthat project is not null and can throw NullPointerExceptions.\n\nTo reproduce:\n\nI found this problem using the XSLTProcess task, but you could get the same\nproblem in any Task. Here is the code I was running. If you read the code in\nTask and TaskComponent you will readily see how a problem can occur in this\nsituation.\n\nString SOURCE_FILE=\"Training/Training Documentation.mm\";\n\nString DESTINATION_FILE=\"Training/Training Documentation.html\";\n\nString TRANSFORM=\"c:/programs/freemind/accessories/tohtml.xsl\";\n\norg.apache.tools.ant.taskdefs.XSLTProcess process=new XSLTProcess();\nFile sourceFile=new File(SOURCE_FILE);\nprocess.setIn(sourceFile);\nFile destination=new File(DESTINATION_FILE);\nprocess.setOut(destination);\nprocess.setBasedir(new File(\"f:/projects/notes/\"));\nprocess.setForce(true);\nprocess.setStyle(TRANSFORM);\nprocess.execute();\n\n\nThe stack trace I get when I run this code is:\n\njava.lang.NullPointerException\n\tat org.apache.tools.ant.Task.log(Task.java:346)\n\tat org.apache.tools.ant.taskdefs.XSLTProcess.execute(XSLTProcess.java:219)\n\tat\nstaging.knowledgebase.DeployDocumentation.createHTMLFiles(DeployDocumentation.java:56)\n\tat\nstaging.knowledgebase.DeployDocumentation.deployDoco(DeployDocumentation.java:81)\n\tat staging.knowledgebase.DeployDocumentation.main(DeployDocumentation.java:91)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:324)\n\tat com.intellij.rt.execution.application.AppMain.main(AppMain.java:78)\nException in thread \"main\" \nProcess finished with exit code 1\n\nExpected result:\nThe process should have completed without crashing. Also, if it crashed, it\nshould have given a more meaningful error message than a NullPointerException.\n\nAnalysis:\n- The NullPointerException is thrown in Task.log. \ngetProject().log(this, msg, msgLevel);\n\n- The problem is, getProject() can legally return null.\n\n- It turns out, Task.java overrides the log(String msg, int msgLevel) method in\nProjectComponent.java. The implementation in ProjectyComponent contains a check\nif project is null, and if so writes to System.err. Task.java fails to replicate\nthis null pointer checking.\n\nMy patch checks if getProject() returns null, and if so just calls the parent\nmethod in ProjectComponent.\n\nHere is the patch to be applied to org.apache.tools.ant.Task:\n\n--- Task.java\tThu Jun 02 15:19:56 2005\n+++ TaskMod.java\tTue Jan 31 10:02:37 2006\n@@ -343,7 +343,11 @@\n      *                 be logged.\n      */\n     public void log(String msg, int msgLevel) {\n-        getProject().log(this, msg, msgLevel);\n+        if(getProject()!=null) {\n+            getProject().log(this, msg, msgLevel);\n+        } else {\n+            super.log(msg,msgLevel);\n+        }\n     }\n \n     /**\n@@ -475,3 +479,4 @@\n         return wrapper;\n     }\n }\n+", "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 38458, "text": "Created attachment 17542\nPatch to apply to org.apache.tools.ant.Task", "id": 85241, "time": "2006-01-31T00:45:33Z", "creator": "amross@stagingconnections.com", "creation_time": "2006-01-31T00:45:33Z", "is_private": false, "attachment_id": 17542}, {"count": 2, "tags": [], "text": "This has historically been considered \"your problem.\"  That said, the patch\nseems fine.", "is_private": false, "id": 85260, "creator": "mbenson@apache.org", "time": "2006-01-31T15:40:27Z", "bug_id": 38458, "creation_time": "2006-01-31T15:40:27Z", "attachment_id": null}, {"count": 3, "tags": [], "creator": "amross@stagingconnections.com", "attachment_id": null, "id": 85280, "time": "2006-01-31T23:12:45Z", "bug_id": 38458, "creation_time": "2006-01-31T23:12:45Z", "is_private": false, "text": "(In reply to comment #2)\n> This has historically been considered \"your problem.\"  That said, the patch\nseems fine.\n\nThat's cool. I *was* able to get around this by calling setProject(), once I had\nfigured out what was going on, so it's not a showstopper. I had to download the\nsource and hunt around a bit to get to this point though. It's always much\neasier and saves a lot of time if you get an informative error message (e.g. \n\"IllegalStateException: setProject() must be called before using this class\" or\nwhatever) instead of a random NullPointerException. Often if I am trying out an\nopen source library and it gives me an internal NullPointerException I'll throw\nit away and try something else. Mind you, this is *Ant*, not some random open\nsource library, so you can get away with that I guess :-)\n"}, {"count": 4, "tags": [], "bug_id": 38458, "attachment_id": null, "is_private": false, "id": 85296, "time": "2006-02-01T11:05:21Z", "creator": "stevel@apache.org", "creation_time": "2006-02-01T11:05:21Z", "text": "There are lots of ant tasks out there that assume that getProject()!=null. we\ncan (and will) patch the logging, but you do need to create a project. It\nrepresents the core context of a set of running ant tasks: logging, properties,\ndatatypes.\n\nIf there is bits of the docs on embedding ant in other apps that you think\nshould be improved, we will happily take those patches on. "}, {"count": 5, "tags": [], "bug_id": 38458, "attachment_id": null, "text": "(In reply to comment #4)\n> ... you do need to create a project. It\n> represents the core context of a set of running ant tasks: logging, properties,\n> datatypes.\n\nIf that is the case, that would ideally be enforced in the constructor. Perhaps\nthe constructor could create a \"default\" project in the project field to ensure\nthe Task always has a project associated with it, for these kind of cases?\n\n> If there is bits of the docs on embedding ant in other apps that you think\n> should be improved, we will happily take those patches on. \n\nI will take a look. It's hard to work out where to put these kind of 'gotchas'. \n\nThanks for taking on this patch. I appreciate it.\nAndreas.\n\n", "id": 85325, "time": "2006-02-02T00:02:51Z", "creator": "amross@stagingconnections.com", "creation_time": "2006-02-02T00:02:51Z", "is_private": false}, {"count": 6, "attachment_id": null, "creator": "mbenson@apache.org", "is_private": false, "id": 85331, "time": "2006-02-02T06:02:09Z", "bug_id": 38458, "creation_time": "2006-02-02T06:02:09Z", "tags": [], "text": "(In reply to comment #5)\n> If that is the case, that would ideally be enforced in the constructor. \nPerhaps\n> the constructor could create a \"default\" project in the project field to \nensure\n> the Task always has a project associated with it, for these kind of cases?\n\nHmm... at first I was like, what?  But if there were a static \nProject.DEFAULT_INSTANCE Project, whose only properties were System properties, \netc... hmmm..."}, {"count": 7, "tags": [], "text": "\n> Hmm... at first I was like, what?  But if there were a static \n> Project.DEFAULT_INSTANCE Project, whose only properties were System properties, \n> etc... hmmm...\n\nI am totally not familiar with the Ant codebase, but...\nI was thinking the constructor would just do a \n\nsetProject(new Project());\n\ninstead of me having to mutter the mystical incantation\n\nXSLTProcess process=new XSLTProcess();\nprocess.setProject(new Project());\n\nwhich is what I am doing now to get things working. Or as you suggest it could\nuse a static Project instance, if that works better.\n\nIt just seems to me that either\n1) Every Task has a Project, in which case the Task class should enforce that \nor\n2) a Project is optional, and subclasses of Task should not assume there is one.\n", "is_private": false, "id": 85332, "creator": "amross@stagingconnections.com", "time": "2006-02-02T07:45:36Z", "bug_id": 38458, "creation_time": "2006-02-02T07:45:36Z", "attachment_id": null}, {"count": 8, "attachment_id": null, "creator": "peterreilly@apache.org", "text": "I am afraid not, This would cause so many Backword and Forward compatibly\nproblems, it would not be funny.\n\nAll most ant objects live in a Project context. A Project context provides a large\nnumber of servies - properties, location of build file, references, tasks/type etc.\nJust creating a project in a ant object constructor is not sufficient.\n\nOne way to look at project would be as a kind of ejb container.\n\nPerhaps every task should enforce the need to have the project\nin the constructor. However ant objects normally do not enforce having\nthe construtor make a valid object. Doing this would make\nxml -> java reflection configured objects impossible.\n\nIn any case, ant code changes are *very* conservative. Normally\na public method or constructor is not allowed to be removed or changed\nin new releases of ant.", "id": 85334, "time": "2006-02-02T09:50:06Z", "bug_id": 38458, "creation_time": "2006-02-02T09:50:06Z", "tags": [], "is_private": false}, {"count": 9, "tags": [], "text": "(In reply to comment #8)\n> I am afraid not, This would cause so many Backword and Forward compatibly\n> problems, it would not be funny.\n\nCome on, Peter, ANYTHING can be funny if you try hard enough...", "attachment_id": null, "id": 85347, "creator": "mbenson@apache.org", "time": "2006-02-02T15:13:55Z", "bug_id": 38458, "creation_time": "2006-02-02T15:13:55Z", "is_private": false}, {"count": 10, "tags": [], "creator": "jkf@apache.org", "attachment_id": null, "id": 85370, "time": "2006-02-02T21:09:54Z", "bug_id": 38458, "creation_time": "2006-02-02T21:09:54Z", "is_private": false, "text": "Fixed for logging by falling back to the baseclass logging mechanism. Note using\ntasks outside a project will not always work. Now at least it will not break\njust because of logging."}, {"count": 11, "attachment_id": null, "creator": "jkf@apache.org", "is_private": false, "id": 85372, "time": "2006-02-02T23:54:52Z", "bug_id": 38458, "creation_time": "2006-02-02T23:54:52Z", "tags": [], "text": "Updated with suggested fix, I oversaw the logging of the task itself."}]