[{"count": 0, "tags": [], "creator": "Timofey.Mokhnatkin@motorola.com", "is_private": false, "text": "I have Russian WinXP with 2 user accounts: one has Russian name (i.e. contains cyrillic symbols), another - English; say, \"\u0422\u0438\u043c\u043e\u0444\u0435\u0439\" & \"Timofey\".\nAttempt to run Visual Studio 7.1 or 8.0 (devenv.exe, cl.exe or link.exe) via \"exec\" task fails under Russian user account because \"%USERNAME%\" contains some garbage (incorrectly encoded cyrillic text), and thus %USERPROFILE%, %APPDATA% point to not existent directory. \n\nThis happens in both cases \na) when parent process environment is inherited by exec's \nb) when exec creates new environment and %USERNAME% is explicitely copied to new env.\nThis results in premanent failure to run my ant task under cyrillic user account. But forks fine for latin user account. \n\nsample below demonstrates the case of inherited user environment:\n    <target name=\"build-target\" if=\"target.release.type\">\n        <mkdir dir=\"${build.dir}\"/>\n\t\t\n        <exec executable=\"cmd\" dir=\"${bsp.root}\" \n            newenvironment=\"false\" searchpath=\"true\" failonerror=\"true\">\n            <arg value=\"/c\"/>\n            <arg value=\"set\"/>\n        </exec>\n    </target>\n\nOR \n\nnext sample demonstrates creation of new environment:\n    <target name=\"build-target\" if=\"target.release.type\">\n        <mkdir dir=\"${build.dir}\"/>\n        <exec executable=\"cmd\" dir=\"${bsp.root}\" \n            newenvironment=\"true\" searchpath=\"true\" failonerror=\"true\">\n            <env key=\"SystemDrive\" value=\"${env.SystemDrive}\"/>\n            <env key=\"SystemRoot\" value=\"${env.SystemRoot}\"/>\n            <env key=\"ALLUSERSPROFILE\" value=\"${env.ALLUSERSPROFILE}\"/>\n            <env key=\"USERNAME\" value=\"${env.USERNAME}\"/>\n            <env key=\"USERPROFILE\" value=\"${env.USERPROFILE}\"/>\n            <env key=\"USERDOMAIN\" value=\"${env.USERDOMAIN}\"/>\n            <env key=\"APPDATA\" value=\"${env.APPDATA}\"/>\n            <arg value=\"/c\"/>\n            <arg value=\"set\"/>\n        </exec>\n    </target>", "id": 119331, "time": "2008-08-03T19:35:22Z", "bug_id": 45530, "creation_time": "2008-08-03T19:35:22Z", "attachment_id": null}, {"count": 1, "tags": [], "creator": "Timofey.Mokhnatkin@motorola.com", "is_private": false, "text": "same behavior on both 1.7.0 and 1.7.1", "id": 119333, "time": "2008-08-03T19:42:40Z", "bug_id": 45530, "creation_time": "2008-08-03T19:42:40Z", "attachment_id": null}, {"count": 2, "text": "I took a look at the code and it seems that Ant captures the Windows XP environment by executing \"cmd /c set\".  The output of the command is captured as an array of bytes.  My guess is that there is some issue with the platform encoding.  I'm blocked from going further because I don't know how to set non-Latin characters into the environment variables on my English-based systems (Ubuntu 9.x and Windows 7).", "creator": "clark.archer@gmail.com", "attachment_id": null, "id": 135274, "time": "2010-03-11T13:41:37Z", "bug_id": 45530, "creation_time": "2010-03-11T13:41:37Z", "tags": [], "is_private": false}, {"attachment_id": null, "tags": [], "bug_id": 45530, "is_private": false, "count": 3, "id": 148198, "time": "2011-07-27T06:38:57Z", "creator": "shoelace_822695@hotmail.com", "creation_time": "2011-07-27T06:38:57Z", "text": "it appears to work a bit better under linux..\n\nwith a few mods to eth build..\n\n\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<project name=\"bug45530\">\n        <property environment=\"env\" />\n\n <target name=\"test-linux\" >\n        <exec executable=\"env\"  osfamily=\"unix\" \n            newenvironment=\"true\" searchpath=\"true\" failonerror=\"true\">\n            <env key=\"RUSSIAN\" value=\"${env.RUSSIAN}\"/>\n        </exec>\n    </target>\n\n</project>\n\n\n\n\nwe get....\n\n\n$> uname -a\nLinux us2.vu.edu.au 2.6.18-128.el5 #1 SMP Wed Jan 21 08:45:05 EST 2009 x86_64 x86_64 x86_64 GNU/Linux\n\n$> ant -version\nApache Ant(TM) version 1.8.2 compiled on December 20 2010\n\n$>  $SHELL -version\nGNU bash, version 3.2.25(1)-release (x86_64-redhat-linux-gnu)\nCopyright (C) 2005 Free Software Foundation, Inc.\n\n$> export RUSSIAN=`echo -e \"\\xc3\\x90\\xc3\\x92\\xc3\\x91\\xc3\\x88\"`\n\n$> echo $RUSSIAN\n\u00d0\u00d2\u00d1\u00c8\u00a0\n\n$> ant test-linux\nBuildfile: build.xml\n\ntest-linux:\n     [exec] RUSSIAN=\u00d0\u00d2\u00d1\u00c8\n\nBUILD SUCCESSFUL\nTotal time: 0 seconds\n\n\n\nand a plain java program works also\n\nimport java.util.*;\nclass bug45530\n{\n        public static void main(String[] args)\n        {\n                Map<String,String> envs = System.getenv();\n                System.out.println(\"Russian=\"+System.getenv(\"RUSSIAN\"));\n                System.out.println(envs);\n        }\n}\n\n\nboth of which fail on my  win XP\n\ni was able to set the winxp env variable with a simple\nset CRAP=\u0422\u0438\u043c\u043e\u0444\u0435\u0439\n\nor by setting it in the SystemProperties->Advanced->Environment variables area\n\n\n\nmy conclusion.. it is a defect with the java implementation of System.getenv\n\nC:\\>java -version\njava version \"1.6.0_22\"\nJava(TM) SE Runtime Environment (build 1.6.0_22-b04)\nJava HotSpot(TM) Client VM (build 17.1-b03, mixed mode, sharing)"}, {"count": 4, "tags": [], "text": "using the build file pasted by shoelace_822695 and Java 1.7_0_12-ea on a MAC I have ran this script called doit.sh:\n\nexport RUSSIAN=`echo -e \"\\xc3\\x90\\xc3\\x92\\xc3\\x91\\xc3\\x88\"`\necho $RUSSIAN\nexport ANT_OPTS=-Dfile.encoding=UTF-8\nant  test-linux\n\nthe output is here :\nbash-3.2$ ./doit.sh\n./doit.sh\n\u00c3\u0090\u00c3\u0092\u00c3\u0091\u00c3\u0088\nBuildfile: /Users/antoine/dev/asf/45530/build.xml\n\ntest-linux:\n     [exec] RUSSIAN=\u00c3\u0090\u00c3\u0092\u00c3\u0091\u00c3\u0088\n\nBUILD SUCCESSFUL\n\nso the russian environment variable seems to round trip correctly. Running with -Dfile.encoding=UTF-8 (or any encoding in which the particular values can be represented) is necessary though.\n\nIn any case, ant is now using always System.getenv() to get environment variables, except for openvms [this might need to be revisited ]\n\nMarking this bug as INVALID since there is no actual defect of Ant, at least not in the Ant 1.9.0 under a Java version >= 1.5", "is_private": false, "id": 166914, "creator": "antoine@apache.org", "time": "2013-04-28T20:10:51Z", "bug_id": 45530, "creation_time": "2013-04-28T20:10:51Z", "attachment_id": null}]