[{"count": 0, "tags": [], "creator": "lauzon@us.ibm.com", "attachment_id": null, "is_private": false, "id": 50929, "time": "2004-01-22T01:44:52Z", "bug_id": 26329, "creation_time": "2004-01-22T01:44:52Z", "text": "I'm creating a report with the JUnitReport task as so:\n\n    <junitreport todir=\"${dir.test.reports}\">\n      <fileset dir=\"${dir.test.reports}\" includes=\"TEST-*.xml\"/>\n      <report todir=\"${dir.test.reports}/html\"/>\n    </junitreport>\n\nThe junit-frames.xsl stylesheet converts the generated XML document to an HTML\ndocument. One of the things it does is convert '\\' to '\\\\', presumably so\nJavaScript doesn't barf. Unfortunately, if the input contains a very long\nclasspath, the recursion in the stylesheet causes the stack to get too big and I\nget an \"Unrecoverable Stack Overflow\" and the JVM crashes.\n\nFor example, my input XML document contains this:\n\n<property name=\"prereq.classpath\" value=\"c:\\build\\foo1.jar;c:\\build\\foo2.jar;...\n[LOTS more!]\n\nand the bottom of the HTML file which was written looks like this:\ncur['prereq.classpath'] = 'c:\\\\build\\\\foo1.jar;c:\\\\build\\\\foo2.jar;... [LOTS\nmore, but it dies in the middle of outputting, i.e. ends with c:\\\\build\\\\]\n\nthe offending XSL contains this:\n\n<xsl:template name=\"JS-escape\">\n...\n        <xsl:when test=\"contains($string,'\\')\">\n            <xsl:value-of\nselect=\"substring-before($string,'\\')\"/>\\\\<xsl:call-template name=\"JS-escape\">\n                <xsl:with-param name=\"string\"\nselect=\"substring-after($string,'\\')\"/>\n            </xsl:call-template>\n        </xsl:when>\n...\n</xsl:template>\n\nIt's that recursive call-template to JS-escape which is killing the processing.\nI am currently running on Ant 1.5.1, but the XSL document looks exactly the same\nin 1.6.0. It probably still fails on 1.6.0.\n\nshawn."}, {"count": 1, "tags": [], "bug_id": 26329, "is_private": false, "id": 50930, "creation_time": "2004-01-22T01:56:32Z", "time": "2004-01-22T01:56:32Z", "creator": "lauzon@us.ibm.com", "text": "Output when the error occurs:\n[admin.jmx/junitreport] Using Xalan version: XSLT4J Java 2.5.3\nUnrecoverable Stack Overflow: addr=7c5863a7, ee=238930, er=32d18\nJVMDG217: Dump Handler is Processing a Signal - Please Wait.\nJVMDG303: JVM Requesting Java core file\nJVMDG304: Java core file written to\nC:\\build\\cvs\\VELA\\ws\\code\\admin.jmx\\javacore.20040121.195502.2344.txt\nJVMDG215: Dump Handler has Processed Exception Signal 11.", "attachment_id": null}, {"count": 2, "tags": [], "creator": "peter.reilly@corvil.com", "attachment_id": null, "id": 50963, "creation_time": "2004-01-22T10:53:53Z", "time": "2004-01-22T10:53:53Z", "bug_id": 26329, "text": "\n\n*** This bug has been marked as a duplicate of 19301 ***", "is_private": false}]