[{"count": 0, "tags": [], "creator": "presbrey@gmail.com", "attachment_id": 23937, "is_private": false, "id": 128616, "time": "2009-07-07T18:45:15Z", "bug_id": 47492, "creation_time": "2009-07-07T18:45:15Z", "text": "Created attachment 23937\nSSLVerifyClient require_no_ca patch for httpd-2.2.11\n\nThis patch submission implements an additional option for the SSLVerifyClient directive: require_no_ca.  When configured, this option requires that clients present SSL certificates but allows certificates issued by CAs unknown to the server.\n\nThis feature is especially useful for SSL-based authentication schemes implementing trust models independent of typical enterprise CA/chain verification.  The optional_no_ca option is insufficient for widely-deployed solutions of this fashion since \"'optional' doesn't work with all browsers\" [1].\n\nOne example making use of this configuration is the FOAF+SSL [2] protocol which allows a client to assert an identity specified as a URI in the X509v3 extension subjectAltName of their certificate. After SSL negotiation by mod_ssl, mod_authn_webid [3] pulls the URI via ssl_ext_lookup, calculates the modulus and exponent of the client certificate, and authenticates the user to this URI identity if the mod/exp published at the URI match those of the presented certificate.\n\nPlease consider this short patch for inclusion.  It applies cleanly to release 2.2.11.\n\n[1] http://httpd.apache.org/docs/2.2/mod/mod_ssl.html#sslverifyclient\n[2] http://esw.w3.org/topic/foaf+ssl\n[3] http://dig.csail.mit.edu/2009/mod_authn_webid/"}, {"count": 1, "tags": [], "creator": "andre@cabine.org", "is_private": false, "id": 129569, "attachment_id": null, "bug_id": 47492, "creation_time": "2009-08-07T08:39:26Z", "time": "2009-08-07T08:39:26Z", "text": "Does this patch work?\n\nI setup a path like this:\n    <Location /LoginWithCert.do>\n      SSLVerifyClient require_no_ca\n      SSLOptions +OptRenegotiate\n    </Location>\n\nThe browser asked me for a certificate when the SSL was renegotiated (the outer context has SSLVerifyClient none) and the following appeared in the log:\n\n[Fri Aug 07 16:26:04 2009] [error] Re-negotiation handshake failed: Client verification failed\n\nA \"Forbidden\" was returned to the browser (Firefox 3.5.2). fyi, the patch does not apply cleanly to 2.1.12 and the certificate I sent is self-signed.\n\nAlso, when I don't send a client certificate an error page appears in Firefox, this can be a firefox problem... This appears in the server log:\n\n[Fri Aug 07 16:38:14 2009] [debug] ssl_engine_kernel.c(1772): OpenSSL: Write: SSLv3 read client certificate B\n[Fri Aug 07 16:38:14 2009] [debug] ssl_engine_kernel.c(1791): OpenSSL: Exit: error in SSLv3 read client certificate B\n[Fri Aug 07 16:38:14 2009] [error] Re-negotiation handshake failed: Not accepted by client!?"}, {"attachment_id": null, "tags": [], "bug_id": 47492, "is_private": false, "count": 2, "id": 136103, "time": "2010-04-13T16:52:43Z", "creator": "apache-bugzilla@PaulSD.com", "creation_time": "2010-04-13T16:52:43Z", "text": "I don't understand the difference between this and optional_no_ca.\n\nI'm pretty sure the Apache documentation is wrong about \"optional\" not working with all browsers. The SSL handshake is identical for both \"optional\" and \"required\" (see section 7.4.4 of RFC2246 or the 'REQUEST-CERTIFICATE' section of http://www.mozilla.org/projects/security/pki/nss/ssl/draft02.html). The only difference is that \"required\" will immediately send a \"handshake failure\" alert and close the connection if a certificate is not received from the client, while \"optional\" will ignore the missing certificate and continue.\n\nI'm guessing the Apache documentation may be referring to older browsers automatically giving up and closing the connection themselves if a suitable cert is not available, essentially making the \"optional\" option the same as the \"required\" option for these browsers.\n\nSo I think you could accomplish the same thing as this patch simply by using optional_no_ca, then dropping the connection in your application if SSL_VERIFY is set to NONE."}, {"count": 3, "tags": [], "text": "require Always ask for client certificate and always verfy with ca\noptional_no_ca some times ask for certificate other dont and never verify with ca\nand this option require_no_ca always ask for a certificate and never verify its very useful whe you need to ask for a cert but you want to implement you own verify method (like me).\n\nThis version have a bug but https://issues.apache.org/bugzilla/show_bug.cgi?id=49037\nworks great.\n\n(In reply to comment #2)\n> I don't understand the difference between this and optional_no_ca.\n> \n> I'm pretty sure the Apache documentation is wrong about \"optional\" not working\n> with all browsers. The SSL handshake is identical for both \"optional\" and\n> \"required\" (see section 7.4.4 of RFC2246 or the 'REQUEST-CERTIFICATE' section\n> of http://www.mozilla.org/projects/security/pki/nss/ssl/draft02.html). The only\n> difference is that \"required\" will immediately send a \"handshake failure\" alert\n> and close the connection if a certificate is not received from the client,\n> while \"optional\" will ignore the missing certificate and continue.\n> \n> I'm guessing the Apache documentation may be referring to older browsers\n> automatically giving up and closing the connection themselves if a suitable\n> cert is not available, essentially making the \"optional\" option the same as the\n> \"required\" option for these browsers.\n> \n> So I think you could accomplish the same thing as this patch simply by using\n> optional_no_ca, then dropping the connection in your application if SSL_VERIFY\n> is set to NONE.", "attachment_id": null, "bug_id": 47492, "id": 136104, "time": "2010-04-13T17:09:20Z", "creator": "argami@gmail.com", "creation_time": "2010-04-13T17:09:20Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 47492, "attachment_id": null, "is_private": false, "id": 136138, "time": "2010-04-14T09:17:10Z", "creator": "apache-bugzilla@PaulSD.com", "creation_time": "2010-04-14T09:17:10Z", "text": "But optional_no_ca always asks for a certificate as well.\n\nThe only difference between require and optional is that require sets the SSL_VERIFY_PEER_STRICT mode on SSL_CTX_set_verify (in ssl_engine_init.c) while optional only sets the SSL_VERIFY_PEER mode. SSL_VERIFY_PEER_STRICT is defined (in ssl_private.h) as SSL_VERIFY_PEER|SSL_VERIFY_FAIL_IF_NO_PEER_CERT. And if you read the SSL documentation (http://www.openssl.org/docs/ssl/SSL_CTX_set_verify.html), SSL_VERIFY_FAIL_IF_NO_PEER_CERT simply causes SSL to drop the connection if no cert is available.  But in either case, it ALWAYS asks for a cert.\n\nTherefore, the only difference between optional_no_ca and require_no_ca is that require_no_ca will drop the connection automatically if no cert is provided, while optional_no_ca will accept the connection and just not set the SSL_CLIENT_CERT variable. So if you are implementing your own verify method, why not just use optional_no_ca and check for an empty SSL_CLIENT_CERT yourself?\n\n(In reply to comment #3)\n> require Always ask for client certificate and always verfy with ca\n> optional_no_ca some times ask for certificate other dont and never verify with\n> ca\n> and this option require_no_ca always ask for a certificate and never verify its\n> very useful whe you need to ask for a cert but you want to implement you own\n> verify method (like me).\n> \n> This version have a bug but\n> https://issues.apache.org/bugzilla/show_bug.cgi?id=49037\n> works great."}, {"count": 5, "tags": [], "text": "\n\n*** This bug has been marked as a duplicate of bug 49037 ***", "attachment_id": null, "id": 136139, "creator": "apache-bugzilla@PaulSD.com", "time": "2010-04-14T09:17:48Z", "bug_id": 47492, "creation_time": "2010-04-14T09:17:48Z", "is_private": false}]