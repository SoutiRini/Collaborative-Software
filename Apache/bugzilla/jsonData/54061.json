[{"count": 0, "tags": [], "bug_id": 54061, "is_private": false, "id": 163012, "attachment_id": null, "creator": "spao001@gmail.com", "creation_time": "2012-10-29T07:44:25Z", "time": "2012-10-29T07:44:25Z", "text": "In the method public void removeChild(FONode child) {... i get a NullPointerException at row FObj:250;\nI have seen the code:\n\n...\n        if (child == lastChild) {\n            if (child.siblings != null) {  // row 249\n                lastChild = siblings[0];   // row 250\n            } else {\n                lastChild = null;\n            }\n        }\n...\n\nthe row 250 should be lastChild = child.siblings[0] instead of siblings[0] ???"}, {"count": 1, "tags": [], "bug_id": 54061, "attachment_id": null, "is_private": false, "id": 163013, "time": "2012-10-29T08:41:48Z", "creator": "rmeyer@hotmail.co.uk", "creation_time": "2012-10-29T08:41:48Z", "text": "Would it be possible for you to post an example FO file (and xconf if necessary) to reproduces this error. This will help us investigate why this is happening and also what needs to be done in order to resolve it."}, {"count": 2, "tags": [], "text": "(In reply to comment #1)\n> Would it be possible for you to post an example FO file (and xconf if\n> necessary) to reproduces this error. This will help us investigate why this\n> is happening and also what needs to be done in order to resolve it.\n\n(In reply to comment #1)\n> Would it be possible for you to post an example FO file (and xconf if\n> necessary) to reproduces this error. This will help us investigate why this\n> is happening and also what needs to be done in order to resolve it.\n\nSorry, i can't", "attachment_id": null, "id": 163015, "creator": "spao001@gmail.com", "time": "2012-10-29T09:11:59Z", "bug_id": 54061, "creation_time": "2012-10-29T09:11:59Z", "is_private": false}, {"count": 3, "tags": [], "text": "Is that because of confidentially? If so, please replace the sensitive text with a string of XXX or similar. I'm updating this bug to Needs Info status", "attachment_id": null, "id": 163081, "creator": "bowditch_chris@hotmail.com", "time": "2012-10-31T12:02:06Z", "bug_id": 54061, "creation_time": "2012-10-31T12:02:06Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 54061, "attachment_id": 29533, "is_private": false, "id": 163086, "time": "2012-10-31T13:53:04Z", "creator": "spao001@gmail.com", "creation_time": "2012-10-31T13:53:04Z", "text": "Created attachment 29533\ntest class to reproduce the error\n\nTest Class with main method.\nTakes as input the FO file and a boolean strictValidation.\nIf strictValidation = true gives a standard error of grammar, if it is false instead gives NullPointer on FObj.java"}, {"count": 5, "tags": [], "bug_id": 54061, "attachment_id": 29534, "id": 163087, "time": "2012-10-31T13:54:58Z", "creator": "spao001@gmail.com", "creation_time": "2012-10-31T13:54:58Z", "is_private": false, "text": "Created attachment 29534\nFO File that generates the error"}, {"count": 6, "tags": [], "bug_id": 54061, "attachment_id": null, "is_private": false, "id": 163088, "time": "2012-10-31T14:55:58Z", "creator": "rmeyer@hotmail.co.uk", "creation_time": "2012-10-31T14:55:58Z", "text": "Hi,\n\nInitially I tried going through the code and implementing the fix you suggested which does appear to be incorrect in the source, but unfortunately it trips up later on with another null pointer exception. I then put in a check for that to avoid it but I got a further NoSuchElement exception. It was at this stage I looked at the FO and the validation warnings I tried to circumvent by using the -r flag. It appears there is a lot wrong with the file. The warnings / errors are all like the following:\n\n\"fo:table-body\" is missing child elements. Required content model: marker* (table-row+|table-cell+) (See position 895:37)\n\nAfter looking through the FO there were numerous instances of tables with table-body elements with no contents or similarly declared empty table-headers. These are rules which both FOP and the FO must abide [1], so I can see why FOP is falling over. I went through the FO removing all of the blank tables with the problematic body and header's elements. After I had done this I could successfully render the document. It may not be how it was intended to look, but it did render. \n\nIn order to get yours to render, I would recommend going through the FO file and instead of removing the tables, add the necessary missing table-rows / table-cells if these are used for formatting purposes. This should prevent FOP from complaining whilst allowing you to render the document correctly.\n\n[1] http://www.w3.org/TR/xsl/#fo_table-body\n\nIn the meantime, this bug can relate to the incorrect sublings usage you specified in your original post."}, {"count": 7, "tags": [], "bug_id": 54061, "attachment_id": null, "id": 163089, "time": "2012-10-31T15:23:07Z", "creator": "gadams@apache.org", "creation_time": "2012-10-31T15:23:07Z", "is_private": false, "text": "in any case, no matter how broken the FO input, FOP shouldn't be throwing NPEs, so there is an FOP bug to fix... the reporter needs to find the minimal (reduced) test that produces the NPE"}, {"count": 8, "tags": [], "bug_id": 54061, "is_private": false, "id": 163090, "attachment_id": null, "creator": "spao001@gmail.com", "creation_time": "2012-10-31T15:32:46Z", "time": "2012-10-31T15:32:46Z", "text": "(In reply to comment #6)\n> Hi,\n> \n> Initially I tried going through the code and implementing the fix you\n> suggested which does appear to be incorrect in the source, but unfortunately\n> it trips up later on with another null pointer exception. I then put in a\n> check for that to avoid it but I got a further NoSuchElement exception. It\n> was at this stage I looked at the FO and the validation warnings I tried to\n> circumvent by using the -r flag. It appears there is a lot wrong with the\n> file. The warnings / errors are all like the following:\n> \n> \"fo:table-body\" is missing child elements. Required content model: marker*\n> (table-row+|table-cell+) (See position 895:37)\n> \n> After looking through the FO there were numerous instances of tables with\n> table-body elements with no contents or similarly declared empty\n> table-headers. These are rules which both FOP and the FO must abide [1], so\n> I can see why FOP is falling over. I went through the FO removing all of the\n> blank tables with the problematic body and header's elements. After I had\n> done this I could successfully render the document. It may not be how it was\n> intended to look, but it did render. \n> \n> In order to get yours to render, I would recommend going through the FO file\n> and instead of removing the tables, add the necessary missing table-rows /\n> table-cells if these are used for formatting purposes. This should prevent\n> FOP from complaining whilst allowing you to render the document correctly.\n> \n> [1] http://www.w3.org/TR/xsl/#fo_table-body\n> \n> In the meantime, this bug can relate to the incorrect sublings usage you\n> specified in your original post.\n\nThe fact is that I wanted to avoid to fix errors (example: fo: table-body missing childs) in the FO because I thought that strictValidation = false ignored them.\nBut since FOP gave me NullPointer, so I proceeded as you said, that I corrected all errors as specified in http://www.w3.org/TR/xsl/,\nbut this cost me a lot of trouble because the FO file is generated on a few lines, but very long, and therefore the error is of the type: \"see position 3:56753\"!\nBut how do I find the column 56753? and after that I found it how do I compare it with my XSLT file that is indented?\n\nAll this to say:\nthere is a FOP option to create a FO file indented, which indicates the position of errors based on the file indented?\nThanks a lot"}, {"count": 9, "tags": [], "text": "Created attachment 29535\nAttached a version of the FO which has been formatted.\n\nI ran through the FO using xml_pp (pretty print) in Linux to create the attached output. This probably isn't helpful to you as you are using XSLT and is likely to change. The other alternative may be to use something like:\n\n<xsl:if test=\"<tag>\">\n  <fo:table>\n  ...\n  <xsl:apply-templates select=\"<tag>\"/>\n  </fo:table>\n</xsl:if>\n\nThis way you can check to see if the data exists before adding the table.\n\nWith regard to outputting formatted FO, I am not sure on that but maybe someone else will know.\n\nGlen, with regard to adding a smaller example, i'll see if I can replicate the same behaviour by creating a table with an empty table-body. If so, i'll upload that when I get a chance.", "attachment_id": 29535, "id": 163091, "creator": "rmeyer@hotmail.co.uk", "time": "2012-10-31T16:05:56Z", "bug_id": 54061, "creation_time": "2012-10-31T16:05:56Z", "is_private": false}, {"count": 10, "tags": [], "text": "(In reply to comment #8)\n> there is a FOP option to create a FO file indented, which indicates the\n> position of errors based on the file indented?\n\nFOP does not produce FO, this is the matter of XSLT engine.\nFor convenience, FOP comes with xalan.\n\nSee [1] to tweak your XSLT if you use xalan.\n\n[1] http://xml.apache.org/xalan-j/usagepatterns.html#outputprops", "is_private": false, "id": 163092, "creator": "psancho.asf@gmail.com", "time": "2012-10-31T16:14:43Z", "bug_id": 54061, "creation_time": "2012-10-31T16:14:43Z", "attachment_id": null}, {"count": 11, "tags": [], "bug_id": 54061, "is_private": false, "id": 163113, "attachment_id": 29539, "creator": "rmeyer@hotmail.co.uk", "creation_time": "2012-11-01T14:15:48Z", "time": "2012-11-01T14:15:48Z", "text": "Created attachment 29539\nSmaller FO to reproduce the nullpointer\n\nI have attached a smaller example which reproduces the nullpointer reported in the original post when using the -r flag."}, {"count": 12, "tags": [], "bug_id": 54061, "is_private": false, "id": 163179, "attachment_id": null, "creator": "spao001@gmail.com", "creation_time": "2012-11-05T10:31:04Z", "time": "2012-11-05T10:31:04Z", "text": "(In reply to comment #10)\n> (In reply to comment #8)\n> > there is a FOP option to create a FO file indented, which indicates the\n> > position of errors based on the file indented?\n> \n> FOP does not produce FO, this is the matter of XSLT engine.\n> For convenience, FOP comes with xalan.\n> \n> See [1] to tweak your XSLT if you use xalan.\n> \n> [1] http://xml.apache.org/xalan-j/usagepatterns.html#outputprops\n\nOk, thanks, solved."}]