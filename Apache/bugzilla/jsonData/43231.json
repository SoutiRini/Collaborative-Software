[{"count": 0, "tags": [], "bug_id": 43231, "is_private": false, "text": "The mod_proxy_ftp server does not show directory listing if the origin server \nis a solaris ftp server. I have verified that it happens only with Solaris Ftp \nserver. If I request any other platform (checked FreeBSD) the page listing is \nfine.\n-- Checking if the solaris system is setup correctly.\nwith a native ftp client\n|ftp agneyam \nConnected to agneyam.india.sun.com.\n220 agneyam FTP server ready.\nName : ftp\n331 Guest login ok, send your complete e-mail address as password.\nPassword:\n230 Guest login ok, access restrictions apply.\nRemote system type is UNIX.\nUsing binary mode to transfer files.\nftp> ls\n200 PORT command successful.\n150 Opening ASCII mode data connection for file list.\nMakefile\nsquid.pkg\nt\ntest\n226 Transfer complete.\n30 bytes received in 0.00047 seconds (62.66 Kbytes/s)\nftp> \n\n-- The same directory when viewed in browser\nDirectory of ftp://agneyam.india.sun.com/\n----------------------------------------------\nGuest login ok, access restrictions apply\n----------------------------------------------\n----------------------------------------------\nFrom looking at the code, Inside mod_proxy_ftp,\n\n        /* read the body, pass it to the output filters */\n        while (ap_get_brigade(data->input_filters,\n                              bb,\n                              AP_MODE_READBYTES,\n                              APR_BLOCK_READ,\n                              conf->io_buffer_size) == APR_SUCCESS) {\n#ifdef DEBUGGING\n            {\n                apr_off_t readbytes;\n                apr_brigade_length(bb, 0, &readbytes);\n                ap_log_error(APLOG_MARK, APLOG_DEBUG, 0,\n                             r->server, \"proxy (PID %d): readbytes: %#x\",\n                             getpid(), readbytes);\n            }\n#endif\n            /* sanity check */\n            if (APR_BRIGADE_EMPTY(bb)) {\n                apr_brigade_cleanup(bb);\n                break;\n            }\n\n            /* found the last brigade? */\n            if (APR_BUCKET_IS_EOS(APR_BRIGADE_LAST(bb))) {\n                /* if this is the last brigade, cleanup the\n                 * backend connection first to prevent the\n                 * backend server from hanging around waiting\n                 * for a slow client to eat these bytes\n                 */\n                ap_flush_conn(data);\n                apr_socket_close(data_sock);\n                data_sock = NULL;\n                ap_log_error(APLOG_MARK, APLOG_DEBUG, 0, r->server,\n                             \"proxy: FTP: data connection closed\");\n                /* signal that we must leave */\n                finish = TRUE;\n            }\n\nThe APR_BUCKET_IS_EOS(APR_BRIGADE_LAST(bb)) becomes true as soon as the while\nloop is entered. thus there is no data coming in from the epasv data connection.\n\nOn the FtpServer and apache interaction, there seems to be a problem\n-- Here is the interaction with a FreeBSD server on the data port(epsv)\n|trans -v -l 2001 -r vayavyam:52190\ntrans[46930]:* 0 rules...\ntrans[46930]:Waiting for connections.\ntrans[46931]:Connect from 129.158.224.203 (ANY:2001->vayavyam:52190)\n>[\ntotal 10\ndr-xr-xr-x  5 root  operator  512 Aug 28 14:32 .\ndr-xr-xr-x  5 root  operator  512 Aug 28 14:32 ..\ndr-xr-xr-x  2 root  operator  512 Aug 28 14:32 etc\ndrwxrwxrwt  2 root  operator  512 Aug 28 14:32 incoming\ndrwxr-xr-x  2 root  operator  512 Aug 28 14:32 pub\n]\n>[\n]\n\n--Here is the interaction with the Solaris 10 Ftpserver\n(uname:SunOS agneyam 5.10 Generic sun4u sparc SUNW,Sun-Blade-1000)\n\n|trans -v -l 2001 -r agneyam:19220 \ntrans[12814]:* 0 rules...\ntrans[12814]:Waiting for connections.\ntrans[12815]:Connect from 129.158.224.203 (ANY:2001->agneyam:19220)\n>[\n]\ntrans[12815]:Connect from 129.158.224.203 (ANY:2001->agneyam:19220) closed\n\nAs you can see, no data seems to be transfered even though the connection is\ncreated just fine.\n\nThe control connection data is absolutely identical in both cases. So not\nadding it here.", "id": 107350, "time": "2007-08-28T09:52:44Z", "creator": "rahul.g.nair@gmail.com", "creation_time": "2007-08-28T09:52:44Z", "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 43231, "attachment_id": null, "is_private": false, "id": 108013, "time": "2007-09-11T04:26:45Z", "creator": "rahul.g.nair@gmail.com", "creation_time": "2007-09-11T04:26:45Z", "text": "This has probably got to do with the solaris FTP server unable to understand\nthe -lag options passed in. See the transaction.\nIt understands only NLST (no LIST or LIST -lag)\n\n|ftp -p agneyam\nConnected to agneyam.\n220 agneyam FTP server ready.\nName : anonymous\n331 Guest login ok, send your complete e-mail address as password.\nPassword:\n230 Guest login ok, access restrictions apply.\nRemote system type is UNIX.\nUsing binary mode to transfer files.\nftp> ls\n227 Entering Passive Mode (129,158,224,203,178,31)\n150 Opening ASCII mode data connection for file list.\nMakefile\nsquid.pkg\nt\ntest\n226 Transfer complete.\n30 bytes received in 0.00064 seconds (46.11 Kbytes/s)\nftp> ls -l\n227 Entering Passive Mode (129,158,224,203,214,138)\n150 Opening ASCII mode data connection for /bin/ls.\n226 Transfer complete.\nftp> ls -lag\n227 Entering Passive Mode (129,158,224,203,215,58)\n150 Opening ASCII mode data connection for /bin/ls.\n226 Transfer complete.\nftp> \n"}, {"count": 2, "tags": [], "bug_id": 43231, "is_private": false, "text": "Created attachment 20789\nA patch to recognize solaris ftp server and send NLST instead of LIST\n\nThe attachment sends SYST command at the start of the connection and if it\ndetects that it is a solaris ftp server, uses NLST instead of the LIST or LIST\n-lag for\nlisting of files.", "id": 108017, "time": "2007-09-11T06:17:03Z", "creator": "rahul.g.nair@gmail.com", "creation_time": "2007-09-11T06:17:03Z", "attachment_id": 20789}, {"count": 3, "attachment_id": null, "creator": "nick@webthing.com", "is_private": false, "id": 116598, "time": "2008-05-14T02:13:46Z", "bug_id": 43231, "creation_time": "2008-05-14T02:13:46Z", "tags": [], "text": "OK, some questions about the patch:\n\n1. You test for SUNOS (uppercase).  Is that a sufficiently unique\nidentifier?  What about AN Other ftpd running on solaris?\n\n2. Your description of the problem looks like something\ndeeper is wrong, with some bogus assumptions concerning\nthe interaction of the control and data channels.  Can\nthat not be fixed in a cross-platform manner?\n\n3. Doesn't the SYST add an overhead that should\nbe avoidable?\n\n4. In the \"with the patch\" listing, shouldn't it be\ngenerating links rather than spitting out plain text.\nWhat about HTML-escaping the listing?\n"}, {"count": 4, "tags": [], "creator": "rahul.g.nair@gmail.com", "attachment_id": null, "id": 116600, "time": "2008-05-14T02:49:31Z", "bug_id": 43231, "creation_time": "2008-05-14T02:49:31Z", "is_private": false, "text": "1)-\n\nThe default ftpd that is distributed with Sun Solaris systems respond for SYST with\n\n215 UNIX Type: L8 Version: SUNOS\n\nAs you can see, SUNOS is the only string that distinguishes it as Solaris Ftpd. There is no other string that identifies that it is indeed solaris.\n\nOn the other hand, most other popular ftpd do not bother to send a \nVersion: string at all\n\ne.g\nvsftpd (generally distributed with redhat) responds with\n215 UNIX Type: L8\n\npureftpd\n215 UNIX Type: L8\n\nproftpd (generally the default in freebsd)\n215 UNIX Type: L8\n\nAlso ,as far as I know, users do not generally replace the ftpd software distributed along with Solaris systems.\n\n \n2)-\n\nMy initial analysis was not complete, see the second comment.\n\nThe response of FTPD to both LIST and NLST on solaris is below\n#-----------------------------------------------------------------------\n[client side]\n|telnet webproxy 21    \nTrying 10.12.147.90...\nConnected to sunone090.\nEscape character is '^]'.\n220 sunone090.india.sun.com FTP server (Version wu-2.6.2+Sun) ready.\nUSER ftp\n331 Guest login ok, send your complete e-mail address as password.\nPASS me@\n230 Guest login ok, access restrictions apply.\n\nLIST\n=================\nPASV\n227 Entering Passive Mode (10,12,147,90,69,160)\nLIST\n150 Opening ASCII mode data connection for /bin/ls.\n226 Transfer complete.\n\n[client side 69 * 256 + 160 => 17824 ]\n|telnet webproxy 17824\nTrying 10.12.147.90...\nConnected to sunone090.\nEscape character is '^]'.\nConnection to sunone090 closed by foreign host.\n\n\nNLST\n=================\nPASV\n227 Entering Passive Mode (10,12,147,90,157,229)\nNLST\n150 Opening ASCII mode data connection for file list.\n226 Transfer complete.\n\n[client side 157 * 256 + 229 => 40421]\n|telnet webproxy 40421\nTrying 10.12.147.90...\nConnected to sunone090.\nEscape character is '^]'.\nTT_DB\nbin\ncodestriker\ndoxygen\ndoxygen-1.4.7\nlost+found\nlxr\nmysql\nnsr\no\npraveen\nreference\ntbinstall\nwebproxy\nConnection to sunone090 closed by foreign host.\n#-----------------------------------------------------------------------\n\nAs you can see, solaris does not even respond with an error on LIST, rather it behaves as if the command worked fine, and close the connection. Due to this reason, we need to find if the system is solaris is before hand.\n\nunfortunately NLST is not supported by some of the older ftp servers, so that rules out using NLST instead in all cases.\n\n \n3)-\n\nSYST has an overhead, but it is not avoidable, almost all the ftpclients that I have seen uses SYST and works around the incorrect implementations of the popular ftpservers.\n\n- the unfortunate fact is that unlike HTTP, quite a few major systems implemented their FTPd before it became a standard (or used new commands before it was added to the standard) the result being very different behaviors in even the most basic commands. The mod_proxy_ftp will choke on quite a few of these servers, the only alternative is to figure out the type of the system before\ntrying to fetch the data.\n\n4)-\n\nYes Links and HTML escape should be done by the mod_index. We are not there yet, but I hope to get it to work soon.\n\nThis patch only modifies the source just enough to get solaris ftp to work.\n"}, {"count": 5, "tags": [], "bug_id": 43231, "attachment_id": null, "is_private": false, "id": 117073, "time": "2008-05-27T23:34:31Z", "creator": "rahul.g.nair@gmail.com", "creation_time": "2008-05-27T23:34:31Z", "text": "The problem is caused by (commonly) misconfigured solaris ftp server. It happens when anonymous ftp configured on ftp does not have 'ls' under [ftproot]/bin . In this case, the ls used is /bin/ls unfortunately users under group guest do not have access to /bin/* \n\nwhen ls -l or ls -lag is sent the /bin/ls is tried, but denied. this results in no listing. (I think /bin/ls is not used for a simple 'ls')\n\nSince this is a misconfiguration on solaris ftp server (albeit common) rather than apache, I am closing this bug."}]