[{"count": 0, "attachment_id": null, "bug_id": 49323, "text": "For methods in LittleEndian util class in org.apache.poi.util package, there is no border check of getXXXX methods, for example:\ngetInt(byte[] data, int offset) method, if the offset is less then 0 or greater then data.length-4, then there would be an ArrayIndexOutOfBound Exception happens.\n\nI was planning to fix it with adding a check in the beginning of the method, but there is a test case named TestIntegerField are expecting the exception to happen, so that made me confused, what the expect behavior in this case? In my fix, I set the value to 0 in order to let the program run without an exception.\n\nI would love to check in my fix with unit test, just not sure which one is the expected behavior? Exception or Return 0.\n\n\nZhang Zhang", "id": 136997, "time": "2010-05-20T15:10:01Z", "creator": "zhangzzh@gmail.com", "creation_time": "2010-05-20T15:10:01Z", "tags": [], "is_private": false}, {"count": 1, "text": "From what I understand, you are proposing that the getXXXX() methods on LittleEndian should return 0 when an invalid offset is supplied.  While it's easy to imagine code that might depend on this behaviour, it is nonetheless very much against the coding style of POI.  POI tries to avoid 'silent errors'.  Specifying an invalid array index really shouldn't be standard usage for POI.", "creator": "josh@apache.org", "is_private": false, "id": 137001, "time": "2010-05-20T19:44:02Z", "bug_id": 49323, "creation_time": "2010-05-20T19:44:02Z", "tags": [], "attachment_id": null}, {"count": 2, "tags": [], "text": "\nGot it, thanks.", "attachment_id": null, "id": 137002, "creator": "zhangzzh@gmail.com", "time": "2010-05-20T19:49:14Z", "bug_id": 49323, "creation_time": "2010-05-20T19:49:14Z", "is_private": false}, {"attachment_id": null, "tags": [], "creator": "zhangzzh@gmail.com", "is_private": false, "count": 3, "id": 137126, "time": "2010-05-25T18:37:55Z", "bug_id": 49323, "creation_time": "2010-05-25T18:37:55Z", "text": "\nYou are right about the coding style, but in real scenario, we experiening un-expected interruption in long running process. The process is processing numbers of PPT files, one of them is crappy and has ArrayIndexOufOfBoundsException which is a runtime error and breaks the process.\n\nSo instead of reset the value to 0, can we throw a checked exception?\n\n\nThanks\nZhang Zhang"}, {"count": 4, "tags": [], "text": "It really is an ArrayIndexOutOfBoundsException though. To process the file, we decide we need x bytes of data. There aren't x bytes available...\n\nThe fix is to identify the records which are short, verify that office can read these files without issue, and then patch POI to detect the short vs long forms of the records and handle those.\n\n(This typically occurs when there is an older and newer format for a record, with the newer having extra fields, and POI only supporting the newer format as that's all we've ever seen)\n\nOnce you have identified a record which is allowed to be shorter than POI currently accepts, please open a new bug and upload the problem file + description of where the record processing is incorrect", "is_private": false, "id": 137131, "creator": "apache@gagravarr.org", "time": "2010-05-26T04:40:15Z", "bug_id": 49323, "creation_time": "2010-05-26T04:40:15Z", "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 49323, "is_private": false, "id": 137153, "creation_time": "2010-05-26T12:49:09Z", "time": "2010-05-26T12:49:09Z", "creator": "zhangzzh@gmail.com", "text": "\nThe original file can be opened successfully by office 2007, but unfortunately, the file is belongs to my client and it is confidential, I haven't got authorization to submit it, also I can't re-produce it with a artifical office file.\n\nThanks for the help.\n\n\nThanks\nJJ", "attachment_id": null}, {"count": 6, "text": "You could always try using the HSLF dev tools to dump just the problem record? It'll need a bit of work, since it'll blow up on the broken record, but if you run it under a debugger you might be able to figure out just the bytes the correspond to that one record", "bug_id": 49323, "is_private": false, "id": 137154, "time": "2010-05-26T13:01:50Z", "creator": "apache@gagravarr.org", "creation_time": "2010-05-26T13:01:50Z", "tags": [], "attachment_id": null}, {"count": 7, "text": "\n(In reply to comment #6)\n> You could always try using the HSLF dev tools to dump just the problem record?\n> It'll need a bit of work, since it'll blow up on the broken record, but if you\n> run it under a debugger you might be able to figure out just the bytes the\n> correspond to that one record\n\nGood point, I definitely will try that. Thanks", "bug_id": 49323, "attachment_id": null, "id": 137159, "time": "2010-05-26T18:51:41Z", "creator": "zhangzzh@gmail.com", "creation_time": "2010-05-26T18:51:41Z", "tags": [], "is_private": false}]