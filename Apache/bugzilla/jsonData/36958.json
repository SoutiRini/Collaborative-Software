[{"count": 0, "tags": [], "bug_id": 36958, "attachment_id": null, "is_private": false, "id": 80880, "time": "2005-10-07T01:01:53Z", "creator": "lenbok@gmail.com", "creation_time": "2005-10-07T01:01:53Z", "text": "I, along with many others it seems, have been hit by the problems that can be\ncaused by having an external CLASSPATH set when invoking ant.  In my case, the\njavac task was ending up with the classpath defined in the javac task, plus the\nexternal classpath, which was bugging out the build.  This took me a while to\ntrack down.\n\nI am now aware of the -noclasspath option.  I strongly recommend that this be\nmade the default. It will minimize the pain caused to new users. It will help\nincrease portability of build scripts (since it makes the build.xml more\nself-contained to have any required classpaths defined internally).\nThere are already other mechanisms such as -lib or ~/.ant/lib for including\nclasses just for ant.\n\nI'd say just always ignore the external classpath, but you could keep a\n-useclasspath option if people really need it."}, {"count": 1, "tags": [], "bug_id": 36958, "attachment_id": null, "text": "While I certainly agree that it's bad form to use CLASSPATH with Ant builds, I\nfear that making \"-noclasspath\" the default behavior would break backwards\ncompatibility.", "id": 80881, "time": "2005-10-07T01:20:55Z", "creator": "carej@us.ibm.com", "creation_time": "2005-10-07T01:20:55Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 36958, "attachment_id": null, "text": "I agree that there may be some build.xml that would break, but that these\nbroken/non-portable (certainly brittle) build.xmls are in the minority --\nwhereas it's pretty easy to have the current default behaviour screw up the\noperation of perfectly valid build.xmls.  I think the benefits would far\noutweight the negatives.\n\nMaking the build sensitive to factors outside the build.xml should be something\nthe user has to actively enable.\n", "id": 80883, "time": "2005-10-07T04:11:22Z", "creator": "lenbok@gmail.com", "creation_time": "2005-10-07T04:11:22Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 36958, "attachment_id": null, "id": 87793, "time": "2006-04-11T21:26:26Z", "creator": "mbenson@apache.org", "creation_time": "2006-04-11T21:26:26Z", "is_private": false, "text": "We've been begging people for years not to use a CLASSPATH.  At the same time,\nwe can't break backwards compatibility, so all we can do is hope that one of the\nplaces in which we've written this admonition gets noticed."}, {"count": 4, "tags": [], "creator": "lenbok@gmail.com", "attachment_id": null, "text": "Given that this problem can give unpredictable results, it is tricky for people\nto detect and debug.  People will be stung unawares and they will have no idea\nwhat's wrong.  If you are worried about backwards compatibility, how about\nkeeping the existing behaviour, and printing out the admonition as a warning\nmessage if -noclasspath is not used and the CLASSPATH is defined. Something like:\n\nWARNING: Using an externally defined CLASSPATH results in non-portable build\nfiles.  It is recommended that you define required classpath settings within the\nbuild file and unset your CLASSPATH or run ant with the -noclasspath option.", "id": 87813, "time": "2006-04-12T00:20:24Z", "bug_id": 36958, "creation_time": "2006-04-12T00:20:24Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 36958, "attachment_id": null, "id": 87836, "time": "2006-04-12T14:59:02Z", "creator": "mbenson@apache.org", "creation_time": "2006-04-12T14:59:02Z", "is_private": false, "text": "From my personal perspective such a warning would make sense.  But it is\npossible that there exists a class of user who uses CLASSPATH and knows what\nhe/she is doing in doing so.  :)  This is the only reason I would be reluctant here."}, {"count": 6, "tags": [], "creator": "stevel@apache.org", "attachment_id": null, "text": "I dont like the warning message, as it would annoy people after a very short\nperiod of time. People dont like products that tell them off. If I wanted that,\nI'd still run win98.\n\nthe -diagnostics routine could do more, though I fear it is already overdetailed.\n\nWhat we could consider is this: how to move Ant from a CLASSPATH on to a\n-noclasspath world? Is it ever possible? And if so, how to do the transition in\na seamless manner. ", "id": 87839, "time": "2006-04-12T15:19:31Z", "bug_id": 36958, "creation_time": "2006-04-12T15:19:31Z", "is_private": false}, {"count": 7, "tags": [], "bug_id": 36958, "is_private": false, "text": "What about \"-noclasspath-\" option to disable the warning for people that know\nwhat they are doing?", "id": 87845, "time": "2006-04-12T16:33:53Z", "creator": "alexeys@inventigo.com", "creation_time": "2006-04-12T16:33:53Z", "attachment_id": null}, {"count": 8, "tags": [], "bug_id": 36958, "is_private": false, "text": "As silly as it sounds, this would be a good compromise.\n\nIf you dont set -noclasspath, then you get the warning as detailed.\nIf you know what you are doing and want to keep using the CLASSPATH then you can\noptionall set the -nonoclasspathwarning option (or whatever name it is) to\ndisable the warning.", "id": 87850, "time": "2006-04-12T18:49:42Z", "creator": "BBurgess@tiaa-cref.org", "creation_time": "2006-04-12T18:49:42Z", "attachment_id": null}, {"count": 9, "tags": [], "creator": "jkf@apache.org", "text": "I would propose to add a -useclasspath flag which in phase one (ant 1.7.x?)\nsuppresses the warning, and in later phases (ant 1.8.x) makes use of the classpath.\n\nWhile in ant 1.7.x a warning is printed if \n1) -noclasspath is not used\n2) -useclasspath is not used\n3) a non-empty classpath has been defined and is used by ant.\n\nThe warning in ant 1.7.x could be something like:\nWARNING: Using an externally defined CLASSPATH results \nin non-portable build files. \nUse -noclasspath to suppress the defined CLASSPATH, \nNote -noclasspath will become the default in the future. \n\nand maybe even add the line\nIf you want to use the CLASSPATH please specify the -useclasspath option.", "id": 87856, "time": "2006-04-12T19:26:13Z", "bug_id": 36958, "creation_time": "2006-04-12T19:26:13Z", "is_private": false, "attachment_id": null}, {"count": 10, "tags": [], "creator": "lenbok@gmail.com", "attachment_id": null, "text": "I really like the suggestion in comment #9.  It's essentially saying that\nwithout an option supplied, we don't know what the user intended, and thus the\nwarning is printed if there's any danger.  The user then supplies either\n-noclasspath or -useclasspath to make their intention regarding the CLASSPATH\nexplicit.\n\n\n", "id": 87867, "time": "2006-04-12T21:00:30Z", "bug_id": 36958, "creation_time": "2006-04-12T21:00:30Z", "is_private": false}, {"count": 11, "tags": [], "bug_id": 36958, "attachment_id": null, "text": "From a co-worker today:\n\n [stuart@k2 cartesian]$ ant\nBuildfile: build.xml\n\ninit:\n\ncompile-src:\n    [javac] Compiling 378 source files to /home/stuart/cartesian/build.tmp/src\n    [javac] javac: invalid flag: -Xlint\n    [javac] Usage: javac <options> <source files>\n    [javac] where possible options include:\n    [javac]   -g                        Generate all debugging info\n    [javac]   -g:none                   Generate no debugging info\n    [javac]   -g:{lines,vars,source}    Generate only some debugging info\n    [javac]   -nowarn                   Generate no warnings\n    [javac]   -verbose                  Output messages about what the compiler is doing\n    [javac]   -deprecation              Output source locations where deprecated APIs are used\n    [javac]   -classpath <path>         Specify where to find user class files\n    [javac]   -sourcepath <path>        Specify where to find input source files\n    [javac]   -bootclasspath <path>     Override location of bootstrap class files\n    [javac]   -extdirs <dirs>           Override location of installed extensions\n    [javac]   -d <directory>            Specify where to place generated class files\n    [javac]   -encoding <encoding>      Specify character encoding used by source files\n    [javac]   -source <release>         Provide source compatibility with specified release\n    [javac]   -target <release>         Generate class files for specific VM version\n    [javac]   -help                     Print a synopsis of standard options\n    [javac] \n\nBUILD FAILED\n/home/stuart/cartesian/build.xml:80: Compile failed; see the compiler error output for details.\n\nTotal time: 2 seconds\n[stuart@k2 cartesian]$ ant -noclasspath\nBuildfile: build.xml\n\ninit:\n\ncompile-src:\n    [javac] Compiling 378 source files to /home/stuart/cartesian/build.tmp/src\n\nBUILD SUCCESSFUL\nTotal time: 8 seconds\n\n\nThe errors that arise due to this bug are just bizarre!", "id": 127997, "time": "2009-06-16T16:12:57Z", "creator": "lenbok@gmail.com", "creation_time": "2009-06-16T16:12:57Z", "is_private": false}, {"count": 12, "tags": [], "creator": "bodewig@apache.org", "text": "Please understand that -noclasspath can and will never become the default since it would break lots and lots of builds.\n\nI'd suggest you put\n\nANT_ARGS=-noclasspath\n\ninto /etc/ant.conf, ~/.antrc or ~/.ant/ant.conf if you feel that strong about it.\n\nYour coworker seems to have tools.jar of a JDK that's different than the one (s)he wants to run in her/his CLASSPATH.", "id": 128006, "time": "2009-06-17T00:56:55Z", "bug_id": 36958, "creation_time": "2009-06-17T00:56:55Z", "is_private": false, "attachment_id": null}, {"count": 13, "tags": [], "bug_id": 36958, "attachment_id": null, "is_private": false, "id": 128007, "time": "2009-06-17T02:28:12Z", "creator": "lenbok@gmail.com", "creation_time": "2009-06-17T02:28:12Z", "text": "Why not instead opt for the suggestion in comment #9, and let the people using non-portable build files set ANT_ARGS into their non-portable ant config location of choice.  That way ant actually evolves to be a better product.\n\n(I actually have ant aliased to ant -noclasspath myself, but your suggestions sound like a better way)."}, {"count": 14, "tags": [], "bug_id": 36958, "attachment_id": null, "text": "Can we fix this for the next version of ant? And make includeantruntime default to false as well, to get rid of two historical mistakes in one go?", "id": 141582, "time": "2010-11-09T22:33:12Z", "creator": "lenbok@gmail.com", "creation_time": "2010-11-09T22:33:12Z", "is_private": false}]