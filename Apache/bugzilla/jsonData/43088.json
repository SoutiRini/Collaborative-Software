[{"count": 0, "attachment_id": null, "bug_id": 43088, "text": "Hi,\n\nthis bug seems to be similar to bug 42920 (Excel Comments).\n\nWhen attaching comments to a cell with poi-3.0.1-FINAL-20070705.jar and the\ncomments exceed a size of 4111 characters, the file can't be loaded by Excel any\nmore (I tried Excel 2003 and Excel 2007).\n\nThere are no problems in saving the file. However, when opening the file with\nExcel, I get the error message \"Excel found unreadable content in foo.xls\".\n\nAttached a small test case which reproduces the problem. The created excel file\nworks fine if the comment size is up to 4111 characters. But with a comment size\nof 4112 characters, the excel file can't be loaded any more.\n\nimport java.io.FileOutputStream;\n\nimport org.apache.poi.hssf.usermodel.HSSFCell;\nimport org.apache.poi.hssf.usermodel.HSSFClientAnchor;\nimport org.apache.poi.hssf.usermodel.HSSFComment;\nimport org.apache.poi.hssf.usermodel.HSSFPatriarch;\nimport org.apache.poi.hssf.usermodel.HSSFRichTextString;\nimport org.apache.poi.hssf.usermodel.HSSFRow;\nimport org.apache.poi.hssf.usermodel.HSSFSheet;\nimport org.apache.poi.hssf.usermodel.HSSFWorkbook;\n\npublic class Comments {\n\n    public static void main(String args[]) throws Exception {\n\n        HSSFWorkbook workBook = new HSSFWorkbook();\n        HSSFSheet sheet = workBook.createSheet();\n        HSSFPatriarch patriarch = sheet.createDrawingPatriarch();\n        \n        HSSFRow row = sheet.createRow(0);\n        HSSFCell cell = row.createCell((short)0);\n\n        // works  with 4111\n        // broken with 4112\n        int size = 4112;\n        \n        StringBuffer toolTip = new StringBuffer(size);\n        for (int i = 0; i < size; i++) {\n            toolTip.append(\".\");\n        }\n        \n        HSSFClientAnchor anchor = new HSSFClientAnchor(0, 0, 0, 0, (short)0, 0,\n(short)1, 1);\n        HSSFComment comment = patriarch.createComment(anchor);\n        comment.setString(new HSSFRichTextString(toolTip.toString()));\n        cell.setCellComment(comment);\n        \n        workBook.write(new FileOutputStream(\"foo.xls\"));\n    }\n}\n\nRegards,\nJan", "id": 106595, "time": "2007-08-10T08:28:22Z", "creator": "jan.dostert@sap.com", "creation_time": "2007-08-10T08:28:22Z", "tags": [], "is_private": false}, {"count": 1, "tags": [], "bug_id": 43088, "attachment_id": null, "id": 106780, "time": "2007-08-15T04:57:51Z", "creator": "apache@gagravarr.org", "creation_time": "2007-08-15T04:57:51Z", "is_private": false, "text": "Could you try the following:\n* Add a comment using POI of ~4000 characters\n* Take a copy of that file, and load it in Excel\n* Edit the comment in Excel, so that it's >4112 characters long\n* Compare the two files (hssf.dev and poifs.dev), and spot how excel has saved\nthe large comment\n\nOnce we know how Excel manages to generate larger comments, we can figure out\nthe best way forward for POI to do the same"}, {"count": 2, "attachment_id": null, "bug_id": 43088, "text": "I confirmed the problem. I could also reproduce it with HSSFTextbox - if I set\ntext longer than 4111 characters the xls document gets corrupted. \n\nIt's clear what's wrong. Excel records can't be longer than 8228 bytes, and \ntext.length()*2 + header gets greater that the limit.\n\nBTW, POI fails  to read such \"bad\" workbooks although there are no warnings\nwhile saving it.\n\nHere is the stack trace:\nCaused by: org.apache.poi.hssf.record.RecordFormatException: The content of an\nexcel record cannot exceed 8224 bytes\n\tat\norg.apache.poi.hssf.record.RecordInputStream.nextRecord(RecordInputStream.java:108)\n\tat org.apache.poi.hssf.record.TextObjectRecord.fillFields(TextObjectRecord.java:47)\n\n\n\nRegards,\nYegor\n", "id": 107236, "time": "2007-08-24T11:18:00Z", "creator": "yegor@dinom.ru", "creation_time": "2007-08-24T11:18:00Z", "tags": [], "is_private": false}, {"count": 3, "tags": [], "bug_id": 43088, "attachment_id": null, "id": 107265, "time": "2007-08-26T08:08:50Z", "creator": "yegor@dinom.ru", "creation_time": "2007-08-26T08:08:50Z", "is_private": false, "text": "Fixed.\nRecord overflow wasn't properly handled in TextObjectRecord. \nNow it should work fine. Cell comments and Text Boxes can hold strings of any \nlength.\n\nRegards,\nYegor\n"}]