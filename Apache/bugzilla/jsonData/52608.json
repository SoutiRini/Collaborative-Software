[{"count": 0, "tags": [], "bug_id": 52608, "attachment_id": null, "text": "Currently Project.createDataType takes a string as an argument. For example:\nassuming we have our antlib.xml located under the package:\norg.ant.plugins and within that antlib.xml we defined a type called \"myType\"\n\nthen creating a default object of this would be like:\n\ngetProject().createDataType(\"antlib:org.ant.plugin:myType\"). \n\nIt will be easier to do : createDataType(full.class.name.of.myType).", "id": 153480, "time": "2012-02-05T22:25:48Z", "creator": "mansour.alakeel@gmail.com", "creation_time": "2012-02-05T22:25:48Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 52608, "attachment_id": null, "text": "The primary purpose of createDataType is to create tasks/types by the name used by Ant - when you don't know the implementation class.\n\nWhy would you want to invoke this method if you already know the class you want to instantiate?", "id": 153501, "time": "2012-02-06T11:27:17Z", "creator": "bodewig@apache.org", "creation_time": "2012-02-06T11:27:17Z", "is_private": false}, {"count": 2, "tags": [], "creator": "mansour.alakeel@gmail.com", "text": "Stefan,\n\nI was trying to write a proxy for some datatype, that will create another datatype based on the configuration.\nFor example, a datatype called Artifact.java that will create another datatypes based on the information passed (jar,war, ejb ... etc). \n\nTherefor, I requested this feature. However, I refactored some of my code, and it turned out that I don't really need this. On the other hand, I believe it can be done easily using reflection and newInstance. (ie, \n\nMyDataType dataType = (MyDataType) obj;\ndataType.setProject(aProject);\n\nI think we can ignore this request, and close it.\n\nThank you.", "id": 153521, "time": "2012-02-07T06:20:18Z", "bug_id": 52608, "creation_time": "2012-02-07T06:20:18Z", "is_private": false, "attachment_id": null}]