[{"count": 0, "attachment_id": 21924, "creator": "clovis.wichoski@gmail.com", "is_private": false, "id": 116274, "time": "2008-05-05T18:37:42Z", "bug_id": 44938, "creation_time": "2008-05-05T18:37:42Z", "tags": [], "text": "Created attachment 21924\nstack when the CPU is at 100%\n\nHi,\n\nTomcat version is: 6.0.14\nAPR: installed via RPM apr-1.2.8-6\nApache Tomcat Native library 1.1.10\nAPR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].\nLinux version: 2.6.23.1-10.fc7 #1 SMP i686\nJVM version: Java HotSpot(TM) Server VM (build 1.5.0_15-b04, mixed mode)\nVM Options: -server -Djava.net.preferIPv4Stack=true -Xmn300m -Xms1280m -Xmx1280m\n\n\ni'm getting for weeks a problem, the tomcat consumes 100% of CPU for several minutes and tomcat responses is too slow and sometimes blocking, i cant figure what the problem until today, i manage to configure JConsole, to get that the thread that consumes all my CPU for this long period is the http-80-SendFile-0.\n\ni put a tcpdump capture, that capture all traffic in production and JConsole to get exact time that the problem occurs, then on wireshark i see many TCP checksum errors, i found a way to avoid checksum errors that is explained at:\n\nhttp://wiki.wireshark.org/TCP_checksum_offload\n\nsince i think that the checksum isnt the real problem, because disabling the checksum made by ethernet board, dont solved the problem, i do more research and find something about TCP Window Scale Option explained on RFC 1323, and something about a problem at http://groups.apu.edu/awg/node/101 with that problems i run the follow command at Linux console:\n\nsysctl -w net.ipv4.tcp_window_scaling=0\n\nwhit this appears that the APR dont consumes all CPU anymore, then my question is, exists any know problem with APR and window scaling? or i'm get a wrong idea of what is the real problem?\n\nattached is the full stack when the CPU is consumed 100% by the http-80-SendFile-0, the thread Stack is:\n\norg.apache.tomcat.jni.Poll.poll(Native Method)\norg.apache.tomcat.util.net.AprEndpoint$Sendfile.run(AprEndpoint.java:1748)\njava.lang.Thread.run(Thread.java:595)\n\nall errors \"Error occurred during stack walking:\" in the attached stack is:\n\njava.lang.NullPointerException\n        at sun.jvm.hotspot.runtime.Frame.addressOfStackSlot(Frame.java:214)\n        at sun.jvm.hotspot.runtime.x86.X86Frame.getEntryFrameCallWrapper(X86Frame.java:452)\n        at sun.jvm.hotspot.runtime.Frame.entryFrameIsFirst(Frame.java:379)\n        at sun.jvm.hotspot.runtime.Frame.isFirstFrame(Frame.java:154)\n        at sun.jvm.hotspot.runtime.VFrame.sender(VFrame.java:109)\n        at sun.jvm.hotspot.runtime.VFrame.javaSender(VFrame.java:134)\n        at sun.jvm.hotspot.tools.StackTrace.run(StackTrace.java:50)\n        at sun.jvm.hotspot.tools.JStack.run(JStack.java:41)\n        at sun.jvm.hotspot.tools.Tool.start(Tool.java:204)\n        at sun.jvm.hotspot.tools.JStack.main(JStack.java:58)\n\ni really dont know if this is a tomcat BUG, or a problem with Linux/Firewalls and routers, but i wish to share here what i found and how much time this consumes to get a workaround.\n\nKR\nCl\u00f3vis"}, {"count": 1, "attachment_id": null, "creator": "markt@apache.org", "is_private": false, "id": 116321, "time": "2008-05-07T00:16:47Z", "bug_id": 44938, "creation_time": "2008-05-07T00:16:47Z", "tags": [], "text": "Given a lack of evidence to the contary, I am marking this as a duplicate.\n\n*** This bug has been marked as a duplicate of bug 42925 ***"}]