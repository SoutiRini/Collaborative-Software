[{"count": 0, "tags": [], "text": "Overview Description:\n\nShould setting the content length of an HttpServletResponse to 0 cause that\nresponse to become committed?\n\nIf yes, then this defect submission is unfounded.\n\nIf no, then please consider the following two examples:\n\nSteps to Reproduce:\n\nCreate two servlets as described below and examine what results when a GET\nrequest is made to each.\n\nServlet 1:\n\nres.setStatus(302);\nres.setHeader(\"Location\", \"http://issues.apache.org\");\nres.setHeader(\"Content-length\", \"0\");\n\n(where res is the reference to the HttpServletResponse)\n\nServlet 2:\n\nres.setHeader(\"Location\", \"http://issues.apache.org\");\nres.setHeader(\"Content-length\", \"0\");              \nres.setStatus(302);\n\nActual Results:\n\nWhen Servlet 1 is executed, I see:\n\nHTTP/1.x 302 Moved Temporarily\nLocation: http://issues.apache.org\nContent-Length: 0\nDate: SomeDate_GMT\nServer: Apache-Coyote/1.1\n\nWhen Servlet 2 is executed, I see:\n\nHTTP/1.x 200 OK\nLocation: http://issues.apache.org\nContent-Length: 0\nDate: SomeDate_GMT\nServer: Apache-Coyote/1.1\n\n(Servlet 1: 302, Servlet 2: 200)\n\nExpected Results:\n\nI expect both of these servlets to return what Servlet 1 responded with.  For\nreference, the same behavior occurs if you use setContentLength(0).\n\nI believe the Servlet 2 invocation of setStatus doesn't have an effect because\nsetting the content length to 0 caused the response to become incorrectly committed.\n\nBuild Date & Platform:\n\nI'm running the official 5.0.28 release on Solaris 8.\n\nAdditional Information:\n\nIf this is in fact a defect, my only possible suggestion is that something may\nbe wrong with the implementation of \"isAppCommitted\" in\no.a.coy.t5.CoyoteResponse from jakarta-tomcat-catalina.  In code above, I\nbelieve that invoking res.setStatus() results in isCommitted() being invoked on\na CoyoteResponseFacade object.  In turn, this invokes isAppCommitted on a\nCoyoteResponse object.  For 5_0_28 the implementation of isAppCommitted reads:\n\n/**\n * Application commit flag accessor.\n */\npublic boolean isAppCommitted() {\n  return (this.appCommitted || isCommitted() || isSuspended()\n    || ((getContentLength() != -1) \n    && (getContentCount() >= getContentLength())));\n}\n\nIt appears that this can evaluate to true even if everything is false up until\nthe final piece:\n\n\"|| ((getContentLength() != -1) \n    && (getContentCount() >= getContentLength())));\"\n\nAnd both getContentCount and getContentLength return 0.\n\nFrom comments in the same file, getContentCount returns \"the number of bytes\nactually written to the output stream.\"  While getContentLength returns \"the\ncontent length that was set or calculated for this Response.\"\n\nSo, if I haven't written anything and I don't plan on writing any body part of\nthe message, then both of these methods return 0, and we're committed even\nthough neither the status line nor the headers have been necessarily written on\nthe wire.", "attachment_id": null, "bug_id": 36763, "id": 80280, "time": "2005-09-21T21:27:07Z", "creator": "northridge@gmail.com", "creation_time": "2005-09-21T21:27:07Z", "is_private": false}, {"attachment_id": null, "tags": [], "bug_id": 36763, "text": "\n\n*** This bug has been marked as a duplicate of 32604 ***", "count": 1, "id": 80286, "time": "2005-09-21T23:29:59Z", "creator": "william.barker@wilshire.com", "creation_time": "2005-09-21T23:29:59Z", "is_private": false}]