[{"count": 0, "tags": [], "bug_id": 21144, "is_private": false, "text": "It is possible to instruct make to run all the targets that directly or indirectly do not depend on failed targets. This feature is very useful in automatic builds and testing, because it allows detecting as many problems as possible instead of stopping on the first problem. \n\nThis is a sample code that I used in Project.executeTarget() to achieve this functionality. In the real code a command line option needs to be added and BuildException has to be extended to report several build errors.\n\n==========================\nProject.executeTarget()\n==========================\n\n    public void executeTarget(String targetName) throws BuildException {\n\n        // sanity check ourselves, if we've been asked to build nothing\n        // then we should complain\n\n        if (targetName == null) {\n            String msg = \"No target specified\";\n            throw new BuildException(msg);\n        }\n\n        // Sort the dependency tree, and run everything from the\n        // beginning until we hit our targetName.\n        // Sorting checks if all the targets (and dependencies)\n        // exist, and if there is any cycle in the dependency\n        // graph.\n        Vector sortedTargets = topoSort(targetName, targets);\n        Set executed=new HashSet();\n        BuildException buildException=null;\n\n        for (Enumeration iter=sortedTargets.elements(); iter.hasMoreElements();) {\n            Target curtarget = (Target) iter.nextElement();\n            boolean canExecute=true;\n            for (Enumeration dep_iter=curtarget.getDependencies(); dep_iter.hasMoreElements();) {\n              String dependencyName=((String)dep_iter.nextElement());\n              if (!executed.contains(dependencyName)) {\n                canExecute=false;\n                log(curtarget, \"Cannot execute '\"+curtarget.getName()+\"' - '\"+dependencyName+\"' was not executed.\", MSG_ERR);\n              }\n            }\n            if (canExecute) {\n              try {\n                curtarget.performTasks();\n                executed.add(curtarget.getName());\n              }\n              catch (BuildException ex) {\n                log(curtarget, \"Target '\"+curtarget.getName()+\"' failed.\", MSG_ERR);\n                if (buildException==null) {\n                  buildException=ex;\n                }\n                else {\n                  log(curtarget, \"Extra error: \"+ex.getMessage(), MSG_ERR);\n                }\n              }\n            }\n            if (curtarget.getName().equals(targetName)) // very strange exit condition\n              break;\n        }\n        if (buildException!=null)\n          throw buildException;\n    }", "id": 39552, "time": "2003-06-27T15:17:01Z", "creator": "alexeys@inventigo.com", "creation_time": "2003-06-27T15:17:01Z", "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 21144, "text": "Hi Alexey,\ncould you attach a patch file prepared against ant's CVS head revision ?\n(see http://jakarta.apache.org/site/source.html#Patches and also the file patch.\nxml in ant's CVS head)\nThanks in advance", "id": 39597, "time": "2003-06-29T16:58:21Z", "creator": "antoine@apache.org", "creation_time": "2003-06-29T16:58:21Z", "is_private": false, "attachment_id": null}, {"count": 2, "attachment_id": 7042, "creator": "alexeys@inventigo.com", "text": "Created attachment 7042\nCVS diff", "id": 39793, "time": "2003-07-01T21:22:09Z", "bug_id": 21144, "creation_time": "2003-07-01T21:22:09Z", "tags": [], "is_private": false}, {"count": 3, "tags": [], "bug_id": 21144, "text": "Created attachment 7043\ntest file", "id": 39796, "time": "2003-07-01T21:27:27Z", "creator": "alexeys@inventigo.com", "creation_time": "2003-07-01T21:27:27Z", "is_private": false, "attachment_id": 7043}, {"attachment_id": null, "tags": [], "creator": "peter.reilly@corvil.com", "text": "In Project#executeTarget, should the catch (Throwable ex) check\nthis.keepGoingMode and rethrow the throwable if not set.\n\nAlso when a sub-project is created by the ant task (used\nby <ant>, <antcall> and <subant>) the new project should copy\nthe keepGoingMode boolean. This should be done in the new\nmethod Project#initSubProject.\n\nAs regards the patchs idea, I think it is better to do\nkeepgoing this way as against using try/catch in the build script.\n\nIt may be an idea to allow the build script to control the\nkeepGoingMode boolean (possibly using a (custom) task) but this\ncould be added later.", "count": 4, "id": 39832, "time": "2003-07-02T09:09:16Z", "bug_id": 21144, "creation_time": "2003-07-02T09:09:16Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 21144, "text": "Created attachment 7068\nUpdated patch", "id": 39880, "time": "2003-07-02T18:29:20Z", "creator": "alexeys@inventigo.com", "creation_time": "2003-07-02T18:29:20Z", "is_private": false, "attachment_id": 7068}, {"count": 6, "tags": [], "text": "I have uploaded an updated patch. Sorry for debug code.", "is_private": false, "bug_id": 21144, "id": 39882, "time": "2003-07-02T18:30:00Z", "creator": "alexeys@inventigo.com", "creation_time": "2003-07-02T18:30:00Z", "attachment_id": null}, {"count": 7, "tags": [], "bug_id": 21144, "is_private": false, "text": "Created attachment 7309\nupdate patch - subant, exception handling, doc", "id": 40752, "time": "2003-07-15T17:14:20Z", "creator": "peter.reilly@corvil.com", "creation_time": "2003-07-15T17:14:20Z", "attachment_id": 7309}, {"count": 8, "tags": [], "bug_id": 21144, "text": "Committed the updated patch, thanks Alexey.\n", "id": 40832, "time": "2003-07-16T14:23:09Z", "creator": "peter.reilly@corvil.com", "creation_time": "2003-07-16T14:23:09Z", "is_private": false, "attachment_id": null}]