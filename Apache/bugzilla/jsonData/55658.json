[{"count": 0, "tags": [], "creator": "piers.geyman@indigoinspirations.co.uk", "attachment_id": null, "text": "When you call cell.setValue( myValue ) for a numeric cell when using SXSSF the call fails with the following error:\n\njava.lang.IllegalStateException: Cannot get a error value from a numeric cell\n\tat org.apache.poi.xssf.streaming.SXSSFCell.typeMismatch(SXSSFCell.java:841)\n\tat org.apache.poi.xssf.streaming.SXSSFCell.getErrorCellValue(SXSSFCell.java:487)\n\tat org.apache.poi.xssf.streaming.SXSSFCell.convertCellValueToString(SXSSFCell.java:891)\n\tat org.apache.poi.xssf.streaming.SXSSFCell.setType(SXSSFCell.java:760)\n\tat org.apache.poi.xssf.streaming.SXSSFCell.ensureTypeOrFormulaType(SXSSFCell.java:744)\n\tat org.apache.poi.xssf.streaming.SXSSFCell.setCellValue(SXSSFCell.java:235)\n\n\nLooking at the code in org.apache.poi.xssf.streaming.SXSSFCell.convertCellValueToString it has an incorrect case for CELL_TYPE_NUMERIC. There is no implementation and it just uses the same code as CELL_TYPE_ERROR, which is obviously incorrect:\n\n    private String convertCellValueToString() {\n        int cellType = getCellType();\n\n        switch (cellType) {\n            case CELL_TYPE_BLANK:\n                return \"\";\n            case CELL_TYPE_BOOLEAN:\n                return getBooleanCellValue() ? \"TRUE\" : \"FALSE\";\n            case CELL_TYPE_STRING:\n                return getStringCellValue();\n            case CELL_TYPE_NUMERIC:\n            case CELL_TYPE_ERROR:\n                byte errVal = getErrorCellValue();\n                return FormulaError.forInt(errVal).getString();\n            case CELL_TYPE_FORMULA:\n                return \"\";\n            default:\n                throw new IllegalStateException(\"Unexpected cell type (\" + cellType + \")\");\n        }\n    }\n\n\nWhat should this code be? Is there an existing patch I can apply? This bug makes using SXSSF un-useable. I have a project that I have big memory issues with when using XSSF and need this implementation.\n\nIf this is just a case of converting the NumericCell value to a string, then why not just do:\n\ncase CELL_TYPE_NUMERIC:\n    return Double.toString( getNumericCellValue() );\n \n\nOr to be more OO, why not override toString() on the class NumericValue?", "id": 170633, "time": "2013-10-16T10:51:48Z", "bug_id": 55658, "creation_time": "2013-10-16T10:51:48Z", "is_private": false}, {"count": 1, "tags": [], "creator": "dominik.stadler@gmx.at", "attachment_id": null, "text": "I took a look, it only happens if you set a cell first to a numeric value and then set a string value to the same cell.\n\nSo a workaround for now might be to only set the value of the cell once during creation of the xlsx.\n\nI fixed it for the next release, see r1532873 in SVN.", "id": 170641, "time": "2013-10-16T19:48:42Z", "bug_id": 55658, "creation_time": "2013-10-16T19:48:42Z", "is_private": false}]