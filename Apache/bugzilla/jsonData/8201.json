[{"count": 0, "tags": [], "text": "The method setFile(String fileName, boolean append) is no more available in \nRollingFileAppender, but has been replaced by setFile(String fileName, boolean \nappend, boolean bufferedIO, int bufferSize). Thus log4j.jar of 1.2rc1 is no \nmore binary compatible with log4j.jar 1.1.3", "is_private": false, "bug_id": 8201, "id": 13844, "time": "2002-04-17T11:52:04Z", "creator": "frederic@instranet.com", "creation_time": "2002-04-17T11:52:04Z", "attachment_id": null}, {"count": 1, "tags": [], "text": "FileAppender.setFile(String, boolean) was modified in the migration from 1.1.3 \nof Log4j to v1.2 of Log4j to setFile(String, boolean, boolean, int)\n\nThe subclasses of FileAppender are CompositeRollingAppender, DailyFileApender, \nRollingFileAppender, and DailyRollingFileApender. Each needs to be changed \nsimilarily as they call their super class' .setFile(String, boolean) method \nand that method isn't available. DailyRollingFileAppender doesn't \noverride .setFile so it simply defers to the superclass' .setFile methods\n(perhaps some of the others could also?)\n\n.setFile(String, boolean) is messaged by the following methods listed below \nwhich need to change to use the newest method signature. \n\n- DailyFileAppender.activateOptions() {There is one reference and an error log \nmessage that needs to be updated.}\n\n- DailyFileAppender.subAppend(LoggingEvent) {There is one reference and an \nerror log message that needs to be updated.}\n\n- CompositeRollingAppender.rolloverSize() {There is one reference and an error \nlog message that needs to be updated.}\n\n- CompositeRollingAppender.rolloverTime() {There is one reference and an error \nlog message that needs to be updated.}\n\nA final note for your consideration:\nI'm not clear on why setFile(String, boolean) was removed in order to provide \nthe setFile(String, boolean, boolean, int) capability. Perhaps its for good \nreason or was necessary to add the feature of bufferedIO. If not required to \nremove the setFile(String, boolean) method signature, it seems to me that \nsetFile(String, boolean) should still be available and it would simply call \nthis.setFile(String, boolean, boolean, int) passing appropriate default values \nto be decided on by the class owner. This would enable code that currently \ncalls the former method signature to be backward compatible and allows users \nof this appender to simply defer to the class developer's judgement for the \ndefaults values.\n\n", "is_private": false, "bug_id": 8201, "id": 14681, "time": "2002-04-25T05:13:15Z", "creator": "sdoherty@kc.rr.com", "creation_time": "2002-04-25T05:13:15Z", "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 8201, "attachment_id": null, "is_private": false, "id": 14785, "time": "2002-04-25T21:34:11Z", "creator": "ceki@apache.org", "creation_time": "2002-04-25T21:34:11Z", "text": "\nDo not use FileAppender.setFile method directly. To configure a FileAppender\nor one of its subclasses, set its properties one by one and then call \nactivateOptions.\n\nAs for DailyFileAppender, CompositeRollingAppender I can't help you since these \nappenders are not maintained by me. Can you please send a message on the log4j-\nuser outlining the problem. Thank you. "}]