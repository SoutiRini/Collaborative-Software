[{"count": 0, "tags": [], "creator": "eryq@zeegee.com", "is_private": false, "text": "Using apache 1.3.20, mod_webapp, catalina 4b7, and using https.\n\nIn the doGet() method, req.getScheme() is reporting \"http\" instead of \"https\".\nthe req.isSecure() also reports false.", "id": 5227, "time": "2001-09-07T15:27:44Z", "bug_id": 3510, "creation_time": "2001-09-07T15:27:44Z", "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 3510, "is_private": false, "id": 5234, "attachment_id": null, "creator": "pier@betaversion.org", "creation_time": "2001-09-07T21:13:15Z", "time": "2001-09-07T21:13:15Z", "text": "I just verified that this is a valid bug... I'm changing priority to HIGH as this \nviolates the Servlet specification. (Thanks Eriq, again, as always!)"}, {"count": 2, "tags": [], "text": "This will happen only if your Apache is compiled with mod_ssl (and \nthough compiled with the Apache EAPI). When the WebApp module is \ncompiled with -DEAPI (automatically included if apxs comes from an \nApache+SSL distribution), the bug will go away.\n\nFred Romelfanger <fred@stsci.edu> wrote:\n> \n> So you know I ran into a similiar problem with https://host/ being\n> translated to http://hoth.stsci.edu:443/.  My problem truned out to\n> be mod_webapp not being compiled with -DEAPI.  Once I fixed\n> that my problem went away, and also getScheme() returns https.\n> I found this when tracked down the scheme back to the definition\n> of ap_http_method in httpd.h", "is_private": false, "id": 5497, "creator": "pier@betaversion.org", "time": "2001-09-13T17:00:54Z", "bug_id": 3510, "creation_time": "2001-09-13T17:00:54Z", "attachment_id": null}]