[{"count": 0, "tags": [], "bug_id": 43882, "attachment_id": null, "id": 110633, "time": "2007-11-16T04:10:54Z", "creator": "bjoern@hoehrmann.de", "creation_time": "2007-11-16T04:10:54Z", "is_private": false, "text": "Requests using multiple transfer encodings are handled as if they had no \nTransfer-Encoding header and no entity body. For example:\n\n  POST / HTTP/1.1\n  Transfer-Encoding: gzip,chunked\n  [more headers]\n\n  [body]\n\nHere Apache would treat [body] as if it was the beginning of a new request. \nThis is incorrect, RFC 2616 allows requests of this kind and recommends to \nrespond with Not Implemented if the Transfer-Encoding is not understood; the \nalternative would be to treat it as if it had \"Transfer-Encoding: chunked\" and \nlet request handlers remove the other transfer encodings if they so wish though \nthis would probably require some opt-in feature to avoid feeding garbage to \nunsuspecting handlers.\n\nThe specific code seems to tbe in http_filters.c ap_http_filter(...) which\nonly goes into BODY_CHUNK mode if \"chunked\" is the only encoding. There also \ndoes not seem to be lexical checking performed on the value. RFC 2616 requires \nthat \"chunk\" occurs at most once in the value and if it does, occurs at the end \nof the list. Apache should probably respond with Bad Request if that is not the \ncase (to avoid confusing request handlers taking care of the decoding if that \nis made an option)."}, {"count": 1, "tags": [], "text": "Fixed in trunk in r595672.", "attachment_id": null, "bug_id": 43882, "id": 110639, "time": "2007-11-16T06:21:15Z", "creator": "nick@webthing.com", "creation_time": "2007-11-16T06:21:15Z", "is_private": false}, {"count": 2, "tags": [], "creator": "bjoern@hoehrmann.de", "is_private": false, "text": "From the latest version:\n\n            /* RFC2616 allows qualifiers, so use strncasecmp */\n            if (!strncasecmp(tenc, \"chunked\", 7) && !ap_strchr_c(tenc, ',')) {\n                ctx->state = BODY_CHUNK;\n            }\n            else {\n                /* Something that isn't in HTTP, unless some future\n                 * edition defines new transfer ecodings, is unsupported.\n                 */\n\nI am a bit worried, I am unsure what \"qualifiers\" refers to and the code below \nseems to match on \"Transfer-Encoding: chunkedfoo\" which it should not. And the \noriginal example \"Transfer-Encoding: gzip,chunked\" is \"in HTTP\", Apache just \ndoes not support it. So shouldn't this be something like\n\n            if (!strcasecmp(tenc, \"chunked\")) {\n                ctx->state = BODY_CHUNK;\n            }\n            else {\n                /* Other Transfer-Encodings are not implemented */\n", "id": 110661, "time": "2007-11-16T20:58:21Z", "bug_id": 43882, "creation_time": "2007-11-16T20:58:21Z", "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 43882, "attachment_id": null, "is_private": false, "id": 110664, "time": "2007-11-17T00:29:52Z", "creator": "nick@webthing.com", "creation_time": "2007-11-17T00:29:52Z", "text": "Bj\u00f6rn, this is turning into discussion, and as such should be on dev@httpd, not\nbugzilla.  Do you follow that?\n\n1.  Qualifiers come from the BNF-style representation of the header, which means\nsomething like\nTransfer-Encoding: chunked;foo=bar\nis syntactically valid.  But in practice, no qualifiers are defined.\n\n2.  gzip is a content-encoding, not a transfer-encoding.  The passage in RFC2616\nthat suggests otherwise is clearly a drafter who'd been staring at it too long,\nand had a brainfart.\n\n3.  You're right about \"chunkedfoo\" - I'll fix it.  If noone shouts, I'll just\nset it back to strcasecmp, so we don't support any qualifiers.  As it happens,\nI'd already realised it wasn't right, but just wasn't rushing the job again:-)\n\nThank you for your attention to detail."}, {"count": 4, "tags": [], "bug_id": 43882, "attachment_id": null, "id": 110665, "time": "2007-11-17T01:24:42Z", "creator": "bjoern@hoehrmann.de", "creation_time": "2007-11-17T01:24:42Z", "is_private": false, "text": "Ah you meant parameters, they are indeed allowed, but not knowing what to do \nwith them they didn't seem to affect the issue. I don't follow the development \nlist, but I also have nothing to add if you do 3., except to point out that you \nare wrong about gzip not being a Transfer-Encoding..."}, {"count": 5, "tags": [], "creator": "nick@webthing.com", "is_private": false, "text": "Fixed in r602470.", "id": 111579, "time": "2007-12-08T06:35:25Z", "bug_id": 43882, "creation_time": "2007-12-08T06:35:25Z", "attachment_id": null}]