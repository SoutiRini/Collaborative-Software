[{"count": 0, "tags": [], "bug_id": 34232, "text": "I\u2019m working on porting some legacy code into Java, piecewise.  The legacy code \nhas a script (which I have to keep for now) that generates a header and footer \nseparately for a page using SSIs for a given HTML page request, e.g., a page \non the server would look like \n\n<!--#exec cmd=\u201d/path/to/headerfooterscript --showheader\u201d-->\n\u2026\n(some HTML or other SSI directives here)\n\n\u2026\n\n<!--#exec cmd=\u201d/path/to/headerfooterscript --showfooter\u201d-->\n\nInstead of HTML files now, I have JSPs.  I have an Apache (2.0.53) \ninstallation handing off requests to a Tomcat (5.5.7) server via mod_jk \n(1.2.8).  The output from those requests has the header/footer includes in it, \nafter which Apache is configured to process the output for the SSIs \n(using \u201cSetOutputFilter INCLUDES\u201d in the configuration) and run those.  Apache \nparses the output for SSIs but fails to run the \u201cheaderfooterscript\u201d, \nreturning this message in the log:\n\n    (2)No such file or directory: change of working directory failed\n\nThe directory exists, the script exists, it\u2019s executable, the Apache user has \npermissions to run it, but I get this message.  Doing a little debugging, I \nsee that the value that Apache has for the working directory is empty.\n\nNow, one odd thing is that doing this works if I use \u201c#exec cgi\u201d or \u201c#include \nvirtual\u201d commands in the JSP output instead of \u201c#exec cgi\u201d (using either of \nthose is undesirable for other reasons right now), it works --- I get the \noutput from a test script or file included in the output from the JSP.  \n\nThe other odd thing is that if I write a plain CGI script (Perl in this case) \nto return as output the header/footer includes using the \u201c#exec cmd\u201d syntax, \nit also works --- no \u201c(2)No such file or directory: change of working \ndirectory failed\u201d messages.  Debugging shows that the value for the working \ndirectory is being set correctly for all the working cases.\n\nSo it appears that it might be a bug vis-\u00e0-vis Apache and mod_jk (but I'm \nfiling it under mod_include for the moment) in some fashion, either before the \nrequest is handed off, or after it comes back.  I should note that the \noriginal issue was spotted under Solaris 8, but it also happens under Solaris \n9.  Also, I don\u2019t have any third-party modules compiled either.  I haven\u2019t \ntested Apache under Linux (wouldn\u2019t be the production environment anyway) to \nsee if it also happens there.", "id": 73037, "time": "2005-03-30T03:26:29Z", "creator": "parramorej@homes.com", "creation_time": "2005-03-30T03:26:29Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "creator": "chip@force-elite.com", "attachment_id": null, "is_private": false, "id": 73361, "time": "2005-04-06T23:03:34Z", "bug_id": 34232, "creation_time": "2005-04-06T23:03:34Z", "text": "I would guess that mod_jk is changing the CWD, and thats why the cmd= fails,\nwhile virtual= works correctly.  Marking invalid as an HTTPD bug, its something\nthat mod_jk is doing to the enviroment.  Also, using virtual might be the\nprefered method for other reasons.."}, {"count": 2, "tags": [], "bug_id": 34232, "attachment_id": null, "text": "I will go ahead and open up this issue on the tomcat/mod_jk side of things and \nsee how matters progress --- thanks.\n\nOutside of the issue of not being able to run the header/footer script as a \nCGI program, why would '#include virtual be preferred?  I had found at one \ntime that some environment variables aren't passed along to scripts invoked \nusing that as opposed to #exec cgi, so would be reluctant to do that.\n", "id": 73374, "time": "2005-04-07T03:51:55Z", "creator": "parramorej@homes.com", "creation_time": "2005-04-07T03:51:55Z", "is_private": false}]