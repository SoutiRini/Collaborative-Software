[{"count": 0, "tags": [], "bug_id": 61654, "attachment_id": null, "text": "https://ant.apache.org/manual/Tasks/copy.html\n\ntells us \"By default, files are only copied if the source file is newer than the destination file, or when the destination file does not exist. However, you can explicitly overwrite files with the overwrite attribute.\"\n\nSo we take a look at the attribute itself:\nAttribute:overwrite\tDescription:Overwrite existing files even if the destination files are newer.\tRequired:No; defaults to false.\n\nBut this is wrong. There are 3 different behaviors this task can perform. Not merely true, or false.\n\nTrue - Overwrite files, period. Ignores recentness of source or destination.\nFalse - Do not overwrite files, period. Ignore recentness of source or destination.\nDefault - Only overwrite files if source is more recent than destination.\n\nThe current representation in the documentation implies that the default behaves the same as false vie \"defaults to false\", but that is simply not true. Anyone looking at the documentation for a way to never overwrite, only copy if the destination does not have the file from the source will assume 1 of two things, that the default and false will both never overwrite (and then waste time debugging having chosen the default) or that neither of them are an option, as both will look at recentness, and will resort to a <present> selector, adding unnecessary lines of code and research.\n\nThis documentation should be updated to specifically state there are 3 behaviors and that the default results in specific behavior, NOT that it defaults to false.", "id": 201602, "time": "2017-10-23T18:13:58Z", "creator": "ncondatore@bellsouth.net", "creation_time": "2017-10-23T18:13:58Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 61654, "attachment_id": null, "text": "I don't think you are correct. The overwrite flag is false by default and even with overwrite=\"false\" files are replaced if they are outdated.\n\n$ cat x.xml \n<project>\n  <touch file=\"a\"/>\n  <sleep seconds=\"3\"/>\n  <touch file=\"b\"/>\n  <copy file=\"b\" tofile=\"a\" overwrite=\"false\"/>\n</project>\n$ ant -f x.xml\nBuildfile: /tmp/x.xml\n    [touch] Creating /tmp/a\n    [touch] Creating /tmp/b\n     [copy] Copying 1 file to /tmp\n\nBUILD SUCCESSFUL\nTotal time: 3 seconds\n\nas you can see, a has been replaced even though overwrite was false.", "id": 201612, "time": "2017-10-24T04:51:17Z", "creator": "bodewig@apache.org", "creation_time": "2017-10-24T04:51:17Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 61654, "attachment_id": null, "text": "Perhaps this only applies to directories or filesets.\n\nThis is my implementation boiled down to the basics:\n\n<target name=\"example\">\n   <copy todir=\"../\" overwrite=\"false\">\n      <fileset dir=\"${source}/>\n   </copy>\n</target>\n\nThis does not overwrite old files in the directories that already exist, but will when overwrite=\"false\" is not present. Perhaps it is only checking the age of the directories and not their contained files?", "id": 201641, "time": "2017-10-24T17:59:02Z", "creator": "ncondatore@bellsouth.net", "creation_time": "2017-10-24T17:59:02Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 61654, "attachment_id": null, "text": "Hmm,\n\n$ cat x.xml \n<project>\n  <mkdir dir=\"a/example\"/>\n  <touch file=\"a/example/file\"/>\n  <sleep seconds=\"3\"/>\n  <mkdir dir=\"b/example\"/>\n  <touch file=\"b/example/file\"/>\n  <copy todir=\"a\" overwrite=\"false\">\n    <fileset dir=\"b\"/>\n  </copy>\n</project>\n$ ant -f x.xml \nBuildfile: /tmp/x.xml\n    [mkdir] Created dir: /tmp/a/example\n    [touch] Creating /tmp/a/example/file\n    [mkdir] Created dir: /tmp/b/example\n    [touch] Creating /tmp/b/example/file\n     [copy] Copying 1 file to /tmp/a\n\nBUILD SUCCESSFUL\nTotal time: 3 seconds\n\nIf you look at the code, then using overwrite=\"false\" really only sets a boolean variable that us false anyway. There is no difference between the default and setting it explicitly.\n\nCould it be anything else that you are seeing like filesystems on different machines with clocks that differ? Maybe you need to play with the granularity attribute?", "id": 201642, "time": "2017-10-24T18:22:45Z", "creator": "bodewig@apache.org", "creation_time": "2017-10-24T18:22:45Z", "is_private": false}]