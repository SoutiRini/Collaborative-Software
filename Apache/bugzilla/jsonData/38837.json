[{"count": 0, "tags": [], "text": "Hi,\n\nWhen data exceeding 8192 bytes is posted to a ProxyPass'd URL in an SSL \nvirtualhost, mod_proxy or mod_ssl overflows the data and transforms it in such \na way that it is useless after it is proxied.\n\nI am able to consistently reproduce this as follows.\n\nIn a SSL virtualhost block:\n<Location /test.cgi>\n   ProxyPass http://127.0.0.1:9010/test.cgi\n</Location>\n\nhttp://127.0.0.1:9010/ is a netcat listener whose output I'm teeing to a file.\n\nI generated post data looking like this:\ndata=by10te0001by10te0002by10te0003... etc.\n\nEach by10teXXXX is 10 bytes and repeats until the post data is 8200 bytes long \n(including data=).\n\nI submit it with curl:  curl -d $( cat testdata.txt ) \nhttps://securesite/test.cgi\n\nThe tee output from netcat is:\n---\nPOST /test.cgi HTTP/1.1^M\nHost: 127.0.0.1:9010^M\nUser-Agent: curl/7.15.1 (i386-portbld-freebsd5.4) libcurl/7.15.1 OpenSSL/0.9.7e \nzlib/1.2.1^M\nAccept: */*^M\nContent-Type: application/x-www-form-urlencoded^M\nExpect: 100-continue^M\nMax-Forwards: 10^M\nX-Forwarded-For: <snip>^M\nX-Forwarded-Host: <snip>^M\nX-Forwarded-Server: <snip>^M\nContent-Length: 8200^M\n^M\n819by10t0te0001by10te0002by10te0003<snip>by10te0818by10te0819by10t\n---\n\nI've <snip>'d information for briefness sake.\n\nThe post data comes out to 8200 bytes long, but has overflowed in some way and \nbeen transformed.\n\nIf I perform this post to a ProxyPass that does not run in an SSL virtualhost, \nit goes through unaltered.\n\n\nThanks,\nAragon", "attachment_id": null, "id": 86439, "creator": "aragon@phat.za.net", "time": "2006-03-03T09:51:58Z", "bug_id": 38837, "creation_time": "2006-03-03T09:51:58Z", "is_private": false}, {"count": 1, "tags": [], "creator": "rpluem@apache.org", "attachment_id": null, "text": "\n\n*** This bug has been marked as a duplicate of 37145 ***", "id": 86454, "time": "2006-03-03T15:14:40Z", "bug_id": 38837, "creation_time": "2006-03-03T15:14:40Z", "is_private": false}]