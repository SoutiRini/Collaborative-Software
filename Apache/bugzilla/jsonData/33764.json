[{"count": 0, "tags": [], "bug_id": 33764, "attachment_id": null, "id": 71591, "time": "2005-02-28T03:40:05Z", "creator": "cowwoc@bbs.darktech.org", "creation_time": "2005-02-28T03:40:05Z", "is_private": false, "text": "<available file=\"C:\\\\Program Files\" type=\"dir\" property=\"someProperty\"/> always\nfails. In fact, I am pretty sure it fails no matter what path you use. I tried\nC:\\\\WINDOWS and it fails too.\n\nI couldn't find a workaround."}, {"count": 1, "tags": [], "bug_id": 33764, "is_private": false, "id": 71599, "creation_time": "2005-02-28T11:34:56Z", "time": "2005-02-28T11:34:56Z", "creator": "peterreilly@apache.org", "text": "Type using:\n<available file=\"C:\\Program Files\" type=\"dir\" property=\"someProperty\"/>", "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 33764, "attachment_id": null, "text": "(In reply to comment #1)\n> Type using:\n> <available file=\"C:\\Program Files\" type=\"dir\" property=\"someProperty\"/>\n\nI already did, and it gave problems where it was interpreting \\P as some escaped\nsequence. I should point out that I am injecting this property into\nbuild.properties so I think it needs an extra layer of escaping (which I've\ntried). Is there some other catch with property files I should know about?", "id": 71602, "time": "2005-02-28T12:56:43Z", "creator": "cowwoc@bbs.darktech.org", "creation_time": "2005-02-28T12:56:43Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 33764, "attachment_id": null, "is_private": false, "id": 71605, "time": "2005-02-28T13:21:20Z", "creator": "peterreilly@apache.org", "creation_time": "2005-02-28T13:21:20Z", "text": "1) did you use the test by itself in a stand-alone\n   build.xml file\n\n2) \\ is an escape character in properties file - blame\n   mickysoft for chosing an excape character for a directory\n   seperator\n\n3) you can use \"/\" instread of \"\\\" for directory seperator character\n   on windows.\n"}, {"count": 4, "attachment_id": null, "creator": "cowwoc@bbs.darktech.org", "text": "I finally tracked the problem down.\n\nSeems to have been caused by a combination of Ant's colorful \"properties may\nonly be set once\" behavior, my own fault for not noticing that the property was\nalready set (to an incorrect value where the space in the filename was not\nescaped). As well, I had this in the property file:\n\njdk15.home=\"C:/program files/java/jdk1.5.0_01\"\n\nNow, ignoring the fact that the space is unescaped, the actual problem is the\nsurrounding quotes around the value. Turns out that when <available> gets that\nvalue, it does not interpret the quotes as escaping slashes and spaces. Instead,\nit just dies with \"unable to find path\".\n\nI'd like to recommend the following for avoid this errors in the future:\n\n1) <available> should allow quotes to escape the value\n2) Can you please add some sort of feature whereby Ant fails the build if\nsomeone tries overriding the value of a property with a value different than\nit's already set to? You can make this optional but I am hopeful we can have it\nenabled by default. It would probably save a lot of people a lot of headaches.", "id": 71608, "time": "2005-02-28T13:39:43Z", "bug_id": 33764, "creation_time": "2005-02-28T13:39:43Z", "tags": [], "is_private": false}, {"count": 5, "tags": [], "bug_id": 33764, "attachment_id": null, "text": "I dont think we want to get into trying to be smart about quotes, because they\nare sometimes there legitimately. Like when you have files with quotes in them,\nwhich is certainly feasible on some platforms. And it is usally a pretty rare\noccurence, you only got burned because you were using property files. Property\nfiles have their own little quirks, even though they are wonderfully simple usually.\n\nAs for warning about overrides, you can run ant -verbose and get this kind of\ninformation, along with lots of others. Dont be afraid of the -v (or even -d)\nswitch when things start misbehaving.", "id": 71613, "time": "2005-02-28T15:47:41Z", "creator": "stevel@apache.org", "creation_time": "2005-02-28T15:47:41Z", "is_private": false}, {"count": 6, "tags": [], "creator": "cowwoc@bbs.darktech.org", "text": "Steve,\n\nThe problem with Ant -v is that it won't stop the build once a property has been\noverwriten. That is, it'll warn about it, but I'll never notice because it'll\nspew out 10,000 other lines of output. Is it possible to add a \"strict\" mode for\nAnt which causes it to die on warnings (I assume this is a warning)?", "id": 71624, "time": "2005-02-28T18:09:29Z", "bug_id": 33764, "creation_time": "2005-02-28T18:09:29Z", "is_private": false, "attachment_id": null}, {"count": 7, "tags": [], "text": "The number of builds this behavior would break is so incalculable that I can't\nsee us ever implementing this.  If I were you and I really thought I wanted\nthis, I would create a macro to do this for me.  Attachment forthcoming...", "attachment_id": null, "bug_id": 33764, "id": 71625, "time": "2005-02-28T18:36:42Z", "creator": "mbenson@apache.org", "creation_time": "2005-02-28T18:36:42Z", "is_private": false}, {"count": 8, "tags": [], "creator": "mbenson@apache.org", "text": "Created attachment 14376\nbuildfile containing a macro to fail on attempted reset of property value", "id": 71626, "time": "2005-02-28T18:37:54Z", "bug_id": 33764, "creation_time": "2005-02-28T18:37:54Z", "is_private": false, "attachment_id": 14376}]