[{"count": 0, "tags": [], "bug_id": 53615, "attachment_id": null, "id": 160957, "time": "2012-07-28T10:33:36Z", "creator": "s.a.grigoriev@gmail.com", "creation_time": "2012-07-28T10:33:36Z", "is_private": false, "text": "I have upgraded my Tomcat from 7.0.28 to 7.0.29 and got OutOfMemory error after typing  \"catalina.sh run\" from command line.\n\nThe root element of my web.xml is\n\n<web-app version=\"2.5\"\n\n         xmlns=\"http://java.sun.com/xml/ns/javaee\"\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd\">\n\nEnvironment : Ubuntu 12.04 x64, Oracle Jdk 1.6.0_33, without APR native libraries.\n\nI tried to increase heap memory from 1GB up to 4GB, it didn't help.\n\n\n\n----------------------- Stack trace -----------------------------------------\njava.util.concurrent.ExecutionException: java.lang.OutOfMemoryError: GC overhead limit exceeded\n\tat java.util.concurrent.FutureTask$Sync.innerGet(FutureTask.java:222)\n\tat java.util.concurrent.FutureTask.get(FutureTask.java:83)\n\tat org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:1123)\n\tat org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:302)\n\tat org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)\n\tat org.apache.catalina.core.StandardService.startInternal(StandardService.java:443)\n\tat org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)\n\tat org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:732)\n\tat org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)\n\tat org.apache.catalina.startup.Catalina.start(Catalina.java:675)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:597)\n\tat org.apache.catalina.startup.Bootstrap.start(Bootstrap.java:322)\n\tat org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:451)\nCaused by: java.lang.OutOfMemoryError: GC overhead limit exceeded\n\tat java.util.Arrays.copyOf(Arrays.java:2882)\n\tat java.lang.AbstractStringBuilder.expandCapacity(AbstractStringBuilder.java:100)\n\tat java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:390)\n\tat java.lang.StringBuilder.append(StringBuilder.java:119)\n\tat java.lang.StackTraceElement.toString(StackTraceElement.java:157)\n\tat java.lang.String.valueOf(String.java:2826)\n\tat java.lang.StringBuilder.append(StringBuilder.java:115)\n\tat java.lang.Throwable.printStackTrace(Throwable.java:512)\n\tat java.util.logging.SimpleFormatter.format(SimpleFormatter.java:72)\n\tat java.util.logging.StreamHandler.publish(StreamHandler.java:179)\n\tat java.util.logging.ConsoleHandler.publish(ConsoleHandler.java:88)\n\tat java.util.logging.Logger.log(Logger.java:478)\n\tat java.util.logging.Logger.doLog(Logger.java:500)\n\tat java.util.logging.Logger.logp(Logger.java:700)\n\tat org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:185)\n\tat org.apache.juli.logging.DirectJDKLog.error(DirectJDKLog.java:151)\n\tat org.apache.catalina.startup.HostConfig.deployDirectories(HostConfig.java:1025)\n\tat org.apache.catalina.startup.HostConfig.deployApps(HostConfig.java:474)\n\tat org.apache.catalina.startup.HostConfig.start(HostConfig.java:1413)\n\tat org.apache.catalina.startup.HostConfig.lifecycleEvent(HostConfig.java:313)\n\tat org.apache.catalina.util.LifecycleSupport.fireLifecycleEvent(LifecycleSupport.java:119)\n\tat org.apache.catalina.util.LifecycleBase.fireLifecycleEvent(LifecycleBase.java:90)\n\tat org.apache.catalina.util.LifecycleBase.setStateInternal(LifecycleBase.java:401)\n\tat org.apache.catalina.util.LifecycleBase.setState(LifecycleBase.java:346)\n\tat org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:1140)\n\tat org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:785)\n\tat org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)\n\tat org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1559)\n\tat org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1549)\n\tat java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:138)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)"}, {"count": 1, "text": "Created attachment 29124\norg.apache.cataline.core.StandardContext occupies 769 MB (0.769 GB)!", "bug_id": 53615, "attachment_id": 29124, "id": 160958, "time": "2012-07-28T10:41:59Z", "creator": "s.a.grigoriev@gmail.com", "creation_time": "2012-07-28T10:41:59Z", "tags": [], "is_private": false}, {"count": 2, "tags": [], "text": "Created attachment 29125\nHistogram", "attachment_id": 29125, "id": 160959, "creator": "s.a.grigoriev@gmail.com", "time": "2012-07-28T10:45:10Z", "bug_id": 53615, "creation_time": "2012-07-28T10:45:10Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 53615, "attachment_id": 29126, "id": 160960, "creation_time": "2012-07-28T10:48:08Z", "time": "2012-07-28T10:48:08Z", "creator": "s.a.grigoriev@gmail.com", "text": "Created attachment 29126\nGC roots for top heap consumer", "is_private": false}, {"count": 4, "tags": [], "bug_id": 53615, "attachment_id": 29127, "is_private": false, "id": 160961, "time": "2012-07-28T11:02:42Z", "creator": "s.a.grigoriev@gmail.com", "creation_time": "2012-07-28T11:02:42Z", "text": "Created attachment 29127\njavaClassCache"}, {"count": 5, "text": "\n\n*** This bug has been marked as a duplicate of bug 53535 ***", "creator": "s.a.grigoriev@gmail.com", "is_private": false, "id": 160962, "time": "2012-07-28T11:12:43Z", "bug_id": 53615, "creation_time": "2012-07-28T11:12:43Z", "tags": [], "attachment_id": null}]