[{"count": 0, "tags": [], "bug_id": 49634, "attachment_id": null, "id": 138619, "time": "2010-07-21T17:32:53Z", "creator": "tom.care@uqconnect.edu.au", "creation_time": "2010-07-21T17:32:53Z", "is_private": false, "text": "Hi all,\n\nI am a contributor to the open source project Clang, which functions as a C front-end and static analyzer for the LLVM compiler. You can read more about it at http://clang.llvm.org. I am currently writing some static analysis checks, and one check has flagged a possible segfault and unreachable code in core/server.c.\n\nThe function in question is dirsection (line 1785 in trunk).\n\n1805:    arg = apr_pstrndup(cmd->pool, arg, endp - arg);\n1806:\n1807:    if (!arg[0]) {\n1808:        return missing_container_arg(cmd);\n1809:    }\n1810:\n1811:    if (!arg) {\n1812:        if (thiscmd->cmd_data)\n1813:            return \"<DirectoryMatch > block must specify a path\";\n1814:        else\n1815:            return \"<Directory > block must specify a path\";\n1816:    }\n\nThe analyzer flags lines 1812-1815 as unreachable. We can see that on line 1807, arg is dereferenced without a null check. At line 1811, arg cannot be null, so the condition is never satisfied. It seems that the author intended the checks to be in the reverse order.\n\nTom"}, {"count": 1, "tags": [], "bug_id": 49634, "attachment_id": null, "id": 139220, "creation_time": "2010-08-18T16:11:42Z", "time": "2010-08-18T16:11:42Z", "creator": "sf@sfritsch.de", "text": "fixed in r986901", "is_private": false}]