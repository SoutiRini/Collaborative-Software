[{"count": 0, "tags": [], "text": "The current implementation of <junitreport> has no support for JUnit testcases with  non-ASCII strings in their assertion targets or system outputs.  When non-ASCII strings are used, the rendered summary will have inappropriate encoding specification and can be unreadable.\n\nThis (possible) bug is caused by the fact that the current implementation of <junitreport> always specifies the encoding of the generated summary as \"US-ASCII\".  This is hard-coded in the stylesheets, src/etc/junit-frames.xsl and src/etc/junit-noframes.xsl.\n\nAttached patch adds an optional attribute named 'encoding' to <junitreport> task.  The default value for this attribute is set to \"US-ASCII\" so that we can keep the current behaiviour if we don't use this option.  This patch is for Ant rev. 952676 (https://svn.apache.org/repos/asf/ant/core/trunk@952676)", "attachment_id": null, "bug_id": 49418, "id": 137516, "time": "2010-06-09T20:48:55Z", "creator": "matsubaray@gmail.com", "creation_time": "2010-06-09T20:48:55Z", "is_private": false}, {"count": 1, "tags": [], "creator": "matsubaray@gmail.com", "text": "Created attachment 25571\na sample build.xml and a JUnit testcase to reproduce the problem of non-ASCII strings in a junitreport task", "id": 137517, "time": "2010-06-09T20:57:11Z", "bug_id": 49418, "creation_time": "2010-06-09T20:57:11Z", "is_private": false, "attachment_id": 25571}, {"count": 2, "tags": [], "creator": "matsubaray@gmail.com", "text": "Created attachment 25572\nproposed patch to add an option to specify encoding in a junitreport task", "id": 137518, "time": "2010-06-09T20:59:46Z", "bug_id": 49418, "creation_time": "2010-06-09T20:59:46Z", "is_private": false, "attachment_id": 25572}, {"attachment_id": null, "tags": [], "bug_id": 49418, "is_private": false, "count": 3, "id": 137557, "time": "2010-06-10T17:25:33Z", "creator": "jglick@apache.org", "creation_time": "2010-06-10T17:25:33Z", "text": "Would seem simpler and more friendly to just set the encoding to UTF-8 unconditionally.\n\nAnyway I cannot reproduce a problem on Ubuntu with Ant 1.8.2 dev; the output has\n\n<META http-equiv=\"Content-Type\" content=\"text/html; charset=US-ASCII\">\n...\n<code>junit.framework.AssertionFailedError: expected:&lt;[123]&gt; but was:&lt;[&#19968;&#20108;&#19977;]&gt;<br>\tat Test1.test1(Unknown Source)<br>\n\nwhich displays fine. Of course it would be preferable to use UTF-8 encoding even still."}, {"attachment_id": 25581, "tags": [], "bug_id": 49418, "is_private": false, "count": 4, "id": 137558, "time": "2010-06-10T17:26:15Z", "creator": "jglick@apache.org", "creation_time": "2010-06-10T17:26:15Z", "text": "Created attachment 25581\nSimpler patch"}, {"attachment_id": null, "tags": [], "bug_id": 49418, "is_private": false, "count": 5, "id": 137572, "time": "2010-06-11T08:30:25Z", "creator": "matsubaray@gmail.com", "creation_time": "2010-06-11T08:30:25Z", "text": "(In reply to comment #3)\n> Would seem simpler and more friendly to just set the encoding to UTF-8\n> unconditionally.\n> \n> Anyway I cannot reproduce a problem on Ubuntu with Ant 1.8.2 dev;\n\nLet me add more to comment #1 first.\n\nThe problem was actually in stderr outputs shown in the summary, not in assertion results.  The procedure to reproduce the problem in stderr is as follows.  After generating the test summary in the way described above, click  \"<none>\" in the table bottom, \"1\" below \"Errors\" and \"System.err \u00bb \".  The file will contain \"123 vs. \ufffd\u0152\t\", instead of \"123 vs. \u4e00\u4e8c\u4e09\", which is written in the source code.\n\nAnd commenting to Jess's solution, I don't think it would be sufficient to hardcode UTF-8 instead of US-ASCII, because some Java environments have default encodings that are not compatible to UTF-8.  For example, Sun's JDK for Japanese Windows has MS932 as its default encoding.\n\nI couldn't manage to make such a patch, but using the default encoding of the system as that of the stylesheets for junitreport might be more reasonable."}, {"count": 6, "tags": [], "creator": "jglick@apache.org", "text": "(In reply to comment #5)\n> The problem was actually in stderr outputs shown in the summary\n\nAh, yes - because it is written to a text file which cannot signify its encoding.\n\n> I don't think it would be sufficient to\n> hardcode UTF-8 instead of US-ASCII, because some Java environments have default\n> encodings that are not compatible to UTF-8.  For example, Sun's JDK for\n> Japanese Windows has MS932 as its default encoding.\n\nDoesn't really matter what the JDK's default encoding is; you can still write output in any encoding you like.\n\n> I couldn't manage to make such a patch, but using the default encoding of the\n> system as that of the stylesheets for junitreport might be more reasonable.\n\nIt's easy to do and I will attach a patch.\n\nThe question is which patch is better. The encoding used for the HTML pages does not matter much (since output will be written with character references if necessary); it is a bit nicer to use UTF-8 but not essential. Regarding the plain text output, there are arguments in either direction:\n\n1. Using platform default encoding may be convenient if the web browser used to view the result is on the same machine as the one which ran <junitreport>, or which otherwise happens to have the same default encoding, and the web browser is set to use the platform default encoding by default for pages specifying no encoding (and is unable to sniff the encoding).\n\n2. Using UTF-8 ensures that no characters will ever be dropped as unencodable, i.e. output will never be lossy. At worst you may need to take a special action to display the page in UTF-8.", "id": 137575, "time": "2010-06-11T10:06:48Z", "bug_id": 49418, "creation_time": "2010-06-11T10:06:48Z", "is_private": false, "attachment_id": null}, {"count": 7, "tags": [], "text": "Created attachment 25587\nAlternate patch; produces output in platform default encoding", "is_private": false, "bug_id": 49418, "id": 137576, "time": "2010-06-11T10:07:30Z", "creator": "jglick@apache.org", "creation_time": "2010-06-11T10:07:30Z", "attachment_id": 25587}, {"count": 8, "tags": [], "creator": "jglick@apache.org", "text": "Created attachment 25588\nYet another patch, using HTML output only (only covers -frames and stderr)\n\nBetter yet, use HTML output for everything, so that the browser does not have to guess what the encoding is.", "id": 137577, "time": "2010-06-11T10:17:53Z", "bug_id": 49418, "creation_time": "2010-06-11T10:17:53Z", "is_private": false, "attachment_id": 25588}, {"attachment_id": null, "tags": [], "bug_id": 49418, "is_private": false, "count": 9, "id": 137587, "time": "2010-06-11T22:22:56Z", "creator": "matsubaray@gmail.com", "creation_time": "2010-06-11T22:22:56Z", "text": "(In reply to comment #8)\n> Created an attachment (id=25588) [details]\n> Yet another patch, using HTML output only (only covers -frames and stderr)\n> \n> Better yet, use HTML output for everything, so that the browser does not have\n> to guess what the encoding is.\n\nGoing to HTML output for everything seems to be a right choice.  It's fairly simple and works for me on Ubuntu + OpenJDK (default encoding: UTF-8) and on Windows XP + Sun JDK (default encoding: MS932).  In the Windows case, I didn't have to change the browser's setting , since the results were all encoded in UTF-8 properly.\n\n# Sorry for mistyping your name in my last comment #5, Jesse."}, {"count": 10, "tags": [], "creator": "jglick@apache.org", "text": "revision 954484", "id": 137620, "time": "2010-06-14T10:30:17Z", "bug_id": 49418, "creation_time": "2010-06-14T10:30:17Z", "is_private": false, "attachment_id": null}]