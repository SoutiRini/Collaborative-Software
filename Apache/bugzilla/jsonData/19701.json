[{"count": 0, "attachment_id": null, "bug_id": 19701, "text": "OS : Sun Solaris 2.8 (Intel)\njava version \"1.4.1\"\nJava(TM) 2 Runtime Environment, Standard Edition (build 1.4.1-b21)\nJava HotSpot(TM) Client VM (build 1.4.1-b21, mixed mode)\nTomcat 4.1.24 w/ Apache 2.0.45\n\nWhen reloading a context with the manager app, serializing the session fails if\nthere is an array of a class I have created in the session object. Serialization\nof a single instance of the class succeeds. There is one instance where the\nserialization of the array succeeds, and that is if the class is in a package\nthat is read from $TOMCAT_BASE/common/lib.\n\nThis is not an ongoing option for me due to file system privileges. If I place\nthe package in either WEB-INF/lib (as a jar) or expanded into WEB-INF/classes I\nget the exception listed below. \n\nAnother observation, a String[] can be serialized successfully.\n\nThere is no problem with the class being found for compiling a jsp or servlet,\nit is only the classloader used for session persistence that has a problem.\n\nThe exception produced (twice) is :\n\n2003-05-05 10:48:12 StandardManager[] ClassNotFoundException while loading\npersisted sessions: java.lang.ClassNotFoundExcept\nion: [Lextras.SearchResult;\njava.lang.ClassNotFoundException: [Lextras.SearchResult;\n        at\norg.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1443)\n        at\norg.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1289)\n        at\norg.apache.catalina.util.CustomObjectInputStream.resolveClass(CustomObjectInputStream.java:119)\n        at java.io.ObjectInputStream.readNonProxyDesc(ObjectInputStream.java:1513)\n        at java.io.ObjectInputStream.readClassDesc(ObjectInputStream.java:1435)\n        at java.io.ObjectInputStream.readArray(ObjectInputStream.java:1560)\n        at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1271)\n        at java.io.ObjectInputStream.readObject(ObjectInputStream.java:324)\n        at\norg.apache.catalina.session.StandardSession.readObject(StandardSession.java:1369)\n        at\norg.apache.catalina.session.StandardSession.readObjectData(StandardSession.java:864)\n        at\norg.apache.catalina.session.StandardManager.load(StandardManager.java:440)\n        at\norg.apache.catalina.session.StandardManager.start(StandardManager.java:655)\n        at\norg.apache.catalina.core.StandardContext.reload(StandardContext.java:2572)\n        at\norg.apache.catalina.servlets.ManagerServlet.reload(ManagerServlet.java:802)\n        at\norg.apache.catalina.servlets.HTMLManagerServlet.reload(HTMLManagerServlet.java:501)\n        at\norg.apache.catalina.servlets.HTMLManagerServlet.doGet(HTMLManagerServlet.java:151)\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:740)\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:853)\n        at\norg.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:247)\n        at\norg.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:193)\n        at\norg.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:256)\n        at\norg.apache.catalina.core.StandardPipeline$StandardPipelineValveContext.invokeNext(StandardPipeline.java:643)\n        at\norg.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:480)\n        at org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:995)\n        at\norg.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)\n        at\norg.apache.catalina.core.StandardPipeline$StandardPipelineValveContext.invokeNext(StandardPipeline.java:643)\n        at\norg.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:551)\n        at\norg.apache.catalina.core.StandardPipeline$StandardPipelineValveContext.invokeNext(StandardPipeline.java:641)\n        at\norg.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:480)\n        at org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:995)\n        at\norg.apache.catalina.core.StandardContext.invoke(StandardContext.java:2415)\n        at\norg.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:180)\n        at\norg.apache.catalina.core.StandardPipeline$StandardPipelineValveContext.invokeNext(StandardPipeline.java:643)\n        at\norg.apache.catalina.valves.ErrorDispatcherValve.invoke(ErrorDispatcherValve.java:171)\n        at\norg.apache.catalina.core.StandardPipeline$StandardPipelineValveContext.invokeNext(StandardPipeline.java:641)\n        at\norg.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:172)\n        at\norg.apache.catalina.core.StandardPipeline$StandardPipelineValveContext.invokeNext(StandardPipeline.java:641)\n        at\norg.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:480)\n        at org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:995)\n        at\norg.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:174)\n        at\norg.apache.catalina.core.StandardPipeline$StandardPipelineValveContext.invokeNext(StandardPipeline.java:643)\n        at\norg.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:480)\n        at org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:995)\n        at org.apache.coyote.tomcat4.CoyoteAdapter.service(CoyoteAdapter.java:223)\n        at org.apache.jk.server.JkCoyoteHandler.invoke(JkCoyoteHandler.java:261)\n        at org.apache.jk.common.HandlerRequest.invoke(HandlerRequest.java:360)\n        at org.apache.jk.common.ChannelSocket.invoke(ChannelSocket.java:604)\n        at\norg.apache.jk.common.ChannelSocket.processConnection(ChannelSocket.java:562)\n        at org.apache.jk.common.SocketConnection.runIt(ChannelSocket.java:679)\n        at\norg.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run(ThreadPool.java:619)\n\n\nThe class that produced this error is shown below. Any of my classes fail to be\nserialized when in arrays, but succeed when serialized as single objects.\n\nSearchResult.java\n******************\npackage extras;\n\nimport java.io.Serializable;\nimport com.bigredwire.util.Utility;\n\npublic class SearchResult implements Serializable, Cloneable {\n    \n    private String memberId;\n    \n    private String firstName;\n    \n    private String lastName;\n    \n    private String emailAddress;\n    \n    /** \n     * Creates a new instance of SearchResult \n     */\n    public SearchResult() {\n        memberId = \"\";\n        firstName = \"\";\n        lastName = \"\";\n        emailAddress = \"\";\n    }\n\n    public String getMemberId() {\n        return memberId;\n    }\n    \n    public String getEmailAddress() {\n        return emailAddress;\n    }\n    \n    public String getFirstName() {\n        return firstName;\n    }\n    \n    public String getLastName() {\n        return lastName;\n    }\n    \n    public void setMemberId(String memberId) {\n        this.memberId = Utility.ensureLength(memberId, 20, false);\n    }\n    \n    public void setEmailAddress(String emailAddress) {\n        this.emailAddress = Utility.ensureLength(emailAddress, 60, false);\n    }\n    \n    public void setFirstName(String firstName) {\n        this.firstName = Utility.ensureLength(firstName, 50, false);\n    }\n    \n    public void setLastName(String lastName) {\n        this.lastName = Utility.ensureLength(lastName, 50, false);\n    }\n    \n    public Object clone() {\n        try {\n            return super.clone();\n        }\n        catch (CloneNotSupportedException ex) {\n            throw new InternalError(ex.getMessage());\n        }\n    }\n    \n    public String toString() {\n        StringBuffer sb = new StringBuffer();\n        sb.append(\"member id = \" + memberId);\n        sb.append(Utility.EOL);\n        sb.append(\"first name = \" + firstName);\n        sb.append(Utility.EOL);\n        sb.append(\"last name = \" + lastName);\n        sb.append(Utility.EOL);\n        sb.append(\"email address = \" + emailAddress);\n        sb.append(Utility.EOL);\n        return sb.toString();\n    }\n}", "id": 36763, "time": "2003-05-06T16:40:59Z", "creator": "ccheshire@bigredwire.com", "creation_time": "2003-05-06T16:40:59Z", "tags": [], "is_private": false}, {"count": 1, "tags": [], "bug_id": 19701, "attachment_id": null, "text": "Well, [Lextras.SearchResult; is not the proper classname. Where is it specified\nthat CL must parse it because apparently one JDK component can submit garbage\ninstead of the proper classname ? I haven't seen that parsing code in the JDK\nclassloading code, but maybe I didn't look hard enough.", "id": 36765, "time": "2003-05-06T16:59:35Z", "creator": "remm@apache.org", "creation_time": "2003-05-06T16:59:35Z", "is_private": false}, {"count": 2, "tags": [], "text": "remy, were those comments directed to me, or the tomcat developers? i can't\nactually answer them as i am just a user, and have no knowledge about the\ninternals of tomcat (my project schedule doesn't lend support to me\ninvestigating either).\n\nshould i be waiting for this to get looked at, or just rewrite everything\naffected to use vectors instead of arrays?", "attachment_id": null, "id": 37149, "creator": "ccheshire@bigredwire.com", "time": "2003-05-14T00:17:29Z", "bug_id": 19701, "creation_time": "2003-05-14T00:17:29Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 19701, "text": "Hey guys, is this being looked into at all? Is more info needed? Or am I doing\nsomething wrong and this really isn't a bug at all - in which case can someone\npoint me in the right direction please?\n\nThanks\n\nChris", "id": 39049, "time": "2003-06-18T18:22:05Z", "creator": "ccheshire@bigredwire.com", "creation_time": "2003-06-18T18:22:05Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 19701, "attachment_id": null, "id": 56587, "time": "2004-04-28T22:57:02Z", "creator": "markt@apache.org", "creation_time": "2004-04-28T22:57:02Z", "is_private": false, "text": "To clarify Remy's comment he believes that this is a JDK issue where \njava.io.ObjectInputStream passes an invalid classname to Tomcat. Hence this is \nnot a tomcat bug.\n\nGiven that String[] works it is likely that there is something in your class - \nthrough no fault of yours - that is hitting some form of JDK bug.\n\nHave you tried searching the sun JDK bug list? How about trying a later \nversion of the JDK?"}, {"count": 5, "tags": [], "bug_id": 19701, "text": "This is actually a duplicate of bug 22146 that affects Tomcat 4.1.x.\nIt was fixed in Tomcat 5, but Remy couldn't reproduce it in 4.1 so\nhe didn't apply the same fix for 4.1.  I'm seeing this bug in 4.1.27,\nand it looks like it should still affect the latest 4.1.\n\nCan you apply this patch to 4.1?\n\nhttp://cvs.apache.org/viewcvs.cgi/jakarta-tomcat-catalina/catalina/src/share/org/apache/catalina/util/CustomObjectInputStream.java?r1=1.1&r2=1.2\n\nI have verified in my working copy that it does fix the problem for\nTomcat 4.1.27.\n\nThanks.\n", "id": 58783, "time": "2004-06-04T21:21:26Z", "creator": "jason_brittain@yahoo.com", "creation_time": "2004-06-04T21:21:26Z", "is_private": false, "attachment_id": null}, {"count": 6, "tags": [], "text": "OK. I have ported the patch and it will be included in the upcoming 4.1.31 \nrelease.", "attachment_id": null, "id": 62975, "creator": "markt@apache.org", "time": "2004-09-02T18:47:59Z", "bug_id": 19701, "creation_time": "2004-09-02T18:47:59Z", "is_private": false}]