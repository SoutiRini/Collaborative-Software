[{"attachment_id": null, "tags": [], "bug_id": 50921, "text": "./apache-lenya-2.0.3-src/externals/cocoon_2_1_x/src/java/org/apache/cocoon/bean/Target.java  line: 371\n\n\nmore than 3 consecutive replace() is called to remove the special characters. It's 3+ times slower than using a for loop replace them all. \n\n{noformat} \ne.g. \n - str.replace('a', '#'); \n - str.replace('b', '%'); \n\n + StringBuilder sb = new StringBuilder( str.length() ); \n + for (int i=0; i < str.length(); i++) \n + { \n + char c = str.charAt(i); \n + if ( c == 'a' ) \n + sb.append('#'); \n + else if ( c== 'b' ) \n + sb.append('%'); \n + else \n + sb.append(c); \n + } \n + str = sb.toString(); \n{noformat} \nThis bug has the same problem as the MySQL bug : http://bugs.mysql.com/bug.php?id=45699", "count": 0, "id": 144962, "time": "2011-03-12T22:22:45Z", "creator": "xiaoming@cs.wisc.edu", "creation_time": "2011-03-12T22:22:45Z", "is_private": false}, {"attachment_id": null, "tags": [], "bug_id": 50921, "text": "Thank you for the report. The affected code you point to is actually in the Cocoon code base, not the Lenya code base and is beyond our control.\n\nThe one thing about the replacement code is it is far less readable. If there isn't data to show that code block is a problem, I prefer readable over optimized.", "count": 1, "id": 145001, "time": "2011-03-14T14:57:13Z", "creator": "rfrovarp@apache.org", "creation_time": "2011-03-14T14:57:13Z", "is_private": false}]