[{"count": 0, "tags": [], "bug_id": 38733, "attachment_id": null, "text": "I just found out a new bug/feature(!) concerning mod_access and location/limit\nstatements. If applied, no error messages will be printed, and the errorcode 403\nwill NEVER be sent. Actually, ALL access will be granted despite of any access\nrules set. Administrator doesn't get any clue whatever about the possible\nsecurity hole, or where to look a solution for it. Log files will report\n\"correctly\" code200 for all files requested/got (should be 403 and denied).\n\nWhen using the statement below to deny the connect method, ALL mod_access checks\nare neutralized in a way that mod_access will only check if a user is allowed to\nsee the files in a directory tree. When autoindex is used, it will still display\na directory HEADER/FOOTER and the hr-lines, but hides all the files between. If\nthe user knows the correct file name, mod_access does absolutely NOTHING despite\nof any \"deny from all\" rules. \n\nCritical httpd.conf section follows:\n<Location />\n   <Limit CONNECT>\n     Order deny,allow\n     Deny from all\n   </Limit>\n</Location>\n\nAccess rules used:\nOrder deny,allow\nDeny From All", "id": 86006, "time": "2006-02-21T14:36:17Z", "creator": "makezi@luukku.com", "creation_time": "2006-02-21T14:36:17Z", "is_private": false}, {"count": 1, "tags": [], "creator": "nd@perlig.de", "text": "One could say, it's a design problem, a well known, though.\n\nYou configuration says, literally:\n\nDeny all URLs beginning with /, but only if the HTTP method is CONNECT. This\noverrides any rules before - as usual. But not what you obviously have expected\nin this case.\n\nWe're not gonna change the configuration mechanism in 2.0. There's a lot of work\ngoing on in the 2.3 development branch, though.\n\nSolution in your case: Alaways test you access configurations. Drop the\nCONNECT-403 thing. It's not necessary at all (and obviously jeopardizes your\nwhole config).", "id": 86009, "time": "2006-02-21T16:16:45Z", "bug_id": 38733, "creation_time": "2006-02-21T16:16:45Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 38733, "attachment_id": null, "text": "As the limit restricts only CONNECT method, how does that affect to GET method\nas well? There is no previous rules set for CONNECT, and I really wanted to\neliminate the whole method (it's irrelevant here why). The same problem affects\nto LimitExcept too. I think this problem should be documented somehow.\n\nThis can be fixed by moving the same Limit block under all directory statements,\nand making sure that .htaccess is not allowed to override limits, but that kinda\nsucks. Location definition would be so easy way to set global blocking, i.e. no\nPUT/CONNECT/DELETE/etc. methods allowed for entire server (dozen virtualhosts).\nBut obviously that doesn't work...\n", "id": 86019, "time": "2006-02-21T16:58:05Z", "creator": "makezi@luukku.com", "creation_time": "2006-02-21T16:58:05Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 38733, "attachment_id": null, "id": 86042, "creation_time": "2006-02-21T22:22:37Z", "time": "2006-02-21T22:22:37Z", "creator": "rpluem@apache.org", "text": "I am not sure if I understand your problem correctly, so could you please post a\nlarger part of your configuration that contains the neutralized mod_access checks?", "is_private": false}, {"count": 4, "tags": [], "bug_id": 38733, "attachment_id": null, "text": "The problem is that mod_access lumps its configuration together with a method\nlist. If no <limit> is set, all methods are implicitly in this list. Now you\nhave a <Location> container, which overrides both the configuration *and* the\nmethod list. Bang.\n\nFunnily the httpd only allows methods it can deal with (and rejects the other\nones with 405). I bet, you have PHP or something installed, which doesn't care\nat all for the requested method (and the scripts don't either). This is the\nreason why you want to forbid some methods. I don't understand the reason, but I\ndon't have to ;-)\n\nAn alternative way to forbid methods, is setting up mod_rewrite, like\n\nRewriteCond %{REQUEST_METHOD} =CONNECT\nRewriteRule ^ - [F,L]", "id": 86047, "time": "2006-02-21T22:37:24Z", "creator": "nd@perlig.de", "creation_time": "2006-02-21T22:37:24Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 38733, "attachment_id": null, "text": "(In reply to comment #4)\n> The problem is that mod_access lumps its configuration together with a method\n> list. If no <limit> is set, all methods are implicitly in this list. Now you\n> have a <Location> container, which overrides both the configuration *and* the\n> method list. Bang.\n\nOk. Maybe I am a bit slow today, so that I don't get it :-).\nmod_access lumps this together in access_dir_conf, but this is a dir config.\n\nSo\n\n<Location />\n   <Limit CONNECT>\n     Order deny,allow\n     Deny from all\n   </Limit>\n</Location>\n\n<Location /noentry>\n     Order deny,allow\n     Deny from all\n</Location>\n\nshould prevent all access to /noentry (what I regard as expected).\n", "id": 86054, "time": "2006-02-21T23:08:21Z", "creator": "rpluem@apache.org", "creation_time": "2006-02-21T23:08:21Z", "is_private": false}, {"count": 6, "tags": [], "creator": "makezi@luukku.com", "attachment_id": null, "id": 86077, "time": "2006-02-22T13:05:11Z", "bug_id": 38733, "creation_time": "2006-02-22T13:05:11Z", "is_private": false, "text": "(In reply to comment #4)\n> The problem is that mod_access lumps its configuration together with a method\n> list. If no <limit> is set, all methods are implicitly in this list. Now you\n> have a <Location> container, which overrides both the configuration *and* the\n> method list. Bang.\n\nThis is the caveat that should be documented on Limit description.\n\n\nFor Ruediger, let me explain it a little further, although I think you guys are\nalready aware of the problem, which is most important now (as this can be\navoided). Still irrelevant here is why somebody would want to configure it this\nway. The point is that administrator doesn't expect that limit statement to\naffect to any acl lists, and the mistage is only identified by somebody who is\nnormally denied access.\n\nAn example of my configuration follows, the critical section first:\n-- httpd.conf:\n<Location />\n   <Limit DELETE PUT>  (whatever here, except GET)\n     Order deny,allow\n     Deny from all\n   </Limit>\n</Location>\n\nNameVirtualHost *:80\n<VirtualHost *:80>\n    ServerName testing.local\n    DocumentRoot /www/docs\n    <Directory /www/docs>\n        Options Indexes FollowSymLinks\n        AllowOverride All\n        Order allow,deny\n        allow from all\n    </Directory>\n    ...\n</VirtualHost>\n\n-- /www/docs/secure/.htaccess (simplified for easy testing)\n  order deny,allow\n  deny from all\n\n-- contents of /www/docs/secure/\nREADME\nsecret.txt\na/whatever.html\nb/\n\n--\n\n* Web browser going to /secure sees README printed on top, but EMPTY folder\n(still gets code 200!). The directory seems really to be empty. Error logs\nhowever complain:\n[error] [client ...] client denied by server configuration: /www/docs/secure/a\n[error] [client ...] client denied by server configuration: /www/docs/secure/b\n[error] [client ...] client denied by server configuration:\n/www/docs/secure/secret.txt\n\n* /secure/secret.txt -> code 200, opened normally!\n* /secure/a/ -> code 200, normal directory listing\n* /secure/a/whatever.html -> code 200, opened normally\n\nThe most interesting part is the first one, where directories and files will get\nidentified as denied (and hidden), but nothing is actually done. So this really\nis different from default (hidden) statement which would override htaccess\nrestrictions with \"allow from all\".\n"}, {"count": 7, "tags": [], "creator": "makezi@luukku.com", "attachment_id": null, "id": 86080, "time": "2006-02-22T13:11:30Z", "bug_id": 38733, "creation_time": "2006-02-22T13:11:30Z", "is_private": false, "text": "Oh, btw. if that location/limit statement is set, there's no difference putting\nthe same .htaccess contents to httpd.conf. So the problem is not associated with\n.htaccess in any way.\n"}, {"count": 8, "tags": [], "bug_id": 38733, "attachment_id": null, "text": "Meanwhile I understand the problem much better. So the configuration I proposed\nin #5 actually works as expected. What one has to keep in mind is that if there\nare configuration directives from the same module (access in this case) for a \nresource that could be taken from either a Directory container that matches the\nresulting physical resource (file) or a Location container that matches the\nvirtual resource (URL), httpd always takes the configuration from the matching\nLocation container. So it does not seem to be a good idea to me to mix Directory\nand Location containers for the same configuration directives (like access\ncontrol in this case) as this might lead to unexpected results. .htaccess is\nseen in the same way as a Directory container in this context.\nSo general configuration alternatives seem to be the following for me:\n\n1. Do everything with Location (does not play well with .htaccess)\n2. Try to create the general rules (like the limit in your case) with\n   DirectoryMatch or maybe even <Directory />. This should work with .htaccess\n\nBTW: Something very similar to your configuration can be found at the end of\nhttp://httpd.apache.org/docs/2.0/sections.html as something that does not work.\nSo it seems already documented. But as you can see from my questions here I also\ndid not know before :-).", "id": 86110, "time": "2006-02-22T23:19:20Z", "creator": "rpluem@apache.org", "creation_time": "2006-02-22T23:19:20Z", "is_private": false}]