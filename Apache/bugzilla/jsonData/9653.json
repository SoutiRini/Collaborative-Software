[{"count": 0, "tags": [], "text": "This bug is due to an unexpected behavior in MSIE\nwhen using the referrer field deflector code to\ndeflect unwanted links by referrer.\n\nAs supplied on the Apache web site, at URL\n\nhttp://httpd.apache.org/docs/misc/rewriteguide.html\n\nthe code looks like this:\n\nRewriteMap  deflector txt:/path/to/deflector.map\n\n           RewriteCond %{HTTP_REFERER} !=\"\"\n           RewriteCond ${deflector:%{HTTP_REFERER}} ^-$\n           RewriteRule ^.* %{HTTP_REFERER} [R,L]\n\n           RewriteCond %{HTTP_REFERER} !=\"\"\n           RewriteCond ${deflector:%{HTTP_REFERER}|NOT-FOUND} !=NOT-FOUND\n           RewriteRule ^.* ${deflector:%{HTTP_REFERER}} [R,L]\n\n           ##  deflector.map\n           ##\n\n           http://www.badguys.com/bad/index.html    -\n           http://www.badguys.com/bad/index2.html   -\n           http://www.badguys.com/bad/index3.html   http://somewhere.com/\n\nThe problem occurs when the deflected and the target page\nreside on the same site.  It is due to (IMHO) an error in\nMSIE, which does not dump its referrer field after the\nredirection.  (Netscape, Lynx, Opera, etc. do not exhibit\nthis problem.)\n\nMSIE comes in, with an offending referrer field, and is\ndeflected to a different URL on the same site.  It comes\nback again *but does not dump the original referrer field*\nand is deflected again, comes back again, is deflected\nagain, comes back again ... and loops infinitely.\n\nI have a patch that I think might fix this, but I would\nlike to have your opinion before installing it.  It consists\nof splitting the second ruleset as follows:\n\n# The normal case; request URL != remapped URL\n\nRewriteCond %{HTTP_REFERER} !=\"\"\nRewriteCond ^.* != deflector:%{HTTP_REFERER}\nRewriteCond ${deflector:%{HTTP_REFERER}|NOT-FOUND} !=NOT-FOUND\nRewriteRule ^.* ${deflector:%{HTTP_REFERER}} [R,L]\n\n# When MSIE tries to loop; request URL = remapped URL\n\nRewriteCond %{HTTP_REFERER} !=\"\"\nRewriteCond ^.* deflector:%{HTTP_REFERER}\nRewriteCond ${deflector:%{HTTP_REFERER}|NOT-FOUND} !=NOT-FOUND\nRewriteRule ^.* ${deflector:%{HTTP_REFERER}} [F]\n\nIn the first (the \"normal\") case, the request URL is\nnot the same as the remapped URL, and Apache issues\nthe remapped URL with a [R]edirect.  This will send it\noff anywhere on the web.\n\nIn the second case, MSIE is trying to loop, has\nalready been through the first ruleset, and has been\nredirected to the remapped URL.  Therefore, both original\nand remapped pages reside on this server.  Apache\nstill issues the remapped URL, but as [F]inal\nwithout a redirect.\n\nI would be glad to have your opinion on this.", "is_private": false, "bug_id": 9653, "id": 17267, "time": "2002-06-06T04:52:15Z", "creator": "xxdpplus@yahoo.com", "creation_time": "2002-06-06T04:52:15Z", "attachment_id": null}, {"count": 1, "tags": [], "creator": "slive@apache.org", "text": "Hmmm... I think this is something that would better be discussed on the user\nmailing list.  You are correct that the example in the rewrite guide could\nhave problems, but it is really just an example.\n\nThanks for using Apache.", "id": 17383, "time": "2002-06-07T01:55:40Z", "bug_id": 9653, "creation_time": "2002-06-07T01:55:40Z", "is_private": false, "attachment_id": null}]