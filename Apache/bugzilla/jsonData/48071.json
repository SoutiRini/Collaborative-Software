[{"count": 0, "tags": [], "bug_id": 48071, "attachment_id": 24429, "id": 131438, "time": "2009-10-27T14:24:57Z", "creator": "alexanderkiel@gmx.net", "creation_time": "2009-10-27T14:24:57Z", "is_private": false, "text": "Created attachment 24429\npatch\n\nThis is the patch which I annonced in\nhttp://markmail.org/thread/2ka3sejiecymn4te.\n\nIt's all about refactoring. No new functionality.\n\nThe main point was to make MinOptMax immutable. MinOptMax has around 800 usages\nin FOP. It's central usage is in the package layoutmgr. It's passed around a\nlot. This passing around highly benefits from the newly immutability. It's also\nused in computations which may be a bit slower now but not by a far margin.\n\nThe big point is that the invariant min <= opt <= max can now be really\nguarantied (except at malicious serialization - but I could handle this). There\nis now no way to break this invariant (please validate this).\n\nI have a MinOptMaxTest which covers all method except for the deprecated ones.\nMinOptMax conforms to Checkstyle and looks nice. :-)  \n\nIt's really an all new class.\n\nApart from MinOptMax, I refactored some of the code around it's usage. Most of\nthe layoutmanager code will improve from refactoring. Most of it isn't up to\ntodays standards. Sadly I'm not able to refactor much, because I don't really\nin detail what is happening. I saw many Knuth things and as a LaTex user, I\nhave an idea about this algorithm but not in detail. \n\nI'm really interested in TextLayoutManager so I refactored there a lot in the\nprocess to understand the code. I created the TextAreaBuilder in the process of\nrefactoring the method createTextArea. This method is so complex that I though\nit is really an class of its own.\n\nI'm interested in TextLayoutManager because I like to implement some advanced\nOpenType layout features to the text processing. As you properly know, I\ncurrently write new code to read TrueType/OpenType files. I'm at a point where\nI can read and preprocess all the OpenType advanced typography features such as\nglyph substitution and glyph positioning (much more than kerning). So at the\nend it would be nice to actually see this features in action. So I came to\nTextLayoutManager.\n\nBack to my patch. Most of the changes I made are covered by tests. Of course it\nruns all tests. But there are some uncovered places as I already noted in my\nfirst mail of http://markmail.org/thread/2ka3sejiecymn4te.I don't know of the\nuncovered places really used in FOP. So it would be necessary for the committer\nto look at such uncovered places before applying may patch.\n\nI hope my patch will help the layoutmgr code.\n\nBest Regards\nAlex"}, {"count": 1, "text": "Alex,\n\njust looked at your patch:\n\n- I like the basic idea of replacing public field with the corresponding accessors, and making the class immutable. This is much cleaner design.\n\n- A speed comparison would be nice - is the new implementation slower or faster? Do you have \"proof\" for your claim (e.g. time render a document with and without the patch - any significant difference?)\n\n- As another enhancement, the flyweight pattern could be applied to minoptmax (of course, only after your patch is applied)\n\nBUT:\n- This patch has MUCH more content than just the MinOptMax. It contains many reformattings (probably automatically done by your IDE) AND some other renames, cleanups, etc. Although I do believe that what you did makes sense in most cases, this makes this patch very difficult to review.\n\n- I also see some diffs in $Id$ lines, which should not happen (looks like we're missing svn props here, will check that)\n\nI know it is difficult, but could you please refafctor the patch to address only one issue at a time? (I'll send an email about this to the fop-dev list)", "bug_id": 48071, "is_private": false, "id": 131488, "time": "2009-10-29T06:20:57Z", "creator": "max@berger.name", "creation_time": "2009-10-29T06:20:57Z", "tags": [], "attachment_id": null}, {"count": 2, "text": "I had a chat with Alexander via VOIP yesterday to discuss a few details of his patch. The patch is now in good shape and I've committed it under revision 893238:\nhttp://svn.apache.org/viewvc?rev=893238&view=rev\n\nSorry about the delay and thanks a lot for your patch. It cleans up quite a few things in the layout engine area.\n\nVincent", "bug_id": 48071, "is_private": false, "id": 133065, "time": "2009-12-22T09:24:55Z", "creator": "vhennebert@gmail.com", "creation_time": "2009-12-22T09:24:55Z", "tags": [], "attachment_id": null}, {"count": 3, "tags": [], "creator": "adelmelle@apache.org", "attachment_id": null, "is_private": false, "id": 143202, "time": "2011-01-08T14:31:05Z", "bug_id": 48071, "creation_time": "2011-01-08T14:31:05Z", "text": "*** Bug 46639 has been marked as a duplicate of this bug. ***"}, {"count": 4, "text": "\nCleanup: seems this one was committed, but still marked unresolved.", "bug_id": 48071, "is_private": false, "id": 143209, "time": "2011-01-08T18:13:34Z", "creator": "adelmelle@apache.org", "creation_time": "2011-01-08T18:13:34Z", "tags": [], "attachment_id": null}, {"count": 5, "tags": [], "creator": "gadams@apache.org", "attachment_id": null, "id": 155492, "time": "2012-04-01T06:18:59Z", "bug_id": 48071, "creation_time": "2012-04-01T06:18:59Z", "is_private": false, "text": "batch transition to closed; if someone wishes to restore one of these to resolved in order to perform a verification step, then feel free to do so"}]