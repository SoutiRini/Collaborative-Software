[{"count": 0, "tags": [], "creator": "pscott@skycoast.us", "attachment_id": null, "text": "I have source files on an Intel RAID-1 under Windows 7 x64, and target files located on an SMB share.\n\nWhen I change a source file (say a .css file) and run a the copy-changed-files ant target:\n\n    <target name=\"copy-changed-files\" description=\"Copy files to instance\"\n            depends=\"x-check-webapp\">\n        <copy todir=\"${remote.appdir}/css\" verbose=\"true\">\n            <fileset dir=\"css/\" casesensitive=\"yes\">\n                <include name=\"*.css\"/>\n                <include name=\"web/**\"/>\n            </fileset>\n        </copy>\n        ...\n    </target>\n\nthen just that one modified file gets copied over as expected. However, if I then change the file again, and run the copy-changed-files target again, the file does NOT get copied over. It seems that ANT does not recognize the file has changed. If I wait for one to two minutes before saving the modified file again (I have not timed the precision, but I do know it's always at LEAST one minute) then ANT copies the file as expected.\n\nIf I open the project on a Mac running Mavericks or Yosemite (different source (git working-) directory, of course, but EXACTLY the same SMB share), this problem never occurs. Every time I save the file, and run the copy-changed-files ANT target, the file gets copied over. If it doesn't change, then it doesn't get copied.\n\nOften, it is more than one minute (or so) between file saves. But occasionally I will make a \"one-liner\" and attempt to copy the file for testing. Unfortunately, I have to wait. It's maddening.\n\nI've tried disabling caching on the RAID array, but that didn't help. I've tried all reasonable values for granularity from 0 to 1000000, but that didn't help, although higher settings made it worse. I tried moving from Eclipse Kepler (ant 1.8.4) to Eclipse Luna (ant 1.9.2), but that didn't help. Searching the Internet for this issue returned no matching results.\n\nWhen I save the file, and immediately check it's modified timestamp in Windows 7 Explorer, it has the correct time down to the second, and the SMB share also shows timestamps with one-second resolution. So both file systems have the requisite file modification resolution.\n\nI'm at a loss, here.", "id": 178430, "time": "2014-10-14T04:55:35Z", "bug_id": 57086, "creation_time": "2014-10-14T04:55:35Z", "is_private": false}, {"count": 1, "tags": [], "creator": "pscott@skycoast.us", "attachment_id": null, "text": "I should add that the dependent x-check-webapp target:\n\n    <target name=\"x-check-webapp\" unless=\"build.webapp.exists\">\n        <antcall target=\"build-development\"/>\n    </target>\n\nis not the problem, because all the tasks in the copy-changed-files target do, in fact, run.", "id": 178431, "time": "2014-10-14T05:00:34Z", "bug_id": 57086, "creation_time": "2014-10-14T05:00:34Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 57086, "attachment_id": null, "is_private": false, "id": 178454, "time": "2014-10-14T18:33:04Z", "creator": "pscott@skycoast.us", "creation_time": "2014-10-14T18:33:04Z", "text": "Not surprisingly, with the -verbose option, when the copy-changed-files task runs, it reports:\n\nxxx.css omitted as remote\\xxx.css is up to date.\n\nBut it's not."}, {"count": 3, "tags": [], "creator": "pscott@skycoast.us", "attachment_id": null, "text": "I found that granularity=\"-90000\" (with a negative sign) produces better results, in that the file gets copied, but then it gets repeatedly copied until the granularity value expires; it also causes \"modified in the future\" warning message.\n\nBut at least this confirms that file.lastModified() is returning a value that doesn't represent the full granularity of the modified time. The file variable represents a java.o.File object. I am wondering if updating the JVM will fix this problem.", "id": 178459, "time": "2014-10-14T20:13:45Z", "bug_id": 57086, "creation_time": "2014-10-14T20:13:45Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 57086, "attachment_id": null, "id": 178460, "time": "2014-10-14T20:24:49Z", "creator": "pscott@skycoast.us", "creation_time": "2014-10-14T20:24:49Z", "is_private": false, "text": "Nope. I went from jdk 7.0_45 to jdk 8.0_25, and made sure that Eclipse starts under jdk 8.0_25 JVM and that ant starts under the same JVM with a matching tools.jar, but i get the same results on Windows 7. Maddening. Now I'm wondering if this is just the way java.io.File.lastModified() works under Windows; maybe the way the underlying JNI code is written."}, {"count": 5, "attachment_id": null, "bug_id": 57086, "text": "Running the following program against each of the files in question on Windows 7 produces granularity down to the second.\n\nimport static java.lang.System.out;\nimport java.io.File;\nimport java.text.DateFormat;\nimport java.util.Date;\n\nclass main {\n\n    public static void main( String [] args ) {\n\n        if ( args.length > 0 ) {\n            File f = new File(args[0]);\n            if ( f != null ) {\n                DateFormat df = DateFormat.getDateTimeInstance(DateFormat.SHORT,DateFormat.MEDIUM);\n                out.println(\"Last modified: \" + df.format(f.lastModified()));\n            }\n        }\n        return;\n    }\n}", "id": 178465, "time": "2014-10-14T22:27:59Z", "creator": "pscott@skycoast.us", "creation_time": "2014-10-14T22:27:59Z", "tags": [], "is_private": false}, {"count": 6, "tags": [], "creator": "pscott@skycoast.us", "attachment_id": null, "text": "Okay, so knowing that it's not Java and it's not the file systems gave me the clue I needed. It turns out that Windows 7 synchronizes the system clock every 7 days, and the clock was out of sync. I right-clicked on the time in the system tray, and chose \"Adjust date/time\", then chose the \"Internet Time\" tab and clicked on \"Change settings ...\" and then the \"Update now\" button. Problem solved.\n\nI can't believe I spent so much time on this, figuring at first it was an ant bug, and going down that rathole.\n\nA special \"thank you\" for all those who piped up and contributed to this problem record.", "id": 178466, "time": "2014-10-14T22:37:54Z", "bug_id": 57086, "creation_time": "2014-10-14T22:37:54Z", "is_private": false}]