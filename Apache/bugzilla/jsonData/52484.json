[{"count": 0, "tags": [], "text": "I changed my code to use SXSSFWorkbook (no other change) and my footnotes (which I superscript) stopped super-scripting.  It worked in XSSFWorkbook and I'm having to roll back.\n\nThe below code does the super-scripting.  I can send you the Excel files if you need.  Thanks.\n\n\n\n     footnoteFont = wb.createFont();\n     footnoteFontSuper = wb.createFont();\n     footnoteFontSuper.setTypeOffset(Font.SS_SUPER);\n\n...\n\n     String fs = footnoteString.toString();\n     String totalString = header + fs;\n     RichTextString richString = createHelper.createRichTextString(totalString);\n\n     richString.applyFont(header.length(), totalString.length(), footnoteFontSuper);\n     richString.applyFont(0, header.length(), headerFont);\n     cell.setCellValue(richString);", "attachment_id": null, "bug_id": 52484, "id": 152894, "time": "2012-01-18T16:27:13Z", "creator": "gjungman@utilinc.com", "creation_time": "2012-01-18T16:27:13Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 52484, "attachment_id": null, "id": 152940, "time": "2012-01-19T17:26:20Z", "creator": "yegor@dinom.ru", "creation_time": "2012-01-19T17:26:20Z", "is_private": false, "text": "Rich text in SXSSF is not supported. All formatting applies via RichTextString.applyFont() will be lost.\n\nHowever you can style cells as a whole. Create a cell style with a superscript font and pass it to Cell.setCellStyle:\n\nCellStyle style = wb.createStyle();\nstyle.setFont(footnoteFontSuper);\n\n...\n\ncell.setCellStyle(style);\n\n\nYegor"}, {"count": 2, "tags": [], "bug_id": 52484, "attachment_id": null, "id": 152947, "time": "2012-01-19T18:13:45Z", "creator": "gjungman@utilinc.com", "creation_time": "2012-01-19T18:13:45Z", "is_private": false, "text": "Thanks for the reply, Yegor.  \n\nWill it ever be supported?  \n\nYour suggestion wouldn't look like a footnote, as either the entire cell would be superscripted, or the footnotes would float off away from the text in their own superscript column, which defeats the logic behind a super-script.\n\nIn HTML and Java Swing you can superscipt:\n\nMy Row Header <sup>(1)</sup)\nMy Second Row Header\nThird <sup>(2)></sup>"}, {"count": 3, "tags": [], "creator": "jim-apache@spudsoft.co.uk", "attachment_id": null, "text": "Yegor,\nIs it a vast amount of work to get RichText support in SXSSF?\nI can't use SXSSF without it :(\n\nI'm swamped at the moment, but I should be able to give some time to it soon(ish) if you can lay out what needs doing.\nJim", "id": 152948, "time": "2012-01-19T19:18:32Z", "bug_id": 52484, "creation_time": "2012-01-19T19:18:32Z", "is_private": false}, {"count": 4, "tags": [], "text": "It is a conceptual limitation. In a normal Excel file strings are stored in a special file called Shared String Table (SST) and it acts as a cache of strings. Cells don't store string values, instead they store a reference into the SST and two cells holding the same string will have the same reference into the SST.  \nAn alternative way to store strings is inside cell but in this case only plain text can be written. Rich text is supported only in SST.\n\n\nSXSSF is a streaming, forward-only API and it writes data immediately as it is passed to the API. This means that SXSSF  does not cache strings. When a rich text string is passed it is converted into plain text and written as a plain text cell value. I don't see an easy way to improve it.\n\nIf you want all Excel features then give more memory to Java and use XSSF. \n\nP.S. I'm going to reflect it in the documentation. The Spreadsheet API feature summary (http://poi.apache.org/spreadsheet/index.html) should explicitly say that rich text is not supported in SXSSF.\n\n\nYegor\n\n(In reply to comment #2)\n> Thanks for the reply, Yegor.  \n> \n> Will it ever be supported?  \n> \n> Your suggestion wouldn't look like a footnote, as either the entire cell would\n> be superscripted, or the footnotes would float off away from the text in their\n> own superscript column, which defeats the logic behind a super-script.\n> \n> In HTML and Java Swing you can superscipt:\n> \n> My Row Header <sup>(1)</sup)\n> My Second Row Header\n> Third <sup>(2)></sup>", "is_private": false, "id": 152964, "creation_time": "2012-01-20T07:07:53Z", "time": "2012-01-20T07:07:53Z", "creator": "yegor@dinom.ru", "bug_id": 52484, "attachment_id": null}, {"count": 5, "tags": [], "text": "How does the SST differ from the Styles table, which is also maintained in memory and referenced by the streaming SXSSF?\nIn other words, whilst SXSSF obviusly couldn't work if all cells were RichText (because the SST would have to be in memory and SXSSF wouldn't gain you anything) couldn't it still be beneficial if only a minority of the cells are RichText?\n\nWe'd need to have an option to tell SXSSF which way to handle RichText, but for my circumstance it would work (I usually have either huge sheets or fancy sheets, but I don't know which until after I've started outputting them).", "is_private": false, "id": 152968, "creation_time": "2012-01-20T09:30:19Z", "time": "2012-01-20T09:30:19Z", "creator": "jim-apache@spudsoft.co.uk", "bug_id": 52484, "attachment_id": null}, {"count": 6, "tags": [], "text": "In theory we can stream SST too. In this case it wouldn't be a cache of strings - we will simply write out strings and set the SST index in the cell. \n\nIt is not trivial and will take some time to implement. The starting point is SSTDataWriter which will convert rich text to xml and write into a temp file. The implementation should be similar to SheetDataWriter which does this job for cells and rows. SSTDataWriter  should keep track of the last written index and total number of entries in the SST. \n\nNext we will tweak SXSSF to delegate string data to SSTDataWriter and update the SST index in the cell.   \n\nThis is something to plan for POI-3.9. Until we release 3.8-final I would stay on the safe side and keep SXSSF as it is. \n\nYegor\n\n(In reply to comment #5)\n> How does the SST differ from the Styles table, which is also maintained in\n> memory and referenced by the streaming SXSSF?\n> In other words, whilst SXSSF obviusly couldn't work if all cells were RichText\n> (because the SST would have to be in memory and SXSSF wouldn't gain you\n> anything) couldn't it still be beneficial if only a minority of the cells are\n> RichText?\n> \n> We'd need to have an option to tell SXSSF which way to handle RichText, but for\n> my circumstance it would work (I usually have either huge sheets or fancy\n> sheets, but I don't know which until after I've started outputting them).", "is_private": false, "id": 152970, "creator": "yegor@dinom.ru", "time": "2012-01-20T11:06:46Z", "bug_id": 52484, "creation_time": "2012-01-20T11:06:46Z", "attachment_id": null}, {"count": 7, "tags": [], "text": "There's a solution posted to bug 57401 that implements a Shared Strings Table in a memory heap backed by a database on disk (MapDB). This would hopefully allow the storage of RichTextStrings in a memory-efficient way (at the cost of speed). It's be a good idea to let the user pick the strings storage mechanism so they can make POI meet their needs.", "is_private": false, "id": 186658, "creation_time": "2015-11-30T09:53:29Z", "time": "2015-11-30T09:53:29Z", "creator": "onealj@apache.org", "bug_id": 52484, "attachment_id": null}]