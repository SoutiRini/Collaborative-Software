[{"count": 0, "tags": [], "creator": "ross.heritage@gmail.com", "attachment_id": null, "is_private": false, "id": 91379, "time": "2006-07-18T10:57:45Z", "bug_id": 40064, "creation_time": "2006-07-18T10:57:45Z", "text": "The last modified date stored in r->mtime is of type apr_int64_t. \n\nWhen this is used to build up the ETag in modules/http/http_protocol.c (in \nap_make_etag), this variable is cast to an unsigned long prior to the \nconverion to hex.\n\nnext = etag_ulong_to_hex(next, (unsigned long)r->mtime);\n\nOn a 32-bit architecture, this loses the first 32-bits of the number, so the \nresulting hex string is only 8 characters long, and does not accuratly reflect \nthe last-modified time.\n\nOn a 64-bit architecture, the cast retains all 64 bits (or more likely its \ncasting a 128-bit number down to 64-bits), so the resulting hex value is \ncorrect.\n\nThis is a big problem for us at the BBC as we now have a mixture of 32-bit and \n64-bit machines (AMD Opteron vs. Intel Xeon).\n\nThe problem also seems to exist in the latest Apache 2.2 build, although the \nETag code has been extracted to the file modules/http/http_etag.c\n\nSuggested fix:\n\nChange the etag_ulong_to_hex function so that it only ever pushes the last 8 \nhex characters on to *next. This is not ideal, as the resulting hex is not \nrepresentative of the last-modified date, but I would be surprised if this \nwere to bite anyone."}, {"count": 1, "tags": [], "bug_id": 40064, "attachment_id": null, "id": 91390, "time": "2006-07-18T14:41:57Z", "creator": "jorton@redhat.com", "creation_time": "2006-07-18T14:41:57Z", "is_private": false, "text": "Changing etag_ulong_to_hex() to use an apr_uint64_t and dropping the casts would\nbe a better fix, I think."}, {"count": 2, "tags": [], "bug_id": 40064, "text": "Either way, I've ran into this myself before.  Don't suppose anyone wants to\nwrite a patch :) ?", "id": 91418, "time": "2006-07-19T17:08:54Z", "creator": "chip@force-elite.com", "creation_time": "2006-07-19T17:08:54Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 40064, "attachment_id": 18635, "is_private": false, "id": 91548, "time": "2006-07-24T17:00:34Z", "creator": "jorton@redhat.com", "creation_time": "2006-07-24T17:00:34Z", "text": "Created attachment 18635\npatch to use apr_uint64_t for etags\n\nHere's a quick patch to always use 64-bit integers in etag generation.\tTested\nonly to compile and produce etags on x86_64, not tried a 32-bit platform or\nanything more thorough."}, {"count": 4, "tags": [], "text": "*** Bug 41095 has been marked as a duplicate of this bug. ***", "is_private": false, "bug_id": 40064, "id": 96458, "time": "2006-12-01T07:56:13Z", "creator": "jorton@redhat.com", "creation_time": "2006-12-01T07:56:13Z", "attachment_id": null}, {"count": 5, "tags": [], "creator": "jorton@redhat.com", "attachment_id": null, "text": "Committed: http://svn.apache.org/viewvc?view=rev&rev=517238 - thanks for the report.\n\nI'm not sure whether it would be a good idea to merge this into 2.2.x; it could\nbreak working 32-bit-only shops by having different 2.2.x releases generate\ndifferent etags across a server farm.", "id": 100308, "time": "2007-03-12T08:15:52Z", "bug_id": 40064, "creation_time": "2007-03-12T08:15:52Z", "is_private": false}, {"count": 6, "tags": [], "bug_id": 40064, "text": "Note that the patch attached here was incomplete; the subsequent fix is also needed:\n\nhttp://svn.apache.org/viewvc?view=rev&rev=517654", "id": 107537, "time": "2007-08-31T04:56:08Z", "creator": "jorton@redhat.com", "creation_time": "2007-08-31T04:56:08Z", "is_private": false, "attachment_id": null}, {"count": 7, "tags": [], "bug_id": 40064, "attachment_id": null, "is_private": false, "id": 111582, "time": "2007-12-08T09:02:05Z", "creator": "rpluem@apache.org", "creation_time": "2007-12-08T09:02:05Z", "text": "Backported to 2.2.x as r602503 (http://svn.apache.org/viewvc?rev=602503&view=rev)."}]