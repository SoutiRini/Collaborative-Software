[{"count": 0, "tags": [], "text": "Created attachment 21804\nFO to reproduce bug.\n\npage-number-citation-last does not work with fo:inline (page 1 and 3, no value)\npage-number-citation works partially with fo:inline (page 1, no value)\npage-number-citation-last works partially with fo:block (page 1, wrong value)", "attachment_id": 21804, "bug_id": 44794, "id": 115489, "time": "2008-04-10T01:20:32Z", "creator": "guillaume.levrero@free.fr", "creation_time": "2008-04-10T01:20:32Z", "is_private": false}, {"count": 1, "tags": [], "text": "Apologies for the delay.\n\nNote to self / other devs:\nPart of the issue was already known: \nID resolution does not take into account whether the LM that added the area is already finished, for page-number-citation-last.\n\nFor the failing page-number-citation on fo:inline, page 1:\nIIC, id resolution also does not account for inline areas that will be added to the page later. The citation itself generates an unresolved area, but the actual id gets added later and marked resolved, before the page is finished.", "attachment_id": null, "id": 116392, "creator": "adelmelle@apache.org", "time": "2008-05-08T15:29:04Z", "bug_id": 44794, "creation_time": "2008-05-08T15:29:04Z", "is_private": false}, {"count": 2, "tags": [], "creator": "adelmelle@apache.org", "attachment_id": null, "id": 116395, "time": "2008-05-08T16:49:05Z", "bug_id": 44794, "creation_time": "2008-05-08T16:49:05Z", "is_private": false, "text": "Note: just discovered that there is currently also a slight inefficiency in the way inline ids are added to the page. addId() gets called for every line spanned by the inline.\nWill need to look into how we can avoid that, since the page viewport list in idTracker fills up with duplicates, and only the first one gets removed upon resolution...\n\nI've just committed a temporary hack to at least avoid the creation of duplicates in the List."}, {"count": 3, "tags": [], "text": "\nFurther notes:\nIn the related code, there's some preparations for resolving the page-number-citation-last correctly, but the problem is that this depends on calls to notifyEndOfLayout().\n\nNow, checking for blocks, that call gets made with every addAreas() call. Still have to figure out whether this was intended or necessary for some reason, but currently this means that the IDTracker mistakenly gets the impression that the LMs are finished on every page they add areas to.\n\nFor inlines, this method is not used yet, but if we would go about it the same way as for blocks, notifyEndOfLayout() would be called for each line.\n\nThe isFinished() method also cannot be used, since for nearly all LMs this is used to indicate whether they are finished 'generating the element list for their content'.", "attachment_id": null, "bug_id": 44794, "id": 116414, "time": "2008-05-09T02:40:02Z", "creator": "adelmelle@apache.org", "creation_time": "2008-05-09T02:40:02Z", "is_private": false}, {"count": 4, "attachment_id": null, "bug_id": 44794, "is_private": false, "id": 116415, "time": "2008-05-09T02:47:08Z", "creator": "jeremias@apache.org", "creation_time": "2008-05-09T02:47:08Z", "tags": [], "text": "(In reply to comment #3)\n> Further notes:\n> In the related code, there's some preparations for resolving the\n> page-number-citation-last correctly, but the problem is that this depends on\n> calls to notifyEndOfLayout().\n> \n> Now, checking for blocks, that call gets made with every addAreas() call. Still\n> have to figure out whether this was intended or necessary for some reason, but\n> currently this means that the IDTracker mistakenly gets the impression that the\n> LMs are finished on every page they add areas to.\n\nThis is wrong, not intended. I guess the is-first/is-last traits (from the spec) need to be introduced on the area tree to handle that properly.\n\n<snip/>\n"}, {"count": 5, "tags": [], "creator": "adelmelle@apache.org", "attachment_id": null, "id": 116419, "time": "2008-05-09T04:25:53Z", "bug_id": 44794, "creation_time": "2008-05-09T04:25:53Z", "is_private": false, "text": "\nThanks for the confirmation.\n\nIn the meantime, I succeeded in getting the resolution for blocks correct, by modifying BlockLM.addAreas().\n\nInstead of simply 'notifyEndOfLayout()', I added:\n\nif (this.isLast(lastPos)) {\n  notifyEndOfLayout();\n}\n\n'lastPos' is set a bit higher up to the last position returned by the position-iterator.\n\nThis seems to do the trick.\n\nNow, I'm a bit wary of adding the same check to /all/ related LMs (code-duplication), so will try to implement it in a way that this can be handled by the superclass BlockStackingLM. That way, the problem can be solved for all the related LMs in one go.\nImplementing it in AbstractLM could, at the same time, solve the problem for inlines.\n\nSomething like:\n\nAbstractLayoutManager.checkEndOfLayout(Position pos) {\n  if (this.isLast(lastPos) {\n    notifyEndOfLayout();\n  }\n}\n\nwhich can then be called by the subclasses, instead of directly calling notifyEndOfLayout()."}, {"count": 6, "tags": [], "text": "\nMore notes:\n* page-number-citation seems to suffer the same limitations for block-container as for inline. If the citation ends up on the same page, the id resolution for the first page somehow doesn't get triggered. On subsequent pages spanned by the block-container, everything works fine.\n\n* block-container has the added difficulty of having to deal with border- and spacing-elements coming from the childLMs. BlockContainerLM no longer gets to see those positions when its addAreas() is called the last time. If it generates a list of 39 positions, the last two will be border and spacing for the last childLM, but those will not be included in the position iterator that is passed to addAreas(). As a result, the isLast() test will always return false in this case.\n\nMisleading javadoc for isLast(), I think:\n\n  /**\n     * Indicates whether the given Position is the last area-generating Position of this LM.\n\nBut a border- or spacing-position does not really generate any areas. Rather, they belong to an area.\n\nWill need to check that as well, since the isLast() condition is also used to determine whether the markers associated with an area qualify for the retrieve-position of retrieve-marker.", "attachment_id": null, "bug_id": 44794, "id": 116420, "time": "2008-05-09T06:14:19Z", "creator": "adelmelle@apache.org", "creation_time": "2008-05-09T06:14:19Z", "is_private": false}, {"count": 7, "tags": [], "creator": "adelmelle@apache.org", "attachment_id": null, "is_private": false, "id": 116421, "time": "2008-05-09T06:50:47Z", "bug_id": 44794, "creation_time": "2008-05-09T06:50:47Z", "text": "(In reply to comment #6)\n> More notes:\n> * page-number-citation seems to suffer the same limitations for block-container\n> as for inline. If the citation ends up on the same page, the id resolution for\n> the first page somehow doesn't get triggered. On subsequent pages spanned by\n> the block-container, everything works fine.\n\nStrike that. This was caused by the changes I had already done locally. The reason for this is precisely that the isLast() condition fails, and so notifyEndOfLayout() was not called anymore...\n\nIt seems we could do with a distinction between lastGeneratedPosition and lastGeneratedBorderPaddingSpacePosition... well, something like that ;-P\n\n(TBC)"}, {"count": 8, "tags": [], "text": "\nFixed in FOP Trunk\n\nsee: http://svn.apache.org/viewvc?rev=654946&view=rev\n\nA surprisingly simple fix in the end... I'll see if this can be included in 0.95 final too, if nobody minds.\n\nSupport for page-number-citations is far from complete, but I'm closing this issue since it was restricted to block and inline, which now work OK.\n\nThanks for reporting!", "is_private": false, "bug_id": 44794, "id": 116436, "time": "2008-05-09T14:45:26Z", "creator": "adelmelle@apache.org", "creation_time": "2008-05-09T14:45:26Z", "attachment_id": null}, {"count": 9, "tags": [], "text": "batch transition pre-FOP1.0 resolved+fixed bugs to closed+fixed", "is_private": false, "bug_id": 44794, "id": 156134, "time": "2012-04-01T07:00:26Z", "creator": "gadams@apache.org", "creation_time": "2012-04-01T07:00:26Z", "attachment_id": null}]