[{"count": 0, "tags": [], "bug_id": 20416, "attachment_id": null, "id": 38170, "creation_time": "2003-06-02T13:35:26Z", "time": "2003-06-02T13:35:26Z", "creator": "rbb@apache.org", "text": " ", "is_private": false}, {"count": 1, "tags": [], "creator": "rbb@apache.org", "attachment_id": null, "id": 38171, "time": "2003-06-02T13:37:12Z", "bug_id": 20416, "creation_time": "2003-06-02T13:37:12Z", "is_private": false, "text": "hit ennter when I should have hit tab.\n\napr_file_eof is supposed to return true if the end of the file has been hit.  It\nalways does so on Unix.  But, on Windows, it only works if the file was opened\nfor binary reading.  There is no mention in the docs that it is only available\nfor binary files though."}, {"count": 2, "tags": [], "bug_id": 20416, "attachment_id": null, "id": 80689, "time": "2005-10-03T05:28:02Z", "creator": "ksharenkov@yandex.ru", "creation_time": "2005-10-03T05:28:02Z", "is_private": false, "text": "(In reply to comment #0)\n\nSeems I found the problem \n\nIn function apr_file_read never checks for APR_EOF in unbuffered branch\nSo the thefile->eof_hit if not been set properly\n\nI have send the patch to dev@apr.apache.org\nfor version 1.2.X\n\n--- readwrite-old.c\t2005-10-02 13:51:15.703125000 +0700\n+++ readwrite.c\t2005-10-02 13:52:16.546875000 +0700\n@@ -206,6 +206,8 @@\n         /* Unbuffered i/o */\n         apr_size_t nbytes;\n         rv = read_with_timeout(thefile, buf, *len, &nbytes);\n+        if (rv == APR_EOF)\n+            thefile->eof_hit = TRUE;\n         *len = nbytes;\n     }\n "}, {"count": 3, "tags": [], "creator": "rooneg@electricjellyfish.net", "text": "This patch was committed in r355790.", "id": 83531, "time": "2005-12-11T00:59:40Z", "bug_id": 20416, "creation_time": "2005-12-11T00:59:40Z", "is_private": false, "attachment_id": null}]