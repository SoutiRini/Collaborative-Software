[{"count": 0, "attachment_id": null, "creator": "agi20dla@gmail.com", "text": "In log4j 1.2.16, if the final existing path element in the properties key log4J.appender.<FILE>.File is not writable, a StackOverflowError will occur.\n\nBegin projectLog4j.properties file\nNote: trace was only set while trying to track down the problem\n-----------------------------------\n# Default log level\nlog4j.rootCategory=trace, FILE\n\nlog4j.appender.console=org.apache.log4j.ConsoleAppender\nlog4j.appender.console.layout=org.apache.log4j.PatternLayout\nlog4j.appender.console.layout.ConversionPattern=%m%n\n\n################################################\n# You can set custom log levels per-package here\n################################################\n\n# Apache Commons tend to make a lot of noise which can clutter the log.\nlog4j.logger.org.apache=WARN\n\n# Your custom classes\nlog4j.logger.com.my.company.package1=trace,FILE\nlog4j.logger.com.my.company.package2=trace,FILE\nlog4j.additivity.com.my.company.package2=false\nlog4j.logger.com.my.co.package1=trace,FILE\nlog4j.additivity.my.co.package1=false\n\nlog4j.appender.FILE=org.apache.log4j.RollingFileAppender\nlog4j.appender.FILE.File=<LOG_FILE_PATH>\nlog4j.appender.FILE.MaxFileSize=50MB\nlog4j.appender.FILE.MaxBackupIndex=3\nlog4j.appender.FILE.layout=org.apache.log4j.PatternLayout\nlog4j.appender.FILE.layout.ConversionPattern=%-5p %d [%t] %c: %m%n\n\n---------------------------------------------\nEnd projectLog4j.properties file:\n\nExamples:\n\n1.\nSetup: \n<LOG_FILE_PATH> = /tmp/can/make/log/here.log\n\n/tmp exists and has normal permissions of 7777.  None of the other directories or the log file (here.log) exist.\n\nResult: \nlog file will be created and written to with no problems.\n\n\n2.\nSetup:\n<LOG_FILE_PATH> = /tmp/root/SOE.log\n\n/tmp exists and has normal permissions of 7777.  /tmp/root exists, is owned by root:root, and has permissions of 755.  SOE.log does not exist.\n\nResult: \njava.lang.StackOverflowError\n\tat java.io.PrintStream.write(PrintStream.java:523)\n\tat java.io.PrintStream.print(PrintStream.java:669)\n\tat java.io.PrintStream.println(PrintStream.java:806)\n\tat org.apache.log4j.helpers.LogLog.error(LogLog.java:129)\n\tat org.apache.log4j.AppenderSkeleton.doAppend(AppenderSkeleton.java:232)\n\tat org.apache.log4j.helpers.AppenderAttachableImpl.appendLoopOnAppenders(AppenderAttachableImpl.java:66)\n\tat org.apache.log4j.Category.callAppenders(Category.java:206)\n\tat org.apache.log4j.Category.forcedLog(Category.java:391)\n\tat org.apache.log4j.Category.log(Category.java:838)\n\tat org.apache.log4j.contribs.LoggingOutputStream.flush(LoggingOutputStream.java:199)\n\tat java.io.PrintStream.write(PrintStream.java:482)\n\tat sun.nio.cs.StreamEncoder.writeBytes(StreamEncoder.java:221)\n\tat sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:282)\n\tat sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125)\n\tat java.io.OutputStreamWriter.write(OutputStreamWriter.java:207)\n\tat java.io.BufferedWriter.flushBuffer(BufferedWriter.java:129)\n\tat java.io.BufferedWriter.write(BufferedWriter.java:230)\n\tat java.io.Writer.write(Writer.java:157)\n\n3.\nSetup:\n<LOG_FILE_PATH> = /tmp/root/SOE.log\n\n/tmp exists and has normal permissions of 7777.  /tmp/root exists, is owned by root:root, and has permissions of 755.  SOE.log exists and has permissions of 666\n\nResult: \nLog is written to with no problems.", "id": 175908, "time": "2014-06-19T13:40:06Z", "bug_id": 56646, "creation_time": "2014-06-19T13:40:06Z", "tags": [], "is_private": false}, {"attachment_id": null, "tags": [], "bug_id": 56646, "text": "Also happens with 1.2.17", "count": 1, "id": 175909, "time": "2014-06-19T13:47:18Z", "creator": "agi20dla@gmail.com", "creation_time": "2014-06-19T13:47:18Z", "is_private": false}, {"count": 2, "tags": [], "creator": "agi20dla@gmail.com", "attachment_id": null, "text": "Here is the java code where the problem was identified:\n\npublic myFunction(String contextFile, String logconfig) {\n    try {\n      System.out.println(\"Starting using log config: \" + logconfig);\n      PropertyConfigurator.configure(new URL(logconfig));\n    } catch (Exception e) {\n      System.out.println(\"Log configuration failed, using defaults\");\n      BasicConfigurator.configure();\n    }\n    ...\n}", "id": 175910, "time": "2014-06-19T14:30:25Z", "bug_id": 56646, "creation_time": "2014-06-19T14:30:25Z", "is_private": false}]