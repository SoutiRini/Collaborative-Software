[{"count": 0, "tags": [], "bug_id": 34595, "attachment_id": null, "id": 74047, "time": "2005-04-23T23:37:33Z", "creator": "phyre@rogers.com", "creation_time": "2005-04-23T23:37:33Z", "is_private": false, "text": "Example (using Google)\n\nhttp://192.87.106.226/ <-- returns google's web page\nhttp://3226954466/ <-- returns 400 error\n\nThe error log states 'Client sent malformed Host header', though 'Host: 1234567'\nor with any integer is perfectly valid, in the same way that 'Host:\n192.87.106.225' is considered valid.\n\nNote that this is accepted in Apache 1.3, but not in Apache 2.0."}, {"count": 1, "tags": [], "bug_id": 34595, "attachment_id": null, "id": 74051, "time": "2005-04-24T04:40:39Z", "creator": "slive@apache.org", "creation_time": "2005-04-24T04:40:39Z", "is_private": false, "text": "Actually, RFC2396 seems pretty clear that that is not a valid way of expressing \nan IP addresses, and that is the spec followed by HTTP/1.1:\nIPv4address   = 1*digit \".\" 1*digit \".\" 1*digit \".\" 1*digit\n\nI'm not sure why you would ever want to use that either.  The only time I've \nseen it used is spammers trying to hide their true location."}, {"count": 2, "tags": [], "bug_id": 34595, "text": "Didn't check the RFC.  Was just trying to cover my basis thinking of the\ndifferent ways to get to the server.  If it's in the RFC, it's not a bug. \nApologies.\n-M", "id": 74052, "time": "2005-04-24T07:22:11Z", "creator": "phyre@rogers.com", "creation_time": "2005-04-24T07:22:11Z", "is_private": false, "attachment_id": null}]