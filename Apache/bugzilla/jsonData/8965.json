[{"count": 0, "tags": [], "bug_id": 8965, "attachment_id": null, "is_private": false, "id": 15875, "time": "2002-05-10T06:14:54Z", "creator": "memmel2@yahoo.com", "creation_time": "2002-05-10T06:14:54Z", "text": "Hello all I was happliy using ant until I wanted to put they build file\non a web server ( so only one set created ). I realized that throughout Ant\nFile is used to access the build files not URL. I see no reason that \nthese cannot be accessed using URL as not files. I'd be willing to\nhelp change all File access to URL's if theres no objections."}, {"count": 1, "tags": [], "creator": "steve_l@iseran.com", "is_private": false, "text": "This is a wontfix. It's too complex. When I run ant -f \nhttp://someserver/build.xml are you expecting the build file to run in the \ndirectory on the remote system; or in your local dir (which is at odds with \nthe normal ant -f ../build.xml semantics. \n\nyou should be using some form of SCM to share stuff, or have a preloader ant \nfile which uses <get> to pull down your core build file. \n\n", "id": 15973, "time": "2002-05-13T05:29:33Z", "bug_id": 8965, "creation_time": "2002-05-13T05:29:33Z", "attachment_id": null}, {"count": 2, "tags": [], "creator": "memmel2@yahoo.com", "is_private": false, "text": "No its not too complex the problem is you need to seperate the two concepts\none ant needs to know where to find the build file or files second ant needs to\nknow where to find the \"source\" its compiling. Its simply tradition that the\nbuild files are relative to the source code location not a requirment.\nGiven the option to have a \"src\" root and a build  root then you could easily\nhave the more complex behiavor. Obviosily you would default to the traditional\nbehavior unless the build files are coming from disjoint location. \n\nI think that allowing seperation of the build file structure from the source\nis a good thing the build files do not need to be relative to the src this has\nnothing to do per se with URL's although its required for this.\n\nThats problem 1.\n\nThis would mean \n\nant -f http://someserver/build.xml -src ../\n\nthus \n\nant -f ../build.xml \n\nis the same as\n\nant -f ../build.xml -src ../\n\n\n\nNext to run the Builds you should be able to use URL/URLConnection \n\nor better a Wrapper class that can use Files or URL's internally etc.\nThis would basically be equivilent to Java's ResourceBundles.\n\nThis would allow ant to handle non-file resources.\n\nAs far as I can tell ant intself only needs to know if a resource has been\nmodified and a way to pass the URL to the resource off to the tools.\n\nSure the Tools or tasks may only understand files but ant itself could be coded\nto use generic URI's IMHO.\n\nTheres no intrinsic reason for java javah javac etc to use files instead of\nURI's and no reason for ant to fall under this restriction. \n\nIn fact and ant task could indeed perform a \"get\" too the local file system as a\nwrapper around old-fashioned  tools as you suggested. I'm just saying that Ant\nitself and a lot of the generic tasks can be coded to use URL's.\nThis actually brings up another issue there is no generic support for a temp\ndirectory or temp files. There should be a basic tasks to make temp directory\nand file names. The production of temporary files is fairly common during\nbuilds.\n\nAnyway I've started work on removing the File depedencies inside ant and moving\nto URL's if it all works out I'll send it back to you guys. If I can get ant non\nfile dependent I can look at wrapper tasks which will allow you to use a\n\"URLize\" a file dependent tool.\n", "id": 16279, "time": "2002-05-17T00:32:52Z", "bug_id": 8965, "creation_time": "2002-05-17T00:32:52Z", "attachment_id": null}]