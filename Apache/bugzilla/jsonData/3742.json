[{"count": 0, "tags": [], "bug_id": 3742, "attachment_id": null, "id": 5805, "time": "2001-09-20T00:34:15Z", "creator": "dvm@pochta.net", "creation_time": "2001-09-20T00:34:15Z", "is_private": false, "text": "There is a problem. Here is results of profiling of JDBC application:\n\nmethod name / calls / cumulative time (percent of application time) / method \ntime\n\nCategory.isDebugEnabled()\t4693806\t97040 (  1,6%)\t42932 (  0,7%)\nCategory.getChainedPriority()\t7255143\t61008 (  1,0%)\t61008 (  1,0%)\nCategory.isEnabledFor(Priority)\t2543571\t48540 (  0,8%)\t24095 (  0,4%)\n\n\n      calls \\   time \\% of method\n494                                 public \n495                                 Priority getChainedPriority() {\n496\t19175446  22502 ( 39,4%)  \t  for(Category c = this; c != null; \nc=c.parent) {\n497\t19175446  22112 ( 38,7%)  \t    if(c.priority != null) \n498\t7255143   12468 ( 21,8%)  \t      return c.priority;\n499                                   }\n500                                   return null; // If reached will cause an \nNullPointerException.\n501                                 }\n\n\nRuntime priority switching is rare operation, may be it more respective to \nstore the chained priority in each category (39.4% + 38.7% off)?"}, {"count": 1, "text": "Vladislav,\n\nThanks for the information. I am aware of the issue. However, it is not \npossible to solve it easily and efficiently. At least I do not know how to. I \nam willing to review any code that you might wish to supply. Regards, Ceki", "creator": "ceki@apache.org", "attachment_id": null, "id": 5850, "time": "2001-09-20T14:52:39Z", "bug_id": 3742, "creation_time": "2001-09-20T14:52:39Z", "tags": [], "is_private": false}]