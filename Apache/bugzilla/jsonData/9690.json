[{"count": 0, "attachment_id": null, "creator": "funkman@joedog.org", "text": "Summary:\norg.apache.catalina.connector.HttpRequestBase.parseParameters() might inifinite\nloop with POST data.\n\nBACKGROUND:\nWe use apache 1.3 + tomcat 4.0.2 (Ajp13Connector).\nWe run 2 apache instances and 4 tomcat instances. Occasionally we see an httpd\nprocess begin to *hog* cpu and not stop trying to hog cpu until httpd is\nrestarted. Over time, another httpd process will reach this state until too much\ncpu is wasted on the bad httpd processes and a restart of apache is needed.\nDuring this time - one (or more) of the java processes will also begin to hog\ncpu. This is event does not happen quickly - it usually takes a week or so to\nreach a state where a restart is needed. \nLooking at MRTG graphs - we see *lots* of network activity appear (and\ndisappear) with the start of the problem and subsequent restart of httpd.\nI performed some thread dumps of the java process. And noticed that there were 2\nthreads consistently stuck in a similar stack trace. (Over the course of a 45\nminute investigation of several thread dumps of the same java process).\n\nDigging into the stack trace - I see that that the *runaway* threads are\nswitching between suspended/runnable and their method calls are socketRead and\nsocketWrite. \n\nI belive what is happening is an infinite loop in\nHttpRequestBase.parseParameters(). Here is the the offending snippet, lines 639-647:\n    int max = getContentLength();\n    int max = getContentLength();\n    int len = 0;\n    byte buf[] = new byte[getContentLength()];\n    ServletInputStream is = getInputStream();\n    while (len < max) {\n        int next = is.read(buf, len, max - len);\n        len += next;\n    }\n== end sippet ==\n\nI believe is.read is allowed to return 0 or a negative number. If that is true -\nthen the loop never finishes - possibly causing the issues I am seeing. It seems\noccasionally for some reason - the POSTing of data from apache to tomcat seems\nto be failing but the not serious enough to warrant an IOException.\n\nUnfortuneately - I have not yet been able reproduce this in a lab environment\nyet. I only see this issue occur in a production environment.\n\nIf anyone can validate this - I may be able to provide a patch.\n\nHere is one of the stack traces (that the thread is stuck in):\n\"Ajp13Processor[12009][56]\" daemon prio=9 tid=0x0143da98 nid=318 lwp_id=29393\nrunnable [0x6edc1000..0x6edbf478]\n\tat java.net.SocketOutputStream.socketWrite(Native Method)\n\tat java.net.SocketOutputStream.write(Unknown Source)\n\tat org.apache.ajp.Ajp13.send(Ajp13.java:525)\n\tat org.apache.ajp.RequestHandler.refillReadBuffer(RequestHandler.java:700)\n\tat org.apache.ajp.RequestHandler.doRead(RequestHandler.java:645)\n\tat org.apache.ajp.Ajp13.doRead(Ajp13.java:354)\n\tat org.apache.ajp.tomcat4.Ajp13InputStream.read(Ajp13InputStream.java:99)\n\tat\norg.apache.catalina.connector.HttpRequestBase.parseParameters(HttpRequestBase.java:644)\n\tat\norg.apache.catalina.connector.HttpRequestBase.getParameterMap(HttpRequestBase.java:695)\n\tat\norg.apache.catalina.connector.RequestFacade.getParameterMap(RequestFacade.java:175)\n\tat\norg.apache.catalina.core.ApplicationHttpRequest.setRequest(ApplicationHttpRequest.java:523)\n\t- locked <0x7733f990> (a java.util.HashMap)\n\tat\norg.apache.catalina.core.ApplicationHttpRequest.<init>(ApplicationHttpRequest.java:126)\n\tat\norg.apache.catalina.core.ApplicationDispatcher.wrapRequest(ApplicationDispatcher.java:918)\n\tat\norg.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:547)\n\tat\norg.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:497)\n\tat org.apache.jasper.runtime.JspRuntimeLibrary.include(JspRuntimeLibrary.java:819)\n\tat org.apache.jsp.prod_0005flist$jsp._jspService(prod_0005flist$jsp.java:96)\n\tat org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:107)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:853)\n\tat\norg.apache.jasper.servlet.JspServlet$JspServletWrapper.service(JspServlet.java:202)\n\tat org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:382)\n\tat org.apache.jasper.servlet.JspServlet.service(JspServlet.java:474)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:853)\n\tat\norg.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:247)\n\tat\norg.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:193)\n\tat com.armstrong.j2ee.filter.AWICookieFilter.doFilter(AWICookieFilter.java:78)\n\tat\norg.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:213)\n\tat\norg.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:193)\n\tat\norg.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:243)\n\tat org.apache.catalina.core.StandardPipeline.invokeNext(StandardPipeline.java:566)\n\tat org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:472)\n\tat org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:943)\n\tat\norg.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:190)\n\tat org.apache.catalina.core.StandardPipeline.invokeNext(StandardPipeline.java:566)\n\tat org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:472)\n\tat org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:943)\n\tat org.apache.catalina.core.StandardContext.invoke(StandardContext.java:2343)\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:180)\n\tat org.apache.catalina.core.StandardPipeline.invokeNext(StandardPipeline.java:566)\n\tat\norg.apache.catalina.valves.ErrorDispatcherValve.invoke(ErrorDispatcherValve.java:170)\n\tat org.apache.catalina.core.StandardPipeline.invokeNext(StandardPipeline.java:564)\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:170)\n\tat org.apache.catalina.core.StandardPipeline.invokeNext(StandardPipeline.java:564)\n\tat org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:468)\n\tat org.apache.catalina.core.StandardPipeline.invokeNext(StandardPipeline.java:564)\n\tat org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:472)\n\tat org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:943)\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:174)\n\tat org.apache.catalina.core.StandardPipeline.invokeNext(StandardPipeline.java:566)\n\tat org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:472)\n\tat org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:943)\n\tat org.apache.ajp.tomcat4.Ajp13Processor.process(Ajp13Processor.java:429)\n\tat org.apache.ajp.tomcat4.Ajp13Processor.run(Ajp13Processor.java:495)\n\tat java.lang.Thread.run(Unknown Source)", "id": 17399, "time": "2002-06-07T11:47:20Z", "bug_id": 9690, "creation_time": "2002-06-07T11:47:20Z", "tags": [], "is_private": false}, {"text": "This bug was fixed 4/9/2002.\nThe latest 4.0.4 Beta 3 and 4.1.3 Beta versions of Tomcat\nwere built after this bug was fixed.  Upgrading should\nfix the problem.", "tags": [], "creator": "glenn@apache.org", "attachment_id": null, "count": 1, "id": 17406, "time": "2002-06-07T15:07:56Z", "bug_id": 9690, "creation_time": "2002-06-07T15:07:56Z", "is_private": false}]