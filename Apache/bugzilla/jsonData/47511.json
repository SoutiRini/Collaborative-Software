[{"count": 0, "tags": [], "bug_id": 47511, "attachment_id": null, "is_private": false, "id": 128756, "time": "2009-07-11T20:24:06Z", "creator": "willmcqueen@yahoo.com", "creation_time": "2009-07-11T20:24:06Z", "text": "JMeter's BSF Sampler is broken when used with Jython.\n\nSteps:\n1) Drop the att'd \"jython-standalone-2.5.0.jar\" file into JMeter's lib dir (or create one yourself from www.jython.org).\n2) Create a new JMeter test plan\n3) Add a ThreadGroup\n4) Add a BSF Sampler under that ThreadGroup. In the Sampler, choose \"Scripting language: jython\". Then in the large text box at the bottom (under \"Script to run\"), type:\n     print 7\n5) Add a View Results Tree listener to the ThreadGroup\n6) Run the test plan\n7) In the View Results Tree, go to the <Sampler result> tab. Notice the error:\n   Sample Count: 1\n   Error Count: 1\n   Response code: 500\n   Response message: org.apache.bsf.BSFException: exception from Jython:\n   SyntaxError: (\"no viable alternative at input 'print'\", ('<string>', 1, 0, 'print 7\\n'))\n7) Now also add a BSF PreProcessor (to the same ThreadGroup) with \"Language: jython\" and the big text box filled with:\n     print 8\n8) Run the test plan. Notice that although the BSF Sampler failed, running Jython in the BSF PreProcessor works fine. You'll see \"8\" printed in stdout.\n\nVersions:\n1) JMeter version = 2.3.4 (BugZilla dropdown menu doesn't have option for 2.3.4, so  I had to choose 2.3.3)\n2) Jython version = 2.5 (standalone jar)\n\nPlease help! :-)\n\nCheers,\nWill"}, {"count": 1, "tags": [], "bug_id": 47511, "attachment_id": 23960, "id": 128757, "time": "2009-07-11T20:28:40Z", "creator": "willmcqueen@yahoo.com", "creation_time": "2009-07-11T20:28:40Z", "is_private": false, "text": "Created attachment 23960\nReproduces the Jython Sampler Failure. You'll need to drop a standalone Jython 2.5 jar into JMeter's lib dir."}, {"count": 2, "tags": [], "creator": "sebb@apache.org", "attachment_id": null, "id": 129182, "time": "2009-07-27T10:17:26Z", "bug_id": 47511, "creation_time": "2009-07-27T10:17:26Z", "is_private": false, "text": "I think there are two problems here:\n\n1) BSF 2.4.0 was coded against Jython 2.1. It seems that some later releases are not compatible.\n\n2) Ambiguity over what constitutes an \"eval\" script in BSF.\n\nIf you use Jython 2.1, the sampler will work provided that the script is a Jython expression, such as \"5\" or \"6+7\"."}, {"count": 3, "tags": [], "bug_id": 47511, "attachment_id": null, "id": 129183, "time": "2009-07-27T10:21:51Z", "creator": "sebb@apache.org", "creation_time": "2009-07-27T10:21:51Z", "is_private": false, "text": "Note: If you want to test using BSF and Jython (outside JMeter) you can use a command-line of the form:\n\n\njava -cp bsf-2.4.0.jar;commons-logging-1.1.1.jar;jython.jar org.apache.bsf.Main -lang jython -mode <mode>  [-in fileName] default: <STDIN>\n\nwhere mode =\nexec - corresponds to what JMeter BSF Pre/Post-Processors do\neval - corresponds to what the JMeter BSF sampler does"}, {"count": 4, "tags": [], "bug_id": 47511, "attachment_id": null, "is_private": false, "id": 129260, "time": "2009-07-29T16:50:54Z", "creator": "willmcqueen@yahoo.com", "creation_time": "2009-07-29T16:50:54Z", "text": "(In reply to comment #2)\n> I think there are two problems here:\n> \n> 1) BSF 2.4.0 was coded against Jython 2.1. It seems that some later releases\n> are not compatible.\n\nDo you plan to support Jython 2.5 (as well as include the latest version of BSF) in the next minor release of JMeter? Or perhaps sooner in some new nightly build (based on the priority of other bugs as well, of course)?\n\n> 2) Ambiguity over what constitutes an \"eval\" script in BSF.\n> \n> If you use Jython 2.1, the sampler will work provided that the script is a\n> Jython expression, such as \"5\" or \"6+7\".\n\nIf I create a BSF sampler that's set to use Jython, then being restricted to only use a single JPython expression (as opposed to multiple JPython statements) is severely limiting. On the surface, it seems that a fix to JMeter to enable complete integration with Jython would be low-hanging fruit and provide a lot of bang-for-the-buck, bringing the complete richness of Jython to JMeter samplers. I'm not familiar with JMeter's code, so I could be totally off-base here on how much work is involved to fully support a \"true\" Jython script containing any number of statements (as can be done with a BeanShell sampler) rather than just supporting a single Python expression.\n\nI have a thought... So if instead of using a BeanShell Sampler I were to use a BSF Sampler that's set to BeanShell, then would I have the same limitation? ie, Would this sampler be restricted to a single BeanShell expression instead of being able to use multiple BeanShell statements? If that's the case, then maybe what's needed is to create a separate JythonSampler (in addition to the BeanShellSampler and BSFSampler). Given that \"The Grinder 3\" load testing tool uses Jython, I think that having a new JythonSampler sampler in JMeter would make it easier to migrate Jython scripts between the JMeter and The Grinder, esp when the dev group uses The Grinder but the QA group uses JMeter.\n\nThoughts?\n\nCheers,\nWill"}, {"count": 5, "tags": [], "text": "(In reply to comment #4)\n> (In reply to comment #2)\n> > I think there are two problems here:\n> > \n> > 1) BSF 2.4.0 was coded against Jython 2.1. It seems that some later releases\n> > are not compatible.\n> \n> Do you plan to support Jython 2.5 (as well as include the latest version of\n> BSF) in the next minor release of JMeter? \n\nYes, will move to BSF 3.0 for the next release.\n\nBSF 3.0/JSR-223 does not distinguish scripts and expressions; everything is an expression returning an Object (might be null).\n\n> Or perhaps sooner in some new nightly\n> build (based on the priority of other bugs as well, of course)?\n\nThat will happen when the code has been added to SVN.\n \n> > 2) Ambiguity over what constitutes an \"eval\" script in BSF.\n> > \n> > If you use Jython 2.1, the sampler will work provided that the script is a\n> > Jython expression, such as \"5\" or \"6+7\".\n> \n> If I create a BSF sampler that's set to use Jython, then being restricted to\n> only use a single JPython expression (as opposed to multiple JPython\n> statements) is severely limiting. On the surface, it seems that a fix to JMeter\n> to enable complete integration with Jython would be low-hanging fruit and\n> provide a lot of bang-for-the-buck, bringing the complete richness of Jython to\n> JMeter samplers. I'm not familiar with JMeter's code, so I could be totally\n> off-base here on how much work is involved to fully support a \"true\" Jython\n> script containing any number of statements (as can be done with a BeanShell\n> sampler) rather than just supporting a single Python expression.\n\nThe problem is in BSF 2.4/Jython, not JMeter.\nHaving said that, there is code in JMeter to work-round a similar problem with BSF 2.4/Jexl.\n \n> I have a thought... So if instead of using a BeanShell Sampler I were to use a\n> BSF Sampler that's set to BeanShell, then would I have the same limitation? \n\nNo.\n\n> ie,\n> Would this sampler be restricted to a single BeanShell expression instead of\n> being able to use multiple BeanShell statements? If that's the case, then maybe\n> what's needed is to create a separate JythonSampler (in addition to the\n> BeanShellSampler and BSFSampler). \n\nNo.\n\n> Given that \"The Grinder 3\" load testing tool\n> uses Jython, I think that having a new JythonSampler sampler in JMeter would\n> make it easier to migrate Jython scripts between the JMeter and The Grinder,\n> esp when the dev group uses The Grinder but the QA group uses JMeter.\n> \n> Thoughts?\n> \n> Cheers,\n> Will", "is_private": false, "id": 129268, "creator": "sebb@apache.org", "time": "2009-07-30T01:49:24Z", "bug_id": 47511, "creation_time": "2009-07-30T01:49:24Z", "attachment_id": null}, {"count": 6, "tags": [], "bug_id": 47511, "attachment_id": null, "id": 129363, "time": "2009-07-31T13:38:10Z", "creator": "sebb@apache.org", "creation_time": "2009-07-31T13:38:10Z", "is_private": false, "text": "I think the problem is actually with Jython - as far as I can tell, it does not allow a script to return a value.\n\nOne can either call eval(), and provide a single expression, or call exec() and provide one or more statements; however exec() does not return a value.\n\nThe only reference I could find to JSR-223 and Jython is the following:\n\nhttp://www.jython.org/archive/22/userguide.html#using-jsr-223\n\nwhich clearly shows that each eval() call is a single statement.\n\nLooks like the only work-round at present would be to write an engine that reads the script line by line and calls eval() for each one. Or one could process all but the last line using exec() and then use eval() for the last line. This would require a lot of storage if the script is long, and both solutions only work if each statement is on a separate line.\n\nRather messy."}, {"count": 7, "tags": [], "text": "I don't think it's worth adding a work-round to JMeter.\nThe problem needs to be fixed in Jython.", "is_private": false, "bug_id": 47511, "id": 129682, "time": "2009-08-13T14:49:48Z", "creator": "sebb@apache.org", "creation_time": "2009-08-13T14:49:48Z", "attachment_id": null}]