[{"count": 0, "tags": [], "text": "I have an xml file with more than one attribute that I like to parse with the\n__XPath function, but the function ignores the attribute name on the second call\nper request.\n\nExample:\nxmlfile testusers.xml:\n<users>\n<user username=\"u1\" password=\"p1\"/>\n<user username=\"u2\" password=\"p2\"/>\n</users>\n\nthe XPath function call \n${__XPath(testusers.xml,//user/@username)} will return u1 and u2 respectively, but\n${__XPath(testusers.xml,//user/@password)} will also return u1 and u2. \n\nXPathWrapper.getXPathString() only checks if it is the same file, should\nprobably check xpathString too", "is_private": false, "bug_id": 38302, "id": 84716, "time": "2006-01-17T16:23:31Z", "creator": "java@liberger.com", "creation_time": "2006-01-17T16:23:31Z", "attachment_id": null}, {"count": 1, "tags": [], "creator": "sebb@apache.org", "text": "(In reply to comment #0)\n> the XPath function call \n> ${__XPath(testusers.xml,//user/@username)} will return u1 and u2 \nrespectively, but\n> ${__XPath(testusers.xml,//user/@password)} will also return u1 and u2. \n\nThe above calls are identical, so the response should be identical as well.\n\n> XPathWrapper.getXPathString() only checks if it is the same file, should\n> probably check xpathString too\n\nPlease explain", "id": 84722, "time": "2006-01-17T17:57:16Z", "bug_id": 38302, "creation_time": "2006-01-17T17:57:16Z", "is_private": false, "attachment_id": null}, {"count": 2, "attachment_id": null, "bug_id": 38302, "text": "(In reply to comment #1)\n\n> > the XPath function call \n> > ${__XPath(testusers.xml,//user/@username)} will return u1 and u2 \n> respectively, but\n> > ${__XPath(testusers.xml,//user/@password)} will also return u1 and u2. \n> \n> The above calls are identical, so the response should be identical as well.\n\nI would expect \n${__XPath(testusers.xml,//user/@password)} to return p1 and p2 respectively, the\ncall is asking for a different attribute value (password and not username).\nIf the calls were identical, you couldn't parse more than one attribute from\neach xml file.\n", "id": 84735, "time": "2006-01-18T10:45:08Z", "creator": "java@liberger.com", "creation_time": "2006-01-18T10:45:08Z", "tags": [], "is_private": false}, {"count": 3, "tags": [], "creator": "sebb@apache.org", "attachment_id": null, "id": 85971, "time": "2006-02-20T20:40:08Z", "bug_id": 38302, "creation_time": "2006-02-20T20:40:08Z", "is_private": false, "text": "Sorry, my mistake, I misread it - of course ...@username is not the same \nas ...@password - duh!\n\nI now understand the comment about the XPath string check as well.\n\nI'll take another look at fixing this."}, {"count": 4, "tags": [], "bug_id": 38302, "is_private": false, "id": 85989, "attachment_id": null, "creator": "sebb@apache.org", "creation_time": "2006-02-21T01:23:54Z", "time": "2006-02-21T01:23:54Z", "text": "As far as I can tell, at present each call only ever returns the first match - I\ncould not get the function to return u2 (using your example). Does it work for you?\n\nThere does not seem to be any code to increment the internal pointer.\nThis obviously needs to be fixed as well...\n\nBTW, a work-round at present is to use different file names for the same file,\ne.g. testusers.xml and ./testusers.xml"}, {"count": 5, "tags": [], "bug_id": 38302, "is_private": false, "id": 85993, "attachment_id": null, "creator": "sebb@apache.org", "creation_time": "2006-02-21T03:46:37Z", "time": "2006-02-21T03:46:37Z", "text": "I think I've fixed both problems in the 2.1 branch.\n\nThe nightly build 2-1.20060221 contains the fixes."}, {"count": 6, "tags": [], "bug_id": 38302, "is_private": false, "id": 86061, "attachment_id": null, "creator": "sebb@apache.org", "creation_time": "2006-02-22T01:09:33Z", "time": "2006-02-22T01:09:33Z", "text": "Found a problem - the nodelist was not being shared across threads.\n\nThis is in the 2-1.20060222 build."}]