[{"attachment_id": null, "tags": [], "bug_id": 22900, "text": "We are running apache 2.0.47 compiled with prefork model. We are running with\nsome modules static and some shared (Attached as APPENDIX A & B below). We are\nrunning a pretty standard CGI environment (No mod_perl or php) using perl 5.6.1\non Solaris 2.8.\n\nWe have seen two examples where perl scripts have caused apache children and\ntheir forked off CGIs to hang indefinitely when there is a lot of debug output\nwith perl -w in situations where DBI is used.\n\nFor example, we have a script that was run with perl -w and includes DBI using a\nuse statement (use DBI;) When the DBI call was made to fetch data, there were a\nlot of errors in regards to a particular variable being unitialized, pretty\nstandard Perl error.  However, with -w on, Apache hangs.  With -w OFF, apache\nwould not hang.  There were some 600 rows fetched and Apache would hang\nsomewhere around 160 rows.\n\nThe same script, executed from the command line would execute fine each and\nevery time. Also, the same script would execute fine from Apache 1.3.26.   I can\ntry to provide a script to reproduce this but it would have to include DBI Calls.  \n\nI have created a script with no DBI calls which generates a ton of errors with\nperl -w  and this only does not trigger the problem.  The key element seems to\nbe the DBI call.\n \n\nAny ideas?\n\nAPPENDIX A - Modules compiled Static\n=====================================\n  core.c\n  mod_access.c\n  mod_auth.c\n  mod_log_config.c\n  mod_env.c\n  mod_usertrack.c\n  prefork.c\n  http_core.c\n  mod_mime.c\n  mod_status.c\n  mod_dir.c\n  mod_imap.c\n  mod_so.c\n\nAPPENDIX B - Modules loaded at run-time\n=========================================\nLoadModule ldap_module modules/mod_ldap.so\nLoadModule auth_ldap_module modules/mod_auth_ldap.so\nLoadModule include_module modules/mod_include.so\nLoadModule setenvif_module modules/mod_setenvif.so\nLoadModule proxy_module modules/mod_proxy.so\nLoadModule proxy_connect_module modules/mod_proxy_connect.so\n#LoadModule proxy_ftp_module modules/mod_proxy_ftp.so\n#LoadModule proxy_http_module modules/mod_proxy_http.so\n<IfDefine SSL>\nLoadModule ssl_module modules/mod_ssl.so\n</IfDefine>\nLoadModule autoindex_module modules/mod_autoindex.so\nLoadModule asis_module modules/mod_asis.so\nLoadModule info_module modules/mod_info.so\nLoadModule cgi_module modules/mod_cgi.so\nLoadModule negotiation_module modules/mod_negotiation.so\nLoadModule actions_module modules/mod_actions.so\nLoadModule alias_module modules/mod_alias.so\nLoadModule rewrite_module modules/mod_rewrite.so", "count": 0, "id": 43645, "time": "2003-09-02T22:14:02Z", "creator": "redwoodtree@mac.com", "creation_time": "2003-09-02T22:14:02Z", "is_private": false}, {"count": 1, "attachment_id": null, "creator": "trawick@apache.org", "text": "The hang comes when the CGI writes too much to stderr.\n\nYou might try http://www.apache.org/~trawick/mod_cgi.c, which is a hacked up\nversion of mod_cgi that handles stdin/stdout/stderr better on Unix platforms.\n\n*** This bug has been marked as a duplicate of 22030 ***", "id": 43664, "time": "2003-09-03T13:46:36Z", "bug_id": 22900, "creation_time": "2003-09-03T13:46:36Z", "tags": [], "is_private": false}, {"attachment_id": null, "tags": [], "bug_id": 22900, "text": "thanks, this (http://nagoya.apache.org/bugzilla/show_bug.cgi?id=22030) is indeed\nthe problem.  ", "count": 2, "id": 43671, "time": "2003-09-03T16:59:56Z", "creator": "redwoodtree@mac.com", "creation_time": "2003-09-03T16:59:56Z", "is_private": false}]