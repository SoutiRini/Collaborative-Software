[{"count": 0, "tags": [], "text": "When forking the process for piped logging for platforms that don't\nsuffer from NO_RELIABLE_PIPED_LOGS the read end of the pipe used for\nSTDIN of the forked process is never closed in the parent process.\nThis causes worker processes to hang in log writing if Apache is\ngracefully restarted with SIGUSR1 (logging process dead but still plenty\nof processes around having the fd open for reading; no EPIPE, write(2)\nhangs).", "is_private": false, "bug_id": 30207, "id": 60867, "time": "2004-07-20T12:41:31Z", "creator": "martin.hoffmann@schlund.de", "creation_time": "2004-07-20T12:41:31Z", "attachment_id": null}, {"count": 1, "attachment_id": null, "creator": "g.starck@skybel.net", "is_private": false, "id": 76527, "time": "2005-06-19T04:54:21Z", "bug_id": 30207, "creation_time": "2005-06-19T04:54:21Z", "tags": [], "text": "(In reply to comment #0)\n> When forking the process for piped logging for platforms that don't\n> suffer from NO_RELIABLE_PIPED_LOGS the read end of the pipe used for\n> STDIN of the forked process is never closed in the parent process.\n\nIt's not closed in the master process because of good reason:\nwhen the logger would die unexpectedly, then the master process would fork a new\none, giving it back the read end of the pipe, still valid, so the logger would\nresume the logging, as if nothing had happened.\n\n> This causes worker processes to hang in log writing if Apache is\n> gracefully restarted with SIGUSR1 (logging process dead but still plenty\n> of processes around having the fd open for reading; no EPIPE, write(2)\n> hangs).\n\nIndeed, then, each newly forked worker need to close that read side of the pipe\nasap, and certainly before trying to write to it.."}, {"count": 2, "attachment_id": null, "creator": "g.starck@skybel.net", "is_private": false, "id": 76652, "time": "2005-06-23T15:44:45Z", "bug_id": 30207, "creation_time": "2005-06-23T15:44:45Z", "tags": [], "text": "(In reply to comment #1)\n> (In reply to comment #0)\n>\n> > This causes worker processes to hang in log writing if Apache is\n> > gracefully restarted with SIGUSR1 (logging process dead but still plenty\n> > of processes around having the fd open for reading; no EPIPE, write(2)\n> > hangs).\n> \n> Indeed, then, each newly forked worker need to close that read side of the pipe\n> asap, and certainly before trying to write to it..\n\nIn fact, even if that is done, there could be some logs that would be lost\nduring a reload (simply because the logger(s) would die before some childs,\nstill writing to the pipe). Then, apache should place itself in a sort of\n\"reload\" state, where it'd wait all \"old\"-childs to be died (with a max time to\nwait, kill -9 if some childs still present after that..), and only when all\nchilds are died then it could signal the old logger(s) for dying."}, {"count": 3, "tags": [], "text": "Apache HTTP Server 1.3.x is not supported anymore and no bugs will be fixed in the old codebase (cf. <http://mail-archives.apache.org/mod_mbox/httpd-announce/201002.mbox/%3C20100203000334.GA19021@infiltrator.stdlib.net%3E>). Since this bug seems to affect only 1.3.x, I'm closing it as WONTFIX.\n\nIf this bug still affects you in a recent version (version 2.2.x or the upcoming version 2.4), please open a new bug.\n\nThank you for reporting the bug.", "attachment_id": null, "id": 145152, "creation_time": "2011-03-21T10:59:26Z", "time": "2011-03-21T10:59:26Z", "creator": "mss@apache.org", "bug_id": 30207, "is_private": false}]