[{"count": 0, "tags": [], "bug_id": 13419, "attachment_id": null, "text": "I configured Apache 2.0.42, Tomcat 4.1.12 and downloaded\njakarta-tomcat-connectors-4.1.12-src. I managed to use GNU's libtoolize to\nconfigure (./configure --with-apxs2=/usr/local/apache2/bin/apxs\n--with-apr-lib=/usr/local/apache2/lib\n--with-apr-include=/usr/local/apache2/include\n--with-tomcat1=/usr/local/jakarta-tomcat-4.1.12).\n\nThe compilation was successful and I copied mod_jk2.so to \n/usr/local/apache2/modules. I configured httpd.conf to load the module and\nappended the following:\n\n<IfModule mod_jk2.c>\nJkSet \"config.file\" \"/usr/local/apache2/conf/workers2.properties\"\n</IfModule>\n\nI added a super simple workers2.properties file in the same dir and tried\nto start apache. I got a seg fault. Here's the stacktrace from Mac OS X\ndefault crash logger:\n\nThread 0 Crashed:\n #0   0x90001600 in strlen\n #1   0x900023e0 in vfprintf\n #2   0x900017ec in fprintf\n #3   0x0061dd18 in jk2_map_default_get (jk_map.c:104) <- see codes below for the statement\n #4   0x0061bbb4 in jk2_env_getBean2 (jk_env.c:423)      \n #5   0x0061af40 in jk2_env_createBean2 (jk_env.c:218)\n #6   0x00636754 in jk2_create_config (mod_jk2.c:344)\n #7   0x0002214c in ap_single_module_configure (config.c:1845)\n\nI'm adding my own printf's. For completeness, here's the function\n\nstatic void *jk2_map_default_get(jk_env_t *env, jk_map_t *m,\n                                 const char *name)\n{\n    int i;\n    jk_map_private_t *mPriv;\n    void *result=NULL;\n\n    if(name==NULL )\n        return NULL;\n    fprintf(stdout, \"\\nentering for %s \", name);\n\n    mPriv=(jk_map_private_t *)m->_private;\n\n    fprintf(stdout, \" (no. maps: %d)\\n\", mPriv->size);\n    for(i = 0 ; i < mPriv->size ; i++) {\n      fprintf(stdout, \"\\t%d: \", i);\n\n      if ((mPriv->names[i]) == NULL) {\n        fprintf(stdout, \"null mPriv->names[]\");\n        return NULL;\n      }\n\n      fprintf(stdout, \" %p \", &(mPriv->names[i]));\n      fflush(stdout);\n      fprintf(stdout, \" %s \", mPriv->names[i]); /* this is line 104 */\n      fprintf(stdout, \" (%p) \\n\", mPriv->values[i]);\n\n      if(0 == strcmp(mPriv->names[i], name)) {\n        result = mPriv->values[i];\n        break;\n      }\n    }\n    fprintf(stdout, \"done for %s\\n\", name);\n    return result;\n}\n\nAnd as per requested by Costin, I added the printf in the put function:\n\t...\n    if(mPriv->size < mPriv->capacity) {\n        mPriv->values[mPriv->size] = value;\n        /* XXX this is wrong - either we take ownership and copy both\n           name and value,\n           or none. The caller should do that if he needs !\n           Sure, but we should have our copy...\n        mPriv->names[mPriv->size] =  (char *)name;\n        */\n        mPriv->names[mPriv->size] = m->pool->pstrdup(env,m->pool, name);\n        printf(\"put '%s' (addr: %p) with value: %p \\n\", mPriv->names[mPriv->size], &(mPriv->names[mPriv->size]), value);\n        mPriv->size ++;\n        rc = JK_OK;\n    }\n    ...\n\n\nAnd finally, here's the output:\n\nput 'logger.file' (addr: 0x19b948) with value: 0x61d984\nput 'logger.win32' (addr: 0x19b94c) with value: 0x61dac8\nput 'workerEnv' (addr: 0x19b950) with value: 0x62c698\nput 'uriMap' (addr: 0x19b954) with value: 0x62a3d4\nput 'uriEnv' (addr: 0x19b958) with value: 0x627fa4\nput 'endpoint' (addr: 0x19b95c) with value: 0x61a65c\nput 'uri' (addr: 0x19b960) with value: 0x627fa4\nput 'config' (addr: 0x19b964) with value: 0x61a028\nput 'ajp13' (addr: 0x19b968) with value: 0x62f168\nput 'lb' (addr: 0x19b96c) with value: 0x6308dc\nput 'status' (addr: 0x19b970) with value: 0x632c2c\nput 'run' (addr: 0x19b974) with value: 0x630d60\nput 'channel.un' (addr: 0x19b978) with value: 0x617dc8\nput 'channel.apr' (addr: 0x19b97c) with value: 0x615644\nput 'shm' (addr: 0x19b980) with value: 0x626ee8\nput 'channel.socket' (addr: 0x19b984) with value: 0x616c64\nput 'handler.response' (addr: 0x19b988) with value: 0x61cff0\nput 'handler.logon' (addr: 0x19b98c) with value: 0x61c578\nput 'threadMutex' (addr: 0x19b990) with value: 0x620da8\nput 'procMutex' (addr: 0x19b994) with value: 0x6209fc\nput 'channel.jni' (addr: 0x19b998) with value: 0x6157b0\nput 'worker.jni' (addr: 0x19b99c) with value: 0x62f3f4\nput 'vm' (addr: 0x19b9a0) with value: 0x62a864\nput 'signal' (addr: 0x19b9a4) with value: 0x627038\nput 'user' (addr: 0x19b9a8) with value: 0x62a7a8\n\nentering for threadMutex  (no. maps: 25)\n\t0:  0x19b948  logger.file  (0x61d984)\n\t1:  0x19b94c  logger.win32  (0x61dac8)\n\t2:  0x19b950  workerEnv  (0x62c698)\n\t3:  0x19b954  uriMap  (0x62a3d4)\n\t4:  0x19b958  uriEnv  (0x627fa4)\n\t5:  0x19b95c  endpoint  (0x61a65c)\n\t6:  0x19b960  uri  (0x627fa4)\n\t7:  0x19b964  config  (0x61a028)\n\t8:  0x19b968  ajp13  (0x62f168)\n\t9:  0x19b96c  lb  (0x6308dc)\n\t10:  0x19b970  status  (0x632c2c)\n\t11:  0x19b974  run  (0x630d60)\n\t12:  0x19b978  channel.un  (0x617dc8)\n\t13:  0x19b97c  channel.apr  (0x615644)\n\t14:  0x19b980  shm  (0x626ee8)\n\t15:  0x19b984  channel.socket  (0x616c64)\n\t16:  0x19b988  handler.response  (0x61cff0)\n\t17:  0x19b98c  handler.logon  (0x61c578)\n\t18:  0x19b990  threadMutex  (0x620da8)\ndone for threadMutex\nput 'threadMutex:0' (addr: 0x19eea8) with value: 0x52e080\nput 'logger.apache2' (addr: 0x19b9ac) with value: 0x63447c\n\n...[snip]\n...[snip]\n\nentering for workerEnv  (no. maps: 19)\n\t0:  0x19eea8  threadMutex:0  (0x52e080)\n\t1:  0x19eeac  logger.apache2:  (0x532090)\n\t2:  0x19eeb0  logger.apache2  (0x532090)\n\t3:  0x19eeb4  logger  (0x532090)\n\t4:  0x19eeb8  uriMap:  (0x5360a8)\n\t5:  0x19eebc  uriMap  (0x5360a8)\n\t6:  0x19eec0  config:  (0x5380b8)\n\t7:  0x19eec4  config  (0x5380b8)\n\t8:  0x19eec8  shm:  (0x53a0c8)\n\t9:  0x19eecc  shm  (0x53a0c8)\n\t10:  0x19eed0  workerEnv:  (0x5340a0)\n\t11:  0x19eed4  workerEnv  (0x5340a0)\ndone for workerEnv\nput '/examples/*' (addr: 0x5361cc) with value: 0x55a520\nput 'uri:/examples/*' (addr: 0x19eef4) with value: 0x558520\n\nentering for ver  (no. maps: 1)\n\t0:  0x19c618  worker  (0x19c600)\ndone for ver\nput 'worker' (addr: 0x538b20) with value: 0x538ac8\nput 'uri:/examples/*.worker' (addr: 0x53423c) with value: 0x538ac8\n\nentering for uri:  (no. maps: 20)\n\t0:  0x19eea8\n\nbin/apachectl: line 87:   3243 Segmentation fault      $HTTPD -k $ARGV", "id": 24152, "time": "2002-10-08T19:12:53Z", "creator": "hanming@apple.com", "creation_time": "2002-10-08T19:12:53Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 13419, "is_private": false, "text": "That's very strange. \nFirst - make sure you compile with -O0 - it may be something wrong with the\nline numbers due to reordering by the compiler. \nIt seems obvious that the NPE is in the printf implementation - that's \ncommon in many OSes if a param is NULL. However the code fragment seems\nto check for null.\n\nI would sugest double checking the -O flag and the printf params. ", "id": 24231, "time": "2002-10-09T20:03:21Z", "creator": "cmanolache@yahoo.com", "creation_time": "2002-10-09T20:03:21Z", "attachment_id": null}, {"count": 2, "tags": [], "creator": "hanming@apple.com", "attachment_id": null, "id": 24325, "time": "2002-10-11T00:42:36Z", "bug_id": 13419, "creation_time": "2002-10-11T00:42:36Z", "is_private": false, "text": "Costin,\n  I compiled with '-g' flag only. No optimization.\nBefore I put in the printf's, similar seg fault was at this line:\n\nif(0 == strcmp(mPriv->names[i], name)) {\n\nI know it's weird since I check for NULL a few lines above it.\nThis kind of error is almost like mem was deallocated accidentally,\nbefore it is used.\n\n  I saw on the mailing list that someone else has a similar seg fault on\nSolaris as well.\n\nThanks!"}, {"count": 3, "text": "Ok, I don't really know enough about what's going on, (I'm mostly just \na lurker) however...\n\nAn of the wall guess would be that the passed string has no null terminator.\nThis would cause strlen() to seg fault once it had run over the end of\nits memory space.\n\nIf the address itself is bad, you can test by just outputting the first few\ncharacters.  If that doesn't dump core then it's most likely a null termination\nproblem.\n\nNot that it helps.", "creator": "pspeed@progeeks.com", "attachment_id": null, "id": 24329, "time": "2002-10-11T04:17:34Z", "bug_id": 13419, "creation_time": "2002-10-11T04:17:34Z", "tags": [], "is_private": false}, {"count": 4, "text": "Thanks to check with more recent mod_jk 2 (2.0.4 for now)", "creator": "hgomez@apache.org", "attachment_id": null, "id": 60534, "time": "2004-07-13T10:14:11Z", "bug_id": 13419, "creation_time": "2004-07-13T10:14:11Z", "tags": [], "is_private": false}]