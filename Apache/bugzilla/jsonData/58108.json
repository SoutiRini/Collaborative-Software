[{"attachment_id": 32884, "tags": [], "creator": "pigneverdie@126.com", "text": "Created attachment 32884\nthree pictures in one\n\nin BeanShell PreProcessor :\n\nsampler.toString();\nvars.put(\"sign\",\"123\");\n\n${sign} can not be replaced by 123 in HttpSampler\n\nplease see Attachements", "count": 0, "id": 183904, "time": "2015-07-06T09:59:33Z", "bug_id": 58108, "creation_time": "2015-07-06T09:59:33Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 58108, "is_private": false, "text": "  the sampler.toStirng() will use\n\n the Class HTTPSamplerBase:\ngetUrl()-->getQueryString()-->item.getEncodedName();", "id": 183905, "time": "2015-07-06T10:10:29Z", "creator": "pigneverdie@126.com", "creation_time": "2015-07-06T10:10:29Z", "attachment_id": null}, {"count": 2, "tags": [], "creator": "sebb@apache.org", "attachment_id": null, "is_private": false, "id": 183907, "time": "2015-07-06T11:49:07Z", "bug_id": 58108, "creation_time": "2015-07-06T11:49:07Z", "text": "I canot work out what the problem is here.\n\nPlease provide the simplest possible Test Plan showing the issue.\n\nState what you expected to happen and what actually happened.\n\nDid the same test sequence work OK in a previous version of JMeter, if so which?"}, {"count": 3, "text": "(In reply to Sebb from comment #2)\n> I canot work out what the problem is here.\n> \n> Please provide the simplest possible Test Plan showing the issue.\n> \n> State what you expected to happen and what actually happened.\n> \n> Did the same test sequence work OK in a previous version of JMeter, if so\n> which?\n\nHi Sebb ,\n\nThanks for reply.\n\nI add an attachement provide the simplest Test Plan.\nyou will see my problem in it .\nthe Test Plan can not work because of the problem ,please use \"//\" before sampler.toString() in BeanShell PreProcessor .", "bug_id": 58108, "is_private": false, "id": 183920, "time": "2015-07-07T02:16:39Z", "creator": "pigneverdie@126.com", "creation_time": "2015-07-07T02:16:39Z", "tags": [], "attachment_id": null}, {"count": 4, "tags": [], "text": "Created attachment 32886\nTest Plan Demo", "is_private": false, "bug_id": 58108, "id": 183921, "time": "2015-07-07T02:17:16Z", "creator": "pigneverdie@126.com", "creation_time": "2015-07-07T02:17:16Z", "attachment_id": 32886}, {"count": 5, "tags": [], "text": "Thanks, that is a great help.\n\nI can confirm the problem, but I've no idea what is causing it yet.", "attachment_id": null, "bug_id": 58108, "id": 183922, "time": "2015-07-07T03:06:14Z", "creator": "sebb@apache.org", "creation_time": "2015-07-07T03:06:14Z", "is_private": false}, {"count": 6, "tags": [], "bug_id": 58108, "attachment_id": null, "id": 183923, "time": "2015-07-07T03:37:00Z", "creator": "pigneverdie@126.com", "creation_time": "2015-07-07T03:37:00Z", "is_private": false, "text": "(In reply to Sebb from comment #5)\n> Thanks, that is a great help.\n> \n> I can confirm the problem, but I've no idea what is causing it yet.\n\n\nfrom the source code ,I find something ,it may help:\n\nsampler.toString() will do( from HttpSamplerBase.java) :\n\n    @Override\n    public String toString() {\n        try {\n            StringBuilder stringBuffer = new StringBuilder();\n            stringBuffer.append(this.getUrl().toString());//problem is here\n\nthis.getUrl().toStirng() make the bug;\n\nand from the functin getUrl():\n\n  if(HTTPConstants.GET.equals(getMethod()) || HTTPConstants.DELETE.equals(getMethod())) {\n            // Get the query string encoded in specified encoding\n            // If no encoding is specified by user, we will get it\n            // encoded in UTF-8, which is what the HTTP spec says\n            String queryString = getQueryString(getContentEncoding());//problem is here\n\ngetQueryString() make the bug;\n\nand from the function getQueryStirng():\n\n   try {\n        \t   item.getEncodedValue(contentEncoding);// problem is here\n           }\nfinnally , i find the bug may be in the class AbstractTestElement\nwhen i do sampler.toString(),it will do getPropertyAsString(),and the parameters can not be replaced any more after it."}, {"count": 7, "tags": [], "bug_id": 58108, "attachment_id": null, "id": 183957, "time": "2015-07-08T10:53:44Z", "creator": "sebb@apache.org", "creation_time": "2015-07-08T10:53:44Z", "is_private": false, "text": "The following test plan also fails:\n\nTest Plan\n- BeanShell PP (at same level as the sampler)\n- HTTP Sampler\n\nThis fails:\n\nTest Plan\n- BeanShell PP\n- HTTP Sampler\n- Java Request using the variable (this sees the variable OK)\n\nHowever, this works:\n\nTest Plan\n- BeanShell PP\n- Java Request using the variable (this sees the variable OK)\n- HTTP Sampler\n\nThe processing of variables is quite complicated as they sometimes need to be resolved (e.g. when being used at run-time) and sometimes that must be returned in their original state (e.g. for display in the GUI).\n\nI expect what is happening is that the \"running\" state is not being set at the correct time."}]