[{"count": 0, "tags": [], "bug_id": 53798, "text": "Created attachment 29298\nNegativeShiftBug.java\n\nHi All,\nI found a bug in the XSSF implementation of Sheet.shiftRows() method which causes either a corrupted data for the shifted row in xlsx file or throws org.apache.xmlbeans.impl.values.XmlValueDisconnectedException depending on a scenario. \n\nIt can be observed in the following scenarios:\n\nResult: corrupted data in the shifted row\n1) negative shifting row(s) by less than -1\n2) after a negative shift = -1 (less than -1 see above) attempt to create a new row IN PLACE of a removed row by a negative shift causes corrupted xlsx file with unreadable data in the negative shifted row.\n\nResult: thrown org.apache.xmlbeans.impl.values.XmlValueDisconnectedException\n3) once a negative shift has been made any attempt to shift another group of rows (note: outside of previously negative shifted rows) by a POSITIVE amount causes POI exception org.apache.xmlbeans.impl.values.XmlValueDisconnectedException.\nNOTE: another negative shift on another group of rows is successful, provided no new rows in place of previously shifted rows were attempted to be created as explained above.\n\n\nPlease see the attached NegativeShiftBug.java in combination with template .xlsx file illustrating the problem.\nPlease NOTE that HSSF shiftRows() implementation has none of the problems discussed above.", "id": 161815, "time": "2012-08-29T13:06:44Z", "creator": "gillbuzz@10g.pl", "creation_time": "2012-08-29T13:06:44Z", "is_private": false, "attachment_id": 29298}, {"count": 1, "tags": [], "bug_id": 53798, "attachment_id": 29299, "id": 161817, "time": "2012-08-29T13:08:53Z", "creator": "gillbuzz@10g.pl", "creation_time": "2012-08-29T13:08:53Z", "is_private": false, "text": "Created attachment 29299\nshiftNegative_TMPL.xlsx (template)"}, {"attachment_id": null, "tags": [], "creator": "greeson1@umbc.edu", "is_private": false, "count": 2, "id": 165247, "time": "2013-02-14T00:30:01Z", "bug_id": 53798, "creation_time": "2013-02-14T00:30:01Z", "text": "I have observed this bug is 3.8 I am assuming it  is the same bug."}, {"count": 3, "tags": [], "text": "(In reply to comment #2)\n> I have observed this bug is 3.8 I am assuming it  is the same bug.\n\nAs I'm aware this bug has been in all previous versions. I have tested all versions since 3.7.", "attachment_id": null, "bug_id": 53798, "id": 165248, "time": "2013-02-14T14:26:24Z", "creator": "gillbuzz@10g.pl", "creation_time": "2013-02-14T14:26:24Z", "is_private": false}, {"count": 4, "tags": [], "creator": "dominik.stadler@gmx.at", "attachment_id": null, "id": 169978, "time": "2013-09-09T09:44:01Z", "bug_id": 53798, "creation_time": "2013-09-09T09:44:01Z", "is_private": false, "text": "I finally was able to narrow this down and find the root-cause of this problem. It seems the handling of rows that are overwritten by the shifting was done incorrectly in some cases, thus leaving behind left-over objects which caused these exceptions when being accessed.\n\nThis should be fixed with r1521012, we now first ensure that all removed/overwritten rows are removed and only then apply the shifting, now this test-case and all existing tests seem to run fine. Let's see which other bugs in this area this might also fix."}]