[{"count": 0, "tags": [], "bug_id": 56162, "attachment_id": 31335, "is_private": false, "id": 173370, "time": "2014-02-19T18:12:02Z", "creator": "mparker@computer.org", "creation_time": "2014-02-19T18:12:02Z", "text": "Created attachment 31335\ntest plan to show inability to override if-none-match when using http cache manager\n\nI am unable to override the 'If-None-Match' header when an HTTP Cache Manager is in play. See attached test plan. \n\nIn my real-world test, I am doing a PUT, followed by a GET which validates changed values. The response from the PUT includes an ETag, which the Cache Manager picks up and uses in the subsequent GET. Since I specifically want to GET the full entity immediately after the PUT, I want to override the cache header."}, {"count": 1, "tags": [], "creator": "p.mouawad@ubik-ingenierie.com", "attachment_id": null, "id": 173466, "creation_time": "2014-02-25T13:06:06Z", "time": "2014-02-25T13:06:06Z", "bug_id": 56162, "text": "This is due to CacheManager being called after adding Headers from Header Manager so it overrides values defined in HeaderManager.\n\nWe could add an checkbox in CacheManager saying :\n- Overridable by headers in Header Manager\n\n\nAdding something in Header Manager does not seem to be a good idea for me as it is clearly related to Cache Manager.\n\nThoughts ?", "is_private": false}, {"count": 2, "tags": [], "bug_id": 56162, "attachment_id": null, "is_private": false, "id": 173472, "time": "2014-02-25T17:17:29Z", "creator": "sebb@apache.org", "creation_time": "2014-02-25T17:17:29Z", "text": "Not sure I understand the use case.\n\nSurely if the PUT changes the target of the GET, the Etag should change?\n\nHow does the JMeter behaviour differ from that of a browser?\n[Apart from the fact that JMeter does not store the page contents, so cached gets are empty]\n\nIt would be helpful to have details of the request response headers sent by JMeter and also by a browser."}, {"count": 3, "tags": [], "text": "(In reply to Philippe Mouawad from comment #1)\n> This is due to CacheManager being called after adding Headers from Header\n> Manager so it overrides values defined in HeaderManager.\n> \n> We could add an checkbox in CacheManager saying :\n> - Overridable by headers in Header Manager\n> \n> \n> Adding something in Header Manager does not seem to be a good idea for me as\n> it is clearly related to Cache Manager.\n> \n> Thoughts ?\n\nYes, putting a checkbox on CacheManager would work. Although, as an end user it would be more intuitive if JMeter were to process CacheManager headers first, then apply any headers defined explicitly in a sampler's child HeaderManager. I believe that behavior would be similar to the way JMeter allows override of other hierarchical elements.", "attachment_id": null, "bug_id": 56162, "id": 173474, "time": "2014-02-25T19:20:20Z", "creator": "mparker@computer.org", "creation_time": "2014-02-25T19:20:20Z", "is_private": false}, {"count": 4, "tags": [], "creator": "mparker@computer.org", "attachment_id": null, "is_private": false, "id": 173475, "time": "2014-02-25T19:44:36Z", "bug_id": 56162, "creation_time": "2014-02-25T19:44:36Z", "text": "(In reply to Sebb from comment #2)\n> Not sure I understand the use case.\n> \n> Surely if the PUT changes the target of the GET, the Etag should change?\n\nYou're correct, the ETag value does change, and the CacheManager works properly with respect to this. However, I then want to create a new GET request specifically to retrieve the full entity, but I no longer have the ability to do this once the CacheManager is there.\n\n> \n> How does the JMeter behaviour differ from that of a browser?\n> [Apart from the fact that JMeter does not store the page contents, so cached\n> gets are empty]\n\nJMeter allows me to arbitrarily change headers and their values with each request,  whereas a browser does not. This makes JMeter a much better tool for testing HTTP APIs than a web browser.\n\n> \n> It would be helpful to have details of the request response headers sent by\n> JMeter and also by a browser.\n\nI'm sure they would look identical, but this is more about the decreased ability to change the header values in a test, than it is about how it mimics a web browser."}, {"count": 5, "tags": [], "bug_id": 56162, "attachment_id": null, "is_private": false, "id": 173476, "time": "2014-02-25T20:31:16Z", "creator": "sebb@apache.org", "creation_time": "2014-02-25T20:31:16Z", "text": "(In reply to Matt Parker from comment #4)\n> (In reply to Sebb from comment #2)\n> > Not sure I understand the use case.\n> > \n> > Surely if the PUT changes the target of the GET, the Etag should change?\n> \n> You're correct, the ETag value does change, and the CacheManager works\n> properly with respect to this. However, I then want to create a new GET\n> request specifically to retrieve the full entity, but I no longer have the\n> ability to do this once the CacheManager is there.\n\nThat's the part I don't understand.\nSurely the next GET after the PUT won't return the cached entry?\nIf it does, then perhaps CM - or the site - is faulty?\n\n> > \n> > How does the JMeter behaviour differ from that of a browser?\n> > [Apart from the fact that JMeter does not store the page contents, so cached\n> > gets are empty]\n> \n> JMeter allows me to arbitrarily change headers and their values with each\n> request,  whereas a browser does not. This makes JMeter a much better tool\n> for testing HTTP APIs than a web browser.\n\nYes, though of course the site must still work when used by a browser.\n\n> > \n> > It would be helpful to have details of the request response headers sent by\n> > JMeter and also by a browser.\n> \n> I'm sure they would look identical, but this is more about the decreased\n> ability to change the header values in a test, than it is about how it\n> mimics a web browser.\n\nThat's a bit different.\n\nAs far as I understand your use case, it should not need you to override headers. If it does require this currently, then we need to establish why that is. Better to fix JMeter (if it is wrong) than to have to use a work-round."}, {"count": 6, "tags": [], "bug_id": 56162, "attachment_id": null, "id": 173477, "time": "2014-02-25T22:41:14Z", "creator": "mparker@computer.org", "creation_time": "2014-02-25T22:41:14Z", "is_private": false, "text": "(In reply to Sebb from comment #5)\n> (In reply to Matt Parker from comment #4)\n> > (In reply to Sebb from comment #2)\n> > > Not sure I understand the use case.\n> > > \n> > > Surely if the PUT changes the target of the GET, the Etag should change?\n> > \n> > You're correct, the ETag value does change, and the CacheManager works\n> > properly with respect to this. However, I then want to create a new GET\n> > request specifically to retrieve the full entity, but I no longer have the\n> > ability to do this once the CacheManager is there.\n> \n> That's the part I don't understand.\n> Surely the next GET after the PUT won't return the cached entry?\n> If it does, then perhaps CM - or the site - is faulty?\n\nTechnically, both CM and the site are working properly. But CM's behavior is too restrictive to allow me to do what I want. After the PUT, the 2xx response from the site includes the updated ETag value. CM sees that ETag value in the PUT response, caches it, and inserts it on the next GET. From the site's perspective, the client has provided the correct cache validator, and so returns 304. What I'm trying to do is to override the etag value that CM inserts, so that I can get back a 200 instead of a 304.\n\n> \n> > > \n> > > How does the JMeter behaviour differ from that of a browser?\n> > > [Apart from the fact that JMeter does not store the page contents, so cached\n> > > gets are empty]\n> > \n> > JMeter allows me to arbitrarily change headers and their values with each\n> > request,  whereas a browser does not. This makes JMeter a much better tool\n> > for testing HTTP APIs than a web browser.\n> \n> Yes, though of course the site must still work when used by a browser.\n\nAgreed.\n\n> \n> > > \n> > > It would be helpful to have details of the request response headers sent by\n> > > JMeter and also by a browser.\n> > \n> > I'm sure they would look identical, but this is more about the decreased\n> > ability to change the header values in a test, than it is about how it\n> > mimics a web browser.\n> \n> That's a bit different.\n> \n> As far as I understand your use case, it should not need you to override\n> headers. If it does require this currently, then we need to establish why\n> that is. Better to fix JMeter (if it is wrong) than to have to use a\n> work-round.\n\nThe attached test case illustrates the problem, and I'll outline my real-world test.\n\nAttached test case:\n0. A CacheManager is added to the test plan\n1. sampler performs a GET http://www.mnot.net/cache_docs/\n2. the site responds with 200 OK, and an ETag value (amongst other header values)\n3. CM recognizes the ETag value and copies it\n4. sampler performs another GET request for the same item\n5. CM intelligently inserts the etag value into the if-none-match header\n6. the etag value matches what the site has, so the site returns 304\n7. I want to force a 200 response, rather than a 304, so I add an if-none-match header (guaranteed to not match) to the next sampler\n8. CM overrides the if-none-match value I provided, and uses its value. (This is the behavior I'd like to control)\n\nIn my real-world test, I am testing a RESTful API--I am doing a POST, followed by a GET to validate that the body matches what I previously created. Then I am validating that the server API processes the conditional GET properly, by using the CM and another GET. Then I perform a PUT, changing the contents (the server responds with a 204 and an ETag). Lastly, I want to validate that the server sends back the exact contents that I PUT (I want a 200), but since CM is automatically working its magic, I can't get anything back but a 304 No Content."}, {"count": 7, "tags": [], "bug_id": 56162, "attachment_id": null, "is_private": false, "id": 173478, "time": "2014-02-25T22:44:09Z", "creator": "mparker@computer.org", "creation_time": "2014-02-25T22:44:09Z", "text": "> anything back but a 304 No Content.\n\nOops, I meant \"304 Not Modifed\"."}, {"count": 8, "tags": [], "bug_id": 56162, "attachment_id": null, "is_private": false, "id": 173479, "time": "2014-02-25T23:28:36Z", "creator": "sebb@apache.org", "creation_time": "2014-02-25T23:28:36Z", "text": "(In reply to Matt Parker from comment #6)\n> (In reply to Sebb from comment #5)\n> > (In reply to Matt Parker from comment #4)\n> > > (In reply to Sebb from comment #2)\n> > > > Not sure I understand the use case.\n> > > > \n> > > > Surely if the PUT changes the target of the GET, the Etag should change?\n> > > \n> > > You're correct, the ETag value does change, and the CacheManager works\n> > > properly with respect to this. However, I then want to create a new GET\n> > > request specifically to retrieve the full entity, but I no longer have the\n> > > ability to do this once the CacheManager is there.\n> > \n> > That's the part I don't understand.\n> > Surely the next GET after the PUT won't return the cached entry?\n> > If it does, then perhaps CM - or the site - is faulty?\n> \n> Technically, both CM and the site are working properly. But CM's behavior is\n> too restrictive to allow me to do what I want. After the PUT, the 2xx\n> response from the site includes the updated ETag value.\n\nBut should a PUT response be cached?\n\nThat seems wrong."}, {"count": 9, "tags": [], "creator": "mparker@computer.org", "text": "(In reply to Sebb from comment #8)\n> (In reply to Matt Parker from comment #6)\n> > (In reply to Sebb from comment #5)\n> > > (In reply to Matt Parker from comment #4)\n> > > > (In reply to Sebb from comment #2)\n> > > > > Not sure I understand the use case.\n> > > > > \n> > > > > Surely if the PUT changes the target of the GET, the Etag should change?\n> > > > \n> > > > You're correct, the ETag value does change, and the CacheManager works\n> > > > properly with respect to this. However, I then want to create a new GET\n> > > > request specifically to retrieve the full entity, but I no longer have the\n> > > > ability to do this once the CacheManager is there.\n> > > \n> > > That's the part I don't understand.\n> > > Surely the next GET after the PUT won't return the cached entry?\n> > > If it does, then perhaps CM - or the site - is faulty?\n> > \n> > Technically, both CM and the site are working properly. But CM's behavior is\n> > too restrictive to allow me to do what I want. After the PUT, the 2xx\n> > response from the site includes the updated ETag value.\n> \n> But should a PUT response be cached?\n> \n> That seems wrong.\n\nAccording to http://tools.ietf.org/html/rfc2616#section-13.10, you're correct:\n\n\"Some HTTP methods MUST cause a cache to invalidate an entity. This is\n   either the entity referred to by the Request-URI, or by the Location\n   or Content-Location headers (if present). These methods are:\n\n      - PUT\n\n      - DELETE\n\n      - POST\"\n\nAlthough, I don't think CM is attempting to act as a true HTTP cache by this definition--I think it's instead acting as an embedded UA component, which is merely aware of cache-related headers. (Please correct me if I'm interpreting this wrong).\n\nhttp://jmeter.apache.org/usermanual/component_reference.html#HTTP_Cache_Manager\n\n\"If a sample is successful (i.e. has response code 2xx) then the Last-Modified and Etag (and Expired if relevant) values are saved for the URL. Before executing the next sample, the sampler checks to see if there is an entry in the cache, and if so, the If-Last-Modified and If-None-Match conditional headers are set for the request.\"\n\nBy that definition, CM is behaving appropriately, and it makes sense. I just think it should be expanded to also check if the sampler wants to override the cache header in use.\n\nSorry if I'm misinterpreting something, I'm not actively trying to confuse matters ;)", "id": 173481, "time": "2014-02-26T00:43:39Z", "bug_id": 56162, "creation_time": "2014-02-26T00:43:39Z", "is_private": false, "attachment_id": null}, {"count": 10, "tags": [], "bug_id": 56162, "attachment_id": null, "text": "I think the cache referred to in the RFC is a proxy cache.\nLocal caching (in the UA) is not quite the same.\n\nThe decription of CM agrees with its behaviour, but that behaviour may be incorrect ...\n\nThe HC4 code now has a Caching implementation; hopefully we can use that when we upgrade to the next release. However that may not be usable with the other HTTP implementations.\n\nIn the meantime, I think we need to check the method as well as the status.\n\nWe certainly want to cache GET.\nNot sure about HEAD, might be useful not to cache that as it is a way of testing the connection.\n\nAnd some methods we don't want to cache:\nPUT, POST, DELETE\n\nPerhaps we need a list of which ones to cache; this could be overridable.\n\nAlso, maybe there should be an \"Ignore Cache\" option.\nThis would correspond with the browser Shift-Reload feature to bypass the cache.\nNot sure if this should first remove any existing cache entry in case the request fails, or only update the cache on a successful response.\n\nI expect either of those would address your use-case.", "id": 173482, "time": "2014-02-26T01:21:37Z", "creator": "sebb@apache.org", "creation_time": "2014-02-26T01:21:37Z", "is_private": false}, {"count": 11, "tags": [], "bug_id": 56162, "attachment_id": null, "is_private": false, "id": 173494, "time": "2014-02-26T18:48:28Z", "creator": "mparker@computer.org", "creation_time": "2014-02-26T18:48:28Z", "text": "> I expect either of those would address your use-case.\n\nAgreed. Thanks."}, {"count": 12, "tags": [], "text": "URL: http://svn.apache.org/r1572319\nLog:\nHTTP Cache Manager should not cache PUT/POST etc.\nBugzilla Id: 56162\n\nModified:\n    jmeter/trunk/bin/jmeter.properties\n    jmeter/trunk/src/protocol/http/org/apache/jmeter/protocol/http/control/CacheManager.java\n    jmeter/trunk/xdocs/changes.xml", "attachment_id": null, "bug_id": 56162, "id": 173495, "time": "2014-02-26T22:48:48Z", "creator": "sebb@apache.org", "creation_time": "2014-02-26T22:48:48Z", "is_private": false}, {"count": 13, "tags": [], "bug_id": 56162, "attachment_id": null, "is_private": false, "id": 173509, "time": "2014-02-27T10:59:23Z", "creator": "sebb@apache.org", "creation_time": "2014-02-27T10:59:23Z", "text": "Note: if you want to try a nightly build with this fix, it will be in builds after version r1572319"}, {"count": 14, "tags": [], "bug_id": 56162, "attachment_id": null, "is_private": false, "id": 173641, "time": "2014-03-05T19:34:39Z", "creator": "mparker@computer.org", "creation_time": "2014-03-05T19:34:39Z", "text": "Confirmed in build r1574139, the etag value from the PUT response is not re-sent on the next GET when the CM is used.\n\nThanks!"}, {"count": 15, "tags": [], "bug_id": 56162, "attachment_id": null, "is_private": false, "id": 173642, "time": "2014-03-05T19:42:39Z", "creator": "mparker@computer.org", "creation_time": "2014-03-05T19:42:39Z", "text": "A note to anyone looking at this defect: the attached test case is not valid with respect to the fix. The attached test case still fails, because it makes the wrong assumption about the what the fix was going to be. I don't know of a public website against which I can provide a test case that matches the fix, so I validated it locally."}]