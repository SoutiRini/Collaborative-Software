[{"count": 0, "tags": [], "creator": "burner@core.binghamton.edu", "attachment_id": null, "is_private": false, "id": 15216, "time": "2002-05-01T04:25:27Z", "bug_id": 8689, "creation_time": "2002-05-01T04:25:27Z", "text": "I believe I have come accross a memory leak (and a patch that resolves it). I\nhave been using ant with Castor JDO and JUnit and running ant like \"ant clean\ntest test test test test ... \". I narrowed down the leak and was able to notice\nit using a simple java (that doesn't fork) task and running ant like \n\n\"ant clean `export i=1000; until [ \"$i\" -eq \"0\" ]; do echo run; i=$((i-1)); done`\"\n\nAnyway, I have patch that resolves the case for the java task, it patches\nagainst 1.4.1 and cvs HEAD:\n\nIndex: src/main/org/apache/tools/ant/AntClassLoader.java\n===================================================================\nRCS file:\n/home/cvspublic/jakarta-ant/src/main/org/apache/tools/ant/AntClassLoader.java,v\nretrieving revision 1.52\ndiff -u -r1.52 AntClassLoader.java\n--- src/main/org/apache/tools/ant/AntClassLoader.java   24 Apr 2002 06:16:46\n-0000      1.52\n+++ src/main/org/apache/tools/ant/AntClassLoader.java   1 May 2002 04:24:26 -0000\n@@ -1104,6 +1104,7 @@\n      * files are closed.\n      */\n     public void cleanup() {\n+        project.removeBuildListener(this);\n         pathComponents = null;\n         project = null;\n         for (Enumeration e = zipFiles.elements(); e.hasMoreElements();) {"}, {"count": 1, "tags": [], "text": "Created attachment 1747\nPatch to the cleanup() method of AntClassLoader to remove it from the project build listener when being cleaned up", "is_private": false, "bug_id": 8689, "id": 15217, "time": "2002-05-01T04:29:49Z", "creator": "burner@core.binghamton.edu", "creation_time": "2002-05-01T04:29:49Z", "attachment_id": 1747}, {"count": 2, "tags": [], "bug_id": 8689, "attachment_id": null, "id": 15221, "time": "2002-05-01T06:19:37Z", "creator": "conor@apache.org", "creation_time": "2002-05-01T06:19:37Z", "is_private": false, "text": "Patch applied to 1.5 branch - thanks"}, {"count": 3, "attachment_id": 1749, "bug_id": 8689, "is_private": false, "id": 15225, "time": "2002-05-01T08:23:17Z", "creator": "burner@core.binghamton.edu", "creation_time": "2002-05-01T08:23:17Z", "tags": [], "text": "Created attachment 1749\nzipfile of a test case that exemplifies this memory leak"}, {"count": 4, "tags": [], "text": "Shouldn't the patch be applied the 1.6 alpha/HEAD branch as well? \n", "is_private": false, "bug_id": 8689, "id": 15226, "time": "2002-05-01T08:34:43Z", "creator": "burner@core.binghamton.edu", "creation_time": "2002-05-01T08:34:43Z", "attachment_id": null}, {"count": 5, "attachment_id": null, "bug_id": 8689, "is_private": false, "id": 15227, "time": "2002-05-01T08:50:20Z", "creator": "conor@apache.org", "creation_time": "2002-05-01T08:50:20Z", "tags": [], "text": "It will eventually make it to HEAD but it is best to do that as a merge. These\nare best done at regular intervals (at the next beta build, for instance) rather\nthan piecemeal for each bug fix. Patience :-)"}, {"count": 6, "tags": [], "bug_id": 8689, "attachment_id": null, "id": 15228, "time": "2002-05-01T08:51:43Z", "creator": "burner@core.binghamton.edu", "creation_time": "2002-05-01T08:51:43Z", "is_private": false, "text": "Heh. OK, thanks for the clue. :-)"}, {"count": 7, "tags": [], "text": "I couldn't find this fix in the source of version 1.5.3-1 so I've patched my \nlocal version.  Please put this fix in the main code line.", "is_private": false, "id": 37777, "creator": "shaul@comsoft.co.il", "time": "2003-05-25T11:03:30Z", "bug_id": 8689, "creation_time": "2003-05-25T11:03:30Z", "attachment_id": null}, {"count": 8, "tags": [], "text": "The code is in buildFinished method.\n\nPlease refer to http://nagoya.apache.org/bugzilla/show_bug.cgi?id=9138 \nfor more information on why this was done.\n\nAlso if you want to see what has happened to code, look into CVS\nhttp://cvs.apache.org/viewcvs.cgi/ant/src/main/org/apache/tools/ant/AntClassLoader.java?only_with_tag=ANT_15_BRANCH\n", "attachment_id": null, "id": 37783, "creator": "conor@apache.org", "time": "2003-05-26T00:27:09Z", "bug_id": 8689, "creation_time": "2003-05-26T00:27:09Z", "is_private": false}, {"count": 9, "tags": [], "bug_id": 8689, "attachment_id": null, "id": 54941, "time": "2004-03-31T09:42:37Z", "creator": "mm_aa@yahoo.com", "creation_time": "2004-03-31T09:42:37Z", "is_private": false, "text": "I believe this bug should be reopened.\n\nI've added the Thread.dumpStack() to AntClassLoader constructor & cleanup\nmethods. I have plenty of constructor calls, but no cleanup calls.\n\nHere's one of the dumps from constructor:\n\njava.lang.Exception: Stack trace\n    at java.lang.Thread.dumpStack(Thread.java:1064)\n    at org.apache.tools.ant.AntClassLoader.<init>(AntClassLoader.java:240)\n    at org.apache.tools.ant.loader.AntClassLoader2.<init>(AntClassLoader2.java:56)\n    at sun.reflect.GeneratedConstructorAccessor13.newInstance(Unknown Source)\n    at\nsun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)\n    at java.lang.reflect.Constructor.newInstance(Constructor.java:274)\n    at java.lang.Class.newInstance0(Class.java:308)\n    at java.lang.Class.newInstance(Class.java:261)\n    at org.apache.tools.ant.Project.createClassLoader(Project.java:279)\n    at org.apache.tools.ant.Project.createClassLoader(Project.java:303)\n    at\norg.apache.tools.ant.util.ClasspathUtils.getUniqueClassLoaderForPath(ClasspathUtils.java:209)\n    at\norg.apache.tools.ant.util.ClasspathUtils.getClassLoaderForPath(ClasspathUtils.java:185)\n    at\norg.apache.tools.ant.util.ClasspathUtils$Delegate.getClassLoader(ClasspathUtils.java:403)\n    at org.apache.tools.ant.taskdefs.DefBase.createLoader(DefBase.java:136)\n    at org.apache.tools.ant.taskdefs.Definer.execute(Definer.java:163)\n    at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:269)\n    at org.apache.tools.ant.Task.perform(Task.java:364)\n    at org.apache.tools.ant.Target.execute(Target.java:301)\n    at org.apache.tools.ant.Target.performTasks(Target.java:328)\n    at org.apache.tools.ant.Project.executeTarget(Project.java:1215)\n    at org.apache.tools.ant.taskdefs.Ant.execute(Ant.java:383)\n    at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:269)\n    at org.apache.tools.ant.Task.perform(Task.java:364)\n    at org.apache.tools.ant.Target.execute(Target.java:301)\n    at org.apache.tools.ant.Target.performTasks(Target.java:328)\n    at org.apache.tools.ant.Project.executeTarget(Project.java:1215)\n    at org.apache.tools.ant.taskdefs.Ant.execute(Ant.java:383)\n    at org.apache.tools.ant.taskdefs.CallTarget.execute(CallTarget.java:107)\n    at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:269)\n    at org.apache.tools.ant.Task.perform(Task.java:364)\n    at org.apache.tools.ant.Target.execute(Target.java:301)\n    at org.apache.tools.ant.Target.performTasks(Target.java:328)\n    at org.apache.tools.ant.Project.executeTarget(Project.java:1215)\n    at org.apache.tools.ant.taskdefs.Ant.execute(Ant.java:383)\n    at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:269)\n    at org.apache.tools.ant.Task.perform(Task.java:364)\n    at org.apache.tools.ant.Target.execute(Target.java:301)\n    at org.apache.tools.ant.Target.performTasks(Target.java:328)\n    at org.apache.tools.ant.Project.executeTarget(Project.java:1215)\n    at org.apache.tools.ant.taskdefs.Ant.execute(Ant.java:383)\n    at org.apache.tools.ant.taskdefs.CallTarget.execute(CallTarget.java:107)\n    at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:269)\n    at org.apache.tools.ant.Task.perform(Task.java:364)\n    at org.apache.tools.ant.Target.execute(Target.java:301)\n    at org.apache.tools.ant.Target.performTasks(Target.java:328)\n    at org.apache.tools.ant.Project.executeTarget(Project.java:1215)\n    at org.apache.tools.ant.Project.executeTargets(Project.java:1063)\n    at org.apache.tools.ant.Main.runBuild(Main.java:632)\n    at org.apache.tools.ant.Main.startAnt(Main.java:183)\n    at org.apache.tools.ant.launch.Launcher.run(Launcher.java:197)\n    at org.apache.tools.ant.launch.Launcher.main(Launcher.java:56)"}, {"attachment_id": null, "tags": [], "creator": "mm_aa@yahoo.com", "text": "I was able to create a patch, which solves the problem. However it introduces\nanother one:\n\nantcall task now prints \"BUILD SUCCESSFUL\" at the end, and master build doesn't\nshow the correct build time. Another cleaner way should be found.\n\n*** src/main/org/apache/tools/ant/AntClassLoader.java\tWed Mar 31 13:53:00 2004\n--- src/main/org/apache/tools/ant/AntClassLoader.java\tWed Mar 31 13:53:00 2004\n***************\n*** 380,387 ****\n--- 380,390 ----\n              if (target != null && !\"\".equals(target)) {\n                  try {\n                      log(\"Entering \" + antFile + \"...\", Project.MSG_VERBOSE);\n+                     newProject.fireBuildStarted();\n                      newProject.executeTarget(target);\n+                     newProject.fireBuildFinished(null);\n                  } catch (BuildException ex) {\n+                     newProject.fireBuildFinished(ex);\n                      throw ProjectHelper.addLocationToBuildException(\n                          ex, getLocation());\n                } finally {\n", "count": 10, "id": 54946, "time": "2004-03-31T10:00:20Z", "bug_id": 8689, "creation_time": "2004-03-31T10:00:20Z", "is_private": false}, {"count": 11, "tags": [], "text": "Can anyone take a look at it?", "attachment_id": null, "bug_id": 8689, "id": 59486, "time": "2004-06-18T16:51:32Z", "creator": "mm_aa@yahoo.com", "creation_time": "2004-06-18T16:51:32Z", "is_private": false}, {"count": 12, "tags": [], "creator": "bodewig@apache.org", "attachment_id": null, "is_private": false, "id": 59712, "time": "2004-06-22T13:27:32Z", "bug_id": 8689, "creation_time": "2004-06-22T13:27:32Z", "text": "Mike, your patch is against Ant.java, not AntClassLoader.java, correct?\n\nI see how the sub-build gets a reference to all existing AntClassLoaders and those\nreferences never get reset, this is easier to fix without firing any events.  I'll\nlook into it."}, {"count": 13, "tags": [], "text": "Mike, I've committed a version to CVS that should clean up the AntClassLoaders\ncreated during the subbuilds.  Could you please try to check out CVS HEAD and give\nit a try?\n\nNext item on my list is searching for AntClassLoader instances that are not\nassociated to a project at all (if there are any).  They'd require explicit cleanup\nas well.", "is_private": false, "id": 59775, "creator": "bodewig@apache.org", "time": "2004-06-23T14:11:31Z", "bug_id": 8689, "creation_time": "2004-06-23T14:11:31Z", "attachment_id": null}, {"count": 14, "tags": [], "creator": "bodewig@apache.org", "attachment_id": null, "id": 59833, "time": "2004-06-24T11:23:55Z", "bug_id": 8689, "creation_time": "2004-06-24T11:23:55Z", "is_private": false, "text": "Yet another different version of the same improvement in CVS.  What is in CVS HEAD\nnow will probably become 1.6.2 soon, so I'd be thankful for some real world test."}, {"count": 15, "tags": [], "creator": "mm_aa@yahoo.com", "text": "Stefan, the fix seems to be OK. With this fix our build goes with -Xmx70M, while\nit should be -Xmx700M without.", "id": 59919, "time": "2004-06-26T14:36:26Z", "bug_id": 8689, "creation_time": "2004-06-26T14:36:26Z", "is_private": false, "attachment_id": null}, {"count": 16, "attachment_id": null, "bug_id": 8689, "is_private": false, "id": 59967, "time": "2004-06-28T07:48:01Z", "creator": "bodewig@apache.org", "creation_time": "2004-06-28T07:48:01Z", "tags": [], "text": "Thanks,\n\nfix has been merged into 1.6.2.\n"}]