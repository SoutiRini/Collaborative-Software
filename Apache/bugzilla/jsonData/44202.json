[{"count": 0, "attachment_id": null, "creator": "matzew@apache.org", "text": "<background>\nInside of Trinidad's EditableValueRenderer\n(org.apache.myfaces.trinidadinternal.renderkit.core.xhtml.EditableValueRenderer)\n\nthere getReadOnly(...), which is called by all inputXyz Renderers to\ncheck if the component should be rendered \"readOnly\" or not\nThat method checks if the component is readOnly and it also checks if\nthe underlying EL is readOnly.\n\nIf that method returns TRUE, the component is readOnly (and there for\na inputText isn't editable).\nmakes sense, so far.\n</background>\n\nHere is a \"use-case\"\n\n<tr:inputText label=\"Label a)\" value=\"\"/>\n(yes, may be stupid, but can happen...)\n\nSince the getReadOnly() checks if the EL is readOnly... it does this as well:\n\nValueExpression ve = getValueExpression(bean);\n\nIn Jetty (jetty-6.1.2rc2), which uses Sun/Glassfish/RI EL\n(com.sun.el.ValueExpressionImpl)\n==>\nIt returns an object that is readOnly (which is correct) and the\ngetExpressionString is \"\" (empty).\n\nIn tomcat 6. which uses this EL-Impl\n\"org.apache.jasper.el.JspValueExpression\", it returns NULL\n\n\nNow, I wonder what the correct EL behavior is.\nDiscussion on JSF-RI (Glasfish) and MyFaces-Dev agreed, that NULL may be wrong.", "id": 112752, "time": "2008-01-10T20:19:21Z", "bug_id": 44202, "creation_time": "2008-01-10T20:19:21Z", "tags": [], "is_private": false}, {"count": 1, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "text": "I have the trinidad demo up and running (once I added the taglib jars). Can you\nprovide a simple JSP that I can drop into this to demonstrate the problem please.", "id": 113000, "time": "2008-01-18T13:46:23Z", "bug_id": 44202, "creation_time": "2008-01-18T13:46:23Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 44202, "attachment_id": null, "id": 115578, "time": "2008-04-13T15:01:49Z", "creator": "markt@apache.org", "creation_time": "2008-04-13T15:01:49Z", "is_private": false, "text": "Stepping through the code shows a call to getExpressionString() will return \"\" rather than NULL. This was with the latest code from trunk."}]