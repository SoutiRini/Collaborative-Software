[{"count": 0, "tags": [], "bug_id": 58260, "attachment_id": null, "id": 184628, "time": "2015-08-18T17:18:27Z", "creator": "cgleckman@gmail.com", "creation_time": "2015-08-18T17:18:27Z", "is_private": false, "text": "When creating large excel spreadsheets with SXSSF, it seems that cell formatting stops being applied at row 32769 and works again on row 65538. The formatting I am trying to apply is right-align using setAlignment. Additionally, if I attempt to add borders, foreground color, bold, or any other sort of style, the same thing occurs."}, {"count": 1, "tags": [], "text": "Any chance you could create a small junit unit test that shows the problem?", "attachment_id": null, "bug_id": 58260, "id": 184629, "time": "2015-08-18T17:36:42Z", "creator": "apache@gagravarr.org", "creation_time": "2015-08-18T17:36:42Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 58260, "attachment_id": null, "id": 184630, "time": "2015-08-18T18:17:12Z", "creator": "cgleckman@gmail.com", "creation_time": "2015-08-18T18:17:12Z", "is_private": false, "text": "(In reply to Nick Burch from comment #1)\n> Any chance you could create a small junit unit test that shows the problem?\n\nUnfortunately this is a work program and cannot use jUnit (do not have the jar files or a way to add them to the system due to security protocols). I can make a sample java program that generates a 70k row excel document based off of a notepad txt document. Would that suffice?"}, {"count": 3, "tags": [], "creator": "apache@gagravarr.org", "text": "Ideally, we'd want a small program that used SXSSF to write the large number of rows, then read it back with XSSF to show that the formattings are missing on that row range. Doesn't have to be a junit test, if you can do a small standalone program to do that we can convert it. We do want it to check programatically though, rather than by eye, so we can use it to ensure the problem gets fixed + stays fixed!", "id": 184631, "attachment_id": null, "bug_id": 58260, "creation_time": "2015-08-18T18:27:32Z", "time": "2015-08-18T18:27:32Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 58260, "attachment_id": null, "id": 184635, "time": "2015-08-18T18:46:39Z", "creator": "cgleckman@gmail.com", "creation_time": "2015-08-18T18:46:39Z", "is_private": false, "text": "(In reply to Nick Burch from comment #3)\n> Ideally, we'd want a small program that used SXSSF to write the large number\n> of rows, then read it back with XSSF to show that the formattings are\n> missing on that row range. Doesn't have to be a junit test, if you can do a\n> small standalone program to do that we can convert it. We do want it to\n> check programatically though, rather than by eye, so we can use it to ensure\n> the problem gets fixed + stays fixed!\n\nI will go ahead and create a program to do this . I have never tried reading it back in to check the formatting since our heap size is restricted to 512 and when we tried to open the excel before (for a different reason) it blew the heap. Please give me a few hours and I will have it for you."}, {"count": 5, "tags": [], "text": "(In reply to Craig from comment #4)\n> (In reply to Nick Burch from comment #3)\n> > Ideally, we'd want a small program that used SXSSF to write the large number\n> > of rows, then read it back with XSSF to show that the formattings are\n> > missing on that row range. Doesn't have to be a junit test, if you can do a\n> > small standalone program to do that we can convert it. We do want it to\n> > check programatically though, rather than by eye, so we can use it to ensure\n> > the problem gets fixed + stays fixed!\n> \n> I will go ahead and create a program to do this . I have never tried reading\n> it back in to check the formatting since our heap size is restricted to 512\n> and when we tried to open the excel before (for a different reason) it blew\n> the heap. Please give me a few hours and I will have it for you.\n\nNick,\n\nI apologize but I am unable to figure out how to check if a cell, read from an existing excel document, has a format applied to it. Could you please provide guidance? If not I can submit the program I have now (which writes the excel from an input file) and you can add the code to check the formatting.", "is_private": false, "bug_id": 58260, "id": 184636, "time": "2015-08-18T20:26:34Z", "creator": "cgleckman@gmail.com", "creation_time": "2015-08-18T20:26:34Z", "attachment_id": null}, {"count": 6, "tags": [], "creator": "dominik.stadler@gmx.at", "text": "FYI, Bug 58005 talks about a similar problem with XSSF as well, maybe it is not only happening for SXSSF.", "id": 184637, "time": "2015-08-18T20:29:09Z", "bug_id": 58260, "creation_time": "2015-08-18T20:29:09Z", "is_private": false, "attachment_id": null}, {"count": 7, "tags": [], "text": "(In reply to Dominik Stadler from comment #6)\n> FYI, Bug 58005 talks about a similar problem with XSSF as well, maybe it is\n> not only happening for SXSSF.\n\nThank you Dominik. I did not see this before. This does seem like a similar issue. The only difference is their formatting fails much earlier then mine. I am not sure why. Additionally, my formatting seems to reapply itself at the 65538 row mark, which is makes this even more odd. My guess is that the issues are linked but I have been unable to resolve the issue myself after almost a week, which is why I made this bug report.", "attachment_id": null, "id": 184639, "creator": "cgleckman@gmail.com", "time": "2015-08-18T20:38:14Z", "bug_id": 58260, "creation_time": "2015-08-18T20:38:14Z", "is_private": false}, {"count": 8, "tags": [], "text": "Created attachment 33013\nstand alone program that creates an excel document with 70K rows\n\nThe code creates a single column with 70k rows. The rows are printed as strings and numbers to mimic the code I am using where I found the issue. If you look at the rows between 32768 and 65538 you will see that the right align formatting does not get applied since the rows printed as strings are aligned to the left. The rows printed as numbers are still aligned right, but that is because of the default formatting used within excel. \n\nNote: I am using the following jars which will need to be added for the program to run:\npoi-3.12-20150511.jar\npoi-ooxml-3.12-20150511.jar\npoi-ooxml-schemas-3.12-20150511.jar\nxmlbeans-2.6.0.jar", "is_private": false, "bug_id": 58260, "id": 184640, "time": "2015-08-18T20:49:54Z", "creator": "cgleckman@gmail.com", "creation_time": "2015-08-18T20:49:54Z", "attachment_id": 33013}, {"count": 9, "tags": [], "text": "Created attachment 33014\nInput file for sample.java\n\nMy apologies, I forgot to include the sample txt file that is used for input in sample.java", "attachment_id": 33014, "bug_id": 58260, "id": 184641, "time": "2015-08-18T20:50:53Z", "creator": "cgleckman@gmail.com", "creation_time": "2015-08-18T20:50:53Z", "is_private": false}, {"count": 10, "tags": [], "bug_id": 58260, "attachment_id": null, "id": 184642, "time": "2015-08-18T20:51:42Z", "creator": "cgleckman@gmail.com", "creation_time": "2015-08-18T20:51:42Z", "is_private": false, "text": "I am providing the code as it stands since I am going into a meeting and will not be able to do anything regarding this issue for the next few hours."}, {"count": 11, "tags": [], "bug_id": 58260, "attachment_id": null, "id": 184643, "time": "2015-08-18T23:36:45Z", "creator": "apache@gagravarr.org", "creation_time": "2015-08-18T23:36:45Z", "is_private": false, "text": "In your small program, you seem to be creating one cell style per row. Cell Styles are workbook-scoped, so you should create them up-front and re-use them when needed. What happens if you create your right-aligned cell style once, and re-use it on each row you want styled?"}, {"count": 12, "tags": [], "creator": "dominik.stadler@gmx.at", "text": "Yes, there should rarely be a reason to have that many styles if you properly re-use them. Also the resulting file will be much smaller.\n\nI tried this:\n* For SXSSF and XSSF with > 65535 the file is reported as \"corrupt\" by Excel, so it seems 65k is the hard limit here\n* For XSSF using up to 65k styles works as expected now\n* For SXSSF using up to 32k works, up to 65k does not work\n* For HSSF there is a different limit of 4k which is enforced correctly already.\n\nSo I see two things that we can look at here:\n* For SXSSF fix styles up to 65k\n* For XSSF and SXSSF fail with an error if more styles are added", "id": 184648, "time": "2015-08-19T10:28:55Z", "bug_id": 58260, "creation_time": "2015-08-19T10:28:55Z", "is_private": false, "attachment_id": null}, {"count": 13, "tags": [], "creator": "dominik.stadler@gmx.at", "text": "We have fixed this in r1696586 as follows:\n* The check for the maximum number of styles was not effective for XSSF/SXSSF, this should now work and throw an exception if you try to create more than 64000 styles (you should really re-use them anyway!)\n* Fixed writing out an SXSSFWorkbook with more than 32767 styles, unfortunately the API uses \"short\" in some places which needs to be handled with care unless we can adjust the API to \"int\" here.", "id": 184652, "time": "2015-08-19T13:38:54Z", "bug_id": 58260, "creation_time": "2015-08-19T13:38:54Z", "is_private": false, "attachment_id": null}, {"count": 14, "tags": [], "text": "*** Bug 58005 has been marked as a duplicate of this bug. ***", "is_private": false, "bug_id": 58260, "id": 184654, "time": "2015-08-19T13:42:42Z", "creator": "dominik.stadler@gmx.at", "creation_time": "2015-08-19T13:42:42Z", "attachment_id": null}, {"count": 15, "tags": [], "bug_id": 58260, "is_private": false, "id": 184656, "attachment_id": null, "creator": "cgleckman@gmail.com", "creation_time": "2015-08-19T15:11:52Z", "time": "2015-08-19T15:11:52Z", "text": "Hi Nick and Dominik,\n\nThank you for your responses. I was waiting to reply until I was at work and able to double check my results. I was unaware that you could reuse styles, so that is my mistake. When I stop creating the styles in each loop my problems were resolved. I apologize for creating a bug ticket for something that was clearly not actually a bug. I am glad to see, however, that some adjustments were made for anyone who needs more than 32768 styles. \n\nThank you and sorry again."}, {"count": 16, "tags": [], "bug_id": 58260, "attachment_id": null, "id": 184950, "time": "2015-09-03T19:28:40Z", "creator": "dominik.stadler@gmx.at", "creation_time": "2015-09-03T19:28:40Z", "is_private": false, "text": "*** Bug 53209 has been marked as a duplicate of this bug. ***"}, {"count": 17, "tags": [], "bug_id": 58260, "text": "Spreadsheets that use naive style creation end up with very large styles tables with duplicate entries. Perhaps the root cause here is we don't have a great way to do either of the following:\n1) Make a function to query the styles table if for a given style. The problem here is that you can't create a style to query the styles table without necessarily adding that style to the style table. If I want to start with an existing style, and slightly modify it (say, change the font to bold), I don't have a great way to see if there is another style that is bold in the styles table. Out of laziness for writing my own code that can compare styles, I just create a new style. Do this in a for loop and you've got problems.\n2) when saving a workbook or calling a function on-demand, find all duplicate styles in the styles table and deduplicate them, updating all cell references to the deduplicated style. Microsoft Excel seems to deduplucate styles on workbook save.\n\nI can open up a new bug if these fixes would help prevent issues like seen in this bug.", "id": 184982, "time": "2015-09-05T18:13:46Z", "creator": "onealj@apache.org", "creation_time": "2015-09-05T18:13:46Z", "is_private": false, "attachment_id": null}, {"count": 18, "tags": [], "bug_id": 58260, "attachment_id": null, "text": "For HSSF we have HSSFOptimiser - https://poi.apache.org/apidocs/org/apache/poi/hssf/usermodel/HSSFOptimiser.html - but there's no SS generic or XSSF equivalent", "id": 184993, "time": "2015-09-06T22:34:21Z", "creator": "apache@gagravarr.org", "creation_time": "2015-09-06T22:34:21Z", "is_private": false}]