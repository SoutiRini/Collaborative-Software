[{"attachment_id": null, "tags": [], "bug_id": 14971, "text": "In summary, it just runs java -cp $includedruntime, ignoring what already is in\nclasspath.\n\nHere's relevant portion target and output:\n<target name=\"test\" depends=\"compile\" description=\"junit test run\">\n\t<echo message=\"${java.class.path}\"/>\n\t<junit printsummary=\"withOutAndErr\" haltonfailure=\"true\" fork=\"yes\"\nincludeantruntime=\"yes\">\n\t\t<formatter type=\"plain\"/>\n\t\t<test name=\"ledestin.test.JUnitTest\"/>\n\t</junit>\n</target>\n\n\ntest:\n     [echo] c:\\bin\\java\\ant\\lib\\xml-apis.jar;c:\\bin\\java\\ant\\lib\\xercesImpl.jar;\nc:\\bin\\java\\ant\\lib\\optional.jar;c:\\bin\\java\\ant\\lib\\ant.jar;c:\\bin\\jdk1.4\\lib\\t\nools.jar;c:\\home\\ledestin\\projects\\tmp\\latest.builds;c:\\bin\\java\\ant\\lib\\ant.jar\n;c:\\bin\\java\\ant\\lib\\optional.jar;c:\\bin\\java\\junit\\junit.jar;c:\\progra~1\\JEDIT4\n~1.1PR\\jedit.jar;c:\\bin\\jdk1.4\\lib\\tools.jar\n    [junit] Implicitly adding C:\\bin\\Java\\junit\\junit.jar;C:\\bin\\Java\\ant\\lib\\an\nt.jar;C:\\bin\\Java\\ant\\lib\\optional.jar to CLASSPATH\n    [junit] Running ledestin.test.JUnitTest\n    [junit] Executing 'C:\\bin\\jdk1.4\\jre\\bin\\java.exe' with arguments:\n    [junit] '-classpath'\n    [junit] 'C:\\bin\\Java\\junit\\junit.jar;C:\\bin\\Java\\ant\\lib\\ant.jar;C:\\bin\\Java\n\\ant\\lib\\optional.jar'\n    [junit] 'org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner'\n    [junit] 'ledestin.test.JUnitTest'\n    [junit] 'filtertrace=true'\n    [junit] 'haltOnError=false'\n    [junit] 'haltOnFailure=true'\n    [junit] 'formatter=org.apache.tools.ant.taskdefs.optional.junit.SummaryJUnit\nResultFormatter'\n    [junit] 'showoutput=false'\n    [junit] 'formatter=org.apache.tools.ant.taskdefs.optional.junit.PlainJUnitRe\nsultFormatter,C:\\home\\ledestin\\projects\\test\\TEST-ledestin.test.JUnitTest.txt'\n    [junit] 'propsfile=C:\\home\\ledestin\\projects\\test\\junit1586260465.properties\n'\n    [junit]\n    [junit] The ' characters around the executable and arguments are\n    [junit] not part of the command.\n    [junit] Tests run: 1, Failures: 0, Errors: 1, Time elapsed: 0 sec", "count": 0, "id": 27185, "time": "2002-11-30T05:50:12Z", "creator": "ledestin@amur.ru", "creation_time": "2002-11-30T05:50:12Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 14971, "attachment_id": null, "text": "Hmm, I see where the problem lies.\n\nA workaround for you would be something like this:\n\n<property env=\"env\"/>\n<junit ...>\n  <classpath path=\"${env.CLASSPATH}\"/>\n  ...\n</junit>\n\nWe want forked <junit> to become independent of Ant's classpath and in particular\nthe stuff in ANT_HOME/lib, that's why we don't include the system classpath\nexplicitly here.\n\nIf includeantruntime is false, we will invoke the spawned VM without any\nclasspath setting to ensure you get whatever is in your environment.  If it is\ntrue, we explicitly pass the jars, just as described and thus overwrite\nCLASSPATH, this is not intentional.\n\nThe only way around this is really going to the native environment, as \njava.class.path has already been tainted by ANT_HOME/lib.  I'll try to come up\nwith a solution.", "id": 34168, "time": "2003-03-31T11:57:28Z", "creator": "bodewig@apache.org", "creation_time": "2003-03-31T11:57:28Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 14971, "attachment_id": null, "text": "Ant will now grab the content of the CLASSPATH environment variable and prepend\nthat to the classpath argument if you use includeantruntime=\"true\".\n\nFixed with nightly build 2003-09-20.\n", "id": 44330, "time": "2003-09-19T09:21:03Z", "creator": "bodewig@apache.org", "creation_time": "2003-09-19T09:21:03Z", "is_private": false}]