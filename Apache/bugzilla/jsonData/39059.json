[{"count": 0, "tags": [], "text": "These are patches to be able to compile apr on SkyOS.\nThe modifications are done with #ifdef SKYOS to prevent breaking the other\nplatforms.\n\nNeeded modification: \n* mkfifo is not available in SkyOS so I needed to work around this.\n* switched the order of 2 includes to solve undefined struct iovec\n* removed a function definition, although this should not generate errors in\nnormal conditions. However there might be a compiler issue, so this is the\ncurrent solution.\n\n\npipe.c.patch: file_io/unix/pipe.c\n=================== cut here ==============\nIndex: file_io/unix/pipe.c\n===================================================================\n--- file_io/unix/pipe.c\t(revision 79)\n+++ file_io/unix/pipe.c\t(working copy)\n@@ -45,7 +45,7 @@\n       fd_flags &= ~O_NDELAY;\n #  elif defined(O_FNDELAY)\n       fd_flags &= ~O_FNDELAY;\n-#  else \n+#  else\n       /* XXXX: this breaks things, but an alternative isn't obvious...*/\n       return APR_ENOTIMPL;\n #  endif\n@@ -61,8 +61,8 @@\n       }\n #  else /* \"classic\" BeOS doesn't support this at all */\n       return APR_ENOTIMPL;\n-#  endif \n- \n+#  endif\n+\n #endif /* !BEOS_BLOCKING */\n \n     thepipe->blocking = BLK_ON;\n@@ -87,7 +87,7 @@\n       if (fcntl(thepipe->filedes, F_SETFL, fd_flags) == -1) {\n           return errno;\n       }\n-    \n+\n #else /* BEOS_BLOCKING */\n \n #  if BEOS_BONE /* This only works on BONE 0-6 */\n@@ -139,7 +139,7 @@\n                                              apr_pool_t *pool)\n {\n     int *dafile = thefile;\n-    \n+\n     (*file) = apr_pcalloc(pool, sizeof(apr_file_t));\n     (*file)->pool = pool;\n     (*file)->eof_hit = 0;\n@@ -183,7 +183,7 @@\n     if (pipe(filedes) == -1) {\n         return errno;\n     }\n-    \n+\n     (*in) = (apr_file_t *)apr_pcalloc(pool, sizeof(apr_file_t));\n     (*in)->pool = pool;\n     (*in)->filedes = filedes[0];\n@@ -222,7 +222,15 @@\n     return APR_SUCCESS;\n }\n \n-APR_DECLARE(apr_status_t) apr_file_namedpipe_create(const char *filename, \n+#ifdef SKYOS\n+/* patch for SkyOS to fix unsupported mkfifo, added by Peter Speybrouck,\n3/3/2006 */\n+int mkfifo(const char *filename,int mode){\n+\tprintd(\"apr: file_io/unix/pipe.c:230: mkfifo not supported/implemented\");\n+\treturn -1;\n+}\n+#endif\n+\n+APR_DECLARE(apr_status_t) apr_file_namedpipe_create(const char *filename,\n                                                     apr_fileperms_t perm,\napr_pool_t *pool)\n {\n     mode_t mode = apr_unix_perms2mode(perm);\n@@ -231,7 +239,7 @@\n         return errno;\n     }\n     return APR_SUCCESS;\n-} \n+}\n \n-    \n \n+\n\n=================== cut here ==============\n\n\napr_strings.patch:\n=================== cut here ==============\nIndex: include/apr_strings.h\n===================================================================\n--- include/apr_strings.h\t(revision 80)\n+++ include/apr_strings.h\t(working copy)\n@@ -61,7 +61,7 @@\n \n /**\n  * @defgroup apr_strings String routines\n- * @ingroup APR \n+ * @ingroup APR\n  * @{\n  */\n \n@@ -76,7 +76,7 @@\n APR_DECLARE(int) apr_strnatcmp(char const *a, char const *b);\n \n /**\n- * Do a natural order comparison of two strings ignoring the case of the \n+ * Do a natural order comparison of two strings ignoring the case of the\n  * strings.\n  * @param a The first string to compare\n  * @param b The second string to compare\n@@ -109,7 +109,7 @@\n APR_DECLARE(char *) apr_pstrmemdup(apr_pool_t *p, const char *s, apr_size_t n);\n \n /**\n- * duplicate the first n characters of a string into memory allocated \n+ * duplicate the first n characters of a string into memory allocated\n  * out of a pool; the new string will be null-terminated\n  * @param p The pool to allocate out of\n  * @param s The string to duplicate\n@@ -144,11 +144,12 @@\n  * @param nbytes (output) strlen of new string (pass in NULL to omit)\n  * @return The new string\n  */\n+#ifndef SKYOS\n APR_DECLARE(char *) apr_pstrcatv(apr_pool_t *p, const struct iovec *vec,\n                                  apr_size_t nvec, apr_size_t *nbytes);\n-\n+#endif\n /**\n- * printf-style style printing routine.  The data is output to a string \n+ * printf-style style printing routine.  The data is output to a string\n  * allocated from a pool\n  * @param p The pool to allocate out of\n  * @param fmt The format of the string\n@@ -158,7 +159,7 @@\n APR_DECLARE(char *) apr_pvsprintf(apr_pool_t *p, const char *fmt, va_list ap);\n \n /**\n- * printf-style style printing routine.  The data is output to a string \n+ * printf-style style printing routine.  The data is output to a string\n  * allocated from a pool\n  * @param p The pool to allocate out of\n  * @param fmt The format of the string\n@@ -183,10 +184,10 @@\n  * <PRE>\n  * Note the differences between this function and strncpy():\n  *  1) strncpy() doesn't always NUL terminate; apr_cpystrn() does.\n- *  2) strncpy() pads the destination string with NULs, which is often \n+ *  2) strncpy() pads the destination string with NULs, which is often\n  *     unnecessary; apr_cpystrn() does not.\n  *  3) strncpy() returns a pointer to the beginning of the dst string;\n- *     apr_cpystrn() returns a pointer to the NUL terminator of dst, \n+ *     apr_cpystrn() returns a pointer to the NUL terminator of dst,\n  *     to allow a check for truncation.\n  * </PRE>\n  */\n@@ -203,7 +204,7 @@\n APR_DECLARE(char *) apr_collapse_spaces(char *dest, const char *src);\n \n /**\n- * Convert the arguments to a program from one string to an array of \n+ * Convert the arguments to a program from one string to an array of\n  * strings terminated by a NULL pointer\n  * @param arg_str The arguments to convert\n  * @param argv_out Output location.  This is a pointer to an array of strings.\n@@ -214,7 +215,7 @@\n                                                apr_pool_t *token_context);\n \n /**\n- * Split a string into separate null-terminated tokens.  The tokens are \n+ * Split a string into separate null-terminated tokens.  The tokens are\n  * delimited in the string by one or more characters from the sep\n  * argument.\n  * @param str The string to separate; this should be specified on the\n@@ -310,7 +311,7 @@\n  *   digits are prefixed with '0x', in which case it will be treated as\n  *   base 16.\n  */\n-APR_DECLARE(apr_status_t) apr_strtoff(apr_off_t *offset, const char *buf, \n+APR_DECLARE(apr_status_t) apr_strtoff(apr_off_t *offset, const char *buf,\n                                       char **end, int base);\n \n /**\nIndex: strings/apr_strings.c\n===================================================================\n--- strings/apr_strings.c\t(revision 82)\n+++ strings/apr_strings.c\t(working copy)\n@@ -47,9 +47,14 @@\n  */\n \n #include \"apr.h\"\n+#ifdef SKYOS\n+#include \"apr_private.h\"\n #include \"apr_strings.h\"\n+#else\n+#include \"apr_strings.h\"\n+#include \"apr_private.h\"\n+#endif\n #include \"apr_general.h\"\n-#include \"apr_private.h\"\n #include \"apr_lib.h\"\n #define APR_WANT_STDIO\n #define APR_WANT_STRFUNC\n@@ -161,7 +166,7 @@\n         else {\n             len = strlen(argp);\n         }\n- \n+\n         memcpy(cp, argp, len);\n         cp += len;\n     }\n@@ -197,7 +202,7 @@\n \n     /* Allocate the required string */\n     res = (char *) apr_palloc(a, len + 1);\n-    \n+\n     /* Pass two --- copy the argument strings into the result space */\n     src = vec;\n     dst = res;\n@@ -292,7 +297,7 @@\n      * in both the mult and add/sub operation.  Unlike the bsd impl,\n      * we also work strictly in a signed int64 word as we haven't\n      * implemented the unsigned type in win32.\n-     * \n+     *\n      * Set 'any' if any `digits' consumed; make it negative to indicate\n      * overflow.\n      */\n@@ -319,7 +324,7 @@\n \telse if (c >= 's' && c <= 'z')\n \t    c -= 'z' - 28;\n #else\n-#error \"CANNOT COMPILE apr_strtoi64(), only ASCII and EBCDIC supported\" \n+#error \"CANNOT COMPILE apr_strtoi64(), only ASCII and EBCDIC supported\"\n #endif\n \telse\n \t    break;\n\n=================== cut here ==============", "attachment_id": null, "bug_id": 39059, "id": 87100, "time": "2006-03-22T12:47:54Z", "creator": "peter.speybrouck@gmail.com", "creation_time": "2006-03-22T12:47:54Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 39059, "text": "Created attachment 17939\npatch for apr_strings", "id": 87101, "time": "2006-03-22T12:49:31Z", "creator": "peter.speybrouck@gmail.com", "creation_time": "2006-03-22T12:49:31Z", "is_private": false, "attachment_id": 17939}, {"count": 2, "tags": [], "text": "Created attachment 17940\npatch for apr_strings", "attachment_id": 17940, "id": 87102, "creator": "peter.speybrouck@gmail.com", "time": "2006-03-22T12:55:31Z", "bug_id": 39059, "creation_time": "2006-03-22T12:55:31Z", "is_private": false}, {"count": 3, "tags": [], "creator": "peter.speybrouck@gmail.com", "attachment_id": 17941, "text": "Created attachment 17941\npatch for file_io/unix/pipe.ce", "id": 87103, "time": "2006-03-22T12:57:39Z", "bug_id": 39059, "creation_time": "2006-03-22T12:57:39Z", "is_private": false}, {"count": 4, "tags": [], "creator": "rooneg@electricjellyfish.net", "attachment_id": null, "text": "Like 98% of those patches are bogus whitespace changes that are just obfuscating\nthings and making it difficult to see what's actually being changed.  Could you\nplease repost with just the actual changes needed to make things work?\n\nOn top of that, the part replacing mkfifo seems quite wrong to me.  If mkfifo\ndoesn't exist we should detect that somehow and not use it, not replace it with\na printf that says it's not there, that can't possibly do what the user expected\nwhen they called that function.", "id": 87117, "time": "2006-03-22T19:00:03Z", "bug_id": 39059, "creation_time": "2006-03-22T19:00:03Z", "is_private": false}, {"count": 5, "tags": [], "text": "Marking NEEDINFO.\n\nPeter, please supply new patches which:\n\n* Do not contain spurious whitespace changes. This is very important, as it\nmakes things very hard to review when the effective changes are concealed in a\nmass of irrelevancies.\n\n* Use the method I described on IRC to deal with mkfifo. Ask for clarification\nif what I said is not sufficiently detailed for you:\n\n[08/03/2006 15:37] <maxb> Darknesss: add an autoconf test (if you know autoconf)\nchecking for the function, and then use #ifndef HAVE_MKFIFO return APR_ENOTIMPL;\n#endif in pipe.c\n[08/03/2006 15:37] <Darknesss> I don't know autoconf...\n[08/03/2006 15:39] <maxb> Just adding the following line somewhere in\nconfigure.in, and rerunning ./buildconf, should work:\n[08/03/2006 15:39] <maxb> AC_CHECK_FUNCS(mkfifo)\n[08/03/2006 15:42] <Darknesss> ok, but what will be the result?\n[08/03/2006 15:43] <Darknesss> will it just stop the script or leave out that code?\n[08/03/2006 15:44] <chipig> leave out that code\n[08/03/2006 15:44] <Darknesss> ok, sounds good :)\n\n* Do not simply switch the order of includes, or remove the declaration of\napr_pstrcatv, since these changes are only concealing the underlying problems,\nnot solving them. If you would like help trying to diagnose the underlying\nproblems, then please post to dev@apr.a.o, or try to catch someone interested on\n#apr.\n\n\nThanks,\nMax.", "attachment_id": null, "id": 87517, "creator": "maxb@apache.org", "time": "2006-04-03T00:07:20Z", "bug_id": 39059, "creation_time": "2006-04-03T00:07:20Z", "is_private": false}, {"count": 6, "tags": [], "text": "I have good news!\n\napr-1.2.7 compiles on skyos without having to patch the sources.\n\nThe patches attached here are no longer needed (and were bad anyway)", "attachment_id": null, "id": 91904, "creator": "peter.speybrouck@gmail.com", "time": "2006-08-04T17:01:24Z", "bug_id": 39059, "creation_time": "2006-08-04T17:01:24Z", "is_private": false}, {"count": 7, "tags": [], "creator": "jorton@redhat.com", "attachment_id": null, "text": "Marking this invalid in that case, there was a different PR for the actual bugs\nwhich got fixed.", "id": 92002, "time": "2006-08-07T14:05:53Z", "bug_id": 39059, "creation_time": "2006-08-07T14:05:53Z", "is_private": false}]