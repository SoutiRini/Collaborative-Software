[{"count": 0, "tags": [], "creator": "lmoore@tump.com", "is_private": false, "id": 2869, "creation_time": "2001-06-11T16:42:58Z", "time": "2001-06-11T16:42:58Z", "bug_id": 2122, "text": "version 1.2\n\nusing character expressions such as [ac-z] or [ace-z] seem to lead to\nbroken regexps.  the following two tests for RETest should show the\nproblem:\n#149\n[ac-z]+\nace\nYES\nace\n\n#150\n[ace-z]+\nace\nYES\nace\n\nthe results that i get are:\n149. [ac-z]+\n\n   Match against: 'ace'\n   Match: YES\n   Paren count: 1\n   Paren 0 : ce\n\n\n*******************************************************\n*********************  FAILURE!  **********************\n*******************************************************\n\n\nRegister 0 should be = \"ace\", but is \"ce\" instead.\n\n150. [ace-z]+\n\n   Match against: 'ace'\n   Match: YES\n   Paren count: 1\n   Paren 0 : a\n\n\n*******************************************************\n*********************  FAILURE!  **********************\n*******************************************************\n\n\nRegister 0 should be = \"ace\", but is \"a\" instead.\n\nit would seem that the range is somehow invalidating the previous simple\ncharacter.\n\non a related note, the only way to match '-' in a character class is to \nescape it and add it at the end.  that seems wrong.", "attachment_id": null}, {"count": 1, "tags": [], "creator": "gholam@xtra.co.nz", "is_private": false, "text": "\n\n*** This bug has been marked as a duplicate of 2121 ***", "id": 5247, "time": "2001-09-08T15:50:04Z", "bug_id": 2122, "creation_time": "2001-09-08T15:50:04Z", "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 2122, "attachment_id": null, "id": 36496, "creation_time": "2003-05-02T01:27:40Z", "time": "2003-05-02T01:27:40Z", "creator": "vgritsenko@apache.org", "text": "Fixed. See Bug #19329", "is_private": false}]