[{"count": 0, "tags": [], "bug_id": 6436, "text": "When using the taglib library, I'm tring to format a java.util.Date with a \npattern as well as a timezone.  However, I can't seem to get the Timzone piece \nto work.  Here's a sample piece of code...\n\n<dt:timeZone id=\"tz\">myObject.getTimeZone().getID()</dt:timeZone>\n<dt:format pattern=\"MM/dd/yy hh:mm:ss a z\" timeZone=\"tz\"\n    date=\"<=item.getDateDue()%>\"></dt:format>\n\nWhere myObject.getTimeZone().getID() returns \"MST\" and\n      item.getDateDue() returns a java.util.Date\n\nWhenever I run this code, the output always shows in GMT.", "id": 10660, "time": "2002-02-13T20:22:09Z", "creator": "ralph@dotech.com", "creation_time": "2002-02-13T20:22:09Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "creator": "glenn@apache.org", "attachment_id": null, "is_private": false, "id": 12808, "time": "2002-04-04T18:11:23Z", "bug_id": 6436, "creation_time": "2002-04-04T18:11:23Z", "text": "Sorry it has taken me this long to look into this.\nI see a problem with your code.\n\n<dt:timeZone id=\"tz\">myObject.getTimeZone().getID()</dt:timeZone>\n\nThe above tries to set the time zone to the string literal\n\"myObject.getTimeZone().getID()\" instead of its value.  If the\ntimezone tag is passed an invalid timezone string it uses the\nsystem default.\n\nTry this:\n\n<dt:timeZone id=\"tz\"><%= myObject.getTimeZone().getID() %></dt:timeZone>\n\nThe problem looks like it is in your code, not the taglib.\n"}]