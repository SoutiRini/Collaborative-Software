[{"count": 0, "attachment_id": null, "creator": "knst.kolinko@gmail.com", "text": "eproducible in 7.0.27 and in current 7.0.x.\n\nTo reproduce:\n1. Start \"catalina.bat start -security\"\n2. Go to\n[1] http://localhost:8080/examples/jsp/security/protected/index.jsp\n\n3. Expected result: Display login form.\nActual result:\n Blank page. Access log shows:\n127.0.0.1 - - [06/Jun/2012:04:35:23 +0400] \"GET /examples/jsp/security/protected/index.jsp HTTP/1.1\" 200 -\n\nThat is, response code is 200, count of bytes is '-'.\n\n\nIf I stay on [1] and keep refreshing it, the problem persists.\n\nBut if I visit [2], then [1] starts to work. I suspect that some class needs to be preloaded.\n\n[2] http://localhost:8080/examples/", "id": 159732, "time": "2012-06-06T00:51:35Z", "bug_id": 53366, "creation_time": "2012-06-06T00:51:35Z", "tags": [], "is_private": false}, {"count": 1, "attachment_id": null, "bug_id": 53366, "text": "I turned on fine logging for coyote, catalina and tomcat.\n\nThere are no stacktraces being printed.\n\nThe first notable difference between failed run with -security and\nsuccessful run without -security is that in the failed run I see\n\nFINE: loadClass(javax.servlet.jsp.SkipPageException, false)\n\nwhile on successful run I see no such class being loaded.\n\n\nThe second is that on successful run I see debug messages from\n org.apache.tomcat.util.buf.UEncoder\nwhile on failed one I do not see them.\n\nLooking into generated Java code, login_jsp.java,  I see the following block:\n\n[[[\n    try {\n      response.setContentType(\"text/html\");\n      pageContext = _jspxFactory.getPageContext(this, request, response,\n      \t\t\tnull, true, 8192, true);\n      _jspx_page_context = pageContext;\n      application = pageContext.getServletContext();\n      config = pageContext.getServletConfig();\n      session = pageContext.getSession();\n      out = pageContext.getOut();\n      _jspx_out = out;\n\n      out.write(\"\\r\\n\");\n      out.write(\"<html>\\r\\n\");\n      out.write(\"<head>\\r\\n\");\n      out.write(\"<title>Login Page for Examples</title>\\r\\n\");\n      out.write(\"<body bgcolor=\\\"white\\\">\\r\\n\");\n      out.write(\"<form method=\\\"POST\\\" action='\");\n      out.print( response.encodeURL(\"j_security_check\") );\n      (...)\n    } catch (java.lang.Throwable t) {\n      if (!(t instanceof javax.servlet.jsp.SkipPageException)){\n        out = _jspx_out;\n        if (out != null && out.getBufferSize() != 0)\n          try { out.clearBuffer(); } catch (java.io.IOException e) {}\n        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);\n      }\n    } finally {\n      _jspxFactory.releasePageContext(_jspx_page_context);\n    }\n]]]\n\n\nSo, two conclusions:\n1. The failure occurs above \"response.encodeURL(\"j_security_check\")\" call.\n2. I suspect that _jspx_page_context is null.  In that case the Throwable in the catch block is silently swallowed.\n\nThis effect reminds me bug 48097,\nhttps://issues.apache.org/bugzilla/show_bug.cgi?id=48097#c7\n\nI think if (_jspx_page_context is null) we could write something to debug logging, as these issues keep occurring and seeing a stacktrace should help.", "id": 159738, "time": "2012-06-06T02:04:38Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2012-06-06T02:04:38Z", "tags": [], "is_private": false}, {"count": 2, "tags": [], "bug_id": 53366, "text": "I improved logging in r1346885\n\nStacktrace:\n[[[\n06-Jun-2012 17:28:01.640 SEVERE [http-bio-8080-exec-1] org.apache.catalina.core.ApplicationContext.log jsp: access denied (java.lang.RuntimePermission accessClassInPackage.org.apache.tomcat.util.http.parser)\n java.security.AccessControlException: access denied (java.lang.RuntimePermission accessClassInPackage.org.apache.tomcat.util.http.parser)\n\tat java.security.AccessControlContext.checkPermission(AccessControlContext.java:374)\n\tat java.security.AccessController.checkPermission(AccessController.java:546)\n\tat java.lang.SecurityManager.checkPermission(SecurityManager.java:532)\n\tat java.lang.SecurityManager.checkPackageAccess(SecurityManager.java:1512)\n\tat sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:298)\n\tat java.lang.ClassLoader.loadClass(ClassLoader.java:295)\n\tat java.lang.ClassLoader.loadClass(ClassLoader.java:247)\n\tat org.apache.catalina.connector.Response.setContentType(Response.java:708)\n\tat org.apache.jsp.jsp.security.protected_.login_jsp._jspService(login_jsp.java:52)\n\tat org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:722)\n\tat org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:432)\n\tat org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:390)\n\tat org.apache.jasper.servlet.JspServlet.service(JspServlet.java:334)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:722)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:597)\n\tat org.apache.catalina.security.SecurityUtil$1.run(SecurityUtil.java:274)\n\tat org.apache.catalina.security.SecurityUtil$1.run(SecurityUtil.java:271)\n\tat java.security.AccessController.doPrivileged(Native Method)\n\tat javax.security.auth.Subject.doAsPrivileged(Subject.java:517)\n\tat org.apache.catalina.security.SecurityUtil.execute(SecurityUtil.java:306)\n\tat org.apache.catalina.security.SecurityUtil.doAsPrivilege(SecurityUtil.java:166)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:299)\n\tat org.apache.catalina.core.ApplicationFilterChain.access$000(ApplicationFilterChain.java:57)\n\tat org.apache.catalina.core.ApplicationFilterChain$1.run(ApplicationFilterChain.java:193)\n\tat org.apache.catalina.core.ApplicationFilterChain$1.run(ApplicationFilterChain.java:189)\n\tat java.security.AccessController.doPrivileged(Native Method)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:188)\n\tat org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:670)\n\tat org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:457)\n\tat org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:382)\n\tat org.apache.catalina.core.ApplicationDispatcher.access$000(ApplicationDispatcher.java:67)\n\tat org.apache.catalina.core.ApplicationDispatcher$PrivilegedForward.run(ApplicationDispatcher.java:102)\n\tat org.apache.catalina.core.ApplicationDispatcher$PrivilegedForward.run(ApplicationDispatcher.java:89)\n\tat java.security.AccessController.doPrivileged(Native Method)\n\tat org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:301)\n\tat org.apache.catalina.authenticator.FormAuthenticator.forwardToLoginPage(FormAuthenticator.java:390)\n\tat org.apache.catalina.authenticator.FormAuthenticator.authenticate(FormAuthenticator.java:256)\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:546)\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:146)\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:74)\n\tat org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:911)\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:90)\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:407)\n\tat org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:995)\n\tat org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:573)\n\tat org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:145)\n\tat org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor.run(JIoEndpoint.java:311)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)\n\tat java.lang.Thread.run(Thread.java:662)\n]]]\n\nIf I add the following line to \"grant {};\" section of catalina.policy,\nthe problem disappears:\n\n    permission java.lang.RuntimePermission \"accessClassInPackage.org.apache.tomcat.util.http.parser\";\n\nIf, alternatively, I preload those classes by adding the following attribute to JreMemoryLeakPreventionListener in server.xml,\nthe problem disappears as well:\n\nclassesToInitialize=\"\norg.apache.tomcat.util.http.parser.AstAttribute,\norg.apache.tomcat.util.http.parser.AstMediaType,\norg.apache.tomcat.util.http.parser.AstParameter,\norg.apache.tomcat.util.http.parser.AstSubType,\norg.apache.tomcat.util.http.parser.AstType,\norg.apache.tomcat.util.http.parser.AstValue,\norg.apache.tomcat.util.http.parser.HttpParser,\norg.apache.tomcat.util.http.parser.HttpParserConstants,\norg.apache.tomcat.util.http.parser.HttpParserTokenManager,\norg.apache.tomcat.util.http.parser.HttpParserTreeConstants,\norg.apache.tomcat.util.http.parser.JJTHttpParserState,\norg.apache.tomcat.util.http.parser.Node,\norg.apache.tomcat.util.http.parser.ParseException,\norg.apache.tomcat.util.http.parser.SimpleCharStream,\norg.apache.tomcat.util.http.parser.SimpleNode,\norg.apache.tomcat.util.http.parser.Token,\norg.apache.tomcat.util.http.parser.TokenMgrError\n\"", "id": 159755, "time": "2012-06-06T13:44:56Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2012-06-06T13:44:56Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "creator": "markt@apache.org", "text": "Fixed in trunk and 7.0.x and will be included in 7.0.28 onwards.", "id": 159767, "time": "2012-06-06T18:32:34Z", "bug_id": 53366, "creation_time": "2012-06-06T18:32:34Z", "is_private": false, "attachment_id": null}]