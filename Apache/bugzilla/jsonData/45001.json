[{"count": 0, "tags": [], "bug_id": 45001, "attachment_id": 21966, "text": "Created attachment 21966\npatch to Range, FileInformationBlock, and TextPiece to address problem described above (see bug text for limitations of patch)\n\nWhen OpenOffice.org creates MS Word 97 formatted *.doc files, it uses Unicode.  When Range.insertBefore() and Range.delete() are used with these multi-byte representations, a couple of different problems occur:\n1.  The indices are not calculated correctly so delete() seems to delete arbitrary characters or fail with IndexOutOfBoundsExceptions\n2.  For the same reason, insertBefore() seems to insert text at an arbitrary position and subsequent operations fail with IndexOutOfBoundsExceptions\n\nThere is a marginally related problem with these operations; they do not update FileInformationBlock.CCPText, and this throws OpenOffice.org for a loop.  It stops reading character text prematurely and renders document headers and footers incorrectly.\n\n(see attachment for a partial patch to address both problems; note that the patch does not address overloaded versions of insertBefore(), nor does it address insertAfter())", "id": 116624, "time": "2008-05-15T00:21:34Z", "creator": "nhira@cognocys.com", "creation_time": "2008-05-15T00:21:34Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 45001, "attachment_id": null, "id": 116859, "time": "2008-05-20T09:57:27Z", "creator": "apache@gagravarr.org", "creation_time": "2008-05-20T09:57:27Z", "is_private": false, "text": "Thanks for this patch, applied to trunk\n\nAny chance you could also do us a little unit test, so we can be sure this doesn't get broken again in the future? I'm leaving the bug open for now, until we've got one"}, {"count": 2, "tags": [], "creator": "nhira@cognocys.com", "text": "Created attachment 22125\nJUnit to test Range.insertBefore() when Range uses Unicode (use with sample document from next attachment)", "id": 117688, "time": "2008-06-13T22:38:46Z", "bug_id": 45001, "creation_time": "2008-06-13T22:38:46Z", "is_private": false, "attachment_id": 22125}, {"count": 3, "tags": [], "bug_id": 45001, "text": "Created attachment 22126\nSample document used to test Range.insertBefore() when Range uses Unicode (use with test case from previous attachment)", "id": 117689, "time": "2008-06-13T22:42:41Z", "creator": "nhira@cognocys.com", "creation_time": "2008-06-13T22:42:41Z", "is_private": false, "attachment_id": 22126}, {"count": 4, "tags": [], "creator": "nhira@cognocys.com", "attachment_id": null, "id": 117690, "time": "2008-06-13T22:49:19Z", "bug_id": 45001, "creation_time": "2008-06-13T22:49:19Z", "is_private": false, "text": "Sorry for the delay.  Also have a replaceText() that can be cleaned up and would make a great addition to the API for mail-merge-type uses...\n\n/**\n *\tReplace (one instance of) a piece of text with another...\n *\n *\t@param\tpPlaceHolder\t\tThe text to be replaced (e.g., \"${company}\")\n *\t@param\tpValue\t\t\t\tThe replacement text (e.g., \"Cognocys, Inc.\")\n *\t@param\tpDocument\t\t\tThe <code>HWPFDocument</code> in which the placeholder was found\n *\t@param\tpStartOffset\t\tThe offset or index where the <code>CharacterRun</code> begins\n *\t@param\tpPlaceHolderIndex\tThe offset or index of the placeholder, relative to the\n *\t\t\t\t\t\t\t\t<code>CharacterRun</code> where <code>pPlaceHolder</code> was found\n *\n *\t@throws\tDocumentFillerException\n */\nprotected void replaceText(String pPlaceHolder, String pValue, \n\tint pStartOffset, int pPlaceHolderIndex, HWPFDocument pDocument) \n\tthrows DocumentFillerException {\n\n\tint absPlaceHolderIndex = pStartOffset + pPlaceHolderIndex;\n\tRange subRange = new Range(\n\t\tabsPlaceHolderIndex, \n\t\t(absPlaceHolderIndex + pPlaceHolder.length()), pDocument);\n\tif (subRange.usesUnicode()) {\n\n\t\tabsPlaceHolderIndex = pStartOffset + (pPlaceHolderIndex * 2);\n\t\tsubRange = new Range(\n\t\t\tabsPlaceHolderIndex, \n\t\t\t(absPlaceHolderIndex + (pPlaceHolder.length() * 2)), \n\t\t\tpDocument);\n\t}\n\n\tsubRange.insertBefore(pValue);\n\n\t// re-create the sub-range so we can delete it\n\tsubRange = new Range(\n\t\t(absPlaceHolderIndex + pValue.length()),\n\t\t(absPlaceHolderIndex + pPlaceHolder.length() + pValue.length()), \n\t\t\tpDocument);\n\tif (subRange.usesUnicode())\n\t\tsubRange = new Range(\n\t\t\t(absPlaceHolderIndex + (pValue.length() * 2)),\n\t\t\t(absPlaceHolderIndex + (pPlaceHolder.length() * 2) + \n\t\t\t\t(pValue.length() * 2)), pDocument);\n\n\tsubRange.delete();\n}\n"}, {"count": 5, "tags": [], "bug_id": 45001, "text": "Thanks for the test case, added to svn\n\nAny chance you could do a unit test for your new replaceText method too? I've added that to svn too.", "id": 117718, "time": "2008-06-16T05:50:33Z", "creator": "apache@gagravarr.org", "creation_time": "2008-06-16T05:50:33Z", "is_private": false, "attachment_id": null}, {"count": 6, "tags": [], "bug_id": 45001, "attachment_id": 22139, "text": "Created attachment 22139\nZip file that contains a patch, a test case, and an MS Word document to support the test case", "id": 117798, "time": "2008-06-18T16:12:49Z", "creator": "nhira@cognocys.com", "creation_time": "2008-06-18T16:12:49Z", "is_private": false}, {"count": 7, "attachment_id": null, "bug_id": 45001, "text": "The attachment includes the test case and a patch to Range to simplify replaceText()...\n\n(Thanks, Nick.)", "id": 117799, "time": "2008-06-18T16:14:44Z", "creator": "nhira@cognocys.com", "creation_time": "2008-06-18T16:14:44Z", "tags": [], "is_private": false}, {"count": 8, "tags": [], "bug_id": 45001, "attachment_id": null, "text": "Thanks for this patch+test, applied to svn", "id": 117811, "time": "2008-06-19T04:47:52Z", "creator": "apache@gagravarr.org", "creation_time": "2008-06-19T04:47:52Z", "is_private": false}, {"count": 9, "text": "Follow up...\n\n(Please let me know if I should create a new bug for this kind of thing in future.)\n\nI've discovered that the original patch to TextPiece does not function as expected in that a delete() on a Unicode TextPiece results in the TextPiece being adjusted to an incorrect length.  \n\nFor every N characters deleted, the new length should be (previousLength - N), but the current code sets it to (previousLength - (N/2)) when the TextPiece uses Unicode.\n\nI've attached a Unit Test, an illustrative document, and another patch to (the current version of) TextPiece.\n\nThe Unit Test also illustrates how one can delete all instances of some text from a Range.", "bug_id": 45001, "attachment_id": null, "id": 117883, "time": "2008-06-22T20:57:39Z", "creator": "nhira@cognocys.com", "creation_time": "2008-06-22T20:57:39Z", "tags": [], "is_private": false}, {"count": 10, "tags": [], "bug_id": 45001, "text": "Created attachment 22156\nPatch for TextPiece, with unit test and illustrative document showing problem with delete()", "id": 117884, "time": "2008-06-22T21:03:55Z", "creator": "nhira@cognocys.com", "creation_time": "2008-06-22T21:03:55Z", "is_private": false, "attachment_id": 22156}, {"count": 11, "tags": [], "creator": "apache@gagravarr.org", "attachment_id": null, "id": 118094, "time": "2008-06-28T11:53:55Z", "bug_id": 45001, "creation_time": "2008-06-28T11:53:55Z", "is_private": false, "text": "Thanks for the latest patch + test, applied to svn trunk"}]