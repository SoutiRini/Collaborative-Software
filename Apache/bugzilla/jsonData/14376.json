[{"count": 0, "tags": [], "creator": "apache-bugs@wotevah.com", "attachment_id": null, "text": "It appears that mod_proxy overwrites the Date header with the local date.\nMine is configured as a Reverse Proxy (have not tried the other way).\nThe date header is in the proper format (comes from an Apache 1.3 server).\n\nThis should not happen because this way the client loses the reference for\nthe Expires header (which passes through unmodified).\n\nBelow are two sets of response headers I tested with. The first one is\nthe backend server accessed directly, the second is via the proxy, at\nabout 20 seconds time difference. The time on the proxy is 2-3 minutes\nbehind the backend's. The frontend always sets the expiration date to \nsame value as date.\n\nHTTP/1.1 200 OK\nDate: Thu, 07 Nov 2002 21:41:15 GMT\nServer: Apache/1.3.27 (Unix)\nCache-control: no-cache\nContent-Length: 1924\nConnection: close\nContent-Type: text/html; charset=UTF-8\nExpires: Thu, 07 Nov 2002 21:41:15 GMT\n\nHTTP/1.0 200 OK\nDate: Thu, 07 Nov 2002 21:38:31 GMT\nServer: Apache/1.3.27 (Unix)\nCache-control: no-cache\nContent-Type: text/html; charset=UTF-8\nExpires: Thu, 07 Nov 2002 21:41:37 GMT\nVia: 1.1 <proxyhostname>\nConnection: close", "id": 25899, "time": "2002-11-07T23:35:43Z", "bug_id": 14376, "creation_time": "2002-11-07T23:35:43Z", "is_private": false}, {"text": "The last statement should read:\n\"The backend always sets the expiration date to same value as date.\"\n", "tags": [], "bug_id": 14376, "is_private": false, "count": 1, "id": 25900, "time": "2002-11-07T23:38:35Z", "creator": "apache-bugs@wotevah.com", "creation_time": "2002-11-07T23:38:35Z", "attachment_id": null}, {"count": 2, "tags": [], "text": "\n  I need to refer to the docs, but your error is setting the Expires: tag\n  in the first place after using Cache-Control: no-cache\n\n  You can't have it both ways and you will probably confuse some caches.", "is_private": false, "bug_id": 14376, "id": 25901, "time": "2002-11-08T00:40:02Z", "creator": "wrowe@apache.org", "creation_time": "2002-11-08T00:40:02Z", "attachment_id": null}, {"text": "Ok, from RFC 2616;\n\n   The Date general-header field represents the date and time at which\n   the message was originated, having the same semantics as orig-date in\n   RFC 822. The field value is an HTTP-date, as described in section\n   3.3.1; it MUST be sent in RFC 1123 [8]-date format.\n\nand\n\n   A received message that does not have a Date header field MUST be\n   assigned one by the recipient if the message will be cached by that\n   recipient or gatewayed via a protocol which requires a Date.\n\nSo, if we have a Date:, the proxy should assign that, if we have no date,\nwe invent one.\n\nFinally, about your Expires: tag... I strongly suggest you follow the following\nsemantic;\n\n   An origin server [...] MAY assign an Expires value that is known, \n   at or before server configuration time, to be in the past (this allows \n   \"pre-expiration\" of responses without storing separate Expires values \n   for each resource).\n\nwhich is precisely the behavior you desired.\n", "tags": [], "bug_id": 14376, "is_private": false, "count": 3, "id": 25902, "time": "2002-11-08T02:19:23Z", "creator": "wrowe@apache.org", "creation_time": "2002-11-08T02:19:23Z", "attachment_id": null}, {"count": 4, "attachment_id": null, "creator": "apache-bugs@wotevah.com", "text": "The conclusion that the proxy must set the Date header when it has already been\nprovided by the origin server cannot be inferred from the two paragraphs quoted\n(since the message is not originated on the proxy).\n\nUsing the rfc822 analogy mentioned in the text would imply a mail relay changing\nthe Date: header as the email passes through it, even if there is one already \nthere that respects the format. That does not happen.\n\nThe proxy's changing of the date makes the Expires header as unreliable as the\ntime on the proxy machine, because other than the Date header, the client has \nno way to know the time reference of the origin server. That essentially makes\nExpires unusable for anything other than very distant times in the future\n(depending on how much the proxy time is off).\n", "id": 25903, "time": "2002-11-08T03:12:21Z", "bug_id": 14376, "creation_time": "2002-11-08T03:12:21Z", "tags": [], "is_private": false}, {"count": 5, "tags": [], "bug_id": 14376, "text": "Having both Cache-Control: no-cache and Expires is\nperfectly valid/legal. \"no-cache\" does not mean \"do not\ncache/store\"; it means \"revalidate on every request\". Expires\nrefers to content freshness which is often a separate issue.\n\nSome applications may be able to predict expiration times and may still\nwant to see all [validation] requests. Some caches\n(think CDNs like Akamai or bookmark revalidation services) may use the combination to optimize their [caching] decisions.\n\nCache-control overrides Expires:\n\n   The presence of an Expires header field with a date value of some\n   time in the future on a response that otherwise would by default be\n   non-cacheable indicates that the response is cacheable, unless\n   indicated otherwise by a Cache-Control header field (section 14.9).\n\nSince this is not really realted to Date header changes, I will \nprobably submit a separate bug report.\n", "id": 29451, "time": "2003-01-15T19:59:17Z", "creator": "coad@measurement-factory.com", "creation_time": "2003-01-15T19:59:17Z", "is_private": false, "attachment_id": null}, {"count": 6, "attachment_id": null, "creator": "minfrin@sharp.fm", "is_private": false, "id": 35239, "time": "2003-04-15T16:48:17Z", "bug_id": 14376, "creation_time": "2003-04-15T16:48:17Z", "tags": [], "text": "According to proxy_http.c this is the only code that touches the date field:\n\n  \t      if ((buf = apr_table_get(r->headers_out, \"Date\")) != NULL) {\n  \t\tapr_table_set(r->headers_out, \"Date\",     \n                              ap_proxy_date_canon(p, buf));\n  \t      }                                             \n\nWhat it does is try and parse the date provided using ap_proxy_date_canon().\nThis tries to parse the date, but if it fails to parse the date, the date is\ntransferred through unaltered.\n\nIf the date is being overwritten, it is likely to be happening inside the Apache\ncore, and not mod_proxy. I have updated the component to reflect this.\n"}, {"count": 7, "tags": [], "creator": "minfrin@sharp.fm", "attachment_id": null, "is_private": false, "id": 35240, "time": "2003-04-15T16:59:39Z", "bug_id": 14376, "creation_time": "2003-04-15T16:59:39Z", "text": "Found the problem: inside modules/http/http_protocol.c the date is being set to\nthe current time, and the contents of the output headers array is ignored in the\ncase of the date header. The attached patch fixes this.\n"}, {"count": 8, "attachment_id": 5840, "creator": "minfrin@sharp.fm", "is_private": false, "id": 35242, "time": "2003-04-15T17:02:42Z", "bug_id": 14376, "creation_time": "2003-04-15T17:02:42Z", "tags": [], "text": "Created attachment 5840\nPatch to fix for v2.0.46-dev"}, {"count": 9, "tags": [], "text": "Created attachment 5841\nPatch this time without compiler warnings!", "is_private": false, "bug_id": 14376, "id": 35246, "time": "2003-04-15T17:44:10Z", "creator": "minfrin@sharp.fm", "creation_time": "2003-04-15T17:44:10Z", "attachment_id": 5841}, {"count": 10, "tags": [], "bug_id": 14376, "text": "Patch applied to v2.1 and v2.0\n", "id": 35247, "time": "2003-04-15T17:44:49Z", "creator": "minfrin@sharp.fm", "creation_time": "2003-04-15T17:44:49Z", "is_private": false, "attachment_id": null}]