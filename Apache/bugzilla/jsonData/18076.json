[{"attachment_id": null, "tags": [], "bug_id": 18076, "text": "In OnlyOnceErrorHandler you have code that is like\n\n  public \n  void error(String message) {\n    if(firstTime) {\n      LogLog.error(message);\n      firstTime = false;\n    }\n  }\n\nThe first time flag is set to indicate that no further error messages should be\nlogged.\n\nIt would be more robust to write the code like\n\n  public \n  void error(String message) {\n    if(firstTime) {\n      firstTime = false;\n      LogLog.error(message);\n    }\n  }\n\nSetting first time to be false, and then logging the error.\n\nI have a situation in which we are redirecting all output on stdout and stderr\nto the logger. \n\nThe problem is that since I redirect all output from stdout and stderr to the\nlog, if there is an error in the logger I get an infinite loop, since LogLog\nwrites its error to stderr (which is logged, which causes an error, which is\nwritten to LogLog, which writes to stderr (which is logged....))\n\nIts minor and trivial.", "count": 0, "id": 33308, "time": "2003-03-17T19:20:32Z", "creator": "sbridges.geo@yahoo.com", "creation_time": "2003-03-17T19:20:32Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 18076, "is_private": false, "text": "Done for log4j 1.3.", "id": 68372, "time": "2004-12-13T17:12:44Z", "creator": "yoavs@computer.org", "creation_time": "2004-12-13T17:12:44Z", "attachment_id": null}]