[{"count": 0, "tags": [], "bug_id": 21787, "attachment_id": null, "is_private": false, "id": 41122, "time": "2003-07-22T01:23:01Z", "creator": "dave.wietzel@intl.fritolay.com", "creation_time": "2003-07-22T01:23:01Z", "text": "I am using the ldap module to connect to a IBM SecureWay LDAP for my DAV area.\n\nHere is my configuration parameters:\n\n<Location /webdocs>\n\n\tDav On\n\t\n\tAuthType Basic\n\tAuthName DAV\n\tAuthLDAPEnabled on\n\tAuthLDAPURL \"ldap://myldap.fritolay.pvt/ou=people,dc=pepsico,dc=com\"\n\tAuthLDAPBindDN \"uid=xxxxxx,ou=agents,dc=pepsico,dc=com\"\n\tAuthLDAPBindPassword \"xxxxxxx\"\n\n\t#AuthUserFile user.passwd\n\n    AllowOverride None\n    Options None\n\t\n\t<LimitExcept GET OPTIONS>\n\t\trequire valid-user\n\t</LimitExcept>\n\t\n</Location>\n\nI am able to connect one time. As long as I enter a valid ID/password I am \nfine. But when I put in a bas password, it fails, but then fails consistently \nafterwards even with a valid password. Here are the log entries:\n\n[Mon Jul 21 19:43:31 2003] [debug] mod_auth_ldap.c(343): [client \n156.81.28.142] [4344] auth_ldap authenticate: using URL \nldap://replicas.ldapdfw.fritolay.pvt/ou=people,dc=pepsico,dc=com\n[Mon Jul 21 19:43:31 2003] [debug] mod_auth_ldap.c(418): [client \n156.81.28.142] [4344] auth_ldap authenticate: accepting dwietzel\n[Mon Jul 21 19:43:31 2003] [debug] mod_auth_ldap.c(537): [client \n156.81.28.142] [4344] auth_ldap authorise: successful authorisation because \nuser is valid-user\n[Mon Jul 21 19:44:00 2003] [debug] mod_auth_ldap.c(343): [client \n156.81.28.142] [4344] auth_ldap authenticate: using URL \nldap://replicas.ldapdfw.fritolay.pvt/ou=people,dc=pepsico,dc=com\n[Mon Jul 21 19:44:00 2003] [debug] mod_auth_ldap.c(348): [client \n156.81.28.142] [4344] auth_ldap authenticate: ap_get_basic_auth_pw() returns \n401\n[Mon Jul 21 19:44:00 2003] [debug] mod_auth_ldap.c(343): [client \n156.81.28.142] [4344] auth_ldap authenticate: using URL \nldap://replicas.ldapdfw.fritolay.pvt/ou=people,dc=pepsico,dc=com\n[Mon Jul 21 19:44:00 2003] [warn] [client 156.81.28.142] [4344] auth_ldap \nauthenticate: user dwietzel authentication failed; URI /webdocs \n[ldap_simple_bind_s() to check user credentials failed][Invalid Credentials]\n[Mon Jul 21 19:44:05 2003] [debug] mod_auth_ldap.c(343): [client \n156.81.28.142] [4344] auth_ldap authenticate: using URL \nldap://replicas.ldapdfw.fritolay.pvt/ou=people,dc=pepsico,dc=com\n[Mon Jul 21 19:44:05 2003] [debug] mod_auth_ldap.c(348): [client \n156.81.28.142] [4344] auth_ldap authenticate: ap_get_basic_auth_pw() returns \n401\n[Mon Jul 21 19:44:05 2003] [debug] mod_auth_ldap.c(343): [client \n156.81.28.142] [4344] auth_ldap authenticate: using URL \nldap://replicas.ldapdfw.fritolay.pvt/ou=people,dc=pepsico,dc=com\n[Mon Jul 21 19:44:05 2003] [warn] [client 156.81.28.142] [4344] auth_ldap \nauthenticate: user dwietzel authentication failed; URI /webdocs [User not \nfound][No Such Object]\n[Mon Jul 21 19:44:06 2003] [debug] mod_auth_ldap.c(343): [client \n156.81.28.142] [4344] auth_ldap authenticate: using URL \nldap://replicas.ldapdfw.fritolay.pvt/ou=people,dc=pepsico,dc=com\n[Mon Jul 21 19:44:06 2003] [debug] mod_auth_ldap.c(348): [client \n156.81.28.142] [4344] auth_ldap authenticate: ap_get_basic_auth_pw() returns \n401\n[Mon Jul 21 19:44:06 2003] [debug] mod_auth_ldap.c(343): [client \n156.81.28.142] [4344] auth_ldap authenticate: using URL \nldap://replicas.ldapdfw.fritolay.pvt/ou=people,dc=pepsico,dc=com\n[Mon Jul 21 19:44:06 2003] [warn] [client 156.81.28.142] [4344] auth_ldap \nauthenticate: user dwietzel authentication failed; URI /webdocs [User not \nfound][No Such Object]\n\nEverytime after the failure it looks as though I get a [No Such Object].\n\nDave Wietzel"}, {"count": 1, "tags": [], "text": "We were having the exactly same problem (without running mod_dav) trying to \nauthenticate to SunOne Directory Server 5.\n\nThe workaround we used (was originally suggested in Bug #17274) was to close \nthe connection to LDAP server completely after every search:\n\n$ diff mod_auth_ldap.c~  mod_auth_ldap.c\n368c368\n<     util_ldap_connection_close(ldc);\n---\n>     util_ldap_connection_destroy(ldc);\n\nWould be great if someone could investigate this properly!\n\n\n\n\n", "attachment_id": null, "id": 44637, "creator": "webmaster@nd.edu.au", "time": "2003-09-25T04:18:34Z", "bug_id": 21787, "creation_time": "2003-09-25T04:18:34Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 21787, "text": "We have also experienced the same problem.  The listed change from above does \nwork at least for 2.0.47 on Windows 2003 against AD on 2003.  After \ninvestigating this problem further I also come to the conclusion that the \nproblem does occur because in the util_ldap_cache_checkuserid function \n(util_ldap.c) it is using an existing connection for the simple bind (line 874) \nand then allowing reuse of this connection (good or bad credentials). \n\nIMO after determining the credential pair doesn't exist in cache and getting \nthe dn using the binddn+bindpw search, a new connection should be created to \ncheck the users credentials.  After this has completed successfully or \nunsuccessfully this connection should be destroyed leaving the other connection \nuntouched.  This allows for the binddn+bindpw pair to be used for the searches \nand compares.  This is also needed because in some environments the last \nauthenticated user might not have the access to search for all users, while the \nbinddn user should.\n\nI would take a shot at coding this, but I am not good with memory cleanup.", "id": 45561, "time": "2003-10-14T04:14:04Z", "creator": "schwoerb@uww.edu", "creation_time": "2003-10-14T04:14:04Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 21787, "attachment_id": null, "is_private": false, "id": 46809, "time": "2003-11-04T19:22:01Z", "creator": "ben.kibler@infores.com", "creation_time": "2003-11-04T19:22:01Z", "text": "I have also run across this same problem with mod_auth_ldap, where after an \nfailed bind attempt, subsequent requests fail.  In my Apache 2.0.47 test \nenvironments (Windows 2000, Redhat Linux 9, HP-UX 11i) this problem is \nrepeatable when connecting to a Windows 2003 AD server, but I can't get the \nproblem to occur when connecting to a Sun Directory Server 5.2.\n\nRather than destroying the connection after a failed bind attempt, I wanted to \nkeep the connection open to avoid the performance hit of reconnecting.  So, \nafter a failed user/password bind in util_ldap_cache_checkuserid, I simply mark \nthe connection as unbound.\n\n$ diff util_ldap.c.orig util_ldap.c.new\n884a885\n>       ldc->bound = 0;\n\nOn the next call to util_ldap_connection_open, the existing code will notice \nthat the connection is unbound, bind again as the BindDN user, and return a \nproperly bound connection.\n\nI agree with Bradley that only the binddn+bindpw should be used for initial \nsearches.  However, rather than actually destroying user-bound connections, I \nprefer to simply mark the connection as unbound after any user-specific bind \noperation.  This avoids the overhead of establishing a new socket connections \nfor every login.\n\nBen Kibler"}, {"count": 4, "tags": [], "bug_id": 21787, "text": "thanks Ben!\n\napplying your proposed patch (marking the connection as unbound) solved the \nsame problem i had on my solaris/httpd2048 system.\n\nif everybody else is happy with this modification, i vote for a checkin so i \ndon't have redo this after each new installation/compile... :-)\n", "id": 47221, "time": "2003-11-11T21:11:34Z", "creator": "apache@schiegl.com", "creation_time": "2003-11-11T21:11:34Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 21787, "text": "I agree that the simple solution that Ben proposed works well.  Although, I \nwould suggest that after all user-specific bind operations, (failed or not) the \nconnection should become unbound.  The will result in always using the bind-dn, \nbind-pw for searches.  So I am proposing that we use this instead:\n\n$ diff util_ldap.c.orig util_ldap.c.new\n881a882\n>       ldc->bound = 0;\n\n\n-Bradley Schwoerer", "id": 47227, "time": "2003-11-11T21:37:13Z", "creator": "schwoerb@uww.edu", "creation_time": "2003-11-11T21:37:13Z", "is_private": false, "attachment_id": null}, {"count": 6, "tags": [], "bug_id": 21787, "text": "I'm going through the bug db to make sure patches are findable.  Please see \nhttp://httpd.apache.org/dev/patches.html\n", "id": 47816, "time": "2003-11-21T17:32:55Z", "creator": "trawick@apache.org", "creation_time": "2003-11-21T17:32:55Z", "is_private": false, "attachment_id": null}, {"count": 7, "tags": [], "bug_id": 21787, "attachment_id": null, "is_private": false, "id": 48737, "time": "2003-12-09T16:11:11Z", "creator": "tjeffers@iquest.net", "creation_time": "2003-12-09T16:11:11Z", "text": "This sounds like a symptom of the same problem reported in bug #17599. I took a \ndifferent (not necessarily better) approach of using the connection caching \nlogic for this bind as well. I have posted a propsed patch there. Can someone \nmore knowledgable than I shed some insight on which resolution is better?\n\nTHX."}, {"count": 8, "tags": [], "bug_id": 21787, "text": "I have added more information on this issue in bug 27134.\n(I have created a new bug since component/version are different)\nJust to let you know.", "id": 52731, "time": "2004-02-21T15:21:36Z", "creator": "dgl@softec.lu", "creation_time": "2004-02-21T15:21:36Z", "is_private": false, "attachment_id": null}, {"count": 9, "tags": [], "bug_id": 21787, "attachment_id": null, "is_private": false, "id": 57746, "time": "2004-05-20T22:58:00Z", "creator": "minfrin@sharp.fm", "creation_time": "2004-05-20T22:58:00Z", "text": "Please try the patch at http://nagoya.apache.org/bugzilla/show_bug.cgi?id=27748\nand tell me if it fixes this problem. This patch has been applied to v2.1.0-dev,\nand awaits backporting to v2.0.50-dev.\n"}, {"count": 10, "tags": [], "creator": "schwoerb@uww.edu", "attachment_id": null, "id": 57776, "creation_time": "2004-05-21T03:38:17Z", "time": "2004-05-21T03:38:17Z", "bug_id": 21787, "text": "From my perspective the patches for bug 27748 looks like it solves the problems \nin a good way.  I have not tested the code yet in any environments yet.", "is_private": false}, {"count": 11, "tags": [], "bug_id": 21787, "attachment_id": null, "is_private": false, "id": 57804, "time": "2004-05-21T14:49:35Z", "creator": "minfrin@sharp.fm", "creation_time": "2004-05-21T14:49:35Z", "text": "\n\n*** This bug has been marked as a duplicate of 27748 ***"}]