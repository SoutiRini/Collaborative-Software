[{"count": 0, "tags": [], "creator": "sebb@apache.org", "attachment_id": null, "id": 123694, "time": "2009-01-02T06:53:27Z", "bug_id": 46464, "creation_time": "2009-01-02T06:53:27Z", "is_private": false, "text": "The class org.apache.catalina.session.StandardSession\n\ndefines the methods:\n\nprotected void readObject(ObjectInputStream stream)\nprotected void writeObject(ObjectOutputStream stream)\n\nBut since the methods aren't declared private, they will be silently ignored by the serialization/deserialization API.\n\n==\n\nFurthermore, perhaps the methods should call\ndefaultReadObject() / defaultWriteObject() respectively.\n\nThe defaultxxxObject() methods are not called by the corresponding methods in \nthe class org.apache.catalina.session.DeltaSession\n\n==\n\nThe DeltaSession class additionally defines protected versions of readObject()/writeObject(). \nThese should probably be removed or renamed to avoid confusion with the Java Serialisation API."}, {"count": 1, "tags": [], "bug_id": 46464, "attachment_id": null, "is_private": false, "id": 123703, "time": "2009-01-02T08:56:15Z", "creator": "markt@apache.org", "creation_time": "2009-01-02T08:56:15Z", "text": "Whilst this may be non-intuitive I believe it is intentional. Some comments would probably help explain the thinking here.\n\nI don't see a failure in this report so marking this as an enhancement."}, {"count": 2, "text": "I've also just discovered that Java appears not to call the private readObject(ObjectInput) or writeObject(ObjectOutput) methods in DeltaSession.\n\nIt seems Java only looks for \"private writeObject(ObjectOutputStream)\" not \"private writeObject(ObjectOutput)\", likewise for readObject(ObjectInput).\n\nSo at present, both StandardSession nor DeltaSession will use the default Java serialisation - i.e. the readObject/writeObject methods that are defined will not be used to override the standard mechanism.\n\nIt is not clear whether it is intentional or accidental that the default Java serialisation mechanism is not being overridden.\n\nIf it is intended that the default mechanism is used, then I would suggest that the readObject/writeObject methods are renamed.\n\nOr at the very least, the Javadoc should make it very clear that the method names are misleading.", "bug_id": 46464, "is_private": false, "id": 123767, "time": "2009-01-05T05:43:16Z", "creator": "sebb@apache.org", "creation_time": "2009-01-05T05:43:16Z", "tags": [], "attachment_id": null}, {"count": 3, "tags": [], "creator": "fhanik@apache.org", "is_private": false, "text": "(In reply to comment #2)\n> I've also just discovered that Java appears not to call the private\n> readObject(ObjectInput) or writeObject(ObjectOutput) methods in DeltaSession.\n\nit shouldn't, it should call \nwriteExternal and readExternal\n\n", "id": 123785, "time": "2009-01-05T16:09:22Z", "bug_id": 46464, "creation_time": "2009-01-05T16:09:22Z", "attachment_id": null}, {"count": 4, "text": "(In reply to comment #3)\n> (In reply to comment #2)\n> > I've also just discovered that Java appears not to call the private\n> > readObject(ObjectInput) or writeObject(ObjectOutput) methods in DeltaSession.\n> \n> it shouldn't, it should call \n> writeExternal and readExternal\n> \n\nwriteExternal/readExternal are part of the Externalizable interface.\n\nThe problems here are to do with the Serializable interface.", "bug_id": 46464, "attachment_id": null, "id": 123786, "time": "2009-01-05T16:15:41Z", "creator": "sebb@apache.org", "creation_time": "2009-01-05T16:15:41Z", "tags": [], "is_private": false}, {"count": 5, "text": "Externalizable supersedes Serializable", "bug_id": 46464, "attachment_id": null, "id": 123813, "time": "2009-01-06T18:50:48Z", "creator": "fhanik@apache.org", "creation_time": "2009-01-06T18:50:48Z", "tags": [], "is_private": false}, {"count": 6, "text": "StandardSession does not implement Externalizable.\n\nBesides, it is still very confusing to have methods which appear to implement the Serializable mechanism but don't.", "bug_id": 46464, "attachment_id": null, "id": 123814, "time": "2009-01-06T19:05:48Z", "creator": "sebb@apache.org", "creation_time": "2009-01-06T19:05:48Z", "tags": [], "is_private": false}, {"count": 7, "tags": [], "bug_id": 46464, "is_private": false, "text": "If there is a real bug and not just code police, please let us know.", "id": 123833, "time": "2009-01-07T07:19:22Z", "creator": "fhanik@apache.org", "creation_time": "2009-01-07T07:19:22Z", "attachment_id": null}, {"count": 8, "tags": [], "bug_id": 46464, "attachment_id": null, "is_private": false, "id": 123834, "time": "2009-01-07T07:32:48Z", "creator": "sebb@apache.org", "creation_time": "2009-01-07T07:32:48Z", "text": "The code appears to be trying to modify the default Java serialization mechanism by providing readObject/writeObject methods.\n\nHowever these methods do not have the correct signature so they will not be used.\n\nThe code does not document whether this was intentional or not.\n\nIt seems to me it would be helpful for future maintainers to know what the intention was.\n\nSo I think it was reasonable to flag the bug as enhancement, but I don't think it's reasonable to close it as invalid. \n\nIf you don't wish to update the documentation of the class and/or rename the methods, then close as WONTFIX."}]