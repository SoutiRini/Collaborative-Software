[{"count": 0, "tags": [], "bug_id": 49860, "attachment_id": 25967, "id": 139602, "time": "2010-09-01T20:12:43Z", "creator": "dan.luca@bsci.com", "creation_time": "2010-09-01T20:12:43Z", "is_private": false, "text": "Created attachment 25967\nSample code to expose the issue\n\nOverview: A servlet hosted on Tomcat fails to retrieve the request parameters when the request is using chunked transfer encoding and trailers.\n\nDetails: Sending a POST http request from a HTTP/1.1 client that uses chunked as transfer encoding and also includes trailers in the request (per RFC2616 sections 3.6.1 and 14.40):\nRequest: \n===========================\nPOST /echo/getBody HTTP/1.1\nUser-Agent: org.test.chunked.EchoClient (chunked-test)\ncontent-type: application/x-www-form-urlencoded\nconnection: Close\nhost: localhost:8080\ntransfer-encoding: chunked\n\n3\na=0\n4\n&b=1\n0\nx-Signature: Tuu2\n============================\n\nThe server responds with an error message (see below) and a stack trace pointing to ChunkedInputFilter class (http://svn.apache.org/repos/asf/tomcat/tc6.0.x/trunk/java/org/apache/coyote/http11/filters/ChunkedInputFilter.java).\nThe method parseEndChunk() inside this class has a to do comment to handle trailers - this leads me to believe the trailers in chunked requests are not yet supported.\n\nThe sample code attached contains means to reproduce the issue:\n - an Eclipse project TestHttpServer that hosts an EchoServlet\n - an Eclipse project TestHttpClient that sends and receives chunked requests and verifies them in a unit test\n - Eclipse's Tomcat server configuration\nThe code is an extension of the attachments from bug 37794 (https://issues.apache.org/bugzilla/show_bug.cgi?id=37794) related to handling chunked requests in general.\n\nNote that when removing the trailer in the request above, the server responds correctly and is able to extract the parameters sent in the request' body.\n\nHere is the error response that the server sends back:\nResponse:\n============================\nResponse: \nHTTP/1.1 500 Internal Server Error\nServer: Apache-Coyote/1.1\nContent-Type: text/html;charset=utf-8\nContent-Length: 2266\nDate: Wed, 01 Sep 2010 22:48:08 GMT\nConnection: close\n\n<html><head><title>Apache Tomcat/6.0.29 - Error report</title><style><!--H1 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:22px;} H2 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:16px;} H3 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:14px;} BODY {font-family:Tahoma,Arial,sans-serif;color:black;background-color:white;} B {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;} P {font-family:Tahoma,Arial,sans-serif;background:white;color:black;font-size:12px;}A {color : black;}A.name {color : black;}HR {color : #525D76;}--></style> </head><body><h1>HTTP Status 500 - </h1><HR size=\"1\" noshade=\"noshade\"><p><b>type</b> Exception report</p><p><b>message</b> <u></u></p><p><b>description</b> <u>The server encountered an internal error () that prevented it from fulfilling this request.</u></p><p><b>exception</b> <pre>java.io.IOException: Invalid CRLF\n\torg.apache.coyote.http11.filters.ChunkedInputFilter.parseCRLF(ChunkedInputFilter.java:337)\n\torg.apache.coyote.http11.filters.ChunkedInputFilter.parseEndChunk(ChunkedInputFilter.java:356)\n\torg.apache.coyote.http11.filters.ChunkedInputFilter.doRead(ChunkedInputFilter.java:136)\n\torg.apache.coyote.http11.InternalInputBuffer.doRead(InternalInputBuffer.java:710)\n\torg.apache.coyote.Request.doRead(Request.java:428)\n\torg.apache.catalina.connector.InputBuffer.realReadBytes(InputBuffer.java:304)\n\torg.apache.catalina.connector.InputBuffer.realReadChars(InputBuffer.java:360)\n\torg.apache.tomcat.util.buf.CharChunk.substract(CharChunk.java:379)\n\torg.apache.catalina.connector.InputBuffer.read(InputBuffer.java:388)\n\torg.apache.catalina.connector.CoyoteReader.read(CoyoteReader.java:93)\n\torg.test.chunked.EchoServlet.getBody(EchoServlet.java:90)\n\torg.test.chunked.EchoServlet.doPostOrGet(EchoServlet.java:60)\n\torg.test.chunked.EchoServlet.doPost(EchoServlet.java:41)\n\tjavax.servlet.http.HttpServlet.service(HttpServlet.java:637)\n\tjavax.servlet.http.HttpServlet.service(HttpServlet.java:717)\n</pre></p><p><b>note</b> <u>The full stack trace of the root cause is available in the Apache Tomcat/6.0.29 logs.</u></p><HR size=\"1\" noshade=\"noshade\"><h3>Apache Tomcat/6.0.29</h3></body></html>\n===============================\n\nBest regards,\nDan Luca."}, {"attachment_id": 26265, "tags": [], "bug_id": 49860, "is_private": false, "count": 1, "id": 141521, "time": "2010-11-07T02:14:34Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2010-11-07T02:14:34Z", "text": "Created attachment 26265\n2010-11-07_tc7_49860_r1003461_testcase.patch\n\nRe: r1003461\nA testcase that demonstrates that the current TC7 solution for this issue (r1003461) is broken.\n\nIt is a modification of the existing test case. I split the original request into two packets and added more text to it.\n\nExpected behaviour: Success of the test.\nActual behaviour: java.net.SocketTimeoutException: Read timed out\nThis happens because CRLF symbols are overwritten when copying the text around the buffer (because of wrong offsets etc.) and thus Tomcat misses the chunk end and reads for more data."}, {"count": 2, "tags": [], "bug_id": 49860, "attachment_id": null, "is_private": false, "id": 141952, "time": "2010-11-23T16:58:56Z", "creator": "markt@apache.org", "creation_time": "2010-11-23T16:58:56Z", "text": "The 7.0.x fix has been updated and will be included in 7.0.5 onwards.\n\nA port of the fix has been proposed for 6.0.x"}, {"count": 3, "tags": [], "bug_id": 49860, "attachment_id": null, "id": 142011, "time": "2010-11-25T11:42:24Z", "creator": "markt@apache.org", "creation_time": "2010-11-25T11:42:24Z", "is_private": false, "text": "This has been fixed in 6.0.x and will be included in 6.0.30 onwards."}]