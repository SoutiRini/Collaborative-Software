[{"count": 0, "tags": [], "bug_id": 48163, "attachment_id": null, "text": "Seeing CacheManager had no JMeterTestCase and wanting to learn how the cache manager worked, I developed the attached JMeterTestCase for it which I'd like to share.\n\nIt does require that CacheManager's inner class CacheEntry be promoted from private to package protected.\n\nTake it for what it's worth...\n\nJohn Samford", "id": 131828, "time": "2009-11-09T09:10:50Z", "creator": "john.samford@ithaka.org", "creation_time": "2009-11-09T09:10:50Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 48163, "text": "There's no attachment...", "id": 131931, "time": "2009-11-13T09:15:37Z", "creator": "sebb@apache.org", "creation_time": "2009-11-13T09:15:37Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 48163, "attachment_id": 24530, "text": "Created attachment 24530\nJMeterTestCase for CacheManager\n\nMy apologies for not attaching the file. Here 'tis!", "id": 131933, "time": "2009-11-13T10:07:46Z", "creator": "john.samford@ithaka.org", "creation_time": "2009-11-13T10:07:46Z", "is_private": false}, {"count": 3, "tags": [], "creator": "sebb@apache.org", "text": "The test fails with the following error:\n\njunit.framework.AssertionFailedError: No property entry found for property If-None-Match\n\tat junit.framework.Assert.fail(Assert.java:47)\n\tat junit.framework.Assert.assertTrue(Assert.java:20)\n\tat junit.framework.Assert.assertNotNull(Assert.java:214)\n\tat org.apache.jmeter.protocol.http.control.TestCacheManager.checkProperty(TestCacheManager.java:174)\n\tat org.apache.jmeter.protocol.http.control.TestCacheManager.testSetHeadersHttpURLConnectionWithSampleResultWithResponseCode200GivesCacheEntry(TestCacheManager.java:147)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:592)\n\tat junit.framework.TestCase.runTest(TestCase.java:168)\n\tat junit.framework.TestCase.runBare(TestCase.java:134)\n\tat junit.framework.TestResult$1.protect(TestResult.java:110)\n\tat junit.framework.TestResult.runProtected(TestResult.java:128)\n\tat junit.framework.TestResult.run(TestResult.java:113)\n\tat junit.framework.TestCase.run(TestCase.java:124)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:232)\n\tat junit.framework.TestSuite.run(TestSuite.java:227)\n\tat org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:83)\n\tat org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:46)\n\tat org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)\n\n\nAny idea what causes that?", "id": 131934, "time": "2009-11-13T10:46:31Z", "bug_id": 48163, "creation_time": "2009-11-13T10:46:31Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 48163, "attachment_id": null, "text": "I do not understand why this test is failing for you.\n\nAs you can see, it's supposed to check that the entry in the CacheManager created by a call to saveDetails is used to set the connection's property list: the \"If-None-Match\" set to the etag value and the \"If-Modified-Since\" set to the current time.\n\n\"It runs on my machine!\" with a fresh copy of the CacheManager downloaded a few moments ago, only changing the visibility of the CacheEntry inner class.\n\nClearly the CacheEntry found in setHeaders has no etag. Therefore, the CacheEntry whose etag is set earlier in the test through reflection must not be the same CacheEntry used by setHeaders, despite the fact that they are indexed by the URL.\n\nIf I could duplicate the problem, I could debug it. I wouldn't ask you to do my work and step through the test to see where it gets off the track but I cannot see how to proceed otherwise. I'd be curious whether the CacheEntry manipulated in the test's initialization is the same object as that used by setHeaders and since it probably is not, how the heck another got there.\n\nThoughts?\n\nJohn Samford", "id": 131937, "time": "2009-11-13T12:52:14Z", "creator": "john.samford@ithaka.org", "creation_time": "2009-11-13T12:52:14Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 48163, "attachment_id": null, "text": "(In reply to comment #4)\n> I do not understand why this test is failing for you.\n> \n> As you can see, it's supposed to check that the entry in the CacheManager\n> created by a call to saveDetails is used to set the connection's property list:\n> the \"If-None-Match\" set to the etag value and the \"If-Modified-Since\" set to\n> the current time.\n> \n> \"It runs on my machine!\" with a fresh copy of the CacheManager downloaded a few\n> moments ago, only changing the visibility of the CacheEntry inner class.\n\nThat should not be necessary, as I've already fixed that, so maybe you have not downloaded the current code.\n\n> Clearly the CacheEntry found in setHeaders has no etag. \n\nNot according to the way I read the code - it is checking the properties which are obtained from this.httpUrlConnection.getRequestProperties();\n\n> Therefore, the\n> CacheEntry whose etag is set earlier in the test through reflection must not be\n> the same CacheEntry used by setHeaders, despite the fact that they are indexed\n> by the URL.\n> \n> If I could duplicate the problem, I could debug it. I wouldn't ask you to do my\n> work and step through the test to see where it gets off the track but I cannot\n> see how to proceed otherwise. I'd be curious whether the CacheEntry manipulated\n> in the test's initialization is the same object as that used by setHeaders and\n> since it probably is not, how the heck another got there.\n> \n> Thoughts?\n\nSee above; can you try downloading the current code from trunk?\n \n> John Samford", "id": 131940, "time": "2009-11-13T13:53:05Z", "creator": "sebb@apache.org", "creation_time": "2009-11-13T13:53:05Z", "is_private": false}, {"count": 6, "tags": [], "bug_id": 48163, "attachment_id": null, "text": "One other point - it would be better if the CacheManager could be tested without requiring internet access.", "id": 131942, "time": "2009-11-13T13:58:34Z", "creator": "sebb@apache.org", "creation_time": "2009-11-13T13:58:34Z", "is_private": false}, {"count": 7, "tags": [], "bug_id": 48163, "attachment_id": 24541, "text": "Created attachment 24541\nRevised version which uses localhost rather than internet connection.\n\nPer suggestion, I've modified the test not to require connection to the internet but rather to use localhost and a stub version of URLConnection", "id": 132005, "time": "2009-11-16T06:08:12Z", "creator": "john.samford@ithaka.org", "creation_time": "2009-11-16T06:08:12Z", "is_private": false}, {"count": 8, "tags": [], "bug_id": 48163, "text": "Thanks for taking so much time with me. This is my first foray into trying to add something to an Apache open source project.\n\nWhat I did to get the source I was using was to go to the JMeter downloads page:\nhttp://jakarta.apache.org/site/downloads/downloads_jmeter.cgi\nwhere it says one can get source. I just checked the CacheManager there against what I've been using and they are identical. Is that \"trunk\"?\n\nHere's the version of setHeaders() which I've got which is called by the failing test:\n\n    public void setHeaders(HttpURLConnection conn, URL url) {\n        CacheEntry entry = (CacheEntry) getCache().get(url.toString());\n        if (log.isDebugEnabled()){\n            log.debug(conn.getRequestMethod()+\"(Java) \"+url.toString()+\" \"+entry);\n        }\n        if (entry != null){\n            final String lastModified = entry.getLastModified();\n            if (lastModified != null){\n                conn.addRequestProperty(HTTPConstantsInterface.IF_MODIFIED_SINCE, lastModified);\n            }\n            final String etag = entry.getEtag();\n            if (etag != null){\n                conn.addRequestProperty(HTTPConstantsInterface.IF_NONE_MATCH, etag);\n            }\n        }\n\nIt gets its CacheEntry using the URL's toString as an index into the threadCache map.\n\nYou're correct: it WOULD be better not to have to be connected to the internet to run the test!\n\nI've submitted a newer version of the test class which uses localhost (and a stub version of URLConnection to allow controlling what getHeaderField() returns for Last-Modified & Etag).", "id": 132006, "time": "2009-11-16T06:09:49Z", "creator": "john.samford@ithaka.org", "creation_time": "2009-11-16T06:09:49Z", "is_private": false, "attachment_id": null}, {"count": 9, "tags": [], "bug_id": 48163, "attachment_id": null, "text": "(In reply to comment #8)\n> Thanks for taking so much time with me. This is my first foray into trying to\n> add something to an Apache open source project.\n> \n> What I did to get the source I was using was to go to the JMeter downloads\n> page:\n> http://jakarta.apache.org/site/downloads/downloads_jmeter.cgi\n> where it says one can get source. I just checked the CacheManager there against\n> what I've been using and they are identical. Is that \"trunk\"?\n\nNot any more - trunk has moved on since 2.3.4 was released, you can get it at:\n\nhttp://svn.apache.org/repos/asf/jakarta/jmeter/trunk/\n\nor as an archive at:\n\nhttp://svn.apache.org/snapshots/jakarta-jmeter/", "id": 132014, "time": "2009-11-16T08:03:14Z", "creator": "sebb@apache.org", "creation_time": "2009-11-16T08:03:14Z", "is_private": false}, {"count": 10, "tags": [], "creator": "sebb@apache.org", "attachment_id": null, "text": "Thanks for the newer version.\n\nHowever it still fails at line 173\n\n172: Map<String, List<String>> properties = this.httpUrlConnection.getRequestProperties();\n173: checkProperty(properties, HTTPConstantsInterface.IF_NONE_MATCH, EXPECTED_ETAG);\n\nThe problem is that the properties Map returned at line 172 is empty.\n\nWhat version of Java are you using?", "id": 132015, "time": "2009-11-16T09:15:12Z", "bug_id": 48163, "creation_time": "2009-11-16T09:15:12Z", "is_private": false}, {"count": 11, "text": "Created attachment 24544\nRevised version which uses stub classes for HttpURLConnection, UrlConnection & HttpMethod\n\nI've extended the use of test objects, now simulating UrlConnection, HttpMethod & HttpURLConnection, eliminating the use of reflection to set fields in the CacheManager's CacheEntry objects.\n\nThe HttpURLConnectionStub should now properly return request properties set in it, avoiding earlier empty property lists.\n\nThis code was developed using Java Version: 1.6.0_15 from Apple, Inc.", "creator": "john.samford@ithaka.org", "attachment_id": 24544, "id": 132018, "time": "2009-11-16T12:44:23Z", "bug_id": 48163, "creation_time": "2009-11-16T12:44:23Z", "tags": [], "is_private": false}, {"count": 12, "tags": [], "bug_id": 48163, "text": "This latest version has fixed the problem.\n\nI also discovered that the previous failure only occurs on Java 1.5 - works for\nme with Java 1.6 (Sun, Windows). But the latest incarnation is better.\n\nThanks for the test cases.", "id": 132019, "time": "2009-11-16T14:26:51Z", "creator": "sebb@apache.org", "creation_time": "2009-11-16T14:26:51Z", "is_private": false, "attachment_id": null}]