[{"attachment_id": null, "tags": [], "creator": "stas-apache@zend.com", "text": "If Apache server is killed by signal, it leaves shared memory segment (for me\nwith ID 0x0103295c) which is not cleaned up.\n\nAlso, if Apache is then restarted, it gives the following error:\n[Mon Apr 08 17:07:03 2002] [crit] (17)File exists: unable to create scoreboard\n(name-based shared memory failure)\n\nand dies with segmentation fault with the following trace:\n\n#0  0x4018d109 in chunk_free (ar_ptr=0x40221cc0, p=0x80f0c78) at malloc.c:3111\n#1  0x4018cf9a in __libc_free (mem=0x80f0c80) at malloc.c:3023\n#2  0x4003dd8a in apr_allocator_destroy (allocator=0x80a9430)\n    at apr_pools.c:135\n#3  0x4003e391 in apr_pool_destroy (pool=0x80a94a8) at apr_pools.c:687\n#4  0x4003deeb in apr_pool_terminate () at apr_pools.c:513\n#5  0x4003a3f5 in apr_terminate () at start.c:112\n#6  0x807cb22 in destroy_and_exit_process (process=0x80ad538, \n    process_exit_value=0) at main.c:245\n#7  0x807d42c in main (argc=4, argv=0xbffff6a4) at main.c:629\n#8  0x4014b9cb in __libc_start_main (main=0x807ce48 <main>, argc=4, \n    argv=0xbffff6a4, init=0x805eaa0 <_init>, fini=0x80920fc <_fini>, \n    rtld_fini=0x4000aea0 <_dl_fini>, stack_end=0xbffff69c)\n    at ../sysdeps/generic/libc-start.c:92\n\nNote also:\n\n#1  0x4018cf9a in __libc_free (mem=0x80f0c80) at malloc.c:3023\n3023\nin malloc.c\n(gdb) \n#2  0x4003dd8a in apr_allocator_destroy (allocator=0x80a9430)\n    at apr_pools.c:135\n135\n            free(node);\n(gdb) p node\n$1 = (apr_memnode_t *) 0x0\n\nI.e., it does free to NULL. \n\nThe source is httpd-2.0.35 release, with prefork MPM.", "count": 0, "id": 13027, "time": "2002-04-08T14:17:58Z", "bug_id": 7838, "creation_time": "2002-04-08T14:17:58Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 7838, "text": "I had the same problem, truss is:\n\nfrom: scoreboard.c, create_namebased_scoreboard:\n9935:   unlink(\"/usr/local/apache2/logs/apache_runtime_status\") Err#2 ENOENT\n\nfrom: create_namebased_scoreboard, \nelse path of filename == NULL, #if APR_USE_SHMEM_SHMGET\n9935:   open(\"/usr/local/apache2/logs/apache_runtime_status\",\n O_WRONLY|O_CREAT|O_EXCL, 0666) = 29\n9935:   stat64(\"/usr/local/apache2/logs/apache_runtime_status\", 0xFFBEF8A0) = 0\n9935:   shmget(16778794, 196888, 0600|IPC_CREAT|IPC_EXCL) Err#17 EEXIST\n\nThe following change helped:\nremove the IPC_EXCL in:\n        if ((new_m->shmid = shmget(shmkey, new_m->realsize,\n                                   SHM_R | SHM_W | IPC_CREAT | IPC_EXCL )) < 0) \n{\n\nThe scoreboard file was just created with  APR_CREATE | APR_EXCL\nso I think this should be safe.\n\nA clean solution would be a function in shm.c which does a cleanup if only the \nfilename\nis know and use this instead of the apr_file_remove in scoreboard.c\n\nerich.prchal@siemens.at", "id": 13051, "time": "2002-04-08T18:02:41Z", "creator": "erich.prchal@siemens.at", "creation_time": "2002-04-08T18:02:41Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 7838, "text": "I guess the solution may be to add shmctl(new_m->shmid, IPC_RMID, NULL) just\nafter shmat, like all other shmem-using tools do. Thus pre-removing shared\nmemory segment and making it be released as soon as all processes detach from\nit. Am I missing something important here?", "id": 13075, "time": "2002-04-09T09:29:15Z", "creator": "stas-apache@zend.com", "creation_time": "2002-04-09T09:29:15Z", "is_private": false, "attachment_id": null}, {"count": 3, "text": "I have also enountered this bug on Solaris 8/SPARC.  A workaround on that \nplatform which allows Apache to be restarted without rebooting is to \nuse /usr/bin/ipcs to find the ID of the shared memory and /usr/bin/ipcrm to \nremove it.\n\nAccordingly, I have changed the Platform/OS of this bug from PC/Linux to \nAll/All and upped the Severity to Major as this is the sort of bug which might \ncause less experienced sysadmins to reboot when it's not really necessary.", "bug_id": 7838, "is_private": false, "id": 13433, "time": "2002-04-13T01:03:27Z", "creator": "paul@murph.org", "creation_time": "2002-04-13T01:03:27Z", "tags": [], "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 7838, "text": "This is one of the main drawbacks of using System V SHM.  Try using AcceptMutex\npthread if your platform supports it (Solaris certainly does).  You may also try\n\"flock\" or \"fcntl\" if your OS supports those values.  We can attempt to try to\nclean up certain shutdown paths, but I'm not sure we can catch everything.\n\nThe reason we do not want to delete the segment on initialization is that doing\nso prevents third-party modules (such as mod_perl which relies on this, AIUI)\nfrom attaching to the scoreboard externally.\n\nAlso fix typo in bug summary.", "id": 13569, "time": "2002-04-15T05:41:04Z", "creator": "jerenkrantz@apache.org", "creation_time": "2002-04-15T05:41:04Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 7838, "attachment_id": null, "text": "[adding myself to CC]", "id": 13706, "time": "2002-04-16T00:13:41Z", "creator": "matthew@davin.ottawa.on.ca", "creation_time": "2002-04-16T00:13:41Z", "is_private": false}, {"attachment_id": null, "tags": [], "creator": "matthew@davin.ottawa.on.ca", "text": "\nI am running the following procedure before starting the web server, but\nthe web server doesn't always start... It still gives an error.  What am \nI doing wrong?  Linux 2.4.18\n\n\n       [Thu Apr 18 16:03:40 2002] [crit] (17)File exists: unable to create\nscoreboard\n       (name-based shared memory failure)\n\n\n\nsub clean_shared_memory {\n        if (! open (PROC, \"<\", \"/proc/sysvipc/shm\")) {\n                warn \"Cannot open proc filesystem: $!\\n\";\n                return;\n        }\n\n        # key shmid perms size cpid lpid nattch uid gid cuid cgid atime dtime ctime\n        while (<PROC>) {\n                my ($shmid, $uid) = (split (/\\s+/))[2,8];\n                next if ($uid ne \"405\");\n                if (! shmctl($shmid, IPC_RMID, 0)) {\n                        warn \"Cannot remove shared memory segment=<$shmid>: $!\\n\";\n                        return;\n                }\n                print \"Removed shared memory segment=<$shmid>\\n\";\n        }\n        close (PROC);\n}\n", "count": 6, "id": 14034, "time": "2002-04-19T01:09:44Z", "bug_id": 7838, "creation_time": "2002-04-19T01:09:44Z", "is_private": false}, {"count": 7, "tags": [], "creator": "aaron@apache.org", "is_private": false, "text": "A few very good proposals have been made here, but unfortunately they are\ninsufficient:\n\n1) calling shmctl(new_m->shmid, IPC_RMID, NULL) right after calling shmat()\n  -- This won't work because segments that are marked IPC_RMID can not be\n     attached to in child processes.\n\n2) calling shmctl($shmid, IPC_RMID, 0) before creating a new segment\n  -- This is also problematic because this would allow a second instance\n     of apache to remove the segment of another already-running apache.\n\n\nIt is my understanding that the normal shutdown signals will call the\ncleanup routines and properly detach and remove the segment. If you are\nkilling apache with SIGKILL then you're going to have to use ipcs/ipcrm\nto clean up those segments. For the above reasons I'm marking this bug as\ninvalid, if you disagree please comment.", "id": 14747, "time": "2002-04-25T15:38:08Z", "bug_id": 7838, "creation_time": "2002-04-25T15:38:08Z", "attachment_id": null}, {"count": 8, "tags": [], "bug_id": 7838, "attachment_id": null, "is_private": false, "id": 14811, "time": "2002-04-26T01:43:48Z", "creator": "matthew@davin.ottawa.on.ca", "creation_time": "2002-04-26T01:43:48Z", "text": "What is the proper way to kill apache, having it NOT finish servicing any\nrequests, but die immediately and exit cleanly?\n\nThis is what I do now, which apparently leaves shared memory around\nsometimes.\n\nif (-e /var/run/httpd.pid) {\n        kill -TERM `cat /var/run/httpd.pid`\n        rm /var/run/httpd.pid\n}\n\nsleep 2\n\nkillall -9 httpd"}, {"count": 9, "text": "The proper way is to use httpd -k stop or apachectl -k stop. This should run all\nthe cleanup stuff and shutdown gently.", "bug_id": 7838, "is_private": false, "id": 31960, "time": "2003-02-26T01:05:29Z", "creator": "nd@perlig.de", "creation_time": "2003-02-26T01:05:29Z", "tags": [], "attachment_id": null}]