[{"count": 0, "tags": [], "creator": "pkrause@soundbite.com", "attachment_id": null, "id": 23536, "time": "2002-09-27T14:07:14Z", "bug_id": 13078, "creation_time": "2002-09-27T14:07:14Z", "is_private": false, "text": "The boolean PTG (1d) is not supported.  The causes errors when reading formulas \nthats use the TRUE or FALSE literals."}, {"count": 1, "tags": [], "bug_id": 13078, "attachment_id": 3260, "is_private": false, "id": 23538, "time": "2002-09-27T14:14:29Z", "creator": "pkrause@soundbite.com", "creation_time": "2002-09-27T14:14:29Z", "text": "Created attachment 3260\nBoolPtg.java (new file to support boolean token group)"}, {"count": 2, "tags": [], "bug_id": 13078, "attachment_id": 3261, "is_private": false, "id": 23539, "time": "2002-09-27T14:16:55Z", "creator": "pkrause@soundbite.com", "creation_time": "2002-09-27T14:16:55Z", "text": "Created attachment 3261\nPatch Ptg.java to use BoolPtg.java"}, {"count": 3, "attachment_id": null, "creator": "pkrause@soundbite.com", "is_private": false, "id": 23540, "time": "2002-09-27T14:18:46Z", "bug_id": 13078, "creation_time": "2002-09-27T14:18:46Z", "tags": [], "text": "Committers, please review the patch and decide whether to add it to HEAD."}, {"count": 4, "tags": [], "bug_id": 13078, "attachment_id": null, "id": 23543, "time": "2002-09-27T14:45:52Z", "creator": "poi-support@buni.org", "creation_time": "2002-09-27T14:45:52Z", "is_private": false, "text": "can you supply a unit test for these components as well?  Also you may want to\npatch FormulaParser to add write support.  Thanks!"}, {"count": 5, "tags": [], "text": "Created attachment 3263\nPatch FormulaParser to use BoolPtg", "attachment_id": 3263, "bug_id": 13078, "id": 23546, "time": "2002-09-27T15:03:39Z", "creator": "pkrause@soundbite.com", "creation_time": "2002-09-27T15:03:39Z", "is_private": false}, {"count": 6, "tags": [], "creator": "pkrause@soundbite.com", "attachment_id": null, "id": 23547, "time": "2002-09-27T15:06:00Z", "bug_id": 13078, "creation_time": "2002-09-27T15:06:00Z", "is_private": false, "text": "FormulaParser is not much fun to work with, but I've done my best.  Now how do \nI go about writing a testcase?  I modeled BoolPtg after IntPtg, so the IntPtg \ntest case would be the logical starting place.  But I can't find one for \nIntPtg, or any other Ptg."}, {"count": 7, "tags": [], "bug_id": 13078, "attachment_id": 3281, "is_private": false, "id": 23616, "time": "2002-09-29T02:27:38Z", "creator": "pkrause@soundbite.com", "creation_time": "2002-09-29T02:27:38Z", "text": "Created attachment 3281\nAdd 2 new test cases to  TestFormulaParser"}, {"count": 8, "tags": [], "bug_id": 13078, "attachment_id": null, "is_private": false, "id": 23698, "time": "2002-10-01T17:50:20Z", "creator": "poi-support@buni.org", "creation_time": "2002-10-01T17:50:20Z", "text": "applied.  \n\nIn the future please put new files in directory preserving archives with context\nrelative to jakarta-poi.  (zip/tar.gz/tar.bz)  Please label their type in the\ndescription (I'm a bad guesser).  Patches should be created relative to\njakarta-poi (and preserve the path).  thanks.\n\nPlease also add the appropriate tests to\nsrc/testcases/org/apache/poi/hssf/usermodel/TestFormulas.java\n(basically that they can be read and written and read from the file properly)\n\nYou bring up a good point about the PTGs.  The PTGs were actually part of an\nearlier prototype of formula support that I began November of last year.  I did\nnot think it would actually end up in the real thing, but I guess Avik found\nthem useful.  Probably about 50% or more of the HSSF was written in that time\nperiod.  We do not yet have an official policy regarding unit tests being\nrequired, but I know at least I will vote -1 to release any new code as\n\"production\" until the unit tests are written.  Old code is \"grandfathered\" in\nand we'll add unit tests as time permits or bugs necessitate.\n\nSo With that in mind, how to write a testcase.  Well thats pretty simple. \ncreate a file called TestBoolPtg in\nsrc/testcases/org/apache/poi/hssf/record/formula/.  Create a testBla() function\nfor each piece of functionality you want to test.  At minimum you should test\nthat the inputs yeild the expected results.  So construct an instance of BoolPtg\nthe way formula parser would and test that the results are what you would expect\n(all properties, etc).  Then construct it as Ptg would and check the results. \nIts best to check all the common properties as they should be used.\n\nThank you for your contribution."}]