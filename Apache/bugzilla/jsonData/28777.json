[{"count": 0, "tags": [], "creator": "jann.forrer@id.unizh.ch", "text": "With this patch AC_Live (IP-Range) should also work if apache with mod_proxy is\nused as a frontend server and it should give you the IP Address of an additional\nproxy if it is configured on the client site. \n\n\nIndex: DefaultAccessController.java\n===================================================================\nRCS file:\n/home/cvspublic/cocoon-lenya/src/java/org/apache/lenya/ac/impl/DefaultAccessController.java,v\nretrieving revision 1.5\ndiff -u -r1.5 DefaultAccessController.java\n--- DefaultAccessController.java        28 Apr 2004 12:52:35 -0000      1.5\n+++ DefaultAccessController.java        5 May 2004 07:58:25 -0000\n@@ -23,6 +23,7 @@\n import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n+import java.util.regex.*;\n \n import org.apache.avalon.framework.activity.Disposable;\n import org.apache.avalon.framework.component.Component;\n@@ -60,7 +61,8 @@\n     protected static final String TYPE_ATTRIBUTE = \"type\";\n     protected static final String ACCREDITABLE_MANAGER_ELEMENT =\n\"accreditable-manager\";\n     protected static final String POLICY_MANAGER_ELEMENT = \"policy-manager\";\n-\n+    private static final String  REGEX=\"([0-9]{1,3}\\\\.){3}[0-9]{1,3}\";\n+    \n     private ServiceSelector accreditableManagerSelector;\n     private AccreditableManager accreditableManager;\n \n@@ -390,6 +392,18 @@\n         if (!hasValidIdentity(session)) {\n             Identity identity = new Identity();\n             String remoteAddress = request.getRemoteAddr();\n+           String clientAddress = request.getHeader(\"x-forwarded-for\");\n+\n+           if (clientAddress != null) { \n+               Pattern p = Pattern.compile(REGEX);\n+               Matcher m = p.matcher(clientAddress);\n+              \n+               if (m.find()) {\n+                   remoteAddress=m.group();\n+               }\n+           }\n+\n+           getLogger().info(\"Remote Address to use: [\" + remoteAddress +\"]\");\n \n             Machine machine = new Machine(remoteAddress);\n             IPRange[] ranges =\naccreditableManager.getIPRangeManager().getIPRanges();", "id": 56850, "time": "2004-05-05T08:07:33Z", "bug_id": 28777, "creation_time": "2004-05-05T08:07:33Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 28777, "attachment_id": 11432, "is_private": false, "id": 56851, "time": "2004-05-05T08:13:18Z", "creator": "jann.forrer@id.unizh.ch", "creation_time": "2004-05-05T08:13:18Z", "text": "Created attachment 11432\npatch for the DefaultAccessController class"}, {"count": 2, "tags": [], "bug_id": 28777, "attachment_id": null, "is_private": false, "id": 57072, "time": "2004-05-10T10:16:18Z", "creator": "gregor@apache.org", "creation_time": "2004-05-10T10:16:18Z", "text": "merged. thanks"}]