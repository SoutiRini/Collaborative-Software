[{"count": 0, "tags": [], "text": "Reading dates from files w/ 1904 date windowing was handled, but writing dates\nwasn't.  This fixes it and adds a test case.", "attachment_id": null, "id": 108981, "creator": "ajacoby@gmail.com", "time": "2007-10-04T07:03:32Z", "bug_id": 43551, "creation_time": "2007-10-04T07:03:32Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 43551, "attachment_id": 20918, "is_private": false, "id": 108982, "time": "2007-10-04T07:04:43Z", "creator": "ajacoby@gmail.com", "creation_time": "2007-10-04T07:04:43Z", "text": "Created attachment 20918\nFixes bug, adds test cases, adds comments"}, {"count": 2, "tags": [], "bug_id": 43551, "attachment_id": null, "text": "Patch effects the follwing files:\nHSSFCell, HSSFDateUtil, their respective test classes, and the test data files\n1900DateWindowing.xls and 1904DateWindowing.xls.", "id": 108984, "time": "2007-10-04T07:07:21Z", "creator": "ajacoby@gmail.com", "creation_time": "2007-10-04T07:07:21Z", "is_private": false}, {"count": 3, "text": "I think you forgot to attach xls files :)", "bug_id": 43551, "is_private": false, "id": 109052, "time": "2007-10-06T12:18:01Z", "creator": "pkrupets@yahoo.com", "creation_time": "2007-10-06T12:18:01Z", "tags": [], "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 43551, "text": "Created attachment 20936\nTest data file for 1900 date windowing\n\nSorry -- new to subversion -- I had read that it did binary diffs for updates,\nbut of course I should have realized they wouldn't be included in a patch file.", "id": 109053, "time": "2007-10-06T12:41:42Z", "creator": "ajacoby@gmail.com", "creation_time": "2007-10-06T12:41:42Z", "is_private": false, "attachment_id": 20936}, {"count": 5, "tags": [], "bug_id": 43551, "text": "Created attachment 20937\nTest data file for 1904 date windowing\n\nI added one cell to each of these files: the first is untouched and is used\njust for reading.  The new cell is used to write and then read back the value.", "id": 109054, "time": "2007-10-06T12:43:13Z", "creator": "ajacoby@gmail.com", "creation_time": "2007-10-06T12:43:13Z", "is_private": false, "attachment_id": 20937}, {"count": 6, "tags": [], "bug_id": 43551, "text": "need to figure out how to access 1900/1904 property from HSSFCell.", "id": 109056, "time": "2007-10-06T13:25:14Z", "creator": "pkrupets@yahoo.com", "creation_time": "2007-10-06T13:25:14Z", "is_private": false, "attachment_id": null}, {"count": 7, "tags": [], "bug_id": 43551, "attachment_id": null, "is_private": false, "id": 109057, "time": "2007-10-06T13:25:47Z", "creator": "pkrupets@yahoo.com", "creation_time": "2007-10-06T13:25:47Z", "text": "sorry from Date function :)) Was thinking about one thing and writing about another"}, {"count": 8, "tags": [], "bug_id": 43551, "text": "If you mean from the HSSFDateUtil class, you need to pass the info as a\nparameter (DateUtil is just a collection of static methods, so there's no other\nway for it to know which type of date windowing is being used by its caller.)\nMy patch replicates the same style as the earlier patch which fixed the read\nerror: it passes a boolean use1904windowing parameter to the effected method.", "id": 109058, "time": "2007-10-06T13:32:14Z", "creator": "ajacoby@gmail.com", "creation_time": "2007-10-06T13:32:14Z", "is_private": false, "attachment_id": null}, {"count": 9, "tags": [], "bug_id": 43551, "attachment_id": null, "is_private": false, "id": 109061, "time": "2007-10-06T15:01:21Z", "creator": "pkrupets@yahoo.com", "creation_time": "2007-10-06T15:01:21Z", "text": "No. Some functions are 1900/1904 sensitive."}, {"count": 10, "tags": [], "bug_id": 43551, "attachment_id": null, "text": "(In reply to comment #9)\n> No. Some functions are 1900/1904 sensitive.\n\nI just double-checked.  The only functions which are 1900/04 sensitive have a\nboolean parameter saying that.  (Well, the old one-param versions are in there\nso they don't break existing code, but they just delegate to the 2-param version\nand default to 1900 date windowing since it's more common.)\n\nWe're talking about HSSFDateUtil, right?  All methods are static, and its\nconstructor is private.  Maybe I'm missing something...", "id": 109062, "time": "2007-10-06T15:07:35Z", "creator": "ajacoby@gmail.com", "creation_time": "2007-10-06T15:07:35Z", "is_private": false}, {"count": 11, "tags": [], "bug_id": 43551, "attachment_id": null, "text": "the following functions use HSSFDateUtil and need access to 1900/1904 flag\n\norg.apache.poi.hssf.record.formula.functions.Date#evaluate,\norg.apache.poi.hssf.record.formula.functions.Day#evaluate,\norg.apache.poi.hssf.record.formula.functions.Month#evaluate,\norg.apache.poi.hssf.record.formula.functions.Year#evaluate\n\nmonth might ignore it but day couldn't because of Excel Day Bug, year couldn't\nas well.", "id": 109063, "time": "2007-10-06T15:14:36Z", "creator": "pkrupets@yahoo.com", "creation_time": "2007-10-06T15:14:36Z", "is_private": false}, {"count": 12, "tags": [], "bug_id": 43551, "is_private": false, "text": "Got it.  I hadn't looked in the scratchpad area at all, or compiled it.\n\nIt looks like org.apache.poi.hssf.usermodel.HSSFFormulaEvaluator is solely\nresponsible for grabbing the numeric value from the cell and sticking it in a\nNumberEval, so it could also pass along 1900/04 windowing information to the\nNumberEval if we extended NumberEval to store that info too.\n\nSound doable?", "id": 109065, "time": "2007-10-06T16:27:57Z", "creator": "ajacoby@gmail.com", "creation_time": "2007-10-06T16:27:57Z", "attachment_id": null}, {"count": 13, "tags": [], "bug_id": 43551, "attachment_id": null, "text": "Just to confirm: The patch won't *break* any of the existing code.  The\nfunctions will continue to work as before, always assuming 1900 date windowing\n(which is probably right in nearly all cases, as long as you aren't on a Mac). \nIt looks like we can fix that in a separate patch.\n\nSo, anyone want to commit this patch first?  Or is there something else I should do?", "id": 109066, "time": "2007-10-06T16:42:51Z", "creator": "ajacoby@gmail.com", "creation_time": "2007-10-06T16:42:51Z", "is_private": false}, {"count": 14, "tags": [], "creator": "pkrupets@yahoo.com", "text": "Created attachment 20938\ninvalid patch", "id": 109068, "time": "2007-10-06T16:51:19Z", "bug_id": 43551, "creation_time": "2007-10-06T16:51:19Z", "is_private": false, "attachment_id": 20938}, {"count": 15, "tags": [], "text": "Looks good to me :)", "attachment_id": null, "id": 109069, "creator": "ajacoby@gmail.com", "time": "2007-10-06T17:04:19Z", "bug_id": 43551, "creation_time": "2007-10-06T17:04:19Z", "is_private": false}, {"count": 16, "tags": [], "bug_id": 43551, "attachment_id": 20939, "text": "Created attachment 20939\nnew patch added several tests and fixed 1904 start date problem\n\nthis is the patch to apply, don't forget xls files", "id": 109074, "time": "2007-10-07T11:31:16Z", "creator": "pkrupets@yahoo.com", "creation_time": "2007-10-07T11:31:16Z", "is_private": false}, {"count": 17, "tags": [], "bug_id": 43551, "attachment_id": null, "is_private": false, "id": 111404, "time": "2007-12-04T04:08:01Z", "creator": "apache@gagravarr.org", "creation_time": "2007-12-04T04:08:01Z", "text": "Is this patch now final and ready to be committed?"}, {"count": 18, "attachment_id": null, "creator": "ajacoby@gmail.com", "is_private": false, "id": 111414, "time": "2007-12-04T05:16:29Z", "bug_id": 43551, "creation_time": "2007-12-04T05:16:29Z", "tags": [], "text": "Yes -- I believe Pavel and I have both finished working on it."}, {"count": 19, "tags": [], "bug_id": 43551, "is_private": false, "text": "Thanks for this, now committed.", "id": 111423, "time": "2007-12-04T09:07:15Z", "creator": "apache@gagravarr.org", "creation_time": "2007-12-04T09:07:15Z", "attachment_id": null}]