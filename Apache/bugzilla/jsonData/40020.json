[{"count": 0, "tags": [], "text": "A patch to add apr_uint8_t and apr_int8_t to apr.h is attached. It also ensures\nthat CHAR_BIT is 8 bits (it normally is) and that short_value and long_value are\ndefined.", "attachment_id": null, "bug_id": 40020, "id": 91163, "time": "2006-07-11T20:28:49Z", "creator": "bondolo@jxta.org", "creation_time": "2006-07-11T20:28:49Z", "is_private": false}, {"count": 1, "attachment_id": 18589, "creator": "bondolo@jxta.org", "is_private": false, "id": 91164, "time": "2006-07-11T20:29:54Z", "bug_id": 40020, "creation_time": "2006-07-11T20:29:54Z", "tags": [], "text": "Created attachment 18589\nadds support for uint8 and int8 types to apr.h"}, {"count": 2, "tags": [], "creator": "wrowe@apache.org", "attachment_id": null, "id": 103944, "time": "2007-05-31T23:38:18Z", "bug_id": 40020, "creation_time": "2007-05-31T23:38:18Z", "is_private": false, "text": "since this falls into 1.3.x - it falls into the enhancement category."}, {"count": 3, "tags": [], "creator": "jorton@redhat.com", "attachment_id": null, "id": 105061, "time": "2007-07-04T03:06:58Z", "bug_id": 40020, "creation_time": "2007-07-04T03:06:58Z", "is_private": false, "text": "Why not use \"unsigned char\" and \"signed char\"? "}, {"count": 4, "tags": [], "text": "For the same reason that uint32 and int32 is used rather than unsigned int or\nsigned int--the size of \"char\" is not fixed. \n\nAdmittedly char is almost always 8 bits except for some obscure embedded OSes\nthat are used Asia (native 16 bit chars) and are not likely targets for APR.\n\nUsing only the uint* and int* types for wire protocols has a nice symmetry and\nspecificness as well. ie.\n\nstruct foo {\n  int8  version;\n  uint8 type;\n  int16 thing;\n  uint16 length;\n  int32 signature;\n  uint32 control;\n  int64 offset;\n  uint64 time;\n};\n\n", "is_private": false, "id": 105214, "creator": "bondolo@jxta.org", "time": "2007-07-09T10:37:53Z", "bug_id": 40020, "creation_time": "2007-07-09T10:37:53Z", "attachment_id": null}]