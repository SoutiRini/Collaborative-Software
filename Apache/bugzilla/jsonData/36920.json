[{"count": 0, "tags": [], "creator": "tobias@net-clipping.de", "text": "read this thread for a detailed description of the problem:\nhttps://www.sdn.sap.com/sdn/collaboration.sdn?contenttype=url&content=https%3A//forums.sdn.sap.com/thread.jspa%3FthreadID%3D34814%26tstart%3D60\n\nit is not directly related to J2EE, because i had the same problems\non a standard Apache/PHP4.x on a Suse9.0 System. The suggested fix\nworked for me, too.\n\nthis is probably an issue with internet explorer, but as a lot of people\nare affected by it, there should be some kind of workaround. I don't\nknow if the suggested fix as some bad side effects.\n\nthe fix (found by Dale Wilson)\n------------------------------\n\nEnable the mod_headers module\nAdd the following line to your apache configuration:\n\nRequestHeader unset range", "id": 80761, "time": "2005-10-04T23:09:08Z", "bug_id": 36920, "creation_time": "2005-10-04T23:09:08Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "creator": "nick@webthing.com", "attachment_id": null, "is_private": false, "id": 80770, "time": "2005-10-05T02:53:44Z", "bug_id": 36920, "creation_time": "2005-10-05T02:53:44Z", "text": "This is bugs #10781 and #11993, which I found by entering \"byteranges\" as \nsearch term.  \n  \nBut neither of those reports is up to date with the real fix implemented by  \n(IIRC) Joe Orton, so evidently I'm missing something.  Can anyone find a \nrecord of that here?  If not, marking this a duplicate of 10781 is in order. "}, {"count": 2, "tags": [], "bug_id": 36920, "is_private": false, "text": "BTW, your workaround is wrong - it leaves Apache lying to the browser by \nclaiming to accept range requests when in fact you've disabled them.  If you \nunset the Ranges request header, you must *also* unset the Accept-Ranges \nresponse header: \nHeader unset Accept-Ranges \n \nThat is in fact the real fix (short of updating to a fixed apache version), \nalthough yours helps make it more robust against browser bugs. ", "id": 80771, "time": "2005-10-05T03:00:59Z", "creator": "nick@webthing.com", "creation_time": "2005-10-05T03:00:59Z", "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 36920, "is_private": false, "text": "so the fix is now:\n<FilesMatch \"\\.pdf$\" >\n   RequestHeader unset range\n   Header unset Accept-Ranges\n</FilesMatch>\n\nNick, did you mean, that there is already is a fixed version? I could't \nfind anything in the CHANGES File from Joe Orton, that adressed this\nproblem.", "id": 80784, "time": "2005-10-05T11:31:43Z", "creator": "tobias@net-clipping.de", "creation_time": "2005-10-05T11:31:43Z", "attachment_id": null}, {"count": 4, "tags": [], "creator": "jorton@redhat.com", "is_private": false, "text": "The only known issue in the 2.0 byterange handling is the memory consumption in\nversions <= 2.0.54.  You can try this patch:\n\nhttp://people.apache.org/~jorton/ap_byterange.diff\n\nbut for the proxy case this will effectively turn off byteranging, so it's not a\nlot different to the config workaround you were using.\n\nThe issue describe here is really just \"MSIE/Acrobat fails to handle a\nbyteranged response properly\".  This needs further investigation to determine\nwhether this is a client, origin server, or proxy/byteranging issue.\n", "id": 80834, "time": "2005-10-06T11:46:15Z", "bug_id": 36920, "creation_time": "2005-10-06T11:46:15Z", "attachment_id": null}, {"count": 5, "attachment_id": null, "bug_id": 36920, "is_private": false, "id": 138533, "time": "2010-07-19T21:04:39Z", "creator": "nick@webthing.com", "creation_time": "2010-07-19T21:04:39Z", "tags": [], "text": "It's not clear whether this was fixed long ago, but if not, we won't fix it in httpd 2.0, which is no longer supported.  If there's a similar problem in 2.2 or later and current clients, that should be a new report, preferably with a reproducible test case."}]