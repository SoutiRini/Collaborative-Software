[{"attachment_id": null, "tags": [], "bug_id": 14639, "is_private": false, "count": 0, "id": 26483, "time": "2002-11-18T15:49:49Z", "creator": "tilman.giese@globalview.de", "creation_time": "2002-11-18T15:49:49Z", "text": "I used AcceptPathInfo On to allow parsing of query strings, e.g.\n\n/www/test.php/category/234\n\nwhere test.php is the real file. But if there is a slash as %2f in the query \nstring, e.g.\n\n/www/test.php/category%2f234\n\napache creates a 404 error."}, {"count": 1, "tags": [], "bug_id": 14639, "attachment_id": null, "is_private": false, "id": 26823, "time": "2002-11-22T20:01:07Z", "creator": "volz@net-sieve.com", "creation_time": "2002-11-22T20:01:07Z", "text": "I have the same problem, only when apache is configured as a transparent proxy."}, {"count": 2, "tags": [], "creator": "wrowe@apache.org", "text": "\n  You aren't reporting a bug in query strings (those strings following the\n  '?' question mark delimiter.)  You are speaking of path info, which only\n  makes sense when interpreted with the filesystem.  Because of security\n  implications, that ambiguity was disabled eaons ago.\n", "id": 26857, "time": "2002-11-23T07:31:52Z", "bug_id": 14639, "creation_time": "2002-11-23T07:31:52Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "creator": "coar@apache.org", "text": "This has been addressed in Apache 2.0.46 through the new AllowEncodedSlashes\ndirective.", "id": 38837, "time": "2003-06-13T21:58:54Z", "bug_id": 14639, "creation_time": "2003-06-13T21:58:54Z", "is_private": false, "attachment_id": null}]