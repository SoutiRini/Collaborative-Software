[{"count": 0, "tags": [], "bug_id": 3256, "attachment_id": null, "text": "As per my post to tomcat-user/dev:\n\nI'm running Apache/tomcat 3.3 Beta with jserv.\n\nMy server.xml contains the following RequestInterceptor tag/element\n\n     <RequestInterceptor\n        className=\"org.apache.tomcat.modules.server.Ajp12Interceptor\"\n        tomcatAuthentication=\"false\"\n        port=\"8007\" />\n\nBut it doesn't seem that tomcatAuthentication is actually disabled.\n\nLooking at the code I see the following\n\nThe AjpInteceptor instantiates both AjpRequest and AjpResponse objects.\nThe instantiation of AjpRequest in turn instantiates an instance of Ajp12\nwhich is where we read off the stream from jserv.\n\nBoth AjpInterceptor and Ajp12 default tomcatAuthentication to true.\n\nwhen Ajp12 is reading the stream it will ignore the remote users if\ntomcat Authentication is true.\n\n                   if (isTomcatAuthentication())\n                       dummy=readString(ajpin, null);\n                   else\n\nwhich is what is happening.\n\nIt would seem to me given the Request interceptor definition\nin server.xml that Ajp12 should be reading the remote user,\ni.e. tomcatAuthentication is false.\n\nSince Ajp12Interceptor instantiates Ajp12 I would expect given\nthe server.xml def it would make a call to Ajp12 to set tomcat\nauthentication to false. This might possible occur in the\nprocessConnection method:\n\n\n           if( reqA==null || resA==null ) {\n               reqA = new AJP12Request();\n               reqA.setSecret( secret );\n               ((AJP12Request)reqA).setTomcatAuthentication(\n                                       isTomcatAuthentication());\n               resA=new AJP12Response();\n               cm.initRequest( reqA, resA );\n           }\n\nBut it would require that the local instance field tomcatAuthentication be set\nto false\nif it were to work at all. None of this is happening as far as I can tell.\n\nBasically I don't see a path through the code which would disable\ntomcatAuthentication\nthat corresponds the the server.xml Request Intercepter definition.\n\nThe only way I've been able to disable the tomcatAuthentication and read a\nremote_user\noff the jserv stream was to modify Ajp12, defaulting tomcatAuthentication to false.\n\nAny insight would be appreciated.", "id": 4780, "time": "2001-08-24T05:12:10Z", "creator": "jjv@windchill.com", "creation_time": "2001-08-24T05:12:10Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 3256, "attachment_id": null, "is_private": false, "id": 4792, "time": "2001-08-24T14:02:57Z", "creator": "nacho@apache.org", "creation_time": "2001-08-24T14:02:57Z", "text": "AFAIK XmlMapper maps attributes to bean properties.. and is suppoussed that \nthis is done automaticaly all the time , this is why the ajp12interceptor has \nsetTomcatAuthentiocation..that is automagically calle whith the value of the \nattribute as parameter ..\n\nI dont understand why does not work at all..\n\nI added this capability for the opposite reason, to be able to not use the Http \nserver own native methods at all, to be able to bypass IIS auth .. so no \nproblem in put the default to false..in either case.. I'll go and will do this \nand mark it as RESOLVED.. "}]