[{"count": 0, "tags": [], "bug_id": 46963, "attachment_id": null, "is_private": false, "id": 125982, "time": "2009-04-03T10:16:56Z", "creator": "neel.goyal@gmail.com", "creation_time": "2009-04-03T10:16:56Z", "text": "Version 2.2.11\n\nMy assumption is if a persistent connection is made to the server with KeepAlive On, the request thread will not terminate until the KeepAlive timeout or the connection is closed by the client.\n\nin server/mpm/winnt/child.c the child waits for the threads to exit.  Around line 1119.  It waits X seconds where X is the time specified in the Timeout directive.  The thread is forcibly closed after X seconds (line 1180) and then destroy the child pool properly (line 1208).\n\nHowever, in server/mpm/winnt/mpm_winnt.c the parent process decides it's time to kill the child after a hardcoded 30 seconds (line 964).  This ends up killing the child process without destroying the child pool.  Thus, registered callbacks fail to properly cleanup.\n\nThis may also be linked to Bug 41743 which also describes shutdown errors with KeepAlive On"}, {"count": 1, "tags": [], "bug_id": 46963, "text": "I just ran into this as well.  We have a custom module that has a hook into the shutdown via apr_pool_cleanup_register().\n\nIf the KeepAliveTimeout is set to anything greater than 30 seconds (the hardcoded \"death to all children time\" as mentioned in NG's comment), our cleanup is never called and various resources fail to get cleaned up.\n\nWe're working around this through other means, but it seems that when the server is shutting down, the child thread that is in a keep-alive state waiting for a further request should close its socket and exit rather than waiting for the end of the keep-alive timeout.  For one thing, any further requests by the client will be ignored, so there doesn't appear to be a benefit to staying open.\n\nYou can see the effect quite easily with a simple configuration:\n\n1. httpd.conf with KeepAliveTimeout set to something > 30 seconds (say 60)\n2. a Module with a cleanup hooked into apr_pool_cleanup_register()\n3. start server\n4. make a single keep-alive request to server-status (or any other resource)\n5. shut down server\n-->  you will find that the server takes ~30 seconds to shutdown and the cleanup is never called\n\nRepeat, but eliminate the connection in step 4:\n--> process shuts down in ~2-5 seconds and clean up is called\n\nRepeat, but this time reduce the KeepAliveTimeout to < 10 seconds (say 10)\n--> process shuts down in ~5-15 seconds and clean up is called", "id": 164192, "attachment_id": null, "creator": "steven.BUSH@3ds.com", "creation_time": "2012-12-20T23:22:43Z", "time": "2012-12-20T23:22:43Z", "is_private": false}]