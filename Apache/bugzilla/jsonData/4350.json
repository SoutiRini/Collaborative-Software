[{"count": 0, "tags": [], "text": "When 'log in' using CLIENT-CERT, the SSLAuthenticator did not associate the SSO \nsession with the user's session and cause the 'log out' to fail.  The following \npatch seem to fix it.\n\n\n    public boolean authenticate(HttpRequest request,\n                                HttpResponse response,\n                                LoginConfig config)\n        throws IOException {\n\n        // Have we already authenticated someone?\n        Principal principal =\n            ((HttpServletRequest) request.getRequest()).getUserPrincipal();\n        if (principal != null) {\n            if (debug >= 1)\n                log(\"Already authenticated '\" + principal.getName() + \"'\");\n            String ssoId = (String) request.getNote(Constants.REQ_SSOID_NOTE);\n            if (ssoId != null)\n                associate(ssoId, getSession(request, true));\n            return (true);\n        }\n\n        // Retrieve the certificate chain for this client\n        HttpServletResponse hres =\n            (HttpServletResponse) response.getResponse();\n        if (debug >= 1)\n            log(\" Looking up certificates\");\n        X509Certificate certs[] = (X509Certificate[])\n            request.getRequest().getAttribute(Globals.CERTIFICATES_ATTR);\n        if ((certs == null) || (certs.length < 1)) {\n            if (debug >= 1)\n                log(\"  No certificates included with this request\");\n            hres.sendError(HttpServletResponse.SC_BAD_REQUEST,\n                           sm.getString(\"authenticator.certificates\"));\n            return (false);\n        }\n\n        // Authenticate the specified certificate chain\n        principal = context.getRealm().authenticate(certs);\n        if (principal == null) {\n            if (debug >= 1)\n                log(\"  Realm.authenticate() returned false\");\n            hres.sendError(HttpServletResponse.SC_UNAUTHORIZED,\n                           sm.getString(\"authenticator.unauthorized\"));\n            return (false);\n        }\n\n        Session session = getSession(request, true);\n        // Cache the principal (if requested) and record this authentication\n        register(request, response, principal, Constants.CERT_METHOD,\n                 null, null);\n        if (principal != null) {\n            String ssoId = (String) request.getNote(Constants.REQ_SSOID_NOTE);\n            if (ssoId != null)\n                associate(ssoId, session);\n        }\n        return (true);\n\n    }", "attachment_id": null, "id": 7024, "creator": "kar_yeow@eol.ieaust.org.au", "time": "2001-10-22T14:59:48Z", "bug_id": 4350, "creation_time": "2001-10-22T14:59:48Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 4350, "attachment_id": null, "id": 7281, "time": "2001-10-29T12:35:37Z", "creator": "craig.mcclanahan@sun.com", "creation_time": "2001-10-29T12:35:37Z", "is_private": false, "text": "Assigning to myself for investigation.\n\n"}, {"count": 2, "text": "Any news since October 2001 ?\n", "creator": "A.Kuckartz@ping.de", "is_private": false, "id": 38286, "time": "2003-06-03T18:34:00Z", "bug_id": 4350, "creation_time": "2003-06-03T18:34:00Z", "tags": [], "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 4350, "attachment_id": null, "id": 48636, "time": "2003-12-07T18:43:15Z", "creator": "bstansberry@jboss.com", "creation_time": "2003-12-07T18:43:15Z", "is_private": false, "text": "There is a patch (actually two; one for TC5, one for TC 4.1) attached to bug \n23581 that fixes this.  The TC5 version of the patch has been applied, so this \nbug is fixed in TC5.  The TC 4.1 version has not been applied yet."}, {"count": 4, "tags": [], "bug_id": 4350, "attachment_id": null, "id": 48639, "time": "2003-12-07T19:27:49Z", "creator": "medthomas@ntlworld.com", "creation_time": "2003-12-07T19:27:49Z", "is_private": false, "text": "Just to correct the previous post, the duplicate bug is 23881. Marking this as \na duplicate (as 23881 has the patch).\n\n*** This bug has been marked as a duplicate of 23881 ***"}]