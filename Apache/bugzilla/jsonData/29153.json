[{"count": 0, "tags": [], "text": "If I want to have two macros, each with an <element> parameter with the same\nname (because, say, they have the same semantics - e.g. <wsddfiles>, or\nsomething like that), then I can't one macro from the other.\n\nSee the attached test case. Both macro1 and macro2 have the same parameter\nelement (\"<files>\"). But there's no way for me to call macro2 from macro1 and\njust pass on the <files> that I received.\n\n\n  <macrodef name=\"macro1\">\n    <element name=\"files\"/>\n    <sequential>\n      <pathconvert property=\"foo\" pathsep=\":\">\n        <path>\n          <files/>\n        </path>\n      </pathconvert>\n      <echo message=\"${foo}\"/>\n    </sequential>\n  </macrodef>\n\n  <macrodef name=\"macro2\">\n    <element name=\"files\"/> <!-- same elem parm name as that for macro1 -->\n    <sequential>\n      <macro1>\n        <files/>            <!-- HERE: Trying to pass on the macro parms -->\n      </macro1>\n      <echo message=\"${foo}\"/>\n    </sequential>\n  </macrodef>\n\nThis causes the error:\n\nC:\\Workarea\\CSIMain\\csi\\xx.xml:32: Following error occured while executing this line\nC:\\Workarea\\CSIMain\\csi\\xx.xml:18: unsupported element fileset\n\n(The line in question is a call to macro2; line 18 is the <macro1> invocation in\n<macro2>).\n\nI also tried invoking macro1 in macro2 like this:\n\n      <macro1>\n        <files>\n          <files/>\n        </files>\n      </macro1>\n\nThat didn't help, either.\n\nIt would be nice if ant automatically figured out that I was passing the element\nreference directly to another macro, and did not unwrap it right away. Failing\nthat, if the workaround I attempted above worked, that would be great, too.", "is_private": false, "id": 57904, "creation_time": "2004-05-22T22:09:41Z", "time": "2004-05-22T22:09:41Z", "creator": "shankarunni@netscape.net", "bug_id": 29153, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 29153, "text": "Created attachment 11636\nTest case xx.xml", "id": 57905, "time": "2004-05-22T22:12:00Z", "creator": "shankarunni@netscape.net", "creation_time": "2004-05-22T22:12:00Z", "is_private": false, "attachment_id": 11636}, {"count": 2, "tags": [], "creator": "peter.reilly@corvil.com", "is_private": false, "text": "The macro expands the contents of the nested element.\n(It is a macro after all!)\nYour original macro definitions are correct, however\nyou need to call <macro2/> as follows:\n\n<macro2>\n   <files>\n      <files>\n         <fileset dir=\".\" includes=\"*.xml\"/>\n      </files>\n   </files>\n</macro2>\n\nnot nice but logical.\nThis can be seen if macro2 did not use the name \"files\" for the\nnested element, by for example \"files2\":\n\n<macro2>\n   <files2>\n      <files>\n         <fileset dir=\".\" includes=\"*.xml\"/>\n      </files>\n   </files2>\n</macro2>\n\nThis should be avoided when/if bug 25633 is implemented.\n(In which case, one can to\n<macrodef name=\"macro1\">\n  <element name=\"files\"> implicit=\"yes\">\n  <sequential>\n     <pathconvert property=\"foo\" pathsep=\":\">\n        <path>\n          <files/>\n        </path>\n      </pathconvert>\n      <echo message=\"${foo}\"/>\n   </sequential>\n</macrodef>\n\n<macro1>\n   <fileset dir=\".\" includes=\"*.xml\"/>\n</macro1>\n\nI am marking this bug as INVALID, as it is by design, although\nit is a bit counter intutative.", "id": 57945, "time": "2004-05-24T08:08:18Z", "bug_id": 29153, "creation_time": "2004-05-24T08:08:18Z", "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 29153, "text": "That's unfortunate, but I suppose I can see why it's conking out like this.\nHowever, it does make the macros non-orthogonal, in that I have to invoke macro1\npassing in just a <files>...</files>, but macro2 using\n<files><files>...</files></files>, which is a bit ugly.\n\nBut then, I suppose this is just like the doubling and quadrupling of quotes in\nshell aliases :-(.", "id": 57967, "time": "2004-05-24T14:17:44Z", "creator": "shankarunni@netscape.net", "creation_time": "2004-05-24T14:17:44Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "creator": "rec@apache.org", "attachment_id": null, "is_private": false, "id": 176832, "time": "2014-08-01T20:24:37Z", "bug_id": 29153, "creation_time": "2014-08-01T20:24:37Z", "text": "Implicit element arguments are no substitute, because there can only be once implicit per task. Using the suggested approach of wrapping multiple times is also no solution because that requires that the top-level caller knows the eventual macro nesting depth and that the nesting depth is equal in all cases (macro nesting depth can depend on dynamic conditions)."}]