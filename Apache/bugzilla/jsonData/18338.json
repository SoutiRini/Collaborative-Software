[{"count": 0, "tags": [], "text": "When outputting a 204-status header from a cgi-script, the webserver \nincorrectly logs a HTTP 200 OK response.", "attachment_id": null, "id": 33788, "creator": "info@orangexl.com", "time": "2003-03-25T20:14:17Z", "bug_id": 18338, "creation_time": "2003-03-25T20:14:17Z", "is_private": false}, {"count": 1, "tags": [], "creator": "nd@perlig.de", "is_private": false, "id": 33792, "attachment_id": null, "bug_id": 18338, "creation_time": "2003-03-25T20:58:12Z", "time": "2003-03-25T20:58:12Z", "text": "I've just tested with current HEAD and the following script:\n\n#!perl\nprint \"Status: 204\\n\\n\";\n\n__END__\n\nA correct 204 status is logged. Please try a newer version and provide details \nof your script, configuration etc.\n\nThanks."}, {"count": 2, "tags": [], "text": "Are you sure the statusline shouldn't be formed like said in \nhttp://www.w3.org/Protocols/rfc2616/rfc2616-sec6.html#sec6.1 ???\n\nTry:\n\n#!perl\nprint \"$ENV{SERVER_PROTOCOL} 204 No Content\\n\"\nexit;\n\nWill upgrade as soon as 2.0.45 is out.", "attachment_id": null, "id": 33794, "creation_time": "2003-03-25T21:32:16Z", "time": "2003-03-25T21:32:16Z", "creator": "info@orangexl.com", "bug_id": 18338, "is_private": false}, {"count": 3, "tags": [], "text": "Yes, sure unless we're talking about raw http communication (aka nph-scripts). I\nassumed a normal CGI environment, where the status code is gatewayed via the\nStatus: pseudo header. (reference:\n<http://cgi-spec.golux.com/draft-coar-cgi-v11-03-clean.html#7.2.1.3>)", "attachment_id": null, "id": 33796, "creator": "nd@perlig.de", "time": "2003-03-25T22:21:58Z", "bug_id": 18338, "creation_time": "2003-03-25T22:21:58Z", "is_private": false}, {"count": 4, "tags": [], "creator": "info@orangexl.com", "attachment_id": null, "id": 33797, "time": "2003-03-25T22:38:41Z", "bug_id": 18338, "creation_time": "2003-03-25T22:38:41Z", "is_private": false, "text": "I'm talking about nph-scripts, sorry, should have been more clear!"}, {"count": 5, "tags": [], "bug_id": 18338, "attachment_id": null, "id": 33804, "time": "2003-03-26T02:21:15Z", "creator": "slive@apache.org", "creation_time": "2003-03-26T02:21:15Z", "is_private": false, "text": "Hmmm... nph stands for non-parsed header.  You want apache to parse the headers\non your non-parsed header script to determine the proper status code for\nlogging?  Sounds a little strange.\n\nPersonally, I'd call this \"wontfix\", but I'll leave that decision up to\nothers."}, {"count": 6, "tags": [], "text": "Apache only needs to look at the fist outputted line, which should be of the \nform \"HTTP/1.1 200 OK\".\nI would think it would be rather easy for apache to determine the statuscode of \nnph's, and log it.", "attachment_id": null, "id": 33818, "creator": "info@orangexl.com", "time": "2003-03-26T10:23:29Z", "bug_id": 18338, "creation_time": "2003-03-26T10:23:29Z", "is_private": false}, {"count": 7, "tags": [], "bug_id": 18338, "attachment_id": null, "text": "Agreed with Joshua. nph-scripts explicitely skip all output filters including \nthe protocol filters and put the data directly onto the connection filter stack.\n\nThat is, what such scripts are intended for. That way, first line or not, the \noutput is requested to be opaque to the httpd. We should mention that somewhere \nin the docs, of course.", "id": 33834, "time": "2003-03-26T15:56:02Z", "creator": "nd@perlig.de", "creation_time": "2003-03-26T15:56:02Z", "is_private": false}]