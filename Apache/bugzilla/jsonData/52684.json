[{"attachment_id": null, "tags": [], "bug_id": 52684, "is_private": false, "count": 0, "id": 153842, "time": "2012-02-16T16:04:11Z", "creator": "tcole6@gmail.com", "creation_time": "2012-02-16T16:04:11Z", "text": "I am unable to read a formatted numeric value that has a custom format.\n\nExample:\n\nIn Excel 2007, enter value 12312345123 in a cell.\n\nFormat the cell with a custom format of 000-00000-000.\n\nThe cell now contains the formatted value 123-12345-123.\n\nFrom POI read the contents of the cell using:\n\n[code]\n//load Workbook as workbook...\nDataFormatter formatter = new DataFormatter();\nFormulaEvaluator evaluator = workbook.getCreationHelper().createFormulaEvaluator();\n//obtain Cell as cell...\nif (cell.getCellType() == Cell.CELL_TYPE_FORMULA) {\n     if (cell.getCachedFormulaResultType() == Cell.CELL_TYPE_ERROR) { \n          data[i][j] = \"#VALUE!\"; \n     } \n     else { \n          data[i][j] = formatter.formatCellValue(cell, evaluator); \n     }\n}\nelse {\n     data[i][j] = formatter.formatCellValue(cell);\n}\n\nThis sets data[i][j] to \"12312345123\"\n\nRunning the following on the cell returns:\n\ncell.getCellStyle().getDataFormatString() returns \"000\\-00000\\-000\"\ncell.getCellStyle().getDataFormat() returns 164\n\nThese values are correct and indicate that the format is loaded, but is not applied properly to the \"formatted\" output."}, {"attachment_id": null, "tags": [], "bug_id": 52684, "is_private": false, "count": 1, "id": 188532, "time": "2016-02-17T21:36:27Z", "creator": "dominik.stadler@gmx.at", "creation_time": "2016-02-17T21:36:27Z", "text": "In r1730948 I added a unit test which shows how this can be done with the latest version of POI. So it either got fixed or was not used correctly in this bug report. Please discuss on the mailing list or report new issues for anything that still does not work for you."}]