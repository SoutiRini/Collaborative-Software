[{"count": 0, "tags": [], "creator": "lmpmbernardo@gmail.com", "is_private": false, "text": "The example provided by bug 49516 cannot be run with the current trunk. The console error is this when generating PDF:\n\nSVG graphic could not be built. Reason: org.apache.batik.bridge.BridgeException: Unable to make sense of URL for connection\norg.apache.batik.bridge.BridgeException: Unable to make sense of URL for connection\n\nThe resulting PDF document does not include the SVG. This was not the case in FOP-1.0, where the generated PDF would include the SVG.", "id": 161176, "time": "2012-08-08T23:21:23Z", "bug_id": 53680, "creation_time": "2012-08-08T23:21:23Z", "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 53680, "is_private": false, "count": 1, "id": 162072, "time": "2012-09-11T15:45:02Z", "creator": "rmeyer@hotmail.co.uk", "creation_time": "2012-09-11T15:45:02Z", "text": "I suspect this issue relates to the recent changes made to the URI resolver. After comparing both FOP 1.0 and Trunk I found the main difference stemmed from line found at [trunk]URIResover.getNode:114. It is comparing two ParsedURL's where on trunk they do not match match, however on 1.0 they do which results in a value being returned and different paths being followed. The differences in the ParsedURL's are due to one being passed with just the filename e.g.\n\n(trunk) setpaint.svg\n\nwhereas the other is being passed the full path:\n\n(1.0) file://home/user/temp/setpaint.svg\n\nThis stems from ImageSource.java:123 which accepts the uri. Both make a call to the FOUserAgent.resolveURI() but whereas 1.0 appended the path to the source, the new code does not and simply leaves it as just the name. The reason for the exception is that down the line, due to there being no defined protocol, the ParserURLDefaultProtocolHandler.java:302 then defines the parseURL as a null:setpaint.svg and thus causes a MalformedURLException.\n\nThe next steps would be to investigate why the baseURL() is no longer being appended to the Source object as that seems to possibly be the source of the problem."}, {"count": 2, "tags": [], "bug_id": 53680, "attachment_id": null, "is_private": false, "id": 162073, "time": "2012-09-11T15:57:14Z", "creator": "med1985@gmail.com", "creation_time": "2012-09-11T15:57:14Z", "text": "The recent changes to URI handling don't affect FOP1.1, I could be wrong but they haven't been merged into 1.1rc1... Hubris is a cruel mistress though, hope I don't eat my words ;)(In reply to comment #1)\n\n> I suspect this issue relates to the recent changes made to the URI resolver.\n> After comparing both FOP 1.0 and Trunk I found the main difference stemmed\n> from line found at [trunk]URIResover.getNode:114. It is comparing two\n> ParsedURL's where on trunk they do not match match, however on 1.0 they do\n> which results in a value being returned and different paths being followed.\n> The differences in the ParsedURL's are due to one being passed with just the\n> filename e.g.\n> \n> (trunk) setpaint.svg\n> \n> whereas the other is being passed the full path:\n> \n> (1.0) file://home/user/temp/setpaint.svg\n> \n> This stems from ImageSource.java:123 which accepts the uri. Both make a call\n> to the FOUserAgent.resolveURI() but whereas 1.0 appended the path to the\n> source, the new code does not and simply leaves it as just the name. The\n> reason for the exception is that down the line, due to there being no\n> defined protocol, the ParserURLDefaultProtocolHandler.java:302 then defines\n> the parseURL as a null:setpaint.svg and thus causes a MalformedURLException.\n> \n> The next steps would be to investigate why the baseURL() is no longer being\n> appended to the Source object as that seems to possibly be the source of the\n> problem."}, {"count": 3, "tags": [], "creator": "matthias8283@gmx.at", "is_private": false, "text": "I think I had a similar issue when upgrading my application to fop trunk. Not setting the system id (in FOUserAgent.resolveURI) for the \"data\" scheme worked around the issue. I was under the impression that the source of the problem was batik and the recent changes in fop just uncovered that, but that might be different in this case. If anyone wants to take a closer look, I can try to provide an additional test cases.", "id": 162307, "time": "2012-09-20T18:53:36Z", "bug_id": 53680, "creation_time": "2012-09-20T18:53:36Z", "attachment_id": null}]