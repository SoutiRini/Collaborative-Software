[{"count": 0, "tags": [], "creator": "hauser@acm.org", "attachment_id": null, "text": "When developing our tomcat applications with eclipse, doing out-rebuild/sysdeo plugin and have the class files written into TOMCAT_HOME/common/classes is an effective approach.\n\nFor manageability reasons, we need to split our code among several eclipse projects. The problem is if both are configured to place their .class files in TOMCAT_HOME/common/classes that when one project rebuilds, it will wipe the class files of the other one.\n\nA great efficiency gain for the development of multiple projects therefore would be to be able to specify additional classes folders in server.xml to be added to the corresponding class-loader", "id": 135073, "time": "2010-03-05T09:04:04Z", "bug_id": 48863, "creation_time": "2010-03-05T09:04:04Z", "is_private": false}, {"count": 1, "tags": [], "creator": "rainer.jung@kippdata.de", "attachment_id": null, "id": 135074, "time": "2010-03-05T09:12:46Z", "bug_id": 48863, "creation_time": "2010-03-05T09:12:46Z", "is_private": false, "text": "Isn't that what you can already do using the loader entries in conf/catalina.properties?"}, {"count": 2, "tags": [], "text": "This is already supported. See the catalina.properties file.", "attachment_id": null, "id": 135075, "creation_time": "2010-03-05T09:13:29Z", "time": "2010-03-05T09:13:29Z", "creator": "markt@apache.org", "bug_id": 48863, "is_private": false}, {"count": 3, "attachment_id": null, "bug_id": 48863, "text": "unfortunately, the com.sysdeo.eclipse.tomcat_3.2.1 ignores this \"common.loader\" attribute of catalina.properties at least with tomcat 5.5", "id": 135082, "time": "2010-03-05T14:13:11Z", "creator": "hauser@acm.org", "creation_time": "2010-03-05T14:13:11Z", "tags": [], "is_private": false}, {"count": 4, "attachment_id": 25088, "bug_id": 48863, "text": "Created attachment 25088\npatchApacheTomcat48863.txt\n\noops, sysdeo works ;)\n\nbut a typo is not seen whatsoever\n\nThe attached patch helps users find such a configuration error.\n\nPls \n1) re-open this bug\n2) re-apply\n3) consider even using std-out for this error", "id": 135088, "time": "2010-03-05T15:37:59Z", "creator": "hauser@acm.org", "creation_time": "2010-03-05T15:37:59Z", "tags": [], "is_private": false}, {"count": 5, "tags": [], "creator": "hauser@acm.org", "attachment_id": null, "text": "see also Bug 48870", "id": 135158, "time": "2010-03-08T06:58:13Z", "bug_id": 48863, "creation_time": "2010-03-08T06:58:13Z", "is_private": false}, {"count": 6, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "text": "Thanks for the patch. I applied a variation to 7.0.x (will be in 7.0.9 onwards) and proposed it for 6.0.x", "id": 144423, "time": "2011-02-18T16:00:30Z", "bug_id": 48863, "creation_time": "2011-02-18T16:00:30Z", "is_private": false}, {"count": 7, "tags": [], "bug_id": 48863, "text": "Regarding the patch that is applied to tc7 at r1073047 and is currently proposed for 6.0.x:\n\n1) The calls to ClassLoaderFactory#validateFile(file, type) pass canonical path for DIR and JAR, but not for GLOB.  I mean, the following change to be done, for consistency: (in trunk)\n\nIndex: java/org/apache/catalina/startup/ClassLoaderFactory.java\n===================================================================\n--- java/org/apache/catalina/startup/ClassLoaderFactory.java\t(revision 1075098)\n+++ java/org/apache/catalina/startup/ClassLoaderFactory.java\t(working copy)\n@@ -187,6 +187,7 @@\n                     set.add(url);\n                 } else if (repository.getType() == RepositoryType.GLOB) {\n                     File directory=new File(repository.getLocation());\n+                    directory = new File(directory.getCanonicalPath());\n                     if (!validateFile(directory, RepositoryType.GLOB)) {\n                         continue;\n                     }\n\nBTW, with the above change the calls to file.getAbsolutePath() inside of #validateFile() become unnecessary.\n\n2) The following check in ClassLoaderFactory#validateFile(file, type) assumes that Bootstrap.getCatalinaBase() is an absolute (and canonical, because file is canonical) path. But that is not guaranteed to be so:\n\nif (!Bootstrap.getCatalinaHome().equals(       \n                Bootstrap.getCatalinaBase()) &&\n        file.getAbsolutePath().startsWith(     \n                Bootstrap.getCatalinaBase())) {", "id": 144602, "time": "2011-02-27T13:46:41Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2011-02-27T13:46:41Z", "is_private": false, "attachment_id": null}, {"count": 8, "tags": [], "text": "Thanks for the review. Patch updated in 7.0.x for 7.0.9 and proposal for 6.0.x also updated.", "attachment_id": null, "id": 144609, "creator": "markt@apache.org", "time": "2011-02-28T08:51:34Z", "bug_id": 48863, "creation_time": "2011-02-28T08:51:34Z", "is_private": false}, {"count": 9, "tags": [], "bug_id": 48863, "attachment_id": null, "text": "Fixed in 6.0.x and will be in 6.0.33 onwards.", "id": 146830, "time": "2011-06-03T08:02:05Z", "creator": "markt@apache.org", "creation_time": "2011-06-03T08:02:05Z", "is_private": false}]