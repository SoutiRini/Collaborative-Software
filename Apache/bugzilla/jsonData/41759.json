[{"count": 0, "tags": [], "creator": "egiraudy@gmail.com", "attachment_id": null, "text": "I'm facing a small issue when migrating a production server from 5.5.20 to \n6.0.10 (see the exception below).\nOne of the web app running on that server includes xercesImpl.jar and use it \nthrough modifying the system property javax.xml.parsers.SAXParserFactory.\n\nThis was not a problem in 5.5.x, but with 6.0.10, it seems that tomcat loads \nits instance of the parser after web initializations. It is then affected by \nthe web app that modified the system property. \nI've been able to 'fix' that by copying the xercesImpl.jar into tomcat lib \ndirectory.\n\nShall this be considered as a regression as in that case tomcat configuration \nis somehow altered by a web app? \n\n\nGRAVE: Erreur lors du d\u00e9ploiement du r\u00e9pertoire portal de l'application web\njavax.xml.parsers.FactoryConfigurationError: Provider \norg.apache.xerces.jaxp.SAXParserFactoryImpl not found\nat javax.xml.parsers.SAXParserFactory.newInstance(SAXParserFactory.java:134)\nat org.apache.tomcat.util.digester.Digester.getFactory(Digester.java:487)\nat org.apache.tomcat.util.digester.Digester.getParser (Digester.java:692)\nat org.apache.tomcat.util.digester.Digester.getXMLReader(Digester.java:900)\nat org.apache.tomcat.util.digester.Digester.parse(Digester.java:1581) \nat \norg.apache.tomcat.util.modeler.modules.MbeansDescriptorsDigesterSource.execute \n(MbeansDescriptorsDigesterSource.java:227)\nat \norg.apache.tomcat.util.modeler.modules.MbeansDescriptorsDigesterSource.loadDescriptors\n (MbeansDescriptorsDigesterSource.java:210)\nat org.apache.tomcat.util.modeler.Registry.load (Registry.java:753)\nat org.apache.tomcat.util.modeler.Registry.loadDescriptors(Registry.java:865)\nat org.apache.tomcat.util.modeler .Registry.loadDescriptors(Registry.java:843)\nat org.apache.tomcat.util.modeler.Registry.findDescriptor (Registry.java:907)\nat org.apache.tomcat.util.modeler.Registry.findManagedBean(Registry.java:627)\nat org.apache.tomcat.util.modeler .Registry.findManagedBean(Registry.java:962)\nat org.apache.tomcat.util.modeler.Registry.registerComponent (Registry.java:793)\nat \norg.apache.catalina.core.StandardWrapper.registerJMX(StandardWrapper.java:1801)\nat \norg.apache.catalina.core.StandardContext.registerJMX(StandardContext.java:5200)\nat org.apache.catalina.core.StandardContext.start (StandardContext.java:4374)\nat org.apache.catalina.core.ContainerBase.addChildInternal( \nContainerBase.java:761)\nat org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:741)\nat org.apache.catalina.core.StandardHost.addChild (StandardHost.java:525)\nat org.apache.catalina.startup.HostConfig.deployDirectory( HostConfig.java:920)\nat org.apache.catalina.startup.HostConfig.deployDirectories(HostConfig.java:883)\nat org.apache.catalina.startup.HostConfig.deployApps (HostConfig.java:492)\nat org.apache.catalina.startup.HostConfig.start( HostConfig.java:1138)\nat org.apache.catalina.startup.HostConfig.lifecycleEvent(HostConfig.java:311)\nat org.apache.catalina.util.LifecycleSupport.fireLifecycleEvent \n(LifecycleSupport.java:120)\nat org.apache.catalina.core .ContainerBase.start(ContainerBase.java:1023)\nat org.apache.catalina.core.StandardHost.start(StandardHost.java:719)\nat org.apache.catalina.core.ContainerBase.start (ContainerBase.java:1015)\nat org.apache.catalina.core .StandardEngine.start(StandardEngine.java:443)\nat org.apache.catalina.core.StandardService.start(StandardService.java:448)\nat org.apache.catalina.core.StandardServer.start (StandardServer.java:710)\nat org.apache.catalina.startup .Catalina.start(Catalina.java:552)\nat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java\n :39)\nat sun.reflect.DelegatingMethodAcc \nessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\nat java.lang.reflect.Method.invoke(Method.java:597)\nat org.apache.catalina.startup.Bootstrap.start(Bootstrap.java:288) \nat org.apache.catalina.startup.Bootstrap.main( Bootstrap.java:413)", "id": 100015, "time": "2007-03-04T08:50:25Z", "bug_id": 41759, "creation_time": "2007-03-04T08:50:25Z", "is_private": false}, {"count": 1, "attachment_id": 19661, "bug_id": 41759, "is_private": false, "id": 100016, "time": "2007-03-04T08:52:36Z", "creator": "egiraudy@gmail.com", "creation_time": "2007-03-04T08:52:36Z", "tags": [], "text": "Created attachment 19661\nWeb app war fiel\n\nwar file to deploy as a test case.\non tomcat startup, it causes the javax.xml.parsers.FactoryConfigurationError"}, {"count": 2, "tags": [], "text": "Obviously invalid, but will look at it to see why it does it.", "attachment_id": null, "bug_id": 41759, "id": 100017, "time": "2007-03-04T09:10:49Z", "creator": "remm@apache.org", "creation_time": "2007-03-04T09:10:49Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 41759, "attachment_id": null, "id": 100019, "time": "2007-03-04T11:14:17Z", "creator": "william.barker@wilshire.com", "creation_time": "2007-03-04T11:14:17Z", "is_private": false, "text": "(In reply to comment #2)\n> Obviously invalid, but will look at it to see why it does it.\n\nIt is because Modeler in 5.5 uses DOM, and in 6.0 it uses SAX.\n\nI agree that it is invalid, since a webapp shouldn't expect to be able to \nchange system properties."}, {"count": 4, "tags": [], "creator": "remm@apache.org", "attachment_id": null, "text": "I did look at it, and it does not work much better in 5.5. Random webapps will\nfail (they will no longer be able to use the system XML parser), and some\ncomponents fail.\n\nI found that the digester used by the registry was not reused (which causes the\nJAXP call which fails). This is a minor optimization which I am going to commit.", "id": 100021, "time": "2007-03-04T12:38:35Z", "bug_id": 41759, "creation_time": "2007-03-04T12:38:35Z", "is_private": false}]