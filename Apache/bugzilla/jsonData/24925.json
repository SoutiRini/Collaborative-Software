[{"count": 0, "tags": [], "creator": "avisar@hotmail.com", "attachment_id": null, "id": 47945, "creation_time": "2003-11-23T08:03:49Z", "time": "2003-11-23T08:03:49Z", "bug_id": 24925, "text": "Hi,\n\nI'm using POI HSSF version poi-bin-2.0-RC1-20031102, excel 97/XP\n\nI'm trying to use a nested if formula in excel which is used for writing a \nstring based on a cell value. this cell value is also a formula of devision \n(\"A2/A3\"). When I'm using simple IF it works but when I use a nested IF then a \n#VALUE! comes up. When I enter the sheet using excel, go to the cell and just \npress enter on the formula line then I get the proper value. \nWhat am I doing wrong ?\nI have seen that sometimes it does not necessary connected to the fact that the \ndevision cell is also a formula but to the fact that the cell is a float and \nnot integer and sometimes when I use integer in the IF formula then it works.\nMoreover when using % in a formula parser fails.\n\nSource Code is:\n\n\nimport org.apache.poi.hssf.usermodel.HSSFCell;\nimport org.apache.poi.hssf.usermodel.HSSFCellStyle;\nimport org.apache.poi.hssf.usermodel.HSSFDataFormat;\nimport org.apache.poi.hssf.usermodel.HSSFRow;\nimport org.apache.poi.hssf.usermodel.HSSFSheet;\nimport org.apache.poi.hssf.usermodel.HSSFWorkbook;\n\nimport java.io.FileOutputStream;\n\n\n/**\n * A Writer which writes to XLS file wit the #VALUE! problem\n * \n */\npublic class TestXLSWriter {\n\n    public static final int COLUMN_A    = 0;\n    public static final int COLUMN_B    = 1;\n    public static final int COLUMN_C    = 2;\n    public static final int COLUMN_D    = 3;\n\n    /**\n     * Creates a new demo.\n     */\n    public TestXLSWriter() {\n    }\n\n    public void write() \n    throws Exception {\n        HSSFWorkbook wb = createTestWorkbook();\n        FileOutputStream out = new FileOutputStream(\"test.xls\");\n        wb.write(out);\n        out.close();\n    }\n\n    private HSSFWorkbook createTestWorkbook()\n    throws Exception {\n\n        HSSFWorkbook wb = new HSSFWorkbook();\n        HSSFSheet sheet = wb.createSheet(\"Test Sheet\");\n\n        HSSFRow row;\n        HSSFCell cell;\n\n        // Create a row and put some cells in it. Rows are 0 based.\n        row = sheet.createRow((short)0);\n\n        // Create a cell\n        cell = row.createCell((short)COLUMN_A);\n        cell.setCellValue(50);\n\n        cell = row.createCell((short)COLUMN_B);\n        cell.setCellValue(100);\n        \n        cell = row.createCell((short)COLUMN_C);\n        cell.setCellFormula(\"A1/B1\");\n        // Although problem occurs with or without representing\n        // fraction using precent style I use it in my \n        // program and that's why I put it in the test.\n        HSSFCellStyle style = wb.createCellStyle();\n        style.setDataFormat(HSSFDataFormat.getBuiltinFormat(\"0%\"));\n        cell.setCellStyle(style);\n        \n        cell = row.createCell((short)COLUMN_D);\n        // Here is the problem :\n        // basically I want 0 if C1 < 0.3, 2 if C1 > 0.8 and 1 if in between.\n        // In real life I will turn 0,1,2 to \"Failed\", \"OK\", \"GOOD\"\n        // why does this line produce #VALUE! ???\n        // However when I enter excel 97/XP and click inside this value\n        // it works.\n        // Moreover, I know that for sure the nested IF is the problem.\n        cell.setCellFormula(\"IF(C1<0.3, 0, IF(C1>0.8, 2, 1))\");\n\n        // Other setCellFormulas that work are :\n        // without nested IF it works\n        //cell.setCellFormula(\"IF(C1<0.3, 0, 1)\");\n\n        // if I try with 30% the parser fails.\n        // cell.setCellFormula(\"IF(C1<30%, 0, IF(C1>80%, 2, 1))\");\n\n        return wb;\n    }\n\n    public static void main (String[] args) throws Exception {\n        System.out.println(\"DEBUG: hello\");\n        TestXLSWriter w = new TestXLSWriter();\n        w.write();\n    }\n}\n\nThanks.", "is_private": false}, {"count": 1, "tags": [], "bug_id": 24925, "attachment_id": 9248, "id": 47946, "time": "2003-11-23T08:04:47Z", "creator": "avisar@hotmail.com", "creation_time": "2003-11-23T08:04:47Z", "is_private": false, "text": "Created attachment 9248\nthe test file in java"}, {"count": 2, "tags": [], "creator": "avisar@hotmail.com", "is_private": false, "id": 47947, "creation_time": "2003-11-23T08:05:58Z", "time": "2003-11-23T08:05:58Z", "bug_id": 24925, "text": "Created attachment 9249\nResulted Excel File (Using Excel 97) the result xls with #VALUE!", "attachment_id": 9249}, {"count": 3, "text": "Created attachment 10961\nProposed fix for nested if statements #VALUE", "creator": "pete@quantrix.com", "is_private": false, "id": 54593, "time": "2004-03-24T20:40:44Z", "bug_id": 24925, "creation_time": "2004-03-24T20:40:44Z", "tags": [], "attachment_id": 10961}, {"count": 4, "tags": [], "text": "Created attachment 10962\nThe REAL proposed fix for nested if #VALUE problem", "is_private": false, "id": 54594, "creator": "pete@quantrix.com", "time": "2004-03-24T20:41:56Z", "bug_id": 24925, "creation_time": "2004-03-24T20:41:56Z", "attachment_id": 10962}, {"count": 5, "tags": [], "text": "The problem is that cell references in the nested ifs were not getting their \nToken classes set properly because the recursion would bail out early when it \nreached nodes that were not AbstractFunctionPtgs.  In fact, we want to recurse \ninto the entire tree to push out this token munging stuff.  NOTE: The second \npatch file i submitted is the one i am proposing.  The other one is just \ncruft.  Sorry.", "is_private": false, "id": 54595, "creator": "pete@quantrix.com", "time": "2004-03-24T20:44:42Z", "bug_id": 24925, "creation_time": "2004-03-24T20:44:42Z", "attachment_id": null}, {"count": 6, "tags": [], "bug_id": 24925, "attachment_id": null, "id": 54598, "time": "2004-03-24T20:51:53Z", "creator": "dmui@apache.org", "creation_time": "2004-03-24T20:51:53Z", "is_private": false, "text": "hmm sounds and looks good enough :).  gonna apply and check out unit tests."}, {"count": 7, "tags": [], "bug_id": 24925, "attachment_id": null, "is_private": false, "id": 56607, "time": "2004-04-29T07:05:33Z", "creator": "glens@apache.org", "creation_time": "2004-04-29T07:05:33Z", "text": "Patch applied"}]