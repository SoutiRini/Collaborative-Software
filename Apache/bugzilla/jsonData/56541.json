[{"count": 0, "tags": [], "bug_id": 56541, "text": "I'm sending post requests via the Python requests library with file attachments to our server which is using Apache mod_proxy. Originally, all posts with files over maybe 300-400kb would return a 502. I found this post: http://stackoverflow.com/questions/18854041/proxy-error-502-when-uploading-larger-files-with-ie8 and commenting out the suggested line helped, but only by seeming to raise the file size that makes it through, as now I'm seeing this with 5mb files as well. I'm making these requests from fairly slow internet (in Zambia), so I wonder if that is contributing to the timeout?\n\nApache config at this point:\n\n    SSLEngine On\n    SSLCertificateFile /etc/pki/tls/certs/commcarehq.org.crt\n    SSLCertificateKeyFile /etc/pki/tls/private/commcarehq.org.key\n    SSLCACertificateFile /etc/pki/tls/certs/hq_thawtecabundle.crt\n    SSLProxyEngine On\n    SetEnv proxy-sendcl 1\n    RequestHeader set X-FORWARDED-PROTOCOL ssl\n    RequestHeader set X-FORWARDED-SSL on\n    RequestHeader set X-FORWADED-PROTO https\n\nThe post request is pretty straightforward, in case there is any potential concern from that side https://gist.github.com/twymer/69959c468f091a5471b9", "id": 175302, "time": "2014-05-18T16:25:30Z", "creator": "twymer@gmail.com", "creation_time": "2014-05-18T16:25:30Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "creator": "twymer@gmail.com", "attachment_id": null, "id": 175319, "time": "2014-05-19T13:58:49Z", "bug_id": 56541, "creation_time": "2014-05-19T13:58:49Z", "is_private": false, "text": "Data from the logs:\n\n[Mon May 19 13:54:19 2014] [debug] mod_proxy_balancer.c(46): proxy: BALANCER: canonicalising URL //stagingcluster/a/uth-rhd/vscan_upload\n[Mon May 19 13:54:19 2014] [debug] mod_proxy_balancer.c(1014): proxy: Entering byrequests for BALANCER (balancer://stagingcluster)\n[Mon May 19 13:54:19 2014] [debug] mod_proxy_balancer.c(1057): proxy: byrequests selected worker \"http://10.177.30.190:9010\" : busy 0 : lbstatus 0\n[Mon May 19 13:54:19 2014] [debug] mod_proxy_balancer.c(581): proxy: BALANCER (balancer://stagingcluster) worker (http://10.177.30.190:9010) rewritten to http://10.177.30.190:9010/a/uth-rhd/vscan_upload\n[Mon May 19 13:54:19 2014] [debug] mod_proxy.c(1020): Running scheme balancer handler (attempt 0)\n[Mon May 19 13:54:19 2014] [debug] mod_proxy_http.c(1973): proxy: HTTP: serving URL http://10.177.30.190:9010/a/uth-rhd/vscan_upload\n[Mon May 19 13:54:19 2014] [debug] proxy_util.c(2011): proxy: HTTP: has acquired connection for (10.177.30.190)\n[Mon May 19 13:54:19 2014] [debug] proxy_util.c(2067): proxy: connecting http://10.177.30.190:9010/a/uth-rhd/vscan_upload to 10.177.30.190:9010\n[Mon May 19 13:54:19 2014] [debug] proxy_util.c(2193): proxy: connected /a/uth-rhd/vscan_upload to 10.177.30.190:9010\n[Mon May 19 13:54:19 2014] [debug] proxy_util.c(2444): proxy: HTTP: fam 2 socket created to connect to 10.177.30.190\n[Mon May 19 13:54:19 2014] [debug] proxy_util.c(2576): proxy: HTTP: connection complete to 10.177.30.190:9010 (10.177.30.190)\n[Mon May 19 13:55:20 2014] [info] [client 10.177.30.190] (32)Broken pipe: core_output_filter: writing data to the network\n[Mon May 19 13:55:20 2014] [error] (103)Software caused connection abort: proxy: pass request body failed to 10.177.30.190:9010 (10.177.30.190)\n[Mon May 19 13:55:20 2014] [error] proxy: pass request body failed to 10.177.30.190:9010 (10.177.30.190) from 41.223.119.17 ()\n[Mon May 19 13:55:20 2014] [debug] proxy_util.c(2029): proxy: HTTP: has released connection for (10.177.30.190)\n[Mon May 19 13:55:20 2014] [debug] mod_proxy_balancer.c(622): proxy_balancer_post_request for (balancer://stagingcluster)"}, {"attachment_id": 31646, "tags": [], "bug_id": 56541, "is_private": false, "count": 2, "id": 175389, "time": "2014-05-22T13:42:18Z", "creator": "ylavic.dev@gmail.com", "creation_time": "2014-05-22T13:42:18Z", "text": "Created attachment 31646\nPrefetch request body before the backend connection is established/reused (trunk)\n\n(In reply to Tyler Wymer from comment #1)\n> [Mon May 19 13:54:19 2014] [debug] proxy_util.c(2576): proxy: HTTP:\n> connection complete to 10.177.30.190:9010 (10.177.30.190)\n> [Mon May 19 13:55:20 2014] [info] [client 10.177.30.190] (32)Broken pipe:\n> core_output_filter: writing data to the network\n\nIt seems that your environment triggers a connection abort (by the backend) in the meantime between the connection is created/reused (by mod_proxy) and the request data are effectively sent (and flushed) on that connection.\n\nDuring that meantime, mod_proxy prefetches up to 16Kbytes of the body but won't forward anything (including the request line/headers already available) until this is complete.\n\nIf that operation takes long time and/or the forwarded data are bufferized in httpd's output queue until some size, the backend may timeout the connection and close it.\n\nCould you try the attached patch which moves the prefetch before the backend connection is established/reused (so to minimize the race condition between establishing/reusing a connection and sending data on it), and allows to SetEnv proxy-flushall to tell mod_proxy not to flush everything forwarded?"}, {"count": 3, "tags": [], "text": "Created attachment 31647\nPrefetch request body before the backend connection is established/reused (2.4.x)\n\nSame patch for 2.4.x.", "is_private": false, "bug_id": 56541, "id": 175390, "time": "2014-05-22T13:44:57Z", "creator": "ylavic.dev@gmail.com", "creation_time": "2014-05-22T13:44:57Z", "attachment_id": 31647}, {"count": 4, "tags": [], "creator": "ylavic.dev@gmail.com", "attachment_id": null, "id": 175391, "time": "2014-05-22T14:09:03Z", "bug_id": 56541, "creation_time": "2014-05-22T14:09:03Z", "is_private": false, "text": "Please note that for this patch to work, the request should not be spooled on the disk before being forwarded.\n\nThat may arise if you use \"SetEnv proxy-sendcl\" and the request is \"Transfer-Encoding: chunked\" for example, or if the length can't be determined when mod_proxy has to forward the HTTP header (INFLATE filter in the chain, ...).\n\nWhy do you use proxy-sendcl first?"}, {"count": 5, "tags": [], "creator": "ylavic.dev@gmail.com", "attachment_id": 31648, "text": "Created attachment 31648\nPrefetch request body before the backend connection is established/reused (trunk)\n\nFinally this new patch takes also care of the spooled requests, by spooling them (completely) during prefetch (before the connect/reuse-then-forward window).\nHence SetEnv proxy-sendcl shouldn't matter.", "id": 175393, "time": "2014-05-22T15:32:42Z", "bug_id": 56541, "creation_time": "2014-05-22T15:32:42Z", "is_private": false}, {"count": 6, "tags": [], "creator": "ylavic.dev@gmail.com", "attachment_id": 31649, "text": "Created attachment 31649\nPrefetch request body before the backend connection is established/reused (2.4.x)\n\nSame for 2.4.x.", "id": 175394, "time": "2014-05-22T15:39:40Z", "bug_id": 56541, "creation_time": "2014-05-22T15:39:40Z", "is_private": false}, {"count": 7, "text": "Created attachment 31654\nPrefetch request body before the backend connection is established/reused (trunk)\n\nThis version fixes input brigades lifetime issues.", "creator": "ylavic.dev@gmail.com", "attachment_id": 31654, "id": 175421, "time": "2014-05-23T14:52:14Z", "bug_id": 56541, "creation_time": "2014-05-23T14:52:14Z", "tags": [], "is_private": false}, {"count": 8, "tags": [], "creator": "ylavic.dev@gmail.com", "attachment_id": 31655, "id": 175422, "time": "2014-05-23T14:53:14Z", "bug_id": 56541, "creation_time": "2014-05-23T14:53:14Z", "is_private": false, "text": "Created attachment 31655\nPrefetch request body before the backend connection is established/reused (2.4.x)\n\nSame for 2.4.x."}, {"count": 9, "tags": [], "creator": "twymer@gmail.com", "attachment_id": null, "text": "Yann,\n\nThanks for the response. We are actually running Apache 2.2.22 (I neglected to specify that on the bug but updated it now). Is it possible to get a version of this patch that would work for 2.2.x?", "id": 175546, "time": "2014-05-29T16:12:24Z", "bug_id": 56541, "creation_time": "2014-05-29T16:12:24Z", "is_private": false}, {"count": 10, "tags": [], "creator": "ylavic.dev@gmail.com", "attachment_id": 31684, "id": 175600, "time": "2014-06-02T17:37:55Z", "bug_id": 56541, "creation_time": "2014-06-02T17:37:55Z", "is_private": false, "text": "Created attachment 31684\nForward (and flush) request data as soon as available (2.2.x)\n\nThe corresponding (complete) patch against 2.2.x would probably not be accepted because of the changes on mod_proxy_http which may affect existing configurations (although it should not, so much configurations work without it until now).\n\nHence, a lightweight version of the patch is attached for 2.2.x, which will simply disable any buffering of the request before it is forwarded to the backend (so that there is a minimal delay between the backend connection is established/reused and the request is sent on it).\n\nThis should prevent the backend from closing the connection because of a timeout (the time taken by mod_proxy to pre-fetch the request).\nYou will have to \"SetEnv proxy-flushall\" to enable it.\n\nPlease note that it won't work if you SetInputFilter something, since in this case the Content-Length might change and mod_proxy won't forward it as is (the request will be spooled on disk).\n\nThe same applies regarding \"SetEnv proxy-sendcl\", it is usually needed because one wants \"Transfer-Encoding: chunked\" from the client to be turned into Content-Length (eg. the backend does not support chunked requests), but in this case the request will also be spooled, and the patch is useless too.\nSo either you can #comment it, or you need the full patch (2.4.x).\n\nFinally, there is still race condition where the backend may close a reused connection at the same time when mod_proxy checks/thinks it is still alive.\nTo avoid that, you have to configure the worker's TTL (ProxyPass ... ttl=<seconds>) with a lower value than the KeepAliveTimeout used by the backend, so that no connection is reused if it is idle for more than TTL seconds."}, {"count": 11, "tags": [], "text": "(In reply to Yann Ylavic from comment #10)\n> To avoid that, you have to configure the worker's TTL (ProxyPass ...\n> ttl=<seconds>) with a lower value than the KeepAliveTimeout used by the\n> backend, so that no connection is reused if it is idle for more than TTL\n> seconds.\n\nMore precisely, the ProxyPass should be :\n   ProxyPass ... ttl=<seconds> smax=0", "is_private": false, "bug_id": 56541, "id": 175601, "time": "2014-06-02T17:56:58Z", "creator": "ylavic.dev@gmail.com", "creation_time": "2014-06-02T17:56:58Z", "attachment_id": null}, {"count": 12, "tags": [], "text": "(In reply to Yann Ylavic from comment #11)\n\n> More precisely, the ProxyPass should be :\n>    ProxyPass ... ttl=<seconds> smax=0\n\nWhy smax=0?", "attachment_id": null, "bug_id": 56541, "id": 175604, "time": "2014-06-02T18:55:06Z", "creator": "rpluem@apache.org", "creation_time": "2014-06-02T18:55:06Z", "is_private": false}, {"count": 13, "tags": [], "creator": "ylavic.dev@gmail.com", "attachment_id": null, "id": 175606, "time": "2014-06-02T20:17:07Z", "bug_id": 56541, "creation_time": "2014-06-02T20:17:07Z", "is_private": false, "text": "(In reply to Ruediger Pluem from comment #12)\n> (In reply to Yann Ylavic from comment #11)\n> \n> > More precisely, the ProxyPass should be :\n> >    ProxyPass ... ttl=<seconds> smax=0\n> \n> Why smax=0?\n\nWell, it seems to me that apr_reslist won't apply ttl unless nidle > smax, but mod_proxy sets undefined smax to hmax, hence hmax > nidle is always false (and ttl is never applied by default). With smax=0, all idle connections are considered."}, {"attachment_id": null, "tags": [], "bug_id": 56541, "text": "(In reply to Yann Ylavic from comment #13)\n> hence hmax > nidle is always false\nI meant nidle > hmax here.", "count": 14, "id": 175607, "time": "2014-06-02T20:20:52Z", "creator": "ylavic.dev@gmail.com", "creation_time": "2014-06-02T20:20:52Z", "is_private": false}, {"count": 15, "tags": [], "bug_id": 56541, "text": "(In reply to Yann Ylavic from comment #13)\n> > Why smax=0?\n> \n> Well, it seems to me that apr_reslist won't apply ttl unless nidle > smax,\n> but mod_proxy sets undefined smax to hmax, hence hmax > nidle is always\n> false (and ttl is never applied by default). With smax=0, all idle\n> connections are considered.\n\nHm, after verification (should have done that before posting), this is true for apr_reslist_release (in fact apr_reslist_maintain), but not for apr_reslist_acquire. So it works without smax=0 too...", "id": 175610, "time": "2014-06-02T20:39:52Z", "creator": "ylavic.dev@gmail.com", "creation_time": "2014-06-02T20:39:52Z", "is_private": false, "attachment_id": null}, {"count": 16, "tags": [], "creator": "ylavic.dev@gmail.com", "attachment_id": 31686, "id": 175618, "time": "2014-06-03T15:48:43Z", "bug_id": 56541, "creation_time": "2014-06-03T15:48:43Z", "is_private": false, "text": "Created attachment 31686\nPrefetch request body before the backend connection is established/reused (trunk)\n\nFixes the chunk_hdr (transient) scope in stream_reqbody_chunked() and don't let proxy-flushall interfere with spooled-CL vs forwarded-CL/TE decision."}, {"count": 17, "tags": [], "creator": "ylavic.dev@gmail.com", "attachment_id": 31687, "text": "Created attachment 31687\nPrefetch request body before the backend connection is established/reused (2.4.x)\n\nLikewise (2.4.x).", "id": 175619, "time": "2014-06-03T15:59:33Z", "bug_id": 56541, "creation_time": "2014-06-03T15:59:33Z", "is_private": false}, {"count": 18, "tags": [], "creator": "andre.wendel@bmw.de", "attachment_id": null, "id": 180627, "time": "2015-01-28T15:23:12Z", "bug_id": 56541, "creation_time": "2015-01-28T15:23:12Z", "is_private": false, "text": "Is there a possibility, that this functinallity will be part of one of the next Apache 2.4.x releases? Because of \"mod_proxy does not flush data on POST requests from client\" (https://issues.apache.org/bugzilla/show_bug.cgi?id=37920)\n\nCheers,\nAndr\u00e9"}, {"attachment_id": null, "tags": [], "bug_id": 56541, "is_private": false, "count": 19, "id": 180679, "time": "2015-02-01T00:50:04Z", "creator": "ylavic.dev@gmail.com", "creation_time": "2015-02-01T00:50:04Z", "text": "Committed in r1656259 (trunk)."}, {"count": 20, "tags": [], "creator": "paul.nyheim@gmail.com", "text": "I tried the 2.4.x patch, but it does not apply cleanly against 2.4.25 which we are running on.\n\n1. Is it possible to get a patch that applies to 2.4.25?\n2. Is this issue considered for an upcoming 2.4.x release?\n\nRegards,\nPaul Nyheim", "id": 197386, "time": "2017-03-02T12:24:11Z", "bug_id": 56541, "creation_time": "2017-03-02T12:24:11Z", "is_private": false, "attachment_id": null}]