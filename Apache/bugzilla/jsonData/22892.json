[{"count": 0, "tags": [], "text": "This error actually happens in 1.0.3\n\nOn any page that produces more data than the current JSP buffer size and \nincludes the formatDate tag the following error is produced (running under \nOC4J):\n\njava.lang.IllegalStateException: Response is already committed!\n\tat com.evermind[Oracle9iAS (9.0.3.0.0) Containers for \nJ2EE].server.http.EvermindHttpServletResponse.setLocale\n(EvermindHttpServletResponse.java:1754)\n\tat \norg.apache.taglibs.standard.tag.common.fmt.SetLocaleSupport.setResponseLocale\n(SetLocaleSupport.java:234)\n\tat \norg.apache.taglibs.standard.tag.common.fmt.SetLocaleSupport.getFormattingLocale\n(SetLocaleSupport.java:320)\n\tat org.apache.taglibs.standard.tag.common.fmt.FormatDateSupport.doEndTag\n(FormatDateSupport.java:148)\n\tat _csrrefactored._editApprover._jspService(_editApprover.java:1281)\n\t[SRC:/csrRefactored/editApprover.jsp:280]\n\nThis problem can be removed by setting the page buffer higher (above the size \nof the page) like\n\n<%@ page buffer=\"512k\"  %>\n\nLooking at the source code where the exception occurs the following method is \ncalled (in org.apache.taglibs.standard.tag.common.fmt.SetLocaleSupport.java)\n\nstatic void setResponseLocale(PageContext pc, Locale locale) {\n\t// set response locale\n\tServletResponse response = pc.getResponse();\n\tresponse.setLocale(locale);\n\t\n\t// get response character encoding and store it in session attribute\n\tif (pc.getSession() != null) {\n\t    pc.setAttribute(RequestEncodingSupport.REQUEST_CHAR_SET,\n\t\t\t    response.getCharacterEncoding(),\n\t\t\t    PageContext.SESSION_SCOPE);\n\t}\n    }\n\nAfter reading the Servlet specification and documentation (and in particular \nthe Javadoc for ServletResponse.setLocale()) it appears that the setLocale \nmethod should be called before a call to getWriter().\n\nIt appears that the way this tag is written there is no way to ensure that this \nwill occur. Also the setLocale call can be made many times on the page (once \nfor each formatDate tag). Should this info be set into the response at all?\n\nNote that this error cannot be reproduced on Jetty or Tomcat (I assume as they \nare more relaxed about the spec in this instance). In any case though we are \nnot sure the setLocale call should be made at all.\n\nAny feedback about this issue will be great.", "is_private": false, "id": 43621, "creator": "Christopher.MEIN@rbos.com", "time": "2003-09-02T17:18:05Z", "bug_id": 22892, "creation_time": "2003-09-02T17:18:05Z", "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 22892, "attachment_id": null, "id": 43960, "time": "2003-09-10T17:50:20Z", "creator": "pierre.delisle@sun.com", "creation_time": "2003-09-10T17:50:20Z", "is_private": false, "text": "The behavior of the formatting tags is in accordance with the\nJSTL spec. \n\nWith respect to the following exception:\n\"java.lang.IllegalStateException: Response is already committed!\"\n\nthe spec clearly states in section 8.4 that:\n\n\"This assumes that the response is buffered with a big enough buffer size, since\nServletResponse.setLocale() and ServletResponse.setContentType()\nmust be called before ServletResponse.getWriter() in order for the specified\nlocale or charset to affect the construction of the writer.(1)\n(1). It also assumes that the JSP container doesn't call getWriter() until it's \nabout to flush the buffer. An errata has been published for the JSP 1.2\nspecification \nto clarify this.\"\n\nAs you mentioned, you have to make sure that you have a big enough\nbuffer, as well as verify that your container vendor complies with \nthis errata of the JSP spec.\n\nFinally, the language regarding this whole issue as been clarified \nin JSTL 1.1 as follows:\n\nSummary:\nResponse Encoding\nThe way formatting actions influence the encoding of the response has been\nclarified in sections 8.4 and 8.10. Repeated calls to\nServletResponse.setLocale() will affect the character encoding of the\nresponse only if it has not already been set explicitely.\n\nPlease check the JSTL 1.1 spec for more details\n(http://java/sun/com/jstl)\n\n"}]