[{"count": 0, "tags": [], "creator": "jon@etrafficsolutions.com", "attachment_id": null, "text": "While using the Xindice-XMLRPC interface to add a document to Xindice from \nPHP, Xindice was intermittently, yet consistently, throwing an exception \ntrying to parse the HTTP request. Eventually I tracked the problem down to \nline 434 in:\n\norg.apache.xindice.server.services.HTTPServer\nthe version string for this file is: \n/* $Id: HTTPServer.java,v 1.3 2002/03/11 22:32:36 kstaken Exp $ */\n\nThis is the chunk of code that contains the bug:\n\n424            // Everything after this point will be post data if there is any\n425           String cl = getRequestHeader(\"Content-length\");\n426            if ( cl.length() > 0 ) {\n427               int postlen = StringUtilities.stringToInt(cl, 0);\n428               if ( postlen > 0 ) {\n429                  boolean form = getRequestHeader(\"Content-\n                     type\").equalsIgnoreCase(\"application/x-www-form-\n                                               urlencoded\");\n430                  if ( form || postlen <= chunkSize ) {\n431                     // Store the post data in memory\n432                     postdata = new byte[postlen];\n433                     try {\n434                        dis.read(postdata);\n435                     }\n436                     catch ( Exception e ) {\n437                        connected = false;\n438                        return;\n439                     }\n\nNotice on line 434, the statement \"dis.read(postdata)\" ! While this works \nsometimes, the InputStream.read(byte[]) method is not guarantied to read byte\n[].length bytes. Here is a snipper from the javadocs for java.io.InputStream:\n\n         \"Reads some number of bytes from the input stream\n\t and stores them into the buffer array b. The number\n\t of bytes actually read is returned as an integer.\"\n\nWhile stepping through the code, I noticed that dis.read(postdata) often \nreturned < postdata.length, which meant the full request wasn't read and the \nXML parser barfs.\nI've fixed this error by replacing line 434 with the following:\n\n         int read = 0;\n         while((read += dis.read(postdata, read, postlen - read)) < postlen); \n         \nThat's it, works fine now.         \n\nBTW - when I went to the cvs repository to see if there was a newer version of \nthis file, I found that it has been deprecated (placed in the attic) with the \nfollowing note:\n\n\"Stripping the server framework and XMLObjects. There is no longer a standalone\nserver version of Xindice. To enable it as a server you have to run it under\na servlet engine.\"\n\nCould somebody please point me to some information on how to set this up? \n\nHope this is helpful, and thanks for any information you can provide,\nJon Swoveland (jon@etrafficsolutions.com)", "id": 34884, "time": "2003-04-10T16:40:09Z", "bug_id": 18909, "creation_time": "2003-04-10T16:40:09Z", "is_private": false}, {"count": 1, "attachment_id": null, "bug_id": 18909, "is_private": false, "id": 38084, "time": "2003-05-30T23:26:10Z", "creator": "Kevin.Ross@iVerticalLeap.com", "creation_time": "2003-05-30T23:26:10Z", "tags": [], "text": "fixed in 1.1 due to dependency on servle engine"}]