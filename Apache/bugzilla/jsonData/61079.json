[{"count": 0, "tags": [], "text": "Created attachment 34985\npatch to implement this\n\nTo enable reproducible builds of various java packages, \nant should allow to override the timestamps it inserts (such as 'TODAY')", "attachment_id": 34985, "bug_id": 61079, "id": 198713, "time": "2017-05-08T07:25:42Z", "creator": "apachebugs@lsmod.de", "creation_time": "2017-05-08T07:25:42Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 61079, "attachment_id": null, "text": "Thanks Bernhard\n\nTraditionally Ant would use \"magic\" (system) properties for something like this rather than environment variables. This would also allow us to easily test the change.", "id": 198714, "time": "2017-05-08T07:46:19Z", "creator": "bodewig@apache.org", "creation_time": "2017-05-08T07:46:19Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 61079, "attachment_id": null, "id": 198716, "time": "2017-05-08T14:23:23Z", "creator": "apachebugs@lsmod.de", "creation_time": "2017-05-08T14:23:23Z", "is_private": false, "text": "How would one use the magic properties?\nAnd would that work without patching all ~100 packages individually\nthat call ant during build in openSUSE?\n(we already have a patch for rpm to set the SOURCE_DATE_EPOCH variable globally\nto the latest changelog date of a package)"}, {"count": 3, "tags": [], "text": "The magic properties would be something like -Dant.fixed.now=SOME_TS for each and every invocation. Ant's java code doesn't really use getEnv anywhere and we really want to keep it that way.\n\nBy packages I assume you are talking about SUSE packages that execute Ant to build, right?\n\nAnt's wrapper shell script reacts to environment variables, in particular ANT_OPTS for parameters to send to the JVM (like max memory and so on) and ANT_ARGS for Ant itself. In a build farm like yours you'd set ANT_ARGS to contain the property call above.", "is_private": false, "bug_id": 61079, "id": 198717, "time": "2017-05-08T14:32:07Z", "creator": "bodewig@apache.org", "creation_time": "2017-05-08T14:32:07Z", "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 61079, "attachment_id": null, "is_private": false, "id": 198720, "time": "2017-05-08T16:04:39Z", "creator": "apachebugs@lsmod.de", "creation_time": "2017-05-08T16:04:39Z", "text": "I tried to build jcodings with an added\nexport ANT_ARGS=\"-Dant.fixed.now=123456789\"\n\nbut still get in\nMETA-INF/MANIFEST.MF\nBuilt-Date: 2018-06-14\nBuilt-Time: 05:07:50\n\nand google is not good at finding any examples for how to use this"}, {"text": "Oh, I'm sorry, we've been talking past each other.\n\nI was referring to your patch and wanted to ask you to rewrite it to use a project property rather than an environment variable. The example I gave was for a time after a modified version of your patch had been applied (and ant.fixed.time would be the name of the hypothetical magic property).\n\nI should be able to free up a bit of time tonight to add the feature to tstamp, don't bother with modifying the patch, I'll do so myself. The result will become available once 1.9.10 or 1.10.2 get released.", "tags": [], "creator": "bodewig@apache.org", "is_private": false, "count": 5, "id": 198722, "time": "2017-05-08T16:09:41Z", "bug_id": 61079, "creation_time": "2017-05-08T16:09:41Z", "attachment_id": null}, {"count": 6, "attachment_id": null, "bug_id": 61079, "text": "ah, now I got it.\nThanks for doing the patch (I did not do much java coding after 1.0.x).\n\nwould be nice, if you could then link the patch here, so that I can also test it\nbefore the official release.", "id": 198723, "time": "2017-05-08T16:17:45Z", "creator": "apachebugs@lsmod.de", "creation_time": "2017-05-08T16:17:45Z", "tags": [], "is_private": false}, {"count": 7, "tags": [], "text": "The property's name is ant.tstamp.now - added with git commit 966708a to master, will be in 1.9.10 and 1.10.2.", "attachment_id": null, "bug_id": 61079, "id": 198725, "time": "2017-05-08T16:47:16Z", "creator": "bodewig@apache.org", "creation_time": "2017-05-08T16:47:16Z", "is_private": false}, {"count": 8, "tags": [], "creator": "bodewig@apache.org", "attachment_id": null, "text": "many thanks", "id": 198726, "time": "2017-05-08T16:47:44Z", "bug_id": 61079, "creation_time": "2017-05-08T16:47:44Z", "is_private": false}, {"count": 9, "tags": [], "text": "I tested your patch and it works great. Thanks a lot.", "attachment_id": null, "bug_id": 61079, "id": 198729, "time": "2017-05-08T19:58:01Z", "creator": "apachebugs@lsmod.de", "creation_time": "2017-05-08T19:58:01Z", "is_private": false}, {"count": 10, "attachment_id": null, "bug_id": 61079, "is_private": false, "id": 198731, "time": "2017-05-09T06:08:28Z", "creator": "jan@materne.de", "creation_time": "2017-05-09T06:08:28Z", "tags": [], "text": "You use \"seconds sind epoch\" to define 'now'.\n  <target name=\"testMagicProperty\">\n    <local name=\"ant.tstamp.now\"/>\n    <property name=\"ant.tstamp.now\" value=\"100000\"/>\n    <tstamp/>\n    <au:assertPropertyEquals name=\"DSTAMP\" value=\"19700102\"/>\n  </target>\n\nWould it be more user friendly to use the ISO format instead/additionally?\n\n  <target name=\"testMagicProperty\">\n    <local name=\"ant.tstamp.now.iso\"/>\n    <property name=\"ant.tstamp.now\" value=\"2017-05-09T08:07\"/>\n    <tstamp/>\n    <au:assertPropertyEquals name=\"DSTAMP\" value=\"20170509\"/>\n  </target>"}, {"count": 11, "attachment_id": null, "bug_id": 61079, "is_private": false, "id": 198732, "time": "2017-05-09T06:57:00Z", "creator": "bodewig@apache.org", "creation_time": "2017-05-09T06:57:00Z", "tags": [], "text": "yes, sounds reasonable."}, {"count": 12, "tags": [], "bug_id": 61079, "attachment_id": null, "id": 198734, "time": "2017-05-09T09:04:25Z", "creator": "jan@materne.de", "creation_time": "2017-05-09T09:04:25Z", "is_private": false, "text": "I added a second MagicProperty 'ant.tstamp.now.iso'.\nI used Java8 features, to a backport would require a little more work ;)"}]