[{"count": 0, "tags": [], "bug_id": 37286, "attachment_id": null, "is_private": false, "id": 81879, "time": "2005-10-28T05:43:31Z", "creator": "nicole@tedesco.name", "creation_time": "2005-10-28T05:43:31Z", "text": "I personally would like a schema for Ant build files.  Sure, no schema could\never be complete for Ant but a \"good enough\" schema could do in just about all\ncases that most people will encounter and schema extensions may be able to fill\nin the rest.  However, I could write a schema today if characteristics such as\nthe \"name\" attribute of the \"element\" element in MacroDefs could be specified\nagainst a specific namespace.  If I could do that then I could write a schema\nwith lots of \"any\" elements validating against ##other namespaces and I could\nmake most of my build files validate quite cleanly while remaining quite flexible.\n\nAny thoughts?"}, {"count": 1, "tags": [], "creator": "nicole@tedesco.name", "attachment_id": 16825, "is_private": false, "id": 81880, "time": "2005-10-28T05:46:17Z", "bug_id": 37286, "creation_time": "2005-10-28T05:46:17Z", "text": "Created attachment 16825\nPartial Ant 1.6.5 schema\n\nThis partial Ant 1.6.5 schema relies on ##other namespacing and schema\nextensions to enable flexibility"}, {"count": 2, "tags": [], "bug_id": 37286, "text": "I've thought about this a little more:\n\n1. First get macrodef and taskdef to actually propagate the namespace down to de\nnova attributes and elements.\n\n2. Allow the attributes and elements in the *def body to be able to referred to\nwith the namespace prefix that had been previously mapped.  For instance:\n\n<project\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txmlns:foo=\"http://www.foo.com/ant\" >\n\n...\n\n<target name=\"-init-macrodef-javac\" depends=\"-init\">\n\t<macrodef name=\"javac\" uri=\"http://www.foo.com/ant\">\n\t\t<attribute name=\"srcdir\" default=\"${src.dir}\"/>\n\t\t<attribute name=\"destdir\" default=\"${build.classes.dir.real}\"/>\n\t\t<attribute name=\"classpath\"\ndefault=\"${javac.classpath}:${j2ee.platform.classpath}\"/>\n\t\t<attribute name=\"debug\" default=\"${javac.debug}\"/>\n\t\t<element name=\"customize\" optional=\"true\"/>\n\t\t<sequential>\n\t\t\t<javac srcdir=\"@{srcdir}\" destdir=\"@{destdir}\" debug=\"@{debug}\"\ndeprecation=\"${javac.deprecation}\" source=\"${javac.source}\"\ntarget=\"${javac.target}\" includeantruntime=\"false\">\n\t\t\t\t<classpath>\n\t\t\t\t\t<path path=\"@{classpath}\"/>\n\t\t\t\t</classpath>\n\t\t\t\t<compilerarg line=\"${javac.compilerargs}\"/>\n\t\t\t\t<foo:customize/>\n\t\t\t</javac>\n\t\t</sequential>\n\t</macrodef>\n</target>\n\nNot only does this help with schema development, but it also makes things a\nlittle more readable (e.g., easily notice the difference between elements that\nare there by original definition and those that were added).\n\nIf there is anything I can do (e.g., help code development) to make this happen\nASAP (that is, if is indeed a desirable feature) then I'll be glad to chip in.\n\nNicole Tedesco\nnicole@tedesco.name\nphlorgian@hotmail.com", "id": 81913, "time": "2005-10-28T21:57:30Z", "creator": "nicole@tedesco.name", "creation_time": "2005-10-28T21:57:30Z", "is_private": false, "attachment_id": null}]