[{"count": 0, "tags": [], "creator": "david@daviddewolf.com", "attachment_id": null, "text": "When a CommunicationException is thrown in the authenticate(String,String)\nmethod of the JNDIRealm, a NullPointerException is thrown if the exception has\nno/null message (which appears to be the case sometimes with the sun.jndi.ldap\nprovider).  This exception is due to the following code which resides within a\ncatch block:\n\nif (e.getMessage().indexOf(\"Socket closed\") < 0)                    \n    throw(e);\n\nThis NullPointerException prevents the Realm from authenticating the user (which\nit attempts to redo if the CommunicationException was caused by the connection\nbeing closed).  \n\nIt is also important to note the sun.jndi.ldap provider provides a message of\n\"connection closed\" (when it doesn't contain a null message) when the connection\nhas been reset.  It seems advisable to think about other options for testing if\nthe connection has been reset (other than testing for indexOf(\"Socket closed\")\nsince different providers will provide different messages.\n\nHere are the stack traces which led me to these conclusions/fixes:\n\n-- The first excpetion shows the Null pointer:\n\njava.lang.NullPointerException\n\tat org.apache.catalina.realm.JNDIRealm.authenticate(JNDIRealm.java:793)\n\tat\norg.apache.catalina.authenticator.FormAuthenticator.authenticate(FormAuthenticator.java:263)\n\tat\norg.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)\n\tat\norg.apache.catalina.core.StandardPipeline$StandardPipelineValveContext.invokeNext(StandardPipeline.java:641)\n\tat org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:480)\n\tat org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:995)\n\tat org.apache.catalina.core.StandardContext.invoke(StandardContext.java:2415)\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:180)\n\tat\norg.apache.catalina.core.StandardPipeline$StandardPipelineValveContext.invokeNext(StandardPipeline.java:643)\n\tat\norg.apache.catalina.valves.ErrorDispatcherValve.invoke(ErrorDispatcherValve.java:171)\n\tat\norg.apache.catalina.core.StandardPipeline$StandardPipelineValveContext.invokeNext(StandardPipeline.java:641)\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:172)\n\tat\norg.apache.catalina.core.StandardPipeline$StandardPipelineValveContext.invokeNext(StandardPipeline.java:641)\n\tat org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:480)\n\tat org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:995)\n\tat\norg.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:174)\n\tat\norg.apache.catalina.core.StandardPipeline$StandardPipelineValveContext.invokeNext(StandardPipeline.java:643)\n\tat org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:480)\n\tat org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:995)\n\tat org.apache.coyote.tomcat4.CoyoteAdapter.service(CoyoteAdapter.java:223)\n\tat org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:594)\n\tat\norg.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.processConnection(Http11Protocol.java:392)\n\tat org.apache.tomcat.util.net.TcpWorkerThread.runIt(PoolTcpEndpoint.java:565)\n\tat\norg.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run(ThreadPool.java:619)\n\tat java.lang.Thread.run(Thread.java:536)\n\n-- The second exception indicating the \"connection closed\" string\n\njavax.naming.CommunicationException.  Root exception is java.io.IOException:\nconnection closed\n\tat com.sun.jndi.ldap.LdapClient.ensureOpen(LdapClient.java:1648)\n\tat com.sun.jndi.ldap.LdapClient.authenticate(LdapClient.java:138)\n\tat com.sun.jndi.ldap.LdapCtx.connect(LdapCtx.java:2569)\n\tat com.sun.jndi.ldap.LdapCtx.ensureOpen(LdapCtx.java:2479)\n\tat com.sun.jndi.ldap.LdapCtx.ensureOpen(LdapCtx.java:2453)\n\tat com.sun.jndi.ldap.LdapCtx.doSearch(LdapCtx.java:1850)\n\tat com.sun.jndi.ldap.LdapCtx.searchAux(LdapCtx.java:1755)\n\tat com.sun.jndi.ldap.LdapCtx.c_search(LdapCtx.java:1680)\n\tat\ncom.sun.jndi.toolkit.ctx.ComponentDirContext.p_search(ComponentDirContext.java:368)\n\tat\ncom.sun.jndi.toolkit.ctx.PartialCompositeDirContext.search(PartialCompositeDirContext.java:328)\n\tat\ncom.sun.jndi.toolkit.ctx.PartialCompositeDirContext.search(PartialCompositeDirContext.java:313)\n\tat javax.naming.directory.InitialDirContext.search(InitialDirContext.java:238)\n\tat com.vivare.common.tomcat.JNDIRealm.getUserBySearch(JNDIRealm.java:1022)\n\tat com.vivare.common.tomcat.JNDIRealm.getUser(JNDIRealm.java:915)\n\tat com.vivare.common.tomcat.JNDIRealm.authenticate(JNDIRealm.java:864)\n\tat com.vivare.common.tomcat.JNDIRealm.authenticate(JNDIRealm.java:789)\n\tat\norg.apache.catalina.authenticator.FormAuthenticator.authenticate(FormAuthenticator.java:263)\n\tat\norg.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)\n\tat\norg.apache.catalina.core.StandardPipeline$StandardPipelineValveContext.invokeNext(StandardPipeline.java:641)\n\tat org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:480)\n\tat org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:995)\n\tat org.apache.catalina.core.StandardContext.invoke(StandardContext.java:2415)\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:180)\n\tat\norg.apache.catalina.core.StandardPipeline$StandardPipelineValveContext.invokeNext(StandardPipeline.java:643)\n\tat\norg.apache.catalina.valves.ErrorDispatcherValve.invoke(ErrorDispatcherValve.java:171)\n\tat\norg.apache.catalina.core.StandardPipeline$StandardPipelineValveContext.invokeNext(StandardPipeline.java:641)\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:172)\n\tat\norg.apache.catalina.core.StandardPipeline$StandardPipelineValveContext.invokeNext(StandardPipeline.java:641)\n\tat org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:480)\n\tat org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:995)\n\tat\norg.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:174)\n\tat\norg.apache.catalina.core.StandardPipeline$StandardPipelineValveContext.invokeNext(StandardPipeline.java:643)\n\tat org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:480)\n\tat org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:995)\n\tat org.apache.coyote.tomcat4.CoyoteAdapter.service(CoyoteAdapter.java:223)\n\tat org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:594)\n\tat\norg.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.processConnection(Http11Protocol.java:392)\n\tat org.apache.tomcat.util.net.TcpWorkerThread.runIt(PoolTcpEndpoint.java:565)\n\tat\norg.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run(ThreadPool.java:619)\n\tat java.lang.Thread.run(Thread.java:536)", "id": 37086, "time": "2003-05-12T19:30:18Z", "bug_id": 19864, "creation_time": "2003-05-12T19:30:18Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 19864, "text": "In the second stack trace, you will notice that the CommunicationException is\nfrom a JNDIRealm that is the package com.vivare.common.tomcat.  This realm is\nsimply the org.apache.catalina.realm.JNDIRealm with the following fix for the\nNullPointerException.  \n\nif (e.getMessage()==null \n || e.getMessage().indexOf(\"Socket closed\") < 0)                    \n     throw(e);\n\nObviously, since the code is identical, this behaivior also occurs when packagd\nas org.apache.catalina.realm.JNDIRealm.  Once again, this stack trace was added\nsimply to show the different exception messages that may indicate a timed-out\nconnection.", "id": 37087, "time": "2003-05-12T19:40:43Z", "creator": "david@daviddewolf.com", "creation_time": "2003-05-12T19:40:43Z", "is_private": false, "attachment_id": null}, {"count": 2, "attachment_id": null, "creator": "yannc76@yahoo.de", "is_private": false, "id": 37471, "time": "2003-05-20T12:52:20Z", "bug_id": 19864, "creation_time": "2003-05-20T12:52:20Z", "tags": [], "text": "See also #18698, but this description here is more detailed."}, {"count": 3, "attachment_id": null, "creator": "paal@objectbox.com", "is_private": false, "id": 39155, "time": "2003-06-20T11:23:32Z", "bug_id": 19864, "creation_time": "2003-06-20T11:23:32Z", "tags": [], "text": "When I encouter these problems the e.getMessage() returns \"simple bind failed: \n10.1.1.3:389\", while e.toString() \nreturns \"javax.naming.CommunicationException: simple bind failed: \n10.1.1.3:389.  Root exception is java.net.SocketException: Socket closed\".\n\nI replaced e.getMessage() with e.toString(), and now it works as expected and \nattemptes a second login:\n\nif (e.toString().indexOf(\"Socket closed\") < 0)\n                    throw(e);\n\n\n"}, {"count": 4, "tags": [], "bug_id": 19864, "text": "If it is:\nif (e.toString().indexOf(\"closed\") < 0)\n                    throw(e);\n\nThat should take care of the problem of the error being \"Connection closed\" as \nwell.\n\n", "id": 42115, "time": "2003-08-04T23:59:06Z", "creator": "jtulley@novell.com", "creation_time": "2003-08-04T23:59:06Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "text": "Patched in HEAD of 4.1. Please test and so I may port to 5.", "is_private": false, "bug_id": 19864, "id": 42120, "time": "2003-08-05T00:59:38Z", "creator": "funkman@joedog.org", "creation_time": "2003-08-05T00:59:38Z", "attachment_id": null}, {"count": 6, "tags": [], "text": "does anyone know what version of tomcat this bug was fixed in?\n\ni am running 4.1.24 and would like to move to a 4.1 version without building \nfrom scratch which has the bug fixed...\n\nthanks\nd\n\n(In reply to comment #4)\n> If it is:\n> if (e.toString().indexOf(\"closed\") < 0)\n>                     throw(e);\n> That should take care of the problem of the error being \"Connection closed\" \nas \n> well.\n\n", "is_private": false, "bug_id": 19864, "id": 86859, "time": "2006-03-15T14:54:10Z", "creator": "d.ohare@qub.ac.uk", "creation_time": "2006-03-15T14:54:10Z", "attachment_id": null}]