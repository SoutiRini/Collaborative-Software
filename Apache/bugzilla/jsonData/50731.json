[{"count": 0, "tags": [], "bug_id": 50731, "attachment_id": 26622, "is_private": false, "id": 144041, "time": "2011-02-08T05:29:09Z", "creator": "philip@apache.org", "creation_time": "2011-02-08T05:29:09Z", "text": "Created attachment 26622\napr_atomic_casptr volatile fix\n\nThe prototype for apr_atomic_casptr is\n\nAPR_DECLARE(void*) apr_atomic_casptr(volatile void **mem, void *with, const void\n *cmp);\n\nThe mem parameter has the wrong volatile qualifier, it is declared as \"a non-volatile pointer to a non-volatile pointer to volatile data\" but CAS operates on the value of the pointer, not on the value of the dereferenced pointer, so it is the value of the pointer that should be volatile.\n\nThe correct prototype is\n\nAPR_DECLARE(void*) apr_atomic_casptr(void * volatile *mem, void *with, const void\n *cmp);\n\nThis matches apr_atomic_cas32 where CAS applies to the int32 value and the corresponding parameter is a \"pointer to a volatile int32\".\n\nThe function apr_atomic_xchgptr has a similar problem.\n\nThe attached patch has been tested on 64-bit Linux."}, {"count": 1, "tags": [], "creator": "jorton@redhat.com", "attachment_id": null, "id": 144046, "time": "2011-02-08T06:51:43Z", "bug_id": 50731, "creation_time": "2011-02-08T06:51:43Z", "is_private": false, "text": "Yes, this is noted in STATUS as one of the API changes needed for 2.0 - I think it constitutes an API change so we can't really do it in 1.x."}]