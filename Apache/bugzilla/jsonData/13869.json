[{"count": 0, "tags": [], "creator": "stefan.proels@gmx.de", "attachment_id": null, "text": "When the connection between mod_jk2 and a client browser gets interrupted, e.g.\nbecause the client closed the connection, the communication link between mod_jk2\nand tomcat gets into an illegal state. mod_jk2 will send the remaining part of\ntomcats response to some other client, e.g., clients will receive (parts of)\nresponses to requests they have not sent. Users may consequently slip into\nsessions of other user. Note that besides of the fact the users' requests are\nnot served the right way this is a major security issue. Once this happend the\nserver becomes largely unusable until it is shutdown and restarted.\n\nReproducing the problem is somewhat tricky. You have to cut the connection at\nthe right time. The script below tries to read parts of varying size before it\ncloses the connection to increase the likelyhood that it eventually hits the\nright time. On the systems I have tried the error will occure almost instantly,\nbut that might not be the case on your system. Here is the script:\n\n----------------------------------------------------------------\n#!/usr/bin/perl -w\n\nuse Socket;\n\n##################################################\n# adjust this to your tomcat / apache installation\n$host = \"localhost\";\n$port = 9600;\n$doc = \"/erfx/const.jsp\";\n##################################################\n\n$count = 0;\n$read_lines = 1;\n\nsub request {\n    my ($doc) = @_;\nstart:\n    $count++;\n    my $iaddr = inet_aton($host)\n\tor die \"unknown host\\n\";\n    my $paddr = sockaddr_in($port, $iaddr);\n    my $proto = getprotobyname('tcp');\n\n    socket(SOCK, PF_INET, SOCK_STREAM, $proto)\n\tor die \"socket failed\\n\";\n    connect(SOCK, $paddr)\n\tor die \"connect failed\\n\";\n    select SOCK;\n    $| = 1;\n    select STDOUT;\n\n    print SOCK <<END\nGET $doc HTTP/1.0\\r\nUser-Agent: test\\r\nHost: $host\\r\n\\r\nEND\n    ;\n\n    my $result = \"\";\n    while(<SOCK>) {\n\tif ($count % 2 == 0 && $read_lines == $.) {\n\t    $read_lines = 1 + ($read_lines + 1) % 20;\n\t    close(SOCK);\n\t    goto start;\n\t}\n\t$result .= $_;\n    }\n\n    close(SOCK);\n\n    return $result;\n}\n\n\n$result = request $doc;\n\n$result =~ /value:\\s*(\\d+)(.|[\\n\\r])*href=\\\"([^\\\"]+)\\\"/m\n    or die \"$result\\nBad response\\n\";\n$value = $1;\n$url = $3;\n\nprint \"$value $url\\n\";\n\n$|=1;\nfor ($i = 0; ; $i++) {\n    $result = request $url;\n    $result =~ /value:\\s*(\\d+)(.|[\\n\\r])*href=\\\"([^\\\"]+)\\\"/m\n\tor die \"$result\\nBad response\\n\"    ;\n    $my_value = $1;\n    $my_url = $3;\n    $my_url eq $url or die \"Got wrong URL: $my_url $url\\n\";\n    $my_value eq $value or die \"Got wrong value: $my_value $value\\n\";\n    print \"$i ok\\r\";\n}\n</pre>\n----------------------------------------------------------------\n\nand the test JSP the script requests:\n\n----------------------------------------------------------------\n<html>\n<head><title>Test Page</title></head>\n<body>\n<p>HI THERE!</p>\n<jsp:useBean id=\"date\" scope=\"session\" class=\"java.util.Date\"/>\n<p>value: <jsp:getProperty name=\"date\" property=\"time\"/></p>\n<p><a href=\"<%= response.encodeURL(request.getRequestURI()) %>\">again</a></p>\n<% for (int y = 0; y < 50; y++) { %>\n<p>\n<% for (int i = 0; i < 1000; i++) { %> test <% } %>\n<p>\n<% } %>\n</body>\n</html>\n----------------------------------------------------------------\n\nPut that somewhere into your installation and adjust the marked lines in the\nscript to point to the right location.\n\nThe script might detect the error different ways. Usually it will fail with \"Bad\nresponse\" because it receives the remaining part of a terminated response\nmissing the lines at the beginning the script looks for. May may also try\nrunning multiple instances of the script. You may then get parts of responses to\nrequests of another instance.\n\nThe following patch provides a simple fix for the problem:\n\n----------------------------------------------------------------\n-- jk/native2/common/jk_worker_ajp13.c_old     2002-10-23 06:42:33.000000000 +0200\n+++ jk/native2/common/jk_worker_ajp13.c 2002-10-23 06:29:48.000000000 +0200\n@@ -394,6 +394,7 @@\n          * upload data and we must consider that operation is no more recoverable\n          */\n         if (err!=JK_OK && ! e->recoverable ) {\n+           e->worker->in_error_state=JK_TRUE;\n             s->is_recoverable_error = JK_FALSE;\n             env->l->jkLog(env, env->l, JK_LOG_ERROR,\n                           \"ajp13.service() ajpGetReply unrecoverable error %d\\n\",\n----------------------------------------------------------------\n\nThis way mod_jk2 will close the connection to tomcat and reconnect, thereby\ndumping the part of tomcats response which can no longer be forwarded to the\nclient. Note: I did not look much at the AJP13 protocol and the sources. There\nmay be better ways to fix this.", "id": 25020, "time": "2002-10-23T05:43:31Z", "bug_id": 13869, "creation_time": "2002-10-23T05:43:31Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 13869, "text": "We allready had a following in the sources:\n\n       if (err!=JK_OK && ! e->recoverable ) {\n            s->is_recoverable_error = JK_FALSE;\n            env->l->jkLog(env, env->l, JK_LOG_ERROR,\n                          \"ajp13.service() ajpGetReply unrecoverable error %\nd\\n\",\n                          err);\n            /* The connection is compromised, need to close it ! */\n            e->worker->in_error_state = 1;\n            return JK_ERR;\n        }\n\n\nSo there is allready setting of worker in_error_state.\nIf your sources are the same, an if it works with you patch, then the problem \nmight be in race condition, caused by the logging.\n", "id": 25021, "time": "2002-10-23T06:02:05Z", "creator": "mturk@apache.org", "creation_time": "2002-10-23T06:02:05Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 13869, "attachment_id": null, "text": "Looking at the current CVS repository, apparently it was fixed in Version 1.39\nof the file. I was referring to the 4.1.12 distribution, which still contained\nthe bug.\n", "id": 25022, "time": "2002-10-23T06:15:34Z", "creator": "stefan.proels@gmx.de", "creation_time": "2002-10-23T06:15:34Z", "is_private": false}]