[{"count": 0, "tags": [], "bug_id": 13042, "is_private": false, "text": "This is mainly for AntRunner support. AntRunner is the JBuilder OpenTool that\ncan run ant on the project buildfile.  It parses the buildfile to determine the\nlist of targets that it presents to the IDE user to select.\n\nThe background is that JBuilder itself runs under an older JDK (1.3), for a\nvariety of reasons detailed in the JBuilder newsgroups.  The user programs,\nhowever, and compiled, run and debugged (and javadoc'ed) using whatever the user\nspecifies, usually JDK 1.4. \n\nThe problem is now that when I want to use a JDK1.4-specific element in an Ant\nproject, when AntRunner (which, because it is a JBuilder extension, is being run\nunder a 1.3 JDK) parses the build.xml (by calling ProjectHelper.parse()), it\nthrows errors about some elements (in this case, <tag>) not being supported. \nEven though this is a complete non-issue: the actual build is performed by an\nexternal Ant task which uses the right JDK.\n\nWhat might help is one of the following:\n\n(a) An option to force JavaEnvUtils to pretend that the JDK version is whatever\nthe caller (in this case, AntRunner) wants it to be. It is up to the caller to\nactually ensure that the build.xml gets actually *run* with the appropriate JDK.\n\nOR\n\n(b) An option to just parse the file for *syntactic* correctness and list the\ntargets (i.e. don't actually process any of the elements within).\n\n(Actually, you can see this problem even today: if you have a syntax error in\ntbe build.xml file, \"ant -projecthelp\" just puts out a Buildfile: line and does\nan exit(1) without emitting any errors at all.  A proper verification option\nthat can also list out the targets would go a long way towards helping AntRunner\ncope with this unfortunate JDK \"mismatch\" situation).\n\n(Another note: think of this as a way to support tools that allow you to check\nAnt files using the \"ant\" parser itself, where the tool itself runs under a\ndifferent JDK than the target build process).", "id": 23472, "time": "2002-09-26T19:08:19Z", "creator": "shankarunni@netscape.net", "creation_time": "2002-09-26T19:08:19Z", "attachment_id": null}, {"count": 1, "attachment_id": null, "bug_id": 13042, "text": "I'm confused. you talk about java versions, but your problems seem to be about\nversions of ant files, with these comments about parsing unsupported tags and\nattributes.\n\nClarify this and then we can discuss it. ", "id": 23602, "time": "2002-09-28T04:16:44Z", "creator": "stevel@apache.org", "creation_time": "2002-09-28T04:16:44Z", "tags": [], "is_private": false}, {"count": 2, "attachment_id": null, "bug_id": 13042, "text": "Oh, sorry. Let me put this more concisely:\n\n* There is a JBuilder Ant integration called \"AntRunner\", which allows us to \nrun Ant from within JBuilder.\n* JBuilder itself is a Java program that runs on JDK 1.3 (can't run under 1.4 \nfor a variety of reasons). However, the programs that are developed with the \nIDE are run (and compiled) with whatever JDK I pick (usually JDK 1.4).\n* The AntRunner extension (which is run within JBuilder itself, and thus uses \nJDK 1.3) wants to parse the build.xml file, but only to extract the list of \ntargets and descriptions. Once I pick a target to build, it launches an \nexternal process (ant.bat) to do this, so the actual build ends up using JDK \n1.4.\n* But because AntRunner itself runs under 1.3, when it parses the build.xml, \nit gets a bunch of errors about features being unavailable.  But these errors \nare not germane because the actual building itself won't be done under JDK \n1.3 - it'll actually happen under JDK 1.4, which is the JDK used by Ant.\n\nSo the request is for a possible API variant that can pretend to the build.xml \nparser that the JDK actually is 1.4 (i.e. a variant of parse that \nsays: \"please parse this buildfile as if it were going to be executed by a 1.4 \nJDK\".  (Of course, it's our responsibility to actually ensure that the build, \nwhen it takes place, does so in a 1.4 VM, but that's our problem..)\n\nIs this explanation somewhat less confusing?\n", "id": 23657, "time": "2002-09-30T17:46:15Z", "creator": "shankarunni@netscape.net", "creation_time": "2002-09-30T17:46:15Z", "tags": [], "is_private": false}, {"count": 3, "tags": [], "bug_id": 13042, "attachment_id": null, "id": 35418, "time": "2003-04-17T13:57:24Z", "creator": "bodewig@apache.org", "creation_time": "2003-04-17T13:57:24Z", "is_private": false, "text": "If all you want to do is getting the target names, why can't you go ahead and\nattach a build logger of your own that swallows the warnings?\n\nI assume you are talking about non-fatal things like \"the source attribute in\njavadoc will be ignored\" or so."}, {"count": 4, "tags": [], "creator": "bodewig@apache.org", "is_private": false, "id": 35420, "attachment_id": null, "bug_id": 13042, "creation_time": "2003-04-17T13:59:48Z", "time": "2003-04-17T13:59:48Z", "text": "If you try a recent nightly build, you shouldn't see any warnings except for\nthe top-level tasks, BTW.  Setting of attributes and creation of child elements\nhas been delayed beyond the point you are going to reach IIRC.\n\nAnd finally, you could run ant -projecthelp to get the target names - doing so\nprogrammatically should be possible as well."}, {"count": 5, "tags": [], "bug_id": 13042, "is_private": false, "text": "I'll do that, thanks. Fortunately, there's now a version of JBuilder (8) that\nruns on 1.4.1, so this is less of a problem, but there might well be future\nsituations when this happens (e.g. when JDK 1.5 comes out, and there's some Ant\nfeature that depends on JDK 1.5)..", "id": 35452, "time": "2003-04-17T17:21:46Z", "creator": "shankarunni@netscape.net", "creation_time": "2003-04-17T17:21:46Z", "attachment_id": null}, {"count": 6, "tags": [], "bug_id": 13042, "text": "Closing since it seems the problem has gone away and a listener approach seems\nlike a reasonable approach.", "id": 40334, "time": "2003-07-10T12:25:46Z", "creator": "conor@apache.org", "creation_time": "2003-07-10T12:25:46Z", "is_private": false, "attachment_id": null}]