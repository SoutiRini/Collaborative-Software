[{"attachment_id": null, "tags": [], "creator": "steffenp@gmx.de", "text": "I have the following properties file:\n\nlog4j.rootLogger=ALL,Default\nlog4j.appender.Default=org.apache.log4j.ConsoleAppender\nlog4j.appender.Default.layout=org.apache.log4j.PatternLayout\nlog4j.appender.Default.layout.conversionPattern=%-5p [%t] %m%n\n\nI use the following code in my application XNap (http://xnap.sf.net):\n\nLevelMatchFilter lmf = new LevelMatchFilter();\nlmf.setLevelToMatch(\"WARN\");\nlmf.setAcceptOnMatch(true);\nLogger.getRootLogger().getAppender(\"Default\").addFilter(lmf);\n\nI would only expect log entries on the console that have level warn, but I get\nall debug output instead. \n\nUsing a different filter like this\n\nLogger.getRootLogger().getAppender(\"Default\").addFilter(new DenyAllFilter());\n\nproduces the expected zero output.", "count": 0, "id": 11333, "time": "2002-02-28T23:46:28Z", "bug_id": 6773, "creation_time": "2002-02-28T23:46:28Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 6773, "is_private": false, "id": 11438, "creation_time": "2002-03-04T17:51:08Z", "time": "2002-03-04T17:51:08Z", "creator": "steffenp@gmx.de", "text": "I think the comparision in LevelMatchFilter.java, line 98 is wrong.\n\nInstead of comparing the object pointers:\n\nif(this.levelToMatch == event.level) {\n\nThe levels should be compared, like this e.g.:\n\nif(this.levelToMatch.toInt() == event.level.toInt()) {\n", "attachment_id": null}, {"count": 2, "tags": [], "creator": "ceki@apache.org", "text": "\nHi Steffen,\n\nI think that the LevelMatchFilter works as documented:\n\n  public class LevelMatchFilter extends Filter\n\n  This is a very simple filter based on level matching. \n\n  The filter admits two options LevelToMatch and AcceptOnMatch. If there is an \nexact match between the value of the LevelToMatch option and the level of the \nLoggingEvent, then the decide(org.apache.log4j.spi.LoggingEvent) method returns \nFilter.ACCEPT in case the AcceptOnMatch option value is set to true, if it is \nfalse then Filter.DENY is returned. If there is no match, Filter.NEUTRAL is \nreturned. \n\nFor the behaviour you desire, try this:\n\nLevelMatchFilter lmf = new LevelMatchFilter();\nlmf.setLevelToMatch(\"WARN\");\nlmf.setAcceptOnMatch(true);\nLogger.getRootLogger().getAppender(\"Default\").addFilter(lmf);\n// the following is required:\nLogger.getRootLogger().getAppender(\"Default\").addFilter(new DenyAllFilter());\n\n", "id": 15664, "time": "2002-05-07T20:09:08Z", "bug_id": 6773, "creation_time": "2002-05-07T20:09:08Z", "is_private": false, "attachment_id": null}]