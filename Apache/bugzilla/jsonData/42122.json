[{"count": 0, "tags": [], "bug_id": 42122, "attachment_id": null, "text": "Ant apparently uses the \"external file attributes\" field of the zip file entry\n(more specifically it's top 16 bits) for file permission. I couldn't confirm\nthis in the PKZIP specification at http://www.info-zip.org/pub/infozip/doc/, but\nfrom what I can see from various other unzip implementations (most notably\nsolaris /bin/unzip), this seems to be a standard practice.\n\nHowever, apparently not all zip program creates zip files by using these\nattributes. I couldn't confirm which program created this one zip file, but I\ngot one where external file attributes is set to 0. The platform bit is also set\nto 0, which indicates that the file permission is not stored in the zip file.\n\nWhen I use such a zip file as a source of the <zipfileset> to re-zip it into\nanother zip file, such as:\n\n<zip destfile=\"foo.zip\">\n  <zipfileset src=\"bar.zip\"/>\n</zip>\n\nin an attempt to copy all entries, Ant internally call into\nZipResource.setEntry(), which does the following:\n\n    private void setEntry(ZipEntry e) {\n        if (e == null) {\n            setExists(false);\n            return;\n        }\n        setName(e.getName());\n        setExists(true);\n        setLastModified(e.getTime());\n        setDirectory(e.isDirectory());\n        setSize(e.getSize());\n        setMode(e.getUnixMode());\n    }\n\nThe problematic bit is the last \"setMode(e.getUnixMode())\". As I wrote above, my\nzip file declares the platform=0, so the unix mode is really not set at all, and\nthe getUnixMode returns 0. But Ant calls the setMode() method anyway, assuming\nthat this 0 value is the explicitly set value, which causes:\n\n    public void setMode(int mode) {\n        checkAttributesAllowed();\n        this.mode = mode;\n        modeSet = true;\n    }\n\nThis eventually causes entries in the created foo.zip to have 000 permission.\n\nI believe the code needs to be changed to:\n\n    if(e.getPlatform()==3) // if platform is UNIX\n        setMode(e.getUnixMode());", "id": 101698, "time": "2007-04-13T19:28:53Z", "creator": "kk@kohsuke.org", "creation_time": "2007-04-13T19:28:53Z", "is_private": false}, {"attachment_id": null, "tags": [], "bug_id": 42122, "is_private": false, "count": 1, "id": 115476, "time": "2008-04-09T17:21:17Z", "creator": "k.georgiou@atreides.org.uk", "creation_time": "2008-04-09T17:21:17Z", "text": "I get similar problems (mode 000) with something like:\n\n<jar jarfile=\"${dist.jar}\" basedir=\"${build}\">\n  <zipgroupfileset dir=\"${mergedir}\" includes=\"*.jar\" />\n</jar>\n\nThe jar files in ${mergedir} have been created with Sun's jar which doesn't include a unix mode."}, {"count": 2, "tags": [], "bug_id": 42122, "text": "Created attachment 21801\nuse getUnixMode() only when the platform is unix", "id": 115477, "time": "2008-04-09T19:02:20Z", "creator": "k.georgiou@atreides.org.uk", "creation_time": "2008-04-09T19:02:20Z", "is_private": false, "attachment_id": 21801}, {"count": 3, "tags": [], "creator": "k.georgiou@atreides.org.uk", "text": "The above batch fixes my testcase, since it's on Zip.java it's very likely that it will solve the original problem as well. The original solution didn't work (for my testcase) but it should also be used since it makes sense.", "id": 115478, "time": "2008-04-09T19:12:59Z", "bug_id": 42122, "creation_time": "2008-04-09T19:12:59Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 42122, "text": "I'm not sure that looking at the platform flag alone was sufficient, so I changed the code to assume a mode of 0000 must be unintentional - unless the user tells Ant it is desired.\n\nsubversion revision 677597", "id": 118760, "time": "2008-07-17T07:48:14Z", "creator": "bodewig@apache.org", "creation_time": "2008-07-17T07:48:14Z", "is_private": false, "attachment_id": null}]