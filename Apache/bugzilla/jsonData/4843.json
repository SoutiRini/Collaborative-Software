[{"count": 0, "tags": [], "bug_id": 4843, "attachment_id": null, "text": "I have the TagLibraryValidator of JSPTL emitting the following exception:\n\n> org.xml.sax.SAXParseException: An invalid XML character (Unicode: 0x83) was \nfound in the CDATA section.\n\nThe code it reports (0x83 here) varies depending on the JSP content.\n\nThis happens when I have both taglib page directive to JSPTL and non-ascii \ncharacters outside the custom tags.  I looked into TagLibraryValidator of JSPTL \nand found the following code in its validate(String prefix, PageData page) \nmethod:\n\n> SAXParserFactory f = SAXParserFactory.newInstance();\n> f.setValidating(true);\n> SAXParser p = f.newSAXParser();\n> p.parse(page.getInputStream(), h);\n\nTagLibraryValidator.validate is not provided with anything else but PageData, \nto my knowledge, so I thought this is the best it can do even though it doesn't \nmention encodings.  (This is why I'm submitting this report to Tomcat team \nrather than JSPTL team.)\n\nNext, I dumped what PageData.getInputStream() contains, and found that it is \nmissing the XML declaration, which I thought should contain the encoding \nattribute propagated from JSP page directive.  So, no wonder the SAX parser \nJSPTL uses fails at non-ascii characters.\n\nI suppose this is a serious situation since this may imply people cannot mix \nnon-ascii html text and tag libraries that has TagLibraryValidator.  I see two \nimmediate remedies to this, either make PageData.getInputStream() produce an \nXML declaration containing appropriate encoding attribute, or give PageData \nanother method getEncoding().\n\nP.S. I'm not an expert of JSP or XML.  So forgive me if I'm saying something \nirrelevant.", "id": 7874, "time": "2001-11-13T10:08:01Z", "creator": "kenichi@kinmokusei.com", "creation_time": "2001-11-13T10:08:01Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 4843, "attachment_id": null, "id": 7875, "time": "2001-11-13T10:28:48Z", "creator": "martin@isallineed.org", "creation_time": "2001-11-13T10:28:48Z", "is_private": false, "text": "If no encoding is specified in an xml file, it will take the default of utf-8 \n(according to xml spec). Maybe not much info, but it may get you going.\nIf you use \"non utf8-ed\" strange characters, it will crash while encoding takes \nplace. "}, {"count": 2, "tags": [], "bug_id": 4843, "attachment_id": null, "id": 8761, "time": "2001-12-10T17:14:56Z", "creator": "kin-man.chung@sun.com", "creation_time": "2001-12-10T17:14:56Z", "is_private": false, "text": "This looks like the same problem as reported in 5096, which was fixed.  Please\ntry your test case with a current nightly build, and reopen the bug with a test\ncase if the bug is till present.  Make sure that utf-8 encoding is used."}]