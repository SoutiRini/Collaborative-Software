[{"attachment_id": 31680, "tags": [], "bug_id": 56581, "is_private": false, "count": 0, "id": 175572, "time": "2014-05-31T13:54:17Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2014-05-31T13:54:17Z", "text": "Created attachment 31680\ntest.jsp\n\n(Reproducible with the current trunk @1598763\n\nIf there is a JSP page that generates a lot of text and then encounters an error, the client receives only 8K*n bytes of text. The last chunk of text - before the actual place of the error is lost and not sent to the client.\n\nTo reproduce:\n1. Deploy the attached test.jsp and call it.\n2. Actual behaviour:\nThe last line of text is \"970 \".\nIf you save the result, it will be 16384 (16 Kb) (with LF line ends).\n\nExpected behaviour:\nThe last line of text is \"1000 Hello world!\".\n\nMy motivation for this enhancement request is that seeing all the text before the error place would make it easier to locate the error.\n\nAlso the lost ~8K of text may contain something valuable for the client.\n\nThe current workaround is to look into localhost.date.log for the actual stack trace. The stacktrace is for generated java file. It may contain a JSP source snippet, but not always."}, {"count": 1, "tags": [], "creator": "knst.kolinko@gmail.com", "attachment_id": null, "text": "For reference:\nCurrent \"Error handling\" thread on dev@\nhttp://tomcat.markmail.org/thread/znillhttbmvsl5e5", "id": 175675, "time": "2014-06-05T14:50:48Z", "bug_id": 56581, "creation_time": "2014-06-05T14:50:48Z", "is_private": false}, {"count": 2, "tags": [], "text": "As a note:\nThe error handling changes in trunk (r1600449 and follow-ups) have not fixed this issue. The behaviour is the same as earlier - the output is truncated at \"970 \".\n\nTested with trunk @1600674.", "is_private": false, "id": 175677, "creation_time": "2014-06-05T14:55:11Z", "time": "2014-06-05T14:55:11Z", "creator": "knst.kolinko@gmail.com", "bug_id": 56581, "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 56581, "attachment_id": null, "id": 175699, "time": "2014-06-06T14:06:01Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2014-06-06T14:06:01Z", "is_private": false, "text": "Looking into generated test_jsp.java,  I see that _jspService method ends with the following:\n\n[[[\n    } catch (java.lang.Throwable t) {\n      if (!(t instanceof javax.servlet.jsp.SkipPageException)){\n        out = _jspx_out;\n        if (out != null && out.getBufferSize() != 0)\n          try { out.clearBuffer(); } catch (java.io.IOException e) {}\n        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);\n        else throw new ServletException(t);\n      }\n    } finally {\n]]]\n\nSo there is a call to JspWriterImpl.clearBuffer() that clears its buffer.\n\nI can think of two ways to fix:\na) If I had access to JspWriterImpl internals then,\n\nif (out.flushed)\n out.flushBuffer();\nelse\n out.clearBuffer();\n\nThe motivation is that if we cannot undo, then do not lose what we already have generated.\n\nI think this way is wrong. The underlying stream can have a larger buffer. While out.flushed is true, the underlying stream may not have been flushed yet.\n\nb) \nif (response.isCommitted()) {\n out.flush();\n} else {\n out.clearBuffer();\n}\n\nAlthough \"b)\" is a bit more invasive, I think it is a way to go. It is also good that it can be implemented using public APIs."}, {"count": 4, "tags": [], "bug_id": 56581, "attachment_id": null, "id": 175700, "time": "2014-06-06T14:40:05Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2014-06-06T14:40:05Z", "is_private": false, "text": "Committed in r1600899 and will be in 8.0.9.\n\nBy the way, the try/catch{IOException} on those lines originates from r451231."}, {"count": 5, "tags": [], "bug_id": 56581, "attachment_id": null, "is_private": false, "id": 175812, "time": "2014-06-14T12:31:52Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2014-06-14T12:31:52Z", "text": "Applied to Tomcat 7 in r1602584 and will be in 7.0.55 onwards."}]