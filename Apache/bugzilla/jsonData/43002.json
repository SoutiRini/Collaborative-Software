[{"count": 0, "tags": [], "bug_id": 43002, "is_private": false, "text": "I'm running load tests using Grinder and our internal load testing \napplication.  We seen significant performance improvements in Tomcat 6.0.10 \nover version 5.5.23 using the NIO connector in Tomcat 6.  However 2 problems \nhave arisen moving to 6.0.13.  The JDK used is 1.6.0_01.\n\n1)  Performance has been severely degraded.\n2)  Spurious EOFExceptions are thrown by the load test client.  There are no \nerrors in the tomcat system logs.\n\nHere is the connector configuration used in both tests.\n\n    <Connector port=\"9000\" \nprotocol=\"org.apache.coyote.http11.Http11NioProtocol\" maxThreads=\"150\" \nminSpareThreads=\"10\" \n               maxSpareThreads=\"50\" enableLookups=\"false\" redirectPort=\"9443\" \n               acceptCount=\"200\" debug=\"0\" connectionTimeout=\"20000\" \ndisableUploadTimeout=\"true\"\n               socketBuffer=\"81920\" maxKeepAliveRequests=\"-1\" \nacceptorThreadCount=\"2\"/>", "id": 106075, "time": "2007-07-30T14:01:53Z", "creator": "guy.molinari@dig.com", "creation_time": "2007-07-30T14:01:53Z", "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 43002, "attachment_id": null, "is_private": false, "id": 106093, "time": "2007-07-31T06:43:40Z", "creator": "fhanik@apache.org", "creation_time": "2007-07-31T06:43:40Z", "text": "There was a memory leak in 6.0.10 when using a dynamically sized thread pool.\nThe fix for this was to add a bounded pool of objects, and that will slow it\ndown a bit.\nIf you are up for it, please leave us your test case, with results from .10 and\n.13 and I will see if there is anything else that happened.\n\nthanks\nFilip"}, {"count": 2, "tags": [], "creator": "guy.molinari@dig.com", "attachment_id": null, "text": "One thing I didn't mention is that I have 120 users configured in Grinder.   \nThe degradation was not small it was in excess of 50% making 6.0.13 unusable \nfor us.   Also, under load EOFExceptions were occurring.   The application used \nfor testing is quite ordinary and it would be difficult to provide.  I suspect \nthat any one of the sample apps will work.\n\nSteps to reproduce:\n1) Set up a grinder test against a simple app like say the struts-mailreader.\n2) Use JDK 1.6.0_01\n3) Configure 120 concurrent users in Grinder.\n\nPerform the tests on both 6.0.10 and 6.0.13.  Compare the requests/second \nthroughput.\n\n ", "id": 106098, "time": "2007-07-31T09:04:30Z", "bug_id": 43002, "creation_time": "2007-07-31T09:04:30Z", "is_private": false}, {"count": 3, "tags": [], "creator": "fhanik@apache.org", "text": "you need to provide more info, what are you testing, static files, size of the\nfiles, JSP pages,\nnumber of requests, sleeping between requests, etc", "id": 106100, "time": "2007-07-31T10:15:19Z", "bug_id": 43002, "creation_time": "2007-07-31T10:15:19Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 43002, "is_private": false, "text": "The response payload is about ~10K with JSP's that call Java application code.  \nNormal unladen execution times are about ~8ms.   The web pages include one or \nmore images/flash applications.   The test client ignores these however.  There \nare NO SLEEPS between requests, as we are trying to similate normal traffic \nthrough our load balancing appliances.   I'm attaching the grinder config file \nand JPython test script.\n\nHere is the grinder configuration file:\n====================================================================\n# grinder configuration\n\n##### Required fields #####\nPROJECT=RefAppLoadTest\n\n#TEST_SCRIPT=ReferenceAppTest_S9_DualNic_noimages_random_nosleep.py\n#TEST_SCRIPT=ReferenceAppTest_noimages_random_nosleep.py\nTEST_SCRIPT=ReferenceAppTest_DefaultContext_Random_NoSleep.py\n#TEST_SCRIPT=ReferenceAppTest_noimages_nosleep_spiking.py\n#TEST_SCRIPT=ReferenceAppTest_DefaultContext_Random_20RPS_rhvm2-3-4.py\n#TEST_SCRIPT=ReferenceAppTest_DefaultContext_Random_TestResults1field_5RPS.py\n\n# Duration of the full test (minutes)\n# This time must match the time required for the test script\n# to run\nTEST_DURATION=10\n#TEST_RUNS=2\n\n# The users will be evenly distributed across all clients,\n# using the floor of NUM_USERS/LOAD_CLIENTS\nLINUX_LOAD_CLIENTS=sedplatfc5,sedplatfc3,sedplatfc4\n#LINUX_LOAD_CLIENTS=sedplatfc5\nWIN_LOAD_CLIENTS=\n\n# Total number of users across all load clients\nNUM_USERS=120\n\n# Number of users to start with each grouping\nUSERS_IN_GROUP=30\n\n# Time in seconds between the start of each group of users\nGROUP_RAMPUP_TIME=120\n\n# Total number of spike users\nSPIKE=0\n\n# How long between spikes in seconds\nSPIKE_INTERVAL=180\n\n# Deviation around the spike in milliseconds\nSPIKE_SIGMA=750\n\n# The server to test\n# Barista sedplat9\n#TARGET_SERVER=sedplat9:9100\n\n# Tomcat sedplat9\n#TARGET_SERVER=sedplat9:9000\n\n# Tomcat sedplat3\n#TARGET_SERVER=sedplat3:9000\n#TARGET_SERVER=sedplat4:9000\n\n#Tomcat on Red Hat\n#TARGET_SERVER=sedplatfc1:9000\n\n#Tomcat on Red Hat Virtual\nTARGET_SERVER=sedplat9.go.com:9000\n\n#Stouted Ref App\n#TARGET_SERVER=sedplat5\n\n#Quantified Stouted Advarked Ref App\n#TARGET_SERVER=sedplat8:8082\n\n# The process to monitor on the server\n#TARGET_PROCESS=DPReferenceAppB\nTARGET_PROCESS=DPReferenceApp.\n#TARGET_PROCESS=inetinfo\n\n# The interval to retrieve performance data samples from the server (seconds)\nSAMPLING_PERIOD=5\n\n\n\n##### Optional fields #####\n# Defaults to no perfmon logging\n#PERFMON=true\n\n# Defaults to true\nUSE_CONSOLE=true\n\nHere is the Python script\n=====================================================================\n# The Grinder 3.0-beta30\n# HTTP script recorded by TCPProxy at Sep 28, 2006 3:16:38 PM\nimport random\n\nfrom net.grinder.script import Test\nfrom net.grinder.script.Grinder import grinder\nfrom net.grinder.plugin.http import HTTPPluginControl, HTTPRequest\nfrom HTTPClient import NVPair\nconnectionDefaults = HTTPPluginControl.getConnectionDefaults()\nhttpUtilities = HTTPPluginControl.getHTTPUtilities()\n\nrequestsPerSecond = 50\n\n# To use a proxy server, uncomment the next line and set the host and port.\n# connectionDefaults.setProxyServer(\"localhost\", 8001)\n\n# These definitions at the top level of the file are evaluated once,\n# when the worker process is started.\n\nconnectionDefaults.defaultHeaders = \\\n  ( NVPair('User-Agent', 'Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; \nrv:1.8.0.7) Gecko/20060909 Firefox/1.5.0.7'),\n    NVPair('Accept-Encoding', 'gzip,deflate'),\n    NVPair('Accept-Language', 'en-us,en;q=0.5'),\n    NVPair('Accept-Charset', 'ISO-8859-1,utf-8;q=0.7,*;q=0.7'),\n    NVPair('INLINEREPLACE', 'Yes'), )\n    \nheaders= \\\n  ( NVPair\n('Accept', 'text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/\nplain;q=0.8,image/png,*/*;q=0.5'),\n    NVPair\n('Referer', 'http://sedplat9.go.com:9000/ReferenceApplication/ReferenceApplicati\non/dynamic/homePage'), )\n\nurl0 = 'http://sedplat9.go.com:9000'\n\narticleIds = ['36', '113', '114', '115', '116', '117', '118', '119', '120', \n              '121', '122', '123', '124', '125', '126', '127', '128', '129', '13\n0', '132', '622']\n\naboutIds = ['314','315','316','317','318', '319', '320', '321', '621']\n\n# Create an HTTPRequest for each request, then replace the\n# reference to the HTTPRequest with an instrumented version.\n# You can access the unadorned instance using request101.__target__.\nhomePageRequest = HTTPRequest(url=url0, headers=headers)\nhomePageRequest = Test(1, 'Homepage').wrap(homePageRequest)\n\neventHomeRequest = HTTPRequest(url=url0, headers=headers)\neventHomeRequest = Test(2, 'Event Home Page').wrap(eventHomeRequest)\n\neventRequest = HTTPRequest(url=url0, headers=headers)\neventRequest = Test(3, 'Event Page').wrap(eventRequest)\n\neventItemRequest = HTTPRequest(url=url0, headers=headers)\neventItemRequest = Test(4, 'Event Item Page').wrap(eventItemRequest)\n\nnewsPageRequest = HTTPRequest(url=url0, headers=headers)\nnewsPageRequest = Test(5, 'News Page').wrap(newsPageRequest)\n\nnewsArticleRequest = HTTPRequest(url=url0, headers=headers)\nnewsArticleRequest = Test(6, 'News Article').wrap(newsArticleRequest)\n\naboutRequest = HTTPRequest(url=url0, headers=headers)\naboutRequest = Test(7, 'News Article').wrap(aboutRequest)\n\nclass TestRunner:\n  \n  \"\"\"A TestRunner instance is created for each worker thread.\"\"\"\n  def __init__(self):\n    ####### INCLUDE THESE TWO LINES TO HAVE GROUP RAMPUP TIME \n####################\n    threadGroup = grinder.threadID / 30        \n    grinder.sleep((1000 * 120 * threadGroup) + INITIAL_SLEEP_TIME, 0)\n    ####### END RAMPUP TIME \n######################################################\n    self.sleepTime = 1000 / requestsPerSecond\n\n  # Home Page\n  def getHomePage(self):\n    result = homePageRequest.GET('/ReferenceApplication/dynamic/homepage')\n    self.token_appRedirect = \\\n      httpUtilities.valueFromBodyURI('appRedirect') # 'homepage'\n    self.token_count = \\\n      httpUtilities.valueFromHiddenInput('count') # '0'\n    self.token_login_submit = \\\n      httpUtilities.valueFromHiddenInput('login_submit') # '1'\n\n    return result\n\n  # Single method for any Event pages\n  def getEventHomePage(self):\n    result = eventHomeRequest.GET('/ReferenceApplication/dynamic/eventspage')\n    self.token_appRedirect = \\\n      httpUtilities.valueFromBodyURI('appRedirect') # 'homepage'\n    return result\n\n  # Single method for any Event pages\n  def getEventPage(self, dateStr):\n    result = eventRequest.GET('/ReferenceApplication/dynamic/eventspage?date=' \n+ dateStr)\n    return result\n  \n  def getNewsPage(self):\n    result = newsPageRequest.GET('/ReferenceApplication/dynamic/newsPage')\n    self.token_appRedirect = \\\n      httpUtilities.valueFromBodyURI('appRedirect') # 'newsPage'\n    return result\n\n  def getNewsArticlePage(self, id):\n    result = newsArticleRequest.GET('/ReferenceApplication/dynamic/newsArticle?\nid=' + id)\n    return result\n\n  def getAboutPage(self, id):\n    result = aboutRequest.GET('/ReferenceApplication/dynamic/aboutFeature?id=' \n+ id)\n    return result\n    \n\n  def getEventItemPage(self, eventId):\n    result = eventItemRequest.GET('/ReferenceApplication/dynamic/aboutEvent?\nid=' + str(eventId))\n    return result\n\n  def __call__(self):\n    \"\"\"This method is called for every run performed by the worker thread.\"\"\"\n    self.getHomePage()      # GET homepage \n    self.getEventHomePage()      # GET default eventspage\n \n    eventMonthStr = '20060701'   \n    # Randomly request 3 of the 5 eventpages\n    for i in range(3):\n        rand = random.randint(0,4)\n        if rand == 0:          \n            eventMonthStr = '20060701'\n        elif rand == 1:          \n            eventMonthStr = '20060801'\n        elif rand == 2:          \n            eventMonthStr = '20060901'\n        elif rand == 3:          \n            eventMonthStr = '20061001'\n        elif rand == 4:          \n            eventMonthStr = '20061101'\n        self.getEventPage(eventMonthStr)\n            \n        #Randomly pick 3 events. Events range from 133-286, 325-355, 587-617\n        eventId = random.randint(133,286)  \n        self.getEventItemPage(eventId)\n        eventId = random.randint(325,355)        \n        self.getEventItemPage(eventId)\n        eventId = random.randint(587,617)        \n        self.getEventItemPage(eventId)\n\n    # GET default newspage\n    self.getNewsPage()      \n\n    \n    # Randomly request 4 newsarticles\n    for i in range(4):\n        idx = random.randint(0,len(articleIds)-1)\n        self.getNewsArticlePage(articleIds[idx])\n\n\n    # Randomly request 3 abouttopics\n    for i in range(3):\n        idx = random.randint(0,len(aboutIds)-1)\n        self.getAboutPage(aboutIds[idx])\n\n    #grinder.sleep(self.sleepTime)\n\n", "id": 106102, "time": "2007-07-31T10:48:46Z", "creator": "guy.molinari@dig.com", "creation_time": "2007-07-31T10:48:46Z", "attachment_id": null}, {"count": 5, "tags": [], "creator": "guy.molinari@dig.com", "attachment_id": 20581, "text": "Created attachment 20581\nJSP That renerates a variable response buffer with configurable sleep delays", "id": 106181, "time": "2007-08-02T11:43:14Z", "bug_id": 43002, "creation_time": "2007-08-02T11:43:14Z", "is_private": false}, {"count": 6, "tags": [], "creator": "guy.molinari@dig.com", "attachment_id": 20582, "text": "Created attachment 20582\nGrinder config file for load test", "id": 106182, "time": "2007-08-02T11:44:15Z", "bug_id": 43002, "creation_time": "2007-08-02T11:44:15Z", "is_private": false}, {"count": 7, "tags": [], "bug_id": 43002, "text": "Created attachment 20583\nGrinder/JPython script that calls response generator JSP for", "id": 106183, "time": "2007-08-02T11:46:26Z", "creator": "guy.molinari@dig.com", "creation_time": "2007-08-02T11:46:26Z", "is_private": false, "attachment_id": 20583}, {"count": 8, "tags": [], "bug_id": 43002, "is_private": false, "text": "I've added a simple JSP page to help work the issue.  \n\nThe Grinder load test scripts are now separate attachments.\n\nThe JSP page is pretty simplistic and I had to push the server hard.   It \nappears that the Content-Length header does not match the response buffer size.\n\nDuring one of the test runs I got the following exeception in the system logs, \nalthough it seemed to be an isolated occurance.\n\n===========================================================================\n2007-08-01 17:09:20,364 [http-8080-exec-9] ERROR \norg.apache.catalina.connector.CoyoteAdapter - An exception or error occurred in \nthe container during the request processing\njava.nio.BufferOverflowException\n\tat java.nio.DirectByteBuffer.put(DirectByteBuffer.java:311)\n\tat java.nio.DirectByteBuffer.put(DirectByteBuffer.java:290)\n\tat sun.nio.ch.IOUtil.write(IOUtil.java:70)\n\tat sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:334)\n\tat org.apache.tomcat.util.net.NioChannel.write(NioChannel.java:111)\n\tat org.apache.tomcat.util.net.NioBlockingSelector.write\n(NioBlockingSelector.java:57)\n\tat org.apache.tomcat.util.net.NioSelectorPool.write\n(NioSelectorPool.java:135)\n\tat org.apache.tomcat.util.net.NioSelectorPool.write\n(NioSelectorPool.java:130)\n\tat org.apache.coyote.http11.InternalNioOutputBuffer.writeToSocket\n(InternalNioOutputBuffer.java:433)\n\tat org.apache.coyote.http11.InternalNioOutputBuffer.flushBuffer\n(InternalNioOutputBuffer.java:761)\n\tat org.apache.coyote.http11.InternalNioOutputBuffer.endRequest\n(InternalNioOutputBuffer.java:398)\n\tat org.apache.coyote.http11.Http11NioProcessor.action\n(Http11NioProcessor.java:1089)\n\tat org.apache.coyote.Response.action(Response.java:183)\n\tat org.apache.coyote.Response.finish(Response.java:305)\n\tat org.apache.catalina.connector.OutputBuffer.close\n(OutputBuffer.java:276)\n\tat org.apache.catalina.connector.Response.finishResponse\n(Response.java:486)\n\tat org.apache.catalina.connector.CoyoteAdapter.service\n(CoyoteAdapter.java:285)\n\tat org.apache.coyote.http11.Http11NioProcessor.process\n(Http11NioProcessor.java:896)\n\tat \norg.apache.coyote.http11.Http11NioProtocol$Http11ConnectionHandler.process\n(Http11NioProtocol.java:705)\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run\n(NioEndpoint.java:2049)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.runTask\n(ThreadPoolExecutor.java:885)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run\n(ThreadPoolExecutor.java:907)\n\tat java.lang.Thread.run(Thread.java:619)\n2007-08-01 17:09:56,255 [http-8080-exec-11] ERROR \norg.apache.catalina.connector.CoyoteAdapter - An exception or error occurred in \nthe container during the request processing\njava.nio.BufferOverflowException\n\tat java.nio.DirectByteBuffer.put(DirectByteBuffer.java:311)\n\tat java.nio.DirectByteBuffer.put(DirectByteBuffer.java:290)\n\tat sun.nio.ch.IOUtil.write(IOUtil.java:70)\n\tat sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:334)\n\tat org.apache.tomcat.util.net.NioChannel.write(NioChannel.java:111)\n\tat org.apache.tomcat.util.net.NioBlockingSelector.write\n(NioBlockingSelector.java:57)\n\tat org.apache.tomcat.util.net.NioSelectorPool.write\n(NioSelectorPool.java:135)\n\tat org.apache.tomcat.util.net.NioSelectorPool.write\n(NioSelectorPool.java:130)\n\tat org.apache.coyote.http11.InternalNioOutputBuffer.writeToSocket\n(InternalNioOutputBuffer.java:433)\n\tat org.apache.coyote.http11.InternalNioOutputBuffer.flushBuffer\n(InternalNioOutputBuffer.java:761)\n\tat org.apache.coyote.http11.InternalNioOutputBuffer.endRequest\n(InternalNioOutputBuffer.java:398)\n\tat org.apache.coyote.http11.Http11NioProcessor.action\n(Http11NioProcessor.java:1089)\n\tat org.apache.coyote.Response.action(Response.java:183)\n\tat org.apache.coyote.Response.finish(Response.java:305)\n\tat org.apache.catalina.connector.OutputBuffer.close\n(OutputBuffer.java:276)\n\tat org.apache.catalina.connector.Response.finishResponse\n(Response.java:486)\n\tat org.apache.catalina.connector.CoyoteAdapter.service\n(CoyoteAdapter.java:285)\n\tat org.apache.coyote.http11.Http11NioProcessor.process\n(Http11NioProcessor.java:896)\n\tat \norg.apache.coyote.http11.Http11NioProtocol$Http11ConnectionHandler.process\n(Http11NioProtocol.java:705)\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run\n(NioEndpoint.java:2049)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.runTask\n(ThreadPoolExecutor.java:885)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run\n(ThreadPoolExecutor.java:907)\n\tat java.lang.Thread.run(Thread.java:619)\n", "id": 106184, "time": "2007-08-02T11:53:34Z", "creator": "guy.molinari@dig.com", "creation_time": "2007-08-02T11:53:34Z", "attachment_id": null}, {"count": 9, "tags": [], "creator": "guy.molinari@dig.com", "text": "Update.    I wrote a simple response generator servlet and re-ran the tests.   \nNow performance on 6.0.13 is significantly *FASTER*.  However, I'm seeing a \nfair number of HTTPClient errors from Grinder as well as consistent buffer \noverflow exceptions.  This leads me to believe that the bottleneck has now \nshifted to the application code.\n\nI've attached the test servlet.   Here are the stack traces:\n\n===========================================================================\nJava exception whilst invoking test runner\n\tFile \"/apps/grinder-3.0/projects/TeaBenchmark/smallest-servlet-\n400rps.py\", line 40, in __call__\nCaused by: java.io.IOException: HTTPClient.ParseException: Didn't find valid \nchunk length: ................\n\tat HTTPClient.StreamDemultiplexor.read(StreamDemultiplexor.java:372)\n\tat HTTPClient.RespInputStream.read(RespInputStream.java:155)\n\tat HTTPClient.HTTPResponse.readResponseData(HTTPResponse.java:1011)\n\tat HTTPClient.HTTPResponse.getData(HTTPResponse.java:515)\n\tat net.grinder.plugin.http.HTTPRequest$AbstractRequest.getHTTPResponse\n(HTTPRequest.java:888)\n\tat net.grinder.plugin.http.HTTPRequest.GET(HTTPRequest.java:385)\n\tat net.grinder.plugin.http.HTTPRequest.GET(HTTPRequest.java:360)\n\tat sun.reflect.GeneratedMethodAccessor12.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke\n(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:597)\n\n================================================================\nTOMCAT LOG STACK TRACE FOLLOWS:\n================================================================\n2007-08-02 15:44:04,453 [http-8080-exec-17] ERROR \norg.apache.catalina.connector.CoyoteAdapter - An exception or error occurred in \nthe container during the request processing\njava.nio.BufferOverflowException\n\tat java.nio.DirectByteBuffer.put(DirectByteBuffer.java:311)\n\tat java.nio.DirectByteBuffer.put(DirectByteBuffer.java:290)\n\tat sun.nio.ch.IOUtil.write(IOUtil.java:70)\n\tat sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:334)\n\tat org.apache.tomcat.util.net.NioChannel.write(NioChannel.java:111)\n\tat org.apache.tomcat.util.net.NioBlockingSelector.write\n(NioBlockingSelector.java:57)\n\tat org.apache.tomcat.util.net.NioSelectorPool.write\n(NioSelectorPool.java:135)\n\tat org.apache.tomcat.util.net.NioSelectorPool.write\n(NioSelectorPool.java:130)\n\tat org.apache.coyote.http11.InternalNioOutputBuffer.writeToSocket\n(InternalNioOutputBuffer.java:433)\n\tat org.apache.coyote.http11.InternalNioOutputBuffer.flushBuffer\n(InternalNioOutputBuffer.java:761)\n\tat org.apache.coyote.http11.InternalNioOutputBuffer.endRequest\n(InternalNioOutputBuffer.java:398)\n\tat org.apache.coyote.http11.Http11NioProcessor.action\n(Http11NioProcessor.java:1089)\n\tat org.apache.coyote.Response.action(Response.java:183)\n\tat org.apache.coyote.Response.finish(Response.java:305)\n\tat org.apache.catalina.connector.OutputBuffer.close\n(OutputBuffer.java:276)\n\tat org.apache.catalina.connector.Response.finishResponse\n(Response.java:486)\n\tat org.apache.catalina.connector.CoyoteAdapter.service\n(CoyoteAdapter.java:285)\n\tat org.apache.coyote.http11.Http11NioProcessor.process\n(Http11NioProcessor.java:896)\n\tat \norg.apache.coyote.http11.Http11NioProtocol$Http11ConnectionHandler.process\n(Http11NioProtocol.java:705)\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run\n(NioEndpoint.java:2049)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.runTask\n(ThreadPoolExecutor.java:885)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run\n(ThreadPoolExecutor.java:907)\n\tat java.lang.Thread.run(Thread.java:619)\n2007-08-02 15:45:24,687 [http-8080-exec-11] ERROR \norg.apache.catalina.connector.CoyoteAdapter - An exception or error occurred in \nthe container during the request processing\njava.nio.BufferOverflowException\n\tat java.nio.DirectByteBuffer.put(DirectByteBuffer.java:311)\n\tat java.nio.DirectByteBuffer.put(DirectByteBuffer.java:290)\n\tat sun.nio.ch.IOUtil.write(IOUtil.java:70)\n\tat sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:334)\n\tat org.apache.tomcat.util.net.NioChannel.write(NioChannel.java:111)\n\tat org.apache.tomcat.util.net.NioBlockingSelector.write\n(NioBlockingSelector.java:57)\n\tat org.apache.tomcat.util.net.NioSelectorPool.write\n(NioSelectorPool.java:135)\n\tat org.apache.tomcat.util.net.NioSelectorPool.write\n(NioSelectorPool.java:130)\n\tat org.apache.coyote.http11.InternalNioOutputBuffer.writeToSocket\n(InternalNioOutputBuffer.java:433)\n\tat org.apache.coyote.http11.InternalNioOutputBuffer.flushBuffer\n(InternalNioOutputBuffer.java:761)\n\tat org.apache.coyote.http11.InternalNioOutputBuffer.endRequest\n(InternalNioOutputBuffer.java:398)\n\tat org.apache.coyote.http11.Http11NioProcessor.action\n(Http11NioProcessor.java:1089)\n\tat org.apache.coyote.Response.action(Response.java:183)\n\tat org.apache.coyote.Response.finish(Response.java:305)\n\tat org.apache.catalina.connector.OutputBuffer.close\n(OutputBuffer.java:276)\n\tat org.apache.catalina.connector.Response.finishResponse\n(Response.java:486)\n\tat org.apache.catalina.connector.CoyoteAdapter.service\n(CoyoteAdapter.java:285)\n\tat org.apache.coyote.http11.Http11NioProcessor.process\n(Http11NioProcessor.java:896)\n\tat \norg.apache.coyote.http11.Http11NioProtocol$Http11ConnectionHandler.process\n(Http11NioProtocol.java:705)\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run\n(NioEndpoint.java:2049)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.runTask\n(ThreadPoolExecutor.java:885)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run\n(ThreadPoolExecutor.java:907)\n\tat java.lang.Thread.run(Thread.java:619)\n2007-08-02 15:49:42,468 [http-8080-exec-8] ERROR \norg.apache.catalina.connector.CoyoteAdapter - An exception or error occurred in \nthe container during the request processing\njava.nio.BufferOverflowException\n\tat java.nio.DirectByteBuffer.put(DirectByteBuffer.java:311)\n\tat java.nio.DirectByteBuffer.put(DirectByteBuffer.java:290)\n\tat sun.nio.ch.IOUtil.write(IOUtil.java:70)\n\tat sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:334)\n\tat org.apache.tomcat.util.net.NioChannel.write(NioChannel.java:111)\n\tat org.apache.tomcat.util.net.NioBlockingSelector.write\n(NioBlockingSelector.java:57)\n\tat org.apache.tomcat.util.net.NioSelectorPool.write\n(NioSelectorPool.java:135)\n\tat org.apache.tomcat.util.net.NioSelectorPool.write\n(NioSelectorPool.java:130)\n\tat org.apache.coyote.http11.InternalNioOutputBuffer.writeToSocket\n(InternalNioOutputBuffer.java:433)\n\tat org.apache.coyote.http11.InternalNioOutputBuffer.flushBuffer\n(InternalNioOutputBuffer.java:761)\n\tat org.apache.coyote.http11.InternalNioOutputBuffer.endRequest\n(InternalNioOutputBuffer.java:398)\n\tat org.apache.coyote.http11.Http11NioProcessor.action\n(Http11NioProcessor.java:1089)\n\tat org.apache.coyote.Response.action(Response.java:183)\n\tat org.apache.coyote.Response.finish(Response.java:305)\n\tat org.apache.catalina.connector.OutputBuffer.close\n(OutputBuffer.java:276)\n\tat org.apache.catalina.connector.Response.finishResponse\n(Response.java:486)\n\tat org.apache.catalina.connector.CoyoteAdapter.service\n(CoyoteAdapter.java:285)\n\tat org.apache.coyote.http11.Http11NioProcessor.process\n(Http11NioProcessor.java:896)\n\tat \norg.apache.coyote.http11.Http11NioProtocol$Http11ConnectionHandler.process\n(Http11NioProtocol.java:705)\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run\n(NioEndpoint.java:2049)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.runTask\n(ThreadPoolExecutor.java:885)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run\n(ThreadPoolExecutor.java:907)\n\tat java.lang.Thread.run(Thread.java:619)", "id": 106227, "time": "2007-08-02T16:48:10Z", "bug_id": 43002, "creation_time": "2007-08-02T16:48:10Z", "is_private": false, "attachment_id": null}, {"count": 10, "tags": [], "bug_id": 43002, "text": "Can you please try with 6.0.14, numerous bug fixes since .13\nhttp://people.apache.org/~remm/tomcat-6/v6.0.14/\n\nalso, don't use direct buffers, there is a good chance the system is faster\nwithout .\n\nearly next week I will examine your test cases\nFilip", "id": 106272, "time": "2007-08-03T07:40:42Z", "creator": "fhanik@apache.org", "creation_time": "2007-08-03T07:40:42Z", "is_private": false, "attachment_id": null}, {"count": 11, "tags": [], "bug_id": 43002, "is_private": false, "text": "Created attachment 20589\nResponse generator servlet", "id": 106303, "time": "2007-08-03T09:19:06Z", "creator": "guy.molinari@dig.com", "creation_time": "2007-08-03T09:19:06Z", "attachment_id": 20589}, {"count": 12, "tags": [], "bug_id": 43002, "is_private": false, "text": "the BufferOverflowExceptions are happening in the underlying JDK code, and not\nin the Tomcat code base. \nI suggest you try to upgrade to the 02 update of JDK 1.6\n\n", "id": 106310, "time": "2007-08-03T14:31:37Z", "creator": "fhanik@apache.org", "creation_time": "2007-08-03T14:31:37Z", "attachment_id": null}, {"count": 13, "tags": [], "bug_id": 43002, "is_private": false, "text": "Hi Filip,\n     I upgraded to JDK 1.6.0_02 and reran the tests with virtually the same \nresults.   Rats!!!!!!!\n\nLet me know if there is anything else I can do.\n\nGuy\n\n", "id": 106315, "time": "2007-08-03T18:08:01Z", "creator": "guy.molinari@dig.com", "creation_time": "2007-08-03T18:08:01Z", "attachment_id": null}, {"count": 14, "attachment_id": null, "bug_id": 43002, "is_private": false, "id": 106414, "time": "2007-08-06T16:56:33Z", "creator": "fhanik@apache.org", "creation_time": "2007-08-06T16:56:33Z", "tags": [], "text": "I'm unable to reproduce the problem, and have to jump to the conclusion that the\nproblem lies within Windows 2000 and JDK 1.6\n\nPlease reopen if you are able to reproduce it on another platform/jdk combo\n\nFilip"}, {"count": 15, "tags": [], "bug_id": 43002, "is_private": false, "text": "Some new information on this issue, so I reopened it.  \n\nThe problem seems to relate to parsing the body content when the **Transfer-\nEncoding: chunked** header is present.  It appears that the chunk length gets\ncorrupted under load and the client is unable to parse the chunk out of the \nresponse body.\n\nWhen the NIO connector parameter **socket.appWriteBufSize** is set to a value \nlarger than the total response body, the error condition does not occur.\n\nOne might succesfully argue that this is proper performance tuning.  The Tomcat \ndocuments point out that to scale a large number of long held connections, the \nbuffer sizes may need to be less than the response body (the memory footprint \nwould be quite large otherwise).\n\nCould there be a race condition involving the response buffering code?  \n\nI have confirmed this behavior on both JDKs 1.5 and 1.6 on both Windows 2003 \nand Linux.\n\n\n", "id": 110381, "time": "2007-11-09T15:21:06Z", "creator": "guy.molinari@dig.com", "creation_time": "2007-11-09T15:21:06Z", "attachment_id": null}, {"count": 16, "tags": [], "bug_id": 43002, "is_private": false, "text": "hi there,\nAre you talking about the same bug?\nWe went from JDK buffer overflow problems, to corrupt chunk lengths\nIf this is a different issue than the original one, it is easier for us to track\nas a new bug. \n\nIf possible, open the new case with a test case.", "id": 110400, "time": "2007-11-11T15:07:41Z", "creator": "fhanik@apache.org", "creation_time": "2007-11-11T15:07:41Z", "attachment_id": null}]