[{"count": 0, "tags": [], "bug_id": 61832, "attachment_id": 35565, "id": 202471, "time": "2017-11-29T09:57:58Z", "creator": "thamodharan247@gmail.com", "creation_time": "2017-11-29T09:57:58Z", "is_private": false, "text": "Created attachment 35565\n\"GenerateExcelFile.txt\" contains the java code.\n\nI am trying to generate a excel with SXSSF workbook. The size of excel may shoot to 200-300MB, whose row count will be 500,000 (i.e 0.5 million) and column count will be around 150 approximately..! I get content issue while opening such large excel file. \nThe version which I am using is APACHE POI 3.9\nI had also tried with, 3.15 the same issue exist. \n \nSystem holds enough ram and disk space as per the requirement. \n \n3.9 performance seems to better than other versions, Is there any way to rule this issue out in that version.? \n \nAnyone, who has idea on above scenario, kindly help me to proceed further.\n\nFYI, I hadn't applied any styles or format for the cells, just inserted a data of 25 character length. I hadn't violated/crossed any excel specification/limits.\n\nPlease find the sample code as below.\n\nThe alert message which I receive on opening the excel file is,\n\n\"We found a problem with some content in 'filename'. Do you want us to try to recover as much as we can? If you trust the source of this workbook\""}, {"count": 1, "tags": [], "bug_id": 61832, "attachment_id": 35566, "id": 202472, "time": "2017-11-29T10:33:06Z", "creator": "thamodharan247@gmail.com", "creation_time": "2017-11-29T10:33:06Z", "is_private": false, "text": "Created attachment 35566\nExcel 2013 - Alert Message - While opening such large file"}, {"count": 2, "tags": [], "bug_id": 61832, "attachment_id": null, "id": 202488, "time": "2017-11-30T12:37:34Z", "creator": "yegor@dinom.ru", "creation_time": "2017-11-30T12:37:34Z", "is_private": false, "text": "(In reply to Thamodharan from comment #1)\n> Created attachment 35566 [details]\n> Excel 2013 - Alert Message - While opening such large file\n\nIs it a 32 or 64-bit Excel ? I wonder if it matters.\n\nWhat happens if you click Yes and agree to recover as much as possible ? \n\nAlso, try to disable automatic re-calculation of formulas in Options / Formulas / Calculation Options. By default, Excel recalculates all the formulas in a worksheet on open. You'd better turn it off for such large files."}, {"count": 3, "tags": [], "bug_id": 61832, "attachment_id": null, "is_private": false, "id": 202493, "time": "2017-11-30T14:19:53Z", "creator": "thamodharan247@gmail.com", "creation_time": "2017-11-30T14:19:53Z", "text": "(In reply to Yegor Kozlov from comment #2)\n> (In reply to Thamodharan from comment #1)\n> > Created attachment 35566 [details]\n> > Excel 2013 - Alert Message - While opening such large file\n> \n> Is it a 32 or 64-bit Excel ? I wonder if it matters.\n> \n> What happens if you click Yes and agree to recover as much as possible ? \n> \n> Also, try to disable automatic re-calculation of formulas in Options /\n> Formulas / Calculation Options. By default, Excel recalculates all the\n> formulas in a worksheet on open. You'd better turn it off for such large\n> files.\n\nHi Yegor Kozlov,\n\nFYI,\nThe above attached code works good, if the number of rows has been reduced to 0.3 million rows (i.e 300,000) and 150 column. I can open the file without any issue or error. But the same doesn't happen for 0.4 or 0.5 million rows.\n\n\nResponse to your questions.,\n\n 1)  Its 32-bit Excel 2013.\n\n 2)  When I click Yes to recover, excel stops responding few minutes and later i am able to retrieve all data without any loss, but I get repair error report in an alert box. Please find new attachments related to it.\n\n     - Once, I save the repaired file, I didn't get the content issue pop up when I open it again or later.\n\n 3)  We just tried to insert string, no numeric or formulas are applied to the workbook. Though, I tried your suggestion.\n\n     - Before generating the workbook, I turned off the formula in local excel file and saved it, checked once again by opening, it remains turned off. But once the code is executed successfully, the formula is again enabled automatically. Same Content issue persist for large files.\n\nKindly help if there is any further solution."}, {"count": 4, "tags": [], "bug_id": 61832, "attachment_id": 35571, "is_private": false, "id": 202494, "time": "2017-11-30T14:23:20Z", "creator": "thamodharan247@gmail.com", "creation_time": "2017-11-30T14:23:20Z", "text": "Created attachment 35571\nExcelErrorAfterRepair"}, {"count": 5, "tags": [], "creator": "yegor@dinom.ru", "attachment_id": null, "text": "Can you please do one more test: generate a 500K rows x 150 columns spreadsheet containing only numbers and see if it opens? Due to its streaming nature SXSSF stores strings differently than Excel does: Excel puts strings in a shared cache while SXXSF stores strings inline. Number cells should be fully compatible . Lets see.", "id": 202495, "time": "2017-11-30T14:59:12Z", "bug_id": 61832, "creation_time": "2017-11-30T14:59:12Z", "is_private": false}, {"count": 6, "tags": [], "bug_id": 61832, "attachment_id": null, "is_private": false, "id": 202496, "time": "2017-11-30T16:26:42Z", "creator": "thamodharan247@gmail.com", "creation_time": "2017-11-30T16:26:42Z", "text": "(In reply to Yegor Kozlov from comment #5)\n> Can you please do one more test: generate a 500K rows x 150 columns\n> spreadsheet containing only numbers and see if it opens? Due to its\n> streaming nature SXSSF stores strings differently than Excel does: Excel\n> puts strings in a shared cache while SXXSF stores strings inline. Number\n> cells should be fully compatible . Lets see.\n\nHi Yegor Kozlov,\n\nI had tried as you suggested, it worked fine for 500K X 150 column while inserting numbers.The maximum int limit which we can give is 2147483647.\ncell.setCellValue(2147483647);\nThus it worked fine.\n\nSo, I extended the testing by increasing the row count and column count,\ni.e., 900K X 250 Column. Same cellValue 2147483647.\nThe workbook is done successful. File size reached to 504 MB.\n\nBut,The same content issue occurs while opening.\n\nStill as a mystery."}, {"count": 7, "tags": [], "creator": "gwoolsey@apache.org", "attachment_id": null, "text": "I ran the attached code, and examined the generated workbook.  All XML validates successfully with xmllint.  The worksheet file, however, expands to > 5GB due to all the inlineStr attributes for all the cells.\n\nMy suspicion is that Excel doesn't like that many inline cell string values.  I verified that the change between the original and \"repaired\" versions was exactly turning those inlineStr attributes into a single shared string value referenced by all the cells.", "id": 202569, "time": "2017-12-04T20:52:59Z", "bug_id": 61832, "creation_time": "2017-12-04T20:52:59Z", "is_private": false}, {"count": 8, "tags": [], "bug_id": 61832, "attachment_id": null, "id": 202594, "time": "2017-12-06T10:30:01Z", "creator": "thamodharan247@gmail.com", "creation_time": "2017-12-06T10:30:01Z", "is_private": false, "text": "Hi Greg Woolsey,\n\nSXSSF by default takes inline string, it can be changed to shared string for which some patch is available. Since Shared string takes the heap space memory, its difficult to opt for it, due to resource constraint. Is there any luck, to get it done with SXSSF inline itself ?\n\nRegards\nThamodharan B"}, {"count": 9, "tags": [], "creator": "yegor@dinom.ru", "attachment_id": null, "text": "In theory SXSSF can use a fixed-size cache of shared strings, e.g. we can allow SXSSF to put 10K distinct strings in the SST. If the cache is full then the string goes inline. The 10K limit can be configurable.\nThis way SXSSF-generated workbooks with small number of distinct values will be fully compatible with XSSF.", "id": 202602, "time": "2017-12-06T12:46:29Z", "bug_id": 61832, "creation_time": "2017-12-06T12:46:29Z", "is_private": false}, {"count": 10, "tags": [], "text": "Hi Yegor Kozlov,\n\nHope, you mean to set this limit 10K as mentioned below.\n\nSXSSFWorkbook wb = new SXSSFWorkbook(10000);\n\nThough I set this, I face content issue while opening it.\nI tried extending it to 30K, the same persist.\n\nIf so my try is wrong from what you suggest. Kindly correct it.\n\nI have limited heap space, but have enough disk space. Though I plan to extend the memory, and store in SST, I cant run parallel workbook. I can do only one, though i increase twice or thrice as of now. \n\nMy system RAM is 8GB, I had allotted 1 GB max to jboss.\n\nKindly suggest your view on it.\n\nRegards\nThamodharan B", "is_private": false, "id": 202619, "creator": "thamodharan247@gmail.com", "time": "2017-12-07T11:31:27Z", "bug_id": 61832, "creation_time": "2017-12-07T11:31:27Z", "attachment_id": null}, {"count": 11, "tags": [], "text": "try to construct SXSSFWorkbook in a different way:\n\n  wb = new SXSSFWorkbook(\n    null, /* template workbook. pass null to start with a blank workbook */\n    1000, /* size of the sliding window*/\n    true, /* whether to compress temp files.*/\n    true  /* whether to use shared string table*/\n  );\n\n\n\nnot that it may increase the memory footprint, especially if the number of distinct strings is large .", "is_private": false, "id": 202634, "creator": "yegor@dinom.ru", "time": "2017-12-08T13:57:56Z", "bug_id": 61832, "creation_time": "2017-12-08T13:57:56Z", "attachment_id": null}, {"count": 12, "tags": [], "bug_id": 61832, "attachment_id": null, "is_private": false, "id": 202726, "time": "2017-12-12T10:21:54Z", "creator": "thamodharan247@gmail.com", "creation_time": "2017-12-12T10:21:54Z", "text": "(In reply to Yegor Kozlov from comment #11)\n> try to construct SXSSFWorkbook in a different way:\n> \n>   wb = new SXSSFWorkbook(\n>     null, /* template workbook. pass null to start with a blank workbook */\n>     1000, /* size of the sliding window*/\n>     true, /* whether to compress temp files.*/\n>     true  /* whether to use shared string table*/\n>   );\n> \n> \n> \n> not that it may increase the memory footprint, especially if the number of\n> distinct strings is large .\n\n\nHi Yegor Kozlov,\n\nAs you stated, it worked fine, if a same string is written in all the cells (500 Row X 150 Column). Even it is good if same string written in (750 rows X 150 Column).\n\nThus by digging more about it,I came to know how shared string table concept works.\n\nBut for more number of distinct string that need to be inserted, i face java heap space out of memory error, since shared string takes all distinct in into heap memory.\n\nHelp me to improve it further."}, {"count": 13, "tags": [], "text": "At some point, you just have to allocate more heap, no way around it. Sounds like you might be there, needing to allow for a very large shared strings table.  Some tasks just take a large amount of RAM, which is cheap these days, including the ability to \"rent\" time and space on any number of cloud provider platforms to achieve tasks that don't warrant purchasing your own additional hardware.\n\nOnly other thing I can think of would be to write a patch for POI yourself that adds an option for streaming and shared strings to store the hash table on disk somehow.  That would save RAM but be incredibly slow.  Better off just giving the VM 64GB of RAM or something.", "is_private": false, "id": 202742, "creator": "gwoolsey@apache.org", "time": "2017-12-12T16:37:51Z", "bug_id": 61832, "creation_time": "2017-12-12T16:37:51Z", "attachment_id": null}, {"count": 14, "tags": [], "text": "Though I adopt 64GB system RAM and 30GB to JBOSS heap space, I cant even produce two parallel workbook of such large size at a time.\n\nIn case of adopting to write a patch, speed is concerned as you said.\n\nIs there any possibility to overcome this issue in forthcoming version?\n\nAnyhow, I will give a try to write patch, can you please guide or provide any reference to write a patch to store SST on disk as you suggested.", "is_private": false, "id": 202830, "creator": "thamodharan247@gmail.com", "time": "2017-12-18T15:18:10Z", "bug_id": 61832, "creation_time": "2017-12-18T15:18:10Z", "attachment_id": null}, {"count": 15, "tags": [], "bug_id": 61832, "attachment_id": null, "is_private": false, "id": 202832, "time": "2017-12-18T20:07:56Z", "creator": "mewalig@gmail.com", "creation_time": "2017-12-18T20:07:56Z", "text": "I do not agree with this at all: \"Some tasks just take a large amount of RAM, which is cheap these days, including the ability to \"rent\" time and space on any number of cloud provider platforms [...]\".\n\nThis is the kind of reasoning that leads to bloatware and all around bad products and bad libraries. Here is an approach that might work for improving performance well within the OP requirements. I'd be interested to hear any reasons this would not work.\n\n1. shared string table uses a lookup that only tracks hash and index\n2. worksheets and shared string table are output as streams to temporary files (optionally compressed prior to write, which often saves time given speed of CPU and sluggishness of write operations)\n3. after all pieces from #2 are created, the final xlsx is assembled\n\nAssuming a 256-bit hash, 1 mm rows, and 150 columns, and 100% non-distinct string values (obviously unlikely) step 1 will take a maximum of (256+32)/8*150*1mm = 5.4GB of memory. This could be further streamlined by not hashing string values of under 32 bytes and/or using a 128-bit hash, and could be further supplemented by supporting hash collisions. Of course there are libraries that will take care of this so it shouldn't be much work to incorporate. Something that is performance-oriented like sqlite3 comes to mind as a possibility.\n\nStep 2 will take minimal fixed memory because it is streaming the data to disk.\n\nStep 3 can release all memory before starting, and then stream all the pieces, in serial, into the final output (and implicitly through a zip streamer), which can be either streamed to the calling process or to disk and thereby take up minimal fixed memory."}, {"count": 16, "tags": [], "bug_id": 61832, "attachment_id": null, "id": 202834, "time": "2017-12-18T23:45:46Z", "creator": "fanningpj@yahoo.com", "creation_time": "2017-12-18T23:45:46Z", "is_private": false, "text": "I have the initial work done on a prototype version of SharedStringTable that can be used in SXSSF to reduce the memory footprint.\nThe Pull Request is for discussion as opposed to suggesting this work is anywhere close to being merged yet.\nhttps://github.com/apache/poi/pull/85 \n\nThe general idea is to put the shared string data in an H2 MVTable backed by a temp file. This is not done yet."}, {"count": 17, "tags": [], "bug_id": 61832, "attachment_id": null, "is_private": false, "id": 202931, "time": "2017-12-27T13:27:35Z", "creator": "thamodharan247@gmail.com", "creation_time": "2017-12-27T13:27:35Z", "text": "Hi mewalig,\n\nDoes 1mm what you mentioned refer to 0.1 million or 1 million rows ?\n\nCan you please explain this calculation [(256+32)/8*150*1mm = 5.4GB of memory] in detail, so that it would be easy for me to calculate as per my requirement."}, {"count": 18, "tags": [], "creator": "thamodharan247@gmail.com", "attachment_id": null, "text": "Hi mewalig,\n\nKindly help us by explaining the calculation which you stated on your last reply.", "id": 203219, "time": "2018-01-11T13:00:32Z", "bug_id": 61832, "creation_time": "2018-01-11T13:00:32Z", "is_private": false}, {"count": 19, "tags": [], "bug_id": 61832, "attachment_id": null, "is_private": false, "id": 203220, "time": "2018-01-11T13:17:11Z", "creator": "thamodharan247@gmail.com", "creation_time": "2018-01-11T13:17:11Z", "text": "My machine specs,\n\nJboss server\nRAM 32 GB\nHeap size allocated to jboss 28 GB\nHarddisk 1 TB\n\nI am good to go with generating excel file upto a limit of 0.3 million X 200 rows with enabling shared string. Ahead such row, i face corrupt file issue when opening the generated excel. The reason for this error as stated by greg woolsey is, the data's are stored as inline string in the disk, thus excel couldn't tolerate putting such large number of inline string, thus repairing it, turning inline to single shared string.\n\nAs suggested by greg woolsey, its better to go by enabling shared string, which holds unique data in heap space instead of disk space. This idea may aid the application to generate a single excel file in my machine with the above spec, but generating 2 or more excel at same time, will lead to memory out.\n\nI guess, writing a patch to store data in disk, rather in heap, will again lead to inline string and same error may occur.\n\nCan anyone from apache dev team or other followers, ignite a vice idea to rule this error out ?\n\nWaiting a good response\n\nThamodharan B"}, {"count": 20, "tags": [], "text": "There is a Pull Request which uses temp files for constructing the shared strings table.\nhttps://github.com/apache/poi/pull/85", "is_private": false, "id": 203221, "creator": "fanningpj@yahoo.com", "time": "2018-01-11T14:41:02Z", "bug_id": 61832, "creation_time": "2018-01-11T14:41:02Z", "attachment_id": null}, {"count": 21, "tags": [], "creator": "thamodharan247@gmail.com", "attachment_id": null, "text": "Hi Fanning,\n\nI went through the pull request in github, really great. Is there a chance to expect complete code in upcoming version of apache poi ?", "id": 203299, "time": "2018-01-16T15:28:05Z", "bug_id": 61832, "creation_time": "2018-01-16T15:28:05Z", "is_private": false}]