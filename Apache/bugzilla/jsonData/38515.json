[{"count": 0, "tags": [], "bug_id": 38515, "text": "LDAP group records may have attributes \"memberURL\", which are LDAP URL's that\ndescribe a search returning users in a group.  It would be helpful if Apache\ncould recognize these results and follow the links to obtain if a user is a\nmember in a dynamic group.", "id": 85428, "attachment_id": null, "creator": "gregory.szorc@case.edu", "creation_time": "2006-02-05T04:38:43Z", "time": "2006-02-05T04:38:43Z", "is_private": false}, {"count": 1, "attachment_id": null, "bug_id": 38515, "text": "I intend to provide a patch that accomplishes the necessary functionality.  It\ncan then be fine-tuned by someone more adept with Apache module programming than I.", "id": 85429, "time": "2006-02-05T04:40:48Z", "creator": "gregory.szorc@case.edu", "creation_time": "2006-02-05T04:40:48Z", "tags": [], "is_private": false}, {"count": 2, "tags": [], "bug_id": 38515, "text": "Created attachment 17599\nInitial patch without caching support against 2.2.x branch\n\nA first version of a patch against 2.2.x branch.  It has no cache support for\ndynamic group lookup.  It also defaults to using the \"uid\" username attribute\nfor group membership.", "id": 85450, "time": "2006-02-06T03:55:31Z", "creator": "gregory.szorc@case.edu", "creation_time": "2006-02-06T03:55:31Z", "is_private": false, "attachment_id": 17599}, {"count": 3, "tags": [], "bug_id": 38515, "is_private": false, "text": "The direction that the patch is taking seems reasonable but there appears to \nbe some problems.  First, just adding a call to \nutil_ldap_cache_comparedynamicgroup() in the ldap-group tag probably won't \nwork.  ldap-group can take a number of groups and the patch doesn't seem to be \nable to handle a set of mixed static and dynamic groups.  You may need to have \nsome way of detecting wheither a particular group is static or dynamic and \nthen handle it from there.  Also since util_ldap is suppose to be a set of \ngeneric cross platform LDAP APIs, the function \nutil_ldap_cache_comparedynamicgroup() seems a little specialized considering \nthe scope of the other util_ldap APIs.\n\nObviously you will also have to fix the code in \nutil_ldap_cache_comparedynamicgroup()to respect the search attribute and scope \nrather than hardcoding \"uid\" and \"LDAP_SCOPE_SUBTREE\".  You will also need to \nimplement the caching somehow as well but that should be fairly similar to the \nway that user/group caching already works.  In fact you could probably just \nuse the same cache but with a different attribute as the the key rather \nthan \"member\" or \"uniqueMember\".", "id": 88220, "time": "2006-04-18T18:53:56Z", "creator": "bnicholes@apache.org", "creation_time": "2006-04-18T18:53:56Z", "attachment_id": null}, {"count": 4, "tags": [], "creator": "gregory.szorc@case.edu", "attachment_id": 19734, "is_private": false, "id": 100557, "time": "2007-03-18T19:54:25Z", "bug_id": 38515, "creation_time": "2007-03-18T19:54:25Z", "text": "Created attachment 19734\nContinuation of previous patch\n\nThe attachment is a patch I had against the 2.2.x branch.  I'm not sure if it\nworks, but it was hanging around my home directory and figured I should put it\nup here."}, {"count": 5, "tags": [], "text": "I'd really like to get something incorporated into the tree.  However, I could\nuse some help formulating a proper solution.\n\nI just sat down to create a new patch against the trunk.  Here are my initial\nthoughts for the direction of the patch.\n\n* Need 2 new config directives\n 1) AuthLDAPEnableDynamicGroupLookups (defaults to off) - Determines whether\ndynamic group lookup is enabled\n 2) AuthLDAPDynamicGroupAttribute (defaults to \"MemberURL\") - Determines which\nattributes can contain dynamic group LDAP URIs\n\n* Dynamic group lookup is added to ldapgroup_check_authorization in\nmod_authnz_ldap.c.  If enabled, we check dynamic group membership after regular\n(static) group membership\n\nHere is where it gets interesting.  Checking for dynamic group membership\ninvolves the following steps:\n\n1) Look for attributes in a group record that correspond to dynamic group LDAP URI's\n2) Parse each result and perform a LDAP search to see if the current user DN is\nreturned.\n\nNow, I would love to incorporate this feature into uldap_cache_compare in\nutil_ldap.c, but I'm not sure if it will fit.  I will have to add at least one\nargument to this function whose value dictates whether to invoke the special\ndereference-attribute-value-as-LDAP-URI-and-search functionality. \nRealistically, I will have to add more arguments that control how the search is\nperformed (see the existing patch for what I mean).  Is it acceptable to add all\nof these extra arguments, or should I just create a new function that handles\ndynamic group lookups explicitly (as is the behavior in the current patches)?\n\nAny comments from the peanut gallery?", "is_private": false, "bug_id": 38515, "id": 100559, "time": "2007-03-18T20:10:34Z", "creator": "gregory.szorc@case.edu", "creation_time": "2007-03-18T20:10:34Z", "attachment_id": null}, {"count": 6, "tags": [], "text": "Created attachment 24730\nupdated dynamic group patch\n\nI've attached an updated patch based on Gregory's work above, against tip of 2.2.x.\n\nStill to do:\n\na) caching the attribute values of the dynamic group (uldap_cache_getattrvals)\nb) restoring the config option to specify the \"memberURL\" attribute name (or names)\n   to use, and iterate through the names if >1\nc) port to httpd trunk\n\nIn the new year I'll work through these and submit a patch to dev@httpd for review.", "is_private": false, "bug_id": 38515, "id": 132922, "time": "2009-12-18T02:43:19Z", "creator": "jorton@redhat.com", "creation_time": "2009-12-18T02:43:19Z", "attachment_id": 24730}, {"count": 7, "tags": [], "creator": "jorton@redhat.com", "attachment_id": null, "text": "[hit submit too soon]\n\nAny comment, feedback from testing, or review of the patch is very welcome.", "id": 132923, "time": "2009-12-18T02:45:01Z", "bug_id": 38515, "creation_time": "2009-12-18T02:45:01Z", "is_private": false}, {"count": 8, "tags": [], "bug_id": 38515, "text": "There is an existing implementation of dynamic group support for the (httpd 1.3 only) mod_auth_ldap which I've been comparing against:\n\nhttps://its-services.case.edu/middleware/docs/mod_auth_ldap/\n\nOne key difference is in the handling of the group-membership test.\n\nGiven a dynamic group definition:\n\nmemberURL: ldap:///ou=Engineering,dc=example,dc=com?one?(l=Cambridge)\n\n(\"engineering people in Cambridge)\n\nand a user DN which we are testing for membership of the group, of say:\n\ncn=Joe Orton,ou=Engineering,dc=example,dc=com\n\nthe case.edu mod_auth_ldap will (AFAICT) perform a membership test by searching for:\n\nbasedn => cn=Joe Orton,ou=Engineering,dc=example,dc=com\nscope  => sub\nfilter => (l=Cambridge)\n\ni.e. to compose the group-membership test by simply replacing the group's DN with the userDN.  I can see that this would work for some cases (and probably the above) but it doesn't seem to be correct in the general case.  e.g. a memberURL of:\n\nmemberURL: ldap:///ou=Sales,dc=example,dc=com?one?(l=Cambridge)\n\nwould degenerate to the same search as above, yet is not necessarily a correct test for group membership.\n\nThe way it works in Gregory's patch seems correct: compose the filter with the normal test for user existence, so giving a search in the latter case of:\n\nbasedn => ou=Sales,dc=example,dc=com\nscope  => one\nfilter => (&((l=Cambridge)(uid=jorton)))\n\nbut I'm not an LDAP expert so comment from someone who is would be great.", "id": 132925, "time": "2009-12-18T04:36:11Z", "creator": "jorton@redhat.com", "creation_time": "2009-12-18T04:36:11Z", "is_private": false, "attachment_id": null}, {"count": 9, "tags": [], "bug_id": 38515, "text": "+1 on the latter base and filter from this LDAP pretender", "id": 132928, "time": "2009-12-18T06:20:49Z", "creator": "covener@gmail.com", "creation_time": "2009-12-18T06:20:49Z", "is_private": false, "attachment_id": null}, {"count": 10, "tags": [], "creator": "gregory.szorc@case.edu", "attachment_id": null, "is_private": false, "id": 132951, "time": "2009-12-19T11:58:32Z", "bug_id": 38515, "creation_time": "2009-12-19T11:58:32Z", "text": "The similarity of this patch to Case Western Reserve University's mod_auth_ldap module referenced in comment #8 is no coincidence: I was working in that department at the time and this patch stemmed from our desire to port the feature to Apache 2.x.\n\nWhile I would like to continue giving support for this feature request, I'm afraid that legal reasons stemming from my current employer preclude me from giving any assistance at this time.  I feel bad abandoning this feature, but I'm afraid I have little choice.\n\nI look forward to seeing this functionality integrated into the tree."}, {"count": 11, "attachment_id": null, "bug_id": 38515, "text": "There's one bug in the \"updated dynamic group patch\" which can be fixed by following diff:\n\n@@ -355,7 +355,7 @@ TODO:\n +    for (n = 0; n < count; n++) {\n +        (*values)[n] = apr_pstrdup(r->pool, vals[n]);\n +    }\n-+    values[n] = NULL;\n++    (*values)[n] = NULL;\n +\n +    ldap_value_free(vals);\n +    ldap_memfree(res);", "id": 172412, "time": "2014-01-16T08:52:21Z", "creator": "jkaluza@redhat.com", "creation_time": "2014-01-16T08:52:21Z", "tags": [], "is_private": false}]