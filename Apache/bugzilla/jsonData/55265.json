[{"attachment_id": 30593, "tags": [], "creator": "marc.wagner@nexeco.ch", "is_private": false, "count": 0, "id": 168597, "time": "2013-07-15T06:57:04Z", "bug_id": 55265, "creation_time": "2013-07-15T06:57:04Z", "text": "Created attachment 30593\nExcel cell format including examples\n\nTo set a cell to a numeric format showing a single quote every 3 digits (as usual in Europe), the cell format should be set to #'##0:\n\ncellStyle.setDataFormat(format.getFormat(\"#'##0\"));\n\nBut opening the Excel shows the format like this: #\\'##0\n\nThis results in displaying a single quote even if there's only a value of zero. Please remove the escaping backslash. Or is there another option to set this format correctly?"}, {"count": 1, "tags": [], "bug_id": 55265, "text": "If you set that format in Excel, then read the format back in POI, what does POI think was actually written to the file?", "id": 168601, "time": "2013-07-15T08:23:45Z", "creator": "apache@gagravarr.org", "creation_time": "2013-07-15T08:23:45Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 55265, "text": "System.out.println(\"CELL col=\" + cell.getColumnIndex() + \" VALUE=\" + value);\nSystem.out.println(\"CELL col=\" + cell.getColumnIndex() + \" FORMAT=\" + cell.getCellStyle().getDataFormat());\n\ngives\n\nCELL col=0 VALUE=NUMERIC value=1.0\nCELL col=0 FORMAT=3", "id": 168602, "time": "2013-07-15T09:26:22Z", "creator": "marc.wagner@nexeco.ch", "creation_time": "2013-07-15T09:26:22Z", "is_private": false, "attachment_id": null}, {"count": 3, "text": "Two more things to check:\n* If you set the format code with id 3, does it show right?\n* If you open your excel-generated file in a copy of excel in a US locale, do you still see the same formatting, or does it magically change to a US style one?", "bug_id": 55265, "is_private": false, "id": 168636, "time": "2013-07-17T10:49:58Z", "creator": "apache@gagravarr.org", "creation_time": "2013-07-17T10:49:58Z", "tags": [], "attachment_id": null}, {"count": 4, "tags": [], "creator": "marc.wagner@nexeco.ch", "attachment_id": null, "text": "* If I set the cell format to 3, everything is OK. Numbers are shown as 0 or 1'000 or 1'000'000. Currently I implemented this:\n\ncell.setDataFormat((short) 3);\n\nAnd this works as it should.\n\n* I use a native US English Windows environment (OS Windows 8 and Office 2013). Changing the Windows format (in Control Panel > Region) from \"German (Switzerland)\" to \"United States\" gives following results: \n\n- using cell.setDataFormat((short) 3): the Excel sheet format \"magically\" changes from 1'000 to 1,000 (US locale). All numbers are correct (0, 1'000, 1'000'000).\n- using cellStyle.setDataFormat(format.getFormat(\"#'##0\")): nothing changes. The numbers are always in a wrong format like '0, 1'000 or 1000'000", "id": 168639, "time": "2013-07-17T11:20:47Z", "bug_id": 55265, "creation_time": "2013-07-17T11:20:47Z", "is_private": false}, {"count": 5, "tags": [], "creator": "apache@bev.su", "attachment_id": null, "is_private": false, "id": 168799, "time": "2013-07-26T08:05:34Z", "bug_id": 55265, "creation_time": "2013-07-26T08:05:34Z", "text": "related bug https://issues.apache.org/bugzilla/show_bug.cgi?id=52592\nError in the current and previous version of DataFormatter.java\nin private String cleanFormatForNumber(String formatStr)\nsee http://docs.oracle.com/javase/1.4.2/docs/api/java/text/MessageFormat.html\nsingle quotes need to be doubled"}, {"count": 6, "tags": [], "creator": "apache@gagravarr.org", "attachment_id": null, "is_private": false, "id": 186249, "time": "2015-11-04T18:24:08Z", "bug_id": 55265, "creation_time": "2015-11-04T18:24:08Z", "text": "Turned out to not be an escaping issue after all, but instead a need to use a custom Decimal Format Symbols for this case. Fixed in r1712605."}]