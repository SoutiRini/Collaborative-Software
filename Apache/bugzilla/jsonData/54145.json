[{"count": 0, "tags": [], "text": "dav_method_put() in the mod_dav module has several issues with error handling.\n\n1) The error reported when receiving an error from ap_get_brigade() is \"Could not get next brigade\" which is utterly useless for an end user in understanding what happened.  Further on down the error message generated for an error from apr_bucket_read() is \"An error occurred while reading the request body\".  \n\nThe call to ap_get_brigade() is where the actual read of the request body happens.  So if there is any error actually reading the data from the socket (e.g. socket closes prematurely) then the \"Could not get next brigade\" error will be logged.  The apr_bucket_read() is actually reading from bucket which was created from the ap_get_brigade() call and is very unlikely to fail since it's essentially just reading data in memory.\n\n2) It does consumes and does not log the error messages from the DAV provider module that is handling the actual actions that the PUT represents when there is also an error handling the protocol.  In many cases these errors may be more useful than the generic HTTP protocol error.  \n\nConsider an SVN client where the PUT is sending an svndiff.  For some reason the connection is interrupted.  \"Could not get next brigade\" is logged since that's the error that mod_dav had, but when mod_dav calls the close_stream function on the mod_dav_svn module it gets back \"Unexpected end of svndiff input\", which is incredibly useful since it implies to the end user that the connection was interrupted somehow.", "is_private": false, "bug_id": 54145, "id": 163444, "time": "2012-11-14T22:48:09Z", "creator": "ben@reser.org", "creation_time": "2012-11-14T22:48:09Z", "attachment_id": null}, {"count": 1, "tags": [], "creator": "ben@reser.org", "attachment_id": 29598, "text": "Created attachment 29598\nImproves error handling in dav_method_put()\n\nThe attached patch resolves the problems described on this bug.\n\n1) The error message for the ap_get_brigade() is changed to \"An error occurred while reading the request body\" and the later apr_bucket_read() calls error message is changed to be unique by adding the phrase \"from the bucket.\"  Since the  apr_bucket_read() error is highly unlikely the more technical and internal oriented error message is appropriate.\n\n2) A new function dav_join_error() is created that allows one error stack to be added to the end of another.  This is used in non-looping portions of dav_method_put to preserve both the mod_dav error and the DAV providers error.", "id": 163445, "time": "2012-11-14T22:56:50Z", "bug_id": 54145, "creation_time": "2012-11-14T22:56:50Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 54145, "attachment_id": 29599, "text": "Created attachment 29599\ngdb-script to simulate error from ap_get_brigade()\n\nI tested this using gdb to trigger an error.\n\nThe gdb-script attachment allows you to simulate a failure during a PUT.  It's setup to fail on the 2nd PUT it receives after 400 calls to ap_get_brigade().  I was sending PUTs that were 2MB in size to trigger the failure.", "id": 163446, "time": "2012-11-14T23:03:03Z", "creator": "ben@reser.org", "creation_time": "2012-11-14T23:03:03Z", "is_private": false}, {"count": 3, "tags": [], "creator": "ben@reser.org", "text": "If it's desired to backport this to previous httpd releases the addition of the dav_join_error() function would violate API versioning guarantees.  So this function should be adjusted to be a private function.", "id": 163447, "time": "2012-11-14T23:05:04Z", "bug_id": 54145, "creation_time": "2012-11-14T23:05:04Z", "is_private": false, "attachment_id": null}, {"count": 4, "text": "Forgot to mention I moved the apr_bucket_read() in that patch inside the test to see if there is an error before writing.  There's no point in getting the data in the bucket if we're not going to write it.  We continue to iterate the bucket so that we can find the EOS and not break the connection in the case of keep alives.", "bug_id": 54145, "attachment_id": null, "id": 163448, "time": "2012-11-14T23:08:44Z", "creator": "ben@reser.org", "creation_time": "2012-11-14T23:08:44Z", "tags": [], "is_private": false}, {"count": 5, "tags": [], "bug_id": 54145, "attachment_id": null, "id": 166371, "time": "2013-04-04T00:33:56Z", "creator": "trawick@apache.org", "creation_time": "2013-04-04T00:33:56Z", "is_private": false, "text": "Trunk r1464241\n\nhttpd versioning rules allow new APIs to be added to stable branches."}, {"count": 6, "tags": [], "creator": "minfrin@sharp.fm", "text": "Proposed for backport to v2.4.", "id": 166969, "time": "2013-04-30T14:48:15Z", "bug_id": 54145, "creation_time": "2013-04-30T14:48:15Z", "is_private": false, "attachment_id": null}, {"count": 7, "tags": [], "creator": "minfrin@sharp.fm", "attachment_id": null, "text": "Backported to v2.4.5.", "id": 167427, "time": "2013-05-26T20:08:55Z", "bug_id": 54145, "creation_time": "2013-05-26T20:08:55Z", "is_private": false}]