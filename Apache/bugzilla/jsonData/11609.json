[{"count": 0, "attachment_id": null, "creator": "stefanarnold@bluewin.ch", "text": "Hi,\n \nI'm currently tried to use this taglibs, which covers all my needs. But I found \nout, that this tags doesn't refresh after the time which those scrapes will be \ncached.\nSo I had a deeper look into the source and found the problem in the PageData \nclass.\nThe method \"scrapePage\" connects at the first call to the server and fetches \nthe data correct. But this doesn't work at the second time, when the cache time \nis elapsed. The reasen for this is because the variable scraping will then not \nbe set to false.\nYou see my change at the end which works fine.\n \nI hope this will help you\nStefan\n\n\n--------------------------------------------------\n\tpublic void scrapePage(String url, long time, PageContext pc)\n\t\tthrows JspException {\n\t\tlong currenttime = new Date().getTime(); // get the current time\n\n\t\t// check to see if a scrape is needed\n\t\tif (((currenttime - lastscrape) > time) || newflag || \nchangeflag) {\n\t\t\tif (!scraping.booleanValue()) {\n\t\t\t\t// if a scrape is in progress wait until scrape \nis finished\n\t\t\t\tsynchronized (scraping) {\n\t\t\t\t\tif ((page == null) || !page.isAlive()) {\n\t\t\t\t\t\t// create thread page if it \ndoesn't exist check for a\n\t\t\t\t\t\t// proxy connection\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tif (pport != -1 && \npserver != null)\n\t\t\t\t\t\t\t\tpage = new Page\n(url, this, pc, pport, pserver, auth);\n\t\t\t\t\t\t\t//page = new Page(url, \nthis, pc, pport, pserver, ssl, auth);\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tpage = new Page\n(url, this, pc);\n\t\t\t\t\t\t\t//page = new Page(url, \nthis, pc, ssl);\n\t\t\t\t\t\t} catch (MalformedURLException \nmue) {\n\t\t\t\t\t\t\tpc.getServletContext\n().log(\"PageData.scrapePage(): \" + mue.getMessage());\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ((((currenttime - lastscrape) > \ntime) || newflag || changeflag)\n\t\t\t\t\t\t&& page != null) {\n\t\t\t\t\t\t// set scraping flag \n\t\t\t\t\t\tscraping = new Boolean(true);\n\t\t\t\t\t\tpage.start();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (scraping.booleanValue() && (page != null) && !page.isAlive\n()) {\n\t\t\tscraping = new Boolean(false); // done scraping reset \nflag\n\t\t}\n\n\t\tif ((newflag || changeflag) && (page != null)) {\n\t\t\ttry {\n\t\t\t\tpage.join(); // wait for scrape to finish\n\t\t\t\tchangeflag = false; // reset changeflag\n\t\t\t} catch (InterruptedException ie) {\n\t\t\t\t// exception shouldn't happen if it does log it \nto the server\n\t\t\t\tpc.getServletContext().log(\n\t\t\t\t\t\"PageData.scrapePage(): Page thread \ninterrupted \" + ie.toString());\n\t\t\t}\n\t\t}\n\t\t// check to see if a MalformedPatternException was thrown if so \nthrow\n\t\t// JspException for JSP page builder\n\t\tif (exception) {\n\t\t\texception = false; // reset exception flag\n\t\t\tthrow new JspException(exceptiontext);\n\t\t}\n\t}", "id": 20873, "time": "2002-08-10T22:15:40Z", "bug_id": 11609, "creation_time": "2002-08-10T22:15:40Z", "tags": [], "is_private": false}]