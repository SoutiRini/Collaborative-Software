[{"count": 0, "tags": [], "creator": "cfouque@montrouge.sema.slb.com", "attachment_id": null, "is_private": false, "id": 35804, "time": "2003-04-22T15:43:03Z", "bug_id": 19220, "creation_time": "2003-04-22T15:43:03Z", "text": "Currently, each time we want to check the existence of a list of files before \ncontinuing, we have to write something very repetitive like :\n    \n    <available  property=\"exists.myLib1.jar\"  file=\"myLib1.jar\">\n      <filepath refid=\"myPath\"/>\n    </available>\n    <fail  unless=\"exists.myLib1.jar\"\n           message=\"*****  'myLib1.jar' not found  *****\"/>\n    \n    <available  property=\"exists.myLib2.jar\"  file=\"myLib2.jar\">\n      <filepath refid=\"myPath\"/>\n    </available>\n    <fail  unless=\"exists.myLib2.jar\"\n           message=\"*****  'myLib2.jar' not found  *****\"/>\n\n...\n\n\nI suggest that the <fail> task should accept the 'ifFile', 'unlessFile' and \n'filepathref' attributes and nested elements (plus others, like <available>), so \nthat the test of failure could be shortened as :\n    \n<fail  filepathref=\"myPath\">\n  <unlessFile name=\"myLib1.jar\"/>\n  <unlessFile name=\"myLib2.jar\"/>\n  ...\n</fail>\n\nwith \"'value of name attribute' not found\" as the dynamic default value for the \n'message' attribute.\n\n\nAn alternative enhancement (not excluding the first one) would be that the \n<available> and <condition> tasks both accept the 'filepathref', 'failonerror' \nand 'failMessage' attributes and nested elements, with \"'value of first absent \nobject' not found\" as the dynamic default value for the 'failMessage' attribute, \nso that the test of failure could be shortened as :\n\n  <condition  failonerror=\"true\"  filepathref=\"myPath\">\n    <and>\n      <available file=\"myLib1.jar\"/>\n      <available file=\"myLib2.jar\"/>\n      ...\n    </and>\n  </condition>"}, {"count": 1, "tags": [], "text": "This is old and all, but I found it searching for existing RFEs \ncontaining \"fail\" and \"condition\".  Is there a reason why having <fail> accept \na nested <condition> would be A Bad Thing?", "attachment_id": null, "id": 50570, "creation_time": "2004-01-14T21:34:02Z", "time": "2004-01-14T21:34:02Z", "creator": "mbenson@apache.org", "bug_id": 19220, "is_private": false}, {"count": 2, "tags": [], "creator": "mbenson@apache.org", "attachment_id": 9982, "id": 50660, "time": "2004-01-16T19:53:47Z", "bug_id": 19220, "creation_time": "2004-01-16T19:53:47Z", "is_private": false, "text": "Created attachment 9982\ndiffs to the fail task"}, {"count": 3, "tags": [], "creator": "mbenson@apache.org", "attachment_id": 9983, "id": 50661, "time": "2004-01-16T19:54:13Z", "bug_id": 19220, "creation_time": "2004-01-16T19:54:13Z", "is_private": false, "text": "Created attachment 9983\npatch to fail manpage"}, {"count": 4, "tags": [], "creator": "mbenson@apache.org", "text": "Created attachment 9984\npatch to the testcase input file", "id": 50662, "time": "2004-01-16T19:54:49Z", "bug_id": 19220, "creation_time": "2004-01-16T19:54:49Z", "is_private": false, "attachment_id": 9984}, {"count": 5, "tags": [], "creator": "mbenson@apache.org", "attachment_id": 9985, "id": 50663, "time": "2004-01-16T19:55:06Z", "bug_id": 19220, "creation_time": "2004-01-16T19:55:06Z", "is_private": false, "text": "Created attachment 9985\npatch to the fail unit tests"}, {"count": 6, "tags": [], "creator": "j_a_fernandez@yahoo.com", "text": "What is wrong with saying:\n\n<if>\n    <and>\n      <available file=\"myLib1.jar\"/>\n      <available file=\"myLib2.jar\"/>\n      ...\n    </and>\n    <else>\n      <fail>......</fail>\n    </else>\n</if>\n\nMoreover now in ANT 1.6 you can define your own macrodef\nto do what you want:\n\n<macrodef name=\"failunless\">\n<element name=\"conditions\"/>\n<sequential>\n<if>\n    <and>\n      <conditions/>\n    </and>\n    <else>\n      <fail>......</fail>\n    </else>\n</if>\n</sequential>\n</macrodef>\n\nAnd you can use it as:\n<failunless>\n  <conditions>\n      <available file=\"myLib1.jar\"/>\n      <available file=\"myLib2.jar\"/>\n      ...\n  </conditions>\n</failunless>\n\nWasn't that what you wanted?\n", "id": 50729, "time": "2004-01-19T12:23:06Z", "bug_id": 19220, "creation_time": "2004-01-19T12:23:06Z", "is_private": false, "attachment_id": null}, {"count": 7, "tags": [], "creator": "mbenson@apache.org", "attachment_id": null, "id": 50740, "time": "2004-01-19T15:44:44Z", "bug_id": 19220, "creation_time": "2004-01-19T15:44:44Z", "is_private": false, "text": "Technically you can get the effect of this patch without using ant-contrib at \nall--by using a <condition> followed by a <fail if/unless>--it's just more \ncumbersome.  Therefore the \"enhancement\" label.  It just struck me that such a \npatch would make conditional failure a little more straightforward, while \nsatisfying the original request of this bug."}, {"count": 8, "tags": [], "bug_id": 19220, "is_private": false, "id": 51431, "attachment_id": null, "creator": "mbenson@apache.org", "creation_time": "2004-01-29T21:51:55Z", "time": "2004-01-29T21:51:55Z", "text": "Does anyone else have an opinion on nested <condition>s in the <fail> task?"}]