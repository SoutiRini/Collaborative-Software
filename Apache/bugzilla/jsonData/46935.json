[{"count": 0, "attachment_id": 23425, "creator": "oliver@neofonie.de", "is_private": false, "id": 125869, "time": "2009-03-30T04:48:34Z", "bug_id": 46935, "creation_time": "2009-03-30T04:48:34Z", "tags": [], "text": "Created attachment 23425\nPatch for binding the multicast socket to the correct address in 5.5.27\n\nHi,\n\nwhen trying session replication using Apache Tomcat 5.5.27 and below, I came across some problems, not unlike other people that tried to use the cluster multicast membership service and TCP-based replication, as suggested in the Clustering/Session Replication HOWTO (http://tomcat.apache.org/tomcat-5.5-doc/cluster-howto.html). I found numerous reports from people having problems with clustering in 5.5, and although the usual response to their inquiry for help was telling them to check their configuration, I think there is a bug concerning clustering in 5.5 code which has survived up to 5.5.27.\n\nAlthough the 5.5.x Tomcat series is now somewhat obsolete, and this very problem has been successfully addresses in 6.0.x (but obviously never been backported to 5.5), I wanted to share what I found, because it might spare some headache for users and might reconsile others with Tomcat session replication altogether. :)\n\nI am aware of the networking prerequisites for TCP Replication, most notably caused by the Multicast Membership Service:\n\n- multicast support both in the operating system's networking stack and the network infrastructure altogether (like mentioned in The Clustering FAQ, see http://wiki.apache.org/tomcat/FAQ/Clustering#Q9 , among many other web locations)\n\n- occassional problems with multicast routing on GNU/Linux (the OS of choice for said setups)\n\n- specific problems with GNU/Linux, Java, multicast and IPv6 support (as discussed partially in http://java.sun.com/j2se/1.5.0/docs/guide/net/ipv6_guide/index.html, although I did not at all rely on IPv6 in my setup)\n\nI tried several configurations in different network environments, always making double-sure that multicast works (both using Java software and non-Java software), and although the \"Simple Cluster Configuration\" from the Replication HOWTO seemed to work for a while, more sophisticated setups regularly failed. However, session replication in Tomcat 6.0.18 also worked in similar setups that made 5.5.27 break. The usual symptoms where:\n\n- multicast membership packages sent through the network (and also reaching the network interfaces, although apparently not being received from the application)\n\n- no replicated sessions at all\n\n- frequent exceptions in catalina.out like:\n        INFO Cluster-MembershipRecovery org.apache.catalina.cluster.mcast.McastService - Membership recovery was successful.\n        WARN Cluster-MembershipReceiver org.apache.catalina.cluster.mcast.McastService - Error receiving mcast package (errorCounter=10). Try Recovery!\n        java.net.SocketTimeoutException: Receive timed out\n                at java.net.PlainDatagramSocketImpl.receive0(Native Method)\n                at java.net.PlainDatagramSocketImpl.receive(PlainDatagramSocketImpl.java:136)\n                at java.net.DatagramSocket.receive(DatagramSocket.java:712)\n                at org.apache.catalina.cluster.mcast.McastServiceImpl.receive(McastServiceImpl.java:238)\n                at org.apache.catalina.cluster.mcast.McastServiceImpl$ReceiverThread.run\n        (McastServiceImpl.java:330)\n        INFO Cluster-MembershipRecovery org.apache.catalina.cluster.mcast.McastService - Cluster membership, running recovery thread, multicasting is not functional.\n        WARN Cluster-MembershipSender org.apache.catalina.cluster.mcast.McastService - Sender Thread ends with errorCounter=0.\n\nI finally compared the code snippets in Tomcat 6.0.18 and 5.5.27 that take care of the membership service respectively and found this:\n\nin org/apache/catalina/cluster/mcast/McastServiceImpl.java:167ff:\n   protected void setupSocket() throws IOException {\n        if (mcastBindAddress != null) socket = new MulticastSocket(new java.net.\n            InetSocketAddress(mcastBindAddress, port));\n        else socket = new MulticastSocket(port);\n            socket.setLoopbackMode(false); //hint that we don't need loop back messages\n\nand in org/apache/catalina/tribes/membership/McastServiceImpl.java:185ff:\n    protected void setupSocket() throws IOException {\n        if (mcastBindAddress != null) {\n            try {\n                log.info(\"Attempting to bind the multicast socket to \"+address+\":\"+port);\n                socket = new MulticastSocket(new InetSocketAddress(address,port));\n            } catch (BindException e) {\n                /*\n                 * On some plattforms (e.g. Linux) it is not possible to bind\n                 * to the multicast address. In this case only bind to the\n                 * port.\n                 */\n                log.info(\"Binding to multicast address, failed. Binding to port only.\");\n                socket = new MulticastSocket(port);\n            }\n        } else {\n            socket = new MulticastSocket(port);\n        }\n\nSo, provided a mcastBindAddress property has been specified, 6.0.18 uses the (multicast) address to create the InetSocketAddress to bind to, while 5.5.27 uses the mcastBindAddress - which causes the socket not to see any multicast packages at all, since being bound to the wrong address, hence the exceptions about receives timing out.\n\nTherefore, I suggest the following patch to alter the Tomcat5 multicast binding behaviour to be similar to Tomcat6:\n\n\ndiff -u -r apache-tomcat-5.5.27-src.orig/container/modules/cluster/src/share/org\n/apache/catalina/cluster/mcast/McastServiceImpl.java apache-tomcat-5.5.27-src/co\nntainer/modules/cluster/src/share/org/apache/catalina/cluster/mcast/McastService\nImpl.java\n--- apache-tomcat-5.5.27-src.orig/container/modules/cluster/src/share/org/apache\n/catalina/cluster/mcast/McastServiceImpl.java   2008-08-29 05:13:58.000000000 +0\n200\n+++ apache-tomcat-5.5.27-src/container/modules/cluster/src/share/org/apache/cata\nlina/cluster/mcast/McastServiceImpl.java        2008-11-27 01:29:04.905529298 +0\n100\n@@ -166,7 +166,7 @@\n\n     protected void setupSocket() throws IOException {\n         if (mcastBindAddress != null) socket = new MulticastSocket(new java.net\n.\n-            InetSocketAddress(mcastBindAddress, port));\n+            InetSocketAddress(address, port));\n         else socket = new MulticastSocket(port);\n            socket.setLoopbackMode(false); //hint that we don't need loop back m\nessages\n         if (mcastBindAddress != null) {\n\n\nWith the above patch, Tomcat 5.5.27 worked for me as expected - and documented.\n\nA comment in Tomcat6 mentions that binding to a multicast address on GNU/Linux might fail, but I did not see any of the log messages in Tomcat6 about this kind of failure, and neither did I find similar Exceptions in the logs for Tomcat5. Either way, the above issue prevails, it just needs to additionally be addressed in a way similar to Tomcat6, that is, catching the Exception and using the MulticastSocket constructor with port as sole argument.\n\nI would be glad about any kind of feedback to this, I hope I didn't miss any considerable information on this whole topic that would justify a loud RTFM in my face, and I hope that this could be my humble part of improving the already excellent Apache Tomcat that we all so love. :)\n\nFor the record:\n\nThis has been tested on SuSE OpenLinux 10.1 32bit and 10.2 64bit with JDK 1.6.0 (1.6.0_07-b06), both 32bit and 64bit versions.\n\nBest regards,\n\nOliver"}, {"count": 1, "tags": [], "text": "Looks like I proposed the patch for backport 2 weeks ago :)\n\nPlease have a look at\n\nhttp://svn.apache.org/viewvc?view=rev&revision=755351\nhttp://svn.apache.org/viewvc?view=rev&revision=759692\nhttp://svn.apache.org/viewvc?view=rev&revision=755310\nhttp://svn.apache.org/viewvc?view=rev&revision=755312\n\nThe proposal needs one more vote for getting committed.\n\nIf you think that this issue is not a duplicate of BZ43641, please comment.\n\nGr\u00fc\u00dfe an die Neofonie ;)\n\nRainer", "is_private": false, "id": 125870, "creator": "rainer.jung@kippdata.de", "time": "2009-03-30T05:29:03Z", "bug_id": 46935, "creation_time": "2009-03-30T05:29:03Z", "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 46935, "text": "\n\n*** This bug has been marked as a duplicate of bug 43641 ***", "id": 125871, "time": "2009-03-30T05:29:24Z", "creator": "rainer.jung@kippdata.de", "creation_time": "2009-03-30T05:29:24Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 46935, "text": "Too bad I have missed both the original Bug #43641, and your recent backport proposal. And although it is a pity I wasn't in first, I like seeing that this is (hopefully) getting into Tomcat 5.5.. ;)\n\nI don't want to get too much into nitpicking mode, but is this technically a duplicate? I see it has been addressed in 6.0, but this isn't really redundant, as long as it hasn't found its way into 5.5 - although I see it is basically the same issue.\n\nLooking forward to see the original backport included in 5.5.28.\n\nRegards - und viele Gr\u00fc\u00dfe zur\u00fcck! :)\n\nOliver", "id": 125886, "time": "2009-03-30T11:54:57Z", "creator": "oliver@neofonie.de", "creation_time": "2009-03-30T11:54:57Z", "is_private": false, "attachment_id": null}]