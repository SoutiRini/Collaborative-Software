[{"count": 0, "tags": [], "text": "I am trying to create excel files of moderate to large size (about 4 MB).  I \nhave written some code to generate a file for this and I have also increased my \nJVM heap size to 100 MB.  The code compiles and runs without a problem.  \nHowever, my Excel application is unable open the file (e.g.. \"Out of memory\" or \ninvalid address or similar errors from Excel not JVM).  I've pasted my code \nbelow, does anyone know why this is causing me a problem?\n\n(I have already looked through the archives and noticed that someone had a \nsimilar problem.  The recommended solution was to increase the JVM heap size \nwhich I have tried.  Does anyone know what the heap size should be relative to \nthe file size or even if there is an issue with this)\n\n\nThank you in advance,\n\nNitin.\n\n\n\nimport org.apache.poi.hssf.usermodel.*;\nimport java.io.*;\n\npublic class createExcelSheet\n{\n\n\tpublic static void main(String args[]) throws Throwable\n\t{\n\t\tHSSFWorkbook wb = new HSSFWorkbook();\n\t\tHSSFSheet sheet1 = wb.createSheet(\"new sheet\");\n\t\t\n\t\tfor (short index = 0; index < 600; index ++)\n\t\t{\n\t\t\tHSSFRow row = sheet1.createRow(index);\n\t\t\tfor (short index2 = 0; index2 < 500; index2++)\n\t\t\t{\n\t\t\t\trow.createCell(index2).setCellValue(\"goodbye\");\n\t\t\t}\n\t\t}\t\t\n\t\t\n\t\tFileOutputStream fileOut = new FileOutputStream(\"workbook.xls\");\n\t\twb.write(fileOut);\n\t\tfileOut.close();\n\t}\n}", "is_private": false, "id": 18829, "creator": "nitin.shah@ubsw.com", "time": "2002-07-02T09:02:09Z", "bug_id": 10393, "creation_time": "2002-07-02T09:02:09Z", "attachment_id": null}, {"count": 1, "text": "I have tried to attach the file but have been unable to do so.  I suspect it is \ndue to the large size of the file (over 4 MB).  Please email me on \nnitin.shah@ubsw.com to get a copy of this file.", "bug_id": 10393, "attachment_id": null, "id": 18830, "time": "2002-07-02T09:21:15Z", "creator": "nitin.shah@ubsw.com", "creation_time": "2002-07-02T09:21:15Z", "tags": [], "is_private": false}, {"count": 2, "tags": [], "bug_id": 10393, "attachment_id": null, "text": "BTW did you try tar/gz-ing or zipping the file.", "id": 18841, "time": "2002-07-02T12:46:42Z", "creator": "poi-support@buni.org", "creation_time": "2002-07-02T12:46:42Z", "is_private": false}, {"count": 3, "tags": [], "creator": "nitin.shah@ubsw.com", "attachment_id": 2232, "id": 18843, "time": "2002-07-02T13:43:47Z", "bug_id": 10393, "creation_time": "2002-07-02T13:43:47Z", "is_private": false, "text": "Created attachment 2232\nThis is the corrupt excel file generated by the code I submitted earlier (zipped)"}, {"attachment_id": 2260, "tags": [], "bug_id": 10393, "text": "Created attachment 2260\ntar.bz2 file containing a workbook exhibiting the error", "count": 4, "id": 19012, "time": "2002-07-04T19:13:22Z", "creator": "poi-support@buni.org", "creation_time": "2002-07-04T19:13:22Z", "is_private": false}, {"attachment_id": null, "tags": [], "creator": "poi-support@buni.org", "is_private": false, "count": 5, "id": 19013, "time": "2002-07-04T19:16:12Z", "bug_id": 10393, "creation_time": "2002-07-04T19:16:12Z", "text": "I strongly suspect this is an SSTRecord/LabelSST problem.  There is but one\nstring in this file and its repeated many many times.  It wouldn't load on my\nbox, excel was hung.  Glen can you give this a gander?\n\nThanks,\n\nAndy"}, {"count": 6, "tags": [], "bug_id": 10393, "attachment_id": null, "text": "I'll give this a look but things have been very busy lately so I may be a little\nslow of the mark.", "id": 19025, "time": "2002-07-05T00:26:39Z", "creator": "glens@apache.org", "creation_time": "2002-07-05T00:26:39Z", "is_private": false}, {"count": 7, "tags": [], "bug_id": 10393, "attachment_id": null, "text": "Just to clarify, although the sample corrupt file we sent had just one string \nin it, the same error occurs whenever you generate a largish spreadsheet using \nHSSF. We sent an example with one string so that we could keep the code simple \nto reproduce the bug.", "id": 19240, "time": "2002-07-10T08:40:06Z", "creator": "mark.papiani@ubsw.com", "creation_time": "2002-07-10T08:40:06Z", "is_private": false}, {"count": 8, "tags": [], "creator": "nitin.shah@ubsw.com", "attachment_id": null, "id": 20551, "time": "2002-08-01T17:09:46Z", "bug_id": 10393, "creation_time": "2002-08-01T17:09:46Z", "is_private": false, "text": "I have tested the code for numbers as well.  The code fails if I repeat the \nsame number in every cell and also if I use different numbers in every cell.\n\nI have pasted my code below.\n\nKind Regards,\n\nNitin\n\n\n\n\nimport org.apache.poi.hssf.usermodel.*;\nimport java.io.*;\nimport java.util.*;\n\npublic class test\n{\n\tpublic static void main(String args[]) throws Throwable\n\t{\n\t\tHSSFWorkbook wb = new HSSFWorkbook();\n\t\tHSSFSheet sheet1 = wb.createSheet(\"new sheet\");\n\t\t\n\t\tfor (short index = 0; index < 600; index ++)\n\t\t{\n\t\t\tHSSFRow row = sheet1.createRow(index);\n\t\t\tfor (short index2 = 0; index2 < 500; index2++)\n\t\t\t{\n\t\t\t\trow.createCell(index2).setCellValue(((int)index)\n*((int)index2));\n\t\t\t}//end for (index2)\n\t\t}//end for (index)\n\t\t\n\t\t\n\t\tFileOutputStream fileOut = new FileOutputStream\n(\"workbook2.xls\");\n\t\twb.write(fileOut);\n\t\tfileOut.close();\n\t}//end main\n\t\n}//end class\n\n"}, {"count": 9, "tags": [], "creator": "poi-support@buni.org", "attachment_id": null, "is_private": false, "id": 20552, "time": "2002-08-01T17:15:21Z", "bug_id": 10393, "creation_time": "2002-08-01T17:15:21Z", "text": "This is a limitation of Excel.  You can't have more than column IV (I think\nthsts 255).  We should throw an exception, but this isn't us doing something\nwrong gramatically so to speak, just us not enforcing a limitation.\n\n-Andy"}, {"count": 10, "tags": [], "bug_id": 10393, "attachment_id": null, "text": "fixed.  I just implemented bounds checking.  HSSF will now throw a runtime\nexception if you try to create a cell with a column number >255. ", "id": 20554, "time": "2002-08-01T18:21:32Z", "creator": "poi-support@buni.org", "creation_time": "2002-08-01T18:21:32Z", "is_private": false}, {"count": 11, "tags": [], "bug_id": 10393, "attachment_id": null, "text": "Please update Java doc; e.g. HSSFRow.creatCell():\n\n* ...\n* @throws RuntimeException if column index > 254 as Excel only supports up to 255 columns.\n* ...\n\n", "id": 123227, "time": "2008-12-10T07:58:00Z", "creator": "mhilpert@gmx.de", "creation_time": "2008-12-10T07:58:00Z", "is_private": false}]