[{"count": 0, "tags": [], "bug_id": 44967, "attachment_id": null, "text": "I was going to research bug #44010 and found that POI can't anymore read the problem file:\n\n\nException in thread \"main\" org.apache.poi.hssf.record.RecordFormatException: Unable to construct record instance\n\tat org.apache.poi.hssf.record.RecordFactory.createRecord(RecordFactory.java:208)\n\tat org.apache.poi.hssf.record.RecordFactory.createRecords(RecordFactory.java:126)\n\tat org.apache.poi.hssf.usermodel.HSSFWorkbook.<init>(HSSFWorkbook.java:245)\n\tat org.apache.poi.hssf.usermodel.HSSFWorkbook.<init>(HSSFWorkbook.java:168)\n\tat org.apache.poi.hssf.usermodel.HSSFWorkbook.<init>(HSSFWorkbook.java:297)\n\tat org.apache.poi.hssf.usermodel.HSSFWorkbook.<init>(HSSFWorkbook.java:278)\n\tat org.apache.poi.hssf.scratchpad.ReWrite.main(ReWrite.java:42)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:585)\n\tat com.intellij.rt.execution.application.AppMain.main(Unknown Source)\nCaused by: java.lang.reflect.InvocationTargetException\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:494)\n\tat org.apache.poi.hssf.record.RecordFactory.createRecord(RecordFactory.java:196)\n\t... 11 more\nCaused by: java.lang.IllegalArgumentException: Unexpected operand type code '?' (65533)\n\tat org.apache.poi.hssf.record.formula.function.FunctionMetadataReader.parseOperandTypeCode(FunctionMetadataReader.java:162)\n\tat org.apache.poi.hssf.record.formula.function.FunctionMetadataReader.parseOperandTypeCodes(FunctionMetadataReader.java:138)\n\tat org.apache.poi.hssf.record.formula.function.FunctionMetadataReader.processLine(FunctionMetadataReader.java:103)\n\tat org.apache.poi.hssf.record.formula.function.FunctionMetadataReader.createRegistry(FunctionMetadataReader.java:82)\n\tat org.apache.poi.hssf.record.formula.function.FunctionMetadataRegistry.getInstance(FunctionMetadataRegistry.java:41)\n\tat org.apache.poi.hssf.record.formula.function.FunctionMetadataRegistry.getFunctionByIndex(FunctionMetadataRegistry.java:57)\n\tat org.apache.poi.hssf.record.formula.FuncPtg.<init>(FuncPtg.java:42)\n\tat org.apache.poi.hssf.record.formula.Ptg.createPtg(Ptg.java:250)\n\tat org.apache.poi.hssf.record.SharedFormulaRecord.getParsedExpressionTokens(SharedFormulaRecord.java:168)\n\tat org.apache.poi.hssf.record.SharedFormulaRecord.fillFields(SharedFormulaRecord.java:160)\n\tat org.apache.poi.hssf.record.Record.<init>(Record.java:55)\n\tat org.apache.poi.hssf.record.SharedFormulaRecord.<init>(SharedFormulaRecord.java:56)\n\n\nThere are 3 SharedFormula records and all of them fail. I extracted the record data and attached a failing unit test.\n\nJosh, can you look into it? It might be related to your recent changes. \n\n\nYegor", "id": 116477, "time": "2008-05-11T03:37:49Z", "creator": "yegor@dinom.ru", "creation_time": "2008-05-11T03:37:49Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 44967, "attachment_id": 21942, "text": "Created attachment 21942\nfailing test", "id": 116478, "time": "2008-05-11T03:38:52Z", "creator": "yegor@dinom.ru", "creation_time": "2008-05-11T03:38:52Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 44967, "attachment_id": 21943, "text": "Created attachment 21943\nsample xls to reproduce the problem", "id": 116479, "time": "2008-05-11T03:39:26Z", "creator": "yegor@dinom.ru", "creation_time": "2008-05-11T03:39:26Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 44967, "attachment_id": null, "text": "These problems started with the second fix to bug 44675 (svn r652994), when FunctionMetadataReader began to read more of the columns from functionMetadata.txt.\n\nOriginally, that file had non-ascii characters in it (ndash and ellipsis) which I thought I had handled correctly.  Nick found a bug almost identical to this (on linux), and applied a fix (svn r653831).  However, the fix didn't work for me (on win32).  At this point, I thought the best solution was to totally eliminate all non-ascii characters from functionMetadata.txt, and that's what I did in svn r653892.\n\nI can see from your stack trace that you have the latest FunctionMetadataReader.  However, I don't understand why character 0xFFFD is being read from functionMetadata.txt.  From what I can tell, there are only ascii characters in functionMetadata.txt as of r653892.  I just ran the following code in my workspace:\n\nInputStream is = FunctionMetadataRegistry.class.getResourceAsStream(\"functionMetadata.txt\");\nwhile (true) {\n\tint ic = is.read();\n\tif(ic ==-1) {\n\t\tbreak;\n\t}\n\tif(ic<'!' || ic > 'z') {\n\t\tswitch (ic) {\n\t\t\tcase '\\n': case '\\r': case '\\t': case ' ':\n\t\t\t\tcontinue;\n\t\t}\n\t\tSystem.out.println(\"Unexpected char (\" + ic + \"):\" + (char)ic);\n\t}\n}\nis.close();\n\nIn my workspace there are no unexpected chars.  Maybe you could run try the same to help diagnose the problem.\n\n\nBTW - This bug is not specific to shared formulas.  Reading any xls that involves a formula will hit FunctionMetadataRegistry.getInstance().  Almost 100 junits were broken by this bug. The most direct test case to hit this bug is in TestFunctionMetadataRegistry.", "id": 116485, "time": "2008-05-11T11:45:48Z", "creator": "josh@apache.org", "creation_time": "2008-05-11T11:45:48Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 44967, "text": "I found what's wrong.\nSomehow my IDE (IntelliJ Idea 4.0) didn't update the resources after compilation. As a result, an old version of functionMetadata.txt was used and generated errors.\n\nSorry for the trouble. \n\nYegor", "id": 116494, "time": "2008-05-12T01:53:33Z", "creator": "yegor@dinom.ru", "creation_time": "2008-05-12T01:53:33Z", "is_private": false, "attachment_id": null}]