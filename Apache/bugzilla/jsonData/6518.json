[{"count": 0, "tags": [], "creator": "paul.fu@ssmb.com.au", "text": "In both org.apache.jasper.compiler.JspCompiler and\norg.apache.jasper.compiler.CommandLineCompiler, the method \"getBaseClassName\"\ngenerates the servlet classname from the name of the jsp file, and mangles the\ncharacters of the filename to ensure a valid classname.\n\nHowever, the criteria used to determine if a character should be mangled is only\n\"Character.isLetterOrDigit\" (and hence will generate \"1test.java\" from\n\"1test.jsp\", which is not a valid Java class). This should be expanded to\ninclude valid non alphanumeric characters (notably \"_\") as demonstrated in the\npatches below (note that the mangling code is the same in both classes)\n--- src/share/org/apache/jasper/compiler/JspCompiler.java\tFri Feb 15 22:23:21 2002\n+++ JspCompiler.java\tMon Feb 18 17:44:48 2002\n@@ -260,10 +260,11 @@\n \t// Fix for invalid characters. If you think of more add to the list.\n \tStringBuffer modifiedClassName = new StringBuffer();\n \tfor (int i = 0; i < className.length(); i++) {\n-\n    if (Character.isLetterOrDigit(className.charAt(i)) == true)\n-\n\tmodifiedClassName.append(className.substring(i,i+1));\n+\n    char c = className.charAt(i);\n+\n    if ((i == 0 && Character.isJavaIdentifierStart(c)) ||\nCharacter.isJavaIdentifierPart(c))\n+\n\tmodifiedClassName.append(c);\n \t    else\n-\n\tmodifiedClassName.append(mangleChar(className.charAt(i)));\n+\n\tmodifiedClassName.append(mangleChar(c));\n \t}\n \t\n \treturn modifiedClassName.toString();\n// end patch\n\n--- src/share/org/apache/jasper/compiler/CommandLineCompiler.java\tFri Feb 15 22:23:33 2002\n+++ CommandLineCompiler.java\tMon Feb 18 17:41:33 2002\n@@ -234,10 +234,11 @@\n \t// Fix for invalid characters. If you think of more add to the list.\n \tStringBuffer modifiedClassName = new StringBuffer();\n \tfor (int i = 0; i < className.length(); i++) {\n-\n    if (Character.isLetterOrDigit(className.charAt(i)) == true)\n-\n\tmodifiedClassName.append(className.substring(i,i+1));\n+           char c = className.charAt(i);\n+           if ((i == 0 && Character.isJavaIdentifierStart(c)) ||\nCharacter.isJavaIdentifierPart(c))\n+\n\tmodifiedClassName.append(c);\n \t    else\n-\n\tmodifiedClassName.append(mangleChar(className.charAt(i)));\n+\n\tmodifiedClassName.append(mangleChar(c));\n \t}\n \t\n \treturn modifiedClassName.toString();// end patch", "id": 10845, "time": "2002-02-18T07:04:50Z", "bug_id": 6518, "creation_time": "2002-02-18T07:04:50Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "creator": "william.barker@wilshire.com", "attachment_id": null, "id": 11079, "time": "2002-02-22T03:17:24Z", "bug_id": 6518, "creation_time": "2002-02-22T03:17:24Z", "is_private": false, "text": "This is now fixed in the CVS HEAD, and will appear in 3.3.1-RC1."}]