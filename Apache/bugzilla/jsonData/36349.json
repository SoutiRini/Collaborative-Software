[{"count": 0, "tags": [], "text": "I've been trying to hide a MS Project Server 2003 behind a reverse proxy server\nlike I was sucessfully hiding any other MS-IIS servers I needed to hide.\n\nIn this case however, 99% of the pages display fine except those certain pages\nthat are loaded by an OCX control.\n\nAfter doing several tcp dumps on the client side (win xp) and on the reverse\nproxy server side (solaris 9) it seems that the reverse proxy server introduces\n'at random' 7 bytes into data stream responses to the client in the form\n'\\r\\nb68\\r\\n' that are not seen in the datastream coming from the backend\nside.This data insertion appears only (as far as I can see and reproduce) in\nresponse that use chunked encoding. Non chunked encoding responses are\ntransferred/displayed fine on the client.\n\nOfcourse, this extra data causes the OCX control to fail because it sees invalid\ndata and either lock up IE or send error messages like 'stream not connected'\nerrors.\n\ntcp trace files of 2 test sessions (through and by-pass of reverse proxy) are\navailable upon request.\n\nNo bells or whistles in the reverse proxy server, just straight ProxyPass and\nProxyPassReverse statements in a seperate virtual server on its own IP and port 80.\n\nIn this case the entire site is proxied similar to:\nProxyPass / http://abc/\nProxyPassReverse / http://abc/\n\n\nModules installed:\nmc1tfi05 # ./httpd -l\nCompiled in modules:\n  core.c\n  mod_access.c\n  mod_auth.c\n  mod_include.c\n  mod_log_config.c\n  mod_env.c\n  mod_setenvif.c\n  mod_proxy.c\n  proxy_connect.c\n  proxy_ftp.c\n  proxy_http.c\n  prefork.c\n  http_core.c\n  mod_mime.c\n  mod_status.c\n  mod_autoindex.c\n  mod_asis.c\n  mod_cgi.c\n  mod_negotiation.c\n  mod_dir.c\n  mod_imap.c\n  mod_actions.c\n  mod_alias.c\n  mod_rewrite.c\n  mod_so.c\nmc1tfi05 #", "is_private": false, "id": 78959, "creator": "ybandell@yahoo.com", "time": "2005-08-25T07:26:57Z", "bug_id": 36349, "creation_time": "2005-08-25T07:26:57Z", "attachment_id": null}, {"attachment_id": 16189, "tags": [], "bug_id": 36349, "is_private": false, "count": 1, "id": 78960, "time": "2005-08-25T07:49:18Z", "creator": "ybandell@yahoo.com", "creation_time": "2005-08-25T07:49:18Z", "text": "Created attachment 16189\nethereal dump showing working session bypassing reverse proxy\n\n10.11.11.14 is the client\n10.1.76.9 is the IIS server\nCompare the response to 'POST\n/msadc/msadcs.dll/PjBusObj.PjAdminBusObj2.BOAdminQuery' with the response to\nthe same POST operation in the test session through the reverse proxy from\nbackend to proxy and proxy to the client."}, {"count": 2, "tags": [], "creator": "ybandell@yahoo.com", "is_private": false, "text": "Created attachment 16190\ntcp trace of test session through reverse proxy (backend side traffic only)\n\n10.1.30.114 is the reverse proxy server IP\n10.1.76.9 is the IIS server", "id": 78961, "time": "2005-08-25T07:52:07Z", "bug_id": 36349, "creation_time": "2005-08-25T07:52:07Z", "attachment_id": 16190}, {"count": 3, "tags": [], "creator": "ybandell@yahoo.com", "is_private": false, "text": "Created attachment 16191\ntcp trace of test session through reverse proxy (client side traffic only)\n\n10.99.3.226 is client IP\n10.1.30.114 is reverse proxy server IP\nsee the response on 'POST\n/msadc/msadcs.dll/PjBusObj.PjAdminBusObj2.BOAdminQuery', the header has data\ncorruption. In the backend session nor the proxy-bypass session this data is\nnot seen. This trace was generated on the reverse proxy server to rule out any\npossible data corruption in transit to the client.", "id": 78962, "time": "2005-08-25T07:57:59Z", "bug_id": 36349, "creation_time": "2005-08-25T07:57:59Z", "attachment_id": 16191}, {"count": 4, "tags": [], "creator": "nick@webthing.com", "attachment_id": null, "id": 78998, "creation_time": "2005-08-25T16:17:48Z", "time": "2005-08-25T16:17:48Z", "bug_id": 36349, "text": "Erm, it looks to me like your problem *is* chunked encoding.  If the Client  \nsends an HTTP/1.1 request then it MUST accept chunked responses, which means  \nprecisely those byte sequences.  So it looks like a bug in your client, asking \nfor HTTP/1.1 but refusing to accept it. \n \nThe workaround in Apache is to force an HTTP/1.0 response. ", "is_private": false}, {"attachment_id": null, "tags": [], "bug_id": 36349, "is_private": false, "count": 5, "id": 79010, "time": "2005-08-25T18:43:58Z", "creator": "ybandell@yahoo.com", "creation_time": "2005-08-25T18:43:58Z", "text": "Nick,\n\nA direct connection between the client and the MS project Server works as\nexpected (trace of bypassing the reverse proxy) ruling out the client (okay, it\nis IE 6 and not Firefox :) The response apache gets from the IIS/MS Project\nServer is also exactly what it should be when directing the client through the\nreverse proxy.\n\nBut when apache sends the received stream from the backend to the client, that\nis where random bits of data is inserted. (The traces do show this. The backend\ntrace as well as the client side traffic trace were made on the reverse proxy\nserver to rule out wire induced errors).\n\nLooking at the \"backend side traffic\" trace packet 12 versus \"client side\ntraffic only\" trace packet 11: before the Content-length header there is excess\ndata (bytes 0199-019f). Same thing at packets 229-230 in the back end trace\nversus client side traffic packet 299 (bytes 0120-0127). This appears to only\noccur when chunked encoding is involved.\n"}, {"count": 6, "tags": [], "creator": "nick@webthing.com", "is_private": false, "text": "I told you what the bug is and how to work around it in apache. \n \nPlease read the section on chunked encoding in RFC2616.  There's nothing \nrandom about those numbers. \n \nIt would be a bug for a proxy to send those in response to an HTTP/1.0 \nrequest, since an HTTP/1.0 client may not accept them.  But your client \nadvertised itself as HTTP/1.1 ", "id": 79011, "time": "2005-08-25T18:55:55Z", "bug_id": 36349, "creation_time": "2005-08-25T18:55:55Z", "attachment_id": null}, {"count": 7, "tags": [], "bug_id": 36349, "attachment_id": null, "is_private": false, "id": 79012, "time": "2005-08-25T19:05:04Z", "creator": "wrowe@apache.org", "creation_time": "2005-08-25T19:05:04Z", "text": "Hmmm... how many committers can reclose the same bug?\n\nThe client stated it was HTTP/1.1.  If you -READ- the RFC 2616 you will see\nthat there are two options, Content-Length: n or Transfer-Encoding: chunked,\nand the 'extra characters' you see in the stream are chunked response headers\nthat are correctly showing up in the body.\n\nAnd if you -READ- the RFC you will see that all HTTP/1.1 agents must be able\nto process 'Transfer-Encoding: chunked' request and response bodies.  So this\nis, clearly, a bug in your client/ocx control, and not a bug in Apache or\nthe backend IIS server.\n\nThat said - there are options to override request and response body\nhandling, and you would best present your question as a configuration\nissue to the users@httpd.apache.org list.\n\nDo not reopen this report until you have reviewed the RFC and are prepared\nto cite the behavior that Apache has violated."}, {"count": 8, "tags": [], "bug_id": 36349, "attachment_id": null, "is_private": false, "id": 79018, "time": "2005-08-25T22:50:48Z", "creator": "ybandell@yahoo.com", "creation_time": "2005-08-25T22:50:48Z", "text": "Nick, Will,\n\n*reads RFC2616* Heck, why did I ever doubt apache in the first place?\n\n\"BrowserMatch ACTIVEDATA downgrade-1.0 force-response-1.0\"\n\nThis fixes my problem. *cusses at microsoft*\n\nKeep up the good work guys!\n\nWith regards,\n\n-Yaron."}, {"count": 9, "tags": [], "text": "\n  Point out another How-To-Resolve with the FAQ keyword.  Congrats :)", "attachment_id": null, "id": 79020, "creator": "wrowe@apache.org", "time": "2005-08-25T23:06:21Z", "bug_id": 36349, "creation_time": "2005-08-25T23:06:21Z", "is_private": false}]