[{"count": 0, "tags": [], "bug_id": 50569, "attachment_id": 26475, "text": "Created attachment 26475\nPatch for storing result set objects in internal variable\n\nHi\n\nI'm new to JMeter and needed a feature for the Jdbc Request Sampler to add the result set objects to an internal JMeter variable because the string representation of some values were problematic for me. I have written code that is sufficient for my purposes, but wondered whether anyone else would find it useful, though I am sure JMeter developers will have a wider perspective on the implications of the changes.\n\nBasically I create a list of HashMaps where the list represents each row and the HashMap uses the column names to lookup the column value as retrieved from the getObject method on the resultset. I added a UI textbox called resultVariable in which the list is stored.\n\nI have only added properties to the main JdbcSampleResources.properties file.\n\nComplements on a great tool and framework to work on...", "id": 143265, "time": "2011-01-11T09:59:41Z", "creator": "zachv@ipay.co.za", "creation_time": "2011-01-11T09:59:41Z", "is_private": false}, {"attachment_id": null, "tags": [], "creator": "sebb@apache.org", "is_private": false, "count": 1, "id": 143266, "time": "2011-01-11T10:18:49Z", "bug_id": 50569, "creation_time": "2011-01-11T10:18:49Z", "text": "What was it that caused problems with the existing mechanism?\nMaybe there's a way to address that directly - maybe not.\n\nBut in principle the patch looks like a good idea, and is optional so won't affect existing test plans.\n\nCan you provide an example of how one would use the variables?"}, {"count": 2, "tags": [], "bug_id": 50569, "attachment_id": null, "id": 143292, "time": "2011-01-12T03:33:53Z", "creator": "zachv@ipay.co.za", "creation_time": "2011-01-12T03:33:53Z", "is_private": false, "text": "I am using JMeter for functional testing of our messaging server, so I send a tcp request and then afterwards check the response message against a database record and this for different supported dbms.\n\nI ran into problems comparing floating point types (floats: legacy use which I can't change). So I created the patch to see if I can get better results when working with the actual objects. It also makes it easier to write validation code outside of jmeter that I can call from BeanShell.\n\nOn review I noticed that I used:\nList<HashMap<String, Object> > results = null;\n\nInstead of the Map interface:\nList<Map<String, Object> > results\n\nSo I will upload a new patch reflecting that.\n\nHere follows an example:\n-----------------------\n*** Jdbc Request Sampler ***\nQuery:select vendor_name, vendor_balance from vendor where vendor_id = ${vendorId}\nResult variable name:resultList\n\n*** BeanShell Assertion ***\n(child to the Jdbc Request Sampler)\nScript:\n//----------------------------------------\nlist = vars.getObject(\"resultList\"); // This is a List<Map<String, Object> >\nprint(\"resultList=\" + list);\n\nmap = list.get(0); // get first row results, should only be one row, Map<String,Object>\nvendorName = map.get(\"vendor_name\");\nvendorBalance = map.get(\"vendor_balance\");\nif(!vendorBalance.equals(expectedBalance)) {\n  Failure = true;\n  FailureMessage = \"TEST FAILED: vendor=\" + vendorName + \",balance=\" + \",expectedBalance=\" + expectedBalance;\n}\n//----------------------------------------"}, {"count": 3, "tags": [], "creator": "zachv@ipay.co.za", "attachment_id": 26483, "id": 143293, "time": "2011-01-12T03:35:38Z", "bug_id": 50569, "creation_time": "2011-01-12T03:35:38Z", "is_private": false, "text": "Created attachment 26483\nRevised patch using Map interface\n\nOn review I noticed that I used:\nList<HashMap<String, Object> > results = null;\n\nInstead of the Map interface:\nList<Map<String, Object> > results\n\nSo this reflects that change."}, {"count": 4, "tags": [], "bug_id": 50569, "text": "(In reply to comment #2)\n\n> I ran into problems comparing floating point types (floats: legacy use which I\n> can't change).\n\nSo was the problem due to the precision of the string version, or difficulty in comparing string representations of floats?\n\n[BTW, floats should normally be compared using an epsilon - e.g. if (Math.abs(X - Y) <= (X / 10^7))]", "id": 143295, "time": "2011-01-12T03:57:34Z", "creator": "sebb@apache.org", "creation_time": "2011-01-12T03:57:34Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "creator": "zachv@ipay.co.za", "text": "\nSorry! I misspoke when I said this: \"because the string representation of some values were problematic for me\"\n\nIt wasn't the string representation, but the fact that casting from a float to a double is problematic.\n\nThe current implementation is sufficient and using an epsilon would resolve this. In trying to get an accurate picture of what was going on, I thought it would be great excuse to implement this feature which I wanted in any case.\n\nCasting problem:\n        float f1 = 333.33334f;\n        double d1 = 333.33334d;\n        double d2 = (double)f1;\n        System.out.println(f1);\n        System.out.println(d1);\n        System.out.println(d2);\n\nResults in:\nf1=333.33334\nd1=333.33334\nd2=333.3333435058594\n\nSo d1 is not equal to d2.", "id": 143298, "time": "2011-01-12T06:10:31Z", "bug_id": 50569, "creation_time": "2011-01-12T06:10:31Z", "is_private": false, "attachment_id": null}, {"attachment_id": null, "tags": [], "creator": "sebb@apache.org", "is_private": false, "count": 6, "id": 145084, "time": "2011-03-18T08:59:22Z", "bug_id": 50569, "creation_time": "2011-03-18T08:59:22Z", "text": "Thanks, patch applied.\n\nI changed it slightly so that the resultObject is independent of the variables, so one can have neither, either or both.\n\n\nURL: http://svn.apache.org/viewvc?rev=1082897&view=rev\nLog:\nBug 50569 - Jdbc Request Sampler to optionally store result set object data\n\nModified:\n   jakarta/jmeter/trunk/docs/images/screenshots/jdbctest/jdbc-request.png\n   jakarta/jmeter/trunk/src/protocol/jdbc/org/apache/jmeter/protocol/jdbc/sampler/JDBCSampler.java\n   jakarta/jmeter/trunk/src/protocol/jdbc/org/apache/jmeter/protocol/jdbc/sampler/JDBCSamplerBeanInfo.java\n   jakarta/jmeter/trunk/src/protocol/jdbc/org/apache/jmeter/protocol/jdbc/sampler/JDBCSamplerResources.properties\n   jakarta/jmeter/trunk/xdocs/changes.xml\n   jakarta/jmeter/trunk/xdocs/images/screenshots/jdbctest/jdbc-request.png\n   jakarta/jmeter/trunk/xdocs/usermanual/component_reference.xml"}]