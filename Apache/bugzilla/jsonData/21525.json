[{"count": 0, "tags": [], "creator": "dsb@smart.net", "attachment_id": null, "id": 40502, "time": "2003-07-11T19:09:48Z", "bug_id": 21525, "creation_time": "2003-07-11T19:09:48Z", "is_private": false, "text": "For the XSLT task, in a nested param element, it seems that the value of \nthe expression attribute is passed as a string value instead of being\npassed as an expression, as the documentation specifies.\n\nThe documentation (.../docs/manual/CoreTasks/style.html) says:\n\n    XSL expression to be placed into the param.  To pass a text value into \n    the style sheet it needs to be escaped using single quotes.\n\nAlthough the wording \"XSL expression to be placed into the param\" is \nambiguous (or wrong?), the second sentence clearly implies that the value of \nthe Ant attribute is to be evaluated as an XSLT expression and the resulting \nvalue is to be assigned to the XSLT parameter.\n\nHowever, the XSLT parameter is _not_ assigned the result of evaluating\nthe Ant attribute value as an XSLT expression.  Instead, it is assigned a \nstring value equal to the Ant attribute value.\n\nIn the test case below, notice in the output how the parameter's value acts \nas the string value resulting from the string literal:\n\n    '1 = 0'\n\ninstead of as the boolean value resulting from the expression:\n\n    1 - 0\n\nTherefore, the Ant attribute value is not being evaluated as an expression.\n\n\nIf the Ant attribute value is supposed to be evaluated as an expression, then:\n\n1.  There is a bug in the code.\n\n2.  The first sentence of the attribute documentation is a bit wrong and\n    confusing.  (The expression is not placed into the parameter.)\n\n    It should say something like:\n\n        XSL expression whose value to assign to the parameter.\n\n    or\n\n        XML expression to evaluate and whose value to assign to the parameter.\n\n\nIf the Ant attribute value was never supposed to be evaluated as an expression,\nthen:\n\n1.  The second sentence of the documentation is wrong or is misleading and \n    must be fixed.\n\n2.  The first sentence should say something like:\n\n        string value to assign to the parameter\n\n\n================================================================================\nTest case:\n\nbuild.xml:\n\n<project default=\"default\" >\n\n  <target name=\"default\" >\n\n    <xslt in=\"input.xml\" style=\"transform.xsl\" out=\"output.xml\" >\n      <param name=\"param\" expression=\"1 = 0\" />\n    </xslt>\n\n  </target>\n\n</project>\n\ninput.xml:\n\n<doc>\n</doc>\n\ntransform.xml:\n\n<xsl:transform xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" version=\"1.0\" >\n\n  <xsl:param name=\"param\" />\n\n  <xsl:template match=\"/\" >\n    $param            : <xsl:value-of select=\"$param\" />;\n    $param  = '1 = 0' : <xsl:value-of select=\"$param = '1 = 0'\" />;\n    $param  = (1 = 0) : <xsl:value-of select=\"$param = (1 = 0)\" />;\n\n    1 = 0             : <xsl:value-of select=\"1 = 0\" />;\n    1 = 0   = 1 = 0   : <xsl:value-of select=\"1 = 0 = 1 = 0\" />;\n    1 = 0   = (1 = 0) : <xsl:value-of select=\"1 = 0 = (1 = 0)\" />;\n\n    '1 = 0'           : <xsl:value-of select=\"'1 = 0'\" />;\n    '1 = 0' = '1 = 0' : <xsl:value-of select=\"'1 = 0' = '1 = 0'\" />;\n    '1 = 0' = (1 = 0) : <xsl:value-of select=\"'1 = 0' = (1 = 0)\" />;\n    <xsl:apply-templates />\n  </xsl:template>\n\n</xsl:transform>\n\n\nResulting output.xml:\n\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\n    $param            : 1 = 0;\n    $param  = '1 = 0' : true;\n    $param  = (1 = 0) : false;\n\n    1 = 0             : false;\n    1 = 0   = 1 = 0   : true;\n    1 = 0   = (1 = 0) : true;\n\n    '1 = 0'           : 1 = 0;\n    '1 = 0' = '1 = 0' : true;\n    '1 = 0' = (1 = 0) : false;"}, {"count": 1, "attachment_id": null, "bug_id": 21525, "text": "I have tried your testcase and I could reproduce it.\nSo I have changed the documentation of the style task and the JavaDoc of the \nXSLTProcess class.\nI am closing the bug for now, but if an XML guru wants to throw a look at the \nissue, fine.\nCheers,\nAntoine", "id": 41559, "time": "2003-07-26T16:44:39Z", "creator": "antoine@apache.org", "creation_time": "2003-07-26T16:44:39Z", "tags": [], "is_private": false}, {"count": 2, "tags": [], "bug_id": 21525, "attachment_id": null, "text": "> I have tried your testcase and I could reproduce it.\n\nDid it work the same way on several different XSLT processors?\n\nAlso, do you know if the the XSLT processors take just string \nvalues, or also take expressions?\n", "id": 41569, "time": "2003-07-26T18:13:27Z", "creator": "dsb@smart.net", "creation_time": "2003-07-26T18:13:27Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 21525, "text": "The calls to the XSLTProcessor go through TRAXLiaison.\nThis goes to jaxp.\nI do not know how the 2 other old liaisons behave.", "id": 41574, "time": "2003-07-26T20:35:12Z", "creator": "antoine@apache.org", "creation_time": "2003-07-26T20:35:12Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "creator": "issues.apache.org.db7c0rhii@frantovo.cz", "attachment_id": null, "id": 168117, "time": "2013-06-28T17:32:13Z", "bug_id": 21525, "creation_time": "2013-06-28T17:32:13Z", "is_private": false, "text": "After almost ten years it is time to reopen this bug.\n\nParameters in XSLT can be of many data types, they can be booleans, numbers, nodes etc. not only strings.\n\nCurrent version of Ant supports only strings. And it is problem if you need e.g. boolean to be evaluated in XSLT IF/WHEN.\nIn such case you have to do a workaround in XSTL template like manual casting from string to boolean (which means that you have two different names from one parameter \u2013 different in Ant and different in XSLT)\nor doing test=\"$param = 'true'\" instead of just test=\"$param\".\nOther option is using an XSLT processor which does the some automatic/magic casting for you\ne.g. SaxonB 9.0 \u2013 but this magic stopped working in 9.1 (the magic behaviour is not based on the specification).\n\nSo here is a patch that adds support for several data types. Now you can write for example:\n\n<param name=\"p6\" expression=\"true\" type=\"boolean\"/>\n<param name=\"p6\" expression=\"128\" type=\"int\"/>\n<param name=\"p6\" expression=\"some text\"/>\n\n(default type is string to be compatible with current build.xml files)\n\nAnd in XSL template you will get a property with appropriate data type.\n\nThese types are supported\n\tstring\n\tboolean\n\tint\n\tlong\n\tdouble\n(more can be easily added if needed).\n\nAnd also XPath expressions are supported \u2013 types:\n\txpath:string\n\txpath:boolean\n\txpath:number\n\txpath:node\n\txpath:nodeset\n\nSo you can write e.g.:\n\n<param name=\"p3\" expression=\"64 * 64 div 128 + 10\" type=\"xpath:number\"/>\n\nAnd in XSLT you will get numeric parameter with value 42.\n\nFor more examples please see attached files.\n\nThe XPath expression is evaluated on empty document, not on the transformed document, because it is not available yet.\nDespite that you can compute something useful, call standard XPath functions and also access declared properties from Ant build.xml file.\n\nn.b. if you use ${someParam} in the expression attribute it will by simply substituted by Ant,\nbut if you use $someParam here, the value will be evaluated by XPath processor.\n\nI hope this patch will be useful for other users."}, {"count": 5, "tags": [], "creator": "issues.apache.org.db7c0rhii@frantovo.cz", "attachment_id": 30495, "id": 168118, "time": "2013-06-28T17:33:32Z", "bug_id": 21525, "creation_time": "2013-06-28T17:33:32Z", "is_private": false, "text": "Created attachment 30495\npatch that adds support of several data types and XPath expressions in XSLT parameters"}, {"count": 6, "tags": [], "creator": "issues.apache.org.db7c0rhii@frantovo.cz", "attachment_id": 30496, "id": 168119, "time": "2013-06-28T17:36:03Z", "bug_id": 21525, "creation_time": "2013-06-28T17:36:03Z", "is_private": false, "text": "Created attachment 30496\nexample of usage"}, {"count": 7, "tags": [], "bug_id": 21525, "attachment_id": null, "id": 170024, "time": "2013-09-11T10:57:02Z", "creator": "bodewig@apache.org", "creation_time": "2013-09-11T10:57:02Z", "is_private": false, "text": "I've only got one not-so-small issue with your patch - you change a method signature in XSLTLiaison and thus may break existing implementations outside of Ant.  Right now I don't see a simple way to resolve this, other than introducing an additional interface with a new add method that was implemented by TraxLiaiison and checked by XSLTProcess before setting parameters.\n\nOther than that I'd probably only suggest to use an EnumeratedAttribute for the new type attribute.\n\nAnd of course I'd love to see your examples turned into documentation and tests ;-)"}, {"count": 8, "tags": [], "creator": "mbenson@apache.org", "text": "WRT the EnumeratedAttribute, I would say that since you're intending your changes to go to Ant's main codebase and not an antlib, you may as well use the Java 5 facilities available to you and use a true enum.", "id": 170048, "time": "2013-09-11T18:40:50Z", "bug_id": 21525, "creation_time": "2013-09-11T18:40:50Z", "is_private": false, "attachment_id": null}, {"count": 9, "tags": [], "creator": "issues.apache.org.db7c0rhii@frantovo.cz", "attachment_id": 30928, "text": "Created attachment 30928\nimproved patch - adds XSLTLiaison4 interface for compatibility\n\nMethod addParam(String name, Object value) is now in XSLTLiaison4 interface, not in XSLTLiaison where is only original addParam(String name, String expression)", "id": 170619, "time": "2013-10-15T16:12:52Z", "bug_id": 21525, "creation_time": "2013-10-15T16:12:52Z", "is_private": false}, {"count": 10, "tags": [], "bug_id": 21525, "text": "Created attachment 30929\nimproved patch - ParamType implemented as a true enum\n\nParam types are now upper-case and xpath ones contains _ instead of : character \u2013 e.g. XPATH_STRING", "id": 170623, "time": "2013-10-15T18:49:29Z", "creator": "issues.apache.org.db7c0rhii@frantovo.cz", "creation_time": "2013-10-15T18:49:29Z", "is_private": false, "attachment_id": 30929}, {"count": 11, "tags": [], "bug_id": 21525, "attachment_id": 30943, "text": "Created attachment 30943\nimproved patch - adds documentation and tests", "id": 170680, "time": "2013-10-18T18:56:38Z", "creator": "issues.apache.org.db7c0rhii@frantovo.cz", "creation_time": "2013-10-18T18:56:38Z", "is_private": false}, {"count": 12, "tags": [], "bug_id": 21525, "attachment_id": null, "text": "Please review the latest patch:\n\n - XSLTLiaison4 interface for compatibility\n - ParamType implemented as a true enum\n - documentation\n - tests", "id": 170681, "time": "2013-10-18T18:59:28Z", "creator": "issues.apache.org.db7c0rhii@frantovo.cz", "creation_time": "2013-10-18T18:59:28Z", "is_private": false}, {"count": 13, "tags": [], "bug_id": 21525, "attachment_id": null, "id": 171598, "creation_time": "2013-12-05T18:51:20Z", "time": "2013-12-05T18:51:20Z", "creator": "bodewig@apache.org", "text": "wonderful, your patch has become svn revision 1548237 - with one change, we have a no-@author-tag policy, so I removed the tag from XSLTLiaison4.\n\nThanks a lot for helping us close a ten year old ticket.", "is_private": false}]