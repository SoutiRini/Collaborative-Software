[{"count": 0, "tags": [], "text": "Paser can't read &#12; , &#0; and other special charactor on XML file \nthat is formated UTF-8.", "is_private": false, "id": 7677, "creator": "limbo918@hotmail.com", "time": "2001-11-08T02:20:15Z", "bug_id": 4734, "creation_time": "2001-11-08T02:20:15Z", "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 4734, "attachment_id": null, "id": 7679, "time": "2001-11-08T04:09:00Z", "creator": "gmarcy@us.ibm.com", "creation_time": "2001-11-08T04:09:00Z", "is_private": false, "text": "XML documents must contain legal XML characters, even if presented to the parser \nthrough a character reference.  Here are the relevant parts of the spec.\n\nSection 2.2:\n\nCharacter Range\n\n[2]  Char ::= #x9 | #xA | #xD | [#x20-#xD7FF] | [#xE000-#xFFFD]\n              | [#x10000-#x10FFFF]\n\nSection 4.1:\n\nWell-formedness constraint: Legal Character\n\nCharacters referred to using character references must match the \nproduction for Char.\n\nXML does not provide a mechanism to encode non-text code points.  Such \nmechanisms must be created at a higher level, i.e. the \"application\" from the \nparsers perspective.  This is typically done by using things like base64 \nencoding of character data and some marker, usually a special attribute defined \nto be in a particular namespace, to indicate the such an encoding is present.  \nThere are efforts to standardize such a mechanism, but nothing is available in \nXerces at this time.\n"}]