[{"count": 0, "attachment_id": null, "bug_id": 60615, "text": "When context is configured to auto reload web resources, the call to:\norg.apache.catalina.loader.WebappClassLoaderBase#modified consume huge resources (up to 10%~20%)\n\nafter investigation it seem that the algorithm of this method isn't optimized,\nwe think that instead of looping throughout all loaded classes (resourceEntries.entrySet() : almost classes come from jars =~ 11000 classes) would be better if we loop only throughout classes come from DirResource (WEB-INF/classes =~300 classes).\n\n\nfor more details thanks to mailing me.\n\nThx.", "id": 196238, "time": "2017-01-20T10:03:26Z", "creator": "elghayani.yassine@gmail.com", "creation_time": "2017-01-20T10:03:26Z", "tags": [], "is_private": false}, {"count": 1, "tags": [], "creator": "elghayani.yassine@gmail.com", "attachment_id": 34654, "id": 196239, "time": "2017-01-20T10:31:16Z", "bug_id": 60615, "creation_time": "2017-01-20T10:31:16Z", "is_private": false, "text": "Created attachment 34654\nresource use - apache 8 - with no activite"}, {"count": 2, "tags": [], "bug_id": 60615, "attachment_id": null, "text": "I've looked back at 7.0.x (before the new resource handling was introduced) and that did only check JARs rather than individual classes in JARs.\n\nWhile in theory a class could be modified in a JAR without changing the JAR's timestamp, that wouldn't happen by accident. Therefore, only checking the JAR's timestamp seems reasonable.\n\nI'll take a look at a patch.", "id": 196448, "time": "2017-01-26T10:27:49Z", "creator": "markt@apache.org", "creation_time": "2017-01-26T10:27:49Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 60615, "attachment_id": null, "text": "Thx, indeed this feature in tomcat 7.x work better, and never have any probleme with it.\n\nNB: our prod servers never use reloadable feature, only test env that have this option activated.", "id": 196449, "time": "2017-01-26T10:37:26Z", "creator": "elghayani.yassine@gmail.com", "creation_time": "2017-01-26T10:37:26Z", "is_private": false}, {"count": 4, "tags": [], "creator": "markt@apache.org", "text": "I've put together a possible patch for this:\nhttp://home.apache.org/~markt/patches/2017-01-27-bug60615-tc9-v1.patch\n\nIt does require a change to the WebResource interface as well as to a number of the resource implementation classes. I'm a little concerned about the impact it may have on any custom resource implementations (although I haven't seen any of those).\n\nThe patch also assumes that class loader only resources won't be modified. While that is correct for classes in JAR files, it is possible that a custom implementation could use class loader only resources that could be modified.\n\nWhat is really required is \"does this resource need to be checked for modifications\" flag.\n\nThere is another argument that if a JAR is updated to replace a class file that has not yet been used, then a reload is unnecessary. The current implementation correctly handles this scenario and only by checking individual classes can it be handled correctly. The requested change would break this behaviour.\n\nThe more I think about this, the more I am leaning towards WONTFIX as a solution. Keep in mind that if re-loading is required then it may be a simpler option to update the .class file(s) and then touch web.xml to trigger a reload rather than setting reloadable on the Context.", "id": 196491, "time": "2017-01-27T13:52:30Z", "bug_id": 60615, "creation_time": "2017-01-27T13:52:30Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 60615, "attachment_id": null, "id": 196960, "time": "2017-02-13T14:57:29Z", "creator": "markt@apache.org", "creation_time": "2017-02-13T14:57:29Z", "is_private": false, "text": "Having thought about this some more, closing as WONTFIX as per my previous comment."}]