[{"count": 0, "tags": [], "bug_id": 60970, "attachment_id": 34905, "id": 198236, "time": "2017-04-11T12:52:24Z", "creator": "c.wellekoetter@laudert.de", "creation_time": "2017-04-11T12:52:24Z", "is_private": false, "text": "Created attachment 34905\nA proposal for a fix for the problem.\n\nThe method Http2UpgradeHandler#writeHeaders runs into an endless loop, if the mime headers to send are too long.\n\nGiven following situation: In our web app we add additional states as cookies into our request. This is causing a header amount greater than 1024 bytes. In that case the named method needs to run line 540 (state = getHpackEncoder().encode(coyoteResponse.getMimeHeaders(), target);) at least twice.\n\nOn the first run, the used ByteBuffer will be filled with some data. After that the data are written to the socket output.\nNow the ByteBuffer claims to have zero bytes left to write, because its position is set to its limit.\nThis causes the next call on line 540 to actually do nothing and writing the same data again. And so the loop continues forever until an exception is thrown.\n\nTo fix this problem, the ByteBuffer needs to be reset properly before writing new data to it."}, {"count": 1, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "id": 198265, "time": "2017-04-12T14:28:30Z", "bug_id": 60970, "creation_time": "2017-04-12T14:28:30Z", "is_private": false, "text": "Thanks for the report. That is where things are going wrong but there are additional cases the proposed patch doesn't cover so it has been fixed with an alternative patch.\n\nFixed in:\n- trunk for 9.0.0.M20 onwards\n- 8.5.x for 8.5.14 onwards"}]