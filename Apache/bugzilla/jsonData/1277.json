[{"count": 0, "tags": [], "creator": "cholmes@4d.com", "attachment_id": null, "is_private": false, "id": 1809, "time": "2001-04-09T15:40:45Z", "bug_id": 1277, "creation_time": "2001-04-09T15:40:45Z", "text": "There are many occasions where Apply might be used on an empty \nfileset, and should not fail under that condition.\n\nIn my case, I'm using Apply to run gcc on any source files that are newer \nthan their corresponding object files.   I have four different file sets in my \napply command, any of which (or sometimes all) contain only up-to-date \nfiles (a regex mapper is used to figure out which sources need to be \ncompiled).  When this happens I get a \"no input files\" error and a result \ncode of 1.\n\nIMHO, apply should either 1) not return an error when a fileset is empty or \n2) provide a \"failOnEmptyFileset\" attribute."}, {"count": 1, "tags": [], "text": "Ok, I just realized that a big part of the problem is that gcc returns 1 when \n\nthe fileset is empty -- it isn't exactly a bug with Apply.  (Note to self: knock \n\nself in head with heavy object for 5 minutes this afternoon.)  But I've seen \n\nidentical behavior whenever I run Apply, so this is a common problem.  \n\n\n\nSo I have a new suggestion: provide a \"runOnEmptyFileset\" or similar \n\nattribute which will let you skip the empty ones, thus avoiding these \n\nerrors.\n\n\n\nIn light of this, I'm changing the severity of this bug to \"Enhancement\" (if \n\nthe bugbase lets me).", "is_private": false, "id": 1810, "creator": "cholmes@4d.com", "time": "2001-04-09T15:49:21Z", "bug_id": 1277, "creation_time": "2001-04-09T15:49:21Z", "attachment_id": null}, {"count": 2, "tags": [], "creator": "bodewig@apache.org", "text": "skipemptyfilesets attribute appears first in nightly build of 2001-05-23", "id": 2593, "time": "2001-05-22T03:00:01Z", "bug_id": 1277, "creation_time": "2001-05-22T03:00:01Z", "is_private": false, "attachment_id": null}]