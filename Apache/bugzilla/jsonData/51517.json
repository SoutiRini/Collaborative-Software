[{"count": 0, "tags": [], "text": "Hello,\n\nI'm the maintener and developper behind php-fpm. I've been playing with apache 2.3.12 and FPM and I discover that mod_proxy_fcgi is not RFC 3875 compliant.\n\nAccording to RFC 3875, with the URL 'http://www.mysite.com/path/to/test.php/toto?foo=bar' the following FASTCGI variables must be send to the fastcgi server:\n- SCRIPT_NAME=/path/to/test.php\n- QUERY_STRING=foo=bar\n- PATH_INFO=/toto\n- PATH_TRANSLATED=%{DOCUMENT_ROOT}/toto\n\nI've configured mod_proxy_fcgi this way for my tests:\n\n  DocumentRoot /home/fat/web/docs/php\n  SetEnvIf Request_URI . proxy-fcgi-pathinfo=1\n  ProxyPassMatch ^/(.+\\.php.*)$ fcgi://127.0.0.1:9000/$1\n\nAnd it sends the following FASTCGI variables:\n- SCRIPT_NAME=(empty string)\n- QUERY_STRING=foo=bar\n- PATH_INFO=/path/to/test.php/toto\n- PATH_TRANSLATED=proxy:fcgi://127.0.0.1:9000/path/to/test.php/toto/path/to/test.php/toto\n- DOCUMENT_ROOT=/home/fat/web/docs/php\n- SCRIPT_FILENAME=proxy:fcgi://127.0.0.1:9000/path/to/test.php/toto\n- REQUEST_URI=/path/to/test.php/toto?foo=bar\n\nas you see:\n- SCRIPT_NAME is not set (it's set to /path/to/test.php/toto if proxy-fcgi-pathinfo is not set)\n- QUERY_STRING is set correctly\n- PATH_INFO is not correct as it should be set to '/toto'\n- PATH_TRANSLATED is not correct as it should be set to /home/fat/web/docs/php/toto\n\n- DOCUMENT_ROOT is set correctly even if this variable is not defined in the RFC\n- REQUEST_URI is set correctly even if this variable is not defined in the RFC\n- SCRIPT_FILENAME is set not correctly even if this variable is not defined in the RFC. It should be set to '/home/fat/web/docs/php/path/to/test.php'.\n\nI didn't really checked other fastcgi variables.\n\nThen, I've made the test with the URL 'http://www.mysite.com/path/to/test.php/toto?foo=bar' (I removed the /toto after the script name, which is a more common usage I think). mod_proxy_fcgi should send:\n- SCRIPT_NAME=/path/to/test.php\n- QUERY_STRING=foo=bar\n- PATH_INFO=(empty string)\n(PATH_TRANSLATED must not be send when PATH_INFO is empty)\n\nand it sends with proxy-fcgi-pathinfo:\n- SCRIPT_NAME=(empty string)\n- QUERY_STRING=foo=bar\n- PATH_INFO=/path/to/test.php\n- PATH_TRANSLATED=proxy:fcgi://127.0.0.1:9000/path/to/test.php/path/to/test.php\n- SCRIPT_FILENAME=proxy:fcgi://127.0.0.1:9000/path/to/test.php\n- DOCUMENT_ROOT=/home/fat/web/docs/php\n- REQUEST_URI=/path/to/test.php?foo=bar\n\nor without proxy-fcgi-pathinfo:\n- SCRIPT_NAME=/path/to/test.php\n- QUERY_STRING=foo=bar\n- SCRIPT_FILENAME=proxy:fcgi://127.0.0.1:9000/path/to/test.php\n- DOCUMENT_ROOT=/home/fat/web/docs/php\n- REQUEST_URI=/path/to/test.php?foo=bar\n\n\nThe problem is still the same:\n- proxy-fcgi-pathinfo is buggy (SCRIPT_NAME empty and PATH_INFO/TRANSLATED set to wrong values)\n- SCRIPT_FILENAME is not set correctly (proxy:fcgi://127.0.0.1:9000 should be replace by DOCUMENT_ROOT)\n\nI can make more tests if needed.\n\nI really think mod_proxy_fcgi should be RFC 3875.\n\nHope it helps\n++ jerome", "attachment_id": null, "bug_id": 51517, "id": 147950, "time": "2011-07-16T23:31:52Z", "creator": "ml@fatbsd.com", "creation_time": "2011-07-16T23:31:52Z", "is_private": false}, {"count": 1, "tags": [], "text": "Can you reconfirm w 2.4.x?", "is_private": false, "id": 163120, "creator": "jim@apache.org", "time": "2012-11-01T15:25:11Z", "bug_id": 51517, "creation_time": "2012-11-01T15:25:11Z", "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 51517, "is_private": false, "text": "I use mod_proxy_fcgi along with FPM:\n\nProxyPassMatch ^/(.*\\.php(/.*)?)$ \nfcgi://172.16.0.11:1007/home/admin/domains/domenaadmina.fulo.inten.pl/public_htm\nl/$1 timeout=180\n\nUsing scripts like this:\n/glowna/index.php/aaa/bbb/ccc\n\ncauses _SERVER[\"SCRIPT_NAME\"] to be wrongly evaluated. Instead of \n/glowna/index.php FPM returns \n/glowna/index.php/aaa/bbb/ccc which obviously also destroys _SERVER[\"PHP_SELF\"].\n\nWe've checked it with cgi.fix_pathinfo = 0 (no input file specified error) and \ncgi.fix_pathinfo = 1.\nproxy-fcgi-pathinfo = 1 doesn't help to.\n\n\n\nExpected result:\n----------------\n_SERVER[\"REQUEST_URI\"]\t/glowna/index.php/aaa/bbb/ccc\n_SERVER[\"SCRIPT_NAME\"]\t/glowna/index.php\n_SERVER[\"PATH_INFO\"]\t/aaa/bbb/ccc\n_SERVER[\"ORIG_SCRIPT_FILENAME\"]\t\n/home/admin/domains/domenaadmina.fulo.inten.pl/public_html/glowna/index.php/aaa/bb\nb/ccc\n_SERVER[\"PATH_TRANSLATED\"]\t\n/home/admin/domains/domenaadmina.fulo.inten.pl/public_html/aaa/bbb/ccc\n_SERVER[\"PHP_SELF\"]\t/glowna/index.php/aaa/bbb/ccc\n\nActual result:\n--------------\n_SERVER[\"REQUEST_URI\"]\t/glowna/index.php/aaa/bbb/ccc\n_SERVER[\"SCRIPT_NAME\"]\t/glowna/index.php/aaa/bbb/ccc\n_SERVER[\"PATH_INFO\"]\t/aaa/bbb/ccc\n_SERVER[\"ORIG_SCRIPT_FILENAME\"]\t\n/home/admin/domains/domenaadmina.fulo.inten.pl/public_html/glowna/index.php/aaa/bb\nb/ccc\n_SERVER[\"PATH_TRANSLATED\"]\t\n/home/admin/domains/domenaadmina.fulo.inten.pl/public_html/aaa/bbb/ccc\n_SERVER[\"PHP_SELF\"]\t/glowna/index.php/aaa/bbb/ccc/aaa/bbb/ccc", "id": 166754, "time": "2013-04-22T09:14:26Z", "creator": "admin@3dr.org", "creation_time": "2013-04-22T09:14:26Z", "attachment_id": null}, {"attachment_id": null, "tags": [], "creator": "ml@fatbsd.com", "is_private": false, "count": 3, "id": 167181, "time": "2013-05-13T20:27:33Z", "bug_id": 51517, "creation_time": "2013-05-13T20:27:33Z", "text": "Hi\n\nI've made some more testing using apache 2.4.4.\n\nTo ensure the results were not altered by FPM I've made a very simple perl script which act as a fastcgi server using either TCP or unix socket. It returns all the environment variables apache has sent.\n\nHere is the script:\n#!/usr/bin/perl\nuse FCGI;\nuse Socket;\nuse FCGI::ProcManager;\nuse Data::Dumper;\n\n$num_args = $#ARGV + 1;\nif ($num_args != 1) {\n  print \"\\nUsage: fcgi.pl <socket>\\n\";\n  exit 1;\n}\n\n$proc_manager = FCGI::ProcManager->new( {n_processes => 1} );\n$socket = FCGI::OpenSocket( $ARGV[0], 10 )\n$request = FCGI::Request( \\*STDIN, \\*STDOUT, \\*STDERR, \\%req_params, $socket, &FCGI::FAIL_ACCEPT_ON_INTR );\n$proc_manager->pm_manage();\nif ($request) {\n  while ( $request->Accept() >= 0 ) {\n    $proc_manager->pm_pre_dispatch();\n    print(\"Content-type: text/plain\\r\\n\\r\\n\");\n    print Dumper(\\%req_params);\n  }\n}\nFCGI::CloseSocket($socket);\n\nHere are the results I got with different configurations\n\n\n*** request /test.php?N=1\n*** using ProxyPassMatch ^/(.*\\.php(/.*)?)$ fcgi://127.0.0.1:9000/$1\n*** without proxy-fcgi-pathinfo\n          'SCRIPT_NAME' => '/test.php',\n          'PATH_INFO' => UNSET,\n          'SCRIPT_FILENAME' => 'proxy:fcgi://127.0.0.1:9000/test.php',\n          'QUERY_STRING' => 'N=1',\n          'SCRIPT_URL' => '/test.php',\n          'DOCUMENT_ROOT' => '/usr/local/apache-2.4/htdocs',\n          'PATH_TRANSLATED' => UNSET,\n          'SCRIPT_URI' => UNSET,\n          'REQUEST_URI' => '/test.php?N=1',\n\n*** request /test.php/more?N=1\n*** using ProxyPassMatch ^/(.*\\.php(/.*)?)$ fcgi://127.0.0.1:9000/$1\n*** without proxy-fcgi-pathinfo\n          'SCRIPT_NAME' => '/test.php/more',\n          'PATH_INFO' => UNSET,\n          'SCRIPT_FILENAME' => 'proxy:fcgi://127.0.0.1:9000/test.php/more',\n          'QUERY_STRING' => 'N=1',\n          'SCRIPT_URL' => '/test.php/more',\n          'DOCUMENT_ROOT' => '/usr/local/apache-2.4/htdocs',\n          'PATH_TRANSLATED' => UNSET,\n          'SCRIPT_URI' => UNSET,\n          'REQUEST_URI' => '/test.php/more?N=1',\n\n*** request /test.php?N=1\n*** using ProxyPassMatch ^/(.*\\.php(/.*)?)$ fcgi://127.0.0.1:9000/$1\n*** with proxy-fcgi-pathinfo\n          'SCRIPT_NAME' => '',\n          'PATH_INFO' => '/test.php',\n          'SCRIPT_FILENAME' => 'proxy:fcgi://127.0.0.1:9000/test.php',\n          'QUERY_STRING' => 'N=1',\n          'SCRIPT_URL' => UNSET,\n          'DOCUMENT_ROOT' => '/usr/local/apache-2.4/htdocs',\n          'PATH_TRANSLATED' => 'proxy:fcgi://127.0.0.1:9000/test.php/test.php',\n          'SCRIPT_URI' => UNSET,\n          'REQUEST_URI' => '/test.php?N=1',\n\n*** request /test.php/more?N=1\n*** using ProxyPassMatch ^/(.*\\.php(/.*)?)$ fcgi://127.0.0.1:9000/$1\n*** with proxy-fcgi-pathinfo\n          'SCRIPT_NAME' => '',\n          'PATH_INFO' => '/test.php/more',\n          'SCRIPT_FILENAME' => 'proxy:fcgi://127.0.0.1:9000/test.php/more',\n          'QUERY_STRING' => 'N=1',\n          'SCRIPT_URL' => UNSET,\n          'DOCUMENT_ROOT' => '/usr/local/apache-2.4/htdocs',\n          'PATH_TRANSLATED' => 'proxy:fcgi://127.0.0.1:9000/test.php/more/test.php/more',\n          'SCRIPT_URI' => UNSET,\n          'REQUEST_URI' => '/test.php/more?N=1',\n\n*** request /test.php?N=1\n*** using RewriteRule ^/(.*\\.php(/.*)?)$ fcgi://127.0.0.1:9000/$1 [P]\n*** without proxy-fcgi-pathinfo\n          'SCRIPT_NAME' => '/test.php',\n          'PATH_INFO' => UNSET,\n          'SCRIPT_FILENAME' => 'proxy:fcgi://127.0.0.1:9000/test.php',\n          'QUERY_STRING' => 'N=1',\n          'SCRIPT_URL' => '/test.php',\n          'DOCUMENT_ROOT' => '/usr/local/apache-2.4/htdocs',\n          'PATH_TRANSLATED' => UNSET,\n          'SCRIPT_URI' => 'http://my.test.com/test.php',\n          'REQUEST_URI' => '/test.php?N=1',\n\n*** request /test.php/more?N=1\n*** using RewriteRule ^/(.*\\.php(/.*)?)$ fcgi://127.0.0.1:9000/$1 [P]\n*** without proxy-fcgi-pathinfo\n          'SCRIPT_NAME' => '/test.php/more',\n          'PATH_INFO' => UNSET,\n          'SCRIPT_FILENAME' => 'proxy:fcgi://127.0.0.1:9000/test.php/more',\n          'QUERY_STRING' => 'N=1',\n          'SCRIPT_URL' => '/test.php/more',\n          'DOCUMENT_ROOT' => '/usr/local/apache-2.4/htdocs',\n          'PATH_TRANSLATED' => UNSET,\n          'SCRIPT_URI' => 'http://my.test.com/test.php/more',\n          'REQUEST_URI' => '/test.php?N=1',\n\n*** request /test.php?N=1\n*** using RewriteRule ^/(.*\\.php(/.*)?)$ fcgi://127.0.0.1:9000/$1 [P]\n*** with proxy-fcgi-pathinfo\n          'SCRIPT_NAME' => '',\n          'PATH_INFO' => '/test.php',\n          'SCRIPT_FILENAME' => 'proxy:fcgi://127.0.0.1:9000/test.php',\n          'QUERY_STRING' => 'N=1',\n          'SCRIPT_URL' => '/test.php',\n          'DOCUMENT_ROOT' => '/usr/local/apache-2.4/htdocs',\n          'PATH_TRANSLATED' => 'proxy:fcgi://127.0.0.1:9000/test.php/test.php',\n          'SCRIPT_URI' => 'http://my.test.com/test.php',\n          'REQUEST_URI' => '/test.php?N=1',\n\n*** request /test.php/more?N=1\n*** using RewriteRule ^/(.*\\.php(/.*)?)$ fcgi://127.0.0.1:9000/$1 [P]\n*** with proxy-fcgi-pathinfo\n          'SCRIPT_NAME' => '',\n          'PATH_INFO' => '/test.php/more',\n          'SCRIPT_FILENAME' => 'proxy:fcgi://127.0.0.1:9000/test.php/more',\n          'QUERY_STRING' => 'N=1',\n          'SCRIPT_URL' => '/test.php',\n          'DOCUMENT_ROOT' => '/usr/local/apache-2.4/htdocs',\n          'PATH_TRANSLATED' => 'proxy:fcgi://127.0.0.1:9000/test.php/more/test.php/more',\n          'SCRIPT_URI' => 'http://my.test.com/test.php/more',\n          'REQUEST_URI' => '/test.php/more?N=1',\n\n\n\nRemarks:\nFor a reminder, the RFC 3875 is available at http://www.ietf.org/rfc/rfc3875.\n\n*** PATH_INFO ***\n    The PATH_INFO variable specifies a path to be interpreted by the CGI\n    script.  It identifies the resource or sub-resource to be returned by\n    the CGI script, and is derived from the portion of the URI path\n    hierarchy following the part that identifies the script itself.\n\nAs I understand it, PATH_INFO should be empty or not set for URL like /test.php and\nshould be set to /more for URL like /test.php/more.\nThat's not what happened with mod_proxy_fcgi. Sometimes it's not set where it should be\n(without proxy-fcgi-pathinfo) and when proxy-fcgi-pathinfo is set, PATH_INFO is always set\nto /test.php or /test.php/more. If we assume that this is a normal behaviour without proxy-fcgi-pathinfo\nthis is a bug when proxy-fcgi-pathinfo is set.\n\n*** PATH_TRANSLATED ***\n    The PATH_TRANSLATED variable is derived by taking the PATH_INFO\n    value, parsing it as a local URI in its own right, and performing any\n    virtual-to-physical translation appropriate to map it onto the\n    server's document repository structure.\n    This is the file location that would be accessed by a request for\n      <scheme> \"://\" <server-name> \":\" <server-port> <extra-path>\n    where <scheme> is the scheme for the original client request and\n    <extra-path> is a URL-encoded version of PATH_INFO, with \";\", \"=\" and\n    \"?\"  reserved.\n\nAs I understand it, PATH_TRANSLATED is forged from PATH_INFO:\nmap_to_physical(http://<server_name>:<server_port>/PATH_INFO) which should result\nin my test case (/test.php/more with DOCUMENT_ROOT set to /usr/local/apache-2.4/htdocs) to\nPATH_TRANSLATED=/usr/local/apache-2.4/htdocs/more\nBut PATH_TRANSLATED is always an url begining with proxy:fcgi:// and the script name (/test.php)\nis also included. Moreover, the script_url (/test.php/more) appears twice in PATH_TRANSLATED.\n\n*** QUERY_STRING ***\nit is set correctly in all the case.\n\n*** SCRIPT_NAME ***\nThe SCRIPT_NAME variable MUST be set to a URI path (not URL-encoded)\n    which could identify the CGI script (rather than the script's\n    output).  The syntax is the same as for PATH_INFO (section 4.1.5)\n      SCRIPT_NAME = \"\" | ( \"/\" path )\n    The leading \"/\" is not part of the path.  It is optional if the path\n    is NULL; however, the variable MUST still be set in that case.\n    The SCRIPT_NAME string forms some leading part of the path component\n    of the Script-URI derived in some implementation-defined manner.  No\n    PATH_INFO segment (see section 4.1.5) is included in the SCRIPT_NAME\n    value.\n\nAs I understand it, SCRIPT_NAME must always identifies the CGI script. In my\ntest SCRIPT_NAME should be set to /test.php in all the case. This is not the case.\nWhen proxy-fcgi-pathinfo is set, SCRIPT_NAME is always empty.\nWhen proxy-fcgi-pathinfo is not set, SCRIPT_NAME always include what should be the \nPATH_INFO (/more): /test.php/more instead of /test.php\n\n*** DOCUMENT_ROOT ***\nEven if it's not defined in the RFC, the value is consistent in my tests and\nthe value is correct.\n\n*** REQUEST_URI ***\nEven if it's not defined in the RFC, the value is consistent in my tests and\nthe value is correct.\n\n*** SCRIPT_URI and SCRIPT_URL ***\nThose variables are set when using RewriteRule and are not set when using ProxyPass.\nEven if they are not defined in the RFC, the values seems correct when RewriteRule is used.\n\n*** SCRIPT_FILENAME ***\nEven if it's not defined in the RFC, the value is consistent in my tests. The value is an\nURI which does not make sense to me as the variable is named FILENAME. For me, the value should\nbe set to DOCUMENT_ROOT + SCRIPT_NAME.\n\n\nFor me, mod_fcgi does not respect the corresponding RFC and it makes fastcgi servers complex to match with apache fastcgi client implementation.\n\nPHP-FPM code for fastcgi is a mess and I'm trying to clean all this to make something consistent. But apache implementations (mod_fastcgi or mod_proxy_fcgi) make me do some very complex and dirty hacks to make things right. I would be greatful if apache mod_proxy_fcgi can be RFC compliant, not only for FPM but also for others fastcgi servers.\n\nHope this comment is not too long or too messy.\nHope it helps make things smoother :-)\n\n++ Jerome"}, {"count": 4, "tags": [], "text": "Hi,\n\nI got the same problem when i configure Apache 2.4.4 with PHP-FPM (both last versions of PHP releases, 5.3.25 and 5.4.15).\n\nEach vhost of Apache has a dedicate pool of PHP-FPM with chroot, own resources and other settings.\nOn the vhost mod_proxy_fcgi work well on a single php file like info.php or any CMS like wordpress, joomla and vbulletin without URL SEO rewrite enable.\n\nWhen enable the URL SEO each url like: http://domain.com/index.php/some-articles will break.\nAlso another type of URL seo break (the vBseo of vBulletin 4 platform for forum): http://domain.com/forum/category/thread/\nOn headers response there are a 301 code that redirect to /\n\nWhile my project it's based on a cluster using only PHP-FPM i'm in crisis because i'm unable make working much sites with url rewrite rules that normaly work with old mod_fastcgi and Apache 2.2.22.\n\nMy situation is also same as this http://www.msgerror.com/qid450628.html\nCan i know if there are a bugfix or any workground work in progress?\n\nMany Thanks", "attachment_id": null, "bug_id": 51517, "id": 167743, "time": "2013-06-08T20:18:55Z", "creator": "raffaele.vitiello@gmail.com", "creation_time": "2013-06-08T20:18:55Z", "is_private": false}, {"count": 5, "attachment_id": 32253, "bug_id": 51517, "text": "Created attachment 32253\nPATH_INFO fix for mod_proxy_balancer.c\n\nFixes PATH_INFO env var according to RFC 3875 for mod_proxy_balancer.c", "id": 179459, "time": "2014-12-02T22:16:05Z", "creator": "stefan@whocares.de", "creation_time": "2014-12-02T22:16:05Z", "tags": [], "is_private": false}, {"attachment_id": 32254, "tags": [], "creator": "stefan@whocares.de", "is_private": false, "count": 6, "id": 179460, "time": "2014-12-02T22:16:57Z", "bug_id": 51517, "creation_time": "2014-12-02T22:16:57Z", "text": "Created attachment 32254\nPATH_INFO fix for mod_proxy_fcgi.c\n\nFixes PATH_INFO according to RFC 3875 for mod_proxy_fcgi.c"}, {"count": 7, "tags": [], "bug_id": 51517, "attachment_id": null, "text": "J\u00e9r\u00f4me,\n\nI don't know whether you're still following this issue but I ran into the same problem recently.\n\nWhen trying to build a fix I found that by fixing the PATH_INFO issue all other problems you found and described went away, too. The only \"problem\" that is still left is that my current patch set doesn't produce a clean SCRIPT_NAME but rather leaves the PATH_INFO portion in the string. Personally I think one could live with that but of course I'd like your input on that. If you think that absolute adherence to RFC 3875 is necessary I could try to dive deeper into the code.\n\nAnyway, I'd be happy if you could test the attached patches (ugly code, I know. It's currently more a proof of concept than an actual patch) and let me know what you think.\n\n-Stefan", "id": 179462, "time": "2014-12-02T22:18:36Z", "creator": "stefan@whocares.de", "creation_time": "2014-12-02T22:18:36Z", "is_private": false}, {"count": 8, "attachment_id": null, "bug_id": 51517, "text": "Hi,\n\nI did not review your patch as I'm not confortable with apache code.\n\nBut if the only problem is the PATH_INFO which include the SCRIPT_NAME, that is not big deal. Not so many users uses PATH_INFO. It would be acceptable comparing to the current situation which is messy.\n\nIt's been a while since this bug has been opened and I don't have time to setup a full environment for testing right now.\n\nBut thx for your effort, it's good to see someone trying to take care of this problem.", "id": 179464, "time": "2014-12-02T22:34:22Z", "creator": "ml@fatbsd.com", "creation_time": "2014-12-02T22:34:22Z", "tags": [], "is_private": false}, {"count": 9, "tags": [], "creator": "stefan@whocares.de", "attachment_id": null, "text": "J\u00e9r\u00f4me,\n\nRight now it's the other way round. PATH_INFO is correct while SCRIPT_NAME isn't 100% correct. An example:\n\nIf I call http://127.0.0.1/this/is/my/test.php/more/path/info?var=1234\n\nthe (shortened) output of the perl script you used will be:\n\n=== Proxy Balancer ===\n\n$VAR1 = {\n          'SCRIPT_NAME' => '/this/is/my/test.php/more/path/info',\n          'PATH_INFO' => '/more/path/info?var=1234',\n          'SCRIPT_FILENAME' => 'proxy:balancer://php5fpm/var/www/html/this/is/my/test.php/more/path/info?var=1234',\n          'SERVER_SOFTWARE' => 'Apache/2.4.10 (Debian)',\n          'QUERY_STRING' => 'var=1234',\n          'BALANCER_WORKER_NAME' => 'fcgi://127.0.0.1:9000/',\n          'DOCUMENT_ROOT' => '/var/www/html',\n          'PATH_TRANSLATED' => '/var/www/html/more/path/info?var=1234',\n          'REQUEST_URI' => '/this/is/my/test.php/more/path/info?var=1234',\n        };\n\n\n=== Proxy FCGI ===\n\n$VAR1 = {\n          'SCRIPT_NAME' => '/this/is/my/test.php/more/path/info',\n          'PATH_INFO' => '/more/path/info?var=1234',\n          'SCRIPT_FILENAME' => 'proxy:fcgi://127.0.0.1:9000/this/is/my/test.php/more/path/info',\n          'SERVER_SOFTWARE' => 'Apache/2.4.10 (Debian)',\n          'QUERY_STRING' => 'var=1234',\n          'DOCUMENT_ROOT' => '/var/www/html',\n          'PATH_TRANSLATED' => '/var/www/html/more/path/info?var=1234',\n          'REQUEST_URI' => '/this/is/my/test.php/more/path/info?var=1234',\n        };\n\nThe main question is whether PHP-FPM could \"live\" with that state of the SCRIPT_NAME env var and whether the others would be fine. I guess I could fix SCRIPT_NAME as well if need be.\n\nAs for the prefixing of SCRIPT_FILENAME with \"proxy:(fcgi|balancer):\": Looking at the Apache code I think I see why they're doing it and I think they do it wrong for the wrong reasons: It looks like Apache is trying to determine whether an incoming request actually is a proxy request using these prefixes and if it isn't while Apache is in the \"mod_proxy_*\" execution path, a request will be declined. Personally I disagree with this behavior because imo any request that comes in should be served as long it is a valid HTTP 1.0/1.1 request. But since I think it will be hard to convince the Apache project of that view and since there's already a fix for the the \"proxy:fcgi:\" route in PHP-FPM I guess it would be easier to also fix the \"proxy:balancer:\" stuff on PHP's side.\n\n-Stefan", "id": 179476, "time": "2014-12-03T10:23:57Z", "bug_id": 51517, "creation_time": "2014-12-03T10:23:57Z", "is_private": false}, {"count": 10, "tags": [], "bug_id": 51517, "attachment_id": null, "id": 179477, "time": "2014-12-03T10:28:55Z", "creator": "ml@fatbsd.com", "creation_time": "2014-12-03T10:28:55Z", "is_private": false, "text": "Hi,\n\napache code is a mess and as a consequence PHP-FPM code concerning fcgi variables is a mess too.\n\nSince nobody from apache wants to take care of this problem I won't add more dirty tricks in PHP-FPM code. If you want to use PHP-FPM, stop using apache as it sucks and use nginx instead. It's simple, faster and has always been working as expected.\n\nI can't say more :-)\n\ngood luck with your patch because after developping you'll have to submit it to the apache project. Maybe it'll be done before 2020 :-)\n\nmy 2 cents"}, {"attachment_id": null, "tags": [], "creator": "covener@gmail.com", "is_private": false, "count": 11, "id": 179482, "time": "2014-12-03T14:14:01Z", "bug_id": 51517, "creation_time": "2014-12-03T14:14:01Z", "text": "It seems to me the problem with all of these related variables is that mod_proxy does not map requests to any file, so there is no reasonable split between the script name and path info.\n\nIf you configure mod_proxy_fcgi with the \"handler\" method documented here:\n\nhttp://httpd.apache.org/docs/current/mod/mod_proxy_fcgi.html#examples\n\nThen the core of apache does map the file and does seem to set reasonable SCRIPT_FILENAME and PATH_INFO (at least by desk checking in comparison to the totally wrong values in this PR).\n\nCan someone with a better eye for this at least confirm so we can get it documented for the time being?"}, {"count": 12, "tags": [], "creator": "covener@gmail.com", "attachment_id": null, "text": "arg, ignore my last comment -- I wasn't using the mock server so result cannot be trusted.", "id": 179483, "time": "2014-12-03T14:23:27Z", "bug_id": 51517, "creation_time": "2014-12-03T14:23:27Z", "is_private": false}, {"count": 13, "tags": [], "text": "> apache code is a mess and as a consequence PHP-FPM code concerning fcgi\n> variables is a mess too.\n\nActually, the main problem (as I see it) were two \"thinkos\" in the relevant code. The first (as Eric mentions in his comment above) is that there's no mapping to an actual handler/file extension when using mod_proxy_*.\nAnd since there's no mapping, mod_proxy_* indeed has no way of determining where the SCRIPT_NAME ends and the PATH_INFO starts.\n\nMy code fixes this by \"assuming\" that anything that contains a dot (\".\") has to be a file name and thus marks the \"handler\". Consequently, everything after the dot starting with a slash (\"/\") or a question mark (\"?\") is considered to be the \"PATH_INFO\". While this is ugly and clearly a hack, it most certainly reflects the reality on the vast majority of web sites out there. The cleaner solution would be to go through to the list of defined handlers and check whether on of those is present in the URL. However, I decided to sacrifice thoroughness for speed in this particular case.\n\nThe second \"thinko\" can be found in util_script.c (I have another patch coming up for that). Here the original idea obviously was to compare the request URI against the PATH_INFO and use the result as SCRIPT_NAME. However, the author seemingly overlooked that the URI passed to the function is already stripped of the GET parameters while the PATH_INFO is not. So the comparison would always fail and thus return a wrong SCRIPT_NAME.\n\n> Since nobody from apache wants to take care of this problem I won't add more\n> dirty tricks in PHP-FPM code. \n\nI see your point there, but in this case it would be just one line that would need to be modified a bit if I remember correctly. I hacked support for \"proxy:balancer:\"  into the PHP-FPM we're using so actually this was a request for the benefit of other users, not for me.\n\n> If you want to use PHP-FPM, stop using apache\n> as it sucks and use nginx instead. It's simple, faster and has always been\n> working as expected.\n\nActually I am using Nginx (which btw doesn't conform to RFC 3875 either) on most of our servers. However, there are some edge cases where I need to use Apache and for those cases it would be nice to be able to use mod_proxy_balancer instead of libphp5. That's why I worked on this issue. I posted my solution to your issue so others can profit from it even in the more than likely case that the Apache project will reject the patches ;)\n\n> good luck with your patch because after developping you'll have to submit it\n> to the apache project. Maybe it'll be done before 2020 :-)\n\nAs said above I don't really care whether my patches are included into a project or not. I just want to make them available so others can use them if they want to.\n\n-Stefan", "attachment_id": null, "bug_id": 51517, "id": 179489, "time": "2014-12-03T20:46:40Z", "creator": "stefan@whocares.de", "creation_time": "2014-12-03T20:46:40Z", "is_private": false}, {"count": 14, "tags": [], "bug_id": 51517, "attachment_id": 32257, "id": 179490, "time": "2014-12-03T20:54:29Z", "creator": "stefan@whocares.de", "creation_time": "2014-12-03T20:54:29Z", "is_private": false, "text": "Created attachment 32257\nCombined Patch for Apache 2.4.10. Contains the other, older patches.\n\nCombined Patch for\n- modules/proxy/mod_proxy_balancer.c\n- modules/proxy/mod_proxy_fcgi.c\n- server/util_script.c\n\nto make Apache's mod_proxy_balancer and mod_proxy_fcgi RFC 3875 compliant."}, {"count": 15, "attachment_id": null, "bug_id": 51517, "text": "(In reply to Eric Covener from comment #11)\n> If you configure mod_proxy_fcgi with the \"handler\" method documented here:\n> http://httpd.apache.org/docs/current/mod/mod_proxy_fcgi.html#examples\n> Then the core of apache does map the file and does seem to set reasonable\n> SCRIPT_FILENAME and PATH_INFO (at least by desk checking in comparison to\n> the totally wrong values in this PR).\n\nYour last comment not withstanding I checked your suggestion with Apache 2.4.10 with and without my patches applied. While your statement seems to be true when used against the Perl script, I found that either version at least for the moment segfaults for me when used on a live site. Both versions seem to work fine when used with simple scripts like, say, phpinfo() and friends.\n\n-Stefan", "id": 179494, "time": "2014-12-03T22:42:55Z", "creator": "stefan@whocares.de", "creation_time": "2014-12-03T22:42:55Z", "tags": [], "is_private": false}, {"count": 16, "attachment_id": null, "bug_id": 51517, "text": "While people are active, can I also point out bug 57087 where apache won't send a cgi-required content length header if it wasn't a required header for http and the client didn't send it (in other words, when transfer-encoding:chunked is used) as this is also an RFC compliance issue", "id": 179501, "time": "2014-12-04T11:59:18Z", "creator": "frymaster@127001.org", "creation_time": "2014-12-04T11:59:18Z", "tags": [], "is_private": false}, {"count": 17, "tags": [], "text": "(In reply to Stefan Rubner from comment #14)\n> Created attachment 32257 [details]\n> Combined Patch for Apache 2.4.10. Contains the other, older patches.\n\nStefan, thanks for the patch and the analysis.  This is closely related to some work I'm doing, so I'll certainly test-drive it this week.\n\nI've been running it configured with AddHandler for PHP-FPM.  I guess from comments here a solution configured this way may behave differently when configured using ProxyPass or (shudder) RewriteRule?", "is_private": false, "id": 179629, "creator": "nick@webthing.com", "time": "2014-12-08T15:54:56Z", "bug_id": 51517, "creation_time": "2014-12-08T15:54:56Z", "attachment_id": null}, {"attachment_id": null, "tags": [], "creator": "ylavic.dev@gmail.com", "is_private": false, "count": 18, "id": 179631, "time": "2014-12-08T16:06:10Z", "bug_id": 51517, "creation_time": "2014-12-08T16:06:10Z", "text": "(In reply to Nick Kew from comment #17)\n> This is closely related to\n> some work I'm doing, so I'll certainly test-drive it this week.\n\nEric has something (more generic) about this too, see http://mail-archives.apache.org/mod_mbox/httpd-dev/201412.mbox/%3CCALK%3DYjPK539aZvskfAP0OhY0d14TeP0KacKbL0FkiYznpmjYQg%40mail.gmail.com%3E"}, {"count": 19, "tags": [], "bug_id": 51517, "attachment_id": null, "text": "(In reply to Nick Kew from comment #17)\n> I've been running it configured with AddHandler for PHP-FPM.  I guess from\n> comments here a solution configured this way may behave differently when\n> configured using ProxyPass or (shudder) RewriteRule?\n\nI would think that using the SetHandler approach together with FilesMatch as documented here:\n\nhttp://httpd.apache.org/docs/current/mod/mod_proxy_fcgi.html#examples\n\ncurrently is the best approach. \n\nHowever, this method is only available from Apache 2.4.10 onward. Also I think that there's another \"thinko\" in the example. Imho it should read <FilesMatch \\.php> (note the missing $) so the handler would also trigger for URIs like /path/to/my.php/with/some/added/stuff?and=vars ;)\n\nThe AddHandler method was the one we were using before, but didn't find a good way to use it together with more than one PHP-FPM instance. That's why I explored the proxy_balancer way combined with fcgi:// BalancerMembers. The good news is that this will alos work with the SetHandler method according to my tests. That said I still have some issues but didn't find the time to do some further testing. Maybe I'll find more time in the next few days.\n\n-Stefan", "id": 179640, "time": "2014-12-08T17:28:26Z", "creator": "stefan@whocares.de", "creation_time": "2014-12-08T17:28:26Z", "is_private": false}, {"count": 20, "tags": [], "text": "> However, this method is only available from Apache 2.4.10 onward. Also I\n> think that there's another \"thinko\" in the example. Imho it should read\n> <FilesMatch \\.php> (note the missing $) so the handler would also trigger\n> for URIs like /path/to/my.php/with/some/added/stuff?and=vars ;)\n\nThis works as-is (\\.php$) because <FilesMatch> is relative to the mapped file not just the text in the URL. In other words, it knows the file is $docroot/ /path/to/my.php w/ PATH_INFO of /with/some/added/stuff an query string and=vars.\n\nI hope to add some balancer examples, and fixes for SCRIPT_FILENAME and PATH_INFO in combination with balancer soon.", "attachment_id": null, "bug_id": 51517, "id": 179643, "time": "2014-12-08T17:39:07Z", "creator": "covener@gmail.com", "creation_time": "2014-12-08T17:39:07Z", "is_private": false}, {"count": 21, "tags": [], "bug_id": 51517, "text": "(In reply to Stefan Rubner from comment #19)\n\n> I would think that using the SetHandler approach together with FilesMatch as\n> documented here:\n> \n> http://httpd.apache.org/docs/current/mod/mod_proxy_fcgi.html#examples\n> \n> currently is the best approach. \n\nThat appears to be fully fixed in trunk and 2.4.10, unless I'm missing something.\nOther configs remain TBD, though trunk/2.4.10 fix most of what the OP here reports.  Other configs, including a RewriteMap use case I'm testing, still need fixing.\n\nHowever, we have another confounding factor with PHP-FPM here: the vars reported by PHP's phpinfo() are themselves 'corrected' from what the server sent.  Though phpinfo's SCRIPT_NAME erroneously contains PATH_INFO.\n\nJ\u00e9r\u00f4me Loyet, are you still here?  Is PHP ready to switch off this autocorrection without troubling the end-users as and when this is fully fixed?", "id": 179828, "time": "2014-12-17T16:07:03Z", "creator": "nick@webthing.com", "creation_time": "2014-12-17T16:07:03Z", "is_private": false, "attachment_id": null}, {"count": 22, "tags": [], "bug_id": 51517, "is_private": false, "text": "Hmm, I wonder if this bug is now relevant again with 2.4.26 breaking `$_SERVER['PHP_SELF']`\n\nSome var_dump()-ing:\n\n/var/www/wordpress.git/wp-includes/vars.php:31:\n\n'REQUEST_URI' => string '/wp-admin/network/plugins.php' (length=29)\n\n2.4.25 ['PHP_SELF']=> string(29) '/wp-admin/network/plugins.php'\n\n2.4.26 ['PHP_SELF'] => string '/plugins.php' (length=12)\n2.4.26 ['SCRIPT_NAME'] => string '/plugins.php' (length=12)\n\nReverting to 2.4.25 obviously fixes things immediately, but what's the right configuration change now for 2.4.26?", "id": 199295, "time": "2017-06-20T14:47:04Z", "creator": "leho@kraav.com", "creation_time": "2017-06-20T14:47:04Z", "attachment_id": null}, {"count": 23, "tags": [], "text": "(In reply to Leho Kraav @lkraav from comment #22)\n\n> Reverting to 2.4.25 obviously fixes things immediately, but what's the right\n> configuration change now for 2.4.26?\n\nSolution, as unintuitive as it may be, is specifying `ProxyFCGIBackendType GENERIC`.\n\nI guess the follow-up question is, if I'd want to have `ProxyFCGIBackendType` kept as the default `FPM`, what other configuration directives do I then have to adjust?", "is_private": false, "id": 199296, "creator": "leho@kraav.com", "time": "2017-06-20T15:05:47Z", "bug_id": 51517, "creation_time": "2017-06-20T15:05:47Z", "attachment_id": null}]