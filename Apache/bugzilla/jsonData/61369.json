[{"attachment_id": null, "tags": [], "bug_id": 61369, "text": "Tomcat deployed on Windows Server 2012r2 is vulnerable to CVE-2016-0793\n\nAccessing URL : http://<fqdn>/WEB-INF./web.xml will return the web.xml file whereas accessing : http://<fqdn>/WEB-INF/web.xml will not.", "count": 0, "id": 200138, "time": "2017-08-02T00:36:56Z", "creator": "brett@schoppert.com", "creation_time": "2017-08-02T00:36:56Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 61369, "attachment_id": null, "id": 200141, "time": "2017-08-02T08:35:43Z", "creator": "markt@apache.org", "creation_time": "2017-08-02T08:35:43Z", "is_private": false, "text": "As per http://tomcat.apache.org/security.html security vulnerabilities should be reported privately to the Apache Tomcat Security Team - not via the public bug tracker.\n\nReporting vulnerabilities publicly potentially exposes all Tomcat users to the vulnerability until the vulnerability is patched.\n\nUnfortunately, once information on a vulnerability is made public it can't be made private.\n\nGiven the circumstances, we might as well make the best of this and use it as an opportunity to give the Tomcat community an insight into how the Tomcat security team addresses a security vulnerability and keep discussion on this issue in the open. There is one caveat. If, during the investigation, we uncover a separate but related security issue we will keep that information private until that separate issue is resolved.\n\nMy initial reaction to this report is that - knowing how the WEB-INF check is implemented - I'd be surprised if this was valid. The usual way the check is bypassed on Windows is setting allowLinking=true (and setting that on Windows is a configuration error). In this case I don't think that would allow the behaviour seen here. Other possible causes are a poorly configured reverse proxy or an unusual configuration of appBase and docBase\n\nNext steps are to see if the report can be reproduced.\n\nI don't have a Windows Server 2012 R2 install to hand so I have started the process to set one up.\n\nWhile the 2012 R2 ISO is downloading, I tested a clean build of the latest 8.5.x code running on Windows 7 and I do not see this behaviour. i.e. http://localhost:8080/WEB-INF./web.xml returns a 404.\n\nIf I set allowLinking=\"true\" I do see the behaviour described here. That is a surprise. The good news is that that makes this a configuration error. There is a very clear warning in the documentation that setting allowLinking=\"true\" on Windows or any platform with a case insensitive file system will create security issues.\n\nHowever, before resolving this issue as invalid we need to:\n- confirm with the OP that they had set allowLinking=\"true\"\n- figure out why allowLinking=\"true\" allows this particular bypass to occur"}, {"count": 2, "tags": [], "creator": "remm@apache.org", "attachment_id": null, "text": "The canonical path comparison is a last resort safety net. So it's still useful then, that's interesting. If you confirm the behavior, it seems we're good as is, the check is supposed to catch this and prevent trouble (but then a webapp has to be fully packaged as per the specification).", "id": 200142, "time": "2017-08-02T08:51:23Z", "bug_id": 61369, "creation_time": "2017-08-02T08:51:23Z", "is_private": false}, {"count": 3, "tags": [], "text": "The canonical path check is still required to enforce the required case sensitivity.\n\nThe Window APIs, most likely for reasons dating back to how 8.3 filenames were stored [1], ignore trailing periods in file names. That explains why allowLinking=\"true\" enables this vulnerability. As far as the OS APIs are concerned, \"/WEB-INF./web.xml\" is the same as \"/WEB-INF/web.xml\" and setting allowLinking=\"true\" bypasses the additional checks Tomcat performs to ensure an exact match between the requested path and the canonical path.\n\nJust need confirmation from the OP that allowLinking=\"true\" was being used and this issue can be closed.\n\n[1] https://superuser.com/questions/585097/why-does-ntfs-disallow-the-use-of-trailing-periods-in-directory-names", "is_private": false, "bug_id": 61369, "id": 200143, "time": "2017-08-02T09:13:28Z", "creator": "markt@apache.org", "creation_time": "2017-08-02T09:13:28Z", "attachment_id": null}, {"count": 4, "tags": [], "creator": "brett@schoppert.com", "attachment_id": null, "text": "Yes, in this context allowLinking was set to true ... resolving the issue.\n\nThanks for the feedback.", "id": 200150, "time": "2017-08-02T15:38:52Z", "bug_id": 61369, "creation_time": "2017-08-02T15:38:52Z", "is_private": false}, {"attachment_id": null, "tags": [], "bug_id": 61369, "text": "(In reply to Mark Thomas from comment #3)\n> The canonical path check is still required to enforce the required case\n> sensitivity.\n> \n> The Window APIs, most likely for reasons dating back to how 8.3 filenames\n> were stored [1], ignore trailing periods in file names. That explains why\n> allowLinking=\"true\" enables this vulnerability. As far as the OS APIs are\n> concerned, \"/WEB-INF./web.xml\" is the same as \"/WEB-INF/web.xml\" and setting\n> allowLinking=\"true\" bypasses the additional checks Tomcat performs to ensure\n> an exact match between the requested path and the canonical path.\n> \n> Just need confirmation from the OP that allowLinking=\"true\" was being used\n> and this issue can be closed.\n> \n> [1]\n> https://superuser.com/questions/585097/why-does-ntfs-disallow-the-use-of-\n> trailing-periods-in-directory-names\n\nI propose the following:\n\n1. On Windows, check for \"/WEB-INF.\" and any other special paths which are already checked for access.\n\nand/or\n\n2. On Windows, if allowLinking=\"true\", drop a GIANT ERROR to stdout and do a Thread.sleep(5mins) before proceeding with bringing up the server.", "count": 5, "id": 200161, "time": "2017-08-02T20:29:37Z", "creator": "chris@christopherschultz.net", "creation_time": "2017-08-02T20:29:37Z", "is_private": false}]