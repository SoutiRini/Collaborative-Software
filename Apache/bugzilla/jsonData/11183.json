[{"count": 0, "tags": [], "creator": "jburgess@delanotech.com", "attachment_id": null, "text": "When submitting a JSP request in which the value of the LAST parameter on the \nURL ends in a percent sign, Catalina throws a \n\"java.lang.ArrayIndexOutOfBoundsException\" in the parseParameters() method of \norg.apache.catalina.util.RequestUtil. \n\nLooking at the following line from the switch statement, it would seem that the \ncode is assuming there are two more characters after the percent sign:\n\ncase '%':\n    data[ox++] = (byte)((convertHexDigit(data[ix++]) << 4)\n                    + convertHexDigit(data[ix++]));\n\nIf the query string were properly encoded (% -> %25), this wouldn't be an issue.  \nBut if it's not, shouldn't the container handle it better than this exception?", "id": 20209, "time": "2002-07-25T20:51:02Z", "bug_id": 11183, "creation_time": "2002-07-25T20:51:02Z", "is_private": false}, {"count": 1, "tags": [], "text": "If this is failing it is a bug in your code, _not_ a bug in Tomcat.\nPlease read:\n\nhttp://jakarta.apache.org/tomcat/bugreport.html", "is_private": false, "id": 20232, "creator": "glenn@apache.org", "time": "2002-07-26T02:06:27Z", "bug_id": 11183, "creation_time": "2002-07-26T02:06:27Z", "attachment_id": null}, {"count": 2, "tags": [], "text": "This happens in method:\n\npublic static void parseParameters(Map map, byte[] data, String encoding)\nthrows UnsupportedEncodingException\n\nWouldn't this be a good place for this method to throw a\nUnsupportedEncodingException?  That way the calling method can decide how to\nhandle it ( throw an exception, display an error page, etc )\n\nJay wasn't saying this behavior was a bug in Tomcat, but rather that Tomcat\nshould handle it more gracefully.  I agree--I don't think anything the end-user\n could potentially do should cause Tomcat to throw such a low-level exception", "attachment_id": null, "id": 20235, "creator": "x@cs.stanford.edu", "time": "2002-07-26T02:49:10Z", "bug_id": 11183, "creation_time": "2002-07-26T02:49:10Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 11183, "text": "The code isn't there in Tomcat 4.1.x (where the URL decoding code doesn't try to\nhandle encodings), so this will not be fixed.", "id": 20237, "time": "2002-07-26T07:25:08Z", "creator": "remm@apache.org", "creation_time": "2002-07-26T07:25:08Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "text": "I can accept that the latest version doesn't use the same code, so it's not \ngoing to be fixed.  But it IS a bug in the 4.0.4, so let's at least agree to \nthat, and document it, in case someone else runs across it. \n\nFirst, with regards to the suggestion that it was a bug in my code, the error \nmanifested itself when I did the following in my JSP custom tag handler:\n\n        HttpServletRequest req = (HttpServletRequest) pageContext.getRequest();\n        Enumeration names = req.getParameterNames();\n\nAs far as I know, I there's nothing illegal about that. So, I followed the stack \ntrace, and it led to Catalina's RequestUtil.parseParameters(). Unless I'm \ncompletely missing something, you can't write a while loop that checks that \"ix \n< data.length\", then blindly increments \"ix\" THREE times before you check it \nagain:\n\nwhile (ix < data.length) {\n    switch ((char) c) {\n        ...\n        case '%':\n            data[ox++] = (byte)((convertHexDigit(data[ix++]) << 4) +\n                convertHexDigit(data[ix++]));\n            break;\n        ...\n    }\n}\n\nHere's the stack trace too, just for reference.\n\nStarting service Tomcat-Standalone\nApache Tomcat/4.0.4\njava.lang.ArrayIndexOutOfBoundsException\n        at org.apache.catalina.util.RequestUtil.parseParameters(RequestUtil.java\n:517)\n        at org.apache.catalina.util.RequestUtil.parseParameters(RequestUtil.java\n:337)\n        at org.apache.catalina.connector.HttpRequestBase.parseParameters(HttpReq\nuestBase.java:625)\n        at org.apache.catalina.connector.HttpRequestBase.getParameterNames(HttpR\nequestBase.java:723)\n        at org.apache.catalina.connector.RequestFacade.getParameterNames(Request\nFacade.java:165)\n        at com.digarch.tags.DATag.doEndTag(DATag.java:114)\n        at org.apache.jsp.displaytable1$jsp._jspService(displaytable1$jsp.java:1\n24)\n        at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:107)\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:853)\n        at org.apache.jasper.servlet.JspServlet$JspServletWrapper.service(JspSer\nvlet.java:201)\n        at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:3\n81)\n        at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:473)\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:853)\n        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(Appl\nicationFilterChain.java:247)\n        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationF\nilterChain.java:193)\n        at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperV\nalve.java:243)\n        at org.apache.catalina.core.StandardPipeline.invokeNext(StandardPipeline\n.java:566)\n        at org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.jav\na:472)\n        at org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:943)\n\n        at org.apache.catalina.core.StandardContextValve.invoke(StandardContextV\nalve.java:190)\n        at org.apache.catalina.core.StandardPipeline.invokeNext(StandardPipeline\n.java:566)\n        at org.apache.catalina.valves.CertificatesValve.invoke(CertificatesValve\n.java:246)\n        at org.apache.catalina.core.StandardPipeline.invokeNext(StandardPipeline\n.java:564)\n        at org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.jav\na:472)\n        at org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:943)\n\n        at org.apache.catalina.core.StandardContext.invoke(StandardContext.java:\n2347)\n        at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.j\nava:180)\n        at org.apache.catalina.core.StandardPipeline.invokeNext(StandardPipeline\n.java:566)\n        at org.apache.catalina.valves.ErrorDispatcherValve.invoke(ErrorDispatche\nrValve.java:170)\n        at org.apache.catalina.core.StandardPipeline.invokeNext(StandardPipeline\n.java:564)\n        at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.j\nava:170)\n        at org.apache.catalina.core.StandardPipeline.invokeNext(StandardPipeline\n.java:564)\n        at org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.jav\na:472)\n        at org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:943)\n\n        at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineVal\nve.java:174)\n        at org.apache.catalina.core.StandardPipeline.invokeNext(StandardPipeline\n.java:566)\n        at org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.jav\na:472)\n        at org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:943)\n\n        at org.apache.catalina.connector.http.HttpProcessor.process(HttpProcesso\nr.java:1027)\n        at org.apache.catalina.connector.http.HttpProcessor.run(HttpProcessor.ja\nva:1125)\n        at java.lang.Thread.run(Thread.java:536)\n\nJay", "attachment_id": null, "id": 20260, "creator": "jburgess@delanotech.com", "time": "2002-07-26T14:47:05Z", "bug_id": 11183, "creation_time": "2002-07-26T14:47:05Z", "is_private": false}, {"count": 5, "tags": [], "text": "My reference earlier to a bug in your code was a cut n paste error.\nThat comment was meant for a different bug report.\n\nSorry.", "attachment_id": null, "id": 20354, "creator": "glenn@apache.org", "time": "2002-07-29T11:46:34Z", "bug_id": 11183, "creation_time": "2002-07-29T11:46:34Z", "is_private": false}]