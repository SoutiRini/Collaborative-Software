[{"count": 0, "tags": [], "bug_id": 24355, "attachment_id": null, "id": 46671, "time": "2003-11-03T14:16:25Z", "creator": "daniel.shinton@mci.com", "creation_time": "2003-11-03T14:16:25Z", "is_private": false, "text": "This bug is present on both Win32 and Solaris Sparc.\n\nWhen trying to create a spreadsheet with over 8215 datapoints, the resultant \nxls file becomes corrupt. Excel attempts to repair the document, but some of \nthe data at the end of the file is lost. The following are the maximum sizes of \nspreadsheets I could create w/o corruption:\n\n8215 rows, 1 column\n4107 rows, 2 columns\n2738 rows, 3 columns\n\nI am using JDK 1.4.2. I am using Excel 2002 SP-2.\n\nThe following is the code I used to produce the problem:\n\n    public void createFile(String filename, int height, short width) throws \nException {\n        FileOutputStream fileOut = new FileOutputStream(filename);\n        \n        HSSFWorkbook wb;\n        HSSFSheet sheet;\n        HSSFRow row;\n        HSSFCell cell;\n        \n        int counter = 0;\n        \n        wb = new HSSFWorkbook();\n        sheet = wb.createSheet(\"Test sheet\");\n        \n        for (int i = 0; i < height; ++i) {\n            row = sheet.createRow(i);\n                       \n            for (short s = 0; s < width; ++s) {\n                ++counter;\n                \n                cell = row.createCell(s);\n                cell.setCellValue(String.valueOf(counter));\n            }\n        }\n        \n        wb.write(fileOut);\n        fileOut.close();        \n    }"}, {"count": 1, "tags": [], "bug_id": 24355, "attachment_id": null, "id": 46688, "time": "2003-11-03T17:54:20Z", "creator": "avik@apache.org", "creation_time": "2003-11-03T17:54:20Z", "is_private": false, "text": "This has been fixed in 2.0RC1. But thanks for a pretty well researched bug report!\n\n*** This bug has been marked as a duplicate of 15375 ***"}]