[{"count": 0, "tags": [], "creator": "louis.burton@gmail.com", "attachment_id": null, "id": 189229, "time": "2016-03-07T20:37:17Z", "bug_id": 59139, "creation_time": "2016-03-07T20:37:17Z", "is_private": false, "text": "The following function is supposed to identify old applications deployed using parallel deployment:\norg.apache.catalina.startup.HostConfig#checkUndeploy\n\nThe application names are qualified with a '##' and a version identifier. This would often be expected to be numeric. However, comparison is done using a TreeSet:\n\n        // Need ordered set of names\n        SortedSet<String> sortedAppNames = new TreeSet<>();\n\nThis will result in alphabet ordering. 'myApp##9' will be considered newer than 'myApp##10'. This does not seem sensible or intuitive to me.\n\nThis can be worked around by ensuring zero padding or otherwise guaranteeing lexicographical ordering."}, {"count": 1, "tags": [], "bug_id": 59139, "attachment_id": null, "id": 189230, "creation_time": "2016-03-07T20:40:01Z", "time": "2016-03-07T20:40:01Z", "creator": "markt@apache.org", "text": "This is working as designed. The documentation for parallel deployment makes clear that versions are ordered using Strign ordering and that zero padding should be used if using a purely numerical scheme.", "is_private": false}, {"count": 2, "tags": [], "text": "Thanks for clarifying.\nApologies, I was looking at the documentation for 'undeployOldVersions' and didn't see reference to this:\nhttp://tomcat.apache.org/tomcat-8.0-doc/config/host.html\n\nI see it explained explicitly here:\nhttp://tomcat.apache.org/tomcat-8.0-doc/config/context.html#Naming", "is_private": false, "id": 189235, "creator": "louis.burton@gmail.com", "time": "2016-03-07T21:05:58Z", "bug_id": 59139, "creation_time": "2016-03-07T21:05:58Z", "attachment_id": null}]