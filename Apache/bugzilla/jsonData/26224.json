[{"count": 0, "tags": [], "bug_id": 26224, "attachment_id": null, "id": 50684, "time": "2004-01-17T23:07:43Z", "creator": "hallorant@acm.org", "creation_time": "2004-01-17T23:07:43Z", "is_private": false, "text": "This is minor patch to BoundedFIFO and AsyncAppender to:\n\n(1) make the resize() method in BoundedFIFO follow a \"transaction\" threading\npolicy (i.e., require a lock on the BoundedFIFO object and allow other calls\nwithin a critical section).\n\n(2) make the public API \"setBufferSize\" in AsyncAppender send a notify() to the\n\"bf\" BoundedFIFO IF the FIFO was full and the size increased.  The result is\nthat  a possibly blocked append() method awakes right away without having to\nwait for the Dispatcher.\n\nI think this change represents a better approach to the interaction between\nAsyncAppender and BoundedFIFO.  Myself and Aaron Greenhouse spotted this with\nsome Java concurrency assurance research tools at CMU (see\nhttp://www.fluid.cs.cmu.edu ).  Hope this helps in (albeit) a small way :-)\n\nI'd also highly recommend changing (in AsyncAppender):\n\n  /**\n   * Returns the current value of the <b>BufferSize</b> option.\n   */\n  public int getBufferSize() {\n    return bf.getMaxSize();\n  }\n\nto\n\n  /**\n   * Returns the current value of the <b>BufferSize</b> option.\n   */\n  public int getBufferSize() {\n    synchronized (bf) {\n      return bf.getMaxSize();\n    }\n  }\n\nWhich more faithfully reflects the BoundedFIFO locking policy.  I think Aaron\nGreenhouse has already suggested this change."}, {"count": 1, "tags": [], "bug_id": 26224, "attachment_id": 9997, "id": 50685, "time": "2004-01-17T23:09:00Z", "creator": "hallorant@acm.org", "creation_time": "2004-01-17T23:09:00Z", "is_private": false, "text": "Created attachment 9997\nPatch described above"}, {"count": 2, "tags": [], "creator": "ceki@apache.org", "attachment_id": null, "id": 50701, "time": "2004-01-18T18:36:52Z", "bug_id": 26224, "creation_time": "2004-01-18T18:36:52Z", "is_private": false, "text": "testing"}, {"count": 3, "tags": [], "bug_id": 26224, "is_private": false, "text": "Comment about getBufferSize was previously reported as Bug #23517", "id": 51471, "time": "2004-01-30T14:58:42Z", "creator": "aarong@cs.cmu.edu", "creation_time": "2004-01-30T14:58:42Z", "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 26224, "attachment_id": null, "id": 51472, "time": "2004-01-30T14:59:49Z", "creator": "aarong@cs.cmu.edu", "creation_time": "2004-01-30T14:59:49Z", "is_private": false, "text": "Oops, correction: Comment about getBufferSize was previously reported as Bug #23912"}, {"count": 5, "tags": [], "bug_id": 26224, "attachment_id": null, "id": 53411, "time": "2004-03-04T04:20:39Z", "creator": "hallorant@acm.org", "creation_time": "2004-03-04T04:20:39Z", "is_private": false, "text": "Umm, looking into this further there is a possibility of \"wait\"-lock here. \nQuestion: From the code, as I understand it, Many threads invoke AsyncAppender\n(which queues events) and one Dispacher thread (reads events)...is this correct?\n\nThe problem is the use of \"notify()\" which could wake up (one of possibly many)\nwaiting AsyncAppender \"wait()\"ing threads rather than the (desired) Dispatcher\nafter a resize().  Some test cases I generated (with a sleep inserted in\nDispatcher) can cause the \"wait\"-lock."}, {"count": 6, "tags": [], "text": "The modifications to AsyncAppender for bug 38982 eliminate use of BoundedFIFO\nthough it is left in the jar file for binary compatibility.  In addition, the\ncode was with the intent to address the deadlock possibilities observed in this\nbug report and others.  However, I was not successful in developing a unit test\nthat would deadlock.  If anyone has a unit test that will deadlock with the\nprevious code, it would be helpful.\n\nI'm marking this bug as a duplicate of 38137 despite the fact this bug was\nlogged almost 2 years earlier since the remaining issue from previous comment\nhas been more fully discussed there.\n\n*** This bug has been marked as a duplicate of 38137 ***", "is_private": false, "id": 86894, "creator": "carnold@apache.org", "time": "2006-03-16T06:21:22Z", "bug_id": 26224, "creation_time": "2006-03-16T06:21:22Z", "attachment_id": null}]