[{"attachment_id": null, "tags": [], "creator": "peterreilly@apache.org", "is_private": false, "count": 0, "id": 99498, "time": "2007-02-16T10:25:24Z", "bug_id": 41647, "creation_time": "2007-02-16T10:25:24Z", "text": "A bug has been reported against ant-contrib's assert task. On\nchecking, it seems that since ant.1.6.0 ConditionBase and TaskContainer\nto not work together.\n\nThe following works for ant1.5.4,ant1.6.0,2,5,ant1.7.0:\n\npublic class Adapt implements TaskContainer {\n    private List<Task> tasks = new ArrayList<Task>();\n\n    public void addTask(Task task) {\n        tasks.add(task);\n    }\n\n    public void execute() {\n        for (Task t: tasks) {\n            t.perform();\n        }\n    }\n}\n    <taskdef name=\"ad\" classpath=\"build\"\n             classname=\"Adapt\"/>\n    <ad>\n      <echo>Hello</echo>\n    </ad>\n\n\nThe following only works in ant 1.5.4:\npublic class ConditionRun extends ConditionBase implements TaskContainer {\n    private List<Task> tasks = new ArrayList<Task>();\n\n    public void addTask(Task task) {\n        tasks.add(task);\n    }\n\n    public void execute() {\n        for (Task t: tasks) {\n            t.perform();\n        }\n    }\n}\n    <taskdef name=\"conditionrun\" classpath=\"build\"\n             classname=\"ConditionRun\"/>\n    <conditionrun>\n      <echo>Hello</echo>\n    </conditionrun>\n\nFor ant1.6.0 and above one gets the message:\nClass ConditionRun doesn't support the nested \"echo\" element.\n\nThe build.xml showing the problem is:\n<project name=\"adapt\" default=\"run\">\n  <target name=\"bootstrap\">\n    <mkdir dir=\"src\"/>\n    <echo file=\"src/Adapt.java\">\nimport org.apache.tools.ant.*;\nimport java.util.*;\n\npublic class Adapt implements TaskContainer {\n    private List&lt;Task> tasks = new ArrayList&lt;Task>();\n\n    public void addTask(Task task) {\n        tasks.add(task);\n    }\n\n    public void execute() {\n        for (Task t: tasks) {\n            t.perform();\n        }\n    }\n}\n    </echo>\n    <echo file=\"src/ConditionRun.java\">\nimport org.apache.tools.ant.*;\nimport org.apache.tools.ant.taskdefs.condition.*;\nimport java.util.*;\n\npublic class ConditionRun extends ConditionBase implements TaskContainer {\n    private List&lt;Task> tasks = new ArrayList&lt;Task>();\n\n    public void addTask(Task task) {\n        tasks.add(task);\n    }\n\n    public void execute() {\n        for (Task t: tasks) {\n            t.perform();\n        }\n    }\n}\n    </echo>\n  </target>\n  <target name=\"build\">\n    <mkdir dir=\"build\"/>\n    <javac debug=\"yes\"\n           target=\"1.5\"\n           source=\"1.5\"\n           destdir=\"build\"\n           srcdir=\"src\"/>\n  </target>\n\n  <target name=\"clean\">\n    <delete dir=\"build\"/>\n  </target>\n\n  <target name=\"run\" depends=\"build\">\n    <taskdef name=\"ad\" classpath=\"build\"\n             classname=\"Adapt\"/>\n    <ad>\n      <echo>Hello</echo>\n    </ad>\n    <taskdef name=\"conditionrun\" classpath=\"build\"\n             classname=\"ConditionRun\"/>\n    <conditionrun>\n      <echo>Hello</echo>\n    </conditionrun>\n  </target>\n\n  <target name=\"wipe\" depends=\"clean\">\n    <delete dir=\"src\"/>\n  </target>\n\n\n</project>\n\nuse: ant bootstrap to create the source files\n     ant  to show the problem"}, {"count": 1, "tags": [], "bug_id": 41647, "attachment_id": null, "is_private": false, "id": 120678, "time": "2008-09-16T05:43:41Z", "creator": "bodewig@apache.org", "creation_time": "2008-09-16T05:43:41Z", "text": "ConditionBase has public void add(Condition) since Ant 1.6 and thus the related IntrospectionHelper instance returns true in supportsNestedElement (addTypeMethods.size() == 1).\n\nThis in turn makes UnknownElement's handleChild method assume a child by that name must exist and invoke getElementCreator on IntrospectionHelper which does a more thorough check in createAddTypeCreator and realizes that <echo> is not a condition.\n\nThis again makes handleChild throw an exception instead of returning false which would trigger the addTask logic in handleChildren.\n\nI see two options: (1) make IntrospectionHelper#supportsNestedElement only return true when getElementCreator would return something or (2) catch the exception in UnknownElement#handleChild and return false.\n\n(1) would probably be cleaner but I'm afraid the method doesn't get all the context it would need to be able to tell the truth.  You, Peter, should be at least as familiar as myself with the code so I'll wait for your input ;-)"}, {"count": 2, "tags": [], "bug_id": 41647, "text": "I've added a more thorough implementation of supportsNestedElement that is now used by UnknownElement#handleChild.\n\nI tried to deal with the createDynamicElement case as well, but failed.  Maybe you have an idea how we could check whether createDynamicElement works without actually invoking it (I think it is impossible).\n\nsvn revision 707398.", "id": 121831, "time": "2008-10-23T08:47:56Z", "creator": "bodewig@apache.org", "creation_time": "2008-10-23T08:47:56Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 41647, "attachment_id": null, "is_private": false, "id": 121907, "time": "2008-10-27T07:49:11Z", "creator": "bodewig@apache.org", "creation_time": "2008-10-27T07:49:11Z", "text": "OK, I've combined my code from revision 707398 with my second option of comment #1.  Fixed in svn revision 708204.\n"}]