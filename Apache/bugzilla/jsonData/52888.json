[{"count": 0, "tags": [], "bug_id": 52888, "attachment_id": null, "id": 154830, "time": "2012-03-12T15:41:50Z", "creator": "xdury@hotmail.com", "creation_time": "2012-03-12T15:41:50Z", "is_private": false, "text": "Hi, I'm developping a FOP extension and I would like to use a schema to indicate which attributes/elements are optional/mandatory but as soon as I specify a xsi:schemaLocation on my fo:root, I get the following exception:\n\norg.apache.fop.fo.ValidationException: Invalid property encountered on \"fo:root\": xsi:schemaLocation (See position 4:143)\n\tat org.apache.fop.events.ValidationExceptionFactory.createException(ValidationExceptionFactory.java:38)\n\tat org.apache.fop.events.EventExceptionManager.throwException(EventExceptionManager.java:54)\n\tat org.apache.fop.events.DefaultEventBroadcaster$1.invoke(DefaultEventBroadcaster.java:175)\n\tat $Proxy4.invalidProperty(Unknown Source)\n\tat org.apache.fop.fo.PropertyList.handleInvalidProperty(PropertyList.java:470)\n\tat org.apache.fop.fo.PropertyList.addAttributesToList(PropertyList.java:334)\n\tat org.apache.fop.fo.FObj.processNode(FObj.java:119)\n\tat org.apache.fop.fo.FOTreeBuilder$MainFOHandler.startElement(FOTreeBuilder.java:282)\n\tat org.apache.fop.fo.FOTreeBuilder.startElement(FOTreeBuilder.java:171)\n\tat org.apache.xalan.transformer.TransformerIdentityImpl.startElement(TransformerIdentityImpl.java:1073)\n\tat org.apache.xerces.parsers.AbstractSAXParser.startElement(Unknown Source)\n\tat org.apache.xerces.impl.XMLNSDocumentScannerImpl.scanStartElement(Unknown Source)\n\tat org.apache.xerces.impl.XMLNSDocumentScannerImpl$NSContentDispatcher.scanRootElementHook(Unknown Source)\n\tat org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher.dispatch(Unknown Source)\n\tat org.apache.xerces.impl.XMLDocumentFragmentScannerImpl.scanDocument(Unknown Source)\n\tat org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)\n\tat org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)\n\tat org.apache.xerces.parsers.XMLParser.parse(Unknown Source)\n\tat org.apache.xerces.parsers.AbstractSAXParser.parse(Unknown Source)\n\tat org.apache.xalan.transformer.TransformerIdentityImpl.transform(TransformerIdentityImpl.java:485)\n\n\n\n[fo:root xmlns:fo=\"http://www.w3.org/1999/XSL/Format\" xmlns:my-extension=\"urn:fop-ext:my-extension\" \txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\nxsi:schemaLocation=\"urn:fop-ext:my-extension my-extension.xsd\"]...[/fo:root]\n\nRegards,\n\nXavier"}, {"count": 1, "attachment_id": null, "bug_id": 52888, "text": "resetting P2 open bugs to P3 pending further review", "id": 157559, "time": "2012-04-07T01:44:39Z", "creator": "gadams@apache.org", "creation_time": "2012-04-07T01:44:39Z", "tags": [], "is_private": false}, {"count": 2, "attachment_id": null, "bug_id": 52888, "text": "not a bug; if you want to ignore attributes with a specific namespace, then use FopFactory.ignoreNamespace();\n\nif you feel there should be another way to specify namespaces to ignore, e.g., by a configuration file or command line option, then file an enhancement bug requesting the addition of such a feature;\n\neven better, submit a patch that implements such a feature along with such an enhancement request;", "id": 157647, "time": "2012-04-08T04:17:46Z", "creator": "gadams@apache.org", "creation_time": "2012-04-08T04:17:46Z", "tags": [], "is_private": false}, {"count": 3, "tags": [], "bug_id": 52888, "is_private": false, "text": "batch transition resolved+invalid to closed+invalid", "id": 158529, "time": "2012-04-30T00:11:27Z", "creator": "gadams@apache.org", "creation_time": "2012-04-30T00:11:27Z", "attachment_id": null}]