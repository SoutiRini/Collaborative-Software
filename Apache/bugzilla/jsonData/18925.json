[{"count": 0, "attachment_id": null, "bug_id": 18925, "is_private": false, "id": 34920, "time": "2003-04-11T00:10:43Z", "creator": "seanhuo@yahoo.com", "creation_time": "2003-04-11T00:10:43Z", "tags": [], "text": "When serializing a large xml document (700k) using xerces DOM , encounter the \nfollowing exception\njava.lang.StackOverflowError\n\tat java.lang.String.<init>(String.java:331)\n\tat org.apache.xerces.utils.UTF8DataChunk.toString(UTF8DataChunk.java\n(Compiled Code))\n\tat org.apache.xerces.utils.StringPool.toString(StringPool.java(Compiled \nCode))\n\tat org.apache.xerces.dom.DeferredDocumentImpl.getNodeValueString\n(DeferredDocumentImpl.java:1018)\n\tat org.apache.xerces.dom.DeferredDocumentImpl.getNodeValueString\n(DeferredDocumentImpl.java:974)\n\tat org.apache.xerces.dom.DeferredTextImpl.synchronizeData\n(DeferredTextImpl.java:134)\n\tat org.apache.xerces.dom.NodeImpl.writeObject(NodeImpl.java:1404)\n\tat java.lang.reflect.Method.invoke(Native Method)\n\tat java.io.ObjectOutputStream.invokeObjectWriter\n(ObjectOutputStream.java:1891)\n\tat java.io.ObjectOutputStream.outputObject(ObjectOutputStream.java:1223)\n\tat java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:372)\n\tat java.io.ObjectOutputStream.outputClassFields(ObjectOutputStream.java\n(Compiled Code))\n\tat java.io.ObjectOutputStream.defaultWriteObject\n(ObjectOutputStream.java:486)\n\tat java.io.ObjectOutputStream.outputObject(ObjectOutputStream.java:1227)\n\tat java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:372)\n\tat java.io.ObjectOutputStream.outputClassFields(ObjectOutputStream.java\n(Compiled Code))\n\tat java.io.ObjectOutputStream.defaultWriteObject\n(ObjectOutputStream.java:486)\n\tat java.io.ObjectOutputStream.outputObject(ObjectOutputStream.java:1227)\n\tat java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:372)\n\tat java.io.ObjectOutputStream.outputClassFields(ObjectOutputStream.java\n(Compiled Code))\n\tat java.io.ObjectOutputStream.defaultWriteObject\n(ObjectOutputStream.java:486)\n\tat java.io.ObjectOutputStream.outputObject(ObjectOutputStream.java:1227)\n\tat java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:372)\n\tat java.io.ObjectOutputStream.outputClassFields(ObjectOutputStream.java\n(Compiled Code))\n\tat java.io.ObjectOutputStream.defaultWriteObject\n(ObjectOutputStream.java:486)\n\tat java.io.ObjectOutputStream.outputObject(ObjectOutputStream.java:1227)\n\tat java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:372)\n\tat java.io.ObjectOutputStream.outputClassFields(ObjectOutputStream.java\n(Compiled Code))\n\tat java.io.ObjectOutputStream.defaultWriteObject\n(ObjectOutputStream.java:486)\n\tat java.io.ObjectOutputStream.outputObject(ObjectOutputStream.java:1227)\n\tat java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:372)\n\tat java.io.ObjectOutputStream.outputClassFields(ObjectOutputStream.java\n(Compiled Code))\n\tat java.io.ObjectOutputStream.defaultWriteObject\n(ObjectOutputStream.java:486)\n\tat java.io.ObjectOutputStream.outputObject(ObjectOutputStream.java:1227)\n\tat java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:372)\n\tat java.io.ObjectOutputStream.outputClassFields(ObjectOutputStream.java\n(Compiled Code))\n\tat java.io.ObjectOutputStream.defaultWriteObject\n(ObjectOutputStream.java:486)\n\nThe same xml can be serialized via jdom document model."}, {"count": 1, "tags": [], "text": "See also #5144.", "is_private": false, "bug_id": 18925, "id": 45284, "time": "2003-10-09T14:04:22Z", "creator": "flabes@livis.de", "creation_time": "2003-10-09T14:04:22Z", "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 18925, "is_private": false, "text": "See also #4284.", "id": 45288, "time": "2003-10-09T14:17:20Z", "creator": "flabes@livis.de", "creation_time": "2003-10-09T14:17:20Z", "attachment_id": null}, {"count": 3, "tags": [], "text": "See also (and vote for)\nhttp://developer.java.sun.com/developer/bugParade/bugs/4152790.html.", "attachment_id": null, "id": 45298, "creator": "flabes@livis.de", "time": "2003-10-09T15:05:03Z", "bug_id": 18925, "creation_time": "2003-10-09T15:05:03Z", "is_private": false}]