[{"count": 0, "tags": [], "creator": "lfurini@cs.unibo.it", "attachment_id": null, "text": "I have found a small bug concerning hyphenation in the \nHyphenationTree.hyphenate() method.\nBefore checking the exception list or using the algorithm, the \nfunction \"normalizes\" the word: during this phase, if a non-letter character \nis found null is returned.\n    // normalize word\n    char[] c = new char[2];\n    for (i = 1; i <= len; i++) {\n        c[0] = w[offset + i - 1];\n        int nc = classmap.find(c, 0);\n        if (nc < 0) {    // found a non-letter character, abort\n            return null;\n        }\n        word[i] = (char)nc;\n    }\nI think the condition (nc < 0) is too strong: at the moment words followed by \npunctuation marks, or in parenthesis, are not hyphenated.\nSo, for example, the word \"suggestion\" can be hyphenated, but \"suggestion.\" \nand \"(suggestion),\" cannot.\n\nThis is how I tried to fix this problem:\n- non-letter characters at the beginning are not copied into word[]\n- if a non-letter character is found which is not at the beginning, it is not \ncopied into word[] and a boolean variable becomes true\n- if a letter-character is found when the variable is true, null is returned; \notherwise, word[] is used to find hyphenation points\n\nI have also added a little optimization: if, after the normalization and the \nnon-letter character removal, the word size is less than (remainCharCount + \npushCharCount), null is returned, without checking the exception list and \nperforming the algorithm.\n\nI'm going to attach the proposed patch and a test fo file which shows a few \nexamples.\n\nRegards\n\n    Luca", "id": 55896, "time": "2004-04-16T13:29:05Z", "bug_id": 28431, "creation_time": "2004-04-16T13:29:05Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 28431, "attachment_id": 11258, "text": "Created attachment 11258\nproposed patch to HyphenationTree", "id": 55897, "time": "2004-04-16T13:29:53Z", "creator": "lfurini@cs.unibo.it", "creation_time": "2004-04-16T13:29:53Z", "is_private": false}, {"count": 2, "tags": [], "creator": "lfurini@cs.unibo.it", "attachment_id": 11259, "text": "Created attachment 11259\ntest fo file: words with punctuation marks and parenthesis", "id": 55898, "time": "2004-04-16T13:30:16Z", "bug_id": 28431, "creation_time": "2004-04-16T13:30:16Z", "is_private": false}, {"count": 3, "tags": [], "creator": "spepping@apache.org", "attachment_id": null, "id": 55921, "time": "2004-04-16T19:44:15Z", "bug_id": 28431, "creation_time": "2004-04-16T19:44:15Z", "is_private": false, "text": "Luca,\n\nThe patch works well.\n\nI do not find the name bAfterLetter very clear. It really is\nbNonLetterAfterLetters, but that is too long. I find bEndOfLetters a\nreasonable choice.\n\nThe 'else if (!bAfterLetter)' might as well be just 'else'.\n\nThe venom is in the tail. I do not know the details of this part of\nhyphenation. Your addition of 'iIgnoreAtBeginning' seems OK. I think\nyou should also add 'iIgnoreAtBeginning' in the if branch (hyphenation\nexceptions), but the results of a test fo are not quite in\nfavour. Perhaps you can have a look into this.\n\nI added a long comment explaining various features, perhaps most to\nmyself.\n\nI added cases to the test fo showing a word that is too short (when\none adds debug logging, one sees the effect), and 4 cases with a\nhyphenation exception word.\n\nRegards, Simon\n"}, {"count": 4, "tags": [], "creator": "spepping@apache.org", "attachment_id": 11264, "id": 55922, "time": "2004-04-16T19:45:30Z", "bug_id": 28431, "creation_time": "2004-04-16T19:45:30Z", "is_private": false, "text": "Created attachment 11264\nAn expanded test fo file"}, {"count": 5, "tags": [], "text": "Created attachment 11265\nA slightly modified patch", "attachment_id": 11265, "id": 55923, "creator": "spepping@apache.org", "time": "2004-04-16T19:46:39Z", "bug_id": 28431, "creation_time": "2004-04-16T19:46:39Z", "is_private": false}, {"count": 6, "attachment_id": null, "creator": "glenmazza@yahoo.com", "text": "Your assumptions appear correct, I checked the Washington Post newspaper and saw\nthat hyphenation does indeed occur with words that have a period or comma at the\nend of them.\n\nGlen", "id": 55934, "time": "2004-04-17T05:17:50Z", "bug_id": 28431, "creation_time": "2004-04-17T05:17:50Z", "tags": [], "is_private": false}, {"count": 7, "tags": [], "creator": "lfurini@cs.unibo.it", "attachment_id": null, "id": 56007, "time": "2004-04-19T10:30:35Z", "bug_id": 28431, "creation_time": "2004-04-19T10:30:35Z", "is_private": false, "text": "Simon,\n\nconcernig names, unnecessary \"if\", etc. , I agree with you.\n\nIt seems to me that your change concerning hyphenation exceptions works, \notherwise the hyphenation points would appear in the wrong place because of \nthe punctuation marks.\n\nThe strange pdf generated is due, IMO, to a couple of problems:\n\n-1-\nIn the last test case the text is (quite oddly) divided among 3 TextLM\n \"**[...]** (philanthrop\"\n \"ic).\"\n \" \"\nSpecifying the property linefeed-treatment=\"ignore\", the text is all in a TLM.\nRemoving from the test file the linefeed after \"(philanthropic).\", the text is \nstill split in two parts:\n \"***************************\"\n \"*************************************** (philanthropic).\"\nSo, it seems there is an irksome bug affecting text splitting.\n\n-2-\nThe last line in a justified paragraph is sometimes justified too (bug 28314).\nThe \"phantom linefeed\" is by default treated as a space, and so it is adjusted.\nAnyway, I was pleased to notice that, although shattered, the word is \ncorrectly collected and hyphenated.\n\nRegards\n\n    Luca"}, {"count": 8, "tags": [], "bug_id": 28431, "attachment_id": null, "text": "Luca,\n\nI agree with item 1. Although the spaces before the hyphenated word\nare often incorrect, the word is hyphenated correctly, and the patch\nsolves the problem it set out to solve. \n\nI also agree with item 2. The break up of the word is incorrect. Also\nthe spaces before the hyphenated word are often incorrect. However,\nthis problem is not caused by the patch, it is just revealed by it.\n\nThe patch can be applied. The break-up and spacing problems should be\nsolved in a separate effort.\n\nSimon\n", "id": 56431, "time": "2004-04-26T19:35:42Z", "creator": "spepping@apache.org", "creation_time": "2004-04-26T19:35:42Z", "is_private": false}, {"count": 9, "tags": [], "creator": "spepping@apache.org", "attachment_id": null, "id": 58366, "time": "2004-05-29T09:20:31Z", "bug_id": 28431, "creation_time": "2004-05-29T09:20:31Z", "is_private": false, "text": "Patch applied. Thanks.\nSimon\n"}, {"count": 10, "tags": [], "creator": "gadams@apache.org", "attachment_id": null, "id": 155519, "time": "2012-04-01T06:25:55Z", "bug_id": 28431, "creation_time": "2012-04-01T06:25:55Z", "is_private": false, "text": "batch transition pre-FOP1.0 resolved+fixed bugs to closed+fixed"}]