[{"count": 0, "tags": [], "text": "I have a thread that is hung and is taking up 100% of one of my CPUs. I'm\nrunning Java 1.6.0.3. Since it is blocked in HashMap, which is not synchronized,\nit doesn't appear to be an issue with our code. jconsole can't detect any\ndeadlocks. I assume it is this thread as the ThreadUserTime is massive,\n359,995,020,000,000, compared to other SocketListener's.\n\nHere is the stack trace:\n\nName: SocketListener0-12\nState: RUNNABLE\nTotal blocked: 15  Total waited: 127\n\nStack trace: \njava.util.HashMap.get(HashMap.java:303)\norg.apache.lenya.transaction.IdentityMapImpl.get(IdentityMapImpl.java:54)\norg.apache.lenya.cms.repository.SharedItemStoreImpl.getRepositoryItem(SharedItemStoreImpl.java:65)\norg.apache.lenya.cms.publication.DocumentFactoryImpl.get(DocumentFactoryImpl.java:91)\norg.apache.lenya.cms.publication.DocumentFactoryImpl.get(DocumentFactoryImpl.java:73)\norg.apache.lenya.cms.site.AbstractLink.getDocument(AbstractLink.java:107)\norg.apache.lenya.cms.site.tree2.SiteTreeImpl.getKey(SiteTreeImpl.java:304)\norg.apache.lenya.cms.site.tree2.SiteTreeImpl.linkAdded(SiteTreeImpl.java:300)\norg.apache.lenya.cms.site.tree2.TreeNodeImpl.addLinkInternal(TreeNodeImpl.java:211)\norg.apache.lenya.cms.site.tree2.TreeNodeImpl.addLink(TreeNodeImpl.java:197)\norg.apache.lenya.cms.site.tree2.SiteTreeImpl.loadLinks(SiteTreeImpl.java:168)\norg.apache.lenya.cms.site.tree2.SiteTreeImpl.loadNodes(SiteTreeImpl.java:158)\norg.apache.lenya.cms.site.tree2.SiteTreeImpl.loadNodes(SiteTreeImpl.java:159)\norg.apache.lenya.cms.site.tree2.SiteTreeImpl.load(SiteTreeImpl.java:115)\n   - locked org.apache.lenya.cms.site.tree2.SiteTreeImpl@ce9197\norg.apache.lenya.cms.site.tree2.SiteTreeImpl.contains(SiteTreeImpl.java:334)\norg.apache.lenya.cms.site.tree2.DelegatingSiteTree.contains(DelegatingSiteTree.java:79)\norg.apache.lenya.cms.publication.DefaultDocumentBuilder.isDocument(DefaultDocumentBuilder.java:111)\nsun.reflect.GeneratedMethodAccessor52.invoke(Unknown Source)\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\njava.lang.reflect.Method.invoke(Method.java:597)\norg.apache.avalon.excalibur.component.ComponentProxyGenerator$ComponentInvocationHandler.invoke(ComponentProxyGenerator.java:143)\n$Proxy33.isDocument(Unknown Source)\norg.apache.lenya.cms.publication.DocumentFactoryImpl.isDocument(DocumentFactoryImpl.java:189)\norg.apache.lenya.cms.ac.DocumentPolicyManagerWrapper.getPolicyUrlCorrect(DocumentPolicyManagerWrapper.java:119)\norg.apache.lenya.cms.ac.DocumentPolicyManagerWrapper.getPolicyURL(DocumentPolicyManagerWrapper.java:80)\norg.apache.lenya.cms.ac.DocumentPolicyManagerWrapper.getPolicy(DocumentPolicyManagerWrapper.java:240)\norg.apache.lenya.cms.cocoon.acting.SslRedirectAction.act(SslRedirectAction.java:75)\norg.apache.cocoon.components.treeprocessor.sitemap.ActTypeNode.invoke(ActTypeNode.java:125)\norg.apache.cocoon.components.treeprocessor.AbstractParentProcessingNode.invokeNodes(AbstractParentProcessingNode.java:47)\norg.apache.cocoon.components.treeprocessor.sitemap.MatchNode.invoke(MatchNode.java:108)\norg.apache.cocoon.components.treeprocessor.AbstractParentProcessingNode.invokeNodes(AbstractParentProcessingNode.java:69)\norg.apache.cocoon.components.treeprocessor.sitemap.PipelineNode.invoke(PipelineNode.java:143)\norg.apache.cocoon.components.treeprocessor.AbstractParentProcessingNode.invokeNodes(AbstractParentProcessingNode.java:69)\norg.apache.cocoon.components.treeprocessor.sitemap.PipelinesNode.invoke(PipelinesNode.java:93)\norg.apache.cocoon.components.treeprocessor.ConcreteTreeProcessor.process(ConcreteTreeProcessor.java:235)\norg.apache.cocoon.components.treeprocessor.ConcreteTreeProcessor.process(ConcreteTreeProcessor.java:177)\norg.apache.cocoon.components.treeprocessor.TreeProcessor.process(TreeProcessor.java:254)\norg.apache.cocoon.Cocoon.process(Cocoon.java:699)\norg.apache.cocoon.servlet.CocoonServlet.service(CocoonServlet.java:1154)\njavax.servlet.http.HttpServlet.service(HttpServlet.java:689)\norg.mortbay.jetty.servlet.ServletHolder.handle(ServletHolder.java:427)\norg.mortbay.jetty.servlet.WebApplicationHandler.dispatch(WebApplicationHandler.java:475)\norg.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:567)\norg.mortbay.http.HttpContext.handle(HttpContext.java:1565)\norg.mortbay.jetty.servlet.WebApplicationContext.handle(WebApplicationContext.java:635)\norg.mortbay.http.HttpContext.handle(HttpContext.java:1517)\norg.mortbay.jetty.plus.PlusWebAppContext.handle(PlusWebAppContext.java:158)\norg.mortbay.http.HttpServer.service(HttpServer.java:954)\norg.mortbay.http.HttpConnection.service(HttpConnection.java:814)\norg.mortbay.http.HttpConnection.handleNext(HttpConnection.java:981)\norg.mortbay.http.HttpConnection.handle(HttpConnection.java:831)\norg.mortbay.http.SocketListener.handleConnection(SocketListener.java:244)\norg.mortbay.util.ThreadedServer.handle(ThreadedServer.java:357)\norg.mortbay.util.ThreadPool$PoolThread.run(ThreadPool.java:534)", "is_private": false, "bug_id": 44059, "id": 111654, "time": "2007-12-11T12:25:34Z", "creator": "rfrovarp@apache.org", "creation_time": "2007-12-11T12:25:34Z", "attachment_id": null}, {"count": 1, "tags": [], "text": "I think the problem is due to the unsynchronized nature of the HashMap. I found\nthis bug for Java 1.4.2 which states that used in an unsynchronized way, bad\nthings can happen. http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6423457", "attachment_id": null, "bug_id": 44059, "id": 103715, "time": "2008-02-25T12:31:58Z", "creator": "rfrovarp@apache.org", "creation_time": "2008-02-25T12:31:58Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 44059, "attachment_id": null, "id": 103671, "time": "2008-02-25T12:39:05Z", "creator": "rfrovarp@apache.org", "creation_time": "2008-02-25T12:39:05Z", "is_private": false, "text": "The one place where I have seen issues in IdentityMapImpl has been fixed in\nr630984. Leaving bug open until I can confirm no more trouble from this issue."}, {"count": 3, "tags": [], "bug_id": 44059, "text": "A similar problem with Lenya-1.2 was crashing our production server.  Server\ntypically runs less than 1% usage.  Pairs of java processes appear using\n(combined) 90% of one processor and only disappear when Lenya is restarted.  The\nserver slows with 2 pairs and stalls with 3 pairs.  This forced an upgrade last\nAugust, a User ML post on 20071129 (no responses), and was finally patched with\na cron job to restart Lenya when the symptoms appear. Problem appears\nintermittently with no identifiable cause.  jconsole is not available for\ntroubleshooting Java 1.4.\n\nLinux, Apache-httpd-2.1 as proxy, two processors\nJava 1.4.2_08\nLenya 1.2.2, Cocoon 2.1.6\nLenya 1.2.5, Cocoon 2.1.10.  Upgrade from 1.2.2 to 1.2.5 did not cure problem.\n\nCould this be fixed by synchronizing all uses of HashMap in the 1.2.x branch? \n\nLenya-1.2.x references 127 HashMaps with 19 Collections.synchonizedMaps.\nCocoon-2.1.11 src/java references 313 HashMaps.  The ubiquitous objectModel\ndeclared in Cocoon-2.1's AbstractEnvironment is not synchronized or\nunmodifiable.  Is globally replacing \"= new HashMap();\" with \"=\nCollections.synchronizedMap(new HashMap());\" enough or bad?  (A script would\nalso need to add \"import java.util.Collections;\" where missing and needed.)\n\nIs there a better solution?", "id": 103676, "attachment_id": null, "creator": "solprovider@gmail.com", "creation_time": "2008-02-25T20:03:48Z", "time": "2008-02-25T20:03:48Z", "is_private": false}, {"count": 4, "attachment_id": null, "bug_id": 44059, "is_private": false, "id": 103233, "time": "2008-02-25T20:42:15Z", "creator": "rfrovarp@apache.org", "creation_time": "2008-02-25T20:42:15Z", "tags": [], "text": "I'm not sure. There are a great many more references to HashMaps in the 2.0 base\nthan the one I fixed. This was the only one I saw giving me trouble, but only\ntime will tell. The other alternative would be to change all HashMaps to\nHashtables. I am not sure of the functional differences between the two objects,\nexcept that Hashtables are synchronized and don't accept nulls. I thought for\nthe moment that synchronizing the HashMap was the best way to go. HashMaps\nshould be quicker in a read environment, but apparently they don't always work\namongst several threads. \n\nThese problems definitely seem to be the same thing. 2.0 code base:\n86 classes with HashMaps\n1 class with Collections.synchronizedMap\n1 class with Hashtable"}, {"count": 5, "tags": [], "bug_id": 44059, "text": "I don't think that we have to synchronize all collections. Synchronization\ncreates a performance overhead, that's why the new collection classes\n(ArrayList, HashMap) aren't synchronized in contrast to the \"old\" ones (Vector,\nHashtable).\n\nThe IdentityMapImpl is a special case because the global identity map is\nattached to the session and can therefore be accessed by multiple threads.", "id": 102165, "time": "2008-02-26T00:39:36Z", "creator": "andreas@apache.org", "creation_time": "2008-02-26T00:39:36Z", "is_private": false, "attachment_id": null}, {"count": 6, "tags": [], "creator": "rfrovarp@apache.org", "is_private": false, "text": "Okay. Do you know what components in 1.2 would be causing trouble? \n\nI can watch my usage through jconsole for the next few weeks. I had been\nrestarting Lenya every morning due to this problem. I put the fix in place this\nmorning, so hopefully I'll know for 2.0 by the end of this week.", "id": 100948, "time": "2008-02-26T07:28:52Z", "bug_id": 44059, "creation_time": "2008-02-26T07:28:52Z", "attachment_id": null}, {"count": 7, "tags": [], "text": "This fixed the issue I was having. It looks like 1.2.5 still has a problem, so I've assigned it to that version now.", "is_private": false, "bug_id": 44059, "id": 114545, "time": "2008-03-12T16:53:27Z", "creator": "rfrovarp@apache.org", "creation_time": "2008-03-12T16:53:27Z", "attachment_id": null}]