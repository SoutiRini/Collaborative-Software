[{"attachment_id": null, "tags": [], "creator": "gjfdh@yahoo.com", "is_private": false, "count": 0, "id": 23116, "time": "2002-09-19T19:56:56Z", "bug_id": 12829, "creation_time": "2002-09-19T19:56:56Z", "text": "This bug is major with respect to the operation of the <tstamp> task.\n\nFrom looking at the code and reading the docs, I infer that\n\n<tstamp prefix=\"start\">\n  <format property=\"TODAY_UK\" pattern=\"d-MMMM-yyyy\" locale=\"en\"/>\n</tstamp>\n\nshould set the \"start.TODAY_UK\" property.  It doesn't.  The task currently \nignores the prefix and sets the \"TODAY_UK\" property instead.\n\nThis is because the <format> nested elements are created before the <tstamp> \nattributes are set.\n\nSuggested fix:\n\n* Remove the prefix field variable from the \"CustomFormat\" class and let it be \ninheritted.  Perform prefix computation within execute.\n\n1) Change the createFormat() method\n\n    public CustomFormat createFormat() {\n//      CustomFormat cts = new CustomFormat(prefix);\n        CustomFormat cts = new CustomFormat();\n        customFormats.addElement(cts);\n        return cts;\n    }\n\n2) Remove the prefix field and change the constructor of CustomFormat\n\n        private int offset = 0;\n        private int field = Calendar.DATE;\n//      private String prefix = \"\";\n\n        /**\n         * Create a format with the current prefix\n         * @param prefix\n         */\n        public CustomFormat(String prefix) {\n//            this.prefix = prefix;\n        }\n\n3) Remove the prefix concatenation from the setProperty() method\n\n        public void setProperty(String propertyName) {\n//          this.propertyName = prefix + propertyName;\n            this.propertyName = propertyName;\n        }\n\n4) Relocate it to the bottom of the execute() method\n\n        public void execute(Project project, Date date, Location location) {\n            ...\n//          project.setNewProperty(propertyName, sdf.format(date));\n            project.setNewProperty(prefix + propertyName, sdf.format(date));\n        }\n\n\n\n\nSuggested unit test:\n\nThe following test (or its equivalent) should be added to TStampTest.java:\n\n    public void testFormatPrefix() throws Exception {\n\tTstamp.CustomFormat format = tstamp.createFormat();\n        format.setProperty(\"format\");\n        format.setPattern(\"HH:mm:ss z\");\n        format.setTimezone(\"GMT\");\n\n        tstamp.setPrefix(\"prefix\");\n        tstamp.execute();\n        String prop= project.getProperty(\"prefix.format\");\n        assertNotNull(prop);\n    }"}, {"count": 1, "tags": [], "creator": "bodewig@apache.org", "attachment_id": null, "is_private": false, "id": 23367, "time": "2002-09-25T15:14:09Z", "bug_id": 12829, "creation_time": "2002-09-25T15:14:09Z", "text": "Thanks, your patch has been applied both in CVS HEAD as well as the branch\nleading to Ant 1.5.1."}]