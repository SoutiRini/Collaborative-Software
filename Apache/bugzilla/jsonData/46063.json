[{"count": 0, "tags": [], "bug_id": 46063, "is_private": false, "text": "MailLogger cannot connect properly to a mail server that requires the use of TLS/SSL. It also fails to enable the STARTTLS command, which would allow the mail server to ask the client to switch to SSL.\n\nAs a result of this, it isn't possible to use MailLogger with Gmail, and I'm sure this bug would also affect a number of other popular email services.\n\nTo replicate the problem:\n\n    MailLogger.mailhost=smtp.gmail.com\n    MailLogger.mailport=465\n    MailLogger.ssl=true\n    MailLogger.user=<sender account>\n    MailLogger.password=<sender password>\n    MailLogger.from=<sender email>\n    MailLogger.success.to=<recipient email>\n    MailLogger.failure.to=<recipient email>\n\nPlease note that bug 44009 will cause a NullPointerException when you specify a username and password, so it will be necessary to correct this first.\n\nI think it's possible that SSL support, which must have worked at one time, has been broken by some change in JavaMail. I'm using JavaMail 1.4.1 (which is the most recent release), and JavaBeans Activation Framework 1.1.1 (also the most recent release).\n\nI was able to fix the problem by modifying the send() method of MimeMailer. Near the end of this method, you'll find the following line:\n\n    Transport.send(msg);\n\nThis method doesn't seem to work with SSL. That may well be a bug in JavaMail, but it's easy to work around it by substituting the following code:\n\n    // Send the message using SMTP, or SMTPS if the host uses SSL\n    Transport transport = sesh.getTransport(SSL ? \"smtps\" : \"smtp\");\n    transport.connect(host, user, password);\n    transport.sendMessage(msg, msg.getAllRecipients());\n\nWhile I was working on MimeMailer, I also added the following just before the code that initializes sesh with a new JavaMail session:\n\n    // Enable STARTTLS to allow the host to initiate a switch to SSL\n    props.put(\"mail.smtp.starttls.enable\", \"true\");\n\nEnabling STARTTLS would make it possible for MailLogger to work with a mail server that will accept an unencrypted connection, but requires a client to switch over to SSL once the connection has been established.\n\nGmail does this. It sends a STARTTLS command if you connect to it using the standard SMTP port 25. So you should be able to test this using the following settings:\n\n    MailLogger.mailhost=smtp.gmail.com\n    MailLogger.mailport=25\n    MailLogger.ssl=false\n    MailLogger.user=<sender account>\n    MailLogger.password=<sender password>\n    MailLogger.from=<sender email>\n    MailLogger.success.to=<recipient email>\n    MailLogger.failure.to=<recipient email>\n\nIt's possible that you might also want to add a new MailLogger configuration property to enable/disable the use of STARTTLS, but IMHO it should be enabled by default. That would help keep people from running into SSL-related problems.", "id": 121779, "time": "2008-10-22T07:27:37Z", "creator": "craig.richardson@yahoo.com", "creation_time": "2008-10-22T07:27:37Z", "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 46063, "is_private": false, "text": "I currently don't have a good test environment for this.\n\nDoes it work if you use the no arg transport.connect() method?  I don't want to break unauthenticated SMPT support and I'm not really sure how JavaMail deals with null user/password arguments.\n\nI think a separate flag for starttls would be more appropriate - and will add it to the mail task as well.", "id": 121824, "time": "2008-10-23T05:52:16Z", "creator": "bodewig@apache.org", "creation_time": "2008-10-23T05:52:16Z", "attachment_id": null}, {"count": 2, "tags": [], "creator": "bodewig@apache.org", "attachment_id": null, "text": "STARTTLS can be enabled with svn revision 707368.", "id": 121826, "time": "2008-10-23T06:13:52Z", "bug_id": 46063, "creation_time": "2008-10-23T06:13:52Z", "is_private": false}, {"attachment_id": null, "tags": [], "creator": "craig.richardson@yahoo.com", "is_private": false, "count": 3, "id": 121840, "time": "2008-10-23T14:51:26Z", "bug_id": 46063, "creation_time": "2008-10-23T14:51:26Z", "text": "As I recall, I tried the no argument Transport.connect() method, but this didn't work when the SMTP server required authentication.\n\nHowever, it should be perfectly OK to pass a null username and password to the three argument version of Transport.connect(). The implementation of the no argument version of this method, which is inherited from JavaMail's Service class, is equivalent to Transport.connect(null, null, null).\n\nMoreover, the comments attached to the three argument method specifically state that the username and password can be null:\n\n   The implementation in the Service class will collect defaults\n   for the host, user, and password from the session, from the\n   URLName for this service, and from the supplied parameters and\n   then call protocolConnect method <snip>\n\n   If the username passed in is null, a default value will be chosen\n   as described above.\n\n   If the password passed in is null and this is the first successful\n   connection to this service, the user name and the password collected\n   from the user will be saved as defaults for subsequent connection\n   attempts... <snip>\n\nSo I think you should be fine. If you like, I can test this with a server that doesn't require authentication just to make sure.\n\n\n\n\n\n"}, {"count": 4, "tags": [], "bug_id": 46063, "text": "If you have an SLL environment without authentication at hand, I'd appreciate if you could test it.  I've tested it an a simple SMTP-only environment and received my test mails without authentication.\n\nsvn revision 708217.", "id": 121909, "time": "2008-10-27T08:17:32Z", "creator": "bodewig@apache.org", "creation_time": "2008-10-27T08:17:32Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "creator": "craig.richardson@yahoo.com", "attachment_id": null, "text": "The modified version of MimeMailer.java appears to work properly with:\n\n1) A mail server that listens on port 465 for incoming SSL connections.\n\n2) A mail server that allows clients to connect to it on port 25 without encryption, but then sends a STARTTLS command to force the clients to switch to SSL after the connection has been established.\n\nBoth of these mail servers required a username and password. I don't happen to have access to a mail server that requires SSL or STARTTLS, but doesn't require clients to authenticate (which I think would be unusual).\n\n\n\n\n\n", "id": 122035, "time": "2008-10-30T11:58:07Z", "bug_id": 46063, "creation_time": "2008-10-30T11:58:07Z", "is_private": false}, {"count": 6, "tags": [], "creator": "bodewig@apache.org", "attachment_id": null, "text": "thanks, Craig.  Together with my tests, I hope things are fine.", "id": 122245, "time": "2008-11-06T06:44:51Z", "bug_id": 46063, "creation_time": "2008-11-06T06:44:51Z", "is_private": false}]