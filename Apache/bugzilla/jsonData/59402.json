[{"count": 0, "tags": [], "bug_id": 59402, "attachment_id": null, "is_private": false, "id": 190659, "time": "2016-05-01T13:49:31Z", "creator": "dglasser@pobox.com", "creation_time": "2016-05-01T13:49:31Z", "text": "I discovered this in ant 1.6.5, and confirmed that it exists in 1.9.7.\n\nIf you have a <zipfileset> element with both a dir and a file attribute, a zip task will produce different results depending on the order in which those attributes appear. If the file attribute appears first, it behaves as you would expect. \n\nFor example, with this:\n\n<zipfileset file=\"file1.txt\" dir=\"dir1\"/>\n\nIt looks for a file named \"file1.txt\" inside the directory \"dir1\". However, with this:\n\n<zipfileset dir=\"dir1\" file=\"file1.txt\"/>\n\nIt looks for file1.txt inside the current working directory. This can be verified by running the following  demonstration target:\n\n  <target name=\"oa\">\n    <property name=\"JARCMD\" value=\"jar\"/>\n\n    <!-- Delete both zip files if they exist. -->\n    <property name=\"ZIP1\" value=\"zip1.zip\"/>\n    <property name=\"ZIP2\" value=\"zip2.zip\"/>\n    <delete file=\"${ZIP1}\"/>\n    <delete file=\"${ZIP2}\"/>\n\n    <property name=\"DIR1\" value=\"dir1\"/>\n    <mkdir dir=\"${DIR1}\"/>\n\n    <!-- make sure there are no files named file1.txt or file2.txt in the\n         current directory, so we know they're not being read from there. -->\n    <fail\n      message=\"A file named file1.txt exists in the current directory.\">\n      <condition><available file=\"file1.txt\"/></condition>\n    </fail>\n\n    <fail\n      message=\"A file named file2.txt exists in the current directory.\">\n      <condition><available file=\"file2.txt\"/></condition>\n    </fail>\n\n    <touch file=\"${DIR1}/file1.txt\"/>\n    <touch file=\"${DIR1}/file2.txt\"/>\n\n    <zip destfile=\"${ZIP1}\">\n      <zipfileset file=\"file1.txt\" dir=\"${DIR1}\"/>\n      <zipfileset file=\"file2.txt\" dir=\"${DIR1}\"/>\n    </zip>\n\n    <zip destfile=\"${ZIP2}\">\n      <zipfileset file=\"file1.txt\" dir=\"${DIR1}\"/>\n\n      <!-- This file will not be included, because the dir attribute\n           comes before the file attribute. -->\n      <zipfileset dir=\"${DIR1}\" file=\"file2.txt\"/>\n    </zip>\n\n    <echo>Contents of ${ZIP1}:</echo>\n    <exec dir=\".\" executable=\"${JARCMD}\">\n      <arg value=\"-tvf\"/>\n      <arg value=\"${ZIP1}\"/>\n    </exec>\n\n    <echo>Contents of ${ZIP2}:</echo>\n    <exec dir=\".\" executable=\"${JARCMD}\">\n      <arg value=\"-tvf\"/>\n      <arg value=\"${ZIP2}\"/>\n    </exec>\n  </target>"}, {"count": 1, "tags": [], "text": "With commit de5b405 you are no longer able to set file and dir at the same time, taking this undefined behavior away. In your case it depended on the order of attributes, but it may as well depend on the XML parser being used (as there is no defined order of XML attributes once the document has been read).\n\nIf you want to look for file1.txt in dir1 you need to use the includes attribute like in\n\n<zipfileset includes=\"file1.txt\" dir=\"dir1\"/>\n\nFixed for 1.9.8 and 1.10.0", "is_private": false, "id": 191165, "creator": "bodewig@apache.org", "time": "2016-05-22T15:17:58Z", "bug_id": 59402, "creation_time": "2016-05-22T15:17:58Z", "attachment_id": null}]