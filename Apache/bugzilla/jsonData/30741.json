[{"count": 0, "tags": [], "bug_id": 30741, "text": "As we've recently migrated from Win NT to XP we've found a problem in JMeter \nwhen using SSL and client certs. Under NT when we selected a certificate using \nthe SSL Manager JMeter would prompt us for the password to decrypt the \ncontents of the cert. Under XP this no longer occurs and we get this stack \ntrace in the jmeter.log file\n08/16/2004 11:57:49 AM INFO  - jmeter.JMeter: Version 1.9.1 \n08/16/2004 11:58:15 AM INFO  - jmeter.util: KeyStore Type: PKCS 12 \n08/16/2004 11:58:15 AM ERROR - jmeter.util: Couldn't load keystore \njava.io.IOException: failed to decrypt safe contents entry\n\tat com.sun.net.ssl.internal.ssl.PKCS12KeyStore.engineLoad(DashoA6275)\n\tat java.security.KeyStore.load(KeyStore.java:652)\n\tat org.apache.jmeter.util.keystore.DefaultKeyStore.load\n(DefaultKeyStore.java:84)\n\tat org.apache.jmeter.util.SSLManager.getKeyStore(SSLManager.java:206)\n\tat org.apache.jmeter.util.JsseSSLManager.getContext\n(JsseSSLManager.java:208)\n\tat org.apache.jmeter.util.JsseSSLManager.<init>\n(JsseSSLManager.java:136)\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native \nMethod)\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance\n(NativeConstructorAccessorImpl.java:39)\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance\n(DelegatingConstructorAccessorImpl.java:27)\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:274)\n\tat org.apache.jmeter.util.SSLManager.getInstance(SSLManager.java:318)\n\tat org.apache.jmeter.gui.action.SSLManagerCommand.sslManager\n(SSLManagerCommand.java:152)\n\tat org.apache.jmeter.gui.action.SSLManagerCommand.doAction\n(SSLManagerCommand.java:107)\n\tat org.apache.jmeter.gui.action.ActionRouter.performAction\n(ActionRouter.java:118)\n\tat org.apache.jmeter.gui.action.ActionRouter.access$000\n(ActionRouter.java:80)\n\tat org.apache.jmeter.gui.action.ActionRouter$1.run\n(ActionRouter.java:99)\n\tat java.awt.event.InvocationEvent.dispatch(InvocationEvent.java:178)\n\tat java.awt.EventQueue.dispatchEvent(EventQueue.java:448)\n\tat java.awt.EventDispatchThread.pumpOneEventForHierarchy\n(EventDispatchThread.java:197)\n\tat java.awt.EventDispatchThread.pumpEventsForHierarchy\n(EventDispatchThread.java:150)\n\tat java.awt.EventDispatchThread.pumpEvents\n(EventDispatchThread.java:144)\n\tat java.awt.EventDispatchThread.pumpEvents\n(EventDispatchThread.java:136)\n\tat java.awt.EventDispatchThread.run(EventDispatchThread.java:99)\n\n08/16/2004 11:58:15 AM INFO  - jmeter.util: JmeterKeyStore Location: \nC:\\data\\certificates\\prod test\\DXDVM1.p12 \n08/16/2004 11:58:15 AM INFO  - jmeter.util: JmeterKeyStore type: class \norg.apache.jmeter.util.keystore.DefaultKeyStore \n08/16/2004 11:58:15 AM INFO  - jmeter.util: class \norg.apache.jmeter.util.keystore.DefaultKeyStore \n08/16/2004 11:58:15 AM INFO  - jmeter.util: KeyStore Type: JKS \n08/16/2004 11:58:15 AM INFO  - jmeter.util: TrustStore Location:  \n08/16/2004 11:58:15 AM INFO  - jmeter.util: TrustStore type: class \norg.apache.jmeter.util.keystore.DefaultKeyStore \n08/16/2004 11:58:15 AM INFO  - jmeter.util: Default Cipher: \nSSL_RSA_WITH_RC4_128_MD5 \n08/16/2004 11:58:15 AM INFO  - jmeter.util: Supported Cipher: \nSSL_RSA_WITH_RC4_128_MD5 \n08/16/2004 11:58:15 AM INFO  - jmeter.util: Default Cipher: \nSSL_RSA_WITH_RC4_128_SHA \n08/16/2004 11:58:15 AM INFO  - jmeter.util: Supported Cipher: \nSSL_RSA_WITH_RC4_128_SHA \n08/16/2004 11:58:15 AM INFO  - jmeter.util: Default Cipher: \nSSL_RSA_WITH_3DES_EDE_CBC_SHA \n08/16/2004 11:58:15 AM INFO  - jmeter.util: Supported Cipher: \nSSL_RSA_WITH_3DES_EDE_CBC_SHA \n08/16/2004 11:58:15 AM INFO  - jmeter.util: Default Cipher: \nSSL_DHE_DSS_WITH_3DES_EDE_CBC_SHA \n08/16/2004 11:58:15 AM INFO  - jmeter.util: Supported Cipher: \nSSL_DHE_DSS_WITH_3DES_EDE_CBC_SHA \n08/16/2004 11:58:15 AM INFO  - jmeter.util: Default Cipher: \nSSL_RSA_WITH_DES_CBC_SHA \n08/16/2004 11:58:15 AM INFO  - jmeter.util: Supported Cipher: \nSSL_RSA_WITH_DES_CBC_SHA \n08/16/2004 11:58:15 AM INFO  - jmeter.util: Default Cipher: \nSSL_DHE_DSS_WITH_DES_CBC_SHA \n08/16/2004 11:58:15 AM INFO  - jmeter.util: Supported Cipher: \nSSL_DHE_DSS_WITH_DES_CBC_SHA \n08/16/2004 11:58:15 AM INFO  - jmeter.util: Default Cipher: \nSSL_RSA_EXPORT_WITH_RC4_40_MD5 \n08/16/2004 11:58:15 AM INFO  - jmeter.util: Supported Cipher: \nSSL_RSA_EXPORT_WITH_RC4_40_MD5 \n08/16/2004 11:58:15 AM INFO  - jmeter.util: Default Cipher: \nSSL_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA \n08/16/2004 11:58:15 AM INFO  - jmeter.util: Supported Cipher: \nSSL_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA \n08/16/2004 11:58:15 AM INFO  - jmeter.util: Supported Cipher: \nSSL_RSA_WITH_NULL_MD5 \n08/16/2004 11:58:15 AM INFO  - jmeter.util: Supported Cipher: \nSSL_RSA_WITH_NULL_SHA \n08/16/2004 11:58:15 AM INFO  - jmeter.util: Supported Cipher: \nSSL_DH_anon_WITH_RC4_128_MD5 \n08/16/2004 11:58:15 AM INFO  - jmeter.util: Supported Cipher: \nSSL_DH_anon_WITH_3DES_EDE_CBC_SHA \n08/16/2004 11:58:15 AM INFO  - jmeter.util: Supported Cipher: \nSSL_DH_anon_WITH_DES_CBC_SHA \n08/16/2004 11:58:15 AM INFO  - jmeter.util: Supported Cipher: \nSSL_DH_anon_EXPORT_WITH_RC4_40_MD5 \n08/16/2004 11:58:15 AM INFO  - jmeter.util: Supported Cipher: \nSSL_DH_anon_EXPORT_WITH_DES40_CBC_SHA \n08/16/2004 11:58:15 AM INFO  - jmeter.util: JsseSSLManager installed \n\nWe've found that by setting the value of the javax.net.ssl.keyStorePassword \nproperty in the jmeter.properties file that this allows JMeter to decrypt the \ncert but we have many certs with different passwords so this becomes painful \nvery quickly.\n\nAny ideas would be appreciated\n\nThanks\n\nAndrew", "id": 62155, "time": "2004-08-19T00:58:16Z", "creator": "andrew.r.bredhauer@transport.qld.gov.au", "creation_time": "2004-08-19T00:58:16Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 30741, "attachment_id": null, "text": "Not sure if this will help you, but you can always define the value of\njavax.net.ssl.keyStorePassword on the JMeter command line, using the -D or -J\nflags; this saves having to edit the properties file.\n\nBy the way, are you using the same version of the JVM on XP as you were using on NT?\n\nThere is code in SSLManager.java (in 1.9.1) to prompt for a password, but as far\nas I can see, it won't be invoked:\n\n   this.defaultpw =\n        JMeterUtils.getJMeterProperties().getProperty(\n                 \"javax.net.ssl.keyStorePassword\",\n                  \"password\");\n\n    if (null == defaultpw)\n    {\n           // Code to prompt for password\n    }\n\nI don't see how defaultpw can ever be null ... so perhaps the prompting was\npreviously done by Java?", "id": 62317, "time": "2004-08-22T21:32:25Z", "creator": "sebb@apache.org", "creation_time": "2004-08-22T21:32:25Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 30741, "attachment_id": null, "text": "OK I've doen a bit more digging and found out that apparently we were \npreviously using JMeter 1.8.1 which I've just checked and it prompts for the \ncert/keystore password on loading. Maybe this is some functionality that was \ndropped on the upgrade to 1.9 as it doesn't seem to prompt?\n\nAndrew\n", "id": 64081, "time": "2004-09-23T00:51:20Z", "creator": "andrew.r.bredhauer@transport.qld.gov.au", "creation_time": "2004-09-23T00:51:20Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 30741, "attachment_id": null, "id": 64133, "time": "2004-09-23T21:12:00Z", "creator": "rcook@akimeka.com", "creation_time": "2004-09-23T21:12:00Z", "is_private": false, "text": "This bug just bit me as well.  It looks like the \"if\" statement at\nSSLManager.java:142 (in 2.0.1 source) should be omitted (along with its\nassociated brackets).  I have not tried recompiling with this change since the\njavax.net.ssl.keyStorePassword workaround is adequate for my testing.  Maybe\nsomeone else could try patching the source and recompiling to see if that fix\nwould be sufficient."}, {"count": 4, "tags": [], "creator": "sebb@apache.org", "attachment_id": null, "id": 64135, "time": "2004-09-23T21:30:27Z", "bug_id": 30741, "creation_time": "2004-09-23T21:30:27Z", "is_private": false, "text": "Duh! should have realised the problem earlier, which is actually in the previous\nstatement: \n\nthis.defaultpw = JMeterUtils.getJMeterProperties().getProperty(\n                            \"javax.net.ssl.keyStorePassword\",\n                            \"password\");\n\nThis means that defaultpw will be set to \"password\" if the property is not\ndefined. [This is doubly odd, because defaultpw is already set where the\nvariable is declared!]\n\nSo the prompt for the password will never happen. Quite why that default was\nadded is not clear, but it does seem to have happened between 1.8 and 1.9.\n\nI think the solution is to remove the outer if statement and the getProperty\nentirely. I'll commit that to CVS 2.0 shortly."}, {"text": "Just spotted the setProperty() after the prompt - so the getProperty was needed\nafter all. Now checked in fix with just the default removed, which should sort\nthings, I hope...\n\nThere's a build in: http://cvs.apache.org/builds/jakarta-jmeter/nightly/ if you\nwant to try it out...", "tags": [], "bug_id": 30741, "attachment_id": null, "count": 5, "id": 64136, "time": "2004-09-23T21:56:09Z", "creator": "sebb@apache.org", "creation_time": "2004-09-23T21:56:09Z", "is_private": false}, {"count": 6, "tags": [], "bug_id": 30741, "attachment_id": null, "text": "Thanks Sebb, I've given it a quick check and it seems to work. I'll pass it \nalong to our testers to give it more of a thrashing. Note the nightly bin zip \ndoesn't seem to include the various jar dependencies, not sure if this is by \ndesign or not.", "id": 64140, "time": "2004-09-23T22:53:14Z", "creator": "andrew.r.bredhauer@transport.qld.gov.au", "creation_time": "2004-09-23T22:53:14Z", "is_private": false}, {"count": 7, "tags": [], "bug_id": 30741, "attachment_id": null, "text": "I am unsure whether the fix you propose is best.  I cannot be sure from the\npeculiar logic of the existing 2.0.1 code for SSLManager.java exactly what\nbehavior is desired.  Do we want an internal default password, \"password\", if\nthe user's input is null or zero-length?\n\nThe _right_ thing to do should be governed by the failure mode which ultimately\nwill occur if the password is wrong.  As it stands, the user is never prompted\nfor a password and presumably the internal default \"password\" is used.  This\nseems to cause a null client certificate to be submitted to the server, leading\nto a silent failure (unless one sets \"-Djavax.net.debug=ssl\" in which case you\nget the rather unhelpful message \"bad certificate\").  One is left with little or\nno clues as to what is failing, unless he notices that the password prompt that\nshould have occurred didn't.\n\nIf leaving the password null (in the absence of valid user input) leads to an\nappropriate null-pointer exception, then that might be more helpful.  I cannot\nimagine a situation where an internal default of \"password\" would be generally\nuseful, except to avoid generating such a null-pointer exception.\n\nA more desireable scenario would be to somehow clue the user into the fact that\nthe password for his keystore is not working (either he entered it wrong or not\nat all), and perhaps provide a means to correct the situation.  I have not\nlooked at the code to see where or how this might be accomplished.  If such a\nfeature is implemented, it will become entirely obvious what is best to do in\ninitializing the \"javax.net.ssl.keyStorePassword\" property.", "id": 64141, "time": "2004-09-23T22:59:22Z", "creator": "rcook@akimeka.com", "creation_time": "2004-09-23T22:59:22Z", "is_private": false}, {"count": 8, "tags": [], "bug_id": 30741, "text": "Andrew: the jars are in the _lib zip file. I'll update the header to make this\nclear.\n\nRichard: \nthe code uses the property \"javax.net.ssl.keyStorePassword\" to set defaultpw,\nwith no default. When a password is needed, and defaultpw is null, it checks the\nproperty again (see below for why). At this point in 2.0.1, it would use\n\"password\" if the property was not defined. In the latest code, if the property\nis still not defined, it displays a dialogue to prompt for the password. \n\nThe input from the user is then used to set defaultpw *and* the property - so\nthat other instances of the class will use that value, if any, as the default.\nOnce set, the defaultpw is not changed by the *current* instance.\n\nAll:\nI've not done any SSL testing, so I don't know if it is helpful or not to save\nthe users response in the property.\n\nNot sure what to do about dealing with incorrect passwords - is it always the\ncase that a user would want to correct an invalid password? \n[May also need to do some work on the non-GUI behaviour, when prompting is not\nappropriate.]\n\nAFAICS the current fix is an improvement, albeit minor...\n", "id": 64160, "time": "2004-09-24T10:08:42Z", "creator": "sebb@apache.org", "creation_time": "2004-09-24T10:08:42Z", "is_private": false, "attachment_id": null}, {"count": 9, "tags": [], "bug_id": 30741, "attachment_id": null, "text": "No further comments, so assuming the problem is fixed in the forthcoming 2.1\n\nIf not, please re-open when 2.1 comes out.", "id": 77161, "time": "2005-07-11T00:36:02Z", "creator": "sebb@apache.org", "creation_time": "2005-07-11T00:36:02Z", "is_private": false}]