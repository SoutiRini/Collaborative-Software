[{"count": 0, "tags": [], "bug_id": 39095, "text": "There seems to be a problem with pooled connections. Everything works fine but\nafter a while when no authentications are performed ldap_simple_bind_s fails\nwith code 0x34 LDAP_UNAVAILABLE. This causes that the user is reprompted for his\npassword.\nObserving the pooled LDAP connection with netstat gives some interesting\ninformation. When everything is working the TCP Socket state to the LDAP Server\nis ESTABLISHED. After a while the state changes to CLOSE_WAIT. After this state\nchange the authentication will fail once.\nMaybe this happens since the remote server closes the connection.\nI'm working in an ActiveDirectory environment.", "id": 87210, "time": "2006-03-24T13:20:47Z", "creator": "christian.knuechel@gmx.de", "creation_time": "2006-03-24T13:20:47Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "creator": "trawick@apache.org", "attachment_id": null, "text": "What LDAP client library is this?  2.0.55 LDAP checks for SERVER_DOWN retcode\nand retries.  That's the retcode I've seen with a couple of LDAP client\nlibraries when the LDAP server has dropped the connection and a subsequent\nattempt to use the connection fails.\n\n", "id": 87224, "time": "2006-03-24T18:19:15Z", "bug_id": 39095, "creation_time": "2006-03-24T18:19:15Z", "is_private": false}, {"count": 2, "tags": [], "creator": "christian.knuechel@gmx.de", "attachment_id": null, "text": "I compiled the LDAP modules myself with the Microsft Windows Server 2003 SP1\nPlatform SDK. The regular binaries didn't work at all. I think this issue is\ncovered in another bug.\nShort answer is I'm using the Microsoft LDAP SDK.\n\nSince I really need the mod_auth_ldap I patched the code so it also retries when\nthe code is LDAP_UNAVAILABLE. This seems to work.", "id": 87230, "time": "2006-03-24T20:24:10Z", "bug_id": 39095, "creation_time": "2006-03-24T20:24:10Z", "is_private": false}, {"count": 3, "tags": [], "creator": "4chrisj@gmail.com", "attachment_id": null, "text": "Experiencing same problem\nAfter about 10+ minutes I'm seeing the following in the error log\n[LDAP: ldap_simple_bind_s() failed][Unavailable]\n\nUsers see an Internal Server Error page\nIf they refresh the page, the page will load again.\n\nLooks like the LDAP connection pool becomes invalid and an error is displayed.  \nAfter the error, the next request reconnects to the ldap.\n\nI have tried almost every immaginable LDAPCacheTTL and LDAPOpCacheTTL value \nexcept for disabling caching altogether.", "id": 90223, "time": "2006-06-14T21:52:15Z", "bug_id": 39095, "creation_time": "2006-06-14T21:52:15Z", "is_private": false}, {"count": 4, "attachment_id": null, "bug_id": 39095, "is_private": false, "id": 90401, "time": "2006-06-20T15:40:40Z", "creator": "bnicholes@apache.org", "creation_time": "2006-06-20T15:40:40Z", "tags": [], "text": "(In reply to comment #3)\n> After the error, the next request reconnects to the ldap.\n> I have tried almost every immaginable LDAPCacheTTL and LDAPOpCacheTTL value \n> except for disabling caching altogether.\n\nThere aren't any LDAPxxx directives that control the connection cache.  The \nconnection cache is enabled by default with no way to modify it through \nconfiguration.  The existing LDAPCachexxx directives only control the various \ncredential caches.  Bottomline is that there is no way to disable the LDAP \nconnection caching short of adding a new directive to mod_ldap.\n\nThe current code implementation is designed to work basically in the manner \nthat you have described.  It is designed to choose a connection from the \ncache, attempt to use the connection and if it fails, unbind and mark the \nconnection as bad so that the next time it is pulled from the cache, it will \nreconnect.\n\n"}, {"count": 5, "tags": [], "bug_id": 39095, "attachment_id": null, "id": 90559, "time": "2006-06-23T19:17:51Z", "creator": "jsestri2@uiuc.edu", "creation_time": "2006-06-23T19:17:51Z", "is_private": false, "text": "So the only work around is to edit the source code?\n\n(In reply to comment #4)\n> (In reply to comment #3)\n> > After the error, the next request reconnects to the ldap.\n> > I have tried almost every immaginable LDAPCacheTTL and LDAPOpCacheTTL value \n> > except for disabling caching altogether.\n> \n> There aren't any LDAPxxx directives that control the connection cache.  The \n> connection cache is enabled by default with no way to modify it through \n> configuration.  The existing LDAPCachexxx directives only control the various \n> credential caches.  Bottomline is that there is no way to disable the LDAP \n> connection caching short of adding a new directive to mod_ldap.\n> \n> The current code implementation is designed to work basically in the manner \n> that you have described.  It is designed to choose a connection from the \n> cache, attempt to use the connection and if it fails, unbind and mark the \n> connection as bad so that the next time it is pulled from the cache, it will \n> reconnect.\n> \n> \n\n"}, {"count": 6, "tags": [], "bug_id": 39095, "text": "This problem is still present in 2.2 on WinXP. Did anyone have any success in\nresolving the problem in any way?", "id": 103610, "time": "2007-05-24T05:08:27Z", "creator": "moz@liebesgedichte.siteware.ch", "creation_time": "2007-05-24T05:08:27Z", "is_private": false, "attachment_id": null}, {"count": 7, "tags": [], "bug_id": 39095, "attachment_id": null, "id": 103669, "time": "2007-05-25T03:51:02Z", "creator": "moz@liebesgedichte.siteware.ch", "creation_time": "2007-05-25T03:51:02Z", "is_private": false, "text": "I've had a look at the network traffic. What happens is that after succesful\nLDAP message exchanges the TCP connection is teared down from server side with a\nFIN. mod_ldap answers with an ACK and therefore keeps its side of the connection\nopen. Later on mod_ldap sends a bind request over this half open connection, the\nLDAP server responds with a RST and Apache throws a 500.\n\nAs half open connections don't make much sense for LDAP I'd say it would be\nbetter if mod_ldap would send a FIN-ACK when receiving a FIN and tear down the\nconnection completely."}, {"count": 8, "tags": [], "text": "Part of the problem is that you are looking at the 2.0.x code base of \nmod_ldap.  There really isn't much working going on in the 2.0.x code base \nsince mod_authnz_ldap and mod_ldap have moved on significantly in 2.2.x and \ntrunk.  This same issue has already been addressed in 2.2.x (see bug #40878) \nbut there are no plans to back port the patch to 2.0.x mainly because the code \nbases are very different between 2.0.x and 2.2.x.  I would suggest giving \n2.2.x a try and see if that resolves your issue.", "attachment_id": null, "id": 103813, "creation_time": "2007-05-30T08:05:15Z", "time": "2007-05-30T08:05:15Z", "creator": "bnicholes@apache.org", "bug_id": 39095, "is_private": false}, {"count": 9, "tags": [], "bug_id": 39095, "text": "Thanks for your prompt reply Brad. This is still present on Apache 2.2 on Win XP\nconnecting to a Windows 2003 AD server. It gives an [LDAP: ldap_simple_bind_s()\nfailed][Unavailable] error message (as opposed to [LDAP: ldap_simple_bind_s()\nfailed][Can't contact LDAP server] in bug 40878). The network traffic analysis\nfrom comment #7 was done with the newest available windows binaries.", "id": 103815, "time": "2007-05-30T10:10:55Z", "creator": "moz@liebesgedichte.siteware.ch", "creation_time": "2007-05-30T10:10:55Z", "is_private": false, "attachment_id": null}, {"count": 10, "tags": [], "creator": "bnicholes@apache.org", "attachment_id": null, "text": "This goes back to Jeff's comment in comment #2.  When mod_ldap attempts to use \nthe connection, is evaluates the error code that is returned.  In that \nevaluation, it looks for SERVER_DOWN and then retries.  We have already seen \nseveral places where the Windows LDAP server is returning error codes that are \ndifferent from OpenLDAP or Novell LDAP.  This looks like another one.  I don't \nhave a Windows LDAP server nor am I running Apache on Windows so I really \ndon't know what error code the Windows LDAP server is returning.  But my guess \nis that the error code is something other than what is expected.  More \nresearch would have to be done at the source code level by somebody that is \nrunning the code on Windows.", "id": 103826, "time": "2007-05-30T11:58:19Z", "bug_id": 39095, "creation_time": "2007-05-30T11:58:19Z", "is_private": false}, {"count": 11, "attachment_id": null, "bug_id": 39095, "is_private": false, "id": 108313, "time": "2007-09-18T01:39:59Z", "creator": "asf@salminen.info", "creation_time": "2007-09-18T01:39:59Z", "tags": [], "text": "I did use latest 2.2.6 code and I did add ldap_simple_bind_s() return code with\nsprintf( \"...%d\", rc ) to the ldap_simple_bind_s() failed message.\n\nReturn code for this case in my logs was 51. I have limeted undestanding for\nsprintf and I was expecting to see decimal number, but 51 is likely 0x51 (\nLDAP_SERVER_DOWN ). \n\nTCP traffic sniffing verifies that LDAP client does try again and that second\ntry is successful. But for some reason Apache is still sending Internal server\nerror to a http client. If a http clients makes refresh after \"Internal server\nerror\" correct page is served by Apache without any further TCP traffic to LDAP\nserver.\n\nIn the end I agree with Comment #7 \n\nThe LDAP retry is successful! But as MS LDAP server has closed idle \"half open\"\nconnection after 10min without any notice to LDAP client Apache seems to run\ninto \"Internal server error\". LDAP retry is successful, but there is the\n\"Internal server error\" to be shown...\n"}, {"count": 12, "attachment_id": null, "bug_id": 39095, "is_private": false, "id": 109188, "time": "2007-10-10T05:19:44Z", "creator": "apache@syseca-ac.e4ward.com", "creation_time": "2007-10-10T05:19:44Z", "tags": [], "text": "It seems that ist is known what needs to be done :-) (i.e. \"it would be\nbetter if mod_ldap would send a FIN-ACK when receiving a FIN and tear down the\nconnection completely.\"). Is there any chance that this is finally going to be\nimplemented - the bug is known since 1.5 years!"}, {"count": 13, "tags": [], "creator": "bnicholes@apache.org", "text": "Mod_ldap doesn't deal with network connections at this level.  It is the ldap \nclient library that handles ACK's and FIN's.  Mod_ldap doesn't know that \nanything has happened to the network connection until the next time that it \ntries to call an ldap API.  All it can do is handle the error that is \nreturned.  In this case, it is already handling the LDAP_SERVER_DOWN error \ncode properly by re-establishing the connection as was noted in comment #11.  \nThe question remains, where is the internal server error message coming from? \nSomewhere there is a Windows specific error code that is not being handled \nproperly.  Without a Windows box, I can't tell where that is.  Somebody with \nthe ability to debug through the code on Windows, will need to track it down.", "id": 109189, "time": "2007-10-10T06:26:56Z", "bug_id": 39095, "creation_time": "2007-10-10T06:26:56Z", "is_private": false, "attachment_id": null}, {"count": 14, "tags": [], "bug_id": 39095, "text": "(In reply to comment #13)\nBrad, thanks for your prompt respond.\n\nI do fully understand your position (and frankly speaking assume that at the end\n<MS AD is to be blamed>). Unfortunately we do not have the possibility to debug\nthe Windows code. In our environment Apache is the frontend to Subversion and\nActive Directory is used \"just\" to authenticate the users. Whereas an occasional\n\"Internal Server\" error from Apache is not a huge problem for a human user\n(after retrying once all works well) this causes SERIOUS problems for automated\ntaskes, e.g. for Continuous Integration.\n\nI wonder if the solution as proposed in comment #2 is the reasonable (dirty)\nworkaround for the \"poor\" MS AD Users ;-) I already asked at Apache Lounge if\nsomebody would volunteer to do this job for the community.\n", "id": 109190, "time": "2007-10-10T06:54:06Z", "creator": "apache@syseca-ac.e4ward.com", "creation_time": "2007-10-10T06:54:06Z", "is_private": false, "attachment_id": null}, {"count": 15, "tags": [], "bug_id": 39095, "text": "We've patched util_ldap.c on our build of apache to in uldap_connection_open to\ncheck for LDAP_UNAVAILABLE.\nThe patch is actually conditional on\n#if APR_HAS_MICROSOFT_LDAPSDK\n\nThe problem is indeed the Microsoft SDK.  When the TCP RST comes in, instead of\nreturning back to the calling code an LDAP_SERVER_DOWN return code, it returns\nLDAP_UNAVAILABLE, which according to the LDAP RFCs is wrong.  LDAP_UNAVAILABLE\nis supposed to be a server return code telling the client, \"I'm unavailable,\nmaybe I'm shutting down, maybe I'm in the middle of maintenance\".\n\nThe SDK APIs should not be interpreting TCP RSTs as an LDAP_UNAVAILABLE. \nHowever, good luck getting Microsoft to admit and/or fix this.\n\nIf there's enough interest, I can pull out our patch (we have multiple patches\nagainst the file and unfortunately no diff files right now), but I think it's\npretty easy to change uldap_connection_open to do the retry on LDAP_UNAVAILABLE\nif the MS LDAP SDK is used.", "id": 110442, "time": "2007-11-12T11:15:55Z", "creator": "dopey@moonteeth.com", "creation_time": "2007-11-12T11:15:55Z", "is_private": false, "attachment_id": null}, {"count": 16, "tags": [], "bug_id": 39095, "attachment_id": null, "id": 110443, "time": "2007-11-12T11:39:26Z", "creator": "moz@liebesgedichte.siteware.ch", "creation_time": "2007-11-12T11:39:26Z", "is_private": false, "text": "Andy, that would be wonderful. There are certainly quite a few people who would\nlike to see a fix (and be it for a bug in MS' implementation)."}, {"count": 17, "tags": [], "creator": "covener@gmail.com", "attachment_id": 21121, "text": "Created attachment 21121\nuse macro for LDAP_SERVER_DOWN\n\nFor trunk we'd put the macro in apr-util 1.3.x, for Apache 2.2.x the macro\nwould really be in util_ldap.c\n\nI assume this is effectively the patch some of the commenters are using, can\nsomeone give it a try?\n\n2.2.x version of patch here:\nhttp://people.apache.org/~covener/2.2.x-ldap-unavailable.diff", "id": 110459, "time": "2007-11-12T14:41:13Z", "bug_id": 39095, "creation_time": "2007-11-12T14:41:13Z", "is_private": false}, {"count": 18, "tags": [], "bug_id": 39095, "text": "(In reply to comment #17)\n> Created an attachment (id=21121) [edit]\n> use macro for LDAP_SERVER_DOWN\n\nDoesn't this change reverse the sense of the test?\n\n-        if (LDAP_SERVER_DOWN != rc) {\n+        if (APR_LDAP_SERVER_DOWN(rc)) {\n\nIt should be\n        if (!APR_LDAP_SERVER_DOWN(rc)) {\nright?", "id": 110513, "time": "2007-11-13T22:02:34Z", "creator": "khym@azeotrope.org", "creation_time": "2007-11-13T22:02:34Z", "is_private": false, "attachment_id": null}, {"count": 19, "tags": [], "creator": "covener@gmail.com", "attachment_id": 21124, "text": "Created attachment 21124\ntry 2\n\nthanks khym@azeotrope.org ,\n\n2.2.x: http://people.apache.org/~covener/2.2.x-ldap-unavailable-2.diff", "id": 110520, "time": "2007-11-14T03:57:31Z", "bug_id": 39095, "creation_time": "2007-11-14T03:57:31Z", "is_private": false}, {"count": 20, "tags": [], "creator": "dopey@moonteeth.com", "attachment_id": null, "id": 110526, "time": "2007-11-14T10:05:56Z", "bug_id": 39095, "creation_time": "2007-11-14T10:05:56Z", "is_private": false, "text": "Eric's patch is pretty much what we do, and we've tested it against active\ndirectory and Sun's LDAP server from Windows Apache servers and it seems to do\nthe right thing."}, {"count": 21, "tags": [], "creator": "apache@syseca-ac.e4ward.com", "attachment_id": 21129, "text": "Created attachment 21129\nPatch for Apache 2.2.6 (tested successfully with Apache 2.2.4 as well)\n\nThis was tested to work 100% OK with Apache on Windows (built with Visual\nStudio 2005 - download from Apache Lounge).\n\nFor more details & explanations see\nhttp://www.apachelounge.com/forum/viewtopic.php?t=1995", "id": 110587, "time": "2007-11-15T05:59:27Z", "bug_id": 39095, "creation_time": "2007-11-15T05:59:27Z", "is_private": false}, {"count": 22, "tags": [], "creator": "covener@gmail.com", "text": "I don't think it's wise to have other SDKs retry when they return LDAP_UNAVAILABLE", "id": 110593, "attachment_id": null, "bug_id": 39095, "creation_time": "2007-11-15T06:42:57Z", "time": "2007-11-15T06:42:57Z", "is_private": false}, {"count": 23, "tags": [], "bug_id": 39095, "text": "I agree with Eric.  LDAP_UNAVAILABLE is specifically to tell the ldap client to\ngo away and in cases where it's working correctly, the LDAP client should not be\nretrying.  I prefer the conditional macro definition in the previous patch.", "id": 110610, "time": "2007-11-15T11:48:21Z", "creator": "dopey@moonteeth.com", "creation_time": "2007-11-15T11:48:21Z", "is_private": false, "attachment_id": null}, {"count": 24, "tags": [], "creator": "covener@gmail.com", "attachment_id": null, "text": "Can someone with APR karma look at this for APR 1.3.x:\n\nhttp://issues.apache.org/bugzilla/show_bug.cgi?id=43875\n\n(thanks sasha, missed the check in authnz_ldap)\n", "id": 110613, "time": "2007-11-15T12:26:01Z", "bug_id": 39095, "creation_time": "2007-11-15T12:26:01Z", "is_private": false}, {"count": 25, "tags": [], "creator": "apache@syseca-ac.e4ward.com", "attachment_id": null, "text": "(In reply to comment #24)\n> ...\n> (thanks sasha, missed the check in authnz_ldap)\n> \nYou are welcome Eric. Unfortunately MS ActiveDirectory returns LDAP_UNAVAILABLE\nwhen it should not, so this is the possible (dirty, but simple) workaround ;-)\n", "id": 110615, "time": "2007-11-15T13:35:14Z", "bug_id": 39095, "creation_time": "2007-11-15T13:35:14Z", "is_private": false}, {"count": 26, "tags": [], "bug_id": 39095, "text": "re: \"LDAP_UNAVAILABLE is specifically to tell the ldap client to go away\"\n\nIt's not clear that this interpretation is universal, or that the handling of\nLDAP_UNAVAILABLE must necessarily differ from LDAP_SERVER_DOWN.\n\nOpenLDAP, for example, will substitute LDAP_UNAVAILABLE for LDAP_SERVER_DOWN. \nSee http://www.openldap.org/devel/cvsweb.cgi/~checkout~/servers/slapd/result.c\nline 1544 (near the bottom).\n\nThe OpenLDAP back-server code and test programs retry on LDAP_UNAVAILABLE for\nall platforms. See tests/progs/slapd-search.c:186 and\nservers/slapd/back-meta/bind.c:705", "id": 111324, "time": "2007-12-01T09:30:14Z", "creator": "Tom.Donovan@acm.org", "creation_time": "2007-12-01T09:30:14Z", "is_private": false, "attachment_id": null}, {"count": 27, "tags": [], "bug_id": 39095, "text": "It would be great for the ldap gurus to wrap their heads around this and reach\na concensus.  Is it time to ping openldap-devel@openldap.org for their official \nposition on retries and timing when presented with LDAP_UNAVAILABLE?\n\nIs there a reason this hasn't been at least /conditionally/ committed for win32?\n", "id": 112328, "time": "2007-12-30T22:49:51Z", "creator": "wrowe@apache.org", "creation_time": "2007-12-30T22:49:51Z", "is_private": false, "attachment_id": null}, {"count": 28, "tags": [], "text": "Thanks for revisiting Bill, I've created a separate bug to handle the less\npressing issue of retry on LDAP_UNAVAILABLE/BUSY (on non-MS SDK).\n\nhttp://issues.apache.org/bugzilla/show_bug.cgi?id=44155\n\n", "attachment_id": null, "id": 112356, "creation_time": "2007-12-31T09:51:39Z", "time": "2007-12-31T09:51:39Z", "creator": "covener@gmail.com", "bug_id": 39095, "is_private": false}, {"count": 29, "tags": [], "creator": "rpluem@apache.org", "attachment_id": null, "text": "Fixed in 2.2.8.", "id": 113012, "time": "2008-01-19T11:49:00Z", "bug_id": 39095, "creation_time": "2008-01-19T11:49:00Z", "is_private": false}, {"count": 30, "tags": [], "bug_id": 39095, "text": "*** Bug 42498 has been marked as a duplicate of this bug. ***", "id": 127339, "time": "2009-05-23T14:56:19Z", "creator": "covener@gmail.com", "creation_time": "2009-05-23T14:56:19Z", "is_private": false, "attachment_id": null}, {"count": 31, "tags": [], "creator": "markphip@gmail.com", "attachment_id": null, "text": "Is there any reason that the LDAP change committed to the 2.2.23 release would have caused a regression and made this problem return?\n\nI package Subversion Edge which bundles Apache 2.2.23 + SVN 1.7.7.  The version that includes Apache 2.2.23 was only released on October 26th and we have already had at least a dozen different users reporting they are now getting this problem.\n\nUsers will get an HTTP 500 when making a Subversion request, and then subsequent requests for that user will be fine again for a while.  When they get the error, this is what is logged:\n\n[info] [client 204.11.125.146] [1248] auth_ldap authenticate: user XXXXX authentication failed; URI /svn/reposname [LDAP: ldap_simple_bind_s() failed][Unavailable]\n\nThis is only happening with Windows Apache servers.  I note that the 2.2.23 release includes this change, which seems innocuous but also seems to be the only change related to LDAP in the CHANGES\n\nhttp://svn.apache.org/viewvc?view=revision&revision=1375696\n\n--- httpd/httpd/branches/2.2.x/include/util_ldap.h      2012/08/21\n17:48:34        1375695\n+++ httpd/httpd/branches/2.2.x/include/util_ldap.h      2012/08/21\n17:48:58        1375696\n@@ -30,7 +30,7 @@\n#include \"apr_time.h\"\n#include \"apr_ldap.h\"\n-#if APR_HAS_MICROSOFT_LDAPSDK\n+#ifdef LDAP_UNAVAILABLE\n#define AP_LDAP_IS_SERVER_DOWN(s)                ((s) == LDAP_SERVER_DOWN\n\\\n                 ||(s) == LDAP_UNAVAILABLE)\n#else", "id": 163389, "time": "2012-11-12T18:07:49Z", "bug_id": 39095, "creation_time": "2012-11-12T18:07:49Z", "is_private": false}]