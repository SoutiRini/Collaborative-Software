[{"count": 0, "tags": [], "bug_id": 45848, "attachment_id": null, "text": "Like addPathComponent():\n\n    public void addPathComponent(File file) {\n        if (pathComponents.contains(file)) {\n            return;\n        }\n        pathComponents.addElement(file);\n    }\n\nI think addPathFile():\n\n    protected void addPathFile(File pathComponent) throws IOException {\n        pathComponents.addElement(pathComponent);\n        if (pathComponent.isDirectory()) {\n            return;\n        }\n        ...\n    }\n\nshould be testing with:\n\n        if (pathComponents.contains(file)) {\n            return;\n        }\n\nbefore calling addElement().\n\nThis cropped up for me when trying:\n\n\t\t<classloader classpath=\"${user.dir}/commons-net-1.4.1.jar;${user.dir}/jakarta-oro-2.0.8.jar;${user.dir}/ant-commons-net.jar\" parentFirst=\"false\" />\n\nwhich does this in execute():\n\n                acl = new AntClassLoader((ClassLoader) parent,\n                         getProject(), classpath, parentFirst);\n\nand then:\n\n            if (classpath != null) {\n                String[] list = classpath.list();\n                for (int i = 0; i < list.length; i++) {\n                    File f = new File(list[i]);\n                    if (f.exists()) {\n                        acl.addPathElement(f.getAbsolutePath());\n                        log(\"Adding to class loader \" +  acl + \" \" + f.getAbsolutePath(),\n                                Project.MSG_DEBUG);\n                    }\n                }\n            }\n\nadding twice, and yielded debugging:\n\n[classloader] Adding to class loader AntClassLoader[...\\commons-net-1.4.1.jar;...\\jakarta-oro-2.0.8.jar;...\\ant-commons-net.jar;...\\commons-net-1.4.1.jar] ...\\commons-net-1.4.1.jar\n[classloader] Adding to class loader AntClassLoader[...\\commons-net-1.4.1.jar;...\\jakarta-oro-2.0.8.jar;...\\ant-commons-net.jar;...\\commons-net-1.4.1.jar;...\\jakarta-oro-2.0.8.jar] ...\\jakarta-oro-2.0.8.jar\n[classloader] Adding to class loader AntClassLoader[...\\commons-net-1.4.1.jar;...\\jakarta-oro-2.0.8.jar;...\\ant-commons-net.jar;...\\commons-net-1.4.1.jar;...\\jakarta-oro-2.0.8.jar;...\\ant-commons-net.jar] ...\\ant-commons-net.jar\n\nThe test will prevent any duplicates.  I'll enter a separate defect for Classloader for the duplicate add calls.", "id": 120805, "time": "2008-09-19T09:58:30Z", "creator": "robert.flaherty@oracle.com", "creation_time": "2008-09-19T09:58:30Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 45848, "attachment_id": null, "is_private": false, "id": 120978, "time": "2008-09-25T05:34:42Z", "creator": "bodewig@apache.org", "creation_time": "2008-09-25T05:34:42Z", "text": "it probably shouldn't return right away since addPathFile also scans the manifest and the jar itself may have been added but not the jars specified in the manifest.\n\nfixed in svn revision 698947"}, {"count": 2, "text": "Sure, I really meant the contains test.  So I assume you changed to:\n\n        if (pathComponents.contains(file)) {\n            pathComponents.addElement(pathComponent);\n        }\n\nMaybe it would be cleaner for the two to be in sync and have addPathComponent do that also.", "bug_id": 45848, "attachment_id": null, "id": 120987, "time": "2008-09-25T07:18:56Z", "creator": "robert.flaherty@oracle.com", "creation_time": "2008-09-25T07:18:56Z", "tags": [], "is_private": false}]