[{"count": 0, "tags": [], "creator": "marten_berglund@hotmail.com", "is_private": false, "text": "In Apache 2 documentation for mod_rewrite a new B flag is supposed to not unescape back references, see:\n\nhttp://httpd.apache.org/docs/2.2/mod/mod_rewrite.html#rewriteflags\n\nWhen I'm trying this on my testpage in Apache 2.2.9, Apache fails doing just that, which the above example from mod_rewrite's documentation states that it should. That is, C++ or C%2B%2B becomes in the querystring C++ and not C%2B%2B. The same with a&b or a%26b which becomes a&b and not a%26b. For some characters it works: a%23b becomes a%23b.\n\nThis is essential when making rewrite rules for the MediaWiki, which should be able to have pagenames with & and other similar characters in it. Now if an & character appears, it is interpreted as a variable separator in the URL. The B flag should, according to the documentation above, take care of this problem, but it doesn't.\n\nTry it yourself on my test page, and change teststring in the URL below to whatever string you like:\n\nhttp://www.update.uu.se/~marten/test/abc/teststring\n\nSo you know what code you are testing against, the test page contains the following files, a .htaccess file and an index.php file:\n\n.htaccess:\n----------\nRewriteEngine On\nRewriteRule ^abc/(.*)$ /~marten/test/index.php?show=$1 [B]\n\nindex.php:\n----------\n<?php\nif ($_SERVER['SERVER_SOFTWARE'])\n{\necho(\"_SERVER['SERVER_SOFTWARE']: \" . $_SERVER['SERVER_SOFTWARE'] . \"<br><br>\");\n}\n\nif ($_GET['show'])\n{\necho(\"_GET['show']: \" . $_GET['show'] . \"<br>\");\n}\n\nif ($_SERVER['QUERY_STRING'])\n{\necho(\"_SERVER['QUERY_STRING']: \" . $_SERVER['QUERY_STRING'] . \"<br>\");\n}\n\nif ($_GET['show2'])\n{\necho(\"_GET['show2']: \" . $_GET['show2'] . \"<br>\");\n}\n\n$test_var = \"<br>Some special characters like &, % and some escaped %2B and %26 et.c. works fine in a normal PHP string variable.\";\necho($test_var);\n?>", "id": 119328, "time": "2008-08-03T08:59:54Z", "bug_id": 45529, "creation_time": "2008-08-03T08:59:54Z", "attachment_id": null}, {"count": 1, "text": "Can please set the rewriteloglevel to at least 6 and provide the rewritelog for the cases where things fail to work?", "bug_id": 45529, "is_private": false, "id": 119613, "time": "2008-08-08T07:51:29Z", "creator": "rpluem@apache.org", "creation_time": "2008-08-08T07:51:29Z", "tags": [], "attachment_id": null}, {"count": 2, "text": "Sorry, I don't have root access to perform the rewritelog directives. Maybe somebody else could try to reproduce this on her/his server, and provide the logs? \n\nI've had the same problem appear on two completely independent servers (i.e. on two different web hosting services), the only thing in common is that they run Apache 2.2.9.", "bug_id": 45529, "is_private": false, "id": 119704, "time": "2008-08-12T03:50:27Z", "creator": "marten_berglund@hotmail.com", "creation_time": "2008-08-12T03:50:27Z", "tags": [], "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 45529, "attachment_id": null, "is_private": false, "id": 119866, "time": "2008-08-15T15:59:06Z", "creator": "markus.stockhausen@collogia.de", "creation_time": "2008-08-15T15:59:06Z", "text": "Hello,\n\nhere are the results from an test with the following settings:\n\nRewriteEngine on\nRewriteRule ^/rewrite_from/(.*) /rewrite_to/$1 [B,L]\nRewriteLog /var/log/apache/rewrite.log\nRewriteLogLevel 6\n\nFirst test where everything works correctly. Requested URL is http://www.myserver.com/rewrite_from/a%23b\n\n192.168.2.203 - - [16/Aug/2008:00:48:17 +0200] [www.myserver.com/sid#80aafa0][rid#828f000/initial] (2) init rewrite engine with requested uri /rewrite_from/a#b\n192.168.2.203 - - [16/Aug/2008:00:48:17 +0200] [www.myserver.com/sid#80aafa0][rid#828f000/initial] (3) applying pattern '^/rewrite_from/(.*)' to uri '/rewrite_from/a#b'\n192.168.2.203 - - [16/Aug/2008:00:48:17 +0200] [www.myserver.com/sid#80aafa0][rid#828f000/initial] (5) escaping backreference 'a#b' to 'a%23b'\n192.168.2.203 - - [16/Aug/2008:00:48:17 +0200] [www.myserver.com/sid#80aafa0][rid#828f000/initial] (2) rewrite '/rewrite_from/a#b' -> '/rewrite_to/a%23b'\n192.168.2.203 - - [16/Aug/2008:00:48:17 +0200] [www.myserver.com/sid#80aafa0][rid#828f000/initial] (2) local path result: /rewrite_to/a%23b\n192.168.2.203 - - [16/Aug/2008:00:48:17 +0200] [www.myserver.com/sid#80aafa0][rid#828f000/initial] (2) prefixed with document_root to /mnt/www/html/rewrite_to/a%23b\n192.168.2.203 - - [16/Aug/2008:00:48:17 +0200] [www.myserver.com/sid#80aafa0][rid#828f000/initial] (1) go-ahead with /mnt/www/html/rewrite_to/a%23b [OK]\n192.168.2.203 - - [16/Aug/2008:00:48:17 +0200] [www.myserver.com/sid#80aafa0][rid#828f000/initial] (3) [perdir /mnt/www/html/] add path info postfix: /mnt/www/html/rewrite_to -> /mnt/www/html/rewrite_to/a%23b\n192.168.2.203 - - [16/Aug/2008:00:48:17 +0200] [www.myserver.com/sid#80aafa0][rid#828f000/initial] (3) [perdir /mnt/www/html/] strip per-dir prefix: /mnt/www/html/rewrite_to/a%23b -> rewrite_to/a%23b\n192.168.2.203 - - [16/Aug/2008:00:48:17 +0200] [www.myserver.com/sid#80aafa0][rid#828f000/initial] (3) [perdir /mnt/www/html/] applying pattern '^(.*)$' to uri 'rewrite_to/a%23b'\n192.168.2.203 - - [16/Aug/2008:00:48:17 +0200] [www.myserver.com/sid#80aafa0][rid#828f000/initial] (4) [perdir /mnt/www/html/] RewriteCond: input='' pattern='mosConfig_[a-zA-Z_]{1,21}(=|\\%3D)' => not-matched\n192.168.2.203 - - [16/Aug/2008:00:48:17 +0200] [www.myserver.com/sid#80aafa0][rid#828f000/initial] (4) [perdir /mnt/www/html/] RewriteCond: input='' pattern='base64_encode.*\\(.*\\)' => not-matched\n192.168.2.203 - - [16/Aug/2008:00:48:17 +0200] [www.myserver.com/sid#80aafa0][rid#828f000/initial] (4) [perdir /mnt/www/html/] RewriteCond: input='' pattern='(\\<|%3C).*script.*(\\>|%3E)' [NC] => not-matched\n192.168.2.203 - - [16/Aug/2008:00:48:17 +0200] [www.myserver.com/sid#80aafa0][rid#828f000/initial] (4) [perdir /mnt/www/html/] RewriteCond: input='' pattern='GLOBALS(=|\\[|\\%[0-9A-Z]{0,2})' => not-matched\n192.168.2.203 - - [16/Aug/2008:00:48:17 +0200] [www.myserver.com/sid#80aafa0][rid#828f000/initial] (4) [perdir /mnt/www/html/] RewriteCond: input='' pattern='_REQUEST(=|\\[|\\%[0-9A-Z]{0,2})' => not-matched\n192.168.2.203 - - [16/Aug/2008:00:48:17 +0200] [www.myserver.com/sid#80aafa0][rid#828f000/initial] (3) [perdir /mnt/www/html/] add path info postfix: /mnt/www/html/rewrite_to -> /mnt/www/html/rewrite_to/a%23b\n192.168.2.203 - - [16/Aug/2008:00:48:17 +0200] [www.myserver.com/sid#80aafa0][rid#828f000/initial] (3) [perdir /mnt/www/html/] strip per-dir prefix: /mnt/www/html/rewrite_to/a%23b -> rewrite_to/a%23b\n192.168.2.203 - - [16/Aug/2008:00:48:17 +0200] [www.myserver.com/sid#80aafa0][rid#828f000/initial] (3) [perdir /mnt/www/html/] applying pattern '(.*)' to uri 'rewrite_to/a%23b'\n\nSecond test where everything goes wrong. Requested URL is http://www.myserver.com/rewrite_from/a%26b\n\n192.168.2.203 - - [16/Aug/2008:00:49:26 +0200] [www.myserver.com/sid#80aafa0][rid#828f000/initial] (2) init rewrite engine with requested uri /rewrite_from/a&b\n192.168.2.203 - - [16/Aug/2008:00:49:26 +0200] [www.myserver.com/sid#80aafa0][rid#828f000/initial] (3) applying pattern '^/rewrite_from/(.*)' to uri '/rewrite_from/a&b'\n192.168.2.203 - - [16/Aug/2008:00:49:26 +0200] [www.myserver.com/sid#80aafa0][rid#828f000/initial] (5) escaping backreference 'a&b' to 'a&b'\n192.168.2.203 - - [16/Aug/2008:00:49:26 +0200] [www.myserver.com/sid#80aafa0][rid#828f000/initial] (2) rewrite '/rewrite_from/a&b' -> '/rewrite_to/a&b'\n192.168.2.203 - - [16/Aug/2008:00:49:26 +0200] [www.myserver.com/sid#80aafa0][rid#828f000/initial] (2) local path result: /rewrite_to/a&b\n192.168.2.203 - - [16/Aug/2008:00:49:26 +0200] [www.myserver.com/sid#80aafa0][rid#828f000/initial] (2) prefixed with document_root to /mnt/www/html/rewrite_to/a&b\n192.168.2.203 - - [16/Aug/2008:00:49:26 +0200] [www.myserver.com/sid#80aafa0][rid#828f000/initial] (1) go-ahead with /mnt/www/html/rewrite_to/a&b [OK]\n192.168.2.203 - - [16/Aug/2008:00:49:26 +0200] [www.myserver.com/sid#80aafa0][rid#828f000/initial] (3) [perdir /mnt/www/html/] add path info postfix: /mnt/www/html/rewrite_to -> /mnt/www/html/rewrite_to/a&b\n192.168.2.203 - - [16/Aug/2008:00:49:26 +0200] [www.myserver.com/sid#80aafa0][rid#828f000/initial] (3) [perdir /mnt/www/html/] strip per-dir prefix: /mnt/www/html/rewrite_to/a&b -> rewrite_to/a&b\n192.168.2.203 - - [16/Aug/2008:00:49:26 +0200] [www.myserver.com/sid#80aafa0][rid#828f000/initial] (3) [perdir /mnt/www/html/] applying pattern '^(.*)$' to uri 'rewrite_to/a&b'\n192.168.2.203 - - [16/Aug/2008:00:49:26 +0200] [www.myserver.com/sid#80aafa0][rid#828f000/initial] (4) [perdir /mnt/www/html/] RewriteCond: input='' pattern='mosConfig_[a-zA-Z_]{1,21}(=|\\%3D)' => not-matched\n192.168.2.203 - - [16/Aug/2008:00:49:26 +0200] [www.myserver.com/sid#80aafa0][rid#828f000/initial] (4) [perdir /mnt/www/html/] RewriteCond: input='' pattern='base64_encode.*\\(.*\\)' => not-matched\n192.168.2.203 - - [16/Aug/2008:00:49:26 +0200] [www.myserver.com/sid#80aafa0][rid#828f000/initial] (4) [perdir /mnt/www/html/] RewriteCond: input='' pattern='(\\<|%3C).*script.*(\\>|%3E)' [NC] => not-matched\n192.168.2.203 - - [16/Aug/2008:00:49:26 +0200] [www.myserver.com/sid#80aafa0][rid#828f000/initial] (4) [perdir /mnt/www/html/] RewriteCond: input='' pattern='GLOBALS(=|\\[|\\%[0-9A-Z]{0,2})' => not-matched\n192.168.2.203 - - [16/Aug/2008:00:49:26 +0200] [www.myserver.com/sid#80aafa0][rid#828f000/initial] (4) [perdir /mnt/www/html/] RewriteCond: input='' pattern='_REQUEST(=|\\[|\\%[0-9A-Z]{0,2})' => not-matched\n192.168.2.203 - - [16/Aug/2008:00:49:26 +0200] [www.myserver.com/sid#80aafa0][rid#828f000/initial] (3) [perdir /mnt/www/html/] add path info postfix: /mnt/www/html/rewrite_to -> /mnt/www/html/rewrite_to/a&b\n192.168.2.203 - - [16/Aug/2008:00:49:26 +0200] [www.myserver.com/sid#80aafa0][rid#828f000/initial] (3) [perdir /mnt/www/html/] strip per-dir prefix: /mnt/www/html/rewrite_to/a&b -> rewrite_to/a&b\n192.168.2.203 - - [16/Aug/2008:00:49:26 +0200] [www.myserver.com/sid#80aafa0][rid#828f000/initial] (3) [perdir /mnt/www/html/] applying pattern '(.*)' to uri 'rewrite_to/a&b'\n\nI hope I got the correct lines from the debug output as I have further rewrite rules in my .htaccess files.\n\nBest regards.\n\nMarkus\n"}, {"count": 4, "tags": [], "bug_id": 45529, "attachment_id": null, "text": "Thank you Markus for the log! Seems that my bug report is confirmed then. Any comment from any Apache developer - it is really a bug, isn't it? Can it be easily fixed within the next release?", "id": 119961, "time": "2008-08-20T13:43:25Z", "creator": "marten_berglund@hotmail.com", "creation_time": "2008-08-20T13:43:25Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 45529, "attachment_id": null, "is_private": false, "id": 120701, "time": "2008-09-17T02:42:53Z", "creator": "samuel.williams@oriontransfer.co.nz", "creation_time": "2008-09-17T02:42:53Z", "text": "I seem to be having this problem too:\n\n10.0.0.128 - - [17/Sep/2008:21:36:48 +1200] [git.oriontransfer.org/sid#824e4f0][rid#8474120/initial] (2) init rewrite engine with requested uri /Scripting/XcodeUserScripts.git/web/Menu/Code/C++/\n10.0.0.128 - - [17/Sep/2008:21:36:48 +1200] [git.oriontransfer.org/sid#824e4f0][rid#8474120/initial] (3) applying pattern '^(.*\\.git)\\/web\\/(.*)$' to uri '/Scripting/XcodeUserScripts.git/web/Menu/Code/C++/'\n10.0.0.128 - - [17/Sep/2008:21:36:48 +1200] [git.oriontransfer.org/sid#824e4f0][rid#8474120/initial] (5) escaping backreference '/Scripting/XcodeUserScripts.git' to '%2fScripting%2fXcodeUserScripts.git'\n10.0.0.128 - - [17/Sep/2008:21:36:48 +1200] [git.oriontransfer.org/sid#824e4f0][rid#8474120/initial] (5) escaping backreference 'Menu/Code/C++/' to 'Menu%2fCode%2fC++%2f'\n10.0.0.128 - - [17/Sep/2008:21:36:48 +1200] [git.oriontransfer.org/sid#824e4f0][rid#8474120/initial] (2) rewrite '/Scripting/XcodeUserScripts.git/web/Menu/Code/C++/' -> '/git.rhtml?r=%2fScripting%2fXcodeUserScripts.git&p=Menu%2fCode%2fC++%2f'\n10.0.0.128 - - [17/Sep/2008:21:36:48 +1200] [git.oriontransfer.org/sid#824e4f0][rid#8474120/initial] (3) split uri=/git.rhtml?r=%2fScripting%2fXcodeUserScripts.git&p=Menu%2fCode%2fC++%2f -> uri=/git.rhtml, args=r=%2fScripting%2fXcodeUserScripts.git&p=Menu%2fCode%2fC++%2f\n10.0.0.128 - - [17/Sep/2008:21:36:48 +1200] [git.oriontransfer.org/sid#824e4f0][rid#8474120/initial] (2) local path result: /git.rhtml\n10.0.0.128 - - [17/Sep/2008:21:36:48 +1200] [git.oriontransfer.org/sid#824e4f0][rid#8474120/initial] (2) prefixed with document_root to /srv/git/www/git.rhtml\n10.0.0.128 - - [17/Sep/2008:21:36:48 +1200] [git.oriontransfer.org/sid#824e4f0][rid#8474120/initial] (1) go-ahead with /srv/git/www/git.rhtml [OK]\n10.0.0.128 - - [17/Sep/2008:21:36:49 +1200] [git.oriontransfer.org/sid#824e4f0][rid#8474120/initial] (2) init rewrite engine with requested uri /favicon.ico\n10.0.0.128 - - [17/Sep/2008:21:36:49 +1200] [git.oriontransfer.org/sid#824e4f0][rid#8474120/initial] (3) applying pattern '^(.*\\.git)\\/web\\/(.*)$' to uri '/favicon.ico'\n10.0.0.128 - - [17/Sep/2008:21:36:49 +1200] [git.oriontransfer.org/sid#824e4f0][rid#8474120/initial] (1) pass through /favicon.ico\n\n\n\n\n"}, {"count": 6, "tags": [], "creator": "samuel.williams@oriontransfer.co.nz", "attachment_id": null, "id": 120702, "time": "2008-09-17T03:29:33Z", "bug_id": 45529, "creation_time": "2008-09-17T03:29:33Z", "is_private": false, "text": "I've solved this for my very specific case:\n\n\tRewriteEngine on\n\tRewriteCond %{THE_REQUEST} ^.*?\\/(.*\\.git)\\/web\\/(.*)\\s+HTTP.*$\n\tRewriteRule ^.*$ /git.rhtml?r=%1&p=%2 [L]\n\nWhat I expected to be able to write is:\n\n\tRewriteEngine on\n\tRewriteRule ^(.*\\.git)\\/web\\/(.*)$ /git.rhtml?r=$1&p=$2 [B]\n\nBut this doesn't seem to work. I've noticed that when requesting \n\nhttp://git.oriontransfer.org/Scripting/XcodeUserScripts.git/web/Menu/Code/C%2B%2B/20-Unique+Header.rb\n\nIt is logged as:\n\n10.0.0.128 - - [17/Sep/2008:22:22:47 +1200] [git.oriontransfer.org/sid#b818eb00][rid#b83cf178/initial] (2) init rewrite engine with requested uri /Scripting/XcodeUserScripts.git/web/Menu/Code/C++/10-CPP+Class+Members.rb\n\n\n\"C++\" is not escaped as \"C%2B%2B\" as it is passed from the original query. I'm not sure how Apache is handling this internally, but I would have expected to see:\n\ninit rewrite engine with requested uri /Scripting/XcodeUserScripts.git/web/Menu/Code/C%2B%2B/10-CPP+Class+Members.rb\n\ni.e. something before mod_rewrite is un-escaping the URL before it gets to mod-rewrite. This might be why the [B] flag appears to have no effect.\n\nKind regards,\nSamul"}, {"count": 7, "tags": [], "creator": "tfavre@gmail.com", "text": "Hi,\n\nThis bug got me scratched my head heavily and, at the end, I must say I was (almost) pleased to see it was a bug :) I can confirm that the 'plus' sign gets unescaped too on Apache 2.2.8 on Ubuntu Hardy. Here's the test code I used to reproduce the bug:\n\nthibs@taj:~/public_html$ cat .htaccess \nRewriteEngine On\nRewriteBase /\nRewriteRule ^action/(.*)$ index.php?show=$1 [B]\n\nthibs@taj:~/public_html$ cat index.php \n<?php\necho(\"request uri: \".$_SERVER['REQUEST_URI'].\"<br/>\");\necho(\"query string: \".$_SERVER['QUERY_STRING'].\"<br/>\");\necho(\"'show' param value: \".$_GET['show']);\n?>\n\nNow accessing http://www.myserver.com/action/test%2Ba gives:\nrequest uri: /action/test%2Ba\nquery string: show=test+a\n'show' param value: test a\n\nMy immediate (very) quick and dirty work around was to manually escape and unescape the plus sign by replacing it with a '_plusign_' string. If you need more logs or info about this bug, let me know...\nRegards,\n\nThibauld", "id": 122005, "time": "2008-10-29T15:08:46Z", "bug_id": 45529, "creation_time": "2008-10-29T15:08:46Z", "is_private": false, "attachment_id": null}, {"count": 8, "text": "This is caused by a \"regression\" in trunk (r589343). Maybe bug 34602 should be reopened, because the committed patch there (r573831) works.\n\nThe problem with r589343 seems to be that ap_escape_path_segment() is used now.", "bug_id": 45529, "attachment_id": null, "id": 123437, "time": "2008-12-19T14:54:55Z", "creator": "bobsiegen@googlemail.com", "creation_time": "2008-12-19T14:54:55Z", "tags": [], "is_private": false}, {"count": 9, "text": "Bob, I'm sitting here with a wretched cold and can't think much.  Can you identify what difference(s) in ap_escape_path_segment vs the r573831 code are causing the problem?  Is the test in ap_escape_path_segment_buffer wrong for this, or does something rely on ' ' --> '+' escaping?", "bug_id": 45529, "is_private": false, "id": 123452, "time": "2008-12-20T15:40:39Z", "creator": "nick@webthing.com", "creation_time": "2008-12-20T15:40:39Z", "tags": [], "attachment_id": null}, {"count": 10, "text": "(In reply to comment #9)\n> or does something rely on ' ' --> '+' escaping?\n\nNo, it's good that a space should be encoded into %20 since a substitution /$1?query=$2 and flags [B,NE,R] should escape a space in $1 (i.e. URL-path segment) into a %20.\n\nap_escape_path_segment checks T_ESCAPE_PATH_SEGMENT as far as I understand.\n\nI found in gen_test_char.c\n\n        if (!apr_isalnum(c) && !strchr(\"$-_.+!*'(),:@&=~\", c)) {\n            flags |= T_ESCAPE_PATH_SEGMENT;\n        }\n\nwhich reads to me if the char is not alpha-numeric and not $-_.+!*'(),:@&=~ flag it as T_ESCAPE_PATH_SEGMENT. But the problem is, that we don't want to exclude those special characters here. The B flag works pretty well if you request e.g. %22%23 (-> \"# --> %22%23).\n\n> I'm sitting here with a wretched cold\n\nI hope you will get well soon!", "bug_id": 45529, "is_private": false, "id": 123453, "time": "2008-12-20T18:16:58Z", "creator": "bobsiegen@googlemail.com", "creation_time": "2008-12-20T18:16:58Z", "tags": [], "attachment_id": null}, {"count": 11, "tags": [], "creator": "nick@webthing.com", "text": "OK, I've verified that reverting r589343 fixes \"B\" flag breakage, and reverted it in trunk.  Thanks for the analysis.", "id": 123651, "time": "2008-12-30T16:09:33Z", "bug_id": 45529, "creation_time": "2008-12-30T16:09:33Z", "is_private": false, "attachment_id": null}, {"count": 12, "tags": [], "creator": "bobsiegen@googlemail.com", "text": "Just one question beyond (may be better at dev@?): How should we handle a slash? Currently (AFAICR), the B flag escapes '/' into '%2f', too. That could be a \"problem\" in per-dir context, if the filepath is being changed by a backreference containing a slash, too. The escaping of the path itself wouldn't be a problem due to the internal redirect processing,* except the encoded slash and may be the space, which should be changed into %20 again, I think.\n\nOr should we consider the B flag to be unsupported, if s/o uses a backreference in the path and queryString simultaneously?\n\n(* in per-server context unescape map for the path)", "id": 123652, "time": "2008-12-30T16:40:39Z", "bug_id": 45529, "creation_time": "2008-12-30T16:40:39Z", "is_private": false, "attachment_id": null}, {"count": 13, "tags": [], "creator": "nick@webthing.com", "text": "Fix backported to 2.2 in r732578", "id": 123850, "time": "2009-01-07T17:25:56Z", "bug_id": 45529, "creation_time": "2009-01-07T17:25:56Z", "is_private": false, "attachment_id": null}, {"count": 14, "tags": [], "creator": "marten_berglund@hotmail.com", "attachment_id": null, "id": 127012, "time": "2009-05-14T04:35:47Z", "bug_id": 45529, "creation_time": "2009-05-14T04:35:47Z", "is_private": false, "text": "Thanks for all the work! However, is it supposed to work now in e.g. 2.2.11? I tried my testpage above (see first post above) and it still doesn't work, even though my server now has Apache 2.2.11."}, {"count": 15, "tags": [], "bug_id": 45529, "text": "2.2.11 was released before this fix was backported to the 2.2 code stream.  Look for the fix in 2.2.12 when that comes out.", "id": 127013, "attachment_id": null, "creator": "poirier@pobox.com", "creation_time": "2009-05-14T05:34:01Z", "time": "2009-05-14T05:34:01Z", "is_private": false}]