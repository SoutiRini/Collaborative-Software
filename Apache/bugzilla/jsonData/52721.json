[{"count": 0, "tags": [], "creator": "lianggt08@sei.pku.edu.cn", "text": "The fix revision 423920 was aimed to remove an resource leak bug on the  FileOutputStream object \"fos\"and the ObjectOutputStream \"oos\"  in the method \"cacheContext\" of the file \"/tomcat/tc6.0.x/trunk/java/org/apache/catalina/core/StandardContext.java\" , but it is incomplete. \n\nWhen the statements at lines 4792 throw any eception, the objects \"fos\" and \"oos\" can not be closed as expected. The best way to close such resource object is putting such close operations in the finaly block of a try-catch-finally structure.\n\nBesides that, when oos is created unsuccessfully but \"fos\"  is created successfully,  \"fos\" will also be leaked. \n\n\nThe buggy code in the head revision is copied as bellows:\n\n\n private void cacheContext() {\n        try {\n            File workDir=new File( getWorkPath() );\n            \n            File ctxSer=new File( workDir, \"_tomcat_context.ser\");\n            FileOutputStream fos=new FileOutputStream( ctxSer );\n            ObjectOutputStream oos=new ObjectOutputStream( fos );\n            oos.writeObject(this);\n[line 4793]            oos.close();\n[line 4794]            fos.close();\n        } catch( Throwable t ) {\n            if(log.isInfoEnabled())\n                log.info(\"Error saving context.ser \", t);\n        }\n    }", "id": 153966, "time": "2012-02-21T10:00:19Z", "bug_id": 52721, "creation_time": "2012-02-21T10:00:19Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 52721, "attachment_id": null, "text": "That method is unused. Since it is private, it could be removed. There is no issue here.", "id": 154766, "time": "2012-03-09T20:20:04Z", "creator": "markt@apache.org", "creation_time": "2012-03-09T20:20:04Z", "is_private": false}]