[{"count": 0, "attachment_id": null, "bug_id": 23564, "is_private": false, "id": 45006, "time": "2003-10-02T12:33:43Z", "creator": "zul.abas@hksystems.com", "creation_time": "2003-10-02T12:33:43Z", "tags": [], "text": "I use JNI to load up my library(load up statically). Everything will run well if\nI don't compile any classes when tomcat 4.1.24 is running. I can fetch data etc\nusing JNI. The moment I compile a new class and it gets loaded(you can see it in\nthe Tomcat window), any screens that uses JNI will complain:-\n\njava.lang.UnsatisfiedLinkError.  Somehow when a class is recompiled, Tomcat\nresets something but does not unload the DLL. However, it tries to load up the\nDLL again after a class is loaded. I am as ascertained of this behavior."}, {"count": 1, "tags": [], "bug_id": 23564, "attachment_id": null, "id": 47860, "time": "2003-11-21T19:37:24Z", "creator": "funkman@joedog.org", "creation_time": "2003-11-21T19:37:24Z", "is_private": false, "text": "In the release notes:\nhttp://cvs.apache.org/viewcvs.cgi/jakarta-tomcat-4.0/RELEASE-NOTES-4.1.txt?rev=1.81&content-type=text/vnd.viewcvs-markup\n\n-------------------------------------\nTomcat 4.1 and JNI Based Applications:\n-------------------------------------\n\nApplications that require native libraries must ensure that the libraries have\nbeen loaded prior to use.  Typically, this is done with a call like:\n\n  static {\n    System.loadLibrary(\"path-to-library-file\");\n  }\n\nin some class.  However, the application must also ensure that the library is\nnot loaded more than once.  If the above code were placed in a class inside\nthe web application (i.e. under /WEB-INF/classes or /WEB-INF/lib), and the\napplication were reloaded, the loadLibrary() call would be attempted a second\ntime.\n\nTo avoid this problem, place classes that load native libraries outside of the\nweb application, and ensure that the loadLibrary() call is executed only once\nduring the lifetime of a particular JVM.\n"}]