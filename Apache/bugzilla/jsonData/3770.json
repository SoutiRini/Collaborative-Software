[{"count": 0, "tags": [], "bug_id": 3770, "attachment_id": null, "is_private": false, "id": 5888, "time": "2001-09-21T11:26:19Z", "creator": "hans@gefionsoftware.com", "creation_time": "2001-09-21T11:26:19Z", "text": "The sessionCreated() method is called twice for each new session.\n\nTest code:\n\npublic class MyListener implements HttpSessionListener {\n    public void sessionCreated(HttpSessionEvent hse) {\n\tHttpSession session = hse.getSession();\n\tSystem.out.println(\"Created called: \" + session.getId());\n\tSystem.out.println(\"isNew(): \" + session.isNew());\n    }\n}\n\nResult:\n  Created called: F054C065430771A554A54117C113D446\n  isNew(): true\n  Created called: F054C065430771A554A54117C113D446\n  isNew(): true"}, {"count": 1, "tags": [], "bug_id": 3770, "text": "On further experimentation, I noticed that this error only occurs when I define \nthe tag library that contains the listener in the web.xml file with a taglib \nelement. If I rely on auto-discovery of tag libraries, everything works fine.\n\nMost likely, the listener is registered once when the container processes the \nTLD it finds through auto-discovery, and then again when it finds the TLD \nthrough the web.xml definition. Checking whether a TLD has already been \nprocessed before registering listeners should fix the problem.", "id": 6012, "time": "2001-09-25T11:48:20Z", "creator": "hans@gefionsoftware.com", "creation_time": "2001-09-25T11:48:20Z", "is_private": false, "attachment_id": null}, {"text": "This problem will be addressed later.\n\nIt only affects people which:\n* Explicitly have a <taglib> element in your web.xml file\n* This <taglib> element refers to a JAR file, not a TLD file\n* There is a TLD inside this JAR file that defines a listener.", "tags": [], "creator": "remm@apache.org", "attachment_id": null, "count": 2, "id": 6667, "time": "2001-10-12T19:31:22Z", "bug_id": 3770, "creation_time": "2001-10-12T19:31:22Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 3770, "attachment_id": null, "text": "Reopen.", "id": 10719, "time": "2002-02-14T19:52:31Z", "creator": "remm@apache.org", "creation_time": "2002-02-14T19:52:31Z", "is_private": false}, {"text": "I've added a chack which should prevent registering the same listener twice.", "tags": [], "creator": "remm@apache.org", "attachment_id": null, "count": 4, "id": 10720, "time": "2002-02-14T20:03:24Z", "bug_id": 3770, "creation_time": "2002-02-14T20:03:24Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 3770, "text": "I am seeing symptoms of this bug in tomcat 4.1.12 and 4.1.18 on Linux 7.2\n\nI use the following code for the HttpSessionListener.sessionCreated() method:\n\n  public void sessionCreated(HttpSessionEvent event) {\n    try {\n      Object sessionId = event.getSession().getId();\n      System.out.println(\"SessionCounter.sessionCreated called for \nid: \"+sessionId);\n      System.out.println(\"SessionCounter.sessionCreated isNew=\"+event.getSession\n().isNew());\n      if(! (sessionList.contains(sessionId)) ){\n        sessionList.add(sessionId);\n        totalSessionCount++;\n        currentSessionCount++;\n        if (currentSessionCount > maxSessionCount) {\n          maxSessionCount = currentSessionCount;\n        }\n        if (context == null) {\n          storeInServletContext(event);\n        }\n      }\n    }\n    catch(Exception e) {\n      e.printStackTrace();\n    }\n  }\n\n\nPlease note: I'm using the vector to hold the sessionId so that I can avoid the \ndouble counting. However, the problem occurs without the added code.\n\nThe web.xml is as follows:\n\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE web-app PUBLIC \"-//Sun Microsystems, Inc.//DTD Web Application \n2.3//EN\" \"http://java.sun.com/dtd/web-app_2_3.dtd\">\n<web-app>\n  <filter>\n    <filter-name>RedirectFilter</filter-name>\n    <filter-class>com.checkpoint.webapp.filter.RedirectFilter</filter-class>\n    <init-param>\n      <param-name>maxActiveSessions</param-name>\n      <param-value>4</param-value>\n    </init-param>\n    <init-param>\n      <param-name>redirectURL</param-name>\n      <param-value>https://usercenter.checkpoint.com/</param-value>\n    </init-param>\n  </filter>\n  <filter-mapping>\n    <filter-name>RedirectFilter</filter-name>\n    <url-pattern>/*</url-pattern>\n  </filter-mapping>\n  <listener>\n    <listener-class>com.checkpoint.webapp.listener.SessionCounter</listener-\nclass>\n  </listener>\n  <session-config>\n    <session-timeout>2</session-timeout>\n  </session-config>\n</web-app>\n\n\nthe output is:\n\nSessionCounter.sessionCreated called for id: \n632E263A1EDE464BBD19BB1D5D4C7EDD.tomcat1\nSessionCounter.sessionCreated isNew=true\nSessionCounter.sessionCreated called for id: \n632E263A1EDE464BBD19BB1D5D4C7EDD.tomcat1\nSessionCounter.sessionCreated isNew=true\n\n\nthere are no other contexts (no ROOT or others) and no taglibs\n\n\n\n\n\n", "id": 32381, "time": "2003-03-04T00:13:21Z", "creator": "bortner@checkpoint.com", "creation_time": "2003-03-04T00:13:21Z", "is_private": false, "attachment_id": null}, {"count": 6, "tags": [], "bug_id": 3770, "attachment_id": null, "text": "JFC's session manager refactoring should fix it in 4.1.24 (as well as other \ncleanups and fixes).", "id": 35206, "time": "2003-04-15T15:45:07Z", "creator": "remm@apache.org", "creation_time": "2003-04-15T15:45:07Z", "is_private": false}]