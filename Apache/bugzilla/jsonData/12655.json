[{"count": 0, "tags": [], "bug_id": 12655, "attachment_id": null, "text": "I have run into this problem in both 2.0.39 and 2.0.40.\n\nUsing httpd 2.0.40 in Linux Mandrake 8.2, compiled without any external modules\n(but with --enable-rewrite), I have set the following things in httpd.conf:\n\nAddHandler cgi-script .sgi\nAddOutputFilter INCLUDES .sgi\n\nMy intent is to server-parse the output of cgi scripts whose filename ends with\n.sgi.  This seems to work, if I print \"<!--set VAR=\\\"FOO\\\" VALUE=\\\"bar\\\" -->\\n\"\n; in the script, it is indeed set, so that code like:\n\n<!--#include virtual=\"/cgi-bin/foo.sgi?$QUERY_STRING\" -->\n<!--#if expr=\"$FOO\" -->\nFoo is set.\n<!--#else -->\nFoo is not set.\n<!--#endif -->\n\nproduces the expected final output \"Foo is set.\".\n\nHowever, if I have several \"include virtual\" statements in the same .shtml file,\nthere appears to be a problem.  If I add more include virtual statements to this\nfile, like:\n\n<!--#include virtual=\"/cgi-bin/foo.sgi?$QUERY_STRING\" -->\n<!--#include virtual=\"/somefile.html\" -->\n<!--#include virtual=\"/another_existing_file.html\" -->\n<PRE>\n<!--#include virtual=\"/cgi-bin/printenv?$QUERY_STRING\" -->\n</PRE>\n\n... printenv will show QUERY_STRING to be an empty string, and\nQUERY_STRING_UNESCAPED to be a disturbingly different line of garbage each time.\n\nI'm available to test fixes on my example setup.\n\nWilliam Drury", "id": 22872, "time": "2002-09-15T02:02:09Z", "creator": "bild@io.com", "creation_time": "2002-09-15T02:02:09Z", "is_private": false}, {"count": 1, "text": "This is probably related to bug 12542.", "bug_id": 12655, "attachment_id": null, "id": 22881, "time": "2002-09-15T16:47:27Z", "creator": "slive@apache.org", "creation_time": "2002-09-15T16:47:27Z", "tags": [], "is_private": false}, {"count": 2, "tags": [], "bug_id": 12655, "attachment_id": null, "id": 23670, "time": "2002-09-30T21:36:54Z", "creator": "bild@io.com", "creation_time": "2002-09-30T21:36:54Z", "is_private": false, "text": "This behaviour is still occurring in 2.0.42"}, {"count": 3, "tags": [], "bug_id": 12655, "attachment_id": null, "id": 37387, "time": "2003-05-17T20:50:19Z", "creator": "nd@perlig.de", "creation_time": "2003-05-17T20:50:19Z", "is_private": false, "text": "It works for me with HEAD. Can you please test the current version with your\nsetup and confirm?\n\nThanks!"}, {"count": 4, "text": "No further response. Assuming issue resolved.\n\nPlease reopen the bug if this is not the case and you can provide additional\ninformation.\n\nThanks for using Apache.\n", "bug_id": 12655, "attachment_id": null, "id": 38127, "time": "2003-06-01T17:16:55Z", "creator": "nd@perlig.de", "creation_time": "2003-06-01T17:16:55Z", "tags": [], "is_private": false}, {"count": 5, "text": "the bug still exists in 2.0.54.\n\nthe problem is that during subrequest processing, QUERY_STRING is allocated from\nsubrequest's own r->pool that gets destroyed later, invalidating the table entry\nin the global suprocess_env.\n\napr_pool_join(r->main->pool, r->pool); which, if i'm correct, is supposed to\ntake care of subrequest's pool lifetime, is effectively a nop when compiled\nwithout APR_POOL_DEBUG (--enable-pool-debug).\n\nthere might be other consequences of assuming extended lifetime of subrequest's\npool, but in regard to QUERY_STRING i have made a small patch that i attach to\nthis bug.\n\nhaving investigated this i find the issue obvious enough, but i can arrange a\ntestcase if requested.", "bug_id": 12655, "attachment_id": null, "id": 75599, "time": "2005-05-30T18:18:39Z", "creator": "apache-bugs@rojer.pp.ru", "creation_time": "2005-05-30T18:18:39Z", "tags": [], "is_private": false}, {"count": 6, "tags": [], "bug_id": 12655, "attachment_id": 15216, "id": 75600, "time": "2005-05-30T18:20:43Z", "creator": "apache-bugs@rojer.pp.ru", "creation_time": "2005-05-30T18:20:43Z", "is_private": false, "text": "Created attachment 15216\nthe patch for QUERY_STRING case"}, {"count": 7, "tags": [], "bug_id": 12655, "attachment_id": null, "text": "Hmmm, interesting.  Do you have a simple test case which reliably reproduces the\nissue, I can't get the examples above to fail?\n\nBut I don't disagree with your analysis, though I'm not convinced your fix is\nsufficient.  Are there other places where r->main->subprocess_env will get\npopulated from r->pool during the subrequest?  I think there are: e.g., \nhandle_set().\n\nThe apr_pool_join() call isn't supposed to actually do anything for non-debug\nbuilds; it just says \"I guarantee that this subpool won't be destroyed before\nits parent\".  But in fact that guarantee is not really given: the subrequest\nr->pool *is* destroyed, when ap_destroy_sub_req is called.\n\nSo a possibly more correct fix would be to just remove the call to\nap_destroy_sub_request.  Does that fix your case, also?", "id": 75624, "time": "2005-05-31T11:45:20Z", "creator": "jorton@redhat.com", "creation_time": "2005-05-31T11:45:20Z", "is_private": false}, {"count": 8, "tags": [], "bug_id": 12655, "attachment_id": null, "text": "i have even shorter test case.\n\nhttp://testcase12655.rbc.ru:88/?testQS - non-patched 2.0.54, QS3 should contain\ngarbage.\n\nhttp://testcase12655.rbc.ru/?testQS - patched, should be ok.\n\nyou can browse the source here:\nhttp://testcase12655.rbc.ru/index.txt\nhttp://testcase12655.rbc.ru/q.txt\nhttp://testcase12655.rbc.ru/empty.txt\n(every .shtml has a corresponding .txt symlink)\n\ni don't normally hack apache, so i can't say if there are other places to fix\npool usage in subrequests... i'm glad that i brought your attntion to this issue\nso it can be fixed thoroughly :)", "id": 75644, "time": "2005-05-31T15:14:57Z", "creator": "apache-bugs@rojer.pp.ru", "creation_time": "2005-05-31T15:14:57Z", "is_private": false}, {"count": 9, "tags": [], "creator": "jorton@redhat.com", "text": "Thanks a lot, that was a great help.  I've committed a fix for this to the trunk\nand will propose it for backport to 2.0.x.\n\nhttp://svn.apache.org/viewcvs?rev=179763&view=rev", "id": 76411, "time": "2005-06-14T22:42:32Z", "bug_id": 12655, "creation_time": "2005-06-14T22:42:32Z", "is_private": false, "attachment_id": null}, {"count": 10, "tags": [], "bug_id": 12655, "attachment_id": null, "id": 79168, "time": "2005-08-30T13:53:08Z", "creator": "jorton@redhat.com", "creation_time": "2005-08-30T13:53:08Z", "is_private": false, "text": "Now merged for 2.0.55.\n\nhttp://svn.apache.org/viewcvs?rev=264762&view=rev"}, {"count": 11, "tags": [], "bug_id": 12655, "attachment_id": null, "id": 79260, "time": "2005-09-01T07:26:51Z", "creator": "nd@perlig.de", "creation_time": "2005-09-01T07:26:51Z", "is_private": false, "text": "*** Bug 36452 has been marked as a duplicate of this bug. ***"}]