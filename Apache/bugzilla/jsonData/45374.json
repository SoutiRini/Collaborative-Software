[{"count": 0, "tags": [], "bug_id": 45374, "attachment_id": null, "id": 118461, "time": "2008-07-10T07:10:14Z", "creator": "philippe.duveau@free.fr", "creation_time": "2008-07-10T07:10:14Z", "is_private": false, "text": "The shared cache can be enable in httpd 2.2.8 and 2.2.9.\n\nSteps to reproduce:\n==========================================\n\nhttpd.conf:\n\nServerRoot \"D:/Apache2\"\nServerName myserver.org\nPidFile run/httpd.pid\nErrorLog logs/error.log\nLogLevel warn\nLoadModule ldap_module modules/mod_ldap.so\nLDAPSharedCacheFile logs/ldap_cache\nlisten 80\n\nThe server stops immediatly with those logs :\n\n[notice] Server built: May 16 2008 18:51:09\n[notice] Parent: Created child process 4844\n[error] (17)File exists: LDAP cache: could not create shared memory segment\nConfiguration Failed\n[crit] master_main: create child process failed. Exiting.\n[error] (OS 6)Descripteur non valide  : Parent: SetEvent for child process 0 failed\n\n\nAfter investigation, the problem come from a fix in libapr (commit 570289, line 140 of apr/shmem/win32/shm.c)\n\nTo correct the problem you should apply the following patch :\n\nIndex: modules/ldap/util_ldap_cache.c\n===================================================================\n--- modules/ldap/util_ldap_cache.c\t(revision 666274)\n+++ modules/ldap/util_ldap_cache.c\t(working copy)\n@@ -404,6 +404,12 @@\n     size = APR_ALIGN_DEFAULT(st->cache_bytes);\n \n     result = apr_shm_create(&st->cache_shm, size, st->cache_file, st->pool);\n+    if (result == APR_EEXIST) {\n+\t\t/* In case of existing cache file the apr_shm_create failed returning APR_EEXIST\n+\t\t * So in this case, try to attach the existing file\n+\t\t */\n+\t    result = apr_shm_attach(&st->cache_shm, st->cache_file, st->pool);\n+    }\n     if (result != APR_SUCCESS) {\n         return result;\n     }"}, {"count": 1, "tags": [], "bug_id": 45374, "text": "I disagree with the proposed solution in the patch. If the file already exists it could be possible that this is a misconfiguration of httpd as you can run multiple instances in parallel and the configuration can point to the file of another instance. If the file is really from the same instance the instance was not shutdown cleanly last time and this should be always a reason to investigate why.\nSo IMHO things work as designed here (apart from a maybe more descriptive error message).", "id": 118478, "time": "2008-07-10T08:33:04Z", "creator": "rpluem@apache.org", "creation_time": "2008-07-10T08:33:04Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "creator": "philippe.duveau@free.fr", "is_private": false, "text": "In fact, you know like me that httpd is working with a \"watch dog\" and a child to do the job. In this case the problem is systematic because the shared memory is created by the watch dog (post config hook) and when the child tries to created it the shared memory is ALWAYS already existing. \n\nBefore the version 1.2.11 of APR the test made on apr/shmem/win32/shm.c:140 was ALWAYS \"false\" because the two values were in two different ranges of errors (the WINAPI one <15000 and APR_OS one >720000). So even if the file was existing, it was not detect as existing. With the last versions, the detection is efficient.\n\nSo please take a time to try the proposed configuration (which is so simple that it can not contains misconfiguration) on Windows XP/2003 with an APR 1.2.11 (as proposed with 2.2.8) or more, you will see that if you launch httpd with -X (no watch dog) it works and if you launch it with the watch dog it fail to start.\n\nPerhaps, the real solution is to create shared memory form a child_init hook instead of creating it from a post_config one. This should avoid the conflict between the \"watch dog\" and the child.", "id": 118488, "time": "2008-07-10T10:14:31Z", "bug_id": 45374, "creation_time": "2008-07-10T10:14:31Z", "attachment_id": null}]