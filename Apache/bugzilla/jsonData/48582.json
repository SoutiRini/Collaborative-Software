[{"count": 0, "tags": [], "creator": "tmccune@yahoo-inc.com", "attachment_id": null, "text": "We're getting this exception/stack trace in a web application:\n\n''[2010-01-15 17:52:01,381] -  ERROR [org.apache.catalina.core.ContainerBase] Exception invoking periodic operation:\n'java.lang.NullPointerException\n        at org.apache.jasper.servlet.JspServletWrapper.getServletContext(JspServletWrapper.java:174)\n        at org.apache.jasper.compiler.JspRuntimeContext.checkCompile(JspRuntimeContext.java:304)\n        at org.apache.jasper.servlet.JspServlet.periodicEvent(JspServlet.java:289)\n        at org.apache.catalina.core.StandardWrapper.backgroundProcess(StandardWrapper.java:668)\n        at org.apache.catalina.core.ContainerBase$ContainerBackgroundProcessor.processChildren(ContainerBase.java:1571)\n        at org.apache.catalina.core.ContainerBase$ContainerBackgroundProcessor.processChildren(ContainerBase.java:1580)\n        at org.apache.catalina.core.ContainerBase$ContainerBackgroundProcessor.processChildren(ContainerBase.java:1580)\n        at org.apache.catalina.core.ContainerBase$ContainerBackgroundProcessor.processChildren(ContainerBase.java:1580)\n        at org.apache.catalina.core.ContainerBase$ContainerBackgroundProcessor.run(ContainerBase.java:1560)\n        at java.lang.Thread.run(Thread.java:595)\n\nLooking at JspServletWrapper, I see that it has 2 constructors; one for JSP pages, and another for tag files.  The one for tag files has a problem in this line:\n\n       this.config = null; // not used\n\nbecause this.config is indeed used by the public method getServletContext():\n\npublic ServletContext getServletContext() {\n  return config.getServletContext();\n}\n\nand since that method is public, you can't safely say that this.config will not be used. :)  So this means that if you create a JspServletWrapper for a JSP tag file, you can never call getServletContext() on it, or you'll generate the NPE above.  However, JspRuntimeContext does exactly that in the following block of code, from the checkCompile() method:\n\n        Object [] wrappers = jsps.values().toArray();\n        for (int i = 0; i < wrappers.length; i++ ) {\n            JspServletWrapper jsw = (JspServletWrapper)wrappers[i];\n            JspCompilationContext ctxt = jsw.getJspEngineContext();\n            // JspServletWrapper also synchronizes on this when\n            // it detects it has to do a reload\n            synchronized(jsw) {\n                try {\n                    ctxt.compile();\n                } catch (FileNotFoundException ex) {\n                    ctxt.incrementRemoved();\n                } catch (Throwable t) {\n                    jsw.getServletContext().log(\"Background compile failed\",\n            t);\n                }\n            }\n        }\n\nThe values in the \"jsps\" map are both JSP files and tag files, as seen by TagFileProcessor.loadTagFile(), which puts tag files there.\n\nSo to summarize, any JSP tag file that experiences a compilation failure inside of the checkCompile() method will seem to generate this NullPointerException.  \n\nA secondary issue here is that if any problem occurs inside of the catch block in the code pasted above (as is currently happening), the original exception is swallowed forever.  This is the Throw From Within Finally anti-pattern (http://today.java.net/article/2006/04/04/exception-handling-antipatterns#throwFromWithinFinally) and should be fixed as well.", "id": 133742, "time": "2010-01-20T13:25:03Z", "bug_id": 48582, "creation_time": "2010-01-20T13:25:03Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 48582, "attachment_id": null, "text": "I should also have noted that after this NullPointerException occurs, we then continue to get this error over and over:\n\nERROR [org.apache.catalina.core.ContainerBase.[jboss.web].[localhost].[/d].[jsp]] Servlet.service() for servlet jsp threw exception\n'java.lang.NoClassDefFoundError: org/apache/jsp/tag/meta/internal_002dtitle_tag\n\npresumably for the JSP tag file whose compilation failed.  I don't know if that's the behavior you want, as the error is pretty cryptic.  You may want something more explicit like \"compilation of this JSP failed\"?", "id": 133743, "time": "2010-01-20T13:28:36Z", "creator": "tmccune@yahoo-inc.com", "creation_time": "2010-01-20T13:28:36Z", "is_private": false}, {"count": 2, "text": "I just confirmed that this issue still affects the latest version (6.0.24).", "bug_id": 48582, "is_private": false, "id": 133909, "time": "2010-01-25T14:48:32Z", "creator": "tmccune@yahoo-inc.com", "creation_time": "2010-01-25T14:48:32Z", "tags": [], "attachment_id": null}, {"count": 3, "text": "Fixed in 7.0.x and proposed for 6.0.x", "creator": "markt@apache.org", "is_private": false, "id": 134554, "time": "2010-02-16T11:08:19Z", "bug_id": 48582, "creation_time": "2010-02-16T11:08:19Z", "tags": [], "attachment_id": null}, {"count": 4, "text": "This has been fixed in 6.0.x and will be included in 6.0.25 onwards.", "creator": "markt@apache.org", "attachment_id": null, "id": 134647, "time": "2010-02-18T12:31:46Z", "bug_id": 48582, "creation_time": "2010-02-18T12:31:46Z", "tags": [], "is_private": false}, {"count": 5, "text": "Also fixed in 5.5.x for 5.5.29 onwards", "creator": "markt@apache.org", "attachment_id": null, "id": 135078, "time": "2010-03-05T12:59:59Z", "bug_id": 48582, "creation_time": "2010-03-05T12:59:59Z", "tags": [], "is_private": false}]