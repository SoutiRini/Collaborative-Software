[{"count": 0, "tags": [], "bug_id": 50756, "attachment_id": 26635, "id": 144151, "time": "2011-02-10T13:45:52Z", "creator": "jfrancis@his.co.uk", "creation_time": "2011-02-10T13:45:52Z", "is_private": false, "text": "Created attachment 26635\nFile which reproduces the problem\n\nI have a spreadsheet created and edited with a mix or Excel 2007 and OpenOffice 3.2.1 build 9502\nWhen I read numbers with org.apache.poi.ss.usermodel.DataFormatter (from poi-src-3.7-20101029.zip) which are shown as formatted with Format code General I get them returned in decimal format, even when they are shown as Integers. i.e. the old 12 being passed back as 12.0. I tracked the problem down to what is returned as the cell.getCellStyle().getDataFormatString() in the private Format getFormat(Cell cell) of the DataFormatter class. This returns \"GENERAL\" not \"General\" for some reason (OpenOffice seems to have changed it) so the part of the code in private Format getFormat(double cellValue, int formatIndex, String formatStr)  which handles the General style nicely;\n\nif (\"General\".equals(formatStr) || \"@\".equals(formatStr)) {\n            if (DataFormatter.isWholeNumber(cellValue)) {\n                return generalWholeNumFormat;\n            }\n            return generalDecimalNumFormat;\n        }\n\nis never called. \n\nN.B. I do not get this problem with files purely edited by Excel or OpenOffice, it only seems to appear when I mix and match..."}, {"count": 1, "text": "Fixed in r1069775.", "bug_id": 50756, "attachment_id": null, "id": 144183, "time": "2011-02-11T07:32:05Z", "creator": "apache@gagravarr.org", "creation_time": "2011-02-11T07:32:05Z", "tags": [], "is_private": false}]