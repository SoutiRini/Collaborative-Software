[{"count": 0, "tags": [], "bug_id": 33136, "is_private": false, "text": "PROBLEM DESCRIPTION:\n\nwhen accessing resources who's URI contains escaped characters,\nWebDavResource.listWebDavResources() can return incorrect results.\n\nmore specifically, we made use of the slide client API (2.0) to access WebDAV\nrepositories managed by a SAP Netweaver.  when attempting to access an empty\nCOLLECTION resource with a URI such as:\n\n/foo/bar/gl\u00fcck\n\nWebDavResource.listWebDavResources() SHOULD have returned\n\n/foo/bar/gl\u00fcck    with resourcetype = collection\n\nin fact, the method returned:\n\n/foo/bar/gl\u00fcck/gl\u00fcck   with resourcetype = <empty>\n\n\nANALYSIS:\n\nwe traced the problem to a case difference between the slide client internal\nrepresentation of the resource URI as opposed to the representation of the\nresource URI as returned by SAP Netweaver.  subsequent path matching in \nWebDavResource.setWebDavProperties() fails due to this differene in\nrepresentation.\n\n\nSOLUTION:\n\nwe propose the following patch to WebDavResource.setWebDavProperties():\n\nreplace the code segment:\n\n*******************************************\n\nif (!href.startsWith(\"/\"))\n    href = URIUtil.getPath(href);\n\t    \nString httpURLPath = httpURL.getEscapedPath();\n\n*******************************************\n\nwith code segment:\n\n*******************************************\n\nif (!href.startsWith(\"/\"))\n    href = URIUtil.getPath(href);\n\t\n//this patch fixes problems with case-differences in escape codes\nhref = URIUtil.encodePath(URIUtil.decode(href));\n            \nString httpURLPath = httpURL.getEscapedPath();\n\n*******************************************\n\nproposed solution ensures that response paths will contain upper-case\nescape codes, therefore matching internal slide client representation\nof resource paths.", "id": 69769, "time": "2005-01-17T15:30:38Z", "creator": "franco@redshift.ch", "creation_time": "2005-01-17T15:30:38Z", "attachment_id": null}, {"count": 1, "tags": [], "creator": "robert.leathley@ricardo.com", "attachment_id": null, "is_private": false, "id": 70464, "time": "2005-02-03T16:35:45Z", "bug_id": 33136, "creation_time": "2005-02-03T16:35:45Z", "text": "I have a similar problem connecting to Apache.\n\nIf a parent collection name contains an escaped accented character (e.g. for\n'\u00e4'), WebDavResource.listWebDavResources() returns a non-existant child with the\nsame name as the parent in addition to the actual child resources (viewing the\nsame URL with mozilla doesn't have this problem).\n\nAn escaped ' ' in a collection name does not suffer this problem - the\ndifference being '\u00e4' is escaped as 2 codes: '%C3%A4' where ' ' is just 1:'%20'"}]