[{"count": 0, "tags": [], "bug_id": 41614, "text": "We have Apache 2.2.3 using mod_proxy_balancer to send requests to a mongrel\nbackend cluster for rails apps. We have some mod rewrite in effect that help\nsort what goes to the balancer and what gets served directly by apache. When\nsending requests to the balancer for the rails app, sometimes Apache reports :\n\n----\nProxy Error\n\nThe proxy server received an invalid response from an upstream server.\nThe proxy server could not handle the request GET /articles/show/127129-Global\nConference? test? test.\n\nReason: Error reading from remote server\n-----\n\n\"/articles/show/127129-Global Conference? test? test\" is the actual URL. The\nportion beyond 127129 is the title of the article. \n\nMod_rewrite reports that it sends to the balancer this: \n\n\"articles/show/127129-Global Conference\" with args = \"test? test\" \n\nThe actual encoding looks like this: \n\nhttp://server/articles/show/127129-Global+Conference%3f%20test%3ftest\n\nNote here that the rails app only needs the portion up to 127129, the rest is\nappended to the URL for search engine optimization purposes - so links on Web\npages contain a URL similar to the one above. \n\nSeems as though somewhere along the line mod_proxy_balancer doesn't like the\nencoding. We can connect directly to the mongrel server using Lynx and pass the\nURL and get a correct response. But going through Apache and the balancer we get\nthe error cited above.  \n\nWhat we found in trying to debug this is that if the space char (%20) is removed\nthen the balancer will return the requested content (since the rails app doesn't\ncare much about what other chars are beyond the number in the URL).", "id": 99390, "time": "2007-02-14T12:26:32Z", "creator": "mark@edwards.org", "creation_time": "2007-02-14T12:26:32Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 41614, "is_private": false, "id": 99450, "creation_time": "2007-02-15T14:16:18Z", "time": "2007-02-15T14:16:18Z", "creator": "mark@edwards.org", "text": "Here's another sample URL that results in \"Not Found\" from mongrel (serving the\nRails app with Apache as the reverse proxy frontend) which means that Apache\nwith mod_proxy_balancer somehow doesn't like the encoded forward slash char\n(%2F). If we remove that / char (as encoded), the URL works fine. \n%\n/articles/show/127139-Date+In+The+Title+-+Test+4%2F27\n\nActual URL looks like this\n\n/articles/show/127139-Date+In+The+Title+-+Test+4/27", "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 41614, "is_private": false, "id": 99452, "creation_time": "2007-02-15T14:30:25Z", "time": "2007-02-15T14:30:25Z", "creator": "mark@edwards.org", "text": "Forgot to mention that in that last example with the forward slash encoded char,\nApache sends the request to mongrel, but it's returned as not found. However\nusing the encoded URL via wget directly to the mongrel server works fine.\nSomewhere along the line Apache is messing up the request. ", "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 41614, "attachment_id": null, "text": "\n\n*** This bug has been marked as a duplicate of 39746 ***", "id": 107884, "time": "2007-09-08T17:57:08Z", "creator": "nick@webthing.com", "creation_time": "2007-09-08T17:57:08Z", "is_private": false}]