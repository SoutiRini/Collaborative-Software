[{"count": 0, "attachment_id": null, "bug_id": 41324, "text": "ApplicationFilterChain is holding references to filters after the request.  I\nbelieve this is because in 5.5.x, ApplicationFilterChain.release() is not\nnulling out the entries in the filters array.  In the 6.0.x trunk, there is a\nfor loop to clear these references.\n\nI'll attach a snippet from a JBoss Profiler report from a classloader leakage\ntest I wrote for JBoss.  This was from a JBoss build with TC 5.5.20 integrated.\nIt shows the classloader for an undeployed app being held by a chain leading to\nthe Tomcat request processor pool.  In an experiment I naively altered the\nRequest.recycle() method to null out the ref to the filter chain and that\nallowed the classloader to be gc'ed.  I see now that adding the for loop to\nApplicationFilterFactory.release() is probably the correct solution.\n\nThis could be a fairly serious classloader leak if the leaked filter references\nare in a high position in the array; i.e. positions that never get replaced by a\nsubsequent request. In that case the classloader leak would be long lasting.", "id": 97798, "time": "2007-01-08T21:40:20Z", "creator": "bstansberry@jboss.com", "creation_time": "2007-01-08T21:40:20Z", "tags": [], "is_private": false}, {"count": 1, "tags": [], "bug_id": 41324, "text": "Created attachment 19378\nProfiler report showing the leak", "id": 97799, "time": "2007-01-08T21:42:12Z", "creator": "bstansberry@jboss.com", "creation_time": "2007-01-08T21:42:12Z", "is_private": false, "attachment_id": 19378}, {"count": 2, "tags": [], "bug_id": 41324, "attachment_id": null, "id": 97960, "time": "2007-01-11T10:51:53Z", "creator": "chris@sourcelabs.com", "creation_time": "2007-01-11T10:51:53Z", "is_private": false, "text": "This looks like it may be a dupe of 41034?"}, {"count": 3, "tags": [], "creator": "bstansberry@jboss.com", "attachment_id": null, "id": 97965, "time": "2007-01-11T12:46:42Z", "bug_id": 41324, "creation_time": "2007-01-11T12:46:42Z", "is_private": false, "text": "\n\n*** This bug has been marked as a duplicate of 41034 ***"}]