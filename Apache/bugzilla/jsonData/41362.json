[{"count": 0, "tags": [], "bug_id": 41362, "attachment_id": null, "id": 98045, "time": "2007-01-14T14:55:50Z", "creator": "dev-apache.org@humph.com", "creation_time": "2007-01-14T14:55:50Z", "is_private": false, "text": "Tested in FreeBSD 6.1 and MacOSX 10.4.x.\nSimple to reproduce (note added a test at the bottom using r470455):\n\ncreate a SSI file in your DocumentRoot:\n\n$ cat > DocumentRoot/test.shtml<<EOF\n<html>\n<head>\n        <title>cache-bug-test</title>\n</head>\n<body>\n<p>just before the exec call</p>\n<!--#exec cmd=\"./foo.sh\" -->\n<p>just after the exec call</p>\n\n</body>\n</html>\nEOF\n\nand the commad to execute:\n\n$ cat > DocumentRoot/foo.sh <<EOF    \n#!/bin/sh\necho bar\nEOF\n\nto be chmod 755\n\nin the VirtualHost configuration:\n\n    CacheEnable disk /\n    CacheRoot /var/www/cache\n    CacheIgnoreNoLastMod On\n    CacheDefaultExpire 3600\n    CacheMaxExpire 3600\n    CacheMinFileSize 64\n    CacheMaxFileSize 64000\n\nthe first time the file is accessed it is server correctly to the client (indented for clarity):\n\n\t<html>\n\t<head>\n\t\t<title>cache-bug-test</title>\n\t</head>\n\t<body>\n\t<p>just before the exec call</p>\n\tbar\n\t\n\t<p>just after the exec call</p>\n\t\n\t</body>\n\t</html>\n\n\nthe second time it is served as:\n\n\t<html>\n\t<head>\n\t\t<title>cache-bug-test</title>\n\t</head>\n\t<body>\n\t<p>just before the exec call</p>\n\t<html>\n\t<head>\n\t\t<title>cache-bug-test</title>\n\t</head>\n\t<body>\n\t<p>just before the exec call</p>\n\tbar\n\t\n\t<p>just after the exec call</p>\n\t\n\t</body>\n\t</html>\n\nthat is: the correct output is preceded by the raw file up to and including the SSI instruction.\n\nI inserted some ap_log_*error calls in mod_disk_cache.c, one in particular in store_body:\n\n\n        rv = apr_bucket_read(e, &str, &length, APR_BLOCK_READ);\n\t\t//GG 3 lines\n\t\tap_log_error(APLOG_MARK, APLOG_DEBUG, 0, r->server,\n\t\t\t\t\t \"cache_disk: read from server [%s]\",\n\t\t\t\t\t str);\n\nperhaps not really a proper description. Anyway, I get:\n\n[Sun Jan 14 22:27:21 2007] [debug] mod_disk_cache.c(999): cache_disk: read from server [<html>\\r\n\\n<head>\\r\\n\\t<title>cache-bug-test</title>\\r\\n</head>\\r\\n<body>\\r\\n<p>just before the exec \ncall</p>\\r\\n<!--#exec cmd=\"./foo.sh\" -->\\r\\n<p>just after the exec call</p>\\r\\n\\r\\n</body>\\r\n\\n</html>\\r\\n]\n[Sun Jan 14 22:27:21 2007] [debug] mod_disk_cache.c(999): cache_disk: read from server [bar\\n]\n[Sun Jan 14 22:27:21 2007] [debug] mod_disk_cache.c(999): cache_disk: read from server []\n[Sun Jan 14 22:27:21 2007] [debug] mod_disk_cache.c(999): cache_disk: read from server [\\r\\n<p>just \nafter the exec call</p>\\r\\n\\r\\n</body>\\r\\n</html>\\r\\n]\n[Sun Jan 14 22:27:21 2007] [debug] mod_disk_cache.c(999): cache_disk: read from server [(null)]\n\nso, first it reads the whole file unparsed by mod_include (that's bad enough), then it gets the result \nfrom the parsing down to the end of the file. This is odd, and what puzzles me more: it is not even \nwhat it going to be served from cache, as you saw above.\n\n\nI tested then with r470455 of mod_cache (grafted in a 2.2.4 distribution) and found that the output is \nfine but the content is stored each time a client requests it (and the serving crawls..)\n\nMight be related to related to: http://issues.apache.org/bugzilla/show_bug.cgi?id=41200"}, {"count": 1, "tags": [], "bug_id": 41362, "is_private": false, "text": "Could please supply the full virtual host configuration? Especially how you\ntrigger mod_include (via handler, SetOutfilter, etc.)?", "id": 98058, "time": "2007-01-15T03:09:09Z", "creator": "rpluem@apache.org", "creation_time": "2007-01-15T03:09:09Z", "attachment_id": null}, {"count": 2, "tags": [], "text": "Please attach also an error log in debug mode for two requests against 2.2.4\n(first one which work and second one from cache which fails).", "attachment_id": null, "id": 98059, "creator": "rpluem@apache.org", "time": "2007-01-15T03:14:13Z", "bug_id": 41362, "creation_time": "2007-01-15T03:14:13Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 41362, "attachment_id": null, "id": 98065, "time": "2007-01-15T04:33:22Z", "creator": "dev-apache.org@humph.com", "creation_time": "2007-01-15T04:33:22Z", "is_private": false, "text": "(In reply to comment #2)\n> Please attach also an error log in debug mode for two requests against 2.2.4\n> (first one which work and second one from cache which fails).\n\nThanks for looking at this!\n\nThe logs (trimmed of day and year to shorten the lines, note the lines with GG are my extra log \ndescribed in my original report:\n\nCache cleared. first request (correct data served):\n\n[13:18:10] [debug] mod_cache.c(129): Adding CACHE_SAVE filter for /new/test.shtml\n[13:18:10] [debug] mod_cache.c(136): Adding CACHE_REMOVE_URL filter for /new/test.shtml\n[13:18:10] [debug] mod_cache.c(609): cache: Caching url: /new/test.shtml\n[13:18:10] [debug] mod_cache.c(615): cache: Removing CACHE_REMOVE_URL filter.\n[13:18:10] [debug] mod_cache.c(658): cache: Added date header\n[13:18:10] [debug] mod_disk_cache.c(964): disk_cache: Stored headers for URL http://\nwww.elfo.org.localhost:80/new/test.shtml?\n[13:18:10] [debug] mod_disk_cache.c(999): GG cache_disk: read from server [<html>\\r\\n<head>\\r\\n\n\\t<title>cache-bug-test</title>\\r\\n</head>\\r\\n<body>\\r\\n<p>just before the exec call</p>\\r\n\\n<!--#exec cmd=\"./foo.sh\" -->\\r\\n<p>just after the exec call</p>\\r\\n\\r\\n</body>\\r\\n</html>\\r\n\\n]\n[13:18:10] [debug] mod_disk_cache.c(999): GG cache_disk: read from server [bar\\n]\n[13:18:10] [debug] mod_disk_cache.c(999): GG cache_disk: read from server []\n[13:18:10] [debug] mod_disk_cache.c(999): GG cache_disk: read from server [\\r\\n<p>just after the \nexec call</p>\\r\\n\\r\\n</body>\\r\\n</html>\\r\\n]\n[13:18:10] [debug] mod_disk_cache.c(999): GG cache_disk: read from server [(null)]\n[13:18:10] [debug] mod_disk_cache.c(1058): disk_cache: Body for URL http://www.elfo.org.localhost:\n80/new/test.shtml? cached.\n[13:18:10] [debug] mod_cache.c(129): Adding CACHE_SAVE filter for /favicon.ico\n[13:18:10] [debug] mod_cache.c(136): Adding CACHE_REMOVE_URL filter for /favicon.ico\n[13:18:10] [error] [client 127.0.0.1] File does not exist: /Users/g/Documents/Projects/HTML/elfo-site/\nelfo.org/trunk/favicon.ico\n\n\nsecond request (incorrect data served from cache, but note too that the cache file itself contains \nincorrect data):\n\n[13:18:41] [debug] mod_disk_cache.c(477): disk_cache: Recalled cached URL info header http://\nwww.elfo.org.localhost:80/new/test.shtml?\n[13:18:41] [debug] mod_disk_cache.c(750): disk_cache: Recalled headers for URL http://\nwww.elfo.org.localhost:80/new/test.shtml?\n[13:18:41] [debug] mod_cache.c(263): cache: running CACHE_OUT filter\n[13:18:41] [debug] mod_cache.c(277): cache: serving /new/test.shtml\n[13:18:41] [debug] mod_cache.c(129): Adding CACHE_SAVE filter for /favicon.ico\n[13:18:41] [debug] mod_cache.c(136): Adding CACHE_REMOVE_URL filter for /favicon.ico\n[13:18:41] [error] [client 127.0.0.1] File does not exist: /Users/g/Documents/Projects/HTML/elfo-site/\nelfo.org/trunk/favicon.ico\n\nSSI enabled in main config by:\n\n<IfModule mime_module>\n[...]\n    AddType text/html .shtml\n    AddOutputFilter INCLUDES .shtml\n</IfModule>\n\n\n\nvirtual host configuration:\n\nNameVirtualHost *:80\n\n<VirtualHost *:80>\n    ServerAdmin webmaster@dummy-host.example.com\n    DocumentRoot /Users/g/Documents/Projects/HTML/elfo-site/elfo.org/trunk\n    ServerName www.elfo.org.localhost\n    ErrorLog logs/www.elfo.org.localhost-error_log\n    CustomLog logs/www.elfo.org.localhost-access_log common\n    UseCanonicalName On\n\n    CacheEnable disk /\n    CacheRoot /var/www/cache\n    CacheIgnoreNoLastMod On\n    CacheDefaultExpire 3600\n    CacheMaxExpire 3600\n    CacheMinFileSize 64\n    CacheMaxFileSize 64000\n    CacheDisable /mail\n    CacheDisable /Webmail\n    CacheDisable /webmail\n\n<Directory \"/Users/g/Documents/Projects/HTML/elfo-site/elfo.org/trunk\">\n    Options Includes Indexes FollowSymLinks ExecCGI\n    AllowOverride None\n    Order allow,deny\n    Allow from all\n    AddHandler cgi-script .cgi\n</Directory>\n\n</VirtualHost>\n\nI have done further research on the r470455 which saves the correct body data, but it does not serve \nthe cached copy as it gets stuck in open_header_timeout until the timeout of 10 seconds fires."}, {"count": 4, "tags": [], "bug_id": 41362, "is_private": false, "id": 98074, "attachment_id": null, "creator": "rpluem@apache.org", "creation_time": "2007-01-15T08:08:36Z", "time": "2007-01-15T08:08:36Z", "text": "(In reply to comment #3)\n\n\n> [13:18:10] [debug] mod_disk_cache.c(964): disk_cache: Stored headers for URL\nhttp://\n> www.elfo.org.localhost:80/new/test.shtml?\n\nThe line number above indicates that this is NOT the mod_disk_cache delivered\nwith 2.2.4 (it should be 954 instead of 964) or have you added further debugging\ncode above this section?:\n\nPlease use either the mod_disk_cache.c delivered with 2.2.4 or attach the\ndebugging patch you have applied to mod_disk_cache.c. This makes debugging and\nanalyzing your logs easier. Thanks."}, {"count": 5, "tags": [], "text": "Created attachment 19408\ndiff showing the debugging patches to version 2.2.4  in mod_disk_cache.c", "is_private": false, "id": 98094, "creator": "dev-apache.org@humph.com", "time": "2007-01-15T16:57:27Z", "bug_id": 41362, "creation_time": "2007-01-15T16:57:27Z", "attachment_id": 19408}, {"count": 6, "tags": [], "bug_id": 41362, "attachment_id": 19409, "text": "Created attachment 19409\ndiff -u as required\n\nplease delete the obsoleted diff", "id": 98098, "time": "2007-01-16T00:38:30Z", "creator": "dev-apache.org@humph.com", "creation_time": "2007-01-16T00:38:30Z", "is_private": false}, {"count": 7, "tags": [], "text": "Created attachment 19417\npatch against mod_disk_cache.c r470455 that can be used in 2.2.4\n\nGrafting r470455 of the cache module in httpd 2.2.4 after applying the\nfollowing patch seems to solve the problem. Please comment. Thank you", "is_private": false, "id": 98162, "creator": "dev-apache.org@humph.com", "time": "2007-01-16T17:07:39Z", "bug_id": 41362, "creation_time": "2007-01-16T17:07:39Z", "attachment_id": 19417}, {"count": 8, "tags": [], "bug_id": 41362, "attachment_id": null, "is_private": false, "id": 98229, "time": "2007-01-18T12:45:02Z", "creator": "rpluem@apache.org", "creation_time": "2007-01-18T12:45:02Z", "text": "This is weird. Like in PR41200 I cannot reproduce this on my system. I get the\nwhole SSI processed file saved in the cache and not its source. Could you please\ndo the following with an unpatched 2.2.4?\n\n1. Copy the attached .gdbinfo file into the directory of the user you use for \n   attaching gdb to httpd (possibly root).\n\n2. Start httpd -X\n\n3. Attach gdb to this process.\n\n4. Issue the following gdb commands\n   break mod_cache.c:810\n   break mod_cache.c:350\n   cont\n\n5. Request test.shtml via browser\n\n6. Once gdb returns to the prompt issue the following commands\n   dump_filters r->output_filters\n   dump_brigade in\n   cont\n   dump_filters r->output_filters\n   dump_brigade in\n   cont\n   dump_filters r->output_filters\n   dump_brigade in\n   quit\n\nThanks for your help."}, {"count": 9, "tags": [], "text": "Created attachment 19427\nGDB macros for debugging", "attachment_id": 19427, "id": 98230, "creator": "rpluem@apache.org", "time": "2007-01-18T12:45:58Z", "bug_id": 41362, "creation_time": "2007-01-18T12:45:58Z", "is_private": false}, {"count": 10, "tags": [], "text": "darn! Now I cannot fully reproduce the bug. Originally I found this on FreeBSD 6.1-STABLE with httpd \n2.2.3. Then I tested on MacOSX 10.4.x httpd 2.2.4 and found the same problem. Now, still on MacOSX \nand 2.2.4 I see only half of the problem. But I include the result of the debug session.\nFirst let me say that what I still observe is this:\n\n1) the file il cached but a subsequent request recaches it.\n2) the content of the data file is incorrect (and is the same as it used to be the served data):\n\n***** cache\n<html>\n[...]\n<p>just before the exec call</p>\n<html>\n[...]\n<p>just before the exec call</p>\nbar\n\n<p>just after the exec call</p>\n\n</body>\n</html>\n\n3) the served data is correct:\n\n<html>\n[...]\n<p>just before the exec call</p>\nbar\n\n<p>just after the exec call</p>\n\n</body>\n</html>\n\n\nDebug results: attached.\nPlease note that it hit the breakpoints once each. The content was completely served after continuing \npast the second one.", "attachment_id": null, "bug_id": 41362, "id": 98238, "time": "2007-01-18T15:49:18Z", "creator": "dev-apache.org@humph.com", "creation_time": "2007-01-18T15:49:18Z", "is_private": false}, {"count": 11, "tags": [], "bug_id": 41362, "is_private": false, "id": 98239, "attachment_id": 19429, "creator": "dev-apache.org@humph.com", "creation_time": "2007-01-18T15:51:30Z", "time": "2007-01-18T15:51:30Z", "text": "Created attachment 19429\nA debug session as per instructions\n\nAnd thank you again!"}, {"count": 12, "tags": [], "bug_id": 41362, "is_private": false, "id": 98254, "attachment_id": null, "creator": "dev-apache.org@humph.com", "creation_time": "2007-01-19T03:35:09Z", "time": "2007-01-19T03:35:09Z", "text": "stupid me. I could now reproduce the bug and found out why it did not appear when using curl. Curl send \na Pragma: no-cache.\nWith Safari the second time I GET the file it returns, like in my original report, the incorrect version stored \nin the cache. The same with curl if I set CacheIgnoreCacheControl.\nObviously at the second GET the debug session does not hit the breakpoints, so I do not attach any new \ndebug output."}, {"count": 13, "tags": [], "bug_id": 41362, "attachment_id": null, "is_private": false, "id": 124164, "time": "2009-01-18T16:19:16Z", "creator": "pgollucci@apache.org", "creation_time": "2009-01-18T16:19:16Z", "text": "CC myself on FreeBSD related bugs"}]