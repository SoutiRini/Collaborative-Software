[{"count": 0, "attachment_id": null, "creator": "jesse@dreamtsoft.com", "is_private": false, "id": 197200, "time": "2017-02-21T23:31:03Z", "bug_id": 60762, "creation_time": "2017-02-21T23:31:03Z", "tags": [], "text": "This is an enhancement request, I have put it against Tomcat 8 since that is the latest stable product, if this enhancement is more appropriate for the Tomcat 9 release please move it or let me know and I can re-submit it.\n\nThe request is to add public methods for adding/removing/updating SSLHostConfig objects within the AbstractEndpoint.sslHostConfigs map.  Ideally this would be exposed publicly via the Connector class.  I think this is specific to tomcat-embed since I don't believe that runtime changes such as this are possible elsewhere.\n\nFor our application I have exposed the functionality needed by extending the NioEndpoint class, this does not consider any of the other nio2/apr/bio connectors, as we only use nio it works for us.  I have tested and been running this way for a while now.\n\nI have also extended the AbstractHttp11JsseProtocol and Connector classes so I can gain access to my implementation of NioEndpoint, this is just for convenience, I think these methods belong publicly exposed on the Connector class (similar to how addSslHostConfig/findSslHostConfigs methods are delegated from Connector all the way to AbstractEndpoint).\n\nThe methods I've added to my NioEndpoint implementation:\n\n    // this behaves similar to a Map.put operation, only it is void\n    public void addOrUpdateSSLHostConfig(SSLHostConfig config)\n\n    public void removeSSLHostConfig(String sniHostName)\n\n\nFor the nio implementation I had to ensure the ssl contexts were released/created, not sure about how that would work for the other implementations.\n\nThanks!\nJesse"}, {"count": 1, "tags": [], "bug_id": 60762, "is_private": false, "text": "If you call org.apache.tomcat.util.net.AbstractEndpoint.addSslHostConfig(SSLHostConfig) with a hostconfig object with a hostname matching an existing hostconfig, it will be replaced.\n\nIs this not sufficient?\n\nNote that the new SSLHostConfig has no effect unless you bounce the whole connector.", "id": 197204, "time": "2017-02-22T04:15:52Z", "creator": "chris@christopherschultz.net", "creation_time": "2017-02-22T04:15:52Z", "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 60762, "text": "In version 8.5.9 that we are running it looks like that method calls putIfAbsent against the sslHostConfigs map, throwing an IllegalArgumentException if there is a duplicate SSLHostConfig object for the given key/hostname.  From what I can tell there is no existing public method in 8.5.9 to modify an existing SSLHostConfig once loaded, additionally the methods to do so properly with regard to ssl context release/create are protected.  Please correct me if my understanding of this is wrong.\n\nAlso, in the case where an SSL certificate or SSLHostConfig object needs to be removed for any reason, this method would not suffice with either behavior.\n\nWhen you say that the new SSLHostConfig has no effect without bouncing the whole connector, is this in a newer tomcat version?  Or do you refer to the newly created SSLHostConfig object that we are creating and putting in the sslHostConfigs map?  In the latter case we definitely are seeing the newly created SSLHostConfig object taking effect and new requests to it's hostname are being served the corresponding certificate.", "id": 197216, "time": "2017-02-22T17:47:34Z", "creator": "jesse@dreamtsoft.com", "creation_time": "2017-02-22T17:47:34Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 60762, "text": "For anyone looking at implementing this, the following thread will be useful:\nhttp://markmail.org/thread/ox3h7oaqgef3qqyk\n\nThe short version is removing an SSLHostConfig for APR/native is going to be  tricky.", "id": 197497, "time": "2017-03-06T22:08:07Z", "creator": "markt@apache.org", "creation_time": "2017-03-06T22:08:07Z", "is_private": false, "attachment_id": null}, {"text": "Might be useful to implement letsencrypt - see also\n\nhttp://people.apache.org/~schultz/ApacheCon NA 2017/Let's Encrypt Apache Tomcat.pdf", "tags": [], "bug_id": 60762, "attachment_id": null, "count": 4, "id": 199914, "time": "2017-07-21T07:41:10Z", "creator": "hauser@acm.org", "creation_time": "2017-07-21T07:41:10Z", "is_private": false}, {"count": 5, "attachment_id": null, "creator": "jesse@dreamtsoft.com", "is_private": false, "id": 199938, "time": "2017-07-21T18:23:16Z", "bug_id": 60762, "creation_time": "2017-07-21T18:23:16Z", "tags": [], "text": "We have actually implemented letsencrypt in our application.  We allow users to configure new domains that our application will respond to over SSL, and we give them the option to provide their own certificate or the application can generate (and auto-renew) for them via letsencrypt.\n\nI do agree that this request would align well with the needs of tomcat supporting letsencrypt, although my request is actually to provide the public methods so our application can control things as necessary to leverage letsencrypt or user provided certificates at runtime.  Those same methods could likely be used by more generic letsencrypt support as well."}, {"count": 6, "tags": [], "bug_id": 60762, "attachment_id": null, "is_private": false, "id": 200890, "time": "2017-09-15T20:12:24Z", "creator": "markt@apache.org", "creation_time": "2017-09-15T20:12:24Z", "text": "This has been implemented in 9.0.x for 9.0.0.M28 onwards.\n\nI'll back-port it to 8.5.x once folks have had a chance to test it."}, {"count": 7, "tags": [], "bug_id": 60762, "text": "*** Bug 55770 has been marked as a duplicate of this bug. ***", "id": 202376, "time": "2017-11-23T15:10:40Z", "creator": "markt@apache.org", "creation_time": "2017-11-23T15:10:40Z", "is_private": false, "attachment_id": null}, {"count": 8, "tags": [], "bug_id": 60762, "attachment_id": null, "is_private": false, "id": 202387, "time": "2017-11-23T18:51:28Z", "creator": "markt@apache.org", "creation_time": "2017-11-23T18:51:28Z", "text": "This will be available in 8.5.24 onwards.\n\nThere are no plans at this time to back-port this to 8.0.x or 7.0.x."}, {"count": 9, "tags": [], "bug_id": 60762, "attachment_id": null, "id": 202571, "time": "2017-12-05T07:03:13Z", "creator": "jesse@dreamtsoft.com", "creation_time": "2017-12-05T07:03:13Z", "is_private": false, "text": "Hi Mark,\n\nThanks for your work on this, I see the methods on AbstractEndpoint and I think they are exactly what I need and should allow me to remove my custom implementation.\n\nThe only thing holding me back at this point is that I don't know how to get access to the AbstractEndpoint from our application.  We have an instance of Tomcat and can get a Connector using the getConnector method, from there I can get the ProtocolHandler but that does not offer any way to get the endpoint.  I could probably safely cast ProtocolHandler to AbstractProtocol where there is a getEndpoint method, but that method is protected.\n\nIs there an appropriate way for me to get access to the new public methods on AbstractEndpoint?\n\nThanks again!\nJesse"}, {"count": 10, "attachment_id": null, "bug_id": 60762, "text": "Off the top of my head (I can check later if this doesn't work) you should be able to do this via JMX.", "id": 202577, "time": "2017-12-05T14:19:23Z", "creator": "markt@apache.org", "creation_time": "2017-12-05T14:19:23Z", "tags": [], "is_private": false}, {"count": 11, "tags": [], "creator": "jesse@dreamtsoft.com", "attachment_id": null, "id": 202580, "time": "2017-12-05T18:03:26Z", "bug_id": 60762, "creation_time": "2017-12-05T18:03:26Z", "is_private": false, "text": "I'd rather not use JMX, I'm not totally familiar with JMX but wouldn't that require me to enable JMX on a port in our application?\n\nIf I can use JMX directly via the embedded tomcat without doing any tcp port type access then that would work.\n\nFor now I have been able to remove my implementation of methods in NioEndpoint in favor of using the ones you have, but I still have my own extension classes so I can get access to them.\n\nThanks,\nJesse"}, {"count": 12, "tags": [], "bug_id": 60762, "attachment_id": null, "is_private": false, "id": 202581, "time": "2017-12-05T19:16:47Z", "creator": "chris@christopherschultz.net", "creation_time": "2017-12-05T19:16:47Z", "text": "(In reply to Jesse from comment #11)\n> I'd rather not use JMX, I'm not totally familiar with JMX but wouldn't that\n> require me to enable JMX on a port in our application?\n\nYou can use JMX within the same JVM just via an API interface. No need to expose any ports or anything like that."}, {"count": 13, "tags": [], "bug_id": 60762, "is_private": false, "text": "I was able to see many tomcat mbeans using:\n\nManagementFactory.getPlatformMBeanServer().queryNames(new ObjectName(\"Tomcat:*\"), null)\n\nHowever I don't see any that look like they'd represent an endpoint in that list.\n\nI also looked for \"Catalina:*\" but none were found.\n\nGiven that I am running this in the same JVM as the Tomcat instance that I want to manage, if I could find an ObjectName that represents the AbstractEndpoint, could I actually get access to the AbstractEndpoint that I want to invoke the add/removeSslHostConfig methods on?  It seems like the JMX interfaces are all for string/serialized communications and I need to pass the SSLHostConfig object that I've created.\n\nThanks!", "id": 202583, "time": "2017-12-05T20:15:07Z", "creator": "jesse@dreamtsoft.com", "creation_time": "2017-12-05T20:15:07Z", "attachment_id": null}, {"count": 14, "attachment_id": null, "creator": "markt@apache.org", "is_private": false, "id": 202584, "time": "2017-12-05T20:30:19Z", "bug_id": 60762, "creation_time": "2017-12-05T20:30:19Z", "tags": [], "text": "Catalina:type=ThreadPool,name=\"http-nio-8080\""}, {"count": 15, "tags": [], "bug_id": 60762, "is_private": false, "text": "That gives an InstanceNotFoundException, I can't find any Catalina:* objects.\n\nEven if that did return an object, could I gain direct access to the AbstractEndpoint instance that I want to call the methods against?\n\nThanks!", "id": 202586, "time": "2017-12-05T21:05:39Z", "creator": "jesse@dreamtsoft.com", "creation_time": "2017-12-05T21:05:39Z", "attachment_id": null}, {"count": 16, "tags": [], "bug_id": 60762, "attachment_id": null, "id": 202587, "time": "2017-12-05T21:16:18Z", "creator": "markt@apache.org", "creation_time": "2017-12-05T21:16:18Z", "is_private": false, "text": "Please move this to the users list."}]