[{"count": 0, "tags": [], "creator": "james.may@fmr.com", "text": "HSSFDataFormatter contains methods for formatting the value stored in an HSSFCell. This can be useful for reports and GUI presentations when you need to display data exactly as it appears in Excel. Supported formats include currency, SSN, percentages, decimals, dates, phone numbers, zip codes, etc. \n\n\nUsage:\n\nHSSFCell cell = row.getCell(0);\nHSSFDataFormatter fomatter = new HSSFDataFormatter();\nString formattedStr = formatter.formatCellValue(cell);\n\n-This yields a formatted string based on the cell type & format:\n-CELL_TYPE_STRING = returns string value as is\n-CELL_TYPE_BOOLEAN = returns \"true\" or \"false\"\n-CELL_TYPE_BLANK = returns \"\"\n-CELL_TYPE_FORMULA = cell formula string\n-CELL_TYPE_NUMERIC = formatted value i.e. \"$1,000.00 USD\", \"61.54%\", \"Thursday, January 02, 2003\"\n\n-There's also an overloaded method that takes a FormulaEvaluator:\n\nString formattedStr = formatter.formatCellValue(cell, evaluator);\n\n-CELL_TYPE_FORMULA = cell formula is evaluated, then formatted\n-All other cell types = same as above", "id": 118690, "time": "2008-07-15T20:49:21Z", "bug_id": 45404, "creation_time": "2008-07-15T20:49:21Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 45404, "attachment_id": 22262, "id": 118691, "time": "2008-07-15T20:51:19Z", "creator": "james.may@fmr.com", "creation_time": "2008-07-15T20:51:19Z", "is_private": false, "text": "Created attachment 22262\nenhancement source code in zip archive"}, {"count": 2, "tags": [], "bug_id": 45404, "text": "Thanks for this code. I've applied it to svn\n\n(Had to do a few tweaks to make it play nicely with java 1.4, then some more so that it could work with the eventusermodel stuff, but most of it is unchanged!)", "id": 118844, "time": "2008-07-20T10:19:34Z", "creator": "apache@gagravarr.org", "creation_time": "2008-07-20T10:19:34Z", "is_private": false, "attachment_id": null}]