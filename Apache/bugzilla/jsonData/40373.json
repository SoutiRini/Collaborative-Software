[{"count": 0, "tags": [], "creator": "bobsiegen@googlemail.com", "attachment_id": null, "text": "Behavior:\nDocumentRoot /var/www\n<Directory /var/www>\nRewriteEngine on\nRewriteRule ^foo/(.*) /bar/index.php?path=$1 [L]\n</Directory>\n\nRequest /foo/bar\nwhich resolves as r->filename to /var/www/foo/bar, the folder bar exists.\n\nProblem: The RewriteRule matches against the local path foo/bar, rewriting to\n/bar/index.php?path=bar, splitting args and going into the internal redirect\nwith /bar/index.php as expected.\nNow, before the redirect processing of mod_rewrite occures, mod_dir sends an 301\nredirect to /foo/bar/?path=bar which results in a new request by the client, of\ncourse.\n\nIt looks like mod_dir acts after mod_rewrite calls ap_internal_redirect but with\nthe old r->uri and not the one from the internal redirect.\n\nAs far as I understand ap_internal_redirect() creates a \"new\" request and apache\nruns it but this does not stop the processing of fixup_hooks for the \"original\"\nrequest? fixup_dir is registerd as APR_HOOK_LAST while mod_rewrite's hook_fixup\nis registerd as APR_HOOK_FIRST.\n\nProposed patch: Returning DECLINED in mod_dir if r->handler is\n\"redirect-handler\". That should work for the 2.0 branch as well.", "id": 92769, "time": "2006-08-31T01:02:28Z", "bug_id": 40373, "creation_time": "2006-08-31T01:02:28Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 40373, "text": "Created attachment 18773\nproposed patch", "id": 92770, "time": "2006-08-31T01:03:44Z", "creator": "bobsiegen@googlemail.com", "creation_time": "2006-08-31T01:03:44Z", "is_private": false, "attachment_id": 18773}, {"count": 2, "tags": [], "bug_id": 40373, "text": "I actually think we need to move up one step higher...\n\nsince rewrite acted on the url it shouldn't have (as you noted) trusted the\nold r->filename, worse, it shouldn't have trusted the old r->finfo.\n\nBecause rewrite is leaving stale finfo there, we have serious problems.\n\nI think the patch is a hack around only one wrinkle of one module... and would\nlove help in determining where rewrite went wrong and solving the underlying\nissue so that no module will strike this unexpected scenario.\n", "id": 92772, "time": "2006-08-31T01:34:25Z", "creator": "wrowe@apache.org", "creation_time": "2006-08-31T01:34:25Z", "is_private": false, "attachment_id": null}, {"count": 3, "attachment_id": null, "creator": "bobsiegen@googlemail.com", "is_private": false, "id": 92813, "time": "2006-08-31T19:02:27Z", "bug_id": 40373, "creation_time": "2006-08-31T19:02:27Z", "tags": [], "text": "I think the actually rewriting process is correct, but the internal redirect\ngoes some way wrong:\n\nI've done some debugging using ap_log_rerror to see when which hook gets active\nand what are the values of r->uri and r->filename.\n\nI think I found the dilemma: mod_rewrite sets r->handler to 'redirect-handler'\nin the fixup_hook. Now mod_rewrite has an other hook called 'handler_redirect'\n(APR_HOOK_MIDDLE) which finally calls ap_internal_redirect(). But interestingly\nthis hook is registered as APR_HOOK_MIDDLE, but fuxup hooks registered as\nAPR_HOOK_LAST (such as mod_rewrite's mime hook or mod_dir's fixup_dir) are being\nprocessed before the handler_redirect hook runs.\nI attached a portion of my error log showing the order of processing.\n\nThe processing of mod_rewrite's hook_mimetype is useless here, because the\nrequest won't be served, the mime-type is lost with the internal redirect (bug\n36590, fix: using ap_internal_redirect_handler() if the H flag is used and we\nneed an internal redirect [I don't know if this will preserve the mime-type/T\nflag, too].)\n\nSo from how it currently works - I can't see a reason why mod_rewrite's fixup\nhook doesn't call ap_internal_redirect() directly, because any past processing\nafter hook_fixup seems to be useless to me. And I don't know how a fix of bug\n36590 could break many existing cases, because the defined handler will never\nrun/mime-type never set to something which is served.\n\nAn other case came just into my mind: mod_rewrite sets r->handler to be\nredirect-handler. Now, if we're using the new H flag we're overriding this\nhandler with sthg. other in the hook_mimetype and an the internal redirect won't\ntake place any more, resulting in a 404, because 'redirect:/url/path' cannot be\nfound. The hook \"handler_redirect\" seems to run after the fixup hook_mimetype. I\ndon't know if this is just an issue with my built... may be someone can try to\nreproduce this.\n\nActually, the rewrite log entry \"[INTERNAL REDIRECT]\" is wrong, because at this\nstate only r->handler is set.\n\nYes, if mod_rewrite sets r->handler to be 'redirect-handler' the module leaves\nr->uri with the value created by ap_process_request_internal and below from core\nwhile r->filename has 'redirect:(url-path)'. Copying the url-path from\nr->filename back to r->uri (\"updating r->uri\") won't be a solution because this\nis also a dirty fix which would cause the same problem in an other case.\n(rewriting /abc to /foo/bar, r->uri would be updated now to /foo/bar, mod_dir\nacts and would 301' to /foo/bar/ before the internal redirect takes place. So\nthere is no chance due to the missing internal redirect processing to match e.g.\nnow in per-server context against /foo/bar and rewrite it to\n/index.php?args=/foo/bar)."}, {"count": 4, "tags": [], "creator": "bobsiegen@googlemail.com", "attachment_id": 18779, "text": "Created attachment 18779\ndebugging stuff of hook processing", "id": 92814, "time": "2006-08-31T19:02:43Z", "bug_id": 40373, "creation_time": "2006-08-31T19:02:43Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 40373, "text": "Comment on attachment 18773\nproposed patch\n\nAnother approach: mod_dir checks, if r->finfo.filetype is set to APR_DIR. That is true if r->filename is an existing dir, of course. If that's the case, mod_dir checks if r->uri does not end with a trailing slash.\n\nNow, mod_rewrite's fixup_hook modifies r->filename to sthg. redirect:/url-path and leaves r->uri unchanged. Copying r->filename or the new URL-path for the internal redirect to r->uri (PT-Flag, ignored in per-dir context) would not help, because if you rewrite to /bar/index.php and copy that to r->uri, r->uri won't end with a trailing slash, hence we would get a redirect now to /bar/index.php/ (instead of /foo/bar/ without modifying r->uri).\n\nTherefore I'd suggest we set r->finfo.filetype to NULL in mod_rewrite's fixup-hook where we force r->handler to be redirect-handler. After a rewrite with applying a substitution in per-dir context occurred, we changed r->filename to redirect:/URL-path, which doesn't resolve to a directory anymore at this stage of processing.", "id": 123274, "time": "2008-12-13T14:07:49Z", "creator": "bobsiegen@googlemail.com", "creation_time": "2008-12-13T14:07:49Z", "is_private": false, "attachment_id": 18773}, {"count": 6, "tags": [], "bug_id": 40373, "is_private": false, "text": "Created attachment 23012\npatch against trunk r723565", "id": 123275, "time": "2008-12-13T14:09:38Z", "creator": "bobsiegen@googlemail.com", "creation_time": "2008-12-13T14:09:38Z", "attachment_id": 23012}, {"count": 7, "attachment_id": null, "creator": "bobsiegen@googlemail.com", "is_private": false, "id": 123277, "time": "2008-12-13T14:12:52Z", "bug_id": 40373, "creation_time": "2008-12-13T14:12:52Z", "tags": [], "text": "*** Bug 31210 has been marked as a duplicate of this bug. ***"}, {"count": 8, "tags": [], "text": "This problem is still present in Apache 2.2\nWhat is the status of this bug?", "is_private": false, "bug_id": 40373, "id": 142050, "time": "2010-11-27T10:52:25Z", "creator": "fictive@sci.fi", "creation_time": "2010-11-27T10:52:25Z", "attachment_id": null}, {"count": 9, "tags": [], "bug_id": 40373, "is_private": false, "text": "Encountered the same situation today on 2.4.10.\n\nFound a workaround which could be applied in original poster's configuration as follows:\n\nDocumentRoot /var/www\n<Directory /var/www>\n  DirectorySlash Off\n  RewriteEngine On\n  RewriteOptions AllowNoSlash\n  RewriteRule ^foo/(.*) /bar/index.php?path=$1 [L]\n</Directory>", "id": 178794, "time": "2014-10-28T20:06:43Z", "creator": "disassembler@dasm.cz", "creation_time": "2014-10-28T20:06:43Z", "attachment_id": null}]