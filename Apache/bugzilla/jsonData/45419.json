[{"count": 0, "tags": [], "text": "Currently the DefaultServlet accepts the \"Ranges\" request header, but doesn't indicate this in its response by returning \"Accept-Ranges: bytes\". Although this is not required in HTTP/1.1, setting the header is required in order for the Adobe Acrobat plugin to correctly handle Linearized PDF's (which can speed download by allowing random access to a PDF file).\n\nAlthough it's not strictly necessary according to the specification I can't think of any reason why this header is not safe to set in a response from DefaultServlet, which is always dealing with static files, and not doing so has a negative impact on serving large PDF files - so I'm filing it as a bug rather than an RFE.", "attachment_id": null, "id": 118759, "creator": "mike@bfo.co.uk", "time": "2008-07-17T07:38:07Z", "bug_id": 45419, "creation_time": "2008-07-17T07:38:07Z", "is_private": false}, {"count": 1, "tags": [], "creator": "wrowe@apache.org", "attachment_id": null, "text": "We might have lost sight of the issue here; this issue is not whether or not\nit's possible to encode utf-16-le, it's that the URI was not encoded in that\ncharacter set.\n\nAs I pointed out above, in the similar -be encoding, we need 16 bits to transmit \neach character,  This particular browser sent 8 bit octets.  That is not utf-16.\n\nTwo escaped characters does not constitute a utf-16 request, it's a utf-16\nfragment within an ASCII/ISO-8859/UTF-8/whatever bytestream.  I would recommend\nno change whatsoever in Tomcat's code on this issue.\n\nAs far as working around it, it might be nice if one could deploy a Valve that\nwas triggered based on User-Agent, that would probably be the most elegant hack\nfor this browser flaw.", "id": 118762, "time": "2008-07-17T08:02:53Z", "bug_id": 45419, "creation_time": "2008-07-17T08:02:53Z", "is_private": false}, {"count": 2, "tags": [], "creator": "wrowe@apache.org", "is_private": false, "text": "Ignore comment #1; bugzilla navigation bites again; this relates to another issue.", "id": 118763, "time": "2008-07-17T08:09:48Z", "bug_id": 45419, "creation_time": "2008-07-17T08:09:48Z", "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 45419, "text": "I think this is a design flaw of the Adobe client. There are plenty of servlets, so adding this to the default servlet is pointless, as it might not be the one answering the request on which the Adobe client . I think you're better off using a valve or a filter to achieve this.", "id": 118971, "time": "2008-07-24T06:34:02Z", "creator": "remm@apache.org", "creation_time": "2008-07-24T06:34:02Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "creator": "remm@apache.org", "attachment_id": null, "text": "I think this is a design flaw of the Adobe client. There are plenty of\nservlets, so adding this to the default servlet is pointless, as it might not\nbe the one answering the request on which the Adobe client will base its decidion to use a range. I think you're better off using a valve or a filter to achieve this.\n", "id": 118972, "time": "2008-07-24T06:34:40Z", "bug_id": 45419, "creation_time": "2008-07-24T06:34:40Z", "is_private": false}, {"count": 5, "tags": [], "creator": "mike@bfo.co.uk", "is_private": false, "text": "The Adobe client will request the entire document, but if it finds it's Linearized and the server accepts Ranges it will interrupt that initial request. If Ranges aren't supported and it interrupts the request anyway it will have to re-download the entire document, which (if it's dynamically generated) could be a very expensive operation. So the Accept-Ranges header really is essential to this transaction.\n\nYes, this could be resolved with a Filter or some other workaround on the part of the webapp developer, but I'm not clear why this is a better approach than modifying the DefaultServlet, which after all is designed to a) serve files from the filesystem, and b) support Ranges. Advertising that fact in the headers is completely inline with the HTTP specification and has at least one demonstrable case where it's necessary by design. More to the point, it will improve the user experience of Tomcat out of the box for a not-insignificant number of requests, at a cost of one line of code and an extra 20 bytes for each response.\n", "id": 118974, "time": "2008-07-24T07:08:05Z", "bug_id": 45419, "creation_time": "2008-07-24T07:08:05Z", "attachment_id": null}, {"count": 6, "tags": [], "text": "I'm guessing the Apache web server supports this just fine.\n\nIf so, then that's both a workaround and a reason to improve Tomcat.  Tomcat should strive to be a suitable replacement for Apache for non-esoteric things.  Serving PDFs well is certainly not esoteric.  [Neither is serving as a load balancing reverse proxy ala mod_proxy_ajp -- if Tomcat did this that would eliminate my major reason for using Apache in front of Tomcat.]", "is_private": false, "id": 118981, "creator": "jessh@ptc.com", "time": "2008-07-24T07:50:18Z", "bug_id": 45419, "creation_time": "2008-07-24T07:50:18Z", "attachment_id": null}, {"count": 7, "tags": [], "bug_id": 45419, "attachment_id": null, "is_private": false, "id": 118982, "time": "2008-07-24T08:13:35Z", "creator": "mike@bfo.co.uk", "creation_time": "2008-07-24T08:13:35Z", "text": "Yes, the Apache web server sets this header."}, {"count": 8, "tags": [], "creator": "ftoth@synernet.com", "attachment_id": null, "text": "It's difficult to create a generally correct work-around for this in a filter, since a filter won't know which requests are destined for DefaultServlet. In my case I know that all my PDFs are served by DefaultServlet, so a filter works. But that's not universally true.\n\nI've never written a valve, but I can imagine similar problems there.", "id": 120598, "time": "2008-09-14T18:32:43Z", "bug_id": 45419, "creation_time": "2008-09-14T18:32:43Z", "is_private": false}, {"count": 9, "tags": [], "creator": "markt@apache.org", "is_private": false, "text": "This has been fixed in trunk and proposed for 6.0.x. It is enabled by default but can be disabled if required.", "id": 120719, "time": "2008-09-17T12:28:26Z", "bug_id": 45419, "creation_time": "2008-09-17T12:28:26Z", "attachment_id": null}, {"count": 10, "tags": [], "bug_id": 45419, "text": "This has been fixed in 6.0.x and will be included in 6.0.19 onwards.", "id": 120785, "time": "2008-09-19T04:12:14Z", "creator": "markt@apache.org", "creation_time": "2008-09-19T04:12:14Z", "is_private": false, "attachment_id": null}, {"count": 11, "tags": [], "text": "Hi Mark,\n\nOne of my customer is facing the issue that he is not able to byte server the PDF as PDF is getting completely downloaded in the memory first and then displayed..They are using JBOSS 4.0.3 SP1 ...I was going through the link https://issues.apache.org/bugzilla/show_bug.cgi?id=45419 and it says that this has been fixed in 6.0.x and will be included in 6.0.19 onwards....So what can i suggest to my customer ..because even with Jboss 4.2.0 ,tomcat 6.0.13 is shipped ...so if they upgrade to JBOSS 4.2.0 will it solve their issue?? .They are using Java Code to serve the PDF and i got one suggestion to implement byter serving functionality in the servlet but it is causing some performance issues.\n\nKindly advice \n\nRegards\nKApil", "attachment_id": null, "id": 127031, "creator": "kapilkrb@gmail.com", "time": "2009-05-14T23:30:15Z", "bug_id": 45419, "creation_time": "2009-05-14T23:30:15Z", "is_private": false}, {"count": 12, "attachment_id": null, "bug_id": 45419, "text": "(In reply to comment #10)\n> This has been fixed in 6.0.x and will be included in 6.0.19 onwards.\n\nHi Mark,\n\nOne of my customer is facing the issue that he is not able to byte server the\nPDF as PDF is getting completely downloaded in the memory first and then\ndisplayed..They are using JBOSS 4.0.3 SP1 ...I was going through the link\nhttps://issues.apache.org/bugzilla/show_bug.cgi?id=45419 and it says that this\nhas been fixed in 6.0.x and will be included in 6.0.19 onwards....So what can i\nsuggest to my customer ..because even with Jboss 4.2.0 ,tomcat 6.0.13 is\nshipped ...so if they upgrade to JBOSS 4.2.0 will it solve their issue?? .They\nare using Java Code to serve the PDF and i got one suggestion to implement\nbyter serving functionality in the servlet but it is causing some performance\nissues.\n\nKindly advice \n\nRegards\nKApil", "id": 127032, "time": "2009-05-15T01:25:39Z", "creator": "kapilkrb@gmail.com", "creation_time": "2009-05-15T01:25:39Z", "tags": [], "is_private": false}, {"count": 13, "tags": [], "creator": "markt@apache.org", "is_private": false, "text": "Bugzilla is not a support forum. You should use the Tomcat users mailing list or perhaps the equivalent for JBoss.", "id": 127038, "time": "2009-05-15T06:04:06Z", "bug_id": 45419, "creation_time": "2009-05-15T06:04:06Z", "attachment_id": null}]