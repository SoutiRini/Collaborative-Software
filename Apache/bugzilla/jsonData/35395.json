[{"attachment_id": null, "tags": [], "bug_id": 35395, "is_private": false, "count": 0, "id": 76487, "time": "2005-06-17T09:46:03Z", "creator": "snailonline@21cn.com", "creation_time": "2005-06-17T09:46:03Z", "text": "package gef.test;\n\nimport org.eclipse.draw2d.XYLayout;\nimport org.eclipse.swt.widgets.Canvas;\nimport org.eclipse.swt.widgets.Control;\nimport org.eclipse.swt.widgets.Display;\nimport org.eclipse.swt.widgets.Label;\nimport org.eclipse.swt.widgets.Shell;\nimport org.eclipse.swt.widgets.TableColumn;\nimport org.eclipse.swt.SWT;\nimport org.eclipse.swt.widgets.Table;\nimport org.eclipse.swt.widgets.Button;\nimport org.eclipse.swt.widgets.Composite;\nimport org.eclipse.swt.custom.CLabel;\nimport org.eclipse.swt.events.ControlEvent;\nimport org.eclipse.swt.events.ControlListener;\nimport org.eclipse.swt.events.MouseEvent;\nimport org.eclipse.swt.events.MouseListener;\nimport org.eclipse.swt.events.MouseMoveListener;\nimport org.eclipse.swt.events.MouseTrackListener;\nimport org.eclipse.swt.events.PaintEvent;\nimport org.eclipse.swt.events.PaintListener;\nimport org.eclipse.swt.graphics.GC;\n\nimport com.swtdesigner.ResourceManager;\nimport org.eclipse.swt.custom.SashForm;\nimport org.eclipse.swt.layout.FillLayout;\n\n\npublic class Application {\n\n\tprotected Shell shell;\n\n\tpublic static void main(String[] args) {\n\t\ttry {\n\t\t\tApplication window = new Application();\n\t\t\twindow.open();\n\t\t} catch (Exception e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n\n\tpublic void open() {\n\t\tfinal Display display = Display.getDefault();\n\t\tcreateContents();\n\t\tshell.layout();\n\t\tshell.open();\n\t\twhile (!shell.isDisposed()) {\n\t\t\tif (!display.readAndDispatch())\n\t\t\t\tdisplay.sleep();\n\t\t}\n\t}\n\t\n\tComposite composite1, composite2;\n\tItemBar bar;\n\t\n\tprotected void createContents() {\n\t\tshell = new Shell();\n\t\tshell.setLayout(new FillLayout());\n\t\tshell.setSize(500, 375);\n\t\tshell.setText(\"SWT Application\");\n\n\t\tfinal SashForm sashForm = new SashForm(shell, SWT.NONE);\n\n\t\tcomposite1 = new Composite(sashForm, SWT.NONE);\n\t\tcomposite2 = new Composite(sashForm, SWT.NONE);\n\n\t\tfinal Button button = new Button(composite2, SWT.NONE);\n\t\tbutton.setForeground(Display.getCurrent().getSystemColor\n(SWT.COLOR_RED));\n\t\tbutton.setBackground(Display.getCurrent().getSystemColor\n(SWT.COLOR_BLACK));\n\t\tbutton.setBounds(90, 130, 120, 30);\n\t\tbutton.setText(\"button\");\n\n\t\tfinal Button button_1 = new Button(composite2, SWT.CHECK);\n\t\tbutton_1.setForeground(Display.getCurrent().getSystemColor\n(SWT.COLOR_BLUE));\n\t\tbutton_1.setBounds(100, 210, 120, 30);\n\t\tbutton_1.setText(\"check button\");\n\n\t\tfinal Label label = new Label(composite2, SWT.NONE);\n\t\tlabel.setBackground(Display.getCurrent().getSystemColor\n(SWT.COLOR_WIDGET_HIGHLIGHT_SHADOW));\n\t\tlabel.setBounds(45, 35, 120, 15);\n\t\tlabel.setText(\"label\");\n\t\t\n\t\tcomposite1.setLayout(new FillLayout());\n\t\tbar = new ItemBar(composite1, SWT.NONE);\n\t\tbar.setBackground(Display.getCurrent().getSystemColor\n(SWT.COLOR_DARK_GRAY));\n\t\t\n\t\tbar.addItem(\"buttongroup.gif\", \" buttongroup\");\n\t\tbar.addItem(\"checkbox.gif\", \" checkbox\");\n\t\tbar.addItem(\"label.gif\", \" label\");\n\t\tbar.addItem(\"listbox.gif\", \" listbox\");\n\t\tbar.addItem(\"image.gif\", \" image\");\n\t\t\n\t\tsashForm.setWeights(new int[] { 50, 50 });\t\n\t}\n}\n\nclass ItemBar extends Canvas {\n\n\tint height  = 22;\n\t\n\t/**\n\t * @param parent\n\t * @param style\n\t */\n\tpublic ItemBar(Composite parent, int style) {\n\t\tsuper(parent, style);\n\t\tthis.addControlListener(new ControlListener() {\n\n\t\t\tpublic void controlMoved(ControlEvent e) {\n\t\t\t\t// TODO Auto-generated method stub\n\t\t\t\t\n\t\t\t}\n\n\t\t\tpublic void controlResized(ControlEvent e) {\n\t\t\t\t// TODO Auto-generated method stub\n\t\t\t\tlayout();\n\t\t\t}\n\t\t\t\n\t\t});\n\t}\t\n\t\n\tpublic void addItem(String img, String text) {\n\t\tItemCanvas item = new ItemCanvas(this, SWT.NONE);\n\t\t\n\t\titem.setImage(img);\n\t\titem.setText(text);\n\t}\n\t\n\tpublic void layout() {  \n\t\tControl controls[] = this.getChildren();\n\t\tint top = 0 ;\n\t\tfor (int i=0; i<controls.length; i++) {\n\t\t\tif (controls[i] instanceof ItemCanvas) {\n\t\t\t\tcontrols[i].setBounds(1, top, this.getBounds\n().width, height);\n\t\t\t\ttop += height;\n\t\t\t\t((ItemCanvas)controls[i]).layout();\n\t\t\t}\n\t\t}\n\t}\n}\n\nclass ItemCanvas extends Canvas {\n\t\n\tLabel image;\n\t\n\tLabel text;\n\t\n\tint height = 16;\n\t\n\tpublic static final int MOUSE_EXIT = 0;\n\t\n\tpublic static final int MOUSE_ENTER = 1;\n\t\n\tpublic static final int MOUSE_DOWN = 2;\n\t\n\tpublic static final int MOUSE_UP = 3;\n\t\n\tint action = MOUSE_EXIT;\n\t\n\t/**\n\t * @param parent\n\t * @param style\n\t */\n\tpublic ItemCanvas(Composite parent, int style) {\n\t\tsuper(parent, style);\n\t\t// TODO Auto-generated constructor stub\n\t\timage = new Label(this, SWT.NONE);\n\t\ttext = new Label(this, SWT.NONE);\n\t\t\n\t\ttext.addPaintListener(new PaintListener() {\n\n\t\t\tpublic void paintControl(PaintEvent e) {\n\t\t\t\t// TODO Auto-generated method stub\n\t\t\t\tLabel item = (Label) e.getSource();\n\t\t\t\tGC gc = e.gc;\n\t\t\t\t\n\t\t\t\tswitch(action) {\n\t\t\t\t\tcase ItemCanvas.MOUSE_ENTER:\n\t\t\t\t\t\tgc.setForeground\n(Display.getCurrent().getSystemColor(SWT.COLOR_WIDGET_HIGHLIGHT_SHADOW));\n\t\t\t\t\t\tgc.drawLine(0, 0, item.getBounds\n().width-2, 0);\n\t\t\t\t\t\t\n\t\t\t\t\t\tgc.setForeground\n(Display.getCurrent().getSystemColor(SWT.COLOR_WIDGET_NORMAL_SHADOW));\n\t\t\t\t\t\tgc.drawLine(0, item.getBounds\n().height-2, item.getBounds().width-2, item.getBounds().height-2);\n\t\t\t\t\t\tgc.drawLine(item.getBounds\n().width-2, 0, item.getBounds().width-2, item.getBounds().height-2);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase ItemCanvas.MOUSE_DOWN:\n\t\t\t\t\t\tgc.setForeground\n(Display.getCurrent().getSystemColor(SWT.COLOR_WIDGET_NORMAL_SHADOW));\n\t\t\t\t\t\tgc.drawLine(0, 0, item.getBounds\n().width-2, 0);\n\t\t\t\t\t\t\n\t\t\t\t\t\tgc.setForeground\n(Display.getCurrent().getSystemColor(SWT.COLOR_WIDGET_HIGHLIGHT_SHADOW));\n\t\t\t\t\t\tgc.drawLine(0, item.getBounds\n().height-2, item.getBounds().width-2, item.getBounds().height-2);\n\t\t\t\t\t\tgc.drawLine(item.getBounds\n().width-2, 0, item.getBounds().width-2, item.getBounds().height-2);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase ItemCanvas.MOUSE_EXIT:\n\t\t\t\t\tcase ItemCanvas.MOUSE_UP:\n\t\t\t\t\t\tgc.setForeground\n(Display.getCurrent().getSystemColor(SWT.COLOR_WIDGET_BACKGROUND));\n\t\t\t\t\t\tgc.drawRectangle(0, 0, \nitem.getBounds().width-2, item.getBounds().height-2);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t});\n\t\t\n\t\timage.addPaintListener(new PaintListener() {\n\n\t\t\tpublic void paintControl(PaintEvent e) {\n\t\t\t\t// TODO Auto-generated method stub\n\t\t\t\tLabel item = (Label) e.getSource();\n\t\t\t\tGC gc = e.gc;\n\t\t\t\t\n\t\t\t\tswitch(action) {\n\t\t\t\t\tcase ItemCanvas.MOUSE_ENTER:\n\t\t\t\t\t\tgc.setForeground\n(Display.getCurrent().getSystemColor(SWT.COLOR_WIDGET_HIGHLIGHT_SHADOW));\n\t\t\t\t\t\tgc.drawLine(0, 0, item.getBounds\n().width, 0);\n\t\t\t\t\t\tgc.drawLine(0, 0, 0, \nitem.getBounds().height-2);\n\t\t\t\t\t\t\n\t\t\t\t\t\tgc.setForeground\n(Display.getCurrent().getSystemColor(SWT.COLOR_WIDGET_NORMAL_SHADOW));\n\t\t\t\t\t\tgc.drawLine(0, item.getBounds\n().height-2, item.getBounds().width-2, item.getBounds().height-2);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase ItemCanvas.MOUSE_DOWN:\n\t\t\t\t\t\tgc.setForeground\n(Display.getCurrent().getSystemColor(SWT.COLOR_WIDGET_NORMAL_SHADOW));\n\t\t\t\t\t\tgc.drawLine(0, 0, item.getBounds\n().width, 0);\n\t\t\t\t\t\tgc.drawLine(0, 0, 0, \nitem.getBounds().height-2);\n\t\t\t\t\t\t\n\t\t\t\t\t\tgc.setForeground\n(Display.getCurrent().getSystemColor(SWT.COLOR_WIDGET_HIGHLIGHT_SHADOW));\n\t\t\t\t\t\tgc.drawLine(0, item.getBounds\n().height-2, item.getBounds().width-2, item.getBounds().height-2);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase ItemCanvas.MOUSE_EXIT:\n\t\t\t\t\tcase ItemCanvas.MOUSE_UP:\n\t\t\t\t\t\tgc.setForeground\n(Display.getCurrent().getSystemColor(SWT.COLOR_WIDGET_BACKGROUND));\n\t\t\t\t\t\tgc.drawRectangle(0, 0, \nitem.getBounds().width-2, item.getBounds().height-2);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t});\n\t\t\n\t\ttext.addMouseTrackListener(new MouseTrackListener() {\n\n\t\t\tpublic void mouseEnter(MouseEvent e) {\n\t\t\t\t// TODO Auto-generated method stub\n\t\t\t\taction = ItemCanvas.MOUSE_ENTER;\n\t\t\t\ttext.redraw();\n\t\t\t\timage.redraw();\n\t\t\t}\n\n\t\t\tpublic void mouseExit(MouseEvent e) {\n\t\t\t\t// TODO Auto-generated method stub\n\t\t\t\taction = ItemCanvas.MOUSE_EXIT;\n\t\t\t\ttext.redraw();\n\t\t\t\timage.redraw();\n\t\t\t}\n\n\t\t\tpublic void mouseHover(MouseEvent e) {\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t});\n\t\t\n\t\ttext.addMouseListener(new MouseListener() {\n\n\t\t\tpublic void mouseDoubleClick(MouseEvent e) {\n\t\t\t\t// TODO Auto-generated method stub\n\t\t\t\t\n\t\t\t}\n\n\t\t\tpublic void mouseDown(MouseEvent e) {\n\t\t\t\t// TODO Auto-generated method stub\n\t\t\t\taction = ItemCanvas.MOUSE_DOWN;\n\t\t\t\ttext.redraw();\n\t\t\t\timage.redraw();\n\t\t\t}\n\n\t\t\tpublic void mouseUp(MouseEvent e) {\n\t\t\t\t// TODO Auto-generated method stub\n\t\t\t\taction = ItemCanvas.MOUSE_UP;\n\t\t\t\ttext.redraw();\n\t\t\t\timage.redraw();\n\t\t\t}\n\t\t\t\n\t\t});\n\t}\n\t\n\t\n\t\n\tpublic void setImage(String file) {\n\t\timage.setImage(ResourceManager.getImage(Application.class, \nfile));\n\t}\n\t\n\tpublic void setText(String str) {\n\t\ttext.setText(str);\n\t}\n\t\n\tpublic void layout() {\n\t\timage.setBounds(2, 2, 16, height);\n\t\ttext.setBounds(18, 2, this.getBounds().width-16-2-2, height);\n\t}\n}"}, {"count": 1, "tags": [], "text": "No idea what this is. Resolving as invalid.", "is_private": false, "id": 79371, "creation_time": "2005-09-04T23:34:41Z", "time": "2005-09-04T23:34:41Z", "creator": "markt@apache.org", "bug_id": 35395, "attachment_id": null}]