[{"count": 0, "attachment_id": null, "bug_id": 43445, "text": "I have a main application and some others running on the same JVM.\nSo i configured Log4j with PropertyConfigurator.configure(...) in my main \napplication and i want to inhibit other ones overwriting the configuration I \nset.\nIs there some way to do this? If not is it possible to add a method \n(like \"freezeConfiguration()\") in the PropertyConfigurator class?\nThank you in advance.", "id": 108473, "time": "2007-09-21T06:26:28Z", "creator": "giorgio.nacci@weservice.it", "creation_time": "2007-09-21T06:26:28Z", "tags": [], "is_private": false}, {"text": "This is a usage question, not a bug.  Usage questions should be asked on log4j-\nusers@logging.apache.org, so I'm marking this as invalid.\n\nAlso, your question isn't making much sense to me.  You don't run multiple \"applications\" on the same \nJVM unless you talking about web applications and then you should identify what application server you \nare using.  log4j also doesn't not write configuration files as part of normal operation.  If applications are \nreally overwriting the configuration file, then you could protect the configuration file by making it read-\nonly at the operating system level, but that is not something log4j could do.\n\nPlease rephrase your question and post to log4j-user.", "tags": [], "creator": "carnold@apache.org", "attachment_id": null, "count": 1, "id": 108478, "time": "2007-09-21T08:57:23Z", "bug_id": 43445, "creation_time": "2007-09-21T08:57:23Z", "is_private": false}]