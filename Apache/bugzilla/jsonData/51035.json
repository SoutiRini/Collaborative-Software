[{"count": 0, "tags": [], "creator": "kurt@intricatesoftware.com", "text": "The following condition causes ant to raise a null pointer exception:\n\n    <condition property=\"boot.java.provides.latest.jdk\">\n        <and>\n            <available\n                ignoresystemclasses=\"true\"\n                classpath=\"${boot.java.home}/jre/lib/rt.jar\" classname=\"java.nio.file.Path\"/>\n            <hasmethod\n                ignoresystemclasses=\"true\"\n                classpath=\"${boot.java.home}/jre/lib/rt.jar\"\n                classname=\"java.nio.file.Path\" method=\"getFileName\"/>\n        </and>\n    </condition>\n\nBUILD FAILED\n/Users/truk/jdk/bsd-port/langtools/make/build.xml:188: java.lang.NullPointerException\n        at org.apache.tools.ant.taskdefs.condition.HasMethod.isMethodFound(HasMethod.java:180)\n        at org.apache.tools.ant.taskdefs.condition.HasMethod.eval(HasMethod.java:154)\n        at org.apache.tools.ant.taskdefs.condition.And.eval(And.java:42)\n        at org.apache.tools.ant.taskdefs.ConditionTask.execute(ConditionTask.java:120)\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n        at java.lang.reflect.Method.invoke(Method.java:613)\n        at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n        at org.apache.tools.ant.TaskAdapter.execute(TaskAdapter.java:154)\n        at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n        at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n        at java.lang.reflect.Method.invoke(Method.java:613)\n        at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n        at org.apache.tools.ant.Task.perform(Task.java:348)\n        at org.apache.tools.ant.Target.execute(Target.java:390)\n        at org.apache.tools.ant.helper.ProjectHelper2.parse(ProjectHelper2.java:180)\n        at org.apache.tools.ant.ProjectHelper.configureProject(ProjectHelper.java:82)\n        at org.apache.tools.ant.Main.runBuild(Main.java:793)\n        at org.apache.tools.ant.Main.startAnt(Main.java:217)\n        at org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n        at org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\n\nremoving ignoresystemclasses=\"true\" avoids the NPE but isn't the behavior I need.", "id": 145607, "time": "2011-04-06T16:00:09Z", "bug_id": 51035, "creation_time": "2011-04-06T16:00:09Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "creator": "bodewig@apache.org", "text": "This happens when the class cannot be found at all, should be fixed in a few minutes.", "id": 145628, "time": "2011-04-07T23:49:36Z", "bug_id": 51035, "creation_time": "2011-04-07T23:49:36Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "creator": "bodewig@apache.org", "text": "OK, usually when the class is not found things are handled differently.\n\nThe only way the class can be null is if findClass throws a SecurityException.\nI'm not sure whether throwing an exception (like we do when the class\ncan not be found at all) or returning false would be the better fix.", "id": 145629, "time": "2011-04-08T00:10:29Z", "bug_id": 51035, "creation_time": "2011-04-08T00:10:29Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 51035, "text": "(In reply to comment #2)\n> OK, usually when the class is not found things are handled differently.\n> \n> The only way the class can be null is if findClass throws a SecurityException.\n> I'm not sure whether throwing an exception (like we do when the class\n> can not be found at all) or returning false would be the better fix.\n\nI agree that we're hitting the SecurityException case. What I don't understand is why that is the case, because the class exists and <available\\> test with ignoresystemclasses=\"true\" returns true. Shouldn't hasmethod behave similar to <available\\>, such that it can detect if the method exists or not with ignoresystemclasses=\"true\". Is there a way to work-around the SecurityException so it can inspect for the method when ignoresystemclasses=\"true\"?", "id": 145640, "time": "2011-04-08T07:22:58Z", "creator": "kurt@intricatesoftware.com", "creation_time": "2011-04-08T07:22:58Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "creator": "bodewig@apache.org", "text": "It looks as if the loadClass method in HasMethod started live as a copy\nof Available's.\n\nignoreSystemClasses was introduced to available with bug 6031 and it also\nintroduced the special handling for SecurityException.  AFAIU a SecurityException\nis raised if you try to load a java.* class from a different classloader than\nthe bootstrap classloader.\n\nIn available's case the use-case is that you may want to check whether a jar\nthat you are going to use as bootclasspath in a new forked VM or pass to\na compiler.  The behavior \"yes, the class is there even if this VM is not\nallowed to load it\" is reasonable in this case.\n\nIn HasMethod's case I lean towards throwing a BuildException that states\nwe were not allowed to load the class rather than returning false by now.\n\nIgnoring the ignoreSystemClasses setting would in fact test the current\nbootstrap classloader rather than the classpath you have specified so I\ndon't think it would be useful.", "id": 145714, "time": "2011-04-12T00:00:01Z", "bug_id": 51035, "creation_time": "2011-04-12T00:00:01Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "creator": "bodewig@apache.org", "text": "svn revision 1095270 creates a better error message.\n\nI don't think there is anything else we could do short of creating a \"forked\" hasmethod that runs in a separate VM with your provided classpath used as the bootclasspath.", "id": 145878, "time": "2011-04-20T01:12:21Z", "bug_id": 51035, "creation_time": "2011-04-20T01:12:21Z", "is_private": false, "attachment_id": null}]