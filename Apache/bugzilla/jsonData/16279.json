[{"count": 0, "tags": [], "creator": "hnakamur@gmail.com", "text": "The <velocity> task is meant to be a richer version of filter function\nof the <copy> task. I have been using the filter function for replacing\nparameters in configuration files. But I need more functionality than\njust replacing. I think this is where Velocity comes in. This template\nengine has directives like #if and #foreach, so it is more powerful.\n\nThe <velocity> task has attributes and nested elements similar to the\n<copy> task. I thought it would be easy to use. But not all of <copy>\nattributes are supported. Please see the velocity.html in the patch.\n\nHere is a example of calling a <velocity> task:\n\n    <velocity todir=\"c\" propertyfile=\"velocity.properties\">\n      <velocitycontext>\n        <contextdata key=\"a\" value=\"A1\"/>\n        <contextdata key=\"b\" value=\"B1\" if=\"SOME_PROP\"/>\n        <contextdata key=\"b\" value=\"B2\" unless=\"SOME_PROP\"/>\n        <contextdata key=\"str\" classname=\"my.package.StringTool\"/>\n      </velocitycontext>\n      <fileset dir=\"a\">\n        <include name=\"**/*.vm\"/>\n      </fileset>\n      <mapper type=\"glob\" from=\"*.vm\" to=\"*.html\"/>\n    </velocity>\n\nOpinions and suggestions are welcome.\n\nHere is the patch for the <velocity> task:\n\ndiff -ruN jakarta-ant-1.5.1.orig/docs/manual/OptionalTasks/velocity.html \njakarta-ant-1.5.1/docs/manual/OptionalTasks/velocity.html\n--- jakarta-ant-1.5.1.orig/docs/manual/OptionalTasks/velocity.html 1970-01-01 \n09:00:00.000000000 +0900\n+++ jakarta-ant-1.5.1/docs/manual/OptionalTasks/velocity.html 2003-01-21 \n07:39:03.000000000 +0900\n@@ -0,0 +1,232 @@\n+<html>\n+\n+<head>\n+<meta http-equiv=\"Content-Language\" content=\"en-us\">\n+<title>Velocity Task</title>\n+</head>\n+\n+<body>\n+\n+<h2><a name=\"velocity\">Velocity</a></h2>\n+<h3>Description</h3>\n+<p>Run <a href=\"http://jakarta.apache.org/velocity/index.html\" \ntarget=\"_top\">Jakarta-Velocity</a> on a file or FileSet to a new\nfile or directory.\n+By default, files are only copied if the source file is newer than the\n+destination file, or when the destination file does not exist.  However,\n+you can explicitly overwrite files with the <code>overwrite</code> \nattribute.</p>\n+<p><a href=\"../CoreTypes/fileset.html\">FileSet</a>s are used to select a\n+set of files to copy.\n+To use a <code>&lt;fileset&gt;</code>, the <code>todir</code> attribute\n+must be set.</p>\n+<h3>Parameters</h3>\n+<table border=\"1\" cellpadding=\"2\" cellspacing=\"0\">\n+  <tr>\n+    <td valign=\"top\"><b>Attribute</b></td>\n+    <td valign=\"top\"><b>Description</b></td>\n+    <td align=\"center\" valign=\"top\"><b>Required</b></td>\n+  </tr>\n+  <tr>\n+    <td valign=\"top\">propertyfile</td>\n+     <td valign=\"top\">The property file which is used to initialize Velocity.\n+     </td>\n+     <td valign=\"top\" align=\"center\">Yes</td>\n+  </tr>\n+  <tr>\n+    <td valign=\"top\">file</td>\n+    <td valign=\"top\">The file to copy.</td>\n+    <td valign=\"top\" align=\"center\">Yes, unless a nested\n+    <code>&lt;fileset&gt;</code> element is used.</td>\n+  </tr>\n+  <tr>\n+    <td valign=\"top\">tofile</td>\n+    <td valign=\"top\">The file to copy to.</td>\n+    <td valign=\"top\" align=\"center\" rowspan=\"2\">With the <code>file</code>\n+      attribute, either <code>tofile</code> or <code>todir</code> can be used.\n+      With nested <code>&lt;fileset&gt;</code> elements, if the set of files\n+      is greater than 1, or if only the <code>dir</code> attribute is\n+      specified in the <code>&lt;fileset&gt;</code>, or if the\n+      <code>file</code> attribute is also specified, then only\n+      <code>todir</code> is allowed.</td>\n+  </tr>\n+  <tr>\n+    <td valign=\"top\">todir</td>\n+    <td valign=\"top\">The directory to copy to.</td>\n+  </tr>\n+  <tr>\n+    <td valign=\"top\">overwrite</td>\n+    <td valign=\"top\">Overwrite existing files even if the destination\n+      files are newer.</td>\n+    <td valign=\"top\" align=\"center\">No; defaults to false.</td>\n+  </tr>\n+  <tr>\n+    <td valign=\"top\">flatten</td>\n+    <td valign=\"top\">Ignore the directory structure of the source files,\n+      and copy all files into the directory specified by the <code>todir</code>\n+      attribute.  Note that you can achieve the same effect by using a\n+      <a href=\"../CoreTypes/mapper.html#flatten-mapper\">flatten \nmapper</a>.</td>\n+    <td valign=\"top\" align=\"center\">No; defaults to false.</td>\n+  </tr>\n+  <tr>\n+    <td valign=\"top\">failonerror</td>\n+     <td valign=\"top\">Log a warning message, but do not stop the build,\n+       when the file to copy does not exist.\n+       Only meaningful when copying a single file.\n+     </td>\n+     <td valign=\"top\" align=\"center\">No; defaults to true.</td>\n+  </tr>\n+  <tr>\n+    <td valign=\"top\">templatebasedir</td>\n+     <td valign=\"top\">The template base directory. This is used to\n+       caclutate a relative path of a template file. Velocity receives a\n+       relative path and searches a template file in Velocity's search paths.\n+     </td>\n+     <td valign=\"top\" align=\"center\">No; defaults to project basedir.</td>\n+  </tr>\n+</table>\n+<h3>Parameters specified as nested elements</h3>\n+\n+<h4>velocitycontext</h4>\n+ <p>A &lt;velocitycontext&gt; is used to specify the VelocityContext data.\n+ It has nested &lt;contextdata&gt; elements.</p>\n+\n+<h4>contextdata</h4>\n+ <p>A &lt;contextdata&gt; is a nested element of &lt;velocitycontext&gt;\n+ and is used to specify a VelocityContext datum.</p>\n+\n+<table border=\"1\" cellpadding=\"2\" cellspacing=\"0\">\n+  <tr>\n+    <td valign=\"top\"><b>Attribute</b></td>\n+    <td valign=\"top\"><b>Description</b></td>\n+    <td align=\"center\" valign=\"top\"><b>Required</b></td>\n+  </tr>\n+  <tr>\n+    <td valign=\"top\">key</td>\n+     <td valign=\"top\">The key of a VelocityContext datum.\n+     </td>\n+     <td valign=\"top\" align=\"center\">Yes</td>\n+  </tr>\n+  <tr>\n+    <td valign=\"top\">value</td>\n+    <td valign=\"top\">The value of a VelocityContext datum.</td>\n+    <td valign=\"top\" align=\"center\" rowspan=\"2\">One of either <var>value</var>\n+    or <var>classname</var>.</td>\n+  </tr>\n+  <tr>\n+    <td valign=\"top\">classname</td>\n+    <td valign=\"top\">An instance of this classname is used as a VelocityContext\n+    datum. The specified class must have the public non-argument constructor.\n+    And if the class has a public method\n+    <code>setContext(org.apache.velocity.context.Context)</code>,\n+    it is invoked by reflection.\n+    </td>\n+  </tr>\n+  <tr>\n+    <td valign=\"top\">if</td>\n+    <td valign=\"top\">Only use this data if the named property is set.</td>\n+    <td align=\"center\" valign=\"top\">No</td>\n+  </tr>\n+  <tr>\n+    <td valign=\"top\">unless</td>\n+    <td valign=\"top\">Only use this data if the named property is\n+       <b>not</b> set.</td>\n+    <td align=\"center\" valign=\"top\">No</td>\n+  </tr>\n+</table>\n+\n+<h4>fileset</h4>\n+ <p><a href=\"../CoreTypes/fileset.html\">FileSet</a>s are used to select\n+sets of files to run velocity on.\n+ To use a fileset, the <code>todir</code> attribute must be set.</p>\n+\n+<h4>mapper</h4>\n+ <p>You can define filename transformations by using a nested <a\n+ href=\"../CoreTypes/mapper.html\">mapper</a> element. The default mapper used by\n+ <code>&lt;velocity&gt;</code> is the <a\n+ href=\"../CoreTypes/mapper.html#identity-mapper\">identity mapper</a>.</p>\n+\n+<h3>Examples</h3>\n+<p><b>Run velocity on a single file</b></p>\n+<pre>\n+  &lt;velocity file=&quot;myfile.txt&quot; tofile=&quot;mycopy.txt&quot;\n+      propertyfile=&quot;velocity.properties&quot;&gt;\n+    &lt;velocitycontext&gt;\n+      &lt;contextdata key=&quot;key1&quot; value=&quot;value1&quot;/&gt;\n+      &lt;contextdata key=&quot;key2&quot; \nclassname=&quot;some.Class1&quot;/&gt;\n+      &lt;contextdata key=&quot;key3&quot; value=&quot;value3&quot; \nif=&quot;SOME_PROPERTY&quot;/&gt;\n+      &lt;contextdata key=&quot;key4&quot; value=&quot;value4&quot; \nunless=&quot;SOME_PROPERTY&quot;/&gt;\n+    &lt;/velocitycontext&gt;\n+  &lt;/velocity&gt;\n+</pre>\n+<p><b>Run velocity on a single file to a directory</b></p>\n+<pre>\n+  &lt;velocity file=&quot;myfile.txt&quot; todir=&quot;../some/other/dir&quot;\n+      propertyfile=&quot;velocity.properties&quot;&gt;\n+    &lt;velocitycontext&gt;\n+      &lt;contextdata key=&quot;key1&quot; value=&quot;value1&quot;/&gt;\n+      &lt;contextdata key=&quot;key2&quot; \nclassname=&quot;some.Class1&quot;/&gt;\n+      &lt;contextdata key=&quot;key3&quot; value=&quot;value3&quot; \nif=&quot;SOME_PROPERTY&quot;/&gt;\n+      &lt;contextdata key=&quot;key4&quot; value=&quot;value4&quot; \nunless=&quot;SOME_PROPERTY&quot;/&gt;\n+    &lt;/velocitycontext&gt;\n+  &lt;/velocity&gt;\n+</pre>\n+<p><b>Run velocity on a set of files to a directory</b></p>\n+<pre>\n+  &lt;velocity todir=&quot;../dest/dir&quot;\n+      propertyfile=&quot;velocity.properties&quot;&gt;\n+    &lt;velocitycontext&gt;\n+      &lt;contextdata key=&quot;key1&quot; value=&quot;value1&quot;/&gt;\n+      &lt;contextdata key=&quot;key2&quot; \nclassname=&quot;some.Class1&quot;/&gt;\n+      &lt;contextdata key=&quot;key3&quot; value=&quot;value3&quot; \nif=&quot;SOME_PROPERTY&quot;/&gt;\n+      &lt;contextdata key=&quot;key4&quot; value=&quot;value4&quot; \nunless=&quot;SOME_PROPERTY&quot;/&gt;\n+    &lt;/velocitycontext&gt;\n+    &lt;fileset dir=&quot;src_dir&quot;&gt;\n+      &lt;exclude name=&quot;**/*.java&quot;/&gt;\n+    &lt;/fileset&gt;\n+  &lt;/velocity&gt;\n+\n+  &lt;velocity todir=&quot;../dest/dir&quot;\n+      propertyfile=&quot;velocity.properties&quot;&gt;\n+    &lt;velocitycontext&gt;\n+      &lt;contextdata key=&quot;key1&quot; value=&quot;value1&quot;/&gt;\n+      &lt;contextdata key=&quot;key2&quot; \nclassname=&quot;some.Class1&quot;/&gt;\n+      &lt;contextdata key=&quot;key3&quot; value=&quot;value3&quot; \nif=&quot;SOME_PROPERTY&quot;/&gt;\n+      &lt;contextdata key=&quot;key4&quot; value=&quot;value4&quot; \nunless=&quot;SOME_PROPERTY&quot;/&gt;\n+    &lt;/velocitycontext&gt;\n+    &lt;fileset dir=&quot;src_dir&quot; excludes=&quot;**/*.java&quot;/&gt;\n+  &lt;/velocity&gt;\n+</pre>\n+<p><b>Run velocity on a set of files to a directory, appending\n+<code>.bak</code> to the file name on the fly</b></p>\n+<pre>\n+  &lt;velocity todir=&quot;../backup/dir&quot;\n+      propertyfile=&quot;velocity.properties&quot;&gt;\n+    &lt;velocitycontext&gt;\n+      &lt;contextdata key=&quot;key1&quot; value=&quot;value1&quot;/&gt;\n+      &lt;contextdata key=&quot;key2&quot; \nclassname=&quot;some.Class1&quot;/&gt;\n+      &lt;contextdata key=&quot;key3&quot; value=&quot;value3&quot; \nif=&quot;SOME_PROPERTY&quot;/&gt;\n+      &lt;contextdata key=&quot;key4&quot; value=&quot;value4&quot; \nunless=&quot;SOME_PROPERTY&quot;/&gt;\n+    &lt;/velocitycontext&gt;\n+    &lt;fileset dir=&quot;src_dir&quot;/&gt;\n+    &lt;mapper type=&quot;glob&quot; from=&quot;*&quot; \nto=&quot;*.bak&quot;/&gt;\n+  &lt;/velocity&gt;\n+</pre>\n+\n+<p><strong>Unix Note:</strong> Destination file permissions are not the same as\n+the template files; they end up with the default <code>UMASK</code> permissions\n+instead. This\n+is caused by the lack of any means to query or set file permissions in the\n+current Java runtimes.\n+</p>\n+\n+<p><strong>Windows Note:</strong> If you a destination file already exists,\n+but with different casing, the destination file takes on the case of the\n+original. The workaround is to\n+<a href=\"delete.html\">delete</a>\n+the file in the destination directory before you run velocity.\n+</p>\n+\n+<hr><p align=\"center\">Copyright &copy; 2003 Apache Software Foundation.\n+All rights Reserved.</p>\n+\n+</body>\n+</html>\n+\ndiff -ruN jakarta-ant-1.5.1.orig/docs/manual/install.html jakarta-ant-\n1.5.1/docs/manual/install.html\n--- jakarta-ant-1.5.1.orig/docs/manual/install.html 2002-10-02 \n11:10:18.000000000 +0900\n+++ jakarta-ant-1.5.1/docs/manual/install.html 2003-01-21 07:37:06.000000000 \n+0900\n@@ -381,6 +381,12 @@\n     <td><a href=\"http://www.clarkware.com/software/JDepend.html\"\n         target=\"_top\">http://www.clarkware.com/software/JDepend.html</a></td>\n   </tr>\n+  <tr>\n+    <td>Velocity JAR(s)</td>\n+    <td>velocity task</td>\n+    <td><a href=\"http://jakarta.apache.org/velocity/index.html\"\n+        target=\"_top\">http://jakarta.apache.org/velocity/index.html</a></td>\n+  </tr>\n </table>\n <br>\n <hr>\ndiff -ruN jakarta-ant-1.5.1.orig/docs/manual/optionaltasklist.html jakarta-ant-\n1.5.1/docs/manual/optionaltasklist.html\n--- jakarta-ant-1.5.1.orig/docs/manual/optionaltasklist.html 2002-10-02 \n11:10:06.000000000 +0900\n+++ jakarta-ant-1.5.1/docs/manual/optionaltasklist.html 2003-01-20 \n09:40:43.000000000 +0900\n@@ -62,6 +62,7 @@\n <a href=\"OptionalTasks/test.html\">Test</a><br>\n <a href=\"OptionalTasks/translate.html\">Translate</a><br>\n <a href=\"Integration/VAJAntTool.html#tasks\">Visual Age for Java Tasks</a><br>\n+<a href=\"OptionalTasks/velocity.html\">Velocity</a><br>\n <a href=\"OptionalTasks/vss.html#tasks\">Microsoft Visual SourceSafe \nTasks</a><br>\n <a href=\"OptionalTasks/wljspc.html\">Weblogic JSP Compiler</a><br>\n <a href=\"OptionalTasks/xmlvalidate.html\">XmlValidate</a><br>\ndiff -ruN jakarta-ant-\n1.5.1.orig/src/main/org/apache/tools/ant/taskdefs/defaults.properties\njakarta-ant-1.5.1/src/main/org/apache/tools/ant/taskdefs/defaults.properties\n--- jakarta-ant-\n1.5.1.orig/src/main/org/apache/tools/ant/taskdefs/defaults.properties 2002-10-\n02 11:08:34.000000000 +0900\n+++ jakarta-ant-\n1.5.1/src/main/org/apache/tools/ant/taskdefs/defaults.properties 2003-01-21 \n07:29:56.000000000 +0900\n@@ -169,6 +169,7 @@\n jarlib-\navailable=org.apache.tools.ant.taskdefs.optional.extension.JarLibAvailableTask\n jarlib-\nresolve=org.apache.tools.ant.taskdefs.optional.extension.JarLibResolveTask\n setproxy=org.apache.tools.ant.taskdefs.optional.net.SetProxy\n+velocity=org.apache.tools.ant.taskdefs.optional.VelocityTask\n\n # deprecated ant tasks (kept for back compatibility)\n starteam=org.apache.tools.ant.taskdefs.optional.scm.AntStarTeamCheckOut\ndiff -ruN jakarta-ant-\n1.5.1.orig/src/main/org/apache/tools/ant/taskdefs/optional/VelocityTask.java\njakarta-ant-\n1.5.1/src/main/org/apache/tools/ant/taskdefs/optional/VelocityTask.java\n--- jakarta-ant-\n1.5.1.orig/src/main/org/apache/tools/ant/taskdefs/optional/VelocityTask.java \n1970-01-01 09:00:00.000000000 +0900\n+++ jakarta-ant-\n1.5.1/src/main/org/apache/tools/ant/taskdefs/optional/VelocityTask.java 2003-01-\n20 10:48:52.000000000 +0900\n@@ -0,0 +1,478 @@\n+/*\n+ * The Apache Software License, Version 1.1\n+ *\n+ * Copyright (c) 2000-2002 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowlegement:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowlegement may appear in the software itself,\n+ *    if and wherever such third-party acknowlegements normally appear.\n+ *\n+ * 4. The names \"The Jakarta Project\", \"Ant\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their names without prior written\n+ *    permission of the Apache Group.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ */\n+\n+package org.apache.tools.ant.taskdefs.optional;\n+\n+import java.io.File;\n+import java.io.FileOutputStream;\n+import java.io.OutputStreamWriter;\n+import java.util.Enumeration;\n+import java.util.Vector;\n+\n+import org.apache.tools.ant.BuildException;\n+import org.apache.tools.ant.DirectoryScanner;\n+import org.apache.tools.ant.Project;\n+import org.apache.tools.ant.Task;\n+import org.apache.tools.ant.types.FileSet;\n+import org.apache.tools.ant.types.Mapper;\n+import org.apache.tools.ant.types.optional.velocity.VelocityContext;\n+import org.apache.tools.ant.util.FileNameMapper;\n+import org.apache.tools.ant.util.FileUtils;\n+import org.apache.tools.ant.util.FlatFileNameMapper;\n+import org.apache.tools.ant.util.IdentityMapper;\n+import org.apache.velocity.app.Velocity;\n+import org.apache.velocity.context.Context;\n+\n+\n+/**\n+ * Run velocity on a file or a fileset to a new file\n+ * or directory.  Velocity is only run for a file which is newer\n+ * than the destination file, or when the destination file does not\n+ * exist.  It is possible to explicitly overwrite existing files.</p>\n+ *\n+ * <p>This task is supposed to be a richer version of filter function\n+ * of copy task, and has similar attributes and nested elements.</p>\n+ *\n+ * @author <a href=\"mailto:hnakamur@v003.vaio.ne.jp\">Hiroaki Nakamura</a>\n+ *\n+ * @version $Revision$\n+ */\n+public class VelocityTask extends Task {\n+    protected File templateBaseDir = null;\n+    protected File file = null; // the template file\n+    protected File destFile = null; // the destination file\n+    protected File destDir = null;  // the destination directory\n+    protected String encoding = System.getProperty(\"file.encoding\"); // \ntemplate and output file encoding\n+    protected File propertyFile = null; // the destination file\n+    protected VelocityContext velocityContext; // the <velocitycontext> nested \nelement\n+    protected Vector filesets = new Vector();\n+\n+    protected boolean forceOverwrite = false;\n+    private boolean failonerror = true;\n+\n+    protected boolean flatten = false;\n+    protected Mapper mapperElement = null;\n+\n+    private FileUtils fileUtils;\n+\n+    /**\n+     * Velocity task constructor.\n+     */\n+    public VelocityTask() {\n+        fileUtils = FileUtils.newFileUtils();\n+    }\n+\n+    protected FileUtils getFileUtils() {\n+        return fileUtils;\n+    }\n+\n+    /**\n+     * Sets template files base directory.\n+     */\n+    public void setTemplateBaseDir(File dir) {\n+        this.templateBaseDir = dir;\n+    }\n+\n+    /**\n+     * @return templatebasedir attribute value or project basedir if \ntemplatebasedir is not set.\n+     */\n+    protected File getTemplateBaseDir() {\n+        return templateBaseDir == null\n+                ? project.getBaseDir() : templateBaseDir;\n+    }\n+\n+    /**\n+     * Sets a single source file to copy.\n+     */\n+    public void setFile(File file) {\n+        this.file = file;\n+    }\n+\n+    /**\n+     * Sets the destination file.\n+     */\n+    public void setTofile(File destFile) {\n+        this.destFile = destFile;\n+    }\n+\n+    /**\n+     * Sets the destination directory.\n+     */\n+    public void setTodir(File destDir) {\n+        this.destDir = destDir;\n+    }\n+\n+    /**\n+     * Sets the Velocity propertyfile.\n+     */\n+    public void setPropertyFile(File propertyFile) {\n+        this.propertyFile = propertyFile;\n+    }\n+\n+    /**\n+     * Sets the encoding.\n+     */\n+    public void setEncoding(String encoding) {\n+        this.encoding = encoding;\n+    }\n+\n+    /**\n+     * Create a nested velocitycontext element.\n+    */\n+    public VelocityContext createVelocityContext() throws BuildException {\n+        if (velocityContext != null) {\n+            throw new BuildException(\"Cannot define more than one \nvelocitycontext\",\n+                                     location);\n+        }\n+        velocityContext = new VelocityContext();\n+        return velocityContext;\n+    }\n+\n+    /**\n+     * Adds a set of files to copy.\n+     */\n+    public void addFileset(FileSet set) {\n+        filesets.addElement(set);\n+    }\n+\n+    /**\n+     * Overwrite any existing destination file(s).\n+     */\n+    public void setOverwrite(boolean overwrite) {\n+        this.forceOverwrite = overwrite;\n+    }\n+\n+    /**\n+     * If false, note errors to the output but keep going.\n+     * @param failonerror true or false\n+     */\n+     public void setFailOnError(boolean failonerror) {\n+         this.failonerror = failonerror;\n+     }\n+\n+    /**\n+     * When copying directory trees, the files can be \"flattened\"\n+     * into a single directory.  If there are multiple files with\n+     * the same name in the source directory tree, only the first\n+     * file will be copied into the \"flattened\" directory, unless\n+     * the forceoverwrite attribute is true.\n+     */\n+    public void setFlatten(boolean flatten) {\n+        this.flatten = flatten;\n+    }\n+\n+    /**\n+     * Defines the mapper to map source to destination files.\n+     */\n+    public Mapper createMapper() throws BuildException {\n+        if (mapperElement != null) {\n+            throw new BuildException(\"Cannot define more than one mapper\",\n+                                     location);\n+        }\n+        mapperElement = new Mapper(project);\n+        return mapperElement;\n+    }\n+\n+    /**\n+     * Performs the velocity template merge operation.\n+     */\n+    public void execute() throws BuildException {\n+        File savedFile = file; // may be altered in validateAttributes\n+        File savedDestFile = destFile;\n+        File savedDestDir = destDir;\n+        FileSet savedFileSet = null;\n+        if (file == null && destFile != null && filesets.size() == 1) {\n+            // will be removed in validateAttributes\n+            savedFileSet = (FileSet) filesets.elementAt(0);\n+        }\n+\n+        validateAttributes();\n+\n+        try {\n+            initVelocity();\n+            Context ctx = createContext();\n+            File tmplBaseDir = getTemplateBaseDir();\n+\n+            if (file != null) {\n+                if (!file.exists()) {\n+                    String message = \"Warning: Could not find template file \"\n+                        + file.getAbsolutePath() + \".\";\n+                    if (!failonerror) {\n+                        log(message);\n+                    } else {\n+                        throw new BuildException(message);\n+                    }\n+                }\n+\n+                if (destFile == null) {\n+                    destFile = new File(destDir, file.getName());\n+                }\n+\n+                mergeTemplateUnlessUpToDate(\n+                    tmplBaseDir,\n+                    file,\n+                    ctx,\n+                    destFile);\n+            }\n+\n+            if (filesets != null) {\n+                FileNameMapper mapper = getFileNameMapper();\n+                for (Enumeration en = filesets.elements(); en.hasMoreElements\n();) {\n+                    FileSet fs = (FileSet) en.nextElement();\n+                    DirectoryScanner ds = fs.getDirectoryScanner(project);\n+                    File dsBaseDir = ds.getBasedir();\n+                    String[] files = ds.getIncludedFiles();\n+                    for (int i = 0; i < files.length; i++) {\n+                        String srcRelativePath = files[i];\n+                        File srcFile = new File(dsBaseDir, srcRelativePath);\n+                        String[] destRelativePaths = mapper.mapFileName\n(srcRelativePath);\n+                        for (int j = 0; j < destRelativePaths.length; j++) {\n+                            String destRelativePath = destRelativePaths[j];\n+                            File curDestFile = new File(destDir, \ndestRelativePath);\n+                            mergeTemplateUnlessUpToDate(\n+                                tmplBaseDir,\n+                                srcFile,\n+                                ctx,\n+                                curDestFile);\n+                        }\n+                    }\n+                }\n+            }\n+        } finally {\n+            // clean up again, so this instance can be used a second\n+            // time\n+            file = savedFile;\n+            destFile = savedDestFile;\n+            destDir = savedDestDir;\n+            if (savedFileSet != null && filesets.size() == 0) {\n+                filesets.insertElementAt(savedFileSet, 0);\n+            }\n+        }\n+    }\n+\n+//************************************************************************\n+//  protected and private methods\n+//************************************************************************\n+\n+    /**\n+     * Ensure we have a consistent and legal set of attributes, and set\n+     * any internal flags necessary based on different combinations\n+     * of attributes.\n+     */\n+    protected void validateAttributes() throws BuildException {\n+        if (file == null && filesets.size() == 0) {\n+            throw new BuildException(\"Specify at least one source \"\n+                                     + \"- a file or a fileset.\");\n+        }\n+\n+        if (destFile != null && destDir != null) {\n+            throw new BuildException(\"Only one of tofile and todir \"\n+                                     + \"may be set.\");\n+        }\n+\n+        if (destFile == null && destDir == null) {\n+            throw new BuildException(\"One of tofile or todir must be set.\");\n+        }\n+\n+        if (file != null && file.exists() && file.isDirectory()) {\n+            throw new BuildException(\"Use a fileset to copy directories.\");\n+        }\n+\n+        if (destFile != null && filesets.size() > 0) {\n+            if (filesets.size() > 1) {\n+                throw new BuildException(\n+                    \"Cannot concatenate multiple files into a single file.\");\n+            } else {\n+                FileSet fs = (FileSet) filesets.elementAt(0);\n+                DirectoryScanner ds = fs.getDirectoryScanner(project);\n+                String[] srcFiles = ds.getIncludedFiles();\n+\n+                if (srcFiles.length == 0) {\n+                    throw new BuildException(\n+                        \"Cannot perform operation from directory to file.\");\n+                } else if (srcFiles.length == 1) {\n+                    if (file == null) {\n+                        file = new File(ds.getBasedir(), srcFiles[0]);\n+                        filesets.removeElementAt(0);\n+                    } else {\n+                        throw new BuildException(\"Cannot concatenate multiple \"\n+                                                 + \"files into a single \nfile.\");\n+                    }\n+                } else {\n+                    throw new BuildException(\"Cannot concatenate multiple \"\n+                                             + \"files into a single file.\");\n+                }\n+            }\n+        }\n+\n+        if (destFile != null) {\n+            destDir = fileUtils.getParentFile(destFile);\n+        }\n+\n+    }\n+\n+    /**\n+     * @return FileNameMapper instance\n+     */\n+    protected FileNameMapper getFileNameMapper() {\n+        FileNameMapper mapper = null;\n+        if (mapperElement != null) {\n+            mapper = mapperElement.getImplementation();\n+        } else if (flatten) {\n+            mapper = new FlatFileNameMapper();\n+        } else {\n+            mapper = new IdentityMapper();\n+        }\n+        return mapper;\n+    }\n+\n+    /**\n+     * Initializes Velocity.\n+     */\n+    protected void initVelocity() throws BuildException {\n+        if (propertyFile == null) {\n+            throw new BuildException(\"propertyfile must be set\");\n+        }\n+        try {\n+            Velocity.init(propertyFile.getPath());\n+        } catch (Exception ex) {\n+            throw new BuildException(ex);\n+        }\n+    }\n+\n+    /**\n+     * Merge Velocity template file to the corresponding destination file\n+     * if the destination file is older than the template file or does not \nexist.\n+     */\n+    protected void mergeTemplateUnlessUpToDate(\n+        File templateBaseDir,\n+        File templateFile,\n+        Context ctx,\n+        File destFile)\n+        throws BuildException {\n+\n+        if (forceOverwrite ||\n+            (templateFile.lastModified() > destFile.lastModified())) {\n+            String templatePath = getRelativePath(templateFile, \ntemplateBaseDir);\n+            mergeTemplate(templatePath, ctx, destFile);\n+        } else {\n+            log(templateFile + \" omitted as \" + destFile\n+                + \" is up to date.\", Project.MSG_VERBOSE);\n+        }\n+    }\n+\n+    /**\n+     * Merge Velocity template file to the corresponding destination file.\n+     */\n+    protected void mergeTemplate(\n+        String templateRelativePath,\n+        Context ctx,\n+        File destFile)\n+        throws BuildException {\n+        try {\n+            File destDir = fileUtils.getParentFile(destFile);\n+            if (!destDir.exists()) {\n+                destDir.mkdirs();\n+            }\n+\n+            OutputStreamWriter osw = null;\n+            FileOutputStream fos = new FileOutputStream(destFile);\n+            try {\n+                osw = new OutputStreamWriter(fos, encoding);\n+                try {\n+                    Velocity.mergeTemplate(\n+                        templateRelativePath,\n+                        encoding,\n+                        ctx,\n+                        osw);\n+                } finally {\n+                    osw.close();\n+                    fos = null;\n+                }\n+            } finally {\n+                if (fos != null) {\n+                    fos.close();\n+                }\n+            }\n+        } catch (Exception ex) {\n+            throw new BuildException(ex);\n+        }\n+    }\n+\n+    /**\n+     * @return relative path of file from baseDir\n+     */\n+    protected String getRelativePath(File file, File baseDir) {\n+        int trimLen = baseDir.getAbsolutePath().length();\n+        if (!isRootDirectory(baseDir)) {\n+            trimLen++;\n+        }\n+        return file.getAbsolutePath().substring(trimLen);\n+    }\n+\n+    /**\n+     * @return whether dir is root directory or not.\n+     */\n+    protected boolean isRootDirectory(File dir) {\n+        return dir.getParent() == null;\n+    }\n+\n+    /**\n+     * @return Velocity context created.\n+     */\n+    protected Context createContext()\n+        throws BuildException {\n+        return velocityContext.createRealContext();\n+    }\n+}\ndiff -ruN jakarta-ant-\n1.5.1.orig/src/main/org/apache/tools/ant/types/optional/velocity/VelocityContext\n.java\njakarta-ant-\n1.5.1/src/main/org/apache/tools/ant/types/optional/velocity/VelocityContext.java\n--- jakarta-ant-\n1.5.1.orig/src/main/org/apache/tools/ant/types/optional/velocity/VelocityContext\n.java 1970-01-01 09:00:00.000000000\n+0900\n+++ jakarta-ant-\n1.5.1/src/main/org/apache/tools/ant/types/optional/velocity/VelocityContext.java\n 2003-01-20 11:00:10.000000000 +0900\n@@ -0,0 +1,258 @@\n+/*\n+ * The Apache Software License, Version 1.1\n+ *\n+ * Copyright (c) 2000-2002 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution, if\n+ *    any, must include the following acknowlegement:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowlegement may appear in the software itself,\n+ *    if and wherever such third-party acknowlegements normally appear.\n+ *\n+ * 4. The names \"The Jakarta Project\", \"Ant\", and \"Apache Software\n+ *    Foundation\" must not be used to endorse or promote products derived\n+ *    from this software without prior written permission. For written\n+ *    permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\"\n+ *    nor may \"Apache\" appear in their names without prior written\n+ *    permission of the Apache Group.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ */\n+\n+package org.apache.tools.ant.types.optional.velocity;\n+\n+import java.lang.reflect.InvocationTargetException;\n+import java.lang.reflect.Method;\n+import java.util.Enumeration;\n+import java.util.Vector;\n+\n+import org.apache.tools.ant.BuildException;\n+import org.apache.tools.ant.Project;\n+import org.apache.tools.ant.types.DataType;\n+import org.apache.velocity.context.Context;\n+\n+/**\n+ * A VelocityContext is a nested element of Velocity task.\n+ * It has nested <code>&ltcontextdata&gt;</code> elements.\n+ *\n+ * @author <a href=\"mailto:hnakamur@v003.vaio.ne.jp\">Hiroaki Nakamura</a>\n+ *\n+ * @version $Revision$\n+ */\n+public class VelocityContext extends DataType {\n+    private Vector contextData = new Vector();\n+\n+    /**\n+     * Creates the nested <code>&ltcontextdata&gt;</code> element.\n+     */\n+    public ContextData createContextData() throws BuildException {\n+        ContextData cd = new ContextData();\n+        contextData.addElement(cd);\n+        return cd;\n+    }\n+\n+    /**\n+     * @return real org.apache.velocity.VelocityContext specified by\n+     * <code>&ltvelocitycontext&gt;</code> element.\n+     */\n+    public Context createRealContext()\n+        throws BuildException {\n+        Context context = new org.apache.velocity.VelocityContext();\n+        populateContext(context);\n+        return context;\n+    }\n+\n+    /**\n+     * Populates org.apache.velocity.VelocityContext with data specified by\n+     * nested <code>&ltcontextdata&gt;</code> elements.\n+     */\n+    protected void populateContext(Context context)\n+        throws BuildException {\n+        for (Enumeration en = contextData.elements(); en.hasMoreElements();) {\n+            Object o = en.nextElement();\n+            ContextData cd = (ContextData) o;\n+            cd.addIfValid(context);\n+        }\n+    }\n+\n+    /**\n+     * ContextData represents a nested <code>&ltcontextdata&gt;</code> element.\n+     * The attribute <code>key</code> is necessary. One of attribute \n<code>value</code>\n+     * or <code>className</code> is necessary. The attribute <code>value</code>\n+     * is used to create immediate Context data. The attribute \n<code>className</code>\n+     * is used to create a \"tool\" object which is later used from template \nfiles.\n+     * The attribute <code>if</code> and <code>unless</code> are optional, \nwhich\n+     * are used to control of enabling or disabling of a \n<code>&ltcontextdata&gt;</code>\n+     * element.\n+     */\n+    public class ContextData {\n+        protected String key;\n+        protected String value;\n+        protected String ifCond;\n+        protected String className;\n+        protected String unlessCond;\n+\n+        /**\n+         * Sets the key.\n+         * @param name The key to set\n+         */\n+        public void setKey(String key) {\n+            this.key = key;\n+        }\n+\n+        /**\n+         * Sets the value.\n+         * @param value The value to set\n+         */\n+        public void setValue(String value) {\n+            this.value = value;\n+        }\n+\n+        /**\n+         * Sets the className.\n+         * @param className The className to set\n+         */\n+        public void setClassName(String className) {\n+            this.className = className;\n+        }\n+\n+        /**\n+         * Sets the ifCond.\n+         * @param ifCond The ifCond to set\n+         */\n+        public void setIf(String ifCond) {\n+            this.ifCond = ifCond;\n+        }\n+\n+        /**\n+         * Sets the unlessCond.\n+         * @param unlessCond The unlessCond to set\n+         */\n+        public void setUnless(String unlessCond) {\n+            this.unlessCond = unlessCond;\n+        }\n+\n+        /**\n+         * @return whether this element is valid or not\n+         */\n+        public boolean isValid() {\n+            Project p = getProject();\n+            if (ifCond != null && p.getProperty(ifCond) == null) {\n+                return false;\n+            } else if (unlessCond != null && p.getProperty(unlessCond) != \nnull) {\n+                return false;\n+            }\n+            return true;\n+        }\n+\n+        /**\n+         * Add to a context if this element is valid.\n+         */\n+        public void addIfValid(Context context)\n+            throws BuildException {\n+            if (!isValid()) {\n+                return;\n+            }\n+\n+            if (key == null) {\n+                throw new BuildException(\"name must be set\");\n+            }\n+\n+            if (value != null && className != null) {\n+                throw new BuildException(\"value and className cannot both be \nset\");\n+            } else if (value == null && className == null) {\n+                throw new BuildException(\"value or className must be set\");\n+            }\n+\n+            if (value != null) {\n+                context.put(key, value);\n+            } else if (className != null) {\n+                Object instance = createInstance(className);\n+                invokeSetContext(instance, context);\n+                context.put(key, instance);\n+            }\n+        }\n+\n+        /**\n+         * @return an instance of the specified class.\n+         */\n+        protected Object createInstance(String className)\n+            throws BuildException {\n+            try {\n+                return Class.forName(className).newInstance();\n+            } catch (ClassNotFoundException ex) {\n+                throw new BuildException(ex);\n+            } catch (IllegalAccessException ex) {\n+                throw new BuildException(ex);\n+            } catch (InstantiationException ex) {\n+                throw new BuildException(ex);\n+            }\n+        }\n+\n+        protected void invokeSetContext(Object instance, Context context)\n+            throws BuildException {\n+            try {\n+                Class[] paramTypes = { Context.class };\n+                Method method = instance.getClass().getMethod(\"setContext\", \nparamTypes);\n+                Object[] args = { context };\n+                method.invoke(instance, args);\n+            } catch (NoSuchMethodException ex) {\n+                // ignore\n+            } catch (IllegalAccessException ex) {\n+                throw new BuildException(ex);\n+            } catch (InvocationTargetException ex) {\n+                throw new BuildException(ex);\n+            }\n+        }\n+\n+        /**\n+         * @return a string representation of an instance.\n+         */\n+        public String toString() {\n+            return \"ContextVar[name=\"\n+                + key\n+                + \", value=\"\n+                + value\n+                + \", className=\"\n+                + className\n+                + \", if=\"\n+                + ifCond\n+                + \", unless=\"\n+                + unlessCond\n+                + \"]\";\n+        }\n+    }\n+}", "id": 29744, "time": "2003-01-20T23:49:00Z", "bug_id": 16279, "creation_time": "2003-01-20T23:49:00Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 16279, "attachment_id": 4501, "text": "Created attachment 4501\nDeprecated calls fixed for latest CVS, @ant tags added", "id": 29755, "time": "2003-01-21T03:00:04Z", "creator": "hnakamur@gmail.com", "creation_time": "2003-01-21T03:00:04Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 16279, "text": "I cancel this proposal because VPP is already there.\nPlease use VPP instead of this velocity task.", "id": 29821, "time": "2003-01-21T23:04:01Z", "creator": "hnakamur@gmail.com", "creation_time": "2003-01-21T23:04:01Z", "is_private": false, "attachment_id": null}]