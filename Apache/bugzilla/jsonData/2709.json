[{"attachment_id": null, "tags": [], "bug_id": 2709, "is_private": false, "count": 0, "id": 3873, "time": "2001-07-20T08:44:44Z", "creator": "cos@ivu.de", "creation_time": "2001-07-20T08:44:44Z", "text": "This bug occurs only when cookies are used for session management: If a session \nis invalidated programatically (session.invalidate()) and then a new session is \nimmediately created within the same request (session=request.getSession()), the \nID of the new session is not being written back into a cookie. It gets lost. \nObviously a new session object is created (all test confim this) but gets lost \nwhen control is returned to the browser. This bug can always be reproduced."}, {"attachment_id": null, "tags": [], "creator": "Larry.Isaacs@sas.com", "is_private": false, "count": 1, "id": 3876, "time": "2001-07-20T09:54:56Z", "bug_id": 2709, "creation_time": "2001-07-20T09:54:56Z", "text": "Thanks for the bug report.  If you could supply a simple JSP or webapp that\ndemonstrates this problem, the time it would save me would be very helpful\neven though it may not represent a lot of time.  It also insures that I'm\nfixing your specific bug."}, {"count": 2, "tags": [], "text": "The following JSP page works successfully for me with Tomcat 3.3 stand-alone\nand Tomcat + Apache/mod_jk:\n\n<html><body>\n<p>Initial session ID = <%= session.getId() %></p>\n<% session.invalidate();\n   session = request.getSession(); %>\n<p>Second session ID = <%= session.getId() %></p>\n</body></html>\n\nNote: Adding \"out.flush();\" just before \"session.invalidate()\" will\ncause the behavior you report because the \"initial\" session cookie has\nbeen sent to the browser and it is too late to change it.\n\n", "attachment_id": null, "bug_id": 2709, "id": 4353, "time": "2001-08-07T19:06:49Z", "creator": "Larry.Isaacs@sas.com", "creation_time": "2001-08-07T19:06:49Z", "is_private": false}]