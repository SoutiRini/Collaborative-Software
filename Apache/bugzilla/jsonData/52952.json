[{"count": 0, "tags": [], "creator": "knst.kolinko@gmail.com", "attachment_id": null, "is_private": false, "id": 155119, "time": "2012-03-20T15:22:00Z", "bug_id": 52952, "creation_time": "2012-03-20T15:22:00Z", "text": "The following call was added in r1242101\n\nIn StandardServer#initInternal():\n\n> +  ExtensionValidator.addSystemResource(f);\n\nThe above is a static method and it does not check for duplicates.\n\nIt does not scale well. E.g. if there are several Tomcat instances, e.g. run by JUnit.\n\n\nI'd say that implementing ExtensionValidator with static methods is at fault here. The only place where it is called is\n\nStandardContext#startInternal()\n-> calls ExtensionValidator.validateApplication().\n\nI do not see a need for static methods there. It should be possible to get a specific ExtensionValidator instance in StandardContext."}, {"count": 1, "tags": [], "text": "Adding a duplicate check should be trivial.\n\nThere should be one validator per instance rather than one per context so adding it to the Server is likely the best solution.", "is_private": false, "bug_id": 52952, "id": 155140, "time": "2012-03-20T20:17:06Z", "creator": "markt@apache.org", "creation_time": "2012-03-20T20:17:06Z", "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 52952, "text": "For checking for duplicates its better to use sets than lists for storing Extension and ManifestResource inside ExtensionValidator and overriding equals and hashcode, but HashSet its based on HashMap and when HashMap is used the keys should be immutable, do i change Extension and ManifestResource to immutable?", "id": 190548, "time": "2016-04-26T00:26:11Z", "creator": "lavloz@hotmail.fr", "creation_time": "2016-04-26T00:26:11Z", "is_private": false, "attachment_id": null}, {"count": 3, "attachment_id": null, "bug_id": 52952, "text": "That should be fine.", "id": 190556, "time": "2016-04-26T08:48:54Z", "creator": "markt@apache.org", "creation_time": "2016-04-26T08:48:54Z", "tags": [], "is_private": false}, {"count": 4, "tags": [], "text": "Created attachment 33811\nPatch\n\nThis is a patch for duplication with some code enhancements (replacing iterator loops with enhanced for-loop ...).\n\nin this patch i didn't changed Extension to immutable class, changing JavaBean class to an immutable class made its instantiation (Long arguments in constructor or making new builder for the class), and i noticed that objects (Extension and ManifestResource) inside ExtensionValidator doesn't go out from it, so its nice to don't make them immutable cause they will not change outside :)", "attachment_id": 33811, "id": 190599, "creator": "lavloz@hotmail.fr", "time": "2016-04-27T13:35:42Z", "bug_id": 52952, "creation_time": "2016-04-27T13:35:42Z", "is_private": false}, {"count": 5, "tags": [], "text": "Created attachment 33813\nPatch\n\nMany unit test in the last patch didn't pass cause of many changes in the code, in this patch i have reverted everything and focusing only in this bug, now all unit tests pass :)", "attachment_id": 33813, "id": 190618, "creator": "lavloz@hotmail.fr", "time": "2016-04-28T09:07:52Z", "bug_id": 52952, "creation_time": "2016-04-28T09:07:52Z", "is_private": false}, {"count": 6, "tags": [], "text": "Some feedback on the patch.\n\nObjects is Java 7+. Tomcat 7 must run on Java 6 so that part of the patch needs re-work.\n\nOtherwise the patch looks OK for what it does. What it misses is that there may be multiple Tomcat instances in an embedded scenario hence my comment about that rather than being static, ExtensionValidator needed to move to the Server so there could - in theory at least - be multiple independent instances in a JVM.", "attachment_id": null, "id": 191061, "creator": "markt@apache.org", "time": "2016-05-18T19:40:59Z", "bug_id": 52952, "creation_time": "2016-05-18T19:40:59Z", "is_private": false}, {"count": 7, "attachment_id": 33858, "bug_id": 52952, "text": "Created attachment 33858\nPatch\n\nI made ExtensionValidator non static and added it to the Server, then from Context i get it back by walking through the hiararchy.\n\nI made also a global validator which belongs to the JVM, the idea is, if we couldn't get back the ExtensionValidator registred in the server we use this global validator (i don't want the server to suffer from NPE).\n\nI have no idea how to write the unit case for ExtensionValidator (currently there's not test case) because available Extension and ManifestResource are different from JVM to other.", "id": 191149, "time": "2016-05-21T01:01:06Z", "creator": "lavloz@hotmail.fr", "creation_time": "2016-05-21T01:01:06Z", "tags": [], "is_private": false}]