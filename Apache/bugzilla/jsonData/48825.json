[{"count": 0, "tags": [], "bug_id": 48825, "attachment_id": null, "is_private": false, "id": 134928, "time": "2010-02-26T17:39:24Z", "creator": "jglick@apache.org", "creation_time": "2010-02-26T17:39:24Z", "text": "Probably this method should be deprecated and its usages in XMLProperty and the P4 tasks cleaned up, but in 1.8.0 it still exists and claims that\n\n\"Any existing property of the same name is overwritten, unless it is a user property.\"\n\nThis does not seem to be true:\n\n<project basedir=\".\" default=\"x\">\n  <target name=\"x\">\n    <echo file=\"Override.java\">\n      public class Override extends org.apache.tools.ant.taskdefs.Property {\n        protected void addProperty(String n, String v) {\n          getProject().setProperty(n, v);\n        }\n      }\n    </echo>\n    <javac includeantruntime=\"true\" srcdir=\".\" destdir=\".\" includes=\"Override.java\"/>\n    <taskdef name=\"override\" classname=\"Override\" classpath=\".\"/>\n    <property name=\"p\" value=\"1\"/>\n    <override name=\"p\" value=\"2\"/>\n    <echo>${p}</echo>\n  </target>\n</project>\n\nprints 2 (as expected) in Ant 1.7.1, but 1 in Ant 1.8.0.\n\nI did not see anything in WHATSNEW about this either."}, {"count": 1, "attachment_id": null, "bug_id": 48825, "text": "Reference: http://netbeans.org/bugzilla/show_bug.cgi?id=181284", "id": 134929, "time": "2010-02-26T17:40:11Z", "creator": "jglick@apache.org", "creation_time": "2010-02-26T17:40:11Z", "tags": [], "is_private": false}, {"count": 2, "attachment_id": null, "bug_id": 48825, "text": "I just tried this against the head revision of ant in trunk and the problem is there too.\n\n--Antoine", "id": 134933, "time": "2010-02-26T22:24:43Z", "creator": "antoine@apache.org", "creation_time": "2010-02-26T22:24:43Z", "tags": [], "is_private": false}, {"count": 3, "tags": [], "text": "Hello Jesse,\n\nI have rewritten your project file in this way :\n\n<project basedir=\".\" default=\"x\">\n  <target name=\"x\">\n    <echo file=\"Override.java\">\n      public class Override extends org.apache.tools.ant.Task {\n        private String n;\n        private String v;\n        public void setName(String n) {\n          this.n = n;\n        }\n        public void setValue(String v) {\n          this.v = v;\n        }\n        public void execute() {\n          getProject().setProperty(n, v);\n        }\n      }\n    </echo>\n    <javac includeantruntime=\"true\" srcdir=\".\" destdir=\".\"\nincludes=\"Override.java\"/>\n    <taskdef name=\"override\" classname=\"Override\" classpath=\".\"/>\n    <property name=\"p\" value=\"1\"/>\n    <override name=\"p\" value=\"2\"/>\n    <echo>${p}</echo>\n  </target>\n</project>\n\n\nThis time the output is 2.\n\nSo the problem is not that that Project#setProperty does not override properties any more, rather that Property#addProperty is not called in your piece of code.\n\nRegards,\n\nAntoine", "is_private": false, "id": 134934, "creator": "antoine@apache.org", "time": "2010-02-26T22:31:45Z", "bug_id": 48825, "creation_time": "2010-02-26T22:31:45Z", "attachment_id": null}, {"count": 4, "tags": [], "creator": "jglick@apache.org", "is_private": false, "text": "(In reply to comment #3)\n> So the problem is not that that Project#setProperty does not override\n> properties any more, rather that Property#addProperty is not called in your\n> piece of code.\n\nIndeed. A kind of incompatibility in Property but probably not one that can be trivially fixed. (A demonstration of why you should not permit subclassing without a lot of preparation...)\n\nAn alternate version of the task that works in both 1.7.1 and 1.8.0:\n\npublic class OverrideTask extends Property {\n  protected @Override void addProperty(String n, String v) {\n    getProject().setProperty(n, v);\n  }\n  protected /*@Override*/ void addProperty(String n, Object v) {\n    getProject().setProperty(n, (String) v);\n  }\n}", "id": 134941, "time": "2010-02-27T16:14:47Z", "bug_id": 48825, "creation_time": "2010-02-27T16:14:47Z", "attachment_id": null}]