[{"count": 0, "tags": [], "bug_id": 41646, "text": "Discovered this whilst working on bugs #39245 and #41644.\n\nSet up Apache as a reverse proxy:\n\n    ProxyPass /rproxy http://localhost:12345\n    ProxyPassReverse /rproxy http://localhost:12345\n\nNow request something which does not exist on the backend server:\n\n$ curl --get --verbose http://localhost:2200/rproxy/notfound\n* About to connect() to localhost port 2200\n*   Trying 127.0.0.1... connected\n* Connected to localhost (127.0.0.1) port 2200\n> GET /rproxy/notfound HTTP/1.1\n> User-Agent: curl/7.15.5 (i686-redhat-linux-gnu) libcurl/7.15.5 OpenSSL/0.9.8b\nzlib/1.2.3 libidn/0.6.5\n> Host: localhost:2200\n> Accept: */*\n> \n< HTTP/1.1 404 Not Found\n< Date: Fri, 16 Feb 2007 17:53:50 GMT\n< Server: Apache/2.2.4 (Unix)\n< Last-Modified: Fri, 16 Feb 2007 17:53:24 GMT\n< ETag: \"452dd8-4b-a6ec0d00\"\n< Accept-Ranges: bytes\n< Content-Length: 75\n< Content-Type: text/plain\nThe object you requested was NOT FOUND (404)\non this, the backend, server.\n* Connection #0 to host localhost left intact\n* Closing connection #0\n\nOK, great. And now make a HEAD request for the same URL:\n\n$ curl --head --verbose http://localhost:2200/rproxy/notfound\n* About to connect() to localhost port 2200\n*   Trying 127.0.0.1... connected\n* Connected to localhost (127.0.0.1) port 2200\n> HEAD /rproxy/notfound HTTP/1.1\n> User-Agent: curl/7.15.5 (i686-redhat-linux-gnu) libcurl/7.15.5 OpenSSL/0.9.8b\nzlib/1.2.3 libidn/0.6.5\n> Host: localhost:2200\n> Accept: */*\n> \n< HTTP/1.1 404 Not Found\nHTTP/1.1 404 Not Found\n< Date: Fri, 16 Feb 2007 17:54:20 GMT\nDate: Fri, 16 Feb 2007 17:54:20 GMT\n< Server: Apache/2.2.4 (Unix)\nServer: Apache/2.2.4 (Unix)\n< Last-Modified: Fri, 16 Feb 2007 17:53:24 GMT\nLast-Modified: Fri, 16 Feb 2007 17:53:24 GMT\n< ETag: \"452dd8-4b-a6ec0d00\"\nETag: \"452dd8-4b-a6ec0d00\"\n< Accept-Ranges: bytes\nAccept-Ranges: bytes\n< Content-Length: 75\nContent-Length: 75\n< Content-Type: text/plain\nContent-Type: text/plain\n\n* Connection #0 to host localhost left intact\n* Closing connection #0\n\nNote that the Last-Modified, ETag, Content-Length, etc headers are identical in\nboth cases. Now, add the following configuration to the frontend server:\n\n    ProxyErrorOverride On\n    ErrorDocument 404 /error.txt\n\nand repeat the GET request:\n\n$ curl --get --verbose http://localhost:2200/rproxy/notfound\n* About to connect() to localhost port 2200\n*   Trying 127.0.0.1... connected\n* Connected to localhost (127.0.0.1) port 2200\n> GET /rproxy/notfound HTTP/1.1\n> User-Agent: curl/7.15.5 (i686-redhat-linux-gnu) libcurl/7.15.5 OpenSSL/0.9.8b\nzlib/1.2.3 libidn/0.6.5\n> Host: localhost:2200\n> Accept: */*\n> \n< HTTP/1.1 404 Not Found\n< Date: Fri, 16 Feb 2007 17:56:16 GMT\n< Server: Apache/2.2.5-dev (Unix)\n< Last-Modified: Fri, 16 Feb 2007 16:49:02 GMT\n< ETag: \"33399a-21-c0ba9b80\"\n< Accept-Ranges: bytes\n< Content-Length: 33\n< Content-Type: text/plain\nI am an error from the frontend.\n* Connection #0 to host localhost left intact\n* Closing connection #0\n\nAs expected, we get the contents of the ErrorDocument specified on the frontend\nserver, which has a different ETag, Content-Length, etc. Now repeat the HEAD:\n\n$ curl --head --verbose http://localhost:2200/rproxy/notfound\n* About to connect() to localhost port 2200\n*   Trying 127.0.0.1... connected\n* Connected to localhost (127.0.0.1) port 2200\n> HEAD /rproxy/notfound HTTP/1.1\n> User-Agent: curl/7.15.5 (i686-redhat-linux-gnu) libcurl/7.15.5 OpenSSL/0.9.8b\nzlib/1.2.3 libidn/0.6.5\n> Host: localhost:2200\n> Accept: */*\n> \n< HTTP/1.1 404 Not Found\nHTTP/1.1 404 Not Found\n< Date: Fri, 16 Feb 2007 17:57:09 GMT\nDate: Fri, 16 Feb 2007 17:57:09 GMT\n< Server: Apache/2.2.4 (Unix)\nServer: Apache/2.2.4 (Unix)\n< Last-Modified: Fri, 16 Feb 2007 17:53:24 GMT\nLast-Modified: Fri, 16 Feb 2007 17:53:24 GMT\n< ETag: \"452dd8-4b-a6ec0d00\"\nETag: \"452dd8-4b-a6ec0d00\"\n< Accept-Ranges: bytes\nAccept-Ranges: bytes\n< Content-Length: 75\nContent-Length: 75\n< Content-Type: text/plain\nContent-Type: text/plain\n\n* Connection #0 to host localhost left intact\n* Closing connection #0\n\nWhoops - we've still got the original headers (ie: those from the backend server).\n\nThis was a bit of a pain to trackdown, and it's late on a Friday so I'm going to\nskip all my \"working\". I think the problem is this:\n\nIn ap_proxy_http_process_response() within mod_proxy_http.c, it says:\n\n    /* send body - but only if a body is expected */\n    if ((!r->header_only) &&                   /* not HEAD request */\n        !interim_response &&                   /* not any 1xx response */\n        (r->status != HTTP_NO_CONTENT) &&      /* not 204 */\n        (r->status != HTTP_NOT_MODIFIED)) {    /* not 304 */\n...\n    else if (!interim_response) {\n        ap_log_error(APLOG_MARK, APLOG_DEBUG, 0, r->server,\n                     \"proxy: header only\");\n\n        /* Pass EOS bucket down the filter chain. */\n        e = apr_bucket_eos_create(c->bucket_alloc);\n        APR_BRIGADE_INSERT_TAIL(bb, e);\n        if (ap_pass_brigade(r->output_filters, bb) != APR_SUCCESS\n            || c->aborted) {\n            /* Ack! Phbtt! Die! User aborted! */\n            backend->close = 1;  /* this causes socket close below */\n        }\n        apr_brigade_cleanup(bb);\n    }\n\nSo basically if this expression is true:\n\n    r->header_only ||\n      (r->status == HTTP_NO_CONTENT) ||\n      (r->status != HTTP_NOT_MODIFIED)\n\nthen an EOS bucket is pushed onto the chain. This means that the current headers\nget forced out first, and when ap_internal_redirect() is invoked later (to load\nthe error document) the new headers there are ignored.\n\nThe code that adds the EOS bucket does not exist in 2.0.x. Looking at\nhttp://svn.apache.org/viewvc/httpd/httpd/branches/2.2.x/modules/proxy/mod_proxy_http.c?view=log\nwe can see it initially got added in revision 159533, and the exclusion of\ninterim_responses in revision 159671. I'm not 100% clear on the exact situation\nyou do/do not need to add an EOS at this point, so I'm not going to attempt a\npatch right now.", "id": 99497, "time": "2007-02-16T10:25:18Z", "creator": "stuart@terminus.co.uk", "creation_time": "2007-02-16T10:25:18Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "text": "*** Bug 22951 has been marked as a duplicate of this bug. ***", "is_private": false, "id": 107869, "creator": "nick@webthing.com", "time": "2007-09-08T11:33:46Z", "bug_id": 41646, "creation_time": "2007-09-08T11:33:46Z", "attachment_id": null}]