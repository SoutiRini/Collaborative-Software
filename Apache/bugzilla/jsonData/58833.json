[{"count": 0, "tags": [], "creator": "richard.thrippleton@softwareag.com", "attachment_id": null, "text": "We recently upgraded from 1.7.1 to 1.9.3. In our build script we have:\n\n<exec executable=\"/bin/sh\" outputproperty=\"host.name\">                                                                                                                                                                                                       \n    <arg value=\"-c\" />                                                                                                                                                                                                                                        \n    <arg value=\"uname -n\"/>\n</exec>\n\nIt's still working, most of the time, but occasionally the property will end up blank. It does seem to be truly random; running the script hundreds of times in a row results in a few of the runs behaving like this.\n\nMore anecdotally we're seeing problems where stdout from other exec invocations is being truncated, even when output and outputproperty isn't being set i.e. it's supposed to go to the log, prefixed with [exec].\n\nWe've had a lot of experience with Ant 1.7.1 and have never seen this problem, so we're 99% confident that it's a regression between 1.7.1 and 1.9.3.", "id": 187551, "time": "2016-01-11T17:15:49Z", "bug_id": 58833, "creation_time": "2016-01-11T17:15:49Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 58833, "attachment_id": null, "id": 191343, "time": "2016-06-01T14:04:30Z", "creator": "ddfourni@comcast.net", "creation_time": "2016-06-01T14:04:30Z", "is_private": false, "text": "I believe this is the same issue as reported in Bug 58451.\nThe issue is that the PumpStreamHandler.java has a 200 MS value for JOIN_TIMEOUT and that is not enough time to flush the I/O when a system is busy. My proposed change would be to increase the JOIN_TIMEOUT from 200 to 5000 (maybe even larger) or make this a configurable property. Note that in the ant 1.9.7 PumpStreamHandler the code will do:\n\n            t.join(JOIN_TIMEOUT);\n            while ((s == null || !s.isFinished()) && t.isAlive()) {\n                t.join(JOIN_TIMEOUT);\n               \tt.interrupt();\n\nIt is the t.interrupt() that causes the StreamPumper to \"break\" when it checks Thread.interrupted() even when the inputStream (is.available()) is still returning >0 characters.\n\nIf I run with the following build.xml (on linux), the output is always truncated (each file should be the same - they are never the same):\n<project name=\"LS\" default=\"ls\" basedir=\".\">\n        <description>\n        LS ant build file\n        </description>\n\n        <target name=\"ls\">\n                <parallel>\n                <exec executable=\"ls\" dir=\"${basedir}\" failonerror=\"true\" logerror=\"true\">\n                        <redirector output=\"./ls.txt\" error=\"ls.err\" alwayslog=\"true\"/>\n                        <arg value=\"-l\"/>\n                        <arg value=\"/usr/bin\"/>\n                </exec>\n                <exec executable=\"ls\" dir=\"${basedir}\" failonerror=\"true\" logerror=\"true\">\n                        <redirector output=\"./ls2.txt\" error=\"ls2.err\" alwayslog=\"true\"/>\n                        <arg value=\"-l\"/>\n                        <arg value=\"/usr/bin\"/>\n                </exec>\n                <exec executable=\"ls\" dir=\"${basedir}\" failonerror=\"true\" logerror=\"true\">\n                        <redirector output=\"./ls3.txt\" error=\"ls3.err\" alwayslog=\"true\"/>\n                        <arg value=\"-l\"/>\n                        <arg value=\"/usr/bin\"/>\n                </exec>\n                <exec executable=\"ls\" dir=\"${basedir}\" failonerror=\"true\" logerror=\"true\">\n                        <redirector output=\"./ls4.txt\" error=\"ls4.err\" alwayslog=\"true\"/>\n                        <arg value=\"-l\"/>\n                        <arg value=\"/usr/bin\"/>\n                </exec>\n                <exec executable=\"ls\" dir=\"${basedir}\" failonerror=\"true\" logerror=\"true\">\n                        <redirector output=\"./ls5.txt\" error=\"ls5.err\" alwayslog=\"true\"/>\n                        <arg value=\"-l\"/>\n                        <arg value=\"/usr/bin\"/>\n                </exec>\n                <exec executable=\"ls\" dir=\"${basedir}\" failonerror=\"true\" logerror=\"true\">\n                        <redirector output=\"./ls6.txt\" error=\"ls6.err\" alwayslog=\"true\"/>\n                        <arg value=\"-l\"/>\n                        <arg value=\"/usr/bin\"/>\n                </exec>\n                <exec executable=\"ls\" dir=\"${basedir}\" failonerror=\"true\" logerror=\"true\">\n                        <redirector output=\"./ls7.txt\" error=\"ls7.err\" alwayslog=\"true\"/>\n                        <arg value=\"-l\"/>\n                        <arg value=\"/usr/bin\"/>\n                </exec>\n                <exec executable=\"ls\" dir=\"${basedir}\" failonerror=\"true\" logerror=\"true\">\n                        <redirector output=\"./ls8.txt\" error=\"ls8.err\" alwayslog=\"true\"/>\n                        <arg value=\"-l\"/>\n                        <arg value=\"/usr/bin\"/>\n                </exec>\n                <exec executable=\"ls\" dir=\"${basedir}\" failonerror=\"true\" logerror=\"true\">\n                        <redirector output=\"./ls9.txt\" error=\"ls9.err\" alwayslog=\"true\"/>\n                        <arg value=\"-l\"/>\n                        <arg value=\"/usr/bin\"/>\n                </exec>\n                <exec executable=\"ls\" dir=\"${basedir}\" failonerror=\"true\" logerror=\"true\">\n                        <redirector output=\"./ls10.txt\" error=\"ls10.err\" alwayslog=\"true\"/>\n                        <arg value=\"-l\"/>\n                        <arg value=\"/usr/bin\"/>\n                </exec>\n                <exec executable=\"ls\" dir=\"${basedir}\" failonerror=\"true\" logerror=\"true\">\n                        <redirector output=\"./ls12.txt\" error=\"ls12.err\" alwayslog=\"true\"/>\n                        <arg value=\"-l\"/>\n                        <arg value=\"/usr/bin\"/>\n                </exec>\n                <exec executable=\"ls\" dir=\"${basedir}\" failonerror=\"true\" logerror=\"true\">\n                        <redirector output=\"./ls13.txt\" error=\"ls13.err\" alwayslog=\"true\"/>\n                        <arg value=\"-l\"/>\n                        <arg value=\"/usr/bin\"/>\n                </exec>\n                <exec executable=\"ls\" dir=\"${basedir}\" failonerror=\"true\" logerror=\"true\">\n                        <redirector output=\"./ls14.txt\" error=\"ls14.err\" alwayslog=\"true\"/>\n                        <arg value=\"-l\"/>\n                        <arg value=\"/usr/bin\"/>\n                </exec>\n                <exec executable=\"ls\" dir=\"${basedir}\" failonerror=\"true\" logerror=\"true\">\n                        <redirector output=\"./ls15.txt\" error=\"ls15.err\" alwayslog=\"true\"/>\n                        <arg value=\"-l\"/>\n                        <arg value=\"/usr/bin\"/>\n                </exec>\n                <exec executable=\"ls\" dir=\"${basedir}\" failonerror=\"true\" logerror=\"true\">\n                        <redirector output=\"./ls16.txt\" error=\"ls16.err\" alwayslog=\"true\"/>\n                        <arg value=\"-l\"/>\n                        <arg value=\"/usr/bin\"/>\n                </exec>\n                </parallel>\n        </target>\n</project>"}, {"count": 2, "tags": [], "creator": "ddfourni@comcast.net", "text": "Created attachment 33924\nAdding a proposed patch based off http://svn.apache.org/repos/asf/ant/core/trunk/src@1747246\n\nThe proposed diff changes the default timeout and adds an optional system property APACHE_ANT_TASK_JOIN_TIMEOUT to override the default.", "id": 191456, "time": "2016-06-07T17:58:12Z", "bug_id": 58833, "creation_time": "2016-06-07T17:58:12Z", "is_private": false, "attachment_id": 33924}, {"count": 3, "tags": [], "bug_id": 58833, "attachment_id": 33930, "id": 191488, "time": "2016-06-09T13:44:55Z", "creator": "ddfourni@comcast.net", "creation_time": "2016-06-09T13:44:55Z", "is_private": false, "text": "Created attachment 33930\npatch for the text truncation\n\nThe previous patch assumed interrupt would only be called on the StreamPumper by the PumpStreamHandler.finish() method; this is incorrect. The normal completion of spinThreads() will call killAll(running) which will call Thread.interrupt() on the StreamPumpers if they have not completed. The patch will ignore  Thread.interrupted() when the inputStream still has unwritten data and stop() has been called on the StreamPumper. The read from the inputStream should not block since the is.read() will only read the number of bytes returned by is.available()."}, {"count": 4, "tags": [], "bug_id": 58833, "attachment_id": null, "id": 192214, "time": "2016-07-07T12:59:39Z", "creator": "ben.spiller@softwareag.com", "creation_time": "2016-07-07T12:59:39Z", "is_private": false, "text": "+1 for getting this fix included - this is a really serious robustness issue and is hurting us a lot"}, {"count": 5, "tags": [], "bug_id": 58833, "attachment_id": null, "id": 203058, "time": "2018-01-04T05:57:30Z", "creator": "jaikiran@apache.org", "creation_time": "2018-01-04T05:57:30Z", "is_private": false, "text": "Dan, thank you for the test case. A fix (backed by this test case) for this has been committed upstream and should be available in 1.9.10 and 1.10.2 releases."}, {"count": 6, "tags": [], "bug_id": 58833, "attachment_id": null, "id": 203102, "time": "2018-01-05T06:47:59Z", "creator": "jaikiran@apache.org", "creation_time": "2018-01-05T06:47:59Z", "is_private": false, "text": "*** Bug 53449 has been marked as a duplicate of this bug. ***"}]