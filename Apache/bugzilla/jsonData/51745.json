[{"attachment_id": null, "tags": [], "bug_id": 51745, "text": "URLConnection implementation  org.apache.harmony.luni.internal.net.www.protocol.file.FileURLConnection\nreturns 0 for getLastModified and it breaks normal working of the wrapper method in compilation context. It seems happens on Android platfrom 2.1 and can happen for other. So I modified the method to avoid the problem like below:\n\ntry {\n\t\t\tURL jspUrl = getResource(resource);\n\t\t\tif (jspUrl == null) {\n\t\t\t\tincrementRemoved();\n\t\t\t\treturn Long.valueOf(result);\n\t\t\t}\n\t\t\tFile resFile = new File(jspUrl.getFile()); // TJWS on Android\n\t\t\tif (resFile.exists()) {\n\t\t\t\tresult = resFile.lastModified();\n\t\t\t} else {\n\t\t\t\tuc = jspUrl.openConnection();\n\t\t\t\tif (uc instanceof JarURLConnection) {\n\t\t\t\t\tresult = ((JarURLConnection) uc).getJarEntry().getTime();\n\t\t\t\t} else {\n\t\t\t\t\tresult = uc.getLastModified();\n\t\t\t\t}\n\t\t\t}", "count": 0, "id": 148922, "time": "2011-08-31T01:02:53Z", "creator": "metricstream@gmail.com", "creation_time": "2011-08-31T01:02:53Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 51745, "attachment_id": 27447, "is_private": false, "id": 148931, "time": "2011-08-31T15:28:08Z", "creator": "markt@apache.org", "creation_time": "2011-08-31T15:28:08Z", "text": "Created attachment 27447\nPossible patch\n\nI'm not a fan of adding workarounds in Tomcat for bugs in any third-party product (JVM, OS, database etc).\n\nThe root cause is a harmony bug:\nhttps://issues.apache.org/jira/browse/HARMONY-6504\nwhich has been fixed for a while. However, as far as I can tell, this has not been ported to Android.\n\nIf it were to be patched, the patch would probably be along the lines of the attachment. It would be helpful if you could confirm that the proposed fix addresses the issue you are seeing.\n\nI'm struggling to see how this behaviour could ever be something other than a bug in the JRE."}, {"count": 2, "tags": [], "creator": "metricstream@gmail.com", "is_private": false, "text": "I agree that the proposed solution is a workaround of the bug in connection implementation. However it works for both mobile and desktop platforms (validated) and can be consider lighter solution, since doesn't require ping and close connection in most use cases.\nAnother solution can be wrapping buggy connection in something taking care of the bug. Although it can look elegant, it can bring extra overhead and make code less readable.\nAnyway I do not insist on fixing problem since I need to modify the class anyway, since I use different Java compiler", "id": 148936, "time": "2011-08-31T18:16:32Z", "bug_id": 51745, "creation_time": "2011-08-31T18:16:32Z", "attachment_id": null}, {"count": 3, "text": "I have checked with Android team, and it looks like Harmony bug was fixed for Android 2.3 (Gingerbread), however still exists for earlier Androids. Perhaps this problem can be closed.", "creator": "metricstream@gmail.com", "is_private": false, "id": 148939, "time": "2011-09-01T01:15:24Z", "bug_id": 51745, "creation_time": "2011-09-01T01:15:24Z", "tags": [], "attachment_id": null}, {"count": 4, "tags": [], "creator": "markt@apache.org", "is_private": false, "text": "If the issue is fixed in Gingerbread then I don't think there is a case for work-around this in Tomcat. The patches will, of course, remain available in Bugzilla should anyone wish to use them locally.", "id": 148945, "time": "2011-09-01T10:58:51Z", "bug_id": 51745, "creation_time": "2011-09-01T10:58:51Z", "attachment_id": null}]