[{"count": 0, "tags": [], "bug_id": 60329, "text": "On TIKA-2152, Seva Alekseyev submitted a docx file that triggers an NPE when trying to get the styleid.  If I read OOXML Ecma 1 [1] correctly, styleid is optional.  We should try to avoid an NPE if the styleid is null.\n\n[1] http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-376,%20Fourth%20Edition,%20Part%201%20-%20Fundamentals%20And%20Markup%20Language%20Reference.zip : pdf page 3861/printed page 3851", "id": 194761, "time": "2016-11-01T18:55:51Z", "creator": "tallison@mitre.org", "creation_time": "2016-11-01T18:55:51Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "creator": "tallison@mitre.org", "attachment_id": null, "text": "From Mark Murphy on our dev list:\n\nSeems to me that style ID is not optional because it is used to refer to the style from elsewhere in the document, and the style ID must also be unique. However, if the style ID is missing from the document, one should be assigned in any manner we choose, and it won't be able to be referenced.\nThat is ok as the document is mal-formed.", "id": 194771, "time": "2016-11-02T11:07:15Z", "bug_id": 60329, "creation_time": "2016-11-02T11:07:15Z", "is_private": false}, {"count": 2, "tags": [], "creator": "tallison@mitre.org", "text": "Sounds good.  Do we want to auto-generate a styleid and risk collision with an actual styleid (chances would be very, very low) or handle the null or simply not load a style that doesn't contain an id?", "id": 194772, "attachment_id": null, "bug_id": 60329, "creation_time": "2016-11-02T11:07:52Z", "time": "2016-11-02T11:07:52Z", "is_private": false}, {"count": 3, "tags": [], "creator": "jmarkmurphy@apache.org", "attachment_id": null, "text": "Can you attach the document in question? I want to see what Word does, though that might be a different situation as Word could assign an ID and allow a user to interactively assign the style to an element in the document. \n\nThe applicable use cases in POI would be to read a document, update it, and save it. Do we have (or want) a facility in POI to reference a style by some means other than its ID. If so, we should go ahead and generate a new ID. I suggest something like a negative 10 digit number. The spec also indicates that if a document has two styles with the same ID, the first one is to be used. For our case I think we should check for duplicate style ID's on load, and mangle duplicates by appending a sequential integer (in parenthesis) to duplicates unless the duplicate was caused by an auto-generated id. In that case the auto-generated id should be re-generated.", "id": 194773, "time": "2016-11-02T11:37:00Z", "bug_id": 60329, "creation_time": "2016-11-02T11:37:00Z", "is_private": false}, {"count": 4, "tags": [], "creator": "tallison@mitre.org", "text": "Created attachment 34414\nFile provided by Seva Alekseyev on TIKA-2152", "id": 194774, "attachment_id": 34414, "bug_id": 60329, "creation_time": "2016-11-02T12:58:30Z", "time": "2016-11-02T12:58:30Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 60329, "attachment_id": null, "id": 194775, "time": "2016-11-02T13:01:12Z", "creator": "tallison@mitre.org", "creation_time": "2016-11-02T13:01:12Z", "is_private": false, "text": ">Seems to me that style ID is not optional because it is used to refer to the style from elsewhere in the document\n\nI agree with this point.  However, from a spec standpoint it appears to be \"optional\" or am I misreading?\n\nAlso, thank you for your consideration of the full lifecycle -- open, modify, save.  I have to admit that I suffer from tunnel vision on open+extract. :)"}, {"count": 6, "tags": [], "bug_id": 60329, "attachment_id": null, "id": 194830, "time": "2016-11-05T05:17:03Z", "creator": "jmarkmurphy@apache.org", "creation_time": "2016-11-05T05:17:03Z", "is_private": false, "text": "(In reply to Tim Allison from comment #5)\n> >Seems to me that style ID is not optional because it is used to refer to the style from elsewhere in the document\n> \n> I agree with this point.  However, from a spec standpoint it appears to be\n> \"optional\" or am I misreading?\n> \n> Also, thank you for your consideration of the full lifecycle -- open,\n> modify, save.  I have to admit that I suffer from tunnel vision on\n> open+extract. :)\n\nSorry, thought I replied to this. Yes the spec does say optional, and after my initial reading I couldn't think of how a style could be used without an ID, but after more thought, a style without an ID could be used indirectly if it were a default style for a run, paragraph, or table. So, to avoid other than explicit changes to documents, I believe we should just suppress any NPE, or better yet, correct the situation that is causing the NPE. I have found several places in other parts of the code where it is assumed that an XML object exists, and just goes and gets it. Maybe that is the issue here?"}, {"count": 7, "tags": [], "bug_id": 60329, "text": "Tim, do we have more information about this, like a stack trace, or some code which triggers the NPE? I can't recreate it. In fact when looking at the file in the attachment, all the styles have a styleId. I can modify it so that one does not. But that would defeat the purpose of attaching a file that exhibits this behavior.", "id": 195283, "time": "2016-11-29T04:19:35Z", "creator": "jmarkmurphy@apache.org", "creation_time": "2016-11-29T04:19:35Z", "is_private": false, "attachment_id": null}, {"count": 8, "tags": [], "creator": "tallison@mitre.org", "text": "Doh, y, this fell off my plate too.  Sorry.\n\nIn styles.xml, I see this (a style with no id):\n<w:style><w:name w:val=\"EmptyCellLayoutStyle\"/><w:basedOn w:val=\"Normal\"/><w:rPr><w:sz w:val=\"2\"/></w:rPr></w:style>\n\n\nFull stack trace in Tika:\n\norg.apache.tika.exception.TikaException: Unexpected RuntimeException from org.apache.tika.parser.microsoft.ooxml.OOXMLParser@131ef10\n\n\tat org.apache.tika.parser.CompositeParser.parse(CompositeParser.java:282)\n\tat org.apache.tika.parser.CompositeParser.parse(CompositeParser.java:280)\n\tat org.apache.tika.parser.AutoDetectParser.parse(AutoDetectParser.java:120)\n\tat org.apache.tika.parser.RecursiveParserWrapper.parse(RecursiveParserWrapper.java:158)\n\tat org.apache.tika.TikaTest.getRecursiveMetadata(TikaTest.java:215)\n\tat org.apache.tika.TikaTest.getRecursiveMetadata(TikaTest.java:207)\n\tat org.apache.tika.parser.microsoft.ooxml.OOXMLParserTest.testOneOff2(OOXMLParserTest.java:1311)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)\n\tat com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:51)\n\tat com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:237)\n\tat com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)\nCaused by: java.lang.NullPointerException\n\tat org.apache.poi.xwpf.usermodel.XWPFStyles.getStyle(XWPFStyles.java:198)\n\tat org.apache.tika.parser.microsoft.ooxml.XWPFWordExtractorDecorator.extractParagraph(XWPFWordExtractorDecorator.java:150)\n\tat org.apache.tika.parser.microsoft.ooxml.XWPFWordExtractorDecorator.extractIBodyText(XWPFWordExtractorDecorator.java:107)\n\tat org.apache.tika.parser.microsoft.ooxml.XWPFWordExtractorDecorator.extractTable(XWPFWordExtractorDecorator.java:381)\n\tat org.apache.tika.parser.microsoft.ooxml.XWPFWordExtractorDecorator.extractHeaderText(XWPFWordExtractorDecorator.java:433)\n\tat org.apache.tika.parser.microsoft.ooxml.XWPFWordExtractorDecorator.extractHeaders(XWPFWordExtractorDecorator.java:423)\n\tat org.apache.tika.parser.microsoft.ooxml.XWPFWordExtractorDecorator.buildXHTML(XWPFWordExtractorDecorator.java:89)\n\tat org.apache.tika.parser.microsoft.ooxml.AbstractOOXMLExtractor.getXHTML(AbstractOOXMLExtractor.java:104)\n\tat org.apache.tika.parser.microsoft.ooxml.OOXMLExtractorFactory.parse(OOXMLExtractorFactory.java:122)\n\tat org.apache.tika.parser.microsoft.ooxml.OOXMLParser.parse(OOXMLParser.java:87)\n\tat org.apache.tika.parser.CompositeParser.parse(CompositeParser.java:280)", "id": 195287, "attachment_id": null, "bug_id": 60329, "creation_time": "2016-11-29T13:19:31Z", "time": "2016-11-29T13:19:31Z", "is_private": false}, {"count": 9, "text": "fixed by r1772138", "creator": "jmarkmurphy@apache.org", "attachment_id": null, "id": 195308, "time": "2016-12-01T02:23:26Z", "bug_id": 60329, "creation_time": "2016-12-01T02:23:26Z", "tags": [], "is_private": false}, {"count": 10, "tags": [], "creator": "jmarkmurphy@apache.org", "text": "Created attachment 34493\nmylyn/context/zip", "id": 195309, "attachment_id": 34493, "bug_id": 60329, "creation_time": "2016-12-01T02:23:28Z", "time": "2016-12-01T02:23:28Z", "is_private": false}]