[{"count": 0, "tags": [], "bug_id": 21704, "attachment_id": null, "id": 40925, "time": "2003-07-18T08:50:15Z", "creator": "alag@users.sf.net", "creation_time": "2003-07-18T08:50:15Z", "is_private": false, "text": "When using an Xerces DOM such as :\n\n<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<svg xmlns:xlink=\"http://www.w3.org/1999/xlink\"\nxmlns=\"http://www.w3.org/2000/svg\" height=\"90px\" width=\"730px\" xml:space=\"preserve\">\n\n...\n<image height=\"57px&#xa;\" width=\"172px&#xa;\" x=\"180\"\nxlink:href=\"http://myurl.com/logo/logo.png\" y=\"27\"/>\n...\n</svg>\n\n\nAnd using Transcoder with the DOM:\nDocument mydocument = ...;\nTranscoderInput transcoderInput = new TranscoderInput ( myDocument );\n\nI get the folowing error:\n[java] Enclosed Exception:\n     [java] null:-1\n     [java] The attribute 'xlink:href' of the element <image> is required   \n\nAfter a source lookup, it seems that the SVGDom don't consider the namespace\nprefix 'xlink' when it convert the XercesDOM.\n\nBTW I've setup a workaround: I serialize the document in a file on disk, and\nthen use the Transcoder with an InputStream pointing on the saved file."}, {"count": 1, "tags": [], "bug_id": 21704, "attachment_id": null, "text": "Can you please attach a standalone example of this problem.\nFirst glance at the code looks right.", "id": 44772, "time": "2003-09-27T17:39:32Z", "creator": "deweese@apache.org", "creation_time": "2003-09-27T17:39:32Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 21704, "text": "Created attachment 8468\nSimple SVG file to illustrate the problem with batik when using domsource", "id": 45158, "attachment_id": 8468, "creator": "alag@users.sf.net", "creation_time": "2003-10-06T16:56:26Z", "time": "2003-10-06T16:56:26Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 21704, "text": "// this example should illustrate the problem with xlink (you should use the \nprovided/attached svg file \n \npublic static void main( String[] arg ){ \n        try{ \n            File fsource = new File( \"apachetest.svg\" ); \n            File fdest   = new File( \"out.gif\" ); \n \n            // build doc \n            javax.xml.parsers.DocumentBuilderFactory dbf = \njavax.xml.parsers.DocumentBuilderFactory.newInstance(); \n            dbf.setValidating (false); \n            dbf.setNamespaceAware(true); \n            javax.xml.parsers.DocumentBuilder db = dbf.newDocumentBuilder(); \n \n            Document doc = db.parse( new FileInputStream( fsource ) ); \n            TranscoderInput transcoderInput = new TranscoderInput( doc ); \n \n            FileOutputStream fos = new FileOutputStream( fdest ); \n            TranscoderOutput transcoderOutput = new TranscoderOutput( fos ); \n \n            Transcoder transcoder = new GIFTranscoder(); \n            transcoder.addTranscodingHint( \nGIFTranscoder.KEY_COLOR_REDUCTION, new Integer( 16 ) ); \n \n            transcoder.transcode ( transcoderInput, transcoderOutput ); \n \n            fos.flush(); \n            fos.close(); \n            System.out.println(\"Finished\"); \n \n        } catch( Exception e ){ \n            e.printStackTrace(); \n        } \n \n \n    } \n ", "id": 45160, "attachment_id": null, "creator": "alag@users.sf.net", "creation_time": "2003-10-06T17:03:32Z", "time": "2003-10-06T17:03:32Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 21704, "attachment_id": null, "id": 45162, "time": "2003-10-06T17:14:24Z", "creator": "deweese@apache.org", "creation_time": "2003-10-06T17:14:24Z", "is_private": false, "text": "Your example svg doesn't define the xlink namespace prefix.\nWhen we parse we provide this declaration (because we expect svg), \nif you use a generic parser it can't (well it might if you provided \nat least a DTD), it is good practice to always define the svg namespace\nand the xlink namespace prefix.\n\nLet me know if this fixes the problem by closing the bug report.\n"}, {"count": 5, "tags": [], "creator": "alag@users.sf.net", "text": "Sorry (maybe there is a confusion somewhere) but the example (attach) provided define xlink \nnamespace => \n<svg xmlns:xlink=\"http://www.w3.org/1999/xlink\" ...> ", "id": 45171, "time": "2003-10-06T18:12:22Z", "bug_id": 21704, "creation_time": "2003-10-06T18:12:22Z", "is_private": false, "attachment_id": null}, {"count": 6, "tags": [], "bug_id": 21704, "attachment_id": null, "text": "Hmm, sorry about that, Mozzilla's XML viewer hides the xmlns attributes.\n\nHowever running you example works for me.  Well I had to\nchange the reference to a local file, but the xlink thing\nworked, with JDK 1.3.1, and JDK 1.4.1.\n", "id": 45187, "time": "2003-10-07T00:52:48Z", "creator": "deweese@apache.org", "creation_time": "2003-10-07T00:52:48Z", "is_private": false}, {"count": 7, "tags": [], "creator": "alag@users.sf.net", "text": "I confirm this is not a batik bug but an XSLT bug.  \nXSTL did not preserve namespace aware document. Testcase has been submited to related \nXSLT dev team. ", "id": 46222, "time": "2003-10-24T08:55:35Z", "bug_id": 21704, "creation_time": "2003-10-24T08:55:35Z", "is_private": false, "attachment_id": null}]