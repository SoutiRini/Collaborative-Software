[{"id": 50804, "tags": [], "bug_id": 26275, "attachment_id": null, "count": 0, "text": "I create a WAR file using an Ant task like this:\n\n    <war destfile=\"my.war\" webxml=\"resources/web.xml\" encoding=\"ISO-8859-1\">\n\nSome of the file names include german Umlauts. When I drop the WAR file into\nthe TomCat webapps directory, it fails to extract the contents. Running\nTomCat with debug level 3 in StandardHost yields the following message.\n(Note the german Umlaut in the file name.)\n\nI have also tried to use UTF-8 encoding for the file names. However, in that\ncase the created file names are wrong and match the UTF-8 encoded file name\n(two bytes for the Umlaut) and not the latin-1 encoded.\n\n\n  Creating expanded file WEB-INF/bausteine/gericht/Arztanfragen/Anfrage EU_BU mi\nt Akten\u00b3bersendung.xml\nHostConfig[localhost] Exception while expanding web application archive test4.wa\nr\njava.lang.NullPointerException\n        at org.apache.catalina.startup.ExpandWar.expand(ExpandWar.java:275)\n        at org.apache.catalina.startup.ExpandWar.expand(ExpandWar.java:226)\n        at org.apache.catalina.startup.ExpandWar.expand(ExpandWar.java:140)\n        at org.apache.catalina.startup.HostConfig.deployWARs(HostConfig.java:490\n)\n        at org.apache.catalina.startup.HostConfig.deployApps(HostConfig.java:400\n)\n        at org.apache.catalina.startup.HostConfig.start(HostConfig.java:718)\n        at org.apache.catalina.startup.HostConfig.lifecycleEvent(HostConfig.java\n:358)\n        at org.apache.catalina.util.LifecycleSupport.fireLifecycleEvent(Lifecycl\neSupport.java:166)\n        at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1196)\n\n        at org.apache.catalina.core.StandardHost.start(StandardHost.java:754)\n        at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1188)\n\n        at org.apache.catalina.core.StandardEngine.start(StandardEngine.java:363\n)\n        at org.apache.catalina.core.StandardService.start(StandardService.java:4\n97)\n        at org.apache.catalina.core.StandardServer.start(StandardServer.java:219\n0)\n        at org.apache.catalina.startup.Catalina.start(Catalina.java:512)\n        at org.apache.catalina.startup.Catalina.execute(Catalina.java:400)\n        at org.apache.catalina.startup.Catalina.process(Catalina.java:180)\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.\njava:39)\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAcces\nsorImpl.java:25)\n        at java.lang.reflect.Method.invoke(Method.java:324)\n        at org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:203)", "time": "2004-01-20T11:43:41Z", "creator": "jochen@apache.org", "creation_time": "2004-01-20T11:43:41Z", "is_private": false}, {"id": 52764, "tags": [], "bug_id": 26275, "is_private": false, "count": 1, "text": "* Create a new, empty directory.\n* Store the attached build script as build.xml into the directory.\n* Create a subdirectory src.\n* Copy the catalina sources from tomcat.home/src/catalina/src/share\n  into the src directory. For example, we will have a file\n  src/org/apache/catalina/startup/ExpandWar.java.\n* Create a subdirectory lib.\n* Copy the following files into the lib directory:\n    activation.jar\"\n    ant.jar\n    commons-beanutils.jar\n    commons-collections.jar\n    commons-daemon.jar\n    commons-digester.jar\n    commons-fileupload-1.0.jar\n    commons-logging.jar\n    commons-modeler.jar\n    jta.jar\n    mail.jar\n    mx4j-jmx.jar\n    servlet.jar\n    tomcat-util.jar\n    tyrex-1.0.1.jar\n* Add a main method to the ExpandWar class:\n\n    public static void main(String[] args) throws IOException {\n        Host host = new StandardHost();\n        host.setAppBase(new File(args[0]).getAbsolutePath());\n        host.setAutoDeploy(true);\n        host.setLogger(new SystemErrLogger());\n        ((ContainerBase) host).setDebug(9);\n        String path = new File(args[1]).getAbsoluteFile().toURL().toString();\n        expand(host, new URL(\"jar:\" + path + \"!/\"));\n    }\n\n* Run \"ant test\"\n", "time": "2004-02-22T13:39:18Z", "creator": "jochen@apache.org", "creation_time": "2004-02-22T13:39:18Z", "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 26275, "is_private": false, "text": "Created attachment 10482\nAnt build script for reproducing the problem", "id": 52765, "time": "2004-02-22T13:40:03Z", "creator": "jochen@apache.org", "creation_time": "2004-02-22T13:40:03Z", "attachment_id": 10482}, {"count": 3, "tags": [], "bug_id": 26275, "is_private": false, "text": "The problem is obviously caused by\n\n    http://developer.java.sun.com/developer/bugParade/bugs/4244499.html\n\nA possible solution would be to replace the java.util.zip package with\nthe org.apache.tools.zip package that comes with Ant. The desired\nencoding might be specified in the Tomcat specific context description.\n ", "id": 53946, "time": "2004-03-13T01:38:57Z", "creator": "jochen@apache.org", "creation_time": "2004-03-13T01:38:57Z", "attachment_id": null}, {"count": 4, "tags": [], "creator": "jochen@apache.org", "text": "Created attachment 10779\npatch file replacing the standard jar file handling with Ant's ZipFile class.", "id": 53992, "attachment_id": 10779, "bug_id": 26275, "creation_time": "2004-03-15T04:56:58Z", "time": "2004-03-15T04:56:58Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 26275, "attachment_id": null, "id": 54370, "time": "2004-03-22T09:24:06Z", "creator": "remm@apache.org", "creation_time": "2004-03-22T09:24:06Z", "is_private": false, "text": "It is not acceptable to depend on Ant for this. I think allowing random\nencodings inside a .zip is bound to fail, and is a horrible hack. I approve\nSun's decision to rely on UTF-8, and I think it is the right decision."}, {"id": 54374, "tags": [], "bug_id": 26275, "is_private": false, "count": 6, "text": "What decision? Sun simply choosed to ignore the problem. Note, that the related\nbug on java.sun.com, which has 294 votes now, giving it rank 4 in the list\nof the top 25, is still open.\n\nAnd, while talking about \"bound to fail\": Don't you think that the current\nTomcat behaviour (which is based on a SPEC that simply ignores the question\nof file name encodings) is itself bound to fail, as it ensures a lot of\ninteroperability problems? In fact, with your decision, you *force* people\nto use \"jar\" as a build tool for war archive.\n", "time": "2004-03-22T10:46:26Z", "creator": "jochen@apache.org", "creation_time": "2004-03-22T10:46:26Z", "attachment_id": null}, {"count": 7, "tags": [], "creator": "jochen@apache.org", "is_private": false, "id": 69460, "attachment_id": null, "bug_id": 26275, "creation_time": "2005-01-09T21:49:05Z", "time": "2005-01-09T21:49:05Z", "text": "Now that the Ant zip classes have found a new home in the Jakarta Commons\nCompress module, I'd ask to rethink this bug.\n"}, {"count": 8, "tags": [], "bug_id": 26275, "attachment_id": null, "text": "My opinion didn't change, sorry ;)\nSince noone else ever requested the feature, I think it would be merely bloat,\nso I don't see the point.", "id": 69461, "time": "2005-01-09T22:00:42Z", "creator": "remm@apache.org", "creation_time": "2005-01-09T22:00:42Z", "is_private": false}]