[{"count": 0, "text": "OPTIONS * HTTP/1.1 is a valid request, but it fails in the resources mapping. Probably as a result of the mapper/resources changes. This special URL should probably not go that far into the mapping process in the first place.\n\n05-Nov-2014 09:04:41.708 SEVERE [http-nio-8083-exec-3] \norg.apache.coyote.http11.AbstractHttp11Processor.process Error \nprocessing request\n  java.lang.IllegalArgumentException: The resource path [*] is not valid\n        at org.apache.catalina.webresources.StandardRoot.validate(StandardRoot.java:250)\n        at \norg.apache.catalina.webresources.StandardRoot.getResource(StandardRoot.java:212)\n        at \norg.apache.catalina.webresources.StandardRoot.getResource(StandardRoot.java:206)\n        at org.apache.catalina.mapper.Mapper.internalMapWrapper(Mapper.java:999)\n        at org.apache.catalina.mapper.Mapper.internalMap(Mapper.java:817)\n        at org.apache.catalina.mapper.Mapper.map(Mapper.java:685)\n        at \norg.apache.catalina.connector.CoyoteAdapter.postParseRequest(CoyoteAdapter.java:872)\n        at \norg.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:532)\n        at \norg.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1085)\n        at \norg.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:658)\n        at \norg.apache.coyote.http11.Http11NioProtocol$Http11ConnectionHandler.process(Http11NioProtocol.java:222)\n        at \norg.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1556)\n        at \norg.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1513)\n        at \njava.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n        at \njava.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n        at \norg.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\n        at java.lang.Thread.run(Thread.java:745)", "creator": "remm@apache.org", "is_private": false, "id": 178972, "time": "2014-11-05T08:47:25Z", "bug_id": 57187, "creation_time": "2014-11-05T08:47:25Z", "tags": [], "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 57187, "attachment_id": null, "is_private": false, "id": 178973, "time": "2014-11-05T08:53:57Z", "creator": "remm@apache.org", "creation_time": "2014-11-05T08:53:57Z", "text": "Additional note: Tomcat 7 returns a response that looks correct:\nOPTIONS * HTTP/1.1\nHost: localhost\n\nHTTP/1.1 200 OK\nServer: Apache-Coyote/1.1\nAllow: GET, HEAD, POST, PUT, DELETE, OPTIONS\nContent-Length: 0\nDate: Wed, 05 Nov 2014 08:51:16 GMT"}, {"count": 2, "tags": [], "bug_id": 57187, "attachment_id": null, "is_private": false, "id": 178976, "time": "2014-11-05T10:58:33Z", "creator": "remm@apache.org", "creation_time": "2014-11-05T10:58:33Z", "text": "Fix in r1636850 for 8.0.16."}, {"count": 3, "tags": [], "text": "REOPENing, as I think there is still more to it.\n\nWith current trunk:\n\nGET * HTTP/1.1\nHost: a\n\nExpected: Error 400 or error 404 (depends on what is written is the spec, I have not looked there yet). Tomcat 7 returns 404.\n\nActual: Error 500 with a stacktrace\n\n java.lang.IllegalArgumentException: The resource path [*] is not valid\n\tat org.apache.catalina.webresources.StandardRoot.validate(StandardRoot.java:251)\n\tat org.apache.catalina.webresources.StandardRoot.getResource(StandardRoot.java:212)\n\tat org.apache.catalina.webresources.StandardRoot.getResource(StandardRoot.java:206)\n\tat org.apache.catalina.servlets.DefaultServlet.serveResource(DefaultServlet.java:716)\n\tat org.apache.catalina.servlets.DefaultServlet.doGet(DefaultServlet.java:411)\n\n\nGET ? HTTP/1.1\nHost: a\n\nGET foo HTTP/1.1\nHost: a\n\nExpected=Actual: Error 400, as expected.\nOther invalid URLs are rejected early. There is special processing for \"*\" in CoyoteAdapter.normalize(MB) that allows it to survive.", "attachment_id": null, "id": 179024, "creator": "knst.kolinko@gmail.com", "time": "2014-11-10T10:21:45Z", "bug_id": 57187, "creation_time": "2014-11-10T10:21:45Z", "is_private": false}, {"attachment_id": null, "tags": [], "bug_id": 57187, "is_private": false, "count": 4, "id": 179029, "time": "2014-11-10T11:56:49Z", "creator": "remm@apache.org", "creation_time": "2014-11-10T11:56:49Z", "text": "OPTIONS * means an OPTIONS method applied to the whole server, it is used my mod_cluster to ping. This is a valid request, which should be processed by the default servlet as it is now. For any other methods, the 404 looked decent.\n\nLooking at the code, I'm not sure what the best option is, since \"*\" is really invalid as a file path in the resources, and should continue to be rejected with an exception in validate."}, {"count": 5, "tags": [], "bug_id": 57187, "attachment_id": null, "id": 179030, "time": "2014-11-10T13:05:03Z", "creator": "remm@apache.org", "creation_time": "2014-11-10T13:05:03Z", "is_private": false, "text": "Another possibility (looking at the code) is to deal with * in CoyoteAdpater.postParseRequest before mapping, and only OPTIONS would return a non 404 response."}, {"count": 6, "tags": [], "bug_id": 57187, "attachment_id": null, "id": 179031, "time": "2014-11-10T13:08:39Z", "creator": "jfclere@gmail.com", "creation_time": "2014-11-10T13:08:39Z", "is_private": false, "text": "basically OPTIONS * shouldn't be mapped to anything just answered as it is like the CPING/PONG of AJP.\nSee http://www.w3.org/Protocols/rfc2616/rfc2616-sec9.html"}, {"count": 7, "tags": [], "text": "r1637839", "attachment_id": null, "id": 179032, "creator": "remm@apache.org", "time": "2014-11-10T13:42:14Z", "bug_id": 57187, "creation_time": "2014-11-10T13:42:14Z", "is_private": false}]