[{"count": 0, "tags": [], "text": "Created attachment 28703\nChanging the Hashmap by Collections.synchonizedMap()\n\nNot sure if it is java 7 related, but I had repeatetly that deadlock when I got the srver under some load. A simple replacement of the HashMap by a synchonized one did help (patch attached); but I dont know if that is a good solution as I dont get the idea of the AnnotationCache.\n\nhttp-apr-80-exec-348\" daemon prio=10 tid=0x00007f4f64da9000 nid=0x6306 waiting for monitor entry [0x00007f4f46cd7000]\n   java.lang.Thread.State: BLOCKED (on object monitor)\n\tat org.apache.catalina.core.DefaultInstanceManager.populateAnnotationsCache(DefaultInstanceManager.java:256)\n\t- waiting to lock <0x00000007063b3d90> (a java.util.WeakHashMap)\n\tat org.apache.catalina.core.DefaultInstanceManager.newInstance(DefaultInstanceManager.java:143)\n\tat org.apache.catalina.core.DefaultInstanceManager.newInstance(DefaultInstanceManager.java:137)\n\tat org.apache.jsp.templates.web.templates.s2.inc_005fcategory_jsp._jspx_meth_ox_005fifexists_005f1(inc_005fcategory_jsp.java:708)\n\tat org.apache.jsp.templates.web.templates.s2.inc_005fcategory_jsp._jspx_meth_ox_005frepeat_005f0(inc_005fcategory_jsp.java:118)\n\tat org.apache.jsp.templates.web.templates.s2.inc_005fcategory_jsp._jspService(inc_005fcategory_jsp.java:70)\n\tat org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:722)\n\tat org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:432)\n\tat org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:390)\n\tat org.apache.jasper.servlet.JspServlet.service(JspServlet.java:334)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:722)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:305)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)", "is_private": false, "bug_id": 53171, "id": 158703, "time": "2012-05-01T10:58:32Z", "creator": "al.lias@gmx.de", "creation_time": "2012-05-01T10:58:32Z", "attachment_id": 28703}, {"count": 1, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "id": 159446, "time": "2012-05-29T13:29:55Z", "bug_id": 53171, "creation_time": "2012-05-29T13:29:55Z", "is_private": false, "text": "There is no evidence of a deadlock provided in this bug report. Please follow up on the users mailing list. Feel free to re-open this report once some evidence of a deadlock is available."}, {"count": 2, "tags": [], "bug_id": 53171, "attachment_id": null, "id": 179788, "time": "2014-12-16T09:04:23Z", "creator": "manoj.ks@fisglobal.com", "creation_time": "2014-12-16T09:04:23Z", "is_private": false, "text": "I was facing similar issue in my application where 272 threads are blocked by this monitor lock. Looks like using weak hash map is causing the issue. I have attached the screenshot of the dead lock situation. As Bob mentioned this issue is happening after certain user load.\n\nThis issue is completely bringing down the application throughput."}, {"count": 3, "tags": [], "bug_id": 53171, "attachment_id": null, "id": 179789, "time": "2014-12-16T09:05:22Z", "creator": "manoj.ks@fisglobal.com", "creation_time": "2014-12-16T09:05:22Z", "is_private": false, "text": "Below is my current tomcat version,\n\nServer version: Apache Tomcat/7.0.42\nServer built:   Jul 2 2013 08:57:41\nServer number:  7.0.42.0\nOS Name:        Linux\nOS Version:     2.6.32-431.23.3.el6.x86_64\nArchitecture:   amd64\nJVM Version:    1.7.0_71-mockbuild_2014_10_03_09_05-b00\nJVM Vendor:     Oracle Corporation"}, {"count": 4, "tags": [], "bug_id": 53171, "is_private": false, "text": "Created attachment 32293\nMonitor lock details", "id": 179790, "time": "2014-12-16T09:09:11Z", "creator": "manoj.ks@fisglobal.com", "creation_time": "2014-12-16T09:09:11Z", "attachment_id": 32293}, {"count": 5, "tags": [], "bug_id": 53171, "attachment_id": 32294, "id": 179791, "time": "2014-12-16T09:09:55Z", "creator": "manoj.ks@fisglobal.com", "creation_time": "2014-12-16T09:09:55Z", "is_private": false, "text": "Created attachment 32294\nMethod list"}, {"count": 6, "tags": [], "text": "Again, there is no evidence of a deadlock in the new information provided.\n\nThere is evidence of lock contention but no evidence as to what is causing that. Given that the sync blocks only surround get() and put(), I wonder if GC activity is the root cause.\n\nThe stack trace for the thread that currently holds the lock on the annotationCache would be illuminating.\n\nThis issue is going to remain as INVALID until some evidence of a Tomcat bug is produced.", "attachment_id": null, "id": 179808, "creator": "markt@apache.org", "time": "2014-12-16T23:07:17Z", "bug_id": 53171, "creation_time": "2014-12-16T23:07:17Z", "is_private": false}, {"count": 7, "tags": [], "bug_id": 53171, "attachment_id": null, "is_private": false, "id": 179815, "time": "2014-12-17T07:02:19Z", "creator": "manoj.ks@fisglobal.com", "creation_time": "2014-12-17T07:02:19Z", "text": "Looks like this is similar to https://issues.apache.org/bugzilla/show_bug.cgi?id=53085"}, {"attachment_id": null, "tags": [], "bug_id": 53171, "is_private": false, "count": 8, "id": 179818, "time": "2014-12-17T07:46:56Z", "creator": "manoj.ks@fisglobal.com", "creation_time": "2014-12-17T07:46:56Z", "text": "Concurrent hash map will solve this contention. The patch which Konstantin provided is for tomcat 8. Will it be possible to get it in tomcat 7?"}]