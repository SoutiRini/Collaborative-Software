[{"count": 0, "tags": [], "bug_id": 55166, "attachment_id": null, "id": 168156, "time": "2013-06-30T20:03:24Z", "creator": "jboynes@apache.org", "creation_time": "2013-06-30T20:03:24Z", "is_private": false, "text": "The javax/servlet/resources package does not contain the JSP specification XSDs. These are referenced from the web-app or web-common xsds and define elements like <jsp-config>."}, {"count": 1, "tags": [], "creator": "jboynes@apache.org", "is_private": false, "text": "Created attachment 30508\nPatch including XSDs downloaded from Sun/JCP website, modified to include CDDL election by ASF\n\nModification only adds the text:\n\n  <xsd:annotation>\n    <xsd:documentation>\n      The Apache Software Foundation elects to include this software under the\n      CDDL license.\n    </xsd:documentation>\n  </xsd:annotation>\n\nquoted from web-app_3_1.xsd and added per instructions in original files.", "id": 168157, "time": "2013-06-30T20:09:30Z", "bug_id": 55166, "creation_time": "2013-06-30T20:09:30Z", "attachment_id": 30508}, {"count": 2, "tags": [], "bug_id": 55166, "attachment_id": null, "id": 168162, "time": "2013-06-30T23:27:37Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2013-06-30T23:27:37Z", "is_private": false, "text": "What is your issue?\n\nThose DTDs do not belong to the Servlet spec, they belong to the JSP one.\nYou'll find them in jsp-api.jar\n\nClosing as INVALID"}, {"text": "(In reply to Konstantin Kolinko from comment #2)\n\n> You'll find them in jsp-api.jar\nI missed that they were there, sorry for that. \n\n> What is your issue?\n \nI ran into a problem trying to use xjc because web-common_3_1.xsd contains\n\n  <xsd:include schemaLocation=\"jsp_2_3.xsd\"/>\n\nand which did not resolve. The same applies to jsp_2_3.xsd when it is in the jsp jar because it in turn contains\n\n  <xsd:include schemaLocation=\"javaee_7.xsd\"/>\n\nwhich is back in the servlet jar.\n\nI updated the issue summary to reflect this.", "tags": [], "bug_id": 55166, "is_private": false, "count": 3, "id": 168163, "time": "2013-07-01T03:47:29Z", "creator": "jboynes@apache.org", "creation_time": "2013-07-01T03:47:29Z", "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 55166, "attachment_id": null, "text": "Do you still see the issue if both the servlet-api.jar and jsp-api.jar are available on the class path?\n\nI'd expect the answer to be no since the TCK tests run with validation enabled for the XML parser and there are no issues resolving the various schemas.", "id": 168224, "time": "2013-07-02T09:52:18Z", "creator": "markt@apache.org", "creation_time": "2013-07-02T09:52:18Z", "is_private": false}, {"count": 5, "attachment_id": 30526, "creator": "jboynes@apache.org", "is_private": false, "id": 168245, "time": "2013-07-03T03:29:45Z", "bug_id": 55166, "creation_time": "2013-07-03T03:29:45Z", "tags": [], "text": "Created attachment 30526\nfull output from test run\n\nI was seeing the problem with xjc running against the resources directory. That may not be a typical manifestation.\n\nHowever, I put together this testcase for validation\n\n    @Test\n    public void testValidation() throws Exception {\n        System.out.println(\"ServletContext = \" + getClass().getResource(\"/javax/servlet/ServletContext.class\"));\n        System.out.println(\"JspFactory = \" + getClass().getResource(\"/javax/servlet/jsp/JspFactory.class\"));\n        SchemaFactory schemaFactory = SchemaFactory.newInstance(XMLConstants.W3C_XML_SCHEMA_NS_URI);\n        schemaFactory.setErrorHandler(new ErrorHandler() {\n            @Override\n            public void warning(SAXParseException exception) throws SAXException {\n                exception.printStackTrace();\n            }\n\n            @Override\n            public void error(SAXParseException exception) throws SAXException {\n                exception.printStackTrace();\n            }\n\n            @Override\n            public void fatalError(SAXParseException exception) throws SAXException {\n                exception.printStackTrace();\n            }\n        });\n        URL url = ServletContext.class.getResource(\"/javax/servlet/resources/web-app_3_0.xsd\");\n        System.out.println(\"url = \" + url);\n        Schema schema = schemaFactory.newSchema(url);\n    }\n\nwhich fails with \n\norg.xml.sax.SAXParseException; systemId: jar:file:/Users/jeremy/apache/apache-tomcat-7.0.41/lib/servlet-api.jar!/javax/servlet/resources/web-common_3_0.xsd; lineNumber: 119; columnNumber: 46; schema_reference.4: Failed to read schema document 'jsp_2_2.xsd', because 1) could not find the document; 2) the document could not be read; 3) the root element of the document is not <xsd:schema>.\n\nCaused by: java.io.FileNotFoundException: JAR entry javax/servlet/resources/jsp_2_2.xsd not found in /Users/jeremy/apache/apache-tomcat-7.0.41/lib/servlet-api.jar\n\nThe full output is attached. As you can see, it is looking for jsp_2_2.xsd in same location as the web-common_3_0.xsd resource that is including it. I ran against the lib directory from a download of 7.0.41.\n\nI don't know how the TCK is validating. It may have a custom resolver for its own copies of the XSDs."}, {"count": 6, "tags": [], "bug_id": 55166, "attachment_id": 30527, "id": 168246, "time": "2013-07-03T03:34:27Z", "creator": "jboynes@apache.org", "creation_time": "2013-07-03T03:34:27Z", "is_private": false, "text": "Created attachment 30527\nPatch to add testcase to trunk\n\nPatch to add the prior testcase to trunk. It passes if I svn copy the jsp xsds to javax/servlet/resources but I didn't do that in the patch in order to keep file history.\n\nIt fails to validate on test/webapp/WEB-INF/web.xml so I also includes changes to make that file conform to the XSD (basically reordering a couple of elements)."}, {"count": 7, "tags": [], "bug_id": 55166, "attachment_id": 30528, "id": 168247, "time": "2013-07-03T03:46:49Z", "creator": "jboynes@apache.org", "creation_time": "2013-07-03T03:46:49Z", "is_private": false, "text": "Created attachment 30528\nSame as 30527 but with ASF header and link to this issue"}, {"count": 8, "tags": [], "bug_id": 55166, "attachment_id": null, "id": 168290, "time": "2013-07-05T11:50:02Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2013-07-05T11:50:02Z", "is_private": false, "text": "You are doing it wrong.\na) You have to configure a resolver to be able to locate schemas.\n\nTomcat uses org.apache.catalina.util.SchemaResolver as configured by org.apache.catalina.startup.DigesterFactory.\nSee DigesterFactory#registerLocalSchema().\n\nb) You can use SchemaFactory.newSchema(Source[]). I do not know whether it helps in your case (maybe it does not help with includes), but it is a way to pass several schema files to a SchemaFactory.\n\nc) You can bundle and redistribute schema files on your own, without relying on ones used internally by Tomcat."}, {"count": 9, "tags": [], "bug_id": 55166, "attachment_id": null, "id": 168318, "time": "2013-07-05T20:21:52Z", "creator": "jboynes@apache.org", "creation_time": "2013-07-05T20:21:52Z", "is_private": false, "text": "(In reply to Konstantin Kolinko from comment #8)\n> a) You have to configure a resolver to be able to locate schemas.\n> \n\nI should not need to use a resolver for this case. The base location of the schema file is known in the call to newSchema(url) and all the references from that file (its includes) are relative URIs. You can see that if you provide a LSResourceResolver to the schemaFactory where it gets called with\n  type = http://www.w3.org/2001/XMLSchema\n  namespaceURI = http://java.sun.com/xml/ns/javaee\n  publicId = null\n  systemId = jsp_2_2.xsd\n  baseURI = jar:file:/Users/jeremy/apache/apache-tomcat-7.0.41/lib/servlet-api.jar!/javax/servlet/resources/web-common_3_0.xsd\n\nResolving the relative URI of the systemId against the base gives an absolute local URI for the resource being included. This works fine for all the XSDs used by the Servlet specification (for example, the include from web-app to web-common) but fails for the JSPs XSD as it is not in the same relative location as the spec assumes. \n\n> Tomcat uses org.apache.catalina.util.SchemaResolver as configured by\n> org.apache.catalina.startup.DigesterFactory.\n> See DigesterFactory#registerLocalSchema().\n\nIn the Digester code registerLocalSchema(), the local resources are being registered with the filename as the publicId. I don't believe that is correct for the XmlSchema resources - the publicIds are there DTD-based resources with a <!DOCTYPE>. For XSD-based documents, xsi:schemaLocation is used to provide the *systemId* for the schema i.e. \"http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\" and the resolver should be using that to map to the local cached copy. It works because SchemaResolver uses a single lookup table for both publicId and systemId and because (on line 112) it strips the systemId down to just the basename. This stripping down is not actually needed if you see what systemId the EntityResolver is being called with:\n  http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd \n    (returns jar:file:/Users/jeremy/apache/tomcat/trunk/output/build/lib/servlet-api.jar!/javax/servlet/resources/web-app_3_1.xsd)\n  jar:file:/Users/jeremy/apache/tomcat/trunk/output/build/lib/servlet-api.jar!/javax/servlet/resources/web-common_3_1.xsd\n  jar:file:/Users/jeremy/apache/tomcat/trunk/output/build/lib/servlet-api.jar!/javax/servlet/resources/javaee_7.xsd\n  http://www.w3.org/2001/xml.xsd\n...\n  jar:file:/Users/jeremy/apache/tomcat/trunk/output/build/lib/servlet-api.jar!/javax/servlet/resources/jsp_2_3.xsd\n\nAs you can see, the parser is resolving the <include schemaLocation> as a URI relative to the containing document resulting in a systemId for the \"jsp_2_3.xsd\" relative URI that is in the same place as the containing \".../web-common_3_1.xsd\" document. SchemaResolver's implementation works by stripping that down to \"jsp_2_3.xsd\" and mapping that to the JSP jar. This works but would not be needed if the XSDs were in the same location relative to each other as they are at http://xmlns.jcp.org/xml/ns/javaee/\n\nThis could simplify the Digester as its SchemaResolver would only need to be configured with the systemIds that are documented by the specifications (e.g. http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd) for use in deployment descriptors, or with other external schemas (e.g. http://www.w3.org/2001/xml.xsd). It would not need to be configured with the internal references that are not defined by the specifications (e.g. web-common_3_1.xsd, jsp_2_3.xsd and so on).\n\nI'll put together a patch to see how much of a difference it makes.\n\n> \n> b) You can use SchemaFactory.newSchema(Source[]). I do not know whether it\n> helps in your case (maybe it does not help with includes), but it is a way\n> to pass several schema files to a SchemaFactory.\n\nIt does not help with the includes as they are using the relative URI references between schema documents."}, {"count": 10, "attachment_id": 30556, "creator": "jboynes@apache.org", "is_private": false, "id": 168329, "time": "2013-07-07T00:22:07Z", "bug_id": 55166, "creation_time": "2013-07-07T00:22:07Z", "tags": [], "text": "Created attachment 30556\nStart to refactor SchemaResolver not to key only on basename\n\nI started on the patch I mentioned above. This changes SchemaResolver to use the full systemId when resolving rather than just matching on the file name. This led to discovery of 55204 which previously worked because an incorrect path was being ignored.\n\nAs part of this I also made SchemaResolver a SAX2 EntityResolver2 so that is it potentially more useful.\n\nThe previous implementation also had a dependency on a Digester in order to set the publicId. This is not normally an EntityResolver's responsibility. I removed this call and updated Digester to use the publicId reported by a LexicalHandler, and did the same for the Digester's internal EntityResolver implementation. This also allows SchemaResolver to be a singleton.\n\nVerified with test-bio (I'm assuming these changes are independent of connector).\n\nI'm attaching this checkpoint as there are a few more changes I would like to make which would be broader reaching. I noticed that the entries in Constants do not reflect the distinction between public and system ids. For example, WebDtdPublicId_23 is a public id for the 2.3 DTD but WebSchemaPublicId_24 is a truncated version of the 2.4 system id. In the spirit of my previous comment I'm going to propose a patch to clean up that naming, make the constant values the fully qualified URIs (I'm going to assume for this that the values in o.a.c.startup.Constants are for internal use only and can be changed), and assume that the relative URIs can be made to work by moving the XSDs from jsp to servlet. This will also allow a bit of cleanup in WebXml as setPublicId() would only need to handle DOCTYPE-based versions and setVersion() only the XSD-based versions. Finally, as Digester is already SAX2 aware, I will update it to extend DefaultHandler2 and the corresponding EntityResolver2 and LexicalHandler methods."}, {"count": 11, "tags": [], "bug_id": 55166, "attachment_id": 30567, "text": "Created attachment 30567\nUpdated patch\n\nThis version assumes that the JSP XSDs can be moved to the same location as the Servlet XSDs they have relative references too.\n\nUpdated the resolver to only require the systemIds specified in the spec docs. These are used to resolve the initial schema and from there all relative references are resolved as relative URIs.\n\nMoved the XML identifiers from o.a.c.startup to o.a.tomcat to be part of the API allowing them to be used from Jasper (which already depends on tomcat-api). Moved the resolver to o.a.t.u.res so that it too could be shared (there may be a better package for this but it seemed resource related).\n\nUpdated Digester to extend DefaultHandler2 with its built in implementations of EntityResolver2 and Lexical handler. On WebXml, setPublicId() is now used only for files with a <DOCTYPE> (2.2 and 2.3) whereas setVersion() is used for all files using XmlSchema (2.4 and later) which means it can be simplified a little.\n\nAdded test/webapp-2.2 to confirm 2.2 version was still correctly detected and added it to the other test cases using webapp-*.\n\nThis change is now starting to collide with my patch for 53737 and I'll ping the dev list about how that could be combined.", "id": 168367, "time": "2013-07-08T01:07:00Z", "creator": "jboynes@apache.org", "creation_time": "2013-07-08T01:07:00Z", "is_private": false}, {"count": 12, "attachment_id": null, "creator": "markt@apache.org", "is_private": false, "id": 168375, "time": "2013-07-08T08:35:53Z", "bug_id": 55166, "creation_time": "2013-07-08T08:35:53Z", "tags": [], "text": "I've been looking at the first issues raised - namely where the Servlet and JSP schemas are located.\n\nCurrently, the schemas are split between [1] and [2].\n\nThis split creates the a problem that can easily been seen when viewing the schemas in Eclipse. A number of these schemas include entries along the lines of:\n<xsd:include schemaLocation=\"xxx.xsd\"/>\n\nI've had a look at the W3C specs and there is a requirement that these locations are relative so that means the included files all need to be in the same location. With the files split between [1] and [2] there are numerous references that can't be resolved.\n\nI see two approaches to solving this:\n\na) Move files from [2] to [1]\nb) Duplicate files between [1] and [2]\n\nOption a)\nPros: Only a single copy of the files will exist\nCons: The taglib files are not required by the Servlet API (the JSP\n      ones are)\n\nOption b)\nPros: servlet-api JAR won't contain unnecessary tablib files\nCons: Duplication of a most of the files between the JARs\n\n\nOn balance I think I prefer option a). I'd rather have 4 files in the servlet-api JAR that are only required when processing JSPs than duplicate nearly all of the files in the jsp-api JAR especially given that the jsp-api.jar depends on the servlet-api.jar anyway.\n\n\nIn Tomcat 7 folks might be using these JARs from there current locations so I intend to fix this using option a) for Tomcat 8 only.\n\nThe issue with the schema resolver belong in a new Bugzilla issue (or possibly issues - I haven't looked too hard at whether there is a single issue there or multiple issues).\n\n[1] http://svn.apache.org/viewvc/tomcat/trunk/java/javax/servlet/resources/\n[2] http://svn.apache.org/viewvc/tomcat/trunk/java/javax/servlet/jsp/resources/"}, {"text": "The originally reported issue has been fixed in trunk for 8.0.x. Please open a new Bugzilla issue for any additional issues (one Bugzilla issues for each additional issue) you identified while working on this issue.", "tags": [], "bug_id": 55166, "is_private": false, "count": 13, "id": 168376, "time": "2013-07-08T09:35:51Z", "creator": "markt@apache.org", "creation_time": "2013-07-08T09:35:51Z", "attachment_id": null}, {"count": 14, "tags": [], "bug_id": 55166, "attachment_id": null, "text": "*** Bug 55313 has been marked as a duplicate of this bug. ***", "id": 168945, "time": "2013-07-30T09:54:22Z", "creator": "markt@apache.org", "creation_time": "2013-07-30T09:54:22Z", "is_private": false}, {"count": 15, "tags": [], "bug_id": 55166, "attachment_id": null, "is_private": false, "id": 172749, "time": "2014-01-28T16:15:00Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2014-01-28T16:15:00Z", "text": "This eventually have been fixed in Tomcat 6 (r1561625) and Tomcat 7 (r1562103) and will be in 6.0.39, 7.0.51."}]