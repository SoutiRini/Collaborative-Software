[{"count": 0, "tags": [], "text": "I've been trying to get Slide to behave a bit better when it comes to how it handles its connections and \ntransactions; despite telling the access token that I wish to begin() and then commit() a transaction, I \nnoted that with tm-commits=true (and no tm set), not all operations were getting rolled back; the \ndatabase was left in a corrupted state.\n\nThe behvaior I'm expecting:\n - If I call accessToken.begin(), all Slide operations within that begin/end pair will use the same \nconnection.  getCurrentConnection() fails in most cases, and I end up using getNewConnection(), which \nwill lead to DB issues with locks.\n - Setting tm-commits to true didn't do what I'd expected - instead, it appears that some things \ncommitted, some things failed, and it left the database bereft and corrupt.\n\nSo, my questions are as follows:\n  - Is tm-commits flat-out unsupported unless you provide a transaction manager for it to use?\n  - Is the connection behavior normal?\n  - Would that connection behavior change if I *did* provide a transactionmanager implementation?\n\nIn effect, is this expected behavior?  If so, should tm-commits flag be checking for a \nTransactionManager implementation before allowing itself to be set to a mode where it can corrupt \ndata?", "is_private": false, "id": 74273, "creator": "gblock@ctoforaday.com", "time": "2005-04-29T12:10:02Z", "bug_id": 34676, "creation_time": "2005-04-29T12:10:02Z", "attachment_id": null}]