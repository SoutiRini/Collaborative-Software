[{"count": 0, "tags": [], "text": "In line 72 of mod_session.c\n\n        for (i = 0; included && i < conf->includes->nelts; i++) {\n\nconf->includes->nelts is used for the loop condition, but this is a loop for conf->excludes. Unless the # of SessionInclude directives is exactly the same as SessionExclude, this loop will not be processed correctly.\n\nIn addition, when the loop is indeed processed, the string comparison does not appear to be coded correctly. On line 75\n\n            if (strncmp(r->uri, exclude, strlen(exclude))) {\n\nshould be\n\n            if (strncmp(r->uri, exclude, strlen(exclude)) == 0) {\n\nbecause strncmp will return 0 for a match.", "is_private": false, "bug_id": 56038, "id": 172565, "time": "2014-01-20T19:17:11Z", "creator": "erik@adaptations.com", "creation_time": "2014-01-20T19:17:11Z", "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 56038, "is_private": false, "count": 1, "id": 172566, "time": "2014-01-20T19:46:32Z", "creator": "trawick@apache.org", "creation_time": "2014-01-20T19:46:32Z", "text": "The prior strncmp() also needs the same fix (add \"== 0\"), right?"}, {"count": 2, "tags": [], "text": "Yes, it would.\n\nBTW shouldn't the actual fix be according to Apache coding standards, whatever that is? I haven't truly coded in C for years. A quick scan of the source tree shows mixed usage of strncmp(). Often it is treated as a boolean; other times as an integer with a numeric comparison. \n\nI would think from a code clarity position, the integer comparisons, with ==0 for a match and !=0 for a non-match, would be best. The boolean usage reads counter for me -- you have to use !strncmp() to mean a match. Although for C programmers the idiom may be second nature.\n\nMaybe a macro like STARTS_WITH would have been clearer?\n\nIn this case, and out of scope of this bug, I would argue that this should be a regex comparison -- it will likely be matched to authentication requirements. That is, to avoid the session overhead on nonauthenticated resources, one would probably want to use the same expression here as in a LocationMatch or whatever is used to set up a pattern for authentication.", "is_private": false, "id": 172568, "creator": "erik@adaptations.com", "time": "2014-01-20T20:35:42Z", "bug_id": 56038, "creation_time": "2014-01-20T20:35:42Z", "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 56038, "attachment_id": null, "is_private": false, "id": 172570, "time": "2014-01-20T21:13:21Z", "creator": "trawick@apache.org", "creation_time": "2014-01-20T21:13:21Z", "text": "Committed to trunk as r1559828 (Please check at http://svn.apache.org/viewvc?view=revision&revision=r1559828)\n\nAlso proposed for backport to 2.4.future.\n\nStyle considerations:  There are plenty of examples in the entire codebase of both ([!]strncmp()) and (strncmp() ==/!= 0), and no working examples in the rest of mod_session.c to consider, so I don't think it is important either way.  I went with your suggestion of \"== 0\".  An APR function implement the starts-with check might be nice, but in absence of that I don't think a macro is worth pursuing.\n\nNew rexec feature: Open another issue and mark as enhancement.\n\nThanks!"}, {"count": 4, "tags": [], "bug_id": 56038, "attachment_id": null, "is_private": false, "id": 172576, "time": "2014-01-20T23:43:23Z", "creator": "erik@adaptations.com", "creation_time": "2014-01-20T23:43:23Z", "text": "Great!\nI don't know the magic incantations for, nor should I probably use, httpd-trunk. Is svn 2.4.x the same as 2.4.FUTURE you refer to or 2.4-HEAD in Bugzilla, and the same branch that will be receiving updates since 2.4.7?"}, {"count": 5, "tags": [], "bug_id": 56038, "attachment_id": null, "text": ">Is svn 2.4.x the same as 2.4.FUTURE you refer to or 2.4-HEAD in Bugzilla, and the same branch that will be receiving updates since 2.4.7?\n\nAll the same...  \"FUTURE\" is simply intended to refer to a future 2.4.x release.  2.4.8, 2.4.9, etc.", "id": 172577, "time": "2014-01-20T23:47:41Z", "creator": "trawick@apache.org", "creation_time": "2014-01-20T23:47:41Z", "is_private": false}, {"count": 6, "tags": [], "bug_id": 56038, "attachment_id": null, "id": 172633, "time": "2014-01-23T14:46:10Z", "creator": "minfrin@sharp.fm", "creation_time": "2014-01-23T14:46:10Z", "is_private": false, "text": "Backported to v2.4.8."}]