[{"attachment_id": null, "tags": [], "creator": "akky@bigfoot.com", "is_private": false, "count": 0, "id": 1714, "time": "2001-04-03T22:10:16Z", "bug_id": 1208, "creation_time": "2001-04-03T22:10:16Z", "text": "Hi, firstly let me thank all of you for making and maintaining\nthis really useful tool. It's always enjoyable to explorer new\ntasks in Ant.\n\nThis problem I am going to report only occurs when you are\ninvolved with multibytes code so I am unsure about severity and\npriority. Some people never encounter this.\n\nWith replace tag, when replacing file which has multibytes characters,\nant failed with stacktrace like,\n----------------------------------------------------------------\nBUILD FAILED\n\njava.lang.IndexOutOfBoundsException\n        at java.io.BufferedReader.read(BufferedReader.java:256)\n        at org.apache.tools.ant.taskdefs.Replace.processFile(Replace.java:293)\n        at org.apache.tools.ant.taskdefs.Replace.execute(Replace.java:201)\n        at org.apache.tools.ant.Target.execute(Target.java:153)\n        at org.apache.tools.ant.Project.runTarget(Project.java:898)\n        at org.apache.tools.ant.Project.executeTarget(Project.java:536)\n        at org.apache.tools.ant.Project.executeTargets(Project.java:510)\n        at org.apache.tools.ant.Main.runBuild(Main.java:421)\n        at org.apache.tools.ant.Main.main(Main.java:149)\n----------------------------------------------------------------\n\nAs looking at Replace#processFile(File), it seems to get a size of\nbuffer by File.length(), which is *bytes*.\nHowever, BufferedReader.read() is trying to read original strings\nas *chars* array.\nAs a result of it, if the original file has a multibyte character\nwhich consists of more than one byte, File.length() can be longer\nthan the number of characters, so read() exceeds and meets this\nIndexOutOfBoundsException.\n\nMy repairment suggestion is below. Use read() instead of \nread(char[], int, int) so you can know when input ends. And I\nguess reading one by one doesn't harm performance because\nBufferedReader helps.\n==================================================================\n--- Replace.java_orig\tFri Mar 02 14:46:36 2001\n+++ Replace.java\tWed Apr 04 03:58:29 2001\n@@ -285,13 +285,17 @@\n             BufferedWriter bw = new BufferedWriter(new FileWriter(temp));\n \n             // read the entire file into a char[]\n-            int fileLength = (int)(src.length());\n-            char[] tmpBuf = new char[fileLength];\n-            int numread = 0;\n-            int totread = 0;\n-            while (numread != -1 && totread < fileLength) {\n-                numread = br.read(tmpBuf,totread,fileLength);\n-                totread += numread;\n+            //   size of work buffer may be bigger than needed\n+            //   when multibyte characters exist in the source file\n+            int fileLengthInBytes = (int)(src.length());\n+            char[] tmpBuf = new char[fileLengthInBytes];\n+            int readChar = 0;\n+            int gottenLength = 0;\n+            while (true) {\n+                readChar = br.read();\n+                if (readChar < 0) { break; }\n+                tmpBuf[gottenLength] = (char)readChar;\n+                gottenLength++;\n             }\n \n             // create a String so we can use indexOf\n==================================================================\n\nThis seems working fine with Japanese characters, not tested with\nother multibyte characters though.\n\nRegards,\nAkky (AKIMOTO, Hiroki)\nPFU LIMITED, Tokyo\nmailto:akky@bigfoot.com"}, {"count": 1, "tags": [], "bug_id": 1208, "attachment_id": null, "id": 2232, "time": "2001-05-03T05:58:02Z", "creator": "bodewig@apache.org", "creation_time": "2001-05-03T05:58:02Z", "is_private": false, "text": "applied your patch - fixed in nightly build 2001-05-04"}]