[{"count": 0, "tags": [], "creator": "nicolaou@netinfo.com.cy", "text": "When using ant to undeploy my web application the manager does not manage to \nundeploy a jar file.\n\nThe problem is that in the jar file a class uses javax.crypto.Cipher.\n\nThe problem is cause by the line ecipher.init(..) in the following code:\n\n\nKeySpec keySpec = new DESedeKeySpec(newKey.getBytes(\"UTF8\"));\nSecretKey key = SecretKeyFactory.getInstance(\"DESede\").generateSecret(keySpec);\n    \t\t\nCipher ecipher = Cipher.getInstance(\"DESede\");\necipher.init(Cipher.ENCRYPT_MODE, key);\n\n\nI tried adding the following code to force the garbage collector to remove the \ninstance of the Cipher with no luck:\n\n\nKeySpec keySpec = new DESedeKeySpec(newKey.getBytes(\"UTF8\"));\nSecretKey key = SecretKeyFactory.getInstance(\"DESede\").generateSecret(keySpec);\n    \t\t\nCipher ecipher = Cipher.getInstance(\"DESede\");\necipher.init(Cipher.ENCRYPT_MODE, key);\n\necipher=null;\nSystem.gc();", "id": 87106, "time": "2006-03-22T15:15:41Z", "bug_id": 39061, "creation_time": "2006-03-22T15:15:41Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "text": "I'm having a similar issue, but with different libraries.  \n\nDoes your case report success when undeploying, but leave files anyway?\n\nAlso, how did you determine that the ecipher.init(..) is the cause of the issue?\n\n-Kevin", "is_private": false, "bug_id": 39061, "id": 87127, "time": "2006-03-23T01:53:29Z", "creator": "zipwow@gmail.com", "creation_time": "2006-03-23T01:53:29Z", "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 39061, "text": "When undeploying the manager says that it undeployed the application, but when \nlooking in webapps my application folder is there with just the specific jar in \nthere. When trying to deploy my application again the manager fails to do so and \nI have to restart tomcat and undeploy it again.\n\nI determined that it was the init() method that was causing the problem because \nI put it in comments leaving everything else in place and the application was \nundeploying succefully. It seems that the init() method starts a thread that \nstays in memory.\n\n\n\n(In reply to comment #1)\n> I'm having a similar issue, but with different libraries.  \n> \n> Does your case report success when undeploying, but leave files anyway?\n> \n> Also, how did you determine that the ecipher.init(..) is the cause of the \nissue?\n> \n> -Kevin\n\n", "id": 87133, "time": "2006-03-23T08:10:12Z", "creator": "nicolaou@netinfo.com.cy", "creation_time": "2006-03-23T08:10:12Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "text": "I have exactly the same problem, except it's a different set of jars, one of\nwhich I've written.  My application is complex enough that I can't easily\ndetermine which is still in use.\n\nStill, stop should ... stop, right?", "attachment_id": null, "id": 87157, "creation_time": "2006-03-23T18:05:10Z", "time": "2006-03-23T18:05:10Z", "creator": "zipwow@gmail.com", "bug_id": 39061, "is_private": false}, {"count": 4, "attachment_id": null, "creator": "zipwow@gmail.com", "text": "Additionally, this seems to be either a problem with tomcat 5.5.16, or with windows.\n\nWindows/5.5.16: doesn't work\nLinux/5.5.9: works\n\nFor me, \"works on Linux\" is good enough.", "id": 87183, "time": "2006-03-23T21:49:46Z", "bug_id": 39061, "creation_time": "2006-03-23T21:49:46Z", "tags": [], "is_private": false}, {"count": 5, "tags": [], "creator": "zipwow@gmail.com", "text": "I'm suggesting a severity of \"major\" since this blocks the re-deploy of an\napplication:  The whole server must be shut down for Tomcat to release the locks\non the offending files.", "id": 87222, "time": "2006-03-24T18:12:59Z", "bug_id": 39061, "creation_time": "2006-03-24T18:12:59Z", "is_private": false, "attachment_id": null}, {"count": 6, "attachment_id": null, "creator": "zipwow@gmail.com", "text": "Generalized the summary.", "id": 87366, "time": "2006-03-28T20:15:46Z", "bug_id": 39061, "creation_time": "2006-03-28T20:15:46Z", "tags": [], "is_private": false}, {"count": 7, "attachment_id": null, "creator": "zipwow@gmail.com", "text": "A workaround reported on the tomcat-users list:\n\nChange conf/context.xml from this\n<Context>\nto this\n<Context antiJARLocking=\"true\" antiJARResource=\"true\">", "id": 87376, "time": "2006-03-29T01:32:55Z", "bug_id": 39061, "creation_time": "2006-03-29T01:32:55Z", "tags": [], "is_private": false}, {"count": 8, "tags": [], "creator": "nicolaou@netinfo.com.cy", "attachment_id": null, "id": 87379, "time": "2006-03-29T07:10:56Z", "bug_id": 39061, "creation_time": "2006-03-29T07:10:56Z", "is_private": false, "text": "(In reply to comment #7)\n\nI tried the suggestion to change <context> to <Context antiJARLocking=\"true\" \nantiJARResource=\"true\"> but it does not work. The jar file is still there...\n"}, {"count": 9, "tags": [], "text": "antiResourceLocking=\"true\" in global context.xml works, but after several \ndeploy/undeploy operations there's a horde of JAR copies in the temp directory \nand Tomcat holds all of them, severely slowing the system down", "attachment_id": null, "id": 87719, "creation_time": "2006-04-10T10:15:45Z", "time": "2006-04-10T10:15:45Z", "creator": "shoo@online.com.ua", "bug_id": 39061, "is_private": false}, {"count": 10, "tags": [], "bug_id": 39061, "text": "The workaround works for me, and it's not even really a workaround, it's a\ndocumented feature for this specific environment by now.", "id": 87966, "time": "2006-04-13T19:35:40Z", "creator": "yoavs@computer.org", "creation_time": "2006-04-13T19:35:40Z", "is_private": false, "attachment_id": null}]