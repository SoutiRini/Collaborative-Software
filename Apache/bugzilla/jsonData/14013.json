[{"count": 0, "tags": [], "creator": "henrik.olsson@intentia.se", "attachment_id": null, "id": 25264, "time": "2002-10-28T12:09:19Z", "bug_id": 14013, "creation_time": "2002-10-28T12:09:19Z", "is_private": false, "text": "Made some changes to the fop-0.20.4 that makes it run about 20-30% faster.\nWhats done: removed alot of code that made to many strings and unnecessary \nobjects.\n\n(I know i promised more but...)\n\ndiff:\n\n+++ src\\org\\apache\\fop\\apps\\StreamRenderer.java\tMon Oct 28 11:39:21 2002\n@@ -118,7 +118,7 @@\n     }\n \n     public void addExtension(ExtensionObj ext) {\n-        extensions.addElement(ext);\n+        extensions.add(ext);\n     }\n \n     public void startRenderer()\n@@ -222,7 +222,7 @@\n           valid on the current pages. This short-cuts the\n           pipeline and renders the area immediately.\n         */\n-        if ((renderQueue.size() == 0) && idReferences.isEveryIdValid())\n+        if((renderQueue.size() == 0) && idReferences.isEveryIdValid())\n             renderer.render(page, outputStream);\n         else\n             addToRenderQueue(page);\n--- org__src\\org\\apache\\fop\\extensions\\ExtensionObj.java\tMon Oct 28 \n11:39:43 2002\n+++ src\\org\\apache\\fop\\extensions\\ExtensionObj.java\tMon Oct 28 11:39:43 2002\n@@ -32,10 +32,10 @@\n      *\n      * @param area\n      */\n-    public Status layout(Area area) throws FOPException {\n+    public int layout(Area area) throws FOPException {\n         ExtensionArea extArea = new ExtensionArea(this);\n         area.addChild(extArea);\n-        return new Status(Status.OK);\n+        return Status.OK;\n     }\n \n \n--- org__src\\org\\apache\\fop\\fo\\ColorProfile.java\tMon Oct 28 11:39:45 2002\n+++ src\\org\\apache\\fop\\fo\\ColorProfile.java\tMon Oct 28 11:39:45 2002\n@@ -8,7 +8,6 @@\n package org.apache.fop.fo;\n \n // FOP\n-import org.apache.fop.fo.*;\n import org.apache.fop.fo.flow.*;\n import org.apache.fop.fo.properties.*;\n import org.apache.fop.layout.AreaTree;\n--- org__src\\org\\apache\\fop\\fo\\Declarations.java\tMon Oct 28 11:39:45 2002\n+++ src\\org\\apache\\fop\\fo\\Declarations.java\tMon Oct 28 11:39:45 2002\n@@ -8,7 +8,6 @@\n package org.apache.fop.fo;\n \n // FOP\n-import org.apache.fop.fo.*;\n import org.apache.fop.fo.flow.*;\n import org.apache.fop.fo.properties.*;\n import org.apache.fop.layout.AreaTree;\n--- org__src\\org\\apache\\fop\\fo\\FObj.java\tMon Oct 28 11:39:46 2002\n+++ src\\org\\apache\\fop\\fo\\FObj.java\tMon Oct 28 11:39:46 2002\n@@ -69,9 +69,9 @@\n      *\n      * @param area\n      */\n-    public Status layout(Area area) throws FOPException {\n+    public int layout(Area area) throws FOPException {\n         // should always be overridden\n-        return new Status(Status.OK);\n+        return Status.OK;\n     }\n \n     /**\n@@ -132,7 +132,7 @@\n         idReferences.removeID(((FObj)this).properties.get(\"id\").getString());\n         int numChildren = this.children.size();\n         for (int i = 0; i < numChildren; i++) {\n-            FONode child = (FONode)children.elementAt(i);\n+            FONode child = (FONode)children.get(i);\n             if ((child instanceof FObj)) {\n                 ((FObj)child).removeID(idReferences);\n             }\n--- org__src\\org\\apache\\fop\\fo\\FObjMixed.java\tMon Oct 28 11:39:47 2002\n+++ src\\org\\apache\\fop\\fo\\FObjMixed.java\tMon Oct 28 11:39:47 2002\n@@ -53,7 +53,7 @@\n \n     }\n \n-    public Status layout(Area area) throws FOPException {\n+    public int layout(Area area) throws FOPException {\n \n         if (this.properties != null) {\n             Property prop = this.properties.get(\"id\");\n@@ -75,14 +75,14 @@\n \n         int numChildren = this.children.size();\n         for (int i = this.marker; i < numChildren; i++) {\n-            FONode fo = (FONode)children.elementAt(i);\n-            Status status;\n-            if ((status = fo.layout(area)).isIncomplete()) {\n+            FONode fo = (FONode)children.get(i);\n+            int status;\n+            if (Status.isIncomplete((status = fo.layout(area)))) {\n                 this.marker = i;\n                 return status;\n             }\n         }\n-        return new Status(Status.OK);\n+        return Status.OK;\n     }\n \n }\n--- org__src\\org\\apache\\fop\\fo\\FONode.java\tMon Oct 28 11:39:47 2002\n+++ src\\org\\apache\\fop\\fo\\FONode.java\tMon Oct 28 11:39:47 2002\n@@ -20,8 +20,8 @@\n import org.apache.avalon.framework.logger.Logger;\n \n // Java\n-import java.util.Vector;\n-import java.util.Hashtable;\n+import java.util.ArrayList;\n+import java.util.HashMap;\n \n /**\n  * base class for nodes in the formatting object tree\n@@ -41,7 +41,7 @@\n \n     public BufferManager bufferManager;\n \n-    protected Vector children = new Vector();    // made public for searching \nfor id's\n+    protected ArrayList children = new ArrayList();    // made public for \nsearching for id's\n \n     /**\n      * value of marker before layout begins\n@@ -74,7 +74,7 @@\n     public int areasGenerated = 0;\n \n     // markers\n-    protected Hashtable markers;\n+    protected HashMap markers;\n \n     protected Logger log;\n \n@@ -84,7 +84,7 @@\n             this.bufferManager = parent.bufferManager;\n         }\n \n-        markers = new Hashtable();\n+        markers = new HashMap();\n \n         if (null != parent)\n             this.areaClass = parent.areaClass;\n@@ -98,7 +98,7 @@\n         this.isInTableCell = true;\n         // made recursive by Eric Schaeffer\n         for (int i = 0; i < this.children.size(); i++) {\n-            FONode child = (FONode)this.children.elementAt(i);\n+            FONode child = (FONode)this.children.get(i);\n             child.setIsInTableCell();\n         }\n     }\n@@ -107,7 +107,7 @@\n         this.forcedStartOffset = offset;\n         // made recursive by Eric Schaeffer\n         for (int i = 0; i < this.children.size(); i++) {\n-            FONode child = (FONode)this.children.elementAt(i);\n+            FONode child = (FONode)this.children.get(i);\n             child.forceStartOffset(offset);\n         }\n     }\n@@ -116,7 +116,7 @@\n         this.forcedWidth = width;\n         // made recursive by Eric Schaeffer\n         for (int i = 0; i < this.children.size(); i++) {\n-            FONode child = (FONode)this.children.elementAt(i);\n+            FONode child = (FONode)this.children.get(i);\n             child.forceWidth(width);\n         }\n     }\n@@ -125,7 +125,7 @@\n         this.marker = START;\n         int numChildren = this.children.size();\n         for (int i = 0; i < numChildren; i++) {\n-            ((FONode)children.elementAt(i)).resetMarker();\n+            ((FONode)children.get(i)).resetMarker();\n         }\n     }\n \n@@ -143,7 +143,7 @@\n \n \n     protected void addChild(FONode child) {\n-        children.addElement(child);\n+        children.add(child);\n     }\n \n     public FObj getParent() {\n@@ -161,7 +161,7 @@\n     public void setLinkSet(LinkSet linkSet) {\n         this.linkSet = linkSet;\n         for (int i = 0; i < this.children.size(); i++) {\n-            FONode child = (FONode)this.children.elementAt(i);\n+            FONode child = (FONode)this.children.get(i);\n             child.setLinkSet(linkSet);\n         }\n     }\n@@ -170,7 +170,7 @@\n         return this.linkSet;\n     }\n \n-    abstract public Status layout(Area area) throws FOPException;\n+    abstract public int layout(Area area) throws FOPException;\n \n     /**\n      * lets outside sources access the property list\n@@ -190,8 +190,8 @@\n      * @param snapshot a Vector of markers (Integer)\n      * @returns the updated Vector of markers (Integers)\n      */\n-    public Vector getMarkerSnapshot(Vector snapshot) {\n-        snapshot.addElement(new Integer(this.marker));\n+    public ArrayList getMarkerSnapshot(ArrayList snapshot) {\n+        snapshot.add(new Integer(this.marker));\n \n         // terminate if no kids or child not yet accessed\n         if (this.marker < 0)\n@@ -199,7 +199,7 @@\n         else if (children.isEmpty())\n             return snapshot;\n         else\n-            return ((FONode)children.elementAt(this.marker)).getMarkerSnapshot\n(snapshot);\n+            return ((FONode)children.get(this.marker)).getMarkerSnapshot\n(snapshot);\n     }\n \n     /**\n@@ -208,9 +208,9 @@\n      * and restored using this method.\n      * @param snapshot the Vector of saved markers (Integers)\n      */\n-    public void rollback(Vector snapshot) {\n-        this.marker = ((Integer)snapshot.elementAt(0)).intValue();\n-        snapshot.removeElementAt(0);\n+    public void rollback(ArrayList snapshot) {\n+        this.marker = ((Integer)snapshot.get(0)).intValue();\n+        snapshot.remove(0);\n \n         if (this.marker == START) {\n             // make sure all the children of this FO are also reset\n@@ -226,10 +226,10 @@\n         }\n \n         for (int i = this.marker + 1; i < numChildren; i++) {\n-            FONode fo = (FONode)children.elementAt(i);\n+            FONode fo = (FONode)children.get(i);\n             fo.resetMarker();\n         }\n-        ((FONode)children.elementAt(this.marker)).rollback(snapshot);\n+        ((FONode)children.get(this.marker)).rollback(snapshot);\n     }\n \n \n@@ -249,8 +249,8 @@\n         return !markers.isEmpty();\n     }\n \n-    public Vector getMarkers() {\n-        return new Vector(markers.values());\n+    public ArrayList getMarkers() {\n+        return new ArrayList(markers.values());\n     }\n \n }\n--- org__src\\org\\apache\\fop\\fo\\FOText.java\tMon Oct 28 11:39:47 2002\n+++ src\\org\\apache\\fop\\fo\\FOText.java\tMon Oct 28 11:39:47 2002\n@@ -101,13 +101,13 @@\n         return false;\n     }\n \n-    public Status layout(Area area) throws FOPException {\n+    public int layout(Area area) throws FOPException {\n         // ML - remove refs to BufferManager\n         // char ca[] = this.bufferManager.readBuffer((Object)this);\n         if (!(area instanceof BlockArea)) {\n             log.error(\"text outside block area\"\n                       + new String(ca, start, length));\n-            return new Status(Status.OK);\n+            return Status.OK;\n         }\n         if (this.marker == START) {\n             String fontFamily =\n@@ -166,11 +166,11 @@\n             // see LineArea.addText()\n \n             // this.marker = 0;\n-            return new Status(Status.OK);\n+            return Status.OK;\n         } else if (this.marker != orig_start) {\n-            return new Status(Status.AREA_FULL_SOME);\n+            return Status.AREA_FULL_SOME;\n         } else {\n-            return new Status(Status.AREA_FULL_NONE);\n+            return Status.AREA_FULL_NONE;\n         }\n     }\n \n--- org__src\\org\\apache\\fop\\fo\\PropertyList.java\tMon Oct 28 11:39:50 2002\n+++ src\\org\\apache\\fop\\fo\\PropertyList.java\tMon Oct 28 11:39:50 2002\n@@ -7,12 +7,14 @@\n \n package org.apache.fop.fo;\n \n-import java.util.Hashtable;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.Iterator;\n import org.apache.fop.messaging.MessageHandler;\n import org.apache.fop.fo.properties.WritingMode;\n import org.apache.fop.apps.FOPException;\n \n-public class PropertyList extends Hashtable {\n+public class PropertyList extends HashMap {\n \n     private byte[] wmtable = null;    // writing-mode values\n     public static final int LEFT = 0;\n@@ -38,20 +40,22 @@\n                 \"inline-progression-dimension\"\n             };\n \n-    static private final Hashtable wmtables = new Hashtable(4);\n-    {\n-        wmtables.put(new Integer(WritingMode.LR_TB),    /* lr-tb */\n-                     new byte[] {\n-                         START, END, BEFORE, AFTER, BLOCKPROGDIM, INLINEPROGDIM\n-                     });\n-        wmtables.put(new Integer(WritingMode.RL_TB),    /* rl-tb */\n-                     new byte[] {\n-                         END, START, BEFORE, AFTER, BLOCKPROGDIM, INLINEPROGDIM\n-                     });\n-        wmtables.put(new Integer(WritingMode.TB_RL),    /* tb-rl */\n-                     new byte[] {\n-                         AFTER, BEFORE, START, END, INLINEPROGDIM, BLOCKPROGDIM\n-                     });\n+    static private final byte[][] wmtables;\n+    static{\n+        int i = Math.max( Math.max( WritingMode.LR_TB, WritingMode.RL_TB), \nWritingMode.TB_RL)+1;\n+        wmtables = new byte[i][];\n+        wmtables[ WritingMode.LR_TB] =    /* lr-tb */\n+            new byte[] {\n+                START, END, BEFORE, AFTER, BLOCKPROGDIM, INLINEPROGDIM\n+            };\n+        wmtables[ WritingMode.RL_TB] =     /* rl-tb */\n+            new byte[] {\n+                END, START, BEFORE, AFTER, BLOCKPROGDIM, INLINEPROGDIM\n+            };\n+        wmtables[ WritingMode.TB_RL] =     /* tb-rl */\n+            new byte[] {\n+                AFTER, BEFORE, START, END, INLINEPROGDIM, BLOCKPROGDIM\n+            };\n     }\n \n     private PropertyListBuilder builder;\n@@ -366,7 +370,7 @@\n      * Set the writing mode traits for the FO with this property list.\n      */\n     public void setWritingMode(int writingMode) {\n-        this.wmtable = (byte[])wmtables.get(new Integer(writingMode));\n+        this.wmtable = wmtables[writingMode];\n     }\n \n }\n--- org__src\\org\\apache\\fop\\fo\\PropertyManager.java\tMon Oct 28 11:39:51 2002\n+++ src\\org\\apache\\fop\\fo\\PropertyManager.java\tMon Oct 28 11:39:51 2002\n@@ -6,7 +6,7 @@\n  */\n \n package org.apache.fop.fo;\n-\n+import java.lang.StringBuffer;\n import java.net.MalformedURLException;\n import java.text.FieldPosition;\n import java.text.MessageFormat;\n@@ -47,15 +47,6 @@\n     private String[] saTop;\n     private String[] saBottom;\n \n-    private static MessageFormat msgColorFmt =\n-        new MessageFormat(\"border-{0}-color\");\n-    private static MessageFormat msgStyleFmt =\n-        new MessageFormat(\"border-{0}-style\");\n-    private static MessageFormat msgWidthFmt =\n-        new MessageFormat(\"border-{0}-width\");\n-    private static MessageFormat msgPaddingFmt =\n-        new MessageFormat(\"padding-{0}\");\n-\n     public PropertyManager(PropertyList pList) {\n         this.properties = pList;\n     }\n@@ -103,14 +94,40 @@\n \n     private void initBorderInfo(int whichSide, String[] saSide) {\n         borderAndPadding.setPadding(whichSide,\n-                                    properties.get(msgPaddingFmt.format\n(saSide)).getCondLength());\n+                                    properties.get(formatPadding\n(saSide)).getCondLength());\n+\n         // If style = none, force width to 0, don't get Color\n-        int style = properties.get(msgStyleFmt.format(saSide)).getEnum();\n+        int style = properties.get(formatStyle(saSide)).getEnum();\n         if (style != Constants.NONE) {\n             borderAndPadding.setBorder(whichSide, style,\n-                                       properties.get(msgWidthFmt.format\n(saSide)).getCondLength(),\n-                                       properties.get(msgColorFmt.format\n(saSide)).getColorType());\n+                                       properties.get(formatWidth\n(saSide)).getCondLength(),\n+                                       properties.get(formatColor\n(saSide)).getColorType());\n         }\n+    }\n+\n+    private static final String padding = new String(\"padding-\");\n+    private static final String border  = new String(\"border-\");\n+    private static final String width   = new String(\"-width\");\n+    private static final String color\t = new String(\"-color\");\n+    private static final String style\t = new String(\"-style\");\n+\n+    private String formatPadding(String[] saSide) {\n+        StringBuffer sb = new StringBuffer(14);\n+        return sb.append(padding).append(saSide[0]).toString();\n+    }\n+\n+    private String formatColor(String[] saSide) {\n+        StringBuffer sb = new StringBuffer(19);\n+        return sb.append(border).append(saSide[0]).append(color).toString();\n+    }\n+    private String formatWidth(String[] saSide) {\n+        StringBuffer sb = new StringBuffer(19);\n+        return sb.append(border).append(saSide[0]).append(width).toString();\n+    }\n+\n+    private String formatStyle(String[] saSide) {\n+        StringBuffer sb = new StringBuffer(19);\n+        return sb.append(border).append(saSide[0]).append(style).toString();\n     }\n \n     public HyphenationProps getHyphenationProps() {\n--- org__src\\org\\apache\\fop\\fo\\Status.java\tMon Oct 28 11:39:51 2002\n+++ src\\org\\apache\\fop\\fo\\Status.java\tMon Oct 28 11:39:51 2002\n@@ -10,9 +10,7 @@\n /**\n  * classes representating the status of laying out a formatting object\n  */\n-public class Status {\n-\n-    protected int code;\n+public abstract class Status {\n \n     public final static int OK = 1;\n     public final static int AREA_FULL_NONE = 2;\n@@ -23,26 +21,21 @@\n     public final static int FORCE_COLUMN_BREAK = 7;\n     public final static int KEEP_WITH_NEXT = 8;\n \n-    public Status(int code) {\n-        this.code = code;\n-    }\n-\n-    public int getCode() {\n-        return this.code;\n+    public static boolean isIncomplete(int code) {\n+        return ((code != OK) && (code != KEEP_WITH_NEXT));\n     }\n \n-    public boolean isIncomplete() {\n-        return ((this.code != OK) && (this.code != KEEP_WITH_NEXT));\n+    public static boolean laidOutNone(int code) {\n+        return (code == AREA_FULL_NONE);\n     }\n \n-    public boolean laidOutNone() {\n-        return (this.code == AREA_FULL_NONE);\n+    public static boolean isPageBreak(int code) {\n+        switch( code) {\n+        case FORCE_PAGE_BREAK:\n+        case FORCE_PAGE_BREAK_EVEN:\n+        case FORCE_PAGE_BREAK_ODD:\n+            return true;\n+        }\n+        return false;\n     }\n-\n-    public boolean isPageBreak() {\n-        return ((this.code == FORCE_PAGE_BREAK)\n-                || (this.code == FORCE_PAGE_BREAK_EVEN)\n-                || (this.code == FORCE_PAGE_BREAK_ODD));\n-    }\n-\n }\n--- org__src\\org\\apache\\fop\\fo\\Title.java\tMon Oct 28 11:39:52 2002\n+++ src\\org\\apache\\fop\\fo\\Title.java\tMon Oct 28 11:39:52 2002\n@@ -8,7 +8,6 @@\n package org.apache.fop.fo;\n \n // FOP\n-import org.apache.fop.fo.*;\n import org.apache.fop.datatypes.*;\n import org.apache.fop.layout.*;\n import org.apache.fop.fo.flow.*;\n@@ -38,7 +37,7 @@\n         this.name = \"fo:title\";\n     }\n \n-    public Status layout(Area area) throws FOPException {\n+    public int layout(Area area) throws FOPException {\n \n         // Common Accessibility Properties\n         AccessibilityProps mAccProps = propMgr.getAccessibilityProps();\n--- org__src\\org\\apache\\fop\\fo\\ToBeImplementedElement.java\tMon Oct 28 \n11:39:52 2002\n+++ src\\org\\apache\\fop\\fo\\ToBeImplementedElement.java\tMon Oct 28 11:39:52 2002\n@@ -8,7 +8,6 @@\n package org.apache.fop.fo;\n \n // FOP\n-import org.apache.fop.fo.*;\n import org.apache.fop.fo.flow.*;\n import org.apache.fop.fo.properties.*;\n import org.apache.fop.layout.Area;\n@@ -23,10 +22,10 @@\n         super(parent, propertyList);\n     }\n \n-    public Status layout(Area area) throws FOPException {\n+    public int layout(Area area) throws FOPException {\n         log.debug(\"This element \\\"\" + this.name\n                   + \"\\\" is not yet implemented.\");\n-        return new Status(Status.OK);\n+        return Status.OK;\n     }\n \n }\n--- org__src\\org\\apache\\fop\\fo\\Unknown.java\tMon Oct 28 11:39:52 2002\n+++ src\\org\\apache\\fop\\fo\\Unknown.java\tMon Oct 28 11:39:52 2002\n@@ -8,7 +8,7 @@\n package org.apache.fop.fo;\n \n // FOP\n-import org.apache.fop.fo.*;\n+//import org.apache.fop.fo.*;\n import org.apache.fop.layout.*;\n import org.apache.fop.fo.flow.*;\n import org.apache.fop.fo.properties.*;\n@@ -41,8 +41,8 @@\n         this.name = \"unknown\";\n     }\n \n-    public Status layout(Area area) throws FOPException {\n+    public int layout(Area area) throws FOPException {\n         log.debug(\"Layout Unknown element\");\n-        return new Status(Status.OK);\n+        return Status.OK;\n     }\n }\n--- org__src\\org\\apache\\fop\\fo\\UnknownXMLObj.java\tMon Oct 28 11:39:53 2002\n+++ src\\org\\apache\\fop\\fo\\UnknownXMLObj.java\tMon Oct 28 11:39:52 2002\n@@ -7,7 +7,7 @@\n \n package org.apache.fop.fo;\n \n-import org.apache.fop.fo.*;\n+//import org.apache.fop.fo.*;\n import org.apache.fop.layout.Area;\n import org.apache.fop.layout.FontState;\n import org.apache.fop.layout.inline.*;\n@@ -87,7 +87,7 @@\n         super.addCharacters(data, start, length);\n     }\n \n-    public Status layout(Area area) throws FOPException {\n+    public int layout(Area area) throws FOPException {\n         //if (!(area instanceof ForeignObjectArea)) {\n         // this is an error\n         //throw new FOPException(\"Foreign XML not in fo:instream-foreign-\nobject\");\n@@ -95,7 +95,7 @@\n         log.error(\"no handler defined for \" + this.name + \" foreign xml\");\n \n         /* return status */\n-        return new Status(Status.OK);\n+        return Status.OK;\n     }\n }\n \n--- org__src\\org\\apache\\fop\\fo\\XMLElement.java\tMon Oct 28 11:39:53 2002\n+++ src\\org\\apache\\fop\\fo\\XMLElement.java\tMon Oct 28 11:39:53 2002\n@@ -70,7 +70,7 @@\n      *\n      * @return the status of the layout\n      */\n-    public Status layout(final Area area) throws FOPException {\n+    public int layout(final Area area) throws FOPException {\n \n         if (!(area instanceof ForeignObjectArea)) {\n             // this is an error\n@@ -78,7 +78,7 @@\n         }\n \n         /* return status */\n-        return new Status(Status.OK);\n+        return Status.OK;\n     }\n \n     private void init() {\n--- org__src\\org\\apache\\fop\\fo\\XMLObj.java\tMon Oct 28 11:39:53 2002\n+++ src\\org\\apache\\fop\\fo\\XMLObj.java\tMon Oct 28 11:39:53 2002\n@@ -8,7 +8,7 @@\n package org.apache.fop.fo;\n \n // FOP\n-import org.apache.fop.fo.*;\n+//import org.apache.fop.fo.*;\n import org.apache.fop.layout.Area;\n import org.apache.fop.layout.FontState;\n import org.apache.fop.apps.FOPException;\n@@ -137,12 +137,12 @@\n      * @param area the area to layout the object into\n      * @return the status of the layout\n      */\n-    public Status layout(Area area) throws FOPException {\n+    public int layout(Area area) throws FOPException {\n         /* generate a warning */\n         log.error(\"\" + this.name + \" outside foreign xml\");\n \n         /* return status */\n-        return new Status(Status.OK);\n+        return Status.OK;\n     }\n \n     public void removeID(IDReferences idReferences) {}\n--- org__src\\org\\apache\\fop\\fo\\expr\\PropertyTokenizer.java\tMon Oct 28 \n11:39:58 2002\n+++ src\\org\\apache\\fop\\fo\\expr\\PropertyTokenizer.java\tMon Oct 28 11:39:58 2002\n@@ -282,12 +282,23 @@\n         return false;\n     }\n \n-\n-    static private final String nameStartChars =\n-        \"_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n-    static private final String nameChars = \".-0123456789\";\n-    static private final String digits = \"0123456789\";\n-    static private final String hexchars = digits + \"abcdefABCDEF\";\n+    static private final int CS = 1, nameStartChars = \n1; // \"_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n+    static private final int C = 2, nameChars = 2; //\".-0123456789\";\n+    static private final int D = 4, digits = 4; //\"0123456789\";\n+    static private final int H = 8, hexchars = 8; //digits + \"abcdefABCDEF\";\n+    static private final int C_CS = C + CS;\n+\n+\n+    static private final int charMap[] = {\n+                                             0,0,0,0, 0,0,0,0, 0,0,0,0, \n0,0,0,0, //0x00\n+                                             0,0,0,0, 0,0,0,0, 0,0,0,0, \n0,0,0,0, //0x10\n+                                             0,0,0,0, 0,0,0,0, 0,0,0,0, \n0,C,C,0, //0x20\n+                                             C+D+H,C+D+H,C+D+H,C+D+H, \nC+D+H,C+D+H,C+D+H,C+D+H, C+D+H,C+D+H,0,0, 0,0,0,0, //0x30\n+                                             0,CS+H,CS+H,CS+H, \nCS+H,CS+H,CS+H,CS, CS,CS,CS,CS, CS,CS,CS,CS, //0x40\n+                                             CS,CS,CS,CS, CS,CS,CS,CS, \nCS,CS,CS,0, 0,0,0,CS,  //0x50\n+                                             0,CS+H,CS+H,CS+H, \nCS+H,CS+H,CS+H,CS, CS,CS,CS,CS, CS,CS,CS,CS, //0x60\n+                                             CS,CS,CS,CS, CS,CS,CS,CS, \nCS,CS,CS,0, 0,0,0,0  //0x70\n+                                         };\n \n     /**\n      * Return a boolean value indicating whether the argument is a\n@@ -295,7 +306,7 @@\n      * @param c The character to check\n      */\n     private static final boolean isDigit(char c) {\n-        return digits.indexOf(c) >= 0;\n+        return c > 0 && c < 128 && (charMap[ c] & digits) != 0;\n     }\n \n     /**\n@@ -304,7 +315,8 @@\n      * @param c The character to check\n      */\n     private static final boolean isHexDigit(char c) {\n-        return hexchars.indexOf(c) >= 0;\n+        return c > 0 && c < 128 && (charMap[ c] & hexchars) != 0;\n+        //return hexchars.indexOf(c) >= 0;\n     }\n \n     /**\n@@ -329,7 +341,8 @@\n      * @param c The character to check\n      */\n     private static final boolean isNameStartChar(char c) {\n-        return nameStartChars.indexOf(c) >= 0 || c >= 0x80;\n+        return c >= 0x80 || c < 0 || (charMap[ c] & nameStartChars) != 0;\n+        //return nameStartChars.indexOf(c) >= 0 || c >= 0x80;\n     }\n \n     /**\n@@ -338,8 +351,8 @@\n      * @param c The character to check\n      */\n     private static final boolean isNameChar(char c) {\n-        return nameStartChars.indexOf(c) >= 0 || nameChars.indexOf(c) >= 0\n-               || c >= 0x80;\n+        return c > 0x80 || c < 0 || (charMap[ c] & C_CS) != 0;\n+        //return nameStartChars.indexOf(c) >= 0 || nameChars.indexOf(c) >= 0 \n|| c >= 0x80;\n     }\n \n }\n--- org__src\\org\\apache\\fop\\fo\\flow\\BasicLink.java\tMon Oct 28 11:39:59 2002\n+++ src\\org\\apache\\fop\\fo\\flow\\BasicLink.java\tMon Oct 28 11:39:59 2002\n@@ -38,7 +38,7 @@\n         this.name = \"fo:basic-link\";\n     }\n \n-    public Status layout(Area area) throws FOPException {\n+    public int layout(Area area) throws FOPException {\n         String destination;\n         int linkType;\n \n@@ -106,11 +106,11 @@\n \n         int numChildren = this.children.size();\n         for (int i = this.marker; i < numChildren; i++) {\n-            FONode fo = (FONode)children.elementAt(i);\n+            FONode fo = (FONode)children.get(i);\n             fo.setLinkSet(ls);\n \n-            Status status;\n-            if ((status = fo.layout(area)).isIncomplete()) {\n+            int status;\n+            if (Status.isIncomplete((status = fo.layout(area)))) {\n                 this.marker = i;\n                 return status;\n             }\n@@ -126,7 +126,7 @@\n \n         p.addLinkSet(ls);\n \n-        return new Status(Status.OK);\n+        return Status.OK;\n     }\n \n }\n--- org__src\\org\\apache\\fop\\fo\\flow\\BidiOverride.java\tMon Oct 28 11:39:59 2002\n+++ src\\org\\apache\\fop\\fo\\flow\\BidiOverride.java\tMon Oct 28 11:39:59 2002\n@@ -10,7 +10,7 @@\n // FOP\n import org.apache.fop.fo.*;\n import org.apache.fop.layout.*;\n-import org.apache.fop.fo.flow.*;\n+//import org.apache.fop.fo.flow.*;\n import org.apache.fop.fo.properties.*;\n import org.apache.fop.layout.AreaTree;\n import org.apache.fop.apps.FOPException;\n@@ -37,7 +37,7 @@\n         this.name = \"fo:bidi-override\";\n     }\n \n-    public Status layout(Area area) throws FOPException {\n+    public int layout(Area area) throws FOPException {\n \n         // Common Aural Properties\n         AuralProps mAurProps = propMgr.getAuralProps();\n--- org__src\\org\\apache\\fop\\fo\\flow\\Block.java\tMon Oct 28 11:40:00 2002\n+++ src\\org\\apache\\fop\\fo\\flow\\Block.java\tMon Oct 28 11:39:59 2002\n@@ -74,14 +74,14 @@\n         ts = propMgr.getTextDecoration(parent);\n     }\n \n-    public Status layout(Area area) throws FOPException {\n+    public int layout(Area area) throws FOPException {\n         BlockArea blockArea;\n \n         // log.error(\" b:LAY[\" + marker + \"] \");\n \n \n         if (this.marker == BREAK_AFTER) {\n-            return new Status(Status.OK);\n+            return Status.OK;\n         }\n \n         if (this.marker == START) {\n@@ -176,18 +176,18 @@\n             // area\n             int breakBeforeStatus = propMgr.checkBreakBefore(area);\n             if (breakBeforeStatus != Status.OK) {\n-                return new Status(breakBeforeStatus);\n+                return breakBeforeStatus;\n             }\n \n             int numChildren = this.children.size();\n             for (int i = 0; i < numChildren; i++) {\n-                FONode fo = (FONode)children.elementAt(i);\n+                FONode fo = (FONode)children.get(i);\n                 if (fo instanceof FOText) {\n                     if (((FOText)fo).willCreateArea()) {\n                         fo.setWidows(blockWidows);\n                         break;\n                     } else {\n-                        children.removeElementAt(i);\n+                        children.remove(i);\n                         numChildren = this.children.size();\n                         i--;\n                     }\n@@ -198,7 +198,7 @@\n             }\n \n             for (int i = numChildren - 1; i >= 0; i--) {\n-                FONode fo = (FONode)children.elementAt(i);\n+                FONode fo = (FONode)children.get(i);\n                 if (fo instanceof FOText) {\n                     if (((FOText)fo).willCreateArea()) {\n                         fo.setOrphans(blockOrphans);\n@@ -238,7 +238,7 @@\n \n         // markers\n         if (this.hasMarkers())\n-            blockArea.addMarkers(this.getMarkers());\n+            blockArea.addMarkers( this.getMarkers());\n \n         blockArea.setParent(area);    // BasicLink needs it\n         blockArea.setPage(area.getPage());\n@@ -254,9 +254,9 @@\n \n         int numChildren = this.children.size();\n         for (int i = this.marker; i < numChildren; i++) {\n-            FONode fo = (FONode)children.elementAt(i);\n-            Status status;\n-            if ((status = fo.layout(blockArea)).isIncomplete()) {\n+            FONode fo = (FONode)children.get(i);\n+            int status;\n+            if (Status.isIncomplete((status = fo.layout(blockArea)))) {\n                 this.marker = i;\n                 // this block was modified by\n                 // Hani Elabed 11/27/2000\n@@ -267,10 +267,10 @@\n \n                 // new block to replace the one above\n                 // Hani Elabed 11/27/2000\n-                if (status.getCode() == Status.AREA_FULL_NONE) {\n+                if (status == Status.AREA_FULL_NONE) {\n                     // something has already been laid out\n                     if ((i != 0)) {\n-                        status = new Status(Status.AREA_FULL_SOME);\n+                        status = Status.AREA_FULL_SOME;\n                         area.addChild(blockArea);\n                         area.setMaxHeight(area.getMaxHeight() - spaceLeft\n                                           + blockArea.getMaxHeight());\n@@ -328,18 +328,18 @@\n         if (breakAfterStatus != Status.OK) {\n             this.marker = BREAK_AFTER;\n             blockArea = null; //Faster GC - BlockArea is big\n-            return new Status(breakAfterStatus);\n+            return breakAfterStatus;\n         }\n \n         if (keepWithNext != 0) {\n             blockArea = null; // Faster GC - BlockArea is big\n-            return new Status(Status.KEEP_WITH_NEXT);\n+            return Status.KEEP_WITH_NEXT;\n         }\n \n         // log.error(\" b:OK\" + marker + \" \");\n         blockArea.isLast(true);\n         blockArea = null; // Faster GC - BlockArea is big\n-        return new Status(Status.OK);\n+        return Status.OK;\n     }\n \n     public int getAreaHeight() {\n--- org__src\\org\\apache\\fop\\fo\\flow\\BlockContainer.java\tMon Oct 28 11:40:00 2002\n+++ src\\org\\apache\\fop\\fo\\flow\\BlockContainer.java\tMon Oct 28 11:40:00 2002\n@@ -55,7 +55,7 @@\n         this.span = this.properties.get(\"span\").getEnum();\n     }\n \n-    public Status layout(Area area) throws FOPException {\n+    public int layout(Area area) throws FOPException {\n         if (this.marker == START) {\n \n             // Common Accessibility Properties\n@@ -124,13 +124,13 @@\n \n         int numChildren = this.children.size();\n         for (int i = this.marker; i < numChildren; i++) {\n-            FObj fo = (FObj)children.elementAt(i);\n-            Status status;\n-            if ((status = fo.layout(areaContainer)).isIncomplete()) {\n+            FObj fo = (FObj)children.get(i);\n+            int status;\n+            if (Status.isIncomplete((status = fo.layout(areaContainer)))) {\n                 /*\n                  * if ((prevChildMustKeepWithNext) && (status.laidOutNone())) {\n                  * this.marker = i - 1;\n-                 * FObj prevChild = (FObj) children.elementAt(this.marker);\n+                 * FObj prevChild = (FObj) children.get(this.marker);\n                  * prevChild.removeAreas();\n                  * prevChild.resetMarker();\n                  * return new Status(Status.AREA_FULL_SOME);\n@@ -142,7 +142,7 @@\n                  * }\n                  */\n             }\n-            if (status.getCode() == Status.KEEP_WITH_NEXT) {\n+            if (status == Status.KEEP_WITH_NEXT) {\n                 prevChildMustKeepWithNext = true;\n             }\n         }\n@@ -153,7 +153,7 @@\n             areaContainer.setHeight(height);\n         area.addChild(areaContainer);\n \n-        return new Status(Status.OK);\n+        return Status.OK;\n     }\n \n     /**\n--- org__src\\org\\apache\\fop\\fo\\flow\\Character.java\tMon Oct 28 11:40:00 2002\n+++ src\\org\\apache\\fop\\fo\\flow\\Character.java\tMon Oct 28 11:40:00 2002\n@@ -56,11 +56,11 @@\n     }\n \n \n-    public Status layout(Area area) throws FOPException {\n+    public int layout(Area area) throws FOPException {\n         BlockArea blockArea;\n         if (!(area instanceof BlockArea)) {\n             log.warn(\"currently Character can only be in a BlockArea\");\n-            return new Status(Status.OK);\n+            return Status.OK;\n         }\n         blockArea = (BlockArea)area;\n         boolean textDecoration;\n@@ -135,7 +135,7 @@\n \n         LineArea la = blockArea.getCurrentLineArea();\n         if (la == null) {\n-            return new Status(Status.AREA_FULL_NONE);\n+            return Status.AREA_FULL_NONE;\n         }\n         la.changeFont(propMgr.getFontState(area.getFontInfo()));\n         la.changeColor(red, green, blue);\n@@ -147,7 +147,7 @@\n         if (result == Character.DOESNOT_FIT) {\n             la = blockArea.createNextLineArea();\n             if (la == null) {\n-                return new Status(Status.AREA_FULL_NONE);\n+                return Status.AREA_FULL_NONE;\n             }\n             la.changeFont(propMgr.getFontState(area.getFontInfo()));\n             la.changeColor(red, green, blue);\n@@ -157,7 +157,7 @@\n             la.addCharacter(characterValue, this.getLinkSet(),\n                             textDecoration);\n         }\n-        return new Status(Status.OK);\n+        return Status.OK;\n \n     }\n \n--- org__src\\org\\apache\\fop\\fo\\flow\\ExternalGraphic.java\tMon Oct 28 \n11:40:00 2002\n+++ src\\org\\apache\\fop\\fo\\flow\\ExternalGraphic.java\tMon Oct 28 11:40:00 2002\n@@ -43,7 +43,7 @@\n     }\n \n \n-    public Status layout(Area area) throws FOPException {\n+    public int layout(Area area) throws FOPException {\n \n         if (this.marker == START) {\n \n@@ -155,7 +155,7 @@\n             }\n \n             if (area.spaceLeft() < (height + spaceBefore)) {\n-                return new Status(Status.AREA_FULL_NONE);\n+                return Status.AREA_FULL_NONE;\n             }\n \n             this.imageArea =\n@@ -183,15 +183,15 @@\n             if (breakBefore == BreakBefore.PAGE\n                     || ((spaceBefore + imageArea.getHeight())\n                         > area.spaceLeft())) {\n-                return new Status(Status.FORCE_PAGE_BREAK);\n+                return Status.FORCE_PAGE_BREAK;\n             }\n \n             if (breakBefore == BreakBefore.ODD_PAGE) {\n-                return new Status(Status.FORCE_PAGE_BREAK_ODD);\n+                return Status.FORCE_PAGE_BREAK_ODD;\n             }\n \n             if (breakBefore == BreakBefore.EVEN_PAGE) {\n-                return new Status(Status.FORCE_PAGE_BREAK_EVEN);\n+                return Status.FORCE_PAGE_BREAK_EVEN;\n             }\n \n \n@@ -199,13 +199,13 @@\n                 BlockArea ba = (BlockArea)area;\n                 LineArea la = ba.getCurrentLineArea();\n                 if (la == null) {\n-                    return new Status(Status.AREA_FULL_NONE);\n+                    return Status.AREA_FULL_NONE;\n                 }\n                 la.addPending();\n                 if (imageArea.getContentWidth() > la.getRemainingWidth()) {\n                     la = ba.createNextLineArea();\n                     if (la == null) {\n-                        return new Status(Status.AREA_FULL_NONE);\n+                        return Status.AREA_FULL_NONE;\n                     }\n                 }\n                 la.addInlineArea(imageArea);\n@@ -217,17 +217,17 @@\n \n             if (breakAfter == BreakAfter.PAGE) {\n                 this.marker = BREAK_AFTER;\n-                return new Status(Status.FORCE_PAGE_BREAK);\n+                return Status.FORCE_PAGE_BREAK;\n             }\n \n             if (breakAfter == BreakAfter.ODD_PAGE) {\n                 this.marker = BREAK_AFTER;\n-                return new Status(Status.FORCE_PAGE_BREAK_ODD);\n+                return Status.FORCE_PAGE_BREAK_ODD;\n             }\n \n             if (breakAfter == BreakAfter.EVEN_PAGE) {\n                 this.marker = BREAK_AFTER;\n-                return new Status(Status.FORCE_PAGE_BREAK_EVEN);\n+                return Status.FORCE_PAGE_BREAK_EVEN;\n             }\n \n \n@@ -248,7 +248,7 @@\n         // area.start();\n         // }\n \n-        return new Status(Status.OK);\n+        return Status.OK;\n     }\n \n \n--- org__src\\org\\apache\\fop\\fo\\flow\\Float.java\tMon Oct 28 11:40:00 2002\n+++ src\\org\\apache\\fop\\fo\\flow\\Float.java\tMon Oct 28 11:40:00 2002\n@@ -9,7 +9,7 @@\n \n // FOP\n import org.apache.fop.fo.*;\n-import org.apache.fop.fo.flow.*;\n+//import org.apache.fop.fo.flow.*;\n import org.apache.fop.fo.properties.*;\n import org.apache.fop.layout.*;\n import org.apache.fop.apps.FOPException;\n@@ -36,7 +36,7 @@\n         this.name = \"fo:float\";\n     }\n \n-    public Status layout(Area area) throws FOPException {\n+    public int layout(Area area) throws FOPException {\n \n         // this.properties.get(\"float\");\n         // this.properties.get(\"clear\");\n--- org__src\\org\\apache\\fop\\fo\\flow\\Flow.java\tMon Oct 28 11:40:01 2002\n+++ src\\org\\apache\\fop\\fo\\flow\\Flow.java\tMon Oct 28 11:40:01 2002\n@@ -17,8 +17,8 @@\n \n // Java\n import java.util.Hashtable;\n-import java.util.Enumeration;\n-import java.util.Vector;\n+import java.util.Iterator;\n+import java.util.ArrayList;\n \n public class Flow extends FObj {\n \n@@ -47,7 +47,7 @@\n     /**\n      * Vector to store snapshot\n      */\n-    private Vector markerSnapshot;\n+    private ArrayList markerSnapshot;\n \n     /**\n      * flow-name attribute\n@@ -59,7 +59,7 @@\n      */\n     private int contentWidth;\n \n-    private Status _status = new Status(Status.AREA_FULL_NONE);\n+    private int _status = Status.AREA_FULL_NONE;\n \n \n     protected Flow(FObj parent,\n@@ -109,12 +109,12 @@\n         return _flowName;\n     }\n \n-    public Status layout(Area area) throws FOPException {\n+    public int layout(Area area) throws FOPException {\n         return layout(area, null);\n \n     }\n \n-    public Status layout(Area area, Region region) throws FOPException {\n+    public int layout(Area area, Region region) throws FOPException {\n         if (this.marker == START) {\n             this.marker = 0;\n         }\n@@ -123,14 +123,14 @@\n         BodyAreaContainer bac = (BodyAreaContainer)area;\n \n         boolean prevChildMustKeepWithNext = false;\n-        Vector pageMarker = this.getMarkerSnapshot(new Vector());\n+        ArrayList pageMarker = this.getMarkerSnapshot(new ArrayList());\n \n         int numChildren = this.children.size();\n         if (numChildren == 0) {\n             throw new FOPException(\"fo:flow must contain block-level \nchildren\");\n         }\n         for (int i = this.marker; i < numChildren; i++) {\n-            FObj fo = (FObj)children.elementAt(i);\n+            FObj fo = (FObj)children.get(i);\n \n             if (bac.isBalancingRequired(fo)) {\n                 // reset the the just-done span area in preparation\n@@ -148,7 +148,7 @@\n             currentArea.setIDReferences(bac.getIDReferences());\n             if (bac.isNewSpanArea()) {\n                 this.marker = i;\n-                markerSnapshot = this.getMarkerSnapshot(new Vector());\n+                markerSnapshot = this.getMarkerSnapshot(new ArrayList());\n             }\n             // Set current content width for percent-based lengths in children\n             setContentWidth(currentArea.getContentWidth());\n@@ -165,23 +165,22 @@\n              * continue;\n              * }\n              */\n-            if (_status.isIncomplete()) {\n-                if ((prevChildMustKeepWithNext) && (_status.laidOutNone())) {\n+            if (Status.isIncomplete(_status)) {\n+                if ((prevChildMustKeepWithNext) && (Status.laidOutNone\n(_status))) {\n                     this.marker = i - 1;\n-                    FObj prevChild = (FObj)children.elementAt(this.marker);\n+                    FObj prevChild = (FObj)children.get(this.marker);\n                     prevChild.removeAreas();\n                     prevChild.resetMarker();\n                     prevChild.removeID(area.getIDReferences());\n-                    _status = new Status(Status.AREA_FULL_SOME);\n+                    _status = Status.AREA_FULL_SOME;\n                     return _status;\n                     // should probably return AREA_FULL_NONE if first\n                     // or perhaps an entirely new status code\n                 }\n                 if (bac.isLastColumn())\n-                    if (_status.getCode() == Status.FORCE_COLUMN_BREAK) {\n+                    if (_status == Status.FORCE_COLUMN_BREAK) {\n                         this.marker = i;\n-                        _status =\n-                            new Status(Status.FORCE_PAGE_BREAK);    // same \nthing\n+                        _status = Status.FORCE_PAGE_BREAK;    // same thing\n                         return _status;\n                     } else {\n                         this.marker = i;\n@@ -189,7 +188,7 @@\n                     }\n                 else {\n                     // not the last column, but could be page breaks\n-                    if (_status.isPageBreak()) {\n+                    if (Status.isPageBreak(_status)) {\n                         this.marker = i;\n                         return _status;\n                     }\n@@ -198,7 +197,7 @@\n                     i--;\n                 }\n             }\n-            if (_status.getCode() == Status.KEEP_WITH_NEXT) {\n+            if (_status == Status.KEEP_WITH_NEXT) {\n                 prevChildMustKeepWithNext = true;\n             } else {\n                 prevChildMustKeepWithNext = false;\n@@ -222,7 +221,7 @@\n         return \"fo:flow\";\n     }\n \n-    public Status getStatus() {\n+    public int getStatus() {\n         return _status;\n     }\n \n--- org__src\\org\\apache\\fop\\fo\\flow\\Footnote.java\tMon Oct 28 11:40:01 2002\n+++ src\\org\\apache\\fop\\fo\\flow\\Footnote.java\tMon Oct 28 11:40:01 2002\n@@ -15,8 +15,8 @@\n import org.apache.fop.messaging.*;\n \n // Java\n-import java.util.Enumeration;\n-import java.util.Vector;\n+import java.util.Iterator;\n+import java.util.ArrayList;\n \n public class Footnote extends FObj {\n \n@@ -38,7 +38,7 @@\n         this.name = \"fo:footnote\";\n     }\n \n-    public Status layout(Area area) throws FOPException {\n+    public int layout(Area area) throws FOPException {\n         FONode inline = null;\n         FONode fbody = null;\n         if (this.marker == START) {\n@@ -46,11 +46,11 @@\n         }\n         int numChildren = this.children.size();\n         for (int i = this.marker; i < numChildren; i++) {\n-            FONode fo = (FONode)children.elementAt(i);\n+            FONode fo = (FONode)children.get(i);\n             if (fo instanceof Inline) {\n                 inline = fo;\n-                Status status = fo.layout(area);\n-                if (status.isIncomplete()) {\n+                int status = fo.layout(area);\n+                if (Status.isIncomplete(status)) {\n                     return status;\n                 }\n             } else if (inline != null && fo instanceof FootnoteBody) {\n@@ -68,7 +68,7 @@\n             log.error(\"no footnote-body in footnote\");\n         }\n         if (area instanceof BlockArea) {}\n-        return new Status(Status.OK);\n+        return Status.OK;\n     }\n \n     public static boolean layoutFootnote(Page p, FootnoteBody fb, Area area) {\n@@ -86,8 +86,8 @@\n                 footArea.setMaxHeight(bac.getMaxHeight()\n                                       + footArea.getHeight());\n             }\n-            Status status = fb.layout(footArea);\n-            if (status.isIncomplete()) {\n+            int status = fb.layout(footArea);\n+            if (Status.isIncomplete(status)) {\n                 // add as a pending footnote\n                 return false;\n             } else {\n@@ -110,9 +110,9 @@\n \n     protected static void decreaseMaxHeight(Area ar, int change) {\n         ar.setMaxHeight(ar.getMaxHeight() - change);\n-        Vector childs = ar.getChildren();\n-        for (Enumeration en = childs.elements(); en.hasMoreElements(); ) {\n-            Object obj = en.nextElement();\n+        ArrayList childs = ar.getChildren();\n+        for (Iterator en = childs.iterator(); en.hasNext(); ) {\n+            Object obj = en.next();\n             if (obj instanceof Area) {\n                 Area childArea = (Area)obj;\n                 decreaseMaxHeight(childArea, change);\n--- org__src\\org\\apache\\fop\\fo\\flow\\FootnoteBody.java\tMon Oct 28 11:40:01 2002\n+++ src\\org\\apache\\fop\\fo\\flow\\FootnoteBody.java\tMon Oct 28 11:40:01 2002\n@@ -46,7 +46,7 @@\n         this.areaClass = AreaClass.setAreaClass(AreaClass.XSL_FOOTNOTE);\n     }\n \n-    public Status layout(Area area) throws FOPException {\n+    public int layout(Area area) throws FOPException {\n         if (this.marker == START) {\n             this.marker = 0;\n         }\n@@ -67,9 +67,9 @@\n \n         int numChildren = this.children.size();\n         for (int i = this.marker; i < numChildren; i++) {\n-            FONode fo = (FONode)children.elementAt(i);\n-            Status status;\n-            if ((status = fo.layout(blockArea)).isIncomplete()) {\n+            FONode fo = (FONode)children.get(i);\n+            int status;\n+            if (Status.isIncomplete((status = fo.layout(blockArea)))) {\n                 this.resetMarker();\n                 return status;\n             }\n@@ -78,7 +78,7 @@\n         area.addChild(blockArea);\n         area.increaseHeight(blockArea.getHeight());\n         blockArea.isLast(true);\n-        return new Status(Status.OK);\n+        return Status.OK;\n     }\n \n }\n--- org__src\\org\\apache\\fop\\fo\\flow\\InitialPropertySet.java\tMon Oct 28 \n11:40:02 2002\n+++ src\\org\\apache\\fop\\fo\\flow\\InitialPropertySet.java\tMon Oct 28 11:40:02 2002\n@@ -10,7 +10,6 @@\n // FOP\n import org.apache.fop.fo.*;\n import org.apache.fop.layout.*;\n-import org.apache.fop.fo.flow.*;\n import org.apache.fop.fo.properties.*;\n import org.apache.fop.layout.AreaTree;\n import org.apache.fop.apps.FOPException;\n@@ -37,7 +36,7 @@\n         this.name = \"fo:initial-property-set\";\n     }\n \n-    public Status layout(Area area) throws FOPException {\n+    public int layout(Area area) throws FOPException {\n \n         // Common Accessibility Properties\n         AccessibilityProps mAccProps = propMgr.getAccessibilityProps();\n--- org__src\\org\\apache\\fop\\fo\\flow\\Inline.java\tMon Oct 28 11:40:02 2002\n+++ src\\org\\apache\\fop\\fo\\flow\\Inline.java\tMon Oct 28 11:40:02 2002\n@@ -84,7 +84,7 @@\n         ft.setUnderlined(ts.getUnderlined());\n         ft.setOverlined(ts.getOverlined());\n         ft.setLineThrough(ts.getLineThrough());\n-        children.addElement(ft);\n+        children.add(ft);\n     }\n \n }\n--- org__src\\org\\apache\\fop\\fo\\flow\\InlineContainer.java\tMon Oct 28 \n11:40:02 2002\n+++ src\\org\\apache\\fop\\fo\\flow\\InlineContainer.java\tMon Oct 28 11:40:02 2002\n@@ -9,7 +9,6 @@\n \n // FOP\n import org.apache.fop.fo.*;\n-import org.apache.fop.fo.flow.*;\n import org.apache.fop.fo.properties.*;\n import org.apache.fop.layout.*;\n import org.apache.fop.apps.FOPException;\n--- org__src\\org\\apache\\fop\\fo\\flow\\InstreamForeignObject.java\tMon Oct 28 \n11:40:03 2002\n+++ src\\org\\apache\\fop\\fo\\flow\\InstreamForeignObject.java\tMon Oct 28 \n11:40:03 2002\n@@ -86,10 +86,10 @@\n      *\n      * @return the status of the layout\n      */\n-    public Status layout(Area area) throws FOPException {\n+    public int layout(Area area) throws FOPException {\n \n         if (this.marker == BREAK_AFTER) {\n-            return new Status(Status.OK);\n+            return Status.OK;\n         }\n \n         if (this.marker == START) {\n@@ -191,11 +191,11 @@\n                 }\n                 /* layout foreign object */\n                 if (this.children.size() > 0) {\n-                    FONode fo = (FONode)children.elementAt(0);\n-                    Status status;\n+                    FONode fo = (FONode)children.get(0);\n+                    int status;\n                     // currently FONode must be an SVG\n-                    if ((status =\n-                                fo.layout(this.areaCurrent)).isIncomplete()) {\n+                    if (Status.isIncomplete((status =\n+                                                 fo.layout\n(this.areaCurrent)))) {\n                         return status;\n                     }\n \n@@ -209,33 +209,33 @@\n             if (breakBefore == BreakBefore.PAGE\n                     || ((spaceBefore + areaCurrent.getEffectiveHeight())\n                         > area.spaceLeft())) {\n-                return new Status(Status.FORCE_PAGE_BREAK);\n+                return Status.FORCE_PAGE_BREAK;\n             }\n \n             if (breakBefore == BreakBefore.ODD_PAGE) {\n-                return new Status(Status.FORCE_PAGE_BREAK_ODD);\n+                return Status.FORCE_PAGE_BREAK_ODD;\n             }\n \n             if (breakBefore == BreakBefore.EVEN_PAGE) {\n-                return new Status(Status.FORCE_PAGE_BREAK_EVEN);\n+                return Status.FORCE_PAGE_BREAK_EVEN;\n             }\n         }\n \n         if (this.areaCurrent == null) {\n-            return new Status(Status.OK);\n+            return Status.OK;\n         }\n \n         if (area instanceof BlockArea) {\n             BlockArea ba = (BlockArea)area;\n             LineArea la = ba.getCurrentLineArea();\n             if (la == null) {\n-                return new Status(Status.AREA_FULL_NONE);\n+                return Status.AREA_FULL_NONE;\n             }\n             la.addPending();\n             if (areaCurrent.getEffectiveWidth() > la.getRemainingWidth()) {\n                 la = ba.createNextLineArea();\n                 if (la == null) {\n-                    return new Status(Status.AREA_FULL_NONE);\n+                    return Status.AREA_FULL_NONE;\n                 }\n             }\n             la.addInlineArea(areaCurrent);\n@@ -278,22 +278,22 @@\n \n         if (breakAfter == BreakAfter.PAGE) {\n             this.marker = BREAK_AFTER;\n-            return new Status(Status.FORCE_PAGE_BREAK);\n+            return Status.FORCE_PAGE_BREAK;\n         }\n \n         if (breakAfter == BreakAfter.ODD_PAGE) {\n             this.marker = BREAK_AFTER;\n-            return new Status(Status.FORCE_PAGE_BREAK_ODD);\n+            return Status.FORCE_PAGE_BREAK_ODD;\n         }\n \n         if (breakAfter == BreakAfter.EVEN_PAGE) {\n             this.marker = BREAK_AFTER;\n-            return new Status(Status.FORCE_PAGE_BREAK_EVEN);\n+            return Status.FORCE_PAGE_BREAK_EVEN;\n         }\n \n         areaCurrent = null;\n         /* return status */\n-        return new Status(Status.OK);\n+        return Status.OK;\n     }\n \n }\n--- org__src\\org\\apache\\fop\\fo\\flow\\Leader.java\tMon Oct 28 11:40:03 2002\n+++ src\\org\\apache\\fop\\fo\\flow\\Leader.java\tMon Oct 28 11:40:03 2002\n@@ -43,12 +43,12 @@\n         this.name = \"fo:leader\";\n     }\n \n-    public Status layout(Area area) throws FOPException {\n+    public int layout(Area area) throws FOPException {\n         BlockArea blockArea;\n         // restriction in this version\n         if (!(area instanceof BlockArea)) {\n             log.warn(\"in this version of Fop fo:leader must be a direct child \nof fo:block \");\n-            return new Status(Status.OK);\n+            return Status.OK;\n         } else {\n             blockArea = (BlockArea)area;\n         }\n@@ -139,10 +139,10 @@\n                                   ruleStyle, leaderPatternWidth,\n                                   leaderAlignment);\n         if (succeeded == 1) {\n-            return new Status(Status.OK);\n+            return Status.OK;\n         } else {\n             // not sure that this is the correct Status here\n-            return new Status(Status.AREA_FULL_SOME);\n+            return Status.AREA_FULL_SOME;\n         }\n     }\n \n--- org__src\\org\\apache\\fop\\fo\\flow\\ListBlock.java\tMon Oct 28 11:40:03 2002\n+++ src\\org\\apache\\fop\\fo\\flow\\ListBlock.java\tMon Oct 28 11:40:03 2002\n@@ -49,7 +49,7 @@\n         this.name = \"fo:list-block\";\n     }\n \n-    public Status layout(Area area) throws FOPException {\n+    public int layout(Area area) throws FOPException {\n         if (this.marker == START) {\n \n             // Common Accessibility Properties\n@@ -138,15 +138,15 @@\n \n         int numChildren = this.children.size();\n         for (int i = this.marker; i < numChildren; i++) {\n-            if (!(children.elementAt(i) instanceof ListItem)) {\n+            if (!(children.get(i) instanceof ListItem)) {\n                 log.error(\"children of list-blocks must be list-items\");\n-                return new Status(Status.OK);\n+                return Status.OK;\n             }\n-            ListItem listItem = (ListItem)children.elementAt(i);\n-            Status status;\n-            if ((status = listItem.layout(blockArea)).isIncomplete()) {\n-                if (status.getCode() == Status.AREA_FULL_NONE && i > 0) {\n-                    status = new Status(Status.AREA_FULL_SOME);\n+            ListItem listItem = (ListItem)children.get(i);\n+            int status;\n+            if (Status.isIncomplete((status = listItem.layout(blockArea)))) {\n+                if (status == Status.AREA_FULL_NONE && i > 0) {\n+                    status = Status.AREA_FULL_SOME;\n                 }\n                 this.marker = i;\n                 blockArea.end();\n@@ -171,7 +171,7 @@\n         }\n \n         blockArea.isLast(true);\n-        return new Status(Status.OK);\n+        return Status.OK;\n     }\n \n }\n--- org__src\\org\\apache\\fop\\fo\\flow\\ListItem.java\tMon Oct 28 11:40:03 2002\n+++ src\\org\\apache\\fop\\fo\\flow\\ListItem.java\tMon Oct 28 11:40:03 2002\n@@ -49,7 +49,7 @@\n         this.name = \"fo:list-item\";\n     }\n \n-    public Status layout(Area area) throws FOPException {\n+    public int layout(Area area) throws FOPException {\n         if (this.marker == START) {\n \n             // Common Accessibility Properties\n@@ -125,10 +125,10 @@\n         if (numChildren != 2) {\n             throw new FOPException(\"list-item must have exactly two children\");\n         }\n-        ListItemLabel label = (ListItemLabel)children.elementAt(0);\n-        ListItemBody body = (ListItemBody)children.elementAt(1);\n+        ListItemLabel label = (ListItemLabel)children.get(0);\n+        ListItemBody body = (ListItemBody)children.get(1);\n \n-        Status status;\n+        int status;\n \n         // what follows doesn't yet take into account whether the\n         // body failed completely or only got some text in\n@@ -138,13 +138,13 @@\n             area.getIDReferences().configureID(id, area);\n \n             status = label.layout(blockArea);\n-            if (status.isIncomplete()) {\n+            if (Status.isIncomplete(status)) {\n                 return status;\n             }\n         }\n \n         status = body.layout(blockArea);\n-        if (status.isIncomplete()) {\n+        if (Status.isIncomplete(status)) {\n             blockArea.end();\n             area.addChild(blockArea);\n             area.increaseHeight(blockArea.getHeight());\n@@ -167,7 +167,7 @@\n             area.start();\n         }\n         this.blockArea.isLast(true);\n-        return new Status(Status.OK);\n+        return Status.OK;\n     }\n \n     /**\n--- org__src\\org\\apache\\fop\\fo\\flow\\ListItemBody.java\tMon Oct 28 11:40:04 2002\n+++ src\\org\\apache\\fop\\fo\\flow\\ListItemBody.java\tMon Oct 28 11:40:03 2002\n@@ -36,7 +36,7 @@\n         this.name = \"fo:list-item-body\";\n     }\n \n-    public Status layout(Area area) throws FOPException {\n+    public int layout(Area area) throws FOPException {\n         if (this.marker == START) {\n \n             // Common Accessibility Properties\n@@ -60,19 +60,19 @@\n \n         int numChildren = this.children.size();\n         for (int i = this.marker; i < numChildren; i++) {\n-            FObj fo = (FObj)children.elementAt(i);\n+            FObj fo = (FObj)children.get(i);\n \n-            Status status;\n-            if ((status = fo.layout(area)).isIncomplete()) {\n+            int status;\n+            if (Status.isIncomplete((status = fo.layout(area)))) {\n                 this.marker = i;\n-                if ((i == 0) && (status.getCode() == Status.AREA_FULL_NONE)) {\n-                    return new Status(Status.AREA_FULL_NONE);\n+                if ((i == 0) && (status == Status.AREA_FULL_NONE)) {\n+                    return Status.AREA_FULL_NONE;\n                 } else {\n-                    return new Status(Status.AREA_FULL_SOME);\n+                    return Status.AREA_FULL_SOME;\n                 }\n             }\n         }\n-        return new Status(Status.OK);\n+        return Status.OK;\n     }\n \n }\n--- org__src\\org\\apache\\fop\\fo\\flow\\ListItemLabel.java\tMon Oct 28 11:40:04 2002\n+++ src\\org\\apache\\fop\\fo\\flow\\ListItemLabel.java\tMon Oct 28 11:40:04 2002\n@@ -36,7 +36,7 @@\n         this.name = \"fo:list-item-label\";\n     }\n \n-    public Status layout(Area area) throws FOPException {\n+    public int layout(Area area) throws FOPException {\n         int numChildren = this.children.size();\n \n         if (numChildren != 1) {\n@@ -53,7 +53,7 @@\n         String id = this.properties.get(\"id\").getString();\n         area.getIDReferences().initializeID(id, area);\n \n-        Block block = (Block)children.elementAt(0);\n+        Block block = (Block)children.get(0);\n \n         /*\n          * For calculating the lineage - The fo:list-item-label formatting \nobject\n@@ -62,7 +62,7 @@\n          * of areas returned by each of the children of the fo:list-item-label.\n          */\n \n-        Status status;\n+        int status;\n         status = block.layout(area);\n         area.addDisplaySpace(-block.getAreaHeight());\n         return status;\n--- org__src\\org\\apache\\fop\\fo\\flow\\Marker.java\tMon Oct 28 11:40:04 2002\n+++ src\\org\\apache\\fop\\fo\\flow\\Marker.java\tMon Oct 28 11:40:04 2002\n@@ -51,31 +51,31 @@\n         }\n     }\n \n-    public Status layout(Area area) throws FOPException {\n+    public int layout(Area area) throws FOPException {\n         // no layout action desired\n         this.registryArea = area;\n         area.addMarker(this);\n         area.getPage().registerMarker(this);\n         // System.out.println(\"Marker being registered in area '\" + area \n+ \"'\");\n-        return new Status(Status.OK);\n+        return Status.OK;\n     }\n \n-    public Status layoutMarker(Area area) throws FOPException {\n+    public int layoutMarker(Area area) throws FOPException {\n         if (this.marker == START)\n             this.marker = 0;\n \n         int numChildren = this.children.size();\n         for (int i = this.marker; i < numChildren; i++) {\n-            FONode fo = (FONode)children.elementAt(i);\n+            FONode fo = (FONode)children.get(i);\n \n-            Status status;\n-            if ((status = fo.layout(area)).isIncomplete()) {\n+            int status;\n+            if (Status.isIncomplete((status = fo.layout(area)))) {\n                 this.marker = i;\n                 return status;\n             }\n         }\n \n-        return new Status(Status.OK);\n+        return Status.OK;\n     }\n \n     public String getMarkerClassName() {\n--- org__src\\org\\apache\\fop\\fo\\flow\\MultiCase.java\tMon Oct 28 11:40:04 2002\n+++ src\\org\\apache\\fop\\fo\\flow\\MultiCase.java\tMon Oct 28 11:40:04 2002\n@@ -9,7 +9,6 @@\n \n // FOP\n import org.apache.fop.fo.*;\n-import org.apache.fop.fo.flow.*;\n import org.apache.fop.fo.properties.*;\n import org.apache.fop.layout.*;\n import org.apache.fop.apps.FOPException;\n@@ -36,7 +35,7 @@\n         this.name = \"fo:multi-case\";\n     }\n \n-    public Status layout(Area area) throws FOPException {\n+    public int layout(Area area) throws FOPException {\n \n         // Common Accessibility Properties\n         AccessibilityProps mAccProps = propMgr.getAccessibilityProps();\n--- org__src\\org\\apache\\fop\\fo\\flow\\MultiProperties.java\tMon Oct 28 \n11:40:04 2002\n+++ src\\org\\apache\\fop\\fo\\flow\\MultiProperties.java\tMon Oct 28 11:40:04 2002\n@@ -9,7 +9,7 @@\n \n // FOP\n import org.apache.fop.fo.*;\n-import org.apache.fop.fo.flow.*;\n+//import org.apache.fop.fo.flow.*;\n import org.apache.fop.fo.properties.*;\n import org.apache.fop.layout.*;\n import org.apache.fop.apps.FOPException;\n@@ -36,7 +36,7 @@\n         this.name = \"fo:multi-properties\";\n     }\n \n-    public Status layout(Area area) throws FOPException {\n+    public int layout(Area area) throws FOPException {\n \n         // Common Accessibility Properties\n         AccessibilityProps mAccProps = propMgr.getAccessibilityProps();\n--- org__src\\org\\apache\\fop\\fo\\flow\\MultiPropertySet.java\tMon Oct 28 \n11:40:04 2002\n+++ src\\org\\apache\\fop\\fo\\flow\\MultiPropertySet.java\tMon Oct 28 11:40:04 2002\n@@ -9,7 +9,7 @@\n \n // FOP\n import org.apache.fop.fo.*;\n-import org.apache.fop.fo.flow.*;\n+//import org.apache.fop.fo.flow.*;\n import org.apache.fop.fo.properties.*;\n import org.apache.fop.layout.*;\n import org.apache.fop.apps.FOPException;\n@@ -36,7 +36,7 @@\n         this.name = \"fo:multi-property-set\";\n     }\n \n-    public Status layout(Area area) throws FOPException {\n+    public int layout(Area area) throws FOPException {\n \n         // this.properties.get(\"id\");\n         // this.properties.get(\"active-state\");\n--- org__src\\org\\apache\\fop\\fo\\flow\\MultiSwitch.java\tMon Oct 28 11:40:05 2002\n+++ src\\org\\apache\\fop\\fo\\flow\\MultiSwitch.java\tMon Oct 28 11:40:05 2002\n@@ -9,7 +9,7 @@\n \n // FOP\n import org.apache.fop.fo.*;\n-import org.apache.fop.fo.flow.*;\n+//import org.apache.fop.fo.flow.*;\n import org.apache.fop.fo.properties.*;\n import org.apache.fop.layout.*;\n import org.apache.fop.apps.FOPException;\n@@ -36,7 +36,7 @@\n         this.name = \"fo:multi-switch\";\n     }\n \n-    public Status layout(Area area) throws FOPException {\n+    public int layout(Area area) throws FOPException {\n \n         // Common Accessibility Properties\n         AccessibilityProps mAccProps = propMgr.getAccessibilityProps();\n--- org__src\\org\\apache\\fop\\fo\\flow\\MultiToggle.java\tMon Oct 28 11:40:05 2002\n+++ src\\org\\apache\\fop\\fo\\flow\\MultiToggle.java\tMon Oct 28 11:40:05 2002\n@@ -9,7 +9,7 @@\n \n // FOP\n import org.apache.fop.fo.*;\n-import org.apache.fop.fo.flow.*;\n+//import org.apache.fop.fo.flow.*;\n import org.apache.fop.fo.properties.*;\n import org.apache.fop.layout.*;\n import org.apache.fop.apps.FOPException;\n@@ -36,7 +36,7 @@\n         this.name = \"fo:multi-toggle\";\n     }\n \n-    public Status layout(Area area) throws FOPException {\n+    public int layout(Area area) throws FOPException {\n \n         // Common Accessibility Properties\n         AccessibilityProps mAccProps = propMgr.getAccessibilityProps();\n--- org__src\\org\\apache\\fop\\fo\\flow\\PageNumber.java\tMon Oct 28 11:40:05 2002\n+++ src\\org\\apache\\fop\\fo\\flow\\PageNumber.java\tMon Oct 28 11:40:05 2002\n@@ -12,7 +12,7 @@\n import org.apache.fop.layout.*;\n import org.apache.fop.datatypes.*;\n import org.apache.fop.fo.properties.*;\n-import org.apache.fop.layout.*;\n+//import org.apache.fop.layout.*;\n import org.apache.fop.apps.FOPException;\n \n // Java\n@@ -44,10 +44,10 @@\n         this.name = \"fo:page-number\";\n     }\n \n-    public Status layout(Area area) throws FOPException {\n+    public int layout(Area area) throws FOPException {\n         if (!(area instanceof BlockArea)) {\n             log.warn(\"page-number outside block area\");\n-            return new Status(Status.OK);\n+            return Status.OK;\n         }\n         if (this.marker == START) {\n \n@@ -108,7 +108,7 @@\n                                      red, green, blue, wrapOption, null,\n                                      whiteSpaceCollapse, p.toCharArray(), 0,\n                                      p.length(), ts, VerticalAlign.BASELINE);\n-        return new Status(Status.OK);\n+        return Status.OK;\n     }\n \n }\n--- org__src\\org\\apache\\fop\\fo\\flow\\PageNumberCitation.java\tMon Oct 28 \n11:40:06 2002\n+++ src\\org\\apache\\fop\\fo\\flow\\PageNumberCitation.java\tMon Oct 28 11:40:06 2002\n@@ -102,10 +102,10 @@\n     }\n \n \n-    public Status layout(Area area) throws FOPException {\n+    public int layout(Area area) throws FOPException {\n         if (!(area instanceof BlockArea)) {\n             log.warn(\"page-number-citation outside block area\");\n-            return new Status(Status.OK);\n+            return Status.OK;\n         }\n \n         IDReferences idReferences = area.getIDReferences();\n@@ -190,7 +190,7 @@\n             BlockArea blockArea = (BlockArea)area;\n             LineArea la = blockArea.getCurrentLineArea();\n             if (la == null) {\n-                return new Status(Status.AREA_FULL_NONE);\n+                return Status.AREA_FULL_NONE;\n             }\n             la.changeFont(propMgr.getFontState(area.getFontInfo()));\n             la.changeColor(red, green, blue);\n@@ -209,9 +209,9 @@\n \n \n         if (this.marker == -1) {\n-            return new Status(Status.OK);\n+            return Status.OK;\n         } else {\n-            return new Status(Status.AREA_FULL_NONE);\n+            return Status.AREA_FULL_NONE;\n         }\n \n     }\n--- org__src\\org\\apache\\fop\\fo\\flow\\RetrieveMarker.java\tMon Oct 28 11:40:06 2002\n+++ src\\org\\apache\\fop\\fo\\flow\\RetrieveMarker.java\tMon Oct 28 11:40:06 2002\n@@ -47,7 +47,7 @@\n             this.properties.get(\"retrieve-boundary\").getEnum();\n     }\n \n-    public Status layout(Area area) throws FOPException {\n+    public int layout(Area area) throws FOPException {\n         // locate qualifying areas by 'marker-class-name' and\n         // 'retrieve-boundary'. Initially we will always check\n         // the containing page\n@@ -72,7 +72,7 @@\n             }\n         }\n \n-        Status status = new Status(Status.OK);\n+        int status = Status.OK;\n         if (null != bestMarker) {\n             // System.out.println(\"Laying out marker '\" + bestMarker + \"' in \narea '\" + area + \"'\");\n             // the 'markers' referred to in this method are internal; they have\n--- org__src\\org\\apache\\fop\\fo\\flow\\StaticContent.java\tMon Oct 28 11:40:06 2002\n+++ src\\org\\apache\\fop\\fo\\flow\\StaticContent.java\tMon Oct 28 11:40:06 2002\n@@ -37,12 +37,12 @@\n         ((PageSequence)parent).setIsFlowSet(false);    // hacquery of sorts\n     }\n \n-    public Status layout(Area area) throws FOPException {\n+    public int layout(Area area) throws FOPException {\n         return layout(area, null);\n     }\n \n \n-    public Status layout(Area area, Region region) throws FOPException {\n+    public int layout(Area area, Region region) throws FOPException {\n \n         int numChildren = this.children.size();\n         // Set area absolute height so that link rectangles will be drawn \ncorrectly in xsl-before and xsl-after\n@@ -73,21 +73,21 @@\n         setContentWidth(area.getContentWidth());\n \n         for (int i = 0; i < numChildren; i++) {\n-            FObj fo = (FObj)children.elementAt(i);\n+            FObj fo = (FObj)children.get(i);\n \n-            Status status;\n-            if ((status = fo.layout(area)).isIncomplete()) {\n+            int status;\n+            if (Status.isIncomplete( (status = fo.layout(area)))) {\n                 // in fact all should be laid out and clip, error etc \ndepending on 'overflow'\n                 log.warn(\"Some static content could not fit in the area.\");\n                 this.marker = i;\n-                if ((i != 0) && (status.getCode() == Status.AREA_FULL_NONE)) {\n-                    status = new Status(Status.AREA_FULL_SOME);\n+                if ((i != 0) && (status == Status.AREA_FULL_NONE)) {\n+                    status = Status.AREA_FULL_SOME;\n                 }\n                 return (status);\n             }\n         }\n         resetMarker();\n-        return new Status(Status.OK);\n+        return Status.OK;\n     }\n \n     protected String getElementName() {\n--- org__src\\org\\apache\\fop\\fo\\flow\\Table.java\tMon Oct 28 11:40:08 2002\n+++ src\\org\\apache\\fop\\fo\\flow\\Table.java\tMon Oct 28 11:40:07 2002\n@@ -15,8 +15,8 @@\n import org.apache.fop.apps.FOPException;\n \n // Java\n-import java.util.Vector;\n-import java.util.Enumeration;\n+import java.util.ArrayList;\n+import java.util.Iterator;\n \n public class Table extends FObj {\n \n@@ -45,7 +45,7 @@\n     boolean omitHeaderAtBreak = false;\n     boolean omitFooterAtBreak = false;\n \n-    Vector columns = new Vector();\n+    ArrayList columns = new ArrayList();\n     int bodyCount = 0;\n     private boolean bAutoLayout=false;\n     private int contentWidth = 0; // Sum of column widths\n@@ -63,9 +63,9 @@\n         this.name = \"fo:table\";\n     }\n \n-    public Status layout(Area area) throws FOPException {\n+    public int layout(Area area) throws FOPException {\n         if (this.marker == BREAK_AFTER) {\n-            return new Status(Status.OK);\n+            return Status.OK;\n         }\n \n         if (this.marker == START) {\n@@ -140,15 +140,15 @@\n             this.marker = 0;\n \n             if (breakBefore == BreakBefore.PAGE) {\n-                return new Status(Status.FORCE_PAGE_BREAK);\n+                return Status.FORCE_PAGE_BREAK;\n             }\n \n             if (breakBefore == BreakBefore.ODD_PAGE) {\n-                return new Status(Status.FORCE_PAGE_BREAK_ODD);\n+                return Status.FORCE_PAGE_BREAK_ODD;\n             }\n \n             if (breakBefore == BreakBefore.EVEN_PAGE) {\n-                return new Status(Status.FORCE_PAGE_BREAK_EVEN);\n+                return Status.FORCE_PAGE_BREAK_EVEN;\n             }\n \n         }\n@@ -196,32 +196,32 @@\n         layoutColumns(areaContainer);\n \n         for (int i = this.marker; i < numChildren; i++) {\n-            FONode fo = (FONode)children.elementAt(i);\n+            FONode fo = (FONode)children.get(i);\n             if (fo instanceof TableHeader) {\n                 if (columns.size() == 0) {\n                     log.warn(\"current implementation of tables requires a \ntable-column for each column, indicating column-width\");\n-                    return new Status(Status.OK);\n+                    return Status.OK;\n                 }\n                 tableHeader = (TableHeader)fo;\n                 tableHeader.setColumns(columns);\n             } else if (fo instanceof TableFooter) {\n                 if (columns.size() == 0) {\n                     log.warn(\"current implementation of tables requires a \ntable-column for each column, indicating column-width\");\n-                    return new Status(Status.OK);\n+                    return Status.OK;\n                 }\n                 tableFooter = (TableFooter)fo;\n                 tableFooter.setColumns(columns);\n             } else if (fo instanceof TableBody) {\n                 if (columns.size() == 0) {\n                     log.warn(\"current implementation of tables requires a \ntable-column for each column, indicating column-width\");\n-                    return new Status(Status.OK);\n+                    return Status.OK;\n                 }\n-                Status status;\n+                int status;\n                 if (tableHeader != null &&!addedHeader) {\n-                    if ((status =\n-                                tableHeader.layout(areaContainer)).isIncomplete\n()) {\n+                    if (Status.isIncomplete((status =\n+                                                 tableHeader.layout\n(areaContainer)))) {\n                         tableHeader.resetMarker();\n-                        return new Status(Status.AREA_FULL_NONE);\n+                        return Status.AREA_FULL_NONE;\n                     }\n                     addedHeader = true;\n                     tableHeader.resetMarker();\n@@ -230,9 +230,9 @@\n                 }\n                 if (tableFooter != null &&!this.omitFooterAtBreak\n                         &&!addedFooter) {\n-                    if ((status =\n-                                tableFooter.layout(areaContainer)).isIncomplete\n()) {\n-                        return new Status(Status.AREA_FULL_NONE);\n+                    if (Status.isIncomplete((status =\n+                                                 tableFooter.layout\n(areaContainer)))) {\n+                        return Status.AREA_FULL_NONE;\n                     }\n                     addedFooter = true;\n                     tableFooter.resetMarker();\n@@ -241,10 +241,10 @@\n                 fo.setOrphans(orphans);\n                 ((TableBody)fo).setColumns(columns);\n \n-                if ((status = fo.layout(areaContainer)).isIncomplete()) {\n+                if (Status.isIncomplete((status = fo.layout(areaContainer)))) {\n                     this.marker = i;\n                     if (bodyCount == 0\n-                            && status.getCode() == Status.AREA_FULL_NONE) {\n+                            && status == Status.AREA_FULL_NONE) {\n                         if (tableHeader != null)\n                             tableHeader.removeLayout(areaContainer);\n                         if (tableFooter != null)\n@@ -268,7 +268,7 @@\n                                                      + ((TableBody)\nfo).getHeight());\n                         }\n                         setupColumnHeights();\n-                        status = new Status(Status.AREA_FULL_SOME);\n+                        status = Status.AREA_FULL_SOME;\n                     }\n                     return status;\n                 } else {\n@@ -287,7 +287,7 @@\n         }\n \n         if (tableFooter != null && this.omitFooterAtBreak) {\n-            if (tableFooter.layout(areaContainer).isIncomplete()) {\n+            if (Status.isIncomplete(tableFooter.layout(areaContainer))) {\n                 // this is a problem since we need to remove a row\n                 // from the last table body and place it on the\n                 // next page so that it can have a footer at\n@@ -302,7 +302,7 @@\n                 }\n                 tableFooter.removeLayout(areaContainer);\n                 tableFooter.resetMarker();\n-                return new Status(Status.AREA_FULL_SOME);\n+                return Status.AREA_FULL_SOME;\n             }\n         }\n \n@@ -329,26 +329,26 @@\n \n         if (breakAfter == BreakAfter.PAGE) {\n             this.marker = BREAK_AFTER;\n-            return new Status(Status.FORCE_PAGE_BREAK);\n+            return Status.FORCE_PAGE_BREAK;\n         }\n \n         if (breakAfter == BreakAfter.ODD_PAGE) {\n             this.marker = BREAK_AFTER;\n-            return new Status(Status.FORCE_PAGE_BREAK_ODD);\n+            return Status.FORCE_PAGE_BREAK_ODD;\n         }\n \n         if (breakAfter == BreakAfter.EVEN_PAGE) {\n             this.marker = BREAK_AFTER;\n-            return new Status(Status.FORCE_PAGE_BREAK_EVEN);\n+            return Status.FORCE_PAGE_BREAK_EVEN;\n         }\n \n-        return new Status(Status.OK);\n+        return Status.OK;\n     }\n \n     protected void setupColumnHeights() {\n-        Enumeration eCol = columns.elements();\n-        while (eCol.hasMoreElements()) {\n-            TableColumn c = (TableColumn)eCol.nextElement();\n+        Iterator eCol = columns.iterator();\n+        while (eCol.hasNext()) {\n+            TableColumn c = (TableColumn)eCol.next();\n             if ( c != null) {\n                 c.setHeight(areaContainer.getContentHeight());\n             }\n@@ -357,9 +357,9 @@\n \n     private void findColumns(Area areaContainer) throws FOPException {\n         int nextColumnNumber = 1;\n-        Enumeration e = children.elements();\n-        while (e.hasMoreElements()) {\n-            FONode fo = (FONode)e.nextElement();\n+        Iterator e = children.iterator();\n+        while (e.hasNext()) {\n+            FONode fo = (FONode)e.next();\n             if (fo instanceof TableColumn) {\n                 TableColumn c = (TableColumn)fo;\n                 c.doSetup(areaContainer);\n@@ -371,14 +371,15 @@\n \n                 for (int j = 0; j < numColumnsRepeated; j++) {\n                     if (currentColumnNumber > columns.size()) {\n-                        columns.setSize(currentColumnNumber);\n+                        columns.ensureCapacity(currentColumnNumber);\n                     }\n-                    if (columns.elementAt(currentColumnNumber - 1) != null) {\n+                    if (currentColumnNumber -1 < columns.size() &&\n+                            columns.get(currentColumnNumber - 1) != null) {\n                         log.warn(\"More than one column object assigned \" +\n                                  \"to column \" +\n                                  currentColumnNumber);\n                     }\n-                    columns.setElementAt(c, currentColumnNumber - 1);\n+                    columns.add(currentColumnNumber - 1, c);\n                     currentColumnNumber++;\n                 }\n                 nextColumnNumber = currentColumnNumber;\n@@ -396,9 +397,9 @@\n         double dWidthFactor = 0.0;\n         double dUnitLength = 0.0;\n         double tuMin = 100000.0 ; // Minimum number of proportional units\n-        Enumeration eCol = columns.elements();\n-        while (eCol.hasMoreElements()) {\n-            TableColumn c = (TableColumn)eCol.nextElement();\n+        Iterator eCol = columns.iterator();\n+        while (eCol.hasNext()) {\n+            TableColumn c = (TableColumn)eCol.next();\n             if (c == null) {\n                 log.warn(\"No table-column specification for column \" +\n                          nextColumnNumber);\n@@ -463,9 +464,9 @@\n         }\n         // Now distribute the extra units onto each column and set offsets\n         int offset = 0;\n-        eCol = columns.elements();\n-        while (eCol.hasMoreElements()) {\n-            TableColumn c = (TableColumn)eCol.nextElement();\n+        eCol = columns.iterator();\n+        while (eCol.hasNext()) {\n+            TableColumn c = (TableColumn)eCol.next();\n             if (c != null) {\n                 c.setColumnOffset(offset);\n                 Length l = c.getColumnWidthAsLength();\n@@ -489,9 +490,9 @@\n     }\n \n     private void layoutColumns(Area tableArea) throws FOPException  {\n-        Enumeration eCol = columns.elements();\n-        while (eCol.hasMoreElements()) {\n-            TableColumn c = (TableColumn)eCol.nextElement();\n+        Iterator eCol = columns.iterator();\n+        while (eCol.hasNext()) {\n+            TableColumn c = (TableColumn)eCol.next();\n             if (c != null) {\n                 c.layout(tableArea);\n             }\n--- org__src\\org\\apache\\fop\\fo\\flow\\TableAndCaption.java\tMon Oct 28 \n11:40:08 2002\n+++ src\\org\\apache\\fop\\fo\\flow\\TableAndCaption.java\tMon Oct 28 11:40:08 2002\n@@ -9,7 +9,7 @@\n \n // FOP\n import org.apache.fop.fo.*;\n-import org.apache.fop.fo.flow.*;\n+//import org.apache.fop.fo.flow.*;\n import org.apache.fop.fo.properties.*;\n import org.apache.fop.layout.*;\n import org.apache.fop.apps.FOPException;\n@@ -36,7 +36,7 @@\n         this.name = \"fo:table-and-caption\";\n     }\n \n-    public Status layout(Area area) throws FOPException {\n+    public int layout(Area area) throws FOPException {\n \n         // Common Accessibility Properties\n         AccessibilityProps mAccProps = propMgr.getAccessibilityProps();\n--- org__src\\org\\apache\\fop\\fo\\flow\\TableBody.java\tMon Oct 28 11:40:08 2002\n+++ src\\org\\apache\\fop\\fo\\flow\\TableBody.java\tMon Oct 28 11:40:08 2002\n@@ -15,8 +15,8 @@\n import org.apache.fop.apps.FOPException;\n \n // Java\n-import java.util.Vector;\n-import java.util.Enumeration;\n+import java.util.Iterator;\n+import java.util.ArrayList;\n \n public class TableBody extends FObj {\n \n@@ -36,7 +36,7 @@\n     int spaceAfter;\n     String id;\n \n-    Vector columns;\n+    ArrayList columns;\n     RowSpanMgr rowSpanMgr;    // manage information about spanning rows\n \n     AreaContainer areaContainer;\n@@ -46,7 +46,7 @@\n         this.name = \"fo:table-body\";\n     }\n \n-    public void setColumns(Vector columns) {\n+    public void setColumns(ArrayList columns) {\n         this.columns = columns;\n     }\n \n@@ -62,9 +62,9 @@\n         return areaContainer.getHeight() + spaceBefore + spaceAfter;\n     }\n \n-    public Status layout(Area area) throws FOPException {\n+    public int layout(Area area) throws FOPException {\n         if (this.marker == BREAK_AFTER) {\n-            return new Status(Status.OK);\n+            return Status.OK;\n         }\n \n         if (this.marker == START) {\n@@ -140,12 +140,12 @@\n         areaContainer.setAbsoluteHeight(area.getAbsoluteHeight());\n         areaContainer.setIDReferences(area.getIDReferences());\n \n-        Vector keepWith = new Vector();\n+        ArrayList keepWith = new ArrayList();\n         int numChildren = this.children.size();\n         TableRow lastRow = null;\n         boolean endKeepGroup = true;\n         for (int i = this.marker; i < numChildren; i++) {\n-            Object child = children.elementAt(i);\n+            Object child = children.get(i);\n             if (!(child instanceof TableRow)) {\n                 throw new FOPException(\"Currently only Table Rows are \nsupported in table body, header and footer\");\n             }\n@@ -158,17 +158,17 @@\n                     != KeepValue.KEEP_WITH_AUTO && lastRow != null\n                     && keepWith.indexOf(lastRow)\n                     == -1) {\n-                keepWith.addElement(lastRow);\n+                keepWith.add(lastRow);\n             } else {\n                 if (endKeepGroup && keepWith.size() > 0) {\n-                    keepWith = new Vector();\n+                    keepWith = new ArrayList();\n                 }\n             }\n \n-            Status status;\n-            if ((status = row.layout(areaContainer)).isIncomplete()) {\n+            int status;\n+            if (Status.isIncomplete((status = row.layout(areaContainer)))) {\n                 // BUG!!! don't distinguish between break-before and after!\n-                if (status.isPageBreak()) {\n+                if (Status.isPageBreak(status)) {\n                     this.marker = i;\n                     area.addChild(areaContainer);\n                     // areaContainer.end();\n@@ -188,9 +188,9 @@\n                     // && status.getCode() == Status.AREA_FULL_NONE\n                     // FIXME!!! Handle rows spans!!!\n                     row.removeLayout(areaContainer);\n-                    for (Enumeration e = keepWith.elements();\n-                            e.hasMoreElements(); ) {\n-                        TableRow tr = (TableRow)e.nextElement();\n+                    for (Iterator e = keepWith.iterator();\n+                            e.hasNext(); ) {\n+                        TableRow tr = (TableRow)e.next();\n                         tr.removeLayout(areaContainer);\n                         i--;\n                     }\n@@ -200,12 +200,12 @@\n                         // Fix for infinite loop bug if keeps are too big for \npage\n                         rowSpanMgr.setIgnoreKeeps(true);\n \n-                        return new Status(Status.AREA_FULL_NONE);\n+                        return Status.AREA_FULL_NONE;\n                     }\n                 }\n                 this.marker = i;\n-                if ((i != 0) && (status.getCode() == Status.AREA_FULL_NONE)) {\n-                    status = new Status(Status.AREA_FULL_SOME);\n+                if ((i != 0) && (status == Status.AREA_FULL_NONE)) {\n+                    status = Status.AREA_FULL_SOME;\n                 }\n                 if (!((i == 0) && (areaContainer.getContentHeight() <= 0))) {\n                     area.addChild(areaContainer);\n@@ -219,9 +219,9 @@\n                 rowSpanMgr.setIgnoreKeeps(true);\n \n                 return status;\n-            } else if (status.getCode() == Status.KEEP_WITH_NEXT\n+            } else if (status == Status.KEEP_WITH_NEXT\n                        || rowSpanMgr.hasUnfinishedSpans()) {\n-                keepWith.addElement(row);\n+                keepWith.add(row);\n                 endKeepGroup = false;\n             } else {\n                 endKeepGroup = true;\n@@ -247,7 +247,7 @@\n             area.start();\n         }\n \n-        return new Status(Status.OK);\n+        return Status.OK;\n     }\n \n     public void removeLayout(Area area) {\n--- org__src\\org\\apache\\fop\\fo\\flow\\TableCaption.java\tMon Oct 28 11:40:08 2002\n+++ src\\org\\apache\\fop\\fo\\flow\\TableCaption.java\tMon Oct 28 11:40:08 2002\n@@ -9,7 +9,7 @@\n \n // FOP\n import org.apache.fop.fo.*;\n-import org.apache.fop.fo.flow.*;\n+//import org.apache.fop.fo.flow.*;\n import org.apache.fop.fo.properties.*;\n import org.apache.fop.layout.*;\n import org.apache.fop.apps.FOPException;\n@@ -36,7 +36,7 @@\n         this.name = \"fo:table-caption\";\n     }\n \n-    public Status layout(Area area) throws FOPException {\n+    public int layout(Area area) throws FOPException {\n \n         // Common Accessibility Properties\n         AccessibilityProps mAccProps = propMgr.getAccessibilityProps();\n--- org__src\\org\\apache\\fop\\fo\\flow\\TableCell.java\tMon Oct 28 11:40:09 2002\n+++ src\\org\\apache\\fop\\fo\\flow\\TableCell.java\tMon Oct 28 11:40:08 2002\n@@ -193,10 +193,10 @@\n     }\n \n \n-    public Status layout(Area area) throws FOPException {\n+    public int layout(Area area) throws FOPException {\n         int originalAbsoluteHeight = area.getAbsoluteHeight();\n         if (this.marker == BREAK_AFTER) {\n-            return new Status(Status.OK);\n+            return Status.OK;\n         }\n \n         if (this.marker == START) {\n@@ -253,7 +253,7 @@\n \n         int numChildren = this.children.size();\n         for (int i = this.marker; bDone==false && i < numChildren; i++) {\n-            FObj fo = (FObj)children.elementAt(i);\n+            FObj fo = (FObj)children.get(i);\n             fo.setIsInTableCell();\n             fo.forceWidth(width);    // ???\n \n@@ -261,16 +261,16 @@\n             // need to pass already processed content.\n             this.marker = i;\n \n-            Status status;\n-            if ((status = fo.layout(cellArea)).isIncomplete()) {\n+            int status;\n+            if (Status.isIncomplete((status = fo.layout(cellArea)))) {\n                 // this.marker = i;\n-                if ((i == 0) && (status.getCode() == Status.AREA_FULL_NONE)) {\n-                    return new Status(Status.AREA_FULL_NONE);\n+                if ((i == 0) && (status == Status.AREA_FULL_NONE)) {\n+                    return Status.AREA_FULL_NONE;\n                 } else {\n                     // hani Elabed 11/21/2000\n                     area.addChild(cellArea);\n                     // area.setAbsoluteHeight(cellArea.getAbsoluteHeight());\n-                    return new Status(Status.AREA_FULL_SOME);\n+                    return Status.AREA_FULL_SOME;\n                 }\n             }\n \n@@ -298,7 +298,7 @@\n         // area.setHeight(cellArea.getHeight());\n         // area.setAbsoluteHeight(originalAbsoluteHeight);\n \n-        return new Status(Status.OK);\n+        return Status.OK;\n     }\n \n     /**\n--- org__src\\org\\apache\\fop\\fo\\flow\\TableColumn.java\tMon Oct 28 11:40:09 2002\n+++ src\\org\\apache\\fop\\fo\\flow\\TableColumn.java\tMon Oct 28 11:40:09 2002\n@@ -98,9 +98,9 @@\n         setup = true;\n     }\n \n-    public Status layout(Area area) throws FOPException {\n+    public int layout(Area area) throws FOPException {\n         if (this.marker == BREAK_AFTER) {\n-            return new Status(Status.OK);\n+            return Status.OK;\n         }\n \n         if (this.marker == START) {\n@@ -120,7 +120,7 @@\n             areaContainer.setHeight(area.getHeight());\n             area.addChild(areaContainer);\n         }\n-        return new Status(Status.OK);\n+        return Status.OK;\n     }\n \n     public void setColumnOffset(int columnOffset) {\n--- org__src\\org\\apache\\fop\\fo\\flow\\TableRow.java\tMon Oct 28 11:40:10 2002\n+++ src\\org\\apache\\fop\\fo\\flow\\TableRow.java\tMon Oct 28 11:40:09 2002\n@@ -15,8 +15,8 @@\n import org.apache.fop.apps.FOPException;\n \n // Java\n-import java.util.Vector;\n-import java.util.Enumeration;\n+import java.util.ArrayList;\n+import java.util.Iterator;\n \n public class TableRow extends FObj {\n \n@@ -44,7 +44,7 @@\n     int widthOfCellsSoFar = 0;\n     int largestCellHeight = 0;\n     int minHeight = 0;    // force row height\n-    Vector columns;\n+    ArrayList columns;\n \n     AreaContainer areaContainer;\n \n@@ -129,7 +129,7 @@\n             return rslt;\n         }\n \n-        // private class EnumCells implements Enumeration {\n+        // private class EnumCells implements Iterator {\n         // private int iNextIndex=0;\n         // private Object nextCell = null;\n         // EnumCells() {\n@@ -161,11 +161,11 @@\n         // }\n \n         // /**\n-        // * Return an enumeration over all cells in this row\n+        // * Return an Iterator over all cells in this row\n         // * Return each element in cells whose state is CELLSTART or EMPTY?\n         // * Skip spanning elements.\n         // */\n-        // Enumeration getCells() {\n+        // Iterator getCells() {\n         // return new EnumCells();\n         // }\n     }\n@@ -176,7 +176,7 @@\n         this.name = \"fo:table-row\";\n     }\n \n-    public void setColumns(Vector columns) {\n+    public void setColumns(ArrayList columns) {\n         this.columns = columns;\n     }\n \n@@ -240,11 +240,11 @@\n         }\n     }\n \n-    public Status layout(Area area) throws FOPException {\n+    public int layout(Area area) throws FOPException {\n         boolean configID = false;\n \n         if (this.marker == BREAK_AFTER) {\n-            return new Status(Status.OK);\n+            return Status.OK;\n         }\n \n         // Layout the first area for this FO\n@@ -265,7 +265,7 @@\n             this.marker = 0;\n             int breakStatus = propMgr.checkBreakBefore(area);\n             if (breakStatus != Status.OK)\n-                return new Status(breakStatus);\n+                return breakStatus;\n         }\n \n         // if (marker == 0 && configID) {\n@@ -302,7 +302,7 @@\n          */\n         int offset = 0;       // Offset of each cell from table start edge\n         int iColIndex = 0;    // 1-based column index\n-        Enumeration eCols = columns.elements();\n+        Iterator eCols = columns.iterator();\n         /*\n          * Ideas: set offset on each column when they are initialized\n          * no need to calculate for each row.\n@@ -310,10 +310,10 @@\n          * info if borders are \"collapsed\".\n          */\n \n-        while (eCols.hasMoreElements()) {\n+        while (eCols.hasNext()) {\n             TableCell cell;\n             ++iColIndex;\n-            TableColumn tcol = (TableColumn)eCols.nextElement();\n+            TableColumn tcol = (TableColumn)eCols.next();\n             int colWidth = tcol.getColumnWidth();\n             if (cellArray.getCellType(iColIndex) == CellArray.CELLSTART) {\n                 cell = cellArray.getCell(iColIndex);\n@@ -337,10 +337,10 @@\n \n \n             int rowSpan = cell.getNumRowsSpanned();\n-            Status status;\n-            if ((status = cell.layout(areaContainer)).isIncomplete()) {\n+            int status;\n+            if (Status.isIncomplete((status = cell.layout(areaContainer)))) {\n                 if ((keepTogether.getType() == KeepValue.KEEP_WITH_ALWAYS)\n-                        || (status.getCode() == Status.AREA_FULL_NONE)\n+                        || (status == Status.AREA_FULL_NONE)\n                         || rowSpan > 1) {\n                     // We will put this row into the next column/page\n                     // Note: the only time this shouldn't be honored is\n@@ -348,8 +348,8 @@\n                     // Remove spanning cells from RowSpanMgr?\n                     this.resetMarker();\n                     this.removeID(area.getIDReferences());\n-                    return new Status(Status.AREA_FULL_NONE);\n-                } else if (status.getCode() == Status.AREA_FULL_SOME) {\n+                    return Status.AREA_FULL_NONE;\n+                } else if (status == Status.AREA_FULL_SOME) {\n                     /*\n                      * Row is not keep-together, cell isn't spanning\n                      * and part of it fits. We can break the cell and\n@@ -415,35 +415,35 @@\n         // return new Status(Status.OK);\n \n         if (someCellDidNotLayoutCompletely) {\n-            return new Status(Status.AREA_FULL_SOME);\n+            return Status.AREA_FULL_SOME;\n         } else {\n             if (rowSpanMgr.hasUnfinishedSpans()) {\n                 // Ignore break after if row span!\n-                return new Status(Status.KEEP_WITH_NEXT);\n+                return Status.KEEP_WITH_NEXT;\n             }\n             if (breakAfter == BreakAfter.PAGE) {\n                 this.marker = BREAK_AFTER;\n-                return new Status(Status.FORCE_PAGE_BREAK);\n+                return Status.FORCE_PAGE_BREAK;\n             }\n \n             if (breakAfter == BreakAfter.ODD_PAGE) {\n                 this.marker = BREAK_AFTER;\n-                return new Status(Status.FORCE_PAGE_BREAK_ODD);\n+                return Status.FORCE_PAGE_BREAK_ODD;\n             }\n \n             if (breakAfter == BreakAfter.EVEN_PAGE) {\n                 this.marker = BREAK_AFTER;\n-                return new Status(Status.FORCE_PAGE_BREAK_EVEN);\n+                return Status.FORCE_PAGE_BREAK_EVEN;\n             }\n \n             if (breakAfter == BreakAfter.COLUMN) {\n                 this.marker = BREAK_AFTER;\n-                return new Status(Status.FORCE_COLUMN_BREAK);\n+                return Status.FORCE_COLUMN_BREAK;\n             }\n             if (keepWithNext.getType() != KeepValue.KEEP_WITH_AUTO) {\n-                return new Status(Status.KEEP_WITH_NEXT);\n+                return Status.KEEP_WITH_NEXT;\n             }\n-            return new Status(Status.OK);\n+            return Status.OK;\n         }\n \n     }\n@@ -481,13 +481,13 @@\n     private void initCellArray() {\n         cellArray = new CellArray(rowSpanMgr, columns.size());\n         int colNum = 1;\n-        Enumeration eCells = children.elements();\n-        while (eCells.hasMoreElements()) {\n+        Iterator eCells = children.iterator();\n+        while (eCells.hasNext()) {\n             colNum = cellArray.getNextFreeCell(colNum);\n             // If off the end, the rest of the cells had better be\n             // explicitly positioned!!! (returns -1)\n \n-            TableCell cell = (TableCell)eCells.nextElement();\n+            TableCell cell = (TableCell)eCells.next();\n             int numCols = cell.getNumColumnsSpanned();\n             int numRows = cell.getNumRowsSpanned();\n             int cellColNum = cell.getColumnNumber();\n@@ -532,8 +532,8 @@\n     private int getCellWidth(int startCol, int numCols) {\n         int width = 0;\n         for (int count = 0; count < numCols; count++) {\n-            width += ((TableColumn)columns.elementAt(startCol + count\n-                      - 1)).getColumnWidth();\n+            width += ((TableColumn)columns.get(startCol + count\n+                                               - 1)).getColumnWidth();\n         }\n         return width;\n     }\n--- org__src\\org\\apache\\fop\\fo\\flow\\Wrapper.java\tMon Oct 28 11:40:10 2002\n+++ src\\org\\apache\\fop\\fo\\flow\\Wrapper.java\tMon Oct 28 11:40:10 2002\n@@ -43,7 +43,7 @@\n     protected void addCharacters(char data[], int start, int length) {\n         FOText ft = new FOText(data, start, length, this);\n         ft.setLogger(log);\n-        children.addElement(ft);\n+        children.add(ft);\n     }\n \n }\n--- org__src\\org\\apache\\fop\\fo\\pagination\\PageSequence.java\tMon Oct 28 \n11:40:12 2002\n+++ src\\org\\apache\\fop\\fo\\pagination\\PageSequence.java\tMon Oct 28 11:40:11 2002\n@@ -169,7 +169,8 @@\n         } else {\n             pageNumberType = EXPLICIT;\n             try {\n-                int pageStart = new Integer(ipnValue).intValue();\n+                int pageStart = Integer.parseInt( ipnValue);\n+\n                 this.currentPageNumber = (pageStart > 0) ? pageStart - 1 : 0;\n             } catch (NumberFormatException nfe) {\n                 throw new FOPException(\"\\\"\" + ipnValue\n@@ -214,7 +215,7 @@\n      */\n     public void format(AreaTree areaTree) throws FOPException {\n \n-        Status status = new Status(Status.OK);\n+        int status = Status.OK;\n \n         this.layoutMasterSet.resetPageMasters();\n \n@@ -254,10 +255,10 @@\n             // compute flag for 'blank-or-not-blank'\n             boolean isEmptyPage = false;\n \n-            if ((status.getCode() == Status.FORCE_PAGE_BREAK_EVEN)\n+            if ((status == Status.FORCE_PAGE_BREAK_EVEN)\n                     && ((currentPageNumber % 2) == 1)) {\n                 isEmptyPage = true;\n-            } else if ((status.getCode() == Status.FORCE_PAGE_BREAK_ODD)\n+            } else if ((status == Status.FORCE_PAGE_BREAK_ODD)\n                        && ((currentPageNumber % 2) == 0)) {\n                 isEmptyPage = true;\n             } else {\n@@ -275,9 +276,9 @@\n \n             log.info(\"[\" + currentPageNumber + \"]\");\n \n-            if ((status.getCode() == Status.FORCE_PAGE_BREAK_EVEN)\n+            if ((status == Status.FORCE_PAGE_BREAK_EVEN)\n                 && ((currentPageNumber % 2) == 1)) {}\n-            else if ((status.getCode() == Status.FORCE_PAGE_BREAK_ODD)\n+            else if ((status == Status.FORCE_PAGE_BREAK_ODD)\n                  && ((currentPageNumber % 2) == 0)) {}\n             else {\n                 BodyAreaContainer bodyArea = currentPage.getBody();\n@@ -549,8 +550,8 @@\n                 continue;\n             }\n \n-            Status status = flow.getStatus();\n-            isIncomplete |= status.isIncomplete();\n+            int status = flow.getStatus();\n+            isIncomplete |= Status.isIncomplete(status);\n         }\n         return isIncomplete;\n     }\n@@ -589,7 +590,7 @@\n \n \n             Flow flow = (Flow)_flowMap.get(region.getRegionName());\n-            if ((null == flow) || flow.getStatus().isIncomplete())\n+            if ((null == flow) || Status.isIncomplete(flow.getStatus()))\n                 return false;\n             else\n                 return true;\n--- org__src\\org\\apache\\fop\\fo\\pagination\\RegionBody.java\tMon Oct 28 \n11:40:13 2002\n+++ src\\org\\apache\\fop\\fo\\pagination\\RegionBody.java\tMon Oct 28 11:40:13 2002\n@@ -76,7 +76,11 @@\n             this.properties.get(\"column-count\").getString();\n         int columnCount = 1;\n         try {\n-            columnCount = Integer.parseInt(columnCountAsString);\n+            if( columnCountAsString.charAt(0) >= '0' && \ncolumnCountAsString.charAt(0)<= '9') {\n+                columnCount = Integer.parseInt(columnCountAsString);\n+            } else {\n+                log.error(\"Bad value on region body 'column-count'\");\n+            }\n         } catch (NumberFormatException nfe) {\n             log.error(\"Bad value on region body 'column-count'\");\n             columnCount = 1;\n--- org__src\\org\\apache\\fop\\image\\analyser\\ImageReaderFactory.java\tMon Oct \n28 11:40:24 2002\n+++ src\\org\\apache\\fop\\image\\analyser\\ImageReaderFactory.java\tMon Oct 28 \n11:40:24 2002\n@@ -11,8 +11,8 @@\n import java.io.InputStream;\n import java.io.BufferedInputStream;\n import java.io.IOException;\n-import java.util.Enumeration;\n-import java.util.Vector;\n+import java.util.Iterator;\n+import java.util.ArrayList;\n \n // FOP\n import org.apache.fop.image.FopImageException;\n@@ -23,7 +23,7 @@\n  * @version 1.0\n  */\n public class ImageReaderFactory {\n-    static protected Vector formats = null;\n+    static protected ArrayList formats = null;\n \n     /**\n      * ImageReader maker.\n@@ -36,22 +36,22 @@\n                                    InputStream in) throws FopImageException {\n \n         // need to use a config file and remove static methods\n-        formats = new Vector();\n-        formats.addElement(new JPEGReader());\n-        formats.addElement(new BMPReader());\n-        formats.addElement(new GIFReader());\n-        formats.addElement(new PNGReader());\n-        formats.addElement(new TIFFReader());\n-        formats.addElement(new EPSReader());\n-        formats.addElement(new SVGReader());\n+        formats = new ArrayList();\n+        formats.add(new JPEGReader());\n+        formats.add(new BMPReader());\n+        formats.add(new GIFReader());\n+        formats.add(new PNGReader());\n+        formats.add(new TIFFReader());\n+        formats.add(new EPSReader());\n+        formats.add(new SVGReader());\n         //\n \n         ImageReader reader;\n         BufferedInputStream bis = new BufferedInputStream(in);\n-        Enumeration itr = formats.elements();\n+        Iterator itr = formats.iterator();\n         try {\n-            while (itr.hasMoreElements()) {\n-                reader = (ImageReader)itr.nextElement();\n+            while (itr.hasNext()) {\n+                reader = (ImageReader)itr.next();\n                 if (reader.verifySignature(uri, bis)) {\n                     return reader;\n                 }\n--- org__src\\org\\apache\\fop\\layout\\Area.java\tMon Oct 28 11:40:26 2002\n+++ src\\org\\apache\\fop\\layout\\Area.java\tMon Oct 28 11:40:26 2002\n@@ -13,8 +13,8 @@\n import org.apache.fop.layout.inline.InlineSpace;\n \n // Java\n-import java.util.Vector;\n-import java.util.Hashtable;\n+import java.util.ArrayList;\n+import java.util.HashMap;\n \n abstract public class Area extends Box {\n \n@@ -25,7 +25,7 @@\n     protected FontState fontState;\n     protected BorderAndPadding bp = null;\n \n-    protected Vector children = new Vector();\n+    protected ArrayList children = new ArrayList();\n \n     /* max size in line-progression-direction */\n     protected int maxHeight;\n@@ -52,11 +52,11 @@\n \n     private IDReferences idReferences;\n \n-    protected Vector markers;\n+    protected ArrayList markers;\n \n     // as defined in Section 6.1.1\n     protected org.apache.fop.fo.FObj generatedBy;    // corresponds \nto 'generated-by' trait\n-    protected Hashtable returnedBy;\n+    //protected HashMap returnedBy;\n \n     // as defined in Section 6.1.1\n     protected String areaClass;\n@@ -75,8 +75,8 @@\n \n     public Area(FontState fontState) {\n         setFontState(fontState);\n-        this.markers = new Vector();\n-        this.returnedBy = new Hashtable();\n+        this.markers = new ArrayList();\n+        // this.returnedBy = new HashMap();\n     }\n \n     /**\n@@ -93,8 +93,8 @@\n         this.allocationWidth = allocationWidth;\n         this.contentRectangleWidth = allocationWidth;\n         this.maxHeight = maxHeight;\n-        this.markers = new Vector();\n-        this.returnedBy = new Hashtable();\n+        this.markers = new ArrayList();\n+        // this.returnedBy = new HashMap();\n     }\n \n     private void setFontState(FontState fontState) {\n@@ -103,12 +103,12 @@\n     }\n \n     public void addChild(Box child) {\n-        this.children.addElement(child);\n+        this.children.add(child);\n         child.parent = this;\n     }\n \n     public void addChildAtStart(Box child) {\n-        this.children.insertElementAt(child, 0);\n+        this.children.add(0,child);\n         child.parent = this;\n     }\n \n@@ -151,7 +151,7 @@\n         this.contentRectangleWidth = this.allocationWidth;\n     }\n \n-    public Vector getChildren() {\n+    public ArrayList getChildren() {\n         return this.children;\n     }\n \n@@ -274,13 +274,13 @@\n     public void removeChild(Area area) {\n         this.currentHeight -= area.getHeight();\n         this.absoluteHeight -= area.getHeight();\n-        this.children.removeElement(area);\n+        this.children.remove(area);\n     }\n \n     public void removeChild(DisplaySpace spacer) {\n         this.currentHeight -= spacer.getSize();\n         this.absoluteHeight -= spacer.getSize();\n-        this.children.removeElement(spacer);\n+        this.children.remove(spacer);\n     }\n \n     public void remove\n@@ -373,18 +373,18 @@\n     }\n \n     public void addMarker(Marker marker) {\n-        markers.addElement(marker);\n+        markers.add(marker);\n     }\n \n-    public void addMarkers(Vector markers) {\n+    public void addMarkers(ArrayList markers) {\n         markers.addAll(markers);\n     }\n \n     public void addLineagePair(org.apache.fop.fo.FObj fo, int areaPosition) {\n-        returnedBy.put(fo, new Integer(areaPosition));\n+        // returnedBy.put(fo, new Integer(areaPosition));\n     }\n \n-    public Vector getMarkers() {\n+    public ArrayList getMarkers() {\n         return markers;\n     }\n \n--- org__src\\org\\apache\\fop\\layout\\BodyAreaContainer.java\tMon Oct 28 \n11:40:31 2002\n+++ src\\org\\apache\\fop\\layout\\BodyAreaContainer.java\tMon Oct 28 11:40:31 2002\n@@ -17,8 +17,8 @@\n import org.apache.fop.fo.flow.BlockContainer;\n \n // Java\n-import java.util.Vector;\n-import java.util.Enumeration;\n+import java.util.ArrayList;\n+import java.util.Iterator;\n \n public class BodyAreaContainer extends Area {\n \n@@ -165,8 +165,8 @@\n                 return addSpanArea(columnCount);\n         }\n \n-        Vector spanAreas = this.mainReferenceArea.getChildren();\n-        SpanArea spanArea = (SpanArea)spanAreas.elementAt(spanAreas.size()\n+        ArrayList spanAreas = this.mainReferenceArea.getChildren();\n+        SpanArea spanArea = (SpanArea)spanAreas.get(spanAreas.size()\n                             - 1);\n \n         if ((span == Span.ALL) && (spanArea.getColumnCount() == 1)) {\n@@ -220,8 +220,8 @@\n         if (this.mainReferenceArea.getChildren().isEmpty())\n             return false;\n \n-        Vector spanAreas = this.mainReferenceArea.getChildren();\n-        SpanArea spanArea = (SpanArea)spanAreas.elementAt(spanAreas.size()\n+        ArrayList spanAreas = this.mainReferenceArea.getChildren();\n+        SpanArea spanArea = (SpanArea)spanAreas.get(spanAreas.size()\n                             - 1);\n \n         if (spanArea.isBalanced())\n@@ -255,8 +255,8 @@\n      * one added with the computed max height.\n      */\n     public void resetSpanArea() {\n-        Vector spanAreas = this.mainReferenceArea.getChildren();\n-        SpanArea spanArea = (SpanArea)spanAreas.elementAt(spanAreas.size()\n+        ArrayList spanAreas = this.mainReferenceArea.getChildren();\n+        SpanArea spanArea = (SpanArea)spanAreas.get(spanAreas.size()\n                             - 1);\n \n         if (!spanArea.isBalanced()) {\n@@ -299,9 +299,9 @@\n      */\n     private void resetHeights() {\n         int totalHeight = 0;\n-        for (Enumeration e = this.mainReferenceArea.getChildren().elements();\n-                e.hasMoreElements(); ) {\n-            SpanArea spanArea = (SpanArea)e.nextElement();\n+        for (Iterator e = this.mainReferenceArea.getChildren().iterator();\n+                e.hasNext(); ) {\n+            SpanArea spanArea = (SpanArea)e.next();\n             int spanContentHeight = spanArea.getMaxContentHeight();\n             int spanMaxHeight = spanArea.getMaxHeight();\n \n@@ -316,8 +316,8 @@\n      * @returns boolean Is this the last column in this span?\n      */\n     public boolean isLastColumn() {\n-        Vector spanAreas = this.mainReferenceArea.getChildren();\n-        SpanArea spanArea = (SpanArea)spanAreas.elementAt(spanAreas.size()\n+        ArrayList spanAreas = this.mainReferenceArea.getChildren();\n+        SpanArea spanArea = (SpanArea)spanAreas.get(spanAreas.size()\n                             - 1);\n         return spanArea.isLastColumn();\n     }\n@@ -332,8 +332,8 @@\n     }\n \n     public AreaContainer getCurrentColumnArea() {\n-        Vector spanAreas = this.mainReferenceArea.getChildren();\n-        SpanArea spanArea = (SpanArea)spanAreas.elementAt(spanAreas.size()\n+        ArrayList spanAreas = this.mainReferenceArea.getChildren();\n+        SpanArea spanArea = (SpanArea)spanAreas.get(spanAreas.size()\n                             - 1);\n         return spanArea.getCurrentColumnArea();\n     }\n@@ -366,9 +366,9 @@\n             footnoteYPosition = footnoteReferenceArea.getYPosition();\n             footnoteReferenceArea.setMaxHeight(footnoteReferenceArea.getHeight\n());\n \n-            Vector childs = footnoteReferenceArea.getChildren();\n-            for (Enumeration en = childs.elements(); en.hasMoreElements(); ) {\n-                Object obj = en.nextElement();\n+            ArrayList childs = footnoteReferenceArea.getChildren();\n+            for (Iterator en = childs.iterator(); en.hasNext(); ) {\n+                Object obj = en.next();\n                 if (obj instanceof Area) {\n                     Area childArea = (Area)obj;\n                     footnoteReferenceArea.removeChild(childArea);\n@@ -381,9 +381,9 @@\n \n     protected static void resetMaxHeight(Area ar, int change) {\n         ar.setMaxHeight(change);\n-        Vector childs = ar.getChildren();\n-        for (Enumeration en = childs.elements(); en.hasMoreElements(); ) {\n-            Object obj = en.nextElement();\n+        ArrayList childs = ar.getChildren();\n+        for (Iterator en = childs.iterator(); en.hasNext(); ) {\n+            Object obj = en.next();\n             if (obj instanceof Area) {\n                 Area childArea = (Area)obj;\n                 resetMaxHeight(childArea, change);\n--- org__src\\org\\apache\\fop\\layout\\BorderAndPadding.java\tMon Oct 28 \n11:40:32 2002\n+++ src\\org\\apache\\fop\\layout\\BorderAndPadding.java\tMon Oct 28 11:40:32 2002\n@@ -16,35 +16,25 @@\n     public static final int RIGHT = 1;\n     public static final int BOTTOM = 2;\n     public static final int LEFT = 3;\n-\n-    private static class ResolvedCondLength implements Cloneable {\n-        int iLength;    // Resolved length value\n-        boolean bDiscard;\n-\n-        ResolvedCondLength(CondLength length) {\n-            bDiscard = length.isDiscard();\n-            iLength = length.mvalue();\n-        }\n-\n-        public Object clone() throws CloneNotSupportedException {\n-            return super.clone();\n-        }\n-\n+    //ResolvedCondLength is long, mask wiht 0x100000000 != 0 is bDiscard\n+    //\tmask wiht 0xFFFFFFFF is iLength\n+    static final long bDiscard_MASK = 0x100000000L;\n+    static final long iLength_MASK = 0xFFFFFFFFL;\n+    private static final long new_ResolvedCondLength(CondLength length) {\n+        return (length.isDiscard()?bDiscard_MASK:0) + length.mvalue();\n     }\n \n     /**\n-     * Return a full copy of the BorderAndPadding information. This clones all\n-     * padding and border information.\n-     * @return The copy.\n-     */\n+        * Return a full copy of the BorderAndPadding information. This clones \nall\n+        * padding and border information.\n+        * @return The copy.\n+        */\n     public Object clone() throws CloneNotSupportedException {\n         BorderAndPadding bp = (BorderAndPadding) super.clone();\n-        bp.padding = (ResolvedCondLength[])padding.clone();\n+        bp.padding = new long[ padding.length]; //\n+        System.arraycopy( padding, 0, bp.padding, 0, padding.length);\n         bp.borderInfo = (BorderInfo[])borderInfo.clone();\n-        for (int i=0; i<padding.length; i++) {\n-            if (padding[i] != null) {\n-                bp.padding[i]=(ResolvedCondLength)padding[i].clone();\n-            }\n+        for (int i=0; i<borderInfo.length; i++) {\n             if (borderInfo[i] != null) {\n                 bp.borderInfo[i]=(BorderInfo)borderInfo[i].clone();\n             }\n@@ -55,24 +45,23 @@\n     public static class BorderInfo implements Cloneable {\n         private int mStyle;          // Enum for border style\n         private ColorType mColor;    // Border color\n-        private ResolvedCondLength mWidth;\n+        private long mWidth;\n \n         BorderInfo(int style, CondLength width, ColorType color) {\n             mStyle = style;\n-            mWidth = new ResolvedCondLength(width);\n+            mWidth = new_ResolvedCondLength(width);\n             mColor = color;\n         }\n-\n         public Object clone() throws CloneNotSupportedException {\n             BorderInfo bi = (BorderInfo) super.clone();\n-            bi.mWidth = (ResolvedCondLength)mWidth.clone();\n+            bi.mWidth = mWidth;\n             // do we need to clone the Color too???\n             return bi;\n         }\n     }\n \n     private BorderInfo[] borderInfo = new BorderInfo[4];\n-    private ResolvedCondLength[] padding = new ResolvedCondLength[4];\n+    private long[] padding = new long[4];//\n \n     public BorderAndPadding() {}\n \n@@ -82,15 +71,15 @@\n     }\n \n     public void setPadding(int side, CondLength width) {\n-        padding[side] = new ResolvedCondLength(width);\n+        padding[ side] = new_ResolvedCondLength(width);\n     }\n \n     public void setPaddingLength(int side, int iLength) {\n-        padding[side].iLength = iLength;\n+        padding[side] = iLength + padding[side]&bDiscard_MASK;\n     }\n \n     public void setBorderLength(int side, int iLength) {\n-        borderInfo[side].mWidth.iLength = iLength;\n+        borderInfo[side].mWidth = iLength + borderInfo\n[side].mWidth&bDiscard_MASK;\n     }\n \n     public int getBorderLeftWidth(boolean bDiscard) {\n@@ -128,10 +117,13 @@\n \n     private int getBorderWidth(int side, boolean bDiscard) {\n         if ((borderInfo[side] == null)\n-                || (bDiscard && borderInfo[side].mWidth.bDiscard)) {\n+                || (bDiscard &&\n+                    ((borderInfo[side].mWidth&bDiscard_MASK) != 0L)\n+                   )) {\n             return 0;\n-        } else\n-            return borderInfo[side].mWidth.iLength;\n+        } else {\n+            return (int) (borderInfo[side].mWidth&iLength_MASK);\n+        }\n     }\n \n     public ColorType getBorderColor(int side) {\n@@ -149,10 +141,7 @@\n     }\n \n     private int getPadding(int side, boolean bDiscard) {\n-        if ((padding[side] == null) || (bDiscard && padding[side].bDiscard)) {\n-            return 0;\n-        } else\n-            return padding[side].iLength;\n+        return (int)( padding[side]&iLength_MASK);\n     }\n \n }\n--- org__src\\org\\apache\\fop\\layout\\FontInfo.java\tMon Oct 28 11:40:33 2002\n+++ src\\org\\apache\\fop\\layout\\FontInfo.java\tMon Oct 28 11:40:33 2002\n@@ -8,6 +8,7 @@\n package org.apache.fop.layout;\n \n import java.util.Hashtable;\n+import java.util.HashMap;\n import org.apache.fop.messaging.MessageHandler;\n import java.util.Enumeration;\n \n@@ -27,9 +28,9 @@\n     public void addFontProperties(String name, String family, String style,\n                                   String weight) {\n         /*\n-         * add the given family, style and weight as a lookup for the font\n-         * with the given name\n-         */\n+        * add the given family, style and weight as a lookup for the font\n+        * with the given name\n+        */\n \n         String key = createFontKey(family, style, weight);\n         this.triplets.put(key, name);\n@@ -80,16 +81,40 @@\n     /**\n      * Creates a key from the given strings\n      */\n-    public static String createFontKey(String family, String style,\n-                                       String weight) {\n-        int i;\n-\n-        try {\n-            i = Integer.parseInt(weight);\n-        } catch (NumberFormatException e) {\n-            i = 0;\n+    static HashMap _hweight = new HashMap(); //key = wight value _hStyle\n+\n+    public static String createFontKey(String family, String style,String \nweight) {\n+\n+        HashMap _hstyle = (HashMap) _hweight.get( weight);\n+        HashMap _hfamily = null; //key family, value CreateFontKey\n+        String ret = null;\n+        if( _hstyle == null) {\n+            _hweight.put( weight, _hstyle = new HashMap());\n+        } else {\n+            _hfamily = (HashMap) _hstyle.get( style); // , value CreateFontKey\n+        }\n+        if( _hfamily != null) {\n+            ret = (String) _hfamily.get( family);\n+            if( ret != null)\n+                return ret;\n+        } else {\n+            _hstyle.put( style, _hfamily = new HashMap());\n         }\n+        ret = _createFontKey(family, style, weight);\n+        _hfamily.put( family, ret);\n+        return ret;\n+    }\n \n+    private static String _createFontKey(String family, String style,\n+                                         String weight) {\n+        int i = 0;\n+        if( weight.charAt(0)>='0' &&  weight.charAt(0)<='9') {\n+            try {\n+                i = Integer.parseInt(weight);\n+            } catch (NumberFormatException e) {\n+                i = 0;\n+            }\n+        }\n         if (i > 600)\n             weight = \"bold\";\n         else if (i > 0)\n--- org__src\\org\\apache\\fop\\layout\\FontState.java\tMon Oct 28 11:40:33 2002\n+++ src\\org\\apache\\fop\\layout\\FontState.java\tMon Oct 28 11:40:33 2002\n@@ -7,6 +7,7 @@\n \n package org.apache.fop.layout;\n \n+import java.util.HashMap;\n import java.util.Hashtable;\n import java.util.StringTokenizer;\n \n@@ -29,7 +30,41 @@\n \n     private static Hashtable EMPTY_HASHTABLE = new Hashtable();\n \n-\n+    private static HashMap FONT_TOKENS = new  HashMap(16); //key _fontFamily \nvalue String[]\n+    private static String[] getFontFamilyTokens( String fontFamily) {\n+        String ret[] = (String[]) FONT_TOKENS.get(fontFamily);\n+        if( ret != null)\n+            return ret;\n+        StringTokenizer st = new StringTokenizer(fontFamily, \",\");\n+        ret = new String[ st.countTokens()];\n+        FONT_TOKENS.put(fontFamily, ret);\n+        for( int j = 0; j < ret.length; j++) {\n+            //while (st.hasMoreTokens()) {\n+            String token = st.nextToken().trim();\n+            //Checks for quoted font family name\n+            if (token.charAt(0) == '\"' || token.charAt(0) == '\\'')\n+                token = token.substring(1, token.length()-1);\n+            else {\n+                //In a nonquoted font family name any sequence of whitespace\n+                //inside should be converted to a single space\n+                StringBuffer sb = new StringBuffer();\n+                boolean spaced = false;\n+                for (int i=0; i<token.length(); i++) {\n+                    char c = token.charAt(i);\n+                    if (!isWhitespace(c)) {\n+                        sb.append(c);\n+                        spaced = false;\n+                    } else if (!spaced) {\n+                        sb.append(c);\n+                        spaced = true;\n+                    }\n+                }\n+                token = sb.toString();\n+            }\n+            ret[j] = token;\n+        }\n+        return ret;\n+    }\n     public FontState(FontInfo fontInfo, String fontFamily, String fontStyle,\n                      String fontWeight, int fontSize,\n                      int fontVariant) throws FOPException {\n@@ -41,30 +76,36 @@\n         String _fontKey = FontInfo.createFontKey(_fontFamily, _fontStyle, \n_fontWeight);\n         //Quick check-out for simple font family\n         if (!fontInfo.hasFont(_fontKey)) {\n-            //Tokenizes font-family list\n-            StringTokenizer st = new StringTokenizer(_fontFamily, \",\");\n-            while (st.hasMoreTokens()) {\n-                String token = st.nextToken().trim();\n-                //Checks for quoted font family name\n-                if (token.charAt(0) == '\"' || token.charAt(0) == '\\'')\n-                    token = token.substring(1, token.length()-1);\n-                else {\n-                    //In a nonquoted font family name any sequence of \nwhitespace\n-                    //inside should be converted to a single space\n-                    StringBuffer sb = new StringBuffer();\n-                    boolean spaced = false;\n-                    for (int i=0; i<token.length(); i++) {\n-                        char c = token.charAt(i);\n-                        if (!isWhitespace(c)) {\n-                            sb.append(c);\n-                            spaced = false;\n-                        } else if (!spaced) {\n-                            sb.append(c);\n-                            spaced = true;\n-                        }\n-                    }\n-                    token = sb.toString();\n-                }\n+            String _aString[] = getFontFamilyTokens( _fontFamily);\n+            for( int i = 0; i < _aString.length; i++) {\n+                String token = _aString[i];\n+                /*\n+                \t\t\t//Tokenizes font-family list\n+                            StringTokenizer st = new StringTokenizer\n(_fontFamily, \",\");\n+                            while (st.hasMoreTokens()){\n+                                String token = st.nextToken().trim();\n+                                //Checks for quoted font family name\n+                                if (token.charAt(0) == '\"' || token.charAt(0) \n== '\\'')\n+                                    token = token.substring(1, token.length()-\n1);\n+                                else {\n+                                    //In a nonquoted font family name any \nsequence of whitespace\n+                                    //inside should be converted to a single \nspace\n+                                    StringBuffer sb = new StringBuffer();\n+                                    boolean spaced = false;\n+                                    for (int i=0; i<token.length(); i++) {\n+                                        char c = token.charAt(i);\n+                                        if (!isWhitespace(c)) {\n+                                            sb.append(c);\n+                                            spaced = false;\n+                                        }\n+                                        else if (!spaced) {\n+                                            sb.append(c);\n+                                            spaced = true;\n+                                        }\n+                                    }\n+                                    token = sb.toString();\n+                                }\n+                */\n                 //Checks found font family name for existence\n                 _fontKey = FontInfo.createFontKey(token, _fontStyle, \n_fontWeight);\n                 if (fontInfo.hasFont(_fontKey)) {\n--- org__src\\org\\apache\\fop\\layout\\LineArea.java\tMon Oct 28 11:40:34 2002\n+++ src\\org\\apache\\fop\\layout\\LineArea.java\tMon Oct 28 11:40:34 2002\n@@ -27,8 +27,8 @@\n import org.apache.fop.configuration.Configuration;\n \n // java\n-import java.util.Vector;\n-import java.util.Enumeration;\n+import java.util.ArrayList;\n+import java.util.Iterator;\n import java.util.StringTokenizer;\n import java.awt.Rectangle;\n \n@@ -90,7 +90,7 @@\n      * because subsequent characters to come (in a different addText)\n      * may be part of the same word\n      */\n-    protected Vector pendingAreas = new Vector();\n+    protected ArrayList pendingAreas = new ArrayList();\n \n     /* the width of the pendingAreas */\n     protected int pendingWidth = 0;\n@@ -123,7 +123,7 @@\n         this.endIndent = endIndent;\n \n         if (prevLineArea != null) {\n-            Enumeration e = prevLineArea.pendingAreas.elements();\n+            Iterator e = prevLineArea.pendingAreas.iterator();\n             Box b = null;\n             // There might be InlineSpaces at the beginning\n             // that should not be there - eat them\n@@ -131,8 +131,8 @@\n             int eatenWidth = 0;\n \n             while (eatMoreSpace) {\n-                if (e.hasMoreElements()) {\n-                    b = (Box)e.nextElement();\n+                if (e.hasNext()) {\n+                    b = (Box)e.next();\n                     if (b instanceof InlineSpace) {\n                         InlineSpace is = (InlineSpace)b;\n                         if (is.isEatable())\n@@ -149,9 +149,9 @@\n             }\n \n             while (b != null) {\n-                pendingAreas.addElement(b);\n-                if (e.hasMoreElements())\n-                    b = (Box)e.nextElement();\n+                pendingAreas.add(b);\n+                if (e.hasNext())\n+                    b = (Box)e.next();\n                 else\n                     b = null;\n             }\n@@ -178,7 +178,7 @@\n                                    this.red, this.green, this.blue, refid, \nwidth);\n \n         pia.setYOffset(placementOffset);\n-        pendingAreas.addElement(pia);\n+        pendingAreas.add(pia);\n         pendingWidth += width;\n         prev = TEXT;\n \n@@ -297,9 +297,9 @@\n \n                     // add any pending areas\n \n-                    Enumeration e = pendingAreas.elements();\n-                    while (e.hasMoreElements()) {\n-                        Box box = (Box)e.nextElement();\n+                    Iterator e = pendingAreas.iterator();\n+                    while (e.hasNext()) {\n+                        Box box = (Box)e.next();\n                         if (box instanceof InlineArea) {\n                             if (ls != null) {\n                                 Rectangle lr =\n@@ -316,7 +316,7 @@\n \n                     // reset pending areas array\n                     pendingWidth = 0;\n-                    pendingAreas = new Vector();\n+                    pendingAreas = new ArrayList();\n \n                     // add the current word\n \n@@ -433,9 +433,9 @@\n \n                         // add any pending areas\n \n-                        Enumeration e = pendingAreas.elements();\n-                        while (e.hasMoreElements()) {\n-                            Box box = (Box)e.nextElement();\n+                        Iterator e = pendingAreas.iterator();\n+                        while (e.hasNext()) {\n+                            Box box = (Box)e.next();\n                             if (box instanceof InlineArea) {\n                                 if (ls != null) {\n                                     Rectangle lr =\n@@ -452,7 +452,7 @@\n \n                         // reset pending areas array\n                         pendingWidth = 0;\n-                        pendingAreas = new Vector();\n+                        pendingAreas = new ArrayList();\n \n                         // add the current word\n \n@@ -556,7 +556,7 @@\n                 if (prevLTState) {\n                     pis.setLineThrough(textState.getLineThrough());\n                 }\n-                pendingAreas.addElement(pis);\n+                pendingAreas.add(pis);\n                 pendingWidth += spaceWidth;\n                 spaceWidth = 0;\n             }\n@@ -619,7 +619,7 @@\n         switch (leaderPattern) {\n         case LeaderPattern.SPACE:\n             InlineSpace spaceArea = new InlineSpace(leaderLength);\n-            pendingAreas.addElement(spaceArea);\n+            pendingAreas.add(spaceArea);\n             break;\n         case LeaderPattern.RULE:\n             LeaderArea leaderArea = new LeaderArea(fontState, red, green,\n@@ -627,7 +627,7 @@\n                                                    leaderPattern,\n                                                    ruleThickness, ruleStyle);\n             leaderArea.setYOffset(placementOffset);\n-            pendingAreas.addElement(leaderArea);\n+            pendingAreas.add(leaderArea);\n             break;\n         case LeaderPattern.DOTS:\n             // if the width of a dot is larger than leader-pattern-width\n@@ -637,8 +637,8 @@\n             }\n             // if value of leader-pattern-width is 'use-font-metrics' (0)\n             if (leaderPatternWidth == 0) {\n-                pendingAreas.addElement(this.buildSimpleLeader(dotIndex,\n-                                        leaderLength));\n+                pendingAreas.add(this.buildSimpleLeader(dotIndex,\n+                                                        leaderLength));\n             } else {\n                 // if leader-alignment is used, calculate space to insert \nbefore leader\n                 // so that all dots will be parallel.\n@@ -649,8 +649,8 @@\n                     // appending indent space leader-alignment\n                     // setting InlineSpace to false, so it is not used in line \njustification\n                     if (spaceBeforeLeader != 0) {\n-                        pendingAreas.addElement(new InlineSpace\n(spaceBeforeLeader,\n-                                                                false));\n+                        pendingAreas.add(new InlineSpace(spaceBeforeLeader,\n+                                                         false));\n                         pendingWidth += spaceBeforeLeader;\n                         // shorten leaderLength, otherwise - in case of\n                         // leaderLength=remaining length - it will cut off the \nend of\n@@ -675,13 +675,13 @@\n                 // add combination of dot + space to fill leader\n                 // is there a way to do this in a more effective way?\n                 for (int i = 0; i < dotsFactor; i++) {\n-                    pendingAreas.addElement(leaderPatternArea);\n-                    pendingAreas.addElement(spaceBetweenDots);\n+                    pendingAreas.add(leaderPatternArea);\n+                    pendingAreas.add(spaceBetweenDots);\n                 }\n                 // append at the end some space to fill up to leader length\n-                pendingAreas.addElement(new InlineSpace(leaderLength\n-                                                        - dotsFactor\n-                                                        * leaderPatternWidth));\n+                pendingAreas.add(new InlineSpace(leaderLength\n+                                                 - dotsFactor\n+                                                 * leaderPatternWidth));\n             }\n             break;\n             // leader pattern use-content not implemented.\n@@ -709,9 +709,9 @@\n             spaceWidth = 0;\n         }\n \n-        Enumeration e = pendingAreas.elements();\n-        while (e.hasMoreElements()) {\n-            Box box = (Box)e.nextElement();\n+        Iterator e = pendingAreas.iterator();\n+        while (e.hasNext()) {\n+            Box box = (Box)e.next();\n             addChild(box);\n         }\n \n@@ -719,7 +719,7 @@\n \n         // reset pending areas array\n         pendingWidth = 0;\n-        pendingAreas = new Vector();\n+        pendingAreas = new ArrayList();\n     }\n \n     /**\n@@ -746,9 +746,9 @@\n         case TextAlign.JUSTIFY:    // justify\n             // first pass - count the spaces\n             int spaceCount = 0;\n-            Enumeration e = children.elements();\n-            while (e.hasMoreElements()) {\n-                Box b = (Box)e.nextElement();\n+            Iterator e = children.iterator();\n+            while (e.hasNext()) {\n+                Box b = (Box)e.next();\n                 if (b instanceof InlineSpace) {\n                     InlineSpace space = (InlineSpace)b;\n                     if (space.getResizeable()) {\n@@ -763,9 +763,9 @@\n             }\n             // second pass - add additional space\n             spaceCount = 0;\n-            e = children.elements();\n-            while (e.hasMoreElements()) {\n-                Box b = (Box)e.nextElement();\n+            e = children.iterator();\n+            while (e.hasNext()) {\n+                Box b = (Box)e.next();\n                 if (b instanceof InlineSpace) {\n                     InlineSpace space = (InlineSpace)b;\n                     if (space.getResizeable()) {\n@@ -786,9 +786,9 @@\n     public void verticalAlign() {\n         int superHeight = -this.placementOffset;\n         int maxHeight = this.allocationHeight;\n-        Enumeration e = children.elements();\n-        while (e.hasMoreElements()) {\n-            Box b = (Box)e.nextElement();\n+        Iterator e = children.iterator();\n+        while (e.hasNext()) {\n+            Box b = (Box)e.next();\n             if (b instanceof InlineArea) {\n                 InlineArea ia = (InlineArea)b;\n                 if (ia instanceof WordArea) {\n@@ -855,7 +855,7 @@\n         // return (prev == NOTHING);\n     }\n \n-    public Vector getPendingAreas() {\n+    public ArrayList getPendingAreas() {\n         return pendingAreas;\n     }\n \n@@ -863,7 +863,7 @@\n         return pendingWidth;\n     }\n \n-    public void setPendingAreas(Vector areas) {\n+    public void setPendingAreas(ArrayList areas) {\n         pendingAreas = areas;\n     }\n \n@@ -1135,7 +1135,7 @@\n                               width);\n             ia.setYOffset(placementOffset);\n             ia.setUnderlined(ul);\n-            pendingAreas.addElement(ia);\n+            pendingAreas.add(ia);\n             if (Character.isSpaceChar(data)) {\n                 this.spaceWidth = +width;\n                 prev = LineArea.WHITESPACE;\n@@ -1235,59 +1235,65 @@\n      * versions of space that might not exists in the font.\n      */\n     private int getCharWidth(char c) {\n-        int width;\n+        switch( c) {\n+        case '\\n':\n+        case '\\r':\n+        case '\\t':\n+        case '\\u00A0':\n+            return getCharWidth(' ');\n+        }\n+\n+        int width = currentFontState.width(currentFontState.mapChar(c));\n+        if (width > 0)\n+            return width;\n+        if (c == ' ')\n+            return currentFontState.width(currentFontState.mapChar('m'));\n+\n+        // Estimate the width of spaces not represented in\n+        // the font\n+        int em = currentFontState.width(currentFontState.mapChar('m'));\n+        int en = currentFontState.width(currentFontState.mapChar('n'));\n+        if (em <= 0)\n+            em = 500 * currentFontState.getFontSize();\n+        if (en <= 0)\n+            en = em - 10;\n+\n+        //if (c == ' ') width = em;\n+        switch( c) {\n+        case '\\u2000':\n+            return en;\n+        case '\\u2001':\n+            return em;\n+        case '\\u2002':\n+            return em / 2;\n+        case '\\u2003':\n+            return currentFontState.getFontSize();\n+        case '\\u2004':\n+            return em / 3;\n+        case '\\u2005':\n+            return em / 4;\n+        case '\\u2006':\n+            return em / 6;\n+        case '\\u2007':\n+            return getCharWidth(' ');\n+        case '\\u2008':\n+            return getCharWidth('.');\n+        case '\\u2009':\n+            return em / 5;\n+        case '\\u200A':\n+            return 5;\n+        case '\\u200B':\n+            return 100;\n+        case '\\u202F':\n+            return getCharWidth(' ') / 2;\n+        case '\\u3000':\n+            return getCharWidth(' ') * 2;\n \n-        if ((c == '\\n') || (c == '\\r') || (c == '\\t') || (c == '\\u00A0')) {\n-            width = getCharWidth(' ');\n-        } else {\n-            width = currentFontState.width(currentFontState.mapChar(c));\n-            if (width <= 0) {\n-                // Estimate the width of spaces not represented in\n-                // the font\n-                int em = currentFontState.width(currentFontState.mapChar('m'));\n-                int en = currentFontState.width(currentFontState.mapChar('n'));\n-                if (em <= 0)\n-                    em = 500 * currentFontState.getFontSize();\n-                if (en <= 0)\n-                    en = em - 10;\n-\n-                if (c == ' ')\n-                    width = em;\n-                if (c == '\\u2000')\n-                    width = en;\n-                if (c == '\\u2001')\n-                    width = em;\n-                if (c == '\\u2002')\n-                    width = em / 2;\n-                if (c == '\\u2003')\n-                    width = currentFontState.getFontSize();\n-                if (c == '\\u2004')\n-                    width = em / 3;\n-                if (c == '\\u2005')\n-                    width = em / 4;\n-                if (c == '\\u2006')\n-                    width = em / 6;\n-                if (c == '\\u2007')\n-                    width = getCharWidth(' ');\n-                if (c == '\\u2008')\n-                    width = getCharWidth('.');\n-                if (c == '\\u2009')\n-                    width = em / 5;\n-                if (c == '\\u200A')\n-                    width = 5;\n-                if (c == '\\u200B')\n-                    width = 100;\n-                if (c == '\\u202F')\n-                    width = getCharWidth(' ') / 2;\n-                if (c == '\\u3000')\n-                    width = getCharWidth(' ') * 2;\n-            }\n         }\n \n-        return width;\n+        return 0;\n     }\n \n-\n     /**\n      * Helper method to determine if the character is a\n      * space with normal behaviour. Normal behaviour means that\n@@ -1341,63 +1347,83 @@\n     private void addSpacedWord(String word, LinkSet ls, int startw,\n                                int spacew, TextState textState,\n                                boolean addToPending) {\n-        StringTokenizer st = new StringTokenizer(word, \"\\u00A0\\u202F\\u3000\n\\uFEFF\", true);\n-        int extraw = 0;\n-        while (st.hasMoreTokens()) {\n-            String currentWord = st.nextToken();\n-\n-            if (currentWord.length() == 1\n-                    && (isNBSP(currentWord.charAt(0)))) {\n-                // Add an InlineSpace\n-                int spaceWidth = getCharWidth(currentWord.charAt(0));\n-                if (spaceWidth > 0) {\n-                    InlineSpace is = new InlineSpace(spaceWidth);\n-                    extraw += spaceWidth;\n-                    if (prevUlState) {\n-                        is.setUnderlined(textState.getUnderlined());\n-                    }\n-                    if (prevOlState) {\n-                        is.setOverlined(textState.getOverlined());\n-                    }\n-                    if (prevLTState) {\n-                        is.setLineThrough(textState.getLineThrough());\n-                    }\n-\n-                    if (addToPending) {\n-                        pendingAreas.addElement(is);\n-                        pendingWidth += spaceWidth;\n-                    } else {\n-                        addChild(is);\n-                    }\n+        for( int i = 0; i < word.length(); i++) {\n+            switch( word.charAt(i)) {\n+            case '\\u00A0':\n+            case '\\u202F':\n+            case '\\u3000':\n+            case '\\uFEFF':\n+                //default:\n+                StringTokenizer st = new StringTokenizer(word, \"\\u00A0\n\\u202F\\u3000\\uFEFF\", true);\n+                int extraw = 0;\n+                while (st.hasMoreTokens()) {\n+                    String currentWord = st.nextToken();\n+                    extraw = proc_addSpacedWord(currentWord,  ls,  startw,\n+                                                spacew, textState,\n+                                                addToPending, extraw);\n+                }\n+                return;\n+            }\n+        }\n+        proc_addSpacedWord( word,  ls,  startw,\n+                            spacew, textState,\n+                            addToPending, 0);\n+    }\n+    private int proc_addSpacedWord(String currentWord, LinkSet ls, int startw,\n+                                   int spacew, TextState textState,\n+                                   boolean addToPending, int extraw) {\n+        if (currentWord.length() == 1\n+                && (isNBSP(currentWord.charAt(0)))) {\n+            // Add an InlineSpace\n+            int spaceWidth = getCharWidth(currentWord.charAt(0));\n+            if (spaceWidth > 0) {\n+                InlineSpace is = new InlineSpace(spaceWidth);\n+                extraw += spaceWidth;\n+                if (prevUlState) {\n+                    is.setUnderlined(textState.getUnderlined());\n+                }\n+                if (prevOlState) {\n+                    is.setOverlined(textState.getOverlined());\n+                }\n+                if (prevLTState) {\n+                    is.setLineThrough(textState.getLineThrough());\n                 }\n-            } else {\n-                WordArea ia = new WordArea(currentFontState, this.red,\n-                                           this.green, this.blue,\n-                                           currentWord,\n-                                           getWordWidth(currentWord));\n-                ia.setYOffset(placementOffset);\n-                ia.setUnderlined(textState.getUnderlined());\n-                prevUlState = textState.getUnderlined();\n-                ia.setOverlined(textState.getOverlined());\n-                prevOlState = textState.getOverlined();\n-                ia.setLineThrough(textState.getLineThrough());\n-                prevLTState = textState.getLineThrough();\n-                ia.setVerticalAlign(vAlign);\n \n                 if (addToPending) {\n-                    pendingAreas.addElement(ia);\n-                    pendingWidth += getWordWidth(currentWord);\n+                    pendingAreas.add(is);\n+                    pendingWidth += spaceWidth;\n                 } else {\n-                    addChild(ia);\n-                }\n-                if (ls != null) {\n-                    Rectangle lr = new Rectangle(startw + extraw, spacew,\n-                                                 ia.getContentWidth(),\n-                                                 fontState.getFontSize());\n-                    ls.addRect(lr, this, ia);\n+                    addChild(is);\n                 }\n             }\n+        } else {\n+            WordArea ia = new WordArea(currentFontState, this.red,\n+                                       this.green, this.blue,\n+                                       currentWord,\n+                                       getWordWidth(currentWord));\n+            ia.setYOffset(placementOffset);\n+            ia.setUnderlined(textState.getUnderlined());\n+            prevUlState = textState.getUnderlined();\n+            ia.setOverlined(textState.getOverlined());\n+            prevOlState = textState.getOverlined();\n+            ia.setLineThrough(textState.getLineThrough());\n+            prevLTState = textState.getLineThrough();\n+            ia.setVerticalAlign(vAlign);\n+\n+            if (addToPending) {\n+                pendingAreas.add(ia);\n+                pendingWidth += getWordWidth(currentWord);\n+            } else {\n+                addChild(ia);\n+            }\n+            if (ls != null) {\n+                Rectangle lr = new Rectangle(startw + extraw, spacew,\n+                                             ia.getContentWidth(),\n+                                             fontState.getFontSize());\n+                ls.addRect(lr, this, ia);\n+            }\n         }\n+        return extraw;\n     }\n \n }\n--- org__src\\org\\apache\\fop\\layout\\SpanArea.java\tMon Oct 28 11:40:37 2002\n+++ src\\org\\apache\\fop\\layout\\SpanArea.java\tMon Oct 28 11:40:37 2002\n@@ -14,7 +14,7 @@\n \n // Java\n import java.util.Vector;\n-import java.util.Enumeration;\n+import java.util.Iterator;\n \n public class SpanArea extends AreaContainer {\n \n@@ -77,7 +77,7 @@\n     }\n \n     public AreaContainer getCurrentColumnArea() {\n-        return (AreaContainer)getChildren().elementAt(currentColumn - 1);\n+        return (AreaContainer)getChildren().get(currentColumn - 1);\n     }\n \n     public boolean isBalanced() {\n@@ -90,19 +90,19 @@\n \n     public int getTotalContentHeight() {\n         int totalContentHeight = 0;\n-        for (Enumeration e = getChildren().elements();\n-                e.hasMoreElements(); ) {\n+        for (Iterator e = getChildren().iterator();\n+                e.hasNext(); ) {\n             totalContentHeight +=\n-                ((AreaContainer)e.nextElement()).getContentHeight();\n+                ((AreaContainer)e.next()).getContentHeight();\n         }\n         return totalContentHeight;\n     }\n \n     public int getMaxContentHeight() {\n         int maxContentHeight = 0;\n-        for (Enumeration e = getChildren().elements();\n-                e.hasMoreElements(); ) {\n-            AreaContainer nextElm = (AreaContainer)e.nextElement();\n+        for (Iterator e = getChildren().iterator();\n+                e.hasNext(); ) {\n+            AreaContainer nextElm = (AreaContainer)e.next();\n             if (nextElm.getContentHeight() > maxContentHeight)\n                 maxContentHeight = nextElm.getContentHeight();\n         }\n@@ -111,9 +111,9 @@\n \n     public void setPage(Page page) {\n         this.page = page;\n-        for (Enumeration e = getChildren().elements();\n-                e.hasMoreElements(); ) {\n-            ((AreaContainer)e.nextElement()).setPage(page);\n+        for (Iterator e = getChildren().iterator();\n+                e.hasNext(); ) {\n+            ((AreaContainer)e.next()).setPage(page);\n         }\n     }\n \n--- org__src\\org\\apache\\fop\\render\\AbstractRenderer.java\tMon Oct 28 \n11:40:58 2002\n+++ src\\org\\apache\\fop\\render\\AbstractRenderer.java\tMon Oct 28 11:40:57 2002\n@@ -24,7 +24,7 @@\n // Java\n import java.io.IOException;\n import java.io.OutputStream;\n-import java.util.Enumeration;\n+import java.util.Iterator;\n \n /**\n  * Abstract base class for all renderers.\n@@ -53,9 +53,9 @@\n     }\n \n     public void renderSpanArea(SpanArea area) {\n-        Enumeration e = area.getChildren().elements();\n-        while (e.hasMoreElements()) {\n-            Box b = (Box)e.nextElement();\n+        Iterator e = area.getChildren().iterator();\n+        while (e.hasNext()) {\n+            Box b = (Box)e.next();\n             b.render(this);    // column areas\n         }\n \n@@ -313,9 +313,9 @@\n         renderAreaContainer(area.getFootnoteReferenceArea());\n \n         // main reference area\n-        Enumeration e = area.getMainReferenceArea().getChildren().elements();\n-        while (e.hasMoreElements()) {\n-            Box b = (Box)e.nextElement();\n+        Iterator e = area.getMainReferenceArea().getChildren().iterator();\n+        while (e.hasNext()) {\n+            Box b = (Box)e.next();\n             b.render(this);    // span areas\n         }\n \n@@ -357,9 +357,9 @@\n         this.currentXPosition = this.currentAreaContainerXPosition;\n         doFrame(area);\n \n-        Enumeration e = area.getChildren().elements();\n-        while (e.hasMoreElements()) {\n-            Box b = (Box)e.nextElement();\n+        Iterator e = area.getChildren().iterator();\n+        while (e.hasNext()) {\n+            Box b = (Box)e.next();\n             b.render(this);\n         }\n         // Restore previous origin\n@@ -391,9 +391,9 @@\n         this.currentYPosition -= (area.getPaddingTop()\n                                   + area.getBorderTopWidth());\n         doFrame(area);\n-        Enumeration e = area.getChildren().elements();\n-        while (e.hasMoreElements()) {\n-            Box b = (Box)e.nextElement();\n+        Iterator e = area.getChildren().iterator();\n+        while (e.hasNext()) {\n+            Box b = (Box)e.next();\n             b.render(this);\n         }\n         this.currentYPosition -= (area.getPaddingBottom()\n@@ -416,9 +416,9 @@\n \n         int bl = this.currentYPosition;\n \n-        Enumeration e = area.getChildren().elements();\n-        while (e.hasMoreElements()) {\n-            Box b = (Box)e.nextElement();\n+        Iterator e = area.getChildren().iterator();\n+        while (e.hasNext()) {\n+            Box b = (Box)e.next();\n             if (b instanceof InlineArea) {\n                 InlineArea ia = (InlineArea)b;\n                 this.currentYPosition = ry - ia.getYOffset();\n--- org__src\\org\\apache\\fop\\render\\mif\\MIFRenderer.java\tMon Oct 28 11:41:00 2002\n+++ src\\org\\apache\\fop\\render\\mif\\MIFRenderer.java\tMon Oct 28 11:41:00 2002\n@@ -20,7 +20,6 @@\n import org.apache.fop.datatypes.*;\n import org.apache.fop.svg.*;\n import org.apache.fop.mif.*;\n-import org.apache.fop.layout.*;\n import org.apache.fop.image.*;\n \n import org.w3c.dom.*;\n--- org__src\\org\\apache\\fop\\render\\pdf\\fonts\\MultiByteFont.java\tMon Oct 28 \n11:41:09 2002\n+++ src\\org\\apache\\fop\\render\\pdf\\fonts\\MultiByteFont.java\tMon Oct 28 \n11:41:09 2002\n@@ -71,19 +71,19 @@\n     /**\n      * usedGlyphsIndex contains new glyph, original index\n      */\n-    private Hashtable usedGlyphsIndex = new Hashtable();\n+\n     int usedGlyphsCount = 0;\n \n     public MultiByteFont() {\n         // Make sure that the 3 first glyphs are included\n         usedGlyphs.put(new Integer(0), new Integer(0));\n-        usedGlyphsIndex.put(new Integer(0), new Integer(0));\n+        usedGlyphsIndex[ 0] = 0;\n         usedGlyphsCount++;\n         usedGlyphs.put(new Integer(1), new Integer(1));\n-        usedGlyphsIndex.put(new Integer(1), new Integer(1));\n+        usedGlyphsIndex[ 1] = 1;\n         usedGlyphsCount++;\n         usedGlyphs.put(new Integer(2), new Integer(2));\n-        usedGlyphsIndex.put(new Integer(2), new Integer(2));\n+        usedGlyphsIndex[ 2] = 2;\n         usedGlyphsCount++;\n \n         // Create a quasiunique prefix for fontname\n@@ -93,6 +93,8 @@\n         }\n         int ctm = (int)(System.currentTimeMillis() & 0xffff);\n         namePrefix = new String(cnt + \"E\" + Integer.toHexString(ctm));\n+        for( int i = 0; i < usedGlyphsIndex.length; i++)\n+            usedGlyphsIndex[i] = -1;\n     }\n \n     public final boolean hasKerningInfo() {\n@@ -177,9 +179,10 @@\n             int[] tmpWidth = new int[usedGlyphsCount];\n \n             for (int i = 0; i < usedGlyphsCount; i++) {\n-                Integer nw = (Integer)usedGlyphsIndex.get(new Integer(i));\n-                int nwx = (nw == null) ? 0 : nw.intValue();\n+                int nw = usedGlyphsIndex[ i&0xffff];\n+                int nwx = (nw < 0) ? 0 : nw;\n                 tmpWidth[i] = width[nwx];\n+\n             }\n             warray.addEntry(0, tmpWidth);\n         }\n@@ -187,8 +190,7 @@\n     }\n \n     public boolean isEmbeddable() {\n-        return (embedFileName == null && embedResourceName == null) ? false\n-               : true;\n+        return embedFileName != null || embedResourceName != null;\n     }\n \n \n@@ -272,11 +274,11 @@\n     public int getLastChar() {\n         return 255;\n     }\n-\n+    //char,size\n+    int usedGlyphsIndex[] = new int[0x10000];\n     public int width(int i, int size) {\n         if (isEmbeddable()) {\n-            Integer idx = (Integer)usedGlyphsIndex.get(new Integer(i));\n-            return size * width[idx.intValue()];\n+            return size * width[usedGlyphsIndex[ i&0xffff]];\n         } else {\n             return size * width[i];\n         }\n@@ -290,19 +292,11 @@\n         return arr;\n     }\n \n-    public Integer reMap(Integer i) {\n-        if (isEmbeddable()) {\n-            Integer ret = (Integer)usedGlyphsIndex.get(i);\n-            if (ret == null)\n-                ret = i;\n-            return ret;\n-        } else {\n-            return i;\n-        }\n-\n-    }\n-\n+    char aChar[] = new char[ 0x10000];\n     public char mapChar(char c) {\n+        int ind = ((int) c) & 0xFFFF;\n+        if( aChar[ ind ] != 0)\n+            return aChar[ ind ];\n         int idx = (int)c;\n         int retIdx = 0;\n \n@@ -317,21 +311,18 @@\n         if (isEmbeddable()) {\n             // Reencode to a new subset font or get\n             // the reencoded value\n-            Integer newIdx = (Integer)usedGlyphs.get(new Integer(retIdx));\n+            Integer newIdx = (Integer)usedGlyphs.get( new Integer(retIdx));\n             if (newIdx == null) {\n-                usedGlyphs.put(new Integer(retIdx),\n-                               new Integer(usedGlyphsCount));\n-                usedGlyphsIndex.put(new Integer(usedGlyphsCount),\n-                                    new Integer(retIdx));\n+                usedGlyphs.put(new Integer(retIdx), new Integer\n(usedGlyphsCount));\n+                usedGlyphsIndex[ usedGlyphsCount & 0xffff] = retIdx;\n                 retIdx = usedGlyphsCount;\n-                // System.out.println(c+\"(\"+(int)c+\") = \"+retIdx);\n                 usedGlyphsCount++;\n             } else {\n                 retIdx = newIdx.intValue();\n             }\n         }\n \n-        return (char)retIdx;\n+        return aChar[ ind ] = (char)retIdx;\n     }\n \n }\n--- org__src\\org\\apache\\fop\\render\\ps\\PSRenderer.java\tMon Oct 28 11:41:11 2002\n+++ src\\org\\apache\\fop\\render\\ps\\PSRenderer.java\tMon Oct 28 11:41:11 2002\n@@ -770,9 +770,9 @@\n \n         String fontWeight = area.getFontState().getFontWeight();\n         //comment(\"% --- LineArea begin font-weight=\"+fontWeight);\n-        Enumeration e = area.getChildren().elements();\n-        while (e.hasMoreElements()) {\n-            Box b = (Box)e.nextElement();\n+        Iterator e = area.getChildren().iterator();\n+        while (e.hasNext()) {\n+            Box b = (Box)e.next();\n             this.currentYPosition = ry - area.getPlacementOffset();\n             b.render(this);\n         }\n--- org__src\\org\\apache\\fop\\render\\xml\\XMLRenderer.java\tMon Oct 28 11:41:13 2002\n+++ src\\org\\apache\\fop\\render\\xml\\XMLRenderer.java\tMon Oct 28 11:41:13 2002\n@@ -26,7 +26,8 @@\n import java.io.IOException;\n import java.io.PrintWriter;\n import java.io.OutputStream;\n-import java.util.Enumeration;\n+import java.util.Iterator;\n+import java.util.ArrayList;\n import java.util.Hashtable;\n \n /**\n@@ -203,9 +204,9 @@\n      */\n     public void renderAreaContainer(AreaContainer area) {\n         writeStartTag(\"<AreaContainer name=\\\"\" + area.getAreaName() + \"\\\">\");\n-        Enumeration e = area.getChildren().elements();\n-        while (e.hasMoreElements()) {\n-            Box b = (Box)e.nextElement();\n+        Iterator e = area.getChildren().iterator();\n+        while (e.hasNext()) {\n+            Box b = (Box)e.next();\n             b.render(this);\n         }\n         writeEndTag(\"</AreaContainer>\");\n@@ -218,9 +219,9 @@\n      */\n     public void renderBodyAreaContainer(BodyAreaContainer area) {\n         writeStartTag(\"<BodyAreaContainer>\");\n-        Enumeration e = area.getChildren().elements();\n-        while (e.hasMoreElements()) {\n-            Box b = (Box)e.nextElement();\n+        Iterator e = area.getChildren().iterator();\n+        while (e.hasNext()) {\n+            Box b = (Box)e.next();\n             b.render(this);\n         }\n         writeEndTag(\"</BodyAreaContainer>\");\n@@ -233,9 +234,9 @@\n      */\n     public void renderSpanArea(SpanArea area) {\n         writeStartTag(\"<SpanArea>\");\n-        Enumeration e = area.getChildren().elements();\n-        while (e.hasMoreElements()) {\n-            Box b = (Box)e.nextElement();\n+        Iterator e = area.getChildren().iterator();\n+        while (e.hasNext()) {\n+            Box b = (Box)e.next();\n             b.render(this);\n         }\n         writeEndTag(\"</SpanArea>\");\n@@ -265,12 +266,12 @@\n         writeStartTag(baText.toString());\n \n         // write out marker info\n-        java.util.Vector markers = area.getMarkers();\n+        ArrayList markers = area.getMarkers();\n         if (!markers.isEmpty()) {\n             writeStartTag(\"<Markers>\");\n             for (int m = 0; m < markers.size(); m++) {\n                 org.apache.fop.fo.flow.Marker marker =\n-                    (org.apache.fop.fo.flow.Marker)markers.elementAt(m);\n+                    (org.apache.fop.fo.flow.Marker)markers.get(m);\n                 StringBuffer maText = new StringBuffer();\n                 maText.append(\"<Marker marker-class-name=\\\"\"\n                               + marker.getMarkerClassName() + \"\\\"\");\n@@ -282,9 +283,9 @@\n             writeEndTag(\"</Markers>\");\n         }\n \n-        Enumeration e = area.getChildren().elements();\n-        while (e.hasMoreElements()) {\n-            Box b = (Box)e.nextElement();\n+        Iterator e = area.getChildren().iterator();\n+        while (e.hasNext()) {\n+            Box b = (Box)e.next();\n             b.render(this);\n         }\n         writeEndTag(\"</BlockArea>\");\n@@ -303,12 +304,12 @@\n         writeStartTag(iaText.toString());\n \n         // write out marker info\n-        java.util.Vector markers = area.getMarkers();\n+        ArrayList markers = area.getMarkers();\n         if (!markers.isEmpty()) {\n             writeStartTag(\"<Markers>\");\n             for (int m = 0; m < markers.size(); m++) {\n                 org.apache.fop.fo.flow.Marker marker =\n-                    (org.apache.fop.fo.flow.Marker)markers.elementAt(m);\n+                    (org.apache.fop.fo.flow.Marker)markers.get(m);\n                 StringBuffer maText = new StringBuffer();\n                 maText.append(\"<Marker marker-class-name=\\\"\"\n                               + marker.getMarkerClassName() + \"\\\"\");\n@@ -320,9 +321,9 @@\n             writeEndTag(\"</Markers>\");\n         }\n \n-        Enumeration e = area.getChildren().elements();\n-        while (e.hasMoreElements()) {\n-            Box b = (Box)e.nextElement();\n+        Iterator e = area.getChildren().iterator();\n+        while (e.hasNext()) {\n+            Box b = (Box)e.next();\n             b.render(this);\n         }\n         writeEndTag(\"</InlineArea>\");\n@@ -416,9 +417,9 @@\n             String fontWeight = area.getFontState().getFontWeight();\n             writeStartTag(\"<LineArea font-weight=\\\"\" + fontWeight + \"\\\">\");\n         }\n-        Enumeration e = area.getChildren().elements();\n-        while (e.hasMoreElements()) {\n-            Box b = (Box)e.nextElement();\n+        Iterator e = area.getChildren().iterator();\n+        while (e.hasNext()) {\n+            Box b = (Box)e.next();\n             b.render(this);\n         }\n         if (!isCoarseXml())\n--- org__src\\org\\apache\\fop\\svg\\SVGElement.java\tMon Oct 28 11:41:20 2002\n+++ src\\org\\apache\\fop\\svg\\SVGElement.java\tMon Oct 28 11:41:19 2002\n@@ -92,7 +92,7 @@\n      *\n      * @return the status of the layout\n      */\n-    public Status layout(final Area area) throws FOPException {\n+    public int layout(final Area area) throws FOPException {\n \n         if (!(area instanceof ForeignObjectArea)) {\n             // this is an error\n@@ -172,16 +172,14 @@\n         if (s.length() == 0) {\n             s = SVGOMDocument.SVG_SVG_WIDTH_DEFAULT_VALUE;\n         }\n-        float width = UnitProcessor.svgHorizontalLengthToUserSpace\n-                      (s, SVGOMDocument.SVG_WIDTH_ATTRIBUTE, uctx);\n+        float width = UnitProcessor.svgHorizontalLengthToUserSpace(s, \nSVGOMDocument.SVG_WIDTH_ATTRIBUTE, uctx);\n \n         // 'height' attribute - default is 100%\n         s = e.getAttributeNS(null, SVGOMDocument.SVG_HEIGHT_ATTRIBUTE);\n         if (s.length() == 0) {\n             s = SVGOMDocument.SVG_SVG_HEIGHT_DEFAULT_VALUE;\n         }\n-        float height = UnitProcessor.svgVerticalLengthToUserSpace\n-                       (s, SVGOMDocument.SVG_HEIGHT_ATTRIBUTE, uctx);\n+        float height = UnitProcessor.svgVerticalLengthToUserSpace(s, \nSVGOMDocument.SVG_HEIGHT_ATTRIBUTE, uctx);\n \n         SVGArea svg = new SVGArea(fs, width, height);\n         svg.setSVGDocument(doc);\n@@ -198,7 +196,7 @@\n         ((SVGOMElement)svgRoot).setSVGContext(null);\n \n         /* return status */\n-        return new Status(Status.OK);\n+        return Status.OK;\n     }\n \n     private void init() {"}, {"count": 1, "tags": [], "bug_id": 14013, "attachment_id": 3627, "is_private": false, "id": 25265, "time": "2002-10-28T12:39:19Z", "creator": "henrik.olsson@intentia.se", "creation_time": "2002-10-28T12:39:19Z", "text": "Created attachment 3627\nPerformans tuning fop-0.20.4"}, {"count": 2, "attachment_id": 3658, "bug_id": 14013, "is_private": false, "id": 25362, "time": "2002-10-30T07:23:44Z", "creator": "henrik.olsson@intentia.se", "creation_time": "2002-10-30T07:23:44Z", "tags": [], "text": "Created attachment 3658\nperformanceTuning.patch"}, {"count": 3, "tags": [], "text": "Committed, thanks for your contribution!\n\nA quick test showed me a 10% speed increase (which isn't that bad either)\nand I'm sure memory usage is decreased due to less object creation.\n\nPlease send your next patch as diff for current cvs (cvs diff -u  >cool.patch)\nas I had to changes some files manually and other have been\nalready updated to ArrayList etc.\n\nAnd I noticed a problem with BorderAndPadding.java\n(a tablecell in tableunit.fo gets a wrong color)", "is_private": false, "id": 26795, "creator": "christian.geisert@isu-gmbh.de", "time": "2002-11-22T15:15:11Z", "bug_id": 14013, "creation_time": "2002-11-22T15:15:11Z", "attachment_id": null}, {"count": 4, "tags": [], "creator": "henrik.olsson@intentia.se", "attachment_id": 3944, "id": 26929, "time": "2002-11-25T10:34:14Z", "bug_id": 14013, "creation_time": "2002-11-25T10:34:14Z", "is_private": false, "text": "Created attachment 3944\nCorrection for BorderAndPadding  wrong color"}, {"count": 5, "tags": [], "bug_id": 14013, "text": "Theres a new patch for the color problems with the cells.", "id": 26930, "time": "2002-11-25T10:41:15Z", "creator": "henrik.olsson@intentia.se", "creation_time": "2002-11-25T10:41:15Z", "is_private": false, "attachment_id": null}, {"count": 6, "tags": [], "bug_id": 14013, "attachment_id": null, "text": "Fix for BorderAndPadding.java applied.", "id": 27008, "time": "2002-11-26T16:33:29Z", "creator": "christian.geisert@isu-gmbh.de", "creation_time": "2002-11-26T16:33:29Z", "is_private": false}, {"count": 7, "attachment_id": null, "bug_id": 14013, "is_private": false, "id": 156172, "time": "2012-04-01T07:02:32Z", "creator": "gadams@apache.org", "creation_time": "2012-04-01T07:02:32Z", "tags": [], "text": "batch transition pre-FOP1.0 resolved+fixed bugs to closed+fixed"}]