[{"count": 0, "attachment_id": null, "bug_id": 42479, "text": "Found a second potential point for an infinite loop.  If the size of a record\ncomes back as < 0.", "id": 103452, "time": "2007-05-21T16:25:25Z", "creator": "trejkaz@trypticon.org", "creation_time": "2007-05-21T16:25:25Z", "tags": [], "is_private": false}, {"count": 1, "tags": [], "creator": "trejkaz@trypticon.org", "attachment_id": 20232, "is_private": false, "id": 103453, "time": "2007-05-21T16:25:49Z", "bug_id": 42479, "creation_time": "2007-05-21T16:25:49Z", "text": "Created attachment 20232\nProposed fix"}, {"count": 2, "tags": [], "creator": "cam@apache.org", "attachment_id": null, "is_private": false, "id": 108357, "time": "2007-09-18T19:33:08Z", "bug_id": 42479, "creation_time": "2007-09-18T19:33:08Z", "text": "Hi Trejkaz.\n\nI'm not sure if an infinite loop would occur here actually.  If the record size\nis < 0, and there was no more data in the file, an IOException would be thrown.\n If there is more data in the file, then it should get parsed as the next\nrecord.  Do you have a sample wmf file that causes it to loop infinitely?"}, {"count": 3, "attachment_id": 20852, "bug_id": 42479, "text": "Created attachment 20852\nTest (invalid) WMF file which causes the issue.\n\nHere's the file we encountered that caused the issue in the first place.  There\nwas actually no code checking recSize, hence it was pretty obvious that an\ninfinite loop *would* happen given the right conditions.\n\nHowever my patch is slightly wrong, it should actually allow recSize = 0.", "id": 108358, "time": "2007-09-18T19:41:38Z", "creator": "trejkaz@trypticon.org", "creation_time": "2007-09-18T19:41:38Z", "tags": [], "is_private": false}, {"count": 4, "tags": [], "creator": "cam@apache.org", "attachment_id": null, "text": "This is now fixed as a result of applying your patch from bug #42255.", "id": 108427, "time": "2007-09-19T21:14:14Z", "bug_id": 42479, "creation_time": "2007-09-19T21:14:14Z", "is_private": false}]