[{"count": 0, "tags": [], "bug_id": 31625, "text": "A component we want to output as SVG (a TouchGraph graph panel) needs to have\nthe offset set, as well as the drawing bounds, otherwise the SVG will draw\noutside the bounds of the page (and some tools clip out the graphics which are\noutside the page.)\n\nAs there is a setSVGCanvasSize method but no setSVGCanvasOffset method, we had\nto improvise.\n\n    getTGPanel().drawForPrint(g);\n\n    if (g instanceof SVGGraphics2D)\n    {\n        TGPoint2D topLeft = getTGPanel().getTopLeftDraw();\n        TGPoint2D bottomRight = getTGPanel().getBottomRightDraw();\n\n        Element svgRoot = ((SVGGraphics2D) g).getRoot();\n        svgRoot.setAttribute(\"x\", Double.toString(topLeft.x));\n        svgRoot.setAttribute(\"y\", Double.toString(topLeft.y));\n        svgRoot.setAttribute(\"width\",\n                             Double.toString(bottomRight.x - topLeft.x));\n        svgRoot.setAttribute(\"height\",\n                             Double.toString(bottomRight.y - topLeft.y));\n    }\n\nThe problem is that after doing this, there is nothing in the SVG file at all\n(not the graphics, nor even the attributes I just tried to set!)  If I remove\nthe whole block, the drawing works but has no x, y, width and height attributes\nare there.\n\nI would expect this to set the attributes on the SVG root element.  I didn't ask\nit to remove the element from the tree, so it shouldn't remove the element from\nthe tree.  And setting attributes on an XML element should result in the\nattributes being set.", "id": 64896, "time": "2004-10-11T00:02:05Z", "creator": "trejkaz@xaoza.net", "creation_time": "2004-10-11T00:02:05Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "creator": "deweese@apache.org", "text": "> As there is a setSVGCanvasSize method but no setSVGCanvasOffset method, we \n> had to improvise.\n\n   Is there a reason you can't just do 'g.translate(x, y)' before drawing?\n\n> The problem is that after doing this, there is nothing in the SVG file at all\n> (not the graphics, nor even the attributes I just tried to set!) \n\n   When you call getRoot, it returns the root and clears the contents of the \ngraphics.\n   If you want to do further drawing then pass in the root you get the\nfirst time the next time you call getRoot.  If you want to stream pass \nthe root you got into the stream method.\n", "id": 66045, "time": "2004-10-29T10:18:58Z", "bug_id": 31625, "creation_time": "2004-10-29T10:18:58Z", "is_private": false, "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 31625, "is_private": false, "count": 2, "id": 66048, "time": "2004-10-29T10:31:28Z", "creator": "trejkaz@xaoza.net", "creation_time": "2004-10-29T10:31:28Z", "text": "Let's see an analogy.  This is how your code would work, if it were a Person class:\n\n    Person person = new Person(\"frank\");\n    person.getName();   // returns \"frank\"\n    person.getName();   // returns null.\n\nI'm not accepting this as acceptable program behaviour.  In particular, the\nJavaDoc for getRoot() doesn't say anything about it DESTROYING the property it\nreturns."}, {"count": 3, "tags": [], "bug_id": 31625, "text": "This is a lot more complex than I think you realize.\nI'll admit that the documentation on this class is sparse\nat best and ignores some of the most important issues.\n\nPatches are always welcome.\n\n", "id": 66057, "time": "2004-10-29T11:47:55Z", "creator": "deweese@apache.org", "creation_time": "2004-10-29T11:47:55Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 31625, "attachment_id": null, "is_private": false, "id": 40407, "time": "2005-03-22T12:16:32Z", "creator": "deweese@apache.org", "creation_time": "2005-03-22T12:16:32Z", "text": "Reassigning all open bugs to the development list.\nSorry for the mass mailing."}]