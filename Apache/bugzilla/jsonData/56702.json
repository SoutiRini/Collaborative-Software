[{"count": 0, "tags": [], "creator": "278880105@qq.com", "text": "There in one cell which value is empty string instead of null cell.\nI got the exception \nCaused by: java.lang.IllegalStateException: Cannot get a numeric value from a text cell\n\tat org.apache.poi.xssf.usermodel.XSSFCell.typeMismatch(XSSFCell.java:845)\n\tat org.apache.poi.xssf.usermodel.XSSFCell.getNumericCellValue(XSSFCell.java:202)\n\tat org.apache.poi.ss.usermodel.DateUtil.isCellDateFormatted(DateUtil.java:325)\n\tat org.apache.poi.ss.usermodel.DataFormatter.formatCellValue(DataFormatter.java:756)\n\n\nAlso, I debugged source code and found that the cell type is CELL_TYPE_NUMERIC, so when it convert to double, the exception will be thrown.", "id": 176287, "time": "2014-07-08T07:31:16Z", "bug_id": 56702, "creation_time": "2014-07-08T07:31:16Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 56702, "attachment_id": null, "is_private": false, "id": 176297, "time": "2014-07-08T16:29:00Z", "creator": "apache@gagravarr.org", "creation_time": "2014-07-08T16:29:00Z", "text": "3.8 is a little old now, can you please try with a recent svn checkout / nightly build, and see if the problem still remains?"}, {"attachment_id": null, "tags": [], "bug_id": 56702, "text": "(In reply to Nick Burch from comment #1)\n> 3.8 is a little old now, can you please try with a recent svn checkout /\n> nightly build, and see if the problem still remains?\n\nThanks for caring this issue.  I tried the 3.10 version, but this issue still exist.", "count": 2, "id": 176322, "time": "2014-07-10T08:08:07Z", "creator": "278880105@qq.com", "creation_time": "2014-07-10T08:08:07Z", "is_private": false}, {"count": 3, "tags": [], "text": "Any chance you could provide a small junit test case that shows the problem, so we can try to reproduce it? Please include a small sample file if one's needed to show the issue.", "is_private": false, "id": 176326, "creation_time": "2014-07-10T12:42:44Z", "time": "2014-07-10T12:42:44Z", "creator": "apache@gagravarr.org", "bug_id": 56702, "attachment_id": null}, {"count": 4, "tags": [], "creator": "278880105@qq.com", "text": "Created attachment 31809\nError file", "id": 176345, "time": "2014-07-11T02:04:04Z", "bug_id": 56702, "creation_time": "2014-07-11T02:04:04Z", "is_private": false, "attachment_id": 31809}, {"count": 5, "attachment_id": 31810, "creator": "278880105@qq.com", "is_private": false, "id": 176346, "time": "2014-07-11T02:04:25Z", "bug_id": 56702, "creation_time": "2014-07-11T02:04:25Z", "tags": [], "text": "Created attachment 31810\nTest java class"}, {"count": 6, "tags": [], "bug_id": 56702, "is_private": false, "text": "(In reply to Nick Burch from comment #3)\n> Any chance you could provide a small junit test case that shows the problem,\n> so we can try to reproduce it? Please include a small sample file if one's\n> needed to show the issue.\n\nI have attached the test java class and error excel file.please notes that the Row 8 and Column 7 is empty string cell not null cell", "id": 176347, "time": "2014-07-11T02:09:07Z", "creator": "278880105@qq.com", "creation_time": "2014-07-11T02:09:07Z", "attachment_id": null}, {"count": 7, "attachment_id": null, "creator": "apache@gagravarr.org", "text": "Thanks for the test file, fixed in r1610482.", "id": 176390, "time": "2014-07-14T18:54:19Z", "bug_id": 56702, "creation_time": "2014-07-14T18:54:19Z", "tags": [], "is_private": false}, {"count": 8, "attachment_id": null, "bug_id": 56702, "is_private": false, "id": 176395, "time": "2014-07-15T02:27:39Z", "creator": "278880105@qq.com", "creation_time": "2014-07-15T02:27:39Z", "tags": [], "text": "Thanks for your fixing, which version I can use?"}, {"count": 9, "tags": [], "bug_id": 56702, "text": "Hi Nick:\nCould you tell me which version I can use?", "id": 176677, "time": "2014-07-25T01:39:45Z", "creator": "278880105@qq.com", "creation_time": "2014-07-25T01:39:45Z", "is_private": false, "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 56702, "text": "For now, a nightly snapshot or svn checkout from trunk\n\nIt'll be in 3.11 beta 1, once that is released", "count": 10, "id": 176683, "time": "2014-07-25T08:36:22Z", "creator": "apache@gagravarr.org", "creation_time": "2014-07-25T08:36:22Z", "is_private": false}, {"count": 11, "tags": [], "bug_id": 56702, "text": "Can you provide some information why you think this is not fixed? Did you try with the latest version? Can you provide samples or sample code to show that it still does not work for you?", "id": 184052, "time": "2015-07-16T19:55:35Z", "creator": "dominik.stadler@gmx.at", "creation_time": "2015-07-16T19:55:35Z", "is_private": false, "attachment_id": null}, {"count": 12, "tags": [], "bug_id": 56702, "attachment_id": null, "is_private": false, "id": 184933, "time": "2015-09-03T13:28:57Z", "creator": "herve.guerin@knowesia.com", "creation_time": "2015-09-03T13:28:57Z", "text": "I got this bug with version 3.12final\n\nHere is my context : I ask for the values of a range of cells (tab!A1:A4 for instance).  \nIn the Excel file, tab!A1 contains a formula with hlookup (or vlookup, i don't remember) and I copy tab!A1 to tab!A1:A3  \nThe result of A1 is a string, the result of A2 is an empty cell (it displays 0).\n\nPOI computed tab!A1 value ok,  \nand then raises the error on cell tab!A2.\n\nI found that the exception was risen by HSSFCell.getNumericCellValue which was called by DateUtil.isCellDateFormatted.  \nThe issue I found is that HSSFCell.getNumericCellValue calls checkFormulaCachedValueType(CELL_TYPE_NUMERIC, (FormulaRecord)fr) and checkFormulaCachedValueType() returns stringtype for A2, despite the fact that A2 contains a number.  \nI guess that the FormulaRecord of tab!A1 is the same as FormulaRecord of tab!A2 and as tab!A1 contains a string and caches this type, checkFormulaCachedValueType returns also string for tab!A2.\n\nI have not enough knowledge of POI code to propose a fix,\nbut I put the workaround I used there : http://stackoverflow.com/questions/6508203/when-getting-cell-content-using-apache-poi-library-i-get-both-cannot-get-a-num/32376505#32376505"}, {"count": 13, "attachment_id": 33484, "bug_id": 56702, "text": "Created attachment 33484\nhssf behaviour .java test file", "id": 187940, "time": "2016-01-24T15:07:55Z", "creator": "herve.guerin@knowesia.com", "creation_time": "2016-01-24T15:07:55Z", "tags": [], "is_private": false}, {"count": 14, "tags": [], "creator": "herve.guerin@knowesia.com", "text": "Created attachment 33485\nXSSF java test class", "id": 187941, "time": "2016-01-24T15:08:54Z", "bug_id": 56702, "creation_time": "2016-01-24T15:08:54Z", "is_private": false, "attachment_id": 33485}, {"count": 15, "tags": [], "text": "Created attachment 33486\nXSSF Excel test file (.xlsx)", "is_private": false, "id": 187942, "creation_time": "2016-01-24T15:10:58Z", "time": "2016-01-24T15:10:58Z", "creator": "herve.guerin@knowesia.com", "bug_id": 56702, "attachment_id": 33486}, {"count": 16, "tags": [], "creator": "herve.guerin@knowesia.com", "text": "Created attachment 33487\nHSSF Excel test file (.xls)", "id": 187943, "time": "2016-01-24T15:11:42Z", "bug_id": 56702, "creation_time": "2016-01-24T15:11:42Z", "is_private": false, "attachment_id": 33487}, {"count": 17, "tags": [], "bug_id": 56702, "attachment_id": 33488, "is_private": false, "id": 187944, "time": "2016-01-24T15:13:29Z", "creator": "herve.guerin@knowesia.com", "creation_time": "2016-01-24T15:13:29Z", "text": "Created attachment 33488\nHSSF java test class (ExcelBugPoiHSSF.java)"}, {"count": 18, "tags": [], "bug_id": 56702, "text": "Hi,\nI finished to get some time to go more deeply into my bug.\nI've not found a fix but the mecanism is very clear now :\n1) in HSSFCell and also in XSSFCell, the type of a cell which contains a formula is retreived without computing the formula from an attribut of the formulaRecord named specialCachedValue\n2) this attribute specialCachedValue seems to be computed when the excel file is load and not refreshed after that\n3) if the type of the result of the formula changes by a computation, the type returned for the cell may be wrong.\n\nTo reproduce this behaviour, look at files :\n- ExcelBugPoiHSSF.java and ExcelBugPoi.xls for HSSF behaviour\n- ExcelBugPoiXSSF.java and ExcelBugPoi.xlsx for XSSF behaviour\n(both .java files are junit test files)", "id": 187945, "time": "2016-01-24T15:13:49Z", "creator": "herve.guerin@knowesia.com", "creation_time": "2016-01-24T15:13:49Z", "is_private": false, "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 56702, "is_private": false, "count": 19, "id": 188640, "time": "2016-02-21T00:01:36Z", "creator": "herve.guerin@knowesia.com", "creation_time": "2016-02-21T00:01:36Z", "text": "Hi,\n\nI have tested a new diagnostic for this bug\ndone on the last version (3.13) and with an complete example to reproduce the issue (in both xssf and hssf format)\n(First time, my bug interested several people, but this time : none !, that is why I add this comment)\n\nHerve"}, {"count": 20, "tags": [], "bug_id": 56702, "attachment_id": null, "text": "Upvoted this bug.\nJust faced it on Production server. That was fully unexpected that method isCellDateFormatted could throw an IllegalStateException!", "id": 199365, "time": "2017-06-23T13:00:56Z", "creator": "vitali_chasalau@epam.com", "creation_time": "2017-06-23T13:00:56Z", "is_private": false}, {"count": 21, "tags": [], "bug_id": 56702, "attachment_id": null, "text": "Is someone able to produce a unit test against the very latest version of Apache POI, showing this problem still remaining? \n\nThis bug was initially reported against quite an old version of POI, and some fixes have been done for it, so it's hard to know what (if anything) still remains unfixed on the latest versions, and what is just people tripping over a know bug on old versions of POI?", "id": 199368, "time": "2017-06-23T14:10:32Z", "creator": "apache@gagravarr.org", "creation_time": "2017-06-23T14:10:32Z", "is_private": false}]