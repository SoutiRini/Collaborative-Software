[{"count": 0, "tags": [], "text": "This started happening with 1.6+ ant releases.  It does not happen with 1.5.4 or earlier  \nreleases on my architecture (amd 64)  \n \n-verbose error output \n========================================= \n    [javac] The system is out of resources. \n    [javac] Consult the following stack trace for details. \n    [javac] java.lang.OutOfMemoryError \n \nBUILD FAILED \n/home/martin/Ant/build.xml:129: Compile failed; see the compiler error output for details. \n        at org.apache.tools.ant.taskdefs.Javac.compile(Javac.java:938) \n        at org.apache.tools.ant.taskdefs.Javac.execute(Javac.java:758) \n        at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:275) \n        at org.apache.tools.ant.Task.perform(Task.java:364) \n        at org.apache.tools.ant.Target.execute(Target.java:341) \n        at org.apache.tools.ant.Target.performTasks(Target.java:369) \n        at org.apache.tools.ant.Project.executeTarget(Project.java:1214) \n        at org.apache.tools.ant.Project.executeTargets(Project.java:1062) \n        at org.apache.tools.ant.Main.runBuild(Main.java:673) \n        at org.apache.tools.ant.Main.startAnt(Main.java:188) \n        at org.apache.tools.ant.launch.Launcher.run(Launcher.java:196) \n        at org.apache.tools.ant.launch.Launcher.main(Launcher.java:55) \n \n \nThe Build Line=  \n========================================== \n<javac debug=\"on\" destdir=\"${build}\" verbose=\"off\"> \n                        <src path=\"${src}\"/> \n                        <classpath refid=\"build.class.path\"/> \n                        <!-- exclude name=\"**/*Movie*/\"/ --> \n                        <exclude name=\"**/*CookieDetector*/\"/> \n                        <exclude name=\"**/*CVS*/\"/> \n                        <!--<exclude name=\"com/uga/jake/StructureDrawing*/\" --> \n                        <exclude name=\"de/**\"/> \n                        <!-- exclude name=\"beantest/**\"/ --> \n                        <!-- exclude name=\"archiver/**\"/ --> \n \n                        <exclude name=\"com/uga/jake/RTF*/\"/> \n                        <exclude name=\"VersionChecker*/\"/> \n                        <exclude name=\"JExam*VersionChecker/\"/> \n                        <!-- exclude name=\"com/uga/jake/admin/Rost*/\"/ --> \n                        <!-- exclude name=\"com/uga/jake/admin/Object*/\"/ --> \n                        <!-- exclude name=\"com/uga/jake/admin/Gene*/\"/ --> \n                        <!-- exclude name=\"com/uga/jake/app/admin/DataImpo*/\"/ --> \n                        <exclude name=\"com/uga/jake/admin/Uni*/\"/> \n                        <!-- exclude name=\"com/uga/jake/editor/**\" --> \n                        <!-- exclude name=\"com/uga/sam/**\"/ --> \n                </javac>", "attachment_id": null, "id": 69832, "creation_time": "2005-01-19T02:20:35Z", "time": "2005-01-19T02:20:35Z", "creator": "jmartin@chem.uga.edu", "bug_id": 33162, "is_private": false}, {"count": 1, "attachment_id": null, "bug_id": 33162, "is_private": false, "id": 71180, "time": "2005-02-18T14:43:26Z", "creator": "bodewig@apache.org", "creation_time": "2005-02-18T14:43:26Z", "tags": [], "text": "Does it help if your fork the compiler?\n\nMaybe Ant is taking the tiny bit of additional memory that pushes your compilation\nover the edge."}, {"count": 2, "tags": [], "creator": "jmartin@chem.uga.edu", "text": "Is fork an option to the compilation process?  Otherwise, how do I do that? ", "id": 71197, "time": "2005-02-18T17:23:04Z", "bug_id": 33162, "creation_time": "2005-02-18T17:23:04Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "creator": "jmartin@chem.uga.edu", "text": "With fork = true, I still get an out of memory error.  Which is strange because I have 1.5 \ngigs of ram. \n \ncompile: \n    [javac] Since fork is true, ignoring compiler setting. \n    [javac] Compiling 496 source files to /home/martin/Ant/build \n    [javac] Since fork is true, ignoring compiler setting. \n \n \n    [javac] The system is out of resources. \n    [javac] Consult the following stack trace for details. \n    [javac] java.lang.OutOfMemoryError \n \nBUILD FAILED \n/home/martin/Ant/build.xml:134: Compile failed; see the compiler error output for details. \n ", "id": 71686, "time": "2005-03-01T23:57:46Z", "bug_id": 33162, "creation_time": "2005-03-01T23:57:46Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "text": "Do you have a -Xmx option set in ANT_OPTS?  What Java version are you using?", "attachment_id": null, "bug_id": 33162, "id": 71687, "time": "2005-03-02T00:01:06Z", "creator": "mbenson@apache.org", "creation_time": "2005-03-02T00:01:06Z", "is_private": false}, {"count": 5, "tags": [], "creator": "jmartin@chem.uga.edu", "attachment_id": null, "id": 71688, "time": "2005-03-02T00:10:21Z", "bug_id": 33162, "creation_time": "2005-03-02T00:10:21Z", "is_private": false, "text": "I do not have anything set in ANT_OPTS.   I get the error with SUN 1.5.0, and \nblackdown 1.4.2.  Currently,  I'm using  \n \nIBM's \n============================================= \njava version \"1.4.2\" \nJava(TM) 2 Runtime Environment, Standard Edition (build 2.2) \nIBM J9SE VM (build 2.2, J2RE 1.4.2 IBM J9 2.2 Linux amd64-64 \nj9xa641420-20040916a (JIT enabled) \nJ9VM - 20040916_0916_LHdSMr \nJIT  - r7_level20040915_1801) \n \n "}, {"count": 6, "attachment_id": null, "bug_id": 33162, "is_private": false, "id": 71689, "time": "2005-03-02T00:17:55Z", "creator": "mbenson@apache.org", "creation_time": "2005-03-02T00:17:55Z", "tags": [], "text": "Dunno, but for kicks you might try something like -Xmx128m or -Xmx256m since\nyou've got RAM to play with..."}, {"count": 7, "tags": [], "bug_id": 33162, "is_private": false, "text": "The ammount of physical RAM in your machine has very little to do with how much\nmemory is actually allocated to the JVM heap. I supposed you could view it as\nthe upper bound on the heap, but that's not even really true because the host OS\nneeds some, as do other procs on the box, etc.\n\nTry fiddling with the -Xmx options to increase the maximum heap size. I'm not\nsure what the default max heap size is, and it might even vary by vendor (and\nperhaps even amongst different VMs from the same vendor).\n\nFor a point of reference, to build WebSphere we use -Xmx512M\n\nI've also been able to make javac run out of stack space, but there's a\ndifferent flag for that.", "id": 71690, "time": "2005-03-02T00:32:09Z", "creator": "carej@us.ibm.com", "creation_time": "2005-03-02T00:32:09Z", "attachment_id": null}, {"count": 8, "attachment_id": null, "bug_id": 33162, "is_private": false, "id": 71691, "time": "2005-03-02T01:15:02Z", "creator": "jmartin@chem.uga.edu", "creation_time": "2005-03-02T01:15:02Z", "tags": [], "text": "I used the javac \"fork\" option with \"memoryMaximumSize=800m\" and it worked fine.   \nNow I feel silly.   \n  \nAnyone know how to pass to javac -Xmx800m without forking?  \n   "}, {"count": 9, "tags": [], "bug_id": 33162, "attachment_id": null, "is_private": false, "id": 71701, "time": "2005-03-02T10:47:55Z", "creator": "stevel@apache.org", "creation_time": "2005-03-02T10:47:55Z", "text": "you cant increase the memory for javac without forking, as it is the JVM itself\nthat is being given the memory allocation -you need a new JVM.\n\nIf you really are building big things, try using the jikes compiler instead. Its\na lot faster, and is always in a new process. What it does not do is compile\nJava1.5 language extensions yet.\n\nInteresting that you have a 64 bit box, presumably running a 64 bit linux\nrelease? I suspect the memory requirement of 64-bit JVMs to be a lot higher,\njust because all pointers doubled in size. I wonder what the default JVM size\nhas to be -it has to be more than 64M. But as a consequence, wherever you set a\nJVM size in ant, those sizes will need to be bumped up too. (unless we try and\nbe clever and on 64 bit boxes, double all memory allocations. Something to consider)"}, {"count": 10, "tags": [], "bug_id": 33162, "is_private": false, "id": 71725, "attachment_id": null, "creator": "jkf@apache.org", "creation_time": "2005-03-02T19:10:49Z", "time": "2005-03-02T19:10:49Z", "text": "You can bump the memory available to javac without fork, along with everything\nprocessed by the jvm ant is running by specifying the -Xmx option in ANT_OPTS\n(or by tinkering your script to start ant.)"}]