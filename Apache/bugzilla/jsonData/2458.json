[{"count": 0, "tags": [], "bug_id": 2458, "attachment_id": null, "text": "This is a follow-up for bug report #578.\n \nLook at this code:\n\nClass Servlet1 extends  HttpServlet\n{\n  public void doGet(HttpServletRequest request, HttpServletResponse response) \n    throws ServletException, IOException\n  {\n      try\n      {\n          //isCommited() returns false\n          RequestDispatcher dispatcher = getServletContext\n().getRequestDispatcher( \"/servlet/Servlet2\");\n            \n          //isCommited() returns false\n          dispatcher.include(request,response);\n\n          // ==== isCommited() returns true !! ====\n          // after the include - the response is committed: any manipulation of \nthe header will\n\n          //raise an exception   \n          response.sendRedirect(\"http://www.yahoo.com\");  //exception is raised \nas this method\n                                                 //wraps the setHeader\n      }\n      catch(Exception e)\n      {\n      }\n  }\n}\n\nclass Servlet2 extends  HttpServlet\n{\n  public void doGet(HttpServletRequest request, HttpServletResponse response)   \n    throws ServletException, IOException\n  {\n     // empty method\n  }\n\n}\n\nThe problematic behavior of Tomcat is that it always commits the response \nbefore calling the include servlet.\n\nLooking at the code of RequestDispatcherImpl,Tomcat flushes the response buffer \nin order to preserve the cookie. \n(According to remarks in the source of RequestDispatcherImpl.doInclude() method)\n\nIsn't this an overkill? Maybe it is simpler to just copy the cookie header from \nthe request to the response?\nThis makes a difference in the case of an empty included servlet - the \ncommitting of the response doesn't make sense in this case.\nSame applies when the included servlet does onlt server-side operations that \ndon't affect headers or body of the response.\n\nTomcat implementation of include() does not allow to the including servlet to \ndo any manipulation of the headers after a call to include().\nInlcuding setting status and redirecting.\n\nNote that we checked in Weblogic 6.0 - this behavior does not appear.", "id": 3423, "time": "2001-07-05T07:58:11Z", "creator": "rachel@gizmoz.com", "creation_time": "2001-07-05T07:58:11Z", "is_private": false}, {"count": 1, "tags": [], "text": "This non-spec compliant behavior was included in order to fix a worse problem,\nwhere the session cookie would be lost if handling is in an included JSP\npage when the first data is sent to the browser.  It isn't practical to fix\nin Tomcat 3.2.x, so I'm marking this bug as \"wontfix\".\n\nThis behavior is fixed in Tomcat 3.3.", "attachment_id": null, "id": 5373, "creator": "Larry.Isaacs@sas.com", "time": "2001-09-11T13:01:57Z", "bug_id": 2458, "creation_time": "2001-09-11T13:01:57Z", "is_private": false}]