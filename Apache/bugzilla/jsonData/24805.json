[{"count": 0, "tags": [], "text": "Hi,\n\nAfter digging the internet for something usefull on this problem I solved\nposting this bug report with all I discovered about this \"bug\" (probably).\n\nWhen Apache starts, it starts all piped log programs \"instances\"\ncorrectly, but, when I stop Apache, all piped log programs instances remain\nrunning \"sleepy\" (not zombie). Starting Apache again, it forks another set of\ninstances of these piped log programs leaving a lot of them running on the system.\n\nInitialy I tested with rotatelogs and cronologs, but also this problem can\nhappen with any piped program, dealing or not with the logs (even a simple grep\nas piped log program).\n\nI started debugging Apache by attaching strace to the main root Apache process\nand stoping Apache to see the error messages. I discovered that Apache logs on\nerror_log these messages:\n\npiped log program '/usr/local/sbin/cronolog\n/usr/local/sites/default/logs/access.%Y-%m-%d.log' failed unexpectedly\npiped log program '/usr/local/sbin/cronolog\n/usr/local/sites/portal/logs/access.%Y-%m-%d.log' failed unexpectedly\n\nThe interesting thing is that when I use strace this way and stops Apache, all\ninstances of the piped log programs stops as nothing had happened wrong.\n\nHere are some of the lines strace shows me:\n\n==============================================================================\nwait4(-1, 0xbffff900, WNOHANG|WUNTRACED, NULL) = 0\nselect(0, NULL, NULL, NULL, {1, 0})     = 0 (Timeout)\nwait4(-1, 0xbffff900, WNOHANG|WUNTRACED, NULL) = 0\nselect(0, NULL, NULL, NULL, {1, 0})     = ? ERESTARTNOHAND (To be restarted)\n--- SIGTERM (Terminated) @ 0 (0) ---\nsigreturn()                             = ? (mask now [RTMIN])\ngetpgrp()                               = 28370\nkill(-28370, SIGTERM)                   = 0\n--- SIGTERM (Terminated) @ 0 (0) ---\nsigreturn()                             = ? (mask now [RTMIN])\n--- SIGCHLD (Child exited) @ 0 (0) ---\nselect(0, NULL, NULL, NULL, {0, 16384}) = 0 (Timeout)\nwait4(28373, [WIFEXITED(s) && WEXITSTATUS(s) == 0], WNOHANG|WUNTRACED, NULL)\n= 28373\nwait4(28374, [WIFEXITED(s) && WEXITSTATUS(s) == 0], WNOHANG|WUNTRACED, NULL)\n= 28374\nwait4(28375, [WIFEXITED(s) && WEXITSTATUS(s) == 0], WNOHANG|WUNTRACED, NULL)\n= 28375\nwait4(28376, [WIFEXITED(s) && WEXITSTATUS(s) == 0], WNOHANG|WUNTRACED, NULL)\n= 28376\nwait4(28377, [WIFEXITED(s) && WEXITSTATUS(s) == 0], WNOHANG|WUNTRACED, NULL)\n= 28377\nwait4(28372, [WIFSIGNALED(s) && WTERMSIG(s) == SIGTERM], WNOHANG, NULL) =\n28372\nwrite(2, \"piped log program \\'/usr/local/sb\"..., 115) = 115\npipe([17, 18])                          = 0\ndup2(7, 17)                             = 17\ndup2(11, 18)                            = 18\naccess(\"/usr/local/sbin/cronolog\", R_OK|X_OK) = 0\nfork()                                  = 28428\nclose(17)                               = 0\nwait4(28371, [WIFSIGNALED(s) && WTERMSIG(s) == SIGTERM], WNOHANG, NULL) =\n28371\nwrite(2, \"piped log program \\'/usr/local/sb\"..., 114) = 114\npipe([17, 19])                          = 0\ndup2(5, 17)                             = 17\ndup2(8, 19)                             = 19\naccess(\"/usr/local/sbin/cronolog\", R_OK|X_OK) = 0\nfork()                                  = 28429\nclose(17)                               = 0\nunlink(\"/usr/local/httpd-2.0.48/logs/httpd.pid\") = 0\ngetpid()                                = 28370\ngettimeofday({1069192645, 791003}, NULL) = 0\nwrite(13, \"[Tue Nov 18 19:57:25 2003] [noti\"..., 66) = 66\n==============================================================================\n\nThen I started digging Apaches source code (without understanding too much) and\nI built apache with -DNEED_WAITPID but this did not worked. I thought on some\npatch for the part that Apache kills all piped logs with apr funcions but that\nseams too much complicated for me.\n\nHere are some details of boot systems that I'm having this problem:\n\nOS.: Slackware 9.1 (gcc 3.2.3, glibc 2.3.2, kernel 2.4.22)\n\nldd output from httpd:\nlibssl.so.0 => /usr/lib/libssl.so.0 (0x4001f000)\nlibcrypto.so.0 => /usr/lib/libcrypto.so.0 (0x40051000)\nlibaprutil-0.so.0 => /usr/local/httpd-2.0.48/lib/libaprutil-0.so.0 (0x4014f000)\nlibgdbm.so.2 => /usr/lib/libgdbm.so.2 (0x40167000)\nlibdb-3.3.so => /lib/libdb-3.3.so (0x4016d000)\nlibexpat.so.0 => /usr/lib/libexpat.so.0 (0x401f6000)\nlibapr-0.so.0 => /usr/local/httpd-2.0.48/lib/libapr-0.so.0 (0x40215000)\nlibrt.so.1 => /lib/librt.so.1 (0x40239000)\nlibm.so.6 => /lib/libm.so.6 (0x4024b000)\nlibcrypt.so.1 => /lib/libcrypt.so.1 (0x4026e000)\nlibnsl.so.1 => /lib/libnsl.so.1 (0x4029b000)\nlibdl.so.2 => /lib/libdl.so.2 (0x402b0000)\nlibpthread.so.0 => /lib/libpthread.so.0 (0x402b3000)\nlibc.so.6 => /lib/libc.so.6 (0x40305000)\n/lib/ld-linux.so.2 => /lib/ld-linux.so.2 (0x40000000)\n\nand the configure command I used to build apache (without -DNEED_WAITPID):\n./configure \\\n        --prefix=/usr/local/httpd-2.0.48 \\\n        --enable-module=ALL \\\n        --enable-mime-magic \\\n        --enable-headers \\\n        --enable-expires \\\n        --enable-cgi \\\n        --enable-info \\\n        --enable-rewrite \\\n        --enable-ssl \\\n        --enable-so\n\nAnything else ???", "attachment_id": null, "id": 47595, "creator": "herbert@trama.com.br", "time": "2003-11-18T23:23:14Z", "bug_id": 24805, "creation_time": "2003-11-18T23:23:14Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 24805, "attachment_id": null, "text": "Correction:\n\nAfter stoping Apache, the pipe log programs stops too, but Apache forks\nanother set of them\nbefore stoping itself.\n\n# apachectl start\n# ps axuww\n\nUSER       PID %CPU %MEM   VSZ  RSS TTY      STAT START   TIME COMMAND\nroot     18785  1.0  0.7 22832 7732 ?        S    21:52   0:00\n/usr/local/httpd-2.0.48/bin/httpd -k start\napache   18788  0.0  0.7 22856 7772 ?        S    21:52   0:00\n/usr/local/httpd-2.0.48/bin/httpd -k start\napache   18789  0.0  0.7 22856 7772 ?        S    21:52   0:00\n/usr/local/httpd-2.0.48/bin/httpd -k start\napache   18790  0.0  0.7 22856 7772 ?        S    21:52   0:00\n/usr/local/httpd-2.0.48/bin/httpd -k start\napache   18791  0.0  0.7 22856 7772 ?        S    21:52   0:00\n/usr/local/httpd-2.0.48/bin/httpd -k start\napache   18792  0.0  0.7 22856 7772 ?        S    21:52   0:00\n/usr/local/httpd-2.0.48/bin/httpd -k start\nroot     18786  0.0  0.0  1480  268 ?        S    21:52   0:00\n/usr/local/sbin/cronolog /usr/local/sites/portal/logs/access.%Y-%m-%d.log\nroot     18787  0.0  0.0  1480  268 ?        S    21:52   0:00\n/usr/local/sbin/cronolog /usr/local/sites/default/logs/access.%Y-%m-%d.log\n\n# apachectl stop\n# ps axuww\n\nroot     18819  0.0  0.0  1480  268 ?        S    21:54   0:00\n/usr/local/sbin/cronolog /usr/local/sites/default/logs/access.%Y-%m-%d.log\nroot     18820  0.0  0.0  1480  268 ?        S    21:54   0:00\n/usr/local/sbin/cronolog /usr/local/sites/portal/logs/access.%Y-%m-%d.log", "id": 47596, "time": "2003-11-18T23:56:33Z", "creator": "herbert@trama.com.br", "creation_time": "2003-11-18T23:56:33Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 24805, "text": "I created a small C program that captures all signals and logs to a file which\nsignal it received. This program only stops with SIGKILL.\n\nI put it as a piped log program on httpd.conf to test what apache is doing with\nthem.\n\nAfter running apachectl start, apache runs twice each piped log. I've put two\ncustom logs with piped logs on httpd.conf and apache started 4 piped log instances.\n\nhere are the logs after apache starts:\n\npid 9146 started at Thu Nov 20 11:58:51 2003\npid 9146 received signal 15\npid 9147 started at Thu Nov 20 11:58:51 2003\npid 9147 received signal 15\npid 9149 started at Thu Nov 20 11:58:52 2003\npid 9150 started at Thu Nov 20 11:58:52 2003\n\nApache starts a set of these piped log programs and send SIGTERM to them. After,\napache starts them again.\n\nAfter calling apachectl stop, here are the logs:\n\npid 9146 started at Thu Nov 20 11:58:51 2003\npid 9146 received signal 15\npid 9147 started at Thu Nov 20 11:58:51 2003\npid 9147 received signal 15\npid 9149 started at Thu Nov 20 11:58:52 2003\npid 9149 received signal 15\npid 9150 started at Thu Nov 20 11:58:52 2003\npid 9150 received signal 15\n\nApache sent SIGTERM to the last two instances of my piped log programs.\n\nI think that the bug is related to how Apache treats piped log programs crashes.\n When calling apachectl stop, apache kills all piped log programs with SIGTERM\nbut the crash-safe code of piped log programs starts all piped log programs\nagain, leaving them running before apache really stops.\n\nPlease! I need help here! Nobody is helping! I'm starting to consider not\ntesting Apache 2 anymore if nobody helps me on this problem.", "id": 47686, "time": "2003-11-20T14:07:35Z", "creator": "herbert@trama.com.br", "creation_time": "2003-11-20T14:07:35Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "text": "I am sorry you are frustrated, and I am very empathetic.  Please note that\nsomething is happening with this PR, but it is not at all obvious to the casual\nobserver.\n\nThe piped log program respawning issue appears to be related to a mod_cgid\ndaemon respawning issue that has prevented the cgid daemon respawning logic to\nbe merged into stable.\n\nWhat we're working on is a way for other child logic such as piped log\nmanagement and cgid daemon management to be able to query whether or not the\nserver is terminating.  That info is needed to avoid re-spawning the child at\ntermination.  See the thread \"ap_get_server_state()\" on dev@httpd.  Respawning\nlogic is just one use for ap_get_server_state(), so there probably isn't any\nexplicit text describing the relationship in that thread.", "attachment_id": null, "id": 47706, "creator": "trawick@apache.org", "time": "2003-11-20T15:47:07Z", "bug_id": 24805, "creation_time": "2003-11-20T15:47:07Z", "is_private": false}, {"count": 4, "tags": [], "creator": "trawick@apache.org", "attachment_id": null, "id": 47709, "time": "2003-11-20T15:50:24Z", "bug_id": 24805, "creation_time": "2003-11-20T15:50:24Z", "is_private": false, "text": "another note in case certain developers see this and think I am ignoring their\ncomments :)\n\nreplace \"ap_get_server_state()\" references in my previous update to this PR with\n\"new flavor of ap_mpm_query(), or something else that gives the state of the server\"\n"}, {"count": 5, "tags": [], "creator": "trawick@apache.org", "text": "you didn't mention what MPM you're using...  I added some general support to\nprefork thus far to fix this type of problem, and also changed the piped log\nsupport to use this logic...  changes for worker and other MPMs will come later\n\nI'll attach a patch for 2.0.48 and prefork MPM in a moment...  if you're using\nprefork, please try it out...  the symptoms I get seem to vary from platform to\nplatform (sometimes I can't see any symptom, sometimes Apache tries to start the\npiped log program but something has been corrupted and prevents it from\nstarting, etc.)", "id": 47733, "time": "2003-11-20T21:57:26Z", "bug_id": 24805, "creation_time": "2003-11-20T21:57:26Z", "is_private": false, "attachment_id": null}, {"count": 6, "attachment_id": 9220, "bug_id": 24805, "is_private": false, "id": 47734, "time": "2003-11-20T21:58:53Z", "creator": "trawick@apache.org", "creation_time": "2003-11-20T21:58:53Z", "tags": [], "text": "Created attachment 9220\nkeep apache from trying to restart piped loggers at termination"}, {"count": 7, "tags": [], "creator": "herbert@trama.com.br", "text": "I don't know what MPM is. Can you tell me, so I can tell you what MPM I'm using.\n\nI found that all this problem doesn't happen on a IBM PPC 7046-B50 PowerPC 604r\nwith SuSE 7.3 PPC.", "id": 47737, "time": "2003-11-20T22:31:08Z", "bug_id": 24805, "creation_time": "2003-11-20T22:31:08Z", "is_private": false, "attachment_id": null}, {"count": 8, "attachment_id": null, "creator": "trawick@apache.org", "text": "If you don't know which MPM, that probably means you're using the default\n(prefork).  You can display the MPM via \"apachectl -V\".  Here is how prefork looks:\n\n$ /usr/local/apache2047/bin/apachectl -V | grep MPM\n -D APACHE_MPM_DIR=\"server/mpm/prefork\"\n\nHere is how worker looks:\n\n$ ph/2.0.47/built/bin/apachectl -V | grep MPM\n -D APACHE_MPM_DIR=\"server/mpm/worker\"\n\nIncidentally, I too had a system that had no apparent ill symptom (RedHat 6.1 on\na Pentium III 500MHz).  I suspect that many (most?) people aren't noticing any\nsuch problem with piped loggers, at least on a regular basis.\n", "id": 47741, "time": "2003-11-21T00:05:59Z", "bug_id": 24805, "creation_time": "2003-11-21T00:05:59Z", "tags": [], "is_private": false}, {"count": 9, "tags": [], "bug_id": 24805, "attachment_id": null, "text": "Yes... It's prefork. If I can switch this to another thing, what do you\nrecommend ? I pretend to try to see if this problem is solved for now.\n\nhere is my apachectl -V output:\n\nServer version: Apache/2.0.48\nServer built:   Nov 18 2003 21:28:26\nServer's Module Magic Number: 20020903:4\nArchitecture:   32-bit\nServer compiled with....\n -D APACHE_MPM_DIR=\"server/mpm/prefork\"\n -D APR_HAS_SENDFILE\n -D APR_HAS_MMAP\n -D APR_HAVE_IPV6 (IPv4-mapped addresses enabled)\n -D APR_USE_SYSVSEM_SERIALIZE\n -D APR_USE_PTHREAD_SERIALIZE\n -D SINGLE_LISTEN_UNSERIALIZED_ACCEPT\n -D APR_HAS_OTHER_CHILD\n -D AP_HAVE_RELIABLE_PIPED_LOGS\n -D HTTPD_ROOT=\"/usr/local/httpd-2.0.48\"\n -D SUEXEC_BIN=\"/usr/local/httpd-2.0.48/bin/suexec\"\n -D DEFAULT_PIDLOG=\"logs/httpd.pid\"\n -D DEFAULT_SCOREBOARD=\"logs/apache_runtime_status\"\n -D DEFAULT_LOCKFILE=\"logs/accept.lock\"\n -D DEFAULT_ERRORLOG=\"logs/error_log\"\n -D AP_TYPES_CONFIG_FILE=\"conf/mime.types\"\n -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n\nThis are the hardware configuration of both machines I've experienced problems:\n\nIntel P4 Xeon 2.2 Ghz - 2GB RAM\nIntel P4 1.6 - 512MB RAM\n\nBoth are running optimized kernels for P4.\n\nI was thinking on something... but I cannot see if it's absurd... \nBoth machines are very fast, and both are using Slack 9.1\nAs Apache 2 have multithread support, can the speed affect Apache ou some system\nlib for multithread ??\n\nTks!", "id": 47743, "time": "2003-11-21T02:18:47Z", "creator": "herbert@trama.com.br", "creation_time": "2003-11-21T02:18:47Z", "is_private": false}, {"count": 10, "attachment_id": null, "creator": "herbert@trama.com.br", "text": "Also:\n\nI need to use PHP within these servers. So, I going to have problems on changing\nthe MPM to worker or another else ??", "id": 47744, "time": "2003-11-21T02:23:21Z", "bug_id": 24805, "creation_time": "2003-11-21T02:23:21Z", "tags": [], "is_private": false}, {"count": 11, "tags": [], "creator": "trawick@apache.org", "text": "I'm not suggesting you switch to worker MPM ;)  I originally didn't know which\nMPM you were using and wanted to point out that the patch doesn't fix the worker\nscenario, only the prefork scenario.  Now we know you're using prefork, so keep\nyour configuration, apply the patch, and do make && make install and hopefully\nthis problem will be resolved for you. \n", "id": 47745, "time": "2003-11-21T02:35:36Z", "bug_id": 24805, "creation_time": "2003-11-21T02:35:36Z", "is_private": false, "attachment_id": null}, {"count": 12, "tags": [], "creator": "herbert@trama.com.br", "attachment_id": null, "id": 47760, "time": "2003-11-21T12:06:19Z", "bug_id": 24805, "creation_time": "2003-11-21T12:06:19Z", "is_private": false, "text": "I see.\n\nI tested with MPM worker and PHP+ZTS and It worked correctly. No respawning\npiped log programs.\n\nThis setup it stable ?? Can I leave that ?"}, {"count": 13, "attachment_id": null, "bug_id": 24805, "is_private": false, "id": 47761, "time": "2003-11-21T12:20:49Z", "creator": "trawick@apache.org", "creation_time": "2003-11-21T12:20:49Z", "tags": [], "text": "The PHP folks recommend to NOT use PHP with a threaded Apache 2 MPM such as\nworker, because they offer interfaces to a lot of 3rd party libraries and cannot\nensure that such calls are thread-safe.\n\nI don't know how to evaluate whether or not your PHP usage is subject to such\nproblems.  Unless the PHP folks can help you evaluate your situation, I'd\nrecommend using the prefork MPM.\n"}, {"count": 14, "tags": [], "text": "Thanks for you help. I'm getting back to prefork with your patch applied. But\nI'm not giving up.\n\nIf you need anything to help debug this problem, as I have it, please, tell me.\n\nAnd thanks for the patch!", "is_private": false, "id": 47764, "creation_time": "2003-11-21T12:33:34Z", "time": "2003-11-21T12:33:34Z", "creator": "herbert@trama.com.br", "bug_id": 24805, "attachment_id": null}, {"count": 15, "attachment_id": null, "bug_id": 24805, "is_private": false, "id": 47782, "time": "2003-11-21T14:57:22Z", "creator": "trawick@apache.org", "creation_time": "2003-11-21T14:57:22Z", "tags": [], "text": "*** Bug 19035 has been marked as a duplicate of this bug. ***"}, {"count": 16, "tags": [], "text": "*** Bug 19981 has been marked as a duplicate of this bug. ***", "attachment_id": null, "bug_id": 24805, "id": 47915, "time": "2003-11-22T02:29:04Z", "creator": "trawick@apache.org", "creation_time": "2003-11-22T02:29:04Z", "is_private": false}, {"count": 17, "text": "*** Bug 23109 has been marked as a duplicate of this bug. ***", "bug_id": 24805, "is_private": false, "id": 49068, "time": "2003-12-13T22:02:45Z", "creator": "trawick@apache.org", "creation_time": "2003-12-13T22:02:45Z", "tags": [], "attachment_id": null}, {"count": 18, "tags": [], "text": "Fix committed to 2.1-dev.  Hopefully it can be committed to stable branch before\ntoo terribly long.\n", "attachment_id": null, "id": 49070, "creator": "trawick@apache.org", "time": "2003-12-13T22:22:04Z", "bug_id": 24805, "creation_time": "2003-12-13T22:22:04Z", "is_private": false}, {"count": 19, "tags": [], "text": "*** Bug 19846 has been marked as a duplicate of this bug. ***", "attachment_id": null, "id": 49082, "creator": "trawick@apache.org", "time": "2003-12-14T01:22:15Z", "bug_id": 24805, "creation_time": "2003-12-14T01:22:15Z", "is_private": false}, {"count": 20, "attachment_id": null, "bug_id": 24805, "is_private": false, "id": 49174, "time": "2003-12-16T02:37:30Z", "creator": "drees76@gmail.com", "creation_time": "2003-12-16T02:37:30Z", "tags": [], "text": "Just want to confirm that this patch does appear to fix the bug for me, I no\nlonger have stale cronolog processes sitting around after stopping or restarting\nApache."}, {"count": 21, "tags": [], "bug_id": 24805, "text": "My problem was the same David Rees wrote about, I can also confirm that it is\nsolved now.\n\nPlease push it into 2.0.49", "id": 49253, "attachment_id": null, "creator": "pb@bieringer.de", "creation_time": "2003-12-17T15:23:53Z", "time": "2003-12-17T15:23:53Z", "is_private": false}, {"count": 22, "tags": [], "creator": "herbert@trama.com.br", "text": "The patch solved my problem too. Thanks!\nI recommend this onto the next Apache release.", "id": 49257, "time": "2003-12-17T17:03:25Z", "bug_id": 24805, "creation_time": "2003-12-17T17:03:25Z", "is_private": false, "attachment_id": null}, {"count": 23, "tags": [], "text": "Thanks for the reports, folks!  I have indicated with the merge request that it\nwas tested successfully by our users.\n", "attachment_id": null, "id": 49261, "creator": "trawick@apache.org", "time": "2003-12-17T17:50:10Z", "bug_id": 24805, "creation_time": "2003-12-17T17:50:10Z", "is_private": false}]