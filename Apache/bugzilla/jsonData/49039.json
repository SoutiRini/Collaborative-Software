[{"count": 0, "tags": [], "creator": "cilsteph63@gmail.com", "text": "Created attachment 25224\nWithout proxy and with proxy\n\nI send a http request with multipart data.\nMy data are bytes and content-type */*.\nWithout proxy JMeter, my request is ok.\nWith JMeter proxy, data are corrupted and my content-type is modified to text/plain.\nI try to debug proxy in eclipse and i think the problem come from the class PostWriter.java witch create a new String from data so in my case a new String from byte.\nSo some characters are mismatched.\nI attach two screenshots.\n\nThx for your help", "id": 135855, "time": "2010-04-02T14:23:57Z", "bug_id": 49039, "creation_time": "2010-04-02T14:23:57Z", "is_private": false, "attachment_id": 25224}, {"count": 1, "tags": [], "text": "Hello,\nCould you provide the detailed steps of your test and if possible a front facing site  for this issue ?\nOtherwise a capture of the dialog with the server.\n\nThank you\nRegards", "attachment_id": null, "id": 151431, "creator": "p.mouawad@ubik-ingenierie.com", "time": "2011-11-12T13:58:58Z", "bug_id": 49039, "creation_time": "2011-11-12T13:58:58Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 49039, "attachment_id": null, "is_private": false, "id": 153137, "time": "2012-01-25T12:21:54Z", "creator": "jens_0@hotmail.com", "creation_time": "2012-01-25T12:21:54Z", "text": "I can confirm this.\n\nwhen recording HTTP data with JMeter, I'd assume that the request is sent to the server just like the browser would send it.\nThis is not the case in two examples I've run across.\n\nAs you'll know, when recording with HTTP Proxy Server, JMeter will be creating HTTP Samplers and then use their sample method to realize the request, returning the return value to the browser.\nSo we need to create a HTTP Sampler which produces the same request as the browser would have done.\n\nWhen looking at HttpRequestHdr.populateSampler, I see that ConversionUtils.getEncodingFromContentType\nis called. In case the encoding is not supported (returns null) we look in the pageEncodings and formEncodings maps (when and how are they populated??) and if we find nothing here, we use:\npostData = new String(rawPostData);\nmeaning we convert the bytes to a string based on the platform-specific default encoding.\n\nIn my examples this breaks the communication, so not only replay but record does not work.\nIn one case I have no Content-Type header in the request, and new String(rawPostData) seems to break it, in the other case, I have a Content-Type: application/soap+msbin1 header, where \"getEncodingFromContentType\" returns null.\n\nWe really should make sure JMeter sends exactly what it received to the server when acting as proxy, and even better would be if this would work when executing the test.\n\nFor the former, the solution I found seems to be to change the line HttpRequestHdr: postData = new String(rawPostData);\nto:\npostData = new String(rawPostData, PostWriter.ENCODING);\nto match the encoding which is used when executing the request in case no encoding is set.\n\nI also have a problem with the line \nif (firstLine && !CharUtils.isAscii((char) x)){\nwhich I can solve by commenting this out..."}, {"count": 3, "tags": [], "bug_id": 49039, "attachment_id": null, "is_private": false, "id": 153138, "time": "2012-01-25T12:32:18Z", "creator": "p.mouawad@ubik-ingenierie.com", "creation_time": "2012-01-25T12:32:18Z", "text": "Hello Jens,\nThanks for your detailed description and investigation.\n\nIs the site you are testing against a public one ?\nIf not would it be possible for you to capture your scenario with FIDDLER tool and make a Word document with screenshots of the Fiddler record. \nBy having the 2 we will be able to reproduce and fix the issue.\n\nThank you\nRegards\nPhilippe"}, {"count": 4, "tags": [], "text": "The site is not a public one, but one from a customer and I don't have access any more, I'm afraid.\n\nProbably it's enough to test if you create a http server returning some constant random byte garbage and a http client sending random bytes as post data, and checking whether there's a difference when you put JMeter as proxy in between.\nAs long as the Java VMs default encoding is not equal to PostWriter.ENCODING, you'll have a difference.", "is_private": false, "id": 153274, "creator": "jens_0@hotmail.com", "time": "2012-01-30T07:19:10Z", "bug_id": 49039, "creation_time": "2012-01-30T07:19:10Z", "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 49039, "is_private": false, "id": 153486, "attachment_id": null, "creator": "p.mouawad@ubik-ingenierie.com", "creation_time": "2012-02-06T06:52:49Z", "time": "2012-02-06T06:52:49Z", "text": "(In reply to comment #2)\n> I can confirm this.\n> \n> when recording HTTP data with JMeter, I'd assume that the request is sent to\n> the server just like the browser would send it.\n> This is not the case in two examples I've run across.\n> \n> As you'll know, when recording with HTTP Proxy Server, JMeter will be creating\n> HTTP Samplers and then use their sample method to realize the request,\n> returning the return value to the browser.\n> So we need to create a HTTP Sampler which produces the same request as the\n> browser would have done.\n> \n> When looking at HttpRequestHdr.populateSampler, I see that\n> ConversionUtils.getEncodingFromContentType\n> is called. In case the encoding is not supported (returns null) we look in the\n> pageEncodings and formEncodings maps (when and how are they populated??) and if\n> we find nothing here, we use:\n> postData = new String(rawPostData);\n> meaning we convert the bytes to a string based on the platform-specific default\n> encoding.\n> \n> In my examples this breaks the communication, so not only replay but record\n> does not work.\n> In one case I have no Content-Type header in the request, and new\n> String(rawPostData) seems to break it, in the other case, I have a\n> Content-Type: application/soap+msbin1 header, where\n> \"getEncodingFromContentType\" returns null.\n> \n> We really should make sure JMeter sends exactly what it received to the server\n> when acting as proxy, and even better would be if this would work when\n> executing the test.\n> \n> For the former, the solution I found seems to be to change the line\n> HttpRequestHdr: postData = new String(rawPostData);\n> to:\n> postData = new String(rawPostData, PostWriter.ENCODING);\n> to match the encoding which is used when executing the request in case no\n> encoding is set.\n> \nThis seems reasonable, as indeed Postwriter uses ENCODING const when encoding is null.\n> I also have a problem with the line \n> if (firstLine && !CharUtils.isAscii((char) x)){\n> which I can solve by commenting this out...\nRegarding this, would it be possible to attach to Bugzilla \u00e0 fiddler capture of the failing request.\nCAN you give more information about the tested app, is it a binary soap webservice ?"}, {"text": "It was another app than the other problem, but same here no access any more.\nI can confirm a binary SOAP webservice was involved though I do not remember whether it was this request. The char in question was the German umlaut \"\u00fc\".", "tags": [], "creator": "jens_0@hotmail.com", "is_private": false, "count": 6, "id": 153600, "time": "2012-02-08T15:42:31Z", "bug_id": 49039, "creation_time": "2012-02-08T15:42:31Z", "attachment_id": null}, {"count": 7, "tags": [], "creator": "p.mouawad@ubik-ingenierie.com", "text": "This issue has been fixed as part of 52674 as of using :\nnew String(request.getRawPostData(), PostWriter.ENCODING);\nwhen contentEncoding is not found.\n\nRegarding  binary soap webservice , as it's a binary protocol recording would require implementing a dedicated SamplerCreator associated to mime type.\n\n*** This bug has been marked as a duplicate of bug 52674 ***", "id": 160312, "time": "2012-06-27T21:17:24Z", "bug_id": 49039, "creation_time": "2012-06-27T21:17:24Z", "is_private": false, "attachment_id": null}]