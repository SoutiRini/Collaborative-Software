[{"count": 0, "tags": [], "creator": "rpender@us.ibm.com", "attachment_id": null, "text": "I am doing some work with Apache 2.2.3 (win32 and linux) and am running into\nsome problems with CacheEnable and proxy requests. My ultimate goal is to cache\nonly forward proxy requests (with mod_disk_cache), but right now I am running\ninto problems with the basic scenario of just http proxied url's.\n\nThe 2.2 CacheEnable documentation lists the following example:\n# Cache content from www.apache.org\nCacheEnable disk http://www.apache.org/ \n\nThis works as expected (caches proxy requests to apache.org, but not others). \nIf I then change it to:\nCacheEnable disk http://\n\nMy same proxy request to http://www.apache.org does not get cached on my server.\n The debug level error log does not list the cache save filter as ever being\nadded (while it does when i use CacheEnable disk http://www.apache.org/), so I\nnever am able to see why the request to the url was not cached.  Should this not\nbe cached? I see the same example in the CacheEnable 2.2 doc for proxied ftp\nrequests (CacheEnable disk ftp://).\n\nI know an easy solution to caching only proxy requests would be to put the catch\nall 'CacheEnable disk  /' in a virtual host - but I need to be able to cover the\nscenario of when a customer wants to only cache proxy requests, and specifies it\nin the server context.\n\nShould 'cacheenable disk http://' be caching all http proxy requests? How do you\n cache proxy requests to all protocols? Would I have to cacheenable for every\nprotocol?\n\nThis problem exists on win32 and unix 2.2.3 source.", "id": 91827, "time": "2006-08-02T16:14:58Z", "bug_id": 40169, "creation_time": "2006-08-02T16:14:58Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 40169, "attachment_id": 18694, "id": 92115, "time": "2006-08-10T17:04:58Z", "creator": "rpender@us.ibm.com", "creation_time": "2006-08-10T17:04:58Z", "is_private": false, "text": "Created attachment 18694\n(cache_util.c)Fix CacheEnable forward proxy when only protocol specified\n\nmy fix is in uri_meets_conditions(). One line fix."}, {"count": 2, "tags": [], "bug_id": 40169, "attachment_id": null, "id": 92116, "time": "2006-08-10T17:06:22Z", "creator": "rpender@us.ibm.com", "creation_time": "2006-08-10T17:06:22Z", "is_private": false, "text": "(In reply to comment #0)\nI have attached a proposed fix to this problem.  Should work for all protocols."}, {"count": 3, "tags": [], "bug_id": 40169, "attachment_id": null, "id": 92121, "time": "2006-08-10T19:18:11Z", "creator": "rpluem@apache.org", "creation_time": "2006-08-10T19:18:11Z", "is_private": false, "text": "Please provide a diff file of your fix for review (see also\nhttp://httpd.apache.org/dev/patches.html)."}, {"count": 4, "tags": [], "creator": "rpender@us.ibm.com", "attachment_id": 18695, "text": "Created attachment 18695\nunified diff for cache_util.c\n\nSorry bout that - 1st time patch submitter. Here is the unified diff file for\nthe patch.", "id": 92125, "time": "2006-08-10T20:06:29Z", "bug_id": 40169, "creation_time": "2006-08-10T20:06:29Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 40169, "attachment_id": null, "text": "Please never change the assignment of bugs.", "id": 92825, "time": "2006-08-31T21:06:32Z", "creator": "rpluem@apache.org", "creation_time": "2006-08-31T21:06:32Z", "is_private": false}, {"count": 6, "tags": [], "creator": "pg_asf@asf.for.sabi.co.UK", "attachment_id": null, "text": "(In reply to comment #4)\n> Created an attachment (id=18695) [edit]\n> unified diff for cache_util.c\n> \n> Sorry bout that - 1st time patch submitter.\n> Here is the unified diff file for the patch.\n\nThe patch is not general enough I think. The language in the \ndocumentation leads to me think that *any* subprefix \nmatches.\n\nThat \"ht\", \"http:\", \"http://\", \"http://www.\", \"http://www.apa\" \nall match \"http://www.apache.org\".\n\nSo the \"strcasecmp(filter.hostname, url.hostname)\" should be \nreplaced by\n\n  \"strncasecmp(filter.hostname,\n    url.hostname,strlen(filter.hostname))\"\n\nor equivalent. Actually this check should be applied to the \nwhole URI, not just the 'hostname' part.", "id": 93805, "time": "2006-09-19T19:33:00Z", "bug_id": 40169, "creation_time": "2006-09-19T19:33:00Z", "is_private": false}, {"count": 7, "tags": [], "bug_id": 40169, "attachment_id": null, "text": "(In reply to comment #6)\n\nAgreed.  I think the documentation could be worded a little better, and even the\naddition of a CacheEnableMatch could be handy.  I think your suggestion is\ncorrect for the problem at hand though.\n\n", "id": 93809, "time": "2006-09-19T19:43:33Z", "creator": "rpender@us.ibm.com", "creation_time": "2006-09-19T19:43:33Z", "is_private": false}, {"count": 8, "tags": [], "bug_id": 40169, "attachment_id": 18889, "id": 93888, "time": "2006-09-20T00:09:15Z", "creator": "pg_asf@asf.for.sabi.co.UK", "creation_time": "2006-09-20T00:09:15Z", "is_private": false, "text": "Created attachment 18889\nFixes some issues in 'CacheEnable' and 'CacheDisable' matching and extends a bit the functionality."}, {"count": 9, "tags": [], "creator": "pg_asf@asf.for.sabi.co.UK", "attachment_id": null, "text": "(In reply to comment #7 and #8)\n\n> Agreed.  I think the documentation could be worded a \nlittle better, and even the\n> addition of a CacheEnableMatch could be handy.  I think \nyour suggestion is\n> correct for the problem at hand though.\n\nOh I got impatient with the matching logic and while I have \nnot added 'CacheEnableMath' or 'CacheDisableMatch' I have \nrewritten and rather generalized the matching process by \ngiving it comprehensible semantics.\n\nI found that the matching logic is passed not the URI but \nfour distinct fields for scheme, hostname, port and path, so \nthey are matched separately. Then I decided that the scheme \nshould not be really prefix-matched. Among the changes:\n\n* Now a \"/....\" will not match a proxy URI \nlike \"http://...\", and viceversa of course.\n\n* Prefix matching for hostnames does not make much sense, do \nI have added minimal suffix matching: \"*w.example.com\" will \nmatch any hostname ending in \"w.example.com\" \nand \".example.com\" will match any hostname ending \nin \".example.com\".\n\nAll I have tested it a bit (I have removed the extensive \ndebugging code from the submitted patch) and it is all \nnicely commented.\n", "id": 93889, "time": "2006-09-20T00:14:30Z", "bug_id": 40169, "creation_time": "2006-09-20T00:14:30Z", "is_private": false}, {"count": 10, "tags": [], "bug_id": 40169, "attachment_id": null, "id": 130839, "time": "2009-10-03T07:55:58Z", "creator": "minfrin@sharp.fm", "creation_time": "2009-10-03T07:55:58Z", "is_private": false, "text": "Documented and fixed on trunk in r821333."}]