[{"count": 0, "attachment_id": null, "bug_id": 39971, "is_private": false, "id": 90921, "time": "2006-07-05T20:45:13Z", "creator": "eross@m-qube.com", "creation_time": "2006-07-05T20:45:13Z", "tags": [], "text": "Justification:  Although many log messages are single-line messages, stack\ntraces and the like may be written with separate Writer.write() commands.\n\nAdditionally, buffered I/O and flush per event are not exclusive.\n\nPatch:\n\nIndex: src/java/org/apache/log4j/FileAppender.java\n===================================================================\n--- src/java/org/apache/log4j/FileAppender.java (revision 378432)\n+++ src/java/org/apache/log4j/FileAppender.java (working copy)\n@@ -44,6 +44,7 @@\n    * The default size of the IO buffer.\n    */\n   private static final int DEFAULT_BUFFER_SIZE = 8 * 1024;\n+\n   /**\n    * Controls whether to append to or truncate an existing file.\n    * The default value for this variable is\n@@ -60,7 +61,7 @@\n\n   /**\n      Do we do bufferedIO? */\n-  protected boolean bufferedIO = false;\n+  protected boolean bufferedIO = true;\n\n   /**\n      The size of the IO buffer. Default is 8K. */\n@@ -222,10 +223,6 @@\n   */\n   public void setBufferedIO(boolean bufferedIO) {\n     this.bufferedIO = bufferedIO;\n-\n-    if (bufferedIO) {\n-      immediateFlush = false;\n-    }\n   }\n\n   /**\n@@ -260,14 +257,9 @@\n     throws IOException {\n     getLogger().debug(\"setFile called: {}, {}\", fileName, append?\"true\":\"false\");\n\n-    // It does not make sense to have immediate flush and bufferedIO.\n-    if (bufferedIO) {\n-      setImmediateFlush(false);\n-    }\n-\n     closeWriter();\n\n-    FileOutputStream ostream = null;\n+    FileOutputStream ostream;\n     try {\n         //\n         //   attempt to create file"}, {"count": 1, "attachment_id": null, "bug_id": 39971, "is_private": false, "id": 91010, "time": "2006-07-07T20:15:25Z", "creator": "ccorsi@progress.com", "creation_time": "2006-07-07T20:15:25Z", "tags": [], "text": "IMHO, I would not recommend that you have this as a default. The advantage of\noutputting the message as soon as possible is its usefulness during debugging\nsessions. There are cases that will cause the log message not to be displayed.\nFor instance, the production application at a client is hanging and the message\ncontaining the required details for the hang is not being displayed. While this\nbeing the only environment that reproduces the hang. I would like the default to\nremain and give the users the option to buffer the messages or not."}, {"count": 2, "tags": [], "bug_id": 39971, "is_private": false, "text": "\nYou can still used buffered I/O but flush after every log event.  This approach,\nalthough using more data copying, minimizes the number of O/S calls and physical\nwrites to the disk.", "id": 91011, "time": "2006-07-07T21:15:11Z", "creator": "eross@m-qube.com", "creation_time": "2006-07-07T21:15:11Z", "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 39971, "is_private": false, "text": "I understand that this will produce a performance boost. I just do not think\nthat we should change the default behaviour. What I do think is that we should\ndocument the possible performance boost of enabling buffered i/o.\n", "id": 91013, "time": "2006-07-07T21:51:14Z", "creator": "ccorsi@progress.com", "creation_time": "2006-07-07T21:51:14Z", "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 39971, "is_private": false, "text": "The behavior is the same with or without an intermediate buffer, specifically\nevery message is written atomically and flushed to disk before\nAppender.doAppend() returns.  If you want to discuss the minutiae via e-mail,\nlet me know.", "id": 91014, "time": "2006-07-07T23:25:46Z", "creator": "eross@m-qube.com", "creation_time": "2006-07-07T23:25:46Z", "attachment_id": null}, {"count": 5, "tags": [], "creator": "carnold@apache.org", "attachment_id": null, "text": "Not having gone through the minutia, it doesn't seem acceptible to change the default for bufferedIO, \nespecially in 1.2 and likely not even in 1.3.  Of the universe of configurations that did not explicitly specify \nbufferedIO, some didn't care, but some may have intended for bufferedIO to be false.\n\nThe partial interlocking of buffered IO and immediate flush seems ill-advised, particularly since you could \nwork around it (at least with explicit configuration), by calling setImmediateFlush() after calling setFile().  I \ncould not see modifying the behavior in 1.2, but maybe a case could be made for 1.3.\n\n-1 for 1.2 and a -0 for 1.3.", "id": 95850, "time": "2006-11-14T15:55:41Z", "bug_id": 39971, "creation_time": "2006-11-14T15:55:41Z", "is_private": false}, {"attachment_id": null, "tags": [], "creator": "lilianne_blaze@tlen.pl", "text": "How about that - leave the default behaviour as it is, but log a warning if\nBufferedIO is not explicitly set to true/false?", "count": 6, "id": 95852, "time": "2006-11-14T16:42:54Z", "bug_id": 39971, "creation_time": "2006-11-14T16:42:54Z", "is_private": false}, {"attachment_id": null, "tags": [], "bug_id": 39971, "is_private": false, "count": 7, "id": 98644, "time": "2007-01-28T04:18:31Z", "creator": "genman@noderunner.net", "creation_time": "2007-01-28T04:18:31Z", "text": "\nI don't see much point in arguing anymore.\n\nThe org.apache.log4j.concurrent.FileWriter works correctly and doesn't magically\nadjust internal parameters."}]