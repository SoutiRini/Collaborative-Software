[{"count": 0, "tags": [], "bug_id": 49366, "attachment_id": null, "id": 137242, "time": "2010-06-01T10:00:57Z", "creator": "bodewig@apache.org", "creation_time": "2010-06-01T10:00:57Z", "is_private": false, "text": "On Windows System.getenv returns a few environment variables that Ant's\n1.8.1 would not return via <property environment=\"\"/>.  The keys \"=::\" and\n\"=C:\" seem to be always be available and sometimes tehere also is\n\"=ExitCode\".\n\nWe will need to decide what to do with the new variables.  Documenting them\nwill probably be fine, Maarten[1] suggests:\n\n *   - There are magic environment variables maintained by Windows\n *   that start with a `=' (!) character.  These are used for\n *   Windows drive current directory (e.g. \"=C:=C:\\WINNT\") or the\n *   exit code of the last command (e.g. \"=ExitCode=0000001\").\n\nCygwin's /usr/bin/env replaces the \"=\" in the keys with a \"!\", we'll likely\nneed to do something similar or else Execute#patchEnvironment is getting into\ntrouble.\n\n[1] http://mail-archives.apache.org/mod_mbox/ant-dev/201005.mbox/%3C377355.14246.qm@web30801.mail.mud.yahoo.com%3E"}, {"count": 1, "tags": [], "creator": "bodewig@apache.org", "attachment_id": null, "text": "(In reply to comment #0)\n\n\n> We will need to decide what to do with the new variables.  Documenting them\n> will probably be fine, Maarten[1] suggests:\n> \n>  *   - There are magic environment variables maintained by Windows\n>  *   that start with a `=' (!) character.  These are used for\n>  *   Windows drive current directory (e.g. \"=C:=C:\\WINNT\") or the\n>  *   exit code of the last command (e.g. \"=ExitCode=0000001\").\n> \n\nAfter re-reading Maarten's post I see it's not his suggestion but the Javadoc\nfor ProcessEnvironment - would be useful on the property manual page as well,\nthough.", "id": 137243, "time": "2010-06-01T10:02:50Z", "bug_id": 49366, "creation_time": "2010-06-01T10:02:50Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 49366, "text": "Here is some more information about these environment variables:\nhttp://blogs.msdn.com/b/oldnewthing/archive/2010/05/06/10008132.aspx\n\nI took a quick look at the JDK ProcessBuilder code and it seems to me that these variables are passed unmodified to any process it creates.\n\nMaaren", "id": 137258, "time": "2010-06-01T16:12:05Z", "creator": "maarten_coene@yahoo.com", "creation_time": "2010-06-01T16:12:05Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "creator": "gscokart@gmail.com", "attachment_id": null, "text": "I got an other difference when launched from cygwin :\nA PROMPT variable is not returned anymore in 1.8.2.\n\n----\nDetected OS_NAME: windows xp\nDetected OS_ARCH: x86\nDetected OS_VERSION: 5.1\nDetected Java Version: 1.5.0_17\nDetected Java Vendor: Sun Microsystems Inc.\nDetected Java VM Version: 1.5.0_17-b04\nDetected Java VM Name: Java HotSpot(TM) Client VM\n\nOnly in 1.8.1: PROMPT=$P$G\n----\n\nFrom windows on the same machine:\n----\nDetected OS_NAME: windows xp\nDetected OS_ARCH: x86\nDetected OS_VERSION: 5.1\nDetected Java Version: 1.5.0_17\nDetected Java Vendor: Sun Microsystems Inc.\nDetected Java VM Version: 1.5.0_17-b04\nDetected Java VM Name: Java HotSpot(TM) Client VM\n\nOnly in 1.8.2: =C:=C:\\Documents and Settings\\gscokart\nOnly in 1.8.2: =D:=D:\\temp\nOnly in 1.8.2: =ExitCode=00000000\n----\n\n\n\n\nI tested also from cygwin using the ibm jvm 1.5 and the sun jvm 1.6 and got the same result than with the sun jvm 1.5:\n----\nDetected OS_NAME: windows xp\nDetected OS_ARCH: x86\nDetected OS_VERSION: 5.1 build 2600 service pack 2\nDetected Java Version: 1.5.0\nDetected Java Vendor: IBM Corporation\nDetected Java VM Version: 2.3\nDetected Java VM Name: IBM J9 VM\n\nOnly in 1.8.1: PROMPT=$P$G\n----\nDetected OS_NAME: windows xp\nDetected OS_ARCH: x86\nDetected OS_VERSION: 5.1\nDetected Java Version: 1.6.0_12\nDetected Java Vendor: Sun Microsystems Inc.\nDetected Java VM Version: 11.2-b01\nDetected Java VM Name: Java HotSpot(TM) Client VM\n\nOnly in 1.8.1: PROMPT=$P$G\n----\n\n\n\nMy cygwin version is, and I have no PROMPT env variable.  I have PS1 and PS2 (not sure if they are linked):\n---\n$ uname\nCYGWIN_NT-5.1\n$ env | grep PROMPT\n\n$ echo $PS1\n\\[\\e]0;\\w\\a\\]\\n\\[\\e[32m\\]\\u@\\h \\[\\e[33m\\]\\w\\[\\e[0m\\]\\n\\$\n\n$ echo $PS2\n>\n---\n\n\nOn Windows however I have a PROMPT variable:\n---\nD:\\temp>echo %PROMPT%\n$P$G\n---", "id": 137520, "time": "2010-06-10T03:39:00Z", "bug_id": 49366, "creation_time": "2010-06-10T03:39:00Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 49366, "text": "Here is the result of the ant-env.jar invocation on OS/2, as requested by  Stefan Bodewig:\n\n---------------------------------------------------\nDetected OS_NAME: os/2\nDetected OS_ARCH: x86\nDetected OS_VERSION: 20.45\nDetected Java Version: 1.5.0_07\nDetected Java Vendor: Sun Microsystems Inc.\nDetected Java VM Version: 1.5.0_07-b03\nDetected Java VM Name: Java HotSpot(TM) Client VM\n\nOnly in 1.8.1: BEGINLIBPATH=D:\\DEV\\JAVA150\\JRE\\BIN;\n---------------------------------------------------\n\nNote that BEGINLIBPATH is not a real environment variable to the effect that it is not listed by the 'cmd /c set' command although it can be changed using the 'cmd /c set BEGINLIBPATH=<value>' command like any other environment variable. Note also that this variable is not present in the LIBC's environ array on OS/2 (which means it's not part of the process environment at all and cannot be acessed with getenv()/setenv(), there is a special Dos* API for that). The reason why it appears in the System.getenv() map is because it is specifically added there by the \"native\" code (I placed \"native\" in quotes because JDK 1.5 for OS/2 is only available as an Odin-based port where Odin is a Win32 emulation layer similar to Wine; so this comes from its GetEnvironmentStrings() implementation AFAIR).\n\nAnd there is another similar environment variable, ENDLIBPATH. As far as I remember, these two are the only tricky ones.\n\nI hope I provided enough details, but feel free to ask if you need more.", "id": 137573, "time": "2010-06-11T08:56:23Z", "creator": "dmik.for-maillists@hugaida.com", "creation_time": "2010-06-11T08:56:23Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "creator": "bodewig@apache.org", "attachment_id": null, "text": "(In reply to comment #3)\n> My cygwin version is, and I have no PROMPT env variable.  I have PS1 and PS2\n> (not sure if they are linked):\n> ---\n> $ uname\n> CYGWIN_NT-5.1\n> $ env | grep PROMPT\n\nI don't see what you get with \"CYGWIN_NT-6.1-WOW64\".  We probably need to document certain differences for Cygwin.  IMHO it is unlikely to cause real issues.", "id": 137609, "time": "2010-06-14T04:49:57Z", "bug_id": 49366, "creation_time": "2010-06-14T04:49:57Z", "is_private": false}, {"count": 6, "tags": [], "bug_id": 49366, "attachment_id": null, "id": 137610, "time": "2010-06-14T04:59:36Z", "creator": "bodewig@apache.org", "creation_time": "2010-06-14T04:59:36Z", "is_private": false, "text": "(In reply to comment #4)\n\n> Only in 1.8.1: BEGINLIBPATH=D:\\DEV\\JAVA150\\JRE\\BIN;\n\n> Note also that this variable is not present in the LIBC's environ array on OS/2\n> (which means it's not part of the process environment at all and cannot be\n> acessed with getenv()/setenv(), there is a special Dos* API for that).\n\nSo it likely doesn't hurt if it is no longer there in the future.  Just something\nwe need to document.\n\n> The reason why it appears in the System.getenv() map is because it is\n> specifically added there by the \"native\" code\n\nIt is not part of getenv but of our old codebase which just invokes\ncmd /c set for us.\n\n> I hope I provided enough details, but feel free to ask if you need more.\n\nyes you did, many thanks."}, {"count": 7, "tags": [], "bug_id": 49366, "text": "Oliver Deakin reports no differences for z/OS.  Good news.", "id": 137677, "time": "2010-06-16T07:38:24Z", "creator": "bodewig@apache.org", "creation_time": "2010-06-16T07:38:24Z", "is_private": false, "attachment_id": null}, {"count": 8, "tags": [], "creator": "wwalsh@curamsoftware.com", "attachment_id": null, "text": "\nIn response to Bug 49969 I've run this on SUSE Linux Enterprise Server (SLES 10 SP2):\n\nanthill@zlinuxs1:~/JDE015/ANT-ENV> java -jar ant-env.jar\nDetected OS_NAME: linux\nDetected OS_ARCH: s390x\nDetected OS_VERSION: 2.6.16.60-0.21-default\nDetected Java Version: 1.6.0\nDetected Java Vendor: IBM Corporation\nDetected Java VM Version: 2.4\nDetected Java VM Name: IBM J9 VM\n\nBoth methods returned the same environment information\n\n\nThanks,\nwww", "id": 140099, "time": "2010-09-23T07:48:18Z", "bug_id": 49366, "creation_time": "2010-09-23T07:48:18Z", "is_private": false}, {"text": "I've added a Map-returning methode getEnvironmentVariables to Execute that is used by most classes now and helps anybody who parses for the equals signs as separator between key and value.\n\nAll known differences are now documented in svn revision 1040160", "tags": [], "creator": "bodewig@apache.org", "attachment_id": null, "count": 9, "id": 142128, "time": "2010-11-29T10:48:53Z", "bug_id": 49366, "creation_time": "2010-11-29T10:48:53Z", "is_private": false}]