[{"count": 0, "tags": [], "bug_id": 41831, "attachment_id": null, "is_private": false, "id": 100340, "time": "2007-03-13T10:09:42Z", "creator": "fop-dev@cumiskey.com", "creation_time": "2007-03-13T10:09:42Z", "text": "This patch includes quite a few things (apologies for its size but in this case\nI felt it best to refactor before adding additional functionality).  The only\nconsolation is that it should take you less time to apply it than it took me to\nprepare it! ;-)\n\nFirstly it includes a refactoring of FOP configuration so FOP components no\nlonger have a direct dependency on the deprecated avalon configuration framework\n(renderers no longer implement\norg.apache.avalon.framework.configuration.Configurable).  Every component that\nrequires configuration has an associated configuration class in\norg.apache.fop.config.  Configuration is now achieved by simply calling\nFopConfig.configure(fopComponent) from the component (factory, renderers etc).\n\nSecondly it this patch includes some additional FOP configuration options which\nallow the user to define a font directory or to automatically detect fonts\ninstalled on the native operating system, the results of which can be cached for\nsubsequent FOP executions.  This should make font configuration much easier for\nthe standard user.\n\nThe patch also includes a rewrite of the resolve method in FOURIResolver and a\ngeneral tightening up of the FOP configuration (including a renaming and an\nimprovement in the unit tests).\n\nHere is an example FOP configuration file demostrating the new configuration\noptions :-\n\n<!-- by default this option is set to true and is only present here to show its\nexistence in the event that you may wish to turn off font caching -->\n<cache-fonts>true</cache-fonts>\n\n<!-- you can specify where the cache file should be, but by default you\nshouldn't need to configure or worry about this, it will be set automatically\nfor you-->\n<cache-file>C:\\MyDir\\fop.cache</cache-fonts>\n\n<renderers>\n    <renderer mime=\"application/pdf\">\n        <fonts>\n            <font metrics-url=\"arial.xml\" kerning=\"yes\" embed-url=\"arial.ttf\">\n                <font-triplet name=\"Arial\" style=\"normal\" weight=\"normal\"/>\n                <font-triplet name=\"ArialMT\" style=\"normal\" weight=\"normal\"/>\n            </font>\n\n\t<!-- any fonts found in this directory will be automatically added -->\n\t<directory recursive=\"true\">C:\\MyFonts</directory>\n\n\t<!-- your native o/s will be searched and any fonts found will be automatically\nadded -->\n            <auto-detect/>\n       </fonts>\n    <renderer>\n</renderers>\n\nThis new font configuration/caching functionality is excluded from the\nspecialised AFP font configuration.\nNative font finding and font triplet info indentification may need to be tweaked\nbut seems to work pretty well from my tests on the standard true type fonts\nincluded with windows.\n\nOther changes :-\n\norg.apache.fop.fonts.Font.BOLD renamed to org.apache.fop.fonts.Font.WEIGHT_BOLD\norg.apache.fop.fonts.Font.NORMAL renamed to org.apache.fop.fonts.Font.WEIGHT_NORMAL\norg.apache.fop.fonts.Font.STYLE_NORMAL added\norg.apache.fop.fonts.Font.STYLE_ITALIC added\n\nPlease try the patch out, let me know if I have missed or broken anything,\nfeedback is welcome :-)."}, {"count": 1, "tags": [], "text": "Created attachment 19702\nList of updated/new files", "attachment_id": 19702, "id": 100342, "creator": "fop-dev@cumiskey.com", "time": "2007-03-13T10:24:13Z", "bug_id": 41831, "creation_time": "2007-03-13T10:24:13Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 41831, "text": "Created attachment 19703\nPatch file", "id": 100343, "time": "2007-03-13T10:25:13Z", "creator": "fop-dev@cumiskey.com", "creation_time": "2007-03-13T10:25:13Z", "is_private": false, "attachment_id": 19703}, {"text": "Hi Adrian,\n\nWow, looks like a big patch! A few quick comments:\n- when you submit bugs, please don't assign them to one of the developers, but\nrather to fop-dev, so that everyone can follow them\n- given the size of the patch, and if you've not already done so I'll ask you to\nsend a signed ICLA (and a CCLA, if necessary) to the ASF's secretary. See here\nfor details:\nhttp://www.apache.org/licenses/#clas\n\nI'll try to have a look ASAP, but I'm quite busy currently. If anyone beats me\nto it, all the better.\n\nThanks!\nVincent", "tags": [], "creator": "vhennebert@gmail.com", "attachment_id": null, "count": 3, "id": 100370, "time": "2007-03-14T02:59:28Z", "bug_id": 41831, "creation_time": "2007-03-14T02:59:28Z", "is_private": false}, {"count": 4, "tags": [], "text": "Hi Vincent,\n\nI CC'd fop-dev in on this patch so everyone should have been able to follow the\npatch and provide feedback - but I will assign it directly in future.  I have\nsent a signed ICLA to Apache so everything should be fine, but I have not\nreceived any confirmation from them of its receipt.\n\nPlease everyone, try the patch out.\n\nCheers,\n\nAdrian.\n\n(In reply to comment #3)\n> Hi Adrian,\n> \n> Wow, looks like a big patch! A few quick comments:\n> - when you submit bugs, please don't assign them to one of the developers, but\n> rather to fop-dev, so that everyone can follow them\n> - given the size of the patch, and if you've not already done so I'll ask you to\n> send a signed ICLA (and a CCLA, if necessary) to the ASF's secretary. See here\n> for details:\n> http://www.apache.org/licenses/#clas\n> \n> I'll try to have a look ASAP, but I'm quite busy currently. If anyone beats me\n> to it, all the better.\n> \n> Thanks!\n> Vincent\n\n", "is_private": false, "id": 100371, "creator": "fop-dev@cumiskey.com", "time": "2007-03-14T03:08:07Z", "bug_id": 41831, "creation_time": "2007-03-14T03:08:07Z", "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 41831, "attachment_id": null, "id": 100395, "time": "2007-03-14T13:02:58Z", "creator": "adelmelle@apache.org", "creation_time": "2007-03-14T13:02:58Z", "is_private": false, "text": "\nAdrian,\n\nI had a quick look at the code (haven't tried it out /yet/ ;-))\n\nVery impressive piece of work! Auto-discovery of fonts is a very long-awaited feature.\n\nConsidering the ICLA: if you can, fax it to Apache, just to be certain. I didn't even send mine by snail-\nmail, since I have lost hope in that some time ago... Hmm, I'm wondering how long it will be before \nApache enables potential committers to sign and send an ICLA /digitally/.\n\nAnyway, I'm going to try out this patch ASAP.\n\nThanks for your continued efforts on improving the quality of FOP!\n\nAndreas"}, {"count": 6, "tags": [], "bug_id": 41831, "attachment_id": null, "is_private": false, "id": 100396, "time": "2007-03-14T13:35:46Z", "creator": "jeremias@apache.org", "creation_time": "2007-03-14T13:35:46Z", "text": "(In reply to comment #5)\n> Adrian,\n> \n> I had a quick look at the code (haven't tried it out /yet/ ;-))\n> \n> Very impressive piece of work! Auto-discovery of fonts is a very long-awaited\nfeature.\n\nYep, that's going to be a good step forward in user-friendliness. I can't\ncomment on the patch, though, as I haven't had time, yet. Thanks for working on\nthis, Adrian.\n\n> Considering the ICLA: if you can, fax it to Apache, just to be certain. I\ndidn't even send mine by snail-\n> mail, since I have lost hope in that some time ago... Hmm, I'm wondering how\nlong it will be before \n> Apache enables potential committers to sign and send an ICLA /digitally/.\n\nActually, that's possible. You can send a scanned ICLA by mail to\nsecretary@apache.org AND legal-archive@apache.org. Ideally, the mail is PGP\nsigned. Just as an aside: No, Adrian's ICLA hasn't popped up in the secretary's\nrecords. I'll notify everyone as soon as that has happened.\n\n<snip/>\n"}, {"count": 7, "tags": [], "bug_id": 41831, "attachment_id": null, "id": 100402, "time": "2007-03-14T16:49:41Z", "creator": "adelmelle@apache.org", "creation_time": "2007-03-14T16:49:41Z", "is_private": false, "text": "Adrian,\n\nAfter applying the changes in the patch, it /seems/ to work... only, I can't find a TTF file on my system \nfor which I get no complaints (about ascender/descender conflicts, or absent unicode cmaps) \nMust be something Mac-related (? or did you test on that platform yet?)\n\nAs for the fine-tuning:\nI get a few SEVERE errors when the MacFontInfoFinder wants to access directories that don't exist. \nThose need to be suppressed.\nI'm also not too sure I like the idea of automatically /loading/ all the present fonts... Take care of what \nFontLoader does. It reads the whole TTF-file into a byte array, and some Unicode fonts are rather large \nbeasts to read into memory entirely. If you have a few of those installed...?\nI'd try to limit it to the fonts that will actually be used, i.e. keep the possibly used font-info cached, but \nonly trigger loading the font during property-resolving when the corresponding font-family is \nencountered.\n\nAs you indicated, a bit of tweaking and tuning necessary, but all in all 'Nice Job!'.\n\nCheers,\n\nAndreas"}, {"count": 8, "tags": [], "bug_id": 41831, "attachment_id": null, "id": 100414, "time": "2007-03-15T03:13:13Z", "creator": "fop-dev@cumiskey.com", "creation_time": "2007-03-15T03:13:13Z", "is_private": false, "text": "Hi Andreas,\n\nThanks for trying out the patch :-).\n\n(In reply to comment #7)\n> Adrian,\n> \n> After applying the changes in the patch, it /seems/ to work... only, I can't\nfind a TTF file on my system \n> for which I get no complaints (about ascender/descender conflicts, or absent\nunicode cmaps) \n> Must be something Mac-related (? or did you test on that platform yet?)\n\nIt is good that you are a Mac user as I was unable to test on the Mac.  The Mac\nnative font finder should examine the following folders (not recursively) in\norder to search for available system fonts :-\n\n        \"~/Library/Fonts/\",         // user\n        \"/Library/Fonts/\",          // local\n        \"/Network/Library/Fonts/\",  // network\n        \"/System/Library/Fonts/\",   // system\n        \"/System Folder/Fonts/\"     // classic\n\nIf I could also have some feedback from unix users that would be great.\n\n> As for the fine-tuning:\n> I get a few SEVERE errors when the MacFontInfoFinder wants to access\ndirectories that don't exist. \n> Those need to be suppressed.\n\nI have now suppressed this behaviour and will add it to the next patch submission.\n\n> I'm also not too sure I like the idea of automatically /loading/ all the\npresent fonts... Take care of what \n> FontLoader does. It reads the whole TTF-file into a byte array, and some\nUnicode fonts are rather large \n> beasts to read into memory entirely. If you have a few of those installed...?\n> I'd try to limit it to the fonts that will actually be used, i.e. keep the\npossibly used font-info cached, but \n> only trigger loading the font during property-resolving when the corresponding\nfont-family is \n> encountered.\n\nThe fonts should only be loaded the first time you run FOP in autodetect and\ncache mode.  After this first run, all the font info should be stored in the\nfop.cache (should be created in fop/conf/fop.cache) and subsequent FOP\nexecutions should make use of the cache.  Even though this detection is only\nexpensive at the first time of execution, I take your point on board and am\nconsidering lightening the font loading for this autodetect purpose - maybe a\ncall along the lines of FontLoader.loadLightFont(fontFile, resolver) - I may add\nthis in the next patch update.\n\n> As you indicated, a bit of tweaking and tuning necessary, but all in all 'Nice\nJob!'.\n\nYes I think there will be some more tweaking, the more people try this patch out\nthe better - I am sure there will be some things I haven't considered.\n\nCheers,\n\nAdrian."}, {"count": 9, "tags": [], "bug_id": 41831, "attachment_id": 19712, "id": 100436, "time": "2007-03-15T08:23:38Z", "creator": "fop-dev@cumiskey.com", "creation_time": "2007-03-15T08:23:38Z", "is_private": false, "text": "Created attachment 19712\nList of updated/new files"}, {"count": 10, "tags": [], "bug_id": 41831, "attachment_id": 19713, "is_private": false, "id": 100437, "time": "2007-03-15T08:31:55Z", "creator": "fop-dev@cumiskey.com", "creation_time": "2007-03-15T08:31:55Z", "text": "Created attachment 19713\nPatch file\n\nNow suppress error messages on failed native font finding as requested by\nAndreas.\nAlso tidied up the FontLoader so the read() method does the work on calls to\nload() method and the implementing constructors are nice and dumb as they\nshould be :-)."}, {"count": 11, "tags": [], "creator": "adelmelle@apache.org", "is_private": false, "text": "(In reply to comment #8)\n> \n> It is good that you are a Mac user as I was unable to test on the Mac.  The Mac\n> native font finder should examine the following folders (not recursively) in\n> order to search for available system fonts :-\n> \n>         \"~/Library/Fonts/\",         // user\n>         \"/Library/Fonts/\",          // local\n>         \"/Network/Library/Fonts/\",  // network\n>         \"/System/Library/Fonts/\",   // system\n>         \"/System Folder/Fonts/\"     // classic\n\nOnly local and system worked with me. FOP claimed the other three didn't exist, but:\n-> user: the ~ does not get resolved correctly; \"/~/Library/Fonts\" indeed does not exist, since I have no \ndirectory \"/~\", that is \"cd /~\" doesn't work. I think if you could somehow avoid the slash from being \nprepended, then it would work.\n-> network: the Library alias exists with me, but the corresponding device [/automount/Library] is not \nmounted...\n-> classic: indeed does not exist, but I think we don't even need to consider supporting Classic \nanymore. The latest available JVM for that platform was 1.2, IIRC, so if we consider 1.4 as minimal \ntarget JVM for the next release, FOP wouldn't run on it anyway.\n\n> \n> The fonts should only be loaded the first time you run FOP in autodetect and\n> cache mode.  After this first run, all the font info should be stored in the\n> fop.cache (should be created in fop/conf/fop.cache) and subsequent FOP\n> executions should make use of the cache.\n\nGood point. I was only thinking about a recent post on fop-users@ where Abel Braaksma pointed out \nthat loading a 23MB font-file into memory just to use one or two characters was slight overkill. I agree \nwith his point, and I would certainly want to avoid blindly loading three or four of these fonts into \nmemory if they aren't used at all.\n\nBesides that, it's not even during the property-resolving stage that the font needs to be loaded. All the \nFO tree needs to know is whether the supplied font exists in the specified style/weight. It's only during \nlayout that more info about the font is needed (metrics, kerning pairs...). If the FO isn't valid, then the \nfont never needs to be loaded.\n\nI agree with the point that FOP only needs to determine the first time whether a font /exists/ and store \nthat info in a cache, but if no document ever uses that font, it should never be loaded completely, \nwhich is exactly what fop.fonts.truetype.FontFileReader does behind the scenes, when you call loadFont\n(). Maybe fop.fonts.LazyFont can be used for this. It seems to fit the purpose, no?", "id": 100439, "time": "2007-03-15T10:28:33Z", "bug_id": 41831, "creation_time": "2007-03-15T10:28:33Z", "attachment_id": null}, {"count": 12, "attachment_id": null, "bug_id": 41831, "text": "Something else just occurred to me\n\n(In reply to comment #7)\n\n> ... only, I can't find a TTF file on my system for which I get no complaints \n> (about ascender/descender conflicts, or absent unicode cmaps) \n> Must be something Mac-related (? or did you test on that platform yet?)\n\nI would very much like to know what the results are on an Intel Mac. I'm still on the PowerPC.\n\nAs I was browsing through the font handling code, there's a lot of byte-reading and bit-shifting done...\n\nWell, maybe if I find the time, I'll study the TTF-spec, step through the code and have a look at how the \nbytes are interpreted over here...", "id": 100499, "time": "2007-03-16T13:57:16Z", "creator": "adelmelle@apache.org", "creation_time": "2007-03-16T13:57:16Z", "tags": [], "is_private": false}, {"count": 13, "tags": [], "bug_id": 41831, "attachment_id": 19756, "is_private": false, "id": 100677, "time": "2007-03-20T09:25:29Z", "creator": "dev@cumiskey.com", "creation_time": "2007-03-20T09:25:29Z", "text": "Created attachment 19756\nPatch file\n\nFollowing feedback from Andreas - thanks v much for taking the time to look at\nthis :-),  I have made a very minor modification to the MacFontDirFinder.  It\nshould hopefully now be able to detect fonts that have been installed under\nuser home directory (i.e. ~/Library/Fonts).  Please try this patch out on your\nsystem Andreas.  I would encourage, maybe even urge ;-) someone to commit this\npatch soon as it is a large patch that touches upon a number of files (see file\nlist) and is therefore likely to become out of date quickly with commits to the\nrepository.\n\nKind regards,\n\nAdrian."}, {"count": 14, "tags": [], "creator": "adelmelle@apache.org", "is_private": false, "text": "\nHi Adrian,\n\nHad some more time to look into this. I'm currently on a more detailed stroll through your code. Just \nlike to know what I commit, nothing personal. ;-)\n\nThe change to MacFontFinder is working as it should.\n\nIn the meantime, if you make any more changes, try to post incremental patches only containing the \nclasses you know for certain were altered since the last diff. I'll do my best to keep up.\n\nHere's already a few suggestions for change, but there's no immediate necessity to create a new patch. \nI've already corrected some things locally, mainly style issues.\nFor the javadocs, we like to have the class-level doc right before the class declaration, after the import \nheader. As you have it, Eclipse collapses them with the license header. :(\n\nIn WindowsFontFinder, there's that hacky fallback you're commenting on: if shelling out is necessary, \nthen note that 'set windir' will immediately return only the line containing 'windir=', so there's no need \nto iterate over all environment variables.\n\nStill looking further, but these are some things I've already stumbled upon. Stay tuned.\n\nCheers\n\nAndreas", "id": 100855, "time": "2007-03-24T04:07:11Z", "bug_id": 41831, "creation_time": "2007-03-24T04:07:11Z", "attachment_id": null}, {"count": 15, "tags": [], "bug_id": 41831, "attachment_id": null, "id": 100975, "time": "2007-03-26T14:09:16Z", "creator": "adelmelle@apache.org", "creation_time": "2007-03-26T14:09:16Z", "is_private": false, "text": "Adrian,\n\nJust to keep you up to date: I'm almost done here. Apart from the nits mentioned earlier, everything looks \nA-OK to me. I'll wrap things up later this week, and will then first attach a slightly revised patch here. If it \nmeets with your approval, then it will most likely get committed by the weekend.\n\nThanks again for this fine contribution!\n\nAndreas"}, {"count": 16, "tags": [], "text": "Hi Andreas,\n\nMany thanks for reviewing and taking care of commiting my patch.  I realise you\nguys are very busy and I really appreciate you finding the time to thoroughly\nreview my large patch and provide me with feedback :-).  I don't think I will be\nmaking any more minor tweaks to this patch at this time as I am busy working on\nresolving some issues with the postscript renderer.\n\nOf course if anything crops up after the commit I will be more than happy to\nlook at it.  I very much look forward to seeing the new features I've added\nbeing part of the FOP trunk :-).\n\nAll the best,\n\nAdrian Cumiskey.\n\n(In reply to comment #15)\n> Adrian,\n> \n> Just to keep you up to date: I'm almost done here. Apart from the nits\nmentioned earlier, everything looks \n> A-OK to me. I'll wrap things up later this week, and will then first attach a\nslightly revised patch here. If it \n> meets with your approval, then it will most likely get committed by the weekend.\n> \n> Thanks again for this fine contribution!\n> \n> Andreas", "is_private": false, "id": 100986, "creator": "dev@cumiskey.com", "time": "2007-03-26T16:09:05Z", "bug_id": 41831, "creation_time": "2007-03-26T16:09:05Z", "attachment_id": null}, {"count": 17, "tags": [], "creator": "devel@thanlwinsoft.org", "attachment_id": null, "text": "I tried out this patch on Ubuntu Linux and found that I needed a few changes to\nget it to work properly. Since this hasn't been checked in, I'm not sure what to\nsend a patch against, so I'll just describe them for now.\n\norg.apache.fop.fonts.autodetect.UnixFontDirFinder\nIt is probably worth adding the .fonts directory in a user's home directory: e.g.\n\nUNIX_FONT_PATHS = {\n        System.getProperty(\"user.home\") + \"/.fonts\",\n\n\norg.apache.fop.fonts.autodetect.FontFileFinder.find should have the recursive\nargument set to true when called from\norg.apache.fop.fonts.autodetect.NativeFontFileFinder.find, because the fonts are\nfound several layers deep under /usr/share/fonts.\n\norg.apache.fop.fonts.autodetect.FontInfoFinder\nIf you use \nembedUrl = fontFile.toURI().toURL().toExternalForm();\nthen it seems to do escaping of spaces, otherwise font filenames containing\nspaces cause problems.\n\nIt is probably worth handling UnsupportedOperationException within the\norg.apache.fop.fonts.autodetect.FontInfoFinder.find() method to prevent one bad\nfont breaking everything. I find \"OpenType fonts with CFF data are not\nsupported, yet\" errors thrown by org.apache.fop.fonts.truetype.TTFFontLoader\nbreak the caching otherwise.\n\nI'm not convinced that the cache is working properly for failed fonts, because I\nalways seem to get log messages about them, not just on the first run. However,\nI haven't had time to investigate that properly.\n\ncheers,\nKeith\n", "id": 101261, "time": "2007-03-30T16:42:55Z", "bug_id": 41831, "creation_time": "2007-03-30T16:42:55Z", "is_private": false}, {"count": 18, "tags": [], "bug_id": 41831, "attachment_id": null, "id": 101315, "time": "2007-04-02T02:40:13Z", "creator": "dev@cumiskey.com", "creation_time": "2007-04-02T02:40:13Z", "is_private": false, "text": "Hi Keith,\n\nMany thanks for trying out the patch and taking the time to provide me with\nfeedback.  My comments are below.\n\n(In reply to comment #17)\n> I tried out this patch on Ubuntu Linux and found that I needed a few changes to\n> get it to work properly. Since this hasn't been checked in, I'm not sure what to\n> send a patch against, so I'll just describe them for now.\n> \n> org.apache.fop.fonts.autodetect.UnixFontDirFinder\n> It is probably worth adding the .fonts directory in a user's home directory: e.g.\n> \n> UNIX_FONT_PATHS = {\n>         System.getProperty(\"user.home\") + \"/.fonts\",\n\nOk this is a nice easy addition.  Andreas, if you are reading this\nI believe you have made some small changes.  Before I make any of the changes\nthat Keith suggests, it might be a good idea for you to attach an additional\npatch file with your changes.\n\n> org.apache.fop.fonts.autodetect.FontFileFinder.find should have the recursive\n> argument set to true when called from\n> org.apache.fop.fonts.autodetect.NativeFontFileFinder.find, because the fonts are\n> found several layers deep under /usr/share/fonts.\n\nI am thinking that I may make the NativeFontFileFinder class a little more\nflexible so that implementing classes are able to specify whether each\nindividual search file path should be searched recursively or not.\n\n> \n> org.apache.fop.fonts.autodetect.FontInfoFinder\n> If you use \n> embedUrl = fontFile.toURI().toURL().toExternalForm();\n> then it seems to do escaping of spaces, otherwise font filenames containing\n> spaces cause problems.\n\nThis is also a quick easy change.\n\n> It is probably worth handling UnsupportedOperationException within the\n> org.apache.fop.fonts.autodetect.FontInfoFinder.find() method to prevent one bad\n> font breaking everything. I find \"OpenType fonts with CFF data are not\n> supported, yet\" errors thrown by org.apache.fop.fonts.truetype.TTFFontLoader\n> break the caching otherwise.\n\nYes this is a case I did not cater for.  I will change this.\n\n> I'm not convinced that the cache is working properly for failed fonts, because I\n> always seem to get log messages about them, not just on the first run. However,\n> I haven't had time to investigate that properly.\n\nI believe this to be working fine.  Bad/failed fonts are also recorded in the\ncache.  The error is still printed to remind the user of the problem but the\nfont is not parsed again unless the file has been changed.\n\nThanks again Keith for taking time to try out the patch and provide feedback :-).\n\nCheers,\n\nAdrian Cumiskey.\n\n"}, {"text": "Created attachment 19890\nupdated files from org.apache.fop.fonts.autodetect package\n\nFollowing feedback from Andreas and Keith I have updated the autodetect\npackage.  I hope this does not cause you too many merge problems Andreas.", "tags": [], "creator": "dev@cumiskey.com", "attachment_id": 19890, "count": 19, "id": 101329, "time": "2007-04-02T06:37:52Z", "bug_id": 41831, "creation_time": "2007-04-02T06:37:52Z", "is_private": false}, {"count": 20, "tags": [], "bug_id": 41831, "text": "Created attachment 19891\nupdated files from org.apache.fop.fonts.autodetect package\n\nWhoops..  This is what I should have submitted.  Please ignore the last\nattached archive file.\n\nAndreas, this patch is getting a little out of date with the trunk now - if you\nneed me to create a fresh patch from the latest trunk code let me know.", "id": 101330, "time": "2007-04-02T06:55:11Z", "creator": "dev@cumiskey.com", "creation_time": "2007-04-02T06:55:11Z", "is_private": false, "attachment_id": 19891}, {"count": 21, "attachment_id": null, "bug_id": 41831, "text": "Hi Adrian,\n\nThanks for making those changes, they seem to work for me.\n\n(In reply to comment #18)\n> I believe this to be working fine.  Bad/failed fonts are also recorded in the\n> cache.  The error is still printed to remind the user of the problem but the\n> font is not parsed again unless the file has been changed.\n\nSorry, yes, the failed fonts are recorded fine. However, I wonder whether it is\nworth changing this log from info to debug after the first run (FontInfoFinder\nline 151). If you have a lot of fonts, it can produce several pages of messages\n(mainly from /usr/share/fonts/type1/gsfonts on my system).\n\nthanks for a very useful patch.\n\nKeith Stribley\n", "id": 101335, "time": "2007-04-02T10:22:23Z", "creator": "devel@thanlwinsoft.org", "creation_time": "2007-04-02T10:22:23Z", "tags": [], "is_private": false}, {"count": 22, "tags": [], "text": "\nHi Adrian,\n\nJust a little FYI: I did not get around to applying the patch during the \nweekend (because of a small disagreement with my ISP over the price of my \nconnection... I thought it should be free ;-) As a result they cut me off... \nChecking my e-mail via Webinterface now) \nAnyway, this will all be settled later this week, so it will take a bit more \ntime than I had anticipated, but just wanted to let you know that I haven't \nforgotten about this one.\nLocally, I've done about all I can. Just need to get to uploading.\n\nCheers,\n\nAndreas", "attachment_id": null, "id": 101357, "creator": "adelmelle@apache.org", "time": "2007-04-03T00:00:36Z", "bug_id": 41831, "creation_time": "2007-04-03T00:00:36Z", "is_private": false}, {"count": 23, "tags": [], "text": "(In reply to comment #21)\n\nHi Keith / Adrian,\n\n> ... I wonder whether it is worth changing this log from info to debug after the first run \n> (FontInfoFinder line 151). If you have a lot of fonts, it can produce several pages of \n> messages (mainly from /usr/share/fonts/type1/gsfonts on my system).\n\nIndeed, I tend to agree with Keith here. Adrian, what do you think?\n\nOf course, the issue is rendered moot once we're talking about servlet environments. Still, we do have \nCLI users to take into account...\n\n\nCheers,\n\nAndreas", "is_private": false, "id": 101470, "creator": "adelmelle@apache.org", "time": "2007-04-05T11:21:20Z", "bug_id": 41831, "creation_time": "2007-04-05T11:21:20Z", "attachment_id": null}, {"count": 24, "tags": [], "bug_id": 41831, "text": "(In reply to comment #20)\n\nHi Adrian,\n\n> \n> Andreas, this patch is getting a little out of date with the trunk now - if you\n> need me to create a fresh patch from the latest trunk code let me know.\n\nJust a little nit: the last attachment does not include an updated NativeFontDirFinder, while at least the \naddition of a 'fontPaths' member seems to have changed...? Is it possible this was changed, or did I \nmiss something?\n\nCheers,\n\nAndreas", "id": 101471, "time": "2007-04-05T11:33:59Z", "creator": "adelmelle@apache.org", "creation_time": "2007-04-05T11:33:59Z", "is_private": false, "attachment_id": null}, {"count": 25, "tags": [], "text": "Hi Andreas,\n\nI've just checked the zip file and it does contain a NativeFontDirFinder.java\nfile.  What I submitted seemed to work ok for Keith..  maybe the problem lies in\nthe merge after your ammendments?  I think I renamed and changed the type of\nfontPaths to fontDirs (it now uses an entity inner class called FontDirInfo\ndefined in NativeFontDirFinder to hold font paths).\n\nHope you get time to commit the patch, wishing you a nice easter holiday period :-)\n\nAdrian.\n\n(In reply to comment #24)\n> (In reply to comment #20)\n> \n> Hi Adrian,\n> \n> > \n> > Andreas, this patch is getting a little out of date with the trunk now - if you\n> > need me to create a fresh patch from the latest trunk code let me know.\n> \n> Just a little nit: the last attachment does not include an updated\nNativeFontDirFinder, while at least the \n> addition of a 'fontPaths' member seems to have changed...? Is it possible this\nwas changed, or did I \n> miss something?\n> \n> Cheers,\n> \n> Andreas", "attachment_id": null, "id": 101526, "creator": "dev@cumiskey.com", "time": "2007-04-09T01:49:32Z", "bug_id": 41831, "creation_time": "2007-04-09T01:49:32Z", "is_private": false}, {"count": 26, "tags": [], "bug_id": 41831, "attachment_id": null, "id": 102112, "time": "2007-04-23T08:09:15Z", "creator": "fop-dev@cumiskey.com", "creation_time": "2007-04-23T08:09:15Z", "is_private": false, "text": "*** Bug 41514 has been marked as a duplicate of this bug. ***"}, {"text": "Andreas, are you still working on this patch?", "tags": [], "creator": "jeremias@apache.org", "attachment_id": null, "count": 27, "id": 103078, "time": "2007-05-11T02:08:12Z", "bug_id": 41831, "creation_time": "2007-05-11T02:08:12Z", "is_private": false}, {"count": 28, "tags": [], "bug_id": 41831, "attachment_id": null, "is_private": false, "id": 103344, "time": "2007-05-18T10:09:40Z", "creator": "fop-dev@cumiskey.com", "creation_time": "2007-05-18T10:09:40Z", "text": "Andreas, if you come back online again please do not commit the patch just yet\nas I have made some significant improvements to it which will be attached soon."}, {"count": 29, "attachment_id": 20242, "bug_id": 41831, "is_private": false, "id": 103508, "time": "2007-05-22T09:52:38Z", "creator": "fop-dev@cumiskey.com", "creation_time": "2007-05-22T09:52:38Z", "tags": [], "text": "Created attachment 20242\nPatch file"}, {"count": 30, "tags": [], "bug_id": 41831, "attachment_id": 20243, "id": 103509, "time": "2007-05-22T09:57:47Z", "creator": "fop-dev@cumiskey.com", "creation_time": "2007-05-22T09:57:47Z", "is_private": false, "text": "Created attachment 20243\nList of updated/new files"}, {"count": 31, "attachment_id": null, "bug_id": 41831, "is_private": false, "id": 103510, "time": "2007-05-22T10:08:27Z", "creator": "fop-dev@cumiskey.com", "creation_time": "2007-05-22T10:08:27Z", "tags": [], "text": "This patch contains many design and style changes and improvements including\n(but not limited to) :-\n\n* Small URI related JDK1.4 dependencies removed from FOURIResolver.\n* DirectoryWalker from commons-io-1.3.1.jar is now used for font detection.\n* <cache-fonts/> has been renamed to <use-cache/> so it may cover other general\ncaching uses in the future.\n\nIts a large patch so I may have missed something, so please try the patch out. \nFeedback welcome :-)\n\nAdrian."}, {"count": 32, "tags": [], "creator": "jeremias@apache.org", "is_private": false, "text": "I will take this on, since Andreas has mysteriously vanished. Thanks, Adrian,\nfor revising the patch. The new one is an significant improvement over the\nprevious. I'm in the process of reviewing the patch in detail. I will be able to\ncommit it on Friday.", "id": 103548, "time": "2007-05-23T08:19:35Z", "bug_id": 41831, "creation_time": "2007-05-23T08:19:35Z", "attachment_id": null}, {"count": 33, "attachment_id": null, "bug_id": 41831, "is_private": false, "id": 103741, "time": "2007-05-28T02:07:51Z", "creator": "jeremias@apache.org", "creation_time": "2007-05-28T02:07:51Z", "tags": [], "text": "Wow, it took me a lot longer to thoroughly review this patch than I anticipated.\nI'm almost ready to commit. I only have to test the PDFTrancoder and\nPDFDocumentGraphics2D. Here are the issues I found and what I did about them:\n\n- Javadocs: Still some issues there. I fixed the most important locations.\n- FopCache: I did a double-check on that to see if I've done anything wrong, but\nafter applying the patch the cache file was always empty. The writing methods\nwere simply not referenced anywhere in the code. Therefore the font lookup\nperformance wasn't improved. I also wondered why it has to be done in such a\ncomplicated way (writing and parsing XML using custom code) just for a cache\nfile. So since the code didn't work as expected I simply tore it out (Sorry,\nAdrian) and used Java's Serializable mechanism. That has the elegant side-effect\nthat there's a lot less code to maintain and it's probably faster. And I renamed\nFopCache to FontCache and moved it into the fonts package. I didn't like all\nthis cache stuff cluttering the apps package. Now on my machine the speed-up is\nfrom 1200ms for the first run, to 70ms with the cache despite over 150 fonts\nbeing registered. Another issue in that area was the use of the singleton\npattern for the FontCache. I have now attached the FontCache to the FopFactory\nlike every other cache we have. Furthermore, the default location of the cache\nfile is changed to <user-home>/.fop/fop-fonts.cache. I did this because the font\nauto-detection also checks user directories so this made sense to me. I have not\nyet added a configuration item to define the cache location and I removed the\ncommand-line argument for the cache location as it had no counterpart for\nembedded use. We can add that later when we see a need for it.\n- TrueType Collections (*.ttc)and OpenType fonts with an \".otf\" extension are\ncurrently not found. I'll add that after applying the patch.\n- TrueType Collections are not properly supported with the auto-detection\nmechanism. ATM, if someone wants to use a TTC, he has to configure it using a\nXML font metric file as before. We can improve that later.\n- The same applies to fonts that should only be referenced but not embedded. For\ncertain environments you have all the fonts already installed on the production\nprinters and you may want to reference those. But I guess that's becoming less\nimportant nowadays.\n- The whole font configuration stuff got lost for PDFDocumentGraphics2D. I've\naddressed that and took the opportunity to remove some of the Avalon\ndependencies, too. This as a preparation for the move to Commons/Batik.\n- I addressed a small problem when the font base URL is no file URL. The font\nauto-detection will then be skipped for the font base URL.\n- The RendererContextInfo stuff was quite confusing to me (especially the\nsomewhat abstract naming). I eventually managed to simplify it which resulted in\nremoving RendererContextInfo* and everything that's necessary is now in\nXMLHanderConfigurator because RendererContextInfoConfigurator really configured\nthe XMLHandler, not the RendererContext.\n- Another case where I thought I was doing something wrong: Type 1 fonts simply\ndidn't work. All fonts failed because the auto-detection code was accessing the\nPFB file instead of the PFM. I fixed that.\n- I made the font code a little less verbose on the log as with auto-detection\nI'm not really interested in all the details. That's another case where dividing\ndeveloper feedback from user feedback will be helpful.\n\nWhile working on this patch, I kept thinking that there's still some room (and\nnecessity) for improvement with the whole font handling (not directly related to\nthis patch). The big issue: The whole font configuration is currently triggered\nduring the renderer setup. That means it is done each time a new renderer is\ncreated. Plus we still have a font config per renderer which is not beautiful. I\nkeep ending up with my \"font source\" idea I had back when I discussed the whole\nfont thing with Victor. I guess I will tackle that one day now that we've\ndecided not to work with FOrayFont...\n\nPlus another few notes for the future:\n- A facility for font subsitution is getting more important to have with\nauto-detection since you don't specify the font names yourself anymore. Suppose\nyou have an FO file that uses \"StandardGrotesk\" but the actual font is\nregistered by auto-detection as \"StandardGroteskBSK-Regular\". But part of the\nproblem is our lack of parser for AFM files which contains font family\ninformation in contrast to the PFM file. FOrayFont has an advantage here.\n- Suppose you have a font set with Light, Regular, Medium, Bold, ExtraBold and\nSuper and they should actually be accessible under the same font family but with\nthe integer weights (...400, 500, 600...) from the FO spec. Similar to the point\nabove you will want to be able to specify a mapping which is probably very hard\nto do automagically.\n\nAnyway, thanks a lot, Adrian, for your work and your patience. There's no need\nto improve anything on the patch for now. I've handled all issues that were\nimportant to me. We can refine later. Commit coming up in the next hours."}, {"count": 34, "tags": [], "text": "Patch applied: http://svn.apache.org/viewvc?view=rev&rev=542237", "attachment_id": null, "id": 103748, "creator": "jeremias@apache.org", "time": "2007-05-28T07:33:53Z", "bug_id": 41831, "creation_time": "2007-05-28T07:33:53Z", "is_private": false}, {"count": 35, "tags": [], "text": "batch transition pre-FOP1.0 resolved+fixed bugs to closed+fixed", "is_private": false, "id": 155742, "creator": "gadams@apache.org", "time": "2012-04-01T06:38:19Z", "bug_id": 41831, "creation_time": "2012-04-01T06:38:19Z", "attachment_id": null}]