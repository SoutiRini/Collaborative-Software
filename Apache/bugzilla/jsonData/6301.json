[{"count": 0, "tags": [], "bug_id": 6301, "attachment_id": null, "id": 10433, "time": "2002-02-07T09:42:45Z", "creator": "james.kemp@northgate-is.com", "creation_time": "2002-02-07T09:42:45Z", "is_private": false, "text": "In our servlet we tried to get a resource as a stream so that we can read it \nusing a java Properties object, this works successfully and we close the stream \nreturned to us. \nIf we then use getRealPath to get to the resource we have opened using \ngetResourceAsStream, create a file output stream to it, write a new property to \nthe properties file then close we can get a corrupt properties file with the \nold contents.\nIt's as if the underlying inputstream has not been closed when we originally \naccessed the resource.\nWe have tested this in Resin and our test behaved as we expected."}, {"attachment_id": null, "tags": [], "bug_id": 6301, "is_private": false, "count": 1, "id": 10456, "time": "2002-02-07T15:57:03Z", "creator": "remm@apache.org", "creation_time": "2002-02-07T15:57:03Z", "text": "I don't understand why you wouldn't be allowed to keep the stream open if you \nwish to."}, {"count": 2, "tags": [], "creator": "james.kemp@northgate-is.com", "attachment_id": null, "id": 10458, "time": "2002-02-07T16:16:34Z", "bug_id": 6301, "creation_time": "2002-02-07T16:16:34Z", "is_private": false, "text": "puzzled by your response. \nGiven that Tomcat reads web applications from the file system and not direct \nfrom a WAR file then I expect it to present me the contents of a resource as an \ninput stream; either a real one to the file or an internal one that has \npreviously been populated by the contents of the file. \nEither way when I do close I expect the underlying file to be closed, so that \nwhen I follow it by opening an output stream to it I can update the file and \nclose it.\nI don't expect a timing situtation to occur whereby the older input stream on \nthe file closes and restores the old file contents.\nPerhaps I'm not following your reply, can you please expand. "}, {"count": 3, "tags": [], "creator": "remm@apache.org", "attachment_id": null, "is_private": false, "id": 10461, "time": "2002-02-07T16:39:11Z", "bug_id": 6301, "creation_time": "2002-02-07T16:39:11Z", "text": "I thought your complaint was about the stream not being automatically closed or \nsomething like it (which is not the case; if you call close on the IS, it will \nreally close it).\n\nHere, you're running into a caching problem, where the cache of the directory \ncontext doen't always get revalidated.\nYou can use a Resources element (child of a Context element) in server.xml to \ndisable the cache or tweak it, so that it would do revalidation on each request \n(although I didn't document that yet, unfortunately; setting the \"cacheTTL\" \nproperty to \"-1\" should do that; disabling the content caching by \nsetting \"cacheObjectMaxSize\" to \"-1\" would also do it):\nhttp://jakarta.apache.org/tomcat/tomcat-4.0-doc/config/resources.html"}, {"count": 4, "tags": [], "bug_id": 6301, "attachment_id": null, "id": 10463, "time": "2002-02-07T16:45:15Z", "creator": "craig.mcclanahan@sun.com", "creation_time": "2002-02-07T16:45:15Z", "is_private": false, "text": "You should also note a couple of other facts:\n\n* The ability to modify web application resources is *not* defined\n  in the servlet specification.  Therefore, you are totally on your\n  own, and cannot expect portability across containers.\n\n* Running webapps from unpacked directories is also not defined in\n  the spec.  It is therefore not something you can count on.  Trying\n  to modify existing properties via getRealPath() will, of course,\n  fail in this scenario.\n\nWeb applications that want to modify and save persistent state should do so\nsomewhere external to the webapp itself.\n"}, {"attachment_id": null, "tags": [], "bug_id": 6301, "is_private": false, "count": 5, "id": 10464, "time": "2002-02-07T17:22:37Z", "creator": "james.kemp@northgate-is.com", "creation_time": "2002-02-07T17:22:37Z", "text": "\nCompletely agree with you on the servlet spec stuff - we did our own \ninvestigations for WL, WS, SS, Resin etc.\n\nWe will give the caching option a try and see what happens - many thanks for \nthe prompt response."}]