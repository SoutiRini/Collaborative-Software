[{"count": 0, "tags": [], "bug_id": 21899, "attachment_id": null, "text": "Trying to zip a semi-large file (230MB) file fails with an OutOfMemoryError if\ncompression is turned off.  Setting compression turned on resolves the problem!\n Using Ant 1.5.2 and JDK 1.4.1_02 with default VM settings.\n\nAdditional info: I disabled compression in this case because I am zipping up one\nor more other zip files for ftp transport later on.  Compressing what can't be\ncompressed is a waste of CPU, of course.  As a result of this bug, I am forced\nto use compression.", "id": 41537, "time": "2003-07-25T21:16:56Z", "creator": "johnnycobol@yahoo.com", "creation_time": "2003-07-25T21:16:56Z", "is_private": false}, {"count": 1, "tags": [], "creator": "jrehman@citysearch.com", "text": "Without looking at the appropriate Ant source, I'd say that this is a problem\nwith the Sun's jar classes. Are you able to successfully jar these files with\nthe command-line utility?", "id": 41994, "time": "2003-08-02T05:50:28Z", "bug_id": 21899, "creation_time": "2003-08-02T05:50:28Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "text": "Have you tried increasing the amount of memory to the VM using ANT_OPTS\nenvironment variable.", "attachment_id": null, "id": 42022, "creator": "conor@apache.org", "time": "2003-08-03T15:49:31Z", "bug_id": 21899, "creation_time": "2003-08-03T15:49:31Z", "is_private": false}, {"count": 3, "tags": [], "creator": "bodewig@apache.org", "attachment_id": null, "id": 42055, "time": "2003-08-04T12:15:25Z", "bug_id": 21899, "creation_time": "2003-08-04T12:15:25Z", "is_private": false, "text": "Josh is in part correct.  Ant doesn't use java.util.zip.ZipOutputStream (well at\nleast it doesn't since Ant 1.3) but a reimplementation of its own that tried to\nprovide an API close to the original.\n\nIn java.util.zip.ZipOutputStream you have to calculate the CRC and uncompressed\nsize yourself before you can invoke putEntry if you are not compressing the data.\nAnt's implementation had the same limitation.\n\nIn order to avoid reading the file twice, Ant reads it into memory to calculate\nthe CRC and writes it to the archive after that.  This means you'll have to\nincrease the heap memory of your JVM as much that the largest uncompressed file\nwill fit into memory.\n\nThe current CVS HEAD version has an improved ZipOutputStream that can do better\nand the nightly build of 2003-08-05 will contain a <zip> task that can stream\nthe data through.  This should speed up archive creation (as the CRC is\ncalculated only once) and save memory at the same time."}]