[{"count": 0, "tags": [], "bug_id": 52164, "attachment_id": null, "is_private": false, "id": 151338, "time": "2011-11-09T17:02:52Z", "creator": "nbodin78@free.fr", "creation_time": "2011-11-09T17:02:52Z", "text": "When we create a slide with some text inside, if the font of the TextShape is different from the \"default\" font (of the Master Page) then :\n- all characters use the font specified in the TextShape (This is CORRECT)\nBUT\n- accents such as \u00e9 \u00e0 \u00e8 \u00f9 \u00ee use the default font and it is not possible to change it.\n\na) I tried to use unicode encoding like : \\u00e9 instead of \u00e9 but the problem remains\n\nb) I tried to set the value as HTML then encode &eacute; but this just displays the &eacute; and is not working either.\n\nc) I tried to FORCE the font of the RichText to the default font, this works and now the strings with accent is fine on screen (with the other font) BUT this is not usable, since the size of the TextShape changes and I have text overlapping or gaps between text \n\nd) I tried to change the default font of the master page with the API but it does not seem to be possible to this.\n\ne) Finally the only workaround which works is to test the default font and the TextShape font and if they differ to call : \npublic static String removeAccents(String s)\n\t{\n\t    if (s != null && s.length() > 0)\n\t    {\n\t        s = s.replaceAll(\"[\u00e8\u00e9\u00ea\u00eb]\",\"e\");\n\t        s = s.replaceAll(\"[\u00fb\u00f9]\",\"u\");\n\t        s = s.replaceAll(\"[\u00ef\u00ee]\",\"i\");\n\t        s = s.replaceAll(\"[\u00e0\u00e2]\",\"a\");\n\t        s = s.replaceAll(\"\u00d4\",\"o\");\n\n\t        s = s.replaceAll(\"[\u00c8\u00c9\u00ca\u00cb]\",\"E\");\n\t        s = s.replaceAll(\"[\u00db\u00d9]\",\"U\");\n\t        s = s.replaceAll(\"[\u00cf\u00ce]\",\"I\");\n\t        s = s.replaceAll(\"[\u00c0\u00c2]\",\"A\");\n\t        s = s.replaceAll(\"\u00d4\",\"O\");\n\t    }\n\t    return s;\n\t}  \nand all accents are gone ... The text is correctly displayed but the end users will complain for missing accents... Until a fix for this issue.\n\n***\nCode example found over the internet :assuming test.ppt is using Arial as default font and we have some text box using times new roman.\n \nHSLFSlideShow hslfsh = new HSLFSlideShow(\"template/test.ppt\"); SlideShow ppt = new SlideShow(hslfsh);\n\nSlide slide[] = ppt.getSlides();\n\nfor(int i = 0 ; i < slide.length ; i++) { Slide curSlide = slide[i]; Shape sh[] = curSlide.getShapes();\n\nfor(int j = 0; j < sh.length ; j++ ) { Shape curSh = sh[j];\n\nTextBox tb = new TextBox();\n\ntb.setAnchor(curSh.getAnchor());\n\ntb.setText(\"Helloworld \u00e9 \u00e8 \u00eb \u00ea \u00e0 \u00f6 \u00ef \u00ee \u00f4 \u00fc \u00fb\");\n\nTextBox shape = (TextBox)curSh;\n\nRichTextRun rt = shape.getTextRun().getRichTextRuns()[0]; RichTextRun newRt = tb.getTextRun().getRichTextRuns()[0];\n\n// style copy newRt.setAlignment(rt.getAlignment()); newRt.setBold(rt.isBold()); newRt.setFontColor(Color.black); newRt.setFontName(rt.getFontName()); newRt.setFontSize(rt.getFontSize()); newRt.setItalic(rt.isItalic()); newRt.setUnderlined(rt.isUnderlined());\n\n// remove old shape curSlide.removeShape(shape);\n\ncurSlide.addShape(tb); } }"}, {"count": 1, "tags": [], "creator": "nbodin78@free.fr", "is_private": false, "text": "Created attachment 27915\nExample", "id": 151340, "time": "2011-11-09T17:20:06Z", "bug_id": 52164, "creation_time": "2011-11-09T17:20:06Z", "attachment_id": 27915}, {"count": 2, "tags": [], "bug_id": 52164, "attachment_id": 27916, "text": "Created attachment 27916\nWithout accents :\n\nSame result after removing accents", "id": 151341, "time": "2011-11-09T17:34:29Z", "creator": "nbodin78@free.fr", "creation_time": "2011-11-09T17:34:29Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 52164, "attachment_id": null, "is_private": false, "id": 154024, "time": "2012-02-22T12:14:10Z", "creator": "yegor@dinom.ru", "creation_time": "2012-02-22T12:14:10Z", "text": "I can't reproduce it. Here is my test code and all accents are OK in the output: \n\n\n\n        SlideShow ppt = new SlideShow();\n        Slide slide = ppt.createSlide();\n\n        TextBox shape = new TextBox();\n        RichTextRun rt = shape.getTextRun().getRichTextRuns()[0];\n        shape.setHorizontalAlignment(TextBox.AlignLeft);\n        rt.setFontName(\"Times New Roman\");\n        shape.setText(\"Helloworld \u00e9 \u00e8 \u00eb \u00ea \u00e0 \u00f6 \u00ef \u00ee \u00f4 \u00fc \u00fb\");\n        rt.setFontSize(16);\n        shape.setAnchor(new java.awt.Rectangle(495, 375, 210, 115));\n        slide.addShape(shape);\n\n        FileOutputStream out = new FileOutputStream(\"52164.ppt\");\n        ppt.write(out);\n        out.close();\n\nCan you post Java code that generates problematic output with missing accents? if it requires a template, then attach it as well.\n\nYegor"}, {"count": 4, "tags": [], "bug_id": 52164, "attachment_id": null, "text": "I also can't reproduce the error and there wasn't any response, so I'm closing \nthis as \"works for me\"\nThis was my test code:\n\n    public void bug52164() throws IOException {\n        HSLFSlideShow ppt = new HSLFSlideShow();\n        HSLFSlide sl = ppt.createSlide();\n        HSLFTextBox tb = sl.createTextBox();\n        \ntb.getTextParagraphs().get(0).getTextRuns().get(0).setFontFamily(\"Cambria\");\n        tb.setText(\"Helloworld \u00e9 \u00e8 \u00eb \u00ea \u00e0 \u00f6 \u00ef \u00ee \u00f4 \u00fc \u00fb\");\n        tb.moveTo(100, 100);\n        FileOutputStream fos = new FileOutputStream(\"bla.ppt\");\n        ppt.write(fos);\n        fos.close();\n        ppt.close();\n    }", "id": 186630, "time": "2015-11-29T01:37:48Z", "creator": "kiwiwings@apache.org", "creation_time": "2015-11-29T01:37:48Z", "is_private": false}]