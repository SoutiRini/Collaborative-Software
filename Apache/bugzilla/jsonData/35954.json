[{"count": 0, "tags": [], "creator": "iletisim5@bilgidata.com", "attachment_id": null, "id": 77879, "time": "2005-07-31T20:18:06Z", "bug_id": 35954, "creation_time": "2005-07-31T20:18:06Z", "is_private": false, "text": "Hi everyone,\n\nFor a load tests I was writing, I had to use a randomized variable, a value that\nwould be different for all concurrent threads under a thread group. Based on the\nCounterConfig.java code, I wrote this simple RandomizerConfig.java class, it is\nworking fine. I thought it could be useful for others, so I am sending a patch\nfile for the new feature. I hope I am adhering to protocols, it's my first\ncontribution! \n\nRegards, \n\n------------------ randomizer.patch ---------------------------------------\n\nIndex: src/core/org/apache/jmeter/resources/messages.properties\n===================================================================\nRCS file:\n/home/cvspublic/jakarta-jmeter/src/core/org/apache/jmeter/resources/messages.properties,v\nretrieving revision 1.154\ndiff -u -r1.154 messages.properties\n--- src/core/org/apache/jmeter/resources/messages.properties\t29 Jul 2005\n03:54:05 -0000\t1.154\n+++ src/core/org/apache/jmeter/resources/messages.properties\t31 Jul 2005\n17:57:15 -0000\n@@ -96,6 +96,7 @@\n corba_sample_title=CORBA Sampler\n counter_config_title=Counter\n counter_per_user=Track counter independently for each user\n+randomizer_config_title=Randomizer\n countlim=Size limit\n csvread_file_file_name=CSV file to get values from | *alias\n cut=Cut\nIndex: src/core/org/apache/jmeter/util/JMeterVersion.java\n===================================================================\nRCS file:\n/home/cvspublic/jakarta-jmeter/src/core/org/apache/jmeter/util/JMeterVersion.java,v\nretrieving revision 1.37\ndiff -u -r1.37 JMeterVersion.java\n--- src/core/org/apache/jmeter/util/JMeterVersion.java\t12 Jul 2005 20:50:44\n-0000\t1.37\n+++ src/core/org/apache/jmeter/util/JMeterVersion.java\t31 Jul 2005 17:57:18 -0000\n@@ -41,7 +41,7 @@\n \t * JMeterUtils This ensures that JMeterUtils always gets the correct\n \t * version, even if it is not re-compiled during the build.\n \t */\n-\tprivate static final String VERSION = \"2.1.20050630\";\n+\tprivate static final String VERSION = \"2.1.20050731\";\n \n \tstatic final String COPYRIGHT = \"Copyright (c) 1998-2005 The Apache Software\nFoundation\";\n \n--- /dev/null\t2005-07-31 21:04:05.696976000 +0300\n+++ ./src/components/org/apache/jmeter/modifiers/RandomizerConfig.java\n2005-07-31 20:52:18.000000000 +0300\n@@ -0,0 +1,71 @@\n+/*\n+ * Copyright 2002-2004 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ * \n+ */\n+\n+package org.apache.jmeter.modifiers;\n+\n+import java.io.Serializable;\n+\n+import org.apache.jmeter.engine.event.LoopIterationEvent;\n+import org.apache.jmeter.engine.event.LoopIterationListener;\n+import org.apache.jmeter.engine.util.NoThreadClone;\n+import org.apache.jmeter.testelement.AbstractTestElement;\n+import org.apache.jmeter.testelement.property.BooleanProperty;\n+import org.apache.jmeter.testelement.property.IntegerProperty;\n+import org.apache.jmeter.threads.JMeterContextService;\n+import org.apache.jmeter.threads.JMeterVariables;\n+import org.apache.jorphan.logging.LoggingManager;\n+import org.apache.log.Logger;\n+import java.util.Random;\n+\n+public class RandomizerConfig extends AbstractTestElement implements\nSerializable, LoopIterationListener, NoThreadClone {\n+\tprivate static Logger log = LoggingManager.getLoggerForClass();\n+\n+\tpublic final static String INCREMENT = \"RandomizerConfig.incr\";\n+\n+\tpublic final static String VAR_NAME = \"RandomizerConfig.name\";\n+\n+    private Random random = new Random();\n+    \n+\t/**\n+\t * @see LoopIterationListener#iterationStart(LoopIterationEvent)\n+\t */\n+\tpublic synchronized void iterationStart(LoopIterationEvent event) {\n+\t\tJMeterVariables variables = JMeterContextService.getContext().getVariables();\n+\t\tint increment = getIncrement();        \n+        int current = random.nextInt(increment);\n+        variables.put(getVarName(), Integer.toString(current));\n+\t}\n+\n+\tpublic void setIncrement(int inc) {\n+\t\tsetProperty(new IntegerProperty(INCREMENT, inc));\n+\t}\n+\n+\tpublic void setIncrement(String incr) {\n+\t\tsetProperty(INCREMENT, incr);\n+\t}\n+\n+\tpublic int getIncrement() {\n+\t\treturn getPropertyAsInt(INCREMENT);\n+\t}\n+\tpublic void setVarName(String name) {\n+\t\tsetProperty(VAR_NAME, name);\n+\t}\n+\n+\tpublic String getVarName() {\n+\t\treturn getPropertyAsString(VAR_NAME);\n+\t}\n+}\n--- /dev/null\t2005-07-31 21:04:19.256473600 +0300\n+++ ./src/components/org/apache/jmeter/modifiers/gui/RandomizerConfigGui.java\n2005-07-31 20:52:32.000000000 +0300\n@@ -0,0 +1,83 @@\n+/*\n+ * Copyright 2002-2004 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ * \n+ */\n+\n+package org.apache.jmeter.modifiers.gui;\n+\n+import javax.swing.JCheckBox;\n+\n+import org.apache.jmeter.modifiers.RandomizerConfig;\n+import org.apache.jmeter.processor.gui.AbstractPreProcessorGui;\n+import org.apache.jmeter.testelement.TestElement;\n+import org.apache.jmeter.util.JMeterUtils;\n+import org.apache.jorphan.gui.JLabeledTextField;\n+import org.apache.jorphan.gui.layout.VerticalLayout;\n+\n+public class RandomizerConfigGui extends AbstractPreProcessorGui {\n+\tprivate JLabeledTextField incrField, varNameField;\n+\n+\tprivate JCheckBox perUserField;\n+\n+\tpublic RandomizerConfigGui() {\n+\t\tsuper();\n+\t\tinit();\n+\t}\n+\n+\tpublic String getLabelResource() {\n+\t\treturn \"randomizer_config_title\";\n+\t}\n+\n+\t/**\n+\t * @see org.apache.jmeter.gui.JMeterGUIComponent#createTestElement()\n+\t */\n+\tpublic TestElement createTestElement() {\n+\t\tRandomizerConfig config = new RandomizerConfig();\n+\t\tmodifyTestElement(config);\n+\t\treturn config;\n+\t}\n+\n+\t/**\n+\t * Modifies a given TestElement to mirror the data in the gui components.\n+\t * \n+\t * @see org.apache.jmeter.gui.JMeterGUIComponent#modifyTestElement(TestElement)\n+\t */\n+\tpublic void modifyTestElement(TestElement c) {\n+\t\tif (c instanceof RandomizerConfig) {\n+\t\t\tRandomizerConfig config = (RandomizerConfig) c;\n+\t\t\tconfig.setIncrement(incrField.getText());\n+\t\t\tconfig.setVarName(varNameField.getText());\n+\t\t}\n+\t\tsuper.configureTestElement(c);\n+\t}\n+\n+\tpublic void configure(TestElement element) {\n+\t\tsuper.configure(element);\n+\t\tRandomizerConfig config = (RandomizerConfig) element;\n+\t\tincrField.setText(config.getPropertyAsString(RandomizerConfig.INCREMENT));\n+\t\tvarNameField.setText(config.getVarName());\n+\t}\n+\n+\tprivate void init() {\n+\t\tsetBorder(makeBorder());\n+\t\tsetLayout(new VerticalLayout(5, VerticalLayout.LEFT));\n+\t\tincrField = new JLabeledTextField(JMeterUtils.getResString(\"increment\"));\n+\t\tvarNameField = new JLabeledTextField(JMeterUtils.getResString(\"var_name\"));\n+\n+\t\tadd(makeTitlePanel());\n+\t\tadd(incrField);\n+\t\tadd(varNameField);\n+\t}\n+}"}, {"count": 1, "tags": [], "bug_id": 35954, "attachment_id": 15834, "id": 77880, "time": "2005-07-31T20:21:23Z", "creator": "iletisim5@bilgidata.com", "creation_time": "2005-07-31T20:21:23Z", "is_private": false, "text": "Created attachment 15834\nRandomizer Patch\n\nI just realized I could add the patch file as attachment. \n\nAlso: Randomizer is a preprocessor, just like counter, if added under a thread\ngroup it will generate new random values for a variable name."}, {"count": 2, "tags": [], "bug_id": 35954, "attachment_id": null, "text": "A related Random Variable Config Element has been added in versions of JMeter after 2.3.2", "id": 126912, "time": "2009-05-10T07:33:51Z", "creator": "sebb@apache.org", "creation_time": "2009-05-10T07:33:51Z", "is_private": false}, {"count": 3, "tags": [], "creator": "sebb@apache.org", "attachment_id": null, "id": 126913, "time": "2009-05-10T07:35:25Z", "bug_id": 35954, "creation_time": "2009-05-10T07:35:25Z", "is_private": false, "text": "Sorry your earlier contribution was overlooked."}]