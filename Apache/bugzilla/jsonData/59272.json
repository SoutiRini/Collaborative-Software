[{"count": 0, "tags": [], "text": "For reference, see Bug 41270 for Apache - \"TCP_DEFER_ACCEPT timeout set way too low\"[1].\n\nThe TCP_DEFER_ACCEPT option in APR is treated effectively as a toggle, rather than a timeout, similar to the Apache issue referenced above. Setting a value of \"1\" effectively tells the kernel to drop sockets if no data is received for a few seconds (not 1 second due to synack_retries). On Linux, this socket option specified a timeout value.\n\nFrom the tcp(7) manpage for Linux:\n\n  TCP_DEFER_ACCEPT (since Linux 2.4)\n    Allow  a  listener  to  be awakened only when data arrives on the socket.\n    Takes an integer value (seconds), this can bound the maximum number of\n    attempts TCP will make to complete the connection. This option should not be\n    used  in code intended to be portable.\n\nIn Apache, the value was changed to 30 (seconds) since 2.2.28 and 2.4.x, as a value of 1 can pose issues with load balancers. Although one can clearly turn off this option (deferAccept in Tomcat when using libapr, for example), because it is enabled by default when supported, APR should use a more sensible default value - ideally the same as Apache.\n\nSee the Apache bug for additional details, and notes how behavior for Linux is different than BSD.\n\nRelevant code is around line 210 in network_io/unix/sockopt.c.\n\n[1] https://bz.apache.org/bugzilla/show_bug.cgi?id=41270", "attachment_id": null, "id": 189941, "creator": "lscotte@gmail.com", "time": "2016-04-04T19:16:57Z", "bug_id": 59272, "creation_time": "2016-04-04T19:16:57Z", "is_private": false}]