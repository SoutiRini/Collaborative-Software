[{"count": 0, "tags": [], "bug_id": 52227, "attachment_id": 27974, "id": 151717, "time": "2011-11-22T12:41:13Z", "creator": "tgkprog@gmail.com", "creation_time": "2011-11-22T12:41:13Z", "is_private": false, "text": "Created attachment 27974\ntest build file, sample jar and class\n\nnot sure if this is a windows issue.\n\nif my build folder is d:/prog/j/anttestManifestClasspath\n\nbut the final run folder is d:/run/anttestManifestClasspath\n\ni run ant from the build folder with a manifestclasspath task and jar task with manifest that uses the classpath created here, the relative folders are not to final jar file in d:/run/anttest but to my build folder.\n\nI think its a bug as the full path to the final jar is given to manifestclasspath task so the paths should be relative to that.\n\nWould suggest the documentation reflect this if its as expected.\n\nWorkaround exists - call another build file from the main file and keep that build file's base dir as the run folder\n\nImportant when the build file is old and has relative paths to it so we cant change from where the build is started nor can we change the base dir"}, {"count": 1, "tags": [], "bug_id": 52227, "attachment_id": null, "id": 151718, "time": "2011-11-22T12:45:12Z", "creator": "tgkprog@gmail.com", "creation_time": "2011-11-22T12:45:12Z", "is_private": false, "text": "see http://mail-archives.apache.org/mod_mbox/ant-dev/201111.mbox/%3C87ty6ntwab.fsf%40v35516.1blu.de%3E"}, {"attachment_id": null, "tags": [], "bug_id": 52227, "is_private": false, "count": 2, "id": 151919, "time": "2011-12-02T16:06:33Z", "creator": "bodewig@apache.org", "creation_time": "2011-12-02T16:06:33Z", "text": "OK, I unzipped your attachment on my Desktop (Windows7) and ran \"ant\" inside the unzpped dir (after creating the directory c:\\run\\anttestManifestClasspath directory).\n\nThis is what I get:\n\nBuildfile: C:\\Users\\stefan.bodewig\\Desktop\\ant-test-manifest-cp\\build.xml\n\nclasspath-make:\n     [echo] Start classpath:\n     [echo] ../../Users/stefan.bodewig/Desktop/ant-test-manifest-cp/lib/log4j.jar\n     [echo] end\n     [echo] file :/run/anttestManifestClasspath/a-classpath3.jar\n      [jar] Building MANIFEST-only jar: C:\\run\\anttestManifestClasspath\\a-classpath3.jar\n     [echo] Jar done\n\nBUILD SUCCESSFUL\nTotal time: 0 seconds\n\nThis looks as expected to me.  The path is relative to the jar and certainly not relative to my build directory.\n\nThis is as it should be, isn't it?"}, {"count": 3, "attachment_id": null, "bug_id": 52227, "is_private": false, "id": 151929, "time": "2011-12-02T21:01:49Z", "creator": "tgkprog@gmail.com", "creation_time": "2011-12-02T21:01:49Z", "tags": [], "text": "lasspath-make:\n    [echo] Start classpath:\n    [echo]\n../../Users/stefan.bodewig/Desktop/ant-test-manifest-cp/lib/log4j.jar\n    [echo] end\n    [echo] file :/run/anttestManifestClasspath/a-classpath3.jar\n     [jar] Building MANIFEST-only jar:\nC:\\run\\anttestManifestClasspath\\a-classpath3.jar\n    [echo] Jar done\n\nBUILD SUCCESSFUL\n\nthe path in the manifest is printed after  [echo] Start classpath:\n\n../../Users/stefan.bodewig/Desktop/ant-test-manifest-cp/lib/log4j.jar\n    [echo] end\n\nThis is your build path.\n\nexpected is lib/log4j.jar\n\nat run time there will be no dir sers/stefan.bodewig/Desktop/ant-test-manifest-cp/lib/\n\nThe app & this classpath jar will be at \n\nd:/run/anttestManifestClasspath/a-classpath3.jar\n\nthe lib dir will be \nd:/run/anttestManifestClasspath/lib\n\nso a relative path from d:/run/anttestManifestClasspath/a-classpath3.jar to \nd:/run/anttestManifestClasspath/lib/log4j.jar will be:-\n\n    [echo] Start classpath:\n    [echo]\n      lib/log4j.jar\n    [echo] end\n\nif you run the build process from d:\\run\\anttestManifestClasspath\\\n\nor simple change the \nbasedir=\"\"\nto \nbasedir=\"d:/run/anttestManifestClasspath/\"\nyou will get expected output \n\nNote on windows when giving a path to java can give d:/run/anttestManifestClasspath/ or d:\\run\\anttestManifestClasspath\\\n\nonly need to use \\ before invoking jvm so have used both slashes ...."}, {"count": 4, "tags": [], "bug_id": 52227, "text": "You are misreading the manual then.\n\nIf you say <pathelement path=\"lib/log4j.jar\" /> then this will be a path\nrelative to your project's basedir - it points to the jar inside your\nbuild directory.\n\n<manifestclasspath> calculates the path of this file relative to the\njar you specify in the task's jarfile attribute.  Of course it is the\nlog4j.jar file in your build directory, you told it to use that.\n\n<manifestclasspath> only works if the things you put into the classpath\nalready are reachable using the same relative paths to the specified jarfile\nas they will be when deployed.  In your case this is not true.\n\nIt would work if you set the jarfile attribute to a-classpath3.jar without any\nleading path so it is assumed to the top level of your build directory\nand lib/log4j.jar is the relative path from there.\n\nThe reason it works when you invoke things via <ant> from a build file\nin your destination directory is the way basedir is reset when using <ant>.", "id": 151933, "time": "2011-12-03T07:00:10Z", "creator": "bodewig@apache.org", "creation_time": "2011-12-03T07:00:10Z", "is_private": false, "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 52227, "is_private": false, "count": 5, "id": 151944, "time": "2011-12-03T21:19:31Z", "creator": "tgkprog@gmail.com", "creation_time": "2011-12-03T21:19:31Z", "text": "had a look at the old script that I made for work ...\ni had given the full path to the jars that were to go in to the manifest class path but not to the class-path-jar when i tried this with a real example.\n\nin this sample the mistake was the non full path to the lib jar\n\nso only thing that would be good to add to docs :\nenter full path when we defining jarfile in manifestclasspath as paths in manifest are relative to that."}]