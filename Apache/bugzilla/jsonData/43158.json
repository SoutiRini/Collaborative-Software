[{"count": 0, "attachment_id": null, "bug_id": 43158, "is_private": false, "id": 106865, "time": "2007-08-17T10:13:01Z", "creator": "isurues@gmail.com", "creation_time": "2007-08-17T10:13:01Z", "tags": [], "text": "In Chainsaw's Receivers Panel, the receiver configurations can't be changed at\nruntime. It only shows the configurations of the currently selected Receiver.\nModifications to the table cells don't update the relevant properties of the\nreceivers. This is something which is not still implemented. But it is really\nuseful to change configurations at runtime when it comes to properties like\n'filterExpression' and 'tailing'. And also there are some more areas in\nReceivers Panel, which should be improved."}, {"count": 1, "attachment_id": 20675, "bug_id": 43158, "text": "Created attachment 20675\nImplementing ability to change receiver configurations at run time\n\nIn this patch I have implemented the ability to change properties which are\nrelevant to 'LogFilePatternReceiver' type receivers, at runtime. Those\nproperties include 'filterExpression', 'tailing', 'name', 'logFormat',\n'timestampFormat' and some others. There are some other properties which are\nrelevant to other types of receivers. Those can be implemented in the same way\nlater.\nHere I have a problem of accessing the correct log panel name which is relevant\nto the currently selected receiver. In the method I used here, a\npropertyChanged event is fired when the table is updated and it is handled at\nthe LogUI class to update the filter. But I'm not quite sure how to get the\ncorrect log panel name which is relevant to the receiver which fired\npropertyChanged event, to set the new filter expression. So for the time being,\nI have set the new filter to the currently selected log panel and this should\nbe fixed. According to this, the proper log panel should be selected before\nchanging the 'filterExpression' property.\nAny comments on how to fix this???....", "id": 106868, "time": "2007-08-17T10:40:30Z", "creator": "isurues@gmail.com", "creation_time": "2007-08-17T10:40:30Z", "tags": [], "is_private": false}, {"count": 2, "tags": [], "creator": "sdeboy@iname.com", "attachment_id": null, "is_private": false, "id": 106869, "time": "2007-08-17T11:30:44Z", "bug_id": 43158, "creation_time": "2007-08-17T11:30:44Z", "text": "I think there's one point of confusion: in LogFilePattenrReceiver,\nfilterExpression doesn't relate to the 'refine focus' field in logpanel - it\nfilters events that should be processed by Chainsaw.\n\nI don't think you need to do anything to a specific logpanel.\n\nReceivers aren't tied to log panels - for example, you can define a 'custom\nexpression logpanel' which will result in events going to 2 log panels at the\nsame time.\n\nBy the way, you could use reflection instead of instanceof and casting, since\nthe receivers have BeanInfo classes.\n"}, {"count": 3, "tags": [], "creator": "isurues@gmail.com", "attachment_id": null, "text": "(In reply to comment #2)\n\n> I think there's one point of confusion: in LogFilePattenrReceiver,\n> filterExpression doesn't relate to the 'refine focus' field in logpanel - it\n> filters events that should be processed by Chainsaw.\nOk. then we don't have to make the log panels aware of the changes for the\nreceivers panel. Thanks for correcting me..\n> \n> I don't think you need to do anything to a specific logpanel.\n> \n> Receivers aren't tied to log panels - for example, you can define a 'custom\n> expression logpanel' which will result in events going to 2 log panels at the\n> same time.\nI didn't realize this fact before as I haven't work with this custom expression\nlog panels.\nSo we can handle all the property changes at ReceiverPanel level without coming\nto LogUI..\n> \n> By the way, you could use reflection instead of instanceof and casting, since\n> the receivers have BeanInfo classes.\nOk. I'll change it and submit a new patch..\n> \n\nIn addition to this, can you add some comments about saving the receiver\nconfigurations and loading them back? can we handle this within the\nPluginPropertyEditorPanel??..\n\n\n", "id": 106881, "time": "2007-08-17T20:27:03Z", "bug_id": 43158, "creation_time": "2007-08-17T20:27:03Z", "is_private": false}, {"count": 4, "tags": [], "creator": "sdeboy@iname.com", "is_private": false, "text": "Loading a receiver configuration file from inside Chainsaw will be very useful.\n\nOn the receiver configuration creation side, we need to generate a log4j xml\nconfig file with each receiver serialized as a 'plugin' node with 'param'\nchildren elements representing the receiver's properties.\n\nChainsaw does have a dependency on XStream, so you could use its APIs if you'd\nlike to build the xml configuration file, or you could do it by hand.", "id": 106882, "time": "2007-08-17T21:24:43Z", "bug_id": 43158, "creation_time": "2007-08-17T21:24:43Z", "attachment_id": null}, {"count": 5, "tags": [], "creator": "isurues@gmail.com", "attachment_id": null, "text": "Ooops...... I think what I was trying to do is already done through \nPropertyDescryptors. It updates the configurations of the receivers. I didn't \nconcentrate on those PropertyDescryptors and thought that this functionality \nis not working. So please omit the previous patch (which I have made obsolete) \nand it's not going to add any new functionality.\n", "id": 106883, "time": "2007-08-18T02:03:43Z", "bug_id": 43158, "creation_time": "2007-08-18T02:03:43Z", "is_private": false}, {"count": 6, "tags": [], "text": "What isn't there currently is the ability to save the changes back to the xml\nconfig file and load a new one.", "is_private": false, "bug_id": 43158, "id": 106886, "time": "2007-08-18T07:34:52Z", "creator": "sdeboy@iname.com", "creation_time": "2007-08-18T07:34:52Z", "attachment_id": null}, {"count": 7, "tags": [], "creator": "isurues@gmail.com", "text": "Created attachment 20677\nAdding ability to save receiver configs within Chainsaw\n\nIn this patch I have implemented the ability to save receiver configurations to\na log4j XML file from within Chainsaw. At the shutdown time, all the current\nreceivers are written into a configuration file. I have added a new option to\nthe NoReceiversWarningPanel such that the saved configuration file can be\nloaded and all the saved receivers are restarted.\nI have used the org.w3c.dom API (because otherwise there is no way to write the\nconfiguration file in the required format) to build the log4j XML configuration\nfile and this functionality is added as a method in ReceiversPanel. The file is\nsaved in .chainsaw directory and it is loaded when the user selects the option\nto load it at next Chainsaw startup.\nStill there may be some improvements to be done. Check this and add your\ncomments..", "id": 106894, "time": "2007-08-19T03:11:18Z", "bug_id": 43158, "creation_time": "2007-08-19T03:11:18Z", "is_private": false, "attachment_id": 20677}, {"count": 8, "tags": [], "bug_id": 43158, "text": "Some comments:\n\n1) If there has been no previously saved XML file with the plugins defined, the\nradio button in the No Receiver panel should be greyed out.  It's of no use\nuntil you have saved at least once. \n\n2) Rather than LogUI call the receiverPanels save config method, shouldn't the\nReceiverPanel implement the SettingsListener interface and have LogUI register\nit as a listener?  That would appear cleaner IMHO.\n\n3) In the try block when saving, the error log does not include the exception. \nUnfortunately since this method is also called during exit of the process, you\nnever see the problem.  I wonder if the (*gasp*) Exception.printStackTrace()\nshould be used instead?  I'm actually having trouble getting it to save\nanything, I don't see any receiver-configs.xml file in the .chainsaw directory?\n I added a local e.printStackTrace() and see this:\n\njava.lang.ClassCastException: org.apache.log4j.chainsaw.zeroconf.ZeroConfPlugin\n        at\norg.apache.log4j.chainsaw.receivers.ReceiversPanel.saveReceiverConfigurations(ReceiversPanel.java:596)\n        at org.apache.log4j.chainsaw.LogUI.exit(LogUI.java:1418)\n        at\norg.apache.log4j.chainsaw.osx.OSXIntegration$1.invoke(OSXIntegration.java:57)\n        at $Proxy0.handleQuit(Unknown Source)\n        at com.apple.eawt.Application$6.run(Application.java:396)\n        at java.awt.event.InvocationEvent.dispatch(InvocationEvent.java:209)\n        at java.awt.EventQueue.dispatchEvent(EventQueue.java:461)\n        at\njava.awt.EventDispatchThread.pumpOneEventForHierarchy(EventDispatchThread.java:269)\n        at\njava.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:190)\n        at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:184)\n        at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:176)\n        at java.awt.EventDispatchThread.run(EventDispatchThread.java:110)\n\nYou're casting all Plugins to the Receivers class type, but that's a big\nassumption.  Not every Plugin registered is a Receiver.", "id": 106951, "time": "2007-08-20T18:12:35Z", "creator": "psmith@apache.org", "creation_time": "2007-08-20T18:12:35Z", "is_private": false, "attachment_id": null}, {"count": 9, "tags": [], "creator": "isurues@gmail.com", "attachment_id": 20687, "is_private": false, "id": 107006, "time": "2007-08-21T21:22:46Z", "bug_id": 43158, "creation_time": "2007-08-21T21:22:46Z", "text": "Created attachment 20687\nSaving receiver configs - modified patch\n\nThis patch contains all the modifications proposed by paul...."}, {"count": 10, "tags": [], "bug_id": 43158, "text": "(In reply to comment #8)\n> Some comments:\n> \n> 1) If there has been no previously saved XML file with the plugins defined, the\n> radio button in the No Receiver panel should be greyed out.  It's of no use\n> until you have saved at least once. \nyes. it's nice to have that. this is implemented in the new patch\n> \n> 2) Rather than LogUI call the receiverPanels save config method, shouldn't the\n> ReceiverPanel implement the SettingsListener interface and have LogUI register\n> it as a listener?  That would appear cleaner IMHO.\nInitially i didn't use it as there's nothing to load in ReceiversPanel. But yes\nit is nice to do it in the standard way. Fixed in the new patch.\n> \n> 3) In the try block when saving, the error log does not include the exception. \n> Unfortunately since this method is also called during exit of the process, you\n> never see the problem.  I wonder if the (*gasp*) Exception.printStackTrace()\n> should be used instead?  I'm actually having trouble getting it to save\nAdded a e.printStackTrace()\n> anything, I don't see any receiver-configs.xml file in the .chainsaw directory?\n>  I added a local e.printStackTrace() and see this:\n> \n> java.lang.ClassCastException: org.apache.log4j.chainsaw.zeroconf.ZeroConfPlugin\n>         at\n>\norg.apache.log4j.chainsaw.receivers.ReceiversPanel.saveReceiverConfigurations(ReceiversPanel.java:596)\n>         at org.apache.log4j.chainsaw.LogUI.exit(LogUI.java:1418)\n>         at\n> org.apache.log4j.chainsaw.osx.OSXIntegration$1.invoke(OSXIntegration.java:57)\n>         at $Proxy0.handleQuit(Unknown Source)\n>         at com.apple.eawt.Application$6.run(Application.java:396)\n>         at java.awt.event.InvocationEvent.dispatch(InvocationEvent.java:209)\n>         at java.awt.EventQueue.dispatchEvent(EventQueue.java:461)\n>         at\n>\njava.awt.EventDispatchThread.pumpOneEventForHierarchy(EventDispatchThread.java:269)\n>         at\n> java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:190)\n>         at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:184)\n>         at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:176)\n>         at java.awt.EventDispatchThread.run(EventDispatchThread.java:110)\n> \n> You're casting all Plugins to the Receivers class type, but that's a big\n> assumption.  Not every Plugin registered is a Receiver.\nSorry about this, I just forgot the ZeroConf. Anyway I think we have to save\nonly the receivers. Used an instanceof and fixed it in the new patch..\n\n", "id": 107007, "time": "2007-08-21T21:27:32Z", "creator": "isurues@gmail.com", "creation_time": "2007-08-21T21:27:32Z", "is_private": false, "attachment_id": null}, {"count": 11, "tags": [], "creator": "psmith@apache.org", "attachment_id": null, "text": "Fixed in 568852 THX.", "id": 107129, "time": "2007-08-23T00:11:14Z", "bug_id": 43158, "creation_time": "2007-08-23T00:11:14Z", "is_private": false}]