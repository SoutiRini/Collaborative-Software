[{"count": 0, "tags": [], "bug_id": 59253, "attachment_id": null, "text": "Environment \nLinux:     GNU/Linux 3.13.0-83-generic x86_64\nJava:      build 1.8.0_77-b03 Oracle\nTomcat:    Tomcat 8.0.33\nFramework: Vaadin 7.6.4\nAPR:       Apache Tomcat Native library 1.2.5 using APR version 1.5.2\nConnector:\n    <Connector port=\"28080\" protocol=\"HTTP/1.1\"\n               connectionTimeout=\"20000\"\n               compression=\"on\"\n               compressionMinSize=\"512\"\n               compressableMimeType=\"text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json,image/svg+xml\" />\n\n\nDescription: The following stack traces are generated.  There are no user complaints - I suspect these are generated when the UI closes.  While bug 59014 has eliminated a large number of similar stack traces, these persist.  Same problem in another location?  I lack the skill for further analysis.\n\n\nMar 30, 2016 8:28:01 AM org.atmosphere.container.JSR356Endpoint onError\nSEVERE: \njava.io.IOException: Unexpected error [32] writing data to the APR/native socket [139,838,766,510,368] with wrapper [org.apache.tomcat.util.net.AprEndpoint$AprSocketWrapper@234a04d6:139838766510368].\n\tat org.apache.coyote.http11.upgrade.AprServletOutputStream.doWriteInternal(AprServletOutputStream.java:142)\n\tat org.apache.coyote.http11.upgrade.AprServletOutputStream.doWrite(AprServletOutputStream.java:68)\n\tat org.apache.coyote.http11.upgrade.AbstractServletOutputStream.writeInternal(AbstractServletOutputStream.java:165)\n\tat org.apache.coyote.http11.upgrade.AbstractServletOutputStream.write(AbstractServletOutputStream.java:132)\n\tat org.apache.tomcat.websocket.server.WsRemoteEndpointImplServer.onWritePossible(WsRemoteEndpointImplServer.java:98)\n\tat org.apache.tomcat.websocket.server.WsRemoteEndpointImplServer.doWrite(WsRemoteEndpointImplServer.java:79)\n\tat org.apache.tomcat.websocket.WsRemoteEndpointImplBase.writeMessagePart(WsRemoteEndpointImplBase.java:453)\n\tat org.apache.tomcat.websocket.WsRemoteEndpointImplBase.startMessage(WsRemoteEndpointImplBase.java:341)\n\tat org.apache.tomcat.websocket.WsRemoteEndpointImplBase.startMessageBlock(WsRemoteEndpointImplBase.java:273)\n\tat org.apache.tomcat.websocket.WsSession.sendCloseMessage(WsSession.java:587)\n\tat org.apache.tomcat.websocket.WsSession.doClose(WsSession.java:489)\n\tat org.apache.tomcat.websocket.server.WsHttpUpgradeHandler.onError(WsHttpUpgradeHandler.java:150)\n\tat org.apache.tomcat.websocket.server.WsHttpUpgradeHandler.access$300(WsHttpUpgradeHandler.java:48)\n\tat org.apache.tomcat.websocket.server.WsHttpUpgradeHandler$WsReadListener.onError(WsHttpUpgradeHandler.java:211)\n\tat org.apache.tomcat.websocket.server.WsHttpUpgradeHandler$WsReadListener.onDataAvailable(WsHttpUpgradeHandler.java:194)\n\tat org.apache.coyote.http11.upgrade.AbstractServletInputStream.onDataAvailable(AbstractServletInputStream.java:198)\n\tat org.apache.coyote.http11.upgrade.AbstractProcessor.upgradeDispatch(AbstractProcessor.java:96)\n\tat org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:647)\n\tat org.apache.tomcat.util.net.AprEndpoint$SocketProcessor.doRun(AprEndpoint.java:2500)\n\tat org.apache.tomcat.util.net.AprEndpoint$SocketProcessor.run(AprEndpoint.java:2489)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\n\tat java.lang.Thread.run(Thread.java:745)\n\nMar 30, 2016 8:28:01 AM org.atmosphere.container.JSR356Endpoint onError\nSEVERE: \njava.io.IOException: Unexpected error [104] reading data from the APR/native socket [139,838,766,510,368] with wrapper [org.apache.tomcat.util.net.AprEndpoint$AprSocketWrapper@234a04d6:139838766510368].\n\tat org.apache.coyote.http11.upgrade.AprServletInputStream.doRead(AprServletInputStream.java:133)\n\tat org.apache.coyote.http11.upgrade.AbstractServletInputStream.read(AbstractServletInputStream.java:124)\n\tat org.apache.tomcat.websocket.server.WsFrameServer.onDataAvailable(WsFrameServer.java:60)\n\tat org.apache.tomcat.websocket.server.WsHttpUpgradeHandler$WsReadListener.onDataAvailable(WsHttpUpgradeHandler.java:186)\n\tat org.apache.coyote.http11.upgrade.AbstractServletInputStream.onDataAvailable(AbstractServletInputStream.java:198)\n\tat org.apache.coyote.http11.upgrade.AbstractProcessor.upgradeDispatch(AbstractProcessor.java:96)\n\tat org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:647)\n\tat org.apache.tomcat.util.net.AprEndpoint$SocketProcessor.doRun(AprEndpoint.java:2500)\n\tat org.apache.tomcat.util.net.AprEndpoint$SocketProcessor.run(AprEndpoint.java:2489)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\n\tat java.lang.Thread.run(Thread.java:745)\n\nMar 30, 2016 8:28:33 AM org.atmosphere.container.JSR356Endpoint onError\nSEVERE: \njava.io.IOException: Unexpected error [32] writing data to the APR/native socket [139,838,766,626,368] with wrapper [org.apache.tomcat.util.net.AprEndpoint$AprSocketWrapper@1fffe750:139838766626368].\n\tat org.apache.coyote.http11.upgrade.AprServletOutputStream.doWriteInternal(AprServletOutputStream.java:142)\n\tat org.apache.coyote.http11.upgrade.AprServletOutputStream.doWrite(AprServletOutputStream.java:68)\n\tat org.apache.coyote.http11.upgrade.AbstractServletOutputStream.writeInternal(AbstractServletOutputStream.java:165)\n\tat org.apache.coyote.http11.upgrade.AbstractServletOutputStream.write(AbstractServletOutputStream.java:132)\n\tat org.apache.tomcat.websocket.server.WsRemoteEndpointImplServer.onWritePossible(WsRemoteEndpointImplServer.java:98)\n\tat org.apache.tomcat.websocket.server.WsRemoteEndpointImplServer.doWrite(WsRemoteEndpointImplServer.java:79)\n\tat org.apache.tomcat.websocket.WsRemoteEndpointImplBase.writeMessagePart(WsRemoteEndpointImplBase.java:453)\n\tat org.apache.tomcat.websocket.WsRemoteEndpointImplBase.startMessage(WsRemoteEndpointImplBase.java:341)\n\tat org.apache.tomcat.websocket.WsRemoteEndpointImplBase.startMessageBlock(WsRemoteEndpointImplBase.java:273)\n\tat org.apache.tomcat.websocket.WsSession.sendCloseMessage(WsSession.java:587)\n\tat org.apache.tomcat.websocket.WsSession.doClose(WsSession.java:489)\n\tat org.apache.tomcat.websocket.server.WsHttpUpgradeHandler.onError(WsHttpUpgradeHandler.java:150)\n\tat org.apache.tomcat.websocket.server.WsHttpUpgradeHandler.access$300(WsHttpUpgradeHandler.java:48)\n\tat org.apache.tomcat.websocket.server.WsHttpUpgradeHandler$WsReadListener.onError(WsHttpUpgradeHandler.java:211)\n\tat org.apache.tomcat.websocket.server.WsHttpUpgradeHandler$WsReadListener.onDataAvailable(WsHttpUpgradeHandler.java:194)\n\tat org.apache.coyote.http11.upgrade.AbstractServletInputStream.onDataAvailable(AbstractServletInputStream.java:198)\n\tat org.apache.coyote.http11.upgrade.AbstractProcessor.upgradeDispatch(AbstractProcessor.java:96)\n\tat org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:647)\n\tat org.apache.tomcat.util.net.AprEndpoint$SocketProcessor.doRun(AprEndpoint.java:2500)\n\tat org.apache.tomcat.util.net.AprEndpoint$SocketProcessor.run(AprEndpoint.java:2489)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\n\tat java.lang.Thread.run(Thread.java:745)\n\nMar 30, 2016 8:28:33 AM com.vaadin.server.communication.PushHandler connectionLost\nINFO: No UI was found based on data in the request, but a slower lookup based on the AtmosphereResource succeeded. See http://dev.vaadin.com/ticket/14251 for more details.\nMar 30, 2016 8:28:33 AM org.atmosphere.container.JSR356Endpoint onError\nSEVERE: \njava.io.IOException: Unexpected error [104] reading data from the APR/native socket [139,838,766,626,368] with wrapper [org.apache.tomcat.util.net.AprEndpoint$AprSocketWrapper@1fffe750:139838766626368].\n\tat org.apache.coyote.http11.upgrade.AprServletInputStream.doRead(AprServletInputStream.java:133)\n\tat org.apache.coyote.http11.upgrade.AbstractServletInputStream.read(AbstractServletInputStream.java:124)\n\tat org.apache.tomcat.websocket.server.WsFrameServer.onDataAvailable(WsFrameServer.java:60)\n\tat org.apache.tomcat.websocket.server.WsHttpUpgradeHandler$WsReadListener.onDataAvailable(WsHttpUpgradeHandler.java:186)\n\tat org.apache.coyote.http11.upgrade.AbstractServletInputStream.onDataAvailable(AbstractServletInputStream.java:198)\n\tat org.apache.coyote.http11.upgrade.AbstractProcessor.upgradeDispatch(AbstractProcessor.java:96)\n\tat org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:647)\n\tat org.apache.tomcat.util.net.AprEndpoint$SocketProcessor.doRun(AprEndpoint.java:2500)\n\tat org.apache.tomcat.util.net.AprEndpoint$SocketProcessor.run(AprEndpoint.java:2489)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\n\tat java.lang.Thread.run(Thread.java:745)\n\nMar 30, 2016 8:29:40 AM com.vaadin.server.communication.PushHandler connectionLost\nINFO: No UI was found based on data in the request, but a slower lookup based on the AtmosphereResource succeeded. See http://dev.vaadin.com/ticket/14251 for more details.\nMar 30, 2016 8:35:41 AM com.vaadin.server.GlobalResourceHandler error\nWARNING: Global resource legacy/6/WB_Graphic349204598_22.svg not found\nMar 30, 2016 9:05:06 AM org.atmosphere.container.JSR356Endpoint onError\nSEVERE: \njava.io.IOException: Unexpected error [32] writing data to the APR/native socket [139,838,766,510,368] with wrapper [org.apache.tomcat.util.net.AprEndpoint$AprSocketWrapper@17037e02:139838766510368].\n\tat org.apache.coyote.http11.upgrade.AprServletOutputStream.doWriteInternal(AprServletOutputStream.java:142)\n\tat org.apache.coyote.http11.upgrade.AprServletOutputStream.doWrite(AprServletOutputStream.java:68)\n\tat org.apache.coyote.http11.upgrade.AbstractServletOutputStream.writeInternal(AbstractServletOutputStream.java:165)\n\tat org.apache.coyote.http11.upgrade.AbstractServletOutputStream.write(AbstractServletOutputStream.java:132)\n\tat org.apache.tomcat.websocket.server.WsRemoteEndpointImplServer.onWritePossible(WsRemoteEndpointImplServer.java:98)\n\tat org.apache.tomcat.websocket.server.WsRemoteEndpointImplServer.doWrite(WsRemoteEndpointImplServer.java:79)\n\tat org.apache.tomcat.websocket.WsRemoteEndpointImplBase.writeMessagePart(WsRemoteEndpointImplBase.java:453)\n\tat org.apache.tomcat.websocket.WsRemoteEndpointImplBase.startMessage(WsRemoteEndpointImplBase.java:341)\n\tat org.apache.tomcat.websocket.WsRemoteEndpointImplBase.startMessageBlock(WsRemoteEndpointImplBase.java:273)\n\tat org.apache.tomcat.websocket.WsSession.sendCloseMessage(WsSession.java:587)\n\tat org.apache.tomcat.websocket.WsSession.doClose(WsSession.java:489)\n\tat org.apache.tomcat.websocket.server.WsHttpUpgradeHandler.onError(WsHttpUpgradeHandler.java:150)\n\tat org.apache.tomcat.websocket.server.WsHttpUpgradeHandler.access$300(WsHttpUpgradeHandler.java:48)\n\tat org.apache.tomcat.websocket.server.WsHttpUpgradeHandler$WsReadListener.onError(WsHttpUpgradeHandler.java:211)\n\tat org.apache.tomcat.websocket.server.WsHttpUpgradeHandler$WsReadListener.onDataAvailable(WsHttpUpgradeHandler.java:194)\n\tat org.apache.coyote.http11.upgrade.AbstractServletInputStream.onDataAvailable(AbstractServletInputStream.java:198)\n\tat org.apache.coyote.http11.upgrade.AbstractProcessor.upgradeDispatch(AbstractProcessor.java:96)\n\tat org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:647)\n\tat org.apache.tomcat.util.net.AprEndpoint$SocketProcessor.doRun(AprEndpoint.java:2500)\n\tat org.apache.tomcat.util.net.AprEndpoint$SocketProcessor.run(AprEndpoint.java:2489)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\n\tat java.lang.Thread.run(Thread.java:745)\n\nMar 30, 2016 9:05:06 AM com.vaadin.server.communication.PushHandler connectionLost\nINFO: No UI was found based on data in the request, but a slower lookup based on the AtmosphereResource succeeded. See http://dev.vaadin.com/ticket/14251 for more details.\nMar 30, 2016 9:05:06 AM org.atmosphere.container.JSR356Endpoint onError\nSEVERE: \njava.io.IOException: Unexpected error [113] reading data from the APR/native socket [139,838,766,510,368] with wrapper [org.apache.tomcat.util.net.AprEndpoint$AprSocketWrapper@17037e02:139838766510368].\n\tat org.apache.coyote.http11.upgrade.AprServletInputStream.doRead(AprServletInputStream.java:133)\n\tat org.apache.coyote.http11.upgrade.AbstractServletInputStream.read(AbstractServletInputStream.java:124)\n\tat org.apache.tomcat.websocket.server.WsFrameServer.onDataAvailable(WsFrameServer.java:60)\n\tat org.apache.tomcat.websocket.server.WsHttpUpgradeHandler$WsReadListener.onDataAvailable(WsHttpUpgradeHandler.java:186)\n\tat org.apache.coyote.http11.upgrade.AbstractServletInputStream.onDataAvailable(AbstractServletInputStream.java:198)\n\tat org.apache.coyote.http11.upgrade.AbstractProcessor.upgradeDispatch(AbstractProcessor.java:96)\n\tat org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:647)\n\tat org.apache.tomcat.util.net.AprEndpoint$SocketProcessor.doRun(AprEndpoint.java:2500)\n\tat org.apache.tomcat.util.net.AprEndpoint$SocketProcessor.run(AprEndpoint.java:2489)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\n\tat java.lang.Thread.run(Thread.java:745)\n\nMar 30, 2016 9:52:30 AM org.atmosphere.container.JSR356Endpoint onError\nSEVERE: \njava.io.IOException: Unexpected error [32] writing data to the APR/native socket [139,838,766,593,536] with wrapper [org.apache.tomcat.util.net.AprEndpoint$AprSocketWrapper@6ffa76fd:139838766593536].\n\tat org.apache.coyote.http11.upgrade.AprServletOutputStream.doWriteInternal(AprServletOutputStream.java:142)\n\tat org.apache.coyote.http11.upgrade.AprServletOutputStream.doWrite(AprServletOutputStream.java:68)\n\tat org.apache.coyote.http11.upgrade.AbstractServletOutputStream.writeInternal(AbstractServletOutputStream.java:165)\n\tat org.apache.coyote.http11.upgrade.AbstractServletOutputStream.write(AbstractServletOutputStream.java:132)\n\tat org.apache.tomcat.websocket.server.WsRemoteEndpointImplServer.onWritePossible(WsRemoteEndpointImplServer.java:98)\n\tat org.apache.tomcat.websocket.server.WsRemoteEndpointImplServer.doWrite(WsRemoteEndpointImplServer.java:79)\n\tat org.apache.tomcat.websocket.WsRemoteEndpointImplBase.writeMessagePart(WsRemoteEndpointImplBase.java:453)\n\tat org.apache.tomcat.websocket.WsRemoteEndpointImplBase.startMessage(WsRemoteEndpointImplBase.java:341)\n\tat org.apache.tomcat.websocket.WsRemoteEndpointImplBase.startMessageBlock(WsRemoteEndpointImplBase.java:273)\n\tat org.apache.tomcat.websocket.WsSession.sendCloseMessage(WsSession.java:587)\n\tat org.apache.tomcat.websocket.WsSession.doClose(WsSession.java:489)\n\tat org.apache.tomcat.websocket.server.WsHttpUpgradeHandler.onError(WsHttpUpgradeHandler.java:150)\n\tat org.apache.tomcat.websocket.server.WsHttpUpgradeHandler.access$300(WsHttpUpgradeHandler.java:48)\n\tat org.apache.tomcat.websocket.server.WsHttpUpgradeHandler$WsReadListener.onError(WsHttpUpgradeHandler.java:211)\n\tat org.apache.tomcat.websocket.server.WsHttpUpgradeHandler$WsReadListener.onDataAvailable(WsHttpUpgradeHandler.java:194)\n\tat org.apache.coyote.http11.upgrade.AbstractServletInputStream.onDataAvailable(AbstractServletInputStream.java:198)\n\tat org.apache.coyote.http11.upgrade.AbstractProcessor.upgradeDispatch(AbstractProcessor.java:96)\n\tat org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:647)\n\tat org.apache.tomcat.util.net.AprEndpoint$SocketProcessor.doRun(AprEndpoint.java:2500)\n\tat org.apache.tomcat.util.net.AprEndpoint$SocketProcessor.run(AprEndpoint.java:2489)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\n\tat java.lang.Thread.run(Thread.java:745)\n\nMar 30, 2016 9:52:30 AM com.vaadin.server.communication.PushHandler connectionLost\nINFO: No UI was found based on data in the request, but a slower lookup based on the AtmosphereResource succeeded. See http://dev.vaadin.com/ticket/14251 for more details.\nMar 30, 2016 9:52:30 AM org.atmosphere.container.JSR356Endpoint onError\nSEVERE: \njava.io.IOException: Unexpected error [113] reading data from the APR/native socket [139,838,766,593,536] with wrapper [org.apache.tomcat.util.net.AprEndpoint$AprSocketWrapper@6ffa76fd:139838766593536].\n\tat org.apache.coyote.http11.upgrade.AprServletInputStream.doRead(AprServletInputStream.java:133)\n\tat org.apache.coyote.http11.upgrade.AbstractServletInputStream.read(AbstractServletInputStream.java:124)\n\tat org.apache.tomcat.websocket.server.WsFrameServer.onDataAvailable(WsFrameServer.java:60)\n\tat org.apache.tomcat.websocket.server.WsHttpUpgradeHandler$WsReadListener.onDataAvailable(WsHttpUpgradeHandler.java:186)\n\tat org.apache.coyote.http11.upgrade.AbstractServletInputStream.onDataAvailable(AbstractServletInputStream.java:198)\n\tat org.apache.coyote.http11.upgrade.AbstractProcessor.upgradeDispatch(AbstractProcessor.java:96)\n\tat org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:647)\n\tat org.apache.tomcat.util.net.AprEndpoint$SocketProcessor.doRun(AprEndpoint.java:2500)\n\tat org.apache.tomcat.util.net.AprEndpoint$SocketProcessor.run(AprEndpoint.java:2489)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\n\tat java.lang.Thread.run(Thread.java:745)", "id": 189841, "time": "2016-03-30T18:21:12Z", "creator": "steve.demy@shaw.ca", "creation_time": "2016-03-30T18:21:12Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 59253, "attachment_id": null, "text": "Some IO errors are considered \"normal\" and will be returned as an EOF (= the code returns -1). But the APR error code has to match, and here the 32, 104 and 113 are not in that category so they get a more general IOException.\n\nI failed to find what these codes correspond to.", "id": 189872, "time": "2016-03-31T22:56:54Z", "creator": "remm@apache.org", "creation_time": "2016-03-31T22:56:54Z", "is_private": false}, {"count": 2, "tags": [], "creator": "jfclere@gmail.com", "attachment_id": null, "text": "32, 104 and 113 are errno on linux\n#define EPIPE       32  /* Broken pipe */\n#define ECONNRESET  104 /* Connection reset by peer */\n#define EHOSTUNREACH    113 /* No route to host */", "id": 189893, "time": "2016-04-01T15:46:53Z", "bug_id": 59253, "creation_time": "2016-04-01T15:46:53Z", "is_private": false}, {"count": 3, "tags": [], "creator": "remm@apache.org", "text": "The exception catch strategy is different in websockets (the servlet container is more complex and catches and routes all these exceptions). Nothing seems abnormal to me at this point, so it could be an enhancement.", "id": 189894, "time": "2016-04-01T16:21:13Z", "bug_id": 59253, "creation_time": "2016-04-01T16:21:13Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 59253, "attachment_id": null, "text": "(In reply to jfclere from comment #2)\n> 32, 104 and 113 are errno on linux\n> #define EPIPE       32  /* Broken pipe */\n> #define ECONNRESET  104 /* Connection reset by peer */\n> #define EHOSTUNREACH    113 /* No route to host */\n\nIf you are fortunate enough to have perror (binary) available, it will tell you that as well, including what kind of error code it is.\n\n$ perror 32 104 113\nOS error code  32:  Broken pipe\nOS error code 104:  Connection reset by peer\nOS error code 113:  No route to host\n\n(In reply to Remy Maucherat from comment #3)\n> The exception catch strategy is different in websockets (the servlet\n> container is more complex and catches and routes all these exceptions).\n> Nothing seems abnormal to me at this point, so it could be an enhancement.\n\n\"Broken pipe\" and \"Connection reset\" seem like normal \"client disappeared\" situations where handling it like EOF is probably just fine. That last one -- \"No route to host\" -- is a little weird. Does that happen when there is a network problem while trying to send bytes down an established channel? I've never seen that error during a conversation... only during an initial connection (attempt).", "id": 190061, "time": "2016-04-07T21:09:29Z", "creator": "chris@christopherschultz.net", "creation_time": "2016-04-07T21:09:29Z", "is_private": false}, {"count": 5, "tags": [], "creator": "steve.demy@shaw.ca", "text": "I believe the stack traces are generated from users connected by mobile devices (Vaadin Touchkit).  These users connect to the LAN using wi-fi and may possibly exit and re-enter areas of coverage or change zones within a coverage area. Many sessions don't generate any errors.  As far as I can tell from casual observation of past behaviour: 1)  Use of NIO or NIO2 connectors makes no difference - a corresponding error is produced, 2)  I tend to see the logs clean after a full system reboot, then errors increase over subsequent days.  The system is dedicated to this one webapp and its few supporting applications and is lightly loaded.  I use a cron script to restart Tomcat nightly in an effort to ensure that no memory leaks etc. accumulate.", "id": 190067, "time": "2016-04-08T10:37:20Z", "bug_id": 59253, "creation_time": "2016-04-08T10:37:20Z", "is_private": false, "attachment_id": null}, {"count": 6, "tags": [], "creator": "steve.demy@shaw.ca", "attachment_id": null, "text": "I believe the stack traces are generated from users connected by mobile devices (Vaadin Touchkit).  These users connect to the LAN using wi-fi and may possibly exit and re-enter areas of coverage or change zones within a coverage area. Many sessions don't generate any errors.\n\nNow I have found a way to repeatably reproduce a similar stack trace on my OSX development system which uses a NIO connector:  I log into a mobile UI using a Widows phone then push the \"back\" button (left arrow on bottom of phone) which quits the client browser and generates:\n\nApr 08, 2016 3:39:53 AM org.atmosphere.container.JSR356Endpoint onError\nSEVERE: \njava.io.IOException: Connection reset by peer\n\tat sun.nio.ch.FileDispatcherImpl.read0(Native Method)\n\tat sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:39)\n\tat sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)\n\tat sun.nio.ch.IOUtil.read(IOUtil.java:197)\n\tat sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)\n\tat org.apache.tomcat.util.net.NioChannel.read(NioChannel.java:137)\n\tat org.apache.coyote.http11.upgrade.NioServletInputStream.fillReadBuffer(NioServletInputStream.java:136)\n\tat org.apache.coyote.http11.upgrade.NioServletInputStream.doRead(NioServletInputStream.java:80)\n\tat org.apache.coyote.http11.upgrade.AbstractServletInputStream.read(AbstractServletInputStream.java:124)\n\tat org.apache.tomcat.websocket.server.WsFrameServer.onDataAvailable(WsFrameServer.java:60)\n\tat org.apache.tomcat.websocket.server.WsHttpUpgradeHandler$WsReadListener.onDataAvailable(WsHttpUpgradeHandler.java:186)\n\tat org.apache.coyote.http11.upgrade.AbstractServletInputStream.onDataAvailable(AbstractServletInputStream.java:198)\n\tat org.apache.coyote.http11.upgrade.AbstractProcessor.upgradeDispatch(AbstractProcessor.java:96)\n\tat org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:647)\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1502)\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1458)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\n\tat java.lang.Thread.run(Thread.java:745)\n\nAs said, there is no user impact - the quit appears to work as directed and logging on again is always successful.  This stack trace is of concern only in that it seems a little uncontrolled even for an unplanned disconnect and I wonder if any resources are leaked or hung.", "id": 190068, "time": "2016-04-08T10:57:49Z", "bug_id": 59253, "creation_time": "2016-04-08T10:57:49Z", "is_private": false}, {"count": 7, "attachment_id": null, "bug_id": 59253, "text": "Tomcat is correctly calling onError when something goes wrong. It appears from the stack traces that it is Atmosphere that is logging the stack traces, not Tomcat. While Tomcat could filter the calls to onError(), I don't think it should. The application may well wish to be informed of unexpected client disconnects.", "id": 191678, "time": "2016-06-15T14:01:35Z", "creator": "markt@apache.org", "creation_time": "2016-06-15T14:01:35Z", "tags": [], "is_private": false}]