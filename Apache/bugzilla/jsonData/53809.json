[{"count": 0, "tags": [], "bug_id": 53809, "attachment_id": null, "id": 161873, "time": "2012-08-31T21:01:14Z", "creator": "revilones@gmail.com", "creation_time": "2012-08-31T21:01:14Z", "is_private": false, "text": "Hello I am new to developing for apache and I have come across what may or may not be a bug.\n\nFrom what i can tell there is a flag in apr_socket_t that is set when the remote address is unknown however it is only set when it is created and then is cleared on apr_accept (specifically in network_io/unix/sockets.c). Then later on when creating the connection structure this field is checked and in the case that it is unknown a getpeername is performed. \n\nThe problem is that if the syscall accept happens to return back an empty ipaddr then it is never checked for. Therefore I am proposing that that a check is added in apr_accept right after the syscall that checks if the returning ip_addr is unspecified.\n\nI believe the following code would fix the matter. I don't know if anyone else has had any trouble with this but I came across the issue of having an unspecified remote_addr and found that this fixed my problem.\n\n\n    if (memcmp(sa.ipaddr_ptr, generic_inaddr_any, sa.ipaddr_len)) \n        (*new)->remote_addr_unknown = 0; \n    else \n        (*new)->remote_addr_unknown = 1;\n\n\nUnfortunately I am heading out on vacation all next week so I wont be back until next monday but I figured I would send this out now to see what you all think about it.\n\nThanks,\n\nRevilones"}, {"count": 1, "text": "How do you reproduce the issue of accept returning a file descriptor but not filling in the client address?  (I wonder if there are some other considerations.)\n\nThanks!", "creator": "trawick@apache.org", "attachment_id": null, "id": 174539, "time": "2014-04-13T20:49:23Z", "bug_id": 53809, "creation_time": "2014-04-13T20:49:23Z", "tags": [], "is_private": false}]