[{"count": 0, "attachment_id": null, "creator": "dario.bonino@rgi.it", "text": "########################################################################\nStartup Java Option added:\n-Djava.security.manager\n-Djava.security.policy=<TOMCAT_HOME>/conf/catalina.policy\n########################################################################\n\n\njava.security.AccessControlException: access denied (java.lang.RuntimePermission\naccessClassInPackage.org.apache.tomcat.dbcp.collections)\n\tat\njava.security.AccessControlContext.checkPermission(AccessControlContext.java:264)\n\tat java.security.AccessController.checkPermission(AccessController.java:427)\n\tat java.lang.SecurityManager.checkPermission(SecurityManager.java:532)\n\tat java.lang.SecurityManager.checkPackageAccess(SecurityManager.java:1512)\n\tat sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:265)\n\tat java.lang.ClassLoader.loadClass(ClassLoader.java:299)\n\tat java.lang.ClassLoader.loadClass(ClassLoader.java:251)\n\tat java.lang.ClassLoader.loadClassInternal(ClassLoader.java:319)\n\tat\norg.apache.tomcat.dbcp.pool.impl.GenericObjectPool.<init>(GenericObjectPool.java:392)\n\tat\norg.apache.tomcat.dbcp.pool.impl.GenericObjectPool.<init>(GenericObjectPool.java:258)\n\tat\norg.apache.tomcat.dbcp.dbcp.BasicDataSource.createDataSource(BasicDataSource.java:795)\n\tat\norg.apache.tomcat.dbcp.dbcp.BasicDataSource.getConnection(BasicDataSource.java:540)\n\tat it.rgi.webapp.dbms.jdbc.DataSourcePool.get(DataSourcePool.java:123)\n\tat\nit.rgi.webapp.dbms.jdbc.JdbcConnettoreRetry.acquisisciConnessione(JdbcConnettoreRetry.java:901)\n\tat\nit.rgi.webapp.dbms.jdbc.JdbcConnettoreRetry.getDatabaseInfo(JdbcConnettoreRetry.java:754)\n\tat\nit.rgi.webapp.dbms.jdbc.JdbcConnettoreRetry.getDatabaseInfo(JdbcConnettoreRetry.java:752)\n\tat it.rgi.webapp.admin.StartUpProcess.database(StartUpProcess.java:534)\n\tat it.rgi.webapp.admin.StartUpProcess.execStartUpProcess(StartUpProcess.java:399)\n\tat it.rgi.webapp.admin.StartUpProcess.startup(StartUpProcess.java:282)\n\tat it.rgi.webapp.admin.StartUpProcess.startup(StartUpProcess.java:254)\n\tat it.rgi.webapp.admin.ServletAdmin.single_init(ServletAdmin.java:88)\n\tat it.rgi.webapp.admin.ServletAdmin.init(ServletAdmin.java:80)\n\tat javax.servlet.GenericServlet.init(GenericServlet.java:211)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:585)\n\tat org.apache.catalina.security.SecurityUtil$1.run(SecurityUtil.java:243)\n\tat java.security.AccessController.doPrivileged(Native Method)\n\tat javax.security.auth.Subject.doAsPrivileged(Subject.java:517)\n\tat org.apache.catalina.security.SecurityUtil.execute(SecurityUtil.java:275)\n\tat org.apache.catalina.security.SecurityUtil.doAsPrivilege(SecurityUtil.java:161)\n\tat org.apache.catalina.security.SecurityUtil.doAsPrivilege(SecurityUtil.java:114)\n\tat org.apache.catalina.core.StandardWrapper.loadServlet(StandardWrapper.java:1062)\n\tat org.apache.catalina.core.StandardWrapper.load(StandardWrapper.java:900)\n\tat\norg.apache.catalina.core.StandardContext.loadOnStartup(StandardContext.java:3823)\n\tat org.apache.catalina.core.StandardContext.start(StandardContext.java:4087)\n\tat org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:759)\n\tat org.apache.catalina.core.ContainerBase.access$000(ContainerBase.java:121)\n\tat\norg.apache.catalina.core.ContainerBase$PrivilegedAddChild.run(ContainerBase.java:143)\n\tat java.security.AccessController.doPrivileged(Native Method)\n\tat org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:737)\n\tat org.apache.catalina.core.StandardHost.addChild(StandardHost.java:524)\n\tat org.apache.catalina.startup.HostConfig.deployDescriptor(HostConfig.java:590)\n\tat org.apache.catalina.startup.HostConfig.deployDescriptors(HostConfig.java:535)\n\tat org.apache.catalina.startup.HostConfig.deployApps(HostConfig.java:470)\n\tat org.apache.catalina.startup.HostConfig.start(HostConfig.java:1106)\n\tat org.apache.catalina.startup.HostConfig.lifecycleEvent(HostConfig.java:310)\n\tat\norg.apache.catalina.util.LifecycleSupport.fireLifecycleEvent(LifecycleSupport.java:119)\n\tat org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1019)\n\tat org.apache.catalina.core.StandardHost.start(StandardHost.java:718)\n\tat org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1011)\n\tat org.apache.catalina.core.StandardEngine.start(StandardEngine.java:440)\n\tat org.apache.catalina.core.StandardService.start(StandardService.java:450)\n\tat org.apache.catalina.core.StandardServer.start(StandardServer.java:683)\n\tat org.apache.catalina.startup.Catalina.start(Catalina.java:537)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:585)\n\tat org.apache.catalina.startup.Bootstrap.start(Bootstrap.java:271)\n\tat org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:409)\n\n\n\n\n\n\n\n\n\n##############################################################################\n##### CATALINA.POLICY (ADDED ROWS)\n##############################################################################\n\n// JDBC DRIVERS\ngrant codeBase \"file:C:/Java/jdbcDrivers/-\" {\n  permission java.security.AllPermission;\n  };\n\n// Web applications permission, J2EE Specification 1.4\n// Minimum set of permissions that Web Components components can expect.\ngrant {\n\tpermission java.lang.RuntimePermission  \"loadLibrary.*\";\n\tpermission java.lang.RuntimePermission  \"queuePrintJob\";\n\tpermission java.net.SocketPermission    \"*\", \"connect\";\n\tpermission java.io.FilePermission       \"<<ALL FILES>>\", \"read,write\";\n\tpermission java.util.PropertyPermission \"*\", \"read\";\n    };\n\n// My Requirements\ngrant {\n    permission java.io.FilePermission \"<<ALL FILES>>\", \"delete\";\n    permission java.net.SocketPermission \"*:1024-65535\", \"accept,listen\";\n    };", "id": 73510, "time": "2005-04-11T11:17:27Z", "bug_id": 34396, "creation_time": "2005-04-11T11:17:27Z", "tags": [], "is_private": false}, {"count": 1, "tags": [], "bug_id": 34396, "attachment_id": 14677, "is_private": false, "id": 73512, "time": "2005-04-11T11:19:21Z", "creator": "dario.bonino@rgi.it", "creation_time": "2005-04-11T11:19:21Z", "text": "Created attachment 14677\ncatalina.policy"}, {"count": 2, "tags": [], "bug_id": 34396, "attachment_id": 14677, "is_private": false, "id": 73513, "time": "2005-04-11T11:21:26Z", "creator": "dario.bonino@rgi.it", "creation_time": "2005-04-11T11:21:26Z", "text": "Comment on attachment 14677\ncatalina.policy\n\n>// ============================================================================\n>// catalina.corepolicy - Security Policy Permissions for Tomcat 5\n>//\n>// This file contains a default set of security policies to be enforced (by the\n>// JVM) when Catalina is executed with the \"-security\" option.  In addition\n>// to the permissions granted here, the following additional permissions are\n>// granted to the codebase specific to each web application:\n>//\n>// * Read access to the document root directory\n>//\n>// $Id: catalina.policy,v 1.12 2004/09/15 18:57:41 jfarcand Exp $\n>// ============================================================================\n>\n>\n>// ========== SYSTEM CODE PERMISSIONS =========================================\n>\n>\n>// These permissions apply to javac\n>grant codeBase \"file:${java.home}/lib/-\" {\n>        permission java.security.AllPermission;\n>};\n>\n>// These permissions apply to all shared system extensions\n>grant codeBase \"file:${java.home}/jre/lib/ext/-\" {\n>        permission java.security.AllPermission;\n>};\n>\n>// These permissions apply to javac when ${java.home] points at $JAVA_HOME/jre\n>grant codeBase \"file:${java.home}/../lib/-\" {\n>        permission java.security.AllPermission;\n>};\n>\n>// These permissions apply to all shared system extensions when\n>// ${java.home} points at $JAVA_HOME/jre\n>grant codeBase \"file:${java.home}/lib/ext/-\" {\n>        permission java.security.AllPermission;\n>};\n>\n>\n>// ========== CATALINA CODE PERMISSIONS =======================================\n>\n>\n>// These permissions apply to the launcher code\n>grant codeBase \"file:${catalina.home}/bin/commons-launcher.jar\" {\n>        permission java.security.AllPermission;\n>};\n>\n>// These permissions apply to the daemon code\n>grant codeBase \"file:${catalina.home}/bin/commons-daemon.jar\" {\n>        permission java.security.AllPermission;\n>};\n>\n>// These permissions apply to the commons-logging API\n>grant codeBase \"file:${catalina.home}/bin/commons-logging-api.jar\" {\n>        permission java.security.AllPermission;\n>};\n>\n>// These permissions apply to the server startup code\n>grant codeBase \"file:${catalina.home}/bin/bootstrap.jar\" {\n>        permission java.security.AllPermission;\n>};\n>\n>// These permissions apply to the JMX server\n>grant codeBase \"file:${catalina.home}/bin/jmx.jar\" {\n>        permission java.security.AllPermission;\n>};\n>\n>// These permissions apply to the servlet API classes\n>// and those that are shared across all class loaders\n>// located in the \"common\" directory\n>grant codeBase \"file:${catalina.home}/common/-\" {\n>        permission java.security.AllPermission;\n>};\n>\n>// These permissions apply to the container's core code, plus any additional\n>// libraries installed in the \"server\" directory\n>grant codeBase \"file:${catalina.home}/server/-\" {\n>        permission java.security.AllPermission;\n>};\n>\n>// The permissions granted to the balancer WEB-INF/classes directory\n>grant codeBase \"file:${catalina.home}/webapps/balancer/WEB-INF/classes/-\" {\n>        permission java.lang.RuntimePermission \"accessClassInPackage.org.apache.tomcat.util.digester\";\n>        permission java.lang.RuntimePermission \"accessClassInPackage.org.apache.tomcat.util.digester.*\";\n>};\n>// ========== WEB APPLICATION PERMISSIONS =====================================\n>\n>\n>// These permissions are granted by default to all web applications\n>// In addition, a web application will be given a read FilePermission\n>// and JndiPermission for all files and directories in its document root.\n>grant { \n>    // Required for JNDI lookup of named JDBC DataSource's and\n>    // javamail named MimePart DataSource used to send mail\n>    permission java.util.PropertyPermission \"java.home\", \"read\";\n>    permission java.util.PropertyPermission \"java.naming.*\", \"read\";\n>    permission java.util.PropertyPermission \"javax.sql.*\", \"read\";\n>\n>    // OS Specific properties to allow read access\n>    permission java.util.PropertyPermission \"os.name\", \"read\";\n>    permission java.util.PropertyPermission \"os.version\", \"read\";\n>    permission java.util.PropertyPermission \"os.arch\", \"read\";\n>    permission java.util.PropertyPermission \"file.separator\", \"read\";\n>    permission java.util.PropertyPermission \"path.separator\", \"read\";\n>    permission java.util.PropertyPermission \"line.separator\", \"read\";\n>\n>    // JVM properties to allow read access\n>    permission java.util.PropertyPermission \"java.version\", \"read\";\n>    permission java.util.PropertyPermission \"java.vendor\", \"read\";\n>    permission java.util.PropertyPermission \"java.vendor.url\", \"read\";\n>    permission java.util.PropertyPermission \"java.class.version\", \"read\";\n>\tpermission java.util.PropertyPermission \"java.specification.version\", \"read\";\n>\tpermission java.util.PropertyPermission \"java.specification.vendor\", \"read\";\n>\tpermission java.util.PropertyPermission \"java.specification.name\", \"read\";\n>\n>\tpermission java.util.PropertyPermission \"java.vm.specification.version\", \"read\";\n>\tpermission java.util.PropertyPermission \"java.vm.specification.vendor\", \"read\";\n>\tpermission java.util.PropertyPermission \"java.vm.specification.name\", \"read\";\n>\tpermission java.util.PropertyPermission \"java.vm.version\", \"read\";\n>\tpermission java.util.PropertyPermission \"java.vm.vendor\", \"read\";\n>\tpermission java.util.PropertyPermission \"java.vm.name\", \"read\";\n>\n>    // Required for OpenJMX\n>    permission java.lang.RuntimePermission \"getAttribute\";\n>\n>\t// Allow read of JAXP compliant XML parser debug\n>\tpermission java.util.PropertyPermission \"jaxp.debug\", \"read\";\n>\n>    // Precompiled JSPs need access to this package.\n>    permission java.lang.RuntimePermission \"accessClassInPackage.org.apache.jasper.runtime\";\n>    permission java.lang.RuntimePermission \"accessClassInPackage.org.apache.jasper.runtime.*\";\n>    \n>};\n>\n>\n>// You can assign additional permissions to particular web applications by\n>// adding additional \"grant\" entries here, based on the code base for that\n>// application, /WEB-INF/classes/, or /WEB-INF/lib/ jar files.\n>//\n>// Different permissions can be granted to JSP pages, classes loaded from\n>// the /WEB-INF/classes/ directory, all jar files in the /WEB-INF/lib/\n>// directory, or even to individual jar files in the /WEB-INF/lib/ directory.\n>//\n>// For instance, assume that the standard \"examples\" application\n>// included a JDBC driver that needed to establish a network connection to the\n>// corresponding database and used the scrape taglib to get the weather from\n>// the NOAA web server.  You might create a \"grant\" entries like this:\n>//\n>// The permissions granted to the context root directory apply to JSP pages.\n>// grant codeBase \"file:${catalina.home}/webapps/examples/-\" {\n>//      permission java.net.SocketPermission \"dbhost.mycompany.com:5432\", \"connect\";\n>//      permission java.net.SocketPermission \"*.noaa.gov:80\", \"connect\";\n>// };\n>//\n>// The permissions granted to the context WEB-INF/classes directory\n>// grant codeBase \"file:${catalina.home}/webapps/examples/WEB-INF/classes/-\" {\n>// };\n>//\n>// The permission granted to your JDBC driver\n>// grant codeBase \"jar:file:${catalina.home}/webapps/examples/WEB-INF/lib/driver.jar!/-\" {\n>//      permission java.net.SocketPermission \"dbhost.mycompany.com:5432\", \"connect\";\n>// };\n>// The permission granted to the scrape taglib\n>// grant codeBase \"jar:file:${catalina.home}/webapps/examples/WEB-INF/lib/scrape.jar!/-\" {\n>//      permission java.net.SocketPermission \"*.noaa.gov:80\", \"connect\";\n>// };\n>\n>\n>\n>// ###############################################################\n>// AGGIUNTE MANUALI\n>// ###############################################################\n>\n>// These permissions apply to the servlet API classes and those that are shared across\n>// all class loaders located in the \"RGI/lib/common\" OR \"RGI/lib/shared\" directory\n>grant codeBase \"file:C:/Java/jdbcDrivers/-\" { permission java.security.AllPermission; };\n>// grant codeBase \"file:${catalina.home}/RGI/lib/-\" { permission java.security.AllPermission; };\n>\n>// Web applications permission, J2EE Specification 1.4\n>// Minimum set of permissions that Web Components components can expect.\n>grant {\n>\tpermission java.lang.RuntimePermission  \"loadLibrary.*\";\n>\tpermission java.lang.RuntimePermission  \"queuePrintJob\";\n>\tpermission java.net.SocketPermission    \"*\", \"connect\";\n>\tpermission java.io.FilePermission       \"<<ALL FILES>>\", \"read,write\";\n>\tpermission java.util.PropertyPermission \"*\", \"read\";\n>    };\n>\n>// RGI JBasis and PassCompagnia requirements\n>grant {\n>    permission java.io.FilePermission \"<<ALL FILES>>\", \"delete\";            // \"read,write,delete,execute\";\n>    permission java.net.SocketPermission \"*:1024-65535\", \"accept,listen\";   // \"connect,accept,listen\";\n>    // permission java.util.PropertyPermission \"*\", \"read,write\";           // Per poter richiedere System.getProperties()\n>    // permission java.util.PropertyPermission \"user.language\", \"write\";    // Per poter cambiare i \"Regional Settings\"\n>    // permission java.security.AllPermission;                              // DEBUG\n>    // permission java.lang.RuntimePermission \"getClassLoader\";             // per CTRL Controller ?!?!\n>    // permission javax.management.MBeanServerPermission \"*\",\"*\";           // JMX Java Management eXtensions\n>    // permission javax.management.MBeanPermission \"*\",\"*\";                 // JMX Java Management eXtensions\n>    // permission javax.management.MBeanTrustPermission \"register\";         // JMX Java Management eXtensions\n>    };\n>     \n>\n>// ###############################################################\n>// AGGIUNTE MANUALI\n>// ###############################################################"}, {"count": 3, "tags": [], "bug_id": 34396, "is_private": false, "text": "Created attachment 14678\ncatalina.policy\n\ncatalina.policy (correct version)\nline 195 must be:\n    // permission java.security.AllPermission;", "id": 73514, "time": "2005-04-11T11:25:30Z", "creator": "dario.bonino@rgi.it", "creation_time": "2005-04-11T11:25:30Z", "attachment_id": 14678}, {"count": 4, "tags": [], "bug_id": 34396, "is_private": false, "text": "Dario, I understand that you need additional permissions for your application\nbecasue you're doing a DataSource creation in the initialization.  But I wonder\nif, instead of changing the policy file that comes with Tomcat, we should simply\ndocument this.  I'm very hesitant to put DBCP-specific permissions in the\ndefault Tomcat policy file.", "id": 77569, "time": "2005-07-22T16:22:02Z", "creator": "yoavs@computer.org", "creation_time": "2005-07-22T16:22:02Z", "attachment_id": null}, {"count": 5, "attachment_id": null, "creator": "dario.bonino@rgi.it", "text": "OK. My application in not important.\n\nOther J2EE application servers usually throws SecurityException for directory\naccess from asynch Threads started into init() or service() method call.\nThrere is no difference between <servlet>.init() and <servlet>.service(...)\npermission. \n\nI don't see difference in J2EE specification for <servlet>.service(...) and\n<servlet>.init() permission.\n@see http://java.sun.com/j2ee/j2ee-1_4-fr-spec.pdf\nPage 87: J2EE.6.2 Java 2 Platform, Standard Edition (J2SE) Requirements\n\nIt's a trivial problem. \nThanks for your effort into developing Tomcat.", "id": 77611, "time": "2005-07-25T11:13:10Z", "bug_id": 34396, "creation_time": "2005-07-25T11:13:10Z", "tags": [], "is_private": false}, {"count": 6, "tags": [], "text": "Based on the last two comments and the fact that, in my view, the default\ncatalina.policy file alreday contains sufficient guidance regarding additional\npermissions individual web applications may require I am closing this as WONTFIX. ", "attachment_id": null, "bug_id": 34396, "id": 93320, "time": "2006-09-11T03:03:39Z", "creator": "markt@apache.org", "creation_time": "2006-09-11T03:03:39Z", "is_private": false}]