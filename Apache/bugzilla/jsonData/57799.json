[{"count": 0, "tags": [], "text": "Our SOAP client connects to our web service when Tomcat is configured with default Nio connector protocol. With the new Nio 2 connector protocol, we get:\n\n07-Apr-2015 08:17:06.166 SEVERE [http-nio2-8443-exec-10] com.sun.xml.ws.transport.http.HttpAdapter$HttpToolkit.handle Couldn't create SOAP message due to exception: java.nio.channels.ReadPendingException\n com.sun.xml.ws.protocol.soap.MessageCreationException: Couldn't create SOAP message due to exception: java.nio.channels.ReadPendingException\n\tat com.sun.xml.ws.encoding.SOAPBindingCodec.decode(SOAPBindingCodec.java:363)\n\tat com.sun.xml.ws.transport.http.HttpAdapter.decodePacket(HttpAdapter.java:336)\n\tat com.sun.xml.ws.transport.http.HttpAdapter.access$400(HttpAdapter.java:96)\n\tat com.sun.xml.ws.transport.http.HttpAdapter$HttpToolkit.handle(HttpAdapter.java:591)\n\tat com.sun.xml.ws.transport.http.HttpAdapter.handle(HttpAdapter.java:259)\n\tat com.sun.xml.ws.transport.http.servlet.ServletAdapter.invokeAsync(ServletAdapter.java:213)\n\tat com.sun.xml.ws.transport.http.servlet.WSServletDelegate.doGet(WSServletDelegate.java:159)\n\tat com.sun.xml.ws.transport.http.servlet.WSServletDelegate.doPost(WSServletDelegate.java:194)\n\tat com.sun.xml.ws.transport.http.servlet.WSServlet.doPost(WSServlet.java:80)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:644)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:725)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:291)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:219)\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:142)\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)\n\tat org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:610)\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:537)\n\tat org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1085)\n\tat org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:658)\n\tat org.apache.coyote.http11.Http11Nio2Protocol$Http11ConnectionHandler.process(Http11Nio2Protocol.java:176)\n\tat org.apache.tomcat.util.net.Nio2Endpoint$SocketProcessor.doRun(Nio2Endpoint.java:1087)\n\tat org.apache.tomcat.util.net.Nio2Endpoint$SocketProcessor.run(Nio2Endpoint.java:1046)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\n\tat java.lang.Thread.run(Unknown Source)\nCaused by: java.nio.channels.ReadPendingException\n\tat org.apache.tomcat.util.net.SecureNio2Channel.read(SecureNio2Channel.java:610)\n\tat org.apache.coyote.http11.InternalNio2InputBuffer.fill(InternalNio2InputBuffer.java:223)\n\tat org.apache.coyote.http11.InternalNio2InputBuffer$SocketInputBuffer.doRead(InternalNio2InputBuffer.java:331)\n\tat org.apache.coyote.http11.filters.ChunkedInputFilter.readBytes(ChunkedInputFilter.java:314)\n\tat org.apache.coyote.http11.filters.ChunkedInputFilter.parseChunkHeader(ChunkedInputFilter.java:344)\n\tat org.apache.coyote.http11.filters.ChunkedInputFilter.doRead(ChunkedInputFilter.java:184)\n\tat org.apache.coyote.http11.AbstractInputBuffer.doRead(AbstractInputBuffer.java:413)\n\tat org.apache.coyote.Request.doRead(Request.java:460)\n\tat org.apache.catalina.connector.InputBuffer.realReadBytes(InputBuffer.java:338)\n\tat org.apache.tomcat.util.buf.ByteChunk.substract(ByteChunk.java:395)\n\tat org.apache.catalina.connector.InputBuffer.read(InputBuffer.java:363)\n\tat org.apache.catalina.connector.CoyoteInputStream.read(CoyoteInputStream.java:190)\n\tat sun.nio.cs.StreamDecoder.readBytes(Unknown Source)\n\tat sun.nio.cs.StreamDecoder.implRead(Unknown Source)\n\tat sun.nio.cs.StreamDecoder.read(Unknown Source)\n\tat java.io.InputStreamReader.read(Unknown Source)\n\tat com.ctc.wstx.io.MergedReader.read(MergedReader.java:105)\n\tat com.ctc.wstx.io.ReaderSource.readInto(ReaderSource.java:87)\n\tat com.ctc.wstx.io.BranchingReaderSource.readInto(BranchingReaderSource.java:57)\n\tat com.ctc.wstx.sr.StreamScanner.loadMore(StreamScanner.java:988)\n\tat com.ctc.wstx.sr.StreamScanner.getNext(StreamScanner.java:754)\n\tat com.ctc.wstx.sr.BasicStreamReader.nextFromTree(BasicStreamReader.java:2676)\n\tat com.ctc.wstx.sr.BasicStreamReader.next(BasicStreamReader.java:1050)\n\tat com.sun.xml.ws.util.xml.XMLStreamReaderFilter.next(XMLStreamReaderFilter.java:96)\n\tat com.sun.xml.ws.streaming.XMLStreamReaderUtil.next(XMLStreamReaderUtil.java:80)\n\tat com.sun.xml.ws.streaming.XMLStreamReaderUtil.nextContent(XMLStreamReaderUtil.java:114)\n\tat com.sun.xml.ws.streaming.XMLStreamReaderUtil.nextElementContent(XMLStreamReaderUtil.java:104)\n\tat com.sun.xml.ws.encoding.StreamSOAPCodec.decode(StreamSOAPCodec.java:234)\n\tat com.sun.xml.ws.encoding.StreamSOAPCodec.decode(StreamSOAPCodec.java:307)\n\tat com.sun.xml.ws.encoding.StreamSOAPCodec.decode(StreamSOAPCodec.java:133)\n\tat com.sun.xml.ws.encoding.SOAPBindingCodec.decode(SOAPBindingCodec.java:358)\n\t... 31 more", "attachment_id": null, "bug_id": 57799, "id": 182276, "time": "2015-04-08T15:37:25Z", "creator": "crynax@yahoo.com", "creation_time": "2015-04-08T15:37:25Z", "is_private": false}, {"count": 1, "tags": [], "text": "It would need to be more reproduceable than this, and it probably means what it means (there's a concurrent write) unless there's a glitch setting back the pending flag, which seems doubtful. Something worth testing is dropping SSL to compare with the vanilla NIO2 code.", "is_private": false, "id": 182277, "creator": "remm@apache.org", "time": "2015-04-08T15:55:56Z", "bug_id": 57799, "creation_time": "2015-04-08T15:55:56Z", "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 57799, "attachment_id": null, "id": 182278, "creation_time": "2015-04-08T18:06:40Z", "time": "2015-04-08T18:06:40Z", "creator": "crynax@yahoo.com", "text": "There are no such problems when dropping SSL.", "is_private": false}, {"count": 3, "tags": [], "text": "As part of the investigation I fixed some issues (r1672297) which will be backported to Tomcat 8, but I don't see any way for the read pending flag to have a bad state. Without some test, the issue will eventually be closed.", "is_private": false, "id": 182286, "creator": "remm@apache.org", "time": "2015-04-09T12:41:57Z", "bug_id": 57799, "creation_time": "2015-04-09T12:41:57Z", "attachment_id": null}, {"count": 4, "tags": [], "text": "(In reply to Remy Maucherat from comment #3)\n> As part of the investigation I fixed some issues (r1672297)\n\nThanks for your initial look and your changes. These changes do not fix the problem (I built and dropped tomcat-coyote.jar into 8.0.15). The code I'm running is proprietary and I've not even read it yet. I will try to provide a sufficient test case if/when I have time.", "is_private": false, "bug_id": 57799, "id": 182294, "time": "2015-04-10T00:53:40Z", "creator": "crynax@yahoo.com", "creation_time": "2015-04-10T00:53:40Z", "attachment_id": null}, {"count": 5, "attachment_id": null, "creator": "remm@apache.org", "is_private": false, "id": 182300, "time": "2015-04-10T09:28:02Z", "bug_id": 57799, "creation_time": "2015-04-10T09:28:02Z", "tags": [], "text": "It probably still works at the moment, but I don't think that's the right way to test with all the connector refactorings in trunk.\n\nIf you're building from source, you can remove the exception throw and see if it works without issues or corruption. I don't see how the flag can be wrong at the moment though, so it could be a timing issue this connector triggers."}, {"count": 6, "attachment_id": null, "creator": "remm@apache.org", "is_private": false, "id": 182304, "time": "2015-04-10T12:18:43Z", "bug_id": 57799, "creation_time": "2015-04-10T12:18:43Z", "tags": [], "text": "Unrelated (but useful) fixes merged in Tomcat 8 as r1672626."}, {"count": 7, "tags": [], "bug_id": 57799, "text": "(In reply to Remy Maucherat from comment #6)\n> Unrelated (but useful) fixes merged in Tomcat 8 as r1672626.\n\nI exported from ^/trunk@1672808, removed both \"throw ReadPendingException\" from SecureNio2Channel, built, installed tomcat-coyote.jar. I get a different \"Caused by\":\n\nCaused by: java.nio.channels.ReadPendingException\n\tat sun.nio.ch.AsynchronousSocketChannelImpl.read(Unknown Source)\n\tat sun.nio.ch.AsynchronousSocketChannelImpl.read(Unknown Source)\n\tat org.apache.tomcat.util.net.SecureNio2Channel$FutureRead.<init>(SecureNio2Channel.java:484)\n\tat org.apache.tomcat.util.net.SecureNio2Channel.read(SecureNio2Channel.java:582)\n\tat org.apache.coyote.http11.InternalNio2InputBuffer.fill(InternalNio2InputBuffer.java:223)\n\tat org.apache.coyote.http11.InternalNio2InputBuffer$SocketInputBuffer.doRead(InternalNio2InputBuffer.java:331)\n\tat org.apache.coyote.http11.filters.ChunkedInputFilter.readBytes(ChunkedInputFilter.java:320)\n\tat org.apache.coyote.http11.filters.ChunkedInputFilter.parseChunkHeader(ChunkedInputFilter.java:350)\n\tat org.apache.coyote.http11.filters.ChunkedInputFilter.doRead(ChunkedInputFilter.java:190)\n\tat org.apache.coyote.http11.AbstractInputBuffer.doRead(AbstractInputBuffer.java:416)\n\tat org.apache.coyote.Request.doRead(Request.java:469)\n\tat org.apache.catalina.connector.InputBuffer.realReadBytes(InputBuffer.java:338)\n\tat org.apache.tomcat.util.buf.ByteChunk.substract(ByteChunk.java:395)\n\tat org.apache.catalina.connector.InputBuffer.read(InputBuffer.java:363)\n\tat org.apache.catalina.connector.CoyoteInputStream.read(CoyoteInputStream.java:190)\n\tat sun.nio.cs.StreamDecoder.readBytes(Unknown Source)", "id": 182317, "attachment_id": null, "creator": "crynax@yahoo.com", "creation_time": "2015-04-11T02:58:05Z", "time": "2015-04-11T02:58:05Z", "is_private": false}, {"count": 8, "tags": [], "bug_id": 57799, "attachment_id": null, "id": 182330, "creation_time": "2015-04-13T09:14:58Z", "time": "2015-04-13T09:14:58Z", "creator": "remm@apache.org", "text": "So the pending flag seems correct. The difference with non SSL is thus unexplained, and this needs a (simple) testcase.", "is_private": false}, {"count": 9, "tags": [], "bug_id": 57799, "attachment_id": null, "id": 182392, "creation_time": "2015-04-15T15:04:37Z", "time": "2015-04-15T15:04:37Z", "creator": "remm@apache.org", "text": "Also, testing on Tomcat trunk may not be useless.", "is_private": false}, {"count": 10, "tags": [], "bug_id": 57799, "attachment_id": null, "id": 182560, "time": "2015-04-22T14:39:59Z", "creator": "markt@apache.org", "creation_time": "2015-04-22T14:39:59Z", "is_private": false, "text": "Waiting on a test case to reproduce this. Without a test case - or at least steps to reproduce - this bug will eventually get closed as WORKSFORME."}, {"count": 11, "tags": [], "text": "(In reply to Remy Maucherat from comment #9)\n> Also, testing on Tomcat trunk may not be useless.\n\nSame errors with Tomcat 8.0.21. When I build/run /trunk@1675728, I get:\n\n23-Apr-2015 17:55:46.105 INFO [http-nio2-8443-exec-3] org.apache.coyote.http11.AbstractHttp11Processor.process Error parsing HTTP request header\n Note: further occurrences of HTTP header parsing errors will be logged at DEBUG level.\n23-Apr-2015 17:55:46.403 WARNING [http-nio2-8443-exec-8] org.apache.tomcat.util.net.AbstractEndpoint.countDownConnection Incorrect connection count, multiple socket.close called on the same socket.\n23-Apr-2015 17:55:50.130 WARNING [http-nio2-8443-exec-2] org.apache.tomcat.util.net.AbstractEndpoint.countDownConnection Incorrect connection count, multiple socket.close called on the same socket.\n23-Apr-2015 17:55:50.131 WARNING [http-nio2-8443-exec-1] org.apache.tomcat.util.net.AbstractEndpoint.countDownConnection Incorrect connection count, multiple socket.close called on the same socket.", "attachment_id": null, "id": 182601, "creator": "crynax@yahoo.com", "time": "2015-04-23T23:01:04Z", "bug_id": 57799, "creation_time": "2015-04-23T23:01:04Z", "is_private": false}, {"count": 12, "tags": [], "bug_id": 57799, "attachment_id": null, "id": 182874, "creation_time": "2015-05-07T16:10:14Z", "time": "2015-05-07T16:10:14Z", "creator": "remm@apache.org", "text": "Since there's no test case, it is worth retesting again [with trunk] since the previous fix caused a regression.", "is_private": false}, {"count": 13, "tags": [], "text": "Any update now 8.0.23 is released? Still waiting on a test case or steps to reproduce.", "is_private": false, "bug_id": 57799, "id": 183545, "time": "2015-06-16T07:37:20Z", "creator": "markt@apache.org", "creation_time": "2015-06-16T07:37:20Z", "attachment_id": null}, {"count": 14, "tags": [], "bug_id": 57799, "attachment_id": 32830, "id": 183585, "time": "2015-06-17T01:41:42Z", "creator": "crynax@yahoo.com", "creation_time": "2015-06-17T01:41:42Z", "is_private": false, "text": "Created attachment 32830\nExceptions"}, {"count": 15, "tags": [], "bug_id": 57799, "text": "Retested and reconfirmed problem with /trunk@1685924. Attached exceptions.", "id": 183586, "attachment_id": null, "creator": "crynax@yahoo.com", "creation_time": "2015-06-17T01:44:56Z", "time": "2015-06-17T01:44:56Z", "is_private": false}, {"count": 16, "tags": [], "text": "Without a relatively simple test case, I think this should be closed for the time being. There has to be some concurrency involved and the framework really gets in the way.", "is_private": false, "id": 183590, "creator": "remm@apache.org", "time": "2015-06-17T05:55:34Z", "bug_id": 57799, "creation_time": "2015-06-17T05:55:34Z", "attachment_id": null}, {"count": 17, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "id": 183603, "time": "2015-06-17T13:09:43Z", "bug_id": 57799, "creation_time": "2015-06-17T13:09:43Z", "is_private": false, "text": "(In reply to Remy Maucherat from comment #16)\n> Without a relatively simple test case, I think this should be closed for the\n> time being. There has to be some concurrency involved and the framework\n> really gets in the way.\n\nThat is effectively what the NEEDINFO state does. When I do a release I aim to fix all the open bugs that affect that version excluding any in the NEEDINFO state.\n\nI'd prefer a simple test case but right now I'd take any test case that reproduced this issue fairly reliably.\n\nWithout a test case this is going to sit in the NEEDINFO state."}, {"count": 18, "tags": [], "bug_id": 57799, "attachment_id": null, "id": 183606, "time": "2015-06-17T13:52:50Z", "creator": "crynax@yahoo.com", "creation_time": "2015-06-17T13:52:50Z", "is_private": false, "text": "> Without a test case this is going to sit in the NEEDINFO state.\n\nUnderstandable. Regardless of whether there is a test case, there is a bug causing exceptions in Tomcat 8 latest. I may not be the only one who can contribute to its resolution. You're asking me to search through an unfamiliar codebase for a closed-source commercial client which likely uses Windows and SOAP API's that I'm also unfamiliar with, and extract a test case that I feel comfortable sharing. Sadly I have little desire to learn much about this client. I do wish to help the Tomcat community and will try to find the time."}, {"count": 19, "tags": [], "text": "We are running into this same issue in our application and I just started to debug the problem. The one additional piece of information I can add is that I only get this error when I have SSL enabled in the connector and the SOAP client connects via HTTPS.  If I use HTTP only, this issue doesn't occur.", "attachment_id": null, "id": 185072, "creator": "robert.mohn@gmail.com", "time": "2015-09-10T12:10:10Z", "bug_id": 57799, "creation_time": "2015-09-10T12:10:10Z", "is_private": false}, {"count": 20, "tags": [], "text": "(In reply to Robert M from comment #19)\n> We are running into this same issue in our application and I just started to\n> debug the problem. The one additional piece of information I can add is that\n> I only get this error when I have SSL enabled in the connector and the SOAP\n> client connects via HTTPS.  If I use HTTP only, this issue doesn't occur.\n\nWhile that isn't new information (see comment #2) another user being able to replicate the issue does increase the chances of being able to generate a reproducible test case. Anything you can do in that direction would be appreciated.", "is_private": false, "id": 185078, "creator": "markt@apache.org", "time": "2015-09-10T14:54:10Z", "bug_id": 57799, "creation_time": "2015-09-10T14:54:10Z", "attachment_id": null}, {"count": 21, "attachment_id": null, "creator": "remm@apache.org", "is_private": false, "id": 185977, "time": "2015-10-26T16:50:42Z", "bug_id": 57799, "creation_time": "2015-10-26T16:50:42Z", "tags": [], "text": "This could use another trunk retest."}, {"count": 22, "tags": [], "bug_id": 57799, "attachment_id": null, "id": 186096, "time": "2015-10-29T17:18:35Z", "creator": "remm@apache.org", "creation_time": "2015-10-29T17:18:35Z", "is_private": false, "text": "Investigating another issue, it seems possible this one is caused by a timeout exception that gets swallowed, followed by a new read attempt. It is not really a Tomcat bug if the theory is correct.\n\nIn trunk, I added a cancel of the blocking read/write in case a timeout occurs, but it could cause a loop and the connection to stay active forever: a Servlet is not supposed to catch exceptions."}, {"count": 23, "tags": [], "bug_id": 57799, "attachment_id": null, "is_private": false, "id": 186101, "time": "2015-10-29T22:01:04Z", "creator": "crynax@yahoo.com", "creation_time": "2015-10-29T22:01:04Z", "text": "(In reply to Remy Maucherat from comment #21)\n> This could use another trunk retest.\n\n\nBuilt, ran /trunk@1711357. Client now throws exception connected to non-SSL port too...\n\n2015-10-29 16:44:58,287 exception [Thread-23] - ... -  javax.xml.ws.soap.SOAPFaultException: Couldn't create SOAP message due to exception: java.nio.channels.ReadPendingException\n\tat com.sun.xml.ws.fault.SOAP11Fault.getProtocolException(SOAP11Fault.java:193)\n\tat com.sun.xml.ws.fault.SOAPFaultBuilder.createException(SOAPFaultBuilder.java:126)\n\tat com.sun.xml.ws.client.sei.SyncMethodHandler.invoke(SyncMethodHandler.java:123)\n\tat com.sun.xml.ws.client.sei.SyncMethodHandler.invoke(SyncMethodHandler.java:93)\n\tat com.sun.xml.ws.client.sei.SEIStub.invoke(SEIStub.java:144)\n\n\nTomcat server exception in catalina.out...\n\n29-Oct-2015 16:44:58.122 SEVERE [http-nio2-8080-exec-7] com.sun.xml.ws.transport.http.HttpAdapter$HttpToolkit.handle Couldn't create SOAP message due to exception: java.nio.channels.ReadPendingException\n com.sun.xml.ws.protocol.soap.MessageCreationException: Couldn't create SOAP message due to exception: java.nio.channels.ReadPendingException\n\tat com.sun.xml.ws.encoding.SOAPBindingCodec.decode(SOAPBindingCodec.java:363)\n\tat com.sun.xml.ws.transport.http.HttpAdapter.decodePacket(HttpAdapter.java:336)\n\tat com.sun.xml.ws.transport.http.HttpAdapter.access$400(HttpAdapter.java:96)\n\tat com.sun.xml.ws.transport.http.HttpAdapter$HttpToolkit.handle(HttpAdapter.java:591)\n\tat com.sun.xml.ws.transport.http.HttpAdapter.handle(HttpAdapter.java:259)\n\tat com.sun.xml.ws.transport.http.servlet.ServletAdapter.invokeAsync(ServletAdapter.java:213)\n\tat com.sun.xml.ws.transport.http.servlet.WSServletDelegate.doGet(WSServletDelegate.java:159)\n\tat com.sun.xml.ws.transport.http.servlet.WSServletDelegate.doPost(WSServletDelegate.java:194)\n\tat com.sun.xml.ws.transport.http.servlet.WSServlet.doPost(WSServlet.java:80)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:648)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:729)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:291)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:218)\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:142)\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)\n\tat org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:616)\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:518)\n\tat org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1091)\n\tat org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:673)\n\tat org.apache.tomcat.util.net.Nio2Endpoint$SocketProcessor.doRun(Nio2Endpoint.java:1074)\n\tat org.apache.tomcat.util.net.Nio2Endpoint$SocketProcessor.run(Nio2Endpoint.java:1033)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\n\tat java.lang.Thread.run(Unknown Source)\nCaused by: java.nio.channels.ReadPendingException\n\tat sun.nio.ch.AsynchronousSocketChannelImpl.read(Unknown Source)\n\tat sun.nio.ch.AsynchronousSocketChannelImpl.read(Unknown Source)\n\tat org.apache.tomcat.util.net.Nio2Channel.read(Nio2Channel.java:133)\n\tat org.apache.coyote.http11.InternalNio2InputBuffer.fill(InternalNio2InputBuffer.java:225)\n\tat org.apache.coyote.http11.InternalNio2InputBuffer$SocketInputBuffer.doRead(InternalNio2InputBuffer.java:336)\n\tat org.apache.coyote.http11.filters.ChunkedInputFilter.readBytes(ChunkedInputFilter.java:320)\n\tat org.apache.coyote.http11.filters.ChunkedInputFilter.parseChunkHeader(ChunkedInputFilter.java:350)\n\tat org.apache.coyote.http11.filters.ChunkedInputFilter.doRead(ChunkedInputFilter.java:190)\n\tat org.apache.coyote.http11.AbstractInputBuffer.doRead(AbstractInputBuffer.java:416)\n\tat org.apache.coyote.Request.doRead(Request.java:469)\n\tat org.apache.catalina.connector.InputBuffer.realReadBytes(InputBuffer.java:342)\n\tat org.apache.tomcat.util.buf.ByteChunk.substract(ByteChunk.java:395)\n\tat org.apache.catalina.connector.InputBuffer.read(InputBuffer.java:367)\n\tat org.apache.catalina.connector.CoyoteInputStream.read(CoyoteInputStream.java:190)\n\tat sun.nio.cs.StreamDecoder.readBytes(Unknown Source)\n\tat sun.nio.cs.StreamDecoder.implRead(Unknown Source)\n\tat sun.nio.cs.StreamDecoder.read(Unknown Source)\n\tat java.io.InputStreamReader.read(Unknown Source)\n\tat com.ctc.wstx.io.MergedReader.read(MergedReader.java:105)\n\tat com.ctc.wstx.io.ReaderSource.readInto(ReaderSource.java:87)\n\tat com.ctc.wstx.io.BranchingReaderSource.readInto(BranchingReaderSource.java:57)\n\tat com.ctc.wstx.sr.StreamScanner.loadMore(StreamScanner.java:988)\n\tat com.ctc.wstx.sr.StreamScanner.getNext(StreamScanner.java:754)\n\tat com.ctc.wstx.sr.BasicStreamReader.nextFromTree(BasicStreamReader.java:2676)\n\tat com.ctc.wstx.sr.BasicStreamReader.next(BasicStreamReader.java:1050)\n\tat com.sun.xml.ws.util.xml.XMLStreamReaderFilter.next(XMLStreamReaderFilter.java:96)\n\tat com.sun.xml.ws.streaming.XMLStreamReaderUtil.next(XMLStreamReaderUtil.java:80)\n\tat com.sun.xml.ws.streaming.XMLStreamReaderUtil.nextContent(XMLStreamReaderUtil.java:114)\n\tat com.sun.xml.ws.streaming.XMLStreamReaderUtil.nextElementContent(XMLStreamReaderUtil.java:104)\n\tat com.sun.xml.ws.encoding.StreamSOAPCodec.decode(StreamSOAPCodec.java:234)\n\tat com.sun.xml.ws.encoding.StreamSOAPCodec.decode(StreamSOAPCodec.java:307)\n\tat com.sun.xml.ws.encoding.StreamSOAPCodec.decode(StreamSOAPCodec.java:133)\n\tat com.sun.xml.ws.encoding.SOAPBindingCodec.decode(SOAPBindingCodec.java:358)\n\t... 30 more"}, {"count": 24, "tags": [], "bug_id": 57799, "attachment_id": null, "text": "Hum, it's not trunk, it's branch 8 head. Anyway, the SSL thing was just coincidental, never mind.\n\nIt would be nice in the channel read to capture the previous stack trace (throw and catch an exception, put it in a field, then catch the ReadPendingException and print the saved one).", "id": 186103, "time": "2015-10-29T22:25:41Z", "creator": "remm@apache.org", "creation_time": "2015-10-29T22:25:41Z", "is_private": false}, {"count": 25, "tags": [], "text": "When I say in the channel read, I mean here for the debug code:\n org.apache.tomcat.util.net.Nio2Channel.read(Nio2Channel.java:133)", "is_private": false, "bug_id": 57799, "id": 186104, "time": "2015-10-29T22:27:55Z", "creator": "remm@apache.org", "creation_time": "2015-10-29T22:27:55Z", "attachment_id": null}, {"count": 26, "tags": [], "text": "Created attachment 33234\nDebug code\n\nIf the exception does not occur, the code can be added to SecureNio2Channel.", "is_private": false, "id": 186113, "creator": "remm@apache.org", "time": "2015-10-30T10:59:13Z", "bug_id": 57799, "creation_time": "2015-10-30T10:59:13Z", "attachment_id": 33234}, {"count": 27, "tags": [], "creator": "crynax@yahoo.com", "attachment_id": 33240, "id": 186153, "time": "2015-11-01T23:50:40Z", "bug_id": 57799, "creation_time": "2015-11-01T23:50:40Z", "is_private": false, "text": "Created attachment 33240\nClient exceptions for /trunk@1711734\n\nThanks for the patch! I exported, applied, built, ran."}, {"count": 28, "attachment_id": 33241, "creator": "crynax@yahoo.com", "is_private": false, "id": 186154, "time": "2015-11-01T23:52:02Z", "bug_id": 57799, "creation_time": "2015-11-01T23:52:02Z", "tags": [], "text": "Created attachment 33241\nServer exceptions for /trunk@1711734 with debug code\n\nThanks for the patch! I exported, applied, built, ran."}, {"count": 29, "tags": [], "text": "The debug info is not there however.", "is_private": false, "bug_id": 57799, "id": 186156, "time": "2015-11-02T00:12:16Z", "creator": "remm@apache.org", "creation_time": "2015-11-02T00:12:16Z", "attachment_id": null}, {"count": 30, "tags": [], "bug_id": 57799, "attachment_id": 33242, "is_private": false, "id": 186158, "time": "2015-11-02T00:26:24Z", "creator": "crynax@yahoo.com", "creation_time": "2015-11-02T00:26:24Z", "text": "Created attachment 33242\nstderr for /trunk@1711734 with debug code\n\nPrevious attachment was catalina.out. stdout has only:\n\n> Read pending http-nio2-8080-exec-9\n\nstderr is attached here."}, {"count": 31, "tags": [], "bug_id": 57799, "attachment_id": 33243, "id": 186159, "time": "2015-11-02T01:05:37Z", "creator": "remm@apache.org", "creation_time": "2015-11-02T01:05:37Z", "is_private": false, "text": "Created attachment 33243\nFixed debug code\n\nThe previous one was bad, and also this puts the info in the log file."}, {"count": 32, "tags": [], "text": "Created attachment 33244\nServer exceptions for /trunk@1711734 with debug code\n\n> (In reply to Remy Maucherat from comment #31)\n\nCleaned, applied patch from c#31, built, ran.", "attachment_id": 33244, "bug_id": 57799, "id": 186161, "time": "2015-11-02T01:43:55Z", "creator": "crynax@yahoo.com", "creation_time": "2015-11-02T01:43:55Z", "is_private": false}, {"count": 33, "tags": [], "text": "Ok, so this looks like legacy blocking code, which calls available() to be smart.\n\nThen it breaks because the input stream's available is really meant to be used with isReady now (Servlet 3.1) and does a real async read. So maybe the available action could use an added optional boolean parameter and do the async read only if it is true (which would indicate Servlet 3.1 mode).", "attachment_id": null, "id": 186173, "creator": "remm@apache.org", "time": "2015-11-02T10:16:04Z", "bug_id": 57799, "creation_time": "2015-11-02T10:16:04Z", "is_private": false}, {"count": 34, "tags": [], "text": "Created attachment 33247\nTest patch\n\nWith debug.", "is_private": false, "bug_id": 57799, "id": 186174, "time": "2015-11-02T10:31:53Z", "creator": "remm@apache.org", "creation_time": "2015-11-02T10:31:53Z", "attachment_id": 33247}, {"count": 35, "tags": [], "creator": "crynax@yahoo.com", "attachment_id": null, "id": 186200, "time": "2015-11-02T16:35:41Z", "bug_id": 57799, "creation_time": "2015-11-02T16:35:41Z", "is_private": false, "text": "(In reply to Remy Maucherat from comment #34)\n> Created attachment 33247 [details]\n> Test patch\n> \n> With debug.\n\nExcellent, this patch has resolved the problem. I tested both HTTP and HTTPS. I see no exceptions in the logs and my client works as expected. Thanks for your help."}, {"count": 36, "tags": [], "text": "The fix will be in 8.0.29, committed as r1712081. You should drop your test patch since the debug exception will impact performance. Thanks for the testing.", "attachment_id": null, "id": 186201, "creator": "remm@apache.org", "time": "2015-11-02T16:55:15Z", "bug_id": 57799, "creation_time": "2015-11-02T16:55:15Z", "is_private": false}]