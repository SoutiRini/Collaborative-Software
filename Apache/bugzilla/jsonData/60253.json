[{"attachment_id": null, "tags": [], "bug_id": 60253, "is_private": false, "count": 0, "id": 194407, "time": "2016-10-14T06:38:43Z", "creator": "onealj@apache.org", "creation_time": "2016-10-14T06:38:43Z", "text": "From Blake Watson via user@ mailing list on 2016-10-12:\nBetween 3.14 and 3.15 the return from .prettyPrint, when passed a ValidationConstraint with a list range in it changed. This appears not to\nbe noted in the Changes log.\n\nFormerly, a list would be returned as:\n\nlist [$A$1:$Z$26]\n\nAnd is now returned as:\n\nlist \"$A$1:$Z$26\"\n\n\u200bBrackets replaced with quotes."}, {"count": 1, "tags": [], "creator": "onealj@apache.org", "attachment_id": null, "text": "This changed was introduced in r1749129 [1] as part of bug 59719 and may or may not have been intentional.\n\n> -    final String QUOTE = \"\";\n> +\n>      if (validationType == ValidationType.LIST && explicitListOfValues != null) {\n>          builder.append(QUOTE).append(Arrays.asList(explicitListOfValues)).append(QUOTE).append(' ');\n>      } else {\n>          builder.append(QUOTE).append(formula1).append(QUOTE).append(' ');\n>      }\n>      if (formula2 != null) {\n>          builder.append(QUOTE).append(formula2).append(QUOTE).append(' ');\n>      }\n\nI removed the empty-string QUOTE variable, replacing it with a class-scoped QUOTE variable (defined as a double-quote), thinking that it was a mistake. I have reverted this in r1764822.\n\nThe other change was in the constructor when parsing the formula. This change was made to handle parsing of static list text.\n\n>   //FIXME: Need to confirm if this is not a formula.\n> - if( ValidationType.LIST==validationType) {\n> -         explicitListOfValues = formula1.split(\",\");\n> + // empirical testing shows Excel saves explicit lists surrounded by double quotes, \n> + // range formula expressions can't start with quotes (I think - anyone have a creative counter example?)\n> + if( ValidationType.LIST==validationType\n> +         && formula1 != null\n> +         && formula1.startsWith(QUOTE)\n> +         && formula1.endsWith(QUOTE) ) {\n> +     final String formulaWithoutQuotes = formula1.substring(1, formula1.length()-1);\n> +     explicitListOfValues = LIST_SPLIT_REGEX.split(formulaWithoutQuotes);\n>   }\n\n> Brackets replaced with quotes\nThe only way this could be happening is if\n> builder.append(QUOTE).append(formula1).append(QUOTE).append(' ');\nis executing instead of\n> builder.append(QUOTE).append(Arrays.asList(explicitListOfValues)).append(QUOTE).append(' ');\n\nIf \"$A$1:$Z$26\" is meant to be a range reference, per bug 59719 Excel would save this formula without quotes and prettyPrint would not include brackets\n> list $A$1:$Z$26\nIf \"$A$1:$Z$26\" is meant to be a text list literal, per bug 59719 Excel would save this formula with quotes and prettyPrint would include brackets\n> list [$A$1:$AZ26]\n\nI'll leave this open for discussion to decide what the correct behavior here is.\n\nI made a few additional changes in r1764831.\n\n[1] https://svn.apache.org/viewvc/poi/trunk/src/ooxml/java/org/apache/poi/xssf/usermodel/XSSFDataValidationConstraint.java?r1=947644&r2=1749129", "id": 194409, "time": "2016-10-14T08:10:58Z", "bug_id": 60253, "creation_time": "2016-10-14T08:10:58Z", "is_private": false}]