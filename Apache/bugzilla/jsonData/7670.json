[{"count": 0, "tags": [], "bug_id": 7670, "attachment_id": null, "is_private": false, "id": 12645, "time": "2002-04-01T20:00:40Z", "creator": "Ryan.Lubke@Sun.COM", "creation_time": "2002-04-01T20:00:40Z", "text": "Section 8.8, page 8-86 states that if the <fmt:requestEncoding> action has no\nvalue attribute specified, that the encoding to be used is determined using the\nfollowing algorithm:\n   - If the Content-Type request header is defined, use the value defined\n     by the header.\n   - If no Content-Type header, use the value associated with the scoped variable\n     javax.servlet.jsp.jstl.fmt.request.charset.\n   - If none of the above conditions are satisfied, use the default of ISO-8859-1.\n\nThere are two problems, both located in\norg.apache.taglibs.standard.tag.common.fmt.RequestEncodingSupport:\n\n  1.  The character encoding as specified by a Content-Type header is \n      never considered.\n\n  2.  If the javax.servlet.jsp.jstl.fmt.request.charset attribute is not\n      set, the default encoding is not applied.\n\nBelow is a possible fix for the issue:\n\n*******************************************************************************\nIndex: RequestEncodingSupport.java\n===================================================================\nRCS file:\n/home/cvs/jakarta-taglibs/standard/src/org/apache/taglibs/standard/tag/common/fmt/RequestEncodingSupport.java,v\nretrieving revision 1.3\ndiff -u -r1.3 RequestEncodingSupport.java\n--- RequestEncodingSupport.java 1 Feb 2002 01:16:47 -0000   1.3\n+++ RequestEncodingSupport.java 1 Apr 2002 18:47:45 -0000\n@@ -77,6 +77,8 @@\n     static final String REQUEST_CHAR_SET =\n    \"javax.servlet.jsp.jstl.fmt.request.charset\";\n\n+    static final String DEFAULT_ENCODING = \"ISO-8859-1\";\n+\n\n     //*********************************************************************\n     // Protected state\n@@ -101,24 +103,35 @@\n     // Tag logic\n\n     public int doEndTag() throws JspException {\n-   if ((value == null)\n-         && (pageContext.getRequest().getCharacterEncoding() == null)) {\n-       /*\n-        * no charset specified in tag or defined in request Content-Type\n-        * header\n-        */\n-       value = (String) pageContext.findAttribute(REQUEST_CHAR_SET);\n-   }\n\n-   if (value != null) {\n+        String reqEnc = pageContext.getRequest().getCharacterEncoding();\n+\n+        if (value == null && reqEnc != null) {\n+            /*\n+             * no charset specified in tag, but it was specified in\n+             * the request's Content-Type header\n+             */\n+            value = reqEnc;\n+        } else if (value == null && reqEnc == null) {\n+           /*\n+            * no charset specified in tag or defined in request Content-Type\n+            * header\n+            */\n+           value = (String) pageContext.findAttribute(REQUEST_CHAR_SET);\n+            if (value == null) {\n+                \n+                // use the default encoding for the request\n+                value = DEFAULT_ENCODING;\n+            }\n+       }\n+\n        try {\n-       pageContext.getRequest().setCharacterEncoding(value);\n+           pageContext.getRequest().setCharacterEncoding(value);\n        } catch (UnsupportedEncodingException uee) {\n-       throw new JspTagException(uee.getMessage());\n+           throw new JspTagException(uee.getMessage());\n        }\n-   }\n\n-   return EVAL_PAGE;\n+       return EVAL_PAGE;\n     }\n\n     // Releases any resources we may have (or inherit)\n**********************************************************"}, {"count": 1, "tags": [], "bug_id": 7670, "text": "Fixed.\n", "id": 12648, "time": "2002-04-01T20:23:33Z", "creator": "jan.luehe@sun.com", "creation_time": "2002-04-01T20:23:33Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "text": "Agree with problem 2 (default encoding not applied) in the bug description\nsection, but not problem 1 (\"The character encoding as specified by a\nContent-Type header is never considered.\").\n\nIn the case where the request already specifies a char encoding, we should not\nhave to do anything, since retrieving the request encoding using\n\n  pageContext.getRequest().getCharacterEncoding()\n\nand then setting it using\n\n  pageContext.getRequest().setCharacterEncoding(value);\n\nshould be redundant.\n\nFixed problem 1.", "attachment_id": null, "id": 12715, "creator": "jan.luehe@sun.com", "time": "2002-04-02T23:00:32Z", "bug_id": 7670, "creation_time": "2002-04-02T23:00:32Z", "is_private": false}]