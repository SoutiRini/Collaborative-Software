[{"count": 0, "tags": [], "bug_id": 56454, "attachment_id": 31556, "id": 174847, "time": "2014-04-24T16:24:36Z", "creator": "js_nospam_apache@gmx.de", "creation_time": "2014-04-24T16:24:36Z", "is_private": false, "text": "Created attachment 31556\nTest case demonstrating the problem.\n\nXSSFSheet.shiftRows(...) and HSSFSheet.shiftRows(...) incorrectly handle merged regions starting above the first row to shift containing the shifted row, depending on the first column of the merged region.\n\nIf the merged region does not contain column 0, the region gets (incorrectly) shifted.\n\nConsider the following example:\n\nCase 1:\n\n- Create merged region in A2:B5 (starting at row 3 col 0, ending at row 6 col 1)\n- Shift row 4 down 1 row: sheet.shiftRows(3, sheet.getLastRowNum(), n);\n\nCase 2:\n\n- Create merged region in B2:C5 (starting at row 3 col 1, ending at row 6 col 2)\n- Shift row 4 down 1 row: sheet.shiftRows(3, sheet.getLastRowNum(), n);\n\nObserved Result:\n\nIn case 1, the merged region is still starting at row 3. In case 2, it starts at row 4.\n\nExpected result:\n\nMerged region should still be starting at row 3 in both cases.\n\n\n\nThe reason for this behaviour is in XSSFRowShifter line 69:\n\nif (!containsCell(merged, startRow - 1, 0) && !containsCell(merged, endRow + 1, 0)) {\n\nThe check for column 0 should not be there. Instead, the line should look like this:\n\nif (!containsRow(merged, startRow - 1) && !containsRow(merged, endRow + 1)) {\n\nA similar check is done in HSSFSheet Line 1286 (using SheetUtil.containsCell(...))."}, {"count": 1, "tags": [], "bug_id": 56454, "is_private": false, "id": 186819, "attachment_id": null, "creator": "onealj@apache.org", "creation_time": "2015-12-06T20:54:37Z", "time": "2015-12-06T20:54:37Z", "text": "Thanks for finding this bug and providing a code to reproduce this bug. This bug still exists in POI 3.14beta1. I have added a failing unit test in r1718217."}, {"count": 2, "tags": [], "bug_id": 56454, "is_private": false, "id": 186820, "attachment_id": 33328, "creator": "onealj@apache.org", "creation_time": "2015-12-06T21:08:52Z", "time": "2015-12-06T21:08:52Z", "text": "Created attachment 33328\nProgress towards a fix\n\nUpon closer inspection, handling of sheet shifting has several issues besides ignoring merged regions that don't include the first column.\n\nDepending on the shifted rows, merged regions may shift (if the merged region is fully contained inside the source move rows), shrink from the top if the first row is a source row and the shift direction is down, shrink from the bottom if the last row is a source row and the shift direction is up, expand from the top if the first row is a source row and the shift direction is up, expand from the top if the last row is a source row and the shift direction is down, or remove the merged region if there is a conflict (merged region in destination or some of merged regions from the source are moved outside the merged region). The current code only handles the first case, where the entire merged region shifts.\n\nI've updated XSSFRowShifter to handle most of these cases. Many more unit tests are needed before this can be committed, then the logic in XSSFRowShifter.shiftMerged can be copied over to HSSFSheet."}, {"count": 3, "tags": [], "bug_id": 56454, "is_private": false, "id": 186821, "attachment_id": 33329, "creator": "onealj@apache.org", "creation_time": "2015-12-06T21:18:18Z", "time": "2015-12-06T21:18:18Z", "text": "Created attachment 33329\nProgress towards a fix\n\nrebase to r1718223"}, {"count": 4, "tags": [], "bug_id": 56454, "is_private": false, "id": 186822, "attachment_id": 33330, "creator": "onealj@apache.org", "creation_time": "2015-12-06T21:29:06Z", "time": "2015-12-06T21:29:06Z", "text": "Created attachment 33330\nProgress towards a fix"}, {"count": 5, "tags": [], "bug_id": 56454, "attachment_id": null, "text": "r1749239 add CellRangeAddress#containsRow and containsColumn\nr1749246 add disabled unit test\nr1749247 HSSF: replace containsCell with containsRow so that merged region doesn't have to contain column 0. (still not the correct behavior)", "id": 191808, "time": "2016-06-20T01:50:49Z", "creator": "onealj@apache.org", "creation_time": "2016-06-20T01:50:49Z", "is_private": false}]