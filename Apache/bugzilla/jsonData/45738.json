[{"count": 0, "tags": [], "text": "Created attachment 22524\nDocument with 2 shapes (the second is a group)\n\nOffice Art shapes (rectangles, circles, arrows, shape groups, etc.) are coded into Word documents in a PlexOfCps that starts at fib.getFcPlcspaMom(), ends at fib.getLcbPlcspaMom() and is made of structures 26 bytes wide. I've written some patch code to access these data by:\n\n\n1) adding to \"usermodel\" package the class\n\npackage org.apache.poi.hwpf.usermodel;\n\nimport org.apache.poi.hwpf.model.GenericPropertyNode;\nimport org.apache.poi.util.LittleEndian;\n\npublic class Shape {\n\tint _id, _left, _right, _top, _bottom;\n\tboolean _inDoc; //true if the Shape bounds are within document (for example, it's false if the image left corner is outside the doc, like for embedded documents)\n\t\n\tpublic Shape(GenericPropertyNode nodo) {\n\t\tbyte [] contenuto = nodo.getBytes();\n\t\t_id = LittleEndian.getInt(contenuto);\n\t\t_left = LittleEndian.getInt(contenuto, 4);\n\t\t_top = LittleEndian.getInt(contenuto, 8);\n\t\t_right = LittleEndian.getInt(contenuto, 12);\n\t\t_bottom = LittleEndian.getInt(contenuto, 16);\n\t\t_inDoc = (_left >= 0 && _right >= 0 && _top >= 0 && _bottom >= 0);\n\t}\n\t\n\tpublic int getId() {\n\t\treturn _id;\n\t}\n\t\n\tpublic int getLeft() {\n\t\treturn _left;\n\t}\n\t\n\tpublic int getRight() {\n\t\treturn _right;\n\t}\n\t\n\tpublic int getTop() {\n\t\treturn _top;\n\t}\n\t\n\tpublic int getBottom() {\n\t\treturn _bottom;\n\t}\n\t\n\tpublic int getWidth() {\n\t\treturn _right - _left + 1;\n\t}\n\t\n\tpublic int getHeight() {\n\t\treturn _bottom - _top + 1;\n\t}\n\t\n\tpublic boolean isWithinDocument() {\n\t\treturn _inDoc;\n\t}\n}\n\n2) adding to \"model\" package the class\n\npackage org.apache.poi.hwpf.model;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport org.apache.poi.hwpf.usermodel.Shape;\n\npublic class ShapesTable {\n\tprivate List<Shape> _shapes;\n\tprivate List<Shape> _shapesVisibili;  //holds visible shapes\n\t\n\tpublic ShapesTable(byte [] tblStream, FileInformationBlock fib) {\n\t\tPlexOfCps binTable = new PlexOfCps(tblStream, fib.getFcPlcspaMom(), fib.getLcbPlcspaMom(), 26);\n\t\t\n\t\t_shapes = new ArrayList<Shape>();\n\t\t_shapesVisibili = new ArrayList<Shape>();\n\t\t\n\n\t\tfor(int i = 0; i < binTable.length(); i++) {\n\t\t\tGenericPropertyNode nodo = binTable.getProperty(i);\n\t\t\t\n\t\t\tShape sh = new Shape(nodo);\n\t\t\t_shapes.add(sh);\n\t\t\tif(sh.isWithinDocument())\n\t\t\t\t_shapesVisibili.add(sh);\n\t\t}\n\t}\n\t\n\tpublic List<Shape> getAllShapes() {\n\t\treturn _shapes;\n\t}\n\t\n\tpublic List<Shape> getVisibleShapes() {\n\t\treturn _shapesVisibili;\n\t}\n}\n\n3) editing the HWPFDocument class, adding in the constructor\n\npublic HWPFDocument(DirectoryNode directory, POIFSFileSystem pfilesystem) throws IOException\n\nthe declaration\n\n/** Holds Office Art objects */\nprotected ShapesTable _officeArts;\n\nand the line (for example after the _pictures stream reading line)\n\n_officeArts = new ShapesTable(_tableStream, _fib);\n\nwhich reads shapes data from doc table stream\n\n4) I've also written a simple main method to test this\n\npublic static void main(String[] args)\n  {\n          try\n          {\n\n        \t  JFileChooser jfc = new JFileChooser();\n\n                int esito = jfc.showOpenDialog(null);\n\n                if(esito != JFileChooser.APPROVE_OPTION)\n                {\n                        JOptionPane.showMessageDialog(null, \"No file selected\");\n                }\n                else\n                {\n                        String path = jfc.getSelectedFile().getAbsolutePath();\n\n                        HWPFDocument doc = new HWPFDocument(new FileInputStream(path));\n                        Range r = doc.getRange();\n                        \n                        List<Shape> shapes = doc.getShapesTable().getAllShapes();\n                        \n                        for(Shape shp: shapes)\n                        \tSystem.out.println(\"SHAPE \" + shp.getWidth() + \"x\" + shp.getHeight() + \", WITHIN DOC=\" + shp.isWithinDocument());\n                }\n          }\n          catch(Exception er)\n          {\n                  er.printStackTrace();\n          }\n  }\n\nthat can be tried with the attached doc\n\n5) Perhaps the MS Open Specification Promise initiative can be helpful? They have published all Office doc specs...\n\nHope this helps :D", "is_private": false, "bug_id": 45738, "id": 120337, "time": "2008-09-04T02:08:46Z", "creator": "domenico.napoletano@exprivia.it", "creation_time": "2008-09-04T02:08:46Z", "attachment_id": 22524}, {"count": 1, "attachment_id": null, "bug_id": 45738, "is_private": false, "id": 120422, "time": "2008-09-07T11:35:06Z", "creator": "apache@gagravarr.org", "creation_time": "2008-09-07T11:35:06Z", "tags": [], "text": "Thanks for this patch, I've applied it to svn, along with a simple unit test\n\nIn terms of the OSP docs, yes they are useful. They do make it much quicker now to add new basic features. Alas what we now lack is enough developers to make use of it all."}]