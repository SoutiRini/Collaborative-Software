[{"count": 0, "tags": [], "bug_id": 60959, "attachment_id": null, "text": "The CELL_TYPE_NUMERIC doesn't produce the numeric cell type and rather creates a cell with blank CellType.\nEvery other CellType :\nCELL_TYPE_BLANK\nCELL_TYPE_STRING\nCELL_TYPE_FORMULA\nCELL_TYPE_ERROR\nCELL_TYPE_BOOLEAN\nis working properly.\n\nThe Output of the code:\nNUMERIC BLANK\nNUMERIC BLANK\n\nNUMERIC BLANK\nSTRING STRING\nFORMULA FORMULA\n\nSTRING STRING\nBLANK BLANK\n\nNUMERIC BLANK\nBOOLEAN BOOLEAN", "id": 198185, "time": "2017-04-06T13:06:52Z", "creator": "rishiranjan.1301@gmail.com", "creation_time": "2017-04-06T13:06:52Z", "is_private": false}, {"count": 1, "tags": [], "creator": "rishiranjan.1301@gmail.com", "attachment_id": 34900, "id": 198186, "time": "2017-04-06T13:22:32Z", "bug_id": 60959, "creation_time": "2017-04-06T13:22:32Z", "is_private": false, "text": "Created attachment 34900\nThe java code which collects celltype from a cell and writes it to another cell.\r\nBut the celltype NUMERIC is inherited as blank."}, {"count": 2, "tags": [], "creator": "rishiranjan.1301@gmail.com", "attachment_id": 34901, "id": 198189, "time": "2017-04-06T13:37:48Z", "bug_id": 60959, "creation_time": "2017-04-06T13:37:48Z", "is_private": false, "text": "Created attachment 34901\nThe test xlsx file"}, {"count": 3, "tags": [], "bug_id": 60959, "attachment_id": null, "text": "*** Bug 60958 has been marked as a duplicate of this bug. ***", "id": 198195, "time": "2017-04-06T16:24:42Z", "creator": "onealj@apache.org", "creation_time": "2017-04-06T16:24:42Z", "is_private": false}, {"count": 4, "tags": [], "text": "What happens when you copy the cell value rather than copying the cell type without the value?", "is_private": false, "id": 198197, "creation_time": "2017-04-06T16:28:22Z", "time": "2017-04-06T16:28:22Z", "creator": "onealj@apache.org", "bug_id": 60959, "attachment_id": null}, {"count": 5, "tags": [], "creator": "dominik.stadler@gmx.at", "attachment_id": null, "id": 198942, "time": "2017-05-29T19:51:42Z", "bug_id": 60959, "creation_time": "2017-05-29T19:51:42Z", "is_private": false, "text": "This is kind of \"on purpose\" right now:\n\n    private CellType XSSFCell.getBaseCellType(boolean blankCells) {\n        switch (_cell.getT().intValue()) {\n            case STCellType.INT_N:\n                if (!_cell.isSetV() && blankCells) {\n                    // ooxml does have a separate cell type of 'blank'.  A blank cell gets encoded as\n                    // (either not present or) a numeric cell with no value set.\n                    // The formula evaluator (and perhaps other clients of this interface) needs to\n                    // distinguish blank values which sometimes get translated into zero and sometimes\n                    // empty string, depending on context\n                    return CellType.BLANK;\n                }\n                return CellType.NUMERIC;\n\n\nSo a workaround is to set a value of \"0\" via\n\n                if(addd == CellType.NUMERIC) {\n                    cell2.setCellValue(0.0);\n                }\n\nA potential \"fix\" would be to set a zero-value at XSSFCell.setCellType():\n\n                if(!_cell.isSetV()) {\n                    _cell.setV(\"0.0\");\n                }\n\nHowever there are likely some side-effects of doing so..."}]