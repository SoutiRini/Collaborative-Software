[{"count": 0, "tags": [], "creator": "jglick@apache.org", "attachment_id": null, "id": 86262, "creation_time": "2006-02-27T20:38:21Z", "time": "2006-02-27T20:38:21Z", "bug_id": 38799, "text": "A general problem with <junit> has come up repeatedly, as described well here:\n\nhttp://issues.apache.org/bugzilla/show_bug.cgi?id=6606#c22\n\nI am splitting this off into a separate issue as #6606 seems to have a lot of\nother meanings and I want to be concrete.\n\nThe problem is that if you have ant-junit.jar in your Ant lib dir (the default\nsituation if you have installed Ant) but you do not have junit.jar in your Ant\nlib dir or $CLASSPATH or -lib etc. (again, the default situation), the <junit>\ntask does not work. This is true even if you have explicitly added junit.jar to\nthe <classpath> for the task (<junit>, not <taskdef> which cannot work on a task\nalready in your lib dir). That doesn't make much sense and it imposes an\nartificial requirement on people to adjust their Ant startup classpath. That\nmeans that you cannot write a completely self-contained Ant project that runs\nunit tests.\n\nThis patch fixes that. While I cannot find Tobias' original proposed patch, I\nthink this accomplishes as much, and furthermore works in unforked mode.\n\nI'm not really sure how to unit-test this since the Ant unit tests assume a lot\nof environment is set up, and specifically they will assume that junit.jar is on\nthe test classpath. So I'm relying on manual testing of various situations:\n\n1. Forked mode vs. unforked mode.\n\n2. junit.jar on system CP vs. not.\n\n3. junit.jar in test <classpath> vs. not.\n\nDesired behavior is that tests run fine if either #2 or #3 or both. (If neither,\na simple error is reported.) Current behavior is that tests do not run if #3 but\nnot #2.\n\nCompatibility: unless I made a mistake, should be fully compatible. Any build\nscripts which worked before should continue to work the same way: junit.jar must\nhave been on system CP, and <junit> will behave as it did previously. The change\nshould only affect situations where junit.jar was not on system CP, which could\nnot have worked before.\n\nThe patch is a bit icky since it needs to use some reflection to isolate the\njunit.jar-dependent portions of the task. The result is mostly transparent and\nshould not harm existing code subclassing some of the classes in this package, I\nthink, but it does add some to the complexity of this task. Perhaps someone\nknowledgeable could simplify it but I was afraid of breaking foreign code\nreferring to these classes, which are all public. Note that since both \"halves\"\nof the task remain in the same source root, the compiler does not enforce the\nseparation - a full fix would move the junit.jar-dependent classes to a separate\nsource root, to ensure that they are not statically accessible from the main\nsource root, and ideally even to put them in a separate JAR file at runtime.", "is_private": false}, {"text": "Created attachment 17802\nWorking patch\n\nDoes not include docs, WHATSNEW, @since, etc. Needs further testing, possibly\nrefinement.", "tags": [], "creator": "jglick@apache.org", "is_private": false, "count": 1, "id": 86265, "time": "2006-02-27T20:40:58Z", "bug_id": 38799, "creation_time": "2006-02-27T20:40:58Z", "attachment_id": 17802}, {"count": 2, "tags": [], "text": "*** Bug 1118 has been marked as a duplicate of this bug. ***", "is_private": false, "id": 86269, "creator": "jglick@apache.org", "time": "2006-02-27T20:43:07Z", "bug_id": 38799, "creation_time": "2006-02-27T20:43:07Z", "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 38799, "attachment_id": null, "id": 86272, "time": "2006-02-27T20:43:44Z", "creator": "jglick@apache.org", "creation_time": "2006-02-27T20:43:44Z", "is_private": false, "text": "*** Bug 7081 has been marked as a duplicate of this bug. ***"}, {"count": 4, "tags": [], "creator": "jglick@apache.org", "attachment_id": null, "text": "*** Bug 14931 has been marked as a duplicate of this bug. ***", "id": 86276, "time": "2006-02-27T20:44:22Z", "bug_id": 38799, "creation_time": "2006-02-27T20:44:22Z", "is_private": false}, {"count": 5, "attachment_id": null, "bug_id": 38799, "text": "*** Bug 33440 has been marked as a duplicate of this bug. ***", "id": 86278, "time": "2006-02-27T20:44:28Z", "creator": "jglick@apache.org", "creation_time": "2006-02-27T20:44:28Z", "tags": [], "is_private": false}, {"count": 6, "tags": [], "creator": "jglick@apache.org", "attachment_id": null, "id": 86281, "creation_time": "2006-02-27T20:45:00Z", "time": "2006-02-27T20:45:00Z", "bug_id": 38799, "text": "*** Bug 36862 has been marked as a duplicate of this bug. ***", "is_private": false}, {"count": 7, "attachment_id": 17805, "bug_id": 38799, "is_private": false, "id": 86285, "time": "2006-02-27T23:00:05Z", "creator": "jglick@apache.org", "creation_time": "2006-02-27T23:00:05Z", "tags": [], "text": "Created attachment 17805\nManual test case\n\nTries various combinations of options:\n\n1. Ant 1.6.5 vs. patched Ant 1.7.\n\n2. JUnit 3 vs. 4.\n\n3. junit.jar in $CLASSPATH or not.\n\n4. junit.jar in <classpath> or not.\n\n5. fork=\"true\" vs. fork=\"false\".\n\n6. Custom <formatter> or not.\n\nSome paths hardcoded at top of file."}, {"count": 8, "tags": [], "bug_id": 38799, "attachment_id": null, "id": 86286, "time": "2006-02-27T23:28:54Z", "creator": "jglick@apache.org", "creation_time": "2006-02-27T23:28:54Z", "is_private": false, "text": "revision 381467\n\nLet's see if any regressions are found.\n\nAlso tested successfully inside NetBeans IDE 5.0, to make sure the same fix\nworks even inside a container with its own class loaders etc. Had to install a\nmodule containing a JAR entry\n\n---%<---META-INF/services/org.apache.tools.ant.module.spi.AutomaticExtraClasspathProvider\n#-org.netbeans.modules.junit.JUnitClasspathProvider\n---%<---\n\nwhich suppresses the IDE's normal inclusion of junit.jar into the Ant classpath.\nThen when running without -J-Xverify:none (which sometimes makes even 1.6.5\nwork, if it happens not to try to load any junit.** classes), Ant 1.6.5 inside\nthe IDE fails on a plain Java project with unit tests but patched 1.7 succeeds,\nincl. with JUnit 4."}, {"count": 9, "tags": [], "text": "Excellent. This has been a big annoyance for a lot of people.\n\n> Note that since both \"halves\" of the task remain in \n> the same source root, the compiler does not enforce the\n> separation - a full fix would move the junit.jar-dependent \n> classes to a separate source root\n\nYou could use jdepend to enforce the separation.\n(http://clarkware.com/software/JDepend.html)", "attachment_id": null, "id": 88579, "creator": "ant@tobiasen.dk", "time": "2006-04-27T20:28:22Z", "bug_id": 38799, "creation_time": "2006-04-27T20:28:22Z", "is_private": false}]