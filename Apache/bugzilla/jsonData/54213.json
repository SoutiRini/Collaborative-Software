[{"count": 0, "tags": [], "creator": "lucene@mikemccandless.com", "text": "Created attachment 29644\nExtracted 1.xls file\n\nThis is a spinoff from https://issues.apache.org/jira/browse/TIKA-1033\n\nI used Tika to extract embedded documents from the attached emb.ppt.  One of those documents is a chart, and Tika detects it as an excel document and TikaCLI -z saves it as 1.xls (attached).\n\nBut when I try to parse the 1.xls with Tika it hits an exception:\n\nException in thread \"main\" org.apache.tika.exception.TikaException: Unexpected RuntimeException from org.apache.tika.parser.microsoft.OfficeParser@4eaf6cb1\n\tat org.apache.tika.parser.CompositeParser.parse(CompositeParser.java:244)\n\tat org.apache.tika.parser.CompositeParser.parse(CompositeParser.java:242)\n\tat org.apache.tika.parser.AutoDetectParser.parse(AutoDetectParser.java:120)\n\tat org.apache.tika.cli.TikaCLI$OutputType.process(TikaCLI.java:138)\n\tat org.apache.tika.cli.TikaCLI.process(TikaCLI.java:399)\n\tat org.apache.tika.cli.TikaCLI.main(TikaCLI.java:121)\nCaused by: org.apache.poi.hssf.record.RecordFormatException: Unable to construct record instance\n\tat org.apache.poi.hssf.record.RecordFactory$ReflectionConstructorRecordCreator.create(RecordFactory.java:65)\n\tat org.apache.poi.hssf.record.RecordFactory.createSingleRecord(RecordFactory.java:301)\n\tat org.apache.poi.hssf.record.RecordFactoryInputStream.readNextRecord(RecordFactoryInputStream.java:285)\n\tat org.apache.poi.hssf.record.RecordFactoryInputStream.nextRecord(RecordFactoryInputStream.java:251)\n\tat org.apache.poi.hssf.eventusermodel.HSSFEventFactory.genericProcessEvents(HSSFEventFactory.java:143)\n\tat org.apache.poi.hssf.eventusermodel.HSSFEventFactory.processEvents(HSSFEventFactory.java:106)\n\tat org.apache.tika.parser.microsoft.ExcelExtractor$TikaHSSFListener.processFile(ExcelExtractor.java:292)\n\tat org.apache.tika.parser.microsoft.ExcelExtractor.parse(ExcelExtractor.java:144)\n\tat org.apache.tika.parser.microsoft.OfficeParser.parse(OfficeParser.java:194)\n\tat org.apache.tika.parser.microsoft.OfficeParser.parse(OfficeParser.java:161)\n\tat org.apache.tika.parser.CompositeParser.parse(CompositeParser.java:242)\n\t... 5 more\nCaused by: org.apache.poi.hssf.record.RecordFormatException: Not enough data (0) to read requested (2) bytes\n\tat org.apache.poi.hssf.record.RecordInputStream.checkRecordPosition(RecordInputStream.java:216)\n\tat org.apache.poi.hssf.record.RecordInputStream.readShort(RecordInputStream.java:233)\n\tat org.apache.poi.hssf.record.WindowOneRecord.<init>(WindowOneRecord.java:71)\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:525)\n\tat org.apache.poi.hssf.record.RecordFactory$ReflectionConstructorRecordCreator.create(RecordFactory.java:57)\n\t... 15 more\n\nHowever, Excel 2007 also cannot open 1.xls ... so I'm not sure where the bug really is (Tika's extraction of 1.xls from emb.ppt, or Tika/POI's parsing of 1.xls).", "id": 163681, "time": "2012-11-27T16:20:06Z", "bug_id": 54213, "creation_time": "2012-11-27T16:20:06Z", "is_private": false, "attachment_id": 29644}, {"count": 1, "tags": [], "bug_id": 54213, "text": "Created attachment 29645\nemb.ppt that contains embedded  chart/excel document", "id": 163682, "time": "2012-11-27T16:20:47Z", "creator": "lucene@mikemccandless.com", "creation_time": "2012-11-27T16:20:47Z", "is_private": false, "attachment_id": 29645}, {"count": 2, "tags": [], "bug_id": 54213, "attachment_id": null, "id": 163691, "time": "2012-11-28T08:47:34Z", "creator": "yegor@dinom.ru", "creation_time": "2012-11-28T08:47:34Z", "is_private": false, "text": "The raw object is a MSGraph.Chart, not a Excel workbook. Don't be misled by the stream name \"Workbook\" - it is just a format convention.  \n\nThe MSGraph.Chart format is a derivative from BIFF8. The content stream consists of records but the structure and length of the records *CAN* be totally different from their analogues in the binary .xls format.   \n\nFor example, POI-HSSF parser detects record with sid=0x3d as WindowOneRecord and expects that such a record consists of nine shorts and has size of 18 bytes (9 fields of 2 bytes each) .  \n\nthe MSGraph.Chart format is different: depending on the position of WindowOneRecord  in the stream it can be either 18 bytes (nine two-byte fields) or 10 bytes (five two-byte fields), see section 2.4.104 in [MS-OGRAPH].pdf\n\nI found similar discrepancies for SelectionRecord (0x001D) and LinkedDataRecord (0x1051).  \n\nAll this means that using HSSF to parse MSGraph.Chart is not quite correct. It is a special case you need a special parser to handle it. \n\nWhat information do you need to extract from embedded charts? Series text and data labels? What else ? \n\nI'm thinking of a special record factory and a even-driven parser that will read only specific bits of data. We may need to extend current API to support it.\n\nRegards,\nYegor"}, {"count": 3, "tags": [], "bug_id": 54213, "text": "Interesting, all news to me!\n\nIs there an easy way that you know to tell if a file containing a Workbook entry is really an Excel file, or instead a MSGraph.Chart? We'll need that logic for Tika", "id": 163692, "time": "2012-11-28T09:58:59Z", "creator": "apache@gagravarr.org", "creation_time": "2012-11-28T09:58:59Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 54213, "attachment_id": null, "id": 163694, "time": "2012-11-28T11:17:27Z", "creator": "yegor@dinom.ru", "creation_time": "2012-11-28T11:17:27Z", "is_private": false, "text": "I don't know an easy way to tell MSGraph.Chart from a real Excel file.  For embedded documents Tika should always check ProgID, this property is stored in the host container. \n\nIn this particular case you are reading embedded data from a .ppt file and you should check OLEShape#getProgID(). For Excel it should return \"Worksheet\", for Word - \"Document\", for MSGraph - \"MSGraph.Chart\", etc. One problem is that ProgID can contain suffix, e.g. \"MSGraph.Chart.8\" so it should be a regex check or \"startWith\" logic. \n\n\n\n(In reply to comment #3)\n> Interesting, all news to me!\n> \n> Is there an easy way that you know to tell if a file containing a Workbook\n> entry is really an Excel file, or instead a MSGraph.Chart? We'll need that\n> logic for Tika"}, {"count": 5, "tags": [], "creator": "lucene@mikemccandless.com", "attachment_id": null, "id": 163695, "time": "2012-11-28T11:34:21Z", "bug_id": 54213, "creation_time": "2012-11-28T11:34:21Z", "is_private": false, "text": "Thanks Yegor!\n\n> What information do you need to extract from embedded charts? Series text and data labels? What else ?\n\nI think series text and data labels would be awesome ... maybe also the data values themselves if possible ... I'm not sure what other textual elements an MSGraph.Chart can have (title?)."}]