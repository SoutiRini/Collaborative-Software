[{"count": 0, "tags": [], "bug_id": 14734, "attachment_id": null, "is_private": false, "id": 26693, "time": "2002-11-21T13:21:41Z", "creator": "micky@eunet.yu", "creation_time": "2002-11-21T13:21:41Z", "text": "Hi,I digged around HPSF and found the following bug. Word 8.0/97 docs \nDocumentSummaryInformation have 2 sections, but getCategory() (Category is \nlocated within the section with index 0) (implicitly) calls GetSingleSection() \nwhich throws an exception if sectionCount != 1. Word 6.0/95 has single section \nand this works fine. Here's my solution to the problem until you find a better \nway... Than my class can be simply removed and everything will work ok... After \nputting the code below through this form it may need some beautifying \n(indentation)...\n\nRegards, \nMickey\n\n<code>\n\n    /**\n     * This class is a manual work around HPSF\n     * <NOBR>DocumentSummaryInformation.getCategory()</NOBR> bug. This method \ncalls \n     * <NOBR>getProperty();</NOBR> which further calls\n     * <NOBR>getSingleSection().getProperty();</NOBR>. Now, \n<NOBR>getSingleSection()</NOBR>\n     * throws a <I>NoSingleSectionException</I> for <NOBR>Word 8.0/97-\n2000</NOBR> documents\n     * because these have two sections and only one is expected. Here's the \nstack trace: <BR>\n     * <PRE>\n     * org.apache.poi.hpsf.NoSingleSectionException: Property set contains 2 \nsections.\n     *     at org.apache.poi.hpsf.PropertySet.getSingleSection(PropertySet.java)\n     *     at org.apache.poi.hpsf.SpecialPropertySet.getSingleSection\n(SpecialPropertySet.java)\n     *     at org.apache.poi.hpsf.PropertySet.getProperty(PropertySet.java)\n     *     at org.apache.poi.hpsf.DocumentSummaryInformation.getCategory\n(DocumentSummaryInformation.java)\n     * </PRE>\n     *\n     * @author  Miroslav Obradovic (micky@eunet.yu)\n     */\n    public class MyDocumentSummaryInformation extends \nDocumentSummaryInformation {\n        \n        /**\n         * Creates a DocumentSummaryInformation from a given PropertySet.\n         */\n        public MyDocumentSummaryInformation(final PropertySet ps) \n                throws org.apache.poi.hpsf.UnexpectedPropertySetTypeException {\n            \n            super(ps);\n        }\n        \n        /**\n         * Returns the stream's category (or <code>null</code>).\n         */\n        public String getCategory() {\n            \n            int pid = \norg.apache.poi.hpsf.wellknown.PropertyIDMap.PID_CATEGORY;  // equals 2\n            String category = null;\n            \n            List sections = getSections();\n            int sectionCount = (int) getSectionCount();\n            org.apache.poi.hpsf.Section section = null;\n            org.apache.poi.hpsf.Property[] properties = null;\n            \n            // Iterate through sections, get their properties and look for \nCategory.\n            // Category should be found in the section with index 0.\n            for (int i = 0; i < sectionCount; i++) {\n                \n                try {\n                    \n                    // Get the current section.\n                    section = (org.apache.poi.hpsf.Section) sections.get(i);\n                    \n                    // Get section properties and look for Category.\n                    properties = section.getProperties();\n                    for (int j = 0; j < properties.length; j++) {\n                        \n                        if (properties[j].getID() == pid) {\n                            \n                            category = (String) properties[j].getValue();\n                            break;\n                        }\n                    }\n                    \n                    // If Category found, break the loop.\n                    if (category != null) {\n                        \n                        break;\n                    }\n                    \n                } catch (Exception e) {\n                    \n                    category = null;\n                }\n            }\n            \n            return category;\n        }\n    }\n</code>"}, {"attachment_id": null, "tags": [], "creator": "klute@apache.org", "text": "Miroslav, can you please attach your Word file to this bug in Bugzilla? Or\nbetter, can you create a minimal Word file which behaves as you described? I\nneed a test case to verify the bug. Thanks!", "count": 1, "id": 26706, "time": "2002-11-21T15:43:52Z", "bug_id": 14734, "creation_time": "2002-11-21T15:43:52Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 14734, "attachment_id": null, "is_private": false, "id": 39467, "time": "2003-06-26T09:04:41Z", "creator": "klute@apache.org", "creation_time": "2003-06-26T09:04:41Z", "text": "The author of this bug did not provide a test file nor did he respond to any e-mail."}, {"attachment_id": null, "tags": [], "bug_id": 14734, "is_private": false, "count": 3, "id": 39476, "time": "2003-06-26T11:54:00Z", "creator": "micky@eunet.yu", "creation_time": "2003-06-26T11:54:00Z", "text": "\nhi there,\n\ni'm sorry for the delay. i'm not used to using these forums and stuff... i've \njust found a work-around for the problem i once had and thought it would be \nuseful if i post it, in case someone else needs it.\n\nit was long ago, but i'll try to find the sample word file.\n\nbest regards,\nmiroslav\n"}, {"attachment_id": 6990, "tags": [], "creator": "micky@eunet.yu", "is_private": false, "count": 4, "id": 39481, "time": "2003-06-26T13:48:58Z", "bug_id": 14734, "creation_time": "2003-06-26T13:48:58Z", "text": "Created attachment 6990\nhere's the java code (word document plain text content extractor) i have developed when i noticed the bug..."}, {"count": 5, "tags": [], "bug_id": 14734, "text": "Created attachment 6991\nthis is the POI library i have used for my project when noticed the bug...", "id": 39482, "time": "2003-06-26T13:52:35Z", "creator": "micky@eunet.yu", "creation_time": "2003-06-26T13:52:35Z", "is_private": false, "attachment_id": 6991}, {"count": 6, "tags": [], "text": "\nwell, here we are. i have added two attachments and here are a few words about \nthese:\n\nthe second attachment (POI library) is poi-1.5.1.jar file i used when i \nnoticed the bug (or what i think it was a bug). i don't remember the date \nwell, but i think it was the latest stable version at the moment i have \nwritten the code.\n\nthe first attachment is a part of the project i have worked on when i noticed \nthis bug. it's a content (plain text) extractor for word file format. i don't \nknow if you have something similar added to POI, but if you find this code \nuseful (there are a lot of comments in there!), you can freely use this code \n(though, it would be nice of you if you'd mention me as a developer \nsomewhere, :-) )\n\nthe problem is that there are some new Summary Info \"pages\" added with new \nversions of ms word and i think you have assumed there (in poi) that there is \nonly a single one. i guess you could use a solution similar to the one i have \nattached (in MyDocumentSummaryInfo.java), since Micro$oft can add more and \nmore of these new \"pages\" with new releases of office.\n\ni hope this was useful :-)\n\nbest regards,\nmiroslav\n\n\n\n", "is_private": false, "bug_id": 14734, "id": 39483, "time": "2003-06-26T14:07:31Z", "creator": "micky@eunet.yu", "creation_time": "2003-06-26T14:07:31Z", "attachment_id": null}, {"count": 7, "tags": [], "text": "\nsorry, i forgot to mention.\n\nthe sample word file you requested (sample.doc) is included in the first of \nthe two attachments.\n\nmickey", "attachment_id": null, "id": 39484, "creator": "micky@eunet.yu", "time": "2003-06-26T14:13:31Z", "bug_id": 14734, "creation_time": "2003-06-26T14:13:31Z", "is_private": false}, {"count": 8, "tags": [], "bug_id": 14734, "attachment_id": null, "text": "\noh, i'm the most boring man today...\ni tried to download attachments, but i guess you must know which type of \nbinary files is in it to properly download and save the file.\n\nthe first attachment should be saved as .zip (created win WinZip 8.1)\nthe second attachment should be saved as .jar\n\ni hope this is the last one :-)\nbye,\nm", "id": 39487, "time": "2003-06-26T14:20:13Z", "creator": "micky@eunet.yu", "creation_time": "2003-06-26T14:20:13Z", "is_private": false}, {"count": 9, "tags": [], "text": "The current CVS HEAD can process your sample application without any flaws. I\nsuggest an upgrade.", "is_private": false, "bug_id": 14734, "id": 44381, "time": "2003-09-20T15:35:22Z", "creator": "klute@apache.org", "creation_time": "2003-09-20T15:35:22Z", "attachment_id": null}]