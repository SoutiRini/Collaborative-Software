[{"count": 0, "tags": [], "bug_id": 37468, "attachment_id": null, "is_private": false, "id": 82392, "time": "2005-11-11T16:53:55Z", "creator": "johnp@customcall.com", "creation_time": "2005-11-11T16:53:55Z", "text": "Hi, this is the first time I've used Bugzilla, so please bare with me, because \nI've got some real bug issues here.  I've looked and looked everywhere I could \npossibly try on the internet, and I have not found any documentation on the \ninternet regarding this issue.  Actually, it's two issues (related, but most \nlikely separate issues).  I will work with anyone who's prepared to tackle \nthis problem, and I can provide screen shots, code samples (of the \nintermediate FO) or whatever it will take to fix this.  I'm working on a \ndevelopment project that will go into production soon, and I've already \nmigrated my code to the newer trunk version (just recompiled the source \nyesterday, so I'm up to date.)  I'm also running WinXP with JDK1.5, if that \nhelps.\n\nAnyway, here we go..\n\nIssue 1 (Minor) - The page regions defined on multi-column pages does not \nposition correctly, and always renders offset a specific amount.  \n\nEvery fo:region-body I set up with column-count set to more than \"1\" seems to \ncreate the column layout such that the columns on the right-hand side of the \npage are \"smushed\" into the page.  (WORKAROUND: Big hint here.)  I've found a \nworkaround that corrects this problem, and will most likely help you determine \nwhere this bug is located.  If the margin-right property for the fo:region-\nbody is recalculated, all columns display correctly (correct widths, position, \nand gaps).  From what I can gather, here is the way to determine what to \nchange the margin-right property to:  margin-right = intended-margin-right - \noffset.  offset = (column-count - 1) * column-gap.  (or, offset = num-gaps * \ncolumn-gap).\n\nExample:\nCreate a page & body with margin-left=\"0.0in\" and margin-right=\"0.0in\".  \nSpecify column-count=\"3\" and column-gap=\"0.5in\".  (This will leave 7.5in for \ncolumn space, giving columns of 2.5in each from page-edge to page-edge.)  Fill \nup the page with one block filled with any text, and watch as the right side \nof the page shows a huge margin while the left side of the page is text to the \nedge like we intended.  Now determine the offset, which is 2 gaps * 0.5in/gap \n= 1.0in.  So with our intended margin-right of 0.0, set margin-right=\"-\n1.0in\".  Voila, it runs text to the edge of the page.  Try this again with 6 \ncolumns, 0.5in gaps. That should create 5 gaps with 0.5in each, 6 columns of \n1in each.  The margin is off again, so recalculate margin-right to be \"-2.5in\" \nand again, it will display correctly.\n(I can provide my code that I'm using in my product, which shows the same \nthing above, just not as nice-looking numbers to do the math in your head \nfor.  Try it above with left-right margins set to 0.40625in (13/32in.) This \nworkaround still works.  Okay, thats enough of that issue..  It's an issue \nthat I can live with the work-around for now..  my next issue I cannot solve \nmyself, and it's a real pain.)\n\nIssue 2 (Major) - On multi-column pages, text inside fo:block with flow to the \nnext column (or page, if filled last column), but fo:table and all other \nfo:table-level-elements will not flow to the next column on the same page.\n\nFo:table will not continue to display on the current page once a break is \ndetected (or the break is determined to be page-level and not column-level, as \nit should be).  I've tried creating tables of all sizes, one-by-one tables, \n2x1 tables, 2xmany tables, 1xmany tables, nothing will force the table to \nappear in the next column, with the exception of a break-before or break-after \nfound on fo:table-row within the fo:table-body.  This property also needs to \nbe set to \"column\" for it to work.  My main problem is that I have a large \ntable with a lot of rows, and a header I need display every time there's a \nbreak, so tables are necessary because the breaks cannot be determined \nmanually.  Instead of the intended behavior of the tables breaking to the next \ncolumn and displaying the header, it will simply break to the next page, \nleaving the rest of the current page blank, and simply continue in the first \ncolumn of the following page as if it's the next column it should appear.  All \nother behavior appears correct (header displays, breaks when it should, but \nwrong break context.)  I should point out that manually calling break-after or \nbreak-before WILL force the table to break to the next column CORRECTLY, and \ntables that begin in a column other than the first also appear correctly, but \nstill break on the page every time, not column.  The only time I can make it \nbreak in the column context is by manually calling break-before or break-after \non specific table-rows. This is not an option for me because my table can \nstart anywhere on the page and calculating breaks manually is impossible, so \ngetting a working implementation of this is important (for all of us :)  ) \n\nLastly, release version 0.20.5 appears to implement this correctly (as well as \nissue 1)  but both bugs still appear in the trunk version.\n\nOkay all, I hope this was informative enough that these issues can be easily \nfixed.  (it seems to be small fixes in the logic that used to work \ncorrectly).  Please email me if more information is needed, or you can't \nreproduce the results I'm getting.  Thanks everyone, good luck!"}, {"count": 1, "text": "Your issue 1) should be fix now.\nRevision: http://svn.apache.org/viewcvs?rev=332594&view=rev\n\nI'll try to reproduce your other issue now. In general, you can help us a lot if\nyou attach a complete FO file reduced to the absolute minimum to reproduce the\nproblem. That way we don't have to rely on interpretation, we don't have to\nbuild a test case ourself and we can often use that test case directly in our\ntest suite so we can include an automated regression check so the problem will\nnever pop up again. IOW, you can save us a lot of work and speed things up.\nThanks for reporting the problem BTW. Next week might have been too late for the\nfirst release. :-)", "bug_id": 37468, "attachment_id": null, "id": 82394, "time": "2005-11-11T17:44:14Z", "creator": "jeremias@apache.org", "creation_time": "2005-11-11T17:44:14Z", "tags": [], "is_private": false}, {"count": 2, "text": "Issue 1) should be fixed, too.\nRevision: http://svn.apache.org/viewcvs?rev=332614&view=rev\n\nPlease reopen the bug if any problem remains.", "creator": "jeremias@apache.org", "is_private": false, "id": 82399, "time": "2005-11-11T18:28:25Z", "bug_id": 37468, "creation_time": "2005-11-11T18:28:25Z", "tags": [], "attachment_id": null}, {"count": 3, "tags": [], "creator": "gadams@apache.org", "is_private": false, "text": "batch transition pre-FOP1.0 resolved+fixed bugs to closed+fixed", "id": 156136, "time": "2012-04-01T07:00:34Z", "bug_id": 37468, "creation_time": "2012-04-01T07:00:34Z", "attachment_id": null}]