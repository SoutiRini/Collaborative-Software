[{"count": 0, "tags": [], "bug_id": 22960, "attachment_id": null, "id": 43800, "time": "2003-09-06T19:30:39Z", "creator": "david@megapico.co.uk", "creation_time": "2003-09-06T19:30:39Z", "is_private": false, "text": "Problem with pid file when restarting Apache after a power outage.\n\nI found a problem with restarting Apache after a power outage. Apache\nis running in a chroot, but I'm not sure if that is critical. A few\nadditional lines in apachectl solve this problem, as explained below.\n\nThe pid file for httpd was not removed when power to the server was\ncut, so httpd found the pid file on start-up and would not start a new\nhttpd process. It is necessary to check using apachectl that if a pid\nfile exists, it really belongs to a running httpd. If it does not,\nthen it can be safely removed, allowing a new copy of httpd to be\nstarted.\n\nWhen specifying the location of the pid file in apachectl it is\nimportant to specify it relative to the root of the file system, not\nthe root of any chroot that apache is to run in. Having to specify the pid\nlocation reverts to Apache 1.3 format, rather than finding the info from the\nconfig files, but whereever it is specified, the need to take account of chroot\nwill still exist.\n\nThis looks similar to bug  14647.\n\n-------------------------------------------------\nRequired changes to apachectl to fix this:\n\nAdd to CONFIGURATION SECTION:\n\n# the path to your PID file, prior to chroot set-up, if any\nPIDFILE=/chroot/apache2/usr/local/apache/logs/httpd.pid\n\nAdd before \"case $ARGV in\":\n\n#Check that an old PID file in chroot has got left after power outage etc.\n#If a PID file exists, check it points to a running httpd\nif [ -f $PIDFILE ] ; then\n    PID=`cat $PIDFILE`\n    PIDPROC=`ps -p $PID -o comm --no-headers 2>/dev/null`\n    if [ \"x$PID\" != \"x\" ] && [ \"x$PIDPROC\" != \"xhttpd\" ] ; then\n\t#pid points to a valid process, but it is not httpd\n\trm $PIDFILE 2>/dev/null\n    fi\nfi"}, {"count": 1, "tags": [], "bug_id": 22960, "attachment_id": null, "is_private": false, "id": 72197, "time": "2005-03-11T14:34:05Z", "creator": "jorton@redhat.com", "creation_time": "2005-03-11T14:34:05Z", "text": "Current versions will read the PID file and detect whether there is really a\nrunning httpd process with the stored PID, which solves this for most cases. \nAlso if you use a PIDfile of say /var/run/httpd.pid, you will automatically get\nthis behaviour since the init scripts will remove it at bootup.  That's the\ncorrect place to solve it completely."}]