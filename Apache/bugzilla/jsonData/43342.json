[{"count": 0, "tags": [], "bug_id": 43342, "attachment_id": null, "is_private": false, "id": 107977, "time": "2007-09-10T10:33:17Z", "creator": "c.koehler@levigo.de", "creation_time": "2007-09-10T10:33:17Z", "text": "Javadoc fails with illegal package name using footer or bottom tags. The problem\nseems to be that in the class Javadoc the footer and the bottom html content is\nadded untrimmed and unescaped.\nSee \norg.apache.tools.ant.taskdefs.Javadoc.execute(){\n...\n        if (footer != null) {\n            toExecute.createArgument().setValue(\"-footer\");\n            toExecute.createArgument().setValue(expand(footer.getText()));\n        } \n...}\nThe text returned by footer.getText() has leading newline and tab characters,\nwhich will be interpreted by the javadoc command as package declarations. These\nnewline and tab characters are not specified in our build.xml, so these\ncharacters seems to be added after the call while processing the javadoc task."}, {"count": 1, "text": "Here the javadoc task:\n\n\t\t<javadoc destdir=\"${javadoc.temp.dir}\"\n\t\t         packagenames=\"${javadoc.packages}\"\n\t\t         excludepackagenames=\"\"\n\t\t\t\t useexternalfile=\"yes\" verbose=\"on\"\n\t\t         author=\"true\"\n\t\t         version=\"true\"\n\t\t         use=\"false\"\n\t\t         public=\"true\"\n\t\t         source=\"1.5\"\n\t\t         windowtitle=\"AWindowTitle\"\n\t\t         doctitle=\"ADocTile\"\n\t\t         stylesheetfile=\"${javadoc.styling.dir}/javadoc.css\">\n\n\t\t\t<classpath refid=\"${custom-compile-classpath}\" />\n\t\n\t\t\t<bottom><![CDATA[<table border=0 cellpadding=0><tr><td><img\nsrc=\"{@docRoot}/icon.gif\" width=\"32\"></td><td>Copyright &#169; ${copyright.year}\ndemo company. All rights reserved.</td></tr></table>]]></bottom>\n\n\n\t\t    <packageset dir=\"${javadoc.sources.dir}\" defaultexcludes=\"yes\">\n\t\t      <include name=\"**\"/>\n\t\t      <exclude name=\"**/doc-files/**\"/>\n\t\t    </packageset>\n\t\t</javadoc>\n\n", "creator": "c.koehler@levigo.de", "is_private": false, "id": 107978, "time": "2007-09-10T10:37:30Z", "bug_id": 43342, "creation_time": "2007-09-10T10:37:30Z", "tags": [], "attachment_id": null}, {"count": 2, "text": "Created attachment 22668\nEscapes line breaks in javadoc arguments file\n\nThis is a patch for 1.7.1 that escapes any line breaks that are found in\nany of the arguments written out to a javadoc options file.", "creator": "robert.streich@objectfx.com", "attachment_id": 22668, "id": 121158, "time": "2008-10-02T12:16:34Z", "bug_id": 43342, "creation_time": "2008-10-02T12:16:34Z", "tags": [], "is_private": false}, {"count": 3, "tags": [], "text": "Created attachment 22669\nEscapes new lines in javadoc arguments\n\nThis is the same a patch #22668 except that it was created against the trunk version of the javadoc task.", "is_private": false, "id": 121159, "creator": "robert.streich@objectfx.com", "time": "2008-10-02T12:23:31Z", "bug_id": 43342, "creation_time": "2008-10-02T12:23:31Z", "attachment_id": 22669}, {"count": 4, "tags": [], "bug_id": 43342, "attachment_id": null, "id": 121353, "time": "2008-10-09T08:47:14Z", "creator": "bodewig@apache.org", "creation_time": "2008-10-09T08:47:14Z", "is_private": false, "text": "Is escaping the newlines really necessary?\n\nhttp://java.sun.com/j2se/1.4.2/docs/tooldocs/windows/javadoc.html#argumentfiles contains under \"Example - Option Arguments\" a -bottom example that seems to indicate that quoting the entire argument should be enough.\n\nThe Java6 docs contains the same example but explicitly mentions the need to double backslashes when quoting in the initial paragraph (the 1.4.2 docs miss that).\n"}, {"count": 5, "tags": [], "bug_id": 43342, "attachment_id": null, "id": 121358, "time": "2008-10-09T09:03:53Z", "creator": "robert.streich@objectfx.com", "creation_time": "2008-10-09T09:03:53Z", "is_private": false, "text": "Yes, unfortunately, they are necessary. The original reporter's <bottom>\ntext will work now--I think the 1.7.0 code somehow inserted a line break, but it's been a long time since I looked at it. This bug kept us from upgrading\nat the time since our <bottom> text has line breaks in it and there wasn't\na workaround. Now, there's a workaround for us--remove all line breaks.\n\nSince it looked like an easy fix, I decided to go ahead and submit the patch\ninstead of removing the breaks in our build file--kind of a pain without\nthem."}, {"count": 6, "text": "thanks for the patch, I've committed a slightly different version (avoid escaping the \\n in a \\r\\n sequence) with svn revision 703516  - and added a test as well.\n\nThis doesn't fix the userexternalfile=\"false\" case, I guess.  Buth then again, that cannot work anyway.  I've documented that.", "creator": "bodewig@apache.org", "is_private": false, "id": 121417, "time": "2008-10-10T09:21:13Z", "bug_id": 43342, "creation_time": "2008-10-10T09:21:13Z", "tags": [], "attachment_id": null}, {"count": 7, "tags": [], "bug_id": 43342, "attachment_id": null, "id": 121544, "time": "2008-10-15T08:10:16Z", "creator": "robert.streich@objectfx.com", "creation_time": "2008-10-15T08:10:16Z", "is_private": false, "text": "Thanks, Stefan. I'd tested the double escape case and found that it didn't\ncause a problem. Avoiding it is a better choice, however."}]