[{"count": 0, "tags": [], "creator": "tw@2m.dk", "is_private": false, "id": 25790, "attachment_id": null, "bug_id": 14299, "creation_time": "2002-11-06T15:02:22Z", "time": "2002-11-06T15:02:22Z", "text": "I havent tested this on 1.3.27, but it's a problem on 1.3.9, 1.3.23 and 1.3.26 -\nso I suspect it is a problem in 1.3.27 aswell, as I haven't seen any entries in\nthe changelog, that addresses this.\nI have tested this on Debian (potato and sid) and SuSE 8.0.\n\nIt is fairly easy to reproduce the gdb backtrace\n/usr/sbin/apache -X\ngdb /usb/sbin/apache <pid>\nfire up your browser and direct it to the following script, test.html\n<html>\n<head>\n  <title>Test</title>\n</head>\n<body>\n  <a href=\"test.html\">Testing...</a>\n[DUMP ALOT OF RANDOM TEXT HERE] *\n</body>\n</html>\n\n*) On my machine (AMD 1100MHz) ~14M is adequate. On slower/faster machine less\nor more text will reach the threshold depending on workload.\n\nNow it will only take between 2 and 30 clicks on \"Testing...\" to achieve the\nSIGPIPE (again: if you don't get the SIGPIPE - please try to raise the size of\nthe html file - instead of just writing this bug of as bogus).\n\nIn \"normal\" use (meaning static html and even most php scripts) such a SIGPIPE\nwill have no influence - but if you have en extension to php which is\nexcessively session oriented (as I have) your site will simply stop working.\nWhich is why I have marked this BUG critical.\nAs I have hinted this is very much a timing problem as my extension has no\nproblems when running in pure http context - but adding the calculation\ncomplexity of https - it gives up (why I initially thought this was a problem\nwith openssl).\n\nWell... I'll just post the backtrace from gdb:\nProgram received signal SIGPIPE, Broken pipe.\n0x401456e7 in writev () from /lib/libc.so.6\n(gdb) bt\n#0  0x401456e7 in writev () from /lib/libc.so.6\n#1  0x80535d3 in writev_it_all (fb=0x80a7e74, vec=0xbfffd9bc, nvec=2)\n    at buff.c:1138\n#2  0x805382f in large_write (fb=0x80a7e74, buf=0xbfffda4c, nbyte=8192)\n    at buff.c:1293\n#3  0x80538d2 in ap_bwrite (fb=0x80a7e74, buf=0xbfffda4c, nbyte=8192)\n    at buff.c:1356\n#4  0x80614f0 in ap_send_fd_length (f=0x80c2898, r=0x80c08bc, length=8182251)\n    at http_protocol.c:2352\n#5  0x8059bb2 in default_handler (r=0x80c08bc) at http_core.c:3929\n#6  0x8054408 in ap_invoke_handler (r=0x80c08bc) at http_config.c:529\n#7  0x8063cbc in process_request_internal (r=0x80c08bc) at http_request.c:1308\n#8  0x8063d18 in ap_process_request (r=0x80c08bc) at http_request.c:1324\n#9  0x805d4eb in child_main (child_num_arg=0) at http_main.c:4681\n#10 0x805d67c in make_child (s=0x809c4cc, slot=0, now=1036592596)\n    at http_main.c:4805\n#11 0x805d799 in startup_children (number_to_start=5) at http_main.c:4887\n#12 0x805dc75 in standalone_main (argc=2, argv=0xbffffd24) at http_main.c:5195\n#13 0x805e37d in main (argc=2, argv=0xbffffd24) at http_main.c:5558\n(gdb) \n\nI'll gladly supply more info if needed\n\nBest Regards\n  Thomas Wentzel"}, {"count": 1, "tags": [], "bug_id": 14299, "is_private": false, "text": "Uhh I forgot to mention, that you might have to do \"The monkey test\" ie.\nclicking vigorously on the link\n\n/Thomas", "id": 25792, "time": "2002-11-06T15:12:27Z", "creator": "tw@2m.dk", "creation_time": "2002-11-06T15:12:27Z", "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 14299, "is_private": false, "id": 25799, "attachment_id": null, "creator": "trawick@apache.org", "creation_time": "2002-11-06T17:46:27Z", "time": "2002-11-06T17:46:27Z", "text": "Here is what happens with SIGPIPE and Apache:\n\nThe kernel raises SIGPIPE when Apache tries to write to a dropped \nconnection, the signal is ignored (because Apache chose to ignore\nthe signal), then Apache sees -1/errno from writev() and does the\nright thing.  What you show in gdb is perfectly normal.  If you \ncontinue from the point that gdb sees the SIGPIPE, you should\nsee Apache react to a failure from writev() and clean up the\nconnection.\n\nYou may have some 3rd party code which changes the way SIGPIPE is\nhandled for Apache child processes.  That isn't something we can\ndebug.  Possibly your PHP extension is mucking with the required SIGPIPE \nhandling.  Look into what PHP does, what your extension does, and what any \nlibraries used by either of those do with SIGPIPE.\n"}]