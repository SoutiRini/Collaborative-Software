[{"attachment_id": null, "tags": [], "creator": "vanativo@multiservice.com", "is_private": false, "count": 0, "id": 9170, "time": "2001-12-26T15:16:55Z", "bug_id": 5592, "creation_time": "2001-12-26T15:16:55Z", "text": "It seems that the PCL renderer produces one long continuous line without any \nnewlines.  This produces the error \"Line too long\" on our laser printer.  When \nI modified the file with new lines in arbitrary places (except between escape \nsequences and the following characters of course), the output worked fine."}, {"attachment_id": null, "tags": [], "creator": "art_w@eastpoint.com", "is_private": false, "count": 1, "id": 9171, "time": "2001-12-26T16:30:32Z", "bug_id": 5592, "creation_time": "2001-12-26T16:30:32Z", "text": "This is a new one by me. What is the model of the printer?\n\nI have just searched through the \"HP PCL 5 Printer Language Technical Reference \nManual\" and I could not find any reference to a line length limit. I also \nsearched the HP website for this error and could not find any references \nrelated to laserjets. In PCL, line terminators (CR and/or LF) should only be \nused for cursor positioning. They do not function as command delimiters. True, \nas long as they do not interupt a PCL command sequence it should not be a \nproblem, since the PCLRenderer currently uses explicit positioning for each \nword. But it should not be necessary. Also each page should end with a Form \nFeed character, which typically would also serve as a line terminator. Unless \neach page is real complex, I would expect a modern printer to have adequate \nmemory to hold an entire page in memory without difficulty. Is there anything \nunusual about what is being printed that is encountering this error (page \nfilled with really tiny text or lots of graphic stuff, etc)?\n\nFWIW, we have printed many multi-megabyte PCL files produced by FOP without any \nproblems (to a variety of printers). One of our customers is currently \ngenerating PCL files from FOP that are greater than 2 GB in size.\n\nArt"}, {"count": 2, "tags": [], "text": "Interesting.  The printer model is HP Laserjet 8100 DN.  I am using FOP in SCO \nunix and simply using the command lp to send it.  I get a page that says \"line \ntoo long\".  I've been using version 20.2 of fop.  The file I've been trying to \nsend is the example file provided with the distribution called xslfoRef.xml \nafter it's been transformed by xml2pdf.xsl.", "is_private": false, "bug_id": 5592, "id": 9172, "time": "2001-12-26T17:11:07Z", "creator": "vanativo@multiservice.com", "creation_time": "2001-12-26T17:11:07Z", "attachment_id": null}, {"count": 3, "tags": [], "creator": "art_w@eastpoint.com", "attachment_id": null, "is_private": false, "id": 9176, "time": "2001-12-27T10:17:08Z", "bug_id": 5592, "creation_time": "2001-12-27T10:17:08Z", "text": "I wonder if the problem could be with SCO instead of the printer. I use AIX \n(IBM Unix) and print the PCL files via lp adding the \"-o -dp\" switches to \nbypass the print formatter and send the data stream directly to the printer. If \nI do not do this the print formatter wants to mangle my output (wrapping lines \ninappropriately, etc). Is there a similar switch in SCO? As a test, perhaps you \ncould try copying the file directly to the device (/dev/whatever) if allowed.\nI would almost be willing to bet that the problem is something along the way \nand not the printer itself."}, {"count": 4, "tags": [], "creator": "vanativo@multiservice.com", "attachment_id": null, "text": "Problem solved!  An argument to lp was necessary as you suspected.  The \nargument to use in SCO unix is \"-o raw\".  This seems to circumvent some process \nthat would otherwise not be able to handle the input, possibly a formatter as \nyou suggested.\n\nThank you for your help!", "id": 9180, "time": "2001-12-27T15:23:56Z", "bug_id": 5592, "creation_time": "2001-12-27T15:23:56Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 5592, "attachment_id": null, "id": 156433, "time": "2012-04-01T13:48:01Z", "creator": "gadams@apache.org", "creation_time": "2012-04-01T13:48:01Z", "is_private": false, "text": "batch transition to closed remaining pre-FOP1.0 resolved bugs"}]