[{"count": 0, "attachment_id": null, "creator": "kchong@proactivenet.com", "text": "The SockServer performance is extremely poor when a lot of messages (>100/secs)\nare sent to the logserver.  The problem could be solved by simply making a \nbuffered read from the socket input stream.  \n\npublic SocketNode(Socket socket,Hierarchy hierarchy) {\n    this.socket = socket;\n    this.hierarchy = hierarchy;\n    try {\n      ois = new ObjectInputStream(new BufferedInputStream(socket.getInputStream\n()));\n    }\n    catch(Exception e) {\n      cat.error(\"Could not open ObjectInputStream to \"+socket, e);\n    }\n  }", "id": 6294, "time": "2001-10-02T18:55:08Z", "bug_id": 3933, "creation_time": "2001-10-02T18:55:08Z", "tags": [], "is_private": false}, {"count": 1, "tags": [], "creator": "cgu@qos.ch", "attachment_id": null, "text": "\nKok,\n\nThanks for the patch. Have you tried measuring the performance increase? I \nwould like to remind you that TCP sockets are intrinsically buffered. Have you \nobserved a performance increase? Thanks, Ceki", "id": 6296, "time": "2001-10-02T23:01:50Z", "bug_id": 3933, "creation_time": "2001-10-02T23:01:50Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 3933, "attachment_id": null, "id": 6384, "time": "2001-10-04T12:25:15Z", "creator": "kchong@proactivenet.com", "creation_time": "2001-10-04T12:25:15Z", "is_private": false, "text": "With BufferedInputStream, the performane improved drastically.  \nIf you truss -p on the logserver, the read is one character at a time without\nit.  With buffered, it's reading a string at a time \n(saving the context switching between read).\n\nTest 1:\nSend 100 messages/sec.\n\nBefore: 7% CPU\nAfter : 0.17% CPU\n\n\nTest 2:\nSend messages in a loop without sleep.\n\nBefore: 90%  after          400 messsages in 40 secs.\nAfter : 60%   received 25,000 messages in 20 secs.\n"}, {"count": 3, "tags": [], "creator": "mwomack@bevocal.com", "attachment_id": null, "text": "I have to concur with Kok.  I made his suggested improvement in my version of \nChainsaw (which also uses ServerSocket and ObjectInputStream), and the \nthroughput of messages went up dramatically.  I don't have exact numbers but \nthere was definitely an increase.", "id": 13139, "time": "2002-04-09T22:20:25Z", "bug_id": 3933, "creation_time": "2002-04-09T22:20:25Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 3933, "attachment_id": null, "id": 15792, "time": "2002-05-09T12:37:48Z", "creator": "ceki@apache.org", "creation_time": "2002-05-09T12:37:48Z", "is_private": false, "text": "\nOK. I incorporated the change you suggested altough my tests on Windows could \nnot show a difference."}]