[{"attachment_id": null, "tags": [], "bug_id": 18449, "is_private": false, "count": 0, "id": 34017, "time": "2003-03-28T06:57:47Z", "creator": "albanard@hotmail.com", "creation_time": "2003-03-28T06:57:47Z", "text": "Please Help!\n\nI've been trying to get jk2 working for 2 weeks and am almost there!\n\nI'm running Solaris intel 9 with gcc 3.2.2 and apache 2.0.44. There is no binary\navailable for this platform so I had to compile my apache module for jk2. I\nsuccessfully compiled without any errors. Now when I start tomcat I get this\nerror message\n\nld.so.1: /usr/java/bin/java: fatal: relocation error: file\n/usr/local/apache_server/lib/libapr-0.so.0: symbol __divdi3: referenced symbol\nnot found\n\nand the connection between apache and tomcat doesn't seem to work.\n\nafter some searching I discovered that this symbol is apparently in\n/usr/local/lib/gcc-lib/i386-pc-solaris2.9/3.2.2/libgcc.a\n\nI've read that this should be statically linked automatically when compiling\nwith gcc. I've also read that a similar problem with a web_app module was worked\naround by adding:\n\nld -G -lm -lsocket -lnsl -ldl -lsendfile -o mod_webapp.so mod_webapp.o \\\n /home/hkchan/apache/webapp-module-1.0.1-tc401/lib/libwebapp.a \\\n /home/hkchan/apache/webapp-module-1.0.1-tc401/lib/libapr.a \\\n /usr/local/lib/gcc-lib/i386-pc-solaris2.8/3.0.2/libgcc.a\n\nI'm not a c programmer and have absolutely no idea where I could add stuff like\nthis. I just type ant and let it do its magic.\n\nIf anyone has any idea how to work around this problem could they please respond\nto this bug report. You'd make a person very happy!\n\nRegards\n\nAl\n\noutput from catalina.out\n\nMar 28, 2003 4:36:12 PM org.apache.commons.modeler.Registry loadRegistry\nINFO: Loading registry information\nMar 28, 2003 4:36:12 PM org.apache.commons.modeler.Registry getRegistry\nINFO: Creating new Registry instance\nMar 28, 2003 4:36:13 PM org.apache.commons.modeler.Registry getServer\nINFO: Creating MBeanServer\nMar 28, 2003 4:36:14 PM org.apache.coyote.http11.Http11Protocol init\nINFO: Initializing Coyote HTTP/1.1 on port 8080\nStarting service Tomcat-Standalone\nApache Tomcat/4.1.24\nMar 28, 2003 4:36:15 PM org.apache.coyote.http11.Http11Protocol start\nINFO: Starting Coyote HTTP/1.1 on port 8080\nld.so.1: /usr/java/bin/java: fatal: relocation error: file\n/usr/local/apache_server/lib/libapr-0.so.0: symbol __divdi3: referenced symbol\nnot found"}, {"count": 1, "tags": [], "text": "In Addtion to the above I should probably add that the only way I got jk2 to\ncompile was to rename my statndard cc to _cc then create a link from cc to gcc,\nthereby forcing the compile process to use gcc. Otherwise I couldn't get it to\nuse gcc (even though configure scripts pick up gcc as the compiler when\ncompiling anything else).\n\nRgrds\n\nAl", "attachment_id": null, "id": 34021, "creator": "albanard@hotmail.com", "time": "2003-03-28T07:35:02Z", "bug_id": 18449, "creation_time": "2003-03-28T07:35:02Z", "is_private": false}, {"count": 2, "tags": [], "creator": "albanard@hotmail.com", "is_private": false, "text": "After looking at different bits of java code I noticed that I could edit\nbuild.properties file in the \n\njakarta-tomcat-connectors-4.1.24-src/jk/build.properties file to include the line:\n\nbuild.native.cc=gcc\n\nI haven't seen this in any documentation but it saves creating a symbolic link\nto gcc from cc as per my previous comment. Still doesn't solve the problem though.\n\nAl", "id": 34106, "time": "2003-03-29T06:50:05Z", "bug_id": 18449, "creation_time": "2003-03-29T06:50:05Z", "attachment_id": null}, {"count": 3, "tags": [], "creator": "jfclere@gmail.com", "attachment_id": null, "text": "I have a similar one with gcc 3.3.2:\n+++\nbash-2.03$ bin/apachectl start\nSyntax error on line 252 of /export/home3/jfclere/apache48/conf/httpd.conf:\nCannot load /export/home3/jfclere/apache48/modules/mod_status.so into server:\nld.so.1: /export/home3/jfclere/apache48/bin/httpd: fatal: relocation error: file\n/export/home3/jfclere/apache48/modules/mod_status.so: symbol __floatdisf:\nreferenced symbol not found\n+++\n", "id": 52954, "time": "2004-02-25T17:36:57Z", "bug_id": 18449, "creation_time": "2004-02-25T17:36:57Z", "is_private": false}, {"count": 4, "tags": [], "creator": "jfclere@gmail.com", "is_private": false, "text": "java is compiled with the c native compiler and apr with gcc.\nmixing native compiler and gcc compiler brings problems do do it.", "id": 52999, "time": "2004-02-26T11:42:55Z", "bug_id": 18449, "creation_time": "2004-02-26T11:42:55Z", "attachment_id": null}]