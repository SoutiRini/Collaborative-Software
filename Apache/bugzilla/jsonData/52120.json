[{"count": 0, "tags": [], "bug_id": 52120, "text": "When an attempt is made to freshen a stale entry in the cache, and the 304 Not Modified response from the backend contains no ETag, no Last-Modified, and no Cache-Control header, the following code path is followed:\n\nX-Cache-Detail: \"conditional cache hit: 304 was uncacheable though (s-maxage or max-age zero and no Last-Modified or Etag; not cacheable); entity removed\" from ...\n\nIn this case, because the 304 is technically uncacheable, we send the cached copy once and invalidate the entry. What we don't do however is send the original cached headers, just the headers from the 304, and in the process we see headers like Content-Type being lost or replaced.", "id": 151118, "time": "2011-11-01T15:34:57Z", "creator": "minfrin@sharp.fm", "creation_time": "2011-11-01T15:34:57Z", "is_private": false, "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 52120, "is_private": false, "count": 1, "id": 151440, "time": "2011-11-12T21:27:08Z", "creator": "minfrin@sharp.fm", "creation_time": "2011-11-12T21:27:08Z", "text": "Fixed on trunk in r1201331."}, {"count": 2, "tags": [], "bug_id": 52120, "attachment_id": null, "id": 161063, "time": "2012-08-02T13:14:06Z", "creator": "roy@gnomon.org.uk", "creation_time": "2012-08-02T13:14:06Z", "is_private": false, "text": "As far as I can see, this fix was never merged into the 2.2.x branch and although the circumstances to trigger this bug are very specific, its effects can be quite nasty when it manifests.\n\nThe failure to merge headers means that entity header fields (which are not included in a 304 response) are not sent to the client.  In the case of an object with a Content-Encoding such as gzip, this results in a gzipped body being returned to the client without the header specifying the content encoding (hence resulting in the client receiving data it is unable to interpret).\n\nThe code that that contains the error was introduced to trunk in r1001884 to fix PR45341, and the current PR (PR52120) was fixed in trunk in r1201331, so any release that contains the r1001884 fix but not the r1201331 fix will suffer from PR52120.\n\nFor the case where the request we are handling was in fact an if-modified-since request, the old, pre-r1001884 code would have done the right thing, so this is a regression in 2.2.18.  It might therefore be worth considering backporting r1201331 to the 2.2.x branch.\n\nr1001884 was backported to 2.2.x branch in r1068313 and 2.2.18 is the first 2.2.x tag that contains the fix (and therefore this regression).\n\n2.4.x was branched from trunk r1200449, so already contained the r1001884 fix, and r1201331 was merged into 2.4.x as r1201332 prior to 2.4.1 being tagged, so no 2.4.x release suffers from this problem.\n\nroy"}, {"attachment_id": null, "tags": [], "creator": "roy@gnomon.org.uk", "is_private": false, "count": 3, "id": 161083, "time": "2012-08-03T11:01:53Z", "bug_id": 52120, "creation_time": "2012-08-03T11:01:53Z", "text": "See also https://bugzilla.redhat.com/show_bug.cgi?id=845532"}]