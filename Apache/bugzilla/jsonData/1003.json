[{"count": 0, "text": "I ran the apache benchmark against tomcat 3.2.1 for a few hours and noticed that\nthe size of the java process was growing and growing.  It eventually ran itself\nout of memory.  I suspected that this was keeping track of the session info as\neach of the thousands of connections from \"ab\" would look like new sessions.  I\nchecked the jsp page I was hitting and there was no session calls at all... it\nwas just html with a \"<% if(?) out.println(\"blablabla\"); %>\".  I left it sitting\nidle for a few days to see if the memory would reciede as the sessions expired\nand it did not: new connections still made the process grow.  Something in there\nis not being garbage colleded as it should be requiring tomcat to be restarted\nevery million hits or so.", "creator": "orion@trustcommerce.com", "attachment_id": null, "id": 1340, "time": "2001-03-16T17:09:34Z", "bug_id": 1003, "creation_time": "2001-03-16T17:09:34Z", "tags": [], "is_private": false}, {"count": 1, "tags": [], "creator": "cmanolache@yahoo.com", "is_private": false, "text": "First, unless you explicitely say you don't want sessions, you'll get a new\n session for each JSP hit. That's the default ( AFAIK ). Second, in most \nOSes ( linux at least ) and most implementations the memory never goes down \nonce it's allocated. AFAIK there is no hanging reference to sessions, but \nit may be - I'll try to run some tests and find out. If you can provide more \ninfo ( like a memory dump or investigate it further by running it in OptimizeIt \nor something similar ) - it would help a lot, as we have many bugs on the queue.\n( Larry - I'll assign it to myself, you have quite a few bugs )", "id": 1411, "time": "2001-03-19T22:19:19Z", "bug_id": 1003, "creation_time": "2001-03-19T22:19:19Z", "attachment_id": null}, {"count": 2, "text": "Should be fixed in latest 3.3 - I spent a day in OptimizeIt and debugging,\nand the sessions are indeed recycled and reused. Remember that using \nJPS without explicitely disabling session creation will create a new \nsession per hit, and unless you limit the number of sessions allowed in \na context it'll fill the memory if you send requests faster than the expire\nlimit. ", "creator": "cmanolache@yahoo.com", "attachment_id": null, "id": 1579, "time": "2001-03-23T09:48:02Z", "bug_id": 1003, "creation_time": "2001-03-23T09:48:02Z", "tags": [], "is_private": false}, {"count": 3, "tags": [], "bug_id": 1003, "attachment_id": null, "text": "Mark as FIXED", "id": 1799, "time": "2001-04-09T15:26:31Z", "creator": "cmanolache@yahoo.com", "creation_time": "2001-04-09T15:26:31Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 1003, "attachment_id": null, "id": 1800, "time": "2001-04-09T15:27:49Z", "creator": "cmanolache@yahoo.com", "creation_time": "2001-04-09T15:27:49Z", "is_private": false, "text": "It seems to work fine in both 3.2.2 and 3.3, please send code to reproduce\n( as it's probably related with user code )"}]