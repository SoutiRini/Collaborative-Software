[{"count": 0, "tags": [], "creator": "ken@kensystem.com", "attachment_id": null, "id": 76503, "time": "2005-06-17T20:04:19Z", "bug_id": 35402, "creation_time": "2005-06-17T20:04:19Z", "is_private": false, "text": "The native Apache process show full CPU utilization when long byte streams are\npassed into ServletResponse.getOutputStream().\n\nMy testing is based on Apache/2.0.48, Win2000, mod_jk/1.2.13. A maximum\nsustained throughput of 1-2 MB was achieved on a 2GHZ cpu machine.\n\nThis didn't seem to occur in JNI based connections, though I believe some JK_mod\nsoket channel optimization would also resolve this.\n\nSimplified example code:\n\nInputStream is = new FileInputStream(\"/some-large-file\");\nOutputStream o = response.getOutputStream();\nbyte[] b = new byte[1024*16];\nint nread = is.read(b);\nwhile (nread!=-1)\n{\n o.write(b, 0, nread);\n nread = is.read(b);\n}\no.flush();\nis.close();\no.close();"}, {"count": 1, "tags": [], "creator": "mturk@apache.org", "attachment_id": null, "id": 76941, "time": "2005-07-03T10:56:04Z", "bug_id": 35402, "creation_time": "2005-07-03T10:56:04Z", "is_private": false, "text": "There has been a fix in the 1.2.14 dealing with flushing and\nchanging the buffering inside Java part of AJP.\nSo either that fixes this problem or you are just low on memory."}]