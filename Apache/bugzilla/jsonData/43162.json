[{"count": 0, "tags": [], "bug_id": 43162, "is_private": false, "id": 106885, "attachment_id": null, "creator": "krixel@wp.pl", "creation_time": "2007-08-18T06:19:09Z", "time": "2007-08-18T06:19:09Z", "text": "The description of the verification procedure does not apply to the Windows \noperating system (note the csh prompt).  If I ignore the csh prompt and go on \nwith the verification as described, I get the error \"File not found\" since the \npgp command does not work at Microsoft.\n\nThe correct procedure is to install PGP Desktop for Windows from PGP \nCorporation (which installs a system service, serves as a proxy for your IMAP \nclient by default and may make your machine awfully slow), import the keys and \nthe signature and make it verify the installer.  The verification result is \nambiguous because the Mr Levy-Lambert's public key is invalid: it has not been \nregistered with PGP Corp.  I have registered the key but Mr Levy-Lambert has \nnot confirmed it yet.\n\nI understand your hostile stance regarding Microsoft but would it be possible \nto create a signed cabinet file instead?  Not everyone is allowed to have \nLinux at his workplace.\n\nI would also bring to your attention that the mirrored archive (at least in \nPoland) has a different name than the master archive.  The master signature \ncontains a reference to the master archive, not to the mirrored one.  Although \nboth compare equal, you cannot know it until you download both, which is \nactually worse for the servers than not mirroring at all.\n\nHow I expect you to respond:\n1. Provide a signed MSZIP cabinet archive for downloading.\n2. Register Mr Levy-Lambert's public key with PGP Corp.\n3. Provide relevant information for Microsoft Windows users at the download \npage.\n4. Make the mirror an accurate mirror.\n\nTotal end user cost of not complying is 1 work day spent on:\n- going through Wikipedia to learn what that pgp could possibly stand for;\n- registering, downloading, learning, installing and configuring PGP Desktop \n(you have to learn quite a bit just to understand what you are doing);\n- waiting for the infected machine to respond;\n- trying to guess what it means that verification failed because the key is \ninvalid."}, {"count": 1, "tags": [], "bug_id": 43162, "attachment_id": null, "is_private": false, "id": 106887, "time": "2007-08-18T08:44:11Z", "creator": "j_cumps@yahoo.com", "creation_time": "2007-08-18T08:44:11Z", "text": "> I understand your hostile stance regarding Microsoft \nNo. That is not true\n\n> The correct procedure is to install PGP Desktop for Windows from PGP \nCorporation \n\nThere are other options. I'm using cygwin.\n\n> How I expect you to respond...\n\n> Total end user cost of not complying is 1 work day spent ...\n"}, {"count": 2, "tags": [], "creator": "krixel@wp.pl", "text": "(In reply to comment #1)\n> > I understand your hostile stance regarding Microsoft \n> No. That is not true\n\nHave you read the introduction to reporting bugs?\n\"You do not have to hate Microsoft to be a hacker\".\nAlso, the passage about playing golf with Bill Gates is quite interesting.  Is \nthat original?\n\n> > The correct procedure is to install PGP Desktop for Windows from PGP \n> Corporation \n> There are other options. I'm using cygwin.\n\nAll right, why don't you say it in the instruction published?  \nCurrently there is no trace of what to do; \nESR says the asker should try and find the answer himself;\nI complied and found PGP Corp. on Wikipedia and lost whole day because of that.", "id": 106892, "time": "2007-08-18T20:28:45Z", "bug_id": 43162, "creation_time": "2007-08-18T20:28:45Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 43162, "is_private": false, "id": 106897, "attachment_id": null, "creator": "conor@apache.org", "creation_time": "2007-08-19T08:03:41Z", "time": "2007-08-19T08:03:41Z", "text": "It's true that to verify the signatures on the Ant releases you need to have\ninstalled some software on Windows. You can choose to install PGP or you can\nchoose to install gnupg as part of cygwin or gpg4win. I'd go for the cygwin route.\n\nThe fact that Antoine's key is not registered with PGP corp does not make it\ninvalid. It is registered with the public key server at http://pgp.mit.edu/ \nIt is also listed in the KEYS file in the Ant repository and on the Ant website.\nYou need to decide what level of trust *you* give these key sources.\n\nThe Ant project is not hostile to Microsoft. I'm not sure why you would\nunderstand that, even if it were true. Many Ant developers, including myself,\nuse Windows. \n\nI'm doubtful we will make available cabinet files. In fact I looked up signed\ncabinet file on Wikipedia and there is a lot less information than there is\nabout gpg.\n\nI'm not 100% sure what you are referring to about the mirrors archive having a\ndifferent name. The download pages all point to the master key file and not the\nmirrored copy because Apache only controls the masters. If a mirror is\ncompromised, it would be possible that the mirrored KEYS file and signatures are\nalso compromised. Verifying a mirrored archive against the mirrored KEYS and\nsignatures is of no value whatsoever.\n\nI agree that we could improve the doco for windows users and we do happily\naccept patches to improve documentation. On your other points, however, I'm\nafraid we probably won't meet your expectations.\n\nI'm sorry you wasted a workday on this.\n"}, {"count": 4, "tags": [], "bug_id": 43162, "text": "(In reply to comment #3)\n> It's true that to verify the signatures on the Ant releases you need to have\n> installed some software on Windows. You can choose to install PGP or you can\n> choose to install gnupg as part of cygwin or gpg4win. I'd go for the cygwin \nroute.\n\nProbably right but that wants an explanation anyway.\n\n> The fact that Antoine's key is not registered with PGP corp does not make it\n> invalid. It is registered with the public key server at http://pgp.mit.edu/ \n> It is also listed in the KEYS file in the Ant repository and on the Ant \nwebsite.\n\nThe PGP Desktop software can be manually configured to look up keys at that \nserver but it comments the result as untrusted because the server itself is \nuntrusted.  I think it would be much easier to persuade Mr Levy-Lambert to \npublish his key on their registry as well.\n\nHere is the relevant quote of the PGP Desktop documentation:\n\nTo PGP Desktop, the PGP Global Directory is a trusted keyserver, and PGP \nDesktop will automatically trust any key it finds there. During the initial \nconnection to the PGP Global Directory, the PGP Global Directory Verification \nKey is downloaded, signed, and trusted by the key you publish to the \ndirectory. All of the keys verified by the PGP Global Directory are thus \nconsidered valid by your PGP Desktop.\n\nIt seems it is hardwired.\n\n> You need to decide what level of trust *you* give these key sources.\n> The Ant project is not hostile to Microsoft. I'm not sure why you would\n> understand that, even if it were true. Many Ant developers, including myself,\n> use Windows. \n\nBecause of the quotes I have given.  While they are not outright hostile, they \nmake me feel guilty of not using Linux.  Combine that with the description of \nverification process that implicitly assumes the reader is using Linux.\n\n> I'm doubtful we will make available cabinet files. In fact I looked up signed\n> cabinet file on Wikipedia and there is a lot less information than there is\n> about gpg.\n\nI can understand that; software publishing certificates for signing cabinet \nfiles cannot be self-made, they have to be issued by a valid certifiaction \nauthority like VeriSign <http://www.verisign.com/products-services/security-\nservices/code-signing/digital-ids-code-signing/index.html>.  They charge a \nyearly fee for that.  A notable exception is Microsoft itself: they stand as \nthe certificate authority for their own products; however, their signatures \nare countersigned by VeriSign.\n\nOther then that, the signing process is described at MSDN \n<http://msdn2.microsoft.com/en-us/library/aa387764.aspx>.  Replicating that \ninformation on Wikipedia would hardly have any sense because the content is \nnot encyclopedic and because it is proprietary.  Microsoft will support code \nsigning until it goes down; after that the problem will go away by itself.\n\nI have created a signed cabinet file (with a bogus signature, of course) but \nit is too large to upload.  Incidentally, it is much smaller than your \noriginal ZIP.\n\n\n> I'm not 100% sure what you are referring to about the mirrors archive having \na\n> different name. The download pages all point to the master key file and not \nthe\n> mirrored copy because Apache only controls the masters. If a mirror is\n> compromised, it would be possible that the mirrored KEYS file and signatures \nare\n> also compromised. Verifying a mirrored archive against the mirrored KEYS and\n> signatures is of no value whatsoever.\n\nThe files at the master repository have different names than the files at the \nmirror in Poland.  When I open the digital signature, it wants to verify an \narchive with the same name, but the mirrored archive has a different name than \nthe master archive, which only adds to overall confusion.\n\n> I agree that we could improve the doco for windows users and we do happily\n> accept patches to improve documentation. On your other points, however, I'm\n> afraid we probably won't meet your expectations.\n\nI can write such a patch but I am not sure what the patch should contain.  The \npresent situation is highly unsatisfactory.  Please note that the affected \ncomponent in the bug declaration is documentation; therefore your resolution \nnot to proceed with my other suggestions does not mean that you will not fix \nthe bug as reported.\n\nI consider your decisions:\n- to let the mirrors to be different from the master: very harmful (in \nparticular, to the master server);\n- not to register the signature key with the PGP key store: negligent for no \nreason (all it takes is to follow the hyperlink to confirm the e-mail address).", "id": 106928, "time": "2007-08-20T04:07:29Z", "creator": "krixel@wp.pl", "creation_time": "2007-08-20T04:07:29Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "creator": "stevel@apache.org", "text": "-as the others said, we have nothing against winxp users, though win9x was such\na source of support calls that it is no longer supported. My laptop runs windowsXP.\n\n1. What you dont get with windows is the toolchain for md5 and sha1 sum checking\nout the box. On linux you can do sha1sum and md5sum to check the hash value of\nany binary against a version picked up from a trusted location (such as apache\nhttps server), or get ant from a trusted distribution.\n\n2. Windows is very good at verifying microsoft code (and updating it on demand),\nbut mediocre for validating binaries of others, or for keeping them up to date.\nHence every windows app you install adds a little auto updater applet to slow\ndown your machine, merely to keep adobe, sun, real, apple, etc apps up to date.\n\n3. A .cab file would require the tooling to create and sign the cab on all\nplatforms we build ant on, as we cannot require the release manager to run\nwindows. It would also need a key that is trusted by the user, meaning Apache\nwould need to become its own CA and get microsoft to (a) trust it and (b) add it\nto the list of trusted sources. Or each project pays $500/year to get a verisign\ncode signing license. It would also require us to test a new distribution\nformat, which can only be done on windows systems, which complicates the release\nprocess more. \n\nThe effect of producing cab files would require the annual outlay of code\nsigning certificates, and the release manager to have a Windows VMware image to\nvalidate the file, if not generate it. Much easier to improve the documentation\non how to validate the file.\n\nNote that Gnupg, http://www.gnupg.org/download/ can verify signatures; it has a\ncommand line, doesnt need registration, etc. We should cover this in the\ndocumentation.\n\n-Steve\n\n\n\nSo no, no new cab file. ", "id": 107648, "time": "2007-09-03T03:08:13Z", "bug_id": 43162, "creation_time": "2007-09-03T03:08:13Z", "is_private": false, "attachment_id": null}, {"count": 6, "tags": [], "bug_id": 43162, "attachment_id": null, "id": 108963, "time": "2007-10-03T21:34:04Z", "creator": "foamdino@gmail.com", "creation_time": "2007-10-03T21:34:04Z", "is_private": false, "text": "-added information about gnupg for windows users"}]