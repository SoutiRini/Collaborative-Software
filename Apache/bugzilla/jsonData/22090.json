[{"count": 0, "tags": [], "creator": "ernst.matthias@gmail.com", "text": "EL expressions are parsed on every evaluation. PageContextImpl uses an ExpressionEvaluator with \nbypassCaches=true. Either the standard caches should be used OR rather, a compiled page should \nhold parsed expressions in static fields. Then contention on the caches could be avoided, too.", "id": 42017, "time": "2003-08-03T10:45:35Z", "bug_id": 22090, "creation_time": "2003-08-03T10:45:35Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "text": "Created attachment 7630\nenable caches", "attachment_id": 7630, "id": 42018, "creator": "ernst.matthias@gmail.com", "time": "2003-08-03T10:47:16Z", "bug_id": 22090, "creation_time": "2003-08-03T10:47:16Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 22090, "attachment_id": null, "is_private": false, "id": 42045, "time": "2003-08-04T09:24:38Z", "creator": "ernst.matthias@gmail.com", "creation_time": "2003-08-04T09:24:38Z", "text": "Evidence (threaddumps) supports that the problem is not the parsing performance\nper se, but the allocation of three (8k+16k+16k) buffers per parser invocation:\n\nSimpleCharStream.java:\n#245:    buffer = new char[buffersize];\n#246:    bufline = new int[buffersize];\n#247:    bufcolumn = new int[buffersize];\n\n\"tcpConnection-8001-14\" daemon prio=1 tid=0x4e102df8 nid=0x33ca waiting for\nmonitor entry [bbdfe000..bbdff908]\n        at\norg.apache.commons.el.parser.SimpleCharStream.<init>(SimpleCharStream.java:245)\n        at\norg.apache.commons.el.parser.SimpleCharStream.<init>(SimpleCharStream.java:253)\n        at org.apache.commons.el.parser.ELParser.<init>(ELParser.java:1721)\n\nThis is kind of a commons/el problem, not a jasper one. I will try to patch el\nto use smaller buffers (which expression is 4k???). If that improves matters, I\nmight close this report although I still consider it valid.\n"}, {"count": 3, "tags": [], "creator": "remm@apache.org", "text": "Good findings.\n\nI think those buffers should be owned by another component (Jasper's\nPageContextImpl IMO), and passed to commons-el), to allow reuse and avoid the\nallocation. This could be optional (commons-el would allocate buffers if none\nare passed): a new constructor would simply need to be added.\n\nBuffers bigger than 1K take a significant amount of time to allocate (and making\nthem too small might impact functionality), so even 4K would be too big IMO.", "id": 42046, "time": "2003-08-04T09:35:39Z", "bug_id": 22090, "creation_time": "2003-08-04T09:35:39Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 22090, "text": "Some measurements:\n\n1. no el cache, parser default buffers: 40 req/s, 1.8m/s\n2. no el cache, small parser buffers: 90req/s, 3.7m/s\n3. el cache: 200req/s, 8m/s\n4. non-synchronized el-cache (simulates parsed expression trees stored per\ntagfile instance): 210req/s, 8.5m/s\n\nlinux dual proc, 100mbit ethernet, j2sdk 1.4.2, resin 2.1.9, jasper 5.0.6\npage data completely in memory, ~70 simple el evaluations, 40k html\n\nstill voting for option 3 or 4.\nlast post on this subject.\n", "id": 42049, "time": "2003-08-04T10:53:56Z", "creator": "ernst.matthias@gmail.com", "creation_time": "2003-08-04T10:53:56Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 22090, "text": "Well, I thought your second post meant that the benefit of using caching was\noffset by some buffer allocation. Looking at the code, the allocation doesn't\nseem to happen with the cache, so there's no problem.\nYour patch seems good, sorry for the misunderstanding.", "id": 42060, "time": "2003-08-04T12:30:45Z", "creator": "remm@apache.org", "creation_time": "2003-08-04T12:30:45Z", "is_private": false, "attachment_id": null}]