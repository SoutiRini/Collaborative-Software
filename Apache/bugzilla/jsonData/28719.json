[{"attachment_id": null, "tags": [], "bug_id": 28719, "text": "In order to create a URL object, org.apache.xml.resolver.Catalog.parseCatalogFile first constructs \na URL for the catalog's current working directory from the string \n\"file:\"+System.getProperty(\"user.dir\")+\"/\nbasename\".  If the user.dir property is \"/\", the URL constructed appears to have the host name \n\"basename\":  \"file://basename\".  This causes an unknown host error to be thrown later in the function.  \nThe code should check for this case and avoid appending an additional \n\"/\" before \"basename\".", "count": 0, "id": 56707, "time": "2004-04-30T19:26:20Z", "creator": "paulmer@mikoteal.dartmouth.edu", "creation_time": "2004-04-30T19:26:20Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 28719, "text": "Thanks.", "id": 73624, "time": "2005-04-13T15:30:56Z", "creator": "apache-bugzilla@nwalsh.com", "creation_time": "2005-04-13T15:30:56Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 28719, "text": "Resolver STILL bad when using TR9401 Catalogs unter Unix.\n\nWhen the user.dir starts with \"/\" the string \"file:///\" will be prepended.\nThis creates a URL \"file:////path/to/dir....\" which in turn is being mangled to\n\"file://path/to/dir/...\" by java.net engine, then wrongly assuming \"path\" to be\na host name.\n\nThis can be easily fixedby adding\n\nif( userdir.startsWith(\"/\") ) userdir = userdir.substring(1);\n\ninto FileURL line 84 (as of version version 1.2).\n", "id": 100686, "time": "2007-03-20T10:14:07Z", "creator": "info@klawitter.de", "creation_time": "2007-03-20T10:14:07Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 28719, "text": "How about the following implementation for FileUtils.makeURL():\n\n*****\n\npublic static URL makeURL(String pathname) throws MalformedURLException {\n\n    if (pathname.startsWith(\"/\")) {\n      return new URL(\"file://\" + pathname);\n    }\n\n    String userdir = System.getProperty(\"user.dir\");\n\n    return new File(userdir, pathname).toURL();\n\n}\n\n*****\n\nI believe it's safer not to concatenate the 'user.dir' at all.  java.io.File\nshould always be able to construct a valid File instance from the value of\n'user.dir'", "id": 108206, "time": "2007-09-14T08:50:48Z", "creator": "awills@unicon.net", "creation_time": "2007-09-14T08:50:48Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "creator": "info@klawitter.de", "attachment_id": null, "text": "I agree, the solution in comment #3 solves the problem elegantly.", "id": 108261, "time": "2007-09-17T03:05:26Z", "bug_id": 28719, "creation_time": "2007-09-17T03:05:26Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 28719, "is_private": false, "text": "Created attachment 20862\nPatch for trunk\n\nPatch for trunk that implements the fix as described in comment #3 by Drew\nWills.", "id": 108454, "time": "2007-09-20T10:17:36Z", "creator": "xc5hfqtyph@snkmail.com", "creation_time": "2007-09-20T10:17:36Z", "attachment_id": 20862}, {"count": 6, "tags": [], "bug_id": 28719, "attachment_id": null, "is_private": false, "id": 117963, "time": "2008-06-25T01:57:12Z", "creator": "crossley@apache.org", "creation_time": "2008-06-25T01:57:12Z", "text": "*** Bug 44263 has been marked as a duplicate of this bug. ***"}, {"attachment_id": null, "tags": [], "bug_id": 28719, "is_private": false, "count": 7, "id": 123943, "time": "2009-01-12T01:28:55Z", "creator": "guillaume.sauthier@objectweb.org", "creation_time": "2009-01-12T01:28:55Z", "text": "File.toURL() has some problems with windows path containing spaces.\nIt's more robust to use File.toURI().toURL() instead of just File.toURL()\n"}, {"count": 8, "text": "File.toURI() was introduced in Java 1.4.  While it is much more robust, it's not compatible with older Java versions.  I'm pretty sure that at least 1.3 compatibility is required for resolver.", "bug_id": 28719, "is_private": false, "id": 123977, "time": "2009-01-12T20:47:06Z", "creator": "hoju@visi.com", "creation_time": "2009-01-12T20:47:06Z", "tags": [], "attachment_id": null}, {"attachment_id": null, "tags": [], "creator": "guillaume.sauthier@objectweb.org", "is_private": false, "count": 9, "id": 123991, "time": "2009-01-13T04:58:33Z", "bug_id": 28719, "creation_time": "2009-01-13T04:58:33Z", "text": "You're right URI is a Java SE 1.4 class.\nIs resolver component really required to support 1.3 :) ?\nIt was the easier way to support filenames with spaces inside (like what you have frequently with windows \"c:\\Document and settings\\...\")."}, {"count": 10, "text": "This makes me wonder if it isn't time to make a \"V2\" that is JDK 1.5 and up.", "bug_id": 28719, "is_private": false, "id": 123994, "time": "2009-01-13T06:33:13Z", "creator": "Ralph_Goers@dslextreme.com", "creation_time": "2009-01-13T06:33:13Z", "tags": [], "attachment_id": null}, {"count": 11, "tags": [], "bug_id": 28719, "text": "Xerces users were asked recently about possibly moving past JDK 1.3 and there were still folks who needed it. I don't think this particular issue is compelling enough to jump to a higher JDK. Conversion methods for File to URI which do proper escaping already exist in the Xerces and XML APIs sources and could be reused here.", "id": 123995, "time": "2009-01-13T07:41:58Z", "creator": "mrglavas@ca.ibm.com", "creation_time": "2009-01-13T07:41:58Z", "is_private": false, "attachment_id": null}, {"count": 12, "tags": [], "bug_id": 28719, "attachment_id": null, "text": "(In reply to comment #11)\n> Xerces users were asked recently about possibly moving past JDK 1.3 and there\n> were still folks who needed it. I don't think this particular issue is\n> compelling enough to jump to a higher JDK. Conversion methods for File to URI\n> which do proper escaping already exist in the Xerces and XML APIs sources and\n> could be reused here.\n\nCould you point us at the example code so we could provide a patch for this issue that would work on JDK 1.3?", "id": 123996, "time": "2009-01-13T08:44:40Z", "creator": "xc5hfqtyph@snkmail.com", "creation_time": "2009-01-13T08:44:40Z", "is_private": false}, {"attachment_id": null, "tags": [], "creator": "mrglavas@ca.ibm.com", "is_private": false, "count": 13, "id": 123997, "time": "2009-01-13T09:04:58Z", "bug_id": 28719, "creation_time": "2009-01-13T09:04:58Z", "text": "For example: http://svn.apache.org/viewvc/xml/commons/trunk/java/external/src/javax/xml/transform/stream/FilePathToURI.java?revision=670282&view=markup\n\nYou could exploit this by merely creating a StreamSource with a java.io.File and then calling getSystemId() to retrieve the URI which was produced."}]