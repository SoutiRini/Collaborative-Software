[{"count": 0, "tags": [], "bug_id": 4930, "attachment_id": null, "id": 8000, "time": "2001-11-16T09:09:17Z", "creator": "ma.darche@free.fr", "creation_time": "2001-11-16T09:09:17Z", "is_private": false, "text": "My configuration :\n* Linux 2.2.18\n* Apache/1.3.9 (Unix) Debian/GNU\n* gcc 2.95.2\n* libc6 2.1.3 \n* java 1.3.1 (build Blackdown-1.3.1-FCS)\n\nThe application I maintained works fine with Apache+Tomcat 3.2.3 (with mod_jk,\nusing ajp13). I decided to give a try with Apache+Tomcat 4.0.1 (with webapp module).\n\nMy application uses lots of communication between applet and servlets. This\ncommunication is done through the use of serialized objects.\n\nIt works fine with Tomcat 3.2.3. And with Tomcat 4.0.1 and module WebApp the\nservlets can't deserialize anymore the objects they read from the \nHttpServletRequest and a java.io.StreamCorruptedException is thrown :\n\n20011116 17:43:26 ERROR [Thread-4] State - de-serialization failure -- Control\ninformation in the stream is inconsistent\njava.io.StreamCorruptedException: Type code out of range, is 0\n        at java.io.ObjectInputStream.peekCode(ObjectInputStream.java:1556)\n        at java.io.ObjectInputStream.readObject(ObjectInputStream.java:292)\n        at java.io.ObjectInputStream.inputClassFields(ObjectInputStream.java:2263)\n        at java.io.ObjectInputStream.defaultReadObject(ObjectInputStream.java:519)\n        at java.io.ObjectInputStream.inputObject(ObjectInputStream.java:1412)\n        at java.io.ObjectInputStream.readObject(ObjectInputStream.java:386)\n        at java.io.ObjectInputStream.readObject(ObjectInputStream.java:236)\n        at com.mine.server.GlobalServlet.readRequest(GlobalServlet.java:190)\n        at com.mine.server.GlobalServlet.doPost(GlobalServlet.java:157)\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:760)\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:853)\n        at\norg.apache.catalina.servlets.InvokerServlet.serveRequest(InvokerServlet.java:446)\n        at\norg.apache.catalina.servlets.InvokerServlet.doPost(InvokerServlet.java:216)\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:760)\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:853)\n        at\norg.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:247)\n        at\norg.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:193)\n        at\norg.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:243)\n        at\norg.apache.catalina.core.StandardPipeline.invokeNext(StandardPipeline.java:566)\n        at\norg.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:472)\n        at org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:943)\n        at\norg.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:201)\n        at\norg.apache.catalina.core.StandardPipeline.invokeNext(StandardPipeline.java:566)\n        at\norg.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:472)\n        at org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:943)\n        at\norg.apache.catalina.core.StandardContext.invoke(StandardContext.java:2344)\n        at\norg.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:164)\n        at\norg.apache.catalina.core.StandardPipeline.invokeNext(StandardPipeline.java:566)\n        at\norg.apache.catalina.valves.ErrorDispatcherValve.invoke(ErrorDispatcherValve.java:170)\n        at\norg.apache.catalina.core.StandardPipeline.invokeNext(StandardPipeline.java:564)\n        at\norg.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:170)\n        at\norg.apache.catalina.core.StandardPipeline.invokeNext(StandardPipeline.java:564)\n        at\norg.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:472)\n        at org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:943)\n        at\norg.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:163)\n        at\norg.apache.catalina.core.StandardPipeline.invokeNext(StandardPipeline.java:566)\n        at\norg.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:472)\n        at org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:943)\n        at\norg.apache.catalina.connector.warp.WarpRequestHandler.handle(WarpRequestHandler.java:215)\n        at\norg.apache.catalina.connector.warp.WarpConnection.run(WarpConnection.java:194)\n        at java.lang.Thread.run(Thread.java:484)\n\n\nMore precisions :\nI have tried with Tomcat working as a standalone servlet container (without\nApache and WebApp module) and the application works fine, no deserialization\nfailure.\nMoreover I've had similar symptoms with mod_jk using ajp13 with an earlier\nversion of Tomcat3 (maybe the 3.2.2, but I can't remember for sure).\nSo my guess is that maybe the solution to this problem has already been found\nfor the 3.2 series and could be used for the WebApp module."}, {"attachment_id": null, "tags": [], "creator": "pier@betaversion.org", "is_private": false, "count": 1, "id": 14995, "time": "2002-04-29T12:23:40Z", "bug_id": 4930, "creation_time": "2002-04-29T12:23:40Z", "text": "*** Bug 5040 has been marked as a duplicate of this bug. ***"}, {"count": 2, "tags": [], "bug_id": 4930, "attachment_id": null, "text": "*** Bug 6499 has been marked as a duplicate of this bug. ***", "id": 15023, "time": "2002-04-29T13:07:17Z", "creator": "pier@betaversion.org", "creation_time": "2002-04-29T13:07:17Z", "is_private": false}, {"count": 3, "tags": [], "creator": "pier@betaversion.org", "text": "*** Bug 7169 has been marked as a duplicate of this bug. ***", "id": 15025, "time": "2002-04-29T13:07:43Z", "bug_id": 4930, "creation_time": "2002-04-29T13:07:43Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "creator": "remm@apache.org", "attachment_id": null, "id": 35220, "time": "2003-04-15T15:59:44Z", "bug_id": 4930, "creation_time": "2003-04-15T15:59:44Z", "is_private": false, "text": "Webapp is no longer actively developed, so this issue will not be fixed if it \nstill exists."}]