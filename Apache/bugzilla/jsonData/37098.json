[{"count": 0, "tags": [], "creator": "ndp@mac.com", "is_private": false, "id": 81167, "attachment_id": null, "bug_id": 37098, "creation_time": "2005-10-14T22:19:45Z", "time": "2005-10-14T22:19:45Z", "text": "<jsp:element name=\"div\">\n\t<c:if test=\"${false}\">\n\t\t<jsp:attribute name=\"onmouseover\">\n\t\t\treturn overlib('foo');\n\t\t</jsp:attribute>\n\t</c:if>\n\t<jsp:body>\n\t\tbar\n\t</jsp:body>\n</jsp:element>\n\n-> Attribute onmouseover invalid for tag if according to TLD\n\nAs a workaround\n- can put the if condition into the attribute in order to generate an empty \nattribute but this is not quite well-formed XML. This only works in some cases\n- use CDATA to define elements\n\nBoth of these are poor alternatives."}, {"count": 1, "tags": [], "creator": "kin-man.chung@sun.com", "is_private": false, "id": 81168, "attachment_id": null, "bug_id": 37098, "creation_time": "2005-10-14T23:40:22Z", "time": "2005-10-14T23:40:22Z", "text": "The JSP spec does not allow custom tags inside the body of <jsp:element>."}, {"count": 2, "tags": [], "creator": "kin-man.chung@sun.com", "attachment_id": null, "is_private": false, "id": 81266, "time": "2005-10-17T19:35:11Z", "bug_id": 37098, "creation_time": "2005-10-17T19:35:11Z", "text": "The reason for restricting the elements in the body of a <jsp:element> so that\nthe resultant XML element is well-formed.\n \nNote that there is no restriction on the body of <c:attribute>, so the correct\nway for this case is to use something like:\n\n<jsp:element name=\"div\">\n    <jsp:attribute name=\"attr\">\n\t<c:if test=\"${false}\">something</c:if>\n    </jsp:attribute>\n    <jsp:body>\n        bar\n    </jsp:body>\n</jsp:element>\n\nAlternately, use conditional expression in EL, so the use of <c:if> is made\nunnecessary."}, {"count": 3, "tags": [], "creator": "markhobson@gmail.com", "attachment_id": null, "id": 88702, "time": "2006-05-01T17:40:54Z", "bug_id": 37098, "creation_time": "2006-05-01T17:40:54Z", "is_private": false, "text": "The proposed workaround is not always sufficient.  For example, I want to\nconditionally add the 'multiple' attribute to an HTML select tag:\n\n<jsp:element name=\"select\">\n   <jsp:attribute name=\"multiple\">\n      <c:if test=\"${multiple}\">multiple</c:if>\n   </jsp:attribute>\n   <jsp:body>\n      ...\n   </jsp:body>\n</jsp:element>\n\nThis results in:\n\n${multiple == true} : <select multiple=\"multiple\">...</select>\n${multiple == false} : <select multiple=\"\">...</select>\n\nFirefox and IE both treat the above as equivalent markup due to legacy reasons,\nthus the <select> is always rendered as a multiple-choice listbox rather than a\nsingle-choice drop-down.\n\nIs there any suitable workaround for these scenarios, or is this simply an\nomission in the JSP spec?"}, {"count": 4, "tags": [], "creator": "ndp@mac.com", "attachment_id": null, "id": 88707, "time": "2006-05-02T04:55:40Z", "bug_id": 37098, "creation_time": "2006-05-02T04:55:40Z", "is_private": false, "text": "An engineer from Sun wrote me back saying that this is the way it's spec'd, so\nwe're out of luck.\n\nI think this is unfortunate. I have taken different tactics on this: besides the\ntechniques mentioned in the comments,  I just use and c:if/c:choose block and\nrepeat a the whole element snippet of code. When you get multiple attributes\nyou're playing this game with, it gets pretty ugly.\n\nThis must be a VERY common problem. In the last year two of the other engineers\non my team have run into it (and there's only three of us writing java code).\n\nIf I have to deal with this a couple more times, I'll probably hunker down and\njust write a replacement for the element generation code that works the way we'd\nlike.\n\nHope this helps,\nAndy\nndp@mac.com\nndpsoftware.com"}, {"count": 5, "tags": [], "creator": "kin-man.chung@sun.com", "attachment_id": null, "id": 88729, "time": "2006-05-02T18:23:27Z", "bug_id": 37098, "creation_time": "2006-05-02T18:23:27Z", "is_private": false, "text": "This is logged in \n\nhttps://jsp-spec-public.dev.java.net/issues/show_bug.cgi?id=167\n\nHopefully, it will be addressed in the next rev of the Spec."}]