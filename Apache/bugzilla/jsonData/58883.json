[{"count": 0, "tags": [], "bug_id": 58883, "attachment_id": 33459, "id": 187789, "time": "2016-01-18T08:43:12Z", "creator": "shahar@datorama.com", "creation_time": "2016-01-18T08:43:12Z", "is_private": false, "text": "Created attachment 33459\nContains a number that is being read not correctly\n\nIn version 3.10.1 reading a number that it's value is actually 620.91666666666663 (in the xml) will be read as is.\nAfter upgrading to version 3.13 this number is being read as 620.916666666667\nThere are many more examples which are more critical.\nThis is kind of BWC break, nevertheless the number that is being read is not accurate.\n\nsee attached file, contains the example number i gave in column EH.\n\nappreciate any kind of help.\n\nThanks"}, {"count": 1, "tags": [], "bug_id": 58883, "attachment_id": null, "id": 187790, "time": "2016-01-18T08:59:12Z", "creator": "apache@gagravarr.org", "creation_time": "2016-01-18T08:59:12Z", "is_private": false, "text": "How are you reading the file? How are you viewing the state of the number?\n\nSome code, ideally in the form of a self-contained unit test using your file, would be most helpful for us to understand your issue"}, {"count": 2, "tags": [], "bug_id": 58883, "is_private": false, "text": "What i'm doing is reading the cells and writing them to a csv file:\n\ntry(Reader reader = new InputStreamReader(sheetInputStream,\"UTF-8\")){\n\t\t\tInputSource sheetSource = new InputSource(reader);\n\t\t\tsheetSource.setEncoding(\"UTF-8\");\n\t\t\tSAXParserFactory saxFactory = SAXParserFactory.newInstance();\n\t\t\tSAXParser saxParser = saxFactory.newSAXParser();\n\t\t\tXMLReader sheetParser = saxParser.getXMLReader();\n\t\t\t// ContentHandler handler = new MyXSSFSheetHandler(styles, strings,\n\t\t\t// this.minColumns, this.output);\n\t\n\t\t\tDataFormatter format = new MyDataFormatter();\n\t\t\tSheetContentsHandler blof = new MySheetContentsHandler(this.printStream, rowsLimit);\n\t\t\tContentHandler handler = new XSSFSheetXMLHandler(styles, strings, blof, format, false);\n\t\n\t\t\tsheetParser.setContentHandler(handler);\n\t\t\tsheetParser.parse(sheetSource);\n\t\t\t}", "id": 187791, "time": "2016-01-18T09:30:35Z", "creator": "shahar@datorama.com", "creation_time": "2016-01-18T09:30:35Z", "attachment_id": null}, {"id": 187792, "tags": [], "creator": "shahar@datorama.com", "is_private": false, "count": 3, "text": "What i'm doing is reading the cells and writing them to a csv file:\n\ntry(Reader reader = new InputStreamReader(sheetInputStream,\"UTF-8\")){\n\tInputSource sheetSource = new InputSource(reader);\n\tsheetSource.setEncoding(\"UTF-8\");\n\tSAXParserFactory saxFactory =  SAXParserFactory.newInstance();\n\tSAXParser saxParser = saxFactory.newSAXParser();\n\tXMLReader sheetParser = saxParser.getXMLReader();\n\t// ContentHandler handler = new MyXSSFSheetHandler(styles, strings,\n\t// this.minColumns, this.output);\n\t\n\tDataFormatter format = new MyDataFormatter();\n\tSheetContentsHandler blof = new MySheetContentsHandler(this.printStream, rowsLimit);\n\tContentHandler handler = new XSSFSheetXMLHandler(styles, strings, blof, format, false);\n\t\n\tsheetParser.setContentHandler(handler);\n\tsheetParser.parse(sheetSource);\n}\n\nAnd MySheetContentsHandler basically doing:\n\n@Override\npublic void cell(String cellReference, String formattedValue) {\n\t\t\t\n // Add data\n this.printStream.print(formattedValue);\n\t\t\t\n}\n\nWhere the 'printStream' is a writer to new CSV file.\nI opened the xlsx file as a zip file and observed this cell value and it was 620.91666666666663 so that what i'm expecting to be read in the 'formattedValue'.\nMoreover, this same behavior in version 3.10.1 did read the value as is in the inner xml file", "time": "2016-01-18T09:35:43Z", "bug_id": 58883, "creation_time": "2016-01-18T09:35:43Z", "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 58883, "attachment_id": null, "id": 187793, "time": "2016-01-18T09:38:51Z", "creator": "apache@gagravarr.org", "creation_time": "2016-01-18T09:38:51Z", "is_private": false, "text": "You seem to be using a custom DataFormatter class, could that be the issue?\n\nOpening up your sample file, EH1 seems to be formatted as General, which means that the number will be truncated to a \"sensible\" level of precision, just as in Excel. The value that you are seeing output by POI seems to match what I see when I load the file into OpenOffice. We aim for POI to match Excel, so when it does we consider that a success and not a bug :)"}, {"count": 5, "tags": [], "creator": "shahar@datorama.com", "attachment_id": null, "is_private": false, "id": 187794, "time": "2016-01-18T09:43:35Z", "bug_id": 58883, "creation_time": "2016-01-18T09:43:35Z", "text": "The custom DataFormatter is used only for date values.\nYes, in excel it shows the same value as POI now gives. So what you are saying is that this behavior has changed a bit? because for sure it wasn't in 3.10.1"}, {"count": 6, "tags": [], "bug_id": 58883, "attachment_id": null, "id": 187798, "time": "2016-01-18T14:11:07Z", "creator": "kiwiwings@apache.org", "creation_time": "2016-01-18T14:11:07Z", "is_private": false, "text": "There was a discussion around the time when POI 3.10.1 [1] came out and there was #57951 [2] which changed the implementation in this area\n\nHopefully the referenced change was the reason - if unsure you can use git-bisect [3] to find the culprit ...\n\n[1] http://apache-poi.1045710.n5.nabble.com/Floating-point-behaviour-difference-between-POI-and-Excel-td5715765.html\n[2] https://bz.apache.org/bugzilla/show_bug.cgi?id=57951\n[3] https://git-scm.com/docs/git-bisect"}, {"count": 7, "text": "As far as I read the discussion below this is mostly \"on-purpose\" to be in line with what Excel provides. You can use a specific DataFormatter to use a differnt format for single cells or set a different format and re-evaluate the workook in POI to get it to return the previous format.", "bug_id": 58883, "attachment_id": null, "id": 192612, "time": "2016-07-24T19:11:04Z", "creator": "dominik.stadler@gmx.at", "creation_time": "2016-07-24T19:11:04Z", "tags": [], "is_private": false}]