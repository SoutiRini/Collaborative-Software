[{"count": 0, "tags": [], "creator": "a.nurwono@f5.com", "attachment_id": null, "text": "Apache seems to simply hex-encodes inodes retrieved by fstat() directly into etags through simple encoding.\n\nApache 2.2.3 in httpd-2.2.3/modules/http/http_etag.c:\n    next = etag_ulong_to_hex(next, (unsigned long)r->finfo.inode);\n\nhttpd-2.2.3/srclib/apr/file_io/unix/filestat.c:\n    if (fstat(thefile->filedes, &info) == 0) {\n...\n    finfo->inode = info->st_ino;\n\n\nThis shows up as a security vulnerability through exposure of inode information for files hosted by httpd:\n\nhttp://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-1418\n\nAn example solution to the problem was posted on OpenBSD, which is to use a hash of the inode instead of directly presenting an encoded inode into the etag value:\n\nhttp://ftp.openbsd.org/pub/OpenBSD/patches/3.2/common/008_httpd.patch\n\n\nI propose that future versions of Apache would either have FileEtag -Inode turned on or have the inode be hashed by default.  (Preferably the original behavior could be optional instead i.e.  FileEtag -noInodehash )\n\nThis would prevent security scanners from flagging all apache implementations as vulnerable.\n\nThanks!", "id": 138572, "time": "2010-07-20T11:36:58Z", "bug_id": 49623, "creation_time": "2010-07-20T11:36:58Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 49623, "attachment_id": null, "id": 148965, "time": "2011-09-01T21:21:54Z", "creator": "wrowe@apache.org", "creation_time": "2011-09-01T21:21:54Z", "is_private": false, "text": "Please provide a citation of how possessing an arbitrary identifier, the inode, represents either a local or remote exploit?\n\nNo, not the respective validation test that is failing, but an actual citation \nw.r.t. the value of an inode to exploiting a machine.  Validation vendors are\nfamous for not actually probing for vulnerabilities, but regurgitating them\nbased on version numbers."}, {"count": 2, "tags": [], "creator": "jorton@redhat.com", "attachment_id": null, "id": 149033, "time": "2011-09-05T13:07:21Z", "bug_id": 49623, "creation_time": "2011-09-05T13:07:21Z", "is_private": false, "text": "Tomas Hoger pointed out that CVE-2003-1418 also mentions a pid leak in the byterange filter; I fixed that part in r1165268 since it seems cheap and harmless."}, {"count": 3, "tags": [], "bug_id": 49623, "text": "Comment suggests this part is probably redundant now after the change:\nhttp://svn.apache.org/viewvc/httpd/httpd/trunk/modules/http/byterange_filter.c?view=markup&pathrev=1165268#l22", "id": 149034, "time": "2011-09-05T13:21:08Z", "creator": "thoger@redhat.com", "creation_time": "2011-09-05T13:21:08Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "creator": "pedietz@west.com", "attachment_id": null, "id": 149279, "time": "2011-09-15T15:34:13Z", "bug_id": 49623, "creation_time": "2011-09-15T15:34:13Z", "is_private": false, "text": "I proprose that 'FileETag MTime Size' become the default along with the fix for the hex problem.  why expose inode in the 1st place... unless you need it."}, {"count": 5, "tags": [], "bug_id": 49623, "text": "fixed in r1199086", "id": 153082, "time": "2012-01-23T22:22:55Z", "creator": "sf@sfritsch.de", "creation_time": "2012-01-23T22:22:55Z", "is_private": false, "attachment_id": null}, {"count": 6, "tags": [], "text": "fixed in 2.4.1", "attachment_id": null, "id": 154241, "creator": "sf@sfritsch.de", "time": "2012-02-26T17:07:13Z", "bug_id": 49623, "creation_time": "2012-02-26T17:07:13Z", "is_private": false}, {"count": 7, "tags": [], "bug_id": 49623, "attachment_id": null, "id": 182347, "time": "2015-04-14T06:14:44Z", "creator": "takashi.asfbugzilla@tks.st", "creation_time": "2015-04-14T06:14:44Z", "is_private": false, "text": "r1165268 was backported to 2.2 in r1165607, this was released on 2.2.21.\nr1199086 has not been backported to 2.2 yet."}]