[{"count": 0, "text": "The following error message appears in the error log file of a virtual host \nunder load:\n\n[warn] (45)Deadlock situation detected/avoided: Failed to acquire global mutex \nlock\n\nThen, the following error message appears in the main server error log:\n\n[emerg] (45)Deadlock situation detected/avoided: apr_proc_mutex_lock failed. \nAttempting to shutdown process gracefully.\n\nThen a new process is spawned and operations resume.\n\nI have this problem with Apache 2.0.52 on Sun Solaris 8 (USparc), but I am \nunable to reproduce it using Apache 2.0.49 with the exact same configuration. \n\nDuring compilation of both server versions I use the following configuration \nflags (in addition to enabling modules): --enable-rule=SHARED_CORE \n--enable-rule=SSL_EXPERIMENTAL --with-mpm=worker --enable-nonportable-atomics \n--with-ssl=/u01/opt --with-expat=$PWD/`ls -d srclib/apr-util/xml/expat`\n\n# apache2/bin/httpd -V\nServer version: Apache/2.0.52\nServer built:   Oct 19 2004 12:07:03\nServer's Module Magic Number: 20020903:9\nArchitecture:   32-bit\nServer compiled with....\n -D APACHE_MPM_DIR=\"server/mpm/worker\"\n -D APR_HAS_SENDFILE\n -D APR_HAS_MMAP\n -D APR_HAVE_IPV6 (IPv4-mapped addresses enabled)\n -D APR_USE_FCNTL_SERIALIZE\n -D APR_USE_PTHREAD_SERIALIZE\n -D SINGLE_LISTEN_UNSERIALIZED_ACCEPT\n -D APR_HAS_OTHER_CHILD\n -D AP_HAVE_RELIABLE_PIPED_LOGS\n -D HTTPD_ROOT=\"/u01/opt/apache2\"\n -D SUEXEC_BIN=\"/u01/opt/apache2/bin/suexec\"\n -D DEFAULT_SCOREBOARD=\"logs/apache_runtime_status\"\n -D DEFAULT_ERRORLOG=\"logs/error_log\"\n -D AP_TYPES_CONFIG_FILE=\"conf/mime.types\"\n -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n# apache2/bin/httpd -l\nCompiled in modules:\n  core.c\n  mod_access.c\n  mod_log_config.c\n  mod_env.c\n  mod_headers.c\n  mod_setenvif.c\n  mod_proxy.c\n  proxy_connect.c\n  proxy_ftp.c\n  proxy_http.c\n  worker.c\n  http_core.c\n  mod_mime.c\n  mod_status.c\n  mod_autoindex.c\n  mod_cgi.c\n  mod_negotiation.c\n  mod_dir.c\n  mod_userdir.c\n  mod_alias.c\n  mod_rewrite.c\n  mod_so.c\n\nDSO Modules included:\napache2.0.52/modules/mod_info.so \napache2.0.52/modules/mod_expires.so\napache2.0.52/modules/mod_deflate.so\napache2.0.52/modules/mod_ssl.so \nsiteminder/webagent/lib/libmod_sm20.so\nsiteminder/webagent/lib/libbtunicode.so\nsiteminder/webagent/lib/libsmlogging.so\nsiteminder/webagent/lib/libsmgda.so\nsiteminder/webagent/lib/libsmvariable.so\n\nI use \nAcceptMutex default\nSSLMutex default\n\nAccording to the logs they default to fcntl and shmcb respectively.\n\nAnother user has reported getting the same error with 2.0.51 on the Apache \nmailing list. He also uses the worker MPM and modSSL, but not the siteminder \nstuff.", "bug_id": 32325, "attachment_id": null, "id": 67259, "time": "2004-11-19T19:50:12Z", "creator": "asmorgrav@yahoo.no", "creation_time": "2004-11-19T19:50:12Z", "tags": [], "is_private": false}, {"count": 1, "tags": [], "bug_id": 32325, "attachment_id": null, "id": 67458, "time": "2004-11-25T14:39:57Z", "creator": "jorton@redhat.com", "creation_time": "2004-11-25T14:39:57Z", "is_private": false, "text": "The default mutex type changed to fcntl (from pthread?) between .49 and .52, so\na workaround other than using prefork might be to substitute \"pthread\" for\n\"default\" in the locking directives.\n\nBut this shouldn't happen, regardless.  Is /u01/opt/apache2 a local filesystem,\nnot an NFS mount etc?"}, {"count": 2, "text": "Google finds reports of this happening on Solaris when using fcntl locking with\n1.3 so perhaps that rules it being anything to do with worker and threading:\nhttp://article.gmane.org/gmane.comp.apache.user/36430\n\nAn interesting link with Netegrity modules mentioned here:\nhttp://archive.apache.org/gnats/5499\n\n \"If you have more than one application running on the server that can cause\n time delays, in one case it was Netegrity Web Agent, Vignette V5 5.6.2,\n Apache can get confused.\"\n", "bug_id": 32325, "attachment_id": null, "id": 67459, "time": "2004-11-25T14:48:04Z", "creator": "jorton@redhat.com", "creation_time": "2004-11-25T14:48:04Z", "tags": [], "is_private": false}, {"count": 3, "tags": [], "creator": "asmorgrav@yahoo.no", "attachment_id": null, "id": 67887, "time": "2004-12-03T17:41:42Z", "bug_id": 32325, "creation_time": "2004-12-03T17:41:42Z", "is_private": false, "text": "1. I have defined AcceptMutex default so I actually have no idea of what file \nwould be used. \n2. You are right: according to the logs, on Solaris, in 2.0.49 AcceptMutex \ndefaults to pthread, while it defaults to fcntl in 2.0.52\n3. In any event, I do not have any NFS file systems mounted on the server\n4. I have ruled out the Netegrity Siteminder WebAgent because somebody not using \nthe Siteminder stuff reported having the same problem with 2.0.51\n5. I do have more than one Listen directive\n\nI would like to avoid using prefork, so one of these days I will try to change \nthe AcceptMutex to pthread to see if it makes any difference."}, {"count": 4, "tags": [], "creator": "asmorgrav@yahoo.no", "attachment_id": null, "id": 68341, "time": "2004-12-13T14:31:05Z", "bug_id": 32325, "creation_time": "2004-12-13T14:31:05Z", "is_private": false, "text": "Today I had the opportunity to make additional load tests after having added \n\"AcceptMutex pthread\" to the configuration. So far, I have not observed any \nerror messages about deadlock situations, nor any server restarts."}, {"count": 5, "tags": [], "bug_id": 32325, "attachment_id": null, "id": 69933, "time": "2005-01-21T19:41:34Z", "creator": "guilhermeassad@uol.com.br", "creation_time": "2005-01-21T19:41:34Z", "is_private": false, "text": "I am experiencing the same problem with Solaris 5.7 and apache 2.0.52 using \nmod_ssl and mod_proxy. As it is overloading our jetty server running behind \napache, it seems to be a problem related to network socket. "}, {"count": 6, "tags": [], "creator": "ed.wittmann@fiserv.com", "attachment_id": null, "id": 75084, "time": "2005-05-19T23:21:33Z", "bug_id": 32325, "creation_time": "2005-05-19T23:21:33Z", "is_private": false, "text": "I am also noticing this problem on Solaris 8 - I am using Sun's OpenSSL package\nthat is installed as part of their Crypto Accelerator 1000 hardware, worker\nthreads, and the following rules defined:\n\n./configure \\\n--enable-so \\\n--with-mpm=worker \\\n--enable-mods-shared=most \\\n--enable-ssl \\\n--with-ssl=/opt/SUNWconn/crypto \\\n--enable-dav \\\n--enable-so \\\n--enable-deflate \\\n--enable-proxy=static \\\n--enable-proxy-http=static \\\n--enable-nonportable-atomics=yes \n\nI did not have AcceptMutex or SSLMutex defined in my httpd.conf, so I defined\nthem as:\n\nAcceptMutex pthread\nSSLMutex sem\n\nI should have defined the SSLMutex anyway since I'm using SSLSessionCache - my bad.\n\nI'm testing the change of AcceptMutex and will report back."}, {"count": 7, "tags": [], "bug_id": 32325, "is_private": false, "id": 75085, "attachment_id": null, "creator": "ed.wittmann@fiserv.com", "creation_time": "2005-05-19T23:26:11Z", "time": "2005-05-19T23:26:11Z", "text": "I should add that I experienced this problem with 2.0.53 - I have also upgraded\nto 2.0.54.\n\n(In reply to comment #6)\n> I am also noticing this problem on Solaris 8 - I am using Sun's OpenSSL package\n> that is installed as part of their Crypto Accelerator 1000 hardware, worker\n> threads, and the following rules defined:\n> \n> ./configure \\\n> --enable-so \\\n> --with-mpm=worker \\\n> --enable-mods-shared=most \\\n> --enable-ssl \\\n> --with-ssl=/opt/SUNWconn/crypto \\\n> --enable-dav \\\n> --enable-so \\\n> --enable-deflate \\\n> --enable-proxy=static \\\n> --enable-proxy-http=static \\\n> --enable-nonportable-atomics=yes \n> \n> I did not have AcceptMutex or SSLMutex defined in my httpd.conf, so I defined\n> them as:\n> \n> AcceptMutex pthread\n> SSLMutex sem\n> \n> I should have defined the SSLMutex anyway since I'm using SSLSessionCache - my\nbad.\n> \n> I'm testing the change of AcceptMutex and will report back.\n\n"}, {"count": 8, "text": "The current default is deemed to be the best trade-off, it's not clear what\nthere is left to change here.   Since:\n\n1) this issue was mostly seen by people using a particular third-party module\n2) it was also seen by people using 1.3\n3) it only happens on Solaris\n\nI'd guess this is either something to do with a third-party module doing\nsomething weird, or some system tuning issue.  (1) and (3) can be eliminated\nfrom enquiries by taking up a support issue with the appropriate vendors.", "bug_id": 32325, "is_private": false, "id": 81904, "time": "2005-10-28T18:00:23Z", "creator": "jorton@redhat.com", "creation_time": "2005-10-28T18:00:23Z", "tags": [], "attachment_id": null}]