[{"count": 0, "tags": [], "bug_id": 52111, "attachment_id": 27865, "id": 151029, "time": "2011-10-29T10:19:09Z", "creator": "zitzelsberger.unistuttgart@googlemail.com", "creation_time": "2011-10-29T10:19:09Z", "is_private": false, "text": "Created attachment 27865\nThe spreadsheetfile used.\n\nI created a simple .xsf test spreadsheet  (see attachment) that uses refernce intersection: (C2:D3 D3:E4)\n\nWhen parsing the Formula of the Cell (HSSF)\nPtg[] ptgs = FormulaParser.parse(c.getCellFormula(),evaluationWorkbook,c.getCellType(),workbook.getSheetIndex(c.getSheet()));\n\nThe following exception is raised:\n\n\n---- STACKTRACE ----\n\norg.apache.poi.ss.formula.FormulaParseException: Parse error near char 7 'D' in specified formula '(C2:D3 D3:E4)'. Expected ')'\n\tat org.apache.poi.ss.formula.FormulaParser.expected(FormulaParser.java:217)\n\tat org.apache.poi.ss.formula.FormulaParser.Match(FormulaParser.java:249)\n\tat org.apache.poi.ss.formula.FormulaParser.parseSimpleFactor(FormulaParser.java:1106)\n\tat org.apache.poi.ss.formula.FormulaParser.percentFactor(FormulaParser.java:1077)\n\tat org.apache.poi.ss.formula.FormulaParser.powerFactor(FormulaParser.java:1064)\n\tat org.apache.poi.ss.formula.FormulaParser.Term(FormulaParser.java:1424)\n\tat org.apache.poi.ss.formula.FormulaParser.additiveExpression(FormulaParser.java:1524)\n\tat org.apache.poi.ss.formula.FormulaParser.concatExpression(FormulaParser.java:1508)\n\tat org.apache.poi.ss.formula.FormulaParser.comparisonExpression(FormulaParser.java:1465)\n\tat org.apache.poi.ss.formula.FormulaParser.unionExpression(FormulaParser.java:1445)\n\tat org.apache.poi.ss.formula.FormulaParser.parse(FormulaParser.java:1566)\n\tat org.apache.poi.ss.formula.FormulaParser.parse(FormulaParser.java:174)\n\tat main.ListProtectedCells.main(ListProtectedCells.java:52)"}, {"count": 1, "attachment_id": 30878, "bug_id": 52111, "text": "Created attachment 30878\nProposed fix for intersections\n\nI've been looking into intersection parsing and have attached a patch against trunk r1525871 which I believe fixes this.  I would appreciate review from someone familiar with the formula parsing code.\n\nThere are two issues parsing \"(C2:D3 D3:E4)\":\n\n(1) Intersection parsing is unsupported.  It requires changing the lexing in GetChar to track whitespace state because although we generally skip whitespace the intersection operator is a space.  This approach seems the least invasive as it allows the rest of the parse to continue skipping whitespace.\n\n(2) Having fixed that, brackets are not supported around expressions with lower precedence than comparison operations (previously just union; now union and intersection).  This seems to be a matter of changing parseSimpleFactor to call unionExpression (the root of the parse) inside the matches for parentheses.\n\nExisting tests pass and I've added some covering the intersection and parenthesis behaviour in TestFormulaParser.\n\nQueries:\n\n(a) The formula \"1 2\" was a tested parser fail case.  It now parses as a intersection.  \"1,2\" already parsed as a union.  Neither make sense and Excel understandably complains.  Does/should the POI FormulaParser attempt to cope with this type of error?  In a more elaborate compiler this might be a type analysis error rather than something caught by the parse.  Is there any POI code that attempts this kind of thing?\n\n(b) The documentation pulled in via the svn:external to src/documentation/content/xdocs/spreadsheet/formula.xml claims intersections and unions are not yet supported.  Is the union documentation just out of date, or is there some other sense in which it isn't supported?  If it's just out of date then I guess \"Region operators: union, intersection\" just wants to move from the unsupported to the supported section.  I can supply a separate patch if required.", "id": 170246, "time": "2013-09-24T13:58:02Z", "creator": "mth-asf@corefiling.co.uk", "creation_time": "2013-09-24T13:58:02Z", "tags": [], "is_private": false}, {"count": 2, "tags": [], "bug_id": 52111, "text": "In r1613737 I have added a unit test for intersect formulas, based on your kindly provided test file\n\nThis already passes, so it looks like some other formula parser work in the mean time has already added the required support!\n\n(If you spot something still missing for this, please re-open the bug, and upload a small junit unit test which shows what is still missing)", "id": 176702, "time": "2014-07-26T22:41:10Z", "creator": "apache@gagravarr.org", "creation_time": "2014-07-26T22:41:10Z", "is_private": false, "attachment_id": null}, {"count": 3, "attachment_id": null, "bug_id": 52111, "is_private": false, "id": 184646, "time": "2015-08-19T09:58:20Z", "creator": "dtn-asfbugs@corefiling.co.uk", "creation_time": "2015-08-19T09:58:20Z", "tags": [], "text": "Intersection formulae still don't work in XSSF - re-opening to deal with that."}, {"count": 4, "tags": [], "creator": "dtn-asfbugs@corefiling.co.uk", "attachment_id": null, "is_private": false, "id": 184647, "time": "2015-08-19T10:13:27Z", "bug_id": 52111, "creation_time": "2015-08-19T10:13:27Z", "text": "I've now applied Matt's patch from comment 1. I've also added a minimal test to TestXSSFBugs demonstrating what previously didn't work and now does.\n\nFixed in SVN r1696549, docs/release notes followed in r1696550"}]