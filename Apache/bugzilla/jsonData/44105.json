[{"attachment_id": null, "tags": [], "creator": "asmorgrav@yahoo.no", "text": "When using httpd as a reverse proxy with keep-alive client connections\n(KeepAlive On, nokeepalive=0), we observe frequent core dumps when accessing the\nreverse proxy using browsers for which httpd is configured to accept keep-alive\nconnections.\n\nThis occurs even under VERY light load: one browser loading one single resource\nover and over again.\n\nThe core dumps cannot be reproduced with browsers for which Apache is configured\nto close the connection (nokeepalive=1) after each request. Reducing the value\nof KeepAliveTimeout, or that of MaxKeepAliveRequests does not make the problem\ngo away.\n\nOne way to circumvent the problem however, is to set proxy-nokeepalive=1.\n\nThis bug may be related to BR 12426.", "count": 0, "id": 111905, "time": "2007-12-19T07:35:24Z", "bug_id": 44105, "creation_time": "2007-12-19T07:35:24Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 44105, "attachment_id": 21293, "id": 111906, "time": "2007-12-19T07:43:18Z", "creator": "asmorgrav@yahoo.no", "creation_time": "2007-12-19T07:43:18Z", "is_private": false, "text": "Created attachment 21293\nLog outputs and stack trace\n\nThis attachment contains output from debug log, log_forensic as well as a stack\ntrace.\n\nAt the time of the core dump there was only one request (for an image)\nprocessed by the server. KeepAlive was used on the client connection as well as\nthe backend connection (proxy-nokeepalive=0). The logs and the stack trace\nclearly show that the core dump occurs in a function called from\nap_proxy_http_handler.\n\nI seems to me like the block to which the variable buffer points is corrupted.\nAFAIU it is supposed to contain the request string but it seems to contain\ngarbage. This is further confirmed by the value of backasswards==1 which should\nonly be the case if the HTTP version is not present in the request, which it\ndefinitively is."}, {"count": 2, "tags": [], "bug_id": 44105, "attachment_id": null, "id": 111961, "time": "2007-12-20T12:30:17Z", "creator": "rpluem@apache.org", "creation_time": "2007-12-20T12:30:17Z", "is_private": false, "text": "(In reply to comment #1)\n\n> \n> I seems to me like the block to which the variable buffer points is corrupted.\n\nA lot more seems to be corrupted:\n\n0xff10d09c in apr_table_do (comp=0x1, rec=0xf82f9a58, t=0x7b400)\n    at apr_tables.c:885\n\ncomp should be pointing to a function and by no means should ever be 0x1! The\nfunction pointer is not supplied in a variable but as a constant.\n\n 0x00035c28 in ap_proxy_http_process_response (p=0x304ea8, r=0x30ef08, \n    p_conn=0x363e38, origin=0x305608, backend=0x305400, conf=0x1e9988, \n    bb=0x363de8, server_portstr=0xf82fbaf0 \"\") at proxy_http.c:1656\n\nThe line number does not match at all (or you have a patched version of the proxy)\n\nPlease try the latest 2.0.x version with a vanilla build and let me know if the\nproblem still persists."}, {"count": 3, "tags": [], "bug_id": 44105, "text": "(In reply to comment #2)\n> The line number does not match at all (or you have a patched version of the proxy)\n\nI forgot that I did patch mod_proxy with\nhttp://people.apache.org/~colm/httpd-2.0-reverse-proxy-cookie.patch\n\n> \n> Please try the latest 2.0.x version with a vanilla build and let me know if the\n> problem still persists.\n\nI made a new test with a vanilla build of mod_proxy 2.0.59. This time the server\ndid not crash (dump core), but the request processing appears to freeze whenever\nkeepalive is used (front-end + back-end). When I disable proxy keepalive\n(proxy-nokeepalive=1), it serves the proxied resources normally.\n\nI'll attach debug and truss output", "id": 111972, "time": "2007-12-21T01:04:43Z", "creator": "asmorgrav@yahoo.no", "creation_time": "2007-12-21T01:04:43Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 44105, "text": "Created attachment 21299\nTruss output and debug log", "id": 111973, "time": "2007-12-21T01:06:48Z", "creator": "asmorgrav@yahoo.no", "creation_time": "2007-12-21T01:06:48Z", "is_private": false, "attachment_id": 21299}, {"count": 5, "tags": [], "creator": "rpluem@apache.org", "attachment_id": null, "text": "(In reply to comment #4)\n> Created an attachment (id=21299) [edit]\n> Truss output and debug log \n> \n\nThe truss does not really help. If it freezes try to get a backtrace either via\npstack or gdb.", "id": 111991, "time": "2007-12-21T08:06:28Z", "bug_id": 44105, "creation_time": "2007-12-21T08:06:28Z", "is_private": false}, {"count": 6, "tags": [], "creator": "asmorgrav@yahoo.no", "attachment_id": 21317, "text": "Created attachment 21317\npstack from frozen threads\n\nHere is the output from pstack.\n\nIt shows two threads. This is because we use two VH to reverse proxy the\nrequest; one for SSL termination and content compression, and the other for\ndetermining where to route the request and cache the contents.\n\nFor debug purposes we have however disabled caching.", "id": 112191, "time": "2007-12-26T00:14:47Z", "bug_id": 44105, "creation_time": "2007-12-26T00:14:47Z", "is_private": false}, {"count": 7, "tags": [], "bug_id": 44105, "attachment_id": null, "id": 112192, "time": "2007-12-26T00:47:01Z", "creator": "asmorgrav@yahoo.no", "creation_time": "2007-12-26T00:47:01Z", "is_private": false, "text": "(In reply to comment #6)\n\nI guess I spoke too soon about the two threads...\n\nAnyway I simplified the configuration so that there is only one VH involved in\nserving any request. The behaviour is still the same and so is the pstack."}]