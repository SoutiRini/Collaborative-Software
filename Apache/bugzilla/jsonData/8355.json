[{"count": 0, "text": "In case you configure a JNDI lookup for the database connection,and pass a \nstring as a parameter to the dataSource attribute of either sql:setDataSource \nor sql:query an exception:\njavax.servlet.jsp.JspException: Unable to get connection, DataSource invalid \nis thrown.\n\nThe configuration is done as follows:\nin server.xml of tomcat\n=======================================================================\n    <Resource name=\"jdbc/ActivityDB\" auth=\"Container\"\n       description=\"Database for ActivtyTracking\"\n              type=\"javax.sql.DataSource\"/>\n    <ResourceParams name=\"jdbc/ActivityDB\">\n      <parameter>\n        <name>user</name>\n        <value>PBPUBLIC</value>\n      </parameter>\n      <parameter>\n        <name>password</name>\n        <value>PBPUBLIC</value>\n      </parameter>\n      <parameter>\n        <name>driverClassName</name>\n        <value>com.pointbase.jdbc.jdbcUniversalDriver</value>\n      </parameter>      \n      <parameter>\n        <name>driverName</name>\n        <value>jdbc:pointbase:server://localhost/ActivityDB</value>\n      </parameter>\n      \n    </ResourceParams>\n=========================================================================\nin the web.xml \n=========================================================================\n    <resource-ref> \n    \t<res-ref-name>jdbc/ActivityDB</res-ref-name>\n    \t<res-type>javax.sql.DataSource</res-type>\n    \t<res-auth>Container</res-auth>\n    \t<res-sharing-scope>Shareable</res-sharing-scope>\n    </resource-ref>\n\n====================================================================\nthe JSP looks like this:\n\n===================================================================\n<sql:query var=\"person\" dataSource=\"jdbc/ActivityDB\" scope =\"session\">\n\t\t\tselect user_mast.f_name ,\n\t\t\tproject_mast.proj_name,task_mast.task_name, \n\t\t\ttask_mast.status as task_status, \nactivity_mast.act_name, activity_mast.status as activity_status\n\t\t\tfrom \n\t\t\tuser_mast, activity_mast, task_mast, project_mast\n\t\t\twhere user_mast.user_ID = activity_mast.resp_engineer\n\t\t\tand task_mast.task_ID = activity_mast.parent_task\n\t\t\tand task_mast.project = project_mast.proj_ID\n\t\t\tand activity_mast.act_st_dt > ? and \nactivity_mast.act_end_dt < ?\n\t\t<sql:param value=\"${from}\" />\n\t\t<sql:param value=\"${to}\" />\n\t\t</sql:query>\n\n===================================================================", "creator": "prasad.subramanian@sun.com", "attachment_id": null, "id": 14214, "time": "2002-04-22T01:10:16Z", "bug_id": 8355, "creation_time": "2002-04-22T01:10:16Z", "tags": [], "is_private": false}, {"count": 1, "tags": [], "creator": "jan.luehe@sun.com", "attachment_id": null, "id": 15294, "time": "2002-05-02T01:51:28Z", "bug_id": 8355, "creation_time": "2002-05-02T01:51:28Z", "is_private": false, "text": "This works for me.\n\nDid you add the JNDI resource mapping in your server.xml (shown below) to the\n<Context> element of the specific application that tries to access the JNDI\nresource?\n\nNote that instead of modifying your server.xml, you may create a <webapp>.xml\nfile (where you replace <webapp> with your webapp's name) in your server's\nwebapps directory, and add the JNDI resource mapping to it. In my case, I\ncreated a standard-examples.xml file with these contents:\n\n<Context path=\"/standard-examples\" docBase=\"standard-examples\" debug=\"0\">\n  <Resource name=\"jdbc/BookDB\" reloadable=\"true\"  auth=\"Container\"\n          type=\"javax.sql.DataSource\"/>\n  <ResourceParams name=\"jdbc/BookDB\">\n  <parameter>\n    <name>user</name>\n    <value>PBPUBLIC</value>\n  </parameter>\n  <parameter>\n    <name>password</name>\n    <value>PBPUBLIC</value>\n  </parameter>\n  <parameter>\n    <name>driverClassName</name>\n    <value>com.pointbase.jdbc.jdbcUniversalDriver</value>\n  </parameter>\n  <parameter>\n    <name>driverName</name>\n    <value>jdbc:pointbase:server://localhost/sample</value>\n  </parameter>\n  </ResourceParams>\n</Context>\n \n"}]