[{"count": 0, "tags": [], "bug_id": 51580, "text": "Created attachment 27330\nCatalina log file with the error.\n\nWhen trying to deploy a WAR application (50MB approx) I get:\n\n\"SEVERE: Error deploying web application archive gestaoApolices.war\njava.lang.NullPointerException\"\n\nComplete stacktrace is attached.\n\nI've seen in the sources that this might be related with the correction of \"Bugzilla 33636\"\n\nLet me know if the war file is needed, in case you're not able to reproduce the problem.", "id": 148265, "time": "2011-07-28T22:41:57Z", "creator": "cleonf@gmail.com", "creation_time": "2011-07-28T22:41:57Z", "is_private": false, "attachment_id": 27330}, {"count": 1, "tags": [], "text": "I've just find out that the problem was in a specific file within the WAR:\n\n\"Cliente-TextExtractRules-A\u00e7oreana.properties\"\n\nThe file name has Portuguese accented char \"\u00e7\".\n\nAfter replace the char by \"c\" in that file, the deployment was done ok.", "attachment_id": null, "id": 148266, "creator": "cleonf@gmail.com", "time": "2011-07-28T23:18:19Z", "bug_id": 51580, "creation_time": "2011-07-28T23:18:19Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 51580, "attachment_id": null, "id": 148279, "time": "2011-07-29T21:25:24Z", "creator": "markt@apache.org", "creation_time": "2011-07-29T21:25:24Z", "is_private": false, "text": "Your WAR file is not valid. I suspect it was created with a zip utility rather than with jar. The default character sets are different. You need to use jar if you have file names that are use non-ASCII characters."}, {"count": 3, "tags": [], "creator": "cleonf@gmail.com", "attachment_id": null, "text": "Actually was using the zip's Ant task to produce the war file and I didn't realized that because it's a automatically generated build.xml from Google GWT.", "id": 148281, "time": "2011-07-30T00:21:30Z", "bug_id": 51580, "creation_time": "2011-07-30T00:21:30Z", "is_private": false}, {"count": 4, "tags": [], "text": "Zip uses platform default encoding to encode file names.\nJAR uses UTF-8.\n\n\njava.lang.NullPointerException\n        at org.apache.catalina.startup.ExpandWar.expand(ExpandWar.java:407)\n        at org.apache.catalina.startup.ExpandWar.expand(ExpandWar.java:138)\n\nIt looks as if InputStream reference in ExpandWar#expand(InputStream, File) was null. That is an earlier call to jarFile.getInputStream(jarEntry) on ExpandWar.java:135 returned null.\n\nThe Javadoc for JarFile#getInputStream(ZipEntry) does not say that it can return null. I would have expected a ZipException here.", "attachment_id": null, "id": 148288, "creator": "knst.kolinko@gmail.com", "time": "2011-07-30T14:32:59Z", "bug_id": 51580, "creation_time": "2011-07-30T14:32:59Z", "is_private": false}, {"count": 5, "tags": [], "creator": "chris@christopherschultz.net", "text": "It seems like adding a null check here would be good, since NPE in Tomcat looks like a bug in Tomcat instead of an error in the WAR file. I'm re-opening for that reason.\n\nPlease re-close INVALID if you are adamant about not having a null check.", "id": 148322, "attachment_id": null, "bug_id": 51580, "creation_time": "2011-08-01T18:35:58Z", "time": "2011-08-01T18:35:58Z", "is_private": false}, {"count": 6, "tags": [], "bug_id": 51580, "attachment_id": null, "id": 148327, "time": "2011-08-01T21:23:28Z", "creator": "markt@apache.org", "creation_time": "2011-08-01T21:23:28Z", "is_private": false, "text": "I'm not overly concerned about this. If you want to patch it, go ahead. If you don't I'll eventually close this as WONTFIX."}, {"count": 7, "tags": [], "bug_id": 51580, "attachment_id": null, "id": 148598, "time": "2011-08-12T19:02:50Z", "creator": "chris@christopherschultz.net", "creation_time": "2011-08-12T19:02:50Z", "is_private": false, "text": "Cleon, can you attach a minimal WAR file that reproduces this issue? Also, if there are any environmental settings necessary, such as expandWars=\"false\", please let me know."}, {"count": 8, "tags": [], "creator": "cleonf@gmail.com", "text": "Created attachment 27385\nMinimal war to reproduce the problem\n\nHere's the file. There's no special env settings, just import the file.\n\nRegards,\n   Cl\u00e9on", "id": 148605, "attachment_id": 27385, "bug_id": 51580, "creation_time": "2011-08-13T20:17:31Z", "time": "2011-08-13T20:17:31Z", "is_private": false}, {"count": 9, "tags": [], "bug_id": 51580, "attachment_id": null, "id": 148610, "time": "2011-08-15T10:55:06Z", "creator": "markt@apache.org", "creation_time": "2011-08-15T10:55:06Z", "is_private": false, "text": "Changing back to an enhancement. There is no Tomcat bug here."}, {"count": 10, "tags": [], "bug_id": 51580, "text": "(In reply to comment #4)\n> Zip uses platform default encoding to encode file names.\n> JAR uses UTF-8.\n\nI'm not so sure that's true:\n\n$ echo $LC_CTYPE\nen_US.UTF-8\n\n$ jar tvf 51580.war \n     0 Sat Aug 13 21:06:34 EDT 2011 text_extraction_rules/\n   594 Sat Aug 13 21:06:34 EDT 2011 text_extraction_rules/Cliente-TextExtractRules-A\u00e7oreana.properties\n   570 Sat Aug 13 21:06:34 EDT 2011 text_extraction_rules/Cliente-TextExtractRules-Liberty.properties\n\n$ LC_CTYPE=en_US.ISO-8851-1 jar tvf 51580.war \n     0 Sat Aug 13 21:06:34 EDT 2011 text_extraction_rules/\n   594 Sat Aug 13 21:06:34 EDT 2011 text_extraction_rules/Cliente-TextExtractRules-A?oreana.properties\n   570 Sat Aug 13 21:06:34 EDT 2011 text_extraction_rules/Cliente-TextExtractRules-Liberty.properties\n\n$ unzip -v 51580.war \nArchive:  51580.war\n Length   Method    Size  Cmpr    Date    Time   CRC-32   Name\n--------  ------  ------- ---- ---------- ----- --------  ----\n       0  Stored        0   0% 2011-08-13 21:06 00000000  text_extraction_rules/\n     594  Stored      594   0% 2011-08-13 21:06 3271f2b8  text_extraction_rules/Cliente-TextExtractRules-A?oreana.properties\n     570  Stored      570   0% 2011-08-13 21:06 a00a7a2c  text_extraction_rules/Cliente-TextExtractRules-Liberty.properties\n--------          -------  ---                            -------\n    1164             1164   0%                            3 files\n\n\nWhen my file.encoding ends up being ISO-8859-1, jar acts just as stupidly as zip.", "id": 148817, "time": "2011-08-25T13:55:26Z", "creator": "chris@christopherschultz.net", "creation_time": "2011-08-25T13:55:26Z", "is_private": false, "attachment_id": null}, {"count": 11, "tags": [], "creator": "chris@christopherschultz.net", "attachment_id": null, "text": "Interestingly enough, Apache Ant's \"zip\" and \"jar\" tasks both have an \"encoding\" attribute to control the charset used for filenames, but they have a subtle difference in their default configurations.\n\nThe <zip> task defaults to the platform's default encoding while the <jar> task defaults to UTF-8 with a *strong* warning not to change the default <jar> encoding unless you know what you're doing.\n\nhttp://ant.apache.org/manual/Tasks/zip.html#encoding\n\nSo it looks like Cleon must have used <zip> instead of the much more appropriate <war> task to create his WAR file.\n\nStill, I think it's a good idea to throw a different kind of exception. NPEs make it look like there is an actual bug in Tomcat which is certainly not the case.", "id": 148821, "time": "2011-08-25T15:18:55Z", "bug_id": 51580, "creation_time": "2011-08-25T15:18:55Z", "is_private": false}, {"count": 12, "tags": [], "text": "Fixed in trunk and 7.0.x branch. Will be included in 7.0.22 onward.", "attachment_id": null, "id": 149542, "creator": "chris@christopherschultz.net", "time": "2011-09-20T20:33:33Z", "bug_id": 51580, "creation_time": "2011-09-20T20:33:33Z", "is_private": false}]