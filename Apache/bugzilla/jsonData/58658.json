[{"count": 0, "tags": [], "bug_id": 58658, "text": "Running 7.0.66 release candidate (smoke-testing) I see an issue that I think is caused by r1715984 change in build.xml:\n\n-           source=\"${compile.source}\"\n-           target=\"${compile.target}\"\n+           source=\"1.7\"\n+           target=\"1.7\"\n\nTo reproduce:\n1. Unpack apache-tomcat-7.0.66.zip\n2. Set JAVA_HOME = Java 6\n3. Start Tomcat\n4. Deployment of every web application fails, including the ROOT one.\n\n\nINFO: Deploying web application directory REDACTED\\apache-tomcat-7.0.66\\webapps\\ROOT\n26.11.2015 18:54:53 org.apache.catalina.core.ContainerBase addChildInternal\nSEVERE: ContainerBase.addChild: start:\norg.apache.catalina.LifecycleException: Failed to start component [StandardEngine[Catalina].StandardHost[localhost].StandardContext[]]\n    at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:154)\n    at org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:901)\n    at org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:877)\n    at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:652)\n    at org.apache.catalina.startup.HostConfig.deployDirectory(HostConfig.java:1263)\n    at org.apache.catalina.startup.HostConfig$DeployDirectory.run(HostConfig.java:1975)\n    at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:439)\n    at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)\n    at java.util.concurrent.FutureTask.run(FutureTask.java:138)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:895)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:918)\n    at java.lang.Thread.run(Thread.java:662)\nCaused by: java.lang.UnsupportedClassVersionError: org/apache/tomcat/websocket/server/WsSci : Unsupported major.minor version 51.0\n    at java.lang.ClassLoader.defineClass1(Native Method)\n    at java.lang.ClassLoader.defineClassCond(ClassLoader.java:631)\n    at java.lang.ClassLoader.defineClass(ClassLoader.java:615)\n    at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:141)\n    at java.net.URLClassLoader.defineClass(URLClassLoader.java:283)\n    at java.net.URLClassLoader.access$000(URLClassLoader.java:58)\n    at java.net.URLClassLoader$1.run(URLClassLoader.java:197)\n    at java.security.AccessController.doPrivileged(Native Method)\n    at java.net.URLClassLoader.findClass(URLClassLoader.java:190)\n    at java.lang.ClassLoader.loadClass(ClassLoader.java:306)\n    at java.lang.ClassLoader.loadClass(ClassLoader.java:247)\n    at java.lang.Class.forName0(Native Method)\n    at java.lang.Class.forName(Class.java:249)\n    at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1842)\n    at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1705)\n    at java.lang.Class.forName0(Native Method)\n    at java.lang.Class.forName(Class.java:249)\n    at org.apache.catalina.startup.WebappServiceLoader.loadServices(WebappServiceLoader.java:192)\n    at org.apache.catalina.startup.WebappServiceLoader.load(WebappServiceLoader.java:157)\n    at org.apache.catalina.startup.ContextConfig.processServletContainerInitializers(ContextConfig.java:1577)\n    at org.apache.catalina.startup.ContextConfig.webConfig(ContextConfig.java:1281)\n    at org.apache.catalina.startup.ContextConfig.configureStart(ContextConfig.java:889)\n    at org.apache.catalina.startup.ContextConfig.lifecycleEvent(ContextConfig.java:386)\n    at org.apache.catalina.util.LifecycleSupport.fireLifecycleEvent(LifecycleSupport.java:117)\n    at org.apache.catalina.util.LifecycleBase.fireLifecycleEvent(LifecycleBase.java:90)\n    at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5460)\n    at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)\n    ... 11 more\n]]]\n\nSolution\n---------\nThe workaround is to remove the following two files from lib directory:\ntomcat7-websocket.jar\nwebsocket-api.jar\n\nI guess that removing tomcat7-websocket.jar alone is enough, but I only tested with removing both of them.\n\nIt is known that websocket API (JSR356) requires Java 7, so there is no use for those jar files when running with Java 6.\n\nGood news:\n1. The examples web app runs successfully without those files. (I feared that it won't start).\n2. JSR356 examples successfully show their HTML pages. Attempting to open a websocket connection fails immediately, as expected.\n\nThoughts\n---------\n1. Starting Tomcat 7.0.65 with Java 6 logs a nice warning:\n\n26.11.2015 19:12:19 org.apache.tomcat.websocket.server.WsSci onStartup\nINFO: JSR 356 WebSocket (Java WebSocket 1.1) support is not available\nwhen running on Java 6. To suppress this message, run Tomcat on Java 7,\nremove the WebSocket JARs from $CATALINA_HOME/lib or add the WebSocket JARs\nto the tomcat.util.scan.DefaultJarScanner.jarsToSkip property in\n$CATALINA_BASE/conf/catalina.properties. Note that the deprecated Tomcat 7\nWebSocket API will be available. \n\nThe above warning message is no longer written by 7.0.66. Tomcat 7.0.66 just fails.\n\n2. An update to installation instructions (RUNNING.txt) is needed.\n\nCurrently it says to unpack the binary archive, but with Java 6 that is no longer enough.\n\n3. An update to Windows installer is needed.\n\nIf I remember correctly, there is no option to omit those jar files when installing Tomcat.", "id": 186582, "time": "2015-11-26T16:17:12Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2015-11-26T16:17:12Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 58658, "text": "I've reverted r1715984 and refactored the code that required 1.7 so it compiles with 1.6. The fix will be in 7.0.67 onwards.", "id": 186608, "time": "2015-11-27T20:30:27Z", "creator": "markt@apache.org", "creation_time": "2015-11-27T20:30:27Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 58658, "attachment_id": null, "id": 186681, "time": "2015-11-30T17:47:30Z", "creator": "chris@christopherschultz.net", "creation_time": "2015-11-30T17:47:30Z", "is_private": false, "text": "(In reply to Mark Thomas from comment #1)\n> I've reverted r1715984 and refactored the code that required 1.7 so it\n> compiles with 1.6. The fix will be in 7.0.67 onwards.\n\nIt's not an issue of compiling with Java 1.6, but an issue of class file versions. You can still use 1.7 source features and still have target=\"1.6\". I'm not sure the re-factoring was necessary (but I haven't read the diff, yet)."}, {"count": 3, "tags": [], "bug_id": 58658, "text": "This is fixed when running standalone Tomcat 7.0.67, but it still breaks when running Tomcat embedded in Spring Boot. See this Spring Boot issue for more info: [1]\n\nTo reproduce:\n1- Download and unzip this Spring Boot Starter template: [2]\n2- Edit pom.xml and add `<tomcat.version>7.0.67</tomcat.version>` inside `<properties>` element.\n3- run `mvn package` in the unzipped directory (You either need to install Maven, or run `./mvnw package` instead which will automatically download Maven).\n4- Make sure you're using Java 6 and run `java -jar target/demo-0.0.1-SNAPSHOT.jar'\n5- This exception is thrown:\n\njava.lang.NoClassDefFoundError: java/nio/charset/StandardCharsets\n        at org.apache.tomcat.websocket.WsWebSocketContainer.<clinit>(WsWebSocketContainer.java:112) ~[tomcat-embed-websocket-7.0.67.jar!/:7.0.67]\n        at org.apache.tomcat.websocket.server.WsSci.init(WsSci.java:154) ~[tomcat-embed-websocket-7.0.67.jar!/:7.0.67]\n        at org.apache.tomcat.websocket.server.WsContextListener.contextInitialized(WsContextListener.java:39) ~[tomcat-embed-websocket-7.0.67.jar!/:7.0.67]\n        at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:5077) [tomcat-embed-core-7.0.67.jar!/:7.0.67]\n        at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5591) [tomcat-embed-core-7.0.67.jar!/:7.0.67]\n        at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150) [tomcat-embed-core-7.0.67.jar!/:7.0.67]\n        at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1574) [tomcat-embed-core-7.0.67.jar!/:7.0.67]\n        at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1564) [tomcat-embed-core-7.0.67.jar!/:7.0.67]\n        at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303) [na:1.6.0_65]\n        at java.util.concurrent.FutureTask.run(FutureTask.java:138) [na:1.6.0_65]\n        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:895) [na:1.6.0_65]\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:918) [na:1.6.0_65]\n        at java.lang.Thread.run(Thread.java:695) [na:1.6.0_65]\nCaused by: java.lang.ClassNotFoundException: java.nio.charset.StandardCharsets\n        at java.net.URLClassLoader$1.run(URLClassLoader.java:202) ~[na:1.6.0_65]\n        at java.security.AccessController.doPrivileged(Native Method) ~[na:1.6.0_65]\n        at java.net.URLClassLoader.findClass(URLClassLoader.java:190) ~[na:1.6.0_65]\n        at java.lang.ClassLoader.loadClass(ClassLoader.java:306) ~[na:1.6.0_65]\n        at org.springframework.boot.loader.LaunchedURLClassLoader.doLoadClass(LaunchedURLClassLoader.java:178) ~[demo-0.0.1-SNAPSHOT.jar!/:0.0.1-SNAPSHOT]\n        at org.springframework.boot.loader.LaunchedURLClassLoader.loadClass(LaunchedURLClassLoader.java:142) ~[demo-0.0.1-SNAPSHOT.jar!/:0.0.1-SNAPSHOT]\n        at java.lang.ClassLoader.loadClass(ClassLoader.java:247) ~[na:1.6.0_65]\n        ... 13 common frames omitted\n\n\n[1] (https://github.com/spring-projects/spring-boot/issues/4846 )\n[2] (http://start.spring.io/starter.zip?name=demo&groupId=com.example&artifactId=demo&version=0.0.1-SNAPSHOT&description=Demo+project+for+Spring+Boot&packageName=com.example&type=maven-project&packaging=jar&javaVersion=1.6&language=java&bootVersion=1.3.2.BUILD-SNAPSHOT&dependencies=web )", "id": 187164, "time": "2015-12-28T08:46:02Z", "creator": "imgx64+bz@gmail.com", "creation_time": "2015-12-28T08:46:02Z", "is_private": false, "attachment_id": null}, {"count": 4, "text": "There are multiple reasons this is not the same issue:\n\n- the stack trace is different\n- the GitHub issue makes it clear that a different set of Tomcat versions is affected.\n\nThe Spring Boot team appear to have mis-read my comment, particularly the question mark at the end of the first sentence and the entire of the final sentence.\n\nI've taken a quick look at the demo and this is clearly a Spring Boot bug. I'll comment on the Spring Boot issue.", "creator": "markt@apache.org", "attachment_id": null, "id": 187168, "time": "2015-12-28T09:34:17Z", "bug_id": 58658, "creation_time": "2015-12-28T09:34:17Z", "tags": [], "is_private": false}, {"count": 5, "text": "I dug into the Tomcat 7 code, and I managed to \"fix\" the Spring Boot bug by copying StandardCharsets.ISO_8859_1 into WsWebSocketContainer and changing the static intializers. Is this an appropriate solution?\n\nNote that StandardCharsets.ISO_8859_1 is used elsewhere in WsWebSocketContainer, but only the static initializers are causing problems.\n\nIndex: java/org/apache/tomcat/websocket/WsWebSocketContainer.java\n===================================================================\n--- java/org/apache/tomcat/websocket/WsWebSocketContainer.java\t(revision 1721884)\n+++ java/org/apache/tomcat/websocket/WsWebSocketContainer.java\t(working copy)\n@@ -29,6 +29,7 @@\n import java.nio.ByteBuffer;\n import java.nio.channels.AsynchronousChannelGroup;\n import java.nio.channels.AsynchronousSocketChannel;\n+import java.nio.charset.Charset;\n import java.nio.charset.StandardCharsets;\n import java.security.KeyStore;\n import java.util.ArrayList;\n@@ -109,10 +110,12 @@\n     private static final Random random = new Random();\n     private static final byte[] crlf = new byte[] {13, 10};\n \n-    private static final byte[] GET_BYTES = \"GET \".getBytes(StandardCharsets.ISO_8859_1);\n-    private static final byte[] ROOT_URI_BYTES = \"/\".getBytes(StandardCharsets.ISO_8859_1);\n+    private static final Charset ISO_8859_1 = Charset.forName(\"ISO-8859-1\");\n+\n+    private static final byte[] GET_BYTES = \"GET \".getBytes(ISO_8859_1);\n+    private static final byte[] ROOT_URI_BYTES = \"/\".getBytes(ISO_8859_1);\n     private static final byte[] HTTP_VERSION_BYTES =\n-            \" HTTP/1.1\\r\\n\".getBytes(StandardCharsets.ISO_8859_1);\n+            \" HTTP/1.1\\r\\n\".getBytes(ISO_8859_1);\n \n     private volatile AsynchronousChannelGroup asynchronousChannelGroup = null;\n     private final Object asynchronousChannelGroupLock = new Object();", "creator": "imgx64+bz@gmail.com", "attachment_id": null, "id": 187169, "time": "2015-12-28T10:28:14Z", "bug_id": 58658, "creation_time": "2015-12-28T10:28:14Z", "tags": [], "is_private": false}, {"count": 6, "tags": [], "bug_id": 58658, "attachment_id": null, "id": 187170, "time": "2015-12-28T10:36:55Z", "creator": "markt@apache.org", "creation_time": "2015-12-28T10:36:55Z", "is_private": false, "text": "This issue is fixed. Please don't use it to discuss what is an unrelated issue in Spring Boot. If you want input from the Tomcat devs on possible options for fixing the Spring Boot issue, then the Tomcat dev list is the place to ask."}]