[{"count": 0, "tags": [], "bug_id": 20182, "text": "if i try to reload a context the following error is traced and the context \nfails to be reloaded:\n\nINFO: Reloading this Context has started\nMay 23, 2003 2:06:53 PM org.apache.jasper.servlet.JspServlet destroy\nINFO: JspServlet.destroy()\nMay 23, 2003 2:06:53 PM org.apache.catalina.loader.WebappLoader setRepositories\nINFO: No work dir for org.apache.catalina.core.ApplicationContextFacade@3e926\nMay 23, 2003 2:06:59 PM org.apache.catalina.core.StandardContext listenerStart\nSEVERE: Exception sending context initialized event to listener instance of \nclass org.epe.sys.Epe\njava.lang.UnsatisfiedLinkError: Native Library D:\\oracle\\ora92\\bin\\ocijdbc9.dll \nalready loaded in another classloader\n\tat java.lang.ClassLoader.loadLibrary0(ClassLoader.java:1437)\n\tat java.lang.ClassLoader.loadLibrary(ClassLoader.java:1397)\n\tat java.lang.Runtime.loadLibrary0(Runtime.java:788)\n\tat java.lang.System.loadLibrary(System.java:832)\n\tat oracle.jdbc.oci8.OCIDBAccess.logon(OCIDBAccess.java:262)\n\tat oracle.jdbc.driver.OracleConnection.<init>(OracleConnection.java:346)\n\tat oracle.jdbc.oci.OracleOCIConnection.<init>\n(OracleOCIConnection.java:64)\n\tat oracle.jdbc.driver.OracleDriver.getConnectionInstance\n(OracleDriver.java:465)\n\tat oracle.jdbc.driver.OracleDriver.connect(OracleDriver.java:314)\n\tat java.sql.DriverManager.getConnection(DriverManager.java:512)\n\tat java.sql.DriverManager.getConnection(DriverManager.java:140)\n\tat oracle.jdbc.pool.OracleOCIConnectionPool.createConnectionPool\n(OracleOCIConnectionPool.java:1092)\n\tat oracle.jdbc.pool.OracleOCIConnectionPool.setPoolConfig\n(OracleOCIConnectionPool.java:611)\n\tat org.epe.sys.pool.Connector.configurePool(Unknown Source)\n\tat org.epe.sys.pool.Connector.createPool(Unknown Source)\n\tat org.epe.sys.pool.Connector.configure(Unknown Source)\n\tat org.epe.sys.Epe.configure(Unknown Source)\n\tat org.epe.sys.Epe.configure(Unknown Source)\n\tat org.epe.sys.Epe.contextInitialized(Unknown Source)\n\tat org.apache.catalina.core.StandardContext.listenerStart\n(StandardContext.java:3670)\n\tat org.apache.catalina.core.StandardContext.reload\n(StandardContext.java:2866)\n\tat org.apache.catalina.manager.ManagerServlet.reload\n(ManagerServlet.java:802)\n\tat org.apache.catalina.manager.HTMLManagerServlet.reload\n(HTMLManagerServlet.java:501)\n\tat org.apache.catalina.manager.HTMLManagerServlet.doGet\n(HTMLManagerServlet.java:151)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:743)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:856)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter\n(ApplicationFilterChain.java:288)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter\n(ApplicationFilterChain.java:206)\n\tat org.apache.catalina.core.StandardWrapperValve.invoke\n(StandardWrapperValve.java:263)\n\tat org.apache.catalina.core.StandardValveContext.invokeNext\n(StandardValveContext.java:151)\n\tat org.apache.catalina.core.StandardPipeline.invoke\n(StandardPipeline.java:561)\n\tat org.apache.catalina.core.ContainerBase.invoke\n(ContainerBase.java:1018)\n\tat org.apache.catalina.core.StandardContextValve.invoke\n(StandardContextValve.java:196)\n\tat org.apache.catalina.core.StandardValveContext.invokeNext\n(StandardValveContext.java:151)\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke\n(AuthenticatorBase.java:558)\n\tat org.apache.catalina.core.StandardValveContext.invokeNext\n(StandardValveContext.java:149)\n\tat org.apache.catalina.core.StandardPipeline.invoke\n(StandardPipeline.java:561)\n\tat org.apache.catalina.core.ContainerBase.invoke\n(ContainerBase.java:1018)\n\tat org.apache.catalina.core.StandardContext.invoke\n(StandardContext.java:2748)\n\tat org.apache.catalina.core.StandardHostValve.invoke\n(StandardHostValve.java:186)\n\tat org.apache.catalina.core.StandardValveContext.invokeNext\n(StandardValveContext.java:151)\n\tat org.apache.catalina.valves.ErrorDispatcherValve.invoke\n(ErrorDispatcherValve.java:171)\n\tat org.apache.catalina.core.StandardValveContext.invokeNext\n(StandardValveContext.java:149)\n\tat org.apache.catalina.valves.ErrorReportValve.invoke\n(ErrorReportValve.java:172)\n\tat org.apache.catalina.core.StandardValveContext.invokeNext\n(StandardValveContext.java:149)\n\tat org.apache.catalina.core.StandardPipeline.invoke\n(StandardPipeline.java:561)\n\tat org.apache.catalina.core.ContainerBase.invoke\n(ContainerBase.java:1018)\n\tat org.apache.catalina.core.StandardEngineValve.invoke\n(StandardEngineValve.java:163)\n\tat org.apache.catalina.core.StandardValveContext.invokeNext\n(StandardValveContext.java:151)\n\tat org.apache.catalina.core.StandardPipeline.invoke\n(StandardPipeline.java:561)\n\tat org.apache.catalina.core.ContainerBase.invoke\n(ContainerBase.java:1018)\n\tat org.apache.coyote.tomcat5.CoyoteAdapter.service\n(CoyoteAdapter.java:199)\n\tat org.apache.coyote.http11.Http11Processor.process\n(Http11Processor.java:630)\n\tat \norg.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.processConnectio\nn(Http11Protocol.java:463)\n\tat org.apache.tomcat.util.net.TcpWorkerThread.runIt\n(PoolTcpEndpoint.java:568)\n\tat org.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run\n(ThreadPool.java:631)\n\tat java.lang.Thread.run(Thread.java:536)\nMay 23, 2003 2:06:59 PM org.apache.catalina.core.StandardContext reload\nSEVERE: Failed to start application Listeners successfully\nMay 23, 2003 2:06:59 PM org.apache.catalina.core.StandardContext reload\nSEVERE: Reloading this Context failed due to previous errors", "id": 37668, "time": "2003-05-23T12:14:29Z", "creator": "alex.scotti@tiscalinet.it", "creation_time": "2003-05-23T12:14:29Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 20182, "text": "There's an *explicit* note in the release notes (and it's the first item) about\nthe relationship between webapps and libraries loaded with JNI ...\n\nSo in your case, you should define your connection as global instead of local to\nyour context (that way, it will never be restarted).\n\n-------------------------------------\nTomcat 5.0 and JNI Based Applications:\n-------------------------------------\n\nApplications that require native libraries must ensure that the libraries have\nbeen loaded prior to use.  Typically, this is done with a call like:\n\n  static {\n    System.loadLibrary(\"path-to-library-file\");\n  }\n\nin some class.  However, the application must also ensure that the library is\nnot loaded more than once.  If the above code were placed in a class inside\nthe web application (i.e. under /WEB-INF/classes or /WEB-INF/lib), and the\napplication were reloaded, the loadLibrary() call would be attempted a second\ntime.\n\nTo avoid this problem, place classes that load native libraries outside of the\nweb application, and ensure that the loadLibrary() call is executed only once\nduring the lifetime of a particular JVM.\n", "id": 37669, "time": "2003-05-23T12:26:13Z", "creator": "remm@apache.org", "creation_time": "2003-05-23T12:26:13Z", "is_private": false, "attachment_id": null}]