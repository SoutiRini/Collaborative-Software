[{"count": 0, "tags": [], "text": "Add an interface that can be used to match credentials rather than doing the matching within the Realm itself. This can be used to support PBKDF11, bcrypt, scrypt, etc.", "attachment_id": null, "bug_id": 56403, "id": 174505, "time": "2014-04-11T20:08:37Z", "creator": "chris@christopherschultz.net", "creation_time": "2014-04-11T20:08:37Z", "is_private": false}, {"count": 1, "tags": [], "text": "This is a much needed feature, I think.  Has it been decided that this will never be in Tomcat7?  Note that Bug 51966, marked for Tomcat 6, relates to storing passwords more securely using salt and password hashes.  I'd say that that feature should be available to Tomcat users without requiring them to write their own code, but it makes sense to use the pluggable interface proposed here to accomplish that.", "attachment_id": null, "bug_id": 56403, "id": 174531, "time": "2014-04-13T16:02:07Z", "creator": "gabrielesanchez@gmail.com", "creation_time": "2014-04-13T16:02:07Z", "is_private": false}, {"count": 2, "tags": [], "creator": "chris@christopherschultz.net", "attachment_id": null, "id": 174536, "time": "2014-04-13T18:00:03Z", "bug_id": 56403, "creation_time": "2014-04-13T18:00:03Z", "is_private": false, "text": "I don't see a reason not to back-port it to Tomcat 7. Since it's a breaking API change, I'll be asking for RTC for a back-port. I suspect it will make it.\n\nNote that Tomcat 6's implementation (identical in all important ways to that of Tomcat 7 and 8) is not /insecure/, just not terribly secure if being used without any additional controls.\n\nAs for providing salted passwords out of the box, I'd suggest that salting isn't enough and that iteration is also necessary, etc. and that at this point simply using PBKDF2 or some other password-munging scheme is more appropriate. I do note that PBKDF2 (mist-typed as PBKDF11 in the description) does not store the number of iterations in the generated password which means that you either need to adjust the data you actually store to include it, or you can never change the number of iterations.\n\nI suspect we'll provide a PBKDF2 implementation out of the box, but nothing else to avoid any library dependencies. Using the PBKDF2 implementation as an example would make writing a bcrypt- or scrypt-based implementation fairly easy."}, {"count": 3, "tags": [], "bug_id": 56403, "text": "(In reply to Christopher Schultz from comment #2)\n> I don't see a reason not to back-port it to Tomcat 7. Since it's a breaking\n> API change, I'll be asking for RTC for a back-port. I suspect it will make\n> it.\n\nThat would be very good, since many systems, for example those running Ubuntu 14.04 LTS for the next few years, will be running Tomcat 7 by default.  \n\n> \n> Note that Tomcat 6's implementation (identical in all important ways to that\n> of Tomcat 7 and 8) is not /insecure/, just not terribly secure if being used\n> without any additional controls.\n\nI understand that if the password table is never stolen this is not an issue, but I don't want to be irresponsible, and not use best practices.  The current implementation makes it difficult for admins to follow best practice.  \n\n> \n> As for providing salted passwords out of the box, I'd suggest that salting\n> isn't enough and that iteration is also necessary, etc. and that at this\n> point simply using PBKDF2 or some other password-munging scheme is more\n> appropriate. I do note that PBKDF2 (mist-typed as PBKDF11 in the\n> description) does not store the number of iterations in the generated\n> password which means that you either need to adjust the data you actually\n> store to include it, or you can never change the number of iterations.\n\nAgree that PBKDF2 is the way to go if one want to be conservative but follow best practice.  It is what I wish to use in my web applications.  Changing the number of iterations should be allowed.  I would prefer to have separate data columns for salt, password digest, and number of iterations, but wouldn't mind if they are all in one delimited field.  The beauty of the proposed pluggable interface is that it will be easy to do either, right?\n\n> \n> I suspect we'll provide a PBKDF2 implementation out of the box, but nothing\n> else to avoid any library dependencies. Using the PBKDF2 implementation as\n> an example would make writing a bcrypt- or scrypt-based implementation\n> fairly easy.\n\nThat would be splendid.  Noting that this bug is about the pluggable interface and not the PBKDF2 implementation, and that a PBKDF2 implementation would probably use the new pluggable interface (am I right to assume that?), should a new bug be created that depends on this one?", "id": 174537, "time": "2014-04-13T18:32:42Z", "creator": "gabrielesanchez@gmail.com", "creation_time": "2014-04-13T18:32:42Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 56403, "attachment_id": null, "text": "(In reply to Gabriel from comment #3)\n> (In reply to Christopher Schultz from comment #2)\n> > I don't see a reason not to back-port it to Tomcat 7. Since it's a breaking\n> > API change, I'll be asking for RTC for a back-port. I suspect it will make\n> > it.\n> \n> That would be very good, since many systems, for example those running\n> Ubuntu 14.04 LTS for the next few years, will be running Tomcat 7 by\n> default.  \n\nJust remember that switching from one password standard to another is ... hard. If you want to switch from using MD5 to SHA1 to SHA2 to RIPEMD, you basically have to write your own passwork-checker. Fortunately, this will be entirely possible using the tools we will provide.\n\n> > Note that Tomcat 6's implementation (identical in all important ways to that\n> > of Tomcat 7 and 8) is not /insecure/, just not terribly secure if being used\n> > without any additional controls.\n> \n> I understand that if the password table is never stolen this is not an\n> issue, but I don't want to be irresponsible, and not use best practices. \n> The current implementation makes it difficult for admins to follow best\n> practice.  \n\n+1\n\n> > As for providing salted passwords out of the box, I'd suggest that salting\n> > isn't enough and that iteration is also necessary, etc. and that at this\n> > point simply using PBKDF2 or some other password-munging scheme is more\n> > appropriate. I do note that PBKDF2 (mist-typed as PBKDF11 in the\n> > description) does not store the number of iterations in the generated\n> > password which means that you either need to adjust the data you actually\n> > store to include it, or you can never change the number of iterations.\n> \n> Agree that PBKDF2 is the way to go if one want to be conservative but follow\n> best practice.  It is what I wish to use in my web applications.  Changing\n> the number of iterations should be allowed.  I would prefer to have separate\n> data columns for salt, password digest, and number of iterations, but\n> wouldn't mind if they are all in one delimited field.  The beauty of the\n> proposed pluggable interface is that it will be easy to do either, right?\n\nOne delimited field is what pretty much everyone expects. Besides, the Tomcat interface is going to have to be simple so I suspect we'll just have a single \"stored credential\" byte array or string and present the user's (attempted) password in the same format. The password-munger can do whatever is necessary to compare the two.\n\nI suppose it couldn't hurt to add \"iterations\" to the list of understood configuration attributes. Since we'll need it for PBKDF2, we may as well enable it for the digest-based algorithms, too.\n\n> > I suspect we'll provide a PBKDF2 implementation out of the box, but nothing\n> > else to avoid any library dependencies. Using the PBKDF2 implementation as\n> > an example would make writing a bcrypt- or scrypt-based implementation\n> > fairly easy.\n> \n> That would be splendid.  Noting that this bug is about the pluggable\n> interface and not the PBKDF2 implementation, and that a PBKDF2\n> implementation would probably use the new pluggable interface (am I right to\n> assume that?), should a new bug be created that depends on this one?\n\nLet's just assume that PBKDF2 is my target implementation (as well as a backward-compatible plain-old-digest implementation of course) and go ahead and track suggestions for it, here. There's no need to file additional enhancement requests.", "id": 174546, "time": "2014-04-14T01:38:36Z", "creator": "chris@christopherschultz.net", "creation_time": "2014-04-14T01:38:36Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 56403, "attachment_id": 31615, "text": "Created attachment 31615\nExample of an interface and implementation of both MessageDigest and PBKDF2\n\nAttaching a self-contained driver, interface, and implementation of CredentialMatcher for MessageDigest and PBKDF2.\n\nThis is the kind of thing I'd like to place into RealmBase (or, rather, factor-out of RealmBase).\n\nRealmBase currently has some additional code to allow prefixes such as {MD5}, {SSHA}, etc. to alter the behavior of the existing message-digest-only code. None of that type of code has been included in this example as it can be trivially added once the interfaces have been established.\n\nI was thinking that the <Realm> could have a sub-element <CredentialMatcher> (or similar... I'm not happy with the interface's name but can't think of a better one at the moment) that could identify the class to be used plus provide all of the configuration attributes like salt-length, iteration-count, algorithm name, and anything else an implementation may need. For backward-compatibility, we'd default to MessageDigestCredentialMatcher and route calls to RealmBase.setDigest() to MessageDigestCredentialMatcher.setAlgorithm().\n\nComments are welcome!", "id": 175185, "time": "2014-05-13T17:39:23Z", "creator": "chris@christopherschultz.net", "creation_time": "2014-05-13T17:39:23Z", "is_private": false}, {"count": 6, "tags": [], "bug_id": 56403, "attachment_id": null, "text": "*** Bug 51966 has been marked as a duplicate of this bug. ***", "id": 177877, "time": "2014-09-15T10:58:15Z", "creator": "markt@apache.org", "creation_time": "2014-09-15T10:58:15Z", "is_private": false}, {"count": 7, "tags": [], "bug_id": 56403, "attachment_id": null, "text": "(Copied from bug #51966 comment #23):\n> I'm currently working on taking Chris's proposal there and turning it into a patch that can be applied to 8.0.x.\n\nIf there's something specific you are looking for, I can update the patch.", "id": 177878, "time": "2014-09-15T13:22:49Z", "creator": "chris@christopherschultz.net", "creation_time": "2014-09-15T13:22:49Z", "is_private": false}, {"count": 8, "tags": [], "bug_id": 56403, "attachment_id": null, "text": "(In reply to Christopher Schultz from comment #7)\n> If there's something specific you are looking for, I can update the patch.\n\nWhat I was looking for was an actual patch for 8.0.x. The current attachment is just a bunch of Java code. I must stress though it is very useful Java code, it just isn't in a form of a patch that can be directly applied to 8.0.x.\n\nI'm already most of the way through converting it to a patch. Let me finish that off and then I'll attach it here for further comment.", "id": 177885, "time": "2014-09-15T14:26:50Z", "creator": "markt@apache.org", "creation_time": "2014-09-15T14:26:50Z", "is_private": false}, {"count": 9, "tags": [], "bug_id": 56403, "attachment_id": null, "text": "(In reply to Mark Thomas from comment #8)\n> (In reply to Christopher Schultz from comment #7)\n> > If there's something specific you are looking for, I can update the patch.\n> \n> What I was looking for was an actual patch for 8.0.x.\n\nAah, yes, of course. The idea was that I wanted some feedback on the design, particularly of the base class itself (which could be an interface, I suppose). I had intended to create a formal patch after some feedback, but nobody ever gave any :(\n\n> I'm already most of the way through converting it to a patch. Let me finish\n> that off and then I'll attach it here for further comment.\n\nSounds good.\n\nWe use our own Realm implementation here that has nothing to do with Tomcat, so I'll take a look at your forthcoming patch so see if it would be possible to integrate the two together. I'd anxious to get away from our own home-brewed solution that plugs-into securityfilter...", "id": 177888, "time": "2014-09-15T16:04:10Z", "creator": "chris@christopherschultz.net", "creation_time": "2014-09-15T16:04:10Z", "is_private": false}, {"count": 10, "tags": [], "text": "(In reply to Christopher Schultz from comment #9)\nI had intended to create a formal patch after some feedback, but\n> nobody ever gave any :(\nAnd I intended to give you some feedback but I have not done it yet!  I'll try to have a look at Mark's patch when he attaches it.  \n\nAny chance this will get back-ported to tomcat7?", "attachment_id": null, "id": 177892, "creation_time": "2014-09-15T17:03:31Z", "time": "2014-09-15T17:03:31Z", "creator": "gabrielesanchez@gmail.com", "bug_id": 56403, "is_private": false}, {"count": 11, "tags": [], "creator": "chris@christopherschultz.net", "attachment_id": null, "id": 177895, "time": "2014-09-15T20:31:07Z", "bug_id": 56403, "creation_time": "2014-09-15T20:31:07Z", "is_private": false, "text": "(In reply to Gabriel from comment #10)\n> Any chance this will get back-ported to tomcat7?\n\nI think it depends upon user demand and the impedance caused by any major pre-existing changes between TC7 and TC8. I suspect there has been little divergence and so a Tomcat 7 backport seems reasonable."}, {"count": 12, "tags": [], "text": "OK. Here is my first pass at incorporating these ideas in Tomcat 8.\n\nI spent a fair amount of time looking at how to keep existing configurations working while not making the API a complete mess.\n\nI also tweaked the proposed API for the pluggable component based on how it was used by the Realms and trying to keep the number of conversions to/from String to a minimum.\n\nFeedback welcome - probably best on the dev list.\n\nhttp://people.apache.org/~markt/patches/2014-09-16-bug56403-tc8-v1.patch", "attachment_id": null, "bug_id": 56403, "id": 177907, "time": "2014-09-16T14:00:55Z", "creator": "markt@apache.org", "creation_time": "2014-09-16T14:00:55Z", "is_private": false}, {"count": 13, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "id": 178222, "time": "2014-10-02T11:32:56Z", "bug_id": 56403, "creation_time": "2014-10-02T11:32:56Z", "is_private": false, "text": "The proposed patch went through a number of review cycles on the dev list and was applied to 8.0.x for 8.0.15 onwards."}, {"count": 14, "tags": [], "creator": "blama@gmx.net", "attachment_id": null, "text": "Is there any decision on whether this will be backported to Tomcat 7?", "id": 182164, "time": "2015-03-28T12:20:01Z", "bug_id": 56403, "creation_time": "2015-03-28T12:20:01Z", "is_private": false}]