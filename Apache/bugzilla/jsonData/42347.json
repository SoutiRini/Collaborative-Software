[{"count": 0, "tags": [], "bug_id": 42347, "attachment_id": null, "id": 102916, "creation_time": "2007-05-07T11:16:51Z", "time": "2007-05-07T11:16:51Z", "creator": "kirandec2001@yahoo.com", "text": "request.getParameter returns null value occassionally when submitting the form \nas post method. This happens when submitting the form in quick succession or \nrefreshing the browser contineously", "is_private": false}, {"count": 1, "tags": [], "bug_id": 42347, "attachment_id": null, "text": "There have been many, many fixes since 5.0.0. Please test with the latest 5.5.x\nbefore re-opening. If you do see the issue with the latest 5.5.x, please provide\nthe simplest test JSP/Servlet that exhibits this issue so we can reproduce it.", "id": 102920, "time": "2007-05-07T18:31:10Z", "creator": "markt@apache.org", "creation_time": "2007-05-07T18:31:10Z", "is_private": false}, {"count": 2, "tags": [], "creator": "brido02@ca.com", "attachment_id": null, "id": 112584, "time": "2008-01-07T08:14:19Z", "bug_id": 42347, "creation_time": "2008-01-07T08:14:19Z", "is_private": false, "text": "we are on 5.5.20 and are still seeing this not work in some cases.\n\nIn the example below the call that fails is \n\"common/attrConfig/derived2?id=66644\",\nIve included surrounding calls for compelteness. The debug on the client is \nalso the only place on the client \"derived2\" is called (it was renamed to \nensure this fact).\n\nI dont have a solid reproduction, but Ive found if I tax the CPU to 100% I can \nsee this occur somewhat \"more\" offen. Clearly a threading issue. I was able to \nget a trace when this failed which might offer some help on the path taken.\n\nRequesting client (expecting a MtypeProperties[], but got a Map)\n\nMon Jan 07 10:37:46 EST 2008: AWT-EventQueue-0: requesting path = \ncommon/attrConfig/derived2?id=12845175\nMon Jan 07 10:37:46 EST 2008: AWT-EventQueue-0: requesting path = \ncommon/attrConfig/derived2?id=66644\nJan 7, 2008 10:37:46 AM - ClientAttributeConfig.getDerivedMtypesInt failed:\njava.lang.ClassCastException: java.util.HashMap cannot be cast to \n[Lcom.aprisma.spectrum.app.util.attribute.MtypeProperties;\nMon Jan 07 10:37:46 EST 2008: AWT-EventQueue-0: requesting path = \ncommon/attrConfig/derived2?id=66102\n\n\nAttributeConfigServlet.java (sends a Map on null \"id\")\n\n            else if ( servletPath.endsWith ( \"derived2\" ) )\n            {\n                String mtypeIDStr = request.getParameter ( \"id\" ) ;\n\nSystem.out.println( (new Date()).toString() + \": \" + \n       Thread.currentThread().getName() + \": mtypeIDStr = \" + mtypeIDStr );\n\n                if ( mtypeIDStr != null && mtypeIDStr.length () > 0 )\n                {\n                    // response is a MtypeProperties[]\n                }\n                else\n                {\n                    // response is a Map\n                }\n\nif ( mtypeIDStr == null )\n{\n   new Exception().printStackTrace();\n}\n             }\n\n\nlocalhost_access_log.2008-01-07.txt (with format '%h %l %u %t \"%r\" %s %b')\n(clearly see a id=66644, but sends a large value back 29199)\n\n138.42.248.45 - brido02 [07/Jan/2008:10:37:45 -0500] \n\"GET /spectrum/common/attrConfig/derived2?id=12845175 HTTP/1.1\" 200 253\n138.42.248.45 - brido02 [07/Jan/2008:10:37:45 -0500] \n\"GET /spectrum/common/attrConfig/derived2?id=66644 HTTP/1.1\" 200 29199\n138.42.248.45 - brido02 [07/Jan/2008:10:37:45 -0500] \n\"GET /spectrum/common/attrConfig/derived2?id=66102 HTTP/1.1\" 200 375\n\n\ncatalina.out\n\nMon Jan 07 10:37:46 EST 2008: http-80-Processor22: mtypeIDStr = 12845175\nMon Jan 07 10:37:46 EST 2008: http-80-Processor21: mtypeIDStr = null\njava.lang.Exception\n        at com.aprisma.spectrum.app.web.servlet.AttributeConfigServlet.doGet\n(AttributeConfigServlet.java:159)\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:689)\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:802)\n        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter\n(ApplicationFilterChain.java:252)\n        at org.apache.catalina.core.ApplicationFilterChain.doFilter\n(ApplicationFilterChain.java:173)\n        at org.apache.catalina.core.StandardWrapperValve.invoke\n(StandardWrapperValve.java:213)\n        at org.apache.catalina.core.StandardContextValve.invoke\n(StandardContextValve.java:178)\n        at org.apache.catalina.authenticator.AuthenticatorBase.invoke\n(AuthenticatorBase.java:524)\n        at org.apache.catalina.core.StandardHostValve.invoke\n(StandardHostValve.java:126)\n        at org.apache.catalina.valves.ErrorReportValve.invoke\n(ErrorReportValve.java:105)\n        at org.apache.catalina.valves.FastCommonAccessLogValve.invoke\n(FastCommonAccessLogValve.java:495)\n        at org.apache.catalina.core.StandardEngineValve.invoke\n(StandardEngineValve.java:107)\n        at org.apache.catalina.connector.CoyoteAdapter.service\n(CoyoteAdapter.java:148)\n        at org.apache.coyote.http11.Http11Processor.process\n(Http11Processor.java:869)\n        at \norg.apache.coyote.http11.Http11BaseProtocol$Http11ConnectionHandler.processConn\nection(Http11BaseProtocol.java:664)\n        at org.apache.tomcat.util.net.PoolTcpEndpoint.processSocket\n(PoolTcpEndpoint.java:527)\n        at org.apache.tomcat.util.net.LeaderFollowerWorkerThread.runIt\n(LeaderFollowerWorkerThread.java:80)\n        at org.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run\n(ThreadPool.java:684)\n        at java.lang.Thread.run(Thread.java:619)\nMon Jan 07 10:37:46 EST 2008: http-80-Processor21: mtypeIDStr = 66102"}, {"count": 3, "tags": [], "bug_id": 42347, "attachment_id": null, "id": 112599, "creation_time": "2008-01-07T12:54:09Z", "time": "2008-01-07T12:54:09Z", "creator": "markt@apache.org", "text": "This looks similar to bug 40860. The additional logging in 5.5.21 onwards may\nshed some light on this. Can you test with 5.5.25?\n\nPlease provide the full source for AttributeConfigServlet or better yet a\nminimal Servlet with which you can re-produce the same issue.\n\nCould you also update this bug with OS info and whether or nor you are using the\nnative connector.", "is_private": false}, {"count": 4, "tags": [], "creator": "brido02@ca.com", "attachment_id": null, "id": 112704, "time": "2008-01-09T10:22:22Z", "bug_id": 42347, "creation_time": "2008-01-09T10:22:22Z", "is_private": false, "text": "(In reply to comment #3)\n> This looks similar to bug 40860. The additional logging in 5.5.21 onwards may\n> shed some light on this. Can you test with 5.5.25?\n> Please provide the full source for AttributeConfigServlet or better yet a\n> minimal Servlet with which you can re-produce the same issue.\n> Could you also update this bug with OS info and whether or nor you are using \nthe\n> native connector.\n\n\nOk I ran under 5.5.25 was able to reproduce with a TestServlet as requested.\nAlso, as with bug 40860 request.getQueryString does show the id=66644 at \nfailure\n\nweb.xml registrations\n\n  <servlet>\n    <servlet-name>TestServlet</servlet-name>\n    <servlet-class>\n      com.aprisma.spectrum.app.web.servlet.TestServlet\n    </servlet-class>\n  </servlet>\n\n  <servlet-mapping>\n    <servlet-name>TestServlet</servlet-name>\n    <url-pattern>/common/attrConfig/mytestpath</url-pattern>\n  </servlet-mapping>\n\n// TestServlet\n\npackage com.aprisma.spectrum.app.web.servlet;\n\nimport java.io.*;\nimport java.util.*;\nimport javax.servlet.*;\nimport javax.servlet.http.*;\n\npublic class TestServlet extends HttpServlet\n{\n    public void init( )\n    {\n    }\n\n    public void doPost( HttpServletRequest request,\n                       HttpServletResponse response )\n                throws ServletException, IOException\n    {\n        doGet( request, response ) ;\n    }\n\n    public void doGet( HttpServletRequest request,\n                       HttpServletResponse response )\n        throws ServletException, IOException\n    {\n\n        try\n        {\n            Object result = null ;\n            String servletPath = request.getServletPath () ;\n\n            if ( servletPath.endsWith ( \"mytestpath\" ) )\n            {\n                String paramValue = request.getParameter ( \"id\" ) ;\nSystem.out.println( (new Date()).toString() + \": \" +\nThread.currentThread().getName() + \": paramValue = \" + paramValue );\n\n                // as if the if/else did some work...\n                Thread.currentThread().sleep( 100 );\n\n                if ( paramValue != null && paramValue.length () > 0 )\n                {\n                    result = new ArrayList();\n                }\n                else\n                {\n                    result = new HashMap();\n\n                    System.out.println( \"QueryString: \" +\n                                           request.getQueryString() );\n                    new Exception().printStackTrace();\n                }\n            }\n            else\n            {\n                response.setStatus (\n                          HttpServletResponse.SC_BAD_REQUEST ) ;\n            }\n\n            response.setContentType ( \"application/octet-stream\" ) ;\n\n            ObjectOutputStream oos =\n               new ObjectOutputStream( response.getOutputStream () ) ;\n\n            oos.writeObject ( result );\n            oos.flush();\n            oos.close();\n        }\n        catch ( Throwable e )\n        {\n            e.printStackTrace();\n        }\n    }\n}\n\nWed Jan 09 12:07:24 EST 2008: http-80-Processor21: paramValue = null\nQueryString: id=66644\njava.lang.Exception\n        at com.aprisma.spectrum.app.web.servlet.TestServlet.doGet\n(TestServlet.java:75)\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:690)\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:803)\n        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter\n(ApplicationFilterChain.java:269)\n        at org.apache.catalina.core.ApplicationFilterChain.doFilter\n(ApplicationFilterChain.java:188)\n        at org.apache.catalina.core.StandardWrapperValve.invoke\n(StandardWrapperValve.java:213)\n        at org.apache.catalina.core.StandardContextValve.invoke\n(StandardContextValve.java:174)\n        at org.apache.catalina.authenticator.AuthenticatorBase.invoke\n(AuthenticatorBase.java:525)\n        at org.apache.catalina.core.StandardHostValve.invoke\n(StandardHostValve.java:127)\n        at org.apache.catalina.valves.ErrorReportValve.invoke\n(ErrorReportValve.java:117)\n        at org.apache.catalina.valves.FastCommonAccessLogValve.invoke\n(FastCommonAccessLogValve.java:482)\n        at org.apache.catalina.core.StandardEngineValve.invoke\n(StandardEngineValve.java:108)\n        at org.apache.catalina.connector.CoyoteAdapter.service\n(CoyoteAdapter.java:151)\n        at org.apache.coyote.http11.Http11Processor.process\n(Http11Processor.java:874)\n        at \norg.apache.coyote.http11.Http11BaseProtocol$Http11ConnectionHandler.p\nrocessConnection(Http11BaseProtocol.java:665)\n        at org.apache.tomcat.util.net.PoolTcpEndpoint.processSocket\n(PoolTcpEndpoint.java:528)\n        at org.apache.tomcat.util.net.LeaderFollowerWorkerThread.runIt\n(LeaderFollowerWorkerThread.java:81)\n        at org.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run\n(ThreadPool.java:689)\n        at java.lang.Thread.run(Thread.java:619)\n\n\nlocalhost_access_log.2008-01-09.txt:\n\n138.42.248.45 - brido02 [09/Jan/2008:12:07:23 -0500]\n\"GET /spectrum/common/attrConfig/mytestpath?id=66644 HTTP/1.1\" 200 82\n\n\nNot sure about native connector.. this is how we define it in server.xml\nIm running both client and tomcat on windows xp sp2\n\n  <Service name=\"Tomcat-Standalone\">\n\n    <!-- Define a non-SSL HTTP/1.1 Connector on port 8080 -->\n    <Connector port=\"80\" maxHttpHeaderSize=\"8192\" maxThreads=\"150\"\n       minSpareThreads=\"25\" maxSpareThreads=\"75\" enableLookups=\"false\" \n       redirectPort=\"443\" acceptCount=\"100\"\n       connectionTimeout=\"20000\" disableUploadTimeout=\"true\" />\n\nI see this about 1 every 10 tries when I run the following standalone program\nto tax my CPU to 100%. machines in our lab see this about every other day \nwithout running any such program.\n\npublic class Slowit\n{\n    public static void loopIt()\n    {\n        while ( true ) {}\n    }\n\n    public static void main ( String args [] )\n    {\n\n        new Thread( new Runnable()\n        {\n            public void run() { loopIt (); }\n        } ).start();\n\n        new Thread( new Runnable()\n        {\n            public void run() { loopIt (); }\n        } ).start();\n\n        new Thread( new Runnable()\n        {\n            public void run() { loopIt (); }\n        } ).start();\n    }\n}\n\n\nIs there any debug you could suggest I turn on to help you???\n\n\n"}, {"count": 5, "tags": [], "creator": "brido02@ca.com", "attachment_id": null, "id": 112868, "time": "2008-01-15T06:54:04Z", "bug_id": 42347, "creation_time": "2008-01-15T06:54:04Z", "is_private": false, "text": "(In reply to comment #4) ....\n\nI hope Im not jumping the gun on this, but it appears this may have been our \nfault.\n\nWe have a servlet that acts as a poller updating datamodels as needed.  The \ndatamodels are created with the request object and in one case the data model \nwas caching it.  Upon update of this particular datamodel getParameter was \ncalled on the cached request object (setting the flag to true in \nparseParameters) meanwhile on another thread TestServlet was being called with \nthis same request object.\n\n"}]