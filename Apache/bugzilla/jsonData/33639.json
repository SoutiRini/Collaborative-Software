[{"count": 0, "tags": [], "bug_id": 33639, "attachment_id": null, "id": 71201, "time": "2005-02-18T18:01:30Z", "creator": "andy@marathon-man.com", "creation_time": "2005-02-18T18:01:30Z", "is_private": false, "text": "I've developed some utility classes for my own use that implement a Slide\nread-only principal store to accesses principal information via a DAO interface.\n It is assumed that you want to integrate Slide's principal store with your\nprincipal DB, in which case you would implement the simple DAO interface to\naccess your principal DB, which saves having to implement an entire Slide Store.\n It is also assumed that you have already authenticated the user prior to\nSlide's WebDAV servlet being invoked.  We use Spring for IoC configuration and\nAcegi for authentication.  We've developed a class that can retrieve the DAO\nfrom a Spring BeanFactory and have developed a servlet filter that integrates\nAcegi's authentication with Slide WebDAV.  The purpose of this entry is to\ncontribute this code back to the Slide project.\nI will attach the code to this entry with additional comments..."}, {"count": 1, "tags": [], "bug_id": 33639, "text": "Created attachment 14317\nPrincipal DAO interface\n\nA note concerning ALL java attachments: these sources are still in our packages\n(com.marathon...), so they will need to be moved if the code is accepted into\nSlide.\tAlso, there are currently no unit tests (these were developed as a\nprototype proof of concept) - these have not been fully tested.", "id": 71204, "time": "2005-02-18T18:07:03Z", "creator": "andy@marathon-man.com", "creation_time": "2005-02-18T18:07:03Z", "is_private": false, "attachment_id": 14317}, {"count": 2, "tags": [], "bug_id": 33639, "attachment_id": 14318, "id": 71206, "time": "2005-02-18T18:11:54Z", "creator": "andy@marathon-man.com", "creation_time": "2005-02-18T18:11:54Z", "is_private": false, "text": "Created attachment 14318\nAbstract class implementing a Slide store - delegates principal access to a principal DAO\n\nThis class implements the core principal store functionality, but leaves\nretrieval/configuration of the DAO to subclasses.\nSee JavaDocs for details on how to setup and configure the principal store."}, {"count": 3, "tags": [], "creator": "andy@marathon-man.com", "attachment_id": 14319, "id": 71208, "time": "2005-02-18T18:14:24Z", "bug_id": 33639, "creation_time": "2005-02-18T18:14:24Z", "is_private": false, "text": "Created attachment 14319\nImplements abstract principal store to retrieve DAO from Spring BeanFactory\n\nSee JavaDoc for details on configuring access to the Spring BeanFactory and DAO\nbean."}, {"count": 4, "tags": [], "creator": "andy@marathon-man.com", "text": "Created attachment 14320\nServlet filter that integrates Acegi authentication with Slide WebDAV servlet", "id": 71209, "time": "2005-02-18T18:15:37Z", "bug_id": 33639, "creation_time": "2005-02-18T18:15:37Z", "is_private": false, "attachment_id": 14320}, {"count": 5, "attachment_id": 14321, "bug_id": 33639, "is_private": false, "id": 71210, "time": "2005-02-18T18:18:47Z", "creator": "andy@marathon-man.com", "creation_time": "2005-02-18T18:18:47Z", "tags": [], "text": "Created attachment 14321\nSpring ContextLoaderListener that aids in integration\n\nThis class is used in your web.xml instead of Spring's ContextLoaderListener\n(which it extends).  It exposes the web application's Spring ApplicationContext\nfor integration purposes with 3rd party code.  See JavaDoc for detail."}, {"count": 6, "text": "The key to understanding how all these pieces fit together is the reading all\nthe JavaDocs. :)\nAs for configuration, I will include some snippets from my web.xml and\ndomain.xml as examples.  First, web.xml:\n----------------\n...\n    <listener>\n   \n<listener-class>com.marathon.util.spring.GlueContextLoaderListener</listener-class>\n  </listener>\n\n  <context-param>\n    <param-name>contextConfigLocation</param-name>\n    <param-value>/WEB-INF/applicationContext.xml</param-value>\n  </context-param>\n\n...\n\n  <filter>\n    <filter-name>acegiToSlideIntegration</filter-name>\n   \n<filter-class>com.marathon.security.slide.AcegiToSlideIntegrationFilter</filter-class>\n  </filter>\n  \n  <filter-mapping>\n    <filter-name>acegiToSlideIntegration</filter-name>\n    <servlet-name>webdav</servlet-name>\n  </filter-mapping>\n  \n...\n----------------\n\nNotice that I've *replaced* Spring's ContextLoaderListener with\nGlueContextLoaderListener, which will expose my web ApplicationContext to my\nSlide DAO.  The \"contextConfigLocation\" parameter is the standard Spring\nparameter for declaring where to load the Spring XML.\nIf you are using Acegi authentication, then you *must* place the Acegi to Slide\nintegration filter *after* all of Acegi's filters and before Slide's WebDAV.\nFinally, here are the relevant portions of my Slide domain.xml:\n\n--------\n...\n      <store name=\"principals\">\n        <nodestore classname=\"com.marathon.security.slide.SpringDAOPrincipalStore\">\n          <parameter\nname=\"daoPrincipal.spring.contextName\">defaultWebContext</parameter>\n          <parameter\nname=\"daoPrincipal.spring.beanName\">slide.principalStoreDao</parameter>\n        </nodestore>\n        <securitystore>\n          <reference store=\"nodestore\"/>\n        </securitystore>\n        <lockstore>\n          <reference store=\"nodestore\"/>\n        </lockstore>\n        <revisiondescriptorsstore>\n          <reference store=\"nodestore\"/>\n        </revisiondescriptorsstore>\n        <revisiondescriptorstore>\n          <reference store=\"nodestore\"/>\n        </revisiondescriptorstore>\n        <contentstore>\n          <reference store=\"nodestore\"/>\n        </contentstore>\n      </store>\n\n      <scope match=\"/\" store=\"j2ee\"/>\n      <scope match=\"/users\" store=\"principals\"/>\n      <scope match=\"/roles\" store=\"principals\"/>\n      <scope match=\"/groups\" store=\"principals\"/>\n...\n    <configuration>\n...\n      <userspath>/users</userspath>\n      <rolespath>/roles</rolespath>\n      <groupspath>/groups</groupspath>\n...\n\n--------\n", "bug_id": 33639, "is_private": false, "id": 71213, "time": "2005-02-18T18:29:25Z", "creator": "andy@marathon-man.com", "creation_time": "2005-02-18T18:29:25Z", "tags": [], "attachment_id": null}, {"count": 7, "tags": [], "bug_id": 33639, "attachment_id": null, "id": 71216, "time": "2005-02-18T19:05:53Z", "creator": "andy@marathon-man.com", "creation_time": "2005-02-18T19:05:53Z", "is_private": false, "text": "One last comment: I'd like to thank the author(s) of JNDIPrincipalStore for\neducating me on acceptable Slide protocol (via their source), and also Ben Alex,\nwhose prior posts to the slide mail lists were extremely helpful with Acegi\nintegration."}]