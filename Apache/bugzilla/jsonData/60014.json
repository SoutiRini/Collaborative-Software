[{"count": 0, "tags": [], "text": "Hello,\nhere's the environment :\n\nLinux 3.10.0-327.el7.x86_64 #1 SMP\n\nJava(TM) SE Runtime Environment (build 1.8.0_101-b13)\nJava HotSpot(TM) 64-Bit Server VM (build 25.101-b13, mixed mode)\n\nTomcat 8.5.4\n\n    <Connector port=\"8443\" protocol=\"org.apache.coyote.http11.Http11Nio2Protocol\"\n               executor=\"ttp8443\"\t\tsslImplementationName=\"org.apache.tomcat.util.net.openssl.OpenSSLImplementation\"\n               connectionTimeout=\"20000\"\n               enableLookups=\"false\" acceptCount=\"200\"\n               scheme=\"https\" secure=\"true\" SSLEnabled=\"true\"\n               SSLCertificateFile=\"...\" SSLCertificateKeyFile=\"...\" SSLCertificateChainFile=\"...\"\n               compression=\"off\" />\n\n\nProblem: Our web app is an e-commerce web site, it uses various technologies and frameworks. A few days ago we upgraded to tomcat 8.5.4 and java 8 from tomcat 7.x and java 7. We noticed that a certain form was not working correctly all of times (sometimes it worked, sometimes not). A large number of users had the issue, with various browsers and operating system on the client side.\nDebugging the issue I found that in some cases, not all form data arrives at the MVC framework. It seems truncated at some point. Looking at the post data with browser web tools I can see the entire data. Data size is small, just a few attribute names and values.\n\nSince on tomcat 7.x we used Apr, I tried to use the Apr Connector (changed the protocol attribute of the connector to org.apache.coyote.http11.Http11AprProtocol and removed the sslImplementationName parameter) , I have not changed anything else on the server or web app. This fixed the issue.\n\nSo my guess is that for some reason Nio2 is the cause.\n\nIf this is not a known issue, I'll try to investigate more. Please let me know.\nThanks", "is_private": false, "id": 193170, "creator": "a.vettori@b2bires.com", "time": "2016-08-18T12:25:41Z", "bug_id": 60014, "creation_time": "2016-08-18T12:25:41Z", "attachment_id": null}, {"count": 1, "attachment_id": null, "bug_id": 60014, "text": "This isn't a known issue. What we need is the simplest possible test case that demonstrates the issue. With that, a fix should be fairly easy.", "id": 193225, "time": "2016-08-19T17:03:20Z", "creator": "markt@apache.org", "creation_time": "2016-08-19T17:03:20Z", "tags": [], "is_private": false}, {"count": 2, "tags": [], "bug_id": 60014, "attachment_id": 34163, "is_private": false, "id": 193230, "time": "2016-08-19T21:35:03Z", "creator": "a.vettori@b2bires.com", "creation_time": "2016-08-19T21:35:03Z", "text": "Created attachment 34163\nTest Case Sources"}, {"count": 3, "tags": [], "text": "Created attachment 34164\nTest Case War", "is_private": false, "id": 193231, "creator": "a.vettori@b2bires.com", "time": "2016-08-19T21:35:42Z", "bug_id": 60014, "creation_time": "2016-08-19T21:35:42Z", "attachment_id": 34164}, {"count": 4, "tags": [], "creator": "a.vettori@b2bires.com", "is_private": false, "text": "Ok so I attached a test case. It's a simple Servlet that prints the request body and a stripped down version of my form that calls the servlet.\n\nWith Apr connector I get the full string of (encoded) parameters, with Nio2 I get a blank screen. Seems related to the number/size of the parameters. Maybe NIO2 is limiting the size of the request body.\n\nI also did a number of tests and it seems to me that it only happens when you call the secure connector. It never happened to me (in production and in this test case) with the 'regular' http connector.\n\nHope this helps to find the cause, if you need more information don't hesitate to ask.", "id": 193232, "time": "2016-08-19T21:44:24Z", "bug_id": 60014, "creation_time": "2016-08-19T21:44:24Z", "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 60014, "attachment_id": null, "is_private": false, "id": 193233, "time": "2016-08-19T21:51:50Z", "creator": "a.vettori@b2bires.com", "creation_time": "2016-08-19T21:51:50Z", "text": "I must add an information that may be important. The server where I did the testing and the production server are both CentOS7 linux installation with OpenSSL version 'OpenSSL 1.0.1e-fips 11 Feb 2013'.\n\nTomcat Native configured with '--disable-openssl-version-check'."}, {"count": 6, "tags": [], "text": "This works for me, but there are some reasons which could explain it:\n- the OpenSSL version is unsupported, don't try that\n- there was a (rare) issue in readLine() that got fixed BZ59912 (your code isn't using the integrated parameter parsing) and the buffering of the implementation with NIO2 and/or OpenSSL is different", "is_private": false, "id": 193280, "creator": "remm@apache.org", "time": "2016-08-23T11:19:56Z", "bug_id": 60014, "creation_time": "2016-08-23T11:19:56Z", "attachment_id": null}]