[{"count": 0, "tags": [], "text": "This bug was submitted in 2000 (by Francis Daly) into the old bugs.apache.org\ndatabase, and has not been resolved yet. So I resubmit it into this new database.\n\n\nGiven the directory structure\n\n/dir/index.html\n/part/index.html\n/part.html\n\nWith a default configuration, the uri's\n/dir/, /dir, /part/, /part, and /part.html are handled correctly.\n\nWith MultiViews on, I think that the Right Thing is for /part to\nbe equivalent to /part.html, not /part/ (/dir is still equivalent to\n/dir/, because there isn't a dir.*)\n\n[ mod_speling may be induced to do this in this specific case, but add an\n*.html.en and a *.html.de for each *.html there, and the point remains ]\nIs my idea of the Right Thing, the Wrong Thing?\n\n>How-To-Repeat:\nCreate the directories dir and part, and the files dir/index.html,\npart/index.html and part.html\nSet DirectoryIndex to index.html (or index) and turn MultiViews on.\nThen issue the requests\n\nGET /dir\nGET /dir/\nGET /part.html\nGET /part/\nGET /part\n\nI think the last redirection shouldn't be the same as the first one.\n\n>Fix:\nWhat I suggest is to change the MultiViews documentation from:\n\nA MultiViews search is enabled by the MultiViews Option. If the server\nreceives a request for /some/dir/foo and /some/dir/foo does not exist,\nthen the server reads the directory looking for all files named foo.*,\nand effectively fakes up a type map which names all those files, assigning\nthem the same media types and content-encodings it would have if the\nclient had asked for one of them by name. It then chooses the best match\nto the client's requirements, and returns that document.\n\nto:\n\nA MultiViews search is enabled by the MultiViews Option. If the server\nreceives a request for /some/dir/foo and /some/dir/foo does not exist\nor is a directory, then the server reads the directory /some/dir\nlooking for all files named foo.* and effectively fakes up a type map\nwhich names all those files, assigning them the same media types and\ncontent-encodings it would have if the client had asked for one of them\nby name. It then chooses the best match to the client's requirements,\nand returns that document. If there isn't a best match, and foo is a\ndirectory, it redirects to /some/dir/foo/.\n\nand to change the code in mod_negotiation.c accordingly:\n\ndiff -C3 mod_negotiation.c.old mod_negotiation.c\n\n*** mod_negotiation.c.old       Mon Feb  3 18:13:29 2003\n--- mod_negotiation.c   Tue May  4 17:00:42 2004\n***************\n*** 2656,2662 ****\n      int res;\n      int j;\n  \n!     if (r->finfo.st_mode != 0 || !(ap_allow_options(r) & OPT_MULTI)) {\n          return DECLINED;\n      }\n  \n--- 2656,2664 ----\n      int res;\n      int j;\n  \n!      if ( r->uri[strlen(r->uri)-1] == '/'\n!               || !(ap_allow_options(r) & OPT_MULTI)\n!             || (r->finfo.st_mode != 0) && !S_ISDIR(r->finfo.st_mode)) {\n          return DECLINED;\n      }", "attachment_id": null, "bug_id": 28769, "id": 56817, "time": "2004-05-04T15:15:01Z", "creator": "kozakzs@primposta.com", "creation_time": "2004-05-04T15:15:01Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 28769, "attachment_id": null, "id": 56820, "time": "2004-05-04T15:25:23Z", "creator": "nd@perlig.de", "creation_time": "2004-05-04T15:25:23Z", "is_private": false, "text": "This is not a bug.\n\nAs well documented, Mutliviews are invoked only, if the resource doesn't exist\nand would give a 404 otherwise. Obviously a directory which *does* exist doesn't\nfit into that concept."}, {"attachment_id": null, "tags": [], "bug_id": 28769, "is_private": false, "count": 2, "id": 56824, "time": "2004-05-04T16:12:48Z", "creator": "slive@apache.org", "creation_time": "2004-05-04T16:12:48Z", "text": "I think I disagree with Andre here, although I'm not sure.\n\nThe URL for the directory is \"/part/\".  The URL \"/part\" does not map to the\ndirectory.  Apache is helpful and fixes up a request for \"/part\" if \"/part/\"\nexists, but that doesn't make the original URL point to a valid resource.\n\nSo I would say the \"/part\" doesn't map to an existing resource, and therefore\nmultiviews should be invoked.\n\nBut I'll leave this \"invalid\" unless someone else agrees with me and wants to\nreopen it. "}, {"count": 3, "tags": [], "creator": "kozakzs@primposta.com", "text": "I've sent this comment to Andr\u00e9 directly. But I think the correct place of this\ncomment is this database. So:\n\nI have a directory AND a file also. And if I use an URI WITHOUT a trailing\nslash, I expect to get a file... instead of a directory. I mean I think Apache\nshould *differentiate* URIs if a directory and a file (with a similar name)\nexists. Currently Apache completes my URI, put a trailing slash at the end of it\nand then serve it as a directory nevertheless there is a file in the filesystem\nalso, and I use correct URI which points to that file...\n\n\nAnd here is his answer:\n\n>>I have a directory AND a file also. And if I use an URI WITHOUT a \n>> trailing slash, I expect to get a file... instead of a directory.\n\nThat's what I've understood. The point is, why do you expect that? The\ndirectory with exactly the name requested does exist. The redirect\nto the trailing slash thereafter is just for making the URI canonical.\n\n>>I mean \n>> I think Apache should /*differentiate* URIs if a directory and a file \n>> (with a similar name) exists.\n\n\nPerhaps an option for mod_negotiation would be feasible. Patches are\nwelcome, of course  :) \n", "id": 56825, "time": "2004-05-04T16:17:21Z", "bug_id": 28769, "creation_time": "2004-05-04T16:17:21Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "creator": "nd@perlig.de", "attachment_id": null, "is_private": false, "id": 56826, "time": "2004-05-04T16:28:32Z", "bug_id": 28769, "creation_time": "2004-05-04T16:28:32Z", "text": "The argumentation is interesting. In fact, mod_dir does only canonizialisation\nwork. (mod_autoindex relies on it).\nAnyway, you'll get a valid resource, if you leave out mod_dir but include\nmod_autoindex.\n\nThat we don't know how to deliver a resource doesn't make it invalid ;)\n\nAnyway, something like\n\nOptions +FileMultiViews\n\nor so would IMHO the best solution. (-> reopen)"}]