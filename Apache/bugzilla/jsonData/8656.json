[{"count": 0, "tags": [], "creator": "MacBelgium@Toughguy.net", "text": "Hi,\n\nI want to use the filter task where the properties file describing the filters \ncan be given as an URL. For example, I would like to use the filter task like \nthis:\n\n<filter filtersurl=\"http://myhost.org/deploy_env.properties\"/>\n\nI've made some changes to the code which does this. I'll include the necessary \npatches in this enhancement request. It's up to you guys whether you find this \ninteresting or not...\n\nHere are the patches (3):\n\ncvs diff -u Filter.java \nIndex: Filter.java\n===================================================================\nRCS file: /home/cvspublic/jakarta-\nant/src/main/org/apache/tools/ant/taskdefs/Filter.java,v\nretrieving revision 1.16\ndiff -u -r1.16 Filter.java\n--- Filter.java\t15 Apr 2002 15:33:08 -0000\t1.16\n+++ Filter.java\t30 Apr 2002 13:10:23 -0000\n@@ -55,6 +55,7 @@\n package org.apache.tools.ant.taskdefs;\n \n import java.io.File;\n+import java.net.URL;\n \n import org.apache.tools.ant.Task;\n import org.apache.tools.ant.BuildException;\n@@ -79,6 +80,7 @@\n     private String token;\n     private String value;\n     private File filtersFile;\n+    private URL filtersUrl;\n     \n     public void setToken(String token) {\n         this.token = token;\n@@ -91,17 +93,26 @@\n     public void setFiltersfile(File filtersFile) {\n         this.filtersFile = filtersFile;\n     }\n+    \n+    public void setFiltersurl(URL filtersUrl) {\n+        this.filtersUrl = filtersUrl;\n+    }\n \n     public void execute() throws BuildException {\n         boolean isFiltersFromFile = \n-            filtersFile != null && token == null && value == null;\n+            filtersFile != null && filtersUrl == null \n+            && token == null && value == null;\n+        boolean isFiltersFromUrl =\n+            filtersUrl != null && filtersFile == null\n+            && token == null && value == null;\n         boolean isSingleFilter = \n-            filtersFile == null && token != null && value != null;\n+            filtersFile == null && filtersUrl == null \n+            && token != null && value != null;\n         \n-        if (!isFiltersFromFile && !isSingleFilter) {\n+        if (!isFiltersFromFile && !isFiltersFromUrl && !isSingleFilter) {\n             throw new BuildException(\"both token and value parameters, or \"\n-                                     + \"only a filtersFile parameter is \"\n-                                     + \"required\", location);\n+                                     + \"only a filtersFile or filtersUrl \"\n+                                     + \"parameter is required\", location);\n         }\n         \n         if (isSingleFilter) {\n@@ -109,12 +120,21 @@\n         }\n         \n         if (isFiltersFromFile) {\n-            readFilters();\n+            readFiltersFromFile();\n+        }\n+        \n+        if (isFiltersFromUrl) {\n+            readFiltersFromUrl();\n         }\n     }\n     \n-    protected void readFilters() throws BuildException {\n+    protected void readFiltersFromFile() throws BuildException {\n         log(\"Reading filters from \" + filtersFile, Project.MSG_VERBOSE);\n         project.getGlobalFilterSet().readFiltersFromFile(filtersFile);\n+    }\n+    \n+    protected void readFiltersFromUrl() throws BuildException {\n+        log(\"Reading filters from \" + filtersUrl, Project.MSG_VERBOSE);\n+        project.getGlobalFilterSet().readFiltersFromUrl(filtersUrl);\n     }\n }\n\n\ncvs diff -u FilterSet.java \nIndex: FilterSet.java\n===================================================================\nRCS file: /home/cvspublic/jakarta-\nant/src/main/org/apache/tools/ant/types/FilterSet.java,v\nretrieving revision 1.13\ndiff -u -r1.13 FilterSet.java\n--- FilterSet.java\t15 Apr 2002 14:56:34 -0000\t1.13\n+++ FilterSet.java\t30 Apr 2002 13:11:13 -0000\n@@ -56,8 +56,12 @@\n // java io classes\n import java.io.File;\n import java.io.FileInputStream;\n+import java.io.InputStream;\n import java.io.IOException;\n \n+// java net classes\n+import java.net.URL;\n+\n // java util classes\n import java.util.Enumeration;\n import java.util.Hashtable;\n@@ -293,19 +297,10 @@\n \n         if (filtersFile.isFile()) {\n            log(\"Reading filters from \" + filtersFile, Project.MSG_VERBOSE);\n-           FileInputStream in = null;\n+           InputStream in = null;\n            try {\n-              Properties props = new Properties();\n-              in = new FileInputStream(filtersFile);\n-              props.load(in);\n-              \n-              Enumeration enum = props.propertyNames();\n-              Vector filters = getFilters();\n-              while (enum.hasMoreElements()) {\n-                 String strPropName = (String) enum.nextElement();\n-                 String strValue = props.getProperty(strPropName);\n-                 filters.addElement(new Filter(strPropName, strValue));\n-              }\n+               in = new FileInputStream(filtersFile);\n+               readFiltersFromInputStream(in);\n            } catch (Exception e) {\n               throw new BuildException(\"Could not read filters from file: \" \n                 + filtersFile);\n@@ -322,6 +317,41 @@\n             + \"the filtersfile attribute:\" + filtersFile);\n         }\n     }\n+    \n+    public void readFiltersFromUrl(URL filtersUrl) throws BuildException {\n+        if (isReference()) {\n+            throw tooManyAttributes();\n+        }\n+        \n+       log(\"Reading filters from \" + filtersUrl, Project.MSG_VERBOSE);\n+       InputStream in = null;\n+       try {\n+           in = filtersUrl.openStream();\n+           readFiltersFromInputStream(in);\n+       } catch (Exception e) {\n+          throw new BuildException(\"Could not read filters from url: \" \n+            + filtersUrl);\n+       } finally {\n+          if (in != null) {\n+             try {\n+                in.close();\n+             } catch (IOException ioex) {\n+             }\n+          }\n+       }\n+    }\n+    \n+    private void readFiltersFromInputStream(InputStream in) throws Exception {\n+        Properties props = new Properties();\n+        props.load(in);\n+\n+        Enumeration enum = props.propertyNames();\n+        while (enum.hasMoreElements()) {\n+            String strPropName = (String) enum.nextElement();\n+            String strValue = props.getProperty(strPropName);\n+            addFilter(new Filter(strPropName, strValue));\n+        }\n+    }        \n     \n     /**\n      * Does replacement on the given string with token matching.\n\n\n\ncvs diff -u filter.html \nIndex: filter.html\n===================================================================\nRCS file: /home/cvspublic/jakarta-ant/docs/manual/CoreTasks/filter.html,v\nretrieving revision 1.8\ndiff -u -r1.8 filter.html\n--- filter.html\t12 Apr 2002 15:26:22 -0000\t1.8\n+++ filter.html\t30 Apr 2002 13:11:57 -0000\n@@ -15,7 +15,7 @@\n through the Project commodity methods.</p>\n <p>Note 1: the token string must not contain the separators chars (@).<br>\n Note 2: Either token and value attributes must be provided, or only the\n-filtersfile attribute.</p>\n+filtersfile or filtersurl attribute.</p>\n \n <h3>Parameters</h3>\n <table border=\"1\" cellpadding=\"2\" cellspacing=\"0\">\n@@ -40,6 +40,11 @@\n     <td valign=\"top\">The file from which the filters must be read. This file \nmust be a formatted as a property file. </td>\n     <td align=\"center\" valign=\"top\">Yes*</td>\n   </tr>\n+  <tr>\n+    <td valign=\"top\">filtersurl</td>\n+    <td valign=\"top\">The url from which the filters must be read. This result \nof this url must be a formatted as a property file. </td>\n+    <td align=\"center\" valign=\"top\">Yes*</td>\n+  </tr>\n </table>\n <p>* see notes 1 and 2 above parameters table.</p>\n <h3>Examples</h3>\n@@ -52,6 +57,9 @@\n with <i>2000.</i></p>\n <pre>  &lt;filter filtersfile=&quot;deploy_env.properties&quot;/&gt;</pre>\n will read all property entries from the <i>deploy_env.properties</i> file\n+and set these as filters.\n+<pre>  &lt;filter \nfiltersurl=&quot;http://myhost.org/deploy_env.properties&quot;/&gt;</pre>\n+will read all property entries from the given url\n and set these as filters.\n \n <hr>", "id": 15116, "time": "2002-04-30T13:14:26Z", "bug_id": 8656, "creation_time": "2002-04-30T13:14:26Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "creator": "MacBelgium@Toughguy.net", "text": "Created attachment 1740\nThe patches in 1 file", "id": 15117, "time": "2002-04-30T13:15:49Z", "bug_id": 8656, "creation_time": "2002-04-30T13:15:49Z", "is_private": false, "attachment_id": 1740}, {"count": 2, "tags": [], "bug_id": 8656, "attachment_id": null, "text": "There is probably no chance this will make it into Ant 1.5, so I'll offer a \nsimple workaround: Use the <get> task to pull the filter file to the local \nmachine, then use <filter> as is.", "id": 15119, "time": "2002-04-30T13:32:20Z", "creator": "jakarta@ehatchersolutions.com", "creation_time": "2002-04-30T13:32:20Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 8656, "attachment_id": null, "text": "this is a WONTFIX because filter is so very dangerous. \n\nWhat I am going to do is link to bug #42702, resource enable ReplaceTokens filter\n\nThis is the filter you can use inline in a copy; if this was enhanced to read\nits filter from any resource, that resource could include a URL. This would do\neverything you need except apply to all files we copy, which tends to cause more\nsupport problems than it solves.\n\n\n\n*** This bug has been marked as a duplicate of 42702 ***", "id": 104557, "time": "2007-06-20T06:43:03Z", "creator": "stevel@apache.org", "creation_time": "2007-06-20T06:43:03Z", "is_private": false}]