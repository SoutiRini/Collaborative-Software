[{"count": 0, "attachment_id": null, "bug_id": 10276, "is_private": false, "id": 18637, "time": "2002-06-27T09:14:51Z", "creator": "nicolaken@apache.org", "creation_time": "2002-06-27T09:14:51Z", "tags": [], "text": "The supplied patch adds the \n\n<import file=\"otherbuild.xml\"/>\n\ntag to <project>.\n\nIt replaces effectively using xml entities, and the imported projects are well \nformed xml that has a project tag too, that is ignored in import.\n\nTo do a quick test, after compilation, go in dist/bin, copy there the three \ntest build files and run ant."}, {"count": 1, "tags": [], "text": "Created attachment 2204\nProjectHelperImpl.diff", "attachment_id": 2204, "id": 18638, "creator": "nicolaken@apache.org", "time": "2002-06-27T09:16:03Z", "bug_id": 10276, "creation_time": "2002-06-27T09:16:03Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 10276, "attachment_id": 2205, "id": 18639, "time": "2002-06-27T09:17:02Z", "creator": "nicolaken@apache.org", "creation_time": "2002-06-27T09:17:02Z", "is_private": false, "text": "Created attachment 2205\ntest builds"}, {"count": 3, "attachment_id": null, "bug_id": 10276, "is_private": false, "id": 18640, "time": "2002-06-27T09:24:25Z", "creator": "holtdl@yahoo.com", "creation_time": "2002-06-27T09:24:25Z", "tags": [], "text": "If this works as advertised (and gets accepted and all that), I think there'll \nbe an awful lot of very happy campers -- myself included :)  Very cool, Nicola."}, {"count": 4, "tags": [], "bug_id": 10276, "attachment_id": null, "is_private": false, "id": 18712, "time": "2002-06-28T12:10:56Z", "creator": "nicolaken@apache.org", "creation_time": "2002-06-28T12:10:56Z", "text": "Could this go into 1.5?\n\nI know that it's a bit late in the release cycle, but it seems that it could\nhelp many, since it removes the need of xml entities.\n\nAnything I can do to make this small but useful patch moving?\nIs someone already evaluating this?\nI ask because I saw you haven't accepted it yet ;-)\n\nThank you :-)"}, {"count": 5, "tags": [], "bug_id": 10276, "attachment_id": null, "is_private": false, "id": 18773, "time": "2002-06-30T20:06:19Z", "creator": "holtdl@yahoo.com", "creation_time": "2002-06-30T20:06:19Z", "text": "I just now picked it up and ran it, and it all seems to work great! However, \nsince it's a functionality change, not a bug-fix, it seems unlikely it'll get \ninto 1.5 -- unless you're a really good salesman (and supply testcases and doc \nupdates :)"}, {"count": 6, "attachment_id": null, "bug_id": 10276, "is_private": false, "id": 18775, "time": "2002-06-30T20:28:53Z", "creator": "nicolaken@apache.org", "creation_time": "2002-06-30T20:28:53Z", "tags": [], "text": "Great! :-)\n\nAnyway, it has already been -1ed for the same reason you specify, and I don't\nwant to pursue it now, because the more I think about it, the more I agree :-)\n\nIt's such a big thing in terms of management and structure of builds, that it's\nbetter if it's put to the test for some time.\n\nAs you may know, all my submissions for Ant (XmlPropertyTask 4 example), come\nfrom project Centipede. More enhancements for Ant will come from there in the\nfuture too, so I though \"how can I make this collaboration process work?\".\n\nI will make a new dist for Centipede called Antipede, which will include Ant1.5,\nthe contrib tasks and the new <import> stuff.\n\nThis way users can install that instead of Ant and use both Ant via the \"ant\"\nscript, or the enhanced version via a \"cent\" script.\n\nThis way I don't rely on the quick inclusion of new stuff in Ant, and users can\ndecide to use the standard Ant or the \"enhanced but not yet in Ant\" one.\n\nSuggestions on enhancements to this patch are *highly* welcome :-)"}, {"count": 7, "tags": [], "bug_id": 10276, "attachment_id": null, "id": 18858, "time": "2002-07-02T16:37:35Z", "creator": "ddevienne@lgc.com", "creation_time": "2002-07-02T16:37:35Z", "is_private": false, "text": "I only had a cursory look at the patch, but since <import> is implemented as a \nspecial case in ProjectHelpImpl, so very early in the build file processing, \ndoes it have access to properties? I mean, if I do:\n\n<import file=\"${buildfiledir}/dosomething.xml\" />\n\nwill ${buildfiledir} be resolved correctly? Thanks, --DD"}, {"count": 8, "tags": [], "bug_id": 10276, "attachment_id": null, "id": 18859, "time": "2002-07-02T16:59:00Z", "creator": "holtdl@yahoo.com", "creation_time": "2002-07-02T16:59:00Z", "is_private": false, "text": "I just tried doing that, and it doesn't work (ratz! -- I was really hoping it \nwould)."}, {"count": 9, "tags": [], "bug_id": 10276, "attachment_id": null, "id": 18861, "time": "2002-07-02T17:04:46Z", "creator": "nicolaken@apache.org", "creation_time": "2002-07-02T17:04:46Z", "is_private": false, "text": "Errr... I think no.\nOh, just seen Diane's post.\nSo it's no :-(\n\nAny suggestion on how to do it?\n\nSince properties are put in the project (right?) I could have it and use it if\nit's defined before the import.\n\nI'll look into it, but to do it more quickly, how can I resolve a string that\ncontains properties? (ie class and method?)"}, {"count": 10, "attachment_id": null, "bug_id": 10276, "is_private": false, "id": 18866, "time": "2002-07-02T18:02:02Z", "creator": "nicolaken@apache.org", "creation_time": "2002-07-02T18:02:02Z", "tags": [], "text": "Ok, I couldn't resist, so I did it.\nQuite simple really, just added\n\n            file=helperImpl.project.replaceProperties(file);\n\nand that's it.\n\nAny other need? ;-)"}, {"count": 11, "attachment_id": 2238, "bug_id": 10276, "is_private": false, "id": 18867, "time": "2002-07-02T18:03:34Z", "creator": "nicolaken@apache.org", "creation_time": "2002-07-02T18:03:34Z", "tags": [], "text": "Created attachment 2238\nThe -u diff of the ProjectHelperImpl; now it also resolves properties in the file name."}, {"count": 12, "tags": [], "creator": "nicolaken@apache.org", "is_private": false, "text": "Created attachment 2239\nThe build.xml of the previous example but with also property resolution in the filename.", "id": 18868, "time": "2002-07-02T18:04:59Z", "bug_id": 10276, "creation_time": "2002-07-02T18:04:59Z", "attachment_id": 2239}, {"count": 13, "tags": [], "bug_id": 10276, "attachment_id": 2242, "is_private": false, "id": 18896, "time": "2002-07-02T21:58:47Z", "creator": "ddevienne@lgc.com", "creation_time": "2002-07-02T21:58:47Z", "text": "Created attachment 2242\nResolve relative file path from the 'importer' file rather than current directory"}, {"count": 14, "tags": [], "bug_id": 10276, "attachment_id": null, "id": 18898, "time": "2002-07-02T22:04:14Z", "creator": "ddevienne@lgc.com", "creation_time": "2002-07-02T22:04:14Z", "is_private": false, "text": "Attached a new patch that resolves non-absolute filenames to import relative to \nthe build file that imports them. This makes it similar to the kind of \nresolution performed for entity includes.\n\nAlso, there's currently nothing that prevent recursive inclusion, nor multiple \ninclusion of the same build file 'fragment' (the latter being required if the \nformer is to be supported). One would need a map to keep track of all the files \nthat are being imported to avoid cyclic imports too and multiple imports. --DD"}, {"count": 15, "tags": [], "text": "Created attachment 2246\nZip of latest patch and test build files that deal with multiple includes and cycles", "attachment_id": 2246, "id": 18904, "creator": "ddevienne@lgc.com", "time": "2002-07-02T23:14:53Z", "bug_id": 10276, "creation_time": "2002-07-02T23:14:53Z", "is_private": false}, {"count": 16, "tags": [], "creator": "ddevienne@lgc.com", "is_private": false, "id": 18906, "creation_time": "2002-07-02T23:20:00Z", "time": "2002-07-02T23:20:00Z", "bug_id": 10276, "text": "Latest patch correctly handles the following diamond and cycle:\nA imports B and C\nB imports D\nC imports D\nD imports A\n\nAnd also demonstrates the relative path resolution since called from a \ndifferent directory than the one where the build{2|3|4}.xml files reside.\n\nNote that the patch was made against the 1.5 branch. --DD\n\nP:\\org_apache\\antx>ant -buildfile import\\build.xml -Dbuildtwo=.\nBuildfile: import\\build.xml\nImported file P:\\org_apache\\antx\\import\\build.xml skipped... Already imported!\nImported file P:\\org_apache\\antx\\import\\build4.xml skipped... Already imported!\n\nmb4:\n     [echo] Sub4 build called :-)\n\nmb2:\n     [echo] Sub2 build called :-)\n\nmb3:\n     [echo] Sub3 build called :-)\n\nmb:\n     [echo] Main build called.\n\nBUILD SUCCESSFUL\nTotal time: 0 seconds", "attachment_id": null}, {"count": 17, "tags": [], "text": "J.Pietschmann suggested me to look at xslt for inspiration, and now I agree \nthat some kind of inherit can be done while keeping my concens in check.\n\nSuppose this target:\n\n<target name=\"mytarget\" depends=\"a,b,c\">...</target>\n\nis in a file that is imported by my buildfile.\n\nComposition means:\n\n<target name=\"mylocaltarget\" depends=\"a,b,c\">\n  <dostuff1/>\n  <antcall target=\"mytarget\">\n  <dostuff2/>\n</target>\n\nWith this I can run \"mylocaltarget\" as an enhanced \"mytarget\".\nWhat I /cannot/ do, as you pointed out, is have all the targets that depend on \nmytarget depend on mylocaltarget instead.\nWhat could be done is callbacks, like:\n\n<target type=\"pre\" name=\"mytarget\">\n  <dostuff1/>\n</target>\n\n<target type=\"pre\" name=\"mytarget\">\n  <dostuff2/>\n</target>\n\nWhich I really don't like, since other imports can do the same in a difficult \nto control manner and things get out of control.\n\nNew way I like:\n\n<target name=\"mytarget\" inheritdeps=\"true\" depends=\"additionaldeps\">\n  <dostuff1/>\n  <apply-import/>\n  <dostuff2/>\n</target>\n\nSo I will change \"import\" to \"include\" and make the new import stuff.", "attachment_id": null, "id": 19234, "creator": "nicolaken@apache.org", "time": "2002-07-10T07:13:28Z", "bug_id": 10276, "creation_time": "2002-07-10T07:13:28Z", "is_private": false}, {"count": 18, "tags": [], "bug_id": 10276, "attachment_id": null, "is_private": false, "id": 19281, "time": "2002-07-10T21:12:56Z", "creator": "nicolaken@apache.org", "creation_time": "2002-07-10T21:12:56Z", "text": "Done.\n\nWith the new patch you can do the following (using the previous example):\n\n <target name=\"mytarget\">\n   <dostuff1/>\n   <antcall target=\"super.mytarget\"/>\n   <dostuff2/>\n </target>\n\nDependencies are not inherited, but the name yes, so that all the targets that\ncall mytarget will call the newversion, and the depends=\"\" of the old mytarget\nare not used in the new version.\n*If* (as in the above case) the super.mytarget is called, its dependencies are\nrun before himself.\n\nExamples are supported as usual, and this patch supercedes all previous,\ncomprising the ones from Dominique Devienne,"}, {"count": 19, "attachment_id": 2311, "bug_id": 10276, "is_private": false, "id": 19282, "time": "2002-07-10T21:14:37Z", "creator": "nicolaken@apache.org", "creation_time": "2002-07-10T21:14:37Z", "tags": [], "text": "Created attachment 2311\nPatch to allow real imports, with redefinition of targets and use of super.targetname"}, {"count": 20, "tags": [], "bug_id": 10276, "attachment_id": 2312, "id": 19283, "time": "2002-07-10T21:19:25Z", "creator": "nicolaken@apache.org", "creation_time": "2002-07-10T21:19:25Z", "is_private": false, "text": "Created attachment 2312\nZip file with complete java file and new main build file example"}, {"count": 21, "tags": [], "creator": "nicolaken@apache.org", "is_private": false, "id": 19428, "creation_time": "2002-07-12T17:05:34Z", "time": "2002-07-12T17:05:34Z", "bug_id": 10276, "text": "Created attachment 2334\nimport.zip: Synched with latest changes in CVS on top-level tasks and minor changes+extra examples", "attachment_id": 2334}, {"count": 22, "tags": [], "text": "This patch was included with modifications agree on, into the embed proposal of Ant.", "attachment_id": null, "id": 20936, "creator": "nicolaken@apache.org", "time": "2002-08-12T22:24:43Z", "bug_id": 10276, "creation_time": "2002-08-12T22:24:43Z", "is_private": false}, {"count": 23, "tags": [], "creator": "nicolaken@apache.org", "is_private": false, "text": "See bug 11644 as a continuation of this enhancement series :-)\n\nhttp://nagoya.apache.org/bugzilla/show_bug.cgi?id=11644", "id": 20967, "time": "2002-08-13T16:09:18Z", "bug_id": 10276, "creation_time": "2002-08-13T16:09:18Z", "attachment_id": null}]