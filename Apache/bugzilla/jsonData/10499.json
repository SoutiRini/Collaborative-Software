[{"attachment_id": null, "tags": [], "bug_id": 10499, "is_private": false, "count": 0, "id": 19033, "time": "2002-07-05T07:13:13Z", "creator": "koen.bruyndonckx@axa.be", "creation_time": "2002-07-05T07:13:13Z", "text": "When a certain number of source files is reached, Ant generates a filelist \nwhich it passes to the compiler.\n\nThis filelist doesn't contain quotes around filenames which have spaces in them.\n\nWork-around:  Make sure yourself that you use directory-names without spaces in \nthem."}, {"count": 1, "tags": [], "text": "It will only use the file for \"external\" compilers like jikes or forked javac.\nWhich compiler is causing problems for you?  \n\nI'm rather sure that adding quotes around the filenames would cause jikes\n(at least on Unix) to fail.", "attachment_id": null, "id": 19041, "creator": "bodewig@apache.org", "time": "2002-07-05T09:27:49Z", "bug_id": 10499, "creation_time": "2002-07-05T09:27:49Z", "is_private": false}, {"count": 2, "tags": [], "text": "We are using a forked version of javac to be sure that we are using the actual \nJDK1.1.7B version of javac.  We have a substantial number (5000+) of java \nsources written in JDK1.1.7B and aren't taking the risk of using JDK1.4.0 with \ntarget \"1.1\"\n\nSo, our build tool has to be able to support JDK1.4.0, JDK1.3 (for thin client \ndevelopment) and JDK1.1.7B.", "attachment_id": null, "id": 19054, "creator": "koen.bruyndonckx@axa.be", "time": "2002-07-05T12:13:53Z", "bug_id": 10499, "creation_time": "2002-07-05T12:13:53Z", "is_private": false}, {"count": 3, "attachment_id": null, "creator": "bodewig@apache.org", "is_private": false, "id": 19055, "time": "2002-07-05T12:22:30Z", "bug_id": 10499, "creation_time": "2002-07-05T12:22:30Z", "tags": [], "text": "Hmm, are you sure you really are using JDK 1.1's javac?\n\nAccording to my copy of the JDK 1.1 docs it doesn't support the @filelist\noption at all."}, {"count": 4, "tags": [], "bug_id": 10499, "attachment_id": null, "id": 19057, "time": "2002-07-05T12:29:42Z", "creator": "koen.bruyndonckx@axa.be", "creation_time": "2002-07-05T12:29:42Z", "is_private": false, "text": "Oops,  very sorry.\n\nThe story was correct, but the problem arose with JDK1.4.0\nWe use fork for every version of the JDK because we need to use the extra \nsettings such as MemoryInitialSize end MemoryMaxmimumSize\n"}, {"count": 5, "tags": [], "bug_id": 10499, "is_private": false, "text": "Yes, and this explains a lot.  According to the docs:\n\n> An argument file can include javac options and source filenames in any\n> combination. The arguments within a file can be space-separated or\n> newline-separated. \n\nOh my.  So here quotes will become necessary for all platforms, I guess.\n\nOf course it is different for JDK 1.3\n\n> you may specify one or more files that themselves contain one filename per\n> line.\n\nCould you test whether 1.3 (or 1.2 for that matter) needs quotes for filenames\nwith spaces as well?  I don't have a Windows box around and suspect things\ncould depend on the OS.", "id": 19058, "time": "2002-07-05T12:37:06Z", "creator": "bodewig@apache.org", "creation_time": "2002-07-05T12:37:06Z", "attachment_id": null}, {"count": 6, "tags": [], "bug_id": 10499, "attachment_id": null, "is_private": false, "id": 19068, "time": "2002-07-05T15:36:50Z", "creator": "carlo.vandesompel@axa.be", "creation_time": "2002-07-05T15:36:50Z", "text": "Done the test with 1.3 and 1.4 against W2K and got the same results.\nSpecs :\nCompilation on : Microsoft Windows 2000 [Version 5.00.2195]\n1. Compiled against java full version \"1.4.0-b92\"\nerror -> javac: invalid flag: C:\\\\ANTBUILD\\\\assemble\\\\DVL\\\\BA200302\\\\AXA ....\n2. Compiled against java full version \"1.3.1_01\"\nerror -> javac: invalid argument: C:\\\\ANTBUILD\\\\assemble\\\\DVL\\\\BA200302\\\\AXA ...\n\nActual entry in the (example) source.file.list :\n\"C:\\ANTBUILD\\assemble\\DVL\\BA200302\\AXA Bank Java \nCore\\build\\javaroot\\be\\axa\\ah\\service\\table\\RendererMetrics.java\"\nBoth compiled correctly with the complete pathname in closing brackets.\n\nCheers,\nCarlo\n\nPS. next reply will be next week or tomorrow (it's already 18:00 local time)"}, {"count": 7, "tags": [], "text": "*** Bug 17683 has been marked as a duplicate of this bug. ***", "is_private": false, "id": 32791, "creator": "bodewig@apache.org", "time": "2003-03-10T09:31:48Z", "bug_id": 10499, "creation_time": "2003-03-10T09:31:48Z", "attachment_id": null}, {"count": 8, "tags": [], "text": "*** Bug 19285 has been marked as a duplicate of this bug. ***", "is_private": false, "id": 36217, "creator": "bodewig@apache.org", "time": "2003-04-28T10:15:42Z", "bug_id": 10499, "creation_time": "2003-04-28T10:15:42Z", "attachment_id": null}, {"count": 9, "attachment_id": null, "creator": "bodewig@apache.org", "is_private": false, "id": 36285, "time": "2003-04-29T13:18:24Z", "bug_id": 10499, "creation_time": "2003-04-29T13:18:24Z", "tags": [], "text": "Should be fixed for JDK 1.4 with nightly build 2003-04-30.\n\nWe'll need some more field testing to determine which other \"external\" compilers\nneed similar treatment - I'd bet it depends on the OS as well.\n\n"}, {"count": 10, "tags": [], "text": "I believe this bug is leading to problems in Tomcat, seen in bug 18595 and bug \n19725.", "is_private": false, "id": 38263, "creator": "joe.boon@cdcsolutions.com", "time": "2003-06-03T14:42:26Z", "bug_id": 10499, "creation_time": "2003-06-03T14:42:26Z", "attachment_id": null}, {"count": 11, "attachment_id": null, "creator": "joe.boon@cdcsolutions.com", "is_private": false, "id": 38265, "time": "2003-06-03T14:47:34Z", "bug_id": 10499, "creation_time": "2003-06-03T14:47:34Z", "tags": [], "text": "I am re-opening this bug. Based on the fix I have seen for it in a recent 1.6 \nalpha nightly build it is not the correct fix.\n\nI was hoping it would make 1.5, but it seems to have missed the last 1.5 build \n(1.5.3).\n\nHere is the 'fix' in the 1.6 nightly build:\n\n                    for (int i = firstFileName; i < args.length; i  ) {\n                        if (quoteFiles && args[i].indexOf(\" \") > -1) {\n                            out.println(\"\\\"\"   args[i]   \"\\\"\");\n                        } else {\n                            out.println(args[i]);\n                        }\n                    }\n\nThis is not a complete fix. There are three problems with this fix:\n\n1. It needs to escape backslashes, see bug 17683. Without doing this it will \nnot work, especially on Windows which always uses backslashes.\n\n2. The method decides whether to quote the names using the \"quoteFiles\" \nboolean parameter. However, there is no way of setting quoteFiles to True. \n\nThere is no way of configuring Ant to do this. When used in Tomcat this will \nnot be set. It would be great to always set this to True if running on \nWindows. At the moment, swapping ant.jar from the latest Ant 1.6 nightly-build \ninto Tomcat 4.1.24 (which uses Ant 1.5.1), and restarting Tomcat does not fix \nthe problem. The fix needs to work automatically.\n\n3. The fix checks whether there is space before quoting the file. If someone \nwants to quote the file, why not always quote them. There might be other \ncharacters in the filename that need quoting (other white space). If it is \ngoing to check for spaces, then why do we need quoteFiles? Why not always \nquote files with spaces in their names?\n\nI would be grateful if the fix could be re-done. At the moment the default \ninstall of Tomcat on Windows doesn't work for small to medium sized \napplications."}, {"count": 12, "tags": [], "bug_id": 10499, "is_private": false, "id": 38268, "creation_time": "2003-06-03T15:03:54Z", "time": "2003-06-03T15:03:54Z", "creator": "levylambert@tiscali-dsl.de", "text": "Stefan Bodewig being on vacations, I am going to work on this bug.\nCheers.", "attachment_id": null}, {"count": 13, "tags": [], "text": "With the last nightly build of ant, with javac of jdk 1.3 or javac of jdk 1.4, \ncompiling source code installed in paths with embedded spaces resulted in this \ntype of error messages from the compiler :\n    [javac] error: cannot read: C:dev\testantdir space\u0007ntsrcmainorg\u0007\npache\toolszipAsiExtraField.java\n\nI have just submitted changes in DefaultCompilerAdapter and in JavacExternal \nwhich address the remarks of Joe Boon and Anne Kinsella.\n\nIt should be in the next nightly build of ant.\n\nCheers\n\nAntoine", "attachment_id": null, "bug_id": 10499, "id": 38294, "time": "2003-06-03T21:19:29Z", "creator": "levylambert@tiscali-dsl.de", "creation_time": "2003-06-03T21:19:29Z", "is_private": false}, {"count": 14, "tags": [], "bug_id": 10499, "is_private": false, "id": 39787, "creation_time": "2003-07-01T19:53:45Z", "time": "2003-07-01T19:53:45Z", "creator": "nmcminn@charter.net", "text": "I believe that this also occurs when you have a very long classpath.  I am \nusing Tomcat 4.1.24 and after adding a couple of jars, whenever I update the \nJSP pages, the compile fails.  When looking at the stack trace, the classpath \nis very long, and truncated.  Is this a result of the same issue, or a new bug?", "attachment_id": null}, {"count": 15, "attachment_id": null, "creator": "antoine@apache.org", "is_private": false, "id": 39792, "time": "2003-07-01T20:46:14Z", "bug_id": 10499, "creation_time": "2003-07-01T20:46:14Z", "tags": [], "text": "truncated classpath would be a different bug.\nDoes your problem happen on Windows ? (problem of environment variable space is \nwell-known). Is your problem related to ant, or just to tomcat ?\nAntoine"}, {"count": 16, "tags": [], "creator": "antoine@apache.org", "attachment_id": null, "id": 41483, "time": "2003-07-25T07:00:41Z", "bug_id": 10499, "creation_time": "2003-07-25T07:00:41Z", "is_private": false, "text": "*** Bug 21868 has been marked as a duplicate of this bug. ***"}, {"count": 17, "tags": [], "bug_id": 10499, "attachment_id": null, "id": 44655, "time": "2003-09-25T09:37:31Z", "creator": "bodewig@apache.org", "creation_time": "2003-09-25T09:37:31Z", "is_private": false, "text": "*** Bug 23401 has been marked as a duplicate of this bug. ***"}]