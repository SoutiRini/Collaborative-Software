[{"count": 0, "tags": [], "text": "Tribes stack using:\n* TcpPingInterceptor\n* TcpFailureDetector\n* MessageDispatchInterceptor\n* StaticMembershipInterceptor\nDo not work well in static cluster.\n\nFirst side (ie one thread):\n* call to TcpFailureDetector.heartbeat()\n* call to checkMembers(false)\n* call to performBasicCheck() in synchronized(membership)\n* in performBasicCheck, for a missing static node:\n*   add \"missing\" member to membership with membership.memberAlive(m)\n*       HERE THE SECOND THREAD HAVE SOME TIME TO WORK\n*   check it with memberAlive(m)\n*   remove it since if it doesn't exist\n\nSecond side (ie another thread):\n* some call to channel.getMembers() like what the done by AbstractReplicatedMap\n* this call will call the TcpFailureDetector.getMembers()\n* this one could return a wrong value since it can contains unavailable nodes\n\nNote:\n* synchronize on membership isn't use by TcpFailureDetector in getMember(), getMembers(), hasMembers(), neither in Membership equivalent method (maybe because it's too heavy to lock every thread while the TcpFailureDetector check if node are alive).\n\nIt must not be an issue for AbstractReplicatedMap since with or without TcpFailureDetector a node could disapear while replicated map try to use it.\nBut ReplicatedMap use always Channel.SEND_OPTIONS_DEFAULT where the value is Channel.SEND_OPTIONS_USE_ACK. So a message sent to a missing node will fail with an exception.\n\nPersonnaly I override TcpFailureDetector.heartbeat() to avoid performBasicCheck() if I use a static configuration (TcpPingInterceptor call performForcedCheck()).\nBut this doesn't fix ReplicatedMap issue.\n\nBetter fix could avoid adding missing member to membership list:\n* Add a method like memberAlive(MemberImpl) to Membership without side effect (add the member)\n* in TcpFailureDetector.performBasicCheck(): check this new method before adding the node\n\n\nThis doesn't fix the AbstractReplicatedMap issue which work always with acknoledge from other nodes.\n\n\nSame code for Tomcat 6.\n\n\nbest regards\nF.Arnoud", "is_private": false, "id": 162902, "creator": "frederic.arnoud@gmail.com", "time": "2012-10-23T16:03:53Z", "bug_id": 54045, "creation_time": "2012-10-23T16:03:53Z", "attachment_id": null}, {"count": 1, "text": "Thanks for the report.\nFixed in trunk and 7.0.x and will be included in 7.0.33 onwards.\nProposed for 6.0.x.", "creator": "kfujino@apache.org", "is_private": false, "id": 162924, "time": "2012-10-25T12:00:47Z", "bug_id": 54045, "creation_time": "2012-10-25T12:00:47Z", "tags": [], "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 54045, "attachment_id": null, "is_private": false, "id": 165278, "time": "2013-02-15T20:27:16Z", "creator": "markt@apache.org", "creation_time": "2013-02-15T20:27:16Z", "text": "Fixed in 6.0.x and will be included in 6.0.37 onwards."}]