[{"count": 0, "tags": [], "bug_id": 6344, "attachment_id": null, "text": "When implicitly validating my XML doc against my Schema doc via the SAXCount and\nDOMCount example programs, I get no errors found/reported even tho I am\nviolating the uniqueness constraint of my \"KEY\" fields.\n--- XML file ---\n<?xml version=\"1.0\"?>\n<products_by_vendor\n   xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n   xsi:noNamespaceSchemaLocation=\"gg_products.xsd\">\n  <vendor id=\"conners\">\n    <vendor_name>Conners Chair Company</vendor_name>\n    <product>\n        <gg_sku>GG001</gg_sku>\n        <vendor_sku>QA3452</vendor_sku>\n        <short_desc>Queen Anne Chair</short_desc>\n        <price type=\"cost\">$85.00</price>\n    </product>\n    <product>\n\t<gg_sku>GG001</gg_sku>\n        <vendor_sku>RC2342</vendor_sku>\n        <short_desc>Early American Rocking Chair</short_desc>\n        <price>120.00</price>\n        <inventory location=\"warehouse\">40</inventory>\n    </product>\n  </vendor>\n</products_by_vendor>\n\n--- SCHEMA ---\n<xs:schema xmlns:xs=\"http://www.w3.org/2001/XMLSchema\">\n\n<!-- NOTE: these definitions are in \"top-down\" order. -->\n\n<xs:element name=\"products_by_vendor\">\n  <xs:complexType>\n    <xs:sequence>\n        <xs:element ref=\"vendor\" maxOccurs=\"unbounded\" />\n    </xs:sequence>\n  </xs:complexType>\n\n  <xs:key name=\"PK\">\n    <xs:selector xpath=\"product\"/>\n    <xs:field xpath=\"gg_sku\"/>\n  </xs:key>\n</xs:element>\n\n<xs:element name=\"vendor\">\n  <xs:complexType>\n    <xs:sequence>\n     <xs:element name=\"vendor_name\" type=\"xs:string\" />\n\n     <xs:choice minOccurs=\"0\" maxOccurs=\"unbounded\">\n      <xs:element name=\"phone\"   type=\"xs:string\"/>\n      <xs:element name=\"fax\"     type=\"xs:string\"/>\n      <xs:element name=\"website\" type=\"xs:anyURI\"/>\n      <xs:element name=\"address\" type=\"AddressType\"/>\n      <xs:element name=\"email\"   type=\"xs:string\"/>\n     </xs:choice>\n\n     <xs:element ref=\"suite\"   minOccurs=\"0\" maxOccurs=\"unbounded\" />\n     <xs:element ref=\"product\" minOccurs=\"0\" maxOccurs=\"unbounded\" />\n    </xs:sequence>\n    <xs:attribute name=\"id\" type=\"xs:ID\" use=\"required\" />\n  </xs:complexType>\n</xs:element>\n\n<xs:element name=\"suite\">\n  <xs:complexType>\n    <xs:sequence>\n\t <xs:group   ref=\"skuData\" />\n     <xs:element ref=\"product\"   minOccurs=\"0\" maxOccurs=\"unbounded\" />\n    </xs:sequence>\n  </xs:complexType>\n</xs:element>\n\n<xs:element name=\"product\">\n  <xs:complexType>\n    <xs:sequence>\n     <xs:element name=\"gg_sku\" type=\"GG_SKU\" />\n\t <xs:group   ref=\"skuData\" />\n     <xs:element ref=\"version\"   minOccurs=\"0\" maxOccurs=\"unbounded\" />\n    </xs:sequence>\n  </xs:complexType>\n</xs:element>\n\n<xs:element name=\"version\">\n  <xs:complexType>\n    <xs:sequence>\n\t <xs:group  ref=\"skuData\" />\n    </xs:sequence>\n  </xs:complexType>\n</xs:element>\n\n<!-- GROUP definitions -->\n\n<xs:group name=\"skuData\">\n   <xs:sequence>\n     <xs:element name=\"vendor_sku\" type=\"xs:string\" minOccurs=\"0\" maxOccurs=\"1\" />\n     <xs:element name=\"short_desc\" type=\"xs:string\" />\n     <xs:element name=\"long_desc\"  type=\"xs:string\" minOccurs=\"0\" maxOccurs=\"1\" />\n     <xs:element ref=\"price\"     minOccurs=\"0\" maxOccurs=\"unbounded\" />\n     <xs:element ref=\"inventory\" minOccurs=\"0\" maxOccurs=\"unbounded\" />\n   </xs:sequence>\n</xs:group>\n\n<!-- \"primitive\" definitions that are referenced above -->\n\n<xs:element name=\"price\">\n  <xs:complexType>\n    <xs:simpleContent>\n\t<xs:extension base=\"MoneyType\">\n      <xs:attribute name=\"type\" type=\"PriceType\" default=\"retail\" />\n\t</xs:extension>\n\t</xs:simpleContent>\n  </xs:complexType>\n</xs:element>\n\n<xs:element name=\"inventory\">\n  <xs:complexType>\n    <xs:simpleContent>\n\t<xs:extension base=\"xs:integer\">\n      <xs:attribute name=\"location\" type=\"LocationType\" default=\"showroom\" />\n\t</xs:extension>\n\t</xs:simpleContent>\n  </xs:complexType>\n</xs:element>\n\n<xs:simpleType name=\"PriceType\">\n <xs:restriction base=\"xs:NMTOKEN\">\n     <xs:enumeration value=\"cost\"/>\n     <xs:enumeration value=\"sale\"/>\n     <xs:enumeration value=\"retail\"/>\n </xs:restriction>\n</xs:simpleType>\n\n<xs:simpleType name=\"LocationType\">\n <xs:restriction base=\"xs:NMTOKEN\">\n     <xs:enumeration value=\"warehouse\"/>\n     <xs:enumeration value=\"showroom\"/>\n </xs:restriction>\n</xs:simpleType>\n\n<xs:simpleType name=\"GG_SKU\">\n   <xs:restriction base=\"xs:string\">\n     <xs:pattern value=\"GG\\d{3}\"/>\n   </xs:restriction>\n</xs:simpleType>\n\n<xs:complexType name=\"AddressType\">\n   <xs:attribute name=\"state\"  type=\"xs:string\"/>\n   <xs:attribute name=\"city\"   type=\"xs:string\"/>\n   <xs:attribute name=\"zip\"    type=\"xs:decimal\"/>\n   <xs:attribute name=\"street\" type=\"xs:string\"/>\n</xs:complexType>\n\n<xs:simpleType name=\"MoneyType\">\n    <xs:restriction base=\"xs:string\">\n        <xs:pattern value=\"\\p{Sc}?\\p{Nd}+(\\.\\p{Nd}\\p{Nd})?\"/>\n    </xs:restriction>\n</xs:simpleType>\n\n</xs:schema>", "id": 10509, "time": "2002-02-09T23:18:44Z", "creator": "apache@polyglotinc.com", "creation_time": "2002-02-09T23:18:44Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 6344, "attachment_id": null, "id": 10510, "time": "2002-02-09T23:20:38Z", "creator": "apache@polyglotinc.com", "creation_time": "2002-02-09T23:20:38Z", "is_private": false, "text": "...and yes, I used the -v flag..."}, {"count": 2, "tags": [], "bug_id": 6344, "attachment_id": null, "text": "The problem actually lies in the schema; the <key> never matches anything \nbecause the value of the <selector> isn't quite right.  You have <selector \nxpath=\"product\"/>; this sill only match product element appearing as direct \nchildren of the <products_by_vendor> element.  But <product> element are \nchildren of <vendor> elements; so your celector needs to be <selector \nxpath=\"vendor/product\"/> or <selector xpath=\"**/product\"/> depending on how \nflexible you want to be.  Either of these work with xerces 1.4.4 or xerces \n2.0.0.\n\nIt might be nice if there was a way to have Xerces tell you whether your \nIdentity constraint xpath's *could* match given the declared content models; \nbut that's not functionality we have yet...", "id": 10546, "time": "2002-02-11T15:19:46Z", "creator": "neilg@ca.ibm.com", "creation_time": "2002-02-11T15:19:46Z", "is_private": false}]