[{"count": 0, "tags": [], "text": "Our application sends requests to a servlet in the form of serialized Java \nobjects. The application works fine using Apache JServ (used during \ndevelopment). When we came to deploy on Tomcat, I found that certain requests \ncaused the servlet to hang while reading the request. That is it read some of \nthe request then just stopped and no exception was thrown. This caused the \nclient to hang within the getInputStream method of the URLConnection used to \nread the servlet response. This problem occurs consistently every time we run \nthe application.\n\n\nI narrowed the problem down intially to when the request contained a serialized \njava.util.Locale object. I further narrowed it down to the byte sequence (hex) \nFF FF FF FF that happens to be contained within a serialized Locale object. If \nthis byte sequence is overwritten with 00 00 00 00 before the request is sent, \nit is read without a problem.\n\nWhy is this byte sequence significant in a binary stream? \n\nThe following test servlet and client code illustrates the problem:\n\nIf you comment out the line \"out.write(new byte[]{(byte)0xFF, (byte)0xFF, (byte)\n0xFF, (byte)0xFF});\" from Test.java, the servlet reads the request without a \nproblem.\n\n\n///////////////////////////\n// TestServlet.java //\n///////////////////////////\n\nimport java.io.*;\nimport java.util.*;\nimport java.net.*;\nimport javax.servlet.*;\nimport javax.servlet.http.*;\n\n/**\n*/\npublic class TestServlet extends HttpServlet  {\n\n   public void init(ServletConfig config) throws ServletException {\n       super.init(config);\n   }\n\n   public void destroy() {\n   }\n\n\n   public void doPost (HttpServletRequest httpRequest, HttpServletResponse \nhttpResponse)\n                       throws ServletException, IOException {\n       try {\n           byte [] data = new byte[1000];\n           int count, total = 0;\n           log(\"Open input stream\");\n           InputStream in = httpRequest.getInputStream();\n\n           while ((count = in.read(data)) != -1) {\n               log(\"read \" +  count + \" bytes\");\n               total += count;\n           }\n  \n           log(\"Total read = \" + total + \" bytes\");\n\n           OutputStream out = httpResponse.getOutputStream();\n           out.write((\"Received \" + total + \" bytes \").getBytes());\n           out.close();\n           log(\"Wrote response\");\n       } catch (IOException e) {\n           log(\"Caught IOException : \" + e);\n           throw e;\n       }\n   }\n\n}\n\n\n//////////////////\n// Test.java //\n/////////////////\n\nimport java.io.*;\nimport java.util.*;\nimport java.net.*;\n\n\npublic class Test  {\n\n   public static void sendRequest() {\n       try {\n           URL url = new URL(\"http://www.naxt.com/webapp/servlet/TestServlet\");\n           URLConnection urlc;\n\n           urlc = url.openConnection();\n           urlc.setUseCaches(false);\n           urlc.setAllowUserInteraction(true);\n           urlc.setDoOutput(true);\n\n           OutputStream out = urlc.getOutputStream();\n           System.out.println(\"about to write\");\n           out.write(new byte[2000]);\n           out.write(new byte[]{(byte)0xFF, (byte)0xFF, (byte)0xFF, (byte)\n0xFF});\n           out.write(new byte[2000]);\n           System.out.println(\"opening input\");\n           InputStream in = urlc.getInputStream();\n           System.out.println(\"about to read\");\n           ByteArrayOutputStream baos = new ByteArrayOutputStream();\n           int count;\n           byte [] data = new byte[512];\n           while ((count = in.read(data)) != -1) {\n               baos.write(data, 0, count);\n           }\n           baos.close();\n\n           out.close();\n           in.close();\n           System.out.println(\"Response : \" + new String(baos.toByteArray()));\n       } catch (Exception ex) {\n           ex.printStackTrace();\n       }\n   }\n\n\n   public static void main(String [] args) throws Exception {\n       sendRequest();\n   }\n}\n\n/////// end of file\n\n\nThe Test class uses a hard coded URL to the TestServlet on our web site. Please \nmodify this URL as required to test it elsewhere.", "attachment_id": null, "bug_id": 1174, "id": 1671, "time": "2001-04-01T16:02:41Z", "creator": "postmaster@naxt.com", "creation_time": "2001-04-01T16:02:41Z", "is_private": false}, {"count": 1, "tags": [], "text": "Strange, but I can't reproduce it on neither 3.2.2 nor 3.3. In both cases \nI get \"Received 4004 bytes\". It may be a bug that got fixed ( thanks Marc :-)\n\n", "is_private": false, "bug_id": 1174, "id": 1697, "time": "2001-04-02T16:26:24Z", "creator": "cmanolache@yahoo.com", "creation_time": "2001-04-02T16:26:24Z", "attachment_id": null}]