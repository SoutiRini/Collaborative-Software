[{"count": 0, "tags": [], "creator": "tivv@gtech-ua.com", "attachment_id": null, "text": "Request with mailformed URL causes NullPointerException.\nEx:\n213.37.14.93 - - [03/Jan/2003:19:36:05 2000] \"GET\n/scripts/..%c0%af../winnt/system32/cmd.exe?/c+dir HTTP/1.0\" 500 - \"-\" \"-\"\n\ncauses\n\n2003-01-03 19:36:05 StandardWrapperValve[default]: Servlet.service() for servlet\ndefault threw exception\njava.lang.NullPointerException\n        at java.io.File.<init>(File.java:263)\n        at org.apache.naming.resources.FileDirContext.file(FileDirContext.java:880)\n        at\norg.apache.naming.resources.FileDirContext.getAttributes(FileDirContext.java:487)\n        at\norg.apache.naming.resources.BaseDirContext.getAttributes(BaseDirContext.java:797)\n        at\norg.apache.naming.resources.ProxyDirContext.cacheLoad(ProxyDirContext.java:1462)\n        at\norg.apache.naming.resources.ProxyDirContext.cacheLookup(ProxyDirContext.java:1386)\n        at\norg.apache.naming.resources.ProxyDirContext.lookup(ProxyDirContext.java:293)\n        at\norg.apache.catalina.servlets.DefaultServlet$ResourceInfo.set(DefaultServlet.java:2267)\n        at\norg.apache.catalina.servlets.DefaultServlet$ResourceInfo.<init>(DefaultServlet.java:2219)\n        at\norg.apache.catalina.servlets.DefaultServlet.serveResource(DefaultServlet.java:921)\n        at\norg.apache.catalina.servlets.DefaultServlet.doGet(DefaultServlet.java:506)\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:740)\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:853)\n        at\norg.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:247)\n        at\norg.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:193)\n        at\norg.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:260)\n        at\norg.apache.catalina.core.StandardPipeline$StandardPipelineValveContext.invokeNext(StandardPipeline.java:643)\n        at\norg.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:480)\n        at org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:995)\n        at\norg.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)\n        at\norg.apache.catalina.core.StandardPipeline$StandardPipelineValveContext.invokeNext(StandardPipeline.java:643)\n        at\norg.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:480)\n        at org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:995)\n        at\norg.apache.catalina.core.StandardContext.invoke(StandardContext.java:2396)\n        at\norg.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:180)\n        at\norg.apache.catalina.core.StandardPipeline$StandardPipelineValveContext.invokeNext(StandardPipeline.java:643)\n        at\norg.apache.catalina.valves.ErrorDispatcherValve.invoke(ErrorDispatcherValve.java:170)\n        at\norg.apache.catalina.core.StandardPipeline$StandardPipelineValveContext.invokeNext(StandardPipeline.java:641)\n        at\norg.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:172)\n        at\norg.apache.catalina.core.StandardPipeline$StandardPipelineValveContext.invokeNext(StandardPipeline.java:641)\n        at org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:469)\n        at\norg.apache.catalina.core.StandardPipeline$StandardPipelineValveContext.invokeNext(StandardPipeline.java:641)\n        at\norg.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:480)\n        at org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:995)\n        at\norg.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:174)\n        at\norg.apache.catalina.core.StandardPipeline$StandardPipelineValveContext.invokeNext(StandardPipeline.java:643)\n        at\norg.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:480)\n        at org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:995)\n        at org.apache.coyote.tomcat4.CoyoteAdapter.service(CoyoteAdapter.java:223)\n        at\norg.apache.coyote.http11.Http11Processor.process(Http11Processor.java:405)\n        at\norg.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.processConnection(Http11Protocol.java:380)\n        at\norg.apache.tomcat.util.net.TcpWorkerThread.runIt(PoolTcpEndpoint.java:508)\n        at\norg.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run(ThreadPool.java:533)\n        at java.lang.Thread.run(Thread.java:536)", "id": 28872, "time": "2003-01-04T09:58:32Z", "bug_id": 15795, "creation_time": "2003-01-04T09:58:32Z", "is_private": false}, {"count": 1, "tags": [], "creator": "bolandb@comcast.net", "attachment_id": null, "is_private": false, "id": 34110, "time": "2003-03-29T18:49:55Z", "bug_id": 15795, "creation_time": "2003-03-29T18:49:55Z", "text": "I received this on 4.1.24 as well.\n\nThe problems comes from the fact that getRelativePath() called in serveResource\n() returns null (as it should) to indicate that the path is not valid since it \nattempts to go outside the \"boundaries of the current context\" as documented \ninthe normalize() method. But the return value is not examined and an or an \nexceptional course taken before it is passed to the constructor of the \nResourceInfo.\n\nSince these \"invalid\" URL paths are sourced from viruses or hackers, I would \nthink tomcat should respond by logging these and not by throwing a \nNullPointerException.\n\nHere's my log with some additional debugging turned on:\n2003-03-29 08:39:01 StandardHost[localhost]: Mapping request \nURI '/scripts/../../winnt/system32/cmd.exe'\n2003-03-29 08:39:01 StandardHost[localhost]:   Trying the longest context path \nprefix\n2003-03-29 08:39:01 StandardHost[localhost]:  Mapped to context ''\n2003-03-29 08:39:01 default: DefaultServlet.serveResource:  Serving \nresource 'null' headers and data\n2003-03-29 08:39:01 StandardWrapperValve[default]: Servlet.service() for \nservlet default threw exception\njava.lang.NullPointerException\n\tat java.io.File.<init>(File.java:258)\n\tat org.apache.naming.resources.FileDirContext.file\n(FileDirContext.java:880)\n\tat org.apache.naming.resources.FileDirContext.getAttributes\n(FileDirContext.java:487)\n\tat org.apache.naming.resources.BaseDirContext.getAttributes\n(BaseDirContext.java:797)\n\tat org.apache.naming.resources.ProxyDirContext.cacheLoad\n(ProxyDirContext.java:1491)\n\tat org.apache.naming.resources.ProxyDirContext.cacheLookup\n(ProxyDirContext.java:1412)\n\tat org.apache.naming.resources.ProxyDirContext.lookup\n(ProxyDirContext.java:300)\n\tat org.apache.catalina.servlets.DefaultServlet$ResourceInfo.set\n(DefaultServlet.java:2267)\n\tat org.apache.catalina.servlets.DefaultServlet$ResourceInfo.<init>\n(DefaultServlet.java:2219)\n\tat org.apache.catalina.servlets.DefaultServlet.serveResource\n(DefaultServlet.java:921)\n\tat org.apache.catalina.servlets.DefaultServlet.doGet\n(DefaultServlet.java:506)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:740)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:853)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter\n(ApplicationFilterChain.java:247)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter\n(ApplicationFilterChain.java:193)\n\tat org.apache.catalina.core.StandardWrapperValve.invoke\n(StandardWrapperValve.java:256)\n\tat \norg.apache.catalina.core.StandardPipeline$StandardPipelineValveContext.invokeNe\nxt(StandardPipeline.java:643)\n\tat org.apache.catalina.core.StandardPipeline.invoke\n(StandardPipeline.java:480)\n\tat org.apache.catalina.core.ContainerBase.invoke\n(ContainerBase.java:995)\n\tat org.apache.catalina.core.StandardContextValve.invoke\n(StandardContextValve.java:191)\n\tat \norg.apache.catalina.core.StandardPipeline$StandardPipelineValveContext.invokeNe\nxt(StandardPipeline.java:643)\n\tat org.apache.catalina.core.StandardPipeline.invoke\n(StandardPipeline.java:480)\n\tat org.apache.catalina.core.ContainerBase.invoke\n(ContainerBase.java:995)\n\tat org.apache.catalina.core.StandardContext.invoke\n(StandardContext.java:2415)\n\tat org.apache.catalina.core.StandardHostValve.invoke\n(StandardHostValve.java:180)\n\tat \norg.apache.catalina.core.StandardPipeline$StandardPipelineValveContext.invokeNe\nxt(StandardPipeline.java:643)\n\tat org.apache.catalina.valves.ErrorDispatcherValve.invoke\n(ErrorDispatcherValve.java:171)\n\tat \norg.apache.catalina.core.StandardPipeline$StandardPipelineValveContext.invokeNe\nxt(StandardPipeline.java:641)\n\tat org.apache.catalina.valves.ErrorReportValve.invoke\n(ErrorReportValve.java:172)\n\tat \norg.apache.catalina.core.StandardPipeline$StandardPipelineValveContext.invokeNe\nxt(StandardPipeline.java:641)\n\tat org.apache.catalina.core.StandardPipeline.invoke\n(StandardPipeline.java:480)\n\tat org.apache.catalina.core.ContainerBase.invoke\n(ContainerBase.java:995)\n\tat org.apache.catalina.core.StandardEngineValve.invoke\n(StandardEngineValve.java:174)\n\tat \norg.apache.catalina.core.StandardPipeline$StandardPipelineValveContext.invokeNe\nxt(StandardPipeline.java:643)\n\tat org.apache.catalina.core.StandardPipeline.invoke\n(StandardPipeline.java:480)\n\tat org.apache.catalina.core.ContainerBase.invoke\n(ContainerBase.java:995)\n\tat org.apache.coyote.tomcat4.CoyoteAdapter.service\n(CoyoteAdapter.java:223)\n\tat org.apache.coyote.http11.Http11Processor.process\n(Http11Processor.java:594)\n\tat \norg.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.processConnecti\non(Http11Protocol.java:392)\n\tat org.apache.tomcat.util.net.TcpWorkerThread.runIt\n(PoolTcpEndpoint.java:565)\n\tat org.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run\n(ThreadPool.java:619)\n\tat java.lang.Thread.run(Thread.java:479)\n\n"}, {"attachment_id": null, "tags": [], "creator": "ian.sollars@gmx.net", "is_private": false, "count": 2, "id": 40259, "time": "2003-07-09T14:06:40Z", "bug_id": 15795, "creation_time": "2003-07-09T14:06:40Z", "text": "I have the same thing with the exact same stacktrace.\n\nI think the problem is in FileDirContext.java. The javadoc for \nFileDirContext.file(String name) says it should return null if !(file.exists() \n&& file.canRead()). However, before it does that test it calls File(String \nbase, String name) without checking for a null argument on name. File then does \nthis:\n\n    public File(File parent, String child) {\n//!!        -->              ^^unchecked null\n        if (child == null) {\n            throw new NullPointerException();\n        }\n        \n        ...\n\nMy quick suggestion for a fix is this, at FileDirContext.java:879:\n\n        if(name == null) return null;\n\nThis should stop Catalina from throwing NullPointers for borken URLs and bring \nthe behaviour inline with the javadoc comment. Whether there's another method \nthat is returning null when it shouldn't, I haven't checked.\n"}, {"count": 3, "tags": [], "text": "This works for me with the latest (from CVS) version of TC4. I get a 404 in \nresponse.", "is_private": false, "bug_id": 15795, "id": 57026, "time": "2004-05-08T15:22:02Z", "creator": "markt@apache.org", "creation_time": "2004-05-08T15:22:02Z", "attachment_id": null}]