[{"count": 0, "tags": [], "bug_id": 23696, "attachment_id": null, "text": "In JUnitTestRunner there is this code that finds methods:\n\n            try {\n                // check if there is a suite method\n                suiteMethod = testClass.getMethod(\"suite\", new Class[0]);\n            } catch (Exception e) {\n                // no appropriate suite method found. We don't report any\n                // error here since it might be perfectly normal. We don't\n                // know exactly what is the cause, but we're doing exactly\n                // the same as JUnit TestRunner do. We swallow the exceptions.\n            }\n\nthe catch also catches an java.lang.ExceptionInInitializerError, which is just\ntrashed. When the class is accessed again later on in TestSuite, you get a\nNoClassDefFoundError, leaving you completely in the dark about the cause of the\nproblem. I think the catch should just catch NoSuchMethodError, and let other\nExceptions propagate.", "id": 45277, "time": "2003-10-09T12:20:52Z", "creator": "ssegers@kiala.com", "creation_time": "2003-10-09T12:20:52Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 23696, "attachment_id": null, "text": "I think this is the explanation for Bug 23033\n\n*** This bug has been marked as a duplicate of 23033 ***", "id": 45364, "time": "2003-10-10T13:45:13Z", "creator": "bodewig@apache.org", "creation_time": "2003-10-10T13:45:13Z", "is_private": false}]