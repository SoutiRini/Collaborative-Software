[{"count": 0, "tags": [], "bug_id": 61932, "attachment_id": null, "id": 202927, "time": "2017-12-27T07:36:57Z", "creator": "chanjarster@gmail.com", "creation_time": "2017-12-27T07:36:57Z", "is_private": false, "text": "Tomcat throws below exception when I use ReadListener and call AsyncContext.dispatch(\"/url\") in another thread.\n\nDec 27, 2017 3:35:46 PM org.apache.coyote.AbstractProtocol$ConnectionHandler process\n\u4e25\u91cd: Error reading request, ignored\njava.lang.IllegalStateException: Calling [asyncOperation()] is not valid for a request with Async state [DISPATCHING]\n\tat org.apache.coyote.AsyncStateMachine.asyncOperation(AsyncStateMachine.java:253)\n\tat org.apache.coyote.AbstractProcessor.dispatchNonBlockingRead(AbstractProcessor.java:505)\n\tat org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:200)\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\n\tat java.lang.Thread.run(Thread.java:748)\n\nDec 27, 2017 3:35:46 PM org.apache.catalina.connector.CoyoteAdapter checkRecycled\n\u4fe1\u606f: Encountered a non-recycled request and recycled it forcedly.\norg.apache.catalina.connector.CoyoteAdapter$RecycleRequiredException\n\tat org.apache.catalina.connector.CoyoteAdapter.checkRecycled(CoyoteAdapter.java:501)\n\tat org.apache.coyote.http11.Http11Processor.recycle(Http11Processor.java:1707)\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.release(AbstractProtocol.java:972)\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:940)\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\n\tat java.lang.Thread.run(Thread.java:748)\n\nBelow is the code for reproducing the bug:\n\n\n@WebServlet(value = \"/async-read2\", asyncSupported = true)\npublic class AsyncReadServlet2 extends HttpServlet {\n\n  @Override\n  protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n\n    AsyncContext asyncCtx = req.startAsync();\n    ServletInputStream is = req.getInputStream();\n    is.setReadListener(new ReadListener() {\n\n      @Override\n      public void onDataAvailable() {\n\n        try {\n          byte buffer[] = new byte[1 * 1024];\n          while (is.isReady() && !is.isFinished()) {\n            int length = is.read(buffer);\n            if (length == -1 && is.isFinished()) {\n              return;\n            }\n\n          }\n\n        } catch (IOException ex) {\n          ex.printStackTrace();\n        }\n      }\n\n      @Override\n      public void onAllDataRead() {\n      }\n\n      @Override\n      public void onError(Throwable t) {\n      }\n    });\n\n    new Thread(() -> {\n      try {\n        Thread.sleep(10000L);\n      } catch (InterruptedException e) {\n        e.printStackTrace();\n      }\n      asyncCtx.dispatch(\"/error\");\n    }).start();\n\n  }\n\n}"}, {"count": 1, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "text": "I'm planning on taking a look at this today. Does the client need to do anything to trigger this or is a simple POST sufficient? I'll try the simple POST but if there is more to it it would be helpful to know what that is.", "id": 203041, "time": "2018-01-03T14:15:33Z", "bug_id": 61932, "creation_time": "2018-01-03T14:15:33Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 61932, "attachment_id": null, "id": 203048, "time": "2018-01-03T20:55:57Z", "creator": "markt@apache.org", "creation_time": "2018-01-03T20:55:57Z", "is_private": false, "text": "Thanks for the report and the test case. Bug reports are so much easier to work with when good test cases like this one are provided.\n\nI adapted the provided Servlet into a Tomcat test case. The main change was to fix the potential timing issues (some of our CI systems can be randomly slow during test runs) by using a latch to trigger the dispatch rather than a fixed wait time.\n\nThere was a Tomcat bug here that I have fixed.\n\nFixed in:\n- trunk for 9.0.3 onwards\n- 8.5.x for 8.5.25 onwards\n- 8.0.x for 8.0.49 onwards\n\n7.0.x was not affected as Servlet 3.0 does not support non-blocking I/O."}, {"count": 3, "attachment_id": null, "creator": "chanjarster@gmail.com", "text": "(In reply to Mark Thomas from comment #1)\n> I'm planning on taking a look at this today. Does the client need to do\n> anything to trigger this or is a simple POST sufficient? I'll try the simple\n> POST but if there is more to it it would be helpful to know what that is.\n\nYes, I missed mention that I used a curl command with slow speed simulation:\n\ncurl -X POST -F \"bigfile=@somefile\" --limit-rate 5k http://localhost:8080/async-read2", "id": 203054, "time": "2018-01-04T01:44:54Z", "bug_id": 61932, "creation_time": "2018-01-04T01:44:54Z", "tags": [], "is_private": false}]