[{"count": 0, "tags": [], "creator": "david@hackerdude.com", "is_private": false, "text": "Most of the time, copying code and pasting it into the beanshell script areas does not work. Pasting \ncontent then using control-S to save makes the content get cleared immediately. Pasting content then \nrunning the script uses the old content. Making small changes to the content then saving also keeps \nthe old content.\n\nIt's annoying because It's much easier to use an editor without proper syntax highlighting, completion, \netcetera (especially since most of JMeter's beanshell nodes do not support just making reference to a \nfile, but that's a request for another day).\nThis makes it impossible to use any editor other than the jmeter included editor (and even then small \nedits are usually lost). I'm much more productive in (insert actual programmer's editor here).\n\nTo reproduce, try this:\n1. Add a beanshell postprocessor\n2. Type \"See me dissapear!\" in the Script: Area\n3. WIthout moving focus away, press Control-S to save.\n\nExpected: The text does not dissapear.\nActual: Text dissapears\n\nAs a workaround you can move away to another node then come back. But THIS DOES NOT ALWAYS \nWORK on longer scripts for some reason.", "id": 105808, "time": "2007-07-20T14:16:58Z", "bug_id": 42947, "creation_time": "2007-07-20T14:16:58Z", "attachment_id": null}, {"count": 1, "tags": [], "creator": "scott.marlowe@gmail.com", "text": "Note that I get the exact same goofy and unpredictable behaviour when editing a\nregular expression dialog in a regex postprocessor.  The text is in the box, but\nwhen I hit run, jmeter doesn't actually run, and when I click out of the dialog\nand back in, my old regex is there staring back at me, laughing.\n\nUsing Jmeter 2.3RC3", "id": 106804, "time": "2007-08-15T14:09:38Z", "bug_id": 42947, "creation_time": "2007-08-15T14:09:38Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 42947, "attachment_id": null, "id": 106889, "time": "2007-08-18T10:08:45Z", "creator": "sebb@apache.org", "creation_time": "2007-08-18T10:08:45Z", "is_private": false, "text": "It appears that using Control+S to save a test plan has always been broken for \nGUI items that use TestBeanGUI. \n\nFor example, using CSV Dataset: enter a value in the filename field, and save \nthe plan using control+S. Exit and reload the plan - the value has not been \nsaved.\n\nThe difference in 2.3RC3 is that this behaviour has become obvious, as the \nsaved version is now reflected in the GUI.\n\nThe same problem applies to other short-cut keys such as Control+R.\n\nNormally the value in the GUI field is saved whenever there is a focus-lost \nevent however this does not happen for short-cut keys."}, {"count": 3, "tags": [], "bug_id": 42947, "attachment_id": null, "id": 107413, "time": "2007-08-29T11:40:35Z", "creator": "alf@i100.no", "creation_time": "2007-08-29T11:40:35Z", "is_private": false, "text": "(In reply to comment #2)\n> It appears that using Control+S to save a test plan has always been broken for \n> GUI items that use TestBeanGUI. \n> \n> For example, using CSV Dataset: enter a value in the filename field, and save \n> the plan using control+S. Exit and reload the plan - the value has not been \n> saved.\n> \n> The difference in 2.3RC3 is that this behaviour has become obvious, as the \n> saved version is now reflected in the GUI.\n> \n> The same problem applies to other short-cut keys such as Control+R.\n> \n> Normally the value in the GUI field is saved whenever there is a focus-lost \n> event however this does not happen for short-cut keys.\n\nThe problem seems to be that the \"propertyChange\" event for the PropertyEditor\nin the TestBeanGui is not fired until after the changes have been stored. If you\nchange the comment of the BeanShell Postprocessor and hit Ctrl+S, that change is\nsaved.\n\nThe problem is that the PropertyChange events have not been processed before the    \nTestBeanGui.modifyTestElement method is moving changes from gui to model.\nTherefore, the changes are not saved.\n\nI do not see an easy fix at the moment, will have to investigate more on how the\n java PropertyEditor works in conjunction with keyboard shortcuts."}, {"count": 4, "tags": [], "creator": "alf@i100.no", "is_private": false, "text": "(In reply to comment #1)\n> Note that I get the exact same goofy and unpredictable behaviour when editing a\n> regular expression dialog in a regex postprocessor.  The text is in the box, but\n> when I hit run, jmeter doesn't actually run, and when I click out of the dialog\n> and back in, my old regex is there staring back at me, laughing.\n> \n> Using Jmeter 2.3RC3\n\nI think you are in fact observing bug 43122, which I have just made a patch for. ", "id": 107416, "time": "2007-08-29T12:00:01Z", "bug_id": 42947, "creation_time": "2007-08-29T12:00:01Z", "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 42947, "attachment_id": null, "is_private": false, "id": 107520, "time": "2007-08-30T16:58:43Z", "creator": "sebb@apache.org", "creation_time": "2007-08-30T16:58:43Z", "text": "Added code to TestBeanGUI.modifyTestElement() to copy the values of the fields \nfrom the GUI.\n\nApplied to SVN in r571348."}, {"count": 6, "attachment_id": null, "creator": "sebb@apache.org", "text": "There was a slight problem with the previous fix - only one change was saved, \nas there was a return in the loop.\n\nThis has been corrected in r571407.\n\nBTW, I looked into propertyChange events - the event was not being fired for \nshort-cut keys. This appears to be a feature of Swing/AWT.\n\nThe propertyChange code became redundant; now both TestBeanGUI and other GUI \nclasses save the field contents in modifyTestElement().", "id": 107529, "time": "2007-08-31T02:37:52Z", "bug_id": 42947, "creation_time": "2007-08-31T02:37:52Z", "tags": [], "is_private": false}]