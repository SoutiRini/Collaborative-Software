[{"count": 0, "tags": [], "bug_id": 51132, "attachment_id": 26941, "text": "Created attachment 26941\nnginx and tomcat's access log and some screenshots\n\nsometimes we use the nginx for load balancing. when send a GET request to http://127.0.0.1/g/..;/examples/ \nthe nginx will not process \"..;/\" contained in the request URL,and forward the request to the real http server such as tomcat or resin.\nif the url contains semicolon \";\" ,resin will show a message like that \"The request contains an illegal URL.\".but tomcat will ignore the semicolon,and response the resource that we requested.\nthe problem is if nginx has a rule that just forward request URL which start with /g/ then the URL \"/g/../examples/\" would not be forwarded to tomcat; but the URL like this one \"/g/..;/examples/\" ,nginx will forward the request and tomcat will treat it as normal URL,then the examples will be accessed.\nwe don't hope that the tomcat response the resource which is not allowed;\nthe attachment contains the nginx and tomcat's log and some screenshot;", "id": 146029, "time": "2011-04-28T05:44:57Z", "creator": "mmsssmm1@gmail.com", "creation_time": "2011-04-28T05:44:57Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 51132, "text": "This took a little digging and some discussion with some httpd folks who are more familiar with the specs that I am but the conclusion is that Tomcat's behaviour is correct.\n\nrfc3986 defines dot segments as exactly \"..\" or \".\". This means \"..;\" is not a dot segment. Further rfc3986 states that interpretation of path parameters is an application concern. Therefore, nginx is correctly normalising when \"..\" is present and correctly forwarding \"..;\" to the application.\n\nrfc2616 does not add anything in this case beyond what is in rfc3986.\n\nThe Servlet specification states that path parameters are ignored when mapping requests. Therefore \"..;\" gets treated \"..\" for mapping purposes meaning \"/g/..;/examples\" gets treated as \"/g/../examples\" for mapping which is normalised to \"/examples\".\n\nResin's error response is not specification compliant.\n\nTomcat is correctly serving the examples context in this case.\n\nThis issue is a good example of why relying solely on the mappings of a reverse proxy to deny access to a particular context is likely to be insecure. Due to the impossibility to guarantee that all URLs are handled by Tomcat as they are in proxy servers, Tomcat should always be secured as if no proxy restricting context access was used.", "id": 146049, "time": "2011-04-30T19:00:30Z", "creator": "markt@apache.org", "creation_time": "2011-04-30T19:00:30Z", "is_private": false, "attachment_id": null}]