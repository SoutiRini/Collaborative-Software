[{"count": 0, "tags": [], "creator": "martin@lavv.us", "attachment_id": null, "id": 164280, "time": "2012-12-29T20:12:02Z", "bug_id": 54359, "creation_time": "2012-12-29T20:12:02Z", "is_private": false, "text": "When a HTTPS request to Apache generates a 404 Not Found error, the response body will contain an <address> element referencing port 80:\n\n\n$ curl https://httpd.apache.org/smurrefluts\n<!DOCTYPE HTML PUBLIC \"-//IETF//DTD HTML 2.0//EN\">\n<html><head>\n<title>404 Not Found</title>\n</head><body>\n<h1>Not Found</h1>\n<p>The requested URL /smurrefluts was not found on this server.</p>\n<hr>\n<address>Apache/2.4.3 (Unix) OpenSSL/1.0.0g Server at httpd.apache.org Port 80</address>\n</body></html>\n$\n\nThe expected response body should reference port 443, I'd think.\n\nI can reproduce this on Linux and OS X with Apache 2.2.23 and 2.4.3."}, {"count": 1, "tags": [], "bug_id": 54359, "attachment_id": null, "is_private": false, "id": 164316, "time": "2013-01-02T13:37:34Z", "creator": "asfbugz@velox.ch", "creation_time": "2013-01-02T13:37:34Z", "text": "(In reply to comment #0)\n> When a HTTPS request to Apache generates a 404 Not Found error, the response\n> body will contain an <address> element referencing port 80:\n> \n> \n> $ curl https://httpd.apache.org/smurrefluts\n\nAre you reporting this as an issue of httpd.apache.org, specifically?\n\nNote that most (all?) SSL-protected websites under .apache.org are reverse proxied (either via eos.apache.org or aurora.apache.org), and the sites themselves are usually accessed over HTTP on port 80. That's why the footer reports \"Port 80\", even though you access eos/aurora via port 443."}, {"count": 2, "tags": [], "creator": "martin@lavv.us", "attachment_id": null, "id": 164324, "time": "2013-01-02T19:16:45Z", "bug_id": 54359, "creation_time": "2013-01-02T19:16:45Z", "is_private": false, "text": "> Are you reporting this as an issue of httpd.apache.org, specifically?\n\nNo, not really. I ran into this while debugging an issue I have with a Rack application. But I thought to demonstrate it with httpd.apache.org since that would presumably sidestep a lot of questions about my specific setup.\n\nIn my setup a Rack application runs on localhost and listens at port 9002, I am using Apache on the front end for HTTPS requests which are then forwarded via HTTP using ProxyPass(Reverse) to that port 9002.\n\nIn my case, for almost all of the proxy'ed requests this works like a charm, except for PUTs which generate a 404 Not Found and list port 80 even though it are HTTPS requests proxy'ed to 9002. I would therefore expect the port to be listed either as 443 or 9002, port 80 does not really make sense.\n\nAll configuration is in a VirtualHost, something like this:\n\n<VirtualHost host.example.com:443>\nServerName host.example.com\nProxyRequests Off\nProxyPreserveHost On\nProxyPass / http://localhost:9002/\nProxyPassReverse / http://localhost:9002/\n\nSetEnvIf Host \"([^:]*):?.*\" MY_HTTP_HOST=$1\nRequestHeader set Host \"%{MY_HTTP_HOST}e\"\n\nSetEnvIf X-Forwarded-Proto \".*\" MY_HTTP_PROTO=https\nRequestHeader set X-Forwarded-Proto \"%{MY_HTTP_PROTO}e\"\n\nSetEnvIf X-Forwarded-Port \".*\" MY_HTTP_PORT=443\nRequestHeader set X-Forwarded-Port \"%{MY_HTTP_PORT}e\"\n\n#RequestHeader set X-Forwarded-Proto https\n#RequestHeader set X-Forwarded-Port 443\n#RequestHeader set Host host.example.com\n\nCustomLog logs/ssl_request_log \\\n          \"%v %t %h %{SSL_PROTOCOL}x %{SSL_CIPHER}x \\\"%r\\\" %b\\nLocal IP-address:\n %A\\nEnv. MY_HTTP_HOST: %{MY_HTTP_HOST}e\\nHost: %{Host}i\\nEnv. MY_HTTP_PROTO: %{\nMY_HTTP_PROTO}e\\nX-Forwarded-Proto: %{X-Forwarded-Proto}i\\nEnv. MY_HTTP_PORT: %{\nMY_HTTP_PORT}e\\nX-Forwarded-Port: %{X-Forwarded-Port}i\\nRequest method: %m\\nQuer\ny string: %q\\nFirst line of request: %r\\nStatus: %s\\nStatus (final): %>s\"\n\n</VirtualHost>\n\nThe Rack application requires the Host, X-Forwarded-Proto and X-Forwarded-Port headers to be set correctly, hence the above SetEnvIf trickery. The commented out RequestHeader directives were not working correctly in all cases. Using the CustomLog directive as listed I can verify that all those headers are indeed set correctly, also in the case of the PUTs which result in the 404 Not Found.\n\nI have put the status of this issue back in NEW, I hope that is okay after providing the above information."}, {"count": 3, "tags": [], "bug_id": 54359, "attachment_id": null, "id": 164335, "time": "2013-01-02T21:45:08Z", "creator": "martin@lavv.us", "creation_time": "2013-01-02T21:45:08Z", "is_private": false, "text": "I have just now found out that the issue with my specific setup lies with the AllowEncodedSlashes directive.\n\nBecause the default is \"AllowEncodedSlashes Off\" the following happens:\n\n[Wed Jan 02 21:41:27 2013] [info] Initial (No.1) HTTPS request received for child 6 (server host.example.com:80)\n[Wed Jan 02 21:41:27 2013] [info] [client 10.0.0.253] found %2f (encoded '/') in URI (decoded='/smurrefluts/https://obscured/for/reasons'), returning 404\n\nAnd therefore I am never seeing the proxy'ed request.\n\nNevertheless, I think it is extremely  confusing to get a 404 Not Found referencing port 80 when doing HTTPS requests, doubly so in my case where I am proxy-ing to port 9002 and port 80 is nowhere used.\n\nThank you all for the awesome work done by Apache and for the httpd project specifically, feel free to pursue this report or not."}, {"count": 4, "tags": [], "creator": "asfbugz@velox.ch", "attachment_id": null, "id": 164345, "time": "2013-01-03T07:40:06Z", "bug_id": 54359, "creation_time": "2013-01-03T07:40:06Z", "is_private": false, "text": "(In reply to comment #2)\n> In my case, for almost all of the proxy'ed requests this works like a charm,\n> except for PUTs which generate a 404 Not Found and list port 80 even though\n> it are HTTPS requests proxy'ed to 9002. I would therefore expect the port to\n> be listed either as 443 or 9002, port 80 does not really make sense.\n\n(In reply to comment #3)\n> Nevertheless, I think it is extremely  confusing to get a 404 Not Found\n> referencing port 80 when doing HTTPS requests, doubly so in my case where I\n> am proxy-ing to port 9002 and port 80 is nowhere used.\n\nWhat are the ServerName, UseCanonicalName and UseCanonicalPhysicalPort settings for the VirtualHost running on port 9002? You might have to tweak these settings to get the desired behavior, see http://httpd.apache.org/docs/2.4/mod/core.html#usecanonicalphysicalport."}, {"count": 5, "tags": [], "bug_id": 54359, "attachment_id": null, "id": 164598, "time": "2013-01-12T11:26:52Z", "creator": "martin@lavv.us", "creation_time": "2013-01-12T11:26:52Z", "is_private": false, "text": "Kaspar, thanks for the pointer to UseCanonicalPhysicalPort!\n\nSetting \"UseCanonicalPhysicalPort On\" for the VirtualHost ensures that the 404 Not Found references port 443 instead of 80.\n\nI guess this issue can be marked RESOLVED?"}, {"count": 6, "attachment_id": null, "creator": "asfbugz@velox.ch", "is_private": false, "id": 164656, "time": "2013-01-16T06:47:37Z", "bug_id": 54359, "creation_time": "2013-01-16T06:47:37Z", "tags": [], "text": "(In reply to comment #5)\n> Setting \"UseCanonicalPhysicalPort On\" for the VirtualHost ensures that the\n> 404 Not Found references port 443 instead of 80.\n> \n> I guess this issue can be marked RESOLVED?\n\nYes."}]