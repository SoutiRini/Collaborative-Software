[{"count": 0, "tags": [], "creator": "tixu@cs.ucsd.edu", "attachment_id": null, "id": 154819, "time": "2012-03-12T09:51:21Z", "bug_id": 52884, "creation_time": "2012-03-12T09:51:21Z", "is_private": false, "text": "On my computer (Ubuntu 10.04), when listening to \"localhost:port\" like\n\nListen localhost:80\n\nApache-httpd will report the following error and fail to start with the following error messages:\n\n(98)Address already in use: AH00072: make_sock: could not bind to address 127.0.0.1:80\nno listening sockets available, shutting down\nAH00015: Unable to open logs\n\nThis error message is very confusing because 127.0.0.1:80 is not being used at all. Interestingly, if you directly change localhost to 127.0.0.1, i.e., \n\nListen 127.0.0.1:80\n\nThen, everything is fine.\n\nBy tracing the code, I find the root cause is that the bind() operation is done for two times. And, of course, it failed at the 2nd time because the 1st time it had successed.\n\nFurther tracing why it bind() two times, I finally find that it's because of the function call getaddrinfo() in the function: call_resolver() in srclib/apr/network_io/unix/sockaddr.c\n\nWhen fed with \"localhost\", the result set, i.e., ai_list will have two elements. Thus, Apache tries to bind() based on these two elements and leads to the failure. However, it only has one element when fed with \"127.0.0.1\". I have to say this is really a strange behavior.\n\nI don't know whether this problem happens on the other platform. But if it happens, it really confuses users a lot and takes a lot of time and efforts.\n\nOne simple solution is to add a patch that transfer \"localhost\" to \"127.0.0.1\" directly in ap_set_listener() in server/listen.c\n\nThanks!"}, {"count": 1, "tags": [], "bug_id": 52884, "attachment_id": null, "id": 154823, "time": "2012-03-12T10:03:56Z", "creator": "sf@sfritsch.de", "creation_time": "2012-03-12T10:03:56Z", "is_private": false, "text": "This may be related to PR 52709 in APR."}, {"count": 2, "tags": [], "text": "(In reply to comment #1)\n> This may be related to PR 52709 in APR.\n\nThanks, Stefan!\n\nBut it seems different with my case. Their case is because of \"eth0 as only IPv6\". \n\nI checked my network configuration. I have both IPv4 & IPv6 for my eth0. I suspected this problem is caused by the IPv6 stuff, but I tested on my colleague's machine which also has IPv4 & IPv6. On his machine, this problem didn't exist.\n\nHmmm... it's really a strange problem...:( Maybe I should go to bugzilla APR?", "attachment_id": null, "id": 154861, "creator": "tixu@cs.ucsd.edu", "time": "2012-03-13T00:51:19Z", "bug_id": 52884, "creation_time": "2012-03-13T00:51:19Z", "is_private": false}, {"count": 3, "tags": [], "creator": "jorton@redhat.com", "text": "I can reproduce this, it is another weird AI_ADDRCONFIG getaddinfo() thing.\n\nUsing people.apache.org/~jorton/gai.c\n\n$ ./gai localhost\ngetaddrinfo(\"localhost\", NULL, {.family=AF_UNSPEC, .hints=0}) = 0:\n family=10, proto= 6 inet6: addr=::1, port=0, flowinfo=0\n family= 2, proto= 6 inet4: addr=127.0.0.1, port=0\n$ ./gai -a localhost\ngetaddrinfo(\"localhost\", NULL, {.family=AF_UNSPEC, .hints=0|AI_ADDRCONFIG}) = 0:\n family= 2, proto= 6 inet4: addr=127.0.0.1, port=0\n family= 2, proto= 6 inet4: addr=127.0.0.1, port=0\n\n... where /etc/hosts has both \"localhost\" and \"localhost.domain\" mapping to 127.0.0.1.\n\nGoogle says there is some... \"disagreement\" about whether this is app/libc/distro problem.  Sigh.  I guess we could work around it in APR by ignoring duplicate addresses.", "id": 161486, "time": "2012-08-17T14:18:40Z", "bug_id": 52884, "creation_time": "2012-08-17T14:18:40Z", "is_private": false, "attachment_id": null}]