[{"count": 0, "tags": [], "creator": "andrewconrad@msn.com", "attachment_id": null, "id": 19241, "time": "2002-07-10T08:41:08Z", "bug_id": 10629, "creation_time": "2002-07-10T08:41:08Z", "is_private": false, "text": "using the include directive fails when referencing the Parent path when the \nContext is set directly to the WAR file, yet succeeds when accessing the \nunpacked WAR directories.\n\nThis Context fails:\n<Context path=\"/ServerTest\" docBase=\"ServerTest.war\"\n        debug=\"0\" privileged=\"true\" />\n\nbut expanding the war and setting this context succeeds\n<Context path=\"/ServerTest\" docBase=\"ServerTest\"\n        debug=\"0\" privileged=\"true\" />\n\nthe test files were setup as such: (the WAR will be attached)\n\n/inc.htm\n/testdir/DotDotInclude.jsp\nwhere DotDotInclude.jsp has a tag\n<%@ include file=\"../inc.htm\"%>\n\n\nHacking at the source code for jasper2 revealed that when the call was made to \nJSPCompilationContext.getResourceAsStream(String res)\nres = \"/testdir/../inc.htm\"\nThe returned java.io.InputStream was null if the WAR was the Context docBase, \nand not null if referencing the directory."}, {"count": 1, "tags": [], "creator": "andrewconrad@msn.com", "text": "Created attachment 2301\nTest WAR to duplicate the problem", "id": 19242, "time": "2002-07-10T08:42:11Z", "bug_id": 10629, "creation_time": "2002-07-10T08:42:11Z", "is_private": false, "attachment_id": 2301}, {"count": 2, "tags": [], "text": "I believe it is also the case that the bug manifests itself with any relative \npath reference, not merely a reference to a parent path. For example, the \ndirective:\n\n<%@ include file=\"./inc.htm\"%>\n\nWill also generate a \"not found\" error\n", "attachment_id": null, "bug_id": 10629, "id": 19269, "time": "2002-07-10T18:25:04Z", "creator": "landolt@royalsys.com", "creation_time": "2002-07-10T18:25:04Z", "is_private": false}, {"count": 3, "attachment_id": null, "bug_id": 10629, "text": "It seems that ZIP format accepts directory paths such as /dir/../testfile.htm \nas a valid entry and stores the file as so.  Assumming that is a correct \nimplementation, the parent directory and current directory notation should be \ndealt with Prior to requesting the file from the ZipFile.\n\nSince other DirContext's may handle relative paths, (FileDirContext does) I \npatched org.apache.naming.resources.WARDirContext.java, resolving the relative \npaths before retrieval.\n\n--- WARDirContext.old\t2002-07-13 06:04:37.000000000 -0400\n+++ WARDirContext.java\t2002-07-13 06:30:59.000000000 -0400\n@@ -246,6 +246,7 @@\n         throws NamingException {\n         if (name.isEmpty())\n             return this;\n+        name = handleRelativePaths(name); //removes Dot and DotDot notation\n         Entry entry = treeLookup(name);\n         if (entry == null)\n             throw new NamingException\n@@ -772,6 +773,35 @@\n \n     }\n \n+\t\t/**\n+\t\t* Handle Relative file path markers such as .. and .\n+\t\t* Assumes that the name will begin \"/\" and will maintain this\n+\t\t*/\n+\t\tprotected static Name handleRelativePaths(Name BaseName)\n+\t\t\t\tthrows NamingException {\n+\t\t\tboolean hasChanged = true;\n+\t\t\tName name = BaseName.getSuffix(0); //creating a new \nname, so as not to modify the old\n+\t\t\twhile(hasChanged) {\n+\t\t\t\thasChanged = false;\n+\t\t\t\tfor(int i = 0; i < name.size(); i++) {\n+\t\t\t\t\t//remove any Dot Dot notation, if it's \nnot the root\n+\t\t\t\t\tif( name.get(i).equals(\"..\") && i > 1) \n{  //will not handle the case \"/..\" . let current system handle situation\n+\t\t\t\t\t\tname.remove(i);\n+\t\t\t\t\t\tname.remove(i - 1);\n+\t\t\t\t\t\thasChanged = true;\n+\t\t\t\t\t\tbreak; //start over\n+\t\t\t\t\t}\n+\n+\t\t\t\t\t//removes any Single Dot notation\n+\t\t\t\t\tif( name.get(i).equals(\".\") ) {\n+\t\t\t\t\t\tname.remove(i);\n+\t\t\t\t\t\thasChanged = true;\n+\t\t\t\t\t\tbreak; //start over\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\treturn name;\n+\t\t}\n \n     /**\n      * Constructs a tree of the entries contained in a WAR file.\n\n\n\n--- file end ----\n\n\n\n\n\n\n\n", "id": 19488, "time": "2002-07-13T21:27:51Z", "creator": "andrewconrad@msn.com", "creation_time": "2002-07-13T21:27:51Z", "tags": [], "is_private": false}, {"count": 4, "tags": [], "creator": "andrewconrad@msn.com", "text": "Created attachment 2346\nPatch for WARDirContext.java to resolve relative path issues", "id": 19489, "attachment_id": 2346, "bug_id": 10629, "creation_time": "2002-07-13T21:29:18Z", "time": "2002-07-13T21:29:18Z", "is_private": false}, {"count": 5, "attachment_id": null, "bug_id": 10629, "is_private": false, "id": 19979, "time": "2002-07-22T14:05:59Z", "creator": "andrewsh@netcomuk.co.uk", "creation_time": "2002-07-22T14:05:59Z", "tags": [], "text": "Fixing this bug is particularly important when using Tomcat with JBoss, as JBoss\ncurrently (3.0.0) does not provide a way to unpack the WARs."}, {"count": 6, "tags": [], "creator": "remm@apache.org", "attachment_id": null, "id": 19981, "time": "2002-07-22T14:19:17Z", "bug_id": 10629, "creation_time": "2002-07-22T14:19:17Z", "is_private": false, "text": "This should be resolved in Jasper (and a canonical path should be passed to the\ngetResource method IMO).\nThis should be fixed in Tomcat 4.1.8.\n\n*** This bug has been marked as a duplicate of 10711 ***"}, {"count": 7, "tags": [], "bug_id": 10629, "text": "This bug has been marked as a duplicate of 10711, which has been marked as\nRESOLVED FIXED; however it seems to me that the fix for 10711 only addresses the\nissue of an included JSP file, not an HTML or text file. \n\nIsn't a change to getResourceAsStream and getResource needed? (Or to WARDirContext?)", "id": 19987, "attachment_id": null, "creator": "andrewsh@netcomuk.co.uk", "creation_time": "2002-07-22T15:21:52Z", "time": "2002-07-22T15:21:52Z", "is_private": false}, {"count": 8, "tags": [], "creator": "andrewconrad@msn.com", "attachment_id": null, "id": 20117, "time": "2002-07-24T08:59:00Z", "bug_id": 10629, "creation_time": "2002-07-24T08:59:00Z", "is_private": false, "text": "Andrew Harris was correct in that the fix for 10711 did not fix the problem \nfor includes of files with extensions other than *.jsp.\n\n\nHere is a patch that solves the problem within the \nJspCompilationContext.java.  If the getResource method should already be \nrecieving a canonical name, as Remy suggests, then maybe a utility class is \nneeded for relative path resolution, instead of duplicating the canonicalURI \nmethod to multiple locations.\n\n\n--- JspCompilationContext.old\t2002-07-24 02:12:00.000000000 -0400\n+++ JspCompilationContext.java\t2002-07-24 04:18:17.000000000 -0400\n@@ -227,12 +227,12 @@\n      *         as an InputStream.\n      */\n     public java.io.InputStream getResourceAsStream(String res) {\n-        return context.getResourceAsStream(res);\n+        return context.getResourceAsStream(canonicalURI(res));\n     }\n \n \n     public URL getResource(String res) throws MalformedURLException {\n-        return context.getResource(res);\n+        return context.getResource(canonicalURI(res));\n     }\n \n     /** \n"}, {"count": 9, "tags": [], "bug_id": 10629, "attachment_id": null, "id": 20118, "time": "2002-07-24T09:10:26Z", "creator": "remm@apache.org", "creation_time": "2002-07-24T09:10:26Z", "is_private": false, "text": "I've applied the patch."}, {"count": 10, "tags": [], "creator": "andrewconrad@msn.com", "attachment_id": null, "text": "*** Bug 11802 has been marked as a duplicate of this bug. ***", "id": 21232, "time": "2002-08-18T19:11:57Z", "bug_id": 10629, "creation_time": "2002-08-18T19:11:57Z", "is_private": false}, {"count": 11, "tags": [], "creator": "nirp@il.kamoon.com", "text": "This bug still exists in tomcat version - 4.1.12.", "id": 25775, "time": "2002-11-06T13:27:09Z", "bug_id": 10629, "creation_time": "2002-11-06T13:27:09Z", "is_private": false, "attachment_id": null}, {"count": 12, "tags": [], "creator": "remm@apache.org", "attachment_id": null, "id": 25776, "time": "2002-11-06T13:36:25Z", "bug_id": 10629, "creation_time": "2002-11-06T13:36:25Z", "is_private": false, "text": "Don't reopen the same bug many times.\n\n*** This bug has been marked as a duplicate of 13583 ***"}]