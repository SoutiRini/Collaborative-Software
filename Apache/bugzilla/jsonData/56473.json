[{"count": 0, "tags": [], "bug_id": 56473, "attachment_id": null, "text": "For example:\n\n$> telnet localhost 80\nConnected to localhost.\nEscape character is '^]'.\nGET /foo HTTP/1.1\nHost: example.com\n\nHTTP/1.1 200 OK\nDate: Wed, 30 Apr 2014 09:32:20 GMT\nServer: Apache\nLast-Modified: Wed, 30 Apr 2014 09:32:14 GMT\nETag: \"0-4f83f39411430\"\nAccept-Ranges: bytes\nContent-Length: 0\n\n$> telnet localhost 80\nConnected to localhost.\nEscape character is '^]'.\nGET /foo HTTP/1.1\nHost: example.com\n\nHTTP/1.1 200 OK\nDate: Wed, 30 Apr 2014 09:32:53 GMT\nServer: Apache\nLast-Modified: Wed, 30 Apr 2014 09:32:14 GMT\nETag: \"0-4f83f39411430\"\nAccept-Ranges: bytes\nContent-Length: 0\nFoo: bar\n\nHere, a new header (Foo) has been inserted with mod_headers (but AFAICT this isn't limited to mod_headers). Note that the ETags are the same.\n\nThis causes problems when headers change, but old responses are cached in browsers and/or intermediaries; even when the cached response is stale, Apache will 304 the conditional request, effectively persisting it in-cache forever (until it gets little enough traffic to evict it, which may be never, or until the next change to the body).\n\nFor example, a site might introduce or change the Content-Security-Policy response header; however, because of this bug, that change will not be apparent until the end user clears the cache or actually changes the content that the policy is attached to.\n\nAs more headers are used to communicate policy like this (as is the trend these days, especially regarding security policy), this impact of bug will become even more problematic, I think.\n\nI realise that fixing this may be difficult; the most obvious thing I can think of would be to take a hash of the response headers (with a blacklist for things like Date, ETag and similar) and use that as input to the ETag content.\n\nThe other way to go about fixing it would be to always send \"extra\" headers (set by mod_headers or otherwise) in a 304 response; however, that would violate a SHOULD NOT in <http://tools.ietf.org/html/draft-ietf-httpbis-p4-conditional-26#section-4.1>, and I suspect support for updating cached headers in 304s is far from universal in clients.\n\nThe same issue comes up with Last-Modified, but I don't see any practical way to mitigate that; as long as the browser is doing If-None-Match correctly, it shouldn't matter anyway.", "id": 174939, "time": "2014-04-30T10:04:32Z", "creator": "mnot@mnot.net", "creation_time": "2014-04-30T10:04:32Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 56473, "text": "As I understand it, the ETag is designed to represent the actual resource of the URL, and as such should not change w/ a change in the headers per se. Adding or changing a header doesn't change the actual resource, does it?", "id": 174946, "time": "2014-04-30T13:38:10Z", "creator": "jim@apache.org", "creation_time": "2014-04-30T13:38:10Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "creator": "julian.reschke@gmx.de", "attachment_id": null, "id": 174947, "time": "2014-04-30T13:47:15Z", "bug_id": 56473, "creation_time": "2014-04-30T13:47:15Z", "is_private": false, "text": "It's per \"representation\", and some of header fields are part of the representation. See <http://greenbytes.de/tech/webdav/draft-ietf-httpbis-p2-semantics-26.html#rfc.section.3>"}]