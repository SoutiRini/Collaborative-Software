[{"count": 0, "tags": [], "bug_id": 31295, "attachment_id": null, "text": "I would like to request that the __StringFromFile function be enhanced to\nsupport parsing delimited text from files into multiple variables. Something\nlike  'somevariable' for the whole line read in from the file with\n'somevariable_1', somevarible_2'... for all the delimited text is what I am\nhoping for.\n\nI am trying to test a site that uses a lot of email addresses, each with a\nunique password (produced from the site itself and returned in an email\nmessage). Currently I have a script to pull email addresses and passwords out of\nthe email that the site sends out and collect the information into a csv file\n(one comma delimited line per email address/password pair) but the only way I\nhave figured out how to continue to the next phase of the test is to use two\nseperate files to feed jmeter (one for email address and one for password). If\nthe alignment between the two files slips the site will only respond with an\nerror (which in itself is also an appropriate test but not the one I am trying\nto perform at this point).\n\nAllowing for all related information to be collected on one line of a text file\nand delimited to allow parsing would ensure no alignment misses.\n\nI would sincerely like to request that the jmeter development community consider\nthis ehancement request for inclusion in a near future release of jmeter.\n\nThank you\n\nDon Baker", "id": 63806, "time": "2004-09-19T13:00:17Z", "creator": "bakerd@soj.sega.co.jp", "creation_time": "2004-09-19T13:00:17Z", "is_private": false}, {"count": 1, "tags": [], "creator": "sebb@apache.org", "text": "Have you tried using __CSVRead() ? That is similar to StringFromFile, except\nthat it reads the whole file into memory, so is not suitable for very large\namounts of test data.\n\nBTW If you include both the StringFromFile calls on the same User Parameters\nscreen, then the values will always remain in step.\n\n[There has been some talk of implementing a CSV parameter test element.]", "id": 63811, "time": "2004-09-19T16:47:52Z", "bug_id": 31295, "creation_time": "2004-09-19T16:47:52Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 31295, "attachment_id": null, "is_private": false, "id": 64017, "time": "2004-09-22T06:15:01Z", "creator": "bakerd@soj.sega.co.jp", "creation_time": "2004-09-22T06:15:01Z", "text": "Thank you very much for the info and suggestions. They have been very helpful\nand sincerely appreciated.\n\nI had previously read, misunderstood and bypassed the __CSVRead() function.\nAfter receiving your note I reread the docs (carefully, several times) and tried\nthe function. Although I have not yet tried my test with a large amount of data\nit's looking very promising. I had initially desired to test with minimum 5000\nto 10000 email/password pair blocks. I am hoping that the CSVRead function will\nbe able to handle at least 1000 email/password pair blocks.\n\nAlthough this looks like it will provide a method to deal with my current\ntesting needes I would still like to request that the _StringFromFile() function\nbe modified (or some other method created) to deal with multiple variables read\nin from an external file (if possible with no size limitation).\n\nThanks again for all your help.\n\nDon Baker"}, {"attachment_id": null, "tags": [], "creator": "sebb@apache.org", "text": "I may well add CSV parsing to SFF. I was going to add it originally, but then\nCSVParse was added. Also we have found that using two files with SFF in the\nparameters pre-processor works fine.\n\nIt would not be all that tricky to create a dedicated CSV test element, but the\ntime needs to be found to design the UI etc.\n\nPatches and code contributions welcome - as attachments in Bugzilla please!", "count": 3, "id": 64033, "time": "2004-09-22T11:02:34Z", "bug_id": 31295, "creation_time": "2004-09-22T11:02:34Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 31295, "attachment_id": null, "text": "Decided to create a __split() function instead, as this is more generic.\n\nSee functions.xml for details.\n\nCode has been added to CVS 2.0 branch.\n\n", "id": 64075, "time": "2004-09-22T22:11:30Z", "creator": "sebb@apache.org", "creation_time": "2004-09-22T22:11:30Z", "is_private": false}]