[{"count": 0, "tags": [], "bug_id": 37407, "attachment_id": null, "id": 82228, "time": "2005-11-08T18:05:36Z", "creator": "fred@stsci.edu", "creation_time": "2005-11-08T18:05:36Z", "is_private": false, "text": "On my linux system I was in the proc directory for tomcat and noticed that\nfor each jsp file that was compiled I was ending up with two file\ndescriptors that were never closed.\n\nI made the following change to JspReader and the problem seems to have gone\naway.  I don't know what is causing the jsp files to be \"reregistered\"\nmultiple times that in turn causes the descriptor leak to appear.  Also I\nam assuming there that err.jspError() always throws an Exception.  You could\nalso put the err.jspErrror() call inside the try/catch, but then you would have\nto check for the type of exception in the catch block.\n\nMy impression is that it should never lead pushFile() with the reader still\nopen.\n\ndiff -C5 JspReader.java JspReader.java.new\n*** JspReader.java      2005-09-23 09:45:24.000000000 -0400\n--- JspReader.java.new  2005-11-08 12:04:14.000000000 -0500\n***************\n*** 513,522 ****\n--- 513,527 ----\n          String longName = file;\n   \n          int fileid = registerSourceFile(longName);\n   \n          if (fileid == -1) {\n+             if (reader != null) {\n+                 try {\n+                     reader.close();\n+                 } catch (Exception any) {}\n+             }\n              err.jspError(\"jsp.error.file.already.registered\", file);\n          }\n   \n          currFileId = fileid;"}, {"count": 1, "tags": [], "creator": "yoavs@computer.org", "attachment_id": null, "text": "Makes sense to me: thanks for reporting this and investigating it.  Will apply.", "id": 82654, "time": "2005-11-18T16:09:43Z", "bug_id": 37407, "creation_time": "2005-11-18T16:09:43Z", "is_private": false}, {"count": 2, "tags": [], "creator": "yoavs@computer.org", "attachment_id": null, "text": "Fixed.", "id": 82659, "time": "2005-11-18T16:36:21Z", "bug_id": 37407, "creation_time": "2005-11-18T16:36:21Z", "is_private": false}]