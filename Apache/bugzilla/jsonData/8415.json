[{"attachment_id": null, "tags": [], "creator": "Lance.Andersen@Sun.COM", "is_private": false, "count": 0, "id": 14450, "time": "2002-04-23T14:00:10Z", "bug_id": 8415, "creation_time": "2002-04-23T14:00:10Z", "text": "The code for setting the PreparedStatement parameter to null  is not guaranteed\nto be portable doing the following (from \"QueryTagSupport.java\"):\n\n   private void setParameters(PreparedStatement ps, List parameters)\n        throws SQLException {\n        if (parameters != null) {\n            for (int i = 0; i < parameters.size(); i++) {\n                // The first parameter has index 1\n                if (parameters.get(i) == null) {\n                    ps.setNull(i + 1, java.sql.Types.NULL);\n                }\n                else {\n                    ps.setObject(i + 1, parameters.get(i));\n                }\n            }\n        }\n\nThe setNull should be what you are coercing the null to for a type such as\nps.setNull(i+1, java.sql.Types.DATE),"}, {"count": 1, "attachment_id": null, "bug_id": 8415, "is_private": false, "id": 14675, "time": "2002-04-25T00:31:37Z", "creator": "jan.luehe@sun.com", "creation_time": "2002-04-25T00:31:37Z", "tags": [], "text": "Fixed by using PreparedStatement.setObject(int, Object) and passing \"null\" as\nthe 2nd argument. This is compliant with JDBC 3.0:\n\n13.2.2.3 Setting NULL Parameters\n   The method setNull can be used to set any parameter to JDBC\n   NULL. It takes two parameters, the ordinal position of the\n   parameter marker, and the JDBC type of the parameter.\n\n     ps.setNull(2, java.sql.Types.VARCHAR);\n\n     CODE EXAMPLE 13-12 Setting a String parameter to JDBC NULL\n\n   If a Java null is passed to any of the setter methods that take\n   a Java object, the parameter will be set to JDBC NULL.\n\n17.7 NULL Data\n   An application uses the existing getObject and setObject mechanism\n   to retrieve and store SQLData values. We note that when the second\n   parameter, x, of method PreparedStatement.setObject has the value\n   null, the driver executes the SQL statement as if the SQL literal\n   NULL had appeared in its place.\n\n     void setObject (int i, Object x) throws SQLException;\n\n   When parameter x is null, there is no enforcement that the\n   corresponding argument expression is of a Java type that could\n   successfully be passed to that SQL statement if its value were not\n   null. The Java programming language null carries no type information.\n   For example, a null Java programming language variable of class\n   AntiMatter could be passed as an argument to an SQL statement that\n   requires a value of SQL type MATTER, and no error would result, even\n   though the relevant type map object did not permit the translation\n   of MATTER to AntiMatter."}]