[{"count": 0, "tags": [], "bug_id": 30546, "attachment_id": null, "is_private": false, "id": 61725, "time": "2004-08-09T18:05:10Z", "creator": "AntBug.10.zelusgmail@dfgh.net", "creation_time": "2004-08-09T18:05:10Z", "text": "The XML logger adds part of the stack trace to an attribute of the build node;\nnew lines should be encoded in order to be accurate XML."}, {"count": 1, "tags": [], "bug_id": 30546, "attachment_id": null, "is_private": false, "id": 65744, "time": "2004-10-26T15:22:09Z", "creator": "bodewig@apache.org", "creation_time": "2004-10-26T15:22:09Z", "text": "Hmm, http://www.w3.org/TR/1998/REC-xml-19980210#NT-AttValue doesn't say that\nnewlines can't be part of an attribute's value.  Is there any processor having\nproblems with the logfile?\n"}, {"count": 2, "tags": [], "bug_id": 30546, "attachment_id": null, "is_private": false, "id": 65752, "time": "2004-10-26T15:48:56Z", "creator": "peterreilly@apache.org", "creation_time": "2004-10-26T15:48:56Z", "text": "however:\nhttp://www.w3.org/TR/1998/REC-xml-19980210#AVNormalize\nsays that all white space gets normalized to space characters.\n(except the cr nl sequence, which gets normalized to a single space).\n\nI did some experimenting with the message attribute of echo.\n<echo message=\"a message\non two lines\"/>\noutputs a message on one line (with a space between the \"message\" and \"on\").\nHowever,\n<echo message=\"a message&#xAon two lines\"/> outputs\na message on two lines.\n\nReading the standard, I am not too sure that this is the correct thing\nto do. It looks like the stack information should be in CDATA text.\nThis does seem to be the case:\n<build error=\"/home/preilly/learning/a/antlib/error/build.xml:5: srcdir\nattribute must be set!\" time=\"0 seconds\">\n\t<task location=\"/home/preilly/learning/a/antlib/error/antlib.xml:2: \" name=\"\"\ntime=\"0 seconds\"></task>\n\t<task location=\"/home/preilly/learning/a/antlib/error/build.xml:3: \"\nname=\"typedef\" time=\"0 seconds\"></task>\n\t<target name=\"build\" time=\"0 seconds\">\n\t\t<task location=\"/home/preilly/learning/a/antlib/error/build.xml:5: \"\nname=\"javac2\" time=\"0 seconds\"></task>\n\t</target>\n\t<stacktrace><![CDATA[/home/preilly/learning/a/antlib/error/build.xml:5: srcdir\nattribute must be set!\n\tat org.apache.tools.ant.taskdefs.Javac.checkParameters(Javac.java:893)\n\tat org.apache.tools.ant.taskdefs.Javac.execute(Javac.java:738)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:275)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:585)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:95)\n\tat org.apache.tools.ant.Task.perform(Task.java:366)\n\tat org.apache.tools.ant.Target.execute(Target.java:341)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:369)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1244)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1214)\n\tat\norg.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:36)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1095)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:673)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:188)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:229)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:55)\n]]></stacktrace>\n</build>\n"}, {"count": 3, "tags": [], "bug_id": 30546, "attachment_id": null, "is_private": false, "id": 65756, "time": "2004-10-26T15:58:15Z", "creator": "bodewig@apache.org", "creation_time": "2004-10-26T15:58:15Z", "text": "normalization is done by the parser, not by the one producing the XML, isn't it?\nThat's why I stumbled over the \"accurate\".\n\nTo me it looks as if the logger was creating perfectly well-formed XML.  Maybe we\nneed to know in which cases \"adds part of the stack trace to an attribute of the\nbuild node\" happens since the code doesn't look as if Ant did at all.\n"}, {"count": 4, "tags": [], "bug_id": 30546, "is_private": false, "text": "ping?", "id": 66531, "time": "2004-11-05T15:31:24Z", "creator": "bodewig@apache.org", "creation_time": "2004-11-05T15:31:24Z", "attachment_id": null}, {"count": 5, "tags": [], "creator": "sbailliez@apache.org", "attachment_id": null, "id": 66672, "time": "2004-11-10T14:46:50Z", "bug_id": 30546, "creation_time": "2004-11-10T14:46:50Z", "is_private": false, "text": "Stefan, as you said to me the problem (if any) relies in the XML processor.\n\nIt is pretty clear to me reading http://www.w3.org/TR/REC-xml/#AVNormalize\nthat newlines are perfectly valid but the data you get from the XML processor \nwill depend if the attribute is declared as CDATA or NMTOKENS\n\nAs there is no DTD written for xml log file, the attribute is CDATA:\n\"All attributes for which no declaration has been read SHOULD be treated by a \nnon-validating processor as if declared CDATA\"\n\nResolving this bug as invalid."}]