[{"count": 0, "tags": [], "creator": "Michal.Kaczmarzyk@comarch.com", "attachment_id": null, "id": 95611, "creation_time": "2006-11-09T01:50:44Z", "time": "2006-11-09T01:50:44Z", "bug_id": 40934, "text": "Connection to Oracle database.\nAll necessary info (host, port, SID) are stored in *.txt file. CSV Data Set Config \ngets them from file and assigns to variables. \n,Variable Names (comma-delimited), field in CSV Data Set Config is:\nhost,port,sid\nIn JDBC Connection Configuration in 'Database URL' field there is: \njdbc:oracle:thin:@${host}:${port}:${sid}\n\nAfter running the test plan HTTP Response Message is: 'java.sql.SQLException:\nInvalid number format for port number', although all the values from file were\nread correctly (checked with Java request). When 'Database URL' field is:\njdbc:oracle:thin:@nemo:1523:MY_SID (fixed values), everything is OK.\n\nCSVRead function instead of CSV Data Set Config, makes it also working just fine.\n\nIt looks like, after getting the values from file by CSV Data Set Config, the\nvalues are not replaced in ${variable_name} reference, in JDBC Connection\nConfiguration element.", "is_private": false}, {"count": 1, "tags": [], "bug_id": 40934, "attachment_id": null, "id": 98241, "time": "2007-01-18T17:18:25Z", "creator": "sebb@apache.org", "creation_time": "2007-01-18T17:18:25Z", "is_private": false, "text": "User Defined Variables also work OK.\n\nThe CSV Dataset does not work with JDBC Config because it processes the file \nread after the other Config elements have been processed.\n\nNot sure how to fix this yet."}, {"count": 2, "tags": [], "bug_id": 40934, "attachment_id": null, "id": 107578, "creation_time": "2007-09-01T04:50:40Z", "time": "2007-09-01T04:50:40Z", "creator": "sebb@apache.org", "text": "Now at least documented in known bugs and component_reference...", "is_private": false}, {"count": 3, "attachment_id": null, "bug_id": 40934, "is_private": false, "id": 107779, "time": "2007-09-06T07:17:50Z", "creator": "sebb@apache.org", "creation_time": "2007-09-06T07:17:50Z", "tags": [], "text": "In fact CSV Dataset works OK in Configuration elements that process their data \nat run time - for example HTTP Auth Manager, Header Manager and Cookie Manager \n(which now handles variables).\n\nThe problem with JDBC Config is that its data items are processed during test \ninitialisation, which is too early for the CSV variables to be defined."}, {"count": 4, "tags": [], "text": "So this bug is actually about JDBC sampler, right? Judging from mailing list traffic and own experience, it's the only sampler that doesn't support user-defined variables. Considering this bug didn't exist in the \"old\" JDBC sampler (e.g. in 2.0.1) it is introduced in 2.3 and is making life difficult for people like myself who have to migrate from 2.0.1\n\nI'm having the same problems: variables in JDBC configuration field are not used, i.e. replaced with blanks. Using verbatim configuration in these fields works, using properties on the command line works too, but not variables with values calculated at run-time.\n\nIf this is really a problem with initialization order (which it seems it is), could some developers please take a look the JDBC sampler and make it use the runtime configuration? I tried to, but my experience is limited and JMeter code is foreign to me. ", "is_private": false, "bug_id": 40934, "id": 114045, "time": "2008-02-27T04:45:34Z", "creator": "nikolai@prokoschenko.de", "creation_time": "2008-02-27T04:45:34Z", "attachment_id": null}, {"count": 5, "tags": [], "text": "(In reply to comment #4)\n> So this bug is actually about JDBC sampler, right? Judging from mailing list\n> traffic and own experience, it's the only sampler that doesn't support\n> user-defined variables. \n\nNot strictly true, there was another case recently not involving JDBC.\nSee: \nhttp://www.nabble.com/User-and-Password-Variable-Problem-td15598236.html#a15598236\n\n\n> Considering this bug didn't exist in the \"old\" JDBC\n> sampler (e.g. in 2.0.1) it is introduced in 2.3 and is making life difficult\n> for people like myself who have to migrate from 2.0.1\n\nCSV Dataset did not exist in 2.0.1.\n\n> I'm having the same problems: variables in JDBC configuration field are not\n> used, i.e. replaced with blanks. Using verbatim configuration in these fields\n> works, using properties on the command line works too, but not variables with\n> values calculated at run-time.\n\nExactly what used to work in 2.0.1 and does not work now?\n\n> If this is really a problem with initialization order (which it seems it is),\n> could some developers please take a look the JDBC sampler and make it use the\n> runtime configuration? I tried to, but my experience is limited and JMeter code\n> is foreign to me. \n> \n\nIt would help if you could attach a simple test case that works in 2.0.1 and fails in the later version of JMeter.\n", "attachment_id": null, "id": 114053, "creation_time": "2008-02-27T05:58:35Z", "time": "2008-02-27T05:58:35Z", "creator": "sebb@apache.org", "bug_id": 40934, "is_private": false}, {"count": 6, "tags": [], "text": "(In reply to comment #5)\n> (In reply to comment #4)\n> > Considering this bug didn't exist in the \"old\" JDBC\n> > sampler (e.g. in 2.0.1) it is introduced in 2.3 and is making life difficult\n> > for people like myself who have to migrate from 2.0.1\n> CSV Dataset did not exist in 2.0.1.\n\nMy problematic case doesn't involve CSV Dataset, but generated variables instead.\n\n> > I'm having the same problems: variables in JDBC configuration field are not\n> > used, i.e. replaced with blanks. Using verbatim configuration in these fields\n> > works, using properties on the command line works too, but not variables with\n> > values calculated at run-time.\n> Exactly what used to work in 2.0.1 and does not work now?\n\nExisting scripts which use the JDBC Sampler with a properties file and user-defined variables. Pool variable has been set manually for the config element and the sampler.\n\n> It would help if you could attach a simple test case that works in 2.0.1 and\n> fails in the later version of JMeter.\n\nI'll try to do so tomorrow.\n", "attachment_id": null, "id": 114059, "creator": "nikolai@prokoschenko.de", "time": "2008-02-27T08:23:14Z", "bug_id": 40934, "creation_time": "2008-02-27T08:23:14Z", "is_private": false}, {"count": 7, "tags": [], "text": "Created attachment 21600\nSimplified testcase\n\nThis testcase fires two simple JDBC queries, one query uses variables in the connection definition, the other does not. The variables are defined in the test case and are apparently set according to the Debug sampler. In the first case, the connection cannot be established, in the second the query succeeds. Debug log also spots the following lines, which prove that variable replacement doesn't take place, which is bad for any kind of dynamic testing.\n\nDEBUG - jmeter.protocol.jdbc.config.DataSourceElement: Driver: oracle.jdbc.driver.OracleDriver DbUrl: jdbc:oracle:thin:@${firstDbHost}:1521:DB User: ${firstDbUser}  \n\nDEBUG - jmeter.protocol.jdbc.config.DataSourceElement: Driver: oracle.jdbc.driver.OracleDriver DbUrl: jdbc:oracle:thin:@192.168.1.151:1521:DB User: DB_USER", "is_private": false, "id": 114096, "creator": "nikolai@prokoschenko.de", "time": "2008-02-28T06:16:40Z", "bug_id": 40934, "creation_time": "2008-02-28T06:16:40Z", "attachment_id": 21600}, {"count": 8, "tags": [], "bug_id": 40934, "attachment_id": null, "id": 114164, "time": "2008-03-01T15:15:36Z", "creator": "sebb@apache.org", "creation_time": "2008-03-01T15:15:36Z", "is_private": false, "text": "(In reply to comment #7)\n> Created an attachment (id=21600) [details]\n> Simplified testcase\n> \n> This testcase fires two simple JDBC queries, one query uses variables in the\n> connection definition, the other does not. The variables are defined in the\n> test case and are apparently set according to the Debug sampler. In the first\n> case, the connection cannot be established, in the second the query succeeds.\n> Debug log also spots the following lines, which prove that variable replacement\n> doesn't take place, which is bad for any kind of dynamic testing.\n> \n> DEBUG - jmeter.protocol.jdbc.config.DataSourceElement: Driver:\n> oracle.jdbc.driver.OracleDriver DbUrl: jdbc:oracle:thin:@${firstDbHost}:1521:DB\n> User: ${firstDbUser}  \n> \n> DEBUG - jmeter.protocol.jdbc.config.DataSourceElement: Driver:\n> oracle.jdbc.driver.OracleDriver DbUrl: jdbc:oracle:thin:@192.168.1.151:1521:DB\n> User: DB_USER \n> \n\nYes, I see those errors.\n\nHowever the test case does not work in JMeter 2.0.1."}, {"count": 9, "tags": [], "text": "(In reply to comment #8)\n\n> Yes, I see those errors.\n> However the test case does not work in JMeter 2.0.1.\n\nYes, but there is almost nothing I can do about it -- my test cases included some custom functions which read properties from a file and besides that the JDBC sampler wouldn't work without an association with a config element.\n\nHowever, this test case shows that either the JDBC sampler or the config element doesn't properly expand properties/variables and thus it's a regression from 2.0.1, since expansion worked back then. This is why I don't think that CSV data set is the buggy one in this case, but I might as well be wrong.\n\nShould I open a separate bug for this particular case or maybe the title of this bug should be changed?", "is_private": false, "id": 114175, "creator": "nikolai@prokoschenko.de", "time": "2008-03-02T12:39:13Z", "bug_id": 40934, "creation_time": "2008-03-02T12:39:13Z", "attachment_id": null}, {"count": 10, "tags": [], "bug_id": 40934, "attachment_id": null, "id": 114176, "time": "2008-03-02T13:21:09Z", "creator": "sebb@apache.org", "creation_time": "2008-03-02T13:21:09Z", "is_private": false, "text": "(In reply to comment #9)\n> (In reply to comment #8)\n> \n> > Yes, I see those errors.\n> > However the test case does not work in JMeter 2.0.1.\n> \n> Yes, but there is almost nothing I can do about it -- my test cases included\n> some custom functions which read properties from a file and besides that the\n> JDBC sampler wouldn't work without an association with a config element.\n\nIt does not have to be an existing test case.\n\n> However, this test case shows that either the JDBC sampler or the config\n> element doesn't properly expand properties/variables and thus it's a regression\n> from 2.0.1, since expansion worked back then. This is why I don't think that\n> CSV data set is the buggy one in this case, but I might as well be wrong.\n> \n> Should I open a separate bug for this particular case or maybe the title of\n> this bug should be changed?\n>\n \nGood idea.\n\nBut we still need a test case that works on 2.0.1 and does not work on 2.3/2.3.1\n"}, {"count": 11, "tags": [], "text": "Sebb, I've tried to create an appropriate test-case, but failed, since 2.3.1 requires an additional element which is not created automatically (maybe there is room for some \"migration support\" for the samplers?). I've opened issue #44519 for my actual problem, could you please take a look at that? It might also fix a half of this bug too...", "is_private": false, "id": 114185, "creator": "nikolai@prokoschenko.de", "time": "2008-03-03T00:19:33Z", "bug_id": 40934, "creation_time": "2008-03-03T00:19:33Z", "attachment_id": null}, {"count": 12, "tags": [], "text": "Shouldn't this one be closed ?\nAttached test case is not readable in JMeter 2.5.\n\nRegards\nPhilippe", "attachment_id": null, "id": 149377, "creation_time": "2011-09-17T15:08:55Z", "time": "2011-09-17T15:08:55Z", "creator": "p.mouawad@ubik-ingenierie.com", "bug_id": 40934, "is_private": false}, {"count": 13, "tags": [], "bug_id": 40934, "attachment_id": null, "text": "Need proof that something is not working as intended", "id": 149389, "time": "2011-09-17T15:52:57Z", "creator": "sebb@apache.org", "creation_time": "2011-09-17T15:52:57Z", "is_private": false}]