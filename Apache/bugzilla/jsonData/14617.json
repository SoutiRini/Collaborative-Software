[{"count": 0, "tags": [], "bug_id": 14617, "attachment_id": null, "id": 26416, "time": "2002-11-16T18:39:33Z", "creator": "malachi@eoti.org", "creation_time": "2002-11-16T18:39:33Z", "is_private": false, "text": "The section regarding \"user.home\" says:\n\n\nsince the \"user.home\" property is defined by the Java virtual machine to be your \nhome directory. This technique is more appropriate for Unix than Windows since \nthe notion of a home directory doesn't exist on Windows. On the JVM that I \ntested, the home directory on Windows is \"C:\\\". Different JVM implementations \nmay use other values for the home directory on Windows.\n\n\n\n\nAlthough I do not know which JVM they were using, Sun's implementation always \nsets the user.home to {WINDOWS}\\Documents and Settings\\{username}.  Could have \nbeen a problem with their environment, rather than the JDK."}, {"count": 1, "tags": [], "bug_id": 14617, "attachment_id": null, "is_private": false, "id": 30496, "time": "2003-02-02T11:35:02Z", "creator": "conor@apache.org", "creation_time": "2003-02-02T11:35:02Z", "text": "My Windows98 system does not have a {WINDOWS}\\Documents and Settings\\{username}\ndirectory. I don't even have a username on that system. \n\nThe point the manual makes is valid - The concept of a home directory is more\nnatural to Unix systems. You need to understand to where your JDK/Windows\nversion combination resolves user.home before using it.\n\nThanks."}, {"count": 2, "tags": [], "bug_id": 14617, "attachment_id": null, "is_private": false, "id": 30714, "time": "2003-02-05T07:38:34Z", "creator": "malachi@eoti.org", "creation_time": "2003-02-05T07:38:34Z", "text": "Pulling a 98 box out of the closet, I checked and found that the \"user.home\" on \nWin98 is set to \"C:\\WINDOWS\".  I am not sure what JVM you were running, but I \nwas running Sun's on 98SE.\n\n\n\n\nHowever, I disagree that the manual comment is valid. 1st flaw is that the \nversion of Windows they referred to has long been End-of-Lifed.  All newer \nversions use the \"user.home\" on a regular basis.  2nd is that their example \nSHOULD be placed under user.home on newer versions of Windows, as that is where \nALL applications are expected to put their data. 3rd, \"on the JVM that I tested\" \nisn't really valid, since many JDKs (by vendors other than Sun or IBM) have not \nbeen fully implemented.\n\n\n\n\nThe correct solution would be to point to ( \nhttp://java.sun.com/docs/books/tutorial/essential/system/properties.html ) for \nfurther information on system properties. The user.home solution is completely \nvalid on any current OS.  As is, though, the manual is wrong.\n"}, {"count": 3, "tags": [], "bug_id": 14617, "attachment_id": null, "id": 30716, "time": "2003-02-05T09:46:32Z", "creator": "conor@apache.org", "creation_time": "2003-02-05T09:46:32Z", "is_private": false, "text": "The essential point of this section is that under Windows systems, the\ndefinition of user.home is variable - you need to make sure you know what your\ncombination of the OS/JVM is going to do. Your original assertion \"Sun's\nimplementation always sets the user.home to {WINDOWS}\\Documents and\nSettings\\{username}\" is clearly not true as you yourself have indicated. On\nUnix, there is far less unpredictably - user.home will resolve to your home\ndirectory.\n\nAs for your flaws - I don't agree.\n1. The document does not mention a specific version of Windows/JVM combination.\nNeither Windows98 nor Windows ME have been end-of-lifed.\n2. The use of C:\\Windows to store user properties on Windows 98/ME systems is\nnto something I would encourage - I try to keep out of the operating system's areas.\n3. Finally the statement is valid - it is a single data point showing the\nvariablility of user.home under windows. It is not and does not claim to be an\nexhaustive reference of OS/JVM combinations.\n\nNevertheless, to bring this to conclusion, I have reworded the section in\nquestion as follows:\n\nWhere the \"user.home\" property resolves to in the file system depends on the\noperating system version and the JVM implementation. On Unix based systems, this\nwill map to the user's home directory. On modern Windows variants, this will\nmost likely resolve to the user's directory in the \"Documents and Settings\"\nfolder. Older windows variants such as Windows 98/ME are less predictable, as\nare other operating system/JVM combinations."}]