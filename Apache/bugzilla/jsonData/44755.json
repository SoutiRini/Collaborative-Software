[{"count": 0, "tags": [], "bug_id": 44755, "attachment_id": 21781, "id": 115319, "time": "2008-04-04T06:16:22Z", "creator": "owen.boyle@swx.com", "creation_time": "2008-04-04T06:16:22Z", "is_private": false, "text": "Created attachment 21781\nGzipped TAR containing pfiles and truss output demonstrating bug\n\nWhen pipes to logfiles are used (eg, rotatelogs), apache 2.2.8 uses two file descriptors for each log file, as compared to one fd per file for previous versions (ie, 2.2.6 and below). This has consequences for servers with a large number of logfiles because the file descriptor limit (eg, 255 on Solaris) may be suddenly breached simply by upgrading and with no other changes to the config.\n\nTo reproduce, set up a minimal config file with logging via pipes, eg:\n\nTransferLog \"|exec bin/rotatelogs logs/access_log 604800\"\nErrorLog    \"|exec bin/rotatelogs logs/error_log 604800\"\n\nRun a server as version 2.2.6 and another as version 2.2.8 and compare the \"pfiles\" output for each process. You will find that the 2.2.8 process uses an extra two file descriptors. This scales with the number of logfiles - for example, with 10 logs, 2.2.8 uses an extra 10 FDs relative to 2.2.6.\n\nPossibly related to recent commit: http://svn.apache.org/viewvc/httpd/httpd/tags/2.2.8/server/log.c?view=diff&r1=602466&r2=602467"}, {"count": 1, "attachment_id": null, "creator": "jorton@redhat.com", "text": "I've been comparing 2.2.x server/log.c with 2.2.6-level log.c:\n\nFor a config with two vhosts each with a piped logger, the 2.2.x code has no less than SIX pipe fds open in the parent.\n\nThe 2.2.x code has two - expected behaviour.\n", "id": 115542, "time": "2008-04-11T01:54:20Z", "bug_id": 44755, "creation_time": "2008-04-11T01:54:20Z", "tags": [], "is_private": false}, {"count": 2, "tags": [], "creator": "jorton@redhat.com", "attachment_id": 21815, "text": "Created attachment 21815\nfix for 2.2.8 piped logger fd leaks\n\nI've attached a patch which should fix this; a combined effort from Ruediger and I.  Can you try this out?", "id": 115543, "time": "2008-04-11T03:10:58Z", "bug_id": 44755, "creation_time": "2008-04-11T03:10:58Z", "is_private": false}, {"count": 3, "tags": [], "creator": "owen.boyle@swx.com", "attachment_id": null, "text": "I applied the patch to a test case and can confirm that the number of pipes opened is equal to that in version 2.2.6. So the patch looks good :-)\n\nI will make a more comprehensive test to verify that all features of logging are working and report back in a day or two.", "id": 115582, "time": "2008-04-14T05:17:54Z", "bug_id": 44755, "creation_time": "2008-04-14T05:17:54Z", "is_private": false}, {"count": 4, "tags": [], "text": "(In reply to comment #2)\n> Created an attachment (id=21815) [details]\n> fix for 2.2.8 piped logger fd leaks\n> \n> I've attached a patch which should fix this; a combined effort from Ruediger\n> and I.  Can you try this out?\n> \n\nThanks for putting the patch here Joe. Actually the the call to apr_file_inherit_unset is not directly linked to this report as it is no regression. After some thoughts I think the following place would be better for apr_file_inherit_unset as it would also solve the issue for all callers of \nap_open_piped_log (e.g. the access logs). Furthermore I guess this would also improve security as CGI scripts would no longer inherit these file descriptors and thus would be no longer able to write directly to the access logs.\n\nIndex: server/log.c\n===================================================================\n--- server/log.c        (Revision 647395)\n+++ server/log.c        (Arbeitskopie)\n@@ -307,6 +307,7 @@\n         if (rc == APR_SUCCESS) {\n             apr_pool_note_subprocess(p, procnew, APR_KILL_AFTER_TIMEOUT);\n             (*fpin) = procnew->in;\n+            apr_file_inherit_unset(*fpin);\n             /* read handle to pipe not kept open, so no need to call\n              * close_handle_in_child()\n              */\n", "attachment_id": null, "id": 115596, "creator": "rpluem@apache.org", "time": "2008-04-14T14:34:30Z", "bug_id": 44755, "creation_time": "2008-04-14T14:34:30Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 44755, "attachment_id": null, "id": 115840, "time": "2008-04-24T07:46:15Z", "creator": "owen.boyle@swx.com", "creation_time": "2008-04-24T07:46:15Z", "is_private": false, "text": "I have tested various patches against a production config with 70 piped logs and have to say the the problem has improved but is still present. For each mix, I counted N, the number of S_IFIFO lines in the pfiles output (NB this is Solaris 10). What I find, with identical config, is:\n\n1) Version 2.2.6, N = 109\n\n2) Version 2.2.8, unpatched, N = 247\n\n3) Version 2.2.8, with original patch of Joe Orton, N = 177\n\n4) Version 2.2.8, with patch of Orton and Pluem, N = 177\n\nWhat seems to happen is, for M piped logs, the unpatched 2.2.8 has 2M-2 more file descriptors than the reference 2.2.6. With either of the patches, the excess goes down to M-2.\n\nIgnoring the -2 term (probably because I have two pipes that are outside of VirtualHost containers), it looks like the patches fix one leak of FDs. However, there must be another leak somewhere... "}, {"count": 6, "tags": [], "bug_id": 44755, "text": "Owen, keep in mind that 70 handles are required simply for the output pipe,\nwhich you already knew.  In order to recover gracefully from a stopped logger,\nthe 70 read-ends of the pipes are required to pass this to a replacement process.\nThat's 140 in your case.  The other 37 handles?  I don't know... but clearly the\noriginal 107 handles you cite were incorrect.", "id": 115842, "time": "2008-04-24T09:23:14Z", "creator": "wrowe@apache.org", "creation_time": "2008-04-24T09:23:14Z", "is_private": false, "attachment_id": null}, {"count": 7, "tags": [], "bug_id": 44755, "text": "(In reply to comment #6)\n> Owen, keep in mind that 70 handles are required simply for the output pipe,\n> which you already knew.  In order to recover gracefully from a stopped logger,\n> the 70 read-ends of the pipes are required to pass this to a replacement\n\nWe only keep the read ends for the CustomLogs / Transferlogs. We do not do the same for the error logs. Provided the 70 piped loggers are equally distributed over CustomLogs / Transferlogs and ErrorLogs this could explain Owens numbers\nfor 2.2.6:\n\n70 write ends\n35 read ends\n---\n105 fds in total.\nThe remaining four might be for other purposes (e.g. pipe of death). Of course this applies only to the main process and not to its childs.\n\nFor 2.2.8 with the patches applied this would be\n\n70 write ends\n35 read ends\n4 don't knows as in 2.2.6\n68 additional ones we don't know.\n\nOwen, could you please use lsof which is also available for Solaris and attach the result filtered for the main process. This may help us a little bit if 68 unknown fd's are read or write end of pipes.\n", "id": 115854, "time": "2008-04-24T12:39:49Z", "creator": "rpluem@apache.org", "creation_time": "2008-04-24T12:39:49Z", "is_private": false, "attachment_id": null}, {"count": 8, "text": "I was able to reproduce the various differences on a test set-up and can report the following number of pipes used (nb, using \"lsof -p `cat httpdTest.pid` | grep PIPE | wc\" to count the pipes):\n\n(This table might not format properly after posting... :-)\n\n| 2.2.6 |  2.2.8 unpatched  | 2.2.8 patched |\n\n|   7   |    9              |   7           | T+E logs in Main (2 logs)\n\n|   5   |    9              |   7           | T+E logs in 1 VH (2 logs)\n\n|   7   |   13              |  11           | T+E logs in 2 VH (4 logs) \n\n\nObservations:\n\n1) In 2.2.6, the number of pipes used in each case depends on whether the log directives are in a VirtualHost or not. Adding a second VH (with 1 TransferLog and 1 Errorlog) adds 2 pipes.\n\n2) Apache 2.2.8, does not have a dependency on log directive location. However, the number of pipes starts at the higher level compared to 2.2.6. Adding a second VH adds 4 pipes.\n\n3) Applying the patch to 2.2.8, in the simplest case (logs only in main config) reduces the number of pipes to the same as 2.2.6 (this is why I originally thought the patch was successful). However, in the case when the logs are in the VHs, there are two extra pipes. Adding a second VH adds 4 pipes.\n\nConclusions:\n\nAdding a VH with 1 TransferLog and 1 Errorlog to a 2.2.6 config adds 2 pipes to the process. With 2.2.8 (patched or unpatched), each VH adds 4 extra pipes. However, the patch does reduce the absolute number of pipes by two. So the bug is still extant, it seems.\n\nI don't know what to make of the directive location dependency in 2.2.6!\n\nPS - Attached is a tar file containing the lsof output for each case mentioned in the table.", "creator": "owen.boyle@swx.com", "attachment_id": null, "id": 115867, "time": "2008-04-25T05:27:04Z", "bug_id": 44755, "creation_time": "2008-04-25T05:27:04Z", "tags": [], "is_private": false}, {"count": 9, "tags": [], "bug_id": 44755, "attachment_id": 21852, "id": 115870, "time": "2008-04-25T05:37:15Z", "creator": "owen.boyle@swx.com", "creation_time": "2008-04-25T05:37:15Z", "is_private": false, "text": "Created attachment 21852\nlsof output for various cases of logging \n\nlsof output for various apache versions against various configs that demonstrate how different number of pipes are used in each case."}, {"count": 10, "tags": [], "bug_id": 44755, "attachment_id": null, "id": 117865, "time": "2008-06-20T06:40:13Z", "creator": "owen.boyle@swx.com", "creation_time": "2008-06-20T06:40:13Z", "is_private": false, "text": "I have just tested the recently-released 2.2.9 for this bug and can confirm that it is fixed in this version.\n\nNote that there are no changes to server/log.c between 2.2.8 and 2.2.9. However, there has been quite a bit of work done in support/rotatelogs.c so it looks like that was where the fix was done."}, {"count": 11, "tags": [], "bug_id": 44755, "attachment_id": null, "id": 117866, "time": "2008-06-20T07:29:29Z", "creator": "wrowe@apache.org", "creation_time": "2008-06-20T07:29:29Z", "is_private": false, "text": "Owen, you tested with apr 1.3?\n\nNote there was a change also to the way pipe inheritance works, and the\napr 1.3 is in sync with httpd 2.2.9, thus the change you observed, I think."}, {"count": 12, "tags": [], "creator": "owen.boyle@swx.com", "attachment_id": null, "text": "Hi Will,\n\nI always compile \"with-included-apr\" so, yes, httpd-2.2.9 is using apr-1.3.0.\n\nI assume the implementation of the new function, apr_file_pipe_create_ex(), in pipe.c and the refactoring in proc.c (where some case-statement logic has been replaced by if-blocks) is what has done the trick.\n\nSo it looks like this bug is definitively resolved and thank you very much for your assistance!\n\n", "id": 117889, "time": "2008-06-23T00:21:33Z", "bug_id": 44755, "creation_time": "2008-06-23T00:21:33Z", "is_private": false}]