[{"count": 0, "attachment_id": 35586, "bug_id": 61858, "text": "Created attachment 35586\nChanges that give the double value of the cell to output\n\nHi.\nThere are two things I think will be helpful with this patch:\n1) When in Excel the cell date format and the system date format are same, the underlying cell format is not considered when reading and the value.Value is generated based on the local system date format where we are reading the Excel file.In such a case if I get the cell value in the string format, there is nothing much I can do to get the value in the format which I required as output.This can be possible If I have the double value of that cell.\n2) When the cell is Number say with format(5,000).If I get the value as String,\nI will get it as 5,000. If I want to convert it into a Double by parsing the value 5,000 It will throw an error. If I have a double value in this case things can be done easily.", "id": 202576, "time": "2017-12-05T12:57:44Z", "creator": "phanishwar.u@gmail.com", "creation_time": "2017-12-05T12:57:44Z", "tags": [], "is_private": false}, {"count": 1, "tags": [], "bug_id": 61858, "text": "Thanks Phaneeswar for the proposed patch.\nIt does modify a public API (the cell method) and this is not something that we don't do without deprecating the existing method. The replacement method can be added and the deprecated version can call the replacement version.\n\nIt's not generally required but I personally much prefer to review patches added via github - see https://github.com/apache/poi\n\nMy view on the patch, as is, is that it may not be necessary. If you look at the XLSX2CSV example in Poi, you will see that you can provide your own DataFormatter and with a custom DataFormatter, you could omit the number formatting and just represent the numbers in plain format.\n\nhttps://github.com/apache/poi/blob/trunk/src/examples/src/org/apache/poi/xssf/eventusermodel/XLSX2CSV.java", "id": 202591, "time": "2017-12-05T22:14:19Z", "creator": "fanningpj@yahoo.com", "creation_time": "2017-12-05T22:14:19Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "creator": "dominik.stadler@gmx.at", "attachment_id": null, "is_private": false, "id": 202916, "time": "2017-12-26T09:58:21Z", "bug_id": 61858, "creation_time": "2017-12-26T09:58:21Z", "text": "Please provide an updated patch or state if the proposed workaround is sufficient for you.\n\nPlease also note that producing a minimal patch without whitespace-changes is preferred as it minimizes the work needed to review the patch and thus increases the chances of having it integrated."}, {"count": 3, "tags": [], "creator": "phanishwar.u@gmail.com", "attachment_id": null, "is_private": false, "id": 202926, "time": "2017-12-27T06:06:49Z", "bug_id": 61858, "creation_time": "2017-12-27T06:06:49Z", "text": "Hi\nThanks for the example it really helps for Number format case.But the provided work around would be sufficient if I want to show output as 5,000. But what if I want to show the value as 5000.00. Having only the string value 5,000 known to me.\n\nAnd I think for handling Date format issue still we need to know the double value.\n\nBy which for both cases the change same.So I don't think an updated patch is required."}]