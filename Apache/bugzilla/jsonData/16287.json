[{"count": 0, "attachment_id": null, "bug_id": 16287, "is_private": false, "id": 29758, "time": "2003-01-21T05:02:31Z", "creator": "moritaku@bx.jp.nec.com", "creation_time": "2003-01-21T05:02:31Z", "tags": [], "text": "Some UTF-8 encoded Japanese documents causes Fatal Error.\n\nIf a name with multi-byte characters of UTF-8 encoding reaches to or exceeds\nover every 16kbyte-length boundary in its file, the parser reports\n'[Fatal Error] testdata.xml:266:14: Element type \"--a substring of the element\nname in Japanese--\" must be followed by either attribute specifications, \">\" or\n\"/>\".'\n\nThe following is a part of a hex-dump of the document.\n----\n00003fe0  20 3c e6 97 a5 e6 9c ac  e8 aa 9e e3 81 ae e3 81  | <..............|\n00003ff0  bf e3 81 ae e3 82 a8 e3  83 ac e3 83 a1 e3 83 b3  |................|\n00004000  e3 83 88 e5 90 8d e3 81  a7 e3 82 82 e3 83 80 e3  |................|\n00004010  83 a1 e3 81 a7 e3 81 97  e3 82 87 3e e6 97 a5 e6  |...........>....|\n00004020  9c ac e8 aa 9e e3 81 ae  e3 81 bf e3 81 ae e3 82  |................|\n00004030  a8 e3 83 ac e3 83 a1 e3  83 b3 e3 83 88 e5 90 8d  |................|\n00004040  e3 82 82 e3 83 80 e3 83  a1 e3 81 a7 e3 81 97 e3  |................|\n00004050  82 87 3c 2f e6 97 a5 e6  9c ac e8 aa 9e e3 81 ae  |..</............|\n00004060  e3 81 bf e3 81 ae e3 82  a8 e3 83 ac e3 83 a1 e3  |................|\n00004070  83 b3 e3 83 88 e5 90 8d  e3 81 a7 e3 82 82 e3 83  |................|\n00004080  80 e3 83 a1 e3 81 a7 e3  81 97 e3 82 87 3e 0a 3c  |.............>.<|\n00004090  2f 64 6f 63 3e 0a                                 |/doc>.|\n----\n\nAnd the following code will generate a test data which causes the problem.\n----\nimport java.io.FileOutputStream;\n\npublic class MakeTestData {\n    static final String xmldecl = \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n\";\n\n    static final String rootbgn = \"<doc>\\n\";\n    static final String elem1 = \"  <\\u30a8\\u30ec\\u30e1\\u30f3\\u30c8>\\u65e5\\u672c\\\nu8a9e\\u8981\\u7d20\\u540d\\u3060\\u3088</\\u30a8\\u30ec\\u30e1\\u30f3\\u30c8>\\n\";\n    static final String elem2 = \"  <\\u65e5\\u672c\\u8a9e\\u306e\\u307f\\u306e\\u30a8\\u\n30ec\\u30e1\\u30f3\\u30c8\\u540d\\u3067\\u3082\\u30c0\\u30e1\\u3067\\u3057\\u3087>\\u65e5\\u6\n72c\\u8a9e\\u306e\\u307f\\u306e\\u30a8\\u30ec\\u30e1\\u30f3\\u30c8\\u540d\\u3082\\u30c0\\u30e\n1\\u3067\\u3057\\u3087</\\u65e5\\u672c\\u8a9e\\u306e\\u307f\\u306e\\u30a8\\u30ec\\u30e1\\u30f\n3\\u30c8\\u540d\\u3067\\u3082\\u30c0\\u30e1\\u3067\\u3057\\u3087>\\n\";\n    static final String rootend = \"</doc>\\n\";\n    static final String fname = \"testdata.xml\";\n    static final String fenc = \"UTF-8\";\n\n    public static void main(String[] args) {\n        StringBuffer buf = new StringBuffer();\n\n        buf.append(xmldecl);\n        buf.append(rootbgn);\n\n        for (int i=0; i<263; i++) {\n            buf.append(elem1);\n        }\n\n        buf.append(elem2);\n        buf.append(rootend);\n\n        String testdata = buf.toString();\n\n        try {\n            FileOutputStream fos = new FileOutputStream(fname);\n            fos.write(testdata.getBytes(fenc));\n            \n            fos.close();\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}"}, {"count": 1, "tags": [], "text": "The following patch to src/org/apache/xerces/readers/UTF8Reader.java\nseems to resolve the problem.\n----\n1398a1399\n>                 data = fMostRecentData;\n----\n\nBut, I'm not sure if it is really enough or it doesn't cause any degradation...", "attachment_id": null, "id": 29759, "creator": "moritaku@bx.jp.nec.com", "time": "2003-01-21T05:12:14Z", "bug_id": 16287, "creation_time": "2003-01-21T05:12:14Z", "is_private": false}]