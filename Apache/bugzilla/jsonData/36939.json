[{"count": 0, "tags": [], "bug_id": 36939, "attachment_id": null, "text": "I am trying to compile my code, which works fine on JAVA 1.4 with ANT 1.6.2, \nbut using JAVA 1.5, I get an error, which I dont understand.\n\nThis is urgent and would appreciate some help.\n\n[javac] /usr/local/ant/Bears/tempcodeMiletus/webApi/src/de/mud/telnet/ScriptHand\nler.java:30: warning: unmappable character for encoding UTF8\n[javac] * @author Matthias L. Jugel, Marcus Mei\ufffdner\n[javac] ^\n[javac] /usr/local/ant/Bears/tempcodeMiletus/webApi/src/de/mud/telnet/TelnetProt\nocolHandler.java:29: warning: unmappable character for encoding UTF8\n[javac] * <B>Maintainer:</B> Marcus Mei\ufffdner\n[javac] ^\n[javac] /usr/local/ant/Bears/tempcodeMiletus/webApi/src/de/mud/telnet/TelnetProt\nocolHandler.java:32: warning: unmappable character for encoding UTF8\n[javac] * @author Matthias L. Jugel, Marcus Mei\ufffdner\n[javac] ^\n[javac] /usr/local/ant/Bears/tempcodeMiletus/webApi/src/de/mud/telnet/TelnetWrap\nper.java:53: warning: unmappable character for encoding UTF8\n[javac] * @author Matthias L. Jugel, Marcus Mei\ufffdner\n[javac] ^\n[javac] error: error \nreading /usr/local/ant/Bears/tempcode/webApi/src/com/dnsalias/java/timer/Advance\ndTimer.java; java.util.zip.ZipException: error in opening zip file\n[javac] Note: * uses or overrides a deprecated API.\n[javac] Note: Recompile with -Xlint eprecation for details.\n[javac] 1 error\n[javac] 4 warnings", "id": 80809, "time": "2005-10-05T19:58:59Z", "creator": "aruneesh.salhotra@miletustrading.com", "creation_time": "2005-10-05T19:58:59Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 36939, "attachment_id": null, "text": "It works correctly when I generate the build using JAVA_HOME pointing to Java \n1.4.2_03 and _08. \n\n", "id": 80810, "time": "2005-10-05T20:02:16Z", "creator": "aruneesh.salhotra@miletustrading.com", "creation_time": "2005-10-05T20:02:16Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 36939, "attachment_id": null, "text": "This is not an ant issue.\nissue 1: character encoding\nJavac in java 1.5 is much more strict with regard to\nthe characters in java source files. By default on unix/linux\nthe character encoding is utf-8. With utf-8 characters outside the 127 range\nhave different encoding - and some byte sequences are not allowed.\nIt looks like you are encodeing using iso 8857-1 (latin1) and not utf-8 -\nhence the warning messages. Your options are a) change the encoding to utf-8\nb) tell javac to use the iso 8857 encodeing by useing the encoding attribute (I do\nnot know the value) or c) convert the characters to us-ascii (i.e. under 127)\nissue 2: classpath\nJavac in java 1.5 is much more strict with regard to the contents of the\nclasspath.\nIf you do >javac -classpath AdvancedTimer.java *.java\nwhere AdvancedTimer.java exists and is not a jar file, you will get an\nerror in java 1.5 but not in java 1.4.\nWith ant, it is easy to construct these invalid classpaths.\nfor example\n<target name=\"bad\">\n   <javac srcdir=\"src\">\n       <classpath>\n          <fileset dir=\"src\"/>\n       </classpath>\n   </javac>\n</target>\nwill fail giving the error:\nbad:\nCompiling 1 source file\nerror: error reading /home/preilly/learning/a/1.5/src/Test.java; error in\nopening zip file\n1 error\n", "id": 80829, "time": "2005-10-06T10:36:47Z", "creator": "peterreilly@apache.org", "creation_time": "2005-10-06T10:36:47Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 36939, "text": "It seems it is an issue with ANT itself, or atleast how it views classpath.\nRather I would say it is a java 1.5 feature (issue I would call it).\n\nI created a jar for the *.java, and then included that in the classpath.\n\n", "id": 80863, "time": "2005-10-06T20:14:21Z", "creator": "aruneesh.salhotra@miletustrading.com", "creation_time": "2005-10-06T20:14:21Z", "is_private": false, "attachment_id": null}]