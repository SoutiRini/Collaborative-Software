[{"count": 0, "tags": [], "bug_id": 53005, "attachment_id": null, "id": 155379, "time": "2012-03-29T20:55:07Z", "creator": "hashashin@gmail.com", "creation_time": "2012-03-29T20:55:07Z", "is_private": false, "text": "Was getting this error:\n\njavax.xml.transform.TransformerException: org.apache.fop.fo.ValidationException: \"fo:inline\" is not a valid child of \"fo:block\"!  (See position 1870:716)\n\nAfter talking with the folks in the docbook XSLT mailing list, they helped me finding out that:\n\n\"\"\nBased on the .fo file that Alberto sent to me, this appears to be a bug in FOP 1.0.  I can reproduce it by putting an indexterm inside an inline element inside a footnote. In general,  an indexterm generates an fo:wrapper element to hold the indexterm id marker.  When this fo:wrapper is inside an fo:inline, it appears to confuse FOP, but only when inside a footnote. Removing the fo:wrapper removes the error.  All other locations with that construction do not generate an error.  Two other XSL-FO processors did not produce an error.\n\"\"\n\nSomebody added:\n\n\"\"\nFYI, until recently indexterms were not allowed inside footnotes at all:\n  http://www.docbook.org/tdg5/en/html/footnote.html\nThey are allowed with v5.1:\n  http://www.docbook.org/tdg51/en/html/footnote.html\n\"\"\n\nThank you,\nAlberto"}, {"count": 1, "tags": [], "bug_id": 53005, "is_private": false, "id": 155384, "attachment_id": null, "creator": "pascal.sancho@takoma.fr", "creation_time": "2012-03-30T08:15:04Z", "time": "2012-03-30T08:15:04Z", "text": "Please,\ncan you:\n 1/ reformulate short description matching FOP vocabulary (indexterm and docbook are not handled by FOP)?\n 2/ attach a short XSL-FO (xml + xslt result) that demonstrates the issue?"}, {"count": 2, "tags": [], "bug_id": 53005, "attachment_id": 28532, "id": 157074, "time": "2012-04-02T20:04:53Z", "creator": "hashashin@gmail.com", "creation_time": "2012-04-02T20:04:53Z", "is_private": false, "text": "Created attachment 28532\nGenerated FO file"}, {"count": 3, "tags": [], "text": "Created attachment 28533\nOriginal DocBook document", "attachment_id": 28533, "id": 157075, "creator": "hashashin@gmail.com", "time": "2012-04-02T20:05:19Z", "bug_id": 53005, "creation_time": "2012-04-02T20:05:19Z", "is_private": false}, {"count": 4, "tags": [], "creator": "hashashin@gmail.com", "attachment_id": null, "text": "Hey,\n\nSorry for taking so much time, but I got some trouble on finding the portion that was giving trouble.\n\nI attached the docbook file, and the generated fo file. I can't attach the XSLT files, as they are too many :)\n\nPlease let me know how/if I can help.\n\nThank you\nAlberto", "id": 157076, "time": "2012-04-02T20:08:01Z", "bug_id": 53005, "creation_time": "2012-04-02T20:08:01Z", "is_private": false}, {"count": 5, "tags": [], "text": "this bug is due to isBlockItem() returning true for wrapper\n\n            } else if (!canHaveBlockLevelChildren && isBlockItem(nsURI, localName)) {\n                invalidChildError(loc, getParent().getName(), nsURI, getName(),\n                                  \"rule.inlineContent\");\n            } else {\n\nin particular isBlockItem() returns true for block *or* neutral, so this condition needs to be further qualified as:\n\n            } else if (!canHaveBlockLevelChildren && isBlockItem(nsURI, localName)\n                         && !isNeutralItem(nsURI, localName)) {", "is_private": false, "id": 157083, "creator": "gadams@apache.org", "time": "2012-04-02T21:56:38Z", "bug_id": 53005, "creation_time": "2012-04-02T21:56:38Z", "attachment_id": null}, {"count": 6, "tags": [], "bug_id": 53005, "attachment_id": null, "id": 157084, "time": "2012-04-02T21:57:14Z", "creator": "gadams@apache.org", "creation_time": "2012-04-02T21:57:14Z", "is_private": false, "text": "(In reply to comment #5)\n> this bug is due to isBlockItem() returning true for wrapper\n> \n>             } else if (!canHaveBlockLevelChildren && isBlockItem(nsURI,\n> localName)) {\n>                 invalidChildError(loc, getParent().getName(), nsURI, getName(),\n>                                   \"rule.inlineContent\");\n>             } else {\n> \n> in particular isBlockItem() returns true for block *or* neutral, so this\n> condition needs to be further qualified as:\n> \n>             } else if (!canHaveBlockLevelChildren && isBlockItem(nsURI,\n> localName)\n>                          && !isNeutralItem(nsURI, localName)) {\n\nsee Inline.java:120"}, {"count": 7, "tags": [], "bug_id": 53005, "is_private": false, "id": 157085, "attachment_id": 28534, "creator": "gadams@apache.org", "creation_time": "2012-04-02T21:59:28Z", "time": "2012-04-02T21:59:28Z", "text": "Created attachment 28534\nminimal FO test file"}, {"count": 8, "tags": [], "bug_id": 53005, "attachment_id": null, "id": 157108, "time": "2012-04-03T16:39:02Z", "creator": "gadams@apache.org", "creation_time": "2012-04-03T16:39:02Z", "is_private": false, "text": "http://svn.apache.org/viewvc?view=revision&revision=1309024"}]