[{"count": 0, "tags": [], "bug_id": 51787, "attachment_id": null, "text": "In the case when row (or rows) is already present in tableRows, the folowing code in the constructor will anyway add it for the second time:\n\nXWPFTableRow tabRow = (getRow(i) == null) ? createRow() : getRow(i);\ntableRows.add(tabRow);\n\nI've fixed that problem by replacing the code above with:\n\nXWPFTableRow tabRow = getRow(i);\nif (tabRow == null) {\n\ttabRow = createRow();\n\ttableRows.add(tabRow);\n}\n\nand it is working for me. However, I can not guarantee that I did not misssed something important.", "id": 149107, "time": "2011-09-08T13:40:25Z", "creator": "c_igaly@yahoo.co.uk", "creation_time": "2011-09-08T13:40:25Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 51787, "attachment_id": null, "id": 149124, "time": "2011-09-09T15:13:31Z", "creator": "apache@gagravarr.org", "creation_time": "2011-09-09T15:13:31Z", "is_private": false, "text": "Any chance you could write a short junit unit test to go with this? We can then use it to verify the fix, and ensure it doesn't get broken again in future"}, {"count": 2, "tags": [], "bug_id": 51787, "attachment_id": null, "text": "I could not find this in the code any more, it seems to have been fixed at some point, however I do not even find the code this way if I look at historical versions of XWPFTable, so not sure which version the suggested patch did target here...", "id": 191583, "time": "2016-06-12T17:17:44Z", "creator": "dominik.stadler@gmx.at", "creation_time": "2016-06-12T17:17:44Z", "is_private": false}]