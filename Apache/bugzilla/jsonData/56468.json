[{"count": 0, "tags": [], "creator": "scott.paffrath@gmail.com", "attachment_id": 31567, "id": 174922, "time": "2014-04-28T19:33:33Z", "bug_id": 56468, "creation_time": "2014-04-28T19:33:33Z", "is_private": false, "text": "Created attachment 31567\nThe corrupt file.\n\nThe second time a file is written the \"docProps/core.xml\" file is not included in the output and the result is a corrupt Excel file that cannot be opened.\n\nThis bug may be related :\nhttps://issues.apache.org/bugzilla/show_bug.cgi?id=55033\n\nI debugged this in 3.9 and confirmed it is still present in 3.10. Windows 7. Being new to the code base I could only track the bug as far as the following code in \"saveImpl\" of \"ZipPackage.java\". It executes on the first run but not the second.\n\n...\n\t\t\t// If the core properties part does not exist in the part list,\n\t\t\t// we save it as well\n\t\t\tif (this.getPartsByRelationshipType(PackageRelationshipTypes.CORE_PROPERTIES).size() == 0 &&\n                this.getPartsByRelationshipType(PackageRelationshipTypes.CORE_PROPERTIES_ECMA376).size() == 0    ) {\n\t\t\t\tlogger.log(POILogger.DEBUG,\"Save core properties part\");\n\n\t\t\t\t// We have to save the core properties part ...\n\t\t\t\tnew ZipPackagePropertiesMarshaller().marshall(\n                        this.packageProperties, zos);\n\t\t\t\t// ... and to add its relationship ...\n\t\t\t\tthis.relationships.addRelationship(this.packageProperties\n\t\t\t\t\t\t.getPartName().getURI(), TargetMode.INTERNAL,\n\t\t\t\t\t\tPackageRelationshipTypes.CORE_PROPERTIES, null);\n\t\t\t\t// ... and the content if it has not been added yet.\n\t\t\t\tif (!this.contentTypeManager\n\t\t\t\t\t\t.isContentTypeRegister(ContentTypes.CORE_PROPERTIES_PART)) {\n\t\t\t\t\tthis.contentTypeManager.addContentType(\n\t\t\t\t\t\t\tthis.packageProperties.getPartName(),\n\t\t\t\t\t\t\tContentTypes.CORE_PROPERTIES_PART);\n\t\t\t\t}\n\t\t\t}\n...\n\nTest code that replicates the error (\"test2.xlsx\" is corrupt) :\n\n    public static void main(String[] args) throws FileNotFoundException, IOException\n    {\n        XSSFWorkbook wb = new XSSFWorkbook();\n        XSSFSheet sheet = wb.createSheet();\n        XSSFRow row = sheet.createRow(0);\n        XSSFCell cell = row.createCell(0);\n        cell.setCellValue(\"Hi\");\n        \n        File f = new File(\"C:\\\\temp\\\\test.xlsx\");\n        try(FileOutputStream fout = new FileOutputStream(f))\n        {\n            wb.write(fout);\n        }\n        \n        f = new File(\"C:\\\\temp\\\\test2.xlsx\");\n        try(FileOutputStream fout = new FileOutputStream(f))\n        {\n            wb.write(fout);\n        }\n    }"}, {"count": 1, "tags": [], "bug_id": 56468, "attachment_id": null, "text": "The \"docProps/app.xml\" is also corrupt.\n\nThe correct content of the app.xml is written multiple times into the file. If the same workbook is written twice, the the same content is written twice into app.xml like in the attachment. If the workbook is written three times, there is thrice the same content in the app.xml and so on. This results in making app.xml an invalid xml file.\n\nI only tried it with 3.10-Final in Windows.", "id": 174951, "time": "2014-04-30T19:59:51Z", "creator": "ralph_g@gmx.de", "creation_time": "2014-04-30T19:59:51Z", "is_private": false}, {"count": 2, "tags": [], "creator": "ralph_g@gmx.de", "text": "Created attachment 31576\nThis patch clears the data of the PackagePart for docProps/app.xml before saving it.\n\nI added a little patch which fixes the duplicate content in the \"docProps/app.xml\" file. The \"docProps/core.xml\" file is still missing but at least LibreOffice can read the xlsx files now.\n\nThis patch clears the data of the PackagePart for docProps/app.xml before saving it. I am new to POI so I don't know if this patch has unintended effects, but the test for POIXMLProperties has no failures.", "id": 174953, "time": "2014-04-30T22:47:55Z", "bug_id": 56468, "creation_time": "2014-04-30T22:47:55Z", "is_private": false, "attachment_id": 31576}, {"count": 3, "tags": [], "creator": "ralph_g@gmx.de", "attachment_id": 31577, "id": 174954, "time": "2014-04-30T23:02:45Z", "bug_id": 56468, "creation_time": "2014-04-30T23:02:45Z", "is_private": false, "text": "Created attachment 31577\nThis patch clears the data of the PackagePart for docProps/app.xml before saving it\n\nSorry, wrong file. Now the patch."}, {"count": 4, "tags": [], "bug_id": 56468, "attachment_id": 31578, "text": "Created attachment 31578\nThis patch clears the data of the PackagePart for docProps/app.xml before saving it", "id": 174955, "time": "2014-05-01T07:31:12Z", "creator": "ralph_g@gmx.de", "creation_time": "2014-05-01T07:31:12Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 56468, "attachment_id": 31579, "text": "Created attachment 31579\n31577: This patch clears the data of the PackagePart for docProps/app.xml before saving it\n\nI'm really sorry for the many comments, but now it seems to work. Added a cleaned up patch.txt.", "id": 174956, "time": "2014-05-01T07:34:15Z", "creator": "ralph_g@gmx.de", "creation_time": "2014-05-01T07:34:15Z", "is_private": false}, {"count": 6, "tags": [], "creator": "ralph_g@gmx.de", "attachment_id": 31581, "id": 174962, "time": "2014-05-01T16:15:53Z", "bug_id": 56468, "creation_time": "2014-05-01T16:15:53Z", "is_private": false, "text": "Created attachment 31581\nPatch for core.xml and app.xml\n\nI think I have found two problem which caused the missing core.xml. in the getPartsByRelationshipType(String) in OPCPackage.\n\nThe first problem is that the result of getPart(rel) in getPartsByRelationshipType(String) is always added to the resulting ArrayList. Even if getPart(rel) returns null.\nSo the size is never 0 if the relationshipType was added once, but the core is still not on the part list and will not be written into the zip file a second or third time. \n\nThe second problem is that in the following if block in saveImpl(zipOutputStream) in ZipPackage\nif (this.getPartsByRelationshipType(PackageRelationshipTypes.CORE_PROPERTIES).size() == 0 && \nthis.getPartsByRelationshipType(PackageRelationshipTypes.CORE_PROPERTIES_ECMA376).size() == 0    ) {\n...\n}\nthe core is written to the zip output stream instead of added to the part list.\n\nI have added a new diff.txt which includes the old one. Though I'm also new to the code base I don't know if the patch causes other problems."}, {"count": 7, "tags": [], "bug_id": 56468, "attachment_id": null, "id": 174970, "time": "2014-05-01T23:35:22Z", "creator": "scott.paffrath@gmail.com", "creation_time": "2014-05-01T23:35:22Z", "is_private": false, "text": "Ralph, thank you for taking the time to do this. I will try out the changes tommorrow or ASAP."}, {"count": 8, "tags": [], "creator": "scott.paffrath@gmail.com", "attachment_id": null, "id": 175031, "time": "2014-05-05T18:16:51Z", "bug_id": 56468, "creation_time": "2014-05-05T18:16:51Z", "is_private": false, "text": "My initial report indicated that bug 55033 may be related. Please ignore that remark. I cannot even replicate that bug while testing to see if Ralph's patch fixed it.\n\nThe patch looks to me like it fixes the problems with the posted code. Thanks again! However, I did discover that adding a line to the test breaks another part.\n\nIf you add something like \n\n...\ncell.setCellValue(\"Hi\");\nsheet.setRepeatingRows(new CellRangeAddress(0, 0, 0, 0));\n...\n\ncauses\norg.apache.xmlbeans.impl.values.XmlValueDisconnectedException\n\tat org.apache.xmlbeans.impl.values.XmlObjectBase.check_orphaned(XmlObjectBase.java:1213)\n\tat org.apache.xmlbeans.impl.values.XmlObjectBase.newCursor(XmlObjectBase.java:243)\n\tat org.apache.xmlbeans.impl.values.XmlComplexContentImpl.arraySetterHelper(XmlComplexContentImpl.java:1073)\n\tat org.openxmlformats.schemas.spreadsheetml.x2006.main.impl.CTDefinedNamesImpl.setDefinedNameArray(Unknown Source)\n\tat org.apache.poi.xssf.usermodel.XSSFWorkbook.saveNamedRanges(XSSFWorkbook.java:1288)\n\tat org.apache.poi.xssf.usermodel.XSSFWorkbook.commit(XSSFWorkbook.java:1309)\n\tat org.apache.poi.POIXMLDocumentPart.onSave(POIXMLDocumentPart.java:322)\n\tat org.apache.poi.POIXMLDocument.write(POIXMLDocument.java:173)\n\tat com.myprovident.excel.XLWorkbook.write(XLWorkbook.java:114)\n\n\nI believe saveNamedRanges recreates the CTDefinedName collection in the underlying CTWorkbook but does not recreate the enveloping XSSFName collection in the enveloping XSSFWorkbook. I found a fix by replacing the code \n\nnames.setDefinedNameArray(nr);\nworkbook.setDefinedNames(names);\n\nwith the code (some of which is based on a snippet from function \"onDocumentRead\")\n\nnames.setDefinedNameArray(nr);\nif(workbook.isSetDefinedNames()) {\n    workbook.unsetDefinedNames();\n}\nworkbook.setDefinedNames(names);\n            \n// Re-process the named ranges\nnamedRanges = new ArrayList<XSSFName>();\nif(workbook.isSetDefinedNames()) {\n    for(CTDefinedName ctName : workbook.getDefinedNames().getDefinedNameArray()) {\n        namedRanges.add(new XSSFName(ctName, this));\n    }\n}\n\n\nDoes this look reasonable to you? My tests have the combination of your patch and this change working great. Do you think this should be part of the same patch or under a different bug report?"}, {"count": 9, "tags": [], "bug_id": 56468, "attachment_id": 31594, "id": 175044, "time": "2014-05-05T22:44:16Z", "creator": "scott.paffrath@gmail.com", "creation_time": "2014-05-05T22:44:16Z", "is_private": false, "text": "Created attachment 31594\nPatch for XmlValueDisconnectedException"}, {"count": 10, "tags": [], "text": "Created attachment 31599\nPatch for XmlValueDisconnectedException\n\nThis includes a test case.", "attachment_id": 31599, "bug_id": 56468, "id": 175069, "time": "2014-05-06T23:11:10Z", "creator": "scott.paffrath@gmail.com", "creation_time": "2014-05-06T23:11:10Z", "is_private": false}, {"count": 11, "tags": [], "bug_id": 56468, "attachment_id": null, "text": "Thank you for the patch.\nI've applied it with svn ver r1594721, with some modifications", "id": 175227, "time": "2014-05-14T21:17:28Z", "creator": "kiwiwings@apache.org", "creation_time": "2014-05-14T21:17:28Z", "is_private": false}]