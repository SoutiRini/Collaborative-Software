[{"count": 0, "tags": [], "bug_id": 30319, "attachment_id": null, "id": 61119, "time": "2004-07-26T09:58:30Z", "creator": "ejb@klomp.org", "creation_time": "2004-07-26T09:58:30Z", "is_private": false, "text": "I couldn't get the euro symbol to work in a DataFormat.\nThe formatting String that Excel uses for the \"Financial, EU 123\" format is:\n\"_([$\\u20ac-2]\\\\ * #,##0.00_);_([$\\u20ac-2]\\\\ * \\\\(#,##0.00\\\\);_([$\\u20ac-2]\\\\ *\n\\\"-\\\"??_);_(@_)\"\n\nI could read this with the HSSF usermodel classes from a workbook created by\nExcel, but when trying to create a workbook the character would change into a\nlogical-not symbol.\n\nAfter some searching in the hssf.record package I found the class FormatRecord\nwhich has a method setUnicodeFlag, but this method isn't called when the\nusermodel creates a DataFormat.\n\nI fixed it by changing the class org.apache.poi.hssf.model.Workbook (not\nHSSFWorkbook)\nIn its method \"public short createFormat( String format )\" I added the line:\nrec.setUnicodeFlag( true );\n\nAfter this change, euro symbols work fine in a DataFormat."}, {"count": 1, "tags": [], "creator": "rostro_b@yahoo.com", "is_private": false, "text": "Your solution works fine, I've tested the fix in my XLS reports with IBM JRE \n1.3.1. and Excel 2000. Euro char in format doesn't make problems anymore. Nice. \nThanks.", "id": 70281, "time": "2005-01-31T20:35:11Z", "bug_id": 30319, "creation_time": "2005-01-31T20:35:11Z", "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 30319, "attachment_id": null, "id": 70282, "time": "2005-01-31T20:41:19Z", "creator": "avik@apache.org", "creation_time": "2005-01-31T20:41:19Z", "is_private": false, "text": "Someone needs to write some tests to ensure that this fix does not break other\nfunctionality. I'm paranoid!"}, {"count": 3, "attachment_id": null, "creator": "rostro_b@yahoo.com", "is_private": false, "id": 70284, "time": "2005-01-31T21:14:43Z", "bug_id": 30319, "creation_time": "2005-01-31T21:14:43Z", "tags": [], "text": "I would say, it might be good to have a more general look to string conversions \nUnicode -> Excel and think about how to find a solution to generally avoid such \nproblems - there are some more bugs related to Unicode and/or special \ncharacters: 22957, 27921, 30810, 22873 \nI aggree with 22957, that Unicode shoud be always default option if calling \nanything from Java."}, {"count": 4, "tags": [], "bug_id": 30319, "text": "There is a difference between ordinary texts in a cell and the text in a format\nrecord, and they are not handled identically.\n\n I like POI. I've used it in several projects, but I've always had to patch it.\nI live in the Netherlands, and customers need the euro sign in generated sheets;\nthey always need to include financial information.\n\nEurope has almost 700 million inhabitants, and a lot of software developers, so\nallowing POI to be used in Europe instantly gives it a lot of mindshare that it\ndoesn't have now.\n\nMay I - respectfully - suggest that the Euro character deserves specific\nattention. More attention than support for esoteric character sets in general,\nin my opinion.\n\nI hope you agree.", "id": 70299, "time": "2005-02-01T10:43:52Z", "creator": "ejb@klomp.org", "creation_time": "2005-02-01T10:43:52Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 30319, "text": "Renamed bug : 'Euro symbol' instead of 'Unicode' to more properly express the\nnature of the issue.", "id": 70898, "time": "2005-02-13T17:37:13Z", "creator": "ejb@klomp.org", "creation_time": "2005-02-13T17:37:13Z", "is_private": false, "attachment_id": null}, {"count": 6, "tags": [], "bug_id": 30319, "attachment_id": null, "id": 80759, "time": "2005-10-04T22:33:27Z", "creator": "oliver.siegmar@xams.org", "creation_time": "2005-10-04T22:33:27Z", "is_private": false, "text": "This bug is really annoying. Could someone apply the proposed workaround/fix?\nThis bug is open for more than a year and the fix looks trivial."}, {"count": 7, "attachment_id": null, "creator": "jheight@apache.org", "is_private": false, "id": 84145, "time": "2006-01-03T08:29:56Z", "bug_id": 30319, "creation_time": "2006-01-03T08:29:56Z", "tags": [], "text": "I have implemnted a fix in SVN, however it is not as suggested in the Workbook,\nbut rather in the low level FormatRecord.\n\nConfirmed that it works with the following code:\n\nPlease check on a euro excel version, but ill close since i think that it is now\nfixed.\n\n\nimport org.apache.poi.hssf.usermodel.*;\nimport java.io.*;\n\npublic class Test {\n\n  public static void main(String[] args) {\n    try {\n      long time1 = System.currentTimeMillis();\n//      HSSFWorkbook wb = new HSSFWorkbook(new FileInputStream(new File(\n//          \"c:/workbook-orig.xls\")));\n//      wb.write(new FileOutputStream(new File(\"c:/workbook-out.xls\")));\n//\n      HSSFWorkbook wb = new HSSFWorkbook();\n      HSSFDataFormat df = wb.createDataFormat();\n      short fmt = df.getFormat(\"_([$\\u20ac-2]\\\\\\\\\\\\ *\n#,##0.00_);_([$\\u20ac-2]\\\\\\\\\\\\ * \\\\\\\\\\\\(#,##0.00\\\\\\\\\\\\);_([$\\u20ac-2]\\\\\\\\\\\\\n*\\\\\\\"\\\\-\\\\\\\\\\\"??_);_(@_)\");\n      HSSFSheet s = wb.createSheet(\"TestSheet\");\n\n      HSSFRow r = s.createRow(0);\n      HSSFCell c = r.createCell((short)1);\n      c.setCellValue(12.34);\n      c.getCellStyle().setDataFormat(fmt);\n            \n      wb.write(new FileOutputStream(new File(\"c:/test1_out.xls\")));\n      System.out.println(\"Elapsed :\"+(System.currentTimeMillis()-time1));\n    } catch (Exception ex) {\n      ex.printStackTrace();\n    }\n  }\n}\n"}, {"count": 8, "tags": [], "creator": "tellmebout-apache@yahoo.com", "attachment_id": null, "is_private": false, "id": 86527, "time": "2006-03-06T16:06:32Z", "bug_id": 30319, "creation_time": "2006-03-06T16:06:32Z", "text": "\npoi-2.5.1-final-20040804 has this bug. Which version should I get to get the\ncorrections? Are binaries available?\nThx"}, {"count": 9, "tags": [], "bug_id": 30319, "attachment_id": 17967, "id": 87211, "time": "2006-03-24T13:34:31Z", "creator": "tellmebout-apache@yahoo.com", "creation_time": "2006-03-24T13:34:31Z", "is_private": false, "text": "Created attachment 17967\nCorrection to the org.apache.poi.hssf.record.FormatRecord class\n\nI have seen the corrections made to FormatRecord class and this really solved\nthe problem. However, I am not confident to get the whole source tree from\nCVS/SVN and build it myself. As all I wanted was to have the Euro symbol in my\nsheets created with release 2.5.1, this seemed to be an easy workaround. By\nplacing the attached jar in the CLASSPATH *BEFORE* poi-2.5.1-20040804.jar Euro\nsymbols will be stored correctly in Excel cells (and maybe other Unicode\nproblems)."}, {"count": 10, "tags": [], "bug_id": 30319, "text": "Created attachment 17968\nSource to the above attachment\n\nThis is the source for the jar above. It was created by checking out the source\nfor RELEASE_2_5_1 and adding the corrections to setFormatString. As in release\n2.5.1 there was no StringUtil.hasMultibyte() method, that method was added to\nFormatRecord.", "id": 87212, "time": "2006-03-24T13:38:35Z", "creator": "tellmebout-apache@yahoo.com", "creation_time": "2006-03-24T13:38:35Z", "is_private": false, "attachment_id": 17968}]