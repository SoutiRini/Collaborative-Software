[{"count": 0, "tags": [], "bug_id": 49516, "is_private": false, "text": "Created attachment 25652\nsvg with three rectangles\n\nTo reproduce:\n\n1) Have an FO file in which an SVG (I have only tested with external-graphics)\n\n2) Inside the SVG, have a gradient defined and two elements e.g. rectangles. Set the stroke opacity of the first element to a value near 0. NOTE: The order is important - the stroke opacity must be set on the element preceding the gradient filled element.\n\n3) Make the second element have a gradient fill.\n\nRESULT: The second element's gradient fill will have the same opacity as the stroke of the preceding element.\n\n** Possible cause **\nThis is due to Batik's GraphicContext.setPaint() method replacing the \"foreground\" Color attribute if it receives a Color instance as a parameter (due to a \"paint instanceof Color\" check). The \"foreground\" of the GraphicsContext is later used to set the fill opacity in the line inside PDFGraphics2D.fill() method:\n\napplyAlpha(c.getAlpha(), OPAQUE);\n\nHowever in this case, batik's GraphicContext.setPaint() is receiving a LinearGradientPaint object which does not inherit from Color. Thus it does not set the \"foreground\" attribute, meaning that an alpha from a previous setPaint() will be used - in this case, the stroke opacity of the preceding SVG elemnt.\n\n** Possible hack **\nSince the applyAlpha line in PDFGraphics2D.fill() will not be correct when the paint returned by getPaint() is a gradient, I added an instanceof check so that it only runs when getPaint() returns an instance of Color. This is not a thouroughly thought-out fix and therefore should just be regarded as a workaround hack.\n\nAttaching SVG file and FO, plus hack (most likely not suitable as fix) to get around issue.", "id": 137965, "time": "2010-06-29T04:03:08Z", "creator": "dleung@iress.com.au", "creation_time": "2010-06-29T04:03:08Z", "attachment_id": 25652}, {"count": 1, "tags": [], "creator": "dleung@iress.com.au", "text": "Created attachment 25653\nfo to accompany above SVG", "id": 137966, "time": "2010-06-29T04:03:49Z", "bug_id": 49516, "creation_time": "2010-06-29T04:03:49Z", "is_private": false, "attachment_id": 25653}, {"count": 2, "tags": [], "bug_id": 49516, "is_private": false, "text": "Comment on attachment 25652\nsvg with three rectangles\n\nSVG with three rectangles. The bottom left rectangle should have a fully opaque gradient fill, but does not in FOP's PDF output.", "id": 137967, "time": "2010-06-29T04:04:16Z", "creator": "dleung@iress.com.au", "creation_time": "2010-06-29T04:04:16Z", "attachment_id": 25652}, {"count": 3, "tags": [], "bug_id": 49516, "is_private": false, "text": "Created attachment 25654\nPDF with incorrect fill opacity on bottom left rectangle", "id": 137968, "time": "2010-06-29T04:06:24Z", "creator": "dleung@iress.com.au", "creation_time": "2010-06-29T04:06:24Z", "attachment_id": 25654}, {"attachment_id": 25655, "tags": [], "bug_id": 49516, "text": "Created attachment 25655\nPDF after fix (hack)", "count": 4, "id": 137969, "time": "2010-06-29T04:07:42Z", "creator": "dleung@iress.com.au", "creation_time": "2010-06-29T04:07:42Z", "is_private": false}, {"count": 5, "attachment_id": 25656, "bug_id": 49516, "text": "Created attachment 25656\nWorkaround hack", "id": 137970, "time": "2010-06-29T04:08:32Z", "creator": "dleung@iress.com.au", "creation_time": "2010-06-29T04:08:32Z", "tags": [], "is_private": false}, {"count": 6, "tags": [], "bug_id": 49516, "is_private": false, "id": 138018, "attachment_id": 25656, "creator": "dleung@iress.com.au", "creation_time": "2010-06-29T20:34:53Z", "time": "2010-06-29T20:34:53Z", "text": "Comment on attachment 25656\nWorkaround hack\n\nDoesn't work, see next patch upload"}, {"count": 7, "tags": [], "bug_id": 49516, "text": "Created attachment 25664\nWork around hack v2", "id": 138019, "time": "2010-06-29T20:35:47Z", "creator": "dleung@iress.com.au", "creation_time": "2010-06-29T20:35:47Z", "is_private": false, "attachment_id": 25664}, {"count": 8, "tags": [], "creator": "gadams@apache.org", "text": "resetting P2 open bugs to P3 pending further review", "id": 157395, "time": "2012-04-07T01:42:23Z", "bug_id": 49516, "creation_time": "2012-04-07T01:42:23Z", "is_private": false, "attachment_id": null}, {"count": 9, "tags": [], "bug_id": 49516, "is_private": false, "text": "Created attachment 29221\npatch for xmlgraphics\n\nthe patch previously submitted is not the best approach in my opinion. the problem in fact happens in xmlgraphics, not fop, and is due to the fact that the GraphicContext.setPaint() does not update the foreground color if the paint in not a Color (if it is a LinearGradientPaint, as in the example submitted). this means that the opacity from the previous element is used in the new element. the patch submitted avoids that by resetting the foreground color to the default (black, full opacity).", "id": 161355, "time": "2012-08-13T23:20:38Z", "creator": "lmpmbernardo@gmail.com", "creation_time": "2012-08-13T23:20:38Z", "attachment_id": 29221}, {"attachment_id": null, "tags": [], "creator": "lmpmbernardo@gmail.com", "text": "applied: http://svn.apache.org/viewvc?view=revision&revision=1402820", "count": 10, "id": 162988, "time": "2012-10-27T16:49:39Z", "bug_id": 49516, "creation_time": "2012-10-27T16:49:39Z", "is_private": false}]