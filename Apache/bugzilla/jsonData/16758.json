[{"count": 0, "tags": [], "bug_id": 16758, "attachment_id": null, "is_private": false, "id": 30651, "time": "2003-02-04T14:31:44Z", "creator": "mason.blackwood@three.co.uk", "creation_time": "2003-02-04T14:31:44Z", "text": "The formatNumber tags for both rt and el are not escaping characters before \nembedding into the response. Our web app is currently using JSTL 1.0.1, but \nI've downloaded the latest nightly build and the problem still exists. \n\nFor example, request locale is en_GB, and I use this in my JSP...\n\n<format:formatNumber value=\"${oneOffCharge}\" type=\"currency\" />\n\n... and assuming oneOffCharge is set to 12.34, the response generated (viewing \nthe HTML source) will be...\n\n\u00a312.34\n\nThe \u00a3 is an HTML escape character, and should be formatted as &#163; before \nbeing embedded in the response, so the resulting HTML should read...\n\n&#163;12.34\n\nHaving a quick look at the code, both tags extend \norg.apache.taglibs.standard.tag.common.fmt.FormatNumberSupport, in this class, \nin the doEndTag() method, I added...\n\nformatted = HtmlEncoder.encode(formatted);\n\n[org.apache.taglibs.standard.lang.jpath.encoding.HtmlEncoder supplied with the \nstandard.jar]\n\n... just before...\n\n        if (var != null) {\n            pageContext.setAttribute(var, formatted, scope);\n        } else {\n            try {\n                pageContext.getOut().print(formatted);\n            } catch (IOException ioe) {\n                throw new JspTagException(ioe.getMessage());\n            }\n        }\n\n... and this solved the problem. Hopefully it will point you in the right \ndirection.\n\nKind Rgds\nMason Blackwood"}, {"attachment_id": null, "tags": [], "bug_id": 16758, "text": "The behavior of formatNumber is according to spec.\nThe tag has not been designed to perform any sort of escaping\non the output value.", "count": 1, "id": 30769, "time": "2003-02-05T18:38:08Z", "creator": "pierre.delisle@sun.com", "creation_time": "2003-02-05T18:38:08Z", "is_private": false}]