[{"count": 0, "tags": [], "bug_id": 56658, "attachment_id": null, "id": 175976, "creation_time": "2014-06-22T16:59:35Z", "time": "2014-06-22T16:59:35Z", "creator": "knst.kolinko@gmail.com", "text": "When a context starts up, its servlet mappings are registered in a Mapper.\n\nThe issue is that MapperListener.registerContext() is implemented as\n\n[[[\n        mapper.addContextVersion(...);\n        for (Container container : context.findChildren()) {\n            registerWrapper((Wrapper) container);\n        }\n]]]\n\nIt registers a context first, then registers it wrappers.  So there is a time slot when the Context have already been registered in the Mapper, but its Wrappers are not yet registered there.  If a request comes it, it can be mapped to a wrong servlet.\n\nIn CoyoteAdapter.postParseRequest there is code that protects from this issue when a Context is being reloaded.\n- An \"if (request.getContext().getPaused())\" check.\n\nIn case if Context is deployed on an already running server, there is no protection.\n\nI think the way to fix this it to amend the Mapper.addContextVersion() method and pass wrapper mappings to it. In this case the Mapper should be create a correct full configuration for a web application at once.\n\nAlternatively, we may change the default value of StandardContext.paused flag to be \"true\" and switch it to \"false\" when the context has already started up.\n\nAlternatively, we may check Context state in CoyoteAdapter.postParseRequest. Can this get rid of the \"started\" flag?", "is_private": false}, {"count": 1, "text": "Fixed in Tomcat 8 (r1606714) and will be in 8.0.10 onwards.", "bug_id": 56658, "attachment_id": null, "id": 176119, "time": "2014-06-30T12:39:27Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2014-06-30T12:39:27Z", "tags": [], "is_private": false}, {"count": 2, "tags": [], "bug_id": 56658, "attachment_id": null, "is_private": false, "id": 176310, "time": "2014-07-09T12:21:13Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2014-07-09T12:21:13Z", "text": "Fixed in Tomcat 7 (r1609112) and will be in 7.0.55 onwards."}, {"count": 3, "tags": [], "bug_id": 56658, "attachment_id": null, "is_private": false, "id": 176337, "time": "2014-07-10T20:56:21Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2014-07-10T20:56:21Z", "text": "The fix for this issue caused a regression for web application reload.\n(It was reported on the [VOTE] thread for 8.0.10 release candidate).\n\nSteps to reproduce:\n1. Start Tomcat\n2. Open http://localhost:8080/examples/index.html\nThe page loads, as expected.\n\n3. Touch $CATALINA_BASE/webapps/examples/WEB-INF/web.xml. This causes reload of the examples webapp.\n4. Wait until reload of examples webapp completes successfully.\n\n5. Refresh (Ctrl+F5) http://localhost:8080/examples/index.html\nExpected: the page\nActual: error 404\n\nFrom debugging:\n---------------\nAfter reload the lists of wrappers in MApper$ContextVersion object for this web application are empty. In other words, none of the servlets of this webapp are registered with the the mapper.\n\nThe cause:\n-----------\nOld code did \n[[[\n        mapper.addContextVersion(...);\n        for (Container container : context.findChildren()) {\n            registerWrapper((Wrapper) container);\n        }\n]]]\n\nThe first call \"addContextVersion(...)\" after reload tried to re-register the same context with the mapper. As the context has already been registered, the call actually failed, but subsequent \"registerWrapper()\" calls did work successfully.\n\nThe new code essentially skips registration of wrappers if \"addContextVersion\" fails."}, {"count": 4, "tags": [], "bug_id": 56658, "text": "(In reply to Konstantin Kolinko from comment #3)\n\nFixed in trunk by r1610186 and will be in 8.0.11 onwards.\nFixed in tc7.0.x by r1610199 and will be in 7.0.55 onwards.", "id": 176376, "time": "2014-07-13T14:38:09Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2014-07-13T14:38:09Z", "is_private": false, "attachment_id": null}]