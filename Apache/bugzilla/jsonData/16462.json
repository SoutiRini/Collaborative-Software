[{"text": "A way is needed to check if log4j (LoggerRepository?) has been configured. \nComponents need to seamlessly integrate with an application (i.e. leverage \nlog4j configuration if exists, use files, levels, etc..).  \n\nThere are other ways around this problem:\n1) Properties could be used to tell the components whether or not to \ninitialize, which initialization file to use, etc... \n2) Components could use a specified log4j.xml file regardless of previous \nconfigurations.\nBoth solutions require programmer intervention and knowledge of log4j. An \nautomated solution would be extremely helpful. A static or non-static method \ndefined in Logger, would be ideal. Perhaps, something like:\npublic class MyClass\n{\nprivate Logger log = Logger.getLogger (...);\n\npublic MyClass ()\n{\n  if (!log.isRepositoryConfigured()) // If it is not configured\n      DOMConfigurator.configure (...); // then configure it.\n}", "tags": [], "bug_id": 16462, "is_private": false, "count": 0, "id": 30118, "time": "2003-01-27T17:13:54Z", "creator": "jim.mack@cox.net", "creation_time": "2003-01-27T17:13:54Z", "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 16462, "text": "Log4j 1.3 provides LoggerRepository#isPristine.  Log4j 1.2 will not.", "count": 1, "id": 68347, "time": "2004-12-13T15:55:42Z", "creator": "yoavs@computer.org", "creation_time": "2004-12-13T15:55:42Z", "is_private": false}]