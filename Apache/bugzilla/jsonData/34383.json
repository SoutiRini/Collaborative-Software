[{"count": 0, "tags": [], "bug_id": 34383, "is_private": false, "text": "I would like to request to add XML Schema assertion. Below is my code that I \nhave written. Please review.\n\nDave\n\n/************************\n#message.properties\n*/\nxmlschema_assertion_title = XML Schema Assertion\nxmlschema_assertion_label = File Name:\n\n//********************************************************************\n//XMLSchemaAssertionGUI.java\n/*\n * Copyright 2001-2004 The Apache Software Foundation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * \n*/\n\npackage org.apache.jmeter.assertions.gui;\n\nimport java.awt.BorderLayout;\nimport javax.swing.BorderFactory;\nimport javax.swing.JLabel;\nimport javax.swing.JPanel;\nimport javax.swing.JTextField;\nimport javax.swing.event.ChangeEvent;\nimport org.apache.jmeter.assertions.XMLSchemaAssertion;\nimport org.apache.jmeter.gui.util.HorizontalPanel;\nimport org.apache.jmeter.gui.util.VerticalPanel;\nimport org.apache.jmeter.testelement.TestElement;\nimport org.apache.jmeter.util.JMeterUtils;\nimport org.apache.jorphan.logging.LoggingManager;\nimport org.apache.log.Logger;\n\n/**\n * XMLSchemaAssertionGUI.java\n * @author <a href=\"mailto:d.maung@mdl.com\">Dave Maung</a>\n *\n */\n\npublic class XMLSchemaAssertionGUI extends AbstractAssertionGui \n{\n\t //class attributes\n\t  transient private static Logger log = \nLoggingManager.getLoggerForClass();\n\t  private JTextField xmlSchema;\n\t\n\t/**\n     * The constructor.\n     */\n    public XMLSchemaAssertionGUI()\n    {\n        init();\n    }\n\n    /**\n     * Returns the label to be shown within the JTree-Component.\n     */\n    public String getLabelResource()\n    {\n        return \"xmlschema_assertion_title\";\n    }\n    \n    /**\n     * create Test Element\n     */\n    public TestElement createTestElement()\n    {\n        XMLSchemaAssertion el = new XMLSchemaAssertion();\n        modifyTestElement(el);\n        return el;\n    }\n\n    /**\n     * Modifies a given TestElement to mirror the data in the gui components.\n     *\n     * @see org.apache.jmeter.gui.JMeterGUIComponent#modifyTestElement\n(TestElement)\n     */\n    public void modifyTestElement(TestElement inElement) {\n\n        log.debug(\"XMLSchemaAssertionGui.modifyTestElement() called\");\n        configureTestElement(inElement);\n        ((XMLSchemaAssertion) inElement).setXsdFileName(xmlSchema.getText());\n      }\n\n\n    /**\n     * Configures the associated test element.\n     * @param el\n     */\n    public void configure(TestElement el)\n    {\n        super.configure(el);\n    }\n\n\n    /**\n     * Inits the GUI.\n     */\n    private void init()\n    {\n    \t setLayout(new BorderLayout(0, 10));\n    \t    setBorder(makeBorder());\n\n    \t    add(makeTitlePanel(), BorderLayout.NORTH);\n\n    \t    JPanel mainPanel = new JPanel(new BorderLayout());\n\n    \t    // USER_INPUT\n    \t    VerticalPanel assertionPanel = new VerticalPanel();\n    \t    assertionPanel.setBorder(BorderFactory.createTitledBorder\n(BorderFactory.createEtchedBorder(), \"XML Schema\"));\n\n    \t    //doctype\n    \t    HorizontalPanel xmlSchemaPanel = new HorizontalPanel();\n    \t    \n    \t    xmlSchemaPanel.add(\n    \t            new JLabel(JMeterUtils.getResString\n(\"xmlschema_assertion_label\")));\n\n    \t        xmlSchema = new JTextField(26);\n    \t        xmlSchemaPanel.add(xmlSchema);\n    \t        \n    \t        \n    \t    assertionPanel.add(xmlSchemaPanel);\n\n    \t    mainPanel.add(assertionPanel, BorderLayout.NORTH);\n    \t    add(mainPanel, BorderLayout.CENTER);\n    }\n    \n  \n    public void stateChanged(ChangeEvent e) {\n        log.debug(\"XMLSchemaAssertionGui.stateChanged() called\");\n      }\n    \n}\n\n\n\n//**************************************************************************\n//XMLSchemaAssertion.java\n/*\n * Copyright 2003-2004 The Apache Software Foundation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * \n */\npackage org.apache.jmeter.assertions;\nimport java.io.Serializable;\nimport java.io.StringReader;\nimport javax.xml.parsers.*;\nimport org.apache.jmeter.samplers.SampleResult;\nimport org.apache.jmeter.testelement.AbstractTestElement;\nimport org.apache.jorphan.logging.LoggingManager;\nimport org.apache.log.Logger;\nimport org.w3c.dom.Document;\nimport org.xml.sax.ErrorHandler;\nimport org.xml.sax.InputSource;\nimport org.xml.sax.SAXParseException;\n\n/**\n * XMLSchemaAssertion.java\n * Validate XML Schema\n * @author <a href=\"mailto:d.maung@mdl.com\">Dave Maung</a>\n *\n */\npublic class XMLSchemaAssertion extends AbstractTestElement implements\n        Serializable, Assertion \n{\n    public static final String JAXP_SCHEMA_LANGUAGE \n= \"http://java.sun.com/xml/jaxp/properties/schemaLanguage\";\n    public static final String W3C_XML_SCHEMA \n= \"http://www.w3.org/2001/XMLSchema\";\n    public static final String JAXP_SCHEMA_SOURCE \n= \"http://java.sun.com/xml/jaxp/properties/schemaSource\";\n    private static final Logger log = LoggingManager.getLoggerForClass();\n    public static final String XSD_FILENAME_KEY \n= \"xmlschema_assertion_filename\";\n    private StringBuffer failureMessage = new StringBuffer();\n\n  /**\n   * getResult\n   * \n   */\n    public AssertionResult getResult(SampleResult response) \n    {\n        AssertionResult result = new AssertionResult();\n        if (response.getResponseData() == null) {\n            return setResultForNull(result);\n        }\n        result.setFailure(false);\n        String resultData = new String(\n                getResultBody(response.getResponseData()));\n        \n        String xsdFileName = getXsdFileName();\n        setSchemaResult(result, resultData, xsdFileName);\n        return result;\n    }\n\n    protected AssertionResult setResultForNull(AssertionResult result) \n    {\n        result.setError(false);\n        result.setFailure(true);\n        result.setFailureMessage(\"Response was null\");\n        return result;\n    }\n\n    /**\n     * Return the body of the http return.\n     */\n    private byte[] getResultBody(byte[] resultData) \n    {\n        for (int i = 0; i < (resultData.length - 1); i++) {\n            if (resultData[i] == '\\n' && resultData[i + 1] == '\\n') {\n                return getByteArraySlice(resultData, (i + 2),\n                        resultData.length - 1);\n            }\n        }\n        return resultData;\n    }\n\n    /**\n     * Return a slice of a byte array\n     */\n    private byte[] getByteArraySlice(byte[] array, int begin, int end) \n    {\n        byte[] slice = new byte[(end - begin + 1)];\n        int count = 0;\n        for (int i = begin; i <= end; i++) \n        {\n            slice[count] = array[i];\n            count++;\n        }\n\n        return slice;\n    }\n\n    public void setXsdFileName(String xmlSchemaFileName)\n            throws IllegalArgumentException \n    {\n        setProperty(XSD_FILENAME_KEY, xmlSchemaFileName);\n    }\n\n    public String getXsdFileName() \n    {\n        return getPropertyAsString(XSD_FILENAME_KEY);\n    }\n\n    /**\n     * set Schema result\n     * @param result\n     * @param xmlStr\n     * @param xsdFileName\n     */\n    public void setSchemaResult(AssertionResult result, String xmlStr,\n            String xsdFileName) \n    {\n        try \n        {\n            boolean toReturn = true;\n\n            Document doc = null;\n            DocumentBuilderFactory parserFactory = DocumentBuilderFactory\n                    .newInstance();\n            parserFactory.setValidating(true);\n            parserFactory.setNamespaceAware(true);\n            parserFactory.setAttribute(JAXP_SCHEMA_LANGUAGE, W3C_XML_SCHEMA);\n            if (xsdFileName != null && xsdFileName.length() > 0) {\n                parserFactory.setAttribute(JAXP_SCHEMA_SOURCE, xsdFileName);\n            } else\n            {\n                throw new Exception(xsdFileName + \"is invalid\");\n            }\n            // create a parser:\n            DocumentBuilder parser = parserFactory.newDocumentBuilder();\n            parser.setErrorHandler(new SAXErrorHandler(result));\n         \n\n            doc = parser.parse(new InputSource(new StringReader(xmlStr)));\n            //if everything went fine then xml schema validation is valid\n        } catch (Exception e) \n        {\n            result.setError(false);\n            result.setFailureMessage(e.getMessage());\n            result.setFailure(true);\n\n        }\n\n    }\n\n    /**\n     * SAXErrorHandler class\n     */\n    private class SAXErrorHandler implements ErrorHandler \n    {\n        private AssertionResult result;\n\n        public SAXErrorHandler(AssertionResult result)\n        {\n            this.result = result;\n        }\n\n        public void error(SAXParseException exception)\n\n        throws SAXParseException \n        {\n\n            throw exception;\n        }\n\n        public void fatalError(SAXParseException exception)\n                throws SAXParseException \n        {\n\n            throw exception;\n        }\n\n        public void warning(SAXParseException exception)\n                throws SAXParseException \n        {\n\n            throw exception;\n        }\n    }\n\n}", "id": 73468, "time": "2005-04-09T07:16:31Z", "creator": "dmaung1@yahoo.com", "creation_time": "2005-04-09T07:16:31Z", "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 34383, "is_private": false, "text": "Created attachment 14667\nXMLSchemaAssertion.java", "id": 73469, "time": "2005-04-09T07:18:39Z", "creator": "dmaung1@yahoo.com", "creation_time": "2005-04-09T07:18:39Z", "attachment_id": 14667}, {"count": 2, "tags": [], "creator": "dmaung1@yahoo.com", "attachment_id": 14668, "is_private": false, "id": 73470, "time": "2005-04-09T07:19:32Z", "bug_id": 34383, "creation_time": "2005-04-09T07:19:32Z", "text": "Created attachment 14668\nXMLSchemaAssertionGUI.java"}, {"count": 3, "text": "Thanks - I've started looking at the code.\n\nIt would be really helpful if you could provide a patch (or just the new\n<component> section) for the documentation, which is in\n\nxdocs/usermanual/component_reference.xml", "bug_id": 34383, "is_private": false, "id": 73474, "time": "2005-04-09T14:39:10Z", "creator": "sebb@apache.org", "creation_time": "2005-04-09T14:39:10Z", "tags": [], "attachment_id": null}, {"count": 4, "tags": [], "creator": "sebb@apache.org", "text": "I've now added the code to CVS HEAD.\n\nStill need to add some test cases, and documentation.\n", "id": 73482, "attachment_id": null, "bug_id": 34383, "creation_time": "2005-04-09T19:24:31Z", "time": "2005-04-09T19:24:31Z", "is_private": false}, {"count": 5, "tags": [], "creator": "dmaung1@yahoo.com", "text": "Created attachment 14673\nXMLSchemaAssertion.png", "id": 73496, "time": "2005-04-10T22:27:14Z", "bug_id": 34383, "creation_time": "2005-04-10T22:27:14Z", "is_private": false, "attachment_id": 14673}, {"count": 6, "tags": [], "bug_id": 34383, "attachment_id": 14674, "is_private": false, "id": 73497, "time": "2005-04-10T22:30:53Z", "creator": "dmaung1@yahoo.com", "creation_time": "2005-04-10T22:30:53Z", "text": "Created attachment 14674\nXMLSchema Assertion Component"}, {"count": 7, "tags": [], "creator": "dmaung1@yahoo.com", "text": "I have added documentation for XMLSchemaAssertion. Please correct me, if I am \nwrong. \nDave", "id": 73498, "time": "2005-04-10T22:32:31Z", "bug_id": 34383, "creation_time": "2005-04-10T22:32:31Z", "is_private": false, "attachment_id": null}, {"count": 8, "tags": [], "bug_id": 34383, "text": "Thanks!\n\nAll added to CVS HEAD", "id": 74105, "time": "2005-04-26T02:24:16Z", "creator": "sebb@apache.org", "creation_time": "2005-04-26T02:24:16Z", "is_private": false, "attachment_id": null}]