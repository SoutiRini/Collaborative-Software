[{"count": 0, "tags": [], "bug_id": 61585, "is_private": false, "text": "Created attachment 35395\nJMeter project snippet\n\nThis is not a big deal, but it's a bit misleading so perhaps worth reporting.\n\nRef. attached image. The example here is with HTTP Sampler but I guess the behavior is generic.\n\nI have a user-defined variable containing a URL and, within a simple controller, I extract some parts of its value into other variables (\"server\", \"port\" etc and then use them to configure an HTTP Sampler. The regular expressions are correct and to their job (see below).\n\nThe HTTP sampler fails because the variables defined by the RegExp Extractors aren't replaced with the extracted values, and that is because they are actually not placed in JMeterVariables at all in the first place (using a DebugSampler right after the extractions, I can see that the variables aren't there).\n\nSince JMeter can't find a value for them, they stay as literals in the configuration - which obviously causes the sampler to fail.\n\nHowever, if I duplicate the HTTP sampler, the duplicated sampler works fine. \n\nIt seems that RegExp Extractor needs at least a sampler (any sampler, anywhere in the sequence) in order to actually place the variable it defines in JMeterVariables - and they will be visible only after the first sampler is executed.\n\nSince the RegExp Extractor is post processor, it makes sort of sense, but it should pehaps fail in a bit more explicit manner? Or shouldn't fail at all? \n\nAfter all, by placing even a Debug Sampler before the Extractors, it works as expect so it doesn't seem an explicit design decision, but more of a side effect. \n\nNo big deal as I said, but maybe something simple to fix to make life easier for test script developers. :)\n\nCheers,\n\n -cris", "id": 201303, "time": "2017-10-05T12:04:47Z", "creator": "cristianosadun@hotmail.com", "creation_time": "2017-10-05T12:04:47Z", "attachment_id": 35395}, {"count": 1, "tags": [], "text": "Marked as \"minor\"", "is_private": false, "id": 201304, "creator": "cristianosadun@hotmail.com", "time": "2017-10-05T12:05:15Z", "bug_id": 61585, "creation_time": "2017-10-05T12:05:15Z", "attachment_id": null}, {"count": 2, "tags": [], "text": "(In reply to Cristiano Sadun from comment #0)\n> Created attachment 35395 [details]\n> JMeter project snippet\n> \n> This is not a big deal, but it's a bit misleading so perhaps worth reporting.\n> \n> Ref. attached image. The example here is with HTTP Sampler but I guess the\n> behavior is generic.\n> \n> I have a user-defined variable containing a URL and, within a simple\n> controller, I extract some parts of its value into other variables\n> (\"server\", \"port\" etc and then use them to configure an HTTP Sampler. The\n> regular expressions are correct and to their job (see below).\n> \n> The HTTP sampler fails because the variables defined by the RegExp\n> Extractors aren't replaced with the extracted values, and that is because\n> they are actually not placed in JMeterVariables at all in the first place\n> (using a DebugSampler right after the extractions, I can see that the\n> variables aren't there).\n> \n> Since JMeter can't find a value for them, they stay as literals in the\n> configuration - which obviously causes the sampler to fail.\n> \n> However, if I duplicate the HTTP sampler, the duplicated sampler works fine. \n> \n> It seems that RegExp Extractor needs at least a sampler (any sampler,\n> anywhere in the sequence) in order to actually place the variable it defines\n> in JMeterVariables - and they will be visible only after the first sampler\n> is executed.\nYes\n> \n> Since the RegExp Extractor is post processor, it makes sort of sense, but it\n> should pehaps fail in a bit more explicit manner? Or shouldn't fail at all? \n\nIf it doesn't extract anything, why should it fail ? I has not even run in fact as there was no sampler.\n> \n> After all, by placing even a Debug Sampler before the Extractors, \n\nExtractors are scoped elements, as such their position(before/after) does not influence their action.\nSee:\nhttp://jmeter.apache.org/usermanual/test_plan.html#scoping_rules\nhttp://jmeter.apache.org/usermanual/component_reference.html#postprocessors\n\nit works\n> as expect so it doesn't seem an explicit design decision, but more of a side\n> effect. \nA Debug Sampler IS A Sampler as such it is not a side effect.\n> \n> No big deal as I said, but maybe something simple to fix to make life easier\n> for test script developers. :)\n> \n> Cheers,\n> \n>  -cris\n\nThanks for report, but this is clearly a design decision, see my notes above.\n\nIf I misunderstood your issue, please reopen with more details on what you expect with a particular plan and what you get.\n\nThanks", "is_private": false, "id": 201316, "creator": "p.mouawad@ubik-ingenierie.com", "time": "2017-10-05T23:09:52Z", "bug_id": 61585, "creation_time": "2017-10-05T23:09:52Z", "attachment_id": null}]