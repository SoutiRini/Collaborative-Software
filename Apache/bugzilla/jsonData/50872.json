[{"count": 0, "tags": [], "bug_id": 50872, "text": "After Tomcat has been started we can successfully initiate a SSL connection as shown below:\n\nUs                                   Them\nClient Hello\n                                     Server Hello,\n                                     Certificate,\n                                     Certificate Request,\n                                     Server Hello done\nCertificate,\nClient Key Exchange,\nCertificate Verify,\nChange Cipher Spec,\nEncrypted Handshake Method\n                                     Change Cipher Spec,\n                                     Encrypted Handshake Method\n\nHowever at some point (usually after a couple of days) the process stops working as shown below:\n\nUs                                   Them\nClient Hello\n                                     Server Hello,\n                                     Certificate,\n                                     Certificate Request,\n                                     Server Hello done\nCertificate,\nClient Key Exchange\n\nThe length in the Certificate message is zero indicating that a suitable certificate could not be found.\n\nRestarting Tomcat seems to resolve this issue as the SSL connections are successful again. It works for a couple of days and then stops working, requiring a re-start ot Tomcat.", "id": 144743, "time": "2011-03-04T12:26:03Z", "creator": "clive.nicholson@brent.gov.uk", "creation_time": "2011-03-04T12:26:03Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 50872, "text": "Without the connector configuration and a reproducible test case, this is likely to get resolved as \"WORKSFORME\"", "id": 144744, "time": "2011-03-04T12:34:43Z", "creator": "markt@apache.org", "creation_time": "2011-03-04T12:34:43Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 50872, "text": "(In reply to comment #1)\n> Without the connector configuration and a reproducible test case, this is\n> likely to get resolved as \"WORKSFORME\"\n\nThe connector from the Tomcat 'server.xml' file is shown below:\n   <Connector port=\"8443\" \n               maxThreads=\"150\" minSpareThreads=\"25\" maxSpareThreads=\"75\"\n               enableLookups=\"false\" disableUploadTimeout=\"true\"\n               acceptCount=\"100\" debug=\"0\" scheme=\"https\" secure=\"true\"\n               clientAuth=\"false\" sslProtocol=\"TLS\" keystoreFile=\"/conf/keystores/disbox\" keystorePass=\"*********\"\n\t       truststoreFile=\"C:\\Program Files\\Java\\jre1.5.0_13\\lib\\security\\cacerts\" truststorePass=\"changeit\" />\n\nHowever, the servlet running under Tomcat initiates a SSL connection to an external web service and it is not using the keystore configured in the http connector (which I assume is for inbound SSL connections). The application has its own configuration file where the location of its keystore, its password and other parameters are defined. During the SSL handshake the external server requests our server's certificate which it should obtain from this application keystore. As stated previously, this works okay initally but seems to stop working after some unknown time has elapsed. Could it be that somehow it is searching the wrong keystore for the server's certificate (i.e. the keystore configured in the connector as opposed to the application's keystore)?\n\nI will enable the SSL debug option '-Djavax.net.debug=\"all\"' in the Tomcat start-up to see if I can get anymore information.", "id": 144820, "time": "2011-03-08T05:28:04Z", "creator": "clive.nicholson@brent.gov.uk", "creation_time": "2011-03-08T05:28:04Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "text": "Outbound SSL connections are entirely an application concern. Tomcat plays no role in them. This is not a Tomcat bug. The users list is the place to seek help with this.", "is_private": false, "bug_id": 50872, "id": 144823, "time": "2011-03-08T05:38:13Z", "creator": "markt@apache.org", "creation_time": "2011-03-08T05:38:13Z", "attachment_id": null}, {"count": 4, "tags": [], "text": "Sorry to re-open this call but after enabling SSL debugging it appears that Tomcat only ever uses the key store specified (if any) in the first SSL connection. Once the key store has initially been set, setting the 'javax.net.ssl.keyStore' and the 'javax.net.ssl.keyStorePassword' system properties in web applications does not affect the key store that is used even though the system properties appear to have been changed (i.e printing out the Java system properties shows the amended values but certificates in these key stores are not found). Is it recommended to add parameters similar to the ones below to the Tomcat startup to define the default keystore or should Tomcat be recognising the change to the Java system properties?\n\n-Djavax.net.ssl.keyStore=***********\n-Djavax.net.ssl.keyStorePassword=**********", "is_private": false, "bug_id": 50872, "id": 145348, "time": "2011-03-28T07:41:20Z", "creator": "clive.nicholson@brent.gov.uk", "creation_time": "2011-03-28T07:41:20Z", "attachment_id": null}, {"count": 5, "attachment_id": null, "bug_id": 50872, "text": "Again, this belongs on the users mailing list.", "id": 145349, "time": "2011-03-28T07:51:31Z", "creator": "markt@apache.org", "creation_time": "2011-03-28T07:51:31Z", "tags": [], "is_private": false}]