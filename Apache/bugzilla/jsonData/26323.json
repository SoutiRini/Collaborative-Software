[{"count": 0, "attachment_id": null, "creator": "slam@top-house.dk", "is_private": false, "id": 50910, "time": "2004-01-21T21:15:41Z", "bug_id": 26323, "creation_time": "2004-01-21T21:15:41Z", "tags": [], "text": "I am developing an intranet for a housing community using apache/tomcat and \nmysql. It was put in production to 200 users a few weeks ago and I noticed that \nthe java-proces (tomcat) was \"growing\" from 8% memory usage when started to \nover 50% (seen with top / ps aux). \n\nWhen the mem-usage reach a certain level the java-proces uses most of the CPU-\nressources as well - probably the Java-GC trying to keep up. This usually \nhappens in a matter of 2-5 hours depending on the Xmx-settings - the number of \nactive users / load seems to speed the process up (not confirmed). Restarting \ntomcat solves the problem for a while - but I would prefer a better permament \nsolution.\n\nSystem settings:\nCPU: Pentium 1600 mhz\nRAM: 512 MB\nOS: Linux (Redhat)\nJava: j2re1.4.2_03 / jikes\nTOMCAT: 5.0.16\nConnector: org.apache.coyote.tomcat5.CoyoteConnector (AJP/1.3)\nCATALINA_OPTS: -Xmx200m -Xms200m -Dbuild.compiler.emacs=true\n(have tried 117 different settings)\n\nWhen deplyed I used tomcat 4 and j2sdk1.4.1_03 and the \"normal\" javac-compiler. \nWhen I discovered the problem I changed to jakarta-tomcat-5.0.16 / j2re1.4.2_03 \nand jikes - this seems to have made the problem even worse. Before the update \ntomcat could go for more than 12 hours whitout restarting - now I have to \nrestart every few hours.\n\nThe application is quite DB-intensive: Every 30 secs. a java-thread queries a \nmysql-table with updated network-traffic data (used for traffic-shaping). In \nthe same loop I SAX-parse a little XML-string using the JDOM-API (I have read \nabout the StringBuffer-problem but this is not the cause since I'm now using \nj2re1.4.2_03 - right ?). I'm using mysql-connector-3.0.9 as JDBC-driver and \nprotomatter-1.1.8 to pool DB-connections. In the same loop I connect to a TCP-\nsocket on the local server.\n\nI have done some profiling with HPJmeter and the -Xrunhprof argument with \ndifferent settings. I'm a newbie in profiling but these observations might be \nuseful:\n-Using HPJmeter' \"guess memory leaks\" the top-4 suggested candidates are: \njava.util.vector,\norg.apache.commons.modeler.Registry, \norg.apache.jk.core.MsgContext and \norg.apache.coyote.Request\n\n-\"Residual objects\" shows the following top-4-classes (bytes):\nint[] (10 MB)\nchar[] (4 MB)\njava.lang.String (2 MB)\nbyte[] (2 MB)\n\nPlease help -  I can't stand another month with this error..."}, {"count": 1, "tags": [], "creator": "remm@apache.org", "text": "BZ is for reporting bugs. For investigating problems, getting useful tips,\nanalyzing configuration options, etc, there's the tomcat-user mailing list.", "id": 50911, "time": "2004-01-21T21:27:28Z", "bug_id": 26323, "creation_time": "2004-01-21T21:27:28Z", "is_private": false, "attachment_id": null}]