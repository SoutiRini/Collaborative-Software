[{"count": 0, "tags": [], "bug_id": 972, "attachment_id": null, "text": "Given\n\nDTD:d.dtd\n\n<?xml version='1.0' encoding='UTF-8' ?>\n<!--Generated by XML Authority-->\n<!ELEMENT DATA (#PCDATA)>\n<!ENTITY % global-attributes \"DATA?\">\n<!ELEMENT BADSTUFF (%global-attributes;)?>\n<!ELEMENT THINGS (#PCDATA)>\n<!ELEMENT TESTS (THINGS? | BADSTUFF?)?>\n\n\nand XML:\n\n<?xml version = \"1.0\" encoding = \"UTF-8\"?>\n<!DOCTYPE TESTS SYSTEM \"d.dtd\">\n<TESTS>\n\t<BADSTUFF>\n\t\t<DATA>Oi</DATA>\n\t</BADSTUFF>\n</TESTS>\n\nand test bed of dom.traversal.TreeWalkerView with grammar access allowed.\n\nThe org.\\apache\\xerces\\parsers\\DOMparser.java\n\n\n    /** Creates the children for the element decl. */\n    private Element createChildren(XMLContentSpec.Provider provider, \n                                   int index, XMLContentSpec node,\n                                   DocumentImpl factory,\n                                   Element parent) throws Exception {\n\n\n...\n...\n\n        // flatten model\n\ndoes not handle the single element declaration for BADSTUFF\n\n\n\ni added the following cases code which kept me happy - but may notbe the \ncorrect thing to do!\n\n\t\t\t//jbe mod 6/03/01\n\t\t\tcase XMLContentSpec.CONTENTSPECNODE_ZERO_OR_ONE:\n\t\t\tcase XMLContentSpec.CONTENTSPECNODE_ZERO_OR_MORE:\n\t\t\tcase XMLContentSpec.CONTENTSPECNODE_ONE_OR_MORE:\n\t\t\t{\n                // one node on its own\n                int nIndex  = node.value;\n                Element nchild = createChildren(provider, nIndex, node, \n                                              factory, parent);\n\n                String type = \"choice\";\n                Element model = nchild;\n                // set occurrence count\n                switch (occurs) {\n                    case '+': {\n                        model.setAttribute(\"maxOccurs\", \"unbounded\");\n                        break;\n                    }\n                    case '*': {\n                        model.setAttribute(\"minOccurs\", \"0\");\n                        model.setAttribute(\"maxOccurs\", \"unbounded\");\n                        break;\n                    }\n                    case '?': {\n                        model.setAttribute(\"minOccurs\", \"0\");\n                        break;\n                    }\n                }\n\n                return model;\n\t\t\t}", "id": 1261, "time": "2001-03-14T04:48:36Z", "creator": "johne@miles33.co.uk", "creation_time": "2001-03-14T04:48:36Z", "is_private": false}, {"count": 1, "attachment_id": null, "creator": "elena@apache.org", "text": "The code have changed a lot.. if you think the bug still exists in the latest \nXerces release (preferably Xerces2 ;)) feel free to re-open the bug.", "id": 7407, "time": "2001-10-31T14:56:33Z", "bug_id": 972, "creation_time": "2001-10-31T14:56:33Z", "tags": [], "is_private": false}]