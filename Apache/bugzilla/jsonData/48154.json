[{"count": 0, "tags": [], "bug_id": 48154, "attachment_id": null, "id": 131769, "time": "2009-11-06T07:37:17Z", "creator": "thickey@radiantsystems.com", "creation_time": "2009-11-06T07:37:17Z", "is_private": false, "text": "Changes made to ap_http_filter in version 2.2.9 (Bug ID 43711) are preventing requests through the mod_isapi, isapi_handler() function from being processed.  The changes for this bug are at line 327 of http_filters.c\n...\n        if ((ctx->state == BODY_CHUNK ||\n            (ctx->state == BODY_LENGTH && ctx->remaining > 0)) &&\n            f->r->expecting_100 && f->r->proto_num >= HTTP_VERSION(1,1) &&\n            !(f->r->eos_sent || f->r->bytes_sent)) {\n            if (!ap_is_HTTP_SUCCESS(f->r->status)) {\n                ctx->state = BODY_NONE;\n                ctx->eos_sent = 1;\n            } else {\n...\n\nThe specific problem is the call to \"ap_is_HTTP_SUCCESS(f->r->status)\"\n\nI understand the reason behind the change it causes a problem due to the request_rec status being set to 0 at line 1483 of mod_isap.c\n\n...\nr->status = 0\n...\n\nThis would happen wiht any message but for my situation it is a POST message and when initially handled by ap_read_request() the status is set to HTTP_OK (200)  I am not sure why the isapi_handler() function is setting the status to 0 other then perhaps to initialize the value as it is returned later.  But becuase this is done before the parse it prevents the message from being read by the http input filter into cid->ecb->lpbData and therefore no data is passed on to the external DLL."}, {"count": 1, "tags": [], "bug_id": 48154, "text": "Do you have a proposed solution that satisfies both your use case and the issues\nexperienced prior to 2.2.9?", "id": 131835, "time": "2009-11-09T16:39:43Z", "creator": "wrowe@apache.org", "creation_time": "2009-11-09T16:39:43Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 48154, "attachment_id": null, "id": 131840, "time": "2009-11-10T04:40:03Z", "creator": "thickey@radiantsystems.com", "creation_time": "2009-11-10T04:40:03Z", "is_private": false, "text": "My suggestion would be to make a change in isapi_handler() to remove the reset of  r->status to 0, this is what I have done as a workaround to be able to use 2.2.14.  I would think that if the applications is making decisions based on the status that it should not arbitrarily reset this value."}, {"count": 3, "text": "Also note that a 100-continue is NEVER sent when using mod_isapi. \n\nThe message body will always be empty in the case where a client was expecting to get a 100-continue before sending the request data.\n\nIn the case of my isapi dll that provides web services, we lose compatibility with any web service client that uses 100-continue (.NET by default).", "bug_id": 48154, "is_private": false, "id": 132295, "time": "2009-11-24T18:40:26Z", "creator": "asf@divinehawk.com", "creation_time": "2009-11-24T18:40:26Z", "tags": [], "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 48154, "attachment_id": 24617, "id": 132333, "time": "2009-11-25T13:03:02Z", "creator": "asf@divinehawk.com", "creation_time": "2009-11-25T13:03:02Z", "is_private": false, "text": "Created attachment 24617\nPatch against 2.2.x\n\nProposed patch: removes status code reset from isapi handler"}]