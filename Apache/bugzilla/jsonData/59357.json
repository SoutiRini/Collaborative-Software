[{"count": 0, "tags": [], "creator": "valliantster@gmail.com", "text": "There doesn't seem to be a way to disable TLD scanning completely.\n\nThere apparently used to be an attribute for the context called \"processTlds\" which was replaced at some point, with some/all of the following:\n\n<Context processTlds=\"false\" tldValidation=\"false\" xmlBlockExternal=\"false\">\n<JarScanner scanClassPath=\"false\" scanAllFiles=\"false\" scanAllDirectories=\"false\">\n<JarScanFilter tldSkip=\"*\" defaultTldScan=\"false\"/>\n</JarScanner>\n</Context>\n\nThis is well and good, but in my case I have a TLD file (just the file itself, not inside a jar) below WEB-INF, and even with every possible \"don't scan for TLDs\" setting set, it's still being picked up. (jarsToSkip, fwiw, is *)\n\nIs there a setting I'm missing which will totally disable TLD scanning?\n\nA quick look at the sources makes it seem like there is no way to avoid the scan for files with .tld extensions, as filters and such are only applied to jar scanning?  I could be missing something, but that's what it looks like.\n\nTo reproduce, just stick a TLD with a bad DTD reference somewhere below /WEB-INF.", "id": 190400, "time": "2016-04-20T07:29:36Z", "bug_id": 59357, "creation_time": "2016-04-20T07:29:36Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 59357, "text": "Scanning for TLDs under WEB-INF is required by the JSP specification.\n\nScanning within JARs is configurable because of the performance impact. It allows JARs to be skipped when they are known not to contain TLDs.\n\nTLD scanning was refactored between 7.0.x and 8.0.x. In 7.0.x, both Catalina (the Servlet engine) and Jasper (the JSP engine) scanned for TLDs. Catalina scanned for TLDs on web application start looking for listeners. Jasper scanned for TLDs lazily (once a JSP referred to a TLD) but looked for everything else. processTlds only affected the Catalina scan.\n\nIn 8.0.x, Jasper does all the scanning (on web application start) and notifies Catalina of any listeners found.\n\nIt looks like you are seeing the results of making the Jasper scan non-lazy.\n\nAt this point I don't see a good reason to change the current behaviour.", "id": 190405, "time": "2016-04-20T10:53:31Z", "creator": "markt@apache.org", "creation_time": "2016-04-20T10:53:31Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 59357, "attachment_id": null, "text": "Ah, I should have realized it was spec.\n\nThe issue I'm running into is a bad DTD location in a TLD.\n\nIt's been broken for a while I think, I'm surprised we haven't run into this problem before now.  I thought it might be related to the change of the default for xmlBlockExternal at first, but that must have just been correlation.\n\nOkay, so skipping scanning is a no-go, but what about skipping TLD files with errors?\n\nI thought maybe tldValidation=\"false\" might do the trick, but it gets parsed before validated, I guess, and the bad DTD ref borks that.\n\nIf you think setting tldValidation to false should skip *any* type of validation, I'll open a ticket for that, but I'm assuming it still has to parse, if not validate... and maybe the setting is about TagLibraryValidators, versus XML validation?\n\nAnyways, thanks for the prompt feedback, wontfix makes total sense, and I'd rather solve the problem long term than ignore it short term anyhow.  Cheers!", "id": 190407, "time": "2016-04-20T11:36:49Z", "creator": "valliantster@gmail.com", "creation_time": "2016-04-20T11:36:49Z", "is_private": false}]