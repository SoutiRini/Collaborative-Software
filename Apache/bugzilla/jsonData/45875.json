[{"count": 0, "tags": [], "bug_id": 45875, "text": "apr_table_get retrieves the values stored in a table whose contents are defined by the array ssl_hook_Fixup_vars[] defined in modules/ssl/ssl_engine_kernel.c. This array is used by the function ssl_hook_Fixup() purely as is, and thus the generated table doesn't have entries for multiple occurences of X509 DN components (e.g. SSL_CLIENT_S_DN_OU_n, n being a non-negative integer).\n\nThis table provides through the use of function apr_table_get() access to the contents of certificates to external functions like PHP's apache_getenv() which are thus unable to retrieve components that occur multiple times in a DN, except for the first occurance.\n\nPlease amend ssl_hook_Fixup() to also take care of these multiple occurences. The function ssl_var_lookup() called inside ssl_hook_Fixup() can already return the correct value, but ssl_hook_Fixup() has to provide the table entry.", "id": 120917, "time": "2008-09-24T06:35:47Z", "creator": "willy.weisz@univie.ac.at", "creation_time": "2008-09-24T06:35:47Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "creator": "willy.weisz@univie.ac.at", "text": "Created attachment 22643\nPatch to fix bug 45875\n\nBug fixed", "id": 121045, "time": "2008-09-28T12:22:11Z", "bug_id": 45875, "creation_time": "2008-09-28T12:22:11Z", "is_private": false, "attachment_id": 22643}, {"count": 2, "tags": [], "text": "Please do not change the assignment of bugs as this cuts of the bugs@ mailing list which is watched by many people to notice changes to bugs.", "is_private": false, "id": 121046, "creator": "rpluem@apache.org", "time": "2008-09-28T13:06:21Z", "bug_id": 45875, "creation_time": "2008-09-28T13:06:21Z", "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 45875, "is_private": false, "text": "(In reply to comment #2)\n> Please do not change the assignment of bugs as this cuts of the bugs@ mailing\n> list which is watched by many people to notice changes to bugs.\n> \n\nSorry. I misunderstood the assignment changes and their consequences.", "id": 121047, "time": "2008-09-28T13:17:58Z", "creator": "willy.weisz@univie.ac.at", "creation_time": "2008-09-28T13:17:58Z", "attachment_id": null}, {"count": 4, "tags": [], "creator": "jorton@redhat.com", "text": "It would be useful to do this, certainly.\n\nThe attached patch would I think almost double the cost of ssl_hook_Fixups() with +ExportCertData because it would invoke ssl_var_lookup_ssl_cert_dn() at least twice for each DN suffix in the Fixup_vars array, and _ssl_cert_dn() iterates potentially over the entire X509_NAME array for each invocation -- not cheap.\n\nI'd really really rather see a patch to rewrite the Fixup code to instead iterate through the X509_NAME *once* for each of the four (server, client) * (subj, issuer) DNs, which could for each:\n\n- check the NID against a table of the NIDs to export\n- if it's one to export, do a cheap reverse lookup to get a varname suffix\n- and count entries so that for multiple DNs the _N suffix gets added\n", "id": 121105, "time": "2008-09-30T13:07:16Z", "bug_id": 45875, "creation_time": "2008-09-30T13:07:16Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 45875, "is_private": false, "text": "Created attachment 22660\ncleanly extract DN to environment\n\nCan you try this patch?  This extracts the DN in an efficient fashion and should handle multiple RDNs with the same NID tag.", "id": 121125, "time": "2008-10-01T08:50:37Z", "creator": "jorton@redhat.com", "creation_time": "2008-10-01T08:50:37Z", "attachment_id": 22660}, {"count": 6, "tags": [], "creator": "jorton@redhat.com", "text": "Could you try out the patch?", "id": 122865, "time": "2008-11-26T05:51:55Z", "bug_id": 45875, "creation_time": "2008-11-26T05:51:55Z", "is_private": false, "attachment_id": null}, {"count": 7, "text": "The patch seems to work fine, so committed to trunk, r724717.", "bug_id": 45875, "is_private": false, "id": 123192, "time": "2008-12-09T06:44:06Z", "creator": "jorton@redhat.com", "creation_time": "2008-12-09T06:44:06Z", "tags": [], "attachment_id": null}, {"count": 8, "tags": [], "bug_id": 45875, "is_private": false, "text": "(In reply to comment #5)\n> Created an attachment (id=22660) [details]\n> cleanly extract DN to environment\n> \n> Can you try this patch?  This extracts the DN in an efficient fashion and\n> should handle multiple RDNs with the same NID tag.\n\nI'm sorry for the late reply. My first attempts at installing the patch failed, and I thought that this was because I used an older version of apache2. Then I had to concentrate on other stuff.\nI'm now coming back to the project that needs the correct functioning of the DN extraction. So I tried to install the patch with the newest published version of apache2 2.2.13. It still fails because it is based on a version of ssl_engine_vars.c and ssl_private.h which have never been published, but seem to be your private one.\n\nSecondly I wonder why the correction of a clear bug of apache2 hasn't been implemented in the current version 2.2.13 which was published much later than my bug report, even if a working patch may be less elegant than your proposal - but providing what the official documentation claims.", "id": 129738, "time": "2009-08-17T03:54:05Z", "creator": "willy.weisz@univie.ac.at", "creation_time": "2009-08-17T03:54:05Z", "attachment_id": null}, {"count": 9, "tags": [], "bug_id": 45875, "attachment_id": null, "is_private": false, "id": 137439, "time": "2010-06-08T08:09:32Z", "creator": "jorton@redhat.com", "creation_time": "2010-06-08T08:09:32Z", "text": "The patch you proposed was particularly inefficient, and in a way that everybody would suffer a potential performance loss to fix this bug.\n\nThe patch referenced in comment 7 is included in 2.2.15, so, please try that."}, {"count": 10, "tags": [], "bug_id": 45875, "attachment_id": null, "is_private": false, "id": 137449, "time": "2010-06-08T13:21:12Z", "creator": "willy.weisz@univie.ac.at", "creation_time": "2010-06-08T13:21:12Z", "text": "(In reply to comment #9)\n> The patch you proposed was particularly inefficient, and in a way that\n> everybody would suffer a potential performance loss to fix this bug.\n> \n> The patch referenced in comment 7 is included in 2.2.15, so, please try that.\n\nIt produces only a partially correct result: the first of a repeated DN component isn't returned as component number 0 (zero) as described by the manual, but only as the component itself - e.g. OU and OU_1 are returned, but not OU_0.\n\nEven so it's not explicitly stated in the manual a mono-valued DN component should also be returned as that component with value 0, e.g. OU_0 should be returned alongside OU even if only one OU component is present in a DN - this would make the use of the feature more programming friendly.\n\nBy the way, my patch may have been \"particularly inefficient\", but at least it produced a completely correct result according to the manual."}, {"count": 11, "tags": [], "bug_id": 45875, "attachment_id": null, "is_private": false, "id": 144227, "time": "2011-02-12T10:41:51Z", "creator": "jorton@redhat.com", "creation_time": "2011-02-12T10:41:51Z", "text": "You're correct.  I've fixed the manual - r1070094"}, {"count": 12, "tags": [], "bug_id": 45875, "text": "(In reply to comment #11)\n> You're correct.  I've fixed the manual - r1070094\n\nYou fixed the manual by inserting that <DN_component> should contain the same value as <DN_component>_0, but the code is still in error.\n\n<DN_component>_0 is still not provided, only <DN_component> which contains the same value as <DN_component>_0 should.\n\nThe following values are extracted from the output of phpinfo():\n\nSSL_CLIENT_S_DN \t/C=AT/O=AustrianGrid/OU=UniVie/OU=VCPC/CN=Willy Weisz \n\nSSL_CLIENT_S_DN_OU \tUniVie\nSSL_CLIENT_S_DN_OU_1 \tVCPC \n\nbut SSL_CLIENT_S_DN_OU_0 is missing!!!!\n\nAlso the PHP function apache_getenv(\"SSL_CLIENT_S_DN_OU_0\") doesn't return anything.", "id": 144233, "time": "2011-02-12T17:34:53Z", "creator": "willy.weisz@univie.ac.at", "creation_time": "2011-02-12T17:34:53Z", "is_private": false, "attachment_id": null}, {"count": 13, "text": "I forgot to mention that the bug exists up to version 2.2.17.", "bug_id": 45875, "is_private": false, "id": 144234, "time": "2011-02-12T17:50:29Z", "creator": "willy.weisz@univie.ac.at", "creation_time": "2011-02-12T17:50:29Z", "tags": [], "attachment_id": null}, {"count": 14, "tags": [], "bug_id": 45875, "is_private": false, "text": "SSL_CLIENT_S_DN_OU     UniVie\nSSL_CLIENT_S_DN_OU_1     VCPC \n\nHow is that \"in error\"?  That is exactly as described and expected:\n\n\"When the environment table is populated using the StdEnvVars option of the SSLOptions directive, the first (or only) attribute of any DN is added only under a non-suffixed name; i.e. no _0 suffixed entries are added.\"\n\nPopulating the env table with duplicate _0 entries is unnecessary - the code has never worked that way so there can be no expectation that it should.  You can use the _0 names if accessing the variables directly through the C ssl_var_lookup API (or Perl equivalent).", "id": 144307, "time": "2011-02-15T10:28:03Z", "creator": "jorton@redhat.com", "creation_time": "2011-02-15T10:28:03Z", "attachment_id": null}, {"count": 15, "tags": [], "bug_id": 45875, "attachment_id": null, "is_private": false, "id": 144314, "time": "2011-02-15T11:45:41Z", "creator": "willy.weisz@univie.ac.at", "creation_time": "2011-02-15T11:45:41Z", "text": "(In reply to comment #14)\n> SSL_CLIENT_S_DN_OU     UniVie\n> SSL_CLIENT_S_DN_OU_1     VCPC \n> \n> How is that \"in error\"?  That is exactly as described and expected:\n> \n> \"When the environment table is populated using the StdEnvVars option of the\n> SSLOptions directive, the first (or only) attribute of any DN is added only\n> under a non-suffixed name; i.e. no _0 suffixed entries are added.\"\n> \n> Populating the env table with duplicate _0 entries is unnecessary - the code\n> has never worked that way so there can be no expectation that it should.  You\n> can use the _0 names if accessing the variables directly through the C\n> ssl_var_lookup API (or Perl equivalent).\n\nYour new description reads:\n--\n suffix.  If the DN in question contains multiple attributes of the\n+same name, this suffix is used as a zero-based index to select a\n+particular attribute.  For example, where the server certificate\n+subject DN included two OU attributes, <code>SSL_SERVER_S_DN_OU_0</code>\n+and\n+<code>SSL_SERVER_S_DN_OU_1</code> could be used to reference each.  A\n+variable name without a <code>_n</code> suffix is equivalent to that\n+name with a <code>_0</code> suffix; the first (or only) attribute.\n+When the environment table is populated using\n+the <code>StdEnvVars</code> option of\n+the <code class=\"directive\"><a href=\"#ssloptions\">SSLOptions</a></code> directive, the\n+first (or only) attribute of any DN is added only under a non-suffixed\n+name; i.e. no <code>_0</code> suffixed entries are added.</p>\n--\n\nThe normal understanding of the last sentence in its context is that only when StdEnvVars is set the xxx_0 entry is omitted in the environment table, whereas you mean that in the environment table, which is only created when StdEnvVars is set, it is always omitted. I therefore suggest to rephrase the text to read:\n\n\"Nevertheless, in the environment table, created as a result of using the  <code>StdEnvVars</code> option of the <code class=\"directive\"><a href=\"#ssloptions\">SSLOptions</a></code> directive, the first (or only) attribute of any DN is added only under a non-suffixed name; i.e. no <code>_0</code> suffixed entries are added.</p>\".\n\nConcerning your statement \"the code has never worked that way so there can be no expectation that it should\", let me remind you that the code didn't work \"that way\" nor any other way according to the specification stated in the original 2.2 documentation before I opened this bug report and submitted a first - be it very inefficient - patch. With the new definition you give in the patched documentation you partly redefined the original specification to suit your code. And you justify this approach by claiming that the xxx_0 entry is unnecessary.\n\nI strongly object to your argument: Having an environment entry with index 0 helps streamlining scripts retrieving environment variables through apr_table_get() directly or indirectly (e.g. the PHP function apache_getenv()) to a large extent. The little bit of redundancy overhead introduced by adding the index-zero entry is by far outweighed by the improved ease of writing scripts analysing the certificate entries with loops running through the whole array, and not having to single out the first entry of the array.\n\nIf you think that my objection to your after-the-code specification should be started in a new bugzilla entry, I'll do that."}, {"attachment_id": null, "tags": [], "creator": "jorton@redhat.com", "text": "Having a dupe _0 entry *is* unnecessary.  It adds no information which is currently absent.  Coding a \"no-suffix, _1, _2, ...\" loop is not the most complicated thing in the world.  Few people care about handling multi-attrib DNs.  Many people would be impacted - in a slight way - by adding the _0 duplicates.   This is a trade-off, and one I am happy with.  If you wish to propose an alternative send a patch to dev@ and it can be debated on the list, but please don't re-open this bug.\n\nThe docs text you propose seems to be semantically identical to the current text; I'm not sure what the issue is there.\n\nIf you care about using this stuff from PHP it would be better to add an accessor function to PHP for ssl_var_lookup() rather than relying on use of +StdEnvVars in the first place.", "count": 16, "id": 144347, "time": "2011-02-16T09:19:15Z", "bug_id": 45875, "creation_time": "2011-02-16T09:19:15Z", "is_private": false}, {"count": 17, "tags": [], "text": "Backported to 2.2.15 with r910319.\n\nRegression fix for 2.2.x: see bug 54510.", "is_private": false, "id": 165003, "creator": "asfbugz@velox.ch", "time": "2013-02-02T07:48:00Z", "bug_id": 45875, "creation_time": "2013-02-02T07:48:00Z", "attachment_id": null}]