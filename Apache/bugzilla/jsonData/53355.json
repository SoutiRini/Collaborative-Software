[{"count": 0, "tags": [], "text": "When changing text on a slide, formatting is lost. See example code below:\n\tprivate boolean replaceTextInPowerPoint(final File destFile,\n\t\t\tfinal String assessmentId) {\n\t\tlogger.log(Level.TRACE,\n\t\t\t\t\"Entering WordDocGenerator.replaceVariablesInWordDoc(File, String)\");\n\t\tboolean result = Boolean.FALSE;\n\t\tif (destFile.canWrite()) {\n\t\t\tFileInputStream is;\n\t\t\tfinal AnnexVarDao dao = new AnnexVarDao();\n\t\t\tfinal Map<String, String> variableRs = dao\n\t\t\t\t\t.loadVarReplacementMapByAssessmentId(assessmentId);\n\t\t\tfinal Map<String, String> summaryVars = dao\n\t\t\t\t\t.loadSummaryValuesByAssessment(assessmentId);\n\t\t\tfinal Map<String, String> qnAVars = dao\n\t\t\t\t\t.loadQuestionAndAnswerVarsByAssessment(assessmentId);\n\t\t\tif (summaryVars != null) {\n\t\t\t\tvariableRs.putAll(summaryVars);\n\t\t\t}\n\n\t\t\t// 04/03/2012 [MJH] Change in regards to BUG: 72\n\t\t\t// Added Q&A section to the document.\n\t\t\t// For more detail, see Bugzilla at:\n\t\t\t// http://tlma.dimensiondata.com/bugs/show_bug.cgi?id=72\n\t\t\tif ((qnAVars != null) && (0 < qnAVars.size())) {\n\t\t\t\tvariableRs.putAll(qnAVars);\n\t\t\t}\n\t\t\tfinal StrLookupDefaultReplace<String> strLookup = new StrLookupDefaultReplace<String>(\n\t\t\t\t\tvariableRs);\n\t\t\tfinal StrSubstitutor subtitution = new StrSubstitutor(strLookup,\n\t\t\t\t\tStrSubstitutor.DEFAULT_PREFIX,\n\t\t\t\t\tStrSubstitutor.DEFAULT_SUFFIX,\n\t\t\t\t\tStrSubstitutor.DEFAULT_ESCAPE);\n\t\t\ttry {\n\t\t\t\tif (0 < variableRs.size()) {\n\t\t\t\t\tis = new FileInputStream(destFile);\n\t\t\t\t\tfinal XMLSlideShow pptx = new XMLSlideShow(is);\n\t\t\t\t\t\n\t\t\t\t\tfor(final XSLFSlide slide : pptx.getSlides()) {\n\t\t\t\t\t\tfor (final XSLFTextShape textShape : slide\n\t\t\t\t\t\t\t\t.getPlaceholders()) {\n\t\t\t\t\t\t\tString shapeText = textShape.getText();\n\t\t\t\t\t\t\tlogger.log(Level.DEBUG, String.format(\n\t\t\t\t\t\t\t\t\t\"Got shape text%s%s\",\n\t\t\t\t\t\t\t\t\tConfiguration.SYSTEM_NEWLINE_STRING,\n\t\t\t\t\t\t\t\t\tshapeText));\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// 05/31/2012 [MJH] Change in regards to BUG: 89\n\t\t\t\t\t\t\t// Reducing the number of replacements that are done\n\t\t\t\t\t\t\t// where possible.\n\t\t\t\t\t\t\t// For more detail, see Bugzilla at:\n\t\t\t\t\t\t\t// http://tlma.dimensiondata.com/bugs/show_bug.cgi?id=89\n\t\t\t\t\t\t\tif (StringUtils.contains(shapeText, \"${\")) {\n\t\t\t\t\t\t\t\tshapeText = subtitution.replace(shapeText);\n\t\t\t\t\t\t\t\ttextShape.clearText();\n\t\t\t\t\t\t\t\tlogger.log(Level.DEBUG, String.format(\n\t\t\t\t\t\t\t\t\t\t\"Replacing shape text on slide: %s\",\n\t\t\t\t\t\t\t\t\t\tslide.getTitle()));\n\t\t\t\t\t\t\t\ttextShape.setText(shapeText);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tlogger.log(Level.DEBUG, String.format(\n\t\t\t\t\t\t\t\t\t\"New shape text%s%s\",\n\t\t\t\t\t\t\t\t\tConfiguration.SYSTEM_NEWLINE_STRING,\n\t\t\t\t\t\t\t\t\tshapeText));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tfinal FileOutputStream os = new FileOutputStream(destFile);\n\t\t\t\t\tpptx.write(os);\n\t\t\t\t\tresult = Boolean.TRUE;\n\t\t\t\t}\n\t\t\t} catch (final FileNotFoundException e) {\n\t\t\t\tlogger.log(Level.ERROR, e.getMessage(), e);\n\t\t\t} catch (final IOException e) {\n\t\t\t\tlogger.log(Level.ERROR, e.getMessage(), e);\n\t\t\t}\n\n\t\t}\n\t\tlogger.log(Level.TRACE,\n\t\t\t\t\"Exiting WordDocGenerator.replaceVariablesInWordDoc(File, String)\");\n\t\treturn result;\n\t}", "attachment_id": null, "bug_id": 53355, "id": 159674, "time": "2012-06-04T17:26:17Z", "creator": "mark.horninger@dimensiondata.com", "creation_time": "2012-06-04T17:26:17Z", "is_private": false}, {"count": 1, "tags": [], "creator": "mark.horninger@dimensiondata.com", "attachment_id": null, "is_private": false, "id": 159675, "time": "2012-06-04T17:29:16Z", "bug_id": 53355, "creation_time": "2012-06-04T17:29:16Z", "text": "I know that the trace log entries reference the wrong method name.  I assure you that it is receiving a powerpoint file."}, {"count": 2, "tags": [], "creator": "kiwiwings@apache.org", "attachment_id": null, "is_private": false, "id": 186343, "time": "2015-11-09T22:17:04Z", "bug_id": 53355, "creation_time": "2015-11-09T22:17:04Z", "text": "The text handling has been changed a lot and now the formatting/styles will be \nkept for every paragraph and text run and in the end it's combined when the \nfile is saved - the older method was to change the formatting in-place which \nmight have lead to a formatting loss.\nPlease have a look into the documentation of \norg.apache.poi.sl.usermodel.TextShape for the new handling, this describes when \nthe formatting is lost now, e.g. when calling setText()\n\nIf you have problems with the new handling, feel free to reopen this bug with a \nShort, Self Contained, Correct (Compilable), Example (see http://sscce.org), \ni.e. I'm not trying to figure out a problem based on some code ripped out of \nreport generation source."}]