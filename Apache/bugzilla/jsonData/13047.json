[{"count": 0, "text": "The tags...\n<property environment=\"osenv\"/>\n<exec executable=\"ls\" />\ndo not work properly under OS/400.\n\nThe problem is that the output from the QSH commands is EBCDIC.  The output \nmust be converted so it is appropriate for Java.\n\nI have made the appropriate changes to the 1.5 release to accomplish this and \nrequest that these changes be reviewed and considered for placement into the \nproduct.\n\nThe files affected and the differences are attached.  I believe that there is \nalso a bug in the org.apache.tools.ant.taskdefs.Execute.toString\n(ByteArrayOutputStream bos) method.  It attempts to convert the byte array \nencoding for z/os, but does not actually return the encoded string.  This is a \nmoot point because the encoding conversion belongs in a different place anyways \n(along with the os/400 encoding in the StreamPumper class.)\n\nSource Differences:\n\ndiff -r ant/src/main/org/apache/tools/ant/taskdefs/Execute.java ant400/src/main/\norg/apache/tools/ant/taskdefs/Execute.java\n237a239,241\n>         } else if (Os.isFamily(\"os/400\")) {\n>             String[] cmd = {\"env\"};\n>             return cmd;\n262,267d265\n<         if (Os.isFamily(\"z/os\")) {\n<             try {\n<                 bos.toString(\"Cp1047\");\n<             } catch (java.io.UnsupportedEncodingException e) {\n<             }\n<         }\n\n\ndiff -r ant/src/main/org/apache/tools/ant/taskdefs/StreamPumper.java ant400/src/\nmain/org/apache/tools/ant/taskdefs/StreamPumper.java\n59a60,61\n> import java.io.ByteArrayOutputStream;\n> import org.apache.tools.ant.taskdefs.condition.Os;\n88a91,114\n>     public static byte [] recode(byte [] buf, int length) {\n>       byte [] rbuf = null;\n>         if (Os.isFamily(\"z/os\")) {\n>             try {\n>                 ByteArrayOutputStream bos = new ByteArrayOutputStream();\n>                 bos.write(buf, 0, length);\n>                 rbuf = (bos.toString(\"Cp1047\")).getBytes();\n>             } catch (java.io.UnsupportedEncodingException e) {\n>             }\n>         }\n>         else if (Os.isFamily(\"os/400\")) {\n>             try {\n>                 ByteArrayOutputStream bos = new ByteArrayOutputStream();\n>                 bos.write(buf, 0, length);\n>                 rbuf =  (bos.toString(\"Cp500\")).getBytes();\n>             } catch (java.io.UnsupportedEncodingException e) {\n>             }\n>         }\n>       else\n>       {\n>            rbuf = buf;\n>       }\n>       return rbuf;\n>     }\n106c132,133\n<                 os.write(buf, 0, length);\n---\n>               byte [] rbuf = recode(buf, length);\n>                 os.write(rbuf, 0, length);\n\n\n\n\ndiff -r ant/src/main/org/apache/tools/ant/taskdefs/condition/Os.java ant400/src/\nmain/org/apache/tools/ant/taskdefs/condition/Os.java\n102a103\n>      *               <li>os/400</li>\n216a218,219\n>                 } else if (family.equals(\"os/400\")) {\n>                     isFamily = osName.indexOf(\"os/400\") > -1;", "bug_id": 13047, "attachment_id": null, "id": 23478, "time": "2002-09-26T21:04:47Z", "creator": "brian_farrar@countrywide.com", "creation_time": "2002-09-26T21:04:47Z", "tags": [], "is_private": false}, {"count": 1, "tags": [], "creator": "bodewig@apache.org", "attachment_id": null, "id": 23509, "time": "2002-09-27T08:19:54Z", "bug_id": 13047, "creation_time": "2002-09-27T08:19:54Z", "is_private": false, "text": "Brian,\n\nI have committed a modified version of your patch to CVS HEAD, could you please\nverify using a homebrewed Ant or a nightly build of 2002-09-28 or later that it\nworks on OS/400?\n\nI've kept the Execute#toString method as it also gets used from other places\n(to set the property in when using <exec>'s outputproperty) and it is in Execute\nto keep all system specific code in a single place.\n\nThanks for pointing out the missing return BTW.\n\nI'm setting the target for this patch to appear to 1.6, but we may talk about\ngetting it into 1.5.1 if things work as expected."}, {"count": 2, "text": "I have reviewed the source changes for this enhancement and have the following \ncomments:\n\n- The changes submitted for StreamPumper.java were not present in CVS.\n\n- The code removed from Execute#toString was intentional and necessary.  The \nrecoding is being done in the StreamPumper class for both the <property \nenvironment> and <exec> tags.  Performing the recoding in the Execute#toString \nmethod will have the affect of performing the recoding twice.\n\nPlease complete the changes to StreamPumper.java and remove the recoding for \nz/os and os/400 in Execute#toString.  Once this is complete I will pull the \ncode and test on os/400.\n\nThanks,\nBrian Farrar", "bug_id": 13047, "attachment_id": null, "id": 23529, "time": "2002-09-27T12:55:45Z", "creator": "brian_farrar@countrywide.com", "creation_time": "2002-09-27T12:55:45Z", "tags": [], "is_private": false}, {"count": 3, "text": "Not adding it to StreamPumper but leaving it in Execute has been intentional\nas well, sorry.  StreamPumper can be used (and I think it will be used) in other\ncontexts where it would be wrong to convert characters.", "bug_id": 13047, "attachment_id": null, "id": 23531, "time": "2002-09-27T13:04:24Z", "creator": "bodewig@apache.org", "creation_time": "2002-09-27T13:04:24Z", "tags": [], "is_private": false}, {"count": 4, "tags": [], "text": "Then there is a problem.  \n\nExecute#toString only fixes it for the <property environement> tag, so this \nisn't a good place to put it.  The appropriate place to do the recoding for \nos/400 (and any other os needing recoding) would be where the stream is coming \nin the system exec command.  I was thinking that StreamPumper was where the \nstream from the system command was being handled.  If this is so then it would \nbe the correct place, if not then where would that be?", "attachment_id": null, "bug_id": 13047, "id": 23532, "time": "2002-09-27T13:14:26Z", "creator": "brian_farrar@countrywide.com", "creation_time": "2002-09-27T13:14:26Z", "is_private": false}, {"count": 5, "tags": [], "creator": "bodewig@apache.org", "attachment_id": null, "id": 23908, "time": "2002-10-04T12:15:53Z", "bug_id": 13047, "creation_time": "2002-10-04T12:15:53Z", "is_private": false, "text": "For some reasons the support for z/OS only needed to fix the sitation for\nproperty (but then again, the actual code patch doesn't seem to have been tested\non z/OS).\n\nStreamPumper would probably be the right place, but we may need to make\ntranslation conditional.  Let's see what Ant does with output of <exec>\n\n1) pipe it to a file (<exec output=\"....\")/>)\n\n2) pipe it to Ant's internal logging system (<exec> with no output-attribute)\n\n3) capture the result in a property (<exec outputproperty>)\n\n4) postprocess the output (the environment stuff, javadoc to swallow some lines,\nsome other tasks parse the output as well).\n\nYou say you need to recode the output in all cases for OS/400, correct?"}, {"attachment_id": null, "tags": [], "creator": "brian_farrar@countrywide.com", "is_private": false, "count": 6, "id": 23915, "time": "2002-10-04T12:46:22Z", "bug_id": 13047, "creation_time": "2002-10-04T12:46:22Z", "text": "Adding in to StreamPumper took care of all the problems for me (I'm surprised \nz/os \"only\" needed it for <property environment>, could be z/os didn't test the \n<exec> tag.)  It is my belief that _any_ stream coming back from the \"command \nshell\" will be in the native encoding (EBCDIC Cp500 in my case) and therefore \nwill need to be recoded for Java.  \n\nYou have raised a very good point that the recoding should be conditional (and \nthe encoding type should be selectable.)  My environment is using Cp500, which \nis pretty safe but is just one of several (hundred) possible.  \n\nIf I were to rewrite the StreamPumper, rather than look at the machine type I \nwould look at a property to determine if recoding should occur and to what \nencoding type.  This would allow for recoding on any future platform with a \nproperty setting."}, {"count": 7, "tags": [], "text": "I never noticed this outstanding bug before, but reading it makes me wonder two \nthings:  (1)  Whether the new <redirector> stuff in CVS could handle this, and \n(2) if that's the reason Stefan suggested transcoding as a feature of the \n<redirector>.", "is_private": false, "bug_id": 13047, "id": 55004, "time": "2004-03-31T22:24:37Z", "creator": "mbenson@apache.org", "creation_time": "2004-03-31T22:24:37Z", "attachment_id": null}]