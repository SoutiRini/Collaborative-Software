[{"count": 0, "tags": [], "bug_id": 57583, "attachment_id": null, "text": "Method getValue of ScopedAttributeELResolver in some cases calls ImportHandler.resolveClass(..) that ends up looking the class by name.\nIt seems that the look-up is made whenever a custom tag attribute that is not  initialized yet (==null) is used in EL. I have plenty of these cases in custom tags, they are optional tag parameters, and this makes JSP rendering really slow.\n\nAt the moment I've replaced lib/jsp-api.jar with Glassfish implementation and it seems to do the trick. I hope the rendering result itself is not affected by this substitution (I would be very thankful if someone could tell me what the possible drawbacks might be, or provide arguments on why it is not a good idea to replace jsp-api implementation).", "id": 181056, "time": "2015-02-13T17:43:33Z", "creator": "jevgeniv@gmail.com", "creation_time": "2015-02-13T17:43:33Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 57583, "text": "In theory, you should be safe swapping API implementation classes but it is likely you will see different behaviour as different implmentations will have fixed different bugs. Personally, I wouldn't swap implementations. I'd rather stick with a known problem than risk an untested, unsupported combination.\n\nFrom a Tomcat PoV we are normally only going to support folks that are using the Tomcat API implementations.\n\nIn this case the reason you see better performance is that Glassfish hasn't added the required support for imports in the version you are using. Looking at the Glassfish source it appears that this is partially fixed (statics don't appear to be supported yet) in trunk which should be in the next release.\n\nIn terms of solving the performance problem I think we need to cache \"Not Found\" results as well. I'll take a look.", "id": 181100, "attachment_id": null, "creator": "markt@apache.org", "creation_time": "2015-02-16T14:50:49Z", "time": "2015-02-16T14:50:49Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 57583, "text": "Fixed in trunk and 8.0.x for 8.0.21 onwards.", "id": 181101, "attachment_id": null, "creator": "markt@apache.org", "creation_time": "2015-02-16T15:06:23Z", "time": "2015-02-16T15:06:23Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 57583, "attachment_id": null, "text": "Maybe I'm missing something, but even with this cache we still have this problem. Since a en ELContextImpl seems to be created with every jsp render, the cache has very limited effect, we're still seeing dramatically slower rendertimes with this implementation. Am I missing something?", "id": 185050, "time": "2015-09-09T08:59:43Z", "creator": "abultman@marktplaats.nl", "creation_time": "2015-09-09T08:59:43Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 57583, "attachment_id": null, "text": "What you are missing is that with this change in the EL spec resolving of unscoped attributes got a lot slower. We have fixed it as best we can and I am not aware of any further improvements that could be made while staying spec complaint. Suggestions for improvements are welcome but they do need to maintain spec compliance.\n\nThe work-around is to add the appropriate scope to your attributes so use ${requestScope.foo}, ${applicationScope.foo} etc. rather than ${foo}.", "id": 185052, "time": "2015-09-09T09:59:07Z", "creator": "markt@apache.org", "creation_time": "2015-09-09T09:59:07Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 57583, "attachment_id": null, "text": "Isn't that lookup relatively static, as in could the caching of lookups not be shared across instances of ImportHandler rather than having a cache per instance?\n\nI need to read up on the spec more.\n\nThanks for your help, so far. Will look into adding the scopes.", "id": 185054, "time": "2015-09-09T12:08:54Z", "creator": "abultman@marktplaats.nl", "creation_time": "2015-09-09T12:08:54Z", "is_private": false}, {"count": 6, "tags": [], "bug_id": 57583, "attachment_id": null, "text": "I think I have a way to address the performance issues without breaking the spec.", "id": 189336, "time": "2016-03-10T12:13:08Z", "creator": "markt@apache.org", "creation_time": "2016-03-10T12:13:08Z", "is_private": false}, {"count": 7, "tags": [], "bug_id": 57583, "attachment_id": null, "text": "I've implemented an improvement for 9.0.x (9.0.0.M4 onwards) and 8.0.x (8.0.33 onwards).\n\nThe improvement only works when Tomcat's JSP API implementation is used in conjunction with Tomcat's EL implementation.\n\nIn my local testing the time for a single request with a single attribute lookup was reduced from ~1ms to ~0.1ms.", "id": 189338, "time": "2016-03-10T14:29:39Z", "creator": "markt@apache.org", "creation_time": "2016-03-10T14:29:39Z", "is_private": false}, {"count": 8, "tags": [], "bug_id": 57583, "attachment_id": null, "id": 189360, "time": "2016-03-11T16:31:11Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2016-03-11T16:31:11Z", "is_private": false, "text": "For reference: recent threads:\n\"Intermittent ClassNotFoundException in Jasper EL evaluation\"\nhttp://tomcat.markmail.org/thread/4a4x4ms63hrkpoix\n\n\"r1734418\"\nhttp://tomcat.markmail.org/thread/fdacbeusrgvlqd2w"}, {"count": 9, "tags": [], "bug_id": 57583, "attachment_id": null, "text": "(In reply to Mark Thomas from comment #7)\n> I've implemented an improvement for 9.0.x (9.0.0.M4 onwards) and 8.0.x\n> (8.0.33 onwards).\n> \n> The improvement only works when Tomcat's JSP API implementation is used in\n> conjunction with Tomcat's EL implementation.\n> \n> In my local testing the time for a single request with a single attribute\n> lookup was reduced from ~1ms to ~0.1ms.\n\nAny improvement would be highly welcome. After our migration from Tomcat 7 to 8.0.32 many pages in our applications became more or less unusable. We make heavy use of EL and custom tags and would have to rebuild large parts of our applications, if the performance would stay on the current level.\n\nIs there any information about the release date for 8.0.33?", "id": 189700, "time": "2016-03-24T09:11:03Z", "creator": "henning.brune@gmail.com", "creation_time": "2016-03-24T09:11:03Z", "is_private": false}, {"count": 10, "tags": [], "bug_id": 57583, "attachment_id": null, "id": 189723, "time": "2016-03-25T12:01:09Z", "creator": "henning.brune@gmail.com", "creation_time": "2016-03-25T12:01:09Z", "is_private": false, "text": "I just verified the improvements made in v8.0.33 in our application: Running on a current build the execution time on the relevant JSP parts is reduced to 1/10th."}, {"count": 11, "tags": [], "bug_id": 57583, "attachment_id": null, "text": "*** Bug 59699 has been marked as a duplicate of this bug. ***", "id": 191628, "time": "2016-06-14T08:24:29Z", "creator": "markt@apache.org", "creation_time": "2016-06-14T08:24:29Z", "is_private": false}]