[{"count": 0, "tags": [], "creator": "dyp@perchine.com", "attachment_id": null, "is_private": false, "id": 2919, "time": "2001-06-13T07:36:40Z", "bug_id": 2153, "creation_time": "2001-06-13T07:36:40Z", "text": "this patch calculate table cell content offset and table cell height\nwhen fo:table border-collapse property is \"separate\"\n\ncell border sizes got from properties specified directly on cell\n(they should be combined with other cell borders or table borders)\n\nThe patch was made by Ivan Demakov <ivan@ac-sw.com> for one of our projects.\n\n--- src/org/apache/fop/fo/flow/TableCell.java.orig\tWed Jun  6 15:04:12 2001\n+++ src/org/apache/fop/fo/flow/TableCell.java\tWed Jun  6 16:12:32 2001\n@@ -47,6 +47,9 @@\n \t\t */\n \t\tprotected int beforeOffset;\n \n+\t\t/* ivan demakov */\n+\t\tprotected int borderHeight = 0;\n+\n \t\tprotected int height = 0;\n \t\tprotected int top; // Ypos of cell ???\n \t\tprotected int verticalAlign ;\n@@ -155,7 +158,7 @@\n \t\t\t\tthis.cellArea =\n \t\t\t\t\t\tnew AreaContainer(propMgr.getFontState(area.getFontInfo()),\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstartOffset, beforeOffset,\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twidth, area.spaceLeft()- m_borderSeparation/2,\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twidth, area.spaceLeft()- m_borderSeparation/2 + borderHeight/2,\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\tPosition.RELATIVE);\n \n \t\t\t\tcellArea.foCreator=this;\t// G Seshadri\n@@ -215,7 +218,7 @@\n \t\t// TableRow calls this. Anyone else?\n \t\tpublic int getHeight() {\n \t\t\t\t// return cellArea.getHeight() + spaceBefore + spaceAfter;\n-\t\t\t\treturn cellArea.getHeight() + m_borderSeparation ;\n+\t\t\t\treturn cellArea.getHeight() + m_borderSeparation - borderHeight / 2;\n \t\t}\n \n \t\t/** Called by TableRow to set final size of cell content rectangles and\n@@ -230,7 +233,7 @@\n \t\t\t\t//\tcellArea.setMaxHeight(h);\n \t\t\t\t// Increase content height by difference of row content height\n \t\t\t\t// and current cell allocation height (includes borders & padding)\n-\t\t\t\tcellArea.increaseHeight(h - cellArea.getHeight());\n+\t\t\t\tcellArea.increaseHeight(h + borderHeight/2 - cellArea.getHeight());\n \t\t\t\tif (bRelativeAlign) {\n \t\t\t\t\t\t// Must get info for all cells starting in row!\n \t\t\t\t\t\t// verticalAlign can be BEFORE or BASELINE\n@@ -316,6 +319,19 @@\n \t\t\t\t\t\t\tcolumn. Look out for spanning columns.\n \t\t\t\t\t\t*/\n \n+\t\t\t\t\t\t/* ivan demakov */\n+\t\t\t\t\t\tint borderStart  = bp.getBorderLeftWidth(false);\n+\t\t\t\t\t\tint borderEnd    = bp.getBorderRightWidth(false);\n+\t\t\t\t\t\tint borderBefore = bp.getBorderTopWidth(false);\n+\t\t\t\t\t\tint borderAfter  = bp.getBorderBottomWidth(false);\n+\n+\t\t\t\t\t\tint contentOffset = borderStart/2 + bp.getPaddingLeft(false);\n+\n+\t\t\t\t\t\tthis.startOffset += contentOffset;\n+\t\t\t\t\t\tthis.width -= (contentOffset + borderEnd/2 + bp.getPaddingRight(false));\n+\n+\t\t\t\t\t\tthis.beforeOffset = borderBefore/2 + bp.getPaddingTop(false);\n+\t\t\t\t\t\tthis.borderHeight = borderBefore + borderAfter;\n \t\t\t\t}\n \t\t}\n }"}, {"count": 1, "tags": [], "text": "Created attachment 220\nPatch for the problem", "is_private": false, "id": 2921, "creation_time": "2001-06-13T07:39:07Z", "time": "2001-06-13T07:39:07Z", "creator": "dyp@perchine.com", "bug_id": 2153, "attachment_id": 220}, {"count": 2, "tags": [], "bug_id": 2153, "text": "Well, looks like a very unclear bug. Contains a patch to unstated problem... 1.5\nyears old... Lets close it.", "id": 26304, "time": "2002-11-14T20:59:54Z", "creator": "oleg@tkachenko.com", "creation_time": "2002-11-14T20:59:54Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "creator": "gadams@apache.org", "is_private": false, "text": "batch transition pre-FOP1.0 resolved+fixed bugs to closed+fixed", "id": 156222, "time": "2012-04-01T07:05:32Z", "bug_id": 2153, "creation_time": "2012-04-01T07:05:32Z", "attachment_id": null}]