[{"count": 0, "tags": [], "creator": "tpalanga@hotmail.com", "attachment_id": null, "text": "Hi.\nSuppose we have a dedicated web server with 100 (or more) users. We configure \nApache so it will see every user's web files.\n So we have user x and user y, User x cannot see or read the y's web files or \nother files, but he is smart and somehow finds a mode to break into y's web \n(especially in the case with /home/y/public_html setting --- every user knows \nthat user xxyy has an public_html in his home dir, so he exploits it). How ? By \nApache's rights. Does Apache have the rights to read ALL USERS web files ? YES.\n  So x makes a browsing system and he uses Apache's rights to read ALL USERS \nweb files for reading y's web files.  So x reads x's config.php (or anything \nelse) and he finds out the database user and pass. What next ?\n \n  So, I tink it's a bad thing (in fact it's a major security problem) for php \nand Apache to use general rights for every user. Can Apache be configured as an \nuser-level multi-user-threaded server or this is a SECURITY BUG ?\n  \n  I think someone (at least PHP&Apache) cares.\n  Best regards\n  Tudor Palanga.", "id": 18360, "time": "2002-06-21T19:49:30Z", "bug_id": 10135, "creation_time": "2002-06-21T19:49:30Z", "is_private": false}, {"count": 1, "tags": [], "text": "This is a well-known and documented issue with PHP.  Please refer to the \nPHP/Zend documentation (in particular, Zend's \"safe mode\") for details of how \nyou might avoid this problem.\n\nSee: http://www.zend.com/manual/features.safe-mode.php\n\nThanks for using Apache!", "attachment_id": null, "id": 18374, "creator": "jwoolley@apache.org", "time": "2002-06-22T07:51:51Z", "bug_id": 10135, "creation_time": "2002-06-22T07:51:51Z", "is_private": false}]