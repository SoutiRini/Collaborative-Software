[{"count": 0, "tags": [], "creator": "eddiearmeen@yahoo.co.uk", "text": "There are a number of bugs and issues where people are trying to install \napache on windows and they get an \"Installation Interupted\" error message, for \nsome reason ResolveServerName has failed calling gethostbyname.  \nResolveServerName exits and there is no indication of why it fails.\n\nI have added logging of WSAGetLastError when gethostbyname fails (I also added \nit for WSAStartup for good measure) so when users try to install using the MSI \nand it fails, by enabling msi logging they will at least have an indication of \nwhy it failed, instead of just that it failed.\n\n\n\n\n\nIndex: real_features.c\n===================================================================\n--- real_features.c     (revision 190008)\n+++ real_features.c     (working copy)\n@@ -65,6 +65,45 @@\n\n #define MAXHOSTNAMELEN 255\n\n+#define MAXSTRINGLEN 2048\n+\n+\n+UINT __stdcall LogMsiError( MSIHANDLE hInstall, char* szFunction,int  \ndwError )\n+{\n+\n+\n+       char szBuf[MAXSTRINGLEN];\n+    LPVOID lpMsgBuf;\n+       MSIHANDLE hRecord;\n+\n+\n+    FormatMessage(\n+        FORMAT_MESSAGE_ALLOCATE_BUFFER |\n+        FORMAT_MESSAGE_FROM_SYSTEM,\n+        NULL,\n+        dwError,\n+        MAKELANGID(LANG_NEUTRAL, SUBLANG_DEFAULT),\n+        (LPTSTR) &lpMsgBuf,\n+        0, NULL );\n+\n+    wsprintf(szBuf,\n+        \"%s failed with error: %s\",\n+        szFunction, lpMsgBuf);\n+\n+\n+    LocalFree(lpMsgBuf);\n+\n+\n+\n+       hRecord = MsiCreateRecord( 1 );\n+       MsiRecordSetString( hRecord, 0, szBuf );\n+       MsiProcessMessage(hInstall,INSTALLMESSAGE_INFO,hRecord);\n+    MsiCloseHandle(hRecord);\n+\n+       return ERROR_SUCCESS;\n+\n+}\n+\n UINT __declspec(dllexport) __stdcall ResolveServerName(MSIHANDLE hInstall)\n {\n     char str[MAXHOSTNAMELEN + 7]; /* Allow for admin@ */\n@@ -72,23 +111,27 @@\n     struct hostent *p;\n     WSADATA ver;\n     int x, y;\n-\n+\n     if (WSAStartup(MAKEWORD(2, 0), &ver)) {\n         MsiSetPropertyA(hInstall, \"RESOLVED_WINSOCK2\", \"0\");\n+               LogMsiError( hInstall, \"Real_Features_Dll:ResolveServerName \nWSAStartup\", WSAGetLastError() );\n         return ERROR_SUCCESS;\n     }\n\n     if (ver.wVersion < 2) {\n         WSACleanup();\n         MsiSetPropertyA(hInstall, \"RESOLVED_WINSOCK2\", \"0\");\n-        return ERROR_SUCCESS;\n+               return ERROR_SUCCESS;\n     }\n\n     MsiSetPropertyA(hInstall, \"RESOLVED_WINSOCK2\", \"1\");\n\n+\n     if ((gethostname(str, MAXHOSTNAMELEN) != 0)) {\n-        WSACleanup();\n-        return ERROR_SUCCESS;\n+       //We failed to get the hostname so log the actual winsock error\n+               LogMsiError( hInstall, \"Real_Features_Dll:ResolveServerName \ngethostname\", WSAGetLastError() );\n+               WSACleanup();\n+               return ERROR_SUCCESS;\n     }\n\n     if (strchr(str, '.'))", "id": 76348, "time": "2005-06-13T17:24:12Z", "bug_id": 35343, "creation_time": "2005-06-13T17:24:12Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "text": "Fantastic suggestion, thank you!  Adopted a similar patch for the \nnext 2.0.62/2.2.7 releases, along with quite a bit of additional\nvetting of the results, resolution of a possible segfault, and also\ncaught the possibility of winsock2 linkages not working.", "is_private": false, "bug_id": 35343, "id": 112119, "time": "2007-12-22T15:42:06Z", "creator": "wrowe@apache.org", "creation_time": "2007-12-22T15:42:06Z", "attachment_id": null}]