[{"count": 0, "tags": [], "bug_id": 33038, "attachment_id": null, "text": "Ok, I'm not sure what the right mechanism for this should be...  Can't even necessarily say it's a bug - \nmaybe I'm doing something unexpected.\n\nOur API is trying to cache the contents of its queries over time; what it doesn't necessarily want to do is \ncache the results of its child lists.  We would - but only if, when a new file is added to a collection, that \ncollection's ObjectNodes get updated to have the correct results; or at the very least, are notified of a \nchange and cleared.\n\nNow I can get around this by disabling the object node's child cache - just use objectCopy() whenever I \nwant to go looking for the children, and throw away the copy after I've finished.\n\nStill, it would be nice if there were some way of doing this.  I don't really want to look up the \nObjectNode each time; on the other hand, I don't want it to cache invalid data.\n\n\nWhat's the solution to this?  Do I force the lookup of the ObjectNode each time, and rely on the Slide \ncache to cache the results of these operations?  Is there any way that ObjectNode's contents could be \ninvalidated in a way that involves public API?  And can documentation be added to ObjectNode (or \nsomewhere else) to describe this behavior and a recommended solution for people like me?\n\nAlso, if the cache doesn't invalidate, but the object is serializable, in what circumstances is it \nappropriate to serialize the cache information?", "id": 69520, "time": "2005-01-11T11:20:19Z", "creator": "gblock@ctoforaday.com", "creation_time": "2005-01-11T11:20:19Z", "is_private": false}]