[{"count": 0, "tags": [], "creator": "dev@tomcat.apache.org", "attachment_id": null, "is_private": false, "id": 293, "time": "2000-12-12T13:18:45Z", "bug_id": 316, "creation_time": "2000-12-12T13:18:45Z", "text": "Under JDK 1.1.8, the AdaptiveClassLoader leaks file \r\ndescriptors from the getResource method.  This gets invoked\r\n( among other times ) every time Beans.instantiate is called\r\nwith the servlet classloader instead of null ( it tries to\r\nfind a serialized bean before creating a default instance ).\r\nThe ZipFile object used to look in jars found in the \r\nrepository list is never explicitly closed ( and the finalize\r\nmethod doesn't seem to do it either ).  The solution is\r\nto close the ZipFile in a finally block.  Each time this \r\nmethod runs and searches a zip file ( or jar ), it will leak\r\none file descriptor for each file it processes ( we have 10\r\njars in our WEB-INF/lib so that's 10 file descriptors for \r\neach hit to a page with one jsp:useBean ).  A patch follows:\r\n\r\n--- jakarta-tomcat-3.2.orig/src/org/apache/tomcat/loader/AdaptiveClassLoader.java       Wed Nov 29 20:47:52 2000\r\n+++ jakarta-tomcat-3.2/src/org/apache/tomcat/loader/AdaptiveClassLoader.java    Tue Dec 12 13:47:05 2000\r\n@@ -804,8 +804,9 @@\r\n                 // a jar:-URL *could* change even between minor releases, but\r\n                 // didn't between JVM's 1.1.6 and 1.3beta. Tested on JVM's from\r\n                 // IBM, Blackdown, Microsoft, Sun @ Windows and Sun @ Solaris\r\n+                ZipFile zf = null;\r\n                 try {\r\n-                    ZipFile zf = new ZipFile(file.getAbsolutePath());\r\n+                    zf = new ZipFile(file.getAbsolutePath());\r\n                     ZipEntry ze = zf.getEntry(name);\r\n \r\n                     if (ze != null) {\r\n@@ -819,6 +820,8 @@\r\n                 } catch (IOException ioe) {\r\n                     ioe.printStackTrace();\r\n                     return null;\r\n+                } finally {\r\n+                    if ( zf != null ) try { zf.close(); } catch ( IOException e ) { } \r\n                 }\r\n             }   \r\n         }\r\n"}, {"attachment_id": null, "tags": [], "creator": "nacho@apache.org", "is_private": false, "count": 1, "id": 1153, "time": "2001-03-09T21:57:57Z", "bug_id": 316, "creation_time": "2001-03-09T21:57:57Z", "text": "\n\n*** This bug has been marked as a duplicate of 134 ***"}]