[{"count": 0, "tags": [], "bug_id": 42564, "is_private": false, "id": 103964, "creation_time": "2007-06-01T07:17:37Z", "time": "2007-06-01T07:17:37Z", "creator": "m.breier@prodata-systems.de", "text": "Hi there ...\n\nrecently I got the Exception printed below while reading an Excel file that has\nbeen exported by MS Access to \"Excel 97-2002 & 5.0/95 Workbook\" format. \n\nDEBUG: type = 5; currentLength = 8; recordOffset = 8\n\norg.apache.poi.hssf.record.RecordFormatException: Unable to construct record\ninstance\n\tat org.apache.poi.hssf.record.RecordFactory.createRecord(RecordFactory.java:191)\n\tat org.apache.poi.hssf.record.RecordFactory.createRecords(RecordFactory.java:115)\n\tat org.apache.poi.hssf.usermodel.HSSFWorkbook.<init>(HSSFWorkbook.java:205)\n\tat org.apache.poi.hssf.usermodel.HSSFWorkbook.<init>(HSSFWorkbook.java:153)\n\t... 50 more\nCaused by: java.lang.reflect.InvocationTargetException\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat\nsun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)\n\tat\nsun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:274)\n\tat org.apache.poi.hssf.record.RecordFactory.createRecord(RecordFactory.java:179)\n\t... 54 more\nCaused by: java.lang.ArrayIndexOutOfBoundsException\n\tat\norg.apache.poi.hssf.record.RecordInputStream.checkRecordPosition(RecordInputStream.java:132)\n\tat org.apache.poi.hssf.record.RecordInputStream.readInt(RecordInputStream.java:155)\n\tat org.apache.poi.hssf.record.BOFRecord.fillFields(BOFRecord.java:121)\n\tat org.apache.poi.hssf.record.Record.<init>(Record.java:56)\n\tat org.apache.poi.hssf.record.BOFRecord.<init>(BOFRecord.java:99)\n\t... 59 more\n\nWhen the exported Excel file has been reopened and saved with Excel, everything\nis ok. \n\nDEBUG: type = 5; currentLength = 16; recordOffset = 8; sid = 2057;\nContinueRecord.sid = 60\nDEBUG: type = 16; currentLength = 16; recordOffset = 8; sid = 2057;\nContinueRecord.sid = 60\n\n\nTo get a clue why these exceptions occur I put some debug code into\nBOFRecord.fillFields(RecordInputStream in) to produce the DEBUG output stated above:\n\n...\nprotected void fillFields(RecordInputStream in)\n{\n\n    field_1_version  = in.readShort();\n    field_2_type     = in.readShort();\n    field_3_build    = in.readShort();\n    field_4_year     = in.readShort();\n\n    System.out.println(\"DEBUG: type = \"+getType()+\"; \"+\n    \t\t\t\t\t\t  \"currentLength = \"+in.getLength()+\"; \"+\n    \t\t\t\t\t\t  \"recordOffset = \"+in.getRecordOffset()+\"; \"+\n    \t\t\t\t\t\t  \"sid = \"+in.getSid()+\"; \"+\n    \t\t\t\t\t\t  \"ContinueRecord.sid = \"+ContinueRecord.sid);\n\n   \tfield_5_history  = in.readInt();\n   \tfield_6_rversion = in.readInt();\n}\n...\n\nSince I have not a clue what's up with this SID stuff, so what can I do to fix\nthis problem?\n\nRegards\nMarcus", "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 42564, "text": "Are there some 'named range' definitions?\nIf so, try removing the all name definitions and that workbook might be read. \nrelated bug maybe #41546. ", "id": 104438, "time": "2007-06-15T08:11:31Z", "creator": "benelux@email.plala.or.jp", "creation_time": "2007-06-15T08:11:31Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "creator": "apache@gagravarr.org", "attachment_id": null, "text": "Could you please upload a problem file? That way we'll have something to test\nagainst", "id": 112694, "time": "2008-01-09T05:43:13Z", "bug_id": 42564, "creation_time": "2008-01-09T05:43:13Z", "is_private": false}, {"count": 3, "tags": [], "creator": "waiwong@ccnet-hk.com", "attachment_id": 21435, "text": "Created attachment 21435\nFile with problem on opening\n\nI am new to this list, but I have exactly the same problem.  I checked and\nfound Name Range in the file, but I have no way to prevent Access in generating\nthis.  Moreover, the Name Range is working fine if I open and save the file.", "id": 113177, "time": "2008-01-28T02:28:44Z", "bug_id": 42564, "creation_time": "2008-01-28T02:28:44Z", "is_private": false}, {"count": 4, "tags": [], "creator": "apache@gagravarr.org", "attachment_id": null, "is_private": false, "id": 113595, "time": "2008-02-10T13:54:39Z", "bug_id": 42564, "creation_time": "2008-02-10T13:54:39Z", "text": "I've just tested svn trunk with the supplied problem file. I'm able to open the\nfile with HSSFWorkbook, serialise it to bytes, and open that again, all without\nissue. (see src/testcases/org/apache/poi/hssf/usermodel/TestBugs.java#test42564)\n\nSo, I believe this bug is fixed in 3.0.2, but it certainly appears to be fixed\nin svn trunk. If you are still having problems, please re-open the bug, and\nattach a file that doesn't work with svn trunk."}, {"count": 5, "tags": [], "bug_id": 42564, "text": "Created attachment 21503\nempty Excel spreadsheet which shows Exception when opening", "id": 113602, "time": "2008-02-11T00:13:43Z", "creator": "dave.webster@virginmedia.co.uk", "creation_time": "2008-02-11T00:13:43Z", "is_private": false, "attachment_id": 21503}, {"count": 6, "tags": [], "bug_id": 42564, "text": "Hello All, \n\nThe problem:\nI've just attached an 'empty' spreadsheet which throws an Exception when opening\n(doesntwork.xls).\n\nThe stack trace is slightly different to the one originally posted here, but it\nlooks to be the same cause.\n\nThe Exception came from using versions: 3.0.2-FINAL-20080204 and the latest SVN\ntrunk build from Feb. 7th, 2008 (appologies, I am having SVN firewall probs.\nhere at work and can't get a later version at the moment).\n\nExpected behaviour:\nWell, that it opens and process correctly.\n\nTo replicate:\nThe test program I used to open the file was XLS2CSVmra.java found under:\n/src/scratchpad/examples/src/org/apache/poi/hssf/eventusermodel/examples\n\nI compiled and ran it under JDK 1.4.2.\n\nNotes:\nThe Excel file was originally created by a client.  I removed : all data, all\nnamed ranges, hidden worksheets, extra worksheets and macros, to leave the empty\nspreadsheet attached.\n\nAppologies if this bug has been resolved in a POI version post Feb. 7th; I won't\nhave subversion access to test the trunk until mid-week.\n\nMany thanks as always! \n\nDave\n\nStack trace:\n[:/cygdrive/c/work/ExcelParser/42564/513] > javac XLS2CSVmra.java \n[:/cygdrive/c/work/ExcelParser/42564/514] > java -version\njava version \"1.4.2_03\"\nJava(TM) 2 Runtime Environment, Standard Edition (build 1.4.2_03-b02)\nJava HotSpot(TM) Client VM (build 1.4.2_03-b02, mixed mode)\n[:/cygdrive/c/work/ExcelParser/42564/515] > java XLS2CSVmra ../doesntwork.xls \norg.apache.poi.hssf.record.RecordFormatException: Unable to construct record\ninstance\n        at\norg.apache.poi.hssf.record.RecordFactory.createRecord(RecordFactory.java:199)\n        at\norg.apache.poi.hssf.eventusermodel.HSSFEventFactory.genericProcessEvents(HSSFEventFactory.java:172)\n        at\norg.apache.poi.hssf.eventusermodel.HSSFEventFactory.processEvents(HSSFEventFactory.java:98)\n        at\norg.apache.poi.hssf.eventusermodel.HSSFEventFactory.processWorkbookEvents(HSSFEventFactory.java:63)\n        at XLS2CSVmra.process(XLS2CSVmra.java:111)\n        at XLS2CSVmra.main(XLS2CSVmra.java:324)\nCaused by: java.lang.reflect.InvocationTargetException\n        at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n        at\nsun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)\n        at\nsun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)\n        at java.lang.reflect.Constructor.newInstance(Constructor.java:274)\n        at\norg.apache.poi.hssf.record.RecordFactory.createRecord(RecordFactory.java:187)\n        ... 5 more\nCaused by: org.apache.poi.hssf.record.RecordFormatException: Unknown grbit '16'\n        at\norg.apache.poi.hssf.record.formula.ArrayPtg.readTokenValues(ArrayPtg.java:99)\n        at\norg.apache.poi.hssf.record.formula.Ptg.createParsedExpressionTokens(Ptg.java:110)\n        at org.apache.poi.hssf.record.NameRecord.fillFields(NameRecord.java:778)\n        at org.apache.poi.hssf.record.Record.<init>(Record.java:55)\n        at org.apache.poi.hssf.record.NameRecord.<init>(NameRecord.java:139)\n        ... 10 more\nException in thread \"main\"  \n\n\n", "id": 113603, "time": "2008-02-11T00:30:23Z", "creator": "dave.webster@virginmedia.co.uk", "creation_time": "2008-02-11T00:30:23Z", "is_private": false, "attachment_id": null}, {"count": 7, "tags": [], "creator": "apache@gagravarr.org", "attachment_id": null, "is_private": false, "id": 113634, "time": "2008-02-11T09:56:38Z", "bug_id": 42564, "creation_time": "2008-02-11T09:56:38Z", "text": "OK, I can replicate the problem with the new file, and I've added a (disabled)\ntest to TestBugs\n\nMicrosoft are supposed to be releasing some new documentation on the file format\nin a week or so, so I'll wait for that then see if it explains this new Grbit\nwith value 16"}, {"count": 8, "tags": [], "bug_id": 42564, "text": "*** Bug 44483 has been marked as a duplicate of this bug. ***", "id": 104782, "time": "2008-02-25T05:53:15Z", "creator": "dave.webster@virginmedia.co.uk", "creation_time": "2008-02-25T05:53:15Z", "is_private": false, "attachment_id": null}, {"count": 9, "tags": [], "bug_id": 42564, "text": "(In reply to comment #7)\n> Microsoft are supposed to be releasing some new documentation on the file format\n> in a week or so, so I'll wait for that then see if it explains this new Grbit\n> with value 16\n\nI've read through the docs, and the files are apparently only allowed a grbit value of x01 or 0x02, anything else isn't allowed\n\nOddly, we're hitting the issue on the first token value, so there's something pretty messed up from the start (it's not even like we get confused half way through)\n\nI'm not sure how to proceed, as the record has data in that the docs say it shouldn't have. One option might be to just issue a warning and skip the rest of the ptg, but I'm not sure what else that might ripple on and break", "id": 114200, "time": "2008-03-03T09:49:33Z", "creator": "apache@gagravarr.org", "creation_time": "2008-03-03T09:49:33Z", "is_private": false, "attachment_id": null}, {"count": 10, "tags": [], "creator": "dave.webster@virginmedia.co.uk", "attachment_id": null, "is_private": false, "id": 114672, "time": "2008-03-17T01:18:51Z", "bug_id": 42564, "creation_time": "2008-03-17T01:18:51Z", "text": "Hi Nick, \n\nThanks for looking into it.  Yep, awhile back I tried what you suggested (skipping record with warning) ... the ripple was that one of the record(s) skipped contained array info. re: worksheet names/indexes, so things were a bit snafu-ed when trying to index formulas on other worksheets as POI had the completely array size.\n\nThe spreadsheet in question comes from a client who has used many differing versions of Excel to open/add/save info (i.e. the spreadsheet gets circulated to different depts. who annotate it).  I think extra 'junk' gets saved and transmitted on when this happens - in particular, the dubious record.\n\nMy solution has been to open the spreadsheet and save it in OpenOffice.  That seems to work, touch wood.\n\nWill investigate technically again when I have more time.\n\nCheers\n"}, {"count": 11, "tags": [], "bug_id": 42564, "text": "For now, I'll mark this WONTFIX, as the file does seem to have become corrupt, and no longer matches the docs. Since you've tried skipping the record and that doesn't help, I can't see what else we can do for your broken file\n\nYou can probably script openoffice to do the open/save for you, so that's what I'd suggest as a workaround", "id": 114685, "time": "2008-03-17T08:08:19Z", "creator": "apache@gagravarr.org", "creation_time": "2008-03-17T08:08:19Z", "is_private": false, "attachment_id": null}, {"count": 12, "attachment_id": null, "creator": "apache@gagravarr.org", "is_private": false, "id": 115020, "time": "2008-03-27T05:37:12Z", "bug_id": 42564, "creation_time": "2008-03-27T05:37:12Z", "tags": [], "text": "*** Bug 42256 has been marked as a duplicate of this bug. ***"}, {"count": 13, "attachment_id": null, "creator": "Peter.krum@cna.com", "text": "What is the Grbit responsible for and is there anyway to fix it with out opening it in open office? That seems to cause other issues for me.  Can i open the file in a hex editor and fix it?  ", "id": 116139, "time": "2008-05-02T07:05:34Z", "bug_id": 42564, "creation_time": "2008-05-02T07:05:34Z", "tags": [], "is_private": false}, {"count": 14, "tags": [], "bug_id": 42564, "is_private": false, "id": 116186, "creation_time": "2008-05-02T16:25:35Z", "time": "2008-05-02T16:25:35Z", "creator": "josh@apache.org", "text": "(In reply to comment #13)\n> What is the Grbit responsible for and is there anyway to fix it with out\n> opening it in open office? That seems to cause other issues for me.  Can i open\n> the file in a hex editor and fix it?  \n> \n\nFor constant values, the grbit field specifies the type.  16=>Error code.\n\nI tripped over grbit==16 while fixing bug 44792. Somehow I found value 10h described on pages 64-65 of Excel97-2007BinaryFileFormat(xls)Specification.pdf (note - ptgArray is described on pages 304-305 but the grbit values there are deficient).\n\nA simple solution to this bug might be for ArrayPtg.readTokenValues(RecordInputStream) to call ConstantValueParser.parse(RecordInputStream, int).\n\n", "attachment_id": null}, {"count": 15, "tags": [], "creator": "josh@apache.org", "attachment_id": null, "text": "Fixed in svn r653668.\n\nThere were more problems past the grbit=16 issue.  Quite a few fixes required in ArrayPtg.  Some new junits for ArrayPtg added.  Nick's failing junit TestBugs.test42564Alt() enabled.", "id": 116275, "time": "2008-05-05T19:09:39Z", "bug_id": 42564, "creation_time": "2008-05-05T19:09:39Z", "is_private": false}, {"count": 16, "attachment_id": null, "creator": "Peter.krum@cna.com", "is_private": false, "id": 116297, "time": "2008-05-06T08:01:33Z", "bug_id": 42564, "creation_time": "2008-05-06T08:01:33Z", "tags": [], "text": "Thanks guys!  This is much appreciated!\n\nDo you know when the next build will be?\n\n"}, {"count": 17, "tags": [], "bug_id": 42564, "is_private": false, "id": 116299, "creation_time": "2008-05-06T08:07:16Z", "time": "2008-05-06T08:07:16Z", "creator": "apache@gagravarr.org", "text": "(In reply to comment #16)\n> Do you know when the next build will be?\n \nNightly builds are available from\nhttp://encore.torchbox.com/poi-svn-build/", "attachment_id": null}, {"count": 18, "tags": [], "bug_id": 42564, "text": "Thanks!", "id": 116300, "time": "2008-05-06T08:14:17Z", "creator": "Peter.krum@cna.com", "creation_time": "2008-05-06T08:14:17Z", "is_private": false, "attachment_id": null}, {"count": 19, "tags": [], "bug_id": 42564, "text": "A small bug was introduced in r653668.  Excel internally stores array elements column by column.  The only symptom of this bug was that HSSFCell.getCellFormula() would render 2D arrays elements out of order.\n\nFix was applied in svn r660256 and should be available in version 3.1-final\n\n\n", "id": 116978, "time": "2008-05-26T11:09:04Z", "creator": "josh@apache.org", "creation_time": "2008-05-26T11:09:04Z", "is_private": false, "attachment_id": null}, {"count": 20, "tags": [], "bug_id": 42564, "is_private": false, "id": 177380, "creation_time": "2014-08-26T14:53:04Z", "time": "2014-08-26T14:53:04Z", "creator": "dkulinich@luxoft.com", "text": "same shit with DeltaRecord on the some (still not clear)conditions from generated Excels.Overriding of\n    public DeltaRecord(RecordInputStream in) {\n        field_1_max_change = in.readDouble();\n        in.readDouble();\n    }\nhelps but brokes regular/normal files\nso also needs some condition like\n} else if (in.available() == 8 && length == 16) {", "attachment_id": null}, {"count": 21, "tags": [], "creator": "apache@gagravarr.org", "attachment_id": null, "is_private": false, "id": 177382, "time": "2014-08-26T14:59:42Z", "bug_id": 42564, "creation_time": "2014-08-26T14:59:42Z", "text": "(In reply to dkulinich from comment #20)\n> same shit with DeltaRecord on the some (still not clear)conditions from\n> generated Excels.\n\nCan you please share a small file that shows this version of the problem? Also, given that you're trigger it on a different record, you'd probably be best off opening a brand new bug and attaching the problematic file there"}, {"count": 22, "tags": [], "bug_id": 42564, "text": "give me email where to send file - its shouldn't be seeen in SE\nalso after this fix \nthere is another problem:\n\n(hssf) RecordFormatException: Duplicate PageSettingsBlock record (sid=0x83)\n\nmeans 2 HCenterRecord, expected 1\n\n\n[HCENTER]\n    .hcenter        = false\n[/HCENTER]\n[HCENTER]\n    .hcenter        = false\n[/HCENTER]\n\nOfcourse I can rewrite PageSettingsBlock in order to fix this stupidly generated excel model parsing. \nMy question is why Excel shell is tolerable to minor errors and POI is not?", "id": 177383, "time": "2014-08-26T16:46:34Z", "creator": "dkulinich@luxoft.com", "creation_time": "2014-08-26T16:46:34Z", "is_private": false, "attachment_id": null}, {"count": 23, "tags": [], "bug_id": 42564, "is_private": false, "text": "so, my another suggestion is apply one more small fix\nto PageSettingsBlock\n\nchange \nprivate void checkNotPresent(Record rec) {...}\nto \nprivate boolean checkNotPresent(Record rec) {...}\nand ignore duplicates like HCenterRecord (all that uses for printing only and not critical)", "id": 177384, "time": "2014-08-26T17:00:47Z", "creator": "dkulinich@luxoft.com", "creation_time": "2014-08-26T17:00:47Z", "attachment_id": null}]