[{"count": 0, "tags": [], "bug_id": 53362, "attachment_id": 28888, "is_private": false, "id": 159700, "time": "2012-06-05T10:10:45Z", "creator": "spam.moreplz@gmail.com", "creation_time": "2012-06-05T10:10:45Z", "text": "Created attachment 28888\nsrc file, not including single change to message.properties\n\nNeeded a __time function with the ability to add n days before returning a date string so I created one.\n\nPatch form:\n\nmessage.properties\n+ time_add=Number of days to add (optional)\n\n--- <unnamed>\n+++ <unnamed>\n@@ -19,6 +19,7 @@\n package org.apache.jmeter.functions;\n \n import java.text.SimpleDateFormat;\n+import java.util.Calendar;\n import java.util.Collection;\n import java.util.Date;\n import java.util.HashMap;\n@@ -36,7 +37,6 @@\n \n /**\n  * __time() function - returns the current time in milliseconds\n- * @since 2.2\n  */\n public class TimeFunction extends AbstractFunction {\n \n@@ -49,6 +49,7 @@\n \n     static {\n         desc.add(JMeterUtils.getResString(\"time_format\")); //$NON-NLS-1$\n+        desc.add(JMeterUtils.getResString(\"time_add\")); //$NON-NLS-1$\n         desc.add(JMeterUtils.getResString(\"function_name_paropt\")); //$NON-NLS-1$\n         aliases.put(\"YMD\", //$NON-NLS-1$\n                 JMeterUtils.getPropDefault(\"time.YMD\", //$NON-NLS-1$\n@@ -67,6 +68,7 @@\n \n     // Ensure that these are set, even if no paramters are provided\n     private String format   = \"\"; //$NON-NLS-1$\n+    private String addDays = \"\"; //$NON-NLS-1$\n     private String variable = \"\"; //$NON-NLS-1$\n \n     public TimeFunction(){\n@@ -86,7 +88,16 @@\n                 fmt = format;// Not found\n             }\n             SimpleDateFormat df = new SimpleDateFormat(fmt);// Not synchronised, so can't be shared\n-            datetime = df.format(new Date());\n+            \n+            Date date = new Date();\n+\n+            if(addDays.length() > 0) {\n+            \tCalendar c = Calendar.getInstance();\n+            \tc.setTime(date);\n+            \tc.add(Calendar.DATE, Integer.parseInt(addDays)); //Add or subtract n days to the date object. //TODO BUT no support for the milliseconds bit above. Add?\n+            \tdate = c.getTime();\n+            }\n+            datetime = df.format(date);\n         }\n \n         if (variable.length() > 0) {\n@@ -102,7 +113,7 @@\n     @Override\n     public synchronized void setParameters(Collection<CompoundVariable> parameters) throws InvalidVariableException {\n \n-        checkParameterCount(parameters, 0, 2);\n+        checkParameterCount(parameters, 0, 3);\n \n         Object []values = parameters.toArray();\n         int count = values.length;\n@@ -112,7 +123,11 @@\n         }\n \n         if (count > 1) {\n-            variable = ((CompoundVariable)values[1]).execute().trim();\n+            addDays = ((CompoundVariable)values[1]).execute().trim();\n+        }\n+        \n+        if (count > 2) {\n+            variable = ((CompoundVariable)values[2]).execute().trim();\n         }\n \n     }\n@@ -127,4 +142,4 @@\n     public List<String> getArgumentDesc() {\n         return desc;\n     }\n-}+}"}, {"count": 1, "tags": [], "bug_id": 53362, "attachment_id": null, "id": 159718, "time": "2012-06-05T20:13:35Z", "creator": "p.mouawad@ubik-ingenierie.com", "creation_time": "2012-06-05T20:13:35Z", "is_private": false, "text": "This would change the contrat of the function.\nI suggest you maybe create a new function."}, {"count": 2, "tags": [], "bug_id": 53362, "attachment_id": null, "is_private": false, "id": 159719, "time": "2012-06-05T20:31:39Z", "creator": "spam.moreplz@gmail.com", "creation_time": "2012-06-05T20:31:39Z", "text": "Seemed like an overkill change for such limited functionality but I don't disagree with you either. It does change the contract and breaks (backwards?) compatability. I'll see if I can refactor it nicely and minimize duplicity. \n\nActually,  as it's an optional parameter, how about adding it to the end instead?"}, {"count": 3, "tags": [], "bug_id": 53362, "text": "Not sure why days are special; surely there must also be use cases for other date calculations?\n\nNote that there is a work-round using the scripting functions - it's easy enough to create functions to do this using Beanshell, Jexl, or Javascript.", "id": 159731, "attachment_id": null, "creator": "sebb@apache.org", "creation_time": "2012-06-06T00:13:16Z", "time": "2012-06-06T00:13:16Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 53362, "attachment_id": null, "is_private": false, "id": 159751, "time": "2012-06-06T11:46:17Z", "creator": "spam.moreplz@gmail.com", "creation_time": "2012-06-06T11:46:17Z", "text": "KISS, a month is 30 days, a year 365 days :)\nI'm aware of the oversimplification, but I'd estimate this works for 99% of use cases\n\nI mostly use it for 'tomorrow' (+1) or for example a range: 'this month' (0, +30)\n\nAware of the workarounds, but I can't be the only person who'd like to be able to use a simple 'tomorrow' function without having to write code.\n\nI'd happily create a new function or append the current one. Would you prefer a \n\n__time(format, variable, +/-Days) (reordered for compatebility)\n\nor a new function?\n\nproposal:\n\n__timeMath(format, number, m|h|d|w|M|y**, variable)\n\n** applied to number, ie +/- 1 minute, hour, day, week, month or year. Only one option is possible."}, {"count": 5, "tags": [], "bug_id": 53362, "attachment_id": null, "id": 159768, "time": "2012-06-06T18:34:02Z", "creator": "sebb@apache.org", "creation_time": "2012-06-06T18:34:02Z", "is_private": false, "text": "(In reply to comment #4)\n> KISS, a month is 30 days, a year 365 days :)\n> I'm aware of the oversimplification, but I'd estimate this works for 99% of\n> use cases\n> \n> I mostly use it for 'tomorrow' (+1) or for example a range: 'this month' (0,\n> +30)\n> \n> Aware of the workarounds, but I can't be the only person who'd like to be\n> able to use a simple 'tomorrow' function without having to write code.\n> \n> I'd happily create a new function or append the current one. Would you\n> prefer a \n> \n> __time(format, variable, +/-Days) (reordered for compatebility)\n> \n> or a new function?\n> \n> proposal:\n> \n> __timeMath(format, number, m|h|d|w|M|y**, variable)\n> \n> ** applied to number, ie +/- 1 minute, hour, day, week, month or year. Only\n> one option is possible.\n\nBugzilla is not ideal for discussions; best to raise this on the user list to see what (if anything) other users would be interested in.\n\nThe dev list would be the place to discuss implementation issues."}]