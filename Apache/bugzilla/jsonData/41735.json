[{"count": 0, "tags": [], "bug_id": 41735, "text": "The RollingFileAppender tries to rename the old files during roll over. \nHowever, it does not check if the rename succeeded and as a result, it may end\nup deleting information.  In particular, on Windows, the file rename can fail if\nanother process has the file open.\n\nThis problem was found in 1.2.14 and seems to still exist in 1.2.15 rc1.\n\nThe following changes address the issue.\n120a121,122\n>     boolean failedRename = false;\n> \n127,131c129,139\n<     if(maxBackupIndex > 0) {\n<       // Delete the oldest file, to keep Windows happy.\n<       file = new File(fileName + '.' + maxBackupIndex);\n<       if (file.exists())\n<        file.delete();\n---\n>     // if the .1 file doesn't exist then we don't need to rename either\n>     if ((maxBackupIndex > 0)) {\n>       target = new File(fileName + \".\" + 1);\n>       if (target.exists()) {\n> \t // Delete the oldest file, to keep Windows happy.\n> \t file = new File(fileName + '.' + maxBackupIndex);\n> \t if (file.exists()) {\n> \t   if (! file.delete()) {\n> \t      failedRename = true;\n> \t   }\n> \t }\n133,140c141,154\n<       // Map {(maxBackupIndex - 1), ..., 2, 1} to {maxBackupIndex, ..., 3, 2}\n<       for (int i = maxBackupIndex - 1; i >= 1; i--) {\n< \tfile = new File(fileName + \".\" + i);\n< \tif (file.exists()) {\n< \t  target = new File(fileName + '.' + (i + 1));\n< \t  LogLog.debug(\"Renaming file \" + file + \" to \" + target);\n< \t  file.renameTo(target);\n< \t}\n---\n> \t // Map {(maxBackupIndex - 1), ..., 2, 1} to {maxBackupIndex, ..., 3, 2}\n> \t if (! failedRename) {\n> \t    for (int i = maxBackupIndex - 1; i >= 1; i--) {\n> \t      file = new File(fileName + \".\" + i);\n> \t      if (file.exists()) {\n> \t\ttarget = new File(fileName + '.' + (i + 1));\n> \t\tLogLog.debug(\"Renaming file \" + file + \" to \" + target);\n> \t\tif (! file.renameTo(target)) {\n> \t\t   failedRename = true;\n> \t\t   break;\n> \t\t}\n> \t      }", "id": 99909, "time": "2007-02-28T12:39:10Z", "creator": "iwreilly@yahoo.com", "creation_time": "2007-02-28T12:39:10Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 41735, "attachment_id": 19651, "id": 99910, "time": "2007-02-28T12:39:57Z", "creator": "iwreilly@yahoo.com", "creation_time": "2007-02-28T12:39:57Z", "is_private": false, "text": "Created attachment 19651\npatch"}, {"count": 2, "tags": [], "bug_id": 41735, "attachment_id": null, "id": 99920, "time": "2007-02-28T16:35:13Z", "creator": "carnold@apache.org", "creation_time": "2007-02-28T16:35:13Z", "is_private": false, "text": "Looks like a pretty good fix to get in before 1.2.15 comes out.  I've got a\ncleaner version of the patch (I think it is equivalent) which I'll attach. \nDefinitely need to add some test cases around it before committing it and\ncreating a second release candidate."}, {"count": 3, "tags": [], "bug_id": 41735, "attachment_id": 19653, "id": 99921, "time": "2007-02-28T16:35:53Z", "creator": "carnold@apache.org", "creation_time": "2007-02-28T16:35:53Z", "is_private": false, "text": "Created attachment 19653\nMinimal patch for rename failure"}, {"count": 4, "tags": [], "creator": "carnold@apache.org", "text": "I don't have time to research this at the moment, but need make sure that the patch does not cause a \nrollover to be attempted on every subsequent log request after a rename fails.  My recollection is that RFA \nwould be suseptible to that and locking the .1 file would in very quick order bring performance to its \nknees and delete all the older files.  If the existing log file can't be renamed, then the next rollover should \nbe attempted at about the time the next rollover attempt would happen.", "id": 99922, "attachment_id": null, "bug_id": 41735, "creation_time": "2007-02-28T16:50:27Z", "time": "2007-02-28T16:50:27Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 41735, "attachment_id": null, "id": 99927, "time": "2007-02-28T22:30:40Z", "creator": "carnold@apache.org", "creation_time": "2007-02-28T22:30:40Z", "is_private": false, "text": "On 2nd or 3rd thought, it is likely too significant to try to rush into a release at the last moment.  I'm still \ngoing to try to get some tests written and get something in the SVN for a longer period of testing before a \n1.2.16.  This is a long-standing issue with RFA, not a regression, so it isn't a critical time-sensitive issue. "}, {"count": 6, "tags": [], "bug_id": 41735, "attachment_id": null, "id": 99960, "time": "2007-03-01T23:07:30Z", "creator": "carnold@apache.org", "creation_time": "2007-03-01T23:07:30Z", "is_private": false, "text": "Committed fix and test cases in rev 513638.\n\nOriginal patch would result in attempted rollover on every subsequent log request after a failure which \nwould result in log files above the locked file quickly being discarded.  The eventual patch will only retry \nrollover after the log file grows another maxFileSize.\n\nThe test cases keep a .1 and .3 file open respectively and then have some attempted rollovers that will fail \non OS's that do not rename open files and then a successful rollover after the files are closed."}, {"count": 7, "tags": [], "creator": "jain_prabhat@yahoo.com", "attachment_id": null, "text": "If the file rolling over fails all the logging is done in the same file and as \na result if the file is being locked for long time all the history logs keep \non getting re-written. So an eventual release of this patch in the newer \nversion is very important.", "id": 105260, "time": "2007-07-10T19:16:27Z", "bug_id": 41735, "creation_time": "2007-07-10T19:16:27Z", "is_private": false}, {"count": 8, "text": "Fix committed in rev 513638 was published in log4j 1.2.15.  Not sure if Prabhat Jain comment is \nindicating some other issue or just urging a release.  If there are remaining issues with the log4j 1.2.15 \nrelease, a new bug report should be filed as this one is marked as complete in log4j 1.2.15.", "creator": "carnold@apache.org", "attachment_id": null, "id": 109918, "time": "2007-10-29T11:26:05Z", "bug_id": 41735, "creation_time": "2007-10-29T11:26:05Z", "tags": [], "is_private": false}]