[{"count": 0, "tags": [], "bug_id": 34202, "attachment_id": null, "text": "Batik passes\n\n<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\">\n\n  <rect id=\"test\" fill=\"#f00\" width=\"100\" height=\"100\" />\n\n  <script type=\"text/ecmascript\">\n    var test = document.getElementById('test');\n    var cssv = test.getPresentationAttribute(\"fill\");\n    try\n    {\n      if (cssv.RGBColor.red) // should be rgbColor, see bug 34201\n      {\n        test.setAttributeNS(null, \"fill\", \"green\")\n      }\n    }\n    catch (e)\n    {\n        // ignore errors\n    }\n  </script>\n\n</svg>\n\nbut fails the test if it is changed to\n\n  <rect id=\"test\" fill=\"red\" width=\"100\" height=\"100\" />", "id": 72917, "time": "2005-03-28T06:12:12Z", "creator": "bjoern@hoehrmann.de", "creation_time": "2005-03-28T06:12:12Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 34202, "attachment_id": null, "text": "I'm not 100% sure on this one.\nBatik keeps the value an identifier until it 'computes' the\nvalue for the property at which time it becomes the \nColorValue/PaintValue.\n\n   This is roughly the same as other identifiers like\n'currentColor' that stay identifiers until computed.", "id": 72922, "time": "2005-03-28T12:52:34Z", "creator": "deweese@apache.org", "creation_time": "2005-03-28T12:52:34Z", "is_private": false}, {"count": 2, "tags": [], "creator": "bjoern@hoehrmann.de", "attachment_id": null, "id": 72932, "time": "2005-03-28T19:41:11Z", "bug_id": 34202, "creation_time": "2005-03-28T19:41:11Z", "is_private": false, "text": "There is a difference between \"red\" and \"currentColor\" though, the latter uses \nthe paintTypes SVG_PAINTTYPE_CURRENTCOLOR and SVG_PAINTTYPE_URI_CURRENTCOLOR, \nnot any of the RGBCOLOR paintTypes. It seems very reasonable to expect that \nrgbColor provides a proper RGBColor if the paintType is some RGBCOLOR type, \notherwise it should be null rather than an inaccessible RGBColor. With the \ncurrent implementation you would need to get the cssText and match it against \nthe long list of color keywords yourself to get the rgb values, I don't think \nthis is how it should work."}, {"count": 3, "attachment_id": null, "bug_id": 34202, "text": "  While it's paint type is RGBCOLOR it's primitiveType is\n'ident' which is a more more appropriate field to check\nfor the 'type' of the Value.  \n\n  What happens they introduce a 'lighter' ident?  I think \nthat until the value is computed it is appropriate to \nleave the ident's as idents.  I don't have really strong\nfeelings on this but I don't feel that there is a good\ncase saying Batik is wrong to behave like this.\n\n  Should you be able to ask 'font-weight: bold' for it's \n'floatValue'?  Given the existence of 'bolder', 'lighter'\nident's this would be a hard sell to me...", "id": 72968, "time": "2005-03-29T14:41:04Z", "creator": "deweese@apache.org", "creation_time": "2005-03-29T14:41:04Z", "tags": [], "is_private": false}, {"count": 4, "tags": [], "creator": "bjoern@hoehrmann.de", "text": "(In reply to comment #3)\n>   While it's paint type is RGBCOLOR it's primitiveType is\n> 'ident' which is a more more appropriate field to check\n> for the 'type' of the Value.\n\nSVGPaint does not inherit from CSSPrimitiveValue so that's not really possible.\n  \n>   What happens they introduce a 'lighter' ident?  I think \n> that until the value is computed it is appropriate to \n> leave the ident's as idents.  I don't have really strong\n> feelings on this but I don't feel that there is a good\n> case saying Batik is wrong to behave like this.\n\nThis seems orthogonal to what rgbColor should return. getPresentationAttribute \nis a view on the specified value, a lighter keyword could not be resolved to a \nRGBColor without computation, so rgbColor should be null for such a value. But \nin this case Batik returns not null but a useless RGBColor object. But I'll \nraise this issue on www-svg...\n\n>   Should you be able to ask 'font-weight: bold' for it's \n> 'floatValue'?  Given the existence of 'bolder', 'lighter'\n> ident's this would be a hard sell to me...\n\nThat's a different question really as there is no specialized CSSFontWeight \ninterface with a property designed to return the numericalFontWeight...", "id": 73023, "time": "2005-03-29T22:31:39Z", "bug_id": 34202, "creation_time": "2005-03-29T22:31:39Z", "is_private": false, "attachment_id": null}]