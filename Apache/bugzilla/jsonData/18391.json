[{"count": 0, "tags": [], "bug_id": 18391, "attachment_id": null, "is_private": false, "id": 33867, "time": "2003-03-26T21:29:31Z", "creator": "gus.heck@olin.edu", "creation_time": "2003-03-26T21:29:31Z", "text": "I was just fooling around with subant, and became really annoyed that it failed\nevery time it couldn't find a build file, but I definately wanted it to fail if\nany of the subbuilds failed. \n\nI decided it was faster and prevented future maintainence to patch subant than\nspecifically exclude directories that happened to live at the same level, but\ndon't yet have build files or don't need them. \n\nSo the request is for the addition of a ignoreMissingBuildFiles atribute for\nsubant. It should of course default to false to preserve the existing behavior,\nand when true cause subant to simply ignore any specified build file that is not\nfound. (thus ignoring both a missing (default) build.xml, and any explicit build\nfile that doesn't exist) so here comes the patch..."}, {"count": 1, "tags": [], "text": "Created attachment 5523\nA patch to add ignoreMissingBuildFiles atribute to subant", "is_private": false, "id": 33868, "creator": "gus.heck@olin.edu", "time": "2003-03-26T21:30:21Z", "bug_id": 18391, "creation_time": "2003-03-26T21:30:21Z", "attachment_id": 5523}, {"count": 2, "tags": [], "bug_id": 18391, "attachment_id": null, "is_private": false, "id": 33869, "time": "2003-03-26T21:34:39Z", "creator": "ddevienne@lgc.com", "creation_time": "2003-03-26T21:34:39Z", "text": "Hmmm, I never thought that would be an issue, as I've never setup a buildpath \nthat includes sub-projects without a build file, but I guess it could be useful \nto some people (obviously ;-). I would definitely keep the current default \nbehavior though, as you indicated you did in your patch. --DD"}, {"count": 3, "tags": [], "creator": "stevel@apache.org", "is_private": false, "id": 33871, "creation_time": "2003-03-26T21:43:58Z", "time": "2003-03-26T21:43:58Z", "bug_id": 18391, "text": "I'd have expected the project to take a fileset, and you'd just say\nserver/*/build.xml. But I get the implication that directories without a\nbuild.xml fail? That's cheesy. \n\nGiven this task is in its infancy, I'm happy with not only the change, but any\nunderlying behaviour changes we need (i.e. get the defaults right)", "attachment_id": null}, {"count": 4, "attachment_id": null, "bug_id": 18391, "text": "Actually I was giving it a DirSet :) and letting it just look for build.xml in\neach directory. Seems to work great on my machine with my patch applied.", "id": 33873, "time": "2003-03-26T21:48:01Z", "creator": "gus.heck@olin.edu", "creation_time": "2003-03-26T21:48:01Z", "tags": [], "is_private": false}, {"count": 5, "tags": [], "creator": "ddevienne@lgc.com", "is_private": false, "id": 33874, "creation_time": "2003-03-26T21:51:08Z", "time": "2003-03-26T21:51:08Z", "bug_id": 18391, "text": "I'm not following Steve... What does cheesy means in this context?\n\n<subant> can take a <fileset> or a <dirset> or whatever else a path can take. \njava.io.Files which are not build files (i.e. !isFile() || isDirectory()) are \nappended the default build file name ('antfile' attribute, same as <ant> BTW). \nOf course, like in most places in Ant, explicitly telling a task to do \nsomething that missing the essential processing unit, the build file, is an \nerror by default in <subant>.\n\nWhat is wrong with that? I guess I'm not following... --DD", "attachment_id": null}, {"count": 6, "attachment_id": null, "creator": "ddevienne@lgc.com", "is_private": false, "id": 33875, "time": "2003-03-26T21:54:25Z", "bug_id": 18391, "creation_time": "2003-03-26T21:54:25Z", "tags": [], "text": "Then you could have simply specified a fileset...\n\nAssuming:\n\n<dirset dir=\"${dir}\">\n  <include name=\"${somepattern}\"/>\n</dirset>\n\nusing \n\n<fileset dir=\"${dir}\">\n  <include name=\"${somepattern}/build.xml\"/>\n</dirset>\n\nWould only have found the *existing* build files. Not need for a patch in this \ncase, and still as order less as before. --DD"}, {"count": 7, "tags": [], "bug_id": 18391, "attachment_id": null, "is_private": false, "id": 33877, "time": "2003-03-26T22:09:01Z", "creator": "gus.heck@olin.edu", "creation_time": "2003-03-26T22:09:01Z", "text": "I agree with the current default. I can see utility in both directions. In my\ncase I am willing to commit to being sure that the build file is there, because\nthe target I am writing is for develop-time compiling of multiple packages that\nrely on a library (which I am going to edit and don't want to break). But when\ndeploying a product it would be very bad to silently ignore a missing build file\nbecause the finished product that was deployed might come out broken. I think\nDominique got it right, I just want the ability to loosen things up.\n\nhehe mid-aired... \n\nhmm the fileset solution does sound like it would work. I suppose that pushes my\npatch into  the realm of syntax sugar... I kinda like it though because it suits\nhow I think about the problem...\n"}, {"count": 8, "tags": [], "text": "I was thinking about this on the drive to and from work and it seems that subant\nclass clearly was intended to support specifying a directory that contained a\nbuild.xml as well as specifying the build file explicitly. There is some work\ndone to append the antfile to non-file path elements. Specifically this:\n\n         for (int i=0; i<count; ++i) {\n            File file = new File(filenames[i]);\n            if (file.isDirectory()) {\n                file = new File(file, antfile);\n            }\n            execute(file);\n         }\n\nSince the task clearly is meant to support the use of directories, I think it is\na good idea to give the users some control over how it handles missing build\nfiles. Alternately, one might decide that it is clearer if the task only works\nwhen the build file is specified and directories should always fail. I have a\nbuild working, now and it could be conducted either with dirsets and my patch or\nusing Dominique's fileset method. It would be nice to know if I need to switch\nto the fileset method or not.\n\nMy personal bias tends to be toward giving the user multiple options (so long as\nit doesn't lead to confusion or really messy practices). If there are multiple\nways to do the same thing, a wider array of individuals will find that their\nfirst instinct on how to acomplish something is correct. To me this is what\nuser-friendliness is all about :). I don't think my patch is large enough to\nraise perfomance issues, so I am still hoping it gets applied. ", "attachment_id": null, "id": 33942, "creator": "gus.heck@olin.edu", "time": "2003-03-27T16:12:44Z", "bug_id": 18391, "creation_time": "2003-03-27T16:12:44Z", "is_private": false}, {"count": 9, "tags": [], "text": "Any more thoughts on this? Dominique, what do you think, is this a reasonably\nuseful addition to subant? Any objections to someone commiting it? If not, any1\nwanna do the commit? :)", "is_private": false, "id": 34901, "creator": "gus.heck@olin.edu", "time": "2003-04-10T18:20:21Z", "bug_id": 18391, "creation_time": "2003-04-10T18:20:21Z", "attachment_id": null}, {"count": 10, "tags": [], "text": "I'm still not enthused by it, given filesets do the right thing.", "is_private": false, "id": 34994, "creator": "stevel@apache.org", "time": "2003-04-11T16:12:47Z", "bug_id": 18391, "creation_time": "2003-04-11T16:12:47Z", "attachment_id": null}, {"count": 11, "attachment_id": null, "creator": "gus.heck@olin.edu", "is_private": false, "id": 35004, "time": "2003-04-11T17:42:12Z", "bug_id": 18391, "creation_time": "2003-04-11T17:42:12Z", "tags": [], "text": "Maybe selecting by directories isn't what we want then? \n\nIf one can specify directories, then the build breaks if someone adds a\ndirectory that becomes included without also adding a working build file, or\nadds an exclude to the build to handle the new directory. This brittleness may\nbe desireable, but if it is discovered accidentally, right now the only fix is\nto recode the build file with a fileset that selects specific buildfile names\n(making the antfile atribute useless). With this patch adding the\nignoreMissingBuildFiles atribute fixes the problem with no further rethinking of\nthe logic.\n\nMy concern is for people who do just what I did and assume that the way to use\nsubant is to tell it a antfile name and feed it directories. (why else would the\nantfile atribute be there?)\n\nThis logic leads one down the brittle path first. If nothing else, I think this\nissue might be good to mention in whatever manual docs or xdocs are provided for\nsubant in the future.\n\nI suppose it could be that I stumbled into this minor hole simply because I\nthink in wierd ways..."}, {"count": 12, "tags": [], "bug_id": 18391, "attachment_id": null, "id": 35011, "time": "2003-04-11T18:39:17Z", "creator": "ddevienne@lgc.com", "creation_time": "2003-04-11T18:39:17Z", "is_private": false, "text": "Sorry Gus, I'll have to go with Steve on this one. I'm in favor of the changes \nfor supporting an absolute antfile (not really the impl, more the use case), \nbut your use case is already supported as-is, and I'm not too fond on your \nproposed changes personnally. Cheers, --DD"}, {"count": 13, "tags": [], "bug_id": 18391, "attachment_id": null, "is_private": false, "id": 35020, "time": "2003-04-11T19:23:35Z", "creator": "gus.heck@olin.edu", "creation_time": "2003-04-11T19:23:35Z", "text": "Hmm well I am open to suggestions as to how to improve my patch if there are\nthings you don't like about it. I'm not quite sure what you mean by \"absolute\nbuildfile\". "}, {"count": 14, "attachment_id": null, "bug_id": 18391, "text": "I'm referring to http://nagoya.apache.org/bugzilla/show_bug.cgi?id=18715.\nI was trying to say that I see that other use case as valid, and yours as \ninvalid (but that's just me). --DD", "id": 35023, "time": "2003-04-11T19:30:55Z", "creator": "ddevienne@lgc.com", "creation_time": "2003-04-11T19:30:55Z", "tags": [], "is_private": false}, {"count": 15, "attachment_id": null, "bug_id": 18391, "text": "Ah that bug slipped under my radar it would seem. I am perfectly happy if my\nbehavior is a useful part of a more interesting extension. I don't much care if\nit is my patch or his. I also like his ideas.", "id": 35048, "time": "2003-04-12T03:37:56Z", "creator": "gus.heck@olin.edu", "creation_time": "2003-04-12T03:37:56Z", "tags": [], "is_private": false}, {"count": 16, "tags": [], "bug_id": 18391, "text": "I have committed the code for the bug 18715, which I have also closed for now.\nGus, if you have any issues, reopen 18715. Cheers.\n\n*** This bug has been marked as a duplicate of 18715 ***", "id": 37526, "time": "2003-05-21T07:36:11Z", "creator": "levylambert@tiscali-dsl.de", "creation_time": "2003-05-21T07:36:11Z", "is_private": false, "attachment_id": null}, {"count": 17, "tags": [], "creator": "gus.heck@olin.edu", "attachment_id": null, "text": "I've stubbed my toe on a use case that \"just use filesets\" does not cover now so\nI am going to reopen this... I discovered it when I tried to migrate away from\nmy old patched version of ant (patched with the patch I submitted, and thus\nallowing the ignoreMissingBuildFile atribute) to a newer version.\n\n    <subant target=\"compile\"\n            buildpathref=\"path.dirs.copied.psets\"\n            ignoreMissingBuildFile=\"true\">\n      <property name=\"compile.failonerror\" value=\"true\"/>\n    </subant>\n\nElswhere I define\n\n    <path id=\"path.dirs.copied.psets\">\n      <dirset dir=\"${dir.build.src}\">\n        <include name=\"*/*/*/psets/*\"/>\n      </dirset>\n    </path>\n\n\nI definately want a dirset for this path, when it is used for copying as I want\nthe entire directories which include among other things, java code, libraries,\nimages and build files, but I definately don't want to fail if it copies a\ndirectory that doesn't have a build file (there are many). I DO very much want\nthe build to fail if one of the sub builds fail. \n\nI would like to not need to maintain 2 specifications of this path. (the second\none being a fileset with the pattern \"*/*/*/psets/*/build.xml). \n\nI am entirely open to an alternate (shorter!) name for the atribute, but don't\nseem to be able to think of one I like better", "id": 44537, "time": "2003-09-23T21:24:31Z", "bug_id": 18391, "creation_time": "2003-09-23T21:24:31Z", "is_private": false}, {"count": 18, "tags": [], "creator": "gus.heck@olin.edu", "is_private": false, "id": 44601, "creation_time": "2003-09-24T16:21:03Z", "time": "2003-09-24T16:21:03Z", "bug_id": 18391, "text": "Created attachment 8333\nSince I had to re-add this for my build to work with 1.7alpha, here is the patch recreated vs the latest CVS", "attachment_id": 8333}]