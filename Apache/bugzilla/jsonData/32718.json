[{"text": "What I have done:\n- \"ANT_HOME\" system property is not set.\n- \"ant-launcher.jar\" lies on path that contains umlauts\n  (i.e. \"c:\\\u00e4 \u00f6 \u00fc\\ant-launcher.jar\")\n- I call the class org.apache.tools.ant.launch.Launcher and receive the message\n\"Ant home is set incorrectly or ant could not be located\"\n\nDebugging Ant shows that the problem is in the method \"fromURI(String uri)\" in\nclass \"org.apache.tools.ant.launch.Locator\":\n\nThe method  \"getResourceSource(ClassLoader c, String resource)\" of that class\ncalls \"c.getResource(resource)\" (with c is ClassLoader) which returns   \n\"jar:file:/C:/%c3%a4%20%c3%b6%20%c3%bc/ant-launcher.jar!/org/apache/to\nols/ant/launch/Launcher.class\".\n\nThis URI is then given to the \"fromURI(String uri)\" method which tries to decode\nit but fails to do that correctly since the URI is encoded in UTF-8:\ni.e. \"%c3%a4\" is encoded into two consecutive characters (i.e. it splits it up\nin \"%c3\" and \"%a4\") instead of one. Therefore instead of getting back an \"\u00e4\" the\nstring \"\u00c3\u00a4\" is returned and hence the resulting path is incorrect.\n\nCould the de/encoding scheme from the revised 1.4 version of URLEncoder be used?", "tags": [], "creator": "holger@xtramind.com", "attachment_id": null, "count": 0, "id": 68566, "time": "2004-12-15T14:29:48Z", "bug_id": 32718, "creation_time": "2004-12-15T14:29:48Z", "is_private": false}, {"count": 1, "tags": [], "text": "Does this really depend on 8031, or is it actually a duplicate?  Adding the 1.4+\nsensitive code is easy enough especially now that Jesse's a committer, ;) but\nhow do we get the correct behavior on 1.2-3, if at all?", "is_private": false, "bug_id": 32718, "id": 68596, "time": "2004-12-15T23:26:03Z", "creator": "mbenson@apache.org", "creation_time": "2004-12-15T23:26:03Z", "attachment_id": null}, {"count": 2, "tags": [], "creator": "jglick@apache.org", "attachment_id": null, "id": 68632, "time": "2004-12-16T22:27:51Z", "bug_id": 32718, "creation_time": "2004-12-16T22:27:51Z", "is_private": false, "text": "Well I believe that a patch like that in #8031 would solve this bug, so I guess\nit could be a duplicate. Reporter would need to assist in confirming, since in\nmy experience the behavior of non-ASCII characters in filenames on Windows w/\nJava apps is so sensitive to your machine's configuration and choice of tools\nthat it would be difficult for someone else to reproduce the problem exactly.\n(By contrast, a Java app running on a modern Linux box with *.UTF-8 locale seems\nto handle any characters with no problems.)\n\nRe. JDK version - of course #8031 would only help on JDK 1.4+, but (IMHO) tough\nluck - get a JDK which is not end-of-lifed, or stick to \"ueber\" orthography. :-)"}, {"count": 3, "tags": [], "bug_id": 32718, "text": "Let's call it a duplicate and plan to add the 8031 patch.  Then it will be a\nknown issue that you need to use 1.4+ if you have UTF-8 paths.\n\n*** This bug has been marked as a duplicate of 8031 ***", "id": 68633, "time": "2004-12-16T22:41:42Z", "creator": "mbenson@apache.org", "creation_time": "2004-12-16T22:41:42Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "creator": "holger@xtramind.com", "attachment_id": null, "id": 68646, "time": "2004-12-17T12:17:59Z", "bug_id": 32718, "creation_time": "2004-12-17T12:17:59Z", "is_private": false, "text": "I will check if things work on my German Windows as soon as bug #8031 is fixed.\nBTW: I use JDK 1.4.2 so the \"1.4+\"-solution should work for me."}]