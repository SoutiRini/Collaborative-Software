[{"count": 0, "tags": [], "bug_id": 8100, "attachment_id": null, "is_private": false, "id": 13618, "time": "2002-04-15T12:54:29Z", "creator": "sankar.venkitachalam@usa.xerox.com", "creation_time": "2002-04-15T12:54:29Z", "text": "Platform : Windows 2000 ,Tomcat version 4.0.x. Reproducible problem.\n\nI am having a problem with Session tracking using tomcat 4.0.x. The scenario is \nas follows:\n1) \"Web app A\" in \"context1\" uses a URLconnection WITHIN A SERVLET IN\nCONTEXT1 to send data to \"webapp B\" running in a different server/different\ncontext ( context 2).\n\n2) Context 2/Web app2 creates some session objects using\nHttpSession.setAttribute() method. Context 2 servlet sends response back to\nservlet running in \"context1\" ( as a response for the HttpURLConnection ) which \nin turn shows the response in browser.\n>\n>3) The browser then sends a GET or POST request, this time directly to the\n>server running \"WebApp B/context2\".\n>\n>My issue is that after the step 3,everytime a HttpSession.getSession(true)\n>is returning a new session for the application in Context 2, so I am not able \nto implement session tracking using the HttpSession class. Cookies are enabled\n in the browser. I implemented the BindingListener interfaces and the objects \nbeing added to \"Context 2\" session are bound, but not unbound from the session, \ndoes it mean that the session actually exists, but the call getSession(true) \ndoes not check for the existing session? \nA session created within the context works fine when servlet control is managed\nthrough RequestDispatcher interfaces, but not in the \"URLConnection scenario\" \nthat I mentioned above.\nTo the client servlet running in \"Web App A/Context1\", I added the following to\nthe response: \"resp.addCookie(new Cookie(\"JSESSIONID\",jsessionid))\", where \njsessionid was a part of the returned response ( as a hidden form tag\") from  a \nservlet in Context 2.\n\nWhen I proceed with my work after step 3 mentioned above, the existing session \nis retrieved properly in the \"Webapp B/Context 2\" for TOMCAT 3.2 but not for \nTOMCAT 4.0.x-tomcat 4.0.x returns a new session everytime.\nAny replies are welcome"}, {"count": 1, "tags": [], "bug_id": 8100, "attachment_id": null, "id": 13627, "time": "2002-04-15T13:54:17Z", "creator": "sankar.venkitachalam@usa.xerox.com", "creation_time": "2002-04-15T13:54:17Z", "is_private": false, "text": "For the situation explained earlier, I have one more point to mention. I ran \nthe client Web Application in Tomcat 3.2 and the server Web application in \nTomcat 4.0, that works. If both the client and server web application are \nhosted by 3.2, that works. The application fails if the Client web application \nis 4.0. \nTo maintain the \"server web application's session id\", I am using the following\ncode in the \"client web application\":\n\nCookie c =new Cookie(\"JSESSIONID\",jsessionid);\nc.setMaxAge(3600000);\nresp.addCookie(c);\n\nWhere jsessionid is a part of the response stream as a result of posting the \nmessage through HttpURLConnection. Commenting this code out would result in both\nTomcat 3.2 and tomcat 4.0 not to work with my application, whereas with the \nabove lines in a servlet, \"tomcat 3.2 client webapp\" works but not \"tomcat 4.0 \nwebapp\". "}, {"count": 2, "tags": [], "text": "Session tracking functionality appears to be working fine using compliant HTTP \nuser agents.\nI recommend you debug this problem further (otherwise, I'll probably end up \nmarking it as LATER or REMIND).", "attachment_id": null, "id": 13640, "creator": "remm@apache.org", "time": "2002-04-15T15:42:09Z", "bug_id": 8100, "creation_time": "2002-04-15T15:42:09Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 8100, "attachment_id": null, "is_private": false, "id": 36930, "time": "2003-05-08T21:12:18Z", "creator": "adb@cisco.com", "creation_time": "2003-05-08T21:12:18Z", "text": "I'm seeing a similar problem with Tomcat 4.0.12.  I have a simple JSP page \nwhich contains the following code:\n\n<jsp:useBean \n    id=\"evpSessionBean\" \n    class=\"evp.jsp.EvpSessionBean\"\n    scope=\"session\"/>\n<jsp:setProperty name=\"evpSessionBean\" property=\"*\"/>\nUser ID is: <jsp:getProperty name=\"evpSessionBean\" property=\"id\"/>.\nUser PIN is: <jsp:getProperty name=\"evpSessionBean\" property=\"pin\"/>.\n\nThis page has a \"id\" and \"pin\" parameter passed to it in the GET request, and \nthe results are as you'd expect.  On a subsequently accessed page, located in \nthe same context, I have a segment of code identical to the above, but of \ncourse without the \"setProperty\" line.  This works just fine too, and produces \nthe \"id\" and \"pin\" values which had been provided in the previously accessed \npage's GET request.\n\nThe problem is not manifest until a *third* page is accessed.  That is, if I as \nuser then access a third page containing the same block of code above (again, \nsans setProperty), I will get *nothing* for the property values.  The original \nevpSessionBean gets lost and a new one is created.\n\nIn an attempt to work around this, I replaced this code with scriptlets that \nexplicitly add and retrieve these values to and from the HttpSession as \nattributes.  The same problem occurrs:\n\n1) First page accessed creates a new session, attaches the ID and PIN to it, \nand it's happy.\n\n2) Second page accessed get's a handle to the session, reads the ID and PIN, \nit's happy too.\n\n3) Third page accessed has no idea what's going on. The browser dutifully \npasses it the JSESSIONID of the HttpSession used by the first two pages (I've \nconfirmed this), but the server decided to create a new session anyway.  If I \ncall HttpServletRequest.getSession(false) it returns null.\n\nHope this is enough detail for you, if not let me know (adb@cisc.com).\n"}, {"count": 4, "tags": [], "creator": "adb@cisco.com", "attachment_id": null, "text": "Left out some details from my remarks above.  All pages reside within the same \ncontext.  Also, the behavior I've described is exhibited in both IE6.0 and by \nthe Nuance VXML browser.  Cookies are turned on for both browsers, and they are \nobserved to be getting passed appropriately in the HTTP get requests.", "id": 36931, "time": "2003-05-08T21:17:26Z", "bug_id": 8100, "creation_time": "2003-05-08T21:17:26Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 8100, "attachment_id": null, "is_private": false, "id": 36961, "time": "2003-05-09T08:03:41Z", "creator": "remm@apache.org", "creation_time": "2003-05-09T08:03:41Z", "text": "Your report seems to be able to be summarized to: sessions get lost after 2\nrequests. That, said generally, is not the case (and doesn't seem related to the\noriginal issue either)."}, {"count": 6, "tags": [], "bug_id": 8100, "attachment_id": null, "id": 51869, "time": "2004-02-07T14:46:15Z", "creator": "funkman@joedog.org", "creation_time": "2004-02-07T14:46:15Z", "is_private": false, "text": "Based on the comments and tomcats current bahavior - marking as worksforme.\nPlease reopen with .war file test cases against 4.1.30 (or better)."}]