[{"count": 0, "attachment_id": 35003, "bug_id": 61116, "text": "Created attachment 35003\nExample workbook showing the problematic formulas\n\nThe formula evaluation fails when using following formula:\n  \"=INDEX(A+B,1,1)\"\nwhere A and B are both matrices. I've attached an example workbook that shows the problem (matrix-addition-within-index-function.xlsx). Simply use the FormulaEvaluator to evaluate the cell 'sample2'!B2 and you will get the following exception:\n\n\"java.lang.RuntimeException: Incomplete code - cannot handle first arg of type (org.apache.poi.ss.formula.eval.NumberEval)\n\tat org.apache.poi.ss.formula.functions.Index.convertFirstArg(Index.java:106)\n\tat org.apache.poi.ss.formula.functions.Index.evaluate(Index.java:75)\n\tat org.apache.poi.ss.formula.functions.Index.evaluate(Index.java:116)\n\tat org.apache.poi.ss.formula.OperationEvaluatorFactory.evaluate(OperationEvaluatorFactory.java:132)\n\tat org.apache.poi.ss.formula.WorkbookEvaluator.evaluateFormula(WorkbookEvaluator.java:550)\n\tat org.apache.poi.ss.formula.WorkbookEvaluator.evaluateAny(WorkbookEvaluator.java:317)\n\tat org.apache.poi.ss.formula.WorkbookEvaluator.evaluateReference(WorkbookEvaluator.java:750)\n\tat org.apache.poi.ss.formula.SheetRefEvaluator.getEvalForCell(SheetRefEvaluator.java:48)\"\n\nThe currently implementation assumes that the maxtrix addition always returns a single double value which is fine for maxtrix formulas like \"=A+B\". In this case it does the same and so \"A+B\" is evaluated to a sum of single values from each matrix. As soon this resulting double value is passed to the index function it will fail with the exception.\n\nHow to fix?\nI guess the method TwoOperandNumericOperation.evaluate(int, int, ValueEval, ValueEval) need to distiguish whether the expected output of the operation (affects not only AddPtg) is a single value or still an area.", "id": 198858, "time": "2017-05-23T15:02:40Z", "creator": "snowy@web.de", "creation_time": "2017-05-23T15:02:40Z", "tags": [], "is_private": false}, {"count": 1, "tags": [], "creator": "dominik.stadler@gmx.at", "text": "Can you check if the changes done in bug 61469 solve this?", "id": 200983, "time": "2017-09-19T20:55:42Z", "bug_id": 61116, "creation_time": "2017-09-19T20:55:42Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "creator": "snowy@web.de", "text": "I just checked with 3.16.final with applied patch of bug 61469 - the result is still the same exception with same error message\n\njava.lang.RuntimeException: Incomplete code - cannot handle first arg of type (org.apache.poi.ss.formula.eval.NumberEval)\n\tat org.apache.poi.ss.formula.functions.Index.convertFirstArg(Index.java:107)\n\tat org.apache.poi.ss.formula.functions.Index.evaluate(Index.java:75)\n\tat org.apache.poi.ss.formula.functions.Index.evaluate(Index.java:116)\n\tat org.apache.poi.ss.formula.OperationEvaluatorFactory.evaluate(OperationEvaluatorFactory.java:139)\n\tat org.apache.poi.ss.formula.WorkbookEvaluator.evaluateFormula(WorkbookEvaluator.java:524)\n\tat org.apache.poi.ss.formula.WorkbookEvaluator.evaluateAny(WorkbookEvaluator.java:291)\n\tat org.apache.poi.ss.formula.WorkbookEvaluator.evaluate(WorkbookEvaluator.java:233)\n\tat org.apache.poi.xssf.usermodel.BaseXSSFFormulaEvaluator.evaluateFormulaCellValue(BaseXSSFFormulaEvaluator.java:65)\n\tat org.apache.poi.ss.formula.BaseFormulaEvaluator.evaluate(BaseFormulaEvaluator.java:101)", "id": 201684, "time": "2017-10-26T10:11:58Z", "bug_id": 61116, "creation_time": "2017-10-26T10:11:58Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "creator": "snowy@web.de", "text": "Created attachment 35466\nPatch with JUnit testcase for example workbook", "id": 201685, "time": "2017-10-26T10:50:38Z", "bug_id": 61116, "creation_time": "2017-10-26T10:50:38Z", "is_private": false, "attachment_id": 35466}, {"attachment_id": null, "tags": [], "bug_id": 61116, "text": "Fixed in r1819596\n\nI added your file in our collection of test cases. \n\nThe main difficulty was to identify when addition should operate on matrices vs single operands. Normally, the array mode is used if the formula was saved as an array, i.e. using Ctrl-Shift-Enter. The INDEX function seems to be special, if evaluates the first arguments as a matrix even if the formula itself is single-value.", "count": 4, "id": 202956, "time": "2017-12-30T13:19:17Z", "creator": "yegor@dinom.ru", "creation_time": "2017-12-30T13:19:17Z", "is_private": false}]