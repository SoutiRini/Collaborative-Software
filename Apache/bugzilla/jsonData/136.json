[{"count": 0, "tags": [], "bug_id": 136, "is_private": false, "id": 116, "creation_time": "2000-09-21T20:13:18Z", "time": "2000-09-21T20:13:18Z", "creator": "dev@tomcat.apache.org", "text": "While running some tests with TomCat, I uncovered an infinite loop in\r\nPrefixManager.java.\r\n\r\nThe routine getLongestPrefixMatch has the following chunk of code:\r\n\r\n\twhile (s.length() >= 0) {\r\n\t    //if(debug>8) context.log( \"Prefix: \" + s  );\r\n\t    container = myMap.prefixMappedServlets.get(s);\r\n\r\n\t    if (container == null) {\r\n\t\ts=URLUtil.removeLast( s );\r\n\t    }  else {\r\n\t\tif( myMap.mapCacheEnabled ) {\r\n\t\t    // XXX implement LRU or another replacement alghoritm\r\n\t\t    myMap.mapCache.put( path, container );\r\n\t\t}\r\n\t\treturn container;\r\n\t    }\r\n\t}\r\n\treturn container;\r\n    }\r\n\r\nThe problem is that if myMap.prefixMappedServlet.get(s) never finds a\r\ncontainer, the code goes into an infinite loop:\r\n\r\nI changed the while statement to:\r\n\r\n\twhile (s.length() > 0) {\r\n\r\nand at least it exited and threw an execption.\r\n\r\nThis situation occurred when I had a servlet mapped to a URL /myurl but then\r\nused a custom application going through a proxy server that changed the url:\r\nhttps://www.xxx.com/myurl  to http://www.xxx.com:443/myurl\r\n\r\n", "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 136, "attachment_id": null, "is_private": false, "id": 603, "time": "2001-02-07T08:12:54Z", "creator": "Larry.Isaacs@sas.com", "creation_time": "2001-02-07T08:12:54Z", "text": "Resloving as \"later\" since this is not fixed in Tomcat 3.2 or 3.2.1.\nA slighly different patch has been applied to Tomcat 3.2.2 and Tomcat 3.3.\nFixed in Tomcat 3.2.2\nFixed in Tomcat 3.3"}, {"count": 2, "text": "*** Bug 535 has been marked as a duplicate of this bug. ***", "bug_id": 136, "attachment_id": null, "id": 838, "time": "2001-02-23T12:12:33Z", "creator": "Larry.Isaacs@sas.com", "creation_time": "2001-02-23T12:12:33Z", "tags": [], "is_private": false}, {"count": 3, "tags": [], "bug_id": 136, "attachment_id": null, "is_private": false, "id": 1976, "time": "2001-04-21T13:07:13Z", "creator": "cmanolache@yahoo.com", "creation_time": "2001-04-21T13:07:13Z", "text": "Mark this bug as closed ( it is fixed in 3.2.2 and 3.3 ). ( well, technically \nit shouldn't be closed until 3.2.2 is officially released, but we are close \nenough )"}]