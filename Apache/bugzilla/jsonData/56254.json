[{"count": 0, "tags": [], "creator": "cliff.binstock@xbrlcloud.com", "attachment_id": 31385, "is_private": false, "id": 173785, "time": "2014-03-13T00:14:20Z", "bug_id": 56254, "creation_time": "2014-03-13T00:14:20Z", "text": "Created attachment 31385\nPatch (and test)\n\nReferencing a syntactically correct named range that does not exist should result in a cell with a #REF! error.  However, it creates an exception.\n\nI have submitted a patch that works for INDIRECT() reference which solves my immediate need, but the exception for a direct reference is pretty \"deep\" in the stack:  I suspect that there should be a unique exception created that is caught by the formula evaluator, which would then set the error code properly.\n\nNote that the patch includes:  1) code fix; 2) working test for INDIRECT reference; 3) commented out test for direct reference."}, {"count": 1, "tags": [], "creator": "dominik.stadler@gmx.at", "attachment_id": null, "text": "FYI, the direct case can be done by returning \"new ParseNode(ErrPtg.REF_INVALID);\" instead of throwing the Exception.\n\nNote however that this will change what was fixed in bug 47312 as with this the parser is less strict and will allow invalid formulas that it does reject now. \n\nWhile the change makes POI a bit more do whatever Excel does it actually makes working with the lib less fun in some cases as the error is much more hidden in a simple #REF! instead of a detailed error message in an Exception.", "id": 181768, "time": "2015-03-14T22:37:18Z", "bug_id": 56254, "creation_time": "2015-03-14T22:37:18Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 56254, "is_private": false, "id": 191815, "creation_time": "2016-06-20T05:27:29Z", "time": "2016-06-20T05:27:29Z", "creator": "onealj@apache.org", "text": "Perhaps a compromise would be to log to the POI Logger when an invalid reference is found. Otherwise, we would need to write a second Formula Parser or modify the existing to let the user chooser what kinds of errors it will propagate and what kinds of errors will raise an exception.\n\nAlternatively, we could write a formula evaluator that steps through one layer at a time.", "attachment_id": null}]