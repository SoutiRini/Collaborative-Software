[{"count": 0, "tags": [], "text": "This bug seems to be basically the same as 15790, but under 5.0.28.  I am \nusing Sun One Webserver 6.1 (the latest incarnation of Netscape iPlanet) with \n1.2.6 of JK.  Tomcat 5.0.28 is running under Sun's J2SDK 1.4.2_05\n\nI apologise if this is a duplicate of an existing bug.\n\nWhen I try to get the client certificate from the request using the code \nbelow, I get an exception.  This code is called from a JSP.\n\n    java.security.cert.X509Certificate[] certs = \n        (java.security.cert.X509Certificate[])\n            request.getAttribute( \"javax.servlet.request.X509Certificate\" );\n\n\nSEVERE: Certificate convertion failed\njava.security.cert.CertificateException: Unable to initialize, \njava.io.IOException: insufficient data\n        at sun.security.x509.X509CertImpl.<init>(X509CertImpl.java:300)\n        at sun.security.provider.X509Factory.engineGenerateCertificate\n(X509Factory.java:104)\n        at java.security.cert.CertificateFactory.generateCertificate\n(CertificateFactory.java:389)\n        at org.apache.jk.server.JkCoyoteHandler.action\n(JkCoyoteHandler.java:478)\n        at org.apache.coyote.Request.action(Request.java:367)\n        at org.apache.coyote.tomcat5.CoyoteRequest.getAttribute\n(CoyoteRequest.java:934)\n        at org.apache.coyote.tomcat5.CoyoteRequestFacade.getAttribute\n(CoyoteRequestFacade.java:214)\n        at org.apache.jsp.icc.cert_jsp._jspService(cert_jsp.java:50)\n        at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:94)\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:802)\n        at org.apache.jasper.servlet.JspServletWrapper.service\n(JspServletWrapper.java:324)\n        at org.apache.jasper.servlet.JspServlet.serviceJspFile\n(JspServlet.java:292)\n        at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:236)\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:802)\n        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter\n(ApplicationFilterChain.java:237)\n        at org.apache.catalina.core.ApplicationFilterChain.doFilter\n(ApplicationFilterChain.java:157)\n        at org.apache.catalina.core.StandardWrapperValve.invoke\n(StandardWrapperValve.java:214)\n        at org.apache.catalina.core.StandardValveContext.invokeNext\n(StandardValveContext.java:104)\n        at org.apache.catalina.core.StandardPipeline.invoke\n(StandardPipeline.java:520)\n        at org.apache.catalina.core.StandardContextValve.invokeInternal\n(StandardContextValve.java:198)\n        at org.apache.catalina.core.StandardContextValve.invoke\n(StandardContextValve.java:152)\n        at org.apache.catalina.core.StandardValveContext.invokeNext\n(StandardValveContext.java:104)\n        at org.apache.catalina.core.StandardPipeline.invoke\n(StandardPipeline.java:520)\n        at org.apache.catalina.core.StandardHostValve.invoke\n(StandardHostValve.java:137)\n        at org.apache.catalina.core.StandardValveContext.invokeNext\n(StandardValveContext.java:104)\n        at org.apache.catalina.valves.ErrorReportValve.invoke\n(ErrorReportValve.java:118)\n        at org.apache.catalina.core.StandardValveContext.invokeNext\n(StandardValveContext.java:102)\n        at org.apache.catalina.core.StandardPipeline.invoke\n(StandardPipeline.java:520)\n        at org.apache.catalina.core.StandardEngineValve.invoke\n(StandardEngineValve.java:109)\n        at org.apache.catalina.core.StandardValveContext.invokeNext\n(StandardValveContext.java:104)\n        at org.apache.catalina.core.StandardPipeline.invoke\n(StandardPipeline.java:520)\n        at org.apache.catalina.core.ContainerBase.invoke\n(ContainerBase.java:929)\n        at org.apache.coyote.tomcat5.CoyoteAdapter.service\n(CoyoteAdapter.java:160)\n        at org.apache.jk.server.JkCoyoteHandler.invoke\n(JkCoyoteHandler.java:300)\n        at org.apache.jk.common.HandlerRequest.invoke(HandlerRequest.java:374)\n        at org.apache.jk.common.ChannelSocket.invoke(ChannelSocket.java:743)\n        at org.apache.jk.common.ChannelSocket.processConnection\n(ChannelSocket.java:675)\n        at org.apache.jk.common.SocketConnection.runIt(ChannelSocket.java:866)\n        at org.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run\n(ThreadPool.java:683)\n        at java.lang.Thread.run(Thread.java:534)\nCaused by: java.io.IOException: insufficient data\n        at sun.security.util.DerInputBuffer.truncate(DerInputBuffer.java:108)\n        at sun.security.util.DerValue.<init>(DerValue.java:261)\n        at sun.security.util.DerInputStream.getDerValue\n(DerInputStream.java:386)\n        at sun.security.x509.X509CertImpl.parse(X509CertImpl.java:1658)\n        at sun.security.x509.X509CertImpl.<init>(X509CertImpl.java:297)\n        ... 39 more\n\nThanks!", "is_private": false, "bug_id": 31766, "id": 65299, "time": "2004-10-19T04:21:53Z", "creator": "nclement@qvalent.com", "creation_time": "2004-10-19T04:21:53Z", "attachment_id": null}, {"count": 1, "attachment_id": null, "bug_id": 31766, "is_private": false, "id": 65416, "time": "2004-10-21T06:37:14Z", "creator": "nclement@qvalent.com", "creation_time": "2004-10-21T06:37:14Z", "tags": [], "text": "I tracked the problem down, and it looks like the certificate information is \nbeing passed across in base64 format without any certificate headers.  I have \nadded the following code to org/apache/jk/server/JkCoyoteHandler.java \n(replacing lines 467-471):\n\n    StringBuffer certData = new StringBuffer();\n    certData.append( \"-----BEGIN CERTIFICATE-----\\r\\n\" );\n    certData.append( certString.toString() );\n    certData.append( \"\\r\\n-----END CERTIFICATE-----\\r\\n\" );\n\n    ByteArrayInputStream bais = \n        new ByteArrayInputStream( certData.toString().getBytes() );\n\nThis code is probably not the most efficient implementation, but it solves my \nproblem.\n\nCan anyone confirm if this is specific to iPlanet, or does it occur under \nother webservers?"}, {"count": 2, "tags": [], "bug_id": 31766, "attachment_id": null, "id": 65464, "time": "2004-10-21T19:03:33Z", "creator": "william.barker@wilshire.com", "creation_time": "2004-10-21T19:03:33Z", "is_private": false, "text": "I get the client cert just fine with the current code using Apache as a front-\nend.\n\nIt would probably be better to make a corresponding patch like above to \njk_nsapi_plugin.c rather than to try and make the java side of the connector \nhandle different formats from different servers."}, {"count": 3, "tags": [], "creator": "nclement@qvalent.com", "attachment_id": null, "is_private": false, "id": 65480, "time": "2004-10-22T05:23:15Z", "bug_id": 31766, "creation_time": "2004-10-22T05:23:15Z", "text": "Ok, I have done as suggested, but I am no C programmer, so I would appreciate \nit if someone would check this code over, and possibly insert it into the JK \nconnectors build.  Particularly, I am concerned about possible memory leaks \nthat I may not understand C or NSAPI well enough to spot.\n\nThe code should be inserted in jk_nsapi_plugin.c at line 426 (after the if(s-\n>ssl_cert) statement).\n\n    /* Create a new string for the data to be held in */\n    char* certData = malloc(strlen(s->ssl_cert) + 80);\n    certData[0] = 0;\n\n    //jk_log(logger, JK_LOG_INFO, \"Got client cert %s\\n\", s->ssl_cert);\n\n    /* Build the new string for passing to Tomcat */\n    strcat(certData, \"-----BEGIN CERTIFICATE-----\\r\\n\");\n    strcat(certData, s->ssl_cert);\n    strcat(certData, \"\\r\\n-----END CERTIFICATE-----\\r\\n\");\n\n    /* Remove the certificate entry from the NSAPI pblock */\n    //pb_param* pp = pblock_remove(\"auth-cert\", private_data->rq->vars); \n    //param_free( pp ); \n    param_free( pblock_remove(\"auth-cert\", private_data->rq->vars) ); \n\n    /* Insert the new value for the pblock */\n    pblock_nvinsert(\"auth-cert\", certData, private_data->rq->vars); \n\n    /* Reference the new value in the JK module */\n    s->ssl_cert = certData;\n"}, {"count": 4, "tags": [], "creator": "nclement@qvalent.com", "is_private": false, "id": 65481, "creation_time": "2004-10-22T05:31:34Z", "time": "2004-10-22T05:31:34Z", "bug_id": 31766, "text": "I also wrote the following (equivalent?) code to do the same thing.  The only \nthing I am unsure of is what are the implications of using \"jk_pool_alloc\" to \nallocate the new memory.  Will this be deallocated automatically?\n\n    /* Get the parameter from the parameter block */\n    char *certData = jk_pool_alloc(\n        &private_data->p, (strlen(s->ssl_cert) + 80) * sizeof(char *));\n    certData[0] = 0;\n\n    /* Build the new data for passing to Tomcat, since the data is  */\n    /* Base64 encoded, but is missing the CERTIFICATE tags at the   */\n    /* start and end */\n    strcat(certData, \"-----BEGIN CERTIFICATE-----\\r\\n\");\n    strcat(certData, s->ssl_cert);\n    strcat(certData, \"\\r\\n-----END CERTIFICATE-----\\r\\n\");\n\n    //jk_log(logger, JK_LOG_INFO, \"Got client cert \\n%s\\n\", certData);\n\n    /* Use the new data */\n    s->ssl_cert = certData;\n", "attachment_id": null}, {"count": 5, "tags": [], "creator": "william.barker@wilshire.com", "attachment_id": null, "id": 65566, "time": "2004-10-23T03:07:31Z", "bug_id": 31766, "creation_time": "2004-10-23T03:07:31Z", "is_private": false, "text": "I've patched jk_nsapi_plugin.c much like your second patch above (yes, \njk_pool_alloc gets released automagically).\n\nI don't have access to iPlanet/Sun One, so I can't even compile it myself. :)  \nI'm trusting you that this fixes the problem."}, {"count": 6, "tags": [], "creator": "nclement@qvalent.com", "is_private": false, "text": "I only have access to v6.1 and v6.0 of the web server, so I can't test any \nother versions.  I wonder how many other people actually use this plugin.\n\nWhere can I get access to the final patched code you wrote so I can verify it?", "id": 65609, "time": "2004-10-23T20:14:30Z", "bug_id": 31766, "creation_time": "2004-10-23T20:14:30Z", "attachment_id": null}, {"count": 7, "tags": [], "bug_id": 31766, "attachment_id": null, "id": 65626, "time": "2004-10-25T02:22:52Z", "creator": "william.barker@wilshire.com", "creation_time": "2004-10-25T02:22:52Z", "is_private": false, "text": "It's in it's usual place:\nhttp://cvs.apache.org/viewcvs.cgi/jakarta-tomcat-\nconnectors/jk/native/netscape/jk_nsapi_plugin.c?rev=1.13&view=auto"}, {"count": 8, "tags": [], "creator": "nclement@qvalent.com", "attachment_id": null, "id": 65695, "time": "2004-10-26T05:46:47Z", "bug_id": 31766, "creation_time": "2004-10-26T05:46:47Z", "is_private": false, "text": "I have tested your code against 6.1 and 6.0 of Sun One Webserver and the \nclient certificate can be successfully extracted under both versions.\n\nThanks very much for your help!"}]