[{"count": 0, "attachment_id": null, "creator": "jfarcand@apache.org", "text": "This is a hard issue to reproduce, but using 7.0.5x a Servlet defined as:\n\n        <servlet>\n                <description>AtmosphereServlet</description>\n                <servlet-name>AtmosphereServlet</servlet-name>\n                <servlet-class>org.atmosphere.cpr.AtmosphereServlet</servlet>\n                <load-on-startup>1</load-on-startup>\n                <async-supported>true</async-supported>\n        </servlet>\n        <servlet-mapping>\n                <servlet-name>AtmosphereServlet</servlet-name>\n                <url-pattern>/chat/*</url-pattern>\n        </servlet-mapping>\n\nwill return request.isAsyncSupported() == false when the client (in the test Chrome) send a normal http request taking the form of \n\nT 127.0.0.1:53657 -> 127.0.0.1:8081 [AP]\nGET /chat/company/8?X-Atmosphere-Transport=close&X-Atmosphere-tracking-id=8567472b-c334-4f55-8b6b-f5c3d4763378&X-Atmosphere-WebSocket-Proxy=true&_=1403113561652 HTTP/1.1.\nHost: 127.0.0.1:8081.\nConnection: keep-alive.\nUser-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/35.0.1916.153 Safari/537.36.\nContent-Type: text/plain.\nAccept: */*.\nReferer: http://127.0.0.1:8081/.\nAccept-Encoding: gzip,deflate,sdch.\nAccept-Language: en-US,en;q=0.8,de;q=0.6,fr;q=0.4,nl;q=0.2.\nCookie: nikio.guid=2e87c963-0668-4e2f-8e91-63c2eb759558; __utma=96992031.807814183.1379458509.1398954177.1398962667.30; __utmz=96992031.1393253205.21.3.utmcsr=google|utmccn=(organic)|utmcmd=organic|utmctr=http://127.0.0.1:8080/prime-showcase/push/index.jsf; JSESSIONID=D7F9DEA3D70CB0404F425DC26209520F.\n.\n\nThis request is send when the browser is about to leave the page, and marked as blocking, as described here\n\n   http://goo.gl/fQV7Yk\n\nThe issue is hard to reproduce, but I can share (privately) a simple application that will demonstrate the issue (small customer apps).\n\nI do have a workaround in Atmosphere: http://goo.gl/QNavLJ\n\nbut that's quite ugly. Note that there is a websocket connection active on the AtmosphereServlet when the issue arise (I do see the WsFilter in the stack trace)", "id": 175874, "time": "2014-06-18T20:05:53Z", "bug_id": 56640, "creation_time": "2014-06-18T20:05:53Z", "tags": [], "is_private": false}, {"count": 1, "tags": [], "text": "1. Exact version of Tomcat where this is observed = ?\n\n2. Full stacktrace when the issue happens = ?\nYou can mask your own components names.\nI'd guess that you may have non-async capable filters there.\n\n3. Run with a debugger [1] and look where the \"async not supported\" condition is coming from.\n\n[1] http://wiki.apache.org/tomcat/FAQ/Developing#Debugging\n\n\nWithout a reproducing example it is up to you to provide necessary information.\n\n\n> Note that there is a websocket connection active on the AtmosphereServlet when > the issue arise (I do see the WsFilter in the stack trace)\n\nNo. (WsFilter is always there when you have websocket ServletContainerInitializer active. Details are discussed in issue 55855. You may get rid of those by removing *websocket* JARs from Tomcat or by some configuration.)", "is_private": false, "id": 175876, "creator": "knst.kolinko@gmail.com", "time": "2014-06-18T20:27:03Z", "bug_id": 56640, "creation_time": "2014-06-18T20:27:03Z", "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 56640, "text": "Please send the app to reproduce this to the Tomcat private list.", "id": 175881, "time": "2014-06-18T21:57:38Z", "creator": "markt@apache.org", "creation_time": "2014-06-18T21:57:38Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 56640, "attachment_id": null, "text": "For a reference,\nsome pointers for the current Tomcat 7.0.x code.\n\n1) javax.servlet.ServletRequestWrapper.isAsyncSupported()\nreturns the value from the wrapped request object.\n\n2) org.apache.catalina.connector.Request.isAsyncSupported()\nreturns the value of \"this.asyncSupported\" field.\n\nThe default value (null) is interpreted as \"true\".\n\n3) The o.a.c.connector.Request#asyncSupported field can be set via two APIs:\n\n[A): o.a.c.connector.Request.setAsyncSupported()\n\n(B): via Request$SpecialAttributeAdapter for attribute name Globals.ASYNC_SUPPORTED_ATTR (\"org.apache.catalina.ASYNC_SUPPORTED\").\n\nThe (A) API is used to propagate isAsyncSupported() value from Valves (getPipeline().isAsyncSupported()).\n\nThe (B) API is used to propagate the value from Filter and Servlet definitions.\nSee o.a.c.core.ApplicationFilterChain#internalDoFilter(..)\n\nThe property update pattern is that if the current value is \"true\" and the next Valve, Filter or Servlet does not support async processing, the value is changed to \"false\".\n\n\nThe SpecialAttributeAdapter in (B) would better be more robust. It shall support changing the value to Boolean.FALSE and reject any other value.\n\nOther then that, I do not see any place for an error for the value of \"isAsyncSupported\" request attribute.", "id": 175907, "time": "2014-06-19T13:06:49Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2014-06-19T13:06:49Z", "is_private": false}, {"count": 4, "attachment_id": null, "creator": "markt@apache.org", "text": "I have been provided with the test case off-line. In the failure scenarios I observed, and in the example stack traces provided of when the problem occurred, the request was being routed through a filter that was not marked as async-supported. Therefore, Tomcat is correctly reporting that async is not supported for that request.", "id": 176256, "time": "2014-07-06T21:38:16Z", "bug_id": 56640, "creation_time": "2014-07-06T21:38:16Z", "tags": [], "is_private": false}]