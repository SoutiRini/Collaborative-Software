[{"count": 0, "attachment_id": 32059, "bug_id": 57022, "text": "Created attachment 32059\nTomcat JAAS configuration\n\nHello everyone,\n   I'm successfully using Tomcat 7.0.55 configured with Spnego authentication against Active Directory running Windows 2008 Server and Java 1.7.0.51. \nAfter switching to Java 1.8.0_20, authentication does not work anymore, Tomcat logs the following error message:\n\nSEVERE: Exception performing authentication\njavax.naming.AuthenticationException: GSSAPI [Root exception is javax.security.sasl.SaslException: GSS initiate failed [Caused by GSSException: No valid credentials provided (\nMechanism level: Failed to find any Kerberos tgt)]]; remaining name 'CN=Users,DC=example,DC=com'\n        at com.sun.jndi.ldap.sasl.LdapSasl.saslBind(LdapSasl.java:169)\n        at com.sun.jndi.ldap.LdapClient.authenticate(LdapClient.java:236)\n        at com.sun.jndi.ldap.LdapCtx.connect(LdapCtx.java:2788)\n        at com.sun.jndi.ldap.LdapCtx.ensureOpen(LdapCtx.java:2696)\n        at com.sun.jndi.ldap.LdapCtx.ensureOpen(LdapCtx.java:2670)\n        at com.sun.jndi.ldap.LdapCtx.doSearch(LdapCtx.java:1941)\n        at com.sun.jndi.ldap.LdapCtx.searchAux(LdapCtx.java:1844)\n        at com.sun.jndi.ldap.LdapCtx.c_search(LdapCtx.java:1769)\n        at com.sun.jndi.toolkit.ctx.ComponentDirContext.p_search(ComponentDirContext.java:392)\n        at com.sun.jndi.toolkit.ctx.PartialCompositeDirContext.search(PartialCompositeDirContext.java:358)\n        at com.sun.jndi.toolkit.ctx.PartialCompositeDirContext.search(PartialCompositeDirContext.java:341)\n        at javax.naming.directory.InitialDirContext.search(InitialDirContext.java:267)\n        at org.apache.catalina.realm.JNDIRealm.getUserBySearch(JNDIRealm.java:1446)\n        at org.apache.catalina.realm.JNDIRealm.getUser(JNDIRealm.java:1297)\n        at org.apache.catalina.realm.JNDIRealm.getUser(JNDIRealm.java:1233)\n        at org.apache.catalina.realm.JNDIRealm.getPrincipal(JNDIRealm.java:2049)\n        at org.apache.catalina.realm.JNDIRealm.getPrincipal(JNDIRealm.java:1965)\n        at org.apache.catalina.realm.RealmBase.authenticate(RealmBase.java:513)\n        at org.apache.catalina.realm.CombinedRealm.authenticate(CombinedRealm.java:309)\n        at org.apache.catalina.realm.LockOutRealm.authenticate(LockOutRealm.java:249)\n        at org.apache.catalina.authenticator.SpnegoAuthenticator.authenticate(SpnegoAuthenticator.java:255)\n \nTomcat is configured according to the \"Windows Authentication How-To\" document, I'm attaching the krb5.ini, jaas.conf and server.xml that contains the JNDIRealm definition.\n\nI have investigated the problem and I believe it is related to the Kerberos constraint delegation support added in Java 8, see:\n\nhttp://docs.oracle.com/javase/8/docs/technotes/guides/security/jgss/jgss-features.html\nhttp://bugs.java.com/bugdatabase/view_bug.do?bug_id=6355584\n\nIt seems that per default, GSS API in Java 8 will attempt constraint delegation on the acceptor side, see referenced changes and in particular the getCredDelegState() method:\nhttp://hg.openjdk.java.net/jdk8/jdk8/jdk/rev/a1bbb8805e22\n\nThe result of this, is that Tomcat's JNDIRealm now finds the delegated credential delivered with the constraint delegation and switches GSSAPI security mechanism for JNDI/LDAP (this was not the case on Java 7). However, the Kerberos initiation during LDAP authentication does not find the Kerberos TGT in the Subject. After digging further, I noticed that the Subject used during the LDAP authentication is not set. Though the SpnegoAuthenticator initializes a Subject instance using Kerberos login via JAAS and this contains the obtained TGT, this Subject instance is not used for performing the LDAP authentication. I saw the following comment in JNDIRealm.getPrincipal:\n\n// Note: Subject already set in SPNEGO authenticator so no need for Subject.doAs() here\n\nSo I decided to modify this and execute the getPrincipal using Subject.doAs() and the Subject instance available after the Kerberos login. This lead to successful authentication to LDAP and I was able to access the Spnego-secured webapp again.\n\nPlease note that this setup is not using any file-system Kerberos credential cache, so it requires that the Kerberos TGT is available in the Subject instance associated with current ACC.", "id": 178126, "time": "2014-09-26T13:33:32Z", "creator": "DetelinYordanov@gmail.com", "creation_time": "2014-09-26T13:33:32Z", "tags": [], "is_private": false}, {"count": 1, "tags": [], "creator": "DetelinYordanov@gmail.com", "attachment_id": 32060, "id": 178127, "time": "2014-09-26T13:34:45Z", "bug_id": 57022, "creation_time": "2014-09-26T13:34:45Z", "is_private": false, "text": "Created attachment 32060\nTomcat Kerberos configuration"}, {"count": 2, "attachment_id": 32061, "bug_id": 57022, "text": "Created attachment 32061\nTomcat configuration", "id": 178128, "time": "2014-09-26T13:35:19Z", "creator": "DetelinYordanov@gmail.com", "creation_time": "2014-09-26T13:35:19Z", "tags": [], "is_private": false}, {"count": 3, "tags": [], "creator": "DetelinYordanov@gmail.com", "attachment_id": 32062, "id": 178129, "time": "2014-09-26T13:35:39Z", "bug_id": 57022, "creation_time": "2014-09-26T13:35:39Z", "is_private": false, "text": "Created attachment 32062\nError log"}, {"count": 4, "tags": [], "creator": "DetelinYordanov@gmail.com", "attachment_id": null, "id": 178185, "time": "2014-09-29T22:05:52Z", "bug_id": 57022, "creation_time": "2014-09-29T22:05:52Z", "is_private": false, "text": "I managed to overcome this error by setting -Djavax.security.auth.useSubjectCredsOnly=false\nStill, I would like to know if there is a reason not to use Subject.doAs when doing GSSAPI authentication against LDAP."}, {"count": 5, "attachment_id": null, "bug_id": 57022, "text": "A short update.\n\nI can reproduce this with Tomcat 8 and both the latest Java 7 and Java 8 releases.\n\nI have a patch that fixes this but it currently depends on an internal Sun API. I am looking at ways to work around that.", "id": 178199, "time": "2014-09-30T12:49:55Z", "creator": "markt@apache.org", "creation_time": "2014-09-30T12:49:55Z", "tags": [], "is_private": false}, {"count": 6, "tags": [], "bug_id": 57022, "attachment_id": null, "id": 178205, "time": "2014-09-30T19:17:53Z", "creator": "markt@apache.org", "creation_time": "2014-09-30T19:17:53Z", "is_private": false, "text": "I've done a little svn archeology.\n\nOriginally, the SPNEGO authenticate did call Realm.authenticate using Subject.doAs(). That was removed as it wasn't necessary early in the SPNEGO development.\n\nI have just restored this behaviour.\n\nAt one point Tomcat automatically set javax.security.auth.useSubjectCredsOnly=false but this was removed to enable SPNEGO to work with IBM JREs.\n\nThis fix has been made to 8.0.x and will be included in 8.0.15 onwards.\n\nIt still needs to be back-ported to 7.0.x"}, {"count": 7, "tags": [], "bug_id": 57022, "attachment_id": null, "id": 178206, "time": "2014-09-30T19:54:20Z", "creator": "DetelinYordanov@gmail.com", "creation_time": "2014-09-30T19:54:20Z", "is_private": false, "text": "Thanks Mark,\n   The patch I tested with that proved to work was similar, I have not done any tests with IBM JDK though. Should the following note in \"Windows Auth How-to\" be removed then:\n\n\"The system property javax.security.auth.useSubjectCredsOnly is automatically set to the required value of false if a web application is configured to use the SPNEGO authentication method.\"\n\nDetelin"}, {"count": 8, "attachment_id": null, "bug_id": 57022, "text": "This has now been fixed in 7.0.x for 7.0.57 onwards.", "id": 178207, "time": "2014-09-30T20:04:22Z", "creator": "markt@apache.org", "creation_time": "2014-09-30T20:04:22Z", "tags": [], "is_private": false}, {"count": 9, "tags": [], "bug_id": 57022, "is_private": false, "text": "I'll update the 7.0.x docs to remove that comment.", "id": 178208, "time": "2014-09-30T20:04:44Z", "creator": "markt@apache.org", "creation_time": "2014-09-30T20:04:44Z", "attachment_id": null}]