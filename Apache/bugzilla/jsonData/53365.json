[{"count": 0, "tags": [], "bug_id": 53365, "text": "Looking at code of JSR223TestElement, it seems to me we should:\n- Cache ScriptEngineManager instead of creating it at each call which I think has a cost, see https://studio.plugins.atlassian.com/browse/GRV-6\n- Remove initManager and introduce a similar method so that it puts variables in ScriptEngine instead of ScriptEngineManager so that we can reuse the latter\n\nWaiting for your remarks to start this.\n\nRegards\nPhilippe", "id": 159723, "time": "2012-06-05T21:16:01Z", "creator": "p.mouawad@ubik-ingenierie.com", "creation_time": "2012-06-05T21:16:01Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "creator": "p.mouawad@ubik-ingenierie.com", "attachment_id": null, "id": 159724, "time": "2012-06-05T21:20:41Z", "bug_id": 53365, "creation_time": "2012-06-05T21:20:41Z", "is_private": false, "text": "See also:\nhttp://grepcode.com/file/repository.grepcode.com/java/root/jdk/openjdk/6-b14/javax/script/ScriptEngineManager.java"}, {"count": 2, "attachment_id": null, "bug_id": 53365, "is_private": false, "id": 159834, "time": "2012-06-08T16:39:44Z", "creator": "sebb@apache.org", "creation_time": "2012-06-08T16:39:44Z", "tags": [], "text": "This is probably OK, but need to ensure that the existing behaviour is not affected by using a shared Manager.\n\nAlso, is the Manager thread-safe?"}, {"count": 3, "tags": [], "text": "Created attachment 29012\nTest Plan showing strange behaviour of memory\n\nI made some tests with current attached test and noticed kind of big issue in JS233 approach.\nWith attached test plan, running it for some time and monitoring memory, I see a constant increase of memory, performance drop down although I don't get an OutOfMemoryError.\nMemory after 2 minutes of run varies between 400 m and 500m (with -Xmx512m).\n\nmemory is occupied mainly by:\norg.codehaus.groovy.reflection.ClassInfo$ClassInfoSet$Segment\ncom.sun.beans.AppContext\n\nIt may be a groovy memory leak or just how it works:\nhttp://groovy.329449.n5.nabble.com/OOM-because-ScriptEnginge-Memory-caches-all-ever-compiled-Groovy-Classes-td387931.html", "attachment_id": 29012, "id": 160365, "creator": "p.mouawad@ubik-ingenierie.com", "time": "2012-06-30T06:43:52Z", "bug_id": 53365, "creation_time": "2012-06-30T06:43:52Z", "is_private": false}, {"count": 4, "attachment_id": null, "bug_id": 53365, "is_private": false, "id": 160366, "time": "2012-06-30T06:55:06Z", "creator": "p.mouawad@ubik-ingenierie.com", "creation_time": "2012-06-30T06:55:06Z", "tags": [], "text": "JSR233 proposes Compilable interface and many ScriptEngine implement it\n\nI think we should improve this part by doing something like that:\n- We could compile script code\n- then cache it (which key to use ? add a new property ? use Sampler Name ? use file script name ? use a hash of Script code ?)\n\nI tested this approach:\n- It fixes the memory leak issue\n- It gives fabulous performance enhancements\n\nBut doing so means script code must not contains variables which would forbid caching the compiled code unless we hash script code to see if it changes but this will introduce a performance issue on this hashing."}, {"count": 5, "tags": [], "bug_id": 53365, "text": "The scripting elements were intended mainly for prototyping and ad-hoc testing; the intention being that the script would often be turned into a Java class if necessary for performance. So performance and memory consumption are not as important as for the Java classes.\n\nThat's not to say that improvements aren't useful, but such improvements must not affect backwards compatibility; in particular variables must be supported as before.\n\nThe JSR223 test elements support reading the script from a file, and parameters can be passed to the file, so one way to improve performance without affecting compatibility would be to cache the compiled form of a file using the key of file name+modification time.\n\nThe same could apply to the ScriptEngineManager: cache that if using a file.\n\nThis would guarantee compatibility, and probably not be too difficult to implement, nor be difficult for users to convert their test elements.", "id": 160367, "time": "2012-06-30T08:58:13Z", "creator": "sebb@apache.org", "creation_time": "2012-06-30T08:58:13Z", "is_private": false, "attachment_id": null}, {"count": 6, "tags": [], "bug_id": 53365, "attachment_id": 29038, "is_private": false, "id": 160491, "time": "2012-07-07T18:39:39Z", "creator": "p.mouawad@ubik-ingenierie.com", "creation_time": "2012-07-07T18:39:39Z", "text": "Created attachment 29038\nPath caching ScriptEngineManager\n\nHere is the first step which does the following:\n- It creates the ScripEngineManager as a Singleton\n- It doesn't store in ScripEngineManager any variables anymore, it stores them in ScripEngine instead\n\n\nRegarding backward compatibility:\n- It removes getManager protected method and initManager\n- It changes processFileOrScript signature\n- It also changes scope of variables that were previously stored in ScripEngineManager\n\nI made comparisons with attached Test Plan and it gives the following:\n- JMeter 2.7 : 77 samples/sec\n- ScriptEngineManager as instance variable of JSR223TestElement created once: 80 samples/sec\n- This version 93.8 samples/sec\n\n\nRegarding strange memory behaviour, it is strange but there is no leak, memory drops down although impacting performance in all cases.\n\nIn my understanding ScripEngineManager is thread safe.\nIs it OK for you if I commit these changes ?\n\n\nRegards\nPhilippe M."}, {"count": 7, "tags": [], "bug_id": 53365, "text": "Created attachment 29039\nTest Plan", "id": 160492, "time": "2012-07-07T22:33:09Z", "creator": "p.mouawad@ubik-ingenierie.com", "creation_time": "2012-07-07T22:33:09Z", "is_private": false, "attachment_id": 29039}, {"count": 8, "tags": [], "bug_id": 53365, "text": "I don't think the logging statement changes make sense.\n\nOld: log.warn(\"Problem in JSR223 script \"+e);\nNew: log.warn(\"Problem in JSR223 script \"+e, e);\n\nNo point repeating \"e\" as text and stack trace.\n\nThe log should either be left alone or changed to:\n\nlog.warn(\"Problem in JSR223 script\", e);\n\nI don't think it's a problem changing the protected method API.\n\nIt looks as though the change to cache the ScriptEngineManager would be OK.\nThis does change the location of the variables, but AFAICT they still have the same life-time, i.e. just the sample.", "id": 160499, "time": "2012-07-08T12:45:16Z", "creator": "sebb@apache.org", "creation_time": "2012-07-08T12:45:16Z", "is_private": false, "attachment_id": null}, {"count": 9, "tags": [], "text": "Date: Sun Jul  8 13:05:15 2012\nNew Revision: 1358733\n\nURL: http://svn.apache.org/viewvc?rev=1358733&view=rev\nLog:\nBug 53365 - JSR223TestElement should cache ScriptEngineManager\nBugzilla Id: 53365\n\nModified:\n    jmeter/trunk/src/components/org/apache/jmeter/assertions/JSR223Assertion.java\n    jmeter/trunk/src/components/org/apache/jmeter/extractor/JSR223PostProcessor.java\n    jmeter/trunk/src/components/org/apache/jmeter/modifiers/JSR223PreProcessor.java\n    jmeter/trunk/src/components/org/apache/jmeter/timers/JSR223Timer.java\n    jmeter/trunk/src/components/org/apache/jmeter/visualizers/JSR223Listener.java\n    jmeter/trunk/src/core/org/apache/jmeter/util/JSR223TestElement.java\n    jmeter/trunk/src/protocol/java/org/apache/jmeter/protocol/java/sampler/JSR223Sampler.java\n    jmeter/trunk/xdocs/changes.xml", "is_private": false, "id": 160501, "creator": "p.mouawad@ubik-ingenierie.com", "time": "2012-07-08T13:08:33Z", "bug_id": 53365, "creation_time": "2012-07-08T13:08:33Z", "attachment_id": null}]