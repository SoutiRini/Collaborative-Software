[{"count": 0, "tags": [], "bug_id": 57021, "text": "I occasionally used a version of Tomcat-Native DLL that JVM failed to initialize. The error was logged to stderr, but to none of our log files.\n\nSteps to reproduce with 8.0.14 on Windows with JDK 7u67:\n\n1. Get a wrong version of tcnative-1.dll and put it into %CATALINA_HOME%/bin directory. I erroneously used a x64 DLL with a x86 JDK.\n\n2. Start Tomcat and log output into a file:\ncd bin\ncatalina.bat run >catalina.out 2>&1\n\n3. Stop Tomcat\nCtrl+C or catalina.bat stop\n\n4. Actual: An error (cited below) was logged onto console (catalina.out) but it is not present in catalina.2014-09-25.log file. The only relevant message in catalina.2014-09-25.log was \"The APR based Apache Tomcat Native library <...> was not found on the java.library.path: <...>.\n\nExpected: A properly logged error.\n\nLooking in the source code,\n1) In AprLifecycleListener.init() the Throwable is caught but not logged.\n2) The exception is printed by org.apache.tomcat.jni.Library.Library() constructor. The code looks like the following:\n\n[[[\n                String name = System.mapLibraryName(NAMES[i]);\n                String path = System.getProperty(\"java.library.path\");\n                String sep = System.getProperty(\"path.separator\");\n                String [] paths = path.split(sep);\n                for (int j=0; j<paths.length; j++) {\n                    java.io.File fd = new java.io.File(paths[j] , name);\n                    if (fd.exists()) {\n                        t.printStackTrace();\n                    }\n                }\n                if ( i > 0)\n                    err.append(\", \");\n                err.append(t.getMessage());\n<...>\n        if (!loaded) {\n            err.append('(');\n            err.append(System.getProperty(\"java.library.path\"));\n            err.append(')');\n            throw new UnsatisfiedLinkError(err.toString());\n        }\n]]]\n\nThe loop with \"fd.exists()\" does essentially the same thing that JRE itself is doing in loadLibrary() to locate the library file before actually trying to load it.\n\nThoughts on possible improvement:\n===================================\n\nA. Treat the case when \"fd.exists()\" as fatal and rethrow original exception.\n\nThis will change behaviour in case when both \"tcnative-1\" and \"libtcnative-1\" libraries are present in \"java.library.path\" directories and the first library fails to load while the second one succeeds.\n\nWith the current code it will print an error for the first library and may silently successfully load the second one. With the change that I am proposing it will fail with the first library without trying the second one.\n\nI say that configuration with both libraries being present is unlikely,  and as it was printing an error for the first library I say that such configuration is a broken one.\n\nRethrowing original exception will provide better diagnostics (if AprLifecycleListener is modified to log it) and will remove printing to System.err.\n\n\nB. Replace \"throw new UnsatisfiedLinkError(err.toString());\" with a custom Error class e.g. LibraryNotFoundError extends UnsatisfiedLinkError.\n\n- Include original exceptions and library names into LibraryNotFoundError.\n\n- Use this class in AprLifecycleListener to discern between UnsatisfiedLinkError from failed attempt to load a library versus the common \"library does not exist\" scenario.\n\nIn the former case, log it as a warning. In the latter case print original exceptions if debug logging is enabled. The usual informational message follows.\n\n\nC. Simplify AprLifecycleListener class and call Library.initialize(null) directly without relying on reflection.\n\nThere are already references to the fields such as Library.APR_MAJOR_VERSION further in the code. There is no point in using reflection is this case.\n\nIn the unlikely case that tomcat-jni.jar is not on classpath, AprLifecycleListener should not be present in server.xml as well. In this case Connector.<init> will call AprLifecycleListener.isAprAvailable() but the call to init() will not be performed. It should succeed even if Library class is not on classpath.\n\n\n\nFor reference, the error message with 8.0.14 (with some path censoring) was:\n========================\n[[[\njava.lang.UnsatisfiedLinkError: <CATALINA_HOME>\\bin\\tcnative-1.dll: Can't load AMD 64-bit .dll on a IA 32-bit platform\n\tat java.lang.ClassLoader$NativeLibrary.load(Native Method)\n\tat java.lang.ClassLoader.loadLibrary1(ClassLoader.java:1965)\n\tat java.lang.ClassLoader.loadLibrary0(ClassLoader.java:1890)\n\tat java.lang.ClassLoader.loadLibrary(ClassLoader.java:1880)\n\tat java.lang.Runtime.loadLibrary0(Runtime.java:849)\n\tat java.lang.System.loadLibrary(System.java:1088)\n\tat org.apache.tomcat.jni.Library.<init>(Library.java:40)\n\tat org.apache.tomcat.jni.Library.initialize(Library.java:172)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:606)\n\tat org.apache.catalina.core.AprLifecycleListener.init(AprLifecycleListener.java:203)\n\tat org.apache.catalina.core.AprLifecycleListener.isAprAvailable(AprLifecycleListener.java:105)\n\tat org.apache.catalina.connector.Connector.setProtocol(Connector.java:564)\n\tat org.apache.catalina.connector.Connector.<init>(Connector.java:66)\n\tat org.apache.catalina.startup.ConnectorCreateRule.begin(ConnectorCreateRule.java:62)\n...\n]]]", "id": 178124, "time": "2014-09-25T22:05:35Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2014-09-25T22:05:35Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "text": "+0 on proposal A; I'm not sure it matters all that much. But if there is a conflicting set of libraries, it might be better to fail fast rather than confuse the user with both an error message *and* a successfully-loaded (alternate) library. I'm not sure that both libtcnative-1 *and* tcnative-1 would be tried on any system though (does win32 do this?).\n\n+1 on both proposals B and C", "is_private": false, "id": 178130, "creator": "chris@christopherschultz.net", "time": "2014-09-26T15:41:54Z", "bug_id": 57021, "creation_time": "2014-09-26T15:41:54Z", "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 57021, "attachment_id": 32453, "id": 180950, "time": "2015-02-11T11:26:44Z", "creator": "reachme.valli@gmail.com", "creation_time": "2015-02-11T11:26:44Z", "is_private": false, "text": "Created attachment 32453\nThe attached patch has fixes for both A and B points.\n\nI have modified AprLifecycleListener.java and Library.java to fix the issue. Added a new file \"LibraryNotFoundError.java\" in  \"org.apache.tomcat.jni\" package. Added two new strings in \"LocalStrings.properties\" file located in \"org.apache.catalina.core\" package. \nI do not know the Locale languages like Japaneese and French, so did not add the new strings in other Locale property files.\n\n\nI tested the fix and attached the log files as well.\nI provided the fix based on the comments provided in the issue.\n\nI did not implement the 3rd point(C) yet."}, {"count": 3, "tags": [], "text": "Sorry, I could not attach the log files. This portal is not allowing me to attach the logs which are generated with the fix.", "is_private": false, "id": 180951, "creator": "reachme.valli@gmail.com", "time": "2015-02-11T11:35:40Z", "bug_id": 57021, "creation_time": "2015-02-11T11:35:40Z", "attachment_id": null}, {"count": 4, "tags": [], "text": "Thanks for the patch!\n\nSome comments:\n\n1. In AprLifecycleListener.java, there is no need to log the error both at WARN and DEBUG levels. WARN is sufficient.\n\n2. s/Commenetd/Commented/\n\n3. Add Javadoc for the Exception class.", "is_private": false, "id": 180954, "creator": "chris@christopherschultz.net", "time": "2015-02-11T14:34:09Z", "bug_id": 57021, "creation_time": "2015-02-11T14:34:09Z", "attachment_id": null}, {"count": 5, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "text": "@Chris the difference with WARN and DEBUG is that DEBUG includes the stack trace. I'd say if debug is not enabled, log at WARN, else log at DEBUG so you never get more than one message.\n\nSome more comments.\n\n1. Check line length. Some appear to be over to 100 char limit for code lines.\n\n2. Don't comment out code to disable it. Delete it. Just think how many lines must have been deleted/changed in the last 10+ years. If we want to look at an old version we'll use the version control system tools. We do not want to be wading through reams of commented out code.\n\n3. Try not to mix code formatting changes (e.g adding blank lines) with functional changes.", "id": 180957, "time": "2015-02-11T14:56:20Z", "bug_id": 57021, "creation_time": "2015-02-11T14:56:20Z", "is_private": false}, {"count": 6, "tags": [], "bug_id": 57021, "attachment_id": null, "id": 180959, "time": "2015-02-11T15:40:01Z", "creator": "chris@christopherschultz.net", "creation_time": "2015-02-11T15:40:01Z", "is_private": false, "text": "(In reply to Mark Thomas from comment #5)\n> @Chris the difference with WARN and DEBUG is that DEBUG includes the stack\n> trace. I'd say if debug is not enabled, log at WARN, else log at DEBUG so\n> you never get more than one message.\n\nACK. I hadn't noticed the stack trace. Vin, please ignore my comment about WARN versus DEBUG."}, {"count": 7, "tags": [], "creator": "reachme.valli@gmail.com", "attachment_id": null, "text": "I updated the code as per your comments.\nGenerated java doc for LibraryNotFoundError.java class and added to patch.\nNow the patch is of 100KB size.\nI attached the updated patch.\nPlease review it.", "id": 180994, "time": "2015-02-12T05:37:05Z", "bug_id": 57021, "creation_time": "2015-02-12T05:37:05Z", "is_private": false}, {"count": 8, "tags": [], "bug_id": 57021, "attachment_id": 32460, "id": 180995, "time": "2015-02-12T05:38:06Z", "creator": "reachme.valli@gmail.com", "creation_time": "2015-02-12T05:38:06Z", "is_private": false, "text": "Created attachment 32460\nUpdated patch with suggested comments\n\nPlease let me know if anything is missing."}, {"count": 9, "tags": [], "bug_id": 57021, "attachment_id": null, "id": 181003, "time": "2015-02-12T12:30:14Z", "creator": "chris@christopherschultz.net", "creation_time": "2015-02-12T12:30:14Z", "is_private": false, "text": "(In reply to VIN from comment #8)\n> Created attachment 32460 [details]\n> Updated patch with suggested comments\n> \n> Please let me know if anything is missing.\n\nThe doc/*.html files should not be in the patch... they are auto-generated from the xml files elsewhere.\n\nIn AprLifecycleListener near line 208, instead of catching Throwable and then checking for LibraryNotFoundError and UnsatisfiedLinkError, why not add catch clauses and leave the default action in catch(Throwable)? I think this will be a better way to do things.\n\nI'm not sure what the implications are, but the old (and default case) code adds the log message to initInfoLogMessages while the new code performs logging directly. Is there a reason to prefer one over the other?"}, {"count": 10, "tags": [], "bug_id": 57021, "text": "Some further feedback\n\n1. Indents should be with 4 spaces not tabs.\n\n2. In LibraryNotFoundError libraryName is better than nameOfLibrary\n\n3. Improvement B requested name*s* of the libraries, not just one.\n\n4. The patch always throws an Exception on the first name. There is never a chance to check the second name.\n\n5. Improvement A is not addressed.\n\n6. Javadoc for LibraryNotFoundError adds no value. Yes, neither does much of the Javadoc in that package but that is not a reason to continue in the same direction.\n\n7. Log messages inr AprLifecycleListener.init should not be made directly to the logger. Check the svn history for that file to find out why.\n\nIn applying and reviewing the patch I have fixed the various issues so I should be committing this fairly soon.\n\nDon't be concerned about how much has been changed. The first patch I offered was unrecognisable by the time Bill had finished with it. Your first patch is a lot better than my first patch.", "id": 181011, "time": "2015-02-12T19:57:41Z", "creator": "markt@apache.org", "creation_time": "2015-02-12T19:57:41Z", "is_private": false, "attachment_id": null}, {"count": 11, "tags": [], "bug_id": 57021, "attachment_id": null, "id": 181012, "time": "2015-02-12T20:05:23Z", "creator": "markt@apache.org", "creation_time": "2015-02-12T20:05:23Z", "is_private": false, "text": "This has been fixed in trunk, 8.0.x (for 8.0.19 onwards) and 7.0.x (for 7.0.60 onwards)."}, {"count": 12, "tags": [], "text": "Adding debug and error messages to initInfoLogMessages list results in them being printed at INFO level. It is hard to discern them from other INFO messages.\n\nI think that in those cases they should just be logged immediately, without postponing the logging.\n\nI'll update the fix.", "is_private": false, "id": 181026, "creator": "knst.kolinko@gmail.com", "time": "2015-02-12T23:03:33Z", "bug_id": 57021, "creation_time": "2015-02-12T23:03:33Z", "attachment_id": null}, {"count": 13, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "text": "Those messages are postponed to avoid them appearing before the version info etc.\n\nI viewed logging them at INFO as less bad than logging them before the version info. The ideal would be to track the level along with the message in the postponed logging.", "id": 181028, "time": "2015-02-12T23:09:28Z", "bug_id": 57021, "creation_time": "2015-02-12T23:09:28Z", "is_private": false}, {"count": 14, "tags": [], "creator": "knst.kolinko@gmail.com", "attachment_id": null, "text": "(In reply to Mark Thomas from comment #13)\n\nVersion info is just some information. I think that error messages (and debug ones) are more helpful when they are timely. I agree that it can be a matter of taste, though.\n\n\nUpdated the fix in r1659427,-28,-29, r1659431 (for 8.0.19 onwards, 7.0.60 onwards).", "id": 181031, "time": "2015-02-12T23:21:13Z", "bug_id": 57021, "creation_time": "2015-02-12T23:21:13Z", "is_private": false}, {"count": 15, "tags": [], "creator": "reachme.valli@gmail.com", "attachment_id": null, "text": "(In reply to Christopher Schultz from comment #9)\n> (In reply to VIN from comment #8)\n> > Created attachment 32460 [details]\n> > Updated patch with suggested comments\n> > \n> > Please let me know if anything is missing.\n> \n> The doc/*.html files should not be in the patch... they are auto-generated\n> from the xml files elsewhere.\n  Hi Chris,\n\n  I generated the Javadoc from Eclipse which generated those many HTML files. I was not aware that we should not be putting all those files into patch. Can you help explain me on what is the best approach to generate the java doc and what files need to be uploaded in generated files?\n\n \n\n> In AprLifecycleListener near line 208, instead of catching Throwable and\n> then checking for LibraryNotFoundError and UnsatisfiedLinkError, why not add\n> catch clauses and leave the default action in catch(Throwable)? I think this\n> will be a better way to do things.\n\n   I have gone through multiple links to understand between catching an exception vs catching Throwable and my findings are:\n\nWhen we catch Exception, all sub classes of exception will be caught but ERRORS will not be part of them. (ERRORS are serious problems like MemoryOutOfBound where JVM may need to shutdown).\n\nThrowable is super class of all Exceptions and Errors and when we catch Throwable all the Errors also will be caught.\n\nBut from JAVA Doc:\nAn Error is a subclass of Throwable that indicates serious problems that a reasonable application should not try to catch. Most such errors are abnormal conditions. The ThreadDeath error, though a \"normal\" condition, is also a subclass of Error because most applications should not try to catch it.\n\nIt means applications should not try to catch Throwable.\n\nI have seen many places in our Tomcat application, catching the Throwable. In this regard, can you help me to understand why do we use Throwable and where can it be used in general?\n\n> \n> I'm not sure what the implications are, but the old (and default case) code\n> adds the log message to initInfoLogMessages while the new code performs\n> logging directly. Is there a reason to prefer one over the other?\n\nThe initInfoLogMessages holds only the INFO messages, but as per the bug request we need to log the exception as warning. Hence i did not add it to initInfoLogMessages.", "id": 181038, "time": "2015-02-13T05:53:40Z", "bug_id": 57021, "creation_time": "2015-02-13T05:53:40Z", "is_private": false}, {"count": 16, "tags": [], "creator": "reachme.valli@gmail.com", "attachment_id": null, "is_private": false, "id": 181040, "time": "2015-02-13T06:09:23Z", "bug_id": 57021, "creation_time": "2015-02-13T06:09:23Z", "text": "(In reply to Mark Thomas from comment #10)\n> Some further feedback\n> \n> 1. Indents should be with 4 spaces not tabs.\n     Hi Mark,\n     I changed the code using Eclipse editor which by default adds tab as indent. Next time on wards i will open the changed code in notepad and check the indents.\n\n> \n> 2. In LibraryNotFoundError libraryName is better than nameOfLibrary\n     Sure, Thanks.\n> \n> 3. Improvement B requested name*s* of the libraries, not just one.\n     As per the enhancement mentioned in the request, Tomcat code should not try to load the second library when the first library failed to load. So I thought there is no point in maintaining array of library names.\n\nPlease correct me if my understanding is wrong.\n\n> \n> 4. The patch always throws an Exception on the first name. There is never a\n> chance to check the second name.\n   \n     As per the enhancement mentioned in request, code should not try load the second library. That's why I intentionally returned the exception (throw t;).\n\nPlease correct me if my understanding is wrong.\n \n\n> \n> 5. Improvement A is not addressed.\n      A. Treat the case when \"fd.exists()\" as fatal and rethrow original exception.\n     I throw the original exception back to AprLifeCycleListener.java as mentioned. \n     \n     In Library.java, i am throwing this and in AprLifecycleListener.java, I logged this exception as warning. Forgot to mark it as Fatal :)\n\n     throw new LibraryNotFoundError(name, err.toString());     \n\n> \n> 6. Javadoc for LibraryNotFoundError adds no value. Yes, neither does much of\n> the Javadoc in that package but that is not a reason to continue in the same\n> direction.\n> \n> 7. Log messages inr AprLifecycleListener.init should not be made directly to\n> the logger. Check the svn history for that file to find out why.\n\n   Sure, I will check. I found only initInfoLogMessages variable in AprLifecycleListener.java, did not find the Fatal or Warning variable so i felt no other way than directly print to the log file by log.warn().\n\n> \n> In applying and reviewing the patch I have fixed the various issues so I\n> should be committing this fairly soon.\n> \n> Don't be concerned about how much has been changed. The first patch I\n> offered was unrecognisable by the time Bill had finished with it. Your first\n> patch is a lot better than my first patch.\n\n\n  Do we have any guidelines document so that i can go through and follow accordingly?\n\nThanks so much for your time :)"}, {"count": 17, "tags": [], "creator": "reachme.valli@gmail.com", "attachment_id": null, "text": "(In reply to VIN from comment #16)\n> (In reply to Mark Thomas from comment #10)\n> > Some further feedback\n> > \n> > 1. Indents should be with 4 spaces not tabs.\n>      Hi Mark,\n>      I changed the code using Eclipse editor which by default adds tab as\n> indent. Next time on wards i will open the changed code in notepad and check\n> the indents.\n> \n> > \n> > 2. In LibraryNotFoundError libraryName is better than nameOfLibrary\n>      Sure, Thanks.\n> > \n> > 3. Improvement B requested name*s* of the libraries, not just one.\n>      As per the enhancement mentioned in the request, Tomcat code should not\n> try to load the second library when the first library failed to load. So I\n> thought there is no point in maintaining array of library names.\n> \n> Please correct me if my understanding is wrong.\n> \n> > \n> > 4. The patch always throws an Exception on the first name. There is never a\n> > chance to check the second name.\n>    \n>      As per the enhancement mentioned in request, code should not try load\n> the second library. That's why I intentionally returned the exception (throw\n> t;).\n> \n> Please correct me if my understanding is wrong.\n>  \n> \n> > \n> > 5. Improvement A is not addressed.\n>       A. Treat the case when \"fd.exists()\" as fatal and rethrow original\n> exception.\n>      I throw the original exception back to AprLifeCycleListener.java as\n> mentioned. \n>      \n>      In Library.java, i am throwing this and in AprLifecycleListener.java, I\n> logged this exception as warning. Forgot to mark it as Fatal :)\n> \n>      throw new LibraryNotFoundError(name, err.toString());     \n> \n> > \n> > 6. Javadoc for LibraryNotFoundError adds no value. Yes, neither does much of\n> > the Javadoc in that package but that is not a reason to continue in the same\n> > direction.\n> > \n> > 7. Log messages inr AprLifecycleListener.init should not be made directly to\n> > the logger. Check the svn history for that file to find out why.\n> \n>    Sure, I will check. I found only initInfoLogMessages variable in\n> AprLifecycleListener.java, did not find the Fatal or Warning variable so i\n> felt no other way than directly print to the log file by log.warn().\n> \n> > \n> > In applying and reviewing the patch I have fixed the various issues so I\n> > should be committing this fairly soon.\n> > \n> > Don't be concerned about how much has been changed. The first patch I\n> > offered was unrecognisable by the time Bill had finished with it. Your first\n> > patch is a lot better than my first patch.\n> \n> \n>   Do we have any guidelines document so that i can go through and follow\n> accordingly?\n> \n> Thanks so much for your time :)\n\n\nI have gone through the fixed code. It is nice and simple. One query is:  In AprLifecycleListener.java, the LibraryNotFound exception is added to initInfiLogMessages variable. I suspect it would print the error as INFO.", "id": 181041, "time": "2015-02-13T06:37:55Z", "bug_id": 57021, "creation_time": "2015-02-13T06:37:55Z", "is_private": false}, {"count": 18, "tags": [], "bug_id": 57021, "attachment_id": null, "id": 181044, "time": "2015-02-13T09:13:53Z", "creator": "markt@apache.org", "creation_time": "2015-02-13T09:13:53Z", "is_private": false, "text": "(In reply to Konstantin Kolinko from comment #14)\n> \n> Version info is just some information. I think that error messages (and\n> debug ones) are more helpful when they are timely. I agree that it can be a\n> matter of taste, though.\n\nI'll see how much the ordering bugs me. If it bugs me enough, I'll do something about it. The delay is only between the loading of the Listener class and init() being called so it isn't a big issue. The messages would still appear - just after the version info rather than before it."}, {"count": 19, "tags": [], "bug_id": 57021, "attachment_id": null, "id": 181045, "time": "2015-02-13T09:18:28Z", "creator": "markt@apache.org", "creation_time": "2015-02-13T09:18:28Z", "is_private": false, "text": "(In reply to VIN from comment #16)\n> (In reply to Mark Thomas from comment #10)\n> > Some further feedback\n> > \n> > 1. Indents should be with 4 spaces not tabs.\n>      Hi Mark,\n>      I changed the code using Eclipse editor which by default adds tab as\n> indent. Next time on wards i will open the changed code in notepad and check\n> the indents.\n\nYou can change this per project in Eclipse.\n\n> > 3. Improvement B requested name*s* of the libraries, not just one.\n>      As per the enhancement mentioned in the request, Tomcat code should not\n> try to load the second library when the first library failed to load. So I\n> thought there is no point in maintaining array of library names.\n> \n> Please correct me if my understanding is wrong.\n\nThere is a difference between the library being found and not loading (error immediately) vs the library not being found and not loading (try the next name). If all names fail we still need to log all names.\n\n> > 4. The patch always throws an Exception on the first name. There is never a\n> > chance to check the second name.\n>    \n>      As per the enhancement mentioned in request, code should not try load\n> the second library. That's why I intentionally returned the exception (throw\n> t;).\n> \n> Please correct me if my understanding is wrong.\n\nSee above.\n\n> > 5. Improvement A is not addressed.\n\nI meant C."}, {"count": 20, "tags": [], "creator": "reachme.valli@gmail.com", "attachment_id": null, "text": "(In reply to Mark Thomas from comment #19)\n> (In reply to VIN from comment #16)\n> > (In reply to Mark Thomas from comment #10)\n> > > Some further feedback\n> > > \n> > > 1. Indents should be with 4 spaces not tabs.\n> >      Hi Mark,\n> >      I changed the code using Eclipse editor which by default adds tab as\n> > indent. Next time on wards i will open the changed code in notepad and check\n> > the indents.\n> \n> You can change this per project in Eclipse.\n> \n> > > 3. Improvement B requested name*s* of the libraries, not just one.\n> >      As per the enhancement mentioned in the request, Tomcat code should not\n> > try to load the second library when the first library failed to load. So I\n> > thought there is no point in maintaining array of library names.\n> > \n> > Please correct me if my understanding is wrong.\n> \n> There is a difference between the library being found and not loading (error\n> immediately) vs the library not being found and not loading (try the next\n> name). If all names fail we still need to log all names.\n> \n> > > 4. The patch always throws an Exception on the first name. There is never a\n> > > chance to check the second name.\n> >    \n> >      As per the enhancement mentioned in request, code should not try load\n> > the second library. That's why I intentionally returned the exception (throw\n> > t;).\n> > \n> > Please correct me if my understanding is wrong.\n> \n> See above.\n> \n> > > 5. Improvement A is not addressed.\n> \n> I meant C.\n\nGot you Mark. Thanks. \nDo we have any guidelines document so that i can go through and follow while coding?", "id": 181046, "time": "2015-02-13T09:21:19Z", "bug_id": 57021, "creation_time": "2015-02-13T09:21:19Z", "is_private": false}, {"count": 21, "tags": [], "bug_id": 57021, "text": "http://tomcat.apache.org/tomcat-8.0-doc/building.html#Building_with_Eclipse", "id": 181047, "time": "2015-02-13T09:34:05Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2015-02-13T09:34:05Z", "is_private": false, "attachment_id": null}, {"count": 22, "tags": [], "bug_id": 57021, "text": "(In reply to Konstantin Kolinko from comment #21)\n> http://tomcat.apache.org/tomcat-8.0-doc/building.html#Building_with_Eclipse\n\n\nGot it. Thanks.", "id": 181048, "time": "2015-02-13T09:53:18Z", "creator": "reachme.valli@gmail.com", "creation_time": "2015-02-13T09:53:18Z", "is_private": false, "attachment_id": null}]