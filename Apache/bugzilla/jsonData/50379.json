[{"count": 0, "tags": [], "bug_id": 50379, "attachment_id": null, "text": "Say you have this redirect url: https://repository.apache.org/service/local/artifact/maven/redirect?r=releases&g=org.apache.geronimo.ext.tomcat&a=tomcat-parent-6.0.26&v=6.0.26.0&e=tar.gz&c=source-release\n\nIt is redirected to: https://repository.apache.org/content/repositories/releases/org/apache/geronimo/ext/tomcat/tomcat-parent-6.0.26/6.0.26.0/tomcat-parent-6.0.26-6.0.26.0-source-release.tar.gz\n\nThe documentation of this task says: The destination file name use the last part of the path of the source URL unless you also specify a mapper.\n\nThis is ignored in the redirect case. The output name is \"redirect\"", "id": 142181, "time": "2010-11-30T05:42:49Z", "creator": "1983-01-06@gmx.net", "creation_time": "2010-11-30T05:42:49Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 50379, "attachment_id": null, "text": "The source URL is not the URL which is redirected to, the source URL is the URL provided, which happens to be redirect in your case, generally everything after the ? is seen as request parameters.\n\nThe URL which is redirected to is generally called the target URL.\n\nNote it would be unsafe to actually use anything a remote system provides as \"filename\" as part of the URL after a redirect.\nhttp://www.example.com/c:\\windows\\regedit.exe is an example of a valid URL and c:\\windows\\regedit.exe will be the last part of the URL and hence the filename.", "id": 142261, "time": "2010-12-01T14:15:15Z", "creator": "jkf@apache.org", "creation_time": "2010-12-01T14:15:15Z", "is_private": false}, {"count": 2, "tags": [], "creator": "1983-01-06@gmx.net", "attachment_id": null, "text": "Martijn,\ndoesn't this risk exist without redirection too? It is always in the responsibility of the script writer to verify the sources he's downloading from. Such redirecting services, like in Nexus, have legitimate existance.", "id": 142262, "time": "2010-12-01T14:26:11Z", "bug_id": 50379, "creation_time": "2010-12-01T14:26:11Z", "is_private": false}, {"count": 3, "attachment_id": null, "creator": "jkf@apache.org", "text": "Hi Michael\n\nIf you have explicitly specified the URL this risk does not exist, as the user has specified the URL, and therefore knows (or at least could know) what file name will be used. If you have built up the collection of URL's by crawling a remote site, yes you better verify them before using them this way.\nThe following example\n\n<get dest=\"downloads\">\n  <url url=\"http://ant.apache.org/index.html\"/> \n  <url url=\"http://ant.apache.org/faq.html\"/>\n</get>\n\nwill always store the files as downloads/index.html and downloads/faq.html, even if we decided to move those files and retrieve them using a redirect with an url like for instance http://ant.apach.org/manual?page=index and http://ant.apache.org/manual?page=faq\n\nIf we would manipulate the name according to the redirect both files would be stored as downloads/manual\n\nSo yes without redirection the risk exists if a user builds up an collection of URL's by for instance crawling a remote site, but not in case the user explicitly stated the resources (s)he wanted to retrieve. Starting to rename the download would expose these users to this risk, to which they are currently not exposed (and would break builds if someone redirects in a way unexected to the script).", "id": 142269, "time": "2010-12-01T17:09:12Z", "bug_id": 50379, "creation_time": "2010-12-01T17:09:12Z", "tags": [], "is_private": false}, {"count": 4, "tags": [], "bug_id": 50379, "attachment_id": null, "text": "Martijn, in your example there would be only one manual file. The second would overwrite the first one. This is more harmful than my basic idea. The old behavior could be retained and an additional parameter could be introduced with uses the last redirected name.", "id": 142292, "time": "2010-12-02T05:23:35Z", "creator": "1983-01-06@gmx.net", "creation_time": "2010-12-02T05:23:35Z", "is_private": false}]