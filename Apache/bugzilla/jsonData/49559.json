[{"count": 0, "attachment_id": 25714, "bug_id": 49559, "text": "Created attachment 25714\nAllow admin-choosen DH parameters for DHE enabled cipher-modes\n\nIn order to be EAL4+ validated for one of our customers, Apache needs to be able to support 2048+ bits group size for Diffie-Hellman parameters. Right now, temporary parameters are 512 and 1024 bits only.\n\nWe can still disallow DH at all, leaving only RSA for authentication and pre-master secret encryption, but that's a suboptimal solution, as we then loose forward secrecy.\n\nAdding a 2048 bits DH temporary key into mod_ssl is not possible, since OpenSSL would only ask for a 512/1024 bits one, depending on the \"exportability\" of the choosen ciper-mode.\n\nThis patch adds a new configuration directive, \"SSLDHParametersFile <file>\", allowing the administrator to supply its own Diffie-Hellman parameters (\"openssl dhparam 2048 > dhparam2048.pem\" to generate 2048 bits ones, for example).\nIf this directive is specified and parameters are found in the supplied file, then these parameters will be used whenever DHE is used to negociate the pre-master secret. If this directive is not used, then it works like it does now, leaving OpenSSL ask mod_ssl for a set of parameters of the desired size (512 or 1024 bits).\n\nWe'd like this to be evaluated, discussed, and if possible, applied.\n\nRegards.", "id": 138212, "time": "2010-07-06T09:12:39Z", "creator": "erwann.abalea@keynectis.com", "creation_time": "2010-07-06T09:12:39Z", "tags": [], "is_private": false}, {"count": 1, "tags": [], "bug_id": 49559, "attachment_id": 28699, "text": "Created attachment 28699\nUpdated patch for 2.4.2", "id": 158672, "time": "2012-04-30T18:22:51Z", "creator": "erwann.abalea@keynectis.com", "creation_time": "2012-04-30T18:22:51Z", "is_private": false}, {"count": 2, "tags": [], "creator": "erwann.abalea@keynectis.com", "attachment_id": null, "text": "A new version of the patch has been provided, based on httpd 2.4.2.\nWhen generating your own DH parameters, add the \"-dsaparam\" option to openssl commandline, this speeds up the handshake by about 15% for a 1024bits prime to 30% for a 2048bits prime.\nWith \"-dsaparam\" option, the private key is limited to 160 bits for a <2048bits prime, and 256 bits for a >=2048bits one. You then have 80bits of security for a 1024bits prime, but based on NFS results you can't get much.\n2048bits prime with a 256bits private key length gives you 128bits of security.", "id": 158676, "time": "2012-04-30T18:29:45Z", "bug_id": 49559, "creation_time": "2012-04-30T18:29:45Z", "is_private": false}, {"count": 3, "attachment_id": null, "bug_id": 49559, "is_private": false, "id": 168004, "time": "2013-06-24T17:09:10Z", "creator": "michaelm12-asfbugzilla@aquaorange.net", "creation_time": "2013-06-24T17:09:10Z", "tags": [], "text": "Any idea on when this might make it into 2.4.x or 2.2.x?\n\nMany thanks."}, {"count": 4, "tags": [], "text": "I would like to see this added to 2.2.x and 2.4.x too!", "attachment_id": null, "bug_id": 49559, "id": 168703, "time": "2013-07-21T22:45:20Z", "creator": "frazzzzze@gmail.com", "creation_time": "2013-07-21T22:45:20Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 49559, "attachment_id": null, "id": 169086, "time": "2013-08-04T18:10:23Z", "creator": "geoffroy+dev@gramaize.eu", "creation_time": "2013-08-04T18:10:23Z", "is_private": false, "text": "In addition, Elliptic Curve choice should also be given to the server admin in a similar way (e.g. SSLCurveList <enabled_curve_list> ). Tell the admin to execute 'openssl ecparam -list_curves' to get a list of the supported curves."}, {"count": 6, "tags": [], "bug_id": 49559, "attachment_id": null, "id": 169494, "time": "2013-08-16T08:47:13Z", "creator": "Christoph@ApiViewer.de", "creation_time": "2013-08-16T08:47:13Z", "is_private": false, "text": "Would someone please apply this patch to 2.2.x and 2.4.x ... ?"}, {"count": 7, "attachment_id": null, "bug_id": 49559, "is_private": false, "id": 169495, "time": "2013-08-16T08:53:33Z", "creator": "harald.dunkel@aixigo.de", "creation_time": "2013-08-16T08:53:33Z", "tags": [], "text": "I'd love to see this added to 2.2.x and 2.4.y"}, {"count": 8, "tags": [], "creator": "asfbugz@velox.ch", "attachment_id": 30804, "text": "Created attachment 30804\nPoC: read (EC)DHE parameters from SSLCertificateFile (applies to trunk and 2.4.x)\n\nI'm fine with the idea, but the implementation in the patches submitted so far is too complex, in my opinion (in particular the SSL_read_DHparams stuff, which tries to support/read three different formats).\n\nHere is an alternative proposal:\n\n- only support PEM-formatted parameters (-----BEGIN DH PARAMETERS---- / -----END DH PARAMETERS-----)\n\n- use the existing SSLCertificateFile directive to support per-vhost, custom DHE and ECDHE parameters\n\nAttached is a - lightly tested - proof of concept, to be applied to either trunk or 2.4.x... testing and feedback welcome. To specify EC curve names, append the output of \"openssl ecparam -name secp521r1\" or your favorite curve to SSLCertificateFile (of course the docs for SSLCertificateFile would have to be extended, if there is a general agreement on taking this approach).", "id": 169956, "time": "2013-09-08T08:10:11Z", "bug_id": 49559, "creation_time": "2013-09-08T08:10:11Z", "is_private": false}, {"count": 9, "tags": [], "bug_id": 49559, "attachment_id": null, "text": "(In reply to Kaspar Brand from comment #8)\n> Created attachment 30804 [details]\n> PoC: read (EC)DHE parameters from SSLCertificateFile (applies to trunk and\n> 2.4.x)\n> \n> I'm fine with the idea, but the implementation in the patches submitted so\n> far is too complex, in my opinion (in particular the SSL_read_DHparams\n> stuff, which tries to support/read three different formats).\n\nThis function is similar to SSL_read_X509 and SSL_read_PrivateKey defined in the same file, and used by the module to read the corresponding objects.\n\nThat said, I'm not fluent in Apache internals, and I admit some things may have been done more easily. I tried to mimic how already existing elements (keys and certs) were declared, registered and used, when adding a new element type (DHParams).\n\n> - use the existing SSLCertificateFile directive to support per-vhost, custom\n> DHE and ECDHE parameters\n\nThe original patch is also vhost-aware.\nIt doesn't know about ECDHE, that's true. That wasn't critical at that time (2010) because nobody used ECDHE, and even today the used curve is the standard NIST P256, offering 128bits of security in theory. Since a few weeks, some people want to be able to specify the curve used, there's nothing wrong with that.", "id": 169961, "time": "2013-09-08T12:15:59Z", "creator": "erwann.abalea@keynectis.com", "creation_time": "2013-09-08T12:15:59Z", "is_private": false}, {"count": 10, "attachment_id": null, "bug_id": 49559, "is_private": false, "id": 169962, "time": "2013-09-08T15:25:43Z", "creator": "hiding@falco.me", "creation_time": "2013-09-08T15:25:43Z", "tags": [], "text": "(In reply to Kaspar Brand from comment #8)\n\nI applied your patch in my testing environment with httpd-2.4.6 and it works as advertised. After appending DH parameters to the certificate file, all DH ciphers were using the expected key size.\n\nI found it a bit confusing that you actually have to put the params alongside your certificate into one file. One has to pay more attention to these additional settings on changing the certificate.\n\nBut if it is actually way more easy to implement DH / ECDHE parameters this way, then it is probably the way to go."}, {"count": 11, "tags": [], "creator": "asfbugz@velox.ch", "attachment_id": null, "id": 170110, "time": "2013-09-15T10:48:04Z", "bug_id": 49559, "creation_time": "2013-09-15T10:48:04Z", "is_private": false, "text": "(In reply to Erwann Abalea from comment #9)\n> This function is similar to SSL_read_X509 and SSL_read_PrivateKey defined in\n> the same file, and used by the module to read the corresponding objects.\n\nPerhaps this is an opportunity to clean up some mod_ssl cruft... I just took an extended proposal to the mailing list, to stir some further discussion:\n\nhttp://mail-archives.apache.org/mod_mbox/httpd-dev/201309.mbox/%3C52358ED1.2070704@velox.ch%3E\n\nAdditionally, I think we should consider to use 2048-bit DH parameters by default if the cert's RSA/DSA key is 2048 bits or more (so that sysadmin's don't have to generate their custom DH parameters to get more than 1024 bits for DHE). Changing this by default is probably debatable, and therefore another reason I'm taking it to the list."}, {"count": 12, "tags": [], "bug_id": 49559, "attachment_id": null, "text": "DH-parameters should always be at least the same size as the SSL certificate, so if I use 4096 or even 8192 bit for the certificate a DH parameter with only 2048 bit would effectively weaken the whole connection down to 2048 bit, which we don't want and in a few years we would have the exactly same situation ( DH parameters too weak and not FULLY selectable) as we do right now \nSo please consider this and let the admin choose freely, but at least make sure DH parameters bits are never smaller than SSL certificate bits!", "id": 170112, "time": "2013-09-15T14:23:33Z", "creator": "frazzzzze@gmail.com", "creation_time": "2013-09-15T14:23:33Z", "is_private": false}, {"count": 13, "tags": [], "creator": "asfbugz@velox.ch", "attachment_id": 30804, "text": "Comment on attachment 30804\nPoC: read (EC)DHE parameters from SSLCertificateFile (applies to trunk and 2.4.x)\n\nFor trunk, this issue has been addressed with r1527295 (with updated documentation under https://httpd.apache.org/docs/trunk/mod/mod_ssl.html#sslcertificatefile). A backport proposal for 2.4.x will likely follow.", "id": 170345, "time": "2013-09-29T10:49:16Z", "bug_id": 49559, "creation_time": "2013-09-29T10:49:16Z", "is_private": false}, {"count": 14, "attachment_id": null, "bug_id": 49559, "is_private": false, "id": 170373, "time": "2013-10-01T17:32:51Z", "creator": "asfbugz@velox.ch", "creation_time": "2013-10-01T17:32:51Z", "tags": [], "text": "Backport to 2.4.x proposed with r1528154. Patch available at https://people.apache.org/~kbrand/mod_ssl-2.4.x-ekh.diff."}, {"count": 15, "tags": [], "creator": "nick@noodles.net.nz", "attachment_id": null, "id": 170717, "time": "2013-10-20T22:36:27Z", "bug_id": 49559, "creation_time": "2013-10-20T22:36:27Z", "is_private": false, "text": "The patch https://people.apache.org/~kbrand/mod_ssl-2.4.x-ekh.diff seems to break TLS 1.1 and 1.2 on my setup (RHEL 6.x, apache 2.4.6, openssl 1.0.1e). I haven't had a chance to look into it further, but using ssllabs.com it no longer showed me as supporting > TLS 1.0"}, {"count": 16, "tags": [], "text": "Sorry, was a config error on my side. Patch works well.", "is_private": false, "id": 170718, "creation_time": "2013-10-20T23:25:10Z", "time": "2013-10-20T23:25:10Z", "creator": "nick@noodles.net.nz", "bug_id": 49559, "attachment_id": null}, {"count": 17, "tags": [], "creator": "dkg@fifthhorseman.net", "text": "I'm glad to see this patch being backported to 2.4.  What are the considerations for backporting it to the 2.2.x branch as well?", "id": 170956, "time": "2013-11-01T03:19:34Z", "bug_id": 49559, "creation_time": "2013-11-01T03:19:34Z", "is_private": false, "attachment_id": null}, {"count": 18, "attachment_id": 28699, "bug_id": 49559, "text": "Comment on attachment 28699\nUpdated patch for 2.4.2\n\nMarking as obsolete, since a different approach has been implemented in 2.4.x.", "id": 171457, "time": "2013-11-27T06:28:14Z", "creator": "asfbugz@velox.ch", "creation_time": "2013-11-27T06:28:14Z", "tags": [], "is_private": false}, {"count": 19, "tags": [], "creator": "asfbugz@velox.ch", "attachment_id": null, "text": "Fixed in 2.4.7 with r1542327.", "id": 171458, "time": "2013-11-27T06:29:16Z", "bug_id": 49559, "creation_time": "2013-11-27T06:29:16Z", "is_private": false}, {"count": 20, "tags": [], "creator": "ylavic.dev@gmail.com", "attachment_id": null, "text": "Backported to 2.2.30 in r1680916.", "id": 183249, "time": "2015-06-01T16:42:11Z", "bug_id": 49559, "creation_time": "2015-06-01T16:42:11Z", "is_private": false}]