[{"count": 0, "tags": [], "bug_id": 33647, "attachment_id": null, "id": 71232, "time": "2005-02-19T03:40:15Z", "creator": "speeves@erikin.com", "creation_time": "2005-02-19T03:40:15Z", "is_private": false, "text": "debian unstable:\nlibldap2 2.1.30-3\nlibldap2-dev 2.1.30-3\nhttpd-2.1 trunk (Jan 21, 2005)\napr* trunk (Jan 21, 2005)\n\nLDAP Server:\nNovell eDirectory 8.7.3\n\n1. if user auths ok with mod_auth_basic\n2. doesn't belong to group in htgroup file which has authorization for accessing\nfiles, etc.\n3. mod_auth_basic declines to mod_authnz_ldap\n4. at mod_authnz_ldap.c->authz_ldap_check_user_access line 543\n5. if req doesn't exist (!req), then call:\n5. util_ldap.c function util_ldap_cache_getuserdn with ldc->bound = 1 (this\nwould be the second time that the user tries to login).\n a. (?) line 1109 -- tries to connect to the ldap server with the dn built from\nusername sent by end-user. \n b. (?) fails to bind\n c. line 1114 -- tries to use the cached connection to ldap server to search,\nwhich causes:\n\n/************ begin backtrace  ******************/\n\nProgram received signal SIGPIPE, Broken pipe.\n0xb7d9b5ae in __write_nocancel () from /lib/tls/libpthread.so.0\n\n(gdb) backtrace\n#0  0xb7d9b5ae in __write_nocancel () from /lib/tls/libpthread.so.0\n#1  0xb7e2606d in ber_int_sb_write () from /usr/lib/liblber.so.2\n#2  0xb7e26b57 in ber_int_sb_write () from /usr/lib/liblber.so.2\n#3  0xb7e25ec4 in ber_int_sb_write () from /usr/lib/liblber.so.2\n#4  0xb7e22be9 in ber_flush () from /usr/lib/liblber.so.2\n#5  0xb7e45117 in ldap_int_flush_request () from /usr/lib/libldap.so.2\n#6  0xb7e45308 in ldap_send_server_request () from /usr/lib/libldap.so.2\n#7  0xb7e4502a in ldap_send_initial_request () from /usr/lib/libldap.so.2\n#8  0xb7e3662e in ldap_search_ext () from /usr/lib/libldap.so.2\n#9  0xb7e3675b in ldap_search_ext_s () from /usr/lib/libldap.so.2\n#10 0x080a2e75 in util_ldap_cache_getuserdn (r=0x82830e8, ldc=0x8216498, \n    url=0x8209250 \"ldap://ldap.example.com:389/ou=users,o=example?uid\", \n    basedn=0x8209290 \"ou=users,o=example\", scope=2, attrs=0x82092a0, \n    filter=0xbfffd4d0 \"(&(objectclass=*)(uid=username))\", binddn=0xbfffd4cc, \n    retvals=0xbfffd4c8) at util_ldap.c:1114\n#11 <function called from gdb>\n#12 authz_ldap_check_user_access (r=0x82830e8) at mod_authnz_ldap.c:551\n#13 0x0807a229 in ap_run_auth_checker (r=0x82830e8) at request.c:76\n#14 0x0807a87d in ap_process_request_internal (r=0x82830e8) at request.c:200\n#15 0x080dc629 in ap_process_request (r=0x82830e8) at http_request.c:253\n#16 0x080d9715 in ap_process_http_connection (c=0x826f230) at http_core.c:171\n#17 0x08087644 in ap_run_process_connection (c=0x826f230) at connection.c:42\n#18 0x08087a3e in ap_process_connection (c=0x826f230, csd=0x826f098)\n    at connection.c:175\n#19 0x08114eb7 in child_main (child_num_arg=0) at prefork.c:625\n#20 0x08114f9a in make_child (s=0x8169970, slot=0) at prefork.c:665\n#21 0x08115565 in ap_mpm_run (_pconf=0x81620a8, plog=0x81b21e8, s=0x8169970)\n    at prefork.c:941\n#22 0x0806a338 in main (argc=4, argv=0xbffff844) at main.c:703\n(gdb) \n/******** end backtrace *****************/\n\nerror_log:\n[Thu Jan 27 06:56:45 2005] [debug] mod_authnz_ldap.c(544): [client 192.168.1.9]\nldap authorize: Creating LDAP req structure\n\n/*** But, if the process is allowed to finish, it will print this to the\nerror_log: ***/\n[Thu Jan 27 07:02:06 2005] [debug] mod_authnz_ldap.c(556): [client 192.168.1.9]\nauth_ldap authorise: User DN not found, ldap_search_ext_s() for user failed with\nserver down\n\n/*** util_ldap.c (1109-1121) ***/ \n\n/* If the connection is already bound, return\n    */\n    if (ldc->bound)\n    {\n        ldc->reason = \"LDAP: connection open successful (already bound)\";\n        return LDAP_SUCCESS;\n    }\n    /* try do the search */\n    if ((result = ldap_search_ext_s(ldc->ldap,\n\t\t\t\t    (char *)basedn, scope,\n                                    (char *)filter, attrs, 0, \n\t\t\t\t    NULL, NULL,\n                                    NULL, -1, &res)) == LDAP_SERVER_DOWN) {\n        ldc->reason = \"ldap_search_ext_s() for user failed with server down\";\n        goto start_over;\n    }\n\nIf ldc->bound, then return LDAP_SUCCESS, but the connection is not returned...??"}, {"count": 1, "tags": [], "creator": "jorton@redhat.com", "attachment_id": null, "is_private": false, "id": 80480, "time": "2005-09-26T16:10:46Z", "bug_id": 33647, "creation_time": "2005-09-26T16:10:46Z", "text": "Is this still reproducible with the 2.1.7-beta or current trunk code? It looks\nlike it should be handling ldap_search_ext_s returning LDAP_SERVER_DOWN\ncorrectly; though in the code you post it has been changed to omit the\nreconnection stage, which I wouldn't expect to work.\n"}, {"count": 2, "text": "4+ years since last update, lots of mod_ldap changes since 2.1.x. Recreate on modern release if this is still a problem.", "bug_id": 33647, "is_private": false, "id": 127336, "time": "2009-05-23T14:48:03Z", "creator": "covener@gmail.com", "creation_time": "2009-05-23T14:48:03Z", "tags": [], "attachment_id": null}]