[{"count": 0, "tags": [], "creator": "mredeker@web.de", "attachment_id": null, "id": 11568, "time": "2002-03-08T12:20:45Z", "bug_id": 6984, "creation_time": "2002-03-08T12:20:45Z", "is_private": false, "text": "I am holding a EJBHandle in a java bean which implements \nHttpSessionBindingListener. This java bean is in a \nWhen I logoff my application normally I invalidate the HTTPSession and \nthe 'valueUnbound' \nmethod is called. In that method I call getEJBObject on my handle and do some \nmethod call \non my EJB and then I call remove on my EJB. So far everything is fine.\n\nIf my HTTPSession is invalidated because of a timeout 'valueUnbound' is also \ncalled \nbut I get a ClassCastException when I want to cast my EJBObject to my real \nremote interface.\n\nFrom what I can see is that the check if a timeout is reached is running in a \nseparate Thread. \n\nIt seems that the separate Thread has a different ClassLoader which causes the \nException."}, {"count": 1, "tags": [], "bug_id": 6984, "attachment_id": null, "id": 11579, "creation_time": "2002-03-08T16:38:02Z", "time": "2002-03-08T16:38:02Z", "creator": "remm@apache.org", "text": "This bug is too complex to be reproducable, but the context classloader of the\nthread which does the session passivation is now properly set. I'm quite sure\nthis is what causes the bug. It is fixed in 4.0.3 and 4.0.4 b1.\n\n*** This bug has been marked as a duplicate of 5330 ***", "is_private": false}]