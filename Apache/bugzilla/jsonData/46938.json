[{"count": 0, "tags": [], "bug_id": 46938, "attachment_id": null, "id": 125879, "creation_time": "2009-03-30T07:11:52Z", "time": "2009-03-30T07:11:52Z", "creator": "Maksym_Symonov@epam.com", "text": "After opening existing workbook with some created styles in Excel and applying them to new cells, and then creating any new style by calling HSSFWorkbook.createCellStyle() all existing styles lose their foreground colors. Seems like they are painted with default palette colors.\nAfter code exploring of createCellStyle() it appears that one new ExtendedFormatRecord is created and added to HssWorkbook.workbook.records, where palette record is stored. So somehow existing palette is overrided or hided by default.", "is_private": false}, {"count": 1, "tags": [], "bug_id": 46938, "attachment_id": 23426, "text": "Created attachment 23426\ntest xls file for a test case\n\nInputStream in = null;\n\t\tOutputStream out = null;\n\t\ttry\n\t\t{\n\t\t\tin = new FileInputStream( new File(\"D://foo.xls\") );\n\t\t\tHSSFWorkbook workbook  = new HSSFWorkbook( in );\n\t\t\tHSSFSheet existingSheet = workbook.getSheet( \"existing\" );\n\t\t\tHSSFCellStyle style = existingSheet.getRow( 0 ).getCell( 0 ).getCellStyle();\n\t\t\t\n\t\t\tHSSFSheet sheet = workbook.createSheet( \"test\" );\n\t\t\tworkbook.createCellStyle();\n\t\t\tsheet.createRow( 0 ).createCell( 0 ).setCellStyle( style );\n\t\t\t\n\t\t\tworkbook.setActiveSheet( 1 );\n\t\t\tout = new BufferedOutputStream( new FileOutputStream( new File(\"D://new.xls\") ) ); \n\t\t\tworkbook.write( out );\n\t\t} catch( Exception e )\n\t\t{\n\t\t\te.printStackTrace();\n\t\t}\n\t finally\n\t\t{\n\t\t\tIOUtils.closeQuietly( in );\n\t\t\tIOUtils.closeQuietly( out );\n\t\t}", "id": 125880, "time": "2009-03-30T07:31:57Z", "creator": "Maksym_Symonov@epam.com", "creation_time": "2009-03-30T07:31:57Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 46938, "attachment_id": 23427, "id": 125881, "creation_time": "2009-03-30T08:48:18Z", "time": "2009-03-30T08:48:18Z", "creator": "yegor@dinom.ru", "text": "Created attachment 23427\na file generated by the posted code that doesn't exhibit the problem", "is_private": false}, {"count": 3, "tags": [], "bug_id": 46938, "attachment_id": null, "text": "I can't reproduce the problem. What version of POI and Excel are you using? \n\nI'm looking at new.xls created by your sample code and all styles are there. A1 cells both on the existing and new sheets have the same style with white foreground. I attached the generated file. Please confirm that the foreground is lost. \n\nTested with trunk and Excel 2003.\n\nRegards,\nYegor", "id": 125882, "time": "2009-03-30T08:48:56Z", "creator": "yegor@dinom.ru", "creation_time": "2009-03-30T08:48:56Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 46938, "attachment_id": null, "id": 125893, "time": "2009-03-31T00:23:43Z", "creator": "Maksym_Symonov@epam.com", "creation_time": "2009-03-31T00:23:43Z", "is_private": false, "text": "Yegor, problem is in row:\nworkbook.createCellStyle();\nas you see created style isn't set to any of cells. Please, try commenting this line in example code and look into results generated. Both cells A1 on on both sheets should have light blue foreground as in existing.xls file which is some kind of template for generating new.xls. If this row is commented all works fine, style is fully copied to A1 on \"test\" sheet, if it is not both cells loose their color and it becomes white.\nAfter some more code exploring it was found that palette from original existing.xls file after it is loaded by POI is stored at HSSFWorkbook.workbook.records in a record of class UnknownRecord which has toString() interpretation\n[XFEXT] (0x87D)\n  rawData=[7D, 08, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 3E, 00, 00, 00, 03, 00, 0D, 00, 14, 00, 03, 00, 00, 00, 01, 00, 00, 00, 04, 5F, 00, 2E, 00, 5F, 00, 2D, 0E, 00, 05, 00, 02, 04, 00, 14, 00, 02, 00, 00, 00, E7, EC, F4, FF, 23, 00, 30, 00, 2E, 00, 30, 00]\n[/XFEXT]\n\nneeded light blue color is in this record in a rawdata field E7, EC, F4"}, {"count": 5, "tags": [], "bug_id": 46938, "attachment_id": 23429, "id": 125901, "creation_time": "2009-03-31T05:58:18Z", "time": "2009-03-31T05:58:18Z", "creator": "yegor@dinom.ru", "text": "Created attachment 23429\nfoo.xls opened in Excel 2003\n\nExcel 2003 does not recognize custom palette saved in the compatibility mode in Excel 2007. The foreground in A1 should be light blue.", "is_private": false}, {"count": 6, "tags": [], "creator": "yegor@dinom.ru", "attachment_id": 23430, "id": 125902, "time": "2009-03-31T05:58:35Z", "bug_id": 46938, "creation_time": "2009-03-31T05:58:35Z", "is_private": false, "text": "Created attachment 23430\nfoo.xls opened in Excel 2007"}, {"count": 7, "tags": [], "creator": "yegor@dinom.ru", "attachment_id": null, "id": 125903, "time": "2009-03-31T06:12:52Z", "bug_id": 46938, "creation_time": "2009-03-31T06:12:52Z", "is_private": false, "text": "Maksym,\n\nThe problem seems to be specific to Excel 2007. Did you create the template in Office 2007 and saved in the compatibility mode? Were there any warnings? \n\nIf I open foo.xls in Excel 2007 then the foreground is light blue. If I open it in Excel 2003 the foreground is white. It's not a bug of POI, rather a \"feature\" of Excel. When saving custom colors in the .xls format, Excel 2007 does not translate them into the standard palette. That's why the foreground is not recognized by Excel 2003.\n\nThe [XFEXT] (0x87D) record is not a part of the BIFF8 specification. It's a new stuff introduced by Excel 2007. If you are fancy to decode it - patches are welcome.  Otherwise, I would recommend you to create your templates in Excel 2003. This way it should always work.\n\nRegards,\nYegor"}, {"count": 8, "tags": [], "bug_id": 46938, "attachment_id": null, "id": 130919, "time": "2009-10-06T15:12:55Z", "creator": "glackk@yahoo.com", "creation_time": "2009-10-06T15:12:55Z", "is_private": false, "text": "Not related to HSSF, but the color palette itself can be changed in Excel 2007 to work with earlier versions of Excel (and the current version of HSSF).\n\nThis way you don't need Excel 2003 to create your color templates.  \n\nThe process is explained in Microsoft support: \nhttp://support.microsoft.com/kb/288412"}, {"count": 9, "tags": [], "bug_id": 46938, "attachment_id": null, "id": 131524, "creation_time": "2009-11-01T02:51:05Z", "time": "2009-11-01T02:51:05Z", "creator": "Karl.Eilebrecht@freenet.de", "text": "Hi, \nI ran into the same problem and must agree with the previous speakers, this \"bug\" is an unsupported behaviour of Excel 2007, not an error of POI.\n\nHowever, the situation is extremely disappointing for me, since I'll have to support Excel 2007 for editing templates - and colors are very important for some customers.\n\nAfter a weekend of tracing the serialization of records and trial+error I tried the following hack:\n\nusing POI 3.5-FINAL\nWorkbook.class, line 812\npublic ExtendedFormatRecord createCellXF() {\n    int insertPos = records.getXfpos() + 1;\n    if (insertPos < records.size()) {\n    \twhile (records.get(insertPos) instanceof UnknownRecord) {\n    \t\tinsertPos++;\n    \t\tif (insertPos == records.size()) {\n    \t\t\tbreak;\n    \t\t}\n    \t}\n    }\n    records.add(insertPos, xf);\n    records.setXfpos( insertPos );\n    numxfs++;\n    return xf;\n}\n\nObviously this is rather a hack than a solution. It seems(!) to help.\nAnd if so, this workaround could be useful for many people using POI.\n\nI'd be pleased if some of the gurus could check if this \"happy reordering\" is in conflict with any known rule of the excel format and thus may be discouraged.\nEspecially testing with different excel versions (I only have 2007) would be important.\n\nThanks!\n\nRegards.\nKarl", "is_private": false}, {"count": 10, "tags": [], "bug_id": 46938, "attachment_id": null, "id": 131580, "time": "2009-11-02T09:49:40Z", "creator": "Karl.Eilebrecht@freenet.de", "creation_time": "2009-11-02T09:49:40Z", "is_private": false, "text": "Uh-oh! I overlooked a method.\n\n\n    public ExtendedFormatRecord getExFormatAt(int index) {\n        int xfptr = records.getXfpos() - (numxfs - 1);\n    ...\n    }\n\nWith my patch from the last post I created a \"hole\" in the table which breaks the index. I'll have to think about that, maybe I can fix that, too."}, {"count": 11, "tags": [], "bug_id": 46938, "attachment_id": 24537, "text": "Created attachment 24537\nKeep Excel2007-colors patch\n\nKeep color palette for following situation:\n- create Excel workbook (.xls) with Excel 2007\n- modify this workbook with POI\n- reopen the workbook with Excel 2007", "id": 131961, "time": "2009-11-14T07:54:12Z", "creator": "Karl.Eilebrecht@freenet.de", "creation_time": "2009-11-14T07:54:12Z", "is_private": false}, {"count": 12, "tags": [], "bug_id": 46938, "text": "Finally, my results regarding this issue are a little disappointing.\n\nThe main problem cannot be fixed because the color models of Excel 2007 is simply incompatible to that of earlier versions.\nThere are several discussions in the web, for example:\nhttp://en.allexperts.com/q/Excel-1059/Excel-2007-color-palette-1.htm\nhttp://www.eggheadcafe.com/software/aspnet/31785528/excel-2007-color-backward.aspx\nhttp://www.excelforum.com/excel-2007-help/703936-fill-color-compatibility-excel-2007-to-excel-2003-a.html\nEspecially the last link seems to be interesting for template creators to completely avoid the problem in advance.\n\nHowever for my situation the attached modified Workbook-class helped.\nWe use Excel 2007 but old Excel .xls-format (NOT .xlsx). This is far from being perfect, but I did not have the time yet to migrate to XSSF. \n\nThe attached patch is experimental but I think it works.\nThe idea is to save the positions of UnknownRecords containing the new color information, so that Excel 2007 will show the original colors when reopening a POI-modified workbook instead of replacing them with \"similar colors\". \nUnfortunately earlier versions of Excel (I tested with Excel 2000) will still show replacement colors, if a workbook contains \"new color-model colors\".\n\nRegards.\nKarl", "id": 131962, "time": "2009-11-14T07:54:38Z", "creator": "Karl.Eilebrecht@freenet.de", "creation_time": "2009-11-14T07:54:38Z", "is_private": false, "attachment_id": null}, {"count": 13, "tags": [], "creator": "Karl.Eilebrecht@freenet.de", "text": "Remark:\n\nToday I tested (successfully) with a more complex excel sheet and found out that the color-palette corruption problem may return if you modify cell styles that came with the original file. Strange ...\n\nTo avoid this do not modify original cell styles but copy them (only once(!), you do not have to duplicate them for single usage).\n\nProblematic:\nHSSFCellStyle myStyle = workbook.getCellStyleAt(idx);\nmyStyle.setFillPattern(HSSFCellStyle.BIG_SPOTS);\nmyStyle.setFillForegroundColor(HSSFColor.WHITE.index);\nmyStyle.setBorderLeft(HSSFCellStyle.BORDER_THIN);\n//...\n//use myStyle n-times\n\nBetter:\nHSSFCellStyle myStyle = workbook.createCellStyle();\nmyStyle.cloneStyleFrom(workbook.getCellStyleAt(idx));\n//...\n//use myStyle n-times\n\nRegards.\nKarl", "id": 132003, "time": "2009-11-16T05:36:32Z", "bug_id": 46938, "creation_time": "2009-11-16T05:36:32Z", "is_private": false, "attachment_id": null}]