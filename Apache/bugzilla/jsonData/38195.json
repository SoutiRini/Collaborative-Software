[{"count": 0, "tags": [], "bug_id": 38195, "attachment_id": null, "text": "I'm trying to build Apache with gcc but with the configuration I'm using Apache gets dynamically linked \nwith libgcc by default. This is a big problem since I'm building Apache on one machine and delivering it \nto systems that don't have gcc (and thus libgcc installed). For this reason I need to be able to build \nApache without the dynamic libgcc linkage.\n\nI tried configuring Apache with the '-static-libgcc' gcc flag but this doesn't seem to have any effect on \nthe resulting binary. I added the flag to both CFLAGS and LDFLAGS during configure.\n\nHere's the build procedure I'm using:\n\nexport PATH=/opt/local/gcc/4.0/bin:$PATH:/usr/ccs/bin:/opt/sfw/bin\nCC=gcc CFLAGS=\"-mcpu=v9 -m64 -static-libgcc\" LDFLAGS=\"-static-libgcc\" \\\n       ./configure --prefix=/home/aspa/tmp/h4 \\\n        --enable-ssl --with-ssl=/opt/openssl/kb3404 \\\n        --enable-proxy=shared --enable-proxy-http=shared \\\n        --enable-cache=shared --enable-disk-cache=shared \\\n        --enable-usertrack=shared --enable-rewrite\ngmake\ngmake install top_dir=/home/aspa/tmp/h4", "id": 84368, "time": "2006-01-09T13:32:44Z", "creator": "marko.asplund@kronodoc.com", "creation_time": "2006-01-09T13:32:44Z", "is_private": false}, {"count": 1, "attachment_id": null, "bug_id": 38195, "is_private": false, "id": 84369, "time": "2006-01-09T13:34:43Z", "creator": "marko.asplund@kronodoc.com", "creation_time": "2006-01-09T13:34:43Z", "tags": [], "text": "A workaround I found is to force static libgcc linkage in gcc configuration (specs file). This can be done by \napplying the  following patch to gcc 4.0.2 specs file:\n\n60c65\n< %{static|static-libgcc:-lgcc -lgcc_eh}%{!static:%{!static-libgcc:%{!shared:%{!shared-libgcc:-lgcc -lgcc_eh}%\n{shared-libgcc:-lgcc_s -lgcc}}%{shared:-lgcc_s}}}\n---\n> %{static|static-libgcc:-lgcc -lgcc_eh}%{!static:%{!static-libgcc:%{!shared:%{!shared-libgcc:-lgcc -lgcc_eh}%\n{shared-libgcc:-lgcc -lgcc_eh}}%{shared:-lgcc -lgcc_eh}}}\n"}, {"count": 2, "attachment_id": null, "bug_id": 38195, "text": "What can be changed in the httpd build system which would make a difference?\n\nIt looks like libtool is passing through -static-libgcc to the compiler OK, so I\ncan't see what is being done wrong.\n\nPlease attach the output of:\n\nrm httpd; make LTFLAGS=\n\nif you think the flag is not being passed to gcc correctly.", "id": 84429, "time": "2006-01-10T13:52:18Z", "creator": "jorton@redhat.com", "creation_time": "2006-01-10T13:52:18Z", "tags": [], "is_private": false}, {"count": 3, "attachment_id": 17390, "creator": "marko.asplund@kronodoc.com", "is_private": false, "id": 84486, "time": "2006-01-11T21:28:28Z", "bug_id": 38195, "creation_time": "2006-01-11T21:28:28Z", "tags": [], "text": "Created attachment 17390\ntypescript from a build\n\nhere's a typescript from a full build. after the build i executed the suggested\ncommands:\nrm httpd\ngmake LTFLAGS="}, {"count": 4, "attachment_id": null, "creator": "marko.asplund@kronodoc.com", "is_private": false, "id": 84487, "time": "2006-01-11T21:31:24Z", "bug_id": 38195, "creation_time": "2006-01-11T21:31:24Z", "tags": [], "text": "(In reply to comment #2)\n> What can be changed in the httpd build system which would make a difference?\n> \n> It looks like libtool is passing through -static-libgcc to the compiler OK, so I\n> can't see what is being done wrong.\n> \n> Please attach the output of:\n> \n> rm httpd; make LTFLAGS=\n> \n> if you think the flag is not being passed to gcc correctly.\n\ni ran a full build and after the build finished ran the commands you suggested.\nThe libgcc dependency still seems to exist by checking\n\nldd .libs/httpd\nldd /home/aspa/tmp/h4/bin/httpd # installation directory\n\n"}, {"count": 5, "attachment_id": null, "creator": "jorton@redhat.com", "is_private": false, "id": 84488, "time": "2006-01-11T21:41:02Z", "bug_id": 38195, "creation_time": "2006-01-11T21:41:02Z", "tags": [], "text": "As you can see, the flag is being passed through correctly by the httpd build\nsystem, so there's nothing going wrong from this end:\n\n...\ngcc -pthreads -mcpu=v9 -m64 -static-libgcc ...\n\nI'd suggest checking whether the libgcc dependency comes from any of the shared\nlibraries which were built (using ldd); if so I'd suggest also passing\n--disable-shared to configure."}, {"count": 6, "tags": [], "creator": "marko.asplund@kronodoc.com", "attachment_id": null, "text": "(In reply to comment #5)\n\nIn the build typescript the '-static-libgcc' was being passed to libtool, not directly to gcc in all cases \nexcept the final httpd binary link. Could it be possible that libtool doesn't pass this flag to gcc?\n\nThe only external dependencies in the build should be OS libraries and OpenSSL. 'ldd .libs/httpd' shows \nthat the binary has been dynamically linked with only OS libraries and libgcc in addition to Apache \nprovided libraries:\n\n        libaprutil-0.so.0 =>     /home/aspa/tmp/h4/lib/libaprutil-0.so.0\n        libexpat.so.0 =>         /home/aspa/tmp/h4/lib/libexpat.so.0\n        libapr-0.so.0 =>         /home/aspa/tmp/h4/lib/libapr-0.so.0\n        libsendfile.so.1 =>      /usr/lib/64/libsendfile.so.1\n        librt.so.1 =>    /usr/lib/64/librt.so.1\n        libm.so.1 =>     /usr/lib/64/libm.so.1\n        libsocket.so.1 =>        /usr/lib/64/libsocket.so.1\n        libnsl.so.1 =>   /usr/lib/64/libnsl.so.1\n        libresolv.so.2 =>        /usr/lib/64/libresolv.so.2\n        libpthread.so.1 =>       /usr/lib/64/libpthread.so.1\n        libdl.so.1 =>    /usr/lib/64/libdl.so.1\n        libc.so.1 =>     /usr/lib/64/libc.so.1\n        libgcc_s.so.1 =>         (file not found)\n        libgcc_s.so.1 =>         (file not found)\n        libgcc_s.so.1 =>         (file not found)\n        libaio.so.1 =>   /usr/lib/64/libaio.so.1\n        libmp.so.2 =>    /usr/lib/64/libmp.so.2\n        libthread.so.1 =>        /usr/lib/64/libthread.so.1\n        /usr/platform/SUNW,UltraAX-i2/lib/sparcv9/libc_psr.so.1\n\nThe OpenSSL installation tree used in the build only contained static versions of the libraries so \nOpenSSL is statically linked with Apache.\n\nChecking dynamic dependencies on shared objects shows that all the shared objects in the build tree \nhave been dynamically linked with libgcc.\n\nHere's a list of objects I checked:\n\n# gfind . -iregex '.*\\.so' \n./modules/proxy/.libs/mod_proxy.so\n./modules/proxy/.libs/mod_proxy_connect.so\n./modules/proxy/.libs/mod_proxy_ftp.so\n./modules/proxy/.libs/mod_proxy_http.so\n./modules/metadata/.libs/mod_usertrack.so\n./modules/experimental/.libs/mod_cache.so\n./modules/experimental/.libs/mod_disk_cache.so\n./srclib/apr-util/xml/expat/lib/.libs/libexpat.so\n./srclib/apr-util/.libs/libaprutil-0.so\n./srclib/apr/.libs/libapr-0.so\n\n", "id": 84511, "time": "2006-01-12T07:37:39Z", "bug_id": 38195, "creation_time": "2006-01-12T07:37:39Z", "is_private": false}, {"count": 7, "tags": [], "bug_id": 38195, "text": "> In the build typescript the '-static-libgcc' was being passed to libtool, not\ndirectly to gcc in all cases \n> except the final httpd binary link. Could it be possible that libtool doesn't\npass this flag to gcc?\n\nYes, that is quite possible.  I notice you are passing -m64 in CFLAGS; that is\nnot a good idea either.\n\nHere is what I would try if the LDFLAGS trick did not work:\n\nCC=\"gcc -mcpu=v9 -m64 -static-libgcc\" ./configure ...etcetc\n\nif that does not work either please report the issue to bug-libtool@gnu.org, the\nhttpd build system is driving libtool correctly AFAICT; LDFLAGS is also\npropagated through the buildsystem correctly, so I can't see any httpd bug that\ncan be fixed.", "id": 84533, "time": "2006-01-12T14:08:24Z", "creator": "jorton@redhat.com", "creation_time": "2006-01-12T14:08:24Z", "is_private": false, "attachment_id": null}, {"count": 8, "tags": [], "bug_id": 38195, "text": "(In reply to comment #7)\n\nUsing your suggestion of including the gcc configure flags in the CC variable\ninstead of CFLAGS fixes this issue, thanks very much!\n\nIn general, is it recommended to include compiler flags in CC and not CFLAGS?\n\nI would argue that from the user's point of view this is, in fact, an Apache bug\nsince libtool has been bundled as part of Apache. The user is not typically\naware of all the different third party components that have been bundled in a\nparticular piece of software that he's using.\n\nHowever, I can understand your point of view since I'm in software development\nmyself. It's a bug in a third party component, but it does affect Apache users\nas well. If this report is closed for Apache, then there won't be any way of\ntracking when the issue actually gets fixed and it won't appear in future\nrelease notes either.\n\nIf you still do not consider this as an Apache issue, I would appreciate some\nhelp in reporting it as a libtool bug.\n- Which version of libtool is used in Apache 2.0.55?\n- Is it an unmodified version of libtool?\n- Since I don't know much about libtool I'm a bit uncertain about how to\nproperly formulate the report. Would 'Libtool v.X does not properly pass the\n'-static-libgcc' flag in CFLAGS to gcc' be correct way to formulate the problem?", "id": 84564, "time": "2006-01-12T20:54:56Z", "creator": "marko.asplund@kronodoc.com", "creation_time": "2006-01-12T20:54:56Z", "is_private": false, "attachment_id": null}, {"count": 9, "tags": [], "bug_id": 38195, "attachment_id": null, "is_private": false, "id": 85872, "time": "2006-02-17T11:25:28Z", "creator": "jorton@redhat.com", "creation_time": "2006-02-17T11:25:28Z", "text": "Given the workaround I'm going to close this report; I've mailed the libtool\nlist asking about whether the behaviour is expected or not.\n\nIt is sometimes necessary to include compiler flags in CC but usually only ones\nwhich affect the ABI; -static-libgcc should not really count as such."}]