[{"count": 0, "tags": [], "text": "Hi All.\n(I can't write english so well, sorry.)\nI wrote a patch for NameRecord.java to support unicode in NamedRange.\n\nI tried to read and write Cell, that had been defined by Named Range(Unicode\nname defined), but did not go well.\n\nThis patch is like to BoundSheetRecord.java, readUnicodeLEString used to read,\nputUnicodeLE used to write.\n\nregards.\n\n\nIndex: src/java/org/apache/poi/hssf/record/NameRecord.java\n===================================================================\n--- src/java/org/apache/poi/hssf/record/NameRecord.java\t(revision 525136)\n+++ src/java/org/apache/poi/hssf/record/NameRecord.java\t(working copy)\n@@ -274,6 +274,7 @@\n      */\n     public void setNameText(String name){\n         field_12_name_text = name;\n+        setCompressedUnicodeFlag(StringUtil.hasMultibyte(name) ? (byte)1 :\n(byte)0);\n     }\n \n     //    public void setNameDefintion(String definition){\n@@ -328,6 +329,15 @@\n     public byte getNameTextLength(){\n         return field_3_length_name_text;\n     }\n+    \n+    /** gets the name length that depends on the unicode flag\n+     * @return raw name length\n+     */\n+    public byte getRawNameTextLength(){\n+        return (byte) ( ( ( field_11_compressed_unicode_flag & 0x01 ) == 1 )\n+                ? 2 * field_3_length_name_text\n+                : field_3_length_name_text );\n+    }\n \n     /** get the definition length\n      * @return definition length\n@@ -532,13 +542,15 @@\n             \n \t\t\tint start_of_name_definition = 19 + field_3_length_name_text;\n \n-\t\t\tif (this.isBuiltInName()) {\n-\t\t\t\t//can send the builtin name directly in\n-\t\t\t\tdata [19 + offset] =  this.getBuiltInName();\n-\t\t\t} else {\n-\t\t\t\tStringUtil.putCompressedUnicode( getNameText(), data, 19 + offset );\n-\t\t\t\t\n-\t\t\t}\n+            if (this.isBuiltInName()) {\n+                //can send the builtin name directly in\n+                data [19 + offset] =  this.getBuiltInName();\n+            } else if ((this.getCompressedUnicodeFlag() & 0x01) == 1) {\n+                StringUtil.putUnicodeLE( getNameText(), data, 19 + offset );\n+                start_of_name_definition = 19 + (2 * field_3_length_name_text);\n+            } else {\n+                StringUtil.putCompressedUnicode( getNameText(), data, 19 +\noffset );\n+            }\n \n \n \t\t\tPtg.serializePtgStack(field_13_name_definition,  data,\nstart_of_name_definition + offset );\n@@ -566,7 +578,7 @@\n     public int getTextsLength(){\n         int result;\n \n-        result = getNameTextLength() + getDescriptionTextLength() +\n+        result = getRawNameTextLength() + getDescriptionTextLength() +\n         getHelpTopicLength() + getStatusBarLength();\n \n \n@@ -724,19 +736,19 @@\n         field_8_length_description_text = in.readByte();\n         field_9_length_help_topic_text  = in.readByte();\n         field_10_length_status_bar_text = in.readByte();\n-            \n-\t\t\t//store the name in byte form if it's a builtin name\n-        field_11_compressed_unicode_flag= in.readByte();        \n-\t\t\tif (this.isBuiltInName()) {\n-                field_12_builtIn_name = in.readByte();\n-        } else {                \n-          if (field_11_compressed_unicode_flag == 1) {\n-            field_12_name_text =\nin.readCompressedUnicode(field_3_length_name_text);\n-          } else {\n-            field_12_name_text =\nin.readCompressedUnicode(field_3_length_name_text);\n-          }\n-\t\t\t}\n-            \n+        \n+        //store the name in byte form if it's a builtin name\n+        field_11_compressed_unicode_flag= in.readByte();\n+        if (this.isBuiltInName()) {\n+            field_12_builtIn_name = in.readByte();\n+        } else {\n+            if (field_11_compressed_unicode_flag == 1) {\n+                field_12_name_text =\nin.readUnicodeLEString(field_3_length_name_text);\n+            } else {\n+                field_12_name_text =\nin.readCompressedUnicode(field_3_length_name_text);\n+            }\n+        }\n+    \n         field_13_name_definition =\nPtg.createParsedExpressionTokens(field_4_length_name_definition, in);\n     \n         //Who says that this can only ever be compressed unicode???", "is_private": false, "id": 101367, "creation_time": "2007-04-03T05:27:47Z", "time": "2007-04-03T05:27:47Z", "creator": "i-toru@w2.dion.ne.jp", "bug_id": 42033, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 42033, "attachment_id": 19898, "id": 101368, "time": "2007-04-03T05:28:33Z", "creator": "i-toru@w2.dion.ne.jp", "creation_time": "2007-04-03T05:28:33Z", "is_private": false, "text": "Created attachment 19898\npatch"}, {"count": 2, "tags": [], "text": "Created attachment 19899\nTestCase", "is_private": false, "bug_id": 42033, "id": 101369, "time": "2007-04-03T05:29:43Z", "creator": "i-toru@w2.dion.ne.jp", "creation_time": "2007-04-03T05:29:43Z", "attachment_id": 19899}, {"count": 3, "tags": [], "bug_id": 42033, "attachment_id": 19900, "id": 101370, "time": "2007-04-03T05:33:13Z", "creator": "i-toru@w2.dion.ne.jp", "creation_time": "2007-04-03T05:33:13Z", "is_private": false, "text": "Created attachment 19900\nTestCase"}, {"count": 4, "tags": [], "text": "Thanks for this, applied", "attachment_id": null, "id": 112641, "creator": "apache@gagravarr.org", "time": "2008-01-08T09:49:27Z", "bug_id": 42033, "creation_time": "2008-01-08T09:49:27Z", "is_private": false}]