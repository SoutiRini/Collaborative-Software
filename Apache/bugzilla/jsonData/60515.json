[{"count": 0, "tags": [], "bug_id": 60515, "attachment_id": null, "text": "Web applications using ThreadLocals inside HttpSessionListener implementations may cause a class loader leak, since the listener calls are made in the ContainerBackgroundProcessor thread, which is usually not renewed over time.\n\nAs already suggested in https://bz.apache.org/bugzilla/show_bug.cgi?id=49159#c15, a separate thread should be spawned for those callbacks into the webapp.\n\nThe current leak prevention (for Tomcat 7, 8 and 9) only considers the application lifecycle callbacks, not the HttpSessionListener callbacks.", "id": 195635, "time": "2016-12-23T13:02:41Z", "creator": "scholzb-hb@outlook.de", "creation_time": "2016-12-23T13:02:41Z", "is_private": false}, {"count": 1, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "is_private": false, "id": 197580, "time": "2017-03-10T11:09:01Z", "bug_id": 60515, "creation_time": "2017-03-10T11:09:01Z", "text": "This is already possible. If backgroundProcessorDelay is set to a positive value for any Container (Engine, Host or Context), that container will be provided with a separate background processing thread for it and its children.\n\nBy default a single thread from the Engine is used but per Context threads would address this issue."}]