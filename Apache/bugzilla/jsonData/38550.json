[{"count": 0, "text": "mod_rewrite can set headers and cookies based on parts of the request. It would\nbe good if it could set headers and cookies based on part of the response as\nwell. In the situation where Apache is being used as a (reverse) proxy in front\nof another web application server, this allows for greater flexibility in\nsetting cookies - a very large gain, if the web application acts as a cookie jar.\n\nThe easiest way to implement this is to do make the following changes:\n - Add a new flag to rules, indicating that the rule should only be run AFTER \n   content has been returned\n - Add a \"before/after\" flag to apply_rewrite_list.\n - In apply_rewrite_list, only run rules with the AFTER flag is the\n   before/after flag is set. Do not run rules without the AFTER flag if the\n   before/after flag is not set.\n - Add an output filter hook, essentially to run mod_rewrite again, as an\n   output filter.\n - Add the new before/after flag to the calls to apply_rewrite_list. The\n   original calls to mod_rewrite should all call with the before/after flag set\n   to \"before\", and the call(s) in the output filter hooks should all call with\n   the flag set to \"after\".\n - Edit lookup_header to search for output headers in preference to request\n   headers. For correctness, a before/after flag should be inserted for this\n   function, to enable looking for output headers only after the response has\n   been generated.", "bug_id": 38550, "is_private": false, "id": 85523, "time": "2006-02-07T13:13:43Z", "creator": "apache@rikrose.net", "creation_time": "2006-02-07T13:13:43Z", "tags": [], "attachment_id": null}, {"count": 1, "text": "mod_rewrite can only set cookies directly, which is already just a side effect\nof the actual task of mod_rewrite - rewriting of incoming URLs. The only other\nheader which can be set, but only implicitly, is Vary.\n\nI don't think that your suggestion is a good idea. If you want to set headers,\nmod_headers is the better choice.\n\nMay I ask, what your actual task is?", "bug_id": 38550, "is_private": false, "id": 85525, "time": "2006-02-07T14:03:39Z", "creator": "nd@perlig.de", "creation_time": "2006-02-07T14:03:39Z", "tags": [], "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 38550, "is_private": false, "id": 85595, "creation_time": "2006-02-08T17:36:06Z", "time": "2006-02-08T17:36:06Z", "creator": "apache@rikrose.net", "text": "mod_headers is indeed the correct place to do so, but it's also a far more\ndifficult place to do so, because mod_headers can not read an existing value to\nassign it elsewhere - it can only assign values from the config file. In order\nto (want to) use mod_headers the code to read existing headers and cookies to\nuse as values, like mod_rewrite's %{HTTP_foo} etc would need to be added.\n\nThe easiest way to think about what I'm doing is that I'm setting a cookie for\nthe browser after an application that acts as a cookie jar - think sneaking a\ncookie past an anonymising proxy, by disguising it in a header, and rewriting it\nback.\n\nI agree, in principal, mod_rewrite is a completely stupid place to do this hack.\nOn the other hand, it's a very very easy place to do it, as all of the support\ncode is in place.", "attachment_id": null}]