[{"count": 0, "tags": [], "text": "I have an MPP file which appears to have a corrupt document summary information property set. Attempting to read it produces the stack trace below. The issue is that the size of the CodePageString is larger than the data remaining in the input stream.\n\nMicrosoft Project will open the file successfully, it appears to ignore the corrupt properties.\n\nUnfortunately I can't share the example data with you as it belongs to a customer.\n\nCaused by: java.lang.RuntimeException: Buffer overrun\n\tat org.apache.poi.util.LittleEndianByteArrayInputStream.checkPosition(LittleEndianByteArrayInputStream.java:40)\n\tat org.apache.poi.util.LittleEndianByteArrayInputStream.readFully(LittleEndianByteArrayInputStream.java:119)\n\tat org.apache.poi.hpsf.CodePageString.read(CodePageString.java:57)\n\tat org.apache.poi.hpsf.TypedPropertyValue.readValue(TypedPropertyValue.java:135)\n\tat org.apache.poi.hpsf.VariantSupport.read(VariantSupport.java:174)\n\tat org.apache.poi.hpsf.Property.<init>(Property.java:179)\n\tat org.apache.poi.hpsf.MutableProperty.<init>(MutableProperty.java:53)\n\tat org.apache.poi.hpsf.Section.<init>(Section.java:237)\n\tat org.apache.poi.hpsf.MutableSection.<init>(MutableSection.java:41)\n\tat org.apache.poi.hpsf.PropertySet.init(PropertySet.java:494)\n\tat org.apache.poi.hpsf.PropertySet.<init>(PropertySet.java:196)", "attachment_id": null, "bug_id": 61550, "id": 201011, "time": "2017-09-20T16:24:33Z", "creator": "jon.iles@bcs.org.uk", "creation_time": "2017-09-20T16:24:33Z", "is_private": false}, {"count": 1, "tags": [], "creator": "dominik.stadler@gmx.at", "attachment_id": null, "id": 202993, "time": "2018-01-01T14:54:38Z", "bug_id": 61550, "creation_time": "2018-01-01T14:54:38Z", "is_private": false, "text": "There have been some related changes via bug 61349, although I don't expect any to have changed this fundamentally. \n\nHowever, sadly, without a reproducing document we cannot do all that much here, so I added some more output to print out more if it happens again with a document that we can take a look at, see r1819772."}, {"count": 2, "tags": [], "bug_id": 61550, "text": "Thanks for looking Dominik. Here is the output when running the current 4.0.0 version from the GitHub mirror of POI against my problem file:\n\nCaused by: java.lang.RuntimeException: Buffer overrun, having 4492 bytes in the stream and position is at 4431, but trying to increment position by 92\n\tat org.apache.poi.util.LittleEndianByteArrayInputStream.checkPosition(LittleEndianByteArrayInputStream.java:40)\n\tat org.apache.poi.util.LittleEndianByteArrayInputStream.readFully(LittleEndianByteArrayInputStream.java:120)\n\tat org.apache.poi.hpsf.CodePageString.read(CodePageString.java:61)\n\tat org.apache.poi.hpsf.TypedPropertyValue.readValue(TypedPropertyValue.java:135)\n\tat org.apache.poi.hpsf.VariantSupport.read(VariantSupport.java:176)\n\tat org.apache.poi.hpsf.Property.<init>(Property.java:179)\n\tat org.apache.poi.hpsf.Section.<init>(Section.java:240)\n\tat org.apache.poi.hpsf.PropertySet.init(PropertySet.java:492)\n\tat org.apache.poi.hpsf.PropertySet.<init>(PropertySet.java:195)\n\tat net.sf.mpxj.mpp.ProjectPropertiesReader.process(ProjectPropertiesReader.java:118)\n\t... 74 more\n\nI'd be very happy to run instrumented code against this file to help you look at this in more detail.", "id": 203020, "attachment_id": null, "creator": "jon.iles@bcs.org.uk", "creation_time": "2018-01-02T19:12:50Z", "time": "2018-01-02T19:12:50Z", "is_private": false}, {"count": 3, "tags": [], "text": "I would like to try to handle this more gracefully, but without a document which triggers the problem, it is hard to build and keep in place in the long run, any chance of producing such a document that you can share?", "attachment_id": null, "bug_id": 61550, "id": 203120, "time": "2018-01-06T11:31:36Z", "creator": "dominik.stadler@gmx.at", "creation_time": "2018-01-06T11:31:36Z", "is_private": false}]