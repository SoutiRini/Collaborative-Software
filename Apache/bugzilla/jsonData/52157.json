[{"count": 0, "attachment_id": null, "bug_id": 52157, "text": "in 7.0.21 the commit:\n\t\"41718: Include a response body when sending a redirect. (markt)\"\n\n...catalina.connector.Response.sendRedirect() now calls getWriter() in order to write the body of the http response.  However the committed implementation will bypass any wrappers.  Note that Servlet 2.3 defines HttpServletResponseWrapper.getWriter()\nhttp://download.oracle.com/javaee/6/api/javax/servlet/ServletResponseWrapper.html#getWriter%28%29\nwhich would allow someone to return an alternate Writer than the default.\n\ncatalina.connector.Response\nline 1335 (sendRedirect()):\n            String absolute = toAbsolute(location);\n            setStatus(SC_FOUND);\n            setHeader(\"Location\", absolute);\n            PrintWriter writer = getWriter(); // <<<<<< circumvents wrapping by HttpServletResponseWrapper.getWriter()\n\t    // .. This directly commits a response to the client without allowing the Wrapper the opportunity to do something different.\n            writer.print(sm.getString(\"coyoteResponse.sendRedirect.note\",\n                    RequestUtil.filter(absolute)));\n            flushBuffer();\n\n\nSo if someone calls wrapper.sendRedirect(location) it invokes the Reponse.sendRedirect().  That Reponse.sendRedirect() gets a reference to a Writer relative to itself and not the Wrapper's.  In a case where the user application desires to intercept  a redirect and do something different, the response has already been committed and will cause an IllegalStateException.\n\nNot sure what would be the best way to fix this.\n\nPossible areas to consider\nhttp://svn.apache.org/repos/asf/tomcat/tc7.0.x/trunk/java/javax/servlet/ServletResponseWrapper.java \nor http://svn.apache.org/repos/asf/tomcat/tc7.0.x/trunk/java/javax/servlet/http/HttpServletResponseWrapper.java \nor http://svn.apache.org/repos/asf/tomcat/tc7.0.x/trunk/java/org/apache/catalina/connector/Response.java\n\nBottom line is Servlet 2.3 HttpServletResponseWrapper allows you to control what Writer to return, and the current Tomcat 7.0.21 implementation will get a reference to a default Writer which may be undesirable, commit a response to the undesired Writer, and expose a scenario for an IllegalStateException.\n\n7.0.20 and previous did not have this problem.", "id": 151300, "time": "2011-11-08T20:32:59Z", "creator": "bplies@bulliondirect.com", "creation_time": "2011-11-08T20:32:59Z", "tags": [], "is_private": false}, {"count": 1, "tags": [], "creator": "bplies@bulliondirect.com", "is_private": false, "id": 151301, "creation_time": "2011-11-08T20:58:17Z", "time": "2011-11-08T20:58:17Z", "bug_id": 52157, "text": "Attempted example\n\n// See: http://download.oracle.com/javaee/6/api/javax/servlet/http/HttpServletResponseWrapper.html\nclass MyWrapper extends HttpServletResponseWrapper \n{\n\tpublic MyWrapper(HttpServletResponse response) { super(response); }\n\t// This was working fine with Tomcat 7.0.20\n\tpublic void sendResponse() throws IOException\n\t{\n\t\tthis.pw.flush(); this.pw.close();\n\t\tServletOutputStream realStream = super.getOutputStream(); \n\t\tbyte[] byteArray = basos.baos.toByteArray();\n\t\trealStream.write(byteArray); realStream.flush();\n\t}\n\t// NOTE: Alternate Writer & OutputStream\n\tMyOutputStream basos = new MyOutputStream();\n\tPrintWriter pw = new PrintWriter(basos);\n\n\t// NOTE: Overriding default behavior of Wrapper, returning alternates\n\tpublic ServletOutputStream getOutputStream() throws IOException { return basos; }\n\tpublic PrintWriter getWriter() throws IOException { return pw; }\n\t}\n}\n\npublic class MyFilter implements Filter\n{\n\t@Override\n\tpublic void doFilter(final ServletRequest request, final ServletResponse response,\n\t\tfinal FilterChain chain) throws IOException, ServletException\n\t{\n\t\tfinal HttpServletRequest httpRequest = (HttpServletRequest) request;\n\t\tfinal MyWrapper wrappedResponse = \n\t\t\tnew MyWrapper((HttpServletResponse) response);\n\n\t\tchain.doFilter(httpRequest, wrappedResponse);\n\t\t// ... Something down the chain called wrappedResponse.sendRedirect()\n\t\t\n\t\tif (someCondition) \n\t\t{\n\t\t\t// Override redirect and handle response directly or something\n\t\t\tresponse.sendErrorPage(...); // NOTE: Original response object, discarding anything written to the wrapped buffer\n\t\t\t\n\t\t\t// !!! Blows up in Tomcat 7.0.21 because sendRedirect() circumvented the Wrapper's Writer\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Accept the wrapped Response as the output\n\t\t\t// Set response output to be same as wrappedResponse output\n\t\t}\n\t}\n}", "attachment_id": null}, {"count": 2, "attachment_id": null, "bug_id": 52157, "is_private": false, "id": 151305, "time": "2011-11-08T23:35:49Z", "creator": "markt@apache.org", "creation_time": "2011-11-08T23:35:49Z", "tags": [], "text": "There are a bunch of issues related to this for which no simple solution is available since application provided wrappers are unlikely to be available at the point where the redirect needs to take place.\n\nSee the duplicate for details of the fix.\n\n*** This bug has been marked as a duplicate of bug 51952 ***"}]