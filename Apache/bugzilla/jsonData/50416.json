[{"count": 0, "tags": [], "bug_id": 50416, "text": "In org.apache.poi.hssf.usermodel.HSSFSheet,\n\nin method public void shiftRows(int startRow, int endRow, int n,\n            boolean copyRowHeight, boolean resetOriginalRowHeight, boolean moveComments), \nthe line if ( endRow == _lastrow || endRow + n > _lastrow ) _lastrow = Math.min( endRow + n, SpreadsheetVersion.EXCEL97.getLastRowIndex() ); compute the _lastrow if the end == lastrow and n is NEGATIVE.\n\nRegards, F.K", "id": 142401, "time": "2010-12-06T05:37:36Z", "creator": "fr.koala@gmail.com", "creation_time": "2010-12-06T05:37:36Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 50416, "attachment_id": null, "id": 142625, "time": "2010-12-13T00:53:05Z", "creator": "apache@gagravarr.org", "creation_time": "2010-12-13T00:53:05Z", "is_private": false, "text": "I'm not sure I quite follow, sorry\n\nCould you write up a little unit test that shows the problem? Or describe what parameters to pass to shiftRows to make it compute it wrong?"}, {"count": 2, "tags": [], "bug_id": 50416, "attachment_id": 26399, "text": "Created attachment 26399\nTest case which describe the bug", "id": 142640, "time": "2010-12-13T07:59:41Z", "creator": "fr.koala@gmail.com", "creation_time": "2010-12-13T07:59:41Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 50416, "attachment_id": null, "text": "Sorry for the description, so please find the attached unitTest which describe the bug.\n\nRegards, F.K", "id": 142641, "time": "2010-12-13T08:00:54Z", "creator": "fr.koala@gmail.com", "creation_time": "2010-12-13T08:00:54Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 50416, "attachment_id": null, "id": 142671, "time": "2010-12-14T01:41:32Z", "creator": "apache@gagravarr.org", "creation_time": "2010-12-14T01:41:32Z", "is_private": false, "text": "I've found the problem. In the case of:\n\n* 1\n* blank\n* 3\n* 4\n\nThen when you move 4 to (blank=2) with a shift of 2, it wasn't checking if row 3 existed or not before re-computing the last\n\nIn the case of\n\n* 1\n* 2\n* 3\n\nthen moving row 1 to row 4 would also have left it confused\n\nI think I've fixed this in r1048951, along with a slightly expanded version of your unit test (thanks for that!)"}]