[{"count": 0, "tags": [], "bug_id": 24315, "text": "The following code will not pass that JustIce verifier. Code was compiled with Sun's standard \ncompiler (v 1.4.1).\n\nSOURCE CODE:\npublic class Test55 {\n\tpublic void foo(int arg0, int arg1) {\n\t\ttry {\n\t\t\ttry {\n\t\t\t\targ0 /= arg1;\n\t\t\t} finally {\n\t\t\t\targ0 = arg0;\n\t\t\t}\n\t\t} finally {\n\t\t\targ1 = arg1;\n\t\t}\n\t}\n}\n\nOUTPUT:\nVerifying: Test55\n\nVerification Errors:\n#0:\n    Constraint violated in method 'public void foo(int arg1, int arg2)':\n    Subroutine instruction '  16: astore[58](2) 4' is protected by an exception handler, \n'CodeExceptionGen(   0: iload_1[27](1),   22: jsr[168](3) -> astore 6,   28: astore[58](2) 5)'. This is \nforbidden by the JustIce verifier due to its clear definition of subroutines.\n\nVerification failed", "id": 46603, "time": "2003-11-01T02:19:34Z", "creator": "potentiallyspam@gmail.com", "creation_time": "2003-11-01T02:19:34Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 24315, "text": "\nThis is *NOT* a bug. It's an intended incompatibility with Sun's verifier\nthat will be present as long as Sun does not correctly specify what exactly\nthe verifier should do in this situation.\nRemember JustIce is a cleanroom implementation, so I will not look into\nSun's code to find out what *they* do. They should update their \"vmspec2\" book.\nPlease read my paper on JustIce for details - this incompatibility is sort\nof a \"core\" of the 'subroutine' definition I made up on my own since Sun did not.\nEnver\n", "id": 46638, "time": "2003-11-02T19:31:57Z", "creator": "ehaase@inf.fu-berlin.de", "creation_time": "2003-11-02T19:31:57Z", "is_private": false, "attachment_id": null}]