[{"count": 0, "tags": [], "text": "Created attachment 23022\ntest case app\n\nAs a follow up on the thread on the mailing list, here's my summary again:\n\nSince the JSP Spec says that TagHandlers implementing JspIdConsumer may not be reused, I was expecting them to be collected after the servlet finishes\nprocessing. A few experiments showed that that is not the case.\nAfter delving into the details of the servlet code generated for JSP\npages I discovered that the methods instantiating TagHandlers also\nstore them in TagHandlerPools using #reuse().\n\nI ran some more experiments to see what  \nhappens with these TagHandlers. My setup is  \nTomcat 6 + MyFaces + JSF CarDemo, and I'm using AspectJ to trace  \ncreation and garbage collection of objects implementing JspIdConsumer.  \nMy experiments indicate the following:\n\n1. JspIdConsumer instances do NOT get garbage collected after a page  \nhas finished processing.\n2. JspIdConsumer instances do NOT always get garbage collected after a  \nsession times out.\n3. SOME JspIdConsumer instances DO get garbage collected when a given  \nJSP-generated page is reloaded or accessed in a different session.\n\nTo obtain these results I ran Tomcat with very little heap memory (it  \nseems it starts fine with the 64M default), loaded the car demo in  \nseveral browser sessions and ran through all the other JSP/Servlet  \nexamples that come with Tomcat to increase the memory consumption and  \ntrigger GC. Unfortunately I don't have the time and tools to do a  \nproper stress test.\n\nTo provide some sort of simpler test case, I attach a WAR to use, but you still need to put the runtime library of AspectJ (aspectjrt.jar) on the classpath when running Tomcat.\nThe behavior I observe is that whenever I load/reload the page, the  \nJspIdConsumer objects get allocated, and some, but never all of\nthem get GC'd. You should see messages on the console/log like\n\nAdding JspIdConsumer:<someClassName>:<itsHashCode>:<theJspId>\n\nand\n\nRemoved <someJspId>\n\nYou will see three \"Adding messages\" for every instance created (it's  \na mess to track this properly),\nand you should see one \"Removed\" message for every GC'd instance.\nWhen I run grep | wc on the output, the \"distance\" between the number  \nof created and GC'd object grows over time and reloads of the test page.\nI had this running for a bit, trying to see if after a session timeout  \nthe remaining instances would be GC'd, but they didn't. I don't know  \nwhat to make of this, but it feels like Tomcat is holding on to some  \nof the instances for too long for no good reason.\n\nIn any case, considering the specification of JspIdConsumer, which  \nstates that instances may never be reused, the caching of these  \ninstances as it is done in current JSPs is unnecessary, and since  \nthese instances don't seem to be GC'd, this seems to be a memory leak.", "attachment_id": 23022, "bug_id": 46397, "id": 123307, "time": "2008-12-15T00:43:53Z", "creator": "jochen.wuttke@gmx.de", "creation_time": "2008-12-15T00:43:53Z", "is_private": false}, {"count": 1, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "is_private": false, "id": 123505, "time": "2008-12-23T08:34:04Z", "bug_id": 46397, "creation_time": "2008-12-23T08:34:04Z", "text": "The test case you have provided doesn't do anything. There is no web.xml and no static content. Is there an index.jsp or similar missing?\n\nI should be able to generate a simple test case of my own."}, {"count": 2, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "text": "There is some inefficient use of memory here but no leak. Some tags are incorrectly placed in the pool (I have a patch for that) but all instances are released when the web application is reloaded.\n\nThe patch has been applied to trunk and proposed for 6.0.x.", "id": 123506, "time": "2008-12-23T10:32:22Z", "bug_id": 46397, "creation_time": "2008-12-23T10:32:22Z", "is_private": false}, {"count": 3, "tags": [], "text": "Cool. Thanks for checking.", "attachment_id": null, "id": 123507, "creator": "jochen.wuttke@gmx.de", "time": "2008-12-23T10:50:26Z", "bug_id": 46397, "creation_time": "2008-12-23T10:50:26Z", "is_private": false}, {"count": 4, "tags": [], "text": "The patch has been applied to 6.0.x and will be in 6.0.19 onwards.", "attachment_id": null, "bug_id": 46397, "id": 123556, "time": "2008-12-27T13:05:00Z", "creator": "markt@apache.org", "creation_time": "2008-12-27T13:05:00Z", "is_private": false}]