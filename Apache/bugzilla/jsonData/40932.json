[{"count": 0, "tags": [], "bug_id": 40932, "attachment_id": null, "is_private": false, "id": 95599, "time": "2006-11-08T19:41:52Z", "creator": "jeffr@livedata.com", "creation_time": "2006-11-08T19:41:52Z", "text": "In the Restart case the parent process (properly) does not wait for the child \nto exit because a new child will field web requests so there's no reason to \npend waiting on the old child.\n\nBut....\n\nThe parent doesn't free the \"child_exit_event\" which was duplicated for the \nchild so a reference is held by the parent and must be free'd or the handle \nleaks.  I added the free in mpm_winnt.c line 937 like so:\n\n    else if (cld == RESTART_HANDLE) {\n        /* Received a restart event. Prepare the restart_event to be reused\n         * then signal the child process to exit.\n         */\n\t\trestart_pending = 1;\n        ap_log_error(APLOG_MARK, APLOG_NOTICE, 0, s,\n                     \"Parent: Received restart signal -- Restarting the \nserver.\");\n        if (ResetEvent(restart_event) == 0) {\n            ap_log_error(APLOG_MARK, APLOG_ERR, apr_get_os_error(), s,\n                         \"Parent: ResetEvent(restart_event) failed.\");\n        }\n        if (SetEvent(child_exit_event) == 0) {\n            ap_log_error(APLOG_MARK, APLOG_ERR, apr_get_os_error(), s,\n                         \"Parent: SetEvent for child process %d failed.\",\n                         event_handles[CHILD_HANDLE]);\n        }\n        /* Don't wait to verify that the child process really exits,\n         * just move on with the restart.\n         */\n\n        // JSR\n        CloseHandle(child_exit_event);\n\n        CloseHandle(event_handles[CHILD_HANDLE]);\n        event_handles[CHILD_HANDLE] = NULL;"}, {"count": 1, "tags": [], "bug_id": 40932, "text": "You are correct.\n\nAlthough we have to close it before the return because we are\nabout to signal it in the shutdown case further down.  So the\nmost sensible patch is to close it immediate before the two\nreturn cases.  Although that's just my minor tweak - fantastic\ncatch and assigning you full credit for the repair, thanks!\n", "id": 112314, "time": "2007-12-30T21:39:46Z", "creator": "wrowe@apache.org", "creation_time": "2007-12-30T21:39:46Z", "is_private": false, "attachment_id": null}]