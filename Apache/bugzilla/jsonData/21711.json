[{"count": 0, "attachment_id": null, "bug_id": 21711, "is_private": false, "id": 40938, "time": "2003-07-18T14:37:09Z", "creator": "egiraudy@instranet.com", "creation_time": "2003-07-18T14:37:09Z", "tags": [], "text": "When compiling a jsp that uses a 1.1 TLD, with tag that have an attribute called \n\"id\", it generates the following error:\n\njava.lang.ClassCastException\n        at javax.servlet.jsp.tagext.TagData.getAttributeString(TagData.java:176)\n        at javax.servlet.jsp.tagext.TagData.getId(TagData.java:129)\n        at javax.servlet.jsp.tagext.TagInfo.getVariableInfo(TagInfo.java:282)\n        at org.apache.jasper.compiler.Node$CustomTag.setTagData(Node.java:1475)\n        at org.apache.jasper.compiler.Validator$ValidateVisitor.visit(Validator.\njava:788)\n        at org.apache.jasper.compiler.Node$CustomTag.accept(Node.java:1444)\n        at org.apache.jasper.compiler.Node$Nodes.visit(Node.java:2142)\n        at org.apache.jasper.compiler.Node$Visitor.visitBody(Node.java:2184)\n        at org.apache.jasper.compiler.Node$Visitor.visit(Node.java:2190)\n        at org.apache.jasper.compiler.Node$Root.accept(Node.java:471)\n        at org.apache.jasper.compiler.Node$Nodes.visit(Node.java:2142)\n        at org.apache.jasper.compiler.Validator.validate(Validator.java:1499)\n        at org.apache.jasper.compiler.Compiler.generateJava(Compiler.java:264)\n        at org.apache.jasper.compiler.Compiler.compile(Compiler.java:458)\n        at org.apache.jasper.compiler.Compiler.compile(Compiler.java:444)\n        at org.apache.jasper.JspCompilationContext.\ncompile(JspCompilationContext.java:603)\n        at org.apache.jasper.servlet.JspServletWrapper.\nservice(JspServletWrapper.java:300)\n        at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:\n293)\n        at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:240)\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:856)\n        at org.apache.catalina.core.ApplicationFilterChain.\ninternalDoFilter(ApplicationFilterChain.java:286)\n        at org.apache.catalina.core.ApplicationFilterChain.\ndoFilter(ApplicationFilterChain.java:206)\n        at org.apache.catalina.core.StandardWrapperValve.\ninvoke(StandardWrapperValve.java:256)\n        at org.apache.catalina.core.StandardValveContext.\ninvokeNext(StandardValveContext.java:151)\n        at org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.\njava:562)\n        at org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:974)\n        at org.apache.catalina.core.StandardContextValve.\ninvoke(StandardContextValve.java:205)\n        at org.apache.catalina.core.StandardValveContext.\ninvokeNext(StandardValveContext.java:151)\n        at org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.\njava:562)\n        at org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:974)\n        at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.\njava:177)\n        at org.apache.catalina.core.StandardValveContext.\ninvokeNext(StandardValveContext.java:151)\n        at org.apache.catalina.valves.ErrorDispatcherValve.\ninvoke(ErrorDispatcherValve.java:171)\n        at org.apache.catalina.core.StandardValveContext.\ninvokeNext(StandardValveContext.java:149)\n        at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.\njava:172)\n        at org.apache.catalina.core.StandardValveContext.\ninvokeNext(StandardValveContext.java:149)\n        at org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.\njava:562)\n        at org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:974)\n        at org.apache.catalina.core.StandardEngineValve.\ninvoke(StandardEngineValve.java:156)\n        at org.apache.catalina.core.StandardValveContext.\ninvokeNext(StandardValveContext.java:151)\n        at org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.\njava:562)\n        at org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:974)\n        at org.apache.coyote.tomcat5.CoyoteAdapter.service(CoyoteAdapter.java:\n203)\n        at org.apache.coyote.http11.Http11Processor.process(Http11Processor.\njava:637)\n        at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.\nprocessConnection(Http11Protocol.java:488)\n        at org.apache.tomcat.util.net.TcpWorkerThread.runIt(PoolTcpEndpoint.\njava:568)\n        at org.apache.tomcat.util.threads.ThreadPool$ControlRunnable.\nrun(ThreadPool.java:631)\n        at java.lang.Thread.run(Thread.java:534)\n\n\nin the tld the tag is declared as:\n<?xml version=\"1.0\" encoding=\"ISO-8859-1\" ?>\n<!DOCTYPE taglib PUBLIC\n  \"-//Sun Microsystems, Inc.//DTD JSP Tag Library 1.1//EN\"\n  \"http://java.sun.com/j2ee/dtds/web-jsptaglibrary_1_1.dtd\">\n<taglib>\n   <tlibversion>1.0</tlibversion>\n   <jspversion>1.1</jspversion>\n   <shortname></shortname>\n   <tag>\n      <name>myTag</name>\n      <tagclass>com.foo.myTag</tagclass>\n      <bodycontent>empty</bodycontent>\n      <info>\n      </info>\n      <attribute>\n         <name>bean</name>\n         <required>false</required>\n         <rtexprvalue>true</rtexprvalue>\n      </attribute>\n      <attribute>\n         <name>id</name>\n         <required>false</required>\n         <rtexprvalue>true</rtexprvalue>\n      </attribute>\n   <tag>\n</taglib>\n\nit is then used like this:\n\n<%@ page language=\"java\" contentType=\"text/html; charset=ISO-8859-15\" %>\n<%@ taglib uri=\"mytld.tld\" prefix=\"myTld\"\t%>\n...\n<jsp:useBean id=\"myBean\" class=\"com.foo.myBean\"/>\n<myTld:myTag beanName=\"myBean\" id=\"<%=String.valueOf(nSomeId)%>\"/>\n...\n\n\nthis is working fine with tc 4.0.6 and 4.1.26\nI'm running on Win2000 with jdk 1.4.2."}, {"count": 1, "tags": [], "bug_id": 21711, "text": "I believe Tomcat's behavior here is consistent with the JSP 1.1 \nspecification.  Your example works if the attribute is renamed to something \nother than \"id\", or if the attribute value is not specified as a request-time \nattribute value.  The error only occurs when specifying a request-time \nattribute value for a parameter named \"id\".\n\nThe spec mandates special treatment of attributes named \"id\", as detailed in \nsection 2.12.2:\n\n'The id=\"name\" attribute/value tuple in an element has special meaning to a \nJSP container, both at page translation time, and at client request processing \ntime; in particular: \n\u00b7 the name must be unique within the translation unit, and identifies the \nparticular element in which it appears to the JSP container and page.'\n\n\"name must be unique within the translation unit\" to me implies \"name\" cannot \nbe a request-time attribute value, as if it were, there would be no way to \nverify uniqueness at translation time.  The spec seems to make this explicit \nin a parenthetical in section 5.1.3.2: \"note that id must be a translation-\ntime attribute\".\n\nThe code seems to be consistent with this interpretation.  The actual \nexception is thrown by code that I don't have access to, but it's clear from \nthe Javadocs that the problem is that TagData.getID expects the value of \nthe \"id\" attribute to be a String (as it would be if it were a translation-\ntime attribute), whereas Tomcat has set it to TagData.REQUEST_TIME_VALUE, as \nis proper for a request-time attribute value.", "id": 40989, "time": "2003-07-19T20:54:41Z", "creator": "ecarmich@alumni.rice.edu", "creation_time": "2003-07-19T20:54:41Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 21711, "attachment_id": null, "text": "Good news!  The JSP 2.0 spec doesn't call for any special treatment of \nattributes named \"id\", and javax.servlet.jsp.tagext has been updated to \nreflect this, so your JSP will run under the next release of Tomcat 5 (which \nas far as I can tell treats all JSPs as 2.0, making much of what I said above \nmoot).\n\nI'm still inclined to consider your bug report invalid (what's the point of \nmaking people specify the JSP version of a TLD if you're going to ignore it?), \nbut that's the Tomcat team for you: so thorough that they even fix the invalid \nbugs. :-)\n\nAlso, I said above that I didn't have access to the code that was throwing the \nexception.  I've since found it; it's in the apache.org CVS under the module \nname \"jakarta-servletapi-5\".", "id": 43421, "time": "2003-08-28T03:38:14Z", "creator": "ecarmich@alumni.rice.edu", "creation_time": "2003-08-28T03:38:14Z", "is_private": false}, {"count": 3, "tags": [], "text": "yes that's a good news... thanks a lot.\n\ni agree that my bug report was invalid... the point is that before riunning my \napp on tc5, i didn't knew that my tld was not spec compliant: no app server \never complain about that (tc 3.x/4.x, websphere 3.5 -> 5, weblogic 5.1 --> 8, \norion, etc.).\n\nso that's a good news for our customer that may want to benefit from tc5 \nimprovments over tc4!\n\nhowever, we've alreday modified our tld for our next version ;)\n\nthanks again.\n ", "is_private": false, "bug_id": 21711, "id": 43585, "time": "2003-09-02T09:00:27Z", "creator": "egiraudy@instranet.com", "creation_time": "2003-09-02T09:00:27Z", "attachment_id": null}]