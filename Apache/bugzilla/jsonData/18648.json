[{"count": 0, "tags": [], "text": "Version 1.5.2 was broken regarding <zip> files. Version 1.5.3Beta1 fixed only \npart of the problem.\n\nWhen creating <zip> files, the files are created with invalid size. WinZip does \nnot show it, but the WinZip command line does. The WinZip command line can be \ndownloaded at: http://www.winzip.com/wzcline.htm. Just download ans see.\n\nMore information is below.\n\nthanks,\n  Doron.\n\n\nThe version:\n  D:\\Development\\song\\dev\\song>ant -version\n  Apache Ant version 1.5.3Beta1 compiled on March 24 2003\n\nThe <zip> command:\n  <zip destfile=\"JavaGA_Source_${song.timeStamp}.zip\" basedir=\"${tempdir}\" \nincludes=\"**\"/>\n\n\nWhen unzipping:\n\n\nD:\\kk>wzunzip -D JavaGA_Source_20030402183401.zip\nWinZip(R) Command Line Support Add-On Version 1.0 (Build 3181)\nCopyright (c) WinZip Computing, Inc. 1991-2000 - All Rights Reserved\n\nZip file: JavaGA_Source_20030402183401.zip\n\n...\nunzipping doc/Java GA Library Block Diagram 2003-03-24.doc\nWarning: the size of the extracted file (25600) does not match the uncompressed \nsize (0) recorded in the zip file\nunzipping doc/Java GA Library implementation 2003-03-24.doc\nWarning: the size of the extracted file (51200) does not match the uncompressed \nsize (0) recorded in the zip file\nunzipping src/cmp.bat\nWarning: the size of the extracted file (50) does not match the uncompressed \nsize (0) recorded in the zip file\nunzipping src/com/schema/ga/Analyzer.java\nWarning: the size of the extracted file (1366) does not match the uncompressed \nsize (0) recorded in the zip file\nunzipping src/com/schema/ga/analyzers/AnalyzerBase.java\nWarning: the size of the extracted file (913) does not match the uncompressed \nsize (0) recorded in the zip file\nunzipping src/com/schema/ga/analyzers/Standard.java\nWarning: the size of the extracted file (2307) does not match the uncompressed \nsize (0) recorded in the zip file\nunzipping src/com/schema/ga/Crossover.java\n...", "attachment_id": null, "bug_id": 18648, "id": 34410, "time": "2003-04-03T09:45:51Z", "creator": "doron.rajwan@schema.com", "creation_time": "2003-04-03T09:45:51Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 18648, "attachment_id": null, "text": "ZIP files created by Ant follow the spec defined in appnote-iz-latest that can\nbe found at the URL above.  In this, you'll find (under the description of\nthe general purpose bit in local file header):\n\n          Bit 3: If this bit is set, the fields crc-32, compressed size\n                 and uncompressed size are set to zero in the local\n                 header.  The correct values are put in the data descriptor\n                 immediately following the compressed data.  (Note: PKZIP\n                 version 2.04g for DOS only recognizes this bit for method 8\n                 compression, newer versions of PKZIP recognize this bit\n                 for any compression method.)\n                [Info-ZIP note: This bit was introduced by PKZIP 2.04 for\n                 DOS. In general, this feature can only be reliably used\n                 together with compression methods that allow intrinsic\n                 detection of the \"end-of-compressed-data\" condition. From\n                 the set of compression methods described in this Zip archive\n                 specification, only \"deflate\" meets this requirement.\n                 Especially, the method STORED does not work!\n                 The Info-ZIP tools recognize this bit regardless of the\n                 compression method; but, they rely on correctly set\n                 \"compressed size\" information in the central directory entry.]\n\nAnt does set bit 3 and sets both size values to 0 for compressed entries.\nAnt does correctly set the size in both the data descriptor and the central\nfile header (at least for me).\n\nIt seems as if the tool you use is not able to properly recognize and/or\ninterpret this bit 3 - which it should better do as Ant also sets the version\nrequired to extract the file to 2, which in turn requires the above to work.\n", "id": 34413, "time": "2003-04-03T10:01:34Z", "creator": "bodewig@apache.org", "creation_time": "2003-04-03T10:01:34Z", "is_private": false}, {"count": 2, "attachment_id": null, "creator": "levylambert@tiscali-dsl.de", "text": "I can confirm the report of Doron Rajwan.\n\n\nI also have narrowed the problem a bit.\n\n\nThe error message does not show up when one uses the compress=\"false\" attribute \nwhen building the zip file.\n\n\nWhen compress=\"true\" (the default) the following lines of code are not called in \nZip.java#zipFile(InputStream in, ZipOutputStream zOut, String vPath,\n\n\n                           long lastModified, File fromArchive, int mode) \n\n\n                ze.setSize(size);\n\n\n                ze.setCrc(cal.getValue());\n\n\n", "id": 34420, "time": "2003-04-03T11:34:27Z", "bug_id": 18648, "creation_time": "2003-04-03T11:34:27Z", "tags": [], "is_private": false}, {"count": 3, "tags": [], "creator": "bodewig@apache.org", "attachment_id": null, "id": 34423, "time": "2003-04-03T11:43:03Z", "bug_id": 18648, "creation_time": "2003-04-03T11:43:03Z", "is_private": false, "text": "But they get called in ZipOutputStream#closeEntry.\n\nLike I said, it is leagl to set size and compressed size to zero in the LFH for\ncompressed files and we simply do so."}]