[{"count": 0, "text": "Here is a simple patch to add support for absolute and relative font size\nspecifications. I think the part of the patch for the <absolute> specifications\nis OK as is, that is the font sizes are fixed based on a default (=medium) of\n12pt and a stepping factor of 1.2 as recommended in the spec. While the spec\nallows for the stepping to be font specific at this point in time having a \"one\nsize fits all\" approach should do.\n\nI am not so sure about the <relative> part of the patch. The patch simply\ntranslates the \"smaller\" or \"larger\" keywords into a percentage. The spec really\nasks for mapping into one of the absolute sizes using rounding and if outside\nthe <absolute> sizes using extrapolation. My understanding of the property\nsubsystem is not (yet?) good enough to attempt something like that without\nguidance / hints from the experienced fop-devs.\n\nThe patch also contains updated testcases (with checks :-)).", "bug_id": 36036, "attachment_id": null, "id": 78134, "time": "2005-08-05T05:29:41Z", "creator": "mm@arcus.com.au", "creation_time": "2005-08-05T05:29:41Z", "tags": [], "is_private": false}, {"count": 1, "tags": [], "bug_id": 36036, "attachment_id": 15895, "text": "Created attachment 15895\nThe patch", "id": 78135, "time": "2005-08-05T05:30:12Z", "creator": "mm@arcus.com.au", "creation_time": "2005-08-05T05:30:12Z", "is_private": false}, {"text": "Thanks for doing this. Your patch looks good and appears to work.\n\nHowever, theres one little thing thats puzzling me. Finn, who is our \nproperties guru wrote the class CommonFont. If you look at the method \ngetFontState there is some code that implements the relative keywords for font \nweight and comments that say should do font size relative keywords too. Why \nwould he write this if all he needed to do was added some keywords to the \nProperty Maker ???", "tags": [], "bug_id": 36036, "attachment_id": null, "count": 2, "id": 78140, "time": "2005-08-05T12:13:21Z", "creator": "bowditch_chris@hotmail.com", "creation_time": "2005-08-05T12:13:21Z", "is_private": false}, {"text": "Actually looking at Commonfont.getFontState() the relative font weights are not\n(!) implemented (something else to do). One reason Finn couldn't use the same \nscheme I used for font-sizes is that font-weight does not allow percentage \nvalues. Another reason is, as I pointed out, that my implementation is not \nstrictly spec compliant. Both, relative font-weights and relative font-sizes \nmust be implement with reference to the parent value. Now if I could figure out \nhow this property inheritance / resolution stuff is implemented in Fop, i.e. \nhow / where / when I can get to the value of the property in the parent \nelement, I could fix both of these relative properties (and may be some of the \nother percentage stuff not working).", "tags": [], "bug_id": 36036, "attachment_id": null, "count": 3, "id": 78141, "time": "2005-08-05T12:52:01Z", "creator": "mm@arcus.com.au", "creation_time": "2005-08-05T12:52:01Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 36036, "attachment_id": null, "text": "Yes you are right that getFontState() method isn't doing a great deal and as \nyou say this is because the percentage should apply to the parent.\n\nI have applied your patch but decided to leave the bodge for relative sizes \nout for now. There's already a task item to properly implement percentages \nwithin FOP's property/FO sub systems. So I think this is best addressed after \nthat work is completed.\n\nThanks for your contribution", "id": 78142, "time": "2005-08-05T13:32:53Z", "creator": "bowditch_chris@hotmail.com", "creation_time": "2005-08-05T13:32:53Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 36036, "attachment_id": null, "text": "batch transition pre-FOP1.0 resolved+fixed bugs to closed+fixed", "id": 155523, "time": "2012-04-01T06:26:05Z", "creator": "gadams@apache.org", "creation_time": "2012-04-01T06:26:05Z", "is_private": false}]