[{"count": 0, "tags": [], "creator": "remm@apache.org", "text": "In some cases, the resource manager has a state which is not compatible with \nthe transaction's state, where the resource manager has no knowledge of the \ntransaction, while the transaction considers it had already been enlisted \npreviously in it for some work.\n\nFrom Michael Smith's email:\n\nOne server is running tomcat-4.0 (final), plus slide, plus our webapps. \nAnother server (elsewhere in the same room) is running oracle.\n\nSo, the webserver box has slide set up to use:\n   a) FileContentStore (local)\n   b) JDBCDescriptorsStore (talking to oracle on another machine)\nAlso, we use slide's SlideRealm in tomcat-4.0 for authentication.\n\nOur webapps (all running in the same VM as slide, only one copy of slide\nis ever running at a time) do slide stuff directly, because they often\ndo quite a bit of work and the overhead of using webdav for stuff inside\nthe same VM is too high. \n\nOne of the classes is used to set a property on a slide object. A couple\nof weeks ago, I fixed this to use slide's transactions (doing\ntoken.begin(), token.commit(), and sometimes token.rollback(), just like\nthe webdav servlet does. \n\nAt some point since (or possibly all the time since), we've been getting\nexceptions thrown occasionally (and dumped to std(out|err)). They all\nlook more or less like this, and have no additional information around\nthem in the logs. \n\nEnlist error(Transaction 86 in HttpProcessor[7070][6]) = -4\nslidestore.reference.JDBCDescriptorsStore@73a34b Branch:\nHttpProcessor[7070][6]-1002069841359-86-20 Flag: 2097152\njavax.transaction.xa.XAException\n    at\norg.apache.slide.common.AbstractSimpleService.start\n(AbstractSimpleService.java:415)\n    at\nslidestore.reference.JDBCDescriptorsStore.start(JDBCDescriptorsStore.java:515)\n    at\norg.apache.slide.transaction.SlideTransaction.enlistResource\n(SlideTransaction.java:464)\n    at\norg.apache.slide.store.AbstractStore.enlist(AbstractStore.java:1373)\n    at\norg.apache.slide.store.AbstractStore.storeRevisionDescriptor\n(AbstractStore.java:1094)\n    at\norg.apache.slide.store.StandardStore.storeRevisionDescriptor\n(StandardStore.java:606)\n    at org.apache.slide.content.ContentImpl.store(ContentImpl.java:943)\n\n(followed by the rest of a very long stack trace showing tomcat starting\none of our servlets, and this servlet eventually calling content.store()\nhere.)\n\n\nThen, in the last few days, this machine has been apparently hanging\n(well, the webserver). Further investigation shows that authentication\nis being attempted, but it never returns from the SlideRealm\ngetPassword() function. This seems to generally happen just after a\nwhole lot of these transaction errors have occurred, and so I think\nthey're related (in some way). If I throw our load-tester at it, this\ngenerally starts happening within a couple of minutes of starting. \n\nIf I remove the transaction stuff from our webapp, things seem to work\nok (but I haven't tested this really thoroughly yet). Lots of warnings\nget printed because I'm doing stuff when NOT in a transaction, of\ncourse. However, this obviously isn't a good solution as it means that\nwhen things go wrong, slide will have a tendency to end up in an\ninconsistent state and break horribly. So that's not a long-term\nsolution. \n\nDoes anyone know what might be causing this? I've looked through the\nfirst couple of layers of code, but got lost in the transaction handling\nstuff in slide, which I don't really have any idea about. I know some of\nyou guys know it backwards, so any ideas would be very much appreciated.", "id": 6297, "time": "2001-10-03T01:47:10Z", "bug_id": 3935, "creation_time": "2001-10-03T01:47:10Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "creator": "remm@apache.org", "is_private": false, "id": 7636, "creation_time": "2001-11-06T23:16:59Z", "time": "2001-11-06T23:16:59Z", "bug_id": 3935, "text": "The bug has been confirmed to be fixed. A test case is available (the\n\"multithread\" example).", "attachment_id": null}]