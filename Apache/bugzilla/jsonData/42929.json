[{"count": 0, "tags": [], "bug_id": 42929, "attachment_id": null, "is_private": false, "id": 105744, "time": "2007-07-18T05:50:45Z", "creator": "software@macfreek.nl", "creation_time": "2007-07-18T05:50:45Z", "text": "Summary:\nWith a certain configuration of Virtual hosts with SSL Engine enabled, Apache\nbeliefs the client is connecting to server port 80 with protocol HTTP, while in\nreality the client is connected to server port 443 with protocol HTTPS\n\nSteps to reproduce:\n1. Install apache with mod_ssl and mod_info.\n2. Create a SSL certificate. If you do it properly, create one with two\nhostnames (using the altSubjectName x509 parameter); however, if you don't mind\nclicking \"yeah, I trust it, even though the hostname does not match\" a couple of\ntimes, you can just use any self-signed certificate.\n2. Configure httpd.conf as displayed in the attachment, httpd.error.conf:\n   two name-based virtual hosts, listening on port 443. The first with SSL\nparameters, the second without SSL parameters.\n3. For debugging, add SetHandler server-info.\n4. Visit the URL with the servername in the second virtual hosts. E.g.\nhttp://www2.example.org/server-info if you use the names in httpd.error.conf\n5. Read what is says underneath \"Server Settings\" > \"Hostname/port\"\n\nExpected result:\nI expected it to read \"www2.example.org:443\"\nOr I expected a critical error during start time of Apache because the\nconfiguration file is arguably inconsistent (see below)\n\nActual result:\nIt reads \"www2.example.org:80\"\n\nNotes:\n* With this configuration, Apache is not even listening to port 80!\n* If you would include mod_php, and add a script saying phpinfo();, you will see\nthat the HTTPS parameter is not set. I expected it to be \"on\"\n* This \"identity crisis\" (wrong port, wrong protocol) results that a COPY\nrequest for webdav results in a 502 Bad Gateway error.\n* Note that virtual hosts with SSL is possible, as long as the same certificate\nis used for both vhosts (as in this case, using subjectAltName)\n\nRegression:\nThere is an easy work-around. The \"correct\" configuration is listed in the\nattachment \"httpd.good.conf\". In here, both VirtualHosts do have \"SSLEngine on\",\nand the other SSL parameters are shared among all vhosts instances (in\nhttpd.bad.conf, only the first vhost had SSL parameters, the second had none).\n\nI fully understand that mod_ssl does not have knownledge of virtual hosts at the\ntime the SSL handshake is made. Presumably, it decides to use SSL or not based\non the first vhost for a certain IP:port combination. That is fine, and I think\nperhaps desirable behaviour. What is undesirable that if port 443 and HTTPS is\nused in reality, Apache thinks that port 80 and HTTP is used. That should always\nbe consistent."}, {"attachment_id": 20526, "tags": [], "bug_id": 42929, "is_private": false, "count": 1, "id": 105745, "time": "2007-07-18T05:52:16Z", "creator": "software@macfreek.nl", "creation_time": "2007-07-18T05:52:16Z", "text": "Created attachment 20526\nhttpd.conf which leads to the described bug"}, {"count": 2, "tags": [], "bug_id": 42929, "attachment_id": 20527, "is_private": false, "id": 105746, "time": "2007-07-18T05:53:29Z", "creator": "software@macfreek.nl", "creation_time": "2007-07-18T05:53:29Z", "text": "Created attachment 20527\nhttpd.conf similar to the affected httpd.conf, but which works as intended"}, {"count": 3, "tags": [], "bug_id": 42929, "is_private": false, "id": 105747, "creation_time": "2007-07-18T06:01:08Z", "time": "2007-07-18T06:01:08Z", "creator": "software@macfreek.nl", "text": "Created attachment 20528\nQuick how-to to make certificate with subjectAltNames\n\nIn case you don't remember how to create a certificate (step 2 in the \"steps to\nreproduce\"), here is the quick way:\n\n2a. Store attachment as ~/servercert.conf\n2b. openssl req -new -x509 -nodes -config ~/servercert.conf \\\n    -out    /usr/local/apache2/conf/ssl/servercert.pem \\\n    -keyout /usr/local/apache2/conf/ssl/serverkey.pem", "attachment_id": 20528}, {"count": 4, "tags": [], "bug_id": 42929, "attachment_id": null, "is_private": false, "id": 105748, "time": "2007-07-18T06:02:42Z", "creator": "software@macfreek.nl", "creation_time": "2007-07-18T06:02:42Z", "text": "In case you don't remember how to create a certificate (step 2 in the \"steps to\nreproduce\"), here is the quick way:\n\n2a. Store the 3rd attachment as ~/servercert.conf\n2b. openssl req -new -x509 -nodes -config ~/servercert.conf \\\n    -out    /usr/local/apache2/conf/ssl/servercert.pem \\\n    -keyout /usr/local/apache2/conf/ssl/serverkey.pem\n"}, {"count": 5, "tags": [], "bug_id": 42929, "is_private": false, "id": 106270, "creation_time": "2007-08-03T07:30:16Z", "time": "2007-08-03T07:30:16Z", "creator": "jim@apache.org", "text": "At present, any usage of SSL and named-based vhosts is not recommended and behavior is \nundocumented and not expected to be stable or consistant.", "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 42929, "is_private": false, "count": 6, "id": 106275, "time": "2007-08-03T07:50:23Z", "creator": "software@macfreek.nl", "creation_time": "2007-08-03T07:50:23Z", "text": "(In reply to comment #5)\n> At present, any usage of SSL and named-based vhosts is not recommended and\nbehavior \n> is undocumented and not expected to be stable or consistant.\n\nSo it's a WONTFIX? I'm a bit confused by the \"RESOLVED\" and \"INVALID\" status. I\ndon't really understand what is resolved. Does this mean that the inconsistent\nand instable behaviour is intended.\n\nIn particular, would it be useful to spend time for making a patch, or would\nthat automatically be rejected because the current behaviour is intended?\n\nI fully understand that probably the best idea for "}, {"attachment_id": null, "tags": [], "bug_id": 42929, "is_private": false, "count": 7, "id": 132020, "time": "2009-11-16T15:33:51Z", "creator": "tnt@allauthors.com", "creation_time": "2009-11-16T15:33:51Z", "text": "This is a ridiculous resolution.  Jim's comment agrees that the behavior of the web server under these conditions is \"not expected to be stable or consistant[sic]\" yet marks the bug as \"RESOLVED INVALID\" despite the following facts:\n1) Many production web servers do in fact make use of this type of configuration (especially in shared hosting scenarios).\n2) Apache offers no warning nor error when this type of configuration is implemented (despite the fact that detecting this situation is trivial).\n3) With Server Name Identification, it is perfectly possible to correctly map SSL requests to a name-based virtual host\n4) The bug is 100% reproducible and absolutely accurately reported (it is quite stable and consistent--just wrong) \n\nResolve it as won't fix-- that's what you're really saying... \n\nor mark it as low priority and give someone like the Freek the opportunity to contribute a patch...\n\nor fix it by causing apache to warn under these conditions, something like \"Warning: Use of SSL and Named VHOSTS is undocumented and is not expected to be stable or consistent\" or something like that and resolve it as fixed...\n\nBut don't call INVALID something that is 100% reproducible as obviously incorrect behavior.   Either there's a bug in apache's handling of SSL for named VHOSTs or there's a bug in apache's config processing that allows for SSL in named VHOSTS.  Which is the real bug is left as an exercise for the reader."}, {"count": 8, "tags": [], "creator": "sf@sfritsch.de", "attachment_id": null, "id": 132105, "time": "2009-11-18T12:19:43Z", "bug_id": 42929, "creation_time": "2009-11-18T12:19:43Z", "is_private": false, "text": "(In reply to comment #7)\n> 3) With Server Name Identification, it is perfectly possible to correctly map\n> SSL requests to a name-based virtual host\n\nThis PR was closed two years before SNI has been implemented.\n\nHave you checked that it still happens with version 2.2.12 or later? If yes, set the status to reopened."}]