[{"count": 0, "tags": [], "bug_id": 29709, "text": "Hello !\nIt seems there is a bug in the memory management of apache withhin a \nmultiprocessor envoirment.\nFirst I will introduce my envoirment:\nI use apache 2.0.47 in default configuration (build with the workspace shipped \nby apache.org).\nThe bug was reproduced on Windows NT4 with dual Processor, W2K with dual \nProcessor and W2K with Hyperthreading processor.\nFor reproducing the bug I modified the mod_example as followed:\nIn x_handler() I insert a Sleep(1000); for simulating a long operation during \nrequest like this:\n--------------------------------------\nap_rprintf(r, \"  Apache HTTP Server version: \\\"%s\\\"\\n\", ap_get_server_version\n());\nap_rputs(\"  <BR>\\n\", r);\n\n/* Simulating a long operation */\nSleep(1000);\n\nap_rprintf(r, \"  Server built: \\\"%s\\\"\\n\", ap_get_server_built());\n--------------------------------------\nThen I made heavy request to normal URL\u2019s and to mod_example simultaneous.\n\nAfter a while apache will fail at random in two different states. The first \nstate is a access violation. The Log comes as follows\n\n[Thu Jun 17 16:45:47 2004] [notice] Parent: child process exited with status \n3221225477 -- Restarting.\n[Thu Jun 17 16:45:50 2004] [notice] Parent: Created child process 3464\n[Thu Jun 17 16:45:51 2004] [debug] mpm_winnt.c(505): Parent: Sent the \nscoreboard to the child\n[Thu Jun 17 16:45:53 2004] [notice] Child 3464: Child process is running\n[Thu Jun 17 16:45:53 2004] [info] Parent: Duplicating socket 404 and sending it \nto child process 3464\n[Thu Jun 17 16:45:53 2004] [debug] mpm_winnt.c(426): Child 3464: Retrieved our \nscoreboard from the parent.\n[Thu Jun 17 16:45:53 2004] [debug] mpm_winnt.c(623): Parent: Sent 1 listeners \nto child 3464\n[Thu Jun 17 16:45:53 2004] [debug] mpm_winnt.c(582): Child 3464: retrieved 1 \nlisteners from parent\n[Thu Jun 17 16:45:53 2004] [notice] Child 3464: Acquired the start mutex.\n[Thu Jun 17 16:45:54 2004] [notice] Child 3464: Starting 25 worker threads.\n\nWhere status is 0xC0000005 which means Access Violation.\n\nThe access violation happens in apr_pool_walk_tree() while accessing\nchild = pool->child;\n\nAt the same time another thread tries to free the pool memory.\n\nI have no stack backtrace for this at the moment but I can try to make one, if \nthere is a intrest for it.\n\nThe other failure is that apache stops responding and stays with a processor \nload of about 50%.\nA break into code shows, that the pool is damaged.\nOne thread stays in allocator_free() and tries to free pool memory but the\nnext pointer of the actual node points to itself so there is a recursion where\napache never gets out.\nThis happens at this point:\n\ndo {\n        next = node->next;\n        index = node->index;\n\nWhere the node has the following content:\n\nnext = 0x007dadd8\nnode->index = 1\nnode->next = 0x007dadd8\nnode->ref = 0x007dadd8\nnode->free_index = 3452816845\n\nThe Thread backtrace looks like this:\n\nallocator_free(apr_allocator_t * 0x00773dd8, apr_memnode_t * 0x007dadd8) line \n362 + 6 bytes\napr_pool_destroy(apr_pool_t * 0x007d8db8) line 797 + 13 bytes\ntrace_add(server_rec * 0x0077c290, request_rec * 0x00000000, x_cfg * \n0x007b7c18, const char * 0x10014908 `string') line 408 + 15 bytes\nx_insert_filter(request_rec * 0x007d2d48) line 997 + 23 bytes\nap_run_insert_filter(request_rec * 0x007d2d48) line 121 + 31 bytes\nap_invoke_handler(request_rec * 0x6ff09466) line 374\nap_process_http_connection(conn_rec * 0x6ff03f8f) line 293 + 6 bytes\nap_run_process_connection(conn_rec * 0x007f51c8) line 85 + 31 bytes\nap_process_connection(conn_rec * 0x007f51c8, void * 0x007f5100) line 211 + 6 \nbytes\nworker_main(long 2013300156) line 731\nMSVCRT! 780085bc()\n\nAnother Thread stays in this stack state:\n\nNTDLL! 77894091()\nNTDLL! 778922f8()\nallocator_alloc(apr_allocator_t * 0x00773dd8, unsigned int 8192) line 242\napr_pool_create_ex(apr_pool_t * * 0x007d51dc, apr_pool_t * 0x007d4d48, int (int)\n* 0x00000000, apr_allocator_t * 0x00773dd8) line 829 + 14 bytes\ncore_output_filter(ap_filter_t * 0x6ff182c1, apr_bucket_brigade * 0x007d5198) \nline 4108\nap_pass_brigade(ap_filter_t * 0x007d5198, apr_bucket_brigade * 0x007ed5a0) line \n550 + 7 bytes\nap_http_header_filter(ap_filter_t * 0x6ff182c1, apr_bucket_brigade * \n0x007ab1f0) line 1695\nap_pass_brigade(ap_filter_t * 0x007ab1f0, apr_bucket_brigade * 0x007ed408) line \n550 + 7 bytes\nap_content_length_filter(ap_filter_t * 0x6ff182c1, apr_bucket_brigade * \n0x007ab1d8) line 1252 + 20 bytes\nap_pass_brigade(ap_filter_t * 0x007ab1d8, apr_bucket_brigade * 0x007ed408) line \n550 + 7 bytes\nap_byterange_filter(ap_filter_t * 0x6ff182c1, apr_bucket_brigade * 0x007ab1c0) \nline 3036 + 5 bytes\nap_pass_brigade(ap_filter_t * 0x007ab1c0, apr_bucket_brigade * 0x007ed408) line \n550 + 7 bytes\nap_old_write_filter(ap_filter_t * 0x007ed3f0, apr_bucket_brigade * 0x007ed528) \nline 1321 + 10 bytes\nend_output_stream(request_rec * 0x007aa550) line 1039 + 29 bytes\nap_finalize_request_protocol(request_rec * 0x007aa550) line 1061 + 6 bytes\nap_send_error_response(request_rec * 0x6ff0d26f, int 404) line 2423 + 6 bytes\nap_die(int 1878053609, request_rec * 0x00000000) line 232 + 11 bytes\nap_process_request(request_rec * 0x007aa550) line 311\nap_process_http_connection(conn_rec * 0x6ff03f8f) line 293 + 6 bytes\nap_run_process_connection(conn_rec * 0x007d4e48) line 85 + 31 bytes\nap_process_connection(conn_rec * 0x007d4e48, void * 0x007d4d80) line 211 + 6 \nbytes\nworker_main(long 2013300156) line 731\nMSV\n\nand another Thread looks like this:\n\nallocator_alloc(apr_allocator_t * 0x00773dd8, unsigned int 8192) line 242\napr_pool_create_ex(apr_pool_t * * 0x0156ff28, apr_pool_t * 0x007d6d80, int (int)\n* 0x00000000, apr_allocator_t * 0x00773dd8) line 829 + 14 bytes\nap_read_request(conn_rec * 0x6ff09431) line 848\nap_process_http_connection(conn_rec * 0x6ff03f8f) line 286 + 6 bytes\nap_run_process_connection(conn_rec * 0x007d6e80) line 85 + 31 bytes\nap_process_connection(conn_rec * 0x007d6e80, void * 0x007d6db8) line 211 + 6 \nbytes\nworker_main(long 2013300156) line 731\nMSVCRT! 780085bc()\n\nall other threads stays in winnt_get_connection()\n\nSo in my oppinion, there is a race condition where one thread tries to free the \npool memory and another thread tries to access this memory at the same time.\nIt seems that this behavior can only be reproduced on a multiprocessor or \nhyperthreading machine. I don\u2019t know if it affects to other OS then Windows.\n\nGreetings\nGabriel Kalkuhl", "id": 59651, "time": "2004-06-21T09:11:29Z", "creator": "kalkuhl@boehme-weihs.de", "creation_time": "2004-06-21T09:11:29Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 29709, "text": "Hello, \nI am also having the same issue.\nIf i change the ThreadsPerChild then i am able to vary how long the server \nwill run before restarting.\nWhile it restarts it fails to serve any pages and returns error in browser.\n\nSystem\n-------------------\nDell Dual P3 1gz\nWin2k with all updates as of 10/25/2004\nApache 2.0.52\nOpenSSL 0.9.7d\nPHP (tried many version and all have same issue from 4.3.2 - 5.0.2 and 5.1.x \nCVS)\n\nAny advice or help in focusing this issue would be very helpfull. \n\nThank You,\nDavid\n\n\n\n[Sun Oct 24 11:52:37 2004] [notice] Parent: child process exited with status \n1 -- Restarting.\n[Sun Oct 24 11:52:40 2004] [notice] Parent: Created child process 4060\n[Sun Oct 24 11:52:40 2004] [notice] Disabled use of AcceptEx() WinSock2 API\n[Sun Oct 24 11:52:43 2004] [notice] Child 4060: Child process is running\n[Sun Oct 24 11:52:43 2004] [notice] Child 4060: Acquired the start mutex.\n[Sun Oct 24 11:52:43 2004] [notice] Child 4060: Starting 1920 worker threads.\n[Sun Oct 24 11:52:44 2004] [notice] Child 4060: Listening on port 443.\n[Sun Oct 24 11:52:44 2004] [notice] Child 4060: Listening on port 80.\n[Sun Oct 24 11:52:44 2004] [notice] Child 4060: Listening on port 80.\n[Sun Oct 24 11:58:17 2004] [notice] Parent: child process exited with status \n1 -- Restarting.\n[Sun Oct 24 11:58:20 2004] [notice] Parent: Created child process 10080\n[Sun Oct 24 11:58:20 2004] [notice] Disabled use of AcceptEx() WinSock2 API\n[Sun Oct 24 11:58:23 2004] [notice] Child 10080: Child process is running\n[Sun Oct 24 11:58:23 2004] [notice] Child 10080: Acquired the start mutex.\n[Sun Oct 24 11:58:23 2004] [notice] Child 10080: Starting 1920 worker threads.\n[Sun Oct 24 11:58:23 2004] [notice] Child 10080: Listening on port 443.\n[Sun Oct 24 11:58:23 2004] [notice] Child 10080: Listening on port 80.\n[Sun Oct 24 11:58:23 2004] [notice] Child 10080: Listening on port 80.\n\n", "id": 65673, "time": "2004-10-25T23:19:02Z", "creator": "faithpast@gmail.com", "creation_time": "2004-10-25T23:19:02Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 29709, "text": "Hello David!\n\nI think many of the listed PHP errors for Apache 2 depends on this Bug.\nI wonder why Apache team members ignore this bug!\nHowever for fixing it, you have to change the memory management to protect the \npool memory.\nI've not the time to do this and it's a bit dangerous because of race \nconditions and dead lock states.\nThis bug should be fixed by someone who created this pool management.\n\nThe Bug fix for me was to completely switch back to Apache 1.\n\nSorry, not really helpful\nGabriel", "id": 65703, "time": "2004-10-26T10:02:04Z", "creator": "kalkuhl@boehme-weihs.de", "creation_time": "2004-10-26T10:02:04Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 29709, "attachment_id": null, "is_private": false, "id": 65722, "time": "2004-10-26T14:07:11Z", "creator": "jorton@redhat.com", "creation_time": "2004-10-26T14:07:11Z", "text": "apr_pool_destroy(apr_pool_t * 0x007d8db8) line 797 + 13 bytes\ntrace_add(server_rec * 0x0077c290, request_rec * 0x00000000, x_cfg *...)\n\n\"Then I made heavy request to normal URL\u2019s and to mod_example simultaneous.\"\n\nit looks very much like mod_example is not thread-safe; so this may just be a\ngood demonstration of that.  Do you have an example of a crash using any module\nother than mod_example?\n\n"}, {"count": 4, "tags": [], "creator": "faithpast@gmail.com", "attachment_id": null, "text": "I agree with switching back to apache 1. \nI'm currently in the process of compiling the latest stable version of apache \n1 with ssl after getting a few emails from some colleagues of mine with the \nsame issue.\n\nIt is unfortunate that this issue is so ingrained into the apache2 version. It \nmay just be my imagination, but I believe that the apache team is focusing on \napache2. If this is true then for people like us to upgrade this is a \nmandatory fix, I just can\u2019t have customers getting errors every 5.5 minutes.\n\nThnx for the fast response and I would love to know if you or the Apache team \never decides this is really an issue they would like to fix.\n\n- David\n", "id": 65732, "time": "2004-10-26T14:56:26Z", "bug_id": 29709, "creation_time": "2004-10-26T14:56:26Z", "is_private": false}, {"count": 5, "tags": [], "creator": "jorton@redhat.com", "attachment_id": null, "text": "All that the \"Child process exited with status 3221225477 -- Restarting.\"\nmessages means is that a child process crashed.  This may be because of a bug in\na module, or it may be because of a bug in httpd -- it's impossible to tell\nwithout a backtrace.  If you can either:\n\na) get a simple reproduction case for the problem, or\nb) get a backtrace from a crash\n\nthere is a chance of looking at this further.", "id": 65736, "time": "2004-10-26T15:01:57Z", "bug_id": 29709, "creation_time": "2004-10-26T15:01:57Z", "is_private": false}, {"count": 6, "tags": [], "bug_id": 29709, "text": "I concur with Joe's comment that mod_example is not thread-safe.  (Any threaded\nApache with mod_example should be expected to crash.)  As he says, we need a\nrecipe to reproduce, or other crash data, from a configuration without mod_example .\n", "id": 65742, "time": "2004-10-26T15:13:02Z", "creator": "trawick@apache.org", "creation_time": "2004-10-26T15:13:02Z", "is_private": false, "attachment_id": null}, {"count": 7, "tags": [], "bug_id": 29709, "attachment_id": null, "is_private": false, "id": 65743, "time": "2004-10-26T15:14:16Z", "creator": "kalkuhl@boehme-weihs.de", "creation_time": "2004-10-26T15:14:16Z", "text": "Hello Joe,\n\nyes, the error appeared to me first by using mod_cplusplus with EasySoap++.\nI implemented a SOAP server with this modules.\nMy module worked fine for some time. On the first dual processor machine we \ninstalled this software it crashed.\nAfter some reviews in the cplusplus module and EasySoap++ I found that the \nerror appers in the apache pool management.\nFor better demonstration I implemented the delay in mod_example. It will cras \nas soon as you make simultanous requests to normal http service and mod_example.\n\nBy the way, I saw some other bug reports from poeple using PHP with the same \nbehavior (see bug 24095).\n\nAre there some restrictions on making 'long' operations during request handling?\n\nGabriel"}, {"count": 8, "tags": [], "creator": "kalkuhl@boehme-weihs.de", "is_private": false, "text": "Sorry, comments where made at the same time.\nSorry Jeff, but I'm a bit confused about hearing that mod_example isn't thread \nsafe.\nMod_example doesn't do anything like piping some text to the output.\nThe only modification I've done is to insert a sleep between the output lines \nso the module behaves like doing a slow database acces (which originaly was my \nintention). Mod_example doesn't crash if I remove the sleep.\nIf this is not thread safe, then all modules which generate some text output \naren't thread safe.\n\nGabriel", "id": 65768, "time": "2004-10-26T20:39:18Z", "bug_id": 29709, "creation_time": "2004-10-26T20:39:18Z", "attachment_id": null}, {"count": 9, "tags": [], "bug_id": 29709, "text": "Look at mod_example's trace_add function and how it stores pointers to pools in\nglobal variables - it is not a well-behaved example module at all!  The first\nthing to do must be to take mod_example completely out of the picture, and try\nand trigger whatever problem it is you're seeing.\n\nYes, PHP users report crashes too, sometimes these are PHP bugs and sometimes not.  ", "id": 65769, "time": "2004-10-26T20:46:35Z", "creator": "jorton@redhat.com", "creation_time": "2004-10-26T20:46:35Z", "is_private": false, "attachment_id": null}, {"count": 10, "tags": [], "bug_id": 29709, "attachment_id": null, "is_private": false, "id": 66418, "time": "2004-11-04T03:36:33Z", "creator": "chip@force-elite.com", "creation_time": "2004-11-04T03:36:33Z", "text": "Bug #32051 is a tracking bug for mod_example not being thread safe.\n\nThis bug is invalid because the issue comes from a user basing their module on\nmod_example."}, {"count": 11, "tags": [], "bug_id": 29709, "attachment_id": null, "is_private": false, "id": 66439, "time": "2004-11-04T07:41:33Z", "creator": "kalkuhl@boehme-weihs.de", "creation_time": "2004-11-04T07:41:33Z", "text": "Your right!\n\nI removed all the trace_add stuff in mod_example and it works fine.\nNo more crashes anymore!\n\nBy the way, I'm a bit dissapointed about mod_example.\nNormaly example means, that someone w\u00edll show how to do something.\nIn this case mod_example should be titled: \"Here we show you, how to write bad \ncode and how you shouldn't write modules\".\n\nNow I can go on searching on mod_cplusplus, which is only third party for \napache.\n\nThanks for spending time on my mistakes!\n\nGabriel"}, {"count": 12, "tags": [], "bug_id": 29709, "attachment_id": null, "text": "I've implemented the one-minute fix you suggested, by adding a warning to\nmod_example\n\nhttp://cvs.apache.org/viewcvs.cgi/httpd-2.0/modules/experimental/mod_example.c\n", "id": 66442, "time": "2004-11-04T10:08:34Z", "creator": "nick@webthing.com", "creation_time": "2004-11-04T10:08:34Z", "is_private": false}]