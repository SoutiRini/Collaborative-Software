[{"count": 0, "tags": [], "creator": "lovetide@qq.com", "attachment_id": null, "id": 197031, "time": "2017-02-15T09:49:01Z", "bug_id": 60735, "creation_time": "2017-02-15T09:49:01Z", "is_private": false, "text": "After upgraded tomcat from 7.0.67 to 7.0.75, if there're UTF8 encoded characters in URL, tomcat will return \"HTTP/1.1 400 Bad Request\" now with or without 'URIEncoding=\"UTF-8\"' parameter in <Connector /> element. It works in 7.0.67.\n\nTest:\n\t$ curl -v localhost:8080/\u6c49\u5b57/\u6d4b\u8bd5.html\n\t*   Trying 127.0.0.1...\n\t* TCP_NODELAY set\n\t* Connected to localhost (127.0.0.1) port 8080 (#0)\n\t> GET /\u6c49\u5b57/\u6d4b\u8bd5.html HTTP/1.1\n\t> Host: localhost:8080\n\t> User-Agent: curl/7.51.0\n\t> Accept: */*\n\t> \n\t< HTTP/1.1 400 Bad Request\n\t< Server: Apache-Coyote/1.1\n\t< Transfer-Encoding: chunked\n\t< Date: Wed, 15 Feb 2017 09:27:53 GMT\n\t< Connection: close\n\t< \n\t* Curl_http_done: called premature == 0\n\t* Closing connection 0"}, {"attachment_id": null, "tags": [], "creator": "markt@apache.org", "text": "The characters are invalid so the 400 response is correct. The validation of request lines was tightened up as a result of CVE-2016-6816.", "count": 1, "id": 197032, "time": "2017-02-15T09:57:13Z", "bug_id": 60735, "creation_time": "2017-02-15T09:57:13Z", "is_private": false}, {"count": 2, "tags": [], "text": "(In reply to Mark Thomas from comment #1)\n> The characters are invalid so the 400 response is correct. The validation of\n> request lines was tightened up as a result of CVE-2016-6816.\n\nThanks for the quick response.\n\nSo, does this means 'URIEncoding' parameter is useless now and will be removed in the future?\n\n\n\n\nI actually like this convenient parameter, clear URL string without URL-encoded is my favorite, and security isn't my first concern.\n\nSo it would be nice if 'URIEncoding parameter enabled' is configurable for both security and convenience (disabled by default for security).", "attachment_id": null, "id": 197034, "creator": "lovetide@qq.com", "time": "2017-02-15T11:56:32Z", "bug_id": 60735, "creation_time": "2017-02-15T11:56:32Z", "is_private": false}, {"count": 3, "tags": [], "creator": "markt@apache.org", "text": "(In reply to LiuYan \u5218\u7814 from comment #2)\n\n> So, does this means 'URIEncoding' parameter is useless now and will be\n> removed in the future?\n\nNo. URIEncoding determines how a correctly %-encoded URI is converted to characters. To use UTF-8 characters that contain byte values that are not permitted by the HTTP specification, the bytes for those characters will need to be %-encoded.\n\n> I actually like this convenient parameter, clear URL string without\n> URL-encoded is my favorite\n\nUnless there are some major changes to the HTTP specification, that is not going to be possible.\n\nNote: Some browsers allow you to use UTF-8 characters in the address bar and will automatically convert them to the correct %-encoded form under the covers as a convenience to users.", "id": 197035, "time": "2017-02-15T12:43:47Z", "bug_id": 60735, "creation_time": "2017-02-15T12:43:47Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "creator": "lovetide@qq.com", "text": "(In reply to Mark Thomas from comment #3)\n> No. URIEncoding determines how a correctly %-encoded URI is converted to\n> characters. To use UTF-8 characters that contain byte values that are not\n> permitted by the HTTP specification, the bytes for those characters will\n> need to be %-encoded.\n\nOkay, thanks!\nI misunderstood it's purpose, thought it was used to encode/decode bytes sequence of the requested URI string.\n\n> \n> Note: Some browsers allow you to use UTF-8 characters in the address bar and\n> will automatically convert them to the correct %-encoded form under the\n> covers as a convenience to users.\n\nYes, I know firefox and w3m will encode URL, wget do that too. So I will move from curl to wget to get correct response.", "id": 197037, "time": "2017-02-15T14:08:58Z", "bug_id": 60735, "creation_time": "2017-02-15T14:08:58Z", "is_private": false, "attachment_id": null}, {"attachment_id": null, "tags": [], "creator": "1983-01-06@gmx.net", "text": "(In reply to LiuYan \u5218\u7814 from comment #4)\n> Yes, I know firefox and w3m will encode URL, wget do that too. So I will\n> move from curl to wget to get correct response.\n\nNon-sense, curl does the right thing as long as your URL is valid. It does not validate the path of the URL.", "count": 5, "id": 197042, "time": "2017-02-15T17:33:47Z", "bug_id": 60735, "creation_time": "2017-02-15T17:33:47Z", "is_private": false}, {"count": 6, "tags": [], "text": "(In reply to Michael Osipov from comment #5)\n> (In reply to LiuYan \u5218\u7814 from comment #4)\n> > Yes, I know firefox and w3m will encode URL, wget do that too. So I will\n> > move from curl to wget to get correct response.\n> \n> Non-sense, curl does the right thing as long as your URL is valid. It does\n> not validate the path of the URL.\n\n+1\n\n$ curl 'http://example.com/\u6c49\u5b57/\u6d4b\u8bd5.html'\n\nFrom my httpd access log:\n\nx.y.z.184 - - [15/Feb/2017:14:08:20 -0500] \"GET /\\xe6\\xb1\\x89\\xe5\\xad\\x97/\\xe6\\xb5\\x8b\\xe8\\xaf\\x95.html HTTP/1.1\" 404 480 \"-\" \"curl/7.51.0\"\n\ncurl behaves correctly.\n\nBoth Tomcat 8.0 and 8.5 reply with a 404 when I request /\u6c49\u8bed/\u6f22\u8a9e.html within a test web application's context URL space where no such file exists.\n\nSomething else must be wrong with the OP's environment.", "attachment_id": null, "id": 197044, "creator": "chris@christopherschultz.net", "time": "2017-02-15T19:13:39Z", "bug_id": 60735, "creation_time": "2017-02-15T19:13:39Z", "is_private": false}, {"count": 7, "tags": [], "creator": "lovetide@qq.com", "text": "(In reply to Michael Osipov from comment #5)\n> (In reply to LiuYan \u5218\u7814 from comment #4)\n> > Yes, I know firefox and w3m will encode URL, wget do that too. So I will\n> > move from curl to wget to get correct response.\n> \n> Non-sense, curl does the right thing as long as your URL is valid. It does\n> not validate the path of the URL.\n\nI didn't blame \"it's curl fault\", I actually like curl: \"send what I passed to you, do not encode URL for me\".\n\nI move from curl to wget because I don't like encoded URL -- unfriendly to me & size is fat/larger (size is 3 times of raw bytes sequence).", "id": 197053, "time": "2017-02-16T03:26:19Z", "bug_id": 60735, "creation_time": "2017-02-16T03:26:19Z", "is_private": false, "attachment_id": null}, {"attachment_id": null, "tags": [], "creator": "lovetide@qq.com", "text": "(In reply to Christopher Schultz from comment #6)\n> \n> Both Tomcat 8.0 and 8.5 reply with a 404 when I request /\u6c49\u8bed/\u6f22\u8a9e.html within a\n> test web application's context URL space where no such file exists.\n> \n> Something else must be wrong with the OP's environment.\n\n\nIf you use previous version (7.0.72 & 8.5.2 & 8.0.35 & 6.0.45 or lower version) to test, then yes, you got HTTP 404. This is what I wanted/expected.\n\nIf you use latest version (7.0.75 & 8.5.11 & 8.0.41 & 4.0.48) to test, you will get HTTP 400, as Mark Thomas said.", "count": 8, "id": 197054, "time": "2017-02-16T04:00:57Z", "bug_id": 60735, "creation_time": "2017-02-16T04:00:57Z", "is_private": false}]