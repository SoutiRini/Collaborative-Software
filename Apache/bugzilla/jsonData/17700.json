[{"count": 0, "tags": [], "bug_id": 17700, "text": "Resources.getMessage takes 4 times as long as necessary because it calls the \nstatic function MessageFormat.format()\n\nThis function essentially instantiates a new MessageFormat object every time \nand then formats a message.  With each new instantiation, the message string \nmust be parsed.\n\nUsing a profiling tool, I made 18,000 consecutive calls to the \nResourceMessages.getMessage(String, Object[]) function on my machine which took \n49,340ms to process.  47,695ms was consumed in the MessageFormat.format() \nfunction.\n\nI altered the class and created a static hashtable to cache MessageFormats \nafter each initial request.  The formats were re-used instead of parsing the \nstring with each call.  Making the same number of call to \nResourceMessages.getMessage took only 10,086ms.\n\nThis is a simple alteration, below is the code I used to make this change.\n\n    private static Hashtable formats = new Hashtable();\n    private static MessageFormat getFormat(String name)\n        throws MissingResourceException {\n        MessageFormat format = (MessageFormat) formats.get(name);\n        if (format==null) {\n            format = new MessageFormat(rb.getString(name));\n            formats.put(name, format);\n        }\n        return format;\n    }\n\n    /** Retrieves a message with arbitrarily many arguments. */\n    public static String getMessage(String name, Object[] a)\n\t    throws MissingResourceException {\n        Format f = getFormat(name);\n        synchronized(f) {\n            return f.format(a);\n        }\n    }", "id": 32514, "time": "2003-03-05T23:18:00Z", "creator": "ncoleman@leanlogistics.com", "creation_time": "2003-03-05T23:18:00Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "creator": "ncoleman@leanlogistics.com", "text": "Created attachment 5182\npre-parsed formats cached with simple pooling code", "id": 32569, "time": "2003-03-06T15:20:20Z", "bug_id": 17700, "creation_time": "2003-03-06T15:20:20Z", "is_private": false, "attachment_id": 5182}, {"count": 2, "tags": [], "creator": "ncoleman@leanlogistics.com", "attachment_id": 5189, "text": "Created attachment 5189\nCVS diff file containing changes made in previous upload", "id": 32608, "time": "2003-03-06T22:13:30Z", "bug_id": 17700, "creation_time": "2003-03-06T22:13:30Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 17700, "attachment_id": null, "text": "Thanks for the suggestion on improving performance.\n\nHowever, wouldn't we want a more sophisticated caching mechanism\nto avoid having the cache grow indefinitely?", "id": 43346, "time": "2003-08-26T22:36:21Z", "creator": "pierre.delisle@sun.com", "creation_time": "2003-08-26T22:36:21Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 17700, "text": "CC'ing the taglibs-dev address to all Standard bugs. ", "id": 57253, "time": "2004-05-12T00:27:00Z", "creator": "nagoya@felipeal.net", "creation_time": "2004-05-12T00:27:00Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "creator": "bayard@apache.org", "attachment_id": null, "text": "SPI style plugin cache added for this (see attachment to issue\nhttps://issues.apache.org/bugzilla/show_bug.cgi?id=31789 ).", "id": 99082, "time": "2007-02-07T17:33:26Z", "bug_id": 17700, "creation_time": "2007-02-07T17:33:26Z", "is_private": false}, {"count": 6, "tags": [], "creator": "bayard@apache.org", "text": "Quite a confusing issue.\n\nAs far as I can tell, the only things that use the Resources class are errors.\nSo there shouldn't be such a speed improvement unless Resources was being used\nin the application too (ill advised I think) or there were lots of errors, in\nwhich case there's a bigger issue.\n\nThere is no ResourcesMessages class in the JSTL implementation.\n\nA cache could be put in place for the fmt:message, but it would need to be keyed\non both locale and pattern and I'm hesistant to dive in on that.\n\nI think this should be a WONTFIX.", "id": 107231, "time": "2007-08-24T09:12:31Z", "bug_id": 17700, "creation_time": "2007-08-24T09:12:31Z", "is_private": false, "attachment_id": null}]