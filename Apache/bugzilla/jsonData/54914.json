[{"count": 0, "tags": [], "bug_id": 54914, "attachment_id": null, "text": "If a collection in a WebDAV-enabled area contains an index.html (or whatever filename is specified in DirectoryIndex) then it becomes impossible to use WebDAV methods on that collection: you cannot PROPFIND it, MOVE it, DELETE it, etc. All of these result in a 405 Method Not Allowed error.\n\ne.g., this series of operations, starting from an empty directory \"/wiml\":\n\n\nMKCOL /wiml/bugzillaPF/ --> 201 Created\nMKCOL /wiml/bugzillaPF/testcollxn --> 201 Created\nPROPFIND /wiml/bugzillaPF/ --> 207 Multi-Status\nPROPFIND /wiml/bugzillaPF/testcollxn/ --> 207 Multi-Status\nPUT /wiml/bugzillaPF/testcollxn/index.html --> 201 Created\nPROPFIND /wiml/bugzillaPF/ --> 207 Multi-Status\nPROPFIND /wiml/bugzillaPF/testcollxn/ --> 405 Method Not Allowed\nDELETE /wiml/bugzillaPF/testcollxn/ --> 405 Method Not Allowed\n\n\nNotice that before index.html is written, it is possible to PROPFIND the testcollxn collection. Afterwards, that method results in an error. It's still possible to see the testcollxn by calling PROPFIND on its parent with Depth:1, though (and its resourcetype is <collection>, so one would expect to be able to issue other DAV requests against it).\n\nDELETE and MOVE suffer similarly.\n\nSetting DirectoryIndex to 'disabled' fixes the problem (at the cost of disabling directory indexes...). This shouldn't be necessary, as RFC4918 explicitly calls out the possibility that a collection resource can also have a GETtable entity in addition to its collection-nature.\n\nAlso oddly, the error text returned for a PROPFIND on /wiml/bugzillaPF/testcollxn/ is \"The requested method GET is not allowed for the URL /wiml/bugzillaPF/testcollxn/index.html.\" --- note that neither the method nor the URL mentioned in the response correspond to those in the request --- which is doubly unexpected because GET *is* allowed (and works fine) on that URL. In fact, PROPFIND is also allowed on that URL. Just not on \"testcollxn\".\n\nThe (mis)behavior is the same in httpd-2.4.4 and in 2.5.0-dev r1477687.", "id": 166982, "time": "2013-04-30T22:20:51Z", "creator": "wiml@omnigroup.com", "creation_time": "2013-04-30T22:20:51Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 54914, "attachment_id": null, "is_private": false, "id": 172694, "time": "2014-01-26T04:15:31Z", "creator": "chrisd@apache.org", "creation_time": "2014-01-26T04:15:31Z", "text": "Fixed on trunk with r1561447."}, {"attachment_id": null, "tags": [], "bug_id": 54914, "is_private": false, "count": 2, "id": 173372, "time": "2014-02-19T20:09:33Z", "creator": "chrisd@apache.org", "creation_time": "2014-02-19T20:09:33Z", "text": "I haven't proposed this patch for backport to 2.4.x yet because it doesn't deal with OPTIONS, and I don't yet have a solid proposal on that front.\n\nWith 2.2.x and 2.4.x, OPTIONS on a directory (e.g., \"OPTIONS / HTTP/1.0\") would return variable Content-Type response header values, depending on whether a DirectoryIndex file was found by mod_dir.  If found, the Content-Type was derived from the index file (e.g., text/plain or text/html).  If not found, the supposedly internal MIME type httpd/unix-directory is returned (which is arguably an error, but a long-standing one).\n\nWith this patch, httpd/unix-directory is always returned, even if a DirectoryIndex file exists.\n\nPersonally, I think it would be preferable to either:\n\na) Restore (in trunk) the long-standing but arguably incorrect behaviour in which httpd/unix-directory is only returned if no DirectoryIndex file is found, or\n\nb) Adjust mod_dir and/or other modules so that httpd/unix-directory is never returned (e.g., by not returning Content-Type at all when r->content_type is set to an internal MIME type).\n\nWhile (a) might be the \"safer\" option, it may also may be harder or uglier to implement, with additional workarounds for the fact that r233369 (PR 25435) ended up breaking a number of other standard behaviours (e.g., PR 53794).\n\nThis is because that change (r233369) lets mod_dir proceed with its internal redirect to the DirectoryIndex file, as if it was always the canonical handler for the request, but retains some aspects of the original request, like the method and original handler setting.  When the original handler was never set, or can work equally well with a directory as with an index file, there's no problem; indeed, it can be a feature.  (This is what the reporter of PR 25435 wanted for their mod_perl setup.)  But when the original handler is set and the system is not expecting to have the request rewritten to point to an index file (e.g., mod_dav, mod_rewrite), things go awry."}, {"attachment_id": null, "tags": [], "bug_id": 54914, "text": "Workaround:\n\nAdd to webdav location\n\n<Limit PROPFIND>\nDirectoryIndex never-encounterable-file-name.html\n</Limit>", "count": 3, "id": 175603, "time": "2014-06-02T18:27:48Z", "creator": "sergey@fidoman.ru", "creation_time": "2014-06-02T18:27:48Z", "is_private": false}, {"attachment_id": null, "tags": [], "bug_id": 54914, "text": "(In reply to Sergey Dorofeev from comment #3)\n> Workaround:\n> \n> Add to webdav location\n> \n> <Limit PROPFIND>\n> DirectoryIndex never-encounterable-file-name.html\n> </Limit>\n\nFWIW, this workaround doesn't work for me (2.4.7-1ubuntu4.1 trusty).\n\nWebDAV works, yes, but it breaks the directory indexing for normal requests -- GETs and all.  Maybe that's a /different/ bug, I dunno...  :-(\n\n\nAlso, RE: Backporting to 2.4...  Even though the patch above doesn't solve the WHOLE problem (i.e., the OPTIONS method) if fixing only PROPFIND is enough to \"un-break\" WebDAV, it's worth it, IMHO.\n\nLike we say at $WORK: \"If it's stupid, BUT IT WORKS, it isn't stupid.\"  (Also: \"Just because you can't do /everything/ doesn't mean you shouldn't do *ANYTHING*\")\n\n\nMy two cents (and upvote)...", "count": 4, "id": 177764, "time": "2014-09-11T17:24:39Z", "creator": "dabe@dabe.com", "creation_time": "2014-09-11T17:24:39Z", "is_private": false}, {"count": 5, "attachment_id": null, "bug_id": 54914, "text": "(In reply to Dabe Murphy from comment #4)\n> FWIW, this workaround doesn't work for me (2.4.7-1ubuntu4.1 trusty).\n> \n> WebDAV works, yes, but it breaks the directory indexing for normal requests\n> -- GETs and all.  Maybe that's a /different/ bug, I dunno...  :-(\n\nSame problem exists for me on Scientific Linux 7.0, httpd-2.4.6-18.sl7.x86_64\n\n> \n> Also, RE: Backporting to 2.4...  Even though the patch above doesn't solve\n> the WHOLE problem (i.e., the OPTIONS method) if fixing only PROPFIND is\n> enough to \"un-break\" WebDAV, it's worth it, IMHO.\n\nI agree. In this case I think backporting the fix would be worthwhile to most users even if the whole OPTIONS issue is not addressed at this time.", "id": 179800, "time": "2014-12-16T17:25:47Z", "creator": "schubert@waksman.rutgers.edu", "creation_time": "2014-12-16T17:25:47Z", "tags": [], "is_private": false}, {"count": 6, "tags": [], "creator": "tcavaleiro@gmail.com", "text": "Hi there,\n\nI can confirm this issue on Apache 2.4.6.\n\nServer version: Apache/2.4.6 (CentOS)\nServer built:   Jan 12 2015 13:22:31\nServer's Module Magic Number: 20120211:23\nServer loaded:  APR 1.4.8, APR-UTIL 1.5.2\nCompiled using: APR 1.4.8, APR-UTIL 1.5.2\nArchitecture:   64-bit\nCentOS Linux release 7.0.1406 (Core)\n\n\nThe workaround that Wim Lewis talks about solves the issue, as this disables mod_dir for the defined context. On my case I've just applied to my WebDAV directories.", "id": 181540, "time": "2015-03-05T20:10:57Z", "bug_id": 54914, "creation_time": "2015-03-05T20:10:57Z", "is_private": false, "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 54914, "is_private": false, "count": 7, "id": 199180, "time": "2017-06-13T14:38:02Z", "creator": "ivars.strazdins@gmail.com", "creation_time": "2017-06-13T14:38:02Z", "text": "So it's been there for 4 years, not fixed for 2.4. Why?\nNobody is interested in DAV working with DirectoryIndex? I really need both functionality."}, {"count": 8, "tags": [], "creator": "gamingoracounts@gmail.com", "text": "Hi there,\nWe had the same problem while doing an exercise. This is how we did it:\n\nAlias /webdav /exampleFolder\nDavLockDB /www/exampleFolder/webDavDB\n<Location /webdav>\n       DAV On\n       Options +Indexes\n       AuthType Digest\n       AuthName \"webdav\"\n       AuthDigestProvider file\n       AuthUserFile /www/exampleFolder/auth/.password\n       Require valid-user\n       DirectoryIndex disabled\n</location>", "id": 201947, "time": "2017-11-06T15:26:18Z", "bug_id": 54914, "creation_time": "2017-11-06T15:26:18Z", "is_private": false, "attachment_id": null}]