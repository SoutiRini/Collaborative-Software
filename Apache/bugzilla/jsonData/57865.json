[{"count": 0, "tags": [], "bug_id": 57865, "attachment_id": null, "id": 182680, "time": "2015-04-28T07:58:17Z", "creator": "alessandro.trolli@gmail.com", "creation_time": "2015-04-28T07:58:17Z", "is_private": false, "text": "We have a webapp using org.apache.catalina.authenticator.SingleSignOn Valve and defining security constraints and Form based authentication.\n\ncalling session.invalidate doesn't properly destroy the session and Principal remains set only when war file is deployed during tomcat startup.\nProceeding with a restart without any war unpacking/deploy works properly."}, {"count": 1, "tags": [], "creator": "alessandro.trolli@gmail.com", "attachment_id": null, "text": "same webapp and configuration is working properly with version 7.0.59", "id": 182681, "time": "2015-04-28T07:59:41Z", "bug_id": 57865, "creation_time": "2015-04-28T07:59:41Z", "is_private": false}, {"count": 2, "attachment_id": null, "bug_id": 57865, "text": "Define \"doesn't properly destroy the session\".\n\nPlease also provide the steps to recreate this from a clean install of Tomcat 7.0.61.", "id": 182684, "time": "2015-04-28T09:24:33Z", "creator": "markt@apache.org", "creation_time": "2015-04-28T09:24:33Z", "tags": [], "is_private": false}, {"count": 3, "tags": [], "text": "Created attachment 32700\nSample Webapp\n\nsample webapp used for debug (working on 7.0.61)", "attachment_id": 32700, "id": 182749, "creator": "alessandro.trolli@gmail.com", "time": "2015-04-30T08:32:51Z", "bug_id": 57865, "creation_time": "2015-04-30T08:32:51Z", "is_private": false}, {"count": 4, "tags": [], "creator": "alessandro.trolli@gmail.com", "attachment_id": 32701, "text": "Created attachment 32701\nconfig files", "id": 182750, "time": "2015-04-30T08:35:34Z", "bug_id": 57865, "creation_time": "2015-04-30T08:35:34Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 57865, "attachment_id": null, "id": 182752, "time": "2015-04-30T08:44:38Z", "creator": "alessandro.trolli@gmail.com", "creation_time": "2015-04-30T08:44:38Z", "is_private": false, "text": "I'm actually not able to reproduce using a simple webapp (please find in attachements war and config files)\nbut even with complete webapp result is not deterministic.\n\nThe thing I've observed during first debug session is that Principal was available after logout (calling session.invalidate and issuing a client redirect to root context) without being redirect to authentication form by SingleSignOn valve"}, {"count": 6, "tags": [], "bug_id": 57865, "attachment_id": null, "id": 182760, "time": "2015-04-30T11:57:57Z", "creator": "markt@apache.org", "creation_time": "2015-04-30T11:57:57Z", "is_private": false, "text": "The detail on this issue is still sketchy but I'll take a look at the provided web applicaion and see if that clarifies things."}, {"count": 7, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "text": "This works as expected for me with trunk. I also don't see any changes between 7.0.59 and 7.0.61 that might explain any odd behavoir.\n\nIf this issue is re-opened then the *exact* steps to reproduce the issue with the latest stable 7.0.x release need to be provided. A clear description of the observed behabiour, the expected behaviour and what the differences are is also required.", "id": 182761, "time": "2015-04-30T12:24:49Z", "bug_id": 57865, "creation_time": "2015-04-30T12:24:49Z", "is_private": false}, {"count": 8, "tags": [], "creator": "alessandro.trolli@gmail.com", "attachment_id": null, "text": "(In reply to Mark Thomas from comment #7)\n> This works as expected for me with trunk. I also don't see any changes\n> between 7.0.59 and 7.0.61 that might explain any odd behavoir.\n> \n> If this issue is re-opened then the *exact* steps to reproduce the issue\n> with the latest stable 7.0.x release need to be provided. A clear\n> description of the observed behabiour, the expected behaviour and what the\n> differences are is also required.\n\nI've tried to debug further: in my case it doesn't enter in deregister method \ncalled by SingleSignOn.removeSession(String ssoId, Session session)\nbecause following condition is not met\n\n        // If there are not sessions left in the SingleSignOnEntry,\n        // deregister the entry.\n        if (entry.findSessions().length == 0) {\n            deregister(ssoId);\n        }\n\nAnalyzing code changes I've noticed that sessionEvent(SessionEvent event) method has the following part changed \n\n        long idle;\n        if (LAST_ACCESS_AT_START) {\n            idle = session.getLastAccessedTimeInternal();\n        } else {\n            idle = session.getThisAccessedTimeInternal();\n        }\n        if (((session.getMaxInactiveInterval() > 0)\n            && idle >= session.getMaxInactiveInterval() * 1000) \n            || (Session.SESSION_PASSIVATED_EVENT.equals(event.getType()))\n            || (!session.getManager().getContainer().getState().isAvailable())) {\n            removeSession(ssoId, session);\n        } else {\n            // The session was logged out.\n            // Deregister this single session id, invalidating \n            // associated sessions\n            deregister(ssoId);\n        }\n\nwhile in 7.0.59 removeSession was called looking at (System.currentTimeMillis() - session.getThisAccessedTimeInternal()\n\n\n        if (((session.getMaxInactiveInterval() > 0)\n            && (System.currentTimeMillis() - session.getThisAccessedTimeInternal() >=\n                session.getMaxInactiveInterval() * 1000)) \n            || (Session.SESSION_PASSIVATED_EVENT.equals(event.getType()))\n            || (!session.getManager().getContainer().getState().isAvailable())) {\n            removeSession(ssoId, session);\n        } else {\n            // The session was logged out.\n            // Deregister this single session id, invalidating \n            // associated sessions\n            deregister(ssoId);\n        }\n\n\ncan you please check if above change can interfer\nhow can I force to call deregister method?", "id": 182815, "time": "2015-05-04T13:04:30Z", "bug_id": 57865, "creation_time": "2015-05-04T13:04:30Z", "is_private": false}, {"count": 9, "tags": [], "bug_id": 57865, "text": "Re-closing as INVALID since the requested information was not provided.", "id": 182823, "time": "2015-05-04T19:39:47Z", "creator": "markt@apache.org", "creation_time": "2015-05-04T19:39:47Z", "is_private": false, "attachment_id": null}, {"count": 10, "tags": [], "bug_id": 57865, "attachment_id": null, "id": 182831, "time": "2015-05-05T08:00:37Z", "creator": "alessandro.trolli@gmail.com", "creation_time": "2015-05-05T08:00:37Z", "is_private": false, "text": "given provided web app and configuration files\nsteps to reproduce in 7.0.61 are:\n* deploy the webapp twice in different contexts (e.g. /sso1 and /sso2)\n* open http://localhost:8080/sso1/: it redirects to login form\n* log in as tomcat user\n* open http://localhost:8080/sso2/: user gets automatically authenticated through sso feature\n* click on logout on any of the two sessions\n* user gets immediately reauthenticated because ssoid hasn't been deregistered\n\nsame steps in 7.0.59 allow the user to logout from both contexts\n\nI've seen that code has changed again to accomodate https://issues.apache.org/bugzilla/show_bug.cgi?id=57338\n\nI haven't tested on trunk"}, {"count": 11, "tags": [], "creator": "violetagg@apache.org", "attachment_id": null, "text": "Hi,\n\nI can confirm that the scenario is working with the current Tomcat 7 trunk.\n\nRegards,\nVioleta", "id": 182834, "time": "2015-05-05T08:47:20Z", "bug_id": 57865, "creation_time": "2015-05-05T08:47:20Z", "is_private": false}]