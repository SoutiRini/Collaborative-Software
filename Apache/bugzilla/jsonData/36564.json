[{"count": 0, "tags": [], "bug_id": 36564, "is_private": false, "text": "Hi,\n\ndocumentation for mod_ldap says:\n--cut here--\nLDAP connection pooling and result caching services for use by other LDAP modules\nThis module was created to improve the performance of websites relying on\nbackend connections to LDAP servers. In addition to the functions provided by\nthe standard LDAP libraries, this module adds an LDAP connection pool and an\nLDAP shared memory cache.\n--cut here--\n\nBut the truth is that mod_ldap is specialized to supply functions for\nmod_auth_ldap and doesn't have any universal function with other modules can use.\n\nTherefor I had to abuse util_ldap_cache_getuserdn, while I am really looking up\nfor virtual host from LDAP:\n\n--cut here--\n    apr_snprintf(filtbuf, FILTER_LENGTH,\n\"(&(%s)(|(apacheServerName=%s)(apacheServerAlias=%s)))\", cfg->filter,\nr->hostname, r->hostname);\n\n    result = util_ldap_cache_getuserdn(r, ldc, cfg->url, cfg->basedn,\ncfg->scope, attributes, filtbuf, &dn, &vals);\n--cut here--\n\nThis is ugly, because error messages could get quite confusing.\n\nI hope we can agree that this should be improved to create more universal\nfunction (util_ldap_cache_find?) and change util_ldap_cache_getuserdn to use\nthis more universal function.\n\nThanks,\nOndrej.", "id": 79682, "time": "2005-09-08T21:56:12Z", "creator": "ondrej@sury.org", "creation_time": "2005-09-08T21:56:12Z", "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 36564, "text": "   I'm not sure what it is that you would want to enhance.  The API name might \nbe a little misleading for your purpose but the functionality is still exactly \nwhat you want, isn't it?  Wouldn't the implementation of util_ldap_cache_find \njust end up being:\n\nLDAP_DECLARE(int) util_ldap_cache_find(request_rec *r, \nutil_ldap_connection_t *ldc, const char *url, const char *basedn, \nint scope, char **attrs, const char *filter, const char **binddn,\nconst char ***retvals)\n\n{\n  return util_ldap_cache_getuserdn(r, ldc, url, basedn, scope, attrs, \n   filter, binddn, retvals);\n}\n", "id": 79684, "time": "2005-09-08T22:42:08Z", "creator": "bnicholes@apache.org", "creation_time": "2005-09-08T22:42:08Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 36564, "is_private": false, "text": "You're right that it's pure cosmetic issue, I am merely talking about these lines:\n\nutil_ldap.c:1057 ldc->reason = \"ldap_search_ext_s() for user failed with server\ndown\";\nutil_ldap.c:1064 ldc->reason = \"ldap_search_ext_s() for user failed\";\nutil_ldap.c:1076 ldc->reason = \"User not found\";\nutil_ldap.c:1078 ldc->reason = \"User is not unique (search found two or more\nmatches)\";\n\nMaybe simple replace user to entry will do the trick? (I think snprintf warnings\nare overkill :-)\n\nI thought about:\nrenaming util_ldap_cache_getuserdn to util_ldap_cache_find, replacing user to\nentry and creating:\n\nLDAP_DECLARE(int) util_ldap_cache_userdn(request_rec *r, \nutil_ldap_connection_t *ldc, const char *url, const char *basedn, \nint scope, char **attrs, const char *filter, const char **binddn,\nconst char ***retvals)\n\n{\n  return util_ldap_cache_find(r, ldc, url, basedn, scope, attrs, \n   filter, binddn, retvals);\n}\n\n***\nIn fact it's just my feeling doing something wrong when using getuserdn, so I\nwould welcome to clean it a bit, but I would not protest if you just close it as\n  WONTFIX bug.\n\nOndrej", "id": 79685, "time": "2005-09-08T22:57:19Z", "creator": "ondrej@sury.org", "creation_time": "2005-09-08T22:57:19Z", "attachment_id": null}]