[{"count": 0, "tags": [], "creator": "tallison@mitre.org", "attachment_id": 34391, "id": 194555, "time": "2016-10-19T19:16:43Z", "bug_id": 60279, "creation_time": "2016-10-19T19:16:43Z", "is_private": false, "text": "Created attachment 34391\nOne triggering file from common crawl\n\nOn a few files in our regression corpus, I got:\n\njava.lang.IllegalArgumentException: Header byte 0x01 expected, received 0x00\n\tat org.apache.poi.util.RLEDecompressingInputStream.<init>(RLEDecompressingInputStream.java:79)\n...\n\nI'm not sure if these files have valid macros in them or another embedded object.  Let's investigate."}, {"count": 1, "tags": [], "creator": "kveena919@gmail.com", "attachment_id": null, "id": 200704, "time": "2017-09-06T12:35:12Z", "bug_id": 60279, "creation_time": "2017-09-06T12:35:12Z", "is_private": false, "text": "Am also facing th same problem.'Could anyone resolve it for us."}, {"count": 2, "text": "Sounds like we have a volunteer! Veena, are you interested in researching this problem and putting together a patch?", "bug_id": 60279, "attachment_id": null, "id": 200708, "time": "2017-09-06T15:26:49Z", "creator": "onealj@apache.org", "creation_time": "2017-09-06T15:26:49Z", "tags": [], "is_private": false}, {"count": 3, "tags": [], "text": "On the attached file, I don't have a solution, but I wanted to document what I've found so far.\n\n1) This file's macros cause Microsoft to complain on document load (when you enable macros).  So, something is wonky at least for this document.\n\n2) decelage's oledump.py is able to read this macro as:\nAttribute VB_Name = \"ThisDocument\"\nAttribute VB_Base = \"1Normal.ThisDocument\"\nAttribute VB_Creatable = False\nAttribute VB_PredeclaredId = True\nAttribute VB_Exposed = True\nAttribute VB_TemplateDerived = True\nAttribute VB_Customizable = True\n\n\n\noledump.py commandline: oledump.py -s 7 -v file.doc\n\n2) The module offset is read as 5541 (15A5), but the actual record starts at 02F9.", "attachment_id": null, "bug_id": 60279, "id": 200718, "time": "2017-09-06T18:59:26Z", "creator": "tallison@mitre.org", "creation_time": "2017-09-06T18:59:26Z", "is_private": false}, {"count": 4, "tags": [], "creator": "tallison@mitre.org", "text": "Veena, are you able to share your file?\n\nI think the offset is corrupt in my file, and I'm guessing that decalage's tool may be brute-force reading the macros out of the ModuleStream.", "id": 200733, "time": "2017-09-07T14:13:53Z", "bug_id": 60279, "creation_time": "2017-09-07T14:13:53Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 60279, "attachment_id": null, "text": "Total <face_palm/>\n\noledump.py is by Didier Stevens\n\nUgh...Sorry.\n\nI filled out quite a bit in the vba stream parser hoping that an incorrect parse was leading to an incorrect offset.  The good news: we can now get quite a bit more metadata about the macros out, and there were some records that do require special handling.  The bad news: the offset really was incorrect and no improvements to the parser fixed this.\n\n\nSo, I have a patch for this that backs off to brute force to find the macro contents if there's an RLE decompression failure.\n\nI'll wait to apply it until we release 3.17.", "id": 200752, "time": "2017-09-08T12:19:18Z", "creator": "tallison@mitre.org", "creation_time": "2017-09-08T12:19:18Z", "is_private": false}, {"count": 6, "attachment_id": null, "bug_id": 60279, "text": "r1808301", "id": 200860, "time": "2017-09-14T02:23:38Z", "creator": "tallison@mitre.org", "creation_time": "2017-09-14T02:23:38Z", "tags": [], "is_private": false}]