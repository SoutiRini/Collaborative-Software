[{"count": 0, "tags": [], "creator": "antoni.mylka@gmail.com", "text": "Created attachment 25312\nPatch that fixes the issue for me.\n\nThis issue is about two related things:\n\n1. A bug in PackagePropertiesPart.java, which makes the date properties be extracted wrongly, the extracted java.util.Date instance refers to a different timestamp than the original value in XML. I say the SimpleDateFormat instance that is used to parse the datetime value from XML should have its timezone set to GMT, otherwise the 'Z' from the XML is ignored and the value is interpreted within the current timezone of the machine that runs the test. This is clearly wrong.\n\n2. Some unit tests make certain assumptions about the look of extracted strings. These assumptions are wrong in Poland, and probably in other locales outside the US.\n\nBoth of these cause the build to fail for me.\n\nI'm talking about the current trunk, rev 934444\n\nThe attached patch fixes the issue for me.\n\nI'm on windows xp with JDK 1.6.0_18 and and 1.7.1", "id": 136206, "time": "2010-04-16T13:18:44Z", "bug_id": 49138, "creation_time": "2010-04-16T13:18:44Z", "is_private": false, "attachment_id": 25312}, {"count": 1, "tags": [], "creator": "yegor@dinom.ru", "text": "Thanks for the patch. I applied in r935896 with minor tweaks.\n\n(1) PackagePropertiesPart.(get|set)DateValue should work symmetrically. Your code suggests setting time zone only in the setter, I added it in the getter too.\n\nAlso, the correct name of the time zone should be UTC, not GMT. The OOXML spec Part 2 refers to the W3C Note \"Date and Time Formats\", http://www.w3.org/TR/1998/NOTE-datetime-19980827 which says that Times are expressed in UTC (Coordinated Universal Time), with a special UTC designator (\"Z\"). \n\n(2) TestHSSFDataFormatter.testGetFormattedCellValueHSSFCell() passed in Polish but failed in Russian locale. It turned out that the code should assert the correct form of month (long 'MMMM' or short 'MMM') as in the original Excel format: \n\n        String fmt = cell.getCellStyle().getDataFormatString();\n        //assert the correct month form, as in the original Excel format\n        String monthPtrn = fmt.indexOf(\"mmmm\") != -1 ? \"MMMM\" : \"MMM\";\n\n        // this line is intended to compute how \"July\" would look like in the current locale\n        String jul = new SimpleDateFormat(monthPtrn).format(new GregorianCalendar(2010,6,15).getTime());\n\tassertTrue( fmtval.indexOf(jul) > -1);\n\nI ran tests for the following locales and all of them passed OK:\n\n -Duser.language=en -Duser.country=US\n -Duser.language=pl -Duser.country=POL\n -Duser.language=ru -Duser.country=RUS\n -Duser.language=de -Duser.country=DE\n\n\nRegards,\nYegor", "id": 136255, "time": "2010-04-20T08:59:13Z", "bug_id": 49138, "creation_time": "2010-04-20T08:59:13Z", "is_private": false, "attachment_id": null}]