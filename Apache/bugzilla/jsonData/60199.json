[{"attachment_id": null, "tags": [], "bug_id": 60199, "text": "Again and again I find myself in searching for classes that do not implement Serializable interface but are set into session. When you have such a class you just see in the log at tomcat start that there was a problem while deserializing the session object. I would be very helpful if the log would say which attribute have caused the problem.\n\nSample implementation StandardSession.java in doReadObject(ObjectInputStream stream):\n\nInstead of:\n\n        for (int i = 0; i < n; i++) {\n            String name = (String) stream.readObject();\n            Object value = stream.readObject();\n            if ((value instanceof String) && (value.equals(NOT_SERIALIZED)))\n                continue;\n            if (manager.getContext().getLogger().isDebugEnabled())\n                manager.getContext().getLogger().debug(\"  loading attribute '\" + name +\n                    \"' with value '\" + value + \"'\");\n            attributes.put(name, value);\n        }\n\ndo:\n\n\n        for (int i = 0; i < n; i++) {\n            String name = (String) stream.readObject();\n\n            Object value = null;\n            try {\n                value = stream.readObject();\n            } catch (Exception e) {\n                manager.getContext().getLogger().error(String.format(\"Attribute %s could not be deserialized due to %s\", name, e.getMessage()));\n            }\n\n            if ((value instanceof String) && (value.equals(NOT_SERIALIZED)))\n                continue;\n\n            if (manager.getContext().getLogger().isDebugEnabled())\n                manager.getContext().getLogger().debug(\"  loading attribute '\" + name +\n                    \"' with value '\" + value + \"'\");\n            attributes.put(name, value);\n        }", "count": 0, "id": 194125, "time": "2016-10-04T09:27:33Z", "creator": "igor.mukhin@gmx.de", "creation_time": "2016-10-04T09:27:33Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 60199, "is_private": false, "text": "Care to prepare a formal patch?", "id": 194133, "time": "2016-10-04T17:00:13Z", "creator": "chris@christopherschultz.net", "creation_time": "2016-10-04T17:00:13Z", "attachment_id": null}, {"attachment_id": 34324, "tags": [], "bug_id": 60199, "text": "Created attachment 34324\nProposed a patch for 8.0.x\n\nAdded a patch", "count": 2, "id": 194139, "time": "2016-10-04T19:52:52Z", "creator": "igor.mukhin@gmx.de", "creation_time": "2016-10-04T19:52:52Z", "is_private": false}, {"count": 3, "tags": [], "creator": "markt@apache.org", "is_private": false, "text": "I'm not completely against this but...\n\nThe error is logged, with the attribute name when writing the session to disk. Why do you need another error message when reading it?", "id": 194148, "time": "2016-10-05T11:34:18Z", "bug_id": 60199, "creation_time": "2016-10-05T11:34:18Z", "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 60199, "text": "I never saw such a warning on the tomcat shutdown. And I just tested it, and I don't any warning still.\n\nBut I see the line you meant in the code of StandardSession.doWriteObject:\n\nmanager.getContext().getLogger().warn(                     sm.getString(\"standardSession.notSerializable\", saveNames.get(i), id), e);\n\nIn the debugger I see the line executed not I don't see any output in my logs. Really strange. (This is a Spring Boot project with devtools)\n\nStill I think telling the name of the attribute which caused the problem on the tomcat start would be helpful, because one would know right away what the problem is, and he does not need to know that there was a message in the shutdown log which nobody every reads.", "id": 194168, "time": "2016-10-06T07:26:48Z", "creator": "igor.mukhin@gmx.de", "creation_time": "2016-10-06T07:26:48Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "creator": "markt@apache.org", "is_private": false, "id": 194170, "attachment_id": null, "bug_id": 60199, "creation_time": "2016-10-06T08:09:09Z", "time": "2016-10-06T08:09:09Z", "text": "With the proposed patch the error is logged higher up the stack. I suspect a logging configuration issue. The users list is the place to seek help with that.\n\nThe proposed patch also causes deserialization to stop on the first error. That is not the desired behaviour.\n\nI have an alternative patch that I'll apply shortly that logs a warn message with the attribute name or a debug message that includes the stack trace."}, {"attachment_id": null, "tags": [], "bug_id": 60199, "text": "Mark, great! Thank you.", "count": 6, "id": 194171, "time": "2016-10-06T08:11:55Z", "creator": "igor.mukhin@gmx.de", "creation_time": "2016-10-06T08:11:55Z", "is_private": false}, {"count": 7, "tags": [], "creator": "markt@apache.org", "is_private": false, "text": "This has been fixed in the following branches:\n- 9.0.x for 9.0.0.M11 onwards\n- 8.5.x for 8.5.6 onwards\n- 8.0.x for 8.0.38 onwards\n- 7.0.x for 7.0.73 onwards", "id": 194172, "time": "2016-10-06T08:14:27Z", "bug_id": 60199, "creation_time": "2016-10-06T08:14:27Z", "attachment_id": null}]