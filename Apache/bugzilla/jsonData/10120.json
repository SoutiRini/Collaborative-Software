[{"count": 0, "tags": [], "bug_id": 10120, "attachment_id": null, "text": "I have created a custom realm, and I install it in tomcat by copying a jar file\ninside $CATALINA_HOME/server/lib. \nBut I have some issues about this: \n\nI can not have two application with similar realm classes but not exactly the same.\nI can not have a shared installation of tomcat for multiple users. Each one of\nthem may require a different custom realm, and the only way to do this is by\ngiving them write access to the $CATALINA_HOME/server/lib directory, or at least\nsome files inside of it.\n\nNow I understand the realm is not part of the servlet specification or the jsp\nspecification, and should not be part of the web application. \n\nWhat I propose is simple: in the realm tag in server.xml, add an extra parameter\nwhich will tell tomcat in which directory or jar file to get the realm. for example:\n\n <Realm  \n    className=\"MyCustomRealmClass\" \n    classpath=\"/home/paul/CustomRealm.jar\"\n    ...\n />\n\nThat way, each user could configure his own realm in his own catalina\nconfiguration directories.\n\nAnother option would be to search the classes that are available to the context\nthe realm is defined in. \n\nFor example if my web application has the realm classes inside\nSOMEDIR/WEB-INF/classes/MyCustomRealmClass.class\nand I put this inside server.xml:\n\n<Context path=\"/myapp\" docBase=\"/SOMEDIR\">\n  <Realm  \n     className=\"MyCustomRealmClass\" \n     ...\n   />\n...\n/>\n\nit will find the class and use it.\n\nNote this would not break any specification, it would be just tomcat's way of\nconfiguring the realm. Other application servers are not currently following\ncurrent tomcat's way anyway.", "id": 18311, "time": "2002-06-21T14:23:25Z", "creator": "paul.pacheco@wavecode.com", "creation_time": "2002-06-21T14:23:25Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 10120, "attachment_id": null, "text": "Using CATALINA_BASE will go some way to addressing this. Having components that require their own class loader would be overly difficuly to manage.", "id": 142706, "time": "2010-12-14T17:17:19Z", "creator": "markt@apache.org", "creation_time": "2010-12-14T17:17:19Z", "is_private": false}]