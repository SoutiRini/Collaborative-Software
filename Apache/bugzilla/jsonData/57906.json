[{"count": 0, "tags": [], "creator": "knst.kolinko@gmail.com", "attachment_id": null, "id": 182897, "time": "2015-05-08T16:31:19Z", "bug_id": 57906, "creation_time": "2015-05-08T16:31:19Z", "is_private": false, "text": "I noted this while testing 7.0.62 release candidate, but this is reproducible with 7.0.61 as well, so it is not a regression.\n\nThe issue does not happen when running with Java 8u45.\nThe issue does not happen when running with Java 7u80.\nThe issue DOES happen when running with Java 6u45 (Windows 7).\n\nSo it depends on version of JRE.\n\nSteps:\n1. Get a clean copy of Tomcat 7\n2. Set JAVA_HOME = jdk 6u45\n3. Start with SecurityManager enabled  (catalina.bat start -security)\n4. Access http://localhost:8080/\n5. An INFO message with a stacktrace of java.security.AccessControlException is logged by WebappClassLoader to catalina.yyyy-mm-dd.log, as well as console.\n\nI do not notice any user-visible consequences from the above. The index page shows successfully. Generated HTML is the same as when running without security manager.\n\nThe examples web application works successfully.\n\nThe message is only logged on the first access to index page of ROOT web application after Tomcat start. It is not logged on reloads of the page.\n\nIt is not logged for examples web application. If I restart Tomcat and walk around examples, there is no message. Once I visit the index page the message is logged.\n\nThe message: (Tomcat 7.0.62, Java 6u45)\n\n[[[\n08.05.2015 18:17:05 org.apache.catalina.loader.WebappClassLoader loadClass\nINFO: Security Violation, attempt to use Restricted Class: org.apache.catalina.core.ApplicationContextFacadeBeanInfo\njava.security.AccessControlException: access denied (java.lang.RuntimePermission accessClassInPackage.org.apache.catalina.core)\n\tat java.security.AccessControlContext.checkPermission(AccessControlContext.java:374)\n\tat java.security.AccessController.checkPermission(AccessController.java:549)\n\tat java.lang.SecurityManager.checkPermission(SecurityManager.java:532)\n\tat java.lang.SecurityManager.checkPackageAccess(SecurityManager.java:1512)\n\tat org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1656)\n\tat org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1571)\n\tat java.beans.Introspector.instantiate(Introspector.java:1470)\n\tat java.beans.Introspector.findExplicitBeanInfo(Introspector.java:431)\n\tat java.beans.Introspector.<init>(Introspector.java:380)\n\tat java.beans.Introspector.getBeanInfo(Introspector.java:154)\n\tat javax.el.BeanELResolver$BeanProperties.<init>(BeanELResolver.java:252)\n\tat javax.el.BeanELResolver.property(BeanELResolver.java:373)\n\tat javax.el.BeanELResolver.getValue(BeanELResolver.java:97)\n\tat org.apache.jasper.el.JasperELResolver.getValue(JasperELResolver.java:104)\n\tat org.apache.el.parser.AstValue.getValue(AstValue.java:183)\n\tat org.apache.el.ValueExpressionImpl.getValue(ValueExpressionImpl.java:184)\n\tat org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate(PageContextImpl.java:944)\n\tat org.apache.jsp.index_jsp._jspService(index_jsp.java:107)\n\tat org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:731)\n\tat org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:439)\n\tat org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:395)\n\tat org.apache.jasper.servlet.JspServlet.service(JspServlet.java:339)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:731)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:597)\n\tat org.apache.catalina.security.SecurityUtil$1.run(SecurityUtil.java:276)\n\tat org.apache.catalina.security.SecurityUtil$1.run(SecurityUtil.java:273)\n\tat java.security.AccessController.doPrivileged(Native Method)\n\tat javax.security.auth.Subject.doAsPrivileged(Subject.java:517)\n\tat org.apache.catalina.security.SecurityUtil.execute(SecurityUtil.java:308)\n\tat org.apache.catalina.security.SecurityUtil.doAsPrivilege(SecurityUtil.java:168)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:297)\n\tat org.apache.catalina.core.ApplicationFilterChain.access$000(ApplicationFilterChain.java:55)\n\tat org.apache.catalina.core.ApplicationFilterChain$1.run(ApplicationFilterChain.java:191)\n\tat org.apache.catalina.core.ApplicationFilterChain$1.run(ApplicationFilterChain.java:187)\n\tat java.security.AccessController.doPrivileged(Native Method)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:186)\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:220)\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:122)\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:170)\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:103)\n\tat org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:957)\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:116)\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:423)\n\tat org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1079)\n\tat org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:620)\n\tat org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor.run(JIoEndpoint.java:316)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:895)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:918)\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\n\tat java.lang.Thread.run(Thread.java:662)\n]]]\n\n\nI tried to workaround the issue by adding the following attribute to JreMemoryLeakPreventionListener class in server.xml [1]:\n\nclassesToInitialize=\"org.apache.catalina.core.ApplicationContextFacadeBeanInfo\"\n\nto preload that class. The workaround did not help. The behaviour with Java 6u45 has not changed.\n\n\n[1] http://tomcat.apache.org/tomcat-7.0-doc/config/listeners.html"}, {"count": 1, "tags": [], "creator": "knst.kolinko@gmail.com", "attachment_id": null, "is_private": false, "id": 182898, "time": "2015-05-08T16:41:53Z", "bug_id": 57906, "creation_time": "2015-05-08T16:41:53Z", "text": "Preloading did not help, because there is no such class as \"ApplicationContextFacadeBeanInfo\" in Tomcat.\n\nThis issue has only a cosmetic effect. The class won't be loaded anyway, as there is no such class in Tomcat. It does not affect execution.\n\n\nThe java.beans.Introspector.findExplicitBeanInfo() method of JRE tries to load \"xxxBeanInfo\" class for \"xxx\" class that it works with. In this case BeanInfo class does not exist.\n\n\n\n(Therefore I am reducing severity of this issue to 'minor'.)"}, {"count": 2, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "id": 183546, "time": "2015-06-16T07:49:54Z", "bug_id": 57906, "creation_time": "2015-06-16T07:49:54Z", "is_private": false, "text": "Given that:\n- this is a purely cosmetic issue\n- the root cause appears to be in the JRE since it only appears when running with Java 6\n- public updates for Orace's Java 6 ceased in Feb 2013\n- it only occurs when running under a security manager\n\nI'm am leaning towards resolving this as WONTFIX.\n\nUsers still running Java 6 who want a fix for this issue can either update to Java 7 or request a Java 6 fix from their JVM vendor."}, {"count": 3, "tags": [], "bug_id": 57906, "attachment_id": 33358, "id": 187004, "time": "2015-12-17T13:44:27Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2015-12-17T13:44:27Z", "is_private": false, "text": "Created attachment 33358\ntest57905.jsp - simple page to test/demonstrate this issue\n\nUpdating status of this issue, with current Tomcat code\n\nFirst, a simple test page\n\nUpdated steps:\n\n(In reply to Konstantin Kolinko from comment #0)\n> Steps:\n> 1. Get a clean copy of Tomcat 7\n> 2. Set JAVA_HOME = jdk 6u45\n> 3. Start with SecurityManager enabled  (catalina.bat start -security)\n\n4.1. Put the attached test57905.jsp into webapps/ROOT\n4.2. Access http://localhost:8080/test57905.jsp\n\n> 5.1. The page shows successfully\n\nIt displays Tomcat version number.\n\n> 5.2. An INFO message with a stacktrace of java.security.AccessControlException\n> is logged by WebappClassLoader to catalina.yyyy-mm-dd.log, as well as\n> console.\n>"}, {"count": 4, "attachment_id": null, "creator": "knst.kolinko@gmail.com", "is_private": false, "id": 187005, "time": "2015-12-17T14:09:00Z", "bug_id": 57906, "creation_time": "2015-12-17T14:09:00Z", "tags": [], "text": "1. This issue was not visible with 7.0.57 because EL evaluation was performed with elevated privileges (CVE-2014-7810, fixed in 7.0.58 onwards)\n\n2. The differences between versions of Java\n\n> at java.beans.Introspector.instantiate(Introspector.java:1470)\n> at java.beans.Introspector.findExplicitBeanInfo(Introspector.java:431)\n\nIn JDK 6u45 Introspector.instantiate() is a method that tries several classloaders to load class named (beanClass.getName() + BEANINFO_SUFFIX)\n\na. tries original classloader beanClass\nb. tries system classloader\nc. tries TCCL\n\nAll tries are wrapped with try{}catch(Exception){} and the Exception is silently swallowed.\n\nThe \"c.\" step is what triggers the INFO message and stacktrace here.\n\n\nIn Java 7 the implementation was moved into different class,\ncom.sun.beans.finder.ClassFinder.findClass(className, beanClass.getClassLoader())\n\nAccording to some version of source code [1], the implementation of that method starts with a \"checkPackageAccess(name);\" call. So a SecurityException is raised immediately and no class loading occurs.\n\n\n[1] http://grepcode.com/file/repository.grepcode.com/java/root/jdk/openjdk/7u40-b43/com/sun/beans/finder/ClassFinder.java/#100\n\n\n3. Stacktrace with current Tomcat 7 (@rev.1720550) and Java 6u45\n\nBehaviour is the same as documented in Comment 0, but stacktrace is a bit different. WebappClassLoader has been refactored, so the calls are now in WebappClassLoaderBase class.\n\n[[[\n17.12.2015 17:08:00 org.apache.catalina.loader.WebappClassLoaderBase loadClass\nINFO: Security Violation, attempt to use Restricted Class: org.apache.catalina.core.ApplicationContextFacadeBeanInfo\njava.security.AccessControlException: access denied (java.lang.RuntimePermission accessClassInPackage.org.apache.catalina.core)\n\tat java.security.AccessControlContext.checkPermission(AccessControlContext.java:374)\n\tat java.security.AccessController.checkPermission(AccessController.java:549)\n\tat java.lang.SecurityManager.checkPermission(SecurityManager.java:532)\n\tat java.lang.SecurityManager.checkPackageAccess(SecurityManager.java:1512)\n\tat org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1791)\n\tat org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1705)\n\tat java.beans.Introspector.instantiate(Introspector.java:1470)\n\tat java.beans.Introspector.findExplicitBeanInfo(Introspector.java:431)\n\tat java.beans.Introspector.<init>(Introspector.java:380)\n\tat java.beans.Introspector.getBeanInfo(Introspector.java:154)\n\tat javax.el.BeanELResolver$BeanProperties.<init>(BeanELResolver.java:252)\n\tat javax.el.BeanELResolver.property(BeanELResolver.java:373)\n\tat javax.el.BeanELResolver.getValue(BeanELResolver.java:97)\n\tat org.apache.jasper.el.JasperELResolver.getValue(JasperELResolver.java:104)\n\tat org.apache.el.parser.AstValue.getValue(AstValue.java:184)\n\tat org.apache.el.ValueExpressionImpl.getValue(ValueExpressionImpl.java:184)\n\tat org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate(PageContextImpl.java:950)\n\tat org.apache.jsp.test57905_jsp._jspService(test57905_jsp.java:82)\n\tat org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:731)\n\tat org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:439)\n\tat org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:395)\n\tat org.apache.jasper.servlet.JspServlet.service(JspServlet.java:339)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:731)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:597)\n\tat org.apache.catalina.security.SecurityUtil$1.run(SecurityUtil.java:288)\n\tat org.apache.catalina.security.SecurityUtil$1.run(SecurityUtil.java:285)\n\tat java.security.AccessController.doPrivileged(Native Method)\n\tat javax.security.auth.Subject.doAsPrivileged(Subject.java:517)\n\tat org.apache.catalina.security.SecurityUtil.execute(SecurityUtil.java:320)\n\tat org.apache.catalina.security.SecurityUtil.doAsPrivilege(SecurityUtil.java:175)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:297)\n\tat org.apache.catalina.core.ApplicationFilterChain.access$000(ApplicationFilterChain.java:55)\n\tat org.apache.catalina.core.ApplicationFilterChain$1.run(ApplicationFilterChain.java:191)\n\tat org.apache.catalina.core.ApplicationFilterChain$1.run(ApplicationFilterChain.java:187)\n\tat java.security.AccessController.doPrivileged(Native Method)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:186)\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:220)\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:122)\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:169)\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:103)\n\tat org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:956)\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:116)\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:423)\n\tat org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1079)\n\tat org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:625)\n\tat org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor.run(JIoEndpoint.java:316)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:895)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:918)\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\n\tat java.lang.Thread.run(Thread.java:662)\n]]]"}, {"count": 5, "tags": [], "creator": "knst.kolinko@gmail.com", "attachment_id": null, "id": 187007, "time": "2015-12-17T14:39:42Z", "bug_id": 57906, "creation_time": "2015-12-17T14:39:42Z", "is_private": false, "text": "4. Tomcat 6 does not log any INFO message with Java 6u45.\nThe reason for this though is an unexpected one.\n\nThe reason is in the following block of code:\n\n[[[\n        try {\n            clazz = system.loadClass(name);\n            if (clazz != null) {\n                if (resolve)\n                    resolveClass(clazz);\n                return (clazz);\n            }\n        } catch (ClassNotFoundException e) {\n            // Ignore\n        }\n]]]\n\nThe system.loadClass(name) call fails with a SecurityException (AccessControlException). This exception is not logged.\n\n\nIf I add an additional try/catch and debug logging in WebappClassLoader.loadClass() method, the stacktrace is as following:\n\nThe below is 6u45 + Tomcat 6. Note: WebappClassLoader.java was edited to add debug logging, as such line numbers are shifted.\n\n[[[\njava.security.AccessControlException: access denied (java.lang.RuntimePermission accessClassInPackage.org.apache.catalina.core)\n\tat java.security.AccessControlContext.checkPermission(AccessControlContext.java:374)\n\tat java.security.AccessController.checkPermission(AccessController.java:549)\n\tat java.lang.SecurityManager.checkPermission(SecurityManager.java:532)\n\tat java.lang.SecurityManager.checkPackageAccess(SecurityManager.java:1512)\n\tat sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:298)\n\tat java.lang.ClassLoader.loadClass(ClassLoader.java:247)\n\tat org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1613)\n\tat org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1526)\n\tat java.beans.Introspector.instantiate(Introspector.java:1470)\n\tat java.beans.Introspector.findExplicitBeanInfo(Introspector.java:431)\n\tat java.beans.Introspector.<init>(Introspector.java:380)\n\tat java.beans.Introspector.getBeanInfo(Introspector.java:154)\n\tat javax.el.BeanELResolver$BeanProperties.<init>(BeanELResolver.java:200)\n\tat javax.el.BeanELResolver.property(BeanELResolver.java:320)\n\tat javax.el.BeanELResolver.getValue(BeanELResolver.java:81)\n\tat javax.el.CompositeELResolver.getValue(CompositeELResolver.java:54)\n\tat org.apache.el.parser.AstValue.getValue(AstValue.java:123)\n\tat org.apache.el.ValueExpressionImpl.getValue(ValueExpressionImpl.java:182)\n\tat org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate(PageContextImpl.java:897)\n\tat org.apache.jsp.test57905_jsp._jspService(test57905_jsp.java:53)\n\tat org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:723)\n\tat org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:388)\n\tat org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:313)\n\tat org.apache.jasper.servlet.JspServlet.service(JspServlet.java:260)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:723)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:597)\n\tat org.apache.catalina.security.SecurityUtil$1.run(SecurityUtil.java:277)\n\tat org.apache.catalina.security.SecurityUtil$1.run(SecurityUtil.java:276)\n\tat java.security.AccessController.doPrivileged(Native Method)\n\tat javax.security.auth.Subject.doAsPrivileged(Subject.java:517)\n\tat org.apache.catalina.security.SecurityUtil.execute(SecurityUtil.java:309)\n\tat org.apache.catalina.security.SecurityUtil.doAsPrivilege(SecurityUtil.java:170)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:283)\n\tat org.apache.catalina.core.ApplicationFilterChain.access$000(ApplicationFilterChain.java:56)\n\tat org.apache.catalina.core.ApplicationFilterChain$1.run(ApplicationFilterChain.java:189)\n\tat java.security.AccessController.doPrivileged(Native Method)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:185)\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:103)\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:293)\n\tat org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:861)\n\tat org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:620)\n\tat org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:489)\n\tat java.lang.Thread.run(Thread.java:662)\n]]]\n\n\nTomcat 7 calls a different class loader (the j2se bootstrap classloader instead of system one), and that call does not fail, and fails a few lines later -- at an explicit \"securityManager.checkPackageAccess(..);\" call.\n\n\nConclusion\n--------\n1. The difference with Tomcat 6 is that\n- Tomcat 6 throws original SecurityException,\n- Tomcat 7 catches SecurityException, logs an INFO message and throws a new ClassNotFoundException\n\nI do not see any fault in Tomcat 6 rethrowing the exception. The access to protected classes is blocked either way.\n\n\nI do not know why Tomcat 7 converts a SecurityException into ClassNotFoundException.  One guess is that the reason is that \"SecurityException\" is not mentioned in javadoc of ClassLoader.loadClass() method so it is unclear whether the method is allowed to throw one.\n\n\n2. Possible mitigations:\na. Change Tomcat 7 to rethrow original SecurityException instead of converting it into ClassNotFoundException\n\nb. Reduce logging level from INFO to DEBUG if the loaded class name ends with \"BeanInfo\".\n\nThis does not hide anything substantial. An attempt to load a '*BeanInfo' class is not related to any attempt to load a '*' class.\n\nc. WONTFIX.\n\n\nI am in favor of mitigation \"b.\".\n\nWe can use \"a.\" if there are other similar reports, but for now I do not see enough reasons to change the behaviour."}, {"count": 6, "tags": [], "bug_id": 57906, "attachment_id": null, "text": "Fixed in Tomcat 7 by r1720568 and will be in 7.0.68.\n\nTomcat 6 does not need this fix.\nTomcat 8 and later run on later versions of Java and do not need this fix either.", "id": 187008, "time": "2015-12-17T14:55:28Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2015-12-17T14:55:28Z", "is_private": false}]