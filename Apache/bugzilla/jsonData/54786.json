[{"count": 0, "tags": [], "creator": "dominik.stadler@gmx.at", "attachment_id": null, "id": 166324, "time": "2013-04-02T13:46:43Z", "bug_id": 54786, "creation_time": "2013-04-02T13:46:43Z", "is_private": false, "text": "I have an excel sheet with a elapsed-time-column and a second column which executes a TEXT() function to format the data in a special form. It uses double-quotes to include literals in the resulting text.\n\nI.e. the date-column itself contains something like \"0.041666667\", which is one hour elapsed time. The formula used is TEXT(AW598; \"[h]\"\"h\"\" m\"\"m\"\"\"), i.e. it tries to state \"h\" for elapsed hours and \"m\" for elapsed minutes. The result in Excel in this case is \"1h 0m\", however in POI, the result is [1\"\"1\"\" 0\"\"0\"\"], i.e. it keeps the double quotes and replace hour and minute in both places.\n\nThe following testcase verifies this:\n\n\t@Test\n\tpublic void testTEXT() {\n\t\tDataFormatter formatter = new DataFormatter();\n\t\tString format = \"[h]\\\"\\\"h\\\"\\\" m\\\"\\\"m\\\"\\\"\";\n\t\tassertTrue(DateUtil.isADateFormat(-1,format));\n\t\tString formattedStr = formatter.formatRawCellContents(0.041666667, -1, format);\n\t\tassertEquals(\"1h 0m\", formattedStr);\n\t}\n\nIt seems the DateFormatter does not support the double-quoting which Excel supports. I also did not find a simple workaround, using single quote to use the escaping from the underlying SimpleDateFormat did not work as well because DateUtil.isADateFormat() does not match any more at all then."}, {"count": 1, "tags": [], "bug_id": 54786, "attachment_id": null, "id": 166325, "time": "2013-04-02T14:08:04Z", "creator": "dominik.stadler@gmx.at", "creation_time": "2013-04-02T14:08:04Z", "is_private": false, "text": "FYI, the full documentation of the TEXT() function is at http://office.microsoft.com/en-us/excel-help/text-funktion-HP010342952.aspx, interestingly there is no mentioning of double-quotes there, but it works as escape character in date-related formatting at least in Excel 2010..."}, {"attachment_id": null, "tags": [], "bug_id": 54786, "is_private": false, "count": 2, "id": 166359, "time": "2013-04-03T17:13:17Z", "creator": "apache@gagravarr.org", "creation_time": "2013-04-03T17:13:17Z", "text": "Would you be able to create a file with this formatting in Excel, then read back the contents in POI? Is it as you've shown in your test, or different?\n\nWhat Excel displays, and what Excel writes to the file aren't always the same... (POI is a file format library, so generally goes for what's in the file)"}, {"attachment_id": 30146, "tags": [], "bug_id": 54786, "is_private": false, "count": 3, "id": 166372, "time": "2013-04-04T06:12:05Z", "creator": "dominik.stadler@gmx.at", "creation_time": "2013-04-04T06:12:05Z", "text": "Created attachment 30146\nSample Excel file having formatting using doulbe quotes as escape characters\n\nThe attached file shows the conditional date formatting using TEXT() with two double quotes as escape characters. I.e. cell A1 contains the formula \n\n=TEXT(B1; \"[h]\"\"h\"\" m\"\"m\"\"\")\n\nIn Excel, this formats Cell B1 the number of hours with a trailing \"h\" and the number of minutes with a trailing \"m\". If I calculate this formula with POI, I get 0\"0\" 15\"15\", i.e. h and m are replaced twice with hours/minutes and one of the two double-quotes are removed.\n\nThe following unit test fails with the attached file, but I would expect it to work fine:\n\n\t@Test\n\tpublic void test() throws IOException {\n\t\tInputStream inp = new FileInputStream(new File(\"testsrc/test.xlsx\"));\n\t\tfinal Workbook wb;\n\t\ttry {\n\t\t\twb = new XSSFWorkbook(inp);\n\t\t} finally {\n\t\t\tinp.close();\n\t\t}\n\n\t\tSheet sheet = wb.getSheetAt(0);\n\t\tassertNotNull(sheet);\n\n    \tRow row = sheet.getRow(0);\n    \tassertNotNull(row);\n    \tCell cell = row.getCell(0);\n    \tassertNotNull(cell);\n\n    \tFormulaEvaluator evaluator = wb.getCreationHelper().createFormulaEvaluator();\n    \tCellValue cellValue = evaluator.evaluate(cell);\n    \tassertEquals(Cell.CELL_TYPE_STRING, cellValue.getCellType());\n\n    \tString stringValue = cellValue.getStringValue();\n    \tassertEquals(\"0h 15m\", stringValue);\n\t}"}, {"count": 4, "tags": [], "bug_id": 54786, "attachment_id": null, "id": 169496, "time": "2013-08-16T11:07:24Z", "creator": "dominik.stadler@gmx.at", "creation_time": "2013-08-16T11:07:24Z", "is_private": false, "text": "I have implemented this so that the \"\"\" are converted to ' internally for the SimpleDateFormatter under r1514632."}]