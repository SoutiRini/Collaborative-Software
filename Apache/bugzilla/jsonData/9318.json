[{"count": 0, "text": "I'm calling session.getMaxInactiveInterval() on a session after it has been \ninvalidated.\n\nTomcat is throwing an IllegalStateException and saying that method cannot be \ncalled on an invalid session.  However, the Servlet 2.3 API docs do not state \nthat IllegalStateException should be thrown (as it is with many other methods \nin HttpSession) from getMaxInactiveInterval().\n\nThe reason I've run into this problem is because I'm trying to write a \nHttpSessionAttributeListener that determines if the session is being explicitly \ninvalidated or if it timed out.\n\nThe Servlet 2.3 spec (section 10.7) states,\n\n\"It is often useful in tracking sessions to know whether a session became \ninvalid because the container timed out the session, or because a web component \nwithin the application called the invalidate method. The destinction may be \ndetermined indirectly using listeners and the HTTPSession API methods.\"\n\nIf I can't call getMaxInactiveInterval() on an invalidated session, how can I \ndetermine if the session was invalidated due to time out?  Is this a bug in \nTomcat?  It seems so since it doesn't follow the API docs for this call.\n\nHere is a HttpServletListner the demonstrates the problem:\n\nimport javax.servlet.http.HttpSessionListener;\nimport javax.servlet.http.HttpSessionEvent;\nimport javax.servlet.http.HttpSession;\n\npublic class TestListener implements HttpSessionListener {\n  \n  public void sessionCreated(HttpSessionEvent httpSessionEvent) {\n  }\n  \n  public void sessionDestroyed(HttpSessionEvent httpSessionEvent) {\n    // ok session should be invalid here...\n    // lets test some assertions\n    // let put it in a try block to catch any exceptions\n    try {\n      HttpSession session = httpSessionEvent.getSession();\n      \n      // lets make sure session is not null\n      System.out.println(session == null);\n      \n      // ok lets try last access time\n      // this SHOULD work even if session is invalid\n      // javadocs say it will...\n      System.out.println(session.getLastAccessedTime());\n      // ta-da it does\n      \n      // ok if that worked then this should work too\n      // javadocs do not say it throws IllegalStateException\n      System.out.println(session.getMaxInactiveInterval());\n      // whoops this breaks...\n      // javadocs say this shouldn't happen\n      // Servlet spec (10.7) implies using this method to see if\n      // a session is invalid because of timeout as opposed\n      // to explicit call to session.invalidate();\n      \n      // now, we won't get here cause the above fails\n      // but just to see if the session is invalid\n      // lets call something that the javadocs DO say should\n      // throw IllegalStateException on an invalid session\n      session.invalidate();\n    } catch(Exception e) {\n      e.printStackTrace();\n    }\n  }  \n}", "bug_id": 9318, "is_private": false, "id": 16548, "time": "2002-05-22T15:02:13Z", "creator": "cwilson@andrews.edu", "creation_time": "2002-05-22T15:02:13Z", "tags": [], "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 9318, "text": "\nI reviewed the Servlet Specs and I agree with the poster.  This\npatch stops the exception from being thrown.\n\nCheers,\n-bob\n\nIndex: StandardSession.java\n===================================================================\nRCS file:\n/home/cvspublic/jakarta-tomcat-4.0/catalina/src/share/org/apache/catalina/session/StandardSession.java,v\nretrieving revision 1.28\ndiff -r1.28 StandardSession.java\n473,476d472\n<         if (!isValid)\n<             throw new IllegalStateException\n<                 (sm.getString(\"standardSession.getMaxInactiveInterval.ise\"));\n< \n", "id": 18350, "time": "2002-06-21T17:56:56Z", "creator": "bob@jadn.com", "creation_time": "2002-06-21T17:56:56Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 9318, "text": "I think I agree too.", "id": 18351, "time": "2002-06-21T18:14:44Z", "creator": "remm@apache.org", "creation_time": "2002-06-21T18:14:44Z", "is_private": false, "attachment_id": null}]