[{"count": 0, "tags": [], "bug_id": 53895, "text": "Created attachment 29391\nNew ImplicitObjectELResolverImpl\n\nImplicitObjectELResolver uses Arrays.binarySearch to check scope name.\n It isn't very efficient.\n\nIt can be improved by using a map to hold the scope to scopeIndex.\n Such as,\n\n private static final Map<String, Integer> scopeMap = new HashMap<String, Integer>();\n\n static {\n for (int i = 0; i < SCOPE_NAMES.length; i++) { scopeMap.put(SCOPE_NAMES[i], i); }\n }\n\nMore detail please check out the attachment \"ImplicitObjectELResolverImpl.java\".", "id": 162265, "attachment_id": 29391, "creator": "xshao@ebay.com", "creation_time": "2012-09-19T06:09:59Z", "time": "2012-09-19T06:09:59Z", "is_private": false}, {"count": 1, "tags": [], "creator": "xshao@ebay.com", "attachment_id": 29392, "id": 162266, "time": "2012-09-19T06:12:43Z", "bug_id": 53895, "creation_time": "2012-09-19T06:12:43Z", "is_private": false, "text": "Created attachment 29392\nComparison test case\n\nSample test result:\n\nNew ImplicitObjectELResolver:578\nOld ImplicitObjectELResolver:795\nNew ImplicitObjectELResolver:624\nOld ImplicitObjectELResolver:889\nNew ImplicitObjectELResolver:515\nOld ImplicitObjectELResolver:999\nNew ImplicitObjectELResolver:624\nOld ImplicitObjectELResolver:1030\nNew ImplicitObjectELResolver:546\nOld ImplicitObjectELResolver:1108\nNew ImplicitObjectELResolver:546\nOld ImplicitObjectELResolver:982\nNew ImplicitObjectELResolver:640\nOld ImplicitObjectELResolver:1060"}, {"count": 2, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "id": 163004, "time": "2012-10-28T19:50:07Z", "bug_id": 53895, "creation_time": "2012-10-28T19:50:07Z", "is_private": false, "text": "There are multiple concerns with this proposal.\n\n1. Patches should be provided in diff -u format and not include formatting changes. It took time to get the proposed new class into a form where a true diff (no formatting changes) was available to review.\n\n2. A few hundred milliseconds difference over 10 million look-ups is not very much. I'd be prepared to make the change in this case as the new code is no more complex than the old.\n\n3. Testing locally I only see a few 10s of ms difference in the provided test case. That makes applying the patch a lot harder to justify.\n\n4. Experimenting with different scopes (rather than pageContext) shows the new version is slower, not faster, for some. Any future proposal (and I am not sure it is worth pursuing)  needs to include a testcase that examines all scopes rather than one that appears to show the most favourable results."}, {"count": 3, "tags": [], "text": "Created attachment 29514\nDiff -u format of proposed change", "is_private": false, "bug_id": 53895, "id": 163005, "time": "2012-10-28T19:53:28Z", "creator": "markt@apache.org", "creation_time": "2012-10-28T19:53:28Z", "attachment_id": 29514}, {"count": 4, "tags": [], "text": "It's worth noting that the proposed solution requires more heap space than the old solution. If this change is at the compiled-page level, it might not be a big deal. If a new HashMap gets created for every invocation of the JSP then it might be a performance problem under load due to the additional garbage generated.", "is_private": false, "bug_id": 53895, "id": 163097, "time": "2012-10-31T17:52:57Z", "creator": "chris@christopherschultz.net", "creation_time": "2012-10-31T17:52:57Z", "attachment_id": null}]