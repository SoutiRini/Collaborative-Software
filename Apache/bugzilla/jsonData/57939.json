[{"count": 0, "tags": [], "bug_id": 57939, "attachment_id": null, "is_private": false, "id": 183054, "time": "2015-05-20T09:10:58Z", "creator": "nikita@plumbr.eu", "creation_time": "2015-05-20T09:10:58Z", "text": "This is kind of a follow up on https://bz.apache.org/bugzilla/show_bug.cgi?id=56275.\n\nWe get reports from some of our clients using Tomcat 8 (specific version is unknown) regarding class loader leak via \"clBindings\" field of \"org.apache.naming.ContextBindings\" where some \"org.apache.catalina.loader.WebappClassLoader\" are used as keys in that map and are not cleaned after application's undeploy. It seems that similar bug was fixed in Tomcat 6 and 7, but almost the same bug was introduced in Tomcat 8."}, {"text": "This is a symptom of a different problem. It can happen if an uncaught exception is thrown by an earlier LifecycleListener. You'll probably want to speak to your clients to find out what went wrong that triggered the earlier failure.\n\nI'll look add catching and logging such errors to stop them propagating but generally these sorts of errors are indications that something is broken somewhere.", "tags": [], "bug_id": 57939, "is_private": false, "count": 1, "id": 183076, "time": "2015-05-22T14:47:31Z", "creator": "markt@apache.org", "creation_time": "2015-05-22T14:47:31Z", "attachment_id": null}, {"count": 2, "text": "Exceptions will be caught and logged from 8.0.24 onwards.", "bug_id": 57939, "attachment_id": null, "id": 183077, "time": "2015-05-22T15:09:08Z", "creator": "markt@apache.org", "creation_time": "2015-05-22T15:09:08Z", "tags": [], "is_private": false}, {"count": 3, "tags": [], "bug_id": 57939, "attachment_id": null, "is_private": false, "id": 183091, "time": "2015-05-23T15:58:11Z", "creator": "rainer.jung@kippdata.de", "creation_time": "2015-05-23T15:58:11Z", "text": "The fix had to be reverted. Another fix is needed."}, {"count": 4, "tags": [], "bug_id": 57939, "attachment_id": null, "is_private": false, "id": 183118, "time": "2015-05-27T07:14:51Z", "creator": "markt@apache.org", "creation_time": "2015-05-27T07:14:51Z", "text": "The original fix (log a lifecycle listener exception and continue) didn't work since lifecycle exceptions are expected to be fatal.\n\nI've taken a longer look at the code and an exception in a lifcycle listener is still the only way I can see this happening. That should result in at least one log entry with a stack trace and the web application ending up in the failed state. Under these conditions, a memory leak isn't a surprise and it is the root cause (of the failed lifecycle listener) that needs to be addressed.\n\nFor now I am reslving this as invalid but please feel free to re-open this issue if any of the following are the case:\n- no stack trace is logged (with default logging levels)\n- the web application is not marked as failed\n- the error is recoverable but the memory leak remains\n\nFor any of these please provide the exact steps to reproduce the error form a clean install of the latest stable Tomcat 8 release. If a web applciation is required to reproduce it, please keep the web application as simple as possible."}]