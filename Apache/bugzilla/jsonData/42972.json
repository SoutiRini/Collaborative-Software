[{"count": 0, "tags": [], "bug_id": 42972, "is_private": false, "text": "mod_ssl re-uses its module context for each request/connection.\n\nExample:\nstatic void ssl_init_ctx_cipher_suite(server_rec *s,\n                                      apr_pool_t *p,\n                                      apr_pool_t *ptemp,\n                                      modssl_ctx_t *mctx)\n{\n    SSL_CTX *ctx = mctx->ssl_ctx;\n\nThis context is accessed as \"read only\" and can therefore been shared between\nthreads. OpenSSL uses mutexes when accessing global objects (e.g. random\ngeneration).\n\nThe problem I encounter: the server certificates are stored in OpenSSL stacks.\nThe objects in this stack need to be sorted when they get accessed the very\nfirst time (sk_find() brings the objects in the right order using qsort()).\n\nStack trace:\n   ssl_io_filter_input()\n   ssl_io_filter_connect()\n   SSL_accept()\n   ssl23_accept()\n   ssl23_get_client_hello()\n   SSL_accept()\n   ssl3_accept()\n   ssl3_send_server_certificate()\n   ssl3_output_cert_chain()\n   X509_STORE_get_by_subject()\n   X509_OBJECT_retrieve_by_subject()\n   X509_OBJECT_idx_by_subject()\n   sk_find()\n   internal_find()\n   sk_sort()\n   qsort()\n   x509_object_cmp()\n\nWhen starting multiple requests (new ssl handshakes) in parallel right after a\nserver restart, the server might crash due multiple threads are accessing the\ncertificate stack which has not been sorted yet (segmentation fault in\nx509_object_cmp() due the move of the certificate objects in the stack order).\n\nPossible workaround:\nManual sort of the stacks in the ssl context at server startup, e.g. in mod_ssl\nssl_init_ctx_verify()\n\nExample:\n if(ctx->cert_store->objs->comp) {\n      sk_sort(ctx->cert_store->objs);\n }\n\nImpact of this issue is not very high due:\n- it can only happen after a server restart\n- may cause a crash of one single server child process\n- happens only in a multithreaded environment (MPM worker)", "id": 105937, "time": "2007-07-25T05:50:18Z", "creator": "pascal.buchbinder@united-security-providers.ch", "creation_time": "2007-07-25T05:50:18Z", "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 42972, "text": "change subject from \"Certificate list in mod_ssl module context are not sorted\"\nto \"Certificate list in mod_ssl module context are not sorted, causes segfault\"", "id": 108699, "time": "2007-09-27T00:07:54Z", "creator": "pascal.buchbinder@united-security-providers.ch", "creation_time": "2007-09-27T00:07:54Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 42972, "attachment_id": null, "text": "Can you please provide a backtrace of the crash (see\nhttp://httpd.apache.org/dev/debugging.html)?", "id": 108701, "time": "2007-09-27T00:13:33Z", "creator": "rpluem@apache.org", "creation_time": "2007-09-27T00:13:33Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 42972, "attachment_id": null, "is_private": false, "id": 108702, "time": "2007-09-27T00:36:26Z", "creator": "pascal.buchbinder@united-security-providers.ch", "creation_time": "2007-09-27T00:36:26Z", "text": "   ssl_io_filter_input()\n   ssl_io_filter_connect()\n   SSL_accept()\n   ssl23_accept()\n   ssl23_get_client_hello()\n   SSL_accept()\n   ssl3_accept()\n   ssl3_send_server_certificate()\n   ssl3_output_cert_chain()\n   X509_STORE_get_by_subject()\n   X509_OBJECT_retrieve_by_subject()\n   X509_OBJECT_idx_by_subject()\n   sk_find()\n   internal_find()\n   sk_sort()\n   qsort()\n=> x509_object_cmp()"}, {"count": 4, "tags": [], "bug_id": 42972, "is_private": false, "id": 108705, "creation_time": "2007-09-27T01:07:45Z", "time": "2007-09-27T01:07:45Z", "creator": "rpluem@apache.org", "text": "It would be helpful to have one with line numbers and the parameters supplied to\nthe functions.", "attachment_id": null}, {"attachment_id": null, "tags": [], "creator": "pascal.buchbinder@united-security-providers.ch", "text": "Well, it does not matter where the segmentation fault happens. The problem is,\nthat the object (openssl stack objects withn the ssl context) is shared between\nprocesses/threads. This object is accessed readonly only, therefore no mutex is\nrequired when accessing it. The problem is, that openssl does a sort (changing\nthe order of the objects within the stack for fast access) when accessing the\nstack the very first time. In order to prevent this sort when accessing the\nstack from multiple parallel request, I suggest to force a stack sort at server\nstartup (right after all certificates has been loaded), e.g. in the function\nssl_init_ctx_verify().\n\nWell, this is a minor change request at all (the worst thing that happens is\nprobably a segfault by some child processes at sever startup).\n\nMany thanks...", "count": 5, "id": 108716, "time": "2007-09-27T06:34:15Z", "bug_id": 42972, "creation_time": "2007-09-27T06:34:15Z", "is_private": false}, {"count": 6, "tags": [], "bug_id": 42972, "text": "I'm apparently experiencing the same problem:\n\n# apache2ctl restart\n/usr/sbin/apache2ctl: line 83: 14407 Segmentation fault      $HTTPD ${APACHE_ARGUMENTS} -t 2>/dev/null\n/usr/sbin/apache2ctl: line 83: 14388 Segmentation fault      $HTTPD ${APACHE_ARGUMENTS} -t\n\n# apache2 -v\nServer version: Apache/2.2.8 (Debian)\nServer built:   Jan 17 2008 21:31:10\nSegmentation fault\n\nI'm running gcc 4.1.3, everything's 64bit.\n\nIf possible, I will provide whatever information is needed, as directed.", "id": 115184, "attachment_id": null, "creator": "dzhonw@mail.ru", "creation_time": "2008-04-01T05:39:42Z", "time": "2008-04-01T05:39:42Z", "is_private": false}]