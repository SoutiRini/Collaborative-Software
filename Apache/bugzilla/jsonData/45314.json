[{"count": 0, "tags": [], "bug_id": 45314, "attachment_id": null, "text": "When using -Djava.rmi.server.hostname=xxx.xxx.xxx.xxx with jmeter-server, I expected the server to bind to that address.  Instead it binds to all addresses. This means that if you run multiple jmeter-server processes (even with different addresses), they each need a different port.  This is not so much an issue, however, when sending requests, the jmeter-server uses the default address and not the java.rmi.server.hostname as the client address.  This makes it near impossible to have a single load generation machine that generates traffic from multiple IP addresses.\n\nIs there another way to generate traffic from multiple client IPs without having multiple physical machines and/or NICs?", "id": 118116, "time": "2008-06-30T10:12:10Z", "creator": "Brian.Rectanus@breach.com", "creation_time": "2008-06-30T10:12:10Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 45314, "is_private": false, "id": 118147, "creation_time": "2008-07-01T05:25:46Z", "time": "2008-07-01T05:25:46Z", "creator": "sebb@apache.org", "text": "> however, when sending requests, the jmeter-server uses the\n> default address and not the java.rmi.server.hostname as the client address. \n>\n> This makes it near impossible to have a single load generation machine that\n> generates traffic from multiple IP addresses.\n> \n> Is there another way to generate traffic from multiple client IPs without\n> having multiple physical machines and/or NICs?\n> \n\nThis is nothing to do with acting as a server - it is purely a client setting.\n\nUse the HttpClient sampler and set the appropriate property for the client in jmeter.properties:\n\n# Define the local host address to be used for multi-homed hosts\n#httpclient.localaddress=1.2.3.4", "attachment_id": null}]