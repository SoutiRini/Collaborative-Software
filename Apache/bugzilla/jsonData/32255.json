[{"count": 0, "tags": [], "bug_id": 32255, "attachment_id": null, "text": "I am using poi-2.5.1-final-20040804.\n\nI create a spreadsheet which contains a Hyperlink formula. If the label that is 128 characters or less, \neverything works perfectly. If the label is greater than 128 characters, an \nArrayIndexOutOfBoundsException is thrown when the workbook is written to a file.\n\nThis exception should either be not thrown at all, or thrown earler when the formula is being \nconstructed. \n\nHere is the stack trace:\n\nException in thread \"main\" java.lang.ArrayIndexOutOfBoundsException: 1645\n        at org.apache.poi.util.StringUtil.putCompressedUnicode(StringUtil.java:196)\n        at org.apache.poi.hssf.record.formula.StringPtg.writeBytes(StringPtg.java:97)\n        at org.apache.poi.hssf.record.FormulaRecord.serializePtgs(FormulaRecord.java:407)\n        at org.apache.poi.hssf.record.FormulaRecord.serialize(FormulaRecord.java:361)\n        at \norg.apache.poi.hssf.record.aggregates.FormulaRecordAggregate.serialize(FormulaRecordAggregate.java\n:84)\n        at \norg.apache.poi.hssf.record.aggregates.ValueRecordsAggregate.serialize(ValueRecordsAggregate.java:\n153)\n        at org.apache.poi.hssf.model.Sheet.serialize(Sheet.java:815)\n        at org.apache.poi.hssf.usermodel.HSSFWorkbook.getBytes(HSSFWorkbook.java:794)\n        at org.apache.poi.hssf.usermodel.HSSFWorkbook.write(HSSFWorkbook.java:732)\n        at ExcelHyperlink.main(ExcelHyperlink.java:34)\n\n\nHere is the test program. Run this with a single argument of length > 128 to cause the exception to be \nthrown.\n\nimport java.util.*;\nimport java.io.*;\nimport org.apache.poi.hssf.usermodel.*;\n\n/**\n * This class uses POI to create an XLS file which cannot be read by\n * Microsoft Excel.\n *\n * @author <a href=\"mailto:jesse@swank.ca\">Jesse Wilson</a>\n */\npublic class ExcelHyperlink {\n    \n    public static void main(String[] args) throws IOException {\n        if(args.length != 1) {\n            System.out.println(\"Usage: ExcelHyperlink label\");\n            return;\n        }\n        \n        // create a workbook, sheet, row and cell\n        HSSFWorkbook workbook = new HSSFWorkbook();\n        String sheetName = \"Page\";\n        HSSFSheet sheet = workbook.createSheet(sheetName);\n        HSSFRow row = sheet.createRow((short)0);\n        HSSFCell cell = row.createCell((short)0);\n        \n        // create a hyperlink in our cell, labelled by the argument\n        String target = \"\\\"#\" + sheetName + \"!B2\\\"\";\n        String label = \"\\\"\" + args[0] + \"\\\"\";\n        String formula = \"HYPERLINK(\" + target + \", \" + label + \")\";\n        cell.setCellFormula(formula);\n\n        // write the file\n        FileOutputStream xlsOut = new FileOutputStream(new File(\"hyperlink.xls\"));\n        workbook.write(xlsOut);\n        xlsOut.close();\n    }\n}", "id": 66955, "time": "2004-11-15T21:33:21Z", "creator": "jesse@swank.ca", "creation_time": "2004-11-15T21:33:21Z", "is_private": false}, {"count": 1, "tags": [], "text": "Latest SVN code works a treat\n\nJason", "attachment_id": null, "bug_id": 32255, "id": 92572, "time": "2006-08-27T11:04:50Z", "creator": "jheight@apache.org", "creation_time": "2006-08-27T11:04:50Z", "is_private": false}]