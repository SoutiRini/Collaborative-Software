[{"count": 0, "tags": [], "text": "if you create a zipfileset from a jar, then use the refid of that zipfileset in \nthe fileset inside the junit batchtest task AND you are using the xml formatter, \nthe batchtest will fail..\n\nIt does not appear to be correctly replacing file separators with dots (.) so it \nends up trying to run a test on a a file with file separators in it\n\nExample build.xml snippet and associated output:\n\n<target name=\"test\">\n\t\n\t<!-- Set up zipfilesets -->\n\t<zipfileset id=\"zip_set\" src=\"jars/some_jar.jar\" includes=\"**/*Test.\nclass\"/>\n\t\n\t<junit>\n\t\t<classpath>\n\t\t\t....\n\t\t</classpath>\n\t\t\n\t\t<formatter type=\"brief\"/>\n\t\t\n\t\t<batchtest todir=\"test\">\n\t\t\t<fileset refid=\"zip_set\"/>\n\t\t</batchtest>\n\t\n\t</junit>\n\t\n</target>\n\nOutput - assume the jar file contains one matching test: \"my/package/MyTest.\nclass\":\n\ntest:\n    [junit] Testsuite: my/package/MyTest\n    [junit] Tests run: 1, Failures: 0, Errors: 1, Time elapsed: 0 sec\n\n    [junit] Null Test:  Caused an ERROR\n    [junit] my/package/MyTest\n    [junit] java.lang.ClassNotFoundException: my/package/MyTest\n    [junit]     at java.lang.Class.forName0(Native Method)\n    [junit]     at java.lang.Class.forName(Unknown Source)\n\n\n    [junit] Test my/package/MyTest FAILED\n\n-Mike", "is_private": false, "bug_id": 35499, "id": 76699, "time": "2005-06-24T16:34:55Z", "creator": "msnare@nc.rr.com", "creation_time": "2005-06-24T16:34:55Z", "attachment_id": null}, {"count": 1, "tags": [], "creator": "jkf@apache.org", "attachment_id": null, "id": 76708, "time": "2005-06-25T11:06:00Z", "bug_id": 35499, "creation_time": "2005-06-25T11:06:00Z", "is_private": false, "text": "The bug report contains a testcase showing the problem with the brief formatter,\nwhile the description claims it only occurs with the xml formatter. Too bad the\nclasspath is left out, as I suspect the cause is that the classpath is lacking\nthe jar file with the testcases.\n\n\nWhen running\n\n<project name=\"blah\" basedir=\".\" default=\"test\">\n<target name=\"test\">\n\n<zipfileset id=\"zip_set\" src=\"t.jar\" includes=\"**/*Test.class\"/>\n\n<junit>\n<classpath>\n<pathelement location=\"p.jar\"/>\n<pathelement location=\"t.jar\"/>\n</classpath>\n<formatter type=\"brief\"/>\n<batchtest todir=\"test\">\n<fileset refid=\"zip_set\"/>\n</batchtest>\n\n</junit>\n\n</target>\n</project>\n\nI do not get any errors,\n\nwhen not including t.jar on the classpath :\n\n<project name=\"blah\" basedir=\".\" default=\"test\">\n<target name=\"test\">\n\n<zipfileset id=\"zip_set\" src=\"t.jar\" includes=\"**/*Test.class\"/>\n\n<junit>\n<classpath>\n<pathelement location=\"p.jar\"/>\n</classpath>\n<formatter type=\"brief\"/>\n<batchtest todir=\"test\">\n<fileset refid=\"zip_set\"/>\n</batchtest>\n\n</junit>\n\n</target>\n</project>\n\nI get the same problem - Independent of the formatter.\n\nThis is perfectly logical as the test case selected is not on the classpath.\n\nIf this isn't the cause please reopen"}, {"count": 2, "tags": [], "creator": "msnare@nc.rr.com", "attachment_id": null, "text": "(In reply to comment #1)\n\nI still get errors either way.  Do you have any tests that match the filter in \np.jar?\n\n<target name=\"ziptest\">\n\t<zipfileset id=\"zipset\" src=\"jars/cam_core.jar\"  \nincludes=\"**/*Test.class\"/>\t\t\n\t<junit>\n\t\t<!--SAME AS ZIPFILESET-->\n\t\t<classpath id=\"cp\">\n\t\t\t<pathelement location=\"jars/cam_core.jar\"/>\n\t\t</classpath>\n\t\t<formatter type=\"xml\" usefile=\"false\"/>\n\t\t<batchtest todir=\"test\">\n\t\t\t<fileset refid=\"zipset\"/>\n\t\t</batchtest>\t\t\n\t</junit>\n</target>\n\nThe problem appears to be that the classnames still contain slashes, instead of \ndots.  You are correct that it doesn't matter if you use the xml formatter or \nnot.\n\nYou do get a different error based on whether you are using a file or not.  if \nyou are using a file, you get the following with the xml formatter:\n\nD:\\dir\\build.xml:281: java.io.FileNotFoundException: D:\\dir\\test\\TEST-\nmy\\package\\Test.xml (The system cannot find the path specified)\n\nAnd the following with the brief formatter\n\nD:\\dir\\build.xml:281: java.io.FileNotFoundException: D:\\dir\\test\\TEST-\nmy\\package\\Test.txt (The system cannot find the path specified)\n\nIn both cases, note the slashes instead of dots.\n\nIf, however, you set 'usefile' to false on the formatter you get a different \nerror which is the same regardless of formatter type:\n\n    [junit] Null Test:  Caused an ERROR\n    [junit] my/package/Test\n    [junit] java.lang.ClassNotFoundException: my/package/Test\n    [junit]     at java.lang.Class.forName0(Native Method)\n    [junit]     at java.lang.Class.forName(Unknown Source)\n\nAgain, note the slashes instead of dots.", "id": 76735, "time": "2005-06-27T15:22:47Z", "bug_id": 35499, "creation_time": "2005-06-27T15:22:47Z", "is_private": false}, {"count": 3, "attachment_id": null, "bug_id": 35499, "is_private": false, "id": 76744, "time": "2005-06-27T20:00:30Z", "creator": "jkf@apache.org", "creation_time": "2005-06-27T20:00:30Z", "tags": [], "text": "Bug confirmed in ant 1.6.2 on windows XP\n\nFixed in head\n"}]