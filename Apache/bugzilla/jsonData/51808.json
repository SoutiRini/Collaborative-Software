[{"count": 0, "tags": [], "bug_id": 51808, "attachment_id": null, "id": 149210, "time": "2011-09-14T11:11:22Z", "creator": "vlsergey@gmail.com", "creation_time": "2011-09-14T11:11:22Z", "is_private": false, "text": "It is usual for Area::props to have 1-2 properties, not 20. From other point, 20 seems to be max cap. To prevent memory waste HashMap(20) should be replaced with TreeMap()."}, {"text": "feel free to propose a patch; in the mean time, closing due to lack of action", "tags": [], "creator": "gadams@apache.org", "is_private": false, "count": 1, "id": 157186, "time": "2012-04-04T22:15:43Z", "bug_id": 51808, "creation_time": "2012-04-04T22:15:43Z", "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 51808, "attachment_id": null, "id": 157209, "time": "2012-04-05T05:04:37Z", "creator": "gadams@apache.org", "creation_time": "2012-04-05T05:04:37Z", "is_private": false, "text": "on further consideration, Sergey, if you could provide some data that shows relative gain/loss in heap use and processing time for an large FO file of 'typical' complexity when using the current code HashMap(20) versus TreeMap, then I would be inclined to make this change (assuming the data favors TreeMap);"}, {"text": "analysis shows that 98% of trait maps contain 3 entries with remainder containing 1 entry; changing to tree map results in a 2% memory savings compared to overall usage by java.util.* classes at IFDocumentHandler.endPage() call time; time performance also improved (marginally) with tree map, so there are no negatives in making this change\n\nsee http://svn.apache.org/viewvc?view=revision&revision=1310524", "tags": [], "creator": "gadams@apache.org", "is_private": false, "count": 3, "id": 157240, "time": "2012-04-06T18:12:57Z", "bug_id": 51808, "creation_time": "2012-04-06T18:12:57Z", "attachment_id": null}]