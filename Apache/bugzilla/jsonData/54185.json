[{"count": 0, "tags": [], "bug_id": 54185, "attachment_id": 29620, "id": 163580, "creation_time": "2012-11-21T19:05:05Z", "time": "2012-11-21T19:05:05Z", "creator": "youngka@gmail.com", "text": "Created attachment 29620\nPatch to allow query strings in paths starting with HTTP or HTTPS\n\nI ran into a situation where an authorization server needed to have the default port for https included as part of the URL.  Since the default behaviour is to suppress default ports from being included in the generated URL I decided to leverage the behaviour of the path property to treat any path that starts with HTTP or HTTPS as the whole URL.  \n\nUnfortunately this doesn't stop parseArguments() from being called.  The attached patch changes the behaviour to not call parseArguments if the path starts with HTTP or HTTPS (thus allowing query strings to be included as part of the \"complete\" URL as per the API - \"As a special case, if the path starts with  http[s]://\", then the path is assumed to be the entire URL.\").", "is_private": false}, {"count": 1, "tags": [], "creator": "sebb@apache.org", "attachment_id": null, "is_private": false, "id": 163583, "time": "2012-11-21T20:54:25Z", "bug_id": 54185, "creation_time": "2012-11-21T20:54:25Z", "text": "In the meantime, if you use the GUI to provide the full URL it will be used as is.\n\nIf you need to use a pre-processor to calculate the URL, just save it in a variable instead of using setProperty() and reference the variable in the GUI path field."}, {"count": 2, "tags": [], "bug_id": 54185, "attachment_id": null, "id": 163586, "time": "2012-11-21T21:38:09Z", "creator": "sebb@apache.org", "creation_time": "2012-11-21T21:38:09Z", "is_private": false, "text": "Patch slightly refactored and applied with Javadoc update:\n\nURL: http://svn.apache.org/viewvc?rev=1412311&view=rev\nLog:\nAllow query strings in paths that start with HTTP or HTTPS\n(so setPath behaves the same as if the path were set in the GUI)\nBugzilla Id: 54185\n\nModified:\n    jmeter/trunk/src/protocol/http/org/apache/jmeter/protocol/http/sampler/HTTPSamplerBase.java\n    jmeter/trunk/xdocs/changes.xml"}, {"count": 3, "tags": [], "bug_id": 54185, "attachment_id": null, "id": 163598, "time": "2012-11-22T12:58:03Z", "creator": "youngka@gmail.com", "creation_time": "2012-11-22T12:58:03Z", "is_private": false, "text": "(In reply to comment #1)\n> In the meantime, if you use the GUI to provide the full URL it will be used\n> as is.\n> \n> If you need to use a pre-processor to calculate the URL, just save it in a\n> variable instead of using setProperty() and reference the variable in the\n> GUI path field.\n\nThe GUI option doesn't work which led to me making the patch:\n\nIf the port specified is the default port for a protocol (i.e. in my case HTTPS and port 443) then the sampler does not include the port in when it makes the request.\n\nIn my case the receiving server (which I have no control over) actually expects a URL with the following format:\n\nhttps://domain:443/blah/SSO?qsStuff\n\nI added https and 443 in the GUI, but my tests show that the request the sampler is making is:\n\nhttps://domain/blah/SSO?qsStuff\n\nWhich the receiving server throws an internal error on.  \n\nThat's what led me to the path patch.  The other option I considered was a patch to allow \"force port to be included in url\", but it didn't seem as clean."}, {"count": 4, "tags": [], "bug_id": 54185, "is_private": false, "text": "(In reply to comment #3)\n> (In reply to comment #1)\n> > In the meantime, if you use the GUI to provide the full URL it will be used\n> > as is.\n> > \n> > If you need to use a pre-processor to calculate the URL, just save it in a\n> > variable instead of using setProperty() and reference the variable in the\n> > GUI path field.\n> \n> The GUI option doesn't work which led to me making the patch:\n\nAre you sure?\nIt works for me when tested with http: and 80.\n\nHowever, it only works for the HC4 implementation.\nIt looks like the others omit the default port.\n\n> If the port specified is the default port for a protocol (i.e. in my case\n> HTTPS and port 443) then the sampler does not include the port in when it\n> makes the request.\n> \n> In my case the receiving server (which I have no control over) actually\n> expects a URL with the following format:\n> \n> https://domain:443/blah/SSO?qsStuff\n> \n> I added https and 443 in the GUI, but my tests show that the request the\n> sampler is making is:\n> \n> https://domain/blah/SSO?qsStuff\n> \n> Which the receiving server throws an internal error on.  \n> \n> That's what led me to the path patch.  The other option I considered was a\n> patch to allow \"force port to be included in url\", but it didn't seem as\n> clean.\n\nAs far as I can tell, the only effect of the patch is to allow the path to be set to a complete URL programmatically; this is equivalent to setting it in the GUI (which sets the PATH property directly, bypassing the setPath() method).\n\nThe patch does not change how the path is used later.\nSo I don't see how the patch makes a difference, unless there is some other difference between the two tests.", "id": 163602, "time": "2012-11-22T13:37:25Z", "creator": "sebb@apache.org", "creation_time": "2012-11-22T13:37:25Z", "attachment_id": null}]