[{"count": 0, "tags": [], "bug_id": 51294, "attachment_id": null, "text": "In 7.0.12 was added in Changelog this line:\n--\nDon't unpack WAR files if they are not located in the Host's appBase. (markt)\n--\nIt's change method of deployment from older versions of Tomcat (5.5, 6.0, 7.0.11) and forced to change logics on early configured servers.\n\nMay be need to add new parameter like 'unpackExternalWARs=true' to be able to configure this? (Why outside WARs is worse than inside?)", "id": 146750, "time": "2011-05-30T13:04:34Z", "creator": "deadugly@mail.ru", "creation_time": "2011-05-30T13:04:34Z", "is_private": false}, {"attachment_id": null, "tags": [], "bug_id": 51294, "is_private": false, "count": 1, "id": 146757, "time": "2011-05-31T08:30:13Z", "creator": "markt@apache.org", "creation_time": "2011-05-31T08:30:13Z", "text": "The documented and intended behaviour of unpackWARs is that it only applies to WARs in the appBase.  This is true for 5.5.x, 6.0.x and 7.0.x.\n\nUnpacking WARs from outside the appBase into the appBase should be possible but adds complexity to the autoDeploy process that I am not convinced is worth it.\n\nIf an app needs to be unpacked there are two options:\n- deploy the WAR in the appBase with unpackWARs=true\n- deploy outside the appBase using a directory rather than a WAR"}, {"count": 2, "tags": [], "bug_id": 51294, "attachment_id": null, "text": "What about Context Container documentation:\n\nunpackWAR: If true, Tomcat will unpack all compressed web applications before running them. If not specified, the default value is true.\n\nWhen I use <Context path=\"/app\" docBase=\"${home}/war/app.war\"/> I can't find unpacked WAR content in appBase and see only part of WAR in WORK directory (only libs and something from META-INF)", "id": 146765, "time": "2011-05-31T13:19:59Z", "creator": "deadugly@mail.ru", "creation_time": "2011-05-31T13:19:59Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 51294, "attachment_id": null, "id": 146814, "time": "2011-06-02T11:22:40Z", "creator": "markt@apache.org", "creation_time": "2011-06-02T11:22:40Z", "is_private": false, "text": "The unpackWAR option of the context is so rarely used I had actually forgotten it even existed.\n\nhttp://tomcat.markmail.org/thread/rk6fw5ooohgiqklu explains why it was introduced. Even then it was as an override to unpackWARs at the host level.\n\nThe original intention, the current implementation and the current documentation are all different. For now, I'm going to take the easy way out which is to align the documentation with the current implementation. I'm not against changing the implementation to reflect the original intention but that probably needs some discussion on the users list as to what behaviour makes most sense.\n\nI don't see any of the WAR unpacking options being changed to trigger the unpacking of an external WAR in the appBase without a strong use case that can't be met by alternative configurations."}, {"count": 4, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "text": "Docs updated in 7.0.x and will be included in 7.0.15 onwards.", "id": 146816, "time": "2011-06-02T13:09:55Z", "bug_id": 51294, "creation_time": "2011-06-02T13:09:55Z", "is_private": false}, {"count": 5, "tags": [], "creator": "deadugly@mail.ru", "text": "Strange choice method of what must be fixed...\nHere [http://webcache.googleusercontent.com/search?q=cache:PnXpxLit9OwJ:osdir.com/ml/users-tomcat.apache.org/2011-04/msg00351.html&cd=4&hl=ru&ct=clnk&gl=ru&source=www.google.ru] You fix sources to be compliant to documentation, in my bug request You fix documentation to be compliant to sources... Where is truth? Truth is out there...", "id": 146821, "time": "2011-06-02T17:11:35Z", "bug_id": 51294, "creation_time": "2011-06-02T17:11:35Z", "is_private": false, "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 51294, "is_private": false, "count": 6, "id": 148526, "time": "2011-08-10T14:14:11Z", "creator": "archmisha@gmail.com", "creation_time": "2011-08-10T14:14:11Z", "text": "I have the same problem when upgraded to the new version.\n\nBut reviewing the following documentation link:\nhttp://tomcat.apache.org/tomcat-7.0-doc/config/host.html#Automatic%20Application%20Deployment\nSection \"Automatic Application Deployment\" explicitly states: \"...The docBase attribute of this <Context> element must only be set if the docBase is outside the Host's appBase....\"\n\nWhat resolution you proposed in our case?"}, {"count": 7, "tags": [], "bug_id": 51294, "attachment_id": null, "id": 152344, "time": "2011-12-20T21:45:01Z", "creator": "tiago.tuxkiller@gmail.com", "creation_time": "2011-12-20T21:45:01Z", "is_private": false, "text": "I also have this problem with tomcat >= 7.0.12 :/\n\nIs this configuration possible? (unpackExternalWARs=true) :D\n\n'Cause to use with configuration management (puppet, chef e etc) its easier to put the .war up-to-date in one directory and use a Context with one docBase using the full path of application.\n\nThanks!"}, {"count": 8, "tags": [], "creator": "knst.kolinko@gmail.com", "text": "Recent discussion on dev (Re: r1080719):\nhttp://tomcat.markmail.org/thread/q6lfopguhnedtbzt", "id": 152848, "time": "2012-01-17T16:03:46Z", "bug_id": 51294, "creation_time": "2012-01-17T16:03:46Z", "is_private": false, "attachment_id": null}, {"count": 9, "tags": [], "bug_id": 51294, "text": "This if is a major show stopper. It was working fine before, why 'fix' it?\n\nWe are currently investigating into upgrading from Tomcat 6 to Tomcat 7.\nWe have HUNDREDS of Tomcat application running. Some of require to be able to manipulate the webapps content at runtime.  Due to the amount of instance to manage, we link our war outside the webapp for better management.\n\nThis 'fix' break any Tomcat server that require an unpacked war and use any management tools to manage their configuration and data.\n\nAs mentioned by another user, there should be an option to allow unpacking a WAR located outside of the Webapps.\n\nIt was mentioned in another thread the reason it isn't so is it complicate the autodeploy.  Well, make those feature mutually exclusive. You cannot use autoDeploy if unpackWarOutsideWebapp is true.  I know we don't use autoDeploy for security reason.\n\nWe're strongly thinking of stopping the Tomcat 7 migration project and stick to Tomcat 6 until the EOL if this 'fix' is not rollabacked or offer a workaround.\n\nNowhere in the documentation of Tomcat 6 was it mentioned the war need to be in the Webapp to be unpacked. I haven't found any specification mentioning that this has to be that way too. So changing this behaviour without first consulting people and on an haunch really was a bad move.\n\nIf it's working, don't fix it.  Right now, it's broken for a tomcat instance fully relying on configuration files to manage context and deployment.", "id": 153372, "time": "2012-02-02T15:05:37Z", "creator": "pbusque@mediagrif.com", "creation_time": "2012-02-02T15:05:37Z", "is_private": false, "attachment_id": null}, {"count": 10, "tags": [], "bug_id": 51294, "text": "(In reply to comment #9)\n> Nowhere in the documentation of Tomcat 6 was it mentioned the war need to be in\n> the Webapp to be unpacked. I haven't found any specification mentioning that\n> this has to be that way too. So changing this behaviour without first\n> consulting people and on an haunch really was a bad move.\n\nThe Tomcat documentation for the host element has contained variations of the following since the 6.0.0 tag (and probably earlier but I didn't go back into the 5.5.x series):\n<quote>\nupackWARs: Set to true if you want web applications that are placed in the appBase directory as web application archive (WAR) files to be unpacked into a corresponding disk directory structure, false to run such web applications directly from a WAR file.\n</quote>\n\nThe Servlet specification is quite clear that applications should not rely on running in expanded form on a file system. If I recall correctly, it mentions that they might be located in a database.\n\nThe behaviour if the WAR is placed outside the appBase was undefined until 7.0.12 where it was defined that they would not be expanded due, as you say, to complications this creates for auto-deployment.\n\nThe simplest work-around is to deploy as an expanded directory rather than as a WAR or deploy into the appBase.\n\n\nI'm moving this issue to an enhancement. Any patch that addresses this needs to take account of the various edge cases as per the referenced discussions.", "id": 153373, "time": "2012-02-02T16:24:46Z", "creator": "markt@apache.org", "creation_time": "2012-02-02T16:24:46Z", "is_private": false, "attachment_id": null}, {"count": 11, "tags": [], "bug_id": 51294, "attachment_id": null, "id": 159297, "time": "2012-05-24T18:03:55Z", "creator": "aash@stdio.com", "creation_time": "2012-05-24T18:03:55Z", "is_private": false, "text": "This is a huge deal.  It totally screws with our ability to manage our war versions.  Why go fixing something that isn't broken?   You just removed our ability to do hot fixes and tests on a live system, and still be able to manage our war versions.\n\nCan anyone demonstrate how to unpack an external war to the ROOT context?  I was trying that as an alternative, and nothing worked.  It worked fine unpacking to any other context, but that's utterly useless for me."}, {"count": 12, "tags": [], "bug_id": 51294, "attachment_id": null, "text": "Have you tried using the 'jar' command?", "id": 159305, "time": "2012-05-24T20:39:01Z", "creator": "bugzilla@pidster.com", "creation_time": "2012-05-24T20:39:01Z", "is_private": false}, {"attachment_id": null, "tags": [], "creator": "aash@stdio.com", "is_private": false, "count": 13, "id": 159306, "time": "2012-05-24T20:47:41Z", "bug_id": 51294, "creation_time": "2012-05-24T20:47:41Z", "text": "(In reply to comment #12)\n> Have you tried using the 'jar' command?\n\nyes.. when i unpack into a  webapps/foobar it works fine.  the problem is that is must run on the root context, so when i unpack it into webapps/ROOT, it ignores it."}, {"attachment_id": null, "tags": [], "creator": "bugzilla@pidster.com", "is_private": false, "count": 14, "id": 159307, "time": "2012-05-24T21:09:05Z", "bug_id": 51294, "creation_time": "2012-05-24T21:09:05Z", "text": "That sounds like a different problem, please ask on the Tomcat Users list."}, {"count": 15, "tags": [], "bug_id": 51294, "text": "Not expanding and having no option to expand external war files is a major inconvenience for us as well.\nThe fact that the unpackWAR attribute in the context, when explicitly set to true, does not result in the war being unpacked is very unintuitive.  It would normally expect that an explicit setting on that should trump all other defaults/behavior.\n\nHowever as a workaround, I have found that making an appropriately named symlink inside the webapps directory pointing to the external war seems to suffice.  This may be an acceptable long term solution.", "id": 161993, "time": "2012-09-06T15:26:27Z", "creator": "jwa@urbancode.com", "creation_time": "2012-09-06T15:26:27Z", "is_private": false, "attachment_id": null}, {"count": 16, "tags": [], "bug_id": 51294, "text": "If using a relative path in docBase attribute, unpackWARs will still work in Tomcat 7. Should also be working on absolute paths.", "id": 166698, "time": "2013-04-18T22:02:44Z", "creator": "ah@softdecc.com", "creation_time": "2013-04-18T22:02:44Z", "is_private": false, "attachment_id": null}, {"attachment_id": null, "tags": [], "creator": "markt@apache.org", "is_private": false, "count": 17, "id": 166699, "time": "2013-04-18T22:26:07Z", "bug_id": 51294, "creation_time": "2013-04-18T22:26:07Z", "text": "(In reply to comment #16)\n> If using a relative path in docBase attribute, unpackWARs will still work in\n> Tomcat 7. Should also be working on absolute paths.\n\nNo, it should not work with relative paths (until this enhancement is implemented) for the same reasons it was disabled for absolute paths. See the thread in comment #8 for the explanation of why this was disabled."}, {"attachment_id": null, "tags": [], "bug_id": 51294, "is_private": false, "count": 18, "id": 166700, "time": "2013-04-19T09:24:31Z", "creator": "ah@softdecc.com", "creation_time": "2013-04-19T09:24:31Z", "text": "But it does work. I used it at one of my customers and I also reproduced the behavior locally."}, {"count": 19, "tags": [], "text": "The problem is deploying to ROOT context has only a handful of options and these options are difficult to use.  And this is the most common context to deploy to.  What we want is the ability to copy our war file up to a directory without manually manipulating it (ie renaming it, unpacking it, etc), copy a file to a path to map it to a context without having to modify a file owned by TC, and let tomcat unpack it for us.\n\nThe only options we have right now are:\n\n   1. Rename our war file to ROOT.war and put it in the webapps folder.\n   2. Put the war file external to webapps, and put an application context descriptor file under Catalina/localhost to point to the external war mapping it to the root context.  \n   3. The final option is to modify server.xml file to add the context mapping and put the external war file in there.\n\nWell the first option sucks and really the only one that works now because we can't keep our name and version information intact.  No build process out there outputs ROOT.war so that's a manual step we have to perform to make this work.  And you have do several steps on the server to make it work.  You can't just use scp to copy the file up and restart.\n\nThe second option sucks because TC will let you set the ROOT context using a file under Catalina/localhost, but it refuses to extract the war file because its an external war file.\n\nThe third option sucks because you can't automate easily, but also suffers from external war file unpacking problem.  And this is in bold to not do in the TC docs.\n\nWhat is left writing lots of specialized deployment code to force us to manually extract the war files ourselves.  Why not just make the whole process straight forward?  What are all of these features not uniform and straight forward?  I don't think the problem is external vs internal unpacking.  It's the whole freaking process of deploying a war file and mapping that onto a URL of our choosing without modifying the internals of TC or changing our output.\n\nWhat would be super straight forward and simple is.  Copy the war file up to a folder (maybe webapps, any folder, etc), and deploy a config file (like a context file) that can map the war file to a URL including ROOT path, specify if a war file should be unpacked or not, redeploy, etc.  Something like this:\n\n<Context url=\"\"\n         docBase=\"/opt/somepath/myspecialapp-1.0.war\"\n         unpack=\"true\"\n         redeploy=\"true\" \n         debug=\"1\" \n         privileged=\"true\"/>\n\nOr relative to webapps\n\n<Context url=\"\"\n         docBase=\"myspecialapp-1.0.war\"\n         unpack=\"true\"\n         debug=\"1\"\n         priviledged=\"true\"/>\n\nIt just so straight forward it makes me want to cry that TC right now is so confusing with all of these terrible options we have.  If you make the process straight forward the code will clean itself up because it's simple.  I think TC has so many options for deployment that are worthless it made the code complex.  It's just you took away one of the useful features for bad reasons.", "is_private": false, "id": 167155, "creator": "charlie.hubbard@gmail.com", "time": "2013-05-12T23:05:09Z", "bug_id": 51294, "creation_time": "2013-05-12T23:05:09Z", "attachment_id": null}, {"count": 20, "tags": [], "creator": "charlie.hubbard@gmail.com", "attachment_id": null, "id": 167158, "time": "2013-05-12T23:26:34Z", "bug_id": 51294, "creation_time": "2013-05-12T23:26:34Z", "is_private": false, "text": "Why didn't you just clean up the docs and make the docs match the code instead of changing the code to match the docs?  Seems like a lot less work to type in a paragraph in the docs than change code!  Look at how much more typing everyone on the internet has now done in response to this change!  The rest of the reasons for changing code that I read didn't make a compelling reason to change it other than it might have simplified the code.  Well of course it did a feature was removed.  It's not like it was refactored.  Code was just deleted."}, {"count": 21, "tags": [], "bug_id": 51294, "text": "(In reply to comment #19)\nIf the requirement is to just copy the WAR, deploy it as ROOT and retain version information in the file name you can name the file ROOT##version-information-here.war\n\nThe version marker after the ## is used in parallel deployment but it can still be used even if you have a single version deployed and specifying it in that case has no negative consequences.\n\n> Why not just make the whole process straight forward?\n\nI'd love to but you aren't the only user of Tomcat. What might seem simple to you may be the exact opposite of what another user wants.\n\n> What are all of these features not uniform and straight forward?\n\nI do think there are issues with clarity and consistency with automatic deployment. This stems from a lack of definition of how automatic deployment is meant to behave (particularly around the many edge cases) and also from the changes over time that have tried to address the issues for one group of users that have usually created problems for another.\n\n> I don't think the problem is external vs internal unpacking.\n\nThen you haven't fully understood the problem. There are additional edge cases created by supported unpacking of external WARs that need to be thought through. \n\n> What would be super straight forward and simple is.  Copy the war file up to\n> a folder (maybe webapps, any folder, etc), and deploy a config file (like a\n> context file) that can map the war file to a URL including ROOT path,\n> specify if a war file should be unpacked or not, redeploy, etc.\n\nBreaking the linkage from XML / WAR / DIR name to context path creates multiple problems for automatic deployment around name clashes that would require far more complexity to solve. I don't see any implementation along those lines ever being accepted.\n\n> It just so straight forward it makes me want to cry that TC right now is so\n> confusing with all of these terrible options we have.  If you make the\n> process straight forward the code will clean itself up because it's simple. \n\nI agree a simple process will result in simple code but what you are proposing is not simple.\n\n> I think TC has so many options for deployment that are worthless it made the\n> code complex.\n\nAgain, you are not the only user of Tomcat. There are other users that do find the features useful and they presented a strong enough case to the community to convince the committers that the feature would be of useful.\n\n> It's just you took away one of the useful features for bad reasons.\n\nI removed an undocumented feature you had been relying on because of the complications is caused for automatic deployment. You might not like that decision but the tone of your comment is not likely to help your case.\n\nI'd like to remind folks reading this that this is open source with an open development process. If you want to see this enhancement request implemented, constructive contributions are far more likely to achieve the results you desire. A discussion [1] is already underway on the dev list about proposed changes [2] to automatic deployment covering:\n- creating a clear definition of the expected behaviour of automatic deployment\n- ensuring that the behaviour of automatic deployment is logical and consistent\n- implementing this enhancement request\n\nIf you want to move this enhancement request forward, constructive contributions to that thread and constructive criticisms of the proposed new behavior are the way to do it.\n\n[1] http://tomcat.markmail.org/thread/zmcxxfqbb3p4qft5\n[2] http://people.apache.org/~markt/dev/auto-deployment-proposed.txt", "id": 167163, "time": "2013-05-13T08:07:18Z", "creator": "markt@apache.org", "creation_time": "2013-05-13T08:07:18Z", "is_private": false, "attachment_id": null}, {"attachment_id": null, "tags": [], "creator": "markt@apache.org", "is_private": false, "count": 22, "id": 167164, "time": "2013-05-13T08:32:56Z", "bug_id": 51294, "creation_time": "2013-05-13T08:32:56Z", "text": "(In reply to comment #20)\n> Why didn't you just clean up the docs and make the docs match the code\n> instead of changing the code to match the docs?\n\nAgain, because this undocumented behavior created a lot of edge cases that weren't handled by the automatic deployment code.\n\n> Seems like a lot less work to type in a paragraph in the docs than change code!\n\nThe options, with the one requiring the least effort first were:\n1. add a check to the code to prevent the undocumented behaviour\n2. modify the docs to reflect the current behaviour highlighting the various edge cases that it could cause and explaining how to avoid them\n3. implement the requested feature properly with the edge cases all thought through and update the docs to add the new feature\n\n1 was implemented at the time. This enhancement request is for 3.\n\n\n> Look at how much more\n> typing everyone on the internet has now done in response to this change! \n\nAnd it is a pity so little of it has been constructive. If the same efforts had been directed towards constructive ends this issue would be closer to being resolved.\n\n> The rest of the reasons for changing code that I read didn't make a\n> compelling reason to change it other than it might have simplified the code.\n\nYou misunderstand the simplification argument. Prior to the change, external WARs were unpacked but this was neither the intended nor the documented behaviour. Unpacking external WARs creates additional edge cases that needed to be thought through and correctly handled. That would have required a reasonable amount of change to code that is already fairly complex. The simpler option was to prevent this unintended behaviour until such time as this feature could be properly implemented.\n\n> Well of course it did a feature was removed.  It's not like it was\n> refactored.  Code was just deleted.\n\nThe above statement is incorrect. Clearly you made an assumption rather than looked at the source code to see how the change was implemented [1]. Making assumptions like that only serve to damage your credibility and undermine any valid arguments you may be making.\n\n[1] http://svn.apache.org/viewvc/tomcat/tc7.0.x/tags/TOMCAT_7_0_12/java/org/apache/catalina/startup/ContextConfig.java?r1=1079769&r2=1080719&diff_format=h"}, {"attachment_id": null, "tags": [], "bug_id": 51294, "is_private": false, "count": 23, "id": 167190, "time": "2013-05-14T10:32:52Z", "creator": "markt@apache.org", "creation_time": "2013-05-14T10:32:52Z", "text": "An initial implementation of these feature has been added to 8.0.x. It is expected that the implementation will evolve as the test cases are expanded to cover the various edge cases. Once the implementation is complete it will be considered for back port to 7.0.x."}, {"count": 24, "tags": [], "bug_id": 51294, "text": "The implementation work is complete in trunk. Now is the time to test it and provide feedback. It will be proposed to back-ported to 7.0.x after a suitable period (at least several weeks - probably longer) has passed to give folks a chance to thoroughly review the changes.", "id": 167273, "time": "2013-05-17T19:09:54Z", "creator": "markt@apache.org", "creation_time": "2013-05-17T19:09:54Z", "is_private": false, "attachment_id": null}, {"count": 25, "tags": [], "bug_id": 51294, "attachment_id": null, "text": "These fixes are currently being ported to Tomcat 7, to be in 7.0.48.\n\nA note: Do not forget to update the note in the migration guide, once this fix is completed.\nhttp://tomcat.apache.org/migration-7.html#Deployment", "id": 171441, "time": "2013-11-25T22:51:09Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2013-11-25T22:51:09Z", "is_private": false}, {"attachment_id": null, "tags": [], "creator": "markt@apache.org", "is_private": false, "count": 26, "id": 171442, "time": "2013-11-26T00:39:21Z", "bug_id": 51294, "creation_time": "2013-11-26T00:39:21Z", "text": "The back-port of the automatic deployment refactoring has been completed. Support for this feature was part of that refactoring. It will be included in 7.0.48 onwards."}, {"count": 27, "tags": [], "bug_id": 51294, "attachment_id": null, "id": 177096, "time": "2014-08-12T09:48:11Z", "creator": "andrey.zhuk@gmail.com", "creation_time": "2014-08-12T09:48:11Z", "is_private": false, "text": "The wars outside appBase are not unpacked in 7.0.55 although worked in 7.0.54. Can you please clarify if it is an intentional change or a regression?"}, {"count": 28, "tags": [], "creator": "knst.kolinko@gmail.com", "attachment_id": null, "text": "(In reply to Andrei Zhuk from comment #27)\n> The wars outside appBase are not unpacked in 7.0.55 although worked in\n> 7.0.54.\n\nThere is no such change. I have just tested it with 7.0.55 and the feature works. \n\n(I tested both with a separate context xml file and with Context element in server.xml. Both deployments successfully unpacked a war.)\n\nAsk on the users mailing list if you still have problems.", "id": 177097, "time": "2014-08-12T10:11:34Z", "bug_id": 51294, "creation_time": "2014-08-12T10:11:34Z", "is_private": false}, {"count": 29, "tags": [], "bug_id": 51294, "attachment_id": null, "id": 177098, "time": "2014-08-12T10:35:30Z", "creator": "andrey.zhuk@gmail.com", "creation_time": "2014-08-12T10:35:30Z", "is_private": false, "text": "My bad - there was a problem with appBase directory permissions. Everything works. Sorry for confusion."}]