[{"count": 0, "tags": [], "bug_id": 44646, "attachment_id": null, "id": 114815, "time": "2008-03-20T09:33:14Z", "creator": "dan.rabe@oracle.com", "creation_time": "2008-03-20T09:33:14Z", "is_private": false, "text": "We're writing an application that processes requests using both a normal servlet and a CometProcessor. The normal servlet handles user authentication and logout (among other things). Once the user has been authenticated, the client makes a Comet request, which is open until the server has something to push to the client. When the user decides to log out, we need to stop processing Comet events for that client. I enabled the CometConnectionManagerValve in context.xml, hoping I would get an END event when the session goes away. Instead, I get an IllegalStateException:\nMar 10, 2008 2:05:41 PM org.apache.catalina.connector.CoyoteAdapter event\nSEVERE: An exception or error occurred in the container during the request processing\njava.lang.IllegalStateException: Cannot create a session after the response has been committed\n   at org.apache.catalina.connector.Request.doGetSession(Request.java:2301)\n   at org.apache.catalina.connector.Request.getSession(Request.java:2075)\n   at org.apache.catalina.valves.CometConnectionManagerValve.event(CometConnectionManagerValve.java:311)\n   at org.apache.catalina.core.StandardHostValve.event(StandardHostValve.java:179)\n   at org.apache.catalina.valves.ValveBase.event(ValveBase.java:200)\n   at org.apache.catalina.core.StandardEngineValve.event(StandardEngineValve.java:128)\n   at org.apache.catalina.connector.CoyoteAdapter.event(CoyoteAdapter.java:198)\n   at org.apache.coyote.http11.Http11NioProcessor.event(Http11NioProcessor.java:749)\n   at org.apache.coyote.http11.Http11NioProtocol$Http11ConnectionHandler.event(Http11NioProtocol.java:653)\n   at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:2080)\n   at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:885)\n   at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:907)\n   at java.lang.Thread.run(Thread.java:619)\n\nPresumably my servlet handles the \"logout\" request, and after sending a response to the client, calls invalidate() on the HttpSession. Subsequently, CometConnectionManagerValue.event() calls request.getSession(true), resulting in the IllegalStateException."}, {"count": 1, "tags": [], "bug_id": 44646, "attachment_id": null, "is_private": false, "id": 114904, "time": "2008-03-23T16:26:07Z", "creator": "markt@apache.org", "creation_time": "2008-03-23T16:26:07Z", "text": "The problem was wider than just the issue reported here. It should now all be fixed in trunk. The patch is http://svn.apache.org/viewvc?rev=640273&view=rev\n\nI have proposed the patch for 6.0.x."}, {"count": 2, "tags": [], "text": "This has been fixed in svn and will be includedin 6.0.17 onwards.", "is_private": false, "id": 115338, "creator": "markt@apache.org", "time": "2008-04-05T11:37:50Z", "bug_id": 44646, "creation_time": "2008-04-05T11:37:50Z", "attachment_id": null}]