[{"count": 0, "tags": [], "creator": "mhilpert@gmx.de", "text": "As stated in http://xmlgraphics.apache.org/fop/0.95/fonts.html#autodetect I created a JAR file with several TTF fonts:\n\nMETA-INF/manifest.mf\nfrutiger/Frutlieb.ttf\nfrutiger/Frutlieb.ttf\n...\n\nThe manifest describes all of the fonts:\n\n---------------------------------------\nManifest-Version: 1.0\nCreated-By: iComps GmbH\n\nName: frutiger/Frutlieb.ttf\nContent-Type: application/x-font\n\nName: frutiger/Frutliex.ttf\nContent-Type: application/x-font\n...\n---------------------------------------\n\nThe fop config xml resolves the triplet names:\n\n-----------------------------------------\n...\n            <!-- Font: Frutiger LT 45 Light -->\n            <font  kerning=\"yes\" embed-url=\"jar:/frutiger/LTe50327.ttf\">\n                <font-triplet name=\"FrutigerIC\" style=\"normal\" weight=\"normal\"/>\n            </font>\n            <!-- Font: Frutiger LT 65 Bold -->\n            <font  kerning=\"yes\" embed-url=\"jar:/frutiger/LTe50329.ttf\">\n                <font-triplet name=\"FrutigerIC\" style=\"normal\" weight=\"bold\"/>\n            </font>\n            <!-- Font: Frutiger LT 46 Light Italic -->\n            <font  kerning=\"yes\" embed-url=\"jar:/frutiger/LTe50328.ttf\">\n                <font-triplet name=\"FrutigerIC\" style=\"italic\" weight=\"normal\"/>\n            </font>\n            \n             <auto-detect/> \n...\n-----------------------------------------\n\nWithout the \"jar:/\" prefix I got\n\n\"org.apache.fop.apps.FOPException: Failed to resolve font with embed-url 'frutiger/LTe50327.ttf'\"\n\nso I added the \"jar:/\" prefix to get this exception solved.\n\nThen I got \n\n------------------------\nAttempt to resolve URI 'jar:/frutiger/LTe50327.ttf' failed: \n\n    javax.xml.transform.TransformerException: Error with URL; base 'file:/D:/Tmp/reports/WtEAism9Ep7WIKfAqybEX6A0zSz0WMrOUHMOAk3zmtw=/' href 'jar:/frutiger/LTe50327.ttf'\nat org.apache.fop.apps.FOURIResolver.handleException(FOURIResolver.java:91)\n...\n---------------------------------\n\nSo I extended my custom URIResolver to cut the prefix \"jar:/\" - but now I get:\n\n-------------------------------\nFailed to read font metrics file null\n    java.net.MalformedURLException: no protocol: frutiger/LTe50327.ttf\n-------------------------------\n\nUnfortunately, I haven't found any further documentation/examples of how to use fonts from JAR files.", "id": 122210, "time": "2008-11-05T07:49:04Z", "bug_id": 46154, "creation_time": "2008-11-05T07:49:04Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "creator": "jeremias@apache.org", "text": "Does it work if you remove the <font> elements from your configuration and just leave the <auto-detect/>?", "id": 122217, "time": "2008-11-05T09:32:06Z", "bug_id": 46154, "creation_time": "2008-11-05T09:32:06Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "creator": "mhilpert@gmx.de", "text": "Nope, because I need the font elements to set our custom font triplet names. All XSL files have those custom font names, so if I leave the font elements out, no font is found as there is no translation from the font triplet names in the XSL files to the font files.", "id": 122219, "time": "2008-11-05T09:48:58Z", "bug_id": 46154, "creation_time": "2008-11-05T09:48:58Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 46154, "attachment_id": null, "text": "But I found a workarounf: if I use the full JAR URI:\n\n<font kerning=\"yes\" embed-url=\"jar:file:lib/fonts.jar!/frutiger/LTe50327.ttf\">\n    <font-triplet name=\"FrutigerIC\" style=\"normal\" weight=\"normal\"/>\n</font>\n\nit works. \n\nhttp://xmlgraphics.apache.org/fop/0.95/fonts.html#autodetect doesn't say anything about these full jar URIs. Setting the path to the fonts jar (\"lib/fonts.jar\") is something I would liked to have eliminated.\n\n", "id": 122220, "time": "2008-11-05T09:52:34Z", "creator": "mhilpert@gmx.de", "creation_time": "2008-11-05T09:52:34Z", "is_private": false}, {"count": 4, "tags": [], "creator": "jeremias@apache.org", "text": "I'm glad that you found a work-around for 0.95. In FOP Trunk, there's support for font substitution which would also solve your problem:\nhttp://xmlgraphics.apache.org/fop/trunk/fonts.html#substitution\n\nI'll mark this \"WORKSFORME\" as you've found a work-around and changes have already been implemented to cover your requirements.", "id": 122221, "time": "2008-11-05T11:04:42Z", "bug_id": 46154, "creation_time": "2008-11-05T11:04:42Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "creator": "mhilpert@gmx.de", "text": "Well, this substitution just seems to replace the entries in the fop config file. But when using the substitution, then I would have to state the jar:file: URI there ... which doesn't solve the problem of setting the path of the JAR with the fonts...?\n\nI found out that in the fop config, you don't have to set the full jar URI, but then I will get a malformedURLException later during XSL-FO processing. To solve this problem, I could configure a custom URIResolver to prepend a fixed \"jar:file:lib/fonts.jar!/\" prefix. But then I again, the path to the \"lib/fonts.jar\" needs to stated. I wonder if it's possible to get rid of setting the explizit JAR file path. I hoped to just use \n\n\"frutiger/LTe50327.ttf\"\n\ninstead of\n\n\"jar:file:lib/fonts.jar!/frutiger/LTe50327.ttf\"\n\nOr at least\n\n\"jar:frutiger/LTe50327.ttf\"\n\nwhich also works in the fop config file when FOP initializes but again throws a malformedURLException later during FO processing.\n\nI guess, that FOP itself is doing some magic to find the fonts in the classpath (which I expected due to http://xmlgraphics.apache.org/fop/0.95/fonts.html#autodetect). That could be the reason why \"jar:frutiger/LTe50327.ttf\" in the fop config file is working when FOP initializes. But the later FO processing uses java.net.URL constructor which fails for \"jar:frutiger/LTe50327.ttf\" but works for \"jar:file:lib/fonts.jar!/frutiger/LTe50327.ttf\".\n\nPerhaps this \"magic\" to resolve \"jar:frutiger/LTe50327.ttf\" with the generic found JAR file should make sure that the calls to java.net.URL receive the proper URI.", "id": 122222, "time": "2008-11-05T11:45:48Z", "bug_id": 46154, "creation_time": "2008-11-05T11:45:48Z", "is_private": false, "attachment_id": null}, {"count": 6, "tags": [], "text": "Yes, the magic is the entries in the Manifest. FOP reads these entries and sets up the font triplets automatically. The font substitution feature then allows you to define that whenever you have \"FrutigerIC\" in your FO document, it will actually use the font registered under whatever normal font family name your font reports. Something like:\n\n<substitution>\n  <from font-family=\"FrutigerIC\"/>\n  <to font-family=\"Frutiger\"/>\n</substitution>\n\nNo worrying about URIs and URLs (because FOP does that for you). At least that's the idea. If you don't want to use FOP Trunk, you're obviously restricted to the work-around with the <font> tags and you have to get the URIs right. But in that case the \"magic\" is not active.", "attachment_id": null, "bug_id": 46154, "id": 122224, "time": "2008-11-05T11:58:29Z", "creator": "jeremias@apache.org", "creation_time": "2008-11-05T11:58:29Z", "is_private": false}, {"count": 7, "tags": [], "creator": "gadams@apache.org", "attachment_id": null, "id": 156809, "time": "2012-04-01T13:53:11Z", "bug_id": 46154, "creation_time": "2012-04-01T13:53:11Z", "is_private": false, "text": "batch transition to closed remaining pre-FOP1.0 resolved bugs"}]