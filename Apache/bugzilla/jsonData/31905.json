[{"count": 0, "tags": [], "bug_id": 31905, "attachment_id": null, "text": "Even though mod_auth_digest appears to calculate an opaque value for each\nauthentication challenge, it does not include the \"opaque\" directive in the body\nof the WWW-Authenticate response header.  It is not required by RFC 2617 to do\nso, but some clients (e.g. Dreamweaver MX 2004's WebDAV client) interpret the\nabsence of an opaque directive as equivalent to a directive specifying an empty\nopaque value.  When such an [arguably buggy] client sends an authorization\nresponse specifying an empty opaque value, mod_auth_digest rejects it.\n\nRFC 2617 does not explicitly specify server behavior when the client responds to\nan \"opaque\"-less challenge with a authentication data containing an opaque\nvalue.  Httpd's current behavior is reasonable, but it is intolerant of clients\nthat interpret some of the grey areas of the RFC differently.  For the\nDreamweaver WebDAV client in particular, there appears to be no way to make\ndigest authentication work successfully with the current version of httpd.  I\nhave submitted a bug report to Macromedia, but I would like to see a more\nflexible digest authentication mechanism in httpd as well.  I have come up with\ntwo reasonable-seeming variations on my desired behavior:\n\n1) mod_auth_digest should include an opaque directive in digest authentication\nchallenges (and should look for it to be echoed back in authorization headers,\nper RFC 2617)\n\n2) mod_auth_digest should include a configuration directive to explicitly\ndisable sending and checking of the opaque directive (e.g. AuthDigestUseOpaque).\n This could select among up to three different behaviors: (a) the current\nbehavior; (b) httpd sends and checks \"opaque\"; and (c) httpd does not send and\ndoes not check \"opaque\".  At least one of the last two options would need to be\navailable.\n\n\nObserved against httpd 2.0.48 and httpd 2.0.50 on Fedora Core 2 / x86.", "id": 65771, "time": "2004-10-26T22:07:08Z", "creator": "jobollin@indiana.edu", "creation_time": "2004-10-26T22:07:08Z", "is_private": false}, {"count": 1, "tags": [], "text": "Have you reported the issue to Macromedia too?  opaque is optional, as you say -\nthis is definitely a client bug.  mod_auth_digest can work around this by\ntreating opaque=\"\" as equivalent to no opaque field, that should be easy enough.", "is_private": false, "bug_id": 31905, "id": 65800, "time": "2004-10-27T06:25:57Z", "creator": "jorton@redhat.com", "creation_time": "2004-10-27T06:25:57Z", "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 31905, "attachment_id": null, "is_private": false, "id": 65827, "time": "2004-10-27T13:51:20Z", "creator": "jobollin@indiana.edu", "creation_time": "2004-10-27T13:51:20Z", "text": "Yes, I did report this to Macromedia as a bug.  Having read the spec before\nposting this report, I think httpd's implementation follows its spirit in this\nregard, and Dreamweaver's is buggy.  Perhaps I should have flagged this as an\nRFE instead of a bug.  As I wrote in my initial comments, though, the spec does\nnot explicitly require the origin server to reject credentials such as those\ndescribed: it requires that if the server provides an opaque then the client\nmust echo it back to authenticate successfully, but it does not define required\nbehavior if the server doesn't send an opaque but the client responds with one.\n\nI think the best solution would be one that avoids any reliance on grey areas in\nthe spec, hence the first thing I recommended was that the opaque directive be\nincluded in challenges in the first place (thus making the required client\nbehavior unambiguous).  The opaque is already computed on the front end and\nchecked among the client's other authorization credentials, so that option\ndoesn't appear to be too much work.\n\nMaking httpd tolerant of Dreamweaver's behavior (and who knows what other\nclients') by creating a special case for an empty opaque value would solve my\nproblem, though, so if that's what you prefer to implement then it's OK by me.\n"}, {"count": 3, "tags": [], "bug_id": 31905, "text": "Since it's not really used for anything I don't see any harm in either sending a\nmade-up opaque field or just ignoring the one which the client sends, yes.", "id": 65831, "time": "2004-10-27T14:38:25Z", "creator": "jorton@redhat.com", "creation_time": "2004-10-27T14:38:25Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 31905, "attachment_id": 13235, "text": "Created attachment 13235\nproposed patch", "id": 65833, "time": "2004-10-27T14:57:02Z", "creator": "jorton@redhat.com", "creation_time": "2004-10-27T14:57:02Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 31905, "text": "Patch above should be sufficient - could you test this?", "id": 65834, "time": "2004-10-27T14:57:26Z", "creator": "jorton@redhat.com", "creation_time": "2004-10-27T14:57:26Z", "is_private": false, "attachment_id": null}, {"count": 6, "tags": [], "bug_id": 31905, "attachment_id": null, "text": "The patch didn't work: there was no observable change in behavior.\n\nI obtained the latest Fedora Core 2 httpd SRPM (httpd-2.0.51-2.7), added the\npatch, rebuilt, and installed the new RPM.  I confirmed that the patch was\nsuccessfully applied (by stopping rpmbuild after the prep stage and looking at\nthe source), and I verified that the httpd installed after this process reported\nthe correct version number and build time.  (For the sake of completeness, I\nshould say that I also shut down the server before installing the patched\nversion, and started it up again after.)\n\nI examined the patch itself, and it appears that it causes httpd to ignore the\nopaque directive in the Authorization header unless APR_HAS_SHARED_MEMORY is\nset.  The httpd binary does not report that that option is set, however.  Here\nis the output of httpd -V:\n\n[jobollin@bl-chem-iumsc108 SOURCES]$ /usr/sbin/httpd -V\nServer version: Apache/2.0.51\nServer built:   Oct 27 2004 12:39:37\nServer's Module Magic Number: 20020903:9\nArchitecture:   32-bit\nServer compiled with....\n -D APACHE_MPM_DIR=\"server/mpm/prefork\"\n -D APR_HAS_SENDFILE\n -D APR_HAS_MMAP\n -D APR_HAVE_IPV6 (IPv4-mapped addresses enabled)\n -D APR_USE_SYSVSEM_SERIALIZE\n -D APR_USE_PTHREAD_SERIALIZE\n -D SINGLE_LISTEN_UNSERIALIZED_ACCEPT\n -D APR_HAS_OTHER_CHILD\n -D AP_HAVE_RELIABLE_PIPED_LOGS\n -D HTTPD_ROOT=\"/etc/httpd\"\n -D SUEXEC_BIN=\"/usr/sbin/suexec\"\n -D DEFAULT_PIDLOG=\"logs/httpd.pid\"\n -D DEFAULT_SCOREBOARD=\"logs/apache_runtime_status\"\n -D DEFAULT_LOCKFILE=\"logs/accept.lock\"\n -D DEFAULT_ERRORLOG=\"logs/error_log\"\n -D AP_TYPES_CONFIG_FILE=\"conf/mime.types\"\n -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\nI created a new patch that unconditionally suppressed the same section of code,\nand that didn't fix the problem either.\n", "id": 65852, "time": "2004-10-27T18:55:13Z", "creator": "jobollin@indiana.edu", "creation_time": "2004-10-27T18:55:13Z", "is_private": false}, {"count": 7, "tags": [], "text": "Shared Memory is always disabled inside auth_digest:\n\n/* Disable shmem until pools/init gets sorted out \n * remove following two lines when fixed \n */\n#undef APR_HAS_SHARED_MEMORY\n#define APR_HAS_SHARED_MEMORY 0\n\n", "attachment_id": null, "id": 65855, "creator": "chip@force-elite.com", "time": "2004-10-27T19:21:27Z", "bug_id": 31905, "creation_time": "2004-10-27T19:21:27Z", "is_private": false}, {"count": 8, "tags": [], "bug_id": 31905, "text": "After pouring over the code for a few hours, scratching my head, trying to\nfigure out why the patch didn't work, I finally figured out that the patch\napparently _does_ work, but that the Dreamweaver client is more broken than I\nhad realized.  Not only is it sending an unrequested opaque value, it is also\nfailing to echo the nonce sent by the server (instead it sends an empty string\nfor that, too).  As far as I can tell that is completely broken, with no\npossible workaround on the server side.  I'll be filing another bug report with\nMacromedia, I guess.\n\nSorry to waste your time.\n", "id": 65862, "time": "2004-10-27T21:31:24Z", "creator": "jobollin@indiana.edu", "creation_time": "2004-10-27T21:31:24Z", "is_private": false, "attachment_id": null}, {"count": 9, "tags": [], "text": "No problem -- if it's that broken it's not worth half a workaround in\nmod_auth_digest, so let's give up and leave this at \"client bug\".", "attachment_id": null, "id": 65892, "creator": "jorton@redhat.com", "time": "2004-10-28T11:35:47Z", "bug_id": 31905, "creation_time": "2004-10-28T11:35:47Z", "is_private": false}]