[{"count": 0, "tags": [], "creator": "rmiller@duskglow.com", "attachment_id": null, "id": 79037, "time": "2005-08-26T06:56:10Z", "bug_id": 36368, "creation_time": "2005-08-26T06:56:10Z", "is_private": false, "text": "We wanted to disallow the POST method, because for our purposes we wanted the \narguments to said calls to be logged in the access log.  We considered using \nLimitExcept, but upon trying it, I saw that a 403 error was returned, and a \nsearch of the bug database showed that you had no plans to fix this.  I don't \nunderstand your reasoning on that, but anyway.  We needed a 405 error, and the \nonly other way to do it was to test it in the CGI code itself, which was ugly. \n \nSo, in true open source style, I hacked on mod_cgi and made a patch.  This \ncreates a new config directive called DisallowPost - it's an ACCESS_CONF \ndirective.  It can be either On or Off.  If it's on and you try to access a \nlocation protected by it with POST, you'll get a 405 method not allowed, which \nis exactly the behavior we needed. \n \nThe patch line numbers will be off because I also applied the patch that fixes \nthe #exec cmd problem.  However, other than that, it should apply to stock \n2.0.54. \n \n--- mod_cgi.c.orig      2005-08-24 22:45:30.000000000 -0700 \n+++ mod_cgi.c   2005-08-25 01:05:17.000000000 -0700 \n@@ -87,6 +87,22 @@ \n     apr_size_t  bufbytes; \n } cgi_server_conf; \n \n+typedef struct { \n+    int         disallowpost; \n+} cgi_dir_conf; \n+ \n+static void *create_dir_config(apr_pool_t *p, server_rec *s) \n+{ \n+ \n+    cgi_dir_conf *conf; \n+ \n+    conf = (cgi_dir_conf *)apr_pcalloc(p, sizeof(*conf)); \n+ \n+    conf->disallowpost = 0; \n+ \n+    return conf; \n+} \n+ \n static void *create_cgi_config(apr_pool_t *p, server_rec *s) \n { \n     cgi_server_conf *c = \n@@ -107,6 +123,22 @@ \n     return overrides->logname ? overrides : base; \n } \n \n+static const char *add_disallow_post(cmd_parms *cmd, void *config, const char \n*arg) \n+{ \n+    cgi_dir_conf *conf = (cgi_dir_conf *)config; \n+ \n+    if (!strcasecmp(arg, \"off\")) { \n+        conf->disallowpost = 0; \n+    } \n+    else if (!strcasecmp(arg, \"on\")) { \n+        conf->disallowpost = 1; \n+    } else { \n+       return \"DisallowPost should be either \\\"on\\\" or \\\"off\\\".\"; \n+    } \n+ \n+    return NULL; \n+} \n+ \n static const char *set_scriptlog(cmd_parms *cmd, void *dummy, const char *arg) \n { \n     server_rec *s = cmd->server; \n@@ -153,6 +185,8 @@ \n      \"the maximum length (in bytes) of the script debug log\"), \n AP_INIT_TAKE1(\"ScriptLogBuffer\", set_scriptlog_buffer, NULL, RSRC_CONF, \n      \"the maximum size (in bytes) to record of a POST request\"), \n+AP_INIT_TAKE1(\"DisallowPost\", add_disallow_post, NULL, ACCESS_CONF, \n+     \"disallow POST methods in a directory\"), \n     {NULL} \n }; \n \n@@ -736,6 +770,7 @@ \n     apr_status_t rv; \n     cgi_exec_info_t e_info; \n     conn_rec *c = r->connection; \n+    cgi_dir_conf *dconf; \n \n     if(strcmp(r->handler, CGI_MAGIC_TYPE) && strcmp(r->handler, \"cgi-script\")) \n         return DECLINED; \n@@ -751,6 +786,13 @@ \n         return DECLINED; \n     } \n \n+    dconf = (cgi_dir_conf *)ap_get_module_config(r->per_dir_config, \n+           &cgi_module); \n+ \n+    if (r->method_number == M_POST && dconf->disallowpost == 1) { \n+           return HTTP_METHOD_NOT_ALLOWED; \n+    } \n+ \n     argv0 = apr_filename_of_pathname(r->filename); \n     nph = !(strncmp(argv0, \"nph-\", 4)); \n     conf = ap_get_module_config(r->server->module_config, &cgi_module); \n@@ -1245,7 +1287,7 @@ \n module AP_MODULE_DECLARE_DATA cgi_module = \n { \n     STANDARD20_MODULE_STUFF, \n-    NULL,                        /* dir config creater */ \n+    create_dir_config,           /* dir config creater */ \n     NULL,                        /* dir merger --- default is to override */ \n     create_cgi_config,           /* server config */ \n     merge_cgi_config,            /* merge server config */"}, {"attachment_id": null, "tags": [], "bug_id": 36368, "is_private": false, "count": 1, "id": 83295, "time": "2005-12-06T07:58:48Z", "creator": "chip@force-elite.com", "creation_time": "2005-12-06T07:58:48Z", "text": "This should be done via limit, not via a new directive.  It might be a better\ndiscussion to change Limit/LimitExcpet to return 405 instead of 403, but we will\nnot be adding this directive to mod_cgi."}]