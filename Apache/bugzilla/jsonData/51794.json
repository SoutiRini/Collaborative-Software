[{"count": 0, "tags": [], "creator": "dlord@apple.com", "attachment_id": null, "is_private": false, "id": 149132, "time": "2011-09-09T18:51:35Z", "bug_id": 51794, "creation_time": "2011-09-09T18:51:35Z", "text": "I'm seeing an occasional race condition that happens between NioEndpoint$Poller#run and Http11NioProtocol finishing an event.\n\nWhat happens is that there is a race condition upon waking up the Selector that can cause a SelectionKey to not be marked with InterestOps.READ as soon as it could.  The race is on Poller.wakeupCounter.  These steps can occur which causes my SelectionKey to not have its interest ops reset soon and the Selector to not have wakeup() called on it.\n\n1. Poller0 - Starts processing its run loop and calls events().\n2. Poller0 - Checks the wakeupCounter.get() > 0 which evaluates to false (wakeupCounter is 0).\n3. Worker1 - Finishes an event and calls in to Poller#addEvent\n4. Worker1 - Enqueues the PollerEvent that will reset the interest ops.\n5. Worker1 - Calls wakeupCounter.incrementAndGet to increment and get wakeupCounter to 1.  This fails the check to call selector.wakeup();\n6. Poller0 - Calls wakeupCounter.set(-1)\n7. Poller0 - Calls selector.select(selectorTimeout) and blocks for either the full time out or until another unrelated SelectionKey is polled.\n8. Poller0 - Ultimately gets around to calling events() again which now resets the interest ops for the SelectionKey that was processed by Worker1.\n\nThe simple fix for this is to change this code:\n                            if (wakeupCounter.get() > 0) {\n                                //if we are here, means we have other stuff to do\n                                //do a non blocking select\n                                keyCount = selector.selectNow();\n                            } else {\n                                wakeupCounter.set(-1);\n                                keyCount = selector.select(selectorTimeout);\n                            }\n\nto this \n                            if (wakeupCounter.getAndSet(-1) > 0) {\n                                //if we are here, means we have other stuff to do\n                                //do a non blocking select\n                                keyCount = selector.selectNow();\n                            } else {\n                                keyCount = selector.select(selectorTimeout);\n                            }"}, {"count": 1, "tags": [], "bug_id": 51794, "is_private": false, "id": 149217, "creation_time": "2011-09-14T14:20:11Z", "time": "2011-09-14T14:20:11Z", "creator": "fhanik@apache.org", "text": "Thanks for the detailed info. We'll get this fixed.", "attachment_id": null}, {"count": 2, "tags": [], "creator": "fhanik@apache.org", "attachment_id": null, "id": 149222, "time": "2011-09-14T14:44:48Z", "bug_id": 51794, "creation_time": "2011-09-14T14:44:48Z", "is_private": false, "text": "trunk - r1170647\n7.0.x - r1170656\n6.0.x recommended for fix in status file"}, {"count": 3, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "id": 149580, "time": "2011-09-21T12:08:20Z", "bug_id": 51794, "creation_time": "2011-09-21T12:08:20Z", "is_private": false, "text": "Fixed in 6.0.x and will be included in 6.0.34 onwards."}]