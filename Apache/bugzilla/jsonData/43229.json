[{"count": 0, "tags": [], "creator": "motonobu@gmail.com", "attachment_id": null, "text": "mod_jk 1.2.25 comes with JK_REPLY_TIMEOUT as new error status.\n\non 1.2.25, when reply_timeout is happend on getting replies from tomcat,\nJK_REPLY_TIMEOUT is returned with http error code JK_HTTP_GATEWAY_TIME_OUT(504)\nat ajp_service@jk_ajp_common.c(line 2038,2107)\n\nCurrently, mod_jk can handle a fallback operation (send a request to another\nworker) by lb_worker only when http error code is JK_HTTP_SERVER_BUSY.\n(see service@jk_lb_worker.c(line 1101))\n\nso, handling JK_HTTP_GATEWAY_TIMEOUT with JK_REPLY_TIMEOUT status, the value of\nrc is always JK_FALSE, and lb_worker doesn't try next one.\n\n1.2.23 can fall back to the next one because of JK_HTTP_SERVER_BUSY is always\nreturned when reply_timeout occurs.\n\nmy proposal is that \n\nwhen reply_timeout happenes and op->recoverable is set,\nreturn JK_HTTP_SERVER_BUSY as a http error code with status JK_REPLY_TIMEOUT\ninstead of JK_HTTP_GATEWAY_TIMEOUT in order to make lb_worker handle the\nfallback behavior.\n\nthanks in advance.", "id": 107338, "time": "2007-08-28T05:51:36Z", "bug_id": 43229, "creation_time": "2007-08-28T05:51:36Z", "is_private": false}, {"attachment_id": 20721, "tags": [], "creator": "motonobu@gmail.com", "is_private": false, "count": 1, "id": 107339, "time": "2007-08-28T05:52:32Z", "bug_id": 43229, "creation_time": "2007-08-28T05:52:32Z", "text": "Created attachment 20721\nproposal patch."}, {"count": 2, "tags": [], "bug_id": 43229, "text": "Thank you for analyzing this problem. Yes, reply timeouts should allow\nretries/failover, at least unles recovery_options disable them.\n\nThe interface between the service() method of an lb member and the lb itself\nconsists of the service() return code and the additional is_error, which is\nmeant to indicate the HTTP return code.\n\nThe lb needs to decide, if it should do a failover, and if the member needs to\nbe put into error state. The interface is not really rich enough to help with\nthese decisions.\n\nEither we end up in using more fine grained return codes from service(), or we\nadd recoverability(=failover) and member error info as side effects,\nadditionally to is_error.\n\nI'm actively investigating this. As a first step, I added some code comments,\nwhich return codes to expect from the service() methods.\n\nPlease stay tuned.\n", "id": 107642, "time": "2007-09-02T16:08:22Z", "creator": "rainer.jung@kippdata.de", "creation_time": "2007-09-02T16:08:22Z", "is_private": false, "attachment_id": null}]