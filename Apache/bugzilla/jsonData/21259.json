[{"count": 0, "tags": [], "bug_id": 21259, "text": "I'm not sure if this is a bug or if I'm using it incorrectly...\n\nI have the following code:\n-----\nimport java.awt.*;\nimport java.io.*;\nimport org.apache.batik.svggen.*;\nimport org.apache.batik.transcoder.image.*;\nimport org.apache.batik.transcoder.*;\nimport org.apache.batik.dom.svg.*;\nimport org.w3c.dom.*;\n\npublic class DOMRasterizer {\n    public Document createDocument() throws Exception {\n        Document document = \nSVGDOMImplementation.getDOMImplementation().createDocument(SVGDOMImplemen\ntation.SVG_NAMESPACE_URI , \"svg\", null);\n        SVGGeneratorContext ctx = SVGGeneratorContext.createDefault(document);\n        ctx.setComment(\"Test\");\n        SVGGraphics2D graphics = new SVGGraphics2D(ctx, false);\n        graphics.setSVGCanvasSize(new Dimension(600, 400));\n\n        graphics.setColor(Color.RED);\n        graphics.setBackground(Color.BLACK);\n        graphics.fill(new Rectangle(0,0,100,100));\n\n        Writer writer = new OutputStreamWriter(new FileOutputStream(\"out.svg\"), \"UTF-8\");\n        graphics.stream(writer);\n        writer.close();\n        return document;\n    }\n\n    public void save(Document document) throws Exception {\n        JPEGTranscoder t = new JPEGTranscoder();\n        t.addTranscodingHint(JPEGTranscoder.KEY_QUALITY, new Float(0.8));\n        t.addTranscodingHint(JPEGTranscoder.KEY_WIDTH, new Float(600));\n        t.addTranscodingHint(JPEGTranscoder.KEY_HEIGHT, new Float(400));\n        OutputStream ostream = new FileOutputStream(\"out.jpg\");\n        t.transcode(new TranscoderInput(document), new TranscoderOutput(ostream));\n        ostream.flush();\n        ostream.close();\n    }\n\n    public static void main(String [] args) throws Exception {\n        DOMRasterizer rasterizer = new DOMRasterizer();\n        Document document = rasterizer.createDocument();\n        rasterizer.save(document);\n        System.exit(0);\n    }\n}\n-----\n\nWhich produces the following out.svg:\n\n-----\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\n<!DOCTYPE svg PUBLIC '-//W3C//DTD SVG 1.0//EN' 'http://www.w3.org/TR/2001/REC-\nSVG-20010904/DTD/svg10.dtd'>\n<svg stroke-dasharray=\"none\" shape-rendering=\"auto\" xmlns=\"http://www.w3.org/2000/\nsvg\" font-family=\"&apos;Helvetica&apos;\" width=\"600\" text-rendering=\"auto\" fill-\nopacity=\"1\" contentScriptType=\"text/ecmascript\" color-rendering=\"auto\" color-\ninterpolation=\"auto\" preserveAspectRatio=\"xMidYMid meet\" font-size=\"12\" fill=\"black\" \nxmlns:xlink=\"http://www.w3.org/1999/xlink\" stroke=\"black\" image-rendering=\"auto\" \nstroke-miterlimit=\"10\" zoomAndPan=\"magnify\" version=\"1.0\" stroke-linecap=\"square\"\n stroke-linejoin=\"miter\" contentStyleType=\"text/css\" font-style=\"normal\" height=\"400\" \nstroke-width=\"1\" stroke-dashoffset=\"0\" font-weight=\"normal\" stroke-opacity=\"\n1\">\n  <!--Test-->\n  <defs id=\"genericDefs\" />\n  <g>\n    <g fill=\"red\" stroke=\"red\">\n      <rect width=\"100\" x=\"0\" height=\"100\" y=\"0\" stroke=\"none\" />\n    </g>\n  </g>\n</svg>\n\n-----\n\nBut, the transcoding produces an out.jpg which appears as a blank (white) image in all \nviewers.\n\nFor extra information, java -version yields:\njava version \"1.4.1_01\"\nJava(TM) 2 Runtime Environment, Standard Edition (build 1.4.1_01-39)\nJava HotSpot(TM) Client VM (build 1.4.1_01-14, mixed mode)\n\nRegards,\n\nLance", "id": 39811, "time": "2003-07-02T02:10:36Z", "creator": "lance@teaminabox.co.uk", "creation_time": "2003-07-02T02:10:36Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "creator": "vincent.hardy@sun.com", "attachment_id": null, "id": 39849, "time": "2003-07-02T12:29:44Z", "bug_id": 21259, "creation_time": "2003-07-02T12:29:44Z", "is_private": false, "text": "The Document object is only used as a factory in SVGGraphics2D. Therefore, the\nnodes created by the SVGGraphics2D object do not go into the Document's tree by\ndefault.\n\nTo get your code to work, you need to modify it as follows:\n\n        graphics.setBackground(Color.BLACK);\n        graphics.fill(new Rectangle(0,0,100,100));\n\n>>>>>>> MODIF A HERE\n        // Populate the Document's root with the content of the tree\n        Element root = document.getDocumentElement();\n        graphics.getRoot(root);\n<<<<<<< END MODIF A\n        Writer writer = new OutputStreamWriter(new FileOutputStream(\"out.svg\"),\n\"UTF-8\");\n\n>>>>>>> MODIF B HERE\n        graphics.stream(root, writer);\n<<<<<<< END MODIF B\n"}, {"count": 2, "tags": [], "creator": "lance@teaminabox.co.uk", "attachment_id": null, "id": 39887, "time": "2003-07-02T19:24:52Z", "bug_id": 21259, "creation_time": "2003-07-02T19:24:52Z", "is_private": false, "text": "Hi Vincent.\n\nThanks for the reply. If I apply your changes, I get this exception thrown:\n\nException in thread \"main\" java.lang.NullPointerException\n        at org.apache.batik.transcoder.SVGAbstractTranscoder.transcode(Unknown \nSource)\n        at org.apache.batik.transcoder.image.ImageTranscoder.transcode(Unknown \nSource)\n        at org.apache.batik.transcoder.XMLAbstractTranscoder.transcode(Unknown \nSource)\n        at DOMRasterizer.save(DOMRasterizer.java:36)\n        at DOMRasterizer.main(DOMRasterizer.java:44)\n\nIf I leave the 'graphics.stream(root, writer)' as it was originally, the exception is no longer \nthrown and I get a JPEG with a red square on a white background (rather than the black \nbackground I was expecting) - close enough. However, in this case, the 'out.svg. file \nlooks like this:\n\n<!DOCTYPE svg PUBLIC '-//W3C//DTD SVG 1.0//EN' 'http://www.w3.org/TR/2001/REC-\nSVG-20010904/DTD/svg10.dtd'>\n<svg stroke-dasharray=\"none\" shape-rendering=\"auto\" xmlns=\"http://www.w3.org/2000/\nsvg\" font-family=\"&apos;Helvetica&apos;\" width=\"600\" text-rendering=\"auto\" fill-\nopacity=\"1\" contentScriptType=\"text/ecmascript\" color-rendering=\"auto\" color-\ninterpolation=\"auto\" preserveAspectRatio=\"xMidYMid meet\" font-size=\"12\" fill=\"black\" \nxmlns:xlink=\"http://www.w3.org/1999/xlink\" stroke=\"black\" image-rendering=\"auto\" \nstroke-miterlimit=\"10\" zoomAndPan=\"magnify\" version=\"1.0\" stroke-linecap=\"square\"\n stroke-linejoin=\"miter\" contentStyleType=\"text/css\" font-style=\"normal\" height=\"400\" \nstroke-width=\"1\" stroke-dashoffset=\"0\" font-weight=\"normal\" stroke-opacity=\"\n1\">\n  <!--Test-->\n  <defs id=\"genericDefs\" />\n  <g />\n</svg>\n\nI suspect I'm struggling with things that have been asked and answered elsewhere. Can \nyou point me in the right direction?\n\nRegards\n\nLance\n"}, {"count": 3, "tags": [], "bug_id": 21259, "attachment_id": null, "text": "My mistake, there is a real bug here.", "id": 39912, "time": "2003-07-03T07:58:04Z", "creator": "vincent.hardy@sun.com", "creation_time": "2003-07-03T07:58:04Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 21259, "attachment_id": null, "text": "I commited a fix and a regression test for the issue shown by this bug report.\nLance, you can now run the test with the modifications I had suggested. You'll\nneed to get the latest CVS version of Batik. See http://xml.apache.org/cvs.html\nif you need instructions on how to do that.", "id": 39913, "time": "2003-07-03T07:59:37Z", "creator": "vincent.hardy@sun.com", "creation_time": "2003-07-03T07:59:37Z", "is_private": false}]