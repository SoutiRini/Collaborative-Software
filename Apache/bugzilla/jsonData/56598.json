[{"count": 0, "tags": [], "creator": "ctcard@hotmail.com", "attachment_id": null, "text": "RFC 2616 defines the Content-Length header as follows:\n\nThe Content-Length entity-header field indicates the size of the entity-body, in decimal number of OCTETs, sent to the recipient or, in the case of the HEAD method, the size of the entity-body that would have been sent had the request been a GET. \n\n    Content-Length    = \"Content-Length\" \":\" 1*DIGIT\n\nThis definition allows a Content-Length header like this\n\n    Content-Length: 000000000185\n\nwhich should be interpreted as content having 185 (decimal) octets.\n\nHowever, Apache 2 is interpreting such a content length value as octal, because of the leading zeros, and so gives a error message \n\n    (20014)Internal error: Invalid Content-Length header (000000000185)\n\nThis is due to calls like this (in libapreq2-2.13/module/apache2/filter.c):\n\n    apr_uint64_t content_length = apr_strtoi64(cl_header,&dummy,0);\n\nBecause the final argument is 0, the number is interpreted as octal, and so in this example the conversion stops at 0000000001, leaving dummy pointing at \"85\", since 8 is not a valid octal digit.\n\nThe final argument should be 10 instead of 0, to force the conversion to assume decimal.", "id": 175694, "time": "2014-06-06T09:48:10Z", "bug_id": 56598, "creation_time": "2014-06-06T09:48:10Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 56598, "text": "Fixed in Apache in r1626086.\n\nBTW, doc for apr_strtoi64 and apr_strtoff says nothing about this octal conversion.", "id": 177963, "time": "2014-09-18T21:04:07Z", "creator": "christophe.jaillet@wanadoo.fr", "creation_time": "2014-09-18T21:04:07Z", "is_private": false, "attachment_id": null}]