[{"count": 0, "tags": [], "bug_id": 59699, "attachment_id": null, "id": 191626, "time": "2016-06-14T07:59:30Z", "creator": "benjamin.dahon@gmail.com", "creation_time": "2016-06-14T07:59:30Z", "is_private": false, "text": "Hi,\n\nWe have just migrated from Glassfish 3 to Jetty 9.3.8 which uses Tomcat javax.el implementation. Just after the migration, we saw huge performance drops.\n\nAfter some investigation (thread dumps,...), most of the code was busy loading classes through javax.el.ImportHandler class.\n\nThis class seems to have been designed to be thread-afe (use of ConcurrentHashMap), but gets instanciated for every expression being evaluated. This is beacuse javax.el.ELContext class creates new instances of javax.el.ImportHandler every time it gets instanciated.\n\nMost the EL expressions \"stuck\" in this class loading phase were looking for empty attributes.\n\nI applied a quick fix, and the performances went back to normal (time divided by 2).\n\nI think the javax.el.ImportHandler class ought to be used as a singleton. I understand the problems with caching all classes, but by caching only the ClassNotFound, the problem also goes away.\n\nI am happy to provide some help (and code), if you think this fix is a good idea.\n\nThanks,\nBenjamin"}, {"count": 1, "attachment_id": null, "bug_id": 59699, "is_private": false, "id": 191627, "time": "2016-06-14T08:24:29Z", "creator": "markt@apache.org", "creation_time": "2016-06-14T08:24:29Z", "tags": [], "text": "Correcting the Tomcat version. Jetty 9.3.8 depends on Tomcat 8.0.27.\n\nYou don't see the performance issues in Glassfish because it doesn't fully implement the spec (despite it being the reference implementation).\n\nIf you want to understand the background to waht is going on, have a read through the mail threads linked from the duplicate.\n\n*** This bug has been marked as a duplicate of bug 57583 ***"}, {"count": 2, "tags": [], "creator": "benjamin.dahon@gmail.com", "attachment_id": null, "id": 191631, "time": "2016-06-14T10:42:59Z", "bug_id": 59699, "creation_time": "2016-06-14T10:42:59Z", "is_private": false, "text": "Hi,\n\nFor what I've read, you modified the findClass method to lookup resources before actually loading the class. Reading your comments in the code, it's faster. However, it doesn't actually cache the results, no ?\n\nWouldn't it be better to actually cache the results ?\n\nThanks,\nBenjamin"}, {"count": 3, "tags": [], "bug_id": 59699, "attachment_id": null, "is_private": false, "id": 191632, "time": "2016-06-14T10:53:20Z", "creator": "markt@apache.org", "creation_time": "2016-06-14T10:53:20Z", "text": "(In reply to bdahon from comment #2)\n> Hi,\n> \n> For what I've read, you modified the findClass method to lookup resources\n> before actually loading the class. Reading your comments in the code, it's\n> faster.\n\nThat wasn't the only change.\n\n> However, it doesn't actually cache the results, no ?\n\nNo additional caching was introduced.\n\n> Wouldn't it be better to actually cache the results ?\n\nNo idea.\n\nA thread-safe, memory leak free cache would add a reasonable amount of complexity. There are no guarantees it would be faster.\n\nSuitable cache settings will vary between applications so that may require per web application configuration - something that is particularly complex for a specification class where we can't change the public API.\n\nIf a specific performance issue is raised against the latest code (with a test case that demonstrates the issue) we'll take another look but at this point the code is viewed as 'good enough'."}, {"count": 4, "tags": [], "bug_id": 59699, "attachment_id": null, "id": 191633, "creation_time": "2016-06-14T11:08:26Z", "time": "2016-06-14T11:08:26Z", "creator": "benjamin.dahon@gmail.com", "text": "Thanks for your reply.", "is_private": false}, {"count": 5, "tags": [], "bug_id": 59699, "is_private": false, "text": "Actually, I was not suggesting to cache all the results, only the classes which could not be found.", "id": 191634, "time": "2016-06-14T11:10:36Z", "creator": "benjamin.dahon@gmail.com", "creation_time": "2016-06-14T11:10:36Z", "attachment_id": null}]