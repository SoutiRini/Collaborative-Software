[{"count": 0, "attachment_id": null, "bug_id": 40136, "is_private": false, "id": 91702, "time": "2006-07-28T20:50:52Z", "creator": "aitidirmustapha@hotmail.com", "creation_time": "2006-07-28T20:50:52Z", "tags": [], "text": "I'm using mod_proxy and mod_proxy_balancer to loadbalance 2 tomcats servers \nusing mod_proxy_ajp. \nMy two tomcats servers (jvmRoute=tc1 and jvmRoute=tc2) have SSO enabled.\nThe loadbalancer deosn't send the request to the same tomcats where I'm logged, \nwhat means that it doesn't look to the JSESSIONIDSSO, so il keep forwarding my \nrequests between the two tomcats servers and asking me to login again because \nfor tomcats it's a new session.\n\nProxyRequests off \n<Proxy balancer://tomcats/>  \nBalancerMember ajp://testapp.tres.bnc.ca:8882 route=tc2 loadfactor=1  \nBalancerMember ajp://testapp.tres.bnc.ca:8883 route=tc3 loadfactor=1 \n</Proxy> \n\n<Location /portail/> \nProxyPass balancer://tomcats/portail/ stickysession=JSESSIONIDSSO nofailover=On \nProxyPassReverse balancer://tomcats/portail/\nOrder Deny,Allow \nAllow from all \t\t\n</Location> \n\t\n<Location /ga/> \nProxyPass balancer://tomcats/ga/ stickysession=JSESSIONIDSSO nofailover=On \nProxyPassReverse balancer://tomcats/ga/\nOrder Deny,Allow \nAllow from all \t\t\n</Location> \n<Location /balancer-manager> \nSetHandler balancer-manager\nAuthType Basic\nAuthName \"Cluster manager \"\nAuthUserFile /usr/local/apache2.2.2/conf/.htpasswd\nRequire valid-user\nOrder Deny,Allow \nAllow from all \n</Location>"}, {"count": 1, "tags": [], "creator": "rpluem@apache.org", "text": " (In reply to comment #0)\nYou are using the wrong Cookie. You need to use JESSSIONID. The routing\ninformation is only added to JESSSIONID, but not to JESSSIONIDSSO.\n\nSome comments on the config:\n \n> ProxyRequests off \n> <Proxy balancer://tomcats/>  \n> BalancerMember ajp://testapp.tres.bnc.ca:8882 route=tc2 loadfactor=1  \n> BalancerMember ajp://testapp.tres.bnc.ca:8883 route=tc3 loadfactor=1 \n\nShouldn't that be route=tc1?\n\n> </Proxy> \n> \n> <Location /portail/> \n> ProxyPass balancer://tomcats/portail/ stickysession=JSESSIONIDSSO nofailover=On \n> ProxyPassReverse balancer://tomcats/portail/\n\nThis does not work you need to use somesthing like the following:\n\nProxyPassReverse http<s>://<tomcat host 1>/portail/\nProxyPassReverse http<s>://<tomcat host 2>/portail/\n\nbut in most cases this is not needed with AJP at all.\n\n> Order Deny,Allow \n> Allow from all \t\t\n> </Location> \n> \t\n> <Location /ga/> \n> ProxyPass balancer://tomcats/ga/ stickysession=JSESSIONIDSSO nofailover=On \n> ProxyPassReverse balancer://tomcats/ga/\n\ns.o.", "id": 91703, "time": "2006-07-28T22:38:18Z", "bug_id": 40136, "creation_time": "2006-07-28T22:38:18Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 40136, "text": "Created attachment 18667\napache log files\n\n------- Additional Comments From rpluem@apache.org  2006-07-28 22:38 -------\nIn reply to rpluem@apache.org 's comment,\n\n1- Now I'm using JESSSIONID Cookie, so in this case what the need the\nstickysession parameter. \n\n2- I'm really using route=tc1\n\n-------- details about the bug40136\n----------------------------------------------------------\n\n1- I'v setup up two instance of Tomcat 5.0.28 (tc2 and tc3 in jvmRoute)\nAppServer2 and AppServer3 \n2- I enabled the AJP protocol using the port 8882 and 8883\n3- I enabled a single Sign One SSO valve\n4- I'm using a apache 2.2.2 and I enabled a proxy load balancer with the\nfollowing config\n\n    ......\n    ServerName WebServer:80\n    .....\n    ProxyRequests off \n    <Proxy balancer://tomcats/>  \n\tBalancerMember ajp://AppServer2:8882 route=tc2\n\tBalancerMember ajp://Appserver3:8883 route=tc3\n    </Proxy> \n    <Location /portail/> \n\tProxyPass balancer://tomcats/portail/ stickysession=JSESSIONID\n\tOrder Deny,Allow \n\tAllow from all\t\t\n    </Location> \n    <Location /ga/> \n\tProxyPass  balancer://tomcats/ga/ stickysession=JSESSIONID\n\tOrder Deny,Allow \n\tAllow from all\t\t\n    </Location> \nAnd the application's description are:\n- /portail is my main application\n- /ga is the application where I logon and logout\n\n3- I disable the CONFIDENTIAL security in /ga applications, so no SSL required\n\n4- The problem is that when I request the portal application\nhttp://WebServer/portail, apache redirect the request \n   to tc2 for example and I got the /ga application where I have to logon in\ntc2 AppServer. After logon succeeded, \n   I leave /ga application to go to /portal application and apache redirect the\nrequest to the other tomcat (in this case tc3), \n   so I got /ga in tc3 AppServer, that recdirect me again to /ga in the same\nAppServer, and after logon succeed, apache redirect\n   to the other AppServer, and so one. I still balanced between the two tomcats\n(tc2 and tc3) for ever.\n\nSo either something is missing in my config (the doc is not really complete) or\nit's a bug in a load balancing when using SSO.\n\nAttached my apache log files\nThanks", "id": 91746, "time": "2006-07-31T21:04:02Z", "creator": "aitidirmustapha@hotmail.com", "creation_time": "2006-07-31T21:04:02Z", "is_private": false, "attachment_id": 18667}, {"count": 3, "tags": [], "creator": "rpluem@apache.org", "attachment_id": null, "text": "Ah, now I get it, stupid mine. Of course the JSESSIONID cookies are application\nspecific. They have a path parameter added; /ga for cookies created by the ga\napplication, /portail for cookies created by the portail application. So the\napplication sessions itself remains sticky, but each application can be on a\ndifferent Tomcat.\nSo JSESSIONID cannot be used for stickyness either.\nAs httpd expects the backend to provide correct routing information I do see the\nfollowing solutions:\n\n1. You fix the classes \n\n    org.apache.catalina.authenticator.AuthenticatorBase\n    org.apache.catalina.authenticator.SingleSignOn\n\n    to add/substract the jvm route in the same way as\n\n    org.apache.catalina.session.ManagerBase\n\n    does.\n\n2. You apply the following patch from trunk:\n   http://svn.apache.org/viewvc?view=rev&revision=417238\n\n   and use the following configuration:\n\n   Header add Set-Cookie \"MYCOOKIE=SOMEVALUE.%{BALANCER_WORKER_ROUTE}e;path=/;\"\nenv=tomcat\n   \n    <Proxy balancer://tomcats/>  \n\tBalancerMember ajp://AppServer2:8882 route=tc2\n\tBalancerMember ajp://Appserver3:8883 route=tc3\n    </Proxy> \n    <Location /portail/> \n\tProxyPass balancer://tomcats/portail/ stickysession=MYCOOKIE \n\tOrder Deny,Allow \n\tAllow from all\t\t\n        SetEnv tomcat 1\n    </Location> \n    <Location /ga/> \n\tProxyPass  balancer://tomcats/ga/ stickysession=MYCOOKIE \n\tOrder Deny,Allow \n\tAllow from all\n        SetEnv tomcat 1\t\t\n    </Location> \n\n   But this configuration sets the cookie MYCOOKIE on EVERY response that comes\nfrom Tomcat", "id": 91747, "time": "2006-07-31T22:16:06Z", "bug_id": 40136, "creation_time": "2006-07-31T22:16:06Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 40136, "text": "Hi Ruediger Pluem,\nYou mentioned that you say one solution for this issue by patching a tomcat \nclasses org.apache.catalina.authenticator.AuthenticatorBase and     \norg.apache.catalina.authenticator.SingleSignOn to add/substract the jvm route \nin the same way as org.apache.catalina.session.ManagerBase does.\n\nI tried this solution and I didn't see anything in the SingleSignOn class, so I \njust add the jvmRoute in AuthenticatorBase class and I still have the same \nproblem, may be I miss something, so can you please tell me where you found \nthis solution, I need more details.\n\nIf I fix this issue, it will help a lot of people.\n\nThanks again.\n", "id": 92027, "time": "2006-08-08T14:07:14Z", "creator": "aitidirmustapha@hotmail.com", "creation_time": "2006-08-08T14:07:14Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 40136, "is_private": false, "text": "(In reply to comment #4)\n> I tried this solution and I didn't see anything in the SingleSignOn class, so  \n\nTo be honest I did only a very quick view into the Tomcat sources and did not\nactually work out a solution. This is left as an exercise to the reader :-).\n\nSo maybe some parts of my remarks aren't correct. After having a brief view\nagain I would say that the following completly untested patch (don't even know\nif it compiles!) should work:\n\n--- AuthenticatorBase.java.orig 2004-08-29 02:14:04.000000000 +0200\n+++ AuthenticatorBase.java      2006-08-08 21:15:55.000000000 +0200\n@@ -36,6 +36,7 @@\n\n import org.apache.catalina.Authenticator;\n import org.apache.catalina.Container;\n+import org.apache.catalina.Engine;\n import org.apache.catalina.Context;\n import org.apache.catalina.HttpRequest;\n import org.apache.catalina.HttpResponse;\n@@ -785,6 +786,32 @@\n     }\n\n\n+   /**\n+     * Retrieve the enclosing Engine.\n+     *\n+     * @return an Engine object (or null).\n+     */\n+    protected Engine getEngine() {\n+        Engine e = null;\n+        for (Container c = getContainer(); e == null && c != null ; c =\nc.getParent()) {\n+            if (c != null && c instanceof Engine) {\n+                e = (Engine)c;\n+            }\n+        }\n+        return e;\n+    }\n+\n+\n+    /**\n+     * Retrieve the JvmRoute for the enclosing Engine.\n+     * @return the JvmRoute or null.\n+     */\n+    protected String getJvmRoute() {\n+        Engine e = getEngine();\n+        return e == null ? null : e.getJvmRoute();\n+    }\n+\n+\n     /**\n      * Register an authenticated Principal and authentication type in our\n      * request, in the current session (if there is one), and with our\n@@ -840,6 +867,10 @@\n             HttpServletResponse hres =\n                 (HttpServletResponse) response.getResponse();\n             ssoId = generateSessionId();\n+            String jvmRoute = getJvmRoute();\n+            if (jvmRoute != null) {\n+                ssoId += '.' + jvmRoute;\n+            }\n             Cookie cookie = new Cookie(Constants.SINGLE_SIGN_ON_COOKIE, ssoId);\n             cookie.setMaxAge(-1);\n             cookie.setPath(\"/\");\n\n\nAt least it should create a JSESSIONIDSSO cookie with the jvm route added to it\nand thenm your original configuration should work.", "id": 92049, "time": "2006-08-08T19:18:53Z", "creator": "rpluem@apache.org", "creation_time": "2006-08-08T19:18:53Z", "attachment_id": null}, {"count": 6, "attachment_id": null, "bug_id": 40136, "is_private": false, "id": 127181, "time": "2009-05-19T10:57:47Z", "creator": "wrowe@apache.org", "creation_time": "2009-05-19T10:57:47Z", "tags": [], "text": "Note that \nProxyPassReverse balancer://tomcats/\nworks in current versions now,\n\nProxyPassReverse balancer://tomcats/ga/\nis fixed in trunk and proposed for backport."}, {"count": 7, "tags": [], "creator": "aitidirmustapha@hotmail.com", "text": "Hi, \n\nI fixed the issue by paching tomcat classes\n\nRequest.java\n\n....\n // Creating a new session cookie based on that session\n if ((session != null) && (getContext() != null)\n          && getContext().getCookies()) {\n      Cookie cookie = new Cookie(Globals.SESSION_COOKIE_NAME,\n                                       session.getIdInternal());\n            configureSessionCookie(cookie);\n            response.addCookieInternal(cookie);\n            \n//Mustapha Path\n\n            String[] str = session.getId().split(\"\\\\.\");\n            String   id  = \"\";\n            if ( (str != null) && (str.length == 3) ){\n            \tid  = \"Y\" + str[0] + \"C.\" + str[1] + \".\" + str[2];\n            }else if (str.length == 2 ){\n            \tid  = \"Y\" + str[0] + \"C.\" + str[1];\n            }else if (str.length == 1){\n            \tid  = \"Y\" + str[0] + \"C\";\n            }else{\n            \tid  = \"Y\" + session.getId() + \"C\";\n            }\n            Cookie mustCookie = new Cookie(\"MUSTAPHA\", id);\n            configureSessionCookie(mustCookie, false);\n            response.addCookieInternal(mustCookie);\n\n        }\n.....", "id": 127184, "attachment_id": null, "bug_id": 40136, "creation_time": "2009-05-19T12:16:51Z", "time": "2009-05-19T12:16:51Z", "is_private": false}, {"count": 8, "tags": [], "bug_id": 40136, "is_private": false, "text": "Hi, \n\nI fixed the issue by paching tomcat classes\n\nRequest.java\n\n....\n // Creating a new session cookie based on that session\n if ((session != null) && (getContext() != null)\n          && getContext().getCookies()) {\n      Cookie cookie = new Cookie(Globals.SESSION_COOKIE_NAME,\n                                       session.getIdInternal());\n            configureSessionCookie(cookie);\n            response.addCookieInternal(cookie);\n            \n             //Mustapha Path\n\n            String[] str = session.getId().split(\"\\\\.\");\n            String   id  = \"\";\n            if ( (str != null) && (str.length == 3) ){\n            \tid  = \"Y\" + str[0] + \"C.\" + str[1] + \".\" + str[2];\n            }else if (str.length == 2 ){\n            \tid  = \"Y\" + str[0] + \"C.\" + str[1];\n            }else if (str.length == 1){\n            \tid  = \"Y\" + str[0] + \"C\";\n            }else{\n            \tid  = \"Y\" + session.getId() + \"C\";\n            }\n            Cookie mustCookie = new Cookie(\"COOKIE_BALANCER\", id);\n            configureSessionCookie(mustCookie, false);\n            response.addCookieInternal(mustCookie);\n\n        }\n.....\n\n\nand in the apache proxy balancer use the cookie maned COOKIE_BALANCER\n\nProxyPass balancer://tomcats/portail/ stickysession=COOKIE_BALANCER nofailover=On", "id": 127186, "time": "2009-05-19T12:26:16Z", "creator": "aitidirmustapha@hotmail.com", "creation_time": "2009-05-19T12:26:16Z", "attachment_id": null}]