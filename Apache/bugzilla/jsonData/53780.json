[{"count": 0, "tags": [], "creator": "dpletcher@google.com", "attachment_id": 29278, "id": 161689, "time": "2012-08-24T22:46:04Z", "bug_id": 53780, "creation_time": "2012-08-24T22:46:04Z", "is_private": false, "text": "Created attachment 29278\npatch to fix leaks of memory and temporary files\n\nThe current SXSSF implementation leaks memory by calling File.deleteOnExit(). It is recommended that the deleteOnExit method should never be called in a persistent application; see discussion here:\nhttp://bugs.sun.com/bugdatabase/view_bug.do?bug_id=4513817\n\nAdditionally, temporary files are not cleaned up until the program exits, as noted in this POI bug:\nhttps://issues.apache.org/bugzilla/show_bug.cgi?id=53493\n\nThis patch is submitted as an alternative to the fix proposed in the aforementioned bug. I'm reporting a separate bug in order to encompass the additional concern about memory leaks.\n\nHere's how the patch works:\n* all calls to deleteOnExit are eliminated.\n* the SXSSFWorksheet class walks through all sheets after the output is written, deleting each associated temporary file immediately.\n* close and delete operations are moved into finally blocks, ensuring cleanup even when an exception causes premature failure.\n\nThese changes are vitally important for our high-throughput, persistent server that will pound out million row Excel spreadsheets all day long. (We've patched the POI library internally but it would be great to factor these changes into the distribution.)\n\nI would volunteer to create unit tests for this improvement but there isn't an existing unit testing framework for the SXSSF component, so far as I can tell. I'm open to contributing on that front in the future, if there's interest.\n\nThanks!"}, {"count": 1, "attachment_id": null, "bug_id": 53780, "is_private": false, "id": 161723, "time": "2012-08-27T08:20:29Z", "creator": "ag@4js.com", "creation_time": "2012-08-27T08:20:29Z", "tags": [], "text": "I think this is a duplicate of bug 53493. All that was said there applies here too. This patch suffers from the same shortcomings as the patch proposed in that bug. I vote for a straightforward solution SXSSFWorkbook.dispose() instead of an implicit destroy-on-write which is not in accordance with the contract for the function SXSSFWorkbook.write(). The File.deleteOnExit() should be removed if it indeed leaks in the scenario it is used in SXSSF (File.deleteOnExit() is needed only if the garbage collector couldn't collect the sheets by the time the program exits. Are you perhaps keeping references to your workbooks or sheets that prevent garbage collection and subsequent temp file deletion?)."}, {"count": 2, "tags": [], "creator": "dpletcher@google.com", "text": "Thank you for the quick response.\n\nI reported this as a new issue because it encompasses an additional problem, the memory leak via deleteOnExit. I also included the part about temporary file cleanup (bug 53493) because the problems are entangled; it's convenient to address both symptoms at the same time.\n\nThe generally accepted wisdom about finalize methods is not to use them, ever. It isn't a reliable mechanism for doing anything; one should never assume that finalizers will run, and the object graph tends to be seen in an inconsistent state within these methods, often causing weird and unpredictable problems. The patch for 53493 that calls finalize() explicitly is a direct violation of the finalize contract; it must only run once, if ever. See Effective Java or this stackoveflow thread:\nhttp://stackoverflow.com/questions/158174/why-would-you-ever-implement-finalize\n\nSolving the problem with a new dispose method seems reasonable; I'll submit a revised patch today.", "id": 161734, "time": "2012-08-27T16:23:09Z", "bug_id": 53780, "creation_time": "2012-08-27T16:23:09Z", "is_private": false, "attachment_id": null}, {"count": 3, "text": "Another note: file handles will be leaked if there's an exception during the workbook write process. I'm fixing that problem in the patch as well.", "bug_id": 53780, "attachment_id": null, "id": 161735, "time": "2012-08-27T16:32:04Z", "creator": "dpletcher@google.com", "creation_time": "2012-08-27T16:32:04Z", "tags": [], "is_private": false}, {"count": 4, "text": "Created attachment 29285\npatch to fix bug\n\nRevised as specified by Alex Geller. Changes since last patch:\n* Renamed cleanup methods as dispose\n* Moved temporary file cleanup to a separate public dispose method\n* Added a unit test", "bug_id": 53780, "is_private": false, "id": 161736, "time": "2012-08-27T17:00:39Z", "creator": "dpletcher@google.com", "creation_time": "2012-08-27T17:00:39Z", "tags": [], "attachment_id": 29285}, {"count": 5, "attachment_id": null, "bug_id": 53780, "is_private": false, "id": 161939, "time": "2012-09-04T13:50:05Z", "creator": "yegor@dinom.ru", "creation_time": "2012-09-04T13:50:05Z", "tags": [], "text": "Thanks for the patch, I put it in my TODO list to review and apply. \n\nYegor\n\n(In reply to comment #4)\n> Created attachment 29285 [details]\n> patch to fix bug\n> \n> Revised as specified by Alex Geller. Changes since last patch:\n> * Renamed cleanup methods as dispose\n> * Moved temporary file cleanup to a separate public dispose method\n> * Added a unit test"}, {"text": "Patch applied in r1384784 with some tweaks. \n\nSheetDataWriter.dispose must close the corresponding Writer object before deleting the temp file. Without this change your unit test fails on Windows.  \n\nI also tweaked SXSSF unit tests to cleanup temp files: every new instance of SXSSFWorkbook in the tests must be accompanied by workbook.dispose(). We no longer use the trick with File.deleteOnExit and must free the resources explicitly.  \n\nRegards,\nYegor", "tags": [], "bug_id": 53780, "attachment_id": null, "count": 6, "id": 162179, "time": "2012-09-14T14:01:05Z", "creator": "yegor@dinom.ru", "creation_time": "2012-09-14T14:01:05Z", "is_private": false}]