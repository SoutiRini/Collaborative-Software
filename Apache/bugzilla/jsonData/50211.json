[{"count": 0, "tags": [], "creator": "gerd.gotthard@l-bank.de", "attachment_id": null, "is_private": false, "id": 141381, "time": "2010-11-04T06:49:05Z", "bug_id": 50211, "creation_time": "2010-11-04T06:49:05Z", "text": "HSSFSheet.autoSizeColumn calculates the size of a cell (which contains a formula) depending on the size of the formula, not on the size of the result of the formula. To reproduce this error, see listing below. Cell 0 and Cell 1 should have the same column size, because they both evaluate to '1'. In the case below, Cell 1 is much wider than Cell 0.\n\nimport org.apache.poi.hssf.usermodel.*;\nimport java.io.*;\n\npublic class AutosizeError\n{\n\n    public static void main(String args[])\n    {\n        HSSFWorkbook workbook = new HSSFWorkbook();\n        HSSFSheet    sheet = workbook.createSheet(\"Autosize error\");\n        HSSFRow      row = sheet.createRow(0);\n        HSSFCell     cell0 = row.createCell(0);\n        HSSFCell     cell1 = row.createCell(1);\n\n        cell0.setCellType(HSSFCell.CELL_TYPE_NUMERIC);\n        cell0.setCellValue(1);\n        sheet.autoSizeColumn(0);\n\n        cell1.setCellType(HSSFCell.CELL_TYPE_NUMERIC);\n        cell1.setCellFormula(\"A1+2*A1-2*A1\");\n        sheet.autoSizeColumn(1);\n\n        try {\n            FileOutputStream out = new FileOutputStream(\"Autosize_Error.xls\");\n            workbook.write(out);\n            out.close();\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    } // main\n}"}, {"count": 1, "tags": [], "creator": "apache@gagravarr.org", "is_private": false, "text": "Setting the formula doesn't re-calculate the value. You need to use the formula evaluator to do that, before you size", "id": 141500, "time": "2010-11-05T14:14:40Z", "bug_id": 50211, "creation_time": "2010-11-05T14:14:40Z", "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 50211, "text": "It is actually a bug. Column sizing relies on DataFormatter#formatCell(Cell cell) which returns formula string for formula cells. It should format the cached formula result instead. \n\nI also see that auto-sizing logic is duplicated  between HSSF and XSSF, I'm going to consolidate it in a common class. \n\nSomething to work for me. The fix is coming soon.\n\nYegor", "id": 141509, "time": "2010-11-05T17:18:04Z", "creator": "yegor@dinom.ru", "creation_time": "2010-11-05T17:18:04Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 50211, "attachment_id": null, "text": "Should be fixed in r1033005. \n\nSheet.autoSizeColumn does not evaluate formula cells, instead it sizes the formula cells based on their cached formula results. If a formula was never evaluated (like in your case), the cached result is undefined the result of autoSizeColumn can be 'off'. This means that it is a good idea to evaluate the entire workbook before auto-sizing. The simplest way to evaluate all cells is as follows:\n\n   HSSFFormulaEvaluator.evaluateAllFormulaCells(workbbok);\n\nJust insert this line before calling Sheet.autoSizeColumn.\n\nYegor", "id": 141567, "time": "2010-11-09T10:17:23Z", "creator": "yegor@dinom.ru", "creation_time": "2010-11-09T10:17:23Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 50211, "text": "Created attachment 26277\nScreencopy of AutosizeError", "id": 141587, "time": "2010-11-10T04:14:20Z", "creator": "gerd.gotthard@l-bank.de", "creation_time": "2010-11-10T04:14:20Z", "is_private": false, "attachment_id": 26277}, {"count": 5, "tags": [], "bug_id": 50211, "attachment_id": null, "id": 141588, "time": "2010-11-10T04:16:33Z", "creator": "gerd.gotthard@l-bank.de", "creation_time": "2010-11-10T04:16:33Z", "is_private": false, "text": "I inserted the line into my example code. Now it looks like:\n\n\tcell1.setCellType(HSSFCell.CELL_TYPE_NUMERIC);\n\tcell1.setCellFormula(\"A1+2*A1-2*A1\");\n        HSSFFormulaEvaluator.evaluateAllFormulaCells(workbook);\n\tsheet.autoSizeColumn(1);\n\nThis does not resolve the problem. Column #1 is still much wider then column #0 and it scales with the size of the formula (see attachment). \n\nDoes it work correctly in your environment? Am I missing something else?\n\nGerd"}, {"count": 6, "tags": [], "bug_id": 50211, "attachment_id": null, "id": 141589, "time": "2010-11-10T04:57:49Z", "creator": "yegor@dinom.ru", "creation_time": "2010-11-10T04:57:49Z", "is_private": false, "text": "Make sure you are using the latest build from trunk. \nThe version where the problem is fixed in 3.8-dev, not 3.7. \n\nOn my environment both columns are equally sized. \n\nBTW, you don't need to call cell1.setCellType(HSSFCell.CELL_TYPE_NUMERIC)  before setting formula. A call of HSSFCell#setCellFormula automatically changes the cell type to HSSFCell.CELL_TYPE_FORMULA.\n\n\nYegor"}, {"count": 7, "tags": [], "bug_id": 50211, "text": "*** Bug 50415 has been marked as a duplicate of this bug. ***", "id": 142400, "time": "2010-12-06T02:35:18Z", "creator": "yegor@dinom.ru", "creation_time": "2010-12-06T02:35:18Z", "is_private": false, "attachment_id": null}]