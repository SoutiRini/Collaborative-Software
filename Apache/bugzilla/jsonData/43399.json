[{"count": 0, "tags": [], "creator": "rmills@dex.com", "attachment_id": null, "id": 108209, "time": "2007-09-14T09:55:50Z", "bug_id": 43399, "creation_time": "2007-09-14T09:55:50Z", "is_private": false, "text": "If you use setCellFormula and getCellFormula to set/get formulas with large \nrow numbers, the formula gets mangled.  For example...\n\nString myFormula = \"E35398&\\\" Total\\\"\";\ncell.setCellFormula(myFormula);\nmyFormula = cell.getCellFormula();\n\nThe value of myFormula will become \"E-30138&\\\" Total\\\"\"\n\nI suspect that these functions are using short row values instead of int."}, {"attachment_id": null, "tags": [], "bug_id": 43399, "text": "I downloaded the source code and investigated.  The problem is the result of \ntaking an int value, writing to 2 bytes and then loading it back into an int.  \nThis turns numbers greater than 32767 negative.  I was able to resolve this \nproblem by placing the following code at the end of the constructors of \norg.apache.poi.hssf.util.CellReference...\n\n        if (row < 0)\n            row = (Math.abs(row) - 1) ^ 0xFFFF;\n\nCould someone please add this (or something like it) to the codebase.  Thanks.", "count": 1, "id": 108214, "time": "2007-09-14T15:01:43Z", "creator": "rmills@dex.com", "creation_time": "2007-09-14T15:01:43Z", "is_private": false}, {"count": 2, "tags": [], "creator": "apache@gagravarr.org", "attachment_id": null, "is_private": false, "id": 108283, "time": "2007-09-17T10:00:11Z", "bug_id": 43399, "creation_time": "2007-09-17T10:00:11Z", "text": "If I understand correctly, your patch suggests fixing CellReference so it\nhandles negative numbers properly\n\nI think we'd be better off tweaking the thing that created / loaded the\nreference, so it correctly ends up with a positive number. Any chance you could\nidentify where the short/int problem actually occurs, so we can patch that?"}, {"count": 3, "tags": [], "bug_id": 43399, "is_private": false, "id": 108284, "creation_time": "2007-09-17T10:37:40Z", "time": "2007-09-17T10:37:40Z", "creator": "rmills@dex.com", "text": "You're right.\n\nWhat really needs to be done is to modify \norg.apache.poi.hssf.record.formula.ReferencePtg.  There is a private class \nproperty field_1_row that is defined as a short.  That property needs to be \nchanged to an int.  Then all the methods in the class that read/write to this \nproperty need to be fixed.", "attachment_id": null}, {"count": 4, "tags": [], "text": "It turns out that we can't simply tweak ReferencePtg to use an integer for the\nrow, as that breaks everything else (which assumes a short)\n\nI've added a setRow(int) method, which takes a 0<=row<63566 argument, and\nhandles wrapping. I've also added a a getRowAsInt, which again does the\nwrapping. With those in, the toForumulaString method can then call getRowAsInt,\ninstead of getRow, and everything's happy.\n\nTestcase committed too, so we can be sure it'll stay fixed in future!", "is_private": false, "id": 108341, "creation_time": "2007-09-18T08:03:33Z", "time": "2007-09-18T08:03:33Z", "creator": "apache@gagravarr.org", "bug_id": 43399, "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 43399, "is_private": false, "text": "Thanks for all your help\n\nThis API has really had a big impact on our business.  The ability to \nautomatically generate nicely formatted excel documents has saved us countless \nhours of work.", "id": 108346, "time": "2007-09-18T09:34:58Z", "creator": "rmills@dex.com", "creation_time": "2007-09-18T09:34:58Z", "attachment_id": null}]