[{"count": 0, "tags": [], "creator": "andreas.meier@bnd.bund.de", "attachment_id": 32878, "id": 183848, "time": "2015-07-02T09:59:33Z", "bug_id": 58093, "creation_time": "2015-07-02T09:59:33Z", "is_private": false, "text": "Created attachment 32878\nExample\n\nI haven't found any possibility for a change request of POI, so I write my request here:\n\nIf there are any word documents (doc/docx) embedded into a word document(doc)  [Word 97(-2007)] getDocumentText() will return an identifier for the embedded document (EMBED Word.Document.12) and control characters (\"end-of-text\", \"end-of-transmission\"), as you can see in the left side of the attached image.\n\nIs this method meant to act like this?\nWhy is there no option to determine the structure and content of the document text?\nIn my opinion, the document text shall be the document content. That means: header, content, footer but no metadata/metainformation!\n\nI recommend to rework the getDocumentText()-method in HWPFDocument in the following way:\n- Add a flag (boolean) \"suppressEmbeddedInformation\", to suppress metainformation like embedded objects (EMBED Word.Document.X) and the control characters that come with this metainformation\n- Add a flag (boolean) \"recursiveExtraction\". On \"true\" every embedded Document calls its getDocumentText() or getText()-method and provides its content as a string. On \"false\" only the document content (header, content, footer) of the main document is extracted.\n\nThe attached image shows two results for the extraction of an embedded docx document inside a doc document:\nOn the left side you see the current result of the getDocumentText()-method. On the right side you see one possible (clean) result I would like to have.\n\nWhat do you think about it?"}, {"count": 1, "tags": [], "creator": "apache@gagravarr.org", "attachment_id": null, "id": 183851, "time": "2015-07-02T10:39:52Z", "bug_id": 58093, "creation_time": "2015-07-02T10:39:52Z", "is_private": false, "text": "There are all sorts of control sequences / fields that can come through in the text, as the .doc format handles loads of things that way\n\nIf you don't want these, and only want the text, then use a util method like https://poi.apache.org/apidocs/org/apache/poi/hwpf/extractor/WordExtractor.html#stripFields%28java.lang.String%29 to have them removed\n\nNote that the javadocs for https://poi.apache.org/apidocs/org/apache/poi/hwpf/HWPFDocumentCore.html#getDocumentText%28%29 explicitly state that you get the fields included in the response. Other methods (eg via WordExtractor, or Apache Tika) are provided to give content-text only, for those who want it"}]