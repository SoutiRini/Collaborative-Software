[{"count": 0, "tags": [], "creator": "fabrizio.giudici@tidalwave.it", "is_private": false, "text": "Hello.\n\nThe class org.apache.batik.util.Services incorrectly closes a stream, causing in some cases a NPE that swallows the original exception. This has personally caused quite a mess for finding an error in a custom application that triggered this.\n\nThe culprit is this code:\n\n                if ( br == null ){\n                    try{\n                        br.close();\n                    } catch ( IOException ignored ){}\n                    br = null;\n                }\n\nWhere clearly the test should be if (br != null). Attaching the svn diff of the patch:\n\nIndex: Service.java\n===================================================================\n--- Service.java\t(revision 755499)\n+++ Service.java\t(working copy)\n@@ -146,7 +146,7 @@\n                     } catch ( IOException ignored ){}\n                     r = null;\n                 }\n-                if ( br == null ){\n+                if ( br != null ){\n                     try{\n                         br.close();\n                     } catch ( IOException ignored ){}", "id": 125608, "time": "2009-03-18T00:51:47Z", "bug_id": 46871, "creation_time": "2009-03-18T00:51:47Z", "attachment_id": null}, {"count": 1, "attachment_id": null, "creator": "cam@apache.org", "text": "Thanks Fabrizio.  Fixed in r755817.  (The patch was small enough not to need an ICLA to be submitted, IMO.)", "id": 125619, "time": "2009-03-18T19:52:53Z", "bug_id": 46871, "creation_time": "2009-03-18T19:52:53Z", "tags": [], "is_private": false}]