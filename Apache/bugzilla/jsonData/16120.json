[{"count": 0, "tags": [], "creator": "coad@measurement-factory.com", "attachment_id": null, "id": 29425, "time": "2003-01-15T17:37:31Z", "bug_id": 16120, "creation_time": "2003-01-15T17:37:31Z", "is_private": false, "text": "Looks like a possible RFC 2616 MUST violation.\nAs a proxy, Apache must not silently terminate \nconnections if the URI is too long. It must respond \nwith an error message if it cannot handle the request.\nAt the very least, silent termination should not\nbe the default behavior?\n\nSee attached traces for details and ways to reproduce\nsome of the violations mentioned above.\n\nTest case IDs in the trace link to human-oriented test case\ndescription and RFC quotes, if available."}, {"count": 1, "tags": [], "bug_id": 16120, "text": "Created attachment 4433\ntest case trace", "id": 29427, "attachment_id": 4433, "creator": "coad@measurement-factory.com", "creation_time": "2003-01-15T17:38:33Z", "time": "2003-01-15T17:38:33Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 16120, "text": "Can you test this against a normal Apache URL, and not just a proxy URL? This\nlooks like a general Apache bug, not a proxy one - just want to confirm.\n", "id": 35252, "attachment_id": null, "creator": "minfrin@sharp.fm", "creation_time": "2003-04-15T18:56:06Z", "time": "2003-04-15T18:56:06Z", "is_private": false}, {"count": 3, "text": "It is OK for the origin server to terminate a transaction on long URIs\nbecause, presumably, that origin server does not \"host\" (serve) them\n(i.e., it is just a DoS attack or whatever).\n\nA proxy, however, has to accomodate any origin server. It does not have\na well-defined set of URLs it MUST \"serve\". In other words, it MUST serve\nall URLs (by default, to be compliant). Responding with an error is fine,\nof course.\n\nWe will try to reproduce against an origin server, but it may take some\ntime.\n", "bug_id": 16120, "attachment_id": null, "id": 35255, "time": "2003-04-15T19:20:24Z", "creator": "coad@measurement-factory.com", "creation_time": "2003-04-15T19:20:24Z", "tags": [], "is_private": false}, {"count": 4, "tags": [], "bug_id": 16120, "attachment_id": null, "text": "When I tested it, it seemed that Apache simply silently closed the socket and\nignored the request entirely - proxy didn't get a look at it at all. I agree\nthere should be some sort of error message though. I have changed this bug to\npoint at the core, as I think the problem lies there.\n", "id": 35319, "time": "2003-04-16T12:51:52Z", "creator": "minfrin@sharp.fm", "creation_time": "2003-04-16T12:51:52Z", "is_private": false}, {"count": 5, "tags": [], "creator": "coad@measurement-factory.com", "attachment_id": null, "id": 35374, "time": "2003-04-16T19:33:33Z", "bug_id": 16120, "creation_time": "2003-04-16T19:33:33Z", "is_private": false, "text": "OK. Here is a note/summary for the \"core\" folks, to decrease the \nchances of misunderstanding and the bug being rendered as \"invalid\".\n\nIt may be OK, IMO, for the origin server to silently \nterminate a connection when a huge request comes in. It is a\nviolation to do that at the proxy though. Thus, the core should\nsomehow check whether it is being used in proxy mode and act\naccordingly.\n"}, {"count": 6, "text": "There have been a variety of fixes in this area over recent 2.0 release; it\nseems to work fine here now:\n\n$ perl -e \"printf 'GET http://foo/'.('X'x9000);\" | nc localhost 80\nHTTP/1.1 414 Request-URI Too Large\n...\n\nwhich is expected behaviour.", "bug_id": 16120, "attachment_id": null, "id": 71539, "time": "2005-02-25T18:13:34Z", "creator": "jorton@redhat.com", "creation_time": "2005-02-25T18:13:34Z", "tags": [], "is_private": false}]