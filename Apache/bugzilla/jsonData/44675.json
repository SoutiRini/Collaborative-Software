[{"attachment_id": null, "tags": [], "bug_id": 44675, "text": "The following test code fails because POI encodes all functions as FuncVarPtg:\n\n        Workbook book = Workbook.createWorkbook();\n        Ptg[] ptgs = FormulaParser.parse(\"countif(A1:A2, 1)\", book);\n        assertEquals(FuncPtg.class, ptgs[2].getClass());\n\nExcel tolerates the incorrect token FuncVarPtg for many functions like SIN() etc, but COUNTIF() is one example where this error is visible in Excel (#VALUE!).", "count": 0, "id": 114971, "time": "2008-03-26T00:01:16Z", "creator": "josh@apache.org", "creation_time": "2008-03-26T00:01:16Z", "is_private": false}, {"count": 1, "tags": [], "creator": "josh@apache.org", "is_private": false, "text": "Applied patch in svn r641185.\n\nThe main change of this patch is to take the function metadata which was originally in AbstractFunctionPtg and move it to FunctionMetadataRegistry.  The original metadata had only one arg-count field.  Both min and max are required to distinguish var-arg functions (and will also be handy for parser validations later).  The new metadata used by POI is generated directly from the OOO excelfileformat.odt.\n\nA new sample spreadsheet (missingFuncs44675.xls) was added.  Prior to the patch, POI would fail to display the six formulas correctly.  Some extra bugs were identified and fixed while trying to get this spreadsheet to work:\n - tAttrVolatile needs to be handled in FormulaParser.toFormulaString()\n - NOW() function needs to take zero parameters\n\nThere were some (~6) errors in the metadata from excelfileformat.odt.  One extra text file: 'functionMetadata-asGenerated.txt' has been included for comparison with the actual file used by POI: 'functionMetadata.txt'.  The diffs of these two files should be used to fix excelfileformat.odt.\n\n", "id": 114972, "time": "2008-03-26T00:54:42Z", "bug_id": 44675, "creation_time": "2008-03-26T00:54:42Z", "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 44675, "text": "setCellFormula(\"SUM(A1:A2)\") produces #VALUE! error in Excel\n\nThis started happening since this patch.\n\nHSSFWorkbook wb = new HSSFWorkbook();\nHSSFSheet sh = wb.createSheet(\"TestSheet\");\n\t\nHSSFRow row1 = sh.createRow(0);\t\nHSSFCell A1 = row1.createCell((short)0); \nA1.setCellValue(1.);\n\nHSSFRow row2 = sh.createRow(1);\t\nHSSFCell A2 = row2.createCell((short)0); \nA2.setCellValue(1.);\n\nHSSFRow row3 = sh.createRow(2);\t\nHSSFCell A3 = row3.createCell((short)0); \nA3.setCellFormula(\"SUM(A1:A2)\");\n\n--------------------------------------------\n\nFuncVarPtg is used to represent SUM function.\nFuncVarPtg(String pName, byte pNumOperands) constructor initializes paramClass with Ptg.CLASS_VALUE while it used to be Ptg.CLASS_REF before this patch.\n\nI am not quite sure about the meaning of this, but when I manually changed it in debugger to Ptg.CLASS_REF, the problem disappeared.\n", "id": 116185, "time": "2008-05-02T16:06:14Z", "creator": "dq@mail.com", "creation_time": "2008-05-02T16:06:14Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "text": "Fixed in svn r652994.\n\nPrior to r641185 SUM would get parameter operand class Ptg.CLASS_REF.  When I refactored the function metadata (to recognise var arg functions) I left the parameter operand classes anattached, because there were no junits to confirm this requirement. I added such a junit with this most recent fix.\n\nThe 'operand class' stuff is not well tested by POI.  Furthermore Excel often  tolerates incorrect token operand classes, so when POI gets it wrong the errors are not always immediately apparent.\n\nAnother enhancement I added here was to validate function arg counts when parsing formulas.  None of the existing junits were disturbed by this (they all supply correct function arg counts in every case).", "is_private": false, "id": 116189, "creator": "josh@apache.org", "time": "2008-05-02T21:13:25Z", "bug_id": 44675, "creation_time": "2008-05-02T21:13:25Z", "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 44675, "text": "A new version of \"The Microsoft Excel File Format\" has been released\nhttp://sc.openoffice.org/excelfileformat.odt\n\nThanks to Daniel Rentz for making several tweaks to the function metadata in this document to help align with POI.  Now the files functionMetadata-asGenerated.txt and functionMetadata.txt are exactly the same (no need to apply manual edits).\n\nThis change has been applied in svn r658986.\n\n\n\n\n", "count": 4, "id": 116890, "time": "2008-05-21T20:42:59Z", "creator": "josh@apache.org", "creation_time": "2008-05-21T20:42:59Z", "is_private": false}]