[{"count": 0, "tags": [], "text": "I am using FOP 0.95 (latest stable at the time of writing) and attached FO file.\n\nI convert it to PDF with\n\nfop -fo minimal.xml minimal.PDF\n\nExpected output:\n\nA PDF file with two pages with \"Text on the first ..\" shown in the first page \nand \"Text on the next...\" shown in the second \n\nActual Output:\n\nA PDF file with two pages. Only the \"Text on the first..\" appears on the \ndocument. The rest of \"Text on the next...\" is completely missing (not shown at \nall).\n\nI was told in the mailing list by Vincent Hennebert that this is a bug and that I should report it in bugzilla\n\nThank you.", "attachment_id": null, "bug_id": 47145, "id": 126748, "time": "2009-05-04T00:24:56Z", "creator": "kkapelon@freemail.gr", "creation_time": "2009-05-04T00:24:56Z", "is_private": false}, {"count": 1, "tags": [], "creator": "kkapelon@freemail.gr", "attachment_id": 23603, "text": "Created attachment 23603\nResult PDF file", "id": 126749, "time": "2009-05-04T00:25:52Z", "bug_id": 47145, "creation_time": "2009-05-04T00:25:52Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 47145, "attachment_id": 23604, "is_private": false, "id": 126750, "time": "2009-05-04T00:30:22Z", "creator": "kkapelon@freemail.gr", "creation_time": "2009-05-04T00:30:22Z", "text": "Created attachment 23604\nSample FO file that triggers the bug\n\nAdded testcase FOP"}, {"count": 3, "tags": [], "bug_id": 47145, "text": "Thank you for your bug report and your simple example. From a quick debugging session I found out the following:\n\nThe problem lies in the sequence of Knuth elements that is generated for the block children of the table cell: there is a penalty with -infinite value for the forced break, immediately followed by a infinite penalty for the keep. The consequence is that when areas are added to the second page, the first encountered Position is a SpaceHandlingBreakPosition, that has no LayoutManager associated to it, which early terminates the addition of areas.\n\nThe bug is this second penalty that shouldn't be generated in the first place, since breaks win over keeps. There may be an opportunity to fix that in the same time as bug #46905.\n\nVincent", "id": 126818, "time": "2009-05-06T09:48:04Z", "creator": "vhennebert@gmail.com", "creation_time": "2009-05-06T09:48:04Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 47145, "attachment_id": null, "is_private": false, "id": 126820, "time": "2009-05-06T10:16:07Z", "creator": "adelmelle@apache.org", "creation_time": "2009-05-06T10:16:07Z", "text": "(In reply to comment #3)\n> The bug is this second penalty that shouldn't be generated in the first place,\n> since breaks win over keeps. There may be an opportunity to fix that in the\n> same time as bug #46905.\n\nAgreed. As I remember from another similar issue I fixed recently in FlowLayoutManager, it could turn out to be a very straightforward fix. I'll see if I can confirm later tonight.\nAt some point in getNextKnuthElements(), the parentLM adds a break in between the sequences returned by two consecutive childLMs. It's likely to be a simple matter of :\n\nif (!ElementListUtils.endsWithForcedBreak(returnedList)) {\n  //add in-between break\n}"}, {"count": 5, "tags": [], "bug_id": 47145, "attachment_id": null, "text": "\nConfirmed: checking for endsWithForcedBreak() in TableCellLM resolves the issue in this case. The only thing worrying me somewhat is that we have a similar bit of code in BlockStackingLM. May be possible to consolidate those somehow.", "id": 126823, "time": "2009-05-06T14:43:22Z", "creator": "adelmelle@apache.org", "creation_time": "2009-05-06T14:43:22Z", "is_private": false}, {"count": 6, "tags": [], "bug_id": 47145, "attachment_id": null, "is_private": false, "id": 126843, "time": "2009-05-07T02:38:41Z", "creator": "vhennebert@gmail.com", "creation_time": "2009-05-07T02:38:41Z", "text": "(In reply to comment #4)\n> (In reply to comment #3)\n> > The bug is this second penalty that shouldn't be generated in the first place,\n> > since breaks win over keeps. There may be an opportunity to fix that in the\n> > same time as bug #46905.\n> \n> Agreed. As I remember from another similar issue I fixed recently in\n> FlowLayoutManager, it could turn out to be a very straightforward fix. I'll see\n> if I can confirm later tonight.\n> At some point in getNextKnuthElements(), the parentLM adds a break in between\n> the sequences returned by two consecutive childLMs. It's likely to be a simple\n> matter of :\n> \n> if (!ElementListUtils.endsWithForcedBreak(returnedList)) {\n>   //add in-between break\n> }\n\nI think a LayoutManager shouldn't generate a Penalty element for a break-before/after. That's the job of the enclosing LayoutManager, when its addInBetweenBreak method is called. It's there that all the information about break-after on the current childLM, break-before on the next childLM, keep-with-next/with-previous/together can be collected, and a proper Penalty element can (optionally) be generated. I say optionally because no element needs be generated at all if a break-after is set on the last block of a page-sequence, for example.\nThat's what I did in tables (see TableContentLM.getKnuthElementsForRowIterator) and it works pretty well.\n\nVincent"}, {"count": 7, "tags": [], "creator": "gadams@apache.org", "attachment_id": null, "text": "resetting severity from major to normal pending further review", "id": 157292, "time": "2012-04-07T01:37:35Z", "bug_id": 47145, "creation_time": "2012-04-07T01:37:35Z", "is_private": false}, {"count": 8, "tags": [], "bug_id": 47145, "attachment_id": null, "is_private": false, "id": 157420, "time": "2012-04-07T01:42:40Z", "creator": "gadams@apache.org", "creation_time": "2012-04-07T01:42:40Z", "text": "resetting P2 open bugs to P3 pending further review"}]