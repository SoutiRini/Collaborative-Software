[{"count": 0, "tags": [], "creator": "quinntaylor@mac.com", "text": "When using the <javadoc> task in a target, I can get it to link to external Javadoc API by providing a nested <link> element, even two, and it works fine. The moment a third <link> element is added, the only output I get is:\n\n             docs:\n              [javadoc] Generating Javadoc\n              [javadoc] Javadoc execution\n            \n             BUILD SUCCESSFUL\n             Total time: 0 seconds\n\nNo packages are loaded or parsed, and no output is generated. It doesn't seem to matter what URL's are, or what order they're in. For reference, here are several that I've been using:\n\n            <link href=\"http://java.sun.com/j2se/1.5.0/docs/api/\"/>\n            <link href=\"http://java.sun.com/javaee/5/docs/api/\"/>\n            <link href=\"http://bouncycastle.org/docs/docs1.5/\"/>\n            <link href=\"http://bouncycastle.org/docs/mdocs1.5/\"/>\n            <link href=\"http://junit.org/junit/javadoc/4.5/\"/>\n\nIt wouldn't seem to be a timeout issue, since when I'm on a slow connection, the javadoc tasks hangs until it can download the \"package-list\" file from each URL.\n\nI've tried increasing the memory with the 'maxmemory' attribute, to no avail. My next step is to try using offline saved files for each link. Perhaps that will work, but even if it does, that's a serious PITA workaround for something that should just work, especially since each file has to be named \"package-list\" and be in a different directory.", "id": 124598, "time": "2009-02-02T13:16:30Z", "bug_id": 46649, "creation_time": "2009-02-02T13:16:30Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 46649, "text": "I've used Ant's own javadoc task (the one from Ant's build.xml) and added your five links and it just works both with Ant's svn trunk and 1.7.1 - so it must be something else.\n\nMaybe the command line is getting too long?  Have you tried useexternalfile=\"true\"?\n\nWhat does Ant tell you it would be doing in -verbose mode?\n\n\n", "id": 124616, "time": "2009-02-02T20:46:07Z", "creator": "bodewig@apache.org", "creation_time": "2009-02-02T20:46:07Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 46649, "is_private": false, "id": 124682, "attachment_id": null, "creator": "quinntaylor@mac.com", "creation_time": "2009-02-05T13:22:39Z", "time": "2009-02-05T13:22:39Z", "text": "(In reply to comment #1)\n> \n> Maybe the command line is getting too long?  Have you tried\n> useexternalfile=\"true\"?\n> \n> What does Ant tell you it would be doing in -verbose mode?\n> \n\nExcellent catch! I used the verbose flag, and although Ant didn't print the entire command, the resulting output was sufficient to disclose the symptom. The classpath for the problematic project includes a whole heap of JAR files, as well as a lot of other options. (Those potential problems are less obvious in a build.xml, especiall with *.jar pattern matching.) I think what must have happened is that adding one-too-many external links cause the command to be truncated before any source files were specified, so Javadoc figured it had nothing to document.\n\nIn the end, adding useexternalfile=\"true\" solved the problem for me. Thanks!"}]