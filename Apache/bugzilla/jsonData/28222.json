[{"count": 0, "tags": [], "creator": "hughjlee@yahoo.com", "text": "1.jsp:\n<%getServletContext().getRequestDispatcher(\"/2.jsp\").forward(request, \nresponse);%>\n2.jsp:\n<%out.print(request.getRequestURL());%>\n\nThe output of 2.jsp is \"http://.../1.jsp\" but NOT \"http://...2.jsp\". According \nto SRV8.4, \"The path elements of the request object exposed to the target \nservlet must reflect the path used to obtain the RequestDispatcher.\" In this \ntest case, \"path used to obtain the RequestDispatcher\" is \"/2.jsp\", so \ngetRequestURL() in 2.jsp should return \"http://...2.jsp\".", "id": 55360, "time": "2004-04-06T02:36:35Z", "bug_id": 28222, "creation_time": "2004-04-06T02:36:35Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "text": "Fixed in CVS for TC4.1.x and TC5.5.x", "is_private": false, "id": 69735, "creator": "markt@apache.org", "time": "2005-01-15T21:31:51Z", "bug_id": 28222, "creation_time": "2005-01-15T21:31:51Z", "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 28222, "is_private": false, "count": 2, "id": 71750, "time": "2005-03-03T09:28:54Z", "creator": "jleertouwer@hotmail.com", "creation_time": "2005-03-03T09:28:54Z", "text": "This fix gives many problems when using frameworks like struts and spring \ntogether with templating (i.e. Tiles).\n\nIt will now always return the JSP of the template, which makes it impossible to \nfind out what the actual request uri was."}, {"count": 3, "attachment_id": null, "creator": "remm@apache.org", "text": "I cannot say if the fix is invalid or not. Actually, it seems valid to me, and\nas a result, it's here to stay. You obviously can retrieve any of the original\nrequest paths (you have all the RD request attributes at your disposal for this).\n\nPlease do not reopen the report.", "id": 71757, "time": "2005-03-03T11:02:22Z", "bug_id": 28222, "creation_time": "2005-03-03T11:02:22Z", "tags": [], "is_private": false}, {"count": 4, "tags": [], "bug_id": 28222, "attachment_id": null, "is_private": false, "id": 74249, "time": "2005-04-28T19:49:05Z", "creator": "flaviotordini@tiscali.it", "creation_time": "2005-04-28T19:49:05Z", "text": "IMHO this conflicts with the specification of HttpServletRequest.getRequestURL():\n\n\"Reconstructs the URL the client used to make the request\"\n\nIt says \"the client\" but after a forward the returned URL is not the client URL\nanymore.\n\nbtw I'm posting this because the \"fix\" breaks my applications :("}, {"count": 5, "tags": [], "bug_id": 28222, "attachment_id": null, "is_private": false, "id": 74298, "time": "2005-05-01T00:51:16Z", "creator": "PeterEnglish@yahoo.com", "creation_time": "2005-05-01T00:51:16Z", "text": "This bug also affects web pages protected by the web.xml constraint:\n\n<security-constraint>\n    . . .\n  <user-data-constraint>\n    <transport-guarantee>CONFIDENTIAL</transport-guarantee>\n  </user-data-constraint> \n</security-constraint>\n\nWhat happens is if the user access the page via an unsecure URL like:\n\nhttp://localhost:8080/MyAccount\n\nTomcat will redirect to an SSL enable port if the redirectPort pramater is \nspecified for the connector.\n\nIn my case, the secure port where SSL is enabled is port 8443\n\nThe resulting req.getRequestURL() call returns:\n\n  https://localhost:8080/MyAccount\n\nwhich is incorrect.\n\nTomcat should have returned:\n\n  https://localhost:8443/MyAccount\n\n"}, {"count": 6, "tags": [], "bug_id": 28222, "attachment_id": null, "text": "*** Bug 35317 has been marked as a duplicate of this bug. ***", "id": 76281, "time": "2005-06-10T21:52:12Z", "creator": "remm@apache.org", "creation_time": "2005-06-10T21:52:12Z", "is_private": false}, {"attachment_id": null, "tags": [], "bug_id": 28222, "is_private": false, "count": 7, "id": 76559, "time": "2005-06-20T10:45:26Z", "creator": "remm@apache.org", "creation_time": "2005-06-20T10:45:26Z", "text": "*** Bug 35425 has been marked as a duplicate of this bug. ***"}, {"count": 8, "text": "*** Bug 35425 has been marked as a duplicate of this bug. ***", "bug_id": 28222, "attachment_id": null, "id": 76905, "time": "2005-07-01T21:43:55Z", "creator": "markt@apache.org", "creation_time": "2005-07-01T21:43:55Z", "tags": [], "is_private": false}, {"count": 9, "tags": [], "bug_id": 28222, "attachment_id": null, "is_private": false, "id": 81540, "time": "2005-10-21T21:14:45Z", "creator": "bruno@fdis.etg.gc.ca", "creation_time": "2005-10-21T21:14:45Z", "text": "As mentioned in some of the previous comments, this fix seems to have broken\nwhat was working for me in 5.0. For a demo of what happens, see\n\nhttp://fdis.etg.gc.ca:8080/cdua3\n\nfor the Tomcat 5.0 version, and \n\nhttp://fdis.etg.gc.ca:8081/cdua3.3\n\nfor the Tomcat 5.5 version.\n\nTo see the difference in behaviour, click multiple times on the \"English\" and\n\"Fran\u00e7ais\" hyperlinks at the top left of the screen. You will find out the 5.0\nversion works, but the 5.5 does not because it uses the jsp URL instead of the\nStruts action. The code can be downloaded from the same website for inspection\n(cdua3.tags.LinkTranslateURLTag.java).\n\nAs far as I am concerned, the only question to ask is: was the behavior of the\ngetRequestURL function broken in 5.0 - i.e., it was being used in the wrong way\nby my application and I was lucky to get it to work-, or is it broken now?\n\nThank you for your attention on this matter."}, {"count": 10, "tags": [], "bug_id": 28222, "is_private": false, "text": "5.0 is broken and you were lucky\n\n5.5 has the correct (as required by SRV.8.4) behaviour\n\nThe fix for your app should be simple, SRV.8.4 explains where you can get the\ninfo you require.", "id": 81551, "time": "2005-10-22T00:04:34Z", "creator": "markt@apache.org", "creation_time": "2005-10-22T00:04:34Z", "attachment_id": null}, {"count": 11, "tags": [], "bug_id": 28222, "attachment_id": null, "is_private": false, "id": 81596, "time": "2005-10-24T09:13:48Z", "creator": "r.grzanka@ks-software.com", "creation_time": "2005-10-24T09:13:48Z", "text": "The problem is also that tomcat servlet's javadocs were (are still??) misleading\nand sugesting behaviour of 5.0 tomcat."}, {"attachment_id": null, "tags": [], "bug_id": 28222, "text": "The servlet JavaDocs are defined by the servlet spec team and we can't change them.", "count": 12, "id": 81716, "time": "2005-10-25T16:29:50Z", "creator": "markt@apache.org", "creation_time": "2005-10-25T16:29:50Z", "is_private": false}, {"attachment_id": null, "tags": [], "bug_id": 28222, "is_private": false, "count": 13, "id": 81755, "time": "2005-10-26T09:55:01Z", "creator": "r.grzanka@ks-software.com", "creation_time": "2005-10-26T09:55:01Z", "text": "Sorry for that \"tomcat's\" thing then. \n\nAnyway I am pretty confused right now. If these javadocs are driven by servlet\nspec then HttpServletRequest.getRequest() states:\n\n\"Reconstructs the URL the client used to make the request. The returned URL\ncontains a protocol, server name, port number, and server path, but it does not\ninclude query string parameters.\"\n(\nhttp://tomcat.apache.org/tomcat-5.5-doc/servletapi/javax/servlet/http/HttpServletRequest.html#getRequestURL()\n)\n\nThis really stands in the way of specs themselfs.\nBut I guess you can't do anything about it and I should bother someone else\nabout it.\n\nCheers,\n  Radek."}, {"count": 14, "tags": [], "bug_id": 28222, "text": "Yep, the JavaDocs are confusing here. The JavaDocs make no mention of the\nrequirements of SRV.8.4. However, SRV.8.4 is very clear on how this should work.\n\nThe place to send your comments is servletapi-feedback@eng.sun.com\n\nIn my view, the Javadocs should at least refer to the requirements of SRV.8.4\nand shoudl really include the full requirement here.", "id": 81771, "time": "2005-10-26T15:51:26Z", "creator": "markt@apache.org", "creation_time": "2005-10-26T15:51:26Z", "is_private": false, "attachment_id": null}, {"count": 15, "tags": [], "bug_id": 28222, "attachment_id": null, "is_private": false, "id": 82071, "time": "2005-11-03T02:41:34Z", "creator": "jan.luehe@sun.com", "creation_time": "2005-11-03T02:41:34Z", "text": "I just filed Issue 26 (\"[javadocs] HttpServletRequest.getRequestURL()\ndoes not consider RD.forward() scenario\") with the Servlet EG, see\n\n  https://servlet-spec-eg.dev.java.net/issues/show_bug.cgi?id=26,\n\nwith the following description:\n\n======================================================================\nThe javadocs of javax.servlet.http.HttpServletRequest.getRequestURL()\nhave been misleading and causing confusion among developers.\n\nSee http://issues.apache.org/bugzilla/show_bug.cgi?id=28222,\nSynopsis: \"getRequestURL() in forwarded jsp/servlet doesn't return new url\",\nfor details.\n\nI am proposing the following clarification to the javadocs of\njavax.servlet.http.HttpServletRequest.getRequestURL():\n\nIndex: HttpServletRequest.java\n===================================================================\nRCS file:\n/cvs/glassfish/servlet-api/src/jakarta-servletapi-5/jsr154/src/share/javax/servlet/http/HttpServletRequest.java,v\nretrieving revision 1.2\ndiff -u -r1.2 HttpServletRequest.java\n--- HttpServletRequest.java\t16 Aug 2005 02:02:08 -0000\t1.2\n+++ HttpServletRequest.java\t1 Nov 2005 18:31:11 -0000\n@@ -535,6 +535,11 @@\n      * number, and server path, but it does not include query\n      * string parameters.\n      *\n+     * <p>If this request has been forwarded using\n+     * {@link javax.servlet.RequestDispatcher#forward}, the server path in the\n+     * reconstructed URL must reflect the path used to obtain the\n+     * RequestDispatcher, and not the server path specified by the client.\n+     *\n      * <p>Because this method returns a <code>StringBuffer</code>,\n      * not a string, you can modify the URL easily, for example,\n      * to append query parameters.\n===================================================================\n\nWe still have a small window of opportunity where clarifications of this kind\nmay be added to the Servlet 2.5 spec."}, {"count": 16, "tags": [], "text": "For those of you affected by this bug, here is a simple utility method for\nrecreating the URL of the current request:\n\n/** \n * Recreates the full URL that originally got the web client to the given \n * request.  This takes into account changes to the request due to request \n * dispatching.\n *\n * <p>Note that if the protocol is HTTP and the port number is 80 or if the\n * protocol is HTTPS and the port number is 443, then the port number is not \n * added to the return string as a convenience.</p>\n */\npublic final static String getReturnURL(HttpServletRequest request)\n{\n    if (request == null)\n    {\n        throw new IllegalArgumentException(\"Cannot take null parameters.\");\n    }\n    \n    String scheme = request.getScheme();\n    String serverName = request.getServerName();\n    int serverPort = request.getServerPort();\n    \n    //try to get the forwarder value first, only if it's empty fall back to the\ncurrent value\n    String requestUri =\n(String)request.getAttribute(\"javax.servlet.forward.request_uri\");\n    requestUri = (requestUri == null) ? request.getRequestURI() : requestUri;\n \n    //try to get the forwarder value first, only if it's empty fall back to the\ncurrent value \n    String queryString =\n(String)request.getAttribute(\"javax.servlet.forward.query_string\");\n    queryString = (queryString == null) ? request.getQueryString() : qs;\n\n    StringBuffer buffer = new StringBuffer();\n    buffer.append(scheme);\n    buffer.append(\"://\");\n    buffer.append(serverName);\n    \n    //if not http:80 or https:443, then add the port number\n    if(\n        !(scheme.equalsIgnoreCase(\"http\") && serverPort == 80) &&\n        !(scheme.equalsIgnoreCase(\"https\") && serverPort == 443)\n    )\n    {\n        buffer.append(String.valueOf(serverPort));\n    }\n    \n    buffer.append(requestUri);\n    \n    if (queryString != null)\n    {\n        buffer.append(\"?\");\n        buffer.append(queryString);\n    }\n    \n    return buffer.toString();\n}\n", "attachment_id": null, "id": 94013, "creator": "larry.karnowski@raritan.com", "time": "2006-09-22T15:54:35Z", "bug_id": 28222, "creation_time": "2006-09-22T15:54:35Z", "is_private": false}]