[{"count": 0, "tags": [], "bug_id": 34080, "attachment_id": null, "text": "naughty, naughty programmer ditches the original exception.  See line 684 of\ncurrent nightly build of org.apache.catalina.realm.JDBCRealm.java\n\n        // Instantiate our database driver if necessary\n        if (driver == null) {\n            try {\n                Class clazz = Class.forName(driverName);\n                driver = (Driver) clazz.newInstance();\n            } catch (Throwable e) {\n                throw new SQLException(e.getMessage());\n            }\n        }\n\nAs you can see, only the message of the exception is retained which is usually\nmeaningless without knowning the exception it's self.  The original stack trace\nis also lost.  To make matters worse, SQLException doesn't take a rootCause to\nshow you this because it expects this to come from a DBMS and not a driver class\nloading routine.\n\nThe issues surrounding this \"catch Throwable\" is that Class.forName() can throw\nsome nasty errors and we dont want a bad JDBC realm configuration to bring down\nTomcat.  The possible Throwables from this try block are:\n\nLinkageError\nExceptionInInitializerError\nClassNotFoundException\nClassCastException\n\nAdditionally, ExceptionInInitializerError can contain an exception from the\nstatic initializer of the driver class that failed to load, compounding the\noriginal lost exception issue.  This presents a diverse array of possible problems.\n\nI propose we throw a LifeCycleException, but catch it in the start() method.  If\nI understand the logic correctly, we want to let the app start up if they aren't\nusing authentication, even though they don't have their realm configured correctly.\n\nFeedback please?", "id": 72683, "time": "2005-03-19T05:28:29Z", "creator": "daniel.santos@pobox.com", "creation_time": "2005-03-19T05:28:29Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 34080, "attachment_id": null, "text": "Actually, the open() method is called from several places, looks like it may be\nbetter to have a RealmException class or even an internal mechanism or private\nstatic innerclass or something.\n\nFeedback please?", "id": 72684, "time": "2005-03-19T05:41:25Z", "creator": "daniel.santos@pobox.com", "creation_time": "2005-03-19T05:41:25Z", "is_private": false}, {"text": "No.", "tags": [], "bug_id": 34080, "attachment_id": null, "count": 2, "id": 72688, "time": "2005-03-19T09:04:28Z", "creator": "remm@apache.org", "creation_time": "2005-03-19T09:04:28Z", "is_private": false}, {"count": 3, "tags": [], "text": "(In reply to comment #2)\n> No.\n\nwhat!?  You mean you don't feel this is a defect?  Failures are happening and no\nclear reason is given, this is clearly a defect.  I can fix the darn thing.  Why\nare you closing this as wontfix?", "attachment_id": null, "id": 72696, "creator": "daniel.santos@pobox.com", "time": "2005-03-19T16:40:55Z", "bug_id": 34080, "creation_time": "2005-03-19T16:40:55Z", "is_private": false}, {"text": "My answer to \"feedack please ?\" is \"no\". I don't see much to clarify here.", "tags": [], "bug_id": 34080, "attachment_id": null, "count": 4, "id": 72697, "time": "2005-03-19T16:43:15Z", "creator": "remm@apache.org", "creation_time": "2005-03-19T16:43:15Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 34080, "text": "(In reply to comment #4)\n> My answer to \"feedack please ?\" is \"no\". I don't see much to clarify here.\n\nI understand that part, but why are you closing it as wontfix?", "id": 72698, "attachment_id": null, "creator": "daniel.santos@pobox.com", "creation_time": "2005-03-19T16:44:28Z", "time": "2005-03-19T16:44:28Z", "is_private": false}, {"count": 6, "tags": [], "creator": "daniel.santos@pobox.com", "text": "(In reply to comment #4)\n> My answer to \"feedack please ?\" is \"no\". I don't see much to clarify here.\n\nroot cause exception is discarded.  This is a defect in any software.  This\nobscures the reason for the failure and makes it more difficult for the user to\nresolve it.  This needs to be fixed.", "id": 72699, "attachment_id": null, "bug_id": 34080, "creation_time": "2005-03-19T16:51:45Z", "time": "2005-03-19T16:51:45Z", "is_private": false}, {"count": 7, "tags": [], "bug_id": 34080, "attachment_id": null, "id": 72700, "time": "2005-03-19T16:54:18Z", "creator": "remm@apache.org", "creation_time": "2005-03-19T16:54:18Z", "is_private": false, "text": "The issue here is that the JDBC realm is a \"toy\" realm: it doesn't scale at all,\nand by definition is not very robust. I would now like to keep it frozen except\nfor actual bugfixes, to avoid any possible regression like the one that was in\n5.5.7.\n\nI think you should use the data source realm instead. Please do not bother\nreopening this report, nor your other one."}, {"count": 8, "tags": [], "bug_id": 34080, "attachment_id": null, "id": 72701, "time": "2005-03-19T17:24:40Z", "creator": "daniel.santos@pobox.com", "creation_time": "2005-03-19T17:24:40Z", "is_private": false, "text": "Ahhh, thank you for that information.  That makes more sense.  So this reaml is\nprobably on track for deprecation then?  Which realm precisely are you referring\nto?  My project is still using 5.0.28 and I can't change that until the\n\"Standards Committee\" gets around to approving 5.5.\n\nPlease understand that I'm a quality freak and I have a hard time seeing stuff\nlike that and letting it go.  Also, I jacked around with this for a few hours\nbefore I discovered that I was getting this exception because I didn't install\nthe jar file globally.\n\nAlso, another posible solution, although kinda ugly, is just to throw a new\nSQLException(\"Can't load driver class\") { public Throwable getCause() { return\ne; } };  That would leave the exception type the same and pass the root cause. \nOr if we don't want the anonymous ugly thing, we can at least throw new\nSQLException(\"Can't load driver class: \" + e.class() + \" \" + e.getMessege());\n\nDaniel"}, {"count": 9, "tags": [], "bug_id": 34080, "attachment_id": null, "id": 72705, "time": "2005-03-19T19:20:59Z", "creator": "remm@apache.org", "creation_time": "2005-03-19T19:20:59Z", "is_private": false, "text": "The data source realm is DataSourceRealm.\nhttp://jakarta.apache.org/tomcat/tomcat-5.5-doc/realm-howto.html#DataSourceRealm\n\nNote that it has a regression in 5.5.7 caused by the addition of digest auth\nsupport, so you should be using the realm from either 5.5.4 or 5.5.8."}]