[{"count": 0, "tags": [], "text": "We noticed the odd, if not particularly dangerous behavior of mod_session. The relevant configuration is thus:\n\n  <Location />\n        Session On\n        SessionCookieName       ti2f    path=/\n\n        # This is the file containing users login data\n        SessionHeader   -TI-Replace-Session\n        SessionCryptoPassphrase ...\n        SessionCryptoCipher     aes256\n        SessionEnv      on\n  </Location>\n\nThe response-headers, sent to a cookie-less request look like this:\n\n200 OK\nCache-Control: no-cache\nConnection: close\nDate: Thu, 18 Jul 2013 17:12:19 GMT\nServer: Apache/2.4.4\nContent-Type: text/html\nClient-Date: Thu, 18 Jul 2013 17:12:19 GMT\nClient-Peer: 10.89.8.68:14443\nClient-Response-Num: 1\nSet-Cookie: ti2f=;Max-Age=0;path=/\nSet-Cookie: ti2f=;Max-Age=0;path=/\n\nNote, the identical Set-Cookie header repeated twice. With empty session string and Max-Age of 0...", "is_private": false, "bug_id": 55278, "id": 168658, "time": "2013-07-18T17:17:09Z", "creator": "mi+apache@aldan.algebra.com", "creation_time": "2013-07-18T17:17:09Z", "attachment_id": null}, {"count": 1, "tags": [], "creator": "minfrin@sharp.fm", "attachment_id": null, "id": 168710, "time": "2013-07-22T10:59:57Z", "bug_id": 55278, "creation_time": "2013-07-22T10:59:57Z", "is_private": false, "text": "Can you clarify which parts are a problem?\n\nThe duplication needs to be avoided obviously, however setting the cookie to the empty string and setting the max-age to zero is the intended behaviour to delete any previous cookie that may have lingered. HTTP is stateless, and therefore no assumptions are made about previous state of the cookie."}, {"count": 2, "tags": [], "bug_id": 55278, "attachment_id": null, "text": "I would say, if there was no cookie presented in the request, then it can be assumed, there is nothing lingering, can it not?", "id": 168715, "time": "2013-07-22T16:57:52Z", "creator": "mi+apache@aldan.algebra.com", "creation_time": "2013-07-22T16:57:52Z", "is_private": false}, {"count": 3, "tags": [], "creator": "mi+apache@aldan.algebra.com", "attachment_id": null, "is_private": false, "id": 168717, "time": "2013-07-22T17:38:31Z", "bug_id": 55278, "creation_time": "2013-07-22T17:38:31Z", "text": "Even more, perhaps... Even if there was a session-cookie already in the browser, if the server-side processing (CGI, script, whatever) did not attempt to modify the session, then there should not be an attempt to reset the cookie.\n\nAbsence of the session-overwriting header should not be treated the same as presence of an empty header, in my humble opinion."}, {"count": 4, "tags": [], "text": "Created attachment 30633\nOnly save a session, if marked dirty\n\nReading the session_output_filter(), it appears, that the ap_session_save() is invoked unconditionally -- regardless of whether the session was dirtied or not. Indeed, in the following test:\n\n% HEAD -H 'Cookie: fooCookie=O+eAXvYAEeKrG12oGlPfTANDHqG59FO/1krx29xnST4C+Tb+gEU7OCmh7edH87xptVCL9sQyyHEujTp4LAWVWxJmHwLmCVZfdDE+A9vZV0oQma95C4A+YgSGPhuRoceK' 'http://example.com/foo/\n\nwe always see a new Set-Cookie header in the response -- even though nothing on the server side changes the data in our setup. Indeed, the newly-set cookie always decrypts to the same string as what we've already supplied -- defeating the purpose of the \"dirty\" flag completely, it seems.\n\nThis patch attempts to fix things... The result \"works\" for our limited scenario where we set the cookie ourselves -- from a PHP script and only use mod_session to decrypt and parse it so it can then be used by mod_auth_form.\n\nBut, it seems to be correct in all cases -- ap_session_set will set the dirty flag and so will the processing of the SessionHeader now. There is no need to rewrite the session in any other case, is there?", "is_private": false, "bug_id": 55278, "id": 168819, "time": "2013-07-26T15:10:19Z", "creator": "mi+apache@aldan.algebra.com", "creation_time": "2013-07-26T15:10:19Z", "attachment_id": 30633}, {"count": 5, "tags": [], "creator": "email_apache.org@tikon.ch", "attachment_id": null, "is_private": false, "id": 171239, "time": "2013-11-15T12:16:41Z", "bug_id": 55278, "creation_time": "2013-11-15T12:16:41Z", "text": "I can confirm this behaviour, including the steady renewal of of the session key for:\n\nApache 2.4.6 and mod_session_db.\n\nMy config:\n\n...\n\nDBDriver sqlite3\nDBDParams \"/apache/db/db.db\"\n\nDBDPrepareSQL \"delete from session where key = %s\" deletesession\nDBDPrepareSQL \"update session set value = %s, expiry = %lld where key = %s\" updatesession\nDBDPrepareSQL \"insert into session (value, expiry, key) values (%s, %lld, %s)\" insertsession\nDBDPrepareSQL \"select value from session where key = %s and (expiry = 0 or expiry > %lld)\" selectsession\n\nDBDPrepareSQL \"delete from session where expiry != 0 and expiry < %lld\" cleansession\n\n<VirtualHost *:80>\n   \tServerName vfolin.pnet.ch\n\n        RewriteEngine           On\n\n...\n\n\t<Location /secured>\n\t    <RequireAll>  \n    \t\t   Require valid-user\n\t    </RequireAll>\n\n\t    AuthFormProvider file\n\t    AuthType form\n\t    AuthName \"Reserved Area\"\n\t    Session On\n\n\t    # This is the login page\n\t    ErrorDocument 401 /login-inline.html\n\n\t    # This is the file containing users login data\n\t    AuthUserFile conf/passwd\n\n\t    SessionDBDCookieName session path=/\n\t    SessionHeader X-Replace-Session\n\n\n      </Location>"}, {"count": 6, "tags": [], "creator": "gregory_lundberg@gmx.com", "text": "Cannot verify the comments about empty cookie, but can verify that 2.4.10 inserts duplicate cache and cookie headers", "id": 179092, "time": "2014-11-14T03:40:38Z", "bug_id": 55278, "creation_time": "2014-11-14T03:40:38Z", "is_private": false, "attachment_id": null}, {"attachment_id": null, "tags": [], "creator": "alexandre@zia.com.br", "is_private": false, "count": 7, "id": 185722, "time": "2015-10-11T21:27:39Z", "bug_id": 55278, "creation_time": "2015-10-11T21:27:39Z", "text": "I confirm this is happening, I'm having the same issue.\n\n< HTTP/1.1 302 Found\n< Server: nginx\n< Date: Sun, 11 Oct 2015 19:16:59 GMT\n< Content-Type: text/html; charset=iso-8859-1\n< Content-Length: 211\n< Connection: close\n< Set-Cookie: session=;Max-Age=0;path=/\n< Location: /login.html\n< Cache-Control: no-cache\n< Set-Cookie: session=;Max-Age=0;path=/\n< Age: 0\n\nTwo Set-Cookie  headers.\nAnf this is causing auth_form not working,\n\nThis bug report is from 2013 and it is still happening!"}, {"count": 8, "tags": [], "creator": "alexandre@zia.com.br", "attachment_id": null, "text": "Qlready tried the patch attached to this page, and my httpd segfaults, had to revert.\nhttpd-2.4.16", "id": 185724, "time": "2015-10-11T22:57:39Z", "bug_id": 55278, "creation_time": "2015-10-11T22:57:39Z", "is_private": false}]