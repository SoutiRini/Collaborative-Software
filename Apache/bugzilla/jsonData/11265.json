[{"count": 0, "tags": [], "bug_id": 11265, "is_private": false, "text": "The following rewrite rule would properly encode any special characters present\nin the URL in earlier versions of Apache.  In Apache 1.3.26, the rewrite rule\nfails to encode, for example, embedded spaces in the string resulting in an\nerror being returned.\n\nRewriteRule ^https://uea001.usigs.com/(.*)$ http://uea001.usigs.com:80/$1 [P]\n\nThe rewrite log and packets captured with tcpdump showed that spaces embedded in\nthe URL were not replaced with the encoded value %20.\n\nTemporarily enabling http for the virtual host, I reconfigured the virtual host\nto use the following proxy rule.\n\nProxyPass / http://uea001.usigs.com/\n\nThis worked correctly, the same URLs that would fail using the above rewrite\nrule could be retrieved.\n\nThe functionality of the RewriteRule may have been broken as early as 1.3.23.\n\nMerton Campbell Crockett", "id": 20386, "time": "2002-07-29T22:44:45Z", "creator": "mcc@CATO.GD-AIS.COM", "creation_time": "2002-07-29T22:44:45Z", "attachment_id": null}, {"count": 1, "tags": [], "creator": "mcc@CATO.GD-AIS.COM", "text": "My apologies the left-hand expression was incorrect in the original report.  It\nshould be\n\n^/var/www/virtual/UEA001/docs/(.*)$\n\nThe problem still exists.  One of the documents that I read indicated that\nmod_rewrite should be listed after mod_proxy in the LoadModule and AddModule\nlists.  This definitely doesn't work and creates additional problems.", "id": 20437, "time": "2002-07-30T17:58:01Z", "bug_id": 11265, "creation_time": "2002-07-30T17:58:01Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 11265, "is_private": false, "text": "This seems similar to 10446,,, will look into it.", "id": 22864, "time": "2002-09-14T15:50:54Z", "creator": "jim@apache.org", "creation_time": "2002-09-14T15:50:54Z", "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 11265, "is_private": false, "text": "Hi!\n\nI think this is a bug in mod_rewrite, which properly re-escapes the URI\nfor external redirects, but not for proxy requests. See the attached\nlog (RewriteLogLevel 9) for a request to:\n\nhttp://myhost.mydomain:8080/~gryf/encoded%2520space/\n\nThe httpd.conf contains a simple RewriteRule:\n\nRewriteRule ^(.*)$ http://myhost.mydomain$1 [P,L]\n\n(I known this special case is better done via ProxyPass, but it's just\nan example)\n\nThe destination server instead sees a request for:\n\nhttp://myhost.mydomain/~gryf/encoded%20space/\n\nI.e. the first level of URI encoding gets lost.\n\nI'll also attach a proposed fix for mod_rewrite.c, which - as far as\nI can tell by looking at the source - is also necessary for httpd-2.0\n\n\nCiao\n\nThomas", "id": 48910, "time": "2003-12-11T15:04:47Z", "creator": "binder+ncnpur@arago.de", "creation_time": "2003-12-11T15:04:47Z", "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 11265, "is_private": false, "text": "Created attachment 9515\nRewriteLog for a request to /~gryf/encoded%2520space/", "id": 48911, "time": "2003-12-11T15:08:44Z", "creator": "binder+ncnpur@arago.de", "creation_time": "2003-12-11T15:08:44Z", "attachment_id": 9515}, {"count": 5, "tags": [], "bug_id": 11265, "attachment_id": 9516, "text": "Created attachment 9516\nProposed fix for mod_rewrite.c", "id": 48912, "time": "2003-12-11T15:09:17Z", "creator": "binder+ncnpur@arago.de", "creation_time": "2003-12-11T15:09:17Z", "is_private": false}, {"count": 6, "tags": [], "bug_id": 11265, "is_private": false, "text": "This appears to be similar to the 2.0 bug, #15207.  Is this a red herring, or \ncould the approach used in that patch (which has already been accepted) be \nrelevant here as well?\n\nConfirming that this issue still exists in 1.3.31, RHL 7.5.\n\n.htaccess for secure.example.com:\n> ProxyPass /NetStorage/ https://otherserver.example.com/NetStorage/\n> ProxyPass /oneNet/ https://otherserver.example.com/oneNet/\n\nrequest for: \nhttps://secure.example.com/oneNet/NetStorage/DriveI%40VOL/Shared%20Projects\n\ngets a 400 Bad Request from otherserver.example.com because the %20 was \nexpanded to a space.  (otherserver reports \"The request line contained invalid \ncharacters following the protocol string\", as well it should.)\n\nbest,\n-arthur.", "id": 60202, "time": "2004-07-06T16:38:38Z", "creator": "app@pobox.com", "creation_time": "2004-07-06T16:38:38Z", "attachment_id": null}, {"count": 7, "tags": [], "creator": "alan.harder@sun.com", "attachment_id": null, "id": 76014, "time": "2005-06-04T02:28:34Z", "bug_id": 11265, "creation_time": "2005-06-04T02:28:34Z", "is_private": false, "text": "My comment isn't related to mod_proxy, but a general comment about rewrite rules\nsimilar to the ones shown here.  It seems difficult with mod_rewrite to pass\npossibly-urlencoded parts of a path as a query parameter to a script.. example:\n\nRewriteRule test/(.+)$ /phpinfo.php?mytest=$1 [QSA,L]\n\nIf the URL contains test/one%23two then the query string as seen by phpinfo.php\nwill contain a literal # and thus be truncated.  Urlencoded & can also cause\ntrouble.  A couple workarounds: use a RewriteCond on THE_REQUEST to pull out the\nstill-encoded part of the path that is desired and put mytest=%1 in the rule;\nor, add RewriteMap escape int:escape in the server config and use\nmytest=${escape:$1} in the rule.  The former makes for more complicated rules,\nthe latter requires server config change and can't be done just in .htaccess..\nneither seem like a great approach.\nJust curious, what is the \"recommended\" approach for a rule like this?  Would be\ngreat if escape function was always available, without a special rewritemap."}, {"count": 8, "tags": [], "text": "See also bug 34602", "attachment_id": null, "id": 82663, "creator": "marcus@synchromedia.co.uk", "time": "2005-11-18T16:46:36Z", "bug_id": 11265, "creation_time": "2005-11-18T16:46:36Z", "is_private": false}]