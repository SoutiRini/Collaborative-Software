[{"count": 0, "tags": [], "text": "When I use the method addPictures() for XWPF documents, I assume this adds the image data to the Word document without any additional code. When I call this method, I do see the size of the Word document grow, due to the image data, but the image is not displayed in the Word document at all. It seems to, at least, be adding the image data to the Word document, but it doesn't seem to set it up correctly so it will actually display in the Word document.", "is_private": false, "id": 139153, "creator": "bbarbee@cisco.com", "time": "2010-08-17T12:49:24Z", "bug_id": 49765, "creation_time": "2010-08-17T12:49:24Z", "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 49765, "attachment_id": null, "id": 139431, "time": "2010-08-25T05:09:27Z", "creator": "apache@gagravarr.org", "creation_time": "2010-08-25T05:09:27Z", "is_private": false, "text": "If you start with an empty file, and add the picture, does that work?\n\nIf you have a few paragraphs of text in, and add the picture, does that still work?\n\nIf you add the picture, save and re-load, can poi see the picture?\n\nIf you create a new file in poi, add a line of text and a picture, then re-create the same file using Word, how do the files differ?"}, {"count": 2, "tags": [], "text": "I have not fully tested it, but I believe I can answer your questions. \n 1) No\n 2) No\n 3) Yes\n 4) Image is not visible within the POI document.\n\nI have tested with an existing Word document that already has an image in it. I am able to open the document and re-save it, and this actually works! It retains the image in the document! Fortunately, we can use this \"template\" document to retain our image data for now.", "attachment_id": null, "id": 139468, "creator": "bbarbee@cisco.com", "time": "2010-08-25T15:10:51Z", "bug_id": 49765, "creation_time": "2010-08-25T15:10:51Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 49765, "is_private": false, "text": "Could you upload three files? Two should have a single paragraph of text, and a small image embeded in them. One generated by word, one by poi. Finally, the third file is the image\n\nThat'll let us compare and see what POI does differently. (If you can, also unzip the two .docx files, and use xmlint+diff or similar to spot where the differences lie)", "id": 139474, "time": "2010-08-25T17:13:10Z", "creator": "apache@gagravarr.org", "creation_time": "2010-08-25T17:13:10Z", "attachment_id": null}, {"count": 4, "tags": [], "text": "Created attachment 25942\nWord Generated", "is_private": false, "id": 139477, "creator": "bbarbee@cisco.com", "time": "2010-08-25T17:48:23Z", "bug_id": 49765, "creation_time": "2010-08-25T17:48:23Z", "attachment_id": 25942}, {"count": 5, "text": "Created attachment 25943\nPOI Generated", "bug_id": 49765, "is_private": false, "id": 139478, "time": "2010-08-25T17:48:42Z", "creator": "bbarbee@cisco.com", "creation_time": "2010-08-25T17:48:42Z", "tags": [], "attachment_id": 25943}, {"count": 6, "text": "Created attachment 25944\nSample Image", "bug_id": 49765, "attachment_id": 25944, "id": 139479, "time": "2010-08-25T17:49:04Z", "creator": "bbarbee@cisco.com", "creation_time": "2010-08-25T17:49:04Z", "tags": [], "is_private": false}, {"count": 7, "tags": [], "creator": "bbarbee@cisco.com", "text": "I was not able to do a 'diff', but I have attached the 3 files.", "id": 139480, "time": "2010-08-25T17:49:42Z", "bug_id": 49765, "creation_time": "2010-08-25T17:49:42Z", "is_private": false, "attachment_id": null}, {"count": 8, "tags": [], "text": "I did a diff and it looks like the picture is not referenced at all in the document.xml that is generated by POI, but the word version of the file has a reference to sample.jpg. I am trying to add a picture to a Word document with XWPF and I am having the same issue.", "attachment_id": null, "id": 139630, "creator": "tk@gospodinov.net", "time": "2010-09-02T18:10:59Z", "bug_id": 49765, "creation_time": "2010-09-02T18:10:59Z", "is_private": false}, {"count": 9, "tags": [], "bug_id": 49765, "attachment_id": 25974, "text": "Created attachment 25974\ndocument.xml POI version", "id": 139631, "time": "2010-09-02T18:13:30Z", "creator": "tk@gospodinov.net", "creation_time": "2010-09-02T18:13:30Z", "is_private": false}, {"count": 10, "tags": [], "bug_id": 49765, "attachment_id": 25975, "id": 139632, "time": "2010-09-02T18:14:26Z", "creator": "tk@gospodinov.net", "creation_time": "2010-09-02T18:14:26Z", "is_private": false, "text": "Created attachment 25975\ndocument.xml Word version"}, {"count": 11, "tags": [], "text": "Thanks for investigating this. I believe it's fixed in r998960, as we now correctly setup the relationship. (Unit tests have been added for this)", "is_private": false, "id": 139982, "creator": "apache@gagravarr.org", "time": "2010-09-20T11:43:31Z", "bug_id": 49765, "creation_time": "2010-09-20T11:43:31Z", "attachment_id": null}, {"count": 12, "tags": [], "bug_id": 49765, "attachment_id": null, "text": "This is still not working in beta3. The image is still added to the package, but does not appear on the resulting document.", "id": 140521, "time": "2010-10-06T16:43:18Z", "creator": "tk@gospodinov.net", "creation_time": "2010-10-06T16:43:18Z", "is_private": false}, {"count": 13, "tags": [], "bug_id": 49765, "attachment_id": null, "id": 140524, "time": "2010-10-06T17:59:46Z", "creator": "apache@gagravarr.org", "creation_time": "2010-10-06T17:59:46Z", "is_private": false, "text": "Could you please re-do the comparison between Word and POI 3.7 beta 3, to try to spot what we're still missing?\n\n(Everything I think we were missing before should now be there, so it must be something else we've not yet thought of)"}, {"count": 14, "tags": [], "bug_id": 49765, "is_private": false, "text": "From what I can tell, the following is not being generated in the \\word\\document.xml:\n\n<w:drawing>\n\t<wp:inline distT=\"0\" distB=\"0\" distL=\"0\" distR=\"0\">\n\t\t<wp:extent cx=\"2466975\" cy=\"552450\"/>\n\t\t<wp:docPr id=\"1\" name=\"Picture 0\" descr=\"generated.jpg\"/>\n\t\t<a:graphic xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\">\n\t\t\t<a:graphicData uri=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\n\t\t\t\t<pic:pic xmlns:pic=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\n\t\t\t\t\t<pic:nvPicPr>\n\t\t\t\t\t\t<pic:cNvPr id=\"0\" name=\"generated.jpg\"/>\n\t\t\t\t\t\t<pic:cNvPicPr/>\n\t\t\t\t\t</pic:nvPicPr>\n\t\t\t\t\t<pic:blipFill>\n\t\t\t\t\t\t<a:blip r:embed=\"rId16\"/>\n\t\t\t\t\t\t<a:stretch>\n\t\t\t\t\t\t\t<a:fillRect/>\n\t\t\t\t\t\t</a:stretch>\n\t\t\t\t\t</pic:blipFill>\n\t\t\t\t\t<pic:spPr>\n\t\t\t\t\t\t<a:xfrm>\n\t\t\t\t\t\t\t<a:off x=\"0\" y=\"0\"/>\n\t\t\t\t\t\t\t<a:ext cx=\"2466975\" cy=\"552450\"/>\n\t\t\t\t\t\t</a:xfrm>\n\t\t\t\t\t\t<a:prstGeom prst=\"rect\">\n\t\t\t\t\t\t\t<a:avLst/>\n\t\t\t\t\t\t</a:prstGeom>\n\t\t\t\t\t</pic:spPr>\n\t\t\t\t</pic:pic>\n\t\t\t</a:graphicData>\n\t\t</a:graphic>\n\t</wp:inline>\n</w:drawing>\n\nIn the example above\nWidth: 2466975\nHeight: 552450\n(with an EMU of 9525 per pixel; example above was 259 x 58 px)\n\nrId16: is defined in \\word\\_rels\\document.xml.rels\n  <Relationship Id=\"rId16\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/image\" Target=\"media/image1.jpeg\"/>\n\nBut at least the image itself is correctly added to \\word\\media\\image1.jpeg\n(and also the relationship is correctly added)", "id": 145554, "time": "2011-04-04T23:25:07Z", "creator": "logisch@gmail.com", "creation_time": "2011-04-04T23:25:07Z", "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 49765, "is_private": false, "count": 15, "id": 145573, "time": "2011-04-05T20:20:49Z", "creator": "logisch@gmail.com", "creation_time": "2011-04-05T20:20:49Z", "text": "My first failed attempt:\nCTPicture pict = createParagraph().createRun().getCTR().addNewPict();\n        XWPFPicture shape = new XWPFPicture(pict, createParagraph());\n        shape.setPictureReference(rel);\n\n\nMy current working workaround:\n\nimport org.apache.poi.xwpf.usermodel.XWPFDocument;\nimport org.apache.xmlbeans.XmlException;\nimport org.apache.xmlbeans.XmlToken;\nimport org.openxmlformats.schemas.drawingml.x2006.main.CTNonVisualDrawingProps;\nimport org.openxmlformats.schemas.drawingml.x2006.main.CTPositiveSize2D;\nimport org.openxmlformats.schemas.drawingml.x2006.wordprocessingDrawing.CTInline;\n\nimport java.io.IOException;\nimport java.io.InputStream;\n\npublic class CustomXWPFDocument extends XWPFDocument\n{\n    public CustomXWPFDocument(InputStream in) throws IOException\n    {\n        super(in);\n    }\n\n    public void createPicture(int id, int width, int height)\n    {\n        final int EMU = 9525;\n        width *= EMU;\n        height *= EMU;\n        String blipId = getAllPictures().get(id).getPackageRelationship().getId();\n\n        CTInline inline = createParagraph().createRun().getCTR().addNewDrawing().addNewInline();\n\n        String picXml = \"\" +\n                \"<a:graphic xmlns:a=\\\"http://schemas.openxmlformats.org/drawingml/2006/main\\\">\" +\n                \"   <a:graphicData uri=\\\"http://schemas.openxmlformats.org/drawingml/2006/picture\\\">\" +\n                \"      <pic:pic xmlns:pic=\\\"http://schemas.openxmlformats.org/drawingml/2006/picture\\\">\" +\n                \"         <pic:nvPicPr>\" +\n                \"            <pic:cNvPr id=\\\"\" + id + \"\\\" name=\\\"Generated\\\"/>\" +\n                \"            <pic:cNvPicPr/>\" +\n                \"         </pic:nvPicPr>\" +\n                \"         <pic:blipFill>\" +\n                \"            <a:blip r:embed=\\\"\" + blipId + \"\\\" xmlns:r=\\\"http://schemas.openxmlformats.org/officeDocument/2006/relationships\\\"/>\" +\n                \"            <a:stretch>\" +\n                \"               <a:fillRect/>\" +\n                \"            </a:stretch>\" +\n                \"         </pic:blipFill>\" +\n                \"         <pic:spPr>\" +\n                \"            <a:xfrm>\" +\n                \"               <a:off x=\\\"0\\\" y=\\\"0\\\"/>\" +\n                \"               <a:ext cx=\\\"\" + width + \"\\\" cy=\\\"\" + height + \"\\\"/>\" +\n                \"            </a:xfrm>\" +\n                \"            <a:prstGeom prst=\\\"rect\\\">\" +\n                \"               <a:avLst/>\" +\n                \"            </a:prstGeom>\" +\n                \"         </pic:spPr>\" +\n                \"      </pic:pic>\" +\n                \"   </a:graphicData>\" +\n                \"</a:graphic>\";\n\n        //CTGraphicalObjectData graphicData = inline.addNewGraphic().addNewGraphicData();\n        XmlToken xmlToken = null;\n        try\n        {\n            xmlToken = XmlToken.Factory.parse(picXml);\n        }\n        catch(XmlException xe)\n        {\n            xe.printStackTrace();\n        }\n        inline.set(xmlToken);\n        //graphicData.set(xmlToken);\n\n        inline.setDistT(0);\n        inline.setDistB(0);\n        inline.setDistL(0);\n        inline.setDistR(0);\n\n        CTPositiveSize2D extent = inline.addNewExtent();\n        extent.setCx(width);\n        extent.setCy(height);\n\n        CTNonVisualDrawingProps docPr = inline.addNewDocPr();\n        docPr.setId(id);\n        docPr.setName(\"Picture \" + id);\n        docPr.setDescr(\"Generated\");\n    }\n}\n\nThis is invoked with:\nint id = document.addPicture(new FileInputStream(new File(\"c:\\\\test.jpg\")), Document.PICTURE_TYPE_JPEG);\ndocument.createPicture(id, 259, 58);\n\nid = document.addPicture(new FileInputStream(new File(\"c:\\\\test.png\")), Document.PICTURE_TYPE_PNG);\ndocument.createPicture(id, 400, 200);\n\n\nI'm sure there must be a nicer way to do this, but it works for me for now..."}, {"count": 16, "tags": [], "creator": "apache@gagravarr.org", "text": "On reflection, I don't think that end users should normally be calling the low level addPicture call. Instead, I think we should put some logic onto a XWPFRun and let you add a picture in there, with it handling the CTDrawing stuff for you.\n\nIt'll need a bit of work though...", "id": 145651, "time": "2011-04-08T11:53:57Z", "bug_id": 49765, "creation_time": "2011-04-08T11:53:57Z", "is_private": false, "attachment_id": null}, {"count": 17, "tags": [], "bug_id": 49765, "attachment_id": null, "id": 145814, "time": "2011-04-15T12:17:29Z", "creator": "apache@gagravarr.org", "creation_time": "2011-04-15T12:17:29Z", "is_private": false, "text": "Thanks for the work figuring out the minimum bit to go on the run.\n\nI think I've implemented this in r1092755 with the new method on XSSFRun. It should be like yours, but using a bit more xmlbeans objects for the setup, and less inline xml, so hopefully it'll work better if we need to tweak anything in future.\n\nAny chance you could give it a whirl, and see if it works for your use case?"}, {"count": 18, "tags": [], "creator": "hacker5257@hotmail.com", "text": "(In reply to comment #14)\nThe result word can display image added by poi3.7 after using your method.\nThank you very much!", "id": 146151, "time": "2011-05-06T03:08:25Z", "bug_id": 49765, "creation_time": "2011-05-06T03:08:25Z", "is_private": false, "attachment_id": null}, {"count": 19, "tags": [], "creator": "hello@alpencolt.com", "text": "Method addPicture() in  XWPFRun in POI 3.8 beta doesn't work too. I call\n    document.createParagraph().createRun().\n        addPicture(new FileInputStream(imageFilePath),\n                   Document.PICTURE_TYPE_JPEG, imageName, 328, 247);\nbut it damage *.docx file.\n\nI create Docx file in POI:\nXWPFDocument document = new XWPFDocument();\nAnd save after adding image:\ndocument.write(stream);\n\nThere is no exceptions or error messages on this operations.", "id": 147752, "time": "2011-07-05T13:31:04Z", "bug_id": 49765, "creation_time": "2011-07-05T13:31:04Z", "is_private": false, "attachment_id": null}, {"count": 20, "tags": [], "bug_id": 49765, "attachment_id": 27257, "is_private": false, "id": 147754, "time": "2011-07-05T13:33:21Z", "creator": "hello@alpencolt.com", "creation_time": "2011-07-05T13:33:21Z", "text": "Created attachment 27257\ndocx file after addin image"}, {"count": 21, "tags": [], "bug_id": 49765, "attachment_id": 27264, "id": 147794, "time": "2011-07-06T14:54:51Z", "creator": "stefan.stern@mind8.com", "creation_time": "2011-07-06T14:54:51Z", "is_private": false, "text": "Created attachment 27264\nThe Run created with the POI method\n\nThis run was created by POI and extracted from attachment 27257."}, {"attachment_id": 27265, "tags": [], "bug_id": 49765, "is_private": false, "count": 22, "id": 147795, "time": "2011-07-06T14:55:45Z", "creator": "stefan.stern@mind8.com", "creation_time": "2011-07-06T14:55:45Z", "text": "Created attachment 27265\nThe Run was created by Word\n\nThis Run was created using word. \n1. Create a new document\n2. Drop the sample image from attachement 27257 into the docx\n3. Save the document."}, {"attachment_id": null, "tags": [], "bug_id": 49765, "is_private": false, "count": 23, "id": 147796, "time": "2011-07-06T14:59:13Z", "creator": "stefan.stern@mind8.com", "creation_time": "2011-07-06T14:59:13Z", "text": "Hello\n\nFor comparison, I extracted both runs from the corrupted document and the one that Word created. The POI-run misses the blip-fill element, which would explain why the document is evaluated as corrupt. I will setup a UNIT-Test to ensure this methods function and attach a patch until Friday."}, {"count": 24, "tags": [], "bug_id": 49765, "attachment_id": 27269, "id": 147815, "time": "2011-07-07T13:40:50Z", "creator": "stefan.stern@mind8.com", "creation_time": "2011-07-07T13:40:50Z", "is_private": false, "text": "Created attachment 27269\nFix wrong namespace value\n\nComparing both original and POI XML, the given namespace for the element nested in the <graphicData> is wrong. The namespace defined there is supposed to specify the contained element.\n\nI was not yet able to write a deliverable UNIT-test for that. I will look into it."}, {"count": 25, "tags": [], "creator": "soni.romesh@gmail.com", "text": "I know this may be too late, but still the problem persists.\nI downloaded latest stable release \"poi-3.8\", and running the sample code which is found with the source (pls see below). The word file which is created is not opening due to corruption. Anyone please help.:\n\npublic class SimpleImages {\n\n    public static void main(String[] args) throws Exception {\n        XWPFDocument doc = new XWPFDocument();\n        XWPFParagraph p = doc.createParagraph();\n\n        XWPFRun r = p.createRun();\n\n        for(String imgFile : args) {\n            int format;\n\n            if(imgFile.endsWith(\".emf\")) format = XWPFDocument.PICTURE_TYPE_EMF;\n            else if(imgFile.endsWith(\".wmf\")) format = XWPFDocument.PICTURE_TYPE_WMF;\n            else if(imgFile.endsWith(\".pict\")) format = XWPFDocument.PICTURE_TYPE_PICT;\n            else if(imgFile.endsWith(\".jpeg\") || imgFile.endsWith(\".jpg\")) format = XWPFDocument.PICTURE_TYPE_JPEG;\n            else if(imgFile.endsWith(\".png\")) format = XWPFDocument.PICTURE_TYPE_PNG;\n            else if(imgFile.endsWith(\".dib\")) format = XWPFDocument.PICTURE_TYPE_DIB;\n            else if(imgFile.endsWith(\".gif\")) format = XWPFDocument.PICTURE_TYPE_GIF;\n            else if(imgFile.endsWith(\".tiff\")) format = XWPFDocument.PICTURE_TYPE_TIFF;\n            else if(imgFile.endsWith(\".eps\")) format = XWPFDocument.PICTURE_TYPE_EPS;\n            else if(imgFile.endsWith(\".bmp\")) format = XWPFDocument.PICTURE_TYPE_BMP;\n            else if(imgFile.endsWith(\".wpg\")) format = XWPFDocument.PICTURE_TYPE_WPG;\n            else {\n                System.err.println(\"Unsupported picture: \" + imgFile +\n                        \". Expected emf|wmf|pict|jpeg|png|dib|gif|tiff|eps|bmp|wpg\");\n                continue;\n            }\n\n            r.setText(imgFile);\n            r.addBreak();\n            r.addPicture(new FileInputStream(imgFile), format, imgFile, Units.toEMU(200), Units.toEMU(200)); // 200x200 pixels\n            r.addBreak(BreakType.PAGE);\n        }\n\n        FileOutputStream out = new FileOutputStream(\"images.docx\");\n        doc.write(out);\n        out.close();\n    }\n\n\n}", "id": 159212, "time": "2012-05-22T10:13:35Z", "bug_id": 49765, "creation_time": "2012-05-22T10:13:35Z", "is_private": false, "attachment_id": null}, {"count": 26, "text": "Created attachment 28822\nSample code\n\nCall the CustomXWPFDocument.java like this:\n\nimport java.io.File;\nimport java.io.FileInputStream;\nimport java.io.FileNotFoundException;\nimport java.io.FileOutputStream;\nimport java.io.IOException;\n\nimport org.apache.poi.openxml4j.exceptions.InvalidFormatException;\nimport org.apache.poi.xwpf.usermodel.Document;\nimport org.apache.poi.xwpf.usermodel.XWPFDocument;\n\n/*\nRomesh Soni\nsoni.romesh@gmail.com\n*/\n\npublic class TestCustom {\n\n\tpublic static void main(String []a) throws FileNotFoundException, IOException, InvalidFormatException\n\t{\n\n\t\tCustomXWPFDocument document = new CustomXWPFDocument(new FileInputStream(new File(\"c://Economic.docx\")));\n\t\tFileOutputStream fos = new FileOutputStream(new File(\"C:\\\\updatedTemplate.docx\"));\n\n\t\tString blipId = document.addPictureData(new FileInputStream(new File(\"c:\\\\Most_famous_Caves_of_the_Dordogne_Private_p_4.jpg\")), Document.PICTURE_TYPE_JPEG);\n\t\t\n\t\tSystem.out.println(document.getNextPicNameNumber(Document.PICTURE_TYPE_JPEG));\n\t\t\n\t\t//System.out.println(document.getNextPicNameNumber(Document.PICTURE_TYPE_JPEG));\n\t\tdocument.createPicture(blipId,document.getNextPicNameNumber(Document.PICTURE_TYPE_JPEG), 500, 500);\n\n\t\t\n        document.write(fos);\n        fos.flush();\n        fos.close();\n        \n\t}\n\n}", "bug_id": 49765, "is_private": false, "id": 159249, "time": "2012-05-23T06:44:25Z", "creator": "soni.romesh@gmail.com", "creation_time": "2012-05-23T06:44:25Z", "tags": [], "attachment_id": 28822}, {"count": 27, "tags": [], "bug_id": 49765, "attachment_id": null, "text": "Can't see why this issue was closed NEEDINFO?\n\nI tested with the last 3.9 release and the issue persists using XWPFRun.addPicture()\n\nThe image data is written quite fine, BUT then the <pic:pic /> element is not actually filled with content, corrupting the written file.\n\nUsing the code from comment 26 I was able to insert the picture just fine. AFAIK all that's different is that the whole block is passed to XmlFactory.parse instead of filling it programmatically? If that helps, the CTPicture returned from getCTPictures().get(0) (XWPFRun.java, line 706) lacks a non-null parent field (shouldn't it point to the <a:graphicData>?).", "id": 165240, "time": "2013-02-13T19:13:06Z", "creator": "kabel@cat0.de", "creation_time": "2013-02-13T19:13:06Z", "is_private": false}, {"count": 28, "tags": [], "bug_id": 49765, "is_private": false, "text": "I am trying to work on Apache POI in order to insert a picture into a word document. I went through many posts and forums for this and finally I found in this forum (comment #26 and #27) that there is a way to do this. It can be done by using \"CustomXWPFDocument\" class. After reading about it I came to know that this class extends \"XWPFDocument. But When I am trying to use the code written in comment #26 then its giving me the error as\"CustomXWPFDocument cannot be resolved to a type\". I am not even getting the imports for this class. \n\nHere I will also write the jars I am using(basically I have used every JAR related to POI to make this program work but till now no luck):- (1) poi-3.9-20121203 (2) poi-examples-3.9-20121203 (3) poi-excelant-3.9-20121203 (4) poi-ooxml-3.9-20121203 (5) poi-ooxml-schemas-3.9-20121203 (6) poi-scratchpad-3.9-20121203 (7) xmlbeans-2.3.0 (8) stax-api-1.0.1 (9) dom4j-1.6.1 (10) commons-codec-1.5 (11) commons-logging-1.1 (12) junit-3.8.1 (13) log4j-1.2.13\n\nPlease tell me if something is wrong.", "id": 168776, "time": "2013-07-25T04:38:28Z", "creator": "ranamitabh@gmail.com", "creation_time": "2013-07-25T04:38:28Z", "attachment_id": null}, {"count": 29, "text": "(In reply to Amitabh Ranjan from comment #28)\n> I went through many posts and forums \n\nThis is not a forum, this is a bug tracker. For help with using Apache POI, please use the mailing lists: http://poi.apache.org/mailinglists.html", "bug_id": 49765, "is_private": false, "id": 168781, "time": "2013-07-25T09:38:47Z", "creator": "apache@gagravarr.org", "creation_time": "2013-07-25T09:38:47Z", "tags": [], "attachment_id": null}, {"count": 30, "tags": [], "text": "I tried to add an image with the help of provided here, its working fine.\n\nBut next i tried to add this image into header but its not working,\n\nHow to add an image into header?", "is_private": false, "id": 172582, "creator": "km.ashwini92@gmail.com", "time": "2014-01-21T05:26:59Z", "bug_id": 49765, "creation_time": "2014-01-21T05:26:59Z", "attachment_id": null}, {"count": 31, "tags": [], "text": "Im trying to add picture using poi 3.10 final \n\nFileInputStream pic = new FileInputStream(\"C:\\\\Happybirthday.JPG\");\nbyte [] picbytes = IOUtils.toByteArray(pic);\ndoc.createParagraph().createRun().addPicture(pic, Document.PICTURE_TYPE_JPEG, \"C:\\\\Happybirthday.JPG\", 200, 200);\n\nstill im not able to add picture , size of docx file has increased when i open docx file and can see the image file loaded inside. But im unable to open the docx file. \nPlease help to solve my problem.", "is_private": false, "id": 173761, "creator": "kpaniraju@yahoo.com", "time": "2014-03-12T11:32:35Z", "bug_id": 49765, "creation_time": "2014-03-12T11:32:35Z", "attachment_id": null}, {"count": 32, "tags": [], "creator": "apache@gagravarr.org", "text": "(In reply to paniraju from comment #31)\n> Im trying to add picture using poi 3.10 final \n> \n> FileInputStream pic = new FileInputStream(\"C:\\\\Happybirthday.JPG\");\n> byte [] picbytes = IOUtils.toByteArray(pic);\n> doc.createParagraph().createRun().addPicture(pic,\n> Document.PICTURE_TYPE_JPEG, \"C:\\\\Happybirthday.JPG\", 200, 200);\n\nIf you save this file, close, re-open with XWPFDocument, and read, is POI able to see and read the image correctly? i.e. is the problem that POI is writing the image completely wrong, or is it writing in a way that POI copes with but that's wrong for Word?", "id": 173762, "time": "2014-03-12T11:36:30Z", "bug_id": 49765, "creation_time": "2014-03-12T11:36:30Z", "is_private": false, "attachment_id": null}, {"count": 33, "text": "Thanks for prompt reply \n\nXWPFDocument docx = new XWPFDocument(OPCPackage.openOrCreate(new File(\"c:\\\\simple.docx\")));  \nXWPFWordExtractor wx = new XWPFWordExtractor(docx);  \nString text = wx.getText();  \nSystem.out.println(\"text = \"+text);  \n\nIm using above code to open existing doc and trying to print , when i do that my complete applications itself getting crashed, i think this happening because after adding image to docx file, docx file got corrupted and now XWPFDocument unable to parse the file and getting. My concern is org.apache.poi of version 3.10 is able add images to word file or not, i have seen lot of bug pages saying lot of issues in adding the image. Does adding image to docx file happens in version 3.10 or still a bug in it", "bug_id": 49765, "attachment_id": null, "id": 173767, "time": "2014-03-12T13:32:50Z", "creator": "kpaniraju@yahoo.com", "creation_time": "2014-03-12T13:32:50Z", "tags": [], "is_private": false}, {"count": 34, "tags": [], "bug_id": 49765, "attachment_id": null, "id": 173777, "time": "2014-03-12T18:40:31Z", "creator": "apache@gagravarr.org", "creation_time": "2014-03-12T18:40:31Z", "is_private": false, "text": "At this point, we need for POI 3.10, a unit test that:\n * Creates a simple word file from scratch\n * Adds a single picture to it\n * Adds a bit of test text to it (maybe 4 paragraphs, 2-3 runs per paragraph)\n * Saves that to a temp file, which you try to load from Word\n * Check if Word loads it and displays it? (I gather no? But confirm)\n * Trys to re-open the file in POI\n * Checks we can correctly read the text from it?\n * Checks if the picture is found in the picture list?\n * Loads the paragraph with the picture in, and sees if POI can correctly find + read the picture from there?"}, {"count": 35, "tags": [], "bug_id": 49765, "is_private": false, "text": "(In reply to Nick Burch from comment #34)\n> At this point, we need for POI 3.10, a unit test that:\n>  * Creates a simple word file from scratch\n                    --Yes did\n>  * Adds a single picture to it\n                    --did\n>  * Adds a bit of test text to it (maybe 4 paragraphs, 2-3 runs per paragraph)\n                    --did\n>  * Saves that to a temp file, which you try to load from Word\n                    -- did\n>  * Check if Word loads it and displays it? (I gather no? But confirm)\n                    -- it doen't load the image\n>  * Trys to re-open the file in POI\n                     -- yes i did\n>  * Checks we can correctly read the text from it?\n                     --- able to read text and print on console \n>  * Checks if the picture is found in the picture list?\n                     -- when i use document.getallPicture() function, i am able to get the picture which i have added earlier\n>  * Loads the paragraph with the picture in, and sees if POI can correctly\n                     -- did same still im not able to get image , bthis time not able to open the word file.\n> find + read the picture from there?\n\nThanks for reply,\n\nI have done all points which you have mentioned in your post still im not able to see image in msword docx file. Please try to give me a way where i can able to add images to msword file.", "id": 173809, "time": "2014-03-14T09:59:45Z", "creator": "kpaniraju@yahoo.com", "creation_time": "2014-03-14T09:59:45Z", "attachment_id": null}, {"count": 36, "tags": [], "bug_id": 49765, "is_private": false, "text": "> At this point, we need for POI 3.10, a unit test that:\n>  * Creates a simple word file from scratch\n                    --Yes did\n>  * Adds a single picture to it\n                    --did\n>  * Adds a bit of test text to it (maybe 4 paragraphs, 2-3 runs per paragraph)\n                    --did\n>  * Saves that to a temp file, which you try to load from Word\n                    -- did\n>  * Check if Word loads it and displays it? (I gather no? But confirm)\n                    -- it doen't load the image\n>  * Trys to re-open the file in POI\n                     -- yes i did\n>  * Checks we can correctly read the text from it?\n                     --- able to read text and print on console \n>  * Checks if the picture is found in the picture list?\n                     -- when i use document.getallPicture() function, i am able to get the picture which i have added earlier\n>  * Loads the paragraph with the picture in, and sees if POI can correctly\n                     -- did same still im not able to get image , bthis time not able to open the word file.\n> find + read the picture from there?\n\nThanks for reply,\n\nI have done all points which you have mentioned in your post still im not able to see image in msword docx file. Please try to give me a way where i can able to add images to msword file.", "id": 173818, "time": "2014-03-14T12:33:39Z", "creator": "kpaniraju@yahoo.com", "creation_time": "2014-03-14T12:33:39Z", "attachment_id": null}, {"count": 37, "tags": [], "text": "Hello, \nI found a working example of inserting images into discs document. This example consists of two programs, first one is CustomXWPFDocument (link: http://pastebin.com/CbQ3iw8t) and the second one is a simple example class (link: http://pastebin.com/2YAneYgt).\nIn this example I used the latest jar binaries of Apache poi (version 3.10). \nI hope you find this example helpful.", "is_private": false, "id": 175926, "creator": "luka.kosenina@gmail.com", "time": "2014-06-20T09:10:57Z", "bug_id": 49765, "creation_time": "2014-06-20T09:10:57Z", "attachment_id": null}, {"count": 38, "tags": [], "text": "buscando a una persona", "attachment_id": null, "id": 183524, "creator": "120db@hotmail.es", "time": "2015-06-14T20:52:35Z", "bug_id": 49765, "creation_time": "2015-06-14T20:52:35Z", "is_private": false}, {"count": 39, "tags": [], "creator": "dominik.stadler@gmx.at", "text": "There was no discussion on this issue since some time and we did not manage to get a unit test which allows us to reproduce the problem. \n\nTherefore I am setting this to WONTFIX for now unless someone comes up with a better description of how this can be reproduced/analyzed. If you still have this problem and have some standalone reproducing piece of code then please reopen this issue.", "id": 199941, "time": "2017-07-22T08:07:50Z", "bug_id": 49765, "creation_time": "2017-07-22T08:07:50Z", "is_private": false, "attachment_id": null}]