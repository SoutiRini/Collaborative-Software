[{"count": 0, "tags": [], "bug_id": 40514, "is_private": false, "id": 93604, "creation_time": "2006-09-14T20:48:29Z", "time": "2006-09-14T20:48:29Z", "creator": "long@ku.edu", "text": "Running 2.2.3 here on RHEL 3.  We use cgiwrap (a suexec clone, see\ncgiwrap.sf.net) (due to historical reasons) to run user cgi programs (via\nmod_cgi in prefork mode).  Nightly we have a cron job that uses 'apachectl\ngraceful' to restart things so logs can be rotated.  I've noticed that if a\nuser's script hangs for some reason (i.e. no CPU time is being used) that after\n5 minutes or so apache will complain about the CGI request timing out and then\nthe httpd child that spawned the CGI will enter the C state.  When the\n'apachectl graceful' is issued then that httpd child will enter the G state and\nstay around in that state perpetually.  What I would like is for something like\nGracefulShutdownTimeout to apply to graceful restarts and not just graceful\nstops so that after a configured amount of time apache would start forcefully\nkilling these hung httpd children.\n\nHere's an example cgi that can be used to see this problem:\n\n#!/usr/local/bin/php\n\n<?php\n\nwhile (1) {\n        $i = 1;\n        sleep(500);\n}\n?>\n\nJust run that, wait until apache reports the CGI timed out and it has entered\nthe C state.  Then do a graceful restart upon which it will enter the G state\nand keep running.  I've verified this also happens when running the CGI via suexec.", "attachment_id": null}]