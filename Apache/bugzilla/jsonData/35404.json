[{"count": 0, "tags": [], "text": "We have a fairly simple module that will talk to an external program to fetch\na file if it is not on the local machine. The module does a few apr_palloc calls,\nopens up a socket to the other program, then opens a FILE descriptor to read\ndata from the new file, and calls ap_rwrite to write the data it reads from the file\nto the user. \n\nIf this module never gets called (all files are on the disk already) apache does not\nleak memory at all, it is stable. If this module gets called apache will grow to a few\nhundred MB before it eventually goes back down when it hits the max requests \nper child.\n\nAs far as I can tell the module has no memory leaks, and the only memory allacation\nbeing done is the apr_palloc (no normal mallocs being done)\n\nHere is our apache version info:\n\nServer version: Apache/2.0.53\nServer built:   Mar  3 2005 13:24:05\nServer's Module Magic Number: 20020903:9\nArchitecture:   32-bit\nServer compiled with....\n -D APACHE_MPM_DIR=\"server/mpm/worker\"\n -D APR_HAS_SENDFILE\n -D APR_HAS_MMAP\n -D APR_HAVE_IPV6 (IPv4-mapped addresses enabled)\n -D APR_USE_SYSVSEM_SERIALIZE\n -D APR_USE_PTHREAD_SERIALIZE\n -D SINGLE_LISTEN_UNSERIALIZED_ACCEPT\n -D APR_HAS_OTHER_CHILD\n -D AP_HAVE_RELIABLE_PIPED_LOGS\n -D HTTPD_ROOT=\"/usr/local/www\"\n -D SUEXEC_BIN=\"/usr/local/www/bin/suexec\"\n -D DEFAULT_SCOREBOARD=\"logs/apache_runtime_status\"\n -D DEFAULT_ERRORLOG=\"logs/error_log\"\n -D AP_TYPES_CONFIG_FILE=\"conf/mime.types\"\n -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"", "attachment_id": null, "bug_id": 35404, "id": 76508, "time": "2005-06-18T01:16:49Z", "creator": "dreiter@alumni.ucsd.edu", "creation_time": "2005-06-18T01:16:49Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 35404, "text": "I am pretty sure this is not a leak in httpd.  I am heavily placing my bets on\nyour custom module.  Without either module source code, or specific details on\nwhere it is 'leaking', there is very little we can do to help you.", "id": 76516, "time": "2005-06-18T08:45:53Z", "creator": "chip@force-elite.com", "creation_time": "2005-06-18T08:45:53Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 35404, "attachment_id": null, "text": "I'll have to check, but I should be able to provide our module if you\ncould take a look at it.\n\nAs for your other question I have no idea where it is leaking, any suggestions\non things to look for I'd appreciate. The module does no memory allocation of\nits own , just 3 apr_palloc calls. It does create a socket to the other \nprogram,and opens up the newly cached file to send to the client. But even if \nthose were not being closed somehow apache seems to be growing much faster \nthan that amount of memory. The only clue I have found so far is that on the \nmachines where this module is called I see this error message in the error logs\nfor a very small number of requests, and never see it on boxes that don't have \nto call the module.\n\n[Fri Jun 17 12:36:50 2005] [info] (9)Bad File Descriptor: core_output_filter:\n\nThese msgs are at a smaller frequency then the (32) Broken PIpe which\nare due to the client just disconnecting.\n\nI'd appreciate any suggestions you can make. Thanks,\nDavid.\n", "id": 76518, "time": "2005-06-18T17:17:49Z", "creator": "dreiter@alumni.ucsd.edu", "creation_time": "2005-06-18T17:17:49Z", "is_private": false}, {"text": "Here are some numbers if it helps. On one of my boxes I stopped apache and restarted it \nso I could watch from scratch. Over about 20 minutes the box got about 250 requests. \nLooking at Top and ps there were 70 apache procs, and they were at 40MB at the end of the\n20 minutes. On boxes that don't call the miss plugin the apache procs always stay at between 9MB and \n10MB.\n\n Since I am not doing any mallocs at all I can't see how my plugin could leak that much memory in \nonly 250 requests.\n\n", "tags": [], "bug_id": 35404, "attachment_id": null, "count": 3, "id": 76704, "time": "2005-06-25T00:55:57Z", "creator": "dreiter@alumni.ucsd.edu", "creation_time": "2005-06-25T00:55:57Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 35404, "attachment_id": null, "id": 76727, "time": "2005-06-27T11:45:19Z", "creator": "jorton@redhat.com", "creation_time": "2005-06-27T11:45:19Z", "is_private": false, "text": "[Fri Jun 17 12:36:50 2005] [info] (9)Bad File Descriptor: core_output_filter:\n\nimplies perhaps you are creating FILE buckets in the wrong pool, or something\nlike that.  But regardless, you need to demonstrate an actual bug here not just\nsay \"something leaks memory\".  If you share your module source perhaps someone\nwill help out."}, {"count": 5, "tags": [], "bug_id": 35404, "attachment_id": null, "id": 77048, "time": "2005-07-06T22:16:17Z", "creator": "dreiter@alumni.ucsd.edu", "creation_time": "2005-07-06T22:16:17Z", "is_private": false, "text": "Well I seem to have fixed it by using file buckets, instead of using\nap_rwrite. Making a bucket brigade and sending the data that way\ndoes not leak memory, but reading the file in and using ap_rwrite\ndoes seem to leak memory. \n"}]