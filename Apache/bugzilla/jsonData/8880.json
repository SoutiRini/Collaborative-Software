[{"count": 0, "tags": [], "creator": "csaba@alum.mit.edu", "is_private": false, "id": 15642, "creation_time": "2002-05-07T16:14:21Z", "time": "2002-05-07T16:14:21Z", "bug_id": 8880, "text": "Strictly speaking, this isn't a bug, but it doesn't seem unreasonable to me...\nOn my Win2K Apache 2.0.36 (with PHP 4.2.0 as module), looking to serve up \nmyServer.com/myDir/index.php\n\nmyServer.com/myDir?the/rest/do/not/exist             => works\nmyServer.com/myDir/?the/rest/do/not/exist            => works\nmyServer.com/myDir/index.php/the/rest/do/not/exist   => works (bug 8234 fixed)\nmyServer.com/myDir/the/rest/do/not/exist             => error 404\n\nThe first two work because I have: DirectoryIndex index.php index.htm index.html\nThe third works because I have: AcceptPathInfo On\nThe fourth does not work even though I have both DirectoryIndex and \nAcceptPathInfo set as above\n\nShouldn't (as we check for existence of directories working backwards) we, upon \nencountering an existing directory, check for the DirectoryIndex files in that \ndirectory?\n\n    Thanks for considering,\n        Csaba Gabor", "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 8880, "attachment_id": null, "id": 15658, "time": "2002-05-07T19:37:26Z", "creator": "slive@apache.org", "creation_time": "2002-05-07T19:37:26Z", "is_private": false, "text": "I can confirm that this is true, that it doesn't depend on PHP, and that it \ncontradicts what we have in the documentation.  Whether or not it is desired\nbehavior, I have no idea."}, {"count": 2, "tags": [], "bug_id": 8880, "attachment_id": null, "is_private": false, "id": 15677, "time": "2002-05-07T22:32:43Z", "creator": "jwoolley@apache.org", "creation_time": "2002-05-07T22:32:43Z", "text": "Oh bah humbug.  I didn't think to test the directoryindex case.  :)  I'll work on a patch \nfor this as soon as I have time. "}, {"count": 3, "tags": [], "creator": "jwoolley@apache.org", "attachment_id": null, "text": "To what extent does this violate the documentation?  The existing behavior seems to match    \nwhat is documented as far as I can tell.  In particular,   \nhttp://httpd.apache.org/docs-2.0/mod/core.html#acceptpathinfo states:   \n  \n\"This directive controls whether requests that contain trailing pathname information that  \nfollows an actual filename (or non-existent file in an existing directory) will be  \naccepted or rejected. The trailing pathname information can be made available to scripts  \nin the PATH_INFO environment variable.  \n  \nFor example, assume the location /test/ points to a directory that contains only the   \nsingle file here.html. Then requests for /test/here.html/more and /test/nothere.html/more   \nboth collect /more as PATH_INFO. \"  \n  \nThis follows what I'm seeing in debugging, which is that a request for  \n  \n/existingdirectory/foo/bar (where /foo/bar is supposed to be the PATH_INFO) actually  \nlooks for /existingdirectory/foo with a PATH_INFO of /bar.  \n  \nNote that this also matches the behavior in Apache 1.3 (which seems to always allow \nPATH_INFO): \n \nroot@deepthought:/root/apache/httpd-test/perl-framework$ telnet localhost 8529 \nTrying 127.0.0.1... \nConnected to localhost. \nEscape character is '^]'. \nGET /apache/acceptpathinfo/index.shtml/foo/bar HTTP/1.0 \nHost: localhost \n \nHTTP/1.1 200 OK \nDate: Tue, 14 May 2002 22:59:05 GMT \nServer: Apache/1.3.25-dev (Unix) \nConnection: close \nContent-Type: text/html \n \n_/foo/bar_ \nConnection closed by foreign host. \nroot@deepthought:/root/apache/httpd-test/perl-framework$ telnet localhost 8529 \nTrying 127.0.0.1... \nConnected to localhost. \nEscape character is '^]'. \nGET /apache/acceptpathinfo/foo/bar HTTP/1.0 \nHost: localhost \n \nHTTP/1.1 404 Not Found \nDate: Tue, 14 May 2002 22:59:37 GMT \nServer: Apache/1.3.25-dev (Unix) \nConnection: close \nContent-Type: text/html; charset=iso-8859-1 \n \n<!DOCTYPE HTML PUBLIC \"-//IETF//DTD HTML 2.0//EN\"> \n<HTML><HEAD> \n<TITLE>404 Not Found</TITLE> \n</HEAD><BODY> \n<H1>Not Found</H1> \nThe requested URL /apache/acceptpathinfo/foo/bar was not found on this server.<P> \n</BODY></HTML> \nConnection closed by foreign host. \n \n   \n   ", "id": 16110, "time": "2002-05-14T23:02:46Z", "bug_id": 8880, "creation_time": "2002-05-14T23:02:46Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 8880, "attachment_id": null, "is_private": false, "id": 16116, "time": "2002-05-15T03:12:48Z", "creator": "slive@apache.org", "creation_time": "2002-05-15T03:12:48Z", "text": "Hmmm... Perhaps you are right, Cliff.  I may be misreading the docs.  The fact\nthat /test/nothere.html/more collects \"/more\" as PATH_INFO doesn't negate\nthe fact that it is a 404.  It is just that the 404 handler gets the\nPATH_INFO.\n\nSo perhaps the docs aren't clear, but they are accurate.  Now,\nwhether this is the desirable behavior... I have no idea."}, {"count": 5, "tags": [], "text": "\n  Seriously, this doesn't strike me as a bug, but a desireable feature that\n  should be crippled by default.  With the appropriate notation to the docs.\n\n  I rather suspect that if this ever worked, it was by a bit of magic within\n  PHP itself.  Certainly a dir-handler app should consider the path very\n  suspect and reconstruct it, as Cliff points out, we lose the missing\n  directory.\n\n", "attachment_id": null, "id": 16124, "creator": "wrowe@apache.org", "time": "2002-05-15T03:51:38Z", "bug_id": 8880, "creation_time": "2002-05-15T03:51:38Z", "is_private": false}, {"count": 6, "tags": [], "text": "    Sorry, I didn't mean to gave the impression that it was a bug, that's why I \nput Severity: Enhancement, since behaviour didn't disagree with the docs.  But \nI'm all for Will's suggestion.", "is_private": false, "id": 16125, "creator": "csaba@alum.mit.edu", "time": "2002-05-15T04:03:51Z", "bug_id": 8880, "creation_time": "2002-05-15T04:03:51Z", "attachment_id": null}, {"count": 7, "tags": [], "text": "Since acceptpathinfo default == off for non-cgi's, would acceptpathinfo on be \nspecification enough for you that this should work?  Or should it still be \ncrippled in that mode, and some \"acceptpathinfo yesevendirectories\" or \nsomething ;) be required?  I think just plain \"acceptpathinfo on\" should be \nenough, personally.\n\nI changed the component back to \"core\" at least for now, since that's where all \nof the path_info decisions get made ATM.  It's the core that's causing this to \nbe 404.  mod_dir never has a chance to even get at the thing AFAICT.", "attachment_id": null, "id": 16128, "creator": "jwoolley@apache.org", "time": "2002-05-15T04:12:29Z", "bug_id": 8880, "creation_time": "2002-05-15T04:12:29Z", "is_private": false}, {"count": 8, "tags": [], "bug_id": 8880, "attachment_id": null, "is_private": false, "id": 16130, "time": "2002-05-15T04:28:30Z", "creator": "wrowe@apache.org", "creation_time": "2002-05-15T04:28:30Z", "text": "\n  Of COURSE mod_dir is responsible for translating a directory into \n  a DirectoryIndex document, which is what the user is attempting to do.\n\n    http://httpd.apache.org/docs-2.0/mod/mod_dir.html#directoryindex\n\n  What I'd suggest is a brand new directive.  Either in mod_dir or in\n  mod_actions, to specify the files to serve for not found rather than\n  DirectoryIndex.\n\n  But wait, we have that already.  They are ErrorDocuments.  In fact, that's\n  the workaround I believe this admin needs.  Replace the ErrorDocument 404\n  with a php script, and he's all set.\n\n  Remember, /foo/bar  where foo is a dir and bar doesn't exist  is really\n  a request for bar, not foo.  You will break DAV and tons of other HTTP\n  applications changing that semantic.\n\n  "}, {"count": 9, "tags": [], "bug_id": 8880, "attachment_id": null, "id": 60636, "time": "2004-07-15T12:36:11Z", "creator": "nd@perlig.de", "creation_time": "2004-07-15T12:36:11Z", "is_private": false, "text": "Would break too much things. And obvoiusly nobody goes to change it."}]