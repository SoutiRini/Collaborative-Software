[{"count": 0, "tags": [], "creator": "ozeigermann@c1-fse.de", "attachment_id": null, "text": "In method removeLock(Connection connection, Uri uri, \nNodeLock lock) there is this code\n\n >  statement = connection.prepareStatement( \"delete LOCKS from LOCKS, \nURI u where LOCK_ID = u.URI_ID and u.URI_STRING=?\");\n >  statement.setString(1, lock.getLockId());\n \nbut should be \n\n >                         \"delete from LOCKS where LOCK_ID = ?\");\n >                 statement.setString(1, lock.getLockId());\n\n\nthere are other spots in lock code that show the same error...\n\nThere also is this code\n\n >             try {\n >                 statement =\n >                     connection.prepareStatement(\n >                         \"delete URI from URI, LOCKS l where URI_ID = \nl.LOCK_ID and URI_STRING=?\");\n >                 statement.setString(1, lock.getLockId());\n >             } finally {\n >                 close(statement);\n >             }\n\n\nwhich simply does nothing and should be removed.", "id": 53116, "time": "2004-02-27T12:44:05Z", "bug_id": 27291, "creation_time": "2004-02-27T12:44:05Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 27291, "attachment_id": null, "id": 53249, "time": "2004-03-01T10:14:31Z", "creator": "ozeigermann@c1-fse.de", "creation_time": "2004-03-01T10:14:31Z", "is_private": false, "text": "The problem is lockId comig from class NodeLock is a string while LOCK_ID in\ntable LOCKS requires an integer. The trick applied here is to add the lockId\nstring to the URI table and see what int id has been generated for it. This id\nis used for the LOCK_ID as primary key. So all this is correct (except for the\nmissing execution of the last delete statement), but a HACK."}]