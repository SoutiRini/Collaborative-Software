[{"attachment_id": null, "tags": [], "creator": "inhuman@iki.fi", "is_private": false, "count": 0, "id": 8850, "time": "2001-12-12T12:15:14Z", "bug_id": 5391, "creation_time": "2001-12-12T12:15:14Z", "text": "The documentation says that it is possible to change the WebappLoader's default\nclass loader org.apache.catalina.loader.WebappClassLoader using loaderClass\nattribute in Loader config. e.g:\n<Loader className=\"org.apache.catalina.loader.WebappLoader\"\nloaderClass=\"MyClassLoader\" /> \n\nHowever, this has no effect. I'm not sure but the reason might be in\nWebappLoader's code. The method setLoaderClass does not take any arguments:\n\n/**\n  * Set the ClassLoader class name.\n  *\n  * @param loaderClass The new ClassLoader class name\n  */\n  public void setLoaderClass() {\n     this.loaderClass = loaderClass;\n  }"}, {"count": 1, "tags": [], "bug_id": 5391, "is_private": false, "text": "Fixed in nightly build 20011213.  Will be fixed in Tomcat 4.0.2 release.\n\n(Some days open source can be *so* embarrassing :-)\n", "id": 8860, "time": "2001-12-12T12:55:51Z", "creator": "craig.mcclanahan@sun.com", "creation_time": "2001-12-12T12:55:51Z", "attachment_id": null}, {"count": 2, "attachment_id": null, "creator": "tom.sprenger@adnovum.com", "text": "The reported bug still exists. In fact, the method setLoaderClass() in the\nWebappLoader code has been fixed and works in Tomcat 4.0.2. However, the start()\nmethod makes no use of the value set in the 'loaderClass' variable and instead\nit still contains a hard wired piece of code, which creates an instance of\n'WebappClassLoader'.\n\nCode fragment of start()-method beeing in charge:\n\n            ...\n \n            if (parentClassLoader == null) {\n                classLoader = new WebappClassLoader(container.getResources());\n            } else {\n                classLoader = new WebappClassLoader\n                    (parentClassLoader, container.getResources());\n            }\n            ...\n\nTo make things work, we should rather use dynamic class loading (parametrized\nwith 'loaderClass' member variable) at this point. The code fragment might look\nlike this:\n\n            ...\n\n  \n            if (parentClassLoader == null) {\n                Class params[] = { DirContext.class };\n                Constructor constructor = cl.getConstructor(params);\n                Object initargs[] = { container.getResources() };\n                classLoader = (WebappClassLoader) \n                              constructor.newInstance(initargs);\n            } else {\n                Class params[] = { ClassLoader.class, DirContext.class };\n                Constructor constructor = cl.getConstructor(params);\n                Object initargs[] = { parentClassLoader, \n                                      container.getResources() };\n                classLoader = (WebappClassLoader) \n                              constructor.newInstance(initargs);\n            }\n        \n            ...\n            ", "id": 10820, "time": "2002-02-17T03:42:03Z", "bug_id": 5391, "creation_time": "2002-02-17T03:42:03Z", "tags": [], "is_private": false}, {"count": 3, "tags": [], "bug_id": 5391, "is_private": false, "text": "\n\n*** This bug has been marked as a duplicate of 5446 ***", "id": 10822, "time": "2002-02-17T04:48:21Z", "creator": "remm@apache.org", "creation_time": "2002-02-17T04:48:21Z", "attachment_id": null}]