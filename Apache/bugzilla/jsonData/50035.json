[{"count": 0, "tags": [], "bug_id": 50035, "text": "To reproduce:\n\n1) install clean tomcat\n\n2) create /conf/Catalina/localhost/test1.xml with \n     <Context antiResourceLocking=\"true\"></Context>\n\n3) install a sample application to /webapps/test1 that for instance\n   has a context listener that throws an exception during start of the\n   application\n\nweb.xml:\n\t<listener>\n\t\t<listener-class>org.acme.AlwaysFailContextListener</listener-class>\n\t</listener>\n\nAlwaysFailContextListener.java:\n\npublic class AlwaysFailContextListener implements ServletContextListener {\n    public void contextInitialized(ServletContextEvent event) {\n        throw new RuntimeException(\"We want this application to fail on start\");\n    }\n}\n    \n\n4) start tomcat\n\nTomcat will \n- copy the application resource to /temp/0-test1 directory\n- tries to start the app and fail\n- tries to remove /temp/0-test1 directory\n\nafter that if you do something like:\n\nStandardContext sc = (StandardContext) service.findChildren(\"localhost\").findChildren(\"test1\")\n\nsc.getDocBase() will return \"c:/tomcat/temp/0-test1\" directory,\nbut not \"test1\" as it was and should.\n\n(I'm coding a monitoring manager application for tomcat, that is used in our company. Just in case you wondering how I found this bug)", "id": 140349, "time": "2010-10-01T06:25:47Z", "creator": "igor.mukhin@gmx.de", "creation_time": "2010-10-01T06:25:47Z", "is_private": false, "attachment_id": null}, {"count": 1, "attachment_id": null, "bug_id": 50035, "is_private": false, "id": 140350, "time": "2010-10-01T06:35:11Z", "creator": "markt@apache.org", "creation_time": "2010-10-01T06:35:11Z", "tags": [], "text": "That is working as designed."}]