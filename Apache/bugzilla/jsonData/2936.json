[{"count": 0, "tags": [], "text": "As I saw hardcoded size on the frame I suggest to use this class\ninstead that can set the size and place it in center of another component.\n\npackage org.apache.jmeter.gui.util;\n\nimport java.awt.Dimension;\nimport java.awt.Component;\n\n/**\n * This class is a Util for awt Component and could be\n * used to place them in center of an other.\n *\n *\n * @author  <a href=\"mailto:bo.regnlin@pc.nu\">Bo Regnlin</a>\n * @version 1.0\n */\npublic class ComponentUtil\n{\n  /**\n\t\t * Use this static method if you want to center\n     * and set its proposion compared to the size of\n     * the current users screen size.\n     * Valid percent is between +-(0-100) minus is treated\n     * as plus, bigger than 100 is always set to 100.\n\t\t *\n\t\t *@param  component The component you want to center and set \nsize on.\n\t\t *@param  percentOfScreen The percent of the current screensize \nyou want\n     *        the component to be.\n\t\t */\n  public static void centerComponentInWindow(Component component, int \npercentOfScreen)\n  {\n    if(percentOfScreen < 0)\n    {\n      centerComponentInWindow(component, - percentOfScreen);\n      return;\n    }\n    if(percentOfScreen > 100)\n    {\n      centerComponentInWindow(component, 100);\n      return;\n    }\n    double percent = percentOfScreen / 100.d;\n    Dimension dimension = component.getToolkit().getScreenSize();\n    component.setSize((int)(dimension.getWidth()*percent),\n                      (int)(dimension.getHeight()*percent));\n    centerComponentInWindow(component);\n  }\n\n  /**\n\t\t * Use this static method if you want to center a component in \nWindow.\n\t\t *\n\t\t *@param  component The component you want to center in window.\n\t\t */\n  public static void centerComponentInWindow(Component component)\n  {\n    Dimension dimension = component.getToolkit().getScreenSize();\n\n    component.setLocation((int)((dimension.getWidth()-component.getWidth())/2),\n                          (int)((dimension.getHeight()-component.getHeight\n())/2));\n    component.validate();\n    component.repaint();\n  }\n\n  /**\n\t\t * Use this static method if you want to center\n     * a component over an other component.\n\t\t *\n\t\t *@param  parent The component you want to use to place it on.\n\t\t *@param  toBeCentered The component you want to center.\n\t\t */\n  public static void centerComponentInComponent(Component parent, Component \ntoBeCentered)\n  {\n    toBeCentered.setLocation((int)parent.getX() + (int)((parent.getWidth()-\ntoBeCentered.getWidth())/2),\n                            (int)parent.getY() + (int)((parent.getHeight()-\ntoBeCentered.getHeight())/2));\n  \n    toBeCentered.validate();\n    toBeCentered.repaint();\n  }\n\n}", "attachment_id": null, "bug_id": 2936, "id": 4191, "time": "2001-07-31T13:57:57Z", "creator": "bo.regnlin@pc.nu", "creation_time": "2001-07-31T13:57:57Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 2936, "attachment_id": null, "text": "Marking all bugs RESOLVED before JMeter 1.8's release date as VERIFIED.\nYes, it's pretty poor QA procedure, but there's bugs here lingering since JMeter\n1.6, and we need to clean up a little.", "id": 28354, "time": "2002-12-27T16:16:00Z", "creator": "jsalvata@atg.com", "creation_time": "2002-12-27T16:16:00Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 2936, "attachment_id": null, "is_private": false, "id": 28576, "time": "2002-12-29T14:21:08Z", "creator": "jsalvata@atg.com", "creation_time": "2002-12-29T14:21:08Z", "text": "Bulk-closing all bugs RESOLVED before JMeter 1.8 release date."}]