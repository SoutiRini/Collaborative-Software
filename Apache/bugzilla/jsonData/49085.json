[{"count": 0, "tags": [], "bug_id": 49085, "text": "Created attachment 25251\nFile I/O speedup patch\n\nThe current file I/O comes with large call overhead,\nin particular under Windows. For some common usage\nthat translates into a large relative overhead.\n\nThese usages are: reading individual bytes (parser)\nor writing small chunks of data (generator outputs).\nIf we are using non-buffered or multi-threaded files,\nsome larger sync / OS overhead is required in any \ncase. So, we only optimize for the buffered, single-\nthreaded case.\n\nAnother optimization is not buffering large chunks\nof data on the write path. That saves extra copies \nand does not pollute the data buffer.\n\n[[[\nMinimize relative overhead for buffered I/O of \nsmall data blocks. Also, eliminate mutex overhead\nfrom single-threaded Win32 code.\n\n* file_io/unix/readwrite.c\n  (apr_file_write): add \"shortcut\" for small buffers;\n  don't buffer large chunks at all\n  (apr_file_putc, apr_file_getc): add shortcut \n  for the common case\n\n* file_io/win32/readwrite.c\n  (apr_file_read): use mutex only if the file is\n  possibly accessed from multiple threads\n  (apr_file_write_locked): new function, factored\n  out from apr_file_flush\n  (apr_file_write): defer OVERLAPPED handling;\n  use mutex only if the file is possibly accessed \n  from multiple threads; add \"shortcut\" for small \n  buffers; don't buffer large chunks at all\n  (apr_file_putc, apr_file_getc): add shortcut \n  for the common case\n  (apr_file_flush): moved most code to \n  apr_file_write_locked\n\npatch by stefanfuhrmann < at > alice-dsl.de\n]]]", "id": 136010, "time": "2010-04-11T15:27:31Z", "creator": "stefanfuhrmann@alice-dsl.de", "creation_time": "2010-04-11T15:27:31Z", "is_private": false, "attachment_id": 25251}, {"count": 1, "attachment_id": 25326, "creator": "stefanfuhrmann@alice-dsl.de", "text": "Created attachment 25326\nFile I/O speedup patch - v2\n\nupdate patch", "id": 136284, "time": "2010-04-20T19:17:15Z", "bug_id": 49085, "creation_time": "2010-04-20T19:17:15Z", "tags": [], "is_private": false}, {"count": 2, "tags": [], "bug_id": 49085, "is_private": false, "text": "Updated patch comment:\n\n[[[\nMinimize relative overhead for buffered I/O of \nsmall data blocks. Also, eliminate mutex overhead\nfrom single-threaded Win32 code.\n\n* file_io/unix/readwrite.c\n  (file_read_buffered): don't buffer large chunks at all\n  (apr_file_write): add \"shortcut\" for small buffers;\n  don't buffer large chunks at all\n  (apr_file_putc, apr_file_getc): add shortcut \n  for the common case\n\n* file_io/win32/readwrite.c\n  (apr_file_read): use mutex only if the file is\n  possibly accessed from multiple threads;\n  don't buffer large chunks at all\n  (apr_file_write_locked): new function, factored\n  out from apr_file_flush\n  (apr_file_write): defer OVERLAPPED handling;\n  use mutex only if the file is possibly accessed \n  from multiple threads; add \"shortcut\" for small \n  buffers; don't buffer large chunks at all\n  (apr_file_putc, apr_file_getc): add shortcut \n  for the common case\n  (apr_file_flush): moved most code to \n  apr_file_write_locked\n\npatch by stefanfuhrmann < at > alice-dsl.de\n]]]", "id": 136285, "time": "2010-04-20T19:20:55Z", "creator": "stefanfuhrmann@alice-dsl.de", "creation_time": "2010-04-20T19:20:55Z", "attachment_id": null}]