[{"count": 0, "tags": [], "bug_id": 33515, "text": "If object (in my case SAXSource) is added to request attribute in filter and the\nobject inside attribute is big enough it causes random failures on page load.\nUsually page is cutted half (end of the page is not sent to browser). I haven't\ntested how big object should be but seems classical buffer overflow on some\npoint of chain. At least it would be nice to see some exception if object is too\nbig to be handled. Don't know if it matters but I have 3 filters on the filter\nchain. I added SAXSource at filter 2. \n\nI don't think that I should store big object on the request attribute anyway but\nthis was the case in one tester I made.", "id": 70822, "time": "2005-02-11T09:48:32Z", "creator": "petri.suutarinen@pp1.inet.fi", "creation_time": "2005-02-11T09:48:32Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "creator": "remm@apache.org", "is_private": false, "id": 70823, "creation_time": "2005-02-11T10:08:48Z", "time": "2005-02-11T10:08:48Z", "bug_id": 33515, "text": "Please provide a ready to test .war, as simple as possible.\n\nThere is no buffer overflow possible in Java, so you can remove that from the\nlist of possible explanations ;) Similarly, attributes are simply stored in a\nregular HashMap without any transformation, so there cannot be any issue with\nTomcat there. The only possible problem is if you have\nServletRequestAttributeListener listeners defined in your application, in which\ncase the code is slightly more complex (although it looks bug free to me).", "attachment_id": null}]