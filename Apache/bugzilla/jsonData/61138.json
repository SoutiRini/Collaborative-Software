[{"count": 0, "tags": [], "creator": "charles.fendt@diehl.com", "text": "The DefaultTempFileCreationStrategy creates a sub directory in the TEMP directory of the system\n\nline 79: dir = new File(tmpDir, POIFILES);\n\nBut, in multi user mode, the directory /tmp/poifiles is not writeable because owned by another user\n\nI changed this with \ndir = new File(tmpDir, IzarTempFileCreationStrategy.POIFILES + '-' + System.getProperty(\"user.name\"));\n\nAnd then i works fine !", "id": 198972, "time": "2017-05-31T07:38:21Z", "bug_id": 61138, "creation_time": "2017-05-31T07:38:21Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "creator": "charles.fendt@diehl.com", "text": "Line 128, i found a FIXME :\n        // FIXME: Java 7+: use java.nio.Files#createTempDirectory\n        final long n = random.nextLong();\n        File newDirectory = new File(dir, prefix + Long.toString(n));\n\nI change this with :\n        final File newDirectory = Files.createTempDirectory(this.dir.toPath(), prefix).toFile();\n\n:-)", "id": 198973, "time": "2017-05-31T07:39:50Z", "bug_id": 61138, "creation_time": "2017-05-31T07:39:50Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 61138, "attachment_id": null, "is_private": false, "id": 198983, "time": "2017-05-31T08:15:43Z", "creator": "onealj@apache.org", "creation_time": "2017-05-31T08:15:43Z", "text": "(In reply to Charles FENDT from comment #0)\n> The DefaultTempFileCreationStrategy creates a sub directory in the TEMP\n> directory of the system\nCheck out o.a.p.util.TempFile#setTempFileCreationStrategy method so that you can plug in your own temporary file creation strategy to meet your needs by implementing your own TempFileCreationStrategy class, as you've done here (hopefully not modifying the DefaultTempFileCreationStrategy class, unless you want to maintain a private fork).\nThere have been a few other bugs and requests on the dev mailing list for providing more strategies, such as process-specific or thread-specific directories, fixed-size/auto-pruning directories, and directories cleaned up on a timer or from an explicit call rather than at JVM exit (for long-running JVM server processes), encrypted temp files, a common folder shared among multiple processes, with each process deleting its temp files at exit, and the last process deleting the temp directory.\n\nI think the documentation mentions this, but maybe not prominently enough.\nDefaultTempFileCreationStrategy.java:\n> * See {@link TempFileCreationStrategy} for better strategies for long-running\n> * processes or limited temporary storage.\nAnd a few strategies talked about, but not implemented, in the TempFileCreationStrategy interface: [1]\nAt this point the strategies are too specific to a user's needs and the interface is small enough to easily implement that we haven't felt the need to add these to the POI API yet. If you want to develop some other TempFileCreationStrategies that you think would be universally usable (platform-independent), simple to use, and simple for us to maintain, and agnostic of filesystems and internationalization, then feel free to contribute a patch or pull request with unit tests. Ask if you need help.\n\nIn your example below, the user.name property may not exist, may contain characters that are not allowed in a file path (backslash and colon come to mind, though many other symbols and unicode could break on some file systems).\n\n(In reply to Charles FENDT from comment #1)\n> Line 128, i found a FIXME :\n>         // FIXME: Java 7+: use java.nio.Files#createTempDirectory\nThanks. Apache POI still officially supports Java 6 in source and binary, so this FIXME stays in until we officially drop support for Java 6. We should probably have a decorator or a consistent comment string that could be searched on to find all the code that could be written more concisely in Java 7. I'm sure this isn't the only Java 7 fixme.\n\nAsk around on the dev mailing list [2] or IRC channel [3] if you want to get involved with POI.\n\n[1] https://poi.apache.org/apidocs/org/apache/poi/util/TempFileCreationStrategy.html\n[2] http://poi.apache.org/mailinglists.html#The+POI+Developer+List\n[3] https://poi.apache.org/mailinglists.html#IRC"}, {"count": 3, "tags": [], "creator": "onealj@apache.org", "text": "Resolving as WONTFIX.\n\nUsers should implement their own TempFileCreationStrategy class and call TempFile.setTempFileCreationStrategy when they need something a strategy other than the default.\n\nIf you have any suggestions for updating the javadocs to make this clearer, I'll happily merge those changes.", "id": 198984, "time": "2017-05-31T08:19:36Z", "bug_id": 61138, "creation_time": "2017-05-31T08:19:36Z", "is_private": false, "attachment_id": null}]