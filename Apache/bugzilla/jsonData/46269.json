[{"count": 0, "tags": [], "bug_id": 46269, "attachment_id": 22916, "text": "Created attachment 22916\nThe problematic file.\n\nJava command executed:\n\njava org.apache.poi.poifs.filesystem.POIFSFileSystem test.xls out.xls\n\nWhile reading a Excel file, I'm getting the following exception:\n\nException in thread \"main\" java.io.IOException: Invalid header signature; read 4503608217567241, expected -2226271756974174256\n        at org.apache.poi.poifs.storage.HeaderBlockReader.<init>(HeaderBlockReader.java:112)\n        at org.apache.poi.poifs.filesystem.POIFSFileSystem.<init>(POIFSFileSystem.java:151)\n        at org.apache.poi.poifs.filesystem.POIFSFileSystem.main(POIFSFileSystem.java:415)\n\nThe test.xls file is attached. The file was received from a Govt organization and there is no way to verify which version of M$ Excel they use. The file opens fine in Excel and openOffice.", "id": 122748, "time": "2008-11-23T00:30:45Z", "creator": "syam@habibbank.com", "creation_time": "2008-11-23T00:30:45Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 46269, "attachment_id": null, "text": "The attached file is a BIFF2 file.  The only BIFF version POI supports is BIFF8.\n\nWhen you open and re-save with Excel or OO, the file is silently converted to BIFF8.\n\nImproved error message added in svn r721620.  I am marking this bug as 'WONTFIX' because it would be difficult to extend POI to handle previous BIFF versions.", "id": 122922, "time": "2008-11-28T19:18:19Z", "creator": "josh@apache.org", "creation_time": "2008-11-28T19:18:19Z", "is_private": false}, {"count": 2, "tags": [], "creator": "josh@apache.org", "attachment_id": 22963, "id": 122924, "time": "2008-11-29T00:48:30Z", "bug_id": 46269, "creation_time": "2008-11-29T00:48:30Z", "is_private": false, "text": "Created attachment 22963\nzip two java files\n\nI took a look at the example file (Attachment id=22916) and saw that only 5 BIFF2 records types were present.  It was relatively easy to write a BIFF2 stream reader that would handle just these records.  This might be a viable solution path if your input stays relatively simple.  Here is some sample code to call the attached converter:\n\n\nInputStream is = new FileInputStream(\"ex46269-22916.xls\"); \nHSSFWorkbook wb = BIFF2To8Converter.convert(is, \"Sheet1\");"}]