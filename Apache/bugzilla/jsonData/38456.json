[{"attachment_id": null, "tags": [], "bug_id": 38456, "text": "We use ant's FilterSet to perform token replacement on text to convert auto-generated HTML help to \nSGML.  We recently upgraded from ant 1.5.4 to ant 1.6.5, which appears to have broken the detection \nof infinite loops in the token replacement.\n\nExample code:\n\n        FilterSet filters = new FilterSet();\n\n        filters.setBeginToken(\"<\");\n        filters.setEndToken(\">\");\n\n        filters.addFilter(\"ul\", \"<itemizedlist>\");\n        filters.addFilter(\"/ul\", \"</itemizedList>\");\n        filters.addFilter(\"li\", \"<listitem>\");\n        filters.addFilter(\"/li\", \"</listitem>\");\n\n        String html =\n            \"<ul>\" +\n            \"  <li>Item 1</li>\" +\n            \"  <li>Item 2</li>\" +\n            \"</ul>\";\n\n        String sgml = filters.replaceTokens(html);\n\nThis code results in an error saying that there is an infinite loop in the replacement of tokens.  Note \nthough, that none of the replaced properties reference a token that would cause an infinite loop.\n\nOutput with ant 1.6.5:\n\nInfinite loop in tokens. Currently known tokens : [ul, li, /li]\nProblem token : <li> called from </li>\nHTML: <ul>  <li>Item 1</li>  <li>Item 2</li></ul>\nSGML: <itemizedlist>  <listitem>Item 1</listitem>  liItem 2/li/ul\n\nOutput with ant 1.5.4:\n\nHTML: <ul>  <li>Item 1</li>  <li>Item 2</li></ul>\nSGML: <itemizedlist>  <listitem>Item 1</listitem>  <listitem>Item 2</listitem></itemizedList>\n\nI'll attach my test case.", "count": 0, "id": 85215, "time": "2006-01-30T19:38:06Z", "creator": "rmorgan@pobox.com", "creation_time": "2006-01-30T19:38:06Z", "is_private": false}, {"count": 1, "tags": [], "creator": "rmorgan@pobox.com", "attachment_id": 17540, "id": 85217, "time": "2006-01-30T19:40:39Z", "bug_id": 38456, "creation_time": "2006-01-30T19:40:39Z", "is_private": false, "text": "Created attachment 17540\nTest case"}, {"count": 2, "tags": [], "text": "The workaround is to set the recurse option to false \n(add filters.setRecurse(false);)\n\nThe recurse option is protected against looping by only performing a replace of\na token on any single line only once. This is incorrect.\n", "is_private": false, "id": 85373, "creation_time": "2006-02-03T00:18:14Z", "time": "2006-02-03T00:18:14Z", "creator": "jkf@apache.org", "bug_id": 38456, "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 38456, "attachment_id": null, "id": 85375, "time": "2006-02-03T00:49:35Z", "creator": "jkf@apache.org", "creation_time": "2006-02-03T00:49:35Z", "is_private": false, "text": "Fixed on head"}]