[{"count": 0, "tags": [], "bug_id": 60504, "attachment_id": null, "text": "Currently the method POIXMLDocumentPart.removeRelation(POIXMLDocumentPart part) is protected.\nWould it be possible to change the visibility of this method to public?\n\nIndeed the method POIXMLDocumentPart.addRelation(...) is already public, so it makes sense to also make available to possibility to remove a relation.\n\nAbout my use case: I need to replace an image with another image. But I want to keep all the properties and the order of the original image in the replaced image. So what I am doing is replacing the blip embed attribute of the original image with the id of the new image. It works fine, but I also want to clean up the old image. So I need to remove the relation between the parent element and the blip id of the original image. That is where I need to call POIXMLDocumentPart.removeRelation(POIXMLDocumentPart part).", "id": 195587, "time": "2016-12-21T15:24:25Z", "creator": "amanteaux+bzapache@gmail.com", "creation_time": "2016-12-21T15:24:25Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 60504, "text": "While we could make it public, that would also open the door to lots of ways to completely break a workbook.  I'd prefer to see a higher level API for replacing one image with another that would handle these details internally in a consistent manner, with lots of unit tests.\n\nPatches are always welcome, as waiting for a volunteer to have the time and inclination to add a specific feature can take some time :)  Short of a patch, a robust discussion of what exactly an API improvement might look like, including test vectors, is still helpful.\n\nFor example, it may be that different document types need to handle image replacement differently.  I haven't dug in to how the different formats do it, but cell vs. slide vs. paragraph anchor references seem like one area that may be different.  Ideally there should be some consistency between document types for image replacement, and perhaps some checks as well if there are constraints or decisions needed when images differ in size, for example.\n\n(In reply to Aur\u00e9lien from comment #0)\n> Currently the method POIXMLDocumentPart.removeRelation(POIXMLDocumentPart\n> part) is protected.\n> Would it be possible to change the visibility of this method to public?\n>", "id": 195594, "time": "2016-12-21T19:00:29Z", "creator": "greg.woolsey@gmail.com", "creation_time": "2016-12-21T19:00:29Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "creator": "amanteaux+bzapache@gmail.com", "text": "Thank you for your detailed reply.\n\nAbout the containers in which an image can be, I counted only 2 containers:\n- a XSLFSlide,\n- a XSLFGroupShape.\nThere doesn't seem to be any way to put an image in a paragraph or in a table.\n\nAbout the test vector, what do you have in mind?\nI am actually working on the library https://github.com/Coreoz/PPT-Templates that is highly based on POI XSLF, but it difficult to write tests since it is often in PowerPoint that I can verify whether the image replacement is working, or if the PPT slide is corrupted.", "id": 195617, "time": "2016-12-22T17:52:44Z", "bug_id": 60504, "creation_time": "2016-12-22T17:52:44Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 60504, "attachment_id": null, "text": "(In reply to Aur\u00e9lien from comment #2)\n\n> About the containers in which an image can be, I counted only 2 containers:\n> - a XSLFSlide,\n> - a XSLFGroupShape.\n> There doesn't seem to be any way to put an image in a paragraph or in a\n> table.\n\nI was thinking about Word and Excel files as well, not just PowerPoint.  Some of the graphics objects are common but handled independently, and perhaps that could/should be standardized in some respects.\n\n> \n> About the test vector, what do you have in mind?\n> I am actually working on the library https://github.com/Coreoz/PPT-Templates\n> that is highly based on POI XSLF, but it difficult to write tests since it\n> is often in PowerPoint that I can verify whether the image replacement is\n> working, or if the PPT slide is corrupted.\n\nAnything you can see as right/wrong in PowerPoint visually should be represented in the XML somehow, so it should be testable.  The key is ensuring the \"expected\" values are correct manually, possibly by viewing an \"expected result\" master file in PowerPoint, then building a test case around it.", "id": 195618, "time": "2016-12-22T18:54:42Z", "creator": "greg.woolsey@gmail.com", "creation_time": "2016-12-22T18:54:42Z", "is_private": false}]