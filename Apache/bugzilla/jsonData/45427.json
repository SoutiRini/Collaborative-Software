[{"count": 0, "tags": [], "bug_id": 45427, "attachment_id": 22277, "id": 118786, "time": "2008-07-17T23:44:39Z", "creator": "sflaniga@redhat.com", "creation_time": "2008-07-17T23:44:39Z", "is_private": false, "text": "Created attachment 22277\nSimple WAR containing test JSPs for the working and broken expressions. \n\nAccording to my reading of Sun's EL spec for JSP 2.1, any of the following expressions should be legal -\n    ${'This string contains unmatched escaped \\' single and \" double quotes, inside single quotes'}\n    ${\"This string contains unmatched ' single and escaped \\\" double quotes, inside double quotes\"}\n    ${\"This string contains an ' unescaped single quote, inside double quotes\"}\n    ${'This string contains an \" unescaped, unmatched double quote, inside single quotes'}\n\n- but in Tomcat, none of the above expressions compiles, at least not when alone. (In some files, the unmatched quote may be matched inside a later EL expression. In that case, the JSP will compile, but both expressions, together with everything in between them, will be merged into one string literal! This is especially insidious.)\n\norg.apache.jasper.JasperException: /broken1.jsp(2,2) Unterminated ${ tag\norg.apache.jasper.compiler.DefaultErrorHandler.jspError(DefaultErrorHandler.java:40)\norg.apache.jasper.compiler.ErrorDispatcher.dispatch(ErrorDispatcher.java:407)\norg.apache.jasper.compiler.ErrorDispatcher.jspError(ErrorDispatcher.java:132)\norg.apache.jasper.compiler.Parser.parseELExpression(Parser.java:763)\norg.apache.jasper.compiler.Parser.parseElements(Parser.java:1451)\norg.apache.jasper.compiler.Parser.parse(Parser.java:133)\norg.apache.jasper.compiler.ParserController.doParse(ParserController.java:216)\norg.apache.jasper.compiler.ParserController.parse(ParserController.java:103)\norg.apache.jasper.compiler.Compiler.generateJava(Compiler.java:153)\norg.apache.jasper.compiler.Compiler.compile(Compiler.java:314)\norg.apache.jasper.compiler.Compiler.compile(Compiler.java:294)\norg.apache.jasper.compiler.Compiler.compile(Compiler.java:281)\norg.apache.jasper.JspCompilationContext.compile(JspCompilationContext.java:566)\norg.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:317)\norg.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:337)\norg.apache.jasper.servlet.JspServlet.service(JspServlet.java:266)\njavax.servlet.http.HttpServlet.service(HttpServlet.java:803)\n\n\nThe EL parser implementation seems to think that nested quotes are only escaped if they are the same (single/double) as the surrounding quotes, but nested quotes don't have to be closed/matched. The JSP implementation, on the other hand, seems to think that quotes do have to be matched, unless they are escaped. For some strings (above), no combination of escaping will make both parsers happy. I'm not sure whether this is a bug in the JSP implementation, or perhaps a deficiency in the JSP/EL specs.\n\nI have collected the above expressions which break the parser (broken[1234].jsp), along with some illegal expressions and some working expressions (working.jsp) in a small WAR file which is attached to this report. I don't believe that the files broken[1234].jsp should be causing exceptions.\n\nNote: for some reason, single quoted strings are not allowed(!) to contain escaped double quotes, and vice versa, so these expressions are illegal, and thus it's okay that they don't compile (illegal[12].jsp):\n    ${\"This string contains an \\' escaped single quote, inside double quotes\"}\n    ${'This string contains an \\\" escaped double quote, inside single quotes'}\n(Note that the text of the EL spec implies that these should be legal, but the EL grammar says otherwise. Not a good sign...)"}, {"count": 1, "tags": [], "bug_id": 45427, "attachment_id": null, "is_private": false, "id": 119651, "time": "2008-08-09T14:28:17Z", "creator": "ilangocal@yahoo.com", "creation_time": "2008-08-09T14:28:17Z", "text": "(In reply to comment #0)\nCan I test this under Tomcat under Ubuntu Fiesty Fawn?\n\nthanks\nilango \n> Created an attachment (id=22277) [details]\n> Simple WAR containing test JSPs for the working and broken expressions. \n> \n> According to my reading of Sun's EL spec for JSP 2.1, any of the following\n> expressions should be legal -\n>     ${'This string contains unmatched escaped \\' single and \" double quotes,\n> inside single quotes'}\n>     ${\"This string contains unmatched ' single and escaped \\\" double quotes,\n> inside double quotes\"}\n>     ${\"This string contains an ' unescaped single quote, inside double quotes\"}\n>     ${'This string contains an \" unescaped, unmatched double quote, inside\n> single quotes'}\n> \n> - but in Tomcat, none of the above expressions compiles, at least not when\n> alone. (In some files, the unmatched quote may be matched inside a later EL\n> expression. In that case, the JSP will compile, but both expressions, together\n> with everything in between them, will be merged into one string literal! This\n> is especially insidious.)\n> \n> org.apache.jasper.JasperException: /broken1.jsp(2,2) Unterminated ${ tag\n> org.apache.jasper.compiler.DefaultErrorHandler.jspError(DefaultErrorHandler.java:40)\n> org.apache.jasper.compiler.ErrorDispatcher.dispatch(ErrorDispatcher.java:407)\n> org.apache.jasper.compiler.ErrorDispatcher.jspError(ErrorDispatcher.java:132)\n> org.apache.jasper.compiler.Parser.parseELExpression(Parser.java:763)\n> org.apache.jasper.compiler.Parser.parseElements(Parser.java:1451)\n> org.apache.jasper.compiler.Parser.parse(Parser.java:133)\n> org.apache.jasper.compiler.ParserController.doParse(ParserController.java:216)\n> org.apache.jasper.compiler.ParserController.parse(ParserController.java:103)\n> org.apache.jasper.compiler.Compiler.generateJava(Compiler.java:153)\n> org.apache.jasper.compiler.Compiler.compile(Compiler.java:314)\n> org.apache.jasper.compiler.Compiler.compile(Compiler.java:294)\n> org.apache.jasper.compiler.Compiler.compile(Compiler.java:281)\n> org.apache.jasper.JspCompilationContext.compile(JspCompilationContext.java:566)\n> org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:317)\n> org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:337)\n> org.apache.jasper.servlet.JspServlet.service(JspServlet.java:266)\n> javax.servlet.http.HttpServlet.service(HttpServlet.java:803)\n> \n> \n> The EL parser implementation seems to think that nested quotes are only escaped\n> if they are the same (single/double) as the surrounding quotes, but nested\n> quotes don't have to be closed/matched. The JSP implementation, on the other\n> hand, seems to think that quotes do have to be matched, unless they are\n> escaped. For some strings (above), no combination of escaping will make both\n> parsers happy. I'm not sure whether this is a bug in the JSP implementation, or\n> perhaps a deficiency in the JSP/EL specs.\n> \n> I have collected the above expressions which break the parser\n> (broken[1234].jsp), along with some illegal expressions and some working\n> expressions (working.jsp) in a small WAR file which is attached to this report.\n> I don't believe that the files broken[1234].jsp should be causing exceptions.\n> \n> Note: for some reason, single quoted strings are not allowed(!) to contain\n> escaped double quotes, and vice versa, so these expressions are illegal, and\n> thus it's okay that they don't compile (illegal[12].jsp):\n>     ${\"This string contains an \\' escaped single quote, inside double quotes\"}\n>     ${'This string contains an \\\" escaped double quote, inside single quotes'}\n> (Note that the text of the EL spec implies that these should be legal, but the\n> EL grammar says otherwise. Not a good sign...)\n> \n\n"}, {"count": 2, "tags": [], "text": "Yes, I think the bug should manifest itself on any platform, as long as you're running Tomcat 6.", "attachment_id": null, "id": 119664, "creator": "sflaniga@redhat.com", "time": "2008-08-10T16:23:59Z", "bug_id": 45427, "creation_time": "2008-08-10T16:23:59Z", "is_private": false}, {"count": 3, "tags": [], "text": "This has been fixed in trunk and proposed for 6.0.x. Thanks for the report.", "is_private": false, "bug_id": 45427, "id": 120706, "time": "2008-09-17T05:48:08Z", "creator": "markt@apache.org", "creation_time": "2008-09-17T05:48:08Z", "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 45427, "attachment_id": null, "id": 120964, "time": "2008-09-25T03:58:26Z", "creator": "markt@apache.org", "creation_time": "2008-09-25T03:58:26Z", "is_private": false, "text": "This has been fixed in 6.0.x and will be included in 6.0.19 onwards."}]