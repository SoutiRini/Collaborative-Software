[{"count": 0, "tags": [], "creator": "robbiexgibson@yahoo.com", "attachment_id": null, "id": 92650, "time": "2006-08-29T09:27:14Z", "bug_id": 40342, "creation_time": "2006-08-29T09:27:14Z", "is_private": false, "text": "In ant 1.6, the rmic task generates 1.2 stubs by default, but in 1.7 the same\ntask generates 1.1 stubs by default."}, {"count": 1, "tags": [], "creator": "stevel@apache.org", "attachment_id": null, "id": 92717, "time": "2006-08-30T10:22:43Z", "bug_id": 40342, "creation_time": "2006-08-30T10:22:43Z", "is_private": false, "text": "This is java1.5, isnt it? It is the only JDK that generates 1.2 stuff by default.\n\nwe tweaked rmic to always run with -vcompat unless you say otherwise, as it was\nbreaking the dependency logic. Notice how in ant1.6, your rmic task reruns every\ntime, as it thinks the stubs are missing.\n\nhttp://issues.apache.org/bugzilla/show_bug.cgi?id=33862\n\nTurn on stubversion=\"1.2\" to get the version 1.2 stuff.\n\nI am going to mark this as WONTFIX, but I think we ought to move the rmic change\nto the changes-that-may break your build. \n\nThere's no ideal solution here. If we leave it as is, the dependency logic is\nbroken on java1.5, or we try and do something clever, looking that the java\nversion of the JDK and 'knowing' which thing is right. But here's why I dont\nwant to do that: moving up to java1.5 from java1.4 breaks all your rmic code if\nyou still want to talk to older stuff. And its not an obvious failure that shows\nup in the build, but only when you redistribute, as you unknowlingly ship non\nbackwards-compatible stub classes."}, {"count": 2, "attachment_id": null, "bug_id": 40342, "text": "The thing is, it's a bit strange because moving up a JDK version from 1.4 -> 1.5\nstops generating Skeletons (not Stubs) by default; but moving from Ant 1.6 to\n1.7 starts generating them (by default) ...\n\nWhat about just changing the dependency logic to check for the existence of\nStubs instead of Skeletons? Then the dependencies are correctly checked\neverywhere (unless someone manages to generate Stubs but not Skeletons and then\nre-runs with target 1.1).", "id": 92720, "time": "2006-08-30T11:47:03Z", "creator": "robbiexgibson@yahoo.com", "creation_time": "2006-08-30T11:47:03Z", "tags": [], "is_private": false}, {"count": 3, "tags": [], "creator": "stevel@apache.org", "text": "I didnt really look at what java1.5 did, only noticed that the dependency logic\nbroke and that the rmic docs say \"We no longer do -compat\" by default -so we\nswitched rmic back to retaining the defaults.\n\nthe trouble with trying to be clever about knowing which jvm has what defaults\nis that we often end up getting it wrong, as they change behaviours on new JDKs\n(like here). Supporting third party JDKs and as yet unreleased JDKs are extra\ntrouble.\n\nGoing to reopen as we could look for skeletons, maybe. however, my other point\nabout default stubs still stands. Imagine you write an app on java1.4 &\nredistribute the app with source. the moment someone builds on java1.5, they end\nup producing something that is incompatible. now, what they do with their .class\nfiles is normally their problem, but RMI is a network protocol. By abandoning\ncompatibility you are producing code that doesnt interop over the network, and\nthat is a bad thing. ", "id": 92723, "time": "2006-08-30T12:34:42Z", "bug_id": 40342, "creation_time": "2006-08-30T12:34:42Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "creator": "bodewig@apache.org", "attachment_id": null, "id": 129279, "time": "2009-07-30T06:24:22Z", "bug_id": 40342, "creation_time": "2009-07-30T06:24:22Z", "is_private": false, "text": "Not sure where ypu've been getting at, Steve, when you reopened.\n\nAnt's DefaultRmicAdapter doesn't look for skels when stubversion is set to 1.2, so I think we are correct."}]