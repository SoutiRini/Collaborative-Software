[{"attachment_id": null, "tags": [], "creator": "roberto@javest.com", "text": "Below please find the error trace, the same error was available using 0.92 \nbeta.\n\nException in thread \"AWT-EventQueue-0\" java.lang.ClassCastException: \norg.apache.fop.layoutmgr.InlineKnuthSequence\n        at \norg.apache.fop.layoutmgr.BlockStackingLayoutManager.wrapPositionElements\n(BlockStackingLayoutManager.java:1454)\n        at \norg.apache.fop.layoutmgr.BlockStackingLayoutManager.wrapPositionElements\n(BlockStackingLayoutManager.java:1439)\n        at \norg.apache.fop.layoutmgr.BlockContainerLayoutManager$BlockContainerBreaker.getN\nextKnuthElements(BlockContainerLayoutManager.java:612)\n        at org.apache.fop.layoutmgr.AbstractBreaker.getNextBlockList\n(AbstractBreaker.java:554)\n        at org.apache.fop.layoutmgr.AbstractBreaker.doLayout\n(AbstractBreaker.java:301)\n        at \norg.apache.fop.layoutmgr.BlockContainerLayoutManager.getNextKnuthElements\n(BlockContainerLayoutManager.java:355)\n        at \norg.apache.fop.layoutmgr.table.TableCellLayoutManager.getNextKnuthElements\n(TableCellLayoutManager.java:168)\n        at \norg.apache.fop.layoutmgr.table.TableContentLayoutManager.createElementsForRowGr\noup(TableContentLayoutManager.java:480)\n        at \norg.apache.fop.layoutmgr.table.TableContentLayoutManager.getKnuthElementsForRow\nIterator(TableContentLayoutManager.java:243)\n        at \norg.apache.fop.layoutmgr.table.TableContentLayoutManager.getNextKnuthElements\n(TableContentLayoutManager.java:183)\n        at \norg.apache.fop.layoutmgr.table.TableLayoutManager.getNextKnuthElements\n(TableLayoutManager.java:229)\n        at \norg.apache.fop.layoutmgr.table.TableCellLayoutManager.getNextKnuthElements\n(TableCellLayoutManager.java:168)\n        at \norg.apache.fop.layoutmgr.table.TableContentLayoutManager.createElementsForRowGr\noup(TableContentLayoutManager.java:480)\n        at \norg.apache.fop.layoutmgr.table.TableContentLayoutManager.getKnuthElementsForRow\nIterator(TableContentLayoutManager.java:243)\n        at \norg.apache.fop.layoutmgr.table.TableContentLayoutManager.getNextKnuthElements\n(TableContentLayoutManager.java:183)\n        at \norg.apache.fop.layoutmgr.table.TableLayoutManager.getNextKnuthElements\n(TableLayoutManager.java:229)\n        at \norg.apache.fop.layoutmgr.StaticContentLayoutManager$StaticContentBreaker.getNex\ntKnuthElements(StaticContentLayoutManager.java:317)\n        at org.apache.fop.layoutmgr.AbstractBreaker.getNextBlockList\n(AbstractBreaker.java:554)\n        at org.apache.fop.layoutmgr.AbstractBreaker.doLayout\n(AbstractBreaker.java:301)\n        at org.apache.fop.layoutmgr.StaticContentLayoutManager.doLayout\n(StaticContentLayoutManager.java:239)\n        at org.apache.fop.layoutmgr.PageSequenceLayoutManager.layoutSideRegion\n(PageSequenceLayoutManager.java:771)\n        at org.apache.fop.layoutmgr.PageSequenceLayoutManager.finishPage\n(PageSequenceLayoutManager.java:777)\n        at org.apache.fop.layoutmgr.PageSequenceLayoutManager.makeNewPage\n(PageSequenceLayoutManager.java:741)\n        at org.apache.fop.layoutmgr.PageSequenceLayoutManager.handleBreakTrait\n(PageSequenceLayoutManager.java:827)\n        at org.apache.fop.layoutmgr.PageSequenceLayoutManager.access$300\n(PageSequenceLayoutManager.java:62)\n        at \norg.apache.fop.layoutmgr.PageSequenceLayoutManager$PageBreaker.startPart\n(PageSequenceLayoutManager.java:505)\n        at org.apache.fop.layoutmgr.AbstractBreaker.addAreas\n(AbstractBreaker.java:420)\n        at org.apache.fop.layoutmgr.AbstractBreaker.addAreas\n(AbstractBreaker.java:370)\n        at \norg.apache.fop.layoutmgr.PageSequenceLayoutManager$PageBreaker.doPhase3\n(PageSequenceLayoutManager.java:369)\n        at org.apache.fop.layoutmgr.AbstractBreaker.doLayout\n(AbstractBreaker.java:345)\n        at org.apache.fop.layoutmgr.AbstractBreaker.doLayout\n(AbstractBreaker.java:263)\n        at org.apache.fop.layoutmgr.PageSequenceLayoutManager.activateLayout\n(PageSequenceLayoutManager.java:157)\n        at org.apache.fop.area.AreaTreeHandler.endPageSequence\n(AreaTreeHandler.java:385)\n        at org.apache.fop.fo.pagination.PageSequence.endOfNode\n(PageSequence.java:148)\n        at org.apache.fop.fo.FOTreeBuilder$MainFOHandler.endElement\n(FOTreeBuilder.java:378)\n        at org.apache.fop.fo.FOTreeBuilder.endElement(FOTreeBuilder.java:194)\n        at net.sf.saxon.event.ContentHandlerProxy.endElement\n(ContentHandlerProxy.java:205)\n        at net.sf.saxon.event.ProxyReceiver.endElement(ProxyReceiver.java:161)\n        at net.sf.saxon.event.NamespaceReducer.endElement\n(NamespaceReducer.java:184)\n        at net.sf.saxon.event.ComplexContentOutputter.endElement\n(ComplexContentOutputter.java:325)\n        at net.sf.saxon.instruct.ElementCreator.processLeavingTail\n(ElementCreator.java:186)\n        at net.sf.saxon.instruct.Instruction.process(Instruction.java:166)\n        at net.sf.saxon.instruct.Instruction.processChildren\n(Instruction.java:208)\n        at net.sf.saxon.instruct.ElementCreator.processLeavingTail\n(ElementCreator.java:183)\n        at net.sf.saxon.instruct.Instruction.processChildrenLeavingTail\n(Instruction.java:269)\n        at net.sf.saxon.instruct.Sequence.processLeavingTail(Sequence.java:147)\n        at net.sf.saxon.instruct.Template.expand(Template.java:105)\n        at \nnet.sf.saxon.instruct.CallTemplate$CallTemplatePackage.processLeavingTail\n(CallTemplate.java:235)\n        at net.sf.saxon.Controller.applyTemplates(Controller.java:284)\n        at \nnet.sf.saxon.instruct.ApplyTemplates$ApplyTemplatesPackage.processLeavingTail\n(ApplyTemplates.java:143)\n        at net.sf.saxon.Controller.applyTemplates(Controller.java:284)\n        at net.sf.saxon.Controller.run(Controller.java:187)\n        at net.sf.saxon.Controller.transformDocument(Controller.java:1536)\n        at net.sf.saxon.Controller.transform(Controller.java:1342)", "count": 0, "id": 98798, "time": "2007-01-30T15:32:15Z", "bug_id": 41500, "creation_time": "2007-01-30T15:32:15Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 41500, "attachment_id": null, "id": 98799, "time": "2007-01-30T15:33:54Z", "creator": "roberto@javest.com", "creation_time": "2007-01-30T15:33:54Z", "is_private": false, "text": "Transformation has been made using SAXON 7.9.1"}, {"count": 2, "tags": [], "bug_id": 41500, "text": "Any chance of attaching an FO file demonstrating the problem? Not XML + XSLT  \njust plain FO please.", "id": 98804, "time": "2007-01-30T15:55:11Z", "creator": "manuel@apache.org", "creation_time": "2007-01-30T15:55:11Z", "is_private": false, "attachment_id": null}, {"attachment_id": 19491, "tags": [], "creator": "roberto@javest.com", "text": "Created attachment 19491\nFO source do generate the error (transforming to PDF)", "count": 3, "id": 98842, "time": "2007-01-31T10:48:28Z", "bug_id": 41500, "creation_time": "2007-01-31T10:48:28Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 41500, "is_private": false, "id": 98849, "creation_time": "2007-01-31T12:16:00Z", "time": "2007-01-31T12:16:00Z", "creator": "jeremias@apache.org", "text": "The problem appears as fo:wrapper is used as a direct child of\nfo:block-container with block-level content. As documented in\nhttp://xmlgraphics.apache.org/fop/compliance.html#fo-object-wrapper fo:wrapper\nis currently only working properly around inline-level content. The work-around\nat the moment is to use fo:block instead of fo:wrapper.\n\nLet's keep this bug open until the implementation is fully finished for\nfo:wrapper. Thanks for the test case.", "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 41500, "attachment_id": null, "text": "For the record: this bug still exists in FOP 0.94 and 0.95beta. I just ran into it, and only discovered this bug after extensive searching. It would be nice if this bug was fixed. It did not exist in older FOP versions.\n\nI was able to work around the problem thanks to the information here, though.", "id": 115496, "time": "2008-04-10T05:07:18Z", "creator": "larsga@garshol.priv.no", "creation_time": "2008-04-10T05:07:18Z", "is_private": false}, {"count": 6, "tags": [], "bug_id": 41500, "is_private": false, "text": "FWIW, the following implementation of BlockContainerLayoutManager.wrapPositionElements() seems to fix the issue:\n\n---\n    protected void wrapPositionElements(List sourceList, List targetList, boolean force) {\n          \n        ListIterator listIter = sourceList.listIterator();\n        Object tempElement;\n        while (listIter.hasNext()) {\n            tempElement = listIter.next();\n            if (tempElement instanceof ListElement) {\n                wrapPositionElement(\n                        (ListElement) tempElement,\n                        targetList,\n                        force);\n            } else if (tempElement instanceof List) {\n                wrapPositionElements(\n                        (List) tempElement, \n                        targetList,\n                        force);\n            }\n        }\n    }\n---\n\nHaven't committed it, since I still need to do some more thorough checking, and I'm not sure if this is the best way to avoid this error.\nThe problem is that the original implementation assumes that all the elements of the list will be instances of ListElement, where the WrapperLayoutManager generates an InlineKnuthSequence. This quick and dirty fix simply takes this possibility into account and changes the behavior in that case.", "id": 115917, "time": "2008-04-27T01:42:48Z", "creator": "adelmelle@apache.org", "creation_time": "2008-04-27T01:42:48Z", "attachment_id": null}, {"attachment_id": null, "tags": [], "creator": "adelmelle@apache.org", "text": "(In reply to comment #6)\n> FWIW, the following implementation of\n> BlockContainerLayoutManager.wrapPositionElements() seems to fix the issue:\n\nCorrection: BlockStackingLM.wrapPositionElements()...\n", "count": 7, "id": 115918, "time": "2008-04-27T01:46:16Z", "bug_id": 41500, "creation_time": "2008-04-27T01:46:16Z", "is_private": false}, {"count": 8, "tags": [], "bug_id": 41500, "is_private": false, "id": 116327, "creation_time": "2008-05-07T00:36:03Z", "time": "2008-05-07T00:36:03Z", "creator": "adelmelle@apache.org", "text": "\nIn the meantime, I performed some further test with the proposed change, and it definitely still needs work, but this is a more general issue: if the wrapper has text-children, we get a new ClassCastException in BlockContainerLM.addAreas(), since it does not count on InlineArea children (and nor should it).\n\nIf the wrapper contains an inline-child, FOP correctly throws a ValidationException, since an inline is not allowed as a child of the block-container. Text-nodes currently are not validated.\n\nI've begun implementing such validation in Wrapper, but stumbled upon issues with white-space. Since the parser reports all character data (as it is supposed to), we also receive characters() events for white-space that may or may not be considered ignorable. Mainly this latter concern made me think that it might be better to fold that type of validation into the white-space handling loop (as in: only throw a ValidationException in case non-white-space characters remain after applying white-space-treatment).\n\nIf not, then we would add yet another loop over the character array... I'd like to avoid this somehow.", "attachment_id": null}, {"count": 9, "tags": [], "bug_id": 41500, "attachment_id": null, "is_private": false, "id": 116337, "time": "2008-05-07T07:06:24Z", "creator": "adelmelle@apache.org", "creation_time": "2008-05-07T07:06:24Z", "text": "\nFixed in FOP Trunk.\n\nSee: http://svn.apache.org/viewvc?rev=654111&view=rev\n\nThanks for reporting!"}, {"count": 10, "tags": [], "bug_id": 41500, "is_private": false, "id": 155593, "creation_time": "2012-04-01T06:29:40Z", "time": "2012-04-01T06:29:40Z", "creator": "gadams@apache.org", "text": "batch transition pre-FOP1.0 resolved+fixed bugs to closed+fixed", "attachment_id": null}]