[{"count": 0, "tags": [], "bug_id": 11082, "text": "It would be much more confortable to be able to choose where the HTTP recorder\nhas to store the samplers it creates.\n\nOne easy way would be to have the HTTP Proxy be a no-op test object and make it\nstore the samplers in its parent containers. Is this feasible?", "id": 20050, "time": "2002-07-23T13:44:03Z", "creator": "jsalvata@atg.com", "creation_time": "2002-07-23T13:44:03Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 11082, "text": "How about making a new kind of controller (ProxyController?) that the Proxy\nserver specifically looks for to save to?  If it doesn't find it, it can fall\nback to the SimpleController, and failing that, the ThreadGroup (that's its\ncurrent behavior).", "id": 20073, "time": "2002-07-23T18:36:13Z", "creator": "mstover1@apache.org", "creation_time": "2002-07-23T18:36:13Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "creator": "jsalvata@atg.com", "attachment_id": null, "text": "I've been thinking about this. Actually the problem is not so much that you\ncan't choose where to record but that sometimes, if you've not checked that\nthere's an empty simple controller at the top of your test, you'll get the\nrecorded samplers somewhere inside your test and screw it up.\n\nOne good strategy would be to give the choice of recording into the test plan\n(default, with the same behaviour it has now, so that newbye users can just\nrecord and run without needing to drag & drop things around) or into the\nWorkBench -- where it would create a simple controller named \"Recorded HTTP\" if\nthere isn't one already.\n\nThe other possible strategy would be to record into the WorkBench no matter\nwhat. The only inconvenient would be that newbie users would need to perform one\nmore operation, but given that they already need to create a Thread Group,\ncreate the HTTP Proxy in the workbench, set up the regular expressions and start\n the proxy.... one more operation wouldn't hurt that much.\n\nMakes sense?\n", "id": 20530, "time": "2002-08-01T12:17:54Z", "bug_id": 11082, "creation_time": "2002-08-01T12:17:54Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 11082, "text": "Even simpler would be to have the proxy record into the test plan as it does\nnow, but to create a new simple controller there every time the user presses\n\"Start\".  So recording a series of interactions, and breaking them up into\n\"steps\" to be individually tested, would consist of:\n  - press \"start\" (creates first simple controller)\n  - do stuff in browser\n  - press \"stop\" then \"start\" (creates another simple controller)\n  - do more stuff in browser\n  - etc.\n\nThis doesn't *completely* solve Jordi's complaint that the proxy will \"screw up\"\nyour test plan if you aren't careful -- but it does make it much easier for you\nto recover from that.  Especially if, as he suggests, the new simple controller\nis given a distinctive name like \"Recorded HTTP\".", "id": 20574, "time": "2002-08-01T23:08:50Z", "creator": "eric_97@pobox.com", "creation_time": "2002-08-01T23:08:50Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 11082, "text": "I second Eric's proposal.", "id": 20576, "time": "2002-08-01T23:36:06Z", "creator": "jsalvata@atg.com", "creation_time": "2002-08-01T23:36:06Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 11082, "text": "Marking all bugs RESOLVED before JMeter 1.8's release date as VERIFIED.\nYes, it's pretty poor QA procedure, but there's bugs here lingering since JMeter\n1.6, and we need to clean up a little.", "id": 28359, "time": "2002-12-27T16:16:09Z", "creator": "jsalvata@atg.com", "creation_time": "2002-12-27T16:16:09Z", "is_private": false, "attachment_id": null}, {"count": 6, "tags": [], "bug_id": 11082, "text": "Bulk-closing all bugs RESOLVED before JMeter 1.8 release date.", "id": 28581, "time": "2002-12-29T14:21:18Z", "creator": "jsalvata@atg.com", "creation_time": "2002-12-29T14:21:18Z", "is_private": false, "attachment_id": null}]