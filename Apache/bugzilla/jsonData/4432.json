[{"count": 0, "tags": [], "creator": "masala@us.ibm.com", "attachment_id": null, "id": 7168, "time": "2001-10-25T12:53:11Z", "bug_id": 4432, "creation_time": "2001-10-25T12:53:11Z", "is_private": false, "text": "Try to call the function \norg.apache.xerces.dom.DeferredDocumentImpl.getNodeValueString() for a node \ncontaining a large text (>100Kb). The response time is O(n*n), where n is the \ntext's size.\nThe problem is the statement: \nstr.insert(0, fStringPool.toString(valueIndex));\n\nExplanation:\nEvery time a new chunk is inserted in the first position, the entire content is \nshifted to the right. This makes the approach O(n*n).\n\nFixing suggestion:\nStore all chunks into a temporary structure (String[] or Stack) first, and then  \nappend them in the StringBuffer in reversed order. This is O(n), and makes a \nhuge difference for large strings (mine has 2MB).\n\nNote: This problem is more often seen when using SOAP. There are lots of \ncomplains in the SOAP mailing list related to this problem."}, {"count": 1, "tags": [], "text": "A patch solving this was provided and applied. See patch #4514.\nMinor correction to the description given here: the code was O(n*n), where n is \nthe number of chunks of text, not the text size as suggested. Not quite as bad. \nBut it's now fixed anyway.\n\nI mark this as dupicate of 4514 even though it really was the original and 4514 \nwas the duplicate...\n\n\n*** This bug has been marked as a duplicate of 4514 ***", "attachment_id": null, "bug_id": 4432, "id": 8216, "time": "2001-11-23T09:28:07Z", "creator": "lehors@apache.org", "creation_time": "2001-11-23T09:28:07Z", "is_private": false}]