[{"count": 0, "tags": [], "creator": "max.valjanski@gmail.com", "text": "Exception on Excel file parsing (file attached)\n\nException in thread \"main\" org.apache.tika.exception.TikaException: Unexpected RuntimeException from org.apache.tika.parser.microsoft.OfficeParser@1cbfe9d\n\tat org.apache.tika.parser.CompositeParser.parse(CompositeParser.java:121)\n\tat org.apache.tika.parser.AutoDetectParser.parse(AutoDetectParser.java:85)\n\tat org.apache.tika.cli.TikaCLI.process(TikaCLI.java:116)\n\tat org.apache.tika.cli.TikaCLI.main(TikaCLI.java:57)\nCaused by: org.apache.poi.hssf.record.RecordInputStream$LeftoverDataException: Initialisation of record 0x0 left 10 bytes remaining still to be read.\n\tat org.apache.poi.hssf.record.RecordInputStream.hasNextRecord(RecordInputStream.java:124)\n\tat org.apache.poi.hssf.eventusermodel.HSSFRecordStream.getNextRecord(HSSFRecordStream.java:126)\n\tat org.apache.poi.hssf.eventusermodel.HSSFRecordStream.nextRecord(HSSFRecordStream.java:93)\n\tat org.apache.poi.hssf.eventusermodel.HSSFEventFactory.genericProcessEvents(HSSFEventFactory.java:141)\n\tat org.apache.poi.hssf.eventusermodel.HSSFEventFactory.processEvents(HSSFEventFactory.java:98)\n\tat org.apache.tika.parser.microsoft.ExcelExtractor.parse(ExcelExtractor.java:145)\n\tat org.apache.tika.parser.microsoft.OfficeParser.parse(OfficeParser.java:106)\n\tat org.apache.tika.parser.CompositeParser.parse(CompositeParser.java:119)\n\t... 3 more", "id": 128386, "attachment_id": null, "bug_id": 47448, "creation_time": "2009-06-29T07:37:05Z", "time": "2009-06-29T07:37:05Z", "is_private": false}, {"count": 1, "tags": [], "text": "Created attachment 23899\nfile that causes exception", "attachment_id": 23899, "bug_id": 47448, "id": 128388, "time": "2009-06-29T07:37:55Z", "creator": "max.valjanski@gmail.com", "creation_time": "2009-06-29T07:37:55Z", "is_private": false}, {"count": 2, "text": "I am pretty sure that the file you have has non-zero padding bytes which was the cause for bug 46987.  Unfortunately, the fix for that bug was in a different class (RecordFactory) and in your case the problem occurs in HSSFEventFactory/HSSFRecordStream.  The problem is with record iteration boundary checking logic, and the ideal solution would be to refactor the existing code in RecordFactory so that HSSFEventFactory can use it too.\n\nYou can re-save the file in Excel and that should correct the problem.  This may be a work-around if you don't have too many files that are affected.", "bug_id": 47448, "attachment_id": null, "id": 128403, "time": "2009-06-29T12:30:49Z", "creator": "josh@apache.org", "creation_time": "2009-06-29T12:30:49Z", "tags": [], "is_private": false}, {"count": 3, "tags": [], "text": "Thanx, now it works fine (patch included :-)", "is_private": false, "bug_id": 47448, "id": 128426, "time": "2009-06-30T03:28:38Z", "creator": "max.valjanski@gmail.com", "creation_time": "2009-06-30T03:28:38Z", "attachment_id": null}, {"count": 4, "tags": [], "creator": "max.valjanski@gmail.com", "attachment_id": 23909, "is_private": false, "id": 128427, "time": "2009-06-30T03:30:40Z", "bug_id": 47448, "creation_time": "2009-06-30T03:30:40Z", "text": "Created attachment 23909\nSolution"}, {"count": 5, "tags": [], "creator": "max.valjanski@gmail.com", "text": "Please copy \"src/java/org/apache/poi/hssf/eventusermodel/HSSFRecordStream.java\" to \"src/java/org/apache/poi/hssf/record/RecordFactoryInputStream.java\" before appying patch and remove \"src/java/org/apache/poi/hssf/eventusermodel/HSSFRecordStream.java\" after apply", "id": 128429, "time": "2009-06-30T03:43:56Z", "bug_id": 47448, "creation_time": "2009-06-30T03:43:56Z", "is_private": false, "attachment_id": null}, {"count": 6, "tags": [], "creator": "yegor@dinom.ru", "text": "Applied in r791251\n\nThere is no junit, but your refactoring is well proved by existing tests so I think it's OK for this fix to be checked in. \n\nRegards,\nYegor", "id": 128510, "attachment_id": null, "bug_id": 47448, "creation_time": "2009-07-05T07:14:35Z", "time": "2009-07-05T07:14:35Z", "is_private": false}]