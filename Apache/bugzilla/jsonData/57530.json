[{"count": 0, "tags": [], "bug_id": 57530, "text": "As was noted when testing 7.0.59 release candidate, the testNon2xxResponseWithExpectation test in org.apache.coyote.http11.TestAbstractHttp11Processor fails when running with Java 6,\n\n[[[\nTestcase: testNon2xxResponseWithExpectation took 0,195 sec\n\tCaused an ERROR\nnull\njava.lang.NullPointerException\n\tat org.apache.coyote.http11.TestAbstractHttp11Processor.doTestNon2xxResponseAndExpectation(TestAbstractHttp11Processor.java:646)\n\tat org.apache.coyote.http11.TestAbstractHttp11Processor.testNon2xxResponseWithExpectation(TestAbstractHttp11Processor.java:604)\n]]]\n\nReference:\nhttp://mail-archives.apache.org/mod_mbox/tomcat-dev/201502.mbox/%3CCABzHfVngj3_P1sn7fDGVk6Pys4nxzie9LQB%3DN5n6PYX%2BSAh7cQ%40mail.gmail.com%3E\nhttp://mail-archives.apache.org/mod_mbox/tomcat-dev/201502.mbox/%3CCABzHfVnFn2VH+2kth2SZP-5CKPsi4oz6cb9q-wwsLw_2TKOMxQ@mail.gmail.com%3E\n\n\nThe test sets up a web application with a security constraint that\nforbids access to an echo servlet. It sends a request with \"Expect:\n100-continue\"  and expects a 403 response with \"Connection: close\"\nheader.\n\nRunning with a debugger, Java 6u45 does not send the \"Expect:\n100-continue\" header, as the test expects.\n\n\nI have not found a java bug report for this specific issue, but from those that I found I think that \n- handling of \"Expect: 100-continue\" is a late addition (since Java 7 only?) and\n- it is more complicated than necessary for this simple test (HttpURLConnection handles the full request-response cycle, including 100 (Continue) response, timeouts etc).\n\nI think that this case can be reimplemented using a more simple client implementation,\n\norg.apache.catalina.startup.SimpleHttpClient\n\nI also expect that Tomcat rejects the request immediately without sending a 100 (Continue) response. This detail can be tested by reimplementing the test with SimpleHttpClient.\n\n\n\n(For reference:\nhttp://bugs.java.com/view_bug.do?bug_id=6726695\nJDK-6726695 : HttpURLConnection shoul support 'Expect: 100-contimue' headers for PUT\n\nhttp://bugs.java.com/view_bug.do?bug_id=8012625\nJDK-8012625 : Incorrect handling of HTTP/1.1 \" Expect: 100-continue \" in HttpURLConnection\n)", "id": 180727, "time": "2015-02-03T13:31:24Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2015-02-03T13:31:24Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "creator": "rainer.jung@kippdata.de", "is_private": false, "text": "> http://bugs.java.com/view_bug.do?bug_id=8012625\n> JDK-8012625 : Incorrect handling of HTTP/1.1 \" Expect: 100-continue \" in\n> HttpURLConnection\n\nThat one is said to be fixed by today's release of 1.7.0_80:\n\nhttp://www.oracle.com/technetwork/java/javase/2col/7u80-bugfixes-2494167.html\n\nRegards,\n\nRainer", "id": 182390, "time": "2015-04-15T14:54:49Z", "bug_id": 57530, "creation_time": "2015-04-15T14:54:49Z", "attachment_id": null}, {"count": 2, "tags": [], "text": "It looks like the test code is missing a call to HttpURLConnection.setFixedLengthStreamingMode() or HttpURLConnection.setChunkedStreamingMode(), which would have (?) made this work with older versions of the JRE.", "attachment_id": null, "id": 182423, "creator": "chris@christopherschultz.net", "time": "2015-04-16T13:10:30Z", "bug_id": 57530, "creation_time": "2015-04-16T13:10:30Z", "is_private": false}, {"count": 3, "tags": [], "creator": "violetagg@apache.org", "attachment_id": null, "text": "Hi,\n\nWhat do you think if we add the code below.\nCurrently \"Expect\" header is restricted and because of this it is not added as request property.\nIf we set \"sun.net.http.allowRestrictedHeaders\" to \"true\" then it is added and the test passes.\n\nRegards,\nVioleta\n\n\n\nIndex: TestAbstractHttp11Processor.java\n===================================================================\n--- TestAbstractHttp11Processor.java\t(revision 1684193)\n+++ TestAbstractHttp11Processor.java\t(working copy)\n@@ -42,6 +42,7 @@\n import static org.junit.Assert.assertTrue;\n \n import org.junit.Assert;\n+import org.junit.Before;\n import org.junit.Test;\n \n import org.apache.catalina.Context;\n@@ -57,6 +58,13 @@\n \n public class TestAbstractHttp11Processor extends TomcatBaseTest {\n \n+    @Before\n+    @Override\n+    public void setUp() throws Exception {\n+        super.setUp();\n+        System.setProperty(\"sun.net.http.allowRestrictedHeaders\", \"true\");\n+    }\n+\n     @Test\n     public void testResponseWithErrorChunked() throws Exception {\n         Tomcat tomcat = getTomcatInstance();", "id": 183376, "time": "2015-06-09T08:37:31Z", "bug_id": 57530, "creation_time": "2015-06-09T08:37:31Z", "is_private": false}, {"count": 4, "tags": [], "creator": "knst.kolinko@gmail.com", "is_private": false, "text": "(In reply to Violeta Georgieva from comment #3)\n\nInteresting.\n\nThis fix looks like having a too wide scope for a single failing test, but I am OK with it.\n\nSetting the system property affects all the tests in the test class (as they are run in random order in the same JVM), so setting it in a @Before method looks fair. I do not expect any negative consequences from that property.\n\n\n(In reply to Konstantin Kolinko from comment #0)\n> \n> I think that this case can be reimplemented using a more simple client\n> implementation,\n> \n> org.apache.catalina.startup.SimpleHttpClient\n> \n\nTestFormAuthenticator has an example of using a SimpleHttpClient to test behaviour of Expect/Continue handling", "id": 183381, "time": "2015-06-09T09:40:32Z", "bug_id": 57530, "creation_time": "2015-06-09T09:40:32Z", "attachment_id": null}, {"count": 5, "tags": [], "creator": "chris@christopherschultz.net", "is_private": false, "text": "Having played-around with sun.net.http.allowRestrictedHeaders, I believe it's one of those things that gets consulted one time and then never looked-at again. That means that, if the tests are run in an unpredictable order, you'll never know which tests are using that value and which aren't. And you can't turn it off.\n\nFor predictability's sake, maybe we should set that system property for the whole set of unit tests to be run?\n\nI think in the long run, use of SimpleHttpClient is probably better, since it will handle \"Expect\" the way we ... expect.", "id": 183494, "time": "2015-06-12T20:09:07Z", "bug_id": 57530, "creation_time": "2015-06-12T20:09:07Z", "attachment_id": null}, {"count": 6, "tags": [], "text": "I'm going to reimplement the TestAbstractHttp11Processor.testNon2xxResponseWithExpectation with SimpleHttpClient.\n\nRegards,\nVioleta", "is_private": false, "id": 183547, "creator": "violetagg@apache.org", "time": "2015-06-16T07:52:20Z", "bug_id": 57530, "creation_time": "2015-06-16T07:52:20Z", "attachment_id": null}, {"count": 7, "tags": [], "text": "Fix is available in Tomcat 7 trunk", "attachment_id": null, "id": 183622, "creator": "violetagg@apache.org", "time": "2015-06-18T11:15:41Z", "bug_id": 57530, "creation_time": "2015-06-18T11:15:41Z", "is_private": false}]