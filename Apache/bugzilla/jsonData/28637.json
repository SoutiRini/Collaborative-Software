[{"count": 0, "tags": [], "bug_id": 28637, "attachment_id": null, "id": 56508, "time": "2004-04-27T20:05:55Z", "creator": "camposr@uol.com.br", "creation_time": "2004-04-27T20:05:55Z", "is_private": false, "text": "When using an external rewrite program, after some thousand requests, \nmod_rewrite seems to get out of sync with the program.\n\nI noticed that the RewriteLock file is not being created.\n\nThe same mod_rewrite ruleset works perfectly with apache 1.3.29, and in this \ncase the rewritelock file is created accordingly."}, {"count": 1, "attachment_id": null, "creator": "nd@perlig.de", "text": "Hmm. What does it mean exactly? One request serving the stuff of another? Do you\nhave an example?\n\nIs it a vanilla installation?\n\nThe rewritelock may be a semaphore or something else so that's probably not a\nproblem.\nWhich MPM are you using?\n\nThanks!\n", "id": 56510, "time": "2004-04-27T20:21:18Z", "bug_id": 28637, "creation_time": "2004-04-27T20:21:18Z", "tags": [], "is_private": false}, {"count": 2, "tags": [], "bug_id": 28637, "text": "I have heard of this happening before -- mod_cgid had trouble like this at some \npoint in the past.  I think I've even *seen* it happen with mod_rewrite 1.3.x \nat some point in the distant past because I forgot to set up a lock file.  If \nthe lock file were missing, I could easily believe that map program would get \nout of sync, since it just takes an argument line on stdin and writes its \nresponse line to stdout.  If apache gets confused as to which stdout goes with \nwhich stdin (because inputs are coming from multiple places simultaneously), \nbadness will happen.", "id": 56511, "time": "2004-04-27T20:37:04Z", "creator": "jwoolley@apache.org", "creation_time": "2004-04-27T20:37:04Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "creator": "camposr@uol.com.br", "text": "The problem occurs with the worker and the prefork MPM.\n\nApache is configured with 3 virtualhosts, all three use mod_rewrite but only \ntwo of them use (different) rewritemap external programs.\n\nBy 'out of sync' I mean that one request is serving the stuff of another.\n\neg. the external program writes 'foo' to stdout but apache redirects the user \nto 'bar', which was the answer for other request.\n\nApache was compiled without any patches, using the usual configure/make/make \ninstall.", "id": 56514, "time": "2004-04-27T20:56:37Z", "bug_id": 28637, "creation_time": "2004-04-27T20:56:37Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "text": "Well, I see two possible POFs:\n\n1) The program is not locked properly, but if the RewriteLock directive is used,\nit should work (nothing in the errorlog, right?)\n\n2) The external program thinks too early that the current line is read. In\nprevious versions this could be the case if the key contained a newline. May I\nsee, how you read the stuff from stdin?", "attachment_id": null, "bug_id": 28637, "id": 56516, "time": "2004-04-27T21:08:23Z", "creator": "nd@perlig.de", "creation_time": "2004-04-27T21:08:23Z", "is_private": false}, {"count": 5, "tags": [], "creator": "camposr@uol.com.br", "attachment_id": null, "text": "There's no error in the errorlog, the problem begins after a random number of \nrequests (usually many thousands), and stops after a restart in the Apache \nserver.\n\nThe same external program works perfectly with Apache 1.3.29, basically it \nreads a ascii file and creates a linked-list in memory, with a key-value \nstructure, the argument passed on stdin is matched against some patterns and \nreturns a complete URL.\n\nThis is the ruleset that uses the rewritemap:\n\n   RewriteCond  ${redirmap:%{REQUEST_URI}}      ^(https?.*)\n   RewriteRule  .       %1      [R,L,NE]\n\n\n\nI read stdin this way:\n\n#define BUFSIZE 512\n...\nchar line[BUFSIZE];\n...\nsetvbuf (stdout, NULL, _IOLBF, 0);\n...\nwhile (fgets (line, sizeof (line), stdin))\n...\n/* write to stdout */\nprintf (\"%s\\n\", (char *) cp);\n...\n\nI hope this helps.", "id": 56517, "time": "2004-04-27T21:23:02Z", "bug_id": 28637, "creation_time": "2004-04-27T21:23:02Z", "is_private": false}, {"count": 6, "tags": [], "creator": "nd@perlig.de", "attachment_id": null, "id": 56518, "time": "2004-04-27T21:31:09Z", "bug_id": 28637, "creation_time": "2004-04-27T21:31:09Z", "is_private": false, "text": "Ha! The bufsize can be the problem. The input string may be (much) longer and is\nsplit that way -> and gets out of sync. You should use 8192 bytes for the buf,\nwhich is the distributed maximum length of the request line (so mostly the\nREQUEST_URI).\n\nYou might try some test requests with more than 512 bytes before to see if the\nsync error really happens then."}, {"count": 7, "tags": [], "text": "I've just tested making a request with more than 512 bytes and the bug was \nreproduced, recompiled my program with a BUFSIZE of 8192 and now it's working \nfine.\n\nThank you very much for your cooperation and sorry for any inconvenience, \nsince it was not a bug in Apache.\n\nI changed the resolution status to INVALID.", "attachment_id": null, "id": 56520, "creator": "camposr@uol.com.br", "time": "2004-04-27T22:18:34Z", "bug_id": 28637, "creation_time": "2004-04-27T22:18:34Z", "is_private": false}, {"count": 8, "tags": [], "bug_id": 28637, "text": "Thanks for the feedback!", "id": 56531, "time": "2004-04-28T07:13:26Z", "creator": "nd@perlig.de", "creation_time": "2004-04-28T07:13:26Z", "is_private": false, "attachment_id": null}]