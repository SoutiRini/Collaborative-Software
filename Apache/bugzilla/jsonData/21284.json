[{"attachment_id": null, "tags": [], "bug_id": 21284, "is_private": false, "count": 0, "id": 39874, "time": "2003-07-02T16:48:00Z", "creator": "puckman@taglab.com", "creation_time": "2003-07-02T16:48:00Z", "text": "Both Mac OS X and Dreamweaver 6 are treating the lock tokens sent out by the\nWebDAV servlet in a way the servlet doesn't expect.\n\nWhen uploading a file:\n\nClient says (C), Server responds (S).\n\nC: LOCK /afile.txt\nS: HTTP/1.1 200\nand in the dav XML response we can find something along the lines of:\n<locktoken><href>opaquelocktoken:a6cc8b92be7dd19949adb401164c4312</href></locktoken>\n\nBoth Mac OS X and Dreamweaver are being defensive and do a:\nC: PROPFIND /afile.txt\nS: HTTP/1.1 207\nand the server now responds:\n<locktoken><href>opaquelocktoken:dummytoken</href></locktoken>\n\nBoth Mac OS X now choses the dumytoken in preference to the previous one and\nconsequently fails to manipulate the file further.\n\nThere is a quick fix, which is to always present the real token and never the\ndummy one. There is even boolean arguments in place to do so:\n\n$ diff -u WebdavServlet.java-2003-07-01 WebdavServlet.java\n--- WebdavServlet.java-2003-07-01       2003-07-01 11:37:34.000000000 +0100\n+++ WebdavServlet.java  2003-07-02 15:10:30.000000000 +0100\n@@ -2667,7 +2715,7 @@\n          * append an XML fragment to the given XML writer.\n          */\n         public void toXML(XMLWriter generatedXML) {\n-            toXML(generatedXML, false);\n+            toXML(generatedXML, true);\n         }\n   \n----------------\n\nI don't know what impact this has on any security considerations etc. I assume\nthe dummytoken is there so that only the locking client has the real one."}, {"count": 1, "tags": [], "creator": "julian.reschke@gmx.de", "text": "First of all, even if there is a legitimate reason not to reveal the lock token \n(which?) upon PROPFIND, there are some more considerations.\n\n1) \"opaquelocktoken:dummytoken\" does not conform the opaquelocktoken URI syntax \ndefined by RFC2518. So if the server doesn't want to reveal the token but \nchooses to include one in DAV:lockdiscovery, it should generate a legal one (it \njust needs to be a URI that will never work for UNLOCK).\n\n2) There's also the option not to return the locktoken in DAV:lockdiscovery. \nSee: <http://lists.w3.org/Archives/Public/w3c-dist-auth/2003JulSep/0185.html>\n\n", "id": 46041, "time": "2003-10-22T11:36:17Z", "bug_id": 21284, "creation_time": "2003-10-22T11:36:17Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 21284, "attachment_id": null, "text": "(applies to 4.1.27 as well)", "id": 46042, "time": "2003-10-22T11:37:06Z", "creator": "julian.reschke@gmx.de", "creation_time": "2003-10-22T11:37:06Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 21284, "attachment_id": null, "is_private": false, "id": 46046, "time": "2003-10-22T12:00:09Z", "creator": "remm@apache.org", "creation_time": "2003-10-22T12:00:09Z", "text": "Quite frankly, this \"bug\" is completely ridiculous. Please don't open multiple\nreports for the same thing.\n\n*** This bug has been marked as a duplicate of 10539 ***"}]