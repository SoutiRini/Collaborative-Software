[{"count": 0, "tags": [], "bug_id": 60697, "attachment_id": 34728, "text": "Created attachment 34728\nVery simple webapp with one custom servlet to reproduce issue\n\nOWASP recommends testing HTTP methods of remote servers using nmap \"http-methods\" script:\nhttps://www.owasp.org/index.php/Test_HTTP_Methods_(OTG-CONFIG-006)\nOne of the recommandations is to ensure TRACE method is disabled (let's just omit the recommandation on PUT/DELETE in this discussion..)\n\nFor this matter, the 'Security Considerations' documentation of Tomcat states the following :\n \"The allowTrace attribute may be used to enable TRACE requests which can be useful for debugging. Due to the way some browsers handle the response from a TRACE request (which exposes the browser to an XSS attack), support for TRACE requests is disabled by default.\"\nhttp://tomcat.apache.org/tomcat-8.5-doc/security-howto.html#Connectors\n\nAnd indeed, with the default configuration, the TRACE method is always refused with the unsupported 405 HTTP status code.\n\nHowever there is one case where the configuration does not fully apply : response to OPTIONS request for custom servlet (i.e. any non tomcat servlet extending HttpServlet).\nIn such case the TRACE methods is incorrectly listed in the Allow header sent back, even though it is correctly handled as not supported when executed.\n\nTo reproduce:\n1. deploy the attached war (containg all sources) in a tomcat instance listening on port 80 (listing on port 80 is required for proper validation through nmap https-methods script).\n2. run the following unix commands :\n\n** Test of custom Servlet :\n  $> curl -v -X OPTIONS http://yourIP/test/\n  BUG : 200 + Allow GET, HEAD, TRACE, OPTIONS\n  Expected : 200 + Allow GET, HEAD, OPTIONS\n\n  $> curl -v -X TRACE http://yourIP/test/\n  OK : 405 + Allow: GET, HEAD, OPTIONS\n\n  $> nmap -p 80 --script http-methods --script-args http-methods.url-path='/test/' yourIP\n  BUG : nmap reports \"Potentially risky methods: TRACE\"\n(even though it is correctly locked down)\n\nThis leads several security products which relies on the same tests to incorrectly report Tomcat as having a potential security risk, even though there is none.\n\n\nTechnical explanation for this behavior on custom servlet :\n- executing the TRACE method is correctly refused by CoyoteAdapter,\nhttps://svn.apache.org/repos/asf/tomcat/tc8.5.x/trunk/java/org/apache/catalina/connector/CoyoteAdapter.java\n- but executing the OPTIONS methods is handled by the parent class which DOES NOT apply the connector \"allowTrace\" configuration and always sends the Allow header listing TRACE method\nhttps://svn.apache.org/repos/asf/tomcat/tc8.5.x/trunk/java/javax/servlet/http/HttpServlet.java\n\n\n\nTo be fully complete on this matter, here is the behavior for JSPs and default servlet :\n\n** Test of JSP :\n  $> curl -v -X OPTIONS http://yourIP/test.jsp\n  OK : 405 + HTML message indicating \"JSPs only permit GET POST or HEAD\"\n  (unrelated to this bug report, an \"Allow: GET, POST, HEAD\" header would be expected here, there is none.\n  this could be improved while sending \"jsp.error.servlet.invalid.method\" message, see\n\nhttps://svn.apache.org/repos/asf/tomcat/tc8.5.x/trunk/java/org/apache/jasper/compiler/Generator.java )\n\n  $> curl -v -X TRACE http://yourIP/test.jsp\n  OK : 405 + Allow: OPTIONS\n  (unrelated to this bug report, it seems the \"Allow\" header is incorrrect, \"Allow: GET, POST, HEAD\" header would be expected here)\n\n  nmap -p 80 --script http-methods --script-args http-methods.url-path='/test.jsp' yourIP\n  OK\n\n** Test of default servlet :\n  $> curl -v -X OPTIONS http://yourIP/index.html\n  OK : 200 + Allow: GET, HEAD, POST, PUT, DELETE, OPTIONS\n\n  $> curl -v -X TRACE http://yourIP/index.html\n  OK : 405 + Allow: HEAD, DELETE, POST, GET, OPTIONS, PUT\n\n  $> nmap -p 80 --script http-methods --script-args http-methods.url-path='/index.html' yourIP\n  OK (...) : nmap reports \"Potentially risky methods: PUT DELETE\"\n  (this is unrelated to this bug report, but there could be some improvement there too)", "id": 196797, "time": "2017-02-07T08:31:59Z", "creator": "olivier.jaquemet@jalios.com", "creation_time": "2017-02-07T08:31:59Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 60697, "attachment_id": null, "text": "This has been looked at before which is why the DefaultServlet handles this correctly. Requests for \"OPTIONS *\" are also handled correctly.\n\nIt is difficult to do this for custom servlets since the code that handles the OPTIONS request is in javax.servlet.http.HttpServlet. This is a specification class so we can't change the API and neither can it depend on any Tomcat specific classes.\n\nThat leaves us with two options. Use reflection in HttpServlet or filter  TRACE from the Allow header when it is disabled.\n\nI don't really like either option. Using reflection in HttpServlet is a fairly ugly hack and filtering the headers is going to add overhead to every request. Of the two, reflection is the least bad option.\n\nA third option is never including TRACE in Allow headers generated by HttpServlet. The problem with that is that it may well break applications that depend on it and it would result in a non-specification compliant response when TRACE was allowed.\n\nI have a test case for this that I'll commit shortly. That test case identified a scenario when the WebDAV servlet included TRACE in the response when it was disabled. That is an easy fix.\n\nI'll take a look at what the reflection code looks like for HttpServlet. If it isn't too ugly I'll go that route.\n\nA completely different option is to always include TRACE in the OPTIONS response but respond with a 403 rather than a 405 which is, arguably, more specification compliant behaviour - although the security scanners might not like it.", "id": 196986, "time": "2017-02-14T10:35:40Z", "creator": "markt@apache.org", "creation_time": "2017-02-14T10:35:40Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 60697, "text": "The hack wasn't too bad although I still don't really like having to do it.\n\nI've fixed WebDAV in:\n- trunk for 9.0.0.M18 onwards\n- 8.5.x for 8.5.12 onwards\n- 8.0.x for 8.0.42 onwards\n- 7.0.x for 7.0.76 onwards\n\nI've fixed custom servlets in:\n- trunk for 9.0.0.M18 onwards\n- 8.5.x for 8.5.12 onwards\n\nI don't intend back-porting this to 8.0.x and 7.0.x.", "id": 196990, "time": "2017-02-14T11:09:10Z", "creator": "markt@apache.org", "creation_time": "2017-02-14T11:09:10Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 60697, "attachment_id": null, "text": "Awesome, thank you Mark.", "id": 197063, "time": "2017-02-16T11:16:57Z", "creator": "olivier.jaquemet@jalios.com", "creation_time": "2017-02-16T11:16:57Z", "is_private": false}]