[{"count": 0, "tags": [], "text": "There is a 32,767 max character limit for strings in Excel. If one writes an XML file that exceeds this limit, the file is subject to inspection and correction by Excel on the first load (which is really annoying). \n\nMicrosoft Documentation On Limit\nhttp://office.microsoft.com/en-us/excel-help/excel-specifications-and-limits-HP010342495.aspx?CTT=5&origin=HP005199291\n\nWorkaround (Caller - Example)\ncell.setCellValue(toWrite.length() > 32767 ? toWrite.substring(0, 32767 - 3) + \"...\" : toWrite);\n\nProposed Solution\nSimply truncate the string the same way Excel would truncate the string upon first inspection and load and provide sufficient documentation alerting users of the what a cell value can hold.\n\nor...\n\nEither throw a RuntimeException alerting the user of the impending error\n\nI'll open for discussion if you would like a pull request, please, just let me know and I'd be happy to put one together, with a test for the team.\n\nThank You!", "is_private": false, "id": 175557, "creator": "mhager@w2odigital.com", "time": "2014-05-30T04:09:56Z", "bug_id": 56579, "creation_time": "2014-05-30T04:09:56Z", "attachment_id": null}, {"count": 1, "attachment_id": null, "creator": "apache@gagravarr.org", "text": "In HSSFCell, we have the following logic:\n\nthrow new IllegalArgumentException(\"The maximum length of cell contents (text) is 32,767 characters\");\n\nI'd suggest we just apply the same in XSSF too, if you could do a patch and a unit test that'd be great!", "id": 175562, "time": "2014-05-30T10:24:35Z", "bug_id": 56579, "creation_time": "2014-05-30T10:24:35Z", "tags": [], "is_private": false}, {"count": 2, "tags": [], "bug_id": 56579, "attachment_id": null, "text": "Nick,\n\nThank you very much for the reply. I will create a patch this weekend after I get done with my work. :o)\n\nGreat work team, doing a lot of work over at Apache Streams (Incubating) and this will make a great addition.", "id": 175565, "time": "2014-05-30T14:47:28Z", "creator": "mhager@w2odigital.com", "creation_time": "2014-05-30T14:47:28Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 56579, "attachment_id": null, "is_private": false, "id": 175566, "time": "2014-05-30T16:10:18Z", "creator": "apache@gagravarr.org", "creation_time": "2014-05-30T16:10:18Z", "text": "If you spot any issues with the docs, or areas where extra examples would be helpful, whilst doing your Streams work we'd be delighted to have updates :)"}, {"count": 4, "tags": [], "bug_id": 56579, "attachment_id": null, "text": "Hi,\n\nI've run into the same problem while working with apache POI 3.9-20121203. One thing that I'd like to note here is that apache poi doesn't have any problems reading back the content of the cell and the conent is exactly what is stored before.\n\nThe file though is unusable by Microsoft Excel and what I've observed is that once we decide to let Excel recover the contents then the cell contents are truncated.", "id": 177400, "time": "2014-08-27T12:57:21Z", "creator": "mmerruko@gmail.com", "creation_time": "2014-08-27T12:57:21Z", "is_private": false}, {"count": 5, "tags": [], "text": "We now enforce this limit via changes in r1671096, as the resulting document is not valid in Excel I don't think there is much use in creating those, better to alert the developer early that the document will not be good.", "is_private": false, "id": 182233, "creator": "dominik.stadler@gmx.at", "time": "2015-04-03T15:57:51Z", "bug_id": 56579, "creation_time": "2015-04-03T15:57:51Z", "attachment_id": null}]