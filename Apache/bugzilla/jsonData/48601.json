[{"count": 0, "tags": [], "bug_id": 48601, "text": "Created attachment 24885\ntestcase (containg 3 catalogs and CatalogManager.properties)\n\n(sent to the commons-dev list too)\n\nFor the long report read Debian bug#552018:\nhttp://bugs.debian.org/552018\n\nSay a catalog contains two entries delegateSystem and delegateURI\nrewriting the same URL. Then the resolver fails to work correctly. It\nstrongly depends on the order in the catalog if the URI gets resolved.\nConsider the attached testcase:\n\njava -cp /usr/share/java/xml-commons-resolver-1.1.jar:. \\\n  org.apache.xml.resolver.apps.resolver -u http://invalid.invalid uri\n> Parse catalog: catalog1.xml\n> Loading catalog: catalog1.xml\n> Default BASE: file:////usr/local/src/bugs/552018/catalog1.xml\n> delegateSystem: http://invalid.invalid\n>       catalog2.xml\n> DELEGATE_SYSTEM: http://invalid.invalid\n>       file:////usr/local/src/bugs/552018/catalog2.xml\n> delegateURI: http://invalid.invalid\n>       catalog2.xml\n> DELEGATE_URI: http://invalid.invalid\n>       file:////usr/local/src/bugs/552018/catalog2.xml\n> Resolve URI (uri):\n>         uri: http://invalid.invalid\n> resolveURI(http://invalid.invalid)\n> Result: null\n\nWhy doesn't it select the delegateURI entry? Now this:\n\njava -cp /usr/share/java/xml-commons-resolver-1.1.jar:. \\\n  org.apache.xml.resolver.apps.resolver -s http://invalid.invalid system\n> Parse catalog: catalog1.xml\n> Loading catalog: catalog1.xml\n> Default BASE: file:////usr/local/src/bugs/552018/catalog1.xml\n> delegateSystem: http://invalid.invalid\n>       catalog2.xml\n> DELEGATE_SYSTEM: http://invalid.invalid\n>       file:////usr/local/src/bugs/552018/catalog2.xml\n> delegateURI: http://invalid.invalid\n>       catalog2.xml\n> DELEGATE_URI: http://invalid.invalid\n>       file:////usr/local/src/bugs/552018/catalog2.xml\n> Resolve SYSTEM (systemid):\n>   system id: http://invalid.invalid\n> resolveSystem(http://invalid.invalid)\n> Switching to delegated catalog(s):\n>       file:////usr/local/src/bugs/552018/catalog2.xml\n> Parse catalog: file:////usr/local/src/bugs/552018/catalog2.xml\n> Loading catalog: file:////usr/local/src/bugs/552018/catalog2.xml\n> Default BASE: file:////usr/local/src/bugs/552018/catalog2.xml\n> delegateURI: http://invalid.invalid\n>       catalog3.xml\n> DELEGATE_URI: http://invalid.invalid\n>       file:////usr/local/src/bugs/552018/catalog3.xml\n> delegateSystem: http://invalid.invalid\n>       catalog3.xml\n> DELEGATE_SYSTEM: http://invalid.invalid\n>       file:////usr/local/src/bugs/552018/catalog3.xml\n> resolveSystem(http://invalid.invalid)\n> Result: null\n\nIt chooses catalog2.xml. But there it fails, because delegateURI is\nlisted before delegateSystem.\n\nYou see the problem? Ask for a system ID and it will fail if a\ndelegateURI entry with the same URI is parsed before the relevant\ndelegateSystem entry and ditto for URI and delegateSystem before\ndelegateURI.", "id": 133846, "attachment_id": 24885, "creator": "daniel.leidert.spam@gmx.net", "creation_time": "2010-01-22T16:06:27Z", "time": "2010-01-22T16:06:27Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 48601, "attachment_id": null, "id": 133847, "time": "2010-01-23T00:40:15Z", "creator": "mail.twerner@googlemail.com", "creation_time": "2010-01-23T00:40:15Z", "is_private": false, "text": "The bug applied to the current version downloaded from the project website, too. The original bug submitter in Debian considers the bug as grave and that is why we want to get some feedback from the upstream authors."}, {"count": 2, "tags": [], "bug_id": 48601, "text": "Created attachment 24897\ncatalog.diff\n\nThe attached patch fixes this problem.", "id": 133976, "attachment_id": 24897, "creator": "mail.twerner@googlemail.com", "creation_time": "2010-01-27T11:35:54Z", "time": "2010-01-27T11:35:54Z", "is_private": false}]