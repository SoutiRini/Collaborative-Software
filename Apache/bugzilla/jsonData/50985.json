[{"count": 0, "tags": [], "text": "The attached test case creates the following NullPointerException:\n \njava.lang.NullPointerException\n        at org.apache.fop.layoutmgr.AbstractBreaker.getNextBlockListChangedIPD(AbstractBreaker.java:815)\n        at org.apache.fop.layoutmgr.AbstractBreaker.doLayout(AbstractBreaker.java:428)\n        at org.apache.fop.layoutmgr.PageBreaker.doLayout(PageBreaker.java:90)\n        at org.apache.fop.layoutmgr.PageSequenceLayoutManager.activateLayout(PageSequenceLayoutManager.java:107)\n        at org.apache.fop.area.AreaTreeHandler.endPageSequence(AreaTreeHandler.java:238)\n        at org.apache.fop.fo.pagination.PageSequence.endOfNode(PageSequence.java:120)\n        at org.apache.fop.fo.FOTreeBuilder$MainFOHandler.endElement(FOTreeBuilder.java:349)\n        at org.apache.fop.fo.FOTreeBuilder.endElement(FOTreeBuilder.java:177)\n        at org.apache.xalan.transformer.TransformerIdentityImpl.endElement(TransformerIdentityImpl.java:1101)\n        at org.apache.xerces.parsers.AbstractSAXParser.endElement(Unknown Source)\n        at org.apache.xerces.impl.XMLNSDocumentScannerImpl.scanEndElement(Unknown Source)\n        at org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher.dispatch(Unknown Source)\n        at org.apache.xerces.impl.XMLDocumentFragmentScannerImpl.scanDocument(Unknown Source)\n        at org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)\n        at org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)\n        at org.apache.xerces.parsers.XMLParser.parse(Unknown Source)\n        at org.apache.xerces.parsers.AbstractSAXParser.parse(Unknown Source)\n        at org.apache.xalan.transformer.TransformerIdentityImpl.transform(TransformerIdentityImpl.java:484)\n        at embedding.ExampleFO2PDF.convertFO2PDF(ExampleFO2PDF.java:91)\n        at embedding.ExampleFO2PDF.main(ExampleFO2PDF.java:143)\n \nThis error occurs on FOP 1.0 and the latest version from the TRUNK.\n \nThe error gets resolved if I remove the text \"Page 2\", convert the inline to a block or simply remove the left margin from the simple page master.\n\nAfter looking into the code it appears that block elements that are inside inline elements that cause a page break where the next page has a different IPD is not supported. \n\nThe getNextBlockListChangedIPD() function seems to be where it only looks at for block elements and as a result keeps looking for something it will never find (since the block is in an inline element).\n\nThanks", "attachment_id": null, "bug_id": 50985, "id": 145346, "time": "2011-03-28T07:10:09Z", "creator": "coolkidd3@hotmail.com", "creation_time": "2011-03-28T07:10:09Z", "is_private": false}, {"count": 1, "tags": [], "creator": "coolkidd3@hotmail.com", "attachment_id": 26804, "id": 145347, "time": "2011-03-28T07:13:09Z", "bug_id": 50985, "creation_time": "2011-03-28T07:13:09Z", "is_private": false, "text": "Created attachment 26804\nThis test checks two pages are created without a NullPointerException"}, {"count": 2, "tags": [], "creator": "adelmelle@apache.org", "attachment_id": null, "id": 145393, "time": "2011-03-29T20:37:52Z", "bug_id": 50985, "creation_time": "2011-03-29T20:37:52Z", "is_private": false, "text": "\nRight... and on my end, it works without issues. I have a strong suspicion that this is a duplicate of Bug #50574, for which I have the fix, but still need to commit.\n\n*** This bug has been marked as a duplicate of bug 50574 ***"}, {"count": 3, "tags": [], "creator": "coolkidd3@hotmail.com", "attachment_id": null, "id": 145410, "time": "2011-03-30T13:33:46Z", "bug_id": 50985, "creation_time": "2011-03-30T13:33:46Z", "is_private": false, "text": "Unfortunately the patch for Bug #50574 doesn\u2019t resolve the issue for me. Debugging the code shows that the lastRestartPosition variable is set to positionAtBreak at line 767 and never used again. This will be because there is only one page break in my test case.\n\nThe main issue seems to be that the positionAtBreak is set to the Second Block element which has been initiated as a LeafNode. This results in the getPosition function returning null and the subsequent getLM obviously fails thereafter on line 824.\n\nMy knowldge of FOP's layout manager is limited so I have no idea why the Second Block has been set to a leaf node when it clearly has children. \n\nChanging the Third Block from a self closing element to one that encapsulates the \"Page 2\" text resolves the issue e.g:. \n<fo:flow flow-name=\"xsl-region-body\" id=\"Flow\">\n    <fo:block id=\"First_Block\">Page 1</fo:block>\n    <fo:block id=\"Second_Block\">\n        <fo:inline id=\"First_Inline\">\n            <fo:block id=\"Third_Block\">Page 2</fo:block>\n        </fo:inline>\n    </fo:block>\n</fo:flow>\n\nThis will be due to the positionAtBreak variable being set to the Flow element which does have children. \n\nAnother example would be changing the first Inline element to a Block element:\n<fo:page-sequence\n    master-reference=\"chapter-master\" master-name=\"chapter-master\">\n    <fo:flow flow-name=\"xsl-region-body\" id=\"Flow\">\n        <fo:block id=\"First_Block\">Page 1</fo:block>\n        <fo:block id=\"Second_Block\">\n            <fo:block id=\"First_Inline\">\n                <fo:block id=\"Third_Block\"/>Page 2\n            </fo:block>\n        </fo:block>\n    </fo:flow>\n</fo:page-sequence>\n\nThis sets the positionAtBreak variable to the newly changed block element which has no problem getting its child Block.\n\nI am not sure if there is a problem with the logic behind the positionAtBreak variable e.g. should it be set to Flow instead of the Second Block? Or is it the initialisation of the Second Block without any children?\n\nAny ideas?\nThanks"}, {"count": 4, "tags": [], "creator": "coolkidd3@hotmail.com", "text": "Created attachment 26818\nThis test checks two pages are created without a NullPointerException\n\nJust updated the test case to include ID's on the Blocks and Inline elements so they are easier to refer to in both code and discussion.", "id": 145412, "attachment_id": 26818, "bug_id": 50985, "creation_time": "2011-03-30T13:37:49Z", "time": "2011-03-30T13:37:49Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 50985, "attachment_id": null, "text": "\nAahh... OK, I think I see. Sorry, another local change on my end that is responsible. See also Bug #44328; the patch currently there may not immediately solve the problem, but I am going to post a new patch over there pretty soon.\n\nIf I am correct, by correcting widows/orphans control (default = 2 lines), the zero-height line generated by the empty block should always move to the next page with the following/last line. I already had a feeling that this was going to resolve some ambiguous situations. This might be proof...\n\nIn the meantime, until you get a chance to verify on your end, I'll keep this open.", "id": 145414, "time": "2011-03-30T13:58:00Z", "creator": "adelmelle@apache.org", "creation_time": "2011-03-30T13:58:00Z", "is_private": false}, {"count": 6, "tags": [], "bug_id": 50985, "attachment_id": null, "is_private": false, "id": 145419, "time": "2011-03-30T15:24:37Z", "creator": "coolkidd3@hotmail.com", "creation_time": "2011-03-30T15:24:37Z", "text": "Great, after applying the patch for Bug #44328; the PDF was created perfectly, will test it again after you submit your updated pathtch for Bug #44328; but for now my test case is working.\n\nThanks"}, {"count": 7, "tags": [], "creator": "adelmelle@apache.org", "attachment_id": null, "id": 145438, "time": "2011-03-31T15:00:09Z", "bug_id": 50985, "creation_time": "2011-03-31T15:00:09Z", "is_private": false, "text": "(In reply to comment #6)\n> Great, after applying the patch for Bug #44328; the PDF was created perfectly,\n\nGood news. You can also try the patch I just attached there.\n\nI will keep this bug open nevertheless. I somehow have a feeling that it may just be a matter of finding the scenario that triggers this behavior again. All we have established so far, is that it works as long as there is no break-possibility between the empty block and the following text. \n\nIf you feel like playing with the test case... :-) It could be as easy as just adding 2 lines before and after the empty block. Widows/orphans will only apply to those first and last lines, giving the algorithm a chance to break."}, {"count": 8, "tags": [], "bug_id": 50985, "is_private": false, "id": 145525, "attachment_id": null, "creator": "coolkidd3@hotmail.com", "creation_time": "2011-04-03T12:11:49Z", "time": "2011-04-03T12:11:49Z", "text": "(In reply to comment #7)\n> If you feel like playing with the test case... :-) It could be as easy as just\n> adding 2 lines before and after the empty block. Widows/orphans will only apply\n> to those first and last lines, giving the algorithm a chance to break.\n\nYes, it broke as soon I added an extra line before or after Page 2, and both cases gave the following error:\n\njava.lang.UnsupportedOperationException: Don't know how to restart at positionnull\n        at org.apache.fop.layoutmgr.AbstractBreaker.getNextBlockListChangedIPD(AbstractBreaker.java:754)\n        at org.apache.fop.layoutmgr.AbstractBreaker.doLayout(AbstractBreaker.java:428)\n        at org.apache.fop.layoutmgr.PageBreaker.doLayout(PageBreaker.java:90)\n        at org.apache.fop.layoutmgr.PageSequenceLayoutManager.activateLayout(PageSequenceLayoutManager.java:107)\n        at org.apache.fop.area.AreaTreeHandler.endPageSequence(AreaTreeHandler.java:244)\n        at org.apache.fop.fo.pagination.PageSequence.endOfNode(PageSequence.java:120)\n        at org.apache.fop.fo.FOTreeBuilder$MainFOHandler.endElement(FOTreeBuilder.java:349)\n        at org.apache.fop.fo.FOTreeBuilder.endElement(FOTreeBuilder.java:177)\n\nI will upload the updated test case which brings about this error"}, {"count": 9, "tags": [], "bug_id": 50985, "attachment_id": 26847, "text": "Created attachment 26847\nTest case showing issues with IPD", "id": 145526, "time": "2011-04-03T12:16:11Z", "creator": "coolkidd3@hotmail.com", "creation_time": "2011-04-03T12:16:11Z", "is_private": false}, {"count": 10, "tags": [], "creator": "coolkidd3@hotmail.com", "attachment_id": null, "id": 145527, "time": "2011-04-03T12:20:52Z", "bug_id": 50985, "creation_time": "2011-04-03T12:20:52Z", "is_private": false, "text": "Forgot to mention that this happens with the latest patch from Bug #44328;  (including attachements; id=26843, id=26845 and id=26846)"}, {"count": 11, "tags": [], "bug_id": 50985, "attachment_id": null, "is_private": false, "id": 145528, "time": "2011-04-03T14:20:03Z", "creator": "adelmelle@apache.org", "creation_time": "2011-04-03T14:20:03Z", "text": "(In reply to comment #9)\n> Created an attachment (id=26847) [details]\n> Test case showing issues with IPD\n\nDid you also have the patch for 50574 applied? If I include that, it seems to trigger an infinite loop... :-/\n\nWhat we have here, is a tricky corner case. A combination of changing IPD and at the same time, overflow in block-progression-direction. Something very similar --but obviously not identical- to bug 50574. What it shows, is that my proposed fix for 50574 is either not the right way to address this issue, or at least, is incomplete.\n\nIn an overflow situation at the very first break --in this case: after an IPD change-, the BreakingAlgorithm generates an auxiliary penalty at the start of the element list to allow shifting the content to the next column/page if possible. A new IPD change after page 2 results in an attempted restart from that auxiliary break-possibility.\n\nWith the attempted fix for 50574, this would trigger an infinite series of restarts, since we keep bumping into the overflow on every new page."}, {"count": 12, "tags": [], "creator": "gadams@apache.org", "text": "what is the status of this bug? can it be moved to resolved?", "id": 157036, "time": "2012-04-01T21:16:42Z", "bug_id": 50985, "creation_time": "2012-04-01T21:16:42Z", "is_private": false, "attachment_id": null}, {"text": "resetting P2 open bugs to P3 pending further review", "tags": [], "bug_id": 50985, "attachment_id": null, "count": 13, "id": 157591, "time": "2012-04-07T01:45:01Z", "creator": "gadams@apache.org", "creation_time": "2012-04-07T01:45:01Z", "is_private": false}, {"text": "(In reply to comment #12)\n> what is the status of this bug? can it be moved to resolved?\n\nandreas?", "tags": [], "bug_id": 50985, "attachment_id": null, "count": 14, "id": 158341, "time": "2012-04-24T05:35:55Z", "creator": "gadams@apache.org", "creation_time": "2012-04-24T05:35:55Z", "is_private": false}]