[{"count": 0, "attachment_id": 22536, "bug_id": 45757, "is_private": false, "id": 120428, "time": "2008-09-07T18:08:05Z", "creator": "javabrett@gmail.com", "creation_time": "2008-09-07T18:08:05Z", "tags": [], "text": "Created attachment 22536\nCandidate patch\n\nFor /jul-to-log4j-bridge/src/test/java/org/apache/log4j/jul/JULAppenderTest.java , there is a commented out line of code:\n\n//julLogger.setUseParentHandlers(false);\n\nWithout the call to julLogger.setUseParentHandlers(false), tests run fine in my IDE, but fail with a StackOverflowError when run from mvn, due to recursive calls to parent handlers.  Stack pattern looks like this:\n\n...\nat org.apache.log4j.jul.JULAppender.append(JULAppender.java:199)\n\tat org.apache.log4j.AppenderSkeleton.doAppend(AppenderSkeleton.java:251)\n\tat org.apache.log4j.helpers.AppenderAttachableImpl.appendLoopOnAppenders(AppenderAttachableImpl.java:66)\n\tat org.apache.log4j.Category.callAppenders(Category.java:206)\n\tat org.apache.logging.julbridge.JULBridgeHandler.publish(JULBridgeHandler.java:53)\n\tat java.util.logging.Logger.log(Logger.java:472)\n\tat java.util.logging.Logger.doLog(Logger.java:494)\n\tat java.util.logging.Logger.log(Logger.java:517)\n\tat org.apache.log4j.jul.JULAppender.append(JULAppender.java:199)\n\tat org.apache.log4j.AppenderSkeleton.doAppend(AppenderSkeleton.java:251)\n\tat org.apache.log4j.helpers.AppenderAttachableImpl.appendLoopOnAppenders(AppenderAttachableImpl.java:66)\n\tat org.apache.log4j.Category.callAppenders(Category.java:206)\n\tat org.apache.logging.julbridge.JULBridgeHandler.publish(JULBridgeHandler.java:53)\n\tat java.util.logging.Logger.log(Logger.java:472)\n\tat java.util.logging.Logger.doLog(Logger.java:494)\n\tat java.util.logging.Logger.log(Logger.java:517)\n\tat org.apache.log4j.jul.JULAppender.append(JULAppender.java:199)\n\tat org.apache.log4j.AppenderSkeleton.doAppend(AppenderSkeleton.java:251)\n\tat org.apache.log4j.helpers.AppenderAttachableImpl.appendLoopOnAppenders(AppenderAttachableImpl.java:66)\n\tat org.apache.log4j.Category.callAppenders(Category.java:206)\n\tat org.apache.logging.julbridge.JULBridgeHandler.publish(JULBridgeHandler.java:53)\n\tat java.util.logging.Logger.log(Logger.java:472)\n\tat java.util.logging.Logger.doLog(Logger.java:494)\n\tat java.util.logging.Logger.log(Logger.java:517)\n\tat org.apache.log4j.jul.JULAppender.append(JULAppender.java:199)\n\tat org.apache.log4j.AppenderSkeleton.doAppend(AppenderSkeleton.java:251)\n\tat org.apache.log4j.helpers.AppenderAttachableImpl.appendLoopOnAppenders(AppenderAttachableImpl.java:66)\n\tat org.apache.log4j.Category.callAppenders(Category.java:206)\n\tat org.apache.logging.julbridge.JULBridgeHandler.publish(JULBridgeHandler.java:53)\n\tat java.util.logging.Logger.log(Logger.java:472)\n\tat java.util.logging.Logger.doLog(Logger.java:494)\n\tat java.util.logging.Logger.log(Logger.java:517)\n\tat org.apache.log4j.jul.JULAppender.append(JULAppender.java:199)\n\tat org.apache.log4j.AppenderSkeleton.doAppend(AppenderSkeleton.java:251)\n\tat org.apache.log4j.helpers.AppenderAttachableImpl.appendLoopOnAppenders(AppenderAttachableImpl.java:66)\n\tat org.apache.log4j.Category.callAppenders(Category.java:206)\n\tat org.apache.logging.julbridge.JULBridgeHandler.publish(JULBridgeHandler.java:53)\n\tat java.util.logging.Logger.log(Logger.java:472)\n\tat java.util.logging.Logger.doLog(Logger.java:494)\n\tat java.util.logging.Logger.log(Logger.java:517)\n\tat org.apache.log4j.jul.JULAppender.append(JULAppender.java:199)\n\nI'm not sure what the impact is on the test of disabling parent handlers."}, {"count": 1, "tags": [], "bug_id": 45757, "attachment_id": null, "text": "I think I remember thinking the same thing here (hence the commented out, but probably needed to be put back in).\n\nI'll have a further think about why I commented it out again, because there must have been some reason.. :)", "id": 120430, "time": "2008-09-07T19:56:43Z", "creator": "psmith@apache.org", "creation_time": "2008-09-07T19:56:43Z", "is_private": false}, {"count": 2, "tags": [], "creator": "psmith@apache.org", "text": "I believe this is because a _previous_ test run had not cleaned up after itself.  I saw a similar problem to hear in a different area and I solved it by properly repatriating in the teardown of each test.\n\nCould you check with the lastest HEAD if this is still a problem?  ", "id": 120601, "time": "2008-09-14T20:16:03Z", "bug_id": 45757, "creation_time": "2008-09-14T20:16:03Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "creator": "javabrett@gmail.com", "text": "Now appears to be resolved in HEAD.  Thanks Paul.", "id": 120723, "time": "2008-09-17T14:31:24Z", "bug_id": 45757, "creation_time": "2008-09-17T14:31:24Z", "is_private": false, "attachment_id": null}]