[{"count": 0, "tags": [], "bug_id": 43235, "attachment_id": null, "text": "If one uses touch with a mapper touch ignores the millis or datetime atributes\nInstead touch uses the timestamp of the Resource. This happens due to:\n                long modTime = (r.isExists()) ? r.getLastModified()\n                    : defaultTimestamp;\nin org.apache.tools.ant.taskdefs.Touch\n\nThis prohibits one from setting the time of the target file to a value defined \nin build.xml\n\nA clean implementation would just ignore the time of the resource file\nAn advanced implementation could use the time of the resource file UNLESS one \nof the millis or datetime attributes is set", "id": 107368, "time": "2007-08-29T02:06:40Z", "creator": "l117@worsaae.dk", "creation_time": "2007-08-29T02:06:40Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 43235, "text": "Please provide a simple build file that shows the\nproblem, ta.", "id": 107370, "time": "2007-08-29T02:28:19Z", "creator": "peterreilly@apache.org", "creation_time": "2007-08-29T02:28:19Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "creator": "l117@worsaae.dk", "attachment_id": 20724, "id": 107373, "time": "2007-08-29T04:00:12Z", "bug_id": 43235, "creation_time": "2007-08-29T04:00:12Z", "is_private": false, "text": "Created attachment 20724\nbuild.xml showing the problem\n\nant setup creates the files and dirs needed for the demo\nant touch demo will\nFirst time after setup) create the file MySourceFile.class with the time stamp \n\nof the java file\nSecond time update the timestamp of MySourceFile.class to what ever timestamp\nis (now) on the java file"}, {"count": 3, "tags": [], "bug_id": 43235, "attachment_id": null, "text": "Awesome, tak.\nI will get a fix ready soon.\nPeter\n\n", "id": 107374, "time": "2007-08-29T04:25:54Z", "creator": "peterreilly@apache.org", "creation_time": "2007-08-29T04:25:54Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 43235, "attachment_id": null, "text": "Whoa, wait--this is documented, intentional behavior:  The manual says \"If the original file exists its \ntimestamp will be used. Otherwise the task settings (millis, datetime) take effect.\"  The purpose of this is \nto make it easy to set up parallel directory structures that mimic your real setup without the storage \nimpact.  If we want to provide an attribute to override this behavior, however, fine by me.", "id": 107396, "time": "2007-08-29T07:55:07Z", "creator": "mbenson@apache.org", "creation_time": "2007-08-29T07:55:07Z", "is_private": false}, {"count": 5, "attachment_id": null, "creator": "peterreilly@apache.org", "text": "I release that this is documented and that is the intention\nof the code. However it is very strange (unexpected) to\nignore the setting given in the build file:\n\n        <touch datetime=\"03/03/2003 03:33 AM\">\n            <fileset dir=\"test\" includes=\"src/**/*.java\" />\n            <mapper type=\"regexp\" from=\"^src(.*)\\.java$$\"\nto=\"test/classes\\1.class\"/>        \n        </touch>\n\nIt is clearly (I think) the intent of the build author to set the date on the\nclass files to the datetime attribute, whereas:\n        <touch>\n            <fileset dir=\"test\" includes=\"src/**/*.java\" />\n            <mapper type=\"regexp\" from=\"^src(.*)\\.java$$\"\nto=\"test/classes\\1.class\"/>        \n        </touch>\none could argue that the timestamps of the .class files should be\nset to the timestamp of the correspond java files (although one\ncould also argue that this is also surprising behavior).", "id": 107397, "time": "2007-08-29T08:01:53Z", "bug_id": 43235, "creation_time": "2007-08-29T08:01:53Z", "tags": [], "is_private": false}, {"count": 6, "attachment_id": null, "creator": "mbenson@apache.org", "text": "(In reply to comment #5)\n> I release that this is documented and that is the intention\n> of the code. However it is very strange (unexpected) to\n> ignore the setting given in the build file:\n> \n>         <touch datetime=\"03/03/2003 03:33 AM\">\n>             <fileset dir=\"test\" includes=\"src/**/*.java\" />\n>             <mapper type=\"regexp\" from=\"^src(.*)\\.java$$\"\n> to=\"test/classes\\1.class\"/>        \n>         </touch>\n> \n\nOkay, point taken.\n\n> It is clearly (I think) the intent of the build author to set the date on the\n> class files to the datetime attribute, whereas:\n>         <touch>\n>             <fileset dir=\"test\" includes=\"src/**/*.java\" />\n>             <mapper type=\"regexp\" from=\"^src(.*)\\.java$$\"\n> to=\"test/classes\\1.class\"/>        \n>         </touch>\n> one could argue that the timestamps of the .class files should be\n> set to the timestamp of the correspond java files (although one\n> could also argue that this is also surprising behavior).\n\nYour arguments are pretty good; I am fine with changing the behavior, especially when datetime|millis \nis specified.  I'm still up in the air on mapping without specifying modification time whether current \ntime or inheriting time is more obviously correct.  Possibly the former, but can you think of an \nappropriate attribute to trigger \"timestamp inheritance\"?\n\n-Matt\n", "id": 107425, "time": "2007-08-29T13:13:48Z", "bug_id": 43235, "creation_time": "2007-08-29T13:13:48Z", "tags": [], "is_private": false}, {"count": 7, "attachment_id": null, "creator": "peterreilly@apache.org", "is_private": false, "id": 107426, "time": "2007-08-29T13:23:17Z", "bug_id": 43235, "creation_time": "2007-08-29T13:23:17Z", "tags": [], "text": "I think that the behavior should only be changed when\nthe datetime is specified. For the mapper without the\ndatetime being specified, we use the timestamps of the\nmapped from files (if they exist). I am not too sure\nthat a new attribute is needed to control the behavior,\n(we have quite enough attributes in ant already ;-)\n"}, {"count": 8, "tags": [], "bug_id": 43235, "attachment_id": null, "text": "Remark to comment #7\nThe only drawback is that this would prohibit using touch with mapper to do \nthe most normal task for touch (to update to time=now)\n\nAlternative suggestion:\nInstead of a new attribute we could invent a new value for \"datetime\" the \nvalue \"now\"\n\nTouch used without mapper -> behaviour unchanged\ntouch with mapper timestamp not specifeid -> inherrit time (as today)\ntouch with mapper and timestamp specified -> use the time specified\ntouch with mapper and timestamp specified as \"now\" -> set time to curent time\n\nWe could keep the current behaviour of timestamp transfering if no ", "id": 107523, "time": "2007-08-30T22:58:05Z", "creator": "l117@worsaae.dk", "creation_time": "2007-08-30T22:58:05Z", "is_private": false}, {"count": 9, "tags": [], "creator": "mbenson@apache.org", "text": "(In reply to comment #8)\n> Remark to comment #7\n> The only drawback is that this would prohibit using touch with mapper to do \n> the most normal task for touch (to update to time=now)\n> \n> Alternative suggestion:\n> Instead of a new attribute we could invent a new value for \"datetime\" the \n> value \"now\"\n> \n> Touch used without mapper -> behaviour unchanged\n> touch with mapper timestamp not specifeid -> inherrit time (as today)\n> touch with mapper and timestamp specified -> use the time specified\n> touch with mapper and timestamp specified as \"now\" -> set time to curent time\n> \n> We could keep the current behaviour of timestamp transfering if no \n\nI also thought of timestamp=\"now\" the other day.  :)  I think I would be okay with this but as it would \nonly exist for this particular use case it's maybe a little weird... are you still with us, Peter?  WDYT?", "id": 107553, "time": "2007-08-31T08:13:25Z", "bug_id": 43235, "creation_time": "2007-08-31T08:13:25Z", "is_private": false, "attachment_id": null}, {"count": 10, "attachment_id": null, "creator": "peterreilly@apache.org", "text": "I would be happy with \"now\". It would be nice\nto have a datatype that understood all the datetime\nconversion rules and could be used from a setDateTime(DateTime dateTime)\nattribute reflection method, so that this could\nbe reused by other tasks (tstamp for example).\n\n", "id": 107556, "time": "2007-08-31T08:44:08Z", "bug_id": 43235, "creation_time": "2007-08-31T08:44:08Z", "tags": [], "is_private": false}, {"count": 11, "tags": [], "bug_id": 43235, "text": "(In reply to comment #10)\n> I would be happy with \"now\". It would be nice\n> to have a datatype that understood all the datetime\n> conversion rules and could be used from a setDateTime(DateTime dateTime)\n> attribute reflection method, so that this could\n> be reused by other tasks (tstamp for example).\n> \n> \n\nHmmm, nice extrapolation.  Similar to what I did with Comparisons, TimeComparisons, etc.  :)", "id": 107558, "time": "2007-08-31T09:27:15Z", "creator": "mbenson@apache.org", "creation_time": "2007-08-31T09:27:15Z", "is_private": false, "attachment_id": null}, {"count": 12, "tags": [], "creator": "jkf@apache.org", "text": "Updated Touch task with the suggestions regarding the task here, including the\nnow (did not make the DateTime object, also didn't find other tasks that use\ndatetime)", "id": 107615, "time": "2007-09-02T05:57:47Z", "bug_id": 43235, "creation_time": "2007-09-02T05:57:47Z", "is_private": false, "attachment_id": null}, {"count": 13, "attachment_id": null, "creator": "mbenson@apache.org", "is_private": false, "id": 107620, "time": "2007-09-02T10:16:38Z", "bug_id": 43235, "creation_time": "2007-09-02T10:16:38Z", "tags": [], "text": "Thanks, Martijn!"}]