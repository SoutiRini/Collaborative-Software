[{"count": 0, "tags": [], "text": "When using piped logs \"apachectl restart\" stalls apache on Solaris for 1431 seconds.\n\nThis report is quite lengthy, because I tried to fully analyze and I will\nexplain, why that happens e.g. on Solaris, but not on Linux.\n\nTested on Solaris/Sparc 8, 9 and 10 with Apache 1.3.27 and 1.3.34. Also tested\nwith our own build and with the standard Solaris 10 build. It doesn't matter,\nwhich piped logger is being used. Problem found with rotatelogs, but /bin/cat\nshows the same problem.\n\nFrom the code analysis the bug must be quite old.\n\n1) Piped Logs and children\n\nPiped logs for apache 1.3 spawn there children by fork/exec to /bin/sh -c\n\"piped_logger\". Under Solaris this results in two processes per pipe. The first\none is a child of the main httpd process and is /bin/sh, the second one is a\nchild of /bin/sh and is a piped_logger process.\n\nUnder Linux there will be only one child per piped_logger, the /bin/sh-process\ndoes not exist. I assume, /bin/sh has a very different implementation for\nhandling the \"-c\" flag for Solaris and for Linux.\n\n2) Signal masks of the logging children\n\nAll logging children have SIGHUP ignored. This is true for the two process case\n(Solaris) and the one process case (Linux). I assum this comes from the fact,\nthat the three methods in http_log.c which spawn logging child all set SIGHUP to\nSIG_IGN before forking.\n\nAll logging children have SIGUSR1 set to default. This again is true for Solaris\nand Linux.\n\nNow concerning SIGTERM: Under Solaris the /bin/sh child of httpd has a signal\nhandler for SIGTERM. psig shows:\n\nTERM    caught  0x16c64         0\n\nThe second looging child (the piped_logger itself) has SIGTERM set to default.\n\nUnder Linux the only logging child, the piped_logger has SIGTERM set to default.\n\n3) What happens when restart is done\n\napachectl sends a SIGHUP to the httpd master process. That one itself sends\nSIGHUP to the full process group. On Solaris and on Linux all logging children\nignore SIGHUP, so no effect on the logging children. The httpd processes which\nare children of the master terminate during SIGHUP.\n\nNow in reclaim_child_processes(0) near the end there is a loop which calls\nwaitpid for all direct logging children. The call returns with 0 and then the\nmaintenance method is caled, which sends a TERM signal to the direct logging child.\n\nUnder Solaris this means, that a TERM signal is being send to the /bin/sh\nchildren. These are temselves inside waitid, which gets interrupted and starts\nagain. The signal is not passed along to their child (the piped_loger itself).\n\nUnder Linux the logging child is the piped_logger itself. It receives the\nSIGTERM and terminates.\n\nSince the /bin/sh (and the piped_logger) did not terminate for Solaris,\nreclaim_child_processes(0) takes another pass through the tries loop and\nincreases the wait time before callng another maintenance/sending another kill\nin each pass by a factor of 4. We get waits for\n\n...\n13479:          timeout: 1.048576000 sec\n13479:          timeout: 4.194304000 sec\n13479:          timeout: 16.777216000 sec\n13479:          timeout: 67.108864000 sec\n13479:          timeout: 268.435456000 sec\n13479:          timeout: 1073.741824000 sec\n\nThe last line is for the 9th iteration. Then the waittime gets too big and as a\nresult, the remaining 3 iterations wait with a timeout of 0 (minor bug).\n\nSo after about 1431 seconds httpd gives up. It then closes several file\ndescriptors and at that moment the piped_loggers terminate and as a result the\n/bin/sh also.\n\n4) Why is graceful working?\n\ngraceful uses SIGUSR1 which is not masked by any of the logging children. So\nwhen sending the signal to the process group, all logging children terminate.\nhttpd never has to use the TERM signal like in restart.\n\n5) Why is apache2 working\n\napache2 does not use /bin/sh to spawn the logging children, so even under\nSolaris the piped logger is a direct child of httpd, so receives SIGTERM and\nterminates.\n\n6) What can be done?\n\nI've no especially good solution. Possible are:\n\n- not increasing the timeout that often/to such huge values\n- sending SIGTERM not only to the children, but instead to the process group\n- closing the file descriptors earlier, so that the piped loggers have a chance\nto terminate without the signal\n\nI hope you made it to the end. Any Solutions or ideas for discussion?", "is_private": false, "bug_id": 38989, "id": 86876, "time": "2006-03-15T20:31:41Z", "creator": "rainer.jung@kippdata.de", "creation_time": "2006-03-15T20:31:41Z", "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 38989, "is_private": false, "id": 86910, "creation_time": "2006-03-16T12:01:55Z", "time": "2006-03-16T12:01:55Z", "creator": "rpluem@apache.org", "text": "Setting back to HEAD. I did not notice that the product had been set to \"Apache\nhttpd-1.3\".", "attachment_id": null}, {"count": 2, "tags": [], "text": "I found a workaround, which is sufficient for us: I changed the SHELL_PATH in\nhttpd.h from \"/bin/sh\" to \"/usr/xpg4/bin/sh\". That's a XPG4 compliant shell\nwhich exists on Solaris since Solaris 2.5, so about 10 years.\n\nThe shell is similar to ksh (see \"man ksh\") and does *not* fork when called with\n\"-c\".\n\nAs a consequence Solaris then behaves like Linux, only one process is being\nforked from the httpd for each piped logger and the signal handling is OK.\n\nUnfortunately I could not figure out how to pass a\n'CFLAGS=-DSHELL_PATH=\"/usr/xpg4/bin/sh\"' successfully to configure, because when\nI don't escape the '\"', they get stripped of, and when I escape them, then\nmod_ssl configure complains :(\n\nI finally just hacked httpd.h before running make.\n\nIt would be nice to at least document the behaviour:\n\n- restart in combination with piped logs is broken on any platform,\n  where \"/bin/sh -c\" forks (e.g. Solaris)\n- if the platform has another shell, that does not fork, like\n  /usr/xpg4/bin/sh or /bin/ksh, then defining SHELL_PATH to\n  this shell will help.", "attachment_id": null, "id": 86953, "creation_time": "2006-03-17T09:29:55Z", "time": "2006-03-17T09:29:55Z", "creator": "rainer.jung@kippdata.de", "bug_id": 38989, "is_private": false}, {"count": 3, "tags": [], "creator": "mss@apache.org", "attachment_id": null, "is_private": false, "id": 145137, "time": "2011-03-21T10:41:15Z", "bug_id": 38989, "creation_time": "2011-03-21T10:41:15Z", "text": "Apache HTTP Server 1.3.x is not supported anymore and no bugs will be fixed in the old codebase (cf. <http://mail-archives.apache.org/mod_mbox/httpd-announce/201002.mbox/%3C20100203000334.GA19021@infiltrator.stdlib.net%3E>). Since this bug seems to affect only 1.3.x, I'm closing it as WONTFIX.\n\nIf this bug still affects you in a recent version (version 2.2.x or the upcoming version 2.4), please open a new bug.\n\nThank you for reporting the bug."}]