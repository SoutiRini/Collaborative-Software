[{"count": 0, "tags": [], "creator": "jp@dionne.biz", "is_private": false, "text": "While using mod_authnz_ldap to manage directory access, apache doesn't seems to\nreuse existing ldap connections and keeps opening new ones.\n\nIt will open has many connexions as .htaccess (or <Directory> tags)in\nsubdirectories.   The connexions will remain opened indefinitly. \n\nTo reproduce:\n\n<Directory /var/www/dav>\n        Options Indexes FollowSymLinks MultiViews\n        AuthLDAPURL ldap://192.168.123.123/ou=asdf,dc=example,dc=com?cn?one\n        AuthBasicProvider ldap\n        AuthzLDAPAuthoritative off\n        AuthLDAPGroupAttribute memberUid\n        AuthLDAPGroupAttributeIsDN off\n        AuthType Basic\n        AuthName \"DAV\"\n        Require valid-user\n        Dav on\n</Directory>\n\nSubdirectories of /var/www/dav have a .htaccess with the single line:\n\nRequire ldap-user username", "id": 94276, "time": "2006-09-29T09:30:30Z", "bug_id": 40644, "creation_time": "2006-09-29T09:30:30Z", "attachment_id": null}, {"count": 1, "text": "I am unable to reproduce this problem.  It is true that once a new ldap \nconnections is establish, it will remain indefinitly (which is by design), but \nI am not seeing a connection per user.  My tests are showing that the \nconnections in the pool are being reused.", "bug_id": 40644, "is_private": false, "id": 94392, "time": "2006-10-02T11:15:31Z", "creator": "bnicholes@apache.org", "creation_time": "2006-10-02T11:15:31Z", "tags": [], "attachment_id": null}, {"count": 2, "tags": [], "text": "Which LDAP server(s) are you using?\n\nCan you attach log snippets?", "is_private": false, "id": 94436, "creator": "ryan@sourcelabs.com", "time": "2006-10-03T10:29:01Z", "bug_id": 40644, "creation_time": "2006-10-03T10:29:01Z", "attachment_id": null}, {"count": 3, "text": "The number of connection does not always increase on every http request.  \n\nWe use only one openldap server from fedora core 5 : 2.3.19-4 on AMD x86_64\n\nWe found one simplest way to make the connections increase gradually:  \n- With two different browsers (konqueror and firefox), list the root directory\nwith two different user credentials.\n- Count the number of ldap connections with:  lsof -p $(pgrep httpd | xargs echo\n| sed 's/\\ /,/g') | grep ldap | grep ESTABLISHED | wc\n- keep refreshing the pages of the two browsers.\n\nYou will notice the count of connections will increase gradually.  At some point\nit will increase by the number of subdirectories with .htaccess.   It will\neventually DOS the ldap server with a large number of subdirectories.   \n\nWe also reproduced the bug with an httpd compiled from source with:\n./configure --prefix=/opt/apache-2.2.2 --with-ldap --enable-dav --enable-dav-fs\n--enable-dav-lock --enable-authnz-ldap --enable-ldap\n\nOur ldap server is on the same ethernet lan.\n\nBy the way bug 40639 is a duplicate of this bug, not bug 40640 . \n\n", "bug_id": 40644, "is_private": false, "id": 94445, "time": "2006-10-03T14:21:35Z", "creator": "jp@dionne.biz", "creation_time": "2006-10-03T14:21:35Z", "tags": [], "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 40644, "attachment_id": null, "id": 94449, "time": "2006-10-03T14:52:44Z", "creator": "rpluem@apache.org", "creation_time": "2006-10-03T14:52:44Z", "is_private": false, "text": "*** Bug 40639 has been marked as a duplicate of this bug. ***"}, {"count": 5, "text": "(In reply to comment #3)\n\n> You will notice the count of connections will increase gradually.  At some point\n> it will increase by the number of subdirectories with .htaccess.   It will\n\nDoes this also happen with no .htacess files present / AllowOverride set to None\nfor all directories?", "creator": "rpluem@apache.org", "attachment_id": null, "id": 94450, "time": "2006-10-03T14:57:06Z", "bug_id": 40644, "creation_time": "2006-10-03T14:57:06Z", "tags": [], "is_private": false}, {"count": 6, "tags": [], "creator": "jp@dionne.biz", "attachment_id": null, "text": "With no .htaccess in the subdirectories and one .htaccess with one require\nldap-user at the root, the connexion count does reach about 16 connections.    \n\nWe also did the test of replacing every .htacces with a <Directory> tag in\nhttpd.conf and we encounter the same behaviour: with 100 directory tag, the\nconnection count increase suddenly to a hundred.\n\nIn uldap_connection_find() if we log the decision to create a new connexion at\nmodule/ldap/ldap_util.c:512 , here's what the log looks like:\n\n\n*** When the connexion count does not increase ***\n[Wed Oct 04 15:48:27 2006] [error] [client 192.168.3.124] access to /dav/user1/\nfailed, reason: require directives present and no Authoritative handler.\n[Wed Oct 04 15:48:27 2006] [error] [client 192.168.3.124] access to /dav/user2/\nfailed, reason: require directives present and no Authoritative handler.\n[Wed Oct 04 15:48:27 2006] [error] [client 192.168.3.124] access to /dav/user3/\nfailed, reason: require directives present and no Authoritative handler.\n...\n\n\n*** When it increases ****\n[Wed Oct 04 15:48:27 2006] [error] LDAP: Can't reuse connection \n(module/ldap/ldap_util.c:512)\n[Wed Oct 04 15:48:27 2006] [error] [client 192.168.3.124] access to /dav/ecalvo/\nfailed, reason: require directives present and no Authoritative handler.\n[Wed Oct 04 15:48:27 2006] [error] LDAP: Can't reuse connection \n(module/ldap/ldap_util.c:512)\n[Wed Oct 04 15:48:27 2006] [error] [client 192.168.3.124] access to\n/dav/jbeaulieu/ failed, reason: require directives present and no Authoritative\nhandler.\n[Wed Oct 04 15:48:27 2006] [error] LDAP: Can't reuse connection \n(module/ldap/ldap_util.c:512)\n[Wed Oct 04 15:48:27 2006] [error] [client 192.168.3.124] access to\n/dav/jfpetri/ failed, reason: require directives present and no Authoritative\nhandler.\n...\n\n\nBy the way we don't know how to avoid the \"require directives present and no\nAuthoritative handler\" error message.  \n\n", "id": 94490, "time": "2006-10-04T13:09:37Z", "bug_id": 40644, "creation_time": "2006-10-04T13:09:37Z", "is_private": false}, {"count": 7, "text": "(In reply to comment #6)\n\n> In uldap_connection_find() if we log the decision to create a new connexion \nat module/ldap/ldap_util.c:512 , here's what the log looks like:\n\nYou need to get more information here.  Rather than just logging a message \nthat states that a new connection is being created, you need to log why it \nfailed the two previous if statements where it was searching for an existing \nconnection.  Did it fail because there weren't any connections available? In \nother words, the the trylock() fail? Or because the criteria didn't match?\n\n\n> By the way we don't know how to avoid the \"require directives present and no\n> Authoritative handler\" error message.  \n\nYou need to add AuthzLDAPAuthoritative ON to your configuration.\n\n\n", "bug_id": 40644, "is_private": false, "id": 94507, "time": "2006-10-04T16:09:17Z", "creator": "bnicholes@apache.org", "creation_time": "2006-10-04T16:09:17Z", "tags": [], "attachment_id": null}, {"count": 8, "text": "Created attachment 18967\n uldap_connection_find trylock patch", "bug_id": 40644, "attachment_id": 18967, "id": 94550, "time": "2006-10-05T13:03:37Z", "creator": "jp@dionne.biz", "creation_time": "2006-10-05T13:03:37Z", "tags": [], "is_private": false}, {"count": 9, "tags": [], "bug_id": 40644, "attachment_id": null, "id": 94551, "time": "2006-10-05T13:07:06Z", "creator": "jp@dionne.biz", "creation_time": "2006-10-05T13:07:06Z", "is_private": false, "text": "If I replace the trylock by a lock , the connection count stop to increase.  \n\nKonqueror with webdav:// url will generate multiple PROPFIND requests which will\nmake the trylock to fail multiple time in a row causing new ldap connection to\nbe created.\n\nAny better solution?\n\nIs it possible to cache the binddn and bindpw information?\nWhen does the ldap connection pool cleanup occur?"}, {"count": 10, "tags": [], "bug_id": 40644, "attachment_id": null, "id": 94557, "time": "2006-10-05T14:44:36Z", "creator": "bnicholes@apache.org", "creation_time": "2006-10-05T14:44:36Z", "is_private": false, "text": "(In reply to comment #9)\n> If I replace the trylock by a lock , the connection count stop to increase.\n\nThe reason why it stops increasing is because you have effectly eliminated the \nconnection pool.  By replacing the trylock with a lock, all threads will block \nwaiting for their turn to use the single ldap connection.  No new connections \nwill ever be created.  So rather than increasing performance by allowing \nmultiple connections in a multi-threaded environment.  You would serialize \neverthing on a single connection.\n  \n> Any better solution?\n\nI am still not seeing a reuse problem in my testing so I am unable to \nformulate a better solution to a problem that I am unable to identify.  In my \ntesting I am seeing the connections being reused as they should.  The idea \nhere is to satisfy a performance issue.  Creating and destroying LDAP \nconnections is a lot of overhead.  A connection pool is a way to eliminate the \noverhead.  If the ldap traffic requires 2 connection to addequately perform \nthe necessary operations, then the pool will contain 2 connections.  If it \nrequires 200 connections, then the pool size will increase to 200.  \n\n> Is it possible to cache the binddn and bindpw information?\n\nThere isn't any need to cache the binddn and bindpw.  The same dn and password \nare used for all of the connections created for the associated AuthLDAPURL.  \nThis is the binddn and bindpw that was specified through the AuthLDAPBindDN \nand AuthLDAPBindPassword directives.  If you are referring to the user names \nand passwords that are passed in by the user for authentication, those are \nalready cached in an entirely different area of the code.  But that is a \ncompletely different issue that has nothing to do with the ldap connection \npool.\n\n> When does the ldap connection pool cleanup occur?\n\nDepends on what you are talking about.  Bad connections or broken connections \nare taken care of all of the time.  If a bad connection is detected, it is \ndeleted and re-established, but the size of the pool remains the same.  \nShrinking the size of the connection pool is never done.  The only time that \nthe connection pool is cleaned up is at shutdown time.  Many LDAP servers will \nhave a connection timeout set.  For example openldap has the idletimeout \ndirective which will unbind an idle connection after a specified period of \ntime.  In this case, mod_ldap would detect that the connection has been \nforcibly closed and re-establish the connection the next time it is needed. \n\n"}, {"count": 11, "tags": [], "creator": "jp@dionne.biz", "text": "(In reply to comment #10)\n> multiple connections in a multi-threaded environment.  You would serialize \n> everthing on a single connection.\nYou are right.  I have mistaken binddn and binpw with the user dn and password\nused for authentication.  I was expecting to serialize the requests by user not\nfor all users.\n\n> If you are referring to the user names \n> and passwords that are passed in by the user for authentication, those are \n> already cached in an entirely different area of the code.  But that is a \n> completely different issue that has nothing to do with the ldap connection \n> pool.\nI was indeed refering to this. Thank you very for much for you help.   This bug\ncan be marked as invalid.\n\n", "id": 94590, "time": "2006-10-06T07:43:23Z", "bug_id": 40644, "creation_time": "2006-10-06T07:43:23Z", "is_private": false, "attachment_id": null}]