[{"count": 0, "attachment_id": null, "creator": "bsemprie@hotmail.com", "text": "IE sends a negative number (the signed integer wraps) for Content-Length sizes \ngreater than 2147483647 bytes. Reuslting in the following error:\n\nSEVERE: Error reading request, ignored\njava.lang.NumberFormatException\n\tat org.apache.tomcat.util.buf.Ascii.parseInt(Ascii.java:188)\n\tat org.apache.tomcat.util.buf.ByteChunk.getInt(ByteChunk.java:439)\n\tat org.apache.tomcat.util.buf.MessageBytes.getInt\n(MessageBytes.java:629)\n\tat org.apache.coyote.Request.getContentLength(Request.java:314)\n\tat org.apache.coyote.http11.Http11Processor.prepareRequest\n(Http11Processor.java:747)\n\tat org.apache.coyote.http11.Http11Processor.process\n(Http11Processor.java:424)\n\tat \norg.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.processConnecti\non(Http11Protocol.java:386)\n\tat org.apache.tomcat.util.net.TcpWorkerThread.runIt\n(PoolTcpEndpoint.java:534)\n\tat org.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run\n(ThreadPool.java:530)\n\tat java.lang.Thread.run(Thread.java:536)\n\nCODE:\npublic int getContentLength() {\n  if( contentLength > -1 ) return contentLength;\nMessageBytes clB = headers.getValue(\"content-length\");\n        contentLength = (clB == null || clB.isNull()) ? -1 : clB.getInt();\n\tavailable = contentLength;\n\n\treturn contentLength;\n    }", "id": 29483, "time": "2003-01-15T23:29:15Z", "bug_id": 16146, "creation_time": "2003-01-15T23:29:15Z", "tags": [], "is_private": false}, {"count": 1, "tags": [], "text": "And the problem is ? It is a totally invalid request, and if it doesn't cause\nany problem other than causing a stack trace to end up in the logs, then it's fine.\nNote than > 4G content-length will not be handled correctly by Tomcat in many\ncircumstances.", "is_private": false, "id": 29485, "creation_time": "2003-01-16T00:06:31Z", "time": "2003-01-16T00:06:31Z", "creator": "remm@apache.org", "bug_id": 16146, "attachment_id": null}, {"count": 2, "tags": [], "creator": "bsemprie@hotmail.com", "attachment_id": null, "text": "IE is sending a big negative number. The request aborts and a server error is \ndisplayed. All I'm asking is that you check for the negative and do what ever \nyou are doing for the case where null is passed instead of throwing an \nexception and presenting the sever error page. This will hopefully allow the \nfile to be uploaded without causing the server error.\n\nThe 4GB limit is fine but, what I have here is a 2GB limit beacuse the signed \ninteger wraps. This new imposed limit can be removed if you simply compensate \nfor the invalid negative number. Yes, the message is technically invalid due \nto the incorrect negative content length, but we program to save ourselves \nfrom stupidity all the time. Will you please simply check for a negative and \ntreat it like the null case or ignore the parameter if a negative is presented?", "id": 29488, "time": "2003-01-16T00:21:53Z", "bug_id": 16146, "creation_time": "2003-01-16T00:21:53Z", "is_private": false}, {"count": 3, "attachment_id": null, "bug_id": 16146, "text": "If the client sends a bogus value, then it's the client problem. I will not put\nhacks and workarounds because IE is broken. Of course, you are free to patch\nyour own Tomcat installation to do whatever you want.", "id": 29504, "time": "2003-01-16T08:21:16Z", "creator": "remm@apache.org", "creation_time": "2003-01-16T08:21:16Z", "tags": [], "is_private": false}]