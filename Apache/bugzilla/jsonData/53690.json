[{"count": 0, "text": "The warnings looks like this:\n==977== Syscall param semctl(IPC_SET, arg.buf) points to uninitialised byte(s)\n==977==    at 0x62FA8EA: semctl (in /lib64/libc-2.5.so)\n==977==    by 0x18705C: ap_unixd_set_proc_mutex_perms (unixd.c:251)\n==977==    by 0x1870E0: ap_unixd_set_global_mutex_perms (unixd.c:284)\n==977==    by 0x16FC19: ap_global_mutex_create (util_mutex.c:444)\n==977==    by 0xAE3D17A: rewritelock_create (mod_rewrite.c:2594)\n==977==    by 0xAE41730: post_config (mod_rewrite.c:4316)\n==977==    by 0x15F4B3: ap_run_post_config (config.c:105)\n==977==    by 0x1365C5: main (main.c:696)\n==977==  Address 0x7ff000430 is on thread 1's stack\n==977==  Uninitialised value was created by a stack allocation\n==977==    at 0x186FB1: ap_unixd_set_proc_mutex_perms (unixd.c:227)\n\nBecause the semid_ds structure on Linux (as well as FreeBSD and, likely, other Unixes) contains some undocumented fields (such as __unused1 or sem_pad2), explicitly setting each one is not portable -- far simpler to just request, that the entire structure be zeroed at the declaration time:\n\n--- os/unix/unixd.c        2011-12-18 13:02:21.000000000 -0500\n+++ os/unix/unixd.c     2012-08-09 18:40:55.000000000 -0400\n@@ -242,5 +242,5 @@\n #endif\n             union semun ick;\n-            struct semid_ds buf;\n+            struct semid_ds buf = { 0 };\n \n             apr_os_proc_mutex_get(&ospmutex, pmutex);\n\nWhile the warning is benign, it is better to suppress it, then to needlessly worry people attempting to use valgrind to debug some other problem -- the fewer such false alarms, the better.\n\nEarlier releases of httpd have the same issue (I've seen it in 2.2.22 myself).", "bug_id": 53690, "attachment_id": null, "id": 161218, "time": "2012-08-09T22:51:05Z", "creator": "mi+apache@aldan.algebra.com", "creation_time": "2012-08-09T22:51:05Z", "tags": [], "is_private": false}, {"count": 1, "text": "with that I get \n\n\nunixd.c: In function \u2018ap_unixd_set_proc_mutex_perms\u2019:\nunixd.c:244:20: warning: missing braces around initializer [-Wmissing-braces]\nunixd.c:244:20: warning: (near initialization for \u2018buf.sem_perm\u2019) [-Wmissing-braces]", "creator": "trawick@apache.org", "attachment_id": null, "id": 161219, "time": "2012-08-09T23:19:09Z", "bug_id": 53690, "creation_time": "2012-08-09T23:19:09Z", "tags": [], "is_private": false}, {"count": 2, "text": "(In reply to comment #1)\n> unixd.c: In function \u2018ap_unixd_set_proc_mutex_perms\u2019:\n> unixd.c:244:20: warning: missing braces around initializer [-Wmissing-braces]\n\nYeah, the first field of the semid_ds-structure is also a structure (at least on Linux and FreeBSD), so using two layers of braces should work:\n\n     struct semid_ds buf = {{ 0 }};\n\nIf that's not portable enough, then bzero() might be in order:\n\n     bzero(&buf, sizeof(buf));\n\nhowever annoying it might be to have a function-call (even if compiler will optimize it away) just to zero-out an automatic variable :-(", "bug_id": 53690, "is_private": false, "id": 161221, "time": "2012-08-10T02:16:20Z", "creator": "mi+apache@aldan.algebra.com", "creation_time": "2012-08-10T02:16:20Z", "tags": [], "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 53690, "is_private": false, "text": "committed to trunk as r1442326", "id": 165059, "time": "2013-02-04T20:15:27Z", "creator": "sf@sfritsch.de", "creation_time": "2013-02-04T20:15:27Z", "attachment_id": null}]