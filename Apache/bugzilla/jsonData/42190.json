[{"count": 0, "tags": [], "bug_id": 42190, "attachment_id": null, "text": "When running a long-running CGI under Apache2, the connection is closed abruptly\nrather than return an error code:\n\nConnection trace:\nO> GET /cgi-bin/test.cgi HTTP/1.0\nO> \nConnection closed by foreign host.\n\nThe simple CGI was:\n  #!/bin/sh\n  /bin/date +\"`hostname -s`[$$]: I was called at %D %T\" >> /tmp/test.log\n  echo \"Content-Type: text/plain\"\n  echo \"\"\n  sleep 1000\n\nSetting the 'Timeout' value in Apache down to 5 seconds or so makes this bug\neasier to debug (rather than the quite high default).\n\nUnder Apache1.3 we see the behavior:\n\nO> GET /cgi-bin/test.cgi HTTP/1.0\nO> \nI> HTTP/1.1 200 OK\nI> Date: Mon, 23 Apr 2007 06:10:26 GMT\nI> Server: Apache\nI> Connection: close\nI> Content-Type: text/plain\nConnection closed by foreign host.\n\nI suspect that this is similar to the bug 35424 which relates to the same\nbehaviour occurring under Apache 1.3.  I will note am surprised that Apache13\nreturns a '200' reply rather than a timeout, but that's a minor nitpick compared\nto 224 closing the connection.\n\nIf you require any further debug output let me know.", "id": 102044, "time": "2007-04-22T23:13:37Z", "creator": "jrm.apache@darktide.net", "creation_time": "2007-04-22T23:13:37Z", "is_private": false}, {"count": 1, "tags": [], "creator": "nick@webthing.com", "text": "How is this a bug?\n\nOr in other words, how would you expect the server to behave when a script times\nout or crashes, having already sent the headers?", "id": 102080, "time": "2007-04-23T02:54:12Z", "bug_id": 42190, "creation_time": "2007-04-23T02:54:12Z", "is_private": false, "attachment_id": null}, {"id": 102184, "tags": [], "bug_id": 42190, "attachment_id": null, "count": 2, "text": "(In reply to comment #1)\n> How is this a bug?\n> \n> Or in other words, how would you expect the server to behave when a script times\n> out or crashes, having already sent the headers?\n\nWell, Apache 1.3 behaviour was changed to return a proper HTTP reply (as per the\nother mentioned BugID #35424).\n\nI'm finding that applications I'm using - because they don't receive a proper\nHTTP reply are subsequently retrying and this is causing issues.  I guess the\nother part that irks me is that this was handled correctly under Apache 1.3 and\nnow is not consistent with that sort of expected response in Apache2.x\n\nFrom the HTTP/1.1 RFC (2616), it looks as though the retry if connection closed\nis a proper behavior.  I just don't believe that closing the connection under a\ntimeout condition is the best response - Particularly given that this is likely\nto cause a retry.\n\nIn either case, it's my belief that the server should respond with a '504\nGateway Timeout' under both Apache 1.3 and 2.x (though oddly enough Apache1.3\nreturns a '200 OK' with the previous bugID mentioned - which seems flawed to me).", "time": "2007-04-23T18:33:11Z", "creator": "jrm.apache@darktide.net", "creation_time": "2007-04-23T18:33:11Z", "is_private": false}, {"id": 102249, "tags": [], "bug_id": 42190, "attachment_id": null, "count": 3, "text": "Nick's point is that apache sends the headers right away, including the status\ncode. Otherwise it would need to queue up the entire response just to make sure\nthat no error occurs along the way. This would obviously be unacceptable for\nmost situations. So once your script has already sent headers, apache has sent\nthe (200) status code, and there is no way to later go back and say \"that should\nhave been 500\".\n\nOn the other hand, I think Nick missed your point that 2.x is not sending the\nheaders at all. I haven't confirmed your tests, but you are right that the 2.x\nbehavior your describe is not optimal.", "time": "2007-04-24T08:41:18Z", "creator": "slive@apache.org", "creation_time": "2007-04-24T08:41:18Z", "is_private": false}, {"id": 117321, "tags": [], "bug_id": 42190, "is_private": false, "count": 4, "text": "Created attachment 22067\na single line patch to return rv instead of OK\n\nIt looks like only this is needed to resolve this.\n\nmodules/generators/mod_cgi.c\n------------------------------ \n     apr_file_close(script_err);\n \n-    return OK;                      /* NOT r->status, even if it has changed. +    return rv;                      /* NOT r->status, even if it has changed.  }\n \n /*============================================================================\n\nI verified using your example\n\n|telnet localhost 8080\nTrying 127.0.0.1...\nConnected to localhost.\nEscape character is '^]'.\nGET /cgi-bin/test.cgi HTTP/1.0\n\nHTTP/1.1 500 Internal Server Error\nDate: Tue, 03 Jun 2008 14:29:40 GMT\nServer: Apache/2.3.0-dev (Unix)\nContent-Length: 535\nConnection: close\nContent-Type: text/html; charset=iso-8859-1\n\n<!DOCTYPE HTML PUBLIC \"-//IETF//DTD HTML 2.0//EN\">\n<html><head>\n<title>500 Internal Server Error</title>\n</head><body>\n<h1>Internal Server Error</h1>\n<p>The server encountered an internal error or\nmisconfiguration and was unable to complete\nyour request.</p>\n<p>Please contact the server administrator,\n you@example.com and inform them of the time the error occurred,\nand anything you might have done that may have\ncaused the error.</p>\n<p>More information about this error may be available\nin the server error log.</p>\n</body></html>\n\n----------------------------------------------------\nA normal cgi script with an error\n\n|telnet localhost 8080\nTrying 127.0.0.1...\nConnected to localhost.\nEscape character is '^]'.\nGET /cgi-bin/printenv HTTP/1.0\n\nHTTP/1.1 500 Internal Server Error\nDate: Tue, 03 Jun 2008 15:01:32 GMT\nServer: Apache/2.3.0-dev (Unix)\nContent-Length: 535\nConnection: close\nContent-Type: text/html; charset=iso-8859-1\n\n<!DOCTYPE HTML PUBLIC \"-//IETF//DTD HTML 2.0//EN\">\n<html><head>\n<title>500 Internal Server Error</title>\n</head><body>\n<h1>Internal Server Error</h1>\n<p>The server encountered an internal error or\nmisconfiguration and was unable to complete\nyour request.</p>\n<p>Please contact the server administrator,\n you@example.com and inform them of the time the error occurred,\nand anything you might have done that may have\ncaused the error.</p>\n<p>More information about this error may be available\nin the server error log.</p>\n</body></html>\n-------------------------------------\nand a normal working cgi script\n|telnet localhost 8080\nTrying 127.0.0.1...\nConnected to localhost.\nEscape character is '^]'.\nGET /cgi-bin/printenv HTTP/1.0\n\nHTTP/1.1 200 OK\nDate: Tue, 03 Jun 2008 15:01:15 GMT\nServer: Apache/2.3.0-dev (Unix)\nContent-Length: 818\nConnection: close\nContent-Type: text/plain; charset=iso-8859-1\n\nDOCUMENT_ROOT=\"/space/store/apache.26.May/install/htdocs\"\n\nPlease do let me know if this is sufficient.", "time": "2008-06-03T23:55:28Z", "creator": "rahul.g.nair@gmail.com", "creation_time": "2008-06-03T23:55:28Z", "attachment_id": 22067}, {"count": 5, "tags": [], "creator": "jrm.apache@darktide.net", "text": "> |telnet localhost 8080\n> Trying 127.0.0.1...\n> Connected to localhost.\n> Escape character is '^]'.\n> GET /cgi-bin/test.cgi HTTP/1.0\n> \n> HTTP/1.1 500 Internal Server Error\n> Date: Tue, 03 Jun 2008 14:29:40 GMT\n> Server: Apache/2.3.0-dev (Unix)\n> Content-Length: 535\n> Connection: close\n> Content-Type: text/html; charset=iso-8859-1\n> \n> <!DOCTYPE HTML PUBLIC \"-//IETF//DTD HTML 2.0//EN\">\n> <html><head>\n> <title>500 Internal Server Error</title>\n> </head><body>\n> <h1>Internal Server Error</h1>\n> <p>The server encountered an internal error or\n> misconfiguration and was unable to complete\n> your request.</p>\n> <p>Please contact the server administrator,\n>  you@example.com and inform them of the time the error occurred,\n> and anything you might have done that may have\n> caused the error.</p>\n> <p>More information about this error may be available\n> in the server error log.</p>\n> </body></html>\n> \n> A normal cgi script with an error\n\n... Not too sure what you mean here.  The original CGI example I posted didn't have any sort of error in it.  I don't see that a 500 error should really be responded at all - as I mentioned earlier - it's a timeout - a 504 might be more appropriate.\n\nThough having said that, *some* sort of response is better than merely closing the connection.\n\nTo confirm you've fixed this, does the cgi cause a HTTP '200 OK' if you set the sleep to lower than the Timeout value?\n\nJenna", "id": 117323, "time": "2008-06-04T00:30:11Z", "bug_id": 42190, "creation_time": "2008-06-04T00:30:11Z", "is_private": false, "attachment_id": null}, {"count": 6, "tags": [], "creator": "rahul.g.nair@gmail.com", "attachment_id": null, "id": 117324, "time": "2008-06-04T01:00:29Z", "bug_id": 42190, "creation_time": "2008-06-04T01:00:29Z", "is_private": false, "text": "Yes\n!cat cgi-bin/test.cgi\n#!/bin/sh\n/bin/date +\"`hostname -s`[$$]: I was called at %D %T\" >> /tmp/test.log\necho \"Content-Type: text/plain\"\necho \"\"\nsleep 100\n\n|telnet localhost 8080\nTrying 127.0.0.1...\nConnected to localhost.\nEscape character is '^]'.\nGET /cgi-bin/test.cgi HTTP/1.0\n\nHTTP/1.1 200 OK\nDate: Wed, 04 Jun 2008 07:19:06 GMT\nServer: Apache/2.3.0-dev (Unix)\nContent-Length: 0\nConnection: close\nContent-Type: text/plain\n\nThe value that is present in rv is returned by the call ap_get_os_error (which is the errornum from the OS). I do not know any mappings that tells me which os error is what for apache, Unfortunately APR_STATUS_IS_TIMEUP, which I expected would understand this does not.\n\nan update - instead of returning rv, if not APR_SUCCESS, return an HTTP error code, as rv is not an HTTP error code. (checking rv this way is ok as ap_pass_brigade is the one that sets rv to the above mentioned value and is the last call. All others that set rv returns immediatly)\n\n--- modules/generators/mod_cgi.c        (revision 663009)\n+++ modules/generators/mod_cgi.c        (working copy)\n@@ -1021,6 +1021,7 @@\n     }\n \n     apr_file_close(script_err);\n+    if (rv != APR_SUCCESS) return HTTP_INTERNAL_SERVER_ERROR;\n \n     return OK;                      /* NOT r->status, even if it has changed. */\n }\n"}, {"attachment_id": null, "tags": [], "bug_id": 42190, "text": "The logic in the default handler for ap_pass_brigade failures should probably be duplicated here (or maybe factored out), though maybe returning 500 for any failure is OK for mod_cgi.", "count": 7, "id": 117328, "time": "2008-06-04T02:47:33Z", "creator": "jorton@redhat.com", "creation_time": "2008-06-04T02:47:33Z", "is_private": false}, {"count": 8, "tags": [], "bug_id": 42190, "is_private": false, "text": "(In reply to comment #7)\nAre you refering to core.c:default_handler ? It seems to do this,\n---------------------------------\n        status = ap_pass_brigade(r->output_filters, bb);\n        if (status == APR_SUCCESS\n            || r->status != HTTP_OK\n            || c->aborted) {\n            return OK;\n        }\n        else {\n            /* no way to know what type of error occurred */\n            ap_log_rerror(APLOG_MARK, APLOG_DEBUG, status, r,\n                          \"default_handler: ap_pass_brigade returned %i\",\n                          status);\n            return HTTP_INTERNAL_SERVER_ERROR;\n        }\n---------------------------------\nis this the same function? (i.e I need to check for r->status and c->aborted ?)\n", "id": 117331, "time": "2008-06-04T03:11:21Z", "creator": "rahul.g.nair@gmail.com", "creation_time": "2008-06-04T03:11:21Z", "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 42190, "is_private": false, "count": 9, "id": 123551, "time": "2008-12-26T19:55:14Z", "creator": "nick@webthing.com", "creation_time": "2008-12-26T19:55:14Z", "text": "In current versions, the CGI headers are not buffered, so this error doesn't arise.  Tested with your script with both mod_cgi and mod_cgid.\n\nIn a variant where the sleep is moved to before emitting the header, it returns Error 500.  As suggested in comments above, 504 would be better.  I\u00b4m marking this fixed, and committing a /trunk/ fix in r729586 to return 504 instead of 500 when a script times out having returned nothing at all."}]