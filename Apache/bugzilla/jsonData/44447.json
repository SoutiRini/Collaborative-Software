[{"count": 0, "attachment_id": null, "bug_id": 44447, "is_private": false, "id": 113857, "time": "2008-02-18T06:42:15Z", "creator": "konrad_w@gmx.de", "creation_time": "2008-02-18T06:42:15Z", "tags": [], "text": "Under certain circumstances the mod_include filter can't handle SSI directives\ncorrectly. If the buckets are of type TRANSITIVE (it means their buffer is\nallocated on the stack), the buffer is lost, whenever the method\nsend_parsed_content returns.\nIt means that the attribute values, which are determined in a previous call of\nsend_parsed_content are lost. This can be prevented by calling\napr_bucket_setaside(b,r->pool); after or before the bucket is inserted into the\ntemporary bucket brigade (ctx->tmp_bb). This must be done for the status\nPARSE_DIRECTIVE[_XXXXX] and PARSE_ARG[_XXXXX].\nThis is a rare case since normally the buckets are not of type TRANSITIVE but\nMMAP, but some filters make use of TRANSITIVE buckets."}, {"count": 1, "tags": [], "bug_id": 44447, "attachment_id": 21560, "id": 113880, "time": "2008-02-19T05:41:21Z", "creator": "harald@brokenerror.de", "creation_time": "2008-02-19T05:41:21Z", "is_private": false, "text": "Created attachment 21560\nA patch created by Konrad and me, fixing the problem.\n\nWe added calls to apr_bucket_setaside(b, r->pool) for every\nAPR_BUCKET_REMOVE(b) followed by APR_BRIGADE_INSERT_TAIL(ctx->tmp_bb, b).\n\n\nAnalysis of the problem: \n\nThe handler function in mod_include (includes_module()) gets called with\nTRANSIENT buckets pointing at a buffer allocated using malloc. The caller does\nthis by calling ap_rwrite. (This won't happen for static resources, since we\nwould get mmap'ed buckets or normal heap buckets, if mmap is not available).\n\nWhenever a directive crosses a bucket boundary, the mod_include parser in\nsend_parsed_content will append the current bucket (containing part of the\ndirective) to the brigade in ctx->tmp_bb to keep it around until the directive\nis completed in another bucket.\n\nIf the end of the currently parsed bucket brigade is reached before the end of\nthe directive is found, send_parsed_content returns, leaving the kept buckets\nin ctx->tmp_bb.\n\nAfter the call to ap_rwrite returns, the upstream module frees the buffer,\ninvalidating any buckets the mod_include has kept in ctx->tmp_bb, since there\nis no call to apr_bucket_setaside() in mod_include.\n\nOur fix is straight-forward and leaves out error checking for the following\nreasons:\n* always calling setaside is simpler than checking the tmp_bb before exiting\nsend_parsed_content \n* setaside is a no-op in the usual case where a static resource is filtered,\ncalling it introduces little overhead\n* Checking the return code of apr_bucket_setaside would not improve things\nmuch: if it worked without setaside, although setaside is not implemented, it\nwill continue to work correctly, if it didn't work before (for some custom\nbucket type), then it will stay that way. The existing bucket types either\nimplement setaside correctly after they have been read or have a no-op\nimplementation of setaside.\n* Using ap_save_brigade for the error checking aspect of it would require\nlarger changes (it needs a second brigade to copy from) and would add nothing:\nthe error recovery strategy is to call apr_bucket_read for it's side-effect of\nmorphing the bucket. apr_bucket_read has been applied to the bucket before we\nreach our call to setaside, doing it again has probably no additional effect."}, {"count": 2, "tags": [], "creator": "rpluem@apache.org", "attachment_id": null, "text": "Thanks for the patch. Please provide a patch against trunk. Patches must be\napplied to trunk first and get backported to the stable branches afterwards\nafter additional developer review.\n\n", "id": 113895, "time": "2008-02-19T12:35:18Z", "bug_id": 44447, "creation_time": "2008-02-19T12:35:18Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 44447, "attachment_id": 21568, "is_private": false, "id": 113913, "time": "2008-02-20T01:59:39Z", "creator": "harald@brokenerror.de", "creation_time": "2008-02-20T01:59:39Z", "text": "Created attachment 21568\npatch against trunk\n\nSource code inspection shows that the same problem should exists in trunk. Note\nthat there are now 4 places where apr_bucket_setaside is needed."}, {"count": 4, "attachment_id": null, "bug_id": 44447, "is_private": false, "id": 113917, "time": "2008-02-20T05:45:37Z", "creator": "rpluem@apache.org", "creation_time": "2008-02-20T05:45:37Z", "tags": [], "text": "Slightly modified version committed to trunk as r629456.\n(http://svn.apache.org/viewvc?view=rev&revision=629456). The first setaside for\npass_bb is not needed since this brigade is always sent down the filter chain.\nIf a later filter chooses not to process buckets in this brigade it is its\nobligation to set it aside properly."}, {"count": 5, "tags": [], "text": "Proposing this for backport to 2.2.x. I was able to trigger this behavior by running the response through a no-op ExtFilter ahead of mod_include using this large/dense shtml file:\n\nhttp://people.apache.org/~covener/set.shtml.txt (length changes after repeated requests)\n", "is_private": false, "id": 114299, "creator": "covener@gmail.com", "time": "2008-03-05T11:13:59Z", "bug_id": 44447, "creation_time": "2008-03-05T11:13:59Z", "attachment_id": null}, {"count": 6, "tags": [], "text": "Appears fixed in current 2.2.x.", "is_private": false, "id": 123535, "creator": "nick@webthing.com", "time": "2008-12-26T11:59:38Z", "bug_id": 44447, "creation_time": "2008-12-26T11:59:38Z", "attachment_id": null}, {"count": 7, "tags": [], "bug_id": 44447, "attachment_id": null, "is_private": false, "id": 133097, "time": "2009-12-23T11:49:08Z", "creator": "covener@gmail.com", "creation_time": "2009-12-23T11:49:08Z", "text": "2.2.x rev: http://svn.apache.org/viewvc?view=revision&revision=637902"}]