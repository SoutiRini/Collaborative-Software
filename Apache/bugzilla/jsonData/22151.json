[{"count": 0, "tags": [], "bug_id": 22151, "attachment_id": null, "text": "Ok, first off I'm using RedHat Linux 7.3, Sun JDK 1.4.2, Tomcat 4.1.24.  The \nserver is an IBM xSeries with Dual Pentium Xeon 2 GHz DP processors and 2 GB \nRAM.\n\nNow, I've been running Tomcat with the additional parameters \"-server -Xmx768m -\nXms384m\" and all has been working fine.  With the current load of about 10-15 \nrequests per second, the JVM uses about 500 MB of RAM and the system has about \n1.2 GB of RAM free.  The problem is that I need to put about 60 requests per \nsecond on this box and when I try to increase -Xmx to 1 GB of RAM or more, \nTomcat seems to lockup while starting with this error:\n\nAug 5, 2003 2:29:45 PM \norg.apache.tomcat.util.threads.ThreadPool$ControlRunnable run\nSEVERE: Caught exception executing \norg.apache.tomcat.util.net.TcpWorkerThread@107f742, terminating thread\njava.lang.OutOfMemoryError: unable to create new native thread\nat java.lang.Thread.start(Native Method)\nat org.apache.tomcat.util.threads.ThreadPool$ControlRunnable.<init>\n(ThreadPool.java:582)\nat org.apache.tomcat.util.threads.ThreadPool.openThreads(ThreadPool.java:460)\nat org.apache.tomcat.util.threads.ThreadPool.runIt(ThreadPool.java:293)\nat org.apache.tomcat.util.net.TcpWorkerThread.runIt(PoolTcpEndpoint.java:536)\nat org.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run\n(ThreadPool.java:619)\nat java.lang.Thread.run(Thread.java:534)", "id": 42202, "time": "2003-08-05T21:02:13Z", "creator": "mike@renegadeinternet.com", "creation_time": "2003-08-05T21:02:13Z", "is_private": false}, {"count": 1, "tags": [], "text": "I forgot to note that this error can be reproduced 100% of the time.  I \nrebooted the server dozens of times and it kept happening.  Although, it does \nnot seem to fail consistently at the same point.  When that error hit \ncatalina.out the JVM had anywhere between 160 MB and 220 MB of memory allocated \nto it.  The only way I got it working was to leave -Xmx at less than 1 GB of \nmemory.", "is_private": false, "id": 42205, "creator": "mike@renegadeinternet.com", "time": "2003-08-05T21:06:42Z", "bug_id": 22151, "creation_time": "2003-08-05T21:06:42Z", "attachment_id": null}, {"count": 2, "tags": [], "creator": "funkman@joedog.org", "text": "Use tomcat-user to debug and look at ulimit command.\n", "id": 42207, "time": "2003-08-05T21:10:44Z", "bug_id": 22151, "creation_time": "2003-08-05T21:10:44Z", "is_private": false, "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 22151, "is_private": false, "count": 3, "id": 42211, "time": "2003-08-05T21:35:17Z", "creator": "mike@renegadeinternet.com", "creation_time": "2003-08-05T21:35:17Z", "text": "Actually, I did that already.  Tried ulimit -s 2048 and it had no effect.  I \nwouldn't have posted this here if I hadn't exhausted myself, google, and tomcat-\nuser already.  I know better than that :)"}, {"count": 4, "tags": [], "bug_id": 22151, "attachment_id": null, "text": "I urge you to try the IBM 1.4.0 VM. I have recently helped put in production a 4\nCPU server with it (with Coyote HTTP/1.1), and it seemed to work very well.\nDefinitely, I didn't see any issues on startup.\nForget about the Sun VM on Linux IMO (the client JIT is slow, and the server JIT\nuses way too much memory, with questionable reliability).\nThat being said, you're filing a bug about Tomcat here, so you should try to\nisolate a problem with that (and I don't see how a bug triggered by -Xmx could\nbe caused by Tomcat).", "id": 42214, "time": "2003-08-05T21:52:47Z", "creator": "remm@apache.org", "creation_time": "2003-08-05T21:52:47Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 22151, "attachment_id": null, "text": "I agree with what you said, trying another JVM would definately help to isolate \nthe problem.  I'll give the IBM JVM a try and go from there.  That's better \nthan all zero of my alternative ideas.", "id": 42216, "time": "2003-08-05T22:22:08Z", "creator": "mike@renegadeinternet.com", "creation_time": "2003-08-05T22:22:08Z", "is_private": false}, {"attachment_id": null, "tags": [], "bug_id": 22151, "text": "Gave IBM JDK 1.4.1 a try and I'm having the same results unfortunately:\n\nAug 5, 2003 8:56:51 PM \norg.apache.tomcat.util.threads.ThreadPool$ControlRunnable run\nSEVERE: Caught exception executing \norg.apache.tomcat.util.net.TcpWorkerThread@33f093b9, terminating thread\njava.lang.OutOfMemoryError: JVMCI015:OutOfMemoryError, cannot create anymore \nthreads due to memory or resource constraints\n        at java.lang.Thread.start(Native Method)\n        at org.apache.tomcat.util.threads.ThreadPool$ControlRunnable.<init>\n(ThreadPool.java:582)\n        at org.apache.tomcat.util.threads.ThreadPool.openThreads\n(ThreadPool.java:460)\n        at org.apache.tomcat.util.threads.ThreadPool.runIt(ThreadPool.java:293)\n        at org.apache.tomcat.util.net.TcpWorkerThread.runIt\n(PoolTcpEndpoint.java:536)\n        at org.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run\n(ThreadPool.java:619)\n        at java.lang.Thread.run(Thread.java:568)", "count": 6, "id": 42219, "time": "2003-08-06T01:03:13Z", "creator": "mike@renegadeinternet.com", "creation_time": "2003-08-06T01:03:13Z", "is_private": false}, {"attachment_id": null, "tags": [], "bug_id": 22151, "is_private": false, "count": 7, "id": 42230, "time": "2003-08-06T07:12:44Z", "creator": "remm@apache.org", "creation_time": "2003-08-06T07:12:44Z", "text": "You can keep your bug open if it makes you happy, but I cannot do anything to\nfix it, as it doesn't look like a Tomcat issue. Maybe the cause is indeed that\nit can't create more threads ?"}, {"count": 8, "tags": [], "creator": "puckman@taglab.com", "is_private": false, "text": "\nPerhaps a silly question, but have you tried to run Tomcat on its own without your own code \ndeployed?", "id": 42236, "time": "2003-08-06T08:38:42Z", "bug_id": 22151, "creation_time": "2003-08-06T08:38:42Z", "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 22151, "is_private": false, "count": 9, "id": 42273, "time": "2003-08-06T16:39:11Z", "creator": "mike@renegadeinternet.com", "creation_time": "2003-08-06T16:39:11Z", "text": "Well, it seems to me that the ThreadPool shouldn't die when the JVM is out of \nmemory.  In my case, the JVM hasn't been allocated all of the memory it can be, \nso future attempts to create new threads would be likely to work.  Would it be \ntoo hard to catch this exception and make ThreadPool sleep for a few seconds?  \nI'll try to hack up the code and see what happens.  For now, I'll close this \nbug as it's being received with attitude."}, {"count": 10, "tags": [], "bug_id": 22151, "attachment_id": null, "text": "It really looks like a kernel/system config issue. OutOfMemory errors are the\nworst descriptive errors from java because they may be thrown even if there is\nplenty of memory left. (At least on another Unix platform)\n\nhttp://jakarta.apache.org/tomcat/faq/memory.html#why", "id": 42274, "time": "2003-08-06T16:44:49Z", "creator": "funkman@joedog.org", "creation_time": "2003-08-06T16:44:49Z", "is_private": false}]