[{"count": 0, "tags": [], "bug_id": 39961, "text": "If you use the ctor for Resource that passes a name() up to the attribute, such\nas when you give a custom resource a default name, then you cannot set a refid\non the resource. Because its name is already set.\n\nThe name attribute should (somehow) coexist with the refid, so that custom\nresources can set a default name if they feel like it. Otherwise, what is the\npoint in having a constructor that takes a name?", "id": 90866, "time": "2006-07-04T20:31:42Z", "creator": "stevel@apache.org", "creation_time": "2006-07-04T20:31:42Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 39961, "attachment_id": null, "id": 90910, "time": "2006-07-05T15:27:58Z", "creator": "mbenson@apache.org", "creation_time": "2006-07-05T15:27:58Z", "is_private": false, "text": "The constructor that takes a name is retained for BC with the original\n(smaller-scoped) Resource.  ;)  What if we put the tooManyAttributes check into\na protected method that a subclass could override?"}, {"count": 2, "tags": [], "creator": "stevel@apache.org", "text": "OK. I was thinking of just overriding getName() in my subclass, to return a\ndefault if none was given.", "id": 90915, "time": "2006-07-05T16:18:15Z", "bug_id": 39961, "creation_time": "2006-07-05T16:18:15Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 39961, "text": "yeah, I thought of that too, but thought you might have some reason for not\nwanting the default name to be class-level.  Or having to support another\nproperty to return instead.  So we should probably still extract the check IMO.", "id": 90918, "time": "2006-07-05T17:10:32Z", "creator": "mbenson@apache.org", "creation_time": "2006-07-05T17:10:32Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "creator": "bodewig@apache.org", "attachment_id": null, "id": 123428, "time": "2008-12-19T08:18:15Z", "bug_id": 39961, "creation_time": "2008-12-19T08:18:15Z", "is_private": false, "text": "<mappedresources>\n  <resource refid=\"...\"/>\n  <mergemapper to=\"newname\"/>\n</mappedresources>\n\na bit more verbose but does the trick."}]