[{"count": 0, "tags": [], "text": "If you attempt to include a schema into one that has a targetNamespace,\nit fails to correctly resolve the included component. The problem is\nwith line ~420 of XMLCatalogResolver:\n\n        // The namespace is useful for resolving namespace aware\n        // grammars such as XML schema. Let it take precedence over\n        // the external identifier if one exists.\n        String namespace = resourceIdentifier.getNamespace();\n        if (namespace != null) {\n            resolvedId = resolveURI(namespace);\n        }", "is_private": false, "id": 131936, "creator": "robert.streich@objectfx.com", "time": "2009-11-13T12:43:48Z", "bug_id": 48194, "creation_time": "2009-11-13T12:43:48Z", "attachment_id": null}, {"count": 1, "attachment_id": null, "creator": "robert.streich@objectfx.com", "text": "I don't know if this is viable, but this works:\n\n        // The namespace is useful for resolving namespace aware\n        // grammars such as XML schema. Let it take precedence over\n        // the external identifier if one exists.\n        String namespace = resourceIdentifier.getNamespace();\n        if (namespace != null) {\n           if (resourceIdentifier instanceof XSDDescription\n                 && XSDDescription.CONTEXT_INCLUDE == ((XSDDescription) resourceIdentifier).getContextType()) {\n              resolvedId = resolveSystem(resourceIdentifier.getLiteralSystemId());\n           } else {\n            resolvedId = resolveURI(namespace);\n           }\n        }", "id": 131945, "time": "2009-11-13T14:47:52Z", "bug_id": 48194, "creation_time": "2009-11-13T14:47:52Z", "tags": [], "is_private": false}, {"count": 2, "tags": [], "text": "Created attachment 24543\nSimple set up with included/imported schemas to illustrate bug.", "attachment_id": 24543, "id": 132017, "creator": "robert.streich@objectfx.com", "time": "2009-11-16T10:13:18Z", "bug_id": 48194, "creation_time": "2009-11-16T10:13:18Z", "is_private": false}]