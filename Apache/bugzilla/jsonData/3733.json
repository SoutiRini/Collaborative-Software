[{"count": 0, "tags": [], "bug_id": 3733, "attachment_id": null, "text": "After a bunch of headbanging, I *think* I may have found the problem I \nhave been having for a while now with regards to session serialization \nwithin Catalina. I don't have email access right now, so I'm reporting it \nhere...\n\nThe problem it seems is that the order of session de-serialization is not \ncorrect (it isn't dictated by the servlet api, so this is understandable), it \nshould execute something like this:\n\n#1. serialize sessions\n#2. servlet.destroy()\n#3. servlet.init()\n#4. de-serialize sessions\n\nInstead, it seems to be executing like this:\n\n#1. serialize sessions\n#2. servlet.destroy()\n#3. de-serialize sessions\n#4. servlet.init()\n\nNote that #1 and #2 may be reversed. I'm not sure. What I care about is \nthat #3 and #4 seemed to be mixed up. \n\nThe problem is that I have some static initializers that should be called for \na few classes in the servlet's init() method. However, they do not seem to \nbe called yet because static methods in those classes which rely on \nstatic data are null because the static init() methods for those classes \nhave not yet been called by the servlet's init() method.\n\nI hope that made sense. Remy or Craig, can you please tell me what the \ncurrent ordering is? If it is the case that the init() method is called *after* \nthe sessions are de-serialized, then that is the bug and that is bad for me.\n\n\nthanks,\n\n-jon", "id": 5789, "time": "2001-09-19T16:29:21Z", "creator": "jon@latchkey.com", "creation_time": "2001-09-19T16:29:21Z", "is_private": false}, {"count": 1, "attachment_id": null, "creator": "jon@latchkey.com", "text": "The Turbine process is this:\n\n#1. Turbine.init() (this is the servlet), initializes Torque.java with the right \nExtendedProperties and also calls Torque's init() method. The EP is \nstored within Torque as a static variable and the Torque init() method \ninternally initializes a couple static HashMaps and other stuff. The key \nhere is that Torque relies on static information within itself.\n\n#2. An object that depends on Torque is created and placed into the \nServlet Session. When this object is serialized, all of its static members \nare lost. One of those static members looks like this:\n\n    /** the mapbuilder for this class */\n    protected static final ActivityMapBuilder mapBuilder = \n        (ActivityMapBuilder)getMapBuilder(ActivityMapBuilder.CLASS_NAME);\n\nThe super.getMapBuilder(ActivityMapBuilder.CLASS_NAME) then makes a \ncall to Torque.getMapBuilder(String) which then depends on the static \ninternal HashMaps to have already been populated with data as a result \nof Torque.init() being called in the servlet.init()\n\n#3. When the classloader dumps and reloads, Catalina seems to first \nde-serialize the objects in the session. The reason I know this is that \nwhen the Torque.getMapBuilder() is called in order to re-populate the \nabove static final variable, it gets NPE's on the internal HashMaps.\n\nIt appears that the solution to this problem would be to call the servlet's \ninit() method first and then try to de-serialize the sessions. Hopefully this \ndescription will also provide information on creating a test case for this.\n\ncomments?", "id": 5799, "time": "2001-09-19T22:49:02Z", "bug_id": 3733, "creation_time": "2001-09-19T22:49:02Z", "tags": [], "is_private": false}, {"count": 2, "tags": [], "bug_id": 3733, "attachment_id": 583, "text": "Created attachment 583\nthis patch should hopefully fix the problem...", "id": 5800, "time": "2001-09-19T23:45:50Z", "creator": "jon@latchkey.com", "creation_time": "2001-09-19T23:45:50Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 3733, "attachment_id": null, "text": "the patch that i just attached fixes the problem. when i force a reload, the \nstack traces no longer print out.\n\nhowever, the only problem with this is that the init() method on the servlet \nstill doesn't get called at this point in time so i had to set the         \n\n<!-- Load this servlet at server startup time -->\n        <load-on-startup>5</load-on-startup>\n\nfor the servlet in the web.xml file.\n\nthis is an ok solution, but it should be documented that any servlet that \nneeds reloading has the load-on-startup set.\n\n-jon", "id": 5801, "time": "2001-09-19T23:47:38Z", "creator": "jon@latchkey.com", "creation_time": "2001-09-19T23:47:38Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 3733, "attachment_id": null, "text": "Thanks for the analysis. The lifecycle is relatively easy to figure out by \nlooking at StandardContext.start. \n\nI'm -1 for the patch. We can't init or load a servlet before the supporting \ncomponents (logger, context, servlet context) are created and / or started.\nThis is not a spec issue since the spec doesn't say anything about this.\nAs you point out, it's a special case anyway, since only init on startup \nservlets can have a chance to behave like that.\nI also have no idea how it can be fixed, except if we change the initialization \nof the manager (and load the serialized session in a post-start method).\n\nSo I vote WONTFIX (I'll let Craig close the bug if he approves), although it's \nmore CANTFIX than WONTFIX.", "id": 5807, "time": "2001-09-20T01:01:32Z", "creator": "remm@apache.org", "creation_time": "2001-09-20T01:01:32Z", "is_private": false}, {"count": 5, "tags": [], "creator": "jon@latchkey.com", "text": "Well, I beg to differ about CANTFIX or WONTFIX. \n\nThis is a fundamental problem with the Servlet Spec then. I'm going to \npost to the JSR-053 list about this and see what other containers behavior \nis. If it is the case that others implement this properly, then I think that \nCatalina should be fixed to follow what the other containers are doing.\n\nI understand that it is a fundamental problem within Catalina to fix it. It isn't \nan easy fix, but I really think that it needs to be done because what we are \ndoing is not outside of the realm of correctness. :-)\n\n-jon", "id": 5808, "time": "2001-09-20T01:06:40Z", "bug_id": 3733, "creation_time": "2001-09-20T01:06:40Z", "is_private": false, "attachment_id": null}, {"count": 6, "tags": [], "bug_id": 3733, "text": "let me also point out that my patch is working perfectly for me. i haven't \nhad any problems with it.", "id": 5809, "time": "2001-09-20T01:10:56Z", "creator": "jon@latchkey.com", "creation_time": "2001-09-20T01:10:56Z", "is_private": false, "attachment_id": null}, {"count": 7, "tags": [], "creator": "remm@apache.org", "text": "The patch would cause problems in some specific situations, not in the general \ncase. If it turns out we need to fix that issue because it's a spec compliance \nbug, we'll need a better fix.\n\nI agree we should ask the Servlet API expert group on the subject.", "id": 5810, "time": "2001-09-20T01:31:19Z", "bug_id": 3733, "creation_time": "2001-09-20T01:31:19Z", "is_private": false, "attachment_id": null}, {"count": 8, "tags": [], "creator": "craig.mcclanahan@sun.com", "attachment_id": null, "text": "A proposed change for this issue (per discussion on TOMCAT-DEV) has been\ncommitted to both branches, and will show up in the 20010922 nightly build. \nCould you please try this in your environment, to make sure it does change the\nbehavior (and doesn't cause any other problems)?\n\nI'll leave the bug report open for a couple of days for any further feedback.\n", "id": 5882, "time": "2001-09-21T09:40:08Z", "bug_id": 3733, "creation_time": "2001-09-21T09:40:08Z", "is_private": false}, {"text": "the latest patch by craig seems to work fine. I cannot reproduce the \nproblem anymore. i am also changing the resolution to FIXED.\n\nthanks craig. \n\nThis is one more example where open source software development is \nking. I couldn't even begin to imagine trying to solve this problem with a \ncommercial closed source container.", "tags": [], "bug_id": 3733, "attachment_id": null, "count": 9, "id": 5891, "time": "2001-09-21T12:11:59Z", "creator": "jon@latchkey.com", "creation_time": "2001-09-21T12:11:59Z", "is_private": false}]