[{"count": 0, "tags": [], "creator": "dmo@hotlink.com.br", "text": "There are two problems when the user assign the content-type of the message\n\n1. The subject of the message is set without specifying the charset (see \nmessage.setSubject(myparent.getSubject()) on the SendTag file).\n\n2. The charset property of the MailTag is overriden always by the message tag, \neven in the case that where the charset is set to null (see myparent.setCharset\n(charset), on de MessageTag file).\n\nThese two problems causes the subject of the message to appear human unreadible \non the messages with foreign charset (like ISO-8859-1), on some mail clients \nprograms, like Eudora.\n\nI fixed up adding the charset to the subject, and adding a new taglib charset\n(just in the case that I want to load up the charset from a bean or something \nlike this), just like the other tags (from, server etc), where you say the \nfields in the parameter of the taglib, or in a separate taglib.", "id": 57228, "time": "2004-05-11T20:18:52Z", "bug_id": 28913, "creation_time": "2004-05-11T20:18:52Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "creator": "mguillemot@yahoo.fr", "text": "What about using the current response's charset if no charset is specified? I\nguess that in most of the cases it would be the right one.", "id": 57267, "time": "2004-05-12T07:15:20Z", "bug_id": 28913, "creation_time": "2004-05-12T07:15:20Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "creator": "mguillemot@yahoo.fr", "is_private": false, "text": "Daniel, thanks for your bug report, I've found that I had the same problem.\n\nFor my part it appears only for the subject, for instance when the default\ncharset is ASCII (under linux setting LANG=C before starting Tomcat), a subject\nlike:\nRegistrierungsbest\u00e4tigung\ncomes as:\n=?ANSI_X3.4-1968?Q?Registrierungsbest=3Ftigung?=\n\nThe characters like \u00e4, \u00f6, \u00fc etc contained in the body of the message are\ndisplayed correctly (eg using Mozilla mailer v1.5).\n\nFor my part I've solved this setting the email's subject using the current\nresponse's char encoding in SendTag. I attach this (simple) patch.", "id": 57409, "time": "2004-05-14T12:13:54Z", "bug_id": 28913, "creation_time": "2004-05-14T12:13:54Z", "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 28913, "attachment_id": 11546, "text": "Created attachment 11546\nPatch against SendTag 1.19 for subject's char encoding", "id": 57410, "time": "2004-05-14T12:14:58Z", "creator": "mguillemot@yahoo.fr", "creation_time": "2004-05-14T12:14:58Z", "is_private": false}, {"count": 4, "tags": [], "text": "Resolving. Taglib has been retired.", "is_private": false, "id": 132417, "creator": "bayard@apache.org", "time": "2009-11-29T19:40:14Z", "bug_id": 28913, "creation_time": "2009-11-29T19:40:14Z", "attachment_id": null}]