[{"attachment_id": null, "tags": [], "creator": "brian.dawson@opbu.xerox.com", "is_private": false, "count": 0, "id": 21217, "time": "2002-08-18T06:59:02Z", "bug_id": 11800, "creation_time": "2002-08-18T06:59:02Z", "text": "Build & Platform: Apache/2.0.36 Sun Solaris 5.8\n\nWithin the 1.3.x implementation of mod_proxy, response headers appear to be \nhandled differently in 2.0 when a CRLF does not separate the header from the \nmessage body. Apache 1.3.x handles this gracefully by continuing to process \nthe request, however, 2.0 sends back a 502 error when a CRLF separator is not \npresent. The following response header worked in 1.3, but now breaks in 2.0:\n\nHTTP/1.1 200 OK\nServer: Microsoft-IIS/4.0\nDate: Sun, 18 Aug 2002 06:18:39 GMT\nContent-type: text/html\n<HTML>            <-- NO CRLF SEPARATING HEADER FROM BODY!\n...\n</HTML>\n\nWill 2.0 not incorporate this functionality as well?\n\nThanks,\n\nBrian"}, {"count": 1, "tags": [], "bug_id": 11800, "attachment_id": null, "text": "\n  While this is obviously the proxied server's own bug, I've forwarded this\n  to the list for discussion about...\n\n  1. principle of least astonishment ('worked' in 1.3, not in 2.0), and\n  2. leniency in what the server accepts, strict in what it sends\n\n  And I can confirm this continued to work as you have reported through 1.3.27,\n  the current development tree.\n", "id": 21547, "time": "2002-08-22T17:33:47Z", "creator": "wrowe@apache.org", "creation_time": "2002-08-22T17:33:47Z", "is_private": false}, {"count": 2, "tags": [], "text": "Unfortunately, I cannot confirm the fact that HEAD of 1.3.27-dev gracefully continues to \nhandle the request. Instead, it appears to perform as it should and error out. The HTTP \nspec is very clear on this.\n\nOnly on the principle of least-astonishment would I say we should allow this, but working \naround broken implementations by ignoring and disregarding the RFC is *not* a fruitful \npath.", "is_private": false, "id": 23260, "creator": "jim@apache.org", "time": "2002-09-23T18:10:03Z", "bug_id": 11800, "creation_time": "2002-09-23T18:10:03Z", "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 11800, "attachment_id": null, "is_private": false, "id": 23272, "time": "2002-09-23T21:04:16Z", "creator": "wrowe@apache.org", "creation_time": "2002-09-23T21:04:16Z", "text": "Actually, your description was not quite accurate.\n\nGiven the response\n\nHTTP/1.1 200 OK\nServer: Microsoft-IIS/4.0\nDate: Sun, 18 Aug 2002 06:18:39 GMT\nContent-type: text/html\n<HTML>            <-- NO CRLF SEPARATING HEADER FROM BODY!\n...\n</HTML>\n\nApache would forward the response as;\n\n\nHTTP/1.1 200 OK\nServer: Microsoft-IIS/4.0\nDate: Sun, 18 Aug 2002 06:18:39 GMT\nContent-type: text/html\n                          << second CR/LF here, but missing <HTML>!\n...\n</HTML>\n\nWhatever text appeared on that 'broken' header line would be\nconsumed by Apache 1.3.x proxies and the remainder of the request\nwould be processed as the body.\n\nIf we arrange a patch or agree to a convention for tollerrating this\nbehavior for Proxy, CGI and ISAPI responses, I suggest we do NOT eat\nthat non-header line, but pass it along as part of the response body.\n\n"}, {"attachment_id": null, "tags": [], "bug_id": 11800, "is_private": false, "count": 4, "id": 23278, "time": "2002-09-23T22:01:33Z", "creator": "wrowe@apache.org", "creation_time": "2002-09-23T22:01:33Z", "text": "Jim commented\n> Only on the principle of least-astonishment would I say we should allow this, \n> but working around broken implementations by ignoring and disregarding the RFC \n> is *not* a fruitful path.\n\nI agree it sucks.  But the same parser and evaluation is used for CGI and ISAPI,\nand many users have propritary (3rd party) CGI-type applications in compiled form\nthat they CANNOT easily replace or modify.\n\nI've seen similar reports of this bug on the CGI side of the equation.\n\nAs long as we once tollerated this carelessness, and it led to the proliferation\nof these borked clients, I'm afraid in the interest of alieviating the mental \nand physical health of puzzled administrators we should be somewhat gracious\nin handling these exceptions.  Neither MS nor the CGI authors will suffer the\nulcers from this, only our fans and users.\n\n\nproblems (mental "}, {"count": 5, "tags": [], "text": "\n  The next release will include the ProxyBadHeader directive; providing you\n  the option to handle bad headers with IsError, Ignore, or StartBody\n  semantics.  The IsError case works as 2.0 does today, the Ignore case will\n  still look for the two successive cr/lf pairs but discarding the invalid \n  header lines (as 1.3 really does today), while StartBody will behave as \n  you are hoping, starting the response body with the first bad header line.\n\n", "is_private": false, "id": 28757, "creator": "wrowe@apache.org", "time": "2002-12-30T18:11:41Z", "bug_id": 11800, "creation_time": "2002-12-30T18:11:41Z", "attachment_id": null}]