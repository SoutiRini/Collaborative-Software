[{"count": 0, "tags": [], "bug_id": 52474, "attachment_id": 28163, "id": 152841, "time": "2012-01-17T05:41:49Z", "creator": "heliofrota@gmail.com", "creation_time": "2012-01-17T05:41:49Z", "is_private": false, "text": "Created attachment 28163\ndebugging tomcat source\n\nDo not load listeners declared with blank spaces on tld file.\nRemoving blank spaces the application run."}, {"count": 1, "tags": [], "bug_id": 52474, "attachment_id": 28163, "id": 152842, "time": "2012-01-17T05:43:30Z", "creator": "heliofrota@gmail.com", "creation_time": "2012-01-17T05:43:30Z", "is_private": false, "text": "Comment on attachment 28163\ndebugging tomcat source\n\nImage eclipse debugging attached."}, {"count": 2, "tags": [], "bug_id": 52474, "attachment_id": null, "text": "The error is in the TLD file, not how Tomcat handles it.", "id": 152878, "time": "2012-01-18T09:32:50Z", "creator": "markt@apache.org", "creation_time": "2012-01-18T09:32:50Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 52474, "text": "Hello Mark Thomas,\n\nServlet specification 2.5:\n\n\"SRV.13.2\n\nRules for Processing the Deployment Descriptor\n\nThis section lists some general rules that Web containers and developers must note concerning the processing of the deployment descriptor for a Web application.\n\n\u2022 Web containers must remove all leading and trailing whitespace, which is de-\nfined as \u201cS(white space)\u201d in XML 1.0 (http://www.w3.org/TR/2000/WD-xml-\n2e-20000814), for the element content of the text nodes of a deployment de-\nscriptor.\"\n\nJSP Specification:\n\nJSP.7.1.9\nEvent Listeners\nA tag library may include classes that are event listeners (see the Servlet 2.5\nspecification). The listeners classes are listed in the tag library descriptor and the JSP container automatically instantiates them and registers them. A Container is required to locate all TLD files (see Section JSP.7.3.1 for details on how they are identified), read their listener elements, and treat the event listeners as extensions of those listed in web.xml.\nThe order in which the listeners are registered is undefined, but they are\nregistered before application start.\n\nSo if the TLD file should be treated as an extension of the web.xml file, so the container should deal with the removal of any blank space right ?", "id": 152881, "time": "2012-01-18T10:26:50Z", "creator": "heliofrota@gmail.com", "creation_time": "2012-01-18T10:26:50Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 52474, "is_private": false, "text": "The text of the JSP specification doesn't include any details on how TLDs should be parsed. I can see where you are coming from with that chain of references but the meaning of those is that listeners defined in TLDs are equivalent to listeners defined in web.xml.\n\nThere is, however, a definitive answer if one looks at the Java EE XSDs.\nListeners in TLDs are of type javaee:listenerType\njavaee:listenerType contains a listener-class of type javaee:fully-qualified-classType\njavaee:fully-qualified-classType has a base type of javaee:string\nThe definition of javaee:string requires that leading and trailing white space is removed.\n\nTherefore, the correct behaviour is to remove the leading and trailing white space. It looks like this may affect many more elements than just the listeners.", "id": 152971, "time": "2012-01-20T11:38:35Z", "creator": "markt@apache.org", "creation_time": "2012-01-20T11:38:35Z", "attachment_id": null}, {"count": 5, "tags": [], "creator": "heliofrota@gmail.com", "attachment_id": null, "text": "On org.apache.catalina.core.StandardContext class line 4701 what is the impact of adding a call to trim() ?\n\n\ntry {\n    results[i] = instanceManager.newInstance(listeners[i]);\n}\n...\n\n\ntry {\n    results[i] = instanceManager.newInstance(listeners[i].trim());\n}\n...", "id": 152973, "time": "2012-01-20T12:25:57Z", "bug_id": 52474, "creation_time": "2012-01-20T12:25:57Z", "is_private": false}, {"count": 6, "tags": [], "bug_id": 52474, "is_private": false, "text": "That would work but I prefer fixing the problem at the source - during the parsing.\n\nNormally, the digester trims white space, hence web.xml elements should be OK. Listeners in TLDs require special handling so the generic digester code that strips the white space isn't used. I have added a trim() to the listener handling code.\n\nThe fix has been made to trunk and 7.0.x and will be included in 7.0.26 onwards.", "id": 152983, "time": "2012-01-20T21:21:07Z", "creator": "markt@apache.org", "creation_time": "2012-01-20T21:21:07Z", "attachment_id": null}, {"count": 7, "tags": [], "bug_id": 52474, "attachment_id": null, "is_private": false, "id": 152990, "time": "2012-01-21T02:30:58Z", "creator": "heliofrota@gmail.com", "creation_time": "2012-01-21T02:30:58Z", "text": "Thank you for your attention\nThe Java community thanks you.\n\n\nBest regargs,\nHelio Frota"}]