[{"count": 0, "tags": [], "bug_id": 27475, "attachment_id": null, "id": 53518, "time": "2004-03-05T15:38:24Z", "creator": "Jim.Myers@pnl.gov", "creation_time": "2004-03-05T15:38:24Z", "is_private": false, "text": "In org.apache.webdav.lib.methods.AclMethod (2.0beta1), line 199 checks the \nace.isInherited() flag to decide whether to add the inerited tag to the \nrequest (making the new ace inherited), but line 130 checks the same flag and \nskips any ace with inherited == true. Line 130 is attempting to avoid \nsubmitting inherited aces that were previously retrieved from the server, but \nit should probably be checking that (ace.getInheritedFrom() != null) instead \n(I'm assuming that this is always set for an inherted ace retrieved from the \nserver, but have not checked. If this is not true, then Ace needs a separate \nflag to indicate that the ace is new and should be submitted with the \ninherited element.)"}, {"count": 1, "tags": [], "creator": "msmith@apache.org", "text": "It never makes sense to set an ACE as 'inherited' - you'd have to set it on a\ndifferent URI. What _can_ make sense is to allow it to be set (or not set) as\n\"inheritable\" (i.e. things below it in the directory tree will inherit this ACE,\nbut this ACE _at this path_ isn't actually inherited). \n\nThis currently isn't possible - ACEs are always set as \"inheritable\".\n\nThere's no way to control this in the ACL spec (last time I checked, anyway) -\nthe ACL spec basically leaves all the semantics of ACL inheritance up to the\nspecific server implementation.\n\nClosing as INVALID since we can't do this due to spec limitations.", "id": 53689, "time": "2004-03-09T00:16:17Z", "bug_id": 27475, "creation_time": "2004-03-09T00:16:17Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 27475, "attachment_id": null, "id": 53703, "time": "2004-03-09T04:38:52Z", "creator": "Jim.Myers@pnl.gov", "creation_time": "2004-03-09T04:38:52Z", "is_private": false, "text": "How about removing the always-false logic in line 199-202 that caused me to \nassume that putting a <D:inherited/> tag in was a valid way to imply \ninheritability?"}, {"count": 3, "attachment_id": null, "bug_id": 27475, "is_private": false, "id": 53704, "time": "2004-03-09T05:01:45Z", "creator": "msmith@apache.org", "creation_time": "2004-03-09T05:01:45Z", "tags": [], "text": "I think this is done this way because the ACL spec does actually allow you to\nset this (the <D:inherited/> tag is allowed by the DTD). This is only because\nthe DTD is shared between gettings the ACL and setting it, though - the spec\ndoes not give any semantics for <inherited/> being set on a request (and,\nindeed, it never makes sense - you explicitly CANNOT set an inherited ACE with\nan ACL request - you have to set it on the path which you want to inherit FROM).\n\nSo, what this part of the code does is allow you to reconstruct the ACL sent by\na server - even though you can't actually set this ACL on the resource.\n\nI'll leave this open if you want, but I won't make this change as I don't\nconsider myself sufficiently familiar with the client code any more. Hopefully\nsomeone who is will review this."}, {"count": 4, "tags": [], "text": "I agree that the spec says nothing about how to set inheritable (a word that \nonly appears in the old advanced acl draft anyway) and that inherited is a \nrelated but separate concept. My re-open is pretty minor - just cleanup. Line \n130 says to ignore aces with isInherited set (continue in the while loop), so \nthere is no way for line 199 to ever be true - a good thing since writing the \ninherited ace in the request does not make sense as you say. ", "is_private": false, "id": 53706, "creator": "Jim.Myers@pnl.gov", "time": "2004-03-09T05:32:14Z", "bug_id": 27475, "creation_time": "2004-03-09T05:32:14Z", "attachment_id": null}, {"count": 5, "tags": [], "text": "I have removed the statement that could never be reached.\nAbove all, we agree that you cannot set an inherited ACE from a WebDAV call.", "is_private": false, "id": 54397, "creator": "ib@fiz-chemie.de", "time": "2004-03-22T16:35:09Z", "bug_id": 27475, "creation_time": "2004-03-22T16:35:09Z", "attachment_id": null}]