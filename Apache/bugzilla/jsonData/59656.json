[{"count": 0, "tags": [], "bug_id": 59656, "attachment_id": null, "text": "Hi all,\n\nI'd like to propose a new configuration setting for \"mod_fcgid\". The source code changes to review follow:\n- The whole patch compared to version 2.3.9: https://github.com/famzah/mod_fcgid/compare/2.3.9...maxnowait?diff=split&name=maxnowait\n- The whole patch as a single file: https://github.com/famzah/mod_fcgid/compare/2.3.9...maxnowait.patch?diff=unified&name=maxnowait\n- Every single commit compared to version 2.3.9: https://github.com/famzah/mod_fcgid/commits/maxnowait\n- There should be no merge conflicts with the current \"trunk\" version 2.3.10.\n\nThe motivation is that the current behavior to queue up new pending requests differs from the RLimitNPROC directive behavior. When there is a spike in the web hits, lots of Apache children get busy just waiting for up to 30+ seconds to get an idle FastCGI process. Thus we \"waste\" Apache children doing nothing while they could serve static content. This also puts unneeded memory pressure. Additionally, users today won't wait for a page to load, if it takes more than a few seconds, and we'd rather notify them that we are currently overloaded by sending them a 503 HTTP response immediately.\n\nHere is the documentation for the new directive: http://www.famzah.net/temp/FcgidMaxProcessesUsedNoWait.docs.txt\n\nLet me know what you think.\n\nBest regards.\n--Ivan", "id": 191372, "time": "2016-06-02T08:53:35Z", "creator": "famzah@famzah.net", "creation_time": "2016-06-02T08:53:35Z", "is_private": false}, {"count": 1, "tags": [], "creator": "famzah@famzah.net", "attachment_id": null, "is_private": false, "id": 193802, "time": "2016-09-19T08:31:01Z", "bug_id": 59656, "creation_time": "2016-09-19T08:31:01Z", "text": "It's been four months since I originally proposed this new feature in \"mod_fcgid\". During this time I've tested and deployed it on hundreds of busy production servers. It works as expected. If enabled, web visitors get an immediate response when FastCGI is overloaded, and no RAM is over-utilized."}]