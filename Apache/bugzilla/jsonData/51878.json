[{"count": 0, "tags": [], "creator": "galt@soe.ucsc.edu", "is_private": false, "text": "2.2.21 is not compliant for byterange 0- returning 200 instead of 206.\n\nThis breaks our software.\nWe see the 200 response as a failure to understand the byterange request.\n\nhttp://httpd.apache.org/security/CVE-2011-3192.txt\nThe fixes for CVE-2011-3192 in 2.2.20 and 2.2.21 are causing\nservers to return 200 instead of 206 for this case.\n(see the CAVEATS section of CVE-2011-3192).\n\nRFC\nhttp://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html\n\nSection 14.35.1 Byte Ranges says that, if the requested range is satisfiable, \nand 0- certainly is, then \"the server SHOULD return a response with a status of 206 (Partial Content) containing the satisfiable ranges of the entity-body. \"\n\nPeople everywhere should not have to dink around with their clients software.\nYou should follow the standard.  It should be easy for you to fix this.\n\n-Thank you!\nGalt Barber\nUCSC Genome Browser", "id": 149676, "time": "2011-09-22T23:13:08Z", "bug_id": 51878, "creation_time": "2011-09-22T23:13:08Z", "attachment_id": null}, {"count": 1, "tags": [], "creator": "wrowe@apache.org", "is_private": false, "text": "As a request for 0- is satisfiable as either a 200, a 206 single item response, or a 206 multiple ranges response, the server appears free to make the most efficient bandwidth and processing cycles election of responses.\n\nAll clients must degrade gracefully to 200 replies, per spec, and changing this newly introduced behavior is very unlikely.", "id": 149678, "time": "2011-09-22T23:28:09Z", "bug_id": 51878, "creation_time": "2011-09-22T23:28:09Z", "attachment_id": null}, {"count": 2, "tags": [], "creator": "galt@soe.ucsc.edu", "text": "Here's what someone else wrote on the issue:\n\nhttps://developer.mozilla.org/en/Configuring_servers_for_Ogg_media\n\n<quote>\n\nHandle HTTP 1.1 byte range requests correctly\n\nIn order to support seeking and playing back regions of the media that aren't yet downloaded, Gecko uses HTTP 1.1 byte-range requests to retrieve the media from the seek target position. In addition, if you don't serve X-Content-Duration headers, Gecko uses byte-range requests to seek to the end of the media (assuming you serve the Content-Length header) in order to determine the duration of the media.\n\nYour server should accept the \"Accept-Ranges: bytes\" HTTP header if it can accept byte-range requests. It must return \"206: Partial content\" to all byte range requests; otherwise, Gecko can't be sure you actually support byte range requests.\n\nYour server must also return \"206: Partial Content\" for the request \"Range: bytes=0-\" as well.\n\n</quote>", "id": 149679, "time": "2011-09-22T23:36:50Z", "bug_id": 51878, "creation_time": "2011-09-22T23:36:50Z", "is_private": false, "attachment_id": null}, {"count": 3, "attachment_id": null, "bug_id": 51878, "is_private": false, "id": 149715, "time": "2011-09-23T21:44:58Z", "creator": "sf@sfritsch.de", "creation_time": "2011-09-23T21:44:58Z", "tags": [], "text": "In addition to gecko (i.e. firefox) and libavformat (as reported on the dev list), vlc is also broken by this change. This means that it breaks quite a few popular video players. Therefore I am for reverting this change. We have workarounds for other clients in the code, too.\n\nMaybe Roy can get it clarified in HTTP/1.1bis that this is expected behaviour, and then we can change it back again in httpd 3.0."}, {"count": 4, "attachment_id": null, "bug_id": 51878, "text": "trunk: r1175980, r1175992\n2.2.x: r1177080 will be in 2.2.22", "id": 149927, "time": "2011-09-28T21:50:19Z", "creator": "sf@sfritsch.de", "creation_time": "2011-09-28T21:50:19Z", "tags": [], "is_private": false}, {"count": 5, "tags": [], "bug_id": 51878, "attachment_id": null, "text": "Thanks for the quick fix!\nAny idea when 2.2.22 will be released?\nWe have users that will be eager to get it.", "id": 149930, "time": "2011-09-28T23:32:35Z", "creator": "galt@soe.ucsc.edu", "creation_time": "2011-09-28T23:32:35Z", "is_private": false}, {"count": 6, "tags": [], "bug_id": 51878, "attachment_id": null, "text": "There are no plans at present.\n\n2.2.22 isn't likely to be released until we have feedback from the community\nwho report such issues... sf gave you the link to the patch (click on r1177080 \nabove), if you can apply to 2.2.21 and report back if it resolves all of your\nobserved issues, or if you continue to see misbehavior, this would be very\nhelpful towards moving to the 2.2.22 release.\n\nFor completeness, here's my own counter-argument documenting why reverting this behavior is appropriate from a bandwidth consumption perspective;\n\nhttp://mail-archives.apache.org/mod_mbox/httpd-dev/201109.mbox/%3C4E80BDF7.8040601@rowe-clan.net%3E", "id": 149931, "time": "2011-09-28T23:46:17Z", "creator": "wrowe@apache.org", "creation_time": "2011-09-28T23:46:17Z", "is_private": false}, {"count": 7, "tags": [], "text": "We have tested the patch here at UCSC against 2.2.21 and it worked fine.", "is_private": false, "id": 150206, "creator": "galt@soe.ucsc.edu", "time": "2011-10-05T18:42:15Z", "bug_id": 51878, "creation_time": "2011-10-05T18:42:15Z", "attachment_id": null}, {"count": 8, "tags": [], "creator": "galt@soe.ucsc.edu", "text": "Just to make the point, if the client software asks for x,y,z,\nbut apache returns w (even if technically w is a superset of x,y,z),\nthen the client will know what to do with w.\n\nThe way we use apache here is for random access to huge files,\noften 180GB or larger. We sure as heck don't want the whole file back.\nWe usually read the header block (request 1), which tells \nwhere to find the index (request 2), which tells us were \nto jump to in the data (request 3).  Of course we cache things.\nWe do not ask for multiple blocks at once.\n\nWith some formats, we are able to determine in advance how\nmuch we are reading, but with others we do not know ahead of \ntime when we will stop reading, so that the range end is unknown.\n\nSince 200 is what servers that do not support byteranges return,\nwe reject those servers as soon as we see the header.\nIt must be 206 to continue.  The fact that there is just one \ncase where the part is equal to the whole, does not mean\nthat we want a 200 instead of a 206.", "id": 150211, "time": "2011-10-05T20:08:29Z", "bug_id": 51878, "creation_time": "2011-10-05T20:08:29Z", "is_private": false, "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 51878, "text": "(In reply to comment #8)\noops, meant to say:\n\n> then the client will NOT know what to do with w.", "count": 9, "id": 150212, "time": "2011-10-05T20:13:13Z", "creator": "galt@soe.ucsc.edu", "creation_time": "2011-10-05T20:13:13Z", "is_private": false}, {"count": 10, "attachment_id": null, "bug_id": 51878, "is_private": false, "id": 155170, "time": "2012-03-21T11:39:21Z", "creator": "matty.roland1@gmail.com", "creation_time": "2012-03-21T11:39:21Z", "tags": [], "text": "When \"killapache.pl\" script is executed against Opensource Apache 2.2.22 Windows binary, it shows \"host seems vuln\" message. This behaviour was not observed in Apache 2.2.21 version. Whether this means CVE-2011-3192 vulnerability is re-introduced in Opensource Apache 2.2.22 version while fixing the below byterange regression?\n \n*) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20:\nA range of '0-' will now return 206 instead of 200. PR 51878.\n[Jim Jagielski]"}, {"attachment_id": null, "tags": [], "bug_id": 51878, "is_private": false, "count": 11, "id": 155172, "time": "2012-03-21T12:04:32Z", "creator": "covener@gmail.com", "creation_time": "2012-03-21T12:04:32Z", "text": "(In reply to comment #10)\n> When \"killapache.pl\" script is executed against Opensource Apache 2.2.22\n> Windows binary, it shows \"host seems vuln\" message. This behaviour was not\n> observed in Apache 2.2.21 version. Whether this means CVE-2011-3192\n> vulnerability is re-introduced in Opensource Apache 2.2.22 version while fixing\n> the below byterange regression?\n> \n> *) Fix a regression introduced by the CVE-2011-3192 byterange fix in 2.2.20:\n> A range of '0-' will now return 206 instead of 200. PR 51878.\n> [Jim Jagielski]\n\nNo, it means killapache.pl has crude detection for vulnerable hosts.  It flags any system that responds to range headers."}]