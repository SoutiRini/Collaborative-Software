[{"count": 0, "tags": [], "bug_id": 38407, "attachment_id": null, "id": 85074, "time": "2006-01-26T23:10:55Z", "creator": "beafdefx@yahoo.com", "creation_time": "2006-01-26T23:10:55Z", "is_private": false, "text": "This is using a Windows/Cygwin environment.\n\nWhen doing any cvs operation that requires use of cvspass, if that cvspass file\nuses dos style line terminators, you will get an \"authorization failed\" message\nfrom the CVS server.  I presume this is because the extra carriage return \\r is\ninterpreted to be part of the password in cvspass.\n\nIf the file uses unix-style line terminators, this is not a problem.  However,\nanyone who has installed their Cygwin to use dos style line terminators will\nautomatically get a dos style .cvspass which will always cause ant cvs tasks to\nfail."}, {"count": 1, "attachment_id": null, "bug_id": 38407, "is_private": false, "id": 85084, "time": "2006-01-27T05:34:41Z", "creator": "kevin.jackson@it.fts-vn.com", "creation_time": "2006-01-27T05:34:41Z", "tags": [], "text": "I'm not positive about this but I think this may have something to do with how\nExecute builds it's command line.  If you use cygwin and create a .cvspass file\nwith (cygwin dos style cr/lf) and then later the execute task runs CVS (or\nrather AbstractCVSTask), it will try to get the line.separator - now if Cygwin\nreturns an lf instead of cr/lf, then the variable will be chunked to include the\ncr ie:\n\n.cvspass file:\npserver..... =mypasscr/lf\n\nExecute -> cygwin\n\"give me my lin.separator (line 169)\"\nExecute <- cygwin\n\"ok here you are lf\"\nExecute\n\"oh right *nix off we go...\"\npserver..... =mypasscr/lf\nExecute\n\"hmm mypasscr (line break)\n\nIf you follow my train of thought there.\n\nSo it may mean that Execute will have to be a little smarter, or maybe cygwin is\nreturning the wrong value from a System.getProperty call (hang on testing...) -\nnope that theory is wrong, getProperty returns cr/lf as it should.\n\nKev\n\nI've tried the cvspass task and it does create a cr/lf on cygwin, but I don't\nhave an internal CVS to try this out with - (we're all SVN here) "}, {"count": 2, "tags": [], "bug_id": 38407, "text": "Here's what's confusing.  The JDK doesn't run as a cygwin-controlls process, so\nit should be bound to cygwin's notion of a line terminator.  It should use the\nplatform default, which for Windows is CRLF.  Therefore, everything that deals\nwith lines in Java/Windows should consider CRLF to be a line terminator.\n\nMy cygwin is set up to use CRLF as a line terminator.  One of the reasons for\nthis is to smooth interactions like this between cygwin and Java.  I don't want\nto have to worry about line terminator differences.  So even if theoretically\nJava is asking cygwin for its line terminator, it should also be getting CRLF.\n\nI looked at AbstractCVSTask and it wasn't immediately evident how the cvspass\nfile is being dealt with.", "id": 85125, "time": "2006-01-27T19:29:27Z", "creator": "beafdefx@yahoo.com", "creation_time": "2006-01-27T19:29:27Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "text": "The cvspass file is provided to the cvs executable via the system environement.\nPlease check if using cvs directly, using the same cvspass file, gives the same\nproblems. If yes it is a problem of the cvs command on your system", "attachment_id": null, "id": 85376, "creator": "jkf@apache.org", "time": "2006-02-03T01:01:27Z", "bug_id": 38407, "creation_time": "2006-02-03T01:01:27Z", "is_private": false}, {"count": 4, "attachment_id": null, "bug_id": 38407, "is_private": false, "id": 85387, "time": "2006-02-03T16:21:48Z", "creator": "beafdefx@yahoo.com", "creation_time": "2006-02-03T16:21:48Z", "tags": [], "text": "Both unix and dos line terminators in my ~/.cvspass work fine for my command\nline cvs.\n\nI don't see a way to specify a cvspass file to the cvs command line -- I was\nguessing that the ant task reads the file directly and does some work with its\ncontents.  If this is true, I would also guess it's not dealing well with\ndiffering line termination schemes."}, {"count": 5, "attachment_id": null, "bug_id": 38407, "text": "You use the environment variable CVS_PASSFILE and that's all Ant does as well.\n\n", "id": 121959, "time": "2008-10-28T07:50:47Z", "creator": "bodewig@apache.org", "creation_time": "2008-10-28T07:50:47Z", "tags": [], "is_private": false}]