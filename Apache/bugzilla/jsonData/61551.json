[{"attachment_id": null, "tags": [], "bug_id": 61551, "text": "I've been having an issue with Apache's event MPM and Slots being taken up by PIDs that never seem to exit the \"yes (old gen)\" (\"Gracefully finishing\") state.\n\nI first thought this was related to https://bz.apache.org/bugzilla/show_bug.cgi?id=53555, but that was fixed in 2.4.24, and I'm running 2.4.27.\n\nThe problem started 3 days ago when I switched from prefork to event MPM.  Since then, I've had 3 occurrences of Apache stopping accepting any new connections.  After a few minutes, my monitoring scripts detect this and restart httpd.\n\nI'm still debugging exactly what the state of Apache is at that time, but I see this in the event log:\n\nAH03490: scoreboard is full, not at MaxRequestWorkers.Increase ServerLimit.\n\nAfter reading bug # 53555, I've tweaked my server settings a little bit (specifically, increased ServerLimit to be more than MaxRequestWorkers/ThreadsPerChild so there is Scoreboard room available after a reload when some slots are taken by shutting-down processes).\n\nI'm not sure if that will fix the issue of server-not-responding long-term, but I've noticed that Apache is often getting into a state where there are processes stopping, but stuck in \"yes (old gen)\" state indefinitely.\n\nThese processes don't appear to ever exit, until I hard restart Apache.\n\nThese \"yes (old gen)\" processes are Accepting Connections=no, and 0 Threads busy/idle, and Async connections writing/keep-alive/closing are all 0 too.\n\nAn example scoreboard is below:\n\n\tPID\tStopping\tConnections\tThreads\tAsync connections\ntotal\taccepting\tbusy\tidle\twriting\tkeep-alive\tclosing\n0\t19022\tno\t29\tyes\t5\t59\t0\t18\t8\n1\t5502\tyes (old gen)\t44\tno\t0\t0\t0\t0\t0\n2\t8233\tno\t5\tyes\t0\t64\t0\t4\t1\n3\t5557\tyes (old gen)\t19\tno\t0\t0\t0\t0\t0\n4\t5597\tyes (old gen)\t19\tno\t0\t0\t0\t0\t0\nSum\t5\t3\t116\t \t5\t123\t0\t22\t9\n\nYou can see there are 3 processes that are \"yes (old gen)\" with 0 active things going on.\n\nThe scoreboard shows many things in the \"G\" state:\n\n_______W_____W___________R_____________________________WW_______\nG...G.GGGGGGG.GGGGGGG..GGGG.G.G.G..GGG.GGGGGGGGG..GGGG.G.GG...GG\n________________________________________________________________\nG.....G...GG.......GG..G...G.GG......G.GGG...G...GG...G.......G.\n.....G.GGG...GGG.....GG....G..G.GGG......GG.......G........G...G\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n\nI'm not sure if there's a configuration setting I'm missing to ensure those \"yes (old gen)\" processes actually exit earlier, or if this is a bug.", "count": 0, "id": 201012, "time": "2017-09-20T16:30:49Z", "creator": "nic@nicj.net", "creation_time": "2017-09-20T16:30:49Z", "is_private": false}, {"attachment_id": null, "tags": [], "bug_id": 61551, "text": "Can you tell w/ pstack/gdb what remaining threads in that process are doing?", "count": 1, "id": 201016, "time": "2017-09-20T17:57:01Z", "creator": "covener@gmail.com", "creation_time": "2017-09-20T17:57:01Z", "is_private": false}, {"count": 2, "tags": [], "text": "Full bt of all threads here:\n\nhttps://pastebin.com/vK0rBSpP\n\nSummary:\n\n* 95 threads look like this:\n\nThread 47 (Thread 0x7fce21f66700 (LWP 5999)):\n#0  0x00007fce62a24945 in pthread_cond_wait@@GLIBC_2.3.2 () from /lib64/libpthread.so.0\n#1  0x00007fce5bd13598 in get_next (slot=0x7fce652494b8) at h2_workers.c:206\n#2  slot_run (thread=0x7fce65492c58, wctx=0x7fce652494b8) at h2_workers.c:225\n#3  0x00007fce62a20e25 in start_thread () from /lib64/libpthread.so.0\n#4  0x00007fce6254a34d in clone () from /lib64/libc.so.6\n\n* 43 threads look like this:\n\n#0  0x00007fce62a24945 in pthread_cond_wait@@GLIBC_2.3.2 () from /lib64/libpthread.so.0\n#1  0x00007fce563d7115 in ap_queue_pop_something (queue=0x7fce651ee5c0, sd=0x7fcdfc7bfd30, ecs=0x7fcdfc7bfd38, p=0x7fcdfc7bfd40, te_out=0x7fcdfc7bfd48) at fdqueue.c:451\n#2  0x00007fce563d35be in worker_thread (thd=<optimized out>, dummy=<optimized out>) at event.c:1807\n#3  0x00007fce62a20e25 in start_thread () from /lib64/libpthread.so.0\n#4  0x00007fce6254a34d in clone () from /lib64/libc.so.6\n\n* Then these two threads:\n\nThread 2 (Thread 0x7fcdfbfbf700 (LWP 6275)):\n#0  0x00007fce6254a923 in epoll_wait () from /lib64/libc.so.6\n#1  0x00007fce62c58453 in impl_pollset_poll (pollset=0x7fce1c0009b0, timeout=<optimized out>, num=0x7fcdfbfbed2c, descriptors=0x7fcdfbfbed48) at poll/unix/epoll.c:266\n#2  0x00007fce563d546c in listener_thread (thd=0x7fce1c04ca38, dummy=<optimized out>) at event.c:1460\n#3  0x00007fce62a20e25 in start_thread () from /lib64/libpthread.so.0\n#4  0x00007fce6254a34d in clone () from /lib64/libc.so.6\n\nThread 1 (Thread 0x7fce63f188c0 (LWP 5502)):\n#0  0x00007fce62a21f57 in pthread_join () from /lib64/libpthread.so.0\n#1  0x00007fce62c5cecb in apr_thread_join (retval=retval@entry=0x7ffe4f92f704, thd=thd@entry=0x7fce1c04ca38) at threadproc/unix/thread.c:217\n#2  0x00007fce563d083c in join_workers (listener=0x7fce1c04ca38, threads=threads@entry=0x7fce654c9b00) at event.c:2084\n#3  0x00007fce563d0c11 in child_main (child_num_arg=child_num_arg@entry=1, child_bucket=child_bucket@entry=0) at event.c:2282\n#4  0x00007fce563d40d7 in make_child (s=0x7fce6515b400, slot=slot@entry=1, bucket=0) at event.c:2353\n#5  0x00007fce563d4174 in startup_children (number_to_start=4, number_to_start@entry=5) at event.c:2377\n#6  0x00007fce563d4e80 in event_run (_pconf=<optimized out>, plog=0x7fce65161388, s=0x7fce6515b400) at event.c:2725\n#7  0x00007fce63f8556e in ap_run_mpm (pconf=pconf@entry=0x7fce65134168, plog=0x7fce65161388, s=0x7fce6515b400) at mpm_common.c:94\n#8  0x00007fce63f7df03 in main (argc=2, argv=0x7ffe4f92fba8) at main.c:792\nA debugging session is active.", "is_private": false, "bug_id": 61551, "id": 201020, "time": "2017-09-20T23:26:25Z", "creator": "nic@nicj.net", "creation_time": "2017-09-20T23:26:25Z", "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 61551, "attachment_id": null, "is_private": false, "id": 201022, "time": "2017-09-21T07:15:40Z", "creator": "toscano.luca@gmail.com", "creation_time": "2017-09-21T07:15:40Z", "text": "Interesting, would it be possible for you to either upgrade mod_http2 to the latest version (https://github.com/icing/mod_h2) or just to disable HTTP2 and see if the issue re-occur?"}, {"count": 4, "tags": [], "bug_id": 61551, "attachment_id": null, "is_private": false, "id": 201053, "time": "2017-09-21T17:08:10Z", "creator": "nic@nicj.net", "creation_time": "2017-09-21T17:08:10Z", "text": "Hi Luca,\n\nGood idea.  I disabled mod_http2 (commented out #LoadModule) and verified it's not being loaded anymore via httpd -M.\n\nUnfortunately I'm still seeing the same behavior.  After a \"reload\" of httpd, I see multiple PIDs stuck in Stopping \"yes (old gen)\" with 0 connections.  These processes haven't exited for several hours.\n\nI've done several \"reload\"s today.  Sometimes the old processes will transition to Stopping and then exit.  Sometimes those processes will hang around forever.  I currently have 4 processes in \"yes (old gen)\":\n\nSlot\tPID\tStopping\tConnections\tThreads\tAsync connections\ntotal\taccepting\tbusy\tidle\twriting\tkeep-alive\tclosing\n0\t31094\tyes (old gen)\t64\tno\t0\t0\t0\t0\t0\n1\t26989\tyes (old gen)\t27\tno\t0\t0\t0\t0\t0\n2\t21910\tyes (old gen)\t83\tno\t0\t0\t0\t0\t0\n3\t31289\tyes (old gen)\t45\tno\t0\t0\t0\t0\t0\n5\t3085\tno\t6\tyes\t2\t62\t0\t6\t0\n8\t3086\tno\t5\tyes\t0\t64\t0\t5\t0\n9\t3089\tno\t41\tyes\t4\t60\t0\t30\t8\nSum\t7\t4\t271\t \t6\t186\t0\t41\t8"}, {"attachment_id": null, "tags": [], "creator": "toscano.luca@gmail.com", "is_private": false, "count": 5, "id": 201056, "time": "2017-09-21T18:05:45Z", "bug_id": 61551, "creation_time": "2017-09-21T18:05:45Z", "text": "Thanks for the test! Would you mind to also get a 'thread apply all bt' from the stuck processes as you did before?"}, {"count": 6, "tags": [], "text": "Sure -- here's one of the 4 processes stuck in \"yes (old gen)\":\n\nhttps://pastebin.com/i6uHDG3b\n\nMain difference is the Thread 1 has this stack:\n\nThread 1 (Thread 0x7f524768a8c0 (LWP 31094)):\n#0  0x00007f5246193f57 in pthread_join () from /lib64/libpthread.so.0\n#1  0x00007f52463ceecb in apr_thread_join (retval=retval@entry=0x7ffcfc5c87b4, thd=thd@entry=0x7f523005e338) at threadproc/unix/thread.c:217\n#2  0x00007f523b37c83c in join_workers (listener=0x7f523005e338, threads=threads@entry=0x7f5248a37c80) at event.c:2084\n#3  0x00007f523b37cc11 in child_main (child_num_arg=child_num_arg@entry=0, child_bucket=child_bucket@entry=0) at event.c:2282\n#4  0x00007f523b3800d7 in make_child (s=0x7f52487a5400, slot=slot@entry=0, bucket=bucket@entry=0) at event.c:2353\n#5  0x00007f523b38099a in perform_idle_server_maintenance (num_buckets=<optimized out>, child_bucket=<optimized out>) at event.c:2536\n#6  server_main_loop (num_buckets=1, remaining_children_to_start=0) at event.c:2664\n#7  event_run (_pconf=<optimized out>, plog=<optimized out>, s=<optimized out>) at event.c:2744\n#8  0x00007f52476f756e in ap_run_mpm (pconf=pconf@entry=0x7f524877e168, plog=0x7f52487ab388, s=0x7f52487a5400) at mpm_common.c:94\n#9  0x00007f52476eff03 in main (argc=2, argv=0x7ffcfc5c8c28) at main.c:792", "is_private": false, "id": 201060, "creator": "nic@nicj.net", "time": "2017-09-21T23:44:25Z", "bug_id": 61551, "creation_time": "2017-09-21T23:44:25Z", "attachment_id": null}, {"count": 7, "tags": [], "bug_id": 61551, "text": "the other threads in the pastebin are still mod_h2", "id": 201061, "time": "2017-09-22T00:07:45Z", "creator": "covener@gmail.com", "creation_time": "2017-09-22T00:07:45Z", "is_private": false, "attachment_id": null}, {"count": 8, "tags": [], "text": "Sorry, please start at line 1004.  Lines previous to that were from the first dump, it appears.\n\nLines 1004-1486 (66 Threads) are from \"now\".", "is_private": false, "bug_id": 61551, "id": 201062, "time": "2017-09-22T00:11:11Z", "creator": "nic@nicj.net", "creation_time": "2017-09-22T00:11:11Z", "attachment_id": null}, {"count": 9, "tags": [], "bug_id": 61551, "text": "From the pair of dumps, two different sets of code seem to be unaware the server is trying to exit (while the listener thread is aware)", "id": 201063, "time": "2017-09-22T00:18:26Z", "creator": "covener@gmail.com", "creation_time": "2017-09-22T00:18:26Z", "is_private": false, "attachment_id": null}, {"count": 10, "attachment_id": null, "bug_id": 61551, "text": "process, rather", "id": 201064, "time": "2017-09-22T00:22:14Z", "creator": "covener@gmail.com", "creation_time": "2017-09-22T00:22:14Z", "tags": [], "is_private": false}, {"count": 11, "tags": [], "text": "Created attachment 35360\nCleanup connection on pollset failure\n\nLooks really weird that there is no busy worker but actives conections (the listener is waiting for connection_count == 0).\nThe only thing I can think of is some pollset error missing the cleanup.\n\nNic, does that patch (on 2.4.27) help?\nThere would be logged errors but no hang..", "is_private": false, "id": 201071, "creator": "ylavic.dev@gmail.com", "time": "2017-09-22T08:28:18Z", "bug_id": 61551, "creation_time": "2017-09-22T08:28:18Z", "attachment_id": 35360}, {"count": 12, "attachment_id": 35360, "creator": "nic@nicj.net", "text": "Comment on attachment 35360\nCleanup connection on pollset failure\n\nBuilt and installed!  Testing and will let you know.\n\nBTW, since yesterday the server has gotten itself \"stuck\" twice.  Here was the scoreboard before I installed this patch:\n\nSlot\tPID\tStopping\tConnections\tThreads\tAsync connections\ntotal\taccepting\tbusy\tidle\twriting\tkeep-alive\tclosing\n0\t31094\tyes (old gen)\t64\tno\t0\t0\t0\t0\t0\n1\t26989\tyes (old gen)\t27\tno\t0\t0\t0\t0\t0\n2\t21910\tyes (old gen)\t83\tno\t0\t0\t0\t0\t0\n3\t31289\tyes (old gen)\t45\tno\t0\t0\t0\t0\t0\n4\t20918\tyes\t31\tno\t0\t0\t0\t0\t0\n5\t19797\tyes\t29\tno\t0\t0\t0\t0\t0\n6\t23859\tyes\t25\tno\t0\t0\t0\t0\t0\n7\t23932\tyes\t29\tno\t0\t0\t0\t0\t0\n8\t24010\tyes\t24\tno\t0\t0\t0\t0\t0\n9\t24079\tyes\t44\tno\t0\t0\t0\t0\t0\n10\t24147\tyes\t46\tno\t0\t0\t0\t0\t0\n11\t24148\tyes\t48\tno\t0\t0\t0\t0\t0\n12\t24283\tyes\t27\tno\t0\t0\t0\t0\t0\n13\t24352\tyes\t31\tno\t0\t0\t0\t0\t0\n14\t24422\tyes\t45\tno\t0\t0\t0\t0\t0\n15\t24423\tyes\t46\tno\t0\t0\t0\t0\t0\n16\t24562\tyes\t17\tno\t0\t0\t0\t0\t0\n17\t24631\tyes\t30\tno\t0\t0\t0\t0\t0\n18\t24632\tyes\t35\tno\t0\t0\t0\t0\t0\n19\t24795\tyes\t55\tno\t0\t0\t0\t0\t0\n20\t23025\tyes\t45\tno\t0\t0\t0\t0\t0\n21\t25484\tyes\t26\tno\t0\t0\t0\t0\t0\n22\t30994\tyes\t55\tno\t0\t0\t0\t0\t0\n23\t1568\tno\t5\tyes\t3\t61\t0\t4\t0\n24\t1784\tno\t38\tyes\t7\t57\t0\t26\t6\nSum\t25\t23\t950\t \t10\t118\t0\t30\t6\nGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG\n..G.G.GG.G...GG.....G..G..G....G....G..GGGGGGGG.GG.......GG.G.GG\nGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG\nG.GGGGGG.GGGG.GGGG.GGGG..GGGG..GG.GGGG..G.GG.G.G.GGG...G.GGGGGGG\nG..GGGG..GGG.GG.G.GG.G...GGGG.GGG..G.....GG.GG....G....G.G.G...G\nG.G........GG...G..G.G...G.GG.G.GG...GG.GG....GGG....G.GG.GGGGGG\nG......G..GGG..GG.GG...G....GG...GG.....G.GG.......GG.G.GGG.G.G.\n..G.G....GGGG.G.GGG...G.G.......G..G...G.G..GGGG.G.GGGGG.G.G.G..\n.GGG..GGG..GGG.......G..GG.GG....GG..........G..G..G..G.G..GG.G.\nGGGG..GGGGGG..GGGGGGG.G.GGG.GGGGG.G.G.G.G..G....GGGGGG.GGG.G.GGG\nG.GGG.G.G...G.G.GG..GGGGG..GGG.GGGGGGGGGGGGGGGGG..GGGG..GGGGG.GG\n.GGGGGG.GGGGG..GGG.GGG.GG.GGG.GGGG..GGGG.GG.GG..GGGGG.GGGGGGGG.G\n....GG....G...G.GG..GGG..G.GGG.....G...G.GGG...GG..G....GGGGG.G.\n..GGG..G...GG.........GGGGG.GG.......GG.GGGG.GGG..G.G..GGGGG..GG\n..GGG....G..GGGGGGGGG.GGGGGGG.GGGGGGG.GGGGGGGG.GG.G.GGGG.G.G...G\n.G..G.GGGGGGGG.G.GG..GGGGGGGG.GGGGG.GGGG.GG.G.GGG.G..GGG.G.GGGGG\nGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG\nGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG\nGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG\nGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG\nGGGGGGGR___________________R____________________________________\n___W_______________W______________R_____________WW____________W_\n__W___W", "id": 201103, "time": "2017-09-24T02:12:47Z", "bug_id": 61551, "creation_time": "2017-09-24T02:12:47Z", "tags": [], "is_private": false}, {"count": 13, "tags": [], "bug_id": 61551, "attachment_id": null, "is_private": false, "id": 201106, "time": "2017-09-24T16:33:37Z", "creator": "nic@nicj.net", "creation_time": "2017-09-24T16:33:37Z", "text": "So far, so good.  The patch has been running for ~12 hours and I don't see any processes stuck in \"yes (old gen)\" with 0 active connections.\n\nPrior to the patch, I would almost always see processes in that stuck state after Apache reloaded when logs were rotated.\n\nI've issued a couple \"systemctl reload httpd\" commands to try to force the issue, and so far with this patch, I'm not seeing any processes get stuck.\n\nWill continue running, but so far it's looking promising."}, {"count": 14, "tags": [], "bug_id": 61551, "attachment_id": null, "text": "It was looking good for about 36 hours!  No processes stuck at all.\n\nUnfortunately this morning, at about 48 hours, I see 3 processes stuck:\n\nSlot\tPID\tStopping\tConnections\tThreads\tAsync connections\ntotal\taccepting\tbusy\tidle\twriting\tkeep-alive\tclosing\n0\t27258\tyes (old gen)\t47\tno\t0\t0\t0\t0\t0\n1\t25666\tyes (old gen)\t18\tno\t0\t0\t0\t0\t0\n2\t2346\tyes (old gen)\t17\tno\t0\t0\t0\t0\t0\n3\t17013\tno\t35\tyes\t4\t60\t0\t23\t7\n4\t2929\tno\t2\tyes\t0\t64\t0\t2\t0\nSum\t5\t3\t119\t \t4\t124\t0\t25\t7\nG.GGG.GGG.GGGGGG.GG.GG.GGGG.GG.GG..GG.GGG.GGGG..G..GG.GGGGGGGGGG\nGG.G..............G.GGGGG......GG.....GGG.G.............G.G.G...\n..........G....G.G......GGGG.GG.......G.......GG...G.GG...G....G\n_______R________________________W____________________R________W_\n________________________________________________________________\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................", "id": 201137, "time": "2017-09-26T13:05:31Z", "creator": "nic@nicj.net", "creation_time": "2017-09-26T13:05:31Z", "is_private": false}, {"count": 15, "tags": [], "bug_id": 61551, "text": "Thanks Nic for testing.\n\nAny [error] in error_log?\nCould you please provide the full backtrace (thread apply all bt) of a process stuck?", "id": 201141, "time": "2017-09-26T15:42:15Z", "creator": "ylavic.dev@gmail.com", "creation_time": "2017-09-26T15:42:15Z", "is_private": false, "attachment_id": null}, {"count": 16, "tags": [], "bug_id": 61551, "text": "Unfortunately no [errors] in the error_log.\n\nNow I do have mod_security2 installed, and the problem is possibly correlated with getting Slow Loris-style attacked.\n\nSome of the times that I'm seeing processes stuck happen after an attack such as:\n\n[Tue Sep 26 18:25:46.367095 2017] [:warn] [pid 17763:tid 140504981088000] [client 204.12.234.170:63613] ModSecurity: Access denied with code 400. Too many threads [51] of 50 allowed in WRITE state from x.x.x.x - Possible DoS Consumption Attack [Rejected]\n\nHere's the latest thread dump of a process (pid 27258) stuck in \"yes (old gen)\" since yesterday:\n\nhttps://pastebin.com/9Pda9wG9\n\nScoreboard at the time:\n\nSlot\tPID\tStopping\tConnections\tThreads\tAsync connections\ntotal\taccepting\tbusy\tidle\twriting\tkeep-alive\tclosing\n0\t27258\tyes (old gen)\t47\tno\t0\t0\t0\t0\t0\n1\t25666\tyes (old gen)\t18\tno\t0\t0\t0\t0\t0\n2\t2346\tyes (old gen)\t17\tno\t0\t0\t0\t0\t0\n3\t28733\tno\t59\tyes\t7\t57\t0\t39\t12\n4\t17763\tyes (old gen)\t4\tno\t0\t0\t0\t0\t0\n5\t20520\tyes (old gen)\t6\tno\t0\t0\t0\t0\t0\n6\t25471\tno\t3\tyes\t0\t64\t0\t3\t0\nSum\t7\t5\t154\t \t7\t121\t0\t42\t12\nG.GGG.GGG.GGGGGG.GG.GG.GGGG.GG.GG..GG.GGG.GGGG..G..GG.GGGGGGGGGG\nGG.G..............G.GGGGG......GG.....GGG.G.............G.G.G...\n..........G....G.G......GGGG.GG.......G.......GG...G.GG...G....G\n_____W_______R_________R_______R______R__R____________R_________\n..............................................G........G.GG.....\n.....GG..............G.........GG...........................G...\n________________________________________________________________\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n\nNot sure if ModSecurity could play a role here.  I could temporarily disable it if you think that would help debugging things.", "id": 201152, "time": "2017-09-27T13:00:01Z", "creator": "nic@nicj.net", "creation_time": "2017-09-27T13:00:01Z", "is_private": false, "attachment_id": null}, {"count": 17, "tags": [], "text": "It's been 4 days of running with ModSecurity off, and I haven't had a repro of the issue at all.  I'm fairly confident at this point, due to the correlation of the timing of the Slow-Loris attack and when these stuck threads happen, that something in ModSecurity's connection-rejectioning may be triggering this bad behavior.\n\ne.g. this code executes during the attack and those connections get \"dropped\"\n\nhttps://github.com/nicjansma/ModSecurity/blob/master/apache2/mod_security2.c#L1459\n\nShould I open an issue in their Github?\n\nThis behavior can be triggered by slowhttptest -H or -X: https://github.com/shekyan/slowhttptest\n\nSecConnEngine On\nSecConnReadStateLimit 10\nSecConnWriteStateLimit 10", "is_private": false, "id": 201253, "creator": "nic@nicj.net", "time": "2017-10-01T12:33:58Z", "bug_id": 61551, "creation_time": "2017-10-01T12:33:58Z", "attachment_id": null}, {"count": 18, "tags": [], "bug_id": 61551, "attachment_id": null, "text": "\nMaybe a bit premature to ask mod_Security to make a change API wise.\n\nLooks like a process_connection() hook could complete without changing\nthe state and there is no catch-all for that in process_socket(). Yann, probably up your alley how we could ditch that connection.  Hard for \nmod_security to know we expect it to do anything (set it to linger? How about allowing errors returned by process_connection?", "id": 201254, "time": "2017-10-01T12:50:08Z", "creator": "covener@gmail.com", "creation_time": "2017-10-01T12:50:08Z", "is_private": false}, {"count": 19, "tags": [], "bug_id": 61551, "attachment_id": null, "text": "The good news is I haven't had a repro of the issue in the last 24 days since turning off ModSecurity2.\n\nAnything I can help with to help debug / move this issue?", "id": 201652, "time": "2017-10-25T02:18:31Z", "creator": "nic@nicj.net", "creation_time": "2017-10-25T02:18:31Z", "is_private": false}, {"count": 20, "attachment_id": null, "creator": "s.schrier@nl.aswatson.com", "text": "Hi,\n\nWe are facing the same issue since we upgraded to 2.4.27 and 2.4.29 later on.\nAfter a few days we see the same behaviour, scoreboard filling up with stuck processes.\n\nScoreboard looks like this with 2.4.29-1 running:\n\nSlot\tPID\tStopping\tConnections\tThreads\tAsync connections\ntotal\taccepting\tbusy\tidle\twriting\tkeep-alive\tclosing\n0\t59291\tyes (old gen)\t5\tno\t0\t0\t0\t0\t0\n1\t5519\tyes (old gen)\t11\tno\t0\t0\t0\t0\t0\n2\t15481\tno\t25\tyes\t5\t59\t0\t18\t0\n3\t2000\tyes (old gen)\t2\tno\t0\t0\t0\t0\t0\n4\t5527\tyes (old gen)\t6\tno\t0\t0\t0\t0\t0\n5\t65458\tno\t15\tyes\t6\t58\t0\t12\t0\n6\t15873\tno\t38\tyes\t11\t53\t0\t28\t0\n7\t15891\tno\t33\tyes\t13\t51\t0\t25\t0\nSum\t8\t4\t135\t \t35\t221\t0\t83\t0\n....G..........GG.................G.....G.......................\n..G..GG.G....G...G................G.......GG......G............G\n_________________________________W___WWW_________________W______\n.......GG.......................................................\n......................G............G........GG.........G.G......\n_____________W___W____W_________________WW________W_____________\n__W_____W__W___W__________W____W________W___W_________W___W___W_\n_WW___WW_WW________WW_W____W____________W__W________W___________\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................\n................................................................", "id": 201989, "time": "2017-11-08T13:11:01Z", "bug_id": 61551, "creation_time": "2017-11-08T13:11:01Z", "tags": [], "is_private": false}, {"count": 21, "attachment_id": null, "creator": "ylavic.dev@gmail.com", "text": "(In reply to Silvan from comment #20)\n> \n> We are facing the same issue since we upgraded to 2.4.27 and 2.4.29 later on.\n> After a few days we see the same behaviour, scoreboard filling up with stuck\n> processes.\n\nDoes it involve mod_security too?", "id": 201995, "time": "2017-11-08T17:58:23Z", "bug_id": 61551, "creation_time": "2017-11-08T17:58:23Z", "tags": [], "is_private": false}, {"count": 22, "tags": [], "bug_id": 61551, "text": "I am trying to figure out what processes are involved, how could we see it?\nWe are using mpm_event with mod_jk at least.", "id": 202015, "time": "2017-11-09T08:37:36Z", "creator": "s.schrier@nl.aswatson.com", "creation_time": "2017-11-09T08:37:36Z", "is_private": false, "attachment_id": null}, {"count": 23, "tags": [], "bug_id": 61551, "text": "we are not using mod_security", "id": 202016, "time": "2017-11-09T08:38:13Z", "creator": "s.schrier@nl.aswatson.com", "creation_time": "2017-11-09T08:38:13Z", "is_private": false, "attachment_id": null}, {"count": 24, "tags": [], "bug_id": 61551, "is_private": false, "id": 202020, "attachment_id": null, "creator": "ylavic.dev@gmail.com", "creation_time": "2017-11-09T10:34:07Z", "time": "2017-11-09T10:34:07Z", "text": "(In reply to Silvan from comment #22)\n> I am trying to figure out what processes are involved, how could we see it?\n> We are using mpm_event with mod_jk at least.\n\nYou could run gdb on one of the PID in G state and enter \"thread apply all bt\" in gdb."}, {"count": 25, "tags": [], "bug_id": 61551, "text": "(In reply to Silvan from comment #23)\n> we are not using mod_security\n\nThis may not be the same issue then, it seems to me that mod_jk has no process_connection hook. Also, Nic is reporting an issue with 2.4.27, while yours started with 2.4.29.\n\nCan you please open another report with the gdb output?", "id": 202021, "time": "2017-11-09T10:41:45Z", "creator": "ylavic.dev@gmail.com", "creation_time": "2017-11-09T10:41:45Z", "is_private": false, "attachment_id": null}, {"count": 26, "tags": [], "creator": "ylavic.dev@gmail.com", "attachment_id": 35510, "text": "Created attachment 35510\nWork around process_connection hooks not updating the state\n\nThis patch should address the mod_security case (or any module returning a connection to MPM event with no instruction on what to do with it).\n\nNic could you please test it? (without attachment 35360 which is not needed a priori).", "id": 202022, "time": "2017-11-09T11:32:07Z", "bug_id": 61551, "creation_time": "2017-11-09T11:32:07Z", "is_private": false}, {"count": 27, "attachment_id": null, "bug_id": 61551, "is_private": false, "id": 202236, "time": "2017-11-18T19:07:01Z", "creator": "mwennrich@gmail.com", "creation_time": "2017-11-18T19:07:01Z", "tags": [], "text": "JFYI: We have the same problem, if we set MaxConnectionsPerChild to something other then 0.\nThen dead threads pile up, even with simple empty tcp connects (like sh -c ' while :; do echo \"\" | nc -N localhost 443; sleep 1; done')\n\nWith MaxConnectionsPerChild=0 the number of threads are stable."}, {"count": 28, "tags": [], "bug_id": 61551, "attachment_id": null, "is_private": false, "id": 202361, "time": "2017-11-23T11:11:48Z", "creator": "ylavic.dev@gmail.com", "creation_time": "2017-11-23T11:11:48Z", "text": "(In reply to Markus Wennrich from comment #27)\n> JFYI: We have the same problem,\n\nThis PR as been renamed.\n\nIs your issue with version 2.4.27 and with a module that acts like mod_security's slowloris prevention (i.e. not reporting dropped connections as handled)?\n\nOtherwise (2.4.29 with \"vanilla\" httpd), please give more informations in Bug 61786 (opened by Sylvan) as asked there."}, {"count": 29, "tags": [], "text": "We have had the exact issue with another third-party module. All kinds of different versions of weblogic module mod_wl_24.\n\nI resorted to set MaxConnectionsPerchild 0 and/or not ever do graceful restarts and set MaxSpareThreads to the same value as MaxRequestWorkers to avoid any kind of process/thread recycling and managed to work-around this issue successfully.\n\nI hope I get get as good info as Nic has provided soon but I can't reproduce it that easily.\n\nAlthough you guys seem to have caught the issue already. Perhaps a parameter for timeout for gracefully finishing threads could be considered if possible for the future for buggy third party modules? Something like (in seconds):\n\nGracefulTimeOut 300", "is_private": false, "bug_id": 61551, "id": 202362, "time": "2017-11-23T11:27:30Z", "creator": "dferradal@gmail.com", "creation_time": "2017-11-23T11:27:30Z", "attachment_id": null}, {"count": 30, "tags": [], "bug_id": 61551, "text": "(In reply to dferradal from comment #29)\n> We have had the exact issue with another third-party module. All kinds of\n> different versions of weblogic module mod_wl_24.\n\nDaniel, is that with 2.4.27?\nI keep asking this because there is a significant change in mpm_event starting with 2.4.29 and related to how workers and graceful restart events have to wake up the listener thread when it's polling (possibly indefinitely) for connections.\n\nThis (current) PR is not related to the above change (because it happens with 2.4.27), but probably due to some third party module's processing hook which does not report an expected connection state to mpm_event, while that used to work with mpm_worker for instance.\n\nSo for your case to be relared to this PR, mod_wl (which I know nothing about) should have a process_connection hook acting like this, and attachment 35510 should fix it.\n\n> I resorted to set MaxConnectionsPerchild 0 and/or not ever do graceful\n> restarts and set MaxSpareThreads to the same value as MaxRequestWorkers to\n> avoid any kind of process/thread recycling and managed to work-around this\n> issue successfully.\n\nI'm not sure this (current) PR has to do with children recycling, I think it could happen without.\n\n> \n> I hope I get get as good info as Nic has provided soon but I can't reproduce\n> it that easily.\n\nPossibly more Bug 61786 's material then...\n\n> Although you guys seem to have caught the issue already. Perhaps a parameter\n> for timeout for gracefully finishing threads could be considered if possible\n> for the future for buggy third party modules? Something like (in seconds):\n> \n> GracefulTimeOut 300\n\nLet's discuss this on dev@ if you wish, that's certainly not a fix for processes stuck with no connections to handle...", "id": 202365, "time": "2017-11-23T11:57:57Z", "creator": "ylavic.dev@gmail.com", "creation_time": "2017-11-23T11:57:57Z", "is_private": false, "attachment_id": null}, {"count": 31, "tags": [], "creator": "nic@nicj.net", "attachment_id": null, "text": "(In reply to Yann Ylavic from comment #26)\n> Created attachment 35510 [details]\n> Work around process_connection hooks not updating the state\n> \n> This patch should address the mod_security case (or any module returning a\n> connection to MPM event with no instruction on what to do with it).\n> \n> Nic could you please test it? (without attachment 35360 [details] which is\n> not needed a priori).\n\nYann,\n\nI really appreciate your investigation into this issue!\n\nI haven't yet built apache from source for this production server, and I'm a bit hesitant to with things running smoothly now (with mod_security2) off.  Is this patch waiting on me to test before it gets checked in, or might it make it in soon anyways?", "id": 202414, "time": "2017-11-26T00:54:49Z", "bug_id": 61551, "creation_time": "2017-11-26T00:54:49Z", "is_private": false}, {"count": 32, "tags": [], "bug_id": 61551, "text": "(In reply to Yann Ylavic from comment #30)\n\n> Daniel, is that with 2.4.27?\n> I keep asking this because there is a significant change in mpm_event\n> starting with 2.4.29 and related to how workers and graceful restart events\n> have to wake up the listener thread when it's polling (possibly\n> indefinitely) for connections.\n> \n> This (current) PR is not related to the above change (because it happens\n> with 2.4.27), but probably due to some third party module's processing hook\n> which does not report an expected connection state to mpm_event, while that\n> used to work with mpm_worker for instance.\n> \n> So for your case to be relared to this PR, mod_wl (which I know nothing\n> about) should have a process_connection hook acting like this, and\n> attachment 35510 [details] should fix it.\n\nIndeed, that's exactly what I'm using, version 2.4.27.\n\nThank you so much.", "id": 202466, "time": "2017-11-29T08:40:48Z", "creator": "dferradal@gmail.com", "creation_time": "2017-11-29T08:40:48Z", "is_private": false, "attachment_id": null}, {"count": 33, "attachment_id": null, "creator": "ylavic.dev@gmail.com", "text": "Committed in r1818804.\n\nNic, I don't think this patch will wait on you to be backported to 2.4.x (if the team reviews it positively), on the other hand I can't garantee this is the right one for your issue either...", "id": 202868, "time": "2017-12-20T14:53:44Z", "bug_id": 61551, "creation_time": "2017-12-20T14:53:44Z", "tags": [], "is_private": false}, {"count": 34, "tags": [], "bug_id": 61551, "text": "Thanks Yann!  Is there anything I can do to help encourage it being backported?", "id": 202912, "time": "2017-12-25T22:21:36Z", "creator": "nic@nicj.net", "creation_time": "2017-12-25T22:21:36Z", "is_private": false, "attachment_id": null}, {"count": 35, "tags": [], "bug_id": 61551, "text": "(In reply to Nic Jansma from comment #34)\n> Thanks Yann!  Is there anything I can do to help encourage it being\n> backported?\n\nHi Nic,\n\nif you could test the patch and give us some feedback it would surely help!\n\nLuca", "id": 202920, "time": "2017-12-26T19:12:28Z", "creator": "toscano.luca@gmail.com", "creation_time": "2017-12-26T19:12:28Z", "is_private": false, "attachment_id": null}, {"count": 36, "tags": [], "bug_id": 61551, "text": "Hi Luca!\n\nI attempted applying r1818804, r1818951, r1818960 and r1818960 against server/mpm/event.c in 2.4.27, and got it to compile.  However, there appear to be a lot of other differences in event.c in 2.5.x vs 2.4.27, so I'm not sure how complete my backport was.\n\nAfter the patch, when start the server, and run a Slowloris attack:\n\n> slowhttptest -H -u http://127.0.0.1/a -c 1000 -l 30\n\nI pretty quickly see slots go into 'G', and subsequent 'systemctl reload httpd' put them into Stopping (old gen) permanently:\n\nSlot\tPID\tStopping\tConnections\tThreads\tAsync connections\ntotal\taccepting\tbusy\tidle\twriting\tkeep-alive\tclosing\n0\t24231\tyes (old gen)\t191\tno\t0\t0\t0\t0\t0\n1\t24396\tyes (old gen)\t146\tno\t0\t0\t0\t0\t0\n2\t23398\tyes (old gen)\t184\tno\t0\t0\t0\t0\t0\n3\t23442\tyes (old gen)\t119\tno\t0\t0\t0\t0\t0\n4\t23507\tyes (old gen)\t121\tno\t0\t0\t0\t0\t0\n5\t24397\tyes (old gen)\t191\tno\t0\t0\t0\t0\t0\n6\t24736\tyes (old gen)\t2\tno\t0\t0\t0\t0\t0\n7\t25056\tyes (old gen)\t166\tno\t0\t0\t0\t0\t0\n8\t25223\tyes (old gen)\t191\tno\t0\t0\t0\t0\t0\n9\t25224\tyes (old gen)\t193\tno\t0\t0\t0\t0\t0\n10\t25560\tyes (old gen)\t191\tno\t0\t0\t0\t0\t0\n11\t25726\tyes (old gen)\t91\tno\t0\t0\t0\t0\t0\n12\t25727\tyes (old gen)\t119\tno\t0\t0\t0\t0\t0\n13\t26086\tno\t0\tyes\t1\t63\t0\t0\t0\n14\t26087\tno\t0\tyes\t0\t64\t0\t0\t0\n15\t26090\tno\t0\tyes\t0\t64\t0\t0\t0\nSum\t16\t13\t1905\t \t1\t191\t0\t0\t0\nGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG\nGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG\nGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG\nGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG\nGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG\nGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG\nGG..............................................................\nGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG\nGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG\nGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG\nGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG\nGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG\nGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG\n_W______________________________________________________________\n________________________________________________________________\n________________________________________________________________\n\nI'm able to takeover all of the open connections in two cycles of slowhttptest/reload on my test server.\n\nThe good news is this is easily reproducible via the following steps:\n\nApache 2.4.27\nmod_security2 with config of https://pastebin.com/6tDXBBvY\n\nrun:\n> slowhttptest -H -u http://127.0.0.1/a -c 1000 -l 30    # connections should go to 'G' quickly\n> systemctl reload httpd\n> slowhttptest -H -u http://127.0.0.1/a -c 1000 -l 30    # connections should go to 'G' quickly\n> systemctl reload httpd                                 # my test setup is now unresponsive\n\nSo I guess I would say that my attempt at backporting just the few changes mentioned above to 2.4.27 doesn't seem to fix the issue, but I wasn't sure what other changes might be needed before those revisions?", "id": 203044, "time": "2018-01-03T18:12:27Z", "creator": "nic@nicj.net", "creation_time": "2018-01-03T18:12:27Z", "is_private": false, "attachment_id": null}, {"attachment_id": 35649, "tags": [], "bug_id": 61551, "text": "Created attachment 35649\nPatches for 2.4.27\n\nThanks Nic for testing.\n\nThere were several changes to mpm_event (and related) since 2.4.27, and I think the above/attached set of 3 patches should be applied for your test to be relevant (all are already or will be part of next 2.4.x).\n\nI quickly tested the slowhttptest scenario on 2.4.27 and it seems to work/fail as expected with/without the patches.\n\nPlease note that according to your mod_security settings (i.e. SecConnReadStateLimit 50), there may still be at most 50 active connections/threads handled by \"old gen\" processses with other/idle threads in G state, this is the expected behaviour (for mod_security's SecConnReadStateLimit detection and action).\nThere may also be \"old gen\" processses with no active connection (all threads in G state), depending on your MPM setting (see below), those can/will be reused at any time according to the load.\n\nAlso, if you expect httpd reloads with active/long-standing connections kept alive, you probably want to \"oversize\" ServerLimit w.r.t. MaxRequestWorkers and ThreadsPerChild, such that there is room in the scoreboard for gracefully restarting processes (without interfering with the new generation ones).\nThis relaxes the usual/strict \"MaxRequestWorkers = ServerLimit * ThreadsPerChild\" formula to take reloads into account. For example, if MaxRequestWorkers should be 1000 (adapt to your needs), something like ThreadLimit = ThreadsPerChild = 50 and ServerLimit = 50 (instead of 20) leaves room for 2.5 simultaneous reloads, or one reload and some MaxConnectionsPerChild kicking at the same time. YMMV...", "count": 37, "id": 203055, "time": "2018-01-04T01:54:17Z", "creator": "ylavic.dev@gmail.com", "creation_time": "2018-01-04T01:54:17Z", "is_private": false}, {"count": 38, "attachment_id": null, "creator": "nic@nicj.net", "is_private": false, "id": 203121, "time": "2018-01-06T16:12:59Z", "bug_id": 61551, "creation_time": "2018-01-06T16:12:59Z", "tags": [], "text": "Awesome! With the supplied patches against 2.4.27, I've verified the fix works via slowhttptest and (so far) looking good on our production server.\n\nMany thanks!  Looking forward to the next release."}, {"count": 39, "attachment_id": null, "creator": "ylavic.dev@gmail.com", "is_private": false, "id": 203342, "time": "2018-01-18T14:02:12Z", "bug_id": 61551, "creation_time": "2018-01-18T14:02:12Z", "tags": [], "text": "Backported to 2.4.x in r1820796, will be in upcoming 2.4.30."}]