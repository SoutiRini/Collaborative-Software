[{"count": 0, "tags": [], "bug_id": 58348, "attachment_id": null, "id": 185044, "creation_time": "2015-09-08T23:05:23Z", "time": "2015-09-08T23:05:23Z", "creator": "onealj@apache.org", "text": "I am currently working adding the ability to copy rows within POI. I've seen a number of partial solutions online[1][2], but none shift formula references, which is what I need.\n\nI figured this would be a good opportunity to write this into the POI API so others don't have to reinvent the wheel.\n\nHere's the features I'm looking for:\n* copies cell values\n* copies cell styles\n* copies cell formulas, offsetting relative cell references by the distance of the row copy\n* copies array formulas\n* copies merged cell regions\n* copies row height\n* copies conditional formatting\n* copies tables, pivot tables\n* copies hyperlinks\n* copies cell comments\n\nFor all these options, if an option isn't copied, need to determine if the destination cell maintains its option (for example, cell style), or if the cell is reset to the default value for that option (no style).\n\nFeatures that we probably don't want/need from shiftRows:\n* update Named Regions\n* updates formula references that referred to the source range to refer to the target range\n\nThe API probably needs to allow the user to choose what gets copied (paste as value only, paste formulas only, paste styles only, paste without styles, etc).\n\nConsiderations:\n* Needs to have consistent API between HSSFWorkbook, XSSFWorkbook, and SXSSFWorkbook.\n* API should allow copying a continuous or discontinuous list of rows from a different sheet or different workbook into existing sheet.\n* What is the desired behavior for copying discontinuous rows? Would destination rows be continuous, or would discontinuities be copied over. If we disallow discontinuous row copies, developer would need to make multiple copyRows calls. This seems acceptable.\n* What is the desired behavior for how to copy non-monotonic discontinuous rows? Is it okay to not support this?\n\n//shiftRows-like API, doesn't meet the inter-sheet copying criteria\nInterface Sheet {\n    public void copyRows(int startRow, int endRow, int n);\n}\n\n//Better API:\nInterface Sheet {\n    public void copyRows(List<Rows> srcRows, int startRow, CellCopyOptions options);\n    //helper method needed to make first argument of copyRows less painful.\n    public List<Row> getRows(int firstRow, int lastRow); //similar to List.subList\n}\n\n// Where should this class live? Does a similar class already exist?\nSomeUtility {\n    class CellCopyOptions {\n        boolean cellValues;\n        boolean cellStyles;\n        boolean cellFormulas;\n        boolean mergedRegions;\n        boolean rowHeight;\n        boolean tables;\n        ...\n    }\n}\n\nHow should getRows work for blank rows? If copying all rows on one sheet to another sheet, this could mean creating a list of 1 million rows if the List has null entries to represent blank rows. Seems wasteful if the sheet only has content on the first and last row. If it returns a List with blank rows removed, the caller would need to rely on row.getRowNum() to determine this. We could return a SortedMap<Int, Row> or other sparse structure which is convenient to subdivide, but this could cause problems if a row's row number changes after the SortedMap is created. I'm leaning towards a List that excludes nulls, which would make behavior match Sheet.rowIterator, and rely on row.getRowNum() to determine row number.\nUntil we decide if copyRows will work on discontinuous or non-monotonic rows, we could check the input and throw an exception. What is the missing row policy for copyRows? Consolidate rows in destination, or leave room for blank rows (related to how getRows is implemented).\n\n\n[1] http://stackoverflow.com/questions/5785724/how-to-insert-a-row-between-two-rows-in-an-existing-excel-with-hssf-apache-poi\n[2] http://www.zachhunter.com/2010/05/npoi-copy-row-helper/", "is_private": false}, {"count": 1, "tags": [], "text": "Created attachment 33102\nTest case workbook\n\nAdding workbook to use for unit tests", "attachment_id": 33102, "bug_id": 58348, "id": 185175, "time": "2015-09-13T12:13:24Z", "creator": "onealj@apache.org", "creation_time": "2015-09-13T12:13:24Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 58348, "attachment_id": 33105, "text": "Created attachment 33105\nProgress made so far on adding copyRows to XSSF\n\nHSSF and SXSSF implementations will follow once I have XSSF row/cell copy done.", "id": 185217, "time": "2015-09-14T07:29:53Z", "creator": "onealj@apache.org", "creation_time": "2015-09-14T07:29:53Z", "is_private": false}, {"count": 3, "tags": [], "creator": "onealj@apache.org", "text": "Created attachment 33130\nProgress made so far on adding copyRows to XSSF\n\n* Moved several pre-requisites out into their own bugs, marked as blockers for this bug.\n* Rebased to r1704452\n* still only implemented for XSSFWorkbooks, with placeholders for SXSSFWorkbooks and HSSFWorkbooks.\n\nI am waiting on blockers being resolved before continuing to develop this copyRows feature.", "id": 185413, "time": "2015-09-22T03:59:31Z", "bug_id": 58348, "creation_time": "2015-09-22T03:59:31Z", "is_private": false, "attachment_id": 33130}, {"count": 4, "tags": [], "bug_id": 58348, "attachment_id": 33138, "text": "Created attachment 33138\n[PATCH] copyRows implemented for XSSFWorkbooks\n\nI think this patch is ready to be deployed for testing with XSSFWorkbooks. copyRows support has been stubbed out for HSSFWorkbooks and SXSSFWorkbooks and will be implemented in a future patch if someone has motivation to write them.\nI have annotated most of the new methods with @Beta to indicate the API may change based on your feedback.\n\nLimitations:\n* does not evaluate copied formulas or cache the result\n* does not copy array formulas\n* does not copy PivotTables or Tables\n* I have not tested copying rows from an external workbook\n\nAfter patching with the blocking bugs, this patch has a merge conflict with bug 58439 that will need to be resolved manually (or I can rebase this patch once bug 58439 is fixed).", "id": 185458, "time": "2015-09-23T18:31:12Z", "creator": "onealj@apache.org", "creation_time": "2015-09-23T18:31:12Z", "is_private": false}, {"count": 5, "tags": [], "text": "TODO: add unit test for shifting or copying a formula that contains an unregistered user-defined function (bug 58452).", "is_private": false, "bug_id": 58348, "id": 185665, "time": "2015-10-06T19:51:12Z", "creator": "onealj@apache.org", "creation_time": "2015-10-06T19:51:12Z", "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 58348, "text": "TODO: Test for XmlDisconnectedValue errors (learn from shiftRows implementation with bug 53798)", "count": 6, "id": 185719, "time": "2015-10-11T09:49:53Z", "creator": "onealj@apache.org", "creation_time": "2015-10-11T09:49:53Z", "is_private": false}, {"attachment_id": null, "tags": [], "bug_id": 58348, "text": "Row copy is now ready for testing in XSSFWorkbooks!\n\nApplied changes for row copy support for XSSFWorkbooks in r1711864, r1711866, r1711879, and r1711885 to trunk.\nSite docs updated in r1711888.\n\nSeveral minor supporting changes from attachment 33138 were made in their own commits. When the code for HSSFWorkbooks is written, the code and tests will be moved up to the Sheet/Row/Cell Interface and BaseTestSheet/BaseTestRow/BaseTestCell level.", "count": 7, "id": 186164, "time": "2015-11-02T03:15:36Z", "creator": "onealj@apache.org", "creation_time": "2015-11-02T03:15:36Z", "is_private": false}, {"count": 8, "tags": [], "text": "In this first release, the following are implemented and tested:\n* copies cell values (all Excel-primitive data types)\n* copies cell styles\n* copies cell formulas, offsetting relative cell references by the distance of the row copy\n* copies merged cell regions\n\nThe following are implemented but not tested:\n* copies row height\n\nThe following are not implemented or tested:\n* copies cell comments\n* copies array formulas\n* copies conditional formatting\n* copies tables, pivot tables\n* copies hyperlinks", "attachment_id": null, "bug_id": 58348, "id": 186166, "time": "2015-11-02T03:23:14Z", "creator": "onealj@apache.org", "creation_time": "2015-11-02T03:23:14Z", "is_private": false}, {"count": 9, "tags": [], "creator": "onealj@apache.org", "text": "Added hyperlink copying and merging (only copies a hyperlink from source if source has a hyperlink) for XSSFWorkbooks in r1711926.", "id": 186172, "time": "2015-11-02T10:00:54Z", "bug_id": 58348, "creation_time": "2015-11-02T10:00:54Z", "is_private": false, "attachment_id": null}]