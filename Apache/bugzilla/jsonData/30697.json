[{"count": 0, "tags": [], "bug_id": 30697, "attachment_id": null, "text": "Dear Sirs,\n\nin the tomcat docs I found the following:\n\nDistributed locking and pages using frames \nTomcat does not keep session instances in sync across the cluster. The \nimplementation of such logic would be to much overhead and cause all kinds of \nproblems. If your client accesses the same session simultanously using multiple \nrequests, then the last request will override the other sessions in the cluster.\n\nThe spec says the following:\n\nWithin an application marked as distributable, all requests that are part of a \nsession\nmust be handled by one Java Virtual Machine1 (\u201cJVM\u201d) at a time.\n\nand\n\nThese restrictions mean that the Developer is ensured that there are no\nadditional concurrency issues beyond those encountered in a non-distributed\ncontainer.\n\nMay be that I misunderstand the tomcat docs but for it seems that the \nimplementation of Tomcat's clustering may not be conformant to the spec for \nthis point. \n\nBest regards\n\nThomas", "id": 62045, "time": "2004-08-16T15:12:26Z", "creator": "thomas2.maesing@bgs-ag.de", "creation_time": "2004-08-16T15:12:26Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 30697, "attachment_id": null, "text": "If you can provide a test case that shows a mismatch between the documentation\nand the implementation, we'll be glad to carry it out, and hopefully fix the\nproblem.  But we need more detail than \"it seems.\"", "id": 77771, "time": "2005-07-28T16:14:13Z", "creator": "yoavs@computer.org", "creation_time": "2005-07-28T16:14:13Z", "is_private": false}, {"count": 2, "tags": [], "creator": "pr@objektpark.de", "attachment_id": null, "id": 78476, "time": "2005-08-14T11:45:05Z", "bug_id": 30697, "creation_time": "2005-08-14T11:45:05Z", "is_private": false, "text": "I don't thing that a cluster implementation sync multiple requests\nat different nodes. It is a perfomance killer and we not implement this.\n\nYou must have a single opening request to create the session. With sticky session\nmode at your loadbalancer all your frame request goes than to same node. Cluster\nworks only for node failures. Then your lb can navigate to the correct backup\nsession state.\n\nFrame based systems are very complicate story for correct failure handling\ninside a cluster. :-(\n\nPeter\n "}]