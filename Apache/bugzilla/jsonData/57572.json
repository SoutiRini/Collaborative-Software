[{"count": 0, "tags": [], "bug_id": 57572, "attachment_id": 32458, "is_private": false, "id": 180986, "time": "2015-02-11T23:52:03Z", "creator": "genka_v@yahoo.com", "creation_time": "2015-02-11T23:52:03Z", "text": "Created attachment 32458\nTest harness based on your original impl.\n\nMultiple comments easily lead to OOM.\n\nSee attached test to reproduce. \nIt should be run as follows \n... -Xmx512M -Dexcel.comments=all SSPerformanceTest SXSSF 10000 6 1\n\nAbove, we generate a fairly short comment for every single cell, 60,000 comments total, which isn't a big deal, from the business app perspective.\n\nThe OOM stack always points to allocation of XML objects related to comments and anchors, such as:\nException in thread \"main\" java.lang.OutOfMemoryError: GC overhead limit exceeded\n\tat org.apache.xmlbeans.impl.store.Xobj.ensureParent(Xobj.java:614)\n\tat org.apache.xmlbeans.impl.store.Xobj.getNormal(Xobj.java:661)\n\tat org.apache.xmlbeans.impl.store.Cur.moveNode(Cur.java:1958)\n\tat org.apache.xmlbeans.impl.store.Cur.moveNode(Cur.java:1846)\n\tat org.apache.xmlbeans.impl.store.Cursor.insertNode(Cursor.java:189)\n\tat org.apache.xmlbeans.impl.store.Cursor._insertAttributeWithValue(Cursor.java:1765)\n\tat org.apache.xmlbeans.impl.store.Cursor._insertAttributeWithValue(Cursor.java:1755)\n\tat org.apache.xmlbeans.impl.store.Cursor.insertAttributeWithValue(Cursor.java:4271)\n\tat org.apache.poi.xssf.usermodel.XSSFVMLDrawing.write(XSSFVMLDrawing.java:152)\n\tat org.apache.poi.xssf.usermodel.XSSFVMLDrawing.commit(XSSFVMLDrawing.java:176)\n\tat org.apache.poi.POIXMLDocumentPart.onSave(POIXMLDocumentPart.java:323)\n\tat org.apache.poi.POIXMLDocumentPart.onSave(POIXMLDocumentPart.java:327)\n\tat org.apache.poi.POIXMLDocumentPart.onSave(POIXMLDocumentPart.java:327)\n\tat org.apache.poi.POIXMLDocument.write(POIXMLDocument.java:195)\n\tat org.apache.poi.xssf.streaming.SXSSFWorkbook.write(SXSSFWorkbook.java:856)\n\tat SSPerformanceTest.main(SSPerformanceTest.java:132)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:606)\n\tat com.intellij.rt.execution.application.AppMain.main(AppMain.java:134)"}, {"count": 1, "tags": [], "bug_id": 57572, "text": "As a general guide, SXSSF relies on the common (in-memory) XSSF code for the bulk of the file format handling. The only exceptions to that are the sheet contents (buffered), and shared strings table (optional on-disk storage, see patches, not yet committed). \n\nNormally, this trade-off works - lots of things can be easily supported without massive re-writes, by using the existing XSSF code, and the other parts of the .xlsx file format are normally much much smaller\n\nIt looks like that in your case, one of these assumptions breaks down...\n\nIf having that many comments is a requirements, sadly it's going to need some more work, most likely from yourselves as you're the only ones affected. At a quick glance, it would seem your options are:\n * Provide an alternate XSSFVMLDrawing (and friends?) implementation which works in a streaming manner, much as SXSSFSheet does\n * Provide an alternate XSSFVMLDrawing (and friends?) implementation which uses an on-disk storage for random access, and a low-memory write, much as the proposed shared strings table support does\n\nJump on the dev list if you need help with starting down either route!", "id": 180988, "time": "2015-02-12T00:15:15Z", "creator": "apache@gagravarr.org", "creation_time": "2015-02-12T00:15:15Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 57572, "text": "I think this is nothing that we plan to support unless someone steps in and provides patches with accompanying unit-tests/sample files.", "id": 190100, "time": "2016-04-10T10:06:46Z", "creator": "dominik.stadler@gmx.at", "creation_time": "2016-04-10T10:06:46Z", "is_private": false, "attachment_id": null}]