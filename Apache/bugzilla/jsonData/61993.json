[{"count": 0, "text": "Created attachment 35675\nIf growing the buffer would overflow int then just set to max value\n\nWe use ByteChunk to read in the request body and we noticed 2 things.\n\n1.) The length of ByteChunk is limited to MAX_INT so for our purposes we can only process 2Gb requests before we need to alter our reading code.\n\n2.) The way that ByteChunk grows means that in practice you can often only use up to 1Gb of space.\n\nThe followign exception stack is thrown when append is called on and ByteChunk over 1Gb in size:\n\njava.lang.NegativeArraySizeException:java.lang.NegativeArraySizeException at org.apache.tomcat.util.buf.ByteChunk.makeSpace(ByteChunk.java:527) at org.apache.tomcat.util.buf.ByteChunk.append(ByteChunk.java:327)\n\nLooking at issue number 1 it looks like a lot of classes would need to be changed to use long but I do have a patch for a trivial check that allowed us to process 2Gb requests.\n\nObviously this could silently truncate once you actually reach INT_MAX but it seems from the previous check based on the limit that this is the desired behaviour rather than to throw an exception.", "bug_id": 61993, "attachment_id": 35675, "id": 203238, "time": "2018-01-12T13:04:33Z", "creator": "davecrighton@uk.ibm.com", "creation_time": "2018-01-12T13:04:33Z", "tags": [], "is_private": false}, {"count": 1, "tags": [], "bug_id": 61993, "attachment_id": null, "id": 203239, "time": "2018-01-12T14:18:12Z", "creator": "markt@apache.org", "creation_time": "2018-01-12T14:18:12Z", "is_private": false, "text": "Thanks for the report.\n\nOn closer inspection there appear to be a couple of other edge cases that could be handled better.\n\nI plan on putting together some unit tests to cover this case and the other edge cases.\n\nNote that CharChunk is likely to have similar issues."}, {"count": 2, "tags": [], "bug_id": 61993, "attachment_id": null, "id": 203240, "time": "2018-01-12T14:27:23Z", "creator": "davecrighton@uk.ibm.com", "creation_time": "2018-01-12T14:27:23Z", "is_private": false, "text": "Thanks Mark, \n\nI did consider submitting my own JUnit with the patch but it causes large allocations which, at least for our own build systems, makes it unsuitable at an operational level for automated unit test (requires higher heap sizes, slows down the build etc).\n\nWasn't sure what the best practice for the project is."}, {"count": 3, "tags": [], "text": "Typically, we add tests like that with the @Ignore annotation so we can run them easily from the IDE but they aren't run by the CI systems.\n\nI've looked at this further over the weekend and there are subtle differences between ByteChunk and CharChunk that don't look right - as well as quite a lot of duplication.", "is_private": false, "id": 203281, "creator": "markt@apache.org", "time": "2018-01-15T21:45:42Z", "bug_id": 61993, "creation_time": "2018-01-15T21:45:42Z", "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 61993, "attachment_id": null, "id": 203306, "time": "2018-01-16T22:17:25Z", "creator": "markt@apache.org", "creation_time": "2018-01-16T22:17:25Z", "is_private": false, "text": "Fixed in:\n- trunk for 9.0.4 onwards\n- 8.5.x for 8.5.27 onwards\n- 8.0.x for 8.0.49 onwards\n- 7.0.x for 7.0.84 onwards\n\nThanks for the patch - it is appreciated. It is just that with all the refactoring to reduce duplication and fix the various other edge cases I ended up taking a slightly different approach."}, {"count": 5, "tags": [], "creator": "davecrighton@uk.ibm.com", "attachment_id": null, "is_private": false, "id": 203315, "time": "2018-01-17T10:59:43Z", "bug_id": 61993, "creation_time": "2018-01-17T10:59:43Z", "text": "Thanks Mark. We'll pick up the fix for our main product builds in 7.0.84."}]