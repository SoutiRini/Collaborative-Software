[{"attachment_id": null, "tags": [], "bug_id": 53661, "text": "If a POST request is made to any Rivet page with an unsupported Content-Type header, the response is 500 with \"unknown content-type\" logged:\n\nIn rivet-trunk/src/apache-2/apache_request.c:\nap_log_rerror(REQ_ERROR, \"unknown content-type: `%s'\", ct);\n\n\nIt only allows \"multipart/form-data\", \"application/x-www-form-urlencoded\",\n\"text/xml\" currently.\n\nAs a workaround, users might be able to use mod_headers to change the type to one of the supported Rivet headers, but that is a bit annoying.\n\nMany other Content-Type values are completely legitimate things to accept, such as \"application/json\" or even\n'application/soap+xml; charset=utf-8; action=\"MyNameSpace:MyFunctionName\"'\n\nThere either needs to be a way to define acceptance of custom types, or the check needs to be removed entirely.", "count": 0, "id": 161119, "time": "2012-08-06T15:45:26Z", "creator": "jlawson-apache@bovine.net", "creation_time": "2012-08-06T15:45:26Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 53661, "is_private": false, "text": "The issue is interesting. I wish to discuss about this on rivet-dev. I must confess I'm not fully prepared on this. How is Rivet supposed to react to a different Content-Type? Is it supposed to allow user defined handlers to be run upon custom values of the header?", "id": 161963, "time": "2012-09-05T11:56:41Z", "creator": "mxmanghi@apache.org", "creation_time": "2012-09-05T11:56:41Z", "attachment_id": null}, {"count": 2, "tags": [], "creator": "jlawson-apache@bovine.net", "text": "The simplest solution would be to simply eliminate the Content-Type requirement entirely and not check it at all.\n\nWe might want to check what PHP (or another similar module) does to validate the Content-Type header, if it does anything.\n\nAnother option is to allow a new httpd.conf directive enumerate a list of glob strings that would be used to validate Content-Types of requests.  Let it default to the current list of 3, if you like, but allow the admin to override.", "id": 161978, "time": "2012-09-05T17:53:33Z", "bug_id": 53661, "creation_time": "2012-09-05T17:53:33Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 53661, "text": "Rivet pages can choose to check and handle the Content-Type header differently if they want to, but currently this check in apache_request.c is blocking the Rivet page from running at all.  I've had to use mod_headers+mod_rewrite to force the header to be one of the recognized values in our environment.", "id": 161979, "time": "2012-09-05T17:57:12Z", "creator": "jlawson-apache@bovine.net", "creation_time": "2012-09-05T17:57:12Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 53661, "text": "Provided that multipart data show be handled by the corresponding parser, do you propose every other request to be handled by ApacheRequest_parse_urlencoded?\n\n(In reply to comment #3)\n> Rivet pages can choose to check and handle the Content-Type header\n> differently if they want to, but currently this check in apache_request.c is\n> blocking the Rivet page from running at all.  I've had to use\n> mod_headers+mod_rewrite to force the header to be one of the recognized\n> values in our environment.", "id": 165042, "time": "2013-02-03T22:44:31Z", "creator": "mxmanghi@apache.org", "creation_time": "2013-02-03T22:44:31Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "creator": "mxmanghi@apache.org", "text": "Created attachment 29935\nproposed patch for relaxing check on Content-Type\n\nThis is the proposed patch. I would like to know your opinion before committing it", "id": 165147, "time": "2013-02-09T19:32:59Z", "bug_id": 53661, "creation_time": "2013-02-09T19:32:59Z", "is_private": false, "attachment_id": 29935}, {"count": 6, "tags": [], "bug_id": 53661, "attachment_id": null, "is_private": false, "id": 167364, "time": "2013-05-22T20:45:37Z", "creator": "mxmanghi@apache.org", "creation_time": "2013-05-22T20:45:37Z", "text": "the code in apache_request.c concerning handler selection based on method and Content-Type has been revised and further simplified. Basically POST requests with a Content-Type \"multipart/form-data\" are handled by ApacheRequest_parse_multipart whereas every other request is \nApacheRequest_parse_urlencoded. The latter function lets POST PUT and DELETE requests go through a further processing of request data"}]