[{"count": 0, "attachment_id": 26865, "bug_id": 51037, "is_private": false, "id": 145614, "time": "2011-04-07T05:20:24Z", "creator": "M8R-3mye921@thisisnotmyrealemail.com", "creation_time": "2011-04-07T05:20:24Z", "tags": [], "text": "Created attachment 26865\nFull test class\n\nThe method setDefaultColumnStyle(int column, CellStyle style) is not having any effect in an XSSFWorkbook. This is my test code:\n\npublic static void columnStyles(boolean xml) throws IOException {\n\tWorkbook wb = xml ? new XSSFWorkbook() : new HSSFWorkbook();\n\t\n\tCellStyle blueStyle = wb.createCellStyle();\n\tblueStyle.setFillForegroundColor(IndexedColors.AQUA.getIndex());\n\tblueStyle.setFillPattern(CellStyle.SOLID_FOREGROUND);\n\t\n\tCellStyle pinkStyle = wb.createCellStyle();\n\tpinkStyle.setFillForegroundColor(IndexedColors.PINK.getIndex());\n\tpinkStyle.setFillPattern(CellStyle.SOLID_FOREGROUND);\n\t\n\tSheet s1 = wb.createSheet(\"Pretty columns\");\n\t\n\ts1.setDefaultColumnStyle(4, blueStyle);\n\ts1.setDefaultColumnStyle(6, pinkStyle);\n\t\n\tRow r = s1.createRow(7);\n\tr.createCell(1).setCellStyle(pinkStyle);\n\tr.createCell(8).setCellStyle(blueStyle);\n\t\n\tfill(s1.createRow(3), \"The quick brown fox jumps over the lazy dog\".split(\"\\\\s+\"));\n\tsave(wb, (xml ? \"columnStyles.xlsx\" : \"columnStyles.xls\"));\n}\n\nThe styles are applied to the individual cells via setCellStyle(), but not to the columns.\n\nEverything works as expected when using an HSSFWorkbook."}, {"count": 1, "tags": [], "text": "There's code in XSSFSheet that looks to be doing the right thing, no it isn't missing code\n\nCould you try one thing to help track down what's wrong? Steps are:\n* Create a .xlsx file with a different style\n* Take a copy\n* Using Excel, apply that existing style as the default to a column\n* Using POI, apply that existing style as the default to a column\n* Unzip both resuling files (.xlsx is a zip of xml files)\n* Try to spot what POI did differently to Excel\n\nOnce we can narrow down what Excel is doing differently, we can then try to fix it in POI.", "attachment_id": null, "bug_id": 51037, "id": 145616, "time": "2011-04-07T07:11:29Z", "creator": "apache@gagravarr.org", "creation_time": "2011-04-07T07:11:29Z", "is_private": false}, {"count": 2, "tags": [], "text": "If I look at \"sheet1.xml\", the Excel-generated file has\n\t<dimension ref=\"B1:E1\"/>\n\nwhere the POI-generated file had\n\t<dimension ref=\"B1\"/>\n\nand Excel has\n\t<col min=\"2\" max=\"2\" width=\"9.140625\" style=\"1\"/>\n\t<col min=\"5\" max=\"5\" width=\"9.140625\" style=\"1\"/>\n\nwhere POI has\n\t<col min=\"2\" max=\"2\" style=\"1\" width=\"9.140625\" collapsed=\"false\"/>\n\t<col min=\"5\" max=\"5\" style=\"0\"/>\n\n\"styles.xml\" is not substantially different; the custom style is stored as\n\t<cellStyle name=\"PurpleStyle\" xfId=\"1\"/>\n\nIn both cases, column B (2) was the column which already had the style. Column E (5) was the one which I copied the style to in Excel or POI respectively.\n\nSo it looks like POI is creating a column entry in the worksheet file, but not storing the style.\n\nHope that helps.", "attachment_id": null, "bug_id": 51037, "id": 145618, "time": "2011-04-07T10:34:59Z", "creator": "M8R-3mye921@thisisnotmyrealemail.com", "creation_time": "2011-04-07T10:34:59Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 51037, "attachment_id": null, "id": 145619, "time": "2011-04-07T10:47:59Z", "creator": "M8R-3mye921@thisisnotmyrealemail.com", "creation_time": "2011-04-07T10:47:59Z", "is_private": false, "text": "Update: I've just simplified my test code, and this time POI managed to update the spreadsheet correctly.\n\nIf I use \"workbook.getCellStyleAt((short) 1)\" to reference the style, then it works. If I use \"cell.getCellStyle()\", it doesn't."}, {"count": 4, "tags": [], "creator": "M8R-3mye921@thisisnotmyrealemail.com", "attachment_id": null, "id": 145622, "time": "2011-04-07T11:59:22Z", "bug_id": 51037, "creation_time": "2011-04-07T11:59:22Z", "is_private": false, "text": "*Correction*!\n\nThe original code does in fact fill the columns as I asked. However, the column widths are then set to 0, which made me originally think that the code had not done anything.\n\nIn addition, when I unhide the columns, I find that the newly-created cells had not respected the default column style, but had been created with a blank (unfilled) background."}, {"count": 5, "tags": [], "creator": "apache@gagravarr.org", "is_private": false, "text": "I've just added a unit test in r1092423 for the case you describe. However, it does all seem to be working fine for me - the column gets set up with the style as you'd expect. I can't replicate your problem of the style not being set.\n\nAre you able to compare my test code to yours to see what's happening differently?", "id": 145786, "time": "2011-04-14T14:08:21Z", "bug_id": 51037, "creation_time": "2011-04-14T14:08:21Z", "attachment_id": null}, {"count": 6, "attachment_id": null, "bug_id": 51037, "is_private": false, "id": 146016, "time": "2011-04-27T09:49:01Z", "creator": "bill@somervilles.org", "creation_time": "2011-04-27T09:49:01Z", "tags": [], "text": "(In reply to comment #5)\n> I've just added a unit test in r1092423 for the case you describe. However, it\n> does all seem to be working fine for me - the column gets set up with the style\n> as you'd expect. I can't replicate your problem of the style not being set.\n> \n> Are you able to compare my test code to yours to see what's happening\n> differently?\n\nHi.  I'm having what I think to be the same problem.  The code below reliably reproduces the problem.  Note that the same code works fine (as expected) with HSSFWorkbook, and note also the workaround:\n\nimport org.apache.poi.ss.usermodel.Workbook;\nimport org.apache.poi.ss.usermodel.Sheet;\nimport org.apache.poi.ss.usermodel.Row;\nimport org.apache.poi.ss.usermodel.Cell;\nimport org.apache.poi.ss.usermodel.CellStyle;\nimport org.apache.poi.xssf.usermodel.XSSFWorkbook;\nimport org.apache.poi.hssf.usermodel.HSSFWorkbook;\nimport org.apache.poi.hssf.util.HSSFColor;\nimport java.io.FileOutputStream;\n\npublic class Test\n{\n\n    public static void main(String args[])\n    {\n        try\n        {\n            Test test = new Test();\n            test.run();\n        }\n        catch (Exception e)\n        {\n            e.printStackTrace();\n        }\n    }\n\n    Test()\n    {\n    }\n\n    void run()\n            throws Exception\n    {\n\t// Problem: column 0 ends up with zero width and white background in XSSFWorkbook; looks OK in HSSFWorkbook\n        Workbook workbook = new XSSFWorkbook();\n\tFileOutputStream stream = new FileOutputStream(\"C:\\\\Temp\\\\Foo.xlsx\");\n        //Workbook workbook = new HSSFWorkbook();\n\t//FileOutputStream stream = new FileOutputStream(\"C:\\\\Temp\\\\Foo.xls\");\n\tSheet sheet = workbook.createSheet();\n\tCellStyle styleGray = workbook.createCellStyle();\n\n\tstyleGray.setFillForegroundColor(HSSFColor.GREY_25_PERCENT.index);\n\tstyleGray.setFillPattern(CellStyle.SOLID_FOREGROUND);\n\n\tsheet.setDefaultColumnStyle(0, styleGray);\n\n\tRow row = sheet.createRow(0);\n\tCell cell;\n\tint column = 0;\n\tcell = row.createCell(column);\n\tcell.setCellValue(\"I'm gray\");\n\t// Workaround: cell.setCellStyle(sheet.getColumnStyle(column));\n\t// Workaround: sheet.autoSizeColumn(column);\n\n\tcell = row.createCell(++column);\n\tcell.setCellValue(\"I'm white\");\n\tworkbook.write(stream);\n\tstream.flush();\n    }\n}"}, {"count": 7, "attachment_id": null, "bug_id": 51037, "is_private": false, "id": 165821, "time": "2013-03-14T06:55:48Z", "creator": "sumedh.inamdar@gmail.com", "creation_time": "2013-03-14T06:55:48Z", "tags": [], "text": "I tried with SXSSFSheet and it doesn't work there either."}, {"count": 8, "tags": [], "bug_id": 51037, "attachment_id": null, "id": 176350, "time": "2014-07-11T13:24:09Z", "creator": "maksim.tsilayeu@embedit.cz", "creation_time": "2014-07-11T13:24:09Z", "is_private": false, "text": "it seems like an issue with generated xl\\worksheets\\sheet1.xml\n\nIf you use sheet.setDefaultColumnStyle then generated xml is missing \"s\" attribute - which is used for style reference, so it looks like:\n&lt;c r=\"I2\" t=\"n\"&gt;&lt;v&gt;41830.0&lt;/v&gt;&lt;/c&gt;\n\nHowever if you use cell.setCellStyle then style attribute is generated, so it looks like: \n&lt;c r=\"I2\" t=\"n\" s=\"1\"&gt;&lt;v&gt;41830.0&lt;/v&gt;&lt;/c&gt;\n\nIt would be nice to have this issue fixed :)"}, {"count": 9, "tags": [], "text": "(In reply to maksim.tsilayeu from comment #8)\n> it seems like an issue with generated xl\\worksheets\\sheet1.xml\n> \n> If you use sheet.setDefaultColumnStyle then generated xml is missing \"s\"\n> attribute - which is used for style reference, so it looks like:\n> &lt;c r=\"I2\" t=\"n\"&gt;&lt;v&gt;41830.0&lt;/v&gt;&lt;/c&gt;\n> \n> However if you use cell.setCellStyle then style attribute is generated, so\n> it looks like: \n> &lt;c r=\"I2\" t=\"n\" s=\"1\"&gt;&lt;v&gt;41830.0&lt;/v&gt;&lt;/c&gt;\n\nMaking changes to the default style on a column won't alter the cells within that column. If you want to style on specific cell (c element in xlsx) you need to use cell.setCellStyle on that specific cell.", "attachment_id": null, "bug_id": 51037, "id": 176389, "time": "2014-07-14T18:17:36Z", "creator": "apache@gagravarr.org", "creation_time": "2014-07-14T18:17:36Z", "is_private": false}, {"count": 10, "tags": [], "bug_id": 51037, "attachment_id": null, "id": 185565, "time": "2015-09-30T12:11:18Z", "creator": "dominik.stadler@gmx.at", "creation_time": "2015-09-30T12:11:18Z", "is_private": false, "text": "*** Bug 58461 has been marked as a duplicate of this bug. ***"}, {"count": 11, "tags": [], "creator": "dominik.stadler@gmx.at", "is_private": false, "text": "Bug 58461 handles basically the same thing and contains standalone code to reproduce the problem.", "id": 185567, "time": "2015-09-30T12:12:19Z", "bug_id": 51037, "creation_time": "2015-09-30T12:12:19Z", "attachment_id": null}, {"count": 12, "tags": [], "text": "For anyone wanting to investigate this further, there looks to be some good information at http://stackoverflow.com/questions/34463072/i-want-to-arrange-entire-cells-in-specific-column-instead-of-individual-cells on this area", "attachment_id": null, "bug_id": 51037, "id": 187595, "time": "2016-01-13T07:43:23Z", "creator": "apache@gagravarr.org", "creation_time": "2016-01-13T07:43:23Z", "is_private": false}]