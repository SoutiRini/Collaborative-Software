[{"count": 0, "tags": [], "bug_id": 45608, "is_private": false, "text": "We found field countAllocated are accessed by allocate() and deallocate() without any protections by locks.\n\nHere is a trace log,\n\n  Thread http-8081-1 id: 23 : READ\n      [org.apache.catalina.core.StandardWrapper : allocate : 820]\n      [org.apache.catalina.core.StandardWrapperValve : invoke : 129]\n      [org.apache.catalina.core.StandardContextValve : invoke : 175]\n      [org.apache.catalina.core.StandardHostValve : invoke : 128]\n      [org.apache.catalina.valves.ErrorReportValve : invoke : 104]\n      [org.apache.catalina.core.StandardEngineValve : invoke : 109]\n      [org.apache.catalina.connector.CoyoteAdapter : service : 261]\n      [org.apache.coyote.http11.Http11Processor : process : 844]\n      [org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler : process : 581]\n      [org.apache.tomcat.util.net.JIoEndpoint$Worker : run : 447]\n      [java.lang.Thread : run : 735]\n\n  Thread http-8081-4 id: 26 : WRITE\n\n      [org.apache.catalina.core.StandardWrapper : deallocate : 871]\n      [org.apache.catalina.core.StandardWrapperValve : invoke : 298]\n      [org.apache.catalina.core.StandardContextValve : invoke : 175]\n      [org.apache.catalina.core.StandardHostValve : invoke : 128] \n      [org.apache.catalina.valves.ErrorReportValve : invoke : 104] \n      [org.apache.catalina.core.StandardEngineValve : invoke : 109]\n      [org.apache.catalina.connector.CoyoteAdapter : service : 261]\n      [org.apache.coyote.http11.Http11Processor : process : 844]\n      [org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler : process : 581]\n      [org.apache.tomcat.util.net.JIoEndpoint$Worker : run : 447]\n      [java.lang.Thread : run : 735]\n\nThread http-8081-4 and http-8081-1 will access countAllocated in parallel.  Since increment and decrement is *NOT* atomic, we think it is a potential race condition.", "id": 119666, "time": "2008-08-10T21:27:37Z", "creator": "qiyaoltc@gmail.com", "creation_time": "2008-08-10T21:27:37Z", "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 45608, "is_private": false, "text": "This has been fixed in trunk and proposed for 6.0.x", "id": 119719, "time": "2008-08-12T08:12:26Z", "creator": "markt@apache.org", "creation_time": "2008-08-12T08:12:26Z", "attachment_id": null}, {"count": 2, "tags": [], "creator": "kanekotky@gmail.com", "text": "\n\n*** This bug has been marked as a duplicate of bug 43228 ***", "id": 119725, "time": "2008-08-12T09:32:44Z", "bug_id": 45608, "creation_time": "2008-08-12T09:32:44Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 45608, "is_private": false, "text": "I'm sorry.\nI only wanted to notify the related bug.", "id": 119727, "time": "2008-08-12T09:35:02Z", "creator": "kanekotky@gmail.com", "creation_time": "2008-08-12T09:35:02Z", "attachment_id": null}, {"text": "This has now been fixed in 6.0.x and will be included in 6.0.19 onwards.", "tags": [], "bug_id": 45608, "is_private": false, "count": 4, "id": 124550, "time": "2009-01-30T23:39:28Z", "creator": "markt@apache.org", "creation_time": "2009-01-30T23:39:28Z", "attachment_id": null}, {"count": 5, "tags": [], "creator": "qiyaoltc@gmail.com", "text": "Actually, we use MTRAT to find this bug in tomcat.  MTRAT could find potential data race and deadlock in Java program.\n\nGet more on http://www.alphaworks.ibm.com/tech/mtrat", "id": 124667, "attachment_id": null, "bug_id": 45608, "creation_time": "2009-02-04T17:00:22Z", "time": "2009-02-04T17:00:22Z", "is_private": false}]