[{"count": 0, "tags": [], "bug_id": 6128, "attachment_id": null, "id": 10072, "time": "2002-01-30T14:41:31Z", "creator": "routar@ideorlando.org", "creation_time": "2002-01-30T14:41:31Z", "is_private": false, "text": "We wrote our own revalidating parser:\n\n        outputFormat.setIndenting(true);\n        outputFormat.setOmitComments(false);\n        outputFormat.setOmitDocumentType(false);\n        outputFormat.setOmitXMLDeclaration(false);\n        outputFormat.setEncoding(RepositoryConstants.XMLENCODING);\n        serial = new XMLSerializer(stringOut, outputFormat);\n        serial.asDOMSerializer();\n        serial.serialize(doc);\n\n        strReader = new StringReader(stringOut.toString());\n\n        try {\n            // Creating an input source that the parser will accept\n            // and passing it as the parameter to validateFile\n            this.validateFile(new InputSource(strReader));\n        }\n\nOn Xerces 1.4.3 this works for both XML Schema and DTD, but on Xerces 1.4.4 it \ndoes not work for DTD's, we get this message:\n\nStopping after fatal error: File \"bookgram.dtd\" not found.\n\nThe xml file is as follows:\n\n<?xml version=\"1.0\"?>\n<!DOCTYPE book SYSTEM \"bookgram.dtd\">\n<book>\n\t<title>Professional Java Programming</title>\n\t<author>Brett Spell</author>\n\n\t<publisher>Wrox Press</publisher>\n\t<tableOfContents showPageNumbers=\"Yes\">\n\t\t<tocEntry>Printing</tocEntry>\n\t\t<tocEntry>Cut and Paste</tocEntry>\n\t\t<tocEntry>Drag and Drop</tocEntry>\n\t</tableOfContents>\n</book>\n\n\nthe DTD is as follows:\n\n<!ELEMENT book (title, author, publisher, tableOfContents)>\n<!ELEMENT title (#PCDATA)>\n<!ELEMENT author (#PCDATA)>\n<!ELEMENT publisher (#PCDATA)>\n<!ELEMENT tableOfContents (tocEntry+)>\n<!ATTLIST tableOfContents\n\tshowPageNumbers CDATA \"yes\"\n>\n<!ELEMENT tocEntry (#PCDATA)>\n\n\nPlease let us know if this is a bug or a problem on our end.\n\nThanks,\n\nRob"}, {"count": 1, "tags": [], "creator": "pavani.mukthipudi@india.sun.com", "attachment_id": null, "id": 10073, "time": "2002-01-30T15:11:37Z", "bug_id": 6128, "creation_time": "2002-01-30T15:11:37Z", "is_private": false, "text": "I don't think it's a bug. It works fine for me. The problem might be at your\nend. Please check it once again and close the bug."}, {"count": 2, "tags": [], "text": "I tried it with 1.4.3, and it works, but in 1.4.4. it does not so I do not \nbelieve to be an error on my end, I have steped through my code, and everything \nis good until I call parse, then parse throws the exception I told you about.  \nDid you use the code I sent you?  Regular parsing through a file works, but \nwhen we try to do the revalidating, then is when it fails.\n\nLet me know,\n\nRob", "is_private": false, "id": 10075, "creator": "routar@ideorlando.org", "time": "2002-01-30T15:19:09Z", "bug_id": 6128, "creation_time": "2002-01-30T15:19:09Z", "attachment_id": null}, {"count": 3, "attachment_id": null, "creator": "gmarcy@us.ibm.com", "is_private": false, "id": 10076, "time": "2002-01-30T15:26:15Z", "bug_id": 6128, "creation_time": "2002-01-30T15:26:15Z", "tags": [], "text": "This appears to be the classic \"missing BaseURI\" problem.  Since you are asking \nthe parser to read input from a character stream (StringReader) there is no \n\"context\" for the parser to know where to find the \"relative URI\" that is \nspecified for the DTD, i.e. \"bookgram.dtd\".  If you set a base URI for the \ndocument using InputSource#setSystemId() then the parser will know where to \nstart looking for the DTD.  Otherwise, the parser tries to guess and looks at \nthe directory that System.getProperty(\"user.dir\") returns.  Not very robust and \nis probably why this problem appears for some people and disappears for others.\n"}, {"count": 4, "tags": [], "bug_id": 6128, "attachment_id": null, "id": 10077, "time": "2002-01-30T15:31:27Z", "creator": "routar@ideorlando.org", "creation_time": "2002-01-30T15:31:27Z", "is_private": false, "text": "You do have a good point about the string reader but when we run the test we do \nthis:\n\n-Duser.dir=\"F:\\onesaf_dev\\src\\net\\onesaf\\repository\"\n\nwhich is where the files are located but we still get the problem.\n\n"}, {"count": 5, "tags": [], "bug_id": 6128, "attachment_id": null, "id": 10130, "time": "2002-01-31T18:13:54Z", "creator": "routar@ideorlando.org", "creation_time": "2002-01-31T18:13:54Z", "is_private": false, "text": "Has anyone had a chance to look at this?  Somthing had to change from Xerces \n1.4.3 to 1.4.4 also at xerces-j-user@xml.apache.org this was logged:\n\nDear all,\n\nI used to be able to include DTDs as follows\n\n<?xml version=\"1.0\" standalone=\"no\"?>\n<!DOCTYPE RuleSet SYSTEM \"../../DTD/RuleSet.dtd\">\n\nand Xerces would pick them up, up to version 1.4.2. Version 1.4.3 and\n1.4.4 throw a SAXParseException saying \"File not Found\".\n\nWhat has changed since then? Is this a bug or a feature? I use relative\nDTD references all over the place, help :)\n\n(By the way, the XML files are read from the local hard disk using a\nfiltinputstream in this case, not over HTTP).\n\nChristian\n\n\nso something has to be up.\n\nThanks,\n\n\nRob\n"}]