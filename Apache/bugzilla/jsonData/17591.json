[{"count": 0, "tags": [], "bug_id": 17591, "attachment_id": null, "text": "The methods load, etc. in JDBCStore are not thread safe.\n\n\nBut they are called by more than one thread simultanious.\n\n\nThis gives a race condition with PreparedStatement, which can lead to sessions \ngoing to the wrong browser.\n\n\nI send a mail to security@apache.org, who forwarded it to the tomcat developers \nabout two weeks ago, but I haven't seen a change in the CVS about this yet.\n\n\nIn our webapp we've seen more than ones, that users got somebody elses session \nafter a reload of the webapp in which all the sessions get saved to and loaded \nfrom the database.\n\n\n\n\nThe use of the Statements is also not always correct.\n\n\nResultSets are closed before all the data of the ResultSet is used.\n\n\nExample:\n\n\nin = BufferedInputStream(resultset.getBinaryStream(\"bla\"));\n\n\nresultset.close();\n\n\nin.read(...);\n\n\n\n\nI think this is also not thread safe. And wil succeed with small sessions, but \nfails if the serialized session is large.\n\n\n\n\nI wil submit an untested patch for JDBCStore.load().", "id": 32310, "time": "2003-03-03T12:25:31Z", "creator": "ronald@klop.yi.org", "creation_time": "2003-03-03T12:25:31Z", "is_private": false}, {"count": 1, "tags": [], "text": "Created attachment 5115\nUntested patch for JDBCStore.load().", "is_private": false, "id": 32311, "creator": "ronald@klop.yi.org", "time": "2003-03-03T12:27:48Z", "bug_id": 17591, "creation_time": "2003-03-03T12:27:48Z", "attachment_id": 5115}, {"count": 2, "tags": [], "bug_id": 17591, "attachment_id": null, "is_private": false, "id": 32387, "time": "2003-03-04T04:15:33Z", "creator": "glenn@apache.org", "creation_time": "2003-03-04T04:15:33Z", "text": "Thanks for reporting this bug.  JDBCStore has been refactored so that its\nuse of the db connection is thread safe.  Fix will be available in the next\nTomcat release 4.1.22."}]