[{"count": 0, "tags": [], "creator": "kiralyattila.hu@gmail.com", "text": "NDC documentation says that users should call remove() to get rid of the not needed entries and that the best place for that would be at the end of the thread's life.\nHowever in a servlet/filter environment (for example Spring's Log4jNestedDiagnosticContextFilter, http://static.springframework.org/spring/docs/2.5.x/api/org/springframework/web/filter/Log4jNestedDiagnosticContextFilter.html) there is no ideal place to call NDC.remove() (because spring does not know if anything else is using NDC or not and the web app developer does not know if the servlet container is using NDC or not).\n\nSo maybe NDC could remove the Hashtable entry in the pop if the Stack is left empty. That would solve the mentioned problem and would also maintain compatibility.\n\nThis idea came up with conjunction of Spring's filter (http://jira.springframework.org/browse/SPR-5103).", "id": 119958, "time": "2008-08-20T13:03:04Z", "bug_id": 45660, "creation_time": "2008-08-20T13:03:04Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 45660, "attachment_id": null, "text": "Yes, but it could also radically affect performance if you had a situation where you repeatedly pushed and popped the only value on the stack.  With the suggested change that would also involve a hashtable construction and destruction where it does not currently do that.\n\nIf you know that you are at the end of a threads life but don't know if the thread used NDC, it doesn't hurt to call NDC.remove().  NDC.remove not only clears the current thread, but does the equivalent of garbage collection on NDC's left by other threads that may have died.  If you find some way to make sure that NDC.remove is called occasionally, you should be able to avoid memory bloat.\n\nObviously there are a lot better ways to write NDC and MDC with the current JVM's, but completely rewriting NDC and MDC in a maintenance release is a little too risky for me and would be better to spend the effort on log4j 2.0.  log4j 1.3 did rewrite NDC and MDC, but there have been no plans to backport that to log4j 1.2.x.", "id": 119964, "time": "2008-08-20T14:53:26Z", "creator": "carnold@apache.org", "creation_time": "2008-08-20T14:53:26Z", "is_private": false}]