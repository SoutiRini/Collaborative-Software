[{"count": 0, "tags": [], "bug_id": 49043, "text": "It looks like there is a serious bug in the handling of virtual includes with\nApaches SSI filter.\n\nTake the following code:\n<html><body>\n<!--#echo var=\"QUERY_STRING\"-->\n<!--#include virtual=\"/ssi2.php?abc=1\"-->\n<!--#echo var=\"QUERY_STRING\"-->\n</body></html>\n\nIf this is called with the query string \"(url)?test=1\" then the first echo will\nprint \"test=1\" as expected but the second one will output \"abc=1\".\nApparently the include in the middle completely obliterates the original query\nstring making it unusable for subsequent includes.\n\nThat's a major problem as soon as you use more than one SSI include with\nQUERY_STRING in your pages.\n\n(I'm seeing this with the httpd from the latest Centos as well as the newer httpd from Fedora using the SSI output filter)", "id": 135866, "time": "2010-04-04T01:12:47Z", "creator": "dennisml@conversis.de", "creation_time": "2010-04-04T01:12:47Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "creator": "niko.theiner@sybit.de", "attachment_id": null, "id": 142305, "time": "2010-12-02T10:25:34Z", "bug_id": 49043, "creation_time": "2010-12-02T10:25:34Z", "is_private": false, "text": "Yeah, we're suffering from the same problem (Apache 2.2.16 Linux). We have established a work-around now which stores the original query string in a backup variable and restores it after the include:\n\n<!--#set var=\"QUERY_STRING_BAK\" value=\"$QUERY_STRING\"-->\n<!--#include virtual=\"include.html\" -->\n<!--#set var=\"QUERY_STRING\" value=\"$QUERY_STRING_BAK\"-->\n\nNot nice, but working ;)\n\nAny chance for a fix soon?"}]