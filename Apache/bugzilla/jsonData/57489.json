[{"count": 0, "tags": [], "text": "Hello all,\n\nwe have been trying to track down the cause of some strange exceptions produced by our application, that are related to the websocket connection somehow being dropped.\n\nThis happens in multiple deployments of the application, but this one in particular is on a Windows 8 Machine.\n\n2015-01-22 15:14:09,599 CST WARN  [null] - Duplicate resource 7143de60-6212-4a06-8e2b-ce266c1d9769. Could be caused by a dead connection not detected by your server. Replacing the old one with the fresh one \n2015-01-22 15:14:09,599 CST ERROR [null] - java.io.IOException:  \n     at org.apache.tomcat.websocket.WsRemoteEndpointImplBase.startMessageBlock(WsRemoteEndpointImplBase.java:276) \n     at org.apache.tomcat.websocket.WsSession.sendCloseMessage(WsSession.java:536) \n     at org.apache.tomcat.websocket.WsSession.doClose(WsSession.java:464) \n     at org.apache.tomcat.websocket.WsSession.close(WsSession.java:441) \n     at org.apache.tomcat.websocket.WsSession.close(WsSession.java:435) \n     at org.atmosphere.container.version.JSR356WebSocket.close(JSR356WebSocket.java:142) \n     at org.atmosphere.websocket.WebSocket.close(WebSocket.java:273) \n     at org.atmosphere.cpr.AtmosphereResponse.close(AtmosphereResponse.java:848) \n     at org.atmosphere.cpr.AtmosphereResourceImpl.cancel(AtmosphereResourceImpl.java:779) \n     at org.atmosphere.cpr.AtmosphereResourceImpl.close(AtmosphereResourceImpl.java:855) \n     at com.vaadin.server.communication.AtmospherePushConnection.disconnect(AtmospherePushConnection.java:305) \n     at com.vaadin.server.communication.PushHandler.disconnect(PushHandler.java:430) \n     at com.vaadin.server.communication.PushHandler.onDisconnect(PushHandler.java:330) \n     at org.atmosphere.cpr.AtmosphereResourceImpl.onDisconnect(AtmosphereResourceImpl.java:715) \n     at org.atmosphere.cpr.AtmosphereResourceImpl.notifyListeners(AtmosphereResourceImpl.java:618) \n     at org.atmosphere.cpr.AtmosphereResourceImpl.notifyListeners(AtmosphereResourceImpl.java:598) \n     at org.atmosphere.cpr.AtmosphereResourceImpl.dirtyClose(AtmosphereResourceImpl.java:864) \n     at org.atmosphere.cpr.DefaultBroadcaster.addAtmosphereResource(DefaultBroadcaster.java:1370) \n     at org.atmosphere.cpr.AtmosphereResourceImpl.suspend(AtmosphereResourceImpl.java:408) \n     at org.atmosphere.cpr.AtmosphereResourceImpl.suspend(AtmosphereResourceImpl.java:324) \n     at com.vaadin.server.communication.PushHandler$2.run(PushHandler.java:131) \n     at com.vaadin.server.communication.PushHandler.callWithUi(PushHandler.java:253) \n     at com.vaadin.server.communication.PushHandler.access$200(PushHandler.java:56) \n     at com.vaadin.server.communication.PushHandler$1.onRequest(PushHandler.java:74) \n     at org.atmosphere.cpr.AsynchronousProcessor.action(AsynchronousProcessor.java:205) \n     at org.atmosphere.cpr.AsynchronousProcessor.suspended(AsynchronousProcessor.java:104) \n     at org.atmosphere.container.Servlet30CometSupport.service(Servlet30CometSupport.java:66) \n     at org.atmosphere.cpr.AtmosphereFramework.doCometSupport(AtmosphereFramework.java:2075) \n     at org.atmosphere.websocket.DefaultWebSocketProcessor.dispatch(DefaultWebSocketProcessor.java:570) \n     at org.atmosphere.websocket.DefaultWebSocketProcessor.open(DefaultWebSocketProcessor.java:215) \n     at org.atmosphere.container.JSR356Endpoint.onOpen(JSR356Endpoint.java:198) \n     at org.apache.tomcat.websocket.server.WsHttpUpgradeHandler.init(WsHttpUpgradeHandler.java:138) \n     at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:684) \n     at org.apache.coyote.http11.Http11NioProtocol$Http11ConnectionHandler.process(Http11NioProtocol.java:222) \n     at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1556) \n     at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1513) \n     at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source) \n     at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source) \n     at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) \n     at java.lang.Thread.run(Unknown Source) \nCaused by: java.util.concurrent.ExecutionException: java.io.IOException: Key must be cancelled \n     at org.apache.tomcat.websocket.FutureToSendHandler.get(FutureToSendHandler.java:102) \n     at org.apache.tomcat.websocket.WsRemoteEndpointImplBase.startMessageBlock(WsRemoteEndpointImplBase.java:269) \n     ... 39 more \nCaused by: java.io.IOException: Key must be cancelled \n     at org.apache.coyote.http11.upgrade.NioServletOutputStream.doWriteInternal(NioServletOutputStream.java:84) \n     at org.apache.coyote.http11.upgrade.NioServletOutputStream.doWrite(NioServletOutputStream.java:61) \n     at org.apache.coyote.http11.upgrade.AbstractServletOutputStream.writeInternal(AbstractServletOutputStream.java:162) \n     at org.apache.coyote.http11.upgrade.AbstractServletOutputStream.write(AbstractServletOutputStream.java:129) \n     at org.apache.tomcat.websocket.server.WsRemoteEndpointImplServer.onWritePossible(WsRemoteEndpointImplServer.java:99) \n     at org.apache.tomcat.websocket.server.WsRemoteEndpointImplServer.doWrite(WsRemoteEndpointImplServer.java:81) \n     at org.apache.tomcat.websocket.WsRemoteEndpointImplBase.writeMessagePart(WsRemoteEndpointImplBase.java:444) \n     at org.apache.tomcat.websocket.WsRemoteEndpointImplBase.startMessage(WsRemoteEndpointImplBase.java:335) \n     at org.apache.tomcat.websocket.WsRemoteEndpointImplBase.startMessageBlock(WsRemoteEndpointImplBase.java:264) \n     ... 39 more \nCaused by: java.util.concurrent.ExecutionException: \n     at org.apache.tomcat.websocket.FutureToSendHandler.get(FutureToSendHandler.java:102) \n     at org.apache.tomcat.websocket.WsRemoteEndpointImplBase.startMessageBlock(WsRemoteEndpointImplBase.java:269) \n     at org.apache.tomcat.websocket.WsSession.sendCloseMessage(WsSession.java:536) \n     at org.apache.tomcat.websocket.WsSession.doClose(WsSession.java:464) \n     at org.apache.tomcat.websocket.WsSession.close(WsSession.java:441) \n     at org.apache.tomcat.websocket.WsSession.close(WsSession.java:435) \n     at org.atmosphere.container.version.JSR356WebSocket.close(JSR356WebSocket.java:142) \n     at org.atmosphere.websocket.WebSocket.close(WebSocket.java:273) \n     at org.atmosphere.cpr.AtmosphereResponse.close(AtmosphereResponse.java:848) \n     at org.atmosphere.cpr.AtmosphereResourceImpl.cancel(AtmosphereResourceImpl.java:779) \n     at org.atmosphere.cpr.AtmosphereResourceImpl.close(AtmosphereResourceImpl.java:855) \n     at com.vaadin.server.communication.AtmospherePushConnection.disconnect(AtmospherePushConnection.java:305) \n     at com.vaadin.server.communication.PushHandler.disconnect(PushHandler.java:430) \n     at com.vaadin.server.communication.PushHandler.onDisconnect(PushHandler.java:330) \n     at org.atmosphere.cpr.AtmosphereResourceImpl.onDisconnect(AtmosphereResourceImpl.java:715) \n     at org.atmosphere.cpr.AtmosphereResourceImpl.notifyListeners(AtmosphereResourceImpl.java:618) \n     at org.atmosphere.cpr.AtmosphereResourceImpl.notifyListeners(AtmosphereResourceImpl.java:598) \n     at org.atmosphere.cpr.AtmosphereResourceImpl.dirtyClose(AtmosphereResourceImpl.java:864) \n     at org.atmosphere.cpr.DefaultBroadcaster.addAtmosphereResource(DefaultBroadcaster.java:1370) \n     at org.atmosphere.cpr.AtmosphereResourceImpl.suspend(AtmosphereResourceImpl.java:408) \n     at org.atmosphere.cpr.AtmosphereResourceImpl.suspend(AtmosphereResourceImpl.java:324) \n     at com.vaadin.server.communication.PushHandler$2.run(PushHandler.java:131) \n     at com.vaadin.server.communication.PushHandler.callWithUi(PushHandler.java:253) \n     at com.vaadin.server.communication.PushHandler.access$200(PushHandler.java:56) \n     at com.vaadin.server.communication.PushHandler$1.onRequest(PushHandler.java:74) \n     at org.atmosphere.cpr.AsynchronousProcessor.action(AsynchronousProcessor.java:205) \n     at org.atmosphere.cpr.AsynchronousProcessor.suspended(AsynchronousProcessor.java:104) \n     at org.atmosphere.container.Servlet30CometSupport.service(Servlet30CometSupport.java:66) \n     at org.atmosphere.cpr.AtmosphereFramework.doCometSupport(AtmosphereFramework.java:2075) \n     at org.atmosphere.websocket.DefaultWebSocketProcessor.dispatch(DefaultWebSocketProcessor.java:570) \n     at org.atmosphere.websocket.DefaultWebSocketProcessor.open(DefaultWebSocketProcessor.java:215) \n     at org.atmosphere.container.JSR356Endpoint.onOpen(JSR356Endpoint.java:198) \n     at org.apache.tomcat.websocket.server.WsHttpUpgradeHandler.init(WsHttpUpgradeHandler.java:138) \n     at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:684) \n     at org.apache.coyote.http11.Http11NioProtocol$Http11ConnectionHandler.process(Http11NioProtocol.java:222) \n     at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1556) \n     at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1513) \n     at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source) \n     at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source) \n     at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) \n     at java.lang.Thread.run(Unknown Source) \nCaused by: java.io.IOException: Key must be cancelled \n     at org.apache.coyote.http11.upgrade.NioServletOutputStream.doWriteInternal(NioServletOutputStream.java:84) \n     at org.apache.coyote.http11.upgrade.NioServletOutputStream.doWrite(NioServletOutputStream.java:61) \n     at org.apache.coyote.http11.upgrade.AbstractServletOutputStream.writeInternal(AbstractServletOutputStream.java:162) \n     at org.apache.coyote.http11.upgrade.AbstractServletOutputStream.write(AbstractServletOutputStream.java:129) \n     at org.apache.tomcat.websocket.server.WsRemoteEndpointImplServer.onWritePossible(WsRemoteEndpointImplServer.java:99) \n     at org.apache.tomcat.websocket.server.WsRemoteEndpointImplServer.doWrite(WsRemoteEndpointImplServer.java:81) \n     at org.apache.tomcat.websocket.WsRemoteEndpointImplBase.writeMessagePart(WsRemoteEndpointImplBase.java:444) \n     at org.apache.tomcat.websocket.WsRemoteEndpointImplBase.startMessage(WsRemoteEndpointImplBase.java:335) \n     at org.apache.tomcat.websocket.WsRemoteEndpointImplBase.startMessageBlock(WsRemoteEndpointImplBase.java:264) \n     ... 39 more\n\nJava 8\nNIO connector\n\nI reported this to the Atmosphere maintainer, who responded with the following:\n\njfarcand \t\n9:53 AM (6 hours ago)\nHi,\nplease file a bug in Tomcat, this is clearly an issue with NIO/Tomcat implementation. It may happens less frequently with 2.2.5-SNAPSHOT, but still the issue is with Tomcat.\n\nThanks\n\n-- Jeanfrancois\nOn 2015-01-23 10:47 AM, Chris Boyd wrote:\nCaused by: java.io.IOException: Key must be cancelled \n     at org.apache.coyote.http11.upgrade.NioServletOutputStream.doWriteInternal(NioServletOutputStream.java:84) \n     at org.apache.coyote.http11.upgrade.NioServletOutputStream.doWrite(NioServletOutputStream.java:61) \n     at org.apache.coyote.http11.upgrade.AbstractServletOutputStream.writeInternal(AbstractServletOutputStream.java:162)", "is_private": false, "bug_id": 57489, "id": 180539, "time": "2015-01-23T22:54:04Z", "creator": "wodencafe@gmail.com", "creation_time": "2015-01-23T22:54:04Z", "attachment_id": null}, {"attachment_id": null, "tags": [], "creator": "markt@apache.org", "is_private": false, "count": 1, "id": 180563, "time": "2015-01-26T12:15:21Z", "bug_id": 57489, "creation_time": "2015-01-26T12:15:21Z", "text": "Hmm. Whatever is going wrong, is going wrong earlier than this stack trace.\n\nSomething causes the WebSocket connection to close. It appears that Atmosphere isn't notified about this / doesn't notice it.\n\nSomething happens later that causes Atmosphere to realise there is a dead WebSocket connection. Atmosphere triggers a 'dirty' close.\n\nThis 'dirty' close fails because the WebSocket connection has already been closed. That triggers an error because, as far as I can tell, a normal WebSocket close reason (1000) is used. If abnormal closure was used (1006), Tomcat would swallow any error.\n\nWhat we really need to figure out is why is this connection closed in the first place. There isn't much in the way of debug logging for WebSocket session closure in Tomcat - I'll fix that for the next release - but it is worth seeing is Atmosphere's debug logging tells you anything useful."}, {"count": 2, "text": "I've added some debig logging to trunk, 8.0.x (for 8.0.19 onwards) and 7.0.x (for 7.0.58 onwards). Any further information you can provide as to what is going on would be very helpful.", "creator": "markt@apache.org", "attachment_id": null, "id": 180565, "time": "2015-01-26T13:20:03Z", "bug_id": 57489, "creation_time": "2015-01-26T13:20:03Z", "tags": [], "is_private": false}, {"attachment_id": null, "tags": [], "bug_id": 57489, "is_private": false, "count": 3, "id": 180601, "time": "2015-01-27T20:29:31Z", "creator": "jfarcand@apache.org", "creation_time": "2015-01-27T20:29:31Z", "text": "@Mark,\n\nI did hack a little to prevent that error (which I may not fixed completely)\n\nhttps://github.com/Atmosphere/atmosphere/issues/1646\n\nThe stack trave will probably help you."}, {"count": 4, "tags": [], "text": "I've just fixed some issues that might have triggered this sort of issue in trunk and 8.0.x. There is a development build of 8.0.19-dev here:\nhttp://people.apache.org/~markt/dev/v8.0.19-dev/\n\nAny feedback you can provide on testing with this or 8.0.x trunk would be great.", "is_private": false, "bug_id": 57489, "id": 180721, "time": "2015-02-03T10:55:38Z", "creator": "markt@apache.org", "creation_time": "2015-02-03T10:55:38Z", "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 57489, "attachment_id": null, "id": 180758, "time": "2015-02-04T21:11:22Z", "creator": "wodencafe@gmail.com", "creation_time": "2015-02-04T21:11:22Z", "is_private": false, "text": "Hi Mark,\n\nI have been testing with the latest Trunk of 8.0.19, and verified that is the case with this line in the logs:\n\n2015-02-04 15:06:02,796 CST INFO  [null] - Atmosphere is using async support: org.atmosphere.container.JSR356AsyncSupport running under container: Apache Tomcat/8.0.19-dev using javax.servlet/3.0 using javax.servlet/3.0 and jsr356/WebSocket API\n\nUnfortunately, after interacting with the application for a brief amount of time, it hangs and we see the same exception:\n\n2015-02-04 15:07:01,691 CST ERROR [null] - java.io.IOException: \n\tat org.apache.tomcat.websocket.WsRemoteEndpointImplBase.startMessageBlock(WsRemoteEndpointImplBase.java:282)\n\tat org.apache.tomcat.websocket.WsSession.sendCloseMessage(WsSession.java:570)\n\tat org.apache.tomcat.websocket.WsSession.doClose(WsSession.java:478)\n\tat org.apache.tomcat.websocket.WsSession.close(WsSession.java:445)\n\tat org.apache.tomcat.websocket.WsSession.close(WsSession.java:439)\n\tat org.atmosphere.container.version.JSR356WebSocket.close(JSR356WebSocket.java:104)\n\tat org.atmosphere.websocket.WebSocket.close(WebSocket.java:264)\n\tat org.atmosphere.cpr.AtmosphereResponse.close(AtmosphereResponse.java:836)\n\tat org.atmosphere.cpr.AtmosphereResourceImpl.cancel(AtmosphereResourceImpl.java:720)\n\tat org.atmosphere.cpr.AtmosphereResourceImpl.close(AtmosphereResourceImpl.java:785)\n\tat com.vaadin.server.communication.AtmospherePushConnection.disconnect(AtmospherePushConnection.java:294)\n\tat com.vaadin.server.communication.AtmospherePushConnection.connect(AtmospherePushConnection.java:232)\n\tat com.vaadin.server.communication.PushHandler$2.run(PushHandler.java:135)\n\tat com.vaadin.server.communication.PushHandler.callWithUi(PushHandler.java:253)\n\tat com.vaadin.server.communication.PushHandler.access$200(PushHandler.java:56)\n\tat com.vaadin.server.communication.PushHandler$1.onRequest(PushHandler.java:74)\n\tat org.atmosphere.cpr.AsynchronousProcessor.action(AsynchronousProcessor.java:174)\n\tat org.atmosphere.cpr.AsynchronousProcessor.suspended(AsynchronousProcessor.java:95)\n\tat org.atmosphere.container.Servlet30CometSupport.service(Servlet30CometSupport.java:66)\n\tat org.atmosphere.cpr.AtmosphereFramework.doCometSupport(AtmosphereFramework.java:1802)\n\tat org.atmosphere.websocket.DefaultWebSocketProcessor.dispatch(DefaultWebSocketProcessor.java:432)\n\tat org.atmosphere.websocket.DefaultWebSocketProcessor.open(DefaultWebSocketProcessor.java:186)\n\tat org.atmosphere.container.JSR356Endpoint.onOpen(JSR356Endpoint.java:160)\n\tat org.apache.tomcat.websocket.server.WsHttpUpgradeHandler.init(WsHttpUpgradeHandler.java:138)\n\tat org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:687)\n\tat org.apache.coyote.http11.Http11NioProtocol$Http11ConnectionHandler.process(Http11NioProtocol.java:223)\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1558)\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1515)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\n\tat java.lang.Thread.run(Unknown Source)\nCaused by: java.util.concurrent.ExecutionException: java.io.IOException: Key must be cancelled\n\tat org.apache.tomcat.websocket.FutureToSendHandler.get(FutureToSendHandler.java:102)\n\tat org.apache.tomcat.websocket.WsRemoteEndpointImplBase.startMessageBlock(WsRemoteEndpointImplBase.java:275)\n\t... 31 more\nCaused by: java.io.IOException: Key must be cancelled\n\tat org.apache.coyote.http11.upgrade.NioServletOutputStream.doWriteInternal(NioServletOutputStream.java:84)\n\tat org.apache.coyote.http11.upgrade.NioServletOutputStream.doWrite(NioServletOutputStream.java:61)\n\tat org.apache.coyote.http11.upgrade.AbstractServletOutputStream.writeInternal(AbstractServletOutputStream.java:162)\n\tat org.apache.coyote.http11.upgrade.AbstractServletOutputStream.write(AbstractServletOutputStream.java:129)\n\tat org.apache.tomcat.websocket.server.WsRemoteEndpointImplServer.onWritePossible(WsRemoteEndpointImplServer.java:99)\n\tat org.apache.tomcat.websocket.server.WsRemoteEndpointImplServer.doWrite(WsRemoteEndpointImplServer.java:81)\n\tat org.apache.tomcat.websocket.WsRemoteEndpointImplBase.writeMessagePart(WsRemoteEndpointImplBase.java:450)\n\tat org.apache.tomcat.websocket.WsRemoteEndpointImplBase.startMessage(WsRemoteEndpointImplBase.java:338)\n\tat org.apache.tomcat.websocket.WsRemoteEndpointImplBase.startMessageBlock(WsRemoteEndpointImplBase.java:270)\n\t... 31 more\nCaused by: java.util.concurrent.ExecutionException:\n\tat org.apache.tomcat.websocket.FutureToSendHandler.get(FutureToSendHandler.java:102)\n\tat org.apache.tomcat.websocket.WsRemoteEndpointImplBase.startMessageBlock(WsRemoteEndpointImplBase.java:275)\n\tat org.apache.tomcat.websocket.WsSession.sendCloseMessage(WsSession.java:570)\n\tat org.apache.tomcat.websocket.WsSession.doClose(WsSession.java:478)\n\tat org.apache.tomcat.websocket.WsSession.close(WsSession.java:445)\n\tat org.apache.tomcat.websocket.WsSession.close(WsSession.java:439)\n\tat org.atmosphere.container.version.JSR356WebSocket.close(JSR356WebSocket.java:104)\n\tat org.atmosphere.websocket.WebSocket.close(WebSocket.java:264)\n\tat org.atmosphere.cpr.AtmosphereResponse.close(AtmosphereResponse.java:836)\n\tat org.atmosphere.cpr.AtmosphereResourceImpl.cancel(AtmosphereResourceImpl.java:720)\n\tat org.atmosphere.cpr.AtmosphereResourceImpl.close(AtmosphereResourceImpl.java:785)\n\tat com.vaadin.server.communication.AtmospherePushConnection.disconnect(AtmospherePushConnection.java:294)\n\tat com.vaadin.server.communication.AtmospherePushConnection.connect(AtmospherePushConnection.java:232)\n\tat com.vaadin.server.communication.PushHandler$2.run(PushHandler.java:135)\n\tat com.vaadin.server.communication.PushHandler.callWithUi(PushHandler.java:253)\n\tat com.vaadin.server.communication.PushHandler.access$200(PushHandler.java:56)\n\tat com.vaadin.server.communication.PushHandler$1.onRequest(PushHandler.java:74)\n\tat org.atmosphere.cpr.AsynchronousProcessor.action(AsynchronousProcessor.java:174)\n\tat org.atmosphere.cpr.AsynchronousProcessor.suspended(AsynchronousProcessor.java:95)\n\tat org.atmosphere.container.Servlet30CometSupport.service(Servlet30CometSupport.java:66)\n\tat org.atmosphere.cpr.AtmosphereFramework.doCometSupport(AtmosphereFramework.java:1802)\n\tat org.atmosphere.websocket.DefaultWebSocketProcessor.dispatch(DefaultWebSocketProcessor.java:432)\n\tat org.atmosphere.websocket.DefaultWebSocketProcessor.open(DefaultWebSocketProcessor.java:186)\n\tat org.atmosphere.container.JSR356Endpoint.onOpen(JSR356Endpoint.java:160)\n\tat org.apache.tomcat.websocket.server.WsHttpUpgradeHandler.init(WsHttpUpgradeHandler.java:138)\n\tat org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:687)\n\tat org.apache.coyote.http11.Http11NioProtocol$Http11ConnectionHandler.process(Http11NioProtocol.java:223)\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1558)\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1515)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\n\tat java.lang.Thread.run(Unknown Source)\nCaused by: java.io.IOException: Key must be cancelled\n\tat org.apache.coyote.http11.upgrade.NioServletOutputStream.doWriteInternal(NioServletOutputStream.java:84)\n\tat org.apache.coyote.http11.upgrade.NioServletOutputStream.doWrite(NioServletOutputStream.java:61)\n\tat org.apache.coyote.http11.upgrade.AbstractServletOutputStream.writeInternal(AbstractServletOutputStream.java:162)\n\tat org.apache.coyote.http11.upgrade.AbstractServletOutputStream.write(AbstractServletOutputStream.java:129)\n\tat org.apache.tomcat.websocket.server.WsRemoteEndpointImplServer.onWritePossible(WsRemoteEndpointImplServer.java:99)\n\tat org.apache.tomcat.websocket.server.WsRemoteEndpointImplServer.doWrite(WsRemoteEndpointImplServer.java:81)\n\tat org.apache.tomcat.websocket.WsRemoteEndpointImplBase.writeMessagePart(WsRemoteEndpointImplBase.java:450)\n\tat org.apache.tomcat.websocket.WsRemoteEndpointImplBase.startMessage(WsRemoteEndpointImplBase.java:338)\n\tat org.apache.tomcat.websocket.WsRemoteEndpointImplBase.startMessageBlock(WsRemoteEndpointImplBase.java:270)\n\t... 31 more"}, {"count": 6, "tags": [], "text": "Thanks for the feedback.\n\nThe CI system has highlighted a couple of issues with these fixes in place. I've just found what I think is another instance of multiple write registrations in trunk.\n\nMy plan is to get the CI system building trunk cleanly, port the fixes back to 8.0.x and then get the CI system for 8.0.x running cleanly. I don't think there is much benefit in you testing any more until the CI system says the build is clean. I'll ping this ticket when that is done.\n\nDo you need me to build 8.0.x for you to test or are you happy building from svn?", "is_private": false, "bug_id": 57489, "id": 180759, "time": "2015-02-04T21:40:08Z", "creator": "markt@apache.org", "creation_time": "2015-02-04T21:40:08Z", "attachment_id": null}, {"count": 7, "tags": [], "bug_id": 57489, "attachment_id": null, "id": 180760, "time": "2015-02-04T21:46:13Z", "creator": "wodencafe@gmail.com", "creation_time": "2015-02-04T21:46:13Z", "is_private": false, "text": "Hi Mark,\n\nI am fine with building SVN, as long as I am doing it correctly :)\n\nWhat I did today was I went into the directory where I had Tomcat trunk checked out, I ran \"svn update\", then \"ant\", and finally copied the built libs into my Tomcat 8 server for testing.\n\nThis is the correct process, right?\n\nLet me know when to test again.\n\nThank you,\n\nChris Boyd"}, {"count": 8, "tags": [], "text": "(In reply to wodencafe from comment #7)\n> I ran \"svn update\", then \"ant\", and finally copied the built\n> libs into my Tomcat 8 server for testing.\n\nThat's the correct procedure. If you are using split CATALINA_BASE and CATALINA_HOME (a great thing to do IMO), you can just point your CATALINA_HOME to the directory you have your svn working copy in, under output/build, something like this:\n\n$ export CATALINA_BASE=[...]\n$ export CATALINA_HOME=/path/to/tomcat-svn/output/build\n$ $CATALINA_HOME/bin/catalina.sh start\n\nYou can always go back to your previous Tomcat (8.0.18, etc.) by switching CATALINA_HOME back to its previous value.", "attachment_id": null, "bug_id": 57489, "id": 180805, "time": "2015-02-05T17:40:31Z", "creator": "chris@christopherschultz.net", "creation_time": "2015-02-05T17:40:31Z", "is_private": false}, {"count": 9, "text": "OK. I've made various changes to 8.0.x that should at least make this less likely and hopefully prevent. If you could test with the current 8.0.x and let us know the results that would be great.", "bug_id": 57489, "is_private": false, "id": 180905, "time": "2015-02-10T15:55:49Z", "creator": "markt@apache.org", "creation_time": "2015-02-10T15:55:49Z", "tags": [], "attachment_id": null}, {"count": 10, "tags": [], "bug_id": 57489, "attachment_id": null, "is_private": false, "id": 180927, "time": "2015-02-10T22:07:52Z", "creator": "wodencafe@gmail.com", "creation_time": "2015-02-10T22:07:52Z", "text": "Hi Mark,\n\nI built Tomcat from Trunk and tested again.\n\nUnfortunately the issue happened again, here is the Stack Trace:\n\n2015-02-10 16:01:13,056 CST ERROR [null] - java.io.IOException: \n\tat org.apache.tomcat.websocket.WsRemoteEndpointImplBase.startMessageBlock(WsRemoteEndpointImplBase.java:282)\n\tat org.apache.tomcat.websocket.WsSession.sendCloseMessage(WsSession.java:570)\n\tat org.apache.tomcat.websocket.WsSession.doClose(WsSession.java:478)\n\tat org.apache.tomcat.websocket.WsSession.close(WsSession.java:445)\n\tat org.apache.tomcat.websocket.WsSession.close(WsSession.java:439)\n\tat org.atmosphere.container.version.JSR356WebSocket.close(JSR356WebSocket.java:104)\n\tat org.atmosphere.websocket.WebSocket.close(WebSocket.java:264)\n\tat org.atmosphere.cpr.AtmosphereResponse.close(AtmosphereResponse.java:836)\n\tat org.atmosphere.cpr.AtmosphereResourceImpl.cancel(AtmosphereResourceImpl.java:720)\n\tat org.atmosphere.cpr.AtmosphereResourceImpl.close(AtmosphereResourceImpl.java:785)\n\tat com.vaadin.server.communication.AtmospherePushConnection.disconnect(AtmospherePushConnection.java:294)\n\tat com.vaadin.server.communication.AtmospherePushConnection.connect(AtmospherePushConnection.java:232)\n\tat com.vaadin.server.communication.PushHandler$2.run(PushHandler.java:135)\n\tat com.vaadin.server.communication.PushHandler.callWithUi(PushHandler.java:253)\n\tat com.vaadin.server.communication.PushHandler.access$200(PushHandler.java:56)\n\tat com.vaadin.server.communication.PushHandler$1.onRequest(PushHandler.java:74)\n\tat org.atmosphere.cpr.AsynchronousProcessor.action(AsynchronousProcessor.java:174)\n\tat org.atmosphere.cpr.AsynchronousProcessor.suspended(AsynchronousProcessor.java:95)\n\tat org.atmosphere.container.Servlet30CometSupport.service(Servlet30CometSupport.java:66)\n\tat org.atmosphere.cpr.AtmosphereFramework.doCometSupport(AtmosphereFramework.java:1802)\n\tat org.atmosphere.websocket.DefaultWebSocketProcessor.dispatch(DefaultWebSocketProcessor.java:432)\n\tat org.atmosphere.websocket.DefaultWebSocketProcessor.open(DefaultWebSocketProcessor.java:186)\n\tat org.atmosphere.container.JSR356Endpoint.onOpen(JSR356Endpoint.java:160)\n\tat org.apache.tomcat.websocket.server.WsHttpUpgradeHandler.init(WsHttpUpgradeHandler.java:138)\n\tat org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:687)\n\tat org.apache.coyote.http11.Http11NioProtocol$Http11ConnectionHandler.process(Http11NioProtocol.java:223)\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1558)\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1515)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\n\tat java.lang.Thread.run(Unknown Source)\nCaused by: java.util.concurrent.ExecutionException: java.io.IOException: Key must be cancelled\n\tat org.apache.tomcat.websocket.FutureToSendHandler.get(FutureToSendHandler.java:102)\n\tat org.apache.tomcat.websocket.WsRemoteEndpointImplBase.startMessageBlock(WsRemoteEndpointImplBase.java:275)\n\t... 31 more\nCaused by: java.io.IOException: Key must be cancelled\n\tat org.apache.coyote.http11.upgrade.NioServletOutputStream.doWriteInternal(NioServletOutputStream.java:84)\n\tat org.apache.coyote.http11.upgrade.NioServletOutputStream.doWrite(NioServletOutputStream.java:61)\n\tat org.apache.coyote.http11.upgrade.AbstractServletOutputStream.writeInternal(AbstractServletOutputStream.java:165)\n\tat org.apache.coyote.http11.upgrade.AbstractServletOutputStream.write(AbstractServletOutputStream.java:132)\n\tat org.apache.tomcat.websocket.server.WsRemoteEndpointImplServer.onWritePossible(WsRemoteEndpointImplServer.java:99)\n\tat org.apache.tomcat.websocket.server.WsRemoteEndpointImplServer.doWrite(WsRemoteEndpointImplServer.java:81)\n\tat org.apache.tomcat.websocket.WsRemoteEndpointImplBase.writeMessagePart(WsRemoteEndpointImplBase.java:450)\n\tat org.apache.tomcat.websocket.WsRemoteEndpointImplBase.startMessage(WsRemoteEndpointImplBase.java:338)\n\tat org.apache.tomcat.websocket.WsRemoteEndpointImplBase.startMessageBlock(WsRemoteEndpointImplBase.java:270)\n\t... 31 more\nCaused by: java.util.concurrent.ExecutionException:\n\tat org.apache.tomcat.websocket.FutureToSendHandler.get(FutureToSendHandler.java:102)\n\tat org.apache.tomcat.websocket.WsRemoteEndpointImplBase.startMessageBlock(WsRemoteEndpointImplBase.java:275)\n\tat org.apache.tomcat.websocket.WsSession.sendCloseMessage(WsSession.java:570)\n\tat org.apache.tomcat.websocket.WsSession.doClose(WsSession.java:478)\n\tat org.apache.tomcat.websocket.WsSession.close(WsSession.java:445)\n\tat org.apache.tomcat.websocket.WsSession.close(WsSession.java:439)\n\tat org.atmosphere.container.version.JSR356WebSocket.close(JSR356WebSocket.java:104)\n\tat org.atmosphere.websocket.WebSocket.close(WebSocket.java:264)\n\tat org.atmosphere.cpr.AtmosphereResponse.close(AtmosphereResponse.java:836)\n\tat org.atmosphere.cpr.AtmosphereResourceImpl.cancel(AtmosphereResourceImpl.java:720)\n\tat org.atmosphere.cpr.AtmosphereResourceImpl.close(AtmosphereResourceImpl.java:785)\n\tat com.vaadin.server.communication.AtmospherePushConnection.disconnect(AtmospherePushConnection.java:294)\n\tat com.vaadin.server.communication.AtmospherePushConnection.connect(AtmospherePushConnection.java:232)\n\tat com.vaadin.server.communication.PushHandler$2.run(PushHandler.java:135)\n\tat com.vaadin.server.communication.PushHandler.callWithUi(PushHandler.java:253)\n\tat com.vaadin.server.communication.PushHandler.access$200(PushHandler.java:56)\n\tat com.vaadin.server.communication.PushHandler$1.onRequest(PushHandler.java:74)\n\tat org.atmosphere.cpr.AsynchronousProcessor.action(AsynchronousProcessor.java:174)\n\tat org.atmosphere.cpr.AsynchronousProcessor.suspended(AsynchronousProcessor.java:95)\n\tat org.atmosphere.container.Servlet30CometSupport.service(Servlet30CometSupport.java:66)\n\tat org.atmosphere.cpr.AtmosphereFramework.doCometSupport(AtmosphereFramework.java:1802)\n\tat org.atmosphere.websocket.DefaultWebSocketProcessor.dispatch(DefaultWebSocketProcessor.java:432)\n\tat org.atmosphere.websocket.DefaultWebSocketProcessor.open(DefaultWebSocketProcessor.java:186)\n\tat org.atmosphere.container.JSR356Endpoint.onOpen(JSR356Endpoint.java:160)\n\tat org.apache.tomcat.websocket.server.WsHttpUpgradeHandler.init(WsHttpUpgradeHandler.java:138)\n\tat org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:687)\n\tat org.apache.coyote.http11.Http11NioProtocol$Http11ConnectionHandler.process(Http11NioProtocol.java:223)\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1558)\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1515)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\n\tat java.lang.Thread.run(Unknown Source)\nCaused by: java.io.IOException: Key must be cancelled\n\tat org.apache.coyote.http11.upgrade.NioServletOutputStream.doWriteInternal(NioServletOutputStream.java:84)\n\tat org.apache.coyote.http11.upgrade.NioServletOutputStream.doWrite(NioServletOutputStream.java:61)\n\tat org.apache.coyote.http11.upgrade.AbstractServletOutputStream.writeInternal(AbstractServletOutputStream.java:165)\n\tat org.apache.coyote.http11.upgrade.AbstractServletOutputStream.write(AbstractServletOutputStream.java:132)\n\tat org.apache.tomcat.websocket.server.WsRemoteEndpointImplServer.onWritePossible(WsRemoteEndpointImplServer.java:99)\n\tat org.apache.tomcat.websocket.server.WsRemoteEndpointImplServer.doWrite(WsRemoteEndpointImplServer.java:81)\n\tat org.apache.tomcat.websocket.WsRemoteEndpointImplBase.writeMessagePart(WsRemoteEndpointImplBase.java:450)\n\tat org.apache.tomcat.websocket.WsRemoteEndpointImplBase.startMessage(WsRemoteEndpointImplBase.java:338)\n\tat org.apache.tomcat.websocket.WsRemoteEndpointImplBase.startMessageBlock(WsRemoteEndpointImplBase.java:270)\n\t... 31 more\n\nI see a couple of minor differences between this Stack Trace and the previous one, just in the line numbers of certain calls in a couple of places.\n\nPlease let me know when you need me to test more."}, {"attachment_id": null, "tags": [], "bug_id": 57489, "is_private": false, "count": 11, "id": 180965, "time": "2015-02-11T18:18:00Z", "creator": "markt@apache.org", "creation_time": "2015-02-11T18:18:00Z", "text": "I've fixed another issue. I don't think it will make any different but if you could do a quick test it would be appreciated.\n\nI've just noticed that the stack trace passes through the onOpen method of the WebSocket Endpoint. That looks odd. I'm wondering if Atmosphere is doing something we didn't anticipate with the API. I'll look further but I don't expect to get this fixed for the next 8.0.x release. What I really need is a simple test case to reproduce this issue."}, {"count": 12, "tags": [], "text": "A handful of additional fixes that might be related to this have gone into the 8.0.20 release candidate. An update on whether or not the issue is still present would be appreciated.", "attachment_id": null, "id": 181099, "creator": "markt@apache.org", "time": "2015-02-16T12:55:43Z", "bug_id": 57489, "creation_time": "2015-02-16T12:55:43Z", "is_private": false}, {"count": 13, "tags": [], "bug_id": 57489, "attachment_id": null, "text": "No response for over two months. I'm going to assume that this is fixed. Please feel free to re-open if that is not the case. If the bug is still present, a test case to reproduce the issue will make it a lot easier to fix.", "id": 182552, "time": "2015-04-22T10:38:22Z", "creator": "markt@apache.org", "creation_time": "2015-04-22T10:38:22Z", "is_private": false}, {"count": 14, "tags": [], "bug_id": 57489, "attachment_id": null, "id": 186722, "time": "2015-12-01T19:31:25Z", "creator": "b.coughlan2@gmail.com", "creation_time": "2015-12-01T19:31:25Z", "is_private": false, "text": "I can reproduce this on 8.0.29. I will create a proper test case that doesn't need breakpoints during the week.\n\nReproduced with the following:\n\n    @OnMessage\n    public void onMessage(Session session, ModelObject msg) {\n        try {\n            session.getBasicRemote().sendText(\"Test\"); // <-- Breakpoint here\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n1. Open websocket connection to the server\n2. Send message from client to server, hits the breakpoint\n3. Close the connection\n4. Continue from the @OnMessage breakpoint\n\nThe following happens:\n\n- Step 4 throws an exception as expected (java.io.IOException: An established connection was aborted by the software in your host machine) (we catch and log this exception)\n\n\n- @OnError is called with a java.nio.channels.ClosedChannelException:\njava.nio.channels.ClosedChannelException\n\tat sun.nio.ch.SocketChannelImpl.ensureReadOpen(SocketChannelImpl.java:256)\n\tat sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:299)\n\tat org.apache.tomcat.util.net.NioChannel.read(NioChannel.java:137)\n\tat org.apache.coyote.http11.upgrade.NioServletInputStream.fillReadBuffer(NioServletInputStream.java:136)\n\tat org.apache.coyote.http11.upgrade.NioServletInputStream.doIsReady(NioServletInputStream.java:49)\n\tat org.apache.coyote.http11.upgrade.AbstractServletInputStream.isReady(AbstractServletInputStream.java:66)\n\tat org.apache.tomcat.websocket.server.WsFrameServer.onDataAvailable(WsFrameServer.java:49)\n\tat org.apache.tomcat.websocket.server.WsHttpUpgradeHandler$WsReadListener.onDataAvailable(WsHttpUpgradeHandler.java:183)\n\tat org.apache.coyote.http11.upgrade.AbstractServletInputStream.onDataAvailable(AbstractServletInputStream.java:198)\n\tat org.apache.coyote.http11.upgrade.AbstractProcessor.upgradeDispatch(AbstractProcessor.java:96)\n\tat org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:669)\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1500)\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1456)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\n\tat java.lang.Thread.run(Thread.java:745)\n\n\n- Further attempts to send data on this session results in the \"Key must be cancelled\" exception:\njava.io.IOException: java.util.concurrent.ExecutionException: java.io.IOException: Key must be cancelled\n\tat org.apache.tomcat.websocket.WsRemoteEndpointImplBase.startMessageBlock(WsRemoteEndpointImplBase.java:282)\n\tat org.apache.tomcat.websocket.WsRemoteEndpointImplBase.sendPing(WsRemoteEndpointImplBase.java:174)\n\tat org.apache.tomcat.websocket.WsRemoteEndpointBase.sendPing(WsRemoteEndpointBase.java:55)\n\tat com.myapp.WsOutbound.sendPing(WsOutbound.java:295)\n        .....\n\nThe @OnClose method is never called."}, {"count": 15, "text": "I can't reproduce this using the current 8.0.x code. There is a fix that looks related: bug 58624", "creator": "markt@apache.org", "is_private": false, "id": 186729, "time": "2015-12-01T20:58:27Z", "bug_id": 57489, "creation_time": "2015-12-01T20:58:27Z", "tags": [], "attachment_id": null}, {"count": 16, "tags": [], "bug_id": 57489, "attachment_id": null, "id": 186742, "time": "2015-12-02T13:20:28Z", "creator": "b.coughlan2@gmail.com", "creation_time": "2015-12-02T13:20:28Z", "is_private": false, "text": "I just built the trunk and confirmed the same behaviour. Note that this only works with the NIO connector. I'll get back to you with a test case."}, {"count": 17, "tags": [], "bug_id": 57489, "attachment_id": null, "text": "I tried creating a test for this today. It turns out that this problem only happens when a websocket is not closed with a proper closing handshake.\n\nMost Websocket clients are quite polite when closing websockets, they will send a close frame and then wait for the handshake before closing the TCP connection. This means that the problem can't be replicated by doing session.close() in a Tomcat websocket client.\n\nThe reason that I can replicate this with Tyrus is that Tyrus sends a websocket close frame but then closes the TCP connection immediately without completing the handshake.\n\nThe steps with the example in my previous post and Tyrus CLI are:\n1. Open connection\n2. Send message, breaking in the @OnMessage\n3. Close connection in Tyrus (or kill -9 the process to send just a TCP RST, the result is the same)\n4. Resume @OnMessage (which sends a message)\n\nAny suggestions on how to automate the test? Can I force a Tomcat client's socket to close without a handshake?", "id": 186750, "time": "2015-12-02T20:06:20Z", "creator": "b.coughlan2@gmail.com", "creation_time": "2015-12-02T20:06:20Z", "is_private": false}, {"count": 18, "tags": [], "bug_id": 57489, "attachment_id": 33321, "id": 186768, "time": "2015-12-03T16:33:50Z", "creator": "b.coughlan2@gmail.com", "creation_time": "2015-12-03T16:33:50Z", "is_private": false, "text": "Created attachment 33321\nTest cases for closing websockets"}, {"count": 19, "tags": [], "text": "Created attachment 33322\nWebsocket client for testing TCP behaviour", "attachment_id": 33322, "id": 186769, "creator": "b.coughlan2@gmail.com", "time": "2015-12-03T16:34:19Z", "bug_id": 57489, "creation_time": "2015-12-03T16:34:19Z", "is_private": false}, {"count": 20, "text": "Test cases attached - there are a few TODO comments in the attached files that could do with a pair of eyes. It's a bit messier than I had hoped but the test results match up with my manual testing.\n\nAlso, there is one scenario where the @OnMessage doesn't send a message but the @OnClose is not called - this happens only when a TCP reset is sent in the @OnMessage. This is captured in testTcpResetInOnMessage(). I'm not sure if the root cause is the same.", "creator": "b.coughlan2@gmail.com", "attachment_id": null, "id": 186770, "time": "2015-12-03T16:35:54Z", "bug_id": 57489, "creation_time": "2015-12-03T16:35:54Z", "tags": [], "is_private": false}, {"attachment_id": null, "tags": [], "bug_id": 57489, "is_private": false, "count": 21, "id": 186789, "time": "2015-12-04T14:02:22Z", "creator": "markt@apache.org", "creation_time": "2015-12-04T14:02:22Z", "text": "Thanks for the test cases. I'm taking a look."}, {"count": 22, "text": "You've probably got this far already, but it seems that the cause for all of the test failures is this block in AbstractServletInputStream.java which swallows the exception:\n\n        try {\n            ready = Boolean.valueOf(doIsReady());\n        } catch (IOException e) {\n            onError(e);\n        }\n\nThrowing the exception in the catch block causes the tests to pass (although some awaitOnError() statements need to be modified).", "bug_id": 57489, "is_private": false, "id": 186826, "time": "2015-12-07T14:00:02Z", "creator": "b.coughlan2@gmail.com", "creation_time": "2015-12-07T14:00:02Z", "tags": [], "attachment_id": null}, {"count": 23, "tags": [], "bug_id": 57489, "attachment_id": null, "text": "This looks like what it should do however: call onError. Rethrowing in that method is not allowed.", "id": 186827, "time": "2015-12-07T14:13:23Z", "creator": "remm@apache.org", "creation_time": "2015-12-07T14:13:23Z", "is_private": false}, {"attachment_id": null, "tags": [], "creator": "b.coughlan2@gmail.com", "is_private": false, "count": 24, "id": 186828, "time": "2015-12-07T14:54:18Z", "bug_id": 57489, "creation_time": "2015-12-07T14:54:18Z", "text": "(In reply to Remy Maucherat from comment #23)\n> This looks like what it should do however: call onError. Rethrowing in that\n> method is not allowed.\n\nSorry for not being clear - I wasn't suggesting that throwing the exception was a good fix (I'm not very familiar with the code), I was just using it to demonstrate that the issue lies there. Other read errors that occur in WsFrameServer.onDataAvailable() throw up the IOException so that onError/onClose is called, but swallowing the IOException in isReady() means that the onClose is never called."}, {"attachment_id": null, "tags": [], "bug_id": 57489, "is_private": false, "count": 25, "id": 186890, "time": "2015-12-11T10:36:54Z", "creator": "markt@apache.org", "creation_time": "2015-12-11T10:36:54Z", "text": "This has been fixed in 9.0.x although the connector refactoring means that a direct back-port may not be possible.\n\nNote that two tests were removed because they were invalid as per section 2.1.5 of the WebSocket 1.1 specification."}, {"count": 26, "tags": [], "bug_id": 57489, "attachment_id": null, "id": 186891, "time": "2015-12-11T12:53:05Z", "creator": "markt@apache.org", "creation_time": "2015-12-11T12:53:05Z", "is_private": false, "text": "This issue identified in comment #22 did apply to 8.0.x and 7.0.x along with the issue identified in 9.0.x.\n\nThe back-ports have been completed and this fix will be included in 9.0.0.M2, 8.0.31 and 7.0.68 onwards."}]