[{"count": 0, "tags": [], "creator": "ben@reser.org", "attachment_id": null, "text": "This is further fall out from the 54611 and the subsequent attempt to fix the ABI in PR 55397.\n\nAn easy way to see this issue is to setup mod_dav/mod_dav_svn like so:\n<Location /svn>\n  DAV svn\n  SVNPath /path/to/repo\n</Location>\n\nAnd then do the following\nsvnadmin create /path/to/repo\necho something | svnmucc -m 'add a file' -- put - 'http://127.0.0.1/svn/a<b'\nsvn ls http://127.0.0.1/svn\n\nVarious versions of Subversion will produce different error message.  For example (but by no means likely to be exhaustive):\nsvn: E130003: Malformed XML: not well-formed (invalid token)\nsvn: E175002: PROPFIND of '/svn/!svn/rvr/2': 207 Multi-Status (http://127.0.0.1)\nsvn: E175009: XML parsing failed: (207 Multi-Status)\n\ndav_xml_escape_uri() assumes that the URI is already encoded and as such presumes that it only needs to do XML escaping if there is an '&' character in the URI.  Since characters like '<' and '>' would already be encoded by the URI encoding.  Prior to PR 55397 this function also URI encoded, but this was removed since it resulted in double encoding.\n\nDuring the work for PR 55397 my attempt to audit for all places Subversion set resource->uri fields apparently missed the PROPFIND walker case (or I wrongly presumed that the uri we being set was already encoded).  This presents the problem that now not even Subversion in consistent.  Which means we essentially have some cases where resource->uri must be encoded and some cases where it does not.\n\nChanging the filename to 'a<&b' will make the symptom disappear for 1.7.x/1.8.x Subversion clients because that will trigger XML encoding from dav_xml_escape_uri().  However, 1.6.x clients (and probably older clients) are not happy the the URI not being URI encoded (even though the XML is valid now) and produce an error like this:\nsvn: Unable to parse URL '/svn/!svn/bc/1/a<&b'\n\nA similar behavior was noted by Stephane Chazelas on PR 55397, though he saw the issue with a filename with a space in it (again valid XML but not valid URI encoding) and running log on the path.  Stephane had also made a bug over at Ubuntu here: https://bugs.launchpad.net/ubuntu/+source/subversion/+bug/1284641\n\nSo simply fixing to properly emit valid XML is not enough in and of itself.  It will take further thought and investigation as to what the proper fix is here.", "id": 174968, "time": "2014-05-01T20:44:00Z", "bug_id": 56480, "creation_time": "2014-05-01T20:44:00Z", "is_private": false}, {"count": 1, "attachment_id": 31602, "bug_id": 56480, "is_private": false, "id": 175141, "time": "2014-05-11T07:32:29Z", "creator": "ben@reser.org", "creation_time": "2014-05-11T07:32:29Z", "tags": [], "text": "Created attachment 31602\npotential patch\n\nThe following patch should fix it.  I'm still working on making sure there isn't some additional side-effects from it.  Posting it here in case some finds it useful in the interim.\n\n[[[\nFix PR 56480: PROPFIND walker doesn't encode hrefs properly\n\nReverts r1529559 partially (specifically the dav_xml_escape_uri) bit.\nReverts r1531505 entirely.\n\n* modules/dav/main/mod_dav.c\n  (dav_xml_escape_uri): Revert the piece of r1529559 that removes the URI\n    escaping from this function.\n\n* modules/dav/main/mod_dav.h\n  (dav_resource): Note the inconsistency in the documentation.\n\n* modules/dav/fs/repos.c\n  (dav_fs_get_resource): Don't use the unparsed_uri to set the uri field of\n    the resource.  This is the correct fix for the double encoding in mod_dav_fs\n    that led to the dav_xml_escape_uri() change and r1531505.\n  (dav_fs_walker, dav_fs_append_uri): Revert r1531505 changes.\n]]]"}, {"attachment_id": 31705, "tags": [], "bug_id": 56480, "is_private": false, "count": 2, "id": 175762, "time": "2014-06-11T03:30:49Z", "creator": "ben@reser.org", "creation_time": "2014-06-11T03:30:49Z", "text": "Created attachment 31705\npotential patch version 4\n\nImproved patch that fixes something I found in the process of writing a test suite for mod_dav_fs to validate the previous fix.\n\n[[[\nFix PR 56480: PROPFIND walker doesn't encode hrefs properly\n\nReverts r1529559 partially (specifically the dav_xml_escape_uri) bit.\nReverts r1531505 entirely.\n\n* modules/dav/main/mod_dav.c\n  (dav_xml_escape_uri): Revert the piece of r1529559 that removes the URI\n    escaping from this function.\n\n* modules/dav/main/props.c\n  (dav_do_prop_subreq): Escape the URI before doing a sub request with it.\n    This resolves some properties like getcontenttype from failing to be\n    returned for files that contain characters that require encoding in their\n    path.\n\n* modules/dav/main/mod_dav.h\n  (dav_resource): Note the inconsistency in the documentation.\n\n* modules/dav/fs/repos.c\n  (dav_fs_get_resource): Don't use the unparsed_uri to set the uri field of\n    the resource.  This is the correct fix for the double encoding in mod_dav_fs\n    that led to the dav_xml_escape_uri() change and r1531505.\n  (dav_fs_walker, dav_fs_append_uri): Revert r1531505 changes.\n]]]"}, {"count": 3, "tags": [], "text": "Fixed and released in 2.4.10", "is_private": false, "bug_id": 56480, "id": 177219, "time": "2014-08-18T06:57:01Z", "creator": "christophe.jaillet@wanadoo.fr", "creation_time": "2014-08-18T06:57:01Z", "attachment_id": null}]