[{"count": 0, "tags": [], "bug_id": 45306, "attachment_id": null, "is_private": false, "id": 118100, "time": "2008-06-29T04:19:28Z", "creator": "adelmelle@apache.org", "creation_time": "2008-06-29T04:19:28Z", "text": "See the disabled testcase added here:\nhttp://svn.apache.org/viewvc?rev=672617&view=rev\n\nIn current FOP Trunk, the test throws a NPE, due to AbstractRetrieveMarker not correctly cloning the foreign object. cloneSingleNode() apparently only deals with FObj and FOText, but XMLObj descends directly from FONode, so does not survive...\n\nChanging XMLObj to extend FObj, instead of FONode, partly fixes the issue. It clones the root of the document, but does not yet descend recursively."}, {"count": 1, "attachment_id": null, "bug_id": 45306, "text": "I'm wondering whether we really need to clone the whole foreign subtree, as we are quite sure (?) that it's not FO and it's self-contained ....\n\nI'm attaching a patch that clones the foreign tree root without deleting the child pointers; I have performed a couple of tests and everything seems fine.\n(actually, now I think of it, the patch is slightly sub-optimal, as we could just clone the instream-foreign-object node and share the whole foreign subtree)\n\nIf there are no remaining erroneous situations or objections I can apply the patch to the trunk.", "id": 118899, "time": "2008-07-22T03:19:45Z", "creator": "lfurini@cs.unibo.it", "creation_time": "2008-07-22T03:19:45Z", "tags": [], "is_private": false}, {"count": 2, "tags": [], "text": "Created attachment 22297\n\"cheap\" cloning of the foreign subtree", "is_private": false, "id": 118900, "creator": "lfurini@cs.unibo.it", "time": "2008-07-22T03:21:04Z", "bug_id": 45306, "creation_time": "2008-07-22T03:21:04Z", "attachment_id": 22297}, {"count": 3, "attachment_id": null, "bug_id": 45306, "is_private": false, "id": 118997, "time": "2008-07-24T13:42:55Z", "creator": "adelmelle@apache.org", "creation_time": "2008-07-24T13:42:55Z", "tags": [], "text": "(In reply to comment #1)\n\n(Apologies for being so late with the reply)\n\n> I'm wondering whether we really need to clone the whole foreign subtree, as we\n> are quite sure (?) that it's not FO and it's self-contained ....\n\nYep, now that you mention it. :-)\n\nSeems like it could also be solved by overriding InstreamForeignObject.clone(FONode, boolean), to always pass 'false' for the boolean parameter (= removeChildren)...?\n\nI'll look into it again later, and see what would work best.\n\nThanks for the feedback."}, {"count": 4, "tags": [], "text": "I've recently fixed that locally without checking for an open Bugzilla entry. Now, I've stumbled over it. I guess I found yet another possible solution. I hope mine is acceptable, too.\nhttp://svn.apache.org/viewvc?rev=730764&view=rev", "is_private": false, "id": 123699, "creator": "jeremias@apache.org", "time": "2009-01-02T08:09:38Z", "bug_id": 45306, "creation_time": "2009-01-02T08:09:38Z", "attachment_id": null}, {"count": 5, "tags": [], "text": "batch transition pre-FOP1.0 resolved+fixed bugs to closed+fixed", "is_private": false, "id": 155739, "creator": "gadams@apache.org", "time": "2012-04-01T06:38:11Z", "bug_id": 45306, "creation_time": "2012-04-01T06:38:11Z", "attachment_id": null}]