[{"text": "Hi all,\n\nI found what I suppose to be a serious bug for whomever relays on running \nCatalina with a\nSecurity Manager. It's not a vulnerability but it has the potencial to break \nseveral applications\nlike O'reilly's cos.jar ( upload ) and JSSE.\n\nDescription: security manager rules are not applied correctly to classes \non /lib directory\n\nHere are the steps to reproduce:\n\nCreate 2 classes:\n\n--------------------\n\nimport java.io.*;\n\npublic class WriteFile {\n\n  public void write() throws IOException {\n\n     FileWriter fw = new FileWriter(\"/home/client/write_area/test.txt\");\n     PrintWriter pw = new PrintWriter(fw);\n\n     pw.println(\"Testing security manager...\");\n     pw.close();\n     fw.close();\n  }\n}\n\n--------------------\n\n( create a jar:  jar -cvf WriteFile.jar WriteFile.class )\n\n--------------------\n\nimport java.io.*;\nimport javax.servlet.*;\nimport javax.servlet.http.*;\nimport WriteFile;\n\npublic class SecManagerTest extends HttpServlet {\n\n  public void doGet(HttpServletRequest req, HttpServletResponse res) throws \nServletException, IOException {\n\n      res.setContentType(\"text/html\");\n      PrintWriter out = res.getWriter();\n      WriteFile wf = new WriteFile();\n      wf.write();\n\n      out.println(\"<HTML>\");\n      out.println(\"<BODY>\");\n      out.println(\"Security Manager works!!\");\n      out.println(\"</BODY>\");\n      out.println(\"</HTML>\");\n  }\n}\n\n--------------------\n\nInsert these lines after the catalina.policy file\n\ngrant codeBase \"file:/home/client/-\" {\npermission java.io.FilePermission \"/home/client/-\", \"read,write,delete\";\npermission java.util.PropertyPermission \"*\", \"read\";\n};\n\nStart catalina with:\n\n./catalina.sh start -security \n\n***** NOW THE TESTS ************\n\nFirst test. Put WriteFile.class and SecManagerTest.class on /WEB-INF/classes\n\nTry to execute the servlet. It works !!!\n\nSecond test. Put WriteFile.jar on /WEB-INF/lib ( and remove WriteFile.class \nfrom /classes ! ). \nRestart Catalina. Try to access the servlet:\n\njava.security.AccessControlException: access denied \n(java.io.FilePermission /home/client/write_area/teste.txt write)\n\tat java.security.AccessControlContext.checkPermission\n(AccessControlContext.java:272)\n\tat java.security.AccessController.checkPermission\n(AccessController.java:399)\n\tat java.lang.SecurityManager.checkPermission(SecurityManager.java:545)\n\tat java.lang.SecurityManager.checkWrite(SecurityManager.java:978)\n\tat java.io.FileOutputStream.(FileOutputStream.java:96)\n\tat java.io.FileOutputStream.(FileOutputStream.java:62)\n\tat java.io.FileWriter.(FileWriter.java:38)\n\tat WriteFile.write(WriteFile.java:7)\n\tat SecManagerTest.doGet(SecManagerTest.java:13)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:740)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:853)\n(...)\n\n\nIn Tomcat 3.3 beta 1, it works perfectly. \n\nThere is definitely something wrong with the Security Manager in Catalina. \n\nWebhost companies that depends on the security manager cannot fully use \nCatalina ( again, everything works pretty well with Tomcat 3.3 ).", "tags": [], "bug_id": 6660, "is_private": false, "count": 0, "id": 11123, "time": "2002-02-25T18:14:57Z", "creator": "webmaster@cienciapura.com.br", "creation_time": "2002-02-25T18:14:57Z", "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 6660, "text": "The implementation of the Java SecurityManager is significantly different\nbetween Tomcat 3.2/3.3 and Tomcat 4.  The Tomcat 4 version implements much\nfiner control over granting permissions in the policy file.  Even down to\ngranting permisions to individual classes within a jar.\n\njar's in /WEB-INF/lib have a completely different codeBase than classes in\n/WEB-INF/classes.\n\nTo fix your problem add the following grant to your catalina.policy\n\ngrant codeBase \"jar:file:{path-to-webapp}/WEB-INF/lib/WriteFile.jar!/-\" {\npermission java.io.FilePermission \"/home/client/-\", \"read,write,delete\";\npermission java.util.PropertyPermission \"*\", \"read\";\n};", "id": 11125, "time": "2002-02-25T18:36:10Z", "creator": "glenn@apache.org", "creation_time": "2002-02-25T18:36:10Z", "is_private": false, "attachment_id": null}, {"text": "I'm reopening because 'catchall' doesn't work.\n\ngrant codeBase \"jar:file:{path-to-webapp}/WEB-INF/lib/WriteFile.jar!/-\" {\n\nworks OK, but\n\ngrant codeBase \"jar:file:{path-to-webapp}/WEB-INF/lib/-\" {\n\ndoesn't work.\n\nIf it doesn't work, it will be a maintenance hell for webhosting.\n", "tags": [], "bug_id": 6660, "is_private": false, "count": 2, "id": 11134, "time": "2002-02-25T19:50:08Z", "creator": "webmaster@cienciapura.com.br", "creation_time": "2002-02-25T19:50:08Z", "attachment_id": null}, {"count": 3, "tags": [], "text": "Sorry, my mistake, the URL specified for the codebase probably has to be a valid\nURL.\nI'm afraid this can't be fixed, then.", "attachment_id": null, "id": 11135, "creator": "remm@apache.org", "time": "2002-02-25T20:19:26Z", "bug_id": 6660, "creation_time": "2002-02-25T20:19:26Z", "is_private": false}]