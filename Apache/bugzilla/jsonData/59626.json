[{"count": 0, "tags": [], "bug_id": 59626, "attachment_id": 33873, "id": 191221, "time": "2016-05-24T13:24:34Z", "creator": "httpd.apache.org@destefani.eng.br", "creation_time": "2016-05-24T13:24:34Z", "is_private": false, "text": "Created attachment 33873\nPatch that moves variables export to access hook, and erases the now the empty fixup hook.\n\nThe mod_ssl configuration directives ExportCertData and StdEnvVars can be used to export certificate information to fastcgi responders, but mod_ssl don't export those same variables to a fcgi authenticator (mod_authnz_fcgi).\n\nThose variables are exported in the fixup handler, but the auth module need those variables in the checkuser_id/auth phase, and those hooks are triggered before the fixup phase.\n\nSee http://www.fmc-modeling.org/category/projects/apache/amp/3_3Extending_Apache.html#fig:_Apache:_request-processing_+_Module_callbacks_PN for a visual workflow of the request processing cycle if needed.\n\nOne possible solution is simply move the variable export to the access handler hook, but I don't have enough knowledge of the httpd server to anticipate possible side effects. It seems that the fixup hook runs every time even for sub-requests, but the access checker is not repeated for sub-requests. This could break things in some other combination of modules configuration.\nAnyone has other ideas about how to solve this problem?\n\nIf the fixup is called in some other situation, maybe a new function to stuff those variables and test whether HTTPS=on to skip the stuffing if already done before, or the module fcgi_auth could spawn a sub-request to get those variables. Those alternatives seem more complex than just move the code, so the patch attached just move the variables to the access hook.\n\nTo reproduce the problem:\n\n1. Checkout https://svn.apache.org/repos/asf/httpd/httpd/trunk@1745196 in a Linux machine\n2. Download all the attachments to the checkout directory\n3. Download and install apr to srclib/apr/\n4. build the web server:\n# ./configure --enable-ssl --with-ssl --enable-proxy --enable-proxy-fcgi --enable-authnz-fcgi --with-apr=srclib/apr/\n# make\n5. Run the server in foreground:\n# mkdir logs;./httpd -DFOREGROUND -d $PWD -f fcgi_test.conf\n6. On another terminal, build and run the test program (it is both an fcgi AUTHORIZER and a RESPONDER):\n# gcc -std=gnu99 -lfcgi fcgi_test.c -o fcgi_test&&./fcgi_test :9000\nPlease note that all logs are output in the httpd terminal.\n\n7. Open a brower window, go to settings, certificates, CA, and import ca.crt as a new ca trusted to identify websites\n8. Go to your certificates, import the test client certificate (in pkcs#12 format, encrypted with the passkey 123456, file usercert_passwd_123456.p12\n9. Open the URL https://[::1]:8443/ (this example needs a machine with ipv6 + ipv4 enabled)\n\nOn success, SSL_CLIENT_CERT is exported to the authenticator, it should authorize and print all fcgi environment variables.\n\nOn fail, it should deny with 500 INTERNAL SERVER ERROR.\n\n10. It is supposed to fail, and a message \"AUTH ERROR Variable SSL_CLIENT_CERT not found.\" should appear in the browser window,\nin the log (httpd terminal) there should be some lines with \n[authnz_fcgi:warn] [pid 29537:tid 140392828790528] [client ::1:38203] AH02507: handle_response: Logged from fcgi://127.0.0.1:9000: 'FCGI_ROLE=AUTHORIZER, SSL_CLIENT_CERT=NULLs\n[authnz_fcgi:debug] [pid 29537:tid 140392828790528] mod_authnz_fcgi.c(772): [client ::1:38203] AH02515: req_rsp: Received HTTP status 500, referer: https://[::1]:8443/\n\n11. Apply the patch:\n$ patch -p0 < Moving-the-export-of-ssl-variables-from-fixup-to-acc.patch \npatching file modules/ssl/mod_ssl.c\npatching file modules/ssl/ssl_engine_kernel.c\npatching file modules/ssl/ssl_private.h\n\n12. Rebuild the webserver and run it again.\nYou should see a webpage with:\nVariable FCGI_ROLE=RESPONDER\nVariable HTTPS=on\nVariable SSL_SERVER_S_DN_CN=TEST_SERVER\n...cut...\nVariable SSL_CLIENT_CERT=-----BEGIN CERTIFICATE-----\n...cut...\n-----END CERTIFICATE-----\n\nAn in the httpd terminal:\n[authnz_fcgi:warn] [pid 30431:tid 140291639047936] [client ::1:38301] AH02507: handle_response: Logged from fcgi://127.0.0.1:9000: 'FCGI_ROLE=AUTHORIZER, SSL_CLIENT_CERT=-----BEGIN CERTIFICATE-----\\nMII\n[authnz_fcgi:debug] [pid 30431:tid 140291639047936] mod_authnz_fcgi.c(772): [client ::1:38301] AH02515: req_rsp: Received HTTP status 200\n\nIf this patch is the final solution, the log message could be something like this:\n\nMove the export of ssl variables from fixup to access hook.\n\nThe fixup handler is called after the handlers check_authn and check_authz,\nso before this patch it was impossible to use the environment variable\nSSL_CLIENT_CERT exported from mod_ssl configuration directive\nSSLOptions ExportCertData (and the parsed variables exported with\nStdEnvVars) in a fastcgi AUTHORIZER to build a custom access checker."}, {"count": 1, "tags": [], "bug_id": 59626, "attachment_id": 33874, "text": "Created attachment 33874\nTest program. See instructions inside the source.\n\nUse this program to test if apache httpd works with an Fcgi Authenticator\nthat checks client certificates using the variable SSL_CLIENT_CERT\nexported with the mod_ssl configuration directive \"SSLOptions +ExportCertData\"\nRun it like this:\ngcc -std=gnu99 -lfcgi fcgi_test.c -o fcgi_test&&./fcgi_test :9000\nThis is *not* an example of how to program properly.\nIt is an AUTHORIZER and a RESPONDER in the same program.\nAuthorization succeeds with 200 OK if the environment has SSL_CLIENT_CERT,\notherwise 500 INTERNAL SERVER ERROR. As RESPONDER, prints all environment.", "id": 191222, "time": "2016-05-24T13:26:22Z", "creator": "httpd.apache.org@destefani.eng.br", "creation_time": "2016-05-24T13:26:22Z", "is_private": false}, {"count": 2, "tags": [], "creator": "httpd.apache.org@destefani.eng.br", "attachment_id": 33875, "text": "Created attachment 33875\nConfiguration file to test the bug.\n\nUse it to test httpd server with the test program.", "id": 191223, "time": "2016-05-24T13:27:38Z", "bug_id": 59626, "creation_time": "2016-05-24T13:27:38Z", "is_private": false}, {"count": 3, "attachment_id": 33876, "bug_id": 59626, "is_private": false, "id": 191224, "time": "2016-05-24T13:28:50Z", "creator": "httpd.apache.org@destefani.eng.br", "creation_time": "2016-05-24T13:28:50Z", "tags": [], "text": "Created attachment 33876\nCertificate authority used to test mod_ssl."}, {"count": 4, "tags": [], "creator": "httpd.apache.org@destefani.eng.br", "attachment_id": 33877, "id": 191225, "time": "2016-05-24T13:29:20Z", "bug_id": 59626, "creation_time": "2016-05-24T13:29:20Z", "is_private": false, "text": "Created attachment 33877\nCertificate chain used to test mod_ssl and httpd."}, {"count": 5, "tags": [], "bug_id": 59626, "attachment_id": 33878, "is_private": false, "id": 191226, "time": "2016-05-24T13:30:01Z", "creator": "httpd.apache.org@destefani.eng.br", "creation_time": "2016-05-24T13:30:01Z", "text": "Created attachment 33878\nUser certificate used to test mod_ssl and httpd"}, {"count": 6, "tags": [], "bug_id": 59626, "attachment_id": 33879, "id": 191227, "time": "2016-05-24T13:31:07Z", "creator": "httpd.apache.org@destefani.eng.br", "creation_time": "2016-05-24T13:31:07Z", "is_private": false, "text": "Created attachment 33879\nPrivate key used to test mod_ssl and httpd"}]