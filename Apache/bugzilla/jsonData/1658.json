[{"count": 0, "tags": [], "bug_id": 1658, "attachment_id": null, "id": 2315, "time": "2001-05-08T08:49:58Z", "creator": "joan@profilium.com", "creation_time": "2001-05-08T08:49:58Z", "is_private": false, "text": "Hi.\n\nThis may not be a Log4J bug, but it it definitly strange, and after 1\u00bd week and \nof various tests, I still haven't found the exact cause problem.\n\nI have created a simple TestCase for JUnit, that uses a class which configures \nthe Log4J tool by calling DOMConfigurator.configure(fileName). The class has \nbeen successfully used when called from a servlet (Apache/Resin 1.2/Linux RH \n7.1, JDK1.3 Sun), and  Log4J was configured without any problem from an XML \nconfiguration file. The same class, when called the simpleJUnit TestCase, fails \nto parse the XML file and produces the following errors:\n\njava.lang.NoClassDefFoundError: org/w3c/dom/Node\n        at com.profilium.appserver.config.PinPointConfigurator.<clinit>\n(PinPointConfigurator.java:81)\n        at java.lang.Class.forName0(Native Method)\n        at java.lang.Class.forName(Class.java:120)\n        at com.profilium.appserver.config.TestPinPointConfiguration.testParsing\n(TestPinPointConfiguration.java:39)\n        at java.lang.reflect.Method.invoke(Native Method)\n        at junit.framework.TestCase.runTest(TestCase.java:156)\n        at junit.framework.TestCase.runBare(TestCase.java:130)\n        at junit.framework.TestResult$1.protect(TestResult.java:106)\n        at junit.framework.TestResult.runProtected(TestResult.java:124)\n        at junit.framework.TestResult.run(TestResult.java:109)\n        at junit.framework.TestCase.run(TestCase.java:121)\n        at junit.framework.TestSuite.runTest(TestSuite.java:160)\n        at junit.framework.TestSuite.run(TestSuite.java:155)\n        at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run\n(JUnitTestRunner.java:209)\n        at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main\n(JUnitTestRunner.java:342)\n\nI have checked again and again and again the content of my classpath, and \neverything is there. I have downloaded and replaced every org.w3c, javax.xml, \norg.xml.sax, etc... libraries with the latests version, but the only result is \na different NoClassDefFoundError.\n\nThen, I have tested the exact same classes on Windows 98/JDK 1.3 and obtained a \ncompletely different error:\n\njava.lang.LinkageError: Class org/xml/sax/InputSource violates loader \nconstraints\n\tat java.lang.ClassLoader.defineClass0(Native Method)\n\tat java.lang.ClassLoader.defineClass(Unknown Source)\n\tat java.security.SecureClassLoader.defineClass(Unknown Source)\n\tat java.net.URLClassLoader.defineClass(Unknown Source)\n\tat java.net.URLClassLoader.access$100(Unknown Source)\n\tat java.net.URLClassLoader$1.run(Unknown Source)\n\tat java.security.AccessController.doPrivileged(Native Method)\n\tat java.net.URLClassLoader.findClass(Unknown Source)\n\tat java.lang.ClassLoader.loadClass(Unknown Source)\n\tat sun.misc.Launcher$AppClassLoader.loadClass(Unknown Source)\n\tat java.lang.ClassLoader.loadClass(Unknown Source)\n\tat java.lang.ClassLoader.loadClassInternal(Unknown Source)\n\tat \norg.apache.xerces.readers.DefaultEntityHandler.startReadingFromDocument\n(DefaultEntityHandler.java:484)\n\tat org.apache.xerces.framework.XMLParser.parseSomeSetup\n(XMLParser.java:309)\n\tat org.apache.xerces.framework.XMLParser.parse(XMLParser.java:951)\n\tat org.apache.xerces.jaxp.DocumentBuilderImpl.parse\n(DocumentBuilderImpl.java:172)\n\tat org.apache.log4j.xml.DOMConfigurator.doConfigure\n(DOMConfigurator.java:566)\n\tat org.apache.log4j.xml.DOMConfigurator.doConfigure\n(DOMConfigurator.java:513)\n\tat org.apache.log4j.xml.XMLWatchdog.doOnChange(DOMConfigurator.java:659)\n\tat org.apache.log4j.helpers.FileWatchdog.checkAndConfigure\n(FileWatchdog.java:66)\n\tat org.apache.log4j.helpers.FileWatchdog.<init>(FileWatchdog.java:45)\n\tat org.apache.log4j.xml.XMLWatchdog.<init>(DOMConfigurator.java:651)\n\tat org.apache.log4j.xml.DOMConfigurator.configureAndWatch\n(DOMConfigurator.java:505)\n\tat com.profilium.appserver.config.PinPointConfigurator.<clinit>\n(PinPointConfigurator.java:81)\n\tat java.lang.Class.forName0(Native Method)\n\tat java.lang.Class.forName(Unknown Source)\n\tat com.profilium.appserver.config.TestPinPointConfiguration.testParsing\n(TestPinPointConfiguration.java:39)\n\n\nBut, then again, it depends of what is in my classpath! With the manually \ncompiled DOM2 bindings, I get a brand new NoClassDefFoundError on another Class \nthat IS in my classpath (believe me...).\n\nI have also tried with the exact same classpath that Resin uses when running \nthis particular class, and it doesn't work better...\n\nI clearly suspect the JUnit ClassLoader, but I am submitting this here just in \ncase you've had some experience with JUnit and the DOMConfigurator before. \nAfter almost 2 weeks of tests, I give up, I don't know what else to do...\n\nThanks for your help.\n\n\nJoan - joan@profilium.com"}]