[{"count": 0, "tags": [], "creator": "eladner@goldinc.com", "attachment_id": null, "text": "This patch modifies HSSFWorkbook, FormulaParser and SheetReferences to allow\nsheet references to be captured from HSSFWorkbook (new method\ngetSheetReferences, which mirrors Workbook.getSheetReferences()) and passed into\nthe FormulaParser (new methods getSheetReferences() and setSheetReferences()). \nI purposefully didn't add a new constructor for FormulaParser(String,\nSheetReferences) because of the common practice up to now of just calling 'new\nFormulaParser(formula, null)' (null for the workbook).  That call produces an\nambiguous call error.  Instead I added the setSheetReferences, so the typical\nway to call it now would be something like:\n\n        POIFSFileSystem fs = new POIFSFileSystem(new FileInputStream(file));\n        HSSFWorkbook wb    = new HSSFWorkbook(fs);\n        HSSFSheet sheet    = wb.getSheetAt(0);\n        HSSFRow row        = sheet.getRow(0);\n        SheetReferneces refs = wb.getSheetReferences();\n\n        FormulaParser fp = new FormulaParser(formula, null);\n        fp.setSheetReferences(refs);\n        fp.parse();\n\nAlso, modifications to FormulaParser were required to check whether to get the\nsheet numbers from the workbook, if valid, or the sheet references, if supplied.\n This also required a new method getSheetIndex() in SheetReferences (the\ncounterpart to getSheetName()).\n\nA unit test was added to TestSheetReferences to test the reverse lookups.\n\nUnit tests weren't added yet to test the advanced formula parsing, as I'm not\nthat up on JUnit yet, but if anyone has an pointers, I'm all ears.", "id": 41615, "time": "2003-07-28T03:42:41Z", "bug_id": 21923, "creation_time": "2003-07-28T03:42:41Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 21923, "attachment_id": 7539, "id": 41616, "time": "2003-07-28T03:50:01Z", "creator": "eladner@goldinc.com", "creation_time": "2003-07-28T03:50:01Z", "is_private": false, "text": "Created attachment 7539\nPatch for 3DRef resolving in a formua (HSSFWorkbook, SheetReferences and FormulaParser patched)."}, {"count": 2, "tags": [], "bug_id": 21923, "attachment_id": null, "id": 41617, "time": "2003-07-28T04:24:31Z", "creator": "poi-support@buni.org", "creation_time": "2003-07-28T04:24:31Z", "is_private": false, "text": "com'on JUnit isn't hard to use.  go LOOK at the unit tests.  You're telling me you need pointers?  \nThe only pointer I have is write the unit test before the code.  \n\nI have to admit I don't favor this patch for the same reason I don't want to open up the model.  \nThis smells like a hack and I think we can do something better.  I'm retargeting it to 3.0, but I \nfavor a different approach possibly just refactoring where needed.  I do appreciate your \ncontribution though."}, {"count": 3, "tags": [], "text": "Here's a pointer:  avoid assert and assertTrue.  If the test involves checking \ntwo values for equality, use assertEquals.  For example,\n\nassertEquals(\"ref A\", 0, refs.getSheetIndex(\"A\"));\n\nPut the expected result on the left and the actual result on the right.  This \nwill give you much more descriptive error messages when something goes wrong.", "attachment_id": null, "id": 41618, "creator": "pkrause@soundbite.com", "time": "2003-07-28T04:37:49Z", "bug_id": 21923, "creation_time": "2003-07-28T04:37:49Z", "is_private": false}, {"count": 4, "attachment_id": null, "creator": "eladner@goldinc.com", "is_private": false, "id": 41666, "time": "2003-07-28T15:45:23Z", "bug_id": 21923, "creation_time": "2003-07-28T15:45:23Z", "tags": [], "text": "Ok, ok.. I'll poke around with JUnit.. :)\n\nAs for the assertTrue, I was just following the previous examlpe in\nTestSheetReferehces.\n\nRegardless of how it's refactored, somehow, the FormulaParser needs information\nout of the workbook, or access to the workbook to resolve 3DRefs.  Getting a\ncopy of the SheetReferences seemed like less of a hack than exposing the\ninternal workbook to the outside world.  At least it can't be used in reverse to\nmess up the workbook.  Admittedly, it's still a hack, though."}, {"count": 5, "tags": [], "creator": "poi-support@buni.org", "attachment_id": null, "text": "Right, there is no need for dirty hacks in 3.0.  Play with the scaffolding a bit.  Try to fix the frame a \nbit.", "id": 41667, "time": "2003-07-28T15:56:00Z", "bug_id": 21923, "creation_time": "2003-07-28T15:56:00Z", "is_private": false}, {"count": 6, "tags": [], "creator": "avik@apache.org", "attachment_id": null, "text": "This patch will now certainly not applied since FormulaParser etc has been\nrefactored by the macro function patch of paul krause. The functionality of this\npatch may however still have to be added. To be investigated!", "id": 46546, "time": "2003-10-30T19:08:00Z", "bug_id": 21923, "creation_time": "2003-10-30T19:08:00Z", "is_private": false}, {"count": 7, "tags": [], "bug_id": 21923, "text": "Ok, so formula parser has moved on, but without any testcases, I have no clue\nwhat problem this patch is supposed to solve! So while this looks useful at\nfirst glance, I am finding it diffcult to figure this out!\n\nCan someone atleast give me a worksheet, or formulas, that this solves?", "id": 73981, "time": "2005-04-22T14:23:43Z", "creator": "avik@apache.org", "creation_time": "2005-04-22T14:23:43Z", "is_private": false, "attachment_id": null}, {"count": 8, "tags": [], "bug_id": 21923, "attachment_id": null, "id": 74266, "time": "2005-04-29T05:53:22Z", "creator": "eladner@goldinc.com", "creation_time": "2005-04-29T05:53:22Z", "is_private": false, "text": "The problem was that parsing a 3DRef requires the sheet references in the\nformula parser, but there was no way to actually get the sheet references from\ninside the parser.  The two solutions I toyed around with was this one (getting\nthe references from teh worksheet, then passing them to the parser) and making\nthe lower workbook available to HSSFWorkbook by making the\nWorkbook.getWorkbook() method public.  The second method was poo-pooed.\n\nI can create some test cases in about a week.  I'm about to go AFK to a\nconference and won't be able to get back to this in a while."}, {"count": 9, "tags": [], "bug_id": 21923, "text": "Created attachment 15050\nTest class that exhibits the problem\n\nThis java code exibits the problem with parsing 3d refs.", "id": 74935, "time": "2005-05-16T17:47:32Z", "creator": "eladner@goldinc.com", "creation_time": "2005-05-16T17:47:32Z", "is_private": false, "attachment_id": 15050}, {"count": 10, "tags": [], "bug_id": 21923, "text": "Created attachment 15051\nspreadsheet that shows the problem\n\nthis is a 3 sheet workbook that has a formula on sheet 3 that's a the sum of\nsheet1!A1 and sheet2!A2.", "id": 74936, "time": "2005-05-16T17:48:46Z", "creator": "eladner@goldinc.com", "creation_time": "2005-05-16T17:48:46Z", "is_private": false, "attachment_id": 15051}, {"count": 11, "tags": [], "creator": "eladner@goldinc.com", "attachment_id": null, "text": "I attached two additional files that show the problem this patch is trying to\novercome.   If you run the TestClass on test.xls, it'll blow up in\nFormulaParser, line 276.  This is because FormulaParser expects to be passed an\nobject of type Workbook so that it can resolve 3DRefs.  Line 276 is calling the\ncheckExternSheet() method of the Workbook class.  Since you can't get a Workbook\nobject from the HSSFWorkbook, it blows up.  The two solutions are (1) make\ngetWorkbook in Workbook public so you can get it and pass it to the\nFormulaParser or (2) modify Formula parser to accept SheetReferences that are\nobtained from the Workbook.\n\nThe patch attached to this bug implements option 2 above since exposing the\nWorkbook directly was generally regarded as a \"bad idea\".", "id": 74937, "time": "2005-05-16T17:54:42Z", "bug_id": 21923, "creation_time": "2005-05-16T17:54:42Z", "is_private": false}, {"count": 12, "tags": [], "bug_id": 21923, "text": "I've been trying to bring the patch foward and ran into an interesting\nchicken/egg problem.  In every Ptg class, the toForumlaString method takes a\nsecond parameter of type Workbook.  If there's no way to get a Workbook from an\nHSSFWorkbook, none of those parameters can ever be filled with anything other\nthan null.  I was reworking the patch slightly from the mind-set that you can\nnever obtain an object of type Workbook to pass anywhere, so I was removing\nreferences of Workbook from the FormulaParser.  Then I found all the Ptg's. \nFrom a quick analysis, it looks like it can safely be removed from all of them\n(it's unused in 90% of them, only Area3DPtg and Ref3DPtg actually use it and\nit's just to get the sheet references).  The only one I'm concerned about is the\nNamePtg.\n\nI'm kind of hesitant to produce a patch that touches that many files, but it\nreally does seem to me that the whole involvement of Workbook in the formula\nrelated classes is completely useless and can never be utilized.  Period.\n\nShould I continue?", "id": 74974, "time": "2005-05-17T22:29:58Z", "creator": "eladner@goldinc.com", "creation_time": "2005-05-17T22:29:58Z", "is_private": false, "attachment_id": null}, {"count": 13, "tags": [], "bug_id": 21923, "attachment_id": null, "id": 123357, "time": "2008-12-16T10:01:52Z", "creator": "yegor@dinom.ru", "creation_time": "2008-12-16T10:01:52Z", "is_private": false, "text": "Try the latest POI-3.5-beta4, it supports 3DRefs.\n\nYegor"}]