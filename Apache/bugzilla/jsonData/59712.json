[{"count": 0, "tags": [], "creator": "Teemu.Vesala@qentinel.com", "attachment_id": null, "id": 191705, "time": "2016-06-16T05:06:23Z", "bug_id": 59712, "creation_time": "2016-06-16T05:06:23Z", "is_private": false, "text": "This is tested with 3.0 and also the trunk from SVN.\n\nI have %pa% at body data of HTTP Request sampler. When I try to view it with Results Tree, the result is not shown at all. Instead I get the exception below. The problem is that quite many desktop applications are using HTTP(S) POST messages to transport the application specific data to the server. Those can violate the http-protocol. In my opinion the tree view (and others) should be able to show the results even at that case. \n\nException:\n2016/06/16 07:48:03 WARN  - jmeter.protocol.http.visualizers.RequestViewHTTP: Error decoding query, maybe your request parameters should be encoded:%pa% java.lang.IllegalArgumentException: URLDecoder: Illegal hex characters in escape (%) pattern - For input string: \"pa\"\n\tat java.net.URLDecoder.decode(Unknown Source)\n\tat org.apache.jmeter.protocol.http.visualizers.RequestViewHTTP.decodeQuery(RequestViewHTTP.java:347)\n\tat org.apache.jmeter.protocol.http.visualizers.RequestViewHTTP.getQueryMap(RequestViewHTTP.java:301)\n\tat org.apache.jmeter.protocol.http.visualizers.RequestViewHTTP.setSamplerResult(RequestViewHTTP.java:223)\n\tat org.apache.jmeter.visualizers.RequestPanel.setSamplerResult(RequestPanel.java:109)\n\tat org.apache.jmeter.visualizers.SamplerResultTab.setupTabPane(SamplerResultTab.java:229)\n\tat org.apache.jmeter.visualizers.ViewResultsFullVisualizer.valueChanged(ViewResultsFullVisualizer.java:263)\n\tat javax.swing.JTree.fireValueChanged(Unknown Source)\n\tat javax.swing.JTree$TreeSelectionRedirector.valueChanged(Unknown Source)\n\tat javax.swing.tree.DefaultTreeSelectionModel.fireValueChanged(Unknown Source)\n\tat javax.swing.tree.DefaultTreeSelectionModel.notifyPathChange(Unknown Source)\n\tat javax.swing.tree.DefaultTreeSelectionModel.setSelectionPaths(Unknown Source)\n\tat javax.swing.tree.DefaultTreeSelectionModel.setSelectionPath(Unknown Source)\n\tat javax.swing.JTree.setSelectionPath(Unknown Source)\n\tat javax.swing.plaf.basic.BasicTreeUI.selectPathForEvent(Unknown Source)\n\tat javax.swing.plaf.basic.BasicTreeUI$Handler.handleSelection(Unknown Source)\n\tat javax.swing.plaf.basic.BasicTreeUI$Handler.mousePressed(Unknown Source)\n\tat java.awt.Component.processMouseEvent(Unknown Source)\n\tat javax.swing.JComponent.processMouseEvent(Unknown Source)\n\tat java.awt.Component.processEvent(Unknown Source)\n\tat java.awt.Container.processEvent(Unknown Source)\n\tat java.awt.Component.dispatchEventImpl(Unknown Source)\n\tat java.awt.Container.dispatchEventImpl(Unknown Source)\n\tat java.awt.Component.dispatchEvent(Unknown Source)\n\tat java.awt.LightweightDispatcher.retargetMouseEvent(Unknown Source)\n\tat java.awt.LightweightDispatcher.processMouseEvent(Unknown Source)\n\tat java.awt.LightweightDispatcher.dispatchEvent(Unknown Source)\n\tat java.awt.Container.dispatchEventImpl(Unknown Source)\n\tat java.awt.Window.dispatchEventImpl(Unknown Source)\n\tat java.awt.Component.dispatchEvent(Unknown Source)\n\tat java.awt.EventQueue.dispatchEventImpl(Unknown Source)\n\tat java.awt.EventQueue.access$500(Unknown Source)\n\tat java.awt.EventQueue$3.run(Unknown Source)\n\tat java.awt.EventQueue$3.run(Unknown Source)\n\tat java.security.AccessController.doPrivileged(Native Method)\n\tat java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(Unknown Source)\n\tat java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(Unknown Source)\n\tat java.awt.EventQueue$4.run(Unknown Source)\n\tat java.awt.EventQueue$4.run(Unknown Source)\n\tat java.security.AccessController.doPrivileged(Native Method)\n\tat java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(Unknown Source)\n\tat java.awt.EventQueue.dispatchEvent(Unknown Source)\n\tat java.awt.EventDispatchThread.pumpOneEventForFilters(Unknown Source)\n\tat java.awt.EventDispatchThread.pumpEventsForFilter(Unknown Source)\n\tat java.awt.EventDispatchThread.pumpEventsForHierarchy(Unknown Source)\n\tat java.awt.EventDispatchThread.pumpEvents(Unknown Source)\n\tat java.awt.EventDispatchThread.pumpEvents(Unknown Source)\n\tat java.awt.EventDispatchThread.run(Unknown Source)"}, {"count": 1, "tags": [], "bug_id": 59712, "is_private": false, "id": 191706, "creation_time": "2016-06-16T05:10:47Z", "time": "2016-06-16T05:10:47Z", "creator": "Teemu.Vesala@qentinel.com", "text": "The problem is at the code snippet below. Returning null when the decoding fails for IllegalArgumentExpcetion prevents showing the message at all. I'd change this to return non-decoded query. I've attached the diff about that modification. It didn't add any new unit test error messages.  \n\n    public static String decodeQuery(String query) {\n        if (query != null && query.length() > 0) {\n            try {\n                query = URLDecoder.decode(query, CHARSET_DECODE); // better ISO-8859-1 than UTF-8\n            } catch(IllegalArgumentException e) {\n                log.warn(\"Error decoding query, maybe your request parameters should be encoded:\" + query, e);\n                return null;\n            } catch (UnsupportedEncodingException uee) {\n                log.warn(\"Error decoding query, maybe your request parameters should be encoded:\" + query, uee);\n                return null;\n            } \n            return query;\n        }\n        return null;\n    }", "attachment_id": null}, {"count": 2, "tags": [], "creator": "Teemu.Vesala@qentinel.com", "text": "Created attachment 33954\nPatch which fixes the issue", "id": 191707, "time": "2016-06-16T05:11:46Z", "bug_id": 59712, "creation_time": "2016-06-16T05:11:46Z", "is_private": false, "attachment_id": 33954}, {"count": 3, "attachment_id": null, "creator": "felix.schumacher@internetallee.de", "text": "*** Bug 59714 has been marked as a duplicate of this bug. ***", "id": 191875, "time": "2016-06-21T18:01:43Z", "bug_id": 59712, "creation_time": "2016-06-21T18:01:43Z", "tags": [], "is_private": false}, {"count": 4, "attachment_id": null, "creator": "felix.schumacher@internetallee.de", "is_private": false, "id": 191876, "time": "2016-06-21T18:17:01Z", "bug_id": 59712, "creation_time": "2016-06-21T18:17:01Z", "tags": [], "text": "Thanks for your contribution.\n\nDate: Tue Jun 21 18:14:22 2016\nNew Revision: 1749583\n\nURL: http://svn.apache.org/viewvc?rev=1749583&view=rev\nLog:\nDisplay original query in RequestViewHTTP when decoding fails.\nBased on patch by Teemu Vesala (teemu.vesala at qentinel.com)\n\nBugzilla Id: 59712\n\nModified:\n    jmeter/trunk/src/protocol/http/org/apache/jmeter/protocol/http/visualizers/RequestViewHTTP.java\n    jmeter/trunk/xdocs/changes.xml"}, {"count": 5, "tags": [], "bug_id": 59712, "attachment_id": null, "id": 192182, "time": "2016-07-06T19:12:27Z", "creator": "felix.schumacher@internetallee.de", "creation_time": "2016-07-06T19:12:27Z", "is_private": false, "text": "*** Bug 59808 has been marked as a duplicate of this bug. ***"}]