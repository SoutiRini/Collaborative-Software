[{"count": 0, "tags": [], "bug_id": 18783, "is_private": false, "id": 34644, "creation_time": "2003-04-07T21:02:06Z", "time": "2003-04-07T21:02:06Z", "creator": "tding@atabok.com", "text": "I have a customer built module. When there is an request, I use ap_rgetline to \nread request lines. At the end of request, ap_rgetline_core encountered an eos \nat line 275 (set saw_eos = 1;), and it does break! However, there is a recent \nadded for(;;) loop, that created an infinite loop. \n\nPlease valify it and let me know.\n\nTD", "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 18783, "is_private": false, "id": 34651, "creation_time": "2003-04-07T22:32:27Z", "time": "2003-04-07T22:32:27Z", "creator": "tding@atabok.com", "text": "the file involved is protocol.c", "attachment_id": null}, {"count": 2, "tags": [], "creator": "jorton@redhat.com", "is_private": false, "id": 63836, "creation_time": "2004-09-19T21:47:00Z", "time": "2004-09-19T21:47:00Z", "bug_id": 18783, "text": "Please do not close bugs without explanation or comment.", "attachment_id": null}, {"count": 3, "tags": [], "creator": "berry@cs.vu.nl", "text": "Created attachment 13995\nResolvement for rgetline issue\n\nI recently also ran into this issue, and verified that it was indeed the\nfor(;;) loop which isn't broken out of in case off an EOS bucket when using\nrgetline to read the contents of an entire request.\n\nThe attached patch resolves this issue, be kind and include it in next release.\n\n\nAs a temporary workaround in modules; I use the following sequence:\n  for(...) {\n    /* workaroun starts */\n    apr_brigade_cleanup(bb);\n    ap_get_brigade(r->input_filters, bb, AP_MODE_GETLINE, APR_BLOCK_READ, 0);\n    if(APR_BUCKET_IS_EOS(APR_BRIGADE_FIRST(bb)))\n      break;\n    /* end of workaround */\n    ap_rgetline_core(&line, 1024, &len, req, 0, bb);\n    ...\n  }", "id": 69624, "attachment_id": 13995, "bug_id": 18783, "creation_time": "2005-01-13T10:25:21Z", "time": "2005-01-13T10:25:21Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 18783, "is_private": false, "text": "The infinite loop seems highly unlikely because, once EOS is hit,\na new call to ap_get_brigade() would not return APR_SUCCESS.\n\nIf more information appears later, please re-open the bug.", "id": 104251, "time": "2007-06-08T21:39:46Z", "creator": "davi@apache.org", "creation_time": "2007-06-08T21:39:46Z", "attachment_id": null}]