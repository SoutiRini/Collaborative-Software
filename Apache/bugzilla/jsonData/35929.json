[{"count": 0, "tags": [], "bug_id": 35929, "attachment_id": null, "text": "I have a target which echoes a property value that stores the name of the parent\ntarget (the target executing the current target). Such property value is\nobviously updated each time a target is called. \n\nThis is no problem e.g. for <subant>, since the property value is evaluated each\ntime, but for other tasks, like <echo>, the properties in the message/text are\nevaluated/replaced only once and not each time the task is executed.\n\nIs this the expected behaviour or it can be freely changed?\n\nI've performed the following changes to \"fix\" this behaviour :\n\n    protected String messageUnreplaced = \"\"; // required\n\n    /**\n     * Message to write.\n     *\n     * @param msg Sets the value for the message variable.\n     */\n    public void setMessage(String msg) {\n        // LG\n        this.messageUnreplaced = msg;\n\n        this.message = msg;\n    }\n\n    /**\n     * Does the work.\n     *\n     * @exception BuildException if something goes wrong with the build\n     */\n    public void execute() throws BuildException {\n        // LG\n        message = getProject().replaceProperties(messageUnreplaced);\n\n        if (file == null) {\n            log(message, logLevel);\n        } else {\n            FileWriter out = null;\n            try {\n                out = new FileWriter(file.getAbsolutePath(), append);\n                out.write(message, 0, message.length());\n            } catch (IOException ioe) {\n                throw new BuildException(ioe, getLocation());\n            } finally {\n                if (out != null) {\n                    try {\n                        out.close();\n                    } catch (IOException ioex) {\n                        //ignore\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * Set a multiline message.\n     * @param msg the CDATA text to append to the output text\n     */\n    public void addText(String msg) {\n        // LG\n        messageUnreplaced += msg;\n\n        message += getProject().replaceProperties(msg);\n    }", "id": 77828, "time": "2005-07-29T15:26:42Z", "creator": "luisgois@netvisao.pt", "creation_time": "2005-07-29T15:26:42Z", "is_private": false}, {"count": 1, "tags": [], "creator": "jan@materne.de", "text": "Properties are immutable.\nI think you\u00b4re falling about that.\n\nCan post a (short) sample builfile and the expected behaviour?", "id": 77986, "time": "2005-08-03T08:51:00Z", "bug_id": 35929, "creation_time": "2005-08-03T08:51:00Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "creator": "Philippe.Faes@UGent.be", "text": "Properties are immutable; they can never change once they are set. The behavior\nyou describe is the desired and documented behavior.\n\nhttp://ant.apache.org/manual/CoreTasks/property.html", "id": 80739, "time": "2005-10-04T15:18:10Z", "bug_id": 35929, "creation_time": "2005-10-04T15:18:10Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "creator": "luisgois@netvisao.pt", "text": "Hi.\n\n\nProperties are always created by <property> underlying logic and only <property>\nshould be aware of their immutability (not the tasks that make use of it).\n<echo> coding would be cleaner if it stored the \"unresolved\"  message and not\nthe resolved one (where properties have been replaced by their values). \n\nI'm using ant-contrib, and the <echo> in the following snippet only echoes the \nvalue ${current-rdbms-dir} takes on it's first iteraction, while <subant> always\nevaluates the property value ... this seems to violate the documented behaviour\nfor Ant, don't you think? \n\n\n\n  <target name=\"default\">\n    <for param=\"current-rdbms-dir\">\n      <dirset dir=\"${user.dir}/${do}/database\" includes=\"*\"/>\n      <sequential>\n        <echo message=\"${current-rdbms-dir}\"/>\n        <subant target=\"${current-rdbms-dir}\"/>\n      </sequential>\n    </for>\n  </target>\n\n\n\n\n\n(In reply to comment #2)\n> Properties are immutable; they can never change once they are set. The behavior\n> you describe is the desired and documented behavior.\n> \n> http://ant.apache.org/manual/CoreTasks/property.html", "id": 80752, "time": "2005-10-04T19:22:38Z", "bug_id": 35929, "creation_time": "2005-10-04T19:22:38Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 35929, "attachment_id": null, "id": 80753, "time": "2005-10-04T19:27:41Z", "creator": "fugazi@zyx.net", "creation_time": "2005-10-04T19:27:41Z", "is_private": false, "text": "(In reply to comment #3)\n> Hi.\n> \n> \n>   <target name=\"default\">\n>     <for param=\"current-rdbms-dir\">\n>       <dirset dir=\"${user.dir}/${do}/database\" includes=\"*\"/>\n>       <sequential>\n>         <echo message=\"${current-rdbms-dir}\"/>\n>         <subant target=\"${current-rdbms-dir}\"/>\n>       </sequential>\n>     </for>\n>   </target>\n> \n\nShouldn't that be @{current-rdbms-dir}? At least that is according to the\nant-contrib documentation."}, {"count": 5, "tags": [], "creator": "alexeys@inventigo.com", "text": "Maybe I do not understand something, but according to\nhttp://ant-contrib.sourceforge.net/tasks/tasks/for.html <for> does not use\nproperties and parameter should have been put as @{current-rdbms-dir}.", "id": 80754, "time": "2005-10-04T19:29:24Z", "bug_id": 35929, "creation_time": "2005-10-04T19:29:24Z", "is_private": false, "attachment_id": null}]