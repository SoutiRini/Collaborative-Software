[{"count": 0, "tags": [], "creator": "m.gonzalezlee@gmail.com", "attachment_id": null, "text": "I have attempted to configure the Apache web server to protect 2 different resources (/protected and /protected2) with X.509 client authentication making use of certificates issued off 2 different issuing CAs that were issued of the same Root CA. Note that both resources are protected by the same listener listening on 443. Note also that this issue is related to the client trust list and not server trust list (i.e. the bundle of CA certificates configured to support either Server SSL or Client SSL).\n\nThe test PKI hierarchy I am testing against looks as follows:\n\n                             Root CA\n                                |\n             -----------------------------------------\n             |                  |                    |\n        Issuing CA1       Issuing CA2           Issuing CA3\n\n       (issuing certs    (issuing certs        (issuing certs\n        to protect        to protect            to protect another\n        '/protected')     '/protected2')        web server)\n\n\nHowever, I could not configure Apache to protect such resources accordingly. If this can be done, please let me know, although my testing indicates that it can not, hence raising this bug report!\n\nThe best I could achieve is to protect BOTH resources (/protected and /protected2) making use of the same Issuing CAs, using the following config snippet:\n\nSSLEngine on\nSSLProtocol all\nSSLCipherSuite HIGH:MEDIUM\nSSLCertificateFile \"C:/Program Files/Apache Software Foundation/Apache2.2/conf/ssl/server.crt\"\nSSLCertificateKeyFile \"C:/Program Files/Apache Software Foundation/Apache2.2/conf/ssl/server-unencrypted.key\"\nSSLCertificateChainFile \"C:/Program Files/Apache Software Foundation/Apache2.2/conf/ssl/server-ca-chain.crt\"\nSSLCACertificateFile \"C:/Program Files/Apache Software Foundation/Apache2.2/conf/ssl/client-auth-ica-and-root-bundle.crt\"\nSSLCADNRequestFile \"C:/Program Files/Apache Software Foundation/Apache2.2/conf/ssl/client-auth-ica-bundle.crt\"\nSSLVerifyClient none\n\n<Directory \"C:/Program Files/Apache Software Foundation/Apache2.2/htdocs-443/protected\">\n  SSLVerifyClient require\n  SSLVerifyDepth  2\n</Directory>\n\n<Directory \"C:/Program Files/Apache Software Foundation/Apache2.2/htdocs-443/protected2\">\n  SSLVerifyClient require\n  SSLVerifyDepth  2\n</Directory>\n\n\nHowever, I would like to be able to protect both resources (/protected and /protected2) making use of certificates issued by *different* Issuing CAs that were in turn issued off the same Root CA (as illustrated above). I tried moving the 'SSLCACertificateFile' directive within the 'Directory' directve, but the server would not start up (producing the error: \"SSLCADNRequestFile not allowed here\"). The config I would like to have succeeded is:\n\nSSLEngine on\nSSLProtocol all\nSSLCipherSuite HIGH:MEDIUM\nSSLCertificateFile \"C:/Program Files/Apache Software Foundation/Apache2.2/conf/ssl/server.crt\"\nSSLCertificateKeyFile \"C:/Program Files/Apache Software Foundation/Apache2.2/conf/ssl/server-unencrypted.key\"\nSSLCertificateChainFile \"C:/Program Files/Apache Software Foundation/Apache2.2/conf/ssl/server-ca-chain.crt\"\nSSLCACertificateFile \"C:/Program Files/Apache Software Foundation/Apache2.2/conf/ssl/client-auth-ica-and-root-bundle.crt\"\nSSLVerifyClient none\n\n<Directory \"C:/Program Files/Apache Software Foundation/Apache2.2/htdocs-443/protected\">\n  SSLCADNRequestFile \"C:/Program Files/Apache Software Foundation/Apache2.2/conf/ssl/client-auth-ica1.crt\"\n  SSLVerifyClient require\n  SSLVerifyDepth  2\n</Directory>\n\n<Directory \"C:/Program Files/Apache Software Foundation/Apache2.2/htdocs-443/protected2\">\n  SSLCADNRequestFile \"C:/Program Files/Apache Software Foundation/Apache2.2/conf/ssl/client-auth-ica2.crt\"\n  SSLVerifyClient require\n  SSLVerifyDepth  2\n</Directory>\n\n\nCan this be achieved in any other way that I may have missed, or is an enhancement request required?\n\nThanks,\n\nManuel.", "id": 123133, "time": "2008-12-05T09:26:24Z", "bug_id": 46355, "creation_time": "2008-12-05T09:26:24Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 46355, "attachment_id": null, "text": "It's not possible to do exactly what you're requesting with OpenSSL.\n\nIt is technically feasible to simply:\n\n - configure the root CA as SSLCACertificateFile\n - in per-directory context, use SSLRequire to check that the client cert is\nissued by the appropriate intermediary, by comparing the appropriate field in the client's issuer DN - SSL_CLIENT_I_DN_*\n\nthough there may be deployment issues with that if you are expecting any given client to have more than one cert.", "id": 128191, "time": "2009-06-23T07:41:14Z", "creator": "jorton@redhat.com", "creation_time": "2009-06-23T07:41:14Z", "is_private": false}]