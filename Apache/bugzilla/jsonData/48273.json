[{"count": 0, "tags": [], "creator": "ef-lists@email.de", "attachment_id": null, "is_private": false, "id": 132276, "time": "2009-11-24T06:22:45Z", "bug_id": 48273, "creation_time": "2009-11-24T06:22:45Z", "text": "When running mod_proxy_fcgi as a reverse proxy, it breaks the\nSCRIPT_FILENAME environment variable.\n\nAssuming the following configuration directive (in an otherwise smoothly\nrunning Apache):\nProxyPass /imp fcgi://host:port\nand a GET request to http://myhost/imp/index.php\n\nThis will set SCRIPT_FILENAME (from request_rec->filename) to\nproxy:fcgi://host:file/index.php\n\nIn the maybe most popular case of PHP, this breaks PHP in determining\nthe correct script to call.\n\nEven if SCRIPT_FILENAME is an Apache extension and not in the\nCGI-standard, PHP reacts very sensitive to it, so it should be fixed\n(although PHP might be configured in a way to ignore it).\n\nWhen changing the above config directive to:\nProxyPass / fcgi://host:port/\n\na GET / results in PATH_INFO being set to proxy:fcgi://host:port/ ,\nwhich obviously is bogus in the sense of the CGI standard."}, {"count": 1, "tags": [], "text": "(In reply to comment #0)\nI've met the same problem, but I didn't know how to configure PHP to ignore it, can you please describe your according PHP configuration? \n\nThank you.\nDodou\n\n> Even if SCRIPT_FILENAME is an Apache extension and not in the\n> CGI-standard, PHP reacts very sensitive to it, so it should be fixed\n> (although PHP might be configured in a way to ignore it).\n>", "attachment_id": null, "id": 132290, "creator": "wangdong.08@gmail.com", "time": "2009-11-24T16:09:12Z", "bug_id": 48273, "creation_time": "2009-11-24T16:09:12Z", "is_private": false}, {"count": 2, "tags": [], "text": "(In reply to comment #1)\n> I've met the same problem, but I didn't know how to configure PHP to ignore it,\n> can you please describe your according PHP configuration? \n\nIIRC, building PHP with --enable-discard-path should do the job. (I use PHP with php-fpm as a FCGI backend) Maybe you have to set cgi.fix_path_info=On in your php.ini/php-fpm.conf , too.\n\nYou can disable mod_proxy_fcgi from sending SCRIPT_FILENAME on the other hand, which makes PHP parse PATH_INFO and SCRIPT_NAME. Open mod_proxy_fcgi.c in $(apache_sourcedir)/modules/proxy, search for ap_add_common_vars(r); and add insert following line after it:\n\napr_table_unset(r->subprocess_env, \"SCRIPT_FILENAME\");\n\nThen, proceed with the usual build steps as described in the documentation. Please consider this rather a quick hack than a clean solution.\n\nRegards,\nEdgar", "attachment_id": null, "id": 132298, "creation_time": "2009-11-24T23:46:45Z", "time": "2009-11-24T23:46:45Z", "creator": "ef-lists@email.de", "bug_id": 48273, "is_private": false}, {"count": 3, "tags": [], "bug_id": 48273, "text": "The problem I see with Edgar's workaround in the general case is that SCRIPT_NAME contains a URI in the proxy server's namespace.  This may or may not have meaning to the origin server.  The reason to prefer SCRIPT_FILENAME is that the URI in its value will be in the origin server's URI namespace.\n\nI've submitted what I hope is a good a fix to the PHP project:\n\nhttp://bugs.php.net/bug.php?id=54152\n\nFeedback is welcome.", "id": 144711, "time": "2011-03-03T14:11:29Z", "creator": "mark@catseye.org", "creation_time": "2011-03-03T14:11:29Z", "is_private": false, "attachment_id": null}, {"count": 4, "attachment_id": null, "bug_id": 48273, "is_private": false, "id": 144804, "time": "2011-03-07T11:57:36Z", "creator": "ef-lists@email.de", "creation_time": "2011-03-07T11:57:36Z", "tags": [], "text": "(In reply to comment #3)\nproxy:fcgi://... isn't a URI according to RFC1630, so any backend doesn't need to understand this at all.\n\nFurthermore we're still talking HTTP (through [Fast]CGI), so the scheme should remain http."}, {"count": 5, "attachment_id": null, "bug_id": 48273, "is_private": false, "id": 144805, "time": "2011-03-07T12:32:49Z", "creator": "mark@catseye.org", "creation_time": "2011-03-07T12:32:49Z", "tags": [], "text": "Edgar,\n\nIs SCRIPT_FILENAME part of any standard?  If so, which one?  (I've looked, but it appears to be specific to Apache HTTP Server).  If the use of SCRIPT_FILENAME is not specified by any standard, then I'd say that if a backend chooses to use this variable, it should expect to accommodate the conventions Apache HTTP Server is following for it in the proxy modules.  I can see why a backend would choose to use it, as it contains information that backends likely need which not available in SCRIPT_NAME.  For example, if the following directive is in effect\n\nProxyPass /test/ fcgi://127.0.0.1:9000/www/php-ssl/\n\nand a request is made for\n\nhttp://server-name/test/hello.php\n\nthen mod_proxy_fcgi sends the following to the backend:\n\nSCRIPT_FILENAME=proxy:fcgi://127.0.0.1:9000/www/php-ssl/hello.php\nSCRIPT_NAME=/test/hello.php\nREQUEST_URI=/test/hello.php\n\nSCRIPT_NAME unfortunately can not contain information about the backend's URI namespace per RFC 3875.\n\nAlso, while HTTP is indeed the protocol used between the originator of the request and the proxy (as indicated by the SERVER_PROTOCOL environment variable passed to the backend as required by RFC 3875), mod_proxy_fcgi is speaking the FastCGI protocol to php-fpm, not HTTP, as indicated in the ProxyPass directive above.  SCRIPT_FILENAME is not reflecting the URL that the user requested from the proxy, it reflects what the proxy is requesting from the backend (granted, it does not conform to RFC 1630, but if it did, php-fpm would still not be able to handle it without modification).\n\nI'm proposing that since I know of no standards that Apache HTTP Server is violating in its current treatment of SCRIPT_FILENAME, and since this treatment is standard across the various proxy modules, that php-fpm be modified to strip out everything up through the port portion of SCRIPT_FILENAME, after which the existing logic in php-fpm handles everything correctly.\n\nDo you oppose this proposed solution?  If you do, can you explain your reasons more and/or propose a different solution?  The bug has been open for nearly a year and a half with no updates, and I'd like to see mod_proxy_fcgi work out of the box with php-fpm when Apache HTTP Server 2.4 is released at the end of this month or early next month."}, {"count": 6, "tags": [], "text": "Mark,\n\nyou're right, SCRIPT_FILENAME isn't part of any standard. IIRC this is/was a workaround for broken CGI implementations.\n\nI'd suggest to completely remove this anachronism. Isn't easy though, as this is hardcoded in the httpd core and I'd think that beta stage is to late to obsolete such a thing.\n\nE.g. the according PHP code in FPM/CGI-SAPI is a complete mess of code trying to patch this and that, trying to be smart here and there and guess what the caller really meant. In pattern'ish this is a stove pipe system and I really object to further extending this.\n\nIndeed, we still have the namespace problem. But IMHO this is a problem of remote FastCGI and a different issue. (Btw, I circumvent the namespace problem by chrooting httpd and php-fpm and having the same directory layout).", "attachment_id": null, "id": 144806, "creator": "ef-lists@email.de", "time": "2011-03-07T12:54:20Z", "bug_id": 48273, "creation_time": "2011-03-07T12:54:20Z", "is_private": false}, {"count": 7, "tags": [], "text": "\n\n*** This bug has been marked as a duplicate of bug 50851 ***", "attachment_id": null, "id": 144877, "creator": "jim@apache.org", "time": "2011-03-09T13:24:48Z", "bug_id": 48273, "creation_time": "2011-03-09T13:24:48Z", "is_private": false}]