[{"count": 0, "tags": [], "bug_id": 40054, "attachment_id": null, "text": "I've been playing with ab on one of sun's t2000's and the slowness of the\nindividual threads + some inefficiencies in ab combine for some amount of pain.\n One of the obvious sources are unecessary struct copying.  I'll attach a patch\nto fix that next.", "id": 91343, "time": "2006-07-17T06:57:13Z", "creator": "braddr@puremagic.com", "creation_time": "2006-07-17T06:57:13Z", "is_private": false}, {"count": 1, "tags": [], "creator": "braddr@puremagic.com", "text": "Created attachment 18608\nremove unnecessary structure copies", "id": 91344, "time": "2006-07-17T06:57:52Z", "bug_id": 40054, "creation_time": "2006-07-17T06:57:52Z", "is_private": false, "attachment_id": 18608}, {"count": 2, "tags": [], "creator": "braddr@puremagic.com", "attachment_id": null, "id": 91350, "time": "2006-07-17T09:58:45Z", "bug_id": 40054, "creation_time": "2006-07-17T09:58:45Z", "is_private": false, "text": "I re-ran my performance tests tonight, both with 2.0.55 and trunk, both with and\nwith out compiling with -pg.  I no longer see the performance benefits I saw\nwhen I did those changes.  I'm not sure what's up at the moment.\n\nOne simple change that buys 100 tps with -pg is not to completely destroy/create\nthe pool, just clear it out:\n\n@@ -1129,8 +1129,9 @@\n     c->gotheader = 0;\n     c->rwrite = 0;\n     if (c->ctx)\n-        apr_pool_destroy(c->ctx);\n-    apr_pool_create(&c->ctx, cntxt);\n+        apr_pool_clear(c->ctx);\n+    else\n+        apr_pool_create(&c->ctx, cntxt);\n \n     if ((rv = apr_socket_create(&c->aprsock, destsa->family,\n\n"}, {"count": 3, "tags": [], "creator": "braddr@puremagic.com", "text": "The biggest time sync's are pollset manipulation:\n\n  %   cumulative   self              self     total           \n time   seconds   seconds    calls   s/call   s/call  name    \n 10.72      0.97     0.97   400000     0.00     0.00  apr_pollset_add\n  7.29      1.63     0.66        1     0.66     8.77  test\n  6.85      2.25     0.62   171963     0.00     0.00  apr_pollset_poll\n  6.41      2.83     0.58   100000     0.00     0.00  close_connection\n  6.30      3.40     0.57   200000     0.00     0.00  apr_pollset_remove\n  6.19      3.96     0.56   600000     0.00     0.00  get_epoll_event\n  5.52      4.46     0.50   200000     0.00     0.00  read_connection\n  4.53      4.87     0.41   771966     0.00     0.00  apr_time_now\n  4.31      5.26     0.39   300000     0.00     0.00  get_epoll_revent\n  4.20      5.64     0.38   200000     0.00     0.00  apr_socket_connect\n  4.09      6.01     0.37   200000     0.00     0.00  apr_socket_recv\n  4.09      6.38     0.37   100003     0.00     0.00  start_connect\n  3.54      6.70     0.32   100000     0.00     0.00  write_request\n  3.09      6.98     0.28   400040     0.00     0.00  apr_palloc\n  2.76      7.23     0.25   200000     0.00     0.00  apr_socket_send\n  2.65      7.47     0.24                             __divdi3\n  1.99      7.65     0.18   100000     0.00     0.00  alloc_socket\n  1.66      7.80     0.15   100000     0.00     0.00  apr_socket_timeout_set\n  1.55      7.94     0.14   100000     0.00     0.00  set_socket_vars\n  1.44      8.07     0.13   100000     0.00     0.00  apr_socket_create\n  1.44      8.20     0.13   100000     0.00     0.00  socket_cleanup\n  1.33      8.32     0.12   200001     0.00     0.00  apr_sockaddr_vars_set\n  1.22      8.43     0.11   100010     0.00     0.00  apr_pool_cleanup_register\n  1.22      8.54     0.11   100001     0.00     0.00  apr_pool_cleanup_kill\n  1.10      8.64     0.10   100000     0.00     0.00  sononblock\n  1.10      8.74     0.10    99997     0.00     0.00  apr_pool_clear\n  0.88      8.82     0.08   100001     0.00     0.00  apr_pool_cleanup_run\n  0.88      8.90     0.08   100000     0.00     0.00  apr_socket_opt_set\n  0.66      8.96     0.06   100003     0.00     0.00  run_cleanups\n  0.55      9.01     0.05   100000     0.00     0.00  apr_socket_close\n  0.44      9.05     0.04                             __floatdisf\n  0.00      9.05     0.00   100003     0.00     0.00  free_proc_chain", "id": 91351, "time": "2006-07-17T10:11:24Z", "bug_id": 40054, "creation_time": "2006-07-17T10:11:24Z", "is_private": false, "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 40054, "text": "I independently found and fixed the struct issue of your first patch\nwhen I was doing a general overhaul of the stats a few days ago.\nThe second patch has now been applied as well (r655654).\n", "count": 4, "id": 116529, "time": "2008-05-12T14:28:50Z", "creator": "fielding@apache.org", "creation_time": "2008-05-12T14:28:50Z", "is_private": false}, {"count": 5, "tags": [], "creator": "rpluem@apache.org", "attachment_id": null, "id": 117063, "time": "2008-05-27T15:15:56Z", "bug_id": 40054, "creation_time": "2008-05-27T15:15:56Z", "is_private": false, "text": "Backported to 2.2.x as r660576 (http://svn.apache.org/viewvc?rev=660576&view=rev)."}]