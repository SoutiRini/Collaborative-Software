[{"count": 0, "tags": [], "bug_id": 15703, "attachment_id": null, "id": 28722, "time": "2002-12-29T15:09:28Z", "creator": "dvbaar@ferranti.be", "creation_time": "2002-12-29T15:09:28Z", "is_private": false, "text": "(Using Standard-Taglib version 1.0.2 - I was not able to select this in the \nVersion dropdown on the Bug Entry page)\n\nThe org.apache.taglibs.standard.tlv.JstlFmtTLV Validator complains about a \nmissing attribute \"var\" when using the attribute \"scope\".\n\nTwo remarks:\n1. according to the fmt.tld there IS no attribute 'var' for the setLocale tag.\n\n2. According to the spec \"var\" is not required. If you do not specify it, it \nreplaces the default Locale.\n\nSo as I understand it, I just put <fmt:setLocale value=\"${param.lang}\" \nscope=\"session\" /> on a page that sets the default Locale for this session and \nall subsequent pages that are called in the user's session will use that Locale."}, {"count": 1, "tags": [], "bug_id": 15703, "text": "This works for me. Please provide a simple JSP page that triggers\nthe problem.", "id": 28833, "time": "2003-01-02T23:47:48Z", "creator": "pierre.delisle@sun.com", "creation_time": "2003-01-02T23:47:48Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 15703, "attachment_id": null, "text": "With which servlet-runner did it work for you?\nI'm running into this problem on Resin 2.1.6. It does work on JRun4...\n\nMy feeling is that JRun4 is not validating the usage of the tags by calling the \norg.apache.taglibs.standard.tlv.JstlFmtTLV Validator. I think it only checks \nusage by what attributes are specified in the TLD.", "id": 30894, "time": "2003-02-07T14:11:38Z", "creator": "dvbaar@ferranti.be", "creation_time": "2003-02-07T14:11:38Z", "is_private": false}, {"count": 3, "tags": [], "text": "It works on Tomcat. You may want to check with the Resin support team.\nIf you want to reopen that bug, *please* submit sample code that\ntriggers the problem.", "attachment_id": null, "bug_id": 15703, "id": 32042, "time": "2003-02-26T21:09:54Z", "creator": "pierre.delisle@sun.com", "creation_time": "2003-02-26T21:09:54Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 15703, "text": "it does NOT work for me:\n\nmy JSP:\n\n--- start ---\n<%@ page language=\"java\" %>\n<%@ taglib uri=\"/WEB-INF/tlds/fmt.tld\" prefix=\"fmt\" %>\n\n<fmt:setLocale value=\"cs_CZ\" scope=\"session\"/>\n--- end ---\n\nerror message: 'Illegal scope attribute without var in \"fmt:setLocale\" tag'\n\nI suppose it should set locale \"cs_CZ\" for all request in current session\ninstead, please let me know if I'm wrong.\n\nI also suppose it shouldn't throw such a confising exception (AFAIK JSTL specs\nas well as fmt.tld don't say anything about \"var\" attribute of this tag).\n\nweb container: Tomcat 4.1.24\n\ntaglib version: 1.0.3", "id": 42885, "time": "2003-08-18T06:46:24Z", "creator": "k@les.cz", "creation_time": "2003-08-18T06:46:24Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 15703, "attachment_id": null, "text": "I suppose the problem is based in the fact that the \nmethod \"JstlBaseTLV.isFmtTag\" uses the explicit \nURI \"http://java.sun.com/jstl/fmt\" to determine if the current tag is a format \ntag. Therefore the test \"!isFmtTag(ns, ln, SETLOCALE)\" \nin \"JstlFmtTLV.Handler.startElement\" doesn't match if the tag library is \ndeclared by referencing the TLD file directly instead of using the logical URI \n(i.e. \"<%@ taglib prefix=\"fmt\" uri=\"/WEB-INF/tlds/fmt-1_0.tld\" %>\").", "id": 42933, "time": "2003-08-18T18:26:19Z", "creator": "mf@fuhrer.com", "creation_time": "2003-08-18T18:26:19Z", "is_private": false}, {"count": 6, "tags": [], "creator": "t5jtjj502@sneakemail.com", "attachment_id": null, "text": "I agree with Martin about the reason of the bug.\n\nRegarding the solution, we should changed the isXXXTag methods to check the\nconstants (like FMT_EL) against real URI of the tag.\n\nTo get the real URI I guess we need to call TagLibraryInfo.getReliableURN(). The\nproblem is: how do we get a reference to the TagLibraryInfo while we are\nvalidating the page? There is no such method on TagLibraryValidator. I did a\ngoogle search on TagLibraryInfo and found a post with the same question, but no\nanswer:\n\nhttp://groups.google.com/groups?q=TagLibraryInfo&hl=en&lr=&ie=UTF-8&safe=off&selm=bbf0af98.0306131643.28e3206f%40posting.google.com&rnum=1\n\nMaybe this is not possible at all (although I think it would be just a matter of\nadding a getTagLibratyInfo() on TagLibraryValidator). In that case, maybe it\nshould be responsability of the JSP compiler to do the translation. On Tomcat,\nfor instance, I guess that could be achieve by changing the following line in\nTagLibraryInfoImpl:\nfrom:\n        return tlv.validate(getPrefixString(), getURI(), thePage);\nto:\n        return tlv.validate(getPrefixString(), getReliableURN(), thePage);\n\nI haven't tried that yet, but I can try it later. \n\nFelipe\n", "id": 43155, "time": "2003-08-22T11:17:45Z", "bug_id": 15703, "creation_time": "2003-08-22T11:17:45Z", "is_private": false}, {"count": 7, "tags": [], "creator": "pierre.delisle@sun.com", "attachment_id": null, "is_private": false, "id": 43189, "time": "2003-08-23T00:09:14Z", "bug_id": 15703, "creation_time": "2003-08-23T00:09:14Z", "text": "Thanks Martin and Felipe for digging the cause of this problem.\n\nUnfortunately, as pointed out by Felipe, there is not much we can\ndo about this problem because the JSP spec does not currently provide \na reliable way for a TLV to tell whether an element of the JSP page being\nprocessed belongs to a specific tag library.\n\nGiven the following release note in JSP 2.0:\n\n------------------------------------------------------------------\nWhere possible, JSP 2.0 attempts to be fully backwards compatible with\nJSP 1.2.  In some cases, there are ambiguities in the JSP 1.2\nspecification that have been clarified in JSP 2.0.  Because some JSP 1.2\ncontainers behave differently, some applications that rely on\ncontainer-specific behavior may need to be adjusted to work correctly in\na JSP 2.0 environment.\n\nThe following is a list of known backwards compatibility issues JSP\ndevelopers should be aware of:\n\n1. Tag Library Validators that are not namespace aware and that rely\n    solely on the prefix parameter may not correctly validate some JSP\n    2.0 pages.  This is because the XML view may contain tag library\n    declarations in elements other than jsp:root, and may contain the\n    same tag library declaration more than once, using different\n    prefixes.  The uri parameter should always be used by Tag Library\n    Validators instead.  Existing JSP pages with existing tag libraries\n    will not have any problems.\n------------------------------------------------------------------ \n\nit appears that the intent of the spec is to feed the *reliable* URI \nto the TLV (which is what makes sense), not the one specified in the taglib\ndirective.\n\nUnfortunately, this is not what the JSP spec currently says:\n\npublic ValidationMessage[] validate(java.lang.String prefix, java.lang.String uri,\nPageData page)\nValidate a JSP page. This will get invoked once per unique tag library URI in\nthe XML view. This method will return null if the page is valid; otherwise the\nmethod should return an array of ValidationMessage objects. An array of\nlength zero is also interpreted as no errors.\n\nParameters:\nprefix - the first prefix with which the tag library is associated, in the XML\nview. Note that some tags may use a different prefix if the namespace is\nredefined.\nuri - the value of the uri argument in the directive\npage - the JspData page object\nReturns: A null object, or zero length array if no errors, an array of\nValidationMessages otherwise.\n\nThe JSP spec lead has been informed of this issue.\n\nIn the meantime, you can get your page to compile if you \nsimply use the URI defined in the\nTLD of the tag library. In your case, this is \nhttp://java.sun.com/jstl/fmt.\n\n\n\n"}, {"count": 8, "tags": [], "bug_id": 15703, "attachment_id": null, "id": 43418, "time": "2003-08-28T03:07:59Z", "creator": "t5jtjj502@sneakemail.com", "creation_time": "2003-08-28T03:07:59Z", "is_private": false, "text": "> In the meantime, you can get your page to compile if you simply use the URI \n> defined in the TLD of the tag library. In your case, this is \n> http://java.sun.com/jstl/fmt.\n\nPierre,\n\nCouldn't we mention that on the ReleaseNotes.html?\n\nFelipe"}, {"count": 9, "tags": [], "bug_id": 15703, "attachment_id": null, "text": "The JSP 2.0 spec now states the following:\n\nTagLibraryValidator() \n\n  public ValidationMessage[] \n    validate(java.lang.String prefix, \n             java.lang.String uri,\n             PageData page)\n\n...\nuri - the tag library\u2019s unique identifier\n\n(uri used to be defined as: \n\"uri - the value of the uri argument in the directive\")\n\nThis change to the spec means that this bug should now be solved with a JSP 2.0\ncontainer. But I still get an error with Tomcat 5.0.16. Thanks for looking into\nthis!", "id": 48954, "time": "2003-12-12T01:04:31Z", "creator": "pierre.delisle@sun.com", "creation_time": "2003-12-12T01:04:31Z", "is_private": false}, {"count": 10, "attachment_id": null, "creator": "jan.luehe@sun.com", "is_private": false, "id": 49138, "time": "2003-12-15T17:54:28Z", "bug_id": 15703, "creation_time": "2003-12-15T17:54:28Z", "tags": [], "text": "This seems to be a bug in the JSTL TLVs, which currently ignore the \"uri\"\nargument passed to their validate() method and use the hardcoded unique\nidentifier (http://java.sun.com/jsp/jstl/xxx) instead.\n\nJSP.13.9.6 mentions that the \"uri\" parameter in TLV.validate()\ncorresponds to the taglib's uri in the XML view.\n\nThe javadocs of TLV.validate() describe the \"uri\" param as follows:\n\n @param uri the tag library's unique identifier\n \nThe JSP spec lead confirmed that the javadocs of TLV.validate() need\nto be clarified to match the spec.\n\nThe JSP container will invoke a TLV with the necessary uri namespace\nto be searched in the XML view, and TLV implementors must not hardcode\nthis namespace in their TLV but rather search for the provided value.\n\nThis way, TLVs will be able to locate the XML view elements they are supposed to\nvalidate.\n"}, {"count": 11, "tags": [], "creator": "nagoya@felipeal.net", "attachment_id": null, "is_private": false, "id": 49141, "time": "2003-12-15T18:55:28Z", "bug_id": 15703, "creation_time": "2003-12-15T18:55:28Z", "text": "Pierre/Jan,\n\nThe problem is not the validate() method itself, but the halpers (isFmtTag(),\nisCoreTag(), etc...) used while parsing the PageData (right now, validate() is\ndefined in a super class - JstlBaseTLV - but the parsing code is spread throught\nthe sub-classes).\n\nI think the easiest solution would be to redefine validate() in each sub-class,\nsetting the proper mapping between the TLV's taglib and its URI. Something like\nthis:\n\nOn JstlBaseTLV\n--------------\n\nprivate String fmtUri = null;\n\nprotected void setFmtUri( String uri ) { this.fmtUri = uri; }\n\nprotected boolean isFmtTag(String tagUri, String tagLn, String target) {\n        return ( this.fmtUri != null &&\n                 isTag(tagUri, tagLn, FMT, target)\n              || isTag(tagUri, tagLn, FMT_EL, target)\n              || isTag(tagUri, tagLn, FMT_RT, target));\n    }\n\n\nOn JstlFmtTLV\n-------------\n\n    public synchronized ValidationMessage[] validate(\n            String prefix, String uri, PageData page) {\n         setFmtUri( uri );\n         super.validate( prefix, uri, page );\n\n    }\n\nWhat do you think? If you're ok with that, I can do these changes on JSTL's code.\n\nFelipe"}, {"count": 12, "tags": [], "creator": "t5jtjj502@sneakemail.com", "attachment_id": null, "is_private": false, "id": 49303, "time": "2003-12-18T03:25:22Z", "bug_id": 15703, "creation_time": "2003-12-18T03:25:22Z", "text": "Moved bug back to Jakarta Standard (and create a new Tomcat bug for the javadoc\nissue)."}, {"count": 13, "tags": [], "creator": "nagoya@felipeal.net", "attachment_id": null, "is_private": false, "id": 50157, "time": "2004-01-07T00:45:43Z", "bug_id": 15703, "creation_time": "2004-01-07T00:45:43Z", "text": "Committed changes on CVS; waiting for TCK build report before closing the bug."}]