[{"count": 0, "tags": [], "bug_id": 58061, "is_private": false, "text": ".xls files produced by POI on trunk are not valid right now, it seems a recent change broke HSSF completely.\n\nWhen running \"git bissect\", the following is found as culprit:\n\n----\n9d4d015a344dbe95918dcb7b2daa5af2f0677da0 is the first bad commit\ncommit 9d4d015a344dbe95918dcb7b2daa5af2f0677da0\nAuthor: nick <nick@13f79535-47bb-0310-9956-ffa450edef68>\nDate:   Mon May 11 18:04:30 2015 +0000\n\n    #56791 More updates from OPOIFS to NPOIFS\n   \n    git-svn-id: https://svn.apache.org/repos/asf/poi/trunk@1678783 13f79535-47bb-0310-9956-ffa450edef68\n\n:040000 040000 277fa7aea6ea9ed9bfaa53cf45c4d390437ac1e3 26deba68dd564b5b790679dab7eeb99abbe550bf M      src\n'bisect run' erfolgreich ausgef\u00fchrt\n----\n\nI used the following command in the \"git bissect\" to decide if it still works or not, i.e. a simple XLS that is produced by POI will not open in LibreOffice anymore. It's the same for Excel:\n\n----\njava -cp build/classes:build/examples-classes org.apache.poi.hssf.usermodel.examples.CreateCells && \\\ntest -f workbook.xls && \\\nunoconv -vvv --timeout=10 --doctype=spreadsheet --output=workbook.pdf workbook.xls\n----", "id": 183659, "time": "2015-06-20T14:12:05Z", "creator": "dominik.stadler@gmx.at", "creation_time": "2015-06-20T14:12:05Z", "attachment_id": null}, {"count": 1, "tags": [], "creator": "apache@gagravarr.org", "is_private": false, "text": "The files won't be identical at the byte level, as the code for assigning blocks is different in NPOIFS. Streams should be the same though\n\nIt's odd that things are breaking, as I believe people have been using NPOIFS for ages with HSSF without problems.\n\nDoes it happen with all files written, or only certain ones? What's the smallest file we can generate with OPOIFS and NPOIFS that shows it? (It's much easier to compare at the byte/raw level something small!)\n\nIf you take a problematic file, generate it with OPOIFS and with NPOIFS, then run POIFSDump on the two, are the various streams the same?\n\nCan NPOIFS open and read the problematic file OK? Can OPOIFS read it? Can HSSF read it?", "id": 183677, "time": "2015-06-21T19:06:35Z", "bug_id": 58061, "creation_time": "2015-06-21T19:06:35Z", "attachment_id": null}, {"count": 2, "tags": [], "creator": "dominik.stadler@gmx.at", "text": "The following produces an invalid xls for me both on Linux and Windows:\n\n    @Test\n    public void test58061() throws IOException {\n        Workbook wb = new HSSFWorkbook();\n        wb.createSheet(\"testsheet\");\n        \n        OutputStream out = new FileOutputStream(\"C:\\\\temp\\\\58061.xls\");\n        try {\n            wb.write(out);\n        } finally {\n            out.close();\n        }\n    }\n\nI will attach the result of POIFSDump for the a good file (using OPOIFSFileSystem) and a bad one (using NPOIFSFileSystem).", "id": 183681, "time": "2015-06-22T11:18:30Z", "bug_id": 58061, "creation_time": "2015-06-22T11:18:30Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 58061, "attachment_id": 32842, "is_private": false, "id": 183682, "time": "2015-06-22T11:19:00Z", "creator": "dominik.stadler@gmx.at", "creation_time": "2015-06-22T11:19:00Z", "text": "Created attachment 32842\nresults from POIFSDump in two directories"}, {"count": 4, "tags": [], "creator": "dominik.stadler@gmx.at", "text": "BiffViewer can open both without error and the only difference is in the username that is written to the file. The corrupt one uses the login-name, the other the first- and last-name of the current user.", "id": 183683, "time": "2015-06-22T11:20:46Z", "bug_id": 58061, "creation_time": "2015-06-22T11:20:46Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "creator": "apache@gagravarr.org", "text": "Any chance you could try running the latest Microsoft Binary File Format Validator on the two files, and see if either gets reported as having problems? If not, we'll have to dive into the hex dumps, which won't be fun or quick...", "id": 183688, "time": "2015-06-22T13:00:17Z", "bug_id": 58061, "creation_time": "2015-06-22T13:00:17Z", "is_private": false, "attachment_id": null}, {"count": 6, "tags": [], "creator": "dominik.stadler@gmx.at", "is_private": false, "id": 183691, "attachment_id": 32845, "bug_id": 58061, "creation_time": "2015-06-22T14:44:23Z", "time": "2015-06-22T14:44:23Z", "text": "Created attachment 32845\nLog when parsing the corrupted file\n\nbffvalidator c:\\temp\\58061corrupt.xls\nBFFValidator: \"c:\\temp\\58061corrupt.xls\" NOT RECOGNIZED (The Microsoft Office Binary File Format Validator encountered an error reading the file you specified, OR The Microsof\nt Office Binary File Format Validator supports Word, Excel, and PowerPoint binary file formats only. The file you specified is an unsupported file type.) at 06/22/15 16:42:14\nLog at: c:\\temp\\58061corrupt.xls.bffvalidator.06-22-15_16-42-14.xml"}, {"attachment_id": 32846, "tags": [], "bug_id": 58061, "is_private": false, "count": 7, "id": 183692, "time": "2015-06-22T14:45:02Z", "creator": "dominik.stadler@gmx.at", "creation_time": "2015-06-22T14:45:02Z", "text": "Created attachment 32846\nLog when parsing the good file\n\nbffvalidator c:\\temp\\58061good.xls\nBFFValidator: \"c:\\temp\\58061good.xls\" FAILED at 06/22/15 16:42:09\nLog at: c:\\temp\\58061good.xls.bffvalidator.06-22-15_16-42-09.xml\nSee: http://msdn.microsoft.com/en-us/library/A6FFF2B4-470A-463D-A6E9-9DAD9676CD44 for more information"}, {"count": 8, "tags": [], "bug_id": 58061, "is_private": false, "text": "Created attachment 32847\nFile created with NPOIFS", "id": 183693, "time": "2015-06-22T14:45:53Z", "creator": "dominik.stadler@gmx.at", "creation_time": "2015-06-22T14:45:53Z", "attachment_id": 32847}, {"attachment_id": 32848, "tags": [], "bug_id": 58061, "is_private": false, "count": 9, "id": 183694, "time": "2015-06-22T14:46:10Z", "creator": "dominik.stadler@gmx.at", "creation_time": "2015-06-22T14:46:10Z", "text": "Created attachment 32848\nFile created with OPOIFS"}, {"attachment_id": 32852, "tags": [], "creator": "apache@gagravarr.org", "is_private": false, "count": 10, "id": 183712, "time": "2015-06-23T16:33:23Z", "bug_id": 58061, "creation_time": "2015-06-23T16:33:23Z", "text": "Created attachment 32852\nlibgsf-1 python program to check the NPOIFS and OPOIFS files\n\nI've had a bit of a play with libgsf-1, in python, listing script attached. It reports no problems reading the OPOIFS generated file, but on the NPOIFS one it gives the error \n\nlibgsf:msole-WARNING **: failure reading block 0 for 'Workbook'\n\nThat, coupled with the BFF validator error, does make me think we must be doing something wrong with how we're writing the file. Odd that our code reads it fine, but the other libraries don't... May need to step through the libgsf code to see what it isn't liking, then re-check the matching NPOIFS write code against the spec for that section"}, {"count": 11, "attachment_id": null, "creator": "apache@gagravarr.org", "text": "I've noticed that most of the other tools pop their Properties Table into block 0, which NPOIFS wasn't. I've changed that in r1688038. More tweaks may be required though", "id": 183783, "time": "2015-06-28T19:00:23Z", "bug_id": 58061, "creation_time": "2015-06-28T19:00:23Z", "tags": [], "is_private": false}, {"count": 12, "tags": [], "bug_id": 58061, "text": "Larger files seem to open OK with OpenOffice and libgsf, so it looks like remaining issues are around the ministream. If someone with handy access to a copy of windows could try re-creating the small test file on trunk, and seeing if the BFFV gives any more helpful messages about the file or not, that'd help!\n\n(If not, I've got a c program working with libgsf-1, so next step otherwise is to use gdb to step into it to see why it doesn't like the file)", "id": 183789, "time": "2015-06-29T09:56:59Z", "creator": "apache@gagravarr.org", "creation_time": "2015-06-29T09:56:59Z", "is_private": false, "attachment_id": null}, {"count": 13, "tags": [], "bug_id": 58061, "is_private": false, "text": "I've spent quite a bit more time on this, but I'm still stumped as to what we're doing wrong. OpenMcdf is able to read the files without error or issue, but libgsf objects. If you open the file in OpenMcdf, save the Workbook stream, then create a new file with OpenMcdf, Excel opens that file. (However, that file is wrong in other ways, bugs reported to the OpenMcdf project!) If you save the Workbook stream out using POIFSDump, then use python + ctypes + libgsf to write it, then Excel is happy with the file, but in some situations libgsf gives the same error about its file that it does for NPOIFS generated ones! Bug reported to libgsf as well. And I still can't work out what NPOIFS is doing that upsets Excel / OpenOffice...", "id": 183837, "time": "2015-07-01T18:52:45Z", "creator": "apache@gagravarr.org", "creation_time": "2015-07-01T18:52:45Z", "attachment_id": null}, {"count": 14, "tags": [], "bug_id": 58061, "attachment_id": null, "is_private": false, "id": 183870, "time": "2015-07-02T22:57:59Z", "creator": "apache@gagravarr.org", "creation_time": "2015-07-02T22:57:59Z", "text": "No response on my libgsf or OpenMcdf bug reports\n\nI had a play with the Node.JS OLE2 library js-cfb <https://github.com/SheetJS/js-cfb> - this is able to read the NPOIFS ministream without error, just like OpenMcdf can do. I've also tried the Perl module Spreadsheet::Read, and it reads the NPOIFS file fine too\n\nMicrosoft released a new version of the [MS-CFB] file format spec last week, but sadly that didn't seem to have any changes in it that cover this case\n\nAt this point, it looks like a subtle issue where one reading of the format spec differs slightly from the one Excel + OO has. Unless someone else can spot something, it's probably going to need setting up a Windows C development environment, writing a simple lister with the same OLE2 functions that Excel uses, and stepping into that with a debugger to see why it doesn't like our ministream.... Any takers? :)"}, {"count": 15, "tags": [], "bug_id": 58061, "text": "With the help of Morten Welinder from libgsf, I think we might have this cracked now as of r1689505! Would someone be able to confirm?", "id": 183918, "time": "2015-07-06T22:12:54Z", "creator": "apache@gagravarr.org", "creation_time": "2015-07-06T22:12:54Z", "is_private": false, "attachment_id": null}, {"count": 16, "tags": [], "creator": "dominik.stadler@gmx.at", "text": "Thanks a lot, it seems to work fine now also with very small files!", "id": 183927, "time": "2015-07-07T07:49:00Z", "bug_id": 58061, "creation_time": "2015-07-07T07:49:00Z", "is_private": false, "attachment_id": null}]