[{"count": 0, "tags": [], "bug_id": 46967, "text": "On some platforms (z/OS for sure), the device file /dev/urandom can pass the \"f.exists()\" test, but throws an IOException of some kind when trying to open it.  The current code in ManagerBase.setRandomFile() doesn't handle this, which results in EVERY call to getRandom() to try again and log the error  \"Failed to close randomIS\".\n\nThe following changes to the method will add proper error handling to correct this (my changes marked \"// kjw\")\n\n    public void setRandomFile( String s ) {\n        // as a hack, you can use a static file - and genarate the same\n        // session ids ( good for strange debugging )\n        if (Globals.IS_SECURITY_ENABLED){\n            randomIS = (DataInputStream)AccessController.doPrivileged(new PrivilegedSetRandomFile());          \n        } else {\n            try{\n                devRandomSource=s;\n                File f=new File( devRandomSource );\n                if( ! f.exists() ) return;\n                randomIS= new DataInputStream( new FileInputStream(f));\n                randomIS.readLong();\n                if( log.isDebugEnabled() )\n                    log.debug( \"Opening \" + devRandomSource );\n            } catch( IOException ex ) {\n            \tlog.debug(\"Error reading \" + devRandomSource, ex); //kjw\n            \tif (randomIS != null) {  // kjw: if opened\n\t                try {\n\t                    randomIS.close();\n\t                } catch (Exception e) {\n\t                    log.warn(\"Failed to close randomIS.\");\n\t                }\n            \t}                       // kjw \n            \tdevRandomSource = null; // kjw: don't try again automatically\n                randomIS=null;\n            }\n        }\n    }", "id": 125997, "time": "2009-04-03T18:57:28Z", "creator": "kirk@wolf-associates.com", "creation_time": "2009-04-03T18:57:28Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 46967, "text": "Thanks for the patch. I have applied it to trunk and proposed it for 6.0.x.\n\nI extended your patch to make the behaviour consistent when running under a security manager.", "id": 126087, "time": "2009-04-08T06:02:07Z", "creator": "markt@apache.org", "creation_time": "2009-04-08T06:02:07Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 46967, "text": "This has been fixed in 6.0.x and will be in 6.0.21 onwards.", "id": 127292, "time": "2009-05-22T08:15:11Z", "creator": "markt@apache.org", "creation_time": "2009-05-22T08:15:11Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "creator": "knst.kolinko@gmail.com", "is_private": false, "text": "*** Bug 47276 has been marked as a duplicate of this bug. ***", "id": 128959, "time": "2009-07-17T10:41:58Z", "bug_id": 46967, "creation_time": "2009-07-17T10:41:58Z", "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 46967, "attachment_id": null, "text": "Reopening, to track fixing it in 5.5 branch.", "id": 128960, "time": "2009-07-17T10:45:26Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2009-07-17T10:45:26Z", "is_private": false}, {"count": 5, "attachment_id": null, "creator": "knst.kolinko@gmail.com", "is_private": false, "id": 129672, "time": "2009-08-12T18:23:28Z", "bug_id": 46967, "creation_time": "2009-08-12T18:23:28Z", "tags": [], "text": "This has been fixed in 5.5 and will be in 5.5.29 onwards."}]