[{"count": 0, "tags": [], "text": "The code below processes a servlet response.  In TC4.0.6 the client does\nget the response message at the flush().  The sleep does not effect \nthe delivery.\n\nIn TC 4.1.12, the output does not get delivered until after the code gets back\ninto the area around:\n\norg.apache.coyote.tomcat4.CoyoteAdapter.service(org.apache.coyote.Request,\norg.apache.coyote.Response) line: 226\n\nBottom line is the flush() has no effect on getting the data out of the stream.\n\nMy normal client is java code, however, I have reproduced the problem \nusing this code chunk using either mozilla or IE6 in place of the clients.\n\n\n        try {\n            logger.debug( \"Release requestor\" );\n            response.setContentType( \"text/plain; charset=ISO-8859-1\" );\n\n            PrintWriter out = response.getWriter();\n            out.println( \"OK\" );\n            out.flush();\n            out.close();   // client should get \"OK\" message at this time\n            logger.debug( \"Release requestor - done\" );\n            String   readQueue = request.getParameter( \"readQueue\" );\n            logger.debug( \"Sleeping\" );\n           Thread.sleep(6000);\n           logger.debug( \"awake\" );\n\n            // Pull off parms passed and exec ReadCntl\n        } catch ( Exception e ) {\n            logger.error(\"Unexpected error\", e);\n        }", "is_private": false, "id": 25337, "creator": "jpettens@rochester.rr.com", "time": "2002-10-29T19:05:10Z", "bug_id": 14059, "creation_time": "2002-10-29T19:05:10Z", "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 14059, "is_private": false, "text": "I am almost certain this is correctly implemented. I'll make sure of that with a\ntelnet.", "id": 25338, "time": "2002-10-29T19:08:55Z", "creator": "remm@apache.org", "creation_time": "2002-10-29T19:08:55Z", "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 14059, "is_private": false, "id": 25369, "attachment_id": null, "creator": "remm@apache.org", "creation_time": "2002-10-30T08:28:06Z", "time": "2002-10-30T08:28:06Z", "text": "The data flushed is immediately sent back to the client (and displayed in the\nclient browser; IE 6 in my case). I don't know what's wrong with your testing,\nbut it definitely works for me. The writer is also closed for the servlet\nperspective. However, the request processing is only actually terminated when\nthe servlet returns."}, {"count": 3, "tags": [], "bug_id": 14059, "attachment_id": null, "text": "I went back and checked the response times and behavior of the browser test.\n\nOn 4.1.12\nIt looks like the OK data string comes back almost immediately, but the session\ndoes not release for a consistant 6.012 seconds - every time.\n\nOn 4.0.6\nAgain the OK data string comes back immediately, the session release times are\nall over the map.  .1 seconds to 5.01 seconds.  But never the 6 seconds to match\nthe sleep on the server.\n\nI also looked at the protocol n the wire and hereis what I see:\n\n4.1.12\n\nGET ...     ---->\nHTTP/1.1 200 OK    <----\nContinuation       <----\nContinuation       <----   (data frame contains \"OK\")\n\n\n4.0.6\n\nGET ...     ---->\nHTTP/1.1 200 OK    <----\nContinuation       <----     (data frame contains \"OK\")\nContinuation       <----  \n\nIt appears that the OK in the continuation frame indicates when the server\nactually closes the stream.  if that is true, the TC4.1.12 close() is the\noperation that is not really occuring at the lines in the code.\n\nI am going to try reading the response in my client without buffering, but I'm\nnot sure what will happen if I close the client stream, when the server still\nhas it open.\n\n-j.p.", "id": 25442, "time": "2002-10-31T18:36:48Z", "creator": "jpettens@rochester.rr.com", "creation_time": "2002-10-31T18:36:48Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 14059, "attachment_id": null, "text": "I have gone back and created a java client that reads the inputStream response a\nchar at a time:\n\n        logger.debug( \"opening buffered reader to read response\" );\n\n        InputStreamReader is = new InputStreamReader(\nURLConnection.getInputStream() );\n\n        //  Note: should read response to make sure no error.\n        String       str;\n        int          i;\n        StringBuffer sb = new StringBuffer();\n\n        while ( ( i = is.read() ) != -1 ) {\n\n            char c = (char)i;\n            logger.debug( \"Have a char: \" + c );\n            sb.append( c );\n        }\n\n        String s = sb.toString();\n        logger.debug( \"String returned is: \" + s );\n\n        if ( !s.startsWith( \"OK\" ) ) {\n            throw new RuntimeException( \"Server returned: \" + s );\n        }\n\n        is.close();\n    }\n\nI pointed it at the Servlet test code on Tc4.0.6\nResults:\n\n\n2002-11-01 12:41:16,884 [GMT] DEBUG 10    TestTestService [main]  - Connecting\nto\nhttp://mocha.ko.kodak.com:8080/eFUSE/servlet/controller/Test?action=ReadRequest&readQueue=TestingMe\n2002-11-01 12:41:16,934 [GMT] DEBUG 60    TestTestService [main]  - opening\nbuffered reader to read response\n2002-11-01 12:41:16,944 [GMT] DEBUG 70    TestTestService [main]  - Have a char:O\n2002-11-01 12:41:16,944 [GMT] DEBUG 70    TestTestService [main]  - Have a char:K\n2002-11-01 12:41:16,954 [GMT] DEBUG 80    TestTestService [main]  - Have a char: \n2002-11-01 12:41:16,954 [GMT] DEBUG 80    TestTestService [main]  - Have a char: \n2002-11-01 12:41:16,954 [GMT] DEBUG 80    TestTestService [main]  - String\nreturned is: OK\n\nTC 4.1.12 Results:\n\n\n2002-11-01 12:38:48,050 [GMT] DEBUG 10    TestTestService [main]  - Connecting\nto\nhttp://arabica.ko.kodak.com:8080/eFUSE/servlet/controller/Test?action=ReadRequest&readQueue=TestingMe\n2002-11-01 12:38:48,100 [GMT] DEBUG 60    TestTestService [main]  - opening\nbuffered reader to read response\n2002-11-01 12:38:54,119 [GMT] DEBUG 6079  TestTestService [main]  - Have a char:O\n2002-11-01 12:38:54,119 [GMT] DEBUG 6079  TestTestService [main]  - Have a char:K\n2002-11-01 12:38:54,119 [GMT] DEBUG 6079  TestTestService [main]  - Have a char: \n2002-11-01 12:38:54,119 [GMT] DEBUG 6079  TestTestService [main]  - Have a char: \n2002-11-01 12:38:54,119 [GMT] DEBUG 6079  TestTestService [main]  - String\nreturned is: OK\n\nNote the times.  Each TC instance was deployed \"out of the box\", however is\nthere a directive in the server.xml that would account for this behavior difference?\n\nThank you for your time.\n\n-j.p.", "id": 25476, "time": "2002-11-01T12:49:36Z", "creator": "jpettens@rochester.rr.com", "creation_time": "2002-11-01T12:49:36Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 14059, "is_private": false, "text": "Testing with IE and your example does work fine. You should try to see what is\nhandled differently which causes the different result.\nI don't think there's any bug here ...", "id": 25642, "time": "2002-11-04T21:14:55Z", "creator": "remm@apache.org", "creation_time": "2002-11-04T21:14:55Z", "attachment_id": null}, {"count": 6, "tags": [], "creator": "jpettens@rochester.rr.com", "attachment_id": null, "id": 25651, "time": "2002-11-04T23:50:56Z", "bug_id": 14059, "creation_time": "2002-11-04T23:50:56Z", "is_private": false, "text": "Remy,  I'm open to looking at the Server code to see what is different.  So the\nclient code I am executing does not receive the first character in TC4.1.12\nuntil the sleep() in the server has expired.   As I'm thinking now, I will try\nIE and Mozilla again and trace the conversation on the wire to see if IE sends\nthe request with different HTTP parameters.  Something is different...\n\nThanks for your time. -j.p."}, {"count": 7, "tags": [], "bug_id": 14059, "is_private": false, "text": "If you have doubts, try with a telnet. It will display very clearly which bytes\nare returned, and at what time.\n\nGET /myservlet HTTP/1.1\nHost: localhost:8080", "id": 25656, "time": "2002-11-05T06:53:00Z", "creator": "remm@apache.org", "creation_time": "2002-11-05T06:53:00Z", "attachment_id": null}, {"count": 8, "tags": [], "bug_id": 14059, "is_private": false, "id": 25699, "attachment_id": null, "creator": "jpettens@rochester.rr.com", "creation_time": "2002-11-05T16:03:18Z", "time": "2002-11-05T16:03:18Z", "text": "Remy,\n\nIn Summary:\n\nThere is a difference in behavior of when TC4.0.x and Tc4.1.12 sends the end of \nchunk message for a response.  TC4.0.x sends an end of chunk immediately \nfollowing the stream close() in a servlet response.  TC4.1.12 does not send the \nend of chunk message until the servlet exits its DoPost method.\n\nOn the client side, the sun java.net implementation does not return a stream \nfrom the getInputStream() method until it receives the end of chunk message on \nthe wire.  Hence, my \"issues\".  It looks like the browsers have access to \nintermediate chunks.  Which is why you don't see any issue.\n\nIn conclusion,  TC behavior HAS changed;  Is it a bug?  Depends on who you \nask... I think the behavior change should be at least clearly documented on the \nTC docs if it is NOT determined to be a bug.  However, I do not think the \nclose() is being handled correctly.  It is not being handled in the manner it\nhas been in previous TC releases.\n\nI would like to hear your view on this issue.\n\nThanks,\n\n-j.p."}, {"count": 9, "tags": [], "bug_id": 14059, "text": "The bug report was very inaccurate. Try not to use the JDK HTTP client if you\nwant to use advanced functionality.\nI've added a patch to finish the response when the stream or writer is closed,\nand this will be included in Tomcat 4.1.15 unless testing reveals it causes\nproblems.", "id": 25756, "time": "2002-11-06T09:33:35Z", "creator": "remm@apache.org", "creation_time": "2002-11-06T09:33:35Z", "is_private": false, "attachment_id": null}, {"count": 10, "tags": [], "bug_id": 14059, "text": "Remy, Thank you.  Sorry for not being more concise out of the gate.  It has been \na learning process all around.  Over the past few days working the issue, I have \nfound that using the JDK http client is not the correct way to go.  I have \nstarted testing the Jakarta httpclient.  I pulled the last nightly build down. \nIt handles the chunking issue fine. ", "id": 25764, "attachment_id": null, "creator": "jpettens@rochester.rr.com", "creation_time": "2002-11-06T11:51:51Z", "time": "2002-11-06T11:51:51Z", "is_private": false}]