[{"count": 0, "tags": [], "creator": "surfer97301@yahoo.com", "attachment_id": null, "is_private": false, "id": 78129, "time": "2005-08-04T22:42:47Z", "bug_id": 36033, "creation_time": "2005-08-04T22:42:47Z", "text": "Looking at the duplicate class the values are actually preserve, fail and add.\n\nIs there a way to on a duplicate have jar overwrite the current file with the\nnew file?  There does not seem to be a way to do this.\n\n\n/**\n     * Sets behavior for when a duplicate file is about to be added -\n     * one of <code>keep</code>, <code>skip</code> or <code>overwrite</code>.\n     * Possible values are: <code>keep</code> (keep both\n     * of the files); <code>skip</code> (keep the first version\n     * of the file found); <code>overwrite</code> overwrite the file\n     * with the new file\n     * Default for zip tasks is <code>keep</code>\n     */\n    public void setDuplicate(Duplicate df) {\n        duplicate = df.getValue();\n    }"}, {"id": 90874, "tags": [], "bug_id": 36033, "attachment_id": null, "count": 1, "text": "1. fixed the javadoc. thank you!\n2. no, nothing to overwrite. It sort of comes for free with update=true, in\nwhich the zip/jar is updated. the duplicates policy is really there to deal with\nwhat happens when a <zip> task has multiple filesets pulling in the same file, eg.\n\n<zip>\n <fileset file=\"1.xml\" />\n <fileset file=\"1.xml\" />\n</zip>\n\nthat's when the duplicate policy comes in to play. \n\nHope this helps, closing as fixed.\n", "time": "2006-07-04T21:00:00Z", "creator": "stevel@apache.org", "creation_time": "2006-07-04T21:00:00Z", "is_private": false}]