[{"count": 0, "attachment_id": null, "creator": "lippard@discord.org", "text": "I run my local machine with a hardware time of GMT and a local time of\nUS/Arizona (Mountain Standard), which is GMT -7.\n\nWhen I generate a new CRL, the time in the CRL for last update and no update is\nin GMT.  Output from openssl crl -text -noout -in crl.pem shows:\n\n        Last Update: Oct 30 17:21:57 2002 GMT\n        Next Update: Nov 29 17:21:57 2002 GMT\n\nfor a CRL created at 10:21:57 MST on October 30.  However, mod_ssl says all\nclient certificates are invalid until 17:21:57 MST:\n\n[Wed Oct 30 15:14:01 2002] [warn] Found CRL is expired - revoking all\ncertificates until you get updated CRL\n[Wed Oct 30 15:14:01 2002] [error] Certificate Verification: Error (12): CRL has\nexpired\n[Wed Oct 30 15:14:01 2002] [error] Re-negotiation handshake failed: Not accepted\nby client!?\n\nmod_ssl seems to be taking the CRL date as MST instead of GMT.\n\n(System is OpenBSD 3.1.)", "id": 25400, "time": "2002-10-30T22:30:08Z", "bug_id": 14104, "creation_time": "2002-10-30T22:30:08Z", "tags": [], "is_private": false}, {"count": 1, "tags": [], "creator": "lippard@discord.org", "attachment_id": null, "is_private": false, "id": 25411, "time": "2002-10-31T04:23:33Z", "bug_id": 14104, "creation_time": "2002-10-31T04:23:33Z", "text": "I've misdiagnosed the problem.  The issue is not a time zone discrepancy, the\nissue appears to be that the server needs to be restarted in order to load the\nnew CRL, similar to the need to restart to load a new server certificate.  This\nis somewhat less intuitively obvious for the CRL than for the server certificate.\n\nIs this documented anywhere?"}, {"attachment_id": null, "tags": [], "bug_id": 14104, "text": "The server needs to be restarted for just about any change to take effect. It's\nnot clear that this is explicitly documented anywhere, and I'm not really sure\nwhere that information should be placed where it would be effective. Any change\nof configuration requires a server restart. This is not SSL specific. Perhaps an\nentry in the FAQ is warranted? Thoughts?", "count": 2, "id": 67338, "time": "2004-11-22T15:04:39Z", "creator": "rbowen@apache.org", "creation_time": "2004-11-22T15:04:39Z", "is_private": false}, {"count": 3, "tags": [], "creator": "rob@netpaver.com.au", "text": "I would actually like to see some way of enabling/forcing Apache to re-read the\ncrl file episodically.\n\nThis could either be based on the \"next update\" field within the CRL itself, or\nmore flexibly, some interval specified in a new mod_ssl Directive.  I favour the\nlatter as basing it on the \"next update\" field in the CRL raises issues about\nwhat to do once that date/time has passed and the CRL file has not been updated.", "id": 67446, "time": "2004-11-25T07:58:45Z", "bug_id": 14104, "creation_time": "2004-11-25T07:58:45Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 14104, "text": "Reclassified as a feature request against mod_ssl. Thanks for the suggestion.", "id": 69003, "time": "2004-12-26T22:30:07Z", "creator": "rbowen@apache.org", "creation_time": "2004-12-26T22:30:07Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 14104, "attachment_id": null, "text": "Periodically reloading the CRL file from within httpd does not really sound\nfeasible (would you re-load and reparse it in each child? what if the children\ngot out of synch? what if the re-load failed? what about thread-safety issues\nsince the CRL is stored in the server-global config structure).\n\nIf the CRL changes relatively infrequently over time, you could cron a\n(graceful) restart to pick up changes.  If it is updated so frequently that\nrestarting to pick up changes is not practical, you need OCSP (or something like\nit).\n\n-> WONTFIX", "id": 69843, "time": "2005-01-19T14:46:09Z", "creator": "jorton@redhat.com", "creation_time": "2005-01-19T14:46:09Z", "is_private": false}, {"count": 6, "attachment_id": null, "creator": "tlhackque@yahoo.com", "text": "I, too have been tripped up by this.  Please reconsider.\n\nIt seems to me that the current behavior is undesirable, and that the problems \njoe raises are all soluble.  The CRL is unlike other configuration changes; it \nhas a expiration date and is expected to require periodic refresh.\n\nI update my crl daily with a lifetime of several days - more on general \nprinciples than because it's highly volatile.  However, if something bad \nhappens, I'd like a reasonable latency till the crl is refreshed.\n\nI agree that polling \"just in case\" could a lot of extra synchronization, and \nis probably overkill.\n\nBut it does not seem friendly or robust to have apache stop service when it \nknows what's wrong & the data it needs is sitting on the disk where the config \nfile says it is.\n\nApache seems to have sufficient synchronization to \"revoke all certificates \nuntil you get updated CRL\".  It also has sufficient smarts to do a graceful \nrestart.\n\nSo, why not do this:\n\nWhen a thread finds that the CRL is out of date, it synchronizes on a CRL \nupdate lock.  Under that lock, it looks to see if there's a new CRL.  If there \nis, it schedules a graceful restart, placing the request that detected the \nproblem back on the service queue.  The request will be picked up by the new \ngeneration of the configuration DB after the restart.\n\nThis way, the update only happens when there is a problem; existing mechanisms \nare used.  The only delay is to the requests at time of crl expiration.  And by \nadjusting the expiration time, an administrator can minimize the impact.\n\nThe work-around of apachectl -k graceful in the crl rebuild script should work \non a single system, single server.  But in a more interesting environment (say, \nmultiple systems with the crl on a networked disk), it's a lot more work.\n\nBut at an absolute minimum, update the documentation for the \nSSLCARevocationFile directive to indicate that a restart is required when the \nfile changes.  As an experienced system manager, but new to apache, it was by \nno means obvious to me.\n\n", "id": 84624, "time": "2006-01-14T01:59:47Z", "bug_id": 14104, "creation_time": "2006-01-14T01:59:47Z", "tags": [], "is_private": false}, {"count": 7, "tags": [], "bug_id": 14104, "text": "Hi All,\n\nI have also the same problem.\n\nYou seems to forget the exact role of a CRL. \nRemember : CRL X509 format is a list of Revoked Certificates. Thus, the goal \nhere is to stop the access to someone that has a revoked certificates.\n\nFor a security point of view, waiting until the CRL Expiration date is not a \ngood solution (can be 2 days or more). You put your business at risk. In fact, \nAccording to some PKI Policies (CSP - Cerificate Security Policies), depending \nof your working environment, (as in my case), the Revoked certificates must be \nblocked maximum 10 seconds after the effective revoke. Thus in my case, soon as \nthe CRL has been updated, you have to reload it, and to block any access. This \nis not only special to my case, any companies (like insurrance,financial, ...) \nhas these types of rules.\n\nMore : A crl, on our case is published every 30 min, even if no revoke occurs \n(to avoid overwritte of our CRL and ensure that all chains is working). or \nimmediately after a revoke. His expiration date (next update) is at least 48 \nhours (this is only for business continuity, to have time to make intervention \nin  case of CRL distribution problem or whatever).\n\nMore : We are also using Appliance Reverse proxy hardware, XML security \nGateway, Software Application Firewall Hardware. All of them has these types of \nfeature about the CRL. It load it, else based on a regular verification time \n(ie every 5 seconds), or immediatly after it detects the change. It's depends \nof the product. Why this will be different in Apache ? IIS of microsoft is \nworking also like that.\n\nRegards\n\n\n\n\n", "id": 89388, "time": "2006-05-23T12:58:13Z", "creator": "benoit.lejeune@brutele.be", "creation_time": "2006-05-23T12:58:13Z", "is_private": false, "attachment_id": null}, {"attachment_id": null, "tags": [], "creator": "steve@openssl.org", "is_private": false, "count": 8, "id": 111425, "time": "2007-12-04T09:20:48Z", "bug_id": 14104, "creation_time": "2007-12-04T09:20:48Z", "text": "I agree that reloading of CRLs when necessary is a highly desirable feature.\n\nOpenSSL 0.9.9 does have some improved CRL support but adding generic reloading\nto cover all cases into OpenSSL isn't really practical. OpenSSL 0.9.8 doesn't\nhave reloading support but its handling isn't as broken as mod_ssl manual CRL\nhandling.\n\nAs a general solution there are several options.\n\nOne is to run a local OCSP responder which makes use of CRLs to provide\nrevocation information. Then mod_ssl can determine certificate status over OCSP\nand the responder can deal with CRLs in an appropriate manner. I did write such\na responder for a similar situation but never got round to getting the\nimplementation into a publicly usable form.\n\nAnother option is to have a database of CRL information in mod_ssl. A bit like\nthe session cache but for revocation information. Note that I say \"revocation\ninformation\" as opposed to storing full CRLs because CRLs can be quite large and\ndecoding on each use is a considerable overhead. It is better to just store the\nset of revoked certificates serial numbers (CRL entries) and have a lookup \nmechanism which each thread could use.\n"}, {"count": 9, "tags": [], "creator": "grzegorz.dulny@comp-css.pl", "attachment_id": 22109, "is_private": false, "id": 117571, "time": "2008-06-11T06:44:48Z", "bug_id": 14104, "creation_time": "2008-06-11T06:44:48Z", "text": "Created attachment 22109\nAutomatically reload CRL when the previous one expires and a new one is available\n\nWith this patch applied, Apache will reload a certificate revocation list (CRL) file, when\n* previous CRL, stored in memory expired\n* a new CRL file is available (based on file mtime)\n\nIt only works with CRLs loaded with SSLCARevocationFile, but if there's interest, I'll extend it to support SSLCARevocationPath as well.\n\nIt doesn't require any additional options; Apache's behavior will not change if you don't supply fresh CRLs. If you do, it will automagically reload them when needed."}, {"count": 10, "tags": [], "creator": "apache_bugzilla@valgronda.com", "attachment_id": null, "is_private": false, "id": 138714, "time": "2010-07-28T13:51:55Z", "bug_id": 14104, "creation_time": "2010-07-28T13:51:55Z", "text": "I've tested the from Comment #9 against httpd 2.2.15\n\nI'm having here a setup with multiple sub-CAs (each with its own CRL) - and could successfully login with revoked certs from the sub-CAs after the patch above was applied.\n\nSo, this patch seems to have following bug:\nIf you have multiple CRLs within one file the patch only loads the first one."}, {"attachment_id": null, "tags": [], "creator": "tlhackque@yahoo.com", "is_private": false, "count": 11, "id": 151703, "time": "2011-11-21T17:05:01Z", "bug_id": 14104, "creation_time": "2011-11-21T17:05:01Z", "text": "Still interested in this.\n\nI'd like to see the patch in comment 9 work with revocationpath, and the multiple CA bug reported in comment 10 fixed as well.\n\n9 years after this was first reported, X.509 certificates are even more important...and CRLs are part of the support.  \n\nI still consider the current behavior a bug, not a new feature since httpd is ignoring the CRL's expiration date."}, {"count": 12, "tags": [], "bug_id": 14104, "text": "This just bit me today. I'm using client-certificate authentication on a web server that I admin for my company, and yesterday I had to revoke one of the certificates due to a termination of an employee, and today I decided to verify that the revocation actually worked by temporarily revoking my own certificate, and surprise(!), I was still able to authenticate to the site. I had to reload Apache before it would reject my authentication. This is not the behavior I expected. It's not as though the contents of the CRLs is conceptually being \"included\" into the configuration like a modular config file would be; no, the CRL is a piece of volatile data that the configuration *references*, and the server needs to notice when the file changes. At the very least, the Apache mod_ssl documentation needs to note that any changes to the CRL files at SSLCARevocationPath will require a reload of the server configuration in order to take effect. This could have been disastrous if I hadn't thought to double check that Apache was actually rejecting the revoked certs.", "id": 159637, "time": "2012-06-02T01:38:58Z", "creator": "apache@mattwhitlock.name", "creation_time": "2012-06-02T01:38:58Z", "is_private": false, "attachment_id": null}, {"count": 13, "tags": [], "text": "I would also like to see the patch in Comment 9 implemented in standard code. I agree with Comment 12 that this is ancillary information and should NOT require a restart when the CRL file is modified. It is an unnecessary and error prone extra step.", "is_private": false, "bug_id": 14104, "id": 168431, "time": "2013-07-09T19:14:24Z", "creator": "tim@possibilogy.com", "creation_time": "2013-07-09T19:14:24Z", "attachment_id": null}, {"count": 14, "tags": [], "bug_id": 14104, "is_private": false, "text": "Please rate the comments related to this on http://httpd.apache.org/docs/2.4/en/mod/mod_ssl.html#comment_3344 for updating the documentation, at least.", "id": 182882, "time": "2015-05-07T20:23:35Z", "creator": "hablutzel1@gmail.com", "creation_time": "2015-05-07T20:23:35Z", "attachment_id": null}]