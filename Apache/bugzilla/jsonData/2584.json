[{"count": 0, "tags": [], "bug_id": 2584, "is_private": false, "text": "It would be nice to have a dependency on multiple properties, something like\n\n<target name=\"A\" if=\"a,b\">\n\nJustification is simple: a module that has more than one dependency. Consider\nthis:\n\n<target name=\"check_modules\"/>\n\n    <available classname=\"javax.management.loading.DefaultLoaderRepository\"\n               classpath=\"${JMXRI.jar}\"\n               property=\"JMXRI.present\"/>\n\n    <available classname=\"com.sun.jdmk.comm.Enumerated\"\n               classpath=\"${JMXTOOLS.jar}\"\n               property=\"JMXTOOLS.present\"/>\n\n</target>\n\n<target name=\"JMX_support\"\n        depends=\"check_modules\"\n        if=\"JMXRI.present,JMXTOOLS.present\">\n\n</target>\n\nThe JMX_support is never executed, nor the error message is given, because\n\"JMXRI.present,JMXTOOLS.present\" is taken literally as a property name.\n\nThe fix is simple, question is: has this issue been brought up before and\nrejected or implemented in one of the branches? If not, I can submit the patch.", "id": 3653, "time": "2001-07-11T11:57:58Z", "creator": "vadim.tkachenko@silverline.com", "creation_time": "2001-07-11T11:57:58Z", "attachment_id": null}, {"count": 1, "tags": [], "text": "Yes, it has been requested and declined more than once, hust search the mailing\nlist archives.\n\nThere are several reasons to not do it - at least not the way you describe it.\nOne of the biggest reasons IMHO is that using comma as a separator is highly\nambiguous - do you want to AND or to OR the two existance of the two properties?\nIn your case, AND is the answer, but there are several valid use-cases for OR.\nUsing || and && would be too Java/C centric for easy build files and would sure\nlead us down a road where target and include and .... have to support the whole\nslew of operators scripting languages support (you'll sure need test for\nin/equality, comaparisons, set membership ...) - if not you, someone else is\ngoing to request it.\n\nWhat we have projected for Ant2 is a <condition> task and it may very well be\navailable in the Ant1 series - view this as \"available-enhanced\", you would do\nsomething like\n\n<condition property=\"jmx.supported\">\n  <and>\n    <available class=\"javax.management.loading.DefaultLoaderRepository\" />\n    <available class=\"com.sun.jdmk.comm.Enumerated\" />\n  </and>\n</condition>\n\nwhich moves the logic into a single task or the custom conditions that can\nbe children of that task.", "attachment_id": null, "id": 3661, "creator": "bodewig@apache.org", "time": "2001-07-11T23:10:51Z", "bug_id": 2584, "creation_time": "2001-07-11T23:10:51Z", "is_private": false}, {"count": 2, "tags": [], "creator": "jan@materne.de", "attachment_id": null, "id": 83062, "time": "2005-12-01T06:54:23Z", "bug_id": 2584, "creation_time": "2005-12-01T06:54:23Z", "is_private": false, "text": "*** Bug 37726 has been marked as a duplicate of this bug. ***"}, {"count": 3, "tags": [], "creator": "opldupuy@gmail.com", "attachment_id": null, "is_private": false, "id": 99635, "time": "2007-02-21T11:40:24Z", "bug_id": 2584, "creation_time": "2007-02-21T11:40:24Z", "text": "See my pot 37726 \nhttp://issues.apache.org/bugzilla/show_bug.cgi?id=37726\n\nThe solution proposed below using condition is fine and you can use \nand/or/xor.... but it is heavy weight.\nImplement this condition but do it but in addition of upgrading if/unless\n  there is no big ambiguity at saying that if works with AND and unless with OR \nor any other standard. If the user is not happy with it, he can stil use the \nmore powerful and cumbersome condition"}]