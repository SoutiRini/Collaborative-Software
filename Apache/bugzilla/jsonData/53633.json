[{"count": 0, "tags": [], "bug_id": 53633, "attachment_id": null, "text": "A Realm defined within a Host should be shared with all webapps within that Host when using SSO, EXCEPT for webapps that define their own Realm. This kinda works, but the specific Realm defined within a nested Context seems to be shared also. (No new challenge for authentication is presented.)\n\nExample (server.xml):\n<Host>\n<Realm className=\"...JDBCRealm\" />\n\n<Valve className=\"org.apache.catalina.authenticator.SingleSignOn\" />\n\n<Context path=\"/manager\" privileged=\"true\">\n<Realm className=\"org.apache.catalina.realm.UserDatabaseRealm\" resourceName=\"UserDatabase\"/>\n</Context>\n\n</Host>\n\nIn this scenario the webapps that use the shared JDBCRealm use FormAuthentication.The manager webapp uses BasicAuthentication of course. Now once a user has logged in with the manager webapp the user is also authenticated for all other webapps. The reverse scenario does seem to work somewhat better. Once a user has logged in with any other webapp than manager, accessing the manager webapp yields a http 403 status. As if there was no user database defined for the manager app. Are Principals cached in a central location perhaps?", "id": 161036, "time": "2012-07-31T20:37:48Z", "creator": "dverbeek@hotmail.com", "creation_time": "2012-07-31T20:37:48Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 53633, "attachment_id": null, "id": 161161, "time": "2012-08-07T21:38:00Z", "creator": "markt@apache.org", "creation_time": "2012-08-07T21:38:00Z", "is_private": false, "text": "As per the docs, if you use SSO all contexts must use the same Realm. The behaviour is undefined if you don't follow that requirement."}, {"count": 2, "tags": [], "bug_id": 53633, "attachment_id": null, "id": 161337, "time": "2012-08-13T13:39:14Z", "creator": "dverbeek@hotmail.com", "creation_time": "2012-08-13T13:39:14Z", "is_private": false, "text": "(In reply to comment #1)\n> As per the docs, if you use SSO all contexts must use the same Realm. The\n> behaviour is undefined if you don't follow that requirement.\n\nLooking back at it, I cannot believe I missed that.\n\nSo just to be clear, especially for everybody stumbling upon the same issue, there are two options to make it work as expected:\n\n1 - Include the proper role for the manager webapp in the SSO-Realm. This integrates the manager webapp with your own webapps. Vulnerabilities included.\n2 - Create a separate Service/Connector/Engine/Host/Realm for the manager webapp.\n\n<Service name=\"Catalina\">\n...\n</Service>\n\n<Service name=\"manager\">\n  <Connector port=\"8081\" protocol=\"HTTP/1.1\" connectionTimeout=\"20000\" />\n   <Engine name=\"Manager\" defaultHost=\"manager\">\n      <Host name=\"manager\" appBase=\"webapps\"\n        unpackWARs=\"true\" autoDeploy=\"true\"\n        xmlValidation=\"false\" xmlNamespaceAware=\"false\">\n        \n        <Realm className=\"org.apache.catalina.realm.UserDatabaseRealm\"\n          resourceName=\"UserDatabase\"/>\n          \n    </Host>\n  </Engine>\n</Service>"}, {"count": 3, "tags": [], "text": "(In reply to comment #2)\n> 2 - Create a separate Service/Connector/Engine/Host/Realm for the manager\n> webapp.\n> \n\n2 is a limited workaround, because the Manager webapp manages only the Host to which it belongs.\n\nIt seems that you are creating two hosts which share the appbase directory. \nIt will work only if the main host is configured with autoDeploy=true.\nUploading a new war file will work. Undeploying is likely to work as well.\nYou will not be able to properly stop/start your applications (but only their copies in this \"manager\" host).", "attachment_id": null, "id": 161354, "creator": "knst.kolinko@gmail.com", "time": "2012-08-13T23:08:46Z", "bug_id": 53633, "creation_time": "2012-08-13T23:08:46Z", "is_private": false}, {"count": 4, "tags": [], "creator": "dverbeek@hotmail.com", "attachment_id": null, "id": 161458, "time": "2012-08-16T10:56:49Z", "bug_id": 53633, "creation_time": "2012-08-16T10:56:49Z", "is_private": false, "text": "(In reply to comment #3)\n> 2 is a limited workaround, because the Manager webapp manages only the Host\n> to which it belongs.\n\nConclusion: Formally using the manager webapp with the provided Realm is mutually exclusive from using SSO with its own Realm. Maybe this is a good thing to explicitly mention in the documentation at the SSO Valve."}]