[{"count": 0, "attachment_id": null, "bug_id": 49848, "text": "As per suggestion on fop-users@, entering an issue:\n\nI am trying to prevent a line from breaking, so I wrapped it inside a \n<fo:inline keep-together.within-line=\"always\">...</fo:inline>. This works as \nlong as the line is a plain text, but does not work if there is a nested \nfo:inline. In that case, the line breaks at the nested fo:inline.\n\nHere is a FO snippet:\n\n===========================\n<fo:inline keep-together.within-line=\"always\">very long and nasty \n<fo:inline/>line that should not probably wrap unless somebody is using a \nnested fo inline <fo:inline/> which allows this line to wrapping \naround<fo:inline/> even though it should not</fo:inline>\n===========================\n\nI am using FOP 0.95, packages from Ubuntu 10.04.", "id": 139571, "time": "2010-08-31T02:35:46Z", "creator": "stilor@att.net", "creation_time": "2010-08-31T02:35:46Z", "tags": [], "is_private": false}, {"count": 1, "tags": [], "creator": "adelmelle@apache.org", "attachment_id": null, "text": "\nStudying this issue closer, it seems to originate in TextLM, line 708:\n...\n        } else if (inWhitespace) {\n            processWhitespace(alignment, sequence, true);\n...\n\nThe literal 'true' means that when finishing the TextLM element list, it is assumed that there is always supposed to be a break opportunity at the end, while in reality, this obviously depends...\n\nUsing a literal 'true' as parameter value, we get a sequence of Glue-Penalty-Glue for the space before the nested inline. This produces a break opportunity that is used by the LineBreakingAlgorithm.\n\nUsing '!keepTogether' instead, produces only an auxiliary box in this case and seems to resolve it.", "id": 143172, "time": "2011-01-07T07:38:42Z", "bug_id": 49848, "creation_time": "2011-01-07T07:38:42Z", "is_private": false}, {"count": 2, "tags": [], "creator": "adelmelle@apache.org", "attachment_id": null, "text": "\nFixed in Trunk. See: http://svn.apache.org/viewvc?rev=1056945&view=rev", "id": 143219, "time": "2011-01-09T09:43:16Z", "bug_id": 49848, "creation_time": "2011-01-09T09:43:16Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 49848, "is_private": false, "text": "batch transition to closed; if someone wishes to restore one of these to resolved in order to perform a verification step, then feel free to do so", "id": 155478, "time": "2012-04-01T06:18:20Z", "creator": "gadams@apache.org", "creation_time": "2012-04-01T06:18:20Z", "attachment_id": null}]