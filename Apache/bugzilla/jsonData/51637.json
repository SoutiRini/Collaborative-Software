[{"count": 0, "tags": [], "bug_id": 51637, "text": "If we need to have deeper integration with the web container security, then there is a need to extend the default Tomcat Authenticators.  This is what we have done in project PicketLink where we bring SAML based Web Browser SSO to Tomcat Applications.\n\nAs highlighted by our user in http://community.jboss.org/thread/170430?tstart=0,  there is a JVM byte code verification error now that the Lifecyclebase.start() method has been made final.\n\nThis affects all valves/authenticators users are going to write. The start() method is usually overriden such that the valve/authenticator can do initialization before they are started via super.start().", "id": 148501, "time": "2011-08-09T11:55:17Z", "creator": "anilsaldhana@gmail.com", "creation_time": "2011-08-09T11:55:17Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 51637, "text": "For Tomcat 7, you should be overriding startInternal(), not start().", "id": 148502, "time": "2011-08-09T12:10:06Z", "creator": "markt@apache.org", "creation_time": "2011-08-09T12:10:06Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "creator": "anilsaldhana@gmail.com", "attachment_id": null, "text": "Basically you are saying we cannot port code that was working in TC55 and TC6.  Now we need to write a fresh set of authenticator for TC7?", "id": 148503, "time": "2011-08-09T12:17:34Z", "bug_id": 51637, "creation_time": "2011-08-09T12:17:34Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 51637, "text": "In short, yes.\n\nThe longer version is that prior to Tomcat 7 the Lifecycle interface was loosely defined, largely optional and inconsistently implemented with large quantities of almost but not quite duplicate code. The code wasn't unmaintainable but it was a lot harder to maintain than it should have been. The inconsistencies in things like component start/stop and JMX registration of components was also causing problems.\n\nAs part of the wider code clean-up for Tomcat 7 the Lifecycle interface was more tightly defined - particularly the permitted state transitions - and made non-optional for most internal components. Most (all?) of those components all extend LifecycleMBeanBase which ensures that MBean registration and de-registration happens at the correct point. It also ensures that components that extend correctly implement Lifecycle both in terms of the allowed state transitions and the firing of associated events. A side effect of this is that custom code that extends these components must override different methods.\n\nAPI changes are going to happen between major versions. They aren't made for the sake of it but neither are they avoided. It may be as simple as overriding a different method but you may find that other changes are required as well. It depends on exactly what the custom component is doing.\n\nAs an aside, initialisation should be happening in init() not start() which probably means overriding initInternal().", "id": 148505, "time": "2011-08-09T12:46:25Z", "creator": "markt@apache.org", "creation_time": "2011-08-09T12:46:25Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 51637, "attachment_id": null, "id": 148508, "time": "2011-08-09T13:23:03Z", "creator": "anilsaldhana@gmail.com", "creation_time": "2011-08-09T13:23:03Z", "is_private": false, "text": "Thanks Mark, for the explanation. We will write a fresh set of authenticators for TC7 derived code."}]