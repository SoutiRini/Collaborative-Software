[{"count": 0, "tags": [], "text": "Hi\n\nI run into a problem which to do with the handling of SSL certificates which I\nbelieve is a bug.  In a nutshell, the certificate info from the _default:443_\nvhost is \"leaking\" onto the vhost bound to the machine's primary IP address (ie.\neth0). This is not happening on secondary IP addresses, including IP aliases\nattached to eth0.\n\nNow for specifics:\n\nI'm using RedHat 4 which uses Apache 2.0.52, running under VMWare ESX 3.\nThe server has 2 NICs, and eth0 has a couple of IP aliases (ie. eth0:1, eth0:2)\n\nThe default RH config file (/etc/httpd/conf/httpd.conf) has the \"Listen 80\"\noption, and uses the \"Include\" directive to include all the files matching\n/etc/httpd/conf.d/*.conf.\n\nOne of these files is /etc/httpd/conf.d/ssl.conf,  which defines a virtual host\n\"_default_:443\".  This vhost references the files\n/etc/httpd/conf/ssl.key/{server.key and server.crt}  (which are supplied by\ndefault and identify the host name as \"localhost.localdomain\").  The ssl.conf\nfile also has a \"Listen 443\" directive. \n\nIf I access any of the https sites on any of the machines IP addresses, I get\nthe _default:443_ certificate and the pages which are referenced under the\n_default:443_ vhost's DocumentRoot.  This is what is to be expected.\n\n\nI've edited /etc/httpd/conf/httpd.conf and the last lines are now:\n    Include /etc/local/httpd/conf.d/*.conf\n    Include /etc/local/httpd/conf.d/vhosts/*.conf\n\nThe /etc/local/httpd/conf.d files are generic settings for the whole server, the\n\"vhosts\" sub-directory contains a separate config file for each vhost.  The\nvhost files are pretty standard, along the lines of:\n\n<VirtualHost    a.b.c.d:443>\n        ServerName      myserver.domain.org\n        CustomLog       /var/log/httpd/servername-ssl/access_log  combined\n        ErrorLog        /var/log/httpd/servername-ssl/error_log\n\n        DocumentRoot    /data/vhosts/servername-ssl/html\n\n        SSLEngine               On\n        SSLCertificateKeyFile\n\"/data/vhosts/servername-ssl/conf/myserver.domain.org.key\"\n        SSLCertificateFile\n\"/data/vhosts/servername-ssl/conf/myserver.domain.org.crt\"\n\n        Include                 /data/vhosts/servername-ssl/conf.d/*.conf\n</VirtualHost> \n\nOk.  Here's where it gets weird.  \n\nIf the IP address in the above vhost is the machine's primary address (ie.\neth0), then when I access it, I get the \"localhost.localdomain\" certificate.\nThis seems to have leaked from _default:443_ vhost.  \nHowever the data served is from the above vhost's DocumentRoot, (not from\n_default:443_'s). And the request is logged to the log file specified in the\nabove vhost.   So Apache is definitely finding this vhost, and using it, except\nfor the certificate data.\n\nNow if I change the IP address in vhost to any of the host's other IP addresses,\nthen everything works as it should - it returns the vhost's certificate, uses\nthe vhost's document data and logs to the vhost's log file.\n\nI initially had \"NameVirtualHost a.b.c.d:443\" options in the vhost config files,\nbut I commented them out.  \nI've tried specifying multiple vhosts, listening on eth0 and other addresses, or\nonly on other addresses.  I've tried changing the load order and so on, but it\nhasn't affected this. The results are consistent. The only problem I can find is\nwhen the address specified is eth0.  \n\nI apologise for the length of this report, but this is kind of hard to summarise\nconcisely.\n\ncheers\n/\\ndy", "attachment_id": null, "id": 105733, "creator": "bugzilla@business.uq.edu.au", "time": "2007-07-17T20:15:24Z", "bug_id": 42923, "creation_time": "2007-07-17T20:15:24Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 42923, "is_private": false, "id": 105741, "attachment_id": null, "creator": "covener@gmail.com", "creation_time": "2007-07-18T04:44:21Z", "time": "2007-07-18T04:44:21Z", "text": "you can't provide different certificates on two vhosts using the same ip:port\ncombination.\n\nWithout taking some extraordinary measures, forget about using SSL on name-based\nvhosts.\n\nhttp://wiki.cacert.org/wiki/VhostTaskForce"}, {"count": 2, "tags": [], "creator": "bugzilla@business.uq.edu.au", "text": "Hi Eric\n\nThank you for your response.\n\nHowever I am not using the same IP:port combo for different vhosts.  \nEach vhost is on a unique IP addresses.  Perhaps this was not entirely clear in\nmy original message.\n\n\nLet me attempt to spell this out further, with an Example.\n\nIf the machine has\n * eth0 configured as  a.b.c.1 \n * eth0:1 configured as a.b.c.100\n * eth0:2 configured as a.b.c.101\n\nIf Apache is running with the default RedHat default config - ie. with only the\n_default_:443 Vhost (and a Listen 443) -  then here's what I see\n\nhttps://a.b.c.1/  -> _default_:443 certificate, document root and logs.\nhttps://a.b.c.100/  -> _default_:443 certificate, document root and logs\nhttps://a.b.c.101/  -> _default_:443 certificate, document root and logs\n\nThis is correct behaviour in my opinion.  There is no specific match, so Apache\nuses _default_:443.\n\n\nOk.  I then make my own vhost, which is listening on a.b.c.1:443. \nLet's call this vhost \"V1\", to keep this next section readable.\n\nNote that this address is the address of the interface \"eth0\".\n\nI then try and access the web sites, and here's what I see this time:\n\nhttps://a.b.c.1/  -> _default_:443 certificate, but V1's document root and logs\nhttps://a.b.c.100/  -> _default_:443 certificate, document root and logs\nhttps://a.b.c.101/  -> _default_:443 certificate, document root and logs\n\nThe behaviour for  https://a.b.c.1/ is, IMHO, a bug.  I am getting the cert for\n_default_:443, not for the vhost I'm referring to as V1.\n\n\nOkay. Now lets CHANGE the IP address in the vhost config.   This means that\nthere are still only 2 vhosts, the _default_:443 one, and my locally added one.  \nExcept this time instead of a.b.c.1:443, my local vhost is on a.b.c.100:443.\nFor readability, let's call this version of my local Vhost \"V100\".  \n\nNote again, that this IP address corresponds to an IP alias, not eth0.\n\nhttps://a.b.c.1/  -> _default_:443 certificate, document root and logs.\nhttps://a.b.c.100/  -> V100's certificate, document root and logs\nhttps://a.b.c.101/  -> _default_:443 certificate, document root and logs\n\nEverything is fine.  This is what we should expect. \n\n\nOkay, so now I change the vhost over to IP address a.b.c.101, and try again. \nCall this vhost V101, for the sake of readability.\n\nhttps://a.b.c.1/  -> _default_:443 certificate, document root and logs.\nhttps://a.b.c.100/  -> _default_:443 certificate, document root and logs\nhttps://a.b.c.101/  -> V101's certificate, document root and logs\n\nAgain. This all seems fine.\n\n\nIf instead of one local vhost, I make 2; the ones I referred to as V100 and\nV101, then they both work fine.  The only one which does not work correctly, is\n\"V1\".\n\nI can change the order in which the vhosts are defined.  It makes no difference.\n\nAlthough Apache is serving the content from V1's DocumentRoot, and writing to\nV1's access log and error log, it does not present V1's Certificate. It only\never presents the cert from _default_:443.\n\nPerhaps I am mistaken, but I this to me is a bug.  \n\nI've tested this on multiple machines all running the same OS and httpd.  They\nhave different IP addresses.  The only thing which is common, is that cert for\n_default_:443 always leaks onto the vhost on eth0.  The other ethernet\ninterfaces (including IP aliases) are always fine.\n\nI hope that this helps clarify the situation.\n\ncheers\n/\\ndy\n", "id": 105766, "time": "2007-07-18T17:45:11Z", "bug_id": 42923, "creation_time": "2007-07-18T17:45:11Z", "is_private": false, "attachment_id": null}, {"text": "I see this bug is over 2 years old.\nI am having the same problem on Apache/2.2.15 (Win32).", "tags": [], "bug_id": 42923, "is_private": false, "count": 3, "id": 136671, "time": "2010-05-05T17:06:17Z", "creator": "yehuda+apache@ymkatz.net", "creation_time": "2010-05-05T17:06:17Z", "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 42923, "attachment_id": null, "is_private": false, "id": 136673, "time": "2010-05-05T17:48:39Z", "creator": "covener@gmail.com", "creation_time": "2010-05-05T17:48:39Z", "text": "(In reply to comment #3)\n> I see this bug is over 2 years old.\n> I am having the same problem on Apache/2.2.15 (Win32).\n\nIf you think you're suffering from a bug, include your verbatim httpd -S output, a snippet of your config, and describe which cert and content you see."}, {"count": 5, "tags": [], "bug_id": 42923, "is_private": false, "text": "(In reply to comment #4)\n> (In reply to comment #3)\n> > I see this bug is over 2 years old.\n> > I am having the same problem on Apache/2.2.15 (Win32).\n> \n> If you think you're suffering from a bug, include your verbatim httpd -S\n> output, a snippet of your config, and describe which cert and content you see.\n\nI am having a lot of trouble replicating this right now.\nSomeone decided to re-image the server we were having that problem with. I will need to go back and figure out what the buggy settings were.\n\nIn my initial comment, I thought I might save space by not describing the problem almost word for word from comment 2.\n(The only difference from that comment is the IPs, even though this is a Windows server, I will use the linux notation:)\neth0 -> 192.168.118.50\neth0:1 -> 192.168.118.52\neth0:2 -> 192.168.118.53\n\nI defined all of my SSL vhosts in C:\\Webserv\\Apache2.2\\conf\\extra\\httpd-vhosts.conf\n\nDNS:\nmyserver.domain -> 192.168.118.50\nsite1.domain -> 192.168.118.50\nsite2.domain -> 192.168.118.52\nsite3.domain -> 192.168.118.53\n\nhttps://*.domain (with no vhosts) -> cert and content of __default__:443\nvhosts for site2 and site3 work fine\nhttps://site1.domain -> cert of vhost __default__:443 and content of vhost site1.domain:443\n\nI will supply the rest as soon as I can get it.", "id": 136678, "time": "2010-05-06T00:11:07Z", "creator": "yehuda+apache@ymkatz.net", "creation_time": "2010-05-06T00:11:07Z", "attachment_id": null}]