[{"count": 0, "tags": [], "bug_id": 29726, "attachment_id": null, "id": 59688, "time": "2004-06-21T19:55:39Z", "creator": "serval2412@yahoo.fr", "creation_time": "2004-06-21T19:55:39Z", "is_private": false, "text": "I've had this error today so i've cleared the directory where there are all the\nlogs, it's worked.\nSo i tried to reproduced the pb by doing this :\n- change the windows date (2 days before)\n- create a log file in the log directory (with a name used by an appender)\n- change the windows date (normal date)\n- i start the server on wsad (5.1.1) and retry a log test -> error\n\ni use Windows 2000 sp4 with wsad 5.1.1 fix 003, log4j 1.2.8 (not modified)\n\nAny ideas ?"}, {"count": 1, "tags": [], "bug_id": 29726, "text": "This is definitely a \"bug\" in the java.io.File.renameTo() method.\n\nSun think they have closed this problem in J2SE 5.0 (4167147) by changing the\nspecification!!! Not much help to those of us in the real world, because they do\nnot provide an alternative method.\n\nI've encountered the same symptoms with my webapp running under Tomcat on\nWin2kServer, WinNT4 and OS2. All 3 have \"lazy write\" file systems and seem to\nrefuse the rename of the closed file becaase \"it is busy\". I've not encountered\nthe same symptoms running my other log4j applications that do not use Tomcat,\nbut perhaps I've just been lucky so far?\n\nThere is a good workaround under the duplicate bug 13021. However, this\nworkaround does not take account of the fact that BOTH DailyRollingFileAppender\nand RollingFileAppender (and others?) use java.io.renameTo(). We need a more\ngeneralised solution.\n\nI've coded a new \"utility\" superclass instance method\nFileAppender.safeRenameTo(String newName) based on the copy-and-zap-original\nstrategy proposed in bug 13021. I've also coded changes to\nDailyRollingFileAppender and RollingFileAppender to use the new utility method.\nHowever, I don't like the change to RollingFileAppender because it copies every\n\"old\" log file to its new name... but at least it is safe!\n\nI'm happy to donate my changes, provided the committer for these classes thinks\nthey are worth consideration. Please let me know.\n\n\n", "id": 67543, "time": "2004-11-29T15:22:15Z", "creator": "Brian@PingToo.com", "creation_time": "2004-11-29T15:22:15Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 29726, "text": "*** Bug 13021 has been marked as a duplicate of this bug. ***", "id": 68264, "time": "2004-12-10T18:20:48Z", "creator": "yoavs@computer.org", "creation_time": "2004-12-10T18:20:48Z", "is_private": false, "attachment_id": null}, {"count": 3, "attachment_id": null, "bug_id": 29726, "is_private": false, "id": 69610, "time": "2005-01-12T19:05:02Z", "creator": "kupci2@yahoo.com", "creation_time": "2005-01-12T19:05:02Z", "tags": [], "text": "This seems to be similar or a duplicate of 900"}, {"count": 4, "tags": [], "creator": "patdtaylor2000@yahoo.com", "attachment_id": null, "text": "Several suggestions on the proposed fix:\n\nOnly do the copy/zap if File.renameTo() fails.  Renaming is much cheaper when it\nworks, particularly if the log file is large.\n\nIf both the renaming AND copying fails, the new log file should be opened in\nappend mode.  This ensures that the existing log messages are not lost.\n\nBe careful about how the copying is done.  It's safer and more efficient to do a\nbinary copy using a reasonable buffer size rather than try to do a\nline-at-a-time text copy.", "id": 70522, "time": "2005-02-04T22:40:29Z", "bug_id": 29726, "creation_time": "2005-02-04T22:40:29Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 29726, "attachment_id": null, "id": 71379, "time": "2005-02-22T23:24:21Z", "creator": "ceki@apache.org", "creation_time": "2005-02-22T23:24:21Z", "is_private": false, "text": "This bug should be fixed in log4j version 1.3."}, {"count": 6, "tags": [], "bug_id": 29726, "attachment_id": null, "id": 71920, "time": "2005-03-07T20:08:49Z", "creator": "kupci2@yahoo.com", "creation_time": "2005-03-07T20:08:49Z", "is_private": false, "text": "*** Bug 900 has been marked as a duplicate of this bug. ***"}, {"count": 7, "text": "(In reply to comment #5)\n> This bug should be fixed in log4j version 1.3.\n\nWe are currently experiencing this problem with version 1.2.8 on Windows 2000.  \nWe are hesitant to move log4j 1.3 alpha into production.  What other options \nare there?  Is there a fix for 1.2.x?\n", "creator": "hahn21@llnl.gov", "is_private": false, "id": 96294, "time": "2006-11-28T11:08:26Z", "bug_id": 29726, "creation_time": "2006-11-28T11:08:26Z", "tags": [], "attachment_id": null}, {"count": 8, "tags": [], "bug_id": 29726, "text": "Ceki, could you please confirm this bug is actually fixed in 1.3 and not in any\n1.2.x version?\nThx", "id": 97617, "time": "2007-01-04T00:32:19Z", "creator": "cvedovini@odyssey-group.com", "creation_time": "2007-01-04T00:32:19Z", "is_private": false, "attachment_id": null}, {"count": 9, "tags": [], "bug_id": 29726, "attachment_id": null, "id": 98076, "time": "2007-01-15T08:16:30Z", "creator": "cvedovini@odyssey-group.com", "creation_time": "2007-01-15T08:16:30Z", "is_private": false, "text": "(In reply to comment #5)\n> This bug should be fixed in log4j version 1.3.\n\nCeki, could you please confirm this bug is actually fixed in 1.3 and not in any\n1.2.x version?\nThx"}, {"count": 10, "attachment_id": null, "bug_id": 29726, "is_private": false, "id": 107693, "time": "2007-09-04T05:10:09Z", "creator": "arnauldvm@gmail.com", "creation_time": "2007-09-04T05:10:09Z", "tags": [], "text": "I checked myself, and found it was solved only in 1.3 for DRFA.\nFor RFA, it has been solved in 1.2.15 too (see bug 41735).\n\nOn another hand, now 1.3 has been abandoned. But its\no.a.l.rolling.RollingFileAppender, that solved the problem,\nis available in companions / extras, which release 1.0 has\nbeen recently released.\n\nPlease note that, though RFA and DRFA are deprecated in favor\nor o.a.l.rolling.RFA in 1.3, they are not deprecated in 1.2.15."}]