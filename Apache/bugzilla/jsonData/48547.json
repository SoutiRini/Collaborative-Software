[{"count": 0, "tags": [], "bug_id": 48547, "attachment_id": null, "id": 133610, "time": "2010-01-14T12:29:39Z", "creator": "youngm@gmail.com", "creation_time": "2010-01-14T12:29:39Z", "is_private": false, "text": "Occasionally it can be useful when administering an application running in production to apply patches to that application rather than rebuilding that application.  Such situations might include upgrading the database driver for an application that has an embedded driver, providing a patch to some spring configuration, etc...  \n\nOther application servers have this capability.  e.g. Websphere has the notion of a \"shared library\".\n\nIt would be nice if tomcat had a similar concept.  It could simply be a loader that sits between the System loader and the webapp loader.\n\nThis loader could be configured in the catalina.properties along with the common.loader.  The \"patch.loader\"??? And could be blank/unused by default.\n\nSome might argue that the correct way to handle this \"patch\" situation is to do a new build of your web application.  I argue that it's not Tomcat's job to tell organizations how they run their IT but should instead work to be flexible wherever feasible in allowing organizations to use Tomcat in such ways that best fits that organization's processes.\n\nMike"}, {"count": 1, "tags": [], "text": "As a work around people who have a similar need can modify the tomcat startup scripts to add patched jars and classes folders to the \"CLASSPATH\" variable to include them into the system classloader.\n\nMike", "attachment_id": null, "bug_id": 48547, "id": 133611, "time": "2010-01-14T12:43:41Z", "creator": "youngm@gmail.com", "creation_time": "2010-01-14T12:43:41Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 48547, "attachment_id": null, "id": 133612, "time": "2010-01-14T12:53:32Z", "creator": "markt@apache.org", "creation_time": "2010-01-14T12:53:32Z", "is_private": false, "text": "Modifying CLASSPATH is generally a very bad idea. In 99.9% of cases it causes far more problems that it fixes.\n\nAnother class loader in the hierarchy won't help due to the delegation model\nrequired by the Servlet spec.\n\nRegardless of how you do it, dynamically replacing classes in a running web\napplication is asking for trouble unless your are very careful or in an\nenvironment designed to it (eg OSGI). Getting that right for Tomcat would\nrequire a huge amount of complexity (it is bad enough for JSPs) and there are\nsimpler solutions.\n\nTomcat does support updating an entire WAR whilst the application is running\nand serving requests. You need to do this through the manager for it to be\nsafe.\n\nYou can also add/replace classes in the WEB-INF/classes directory. These will\noverride and classes in JARs (hence can be used for patching) and a simple\nre-load will cause Tomcat to pick them up, again without loss of service to the\nend-user.\n\nAs an aside, Tomcat has had the concept of a shared library for as long as I\ncan remember (Tomcat 4 onwards). It is disabled by default in Tomcat 6 & 7.\n\nAll the use cases you describe can be achieved with existing Tomcat\nfunctionality. Use the users list if you need more details of how to do it. If\nthere is a practical use case that can't be met with existing functionality\nthen that is worth further discussion. The users list is also the best place to\nstart that discussion."}, {"count": 3, "tags": [], "creator": "youngm@gmail.com", "attachment_id": null, "is_private": false, "id": 133616, "time": "2010-01-14T14:24:54Z", "bug_id": 48547, "creation_time": "2010-01-14T14:24:54Z", "text": "A few additional comments:\n\n* This issue was not about runtime patching.  I expect to need to restart my tomcat.\n\n* I don't believe the Shared classloader will work in this situation since according to all the documentation and tests I've run the shared loader comes after the webapp loader in class loading order.\n\n* I have created a user thread and they were aware of no way to accomplish this other than modifying the .war.  I will continue to work on the user list to gather more of a consensus before reopening this issue.  For those with this same question the thread can be found here: http://old.nabble.com/Classloader-between-Web-application-and-system-loader-ts27154908.html\n\nThanks for your help Mark.\n\nMike"}]