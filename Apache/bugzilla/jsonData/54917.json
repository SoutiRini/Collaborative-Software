[{"count": 0, "tags": [], "bug_id": 54917, "attachment_id": null, "text": "The wording at Servlet API 3.0 specification (and upcoming 3.1) carries examples, and plain inconsistencies in it around the multipart request API.\nThis has resulted in disagreeing implementations in Tomcat vs. GlassFish.\n\nThe original MIME specification constructed the multipart/* as general framework for delivering data attachments along with the primary contents.  There is also definition for few specific usages, like multipart/related, and multipart/alternate.\n\nCurrent ServletAPI 3.0 and preview of 3.1 are effectively stating around chapter 3.2: \"File Upload\" that there shall be only support for  \"multipart/form-data\".\nThe description of @MultipartConfig (chapter 8.1.5)  does speak of  \"mime/multipart\" which is not quite same thing as what chapter 3.2 speaks of, nor exactly what MIME specification said -- better phrase there would be \"MIME multipart\".\n\nI use old protocols over HTTP that could use a bit more relaxed implementation of what \"multipart/\" is in HttpServletRequest. My particular example is using \"multipart/related\".\n\nThat specification wording of chapter 3.2 (maybe it was intended as an example?) has resulted a strict compliance implementation at Tomcat 7, and this very nice servlet request processing mechanism in there is practically useless for me.\n\nReally proper implementation (and specification) would support both \"message/\" and \"multipart/\" structures allowing efficient iterative stream processing at the servlet. And for that matter, also support encoding mode \"chunked\" in parts, which my current processing hack using JavaMail does not support.\n\nA bit hard thing there is that any Part can itself be a multipart message with nested structure of its own, and request parsing needs to support that.\nAn iterator of Parts reading the input stream should be able to do it without resorting to loading everything in memory, or using temporary files.", "id": 166988, "time": "2013-05-01T16:57:03Z", "creator": "matti.aarnio@methics.fi", "creation_time": "2013-05-01T16:57:03Z", "is_private": false}, {"count": 1, "tags": [], "text": "The spec is quite clear that only multipart/form-data is supported.\n\nRelaxing that requirement could be implemented as a container specific extension to the spec.\n\nEnhancement requests without patches or committer interest tend to languish in Bugzilla for a few years before eventually being closed as WONTFIX.", "attachment_id": null, "bug_id": 54917, "id": 166989, "time": "2013-05-01T17:04:26Z", "creator": "markt@apache.org", "creation_time": "2013-05-01T17:04:26Z", "is_private": false}, {"count": 2, "tags": [], "text": "The use of \"multipart/form-data\" is defined by HTML specification (HTML 4.0 onwards). It was first specified by RFC2388.\n\nLinks:\nhttp://www.w3.org/TR/html401/interact/forms.html#h-17.13.4.2\nhttp://www.w3.org/TR/html5/forms.html#multipart-form-data\nhttp://tools.ietf.org/html/rfc2388\n\nRegarding the description of @MultipartConfig (chapter 8.1.5 of Servlet 3.0 Rev.a), I think that \na) maybe we could report it and ask it to be corrected as an editorial error\nb) this wording is just in line with how the configuration option was named simply \"multipart config\" and not \"multipart form data config\". (As to be open for further wider use in the future or in different contexts).\n\nIt is just a configuration option. How this option is interpreted and used is defined elsewhere: in chapter 3.2, as you correctly noted.\n\nThus I see no provision why Tomcat should ever try to process any other multipart mime-type. (Unless one is about to follow \"Zawinski's Law\", http://en.wikiquote.org/wiki/Jamie_Zawinski ).\n\nI am closing this as WONTFIX.\n\n\n> disagreeing implementations in Tomcat vs. GlassFish\n\nWhat is so different in Glassfish?\n\n> my current processing hack using JavaMail\n\nUsing an e-mail library to process an e-mail format is quite reasonable. Note though that a) JavaMail is just a standard, an API. There exist different independent implementations of it. b) There exist different libraries that can parse mime formats.\n\nIf you start a thread on the users mailing list or elsewhere, maybe people can come up with better options.", "attachment_id": null, "bug_id": 54917, "id": 166993, "time": "2013-05-01T23:11:00Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2013-05-01T23:11:00Z", "is_private": false}]