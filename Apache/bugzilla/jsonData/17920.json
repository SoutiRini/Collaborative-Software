[{"count": 0, "tags": [], "text": "We have a large project with an existing logging framework, and are moving over \nto using LOG4J for logging.  We are doing this by changing our existing logging \nmodule to wrap LOG4J.\n\nOne disadvantage of wrapping LOG4J this way is that line numbers and files \nprinted using PatternLayout's %F and %L directives will now refer to the line \nin our logging module that called LOG4J, as this is always constant in our \ncase, this information isn't very useful.\n\nIt would be useful if there was a configuraion option to offset the line in the \nstack frame from where this information is collected to support systems that \nmake all calls to LOG4J from single wrapper.\n\nFor example, for a stack trace such as:\n\n  java.lang.Throwable\n    ...\n    at org.apache.log4j.PatternLayout.format(PatternLayout.java:413)\n    at org.apache.log4j.FileAppender.doAppend(FileAppender.java:183)\n    at org.apache.log4j.Category.callAppenders(Category.java:131)\n    at org.apache.log4j.Category.log(Category.java:512)\n+   at other.logging.module.Logger.log(OtherLogger.java:33)\n*   at callers.fully.qualified.className.methodName(FileName.java:74)\n\nThe line marked (*) could be used to produce location information, if the \nstacktrace offset was 1, rather than the default line marked (+).\n\nDave.", "is_private": false, "id": 33043, "creator": "djpowell@bigfoot.com", "time": "2003-03-12T15:46:16Z", "bug_id": 17920, "creation_time": "2003-03-12T15:46:16Z", "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 17920, "is_private": false, "text": "\nDavid,\n\nThis is already supported by log4j. Please see the Category.log(String \ncallerFQCN, Priority level, Object message, Throwable t) method.\n\nAs such, I am flagging this bug as INVALID.", "id": 33242, "time": "2003-03-15T18:30:17Z", "creator": "ceki@apache.org", "creation_time": "2003-03-15T18:30:17Z", "attachment_id": null}]