[{"attachment_id": null, "tags": [], "bug_id": 44682, "is_private": false, "count": 0, "id": 114990, "time": "2008-03-26T10:41:34Z", "creator": "ks@vitronic.de", "creation_time": "2008-03-26T10:41:34Z", "text": "Hi,\nwhen I try to follow the description on\nhttp://xmlgraphics.apache.org/batik/using/transcoder.html#createImage\nto create a jpg-image file from a svg-file in a JUnitTest, I get the following error message:\n \norg.apache.batik.transcoder.TranscoderException: null\nEnclosed Exception:\nnull\n\tat org.apache.batik.transcoder.image.ImageTranscoder.transcode(ImageTranscoder.java:132)\n\tat org.apache.batik.transcoder.XMLAbstractTranscoder.transcode(XMLAbstractTranscoder.java:142)\n\tat org.apache.batik.transcoder.SVGAbstractTranscoder.transcode(SVGAbstractTranscoder.java:156)\n\tat de.vitronic.test.TestJPEGTranscoder.testJPEGTranscoder(TestJPEGTranscoder.java:57)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:585)\n\tat junit.framework.TestCase.runTest(TestCase.java:154)\n\tat junit.framework.TestCase.runBare(TestCase.java:127)\n\tat junit.framework.TestResult$1.protect(TestResult.java:106)\n\tat junit.framework.TestResult.runProtected(TestResult.java:124)\n\tat junit.framework.TestResult.run(TestResult.java:109)\n\tat junit.framework.TestCase.run(TestCase.java:118)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:208)\n\tat junit.framework.TestSuite.run(TestSuite.java:203)\n\tat org.eclipse.jdt.internal.junit.runner.junit3.JUnit3TestReference.run(JUnit3TestReference.java:128)\n\tat org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:460)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:673)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:386)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:196)\n\n\nThe batik version I use is 1.7.\n\nFirst I tried to transform a created svg-file into jpeg-file in my own application, but I get the same exception, so I copied the example code from the previous mentioned website in a JUnit-Testcase to figure out if I have done anything wrong in my application. But I got the same problem again, with the copied and pasted code (see above).\n\nWhen I ran the rasterizer.jar file to convert the image, there is no such an exception thrown. I looked at the code from SVGGenerator from the Rasterizer application, but I doesn\u00b4t found a solution, so far to solve the problem.\n\n\nSo here is the code from my JUnitTest method:\n\n    public void testJPEGTranscoder() {\n\n\t// Create a JPEG transcoder\n\tJPEGTranscoder t = new JPEGTranscoder();\n\n\t// Set the transcoding hints.\n\tt.addTranscodingHint(JPEGTranscoder.KEY_QUALITY, new Float(.8));\n\n\t// Create the transcoder input.\n\tString svgURI;\n\ttry {\n\t    svgURI = new File(\"test/TestInput.svg\").toURL().toString();\n\n\t    TranscoderInput input = new TranscoderInput(svgURI);\n\n\t    // Create the transcoder output.\n\t    OutputStream ostream = new FileOutputStream(\n\t\t    \"test/TestOutput.jpg\");\n\t    TranscoderOutput output = new TranscoderOutput(ostream);\n\n\t    // Save the image.\n\t    t.transcode(input, output);\n\n\t    // Flush and close the stream.\n\t    ostream.flush();\n\t    ostream.close();\n\t    // System.exit(0);\n\n\t} catch (MalformedURLException e) {\n\t    // TODO Auto-generated catch block\n\t    e.printStackTrace();\n\t} catch (FileNotFoundException e) {\n\t    // TODO Auto-generated catch block\n\t    e.printStackTrace();\n\t} catch (TranscoderException e) {\n\t    // TODO Auto-generated catch block\n\t    e.printStackTrace();\n\t} catch (IOException e) {\n\t    // TODO Auto-generated catch block\n\t    e.printStackTrace();\n\t}\n\n    }\n\n\nThanks in advance for your help,\nks"}, {"count": 1, "tags": [], "bug_id": 44682, "is_private": false, "id": 115018, "creation_time": "2008-03-27T05:33:31Z", "time": "2008-03-27T05:33:31Z", "creator": "ks@vitronic.de", "text": "Hi,\nI found the cause for the resulting exception. It was a missed dependency for the transcoder.\nThe following dependency must be included in the \"batik-transcoder-1.7.pom\", to get the example work as expected (see\nhttp://xmlgraphics.apache.org/batik/using/transcoder.html#createImage).\n\n<dependency>\n\t<groupId>org.apache.xmlgraphics</groupId>\n\t<artifactId>batik-codec</artifactId>\n\t<version>1.7</version>\n</dependency>\n\n\nI\u00b4ve tried the transcoding of an png-image, insted of a jpeg-image, to see if I would run in the same problem. The problem showed up again, but the error-message, which was this time from the PNGTranscoder, gave me the hint I needed.\n\n\"Could not write PNG file because no WriteAdapter is availble\".\n\n\nAha. A short search in the PNGTranscoder source led me to line 110.\nWriteAdapter adapter = getWriteAdapter(\"org.apache.batik.ext.awt.image.codec.png.PNGTranscoderInternalCodecWriteAdapter\");\n\nAnd another short search in the libraries of my project, showed me that there was the batik-codec-1.7.jar library missing.\nI added that one to my projects pom.xml, ran maven and the JUnitTest again, and the image was created. :-)\n\n\nI currently use the repository http://repo1.maven.org/maven2/org/apache/xmlgraphics/.\nI don\u00b4t know where the base-repo is. So could someone with write access to the base-repo add the dependency to the \"batik-transcoder-1.7.pom\"\nand close this bug afterwards?\n\nThanks\nBest regards\nks", "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 44682, "attachment_id": null, "text": "(In reply to comment #1)\n> Hi,\n> I found the cause for the resulting exception.\n\nGreat! :-)\n\n\n> I\u00b4ve tried the transcoding of an png-image, insted of a jpeg-image, to see if I\n> would run in the same problem. The problem showed up again, but the\n> error-message, which was this time from the PNGTranscoder, gave me the hint I\n> needed.\n> \n> \"Could not write PNG file because no WriteAdapter is availble\".\n\nSo a good fix for this \"issue\" would be a better error message (basically, mimic the PNG behavior) for the JPEG and possible other raster formats.\n\nPatches are welcome! ;-)\n\n(I've stated \"issue\" because, formally, this issue should be considered invalid due to the nature of the cause itself: a missing dependency. But, as we can do better - the PNG output is the example here - we then _should_ do it! :-) )", "id": 141257, "time": "2010-10-30T05:25:21Z", "creator": "helder.magalhaes@gmail.com", "creation_time": "2010-10-30T05:25:21Z", "is_private": false}]