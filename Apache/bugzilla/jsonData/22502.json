[{"count": 0, "tags": [], "bug_id": 22502, "is_private": false, "text": "Tomcat5 is able to parse a XML format JSP file encoding, but Tomcat4 isn't.\nI thought org.xml.sax.InputSource didn't instantiate with java.io.InputStream.\nSo, I read Jasper source and made two patches as follows.\n\njakarta-tomcat-4.1.27-src/jasper/src/share/org/apache/jasper/compiler/JspDocumentParser.java\n    \njakarta-tomcat-4.1.27-src/jasper/src/share/org/apache/jasper/compiler/ParserController.java\n     \n\n--- original/JspDocumentParser.java     Mon Aug 18 14:26:17 2003\n+++ ../jakarta-tomcat-4.1.27-src/jasper/src/share/org/apache/jasper/compiler/Jsp\nDocumentParser.java     Mon Aug 18 16:25:27 2003\n@@ -128,6 +128,16 @@\n        this.path = path;\n        this.inputSource = new InputSource(reader);\n     }\n+    public JspDocumentParser(ParserController pc,\n+                            String path,\n+                            InputStream inputstream) {\n+       this.parserController = pc;\n+       this.ctxt = pc.getJspCompilationContext();\n+       this.taglibs = pc.getCompiler().getPageInfo().getTagLibraries();\n+       this.err = pc.getCompiler().getErrorDispatcher();\n+       this.path = path;\n+       this.inputSource = new InputSource(inputstream);\n+    }\n \n     /*\n      * Parses a JSP document by responding to SAX events.\n@@ -139,6 +149,46 @@\n                                   InputStreamReader reader,\n                                   Node parent) throws JasperException {\n        JspDocumentParser handler = new JspDocumentParser(pc, path, reader);\n+       handler.current = parent;\n+       Node.Nodes pageNodes = null;\n+\n+       try {\n+           // Use the default (non-validating) parser\n+           SAXParserFactory factory = SAXParserFactory.newInstance();\n+\n+           // Configure the parser\n+           SAXParser saxParser = factory.newSAXParser();\n+           XMLReader xmlReader = saxParser.getXMLReader();\n+           xmlReader.setProperty(LEXICAL_HANDLER_PROPERTY, handler);\n+           xmlReader.setErrorHandler(handler);\n+\n+           // Parse the input\n+           saxParser.parse(handler.inputSource, handler);\n+\n+           if (parent == null) {\n+               // Add the jsp:root element to the parse result\n+               pageNodes = new Node.Nodes((Node.JspRoot) handler.current);\n+           } else {\n+               pageNodes = parent.getBody();\n+           }\n+       } catch (IOException ioe) {\n+           handler.err.jspError(\"jsp.error.data.file.read\", path, ioe);\n+       } catch (Exception e) {\n+           handler.err.jspError(e);\n+       }\n+\n+       return pageNodes;\n+    }\n+    /*\n+     * Parses a JSP document by responding to SAX events.\n+     *\n+     * @throws JasperException XXX\n+     */\n+    public static Node.Nodes parse(ParserController pc,\n+                                  String path,\n+                                  InputStream inputstream,\n+                                  Node parent) throws JasperException {\n+       JspDocumentParser handler = new JspDocumentParser(pc, path, inputstream)\n;\n        handler.current = parent;\n        Node.Nodes pageNodes = null;\n\n\n############################################################################\n \n--- original/ParserController.java      Mon Aug 18 14:26:24 2003\n+++ ../jakarta-tomcat-4.1.27-src/jasper/src/share/org/apache/jasper/compiler/Par\nserController.java      Mon Aug 18 16:29:06 2003\n@@ -167,6 +167,7 @@\n         String absFileName = resolveFileName(inFileName);\n        String encoding = topFileEncoding;\n         InputStreamReader reader = null;\n+       InputStream is = null;\n         try {\n             // Figure out what type of JSP document we are dealing with\n             reader = getReader(absFileName, encoding);\n@@ -188,11 +189,12 @@\n \n             // dispatch to the proper parser\n            \n-            reader = getReader(absFileName, encoding);\n             if (isXml) {\n-                parsedPage = JspDocumentParser.parse(this, absFileName,\n-                                                    reader, parent);\n+               is = getInputStream(absFileName);\n+                parsedPage = JspDocumentParser.parse(this, absFileName, is,\n+                                                    parent);\n             } else {\n+               reader = getReader(absFileName, encoding);\n                JspReader r = new JspReader(ctxt, absFileName, encoding,\n                                            reader,\n                                            compiler.getErrorDispatcher());\n@@ -206,6 +208,12 @@\n                } catch (Exception any) {\n                }\n            }\n+           if (is != null) {\n+                try {\n+                    is.close();\n+               } catch (Exception any) {\n+               }\n+           }\n         }\n \n        return parsedPage;\n@@ -312,6 +320,17 @@\n                 Constants.getString(\"jsp.error.unsupported.encoding\",\n                                    new Object[]{encoding}));\n        }\n+    }\n+    private InputStream getInputStream(String file)\n+       throws FileNotFoundException\n+    {\n+        InputStream in;\n+\n+       in = ctxt.getResourceAsStream(file);\n+       if (in == null) {\n+           throw new FileNotFoundException(file);\n+       }\n+       return in;\n     }\n \n     private void p(String s) {", "id": 42889, "time": "2003-08-18T09:23:58Z", "creator": "koyama@cs.pit-nagano.ac.jp", "creation_time": "2003-08-18T09:23:58Z", "attachment_id": null}, {"count": 1, "attachment_id": null, "creator": "markt@apache.org", "text": "\n\n*** This bug has been marked as a duplicate of 19778 ***", "id": 64071, "time": "2004-09-22T21:49:57Z", "bug_id": 22502, "creation_time": "2004-09-22T21:49:57Z", "tags": [], "is_private": false}]