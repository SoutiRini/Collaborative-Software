[{"count": 0, "tags": [], "creator": "kiwiwings@apache.org", "text": "Created attachment 31544\n[PATCH] Streaming write support in NPOIFS\n\nThis patch adds the following:\n- streaming write support in NPOIFS *)\n- POIFSWriterListener support in NPOIFS\n- fixed/updated NPropertyTable entries on write\n\nWhile developing this patch, I've tried to stick (i.e. be binary compatible) to the output of POIFS, but apparently this is not necessary. So the parts of the OLE-container look differently when a new file is saved with NPOIFS vs. POIFS:\n- The FAT entry: end of file (POIFS) vs. second block (= block 1)\n- The first BAT entry: second last block (POIFS) vs. first block (= block 0)\n- The data: first block (POIFS) vs. starting with third block\n- The property table: third last block (POIFS) vs. the last block (NPOIFS)\n\nTo eventually support real streaming to a new file (without having a memory-backed datasource), I've decided to keep the order more or less of the existing implementation, so FAT&BAT entries stay at the same block index and can be updated in-place - maybe it might be necessary to reserve some blocks in the beginning of the file for extended BATs, but that is not the focus of this patch.\n\n*) up till now a byte array was the interface", "id": 174745, "time": "2014-04-21T14:33:48Z", "bug_id": 56437, "creation_time": "2014-04-21T14:33:48Z", "is_private": false, "attachment_id": 31544}, {"count": 1, "attachment_id": null, "creator": "kiwiwings@apache.org", "text": "applied with r1588887", "id": 174746, "time": "2014-04-21T14:39:28Z", "bug_id": 56437, "creation_time": "2014-04-21T14:39:28Z", "tags": [], "is_private": false}]