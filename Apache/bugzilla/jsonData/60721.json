[{"count": 0, "tags": [], "text": "Created attachment 34744\nStack trace of an exception.\n\nWe are running Tomcat 8.5.9 and we have multiple WARs deployed in /webapps folder. If more than one of these web apps contain a bundled Bouncy Castle provider, we receive exception in attached stack trace on attempt to use cryptographic algorithm.\n\nSteps to reproduce:\n\n0) Get and build the sample application:\n\n$ git clone https://github.com/lime-company/bcissue-20170210\n$ cd bcissue-20170210\n$ mvn clean package ; open ./target\n\n1) Create a clean instance of Tomcat 8.5.9\n2) Deploy one instance of the sample application.\n3) Open http://localhost:8080/bcissue/hello\n=> Everything works as expected\n\n4) Deploy another instance of the same sample application (rename it to bcissue2, so that you can have 2 instances on the same Tomcat)\n5) Open http://localhost:8080/bcissue2/hello\n=> Exception occurs\n\nExpected solution:\n\nBouncy Castle from particular application is correctly loaded.\n\nOr we would like to see a documentation of how the BC is supposed to work with Tomcat. Alternatively, we would like to see BC included in Tomcat distribution.\n\nCurrent Workaround:\n\nWe managed to workaround the issue by installing Bouncy Castle in our JRE, using the \"Static Installation\", as documented here:\n\nhttp://www.bouncycastle.org/wiki/display/JA1/Provider+Installation\n\nHowever, this is not always desired, since global installation may interfere with other applications (for example, Wildfly has issues in case BC is installed system wide, since it bundles own BC version).\n\nSystem information:\n\n$ java -version\njava version \"1.8.0_92\"\nJava(TM) SE Runtime Environment (build 1.8.0_92-b14)\nJava HotSpot(TM) 64-Bit Server VM (build 25.92-b14, mixed mode)\n\nRunning on MacOS X Sierra 10.12.3 (16D32), but we are having this issues on other Linux based environments as well.", "attachment_id": 34744, "id": 196904, "creator": "petr@lime-company.eu", "time": "2017-02-10T12:37:59Z", "bug_id": 60721, "creation_time": "2017-02-10T12:37:59Z", "is_private": false}, {"count": 1, "attachment_id": null, "creator": "markt@apache.org", "is_private": false, "id": 196905, "time": "2017-02-10T12:49:52Z", "bug_id": 60721, "creation_time": "2017-02-10T12:49:52Z", "tags": [], "text": "You are having class loader issues because you are registering a web application provided library (loaded with the web application class loader) with a JVM wide registry and then trying to use that library in a different web application (with a different class loader).\n\nThat is never going to work.\n\nThis is not a Tomcat bug.\n\nStatic installation is one solution. Moving the Bouncy Castle JAR(s) to $CATALINA_BASE/lib should also work.\n\nIf you want to discuss your options further, the users@ list is the place to do that."}, {"count": 2, "tags": [], "text": "Thank you for the response - VERIFIED.\n\nJust to sum up, after I did little bit more focused testing:\n\nThis works:\n\n- Installing BC provider in JRE (\"static\") helps - all applications work regardless of it they bundle BC provider JAR or not.\n- Putting 'bcprov-jdk15on-1.XX.jar' in '$CATALINA_BASE/lib' helps reliably in case no deployed WAR contains the BC jar (!).\n\nThis does not work:\n\n- Putting 'bcprov-jdk15on-1.XX.jar' in '$CATALINA_BASE/lib' in case some WAR contains the BC jar - only the first application works, regardless of if it bundles BC provider JAR or not, no other application work.\n- ... and as mentioned in the issue response, having per-application provider does not work.\n\nI hope this issue will be helpful for future reference.", "is_private": false, "bug_id": 60721, "id": 196910, "time": "2017-02-10T14:48:52Z", "creator": "petr@lime-company.eu", "creation_time": "2017-02-10T14:48:52Z", "attachment_id": null}]