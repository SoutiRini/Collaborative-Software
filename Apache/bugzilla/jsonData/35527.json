[{"count": 0, "tags": [], "bug_id": 35527, "attachment_id": null, "id": 76767, "time": "2005-06-28T22:32:37Z", "creator": "OMaffeis@hotmail.com", "creation_time": "2005-06-28T22:32:37Z", "is_private": false, "text": "I am reading a file with :\n\n\tPOIFSFileSystem fs = new POIFSFileSystem(is);\n\tworkbook = new HSSFWorkbook(fs);\n\nand it generates a InvocationTargetException caused by an exception \"\njava.lang.ArrayIndexOutOfBoundsException: 33\".\nI tried to locate the problem in my excel file deleting progressively the\ncontent up to a blank file that still generates the problem.\nI looked for patches without success."}, {"count": 1, "tags": [], "creator": "OMaffeis@hotmail.com", "attachment_id": 15546, "id": 76769, "time": "2005-06-28T22:34:41Z", "bug_id": 35527, "creation_time": "2005-06-28T22:34:41Z", "is_private": false, "text": "Created attachment 15546\n\"Reduced\" file that still generates the error."}, {"count": 2, "tags": [], "text": "I confirmed the bug with latest on CVS. Here is relevant part of the stack trace\nfor reference:\n\n<snipped/>\njava.lang.ArrayIndexOutOfBoundsException: 33\n\tat org.apache.poi.util.LittleEndian.getNumber(LittleEndian.java:491)\n\tat org.apache.poi.util.LittleEndian.getShort(LittleEndian.java:52)\n\tat org.apache.poi.hssf.record.ObjRecord.fillFields(ObjRecord.java:99)\n\tat org.apache.poi.hssf.record.Record.fillFields(Record.java:90)\n\tat org.apache.poi.hssf.record.Record.<init>(Record.java:55)\n\tat org.apache.poi.hssf.record.ObjRecord.<init>(ObjRecord.java:61)\n<snipped/>\n\nApparently, org.apache.poi.hssf.record.ObjRecord.fillFields runs out of data in\nthe loop:\n\n        while (pos - offset < size)\n        {\n            short subRecordSid = LittleEndian.getShort(data, pos);\n            short subRecordSize = LittleEndian.getShort(data, pos + 2);\n            Record subRecord = SubRecord.createSubRecord(subRecordSid,\nsubRecordSize, data, pos + 4);\n            subrecords.add(subRecord);\n            pos += subRecord.getRecordSize();\n        }\n\nThe following fix seemed to work, although the underlying cause is still not known:\n\nfile: org/apache/poi/hssf/record/ObjRecord.java\n\n  // size-4: since at least the first two shorts have to be read\n  while (pos - offset < size-4) \n\nI was able to read and save the file as a new xls with the above change and the\nnew file opened up fine.", "attachment_id": null, "bug_id": 35527, "id": 76773, "time": "2005-06-28T23:23:48Z", "creator": "amolweb@yahoo.com", "creation_time": "2005-06-28T23:23:48Z", "is_private": false}, {"count": 3, "tags": [], "creator": "avik@apache.org", "text": "Amol, \n\nCan you pls check if your check also solves bug 34575. I think they are the same. \n\nI can figure.. does your patch optionally read in the bytes if they exist? coz i\ndont think the bug is prevalant in all files with OBJ record. If that is the\ncase, I think this can go in (..with some comments in code :)", "id": 77000, "time": "2005-07-05T14:33:58Z", "bug_id": 35527, "creation_time": "2005-07-05T14:33:58Z", "is_private": false, "attachment_id": null}, {"count": 4, "attachment_id": null, "bug_id": 35527, "text": "*** I thought i had resolved this issue as fixed  *** \n*** couple of days back, but my fix comments dont *** \n*** appear, so I'm adding these comments again    ***\n\n\nFurther \"investigation\" revealed that the byte array\nwas falling short 2 bytes when the sid of the SubRecord\nindicated an EndSubRecord.\n\nHence,\nI made a slight modification in the change I proposed\nearlier in the file I committed. Here is the changed part:\n\n<code>\n\nwhile (pos - offset <= size-2) // atleast one \"short\" must be present\n{\n  short subRecordSid = LittleEndian.getShort(data, pos);\n  short subRecordSize = -1; // set default to \"< 0\"\n  if (pos-offset <= size-4) { // see if size info is present, else default to -1\n    subRecordSize = LittleEndian.getShort(data, pos + 2);\n  }\n\n</code>\n\n\n\nNow, when the byte array falls short two bytes when dealing with\nEndSubRecord, the length is implicitly set to 0 since the change\nin ObjRecord now sets the length to default value of -1 if the \nshort value for the SubRecord size is not found.\n", "id": 77117, "time": "2005-07-08T16:59:12Z", "creator": "amolweb@yahoo.com", "creation_time": "2005-07-08T16:59:12Z", "tags": [], "is_private": false}, {"count": 5, "tags": [], "text": "*** Bug 34575 has been marked as a duplicate of this bug. ***", "is_private": false, "id": 77119, "creator": "amolweb@yahoo.com", "time": "2005-07-08T17:02:30Z", "bug_id": 35527, "creation_time": "2005-07-08T17:02:30Z", "attachment_id": null}]