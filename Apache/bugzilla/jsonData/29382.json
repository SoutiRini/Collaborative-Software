[{"count": 0, "tags": [], "bug_id": 29382, "is_private": false, "text": "The GenKey task should be able to find keytool based on JAVA_HOME ($JAVA_HOME/bin/keytool), but it \ndoesn't. If $JAVA_HOME/bin is included in $PATH, GenKey works, but otherwise fails with 'command \nnot found' from the created exec subtask.", "id": 58700, "time": "2004-06-04T00:29:07Z", "creator": "mbh@charter.net", "creation_time": "2004-06-04T00:29:07Z", "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 29382, "attachment_id": null, "text": "keytool is named in GenerateKey.execute() (very near the end of org/apache/tools/ant/taskdefs/\nGenerateKey.java):\n\n        final ExecTask cmd = (ExecTask) getProject().createTask(\"exec\");\n        cmd.setExecutable(\"keytool\");\n\nPossible fix (change only to second line):\n        final ExecTask cmd = (ExecTask) getProject().createTask(\"exec\");\n        cmd.setExecutable(JavaEnvUtils.getJdkExecutable(\"keytool\"));\n", "id": 58701, "time": "2004-06-04T00:38:29Z", "creator": "mbh@charter.net", "creation_time": "2004-06-04T00:38:29Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 29382, "text": "I have exactly the same issue with <javac fork=\"true\">, which I had to trouble \nwith a user today! The problem manifests itself inside IntelliJ, with the Ant \nintegration, but that's basically the same issue. <javac fork=\"false\"> would \nwork just fine, find the Javac compiler, whereas just changing to fork=\"true\" \nmakes the build fails. %JAVA_HOME%/bin must thus be put in the PATH before \nlaunching IntelliJ.\n\nThanks for pointing out JavaEnvUtils.getJdkExecutable. I'll use it in one of \nmy custom tasks that execs jar[.exe], and fails for some users who do not have \nit in the PATH. --DD", "id": 58703, "time": "2004-06-04T01:29:56Z", "creator": "ddevienne@lgc.com", "creation_time": "2004-06-04T01:29:56Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 29382, "attachment_id": null, "text": "fixed, thanks.\n\nDD, <javac fork=\"true\"> should work fine since it uses\nJavaEnvUtils.getJdkExecutable in Javac.getSystemJavac via two indirections.", "id": 58712, "time": "2004-06-04T07:47:39Z", "creator": "bodewig@apache.org", "creation_time": "2004-06-04T07:47:39Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 29382, "attachment_id": null, "is_private": false, "id": 59973, "time": "2004-06-28T08:07:05Z", "creator": "bodewig@apache.org", "creation_time": "2004-06-28T08:07:05Z", "text": "*** Bug 29764 has been marked as a duplicate of this bug. ***"}]