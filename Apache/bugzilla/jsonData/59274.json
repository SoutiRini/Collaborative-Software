[{"count": 0, "tags": [], "creator": "thomas@m3y3r.de", "attachment_id": null, "id": 189959, "time": "2016-04-05T12:01:18Z", "bug_id": 59274, "creation_time": "2016-04-05T12:01:18Z", "is_private": false, "text": "Hi,\n\nwhen using web-fragment.xml to define a order between JARs inside a WAR file and when running Tomcat with unpackWARs=\"false\" the container fails with an MalformedURLException. Stack trace is:\nDaemon Thread [localhost-startStop-1] (Suspended (exception MalformedURLException))\t\n\towns: ContextConfig  (id=65)\t\n\towns: StandardContext  (id=66)\t\n\tURL.<init>(URL, String, URLStreamHandler) line: 622\t\n\tURL.<init>(URL, String) line: 483\t\n\tURL.<init>(String) line: 432\t\n\tJarURLConnection(JarURLConnection).parseSpecs(URL) line: 175\t\n\tJarURLConnection(JarURLConnection).<init>(URL) line: 158\t\n\tJarURLConnection.<init>(URL, Handler) line: 81\t\n\tHandler.openConnection(URL) line: 41\t\n\tURL.openConnection() line: 972\t\n\tURL.openStream() line: 1038\t\n\tWebappServiceLoader<T>.parseConfigFile(LinkedHashSet<String>, URL) line: 161\t\n\tWebappServiceLoader<T>.load(Class<T>) line: 118\t\n\tContextConfig.processServletContainerInitializers() line: 1616\t\n\tContextConfig.webConfig() line: 1128\t\n\tContextConfig.configureStart() line: 771\t\n\tContextConfig.lifecycleEvent(LifecycleEvent) line: 305\t\n\tLifecycleSupport.fireLifecycleEvent(String, Object) line: 95\t\n\tStandardContext(LifecycleBase).fireLifecycleEvent(String, Object) line: 90\t\n\tStandardContext.startInternal() line: 5080\t\n\tStandardContext(LifecycleBase).start() line: 150\t\n\tStandardHost(ContainerBase).addChildInternal(Container) line: 725\t\n\tStandardHost(ContainerBase).addChild(Container) line: 701\t\n\tStandardHost.addChild(Container) line: 717\t\n\tHostConfig.deployWAR(ContextName, File) line: 945\t\n\tHostConfig$DeployWar.run() line: 1798\t\n\tExecutors$RunnableAdapter<T>.call() line: 511\t\n\tFutureTask<V>.run() line: 266\t\n\tThreadPoolExecutor.runWorker(ThreadPoolExecutor$Worker) line: 1142\t\n\tThreadPoolExecutor$Worker.run() line: 617\t\n\tThread.run() line: 745\t\n\nThe problem seems to be in class WebappServiceLoader which has this flawed logic in the load() method:\n                String base = jarUrl.toExternalForm();\n                URL url;\n                if (base.endsWith(\"/\")) {\n                    url = new URL(base + configFile);\n                } else {\n                    url = new URL(\"jar:\" + base + \"!/\" + configFile);\n                }\n\nI think the problem is that when running in unpackWARs=\"false\" the base URL can be something like this:\njar:file:/path/to/tomcat/installation/webapps/webapp.war!/WEB-INF/lib/library-file.jar\n\nit then adds another jar: infront of the URL resulting in a URL of:\njar:jar:file:/path/to/tomcat/installation/webapps/webapp.war!/WEB-INF/lib/library-file.jar\n\nwhich cannot be parsed be the URL class:\njava.net.MalformedURLException: no !/ in spec\n\nI think this bug was introduced in commit 646bba33e0e269a2c1ffa03d92da3aea3a36d95a ( Fix for https://issues.apache.org/bugzilla/show_bug.cgi?id=55287 )\n\nWhen running with unpackWARs=\"true\" the web-fragment.xml ordering is correctly processed."}, {"count": 1, "tags": [], "text": "\n\n*** This bug has been marked as a duplicate of bug 58490 ***", "is_private": false, "bug_id": 59274, "id": 189960, "time": "2016-04-05T12:08:08Z", "creator": "violetagg@apache.org", "creation_time": "2016-04-05T12:08:08Z", "attachment_id": null}]