[{"count": 0, "tags": [], "bug_id": 51150, "is_private": false, "id": 146106, "attachment_id": null, "creator": "ognjen.d.blagojevic@gmail.com", "creation_time": "2011-05-04T10:24:31Z", "time": "2011-05-04T10:24:31Z", "text": "Fop should provide method to clean DecimalFormatCache (and other ThreadLocals, if any). \n\nTomcat 7.0.11 complains about a memory leak:\n\nSEVERE: The web application [/(snip)] created a ThreadLocal with key of type [org.apache.fop.util.DecimalFormatCache.DecimalFormatThreadLocal] (value [org.apache.fop.util.DecimalFormatCache$DecimalFormatThreadLocal@fb637b]) and a value of type [java.text.DecimalFormat] (value [java.text.DecimalFormat@674dc]) but failed to remove it when the web application was stopped. Threads are going to be renewed over time to try and avoid a probable memory leak. \n\n\nWhen FOP is being used with Tomcat, user should be able to add DecimalFormatCache.clean() in destroy method of ContextListener, and prevent memory leak."}, {"count": 1, "tags": [], "creator": "unlogic@unlogic.se", "text": "I checked out the code from the FOP 1.0 tag and looked at the DecimalFormatCache.\n\nFrom what I can see this type of caching using ThreadLocal will not work well any environment where thread pools are used and where applications can be deployed and undeployed in runtime such as J2EE web applications.\n\nA workaround until a fix is out is to create a new thread for each PDF generation and the let the thread from the thread pool call the join() method on the new thread. This resolves the memory leak but on other hand makes the cache essentially pointless.", "id": 146400, "time": "2011-05-18T06:39:00Z", "bug_id": 51150, "creation_time": "2011-05-18T06:39:00Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "text": "I've done some more research and from what I can see DecimalFormatCache is the only place in the FOP source where ThreadLocal is used. So there doesn't seem to be any more memory leaks in the FOP code related to ThreadLocal.\n\nWould a patch that which simply removes the DecimalFormatCache be accepted until a better solution comes around?", "is_private": false, "bug_id": 51150, "id": 146409, "time": "2011-05-18T12:12:27Z", "creator": "unlogic@unlogic.se", "creation_time": "2011-05-18T12:12:27Z", "attachment_id": null}, {"count": 3, "tags": [], "text": "(In reply to comment #2)\n> I've done some more research and from what I can see DecimalFormatCache is the\n> only place in the FOP source where ThreadLocal is used. So there doesn't seem\n> to be any more memory leaks in the FOP code related to ThreadLocal.\n> \n> Would a patch that which simply removes the DecimalFormatCache be accepted\n> until a better solution comes around?\n\nNo, unless it also solves the issue that prompted the use of ThreadLocal to begin with. The reason why this is so, is because DecimalFormat is not thread-safe. This could potentially lead to weird behavior in case of multiple concurrent runs in the same JVM.\n\nAs for an alternative solution that would make sense: do something similar to what was done for color profiles, i.e. make sure all usage of DecimalFormat is properly synchronized.", "is_private": false, "bug_id": 51150, "id": 146431, "time": "2011-05-18T18:28:19Z", "creator": "adelmelle@apache.org", "creation_time": "2011-05-18T18:28:19Z", "attachment_id": null}, {"count": 4, "tags": [], "text": "I just changed bug name to more proper one.\n\nThe source of the problem is this:\n\n1. DecimalFormat is not thread safe\n2. FOP uses DecimalFormat a lot\n3. It takes time to instantiate DecimalFormat, so it is better to keep it for later reuse (= to cache it).\n\nIf that is the case, I wonder, could we use some other caching mechanism instead of ThreadLocal? Maybe Apache JCS or Ehcache could work for us? They are both licensed under ASL2.\n\nIf you agree, I could try to create drop-in replacement for DecimalFormatCache.", "attachment_id": null, "bug_id": 51150, "id": 148181, "time": "2011-07-26T16:34:24Z", "creator": "ognjen.d.blagojevic@gmail.com", "creation_time": "2011-07-26T16:34:24Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 51150, "is_private": false, "id": 148186, "attachment_id": null, "creator": "jeremias@apache.org", "creation_time": "2011-07-26T16:58:06Z", "time": "2011-07-26T16:58:06Z", "text": "I wonder if this bug is not a duplicate of https://issues.apache.org/bugzilla/show_bug.cgi?id=43940\n\nI'd rather not use a cache and possibly add another dependency just for that. I'd rather have a thread-safe decimal formatting method. Unfortunately, I haven't looked at the proposed solution in #43940, yet. Maybe you could take a look and give some feedback."}, {"count": 6, "tags": [], "text": "Ok, I will take a look if proposed pathces by Andreas and Julien for bug #43940 still work, and do they solve problems with Tomcat memory leak.", "is_private": false, "bug_id": 51150, "id": 148188, "time": "2011-07-26T17:16:34Z", "creator": "ognjen.d.blagojevic@gmail.com", "creation_time": "2011-07-26T17:16:34Z", "attachment_id": null}, {"count": 7, "tags": [], "bug_id": 51150, "is_private": false, "text": "resetting P2 open bugs to P3 pending further review", "id": 157399, "time": "2012-04-07T01:42:28Z", "creator": "gadams@apache.org", "creation_time": "2012-04-07T01:42:28Z", "attachment_id": null}, {"attachment_id": null, "tags": [], "creator": "gadams@apache.org", "text": "please provide minimal input FO file that demonstrates problem; also, a patch that addresses the problem would be welcome", "count": 8, "id": 157668, "time": "2012-04-08T05:16:07Z", "bug_id": 51150, "creation_time": "2012-04-08T05:16:07Z", "is_private": false}, {"count": 9, "tags": [], "bug_id": 51150, "is_private": false, "text": "Created attachment 28561\nExample demonstrating the problem", "id": 157726, "time": "2012-04-09T10:55:57Z", "creator": "ognjen.d.blagojevic@gmail.com", "creation_time": "2012-04-09T10:55:57Z", "attachment_id": 28561}, {"count": 10, "tags": [], "bug_id": 51150, "is_private": false, "id": 157727, "attachment_id": null, "creator": "ognjen.d.blagojevic@gmail.com", "creation_time": "2012-04-09T11:02:32Z", "time": "2012-04-09T11:02:32Z", "text": "I attached Maven WAR project as an example.\n\nInside archive you will find:\n\n1. fopleak.xml, FO file that is sufficient to trigger DecimalFormat caching\n2. FopMemoryLeakServlet, with the code to transform FOP file.\n\nSteps to reproduce:\n\n1. Package WAR file, e.g. using Apache Maven (mvn clean package)\n2. Deploy resulting war file to latest stable Apache Tomcat (tested with 7.0.27)\n3. Start tomcat\n4. Stop tomcat\n5. Check log files. It says:\n\nSEVERE: The web application [/fopleak] created a ThreadLocal with key of type [org.apache.fop.util.DecimalFormatCache.DecimalFormatThreadLocal] (value [org.apache.fop.util.DecimalFormatCache$DecimalFormatThreadLocal@1ee04fd]) and a value of type [java.text.DecimalFormat] (value [java.text.DecimalFormat@674dc]) but failed to remove it when the web application was stopped. Threads are going to be renewed over time to try and avoid a probable memory leak."}, {"count": 11, "text": "Created attachment 28562\nSame example with simplified FO file.", "bug_id": 51150, "attachment_id": 28562, "id": 157728, "time": "2012-04-09T11:10:54Z", "creator": "ognjen.d.blagojevic@gmail.com", "creation_time": "2012-04-09T11:10:54Z", "tags": [], "is_private": false}, {"count": 12, "tags": [], "text": "(In reply to comment #6)\n> Ok, I will take a look if proposed pathces by Andreas and Julien for bug #43940\n> still work, and do they solve problems with Tomcat memory leak.\n\ndid you have a chance to look at the proposed patch in bug 43940? does it solve the tomcat problem? how about performance?", "attachment_id": null, "bug_id": 51150, "id": 157739, "time": "2012-04-09T15:23:24Z", "creator": "gadams@apache.org", "creation_time": "2012-04-09T15:23:24Z", "is_private": false}, {"count": 13, "tags": [], "creator": "danielsh@apache.org", "attachment_id": null, "id": 157742, "time": "2012-04-09T17:39:43Z", "bug_id": 51150, "creation_time": "2012-04-09T17:39:43Z", "is_private": false, "text": "The content of attachment 28561 has been deleted by\n    Daniel Shahaf <danielsh@apache.org>\nwho provided the following reason:\n\nMessage-ID: <4F82CA3E.8080809@rcub.bg.ac.rs>\n\nThe token used to delete this attachment was generated at 2012-04-09 20:39:01 IDT."}, {"count": 14, "tags": [], "creator": "gadams@apache.org", "attachment_id": null, "is_private": false, "id": 158345, "time": "2012-04-24T05:41:33Z", "bug_id": 51150, "creation_time": "2012-04-24T05:41:33Z", "text": "(In reply to comment #12)\n> (In reply to comment #6)\n> > Ok, I will take a look if proposed pathces by Andreas and Julien for bug #43940\n> > still work, and do they solve problems with Tomcat memory leak.\n> \n> did you have a chance to look at the proposed patch in bug 43940? does it solve\n> the tomcat problem? how about performance?\n\nOgnjen, I am still awaiting your input as requested above. if I see no further input by April 30, I will close this bug due to lack of requested information. Regards, Glenn"}, {"attachment_id": null, "tags": [], "creator": "unlogic@unlogic.se", "text": "I took a quick look at the patch in bug 43940 and from what I can see it replaces DecimalFormatCache with a new implementation that doesn't use ThreadLocal at all so this bug should be fixed if/when the patch bug 43940 is accepted and applied.", "count": 15, "id": 158404, "time": "2012-04-25T07:50:54Z", "bug_id": 51150, "creation_time": "2012-04-25T07:50:54Z", "is_private": false}, {"count": 16, "tags": [], "text": "Patches for bug 43490 seems to be incomplete. I will try to add what is missing, and then test if memory leak is gone.\n\n-Ognjen", "is_private": false, "bug_id": 51150, "id": 158431, "time": "2012-04-25T16:31:48Z", "creator": "ognjen.d.blagojevic@gmail.com", "creation_time": "2012-04-25T16:31:48Z", "attachment_id": null}, {"count": 17, "tags": [], "creator": "ognjen.d.blagojevic@gmail.com", "attachment_id": null, "id": 158465, "time": "2012-04-27T08:37:07Z", "bug_id": 51150, "creation_time": "2012-04-27T08:37:07Z", "is_private": false, "text": "(In reply to comment #16)\n> Patches for bug 43490 seems to be incomplete. I will try to add what is\n> missing, and then test if memory leak is gone.\n\nPatch for 43940 is now complete, and it also resolves issue with memory leak.\n\n-Ognjen"}, {"count": 18, "tags": [], "text": "Great, will there be a FOP 1.0.1 release containing this fix or do we have to wait until FOP 1.1 is released?", "attachment_id": null, "bug_id": 51150, "id": 158466, "time": "2012-04-27T08:44:05Z", "creator": "unlogic@unlogic.se", "creation_time": "2012-04-27T08:44:05Z", "is_private": false}, {"count": 19, "tags": [], "text": "(In reply to comment #17)\n> (In reply to comment #16)\n> > Patches for bug 43490 seems to be incomplete. I will try to add what is\n> > missing, and then test if memory leak is gone.\n> \n> Patch for 43940 is now complete, and it also resolves issue with memory leak.\n> \n> -Ognjen\n\nok, as soon as there is an ICLA on file, i'll apply it", "is_private": false, "bug_id": 51150, "id": 158473, "time": "2012-04-27T13:21:25Z", "creator": "gadams@apache.org", "creation_time": "2012-04-27T13:21:25Z", "attachment_id": null}, {"attachment_id": null, "tags": [], "creator": "gadams@apache.org", "text": "(In reply to comment #18)\n> Great, will there be a FOP 1.0.1 release containing this fix or do we have\n> to wait until FOP 1.1 is released?\n\nno on a FOP 1.0.1; an FOP 1.1 is being prepared for release, hopefully during this quarter", "count": 20, "id": 158474, "time": "2012-04-27T13:22:17Z", "bug_id": 51150, "creation_time": "2012-04-27T13:22:17Z", "is_private": false}, {"count": 21, "text": "See bug 43940, now resolved. Please verify and close if satisfied.", "bug_id": 51150, "attachment_id": null, "id": 158515, "time": "2012-04-29T17:13:13Z", "creator": "gadams@apache.org", "creation_time": "2012-04-29T17:13:13Z", "tags": [], "is_private": false}, {"count": 22, "tags": [], "bug_id": 51150, "is_private": false, "id": 158996, "attachment_id": null, "creator": "ognjen.d.blagojevic@gmail.com", "creation_time": "2012-05-12T22:37:03Z", "time": "2012-05-12T22:37:03Z", "text": "Test project attached to this issue now doesn't complain about the leak. I'm closing the bug.\n\nThank you.\n\n-Ognjen"}]