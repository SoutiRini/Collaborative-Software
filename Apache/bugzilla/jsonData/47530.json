[{"count": 0, "attachment_id": null, "bug_id": 47530, "is_private": false, "id": 128853, "time": "2009-07-14T17:17:28Z", "creator": "pablo.ruiz@gmail.com", "creation_time": "2009-07-14T17:17:28Z", "tags": [], "text": "While trying to create a PDF file using the attached fo file as source, I got the followin error:\n\n$ fop -fo tmpfo2.xml -pdf tmp.pdf\n\n... removed output for brevity ...\n\njava.lang.ClassCastException: org.apache.fop.layoutmgr.InlineKnuthSequence\n        at org.apache.fop.cli.InputHandler.transformTo(InputHandler.java:168)\n        at org.apache.fop.cli.InputHandler.renderTo(InputHandler.java:115)\n        at org.apache.fop.cli.Main.startFOP(Main.java:166)\n        at org.apache.fop.cli.Main.main(Main.java:197)\n\n---------\n\njava.lang.ClassCastException: org.apache.fop.layoutmgr.InlineKnuthSequence\n        at org.apache.fop.layoutmgr.BlockStackingLayoutManager.wrapPositionElements(BlockStackingLayoutManager.java:1454)\n        at org.apache.fop.layoutmgr.BlockStackingLayoutManager.wrapPositionElements(BlockStackingLayoutManager.java:1439)\n        at org.apache.fop.layoutmgr.BlockContainerLayoutManager$BlockContainerBreaker.getNextKnuthElements(BlockContainerLayoutManager.java:615)\n        at org.apache.fop.layoutmgr.AbstractBreaker.getNextBlockList(AbstractBreaker.java:551)\n        at org.apache.fop.layoutmgr.AbstractBreaker.doLayout(AbstractBreaker.java:301)\n        at org.apache.fop.layoutmgr.BlockContainerLayoutManager.getNextKnuthElements(BlockContainerLayoutManager.java:356)\n        at org.apache.fop.layoutmgr.table.TableCellLayoutManager.getNextKnuthElements(TableCellLayoutManager.java:170)\n        at org.apache.fop.layoutmgr.table.TableContentLayoutManager.createElementsForRowGroup(TableContentLayoutManager.java:490)\n        at org.apache.fop.layoutmgr.table.TableContentLayoutManager.getKnuthElementsForRowIterator(TableContentLayoutManager.java:251)\n        at org.apache.fop.layoutmgr.table.TableContentLayoutManager.getNextKnuthElements(TableContentLayoutManager.java:179)\n        at org.apache.fop.layoutmgr.table.TableLayoutManager.getNextKnuthElements(TableLayoutManager.java:243)\n        at org.apache.fop.layoutmgr.table.TableCellLayoutManager.getNextKnuthElements(TableCellLayoutManager.java:170)\n        at org.apache.fop.layoutmgr.table.TableContentLayoutManager.createElementsForRowGroup(TableContentLayoutManager.java:490)\n        at org.apache.fop.layoutmgr.table.TableContentLayoutManager.getKnuthElementsForRowIterator(TableContentLayoutManager.java:251)\n        at org.apache.fop.layoutmgr.table.TableContentLayoutManager.getNextKnuthElements(TableContentLayoutManager.java:179)\n        at org.apache.fop.layoutmgr.table.TableLayoutManager.getNextKnuthElements(TableLayoutManager.java:243)\n        at org.apache.fop.layoutmgr.StaticContentLayoutManager$StaticContentBreaker.getNextKnuthElements(StaticContentLayoutManager.java:317)\n        at org.apache.fop.layoutmgr.AbstractBreaker.getNextBlockList(AbstractBreaker.java:551)\n        at org.apache.fop.layoutmgr.AbstractBreaker.doLayout(AbstractBreaker.java:301)\n        at org.apache.fop.layoutmgr.StaticContentLayoutManager.doLayout(StaticContentLayoutManager.java:239)\n        at org.apache.fop.layoutmgr.PageSequenceLayoutManager.layoutSideRegion(PageSequenceLayoutManager.java:407)\n        at org.apache.fop.layoutmgr.PageSequenceLayoutManager.finishPage(PageSequenceLayoutManager.java:415)\n        at org.apache.fop.layoutmgr.PageSequenceLayoutManager.activateLayout(PageSequenceLayoutManager.java:146)\n        at org.apache.fop.area.AreaTreeHandler.endPageSequence(AreaTreeHandler.java:233)\n        at org.apache.fop.fo.pagination.PageSequence.endOfNode(PageSequence.java:145)\n        at org.apache.fop.fo.FOTreeBuilder$MainFOHandler.endElement(FOTreeBuilder.java:378)\n        at org.apache.fop.fo.FOTreeBuilder.endElement(FOTreeBuilder.java:194)\n        at org.apache.xalan.transformer.TransformerIdentityImpl.endElement(TransformerIdentityImpl.java:1101)\n        at org.apache.xerces.parsers.AbstractSAXParser.endElement(Unknown Source)\n        at org.apache.xerces.impl.XMLNSDocumentScannerImpl.scanEndElement(Unknown Source)\n        at org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher.dispatch(Unknown Source)\n        at org.apache.xerces.impl.XMLDocumentFragmentScannerImpl.scanDocument(Unknown Source)\n        at org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)\n        at org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)\n        at org.apache.xerces.parsers.XMLParser.parse(Unknown Source)\n        at org.apache.xerces.parsers.AbstractSAXParser.parse(Unknown Source)\n        at org.apache.xalan.transformer.TransformerIdentityImpl.transform(TransformerIdentityImpl.java:484)\n        at org.apache.fop.cli.InputHandler.transformTo(InputHandler.java:165)\n        at org.apache.fop.cli.InputHandler.renderTo(InputHandler.java:115)\n        at org.apache.fop.cli.Main.startFOP(Main.java:166)\n        at org.apache.fop.cli.Main.main(Main.java:197)\n\n\nPD: I have tried with 0.95 and 0.94 (jdk13) without success.."}, {"count": 1, "tags": [], "bug_id": 47530, "attachment_id": 23983, "id": 128854, "time": "2009-07-14T17:19:11Z", "creator": "pablo.ruiz@gmail.com", "creation_time": "2009-07-14T17:19:11Z", "is_private": false, "text": "Created attachment 23983\nSample (but a bit complex) fo file to reproduce the problem.."}, {"count": 2, "tags": [], "bug_id": 47530, "attachment_id": null, "text": "After a bit of work, I've managed to make a patch overcoming this bug.\n\nSee attached patch, and simplified fo file to reproduce the problem.\n\nGreets.", "id": 128855, "time": "2009-07-14T19:19:42Z", "creator": "pablo.ruiz@gmail.com", "creation_time": "2009-07-14T19:19:42Z", "is_private": false}, {"count": 3, "tags": [], "creator": "pablo.ruiz@gmail.com", "attachment_id": 23984, "text": "Created attachment 23984\nSimplified failing fo file.", "id": 128856, "time": "2009-07-14T19:20:32Z", "bug_id": 47530, "creation_time": "2009-07-14T19:20:32Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 47530, "attachment_id": 23985, "text": "Created attachment 23985\nPatch fixing the problem..", "id": 128857, "time": "2009-07-14T19:21:41Z", "creator": "pablo.ruiz@gmail.com", "creation_time": "2009-07-14T19:21:41Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 47530, "attachment_id": null, "text": "\nNot sure what to do with this. The patch just seems copied over from FOP Trunk (?)\n\nThe 0.94 release is considered final, and no changes are made anymore to the corresponding development branch. If you really need the fix, then it is recommended to use the more recent version.\n\nAnyway, may be good to have in the archives for people that are stuck on 0.94, but still a WONTFIX...", "id": 128882, "time": "2009-07-15T13:07:07Z", "creator": "adelmelle@apache.org", "creation_time": "2009-07-15T13:07:07Z", "is_private": false}, {"count": 6, "tags": [], "bug_id": 47530, "attachment_id": null, "text": "The patch includes some fixes back-ported from turnk.. But the following code was not at trunk, nor 0.95.. see near the end of the patch.\n\nAlso, the problem can be reproduced with 0.95, but bugzilla didnt allow me to select more than one version.. \n\nSo i'm pretty sure this is a fix needed on trunk..\n\ndiff -Nru fop-0.94-orig/src/java/org/apache/fop/layoutmgr/BlockContainerLayoutManager.java fop-0.94-src/src/java/org/apache/fop/layoutmgr/BlockContainerLayoutManager.java\n--- fop-0.94-orig/src/java/org/apache/fop/layoutmgr/BlockContainerLayoutManager.java\t2007-04-03 21:40:14.000000000 +0200\n+++ fop-0.94-src/src/java/org/apache/fop/layoutmgr/BlockContainerLayoutManager.java\t2009-07-15 04:09:21.000000000 +0200\n@@ -65,6 +65,7 @@\n     \n     // When viewport should grow with the content.\n     private boolean autoHeight = true; \n+    private boolean inlineElementList = false;\n     \n     /* holds the (one-time use) fo:block space-before\n     and -after properties.  Large fo:blocks are split\n@@ -205,6 +206,10 @@\n             //(i.e., it depends on content's blockprogression-dimension)\" (XSL 1.0, 7.14.1)\n             allocBPD = maxbpd;\n             autoHeight = true;\n+            if (getBlockContainerFO().getReferenceOrientation() == 0) {\n+                //Cannot easily inline element list when ref-or=\"180\" \n+                inlineElementList = true;\n+            }\n         } else {\n             allocBPD = height.getValue(this); //this is the content-height\n             allocBPD += getBPIndents();\n@@ -267,13 +272,22 @@\n         addKnuthElementsForBorderPaddingBefore(returnList, !firstVisibleMarkServed);\n         firstVisibleMarkServed = true;\n \n-        if (autoHeight) {\n+        if (autoHeight && inlineElementList) {\n             //Spaces, border and padding to be repeated at each break\n             addPendingMarks(context);\n \n+\t    LayoutManager tmpLM;\n             BlockLevelLayoutManager curLM; // currently active LM\n             BlockLevelLayoutManager prevLM = null; // previously active LM\n-            while ((curLM = (BlockLevelLayoutManager) getChildLM()) != null) {\n+            while ((tmpLM = (LayoutManager) getChildLM()) != null) {\n+\t\tif (!(tmpLM instanceof BlockLevelLayoutManager)) {\n+\t                log.error(\"area of type: \"+ tmpLM.getClass().getName() + \" not allowed under flow - ignoring\");\n+        \t        tmpLM.setFinished(true);\n+                \tcontinue;\n+\t        }\n+\n+\t\tcurLM = (BlockLevelLayoutManager)tmpLM;\n+\n                 LayoutContext childLC = new LayoutContext(0);\n                 childLC.copyPendingMarksFrom(context);\n                 // curLM is a ?", "id": 128883, "time": "2009-07-15T13:28:32Z", "creator": "pablo.ruiz@gmail.com", "creation_time": "2009-07-15T13:28:32Z", "is_private": false}, {"count": 7, "tags": [], "bug_id": 47530, "attachment_id": null, "id": 128889, "time": "2009-07-15T13:58:34Z", "creator": "adelmelle@apache.org", "creation_time": "2009-07-15T13:58:34Z", "is_private": false, "text": "\nI see... Checked and confirmed. The sample testcase fails validation in fop-trunk, but that was easily fixed by removing the rowspan from the table-cell.\n\nAfter doing that, I get the ClassCastException too. Also occurs if you remove the block-container from the picture. \nAt any rate, I think the fix is even simpler. In that particular code-blocks, there seems to be no reason whatsoever to use the BlockLevelLM interface and we can simply declare the variables as plain LayoutManager. We can use a similar check as is now made in FlowLM (in trunk), since the wrapper should definitely not be ignored. If it only contains an empty block, it makes no difference, but if the block has content, then that should be rendered normally.\nThe check should probably be factored into a separate method to avoid unnecessary code-duplication. The fact that I had this fixed for FlowLM at some point, and now the same issue still exists for two other BlockStackingLMs just screams for improvement...\n\nThanks for reporting!"}, {"count": 8, "attachment_id": null, "bug_id": 47530, "is_private": false, "id": 132571, "time": "2009-12-01T23:19:16Z", "creator": "ms419@freezone.co.uk", "creation_time": "2009-12-01T23:19:16Z", "tags": [], "text": "Currently experiencing this problem with trunk revision 834135 and,\n\n  [...]\n  <fo:list-item-body>\n    <fo:wrapper>\n      [...]\n    </fo:wrapper>\n  </fo:list-item-body>\n  [...]\n\njava.lang.ClassCastException: org.apache.fop.layoutmgr.InlineKnuthSequence canno\nt be cast to org.apache.fop.layoutmgr.ListElement\n        at org.apache.fop.cli.InputHandler.transformTo(InputHandler.java:302)\n        at org.apache.fop.cli.InputHandler.renderTo(InputHandler.java:130)\n        at org.apache.fop.cli.Main.startFOP(Main.java:174)\n        at org.apache.fop.cli.Main.main(Main.java:205)"}, {"count": 9, "attachment_id": 26611, "bug_id": 47530, "is_private": false, "id": 144004, "time": "2011-02-06T05:39:44Z", "creator": "adelmelle@apache.org", "creation_time": "2011-02-06T05:39:44Z", "tags": [], "text": "Created attachment 26611\npotential fix\n\nAttached patch fixes the issue (+ updates test case wrapper_block.xml), for all potential parents to the fo:wrapper except fo:list-item-label.\n\nOne additional issue with wrappers as children of a regular block pops up (see comment in test case), but that is not related to this one."}, {"count": 10, "attachment_id": 26613, "creator": "adelmelle@apache.org", "is_private": false, "id": 144007, "time": "2011-02-06T11:30:21Z", "bug_id": 47530, "creation_time": "2011-02-06T11:30:21Z", "tags": [], "text": "Created attachment 26613\nrevised patch\n\nSlightly revised patch, attempting at the same time to suppress the spurious lineArea produced by the second example in the test case. So far, only managed to reduce the lineArea's bpd to 0.\n\nGiven bug 50724, it may prove necessary to revise the whole approach... We need to make sure addAreas() is called once for every page the wrapper appears on, etc. Maybe, share more with InlineLayoutManager than LeafNodeLayoutManager?"}, {"count": 11, "tags": [], "bug_id": 47530, "is_private": false, "text": "this bug has no FO test input file on which to perform a test on current trunk; the obsoleted \"Simplified failing fo file\" is not usable due to failing for other reasons; please submit an input test file to obtain any further action on this bug, otherwise it will be moved to resolved+wontfix; alternatively, and better, close this bug and file a new bug based on the current state of trunk, providing new patch and input test file", "id": 157027, "time": "2012-04-01T19:55:21Z", "creator": "gadams@apache.org", "creation_time": "2012-04-01T19:55:21Z", "attachment_id": null}, {"count": 12, "tags": [], "creator": "gadams@apache.org", "attachment_id": null, "text": "resetting P2 open bugs to P3 pending further review", "id": 157477, "time": "2012-04-07T01:43:33Z", "bug_id": 47530, "creation_time": "2012-04-07T01:43:33Z", "is_private": false}, {"count": 13, "tags": [], "creator": "gadams@apache.org", "attachment_id": null, "id": 157849, "time": "2012-04-11T03:20:49Z", "bug_id": 47530, "creation_time": "2012-04-11T03:20:49Z", "is_private": false, "text": "increase priority for bugs with a patch"}, {"count": 14, "attachment_id": null, "bug_id": 47530, "is_private": false, "id": 158118, "time": "2012-04-17T06:08:52Z", "creator": "gadams@apache.org", "creation_time": "2012-04-17T06:08:52Z", "tags": [], "text": "see http://wiki.apache.org/xmlgraphics-fop/Design/XslFo/Wrapper"}]