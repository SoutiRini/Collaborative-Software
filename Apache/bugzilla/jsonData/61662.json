[{"count": 0, "attachment_id": null, "bug_id": 61662, "text": "/usr/sbin/apachectl is hardcoded to check port 80, instead of reading the port from /etc/apache2/ports.conf which means that e.g. `apachectl status` fails for servers which listen on non-standard ports.", "id": 201653, "time": "2017-10-25T03:55:25Z", "creator": "kai@gss.us", "creation_time": "2017-10-25T03:55:25Z", "tags": [], "is_private": false}, {"count": 1, "tags": [], "bug_id": 61662, "attachment_id": null, "id": 201771, "time": "2017-10-29T17:10:55Z", "creator": "toscano.luca@gmail.com", "creation_time": "2017-10-29T17:10:55Z", "is_private": false, "text": "Hi,\n\nconfigure offers '--with-port' that afaics should be able to set a different port for apachectl (see https://github.com/apache/httpd/blob/trunk/support/apachectl.in#L59).\n\nports.conf is a known path for distributions that have adopted this convention, but in my opinion it shouldn't be hardcoded anywhere.\n\nLet me know if this solves your concern!\n\nThanks,\n\nLuca"}, {"count": 2, "tags": [], "bug_id": 61662, "text": "Luca,\n\nI sincerely hope you're not suggesting I resolve a runtime configuration conflict by recompiling the software.\nMore generally, in stead of ports.conf, apachectl needs to obey the server's Listen directive, or have its own configuration file which can be updated in tandem with the server config.\nHaving to modify a /usr/sbin/ script in order to make the tool work, which is not persistent across upgrades, is utterly unacceptable design.", "id": 201864, "time": "2017-11-03T05:13:22Z", "creator": "kai@gss.us", "creation_time": "2017-11-03T05:13:22Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 61662, "text": "\"apachectl status\" is silly to begin with, it unlikelt to be extended to find an appropriate port to use by parsing the configuration.", "id": 201872, "time": "2017-11-03T12:33:03Z", "creator": "covener@gmail.com", "creation_time": "2017-11-03T12:33:03Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "creator": "toscano.luca@gmail.com", "attachment_id": null, "text": "(In reply to Kai from comment #2)\n> Luca,\n> \n> I sincerely hope you're not suggesting I resolve a runtime configuration\n> conflict by recompiling the software.\n\nI was only trying to explain why apachectl behaves in the way that you described, that's all :)\n\n> More generally, in stead of ports.conf, apachectl needs to obey the server's\n> Listen directive, or have its own configuration file which can be updated in\n> tandem with the server config.\n\nUsing httpd's configuration might not be the best way to configure apachectl, since you could, for example, have multiple Listens/ports combination but mod-status configured only for one virtualhost.\n\n> Having to modify a /usr/sbin/ script in order to make the tool work, which\n> is not persistent across upgrades, is utterly unacceptable design.\n\nI agree that apachectl status is not really configurable, but the functionality should not be there in the first place in my opinion. Checking the health of httpd can be done in several ways with other tools, that are build with some logic that knows where/how to get mod-status' data.\n\nLet me know if you have a use case that strictly requires apachectl status to work, and we can discuss what to do. \n\nSide note: I'd like to keep the conversation polite and constructive, since httpd is maintained by a community of people that have no interest in turning down ideas or improvements. So if you have a proposal or a patch that works for your use case you are free to submit it for review :)\n\nThanks!", "id": 201898, "time": "2017-11-04T12:27:12Z", "bug_id": 61662, "creation_time": "2017-11-04T12:27:12Z", "is_private": false}, {"count": 5, "tags": [], "creator": "kai@gss.us", "attachment_id": null, "text": "Eric,\n\nPrecisely how is it 'silly'?\nIs there another command-line tool to query this information (aside from e.g. installing a browser) which is more suitable?\n\nLucas,\n\nI don't know if there is a _strict_ need for this tool, but, then again, it's arguable we could do without most tools in most situations.\n\nThe issue is that, without it, I'm not aware of any way without a web browser (or some facsimile thereof) to query that information; more particularly, the only way to access the information (as documented by the module) is through the web server on whatever host/port it's configured to listen on.\n\nWhat the tool offers is (in theory) a reliable, consistent, standard way to get this information. If it were designed properly, it would be useful for querying the status of a server quickly, without having to determine the listening port manually, install a web browser (even Links/Lynx aren't guaranteed to be present on a headless machine, and nonstandard ports may very well be firewalled, if apache is acting as a backend server for e.g. a nginx frontend), and type out the address and port in order to get the info one needs.\n\nI suppose curl makes a decent fallback for querying the status via ?auto, since that doesn't fill the screen with HTML markup, but then I'm just typing out the port manually every time instead of modifying the script every time I upgrade apache.", "id": 201915, "time": "2017-11-05T00:59:05Z", "bug_id": 61662, "creation_time": "2017-11-05T00:59:05Z", "is_private": false}, {"count": 6, "tags": [], "bug_id": 61662, "text": "(In reply to Kai from comment #5)\n> \n> Is there another command-line tool to query this information (aside from\n> e.g. installing a browser) which is more suitable?\n\nYou could get all the \"IP:port\" some httpd instance is listening on with something like:\n\n# netstat -lntp |grep \"`cat /path/to/httpd.pid`/httpd\" |awk '{print $4}'\n\n(it may depend on your exact netstat output, so adjust to your needs).", "id": 201916, "time": "2017-11-05T01:17:01Z", "creator": "ylavic.dev@gmail.com", "creation_time": "2017-11-05T01:17:01Z", "is_private": false, "attachment_id": null}, {"count": 7, "tags": [], "text": "(In reply to Kai from comment #5)\n> Eric,\n> \n> Precisely how is it 'silly'?\n> Is there another command-line tool to query this information (aside from\n> e.g. installing a browser) which is more suitable?\n\nthe apachectl in the source distribution just runs lynx.", "attachment_id": null, "id": 201917, "creator": "covener@gmail.com", "time": "2017-11-05T01:18:45Z", "bug_id": 61662, "creation_time": "2017-11-05T01:18:45Z", "is_private": false}]