[{"count": 0, "tags": [], "bug_id": 51899, "attachment_id": 27612, "id": 149850, "time": "2011-09-27T15:40:41Z", "creator": "brouleau21@gmail.com", "creation_time": "2011-09-27T15:40:41Z", "is_private": false, "text": "Created attachment 27612\noriginal broken jsp and its generated _jsp.java and two (incomplete) working versions (.jsp and _jsp.java) all in a zip file\n\nI have this file (see included file) that generates the exception:\njava.lang.Error: Unresolved compilation problem without any further informtaion.\n\nThe original jsp file is 144,158 bytes.\nThe generated _jsp.java file is 259,684 bytes.\n\nIf I remove one (fairly small) section, then the file loads without any problem. Putting it back and removing another part of the file also works fine. I have included the original broken jsp and its generated _jsp.java and two (incomplete) working versions (.jsp and _jsp.java) all in a zip file\n\nThat happens on:\nTomcat Version: Apache Tomcat/7.0.21\nJVM Version: 1.6.0_27-b07\nOS Name: Windows Server 2008 v6.0 / amd64\n\nThe (almost) exact same files works fine on:\nTomcat Version: Apache Tomcat/6.0.29\nJVM Version: 1.6.0_21\nOS Name: Windows Server 2008 R2 (6.1) (64 bits)"}, {"count": 1, "tags": [], "bug_id": 51899, "attachment_id": null, "text": "The JSP is too large. There are limits imposed by the Java Language specification that I suspect this JSP is breaking. I tried to get the Java file to compile to confirm this but there are just way too many compilation errors to fix.\n\nThe JSP generation has changed slightly between 6.0.x and 7.0.x and is probably what has sent this JSP over the edge.\n\nThere are various ways to reduce the size of the generated file. The users mailing list can provide advice on that if required.", "id": 149852, "time": "2011-09-27T17:06:17Z", "creator": "markt@apache.org", "creation_time": "2011-09-27T17:06:17Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 51899, "attachment_id": null, "text": "I toke the generated _jsp.java and compiled it successfully using Ant 1.8.2, so the java size limitation is NOT an issue here.\n\nI did put the files as examples and you would require a good part of my project in order to compile this successfully. Sorry for that, but that is the only example I had.\n\nThanks", "id": 149853, "time": "2011-09-27T17:09:54Z", "creator": "brouleau21@gmail.com", "creation_time": "2011-09-27T17:09:54Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 51899, "attachment_id": null, "text": "Ant is not a compiler. You must have used a compiler that scrapes-by and missed the per-method bytecode limitation. Tomcat uses the Eclipse compiler by default which may have other kinds of optimizations (or not) available that result in more bytecode.\n\nYou can configure Tomcat to use the compiler of your choice (see the documentation in conf/web.xml for JspServlet). If you find a compiler that can compile your huge JSP, go ahead and use that instead of Eclipse.", "id": 149855, "time": "2011-09-27T18:13:17Z", "creator": "chris@christopherschultz.net", "creation_time": "2011-09-27T18:13:17Z", "is_private": false}, {"count": 4, "tags": [], "creator": "knst.kolinko@gmail.com", "text": "(In reply to comment #3)\n> You can configure Tomcat to use the compiler of your choice ..\n\nOr can configure JspServlet to generate a different java file.\n\nYou may try to set mappedfile init parameter to the value of false.\n\nhttp://tomcat.apache.org/tomcat-7.0-doc/jasper-howto.html\n\nWhile you may have more luck with some combination of options, the Java platform limits (or actually class file format limits) are always there and nothing can be done with that.\n\n\nRe-closing as INVALID.", "id": 149856, "time": "2011-09-27T18:24:05Z", "bug_id": 51899, "creation_time": "2011-09-27T18:24:05Z", "is_private": false, "attachment_id": null}]