[{"count": 0, "tags": [], "creator": "esuastegui@quest.com", "attachment_id": null, "id": 31619, "time": "2003-02-19T18:12:28Z", "bug_id": 17211, "creation_time": "2003-02-19T18:12:28Z", "is_private": false, "text": "I am running Tomcat 4.1.18 with JDK 1.4.1.01, and use the xtags library for\nserver-side XSL transformation (XSLT). The first time I access the page that\nincludes XML to be displayed through xtags' XSLT, it works. The 2nd time, it\nfails (see exception stack trace below), the 3rd time it works, the 4th time\nit fails, and so on--odds are okay; evens fail. I do not have this problem\nwith either Tomcat 4.0.3 or 4.0.6; when I switch to these versions, all\nworks as expected. I have also tried disabling taglibs pooling in the\nweb.xml for 4.1.18, and though that works, it is a work-around, so I offer the \nfollowing fix.\n\nWith thanks to David Spencer for pointing me in the right direction, I would\nlike to submit the following fix to \norg.apache.taglibs.xtags.xslt.StyleTag.java. I only list code that has\nchanged from the source base (which I downloaded 3 days ago).\n\n    /** Perform the transformation and render the output.\n      *\n      * @exception JspException if a JSP exception occurs\n      */\n    public int doEndTag() throws JspException {\n        if ( xml == null || xsl == null ) {\n            throw new JspException( \"Must specify both XML and an XSLT to\nstyle\" );\n        }\n        \n        // Prepare an input source for the data\n        System.out.print(\"XML: \");\n        Source data = getSource(xml);\n\n        // Prepare an input source for the stylesheet\n        System.out.print(\"XSL: \");\n        Source style = getSource(xsl);\n\n        // Prepare an output source for the outputs\n        Result result = getResult();\n\n        // Use JAXP to perform the stylesheet\n        try {\n            TransformerFactory factory = TransformerFactory.newInstance();\n            factory.setURIResolver( createURIResolver() );\n            Transformer transformer = factory.newTransformer(style);\n            configure(transformer);\n            transformer.transform( data, result );\n            if ( stringWriter != null ) {\n                pageContext.getOut().write( stringWriter.toString() );\n            }\n        } \n        catch (TransformerException e) {\n            handleException(e);\n        }\n        catch (IOException e) {\n            handleException(e);\n        }\n        finally {\n            stringWriter = null;\n            // Release state to help out with Tomcat 4.1.18:\n            cleanUp();\n        }\n\treturn EVAL_PAGE;\n    }\n    \n    /**\n     * Since Tomcat 4.1.18 uses taglibs pooling, we must clean up (release\n     * state) after doEndTag().\n     * E. Suastegui -- 02/14/03\n     */\n    private void cleanUp()\n    {\n        xml = null;\n        xsl = null;\n        result = null;\n        parameters = null;\n    }\n\n    \n    /**\n     * Release any allocated resources.\n     */\n    public void release() {\n\t    cleanUp();\n    }"}, {"count": 1, "tags": [], "bug_id": 17211, "attachment_id": null, "is_private": false, "id": 32734, "time": "2003-03-09T07:41:29Z", "creator": "valentine@library.ucsb.edu", "creation_time": "2003-03-09T07:41:29Z", "text": "Just ran into this problem. My fix. Parse it first\n\n<xtags:parse id=\"areport\">\n   some information\n</xtags:parse>\n<xtags:style document=\"<%= areport %>\"\n style=\"style\" />"}, {"count": 2, "tags": [], "text": "Resolving. Taglib has been retired.", "attachment_id": null, "id": 132443, "creator": "bayard@apache.org", "time": "2009-11-29T19:47:11Z", "bug_id": 17211, "creation_time": "2009-11-29T19:47:11Z", "is_private": false}]