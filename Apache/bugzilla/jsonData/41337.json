[{"count": 0, "tags": [], "text": "If a client does not have a client certificate or doesn't select a client\ncertificate to be used for authentication, Tomcat does not display an error\npage. It just does nothing (that the client would see).\n\nSteps to reproduce:\n1. configure an ssl connector and set clientAuth=\"false\"\n2. create a security-constaint in the web.xml of the webapp\n3. set the login-config in the web.xml to this:\n  <login-config>\n  <auth-method>CLIENT-CERT</auth-method>\n  </login-config>\n4. try to access the page without a client certificate", "attachment_id": null, "id": 97866, "creation_time": "2007-01-10T00:36:44Z", "time": "2007-01-10T00:36:44Z", "creator": "arminha@student.ethz.ch", "bug_id": 41337, "is_private": false}, {"count": 1, "tags": [], "text": "org.apache.catalina.authenticator.SSLAuthenticator.authenticate() it tests if\nthe client has a certificate and displays an error page if not. But the client\ndoesn't get that error page.\n\nif ((certs == null) || (certs.length < 1)) {\n            if (containerLog.isDebugEnabled())\n                containerLog.debug(\"  No certificates included with this request\");\n            response.sendError(HttpServletResponse.SC_BAD_REQUEST,\n                               sm.getString(\"authenticator.certificates\"));\n            return (false);\n        }\n", "attachment_id": null, "id": 97868, "creation_time": "2007-01-10T00:50:00Z", "time": "2007-01-10T00:50:00Z", "creator": "arminha@student.ethz.ch", "bug_id": 41337, "is_private": false}, {"count": 2, "tags": [], "text": "The bug seems ot be in the JSSE package\nI could solve it by changing the method JSSE14Support.handshake() from:\n\n   protected void handShake() throws IOException {\n        if( ssl.getWantClientAuth() ) {\n            logger.debug(\"No client cert sent for want\");\n        } else {\n            ssl.setNeedClientAuth(true);\n        }\n        synchronousHandshake(ssl);\n    }\n\nto:\n\n    protected void handShake() throws IOException {\n        if( ssl.getNeedClientAuth() ) {\n            logger.debug(\"No client cert sent for want\");\n        } else {\n            ssl.setWantClientAuth(true);\n        }\n        synchronousHandshake(ssl);\n    }\n\nThis way in the above scenario wantClientAuth is set to true. So the SSLSocket\nwould also accept connection without client certificates, but the\nSSLAuthenticator will then display an error page.\n", "attachment_id": null, "id": 97870, "creation_time": "2007-01-10T01:00:15Z", "time": "2007-01-10T01:00:15Z", "creator": "arminha@student.ethz.ch", "bug_id": 41337, "is_private": false}, {"count": 3, "tags": [], "text": "Created attachment 19483\nadded a patch with the proposed change in http://issues.apache.org/bugzilla/show_bug.cgi?id=41337#c2", "attachment_id": 19483, "id": 98750, "creation_time": "2007-01-30T04:09:42Z", "time": "2007-01-30T04:09:42Z", "creator": "arminha@student.ethz.ch", "bug_id": 41337, "is_private": false}, {"count": 4, "attachment_id": null, "creator": "arminha@student.ethz.ch", "is_private": false, "id": 98751, "time": "2007-01-30T04:12:01Z", "bug_id": 41337, "creation_time": "2007-01-30T04:12:01Z", "tags": [], "text": "Does this patch introduce a logical change for applications and therefore need\nan RFE?\n"}, {"count": 5, "tags": [], "creator": "juliusdavies@gmail.com", "attachment_id": null, "id": 98758, "time": "2007-01-30T08:08:45Z", "bug_id": 41337, "creation_time": "2007-01-30T08:08:45Z", "is_private": false, "text": "Hi,\n\nThe only way to present a useful error page is to establish a socket.  JSSE\nwon't let the socket happen if there's a problem with a client cert.  In my mind\nthe only way to provide a useful error page would be to for Tomcat to only ever\nuse \"setWantClientAuth\" (which isn't even available pre Java 1.4 !), and to draw\nan HTML error page for all requests if \"need=true\" is set in Tomcat's own config.\n\nIt's nicer to just leave all this stuff up to JSSE and not worry about it.  By\ncircumventing JSSE's \"no socket for you\" security, Tomcat risks making itself\ninsecure, even though a helpful error page would be *really* handy!\n\nWorkaround:  set your own SSL config in Tomcat to \"WANT\" instead of \"NEED\" (in\nserver.xml) and setup your own ServletFilter on \"/*\" that draws a nice error\npage if no client cert is provided.\n\n<Connector \n           port=\"8443\" minProcessors=\"5\" maxProcessors=\"75\"\n           enableLookups=\"true\" disableUploadTimeout=\"true\"\n           acceptCount=\"100\" debug=\"0\" scheme=\"https\" secure=\"true\";\n           sslProtocol=\"TLS\"\n\nclientAuth=\"want\"\n/>\n"}, {"count": 6, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "id": 98862, "time": "2007-01-31T16:45:12Z", "bug_id": 41337, "creation_time": "2007-01-31T16:45:12Z", "is_private": false, "text": "As Julius notes the desired behaviour is possible with the current configuration\noptions and a little coding. The lack of useful error message when the SSL\nhandshake fails is more a browser failing than a Tomcat one.\n\nI am have changed this issue to an enhancement and am resolving as WONTFIX as I\ndo not believe the benefit of a nice error message outweighs the risk of\nallowing users with invalid certificates to make a successful connection."}, {"count": 7, "tags": [], "text": "The behaviour that I like is a bit different. I have a connector that is\nconfigured with clientAuth=\"none\". And in the web.xml I specify certain pages\nthat require a certificate.\nThis way the user is not bothered with a certificate selection dialog, unless he\naccesses a page where a client cert authensication level is needed. So\nunexpirienced users are not overstrained with selecting a certificate, before\ntheiy can even access the part of the page that does not need such an\nauthentucation.", "attachment_id": null, "id": 99327, "creation_time": "2007-02-13T06:58:14Z", "time": "2007-02-13T06:58:14Z", "creator": "arminha@student.ethz.ch", "bug_id": 41337, "is_private": false}, {"count": 8, "tags": [], "creator": "hauser@acm.org", "attachment_id": null, "id": 99328, "time": "2007-02-13T07:25:23Z", "bug_id": 41337, "creation_time": "2007-02-13T07:25:23Z", "is_private": false, "text": "I second Armin's observation. If we ever want to make client certificate\nauthentication mass-ready, we cannot only rely on browser manufacturers making\nclient-cert-auth dialogs mass proof. It must be possible to first navigate on a\nhttps site/connector and read some \"in-page\" text and possibly submit some form\ninfo securely and only thereafter be confronted with the certificate selection\npopping up.\nDo you have any \"third\" approaches?"}, {"count": 9, "attachment_id": null, "creator": "markt@apache.org", "is_private": false, "id": 145105, "time": "2011-03-19T07:04:23Z", "bug_id": 41337, "creation_time": "2011-03-19T07:04:23Z", "tags": [], "text": "(In reply to comment #7)\n> The behaviour that I like is a bit different. I have a connector that is\n> configured with clientAuth=\"none\". And in the web.xml I specify certain pages\n> that require a certificate.\n\nThis is supported out of the box with CLIENT-CERT.\n\nMy concerns in comment #6 remain and I am therefore re-closing this."}]