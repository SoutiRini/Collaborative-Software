[{"count": 0, "tags": [], "bug_id": 35476, "attachment_id": null, "text": "I use the XMLLogger when starting ANT. The build process takes a long time and \nmakes many output. After a while will crashes with OutOfMemory. \nWhen I don't use the XMLLogger everything works fine.\n\nWhen I take a look in the logger I see, that the logger flush only when the \nbuild finished.\nI mean it will solves the problem when the DOM is written every X event, isn't \nit?", "id": 76633, "time": "2005-06-23T07:29:20Z", "creator": "jmelzer@web.de", "creation_time": "2005-06-23T07:29:20Z", "is_private": false}, {"count": 1, "tags": [], "creator": "jkf@apache.org", "attachment_id": null, "id": 76672, "time": "2005-06-23T18:52:42Z", "bug_id": 35476, "creation_time": "2005-06-23T18:52:42Z", "is_private": false, "text": "No in that case SAX should be used instead of DOM"}, {"count": 2, "tags": [], "bug_id": 35476, "attachment_id": null, "text": "I am not interested how the solution will be I am interested in a solution.\nSo you mean it is a bug or not?", "id": 76716, "time": "2005-06-26T19:10:04Z", "creator": "jmelzer@web.de", "creation_time": "2005-06-26T19:10:04Z", "is_private": false}, {"count": 3, "tags": [], "text": "Seems to me not a bug but rather an design flaw for \"large\" builds. Also, a \nlittle more care should be applied to how you phrase your updates so they don't \nsound rude.", "attachment_id": null, "bug_id": 35476, "id": 76717, "time": "2005-06-26T19:56:14Z", "creator": "phil.weighill-smith@volantis.com", "creation_time": "2005-06-26T19:56:14Z", "is_private": false}, {"count": 4, "attachment_id": null, "creator": "alexeys@inventigo.com", "text": "This is \"as-designed\" behaviour. SAX will not help - it is only for XML reading.\nXMLLogger would have to be rewritten not to create DOM document in memory, \nbut to incrementally output XML as text directly into a file. If you are in a\nhurry, \njust write your own logger. You can look at the current XMLLogger implementation\nin ANT source distribution, in FishEye: \nhttp://www.cenqua.com/fisheye/demo/viewrep/ant/src/main/org/apache/tools/ant/XmlLogger.java\n\n\n- Alexey.", "id": 76718, "time": "2005-06-26T20:15:56Z", "bug_id": 35476, "creation_time": "2005-06-26T20:15:56Z", "tags": [], "is_private": false}, {"count": 5, "tags": [], "bug_id": 35476, "attachment_id": null, "text": "... or just increase your ANT JVM maximum memory size.", "id": 76719, "time": "2005-06-26T20:17:31Z", "creator": "alexeys@inventigo.com", "creation_time": "2005-06-26T20:17:31Z", "is_private": false}, {"count": 6, "tags": [], "bug_id": 35476, "attachment_id": null, "text": "Sorry for the sound.\nI give the process about 2 GB.", "id": 76720, "time": "2005-06-26T20:35:57Z", "creator": "jmelzer@web.de", "creation_time": "2005-06-26T20:35:57Z", "is_private": false}, {"count": 7, "tags": [], "text": "Strictly speaking this is not a bug, but a limitation.\n\nThe problem will in that case be that for the attributes to be written one must\nwait with writing the opening tag until all attributes are known, but how to\nknow if all attributes of an opening tag are known, without waiting until the\nelement is closed? In this case still all data would have to be buffered until\nthe build is finished.\n\nThis could by solved of course by using another XML schema, that only uses\nnested elements, and not attributes ( or attributes on a special attributes element)\n\nlike\n\n<output>\n<nested>\nsomedata\n<attributes name=\"value\"/>\n</nested>\n<nested>\n<attributes name=\"value\"/>\n</nested>\n<nested>\n</nested>\n<attributes name=\"value\"/>\n</output>\n\nObviously this would severely impact the XML schema (nothing that cannot be\nsolved by processing using XSLT).", "attachment_id": null, "bug_id": 35476, "id": 76721, "time": "2005-06-26T20:37:07Z", "creator": "jkf@apache.org", "creation_time": "2005-06-26T20:37:07Z", "is_private": false}, {"count": 8, "tags": [], "creator": "alexeys@inventigo.com", "text": "We can try writing all elements as soon as they are closed instead of waiting\nfor the build to finish.", "id": 76722, "time": "2005-06-26T20:43:04Z", "bug_id": 35476, "creation_time": "2005-06-26T20:43:04Z", "is_private": false, "attachment_id": null}, {"count": 9, "tags": [], "bug_id": 35476, "attachment_id": null, "text": "Only if we log the attributes of the build element in an alternative way. (The\nattributes are not known until the build is finished.)", "id": 76723, "time": "2005-06-26T20:54:54Z", "creator": "jkf@apache.org", "creation_time": "2005-06-26T20:54:54Z", "is_private": false}, {"count": 10, "tags": [], "bug_id": 35476, "attachment_id": null, "id": 76724, "creation_time": "2005-06-26T21:02:37Z", "time": "2005-06-26T21:02:37Z", "creator": "jkf@apache.org", "text": "By the way, this would also be valid for container tasks (like parallel or\nsequential).", "is_private": false}, {"count": 11, "attachment_id": null, "creator": "alexeys@inventigo.com", "text": "I agree with you. To make the output incremental, the output format has to be\nchanged.", "id": 76725, "time": "2005-06-26T21:28:51Z", "bug_id": 35476, "creation_time": "2005-06-26T21:28:51Z", "tags": [], "is_private": false}, {"count": 12, "tags": [], "creator": "j_a_fernandez@yahoo.com", "text": "OK, is it every attribute that is unknown at the begining on the startXXX or \njust certain things like \"elapsedTime\" and \"errorStack\" (paraphasing).\n\nMaybe we can just move the things that are really lookaheads to their correct \nplace and make the logger generate SAX events. By using SAX, we gain the fact \nthat we can pipe the events to a stylesheet XSLT, if you do not mind DOM, or \nSTX if you want to continue with streamming (using joost). \n\nThis would be way better. The only thing you need is a way to make sure all \nelements get close after a build fails so that we always get correct XML. I \nmay have some XML SAX filter code that knkows how to do that. If needed.\n", "id": 76730, "time": "2005-06-27T14:11:20Z", "bug_id": 35476, "creation_time": "2005-06-27T14:11:20Z", "is_private": false, "attachment_id": null}, {"count": 13, "attachment_id": null, "creator": "stevel@apache.org", "text": "Well, there is nothing to prevent us from changing the generated XML and the\nstylesheets. What may break is anyone using their own stylesheets.\n\nFor reference, in the distributed JUnit stuff I've done (I hope to demo this at\napachecon soon), I dont use dom/SAX; I just generate simple XML by hand,\nescaping stuff where needed. It's cheap and limited, but works well.\n\nThe problem I had with the existing junit stuff was not memory consumption but\nrobustness: I wanted as much of the XML data written to file, so that if\nsomething crashed, we would have more of a trace.\n\nIn ant, we stick the statistics at the top:\n        rootElement.setAttribute(ATTR_TESTS, \"\" + suite.runCount());\n        rootElement.setAttribute(ATTR_FAILURES, \"\" + suite.failureCount());\n        rootElement.setAttribute(ATTR_ERRORS, \"\" + suite.errorCount());\n        rootElement.setAttribute(ATTR_TIME, \"\" + (suite.getRunTime() / 1000.0));\nwhereas in my (custom) junit logging, I add a new element at the end of the run\n\n        write(\"summary\",\n                a(\"tests\", testCount)\n                +\n                a(\"failures\", failureCount)\n                + a(\"errors\", errorCount),\n                null, false);\n\n        xmlFile.write(ROOT_CLOSE);\nThis leaves something like\n<summary tests=\"4\" failures=\"5\" errors=\"0\" ></summary>\nat the end of the document.", "id": 76969, "time": "2005-07-04T13:39:54Z", "bug_id": 35476, "creation_time": "2005-07-04T13:39:54Z", "tags": [], "is_private": false}, {"count": 14, "tags": [], "bug_id": 35476, "attachment_id": null, "text": "So I use Cruisecontrol too. And when you change the XML-Format the Cruisecontrol\nXSLT will not work anymore, So be careful of changing the format.", "id": 76980, "time": "2005-07-04T22:00:59Z", "creator": "jmelzer@web.de", "creation_time": "2005-07-04T22:00:59Z", "is_private": false}, {"count": 15, "tags": [], "bug_id": 35476, "attachment_id": null, "text": "Maybe instead of updating old logger, it is better to create a new one? In that case we will preserve backward compatibility.", "id": 76984, "time": "2005-07-05T00:18:08Z", "creator": "alexeys@inventigo.com", "creation_time": "2005-07-05T00:18:08Z", "is_private": false}, {"count": 16, "tags": [], "bug_id": 35476, "attachment_id": null, "text": "See bug 35750, I guess, you don't need to rewrite XMLLogger.", "id": 77325, "time": "2005-07-15T11:22:14Z", "creator": "hovan@pobox.sk", "creation_time": "2005-07-15T11:22:14Z", "is_private": false}, {"count": 17, "tags": [], "bug_id": 35476, "attachment_id": null, "id": 77355, "time": "2005-07-16T14:34:17Z", "creator": "jkf@apache.org", "creation_time": "2005-07-16T14:34:17Z", "is_private": false, "text": "The amount of memory needed for the non-closed classloaders under certain\ncircumstances in the junit test task are orders of magnitude lower than the data\nkept for logging in the XMLLogger. This is a problem of its own."}, {"count": 18, "tags": [], "creator": "brett_adam@yahoo.com", "text": "The fact that the XMLLogger keeps the entire log DOM in memory until the end \nof the Ant run causes MASSIVE problems for anyone using Ant to run large build \nscripts. We are seeing Ant logs that are routinely 30MB in size, which consume \nenormous (read: > 800MB) of memory during execution.\n\nPlease consider writing the DOM out as it emerges even if that means the \nintermediate XML output file is invalid XML unti lthe run is over, and even if \nit means aving to disable certain \"features\" like execution timing stats on \neach nested node.", "id": 81524, "time": "2005-10-21T16:42:23Z", "bug_id": 35476, "creation_time": "2005-10-21T16:42:23Z", "is_private": false, "attachment_id": null}, {"count": 19, "tags": [], "bug_id": 35476, "attachment_id": null, "text": "I don't think we can solve this within the constraints of the XmlLogger format - or more precisely while using XML at all.  The fact that targets could be run in parallel means we couldn't write any XML tag that was somehow nested inside a target incrementally at all.\n\nThe only solution can be a different logger IMHO.\n\n*** This bug has been marked as a duplicate of bug 46058 ***", "id": 121760, "time": "2008-10-21T21:11:29Z", "creator": "bodewig@apache.org", "creation_time": "2008-10-21T21:11:29Z", "is_private": false}]