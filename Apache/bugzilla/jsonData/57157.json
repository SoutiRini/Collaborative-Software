[{"count": 0, "tags": [], "creator": "zenzhong8383@gmail.com", "attachment_id": 32157, "text": "Created attachment 32157\nrelated java code files\n\nstack trace:\n28-Oct-2014 11:56:26.891 SEVERE [http-nio-8080-exec-5] org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun \n java.lang.NullPointerException\n        at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1538)\n        at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1523)\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n        at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\n        at java.lang.Thread.run(Thread.java:744)\n\nrelated code:\nTextReadListener\n\tpublic synchronized void onAllDataRead() throws IOException {\n\t\tlogger.debug(\"onAllDataRead\", new Exception(\"onAllDataRead\"));\n\t\tfinal String text = (buf != null ? buf.toString(\"UTF-8\") : \"\");\n\t\tlogger.debug(\"onAllDataRead> text={}\", text);\n\t\tHttpServletRequest req = (HttpServletRequest) asyncCtx.getRequest();\n\t\tlogger.debug(\"onAllDataRead> uri={}, User-Agent={}, params={}\", req.getRequestURI(),\n\t\t\t\treq.getHeader(\"User-Agent\"), req.getParameterMap());\n\t\tfinal ServletOutputStream out = asyncCtx.getResponse().getOutputStream();\n\t\tasyncCtx.start(new Runnable() {\n\t\t\t@Override\n\t\t\tpublic void run() {\n\t\t\t\ttry {\n\t\t\t\t\tlogger.debug(\"start sleep\");\n\t\t\t\t\tTimeUnit.SECONDS.sleep(1);\n\t\t\t\t\tlogger.debug(\"sleep finished, start writing\");\n\t\t\t\t\tWriteListener writeListener = new TextWriteListener((\"test\" + text).getBytes(\"UTF-8\"), asyncCtx,\n\t\t\t\t\t\t\tout);\n\t\t\t\t\tout.setWriteListener(writeListener);\n\t\t\t\t} catch (Throwable e) {\n\t\t\t\t\tlogger.error(\"impossible ex\", e);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\nIf I just invoke out.setWriteListener in onAllDataRead method (not in asyncCtx.start), then that's ok.\n\nDetailed java code is in attachment", "id": 178787, "time": "2014-10-28T09:24:23Z", "bug_id": 57157, "creation_time": "2014-10-28T09:24:23Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 57157, "attachment_id": null, "id": 178825, "time": "2014-10-29T12:33:03Z", "creator": "markt@apache.org", "creation_time": "2014-10-29T12:33:03Z", "is_private": false, "text": "Thanks for the report.\n\nThe NPE was triggered by some faulty error handling which has been fixed in 8.0.x for 8.0.15 onwards.\n\nWith the error handling fixed it was clear that Tomcat was not allowing calls to AsyncContext.start(Runnable) during non-blocking reads and writes. I can see no reason for that restriction - it looks like an oversight when the non-blocking IO support was added - so I have removed it. This fix has also been made in 8.0.x and will be in 8.0.15 onwards."}]