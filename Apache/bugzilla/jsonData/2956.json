[{"count": 0, "tags": [], "text": "Index: jakarta-ant/src/main/org/apache/tools/ant/taskdefs/Touch.java\n===================================================================\nRCS file: /home/cvspublic/jakarta-\nant/src/main/org/apache/tools/ant/taskdefs/Touch.java,v\nretrieving revision 1.8\ndiff -r1.8 Touch.java\n178a179,181\n>         if (millis == 0) {\n>            millis = System.currentTimeMillis();\n>         }\nIndex: jakarta-\nant/src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTestRunner.java\n===================================================================\nRCS file: /home/cvspublic/jakarta-\nant/src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTestRunner.java,v\nretrieving revision 1.12\ndiff -r1.12 JUnitTestRunner.java\n195c195\n<                 suite= new TestSuite(testClass);\n---\n>                 suite= createTestSuite(testClass);\n201a202,210\n>     }\n>     \n>     protected TestSuite createTestSuite(Class testClass)  {\n>        try {\n>           return new TestSuite(testClass);\n>        }\n>        catch (Throwable t) {\n>           return new TestSuite();\n>        }", "is_private": false, "id": 4222, "creator": "richardwan@servidium.com", "time": "2001-08-01T14:58:20Z", "bug_id": 2956, "creation_time": "2001-08-01T14:58:20Z", "attachment_id": null}, {"count": 1, "attachment_id": null, "bug_id": 2956, "is_private": false, "id": 8745, "time": "2001-12-10T08:14:43Z", "creator": "bodewig@apache.org", "creation_time": "2001-12-10T08:14:43Z", "tags": [], "text": "Could you give a rationale for the second patch, please?  Using excludes for\nBatchTest seems a lot cleaner and more explicit.\n\nThe first one has been applied for nightly build 2001-12-11."}, {"count": 2, "attachment_id": null, "bug_id": 2956, "is_private": false, "id": 10234, "time": "2002-02-02T17:47:21Z", "creator": "umagesh@apache.org", "creation_time": "2002-02-02T17:47:21Z", "tags": [], "text": "No user feedback for second part of enhancement request.  Closing it as FIXED \nfor first part, WONTFIX for second part till we get a valid use-case.  Reopen \nwith requested details, if necessary."}, {"count": 3, "tags": [], "bug_id": 2956, "text": "It would be nice, however, if <junit> could just ignore non-\njunit.framework.Test implementing classes rather than having to have an include \npatternset to pick and choose which classes to run.  I'm not sure about that \nparticular patch though - but it would be something nice to have.  I'm going to \nmark the <junit> enhancement as LATER.", "id": 10241, "attachment_id": null, "creator": "jakarta@ehatchersolutions.com", "creation_time": "2002-02-02T21:00:01Z", "time": "2002-02-02T21:00:01Z", "is_private": false}, {"count": 4, "tags": [], "creator": "umagesh@apache.org", "is_private": false, "id": 10403, "creation_time": "2002-02-06T19:36:51Z", "time": "2002-02-06T19:36:51Z", "bug_id": 2956, "text": "Erik:\nWhy would we want to do this, especially since JUnit does not restrict the\ntype of class in any way?\n\n<H3>TestSuite</H3>\n<PRE>\npublic <B>TestSuite</B>(java.lang.Class&nbsp;theClass)</PRE>\n<DL>\n<DD>Constructs a TestSuite from the given class. Adds all the methods\n starting with \"test\" as test cases to the suite.\n Parts of this method was written at 2337 meters in the H\u00fcffih\u00fctte,\n Kanton Uri</DL>\n", "attachment_id": null}, {"count": 5, "tags": [], "creator": "jakarta@ehatchersolutions.com", "is_private": false, "id": 10404, "creation_time": "2002-02-06T19:46:52Z", "time": "2002-02-06T19:46:52Z", "bug_id": 2956, "text": "Sure it does.  JUnit runs Test implementing classes.  Thats all. TestCase and \nTestSuite are two common ones that implement Test.  So, <junit> should really \nonly attempt to run classes that are non-abstract and implement Test.", "attachment_id": null}, {"count": 6, "tags": [], "bug_id": 2956, "text": "The JUnit logic for extracting a test is as follows (latest runner from Erich \nGamma in Eclipse):\n\n1) create instance of class using default ctor. (remember a TestCase has \nnormally a String ctor)\n2) if instanceof TestSuite return;\n3) invoke static suite() method returning a Test and return if no error\n4) wrap the class around a TestSuite and return if no error\n5) return null\n\nThat means that you can have any class successfully considered a test as long \nas it it has a static suite() method returning a class. No need for it to be a \nTest itself (which can be a decorator anyway)\n\n", "id": 10405, "time": "2002-02-06T19:56:31Z", "creator": "sbailliez@apache.org", "creation_time": "2002-02-06T19:56:31Z", "is_private": false, "attachment_id": null}, {"count": 7, "tags": [], "creator": "jakarta@ehatchersolutions.com", "text": "Noted, thanks for the clarification.  Believe it or not I *knew* that \nalready... but wasn't thinking straight earlier.\n\nAnyway, the main point is that <junit> dies if it hits classes that aren't true \nJUnit tests (from the definition Stephane provided).  It'd be nicer if it just \nignored (but warned when skipping) classes that JUnit didn't like.... much like \n<javac> doesn't croak on non-.java files.", "id": 10408, "time": "2002-02-06T21:09:25Z", "bug_id": 2956, "creation_time": "2002-02-06T21:09:25Z", "is_private": false, "attachment_id": null}, {"count": 8, "tags": [], "creator": "umagesh@apache.org", "text": "Doesn't it already do that?  You would get TEST XXX FAILED, if it is not a \nvalid testcase (as defined by Stephane).  Or, do you want it to output\n\"XXX cannot be recognized as a Test by JUnit\"?", "id": 10411, "time": "2002-02-06T21:37:37Z", "bug_id": 2956, "creation_time": "2002-02-06T21:37:37Z", "is_private": false, "attachment_id": null}, {"count": 9, "tags": [], "bug_id": 2956, "text": "I don't want <junit> to get a failure if it hits classes that are not valid \ntests.  You wouldn't want <javac> to fail if it finds a .properties file, \nright?  Same idea.  Its not a huge deal, but something that seems useful to \navoid having to worry about test case naming conventions and using patternsets \nto only include those.", "id": 10413, "attachment_id": null, "creator": "jakarta@ehatchersolutions.com", "creation_time": "2002-02-06T21:49:49Z", "time": "2002-02-06T21:49:49Z", "is_private": false}]