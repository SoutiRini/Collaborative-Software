[{"count": 0, "tags": [], "bug_id": 61424, "attachment_id": 35231, "id": 200323, "time": "2017-08-16T12:22:53Z", "creator": "robert.gherlan@museglobal.ro", "creation_time": "2017-08-16T12:22:53Z", "is_private": false, "text": "Created attachment 35231\nProject used to reproduce the StackOverflowError\n\nWhen run Tomcat 8.5.20 with SecurityManager and catalina.policy contains an javax.management.remote.JMXPrincipal entry and Subject.doAs method is called, then a StackOverflowError is thrown.\nSame error is reproducible in Tomcat 9.0.0.M26, but is not present in Tomcat 8.0.45.\n\nThe test was made using JDK 1.8.0_144.\n\nIn order to reproduce this error, we build a short example(see JMXSubject.war in attachment) containing a simple servlet with the following source code:\n\npackage servlet;\n\nimport java.io.IOException;\nimport java.lang.reflect.InvocationTargetException;\nimport java.security.Principal;\nimport java.security.PrivilegedExceptionAction;\nimport java.util.Collections;\nimport java.util.HashSet;\nimport java.util.Set;\n\nimport javax.security.auth.Subject;\nimport javax.servlet.ServletException;\nimport javax.servlet.annotation.WebServlet;\nimport javax.servlet.http.HttpServlet;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\n\n@WebServlet(\"/\")\npublic class MyServlet extends HttpServlet {\n\n  private static final long serialVersionUID = -1647039991464261998L;\n\n  @Override\n  protected void doGet(HttpServletRequest reqest, HttpServletResponse response) throws ServletException, IOException {\n    Object doAsResult = null;\n    Set<Principal> principals = new HashSet<>();\n    principals.add(new Principal() {\n      @Override\n      public String getName() {\n        return \"myName\";\n      }\n    });\n    Subject subject = new Subject(false, principals, Collections.EMPTY_SET, Collections.EMPTY_SET);\n    try {\n      doAsResult = Subject.doAs(subject, new PrivilegedExceptionAction<Object>() {\n        public Object run() throws IllegalAccessException, InvocationTargetException {\n          return System.currentTimeMillis();\n        }\n      });\n    } catch (Exception e) {\n      e.printStackTrace();\n    }\n    \n    response.getWriter().println(\"CurrentTimeMillis: \" + doAsResult);\n  }\n}\n\nStep to reproduce:\n1) Deploy the provided JMXSubject.war web project (which also includes in the archive the source code) in ${catalina.home}/webapps folder.\n\n2) Add in ${catalina.home}/conf/catalina.policy file the following lines:\n\ngrant codeBase \"file:/-\" {\n  permission java.security.AllPermission;\n};\n\t\ngrant principal javax.management.remote.JMXPrincipal \"jmx\" {\n  permission java.security.AllPermission;\n};\n\n3) Start server with SecurityManager:\ncatalina.bat run -security\n\n4) Access the following page: http://localhost:8080/JMXSubject\n\nNow the following exception is thrown in tomcat 8.5.20:\n\njavax.servlet.ServletException\n\torg.apache.catalina.security.SecurityUtil.execute(SecurityUtil.java:337)\n\torg.apache.catalina.security.SecurityUtil.doAsPrivilege(SecurityUtil.java:170)\n\tjava.security.AccessController.doPrivileged(Native Method)\n\torg.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)\n\tsun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tjava.lang.reflect.Method.invoke(Method.java:498)\n\torg.apache.catalina.security.SecurityUtil$1.run(SecurityUtil.java:282)\n\torg.apache.catalina.security.SecurityUtil$1.run(SecurityUtil.java:279)\n\tjava.security.AccessController.doPrivileged(Native Method)\n\tjavax.security.auth.Subject.doAsPrivileged(Subject.java:549)\n\torg.apache.catalina.security.SecurityUtil.execute(SecurityUtil.java:314)\n\torg.apache.catalina.security.SecurityUtil.doAsPrivilege(SecurityUtil.java:253)\nRoot Cause\n\njava.lang.StackOverflowError\n\tjava.security.AccessController.doPrivileged(Native Method)\n\tjava.io.FilePermission.init(FilePermission.java:203)\n\tjava.io.FilePermission.<init>(FilePermission.java:277)\n\tjava.lang.SecurityManager.checkRead(SecurityManager.java:888)\n\tjava.io.File.isDirectory(File.java:844)\n\tsun.net.www.ParseUtil.fileToEncodedURL(ParseUtil.java:269)\n\tsun.security.provider.PolicyFile.canonicalizeCodebase(PolicyFile.java:1735)\n\tsun.security.provider.PolicyFile.access$700(PolicyFile.java:258)\n\tsun.security.provider.PolicyFile$5.run(PolicyFile.java:1188)\n\tsun.security.provider.PolicyFile$5.run(PolicyFile.java:1186)\n\tjava.security.AccessController.doPrivileged(Native Method)\n\tsun.security.provider.PolicyFile.getPermissions(PolicyFile.java:1185)\n\tsun.security.provider.PolicyFile.getPermissions(PolicyFile.java:1132)\n\tsun.security.provider.PolicyFile.implies(PolicyFile.java:1086)\n\tjava.security.ProtectionDomain.implies(ProtectionDomain.java:285)\n\tjava.security.AccessControlContext.checkPermission(AccessControlContext.java:450)\n\tjava.security.AccessController.checkPermission(AccessController.java:884)\n\tjava.lang.SecurityManager.checkPermission(SecurityManager.java:549)\n\tsun.misc.URLClassPath.check(URLClassPath.java:642)\n\tsun.misc.URLClassPath$JarLoader.checkResource(URLClassPath.java:961)\n\tsun.misc.URLClassPath$JarLoader.getResource(URLClassPath.java:1044)\n\tsun.misc.URLClassPath.getResource(URLClassPath.java:239)\n\tsun.misc.URLClassPath.getResource(URLClassPath.java:292)\n\tjava.lang.ClassLoader.getBootstrapResource(ClassLoader.java:1264)\n\tjava.lang.ClassLoader.getResource(ClassLoader.java:1093)\n\torg.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1194)\n\torg.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1119)\n\tjava.lang.Class.forName0(Native Method)\n\tjava.lang.Class.forName(Class.java:348)\n\tsun.security.provider.PolicyFile.addPermissions(PolicyFile.java:1357)\n\tsun.security.provider.PolicyFile.getPermissions(PolicyFile.java:1228)\n\tsun.security.provider.PolicyFile.getPermissions(PolicyFile.java:1191)\n\tsun.security.provider.PolicyFile.getPermissions(PolicyFile.java:1132)\n\tsun.security.provider.PolicyFile.implies(PolicyFile.java:1086)\n\tjava.security.ProtectionDomain.implies(ProtectionDomain.java:285)\n\tjava.security.AccessControlContext.checkPermission(AccessControlContext.java:450)\n\tjava.security.AccessController.checkPermission(AccessController.java:884)\n\tjava.lang.SecurityManager.checkPermission(SecurityManager.java:549)\n\tsun.misc.URLClassPath.check(URLClassPath.java:642)\n\tsun.misc.URLClassPath$JarLoader.checkResource(URLClassPath.java:961)\n\tsun.misc.URLClassPath$JarLoader.getResource(URLClassPath.java:1044)\n\tsun.misc.URLClassPath.getResource(URLClassPath.java:239)\n\tsun.misc.URLClassPath.getResource(URLClassPath.java:292)\n\tjava.lang.ClassLoader.getBootstrapResource(ClassLoader.java:1264)\n\tjava.lang.ClassLoader.getResource(ClassLoader.java:1093)\n\torg.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1194)\n\torg.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1119)\n\tjava.lang.Class.forName0(Native Method)\n\tjava.lang.Class.forName(Class.java:348)"}, {"attachment_id": null, "tags": [], "bug_id": 61424, "text": "Thanks for the report.\n\nThere was a targeted fix that handled a similar case that I have converted to a more general fix. I also back-ported the fix to 8.0.x since the more general may also be useful there.\n\nFixed in:\n- trunk for 9.0.0.M27 onwards\n- 8.5.x for 8.5.21 onwards\n- 8.0.x for 8.0.47 onwards", "count": 1, "id": 200400, "time": "2017-08-21T15:28:52Z", "creator": "markt@apache.org", "creation_time": "2017-08-21T15:28:52Z", "is_private": false}]