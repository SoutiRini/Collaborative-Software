[{"count": 0, "tags": [], "bug_id": 45187, "attachment_id": 22112, "text": "Created attachment 22112\nLong Filenames Patch\n\nHi, I'm currently working for a huge e-commerce dev team, and we've been having errors with long URLs in apache.\n\nFor some reason, GETting the following URL (323 chars long):\nhttp://my-server.com.ar/celulares_isNcaracteristica-camara-telefono-movilZcaracteristica-camara-telefono-movil--nd--_isNmodelo-telefono-movilZmodelo-telefono-movil--nd--_isNproveedor-servicio-telefoniaZproveedor-servicio-telefonia--nd--_isNtecnologia-telefono-movilZtecnologia-telefono-movil--nd--_isNtipo-telefono-movilZtipo-telefono-movil--nd--\nApache replies a 403 - HTTP_FORBIDDEN, and in the log file we found:\n\n[Wed Jun 11 13:48:50 2008] [error] [client 127.0.0.1] (36)File name too long: access to /celulares_isNcaracteristica-camara-telefono-movilZcaracteristica-camara-telefono-movil--nd--_isNmodelo-telefono-movilZmodelo-telefono-movil--nd--_isNproveedor-servicio-telefoniaZproveedor-servicio-telefonia--nd--_isNtecnologia-telefono-movilZtecnologia-telefono-movil--nd--_isNtipo-telefono-movilZtipo-telefono-movil--nd-- failed.\n\nBUT, if I prepend a \"directory\" to that exact same URL, like the following:\nhttp://my-server.com.ar/sample_directory/celulares_isNcaracteristica-camara-telefono-movilZcaracteristica-camara-telefono-movil--nd--_isNmodelo-telefono-movilZmodelo-telefono-movil--nd--_isNproveedor-servicio-telefoniaZproveedor-servicio-telefonia--nd--_isNtecnologia-telefono-movilZtecnologia-telefono-movil--nd--_isNtipo-telefono-movilZtipo-telefono-movil--nd--\nit works OK!\n\nAfter looking thru the source code, I've found that there are a few places where a call to the OS is made to retrieve file info, which seems to raise an error when the file name is longer than that supported. And for those cases, it replied with a FORBIDDEN status.\n\nSOLUTION (?):\nWhat I decided to do was to change a few lines so for those cases, we react the same as if that file DIDN'T EXIST. Long story short: before going for the OS to retrieve file information, I check if the file name is longer than that supported. If it is, I reply with an APR_ENAMETOOLONG code. And then, on request.c I mark the request:\nthisinfo.filetype = APR_NOFILE;\n\nI'm attaching the diff for this patch. Please let me know if this is a valid solution to my problem, or if this could raise any other issues.\nThanks,\nRom\u00e1n.", "id": 117592, "time": "2008-06-11T18:51:43Z", "creator": "romangarciam@gmail.com", "creation_time": "2008-06-11T18:51:43Z", "is_private": false}, {"count": 1, "tags": [], "creator": "nick@webthing.com", "is_private": false, "text": "You've marked this Windows XP, but your patch applies to Unix code.  Please clarify.\n\nAlso, calling it 'critical' seems way OTT.", "id": 117612, "time": "2008-06-12T03:09:08Z", "bug_id": 45187, "creation_time": "2008-06-12T03:09:08Z", "attachment_id": null}, {"count": 2, "tags": [], "creator": "romangarciam@gmail.com", "attachment_id": null, "text": "Ok. This bug reproduces both in XP AND Linux.\nThey both reply a 403-FORBIDDEN. But the log shows different errors on XP.\nI guess this is no one catching the OS error. \n\nAnyway, I bet all OSs have long filenames limitations, so you guys might wanna check them all!\n\nI changed it to Major severity. You're welcome!\n\nOh! BTW, the patch I provided applies to 2.2.8 only!\nThanks\nR", "id": 117628, "time": "2008-06-12T07:32:24Z", "bug_id": 45187, "creation_time": "2008-06-12T07:32:24Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 45187, "attachment_id": null, "text": "possibly the actual URLs you're having problems with are not getting passed to your application properly, such that Apache ends up trying to map the file to disk and as part of that find out that the file doesn't exist\n\nwhat module is supposed to handle these requests?  is it smart enough to bypass Apache's logic to try to find a matching file on disk?\n\nits not really anybody's business which filenames are too long for the filesystem Apache runs from, and it isn't a valid file request anyway, so forbidden seems fine\n", "id": 117630, "time": "2008-06-12T08:16:39Z", "creator": "trawick@apache.org", "creation_time": "2008-06-12T08:16:39Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 45187, "attachment_id": null, "text": "(In reply to comment #3)\n> possibly the actual URLs you're having problems with are not getting passed to\n> your application properly, such that Apache ends up trying to map the file to\n> disk and as part of that find out that the file doesn't exist\n\nI'm not really sure. I'm not that much into Apache's code.\nWhat I know is:\nThe URL never gets to my application. It doesn't even get to the \"rewrite\" module.\nOnly with the provided patch, Apache now seems to send the URL to other modules, included rewrite and mod_jk. This error happens \"before\" passing the URL to my application.\n\n\n> what module is supposed to handle these requests?  is it smart enough to bypass\n> Apache's logic to try to find a matching file on disk?\n\nThere's no module affecting this behaviour. As stated before, AFAIK, the request doesn't get THAT far.\n\n> \n> its not really anybody's business which filenames are too long for the\n> filesystem Apache runs from, \n\nI agree. It's Apache's business only.\n\n> and it isn't a valid file request anyway, so\n> forbidden seems fine\n> \nI disagree. \nOk, it's not a \"valid\" file request, since it's not an existent file on the filesystem. But still it is a valid URL. And as any other valid URL, it should get to other modules to process it.\n\nFor what I've seen, unexistent files have a special condition (from request.c:954):\n   if (APR_STATUS_IS_ENOENT(rv))\n\nMy question is, if the underlying FS cannot store the given file, because it's filename is too long, doesn't that simply mean that the file doesn't exist? Couldn't (shouldn't) Apache treat both cases the same?\n\nIn case more info is needed here, this issue appeared on:\nApache 2.2.4 running on Ubuntu 8.04.\nApache 2.2.4 running on WinXP SP2.\nModules loaded (defaults?):\nLoadModule actions_module modules/mod_actions.so\nLoadModule alias_module modules/mod_alias.so\nLoadModule asis_module modules/mod_asis.so\nLoadModule auth_basic_module modules/mod_auth_basic.s\nLoadModule authn_default_module modules/mod_authn_default.so\nLoadModule authn_file_module modules/mod_authn_file.so\nLoadModule authz_default_module modules/mod_authz_default.so\nLoadModule authz_groupfile_module modules/mod_authz_groupfile.so\nLoadModule authz_host_module modules/mod_authz_host.so\nLoadModule authz_user_module modules/mod_authz_user.so\nLoadModule autoindex_module modules/mod_autoindex.so\nLoadModule cgi_module modules/mod_cgi.so\nLoadModule dav_module modules/mod_dav.so\nLoadModule dav_fs_module modules/mod_dav_fs.so\nLoadModule deflate_module modules/mod_deflate.so\nLoadModule dir_module modules/mod_dir.so\nLoadModule env_module modules/mod_env.so\nLoadModule expires_module modules/mod_expires.so\nLoadModule headers_module modules/mod_headers.so\nLoadModule imagemap_module modules/mod_imagemap.so\nLoadModule include_module modules/mod_include.so\nLoadModule isapi_module modules/mod_isapi.so\nLoadModule log_config_module modules/mod_log_config.so\nLoadModule mime_module modules/mod_mime.so\nLoadModule mime_magic_module modules/mod_mime_magic.so\nLoadModule proxy_module modules/mod_proxy.so\nLoadModule proxy_http_module modules/mod_proxy_http.so\nLoadModule negotiation_module modules/mod_negotiation.so\nLoadModule rewrite_module modules/mod_rewrite.so\nLoadModule setenvif_module modules/mod_setenvif.so\nLoadModule userdir_module modules/mod_userdir.so\nLoadModule vhost_alias_module modules/mod_vhost_alias.so\nLoadModule jk_module modules/mod_jk-apache-2.2.4.so\n\nThank you!\nRom\u00e1n", "id": 117632, "time": "2008-06-12T09:05:11Z", "creator": "romangarciam@gmail.com", "creation_time": "2008-06-12T09:05:11Z", "is_private": false}, {"count": 5, "tags": [], "creator": "trawick@apache.org", "text": "A higher-level concern here is that your backend requests are triggering a filesystem check by Apache; if that were bypassed, the filesystem limitation which led to 403 wouldn't be encountered, and be more efficient.\n\nIt looks like mod_proxy_ajp bundled with Apache 2.2 would skip the filesystem checks, but I haven't tested that.  I don't know the state of mod_jk, or if the jk configuration affects this.\n\n(Jopefully somebody with time to see how to make your request work with mod_jk will chime in ;) )\n", "id": 117634, "time": "2008-06-12T11:25:55Z", "bug_id": 45187, "creation_time": "2008-06-12T11:25:55Z", "is_private": false, "attachment_id": null}, {"count": 6, "attachment_id": null, "bug_id": 45187, "is_private": false, "id": 117637, "time": "2008-06-12T12:03:29Z", "creator": "romangarciam@gmail.com", "creation_time": "2008-06-12T12:03:29Z", "tags": [], "text": "(In reply to comment #5)\n> A higher-level concern here is that your backend requests are triggering a\n> filesystem check by Apache; if that were bypassed, the filesystem limitation\n> which led to 403 wouldn't be encountered, and be more efficient.\n> \n> It looks like mod_proxy_ajp bundled with Apache 2.2 would skip the filesystem\n> checks, but I haven't tested that.  I don't know the state of mod_jk, or if the\n> jk configuration affects this.\n> \n> (Jopefully somebody with time to see how to make your request work with mod_jk\n> will chime in ;) )\n> \n\nJeff, just to be sure. \nAre you saying I could somehow bypass this filesystem check using some bundled module? Could anyone else confirm this? Did anyone test this?\nActually, is there any internal configuration I could add to skip this check?\n\nI mean, I'm not sure at what point of the flow this happens, but it looked like the very beginning of the request handling...doesn't look like a mod could help me here. But then again...only you guys know that! :)\n\nThanks,\nRom\u00e1n.\n\n\n\n"}, {"count": 7, "tags": [], "creator": "wrowe@apache.org", "attachment_id": null, "id": 117640, "time": "2008-06-12T12:44:02Z", "bug_id": 45187, "creation_time": "2008-06-12T12:44:02Z", "is_private": false, "text": "Yes.\n\nThe filename testing occurs in the \"directory walk\".  Any module which\nis configured to avoid this altogether, e.g. mod_proxy using ProxyPass\nredirection, should dodge the filename testing.\n\nThat's not how mod_jk works, but you should try mod_proxy_ajp as a suitable\nreplacement which should solve your issue, provided you don't encounter similar\nproblems on Tomcat.\n\nSince reading the thread, and the fact that you are the first app designer\nto complain, I'd suggest a review of your design parameters to come up with\nURI paths that aren't so excessively long.  There may even be issues on the\nclient side with paths such as these."}, {"count": 8, "tags": [], "text": "(In reply to comment #7)\n> Yes.\n> \n> The filename testing occurs in the \"directory walk\".  Any module which\n> is configured to avoid this altogether, e.g. mod_proxy using ProxyPass\n> redirection, should dodge the filename testing.\n> \n> That's not how mod_jk works, but you should try mod_proxy_ajp as a suitable\n> replacement which should solve your issue, provided you don't encounter similar\n> problems on Tomcat.\n\nI will try the mod_proxy_ajp to see if that solves OUR problem. \nBut still, that won't solve Apache's problem.\nFor whatever reason, Apache does check the filesystem to see if a given file is there. And FORBIDDEN is not a valid response to that question.\n\nI guess what confuses me the most is you guys don't seem to consider this issue as a bug. Is FORBIDDEN a valid answer to a long URI request?\n\n> Since reading the thread, and the fact that you are the first app designer\n> to complain, I'd suggest a review of your design parameters to come up with\n> URI paths that aren't so excessively long.  There may even be issues on the\n> client side with paths such as these.\n\nEven if I could change requirements (which I can't), I wouldn't only to adjust them to an existing bug.\nAlso, I don't consider 400 chars excessively long. Specially when even worst browsers, IE that is, support more than 2048 chars long\nhttp://support.microsoft.com/kb/q208427\nOpera & Firefox support more than 10k chars for URLs I believe...\n\nIf the problem is \"how many app designers complain\", just let me know so I can collect signatures for a \"formal request\". Just tell me how many app designers do you need. ;)\n", "is_private": false, "id": 117642, "creator": "romangarciam@gmail.com", "time": "2008-06-12T13:50:57Z", "bug_id": 45187, "creation_time": "2008-06-12T13:50:57Z", "attachment_id": null}, {"count": 9, "tags": [], "text": ">I guess what confuses me the most is you guys don't seem to consider this issue\n>as a bug. Is FORBIDDEN a valid answer to a long URI request?\n\nIt wouldn't help you if we returned error 404 instead of 403.  Your non-filesystem requests need to bypass this filesystem logic.\n\nThis isn't the place to decide that this isn't a filesystem request; the module handling the request (mod_jk in your case) should have indicated that at an earlier stage.\n\n", "is_private": false, "id": 117643, "creator": "trawick@apache.org", "time": "2008-06-12T14:09:27Z", "bug_id": 45187, "creation_time": "2008-06-12T14:09:27Z", "attachment_id": null}, {"count": 10, "tags": [], "bug_id": 45187, "text": "(In reply to comment #7)\n> Yes.\n> \n> The filename testing occurs in the \"directory walk\".  Any module which\n\nAnd this happens *after* applying the server wide mod_rewrite rules (not the\nones configured per directory or in .htaccess) So it is quite astonishing that the reporter says that the request does not even hit his rewrite rules.\n\n> is configured to avoid this altogether, e.g. mod_proxy using ProxyPass\n> redirection, should dodge the filename testing.\n> \n> That's not how mod_jk works, but you should try mod_proxy_ajp as a suitable\n> replacement which should solve your issue, provided you don't encounter similar\n> problems on Tomcat.\n\nmod_jk (1.2.26) also should not hit the \"directory walk\" as it has its own map_to_storage hook handler that stops the processing of the hook before\nthe directory walk if a valid mapping for the uri was found.\n\nSo all the above increases my feeling that the server is simply misconfigured\nand that this is the reason why the request does not get to the application.\n\nSecond point is that that ENAMETOOLONG IMHO does not necessarily mean that the file does not exist (this would be indicated by ENOENT IMHO). It seems to indicate that path supplied to the stat call is too long which would open up\nthe possibility to change to the appropriate directory and do a local stat\nthere. Since httpd does not do this it smells something suspicious here and\nreturns FORBIDDEN which is ok in this situation. BTW: Replying with not found also could drive the user of httpd nuts if the file is present.\nAnd to be honest what I don't get is: Does it really matter if you get FORBIDDEN or NOT FOUND. In both cases you do not get the file and this is not what you want an expect. You expect your content to be delivered.\n\n\n\n", "id": 117644, "time": "2008-06-12T14:26:20Z", "creator": "rpluem@apache.org", "creation_time": "2008-06-12T14:26:20Z", "is_private": false, "attachment_id": null}, {"count": 11, "tags": [], "bug_id": 45187, "attachment_id": null, "text": "I guess if our Apache was misconfigured, we would have noticed it earlier. We've been running this configuration for more than 5 years now. But it could be an option.\n\nI'm trying to understand here. Are you saying that there is a way to skip filesystem access? Even with mod_jk? Can you point me out some documents I can read for that? Examples on how to setup mod_jk to skip the FS?\n\nIf that's the case, and the only reason Apache is accesing the FS is because it KNOWS for fact that the user is requesting a FS file (because it ruled out any other possibilities), then FORBIDDEN or whichever response you choose for this should be fine.\nBut, if this is the case, then why does Apache check for ENOENT at that point and what does it do with that request, when the file was not found? Why doesn't it just reply a 404 right there?\n\nOn the other hand, if Apache reacts this way WITHOUT KNOWING whether the user is requesting an FS file, a SymLink, or a virtual path, then that's simply wrong.\nBecause this is my case, because we hit an URL which gets rewritten, which gets passed to a Tomcat, which is handled by a Java app. Which, BTW, works OK with the patch I submitted.\n\nI guess this could be easily tested, with a proper environment.\nIt should be as simple as:\nInstall Apache\nDo a GET for a long URL.\nCheck the log\n\nAnyone wanna give it a try? ;)\n\nRom\u00e1n.\n", "id": 117652, "time": "2008-06-12T15:51:27Z", "creator": "romangarciam@gmail.com", "creation_time": "2008-06-12T15:51:27Z", "is_private": false}, {"count": 12, "attachment_id": null, "bug_id": 45187, "is_private": false, "id": 120925, "time": "2008-09-24T08:38:32Z", "creator": "mark@node.to", "creation_time": "2008-09-24T08:38:32Z", "tags": [], "text": "FYI I encounter this exact problem with mod_python as well.\n\nApparently mod_python does not bypass the directory walk."}, {"count": 13, "tags": [], "bug_id": 45187, "attachment_id": null, "text": "FWIW, I think the best HTTP response in this case should be 400.\n\n404 is worse than 403 (it may be correct, but it's misleading if wrong).  414 would be another candidate, but could also lead to misleading/inconsistent results.\n\nChanging it to return 400 would be a trivial patch to request.c, if anyone agrees with my suggestion.", "id": 123670, "time": "2008-12-31T11:54:04Z", "creator": "nick@webthing.com", "creation_time": "2008-12-31T11:54:04Z", "is_private": false}, {"count": 14, "attachment_id": null, "bug_id": 45187, "text": "I agree with Roman. This is a bug and bug should be corrected. The server should not look for a file, when the URL is obviously not a file. File Not Found - is the right response for such request.", "id": 125520, "time": "2009-03-12T08:15:14Z", "creator": "macaronnik@gmail.com", "creation_time": "2009-03-12T08:15:14Z", "tags": [], "is_private": false}, {"count": 15, "tags": [], "bug_id": 45187, "text": "I have been suffering from accessing, managing and even renaming files that have more than 255 characters over a long time. I have tried various ways but failed. Then I have searched this problem in internet. Then I have found a solution. This software is very easy to use. Named Long path Tool.  To use the program all you need to do is to download this program online and save all the settings to your computer. This program is compatible with Windows NT, 2000, XP, Vista and Windows 7. you can find it from longpathtool(dot)com", "id": 154561, "time": "2012-03-06T10:30:48Z", "creator": "DanielFird2012@gmail.com", "creation_time": "2012-03-06T10:30:48Z", "is_private": false, "attachment_id": null}, {"count": 16, "tags": [], "creator": "rylach@gmail.com", "text": "Exactly. Returning forbidden only because the request file name is longer then 256B even if it does not have to be file name is a bug.\n\nDoes anybody know if the bug still exists in 2.4 ?", "id": 170144, "time": "2013-09-17T20:08:13Z", "bug_id": 45187, "creation_time": "2013-09-17T20:08:13Z", "is_private": false, "attachment_id": null}, {"count": 17, "tags": [], "creator": "rylach@gmail.com", "is_private": false, "text": "I've just checked in apache 2.4.6 - the bug is applicable too.", "id": 170145, "time": "2013-09-17T20:17:22Z", "bug_id": 45187, "creation_time": "2013-09-17T20:17:22Z", "attachment_id": null}, {"count": 18, "tags": [], "creator": "andre.tannus@gmail.com", "is_private": false, "text": "What is the latest news on this? Will it be fixed?", "id": 174569, "time": "2014-04-15T01:59:20Z", "bug_id": 45187, "creation_time": "2014-04-15T01:59:20Z", "attachment_id": null}, {"count": 19, "attachment_id": null, "bug_id": 45187, "is_private": false, "id": 174570, "time": "2014-04-15T02:05:00Z", "creator": "covener@gmail.com", "creation_time": "2014-04-15T02:05:00Z", "tags": [], "text": "(needinfo means info is needed from the originator)"}, {"count": 20, "tags": [], "bug_id": 45187, "text": "I've been having this problem when working with apache 2.2.4 on MacOS Mavericks 10.9. Even when I updated apache to 2.4.9 (actually install new one) nothing has changed. Could you give me some suggestions?", "id": 175102, "time": "2014-05-08T02:21:50Z", "creator": "phamduyhiep496@gmail.com", "creation_time": "2014-05-08T02:21:50Z", "is_private": false, "attachment_id": null}, {"count": 21, "tags": [], "bug_id": 45187, "text": "(In reply to Hiep Pham from comment #20)\n> Could you give me some suggestions?\n\nI've ended up moving those mod_rewrite rules from .htaccess to apache config file, then suddenly this bug disappears. This is the only workaround I'm aware of. In my particular case those rules are (from /etc/apache/sites-enabled/sitename.com):\n    <IfModule mod_rewrite.c>\n        RewriteEngine on\n        RewriteCond %{DOCUMENT_ROOT}%{REQUEST_FILENAME} !-f\n        RewriteCond %{DOCUMENT_ROOT}%{REQUEST_FILENAME} !-d\n        #nosubreq is needed to pass on internal subrequests: dir/ => dir/index.html\n        RewriteRule ^/20[0-9][0-9]/[0-9][0-9]/([0-9]+) /news/index.php?id=$1 [nosubreq,QSA]\n    </IfModule>\n\nThose rules did not work in .htaccess with very long URIs (giving the infamous \"403 forbidden\") but they work just fine in the apache config file.\n\nHowever, this is a real bug and it should be fixed.", "id": 175106, "time": "2014-05-08T09:23:09Z", "creator": "ashutosh108@gmail.com", "creation_time": "2014-05-08T09:23:09Z", "is_private": false, "attachment_id": null}, {"count": 22, "tags": [], "text": "(In reply to Anton Voloshin from comment #21)\nI've found a way shorten my URIs so that my problems all gone. Anyway, thank you very much, I'll try your solution later.\n\n> However, this is a real bug and it should be fixed.\n\ncan not agree more :)\nCheers! ;)", "is_private": false, "id": 175124, "creator": "phamduyhiep496@gmail.com", "time": "2014-05-09T01:48:02Z", "bug_id": 45187, "creation_time": "2014-05-09T01:48:02Z", "attachment_id": null}, {"count": 23, "tags": [], "creator": "romangarciam@gmail.com", "text": "Did anyone try to apply the patch to the latest trunk version?\nIt's only 6 lines that need to be added...I believe the merge should be simple.\n\nJust FYI, the patch I offered here is running today 6 years in production without an issue.", "id": 175125, "time": "2014-05-09T02:03:49Z", "bug_id": 45187, "creation_time": "2014-05-09T02:03:49Z", "is_private": false, "attachment_id": null}, {"count": 24, "tags": [], "bug_id": 45187, "text": "The lastest trunk version doesn't have \"./srclib/apr/file_io/unix/filestat.c\" and I have no idea where it is (actually I'm too lazy to find it) :)\nThis bug only appears when I use Apache on MacOS, maybe they don't care about it because it's no longer applicable on Windows or Linux.", "id": 175126, "time": "2014-05-09T02:19:22Z", "creator": "phamduyhiep496@gmail.com", "creation_time": "2014-05-09T02:19:22Z", "is_private": false, "attachment_id": null}, {"count": 25, "tags": [], "bug_id": 45187, "attachment_id": null, "is_private": false, "id": 183497, "time": "2015-06-13T02:36:03Z", "creator": "nestynasab@gmail.com", "creation_time": "2015-06-13T02:36:03Z", "text": "I think you need to try Long Path Tool on this situation. I hope that it helps."}, {"count": 26, "tags": [], "bug_id": 45187, "attachment_id": null, "text": "I am facing the same issue.\n\nApache logs :\n\n[2016-01-25T18:48:31.5980+05:30] [OHS] [ERROR:32] [OHS-9999] [core.c] [client_id: 10.87.152.136] [host_id: WCUATINFRA] [host_addr: 10.87.206.108] [tid: 10024] [user: oracle] [ecid: 000001blLQC4mnVLu2d9iX01K02Y00001s] [rid: 0] [VirtualHost: main] (86)File name too long:  Cannot map POST /CSSPortal/resourceproxy/~.portletId~3D~252Foracle~252Fadf~252Fportlet~252FWSRP~252Fap~252FLoginPortlet_7aab73f3_013f_1000_8001_0a4d30708e34~26clientId~3D1315943251~26resourceId~3Dwsrp-url~25253D~252526wsrp-resourceID~25253D_wlp-nullResId~252526wsrp-preferOperation~25253Dtrue~252526wsrp-requiresRewrite~25253D~252526wsrp-resourceState~25253DeJyLL07OL0i1zc1PSQ0GsVLUiooKbNXSc-KTEnNsAbM4C0U~252526wsrp-resourceCacheability~25253Dpage~252526wsrp-navigationalValues~25253D~252526oracle~2525253Arunnable-attribs~25253Doracle.portlet.newNavigationalContextScope~2525253Dtrue~25252526oracle.portlet.request.context.string.currentPagePath~2525253D~252525252Foracle~252525252Fwebcenter~252525252Fportalapp~252525252Fpages~252525252FCSSLogin.jspx~25252526oracle.adf.portlet.Stretched~2525253Dtrue~25252526oracle.portlet.request.context.string.currentPageName~2525253DCSSLogin.jspx~26baseUrl~3Dhttps~253A~252F~252Fmyvodafonesit.vodafone.in~252FCSSPortal~252Ffaces~252Foracle~252Fwebcenter~252Fportalapp~252Fpages~252FCSSLogin.jspx~253F_adf.ctrl-state~253D8ihv1i5j6_4~2526_afrLoop~253D121736612963976677~26locale~3Den~26checksum~3D40bc02cce3ffe09b2544145448ed393856a2b5e8/_wlp-nullResId HTTP/1.1 to file, referer: https://myvodafonesit.vodafone.in/CSSPortal/adfportlet?_adfp_request_id=748695f0-d211-4047-a29a-7aa0418e7cbc&_adfp_icr=1\n\n\nBrowser log :\n\n\"NetworkError: 403 Forbidden - https://myvodafonesit.vodafone.in/CSSPortal/resourceproxy/~.portletId~3D~252Foracle~252Fadf~252Fportlet~252FWSRP~252Fap~252FLoginPortlet_7aab73f3_013f_1000_8001_0a4d30708e34~26clientId~3D1315943251~26resourceId~3Dwsrp-url~25253D~252526wsrp-resourceID~25253D_wlp-nullResId~252526wsrp-preferOperation~25253Dtrue~252526wsrp-requiresRewrite~25253D~252526wsrp-resourceState~25253DeJyLL07OL0i1zc1PSQ0GsVLUiooKbNXSc-KTEnNsAbM4C0U~252526wsrp-resourceCacheability~25253Dpage~252526wsrp-navigationalValues~25253D~252526oracle~2525253Arunnable-attribs~25253Doracle.portlet.newNavigationalContextScope~2525253Dtrue~25252526oracle.portlet.request.context.string.currentPagePath~2525253D~252525252Foracle~252525252Fwebcenter~252525252Fportalapp~252525252Fpages~252525252FCSSLogin.jspx~25252526oracle.adf.portlet.Stretched~2525253Dtrue~25252526oracle.portlet.request.context.string.currentPageName~2525253DCSSLogin.jspx~26baseUrl~3Dhttps~253A~252F~252Fmyvodafonesit.vodafone.in~252FCSSPortal~252Ffaces~252Foracle~252Fwebcenter~252Fportalapp~252Fpages~252FCSSLogin.jspx~253F_adf.ctrl-state~253D8ihv1i5j6_4~2526_afrLoop~253D121736612963976677~26locale~3Den~26checksum~3D40bc02cce3ffe09b2544145448ed393856a2b5e8/_wlp-nullResId\"", "id": 187958, "time": "2016-01-25T13:25:57Z", "creator": "takshashil.s@gmail.com", "creation_time": "2016-01-25T13:25:57Z", "is_private": false}, {"count": 27, "attachment_id": null, "bug_id": 45187, "text": "You can also checkout long path tool, it's an automated software for this type of errors", "id": 193220, "time": "2016-08-19T11:15:46Z", "creator": "ronaldcarl06@gmail.com", "creation_time": "2016-08-19T11:15:46Z", "tags": [], "is_private": false}, {"count": 28, "attachment_id": null, "bug_id": 45187, "text": "I have recently used a program called Long Path Tool & i am so happy with the results that this particular program does. I have more than 50 GB of duplicate files in my computer and i was going crazy with the hard disk space that was being consumed and thanks to the \"Long Path Tool\" where i don't need to search each & every file to delete. Long Path Tool did the job for me within a very short period of time. So no need to google each problem to remove duplicate & unwanted files, just grab the program called Long Path Tool.", "id": 198166, "time": "2017-04-05T08:28:51Z", "creator": "abhiwyn@rediffmail.com", "creation_time": "2017-04-05T08:28:51Z", "tags": [], "is_private": false}, {"count": 29, "tags": [], "creator": "abhiwyn@rediffmail.com", "is_private": false, "text": "In other words same situation was for me before but when i installed Long Path Tool, my computer was organized easily and i got relaxed from everyday files and junk.", "id": 198406, "time": "2017-04-20T10:10:45Z", "bug_id": 45187, "creation_time": "2017-04-20T10:10:45Z", "attachment_id": null}]