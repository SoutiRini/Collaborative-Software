[{"count": 0, "tags": [], "creator": "g7n3f@126.com", "is_private": false, "text": "Created attachment 34766\nthe method \"getPreparedStatement\" in class AbstractJDBCTestElement.\n\nEncounter OOM when using jdbcsampler concurrently.\n  Looking into the dump with hat, I find object \"perConnCache\" held a lot of retained heap. (Sorry for not saving the dump file)\n    Following is the definition of perConnCache in class AbstractJDBCTestElement\n_____________________________________CODE___________________________________\n    /** \n     *  Cache of PreparedStatements stored in a per-connection basis. Each entry of this\n     *  cache is another Map mapping the statement string to the actual PreparedStatement.\n     *  At one time a Connection is only held by one thread\n     */\n    private static final Map<Connection, Map<String, PreparedStatement>> perConnCache =\n            new ConcurrentHashMap<Connection, Map<String, PreparedStatement>>();\n ____________________________________________________________________________\n    The param \"connection\" is from the method \"getConnection()\" which in DBCP2.\n \n    Jmeter3 using DBCP2 as connections pool instead of excalibur\uff08which Jmeter2 use\uff09. Then I dig into the code in class PoolingDataSource which in DBCP2..\n__________________________________CODE_________________________________\n    public Connection getConnection() throws SQLException {\n        try {\n            C conn = _pool.borrowObject();\n            if (conn == null) {\n                return null;\n            }\n            return new PoolGuardConnectionWrapper<>(conn);\n        } catch(SQLException e) {\n___________________________________________________________________\n    As the above,the method \"getConnection\"  will return new PoolGuardConnectionWrapper<>(conn) which could generate different hashcode for the  conn returned.  So the key \"connection\" will not exist in the perConnCache. then it will put the \"new conn\" into the perConnCache\uff0cwhich cause memory leak. Looking the method \"getPreparedStatement\" in class AbstractJDBCTestElement.\uff08attached bug2\uff09.", "id": 197157, "time": "2017-02-20T09:19:25Z", "bug_id": 60749, "creation_time": "2017-02-20T09:19:25Z", "attachment_id": 34766}, {"count": 1, "tags": [], "creator": "sitnikov.vladimir@gmail.com", "attachment_id": null, "id": 197158, "time": "2017-02-20T09:27:25Z", "bug_id": 60749, "creation_time": "2017-02-20T09:27:25Z", "is_private": false, "text": "The cache has been removed in JMeter 3.1: https://bz.apache.org/bugzilla/show_bug.cgi?id=60085"}, {"count": 2, "tags": [], "bug_id": 60749, "attachment_id": null, "text": "\n\n*** This bug has been marked as a duplicate of bug 60085 ***", "id": 197267, "time": "2017-02-25T14:13:26Z", "creator": "p.mouawad@ubik-ingenierie.com", "creation_time": "2017-02-25T14:13:26Z", "is_private": false}]