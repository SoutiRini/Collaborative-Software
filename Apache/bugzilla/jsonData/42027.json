[{"text": "I am trying to control ETag generation. According to the docs, the FileETag\ndirective should work inside a .htaccess with the FileInfo override.\n\nHere is my directory block in httpd.conf:\n\n<Directory \"/home/me/public_html\">\n        AllowOverride All\n        Options All\n\n        order deny,allow\n        allow from all\n</Directory>\n\nMy .htaccess in /home/me/public_html/i/.htaccess contains the following:\nFileETag None\n\nYet, a GET request for foo.com/i/bar.jpg still returns an ETag seemingly\ncomprised of all the available information (INode, MTime, Size).\n\nI tried also placing the FileETag None in the <Directory> block, thinking\nperhaps the documentation was incorrect and I had the same result. httpd was\nrestarted in between all changes. No errors were logged in the error_log\n(loglevel warn).", "tags": [], "bug_id": 42027, "is_private": false, "count": 0, "id": 101352, "time": "2007-04-02T20:26:33Z", "creator": "apachebugreporter@mailinator.com", "creation_time": "2007-04-02T20:26:33Z", "attachment_id": null}, {"attachment_id": null, "tags": [], "creator": "nick@webthing.com", "is_private": false, "count": 1, "id": 101360, "time": "2007-04-03T02:33:24Z", "bug_id": 42027, "creation_time": "2007-04-03T02:33:24Z", "text": "This is probably a manifestation of PR#41829.  Can you apply the (one-line)\npatch and see if it goes away?"}, {"count": 2, "tags": [], "creator": "apachebugreporter@mailinator.com", "text": "The problem persists after applying the patch mentioned.", "id": 101382, "time": "2007-04-03T13:00:43Z", "bug_id": 42027, "creation_time": "2007-04-03T13:00:43Z", "is_private": false, "attachment_id": null}, {"count": 3, "text": "I believe this is a copy&paste error at line 392 of server/core.c (in trunk,\nline 420 in 2.2.4):\n391 : conf->etag_remove =\n392 :   \t(conf->opts_remove & (~ new->etag_add)) | new->etag_remove;\n\nline 392 should read:\n\n392 :   \t(conf->etag_remove & (~ new->etag_add)) | new->etag_remove;\n\nIn addition, I believe there is an error in the parsing of FileETag, at:\n\n1599 :  if ((cfg->etag_bits & ETAG_NONE) != ETAG_NONE) {\n1600 :  \tcfg->etag_bits &= (~ ETAG_NONE);\n\nThat's a no-op; I think line 1599 should read:\n\n1599 :  if (cfg->etag_bits != ETAG_NONE) {\n\nHowever, the correction of cfg->etag_bits at in the merge (line 402/403) should\nmask the effects of this error in the majority of cases.", "bug_id": 42027, "attachment_id": null, "id": 106103, "time": "2007-07-31T11:32:43Z", "creator": "rici@ricilake.net", "creation_time": "2007-07-31T11:32:43Z", "tags": [], "is_private": false}, {"count": 4, "tags": [], "bug_id": 42027, "text": "While I was not able to reproduce the original issue I agree that the FileETag\nconfiguration contains a bug. Parts of it are fixed by Rici's proposal, but\nthere is also another issue. Could you please give the attached patch (against\ntrunk, but works also against 2.2.x) a try and report back?", "id": 106114, "time": "2007-07-31T12:59:29Z", "creator": "rpluem@apache.org", "creation_time": "2007-07-31T12:59:29Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 42027, "text": "Created attachment 20575\nPatch against trunk", "id": 106115, "time": "2007-07-31T13:00:22Z", "creator": "rpluem@apache.org", "creation_time": "2007-07-31T13:00:22Z", "is_private": false, "attachment_id": 20575}, {"count": 6, "tags": [], "creator": "rici@ricilake.net", "text": "Ruediger,\n\nI don't think that patch completely eliminates the bug.\n\nConsider the following:\n\n<directory /a>\nFileETag None\n</directory>\n<directory /a/b>\nFileETag +mtime\n</directory>\n<directory /a/b/c>\nFileETag -mtime\n</directory>\n\nYou might expect files in /a/b/c to have no etags. However, with a stock 2.2.4,\nthey end up with mtime+inode+size, and with the patch they end up with inode+size.\n\n", "id": 106125, "attachment_id": null, "bug_id": 42027, "creation_time": "2007-07-31T16:27:54Z", "time": "2007-07-31T16:27:54Z", "is_private": false}, {"count": 7, "tags": [], "bug_id": 42027, "text": "I put some thoughts about refactoring options parsing at:\n\nhttp://segundo.ricilake.net/options.txt\n\nMaybe they're useful. I was trying to not be too clever, be explicit\nin invariants, and get the semantics reasonable (while allowing\nAP_INIT_ITERATE argument parsing). The semantics are not quite\nthe same as current httpd: for one thing, it throws errors on certain\nconstructions (Options +Foo -Bar Glitch) and for another thing it\nallows you to split up absolute options over various Options directives\nin the same block, so that:\n\n  Options Foo\n  Options Bar\n\n(in one block) is the same as:\n\n  Options Foo Bar\n\nI'm not sure whether those are plausible changes, but it seems like it would\nbe useful to have a single library which did httpd-options style handling in\na consistent way.\n\nBy the way, the current FileETags error can be reproduced if you have\n  Options -Indexes\nin a block which is merged with a block containing:\n  FileETag None\n(because OPT_INDEXES is the same value as ETAG_NONE). So, for example, putting\nthe 'FileETag None' directive in a vhost, and the 'Options -Indexes' directive\nin a <Directory> section will probably trigger the error when the directory\nand the vhost are merged.", "id": 106132, "time": "2007-07-31T21:14:32Z", "creator": "rici@ricilake.net", "creation_time": "2007-07-31T21:14:32Z", "is_private": false, "attachment_id": null}, {"count": 8, "tags": [], "bug_id": 42027, "is_private": false, "text": "I fixed at least the copy and paste error (opts_remove vs etag_remove) in trunk\nas r562860 (http://svn.apache.org/viewcvs.cgi?rev=562860&view=rev) and proposed\nit for backport to 2.2.x r562862\n(http://svn.apache.org/viewcvs.cgi?rev=562862&view=rev). Solving the other\nissues requires for time and thoughts.", "id": 106361, "time": "2007-08-05T05:56:57Z", "creator": "rpluem@apache.org", "creation_time": "2007-08-05T05:56:57Z", "attachment_id": null}]