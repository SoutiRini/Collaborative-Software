[{"count": 0, "tags": [], "creator": "c.grigoroscuta@moodmedia.ro", "attachment_id": null, "id": 72057, "time": "2005-03-09T17:12:54Z", "bug_id": 33932, "creation_time": "2005-03-09T17:12:54Z", "is_private": false, "text": "I've deployed an application that uses common-logging with log4j to log.\ncommon-logging and log4j jars are located in WEB-INF/lib.\nWith a profiler, I spotted some classes that are used internally by tomcat\n(BeanUtilsBean, for example) that use the log4j logger loaded by my application.\nThis is very unusual, and causes memory leaks by maintaining strong ref to the\nweb app class loader.\nI assume the problem is somewhere in common-logging, because of a context class\nloared, but I dod not have time to investigate.\nThe workaround I've found was to put common-logging and log4j jars in share/libs."}, {"count": 1, "tags": [], "creator": "remm@apache.org", "attachment_id": null, "is_private": false, "id": 72442, "time": "2005-03-15T14:11:12Z", "bug_id": 33932, "creation_time": "2005-03-15T14:11:12Z", "text": "BeanUtilsBean is not part of the Tomcat project (maybe it's commons-beanutils\n?). Also, the associations in commons-logging with the webapp classloader are\ncleared when stopping the web application."}, {"count": 2, "tags": [], "text": "I think I did not make myself very clear. I saw several classes from server/libs\n(BeanUtilsBean was one of them) that maintained references to Logger instances\nloaded by web app class loader, through the \"log\" static field.\n\nFrom my point of view, as long as common-beanutils and common-logging exist in\nserver/lib, they are part of Tomcat web server. For the Tomcat user's point of\nview, bugs in the versions of these libs delivered with Tomcat are also bugs of\nTomcat. I understand the tomcat developer's point of view, but you must also\nunderstand the user's point of view. \n\nLooking closer, I think the problem might be in common-logging, in\nLogFactoryImpl, that user the context class loader to load the logger instance.\nIf a class from server/lib, loaded by Tomcat's class loader is first accessed\nfrom a web application, its logger will be loaded by the web application's class\nloader, and this class will always maintain this strong reference to the logger,\nno matter what cleanup you do in commons-logging when I stop the application.\n\nIf this is the case, it is indeed a bug in commons-logging, but as far as I am\nconcerned, it's also a bug is tomcat, as it is delivered with commons-logging as\na part of it.", "is_private": false, "bug_id": 33932, "id": 72446, "time": "2005-03-15T14:44:27Z", "creator": "c.grigoroscuta@moodmedia.ro", "creation_time": "2005-03-15T14:44:27Z", "attachment_id": null}, {"count": 3, "tags": [], "text": "I was not interested in any additional feedback. I recommend you check your\nfacts better before creating bug reports. Please do not reopen the report.", "is_private": false, "bug_id": 33932, "id": 72447, "time": "2005-03-15T14:48:18Z", "creator": "remm@apache.org", "creation_time": "2005-03-15T14:48:18Z", "attachment_id": null}, {"count": 4, "tags": [], "creator": "william.barker@wilshire.com", "attachment_id": null, "is_private": false, "id": 72458, "time": "2005-03-15T19:48:04Z", "bug_id": 33932, "creation_time": "2005-03-15T19:48:04Z", "text": "There are changes in commons-logging 1.0.5 to address this type of memory \nleaks in container deployment.  You might want to try with that version."}]