[{"count": 0, "tags": [], "bug_id": 30427, "attachment_id": null, "text": "I think I have found a problem in the IO taglib. \u00a0 \n \nI have a site where I use JSP with JSTL and the IO taglibs to provide a \nweb frount end to a servlet which takes XML requests and delivers \nXML responses (this is used by some embedded systems as well as \nthe web UI). \n \nEvery now and then I get a null response back from the servlet when \nusing the IO taglib. \u00a0The embedded systems never hit this problem. \nThe log at the Servlet indicates that a response was sent, and ethereal \nconcures. \n \nOriginally the servlet only accepted https requests, even from the \nweb UI, and this is where I hit this problem first. \u00a0 I changed the \nservlet so that it would accept http requests from localhost and  \nthe problem diminished but did not go away. \n \nThe problem - I think - is in the org.apache.taglibs.io.PipiHelper \nclass, in the pipe routine. \u00a0It currently reads:- \n \n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 while (true) { \n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 int size = input.read( buffer ); \n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 if ( size <= 0 ) { \n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return; \n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 } \n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 output.write( buffer, 0, size ); \n \nThe problem is that size can be zero, especially for https \nsessions when the stream is not at end of file. \u00a0The only \nreal end of file is when size == -1. \n \nThe code should read:- \n \n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 while (true) {  \n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 int size = input.read( buffer );  \n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 if ( size < 0 ) {  \n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return;  \n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }  \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0else if( size == 0) \u00a0{ \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Thread.sleep( 1); \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0} \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0else { \n\u00a0 \u00a0 \u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 output.write( buffer, 0, size );  \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0} \n \nI am not sure whether the Thread sleep is necessary, but it does \ngive the scheduler a chance when the request is to a local source \nin the same process (i.e. to a Tomcat servlet).", "id": 61433, "time": "2004-08-01T14:57:48Z", "creator": "david.goodenough@btconnect.com", "creation_time": "2004-08-01T14:57:48Z", "is_private": false}, {"count": 1, "tags": [], "text": "Resolving. Taglib has been retired.", "is_private": false, "bug_id": 30427, "id": 132408, "time": "2009-11-29T19:39:08Z", "creator": "bayard@apache.org", "creation_time": "2009-11-29T19:39:08Z", "attachment_id": null}]