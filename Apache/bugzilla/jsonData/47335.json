[{"count": 0, "tags": [], "bug_id": 47335, "text": "I've found this bug on a production server and created a test environment using httpd-2.2.11.tar.bz2 with default configuration settings. Both systems present the bug.\n\nTest CGI script:\n#!/bin/bash\necho \"Content-Type: text/plain\"\necho \"\"\nls -laR /proc/$$/fd \n\nExecuting from shell:\nContent-Type: text/plain\n\n/proc/15922/fd:\ntotal 0\ndr-x------ 2 root root  0 Jun  9 14:37 .\ndr-xr-xr-x 5 root root  0 Jun  9 14:37 ..\nlrwx------ 1 root root 64 Jun  9 14:37 0 -> /dev/pts/2\nlrwx------ 1 root root 64 Jun  9 14:37 1 -> /dev/pts/2\nlrwx------ 1 root root 64 Jun  9 14:37 2 -> /dev/pts/2\nlr-x------ 1 root root 64 Jun  9 14:37 255 -> /root/httpd/cgi-bin/leak.cgi\n\nExecuting from Apache:\n/proc/15963/fd:\ntotal 0\ndr-x------ 2 daemon daemon  0 Jun  9 14:38 .\ndr-xr-xr-x 5 daemon daemon  0 Jun  9 14:38 ..\nlr-x------ 1 daemon daemon 64 Jun  9 14:38 0 -> pipe:[85321]\nl-wx------ 1 daemon daemon 64 Jun  9 14:38 1 -> pipe:[85322]\nlr-x------ 1 daemon daemon 64 Jun  9 14:38 14 -> pipe:[85323]\nl-wx------ 1 daemon daemon 64 Jun  9 14:38 2 -> pipe:[85323]\nlr-x------ 1 daemon daemon 64 Jun  9 14:38 255 -> /root/httpd/cgi-bin/leak.cgi\n\nFile descriptor 14 is a copy of stderr. 14 is used for subsequent requests as well with the actual stderr. This number was significantly higher on the production system but was still constant.", "id": 127756, "time": "2009-06-09T05:41:35Z", "creator": "kornelpal@gmail.com", "creation_time": "2009-06-09T05:41:35Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "text": "So is it only one additional FD during operation, or does the number of additional FDs increase due to traffic or Apache restarts?", "is_private": false, "id": 127757, "creator": "rainer.jung@kippdata.de", "time": "2009-06-09T07:09:23Z", "bug_id": 47335, "creation_time": "2009-06-09T07:09:23Z", "attachment_id": null}, {"count": 2, "tags": [], "text": "There is only one extra fd that always points to the actual stderr used for the process. The fd value (14 in the report) appears to be the same in subsequent requests (haven't do stress test) even through different stderr pipes are used.", "is_private": false, "id": 127758, "creator": "kornelpal@gmail.com", "time": "2009-06-09T07:16:00Z", "bug_id": 47335, "creation_time": "2009-06-09T07:16:00Z", "attachment_id": null}, {"count": 3, "tags": [], "text": "Results of two subsequent requests from the production server (using suexec but the bug is the same):\n\n/proc/12138/fd:\ntotal 0\ndr-x------ 2 username username  0 Jun  9 09:19 .\ndr-xr-xr-x 5 username username  0 Jun  9 09:19 ..\nlr-x------ 1 username username 64 Jun  9 09:19 0 -> pipe:[155152349]\nl-wx------ 1 username username 64 Jun  9 09:19 1 -> pipe:[155152350]\nl-wx------ 1 username username 64 Jun  9 09:19 2 -> pipe:[155152351]\nlr-x------ 1 username username 64 Jun  9 09:19 255 -> /home/username/public_html/cgi-bin/leak.cgi\nlr-x------ 1 username username 64 Jun  9 09:19 3483 -> pipe:[155152351]\n\n\n/proc/12275/fd:\ntotal 0\ndr-x------ 2 username username  0 Jun  9 09:19 .\ndr-xr-xr-x 5 username username  0 Jun  9 09:19 ..\nlr-x------ 1 username username 64 Jun  9 09:19 0 -> pipe:[155153317]\nl-wx------ 1 username username 64 Jun  9 09:19 1 -> pipe:[155153318]\nl-wx------ 1 username username 64 Jun  9 09:19 2 -> pipe:[155153319]\nlr-x------ 1 username username 64 Jun  9 09:19 255 -> /home/username/public_html/cgi-bin/leak.cgi\nlr-x------ 1 username username 64 Jun  9 09:19 3483 -> pipe:[155153319]", "is_private": false, "id": 127759, "creator": "kornelpal@gmail.com", "time": "2009-06-09T07:21:55Z", "bug_id": 47335, "creation_time": "2009-06-09T07:21:55Z", "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 47335, "attachment_id": null, "text": "As one can see fd14 is actually the reading site of the stderr pipe:\n\nlr-x------ 1 daemon daemon 64 Jun  9 14:38 14 -> pipe:[85323]\nl-wx------ 1 daemon daemon 64 Jun  9 14:38 2 -> pipe:[85323]\n\nSome questions:\n\nWhich MPM are you using?\nWhich cgi module are you using (mod_cgi or mod_cgid)?", "id": 127762, "time": "2009-06-09T08:55:03Z", "creator": "rpluem@apache.org", "creation_time": "2009-06-09T08:55:03Z", "is_private": false}, {"count": 5, "tags": [], "creator": "kornelpal@gmail.com", "attachment_id": null, "text": "prefork\nmod_cgi\nApache 2.2.11\nCentOS 5.3 x86_64", "id": 127768, "time": "2009-06-09T10:10:01Z", "bug_id": 47335, "creation_time": "2009-06-09T10:10:01Z", "is_private": false}, {"count": 6, "tags": [], "text": "I've tried with worker and mod_cgid and the leakage is present:\n\n/proc/10380/fd:\ntotal 0\ndr-x------ 2 daemon daemon  0 Jun  9 19:54 .\ndr-xr-xr-x 5 daemon daemon  0 Jun  9 19:54 ..\nlrwx------ 1 daemon daemon 64 Jun  9 19:54 0 -> socket:[72840]\nlrwx------ 1 daemon daemon 64 Jun  9 19:54 1 -> socket:[72840]\nlr-x------ 1 daemon daemon 64 Jun  9 19:54 13 -> pipe:[72901]\nl-wx------ 1 daemon daemon 64 Jun  9 19:54 2 -> /root/httpd/logs/error_log\nlr-x------ 1 daemon daemon 64 Jun  9 19:54 255 -> /root/httpd/cgi-bin/leak.cgi\nlrwx------ 1 daemon daemon 64 Jun  9 19:54 3 -> socket:[68357]\n\n\n/proc/10407/fd:\ntotal 0\ndr-x------ 2 daemon daemon  0 Jun  9 19:54 .\ndr-xr-xr-x 5 daemon daemon  0 Jun  9 19:54 ..\nlrwx------ 1 daemon daemon 64 Jun  9 19:54 0 -> socket:[73024]\nlrwx------ 1 daemon daemon 64 Jun  9 19:54 1 -> socket:[73024]\nlr-x------ 1 daemon daemon 64 Jun  9 19:54 13 -> pipe:[73028]\nl-wx------ 1 daemon daemon 64 Jun  9 19:54 2 -> /root/httpd/logs/error_log\nlr-x------ 1 daemon daemon 64 Jun  9 19:54 255 -> /root/httpd/cgi-bin/leak.cgi\nlrwx------ 1 daemon daemon 64 Jun  9 19:54 3 -> socket:[68357]\n\n\nfd 13 is a read pipe here as well and is a different pipe for each request just like with mod_cgi.\n\nAlso note that fd 3 seems to be leaking as well.", "is_private": false, "id": 127769, "creator": "kornelpal@gmail.com", "time": "2009-06-09T10:59:08Z", "bug_id": 47335, "creation_time": "2009-06-09T10:59:08Z", "attachment_id": null}, {"count": 7, "tags": [], "text": "Can you please check if the following patch fixes your issue?\n\nIndex: threadproc/unix/proc.c\n===================================================================\n--- threadproc/unix/proc.c      (revision 783248)\n+++ threadproc/unix/proc.c      (working copy)\n@@ -78,7 +78,7 @@\n\n     if ((err != APR_NO_PIPE) && (err != APR_NO_FILE)) {\n         if ((rv = apr_file_pipe_create_ex(&attr->parent_err, &attr->child_err,\n-                                          err, attr->pool)) != APR_SUCCESS)\n+                                          err, attr->pool)) == APR_SUCCESS)\n             rv = apr_file_inherit_unset(attr->parent_err);\n         if (rv != APR_SUCCESS)\n             return rv;", "is_private": false, "id": 127777, "creator": "rpluem@apache.org", "time": "2009-06-10T01:18:18Z", "bug_id": 47335, "creation_time": "2009-06-10T01:18:18Z", "attachment_id": null}, {"count": 8, "tags": [], "text": "Created attachment 23784\nmod_cgid.diff\n\nThanks for the patch. This fixed pipe leak for me both with mod_cgi and mod_cgid.\n\nNote that this fixed test seems to bogus on other plaforms as well.\n\nmod_cgid is also leaking an extra listener socket fd (as described in Comment #6) that can be fixed with the attached patch but I don't know if it is compatible with APR_HAS_OTHER_CHILD.", "is_private": false, "id": 127783, "creator": "kornelpal@gmail.com", "time": "2009-06-10T04:55:19Z", "bug_id": 47335, "creation_time": "2009-06-10T04:55:19Z", "attachment_id": 23784}, {"count": 9, "tags": [], "bug_id": 47335, "attachment_id": null, "text": "Fixed the apr issue in r783398 and backported it to 1.3.x / 1.4.x.", "id": 127800, "time": "2009-06-10T08:49:26Z", "creator": "rpluem@apache.org", "creation_time": "2009-06-10T08:49:26Z", "is_private": false}, {"count": 10, "tags": [], "bug_id": 47335, "attachment_id": null, "text": "Thanks. Note that beos, netware and os2 proc.c files have exactly the same bug. (exactly the same piece of code)", "id": 127801, "time": "2009-06-10T09:05:33Z", "creator": "kornelpal@gmail.com", "creation_time": "2009-06-10T09:05:33Z", "is_private": false}, {"count": 11, "tags": [], "bug_id": 47335, "text": "(In reply to comment #10)\n> Thanks. Note that beos, netware and os2 proc.c files have exactly the same bug.\n> (exactly the same piece of code)\n\nThanks for the hint. This is now fixed.", "id": 127868, "time": "2009-06-11T05:20:58Z", "creator": "rpluem@apache.org", "creation_time": "2009-06-11T05:20:58Z", "is_private": false, "attachment_id": null}, {"count": 12, "tags": [], "creator": "rpluem@apache.org", "attachment_id": null, "text": "(In reply to comment #8)\n> Created an attachment (id=23784) [details]\n> mod_cgid.diff\n> \n> Thanks for the patch. This fixed pipe leak for me both with mod_cgi and\n> mod_cgid.\n> \n> Note that this fixed test seems to bogus on other plaforms as well.\n> \n> mod_cgid is also leaking an extra listener socket fd (as described in Comment\n> #6) that can be fixed with the attached patch but I don't know if it is\n> compatible with APR_HAS_OTHER_CHILD.\n\nThanks for the patch. Committed to trunk in r783740 and r783742.", "id": 127871, "time": "2009-06-11T05:36:51Z", "bug_id": 47335, "creation_time": "2009-06-11T05:36:51Z", "is_private": false}, {"count": 13, "tags": [], "creator": "kornelpal@gmail.com", "attachment_id": null, "is_private": false, "id": 127872, "time": "2009-06-11T05:43:31Z", "bug_id": 47335, "creation_time": "2009-06-11T05:43:31Z", "text": "Thanks."}, {"count": 14, "tags": [], "creator": "sf@sfritsch.de", "attachment_id": null, "id": 154217, "creation_time": "2012-02-26T16:56:09Z", "time": "2012-02-26T16:56:09Z", "bug_id": 47335, "text": "fixed in 2.4.1", "is_private": false}]