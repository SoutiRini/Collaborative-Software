[{"attachment_id": null, "tags": [], "bug_id": 47216, "is_private": false, "count": 0, "id": 127134, "time": "2009-05-18T18:13:50Z", "creator": "sebb@apache.org", "creation_time": "2009-05-18T18:13:50Z", "text": "The code at around line 1075:\n\n        } else if (actionCode == ActionCode.ACTION_REQ_LOCAL_ADDR_ATTRIBUTE) {\n\n            if (localAddr == null)\n               localAddr = socket.getLocalAddress().getHostAddress();\n\nfails to check if \"socket != null\".\n\nSince this is checked everywhere else in the method this is probably a bug.\n\nThe method Http11Processor.parseHost() also references \"socket\" without checking for null. Within the class, it is only called by process(Socket), which guarantees that it won't be null.\n\nHowever once process() returns normally, socket will be set to null.\n\nThe parseHost() method is public, so it may be called when socket == null.\n\nPerhaps the parseHost() method should be private?"}, {"count": 1, "tags": [], "creator": "william.barker@wilshire.com", "attachment_id": null, "id": 127137, "time": "2009-05-18T19:01:24Z", "bug_id": 47216, "creation_time": "2009-05-18T19:01:24Z", "is_private": false, "text": "This \"bug\" is purely theoretical.  The only way to hit it is to hold a reference to the Request after request processing has finished.  If you do that, IMHO you deserve all the NPEs you get.\n\n+0 to making parseHost protected (since anyone subclassing this will likely need it)."}, {"count": 2, "attachment_id": null, "bug_id": 47216, "is_private": false, "id": 127148, "time": "2009-05-19T05:01:51Z", "creator": "sebb@apache.org", "creation_time": "2009-05-19T05:01:51Z", "tags": [], "text": "(In reply to comment #1)\n> This \"bug\" is purely theoretical.  The only way to hit it is to hold a\n> reference to the Request after request processing has finished.\n\nIn that case, why does the action() method bother checking for socket!=null everywhere else?\n\nIt does not make sense to have to check for null when processing ACTION_REQ_LOCAL_NAME_ATTRIBUTE (e.g.) but not when processing ACTION_REQ_LOCAL_ADDR_ATTRIBUTE.\n\n> If you do\n> that, IMHO you deserve all the NPEs you get.\n> +0 to making parseHost protected (since anyone subclassing this will likely\n> need it)."}, {"count": 3, "tags": [], "text": "The answer is in the svn history. See r298828 and r299051.\n\nIt may be the case that later changes have removed the need for some of these null tests. A cursory review suggests that a few of the tests could be removed but the risk of introducing an NPE for an unusual code path outweighs the minimal benefit of removing these tests.\n\nI have changed the scope of parseHost() to protected for trunk. It will not be backported as it breaks the API.\n\nSince the (socket != null) was the main thrust of this report, I am marking it as WONTFIX.", "attachment_id": null, "id": 127373, "creator": "markt@apache.org", "time": "2009-05-25T04:00:45Z", "bug_id": 47216, "creation_time": "2009-05-25T04:00:45Z", "is_private": false}]