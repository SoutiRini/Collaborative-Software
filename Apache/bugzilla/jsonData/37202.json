[{"count": 0, "tags": [], "text": "Introduction to SCTP\n\nStream Control Transmission Protocol (SCTP) is a transport layer protocol \ncapable of providing reliable (in-order, no loss, no duplicates, no error)\nmessage oriented service to application.\nOther interesting features of SCTP include multistreaming (many logical pipes\nin 1 SCTP association to transfer independent data without head of line \nblocking problem) and multihoming (ability to support more than 1 interface/\nIP address at a SCTP endpoint for fault-tolerance and load balancing purposes). \n\nFurther details on SCTP\n\no Stream Control Transmission Protocol, RFC 2960.\no www.sctp.org\no www.eecis.udel.edu/~amer/PEL/poc/index.html\n\nApache over SCTP\n\no Listen directive in the httpd config file can take the transport layer\n  protocol as an extra argument along with IP address and port number.\n  This can be either 'sctp' or 'tcp'. If none specified, default protocol\n  will be TCP. Refer to httpd.conf for further details.\no If the httpd configure process identifies support for use of SCTP streams\n  by system, SCTP streams can be used to send/receive HTTP responses/requests.\n  Refer to apr/configure.in for further details. If no such support is\n  identified, SCTP without streams can still be used by the user.\no With SCTP streams, every HTTP request can be read on a separate SCTP\n  stream and its response is sent on the same stream.\n\nContact\n\nPreethi Natarajan (nataraja@cis.udel.edu)\nDr. Paul Amer (amer@cis.udel.edu)\nProtocol Engineering Lab,\nUniversity of Delaware,\nNewark, DE.", "attachment_id": null, "bug_id": 37202, "id": 81553, "time": "2005-10-22T00:11:56Z", "creator": "nataraja@cis.udel.edu", "creation_time": "2005-10-22T00:11:56Z", "is_private": false}, {"count": 1, "tags": [], "text": "Created attachment 16778\nPatch for SCTP support in httpd-2.0.55", "is_private": false, "id": 81554, "creator": "nataraja@cis.udel.edu", "time": "2005-10-22T00:15:44Z", "bug_id": 37202, "creation_time": "2005-10-22T00:15:44Z", "attachment_id": 16778}, {"count": 2, "tags": [], "creator": "colm@apache.org", "attachment_id": null, "id": 81555, "time": "2005-10-22T00:45:16Z", "bug_id": 37202, "creation_time": "2005-10-22T00:45:16Z", "is_private": false, "text": "This looks good, I'd be interested in porting it to trunk/, though probably with some minor differences (it \nwould probably be better to invent a new Listen directive). What are you using as a test client? Has been \ntested on any non-KAME stacks?"}, {"count": 3, "tags": [], "bug_id": 37202, "attachment_id": null, "id": 81556, "time": "2005-10-22T00:49:41Z", "creator": "colm@apache.org", "creation_time": "2005-10-22T00:49:41Z", "is_private": false, "text": "Oh, I forgot to mention, apr already support SCTP. It's in the later versions that are not bundled with 2.0.x. "}, {"count": 4, "tags": [], "bug_id": 37202, "attachment_id": null, "id": 81557, "time": "2005-10-22T01:07:03Z", "creator": "rpluem@apache.org", "creation_time": "2005-10-22T01:07:03Z", "is_private": false, "text": "(In reply to comment #2)\n> This looks good, I'd be interested in porting it to trunk/, though probably\nwith some minor differences (it \n> would probably be better to invent a new Listen directive). What are you using\nas a test client? Has been \n\nPaul worked on an improved Listen directive (although with other focus). It is\nalready in the trunk. So you might find the following links interesting.\n\nhttp://mail-archives.apache.org/mod_mbox/httpd-dev/200505.mbox/ajax/%3c427AABB1.5030606@force-elite.com%3e\nhttp://mail-archives.apache.org/mod_mbox/httpd-dev/200505.mbox/ajax/%3c428D5098.2080204@force-elite.com%3e\nhttp://mail-archives.apache.org/mod_mbox/httpd-dev/200506.mbox/ajax/%3c429DFCF1.3080809@force-elite.com%3e\nhttp://mail-archives.apache.org/mod_mbox/httpd-cvs/200506.mbox/%3C20050614092123.89275.qmail@minotaur.apache.org%3E\n\nI also changed the fields a little bit to reflect, that this is a general\nenhancement proposal.\n\n"}, {"count": 5, "tags": [], "text": "Paul's work is why I think a new, invented, say SCTPListen directive woule be useful for this. Paul's patches \nare about application protocols (Layer 5) but SCTP is a layer-4 protocol, so we would need some way to \ndiscern. ", "is_private": false, "id": 81558, "creator": "colm@apache.org", "time": "2005-10-22T01:14:08Z", "bug_id": 37202, "creation_time": "2005-10-22T01:14:08Z", "attachment_id": null}, {"count": 6, "tags": [], "creator": "rpluem@apache.org", "attachment_id": null, "id": 81559, "time": "2005-10-22T01:20:56Z", "bug_id": 37202, "creation_time": "2005-10-22T01:20:56Z", "is_private": false, "text": "(In reply to comment #5)\n> Paul's work is why I think a new, invented, say SCTPListen directive woule be\nuseful for this. Paul's patches \n> are about application protocols (Layer 5) but SCTP is a layer-4 protocol, so\nwe would need some way to \n> discern. \n\nI see. The question is if we want to have\n\n1. A new Listen directive like you propose e.g. SCTPListen\n2. Add a 3rd parameter to the Listen directive (IP:Port <Layer 5 protocol>\n<Layer 4 protocol>\n3. Make Listen a container, where we would have directives like\n\nLayer4Protocol\nLayer5Protocol\n\nwhich would default to\n\nLayer4Protocol tcp\nLayer5Protocol http"}, {"count": 7, "tags": [], "creator": "colm@apache.org", "attachment_id": null, "is_private": false, "id": 81560, "time": "2005-10-22T01:31:47Z", "bug_id": 37202, "creation_time": "2005-10-22T01:31:47Z", "text": "Not all application protocols are going tolerate a change of layer 4 protocol. For example HTTP can \nprobably be made to work just fine over (shudder) UDP,  and certainly TCP and SCTP (which are both \nstream-oriented), but https would only ever work over TCP. \n\nSimilarly a mod_dns would probably need to handle a UDP listen very differently from a TCP listen. But \nyou'd probably want to specify \"dns\" as the application protcol in both cases. Making Listen a container \nwould be very cumbersome imo, and the trouble I have with the 3rd argument approach is that you then \nhave to be explicit about the application protocol."}, {"count": 8, "tags": [], "bug_id": 37202, "attachment_id": null, "id": 81564, "time": "2005-10-22T16:40:35Z", "creator": "nataraja@cis.udel.edu", "creation_time": "2005-10-22T16:40:35Z", "is_private": false, "text": "(In reply to comment #3)\n> Oh, I forgot to mention, apr already support SCTP. It's in the later versions\nthat are not bundled with 2.0.x. \n\nIn apr-0.9.2, Randall Stewart (author of SCTP) has added support for SCTP during\nconfiguration and my changes are built on top of this (on 0.9.6). Also this\npatch can support send/recv on different SCTP streams which was the idea Randall\nhad when he added the changes."}, {"count": 9, "tags": [], "text": "(In reply to comment #2)\n> This looks good, I'd be interested in porting it to trunk/, though probably\nwith some minor differences (it \n> would probably be better to invent a new Listen directive). What are you using\nas a test client? Has been \n> tested on any non-KAME stacks?\n\nYea, I've been contemplating on the Listen directive. Certainly something more\nspecific like SCTPListen will be useful since there are a few other params like\nnumber of SCTP streams to use that can go with this directive.\nI dont have access to non-KAME stack. I've been sticking to apr functions/basic\nC library functions. So I will be surprised if there are any problems.", "attachment_id": null, "bug_id": 37202, "id": 81565, "time": "2005-10-22T16:45:37Z", "creator": "nataraja@cis.udel.edu", "creation_time": "2005-10-22T16:45:37Z", "is_private": false}, {"count": 10, "tags": [], "bug_id": 37202, "attachment_id": null, "id": 81693, "time": "2005-10-25T12:03:36Z", "creator": "jorton@redhat.com", "creation_time": "2005-10-25T12:03:36Z", "is_private": false, "text": "Folks, bugzilla is not the appropriate place to have this dicussion; changes of\nthis magnitude need to be taken up on the dev@ lists first not squirreled away\namongst the limited audience here; individual APR changes need to be separated\nfrom httpd changes too; it all needs to be done relative to the trunk not\n0.9.x/2.0.x.  This isn't going to go anywhere otherwise."}]