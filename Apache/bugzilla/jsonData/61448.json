[{"count": 0, "tags": [], "text": "Hello,\n\nCluster static members seem to fail since version 7.0.70 (also\nreproduced in 8.0.45, and is the same code than tomcat 9):\n\nSEVERE: The required Server component failed to start so Tomcat is\nunable to start.\n...\nCaused by: org.apache.catalina.tribes.ChannelException:\njava.lang.IllegalArgumentException: McastService:Required property\n\"tcpListenPort\" is missing.; No faulty members identified.\n        at org.apache.catalina.tribes.group.ChannelCoordinator.internalStart(ChannelCoordinator.java:200)\n        at org.apache.catalina.tribes.group.ChannelCoordinator.start(ChannelCoordinator.java:100)\n        at org.apache.catalina.tribes.group.ChannelInterceptorBase.start(ChannelInterceptorBase.java:162)\n        at org.apache.catalina.tribes.group.interceptors.StaticMembershipInterceptor.start(StaticMembershipInterceptor.java:168)\n        at org.apache.catalina.tribes.group.ChannelInterceptorBase.start(ChannelInterceptorBase.java:162)\n        at org.apache.catalina.tribes.group.GroupChannel.start(GroupChannel.java:431)\n        at org.apache.catalina.ha.tcp.SimpleTcpCluster.startInternal(SimpleTcpCluster.java:689)\n        ... 15 more\nCaused by: java.lang.IllegalArgumentException: McastService:Required\nproperty \"tcpListenPort\" is missing.\n        at org.apache.catalina.tribes.membership.McastService.hasProperty(McastService.java:360)\n        at org.apache.catalina.tribes.membership.McastService.start(McastService.java:379)\n        at org.apache.catalina.tribes.group.ChannelCoordinator.internalStart(ChannelCoordinator.java:182)\n        ... 21 more\n\nThe reason could be here:\n\n$ diff -u apache-tomcat-7.0.69-src/java/org/apache/catalina/tribes/group/ChannelCoordinator.java apache-tomcat-7.0.70-src/java/org/apache/catalina/tribes/group/ChannelCoordinator.java.original\n--- apache-tomcat-7.0.69-src/java/org/apache/catalina/tribes/group/ChannelCoordinator.java      2016-04-11 10:02:35.000000000 +0200\n+++ apache-tomcat-7.0.70-src/java/org/apache/catalina/tribes/group/ChannelCoordinator.java.original     2016-06-15 18:45:51.000000000 +0200\n@@ -26,6 +26,8 @@\n import org.apache.catalina.tribes.MessageListener;\n import org.apache.catalina.tribes.UniqueId;\n import org.apache.catalina.tribes.membership.McastService;\n+import org.apache.catalina.tribes.membership.StaticMember;\n+import org.apache.catalina.tribes.transport.ReceiverBase;\n import org.apache.catalina.tribes.transport.ReplicationTransmitter;\n import org.apache.catalina.tribes.transport.SenderState;\n import org.apache.catalina.tribes.transport.nio.NioReceiver;\n@@ -141,28 +143,49 @@\n             //listens to with the local membership settings\n             if ( Channel.SND_RX_SEQ==(svc & Channel.SND_RX_SEQ) ) {\n                 clusterReceiver.setMessageListener(this);\n+                if (clusterReceiver instanceof ReceiverBase) {\n+                    ((ReceiverBase)clusterReceiver).setChannel(getChannel());\n+                }\n                 clusterReceiver.start();\n                 //synchronize, big time FIXME\n-                membershipService.setLocalMemberProperties(getClusterReceiver().getHost(),\n-                                                           getClusterReceiver().getPort(),\n-                                                           getClusterReceiver().getSecurePort(),\n-                                                           getClusterReceiver().getUdpPort());\n+                Member localMember = getChannel().getLocalMember(false);\n+                if (localMember instanceof StaticMember) {\n+                    // static member\n+                    StaticMember staticMember = (StaticMember)localMember;\n+                    staticMember.setHost(getClusterReceiver().getHost());\n+                    staticMember.setPort(getClusterReceiver().getPort());\n+                    staticMember.setSecurePort(getClusterReceiver().getSecurePort());\n+                } else {\n+                    // multicast member\n+                    membershipService.setLocalMemberProperties(getClusterReceiver().getHost(),\n+                            getClusterReceiver().getPort(),\n+                            getClusterReceiver().getSecurePort(),\n+                            getClusterReceiver().getUdpPort());\n+\n+                }\n                 valid = true;\n             }\n\n\t\t\t \nIt seems to me that it's always necessary to initialize\nmembershipService, maybe something like that (untested):\n\n--- apache-tomcat-7.0.70-src/java/org/apache/catalina/tribes/group/ChannelCoordinator.java.original\n    2016-06-15 18:45:51.000000000 +0200\n+++ apache-tomcat-7.0.70-src/java/org/apache/catalina/tribes/group/ChannelCoordinator.java\n     2017-08-18 13:19:53.342672900 +0200\n@@ -148,6 +148,10 @@\n                 }\n                 clusterReceiver.start();\n                 //synchronize, big time FIXME\n+\nmembershipService.setLocalMemberProperties(getClusterReceiver().getHost(),\n+\ngetClusterReceiver().getPort(),\n+\ngetClusterReceiver().getSecurePort(),\n+\ngetClusterReceiver().getUdpPort());\n                 Member localMember = getChannel().getLocalMember(false);\n                 if (localMember instanceof StaticMember) {\n                     // static member\n@@ -155,13 +159,6 @@\n                     staticMember.setHost(getClusterReceiver().getHost());\n                     staticMember.setPort(getClusterReceiver().getPort());\n\nstaticMember.setSecurePort(getClusterReceiver().getSecurePort());\n-                } else {\n-                    // multicast member\n-\nmembershipService.setLocalMemberProperties(getClusterReceiver().getHost(),\n-                            getClusterReceiver().getPort(),\n-                            getClusterReceiver().getSecurePort(),\n-                            getClusterReceiver().getUdpPort());\n-\n                 }\n                 valid = true;\n             }\n\nRegards,\nCarlos.", "is_private": false, "id": 200405, "creator": "carlospeon@gmail.com", "time": "2017-08-21T16:32:31Z", "bug_id": 61448, "creation_time": "2017-08-21T16:32:31Z", "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 61448, "text": "How to reproduce:\n\nSet up a cluster with one static member. \n#server.xml:\n\n     <Cluster className=\"org.apache.catalina.ha.tcp.SimpleTcpCluster\"\n                 channelSendOptions=\"6\">\n          <Manager className=\"org.apache.catalina.ha.session.BackupManager\"\n                   expireSessionsOnShutdown=\"false\"\n                   notifyListenersOnReplication=\"true\"\n                   mapSendOptions=\"6\"/>\n\n          <Channel className=\"org.apache.catalina.tribes.group.GroupChannel\">\n              <Interceptor className=\"org.apache.catalina.tribes.group.interceptors.StaticMembershipInterceptor\">\n                  <LocalMember className=\"org.apache.catalina.tribes.membership.StaticMember\"\n                       port=\"4000\"\n                       host=\"lab.example.com\"\n                       domain=\"pre-cluster\"\n                       uniqueId=\"{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1}\"/>\n              </Interceptor>\n          </Channel>\n      </Cluster>", "id": 200406, "time": "2017-08-21T16:36:28Z", "creator": "carlospeon@gmail.com", "creation_time": "2017-08-21T16:36:28Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 61448, "text": "If you want to use static cluster membership, you do not need to use McastService.\nSo you should set channelStartOptions = \"3\".\n\n<Cluster className = \"org.apache.catalina.ha.tcp.SimpleTcpCluster\"\n         ChannelSendOptions = \"6\" channelStartOptions = \"3\">", "id": 200408, "time": "2017-08-22T04:59:13Z", "creator": "kfujino@apache.org", "creation_time": "2017-08-22T04:59:13Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "creator": "carlospeon@gmail.com", "attachment_id": null, "id": 200409, "time": "2017-08-22T07:14:24Z", "bug_id": 61448, "creation_time": "2017-08-22T07:14:24Z", "is_private": false, "text": "It works.\n\nThank you!"}]