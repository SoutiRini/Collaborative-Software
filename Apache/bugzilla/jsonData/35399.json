[{"count": 0, "tags": [], "creator": "tomekem@poczta.fm", "attachment_id": null, "text": "For query:\n\n<D:basicsearch xmlns:D=\\\"DAV:\\\">\n  <D:select><D:allprop /></D:select> \n<D:from><D:scope><D:href>/files/</D:href><D:depth>infinity</D:depth></D:scope></D:from>\n  <D:where>\n    <D:and><D:not-is-collection\n/><D:and><D:not-contains>secret</D:not-contains></D:and></D:and>\n  </D:where>\n</D:basicsearch>\n\nthere is NullPointerException:\n\nException in thread \"main\" java.lang.NullPointerException\n\tat\norg.apache.slide.index.lucene.IndexConfiguration$AnalyzerImpl.tokenStream(IndexConfiguration.java:421)\n\tat\norg.apache.slide.index.lucene.expressions.ContainsExpression.termOrPhraseQuery(ContainsExpression.java:81)\n\tat\norg.apache.slide.index.lucene.expressions.ContainsExpression.<init>(ContainsExpression.java:70)\n\tat\norg.apache.slide.index.lucene.LuceneExpressionFactory.createDAVExpression(LuceneExpressionFactory.java:176)\n\tat\norg.apache.slide.index.lucene.LuceneExpressionFactory.createExpression(LuceneExpressionFactory.java:145)\n\tat\norg.apache.slide.search.basic.BasicExpressionCompiler.createExpression(BasicExpressionCompiler.java:233)\n\tat\norg.apache.slide.search.basic.BasicExpressionCompiler.compile(BasicExpressionCompiler.java:132)\n\tat\norg.apache.slide.search.basic.BasicExpressionCompiler.compile(BasicExpressionCompiler.java:125)\n\tat\norg.apache.slide.search.basic.BasicExpressionCompiler.compile(BasicExpressionCompiler.java:125)\n\tat org.apache.slide.search.basic.BasicQueryImpl.parseQuery(BasicQueryImpl.java:204)\n\tat\norg.apache.slide.search.basic.BasicQueryImpl.parseQueryElement(BasicQueryImpl.java:267)\n\tat\norg.apache.slide.search.basic.BasicQueryEnvelope.parseQueryElement(BasicQueryEnvelope.java:176)\n\tat\norg.apache.slide.search.basic.BasicSearchLanguage.parseQuery(BasicSearchLanguage.java:160)\n\tat org.apache.slide.search.SearchImpl.createSearchQuery(SearchImpl.java:251)\n\tat org.apache.slide.search.SearchImpl.createSearchQuery(SearchImpl.java:217)\n\tat my.test.SlideVersionsTest.search(SlideVersionsTest.java:448)\n\tat my.test.SlideVersionsTest.main(SlideVersionsTest.java:497)\n\nIn my opinion there is a bug in BasicExpressionCompiler class in method\n'isContentExpression'. It only checks if given element is equal to\nLiterals.CONTAINS. In result expression is created with\n'propertiesExpressionFactory' instead of 'contentExpressionFactory' in\n'createExpression' method within same class.\n\nAfter fixing org/apache/slide/search/basic/BasicExpressionCompiler.java\n\n<             isContent =  Literals.CONTAINS.equals(expressionElement.getName()) ||\n<               Literals.NOT_CONTAINS.equals(expressionElement.getName());\n---\n>             isContent =  Literals.CONTAINS.equals(expressionElement.getName());\n\nquery is working fine.", "id": 76498, "time": "2005-06-17T15:45:53Z", "bug_id": 35399, "creation_time": "2005-06-17T15:45:53Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 35399, "attachment_id": null, "text": "applied your fix, \nthanks", "id": 76562, "time": "2005-06-20T14:55:51Z", "creator": "luetzkendorf@apache.org", "creation_time": "2005-06-20T14:55:51Z", "is_private": false}]