[{"count": 0, "tags": [], "text": "Created attachment 26279\nUpgraded collections in o.a.f.fonts\n\nI have appended suitable type-safe parameters to the collections in the o.a.f.fonts package e.g. List x = ArrayList() is now List<CLASS> x = ArrayList<CLASS>. I've also made a few style changes, previously all the implemented collections were prefixed by their qualified class name (i.e. java.util.ArrayList) for some reason. I've just added them to the import list.\n\nThere has been previous discussion on this in bug 49696, but since no one seems to care either way and it's just causing unnecessary confusion.\n\nI have tested it and there doesn't seem to be any visual difference in PS or PDF though there are differences in the actual files. The fonts are described in a different order in the file. This is probably because we're using HashMaps and the hashes are different, so when iterated through, they come out in a different order.", "attachment_id": 26279, "bug_id": 50245, "id": 141602, "time": "2010-11-10T10:10:19Z", "creator": "med1985@gmail.com", "creation_time": "2010-11-10T10:10:19Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 50245, "is_private": false, "text": "Created attachment 26280\nUpdated update to o.a.f.font package\n\nI missed a variable in o.a.f.FontInfo, use this patch instead", "id": 141603, "time": "2010-11-10T10:15:48Z", "creator": "med1985@gmail.com", "creation_time": "2010-11-10T10:15:48Z", "attachment_id": 26280}, {"text": "I get two errors in junit-transcoder and one failure in junit-userconfig when I run FOP's junit tests.\n\nThe one in junit-userconfig is easily traced:\n\njava.lang.ClassCastException: java.io.File cannot be cast to java.net.URL\n    [junit] \tat org.apache.fop.fonts.autodetect.FontFileFinder.find(FontFileFinder.java:150)\n\nYou specified the return type of FontFonder.find() as List<URL>. The comment already makes it clear that the return list either contains URLs or Files. In NativeFontDirFinder.find() you specify the return type as List<URI>, but when you do the same in the body of the method, it becomes clear that Files, not URIs are stored in this list.\n\nThis is one of a few examples where FOP's code stores different types of object in a collection variable. Maybe not clean, but it is hard to change.\n\nCan you correct your patch, so that it successfully passes all junit tests?\n\nSimon", "tags": [], "bug_id": 50245, "is_private": false, "count": 2, "id": 141621, "time": "2010-11-11T06:39:03Z", "creator": "spepping@apache.org", "creation_time": "2010-11-11T06:39:03Z", "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 50245, "attachment_id": null, "is_private": false, "id": 141626, "time": "2010-11-11T08:28:45Z", "creator": "med1985@gmail.com", "creation_time": "2010-11-11T08:28:45Z", "text": "Ahh, you've come across a conundrum I faced, I don't know why someone used URL for these since these are pointing at local files. I can appreciate using URI's, but URLs seem like a strange choice. Unless anyone has any objections, I'll change them to File objects."}, {"count": 4, "tags": [], "text": "I studied the first changes in the patch in more detail.A couple of remarks:\n\nPrintRendererConfigurator: in setupFontInfo: change List\nfontCollections to List<FontCollection> fontCollections, and similarly\nfor all related statements.\n\nRendererConfigurator: configure does not throw a URISyntaxException.\n\nIFDocumentHandlerConfigurator: setupFontInfo does not throw a\nURISyntaxException.\n\nFontResourceCache: Typeface tf = (Typeface)fonts.get(key):\nThe cast is not necessary, FontMetrics tf works as well. But see the\nremark under FontInfo.\n\nPSFontUtils: writeFontDict: Change Map fontResources to Map<String,\nPSResource> fontResources and related statements.\n\nreencodeFonts: change Map fonts to Map<String, FontMetrics> fonts and\nrelated statements. But see the remark under FontInfo.\n\nFontInfo: fonts and usedFonts: The code often assumes that the value\nis a TypeFace. In InstalledFontCollection, Base14FontCollection and\nConfiguredFontCollection it is a FontMetricsMapper, but in all three\nthe type can be changed to Typeface. Therefore change Map<String,\nFontMetrics> usedFonts and Map<String, FontMetrics> fonts Map<String,\nTypeface> usedFonts and Map<String, Typeface>. Note: This is possible\nbecause Typeface and its subclasses are the only classes directly\nimplementing FontMetrics, so that all FontMetrics objects are also\nTypeface objects.\n\nSimon", "attachment_id": null, "bug_id": 50245, "id": 141631, "time": "2010-11-11T10:46:58Z", "creator": "spepping@apache.org", "creation_time": "2010-11-11T10:46:58Z", "is_private": false}, {"count": 5, "tags": [], "creator": "med1985@gmail.com", "text": "Created attachment 26285\nUpgraded collections in o.a.f.fonts with amendments\n\nOk, I've made the requested changes and a few more, it now passes all the JUnit tests. \n\nI should mention that this URL/URI/File issue, is still present. I have ensured it will pass tests by making it similar to how it was before however if we're local/network files we should be using URI or File objects respectively. I'd suggest using URI since it allows greater flexibility. Though I haven't dealt with it. Dealing with that would require knowledge of the commons-io source and also the batik source. This is something I'll look into if I get the time but the basic upgrade is there.", "id": 141652, "time": "2010-11-12T05:43:06Z", "bug_id": 50245, "creation_time": "2010-11-12T05:43:06Z", "is_private": false, "attachment_id": 26285}, {"count": 6, "tags": [], "creator": "spepping@apache.org", "text": "Applied. Thanks. I did take over your changes of URL to URI, esp. not in the signature of public methods. I also did not take over your changes in the Generic type of arguments of commons-io methods.", "id": 142040, "time": "2010-11-26T13:41:25Z", "bug_id": 50245, "creation_time": "2010-11-26T13:41:25Z", "is_private": false, "attachment_id": null}]