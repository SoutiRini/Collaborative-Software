[{"count": 0, "tags": [], "text": "To state the problem in shortest terms possible: <sync> task copied over files \nthat already existed in target directory.  \n\nIt was as if <sync> thought none of the files or directories were in the target \nlocation.  Only a few dozen files should have been copied over but everything \nwas.  Again, almost all of the files that <sync> copied over already existed in \nthe target directory.  \n\nThe sync process began at 11:05 pm on 10/31.  Please make special note that \n10/31 2:00am was time change from daylight savings to standard time--fall back \none hour (eastern time).  \n\nI think the combination of being the day of time change and it also being the \nlast day of month caused the glitch.  Did <sync> think the time/date was 12:05 \nNovember 1st?  Maybe, in some way, the algoritm for determining what files need \nto be sync-ed depends on system time?  And there is a flaw in the logic?  \n(note: using Windows 2000)\n\n\nHere a partial of my backup code:\n--------------------------------------\n<target name=\"sync-e\" depends=\"init\">\n  <property name=\"e.dir\" value=\"E:/backup/${year}/${month}\"/>\n  \n  <echo message=\"dev\"/>\n  <sync todir=\"${e.dir}/dev\">\n    <fileset dir=\"c:/dev\"/>\n  </sync>\n\n</target>\n\n<target name=\"init\">\n  <!-- General config -->\n  <tstamp><format property=\"year\" pattern=\"yyyy\" locale=\"en\"/></tstamp>\n  <tstamp><format property=\"month\" pattern=\"MM\" locale=\"en\"/></tstamp>\n  <tstamp><format property=\"day\" pattern=\"dd\" locale=\"en\"/></tstamp>\n  <tstamp><format property=\"file.frag\" pattern=\"yyyyMMdd\" locale=\"en\"/></tstamp>\n  <tstamp><format property=\"file.yyyymm\" pattern=\"yyyyMM\" locale=\"en\"/></tstamp>\n\n  <property environment=\"env\" />        \n  <property file=\"${basedir}/build.properties\" /> \n  \n</target>", "is_private": false, "id": 66589, "creator": "pfisterj41@yahoo.com", "time": "2004-11-07T16:13:50Z", "bug_id": 32105, "creation_time": "2004-11-07T16:13:50Z", "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 32105, "attachment_id": null, "text": "Even if sync would have thought it would be the next day, the comparison between\nthe timestamps of two files should not suffer from that. Did the copy involve a\nsingle machine only, or two different machines?\n\nIn case two different machines were involved, where the clocks of the two\nmachines in sync? (did both switch from summer time to winter time?)", "id": 66590, "time": "2004-11-07T16:45:08Z", "creator": "jkf@apache.org", "creation_time": "2004-11-07T16:45:08Z", "is_private": false}, {"count": 2, "tags": [], "creator": "pfisterj41@yahoo.com", "attachment_id": null, "id": 66591, "time": "2004-11-07T16:56:23Z", "bug_id": 32105, "creation_time": "2004-11-07T16:56:23Z", "is_private": false, "text": ">Did the copy involve a single machine only, or two different machines?\nSingle machine.  syncing Windows 2000 machine C drive to E drive, which is \nexternal ADS Technologies USB2.0 having 40gb drive.\n"}, {"count": 3, "tags": [], "bug_id": 32105, "attachment_id": null, "text": "If I open my USB drive with timestamp 21:10 on, disconnect the drive and change\nthe timezone on my machine the displayed time of the file does not change.\n(Windows appears to not have or construct timezone information for files on the\nUSB drive) (USB drive has FAT FS)\n\nWhen I look at files on my harddrive / network drives the timestamp of the file\nis changed to 23:10 when modifying the timezone, these timestamps are corrected\nfor the shift in timezone. (Windows does appear to construct timezone\ninformation for files on these devices.) (HDD has NTFS, Network SAMBA)\n\nMaybe, all files on your USB device got one hour older according to windows.\n\nCould you verify if this also happens on your system.\n(Look at timestamp of a file in the file browser on your C drive, and one on\nyour E drive; change the timezone to a different one, with a different current\ntime, preferrably at least 2 hours away, check the timestamps on both files again.)", "id": 66592, "time": "2004-11-07T17:28:44Z", "creator": "jkf@apache.org", "creation_time": "2004-11-07T17:28:44Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 32105, "attachment_id": null, "id": 66593, "time": "2004-11-07T17:58:54Z", "creator": "pfisterj41@yahoo.com", "creation_time": "2004-11-07T17:58:54Z", "is_private": false, "text": "I see timestamp change.  I changed time ahead two hours and then changed \ntimezone from eastern to mountain time.\n\nA file's timestamp stayed at 12:24:48am on C drive, while on E drive timestamp \nwas 12:24:48am and after changes was 10:24:48am.\n\nPlease explain what is occurring.  I take it the bug is not with <sync> but \nwith operating system to USB device interaction?  Or can <sync> logic be \nmodified to handle this hardware device/operating system behavior?\n\nBest Regards, Jim\n"}, {"count": 5, "tags": [], "bug_id": 32105, "attachment_id": null, "id": 66595, "time": "2004-11-07T18:25:49Z", "creator": "jkf@apache.org", "creation_time": "2004-11-07T18:25:49Z", "is_private": false, "text": "I suspect it is not the USB that is causing this mismatch but the filesystem.\n\nThe filesystem does determine how dates are stored on the disk. On some disks\nthe time is stored in UTC, on other file systems the time is stored in local\ntime. When syncing between to file systems that use UTC there is no problem, but\nif one of the file systems uses UTC to store the time, and the other stores an\ntimestamp as \"local\" time, when the clock is set back /forward the times of the\nfiles on the filesystem that uses UTC seem to change (but stay the same in UTC).\nNow when a local time is used as timestamp on a filesystem, the time displayed\nfor a file stays the same (but changes with regards to an \"observer\" in UTC).\n\nUsing UTC timestamps has an advantage, A file changing in the hour where the\nclock gets set back, will get a later timestamp, even when the first\nmodification is at 2:50(1) and the second one 11 minutes later at 2:01(2). This\n is not the case when local timestamps are used. The file gets older by changing\nit later!\n\nAlso travelling around, network interactions etc, make UTC more useable.\n\nThere is nothing ant can do about the time handling of the os. The one thing you\ncould try to do is use the same FS on both file systems.\n\nI am marking the bug as invalid, as there is nothing in ant we can do about the\nfilesystems used, in combination with the handling of the timestamps in the\nfilesystems by the os."}]