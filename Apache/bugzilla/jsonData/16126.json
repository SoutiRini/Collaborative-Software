[{"count": 0, "tags": [], "bug_id": 16126, "text": "Looks like a possible RFC 2616 MUST violation.\nApache acts as if If-None-Match header was absent\nor as if its value mismatched cached ETag. It looks\nlike If-None-Match: * is handled correctly though.\n\nSee attached trace(s) for details and ways to reproduce\nthe violation mentioned above.\n\nTest case IDs in the trace link to human-oriented test case\ndescription and RFC quotes, if available.\n\nThis bug might be related to a closed bug #12207, not sure.", "id": 29440, "time": "2003-01-15T18:25:01Z", "creator": "coad@measurement-factory.com", "creation_time": "2003-01-15T18:25:01Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "creator": "coad@measurement-factory.com", "attachment_id": 4440, "text": "Created attachment 4440\ntest case trace (weak ETags)", "id": 29441, "time": "2003-01-15T18:26:53Z", "bug_id": 16126, "creation_time": "2003-01-15T18:26:53Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 16126, "attachment_id": 4441, "id": 29442, "time": "2003-01-15T18:30:14Z", "creator": "coad@measurement-factory.com", "creation_time": "2003-01-15T18:30:14Z", "is_private": false, "text": "Created attachment 4441\nsuccessful If-None-Match: * case trace"}, {"count": 3, "tags": [], "creator": "sragavan@novell.com", "attachment_id": 7117, "text": "Created attachment 7117\nThe ETags was not read from Cache to r->headers_out. Attached fix would do it.", "id": 40052, "time": "2003-07-07T10:46:14Z", "bug_id": 16126, "creation_time": "2003-07-07T10:46:14Z", "is_private": false}, {"count": 4, "tags": [], "creator": "coad@measurement-factory.com", "attachment_id": null, "text": "The proposed fix may have positive effect,\nbut does not solve the problem completely.\nTwo out of ten test cases in this clause\nstill fail. Corresponding traces for two\nfailed test cases will be attached.\n\nApache may be ignoring weak status of\nETag entity tag when comparing with strong\nIf-None-Match tag. The comparison should fail,\nbut it probably does not.\n", "id": 40098, "time": "2003-07-07T20:21:35Z", "bug_id": 16126, "creation_time": "2003-07-07T20:21:35Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 16126, "attachment_id": 7134, "id": 40102, "time": "2003-07-07T20:29:29Z", "creator": "coad@measurement-factory.com", "creation_time": "2003-07-07T20:29:29Z", "is_private": false, "text": "Created attachment 7134\nweak ETag and strong If-None-Match empty entity tags"}, {"count": 6, "tags": [], "bug_id": 16126, "attachment_id": 7135, "text": "Created attachment 7135\nweak ETag and strong If-None-Match non-empty entity tags", "id": 40104, "time": "2003-07-07T20:30:19Z", "creator": "coad@measurement-factory.com", "creation_time": "2003-07-07T20:30:19Z", "is_private": false}, {"count": 7, "tags": [], "bug_id": 16126, "text": "I'm going through the bug db to make sure patches are findable.  Please see \nhttp://httpd.apache.org/dev/patches.html\n", "id": 47803, "time": "2003-11-21T17:16:32Z", "creator": "trawick@apache.org", "creation_time": "2003-11-21T17:16:32Z", "is_private": false, "attachment_id": null}, {"count": 8, "tags": [], "text": "FYI: This violation seems to be present in httpd-2.0.54", "attachment_id": null, "id": 76098, "creation_time": "2005-06-06T21:59:11Z", "time": "2005-06-06T21:59:11Z", "creator": "coad@measurement-factory.com", "bug_id": 16126, "is_private": false}, {"count": 9, "tags": [], "creator": "davi@apache.org", "attachment_id": null, "text": "Could you re-test all violations against current versions? Thanks.", "id": 104239, "time": "2007-06-08T13:52:27Z", "bug_id": 16126, "creation_time": "2007-06-08T13:52:27Z", "is_private": false}, {"count": 10, "tags": [], "bug_id": 16126, "attachment_id": null, "text": "Oops, hit Commit too soon.\n\nClosing since it was reported against old versions and has not been updated.  If the problems still affect current versions, please re-open.", "id": 127962, "time": "2009-06-16T07:45:22Z", "creator": "poirier@pobox.com", "creation_time": "2009-06-16T07:45:22Z", "is_private": false}, {"count": 11, "tags": [], "bug_id": 16126, "attachment_id": null, "id": 127969, "time": "2009-06-16T08:21:57Z", "creator": "coad@measurement-factory.com", "creation_time": "2009-06-16T08:21:57Z", "is_private": false, "text": "We are unlikely to retest ourselves in the foreseeable future because there is no indication that the new results will not be ignored for another six years.\n\nHowever, we would be more than happy to work with an Apache project developer who is willing to run the tests and report (or fix) violations.\n\nThank you."}, {"count": 12, "tags": [], "bug_id": 16126, "text": "Re-open.  Per dev list, keep track of potential protocol violations indefinitely until evaluated and fixed or determined not valid.", "id": 127982, "time": "2009-06-16T10:26:49Z", "creator": "poirier@pobox.com", "creation_time": "2009-06-16T10:26:49Z", "is_private": false, "attachment_id": null}, {"count": 13, "tags": [], "bug_id": 16126, "attachment_id": null, "text": "The trunk version of mod_cache and mod_disk_cache has been drastically overhauled, the parsing of Cache-Control headers has been optimised, and a significant number of RFC violations were fixed.\n\nIt would be useful if confirmation could be had with the new code that the violations have been fixed, and we haven't added any new violations. Would it be possible to run the tests again and confirm?", "id": 140806, "time": "2010-10-18T19:04:38Z", "creator": "minfrin@sharp.fm", "creation_time": "2010-10-18T19:04:38Z", "is_private": false}, {"count": 14, "tags": [], "bug_id": 16126, "attachment_id": null, "id": 140827, "time": "2010-10-19T12:33:11Z", "creator": "coad@measurement-factory.com", "creation_time": "2010-10-19T12:33:11Z", "is_private": false, "text": "(In reply to comment #13)\n\n> It would be useful if confirmation could be had with the new code that the\n> violations have been fixed, and we haven't added any new violations. Would it\n> be possible to run the tests again and confirm?\n\nYes, we are trying to find an Apache insider who can take care of this retesting project. Please ping us in a few weeks if there are no updates."}, {"count": 15, "tags": [], "creator": "nick@webthing.com", "attachment_id": null, "id": 141371, "time": "2010-11-03T15:33:46Z", "bug_id": 16126, "creation_time": "2010-11-03T15:33:46Z", "is_private": false, "text": "(In reply to comment #14)\n> (In reply to comment #13)\n> \n> > It would be useful if confirmation could be had with the new code that the\n> > violations have been fixed, and we haven't added any new violations. Would it\n> > be possible to run the tests again and confirm?\n> \n> Yes, we are trying to find an Apache insider who can take care of this\n> retesting project. Please ping us in a few weeks if there are no updates.\n\nI've run coadvisor against out-of-the-box 2.2.17 and put results at http://people.apache.org/~niq/coadvisor/ .  The cache results need more study, and are no doubt a mix of genuine bugs and other issues such as my configuration.\n\nIt looks as if relevant testcases now pass, but leaving open until confirmed (the report as of now is too big a haystack to find the testcases in this report reliably and without too much effort)."}, {"count": 16, "tags": [], "bug_id": 16126, "attachment_id": null, "id": 144213, "time": "2011-02-11T18:21:02Z", "creator": "minfrin@sharp.fm", "creation_time": "2011-02-11T18:21:02Z", "is_private": false, "text": "Is it possible to rerun the cache tests against httpd-trunk? mod_cache has been drastically overhauled on trunk, and I suspect there are violations that are fixed."}, {"count": 17, "tags": [], "creator": "minfrin@sharp.fm", "attachment_id": null, "text": "Looking deeper at the list of violations, many are definitely fixed on trunk.\n\nMany of the violations required changes to the mod_cache API, which is why they can't be backported to v2.2. As a result, it would be very useful to run the tests against trunk before the API is baked in, just in case more changes to the API are needed, so we catch them before httpd v2.4 is released.", "id": 144219, "time": "2011-02-12T08:16:51Z", "bug_id": 16126, "creation_time": "2011-02-12T08:16:51Z", "is_private": false}, {"count": 18, "tags": [], "bug_id": 16126, "text": "Oops, didn't mean to close it.", "id": 144220, "time": "2011-02-12T08:18:08Z", "creator": "minfrin@sharp.fm", "creation_time": "2011-02-12T08:18:08Z", "is_private": false, "attachment_id": null}, {"count": 19, "tags": [], "bug_id": 16126, "text": "httpd 2.4.1 is out now\u2026 time to retest and possibly close the bug?", "id": 154797, "time": "2012-03-11T12:47:38Z", "creator": "isoma@c8h10n4o2.org.uk", "creation_time": "2012-03-11T12:47:38Z", "is_private": false, "attachment_id": null}, {"count": 20, "tags": [], "bug_id": 16126, "text": "First problem uncovered is that ap_meets_conditions() uses ap_find_list_item() to search for the ETag match, and ap_find_list_item() assumes that the string being searched for is already lowercase, which for a weak ETag by definition is not true (Weak ETag starts with \"W\").\n\nThis should fix this:\n\nIndex: server/util.c\n===================================================================\n--- server/util.c\t(revision 1479115)\n+++ server/util.c\t(working copy)\n@@ -1375,7 +1375,8 @@\n                                if (in_com || in_qstr)\n                                    good = good && (*pos++ == *ptr);\n                                else\n-                                   good = good && (*pos++ == apr_tolower(*ptr));\n+                                   good = good\n+                                       && (apr_tolower(*pos++) == apr_tolower(*ptr));\n                                addspace = 0;\n                                break;\n                 }", "id": 167049, "time": "2013-05-05T23:23:14Z", "creator": "minfrin@sharp.fm", "creation_time": "2013-05-05T23:23:14Z", "is_private": false, "attachment_id": null}, {"count": 21, "tags": [], "bug_id": 16126, "attachment_id": null, "id": 167057, "time": "2013-05-06T11:44:52Z", "creator": "minfrin@sharp.fm", "creation_time": "2013-05-06T11:44:52Z", "is_private": false, "text": "Seems more involved than this.\n\nap_meets_conditions() doesn't know how to make a weak ETag comparison as described in RFC2616 section 13.3.3.\n\nFixed in r1479528.\n\nProposed for backport to v2.4."}]