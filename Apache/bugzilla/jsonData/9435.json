[{"count": 0, "tags": [], "creator": "h.brands@eurodata.de", "text": "example log entry looks like:\n<log4j:event category=\"de.eurodata.Protokoll\" timestamp=\"1022489698611\" \npriority=\"INFO\" thread=\"AWT-EventQueue-0\">\n...\n</log4j:event>\nChainsaw (from log4j 1.2.1) displays it as priority DEBUG.\n\nI think the error is in method XMLFileHandler.startElement(...):\n\nThe line\n   Priority = Priority.toPriority(aAtts.getValue(\"level\"));\nis incorrect in my opinion, because the attribute name in the log4j.dtd\nis \"priority\". As a consequence, Chainsaw is using the default log level \n(DEBUG).", "id": 16767, "time": "2002-05-27T09:16:07Z", "bug_id": 9435, "creation_time": "2002-05-27T09:16:07Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "creator": "h.brands@eurodata.de", "text": "Note, that this error only occurs, when the XML log file was created with\nan \"old\" Log4J version 1.1.x.\nLog4J 1.2.x creates the event attribute \"level\" as expected by Chainsaw.\n\n(But the distributed log4j.dtd in src/java/org/apache/log4j/xml still lists\n\"priority\" as attribute name, so I was a little confused.)\n\n", "id": 16803, "time": "2002-05-28T07:27:17Z", "bug_id": 9435, "creation_time": "2002-05-28T07:27:17Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 9435, "attachment_id": null, "id": 16808, "time": "2002-05-28T12:59:10Z", "creator": "oliver@puppycrawl.com", "creation_time": "2002-05-28T12:59:10Z", "is_private": false, "text": "The problem is that the XMLLayout class is generating XML that does not\nconform to the DTD. It uses \"level\" instead of \"priority\" as the DTD would\nsuggest. I was faced with the problem of chosing between making Chainsaw\nsupport:\n\n- the DTD, but not work with 1.1 code\n- what the XMLLayout class generates, but not work with 1.2 code\n- some kludge that would support both. A kludge is required as there is no\n  log4j version information in the output generated by XMLLayout\n\nNot liking kludges I went for the second option. The question is, should we:\n\n- fix XMLLayout to support the DTD;\n- put a kludge in Chainsaw to support \"level\" and \"priority\"\n- do both of the above.\n\nI will do whatever Ceki recommends."}, {"count": 3, "attachment_id": null, "bug_id": 9435, "is_private": false, "id": 16814, "time": "2002-05-28T14:02:04Z", "creator": "ceki@apache.org", "creation_time": "2002-05-28T14:02:04Z", "tags": [], "text": "\nThe DTD should be updated to something like:\n\n<!-- The timestamp format is application dependent. -->\n<!ATTLIST log4j:event\n    logger     CDATA #REQUIRED\n    level      CDATA #REQUIRED\n    thread     CDATA #REQUIRED\n    timestamp  CDATA #REQUIRED\n>\n\nNotice the two changes category -> logger and priority -> level.\nI'll also update XMLLayout to conform to the dtd. \nWhen chainsaw follows suite, we'll release log4j 1.2.4.\n\nThere is no point in mulling over this for ages. Reading XMLLayouts is \nrelatively new feature such that the number of upset users by the backward \ncompatibility problem is likely to be low.\n"}, {"count": 4, "tags": [], "creator": "oliver@puppycrawl.com", "attachment_id": null, "text": "put in the fix as requested by Ceki.", "id": 16870, "time": "2002-05-29T11:56:06Z", "bug_id": 9435, "creation_time": "2002-05-29T11:56:06Z", "is_private": false}]