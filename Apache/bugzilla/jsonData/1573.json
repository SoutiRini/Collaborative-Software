[{"count": 0, "tags": [], "creator": "pdw@decisionsoft.com", "text": "CVS checkout dated 29/04/01.\n\n1. FACET_ENCODING never gets set, so no validation of the encoding ever gets set.\n2. Base64 validation incorrectly rejects zero-length strings.\n3. There is an error in the error message for this validation.\n\nThe patch below fixes all these bugs: (also at\nhttp://www.decisionsoft.com/pdw/xerces-j-base64.diff)\n\n\ndiff -cr xml-xerces-clean/java/src/org/apache/xerces/utils/Base64.java\nxml-xerces/java/src/org/apache/xerces/utils/Base64.java\n*** xml-xerces-clean/java/src/org/apache/xerces/utils/Base64.java\tTue Apr 24 16:43:24 2001\n--- xml-xerces/java/src/org/apache/xerces/utils/Base64.java\tTue Apr 24 15:08:51 2001\n***************\n*** 133,139 ****\n      public static boolean isArrayByteBase64( byte[] arrayOctect ) {\n          int length = arrayOctect.length;\n          if ( length == 0 )\n!             return false;\n          for ( int i=0; i < length; i++ ) {\n              if ( Base64.isBase64( arrayOctect[i] ) == false)\n                  return false;\n--- 133,141 ----\n      public static boolean isArrayByteBase64( byte[] arrayOctect ) {\n          int length = arrayOctect.length;\n          if ( length == 0 )\n!             // a zero-length Base64 string is valid according to the RFC\n!             //  -- pdw@decisionsoft.com 2001-04-24\n!             return true;\n          for ( int i=0; i < length; i++ ) {\n              if ( Base64.isBase64( arrayOctect[i] ) == false)\n                  return false;\ndiff -cr\nxml-xerces-clean/java/src/org/apache/xerces/validators/datatype/BinaryDatatypeValidator.java\nxml-xerces/java/src/org/apache/xerces/validators/datatype/BinaryDatatypeValidator.java\n*** xml-xerces-clean/java/src/org/apache/xerces/validators/datatype/BinaryDatatypeValidator.java\tTue Apr 24 16:43:45 2001\n--- xml-xerces/java/src/org/apache/xerces/validators/datatype/BinaryDatatypeValidator.java\tTue Apr 24 16:36:35 2001\n***************\n*** 138,144 ****\n                      fFacetsDefined += DatatypeValidator.FACET_ENUMERATION;\n                      fEnumeration = (Vector)facets.get(key);\n                  } else if (key.equals(SchemaSymbols.ELT_ENCODING )) {\n!                     fFacetsDefined += DatatypeValidator.FACET_MAXINCLUSIVE;\n                      fEncoding = (String)facets.get(key);\n                  } else {\n                      throw new InvalidDatatypeFacetException();\n--- 138,144 ----\n                      fFacetsDefined += DatatypeValidator.FACET_ENUMERATION;\n                      fEnumeration = (Vector)facets.get(key);\n                  } else if (key.equals(SchemaSymbols.ELT_ENCODING )) {\n!                     fFacetsDefined += DatatypeValidator.FACET_ENCODING;\n                      fEncoding = (String)facets.get(key);\n                  } else {\n                      throw new InvalidDatatypeFacetException();\n***************\n*** 182,198 ****\n          if ( this.fBaseValidator != null ) {//validate against parent type if any\n              this.fBaseValidator.validate( content, state );\n          }\n-\n          if (((fFacetsDefined & DatatypeValidator.FACET_ENCODING) != 0 ) ){\n//Encode defined then validate\n              if ( fEncoding.equals( SchemaSymbols.ATTVAL_BASE64)){ //Base64\n                  if ( Base64.isBase64( content ) == false ) {\n                      throw new InvalidDatatypeValueException( \"Value '\"+\n!                                                                 content+ \"'\nmust be\" + \"is not encoded in Base64\" );\n                  }\n              } else { //HexBin\n                  if ( HexBin.isHex( content ) == false ){\n                      throw new InvalidDatatypeValueException( \"Value '\"+\n!                                                                 content+ \"'\nmust be\" + \"is not encoded in Hex\" );\n                  }\n              }\n          }\n--- 182,197 ----\n          if ( this.fBaseValidator != null ) {//validate against parent type if any\n              this.fBaseValidator.validate( content, state );\n          }\n          if (((fFacetsDefined & DatatypeValidator.FACET_ENCODING) != 0 ) ){\n//Encode defined then validate\n              if ( fEncoding.equals( SchemaSymbols.ATTVAL_BASE64)){ //Base64\n                  if ( Base64.isBase64( content ) == false ) {\n                      throw new InvalidDatatypeValueException( \"Value '\"+\n!                                                                 content+ \"'\nmust be encoded in Base64\" );\n                  }\n              } else { //HexBin\n                  if ( HexBin.isHex( content ) == false ){\n                      throw new InvalidDatatypeValueException( \"Value '\"+\n!                                                                 content+ \"'\nmust be encoded in Hex\" );\n                  }\n              }\n          }", "id": 2162, "time": "2001-04-29T11:17:19Z", "bug_id": 1573, "creation_time": "2001-04-29T11:17:19Z", "is_private": false, "attachment_id": null}]