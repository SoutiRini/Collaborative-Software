[{"count": 0, "tags": [], "bug_id": 42143, "text": "I'd like to have the possiblity to use expressions in the if attribute - and\npossibly the unless attribute as well, like so:\n\n    <target name=\"jars\" depends=\"compile_B,compile_A\" if=\"plugins_changed and\n(A_changed or B_changed)\">\n        ... do stuff ...\n    </target>\n\n\nWithout, I have to do this:\n\n    <target name=\"jars\" depends=\"jars_A_changed,jars_B_changed\">\n\t<!-- Fake target to get conditional dependencies working -->\n    </target>\n\n    <target name=\"jars_A_changed\" if=\"A_changed\">\n\t<antcall target=\"make_jars\"/>\n\t<property name=\"jars_made\" value=\"blah\"/>\n    </target>\n\n    <target name=\"jars_B_changed\" if=\"B_changed\">\n\t<antcall target=\"make_jars\"/>\n\t<property name=\"jars_made\" value=\"blah\"/>\n    </target>\n\n    <target name=\"make_jars\" if=\"plugins_changed\" unless=\"jars_made\">\n\tmake jars\n    </target>\n\nThat's ugly and error-prone. It's something I don't want my successor to encounter.", "id": 101788, "time": "2007-04-17T02:51:40Z", "creator": "svroemisse@servoy.com", "creation_time": "2007-04-17T02:51:40Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "creator": "stevel@apache.org", "attachment_id": null, "id": 101790, "time": "2007-04-17T03:20:01Z", "bug_id": 42143, "creation_time": "2007-04-17T03:20:01Z", "is_private": false, "text": "There's lots of reasons why this is really hard, and its been asked for before,\nbut I wont close it as wontfix, as it a sign of pent up need. \n\nCan I point out that there is a much cleaner way to do this; use the condition\ntask to set a property containing all your tests, and depend on the result:\n\n    \n    <target name=\"check-rebuild-needed\">\n      <condition property=\"make-the-jars\" >\n       <or>\n        <isset property=\"A_changed\" />\n        <isset property=\"B_changed\" />\n      </condition>\n    </target>\n    \n    <target name=\"make_jars\" depends=\"check-rebuild-needed\" if=\"make-the-jars\">\n     ...\n    </target>\n\nThis keeps the dependency graph in order, lets you declare complex conditions,\nand is fairly easy to debug.\n\n-steve\n"}, {"count": 2, "tags": [], "bug_id": 42143, "attachment_id": null, "id": 101792, "time": "2007-04-17T04:41:17Z", "creator": "svroemisse@servoy.com", "creation_time": "2007-04-17T04:41:17Z", "is_private": false, "text": "Wow, you're fast :)\n\n> Can I point out that there is a much cleaner way to do this; use the condition\n> task to set a property containing all your tests, and depend on the result:\n\nThanks for pointing that out, it is indeed a whole lot cleaner.\n"}, {"count": 3, "tags": [], "text": "I'd say this has been implemented by now with the new way if/unless work for property references that return Boolean instances.  All you'd need is a property helper that expanded\n\n${plugins_changed and(A_changed or B_changed)}\n\ncorrectly and it's likely the condition expander of the (unreleased) props Antlib would already do (using a different syntax, of course).", "is_private": false, "bug_id": 42143, "id": 135861, "time": "2010-04-03T06:40:35Z", "creator": "bodewig@apache.org", "creation_time": "2010-04-03T06:40:35Z", "attachment_id": null}]