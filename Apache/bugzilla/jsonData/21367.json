[{"count": 0, "tags": [], "bug_id": 21367, "attachment_id": null, "text": "First, we thought as per the above URL that this is a tomcat problem.\n<<log4j:ERROR Could not read configuration file [nulllog4j.properties].\njava.io.FileNotFoundException: nulllog4j.properties (The system cannot find the\nfile specified)\n        at java.io.FileInputStream.open(Native Method)\n        at java.io.FileInputStream.<init>(FileInputStream.java:103)\n        at java.io.FileInputStream.<init>(FileInputStream.java:66)\n        at\norg.apache.log4j.PropertyConfigurator.doConfigure(PropertyConfigurator.java:300)\n        at\norg.apache.log4j.PropertyConfigurator.configure(PropertyConfigurator.java:318)\n        at com.privasphere.privalope.util.Log4JServlet.init(Log4JServlet.java:34)\n        at javax.servlet.GenericServlet.init(GenericServlet.java:256)>>\nBut now we realize that log4j.properties is present in the .war file at the very\nsame location as all the jsp files.\n\nHow can we find out a) where log4j looks for b) what file?\nThe error log as per the above URL neither mentions \"log4j.properties\" nor the\npath it is searching for.\n\nIn source/com/privasphere/privalope/util/Log4JServlet.java, we do\n<<...\nimport org.apache.log4j.PropertyConfigurator;\n\npublic class Log4JServlet extends HttpServlet {\n  public void init()\n\tthrows ServletException {\n\t// Get Fully Qualified Path to Properties File\n\tString path = getServletContext().getRealPath(\"/\");\n\tString propfile = path + getInitParameter(\"propfile\");\n\n\t// Initialize Properties for All Servlets\n\tPropertyConfigurator.configure(propfile);  //Line 34\n...>>\n\n\n<<\n<servlet>\n  <servlet-name>log4j</servlet-name>\n  <servlet-class>com.privasphere.privalope.util.Log4JServlet</servlet-class>\n  <init-param>\n   <param-name>propfile</param-name>\n   <param-value>log4j.properties</param-value>\n  </init-param>\n  <load-on-startup>1</load-on-startup>\n</servlet>\n>>", "id": 40053, "time": "2003-07-07T10:47:58Z", "creator": "hauser@acm.org", "creation_time": "2003-07-07T10:47:58Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 21367, "text": "sorry, the last code snipped <<servlet>> comes out of WEB-INF/web.xml", "id": 40056, "time": "2003-07-07T10:55:54Z", "creator": "hauser@acm.org", "creation_time": "2003-07-07T10:55:54Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "creator": "ceki@apache.org", "attachment_id": null, "text": "\nThe description of the problem is not clear. Please redirect it as a question \nto the log4j user list. Once it is established that there is indeed a log4j \nproblem, you can re-submit it as a bug report.\n", "id": 40066, "time": "2003-07-07T13:35:49Z", "bug_id": 21367, "creation_time": "2003-07-07T13:35:49Z", "is_private": false}, {"count": 3, "text": "I think the problem is perfectly clear.  This is niether a Tomcat nor a Log4j\nissue.  It is a user issue.  An absolute path is being passed to the log4j\nproperty configurator.  However, the path obtained from getRealPath(\"/\") is\nnull.  This is most likely because the webapp is being served directly from a\n.war file, in which case there is no file system access to the contents of the\nwebapp.  In other words, the error is in the user's assumption that\ngetRealPath(\"/\") will always return a non-null path which is absolutely false.\n\nThe solution is quite simple; use\ncontext.getResourceAsStream(getInitParameter(\"propfile\")).  This returns an\ninput stream which will work 100% of the time whether the app is being served\noff the file system or from within a .war file.  Make sure to make the\n\"propfile\" path relative to the webapp such as \"/WEB-INF/log4j.properties\".\n\nVerifying the bug as invalid.\n\nJake", "bug_id": 21367, "attachment_id": null, "id": 40146, "time": "2003-07-08T05:43:56Z", "creator": "hoju@visi.com", "creation_time": "2003-07-08T05:43:56Z", "tags": [], "is_private": false}, {"count": 4, "attachment_id": null, "creator": "hauser@acm.org", "text": "PropertyConfigurator.configure(getServletContext().getResource(\"/\" +\ngetInitParameter(\"propfile\")));\n\nsolved it - thanks!", "id": 40185, "time": "2003-07-08T15:42:49Z", "bug_id": 21367, "creation_time": "2003-07-08T15:42:49Z", "tags": [], "is_private": false}]