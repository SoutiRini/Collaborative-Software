[{"count": 0, "tags": [], "text": "The attribute name is 'tempdir'; however, the variable name in the Javac source \nfile is 'tmpDir'.  As a result, a tempdir value specified in a build file will \nnever be used.  The temp output will always be directed to user.dir.  \n\nNormally, this is ok and even preferred.  In some situation however this blocks \nbuilds.  I'm working in a clearcase environment where the temp output must NOT \nbe directed back to the ClearCase view.  First and foremost there's a \nsignificant performance penalty to writing temp files to a view.  Second, when \nusing ClearCase on windows you won't always have write permissions back to the \ndirectory containing your build file.  In those situations javac will not \ncomplete when your command length exceeds 4096 characters.\n\nThe fix is simple, just rename tmpDir to tempdir in the Javac source file.\n\nI verified that this defect is present also in the latest 1.6.1-beta load.\n\nI'll be glad to help or make the change even if you need.  I've not pitched in \nto an open source initiative before but I'm eager to start.", "attachment_id": null, "id": 51499, "creator": "steve@scheffler.us", "time": "2004-01-30T19:32:28Z", "bug_id": 26559, "creation_time": "2004-01-30T19:32:28Z", "is_private": false}, {"count": 1, "tags": [], "text": "Created attachment 10166\nJavac task patch to enable tempdir attribute", "attachment_id": 10166, "id": 51509, "creator": "steve@scheffler.us", "time": "2004-01-30T22:52:14Z", "bug_id": 26559, "creation_time": "2004-01-30T22:52:14Z", "is_private": false}, {"count": 2, "tags": [], "creator": "peter.reilly@corvil.com", "attachment_id": null, "id": 51576, "time": "2004-02-02T10:14:32Z", "bug_id": 26559, "creation_time": "2004-02-02T10:14:32Z", "is_private": false, "text": "Although the doc does not specify this, from the code, the\ntempdir attribute is only used when the compilation is\nforked.\nThe code itself is not incorrect, although the use of \"tmpDir\" for\nthe private field name and the use of the setTempDir to make the\nattribute name tempdir, is not good code style, so the attached\npatch is not needed.\nPerhaps a change to the doc could fix this?"}, {"count": 3, "tags": [], "bug_id": 26559, "is_private": false, "text": "I understand that the attribute is ignored when javac isn't forked.  However, \nlooking through the source you can see that setTempdir is only called via the \nattribute name (ala java beans).  A direct call to setTempdir isn't made \nanywhere in the ant source code.  By having the attribute name slightly \ndifferent from the getters and setterss expected by the javac task you \nguarantee that (even when forked) the directory used will always be the \ncurrent directory, not the temp directory.\n\nThis was first noticeable by me b/c I was working out of a directory that I \nhad no write permissions to.  The build kept failing until I turned forking \noff.  ", "id": 51638, "time": "2004-02-03T02:46:29Z", "creator": "steve@scheffler.us", "creation_time": "2004-02-03T02:46:29Z", "attachment_id": null}, {"count": 4, "tags": [], "text": "Please disregard my last comment.  After reading my post I realized that it \nshouldn't matter what the private attribute was called, as you pointed out.  I \nwent back and tested again and, sure enough, the tempdir attribute is getting \nset when you fork the process, regardless of how the private variable is named.\n\nAgreed that it would be nice to surface in the docs that tempdir is only used \nwhen the command line args length exceeds 4k.  \n\nI don't now know what I was seeing the other day.  Something was off.  Perhaps \nit was me with insufficient caffeine....", "is_private": false, "id": 51640, "creator": "steve@scheffler.us", "time": "2004-02-03T04:40:36Z", "bug_id": 26559, "creation_time": "2004-02-03T04:40:36Z", "attachment_id": null}, {"count": 5, "attachment_id": null, "creator": "peter.reilly@corvil.com", "is_private": false, "id": 51647, "time": "2004-02-03T09:10:09Z", "bug_id": 26559, "creation_time": "2004-02-03T09:10:09Z", "tags": [], "text": "Ok updated the doc, should be in ant 1.6.1\nCheers!"}]