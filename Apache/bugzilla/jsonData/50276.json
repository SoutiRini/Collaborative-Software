[{"count": 0, "tags": [], "bug_id": 50276, "text": "Created attachment 26299\nTestcase\n\nA NullPointerException occurs when nesting a fo:basic-link element inside a fo:inline element and the fo:inline element has padding-left.\nThe error only happens if hyphenation is activated.\n\nThat's the stack trace:\nCaused by: java.lang.NullPointerException\n        at org.apache.fop.layoutmgr.inline.InlineStackingLayoutManager.applyChanges(InlineStackingLayoutManager.java:288)\n        at org.apache.fop.layoutmgr.inline.InlineStackingLayoutManager.applyChanges(InlineStackingLayoutManager.java:318)\n        at org.apache.fop.layoutmgr.inline.LineLayoutManager.processUpdates(LineLayoutManager.java:1363)\n        at org.apache.fop.layoutmgr.inline.LineLayoutManager.findHyphenationPoints(LineLayoutManager.java:1336)\n        at org.apache.fop.layoutmgr.inline.LineLayoutManager.findOptimalBreakingPoints(LineLayoutManager.java:804)\n        at org.apache.fop.layoutmgr.inline.LineLayoutManager.createLineBreaks(LineLayoutManager.java:770)\n        at org.apache.fop.layoutmgr.inline.LineLayoutManager.getNextKnuthElements(LineLayoutManager.java:589)\n        at org.apache.fop.layoutmgr.BlockStackingLayoutManager.getNextChildElements(BlockStackingLayoutManager.java:573)\n        at org.apache.fop.layoutmgr.BlockStackingLayoutManager.getNextChildElements(BlockStackingLayoutManager.java:554)\n        at org.apache.fop.layoutmgr.BlockStackingLayoutManager.getNextKnuthElements(BlockStackingLayoutManager.java:281)\n        at org.apache.fop.layoutmgr.BlockLayoutManager.getNextKnuthElements(BlockLayoutManager.java:123)\n        at org.apache.fop.layoutmgr.BlockLayoutManager.getNextKnuthElements(BlockLayoutManager.java:115)\n        at org.apache.fop.layoutmgr.FlowLayoutManager.getNextChildElements(FlowLayoutManager.java:208)\n        at org.apache.fop.layoutmgr.FlowLayoutManager.addChildElements(FlowLayoutManager.java:149)\n        at org.apache.fop.layoutmgr.FlowLayoutManager.addChildElements(FlowLayoutManager.java:138)\n        at org.apache.fop.layoutmgr.FlowLayoutManager.getNextKnuthElements(FlowLayoutManager.java:70)\n        at org.apache.fop.layoutmgr.PageBreaker.getNextKnuthElements(PageBreaker.java:222)\n        at org.apache.fop.layoutmgr.AbstractBreaker.getNextBlockList(AbstractBreaker.java:744)\n        at org.apache.fop.layoutmgr.PageBreaker.getNextBlockList(PageBreaker.java:155)\n        at org.apache.fop.layoutmgr.PageBreaker.getNextBlockList(PageBreaker.java:137)\n        at org.apache.fop.layoutmgr.AbstractBreaker.doLayout(AbstractBreaker.java:388)\n        at org.apache.fop.layoutmgr.PageBreaker.doLayout(PageBreaker.java:90)\n        at org.apache.fop.layoutmgr.PageSequenceLayoutManager.activateLayout(PageSequenceLayoutManager.java:107)\n        at org.apache.fop.area.AreaTreeHandler.endPageSequence(AreaTreeHandler.java:238)\n        at org.apache.fop.fo.pagination.PageSequence.endOfNode(PageSequence.java:120)\n        at org.apache.fop.fo.FOTreeBuilder$MainFOHandler.endElement(FOTreeBuilder.java:349)\n        at org.apache.fop.fo.FOTreeBuilder.endElement(FOTreeBuilder.java:177)\n        at org.apache.xalan.transformer.TransformerIdentityImpl.endElement(TransformerIdentityImpl.java:1101)\n        at org.apache.xerces.parsers.AbstractSAXParser.endElement(Unknown Source)\n        at org.apache.xerces.xinclude.XIncludeHandler.endElement(Unknown Source)\n        at org.apache.xerces.impl.XMLNSDocumentScannerImpl.scanEndElement(Unknown Source)\n        at org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher.dispatch(Unknown Source)\n        at org.apache.xerces.impl.XMLDocumentFragmentScannerImpl.scanDocument(Unknown Source)\n        at org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)\n        at org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)\n        at org.apache.xerces.parsers.XMLParser.parse(Unknown Source)\n        at org.apache.xerces.parsers.AbstractSAXParser.parse(Unknown Source)\n        at org.apache.xerces.jaxp.SAXParserImpl$JAXPSAXParser.parse(Unknown Source)\n        at org.apache.xalan.transformer.TransformerIdentityImpl.transform(TransformerIdentityImpl.java:484)\n        at org.apache.fop.cli.InputHandler.transformTo(InputHandler.java:300)\n        ... 3 more\n\nApparently the KnuthElement's position is null (oldElement.getPosition()). I attached a patch which adds an additional check in order to avoid the exception. This might not be a real solution, because I'm not sure if it's valid that the position is null.", "id": 141734, "time": "2010-11-15T15:34:59Z", "creator": "matthias8283@gmx.at", "creation_time": "2010-11-15T15:34:59Z", "is_private": false, "attachment_id": 26299}, {"count": 1, "tags": [], "bug_id": 50276, "text": "Created attachment 26300\nPatch", "id": 141735, "time": "2010-11-15T15:37:17Z", "creator": "matthias8283@gmx.at", "creation_time": "2010-11-15T15:37:17Z", "is_private": false, "attachment_id": 26300}, {"count": 2, "tags": [], "bug_id": 50276, "attachment_id": null, "id": 142504, "time": "2010-12-09T04:01:53Z", "creator": "spepping@apache.org", "creation_time": "2010-12-09T04:01:53Z", "is_private": false, "text": "Resolved in revision 1043871."}, {"count": 3, "tags": [], "creator": "spepping@apache.org", "text": "(In reply to comment #0)\n> Apparently the KnuthElement's position is null (oldElement.getPosition()). I\n> attached a patch which adds an additional check in order to avoid the\n> exception. This might not be a real solution, because I'm not sure if it's\n> valid that the position is null.\n\nI spent some more time on the validity of a null position. Auxiliary positions have null subposition, see InlineLayoutManager.getAuxiliaryPosition(), line: 597.\n\nIf a position is unwrapped often enough, this null position is reached. The chosen solution, i.e. not unwrapping if the null position is reached, adds a layer of wrapping around the null position, because later in the method all positions are wrapped again. Apparently that is not a problem.", "id": 142519, "time": "2010-12-09T07:01:32Z", "bug_id": 50276, "creation_time": "2010-12-09T07:01:32Z", "is_private": false, "attachment_id": null}, {"attachment_id": null, "tags": [], "creator": "matthias8283@gmx.at", "text": "(In reply to comment #3)\n> (In reply to comment #0)\n> > Apparently the KnuthElement's position is null (oldElement.getPosition()). I\n> > attached a patch which adds an additional check in order to avoid the\n> > exception. This might not be a real solution, because I'm not sure if it's\n> > valid that the position is null.\n> \n> I spent some more time on the validity of a null position. Auxiliary positions\n> have null subposition, see InlineLayoutManager.getAuxiliaryPosition(), line:\n> 597.\n> \n> If a position is unwrapped often enough, this null position is reached. The\n> chosen solution, i.e. not unwrapping if the null position is reached, adds a\n> layer of wrapping around the null position, because later in the method all\n> positions are wrapped again. Apparently that is not a problem.\n\nSimon,\n\nthanks for looking into this. I also had a further look at the code and I think there is still a problem when unwrapping and wrapping positions which is causing Bug 49870 [1]. When the InlineLayoutManager adds NonLeafPositions for border-left and border-right it sets the sub positions to null. Unwrapping the position causes the NonLeafPosition to get lost:\noldElement.setPosition(oldElement.getPosition().getPosition());\n\nI'm unsure if the problem should be fixed when adding the border NonLeafPositions in the first place or we add an additional check in the applyChanges() method. What do you think?\n\nRegards,\nMatthias Reischenbacher\n\n[1] https://issues.apache.org/bugzilla/show_bug.cgi?id=49870", "count": 4, "id": 142556, "time": "2010-12-10T07:20:46Z", "bug_id": 50276, "creation_time": "2010-12-10T07:20:46Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 50276, "attachment_id": null, "id": 142833, "time": "2010-12-19T09:11:09Z", "creator": "matthias8283@gmx.at", "creation_time": "2010-12-19T09:11:09Z", "is_private": false, "text": "*** Bug 47638 has been marked as a duplicate of this bug. ***"}, {"count": 6, "text": "*** Bug 47611 has been marked as a duplicate of this bug. ***", "bug_id": 50276, "attachment_id": null, "id": 142835, "time": "2010-12-19T09:27:37Z", "creator": "matthias8283@gmx.at", "creation_time": "2010-12-19T09:27:37Z", "tags": [], "is_private": false}, {"count": 7, "attachment_id": null, "bug_id": 50276, "text": "*** Bug 52411 has been marked as a duplicate of this bug. ***", "id": 152551, "time": "2012-01-03T09:49:44Z", "creator": "mathieu.malaterre@gmail.com", "creation_time": "2012-01-03T09:49:44Z", "tags": [], "is_private": false}, {"count": 8, "tags": [], "creator": "gadams@apache.org", "attachment_id": null, "text": "batch transition to closed; if someone wishes to restore one of these to resolved in order to perform a verification step, then feel free to do so", "id": 155459, "time": "2012-04-01T06:16:51Z", "bug_id": 50276, "creation_time": "2012-04-01T06:16:51Z", "is_private": false}]