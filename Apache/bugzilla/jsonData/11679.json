[{"count": 0, "tags": [], "creator": "jemiller@uchicago.edu", "is_private": false, "text": "I found that it's necessary to set the connectionName attribute when using \nJNDIRealm, even when just binding anonymously (at least when used with \nOpenLDAP 2.1.2). For example, this works,\n\n<Realm className=\"org.apache.catalina.realm.JNDIRealm\"\ndebug=\"99\"\nconnectionURL=\"ldap://localhost:8636\"\nconnectionName=\"\"\nconnectionPassword=\"\"\nuserPattern=\"uid={0}, ou=People, dc=uchicago, dc=edu\"\nuserRoleName=\"eduPersonAffiliation\"/>\n\nHowever, this only kind of works. In this case, the first authentication fails \n(when prompted using BASIC authentication and a pop-up dialog box) and then \nthe second succeeds.\n\n<Realm className=\"org.apache.catalina.realm.JNDIRealm\"\ndebug=\"99\"\nconnectionURL=\"ldap://localhost:8636\"\nuserPattern=\"uid={0}, ou=People, dc=uchicago, dc=edu\"\nuserRoleName=\"eduPersonAffiliation\"/>\n\nThe following is what the log looks like for the second case. IMHO, you \nshouldn't have to specify the connectionName attribute.\n\n2002-08-13 15:43:30 JNDIRealm[Standalone]: lookupUser(jemiller)\n2002-08-13 15:43:30 JNDIRealm[Standalone]:   dn=uid=jemiller, ou=People, \ndc=uchicago, dc=edu\n2002-08-13 15:43:30 JNDIRealm[Standalone]: Exception performing authentication\njavax.naming.CommunicationException: anonymous bind failed: localhost:8636.  \nRoot exception is java.net.SocketException: Socket closed\n        at java.net.SocketOutputStream.socketWrite0(Native Method)\n        at java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:92)\n        at java.net.SocketOutputStream.write(SocketOutputStream.java:126)\n        at java.io.BufferedOutputStream.flushBuffer\n(BufferedOutputStream.java:69)\n        at java.io.BufferedOutputStream.flush(BufferedOutputStream.java:127)\n        at com.sun.jndi.ldap.Connection.writeRequest(Connection.java:385)\n        at com.sun.jndi.ldap.LdapClient.ldapBind(LdapClient.java:309)\n        at com.sun.jndi.ldap.LdapClient.authenticate(LdapClient.java:146)\n        at com.sun.jndi.ldap.LdapCtx.connect(LdapCtx.java:2516)\n        at com.sun.jndi.ldap.LdapCtx.ensureOpen(LdapCtx.java:2458)\n        at com.sun.jndi.ldap.LdapCtx.ensureOpen(LdapCtx.java:2432)\n        at com.sun.jndi.ldap.LdapCtx.doSearch(LdapCtx.java:1837)\n        at com.sun.jndi.ldap.LdapCtx.doSearchOnce(LdapCtx.java:1829)\n        at com.sun.jndi.ldap.LdapCtx.c_getAttributes(LdapCtx.java:1223)\n        at com.sun.jndi.toolkit.ctx.ComponentDirContext.p_getAttributes\n(ComponentDirContext.java:213)\n        at com.sun.jndi.toolkit.ctx.PartialCompositeDirContext.getAttributes\n(PartialCompositeDirContext.java:121)\n        at com.sun.jndi.toolkit.ctx.PartialCompositeDirContext.getAttributes\n(PartialCompositeDirContext.java:109)\n        at javax.naming.directory.InitialDirContext.getAttributes\n(InitialDirContext.java:121)\n        at org.apache.catalina.realm.JNDIRealm.getUserByPattern\n(JNDIRealm.java:819)\n2002-08-13 15:43:30 JNDIRealm[Standalone]: lookupUser(jemiller)\n2002-08-13 15:43:30 JNDIRealm[Standalone]:   dn=uid=jemiller, ou=People, \ndc=uchicago, dc=edu\n2002-08-13 15:43:30 JNDIRealm[Standalone]: Exception performing authentication\njavax.naming.CommunicationException: anonymous bind failed: localhost:8636.  \nRoot exception is java.net.SocketException: Socket closed\n        at java.net.SocketOutputStream.socketWrite0(Native Method)\n        at java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:92)\n        at java.net.SocketOutputStream.write(SocketOutputStream.java:126)\n        at java.io.BufferedOutputStream.flushBuffer\n(BufferedOutputStream.java:69)\n        at java.io.BufferedOutputStream.flush(BufferedOutputStream.java:127)\n        at com.sun.jndi.ldap.Connection.writeRequest(Connection.java:385)\n        at com.sun.jndi.ldap.LdapClient.ldapBind(LdapClient.java:309)\n        at com.sun.jndi.ldap.LdapClient.authenticate(LdapClient.java:146)\n        at com.sun.jndi.ldap.LdapCtx.connect(LdapCtx.java:2516)\n        at com.sun.jndi.ldap.LdapCtx.ensureOpen(LdapCtx.java:2458)\n        at com.sun.jndi.ldap.LdapCtx.ensureOpen(LdapCtx.java:2432)\n        at com.sun.jndi.ldap.LdapCtx.doSearch(LdapCtx.java:1837)\n        at com.sun.jndi.ldap.LdapCtx.doSearchOnce(LdapCtx.java:1829)\n        at com.sun.jndi.ldap.LdapCtx.c_getAttributes(LdapCtx.java:1223)\n        at com.sun.jndi.toolkit.ctx.ComponentDirContext.p_getAttributes\n(ComponentDirContext.java:213)\n        at com.sun.jndi.toolkit.ctx.PartialCompositeDirContext.getAttributes\n(PartialCompositeDirContext.java:121)\n        at com.sun.jndi.toolkit.ctx.PartialCompositeDirContext.getAttributes\n(PartialCompositeDirContext.java:109)\n        at javax.naming.directory.InitialDirContext.getAttributes\n(InitialDirContext.java:121)\n        at org.apache.catalina.realm.JNDIRealm.getUserByPattern\n(JNDIRealm.java:819)\n        at org.apache.catalina.realm.JNDIRealm.getUser(JNDIRealm.java:773)\n        at org.apache.catalina.realm.JNDIRealm.authenticate(JNDIRealm.java:724)\n        at org.apache.catalina.realm.JNDIRealm.authenticate(JNDIRealm.java:671)\n        at org.apache.catalina.authenticator.BasicAuthenticator.authenticate\n(BasicAuthenticator.java:161)\n        at org.apache.catalina.authenticator.AuthenticatorBase.invoke\n(AuthenticatorBase.java:502)\n        at \norg.apache.catalina.core.StandardPipeline$StandardPipelineValveContext.invokeNe\nxt(StandardPipeline.java:641)\n        at org.apache.catalina.valves.CertificatesValve.invoke\n(CertificatesValve.java:246)\n        at \norg.apache.catalina.core.StandardPipeline$StandardPipelineValveContext.invokeNe\nxt(StandardPipeline.java:641)\n        at org.apache.catalina.core.StandardPipeline.invoke\n(StandardPipeline.java:480)\n        at org.apache.catalina.core.ContainerBase.invoke\n(ContainerBase.java:995)\n        at org.apache.catalina.core.StandardContext.invoke\n(StandardContext.java:2350)\n        at org.apache.catalina.core.StandardHostValve.invoke\n(StandardHostValve.java:180)\n        at \norg.apache.catalina.core.StandardPipeline$StandardPipelineValveContext.invokeNe\nxt(StandardPipeline.java:643)\n        at org.apache.catalina.valves.ErrorDispatcherValve.invoke\n(ErrorDispatcherValve.java:170)\n        at \norg.apache.catalina.core.StandardPipeline$StandardPipelineValveContext.invokeNe\nxt(StandardPipeline.java:641)\n        at org.apache.catalina.valves.ErrorReportValve.invoke\n(ErrorReportValve.java:171)\n        at \norg.apache.catalina.core.StandardPipeline$StandardPipelineValveContext.invokeNe\nxt(StandardPipeline.java:641)\n        at org.apache.catalina.valves.AccessLogValve.invoke\n(AccessLogValve.java:469)\n        at \norg.apache.catalina.core.StandardPipeline$StandardPipelineValveContext.invokeNe\nxt(StandardPipeline.java:641)\n        at org.apache.catalina.core.StandardPipeline.invoke\n(StandardPipeline.java:480)\n        at org.apache.catalina.core.ContainerBase.invoke\n(ContainerBase.java:995)\n        at org.apache.catalina.core.StandardEngineValve.invoke\n(StandardEngineValve.java:174)\n        at \norg.apache.catalina.core.StandardPipeline$StandardPipelineValveContext.invokeNe\nxt(StandardPipeline.java:643)\n        at org.apache.catalina.core.StandardPipeline.invoke\n(StandardPipeline.java:480)\n        at org.apache.catalina.core.ContainerBase.invoke\n(ContainerBase.java:995)\n        at org.apache.coyote.tomcat4.CoyoteAdapter.service\n(CoyoteAdapter.java:223)\n        at org.apache.coyote.http11.Http11Processor.process\n(Http11Processor.java:405)\n        at \norg.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.processConnecti\non(Http11Protocol.java:380)\n        at org.apache.tomcat.util.net.TcpWorkerThread.runIt\n(PoolTcpEndpoint.java:508)\n        at org.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run\n(ThreadPool.java:533)\n        at java.lang.Thread.run(Thread.java:536)\n\n2002-08-13 15:43:30 JNDIRealm[Standalone]: Closing directory context\n2002-08-13 15:43:37 JNDIRealm[Standalone]: Connecting to URL \nldap://localhost:8636\n2002-08-13 15:43:37 JNDIRealm[Standalone]: lookupUser(jemiller)\n2002-08-13 15:43:37 JNDIRealm[Standalone]:   dn=uid=jemiller, ou=People, \ndc=uchicago, dc=edu\n2002-08-13 15:43:37 JNDIRealm[Standalone]:   retrieving values for attribute \neduPersonAffiliation\n2002-08-13 15:43:37 JNDIRealm[Standalone]:   validating credentials by binding \nas the user\n2002-08-13 15:43:37 JNDIRealm[Standalone]:   binding as uid=jemiller, \nou=People, dc=uchicago, dc=edu\n2002-08-13 15:43:37 JNDIRealm[Standalone]: Username jemiller successfully \nauthenticated\n2002-08-13 15:43:37 JNDIRealm[Standalone]:   getRoles(uid=jemiller, ou=People, \ndc=uchicago, dc=edu)\n2002-08-13 15:43:37 JNDIRealm[Standalone]: Username jemiller does NOT have \nrole faculty\n2002-08-13 15:43:37 JNDIRealm[Standalone]: Username jemiller has role staff\n2002-08-13 15:47:06 JNDIRealm[Standalone]: lookupUser(jemiller)\n2002-08-13 15:47:06 JNDIRealm[Standalone]:   dn=uid=jemiller, ou=People, \ndc=uchicago, dc=edu\n2002-08-13 15:47:06 JNDIRealm[Standalone]: Exception performing authentication", "id": 21001, "time": "2002-08-14T00:27:49Z", "bug_id": 11679, "creation_time": "2002-08-14T00:27:49Z", "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 11679, "attachment_id": null, "text": "To quote from the javadocs for javax.naming.Context.SECURITY_PRINCIPAL\n<quote>\nConstant that holds the name of the environment property for specifying the \nidentity of the principal for authenticating the caller to the service. The \nformat of the principal depends on the authentication scheme. If this property \nis unspecified, the behaviour is determined by the service provider.\n</quote>\n\nTherefore the requirement to specify a connectionName attribute even when \nbinding anonymously is a property of your LDAP server.", "id": 63779, "time": "2004-09-18T21:46:36Z", "creator": "markt@apache.org", "creation_time": "2004-09-18T21:46:36Z", "is_private": false}, {"count": 2, "attachment_id": null, "creator": "jemiller@uchicago.edu", "text": "If I remember correctly, binding to the directory is not required when using \nJNDI. As a result, it would be more efficient if the authentication related \nattributes were only provided when authentication is needed.\n", "id": 63780, "time": "2004-09-18T23:00:15Z", "bug_id": 11679, "creation_time": "2004-09-18T23:00:15Z", "tags": [], "is_private": false}, {"count": 3, "tags": [], "bug_id": 11679, "attachment_id": null, "text": "The JNDIRealm is written so that attributes are only passed if set. Not quite \nwhat you suggest but it should achieve the same thing. If you have any \nimprovements to suggest, patches are always welcome.", "id": 63781, "time": "2004-09-18T23:31:16Z", "creator": "markt@apache.org", "creation_time": "2004-09-18T23:31:16Z", "is_private": false}]