[{"count": 0, "tags": [], "bug_id": 60796, "text": "Created attachment 34789\nreproducer\n\nIf I return an error in my directive parsing code of module during the second pass , the error message is never logged. I've attached a module that reproduces this issue. Here are reproduction steps and steps on how to spot the error message being logged out incorrectly:\n\n# apxs -i -a -c mod_test.c\n# echo IntoTheVoid >> /usr/local/apache2/conf/httpd.conf\n# /usr/local/apache2/bin/apachectl -f /usr/local/apache2/conf/httpd.conf -k start \n [Wed Mar 01 16:17:34.993411 2017] [intothevoid:error] [pid 14151:tid 139904119781248] AH11111: Test: A\n [Wed Mar 01 16:17:34.993438 2017] [intothevoid:warn] [pid 14151:tid 139904119781248] AH11111: Test: B\n\nBut, if you strace, we can see the error messages being written out to nowhere in second pass. \n\n# strace -Tttvfs  1024 -e write /usr/local/apache2/bin/apachectl -f /usr/local/apache2/conf/httpd.conf -k start \nstrace: Process 14353 attached\n[pid 14353] 16:20:44.793792 write(1, \"4096\\n\", 5) = 5 <0.000033>\n[pid 14353] 16:20:44.794046 +++ exited with 0 +++\n16:20:44.794061 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=14353, si_uid=0, si_status=0, si_utime=0, si_stime=0} ---\nstrace: Process 14354 attached\n[pid 14354] 16:20:44.952021 write(2, \"[Wed Mar 01 16:20:44.951909 2017] [intothevoid:error] [pid 14354:tid 140439900153728] AH11111: Test: A\\n\", 103[Wed Mar 01 16:20:44.951909 2017] [intothevoid:error] [pid 14354:tid 140439900153728] AH11111: Test: A\n) = 103 <0.000019>\n[pid 14354] 16:20:44.952081 write(2, \"[Wed Mar 01 16:20:44.952072 2017] [intothevoid:warn] [pid 14354:tid 140439900153728] AH11111: Test: B\\n\", 102[Wed Mar 01 16:20:44.952072 2017] [intothevoid:warn] [pid 14354:tid 140439900153728] AH11111: Test: B\n) = 102 <0.000010>\n[pid 14354] 16:20:44.952853 write(2, \"[Wed Mar 01 16:20:44.952846 2017] [core:crit] [pid 14354:tid 140439900153728] AH123123: \\n\", 89) = 89 <0.000032>\nstrace: Process 14355 attached\n[pid 14354] 16:20:44.958263 +++ exited with 0 +++\n[pid 14352] 16:20:44.958330 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=14354, si_uid=0, si_status=0, si_utime=0, si_stime=6} ---\n[pid 14355] 16:20:44.958545 write(2, \"[Wed Mar 01 16:20:44.958535 2017] [intothevoid:error] [pid 14355:tid 140439900153728] AH11111: Test: A\\n\", 103) = 103 <0.000008>\n[pid 14352] 16:20:44.958588 +++ exited with 0 +++\n16:20:44.958596 write(2, \"[Wed Mar 01 16:20:44.958581 2017] [intothevoid:warn] [pid 14355:tid 140439900153728] AH11111: Test: B\\n\", 102) = 102 <0.000011>\n16:20:44.958625 write(2, \"[Wed Mar 01 16:20:44.958619 2017] [intothevoid:warn] [pid 14355:tid 140439900153728] AH11111: Test: C\\n\", 102) = 102 <0.000008>\n16:20:44.958652 write(2, \"AH00526: Syntax error on line 507 of /usr/local/apache2/conf/httpd.conf:\\n\", 73) = 73 <0.000008>\n16:20:44.958674 write(2, \"A second pass error.\\n\", 21) = 21 <0.000006>\n16:20:44.970353 +++ exited with 1 +++\n\nThe lack of error output in second pass makes it difficult to troubleshoot configuration issues without the use of external tool like strace.", "id": 197365, "time": "2017-03-01T21:22:38Z", "creator": "rbost@redhat.com", "creation_time": "2017-03-01T21:22:38Z", "is_private": false, "attachment_id": 34789}, {"count": 1, "tags": [], "bug_id": 60796, "attachment_id": null, "is_private": false, "id": 197409, "time": "2017-03-03T00:25:36Z", "creator": "rbost@redhat.com", "creation_time": "2017-03-03T00:25:36Z", "text": "http://marc.info/?l=apache-httpd-dev&m=148034201402737&w=2\n\nSeems like only sane place dup2 can be called from is this freopen: https://github.com/apache/httpd/blob/trunk/server/log.c#L442"}, {"count": 2, "tags": [], "creator": "rbost@redhat.com", "attachment_id": null, "id": 197411, "time": "2017-03-03T01:29:22Z", "bug_id": 60796, "creation_time": "2017-03-03T01:29:22Z", "is_private": false, "text": "Just some more brainstorming for a root cause here... \n\nhttps://github.com/apache/apr/blob/trunk/threadproc/unix/procsup.c#L79\n\nIssue is not reproducible when running in debug mode (i.e. no child process). \n\nThis leads me to believe when child process is being spawned off, apr_proc_detach is spinning off a child and the logs aren't being reinitialized in a timely manner."}]