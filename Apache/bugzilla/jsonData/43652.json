[{"count": 0, "tags": [], "creator": "bratwizard@yahoo.com", "attachment_id": null, "is_private": false, "id": 109467, "time": "2007-10-18T09:10:08Z", "bug_id": 43652, "creation_time": "2007-10-18T09:10:08Z", "text": "Whether this is a \"bug\" or not depends on your point-of-view regarding suexec\nand common hosting configurations.\n\nI commonly setup virtual hosts by creating a user account, then a 'public_html'\ndirectory in that user's home directory, and then finally mapping the Virtual\nHost document directory to that user's public_html directory. It makes\neverything nice and neat and simple for everybody-- everybody that is except\npeople needing suexec.\n\nI'm not putting home directories in the apache document root, it ain't gonna\nhappen. Likewise, I'm not making the apache document root to be the base of the\nhome directories. That's not going to happen either. Most users don't know about\n(and don't want to know about) the \"~user\" syntax, so effectively that's a\nnon-starter as well. \n\nSo if you're using suexec out of the box, you're pretty well hosed-up at this\npoint. I've been studying the suexec.c utility and it seems pretty tight the way\nit is. I could hack it up but it seems a shame to have to resort to that. On the\nother hand, my opinion is that its become so locked-down (and for good reason)\nthat people DO look for ways around it, or else to modify it, to support this\none very common hosting configuration. Or else look for ways to \"cheat\" using\nsuid programs and the like to dart in, create a file the user can use-- or some\nother trick, which likewise causes a number of security risks. So while its\npossible to modify suexec.c to shoe-horn in support for the userdir/public_html\nvirtual host configuration, it doesn't seem to be the best solution available.\n\nHowever, in looking over the code, it seems that the \"target_username\" and\n\"target_groupname\" are GIVEN to suexec by apache (via mod_suexec) along with the\ntarget command. It goes through its various checks to determine whether or not\nblah blah blah is valid etc etc etc and finally deciding to accept or not accept\nthe user/group/command combination.\n\nOf course in the case of the configuration I'm describing, it will always be\n\"not accept\" -- bummer!\n\nSo here's the little change I was thinking of--- as I was musing over the best\nway to hack and slash suexec.c to shoe-horn in what I needed, it occurred to me\n(and I think this is true-- someone say otherwise if I'm wrong)-- that the only\nplace the \"SuexecUserGroup\" construct (in the VirtualHost config) comes into\nplay is when its given to the suexec program as a target username and groupname.\n\nHowever, it turns out that this bit is parsed by the apache program itself and\nit doesn't like it if its not a real \"legitimate\" user. But if (!!!) it were\npossible to persuade apache to not care so much if you specified \"~username\" and\n\"~groupname\" then THOSE names would get passed to the suexec program which (I\n*think*) would then treat them as the regular \"~user\" form that it already knows\nabout and is willing to accept.\n\nIF apache needs the username/groupname for something else-- just let it notice\nthe leading tildes and ignore them. But if its going to hand them to suexec,\ninclude them. Then I think everything works out for everybody and suexec does\nNOT need to be changed AND people who want to setup their virtual hosting in the\nmanner I've described can do so, AND only a very tiny tweak to Apache\n(config-handling) is required to effect the change.\n\n\nOpinions???"}, {"count": 1, "attachment_id": null, "creator": "bratwizard@yahoo.com", "text": "The thing that would blow this nifty idea is if Apache hands suexec the server\nname rather than the username from the config file. And in retrospect (things\nare always clearer then aren't they?) my guess is this is what happens otherwise\nthere would be no need to deal with the tilde at all... ", "id": 109472, "time": "2007-10-18T11:02:10Z", "bug_id": 43652, "creation_time": "2007-10-18T11:02:10Z", "tags": [], "is_private": false}, {"count": 2, "attachment_id": null, "creator": "bratwizard@yahoo.com", "is_private": false, "id": 109473, "time": "2007-10-18T11:06:05Z", "bug_id": 43652, "creation_time": "2007-10-18T11:06:05Z", "tags": [], "text": "Perhaps the servername to username translation could happen in the mod_suexec\nmodule and the it would work as originally posited? The one caveat, and I don't\nthink its a big one (my opinion) is that if this idea works, it would imply that\neach virtual host had to be tied to one and only one user in order to use\nsuexec. You could't have 10 virtual hosts all using the same username/groupname\ncombination since it would have to resolve in the end to one user's public_html\ndirectory. But I don't think that's a major limitation, and indeed I think that\nis the way that most people using this type of configuration actually do it-- I\nknow that's the way I've always done it. And anywhere else I've had an\naccount/virtual host set up has done it."}, {"count": 3, "tags": [], "creator": "apache@misc.lka.org.lu", "is_private": false, "id": 121036, "attachment_id": 22641, "bug_id": 43652, "creation_time": "2008-09-26T23:44:29Z", "time": "2008-09-26T23:44:29Z", "text": "Created attachment 22641\nPatch to make suexec work with virtual hosts stored in users personal web directory\n\nThe attached patch (against version 2.2.9) adds a new configuration option \"SuexecUserdir\" that invokes suexec with the tilde, so that it works in user's homedirectories.\nThe old \"SuexecUserGroup\" continues to operate as before, so that it works in the global documentroot.\n\nExample:\n\n<VirtualHost *:80>\n        ServerName alain.hitchhiker.org.lu\n        SuexecUserdir alain alain\n        DocumentRoot /home/alain/public_html\n</VirtualHost>"}]