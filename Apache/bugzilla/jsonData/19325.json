[{"count": 0, "tags": [], "text": "mod_include can cause a child apache process to die with a sig Bus error if\nthe file being processed for SSI is modified while apache is processing the file.\n\nThis bug has been seen with both 2.0.44 and 2.0.45 on a Sun E450 with 4 CPU's\nrunning Solaris 7 and on an E250 with dual CPU's running Solaris 8.\n\nApache is compiled using Sun Workshop CC and is run using the worker MPM.\n\nSteps to reproduce the bug:\n\nI will be attaching a tar.gz with documents to place in the Apache\nDocumentRoot.  Place these files in an empty apache document root directory.\n\nSetup a crontab to run the script includ_bug.pl once a minute. Set the\nvariable $DOC_ROOT in the script as needed.\n\nMake sure apache is configured to use index.shtml as a DirectoryIndex and\nthat it is configured to parse *.shtml files for SSI.\n\nUse ab to stress test getting the default home page, here is an example:\n\nab -n 600000 -c 6 http://some.host/\n\ntail -f the apache error_log and watch for sig Bus errors.", "is_private": false, "bug_id": 19325, "id": 36112, "time": "2003-04-25T15:42:19Z", "creator": "glenn@apache.org", "creation_time": "2003-04-25T15:42:19Z", "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 19325, "text": "Created attachment 6016\nTest HTML documents, include files, and a test script.", "id": 36113, "time": "2003-04-25T15:43:58Z", "creator": "glenn@apache.org", "creation_time": "2003-04-25T15:43:58Z", "is_private": false, "attachment_id": 6016}, {"count": 2, "tags": [], "creator": "trawick@apache.org", "attachment_id": null, "text": "This happens with Apache 1.3 too, incidentally.\n\nThe killer scenario is\n\napache mmaps a file\nanother process truncates the file, as fopen(\"foo\", \"w\") does and presumably\nperl does\napache reads from the mmap\n\nThis is a really ugly issue to deal with.  Any time an asynch process truncates\nthe file we are processing, the processing of the page is going to be\ninconsistent, and inconsistency+SIGBUS is even worse with a threaded MPM on 2.0\nsince other threads in the process handling that request will be affected.\n\nThe real fix, to get rid of all bad symtpoms, is not to edit files actively\nbeing served but instead to edit them off-line then mv them into place.\n\nAs a work-around, using \"EnableMMAP Off\" should eliminate most possible paths\nwhere Apache would hit SIGBUS when reading a file that is being mangled at the\nsame time, though there is no guarantee that the client is going to get\nsomething that makes sense.\n\nThis is not to imply that the SIGBUS symptom and the death of any other threads\nin the process is anything but crappy, but there are some technical issues to\ndeal with (the fix may not be so robust either), and the practical matter that\neven if we do everything possible the client still may get garbage.\n", "id": 39258, "time": "2003-06-23T02:56:42Z", "bug_id": 19325, "creation_time": "2003-06-23T02:56:42Z", "is_private": false}, {"count": 3, "tags": [], "creator": "glenn@apache.org", "attachment_id": null, "text": "Yeah, I had already figured out that if you mv the file into place you can\nprevent the bug from being triggered.  Sometimes when this bug is triggered\nit not only kills the child process but also causes Apache 2 itself to fail\ncompletely.  The problem is that you never know when a customer might implement\nsomething that would trigger this bug.\n\nRegarding disabling of mmapp'd files, I don't necessarily care if a few \npeople get a garbled response to an HTTP request.  That is much better than\napache failing completely.\n\nIs there a big performance hit when you disable mmapp'd files?\n\nThanks for the explanation.  It gives me the background I need if I want\nto further research a a patch.\n", "id": 39283, "time": "2003-06-23T14:29:35Z", "bug_id": 19325, "creation_time": "2003-06-23T14:29:35Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 19325, "is_private": false, "text": "There is some performance hit by reading the file directly, but I don't know\nwhen it would be significant.  Try some static page requests, all with\n\"EnableSendfile off\" and sometimes with \"EnableMmap On\", sometimes with\n\"EnableMmap Off\".\n\nIf you want to improve the situation, please note:\n\nthe SIGBUS itself is unavoidable...  more optimal recovery after the SIGBUS is\nwhere the potential for improvement is...  you would definitely want to outline\nyour ideas on dev@httpd.apache.org before spending a lot of time on a polished\nsolution, as it is very possible that handling the problem in a nice way\nintroduces some undesired complexity\n", "id": 39297, "time": "2003-06-23T19:41:15Z", "creator": "trawick@apache.org", "creation_time": "2003-06-23T19:41:15Z", "attachment_id": null}, {"count": 5, "tags": [], "creator": "glenn@apache.org", "attachment_id": null, "text": "I reviewed the notes about Perforance Tuning and EnableMMAP for Solaris.\nThose state that performance on some multple CPU Solaris sytems may be better.\nAnd I did some quick tests with EnableMMAP on/off.  My test results actually\nshowed a slight improvement in performance with EnableMMAP off on a Sun Netra\nwith single CPU.  Of course our servers generally have to use swap, so that\nmight explain why we saw this.\n\nI have reconfigured our apache 2 Solaris servers with EnableMMAP off.\n\nWhy in the testing would you want EnableSendFile off configured?\n(I tested both with it on and off)\n\nSince disabling mmap'd files works for us I will not be researching\na patch to fix this problem with mmap'd files, I just don't have the time.\n\nThanks for you help.\n\n", "id": 40906, "time": "2003-07-17T13:39:41Z", "bug_id": 19325, "creation_time": "2003-07-17T13:39:41Z", "is_private": false}, {"count": 6, "tags": [], "bug_id": 19325, "text": ">Why in the testing would you want EnableSendFile off configured?\n>(I tested both with it on and off)\n\nAssuming your Solaris box supports sendfile*: With \"EnableSendFile on\" we don't\nmmap static files that are sent out unmodified, so it is harder to get a feel of\nthe performance degradation when enabling/disabling sendfile.\n\n*Based on your other PRs, I'm guessing that you were using Solaris 7 which\ndoesn't have sendfile support anyway :)", "id": 41653, "time": "2003-07-28T13:52:28Z", "creator": "trawick@apache.org", "creation_time": "2003-07-28T13:52:28Z", "is_private": false, "attachment_id": null}]