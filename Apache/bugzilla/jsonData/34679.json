[{"count": 0, "tags": [], "creator": "delbd@oma.be", "attachment_id": null, "id": 74275, "time": "2005-04-29T15:14:13Z", "bug_id": 34679, "creation_time": "2005-04-29T15:14:13Z", "is_private": false, "text": "Servlet is unable to interpret href url for ressources with accents or other    \nnon US-ASCII filename it has send itself.    \n    \nwhole url decoding process is broken under a slide+tomcat (did not check with   \nother containers)   \n   \nHowever, typing accentuated characters on the url bar directly does allow   \naccess to the ressource, because client send an uri with a different url   \nencoding which does not mess (the same format it uses for a put).   \n    \n  \nTested with:  \nnovell webdav client  \nwindows 2000 web folders  \nDAVExplorer  \nkio:webdav   \n \nAnalysis: \nThe value received by req.getPathInfo() in WebdavUtils.getRelativePath() is \nalready broken as container already intrepreted this as a 'classical' \nurlencode. What i mean is value of req.getPathInfo() has all %hh converted to \nexactly one character while this was encoded supposing it were utf-8 2 byte \ncharacters. So instead of t\u00e9\u00e8st i get t\u00c3\u00a9\u00c3\u00a8st. \nThere seems to be a method named fixTomcatURL() but which does exactly the \nopposite of it job. At the output of this 'fix' the uri is converted to \nt\u00c3\u0192\u00c2\u00a9\u00c3\u0192\u00c2\u00a8st. As you may guess slide has lost of difficulties to understand \nthis :) \n \nThis is a big problem as it renders public acces to a slide webdav folder \nuseless. If someone puts a ressource with a non us-ascii character, this make \nthis ressource unmodifiable! \n \n \nSuggestion: Stick to classical url encoding, let container manage the uri, \nthey do that quite well using the HttpServletResponse.encodeURL()  !! \nTrying to by pass container in url encoding/decoding can only lead to such \nproblems and weirdness."}]