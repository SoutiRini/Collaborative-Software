[{"count": 0, "tags": [], "creator": "anatolit@checkpoint.com", "text": "When issuing HTTPS requests, JMeter threads all use the same SSL session. This\nprevents JMeter from testing real-world performance of SSL sites. (One can look\nat SSL session IDs in the Apache httpd custom access log with %{SSL_SESSION_ID}x\nformat specifier).\n\nThis means that JMeter only does the SSL handshake once with the server in the\nbeginning of the test, not at the beginning of each thread. The handshake is the\nexpensive part of SSL protocol, and bypassing it can seriously skew the\nperformance figures. I've done measurements with other tools that do SSL\nhandshake properly, and in some cases the performance difference is 4-fold.", "id": 103590, "time": "2007-05-24T00:57:26Z", "bug_id": 42506, "creation_time": "2007-05-24T00:57:26Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 42506, "attachment_id": null, "text": "Which HTTP sampler are you using? The default, or HttpClient?\n\nThe default Java sampler offers no control over connection re-use.", "id": 103608, "time": "2007-05-24T04:21:08Z", "creator": "sebb@apache.org", "creation_time": "2007-05-24T04:21:08Z", "is_private": false}, {"count": 2, "tags": [], "creator": "anatolit@checkpoint.com", "text": "I'm using HttpClient (from the menu: Add/Sampler/HTTP Request HTTPClient, I\nthink it's the right non-default one).", "id": 103613, "time": "2007-05-24T05:28:24Z", "bug_id": 42506, "creation_time": "2007-05-24T05:28:24Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 42506, "attachment_id": null, "text": "JSSE (and hence HttpClient) uses SSL session caching per default as this results\nin a significant performance improvement. Cached SSL sessions can be re-used\nwhen opening new SSL sockets. So, just disabling connection re-use will not be\nenough. \n\nOne can plug in to HttpClient a custom SSL socket factory in order to exercise a\ngreater control over SSL session re-use. I could contribute one if necessary.\n\nOleg", "id": 103703, "time": "2007-05-26T05:16:59Z", "creator": "olegk@apache.org", "creation_time": "2007-05-26T05:16:59Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 42506, "attachment_id": null, "text": ">One can plug in to HttpClient a custom SSL socket factory in order to exercise a\n>greater control over SSL session re-use. I could contribute one if necessary.\n\nIt would be great, as it's impossible to benchmark SSL servers without such control.", "id": 103723, "time": "2007-05-27T00:40:29Z", "creator": "anatolit@checkpoint.com", "creation_time": "2007-05-27T00:40:29Z", "is_private": false}, {"count": 5, "tags": [], "creator": "sebb@apache.org", "text": "What control are you expecting to see?\n\nWould it be enough to use a separate session for each test thread?\n\nOr is there any need to use multiple sessions in the same thread for the same \nhost? \n\nShould the session always be dropped when the connection is closed?", "id": 103728, "time": "2007-05-27T06:31:49Z", "bug_id": 42506, "creation_time": "2007-05-27T06:31:49Z", "is_private": false, "attachment_id": null}, {"count": 6, "tags": [], "creator": "olegk@apache.org", "attachment_id": null, "id": 103729, "time": "2007-05-27T09:23:33Z", "bug_id": 42506, "creation_time": "2007-05-27T09:23:33Z", "is_private": false, "text": "Sebastian,\n\nI see two ways of solving the problem, one which requires quite a bit of code\nrefactoring and another one that does not. The former option would involve\nkeeping a custom HostConfiguration object per thread / user, which entails some\nchanges to the internal structure of JMeter. The latter option would make use of\na ThreadLocal to store an instance of SSLContext on a per thread / user basis.\nAll changes would be confined to HttpSSLProtocolSocketFactory.\n\nI personally prefer to not use ThreadLocals, unless absolutely necessary,\nespecially in libraries. (disclaimer: I do tend to see JMeter as a library + a\ndefault UI), but this is your call.\n\nOleg \n"}, {"count": 7, "tags": [], "creator": "sebb@apache.org", "attachment_id": null, "id": 103730, "time": "2007-05-27T09:31:51Z", "bug_id": 42506, "creation_time": "2007-05-27T09:31:51Z", "is_private": false, "text": "JMeter already uses ThreadLocal in a few places (and its performance impact is \nmuch reduced in recent JVMs), so I don't see that as a negative.\n\nI think the best would be to use ThreadLocal, at least initially.\n\nIf necessary this can be replaced later."}, {"attachment_id": 20279, "tags": [], "bug_id": 42506, "text": "Created attachment 20279\nPatch (per thread SSL context) - take 1\n\nSebastian\nHere's the first take at solving the problem. The fix is sub-optimal in my\nopinion. The patch simply causes a new instance of SSLContext to be created on\na per thread of execution basis. This should also result in a different SSL\nsession cache per thread / user. \n\nI also tried to clean things up a little in JsseSSLManager class.\n\nPlease review.\n\nOleg", "count": 8, "id": 103733, "time": "2007-05-27T16:33:23Z", "creator": "olegk@apache.org", "creation_time": "2007-05-27T16:33:23Z", "is_private": false}, {"count": 9, "tags": [], "creator": "anatolit@checkpoint.com", "text": "> What control are you expecting to see?\n> Would it be enough to use a separate session for each test thread?\n\nYes.\n\n> Or is there any need to use multiple sessions in the same thread for the same \n> host? \n\nNo, this is not necessary.\n\n> Should the session always be dropped when the connection is closed?\n\nNo, the session should NOT be dropped. That's the whole point of having sessions\n-- that they will survive a reconnect.\n\nIt would be nice if there's an *option* to drop the session every N connections\nand/or K seconds, N and K being configurable parameters, but that's advanced\nstuff. (Older Microsoft systems used to drop SSL sessions every two minutes.\nThis was considered a bug and fixed. But it would be nice to be able to test for\nthis behaviour as well.)", "id": 103761, "time": "2007-05-29T02:42:34Z", "bug_id": 42506, "creation_time": "2007-05-29T02:42:34Z", "is_private": false, "attachment_id": null}, {"count": 10, "tags": [], "creator": "sebb@apache.org", "attachment_id": null, "id": 103839, "time": "2007-05-30T14:51:28Z", "bug_id": 42506, "creation_time": "2007-05-30T14:51:28Z", "is_private": false, "text": "How about an additional checkbox on the Sampler: when enabled, the cached \nsession would be cleared.\n\nWould that be useful?"}, {"count": 11, "tags": [], "bug_id": 42506, "attachment_id": null, "text": "Sebb: I'm not sure I understand. The session should be per thread. Each thread's\nsession will be cleared when the thread stops. Am I missing something?\n\nOleg: I tried to use your patch. No luck, there's still a single SSL session for\nall threads. Please correct me if I'm wrong, but it seems that a separate\nSSLSession object needs to be created for each thread. I'm not sure what class\nis responsible for tracking SSLSession objects, there's very little I can find\nin the Java docs, but it's probably not the socket factory.", "id": 103858, "time": "2007-05-31T00:46:53Z", "creator": "anatolit@checkpoint.com", "creation_time": "2007-05-31T00:46:53Z", "is_private": false}, {"count": 12, "tags": [], "bug_id": 42506, "attachment_id": null, "text": "(In reply to comment #11)\n\n> Oleg: I tried to use your patch. No luck, there's still a single SSL session for\n> all threads. Please correct me if I'm wrong, but it seems that a separate\n> SSLSession object needs to be created for each thread. \n\nAnatoli,\n\nI do not know of a way to create SSLSession objects with JSSE API. One can\neither invalidate an existing SSL session or set a session timeout value in the\nSSL session context, but cannot not initiate a new SSL session using JSSE API\n\nI'm not sure what class\n> is responsible for tracking SSLSession objects, there's very little I can find\n> in the Java docs, but it's probably not the socket factory.\n\nSSLSessionContext is probably what you are looking for.\n\nAnyways, I clearly see different SSL session ids per execution thread on the\nclient side:\n\n2007/05/31 11:05:41 INFO  - jmeter.threads.JMeterThread: Running PostProcessors\nin forward order \n2007/05/31 11:05:41 INFO  - jmeter.threads.JMeterThread: Thread Thread Group 1-1\nstarted \n2007/05/31 11:05:41 INFO  - jmeter.util.JsseSSLManager: Using default SSL\nprotocol: TLS \n2007/05/31 11:05:41 INFO  - jmeter.util.SSLManager: JmeterKeyStore Location:\n/home/oleg/.keystore \n2007/05/31 11:05:41 INFO  - jmeter.util.SSLManager: KeyStore created OK, Type: JKS \n2007/05/31 11:05:41 WARN  - jmeter.util.SSLManager: Keystore file not found,\nloading empty keystore \n2007/05/31 11:05:42 INFO  - jmeter.threads.JMeterThread: Thread Thread Group 1-2\nstarted \n2007/05/31 11:05:42 INFO  - jmeter.threads.JMeterThread: Thread Thread Group 1-3\nstarted \n2007/05/31 11:05:43 INFO  - jmeter.util.HttpSSLProtocolSocketFactory: SSL\nsession id: 1B76A4E7198259C06AD11EB1892A9540C27C661DFC7226574020E96A12D92C60 \n2007/05/31 11:05:43 INFO  - jmeter.util.HttpSSLProtocolSocketFactory: SSL\nsession id: AC1D816001BAB6FC94FBA0754514F13528FE7E20C7B203BBA372BC30248575A8 \n2007/05/31 11:05:43 INFO  - jmeter.threads.JMeterThread: Thread Thread Group 1-3\nis done \n2007/05/31 11:05:43 INFO  - jmeter.engine.StandardJMeterEngine: Ending thread\nThread Group 1-3 \n2007/05/31 11:05:43 INFO  - jmeter.threads.JMeterThread: Thread Thread Group 1-2\nis done \n2007/05/31 11:05:43 INFO  - jmeter.engine.StandardJMeterEngine: Ending thread\nThread Group 1-2 \n2007/05/31 11:05:43 INFO  - jmeter.util.HttpSSLProtocolSocketFactory: SSL\nsession id: 0A7CE7BADA54C493980570B80AD804280E59C2FF5FFA7C88C71323594DEB75CD \n2007/05/31 11:05:44 INFO  - jmeter.threads.JMeterThread: Thread Thread Group 1-1\nis done \n2007/05/31 11:05:44 INFO  - jmeter.engine.StandardJMeterEngine: Ending thread\nThread Group 1-1 \n2007/05/31 11:05:44 INFO  - jmeter.engine.StandardJMeterEngine: Stopping test \n2007/05/31 11:05:44 INFO  - jmeter.engine.StandardJMeterEngine: Notifying test\nlisteners of end of test \n2007/05/31 11:05:44 INFO  - jmeter.gui.util.JMeterMenuBar: setRunning(false,local) \n2007/05/31 11:05:44 INFO  - jmeter.engine.StandardJMeterEngine: Test has ended \n\nOleg\n\n", "id": 103859, "time": "2007-05-31T02:19:16Z", "creator": "olegk@apache.org", "creation_time": "2007-05-31T02:19:16Z", "is_private": false}, {"count": 13, "tags": [], "bug_id": 42506, "attachment_id": 20295, "text": "Created attachment 20295\nPatch (per thread SSL context) - take 1 + SSL session ID debug logging\n\nAdded SSL session ID debug logging.\n\nOleg", "id": 103860, "time": "2007-05-31T02:21:12Z", "creator": "olegk@apache.org", "creation_time": "2007-05-31T02:21:12Z", "is_private": false}, {"count": 14, "tags": [], "text": "Oleg,\n\nPlease disregard the previous message, it probably was my mistake in building\nthe project. JMeter indeed uses different session IDs now. Thank you.", "attachment_id": null, "bug_id": 42506, "id": 103868, "time": "2007-05-31T03:41:43Z", "creator": "anatolit@checkpoint.com", "creation_time": "2007-05-31T03:41:43Z", "is_private": false}, {"count": 15, "tags": [], "text": "(In reply to comment #11)\n> Sebb: I'm not sure I understand. The session should be per thread. Each \nthread's\n> session will be cleared when the thread stops. Am I missing something?\n\nIf there are multiple samplers in a single thread, then the idea would be to \nallow the session to be cleared before starting the current sample.", "attachment_id": null, "bug_id": 42506, "id": 103907, "time": "2007-05-31T15:27:12Z", "creator": "sebb@apache.org", "creation_time": "2007-05-31T15:27:12Z", "is_private": false}, {"count": 16, "tags": [], "creator": "sebb@apache.org", "text": "Many thanks.\nThe second patch has been applied to SVN in r543739.\n\nI made some changes:\n- moved the threadLocal processing to JsseSSLManager, so that now deals with \nall the SSL context manipulation.\n- added a property to allow reversion to the original behaviour\n- renamed some variables and methods to keep original names\n\nWarning: the debug code added in the second patch causes some SSL sites (e.g. \nhttps://svn.apache.org/) to generate the error:\njavax.net.ssl.SSLException: Received fatal alert: unexpected_message\nThis seems to be due to calling sock.getSession().", "id": 103998, "time": "2007-06-02T06:59:47Z", "bug_id": 42506, "creation_time": "2007-06-02T06:59:47Z", "is_private": false, "attachment_id": null}]