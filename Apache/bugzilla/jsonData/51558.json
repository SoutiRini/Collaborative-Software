[{"count": 0, "tags": [], "bug_id": 51558, "attachment_id": null, "is_private": false, "id": 148168, "time": "2011-07-26T10:11:48Z", "creator": "berndhuber98@googlemail.com", "creation_time": "2011-07-26T10:11:48Z", "text": "when i deploy an webapp with a tomcat server, i use the Function \"tomcat.addWebapp\". I looked into the code of this function and it makes the following call:\n\n     ctx.addLifecycleListener(new DefaultWebXmlListener());\n\nWhen i start tomcat, this DefaultWebXmlListener is activated automatically, and always does the following code, so the manager i set for my context gets overriden with this code:\n\n     public static void initWebappDefaults(Context ctx) {\n        ...\n        // Sessions\n        ctx.setManager( new StandardManager());\n        ctx.setSessionTimeout(30);\n        ...\n     }\n\nso when i set a StandardManager programatically, it gets overriden by this code. The workaround i used, is to unregister the DefaultWebXmlListener, and than add my own context.xml specific settings, like a custom manager for deactivating session persistance:\n\n     Context warContext = tomcat.addWebapp(warContextPath, warLocation);\n    \n     LifecycleListener[] lclisteners = warContext.findLifecycleListeners();\n     LifecycleListener defaultWebXMLListener = null;\n     for (int i=0; i < lclisteners.length; i++){\n       if (lclisteners[i] instanceof DefaultWebXmlListener){\n         defaultWebXMLListener = lclisteners[i];\n       }\n     }\n     warContext.removeLifecycleListener(defaultWebXMLListener);\n     ...\n     StandardManager manager = new StandardManager();\n     manager.setPathname(null); // disable session persistance:\n     //manager.setPathname(\"SESSIONS.ser\");     \n     warContext.setCookies(true);\n     warContext.setCrossContext(true);\n     warContext.setManager(manager);\n\ni think its a bug that using the \"tomcat.addWebapp\" method makes it impossible to set context.xml specific settings programmatically, because they always get overriden by default values at the tomcat start."}, {"count": 1, "tags": [], "text": "Use addContext()", "attachment_id": null, "id": 148169, "creator": "markt@apache.org", "time": "2011-07-26T10:24:27Z", "bug_id": 51558, "creation_time": "2011-07-26T10:24:27Z", "is_private": false}, {"count": 2, "attachment_id": null, "creator": "berndhuber98@googlemail.com", "text": "(In reply to comment #1)\n> Use addContext()\n\nbecause i need to deploy a WAR-File, that includes a web.xml file, it would be  more complicated to use addContext(), because i cant find any examples in the web that use addContext() in combination with web.xml...\n\nbut your right, this should be a missing feature, not a bug. I hope some official documentation for tomcat-embedded will be available soon.", "id": 148173, "time": "2011-07-26T11:13:18Z", "bug_id": 51558, "creation_time": "2011-07-26T11:13:18Z", "tags": [], "is_private": false}, {"attachment_id": null, "tags": [], "bug_id": 51558, "is_private": false, "count": 3, "id": 148175, "time": "2011-07-26T11:20:10Z", "creator": "berndhuber98@googlemail.com", "creation_time": "2011-07-26T11:20:10Z", "text": "ah sorry, its ok nevermind .. i know now how to do it: ;-)\nlike you said, i will now just create a standardcontext instead, \nand just dont add a defaultwebxmllistener ...\n\n  Context ctx = new StandardContext();\n  ctx.setName(name);\n  ctx.setPath(url);\n  ctx.setDocBase(path);\n  if (defaultRealm == null) {\n      initSimpleAuth();\n  }\n  ctx.setRealm(defaultRealm);\n        \n  ContextConfig ctxCfg = new ContextConfig();\n  ctx.addLifecycleListener(ctxCfg);\n        \n  // prevent it from looking ( if it finds one - it'll have dup error )\n  ctxCfg.setDefaultWebXml(\"org/apache/catalin/startup/NO_DEFAULT_XML\");\n        \n  if (host == null) {\n     getHost().addChild(ctx);\n  } else {\n      host.addChild(ctx);\n  }"}, {"count": 4, "attachment_id": null, "creator": "martin.grotzke@googlemail.com", "text": "A user of memcached-session-manager also ran into this issue and it took me some time that when using addWebapp the manager is just overwritten.\n\nI'd suggest to set the StandardManager only if there's no manager set on the context.\n\nAre there any problems why this should not be done?", "id": 148808, "time": "2011-08-24T22:47:40Z", "bug_id": 51558, "creation_time": "2011-08-24T22:47:40Z", "tags": [], "is_private": false}, {"count": 5, "tags": [], "bug_id": 51558, "attachment_id": 27432, "is_private": false, "id": 148809, "time": "2011-08-24T22:56:36Z", "creator": "martin.grotzke@googlemail.com", "creation_time": "2011-08-24T22:56:36Z", "text": "Created attachment 27432\nAttached patch that only sets StandardManager if the manager is not already set"}, {"count": 6, "tags": [], "bug_id": 51558, "text": "StandardContext already conditionally adds a StandardManager if one is not set.\n\nSince the offending code is meant to be replicating conf/web.xml (which can't set internal Tomcat components) I have simply removed this code from the listener.\n\nThe fix has been applied to trunk and 7.0.x and will be included in 7.0.21 onwards.", "id": 148844, "time": "2011-08-26T16:09:52Z", "creator": "markt@apache.org", "creation_time": "2011-08-26T16:09:52Z", "is_private": false, "attachment_id": null}]