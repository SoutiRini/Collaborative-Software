[{"count": 0, "tags": [], "bug_id": 55608, "text": "The fmt:bundle tag buffers its body content and then simply writes it all on doEnd.  This causes both unnecessary heap space consumption, and can cause out of memory conditions on large pages where:\n\n1) The page is surrounded by a single large <fmt:bundle ...> ... </fmt:bundle> tag.\n\n2) The body generates a large amount of content.\n\n\nWith buffer=\"X\" and autoFlush=\"true\", the JSP developer expects the body to be flushed when the buffer becomes X in size.  The fmt:bundle tag has a unbounded buffer and thus this expectation is not meet.\n\n\nThe patch for JSTL 1.1.2 is:\n\nIn org/apache/taglibs/standard/tag/common/fmt/BundleSupport.java:\n\n    public int doStartTag() throws JspException {\n\tlocCtxt = getLocalizationContext(pageContext, basename);\n// Begin removed by AO Industries, Inc.\n//\treturn EVAL_BODY_BUFFERED;\n// End removed by AO Industries, Inc.\n// Begin added by AO Industries, Inc.\n\t// No need to buffer our body since it is just written in full on doEndTag.\n\treturn EVAL_BODY_INCLUDE;\n// End added by AO Industries, Inc.\n    }\n\n\n\n    public int doEndTag() throws JspException {\n// Begin removed by AO Industries, Inc.\n//\tif (bodyContent != null) {\n//\t    try {\n//\t\tpageContext.getOut().print(bodyContent.getString());\n//\t    } catch (IOException ioe) {\n//\t\tthrow new JspTagException(ioe.toString(), ioe);\n//\t    }\n//\t}\n// End removed by AO Industries, Inc.\n\n\treturn EVAL_PAGE;\n    }\n\n\nPlease include this in future releases of the taglib.  It will help us work with large sets of data using the comfortable and productive JSP environment.", "id": 170340, "time": "2013-09-28T21:55:08Z", "creator": "support@aoindustries.com", "creation_time": "2013-09-28T21:55:08Z", "is_private": false, "attachment_id": null}, {"count": 1, "attachment_id": null, "bug_id": 55608, "text": "FYI: I have confirmed this unnecessary buffering remains in the most recent 1.2 branch in SVN.", "id": 170344, "time": "2013-09-29T00:40:52Z", "creator": "support@aoindustries.com", "creation_time": "2013-09-29T00:40:52Z", "tags": [], "is_private": false}, {"count": 2, "attachment_id": null, "bug_id": 55608, "text": "Please could you attach a patch file rather than just comments.\n\nI'm a little concerned about changing the flushing/buffering behaviour but I don't see anything in the spec that precludes early flushing so am inclined to apply this.", "id": 170347, "time": "2013-09-29T17:24:27Z", "creator": "jboynes@apache.org", "creation_time": "2013-09-29T17:24:27Z", "tags": [], "is_private": false}, {"count": 3, "tags": [], "bug_id": 55608, "attachment_id": null, "id": 170358, "time": "2013-09-30T14:14:13Z", "creator": "chris@christopherschultz.net", "creation_time": "2013-09-30T14:14:13Z", "is_private": false, "text": "One could argue that <fmt:bundle> might actually be used to intentionally buffer content a bit, just in case an error occurs. Once the response is committed, errors occurring during rendering are usually catastrophic to the page display.\n\nHow about making this a \"JSP property\" that is disabled by default (i.e. the current behavior is the default, but easily changed)?"}, {"count": 4, "tags": [], "creator": "support@aoindustries.com", "attachment_id": null, "text": "(In reply to Christopher Schultz from comment #3)\n> One could argue that <fmt:bundle> might actually be used to intentionally\n> buffer content a bit, just in case an error occurs. Once the response is\n> committed, errors occurring during rendering are usually catastrophic to the\n> page display.\n> \n> How about making this a \"JSP property\" that is disabled by default (i.e. the\n> current behavior is the default, but easily changed)?\n\nOne can argue anything, but that doesn't make it a valid argument.  This is precisely what the buffer page attribute is for.  fmt:bundle implemented with an unbounded buffer is not \"buffering a little\".\n\nFor example:\n\n<%@ page language=\"java\" buffer=\"512kb\" autoFlush=\"true\" pageEncoding=\"UTF-8\" session=\"false\" %>", "id": 170376, "time": "2013-10-02T00:24:10Z", "bug_id": 55608, "creation_time": "2013-10-02T00:24:10Z", "is_private": false}, {"count": 5, "attachment_id": 30899, "bug_id": 55608, "text": "Created attachment 30899\nDiff for changes to current trunk of BundleSupport.java\n\nI have attached a diff for the current trunk version.\n\nChanged doStartTag to return EVAL_BODY_INCLUDE.\n\nRemoved doEndTag method entirely.", "id": 170377, "time": "2013-10-02T00:33:56Z", "creator": "support@aoindustries.com", "creation_time": "2013-10-02T00:33:56Z", "tags": [], "is_private": false}, {"count": 6, "tags": [], "creator": "chris@christopherschultz.net", "attachment_id": null, "text": "(In reply to Dan Armstrong from comment #4)\n> (In reply to Christopher Schultz from comment #3)\n> > One could argue that <fmt:bundle> might actually be used to intentionally\n> > buffer content a bit, just in case an error occurs. Once the response is\n> > committed, errors occurring during rendering are usually catastrophic to the\n> > page display.\n> > \n> > How about making this a \"JSP property\" that is disabled by default (i.e. the\n> > current behavior is the default, but easily changed)?\n> \n> One can argue anything, but that doesn't make it a valid argument.\n\nIt's a fairly valid argument that changing the way a component behaves can inconvenience a lot of people. Hence my suggestion that it be made into a configurable setting, defaulting to the old behavior.\n\nJeremy may apply your patch, but I certainly wouldn't.", "id": 170378, "time": "2013-10-02T03:21:39Z", "bug_id": 55608, "creation_time": "2013-10-02T03:21:39Z", "is_private": false}, {"count": 7, "tags": [], "bug_id": 55608, "attachment_id": null, "id": 170379, "time": "2013-10-02T03:49:34Z", "creator": "kschneider@gmail.com", "creation_time": "2013-10-02T03:49:34Z", "is_private": false, "text": "I don't think the page directive and its attributes really have any bearing on this, but since I generally agree with the changes, it's probably not worth going into. The JSTL 1.1 & 1.2 specs have this to say about the <fmt:bundle> body content:\n\nJSP. The JSP container processes the body content and then writes it to the current JspWriter. The action ignores the body content.\n\nThe last sentence is the key and I'd claim that it actually makes more sense for BundleSupport to extend TagSupport instead of BodyTagSupport."}, {"count": 8, "tags": [], "creator": "support@aoindustries.com", "attachment_id": null, "text": "Agreed that changing component behavior, even if the change is inline with the spec, can be problematic.  Especially within a minor release in series like 1.1.2 -> 1.1.3.  Consider Oracle changing Java string implementation dramatically in 1.7.0_06 as a prime example of the problems this can cause.\n\nI hope this change will make it into the 1.2 branch still under development.  If there are release notes this is a good one to add to the list.  Developers can understand a change during a 1.1 -> 1.2 upgrade as long as it is documented.\n\nI agree that this tag could extend TagSupport as well and achieve the same behavior.  +1 for basing the decision off the specification.\n\nThank you very much for your help.\n\n- Dan", "id": 170380, "time": "2013-10-02T03:57:58Z", "bug_id": 55608, "creation_time": "2013-10-02T03:57:58Z", "is_private": false}, {"count": 9, "attachment_id": null, "bug_id": 55608, "is_private": false, "id": 170393, "time": "2013-10-02T16:01:24Z", "creator": "jboynes@apache.org", "creation_time": "2013-10-02T16:01:24Z", "tags": [], "text": "Patch applied to trunk and will be included in 1.2.0.RC2\nhttp://svn.apache.org/r1528526\n\nThis does change the buffering characteristic of the implementation but that is an undocumented side effect. The primary use for this tag is that it \"Creates an i18n localization context to be used by its body content\" and the specification indicates that \"the JSP container processes the body content\" which is in line with this patch is doing.\n\nThis change also brings this tag's behaviour in line with <c:catch> which also returns EVAL_BODY_INCLUDE."}]