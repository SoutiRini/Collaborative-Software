[{"count": 0, "tags": [], "bug_id": 50651, "text": "Note: this is a regression of 6.0.30, the problem does not appear in 6.0.29\n\n36.567 [http-8080-exec-1] ERROR o.apache.tomcat.util.net.NioEndpoint - java.lang.NullPointerException: null\n        at org.apache.coyote.http11.InternalNioOutputBuffer.recycle(InternalNioOutputBuffer.java:351) ~[tomcat-coyote.jar:6.0.30] \n           socket.getBufHandler().getWriteBuffer().clear();                                                                            \n        at org.apache.coyote.http11.Http11NioProcessor.recycle(Http11NioProcessor.java:1007) ~[tomcat-coyote.jar:6.0.30]                                                                                                                   \n        at org.apache.coyote.http11.Http11NioProtocol$Http11ConnectionHandler.release(Http11NioProtocol.java:643) ~[tomcat-coyote.jar:6.0.30]                                                                                              \n        at org.apache.coyote.http11.Http11NioProtocol$Http11ConnectionHandler.event(Http11NioProtocol.java:679) ~[tomcat-coyote.jar:6.0.30]                                                                                                \n        at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:2262) ~[tomcat-coyote.jar:6.0.30]                                                                                                                   \n        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886) [na:1.6.0_21]    \n\nNote sure yet whether it is the socket, its bufhandler or the buffer which is null.", "id": 143627, "time": "2011-01-25T12:51:59Z", "creator": "eric.estievenart@free.fr", "creation_time": "2011-01-25T12:51:59Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "creator": "knst.kolinko@gmail.com", "attachment_id": null, "text": "I suspect that it is socket: calling InternalNioOutputBuffer.recycle() twice will fail with NPE, because socket is set to null on the first call.", "id": 143628, "time": "2011-01-25T13:07:00Z", "bug_id": 50651, "creation_time": "2011-01-25T13:07:00Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 50651, "text": "To reproduce, with TC 6.0.31:\n1. Configure Tomcat to use Nio connector.\n2. Start Tomcat.\n3. Connect to Tomcat HTTP port with a telnet client. Type \"foo<Enter>\".\n4. Server replies with \"HTTP/1.1 400 Bad Request\". At the same time in the logs you can see two instances of NPE at\norg.apache.coyote.http11.InternalNioOutputBuffer.recycle(InternalNioOutputBuffer.java:351)\n\n7.0.x is not affected, thanks to r1022478", "id": 143630, "time": "2011-01-25T14:37:22Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2011-01-25T14:37:22Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "creator": "knst.kolinko@gmail.com", "text": "Created attachment 26549\n2011-01-25_tc6_50651.patch\n\nPatch for 6.0.x.", "id": 143632, "attachment_id": 26549, "bug_id": 50651, "creation_time": "2011-01-25T14:47:39Z", "time": "2011-01-25T14:47:39Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 50651, "text": "What I don't like about patches like this, is that they don't address the regression, simply mitigate it.\nIf the problem has always existed, then fine, implement it.\nBut if this problem didn't exist in previous versions, then we're not fixing the actual regression.", "id": 143634, "time": "2011-01-25T16:25:36Z", "creator": "fhanik@apache.org", "creation_time": "2011-01-25T16:25:36Z", "is_private": false, "attachment_id": null}, {"count": 5, "attachment_id": null, "creator": "ppan@mfglobal.com", "is_private": false, "id": 143637, "time": "2011-01-25T17:02:59Z", "bug_id": 50651, "creation_time": "2011-01-25T17:02:59Z", "tags": [], "text": "I was testing the sample code from http://www.ibm.com/developerworks/web/library/wa-cometjava/. \nEach time when the connection was closed, two END Comet events were received. The second one seems causing the NPE error. \n\nJan 25, 2011 3:31:28 PM org.apache.catalina.core.ApplicationContext log\nINFO: WeatherServlet: Begin for session: CF345C44A1C1040EC6C112B494A7E00C\nJan 25, 2011 3:31:28 PM org.apache.catalina.core.ApplicationContext log\nINFO: WeatherServlet: Message added #messages=1\nJan 25, 2011 3:31:28 PM org.apache.catalina.core.ApplicationContext log\nINFO: WeatherServlet: Closing connection\nJan 25, 2011 3:31:28 PM org.apache.catalina.core.ApplicationContext log\nINFO: WeatherServlet: End for session: CF345C44A1C1040EC6C112B494A7E00C\nJan 25, 2011 3:31:28 PM org.apache.catalina.core.ApplicationContext log\nINFO: WeatherServlet: End for session: CF345C44A1C1040EC6C112B494A7E00C\nJan 25, 2011 3:31:28 PM org.apache.tomcat.util.net.NioEndpoint$SocketProcessor run\nSEVERE:\njava.lang.NullPointerException\n        at org.apache.coyote.http11.InternalNioOutputBuffer.recycle(InternalNioOutputBuffer.java:351)\n        at org.apache.coyote.http11.Http11NioProcessor.recycle(Http11NioProcessor.java:1007)\n        at org.apache.coyote.http11.Http11NioProtocol$Http11ConnectionHandler.release(Http11NioProtocol.java:643)\n        at org.apache.coyote.http11.Http11NioProtocol$Http11ConnectionHandler.event(Http11NioProtocol.java:679)\n        at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:2262)\n        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)\n        at java.lang.Thread.run(Thread.java:619)"}, {"count": 6, "tags": [], "creator": "knst.kolinko@gmail.com", "text": "(In reply to comment #4)\nRepeated calls to recycle() should succeed. Shouldn't they? Implementation of InternalNioOutputBuffer.recycle() was already broken in this sense earlier, since r428884.\n\nWhat is different in 6.0.30 is that several new calls to recycle() appeared -- I remember of the one in [1], and thus this issue became apparent. The reproduction recipe in comment 2 is based on [1].\n\n[1] http://svn.apache.org/viewvc/tomcat/tc6.0.x/trunk/java/org/apache/catalina/connector/CoyoteAdapter.java?r1=1030188&r2=1030187&pathrev=1030188", "id": 143638, "attachment_id": null, "bug_id": 50651, "creation_time": "2011-01-25T17:12:53Z", "time": "2011-01-25T17:12:53Z", "is_private": false}, {"count": 7, "tags": [], "creator": "fhanik@apache.org", "text": "(In reply to comment #6)\n> (In reply to comment #4)\n> Repeated calls to recycle() should succeed. Shouldn't they? Implementation of\n> InternalNioOutputBuffer.recycle() was already broken in this sense earlier,\n> since r428884.\n\nnot really, calling recycle multiple times is probably just a sign of bad code. Whether the recycle method should be idempotent is a separate discussion.\nI agree that it should, but it doesn't mean it should be called multiple times.\nCause the bugs that come up from coding like that, is way harder to track down.\n\n\n> \n> What is different in 6.0.30 is that several new calls to recycle() appeared --\n> I remember of the one in [1], and thus this issue became apparent. The\n> reproduction recipe in comment 2 is based on [1].\n> \n> [1]\n> http://svn.apache.org/viewvc/tomcat/tc6.0.x/trunk/java/org/apache/catalina/connector/CoyoteAdapter.java?r1=1030188&r2=1030187&pathrev=1030188\n\nSo, why not fix the real problem ?", "id": 143679, "attachment_id": null, "bug_id": 50651, "creation_time": "2011-01-26T14:20:26Z", "time": "2011-01-26T14:20:26Z", "is_private": false}, {"count": 8, "tags": [], "bug_id": 50651, "text": "Created attachment 26554\ncatalina.2011-01-27.log\n\n(In reply to comment #7)\n> Whether the recycle method should be idempotent is a separate discussion.\n> I agree that it should, but it doesn't mean it should be called multiple times.\n> Cause the bugs that come up from coding like that, is way harder to track down.\n\nI am sure that if we skip recycling the processor before its reuse in some case, the consequences will be harder than if we recycle it twice.\n\nThe code is already hard to follow at some places. \n\n> So, why not fix the real problem ?\n\nI think the bug in recycle() is the real problem. Though I do not mind patching CoyoteAdapter.log() as well. Part of the necessary changes is in r1059548 [2]\n\n[2] http://svn.apache.org/viewvc/tomcat/trunk/java/org/apache/catalina/connector/CoyoteAdapter.java?r1=1059548&r2=1059547&pathrev=1059548\n\n\nHere is one more occurrence of the issue,\njust using the browser (Firefox 3.6.13):\n1. Using Tomcat 6.0.31. Configure Tomcat with Http11NioProtocol connector and AccessLogValve in <Host>\n2. Clear cache of the browser\n3. Access http://localhost:8080/examples/jsp/plugin/plugin.jsp\n4. Wait for more than 10 seconds.\n5. The pair of exceptions occur:\n\n27.01.2011 3:09:37 org.apache.coyote.http11.Http11NioProtocol$Http11ConnectionHandler process\nSEVERE: Error reading request, ignored\njava.lang.NullPointerException\n\tat org.apache.coyote.http11.InternalNioOutputBuffer.recycle(InternalNioOutputBuffer.java:351)\n\tat org.apache.coyote.http11.Http11NioProcessor.recycle(Http11NioProcessor.java:1007)\n\tat org.apache.coyote.http11.Http11NioProtocol$Http11ConnectionHandler.release(Http11NioProtocol.java:655)\n\tat org.apache.coyote.http11.Http11NioProtocol$Http11ConnectionHandler.process(Http11NioProtocol.java:751)\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:2262)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)\n\tat java.lang.Thread.run(Thread.java:662)\n27.01.2011 3:09:37 org.apache.tomcat.util.net.NioEndpoint$SocketProcessor run\nSEVERE: \njava.lang.NullPointerException\n\tat org.apache.coyote.http11.InternalNioOutputBuffer.recycle(InternalNioOutputBuffer.java:351)\n\tat org.apache.coyote.http11.Http11NioProcessor.recycle(Http11NioProcessor.java:1007)\n\tat org.apache.coyote.http11.Http11NioProtocol$Http11ConnectionHandler.release(Http11NioProtocol.java:655)\n\tat org.apache.coyote.http11.Http11NioProtocol$Http11ConnectionHandler.process(Http11NioProtocol.java:776)\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:2262)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)\n\tat java.lang.Thread.run(Thread.java:662)\n\n-- see attachment.\n\nAccess log:\n127.0.0.1 - - [27/Jan/2011:03:09:26 +0300] \"GET /examples/jsp/plugin/plugin.jsp HTTP/1.1\" 200 1655\n127.0.0.1 - - [27/Jan/2011:03:09:26 +0300] \"GET /favicon.ico HTTP/1.1\" 200 21630\n127.0.0.1 - - [27/Jan/2011:03:09:27 +0300] \"GET /examples/jsp/plugin/applet/Clock2.class HTTP/1.1\" 304 -\n\nI am not able to reproduce this with usual static or JSP pages.\n\nI suspect that some cause is that Http11NioProtocol#process(NioChannel) there are calls to release(socket, processor) in \"if (state == SocketState.OPEN)\" and in \"else\" branches -- Http11NioProtocol.java:751 is where the exception occurs,  but Http11NioProcessor#process(NioChannel) called from there already calls recycle() by itself.\n\nI think this comes from r1030613. There were later changes in Http11NioProcessor to add to this.\n\n\nThe second exception in the pair, at (Http11NioProtocol.java:776) occurs after a catch block. This comes from r1033341. In this place it is hard to guess whether recycle() call already happened or not.\n\n\nThe reproduction recipe in comment 5 is different from the both of mine ones.", "id": 143684, "time": "2011-01-26T19:45:54Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2011-01-26T19:45:54Z", "is_private": false, "attachment_id": 26554}, {"count": 9, "tags": [], "bug_id": 50651, "attachment_id": 26557, "id": 143689, "time": "2011-01-26T20:38:58Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2011-01-26T20:38:58Z", "is_private": false, "text": "Created attachment 26557\n2011-01-27_tc6_50651_CoyoteAdapter.patch\n\nPatch, in addition to the previous one:\nRecycle request and response in CoyoteAdapter#log() only if they were created there."}, {"count": 10, "tags": [], "creator": "fhanik@apache.org", "attachment_id": null, "text": "(In reply to comment #9)\n> Created an attachment (id=26557) [details]\n> 2011-01-27_tc6_50651_CoyoteAdapter.patch\n> \n> Patch, in addition to the previous one:\n> Recycle request and response in CoyoteAdapter#log() only if they were created\n> there.\n\n+1 to this one.", "id": 143718, "time": "2011-01-27T11:24:16Z", "bug_id": 50651, "creation_time": "2011-01-27T11:24:16Z", "is_private": false}, {"count": 11, "tags": [], "bug_id": 50651, "text": "Both patches were applied and will be in 6.0.32.\n\nAs I mentioned, the same changes to TC7 are already applied in r1022478 (7.0.4) and r1059548 (-> 7.0.7).", "id": 143728, "time": "2011-01-27T13:49:54Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2011-01-27T13:49:54Z", "is_private": false, "attachment_id": null}]