[{"id": 77896, "tags": [], "bug_id": 35960, "attachment_id": null, "count": 0, "text": "To perform an enveloped signature, we need to add a\nTransforms.TRANSFORM_ENVELOPED_SIGNATURE to the Transforms list for the refernce\npointing to the element enveloping the signature.\n\nIf a transform producing an octet stream output is listed BEFORE the\nTRANSFORM_ENVELOPED_SIGNATURE, the transforms execution will not remove the\nsignature element.\n\nThe signature is performed including all SignatureELement and works fine. But\nthe verification fails because the digest and signature value has been added to\nthe signed element.\n\nThis error is due to the use of a DocumentBuilder in the getNodeSet(boolean\ncircunvent) method of the XMLSignatureInput class. In this method a new Document\nis built from the octet stream. When the EnvelopedSignature is perform, the\nSignatureElement is found in the base document and is looked in the rebuilt\ndocument in order to be removed  with the method :\nXMLUtils.excludeNodeFromSet(signatureElement, inputSet)\nwhich uses the method \nXMLUtils.isDescendantOrSelf(signatureElement, inputNode)\nthis method compares the node with the equals() method of the Objet class. The\nnodes are not extracted from the same document so they are never equals and\nnever removed.", "time": "2005-08-01T10:53:33Z", "creator": "julien.taupin@ilex.fr", "creation_time": "2005-08-01T10:53:33Z", "is_private": false}, {"count": 1, "tags": [], "creator": "julien.taupin@ilex.fr", "attachment_id": 15837, "is_private": false, "id": 77897, "time": "2005-08-01T10:56:45Z", "bug_id": 35960, "creation_time": "2005-08-01T10:56:45Z", "text": "Created attachment 15837\nA test where signature verification failed because of this bug."}, {"count": 2, "tags": [], "creator": "sean.mullan@oracle.com", "attachment_id": null, "id": 78590, "time": "2005-08-17T17:13:39Z", "bug_id": 35960, "creation_time": "2005-08-17T17:13:39Z", "is_private": false, "text": "I can't think of a nice solution off-hand that fixes this. Can you give me\nsome use-cases that justify that this should be fixed? For your sample,\nit seems you could avoid this problem by reordering the transformations so \nthat the C14N is executed after the ENVELOPED."}, {"count": 3, "tags": [], "creator": "julien.taupin@ilex.fr", "attachment_id": null, "is_private": false, "id": 78640, "time": "2005-08-18T17:06:49Z", "bug_id": 35960, "creation_time": "2005-08-18T17:06:49Z", "text": "(In reply to comment #2)\nWell I don't see a use-case where this problem could not be avoid by re-ordering\nthe transform. \n\nI have seen this problem because I'm building an API over XML Security and so I\nreceive the thransforms already ordonate. So I don't know if I can re order the\ntransforms without problems. \n\nMoreover placing the C14N transforms at the end of the list of transforms is\nmore \"logical\" but the w3c recommendations specify nothing about it.\n\nPerhaps this should not be fixed ?"}, {"id": 78702, "tags": [], "bug_id": 35960, "attachment_id": null, "count": 4, "text": "Marking this as WONTFIX for now. If we come up with a legitimate \nuse-case with no workaround, we can revisit it.", "time": "2005-08-19T15:05:49Z", "creator": "sean.mullan@oracle.com", "creation_time": "2005-08-19T15:05:49Z", "is_private": false}, {"count": 5, "tags": [], "creator": "raul-info@r-bg.com", "attachment_id": null, "is_private": false, "id": 91984, "time": "2006-08-06T18:32:31Z", "bug_id": 35960, "creation_time": "2006-08-06T18:32:31Z", "text": "Closing old bugs."}]