[{"count": 0, "tags": [], "creator": "renjithjavadev@gmail.com", "attachment_id": 34731, "is_private": false, "id": 196835, "time": "2017-02-08T04:41:43Z", "bug_id": 60707, "creation_time": "2017-02-08T04:41:43Z", "text": "Created attachment 34731\nPatch that contains the new classes anf files introduced for enabling this functionality.\n\nThis API helps the user to 'read' very large excel files and return the data in String format. It represents the excel file as an instance of \u2018org.apache.poi.xssf.streaming.reader.StreamedWorkbook\u2019. This workbook can be sub divided into StreamedSheets> StreamedRows > StreamedCells. StreamedCells are the basic building block. StreamedCell represent the excel cell and holds the String representation of the excel cell value.  In order to reduce the memory usage StreamedCell is restricted to store only the String value & Cell Number. Since the string value is exactly same as seen in excel file, user can format it to whatever type he requires.\n\nApart from that, it uses the pull parser(StAX api) for streaming, so that the user has more control over the parsing. User can read N rows of data, process it and then read the next N blocks as so on..\n\nPatch attached. Please take a look and let me know your comments.\n\nthanks,\nRenjith"}, {"count": 1, "tags": [], "creator": "onealj@apache.org", "attachment_id": null, "id": 196838, "time": "2017-02-08T05:27:26Z", "bug_id": 60707, "creation_time": "2017-02-08T05:27:26Z", "is_private": false, "text": "This looks like a good start and a complement to SXSSFWorbook, which is a write-only streaming API.\n\nThe unit test for StreamingWorkbook is a nice touch, too.\n\nIn order to better integrate these classes within POI, they would need to implement the Workbook, Sheet, Row, and Cell interfaces so that someone can write generic Common SS code and switch between HSSF, XSSF, write-SXSSF and sax-read-SXSSF.\n\nIt's fine to stub out most methods for now as either \"will be supported in the future\" or \"won't be supported due to memory footprint\"."}, {"count": 2, "tags": [], "text": "Created attachment 34757\nPatch which implements the interfaces Cell, Row, Sheet & Workbook\n\nI have implemented the Cell, Row, Sheet & Workbook interfaces for easy integration with existing functionality.", "attachment_id": 34757, "id": 197022, "creation_time": "2017-02-15T05:21:32Z", "time": "2017-02-15T05:21:32Z", "creator": "renjithjavadev@gmail.com", "bug_id": 60707, "is_private": false}, {"count": 3, "tags": [], "text": "I have implemented Cell, Row, Sheet & Workbook interfaces for easy integration with existing functionality. Methods which needs more research to implement are mentioned as 'Will be supported in future'. Others are also provided with proper comments.", "is_private": false, "id": 197023, "creation_time": "2017-02-15T05:24:34Z", "time": "2017-02-15T05:24:34Z", "creator": "renjithjavadev@gmail.com", "bug_id": 60707, "attachment_id": null}, {"count": 4, "tags": [], "text": "Gentle reminder. Did someone got a chance to look into?", "attachment_id": null, "id": 197213, "creator": "renjithjavadev@gmail.com", "time": "2017-02-22T13:28:25Z", "bug_id": 60707, "creation_time": "2017-02-22T13:28:25Z", "is_private": false}, {"count": 5, "tags": [], "creator": "renjithjavadev@gmail.com", "attachment_id": null, "id": 197541, "time": "2017-03-08T15:43:18Z", "bug_id": 60707, "creation_time": "2017-03-08T15:43:18Z", "is_private": false, "text": "I'll continue to add the functionalities and post the patches here. I will be glad if someone got a chance to review my work. Let me know if you want me to look at anything specific or please guide me if I am moving in a wrong direction."}, {"count": 6, "attachment_id": null, "bug_id": 60707, "is_private": false, "id": 197798, "time": "2017-03-19T08:45:51Z", "creator": "dominik.stadler@gmx.at", "creation_time": "2017-03-19T08:45:51Z", "tags": [], "text": "I did a look, here some initial comments:\n* The initial implementation looks already like a good start, thanks for putting in the work\n* Maybe we should throw \"UnsupportedException\" in the methods that are not supported, this way the user immediately knows even if she does not look at the JavaDoc?\n* As it is complex new functionality, we might first add it to the \"scratchpad\" project/source-folders so we can let it stabilise some more until we declare it as \"production ready\" by moving it into the ooxml-part.\n* Please remove the \"// TODO Auto-generated method stub\" comments with a comment that explains why the method is empty or with an exception as stated above or simply remove it\n* Please try to format the code consistently according to our coding-guidelines, see http://poi.apache.org/guidelines.html#CodeStyle, your IDE will usually allow to define it and reformat a whole file in one go.\n* Is there a way to not duplicate the date-formats in StreamedSheetEventHandler? We already handle them in various places, e.g. DateFormatConverter\n* On testing I would love to see some test that kind of \"trashes\" the implementation, i.e. take all spreadsheets that we have under test-data and run the normal XSSFWorkbook/HSSFWorkbook and compare results to your implementation as far as possible. This way we ensure that your code handles all the special cases that can arise."}, {"count": 7, "tags": [], "bug_id": 60707, "attachment_id": null, "id": 197817, "time": "2017-03-20T05:00:01Z", "creator": "renjithjavadev@gmail.com", "creation_time": "2017-03-20T05:00:01Z", "is_private": false, "text": "Thanks a lot for the Inputs, Dominik. Let me work out on these points and I'll get back to you."}, {"count": 8, "tags": [], "creator": "renjithjavadev@gmail.com", "attachment_id": 34943, "is_private": false, "id": 198478, "time": "2017-04-23T15:54:57Z", "bug_id": 60707, "creation_time": "2017-04-23T15:54:57Z", "text": "Created attachment 34943\nVersion 3: Patch with some of the review comments implemented\n\nHi.. \nI have tried to implement most of the comments. I am still working on reusing the existing methods for reading the date from excel. Since it is time-consuming, I am posting rest of the changes here. Kindly take and look and let me know your queries, suggestions etc.."}, {"count": 9, "tags": [], "text": "Could you also add a @NotImplemented annotation to methods where you throw Unsupported operation exception? This will make it clear to the Javadocs readers that the method isn't implemented yet.\n\nhttps://poi.apache.org/apidocs/org/apache/poi/util/NotImplemented.html", "is_private": false, "id": 198479, "creation_time": "2017-04-23T19:02:13Z", "time": "2017-04-23T19:02:13Z", "creator": "onealj@apache.org", "bug_id": 60707, "attachment_id": null}, {"count": 10, "tags": [], "creator": "renjithjavadev@gmail.com", "attachment_id": 34945, "id": 198483, "time": "2017-04-24T04:25:56Z", "bug_id": 60707, "creation_time": "2017-04-24T04:25:56Z", "is_private": false, "text": "Created attachment 34945\nVersion 4: Added @NotImplemented. Added feature getColumnIndex\n\nThanks a lot for the suggestion.\nAdded @NotImplemented."}, {"count": 11, "attachment_id": null, "bug_id": 60707, "is_private": false, "id": 198798, "time": "2017-05-16T10:59:48Z", "creator": "renjithjavadev@gmail.com", "creation_time": "2017-05-16T10:59:48Z", "tags": [], "text": "I was analyzing 'DateFormatConverter' to see if I can reuse any logic from it. But, as per my understanding, this class is more helpful while writing data to excel. eg convert(Locale.JAPANESE, \"dd MMMM, yyyy\"), will generate a data format string which can be used for applying a style to Cell. I'll keep on searching. Please let me know if anyone has any clue on this."}, {"count": 12, "attachment_id": null, "bug_id": 60707, "is_private": false, "id": 198799, "time": "2017-05-16T11:01:56Z", "creator": "renjithjavadev@gmail.com", "creation_time": "2017-05-16T11:01:56Z", "tags": [], "text": "I was analyzing 'DateFormatConverter' to see if I can reuse any logic from it. But, as per my understanding, this class is more helpful while writing data to excel. eg convert(Locale.JAPANESE, \"dd MMMM, yyyy\"), will generate a data format string which can be used for applying a style to Cell. I'll keep on searching. Please let me know if anyone has any clue on this."}, {"count": 13, "tags": [], "bug_id": 60707, "attachment_id": null, "id": 199381, "time": "2017-06-24T13:27:35Z", "creator": "renjithjavadev@gmail.com", "creation_time": "2017-06-24T13:27:35Z", "is_private": false, "text": "Did someone get a chance to review the code? \nI'd be glad to see some comments."}, {"count": 14, "tags": [], "text": "I added a StaxHelper class today because I think it is a good idea for us to apply default configuration to the factories. One benefit is to protect against XML Entity Expansion attacks.\nWould you be able to uptake this?", "attachment_id": null, "id": 199382, "creator": "fanningpj@yahoo.com", "time": "2017-06-24T13:46:56Z", "bug_id": 60707, "creation_time": "2017-06-24T13:46:56Z", "is_private": false}, {"count": 15, "tags": [], "creator": "renjithjavadev@gmail.com", "attachment_id": null, "text": "Sure, I'll look into it. \nHope (https://bz.apache.org/bugzilla/show_bug.cgi?id=61213) is the one you are talking about.", "id": 199417, "time": "2017-06-26T07:33:03Z", "bug_id": 60707, "creation_time": "2017-06-26T07:33:03Z", "is_private": false}, {"count": 16, "attachment_id": null, "bug_id": 60707, "is_private": false, "id": 199433, "time": "2017-06-26T15:06:46Z", "creator": "fanningpj@yahoo.com", "creation_time": "2017-06-26T15:06:46Z", "tags": [], "text": "Renjith - the StaxHelper is already merged to the svn trunk (src/java). The rest of the change for using StAX parser for issue 61213 is still under discussion."}, {"count": 17, "tags": [], "creator": "fanningpj@yahoo.com", "attachment_id": null, "id": 199646, "time": "2017-07-08T18:54:55Z", "bug_id": 60707, "creation_time": "2017-07-08T18:54:55Z", "is_private": false, "text": "Renjith - could you attach SpreadSheetSample04022017.xlsx to the issue?"}, {"count": 18, "tags": [], "text": "You can take it from git. \n\nhttps://github.com/ranju4u6/poi/blob/Startup/test-data/spreadsheet/SpreadSheetSample04022017.xlsx\n\n\nSorry, I did not get a chance to look into your code due to tight work schedule. I have committed my changes to the following branch.\n\nhttps://github.com/ranju4u6/poi/tree/Startup\n\nIf you find it interesting, please take it up. It may take me a couple of months or more to get into a normal schedule. I'll catch up with you then.", "is_private": false, "id": 199648, "creation_time": "2017-07-09T03:33:45Z", "time": "2017-07-09T03:33:45Z", "creator": "renjithjavadev@gmail.com", "bug_id": 60707, "attachment_id": null}, {"count": 19, "tags": [], "text": "I created a new branch and Pull Request for the work to date.\nI took Renjith's patch and did a little tidy up.\nhttps://github.com/apache/poi/pull/64\n\nI think we need a fair amount of extra coverage (using different workbooks) and to decide whether enough of the core Workbook API is implemented to proceed.", "is_private": false, "id": 199761, "creation_time": "2017-07-13T12:37:12Z", "time": "2017-07-13T12:37:12Z", "creator": "fanningpj@yahoo.com", "bug_id": 60707, "attachment_id": null}, {"count": 20, "tags": [], "text": "Hi PJ Fanning, I believe you have done some code review changes and some tidy ups.Thanks for that. So am I good to take the latest code from your repository(https://github.com/pjfanning/poi.git) with Branch: \"streaming-workbook\"?. I would like to resume from where I stopped a couple of months back.", "attachment_id": null, "id": 201143, "creator": "renjithjavadev@gmail.com", "time": "2017-09-26T16:27:54Z", "bug_id": 60707, "creation_time": "2017-09-26T16:27:54Z", "is_private": false}, {"count": 21, "tags": [], "creator": "fanningpj@yahoo.com", "attachment_id": null, "is_private": false, "id": 201144, "time": "2017-09-26T19:42:08Z", "bug_id": 60707, "creation_time": "2017-09-26T19:42:08Z", "text": "Renjith - feel free to fork my branch."}, {"count": 22, "tags": [], "bug_id": 60707, "attachment_id": null, "id": 202322, "time": "2017-11-21T22:33:24Z", "creator": "fanningpj@yahoo.com", "creation_time": "2017-11-21T22:33:24Z", "is_private": false, "text": "One alternative worth trying is https://github.com/monitorjbl/excel-streaming-reader which is built on top of Apache POI."}, {"count": 23, "attachment_id": null, "bug_id": 60707, "is_private": false, "id": 202325, "time": "2017-11-22T02:21:27Z", "creator": "renjithjavadev@gmail.com", "creation_time": "2017-11-22T02:21:27Z", "tags": [], "text": "Cool! Looks promising."}]