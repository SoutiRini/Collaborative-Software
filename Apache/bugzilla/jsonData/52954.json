[{"count": 0, "tags": [], "creator": "neale@metawerx.net", "attachment_id": null, "id": 155165, "time": "2012-03-21T06:53:16Z", "bug_id": 52954, "creation_time": "2012-03-21T06:53:16Z", "is_private": false, "text": "Android's browser has a slightly broken implementation of DIGEST support, causing it to fail authentication against Tomcat.\n\nThere are 2 issues here which if bypassed in DigestAuthenticator, allow Android devices to authenticate successfully.\n\n1. nc (nonce-count) is 6 digits instead of 8\n\nnonce-count      = \"nc\" \"=\" nc-value\nnc-value         = 8LHEX\n\nFail as per RFC, however:\n\"The nc-value is the hexadecimal\n     count of the number of requests (including the current request)\n     that the client has sent with the nonce value in this request.\"\n\nSo Android is sending a 24 bit number instead of a 32 bit number.\n\nTomcat is failing auth based on (nc.length() != 8) which means the request must match the RFC, but I can't see anything saying that it's necessary to fail based on a shorter nc-value.\n\nAdditionally, if this value wrapped due to being too short (the client would have to send the same nonce 16777216 times in a single request), we'd fail it anyway because of the nc check (count <= info.getCount()).\n\n2. uri is specified as an absolute URI, whereas browsers and examples show it as a relative URI.\n\nHowever, the RFC specifies this as:\ndigest-uri       = \"uri\" \"=\" digest-uri-value\ndigest-uri-value = request-uri   ; As specified by HTTP/1.1\n\nBut in RFC 2616 (HTTP/1.1):\n\nRequest-URI    = \"*\" | absoluteURI | abs_path | authority\n...\n\"To allow for transition to absoluteURIs in all requests in future\n   versions of HTTP, all HTTP/1.1 servers MUST accept the absoluteURI\n   form in requests, even though HTTP/1.1 clients will only generate\n   them in requests to proxies.\"\n\nSo this one is a bit vague as to whether an absolute uri should cause a validation fail.\n\nThere is an issue listed here showing similar problems against Apache.\nhttp://code.google.com/p/android/issues/detail?id=21239\n\n---------\n\nI've only listed this as an enhancement, as Tomcat isn't broken here, but I'm interested in opinions:\n\nWe could:\n1. patch Tomcat to allow the two above situations\n2. make the above allowable via a setting in the Realm\n3. just continue to block digest auth for all Android devices until they fix the problem.\n\nBest Regards,\nNeale Rudd"}, {"count": 1, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "is_private": false, "id": 155444, "time": "2012-03-31T17:47:30Z", "bug_id": 52954, "creation_time": "2012-03-31T17:47:30Z", "text": "(In reply to comment #0)\n\nThe spec do indicate that servers should be tolerant where they can but this is a security feature so we need to be careful.\n\n1. I'd be happy relaxing the limit on the length of the nonce count to between 6 an 8 inclusive.\n\n2. Regarding the request-uri, my reading of the specs is that it should match what is in the request line so if android is using an absolute uri in the request line then we should certainly accept it. If it isn't then as long as the host header matches then it is equivalent so at the moment I don't see any reason not to allow it."}, {"count": 2, "tags": [], "bug_id": 52954, "attachment_id": null, "is_private": false, "id": 159920, "time": "2012-06-12T13:31:13Z", "creator": "markt@apache.org", "creation_time": "2012-06-12T13:31:13Z", "text": "Fixed in trunk and 7.0.x and will be included in 7.0.28 onwards.\n\nFor the record Android <= 2.3.5 is broken, >= 4.0.3 is fixed. I didn't dig though the source to find out exactly where this was fixed."}]