[{"count": 0, "attachment_id": 33480, "creator": "givemejob@ya.ru", "is_private": false, "id": 187919, "time": "2016-01-23T12:31:55Z", "bug_id": 58915, "creation_time": "2016-01-23T12:31:55Z", "tags": [], "text": "Created attachment 33480\nmemory eaters\n\nWe did stress test:\n - Tomcat 7 Xmx100m\n - JVM 7\n - on request we start 10 threads and each thread writes large xlsx file with 10 rows sliding window (SXSSF) to the file\n\nLibrary we use:\n - jxls 2.8\n - jxls-poi 1.0.7\n - Apache POI 3.13 (poi, poi-ooxml, poi-ooxml-schemas)\n - xmlbeans 2.6.0\n\nIt was assumed that window should reduce memory consumption to volume memory needed for window. \n\nFor large xlsx files we can see what objects Xobj$ElementXobj, Xobj$AttrXobj, STRefImpl, CTMergeCellImpl eat memory."}, {"count": 1, "tags": [], "bug_id": 58915, "text": "Created attachment 33481\n10min monitoring", "id": 187920, "time": "2016-01-23T12:33:38Z", "creator": "givemejob@ya.ru", "creation_time": "2016-01-23T12:33:38Z", "is_private": false, "attachment_id": 33481}, {"count": 2, "tags": [], "bug_id": 58915, "attachment_id": 33482, "id": 187921, "time": "2016-01-23T12:34:15Z", "creator": "givemejob@ya.ru", "creation_time": "2016-01-23T12:34:15Z", "is_private": false, "text": "Created attachment 33482\n1hour monitoring"}, {"count": 3, "text": "Looks like bug of jxls 2.2.8\nWrong version of jxls in the first comment. (2.8 -> 2.2.8)", "creator": "givemejob@ya.ru", "attachment_id": null, "id": 187952, "time": "2016-01-25T10:54:33Z", "bug_id": 58915, "creation_time": "2016-01-25T10:54:33Z", "tags": [], "is_private": false}, {"count": 4, "attachment_id": null, "creator": "givemejob@ya.ru", "is_private": false, "id": 187987, "time": "2016-01-27T12:29:19Z", "bug_id": 58915, "creation_time": "2016-01-27T12:29:19Z", "tags": [], "text": "POI SXSSF uses SXSSFSheet for excel sheet representation.\n\nSXSSFSheet is wraper for XSSFSheet with 'overrided' createRow method. (support for row flush capability)\n\nOther methods of SXSSFSheet delegates call to XSSFSheet.\n\nTherefore all information about workbook are stored in memory except rows (cell value and etc)\nFor example SXSSFSheet.addMergedRegion add CellRangeAddress object in memory when CellRangeAddress count not constant value. On big data this produce chart like \"1hour monitoring\".\n\n\u0421all of SXSSFWorkbook.write method marshal java objects (except rows) to ByteArrays (see MemoryPackagePartOutputStream) therefore it produce memory consumption jump at the end of SXSSFWorkbook.write call.\n\nIf reasoning is correct then in my opinion this is should be pointed into \"Quick Guide\".\nI did not find the information until not investigate it."}, {"count": 5, "tags": [], "bug_id": 58915, "text": "Adjusted javadoc in r1737024 and the page at https://poi.apache.org/spreadsheet/how-to.html#sxssf via r1737025.", "id": 189797, "time": "2016-03-29T17:31:33Z", "creator": "dominik.stadler@gmx.at", "creation_time": "2016-03-29T17:31:33Z", "is_private": false, "attachment_id": null}, {"count": 6, "tags": [], "bug_id": 58915, "text": "Correct revision for the webpage is r1737028.", "id": 189799, "time": "2016-03-29T18:36:56Z", "creator": "dominik.stadler@gmx.at", "creation_time": "2016-03-29T18:36:56Z", "is_private": false, "attachment_id": null}]