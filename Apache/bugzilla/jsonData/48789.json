[{"count": 0, "tags": [], "bug_id": 48789, "text": "we have one test case failing consistently in the gump public run\n\nTestcase: testRedirector13(org.apache.tools.ant.taskdefs.ExecTaskTest):\tFAILED\n    [junit] unexpected log content expected:<[/srv/gump/public/workspace/ant/src/etc/testcases/taskdefs/exec/exec.xml ERROR!!!]/srv/gump/public/wor...> but was:<[error at LeadPipeInputStream.read():  Pipe broken]/srv/gump/public/wor...>\n    [junit\n\n\nI have seen on comp.lang.java.help a mention of a similar error message displayed when using the signjar task. The signjar task is also using Redirector and LeadPipeInputStream internally.\n\nWhich OS is used by gump ?\n\nhttp://vmgump.apache.org/gump/public/ant/test-ant/gump_work/build_ant_test-ant.txt", "id": 134756, "time": "2010-02-22T01:35:48Z", "creator": "antoine@apache.org", "creation_time": "2010-02-22T01:35:48Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 48789, "attachment_id": null, "is_private": false, "id": 134759, "time": "2010-02-22T03:33:20Z", "creator": "antoine@apache.org", "creation_time": "2010-02-22T03:33:20Z", "text": "I think of changing lines 588 and 630 of Redirector.java to create the \"output pumper\" and \"error Pumper\" thread with the flag \"useAvailable\" of StreamPumper set to true.\n\nThis is just a wild guess. It looks like vmgump is running under Ubuntu. If I could get hold of a similar machine or get shell access on vmgump, I could check this guess."}, {"count": 2, "tags": [], "creator": "antoine@apache.org", "is_private": false, "text": "Doing what I am writing brings a deadlock in ExecTaskTest.testRedirector7  on Ubuntu \nthread dump below\n:\n\nFull thread dump Java HotSpot(TM) Client VM (10.0-b22 mixed mode, sharing):\n\n\"Attach Listener\" daemon prio=10 tid=0x083ce400 nid=0x3dbb waiting on condition [0x00000000..0x00000000]\n   java.lang.Thread.State: RUNNABLE\n\n\"error pumper\" prio=10 tid=0xb57d7000 nid=0x3d40 in Object.wait() [0xb52ad000..0xb52ae140]\n   java.lang.Thread.State: TIMED_WAITING (on object monitor)\n\tat java.lang.Object.wait(Native Method)\n\t- waiting on <0x8c381650> (a org.apache.tools.ant.taskdefs.StreamPumper)\n\tat org.apache.tools.ant.taskdefs.StreamPumper.waitForInput(StreamPumper.java:229)\n\t- locked <0x8c381650> (a org.apache.tools.ant.taskdefs.StreamPumper)\n\tat org.apache.tools.ant.taskdefs.StreamPumper.run(StreamPumper.java:126)\n\tat java.lang.Thread.run(Thread.java:619)\n\n\"Low Memory Detector\" daemon prio=10 tid=0x08097000 nid=0x3cd3 runnable [0x00000000..0x00000000]\n   java.lang.Thread.State: RUNNABLE\n\n\"CompilerThread0\" daemon prio=10 tid=0x0808c400 nid=0x3cd2 waiting on condition [0x00000000..0xb59a2878]\n   java.lang.Thread.State: RUNNABLE\n\n\"Signal Dispatcher\" daemon prio=10 tid=0x0808b000 nid=0x3cd1 runnable [0x00000000..0xb59f3e20]\n   java.lang.Thread.State: RUNNABLE\n\n\"Finalizer\" daemon prio=10 tid=0x08085400 nid=0x3cd0 in Object.wait() [0xb5a8a000..0xb5a8b0c0]\n   java.lang.Thread.State: WAITING (on object monitor)\n\tat java.lang.Object.wait(Native Method)\n\t- waiting on <0x8c5b8318> (a java.lang.ref.ReferenceQueue$Lock)\n\tat java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:116)\n\t- locked <0x8c5b8318> (a java.lang.ref.ReferenceQueue$Lock)\n\tat java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:132)\n\tat java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java:159)\n\n\"Reference Handler\" daemon prio=10 tid=0x08080c00 nid=0x3ccf in Object.wait() [0xb5adb000..0xb5adc040]\n   java.lang.Thread.State: WAITING (on object monitor)\n\tat java.lang.Object.wait(Native Method)\n\t- waiting on <0x8c5b83a0> (a java.lang.ref.Reference$Lock)\n\tat java.lang.Object.wait(Object.java:485)\n\tat java.lang.ref.Reference$ReferenceHandler.run(Reference.java:116)\n\t- locked <0x8c5b83a0> (a java.lang.ref.Reference$Lock)\n\n\"main\" prio=10 tid=0x08058c00 nid=0x3ccd in Object.wait() [0xb7d4d000..0xb7d4f218]\n   java.lang.Thread.State: TIMED_WAITING (on object monitor)\n\tat java.lang.Object.wait(Native Method)\n\t- waiting on <0x8c373cb8> (a org.apache.tools.ant.taskdefs.Redirector)\n\tat org.apache.tools.ant.taskdefs.Redirector.complete(Redirector.java:931)\n\t- locked <0x8c373cb8> (a org.apache.tools.ant.taskdefs.Redirector)\n\tat org.apache.tools.ant.taskdefs.ExecTask.runExecute(ExecTask.java:647)\n\tat org.apache.tools.ant.taskdefs.ExecTask.runExec(ExecTask.java:676)\n\tat org.apache.tools.ant.taskdefs.ExecTask.execute(ExecTask.java:502)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor17.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:597)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:390)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:411)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1397)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1366)\n\tat org.apache.tools.ant.BuildFileTest.executeTarget(BuildFileTest.java:324)\n\tat org.apache.tools.ant.taskdefs.ExecTaskTest.testRedirector7(ExecTaskTest.java:236)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:597)\n\tat junit.framework.TestCase.runTest(TestCase.java:164)\n\tat junit.framework.TestCase.runBare(TestCase.java:130)\n\tat junit.framework.TestResult$1.protect(TestResult.java:106)\n\tat junit.framework.TestResult.runProtected(TestResult.java:124)\n\tat junit.framework.TestResult.run(TestResult.java:109)\n\tat junit.framework.TestCase.run(TestCase.java:120)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:230)\n\tat junit.framework.TestSuite.run(TestSuite.java:225)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:422)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1337)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:806)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1792)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:760)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor17.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:597)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.taskdefs.Sequential.execute(Sequential.java:68)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor17.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:597)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.taskdefs.MacroInstance.execute(MacroInstance.java:398)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor17.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:597)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:390)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:411)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1397)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1366)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1249)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:801)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:218)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\n\n\"VM Thread\" prio=10 tid=0x0807f800 nid=0x3cce runnable \n\n\"VM Periodic Task Thread\" prio=10 tid=0x08098400 nid=0x3cd4 waiting on condition \n\nJNI global references: 775", "id": 134837, "time": "2010-02-23T21:45:33Z", "bug_id": 48789, "creation_time": "2010-02-23T21:45:33Z", "attachment_id": null}, {"count": 3, "tags": [], "creator": "antoine@apache.org", "attachment_id": null, "id": 134846, "time": "2010-02-23T23:57:53Z", "bug_id": 48789, "creation_time": "2010-02-23T23:57:53Z", "is_private": false, "text": "I am still debugging this testRedirector13 on ubuntu and it fails pretty consistently in fact.\n\nThe test uses \"parrot.sh\"\n\nfor arg in \"$@\" ; do\n\techo $arg out\n\tsleep 1\n\techo $arg err>&2\ndone\n\nwhat happens it seems is that our java code does not wait for the script to be finished and the error stream generates a \"Pipe broken\" message in LeadPipeInputStream.java\n\ntestRedirector13 compares then these 2 strings :\n\nthe real log\n    [junit] /home/antoine/devel/ant-core/src/etc/testcases/taskdefs/exec/exec.xml OUTPUT???Pipe broken\n\nwhat should be received\n    [junit] /home/antoine/devel/ant-core/src/etc/testcases/taskdefs/exec/exec.xml OUTPUT???/home/antoine/devel/ant-core/src/etc/testcases/taskdefs/exec/exec.xml ERROR!!!\n\nNot sure how to fix this problem."}, {"count": 4, "tags": [], "creator": "mbenson@apache.org", "attachment_id": null, "text": "(In reply to comment #3)\n> I am still debugging this testRedirector13 on ubuntu and it fails pretty\n> consistently in fact.\n> \n> The test uses \"parrot.sh\"\n> \n> for arg in \"$@\" ; do\n>     echo $arg out\n>     sleep 1\n>     echo $arg err>&2\n> done\n> \n> what happens it seems is that our java code does not wait for the script to be\n> finished and the error stream generates a \"Pipe broken\" message in\n> LeadPipeInputStream.java\n> \n> testRedirector13 compares then these 2 strings :\n> \n> the real log\n>     [junit]\n> /home/antoine/devel/ant-core/src/etc/testcases/taskdefs/exec/exec.xml\n> OUTPUT???Pipe broken\n> \n> what should be received\n>     [junit]\n> /home/antoine/devel/ant-core/src/etc/testcases/taskdefs/exec/exec.xml\n> OUTPUT???/home/antoine/devel/ant-core/src/etc/testcases/taskdefs/exec/exec.xml\n> ERROR!!!\n> \n> Not sure how to fix this problem.\n\nDid you get access to an ASF Ubuntu box, Antoine?  This code being originally mine, the years of guilt over these failing tests are becoming too much for me.  :/", "id": 134872, "time": "2010-02-24T22:06:38Z", "bug_id": 48789, "creation_time": "2010-02-24T22:06:38Z", "is_private": false}, {"count": 5, "tags": [], "creator": "antoine@apache.org", "text": "Hello Matt,\n\nyes, I wrote to infrastructure and a person called Gavin gave me an account.\n\nAnd James William Dumay wrote this :\n\n\"Why not grab a copy of virtualbox and a ubuntu iso? Both are free  :) \"\n\nI was wondering whether the high priority given to the pumper threads in Redirector is not creating the problem on ubuntu. Just another wild guess.\n\nAntoine", "id": 134873, "time": "2010-02-24T22:46:56Z", "bug_id": 48789, "creation_time": "2010-02-24T22:46:56Z", "is_private": false, "attachment_id": null}, {"count": 6, "tags": [], "bug_id": 48789, "attachment_id": null, "is_private": false, "id": 134958, "time": "2010-03-01T02:33:39Z", "creator": "antoine@apache.org", "creation_time": "2010-03-01T02:33:39Z", "text": "Updating, the current pain points in gump after the exec test has been moved to antunit\n\n[au:antunit] Build File: /srv/gump/public/workspace/ant/src/tests/antunit/taskdefs/exec/apply-test.xml\n[au:antunit] Tests run: 29, Failures: 1, Errors: 0, Time elapsed: 171.901 sec\n[au:antunit] Target: testRedirector13  FAILED\n[au:antunit] \tat line 581, column 50\n[au:antunit] \tMessage: Expected log to contain '/tmp/testinput/y ERROR!!!' at level info\n[au:antunit] \ttook 8.357 sec\n[au:antunit] Build File: /srv/gump/public/workspace/ant/src/tests/antunit/taskdefs/exec/exec-test.xml\n[au:antunit] Tests run: 29, Failures: 1, Errors: 0, Time elapsed: 53.477 sec\n[au:antunit] Target: test-redirector-outputfilterchain-errorfilterchain  FAILED\n[au:antunit] \tat line 529, column 61\n[au:antunit] \tMessage: Expected log to contain '/srv/gump/public/workspace/ant/src/tests/antunit/taskdefs/exec/exec-test.xml ERROR!!!' at level info\n[au:antunit] \ttook 3.573 sec"}, {"count": 7, "tags": [], "bug_id": 48789, "attachment_id": null, "text": "checked in a fix in src/main/org/apache/tools/ant/taskdefs/PumpStreamHandler.java. (hopefully)", "id": 134984, "time": "2010-03-02T00:16:49Z", "creator": "antoine@apache.org", "creation_time": "2010-03-02T00:16:49Z", "is_private": false}, {"count": 8, "tags": [], "text": "I have been experiencing the LeadPipeInputStream Broken Pipe error with Ant 1.8.1 and Antoine pointed me at this issue. I am running on Windows XP under Java 1.6_14. My use case is the Java Task with a LineContainsRegExp output filter chain\nredirector. In Ant 1.7.1 I would see the broken pipe error very infrequently, once every 5 - 10 builds. In Ant 1.8.1 I see it with every build.\n\nI have tried the 6/28/2010 trunk source and still see the problem. I have also\ntried changing the flag in createPumper and still see the problem. I have not yet tried testRedirector13.", "is_private": false, "id": 137992, "creator": "baron@cthing.com", "time": "2010-06-29T11:34:19Z", "bug_id": 48789, "creation_time": "2010-06-29T11:34:19Z", "attachment_id": null}, {"count": 9, "tags": [], "bug_id": 48789, "attachment_id": null, "text": "I just downloaded and started using Ant 1.8.1 today. I now get this\nerror pretty reliably for an \"exec\" task where the executable is \"git\",\nwith an arg line \"remote -v\", feeding the output through a \"redirector\"\nwith an \"outputfilterchain\" containing a single \"linecontains\" subelement. This\nis followed by another \"exec\" with executable \"nawk\".  I am using Java 6\n(1.6.0_20) on a RedHat Linux box with kernel 2.6.9-78.", "id": 139170, "time": "2010-08-17T15:55:26Z", "creator": "dgoblirsch@interactivebrokers.com", "creation_time": "2010-08-17T15:55:26Z", "is_private": false}, {"count": 10, "tags": [], "creator": "dgoblirsch@interactivebrokers.com", "attachment_id": null, "id": 139171, "time": "2010-08-17T15:57:42Z", "bug_id": 48789, "creation_time": "2010-08-17T15:57:42Z", "is_private": false, "text": "One additional point: I never saw this error before using Ant 1.7.1."}, {"count": 11, "tags": [], "creator": "dgoblirsch@interactivebrokers.com", "attachment_id": null, "id": 139207, "time": "2010-08-18T11:25:07Z", "bug_id": 48789, "creation_time": "2010-08-18T11:25:07Z", "is_private": false, "text": "If I add vmlauncher=\"false\" to the <exec> task, I reduce the incidence\nof the error. For one project, I saw the error 5 times out of 7 without\nsetting vmlauncher to \"false\", and after setting it I saw the error 2 times\nout of 7."}, {"count": 12, "tags": [], "text": "Got the same problem with this sequence:\n\n<exec executable=\"reg\" failonerror=\"false\" resultproperty=\"regquery.res\">\n  <arg value=\"query\"/>\n  <arg value=\"&quot;${key}&quot;\"/>\n  <arg value=\"/v\"/>\n  <arg value=\"@{value}\"/>\n  <redirector outputproperty=\"regquery.out\" errorproperty=\"regquery.err\">\n    <outputfilterchain>\n      <replacestring from=\"\\\" to=\"/\"/>\n    </outputfilterchain>\n  </redirector>\n</exec>\n\non Windows 2003 Server and Windows XP SP3.", "is_private": false, "id": 143551, "creator": "renda.krell@gmail.com", "time": "2011-01-21T08:52:58Z", "bug_id": 48789, "creation_time": "2011-01-21T08:52:58Z", "attachment_id": null}, {"count": 13, "tags": [], "creator": "renda.krell@gmail.com", "attachment_id": null, "id": 143552, "time": "2011-01-21T08:55:10Z", "bug_id": 48789, "creation_time": "2011-01-21T08:55:10Z", "is_private": false, "text": "(In reply to comment #12)\n> Got the same problem with this sequence:\n> \n> <exec executable=\"reg\" failonerror=\"false\" resultproperty=\"regquery.res\">\n>   <arg value=\"query\"/>\n>   <arg value=\"&quot;${key}&quot;\"/>\n>   <arg value=\"/v\"/>\n>   <arg value=\"@{value}\"/>\n>   <redirector outputproperty=\"regquery.out\" errorproperty=\"regquery.err\">\n>     <outputfilterchain>\n>       <replacestring from=\"\\\" to=\"/\"/>\n>     </outputfilterchain>\n>   </redirector>\n> </exec>\n> \n> on Windows 2003 Server and Windows XP SP3.\n\nForgot to add: happened in Ant 1.8.1 and Ant 1.8.2.\nWorks fine in Ant 1.6.5."}, {"count": 14, "tags": [], "bug_id": 48789, "attachment_id": null, "text": "The commit r1097584 is fixing the \"Pipe broken\" errors.", "id": 146035, "time": "2011-04-29T05:19:34Z", "creator": "nicolas.lalevee@hibnet.org", "creation_time": "2011-04-29T05:19:34Z", "is_private": false}, {"count": 15, "tags": [], "bug_id": 48789, "text": "Has anyone tested this fix reliably, does this work now?", "id": 152178, "time": "2011-12-15T05:15:03Z", "creator": "renda.krell@gmail.com", "creation_time": "2011-12-15T05:15:03Z", "is_private": false, "attachment_id": null}]