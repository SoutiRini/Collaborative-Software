[{"attachment_id": null, "tags": [], "creator": "tomas.kyjak@accenture.com", "is_private": false, "count": 0, "id": 59382, "time": "2004-06-17T08:05:28Z", "bug_id": 29632, "creation_time": "2004-06-17T08:05:28Z", "text": "Even if you reuse an instance of a Driver object, renderer reads all font \ndefinitions (.xml) from disk everytime it processes a document. Font instances \nare not reused, a lot of memory is allocated and freed immediately, IO \noperations are huge.\nYou can try the following code to see how it behaves.\n\n\nimport org.apache.fop.configuration.ConfigurationReader;\nimport org.apache.fop.apps.InputHandler;\nimport org.apache.fop.apps.Driver;\nimport org.xml.sax.InputSource;\n\nimport javax.xml.transform.stream.StreamSource;\nimport javax.xml.transform.stream.StreamResult;\nimport javax.xml.transform.*;\nimport java.io.*;\nimport java.util.Date;\n\npublic class FOP {\n\n\tpublic static void main(String[] args) {\n\t\ttry {\n\t\t\tStreamSource ss = new StreamSource(new StringReader(\"<< \nPut XML here >>\"));\n      StreamSource ss2 = new StreamSource(new StringReader(\"<< Put XSL here \n>>\"));\n\n\t\t\tTransformerFactory tf = TransformerFactory.newInstance\n();\n\t\t\tTemplates ts = tf.newTemplates(ss2);\n\t\t\tTransformer t = ts.newTransformer();\n\n\t\t\tByteArrayOutputStream resultstream = new \nByteArrayOutputStream();\n\n\t\t\tResult res = new StreamResult(resultstream);\n\t\t\tt.transform(ss, res);\n\n\t\t\tConfigurationReader reader = new ConfigurationReader\n(InputHandler.fileInputSource(new File(\"/xslconfig/conf/userconfig.xml\")));\n\n\t\t\treader.start();\n\n\t\t\tByteArrayOutputStream fos = new ByteArrayOutputStream();\n\t\t\tByteArrayInputStream fis = new ByteArrayInputStream\n(resultstream.toByteArray());\n\t\t\tByteArrayInputStream fis2 = new ByteArrayInputStream\n(resultstream.toByteArray());\n\t\t\tInputSource is = new InputSource(fis);\n\t\t\tInputSource is2 = new InputSource(fis2);\n\n\t\t\tSystem.out.println(new Date() + \"Sleeping for 20 \nseconds before first rendering, check IO read bytes now...\");\n\t\t\tThread.sleep(20000);\n\n\t\t\tDriver driver = new Driver(is, fos);\n\t\t\tdriver.run();\n\n\t\t\tSystem.out.println(new Date() + \"Sleeping for 20 \nseconds after first rendering, check IO read bytes now...\");\n\t\t\tThread.sleep(20000);\n\n\t\t\tdriver.setInputSource(is2);\n\t\t\tdriver.setOutputStream(fos);\n\t\t\tdriver.run();\n\n\t\t\tSystem.out.println(new Date() + \"Sleeping for 20 \nseconds after seconds rendering, check IO read bytes now...\");\n\t\t\tThread.sleep(20000);\n\n\n\t\t} catch (Exception e) {\n\t\t\te.printStackTrace();\n\t\t}\n\n\t}\n\n}"}, {"count": 1, "tags": [], "bug_id": 29632, "attachment_id": null, "text": "resetting severity from major to normal pending further review", "id": 157267, "time": "2012-04-07T01:37:09Z", "creator": "gadams@apache.org", "creation_time": "2012-04-07T01:37:09Z", "is_private": false}]