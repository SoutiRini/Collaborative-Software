[{"count": 0, "tags": [], "bug_id": 47603, "text": "Hi, \n\nFor 50% of time, I am getting the exception or something similar when I run 1000 threads to hit some server url.  \n\nThis is the exception stack:\n\n<httpSample t=\"1002\" s=\"false\" rc=\"Non HTTP response code: java.net.ConnectException\" rm=\"Non HTTP response message: Connection refused: connect\" tn=\"getAllCategoryGroup 1-508\" sc=\"1\" ec=\"1\" ng=\"115\" na=\"115\">\n  <responseData class=\"java.lang.String\">java.net.ConnectException: Connection refused: connect&#xd;\n\tat java.net.PlainSocketImpl.socketConnect(Native Method)&#xd;\n\tat java.net.PlainSocketImpl.doConnect(Unknown Source)&#xd;\n\tat java.net.PlainSocketImpl.connectToAddress(Unknown Source)&#xd;\n\tat java.net.PlainSocketImpl.connect(Unknown Source)&#xd;\n\tat java.net.SocksSocketImpl.connect(Unknown Source)&#xd;\n\tat java.net.Socket.connect(Unknown Source)&#xd;\n\tat java.net.Socket.connect(Unknown Source)&#xd;\n\tat sun.net.NetworkClient.doConnect(Unknown Source)&#xd;\n\tat sun.net.www.http.HttpClient.openServer(Unknown Source)&#xd;\n\tat sun.net.www.http.HttpClient.openServer(Unknown Source)&#xd;\n\tat sun.net.www.http.HttpClient.&lt;init&gt;(Unknown Source)&#xd;\n\tat sun.net.www.http.HttpClient.New(Unknown Source)&#xd;\n\tat sun.net.www.http.HttpClient.New(Unknown Source)&#xd;\n\tat sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(Unknown Source)&#xd;\n\tat sun.net.www.protocol.http.HttpURLConnection.plainConnect(Unknown Source)&#xd;\n\tat sun.net.www.protocol.http.HttpURLConnection.connect(Unknown Source)&#xd;\n\tat org.apache.jmeter.protocol.http.sampler.HTTPSampler.sample(HTTPSampler.java:490)&#xd;\n\tat org.apache.jmeter.protocol.http.sampler.HTTPSamplerBase.sample(HTTPSamplerBase.java:1037)&#xd;\n\tat org.apache.jmeter.protocol.http.sampler.HTTPSamplerBase.sample(HTTPSamplerBase.java:1023)&#xd;\n\tat org.apache.jmeter.threads.JMeterThread.process_sampler(JMeterThread.java:346)&#xd;\n\tat org.apache.jmeter.threads.JMeterThread.run(JMeterThread.java:243)&#xd;\n\tat java.lang.Thread.run(Unknown Source)&#xd;\n</responseData>\n\n\nSometimes, it is another similar exception:\n\n<httpSample t=\"36\" s=\"false\" rc=\"Non HTTP response code: java.net.BindException\" rm=\"Non HTTP response message: Address already in use: connect\" tn=\"getAllCategoryGroup 1-849\" sc=\"1\" ec=\"1\" ng=\"1000\" na=\"1000\">\n  <responseData class=\"java.lang.String\">java.net.BindException: Address already in use: connect&#xd;\n\tat java.net.PlainSocketImpl.socketConnect(Native Method)&#xd;\n\tat java.net.PlainSocketImpl.doConnect(Unknown Source)&#xd;\n\tat java.net.PlainSocketImpl.connectToAddress(Unknown Source)&#xd;\n\tat java.net.PlainSocketImpl.connect(Unknown Source)&#xd;\n\tat java.net.SocksSocketImpl.connect(Unknown Source)&#xd;\n\tat java.net.Socket.connect(Unknown Source)&#xd;\n\tat java.net.Socket.connect(Unknown Source)&#xd;\n\tat sun.net.NetworkClient.doConnect(Unknown Source)&#xd;\n\tat sun.net.www.http.HttpClient.openServer(Unknown Source)&#xd;\n\tat sun.net.www.http.HttpClient.openServer(Unknown Source)&#xd;\n\tat sun.net.www.http.HttpClient.&lt;init&gt;(Unknown Source)&#xd;\n\tat sun.net.www.http.HttpClient.New(Unknown Source)&#xd;\n\tat sun.net.www.http.HttpClient.New(Unknown Source)&#xd;\n\tat sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(Unknown Source)&#xd;\n\tat sun.net.www.protocol.http.HttpURLConnection.plainConnect(Unknown Source)&#xd;\n\tat sun.net.www.protocol.http.HttpURLConnection.connect(Unknown Source)&#xd;\n\tat org.apache.jmeter.protocol.http.sampler.HTTPSampler.sample(HTTPSampler.java:490)&#xd;\n\tat org.apache.jmeter.protocol.http.sampler.HTTPSamplerBase.sample(HTTPSamplerBase.java:1037)&#xd;\n\tat org.apache.jmeter.protocol.http.sampler.HTTPSamplerBase.sample(HTTPSamplerBase.java:1023)&#xd;\n\tat org.apache.jmeter.threads.JMeterThread.process_sampler(JMeterThread.java:346)&#xd;\n\tat org.apache.jmeter.threads.JMeterThread.run(JMeterThread.java:243)&#xd;\n\tat java.lang.Thread.run(Unknown Source)&#xd;\n</responseData>\n</httpSample>\n\n\n\nThen I check out the JMeter's code HttpSampler.java at line 490: \n\n            for (retry = 0; retry <= MAX_CONN_RETRIES; retry++) { \n                try { \n                    conn = setupConnection(url, method, res); \n                    // Attempt the connection: \n                    savedConn = conn; \n                    conn.connect();                 (======= Line 490 =====) \n                    break; \n                } catch (BindException e) { \n                    if (retry >= MAX_CONN_RETRIES) { \n                        log.error(\"Can't connect after \"+retry+\" retries, \"+e); \n                        throw e; \n                    } \n\n    protected HttpURLConnection setupConnection(URL u, String method, HTTPSampleResult res) throws IOException  { \n...} \n\n\nThe SetupConnection just open a HttpURLConnection, here is the exerpt: \n\nconn = (HttpURLConnection) url.openConnection(); \nconn.setRequestMethod(\"GET\");  //whatever the http method is \n\nThis is the very high level what setupConnection is doing.  Usually,  (by my limited java net programming knowledge...),  you are ready to get response, but instead, in the calling method at line 490, it immediately calls URLConnection.connect (out of that HttpURLConnection instance.   It is like in a short time, you are making two connection out of that socket.   After that logic, then it will eventually pull out the response logic.  Why is that? \n\nI wrote a small program to simulate late, and I also get Connection refused exception,  here is the code: \n\n\n\n\nimport java.net.HttpURLConnection; \nimport java.net.URL; \n\npublic class HttpUrlConnectionTest { \n\n        public static void main(String[] args) { \n                int total = 5000; \n                ConnectionThread[] ts  = new ConnectionThread[total]; \n                for (int i=0; i<total;i++) { \n                        ts[i] = new ConnectionThread(); \n                } \n                \n                for (int i=0; i<total; i++) { \n                        ts[i].start(); \n                } \n                \n                System.out.println(\"all threads are done...\"); \n                \n                \n        } \n        \n        \n        \n        public static class ConnectionThread extends Thread { \n                public void run() { \n                        try { \n                                URL url = new URL(\"http://localhost:8080/TestPodCast/TestPodCastServlet?test=testAllCategory\"); \n                                HttpURLConnection conn = (HttpURLConnection)url.openConnection(); \n                                conn.setRequestMethod(\"GET\"); \n                                conn.setRequestProperty(\"Connection\", \"keep-alive\"); \n                                conn.connect();    // With this line, I am getting that Connection Refused exception.  Without this line, the request went ok. \n\n                        } catch (Exception ex) { \n                                ex.printStackTrace(); \n                        } \n                        \n                } \n        } \n} \n\n\nBTW, my URL just return almost no http body at all.  It just simply process a request.  \n\nThe thread group I was using for jmeter is 1000 concurrent thread.  Each do around 20 - 200 loops.\n\nCan someone let me know if this is truely the jmeter source problem, please do explain why the second connect method call is necessary. \n\n\nThanks. \n\n\n\nShaoxian Yang", "id": 129254, "time": "2009-07-29T13:51:26Z", "creator": "ysxsusan@hotmail.com", "creation_time": "2009-07-29T13:51:26Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "creator": "sebb@apache.org", "attachment_id": null, "id": 129258, "time": "2009-07-29T14:52:20Z", "bug_id": 47603, "creation_time": "2009-07-29T14:52:20Z", "is_private": false, "text": "This is not a JMeter bug.\n\nThe process is running out of resources; reduce the number of threads or increase the number of sockets available on the host.\n\nPlease follow up on the JMeter user list."}]