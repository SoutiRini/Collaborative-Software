[{"count": 0, "tags": [], "creator": "rbowen@apache.org", "text": "httpd -DDUMP_CONFIG gets you a dump of the configuration, but starts up the server. It would be handy to be able to extract certain values from the configuration without starting a server process. For example, it would be useful to be able to determine the configured value of User and Group before starting the server.\n\nContext: The Debian/Ubuntu package of httpd has a modified version of apachectl, specifically so that it can know the value of User ahead of time, in order that certain runtime directories can be created.\n\nFrom IRC:\n\n<daemonkeeper> DrBacchus: Thing is we need a reliable way to know the apache user/group in the init script to create volatile directories (e.g. /var/run/apache2) at boot time. There is no sane way to get that information without starting the server.", "id": 170621, "time": "2013-10-15T17:43:51Z", "bug_id": 55654, "creation_time": "2013-10-15T17:43:51Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "creator": "arno@debian.org", "is_private": false, "text": "For context, to fully understand the problem:\n\nDebian/Ubuntu packages set - for example - the httpd user in its httpd.conf to ${APACHE_RUN_USER}, a non-terminal value which is interpreted and evaluated at runtime by apachectl with information sourced from /etc/apache2/envvars. \n\nThe downside of that is, that you cannot start apache simply by executing \"httpd start\" (or \"apache2 start\" effectively on Debianish systems), but you have to use apachectl and you have an additional layer of indirection.\n\nThe background is, that we need reliably to know what the user is set to, so that, for example, we can create volatile directories at boot/start time BEFORE apache starts. Now, you know yourself how many funny ways are define a configuration key in Apache to the server context. For example, think of keys learned through inclusion of third files etc. \n\nIt's just not reliable to simply parse the main httpd.conf file without having access to the full httpd configuration file parser engine. That's why we did it the way we did by adding that layer of indirection.", "id": 170622, "time": "2013-10-15T17:53:25Z", "bug_id": 55654, "creation_time": "2013-10-15T17:53:25Z", "attachment_id": null}]