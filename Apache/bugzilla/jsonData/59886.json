[{"attachment_id": null, "tags": [], "creator": "calestyo@scientia.net", "is_private": false, "count": 0, "id": 192532, "time": "2016-07-19T16:00:23Z", "bug_id": 59886, "creation_time": "2016-07-19T16:00:23Z", "text": "Hey.\n\nIn the wake of httpoxy[0] shouldn't suexec also block the problematic HTTP_ env vars from being passed on?\n\nRight now it seems that anything starting with HTTP_ or SSL_ is passed through which doesn't seem particularly trustworthy at a first glance.\n\nCheers,\nChris.\n\n\n[0] https://httpoxy.org/"}, {"count": 1, "tags": [], "bug_id": 59886, "attachment_id": null, "is_private": false, "id": 192534, "time": "2016-07-19T17:35:00Z", "creator": "covener@gmail.com", "creation_time": "2016-07-19T17:35:00Z", "text": "It's designed to run CGI scripts, and CGI scripts have expect headers communicated this way -- so I am not seeing a good case to strip them in them in suexec. Leaving PR open for other opinions."}, {"count": 2, "text": "Well, AFAIU, you're anyway going to block at least the Proxy header in httpd completely, now, aren't you?\n\n1) has anyone checked whether such naming collisions occur on other HTTP_* names (which suexec would let pass all)?\n\n2) Could it be that people use suexec (i.e. the binary) outside of Apache (e.g. behind some other webserver) and would thus benefit from blocking the env_var at that level as well?\n\n\nCheers,\nChris.", "bug_id": 59886, "is_private": false, "id": 192536, "time": "2016-07-19T18:09:34Z", "creator": "calestyo@scientia.net", "creation_time": "2016-07-19T18:09:34Z", "tags": [], "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 59886, "is_private": false, "text": "\n(In reply to Christoph Anton Mitterer from comment #2)\n> Well, AFAIU, you're anyway going to block at least the Proxy header in httpd\n> completely, now, aren't you?\n\nThe proposed change for httpd is to not copy this specific header into the child processes environment with the HTTP_ prefix. \n\n> 1) has anyone checked whether such naming collisions occur on other HTTP_*\n> names (which suexec would let pass all)?\n\nI haven't seen any findings in that area.\n\n> \n> 2) Could it be that people use suexec (i.e. the binary) outside of Apache\n> (e.g. behind some other webserver) and would thus benefit from blocking the\n> env_var at that level as well?\n\nIt's possible, and it's possible they'd benefit from removing HTTP_PROXY in suexec. If we removed more variables, it's possible they'd be adversely affected. \n\nI'd be +0.5 on removing just HTTP_PROXY from suexec. This already happens on trunk and is just a partial backport.", "id": 192537, "time": "2016-07-19T18:49:05Z", "creator": "covener@gmail.com", "creation_time": "2016-07-19T18:49:05Z", "attachment_id": null}, {"count": 4, "tags": [], "text": "That was basically my thought\u2026  if it's probably anyway going to be removed from the httpd itself (I mean the Proxy header) then the only other way it could make it to suexec would be by some SetEnv or so\u2026 not sure if anything requires this, but I'd be tempted to say that such programs should anyway rather use proper config files ;)", "is_private": false, "id": 192539, "creator": "calestyo@scientia.net", "time": "2016-07-19T21:33:21Z", "bug_id": 59886, "creation_time": "2016-07-19T21:33:21Z", "attachment_id": null}, {"count": 5, "tags": [], "creator": "calestyo@scientia.net", "text": "Hmm I just re-thought the whole thing...\n\nIsn't the problem below httpoxy actually \"much\" bigger, at least in principle?\n\nWho says that there aren't any further scripts out there (which are run from webservers, which export HTTP_<header> vars), which make use of such names?\nHTTP_* is pretty generic and by no means anything one would need to assume that \"belongs\" to CGI, or to webserver-set variables that aren't to be trusted.\n\nThere could be a HTTP_MODE variable which takes e.g. \"plain\" or \"ssl\" and causes the program in question to make further connections plain (and possibly insecure) when the attacker can overwrite it with an Header.\n\n\nNot sure if this breaks many scripts, but it rather seems to me, as if webservers should per default not export *any* untrusted HTTP request headers as envvars, at least as long as this doesn't happen below a sufficiently obvious namespace (e.g. SET_BY_WEBSERVER_AND_INSECURE_<header name> or so ;-) ...\n\n\nWhat do you think?", "id": 192541, "time": "2016-07-20T04:11:40Z", "bug_id": 59886, "creation_time": "2016-07-20T04:11:40Z", "is_private": false, "attachment_id": null}, {"count": 6, "tags": [], "creator": "covener@gmail.com", "attachment_id": null, "text": "(In reply to Christoph Anton Mitterer from comment #5)\n> Hmm I just re-thought the whole thing...\n> \n> Isn't the problem below httpoxy actually \"much\" bigger, at least in\n> principle?\n> \n> Who says that there aren't any further scripts out there (which are run from\n> webservers, which export HTTP_<header> vars), which make use of such names?\n> HTTP_* is pretty generic and by no means anything one would need to assume\n> that \"belongs\" to CGI, or to webserver-set variables that aren't to be\n> trusted.\n> \n> There could be a HTTP_MODE variable which takes e.g. \"plain\" or \"ssl\" and\n> causes the program in question to make further connections plain (and\n> possibly insecure) when the attacker can overwrite it with an Header.\n> \n> \n> Not sure if this breaks many scripts, but it rather seems to me, as if\n> webservers should per default not export *any* untrusted HTTP request\n> headers as envvars, at least as long as this doesn't happen below a\n> sufficiently obvious namespace (e.g. SET_BY_WEBSERVER_AND_INSECURE_<header\n> name> or so ;-) ...\n> \n> \n> What do you think?\n\nI don't agree, maybe someone else will. Better odds if you take it to a mailing list as an improvement rather than further complicate this report.", "id": 192542, "time": "2016-07-20T04:48:46Z", "bug_id": 59886, "creation_time": "2016-07-20T04:48:46Z", "is_private": false}]