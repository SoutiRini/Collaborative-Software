[{"count": 0, "tags": [], "creator": "bhaje@gmx.de", "attachment_id": null, "is_private": false, "id": 112435, "time": "2008-01-02T03:53:43Z", "bug_id": 44160, "creation_time": "2008-01-02T03:53:43Z", "text": "Hi,\n\nI create a FO-file from a pretty large docbook-xml (60 pages so far)\nwith saxon (or xslt - doesn't matter) whith the docbook-xsl-1.71.1\nstylesheets.\nAfter that I use fop to convert it to pdf. I used 0.94 and the svn trunk\nversion - with both I occasionally run into the error below.\n\nI was able to track the error down to the attached file\n(http://www.nabble.com/file/p14488145/tmp_sip.xml.fo).\nI tried to delete as much content as possible. If I delete any further paragraph\nof the text, the error doesn't occur any more. Also if I set hyphenation to true\nin my stylesheet, the error goes away.\n\nI tried it with fop 0.94 and trunk with the same result. For some reason fop\n0.92 doesn't show the error with that file, although it did before with other files.\nI hope that helps somehow to find the error.\n\nthanks Bjoern\n \n\n> 13.12.2007 13:27:30 org.apache.fop.cli.Main startFOP\n> SCHWERWIEGEND: Exception\n> java.lang.IndexOutOfBoundsException: Index: 4, Size: 1\n>         at org.apache.fop.cli.InputHandler.transformTo(InputHandler.java:168)\n>         at org.apache.fop.cli.InputHandler.renderTo(InputHandler.java:115)\n>         at org.apache.fop.cli.Main.startFOP(Main.java:166)\n>         at org.apache.fop.cli.Main.main(Main.java:197)\n>\n> ---------\n>\n> java.lang.IndexOutOfBoundsException: Index: 4, Size: 1\n>         at java.util.ArrayList.RangeCheck(ArrayList.java:546)\n>         at java.util.ArrayList.get(ArrayList.java:321)\n>         at\norg.apache.fop.layoutmgr.PageBreakingAlgorithm.computeDemerits(PageBreakingAlgorithm.java:644)\n>         at\norg.apache.fop.layoutmgr.BreakingAlgorithm.considerLegalBreak(BreakingAlgorithm.java:737)\n>         at\norg.apache.fop.layoutmgr.PageBreakingAlgorithm.considerLegalBreak(PageBreakingAlgorithm.java:309)\n>         at\norg.apache.fop.layoutmgr.BreakingAlgorithm.findBreakingPoints(BreakingAlgorithm.java:485)\n>         at\norg.apache.fop.layoutmgr.BreakingAlgorithm.findBreakingPoints(BreakingAlgorithm.java:403)\n>         at\norg.apache.fop.layoutmgr.AbstractBreaker.doLayout(AbstractBreaker.java:338)\n>         at\norg.apache.fop.layoutmgr.AbstractBreaker.doLayout(AbstractBreaker.java:263)\n>         at\norg.apache.fop.layoutmgr.PageSequenceLayoutManager.activateLayout(PageSequenceLayoutManager.java:144)\n>         at\norg.apache.fop.area.AreaTreeHandler.endPageSequence(AreaTreeHandler.java:233)\n>         at\norg.apache.fop.fo.pagination.PageSequence.endOfNode(PageSequence.java:145)\n>         at\norg.apache.fop.fo.FOTreeBuilder$MainFOHandler.endElement(FOTreeBuilder.java:378)\n>         at org.apache.fop.fo.FOTreeBuilder.endElement(FOTreeBuilder.java:194)\n>         at\norg.apache.xalan.transformer.TransformerIdentityImpl.endElement(TransformerIdentityImpl.java:1101)\n>         at org.apache.xerces.parsers.AbstractSAXParser.endElement(Unknown Source)\n>         at\norg.apache.xerces.impl.XMLNSDocumentScannerImpl.scanEndElement(Unknown Source)\n>         at\norg.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher.dispatch(Unknown\nSource)\n>         at\norg.apache.xerces.impl.XMLDocumentFragmentScannerImpl.scanDocument(Unknown Source)\n>         at org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)\n>         at org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)\n>         at org.apache.xerces.parsers.XMLParser.parse(Unknown Source)\n>         at org.apache.xerces.parsers.AbstractSAXParser.parse(Unknown Source)\n>         at\norg.apache.xalan.transformer.TransformerIdentityImpl.transform(TransformerIdentityImpl.java:484)\n>         at org.apache.fop.cli.InputHandler.transformTo(InputHandler.java:165)\n>         at org.apache.fop.cli.InputHandler.renderTo(InputHandler.java:115)\n>         at org.apache.fop.cli.Main.startFOP(Main.java:166)\n>         at org.apache.fop.cli.Main.main(Main.java:197)"}, {"count": 1, "tags": [], "bug_id": 44160, "text": "Created attachment 21337\nTest file which causes the error", "id": 112436, "time": "2008-01-02T03:55:43Z", "creator": "bhaje@gmx.de", "creation_time": "2008-01-02T03:55:43Z", "is_private": false, "attachment_id": 21337}, {"count": 2, "tags": [], "creator": "jeremias@apache.org", "attachment_id": null, "is_private": false, "id": 113051, "time": "2008-01-22T06:05:53Z", "bug_id": 44160, "creation_time": "2008-01-22T06:05:53Z", "text": "Cheap fix applied: http://svn.apache.org/viewvc?rev=614201&view=rev\n\nNot sure if it was the right thing to do but it didn't break anything but I\nhaven't been able to come up with a scaled-down regression test, either. So I'll\nleave this open for now as a reminder. The whole thing has to do with footnotes.\nNote that the error cannot be reproduced if the test file here is pretty-printed."}, {"count": 3, "tags": [], "text": "\nAdding the comment here, since it was being referred to in the code:\nIf I judge correctly, a more proper fix entails a change in PageBreakingAlgorithm.resetFootnotes(). Right now, it only alters the footnotesList and lengthList, but not the accompanying indices. That is only done in computeDifference(). \nAs such, it seems understandable that at some point, situations will arise where they are out of synch, and footnotesListIndex points to an element that was already removed.", "is_private": false, "id": 146825, "creator": "adelmelle@apache.org", "time": "2011-06-02T19:40:50Z", "bug_id": 44160, "creation_time": "2011-06-02T19:40:50Z", "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 44160, "attachment_id": null, "id": 157201, "time": "2012-04-04T23:26:56Z", "creator": "gadams@apache.org", "creation_time": "2012-04-04T23:26:56Z", "is_private": false, "text": "unable to reproduce in trunk; marking fixed per JM comments below"}]