[{"count": 0, "tags": [], "bug_id": 29640, "attachment_id": null, "id": 59416, "time": "2004-06-17T14:10:04Z", "creator": "burgoyne@keenuh.com", "creation_time": "2004-06-17T14:10:04Z", "is_private": false, "text": "I'm working on some changes to modules that increase performance \ncharacteristics by using sorted arrays to allow for binary searches. I have \ncerated a function for generically sorting array elements. This should be added \nalloc.c as that seems the logical place to add it in.\n\nFollowing is the diff for alloc.c from version 1.3.26. As this is an entirely \nnew function it is rather easy to add to any 1.3.X version of Apache :\n\n1239,1285d1238\n< API_EXPORT(void) ap_array_sort(array_header *arr, \n<                                int (*item_compare_callback)(void*, void*))\n< {\n<     int i = 0;\n<     char *tempory_element = ap_palloc(arr->pool, arr->elt_size);\n< \n<     /* If there are less than 2 elements, it is already sorted */\n< \n<     if (arr->nelts < 2) {\n<         return;\n<     }\n< \n< \n<     /* Do a simple bubble sort. Not the most efficient,\n<        but this should only happen once. */\n< \n<     for (;i < arr->nelts;i++) {\n<         int j = 0;\n<         int was_there_a_switch = 0;\n< \n<         for (;j < arr->nelts - 1;j++) {\n< \n<             if ((*item_compare_callback)(\n<                           (void*)(arr->elts + (j * arr->elt_size)), \n<                           (void*)(arr->elts + ((j + 1)* arr->elt_size)))) {\n< \n<                 memcpy(tempory_element, arr->elts + (j * arr->elt_size),\n<                        arr->elt_size);\n<                 memcpy(arr->elts + (j * arr->elt_size),\n<                        arr->elts + ((j + 1) * arr->elt_size), arr->elt_size);\n<                 memcpy(arr->elts + ((j + 1) * arr->elt_size),\n<                        tempory_element, arr->elt_size);\n<                 was_there_a_switch = 1;\n<             }\n<         }\n< \n<         /* If nothing was changed then the sort is now complete  */\n< \n<         if (was_there_a_switch == 0) {\n<             i = arr->nelts;\n<         }\n<     }\n<     return;\n< }"}, {"count": 1, "tags": [], "creator": "jorton@redhat.com", "is_private": false, "text": "Why not just qsort(arr->elts, arr->nelts, arr->elt_size, callback) the array?", "id": 59417, "time": "2004-06-17T14:22:57Z", "bug_id": 29640, "creation_time": "2004-06-17T14:22:57Z", "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 29640, "attachment_id": null, "is_private": false, "id": 59466, "time": "2004-06-18T09:13:26Z", "creator": "burgoyne@keenuh.com", "creation_time": "2004-06-18T09:13:26Z", "text": "Thanks Joe. I was not aware of that function in C. The bsearch function also \nlooks like it can replace some part of the functionality I added to mod_alias. \nI'll close this one and rework mod_alias a bit for that change."}]