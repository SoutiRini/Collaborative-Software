[{"count": 0, "tags": [], "bug_id": 35781, "attachment_id": null, "text": "When using ap_sub_req_method_uri() to perform a subrequest, it skips over all stages straight to the \nType Handler phase.  This skips over any access/authentication/authorization handlers that have been \ndefined, and allows the type/response phases to be executed directly -- when in fact the client may not \nbe permitted by Limit security settings.\n\nIn my particular setup, I allow GET/HEAD/POST/OPTIONS to all users; but I limit PUT/DELETE to specific \nusers.  I have a piece of code that executes when a POST (that contains specific instructions) is recieved, \nthat performs a subrequest on the current URI as a PUT/DELETE.   In effect, I am tunneling PUT/DELETE \nover POST, something that allows me to have a uniform interface for all clients, while still allowing \nnormal behaviour for web browser clients that are limited to GET/POST method calls only.\n\nThe behaviour I expected was for the security limits I set up for PUT/DELETE to be honored, and \ndisallow the request should something in the AAA stages not pass; however the use of \nap_run_quick_handler() at the end of ap_sub_req_method_uri() bypasses all of these handlers.", "id": 77395, "time": "2005-07-18T18:58:54Z", "creator": "dan.kubb-apache@onautopilot.com", "creation_time": "2005-07-18T18:58:54Z", "is_private": false}]