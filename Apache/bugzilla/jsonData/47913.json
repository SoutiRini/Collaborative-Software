[{"count": 0, "tags": [], "creator": "opldupuy@gmail.com", "is_private": false, "text": "Hello,\n\nNot fond in the existing bugs or RFE.\n\nI try to solve the following problem. We have some hundreds of unit tests running. It happens that one of them takes a lot of time to run or is blocked. In an IDE like Eclipse, I can see which test is running in the Junit window.\nWhen I run the tests through the Junit task of Ant, I cannot. I have to wait for the test report.\n\nJunit provides a way to add one or more RunListener instances (http://junit.sourceforge.net/javadoc_40/org/junit/runner/notification/RunListener.html) to a JunitCore object. The Junit RunNotifier class allows also to add some notifiers.\nThe problem is that I do not have any hook to do this at all while the runner used by Ant has normally access to these classes. I even suppose that it already takes advantage of them.\n\nWhat I suggest is to add to the Junit task an optional attribute, which would be a comma delimited list of listener FQN (or if you prefer a single one a one could call others).\ne.g.\n<junit runlistener=\"com.acme.MyListener\">\n  ...\n</junit>\n\nWith this I am free to do anything that I want, report a progress in one or many log files, timing my tests, detect a problem and link it to a precise test...\n\nThanks\n\nOlivier", "id": 130728, "time": "2009-09-28T14:31:58Z", "bug_id": 47913, "creation_time": "2009-09-28T14:31:58Z", "attachment_id": null}, {"count": 1, "attachment_id": null, "bug_id": 47913, "text": "...and with the FQN avaialble, the Junit runner can create an instance of it and add it after the other listeners. It should to the trick.\n\nOlivier", "id": 130729, "time": "2009-09-28T14:34:19Z", "creator": "opldupuy@gmail.com", "creation_time": "2009-09-28T14:34:19Z", "tags": [], "is_private": false}, {"count": 2, "attachment_id": null, "bug_id": 47913, "text": "Could you please elaborate what is not feasible using the current options,\nmost notably the formatter element?", "id": 130779, "time": "2009-10-01T12:05:16Z", "creator": "jkf@apache.org", "creation_time": "2009-10-01T12:05:16Z", "tags": [], "is_private": false}, {"count": 3, "tags": [], "creator": "opldupuy@gmail.com", "is_private": false, "text": "Hello,\n\nI still want the output to be sent to the XML formatter as now.\nI just want some additional behavior. I suppose that the plain formatter could give some details but I do not want to run the unit tests twice, it takes already long enough.\n\nI just want some information during the tests that I can log where I want. Multiple RunListeners can be used. I guess that you already use one of them for your formatter. I just to want the option to add mine to the one of the formatter.\n\nThe other option I now think of is to extend/decorate the XML formatter. This could be fine but if I need to change to a different formatter for any reason, I need to redo my work. The listener solution would be more flexible I think.  \n\nThanks\n\nOlivier", "id": 130990, "time": "2009-10-08T09:50:48Z", "bug_id": 47913, "creation_time": "2009-10-08T09:50:48Z", "attachment_id": null}, {"count": 4, "tags": [], "creator": "bodewig@apache.org", "is_private": false, "text": "Olivier, do you realize that you can add more than one formatter element to the junit task and thus can add more than one formatter during a single test run?\n\nAnd then formatter supports a classname attribute that you can use to attach any class that implements the JUnitResultFormatter interface (an extension of junit-framework.TestListener) to the running tests.", "id": 131020, "time": "2009-10-09T01:07:59Z", "bug_id": 47913, "creation_time": "2009-10-09T01:07:59Z", "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 47913, "attachment_id": null, "is_private": false, "id": 131271, "time": "2009-10-21T11:54:36Z", "creator": "bodewig@apache.org", "creation_time": "2009-10-21T11:54:36Z", "text": "It really seems as if all the functionality you are asking for is already there (use multiple formatters).  What is missing?"}, {"count": 6, "attachment_id": null, "bug_id": 47913, "text": "Hi Stefan,\n\nI have just tested according to your suggestion, creating a class extending BriefJUnitResultFormatter and decorating it to log the test being started or other then putting it in a jar file added to the classpath.\nIt works perfectly, I can now see the progress of the tests.\n\nThanks a lot, I had not realized from the documentation that multiple formatters could be used.\nI close the request\nOlivier", "id": 131278, "time": "2009-10-21T13:56:13Z", "creator": "opldupuy@gmail.com", "creation_time": "2009-10-21T13:56:13Z", "tags": [], "is_private": false}]