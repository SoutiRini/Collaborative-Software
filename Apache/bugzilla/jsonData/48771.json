[{"count": 0, "tags": [], "bug_id": 48771, "attachment_id": 25020, "id": 134673, "time": "2010-02-18T19:55:23Z", "creator": "jec@gatekeeper.com", "creation_time": "2010-02-18T19:55:23Z", "is_private": false, "text": "Created attachment 25020\nExposes an exit method in CleanerThread\n\norg.apache.batik.util.CleanerThread does not self-terminate, nor is there a way to dispose of it programatically. When using Batik within a webapp, this prevents the webapp's classloader from being garbage collected, eventually causing PermGen: Out of Memory errors after several webapp redeploys. CleanerThread should expose some method that allows for it to be terminated.\n\nPatch attached which follows the same solution used in geotools package [https://fisheye.codehaus.org/browse/GEOT-2742]"}, {"count": 1, "tags": [], "creator": "helder.magalhaes@gmail.com", "attachment_id": null, "text": "Thanks for taking the time to investigate/share the patch, Joel! :-)\n\nWithout testing it, I think it would be interesting to mention that there was some discussion about this in the mailing list prior to this bug report being created. I've added a link to in as the issue's URL. ;-)\n\nI'm also adding metadata to reflect that a patch was made available.\n\nShould/can this be related to bug 44178? At least, one may be interested in reviewing both issues together... :-)\n\n\nA (somehow) quick review of the patch, mostly with cosmetic nits, follows.\n\n\n> +    public static final CleanerThread  THREAD = new CleanerThread();\n\nDouble space before \"THREAD\".\n\n\n> +        queue = new ReferenceQueue<Object>();\n\nWe're not using generics yet, as Batik still targets Java 1.4 compatibility AFAIK (see bug 46434). Could this be reworked?\n\n\n> +    \tReferenceQueue<Object> rq;\n\nTab character here. Indentation is made using 4 spaces within the framework.\n\n\n> +        } catch (InterruptedException e) {\n> +\n> +        }\n\nI'd say that either insert a comment, stating why the exception is ignored (if it matters), or get rid of the extraneous line.", "id": 134684, "time": "2010-02-19T07:23:10Z", "bug_id": 48771, "creation_time": "2010-02-19T07:23:10Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 48771, "attachment_id": 25025, "text": "Created attachment 25025\nPatch updated to conform to style guidelines", "id": 134704, "time": "2010-02-19T16:59:57Z", "creator": "jec@gatekeeper.com", "creation_time": "2010-02-19T16:59:57Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 48771, "text": "I would claim that the proposed patch also solves the race condition described in 44178", "id": 134705, "time": "2010-02-19T17:01:34Z", "creator": "jec@gatekeeper.com", "creation_time": "2010-02-19T17:01:34Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 48771, "attachment_id": null, "id": 134709, "time": "2010-02-19T21:45:42Z", "creator": "helder.magalhaes@gmail.com", "creation_time": "2010-02-19T21:45:42Z", "is_private": false, "text": "(In reply to comment #2)\n> Created an attachment (id=25025) [details]\n> Patch updated to conform to style guidelines\n\nI've taken a peek and it looks good, thanks. :-)\n\n\n(In reply to comment #3)\n> I would claim that the proposed patch also solves the race condition described\n> in 44178\n\nGreat! ;-) This appears to be quite safe and potentially fixes a couple issues. Still, I'd ask for a third opinion/deeper review by a more elder committer (Thomas? Cameron? Dieter?)"}, {"count": 5, "tags": [], "creator": "kgo1177@abv.bg", "text": "Hi everybody,\n\nAny chance that the proposed (or a similar) solution would become part of an official release any time soon? We use Batik quite a bit in a web app to export SVG and derived formats and are currently trying to get rid of a lot of memory leaks, so that we don't have to restart Tomcat regularly...\n\nCheers,", "id": 147916, "time": "2011-07-14T15:13:48Z", "bug_id": 48771, "creation_time": "2011-07-14T15:13:48Z", "is_private": false, "attachment_id": null}]