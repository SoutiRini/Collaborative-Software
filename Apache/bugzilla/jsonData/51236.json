[{"count": 0, "tags": [], "bug_id": 51236, "attachment_id": 27044, "text": "Created attachment 27044\nJava code to show that Font colors are incorrect for black and white\n\nI am using POI 3.8 beta 2 to create cells with black and white font colors using RGB values.\n\nThe RGB value for white color should be FFFFFF and for black should be 000000. \n\nHowever, in the Excel file that was created, Font colors were reversed for black and white. The RGB values from the Font Color icon are reversed.\n\n\nAttached is the source code to reproduce this issue.\n\n\npackage org.apache.poi.ss.examples;\n\nimport org.apache.poi.ss.usermodel.*;\nimport org.apache.poi.xssf.usermodel.XSSFColor;\nimport org.apache.poi.xssf.usermodel.XSSFWorkbook;\nimport org.apache.poi.xssf.usermodel.XSSFFont;\n\nimport java.io.FileOutputStream;\n\npublic class TestFontColor {\n\tprotected static XSSFColor getXSSFColor(String RGB) {\n\n\t\tint red = Integer.parseInt(RGB.substring(0,2), 16);\n\t\tint green = Integer.parseInt(RGB.substring(2,4), 16);\n\t\tint blue = Integer.parseInt(RGB.substring(4,6), 16);\n\t\t\t\t   \n\t\treturn new XSSFColor(new byte[] { (byte) red, (byte) green, (byte) blue });\n\t}\n\n    public static void main(String[] args) throws Exception {\n        Workbook wb = new XSSFWorkbook();  //or new HSSFWorkbook();\n        Sheet sheet = wb.createSheet(\"Fonts\");\n\n        Font font0 = wb.createFont();\n        Font font1 = wb.createFont();\n        \n        XSSFColor color_white = getXSSFColor(\"FFFFFF\");\n        XSSFColor color_black = getXSSFColor(\"000000\");\n        \n        ((XSSFFont) font0).setColor(color_white); //FFFFFF returns black\n        ((XSSFFont) font1).setColor(color_black); //000000 returns white\n        \n        CellStyle style0 = wb.createCellStyle();\n        CellStyle style1 = wb.createCellStyle();\n        style0.setFont(font0);\n        style1.setFont(font1);\n\n        Cell cell0 = sheet.createRow(0).createCell(0);\n        cell0.setCellValue(\"FFFFFF\");\n        cell0.setCellStyle(style0);\n\n        Cell cell1 = sheet.createRow(1).createCell(0);\n        cell1.setCellValue(\"000000\");\n        cell1.setCellStyle(style1);\n\n        // Write the output to a file\n        FileOutputStream fileOut = new FileOutputStream(\"C:\\\\workspace\\\\TestFontColor.xlsx\");\n        wb.write(fileOut);\n        fileOut.close();\n    }\n}", "id": 146501, "time": "2011-05-20T22:01:33Z", "creator": "jxz164@hotmail.com", "creation_time": "2011-05-20T22:01:33Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 51236, "text": "I seem to recall that Excel does something special with XSSF font colours and black/white\n\nIf you set the colour in POI, and read it back, do you get the right one or the wrong one?\n\n(I've a feeling that we just need to replicate the black/white switch in the read logic at write time, but need to check)", "id": 146539, "time": "2011-05-23T09:41:10Z", "creator": "apache@gagravarr.org", "creation_time": "2011-05-23T09:41:10Z", "is_private": false, "attachment_id": null}, {"count": 2, "text": "If I read the color back, I will get the same RGB value as what I set. For example, if I set the RGB value to FFFFFF, I will also get the RGB value FFFFFF when reading it back. But the problem is FFFFFF which supposes to mean white actually gets black in Font color. \n\nIs this the special thing about XSSF Color of black/white? Do you think this is not a POI bug?", "creator": "jxz164@hotmail.com", "attachment_id": null, "id": 146550, "time": "2011-05-23T14:52:11Z", "bug_id": 51236, "creation_time": "2011-05-23T14:52:11Z", "tags": [], "is_private": false}, {"count": 3, "tags": [], "bug_id": 51236, "is_private": false, "text": "I have looked at the styles.xml and confirmed that the color value in the styles.xml \n\n<color rgb=\"000000\"/>\n\nwhen RGB value is set to \"FFFFFF\" as the input in the java code.\n\nBut when I read it back, it returns \"FFFFFF\" instead of \"000000\". This is wrong to me.", "id": 146560, "time": "2011-05-23T19:41:35Z", "creator": "jxz164@hotmail.com", "creation_time": "2011-05-23T19:41:35Z", "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 51236, "text": "When you create a file in excel with a black cell, and look at the xml, is it not the wrong way round? That's what there's specific code for in POI already", "id": 146562, "time": "2011-05-23T19:44:52Z", "creator": "apache@gagravarr.org", "creation_time": "2011-05-23T19:44:52Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "creator": "apache@gagravarr.org", "attachment_id": null, "is_private": false, "id": 146564, "time": "2011-05-23T19:54:48Z", "bug_id": 51236, "creation_time": "2011-05-23T19:54:48Z", "text": "I've done the matching black/white fix on set as well as get in r1126696, does that solve it?"}, {"count": 6, "tags": [], "creator": "jxz164@hotmail.com", "attachment_id": 27053, "is_private": false, "id": 146600, "time": "2011-05-24T19:30:56Z", "bug_id": 51236, "creation_time": "2011-05-24T19:30:56Z", "text": "Created attachment 27053\nTwo xlsx files to check the bug\n\nI am not sure whether your new check in will fix the underlying problem. Please test the following two Excel files.\n\n(1) The first one is TestFontColor.xlsx which is created from the POI library directly.\n(2) The second one is TestFontColorModified.xlsx which is modified from TestFontColor.xlsx in Excel by adding a new row.\n\nWhen I read the Font Colors of these two files, I found that the results are not consistent for the first two rows."}, {"count": 7, "tags": [], "bug_id": 51236, "is_private": false, "text": "Could you please retry with the recent change and see if it did help? If not, please re-do your files so we can take a look knowing they're from the latest code", "id": 146632, "time": "2011-05-25T15:24:48Z", "creator": "apache@gagravarr.org", "creation_time": "2011-05-25T15:24:48Z", "attachment_id": null}, {"count": 8, "tags": [], "creator": "jxz164@hotmail.com", "text": "Your recent changes of correctRGB to reverse black and white are for rgb.length = 3. In my code, I have worked around it by adding alpha value. Please see my code attached.\n\nNow the problem is when reading the xlsx file created back, the color is wrong.\n\npackage org.apache.poi.ss.examples;\n\nimport org.apache.poi.ss.usermodel.*;\nimport org.apache.poi.xssf.usermodel.XSSFColor;\nimport org.apache.poi.xssf.usermodel.XSSFWorkbook;\nimport org.apache.poi.xssf.usermodel.XSSFFont;\n\nimport java.io.FileOutputStream;\n\npublic class TestFontColor {\n\tprotected static XSSFColor getXSSFColor(String RGB) {\n\n\t\tint red = Integer.parseInt(RGB.substring(0,2), 16);\n\t\tint green = Integer.parseInt(RGB.substring(2,4), 16);\n\t\tint blue = Integer.parseInt(RGB.substring(4,6), 16);\n\n\t\t //add alpha to avoid bug 51236\n\t\tbyte[] rgb = new byte[] { (byte) -1, (byte) red, (byte) green, (byte) blue };\n\t\t   \n\t\treturn new XSSFColor(rgb);\n\t}\n\n    public static void main(String[] args) throws Exception {\n        Workbook wb = new XSSFWorkbook();  //or new HSSFWorkbook();\n        Sheet sheet = wb.createSheet(\"Fonts\");\n\n        Font font0 = wb.createFont();\n        Font font1 = wb.createFont();\n        \n        XSSFColor color_white = getXSSFColor(\"FFFFFF\");\n        XSSFColor color_black = getXSSFColor(\"000000\");\n        \n        ((XSSFFont) font0).setColor(color_white); //FFFFFF returns black\n        ((XSSFFont) font1).setColor(color_black); //000000 returns white\n        \n        font0.setFontHeightInPoints((short) 18);\n        CellStyle style0 = wb.createCellStyle();\n        CellStyle style1 = wb.createCellStyle();\n        style0.setFont(font0);\n        style1.setFont(font1);\n\n        Cell cell0 = sheet.createRow(0).createCell(0);\n        cell0.setCellValue(\"FFFFFF\");\n        cell0.setCellStyle(style0);\n\n        Cell cell1 = sheet.createRow(1).createCell(0);\n        cell1.setCellValue(\"000000\");\n        cell1.setCellStyle(style1);\n\n        // Write the output to a file\n        FileOutputStream fileOut = new FileOutputStream(\"C:\\\\workspace\\\\TestFontColor.xlsx\");\n        wb.write(fileOut);\n        fileOut.close();\n    }\n}", "id": 146635, "time": "2011-05-25T15:52:04Z", "bug_id": 51236, "creation_time": "2011-05-25T15:52:04Z", "is_private": false, "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 51236, "is_private": false, "count": 9, "id": 146636, "time": "2011-05-25T15:57:02Z", "creator": "apache@gagravarr.org", "creation_time": "2011-05-25T15:57:02Z", "text": "The original bug report was that it was only wrong for 3 part colours, not 4 part colours. \n\nAre you able to create a file with excel that contains both 3 part and 4 part colours? (Themes normally have 3 part colours, manual styling is normally 4 part, but this isn't always the case...). It'd need white, black, and some other colours too. We can then be sure once and for all exactly what excel does in the various cases!"}, {"count": 10, "tags": [], "bug_id": 51236, "attachment_id": null, "id": 147070, "time": "2011-06-13T19:55:51Z", "creator": "jxz164@hotmail.com", "creation_time": "2011-06-13T19:55:51Z", "is_private": false, "text": "I am unable to create 4 part color for the Font using the POI library. For example, \n\nXSSFColor CW = new XSSFColor(new byte[] { (byte) -1, (byte) 255, (byte) 255, (byte) 255 });\n\nand set the Font Color to CW.\n\nThe generated xlsx file contains\n\n<color rgb=\"FFFFFF\"/>\n\ninstead of\n\n<color rgb=\"FFFFFFFF\"/>\n\nin the styles.xml file. The problem with this is that when you unload such color representation, you will get rgb value 000000 (which is wrong)!\n\nIf you have a way to get the 4-part color for the Font color, please let me know. \n\nHowever, such 4-color part seems to work for Foreground. Please see code attached.\n\npackage org.apache.poi.ss.examples;\n\nimport org.apache.poi.ss.usermodel.*;\nimport org.apache.poi.xssf.usermodel.XSSFCellStyle;\nimport org.apache.poi.xssf.usermodel.XSSFColor;\nimport org.apache.poi.xssf.usermodel.XSSFWorkbook;\nimport org.apache.poi.xssf.usermodel.XSSFFont;\n\nimport java.awt.Color;\nimport java.io.FileOutputStream;\nimport java.util.HashMap;\n\npublic class TestFontColor {\n\n\tprivate static HashMap createStyles(Workbook wb){\n\t\t  \n\t\tHashMap m = new HashMap();\n        XSSFColor CW = new XSSFColor(new byte[] { (byte) -1, (byte) 255, (byte) 255, (byte) 255 });\n        XSSFColor CB = new XSSFColor(new byte[] { (byte) -1, (byte) 0, (byte) 0, (byte) 0 });\n\n\t\tXSSFCellStyle styleX = (XSSFCellStyle)wb.createCellStyle(); \n\t\tXSSFFont fontX = (XSSFFont) wb.createFont();\n        fontX.setColor(CW); //do it again\n        fontX.setFontHeightInPoints((short) 29);\n        styleX.setFont(fontX);\n        styleX.setFillForegroundColor(CB);\n        styleX.setFillPattern((short) 1);\n        m.put(\"WHITE\", styleX);\n       \n        XSSFCellStyle styleY = (XSSFCellStyle) wb.createCellStyle();\n\t\tXSSFFont fontY = (XSSFFont) wb.createFont();\n        fontY.setColor(CB); //FFFFFF returns black\n        fontY.setFontHeightInPoints((short) 23);\n        styleY.setFont(fontY);\t        \n        m.put(\"BLACK\", styleY);\n\n        return m;\n\t\t  \n\t  }\n\n    public static void main(String[] args) throws Exception {\n        Workbook wb = new XSSFWorkbook();  //or new HSSFWorkbook();\n        Sheet sheet = wb.createSheet(\"Fonts\");\n\n        HashMap map = createStyles(wb);\n\n        Cell cell0 = sheet.createRow(0).createCell(0);\n        cell0.setCellValue(\"A1234567\");\n        cell0.setCellStyle((CellStyle) map.get(\"WHITE\"));\n\n        Cell cell1 = sheet.createRow(1).createCell(0);\n        cell1.setCellValue(\"B7654321\");\n        cell1.setCellStyle((CellStyle) map.get(\"BLACK\"));\n\n        // Write the output to a file\n        FileOutputStream fileOut = new FileOutputStream(\"C:\\\\workspace\\\\TestFontColor.xlsx\");\n        wb.write(fileOut);\n        fileOut.close();\n    }\n}"}, {"attachment_id": null, "tags": [], "bug_id": 51236, "text": "I've got the same problem with v3.8-beta4, if there is anything I can do to help resolve it please let me know.", "count": 11, "id": 149924, "time": "2011-09-28T19:30:48Z", "creator": "jim-apache@spudsoft.co.uk", "creation_time": "2011-09-28T19:30:48Z", "is_private": false}, {"attachment_id": null, "tags": [], "creator": "apache@gagravarr.org", "is_private": false, "count": 12, "id": 149929, "time": "2011-09-28T22:42:23Z", "bug_id": 51236, "creation_time": "2011-09-28T22:42:23Z", "text": "(In reply to comment #11)\n> I've got the same problem with v3.8-beta4, if there is anything I can do to\n> help resolve it please let me know.\n\nWe're after a file with:\n* 4 part white\n* 4 part black\n* 4 part <something else>\n* 3 part white\n* 3 part black\n* 3 part <something else>\n\nWe can then unpick that, compare how excel renders them to what one would expect, and put in suitable workarounds. (It seems that in some cases excel reverses white and black, but not all, and we need a single test file with all the cases in it to be sure what happens when)"}, {"count": 13, "tags": [], "creator": "jim-apache@spudsoft.co.uk", "attachment_id": 27629, "is_private": false, "id": 149932, "time": "2011-09-29T07:11:49Z", "bug_id": 51236, "creation_time": "2011-09-29T07:11:49Z", "text": "Created attachment 27629\nA test file showing how Excel interprets colours for fonts and backgrounds.\n\nAttachign a single file demonstrating Excel's handling of colours for fonts and backgrounds.\nThe point is that everything is correct except black/white font.\nHowever given that the background colour is generated exactly the same as the font colour something somewhere is reversing black and white for just fonts.\n\nI think what's happening is that XSSF is always swapping black and white, and Excel is not swapping them back for fonts."}, {"count": 14, "tags": [], "creator": "jim-apache@spudsoft.co.uk", "attachment_id": 27630, "id": 149933, "time": "2011-09-29T07:12:35Z", "bug_id": 51236, "creation_time": "2011-09-29T07:12:35Z", "is_private": false, "text": "Created attachment 27630\nTest file demonstrating that POI 3.7 does not have the problem.\n\nPOI 3.7 gets the black/white problem right."}, {"count": 15, "tags": [], "creator": "jim-apache@spudsoft.co.uk", "text": "Created attachment 27631\nSource file used for generating the two test files.\n\nI hope I didn't go too far overboard with the number of colours in the test files, let me know if you want a single other colour.", "id": 149934, "time": "2011-09-29T07:14:53Z", "bug_id": 51236, "creation_time": "2011-09-29T07:14:53Z", "is_private": false, "attachment_id": 27631}, {"count": 16, "tags": [], "bug_id": 51236, "is_private": false, "text": "Thanks for the test file. Looks like we're getting everything correct *except* three colour font (foreground) black/white, is that correct?", "id": 149950, "time": "2011-09-29T15:41:58Z", "creator": "apache@gagravarr.org", "creation_time": "2011-09-29T15:41:58Z", "attachment_id": null}, {"count": 17, "tags": [], "bug_id": 51236, "attachment_id": null, "text": "I think so, yes.", "id": 149953, "time": "2011-09-29T15:55:16Z", "creator": "jim-apache@spudsoft.co.uk", "creation_time": "2011-09-29T15:55:16Z", "is_private": false}, {"count": 18, "tags": [], "bug_id": 51236, "attachment_id": null, "id": 174054, "time": "2014-03-24T14:07:33Z", "creator": "yoann.rodiere@openwide.fr", "creation_time": "2014-03-24T14:07:33Z", "is_private": false, "text": "Hello,\n\nIt seems the bug is still present in 3.10-Final. I'm experiencing it in one of my projects.\n\nIt's going to be quite long, so here's a summary of the following: there are some issues with the previous patch, mainly because it wasn't focusing on the proper class, which could trigger problems with other types of colors (background, borders). I think the fix should be located in some class related to the font (XSSFFont) or to the XML tag (a new CTFontColorImpl class) instead.\n\n-- Long (but more reasoned) version\nSince it's been a while, it may be for the best to start all over again:\n\nThere is a \"bug\" (or at least inconsistency) in Microsoft Excel, which interprets font colors strangely: for colors without alpha component, the black and white are switched.\n\nA fix has been commited (by  Nick Burch, if I'm correct). This fix works fine when using the setter/getter for the RGB value. Unfortunately, only XSSF#setRgb and #getRbg methods have been fixed, and not the constructors ; which means that when you write \"new XSSFColor(Color.WHITE)\", the fix will be ineffective. That's one thing, and it explains that Jim Talbut reported that the fix didn\"t work: Jim was using the XSSFColor constructor, which wasn't fixed.\nAnother thing is, this fix directly switches black and white for ALL colors of ANY purpose. It will switch, for instance, black and white for background colors, or border colors. This is a real problem, since background colors and border colors are not affected by the bug in Microsoft Excel. So all in all, we'll have correct font colors, but incorrect background colors and border colors.\n\nThat's why I think that the fix in XSSFColor should at least be moved to XSSFFont#setColor(XSSFColor) and XSSFFont#getXSSFColor. However, it might be a bit hard to do it in such a way that clients never see the \"buggy\" (Excel-translated) color...\nMaybe it would be even more appropriate to have a CTFontColorImpl extend CTColorImpl and implement the fix. Indeed, it seems the XML color tags do not have the same meaning when dealing with borders/backgrounds as when dealing with fonts, so maybe it would make sense to define two different Java representations of the XML elements. Besides, the color switching only really matters when reading/writing the file, not when manipulating data. Of course, I don't know much about the internals of POI, and it might not be feasible..."}, {"attachment_id": null, "tags": [], "creator": "jo_desmet@yahoo.com", "is_private": false, "count": 19, "id": 174153, "time": "2014-03-27T22:15:09Z", "bug_id": 51236, "creation_time": "2014-03-27T22:15:09Z", "text": "We have switched from 3.7 (which did not show the problem) to 3.9 (20121203) that does manifest the problem. I did not test on 3.10-FINAL."}, {"count": 20, "tags": [], "bug_id": 51236, "is_private": false, "text": "This bug and bug 52079 may be related.", "id": 184749, "time": "2015-08-25T19:13:38Z", "creator": "dominik.stadler@gmx.at", "creation_time": "2015-08-25T19:13:38Z", "attachment_id": null}, {"attachment_id": null, "tags": [], "creator": "onealj@apache.org", "is_private": false, "count": 21, "id": 191733, "time": "2016-06-17T08:06:20Z", "bug_id": 51236, "creation_time": "2016-06-17T08:06:20Z", "text": "*** Bug 53274 has been marked as a duplicate of this bug. ***"}, {"count": 22, "tags": [], "creator": "yoann.rodiere@openwide.fr", "attachment_id": null, "is_private": false, "id": 192313, "time": "2016-07-12T07:25:09Z", "bug_id": 51236, "creation_time": "2016-07-12T07:25:09Z", "text": "It seems that this bug has been finally solved in r1694093, released in POI version 3.14. See #51222 for explanations, and in particular https://bz.apache.org/bugzilla/show_bug.cgi?id=51222#c6 for a thorough analysis."}, {"count": 23, "text": "\n\n*** This bug has been marked as a duplicate of bug 51222 ***", "bug_id": 51236, "is_private": false, "id": 192316, "time": "2016-07-12T07:27:27Z", "creator": "yoann.rodiere@openwide.fr", "creation_time": "2016-07-12T07:27:27Z", "tags": [], "attachment_id": null}]