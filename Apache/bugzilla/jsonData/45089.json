[{"count": 0, "tags": [], "bug_id": 45089, "attachment_id": 22025, "is_private": false, "id": 117081, "time": "2008-05-28T07:11:35Z", "creator": "mfrasca@zonnet.nl", "creation_time": "2008-05-28T07:11:35Z", "text": "Created attachment 22025\nsimple implementation of enhancement.\n\nhere at office we need running a scheduled job every so many minutes.  we are using windows and its task scheduler.  we are not guaranteed that the job will be run within a minute from the scheduled time, but we need to timestamp our files according to the desired time, not the actual time.\n\nfor this reason I thought I could use a \"granularity\" property in the tstamp core task.  for our purposes it would be enough to assume \"minutes\" as unit...\n\nthis is an example of what I mean:\n<tstamp granularity=\"15\" >\n  <format property=\"start.date\" pattern=\"yyyy-MM-dd\" timezone=\"Z\"/>\n  <format property=\"start.time\" pattern=\"HH:mm:ss\" timezone=\"Z\"/>\n</tstamp>\n\neven if Windows was so busy that it could not serve the request before - say - 15:31:26, my start.time property would still be \"15:30:00\".  in fact this value would be stored to the property until 15:44:59 (given 15 minutes granularity)...\n\nthe implementation is very easy and we already have it here...  maybe it could be useful to others, too..."}, {"count": 1, "tags": [], "bug_id": 45089, "attachment_id": null, "id": 183431, "time": "2015-06-10T13:53:19Z", "creator": "jan@materne.de", "creation_time": "2015-06-10T13:53:19Z", "is_private": false, "text": "Close after 7yrs of stillness."}]