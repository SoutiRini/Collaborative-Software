[{"count": 0, "tags": [], "bug_id": 56258, "is_private": false, "text": "When providing a messagefile and a charset, this charset is only honored for the output stream but reading that file happens in platform encoding. When I want to send a UTF-8 encoded file, this simply fails on Windows.\n\nThe problematic spot is in Message.java:\n\npublic void print(PrintStream ps)\n         throws IOException {\n        // We need character encoding aware printing here.\n        // So, using BufferedWriter over OutputStreamWriter instead of PrintStream\n        BufferedWriter out = null;\n        try {\n            out\n                = charset != null ? new BufferedWriter(new OutputStreamWriter(ps, charset))\n                : new BufferedWriter(new OutputStreamWriter(ps));\n            if (messageSource != null) {\n                // Read message from a file\n                FileReader freader = new FileReader(messageSource);\n\n                try {\n                    BufferedReader in = new BufferedReader(freader);\n                    String line = null;\n                    while ((line = in.readLine()) != null) {\n                        out.write(getProject().replaceProperties(line));\n                        out.newLine();\n                    }\n                } finally {\n                    freader.close();\n                }\n            } else {\n                out.write(getProject().replaceProperties(buffer.substring(0)));\n                out.newLine();\n            }\n            out.flush();\n        } finally {\n            //do not close the out writer as it is reused afterwards by the mail task\n        }\n    }\n\nThe FileReader must be replaced with new InputStreamReader(new FileInputStream(messageSource, charset).", "id": 173792, "time": "2014-03-13T11:27:33Z", "creator": "1983-01-06@gmx.net", "creation_time": "2014-03-13T11:27:33Z", "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 56258, "text": "I'd say this is on purpose since at least I can easily conceive situations where I want to send a text as UTF-8 but on disk it is in my platform's native encoding.\n\nI'd rather add an inputencoding attribute.", "id": 173822, "time": "2014-03-14T17:03:29Z", "creator": "bodewig@apache.org", "creation_time": "2014-03-14T17:03:29Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "creator": "bodewig@apache.org", "attachment_id": null, "text": "svn revision 1577617 contains the new attributes.", "id": 173825, "time": "2014-03-14T17:29:24Z", "bug_id": 56258, "creation_time": "2014-03-14T17:29:24Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 56258, "is_private": false, "text": "This solution is acceptable too. Thanks.", "id": 173831, "time": "2014-03-14T20:19:58Z", "creator": "1983-01-06@gmx.net", "creation_time": "2014-03-14T20:19:58Z", "attachment_id": null}]