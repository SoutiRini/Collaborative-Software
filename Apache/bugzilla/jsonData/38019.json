[{"count": 0, "tags": [], "text": "I have a particular setup where what I'd like to do is reject all requests\nthat contain a particular HTTP header (in this case, a header injected by\nhardware that means the request is coming from outside our private network).\nHere's what I thought I could do:\n\nSetEnv FOO 1\nSetEnvIf Http-X-Foo .+ !FOO\n<Directory /foo>\n    Allow from env=FOO\n</Directory>\n\nThe logic being, set FOO=1, then unset FOO if the HTTP header is present,\nand only allow access to a resource if FOO is still present.  Unfortunately,\nit seems that mod_env adds its values to r->subprocess_env during the\nfixups phase, which means that any values it sets come after those set\nby mod_setenvif, which runs during the post_read_request phase.  Also, in\nthis particular instance, it also means that it's too late for the\nauth_checker phase as well, and the request is rejected before mod_env's\nfixups handler even runs.\n\nThe attached patch simply changes mod_env to run during the post_read_request\nphase, before mod_setenvif.  This allows the logic I outlined above to\nwork nicely.\n\nNow, there may be historical reasons why this isn't desired, and it might,\nI suppose, also cause existing users' configurations to malfunction.\nStill, I'd propose it as a 2.3/2.4 change, because it does enable\nfunctionality like that I outlined above, and more generally, it makes\nsense that all of the SetEnv* and PassEnv*, etc., directives would take\neffect at the same time.\n\nIf this change isn't accepted, then I would strongly suggest changing the\ndocumentation regarding environment variables to indicate the order in which\ndirectives take effect; at the moment, that's not clear.  In fact, the\ncurrent documentation says the following, which may be true for the\nspecial purpose environment variables listed on the page, but isn't true\nin general for variables used in other ways (e.g., in \"Allow from env\").\n\n\"To make these mechanisms as flexible as possible, they are invoked by\ndefining environment variables, typically with BrowserMatch, though SetEnv\nand PassEnv could also be used, for example.\"", "attachment_id": null, "id": 83935, "creator": "chrisd@apache.org", "time": "2005-12-22T22:44:57Z", "bug_id": 38019, "creation_time": "2005-12-22T22:44:57Z", "is_private": false}, {"count": 1, "tags": [], "creator": "chrisd@apache.org", "attachment_id": 17264, "id": 83937, "time": "2005-12-22T22:46:12Z", "bug_id": 38019, "creation_time": "2005-12-22T22:46:12Z", "is_private": false, "text": "Created attachment 17264\nrun during post_read_request, before mod_setenvif"}, {"count": 2, "tags": [], "creator": "chrisd@apache.org", "attachment_id": null, "id": 83939, "time": "2005-12-22T22:52:18Z", "bug_id": 38019, "creation_time": "2005-12-22T22:52:18Z", "is_private": false, "text": "This bug has been reported a few times before, most recently as 36908.\nIt always gets marked WON'T FIX, which is tolerable, I suppose, but then\nI strongly urge that the documentation be updated, in particular the section\nI outlined, which suggests to the reader that SetEnv and SetEnvIf take\neffect at the same time."}, {"attachment_id": null, "tags": [], "creator": "asm@uezku.kemsu.ru", "is_private": false, "count": 3, "id": 108940, "time": "2007-10-03T04:37:44Z", "bug_id": 38019, "creation_time": "2007-10-03T04:37:44Z", "text": "43540 patch adds SetEnv2 to mod_setenvif to fix this problem"}, {"count": 4, "tags": [], "text": "bug #43540 http://issues.apache.org/bugzilla/show_bug.cgi?id=43540\n", "attachment_id": null, "id": 108941, "creation_time": "2007-10-03T04:39:42Z", "time": "2007-10-03T04:39:42Z", "creator": "asm@uezku.kemsu.ru", "bug_id": 38019, "is_private": false}, {"count": 5, "tags": [], "bug_id": 38019, "attachment_id": null, "id": 180329, "time": "2015-01-16T20:41:23Z", "creator": "covener@gmail.com", "creation_time": "2015-01-16T20:41:23Z", "is_private": false, "text": "(old ticket cleanup)\n\nIt's too disruptive to change the order.  The manual now states in env.html:\n\nThe SetEnv directive runs late during request processing meaning that directives such as SetEnvIf and RewriteCond will not see the variables set with it."}]