[{"count": 0, "tags": [], "bug_id": 31440, "text": "I noticed a salt generation weakness when using htpasswd in MD5 mode on platforms where rand() \nreturns only a 32 bit value: since the MD5 salt is 48 bits wide, the last 2 or 3 characters are always filled \nwith '.'.\n\n$ htpasswd -m -c /tmp/htpasswdtest a\nNew password: \nRe-type new password: \nAdding password for user a\n$ cat /tmp/htpasswdtest\na:$apr1$sTQf/...$v6RZCfMprmLq5vMTzpwH2/\n$", "id": 64278, "time": "2004-09-27T18:46:45Z", "creator": "ak@synflood.at", "creation_time": "2004-09-27T18:46:45Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "text": "Created attachment 12871\nfix to the htpasswd salt generation weakness", "is_private": false, "id": 64279, "creator": "ak@synflood.at", "time": "2004-09-27T18:48:45Z", "bug_id": 31440, "creation_time": "2004-09-27T18:48:45Z", "attachment_id": 12871}, {"count": 2, "attachment_id": null, "bug_id": 31440, "is_private": false, "id": 64280, "time": "2004-09-27T18:49:51Z", "creator": "ak@synflood.at", "creation_time": "2004-09-27T18:49:51Z", "tags": [], "text": "This attached patch would lead to a more random MD5 salt:\n\n$ ./htpasswd -m -c /tmp/htpasswdtest2 b\nNew password: \nRe-type new password: \nAdding password for user b\n$ cat /tmp/htpasswdtest2\nb:$apr1$iOJN8Jax$rQLDvG0ALByOBtHgN2wk7/\n$"}, {"count": 3, "tags": [], "creator": "peterw@tux.org", "attachment_id": 21429, "id": 113139, "time": "2008-01-25T10:10:34Z", "bug_id": 31440, "creation_time": "2008-01-25T10:10:34Z", "is_private": false, "text": "Created attachment 21429\npatch against httpd-2.2.8 to resolve weak PRNG seeding\n\nAndreas, I think you're on the right track, but your patch only adds the\nappearance of greater randomness. The core problem here is poor seeding of the\nPRNG. Every salted output from htpasswd starts with using time() to feed\nsrand(). Even with your patch, htpasswd will always use the same seed at the\nany given time.\n\nThe most important thing that needs to change is the calls to srand(). Here's a\npatch that keeps your nice 48-bit padding and adds better seeding. If the user\nsets a RANDOM_SEED environment variable, htpasswd will use that file/device. If\nnot, it will try to use /dev/urandom. If it cannot use /dev/urandom or the user\nprovides an unusable file/device name, it will fall back to using time() but\nwill print a warning to STDERR. Also (untested!) if the user is on a platform\nwith 32-bit integers, htpasswd will re-seed the PRNG as needed, to improve the\nchances of a true 48-bit salt.\n\n-Peter"}, {"count": 4, "tags": [], "creator": "peterw@tux.org", "attachment_id": 21433, "id": 113153, "time": "2008-01-25T19:56:56Z", "bug_id": 31440, "creation_time": "2008-01-25T19:56:56Z", "is_private": false, "text": "Created attachment 21433\npatch for httpd 1.3.39\n\nsame idea, but for the 1.3.x codebase"}, {"count": 5, "tags": [], "bug_id": 31440, "text": "> Andreas, I think you're on the right track, but your patch only adds the\n> appearance of greater randomness. The core problem here is poor seeding of the\n> PRNG. Every salted output from htpasswd starts with using time() to feed\n> srand(). Even with your patch, htpasswd will always use the same seed at the\n> any given time.\n\nThis is not a matter of randomness (or at least that was not my point), it's a\nmatter of how the salt of the hash looks like. With the old method (which I\nfixed with my patch from 2004), an attacker could base a precomputation attack\non the assumption that the salt only has 32 bits, even though the format would\nallow up to 48 bits of salt. \n\nOf course, even with 32 bits of salt, a precomputation still seems quite\ninfeasible, but it still doesn't exhaust the possible maximum of 48 bits of salt\n(which obviously must have been in the mind of the original authors, otherwise\nthey would have spread the 32 bits of rand() to 6 bytes instead of 8 bytes). And\nthat was the original point of my patch.", "id": 113168, "time": "2008-01-27T15:05:09Z", "creator": "ak@synflood.at", "creation_time": "2008-01-27T15:05:09Z", "is_private": false, "attachment_id": null}, {"count": 6, "tags": [], "text": "Any attacker who has the same PRNG as the system where htpasswd runs would be\nfoolish to blindly precompute even a 32 bit apr1 dictionary. 32 bits of time()\nrepresents 136 years worth of htpasswd execution with the current srand() code.\nIn a given month, there are less than 22 bits worth of salt when using\nsrand(time(NULL)), 17 bits in a day, 12 bits in an hour, 6 bits in a minute, 0\nin a second. 29 bits is all it takes to stretch back to the beginning of Apache,\nbefore the apr1 MD5 algorithm appeared in 1.3.6 -- even with your improvement. \n\nTo \"fix\" htpasswd so it takes full advantage of the apr1 spec's 48 bits of salt,\nit is necessary to fix the srand() problem, too. With your generate_salt() and\nmy seed_prng(), htpasswd finally produces nicely random 48-bit salts for apr1.\n\n", "attachment_id": null, "bug_id": 31440, "id": 113225, "time": "2008-01-28T11:46:04Z", "creator": "peterw@tux.org", "creation_time": "2008-01-28T11:46:04Z", "is_private": false}, {"count": 7, "tags": [], "creator": "ak@synflood.at", "attachment_id": null, "id": 113226, "creation_time": "2008-01-28T11:59:50Z", "time": "2008-01-28T11:59:50Z", "bug_id": 31440, "text": "You are right, I stand corrected. Now if only somebody could apply the patches\nto SVN trunk...", "is_private": false}, {"count": 8, "tags": [], "bug_id": 31440, "attachment_id": null, "id": 113890, "time": "2008-02-19T08:28:24Z", "creator": "chip@force-elite.com", "creation_time": "2008-02-19T08:28:24Z", "is_private": false, "text": "Using generate_salt instead of to64 makes sense.....\n\nThe second patch to use better PRNG seeding, we should just use the APR APIs for randomness, apr_generate_random_bytes:\nhttp://apr.apache.org/docs/apr/1.2/group__apr__random.html"}, {"count": 9, "tags": [], "bug_id": 31440, "attachment_id": null, "id": 113893, "time": "2008-02-19T09:09:18Z", "creator": "chip@force-elite.com", "creation_time": "2008-02-19T09:09:18Z", "is_private": false, "text": "Committed improved salt string generation in r629159:\nhttp://svn.apache.org/viewvc?view=rev&revision=629159\n\nCommitted improved rand seed generation in r629164:\nhttp://svn.apache.org/viewvc?view=rev&revision=629164\n\n"}, {"count": 10, "attachment_id": null, "creator": "rpluem@apache.org", "text": "Proposed for backport to 2.2.x as r661890\n(http://svn.apache.org/viewvc?view=rev&revision=661890)\n\n", "id": 117196, "time": "2008-05-30T14:49:25Z", "bug_id": 31440, "creation_time": "2008-05-30T14:49:25Z", "tags": [], "is_private": false}, {"count": 11, "tags": [], "bug_id": 31440, "text": "Backported as r662572 (http://svn.apache.org/viewvc?rev=662572&view=rev).", "id": 117267, "time": "2008-06-02T14:24:30Z", "creator": "rpluem@apache.org", "creation_time": "2008-06-02T14:24:30Z", "is_private": false, "attachment_id": null}, {"count": 12, "tags": [], "bug_id": 31440, "attachment_id": 24178, "id": 129996, "time": "2009-08-27T10:42:03Z", "creator": "boya.sun@case.edu", "creation_time": "2009-08-27T10:42:03Z", "is_private": false, "text": "Created attachment 24178\nAnother similar bug discovered in htdbm.c"}, {"count": 13, "tags": [], "creator": "boya.sun@case.edu", "attachment_id": null, "text": "Hi All,\n\nIn support/htdbm.c, there are code segments which are very similar to the bug\nbeing solved in htpasswd.c, where \"srand\" is changed to \"seed_rand\".\n\nHowever, in the file support/htdbm.c, under \"case ALG_APMD5:\" and \"case\nALG_CRYPT:\", \"srand\" function is still in use. But according to this bug,\nshouldn't \"srand\" be also changed to \"seed_rand\"?\n\nThe patch is against revision 806655, but I think probably more details are\nneeded to really fix the bug if there is really a problem.\n\nBoya", "id": 129997, "time": "2009-08-27T10:43:35Z", "bug_id": 31440, "creation_time": "2009-08-27T10:43:35Z", "is_private": false}, {"count": 14, "tags": [], "creator": "boya.sun@case.edu", "attachment_id": 24179, "id": 129998, "time": "2009-08-27T10:47:10Z", "bug_id": 31440, "creation_time": "2009-08-27T10:47:10Z", "is_private": false, "text": "Created attachment 24179\nResubmitted: Another similar bug discovered in htdbm.c"}, {"count": 15, "tags": [], "bug_id": 31440, "text": "(In reply to comment #14)\n> Created an attachment (id=24179) [details]\n> Resubmitted: Another similar bug discovered in htdbm.c\nSorry, submitted the wrong patch. Resubmitted the right patch", "id": 129999, "time": "2009-08-27T10:49:10Z", "creator": "boya.sun@case.edu", "creation_time": "2009-08-27T10:49:10Z", "is_private": false, "attachment_id": null}]