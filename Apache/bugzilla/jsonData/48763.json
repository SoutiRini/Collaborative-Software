[{"count": 0, "tags": [], "creator": "bgstewart@covad.net", "attachment_id": null, "id": 134628, "time": "2010-02-18T00:34:25Z", "bug_id": 48763, "creation_time": "2010-02-18T00:34:25Z", "is_private": false, "text": "This problem occurs with both the Java and APR connectors of the coyote AJP package. The symptom is, when an AJP connection is reused for multiple POST requests, sporadic errors occur on the second and subsequent requests.\n\n\nThe classes org.apache.coyote.ajp.AjpProcessor and org.apache.coyote.ajp.AjpAprProcessor look for a positive value in the Content-Length header to determine whether to read the first Ajp chunk of a request body.\n\nThe http spec says \"The presence of a message-body in a request is signaled by the inclusion of a Content-Length or Transfer-Encoding header field in the request's header fields.\" Web service clients generated by Apache Axis2 are one source of POST requests that have no Content-Length header.\n\nWhen a client sends a POST request with no Content-Length header, these classes emit a spurious GET_BODY_CHUNK request on the AJP connection. The first request on the AJP connection will usually succeed, but for subsequent requests over the same connection the protocol gets confused, sometimes processing headers as bodies, and so on.\n\nOne symptom of this that I have seen mentioned elsewhere is that web-service requests are rejected for bad UTF-8 characters.\n\n\nA patch that worked for me was to change the doRead() method of the SocketInputBuffer inner-class, to check for the presence of Transfer-Encoding or Content-Length.\n\nThe problem is similar for the Java AJP and the APR AJP, and the same fix seems to work for both."}, {"count": 1, "tags": [], "bug_id": 48763, "is_private": false, "id": 134630, "creation_time": "2010-02-18T05:06:08Z", "time": "2010-02-18T05:06:08Z", "creator": "mturk@apache.org", "text": "Are there any chance to see the patch that fixed this for you?\n\nAlso which mod_jk you are using. Latest stable (1.2.28) should have\nfixed C-L == 0 issues that can lead to the cross context data corruption.\nHowever those fixes mostly address the missing body, not quite all the\nC-L == 0 cases, so I'd like to see the patch that solves this.", "attachment_id": null}, {"attachment_id": 25015, "tags": [], "bug_id": 48763, "is_private": false, "count": 2, "id": 134648, "time": "2010-02-18T14:07:12Z", "creator": "bgstewart@covad.net", "creation_time": "2010-02-18T14:07:12Z", "text": "Created attachment 25015\nRead the first body chunk of an APR request that has a Transfer-Encoding header.\n\nA proposed patch against tag/TOMCAT_6_0_24 is attached."}, {"count": 3, "tags": [], "creator": "mturk@apache.org", "attachment_id": null, "id": 134649, "time": "2010-02-18T14:20:27Z", "bug_id": 48763, "creation_time": "2010-02-18T14:20:27Z", "is_private": false, "text": "OK, So the patch just executes if C-L is zero or not set but T-E is.\nSeems reasonable. However I'd make sure the T-E is > 0 like we\nare doing with C-L.\n\nIf you don't provide a complete patch I'll make something similar\nin trunk, so we'll see weather it'll get backported, although I\nsee why it shouldn't cause it's not just a nice feature, it's a law :) \n\nThanks"}, {"count": 4, "tags": [], "creator": "mturk@apache.org", "attachment_id": null, "is_private": false, "id": 134650, "time": "2010-02-18T14:25:32Z", "bug_id": 48763, "creation_time": "2010-02-18T14:25:32Z", "text": "I meant T-E == chunked obviously :)"}, {"count": 5, "tags": [], "bug_id": 48763, "is_private": false, "id": 134655, "creation_time": "2010-02-18T14:54:11Z", "time": "2010-02-18T14:54:11Z", "creator": "jfclere@gmail.com", "text": "Do I miss something: In mod_proxy we have:\n+++\n    /* read the first bloc of data */\n    input_brigade = apr_brigade_create(p, r->connection->bucket_alloc);\n    tenc = apr_table_get(r->headers_in, \"Transfer-Encoding\");\n    if (tenc && (strcasecmp(tenc, \"chunked\") == 0)) {\n        /* The AJP protocol does not want body data yet */\n        ap_log_error(APLOG_MARK, APLOG_DEBUG, 0, r->server,\n                     \"proxy: request is chunked\");\n    } else {\n+++\nThe patch would just block and never get it no?", "attachment_id": null}, {"count": 6, "tags": [], "bug_id": 48763, "is_private": false, "text": "Before putting any fix, the question is if the first body message will be automatically sent (so Jean-Fr\u00e9d\u00e9ric thinks it is only the case for c-l > 0, from what I understood).\n\nAll AJP implementations must have the same behavior, otherwise this is big trouble.", "id": 134656, "time": "2010-02-18T14:57:48Z", "creator": "remm@apache.org", "creation_time": "2010-02-18T14:57:48Z", "attachment_id": null}, {"count": 7, "tags": [], "creator": "mturk@apache.org", "attachment_id": null, "is_private": false, "id": 134657, "time": "2010-02-18T15:04:10Z", "bug_id": 48763, "creation_time": "2010-02-18T15:04:10Z", "text": "Right, seems we'll need a descent test case when to issue a read.\nHowever the major problem is that read is issued although not a\nvalid AJP sequence (no C-L header) and that should be rejected\nby the AJP connector instead simply requesting a body chunk from\nmod_proxy/mod_jk if Servlet thinks this is valid POST request."}, {"count": 8, "attachment_id": null, "creator": "mturk@apache.org", "is_private": false, "id": 134658, "time": "2010-02-18T15:13:17Z", "bug_id": 48763, "creation_time": "2010-02-18T15:13:17Z", "tags": [], "text": "Are we supporting T-E chunked with the AJP at the first place.\nSeems to me we don't have any filter inserted inside AJP like\nwe have for HTTP. If not, then T-E=chunked and C-L=0 should\nbe treated as invalid request and connection dropped to prevent\nany further problems."}, {"count": 9, "tags": [], "bug_id": 48763, "is_private": false, "text": "I am using the ISAPI_Redirect IIS plugin 1.2.28.0 with IIS Version 7.\n\nI see there is a separate build that offers \"chunking transfer support\". Would it solve my problem if I used that without patching Tomcat? Or make things worse? (I should probably go read the source and leave you guys alone.)\n\nThanks for your help and attention. I appreciate it.", "id": 134667, "time": "2010-02-18T18:26:40Z", "creator": "bgstewart@covad.net", "creation_time": "2010-02-18T18:26:40Z", "attachment_id": null}, {"count": 10, "tags": [], "text": "Isapi chunking is for sending the chunked data.\nWon't help you there.\nAnyhow your patch is wrong cause it just hides the symptoms.\nThe real problem is that client EOF is not handled correctly.", "attachment_id": null, "bug_id": 48763, "id": 134672, "time": "2010-02-18T19:50:04Z", "creator": "mturk@apache.org", "creation_time": "2010-02-18T19:50:04Z", "is_private": false}, {"count": 11, "tags": [], "text": "If the isapi_redirector is not supposed to send the first body block of such a message until it receives a get-body message, then the isapi_redirector must be faulty.\n\nOn the very first request, and all that follow, the first body block is available on the apr socket immediately after the header is read. With short messages, refillReadBuffer() is never called. With longer ones, the first read picks up a couple of hundred bytes, and refillReadBuffer gets the rest.\n\nI haven't seen any problem related to the end of request data being mishandled.", "attachment_id": null, "bug_id": 48763, "id": 134677, "time": "2010-02-18T22:39:32Z", "creator": "bgstewart@covad.net", "creation_time": "2010-02-18T22:39:32Z", "is_private": false}, {"count": 12, "tags": [], "bug_id": 48763, "is_private": false, "text": "Special first body message is only send if C-L is present as this is defined by AJP protocol spec.\nIf it's there without C-L this is faulty and this should be fixed.", "id": 134682, "time": "2010-02-19T05:27:31Z", "creator": "mturk@apache.org", "creation_time": "2010-02-19T05:27:31Z", "attachment_id": null}, {"count": 13, "tags": [], "creator": "mturk@apache.org", "attachment_id": null, "is_private": false, "id": 134690, "time": "2010-02-19T10:59:47Z", "bug_id": 48763, "creation_time": "2010-02-19T10:59:47Z", "text": "Can you check with the latest 1.2.29 preview from\nhttp://tomcat.apache.org/dev/dist/tomcat-connectors/jk/binaries/win32/jk-1.2.29/\n\nUse the isapi_redirect-1.2.29-dev-911726.dll\nand rename to isapi_redirect.dll\nThere is also 64-bit version available at\nhttp://tomcat.apache.org/dev/dist/tomcat-connectors/jk/binaries/win64/jk-1.2.29/\n\n1.2.29 has few fixes for tightening the AJP message sequence ordering\nmaking it more robust for edge cases."}, {"count": 14, "tags": [], "creator": "bgstewart@covad.net", "attachment_id": null, "id": 134714, "time": "2010-02-20T01:13:30Z", "bug_id": 48763, "creation_time": "2010-02-20T01:13:30Z", "is_private": false, "text": "Mladen, isapi_redirect-1.2.29-dev-911726.dll (x64 version) acts just the same way - the first body block is sent right after the header.\n\n\nBrowsing the jk code, I see ajp_send_request() in jk_ajp_common.c includes this comment:\n\n        /* || s->is_chunked - this can't be done here. The original protocol\n           sends the first chunk of post data ( based on Content-Length ),\n           and that's what the java side expects.\n           Sending this data for chunked would break other ajp13 servers.\n\n           Note that chunking will continue to work - using the normal read.\n         */\n\nbut code to test the value of s->is_chunked was removed between revisions 298092 and 298162."}, {"count": 15, "tags": [], "creator": "mturk@apache.org", "attachment_id": null, "id": 134718, "time": "2010-02-20T08:01:34Z", "bug_id": 48763, "creation_time": "2010-02-20T08:01:34Z", "is_private": false, "text": "Right, it might be the case if IIS sets the ECB->cbTotalBytes\nSeem we don't check if the C-L is present in that case which\nmight lead to initial post to be send even if the C-L is not\npresent.\nGive me till Monday and I'll create another snapshot with that\nissues fixed so we make sure not to send the initial POST packet\nif there is no C-L header\n\nAnyhow can you try with Httpd and see are there any differences\nsince Httpd will not send the first packet.\n\nHope you'll be willing to test it."}, {"count": 16, "tags": [], "bug_id": 48763, "is_private": false, "id": 134719, "creation_time": "2010-02-20T08:03:40Z", "time": "2010-02-20T08:03:40Z", "creator": "mturk@apache.org", "text": "Changing to PC/NT since it seems only IIS is affected.\nAlso we should probably have IIS/Httpd/Netscape as additional fields\nfor filing the Connector bugs.", "attachment_id": null}, {"count": 17, "attachment_id": null, "creator": "mturk@apache.org", "is_private": false, "id": 134734, "time": "2010-02-21T07:24:15Z", "bug_id": 48763, "creation_time": "2010-02-21T07:24:15Z", "tags": [], "text": "Please check version isapi_redirect-1.2.29-dev-912307.dll from\nhttp://tomcat.apache.org/dev/dist/tomcat-connectors/jk/binaries/win64/jk-1.2.29/amd64/\n\nIt should have resolved initial POST data for T-E being send.\nIIS sets 0xFFFFFFFF for cbTotalBytes which we were using for content-length\nbut this value means \"Unknown body size\".\nThis should also solve the posts larger then 4Gb\n\nWe are waiting on your input for making a final 1.2.29 :)"}, {"count": 18, "tags": [], "creator": "bgstewart@covad.net", "attachment_id": null, "is_private": false, "id": 134752, "time": "2010-02-21T20:42:40Z", "bug_id": 48763, "creation_time": "2010-02-21T20:42:40Z", "text": "isapi_redirect-1.2.29-dev-912307.dll solves my issue.\n\n(I saw the C-L -1 in the ajp messages to Tomcat, but since Tomcat looked for C-L > 0, I assumed that -1 was intentional. Sorry I didn't mention it - might have saved you some digging.)\n \nThank you very much."}, {"count": 19, "tags": [], "creator": "mturk@apache.org", "attachment_id": null, "is_private": false, "id": 134761, "time": "2010-02-22T06:12:39Z", "bug_id": 48763, "creation_time": "2010-02-22T06:12:39Z", "text": "This is actually very important. Tomcat looks for C-L > 0\nbut inside JK we were just looking for C-L != 0 and send the\ninitial packet after the request.\nAlso we use 64-bits for C-L thus 0xFFFFFFFF mean 4Gb.\nNow if the servlet didn't consume that packet there was a\nchance it get interpreted as a new request. If it looked\nas a normal request things could get pretty nasty.\nThe next request could receive the data from the previous request.\nWith the current fix instead sending that value we don't send the\nC-L at all which according to the AJP spec mean \"unknow\"."}, {"count": 20, "tags": [], "creator": "bgstewart@covad.net", "attachment_id": null, "id": 134782, "time": "2010-02-22T18:27:32Z", "bug_id": 48763, "creation_time": "2010-02-22T18:27:32Z", "is_private": false, "text": "This morning, I had some failures of another application using the .29 dll and the same Tomcat. I haven't yet determined if this is a misconfiguration issue or a bug, but I thought I should show it to you:\n\n[Mon Feb 22 08:13:50.104 2010] [4320:3432] [info] init_jk::jk_isapi_plugin.c (2403): Starting Jakarta/ISAPI/isapi_redirector/1.2.29-dev-912307\n[Mon Feb 22 08:13:50.151 2010] [4320:3432] [info] init_jk::jk_isapi_plugin.c (2573): Jakarta/ISAPI/isapi_redirector/1.2.29-dev-912307 initialized\n[Mon Feb 22 08:13:57.530 2010] [4320:3432] [error] ajp_connection_tcp_get_message::jk_ajp_common.c (1264): wrong message size 8196 8192 from 127.0.0.1:8009\n[Mon Feb 22 08:13:57.530 2010] [4320:1896] [error] ajp_connection_tcp_get_message::jk_ajp_common.c (1264): wrong message size 8196 8192 from 127.0.0.1:8009\n[Mon Feb 22 08:13:57.546 2010] [4320:3432] [error] ajp_get_reply::jk_ajp_common.c (2072): (ajp13w) Tomcat is down or network problems. Part of the response has already been sent to the client\n\n[... more of the same, and eventually ...]\n\n[Mon Feb 22 08:13:58.107 2010] [4320:3432] [info] service::jk_lb_worker.c (1464): All tomcat instances are busy or in error state\n[Mon Feb 22 08:13:58.107 2010] [4320:3432] [error] service::jk_lb_worker.c (1469): All tomcat instances failed, no more workers left"}, {"attachment_id": null, "tags": [], "bug_id": 48763, "is_private": false, "count": 21, "id": 134784, "time": "2010-02-22T18:38:23Z", "creator": "mturk@apache.org", "creation_time": "2010-02-22T18:38:23Z", "text": "> ajp_connection_tcp_get_message::jk_ajp_common.c (1264): wrong message size 8196\n\nThis looks like mismatch in maxPacketSize. Seems the Tomcat is configured\nfor larger then default packet sizes."}, {"attachment_id": null, "tags": [], "bug_id": 48763, "is_private": false, "count": 22, "id": 134802, "time": "2010-02-23T02:49:31Z", "creator": "rainer.jung@kippdata.de", "creation_time": "2010-02-23T02:49:31Z", "text": "Will be part of 1.2.29."}]