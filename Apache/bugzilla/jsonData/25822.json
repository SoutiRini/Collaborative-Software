[{"count": 0, "tags": [], "bug_id": 25822, "text": "I am trying to start tomcat as normal user and carefully adding only required\npermissions and I found that during startup tomcat is writing the file\ntomcat-users.xml. I think it should only write this file when users are\nadded/modified/deleted and I think it would be a bad thing to have to make the\nentire conf directory writeable since it writes a tomcat-users.xml.new and then\nrenames it.\nI am using the standard binaries.\nFor info :\n30 d\u00e9c. 2003 13:27:34 org.apache.naming.NamingContext lookup\nATTENTION: Une erreur s est produite durant la r\u00e9solution de la r\u00e9f\u00e9rence\njava.io.FileNotFoundException:\n/usr/local/jakarta-tomcat-5.0.16/conf/tomcat-users.xml.new (Permission denied)\n        at java.io.FileOutputStream.open(Native Method)\n        at java.io.FileOutputStream.<init>(FileOutputStream.java:179)\n        at java.io.FileOutputStream.<init>(FileOutputStream.java:131)\n        at\norg.apache.catalina.users.MemoryUserDatabase.save(MemoryUserDatabase.java:508)\n        at\norg.apache.catalina.users.MemoryUserDatabaseFactory.getObjectInstance(MemoryUserDatabaseFactory.java:144)\n        at\norg.apache.naming.factory.ResourceFactory.getObjectInstance(ResourceFactory.java:176)\n        at javax.naming.spi.NamingManager.getObjectInstance(NamingManager.java:301)\n        at org.apache.naming.NamingContext.lookup(NamingContext.java:837)\n        at org.apache.naming.NamingContext.lookup(NamingContext.java:197)\n        at\norg.apache.catalina.mbeans.GlobalResourcesLifecycleListener.createMBeans(GlobalResourcesLifecycleListener.java:202)\n        at\norg.apache.catalina.mbeans.GlobalResourcesLifecycleListener.createMBeans(GlobalResourcesLifecycleListener.java:172)\n        at\norg.apache.catalina.mbeans.GlobalResourcesLifecycleListener.lifecycleEvent(GlobalResourcesLifecycleListener.java:144)\n        at\norg.apache.catalina.util.LifecycleSupport.fireLifecycleEvent(LifecycleSupport.java:166)\n        at org.apache.catalina.core.StandardServer.start(StandardServer.java:2336)\n        at org.apache.catalina.startup.Catalina.start(Catalina.java:581)\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n        at\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n        at\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n        at java.lang.reflect.Method.invoke(Method.java:324)\n        at org.apache.catalina.startup.Bootstrap.start(Bootstrap.java:297)\n        at org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:398)\n30 d\u00e9c. 2003 13:27:34\norg.apache.catalina.mbeans.GlobalResourcesLifecycleListener createMBeans\nGRAVE: Exception processing Global JNDI Resources\njavax.naming.NamingException:\n/usr/local/jakarta-tomcat-5.0.16/conf/tomcat-users.xml.new (Permission denied)\n        at org.apache.naming.NamingContext.lookup(NamingContext.java:849)\n        at org.apache.naming.NamingContext.lookup(NamingContext.java:197)\n        at\norg.apache.catalina.mbeans.GlobalResourcesLifecycleListener.createMBeans(GlobalResourcesLifecycleListener.java:202)\n        at\norg.apache.catalina.mbeans.GlobalResourcesLifecycleListener.createMBeans(GlobalResourcesLifecycleListener.java:172)\n        at\norg.apache.catalina.mbeans.GlobalResourcesLifecycleListener.lifecycleEvent(GlobalResourcesLifecycleListener.java:144)\n        at\norg.apache.catalina.util.LifecycleSupport.fireLifecycleEvent(LifecycleSupport.java:166)\n        at org.apache.catalina.core.StandardServer.start(StandardServer.java:2336)\n        at org.apache.catalina.startup.Catalina.start(Catalina.java:581)\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n        at\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n        at\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n        at java.lang.reflect.Method.invoke(Method.java:324)\n        at org.apache.catalina.startup.Bootstrap.start(Bootstrap.java:297)\n        at org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:398)\n30 d\u00e9c. 2003 13:27:34 org.apache.catalina.core.StandardService start", "id": 49845, "time": "2003-12-30T12:38:14Z", "creator": "xpoinsard@openpricer.com", "creation_time": "2003-12-30T12:38:14Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 25822, "text": "Then use a realm which doesn't do that ...", "id": 49850, "attachment_id": null, "creator": "remm@apache.org", "creation_time": "2003-12-30T15:52:54Z", "time": "2003-12-30T15:52:54Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 25822, "attachment_id": 9763, "text": "Created attachment 9763\npatch to save only when user database is modified", "id": 49896, "time": "2003-12-31T13:45:48Z", "creator": "xpoinsard@openpricer.com", "creation_time": "2003-12-31T13:45:48Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 25822, "attachment_id": null, "text": "Here is a simple patch that should prevent unnecessary file modifications.\nCould it be applied or is the \"always write file\" a feature ?", "id": 49897, "time": "2003-12-31T13:51:34Z", "creator": "xpoinsard@openpricer.com", "creation_time": "2003-12-31T13:51:34Z", "is_private": false}, {"count": 4, "tags": [], "text": "How does this patch help?  If modified, you still have to write the file and \ntherefore still require the same directory/security permissions.", "attachment_id": null, "bug_id": 25822, "id": 49898, "time": "2003-12-31T13:54:28Z", "creator": "yoavs@computer.org", "creation_time": "2003-12-31T13:54:28Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 25822, "text": "If you don't plan to add users using the web interface, with this patch you can\ndisallow any write in the conf directory and add users only \"by hand\".\nWe could perhaps go further by writing the tempory files tomcat-users.xml.old\nand tomcat-users.xml.new in the temporary directory. Then only write right on\nthe file tomcat-users.xml would be required.\nBut since I am completely ingorant of tomcat internals, I don't where we can get\nthe tomcat temporary directory.", "id": 49899, "attachment_id": null, "creator": "xpoinsard@openpricer.com", "creation_time": "2003-12-31T14:07:17Z", "time": "2003-12-31T14:07:17Z", "is_private": false}, {"count": 6, "tags": [], "bug_id": 25822, "text": "You could use java.io.tmpdir.  I wish you had discussed this on the mailing \nlist before posting a bug (which I've now modified to an enhancement request).", "id": 49900, "attachment_id": null, "creator": "yoavs@computer.org", "creation_time": "2003-12-31T14:09:29Z", "time": "2003-12-31T14:09:29Z", "is_private": false}, {"count": 7, "tags": [], "bug_id": 25822, "attachment_id": null, "id": 49904, "time": "2003-12-31T14:42:23Z", "creator": "xpoinsard@openpricer.com", "creation_time": "2003-12-31T14:42:23Z", "is_private": false, "text": "Sorry, but I really thought it was a bug since the default configuration was\nimplying a lower security.\nIs java.io.tmpdir better than something like System.getProperty(\"catalina.base\")\n+ File.separator+ \"temp\" ?\n"}, {"count": 8, "tags": [], "text": "Created attachment 9814\nreplacement for previous buggy patch", "is_private": false, "id": 50077, "creator": "xpoinsard@openpricer.com", "time": "2004-01-05T15:56:57Z", "bug_id": 25822, "creation_time": "2004-01-05T15:56:57Z", "attachment_id": 9814}, {"count": 9, "tags": [], "bug_id": 25822, "attachment_id": null, "text": "-1 for your revised patch, sorry. Please do not reopen the bug.\nIf you do not agree, write your own custom realm, or use the older memory realm.", "id": 50078, "time": "2004-01-05T15:59:59Z", "creator": "remm@apache.org", "creation_time": "2004-01-05T15:59:59Z", "is_private": false}, {"count": 10, "tags": [], "bug_id": 25822, "text": "My previous patch wasn't able to detect any user modification.\nSince it seems to have been applied to cvs, here is a patch that remove it and\nuses another method.\nLike discussed before, it uses a temporary file to save the file before\noverwriting the file in conf directory.\nWith this patch, write permission is only necessary for the file\ntomcat-users.xml and not for the entire directory.", "id": 50080, "time": "2004-01-05T16:02:24Z", "creator": "xpoinsard@openpricer.com", "creation_time": "2004-01-05T16:02:24Z", "is_private": false, "attachment_id": null}, {"count": 11, "tags": [], "bug_id": 25822, "attachment_id": null, "text": "Sorry, but I'm not interested. Either something simple works (like your first\npatch), or it doesn't. If it doesn't then since the \"issue\" is not significant,\nthen the patch will be reverted.", "id": 50081, "time": "2004-01-05T16:08:06Z", "creator": "remm@apache.org", "creation_time": "2004-01-05T16:08:06Z", "is_private": false}, {"count": 12, "tags": [], "creator": "xpoinsard@openpricer.com", "attachment_id": null, "id": 50082, "time": "2004-01-05T16:19:24Z", "bug_id": 25822, "creation_time": "2004-01-05T16:19:24Z", "is_private": false, "text": "My first patch doesn't work since it doesn't detect user modification.\nMy second remove the first patch and implements the following :\n- use a temporary file for write instead of conf/tomcat-users.xml.new\n- check wether conf/tomcat-users.xml is writable (if it exists)\n- rename the temporary files to conf/tomcat-users.xml\nIt removes the need to write in the directory.\n\nBy the way the old code had a very little bug :\n\n        File fileOld = new File(pathnameNew);\n        if (!fileOld.isAbsolute()) {\n            fileOld =\n                new File(System.getProperty(\"catalina.base\"), pathnameOld);\n        }\n\nwhen I expected \n\n        File fileOld = new File(pathnameOld);\n        if (!fileOld.isAbsolute()) {\n            fileOld =\n                new File(System.getProperty(\"catalina.base\"), pathnameOld);\n        }\n\n\n"}, {"count": 13, "tags": [], "bug_id": 25822, "text": "Your first patch works fine (at least it does what I wanted): the users are no\nlonger saved on startup, while updates using the admin webapp cause the file to\nbe saved.", "id": 50083, "time": "2004-01-05T16:21:33Z", "creator": "remm@apache.org", "creation_time": "2004-01-05T16:21:33Z", "is_private": false, "attachment_id": null}, {"count": 14, "tags": [], "bug_id": 25822, "attachment_id": null, "text": "If you only modify an existing user, the change isn't detected and won't be\nsaved unless you add/remove another user.", "id": 50084, "time": "2004-01-05T16:28:04Z", "creator": "xpoinsard@openpricer.com", "creation_time": "2004-01-05T16:28:04Z", "is_private": false}, {"count": 15, "tags": [], "bug_id": 25822, "text": "Created attachment 9829\ncomplete the first patch to correctly detect all modifications", "id": 50133, "attachment_id": 9829, "creator": "xpoinsard@openpricer.com", "creation_time": "2004-01-06T15:41:40Z", "time": "2004-01-06T15:41:40Z", "is_private": false}, {"count": 16, "tags": [], "text": "Since you liked my first patch tentative, I completed it by detecting every\nmodifications made to the UserDatabase.\nI hope this could be accepted since it remains simple.", "is_private": false, "id": 50134, "creator": "xpoinsard@openpricer.com", "time": "2004-01-06T15:43:51Z", "bug_id": 25822, "creation_time": "2004-01-06T15:43:51Z", "attachment_id": null}, {"count": 17, "tags": [], "creator": "xpoinsard@openpricer.com", "attachment_id": 9948, "is_private": false, "id": 50551, "time": "2004-01-14T16:44:20Z", "bug_id": 25822, "creation_time": "2004-01-14T16:44:20Z", "text": "Created attachment 9948\npatch containing fix for pathnameOld"}, {"count": 18, "tags": [], "text": "If this solution doesn't fit, I could provide a ReadOnlyMemoryUserDatabase\nimplementation.", "is_private": false, "id": 50552, "creator": "xpoinsard@openpricer.com", "time": "2004-01-14T16:46:42Z", "bug_id": 25822, "creation_time": "2004-01-14T16:46:42Z", "attachment_id": null}]