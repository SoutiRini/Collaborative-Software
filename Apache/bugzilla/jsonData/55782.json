[{"count": 0, "tags": [], "bug_id": 55782, "attachment_id": null, "is_private": false, "id": 171241, "time": "2013-11-15T12:42:14Z", "creator": "andre.wendel@bmw.de", "creation_time": "2013-11-15T12:42:14Z", "text": "I tried to pass an HTTPS request from an apache 2.2.25 to another apache 2.2.25, which also runs on https. Sometimes the second apache prints the follwoing failure \n\n[error] Hostname localhost provided via SNI and hostname abc.com provided via HTTP are different\n\nand a 400 Bad Request failure is displayed inside the browser. The curious think is that this only happens in 10-15% of the requests!?\n\nThe first apache is configured the following way:\n\nSSLProxyEngine On\nProxyPreserveHost On\n\nProxyPass / https://abc.com/\nProxyPassReverse / https://abc.com/\n\nThe servername is set via start parameter \"-C 'ServerName abc.com'\". The only option, which completly solved the problem is to disable TSLv1.x for the backend communication via setting \"SSLProxyProtocol SSLv3\".\n\nIt seems that the failure is based on the following changes in apache 2.2.25 with the activation of SNI for mod_proxy:\n\n\u201e\n  *) mod_ssl/proxy: enable the SNI extension for backend TLS connections\n     [Kaspar Brand]\n\n  *) mod_proxy: Use the the same hostname for SNI as for the HTTP request when\n     forwarding to SSL backends. PR 53134.\n     [Michael Weiser <michael weiser.dinsnail.net>, Ruediger Pluem]\n\u201e\n\nhttp://svn.apache.org/repos/asf/httpd/httpd/branches/2.2.x/CHANGES"}, {"count": 1, "tags": [], "creator": "asfbugz@velox.ch", "attachment_id": null, "id": 171444, "time": "2013-11-26T05:32:35Z", "bug_id": 55782, "creation_time": "2013-11-26T05:32:35Z", "is_private": false, "text": "Do the requests to the front end server differ in the Host: header they include? If so, can you append \"disablereuse=on\" to the ProxyPass statement and see if it makes a difference?"}, {"count": 2, "tags": [], "bug_id": 55782, "is_private": false, "id": 171526, "creation_time": "2013-12-02T08:57:18Z", "time": "2013-12-02T08:57:18Z", "creator": "andre.wendel@bmw.de", "text": "Hello Kaspar,\n\nthere are no changes inside the header from my side or from the apache configuration.\n\nThe second apache prints the following error message everytime, when the failure comes up:\n\n[Mon Dec 02 09:48:55 2013] [error] Hostname localhost provided via SNI and hostname abc.com provided via HTTP are different\n\nThe curious think i asked myself is, why does the apache set \"localhost\" as SNI and not abc.com like he transmits inside the header? The servername of the first apache is abc.com.\n\nBest regards,\nAndr\u00e9", "attachment_id": null}, {"count": 3, "tags": [], "creator": "asfbugz@velox.ch", "attachment_id": null, "id": 171537, "time": "2013-12-03T05:17:31Z", "bug_id": 55782, "creation_time": "2013-12-03T05:17:31Z", "is_private": false, "text": "By \"requests to the front end server\", I only meant those coming in on that server, not those leaving it (i.e. the requests to the backend). I assume that currently, your frontend receives requests for both its FQDN (\"abc.com\") and for \"localhost\".\n\nPerhaps you're misunderstanding what ProxyPreserveHost is for. It mostly doesn't make sense to turn it on when proxying SSL URLs (see e.g this thread here: https://mail-archives.apache.org/mod_mbox/httpd-dev/201304.mbox/%3CCD8A0375.2AAF0%25eugenel@amazon.com%3E).\n\nDid you already try if \"disablereuse=on\" (see comment 1) makes these errors go away? (Alternatively, you can simply drop the \"ProxyPreserveHost On\" directive - which would actually be the better fix, unless you're trying to do some kind of \"proxied mass name-based virtual hosting\", as mentioned in the documentation.)"}, {"text": "I did the test by multiple ways, via jMeter or browser and everytime i called the frontend-server with the same URL, also the misleading failures were gone after i disabled TSL 1.2 for the backend communication.\n\nI also tested the option \"disablereuse=on\" (sorry, i forgot to mention that in my previous post), but i had the same issue again. \n\nI'm also aware about the topic/bug of \"SSLProxyCheckPeerCN / ProxyPreserveHost\" and we definitly don't have such an option running, also this is not the problem in that case.\n\nBest regards,\nAndr\u00e9", "tags": [], "bug_id": 55782, "is_private": false, "count": 4, "id": 171543, "time": "2013-12-03T11:43:36Z", "creator": "andre.wendel@bmw.de", "creation_time": "2013-12-03T11:43:36Z", "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 55782, "attachment_id": null, "id": 171555, "creation_time": "2013-12-04T08:14:44Z", "time": "2013-12-04T08:14:44Z", "creator": "asfbugz@velox.ch", "text": "(In reply to Andre W. from comment #4)\n> I did the test by multiple ways, via jMeter or browser and everytime i\n> called the frontend-server with the same URL, also the misleading failures\n> were gone after i disabled TSL 1.2 for the backend communication.\n\nIf disabling TLSv1.2 (as opposed to TLSv1 or TLSv1.1) makes the issue disappear, then it's probably not strictly related to SNI.\n\n> I'm also aware about the topic/bug of \"SSLProxyCheckPeerCN /\n> ProxyPreserveHost\" and we definitly don't have such an option running, also\n> this is not the problem in that case.\n\nIn your original report (from 15 November), you're quoting from your \"first apache\" configuration, which includes \"ProxyPreserveHost On\", so I wonder why you're now saying that you \"definitly don't have such an option running\". The fact that \"localhost\" is put into the SNI extension for connections going to the backend is basically due to the following code:\n\nhttp://svn.apache.org/viewvc/httpd/httpd/branches/2.2.x/modules/proxy/mod_proxy_http.c?revision=1497470&view=markup#l2028\n\n(To confirm what mod_ssl puts into the SNI extension, set the LogLevel to debug - see http://svn.apache.org/viewvc/httpd/httpd/branches/2.2.x/modules/ssl/ssl_engine_io.c?revision=1501712&view=markup#l1074)", "is_private": false}, {"count": 6, "tags": [], "bug_id": 55782, "is_private": false, "id": 171556, "creation_time": "2013-12-04T09:24:18Z", "time": "2013-12-04T09:24:18Z", "creator": "andre.wendel@bmw.de", "text": "My comment is a little bit misleading, what I meant is that i don't run the combination of \"ProxyPresrveHost On\" and \"SSLProxyCheckPeerCN On\" at the same time.\n\nI will check that that an come back here as soon as I have new information.\n\nBest regards,\nAndr\u00e9", "attachment_id": null}, {"count": 7, "tags": [], "bug_id": 55782, "attachment_id": null, "text": "I have run the test again, on debug level and found out the following.\n\nIn this case it works (SNi is set to jee-eval1.abc.com):\n[Wed Dec 04 15:12:33 2013] [debug] mod_proxy_http.c(1974): proxy: HTTP: serving URL https://jee-eval2.abc.com/clusterjsp/\n[Wed Dec 04 15:12:33 2013] [debug] proxy_util.c(2018): proxy: HTTPS: has acquired connection for (jee-eval2.abc.com)\n[Wed Dec 04 15:12:33 2013] [debug] proxy_util.c(2074): proxy: connecting https://jee-eval2.abc.com/clusterjsp/ to jee-eval2.abc.com:443\n[Wed Dec 04 15:12:33 2013] [debug] proxy_util.c(2200): proxy: connected /clusterjsp/ to jee-eval2.abc.com:443\n[Wed Dec 04 15:12:33 2013] [debug] proxy_util.c(2451): proxy: HTTPS: fam 2 socket created to connect to jee-eval2.abc.com\n[Wed Dec 04 15:12:33 2013] [debug] proxy_util.c(2583): proxy: HTTPS: connection complete to 160.50.128.170:443 (jee-eval2.abc.com)\n[Wed Dec 04 15:12:33 2013] [info] [client 160.50.128.170] Connection to child 0 established (server jee-eval1.abc.com:443)\n[Wed Dec 04 15:12:33 2013] [info] Seeding PRNG with 512 bytes of entropy\n[Wed Dec 04 15:12:33 2013] [debug] ssl_engine_io.c(1087): [client 160.50.128.170] SNI extension for SSL Proxy request set to 'jee-eval1.abc.com'\n\nIn this case it didn't works (SNI is set to localhost):\n[Wed Dec 04 15:22:02 2013] [debug] ssl_engine_kernel.c(1884): OpenSSL: Read: SSL negotiation finished successfully\n[Wed Dec 04 15:22:02 2013] [debug] proxy_util.c(2074): proxy: connecting https://jee-eval2.abc.com/ to jee-eval2.abc.com:443\n[Wed Dec 04 15:22:02 2013] [debug] proxy_util.c(2200): proxy: connected / to jee-eval2.abc.com:443\n[Wed Dec 04 15:22:02 2013] [debug] proxy_util.c(2451): proxy: HTTPS: fam 2 socket created to connect to jee-eval2.abc.com\n[Wed Dec 04 15:22:02 2013] [debug] proxy_util.c(2583): proxy: HTTPS: connection complete to 160.50.128.170:443 (jee-eval2.abc.com)\n[Wed Dec 04 15:22:02 2013] [info] [client 160.50.128.170] Connection to child 0 established (server jee-eval1.abc.com:443)\n[Wed Dec 04 15:22:02 2013] [info] Seeding PRNG with 512 bytes of entropy\n[Wed Dec 04 15:22:02 2013] [debug] ssl_engine_io.c(1087): [client 160.50.128.170] SNI extension for SSL Proxy request set to 'localhost'\n[Wed Dec 04 15:22:02 2013] [debug] ssl_engine_kernel.c(1871): OpenSSL: Handshake: start\n\nBut this is not really constant in the behaviour at this point, so if he would set localhost everytime i would understand that.", "id": 171558, "time": "2013-12-04T14:30:56Z", "creator": "andre.wendel@bmw.de", "creation_time": "2013-12-04T14:30:56Z", "is_private": false}, {"count": 8, "tags": [], "bug_id": 55782, "attachment_id": null, "id": 171579, "creation_time": "2013-12-05T05:55:15Z", "time": "2013-12-05T05:55:15Z", "creator": "asfbugz@velox.ch", "text": "(In reply to Andre W. from comment #7)\n> But this is not really constant in the behaviour at this point, so if he\n> would set localhost everytime i would understand that.\n\nAs mentioned before, this depends on what Host: header is found in the incoming requests. I recommend logging %{Host}i for the requests coming in on the \"first apache\", and correlating them with the proxy debug logs. Chances are very, very high that \"localhost\" is put into the SNI extension for those requests with a \"Host: localhost\" HTTP header.", "is_private": false}, {"count": 9, "tags": [], "bug_id": 55782, "attachment_id": null, "text": "So, i turned up the debug level once more and added some additional information into the header and i got still bad requests with an 400 code:\n\nIE it happens more often, then on FF or Chrome, but maybe this was only a lucks constellation.\n\nIE:\n10.145.12.69 jee-eval1.abc.com - [09/Dec/2013:10:53:59 +0100] \"GET /clusterjsp/ HTTP/1.1\" 400 347 \"-\" \"Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; Trident/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; .NET4.0C; .NET4.0E; InfoPath.2; Tablet PC 2.0)\" \"jee-eval1.abc.com\"\n\nFF:\n10.145.12.69 jee-eval1.abc.com - [09/Dec/2013:10:55:20 +0100] \"GET /clusterjsp/ HTTP/1.1\" 400 347 \"-\" \"Mozilla/5.0 (Windows NT 6.1; rv:25.0) Gecko/20100101 Firefox/25.0\" \"jee-eval1.abc.com\"\n\nChrome:\n10.145.12.69 jee-eval1.abc.com - [09/Dec/2013:11:03:30 +0100] \"GET /clusterjsp/ HTTP/1.1\" 400 347 \"-\" \"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/30.0.1599.101 Safari/537.36\" \"jee-eval1.abc.com\"\n\nSo from the current look into the access logs it seems that everytime, when i get an 400 the correct hostname was transmitted.", "id": 171664, "time": "2013-12-09T10:30:15Z", "creator": "andre.wendel@bmw.de", "creation_time": "2013-12-09T10:30:15Z", "is_private": false}, {"count": 10, "tags": [], "creator": "asfbugz@velox.ch", "attachment_id": null, "id": 171677, "time": "2013-12-10T05:49:03Z", "bug_id": 55782, "creation_time": "2013-12-10T05:49:03Z", "is_private": false, "text": "(In reply to Andre W. from comment #9)\n> So, i turned up the debug level once more and added some additional\n> information into the header and i got still bad requests with an 400 code:\n\nI assume that this is from what you call the \"second apache\". Note that in comment 8, I was specifically talking about \n\n> logging %{Host}i for the requests coming in on the \"first apache\",\n> and correlating them with the proxy debug logs"}, {"count": 11, "tags": [], "bug_id": 55782, "is_private": false, "id": 173416, "creation_time": "2014-02-21T12:47:15Z", "time": "2014-02-21T12:47:15Z", "creator": "ylavic.dev@gmail.com", "text": "Created attachment 31342\nDon't reuse a SSL backend connection whose SNI differs\n\nFollowing http://mail-archives.apache.org/mod_mbox/httpd-dev/201402.mbox/%3C5144800.Zjx3nWxCiJ@nudel%3E, a backend connection can be reused for a new request but with a different hostname/SNI.\n\nThis patch avoids this by saving the connection's SSL hostname in the proxy_conn_rec and checking it against the new request's one, closing if it differs.", "attachment_id": 31342}, {"count": 12, "tags": [], "bug_id": 55782, "attachment_id": null, "is_private": false, "id": 173519, "time": "2014-02-27T15:47:19Z", "creator": "ylavic.dev@gmail.com", "creation_time": "2014-02-27T15:47:19Z", "text": "Commited in r1572630."}, {"count": 13, "tags": [], "bug_id": 55782, "attachment_id": null, "is_private": false, "id": 173540, "time": "2014-02-28T13:52:04Z", "creator": "andre.wendel@bmw.de", "creation_time": "2014-02-28T13:52:04Z", "text": "Hello Yann,\n\nI'm not really able to apply this patch to version 2.2.25 or 2.2.26, are there to many changes in the already existing branch?\n\nCheers,\nAndr\u00e9"}, {"count": 14, "tags": [], "creator": "ylavic.dev@gmail.com", "attachment_id": 31354, "id": 173541, "time": "2014-02-28T14:16:49Z", "bug_id": 55782, "creation_time": "2014-02-28T14:16:49Z", "is_private": false, "text": "Created attachment 31354\nBackport to 2.2.x\n\nAndre,\ncould you try this patch?\n\nRegards."}, {"count": 15, "tags": [], "creator": "ylavic.dev@gmail.com", "attachment_id": 31356, "id": 173543, "time": "2014-02-28T15:01:22Z", "bug_id": 55782, "creation_time": "2014-02-28T15:01:22Z", "is_private": false, "text": "Created attachment 31356\nLatest backport to 2.2.x proposal\n\nThe previous patch was missing the case where no SNI is in use on the reused connection but the new request requires one.\n\nFixed in r1572967 and this backport proposal."}, {"count": 16, "tags": [], "bug_id": 55782, "attachment_id": null, "is_private": false, "id": 173681, "time": "2014-03-07T09:13:39Z", "creator": "andre.wendel@bmw.de", "creation_time": "2014-03-07T09:13:39Z", "text": "Hello Yann,\n\nthe patch worked well for me!\n\nBest regards,\nAndr\u00e9"}, {"count": 17, "tags": [], "creator": "gilsbert@unicamp.br", "attachment_id": null, "id": 199850, "time": "2017-07-17T12:55:12Z", "bug_id": 55782, "creation_time": "2017-07-17T12:55:12Z", "is_private": false, "text": "This issue or something really similar to it is happening with Apache 2.4.6 on CentOS 7.\n\nThe scenario is about the same: one apache reverse proxy accepting https and proxying it to an apache application using https as well.\n\nWhen the application server has a heavy load as a result from the below \"ab\" command the client trying to access an url different from the one being heavilly used gets 400 bad request and the server logs an AH02032 error.\n\ncommand -> ab -n 10000 -c 100 https://site1.com\n\nclient -> https://site2.com\n\nerror logged -> AH02032: Hostname site1.com provided via SNI and hostname site2.com provided via HTTP are different\n\nWithout forcing the server with the heavy load the problem happens less offen and with the heavy load it happens in 100% of the tests.\n\nThe workaround using SSLv3 between proxy <-> application is working fine so the problem happens with TLSv1.x!\n\nI'm happy to provide any additional information that may be needed."}, {"text": "This has been fixed in 2.4.x since 2.4.10, if you don't have the patch in your distros 2.4.6+patches, you'll need to work with them.\n\nIf you think you've already got the patch, please open a new bug report and reproduce it on a modern source release.", "tags": [], "bug_id": 55782, "attachment_id": null, "count": 18, "id": 199851, "time": "2017-07-17T13:33:08Z", "creator": "covener@gmail.com", "creation_time": "2017-07-17T13:33:08Z", "is_private": false}, {"text": "Thank you for the information about the first release that received the patch (2.4.10).\nIt will help new visitors as it helped me.", "tags": [], "bug_id": 55782, "attachment_id": null, "count": 19, "id": 200021, "time": "2017-07-25T19:03:23Z", "creator": "gilsbert@unicamp.br", "creation_time": "2017-07-25T19:03:23Z", "is_private": false}]