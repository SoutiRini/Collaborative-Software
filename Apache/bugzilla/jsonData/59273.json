[{"count": 0, "attachment_id": 33728, "creator": "rahul.kr.sharma29@gmail.com", "is_private": false, "id": 189958, "time": "2016-04-05T11:27:18Z", "bug_id": 59273, "creation_time": "2016-04-05T11:27:18Z", "tags": [], "text": "Created attachment 33728\nPotx file by which I want to create pptx.\n\nHi I am trying to create power-point presentation(pptx) file with potx power point presentation template using Apache POI. The file was generated but giving error \"The File format or File extension is not valid Verify that the file has not been corrupted and that the file extension matches the format of the file.\" when trying to open it up . I am using below code Kindly see what I am doing wrong.\n\n\npublic static void createPPTXWithPOTX() throws Exception\n {\n\n        File potx_File = new File(System.getProperty(\"user.dir\") + \"/src/resources/Examples/SelfMadePOTX.potx\");\n\n        File pptx_File = new File(System.getProperty(\"user.dir\") + \"/src/resources/Examples/PPTWithTemplate12.pptx\");\n\n        FileInputStream ins = new FileInputStream(potx_File);\n        FileOutputStream out = new FileOutputStream(pptx_File);\n        XMLSlideShow ppt = new XMLSlideShow(ins);\n        // first see what slide layouts are available :\n        System.out.println(\"Available slide layouts:\");\n        for (XSLFSlideMaster master : ppt.getSlideMasters()) {\n            for (XSLFSlideLayout layout : master.getSlideLayouts()) {\n                System.out.println(layout.getType());\n            }\n        }\n\n        // blank slide\n        XSLFSlide blankSlide = ppt.createSlide();\n    // there can be multiple masters each referencing a number of layouts\n        // for demonstration purposes we use the first (default) slide master\n        XSLFSlideMaster defaultMaster = ppt.getSlideMasters()[0];\n        // title slide\n        XSLFSlideLayout titleLayout = defaultMaster.getLayout(SlideLayout.TITLE);\n        // fill the placeholders\n        XSLFSlide slide1 = ppt.createSlide(titleLayout);\n        XSLFTextShape title1 = slide1.getPlaceholder(0);\n        title1.setText(\"First Title\");\n\n        // title and content\n        XSLFSlideLayout titleBodyLayout = defaultMaster.getLayout(SlideLayout.TITLE_AND_CONTENT);\n        XSLFSlide slide2 = ppt.createSlide(titleBodyLayout);\n\n        XSLFTextShape title2 = slide2.getPlaceholder(0);\n        title2.setText(\"Second Title\");\n\n        XSLFTextShape body2 = slide2.getPlaceholder(1);\n        body2.clearText(); // unset any existing text\n        body2.addNewTextParagraph().addNewTextRun().setText(\"First paragraph\");\n        body2.addNewTextParagraph().addNewTextRun().setText(\"Second paragraph\");\n        body2.addNewTextParagraph().addNewTextRun().setText(\"Third paragraph\");\n\n        ppt.write(out);\n    }"}, {"count": 1, "tags": [], "text": "The trick is to change the content-type of the presentation:\n\nppt.getPackage().replaceContentType(\nXSLFRelation.PRESENTATIONML_TEMPLATE, XSLFRelation.MAIN\n);\n\n... but the new content type is not saved.\n\nI'm on it ...", "is_private": false, "bug_id": 59273, "id": 194902, "time": "2016-11-10T09:41:15Z", "creator": "kiwiwings@apache.org", "creation_time": "2016-11-10T09:41:15Z", "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 59273, "attachment_id": null, "text": "The content-type replacement was fixed via r1769220", "id": 194917, "time": "2016-11-10T22:57:00Z", "creator": "kiwiwings@apache.org", "creation_time": "2016-11-10T22:57:00Z", "is_private": false}]