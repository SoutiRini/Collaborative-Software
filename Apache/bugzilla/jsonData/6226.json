[{"count": 0, "tags": [], "creator": "sblinn@us.ibm.com", "attachment_id": null, "id": 10308, "time": "2002-02-04T17:50:43Z", "bug_id": 6226, "creation_time": "2002-02-04T17:50:43Z", "is_private": false, "text": "This is a two-part feature request which hits the same part of wrapper code:\n\nWhen dealing with many extensions to Ant (specifically, JUnit, JUnitReport, \netc) which require JAR files, the ant/lib directory can become quite a mess \n(right now I have 14 files in there). It would be GREAT if when running ant \n(under AIX/Solaris/Windows), instead of only looking in ant/lib, it would look \nin ant/lib, and then down each directory in ant/lib for extension classes. This \nway, I could have a directory ant/lib/junit, and place junit.jar in there, a \ndirectory ant/lib/xalan, and place all the JAR files in there. This way, when \nupdating or removing an extension, I know exactly which JAR files belong where.\n\nAlong these lines is another request: instead of only looking for JAR files, \nlook also for ZIP files. Some vendors (Oracle, for instance) ship class \nlibraries as a ZIP file (classes12.zip from Oracle). If when looking in the \nant/lib directories, it would pick up not just *.jar, but *.zip, *.ZIP as well, \nit would make things a easier on my environment (currently, i have to unzip and \ncreate a jar of ZIP class libraries).\n\nThank you!\n\n-sam\nsblinn@us.ibm.com"}, {"count": 1, "tags": [], "creator": "sbailliez@apache.org", "text": "I'm not in favor of your 2 feature request as the mechanism is very similar to \nthe well-known one used for a servlet engine:\n\n- all jars are under WEB-INF/lib. (I don't like looking for things recursively \nlike this)\n\n- it looks only for .jar files (not sure it is in the servlet spec, but that's \nwhat Tomcat does at least). You are not forced to unzip, jar. Simply renaming \nyour file is enough as a jar file is a zip file.", "id": 10309, "time": "2002-02-04T18:05:21Z", "bug_id": 6226, "creation_time": "2002-02-04T18:05:21Z", "is_private": false, "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 6226, "text": "Maybe we could add a -L<dir> flag to point to additional directories?", "count": 2, "id": 10312, "time": "2002-02-04T18:27:45Z", "creator": "holtdl@yahoo.com", "creation_time": "2002-02-04T18:27:45Z", "is_private": false}, {"count": 3, "tags": [], "creator": "sblinn@us.ibm.com", "text": "\nCommenting toward both replies so far:\n\nas far as an -L flag... this is one of the major features of Ant, one reason I \nuse Ant is because by installing an extension to Ant in the ant/lib directory, \nI do not have to mess with any flags, classpaths, etc, the ant wrapper handles \nall this for me.\n\nas far as the WEB-INF/lib comment as in servlets, that would be great if I used \nAnt the way I use a servlet engine (web server, etc). If my servlet engine was \nrunning twenty different servlets, some of them may be related and grouped \nunder ROOT/dir1, with its own accompanying WEB-INF/lib, and others may be \ngrouped under ROOT/dir1, with its own accompanying WEB-INF/lib. I use Ant to \ncompile myriad projects, but I use Ant as a tool, installed in one location, \nwith one LIB directory. maintaining that LIB directory is becoming a hassle - \nfor now a trivial one, but a hassle nonetheless.\n\na solution on UNIX platforms for me has been, install product JAR files in \nvarious directories, and create symbolic links from the ant/lib directory. \nhowever there is no notion of 'symbolic links' under Windows AFAIK, and so on \nWindows I either have to:\n1. Specify a massive, ugly CLASSPATH when running Ant\n2. Copy a dozen JAR files into ant/lib\n\nThis enhancement does not have to be solved by creating subfolders - some kind \nof antrc solution would be greatly appreciated as well.\n\nrenaming a ZIP only solves the symptom of Ant not reading ZIP files - the \nproblem is, there is accountability that 'classes12.zip' is the exact same, \nuntouched file which I received from Oracle (or some other ZIP/Vendor example). \nwhen you start repackaging the file (which you or I might agree that renaming \nthe extension is not repackaging) will result in lack of support for that \nconfiguration from the vendor.\n\nthanks for the comments, it is interesting to see how different people view the \nsame tool.\n\n-sam\nsblinn@us.ibm.com", "id": 10317, "time": "2002-02-04T19:06:15Z", "bug_id": 6226, "creation_time": "2002-02-04T19:06:15Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "creator": "sblinn@us.ibm.com", "text": "actually, the WEB-INF ideas take me on a tangent which would solve other issues \nwith Ant - installing typedef/taskdef for each extension.\n\nif each Ant extension could provide some kind of file in their JAR file, etc, \nperhaps in the manifest, which would have Ant auto-load the extensions in that \nJAR file with the proper typedef/taskdef calls.\n\ni.e., i provide a JAR file which contains all my extension classes, and Ant can \nlook in that JAR file in a predefined place and find a list of name->value \npairs for both tasks and types which Ant will register.\n\n-sam\nsblinn@us.ibm.com\n", "id": 10322, "time": "2002-02-04T19:10:44Z", "bug_id": 6226, "creation_time": "2002-02-04T19:10:44Z", "is_private": false, "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 6226, "text": "Moreover, when defining a Servlet tree, there is a root file, either properties \nor XML, which defines which servlets to load. If Ant could have such a config \nwhich could be read by the Ant wrapper, then extensions could register with \nthis config the locations of their jar files, taskdefs and typedefs.\n\n-sam\nsblinn@us.ibm.com", "count": 5, "id": 10323, "time": "2002-02-04T19:15:01Z", "creator": "sblinn@us.ibm.com", "creation_time": "2002-02-04T19:15:01Z", "is_private": false}, {"count": 6, "tags": [], "creator": "jakarta@ehatchersolutions.com", "attachment_id": null, "id": 10325, "time": "2002-02-04T19:29:47Z", "bug_id": 6226, "creation_time": "2002-02-04T19:29:47Z", "is_private": false, "text": "As for typdef/taskdef loading name value pairs... that capability already \nexists.  Check out <typedef> and <taskdef>'s resource and file attributes. Ant-\ndev is working on antlib capability which will ease the burden of installing \nnew tasks and types, but using a property file to define them and loading them \nmanually is not too burdensome currently."}, {"count": 7, "tags": [], "creator": "sblinn@us.ibm.com", "text": "\ni'm already using the taskdef and typedef tasks, i was speaking of a way to do \nthis without having to include the taskdef/typedef tasks in each build.xml file \nwhich wants to use those tasks, without going in and modifying the \ndefaults.properties for Ant.\n\n-sam\nsblinn@us.ibm.com", "id": 10327, "time": "2002-02-04T19:42:06Z", "bug_id": 6226, "creation_time": "2002-02-04T19:42:06Z", "is_private": false, "attachment_id": null}, {"count": 8, "tags": [], "creator": "steve_l@iseran.com", "is_private": false, "text": "Regarding loading zip files as well as jar files, your request is a duplicate \nof issue#4583, which is marked as a WONTFIX. Oracle and Apple quicktime are \nthe only people that distribute java stuff with a .ZIP extension, and we take \nthe view that they should read the Sun docs and start using the JAR file \nformat, which is ZIP with some standardisation on META-INF folder content. \nRenaming the files is the workaround. Why not submit bugreps to oracle \nsaying \"oracle distros dont workj with ant \"?\n\nOn the subject of task loading, we agree something better has to be done. \nDunno about recursive load of subdirectory content -could you write the batch \nfile to do that on a win95 box? I dont think it's that easy. \n\nFor loading your own tasks. erik pointed you at <taskdef> ; this takes a \nproperties file which lets you bulk define a whole suite of tasks. You only \nneed one taskdef per package. \n\nI am tempted to mark as wontfix, though submitting two requests in one \ncomplicates such resolutions\n\n", "id": 10328, "time": "2002-02-04T19:43:24Z", "bug_id": 6226, "creation_time": "2002-02-04T19:43:24Z", "attachment_id": null}, {"count": 9, "tags": [], "bug_id": 6226, "attachment_id": null, "is_private": false, "id": 10330, "time": "2002-02-04T20:10:34Z", "creator": "sblinn@us.ibm.com", "creation_time": "2002-02-04T20:10:34Z", "text": "my apologies for the silly two-part submission, as well as the rampant follow-\nup posts. this was my first bugzilla usage and apparently i got a bit carried \naway.\n\nas far as the writing a win95 batch file to do the nested directory, with the \nexisting lcp.bat, there are existing batch files for churning down directories \n(for instance, http://www.ericphelps.com/batch/samples/alldirs.bat.txt). \nhowever i would agree that blindly going down a file tree is not the best \nsolution. a 'config.xml' in a known ant directory could act as a registry for \nextensions.\n\n-sam\nsblinn@us.ibm.com"}, {"count": 10, "tags": [], "creator": "mbenson@apache.org", "attachment_id": null, "text": "with the advent of <antlib> and -lib, plus the WONTFIX nature of the .zip \nsupport request, I would say this issue is resolved.  Dissenters?", "id": 59792, "time": "2004-06-23T18:36:05Z", "bug_id": 6226, "creation_time": "2004-06-23T18:36:05Z", "is_private": false}, {"count": 11, "tags": [], "creator": "stevel@apache.org", "is_private": false, "text": "Sam, can we close this bug with the features already in Ant1.6?\n\nThe only thing we may want to add for ant1.7 is recursive inclusion of\n~/.ant/lib ; if people think that extra structure is a good idea.\n", "id": 70519, "time": "2005-02-04T21:52:56Z", "bug_id": 6226, "creation_time": "2005-02-04T21:52:56Z", "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 6226, "text": "With <antlib> I would say this is no longer valid.", "count": 12, "id": 70575, "time": "2005-02-07T15:56:15Z", "creator": "sblinn@us.ibm.com", "creation_time": "2005-02-07T15:56:15Z", "is_private": false}]