[{"count": 0, "tags": [], "text": "I have thge need of writing in xml a set of file and dir names. Since\nPathConvert makes it easy to do exactly what I want but outputs to a single\nstring with a separator, I have patched it to output also in xml format.\n\nSo instead of\n\n path1,path2\n\nit writes\n\n <path><pathelement>path1</pathelement><pathelement>path2</pathelement></path>\n\nThe option is\n\n @type=\"plain|xml\"\n\nThen I need to write it to a file, so I added also a file attribute, that is not\nexclusive with the property attribute\n\n @file=\"filetowriteto\"\n\nI'm using it in a scratchpad project in Forrest", "is_private": false, "bug_id": 26849, "id": 52096, "time": "2004-02-11T10:19:46Z", "creator": "nicolaken@apache.org", "creation_time": "2004-02-11T10:19:46Z", "attachment_id": null}, {"count": 1, "tags": [], "creator": "nicolaken@apache.org", "attachment_id": 10309, "id": 52097, "time": "2004-02-11T10:20:18Z", "bug_id": 26849, "creation_time": "2004-02-11T10:20:18Z", "is_private": false, "text": "Created attachment 10309\npathconvert.patch"}, {"count": 2, "tags": [], "bug_id": 26849, "attachment_id": null, "text": "That works:\n\n    <fileset id=\"fs\" dir=\"C:/WINNT\" includes=\"*.ini\"/>\n\n    <pathconvert \n      property=\"fs.tmp\"\n      refid=\"fs\"\n      pathSep=\"&lt;/pathelement&gt;&lt;pathelement&gt;\"\n    />\n    <property name=\"fs.xml\" value=\"&lt;path&gt;&lt;pathelement&gt;${fs.tmp}\n&lt;/pathelement&gt;&lt;/path&gt;\"/>\n\n    <echo>${fs.xml}</echo>\n", "id": 52098, "time": "2004-02-11T10:32:24Z", "creator": "jan@materne.de", "creation_time": "2004-02-11T10:32:24Z", "is_private": false}, {"count": 3, "tags": [], "creator": "peter.reilly@corvil.com", "attachment_id": null, "id": 52103, "time": "2004-02-11T11:28:05Z", "bug_id": 26849, "creation_time": "2004-02-11T11:28:05Z", "is_private": false, "text": "The patch does not handle filenames that contain characters\nthat need to be escaped for xml (<>& others?).\n{ok, I know that the current code does not handle filenames\nwith ',' in them}\n\nAlso would be nice to have update for manual and very\nnice to have unit tests......"}, {"count": 4, "tags": [], "creator": "nicolaken@apache.org", "attachment_id": null, "is_private": false, "id": 52124, "time": "2004-02-11T14:46:33Z", "bug_id": 26849, "creation_time": "2004-02-11T14:46:33Z", "text": "peter reilly wrote:\n> The patch does not handle filenames that contain characters\n> that need to be escaped for xml (<>& others?).\n\nGosh, I didn't know filenames could have those chars B-)\n\n>{ok, I know that the current code does not handle filenames\n>with ',' in them}\n\nCan , also be in filenames?\n\n> Also would be nice to have update for manual and very\n> nice to have unit tests......\n\nAt first I wanted to see if it could be ok. In any case I should write some\ntests, I really gotta learn to write them quicker :-)  brb"}, {"count": 5, "tags": [], "creator": "peter.reilly@corvil.com", "attachment_id": null, "is_private": false, "id": 52128, "time": "2004-02-11T15:14:35Z", "bug_id": 26849, "creation_time": "2004-02-11T15:14:35Z", "text": ">Gosh, I didn't know filenames could have those chars B-)\nEasy:\n<project>\n  <concat destfile=\"&lt;x.out&gt;\">\n    Hello world\n  </concat>\n  <concat><path path=\"&lt;x.out&gt;\"/></concat>\n</project>\n\n>Can , also be in filenames?\nThey are used for example in rcs/cvs files on the server.\n\nUsing xml with it's defined escapes makes a lot of sense for\npathconvert.\n\nOne could escape them (I think) by checking for dubious\ncharacters and by placing the name in a <![CDATA[]] structure.\n"}, {"count": 6, "tags": [], "text": "In bug 28681 (SQLExec xml output) there's the \"escape\" method that escapes xml.\n\nSorry, don't have time to include it here, just adding it to this bug as a reminder.", "is_private": false, "bug_id": 26849, "id": 56619, "time": "2004-04-29T10:58:32Z", "creator": "nicolaken@apache.org", "creation_time": "2004-04-29T10:58:32Z", "attachment_id": null}]