[{"count": 0, "tags": [], "bug_id": 58228, "text": "If ApplicationContext.GET_RESOURCE_REQUIRE_SLASH == true then all is good:  ApplicationContext.getResourceAsStream(String) checks whether the path has a leading slash and, if not, returns null.\n\nIf ApplicationContext.GET_RESOURCE_REQUIRE_SLASH == false then ApplicationContext.getResourceAsStream(String) ends up delegating to StandardRoot.getResource(String) and thence to StandardRoot.validate(String), which (regardless of the GET_RESOURCE_REQUIRE_SLASH value) throws IllegalArgumentException if the path doesn't have a leading slash.", "id": 184427, "time": "2015-08-09T23:29:38Z", "creator": "thomas.mpp.maslen@gmail.com", "creation_time": "2015-08-09T23:29:38Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 58228, "attachment_id": null, "is_private": false, "id": 184428, "time": "2015-08-09T23:49:12Z", "creator": "thomas.mpp.maslen@gmail.com", "creation_time": "2015-08-09T23:49:12Z", "text": "With the caveat that I may not have thought this through...\n\nIf StandardRoot.validate(String) isn't going to change (i.e. it will continue to throw IllegalArgumentException for paths that don't have a leading slash), then perhaps one way to make GET_RESOURCE_REQUIRE_SLASH == false behave as documented would be to doctor the offending path (i.e. prepend \"/\") before passing it on.\nPerhaps something roughly like:\n\nOld:\n\n        if (!path.startsWith(\"/\") && GET_RESOURCE_REQUIRE_SLASH)\n            return null;\n\nNew:\n\n        if (!path.startsWith(\"/\")) {\n            if (GET_RESOURCE_REQUIRE_SLASH)\n                return null;\n            else\n                path = \"/\" + path;\n        }\n\n\nThe ApplicationContext.getResource(String) method might also need similar-ish treatment."}, {"count": 2, "tags": [], "creator": "markt@apache.org", "text": "Thanks for the report. This has been fixed in trunk and 8.0.x (for 8.0.25 onwards). I did use a variation of the patch you proposed. The actua patch was a little more generic and handled getResource() and getResourceAsStream()", "id": 184487, "attachment_id": null, "bug_id": 58228, "creation_time": "2015-08-12T09:36:23Z", "time": "2015-08-12T09:36:23Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 58228, "text": "*** Bug 58455 has been marked as a duplicate of this bug. ***", "id": 185470, "time": "2015-09-24T11:00:50Z", "creator": "violetagg@apache.org", "creation_time": "2015-09-24T11:00:50Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 58228, "text": "Created attachment 33233\nAdd opportunity for getRealPath(String) to change behavior in according to value of ApplicationContext.GET_RESOURCE_REQUIRE_SLASH\n\nYou won't be able to get the expected result (not null) If we call method ServletContext.getRealPath(\"WEB-INF\").\n(The class org.apache.catalina.core.ApplicationContext was used in my case )\nThe bad thing is that I cannot change this behavior without tomcat patching.\n\nThe issue was fixed for ApplicationContext.getResource(String), \nbut it's still actual for ApplicationContext.getRealPath(String).", "id": 186112, "time": "2015-10-30T10:35:47Z", "creator": "hedgss@gmail.com", "creation_time": "2015-10-30T10:35:47Z", "is_private": false, "attachment_id": 33233}, {"count": 5, "tags": [], "bug_id": 58228, "text": "Fixed for get realPath in trunk and 8.0.x (for 8.0.29 onwards).", "id": 186221, "time": "2015-11-03T11:01:36Z", "creator": "markt@apache.org", "creation_time": "2015-11-03T11:01:36Z", "is_private": false, "attachment_id": null}]