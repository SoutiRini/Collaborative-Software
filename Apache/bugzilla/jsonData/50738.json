[{"count": 0, "tags": [], "bug_id": 50738, "attachment_id": null, "id": 144068, "time": "2011-02-08T20:38:12Z", "creator": "martin.grotzke@googlemail.com", "creation_time": "2011-02-08T20:38:12Z", "is_private": false, "text": "When the webapp context is reloaded (due to a change of web.xml) then stopInternal and startInternal are invoked, but not initInternal.\n\nSteps to reproduce:\n1) Start tomcat\n2) touch web.xml\n\nExpected: initInternal should be invoked on the manager.\nActual: not invoked.\n\nTested with tomcat 7.0.8"}, {"count": 1, "tags": [], "text": "See the state diagram in org.apache.catalina.Lifecycle.\n\nPassing though initInternal will mean that the current component has to be destroyed first and a new one to be created. I guess that will need re-parsing context.xml and creating a new instance of StandardContext. That is not what happens here.", "is_private": false, "id": 144072, "creator": "knst.kolinko@gmail.com", "time": "2011-02-09T01:26:00Z", "bug_id": 50738, "creation_time": "2011-02-09T01:26:00Z", "attachment_id": null}, {"count": 2, "attachment_id": null, "creator": "martin.grotzke@googlemail.com", "is_private": false, "id": 144075, "time": "2011-02-09T02:59:46Z", "bug_id": 50738, "creation_time": "2011-02-09T02:59:46Z", "tags": [], "text": "For tomcat6 init was called on context reload (actually it's done in StandardContext.start: if (!initialized) init();).\n\nIf it's intended that this behaviour is changed, then how do I know that I need to invoke initInternal by myself when startInternal is invoked (without doing this on a regular start)? I couldn't get this information from the state diagram in org.apache.catalina.Lifecycle."}, {"count": 3, "tags": [], "bug_id": 50738, "attachment_id": null, "id": 144078, "time": "2011-02-09T03:10:55Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2011-02-09T03:10:55Z", "is_private": false, "text": "> how do I know that I need to invoke initInternal by myself\n\nWhy do you need to invoke it?"}, {"count": 4, "tags": [], "bug_id": 50738, "text": "As I'm doing my initialization in initInternal:\n\nhttps://github.com/magro/memcached-session-manager/blob/tomcat7/core/src/main/java/de/javakaffee/web/msm/MemcachedBackupSessionManager.java#L267\n\nThat was working fine for tomcat6. Should initialization be moved to startInternal?", "id": 144079, "time": "2011-02-09T03:40:13Z", "creator": "martin.grotzke@googlemail.com", "creation_time": "2011-02-09T03:40:13Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "creator": "knst.kolinko@gmail.com", "text": "(In reply to comment #4)\n> That was working fine for tomcat6. Should initialization be moved to\n> startInternal?\n\nAnother solution could be to move destruction into destroyInternal. In any case, there should be symmetry inside init/destroy and start/stop pairs.", "id": 144082, "time": "2011-02-09T04:21:13Z", "bug_id": 50738, "creation_time": "2011-02-09T04:21:13Z", "is_private": false, "attachment_id": null}, {"count": 6, "tags": [], "creator": "martin.grotzke@googlemail.com", "text": "I just overwrote destroyInternal and debugged/logged, but it seems to be not called for me, neither on context reload nor during stop (CTRL-C).\n\nAnyway, so I'll move initialization to startInternal.\n\nOne suggestion though: please change the javadoc of LifecycleMBeanBase.initInternal()\nwhich is inherited/seen by subclasses so that it makes clear that initInternal is only invoked for initial start, but not during a reload. The current documentation (of LifecycleMBeanBase.initInternal) is not clear about this:\n\n    /**\n     * Sub-classes wishing to perform additional initialization should override\n     * this method, ensuring that super.initInternal() is the first call in the\n     * overriding method.\n     */", "id": 144084, "time": "2011-02-09T04:40:28Z", "bug_id": 50738, "creation_time": "2011-02-09T04:40:28Z", "is_private": false, "attachment_id": null}]