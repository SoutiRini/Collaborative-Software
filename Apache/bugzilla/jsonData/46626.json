[{"count": 0, "tags": [], "creator": "mathieu.rozieres@gmail.com", "attachment_id": 23192, "is_private": false, "id": 124478, "time": "2009-01-29T08:16:18Z", "bug_id": 46626, "creation_time": "2009-01-29T08:16:18Z", "text": "Created attachment 23192\nInproved SyslogAppender\n\nI found today an issue reported that looks like the one i am facing : the difficulty to handle tag for syslog message routing with Log4j Syslog Appender. On this issue, it was advised to use ConversionPattern Layout to handle the tag prefixing the real message payload. \n\nI.E, this workaround only work for small log message as the SyslogAppender slice long message in < 1024 chunks. In order to prevent the tag to only appear on the 1st syslog message, i've diverted the facilityprinting options that limit the usage of tags to the facility names. To let the user define its own tag, i've added a TagLabel property to the appender, renamed FacilityPrinting to TagPrinting and not to be too code intrusive, i've had a little hack to suffix the SyslogAppender header string with it.\n\nI hope it will help someone out there.\n\nRegards,\n\nMathieu\n\n\nRapid syslog protocol packet description: http://www.monitorware.com/Common/en/Articles/syslog-described.php"}, {"count": 1, "tags": [], "creator": "onlynone@gmail.com", "attachment_id": 28801, "text": "Created attachment 28801\nPatch for SyslogAppender.java and SyslogAppenderTest.java\n\nThis patch against trunk adds the printing of a TAG in the header of a syslog message. Unlike the previous version attached to this issue, this change doesn't affect facilityPrinting and comes with test coverage.\n\nIf a tag is not set, then the behavior is identical to the existing SyslogAppender. If tag it set to non-null, then the tag will print out with the header.", "id": 159131, "time": "2012-05-17T17:58:30Z", "bug_id": 46626, "creation_time": "2012-05-17T17:58:30Z", "is_private": false}, {"count": 2, "tags": [], "creator": "garydgregory@gmail.com", "attachment_id": null, "is_private": false, "id": 159243, "time": "2012-05-22T21:30:33Z", "bug_id": 46626, "creation_time": "2012-05-22T21:30:33Z", "text": "I wonder if some of the code in the patch is in the wrong place. \n\nIn \"4.1.3 MSG Part of a syslog Packet\" from https://tools.ietf.org/html/rfc3164 I read:\n\n\"The MSG part has two fields known as the TAG field and the CONTENT field.\"\n\nSo adding the tag in the method getPacketHeader() does not feel right.\n\nThoughts?"}, {"count": 3, "tags": [], "bug_id": 46626, "attachment_id": null, "id": 159244, "time": "2012-05-22T21:35:06Z", "creator": "garydgregory@gmail.com", "creation_time": "2012-05-22T21:35:06Z", "is_private": false, "text": "Hm... I also read: \n\n\"The TAG is a string of ABNF alphanumeric characters that MUST NOT exceed 32 characters.\"\n\nThis patch does not truncate the Java String.\n\nAm I looking at the right spec?"}, {"count": 4, "tags": [], "creator": "onlynone@gmail.com", "is_private": false, "text": "Regarding the TAG being part of the HEADER or MSG. That RFC definitely says that the TAG is part of the MSG. However, there are some issues with that RFC and syslog messages in general. I would highly recommend reading this write up:\n\nhttp://www.rsyslog.com/doc/syslog_parsing.html\n\nNotably: 'The syslog protocol has not been standardized until relatively recently. The first document \"smelling\" a bit like a standard is RFC 3164, which dates back to August 2001. The problem is that this document is no real standard. It has assigned \"informational\" status by the IETF which means it provides some hopefully useful information but does not demand anything. It is impossible to \"comply\" to an informational document.'\n\nAnd in future RFCs covering syslog messages, for example: http://tools.ietf.org/html/rfc5424 the TAG (now called APP-NAME) field has been moved into the header. Because, frankly, it makes more sense there.\n\nThe problem is that when a stack trace is sent along with a log message, the SyslogAppender sends each line of the stack trace as a separate syslog message and only prepends the HEADER. It doesn't send the line through the layout formatter first. I was originally using the layout format to put my TAG at the beginning of each log message, but since the stack trace lines don't go through the formatter they weren't getting my TAG.\n\nAlso, with or without a TAG, the messages written by the updated class are still compliant with rfc3164.\n\nAnd about the TAG not exceeding 32 alphanumeric characters. I can update the patch to deal with that. What would be the preferred behavior? I was thinking of dealing with it inside setTag(String): silently truncate to 32 characters, then throw an exception if any non-alphanum characters are found in the remaining string.", "id": 159295, "time": "2012-05-24T16:19:34Z", "bug_id": 46626, "creation_time": "2012-05-24T16:19:34Z", "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 46626, "text": "Created attachment 28831\nPatch for SyslogAppender.java and SyslogAppenderTest.java\n\nThis patch includes checking for the length and content of the tag.", "id": 159298, "time": "2012-05-24T18:17:36Z", "creator": "onlynone@gmail.com", "creation_time": "2012-05-24T18:17:36Z", "is_private": false, "attachment_id": 28831}, {"count": 6, "tags": [], "bug_id": 46626, "is_private": false, "id": 159303, "attachment_id": null, "creator": "garydgregory@gmail.com", "creation_time": "2012-05-24T19:20:08Z", "time": "2012-05-24T19:20:08Z", "text": "Hi Steven, \n\nThank you for the new patch.\n\nIf APP-NAME is the current term, shouldn't the ivar be called 'appName' instead of 'tag'?\n\nGary"}, {"count": 7, "tags": [], "text": "(In reply to comment #6)\n> Hi Steven, \n> \n> Thank you for the new patch.\n> \n> If APP-NAME is the current term, shouldn't the ivar be called 'appName'\n> instead of 'tag'?\n> \n> Gary\n\nWell, this class is still very old-school, it really targets classic syslog behavior. And that field is only called APP-NAME in newer syslog standards which are pretty different from the classic one. So I think it still makes sense to call it tag, since in the classic format, it's called tag.\n\nI suppose the exact spot in the code where the tag is added to the message could be moved from getPacketHeader() to anywhere the message is constructed in order to make it more semantically correct. Though I think that complicates the code quite a bit as there will be several more places where a change is necessary and the output will be the same.", "is_private": false, "bug_id": 46626, "id": 159322, "time": "2012-05-25T14:43:13Z", "creator": "onlynone@gmail.com", "creation_time": "2012-05-25T14:43:13Z", "attachment_id": null}, {"count": 8, "tags": [], "bug_id": 46626, "attachment_id": null, "id": 159327, "time": "2012-05-25T19:00:31Z", "creator": "garydgregory@gmail.com", "creation_time": "2012-05-25T19:00:31Z", "is_private": false, "text": "Patch applied with some changes: Use a constant instead of magic numbers. Better Javadocs. Thank you Steven.\nCommitted revision 1342772."}]