[{"count": 0, "tags": [], "creator": "l.curelaru@scarus.de", "attachment_id": null, "is_private": false, "id": 159494, "time": "2012-05-30T07:14:09Z", "bug_id": 53323, "creation_time": "2012-05-30T07:14:09Z", "text": "I work on an aplication which exports/imports data from/to XLS files using POI. The reading is implemented using event model the the writing of excels is using usermodel. Recently we decided to add XLSX suport. Firstly I made the export using XSSF and it worked fine. But after that have the ideea to use SXSSF because we are sometimes dealing with huge data amounts. At the first test all seemed fine, but when I tried one of the unittests I discovered a strage behiviour. \nThat unit test is creating a sample file using the export function and afterthat is importing it with our import function and checks if content is the same. I discovered that same export code is working fine when using HSSF or XSSF but is not working properly when exporting with SXSSF. I notice that:\n - The file exported with SXSSF can be open with excel and looks ok. \n - Same file can be imported with XSSF but it imports as a excel with the correct number of rows but with no cells on it\n - If I just open the file with Excel and save it ( whithout changing anything ) the import will work fine ( so the problem seems to be fixed - so I presumed that something is not saved correctly there )\n - using XSSF to export with same code works also fine.\n - the export and neither the import code does not throw any error or exception\nI checked the code and compare it with examples and seems ok.\nThe file I save is pretty simple. It have only one sheet containg 3 columns and 100 rows which are filed with numbers formated as richtext strings.\n\nIs there any workaround to avoid this problem for POI 3.8?"}, {"count": 1, "tags": [], "bug_id": 53323, "attachment_id": null, "text": "> - Same file can be imported with XSSF but it imports as a excel with the correct > number of rows but with no cells on it\n\nSo you export data with SXSSF, read it back with XSSF and it does not see cells on the rows, right? If so, a unit test please! Without a sample code it is hard to tell what is wrong. It might be a bug in POI or a bug in your unit test.", "id": 159501, "time": "2012-05-30T08:03:34Z", "creator": "yegor@dinom.ru", "creation_time": "2012-05-30T08:03:34Z", "is_private": false}, {"count": 2, "tags": [], "creator": "l.curelaru@scarus.de", "attachment_id": null, "id": 159503, "time": "2012-05-30T08:09:44Z", "bug_id": 53323, "creation_time": "2012-05-30T08:09:44Z", "is_private": false, "text": "Please see my last comment. It seems we wrote the coments in the same time :)"}, {"count": 3, "tags": [], "creator": "l.curelaru@scarus.de", "attachment_id": null, "is_private": false, "id": 159520, "time": "2012-05-30T10:12:17Z", "bug_id": 53323, "creation_time": "2012-05-30T10:12:17Z", "text": "Oops.. it seems my second comment has been lost.\nSo... I'll write it again.\nIn the mean time I've done some debugging and find out that the problem was somehow in my import code: the inline strings tags was not properly parsed in my side.\nIt seems that with same unittest if I save a file with XSSF and SXSSF the result is quite diffrent . With SXSSF the richtext cells are saved as inline strings and with XSSF as shared strings. This mislead me and also the fact that opening the file with excel and save it without any modification has fixed the problem ( changed from inline to shared )\nStill there is a kind of inconsistency. I expected to have same result with same input if changing from XSSF to SXSSF.\nSo I've switched to weak priority and enhancement level."}, {"count": 4, "attachment_id": null, "creator": "dominik.stadler@gmx.at", "is_private": false, "id": 182021, "time": "2015-03-23T21:00:35Z", "bug_id": 53323, "creation_time": "2015-03-23T21:00:35Z", "tags": [], "text": "I think this is now mostly a duplicate of bug 52972 which talks about handling RichText string in a similar way than XSSF does.\n\n*** This bug has been marked as a duplicate of bug 52972 ***"}]