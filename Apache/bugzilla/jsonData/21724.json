[{"count": 0, "tags": [], "creator": "dalgoda@ix.netcom.com", "text": "Set up a filterset with a reference and multiple character tokens.\n\nUse said filterset inside an antcall.  Does not work correctly.\n\nmcastle@dl-mcastle[08:01pm]download/apache-ant-1.5.3-1/test(1027) cat build.xml\n<project name=\"test\" default=\"copytest\" basedir=\".\">\n\n<target name=\"copytest2\">\n   <copy file=\"copytest.in\" toFile=\"copytest1.out\" overwrite=\"true\">\n      <filterset refid=\"foo\"/>\n   </copy>\n</target>\n\n<target name=\"copytest\">\n   <echo file=\"copytest.in\">@@foo@@</echo>\n   <filterset id=\"foo\" begintoken=\"@@\" endtoken=\"@@\">\n      <filter token=\"foo\" value=\"bar\"/>\n   </filterset>\n   <antcall target=\"copytest2\" inheritrefs=\"true\"/>\n   <copy file=\"copytest.in\" toFile=\"copytest2.out\" overwrite=\"true\">\n      <filterset refid=\"foo\"/>\n   </copy>\n</target>\n\n</project>\nmcastle@dl-mcastle[08:02pm]download/apache-ant-1.5.3-1/test(1028) ant\nBuildfile: build.xml\n\ncopytest:\n\ncopytest2:\n     [copy] Copying 1 file to /opt/download/apache-ant-1.5.3-1/test\n     [copy] Copying 1 file to /opt/download/apache-ant-1.5.3-1/test\n\nBUILD SUCCESSFUL\nTotal time: 3 seconds\nmcastle@dl-mcastle[08:02pm]download/apache-ant-1.5.3-1/test(1029) grep bar *out\ncopytest1.out:@bar@\ncopytest2.out:bar\n\n\nBoth should be plain `bar' without the @", "id": 40962, "time": "2003-07-19T03:09:52Z", "bug_id": 21724, "creation_time": "2003-07-19T03:09:52Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "text": "Oh yeah, this applies to foreach as well, which is how I discovered this. \n(Probably not too surprising.)", "attachment_id": null, "bug_id": 21724, "id": 40963, "time": "2003-07-19T03:18:08Z", "creator": "dalgoda@ix.netcom.com", "creation_time": "2003-07-19T03:18:08Z", "is_private": false}, {"count": 2, "tags": [], "text": "Mike, this is an interesting bug report.\nI can reproduce your problem with ant 1.6, although the outcome is slightly \ndifferent (I get an error message \"reference foo not found\").\nI have tried to pass a reference to a fileset instead of a filterset in a \nsimilar build file, and it did not work either.\nI am changing the title of your bug report to \"references are not passed by \nantcall\"", "attachment_id": null, "bug_id": 21724, "id": 41137, "time": "2003-07-22T08:53:22Z", "creator": "antoine@apache.org", "creation_time": "2003-07-22T08:53:22Z", "is_private": false}, {"count": 3, "tags": [], "creator": "antoine@apache.org", "text": "Strange bug !!!\nDebugging behaviour in IDEA :\nI put a breakpoint in Ant.java at line 376 (procedure execute)\nI evaluate newProject.getReference(\"foo\") once ===> null\nI evaluate newProject.getReference(\"foo\") a second time ====> filterset\nI do not run any executable statement between the two evals.\nIs newProject.getReference() self-healing ????\n", "id": 41143, "time": "2003-07-22T09:53:32Z", "bug_id": 21724, "creation_time": "2003-07-22T09:53:32Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "text": "So, I found a solution for the bug. Hopefully good :)\nI have used your build file for one of the test cases.\nCheers\nAntoine", "attachment_id": null, "bug_id": 21724, "id": 41151, "time": "2003-07-22T12:04:31Z", "creator": "antoine@apache.org", "creation_time": "2003-07-22T12:04:31Z", "is_private": false}, {"count": 5, "tags": [], "text": "(Long message following::)\n(Note: I was writing this while antonie was fixing the problem)\n\nThe problem here is the id attribute and handling of references.\nThis is a special attribute that gets inserted at parse-time\nand procesed and also inserted at run-time, \nThe original idea (I think) was to emulate the id in html, in\nthat one can refer to a task in the build script without it having\nrun. This is used in <script>'s to refer to tasks in other targets.\n(see the example in current cvs)\n  <target name=\"sub\">\n    <echo id=\"theEcho\"/>\n  </target>\n\n  <target name=\"sub1\">\n    <script language=\"netrexx\"><![CDATA[\n      theEcho.setMessage(\"In sub1\")\n      sub.execute\n    ]]></script>\n  </target>\n\nThis is ok for tasks, but does not work too well for\ndatatypes as Project#AntRefTable#get() gets a\nUnknownElement and then tries to get a task from\nit after calling maybeconfigure. This returns\nnull as the filterset is not a task. Normally\nthis is not a problem as maybeconfigure on the\nfilterset will cause the \"foo\" id to be\nreplaced by the filterset.\n\nFor antcall this does not work as in the sub project,\nthe foo is an id found during the parse stage, and so\nin Ant#addReferences(), it will be in the newProject.getReferences()\nhashmap and the check:\n                newReferences.containsKey(key)\nwill be true, thus the foo reference from the calling project\nwill not be copied to the sub project.\n\nAntonie's fix will solve the problem with the unit test but will\nnot solve the general problem.\n\nFor example:\n<project name=\"test\" default=\"copytest\" basedir=\".\">\n\n  <target name=\"copytest2\">\n    <copy file=\"copytest.in\" toFile=\"copytest1.out\" overwrite=\"true\">\n      <filterset refid=\"foo\"/>\n    </copy>\n    <concat><path path=\"copytest1.out\"/></concat>\n  </target>\n\n  <target name=\"copytest\">\n    <echo file=\"copytest.in\">@@foo@@</echo>\n    <filterset id=\"foo\" begintoken=\"@@\" endtoken=\"@@\">\n      <filter token=\"foo\" value=\"bar\"/>\n    </filterset>\n    <antcall target=\"copytest2\" inheritrefs=\"true\"/>\n    <copy file=\"copytest.in\" toFile=\"copytest2.out\" overwrite=\"true\">\n      <filterset refid=\"foo\"/>\n    </copy>\n    <concat><path path=\"copytest2.out\"/></concat>\n  </target>\n\n  <target name=\"copytest2\">\n    <copy file=\"copytest.in\" toFile=\"copytest2.out\" overwrite=\"true\">\n      <filterset refid=\"foo\"/>\n    </copy>\n  </target>\n\n  <target name=\"copytest3\">\n    <echo file=\"copytest.in\">@@foo@@</echo>\n    <filterset id=\"foo\" begintoken=\"@@\" endtoken=\"@@\">\n      <filter token=\"foo\" value=\"notbar\"/>\n    </filterset>\n    <copy file=\"copytest.in\" toFile=\"copytest3.out\" overwrite=\"true\">\n      <filterset refid=\"foo\"/>\n    </copy>\n    <concat><path path=\"copytest3.out\"/></concat>\n  </target>\n\n</project>\n\nGenerates:\ncopytest:\n\ncopytest2:\n     [copy] Copying 1 file to /home/preilly/proj/learning/ref\n   [concat] notbar\n\n\n     [copy] Copying 1 file to /home/preilly/proj/learning/ref\n   [concat] bar\n\n\n\n\n\n", "attachment_id": null, "id": 41154, "creator": "peter.reilly@corvil.com", "time": "2003-07-22T12:21:29Z", "bug_id": 21724, "creation_time": "2003-07-22T12:21:29Z", "is_private": false}, {"count": 6, "tags": [], "text": "Hi Peter,\nfeel free to improve this further.\nI did not understand your example (there are duplicate target names in it, and \nyou do not explain what goes wrong in the example).\nCheers,\nAntoine", "attachment_id": null, "bug_id": 21724, "id": 41158, "time": "2003-07-22T12:46:52Z", "creator": "antoine@apache.org", "creation_time": "2003-07-22T12:46:52Z", "is_private": false}, {"count": 7, "tags": [], "bug_id": 21724, "attachment_id": null, "id": 41160, "time": "2003-07-22T13:13:20Z", "creator": "peter.reilly@corvil.com", "creation_time": "2003-07-22T13:13:20Z", "is_private": false, "text": "Opps, sorry did not see the second copytest2 target - please\ndisregard it.\n\nThe problem is that the reference \"foo\" do not get passed to the\nsub project, as at this stage the sub-project has parsed the\nbuild file and has it's own \"foo\" reference.\n\nThe example demonstrates the issue in that the target \"copytest\"\nsets the reference \"foo\" to the filter set that sets the token foo to\nthe value bar. It then antcall's copytest2 which uses the reference\n\"foo\", but this reference points to a filterset that sets the token foo\nto the value notbar (this reference is set in the target \"copytest3\").\n\nAnother example that shows the issue is:\n<project name=\"test\" default=\"copytest\" basedir=\".\">\n\n  <target name=\"copytest2\">\n    <copy file=\"copytest.in\" toFile=\"copytest1.out\" overwrite=\"true\">\n      <filterset refid=\"foo\"/>\n    </copy>\n    <concat><path path=\"copytest1.out\"/></concat>\n  </target>\n\n  <target name=\"copytest\">\n    <echo file=\"copytest.in\">@@foo@@</echo>\n    <property name=\"myvalue\" value=\"this is a value\"/>\n    <filterset id=\"foo\" begintoken=\"@@\" endtoken=\"@@\">\n      <filter token=\"foo\" value=\"${myvalue}\"/>\n    </filterset>\n    <antcall target=\"copytest2\" inheritrefs=\"true\" inheritall=\"no\"/>\n    <copy file=\"copytest.in\" toFile=\"copytest2.out\" overwrite=\"true\">\n      <filterset refid=\"foo\"/>\n    </copy>\n    <concat><path path=\"copytest2.out\"/></concat>\n  </target>\n\n</project>\n\nGiving the result:\ncopytest2:\n     [copy] Copying 1 file to /home/preilly/proj/learning/ref\n   [concat] ${myvalue}\n\n\n     [copy] Copying 1 file to /home/preilly/proj/learning/ref\n   [concat] this is a value\n\nHow to fix?\nI do not know without losing backward compatibily (ie, do not\nstore the id at parse time) or by adding a new id attribute\nthat gets processed at run time (ant-id ?) or by doing something\nclever.\n\nThe first would break a lot of script tasks, the second is\nplain ugly and the third would be nice.\n\nThe current fix would solve the problem for most of the use-cases.\n\n"}]