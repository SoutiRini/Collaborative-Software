[{"count": 0, "tags": [], "bug_id": 30810, "text": "The MS word documents are drag-and drop in thru webdav and POI reads title from \nthe word document. We have the CMS server on Sun solaris and webdav URL is \nconfigured for each user thru the Windows explorer. \n\nSo the POI is not reading special characters like \u00e8,\u00ae from the title field of \nthe word document if they drap-and-drop in the file thru webdav. It work fine \nif the server is on Windows and webdav is also on windows does not work if the \nCMS server is on Sun and webdav URL thru windows Explorer.", "id": 62350, "time": "2004-08-23T18:16:51Z", "creator": "srivani.tsama@netapp.com", "creation_time": "2004-08-23T18:16:51Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 30810, "text": "I don't understand what you are doing and especially I don't know what is means\nto \"read from the MS Word Document thru POI and webdav\". You should give more\ndetails so we can help better.\n\nHowever, I suppose that this is not a POI problem since - as you say - reading\nthe POI file under Windows works. Did you set the LANG environment under Solaris\nto a sensible value? If you don't the JVM reads ASCII characters only and\ntransforms anything else to '?' characters.", "id": 62417, "time": "2004-08-24T17:12:47Z", "creator": "klute@apache.org", "creation_time": "2004-08-24T17:12:47Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 30810, "text": "I did change the lang property to UTF8/ISO8859-1, but i still have the problem. \nWhat i am trying to do here is \n\n1. Webdav folders are like Windows Explorer which follows HTTP protcol are \naccessible from My networkplaces.\n2. Webdav - Dropping the MS word doc in the webdav folder thru my networkplaces \n( This should automatically check in the doc to the CMS Server)\n3. When i drop in the file, i am applying POI library to read the title from  \nthe MS-word  before checking into the Content Server(JUST FYI content server \nallows some check in filters and the code is enclosed here). \n\npublic int doFilter(Workspace ws, DataBinder binder, ExecutionContext cxt)\n\t\tthrows DataException, ServiceException\n\t{\n\t\tif(isWordDoc(binder)) {\n\t\t\tString fileName = binder.getLocal(\"primaryFile:path\");\n\t\t\ttry{\n\t\t\t\tPOIFSReader r = new POIFSReader();\n\t\t\t\tMyPOIFSReaderListener listner = new \nMyPOIFSReaderListener();\n\t\t\t\t//r.registerListener(listner,\"\");\n\t\t\t\tr.registerListener\n(listner,\"\\005SummaryInformation\");\n\t\t\t\tr.read(new FileInputStream(fileName));\n\t\t\t\tString title = listner.getTitle();\n\t\t\t\tSystem.out.println(\" My Title: \\\"\" + title \n+ \"\\\"\");\n\t\t\t\tif(title != null)\n\t\t\t\t\tbinder.putLocal(\"dDocTitle\",title);\n\t\t\t}catch(java.io.FileNotFoundException e) {\n\t\t\t\tSystem.out.println(\"FileNotFoundException : \" + \nfileName);\n\t\t\t}catch(java.io.IOException e) {\n\t\t\t\tSystem.out.println(\"IOException : \" + fileName);\n\t\t\t}\n\n\t\t}\n\n\t\t// filter executed correctly.  Return CONTINUE\n\t\treturn CONTINUE;\n\t}\n\n", "id": 62442, "time": "2004-08-25T01:06:15Z", "creator": "srivani.tsama@netapp.com", "creation_time": "2004-08-25T01:06:15Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "creator": "klute@apache.org", "is_private": false, "text": "Two questions:\n\n- What does your MyPOIFSReaderListener look like?\n\n- Can you provide a sample document together with the output of your CMS filter\ncode?", "id": 62524, "time": "2004-08-26T09:56:50Z", "bug_id": 30810, "creation_time": "2004-08-26T09:56:50Z", "attachment_id": null}, {"count": 4, "tags": [], "creator": "srivani.tsama@netapp.com", "attachment_id": 12537, "text": "Created attachment 12537\nCheckinfilter.java", "id": 62550, "time": "2004-08-26T16:43:00Z", "bug_id": 30810, "creation_time": "2004-08-26T16:43:00Z", "is_private": false}, {"count": 5, "tags": [], "creator": "srivani.tsama@netapp.com", "attachment_id": 12538, "is_private": false, "id": 62551, "time": "2004-08-26T16:48:05Z", "bug_id": 30810, "creation_time": "2004-08-26T16:48:05Z", "text": "Created attachment 12538\nSample Document"}, {"count": 6, "tags": [], "bug_id": 30810, "text": "Attached the CheckinFilter.java and Sample Document that i am reading from.  \nAnd the output of the getTitle is \n\n\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd Network Appliance - Press Release - 02/17/2004\ufffd\u8bae\ufffd\ufffd \n\n", "id": 62552, "time": "2004-08-26T16:52:14Z", "creator": "srivani.tsama@netapp.com", "creation_time": "2004-08-26T16:52:14Z", "is_private": false, "attachment_id": null}, {"count": 7, "tags": [], "bug_id": 30810, "text": "The sample document contains those funny characters in the title, and POI\nextracts them correctly. The rest of the sample document looks fine. How the\nspecial characters got into the title property and whether that's correct or not\nis outside the scope of POI resp. HPSF.", "id": 85392, "time": "2006-02-03T20:48:24Z", "creator": "klute@apache.org", "creation_time": "2006-02-03T20:48:24Z", "is_private": false, "attachment_id": null}]