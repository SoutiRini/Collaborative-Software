[{"count": 0, "tags": [], "bug_id": 25015, "attachment_id": null, "text": "The CoyoteAdapter removes valid path info in the postParseRequest() method.  \n\ntake the following url\n\nhttp://localhost/appname/servlet-name/extra;path/info;here/hi.jsp\n\nwhen you call getPathInfo() on the request it returns /extra\n\nthis is because the CoyoteAdapters postParseRequest() method finds the \nfirst ';' and truncates the path.  According to RFC1738 this is a valid path.  \n\nThe class org.apache.tomcat.util.http.mapper.Mapper handles the path correctly \nbut is never given the right path from the CoyoteAdapter.\n\nthanks,\n\nJohn", "id": 48166, "time": "2003-11-26T13:57:58Z", "creator": "jakarta@trollingers.com", "creation_time": "2003-11-26T13:57:58Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 25015, "is_private": false, "text": "I do not agree with your analysis. ';' is a reserved character, and used to\ndefine parameters. Please do not reopen this report.", "id": 48185, "time": "2003-11-26T19:42:34Z", "creator": "remm@apache.org", "creation_time": "2003-11-26T19:42:34Z", "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 25015, "attachment_id": null, "text": "Remy, \n\nYes the ; is for parameters, but parameters are allowed in the path and are \nvalid.  Why would it be correct behavior for tomcat to not send all the path \ninfo because the path had parameters in it?\n\nJohn", "id": 48190, "time": "2003-11-26T20:22:26Z", "creator": "jakarta@trollingers.com", "creation_time": "2003-11-26T20:22:26Z", "is_private": false}, {"count": 3, "tags": [], "creator": "remm@apache.org", "text": "The actually relevant RFC is 2396.\nI think the parameters do not belong to any of the processed paths returned by\nTomcat.\nHowever, I've read in the RFC that a parameter applies to a path segment (!) as\nseparated by '/', so the unparameterized URL in your example should likely be:\nhttp://localhost/appname/servlet-name/extra/info/hi.jsp. I'm not to sure about\nmy understanding of the RFC, and I don't plan to fix this issue (clean patch\nwelcome, I suppose, though).\nIf you want to use the parameters, you can get the original request URI, as usual.", "id": 48223, "time": "2003-11-27T00:18:04Z", "bug_id": 25015, "creation_time": "2003-11-27T00:18:04Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 25015, "is_private": false, "text": "Remy, \n\nIs the way tomcat is now spec complient?  \n\nAccording to the spec \n\nPathInfo: The part of the request path that is not part of the Context Path or\nthe Servlet Path. It is either null if there is no extra path, or is a string \nwith a leading \u2018/\u2019.\n\nso clearly if my url was \nhttp://localhost/appname/servletname/extra;a/path;b/info;c\nthen if /appname is my context\nand /servletname is my servlet path\nthen /extra;a/path;b/info;c should be my path info according to the spec  (see \nSRV.4.4 and table 2)\n\nso if I submit a patch for this would you except this behavior?\n\nJohn", "id": 48428, "time": "2003-12-03T17:43:24Z", "creator": "jakarta@trollingers.com", "creation_time": "2003-12-03T17:43:24Z", "attachment_id": null}, {"count": 5, "tags": [], "creator": "remm@apache.org", "text": "I say no. What if there are path parameters elsewhere ? You remove them ? It\ndoesn't make any sense.", "id": 48429, "time": "2003-12-03T17:56:26Z", "bug_id": 25015, "creation_time": "2003-12-03T17:56:26Z", "is_private": false, "attachment_id": null}, {"count": 6, "tags": [], "bug_id": 25015, "is_private": false, "id": 48431, "creation_time": "2003-12-03T18:04:58Z", "time": "2003-12-03T18:04:58Z", "creator": "jakarta@trollingers.com", "text": "I dont know how path parms are used normaly (personaly I have never seen them \nused except in our app) so I am not sure how they should be treated, but \nfollowing the spec it seems the should be included in path info.\n\nI would like to get some feedback from others (hopefuly someone else out there \nuses them)", "attachment_id": null}, {"count": 7, "tags": [], "creator": "remm@apache.org", "attachment_id": null, "id": 48432, "time": "2003-12-03T18:23:10Z", "bug_id": 25015, "creation_time": "2003-12-03T18:23:10Z", "is_private": false, "text": "getRequestURI will return the full URI, right (including all the parameters) ? I\nthink if you need them, it is more consistent to work from that. Since\nparameters will need to be stripped out for mapping (you find the path info only\nafter the mapping is done, so you \"can't\" (= hard) add back the parameters\nreliably), I don't see how it can be made to work automagically."}, {"count": 8, "tags": [], "bug_id": 25015, "attachment_id": null, "text": "Well the biggest problem right now is \n\nhttp://localhost/appname/servletname/extra;a/path;b/info;c\nthen if /appname is my context\nand /servletname is my servlet path\n\nright now tomcat returns only /extra which is not right no matter how you look \nat it\n\n", "id": 48433, "time": "2003-12-03T18:26:56Z", "creator": "jakarta@trollingers.com", "creation_time": "2003-12-03T18:26:56Z", "is_private": false}, {"count": 9, "tags": [], "creator": "jakarta@trollingers.com", "attachment_id": null, "id": 48501, "time": "2003-12-04T16:05:52Z", "bug_id": 25015, "creation_time": "2003-12-04T16:05:52Z", "is_private": false, "text": "Remy, \n\nI am trying to make a patch for this and have a question I hope you can answer.\n\nin the CoyoteAdapter the MessageBytes class is used.  This class holds 2 \narrays, one of char and one of byte.  The CoyoteAdapter class modifies the byte \narray and not the char array so the data in the MessageBytes class is out of \nsync.  Is this desired effect or should these arrays hold the same data.\n\nLooking at the comment on line 297 of CoyoteAdapter (rev. 1.14) it thinks that \nthe jsessionid has been removed but it has only been removed from the byte[] \nnot the char[] (from the methods MessageBytes.getByteChunk() and \nMessageBytes.getByteChunk())\n\nI think the char[] and byte[] inside MessageBytes should be the same.\n\nany help would be great.\n\nalso according the the spec requestURI = contextPath + servletPath + pathInfo\n\nso if the requestURI has the path parms the pathInfo HAS to\n\njohn"}, {"count": 10, "tags": [], "creator": "remm@apache.org", "text": "I don't agree, they simply didn't think about path parameters (I didn't know you\ncould put them in the middle of the path). Since path parameters won't be\nmapped, what if there are parameters in the servlet path ?\nI'd like to point out also that the session id parameter, if present, is always\nremoved from the request URI. That could possibly imply that other parameters\nshould also be removed everywhere.\nSo I don't really agree with handling parameters at this time, because it's a mess.\n\nAs for your question, at this time of the processing, the URI has been converted\nto chars, so use the CharChunk, as the current algorithm is doing.", "id": 48523, "time": "2003-12-04T17:28:26Z", "bug_id": 25015, "creation_time": "2003-12-04T17:28:26Z", "is_private": false, "attachment_id": null}, {"count": 11, "tags": [], "creator": "jakarta@trollingers.com", "text": "Do you not want a patch for this at all, or do you want one that just rips out \nthe parms and returns only the path?", "id": 48525, "time": "2003-12-04T17:45:21Z", "bug_id": 25015, "creation_time": "2003-12-04T17:45:21Z", "is_private": false, "attachment_id": null}, {"count": 12, "tags": [], "creator": "jakarta@trollingers.com", "text": "> As for your question, at this time of the processing, the URI has been \n> converted to chars, so use the CharChunk, as the current algorithm is doing.\n\nWell as it is now the jsessionid is only being remove from the byte array \n(ByteChunk) the only reason you do not see the jsessionid in the path is the \ncode finds the first ';' and drops it and everything after it.\n\n", "id": 48526, "time": "2003-12-04T17:49:37Z", "bug_id": 25015, "creation_time": "2003-12-04T17:49:37Z", "is_private": false, "attachment_id": null}, {"count": 13, "tags": [], "bug_id": 25015, "attachment_id": null, "text": "At this point, removing path parameters seems to me the way to go, but I don't\nknow ... I'll mark this as remind.", "id": 48527, "time": "2003-12-04T17:54:25Z", "creator": "remm@apache.org", "creation_time": "2003-12-04T17:54:25Z", "is_private": false}, {"count": 14, "tags": [], "creator": "jakarta@trollingers.com", "text": "One last thing, as for you question about context and servlet path, having \nparms in them does not work at all.  (it either does not find the context, or \nit does not find the servlet).  How do you get clarification on the spec for \nthese type of things (trust me when I say I dont know why anyone would use \nthese either, but I inherited this code that does)\n\nJohn", "id": 48528, "time": "2003-12-04T17:55:55Z", "bug_id": 25015, "creation_time": "2003-12-04T17:55:55Z", "is_private": false, "attachment_id": null}, {"count": 15, "tags": [], "bug_id": 25015, "attachment_id": null, "is_private": false, "id": 48869, "time": "2003-12-10T22:40:24Z", "creator": "amyroh@apache.org", "creation_time": "2003-12-10T22:40:24Z", "text": "Servlet spec folks talked about this (parameters in path and whether getpathinfo\nshould return them or not), and they couldn't get the consensus. Most people\nseem to like that getPathInfo should NOT include the parameters, but we haven't\nhad a thorough discussion and that's listed as an item for the next version of\nthe spec. So, for now, it's container-specific but the servlet spec lead\nrecommends to remove them."}, {"count": 16, "tags": [], "bug_id": 25015, "is_private": false, "id": 48922, "attachment_id": null, "creator": "remm@apache.org", "creation_time": "2003-12-11T18:39:18Z", "time": "2003-12-11T18:39:18Z", "text": "Ok, thanks, but should this URI: /appname/servlet-name/extra;path/info;here/hi.jsp\nBecome: /appname/servlet-name/extra/info/hi.jsp\nOr: /appname/servlet-name/extra\n\nI think the URI RFC (that nobody cares about in the HTTP world) specifies the\nfirst one :)\nTomcat currently does the second one.\nI'm reopening the bug, as we'll get a resolution, apparently."}, {"count": 17, "tags": [], "bug_id": 25015, "is_private": false, "id": 48926, "attachment_id": null, "creator": "amyroh@apache.org", "creation_time": "2003-12-11T19:44:43Z", "time": "2003-12-11T19:44:43Z", "text": "I don't think the spec has clearly resolved this issue.\n\nRight now, it somewhat implies that the return value of getPathInfo() include\nthe things after \";\".\n\nSRV.4.1\n\"Path parameters that are part of a GET request are not exposed by these\nAPIs.(getParameter, etc.) They must be parsed from the String values returned by\nthe getRequestURI method or the getPathInfo method.\"\n\nHowever, practically, the path parameter can be placed ANYWHERE in the URL and\nit is confusing that getPathInfo returns them. \n\nI think returning \"/appnama/servlet-name/extra\" is fine.\n\nAs long as getRequestURI contains the path params, I don't think it violates the\nspec."}, {"count": 18, "tags": [], "creator": "jakarta@trollingers.com", "attachment_id": null, "id": 49128, "time": "2003-12-15T12:34:00Z", "bug_id": 25015, "creation_time": "2003-12-15T12:34:00Z", "is_private": false, "text": "Should this work ?\n\n    <servlet-mapping>\n        <servlet-name>MyServlet</servlet-name>\n        <url-pattern>/test/path/here</url-pattern>\n    </servlet-mapping>\n\ninvoke servlet -> http://localhost/context/test;a/path;b/here\n\nor is the url-pattern required to have the path parm in it (same with a context \nhaving a parm in it) because neither of these work now.\n\n"}, {"count": 19, "tags": [], "creator": "remm@apache.org", "text": "What Amy said implies: no, this doesn't work.", "id": 49140, "time": "2003-12-15T18:22:59Z", "bug_id": 25015, "creation_time": "2003-12-15T18:22:59Z", "is_private": false, "attachment_id": null}, {"count": 20, "tags": [], "creator": "jakarta@trollingers.com", "attachment_id": null, "id": 49144, "time": "2003-12-15T19:08:55Z", "bug_id": 25015, "creation_time": "2003-12-15T19:08:55Z", "is_private": false, "text": "Amy, I am confused.. the spec says that I should be able to get the parm from \nthe getRequestURI or getPathInfo.  are you reading this as the contain must \nprovide it in just one of these methods?  It seems to me the spec is saying I \nshould be able to retieve it from either method, not just one (which ever your \nvendor supports)\n\nSRV.4.1\n\"Path parameters that are part of a GET request are not exposed by these\nAPIs.(getParameter, etc.) They must be parsed from the String values returned by\nthe getRequestURI method or the getPathInfo method.\"\n"}, {"count": 21, "tags": [], "creator": "amyroh@apache.org", "attachment_id": null, "id": 49164, "time": "2003-12-15T23:08:00Z", "bug_id": 25015, "creation_time": "2003-12-15T23:08:00Z", "is_private": false, "text": "Two things:\n\n1. getPathInfo should/shouldn't return \";blah\"\n\n   I think it's ok to leave it as it is for now since the spec\n   is most likely going to be changed in the next version.\n   I asked 154EG spec lead to consider removing the wording of\n   \"getPathInfo() method\" in SRV.4.1 and he said they address\n   this issue again and probably do remove as some members\n   already mentioned that.\n\n2. matching\n\n  Should this work ?\n\n    <servlet-mapping>\n        <servlet-name>MyServlet</servlet-name>\n        <url-pattern>/test/path/here</url-pattern>\n    </servlet-mapping>\n\n  invoke servlet -> http://localhost/context/test;a/path;b/here\n\n  or is the url-pattern required to have the path parm in it (same with\n  a context having a parm in it) because neither of these work now.\n  ------------------------\n  For the above comment, SRV.11.1 says:\n  \"The path used for mapping to a servlet is the request URL from the\n   request object minus the context path and the path parameters.\"\n\n  That implies the deployment descriptor above should work\n  and the <url-pattern> should not contain the path parameters.\n  However, the spec doesn't talk about the case when the path params\n  are within the context path. So, it's up to the container, and I\n  would think that we can apply the same rule for the context path too."}]