[{"count": 0, "tags": [], "creator": "yklovejava@163.com", "attachment_id": null, "text": "Modify the server.xml, add the maxHttpHeaderSize attribute:\n\n<Connector port=\"8080\" protocol=\"HTTP/1.1\"\n               connectionTimeout=\"20000\"\n               redirectPort=\"8443\" maxHttpHeaderSize=\"24\"/>\n\n\n  I deliberately modify the maxHttpHeaderSize to a small value, then I make a normal request, Sure, the request header is more than 24 bytes.\n\n  Then the server is report following error:\n\n28-Jan-2015 16:08:01.870 SEVERE [http-nio-8080-exec-1] org.apache.coyote.http11.AbstractHttp11Processor.endRequest Error finishing response\n java.lang.ArrayIndexOutOfBoundsException: 24\n        at org.apache.coyote.http11.AbstractOutputBuffer.sendStatus(AbstractOutputBuffer.java:445)\n        at org.apache.coyote.http11.AbstractHttp11Processor.prepareResponse(AbstractHttp11Processor.java:1554)\n        at org.apache.coyote.http11.AbstractHttp11Processor.action(AbstractHttp11Processor.java:739)\n        at org.apache.coyote.Response.action(Response.java:179)\n ...\n\n  Is not check the maxHttpHeaderSize? Normal circumstances, it's should response 413-request entity is too large. I think this is better and reasonable.", "id": 180611, "time": "2015-01-28T08:16:03Z", "bug_id": 57509, "creation_time": "2015-01-28T08:16:03Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 57509, "is_private": false, "text": "The exception corresponds to what is actually occurring, so it looks fine to me as is.", "id": 180612, "time": "2015-01-28T08:23:32Z", "creator": "remm@apache.org", "creation_time": "2015-01-28T08:23:32Z", "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 57509, "is_private": false, "text": "It might be nice to do bounds-checking (or not) and use an application exception instead of AAOOBE. Getting an AAOOBE usually indicates to me that there is a software flaw, not a data flaw.", "id": 180731, "time": "2015-02-03T14:20:59Z", "creator": "chris@christopherschultz.net", "creation_time": "2015-02-03T14:20:59Z", "attachment_id": null}, {"count": 3, "tags": [], "creator": "yklovejava@163.com", "attachment_id": null, "text": "  If check the maxHttpHeaderSize careful, the error may be subdivide the following cases:\n\n  1. the request uri more than maxHttpHeaderSize, it should be a 414-request url too long\n  2. the request entity more than maxHttpHeaderSize, it should be a 413-request entity too large\n\n  I think in this respect, Tomcat can be do better, :)", "id": 180767, "time": "2015-02-05T01:19:02Z", "bug_id": 57509, "creation_time": "2015-02-05T01:19:02Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 57509, "text": "(In reply to yangkun from comment #3)\n\nYour diagnosis is wrong. We are not talking about request here. It is response (the status line of a HTTP response) that does not fit the buffer used by status line and HTTP headers.\n\nGenerally, AbstractOutputBuffer.write(..) methods do perform a length check,\nbut numerous  headerBuffer[pos++] = (COLON|SP|CR|LF)  do not.\n\nA simple fix may be to change AOB.checkLengthBeforeWrite(int length) method to assume that the usable buffer length is less by 4 bytes. There are no more than 4 bytes added directly to the buffer after the write.\n\n(4 = 2 bytes for CR-LF + 2 bytes for CR-LF added by AOB.endHeaders())\n\n\nThe result will be that the checkLengthBeforeWrite() method will throw a org.apache.coyote.http11.HeadersTooLargeException  (a subclass of an IllegalStateException), essentially resulting in the same server-side error.", "id": 180768, "time": "2015-02-05T02:25:04Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2015-02-05T02:25:04Z", "is_private": false, "attachment_id": null}, {"count": 5, "attachment_id": null, "creator": "knst.kolinko@gmail.com", "is_private": false, "id": 180769, "time": "2015-02-05T03:21:01Z", "bug_id": 57509, "creation_time": "2015-02-05T03:21:01Z", "tags": [], "text": "Fixed in trunk and Tomcat 8 (r1657460), will be in 8.0.19 onwards."}, {"count": 6, "tags": [], "bug_id": 57509, "text": "Fixed in Tomcat 7 by r1657591, will be in 7.0.60 onwards.", "id": 180799, "time": "2015-02-05T14:46:44Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2015-02-05T14:46:44Z", "is_private": false, "attachment_id": null}, {"count": 7, "tags": [], "bug_id": 57509, "text": " - 4 bytes added is the correct fixe ?\n\n\nThe method sendHeader -->\n\nwrite(name);\nheaderBuffer[pos++] = Constants.COLON;\nheaderBuffer[pos++] = Constants.SP;\nwrite(value);\nheaderBuffer[pos++] = Constants.CR;\nheaderBuffer[pos++] = Constants.LF;\n\ncall the method write(MessageBytes mb) 2 times and at the end of this method, call the method write(mb.getByteChunk()\n\nthis method call checkLengthBeforeWrite(length)\n\nIn the first call write(name) --> \nthis block that increments 2 positions is not called\nheaderBuffer[pos++] = Constants.COLON;\nheaderBuffer[pos++] = Constants.SP;\n\n\nThe class AbstractHttp11Processor method private void prepareResponse()\ncall the class AOB -->\nint size = headers.size();\nfor (int i = 0; i < size; i++) {\ngetOutputBuffer().sendHeader(headers.getName(i), headers.getValue(i));\n}\ngetOutputBuffer().endHeaders();\n\n\n\nin other words, I believe:\n\n\nthe method checkLengthBeforeWrite in the first call \nif (pos + length > headerBuffer.length)\n\nthe method checkLengthBeforeWrite in the second call \nif (pos + length + 2 > headerBuffer.length)\n\nand if have a third scan after getOutputBuffer().endHeaders() - there is no such verification - and also would not make sense\nif (pos + length + 4 > headerBuffer.length)\n\nand would be after getOutputBuffer().endHeaders()\n\n\nPlease check.", "id": 180915, "time": "2015-02-10T20:06:19Z", "creator": "suporte@vitplay.com", "creation_time": "2015-02-10T20:06:19Z", "is_private": false, "attachment_id": null}, {"count": 8, "attachment_id": null, "creator": "markt@apache.org", "is_private": false, "id": 180916, "time": "2015-02-10T20:08:39Z", "bug_id": 57509, "creation_time": "2015-02-10T20:08:39Z", "tags": [], "text": "(In reply to Shelson Ferrari from comment #7)\n>  - 4 bytes added is the correct fixe ?\n\nYes."}]