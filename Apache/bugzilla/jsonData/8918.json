[{"count": 0, "attachment_id": null, "creator": "mackenzie@berbee.com", "is_private": false, "id": 15738, "time": "2002-05-08T21:04:15Z", "bug_id": 8918, "creation_time": "2002-05-08T21:04:15Z", "tags": [], "text": "I have Apache 1.24 \nand Tomcat4.0.3 \nconfigured on a Sun sparc solaris 8 machine.\nJVM is Sun's j2se from Sun.\nVersion=\nmackenzie@toma logs$ /usr/j2se/bin/java -fullversion\njava full version \"1.4.0-b92\"\nmackenzie@toma logs$\n\nmod_webapp was compiled from cvs checkout on May 7\nmod_webapp.c version \n@version $Id: mod_webapp.c,v 1.33 2002/05/03 13:30:25 pier Exp $\n\n\nUsing either mod_webapp(or mod_jk) when Tomcat issues an error page the \nContentType is returned to the browser as \"Content-Type: text/plain\" which is \nfine if you use IE ;-)\n\nI tested this with a simple servlet which just does this in the doGet()\nres.sendError( HttpServletResponse.SC_BAD_REQUEST, \"Test Content Type Error \nMessage\" );\n\nVia the built in HTTP connector all is fine. However, via apache and webapp, \nContentType is incorrect and is set to \"text/plain\".\n\nIf I specifically set ContentType as well in my test servlet\nres.setContentType(\"text/html\");\n\nthen it works in all test scenarios.\n\nAccording to javadoc for public void sendError(int sc, java.lang.String msg) \n'The server defaults to creating the response to look like an HTML-formatted \nserver error page containing the specified message, setting the content type \nto \"text/html\", leaving cookies and other headers unmodified.'\n\nHope this helps.\n\nCheers Mark"}, {"count": 1, "tags": [], "bug_id": 8918, "text": "\"mod_webapp is deprecated and unsupported due to lack of developer interest.\nPlease use mod_jk, or jk2\"", "id": 35502, "time": "2003-04-18T13:27:37Z", "creator": "funkman@joedog.org", "creation_time": "2003-04-18T13:27:37Z", "is_private": false, "attachment_id": null}]