[{"count": 0, "tags": [], "creator": "polina.genova@gmail.com", "attachment_id": 29809, "id": 164362, "time": "2013-01-03T17:29:11Z", "bug_id": 54371, "creation_time": "2013-01-03T17:29:11Z", "is_private": false, "text": "Created attachment 29809\nTest web application.\n\nHello,\n\nThe following exception is thrown during web application deploy on v. Tomcat 7.0.x including the latest Tomcat 7.0.35-dev (from trunk branch):\n\nSEVERE: Unable to process JNDI URL [jndi:/localhost/Fragment%20Example/WEB-INF/classes/com] for annotations\njava.io.FileNotFoundException: jndi:/localhost/Fragment%20Example/WEB-INF/classes/com\n\tat org.apache.naming.resources.DirContextURLConnection.list(DirContextURLConnection.java:465)\n\tat org.apache.catalina.startup.ContextConfig.processAnnotationsJndi(ContextConfig.java:2028)\n\tat org.apache.catalina.startup.ContextConfig.processAnnotationsUrl(ContextConfig.java:1948)\n\tat org.apache.catalina.startup.ContextConfig.webConfig(ContextConfig.java:1306)\n\tat org.apache.catalina.startup.ContextConfig.configureStart(ContextConfig.java:878)\n\tat org.apache.catalina.startup.ContextConfig.lifecycleEvent(ContextConfig.java:369)\n\tat org.apache.catalina.util.LifecycleSupport.fireLifecycleEvent(LifecycleSupport.java:119)\n\tat org.apache.catalina.util.LifecycleBase.fireLifecycleEvent(LifecycleBase.java:90)\n\tat org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5173)\n\tat org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)\n\tat org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:901)\n\tat org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:877)\n\tat org.apache.catalina.core.StandardHost.addChild(StandardHost.java:633)\n\tat org.apache.catalina.startup.HostConfig.deployWAR(HostConfig.java:977)\n\tat org.apache.catalina.startup.HostConfig$DeployWar.run(HostConfig.java:1655)\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:441)\n\tat java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:138)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)\n\tat java.lang.Thread.run(Thread.java:662)\n\nTo reproduce:\n1.\tDeploy the attached application, which:\n1.1.\tHas a white space in its name;\n1.2.\tIncludes a web fragment;\n2.\tThe web app extraction is disabled (through unpackWARs=\"false\" Host attribute in the server.xml)\nNote that the fix for Bug 54249 should be first applied (to avoid other exceptions prior the questioned one).\n\nI would like to propose a small fix for this:\nA substring start position is incorrectly calculated based on a string in decoded form (e.g. \u201c/Fragment Example\u201d), while the substring itself is made on an encoded string (e.g. \u201c/localhost/Fragment%20Example/WEB-INF/classes/com\u201d). The proposed fix is simply to encode the string used for the calculations. \n\nThanks and best regards,\nPolina"}, {"count": 1, "text": "Created attachment 29810\nPatch proposal.", "bug_id": 54371, "attachment_id": 29810, "id": 164363, "time": "2013-01-03T17:31:06Z", "creator": "polina.genova@gmail.com", "creation_time": "2013-01-03T17:31:06Z", "tags": [], "is_private": false}, {"count": 2, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "id": 164432, "time": "2013-01-07T14:42:23Z", "bug_id": 54371, "creation_time": "2013-01-07T14:42:23Z", "is_private": false, "text": "For the record, Tomcat 8 is not affected by this bug as it uses a new resources implementation."}, {"count": 3, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "is_private": false, "id": 164438, "time": "2013-01-07T15:52:58Z", "bug_id": 54371, "creation_time": "2013-01-07T15:52:58Z", "text": "Thanks for the patch.\n\nThe patch has been applied to 7.0.x and will be included in 7.0.35 onwards."}, {"count": 4, "tags": [], "creator": "polina.genova@gmail.com", "attachment_id": null, "is_private": false, "id": 164440, "time": "2013-01-07T16:31:50Z", "bug_id": 54371, "creation_time": "2013-01-07T16:31:50Z", "text": "Hi, \n\nThanks for approving the patch. However I accidently noticed that the fix is not correctly working if the context root contains any of the characters:  \u2018~\u2019,\u2019&\u2019, \u2018;\u2019, \u2018+\u2019. This is because these characters are not encoded in the string returned by getURL().getFile() (unlike white space for example) while they get encoded by the URL_ENCODER.encodeURL() method. I\u2019m currently thinking how to overcome this inconformity. \n\nThanks and regards,\nPolina"}, {"count": 5, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "is_private": false, "id": 164445, "time": "2013-01-07T20:18:22Z", "bug_id": 54371, "creation_time": "2013-01-07T20:18:22Z", "text": "Fixed in r1429991"}]