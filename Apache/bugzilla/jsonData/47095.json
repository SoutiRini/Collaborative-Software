[{"count": 0, "tags": [], "creator": "douglas@openplans.org", "text": "I'm gonna apologize in advance for this bug report, because while I'll give you detailed reproduction steps, it's not a simple test case.  It will, however, ensure you reproduce the problem.\n\nI am running Apache 2.2 (every instance of 2.2 I try exhibits the same problem) with mod_php running wordpress.  Inside of wordpress, I have the Xinha4WP plugin installed (from http://oss.openplans.org/xinhatools).  In the admin screen, Safari fails to load Xinha one out of every three times.  After much testing, packet sniffing, etc., it seems that Xinha's new 'ping' causes Apache to unexpectedly close connections.\n\nWhenever the web browser is making large numbers of HEAD requests over a pipelined connection, Apache will occasionally shut down a socket without responding to all requests in the pipeline.  I've sniffed the traffic with Wireshark, and the requests are all sent, most of them are responded to, and the last three or four are completely ignored.  These ignored requests never show up in neither access_log nor error_log, they are simply ignored.\n\nI've just found another Apache instance that does not exhibit the problem, it's running itk, I'm going to test to see if that's the only variable difference that causes the problem.", "id": 126507, "time": "2009-04-24T14:02:48Z", "bug_id": 47095, "creation_time": "2009-04-24T14:02:48Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 47095, "attachment_id": null, "id": 126508, "time": "2009-04-24T14:09:57Z", "creator": "douglas@openplans.org", "creation_time": "2009-04-24T14:09:57Z", "is_private": false, "text": "Just an update, an identical Apache where the only difference is itk as opposed to prefork, and it does NOT exhibit the problem..."}, {"count": 2, "tags": [], "creator": "rpluem@apache.org", "text": "Whats your setting for MaxKeepAliveRequests?\nCan you share a network sniff that shows this behaviour?", "id": 126509, "time": "2009-04-24T14:40:56Z", "bug_id": 47095, "creation_time": "2009-04-24T14:40:56Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 47095, "text": "I'm attaching a libpcap dump file captured with Wireshark on OS X.  In this case, I'm just testing against the default installed Apache.  If you find the TCP stream that includes the GET request:\n\nGET /~douglas/wordpress/wp-admin/wp-admin.css?ver=20081210 HTTP/1.1\n\nYou'll see the problem.  As soon as there are HEAD requests in the pipeline, Apache handles the first, and shuts down on all subsequent requests.\n\nAlso, it appears that MaxKeepAliveRequests is set to 100 on this instance.", "id": 126544, "time": "2009-04-27T08:14:58Z", "creator": "douglas@openplans.org", "creation_time": "2009-04-27T08:14:58Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 47095, "text": "Created attachment 23554\nWireshark dump showing problem\n\nLook for the TCP stream starting with this request:\n\nGET /~douglas/wordpress/wp-admin/wp-admin.css?ver=20081210 HTTP/1.1", "id": 126545, "time": "2009-04-27T08:16:16Z", "creator": "douglas@openplans.org", "creation_time": "2009-04-27T08:16:16Z", "is_private": false, "attachment_id": 23554}, {"count": 5, "tags": [], "bug_id": 47095, "attachment_id": null, "id": 126548, "time": "2009-04-27T08:26:44Z", "creator": "douglas@openplans.org", "creation_time": "2009-04-27T08:26:44Z", "is_private": false, "text": "More fun info, replaying this request specifically, with the magic of telnet, and it triggers the shutdown every time:\n\nHEAD /~douglas/wordpress/wp-content/plugins/xinha4wp//xinha_core/plugins/CharacterMap/CharacterMap.js HTTP/1.1\nUser-Agent: Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_5_6; en-us) AppleWebKit/525.27.1 (KHTML, like Gecko) Version/3.2.1 Safari/525.27.1\nReferer: http://localhost/~douglas/wordpress/wp-admin/post.php?action=edit&post=21\nCache-Control: max-age=0\nAccept: */*\nAccept-Language: en-us\nAccept-Encoding: gzip, deflate\nCookie: wordpress_c7d9d1984711466c714230dfd3d92045=admin%7C1241631202%7C02f9f92f26df75dfe21a468a80afaa37; wordpress_logged_in_c7d9d1984711466c714230dfd3d92045=admin%7C1241631202%7Cc0d1a0ccf9c1d871b4386d7e170b9780; wp-settings-1=editor%3Dtinymce%26m0%3Do%26m1%3Do%26m2%3Do%26m3%3Dc%26m4%3Dc%26m5%3Do%26m6%3Do%26m7%3Do%26m8%3Do; wp-settings-time-1=1240421602; PHPSESSID=48671964231edf4f60a2c24bcb931b21\nContent-Length: 0\nConnection: keep-alive\nHost: localhost"}, {"count": 6, "tags": [], "creator": "douglas@openplans.org", "attachment_id": null, "text": "I'm sorry, please ignore the last comment about the request, I was pasting in the wrong content to telnet...", "id": 126549, "time": "2009-04-27T08:28:38Z", "bug_id": 47095, "creation_time": "2009-04-27T08:28:38Z", "is_private": false}, {"count": 7, "attachment_id": null, "bug_id": 47095, "is_private": false, "id": 126557, "time": "2009-04-27T12:27:25Z", "creator": "covener@gmail.com", "creation_time": "2009-04-27T12:27:25Z", "tags": [], "text": "Looks like Apache sends an empty response to CharacterMap.js in frame 355. \n \nThe client is waiting for the advertised body, and Apache is waiting on KeepAliveTimeout (5s).  Apache closes the connection while the client still tries to slam some requests in.\n\nTried EnableSendfile off?"}, {"count": 8, "tags": [], "bug_id": 47095, "text": "Setting EnableSendfile off has no effect, the bug is still present.  I should clarify that if I configure the client to send GET requests instead of HEAD requests, there is no problem.", "id": 126558, "time": "2009-04-27T12:39:17Z", "creator": "douglas@openplans.org", "creation_time": "2009-04-27T12:39:17Z", "is_private": false, "attachment_id": null}, {"count": 9, "tags": [], "bug_id": 47095, "attachment_id": null, "id": 126559, "time": "2009-04-27T12:51:05Z", "creator": "covener@gmail.com", "creation_time": "2009-04-27T12:51:05Z", "is_private": false, "text": "(In reply to comment #8)\n> Setting EnableSendfile off has no effect, the bug is still present.  I should\n> clarify that if I configure the client to send GET requests instead of HEAD\n> requests, there is no problem.\n\nSorry, I missed that the CharacterMap.js was a HEAD request."}, {"count": 10, "tags": [], "creator": "covener@gmail.com", "text": "(ipv6.addr eq ::1 and ipv6.addr eq ::1) and (tcp.port eq 80 and tcp.port eq 50088)\n\nIt still seems to me that the KeepAliveTimeout is 5s and the client waits just over 5 seconds between two requests.  This is why the connection is dropped.", "id": 126560, "time": "2009-04-27T12:54:16Z", "bug_id": 47095, "creation_time": "2009-04-27T12:54:16Z", "is_private": false, "attachment_id": null}, {"count": 11, "tags": [], "bug_id": 47095, "text": "The timing must be coincidental.  I just set the KeepAliveTimeout to 50, and the behavior is exactly the same.  I don't know if you saw above, but the exact same configuration with itk doesn't have problems.", "id": 126561, "time": "2009-04-27T13:01:33Z", "creator": "douglas@openplans.org", "creation_time": "2009-04-27T13:01:33Z", "is_private": false, "attachment_id": null}, {"count": 12, "tags": [], "bug_id": 47095, "text": "Also of note is that the tests I'm doing today are on OS X (hence the ::1 of IPv6) and running connected to localhost.  Last week I was also connecting to a remote linux server (on the same local network) and experiencing the same problems.  The local network was IPv4 only.", "id": 126562, "time": "2009-04-27T13:03:57Z", "creator": "douglas@openplans.org", "creation_time": "2009-04-27T13:03:57Z", "is_private": false, "attachment_id": null}, {"count": 13, "tags": [], "creator": "rpluem@apache.org", "attachment_id": null, "text": "I agree with Erics findings. Please provide a network dump that shows the same behaviour with 50s keepalive timeout. The example with 5s keepalive timeout seems to indicate a race condition that the browser / the javascript sending the request must be prepared to handle. itk may not use keepalive connections. Can you please provide an itk sniff as well?", "id": 126564, "time": "2009-04-27T13:55:28Z", "bug_id": 47095, "creation_time": "2009-04-27T13:55:28Z", "is_private": false}, {"count": 14, "tags": [], "creator": "douglas@openplans.org", "attachment_id": 23555, "text": "Created attachment 23555\nRetest with KeepAliveTimeout at 50\n\n(ipv6.addr eq ::1 and ipv6.addr eq ::1) and (tcp.port eq 54100 and tcp.port eq 80)\n\nThe above expression will show you the affected tcp stream.  I notice that the Apache Keep-Alive header says 5, even though I've specified 50 in httpd.conf.  Is there any way to be sure it takes effect?", "id": 126566, "time": "2009-04-27T14:18:25Z", "bug_id": 47095, "creation_time": "2009-04-27T14:18:25Z", "is_private": false}, {"count": 15, "attachment_id": 23556, "bug_id": 47095, "is_private": false, "id": 126567, "time": "2009-04-27T14:23:45Z", "creator": "douglas@openplans.org", "creation_time": "2009-04-27T14:23:45Z", "tags": [], "text": "Created attachment 23556\nSupersedes previous test\n\nIn this test, we see keepalive at 50, but with the same error condition\n\nFilter:\n\n(ipv6.addr eq ::1 and ipv6.addr eq ::1) and (tcp.port eq 54184 and tcp.port eq 80)"}, {"count": 16, "tags": [], "creator": "douglas@openplans.org", "attachment_id": null, "text": "I'll try to provide an itk sniff on Thursday, when I have access to the testing rig again...", "id": 126568, "time": "2009-04-27T14:24:59Z", "bug_id": 47095, "creation_time": "2009-04-27T14:24:59Z", "is_private": false}, {"count": 17, "tags": [], "bug_id": 47095, "attachment_id": null, "id": 126570, "time": "2009-04-27T14:42:11Z", "creator": "rpluem@apache.org", "creation_time": "2009-04-27T14:42:11Z", "is_private": false, "text": "Same thing as with 5s keepalive: The client does not sent a request for 50 seconds and *after* the webserver closed down the connection the client starts sending again although it confirmed the FIN received by the server (frame 442). The client  should not sent any more requests over this connection and if it does it must be prepared to handle this situation gracefully. Have you tried with a different browser? IMHO this is a bug in Safari."}, {"count": 18, "tags": [], "text": "Sorry I didn't get back until sooner.  This is the exact same behavior that Opera exhibits, and if you examine the TCP activity, you'll see that Apache never responds to the last TCP ack, which is why Safari (and Opera) never continue with the requests until after teardown.", "attachment_id": null, "bug_id": 47095, "id": 126794, "time": "2009-05-05T08:32:09Z", "creator": "douglas@openplans.org", "creation_time": "2009-05-05T08:32:09Z", "is_private": false}, {"count": 19, "tags": [], "text": "(In reply to comment #18)\n> Sorry I didn't get back until sooner.  This is the exact same behavior that\n> Opera exhibits, and if you examine the TCP activity, you'll see that Apache\n> never responds to the last TCP ack, which is why Safari (and Opera) never\n> continue with the requests until after teardown.\n\nIf you're talking about the ACK in frame 344, what kind of response is expected from Apache? \n\nhe ACK in frame 344 is the ACK from the client of the last byte of the response to the only outstanding HEAD request.\n\nAfter Apache sends the full response, and the client has ackowledged it, no subsequent request is issued until A) after KeepAliveTimeout elapses and B) Apache has sent a FIN to terminate the connection.", "attachment_id": null, "bug_id": 47095, "id": 126796, "time": "2009-05-05T10:11:42Z", "creator": "covener@gmail.com", "creation_time": "2009-05-05T10:11:42Z", "is_private": false}, {"count": 20, "tags": [], "bug_id": 47095, "attachment_id": null, "id": 126800, "time": "2009-05-05T11:48:26Z", "creator": "douglas@openplans.org", "creation_time": "2009-05-05T11:48:26Z", "is_private": false, "text": "(In reply to comment #19)\n> \n> If you're talking about the ACK in frame 344, what kind of response is expected\n> from Apache? \n> \n> he ACK in frame 344 is the ACK from the client of the last byte of the response\n> to the only outstanding HEAD request.\n> \n> After Apache sends the full response, and the client has ackowledged it, no\n> subsequent request is issued until A) after KeepAliveTimeout elapses and B)\n> Apache has sent a FIN to terminate the connection.\n\nI'm sorry, I gave you one filter, and was using another to reexamine the data (as there are two separate streams that go wrong).  You're absolutely right about the ACK in 344.  I'm not entirely sure why Opera has the same problem, and itk solves the problem...  Still... I'm kind of baffled..."}]