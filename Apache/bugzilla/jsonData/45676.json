[{"count": 0, "tags": [], "bug_id": 45676, "is_private": false, "text": "When parsing large excel files using XSSF and the event usermodel, when the needed data referred to by start and length variables refer to the end of ch[], only part of the cell value is returned.  This will either give an incorrect numeric value of a cell, or refer an incorrect position in the sharedStrings file.\nThis can be verified by using the poi.xssf.eventusermodel.examples to parse a very large sheet (several thousand rows with a couple dozen columns).  Put a conditional breakpoint on the value of the variable start when start + length is 2048 in the method \"public void characters(char[] ch, int start, int length) throws SAXException\".  This will eventually give you a value that is truncated.\nThe value of ch needs to go to 2048 characters, then back up to the last complete set of cell data rather than always cutting at exactly 2048 characters and possibly truncating cell data being referred to.\nThis is a showstopper because the results of using the XSSF eventusermodel can not be trusted when parsing large excel files.\n\nThanks.\n\nPaul Dobson", "id": 120037, "time": "2008-08-22T09:34:29Z", "creator": "pdobson@viranim.com", "creation_time": "2008-08-22T09:34:29Z", "attachment_id": null}, {"count": 1, "tags": [], "text": "Any chance you could upload a suitably large file that triggers this bug?\n\nI have a feeling it's actually a bug in the example, rather than in xssf itself, but I'll need a sample file to test this hunch", "attachment_id": null, "bug_id": 45676, "id": 120425, "time": "2008-09-07T13:04:59Z", "creator": "apache@gagravarr.org", "creation_time": "2008-09-07T13:04:59Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 45676, "attachment_id": 22550, "text": "Created attachment 22550\nLarge excel file for testing.\n\nUse this file with the attached sample code to duplicate the problem. The file has values in each cell corresponding the location of the cell.  The sample code will only work with this file or a similarly formatted excel file.", "id": 120522, "time": "2008-09-10T11:26:24Z", "creator": "pdobson@viranim.com", "creation_time": "2008-09-10T11:26:24Z", "is_private": false}, {"count": 3, "tags": [], "creator": "pdobson@viranim.com", "text": "Created attachment 22551\nJava program to test using SampleBigWorkbook.xlsx\n\nThis program is based on the sample code.  It outputs lines when it finds that the cell value from the shared strings table does not match what it should be.  It also outputs the value of the cell that was clipped to return the incorrect string from the shared strings table.  \n\nLet me know if you need anything else.\n\nThanks,\n\nPaul", "id": 120523, "time": "2008-09-10T11:36:48Z", "bug_id": 45676, "creation_time": "2008-09-10T11:36:48Z", "is_private": false, "attachment_id": 22551}, {"count": 4, "tags": [], "bug_id": 45676, "text": "I have attached a sample .xlsx file as well as a java program to test the sample file.  The program will only work on the attached .xlsx file or one with cell content laid out in a similar way.\n\nLet me know if this is what you needed.\n\nPaul", "id": 120524, "attachment_id": null, "creator": "pdobson@viranim.com", "creation_time": "2008-09-10T11:40:55Z", "time": "2008-09-10T11:40:55Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 45676, "attachment_id": null, "text": "I did some more testing.  You are right.  It seems to be a problem in the example code.  Consider the following change to endElement, and characters methods.  I don't know if this is best way to fix the problem but it seems to work in my case.\n\npublic void endElement(String uri, String localName, String name)\n                        throws SAXException {\n    // v => contents of a cell\n    // Output after we've seen the string contents\n                    \n    if(nextIsString) {\n        idx = Integer.parseInt(lastContents);\n        lastContents = sst.getSharedStringAt(idx);\n    }\n    if(name.equals(\"v\")) {\n    System.out.println(lastContents);\n    }\n     lastContents = \"\";\n}\n\npublic void characters(char[] ch, int start, int length)\n\t\t\t\tthrows SAXException {\n    lastContents += new String(ch, start, length);\n\t\t\t\n}", "id": 120548, "time": "2008-09-11T15:01:27Z", "creator": "pdobson@viranim.com", "creation_time": "2008-09-11T15:01:27Z", "is_private": false}, {"count": 6, "tags": [], "creator": "apache@gagravarr.org", "text": "Yup, your fix looks like it's the right one, thanks for figuring that out.\n\nI've fixed the documentation and example in svn, so they'll be included in the next beta", "id": 120577, "time": "2008-09-13T07:01:26Z", "bug_id": 45676, "creation_time": "2008-09-13T07:01:26Z", "is_private": false, "attachment_id": null}]