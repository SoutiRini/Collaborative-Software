[{"count": 0, "tags": [], "creator": "iknopf.bxug-1@csc-dd.de", "attachment_id": null, "text": "Stopping an application via Tomcat Manager, I get sometimes: \"removeAttribute:\nSession already invalidated\" (same on Win2k and Tru64, with J2SDK 1.4.2). After\nthis error I must restart Tomcat.\nI've never had this effect with Tomcat 4.1.24 or 5.1.19.\nStacktrace (from localhost_log....):\n2004-08-05 13:22:40 StandardContext[/manager]Manager:\nManagerServlet.stop[/csc-evis-dev]\njava.lang.IllegalStateException: removeAttribute: Session already invalidated\n\tat\norg.apache.catalina.session.StandardSession.removeAttribute(StandardSession.java:1144)\n\tat\norg.apache.catalina.session.StandardSession.removeAttribute(StandardSession.java:1119)\n\tat\norg.apache.catalina.session.StandardSession.writeObject(StandardSession.java:1401)\n\tat\norg.apache.catalina.session.StandardSession.writeObjectData(StandardSession.java:899)\n\tat org.apache.catalina.session.StandardManager.doUnload(StandardManager.java:539)\n\tat org.apache.catalina.session.StandardManager.unload(StandardManager.java:485)\n\tat org.apache.catalina.session.StandardManager.stop(StandardManager.java:687)\n\tat org.apache.catalina.core.StandardContext.stop(StandardContext.java:4474)\n\tat\norg.apache.catalina.core.StandardHostDeployer.stop(StandardHostDeployer.java:867)\n\tat org.apache.catalina.core.StandardHost.stop(StandardHost.java:1011)\n\tat org.apache.catalina.manager.ManagerServlet.stop(ManagerServlet.java:1372)\n\tat org.apache.catalina.manager.ManagerServlet.doGet(ManagerServlet.java:347)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:697)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:810)\n\tat\norg.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:237)", "id": 61573, "time": "2004-08-05T11:34:07Z", "bug_id": 30489, "creation_time": "2004-08-05T11:34:07Z", "is_private": false}, {"count": 1, "tags": [], "text": "I have similar problem when reloading context\n(http://issues.apache.org/bugzilla/show_bug.cgi?id=29093). But I have not \nmanaged to provide a test case :-(\n", "attachment_id": null, "id": 61589, "creator": "ia_rud@mail.ru", "time": "2004-08-05T15:10:58Z", "bug_id": 30489, "creation_time": "2004-08-05T15:10:58Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 30489, "attachment_id": null, "id": 62473, "time": "2004-08-25T14:32:12Z", "creator": "yoavs@computer.org", "creation_time": "2004-08-25T14:32:12Z", "is_private": false, "text": "Please provide a test case if possible.  I've never had this happen before..."}, {"count": 3, "tags": [], "bug_id": 30489, "attachment_id": null, "id": 62477, "time": "2004-08-25T15:15:28Z", "creator": "fhanik@apache.org", "creation_time": "2004-08-25T15:15:28Z", "is_private": false, "text": "Which version of Tomcat are you working with. this happens when the shutdown, \nthe manager tries to write sessions to file, but one of the  sessions is in an \ninvalid state.\n\n"}, {"count": 4, "tags": [], "bug_id": 30489, "attachment_id": null, "id": 62479, "time": "2004-08-25T16:05:18Z", "creator": "ia_rud@mail.ru", "creation_time": "2004-08-25T16:05:18Z", "is_private": false, "text": "I use Tomcat 5.0.24. I have similar problem while reloading context. There were \n200-1000 session when this problem occured.\n\nUnfortunately I am not able to provide a test case :-(\n\nI think it may be related with session expiration, but I am not sure"}, {"count": 5, "text": "Sorry, no test case, no bug...\n\nThe Servlet TCKs test that scenario and there is no failure. Re-open the bug\nonce you have a test case.\n\nThanks\n\n-- Jeanfrancois", "bug_id": 30489, "attachment_id": null, "id": 62484, "time": "2004-08-25T16:58:06Z", "creator": "jfarcand@apache.org", "creation_time": "2004-08-25T16:58:06Z", "tags": [], "is_private": false}, {"count": 6, "tags": [], "bug_id": 30489, "text": "Here is a trace from the jboss deployer which shows why this occurs. This is the\nequivalent of the tomcat manager undeploying a web app. From within the session\nwriteObject, the non-Serializable attributes are being removed. This in turn\ncauses an invalidation the session as when the removeAttribute calls isValid(),\nwhich in turn calls expire:\n\nexpire():650, org.apache.catalina.session.StandardSession, StandardSession.java\nisValid():569, org.apache.catalina.session.StandardSession, StandardSession.java\nremoveAttribute():1146, org.apache.catalina.session.StandardSession,\nStandardSession.java\nremoveAttribute():1122, org.apache.catalina.session.StandardSession,\nStandardSession.java\nwriteObject():1405, org.apache.catalina.session.StandardSession,\nStandardSession.java\nwriteObjectData():902, org.apache.catalina.session.StandardSession,\nStandardSession.java\ndoUnload():539, org.apache.catalina.session.StandardManager, StandardManager.java\nunload():485, org.apache.catalina.session.StandardManager, StandardManager.java\nstop():687, org.apache.catalina.session.StandardManager, StandardManager.java\nstop():4511, org.apache.catalina.core.StandardContext, StandardContext.java\ndestroy():1213, org.apache.catalina.core.ContainerBase, ContainerBase.java\ndestroy():4617, org.apache.catalina.core.StandardContext, StandardContext.java\ninvoke0():-1, sun.reflect.NativeMethodAccessorImpl, NativeMethodAccessorImpl.java\ninvoke():39, sun.reflect.NativeMethodAccessorImpl, NativeMethodAccessorImpl.java\ninvoke():25, sun.reflect.DelegatingMethodAccessorImpl,\nDelegatingMethodAccessorImpl.java\ninvoke():324, java.lang.reflect.Method, Method.java\ninvoke():503, org.apache.commons.modeler.BaseModelMBean, BaseModelMBean.java\ninvoke():109, org.jboss.mx.server.RawDynamicInvoker, RawDynamicInvoker.java\ninvoke():473, org.jboss.mx.server.MBeanServerImpl, MBeanServerImpl.java\nperformUndeployInternal():436, org.jboss.web.tomcat.tc5.TomcatDeployer,\nTomcatDeployer.java\n\nThe isValid() call returns false and the remove of the non-Serializable\nattribute fails:\n\n\nCaused by: java.lang.IllegalStateException: removeAttribute: Session already\ninvalidated\n        at\norg.apache.catalina.session.StandardSession.removeAttribute(StandardSession.java:1147)\n        at\norg.apache.catalina.session.StandardSession.removeAttribute(StandardSession.java:1122)\n        at\norg.apache.catalina.session.StandardSession.writeObject(StandardSession.java:1405)\n        at\norg.apache.catalina.session.StandardSession.writeObjectData(StandardSession.java:902)\n        at\norg.apache.catalina.session.StandardManager.doUnload(StandardManager.java:539)\n        at\norg.apache.catalina.session.StandardManager.unload(StandardManager.java:485)\n        at\norg.apache.catalina.session.StandardManager.stop(StandardManager.java:687)\n        at org.apache.catalina.core.StandardContext.stop(StandardContext.java:4511)\n        at org.apache.catalina.core.ContainerBase.destroy(ContainerBase.java:1213)\n        at\norg.apache.catalina.core.StandardContext.destroy(StandardContext.java:4617)\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n        at\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n        at\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n        at java.lang.reflect.Method.invoke(Method.java:324)\n        at org.apache.commons.modeler.BaseModelMBean.invoke(BaseModelMBean.java:503)\n\nThese stack traces are from the current jakarta-tomcat-5.0.30 beta source\nrelease. Any attempt to serialize an expired session that has non-Serializable\nattributes will show this problem.\n\nOne solution would be to not write out invalid sessions from within the\nStandardManager doUnload() method.\n", "id": 83721, "time": "2005-12-16T02:03:33Z", "creator": "starksm@starkinternational.com", "creation_time": "2005-12-16T02:03:33Z", "is_private": false, "attachment_id": null}, {"count": 7, "tags": [], "text": "Created attachment 17231\nA patch for tomcat-5.0.28 that works around this issue", "attachment_id": 17231, "id": 83732, "creator": "starksm@starkinternational.com", "time": "2005-12-16T07:37:34Z", "bug_id": 30489, "creation_time": "2005-12-16T07:37:34Z", "is_private": false}, {"count": 8, "attachment_id": null, "creator": "thomas2.maesing@bgs-ag.de", "text": "The workaround doesn't fix the problem of Standard Session.\n\nThe removeAttribute method calls:\n\nisValid()\n\nwhich then expires the session if necessary:\n\n        if (maxInactiveInterval >= 0) { \n            long timeNow = System.currentTimeMillis();\n            int timeIdle = (int) ((timeNow - thisAccessedTime) / 1000L);\n            if (timeIdle >= maxInactiveInterval) {\n                expire(true);\n            }\n        }\n\nas a result isvalid() returns false and an IllegalStateException is thrown\n\nwhich results in the Context reloading again, but the StandardManager is already\nin the state stopped\n\nwhich results in an IllegalStateException and the Context starts reloading again\nand so on\n\n\nTherefore you have to stop the complete server.\n\nI don't know the right solution, one may be a different state expired for the\nStandardSession", "id": 84670, "time": "2006-01-16T14:59:02Z", "bug_id": 30489, "creation_time": "2006-01-16T14:59:02Z", "tags": [], "is_private": false}, {"count": 9, "attachment_id": null, "creator": "markt@apache.org", "text": "Note that this is fixed for the 5.5.x branch in 5.5.10 onwards.\n\nI am marking this as WONTFIX since the chances of further development on the 5.0.x\nbranch are pretty slim.", "id": 93007, "time": "2006-09-05T02:39:33Z", "bug_id": 30489, "creation_time": "2006-09-05T02:39:33Z", "tags": [], "is_private": false}]