[{"count": 0, "tags": [], "bug_id": 48584, "attachment_id": null, "text": "Microsoft Windows XP Professional, 5.1.2600 Service Pack 3 Build 2600\nLocalized (Russian)\n\nSteps to reproduce:\n1. install 6.0.24, bundled with TC-Native 1.1.19\n2. define JRE_HOME variable. I used JRE 6u17.\n3. goto %CATALINA_HOME%/bin and run  startup.bat\n4. wait a while and run  shutdown.bat\n5. one of the following behaviours is observed:\na) a message is written to catalina.<date>.log after all other shutdown sequence messages:\n\n20.01.2010 5:37:28 org.apache.coyote.http11.Http11AprProtocol pause\nINFO: Pausing Coyote HTTP/1.1 on http-8080\n20.01.2010 5:37:28 org.apache.coyote.ajp.AjpAprProtocol pause\nINFO: Pausing Coyote AJP/1.3 on ajp-8009\n20.01.2010 5:37:29 org.apache.catalina.core.StandardService stop\nINFO: Stopping service Catalina\n20.01.2010 5:37:29 org.apache.coyote.http11.Http11AprProtocol destroy\nINFO: Stopping Coyote HTTP/1.1 on http-8080\n20.01.2010 5:37:29 org.apache.coyote.ajp.AjpAprProtocol destroy\nINFO: Stopping Coyote AJP/1.3 on ajp-8009\n20.01.2010 5:37:29 org.apache.tomcat.util.net.AprEndpoint$Acceptor run\nSEVERE: Socket accept failed\norg.apache.tomcat.jni.Error: ???????? ???????????? ???????? ??????? WSACancelBlockingCall.  \n\tat org.apache.tomcat.jni.Socket.accept(Native Method)\n\tat org.apache.tomcat.util.net.AprEndpoint$Acceptor.run(AprEndpoint.java:1156)\n\tat java.lang.Thread.run(Unknown Source)\n\nInability to display the localized message should be another issue. Disregard it for now.\n\n\nb) no message is printed, but a  hs_err_pid<number>.log file is created in %CATALINA_HOME%/bin.\n\n#\n# A fatal error has been detected by the Java Runtime Environment:\n#\n#  EXCEPTION_ACCESS_VIOLATION (0xc0000005) at pc=0x100045c7, pid=4396, tid=480\n#\n# JRE version: 6.0_17-b04\n# Java VM: Java HotSpot(TM) Client VM (14.3-b01 mixed mode windows-x86 )\n# Problematic frame:\n# C  [tcnative-1.dll+0x45c7]\n#\n# If you would like to submit a bug report, please visit:\n#   http://java.sun.com/webapps/bugreport/crash.jsp\n# The crash happened outside the Java Virtual Machine in native code.\n# See problematic frame for where to report the bug.\n#\n\n---------------  T H R E A D  ---------------\n\nCurrent thread (0x0b153c00):  JavaThread \"ajp-8009-Acceptor-0\" daemon [_thread_in_native, id=480, stack(0x0c780000,0x0c7d0000)]\n\nsiginfo: ExceptionCode=0xc0000005, reading address 0x0b549488\n\nRegisters:\nEAX=0x0c156298, EBX=0x0b549480, ECX=0x0c7cfdd8, EDX=0x00000004\nESP=0x0c7cfc48, EBP=0x0c7cfc58, ESI=0x0c1562d8, EDI=0x0b153c00\nEIP=0x100045c7, EFLAGS=0x00010202\n\nTop of Stack: (sp=0x0c7cfc48)\n0x0c7cfc48:   0709a7c8 0709a7d0 00000000 0c156298\n0x0c7cfc58:   0c7cfc9c 00a09e37 0b153d10 0c7cfca4\n0x0c7cfc68:   0b549480 00000000 002b0000 0c7cfa6c\n0x0c7cfc78:   7c911028 0c7cfc7c 00000000 0c7cfcb0\n0x0c7cfc88:   0709b7c0 00000000 0709a7d0 00000000\n0x0c7cfc98:   0c7cfcac 0c7cfcd4 00a02e83 0709b760\n0x0c7cfca8:   00a08269 0b549480 00000000 0c7cfcb4\n0x0c7cfcb8:   072a2148 0c7cfce4 072a23f0 00000000 \n\nInstructions: (pc=0x100045c7)\n0x100045b7:   52 e8 93 d1 ff ff 83 c4 08 8b 45 fc 85 c0 74 0d\n0x100045c7:   8b 4b 08 85 c9 74 06 50 e8 cc af 00 00 33 c0 5e \n\n\nStack: [0x0c780000,0x0c7d0000],  sp=0x0c7cfc48,  free space=319k\nNative frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)\nC  [tcnative-1.dll+0x45c7]\nj  org.apache.tomcat.jni.Socket.accept(J)J+0\nj  org.apache.tomcat.util.net.AprEndpoint$Acceptor.run()V+40\nj  java.lang.Thread.run()V+11\nv  ~StubRoutines::call_stub\nV  [jvm.dll+0xecf9c]\nV  [jvm.dll+0x1741d1]\nV  [jvm.dll+0xed167]\nV  [jvm.dll+0xed1dd]\nV  [jvm.dll+0x116290]\nV  [jvm.dll+0x1d0414]\nV  [jvm.dll+0x173e4c]\nC  [msvcr71.dll+0x9565]\nC  [kernel32.dll+0xb729]\n\nJava frames: (J=compiled Java code, j=interpreted, Vv=VM code)\nj  org.apache.tomcat.jni.Socket.accept(J)J+0\nj  org.apache.tomcat.util.net.AprEndpoint$Acceptor.run()V+40\nj  java.lang.Thread.run()V+11\nv  ~StubRoutines::call_stub\n\n(I am skipping the rest of the file...)", "id": 133748, "time": "2010-01-20T14:06:01Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2010-01-20T14:06:01Z", "is_private": false}, {"count": 1, "tags": [], "creator": "knst.kolinko@gmail.com", "attachment_id": 24870, "id": 133751, "time": "2010-01-20T14:14:10Z", "bug_id": 48584, "creation_time": "2010-01-20T14:14:10Z", "is_private": false, "text": "Created attachment 24870\nhs_err_pid5364.log"}, {"count": 2, "text": "*** Bug 48596 has been marked as a duplicate of this bug. ***", "bug_id": 48584, "is_private": false, "id": 133813, "time": "2010-01-21T19:25:54Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2010-01-21T19:25:54Z", "tags": [], "attachment_id": null}, {"count": 3, "text": "Re Bug 48596:\nI tried version 1.1.18 of windows 32-bit dll, but it also crashes in exactly the same fashion.", "bug_id": 48584, "is_private": false, "id": 133816, "time": "2010-01-21T20:24:06Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2010-01-21T20:24:06Z", "tags": [], "attachment_id": null}, {"count": 4, "tags": [], "creator": "mdeggers@gmail.com", "attachment_id": null, "id": 133832, "time": "2010-01-22T02:29:57Z", "bug_id": 48584, "creation_time": "2010-01-22T02:29:57Z", "is_private": false, "text": "(In reply to comment #1)\n> Created an attachment (id=24870) [details]\n> hs_err_pid5364.log\n\nMicrosoft Windows XP Professional 5.01.2600 Service Pack 3 US English\n\njava version \"1.6.0_18\"\nJava(TM) SE Runtime Environment (build 1.6.0_18-b07)\nJava HotSpot(TM) Client VM (build 16.0-b13, mixed mode, sharing)\n\nI never see an hs_err_pid<number>.log file in $CATALINA_HOME\\bin, but otherwise the behavior when running Tomcat 6.0.14 from catalina.bat is the same.\n\nHowever when I run Tomcat as a service, I do not see this error. I set the logging to debug, and checked $CATALINA\\logs and the event viewer. The service starts and stops without an error."}, {"count": 5, "tags": [], "bug_id": 48584, "attachment_id": null, "id": 133853, "time": "2010-01-24T01:41:27Z", "creator": "rainer.jung@kippdata.de", "creation_time": "2010-01-24T01:41:27Z", "is_private": false, "text": "I get the same result as Mark Eggers, i.e. the Exception in the log but no hotspot error file.\n\nMicrosoft Windows XP Professional\nVersion\t5.1.2600 Service Pack 3 Build 2600\nGerman\n\nJRE 1.6.0_18\n\nInterestingly in my case there is a localized message:\n\n24.01.2010 10:38:45 org.apache.tomcat.util.net.AprEndpoint$Acceptor run\nSCHWERWIEGEND: Socket accept failed\norg.apache.tomcat.jni.Error: Ein Blockierungsvorgang wurde durch einen Aufruf von WSACancelBlockingCall unterbrochen.\n        at org.apache.tomcat.jni.Socket.accept(Native Method)\n        at org.apache.tomcat.util.net.AprEndpoint$Acceptor.run(AprEndpoint.java:1156)\n        at java.lang.Thread.run(Unknown Source)\n\nSo maybe it has to do with the Russian localization?\n\nI also tried once with the security manager, same behavior."}, {"count": 6, "text": "Created attachment 24903\ncycle.bat, Calls catalina start, catalina stop in a loop", "bug_id": 48584, "is_private": false, "id": 134018, "time": "2010-01-29T05:13:15Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2010-01-29T05:13:15Z", "tags": [], "attachment_id": 24903}, {"count": 7, "tags": [], "bug_id": 48584, "attachment_id": 24904, "is_private": false, "id": 134019, "time": "2010-01-29T05:16:41Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2010-01-29T05:16:41Z", "text": "Created attachment 24904\nAprLifecycleListener_messages.patch, adds diagnostic messages to AprLifecycleListener#terminateAPR()"}, {"count": 8, "tags": [], "bug_id": 48584, "attachment_id": null, "is_private": false, "id": 134020, "time": "2010-01-29T06:02:09Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2010-01-29T06:02:09Z", "text": "1. When the crash happens, no event is recorded in the Event Viewer. I think that the crash is intercepted by JVM (that writes that crash report file) so the system does not know about it. The crash report file is written to the current working directory of java process. In my case it was %CATALINA_HOME%/bin, but it can be elsewhere. Though it might be, indeed, that 6.0.14 does not experience the crash. Thank you for the report.\n\n\n2. Attachment 24903 - a batch file, that calls catalina start/stop in a cycle with some small delays.\n\nEven if I cannot always reproduce the error with several tries, I can reproduce it with the batch.\n\n\n3. The message, that is printed by org.apache.tomcat.jni.Error, in English will be\n\"A blocking operation was interrupted by a call to WSACancelBlockingCall\"\n\nIt is the message for the WSAEINTR socket error code, and means that some function call was interrupted, see\n\nhttp://support.microsoft.com/kb/819124\n\nAfter playing a bit with the \".encoding\" option of a FileHandler (in logging.properties) I was able to read it, but, indeed, TC-Native (or APR functions that it calls) does not respect system encoding. The message was processed with direct byte->char conversion, as if were in ISO-8859-1. By setting \"1catalina.org.apache.juli.FileHandler.encoding = ISO-8859-1\" and reading the log file with windows-1251 I was able to read it. It is wrong, but it is another issue.\n\nSo, it looks that this error message is expected. What is wrong is that it generates a crash.\n\n\n4. I tested with TC 7(trunk), where I added diagnostic messages around the AprLifecycleListener.terminateAPR() method - see attachment 24904.\n\nIn the logs I see four variations of how the events happen:\n\na)\n29.01.2010 6:26:16 org.apache.coyote.ajp.AjpAprProtocol destroy\nINFO: Stopping Coyote AJP/1.3 on ajp-8009\n29.01.2010 6:26:16 org.apache.catalina.core.AprLifecycleListener terminateAPR\nINFO: Terminating APR\n29.01.2010 6:26:16 org.apache.tomcat.util.net.AprEndpoint$Acceptor run\nSEVERE: Socket accept failed\norg.apache.tomcat.jni.Error: ???????? ???????????? ???????? ??????? WSACancelBlockingCall.  \n\tat org.apache.tomcat.jni.Socket.accept(Native Method)\n\tat org.apache.tomcat.util.net.AprEndpoint$Acceptor.run(AprEndpoint.java:777)\n\tat java.lang.Thread.run(Unknown Source)\n29.01.2010 6:26:16 org.apache.catalina.core.AprLifecycleListener terminateAPR\nINFO: Terminated APR\n\nb)\n29.01.2010 6:27:16 org.apache.coyote.ajp.AjpAprProtocol destroy\nINFO: Stopping Coyote AJP/1.3 on ajp-8009\n29.01.2010 6:27:17 org.apache.tomcat.util.net.AprEndpoint$Acceptor run\nSEVERE: Socket accept failed\norg.apache.tomcat.jni.Error: ???????? ???????????? ???????? ??????? WSACancelBlockingCall.  \n\tat org.apache.tomcat.jni.Socket.accept(Native Method)\n\tat org.apache.tomcat.util.net.AprEndpoint$Acceptor.run(AprEndpoint.java:777)\n\tat java.lang.Thread.run(Unknown Source)\n29.01.2010 6:27:17 org.apache.catalina.core.AprLifecycleListener terminateAPR\nINFO: Terminating APR\n29.01.2010 6:27:17 org.apache.catalina.core.AprLifecycleListener terminateAPR\nINFO: Terminated APR\n\nc)\n29.01.2010 6:34:19 org.apache.coyote.ajp.AjpAprProtocol destroy\nINFO: Stopping Coyote AJP/1.3 on ajp-8009\n29.01.2010 6:34:19 org.apache.catalina.core.AprLifecycleListener terminateAPR\nINFO: Terminating APR\n29.01.2010 6:34:19 org.apache.catalina.core.AprLifecycleListener terminateAPR\nINFO: Terminated APR\n\nd)\n29.01.2010 6:40:45 org.apache.coyote.ajp.AjpAprProtocol destroy\nINFO: Stopping Coyote AJP/1.3 on ajp-8009\n29.01.2010 6:40:45 org.apache.catalina.core.AprLifecycleListener terminateAPR\nINFO: Terminating APR\n29.01.2010 6:40:45 org.apache.catalina.core.AprLifecycleListener terminateAPR\nINFO: Terminated APR\n29.01.2010 6:40:45 org.apache.tomcat.util.net.AprEndpoint$Acceptor run\nSEVERE: Socket accept failed\norg.apache.tomcat.jni.Error: ???????? ???????????? ???????? ??????? WSACancelBlockingCall.  \n\tat org.apache.tomcat.jni.Socket.accept(Native Method)\n\tat org.apache.tomcat.util.net.AprEndpoint$Acceptor.run(AprEndpoint.java:777)\n\tat java.lang.Thread.run(Unknown Source)\n\n\nWhen c) happens, a crash report file is generated.\n\nThe AprLifecycleListener.terminateAPR() method calls o.a.t.jni.Library#terminate() that is implemented as a method in jnilib.c.\n\nTCN_IMPLEMENT_CALL(void, Library, terminate)(TCN_STDARGS)\ncalls\n        apr_pool_destroy(p);\n        apr_terminate();\n\nso if return from\nTCN_IMPLEMENT_CALL(jlong, Socket, accept)(TCN_STDARGS, jlong sock)\nof network.c happens after that call ends, as in d), it will face a destroyed pool and terminated APR. Thus it is no wonder that EXCEPTION_ACCESS_VIOLATION is reported.\n\n5. So, the question is why \norg.apache.tomcat.util.net.AprEndpoint$Acceptor.run(AprEndpoint.java:1156)\nwas still running when AprLifecycleListener.terminateAPR() was already called."}, {"count": 9, "text": "Fixed in the SVN with r907567\n\nI'm leaving the issue open until release so we can have a confirmation", "bug_id": 48584, "is_private": false, "id": 134301, "time": "2010-02-07T23:42:23Z", "creator": "mturk@apache.org", "creation_time": "2010-02-07T23:42:23Z", "tags": [], "attachment_id": null}, {"count": 10, "text": "I still wonder, what is causing this at the Java side:\n\n(see 5. in Comment 8): what is closing those sockets and whether it is possible to wait for termination of those Acceptor threads before going on and calling Library.terminate()?\n\n\nDue to asynchronous nature of this issue, there is still a time frame in r907567 between if(tcn_global_pool) check and apr_pool_destroy(p) call when apr termination can occur.  Though that is probably negligible. It is better to go with r907567 than without.\n\nThe TCN_THROW_IF_ERR can still be called with terminated APR, but that is probably safe -- I think that apr_strerror() call (inside tcn_ThrowAPRException() that is called from TCN_THROW_IF_ERR macro) should still work even after APR is terminated.", "bug_id": 48584, "is_private": false, "id": 134318, "time": "2010-02-08T04:46:37Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2010-02-08T04:46:37Z", "tags": [], "attachment_id": null}, {"count": 11, "tags": [], "bug_id": 48584, "attachment_id": null, "id": 134319, "time": "2010-02-08T04:55:03Z", "creator": "mturk@apache.org", "creation_time": "2010-02-08T04:55:03Z", "is_private": false, "text": "It is caused by calling Library.terminate before all sockets are closed,\nChecking for tcn_global_pool is safe because it is set to NULL before\nit is actually destroyed."}, {"count": 12, "tags": [], "bug_id": 48584, "attachment_id": null, "id": 135826, "time": "2010-03-31T20:09:19Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2010-03-31T20:09:19Z", "is_private": false, "text": "The native side of this issue was fixed in r907567 and is included in TC-Native 1.1.20 onwards."}]