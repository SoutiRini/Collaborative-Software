[{"attachment_id": null, "tags": [], "bug_id": 48826, "text": "I installed 1.2.29 to fix the issue with chunked POST requests. Now I am seeing instability with ordinary POST requests.\n\nIn particular, RequestParamExample from the Tomcat 6.0.24 package crashes isapi_redirect when I press the Submit Query button, which sends a small POST request.\n\nThis is the X64 binary from http://www.apache.org/dist/tomcat/tomcat-connectors/jk/binaries/win64/jk-1.2.29/amd64 installed with IIS7.\n\nThe isapi_redirect crashes before sending anything about the request to the Tomcat.\n\nI am using https: -- I didn't think to try http: before I reverted the server to 1.2.28. If doing that would provide essential information, I can reconfigure and try it.\n\n\nThe Windows Event Log records this:\n\nFaulting application w3wp.exe, version 7.0.6002.18005, time stamp 0x49e03238, faulting module isapi_redirect.dll, version 1.2.29.0, time stamp 0x4b83cd06,\nexception code 0xc0000005, fault offset 0x00000000000066a6,\nprocess id 0x10b4, application start time 0x01cab7409f9be334.\n\nAfter a few of these failures, the IIS \"DefaultAppPool\" stops and has to be restarted.\n\n\nI have no X64 development environment available here, so I don't know much more than that.\n\nWith trace level logging, the tail end of the log is:\n\n[Fri Feb 26 19:16:17.785 2010] [4708:4148] [debug] init_ws_service::jk_isapi_plugin.c (2795): Reading extension header HTTP_TOMCATQUERY0000000010000000: (null)\n[Fri Feb 26 19:16:17.800 2010] [4708:4148] [debug] init_ws_service::jk_isapi_plugin.c (2850): Applying service extensions\n[Fri Feb 26 19:16:17.816 2010] [4708:4148] [debug] init_ws_service::jk_isapi_plugin.c (3105): Service protocol=HTTP/1.1 method=POST host=192.168.150.158 addr=192.168.150.158 name=192.168.160.15 port=443 auth= user= uri=/examples/servlets/servlet/RequestParamExample\n[Fri Feb 26 19:16:17.847 2010] [4708:4148] [debug] init_ws_service::jk_isapi_plugin.c (3117): Service request headers=12 attributes=9 chunked=no content-length=25 available=25\n[Fri Feb 26 19:16:17.863 2010] [4708:4148] [trace] init_ws_service::jk_isapi_plugin.c (3127): exit\n[Fri Feb 26 19:16:17.878 2010] [4708:4148] [trace] wc_get_worker_for_name::jk_worker.c (106): enter\n[Fri Feb 26 19:16:17.894 2010] [4708:4148] [debug] wc_get_worker_for_name::jk_worker.c (116): found a worker devlb\n[Fri Feb 26 19:16:17.910 2010] [4708:4148] [trace] wc_get_worker_for_name::jk_worker.c (118): exit\n[Fri Feb 26 19:16:17.925 2010] [4708:4148] [debug] HttpExtensionProc::jk_isapi_plugin.c (2162): got a worker for name devlb\n[Fri Feb 26 19:16:17.941 2010] [4708:4148] [trace] get_endpoint::jk_lb_worker.c (1715): enter\n[Fri Feb 26 19:16:17.972 2010] [4708:4148] [trace] get_endpoint::jk_lb_worker.c (1732): exit\n[Fri Feb 26 19:16:17.988 2010] [4708:4148] [trace] service::jk_lb_worker.c (1069): enter\n[Fri Feb 26 19:16:18.003 2010] [4708:4148] [debug] service::jk_lb_worker.c (1118): service sticky_session=1 id='empty'\n[Fri Feb 26 19:16:18.019 2010] [4708:4148] [trace] get_most_suitable_worker::jk_lb_worker.c (907): enter\n[Fri Feb 26 19:16:18.034 2010] [4708:4148] [trace] get_most_suitable_worker::jk_lb_worker.c (919): exit\n[Fri Feb 26 19:16:18.050 2010] [4708:4148] [debug] service::jk_lb_worker.c (1161): service worker=dev route=dev\n[Fri Feb 26 19:16:18.081 2010] [4708:4148] [trace] get_endpoint::jk_ajp13_worker.c (69): enter\n[Fri Feb 26 19:16:18.097 2010] [4708:4148] [trace] ajp_get_endpoint::jk_ajp_common.c (3040): enter\n[Fri Feb 26 19:16:18.112 2010] [4708:4148] [debug] ajp_get_endpoint::jk_ajp_common.c (3093): acquired connection pool slot=0 after 0 retries\n[Fri Feb 26 19:16:18.128 2010] [4708:4148] [trace] ajp_get_endpoint::jk_ajp_common.c (3096): exit\n[Fri Feb 26 19:16:18.144 2010] [4708:4148] [trace] get_endpoint::jk_ajp13_worker.c (71): exit\n[Fri Feb 26 19:16:18.159 2010] [4708:4148] [trace] ajp_service::jk_ajp_common.c (2286): enter\n[Fri Feb 26 19:16:18.175 2010] [4708:4148] [trace] ajp_marshal_into_msgb::jk_ajp_common.c (425): enter", "count": 0, "id": 134935, "time": "2010-02-27T00:55:30Z", "creator": "bgstewart@covad.net", "creation_time": "2010-02-27T00:55:30Z", "is_private": false}, {"count": 1, "tags": [], "text": "Right I can confirm the regression.\nWe'll withdraw 1.2.29 and immediately release 1.2.30", "is_private": false, "id": 134936, "creator": "mturk@apache.org", "time": "2010-02-27T08:26:44Z", "bug_id": 48826, "creation_time": "2010-02-27T08:26:44Z", "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 48826, "attachment_id": 25064, "is_private": false, "id": 134937, "time": "2010-02-27T08:51:59Z", "creator": "mturk@apache.org", "creation_time": "2010-02-27T08:51:59Z", "text": "Created attachment 25064\n1.2.30-dev for x64\n\nCould you confirm this version is OK before I tag 1.2.30\nI have confirmed, but would like your confirmation as well"}, {"attachment_id": null, "tags": [], "bug_id": 48826, "is_private": false, "count": 3, "id": 134938, "time": "2010-02-27T12:15:58Z", "creator": "mturk@apache.org", "creation_time": "2010-02-27T12:15:58Z", "text": "Use the version from\nhttp://tomcat.apache.org/dev/dist/tomcat-connectors/jk/binaries/win64/jk-1.2.30/\nThat contains a fixed version"}, {"attachment_id": null, "tags": [], "bug_id": 48826, "is_private": false, "count": 4, "id": 134943, "time": "2010-02-27T21:21:30Z", "creator": "bgstewart@covad.net", "creation_time": "2010-02-27T21:21:30Z", "text": "This one works for all the cases I had available to throw at it, with any of the three tomcat apr processors.\n\nThanks so much for fixing this so quickly.\n\n\nThe only oddity I see now is that certain GET requests to servlets cause isapi log message pairs like the following. Do you know offhand, are these likely to be a defective servlet, or configuration (improper timeouts?), or something else?\n\n[Sat Feb 27 15:30:54.827 2010] [4024:2796] [info]  ajp_service::jk_ajp_common.c (2540): (nfx1) sending request to tomcat failed (recoverable), because of server error (attempt=1)\n\n[Sat Feb 27 15:30:55.015 2010] [4024:2796] [info] ajp_send_request::jk_ajp_common.c (1490): (nfx1) did not receive END_RESPONSE, closing socket -1"}, {"count": 5, "tags": [], "creator": "rainer.jung@kippdata.de", "text": "I assume there are not other info, warn or error log messages directly around those cited. In this case I only found two possible reasons, both detected in ajp_process_callback():\n\n1) The backend tells us to send the response header stop the client, but we already were told to do that directly before:\n\n1784     case JK_AJP13_SEND_HEADERS:\n1785         {\n1786             int rc;\n1787             jk_res_data_t res;\n1788             if (ae->last_op == JK_AJP13_SEND_HEADERS) {\n1789                 /* Do not send anything to the client.\n1790                  * Backend already send us the headers.\n1791                  */\n1792                 if (JK_IS_DEBUG_LEVEL(l)) {\n1793                     jk_log(l, JK_LOG_DEBUG,\n1794                            \"Already received AJP13_SEND HEADERS\");\n1795                 }\n1796                 JK_TRACE_EXIT(l);\n1797                 return JK_AJP13_ERROR;\n1798             }\n\nor\n\n2) the backend tells us to return a body response packet to the client, although we didn't yet receive the response headers from the backend.\n\n1836     case JK_AJP13_SEND_BODY_CHUNK:\n1837         if (ae->last_op == JK_AJP13_FORWARD_REQUEST) {\n1838             /* We have just send a request but received something\n1839              * that probably originates from buffered response.\n1840              */\n1841             if (JK_IS_DEBUG_LEVEL(l)) {\n1842                 jk_log(l, JK_LOG_DEBUG,\n1843                        \"Unexpected AJP13_SEND_BODY_CHUNK\");\n1844             }\n1845             JK_TRACE_EXIT(l);\n1846             return JK_AJP13_ERROR;\n1847         }\n\nAll other possible reasons for those log messages would already log something about the precise reason directly before at least with log level info, most of the times even error.\n\nTo decide, which of the two remaining cases it is, you might temporarily increase the log level in lines 1793 and 1842 in jk_ajp_common.c from JK_LOG_DEBUG to JK_LOG_INFO (or JK_LOG_ERROR) and remove the surrounding \"if (JK_IS_DEBUG_LEVEL(l)) { ... }\".\n\nRegards,\n\nRainer", "id": 134944, "time": "2010-02-27T22:21:26Z", "bug_id": 48826, "creation_time": "2010-02-27T22:21:26Z", "is_private": false, "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 48826, "text": "Rainer, thank you for the analysis.\n\nI find that the application (Apache Axis2) sends a gratuitous \"flush\" or two after the end-of-response message. As you know, flush is sent as a zero-length send-body-chunk message. Apparently the jk sees this a protocol violation.\n\nThere must be a race in the jk between tearing down the finished request and posting received data to it, because when I single-step the Tomcat, the isapi doesn't complain about it.\n\nSince (so far) I only see this behavior on infrequent administrative requests, and it doesn't effect the results or reliability of the server, I am not going to worry about it.\n\nThanks,\nBruce", "count": 6, "id": 134947, "time": "2010-02-28T16:26:11Z", "creator": "bgstewart@covad.net", "creation_time": "2010-02-28T16:26:11Z", "is_private": false}, {"count": 7, "tags": [], "creator": "bgstewart@covad.net", "text": "Actually, Axis2 flushes and closes the stream twice on the offending operation, so there is an extra end-of-response packet out there. I think the extra packet waits in the socket, so the next request on that socket fails the first attempt. I'll file a report at their jira.", "id": 134980, "time": "2010-03-01T17:56:05Z", "bug_id": 48826, "creation_time": "2010-03-01T17:56:05Z", "is_private": false, "attachment_id": null}]