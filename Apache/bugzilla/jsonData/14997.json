[{"count": 0, "tags": [], "creator": "scott.c.pollack@wellsfargo.com", "attachment_id": null, "is_private": false, "id": 27265, "time": "2002-12-02T18:29:03Z", "bug_id": 14997, "creation_time": "2002-12-02T18:29:03Z", "text": "I'm using a normal log4j configuration:\n\nlog4j.rootCategory=INFO, A1\nlog4j.appender.A1=org.apache.log4j.RollingFileAppender \nlog4j.appender.A1.File=/var/imPceWraper.log\nlog4j.appender.A1.MaxFileSize=10KB\nlog4j.appender.A1.MaxBackupIndex=10\nlog4j.appender.A1.Append=false\nlog4j.appender.A1.layout=org.apache.log4j.PatternLayout\nlog4j.appender.A1.layout.ConversionPattern=%d [%t] %-5p %c - %m%n\n\nfor logging in my JVM.  I have a single class threaded n times, (currently 10), \neach of which logs to the same file (shown above).  It seems that when I'm \ndoing significant throughput with a low logging level (doesn't seem to happen \nin DEBUG) my log file fails to rollover, instead the new file overwrites the \nold.  Does this have something to do with a threaded class retaining a handle \non the file, thus not allowing the old file to be moved so when the new file \nstarts it just overwrites the old?\n\npls advise."}, {"count": 1, "tags": [], "bug_id": 14997, "attachment_id": null, "is_private": false, "id": 27268, "time": "2002-12-02T18:41:01Z", "creator": "ceki@apache.org", "creation_time": "2002-12-02T18:41:01Z", "text": "\nScott,\n\nWould it be possible for you to create a test-case reproducing the problem? It \nwould make it much easier for me to correct the problem. Many thanks in \nadvance, "}, {"count": 2, "tags": [], "bug_id": 14997, "attachment_id": null, "text": "For the past day I've been working on a test-case, but to no avail.  I haven't \nbeen able to reproduce it in a smaller test-case.  I did, however, just realize \na major mistake I made which i think lead me to believe it was a threading \nproblem.\n\nBecuase my program has 2 entry points, I initialize the log4j in each of these \nseparate locations.  If you look at my config I have \nlog4j.appender.A1.Append=false, which means if I intialize the 2nd log4j \ninstance while the 1st is logging, all of the log information the 1st had done \nwill be truncated.  very bad...  I've fixed this problem and I haven't seen a \nfailure to roll yet.  I'm going to continue to monitor my logging to see if the \nrolling error occurs, but i think it was just me trying to figure out what was \ngoing wrong.  sorry for logging an inaccurate bug, I went ahead and closed this \nbug, if I do find my log isn't rolling in the future (don't think i will) i can \nalways reopen this one.\n\nI would like to thank you for your extremely rapid response time after \ninitially logging my bug, I was quite impressed.\n\nthanks again,\nscott\n", "id": 27375, "time": "2002-12-04T01:29:52Z", "creator": "scott.c.pollack@wellsfargo.com", "creation_time": "2002-12-04T01:29:52Z", "is_private": false}]