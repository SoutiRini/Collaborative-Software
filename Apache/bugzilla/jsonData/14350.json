[{"count": 0, "tags": [], "bug_id": 14350, "is_private": false, "text": "Submitted by: Michael Locher <locher@iam.unibe.ch> \n\nHi all\n\n\nI had to find a way to provide a user dependent configuration file for my java \nwebstart application. the stright forward way to do so, is to handle property \nsubstitution in the LogManager initalisation.\n\n\nwebstart users can provide something like this:\n\n\n<property name=\"log4j.configuration\" value=\"file://\n${user.home}/log4j.properties\" />\n\n\nthe substitiution code was already there, so the patch is quite small.\none new method in OptionConverter and 3 renamings in LogManager.\n\n\nIn what format do you expect the patch? I have included a diff against CVS HEAD \nbelow.\n\n\nRegards\n  Michael Locher\n\n\n\n#####################################################################\n\n\ndiff -r1.37 OptionConverter.java\n20a21\n> //                 Michael Locher (locher@iam.unibe.ch)\n98a100,120\n>   /**\n>      Very similar to <code>System.getProperty</code> except\n>      that the {@link SecurityException} is hidden and substitutions are perfor\nmed.\n>\n>      @param key The key to search for.\n>      @param def The default value to return.\n>      @return the string value of the system property with applied substitution\ns, or the default\n>      value if there is no property with that key.\n>   */\n>   public\n>   static\n>   String getSubstitutedSystemProperty(String key, String def) {\n>       try {\n>         Properties systemProperties =  System.getProperties();\n>         return OptionConverter.substVars(OptionConverter.getSystemProperty(key\n, def),\n>                                          System.getProperties());\n>       } catch(Throwable e) { // MS-Java throws com.ms.security.SecurityExcepti\nonEx\n>         LogLog.debug(\"Was not allowed to read system properties.\");\n>         return def;\n>       }\n>   }\n\n\n#####################################################################\n\n\ndiff -r1.9 LogManager.java\n78,79c78,79\n<     String override =OptionConverter.getSystemProperty(DEFAULT_INIT_OVERRIDE_K\nEY,\n<                                                      null);\n---\n>     String override =OptionConverter.getSubstitutedSystemProperty(DEFAULT_INIT\n_OVERRIDE_KEY,\n>                                                                 null);\n85c85\n<       String configurationOptionStr = OptionConverter.getSystemProperty(\n---\n>       String configurationOptionStr = OptionConverter.getSubstitutedSystemProp\nerty(\n89c89\n<       String configuratorClassName = OptionConverter.getSystemProperty(\n---\n>       String configuratorClassName = OptionConverter.getSubstitutedSystemPrope\nrty(\n\n\n#####################################################################", "id": 25861, "time": "2002-11-07T13:56:59Z", "creator": "ceki@apache.org", "creation_time": "2002-11-07T13:56:59Z", "attachment_id": null}, {"count": 1, "attachment_id": null, "creator": "carnold@apache.org", "is_private": false, "id": 107040, "time": "2007-08-22T09:38:55Z", "bug_id": 14350, "creation_time": "2007-08-22T09:38:55Z", "tags": [], "text": "I can see the value of it and don't see another way to perform the substitution in Webstart, however I'm \nuncomfortable making the change this late in log4j 1.2's life.  I'd recommend specifying \nlog4j.configuratorClass and providing a class that evaluates user.home to before delegating to one of the \nother configurators."}, {"count": 2, "tags": [], "bug_id": 14350, "is_private": false, "text": "*** Bug 25107 has been marked as a duplicate of this bug. ***", "id": 107055, "time": "2007-08-22T14:24:38Z", "creator": "carnold@apache.org", "creation_time": "2007-08-22T14:24:38Z", "attachment_id": null}]