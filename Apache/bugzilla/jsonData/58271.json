[{"count": 0, "tags": [], "bug_id": 58271, "attachment_id": null, "id": 184696, "time": "2015-08-22T09:57:56Z", "creator": "a.sundararajan@gmail.com", "creation_time": "2015-08-22T09:57:56Z", "is_private": false, "text": "Based on reading 1.9.5 sources:\n\nhttp://grepcode.com/file/repo1.maven.org/maven2/org.apache.ant/ant/1.9.5/org/apache/tools/ant/util/ScriptRunnerCreator.java#ScriptRunnerCreator.createRunner%28java.lang.String%2Cjava.lang.String%2Cjava.lang.String%29\n\nhttp://grepcode.com/file/repo1.maven.org/maven2/org.apache.ant/ant/1.9.5/org/apache/tools/ant/util/LoaderUtils.java#LoaderUtils.classNameToResource%28java.lang.String%29\n\nI find that <script> task implementation uses ClassLoader.getResource is used to locate a .class resource URL. Based on whether that returns null or not, ScriptRunnerBase is created. But per documentation of ClassLoader.getResource (http://docs.oracle.com/javase/8/docs/api/java/lang/ClassLoader.html#getResource-java.lang.String-), getResource is meant for only audio/text etc. -  / A resource is some data (images, audio, text, etc) that can be accessed by class code in a way that is independent of the location of the code./ Never talks about \".class\" 'file' as a resource. Besides, reflection API may be used to check if javax.script.ScriptEngineManager class is available or not in the JDK. ClassLoader.getResource on .class resource can be avoided."}, {"count": 1, "tags": [], "bug_id": 58271, "attachment_id": null, "text": "Are you experiencing any problem with the current approach?", "id": 184703, "time": "2015-08-22T17:02:39Z", "creator": "bodewig@apache.org", "creation_time": "2015-08-22T17:02:39Z", "is_private": false}, {"count": 2, "tags": [], "creator": "a.sundararajan@gmail.com", "attachment_id": null, "id": 184741, "time": "2015-08-25T10:48:19Z", "bug_id": 58271, "creation_time": "2015-08-25T10:48:19Z", "is_private": false, "text": "(In reply to Stefan Bodewig from comment #1)\n> Are you experiencing any problem with the current approach?\n\nHi, I am working on jdk9. The behaviour of ClassLoader.getResource is expected to change in the modular (\"jigsaw\") jdk9 (http://openjdk.java.net/projects/jigsaw/). Retrieving .class resource URL from a named module will not work as expected.\n\nGiven that there is cleaner alternative - namely reflection API, it is better to use java reflection to check javax.script.ScriptEngineManager exists or not in the JDK configured. Is there any particular reason why this ClassLoader.getResource is preferred? If so, please let me know."}, {"count": 3, "tags": [], "bug_id": 58271, "attachment_id": null, "id": 184750, "creation_time": "2015-08-25T19:15:03Z", "time": "2015-08-25T19:15:03Z", "creator": "bodewig@apache.org", "text": "TBH I don't remember why the code was written the way it is and haven't been involved with writing it at all - just wanted to avoid fixing code for cosmetic reasons that wasn't broken.\n\nLooking at the code my guess is the special case for BSF that immediately before the Class.forName call is required for it to work when using BSF and the code needs a way to ensure BSF is actually there before modifying the classloader hierarchy.\n\nThe problem we should really talk about is LoaderUtils.classNameToResource which is also used inside the JUnit task.  We use it to tell people we've found multiple versions of JUnit.  Not only that, we also tell them where we've found them.  How would we achieve the same with using reflection alone?\n\nThe LoaderUtils.classExists that uses LoaderUtils.classNameToResource is only used inside the BSF classloader hack so shouldn't be a problem if we manage to fix the hack.", "is_private": false}, {"count": 4, "tags": [], "bug_id": 58271, "attachment_id": null, "id": 184758, "time": "2015-08-26T10:44:44Z", "creator": "a.sundararajan@gmail.com", "creation_time": "2015-08-26T10:44:44Z", "is_private": false, "text": "(In reply to Stefan Bodewig from comment #3)\n> TBH I don't remember why the code was written the way it is and haven't been\n> involved with writing it at all - just wanted to avoid fixing code for\n> cosmetic reasons that wasn't broken.\n> \n> Looking at the code my guess is the special case for BSF that immediately\n> before the Class.forName call is required for it to work when using BSF and\n> the code needs a way to ensure BSF is actually there before modifying the\n> classloader hierarchy.\n> \n> The problem we should really talk about is LoaderUtils.classNameToResource\n> which is also used inside the JUnit task.  We use it to tell people we've\n> found multiple versions of JUnit.  Not only that, we also tell them where\n> we've found them.  How would we achieve the same with using reflection alone?\n> \n> The LoaderUtils.classExists that uses LoaderUtils.classNameToResource is\n> only used inside the BSF classloader hack so shouldn't be a problem if we\n> manage to fix the hack.\n\nClassLoader.getResource behaviour change is *only* about classes in named modules (like javax.script.ScriptEngineManager and other JDK platform classes which will be in named modules). The use ClassLoader.getResource for other classes like junit or anything that is deployed via classpath or located via some custom class loader - is not be a problem. That should work fine as it does in the current JDK versions. So, if the use of ClassLoader.getResource for platform classes can be avoided, ant tasks would be fine."}, {"count": 5, "tags": [], "bug_id": 58271, "attachment_id": null, "id": 184830, "time": "2015-08-28T16:43:24Z", "creator": "bodewig@apache.org", "creation_time": "2015-08-28T16:43:24Z", "is_private": false, "text": "IIUC we could modify ScriptRunnerCreator so that it still uses ClassLoader.getResource if the selected engine is BSF but uses Class.forName for the javax.script engine, right?\n\nThis should address the changes Java9 and allow us to fiddle with classloaders before loading BSF at the same time."}, {"count": 6, "tags": [], "creator": "a.sundararajan@gmail.com", "text": "(In reply to Stefan Bodewig from comment #5)\n> IIUC we could modify ScriptRunnerCreator so that it still uses\n> ClassLoader.getResource if the selected engine is BSF but uses Class.forName\n> for the javax.script engine, right?\n> \n> This should address the changes Java9 and allow us to fiddle with\n> classloaders before loading BSF at the same time.\n\nYes. That should work.", "id": 184863, "time": "2015-08-31T02:59:33Z", "bug_id": 58271, "creation_time": "2015-08-31T02:59:33Z", "is_private": false, "attachment_id": null}, {"count": 7, "tags": [], "bug_id": 58271, "attachment_id": null, "text": "should be fixed with git commit 4ccca1f", "id": 186306, "time": "2015-11-07T17:44:27Z", "creator": "bodewig@apache.org", "creation_time": "2015-11-07T17:44:27Z", "is_private": false}, {"count": 8, "attachment_id": null, "bug_id": 58271, "text": "Actually this was not a bug in Ant but in Java.\n\nAt least I would interpret it in that way that this error happens with Java 9 build 114, but works fine with the latest released build 156 which is the case.\n\nSo if you liked the old code better you now have the choice to change it back. Excpet of course if the Java bug is, that it works again in the latest build. :-)", "id": 197126, "time": "2017-02-17T18:04:43Z", "creator": "Bjoern@Kautler.net", "creation_time": "2017-02-17T18:04:43Z", "tags": [], "is_private": false}, {"count": 9, "attachment_id": null, "bug_id": 58271, "text": "Thanks Bj\u00f6rn\n\nback then it seemed as if the change would be required for Java9 as the way Java wrked was about to change. Now it looks the Java0 team has changed their minds again. I'm not convinced build 156 is the final call :-)\n\nApart from that it probably is good the old code works again as it is still used for JUnit. Aftre re-reading this thread it would have failed for JUnit as well under 9b114 if junit-jar was a named module. Well, in theory the junit devs could decide to ship junit as a Java0 module in the future.\n\nFor Ant 1.10.x I'd be willing to rewrite the whole access of javax.script to not use reflection at all as we are guaranteed to find it - Ant 1.10 requires Java8 at runtime.", "id": 197135, "time": "2017-02-18T05:03:39Z", "creator": "bodewig@apache.org", "creation_time": "2017-02-18T05:03:39Z", "tags": [], "is_private": false}]