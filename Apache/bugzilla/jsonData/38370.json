[{"count": 0, "tags": [], "text": "I'm trying to have ant targets that build class diagrams using UmlGraph\n(see http://www.spinellis.gr/sw/umlgraph/) Unfortunately, class diagrams\nthat include all of the classes in a given package are not the class\ndiagrams that best tell a story about the code.  Therefore I need\nfiner-grained control over the selection of files to diagram.\n\nI can do this running javadoc from the command line, but then I need to\nconstruct the appropriate classpath.\n\nI cannot seem to get the required level of control with the ant javadoc\ntask because:\n\n * The javadoc task does not take filelists.\n\n * The javadoc task can take filesets, but a fileset only includes files\nwith a common root directory.  There seems to be no way to add filesets\ntogether without using a path.\n\n * The javadoc task throws an exception if there are any non-directory\n components to a path structure.\n\nThis last fact is illustrated in these tests.\n\nAlso, the 'packagenames' attribute is required when using a path with\nthe javadoc task, contrary to the task documentation.", "is_private": false, "id": 84952, "creator": "george.dinwiddie@wellsfargo.com", "time": "2006-01-24T20:11:42Z", "bug_id": 38370, "creation_time": "2006-01-24T20:11:42Z", "attachment_id": null}, {"count": 1, "tags": [], "creator": "george.dinwiddie@wellsfargo.com", "text": "Created attachment 17493\ntestcase illustrating the problems\n\nThe attachment contains a BuildFileTest illustrating the nature of the problem.", "id": 84953, "time": "2006-01-24T20:13:51Z", "bug_id": 38370, "creation_time": "2006-01-24T20:13:51Z", "is_private": false, "attachment_id": 17493}, {"count": 2, "tags": [], "bug_id": 38370, "attachment_id": null, "is_private": false, "id": 84954, "time": "2006-01-24T20:26:36Z", "creator": "mbenson@apache.org", "creation_time": "2006-01-24T20:26:36Z", "text": "(In reply to comment #0)\n> I cannot seem to get the required level of control with the ant javadoc\n> task because:\n> \n>  * The javadoc task does not take filelists.\n\nokay...\n> \n>  * The javadoc task can take filesets, but a fileset only includes files\n> with a common root directory.\n\nSo does a filelist.  :|\n\n>  There seems to be no way to add filesets\n> together without using a path.\n\nIf this is what you wanted to do, did you try supplying >1 nested fileset to the\njavadoc task?\n\nHTH,\nMatt"}, {"attachment_id": null, "tags": [], "bug_id": 38370, "is_private": false, "count": 3, "id": 84956, "time": "2006-01-24T20:50:25Z", "creator": "george.dinwiddie@wellsfargo.com", "creation_time": "2006-01-24T20:50:25Z", "text": "(In reply to comment #2)\n> If this is what you wanted to do, did you try supplying >1 nested fileset to the\n> javadoc task?\n\nThis would work if I only wanted to run the task for a single group of filesets,\ngenerating a single class diagram.  But I really want to pass in the refid with\nan antcall so that I only have to define the guts of the task once.  My task\ninvolves running both the javadoc task, using the UmlGraph doclent, and the exec\ntask calling GraphViz (See http://www.graphviz.org/) to turn the\ntext-description of the class diagram into a graphical version.  That would be a\nlarge amount of duplication, negating the usefulness of the capability.\n\nPlease take a look at the attached unit tests.  If the path contains any\nnon-directory elements, a BuildException is thrown.  If this is fixed, I could\nlive with that.\n\nP.S.  I think it's significant that the javadoc task had no unit tests."}, {"count": 4, "tags": [], "creator": "mbenson@apache.org", "text": "I will look into this further.  Know also, that if you can build Ant from SVN\nHEAD, there is a slew of resource collection stuff in there that should help\nyou.  If you want your path to be okay with non-directory elements, you should\nbe able to work around with this construct:\n\ndefine your path you like... <path id=\"foopath\">...</path>\nuse w/ javadoc:\n<path>\n  <restrict>\n    <path refid=\"foopath\" />\n    <type type=\"dir\"\n          xmlns=\"antlib:org.apache.tools.ant.types.resources.selectors\" />\n  </restrict>\n</path>", "id": 84957, "time": "2006-01-24T21:08:21Z", "bug_id": 38370, "creation_time": "2006-01-24T21:08:21Z", "is_private": false, "attachment_id": null}, {"count": 5, "attachment_id": null, "bug_id": 38370, "text": ">P.S.  I think it's significant that the javadoc task had no unit tests.\n\nThat will be historical. The core of ant predates junit, and as it mostly works\n(using apache gump as the integration test suite), then we can get by without it.\n\nHowever, the moment a task gets changed, if that task has no unit tests, then it\nis time to write the tests. First the \"before set\" to formalise current\nbehavior, then the new tests to go with the new functionality.", "id": 84983, "time": "2006-01-25T12:16:14Z", "creator": "stevel@apache.org", "creation_time": "2006-01-25T12:16:14Z", "tags": [], "is_private": false}, {"count": 6, "attachment_id": null, "bug_id": 38370, "text": "looks like Stefan fixed this?", "id": 85321, "time": "2006-02-01T21:09:35Z", "creator": "mbenson@apache.org", "creation_time": "2006-02-01T21:09:35Z", "tags": [], "is_private": false}, {"count": 7, "tags": [], "bug_id": 38370, "attachment_id": null, "is_private": false, "id": 85329, "time": "2006-02-02T05:51:22Z", "creator": "bodewig@apache.org", "creation_time": "2006-02-02T05:51:22Z", "text": "Sort of.\n\nOne test is still commented out (I ran out of time) and I intend to add\nResourceCollection support while I am at it.\n"}, {"attachment_id": null, "tags": [], "bug_id": 38370, "is_private": false, "count": 8, "id": 85330, "time": "2006-02-02T05:59:24Z", "creator": "mbenson@apache.org", "creation_time": "2006-02-02T05:59:24Z", "text": "(In reply to comment #7)\n> Sort of.\n> One test is still commented out (I ran out of time) and I intend to add\n> ResourceCollection support while I am at it.\n\nI didn't bother to add ResourceCollection support to anything that was file-\ncentric and took <path>s anyway, since any all-FileResource collection can be \nadded to a <path>.  I will concede that that's not necessarily intuitive, \nhowever... ;)"}, {"attachment_id": null, "tags": [], "bug_id": 38370, "is_private": false, "count": 9, "id": 87638, "time": "2006-04-06T19:37:20Z", "creator": "bodewig@apache.org", "creation_time": "2006-04-06T19:37:20Z", "text": "OK, finally got around to commit my final set of patches:\n\n* javadoc has a new nested element sourcefiles that accepts arbitrary\n  filesystem based resource collections, including filelist\n\n* non-directories in srcpath are ignored\n\n* packagesnames defaults to \"*\""}]