[{"count": 0, "tags": [], "creator": "joachimm@yahoo.com", "text": "The following directive:\n\nRequestHeader append Cookie LOGIN=user@host.com:time:hash\n\nAdds the LOGIN=user@host.com:time:hash cookie to the request,\nbut it adds it using a comma as a separator instead of a semi-colon.\nI've also tried \"add\".\n\nI am using this with a ProxyPass directive to proxy a cookie-protected\nresource. \"set\" works, only the JSESSIONID cookie gets overwritten, \nwhich breaks session handling.\n\n\nWhen Weblogic gets the request from the proxy, it has a problem with \nthe comma in the Cookie: header (from wl log):\n\n\n\"Got bad cookie header: in \ncookie 'JSESSIONID=27LOkjeKfPdPrH9bvjHka08ny4uBTkn0cCCJizzb1Y1iuYjUie3r!-\n1118611395, LOGIN=user@host.com:1056035770:hash' \n character ',' at position 75 is illegal \"\n \nThis is from javax.http.servlet.HttpServletRequest.getCookies() \n(implemented by Weblogic).\n\nThe spec says that semi-colon is the separator, but that servers should\naccept commas.  I am opening a bug with Weblogic, but it seems to me\nthat Apache HTTPD should follow the spec as close as possible.", "id": 33613, "attachment_id": null, "bug_id": 18230, "creation_time": "2003-03-21T18:04:12Z", "time": "2003-03-21T18:04:12Z", "is_private": false}, {"count": 1, "tags": [], "text": "I misread the Cookie spec, which says that the semi-colon is \nthe default for backwards compatibility.  Since comma is the \nseparator for HTTP headers, it seems that a comma is in fact \nmost correct.\n\nI'm trying to get BEA to fix it.", "attachment_id": null, "bug_id": 18230, "id": 33787, "time": "2003-03-25T20:13:48Z", "creator": "joachimm@yahoo.com", "creation_time": "2003-03-25T20:13:48Z", "is_private": false}]