[{"text": "Description:\n\nExperiencing a segmentation fault in the module mod_session_dbd, in the function dbd_remove. The segmentation fault is caused by an uninitialized function pointer session_dbd_acquire_fn.\n\nSome trial and error showed that the segmentation fault occurs when there is no entries present in the session_rec structure. No segmentation fault occurs when I add some entries.\n\nI bug seems to be related to these:\n* https://issues.apache.org/bugzilla/show_bug.cgi?id=53029\n* https://issues.apache.org/bugzilla/show_bug.cgi?id=50012\n\n\nRelevant configuration:\n\nLoadModule dbd_module modules/mod_dbd.so\nLoadModule session_module modules/mod_session.so\nLoadModule session_dbd_module modules/mod_session_dbd.so\n\nDBDriver sqlite3\nDBDParams \"/usr/local/apache2/db/webcontrollerproxy.db\"\nDBDPrepareSQL \"delete from session where key = %s\" deletesession\nDBDPrepareSQL \"update session set value = %s, expiry = %lld where key = %s\" updatesession\nDBDPrepareSQL \"insert into session (value, expiry, key) values (%s, %lld, %s)\" insertsession\nDBDPrepareSQL \"select value from session where key = %s and (expiry = 0 or expiry > %lld)\" selectsession\n\n\nGDB output:\n\nsudo gdb httpd\nGNU gdb (GDB) 7.2-ubuntu\nCopyright (C) 2010 Free Software Foundation, Inc.\nLicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.  Type \"show copying\"\nand \"show warranty\" for details.\nThis GDB was configured as \"x86_64-linux-gnu\".\nFor bug reporting instructions, please see:\n<http://www.gnu.org/software/gdb/bugs/>...\nReading symbols from /usr/local/apache2/bin/httpd...done.   \n(gdb) run -X -d /usr/local/apache2\nStarting program: /usr/local/apache2/bin/httpd -X -d /usr/local/apache2\n[Thread debugging using libthread_db enabled]\n[New Thread 0x7ffff0c99700 (LWP 7768)]\n[New Thread 0x7ffff0498700 (LWP 7769)]\n[New Thread 0x7fffefc97700 (LWP 7770)]\n[New Thread 0x7fffef496700 (LWP 7771)]\n[New Thread 0x7fffeec95700 (LWP 7772)]\n[New Thread 0x7fffee494700 (LWP 7773)]\n[New Thread 0x7fffedc93700 (LWP 7774)]\n[New Thread 0x7fffed492700 (LWP 7775)]\n[New Thread 0x7fffecc91700 (LWP 7776)]\n[New Thread 0x7fffec490700 (LWP 7777)]\n[New Thread 0x7fffebc8f700 (LWP 7778)]\n[New Thread 0x7fffeb48e700 (LWP 7779)]\n[New Thread 0x7fffeac8d700 (LWP 7780)]\n[New Thread 0x7fffea48c700 (LWP 7781)]\n[New Thread 0x7fffe9c8b700 (LWP 7782)]\n[New Thread 0x7fffe948a700 (LWP 7783)]\n[New Thread 0x7fffe8c89700 (LWP 7784)]\n[New Thread 0x7fffe8488700 (LWP 7785)]\n[New Thread 0x7fffe7c87700 (LWP 7786)]\n[New Thread 0x7fffe7486700 (LWP 7787)]\n[New Thread 0x7fffe6c85700 (LWP 7788)]\n[New Thread 0x7fffe6484700 (LWP 7789)]\n[New Thread 0x7fffe5c83700 (LWP 7790)]\n[New Thread 0x7fffe5482700 (LWP 7791)]\n[New Thread 0x7fffe4c81700 (LWP 7792)]\n[New Thread 0x7fffe4480700 (LWP 7793)]\n[New Thread 0x7fffe3c7f700 (LWP 7794)]\n[Thread 0x7ffff0c99700 (LWP 7768) exited]\n\n\n/* Here I make a request to the custom module that uses mod_session(_dbd).\n * Note that the custom module handler returns successfully.\n */\n\n\nProgram received signal SIGSEGV, Segmentation fault.\n[Switching to Thread 0x7fffe6c85700 (LWP 7788)]\n0x0000000000000000 in ?? ()\n(gdb) bt\n#0  0x0000000000000000 in ?? ()\n#1  0x00007ffff3972e60 in dbd_remove (r=0x859c20, key=0x85eae0 \"1a2448b1-8f03-4fdd-8562-f9a5c4eee525\") at mod_session_dbd.c:341\n#2  0x00007ffff39731a7 in session_dbd_save (r=0x859c20, z=0x85e498) at mod_session_dbd.c:428\n#3  0x00007ffff3d7a9fc in ap_run_session_save (r=0x859c20, z=0x85e498) at mod_session.c:37\n#4  0x00007ffff3d7b5ba in ap_session_save (r=0x859c20, z=0x85e498) at mod_session.c:209\n#5  0x00007ffff3d7bcb1 in session_output_filter (f=0x85e710, in=0x85ea80) at mod_session.c:455\n#6  0x000000000043338e in ap_pass_brigade (next=0x85e710, bb=0x85ea80) at util_filter.c:533\n#7  0x00000000004395c6 in ap_old_write_filter (f=0x85e788, bb=0x85ea80) at protocol.c:1483\n#8  0x000000000043338e in ap_pass_brigade (next=0x85e788, bb=0x85ea80) at util_filter.c:533\n#9  0x0000000000438abb in end_output_stream (r=0x859c20) at protocol.c:1210\n#10 0x0000000000438b17 in ap_finalize_request_protocol (r=0x859c20) at protocol.c:1232\n#11 0x000000000046ee4b in ap_process_async_request (r=0x859c20) at http_request.c:346\n#12 0x000000000046b271 in ap_process_http_async_connection (c=0x855e80) at http_core.c:143\n#13 0x000000000046b45d in ap_process_http_connection (c=0x855e80) at http_core.c:228\n#14 0x000000000045fa96 in ap_run_process_connection (c=0x855e80) at connection.c:41\n#15 0x00000000004797a6 in process_socket (thd=0x6d8308, p=0x855b88, sock=0x855c00, cs=0x855e08, my_child_num=0, my_thread_num=19) at event.c:917\n#16 0x000000000047bc0c in worker_thread (thd=0x6d8308, dummy=0x851110) at event.c:1744\n#17 0x00007ffff740d933 in ?? () from /usr/lib/libapr-1.so.0\n#18 0x00007ffff71cc971 in start_thread () from /lib/libpthread.so.0\n#19 0x00007ffff6f27f3d in clone () from /lib/libc.so.6\n#20 0x0000000000000000 in ?? ()\n(gdb) p session_dbd_acquire_fn\n$1 = (ap_dbd_t *(*)(request_rec *)) 0", "tags": [], "creator": "rebanerebane@gmail.com", "attachment_id": null, "count": 0, "id": 160177, "time": "2012-06-22T08:30:48Z", "bug_id": 53452, "creation_time": "2012-06-22T08:30:48Z", "is_private": false}, {"count": 1, "tags": [], "creator": "chris@cxtsoftware.com", "is_private": false, "text": "Created attachment 29117\nPatch to fix segfault\n\nThe remove method wasn't properly initializing the dbd methods. This fixes that issue by using the init method like the rest of the code.", "id": 160912, "time": "2012-07-26T03:05:05Z", "bug_id": 53452, "creation_time": "2012-07-26T03:05:05Z", "attachment_id": 29117}, {"count": 2, "tags": [], "bug_id": 53452, "text": "*** Bug 53029 has been marked as a duplicate of this bug. ***", "id": 160914, "time": "2012-07-26T03:07:46Z", "creator": "chris@cxtsoftware.com", "creation_time": "2012-07-26T03:07:46Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "creator": "christophe.jaillet@wanadoo.fr", "attachment_id": null, "is_private": false, "id": 163430, "time": "2012-11-13T20:32:03Z", "bug_id": 53452, "creation_time": "2012-11-13T20:32:03Z", "text": "Thanks for the report.\n\n\nI will apply a slightly modified version of your patch to trunk and propose it for backport in 2.4.x branch next week or so.\n\nThe applied patch includes an additional test against the return value from dbd_init. This avoids a potential NULL pointer deference if APR_EGENERAL was returned. In such a case, dbd remains unmodified.\n\n  rv = apr_dbd_pvbquery(dbd->driver\n                        ^\n                        |_____"}, {"count": 4, "tags": [], "creator": "christophe.jaillet@wanadoo.fr", "is_private": false, "text": "*** Bug 50012 has been marked as a duplicate of this bug. ***", "id": 163432, "time": "2012-11-13T20:45:42Z", "bug_id": 53452, "creation_time": "2012-11-13T20:45:42Z", "attachment_id": null}, {"count": 5, "tags": [], "creator": "christophe.jaillet@wanadoo.fr", "attachment_id": null, "id": 163433, "time": "2012-11-13T21:03:59Z", "bug_id": 53452, "creation_time": "2012-11-13T21:03:59Z", "is_private": false, "text": "Trunk patch\nhttp://svn.apache.org/viewvc?view=revision&sortby=date&revision=1408958"}, {"text": "Will be part of 2.4.4\n\nr1416583", "tags": [], "bug_id": 53452, "attachment_id": null, "count": 6, "id": 164913, "time": "2013-01-28T21:19:16Z", "creator": "christophe.jaillet@wanadoo.fr", "creation_time": "2013-01-28T21:19:16Z", "is_private": false}, {"count": 7, "tags": [], "creator": "sf@sfritsch.de", "attachment_id": null, "text": "fixed in 2.4.4", "id": 165616, "time": "2013-03-03T16:54:16Z", "bug_id": 53452, "creation_time": "2013-03-03T16:54:16Z", "is_private": false}]