[{"count": 0, "tags": [], "creator": "wrowe@apache.org", "attachment_id": null, "is_private": false, "id": 186773, "time": "2015-12-03T17:32:06Z", "bug_id": 58688, "creation_time": "2015-12-03T17:32:06Z", "text": "Bug in the behavior of httpd prior to 2.4.18 \n\nOPTIONS * HTTP/1.1\nHost: example.com\n\nHTTP/1.1 200 OK\nDate: Thu, 03 Dec 2015 15:26:16 GMT\nServer: Apache/2.4.18-dev (Unix) OpenSSL/1.0.2e-dev mod_bmx/0.9.7-dev mod_ftp/1.0.1-dev\nContent-Length: 0\n\nOPTIONS / HTTP/1.1\nHost: example.com\n\nHTTP/1.1 200 OK\nDate: Thu, 03 Dec 2015 15:26:51 GMT\nServer: Apache/2.4.18-dev (Unix) OpenSSL/1.0.2e-dev mod_bmx/0.9.7-dev mod_ftp/1.0.1-dev\nUpgrade: TLS/1.0, HTTP/1.1\nConnection: upgrade\nAllow: GET,HEAD,POST,OPTIONS,TRACE\nContent-Length: 0\nContent-Type: text/html\n\nThe missing Allow header is by-design (according to comments in http_core.c),\nthe missing Content-Type header is correct (no content delivered).\n\nThe missing Upgrade/Connection headers are incorrect, this is due to mod_ssl\nadding the upgrade headers in the fixups; however fixups are not run for any\nTRACE or OPTIONS * requests as they are bypassed in ap_process_request once\nit determines that the core map_to_storage hook indicated that neither request\nwould reside in storage.\n\nMoving this to post ReadReq hook in ssl_engine_kernel.c seems to fix this quirk,\npatch incoming.  An alternative place for such a non-storage fixup would be a \nrun-first map_to_storage hook (this seems far less intuitive)."}, {"count": 1, "tags": [], "creator": "wrowe@apache.org", "attachment_id": null, "text": "Fixed in r1717816, proposed for backport.", "id": 186775, "time": "2015-12-03T17:33:49Z", "bug_id": 58688, "creation_time": "2015-12-03T17:33:49Z", "is_private": false}]