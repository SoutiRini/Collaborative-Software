[{"count": 0, "tags": [], "creator": "john.iliffe@iliffe.ca", "attachment_id": null, "id": 164299, "time": "2012-12-31T16:40:28Z", "bug_id": 54364, "creation_time": "2012-12-31T16:40:28Z", "is_private": false, "text": "Please include a note in the documentation for mod_fcgid that it:\n\n- requires mod_unixd\n\n- mod_unixd must be loaded by LoadModule BEFORE mod_fcgid"}, {"count": 1, "tags": [], "text": "Applies to all version 2.4.", "attachment_id": null, "bug_id": 54364, "id": 164300, "time": "2012-12-31T16:41:50Z", "creator": "john.iliffe@iliffe.ca", "creation_time": "2012-12-31T16:41:50Z", "is_private": false}, {"text": "Clarification requested: There's no such thing as mod_fcgid in 2.4\n\nI know this ticket has been out there a really long time, and it looks like an easy fix if it's still relevant.", "tags": [], "creator": "rbowen@apache.org", "is_private": false, "count": 2, "id": 182428, "time": "2015-04-16T15:02:27Z", "bug_id": 54364, "creation_time": "2015-04-16T15:02:27Z", "attachment_id": null}, {"text": "Yes, I'm picking nits. There is, of course, http://httpd.apache.org/mod_fcgid/mod/mod_fcgid.html which is outside of the main httpd tree.\n\nJust trying to clarify if you're talking about that, or about mod_proxy_fcgi or something else.", "tags": [], "bug_id": 54364, "attachment_id": null, "count": 3, "id": 182429, "time": "2015-04-16T15:08:46Z", "creator": "rbowen@apache.org", "creation_time": "2015-04-16T15:08:46Z", "is_private": false}, {"text": "Created attachment 33429\nAdded ref to mod_unixd in the summary\n\nJust be sure I double-checked the source code:\n\ngrep -rni unixd *\ndocs/manual/mod/mod_fcgid.xml:61:    <p><module>mod_fcgid</module> requires <module>mod_unixd</module> to be loaded before itself\nmodules/fcgid/fcgid_mutex_unix.c:66:#include \"unixd.h\"\nmodules/fcgid/fcgid_mutex_unix.c:70:#define ap_unixd_set_global_mutex_perms unixd_set_global_mutex_perms\nmodules/fcgid/fcgid_mutex_unix.c:127:    rv = ap_unixd_set_global_mutex_perms(*mutex);\nmodules/fcgid/fcgid_pm_unix.c:18:#include \"unixd.h\"\nmodules/fcgid/fcgid_pm_unix.c:38:#include \"mod_unixd.h\"\nmodules/fcgid/fcgid_pm_unix.c:42:#define ap_unixd_config unixd_config\nmodules/fcgid/fcgid_pm_unix.c:43:#define ap_unixd_setup_child unixd_setup_child\nmodules/fcgid/fcgid_pm_unix.c:196:        if (ap_unixd_config.user_name[0] == '#') {\nmodules/fcgid/fcgid_pm_unix.c:199:            uid_t uid = atoi(&ap_unixd_config.user_name[1]);\nmodules/fcgid/fcgid_pm_unix.c:212:            name = ap_unixd_config.user_name;\nmodules/fcgid/fcgid_pm_unix.c:221:        if (setgid(ap_unixd_config.group_id) == -1) {\nmodules/fcgid/fcgid_pm_unix.c:224:                         (unsigned) ap_unixd_config.group_id);\nmodules/fcgid/fcgid_pm_unix.c:229:        if (initgroups(name, ap_unixd_config.group_id) == -1) {\nmodules/fcgid/fcgid_pm_unix.c:233:                         (unsigned) ap_unixd_config.group_id);\nmodules/fcgid/fcgid_pm_unix.c:242:/* Base on ap_unixd_setup_child() */\nmodules/fcgid/fcgid_pm_unix.c:250:    if (!geteuid() && (seteuid(ap_unixd_config.user_id) == -1)) {\nmodules/fcgid/fcgid_pm_unix.c:253:                     (long) ap_unixd_config.user_id);\nmodules/fcgid/fcgid_pm_unix.c:288:        if (ap_unixd_config.suexec_enabled) {\nmodules/fcgid/fcgid_pm_unix.c:296:            ap_unixd_setup_child();\nmodules/fcgid/fcgid_pm_unix.c:392:                      ap_unixd_config.user_id, -1) < 0) {\nmodules/fcgid/fcgid_proc_unix.c:36:#include \"unixd.h\"\nmodules/fcgid/fcgid_proc_unix.c:48:#define ap_unixd_config unixd_config\nmodules/fcgid/fcgid_proc_unix.c:79:    if (!ap_unixd_config.suexec_enabled) {\nmodules/fcgid/fcgid_proc_unix.c:143:    if (!ap_unixd_config.suexec_enabled\nmodules/fcgid/fcgid_proc_unix.c:187:    if (setuid(ap_unixd_config.user_id) == -1) {\nmodules/fcgid/fcgid_proc_unix.c:188:        log_setid_failure(\"mod_fcgid child\", \"uid\", ap_unixd_config.user_id);\nmodules/fcgid/fcgid_proc_unix.c:259:    if (ap_unixd_config.suexec_enabled) {\nmodules/fcgid/fcgid_proc_unix.c:305:        if (chown(unix_addr.sun_path, ap_unixd_config.user_id, -1) < 0) {\nmodules/fcgid/fcgid_proc_unix.c:378:    if (ap_unixd_config.suexec_enabled) {\nmodules/fcgid/fcgid_proc_unix.c:412:    if (ap_unixd_config.suexec_enabled && seteuid(0) != 0) {\nmodules/fcgid/fcgid_proc_unix.c:421:    if (ap_unixd_config.suexec_enabled && seteuid(ap_unixd_config.user_id) != 0) {\nmodules/fcgid/fcgid_proc_unix.c:425:        log_setid_failure(\"mod_fcgid PM\", \"effective uid\", ap_unixd_config.user_id);\n\nAttached a patch to add this information in the Summary.", "tags": [], "creator": "toscano.luca@gmail.com", "is_private": false, "count": 4, "id": 187591, "time": "2016-01-13T04:06:17Z", "bug_id": 54364, "creation_time": "2016-01-13T04:06:17Z", "attachment_id": 33429}, {"count": 5, "tags": [], "text": "Created attachment 33439\nAdded ref to mod_unixd in the summary + resolved broken links\n\nResolved also broken links with hrefs (full URL) as discussed in the mailing list. Since this project is separate from the main httpd-trunk we can't leverage custom tags correctly.", "attachment_id": 33439, "bug_id": 54364, "id": 187649, "time": "2016-01-14T06:16:11Z", "creator": "toscano.luca@gmail.com", "creation_time": "2016-01-14T06:16:11Z", "is_private": false}, {"count": 6, "tags": [], "creator": "toscano.luca@gmail.com", "attachment_id": 33461, "id": 187809, "time": "2016-01-18T20:05:17Z", "bug_id": 54364, "creation_time": "2016-01-18T20:05:17Z", "is_private": false, "text": "Created attachment 33461\nAdded ref to mod_unixd in the summary + resolved broken links\n\nMoved all the links from http:// or https:// to // to let the browser to choose the protocol."}, {"count": 7, "tags": [], "text": "Patch applied, closing this bug. Please re-open it if something is missing!\n\nLuca", "attachment_id": null, "bug_id": 54364, "id": 187950, "time": "2016-01-25T06:15:21Z", "creator": "toscano.luca@gmail.com", "creation_time": "2016-01-25T06:15:21Z", "is_private": false}]