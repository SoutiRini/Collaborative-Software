[{"count": 0, "tags": [], "bug_id": 38369, "text": "I use an Apache as a reverse proxy to send request to an other Apache Web server.\nWhen I close the connection (whith a clean socket shutdown or not), the reverse\nproxy does not break the connection with the target web server.\nIt's really a problem when a web application use the broken connection to detect\na job cancellation. And i think this could be used for denial of service attacks.", "id": 84949, "time": "2006-01-24T17:50:59Z", "creator": "claire.chauvet@neolane.net", "creation_time": "2006-01-24T17:50:59Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 38369, "attachment_id": null, "is_private": false, "id": 92680, "time": "2006-08-29T17:19:31Z", "creator": "christian_boitel@yahoo.fr", "creation_time": "2006-08-29T17:19:31Z", "text": "I have posted an issue to APR team which is related to this one. \nhttp://issues.apache.org/bugzilla/show_bug.cgi?id=40348\n\nI would actually expect mod_proxy to keep as much as smax connections opened \nbut it will not: under normal load situation, pool to backend web server \nremain at the size of the maximum used.\n=> always closing connections would lead to poor performance \n\nFor http connections, a quick workaround is to disabled keepalive connections \non the backend servers: better is to configure keepalive connections with \nreasonable timeout."}, {"count": 2, "tags": [], "bug_id": 38369, "text": "Connection is defined in RFC2616 as a hop-by-hop header.  Thus the transaction\nbetween client and proxy is independent of that between proxy and backend.\n\nReclassifying this as an enhancement request, to be able to control behaviour.", "id": 107879, "time": "2007-09-08T15:37:01Z", "creator": "nick@webthing.com", "creation_time": "2007-09-08T15:37:01Z", "is_private": false, "attachment_id": null}]