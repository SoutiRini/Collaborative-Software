[{"count": 0, "tags": [], "bug_id": 24333, "attachment_id": null, "id": 46635, "time": "2003-11-02T19:19:22Z", "creator": "haschwar@gmx.de", "creation_time": "2003-11-02T19:19:22Z", "is_private": false, "text": "When you have a page named with a german umlaut, Apache 2.0.x isn't able to\nserve this page. You get an error-message:\n403 - access denied.\n\nOS: Windows NT, 2000, probably XP (English and german OS).\n    I don't know if this problem is also seen on non-Windows OS.\ntested Apache-Versions: 2.0.42 - 2.0.48\nHow to test: Rename an existing html-file in your Documentroot to \"\u00e4.html\".\nOpen a browser on your server-PC (both following versions doesn't work):\nhttp://localhost/\u00e4.html\nhttp://localhost/%E4.html"}, {"count": 1, "tags": [], "bug_id": 24333, "attachment_id": null, "id": 46981, "time": "2003-11-07T12:08:13Z", "creator": "haschwar@gmx.de", "creation_time": "2003-11-07T12:08:13Z", "is_private": false, "text": "I searched RFCs for using national characters in URLs like \u00e4,\u00f6,\u00fc and if it's\nallowed to encode them in an http url.\n\nI found that there could be a problem in Apache2 regarding RFC specification -\nbut I did not found anything about national encoded characters \"can\" or \"must\nnot\" be used in http URLs.\n\nRFC2396 [7] 2.1\nSummary: Special Characters that are not represented in the octet for the\nUS-ASCII code require some way of identifying the charset used.\n\nPart of the referenced RFC2277 [2] 3.1:\n\"All protocols MUST identify, for all character data, which charset is\nin use.\"\n\nEven if there is no problem regarding RFC specification, the error message is\nmisleading.\n%E4.html - access denied -> wrong message\n%E4.html - not found     -> could be the correct message if\n                            national characters are not allowed.\n\"access denied\" also occurs if \u00e4.html does not exist.\nCompared with Apache1: Apache1 is able to send %E4.html back to the browser."}, {"count": 2, "tags": [], "bug_id": 24333, "attachment_id": null, "text": "It's a problem on windows. If you use non-ascii characters in URLs, you have to\nencode the as UTF-8 and then apply url-encoding. %E4 will be mapped to '\u00e4' and\nnot match the requirements of an unicode filesystem.\nBTW: It's recommend to use url encoded UTF-8 all the time in URLs, since there\nis no way to declare the charset in URLs, \n\nThe 403 comes from the translator uri -> filename (since no valid filename, is\nit not found or is it forbidden? ;-). In newer versions of apache it should\nwrite an entry into the errorlog according to this failure.", "id": 46983, "time": "2003-11-07T12:21:33Z", "creator": "nd@perlig.de", "creation_time": "2003-11-07T12:21:33Z", "is_private": false}, {"count": 3, "text": "You told me:\n%E4 will be mapped to '\u00e4' and not match the requirements of an unicode filesystem.\n\nBut in the unicode character set '\u00e4' is a valid chacter and is mapped to %E4.\n\nYou asked about the error message:\n'access denied' is always used by Apache 2 when trying to get an url containing\n%E4. It doesn't matter if the file exists or not.\nThe access to the file isn't forbidden - as I described Apache 1 is able to\nserve it (on the same server with system-rights).\n\nUsing loglevel 'debug' or loglevel 'emerg' I can only find following entry\nregarding the problem:\naccess.log:  ... \"GET /%E4.html HTTP/1.1\" 403 1153\nerror.log:   -\n\nPerhaps it's the same problem described in bug 15133 - but this belongs to Axis.", "creator": "haschwar@gmx.de", "attachment_id": null, "id": 47099, "time": "2003-11-10T09:18:16Z", "bug_id": 24333, "creation_time": "2003-11-10T09:18:16Z", "tags": [], "is_private": false}, {"count": 4, "tags": [], "creator": "nd@perlig.de", "attachment_id": null, "id": 47103, "time": "2003-11-10T09:53:43Z", "bug_id": 24333, "creation_time": "2003-11-10T09:53:43Z", "is_private": false, "text": "I said also, that it's recommended to use url encoded UTF-8 all the time in\nURLs, since there is no way to declare the charset in URLs\n\n%E4 is NOT URL-encoded UTF-8. %C3%A4 is."}, {"count": 5, "tags": [], "bug_id": 24333, "attachment_id": null, "text": "Ok, but we have to find a working solution on both Apache-Versions.\n\nApache1:\n.../%E4.html    -> \u00e4.html is displayed\n.../%C3%A4.html -> \u00c3\u00a4.html not found\n\nApache2:\n.../%E4.html    -> access denied\n.../%C3%A4.html -> \u00e4.html is displayed\n\nFor 'encoding' tests, I used IE 5.5, IE6 and Mozilla 1.5 on Win32:\nIE:      \u00e4.html    -> \\xE4.html\nMozilla: \u00e4.html    -> %E4.html\nApache1: %E4.html  -> \u00e4.html\n         \\xE4.html -> \u00e4.html\nApache2: %E4.html  -> access denied\n         \\xE4.html -> access denied\n\nApache2 wants UTF-8 Encoding - no current and widely known browser supports this\nin the initial configuration.\nIt would be a lot easier if Apache2 would support unicode like Apache1 and the\ncurrent browsers. Without unicode support Apache2 is impossible to use with\ngerman sites, expecially having more than 100 WEB-authors not knowing this problem.", "id": 47109, "time": "2003-11-10T12:16:05Z", "creator": "haschwar@gmx.de", "creation_time": "2003-11-10T12:16:05Z", "is_private": false}, {"count": 6, "tags": [], "bug_id": 24333, "attachment_id": null, "id": 47273, "time": "2003-11-12T21:54:50Z", "creator": "nd@perlig.de", "creation_time": "2003-11-12T21:54:50Z", "is_private": false, "text": "I don't understand, what you expect for URLs containing non-ascii characters.\nSuch URLs are invalid. So the behaviour of the client and the server is\n_undefined_ (read: everything can happen)."}, {"count": 7, "tags": [], "bug_id": 24333, "attachment_id": null, "id": 47289, "time": "2003-11-13T07:57:05Z", "creator": "haschwar@gmx.de", "creation_time": "2003-11-13T07:57:05Z", "is_private": false, "text": ">> I don't understand, what you expect...\n\nWhat I expect then using an 'invalid' character like %E4 in an URL:\nNot an 'undefined' reaction of the server, but\none of the following solutions:\n\n- get a correct error message\n  Not:    'access denied'\n  Better: 'File not found' or 'invalid URL'.\n\n- add unicode-support to Apache2.\n  Either serve UTF-8 and Unicode files every time (like MS-IIS)\n  or set a switch in a conf-file to specify which of both methods to use:\n  special_character_handling = UTF-8 | Unicode | Both\n  to be compatible with Apache1 and the various browsers.\n\n  "}, {"count": 8, "tags": [], "bug_id": 24333, "is_private": false, "id": 47299, "attachment_id": null, "creator": "nd@perlig.de", "creation_time": "2003-11-13T09:56:35Z", "time": "2003-11-13T09:56:35Z", "text": "%E4 is not an invalid character. %E4 is a sequence of 3 characters, representing\nthe octet with value of 0xe4. No charset information given. Apache 2 which does\nsupport Unicode on Windows cannot map it to one charset. A correct\nrepresentation of teh german a umlaut is %C3%A4 (as already said). This sequence\nrepresents two octets which are valid UTF-8 encoding for the german a umlaut in\nUnicode. The underlying filesystem (NTFS) can handle it. That's it.\n\nYour distinction between UTF-8 and Unicode makes no sense, because UTF-8 is a\nrepresentation of Unicode."}]