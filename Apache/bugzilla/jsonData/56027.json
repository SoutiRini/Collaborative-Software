[{"count": 0, "tags": [], "bug_id": 56027, "attachment_id": null, "text": "There are two problems here.\n\n#1) A RHEL6 box can be configured to boot in FIPS 140 mode automatically, and the underlying openssl packages will detect this when they initialize.  If Tomcat is configured to use the APR listener with 'FIPSMode=\"on\"' set, then the APRLifecycleListener in initializeSSL calls down to TCN to explicitly do a fipsModeSet.  However, *if* a RHEL box is configured to be in fips mode at boot then this call will fail in the openssl libraries, where it claims that fips mode is already set. Looking at the openssl source (openssl-1.0.0-27.el6.src.rpm) the FIPS_mode_set() call does not allow for being 'set' more than once.  Putting a check in TCN src/ssl.c in the fipsModeCheck() to see if the mode is already set solves this one.\n\n#2) Second issue is in the SSL_TMP_KEYS_INIT macro (called from the TCN src/ssl.c initialize() method) looks like it trying to pre-initialize a 512 bit RSA key.  This key appears to be invalid (the underlying ssl_tmp_key_init_rsa() call fails), and this winds up with the entire initialize code throwoing an error about this platform having an unsupported function and exiting.  Deleting the 512 RSA init line solves this one.\n\nNot sure the best solution for #2.  Discussing with a few folks here indicated that a 512 bit RSA key is invalid for FIPS mode, so perhaps this call needs to be wrapped in a 'if (FIPS_Mode()==0)' check.  Out of my depth there on the best solution.\n\nMy initial debug wound up exposing the FIPS_Mode() call thru JNI so the AprLifecycleListner class could check this and display an intelligent message, but this would involve changes to both TC6/7(/8?) as well as TCN, and may not be worth that extra involvement.", "id": 172448, "time": "2014-01-17T13:48:54Z", "creator": "rsanders@trustedcs.com", "creation_time": "2014-01-17T13:48:54Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 56027, "attachment_id": null, "is_private": false, "id": 172449, "time": "2014-01-17T13:50:15Z", "creator": "rsanders@trustedcs.com", "creation_time": "2014-01-17T13:50:15Z", "text": "Marked as major due to a customer requirement to have their RHEL6 boxes running in FIPS mode at boot.  They are temporarily relaxing this while we have worked on determining the problem."}, {"count": 2, "tags": [], "text": "I'm putting this back to \"normal\". While your customer may consider this high-priority, and while one of the Tomcat team may fix this quickly, \"major\" would probably be considered a bug that would require an immediate fix-and-release.", "is_private": false, "id": 172457, "creator": "chris@christopherschultz.net", "time": "2014-01-17T16:29:01Z", "bug_id": 56027, "creation_time": "2014-01-17T16:29:01Z", "attachment_id": null}, {"count": 3, "tags": [], "text": "This bug will likely require (at least) two separate patches: one for avoiding double-entry into FIPS mode, one for changing the key sizes used, and possibly one for creating a native-wrapper around the FIPS_mode function call so Java can inspect the current status and take appropriate action.\n\nI think the best situation would be to allow the user to specify more than simply \"on\" versus \"off\" for the FIPSmode configuration attribute: it would be nice to use something like \"on\" to enable FIPS mode by calling FIPS_mode_set if necessary, \"require\" to require that FIPS mode already be enabled (or throw an exception and refuse to start the connector), or maybe a third option like \"enter\" which would attempt to enter FIPS mode and fail if FIPS mode were already enabled (this is the current behavior).", "attachment_id": null, "id": 172458, "creator": "chris@christopherschultz.net", "time": "2014-01-17T16:33:10Z", "bug_id": 56027, "creation_time": "2014-01-17T16:33:10Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 56027, "is_private": false, "id": 172459, "attachment_id": null, "creator": "rsanders@trustedcs.com", "creation_time": "2014-01-17T16:40:50Z", "time": "2014-01-17T16:40:50Z", "text": "Looking at the openssl source for my box a double call to FIPS_mode_set to *enable* FIPS triggers an error - including setting the internal fips_selftest_fail flag to 1 indicating a failure.\n\nUnderstood on the severity change - somewhat surprised that I can't find any real reports of this failure in general web searches or on RH's pages.\n\nSome additional comments...\n \nLooking for a boot entry does appear to be a RHEL 'addition', but the source also indicates you can set an environment variable to accomplish the same thing (OPENSSL_FORCE_FIPS_MODE). This is in the source code of crypto/o_init.c (after applying RH patches).  The /proc/sys/crypto/fips_enabled trigger file is checked in this file also.\n\nLooking deeper at the AprLifecycleListener initializeSSL code it does call the TCN SSL.initialize code, which drops down into some of the openssl calls that look like bounce through the various init routines including the code in o_init.c that does the FIPS startup.  So *if* the underlying platform has the fs/env check a call to FIPS_Mode() prior to calling FIPS_mode_set() in  TCN fipsModeSet() should detect this.\n\nProposed fix - in TCN src/ssl.c fipsModeSet() routine, call FIPS_mode() before calling FIPS_mode_set() to see if we're already in fips mode.  If so, just return 1, otherwise attempt to set to FIPS mode.  There is no way that I know of to get an intelligent message back through the JNI without other changes, so if a status messages of \"Already in FIPS mode\" would be desirable the FIPS_mode() routine will need to be exposed through JNI and checked from the AprLifecycleListener code before calling fipsModeSet."}, {"count": 5, "tags": [], "bug_id": 56027, "is_private": false, "id": 172461, "attachment_id": null, "creator": "chris@christopherschultz.net", "creation_time": "2014-01-17T16:44:16Z", "time": "2014-01-17T16:44:16Z", "text": "(In reply to Rob Sanders from comment #4)\n> Proposed fix - in TCN src/ssl.c fipsModeSet() routine, call FIPS_mode()\n> before calling FIPS_mode_set() to see if we're already in fips mode.  If so,\n> just return 1, otherwise attempt to set to FIPS mode.\n\nSee my comment above for the behavior I'd like to see, which is incompatible with this proposal.\n\n> There is no way that\n> I know of to get an intelligent message back through the JNI without other\n> changes, so if a status messages of \"Already in FIPS mode\" would be\n> desirable the FIPS_mode() routine will need to be exposed through JNI and\n> checked from the AprLifecycleListener code before calling fipsModeSet.\n\nThis was my plan."}, {"count": 6, "tags": [], "bug_id": 56027, "attachment_id": null, "is_private": false, "id": 172464, "time": "2014-01-17T16:54:28Z", "creator": "chris@christopherschultz.net", "creation_time": "2014-01-17T16:54:28Z", "text": "Added fipsModeGet JNI implementation in both tcnative trunk and tcnative 1.1.x branch. Will be in tcnative 1.1.30."}, {"count": 7, "tags": [], "bug_id": 56027, "is_private": false, "id": 172465, "attachment_id": null, "creator": "rsanders@trustedcs.com", "creation_time": "2014-01-17T16:58:15Z", "time": "2014-01-17T16:58:15Z", "text": "Concur on comment 3 - had dueling edits going on.\nFor our customer at the moment I'm implementing the TCN only fix.  Once the next TC6 and TCN releases are out we'll move to them.\n\nThanks Chris."}, {"count": 8, "tags": [], "creator": "chris@christopherschultz.net", "attachment_id": 31226, "is_private": false, "id": 172467, "time": "2014-01-17T17:49:03Z", "bug_id": 56027, "creation_time": "2014-01-17T17:49:03Z", "text": "Created attachment 31226\nProposed patch against Tomcat-trunk\n\nFeel free to adapt this patch for Tomcat 6."}, {"count": 9, "tags": [], "bug_id": 56027, "attachment_id": null, "id": 173735, "time": "2014-03-10T22:33:46Z", "creator": "ben.mason@viasat.com", "creation_time": "2014-03-10T22:33:46Z", "is_private": false, "text": "(In reply to Christopher Schultz from comment #8)\n> Created attachment 31226 [details]\n> Proposed patch against Tomcat-trunk\n> \n> Feel free to adapt this patch for Tomcat 6.\n\nChris-\n\nI am having the same issue as I need to boot my SLES 11 box in FIPS mode. I am using Tomcat 7.0.52. Can you tell in which, if any, Tomcat 7 release this patch will be included?\n\nThanks.\n-Ben"}, {"count": 10, "tags": [], "bug_id": 56027, "text": "We need a tcnative release before Tomcat itself can be patched.\n\nIf you grab the current tcnative 1.1.x branch, it will have what you need. If you then apply this patch to 7.0.52 (which is quite easy to re-compile yourself, actually) and deploy the two, you should be good to go.\n\nI'm about to update the Java patch a bit to fix a minor bug and to address some of the concerns raised by some other devs. You might want to apply the new patch instead.", "id": 173939, "time": "2014-03-19T14:25:13Z", "creator": "chris@christopherschultz.net", "creation_time": "2014-03-19T14:25:13Z", "is_private": false, "attachment_id": null}, {"count": 11, "tags": [], "bug_id": 56027, "text": "Created attachment 31406\nPatch against Tomcat trunk\n\nUpdated patch with improved documentation and a small bug fix for ensuring that FIPS mode was successfully entered.", "id": 173940, "time": "2014-03-19T14:36:06Z", "creator": "chris@christopherschultz.net", "creation_time": "2014-03-19T14:36:06Z", "is_private": false, "attachment_id": 31406}, {"count": 12, "tags": [], "bug_id": 56027, "text": "(In reply to Christopher Schultz from comment #10)\n> We need a tcnative release before Tomcat itself can be patched.\n> \n> If you grab the current tcnative 1.1.x branch, it will have what you need.\n> If you then apply this patch to 7.0.52 (which is quite easy to re-compile\n> yourself, actually) and deploy the two, you should be good to go.\n> \n> I'm about to update the Java patch a bit to fix a minor bug and to address\n> some of the concerns raised by some other devs. You might want to apply the\n> new patch instead.\n\nThanks, Chris. I can surely do that. However, that will not fix problem #2, correct? I am seeing that on SLES 11 as well. Do you need someone to contribute a fix for #2, or is someone working on that?", "id": 173946, "time": "2014-03-19T20:39:39Z", "creator": "ben.mason@viasat.com", "creation_time": "2014-03-19T20:39:39Z", "is_private": false, "attachment_id": null}, {"count": 13, "tags": [], "bug_id": 56027, "attachment_id": null, "id": 173981, "time": "2014-03-20T19:09:31Z", "creator": "chris@christopherschultz.net", "creation_time": "2014-03-20T19:09:31Z", "is_private": false, "text": "(In reply to Ben Mason from comment #12)\n> ...that will not fix problem #2,\n> correct? I am seeing that on SLES 11 as well. Do you need someone to\n> contribute a fix for #2, or is someone working on that?\n\nI'm out of my element, there. If you've got a proposal and are willing to work on a patch, please do so. The assertion that 512-bit RSA is not valid for FIPS mode certainly seems reasonable. AFAIK, there's nothing in FIPS that established an *upper* limit on key size, or that the implementation must actually use clearly inferior algorithms."}, {"count": 14, "tags": [], "bug_id": 56027, "attachment_id": null, "is_private": false, "id": 173987, "time": "2014-03-20T20:11:58Z", "creator": "rsanders@trustedcs.com", "creation_time": "2014-03-20T20:11:58Z", "text": "I remember reading some of the SSL docs that certain key lengths may be invalid for regular use, they are valid for key agreement/establishment.  Quoting from the somewhat confusing section 2.6.2 of the OpenSSL FIPS140 Userguide (v2.0) PDF:\n\n===\nAlgorithms Available in FIPS Mode\nOnly the algorithms listed in tables 4a and 4b of the Security Policy are allowed in FIPS mode.\nNote that Diffie-Hellman and RSA are allowed in FIPS mode for key agreement and key establishment even though they are \u201cNon-Approved\u201d for that purpose. RSA for sign and verify is \u201cApproved\u201d and hence also allowed, along with all the other Approved algorithms listed in that table\n===\n\nRather than hardcode in TCN what approved keys are, is there a way to ask the underlying openssl implementation what *it* thinks are acceptable?  I don't have an answer for that.  What I did to make things work back in January was comment out the 512 bit RSA key generation in TCN before building (along with adding a check to see if FIPS mode was already set)."}, {"id": 174497, "tags": [], "creator": "rsanders@trustedcs.com", "attachment_id": null, "count": 15, "text": "As per request I've filed a new bug for the failure to init the RSA 512 bit temporary key (https://issues.apache.org/bugzilla/show_bug.cgi?id=56396).", "time": "2014-04-11T18:57:54Z", "bug_id": 56027, "creation_time": "2014-04-11T18:57:54Z", "is_private": false}, {"count": 16, "tags": [], "bug_id": 56027, "text": "Fixed in Tomcat trunk in r1587378, r1587379, and r1587723. Will be included in Tomcat 8.0.6 and later.\nFixed in Tomcat 7.0 branch in r1587378, r1587661, and r1587734. Will be included in Tomcat 7.0.54 and later.\nProposed for Tomcat 6.", "id": 174607, "attachment_id": null, "creator": "chris@christopherschultz.net", "creation_time": "2014-04-15T21:54:27Z", "time": "2014-04-15T21:54:27Z", "is_private": false}, {"count": 17, "tags": [], "bug_id": 56027, "text": "Follow-ups in Tomcat 8 in r1590300 r1590339 (8.0.6), r1590340 (7.0.54).\nUpdated patch was proposed for Tomcat 6.", "id": 174900, "time": "2014-04-27T04:18:15Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2014-04-27T04:18:15Z", "is_private": false, "attachment_id": null}, {"count": 18, "tags": [], "text": "Fixed in Tomcat 6 by r1593696 and will be in 6.0.40.", "is_private": false, "id": 175139, "creator": "knst.kolinko@gmail.com", "time": "2014-05-10T13:14:17Z", "bug_id": 56027, "creation_time": "2014-05-10T13:14:17Z", "attachment_id": null}, {"count": 19, "tags": [], "bug_id": 56027, "attachment_id": null, "is_private": false, "id": 176048, "time": "2014-06-25T16:56:29Z", "creator": "smijolovic@nutanix.com", "creation_time": "2014-06-25T16:56:29Z", "text": "Still running into this issue where the APR library won't load when in fips mode using the FIPS validated OpenSSL library.\n\nCentOS 6.5 with OpenSSL 1.0.1e-16..el6_5.x86_64, and /boot/grub/grub.conf has fips=1 (prelink disabled, dracut -f, reboot shows \"cat /proc/sys/crypto/fips_enabled\" = 1)\n\nTomcat 7.0.54 running, and compiled the tcnative APR lib with:\n./configure --with-apr=`which apr-1-config` --with-java-home=/usr/java/jdk1.8.0_05 --with-ssl=yes --prefix=/usr/share/apache-tomcat-7.0.54\n\nSetenv.sh:\n#!/bin/bash\numask 0026\nLD_LIBRARY_PATH=/usr/share/apache-tomcat-7.0.54/lib:$LD_LIBRARY_PATH\nexport LD_LIBRARY_PATH\n\nServer.xml:\n <Listener className=\"org.apache.catalina.core.AprLifecycleListener\" SSLEngine=\"on\" />\n\nConnector.xml:\n<Connector\n  clientAuth=\"false\"\n  port=\"9443\"\n  protocol=\"HTTP/1.1\"\n  SSLEnabled=\"true\"\n  scheme=\"https\"\n  secure=\"true\"\n  SSLCertificateFile=\"/etc/private/rsacert.pem\"\n  SSLCertificateKeyFile=\"/etc/private/rsakey.pem\"\n  SSLCipherSuite=\"ECDH+AESGCM:ECDH+AES256:ECDH+AES128:RSA+AES:!aNULL:!MD5:!DSS\"\n  SSLDisableCompression=\"true\"\n  SSLHonorCipherOrder=\"true\"\n  SSLVerifyClient=\"optional\"\n  SSLProtocol=\"TLSv1\"\n  server=\"Prism Server\"\n  connectionTimeout=\"60000\"\n  keepAliveTimeout=\"60000\"\n  maxKeepAliveRequests=\"100\"\n  maxThreads=\"150\"\n  maxPostSize=\"2097152\"\n  maxHeaderCount=\"50\"\n  maxHttpHeaderSize=\"8190\"\n  allowTrace=\"false\"\n/>\n\nStarting services:\nservice tomcat start\nUsing CATALINA_BASE:   /usr/share/apache-tomcat-7.0.54\nUsing CATALINA_HOME:   /usr/share/apache-tomcat-7.0.54\nUsing CATALINA_TMPDIR: /usr/share/apache-tomcat-7.0.54/temp\nUsing JRE_HOME:        /usr/java/jdk1.8.0_05/jre\nUsing CLASSPATH:       /usr/share/apache-tomcat-7.0.54/bin/bootstrap.jar:/usr/share/apache-tomcat-7.0.54/bin/tomcat-juli.jar\nTomcat started.\n\nlogs/catalina.2014-06-12.log:\n\nJun 12, 2014 1:30:20 PM org.apache.catalina.core.AprLifecycleListener init\nINFO: Loaded APR based Apache Tomcat Native library 1.1.30 using APR version 1.3.9.\nJun 12, 2014 1:30:20 PM org.apache.catalina.core.AprLifecycleListener init\nINFO: APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true\n].\nJun 12, 2014 1:30:20 PM org.apache.catalina.core.AprLifecycleListener lifecycleEvent\nSEVERE: Failed to initialize the SSLEngine.\norg.apache.tomcat.jni.Error: 70023: This function has not been implemented on this platform\n\tat org.apache.tomcat.jni.SSL.initialize(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.ja\nva:43)\n\tat java.lang.reflect.Method.invoke(Method.java:483)\n\tat org.apache.catalina.core.AprLifecycleListener.initializeSSL(AprLifecycleListene\nr.java:270)\n\tat org.apache.catalina.core.AprLifecycleListener.lifecycleEvent(AprLifecycleListen\ner.java:124)\n\tat org.apache.catalina.util.LifecycleSupport.fireLifecycleEvent(LifecycleSupport.j\nava:117)\n\tat org.apache.catalina.util.LifecycleBase.fireLifecycleEvent(LifecycleBase.java:90\n)\n\tat org.apache.catalina.util.LifecycleBase.setStateInternal(LifecycleBase.java:402)\n\tat org.apache.catalina.util.LifecycleBase.init(LifecycleBase.java:99)\n\tat org.apache.catalina.startup.Catalina.load(Catalina.java:638)\n\tat org.apache.catalina.startup.Catalina.load(Catalina.java:663)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.ja\nva:43)\n\tat java.lang.reflect.Method.invoke(Method.java:483)\n\tat org.apache.catalina.startup.Bootstrap.load(Bootstrap.java:280)\n\tat org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:454)\n\nJun 12, 2014 1:30:20 PM org.apache.coyote.AbstractProtocol init\nINFO: Initializing ProtocolHandler [\"http-apr-9443\"]\nJun 12, 2014 1:30:20 PM org.apache.coyote.AbstractProtocol init\nSEVERE: Failed to initialize end point associated with ProtocolHandler [\"http-apr-9443\"]\njava.lang.Exception: Unable to create SSLContext. Check that SSLEngine is enabled in the AprLifecycleListener, the AprLifecycleListener has initialised correctly and that a valid SSLProtocol has been specified\n\tat org.apache.tomcat.util.net.AprEndpoint.bind(AprEndpoint.java:503)\n\tat org.apache.tomcat.util.net.AbstractEndpoint.init(AbstractEndpoint.java:640)\n\tat org.apache.coyote.AbstractProtocol.init(AbstractProtocol.java:434)\n\tat org.apache.catalina.connector.Connector.initInternal(Connector.java:978)\n\tat org.apache.catalina.util.LifecycleBase.init(LifecycleBase.java:102)\n\tat org.apache.catalina.core.StandardService.initInternal(StandardService.java:559)\n\tat org.apache.catalina.util.LifecycleBase.init(LifecycleBase.java:102)\n\tat org.apache.catalina.core.StandardServer.initInternal(StandardServer.java:813)\n\tat org.apache.catalina.util.LifecycleBase.init(LifecycleBase.java:102)\n\tat org.apache.catalina.startup.Catalina.load(Catalina.java:638)\n\tat org.apache.catalina.startup.Catalina.load(Catalina.java:663)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.ja\nva:43)\n\tat java.lang.reflect.Method.invoke(Method.java:483)\n\tat org.apache.catalina.startup.Bootstrap.load(Bootstrap.java:280)\n\tat org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:454)\nCaused by: java.lang.Exception: Invalid Server SSL Protocol (error:140A90F1:SSL routines:SSL_CTX_new:unable to load ssl2 md5 routines)\n\tat org.apache.tomcat.jni.SSLContext.make(Native Method)\n\tat org.apache.tomcat.util.net.AprEndpoint.bind(AprEndpoint.java:498)\n\t... 16 more\n\nJun 12, 2014 1:30:20 PM org.apache.catalina.core.StandardService initInternal\nSEVERE: Failed to initialize connector [Connector[HTTP/1.1-9443]]\norg.apache.catalina.LifecycleException: Failed to initialize component [Connector[HTTP/1.1\n-9443]]\n\tat org.apache.catalina.util.LifecycleBase.init(LifecycleBase.java:106)\n\tat org.apache.catalina.core.StandardService.initInternal(StandardService.java:559)\n\tat org.apache.catalina.util.LifecycleBase.init(LifecycleBase.java:102)\n\tat org.apache.catalina.core.StandardServer.initInternal(StandardServer.java:813)\n\tat org.apache.catalina.util.LifecycleBase.init(LifecycleBase.java:102)\n\tat org.apache.catalina.startup.Catalina.load(Catalina.java:638)\n\tat org.apache.catalina.startup.Catalina.load(Catalina.java:663)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.ja\nva:43)\n\tat java.lang.reflect.Method.invoke(Method.java:483)\n\tat org.apache.catalina.startup.Bootstrap.load(Bootstrap.java:280)\n\tat org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:454)\nCaused by: org.apache.catalina.LifecycleException: Protocol handler initialization failed\n\tat org.apache.catalina.connector.Connector.initInternal(Connector.java:980)\n\tat org.apache.catalina.util.LifecycleBase.init(LifecycleBase.java:102)\n\t... 12 more\nCaused by: java.lang.Exception: Unable to create SSLContext. Check that SSLEngine is enabled in the AprLifecycleListener, the AprLifecycleListener has initialised correctly and that a valid SSLProtocol has been specified\n\tat org.apache.tomcat.util.net.AprEndpoint.bind(AprEndpoint.java:503)\n\tat org.apache.tomcat.util.net.AbstractEndpoint.init(AbstractEndpoint.java:640)\n\tat org.apache.coyote.AbstractProtocol.init(AbstractProtocol.java:434)\n\tat org.apache.catalina.connector.Connector.initInternal(Connector.java:978)\n\t... 13 more\nCaused by: java.lang.Exception: Invalid Server SSL Protocol (error:140A90F1:SSL routines:SSL_CTX_new:unable to load ssl2 md5 routines)\n\tat org.apache.tomcat.jni.SSLContext.make(Native Method)\n\tat org.apache.tomcat.util.net.AprEndpoint.bind(AprEndpoint.java:498)\n\t... 16 more\n\nWhen I remove fips=1 from grub.conf, reboot, and add FIPSMode=\"on\" to the AprLifecycleListener in server.xml, the Engine works and FIPSMode shows it's set to \"on\".  What is up with the OpenSSL library with the kernel running in FIPS mode that keeps displaying the error: java.lang.Exception: Invalid Server SSL Protocol (error:140A90F1:SSL routines:SSL_CTX_new:unable to load ssl2 md5 routines)?"}, {"count": 20, "tags": [], "creator": "chris@christopherschultz.net", "attachment_id": null, "text": "I believe the \"SSL2 MD5\" routines problem is different from this issue, which was to allow Tomcat to start up with OpenSSL already in FIPS mode (e.g. don't choke and die if we're already in FIPS mode).\n\nNext, Tomcat tries to initialize the SSL endpoint with a list of ciphers and I think it request too many ciphers (and violates FIPS requirements). I'm not sure why this fails when already in FIPS mode versus working when explicitly entering FIPS mode first. I thought this failure had been reported elewhere but I can't seem to find the reference right now.", "id": 176080, "time": "2014-06-27T19:24:07Z", "bug_id": 56027, "creation_time": "2014-06-27T19:24:07Z", "is_private": false}, {"count": 21, "tags": [], "bug_id": 56027, "is_private": false, "id": 176149, "attachment_id": null, "creator": "ben.mason@viasat.com", "creation_time": "2014-07-02T13:52:03Z", "time": "2014-07-02T13:52:03Z", "text": "I am still getting this error as well. Is this the key length issue? It is unclear in this thread whether that was ever fixed. Rob Sanders said he filed another bug, but it appears it was deleted.\n\n\n(In reply to Christopher Schultz from comment #20)\n> I believe the \"SSL2 MD5\" routines problem is different from this issue,\n> which was to allow Tomcat to start up with OpenSSL already in FIPS mode\n> (e.g. don't choke and die if we're already in FIPS mode).\n> \n> Next, Tomcat tries to initialize the SSL endpoint with a list of ciphers and\n> I think it request too many ciphers (and violates FIPS requirements). I'm\n> not sure why this fails when already in FIPS mode versus working when\n> explicitly entering FIPS mode first. I thought this failure had been\n> reported elewhere but I can't seem to find the reference right now."}, {"count": 22, "tags": [], "bug_id": 56027, "text": "(In reply to Ben Mason from comment #21)\n> Is this the key length issue? It is\n> unclear in this thread whether that was ever fixed. Rob Sanders said he\n> filed another bug, but it appears it was deleted.\n\nKey length issue is bug 56396, should be fixed in TCNative 1.1.31. (r1587896)", "id": 176154, "attachment_id": null, "creator": "knst.kolinko@gmail.com", "creation_time": "2014-07-02T14:26:11Z", "time": "2014-07-02T14:26:11Z", "is_private": false}, {"count": 23, "tags": [], "bug_id": 56027, "text": "This should no longer be an issue in 1.2.x.\n\nThe fips mode setting has been fixed.\n\nSSL_TMP_KEYS_INIT does not exist in 1.2.x.", "id": 196804, "attachment_id": null, "creator": "markt@apache.org", "creation_time": "2017-02-07T10:36:02Z", "time": "2017-02-07T10:36:02Z", "is_private": false}, {"count": 24, "tags": [], "bug_id": 56027, "attachment_id": null, "is_private": false, "id": 196822, "time": "2017-02-07T17:34:32Z", "creator": "chris@christopherschultz.net", "creation_time": "2017-02-07T17:34:32Z", "text": "(In reply to Ben Mason from comment #21)\n> I am still getting this error as well. Is this the key length issue? It is\n> unclear in this thread whether that was ever fixed. Rob Sanders said he\n> filed another bug, but it appears it was deleted.\n\nJust a note for archival purposes: the bug referenced above was certainly NOT deleted. It was CLOSED FIXED."}]