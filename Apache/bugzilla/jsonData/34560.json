[{"count": 0, "tags": [], "creator": "quartz12h@yahoo.com", "text": "The web.xml contains\n\n\t<security-constraint>\n\t\t\t<display-name>Security Constraint</display-name>\n\t\t\t<web-resource-collection>\n\t\t\t\t<web-resource-name>HTTP Non Protected Area</web-resource-name>\n\t\t\t\t<url-pattern>/favicon.ico</url-pattern>\n\t\t\t\t<url-pattern>*.gif</url-pattern>\n\t\t\t\t<url-pattern>*.js</url-pattern>\n\t\t\t\t<url-pattern>*.html</url-pattern>\n\t\t\t\t<url-pattern>*.css</url-pattern>\n\t\t\t\t<url-pattern>/css/*</url-pattern>\n\t\t\t\t<url-pattern>/images/*</url-pattern>\n\t\t\t\t<url-pattern>/js/*</url-pattern>\n\t\t\t</web-resource-collection>\n\t \t\t<user-data-constraint>\n\t \t\t\t<transport-guarantee>\n\t \t\t\t\tCONFIDENTIAL\n\t \t\t\t</transport-guarantee>\n\t \t\t</user-data-constraint>\n\t</security-constraint>\n\nAlthough it is https (CONFIDENTIAL), it doesn't have any\n<auth-constraint><role-name>...\nyet the valve FormAuthenticator (extends AuthenticatorBase, 5.0.24, line 458)\nonly tests for existence of constraints, not roles:\n\n       if ((constraints == null) /* &&\n            (!Constants.FORM_METHOD.equals(config.getAuthMethod())) */ ) {\n            if (log.isDebugEnabled())\n                log.debug(\" Not subject to any constraint\");\n            context.invokeNext(request, response);\n            return;\n        }\n\n        // Make sure that constrained resources are not cached by web proxies\n        // or browsers as caching can provide a security hole\n        HttpServletRequest hsrequest = (HttpServletRequest)hrequest.getRequest();\n        if (disableProxyCaching && \n            // FIXME: Disabled for Mozilla FORM support over SSL \n            // (improper caching issue)\n            //!hsrequest.isSecure() &&\n            !\"POST\".equalsIgnoreCase(hsrequest.getMethod())) {\n            HttpServletResponse sresponse = \n                (HttpServletResponse) response.getResponse();\n            sresponse.setHeader(\"Pragma\", \"No-cache\");\n            sresponse.setHeader(\"Cache-Control\", \"no-cache\");\n            sresponse.setHeader(\"Expires\", DATE_ONE);\n        }\n\n\nAs a result, it is not allowing caching of static ressources in the patterns.\n(Slow site performance)", "id": 73931, "time": "2005-04-22T04:08:42Z", "bug_id": 34560, "creation_time": "2005-04-22T04:08:42Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "creator": "william.barker@wilshire.com", "text": "You might have a case for INTEGRAL, but not CONFIDENTIAL.  But even then it's \na corner-case that is unlikely to attract much developer interest.\n\nYou can always configure disableProxyCaching=\"false\" on the Authenticator to \ndisable this, or add a Filter that overrides Tomcat's choice of headers.", "id": 74012, "time": "2005-04-22T21:05:21Z", "bug_id": 34560, "creation_time": "2005-04-22T21:05:21Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "text": "In order to respect the authentication spec rfc2616-14.8, although the\nauthorization is made by a form and not a header, the FormAuthenticator valve\nwas capable of emulating the proper caching constraints. The code is\nmanipulating the correct headers but under innacurate circumstances.\n\nThe problem is not related to the <user-data-constraint><transport-guarantee>\ntags. It has to do with the abscence of <auth-constraint><role-name> tags.\n\nThe FormAuthenticator valve is visited for mappings that do not require\nauthentication. That alone is questionnable, but assuming the valve may perform\nother contract, I supposed this visit is unavoidable. However, within the\nmandate of performing authentication based operations, the valve should restrict\nitself to mappings that strictly have at least 1 role.\n\nLike I said, every tomcat application out there is silently suffering from\nnon-cached static ressources because:\n1-the valve intercepts EVERY request, even if not matching the url pattern\nAND \n2-the valve do not recognize the abscence of authentication constraints.\n\nThanks for reconsidering.\n\nPS:...especially since the fix is trivial:\n(skip if constraints==null || constraints.length=0 || all of\nconstraints[i].getAuthConstraint()==false)\n\nPS:You might want to consult http://www.mnot.net/cache_docs/\nand other doc like the rfc 2616\nhttp://www.w3.org/Protocols/rfc2616/rfc2616.html\nhttp://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9\nhttp://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.8", "is_private": false, "id": 74022, "creator": "quartz12h@yahoo.com", "time": "2005-04-23T04:56:51Z", "bug_id": 34560, "creation_time": "2005-04-23T04:56:51Z", "attachment_id": null}, {"attachment_id": null, "tags": [], "creator": "remm@apache.org", "is_private": false, "count": 3, "id": 74025, "time": "2005-04-23T09:40:15Z", "bug_id": 34560, "creation_time": "2005-04-23T09:40:15Z", "text": "If the fix is trivial, and you want us to reconsider, you should submit a tested\npatch against CVS HEAD."}, {"count": 4, "tags": [], "bug_id": 34560, "text": "Created attachment 14814\npatch to head cvs (1.30)\n\nline 437:\n\n\t//+++++ ASF Bugzilla Bug 34560 fix:\n\tboolean requireAuthentication = false;\n\tfor(i=0; i < constraints.length; i++) {\n\t    if (constraints[i].getAuthConstraint()) {\n\t\trequireAuthentication=true;\n\t\tbreak;\n\t    }\n\t}\n\t//+++++\n\n\n\t// Make sure that constrained resources are not cached by web proxies\n\t// or browsers as caching can provide a security hole\n\tif (requireAuthentication && disableProxyCaching && //+++++ SSL can be\ncached (by browser only, and by user choice), authenticated resources must not.\n\n\n[...]", "id": 74048, "time": "2005-04-24T00:13:54Z", "creator": "quartz12h@yahoo.com", "creation_time": "2005-04-24T00:13:54Z", "is_private": false, "attachment_id": 14814}, {"count": 5, "tags": [], "creator": "william.barker@wilshire.com", "text": "Please see http://jakarta.apache.org/site/source.html#Patches for the format \nthat patches should be submitted in.\n\nThat having been said, I'm -1 for the patch as is.  As I read section 12.8 of \nthe servlet spec, the headers should be added for a transport-guarantee of \nCONFIDENTIAL.  I agree that it is optional for a transport-guarantee of \nINTEGRAL.", "id": 74049, "time": "2005-04-24T01:36:11Z", "bug_id": 34560, "creation_time": "2005-04-24T01:36:11Z", "is_private": false, "attachment_id": null}, {"count": 6, "tags": [], "bug_id": 34560, "attachment_id": null, "id": 74064, "time": "2005-04-24T18:26:39Z", "creator": "quartz12h@yahoo.com", "creation_time": "2005-04-24T18:26:39Z", "is_private": false, "text": "Thank you for your dedication and research.\nI read that servlet spec 12.8.\n\nIt is very clear to me that the transport constraint is orthogonal to the\nauthentication constraint.\n\nThat is, a 'confidential' transport may not obviously require authentication.\nThat is especially true for web site that are fully https to avoid mixed\nsecure/unsecure content warnings on browsers, while allowing decent caching for\nressources that do not need authentication/autorization, like js, css, gifs...\n\nI'm not suggesting to change any of the current logic surrounding\nconfidential/integral/none. I'm highlighting that the 'de-caching' headers must\nonly be applied when the authentication is required, which has nothing to do\nwith transport contraints.\n\nMeanwhile, the http spec is stating that autorization must be challenged\neverytime and resources, if cached, cannot bypass the authentication. It doesn't\nmention anything specific to the ssl nature (or else) of the lower layer\ntransporting http content.\n\nThanks again."}, {"count": 7, "tags": [], "bug_id": 34560, "attachment_id": 14824, "text": "Created attachment 14824\n'diff' version of the patch\n\ndiff made with textpad, a nice alternative to the non-pc-friendly ways\nsuggested.", "id": 74065, "time": "2005-04-24T18:56:33Z", "creator": "quartz12h@yahoo.com", "creation_time": "2005-04-24T18:56:33Z", "is_private": false}, {"count": 8, "tags": [], "bug_id": 34560, "attachment_id": null, "id": 83104, "time": "2005-12-01T23:02:27Z", "creator": "yoavs@computer.org", "creation_time": "2005-12-01T23:02:27Z", "is_private": false, "text": "Bill, does the 2nd patch look reasonable?"}, {"count": 9, "tags": [], "bug_id": 34560, "text": "(In reply to comment #8)\n> Bill, does the 2nd patch look reasonable?\n\nActually, we're doing the authRequired check now already :).\n\nIt's still my opinion that, given that we are setting these headers, they can \nbe omitted for INTEGRAL.  However, not setting them for CONFIDENTIAL seems to \ndefeat the purpose of CONFIDENTIAL (since that is what these headers do :).\n\nThe lack of a distiction between INTEGRAL and CONFIDENTIAL is why I haven't \ntouched it.  However, I won't veto it if you want to apply it as is (I set \ndisableProxyCaching=\"false\" personally, so it doesn't affect me either way :).\n", "id": 83108, "time": "2005-12-02T00:47:12Z", "creator": "william.barker@wilshire.com", "creation_time": "2005-12-02T00:47:12Z", "is_private": false, "attachment_id": null}, {"count": 10, "tags": [], "creator": "quartz12h@yahoo.com", "attachment_id": null, "id": 83118, "time": "2005-12-02T03:05:30Z", "bug_id": 34560, "creation_time": "2005-12-02T03:05:30Z", "is_private": false, "text": "Let me try to be short and clear with the following summary.\n\nTransport constraints (CONFIDENTIAL, NONE) make it https or not. It has nothing\nto do with auth.constraints (identification of roles).\n\nIn real life, you can be anonymous over http, anonymous over https, logged in\nover http, logged in over https. This is the orthogonality I was referring to,\nin case I wasn't clear.\n\nNow, the headers in questions are not about transport nor authentication at all.\nThey are about caching. HOWEVER, caching must not occur in front of\naurhenticated ressources, since the authentication must be challenged on every\nhit from end to end (user-agent to server).\n\nTherefore, anti-caching headers must be added only to authenticated ressources,\nNO MATTER what the transport constraint is.\n\nSorry if I sound irritated, the issue is fairly simple. So is the fix. Without\nthat fix, tomcat will never be able to perform well under https as demonstrated\nin the same xml above.\n\nThe reality is horrible: all page components like css, js, gif, jpg, etc...\nserved under https (to avoid mixed security page warnings) are polled every\nrefresh. They may result in 304, but that is already too much since it took a\nfull network round trip for every resource. Please trust me, it is night and day\nafter we hacked in a 're-caching' servletfilter workaround."}, {"count": 11, "tags": [], "bug_id": 34560, "attachment_id": null, "id": 94032, "time": "2006-09-23T21:05:33Z", "creator": "markt@apache.org", "creation_time": "2006-09-23T21:05:33Z", "is_private": false, "text": "The specs do state that authenticated resources must not be cached. However,\nthis does not mean that all unauthenticated resources may be cached. If you can\nprovide a reference in a relevant specification that does state this then you\nhave a much stronger case.\n\nThe servlet spec does not specify caching behaviour for CONFIDENTIAL. Given the\nmeaning of confidential it is arguable that it should not be cached it in order\nto keep it private. Without a clear specification breach (which I don't see\nhaving reviewed the specs quoted in this report) this behaviour is always going\nto be open to interpretation.\n\nIf you don't like the behaviour as currently interpretted there are a number of\noptions (disableProxyCaching, securePagesWithPragma) you can use or if these\ndon't give you want you want you can, as the you and others have, implement a\nfilter to set the cache control headers.\n"}, {"attachment_id": null, "tags": [], "creator": "quartz12h@yahoo.com", "is_private": false, "count": 12, "id": 94045, "time": "2006-09-24T13:33:01Z", "bug_id": 34560, "creation_time": "2006-09-24T13:33:01Z", "text": "(In reply to comment #11)\n> The servlet spec does not specify caching behaviour for CONFIDENTIAL.\n\nBecause https transport has nothing to do with caching... You are mixing\nattributes of layer 6 (presentation/encryption) and layer 7 (application/http)\nof the OSI protocol stack (higher layers being merely the payload of the lower\nlayers, i.e. the russian dolls metaphor).\nhttp://www.webopedia.com/quick_ref/OSI_Layers.asp\nIf you want to discuss caching (and authentication), you must locate yourself at\nthe layer 7. Therefore the transport choice is irrelevant and the http spec\nprevails: caching headers aren't mandatory and so are added as an explicit\nchoice by the servers/proxies. As it stands, tomcat disregards that choice and\nrequires extra configuration to remove http headers.\n\n\n> Given the meaning of confidential it is arguable that it should\n> not be cached it in order to keep it private.\n\nThis is a browser-side privacy issue, a user preference, not a server issue.\n\nYou can assert the concepts exposed here with anyone with a bachelor degree in\ncomputer science (or electrical engineering with networking speciality). Maybe\nhttp and servlets don't sound very OSI, but they do partition communication\nroles. I don't know what else I can give you to help you understand how\nCONFIDENTIAL transport is not related to caching.\n\nBut in the end, the fact that both use-case are legitimate enforces the fact\nthat caching of unauthenticated confidential resources must be configurable. My\npoint is to provide the performant alternative, not the slower one and force\nusers to cope with extraneous hits, server load and exra servlet filters and config."}]