[{"count": 0, "tags": [], "bug_id": 15941, "attachment_id": null, "text": "In bug #15873, the user complains that he cannot get the stack trace\nof an exception that occurs within a custom bean invoked via the\nJSTL EL Evaluator. He suggests we make the stack trace of the lowest \nlevel exception available as a string so it can be displayed when this\nsituation occurs. \n\nHowever, it seems more appropriate to have Tomcat improve the way\nit handles exceptions.\n\nIn the situation exposed in but #15873, there are 3 levels of errors:\n   1. exception thrown by the bean (e.g. MyBeanException)\n   2. exception thrown by the EL Evaluator (JspException, root cause is\n                                            MyBeanException thrown in 1)\n   3. exception thrown by the JSP container (ServletException, root cause is \n                                             JspException in level 2)\n\nCurrently, tomcat only displays stack traces for levels 2 and 3. \nIt would be great if it could recursively display stack traces for \nroot causes of lower levels.\n\nSo... Through introspection, one could figure out if a root cause exception\nitself has a getRootCause() method that returns a Throwable instance\nand if so, displays the stack trace for that root cause; and so on...\n\nThis has the potential of creating some very long stack traces, but it could\nbe argued that the top 2 levels (ServletException and JspException) are useless\nwhen lower level exceptions exist.\n\nDiscussed this with Craig McClanahan, who added the following thought:\n\n\"One thing we should definitely do, though, is to transparently unwrap \nany InvocationTargetException that occurs.  An example would be a \n<jsp:setProperty> call (executed via reflection) and the property setter \nthrows an exception.  This will save one level of stack trace that \ndoesn't add any value, and will often lead to uncovering what really \ncaused the exception in the first place.\"", "id": 29098, "time": "2003-01-10T01:58:25Z", "creator": "pierre.delisle@sun.com", "creation_time": "2003-01-10T01:58:25Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 15941, "text": "This was fixed some time in the 4.1.x time frame (I forgot exactly when). All currently supported versions do unwrap exceptions as best they can.", "id": 143305, "time": "2011-01-12T10:07:53Z", "creator": "markt@apache.org", "creation_time": "2011-01-12T10:07:53Z", "is_private": false, "attachment_id": null}]