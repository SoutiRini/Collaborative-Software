[{"count": 0, "tags": [], "text": "[feature request] cli webaccess tester\n\nIt would be very usefull if cli (shell) tool would exist that would tell if a directory/file is accessible on the webserver (by specified IP for example). I'm developing anti-mallware software and it is critical for it to tell if a directory (and file in it) is web-accessible or not - if it is blocked by either something in httpd.conf or in htaccess (like deny from all) (htaccess are recursive). In other words if there is url (configured at webserver) that allows for direct access to a file or directory (its index.(php|htm)).", "attachment_id": null, "bug_id": 54699, "id": 165849, "time": "2013-03-15T02:16:48Z", "creator": "spamik@yum.pl", "creation_time": "2013-03-15T02:16:48Z", "is_private": false}, {"text": "Sounds like your just describing a command line HTTP client, which there are plenty of.  I don't see room for much in this area in our webserver project.", "tags": [], "bug_id": 54699, "attachment_id": null, "count": 1, "id": 165850, "time": "2013-03-15T02:42:08Z", "creator": "covener@gmail.com", "creation_time": "2013-03-15T02:42:08Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 54699, "text": "It is not possible to accuratly determine via http if file is actualy blocked by apache configuration because:\nfile (like php script) can return 404, 401 for \"normal request\" while returning other data for specified GET argument (and it is actualy ussed by mallware all the time those days - to mask its presence)\n\nalso it is not optimal to do any such check via http", "id": 165870, "time": "2013-03-15T21:14:44Z", "creator": "spamik@yum.pl", "creation_time": "2013-03-15T21:14:44Z", "is_private": false, "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 54699, "text": "Sorry, but such a feature (a command line tools that knows not just httpd configuration but somehow knows when PHP will decide to return a 401 or 404) is simply not what our project is about.  If you find some novel way to implement this, reopen.", "count": 3, "id": 165871, "time": "2013-03-15T21:49:52Z", "creator": "covener@gmail.com", "creation_time": "2013-03-15T21:49:52Z", "is_private": false}, {"count": 4, "attachment_id": null, "bug_id": 54699, "is_private": false, "id": 165877, "time": "2013-03-16T02:06:16Z", "creator": "spamik@yum.pl", "creation_time": "2013-03-16T02:06:16Z", "tags": [], "text": "only apache httpd can efeciently say if file/directory is blocked by its configuration or not and http response is not a way to deremine it. Duplicating apache configuration parser into other program is pointless."}, {"attachment_id": null, "tags": [], "bug_id": 54699, "text": "example scenario: You scanner your partition with antivirus software and found that /home/user/public_html/abc/public/images/cache/0/a/2/5/49586.php was malicious code\n\nYou don't know domain or url to it. How how do you suppose you could tell if that file is actualy accessible via any domain served by your apache? Your httpd.conf is very fancy and has a lot of data in it. Worse, user has multiple .htaccess files with rewrite rules, deny rules and authorization rules. Finaly actual php file returns 401 code to apache if run by webserver to mask its presence (unless passed aprorpiate $_GET argument). Answer is YOU CANT know if file is world accessible! It is completly impossible to analize automaticly those configuration, htaccess, rewrites!!", "count": 5, "id": 165878, "time": "2013-03-16T06:33:23Z", "creator": "spamik@yum.pl", "creation_time": "2013-03-16T06:33:23Z", "is_private": false}, {"count": 6, "tags": [], "creator": "covener@gmail.com", "attachment_id": null, "id": 165880, "time": "2013-03-16T11:32:27Z", "bug_id": 54699, "creation_time": "2013-03-16T11:32:27Z", "is_private": false, "text": "Doesn't sound useful in practice to me, but since you insist on reverting my state changes, I'm not going to bother with any more feedback."}]