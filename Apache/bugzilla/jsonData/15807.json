[{"count": 0, "tags": [], "text": "org.apache.poi.poifs.storage.RawDataBlock reads InputStream in chunks of 512 \nbytes and throws exception in case chunk is smaller than 512 bytes. However, in \nthe world of TCP/IP the chunk can actually be smaller than that. In this case \nPOIFS will incorrectly throws exception and will refuse to parse the POIFS file \ndespite file is the valid one. To resolve the issue, the constructor of \nRawDataBlock should be changed to read InputStream repeatedly until buffer 512 \nbytes is filled in or EOF is reached. I suggest to modify it as follows (we \ntried it successfully here and it works for us - pay attention to internal loop \nin case count != POIFSConstants.BIG_BLOCK_SIZE):\n=============\npublic RawDataBlock(final InputStream stream)\n        throws IOException\n    {\n        _data = new byte[ POIFSConstants.BIG_BLOCK_SIZE ];\n        \n        _eof = false;\n        \n        int count = stream.read(_data);\n\n        if (count == -1)\n        {\n            _eof = true;\n        }\n        else if (count != POIFSConstants.BIG_BLOCK_SIZE)\n        {\n            // Shimon: For remote objects read not necessarily returns 512 \nbytes.\n            // We need to read repeatedly until either buffer filled in or eof \nis reached\n            int offset = 0;\n            while(count > 0 && offset <= POIFSConstants.BIG_BLOCK_SIZE)\n            {\n               offset += count;\n               count = stream.read(_data, offset, \nPOIFSConstants.BIG_BLOCK_SIZE - offset);\n               if(count == -1)\n               {\n                  _eof = true;\n                  break;\n               }\n            }\n       \n            if(!_eof && count + offset != POIFSConstants.BIG_BLOCK_SIZE)\n            {\n               String type = \" byte\" + ((count == 1) ? (\"\")\n                                                     : (\"s\"));\n   \n               throw new IOException(\"Unable to read entire block; \" + count\n                                     + type + \" read; expected \"\n                                     + POIFSConstants.BIG_BLOCK_SIZE + \" \nbytes\");\n            }   \n        }\n    }\n=============", "is_private": false, "id": 28890, "creator": "shimonp@rogers.com", "time": "2003-01-05T19:08:05Z", "bug_id": 15807, "creation_time": "2003-01-05T19:08:05Z", "attachment_id": null}, {"count": 1, "tags": [], "text": "supply a patch and a unit test and I'll apply it (see\nhttp://jakarta.apache.org/poi/getinvolved/index.html)...", "is_private": false, "id": 28891, "creator": "poi-support@buni.org", "time": "2003-01-05T19:15:24Z", "bug_id": 15807, "creation_time": "2003-01-05T19:15:24Z", "attachment_id": null}, {"count": 2, "attachment_id": null, "bug_id": 15807, "is_private": false, "id": 38218, "time": "2003-06-03T00:20:54Z", "creator": "chris@sixlegs.com", "creation_time": "2003-06-03T00:20:54Z", "tags": [], "text": "\n\n*** This bug has been marked as a duplicate of 13478 ***"}]