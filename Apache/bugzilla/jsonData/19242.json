[{"count": 0, "tags": [], "creator": "ssl198064@hotmail.com", "attachment_id": null, "text": "We are currently having an issue where we are reverse proxying an HTTPS site \nusing Apache.  Every second request to the site (via the rev proxy) fails with \na 500 Internal Server Error.  I have done various debugging such as snoops, \ntrusses and debug apache logging.\n\nWhat seems to happen is the first (successful) request works as expected, \nhowever when the second request is sent, the SSL session between the client and \nproxy is set up okay, but the SSL connection between the proxy and backend \nserver has problems.  Basically it (the proxy) sets up the TCP session okay, \nsends an SSL Client Hello, but then almost straight away sends a FIN.\n\nI then looked at the apache error log, with full debugging enabled to see why \nthe proxy would send a client hello, and then straight away send a FIN.  It \nseems that there is an issue with an SSL BIO being logged.  It says that 0/7 \nbytes are being read from the BIO whenever the connection is failing.  However, \nwhen there is a successful connection it reads 7/7 bytes at this same part of \nthe conversation.\n\nI have also done a truss of a successful vs unsuccessful connection.  When \nsuccessful, the httpd process is doing a read, getting an \"Err#11 Eagain\" \nerror, doing a poll, redoing the read, but this time without error.  However on \nan unsuccessful connection, the httpd process does the same initial read, gets \nthe same \"Err#11 Eagain\" error, but does not do the poll or reread.\n \nI have verified this exact same behaviour on the following:\nSolaris 2.6 with Apache 2.0.44 OpenSSL 0.9.7\nSolaris 8 with Apache 2.0.44 OpenSSL 0.9.7 (32bit)\nSolaris 8 with Apache 2.0.45 OpenSSL 0.9.7a (32bit)\nSolaris 8 with Apache 2.0.45 OpenSSL 0.9.7a (64bit)\n\nI have also tried on both a SunBlade 100 and E450 platform, each with identical \nresults.\n\nI have tried both prefork and worker mpms with identical results.\n\nI have found that the only workaround (which is very ugly) is to set the \nMaxRequestsPerChild to 1.  \n\nI have also played with virtually every setting I can think of, particularly \nthe SSLMutex and AcceptMutex settings.  Nothing other that the above workaround \nseems to affect this problem.\n\nAny ideas would be greatly appreciated?", "id": 35844, "time": "2003-04-23T02:27:37Z", "bug_id": 19242, "creation_time": "2003-04-23T02:27:37Z", "is_private": false}, {"count": 1, "tags": [], "creator": "ssl198064@hotmail.com", "attachment_id": null, "id": 35851, "time": "2003-04-23T07:58:17Z", "bug_id": 19242, "creation_time": "2003-04-23T07:58:17Z", "is_private": false, "text": "Sorry - forgot the build info..\n\nServer version: HTTPD/1.0.0\nServer built:   Apr  8 2003 20:01:30\nServer's Module Magic Number: 20020903:0\nArchitecture:   64-bit\nServer compiled with....\n -D APACHE_MPM_DIR=\"server/mpm/prefork\"\n -D APR_HAS_SENDFILE\n -D APR_HAS_MMAP\n -D APR_HAVE_IPV6 (IPv4-mapped addresses enabled)\n -D APR_USE_PROC_PTHREAD_SERIALIZE\n -D APR_USE_PTHREAD_SERIALIZE\n -D SINGLE_LISTEN_UNSERIALIZED_ACCEPT\n -D APR_HAS_OTHER_CHILD\n -D AP_HAVE_RELIABLE_PIPED_LOGS\n -D HTTPD_ROOT=\"/opt/apache\"\n -D SUEXEC_BIN=\"/opt/apache/bin/suexec\"\n -D DEFAULT_PIDLOG=\"logs/httpd.pid\"\n -D DEFAULT_SCOREBOARD=\"logs/apache_runtime_status\"\n -D DEFAULT_LOCKFILE=\"logs/accept.lock\"\n -D DEFAULT_ERRORLOG=\"logs/error_log\"\n -D AP_TYPES_CONFIG_FILE=\"conf/mime.types\"\n -D SERVER_CONFIG_FILE=\"conf/httpd.conf\""}, {"count": 2, "tags": [], "creator": "David.Deaves@dd.id.au", "attachment_id": 6299, "id": 36996, "time": "2003-05-09T16:52:26Z", "bug_id": 19242, "creation_time": "2003-05-09T16:52:26Z", "is_private": false, "text": "Created attachment 6299\nInitialise the 'block' and 'mode' members of bio_filter_in_ctx_t"}, {"count": 3, "tags": [], "text": "The problem was eventually tracked down.\nI traced it back to the  'block' member of\nthe 'bio_filter_in_ctx_t' structure not being\ninitialized before being used.\nSo I added initializatoins for the 'block' member\nand the 'mode' member (also not initialized but\ndidn't contribute to our problem) to the\n'ssl_io_input_add_filter' function.\n\nOf interest, the unitialized values ended up being\nbad after a SSL connection to a MicroSoft ISA server.\nThe ISA server doesn't send a 'close_notify' at\nthe end of the session.\n\n", "attachment_id": null, "id": 36997, "creator": "David.Deaves@dd.id.au", "time": "2003-05-09T16:59:51Z", "bug_id": 19242, "creation_time": "2003-05-09T16:59:51Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 19242, "is_private": false, "text": "  David, the issue with your patch is that we properly initialize within\n  the input filter, but never properly initialized the blocking mode in\n  the output filter.  The output filter must always block for a complete\n  handshake or other activity, so you will find the appropriate patches\n  with modules/ssl/ssl_engine_io.c rev 1.106, credited to both your initial\n  efforts and my patch.\n\n  This is not yet backported.  Would you test the attached patch against your\n  Apache 2.0 build and confirm the patch resolves your problem?", "id": 39208, "time": "2003-06-20T20:51:17Z", "creator": "wrowe@apache.org", "creation_time": "2003-06-20T20:51:17Z", "attachment_id": null}, {"count": 5, "tags": [], "text": "The fixes for this were included in 2.0.48.", "attachment_id": null, "id": 46988, "creator": "jorton@redhat.com", "time": "2003-11-07T13:49:56Z", "bug_id": 19242, "creation_time": "2003-11-07T13:49:56Z", "is_private": false}, {"count": 6, "tags": [], "creator": "jorton@redhat.com", "attachment_id": null, "text": "*** Bug 20785 has been marked as a duplicate of this bug. ***", "id": 47492, "time": "2003-11-17T11:53:13Z", "bug_id": 19242, "creation_time": "2003-11-17T11:53:13Z", "is_private": false}]