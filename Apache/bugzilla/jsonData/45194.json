[{"count": 0, "tags": [], "bug_id": 45194, "text": "If a custom BuildListener retrieves a project property value inside the messageLogged() method, this can cause a deadlock when the ParallelTask is used, even in simple cases.  \n\nIn essence: Project.log locks the Project instance, and build listeners that access synchronized PropertyHelper methods will then lock the PropertyHelper instance: lock(Project) -> lock(PropertyHelper).  The race occurs when another thread calls a synchronized method in PropertyHelper (e.g. Project.getProperty()) since many of the PropertyHelper methods call project.log: lock(PropertyHelper) -> lock(Project).\n\nPerhaps this is a caveat of using the Parallel task, but I think that accessing project properties (read-only) inside BuildListener.messageLogged should be made safe in this situation, since this can occur in the simplest usage of the parallel task.\n\nThis is a race condition on the Project object and its PropertyHelper instance:  fireMessageLoggedEvent in Project locks the Project prior to notifying BuildListeners.  And the synchronized method PropertyHelper.setNewProperty()  can call Project.log which invokes fireMessageLoggedEvent which locks the Project.  Thus if a BuildListener invokes the synchronized method PropertyHelper.getProperty() it will attempt to lock the PropertyHelper, causing a race condition if two threads are running.\n\n1. Project.fireMessageLoggedEvent -> synchronized(Project) -> BuildListener.messageLogged -> synchronized PropertyHelper.getProperty()\n\n2. synchronized PropertyHelper.setNewProperty  -> Project.log -> Project.fireMessageLoggedEvent -> synchronized(Project)\n\nThis can be reproduced with a simple <parallel> task with a few threads that just set property values and use the <echo> task.  Additionally, running ant in debug mode will cause extra Project.log() calls inside PropertyHelper.setProperty() which also may trigger deadlock.\n\nPerhaps the solution is to remove the calls to project.log inside the synchronized methods of PropertyHelper?    Otherwise there should be a lock on the Project instance prior to calling any of PropertyHelper's synchronized methods.  \n\nRunning the following build with the custom TestBL BuildListener reaches deadlock after a few attempts:\n\nTestBL.java:\n\nimport org.apache.tools.ant.BuildListener;\nimport org.apache.tools.ant.BuildEvent;\n\npublic class TestBL implements BuildListener{\n    public void messageLogged(BuildEvent event) {\n        String blahval = event.getProject().getProperty(\"blah\");\n        String blahval2 = event.getProject().getProperty(\"blah2\");\n        String blahval3 = event.getProject().getProperty(\"blah3\");\n        String blahval4 = event.getProject().getProperty(\"blah\");\n        String blahval5 = event.getProject().getProperty(\"blah2\");\n        String blahval6 = event.getProject().getProperty(\"blah3\");\n        String blahval7= event.getProject().getProperty(\"blah\");\n        String blahval8 = event.getProject().getProperty(\"blah2\");\n        String blahval9 = event.getProject().getProperty(\"blah3\");\n    }\n    public void buildStarted(BuildEvent event) { }\n    public void buildFinished(BuildEvent event) { }\n    public void targetStarted(BuildEvent event) { } \n    public void targetFinished(BuildEvent event) { } \n    public void taskStarted(BuildEvent event) { } \n    public void taskFinished(BuildEvent event) { }\n}\n\n\nbuild.xml:\n\n<project name=\"test\" default=\"execute\">\n    <target name=\"execute\">\n        <parallel threadCount=\"3\">\n            <sequential>\n                <property name=\"blah\" value=\"blahblah 1\"/>\n                <property name=\"blaha\" value=\"blahblah 1\"/>\n                <property name=\"blahb\" value=\"blahblah 1\"/>\n                <echo>This is a test 1: ${blah}</echo>\n            </sequential>\n            <sequential>\n                <echo>This is a test 2: ${blah2}</echo>\n                <echo>This is a test 2: ${blah2}</echo>\n                <echo>This is a test 2: ${blah2}</echo>\n                <property name=\"blah2\" value=\"blahblah 2\"/>\n                <property name=\"blah2\" value=\"blahblah 2\"/>\n                <property name=\"blah2\" value=\"blahblah 2\"/>\n            </sequential>\n            <sequential>\n                <echo>This is a test 3: ${blah3}</echo>\n                <echo>This is a test 3: ${blah3}</echo>\n                <echo>This is a test 3: ${blah3}</echo>\n                <property name=\"blah3\" value=\"blahblah 3\"/>\n                <property name=\"blah3\" value=\"blahblah 3\"/>\n                <property name=\"blah3\" value=\"blahblah 3\"/>\n                <property name=\"blah3\" value=\"blahblah 3\"/>\n            </sequential>\n        </parallel>\n    </target>\n</project>\n\n$ javac -classpath ant.jar TestBL.java\n$ ant -lib . -listener TestBL -f build.xml", "id": 117635, "time": "2008-06-12T11:28:52Z", "creator": "greg.schueler+bugzilla.asf@gmail.com", "creation_time": "2008-06-12T11:28:52Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 45194, "attachment_id": null, "is_private": false, "id": 117814, "time": "2008-06-19T05:20:49Z", "creator": "bodewig@apache.org", "creation_time": "2008-06-19T05:20:49Z", "text": "there no longer is any lock held while the listener's messageLogged method is executing, this should avoid the deadlock."}, {"count": 2, "text": "forgot the subversion revision: 669464", "bug_id": 45194, "is_private": false, "id": 117815, "time": "2008-06-19T05:21:24Z", "creator": "bodewig@apache.org", "creation_time": "2008-06-19T05:21:24Z", "tags": [], "attachment_id": null}]