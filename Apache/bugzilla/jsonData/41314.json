[{"count": 0, "tags": [], "creator": "trevor@vocaro.com", "attachment_id": null, "id": 97737, "time": "2007-01-06T21:35:15Z", "bug_id": 41314, "creation_time": "2007-01-06T21:35:15Z", "is_private": false, "text": "CONTEXT\n\nFor the Xslt task, it is sometimes necessary to specify an alternate processor, such as Saxon. The usual \nway to do this is via the classpath attribute of the Xslt task. Simply adding the Saxon JAR to this attribute \nallows Ant to find, load, and use the Saxon processor.\n\nPROBLEM\n\nIf a Xalan processor happens to be listed in the CLASSPATH environment variable, this technique does \nnot work. Xalan, not Saxon, is used instead. It appears that CLASSPATH trumps Xslt's classpath attribute. \n(Note that those who've installed Ant via the Fink package manager have Xalan in their CLASSPATH by \ndefault, so this is not an uncommon situation.)\n\nWORKAROUNDS\n\nThere are three workarounds for this problem:\n\n1) Alter the CLASSPATH variable so that the Saxon JAR is listed before Xalan\n2) Add the parameter \"-lib <path-to-Saxon-JAR>\" when calling Ant on the command line\n3) Use the <factory> sub-element of the Xslt task to specify the Saxon factory class explicitly, thus \noverriding Xalan.\n\nThe first two workarounds are unsatisfactory because they impose an artificial requirement on users to \nadjust their Ant startup classpath. As for the third workaround, it does not work at all; it always results \nin a ClassNotFoundException.\n\nTEST CASE\n\nThe attached test case reproduces the ClassNotFoundException of workaround #3. It has been verified \non the 2007-01-06 nightly build. To reproduce:\n\n1) Download the test case and extract the archive to a directory of your choice\n2) Make sure your system's CLASSPATH environment variable is empty\n3) Switch to that directory and run \"ant\". The Saxon processor will be used in the transformation, as \nindicated by the warning \"Running an XSLT 1.0 stylesheet with an XSLT 2.0 processor\". This is the \nexpected behavior because the Saxon JAR is specified in the Xslt task's classpath attribute.\n4) Add the provided Xalan JAR to your system's CLASSPATH environment variable. (e.g., \"export \nCLASSPATH=xalan-2.7.0.jar\")\n5) Run \"ant\" again. The Xalan processor is used, which is not the desired behavior.\n6) Attempt to workaround this problem by uncommenting the <factory> nested element in build.xml \n(line 12).\n7) Run \"ant\" again. You will see an error: \"java.lang.ClassNotFoundException: \nnet.sf.saxon.TransformerFactoryImpl\".\n\nThis is not the expected behavior because the class is contained in the provided Saxon JAR, and this JAR \nis listed in Xslt's classpath attribute.\n\nREFERENCES\n\nThis issue is discussed in the Ant FAQ:\n\nhttp://ant.apache.org/faq.html#delegating-classloader\n\nHowever, the workaround given in the FAQ requires the user to alter the Ant installation. This is a \nburden for users and should not be necessary. In fact, it has been eliminated in Ant 1.7.0, but only for \nthe <junit> task, as described in bug #38799. The Xslt task still needs to be fixed."}, {"count": 1, "tags": [], "bug_id": 41314, "text": "Created attachment 19372\nTest case demonstrating ClassNotFoundException when using <factory> nested element\n\nExtra JARs for Saxon and Xalan are required to run this test case. They can be\nobtained here:\n\nhttp://vocaro.com/trevor/files/saxon-b-8.8.jar\nhttp://vocaro.com/trevor/files/xalan-2.7.0.jar", "id": 97738, "time": "2007-01-06T21:38:31Z", "creator": "trevor@vocaro.com", "creation_time": "2007-01-06T21:38:31Z", "is_private": false, "attachment_id": 19372}, {"count": 2, "tags": [], "creator": "trevor@vocaro.com", "attachment_id": null, "id": 97768, "time": "2007-01-08T00:46:05Z", "bug_id": 41314, "creation_time": "2007-01-08T00:46:05Z", "is_private": false, "text": "I've discovered a fourth workaround, as discussed on my blog:\n\nhttp://www.vocaro.com/trevor/blog/2007/01/08/how-to-use-saxon-with-ant/\n\nHowever, it's a bit of a hack, and workaround #3 is still the ideal solution...if it would work.\n"}, {"count": 3, "tags": [], "bug_id": 41314, "attachment_id": null, "id": 114942, "creation_time": "2008-03-25T04:41:37Z", "time": "2008-03-25T04:41:37Z", "creator": "davidcorley@gmail.com", "text": "I've increased the severity of this issue, as it can really only be described as broken functionality. If the user specifies both a classpath and factory within an <xslt> task, then Ant should look for the factory on the specified classpath, period.", "is_private": false}, {"count": 4, "tags": [], "bug_id": 41314, "attachment_id": null, "text": "Is there any chance of this bug being fixed please?\nIt's affecting both xslt 1.0 and 2.0 processors?\n", "id": 115572, "time": "2008-04-13T00:57:08Z", "creator": "dave.pawson@gmail.com", "creation_time": "2008-04-13T00:57:08Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 41314, "attachment_id": null, "text": "I know this bug is older, but bug 46172 points to the root cause.\n\n*** This bug has been marked as a duplicate of bug 46172 ***", "id": 122783, "time": "2008-11-24T08:13:23Z", "creator": "bodewig@apache.org", "creation_time": "2008-11-24T08:13:23Z", "is_private": false}]