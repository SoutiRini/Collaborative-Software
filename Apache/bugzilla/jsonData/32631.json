[{"count": 0, "attachment_id": null, "bug_id": 32631, "text": "If you define the following fileset as the whole webapp:\n\n<fileset id=\"webapp\">\n  <!-- ... -->\n</fileset>\n\n.. then the following \"constrained\" reference should include only the WEB-INF\ndirectory of the webapp:\n\n<fileset refid=\"webapp\" includes=\"WEB-INF/**\"/>", "id": 68234, "time": "2004-12-10T13:58:49Z", "creator": "hengels@mercatis.de", "creation_time": "2004-12-10T13:58:49Z", "tags": [], "is_private": false}, {"count": 1, "tags": [], "bug_id": 32631, "attachment_id": null, "is_private": false, "id": 68235, "time": "2004-12-10T14:06:04Z", "creator": "jan@materne.de", "creation_time": "2004-12-10T14:06:04Z", "text": "The attributes includes and excludes are - simply spoken - an easier way for \ndefining the include/exclude selectors.\n\n<fileset dir=\".\" includes=\"WEB-INF/\"/>\n\nis the same as\n\n<fileset dir=\".\">\n  <include name=\"WEB-INF/\"/>\n</fileset>\n\n\nAdding these two attributes together with refid would result in the question \nwhy not using all the other selectors too. \nThat would result in a completely different meaning. refid refers to an \nexisting ProjectComponent (not only filesets) as it was defined earlier. \n\nYou want to use that as a template for defining new.\n\nBut you can solve your need:\n\n<fileset id=\"webapp.only\" ... includes=\"WEB-INF/\"/>\n<fileset id=\"webapp.rest\" ... excludes=\"WEB-INF/\"/>\n\nThen uses both references.\n\n<copy|javac|...>\n   <fileset refid=\"webapp.only\"/>\n   <fileset refid=\"webapp.rest\"/>\n</>"}, {"count": 2, "tags": [], "text": ".. then allow all selectors.\n\nWith http://antifact.sf.net you can import filesets from other modules. Every\nmodule exports its artifacts as filesets with ids.\n\nIf you import filesets (artifacts) from other modules / build files, you don't\ndefine the filesets yourself. They are defined by someone else. You can only use\nthem as they are. Then it would be handy, if you could refine the using my\nproposed construct.\n\nThis extensions is IMHO much better than nested filesets or sets of filesets as\ndescribed in other feature requests.\n", "is_private": false, "id": 68237, "creator": "hengels@mercatis.de", "time": "2004-12-10T14:16:17Z", "bug_id": 32631, "creation_time": "2004-12-10T14:16:17Z", "attachment_id": null}, {"count": 3, "tags": [], "text": "That's just not what id/refid DO.  refid is a link to a previously defined\nobject.  A significant amount of code in Ant serves the purpose of enforcing the\nprinciple that to define any other attribute in conjunction with refid is an\nerror, not only on filesets but most if not all tasks and types.  The normal way\nto do this is by defining the patternsets and selectors that make your fileset\nwhat it is and mix and match these by refid into different filesets.  Another\npossible means of defining a fileset for later refinement might involve the\npresetdef task.  These are the options open to you today.  If you have no\ncontrol over the template filesets the only solution I see is a custom task.  In\nthe future it might be possible to provide such a task to obtain a cloned\nfileset instance (possibly of any Cloneable object).", "is_private": false, "id": 68247, "creator": "mbenson@apache.org", "time": "2004-12-10T17:07:33Z", "bug_id": 32631, "creation_time": "2004-12-10T17:07:33Z", "attachment_id": null}, {"count": 4, "attachment_id": null, "bug_id": 32631, "is_private": false, "id": 68333, "time": "2004-12-13T08:45:49Z", "creator": "hengels@mercatis.de", "creation_time": "2004-12-13T08:45:49Z", "tags": [], "text": "(In reply to comment #3)\n> the future it might be possible to provide such a task to obtain a cloned\n> fileset instance (possibly of any Cloneable object).\n\nYes, that's the proper solution. Is this enhancement already planned /\nscheduled. I can't find the related issue. Thanks!!"}, {"count": 5, "tags": [], "bug_id": 32631, "attachment_id": null, "is_private": false, "id": 68407, "time": "2004-12-13T18:22:02Z", "creator": "mbenson@apache.org", "creation_time": "2004-12-13T18:22:02Z", "text": "I will look into this.  We should be able to come up with something at least for\nfileset, if not for all Cloneables."}, {"count": 6, "tags": [], "creator": "mbenson@apache.org", "text": "I have just added a clone task to CVS HEAD.", "id": 69403, "time": "2005-01-07T22:58:43Z", "bug_id": 32631, "creation_time": "2005-01-07T22:58:43Z", "is_private": false, "attachment_id": null}, {"count": 7, "tags": [], "bug_id": 32631, "is_private": false, "id": 69480, "attachment_id": null, "creator": "ddevienne@lgc.com", "creation_time": "2005-01-10T15:29:03Z", "time": "2005-01-10T15:29:03Z", "text": "I don't know about others, but I find this clone task strange at the very \nleast, and not necessarily desirable. The name's obviously confusing, but even \nthe functionality's strange (to me). Is this something we really want in Ant? --\nDD"}, {"count": 8, "attachment_id": null, "bug_id": 32631, "text": "It is weird, isn't it?  I was wondering what kind of controversy it might\ngenerate, but on the overall it's such a small bit of code that it seems quite\nharmless to me.  Do you suggest a different name, cloneobject perhaps?", "id": 69482, "time": "2005-01-10T16:30:27Z", "creator": "mbenson@apache.org", "creation_time": "2005-01-10T16:30:27Z", "tags": [], "is_private": false}, {"count": 9, "tags": [], "text": "I don't have a better name, and don't like the feature so far. I'll leave it at \nthat if I'm the only one who doesn't like it, but otherwise my personal opinion \nis that although the use case has some merit, I don't think we should address \nit this way (or at all). I'd be more inclined if anything to allow nested \nfilesets in a dir-less fileset (with the additional constraint that all nested \nfilesets should have the same dir) than to have a generic clone. The use case \nwould then be:\n\n<fileset>\n  <fileset refid=\"webapp\" />\n  <include name=\"WEB-INF/\" />\n<fileset>\n\n--DD", "is_private": false, "id": 69484, "creator": "ddevienne@lgc.com", "time": "2005-01-10T16:41:06Z", "bug_id": 32631, "creation_time": "2005-01-10T16:41:06Z", "attachment_id": null}, {"count": 10, "tags": [], "creator": "hengels@mercatis.de", "is_private": false, "text": "Is a dedicated clone task really the correct approach? Shouldn't we solve it in\nthe type's domain. For example:\n\n  <fileset id=\"webapp\">\n    <!-- ... -->\n  </fileset>\n\n  <fileset id=\"webapp-webinf-only\" extends=\"webapp\" includes=\"WEB-INF/**\"/>\n\nThe meaning of \"extends\" is: all attributes, that are not overridden locally,\ndefault to those of the \"supertype\". likewise all nested elements, specified\nlocally, supplement those of the supertype.\n\nHolger\n", "id": 69490, "time": "2005-01-10T17:07:08Z", "bug_id": 32631, "creation_time": "2005-01-10T17:07:08Z", "attachment_id": null}, {"count": 11, "tags": [], "creator": "mbenson@apache.org", "is_private": false, "text": "By popular demand, the clone task has been removed.  The recommended solution\nfor this problem will be ResourceCollections, just added to CVS HEAD.  Right now\nthe only tasks specifically fitted to ResourceCollections are concat,\npathconvert, the new length, and the newer resourcecount.  However, tasks that\naccept paths should be able to use filesystem-only resource collections OOTB. \nFeel welcome to submit patches for ResourceCollection support to any other task.\n\nThanks,\nMatt", "id": 75241, "time": "2005-05-23T22:06:42Z", "bug_id": 32631, "creation_time": "2005-05-23T22:06:42Z", "attachment_id": null}]