[{"count": 0, "text": "As per previous discussion on dev mailing list:\n- http://mail-archives.apache.org/mod_mbox/jmeter-dev/201401.mbox/%3CCAH9fUpa%2BJ636TXiWJYM1%2B7nvO3v9pi0xbdAsH_L1bpMiutsZ_A%40mail.gmail.com%3E\n\n- http://mail-archives.apache.org/mod_mbox/jmeter-dev/201201.mbox/%3CCAH9fUpYWBNH4bMzw0SwZEwN_GKKy1qe42k-i%3DZb6_kZo2FLLXQ%40mail.gmail.com%3E\n\nI propose to switch to Tomcat Pool for the following reasons:\n- It is used by Tomcat so useful for developers who want to test the pool options\n- It is up to date while Excalibur is in the ATTIC\n- It supports JDBC 4 , not excalibur\n- It appears to have nice performances", "bug_id": 58786, "is_private": false, "id": 187263, "time": "2015-12-30T18:31:02Z", "creator": "p.mouawad@ubik-ingenierie.com", "creation_time": "2015-12-30T18:31:02Z", "tags": [], "attachment_id": null}, {"count": 1, "text": "Created attachment 33387\nImplementation of Bug", "bug_id": 58786, "is_private": false, "id": 187264, "time": "2015-12-30T18:46:30Z", "creator": "p.mouawad@ubik-ingenierie.com", "creation_time": "2015-12-30T18:46:30Z", "tags": [], "attachment_id": 33387}, {"count": 2, "tags": [], "creator": "felix.schumacher@internetallee.de", "attachment_id": null, "is_private": false, "id": 187265, "time": "2015-12-30T18:58:38Z", "bug_id": 58786, "creation_time": "2015-12-30T18:58:38Z", "text": "tomcat-jdbc is probably not the best choice. A better choice would be dbcp2 from commons.\n\nThat db pool is included in tomcat (8 and higher) also and is the default implementation there, so it should have a higher test coverage by real users."}, {"count": 3, "text": "Created attachment 33388\nPatch using DBCP2", "bug_id": 58786, "is_private": false, "id": 187273, "time": "2015-12-30T21:49:02Z", "creator": "p.mouawad@ubik-ingenierie.com", "creation_time": "2015-12-30T21:49:02Z", "tags": [], "attachment_id": 33388}, {"count": 4, "tags": [], "bug_id": 58786, "attachment_id": null, "text": "Hi Felix,\nI attached a new patch using DBCP2.\nBUT , comparing performances, it is strange as it appears DBCP2 is slower than Excalibur (when using Max Number of Connections > 0) , throughput is divided by 2.\n\nWHILE Tomcat-Pool has a much higher throughput than excalibur and DBCP2.\n\n\nMaybe I made a mistake somewhere, so an external eye is welcome.\n\nRegards\n\nPhilippe", "id": 187274, "time": "2015-12-30T21:52:45Z", "creator": "p.mouawad@ubik-ingenierie.com", "creation_time": "2015-12-30T21:52:45Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 58786, "attachment_id": 33389, "text": "Created attachment 33389\nTest plan used for comparison", "id": 187275, "time": "2015-12-30T21:53:11Z", "creator": "p.mouawad@ubik-ingenierie.com", "creation_time": "2015-12-30T21:53:11Z", "is_private": false}, {"count": 6, "text": "Update:\n\nI made a benchmark based on attached test plan and I am wrong in my last comment:\nDBCP:\nGenerate Summary Results =  50000 in 00:00:06 = 8860.5/s Avg:     4 Min:     0 Max:   417 Err:     0 (0.00%)\nGenerate Summary Results =  50000 in 00:00:05 = 9109.1/s Avg:     4 Min:     0 Max:   411 Err:     0 (0.00%)\nGenerate Summary Results =  50000 in 00:00:06 = 9053.1/s Avg:     4 Min:     0 Max:   416 Err:     0 (0.00%)\n\nTOMCAT POOL:\nGenerate Summary Results =  50000 in 00:00:04 = 12242.9/s Avg:     3 Min:     0 Max:   591 Err:     0 (0.00%)\nGenerate Summary Results =  50000 in 00:00:03 = 15216.1/s Avg:     2 Min:     0 Max:   422 Err:     0 (0.00%)\nGenerate Summary Results =  50000 in 00:00:03 = 14654.2/s Avg:     2 Min:     0 Max:   412 Err:     0 (0.00%)\n\n\nEXCALIBUR\nGenerate Summary Results =  50000 in     2s = 30921.5/s Avg:     0 Min:     0 Max:   214 Err:     0 (0.00%)\nGenerate Summary Results =  50000 in     2s = 29360.0/s Avg:     0 Min:     0 Max:   252 Err:     0 (0.00%)\nGenerate Summary Results =  50000 in     2s = 31645.6/s Avg:     0 Min:     0 Max:   186 Err:     0 (0.00%)\n\n\n\nSo if my benchmark is not wrong:\nExcalibur is the fastest, then Tomcat JDBC and finally DBCP2\n\nLook strange to me.", "bug_id": 58786, "attachment_id": null, "id": 187276, "time": "2015-12-30T22:28:38Z", "creator": "p.mouawad@ubik-ingenierie.com", "creation_time": "2015-12-30T22:28:38Z", "tags": [], "is_private": false}, {"count": 7, "tags": [], "creator": "sworisbreathing@gmail.com", "attachment_id": null, "is_private": false, "id": 187277, "time": "2015-12-31T05:19:53Z", "bug_id": 58786, "creation_time": "2015-12-31T05:19:53Z", "text": "Hi Phillippe,\n\nHave you evaluated C3P0 or Commons-Pool as possible alternatives? It would be nice to see some throughput comparison of those pooling implementations as well (not just from a JMeter perspective, but for the J2EE developer community as a whole)."}, {"count": 8, "tags": [], "bug_id": 58786, "attachment_id": null, "text": "(In reply to Steven Swor from comment #7)\n> Hi Phillippe,\n> \n> Have you evaluated C3P0 or Commons-Pool as possible alternatives? It would\n> be nice to see some throughput comparison of those pooling implementations\n> as well (not just from a JMeter perspective, but for the J2EE developer\n> community as a whole).\n\nI just stumbled upon https://github.com/brettwooldridge/HikariCP which claims to be a really high performing pooling implementation. Probably worth a look as well.", "id": 187278, "time": "2015-12-31T05:33:17Z", "creator": "sworisbreathing@gmail.com", "creation_time": "2015-12-31T05:33:17Z", "is_private": false}, {"count": 9, "tags": [], "bug_id": 58786, "attachment_id": null, "id": 187279, "time": "2015-12-31T07:51:46Z", "creator": "pascalschumacher@gmx.net", "creation_time": "2015-12-31T07:51:46Z", "is_private": false, "text": "HikariCP would be my first choice. It is great, apache licensed and has very helpful documentation, e.g. https://github.com/brettwooldridge/HikariCP/wiki/%22My-benchmark-doesn't-show-a-difference.%22"}, {"count": 10, "tags": [], "bug_id": 58786, "attachment_id": null, "id": 187280, "time": "2015-12-31T08:44:01Z", "creator": "milamber@apache.org", "creation_time": "2015-12-31T08:44:01Z", "is_private": false, "text": "HikariCP have very impressive performances against the other pool managers! Probably a good choice to replace Excalibur (but need to be confirm via a performance comparison)"}, {"count": 11, "tags": [], "creator": "p.mouawad@ubik-ingenierie.com", "attachment_id": null, "is_private": false, "id": 187286, "time": "2015-12-31T16:25:31Z", "bug_id": 58786, "creation_time": "2015-12-31T16:25:31Z", "text": "Hi,\nI agree perf seem impressive but there are other factors that are important and one that I don't find great is that I see 1 main contributor vs many for dbcp2 or tomcat-jdbc.\n\nAnyway I find it strange that perf of dbcp and tomcat-jdbc are not better than excalibur."}, {"count": 12, "text": "Results with HikariCP for the attached JMX:\nGenerate Summary Results =  50000 in 00:00:03 = 18063.6/s Avg:     1 Min:     0 Max:    61 Err:     0 (0.00%)\nGenerate Summary Results =  50000 in 00:00:03 = 18254.8/s Avg:     1 Min:     0 Max:    68 Err:     0 (0.00%)\nGenerate Summary Results =  50000 in 00:00:03 = 18382.4/s Avg:     1 Min:     0 Max:    80 Err:     0 (0.00%)", "bug_id": 58786, "is_private": false, "id": 187288, "time": "2015-12-31T17:48:23Z", "creator": "p.mouawad@ubik-ingenierie.com", "creation_time": "2015-12-31T17:48:23Z", "tags": [], "attachment_id": null}, {"count": 13, "tags": [], "bug_id": 58786, "is_private": false, "id": 187290, "attachment_id": null, "creator": "p.mouawad@ubik-ingenierie.com", "creation_time": "2015-12-31T17:54:10Z", "time": "2015-12-31T17:54:10Z", "text": "Using dataSourceConfig.setDataSourceClassName(\"org.postgresql.ds.PGSimpleDataSource\")\ninstead of : dataSource.setDriverClassName(getDriver());\n\nAs per :\n- https://github.com/brettwooldridge/HikariCP#configuration-knobs-baby\n\nResults are the best:\n\nGenerate Summary Results =  50000 in 00:00:01 = 36231.9/s Avg:     0 Min:     0 Max:   225 Err:     0 (0.00%)\nGenerate Summary Results =  50000 in 00:00:01 = 35663.3/s Avg:     0 Min:     0 Max:   159 Err:     0 (0.00%)\nGenerate Summary Results =  50000 in 00:00:01 = 35612.5/s Avg:     0 Min:     0 Max:   227 Err:     0 (0.00%)"}, {"count": 14, "tags": [], "bug_id": 58786, "attachment_id": null, "id": 187291, "time": "2015-12-31T18:01:35Z", "creator": "p.mouawad@ubik-ingenierie.com", "creation_time": "2015-12-31T18:01:35Z", "is_private": false, "text": "I am not fair in comparison, org.postgresql.ds.PGSimpleDataSource is a postgres class, wait for more"}, {"count": 15, "tags": [], "bug_id": 58786, "attachment_id": null, "id": 187292, "time": "2015-12-31T19:00:06Z", "creator": "felix.schumacher@internetallee.de", "creation_time": "2015-12-31T19:00:06Z", "is_private": false, "text": "You could even use h2 as a jdbc driver with inbuilt db.\n\nI tried the three different sets excalibur, tomcat-jdbc and dbcp2. When using the jdbc uri jdbc:h2:~/test;TRACE_LEVEL_FILE=2 (with 5 threads, pool-size and loops) it will generate a trace file under ~/test.trace.db which shows, that tomcat-jdbc and dbcp2 will create 5 connections, but excalibur seems to create only one connection."}, {"count": 16, "tags": [], "bug_id": 58786, "is_private": false, "id": 187298, "attachment_id": null, "creator": "p.mouawad@ubik-ingenierie.com", "creation_time": "2016-01-01T11:40:19Z", "time": "2016-01-01T11:40:19Z", "text": "Hi Felix,\nI made further tests:\n1/ I don't see what you notice\n2/ I was wrong in my previous approach as my machine was overloaded at 50 threads so results were meaningless\n\n\nI made a new set of tests:\n5 threads\nDBCP2:\nGenerate Summary Results =  50000 in 00:00:02 = 22212.4/s Avg:     0 Min:     0 Max:    50 Err:     0 (0.00%)\nGenerate Summary Results =  50000 in 00:00:02 = 22341.4/s Avg:     0 Min:     0 Max:    45 Err:     0 (0.00%)\nGenerate Summary Results =  50000 in 00:00:02 = 22431.6/s Avg:     0 Min:     0 Max:    45 Err:     0 (0.00%)\n\n\nExcalibur:\nGenerate Summary Results =  50000 in 00:00:02 = 22716.9/s Avg:     0 Min:     0 Max:     9 Err:     0 (0.00%)\nGenerate Summary Results =  50000 in 00:00:02 = 22779.0/s Avg:     0 Min:     0 Max:    10 Err:     0 (0.00%)\nGenerate Summary Results =  50000 in 00:00:02 = 22573.4/s Avg:     0 Min:     0 Max:     9 Err:     0 (0.00%)\n\nTomcat JDBC:\nGenerate Summary Results =  50000 in 00:00:02 = 23946.4/s Avg:     0 Min:     0 Max:     1 Err:     0 (0.00%)\nGenerate Summary Results =  50000 in 00:00:02 = 24108.0/s Avg:     0 Min:     0 Max:     1 Err:     0 (0.00%)\nGenerate Summary Results =  50000 in 00:00:02 = 24084.8/s Avg:     0 Min:     0 Max:     1 Err:     0 (0.00%)\n\n\n\n\n10 Threads:\nExcalibur\nPlease use CMSClassUnloadingEnabled in place of CMSPermGenSweepingEnabled in the future\nWriting log file to:/data/decathlon/workspace/jmeter/bin/jmeter.log\nGenerate Summary Results +      1 in 00:00:00 =    5.0/s Avg:    65 Min:    65 Max:    65 Err:     0 (0.00%) Active: 1 Started: 1 Finished: 0\nGenerate Summary Results +  99999 in 00:00:03 = 29841.5/s Avg:     0 Min:     0 Max:   105 Err:     0 (0.00%) Active: 0 Started: 10 Finished: 10\nGenerate Summary Results = 100000 in 00:00:04 = 28161.1/s Avg:     0 Min:     0 Max:   105 Err:     0 (0.00%)\nGenerate Summary Results = 100000 in 00:00:03 = 34916.2/s Avg:     0 Min:     0 Max:    10 Err:     0 (0.00%)\nGenerate Summary Results = 100000 in 00:00:03 = 35112.4/s Avg:     0 Min:     0 Max:    10 Err:     0 (0.00%)\nGenerate Summary Results +      1 in 00:00:00 =    9.2/s Avg:     1 Min:     1 Max:     1 Err:     0 (0.00%) Active: 1 Started: 1 Finished: 0\nGenerate Summary Results +  99999 in 00:00:03 = 36179.1/s Avg:     0 Min:     0 Max:     9 Err:     0 (0.00%) Active: 0 Started: 10 Finished: 10\nGenerate Summary Results = 100000 in 00:00:03 = 34794.7/s Avg:     0 Min:     0 Max:     9 Err:     0 (0.00%)\nGenerate Summary Results +      1 in 00:00:00 =    9.3/s Avg:     0 Min:     0 Max:     0 Err:     0 (0.00%) Active: 1 Started: 1 Finished: 0\nGenerate Summary Results +  99999 in 00:00:03 = 36562.7/s Avg:     0 Min:     0 Max:    11 Err:     0 (0.00%) Active: 0 Started: 10 Finished: 10\nGenerate Summary Results = 100000 in 00:00:03 = 35161.7/s Avg:     0 Min:     0 Max:    11 Err:     0 (0.00%)\nGenerate Summary Results = 100000 in 00:00:03 = 35174.1/s Avg:     0 Min:     0 Max:     9 Err:     0 (0.00%)\nGenerate Summary Results +      1 in 00:00:00 =    9.5/s Avg:     0 Min:     0 Max:     0 Err:     0 (0.00%) Active: 1 Started: 1 Finished: 0\nGenerate Summary Results +  99999 in 00:00:03 = 36429.5/s Avg:     0 Min:     0 Max:    11 Err:     0 (0.00%) Active: 0 Started: 10 Finished: 10\nGenerate Summary Results = 100000 in 00:00:03 = 35087.7/s Avg:     0 Min:     0 Max:    11 Err:     0 (0.00%)\n\n\n\nTomcat jdbc:\nPlease use CMSClassUnloadingEnabled in place of CMSPermGenSweepingEnabled in the future\nWriting log file to:/data/decathlon/workspace/jmeter/bin/jmeter.log\nGenerate Summary Results +  40486 in 00:00:02 = 20826.1/s Avg:     0 Min:     0 Max:    79 Err:     0 (0.00%) Active: 10 Started: 10 Finished: 0\nGenerate Summary Results +  59514 in 00:00:01 = 43728.1/s Avg:     0 Min:     0 Max:     5 Err:     0 (0.00%) Active: 0 Started: 10 Finished: 10\nGenerate Summary Results = 100000 in 00:00:03 = 30257.2/s Avg:     0 Min:     0 Max:    79 Err:     0 (0.00%)\nGenerate Summary Results = 100000 in 00:00:03 = 36589.8/s Avg:     0 Min:     0 Max:     2 Err:     0 (0.00%)\nGenerate Summary Results = 100000 in 00:00:03 = 37050.8/s Avg:     0 Min:     0 Max:     3 Err:     0 (0.00%)\nGenerate Summary Results +      1 in 00:00:00 =    8.8/s Avg:     1 Min:     1 Max:     1 Err:     0 (0.00%) Active: 1 Started: 1 Finished: 0\nGenerate Summary Results +  99999 in 00:00:03 = 38008.0/s Avg:     0 Min:     0 Max:     8 Err:     0 (0.00%) Active: 0 Started: 10 Finished: 10\nGenerate Summary Results = 100000 in 00:00:03 = 36429.9/s Avg:     0 Min:     0 Max:     8 Err:     0 (0.00%)\nGenerate Summary Results = 100000 in 00:00:03 = 37119.5/s Avg:     0 Min:     0 Max:     2 Err:     0 (0.00%)\nGenerate Summary Results +      1 in 00:00:00 =    9.0/s Avg:     1 Min:     1 Max:     1 Err:     0 (0.00%) Active: 1 Started: 1 Finished: 0\nGenerate Summary Results +  99999 in 00:00:03 = 38925.3/s Avg:     0 Min:     0 Max:     6 Err:     0 (0.00%) Active: 0 Started: 10 Finished: 10\nGenerate Summary Results = 100000 in 00:00:03 = 37313.4/s Avg:     0 Min:     0 Max:     6 Err:     0 (0.00%)\nGenerate Summary Results = 100000 in 00:00:03 = 36954.9/s Avg:     0 Min:     0 Max:     2 Err:     0 (0.00%)\nGenerate Summary Results = 100000 in 00:00:03 = 36859.6/s Avg:     0 Min:     0 Max:     2 Err:     0 (0.00%)\n\n\nDBCP2:\nPlease use CMSClassUnloadingEnabled in place of CMSPermGenSweepingEnabled in the future\nWriting log file to:/data/decathlon/workspace/jmeter/bin/jmeter.log\nGenerate Summary Results = 100000 in 00:00:04 = 26246.7/s Avg:     0 Min:     0 Max:   312 Err:     0 (0.00%)\nGenerate Summary Results = 100000 in 00:00:03 = 33233.6/s Avg:     0 Min:     0 Max:   210 Err:     0 (0.00%)\nGenerate Summary Results = 100000 in 00:00:03 = 33670.0/s Avg:     0 Min:     0 Max:   172 Err:     0 (0.00%)\nGenerate Summary Results +  99877 in 00:00:03 = 33403.7/s Avg:     0 Min:     0 Max:   162 Err:     0 (0.00%) Active: 1 Started: 10 Finished: 9\nGenerate Summary Results +    123 in 00:00:00 = 8200.0/s Avg:     0 Min:     0 Max:     1 Err:     0 (0.00%) Active: 0 Started: 10 Finished: 10\nGenerate Summary Results = 100000 in 00:00:03 = 33266.8/s Avg:     0 Min:     0 Max:   162 Err:     0 (0.00%)\nGenerate Summary Results +      1 in 00:00:00 =    3.2/s Avg:   170 Min:   170 Max:   170 Err:     0 (0.00%) Active: 2 Started: 2 Finished: 0\nGenerate Summary Results +  99999 in 00:00:03 = 38520.4/s Avg:     0 Min:     0 Max:    69 Err:     0 (0.00%) Active: 0 Started: 10 Finished: 10\nGenerate Summary Results = 100000 in 00:00:03 = 34411.6/s Avg:     0 Min:     0 Max:   170 Err:     0 (0.00%)\nGenerate Summary Results = 100000 in 00:00:03 = 34387.9/s Avg:     0 Min:     0 Max:   158 Err:     0 (0.00%)\nGenerate Summary Results +      1 in 00:00:00 =    3.3/s Avg:   157 Min:   157 Max:   157 Err:     0 (0.00%) Active: 2 Started: 2 Finished: 0\nGenerate Summary Results +  99999 in 00:00:03 = 37864.1/s Avg:     0 Min:     0 Max:    55 Err:     0 (0.00%) Active: 0 Started: 10 Finished: 10\nGenerate Summary Results = 100000 in 00:00:03 = 34002.0/s Avg:     0 Min:     0 Max:   157 Err:     0 (0.00%)\nGenerate Summary Results +      1 in 00:00:00 =    3.4/s Avg:   160 Min:   160 Max:   160 Err:     0 (0.00%) Active: 2 Started: 2 Finished: 0\nGenerate Summary Results +  99999 in 00:00:03 = 36576.1/s Avg:     0 Min:     0 Max:    59 Err:     0 (0.00%) Active: 0 Started: 10 Finished: 10\nGenerate Summary Results = 100000 in 00:00:03 = 33025.1/s Avg:     0 Min:     0 Max:   160 Err:     0 (0.00%)\n\nHikariCP:\nGenerate Summary Results = 100000 in 00:00:04 = 26617.0/s Avg:     0 Min:     0 Max:   320 Err:     0 (0.00%)\nGenerate Summary Results = 100000 in 00:00:03 = 33079.7/s Avg:     0 Min:     0 Max:   176 Err:     0 (0.00%)\nGenerate Summary Results = 100000 in 00:00:03 = 33806.6/s Avg:     0 Min:     0 Max:   174 Err:     0 (0.00%)\nGenerate Summary Results = 100000 in 00:00:03 = 34223.1/s Avg:     0 Min:     0 Max:   162 Err:     0 (0.00%)\nGenerate Summary Results +  95982 in 00:00:03 = 35430.8/s Avg:     0 Min:     0 Max:   161 Err:     0 (0.00%) Active: 4 Started: 10 Finished: 6\nGenerate Summary Results +   4018 in 00:00:00 = 18775.7/s Avg:     0 Min:     0 Max:     1 Err:     0 (0.00%) Active: 0 Started: 10 Finished: 10\nGenerate Summary Results = 100000 in 00:00:03 = 34211.4/s Avg:     0 Min:     0 Max:   161 Err:     0 (0.00%)\nGenerate Summary Results +      1 in 00:00:00 =    3.4/s Avg:   160 Min:   160 Max:   160 Err:     0 (0.00%) Active: 2 Started: 2 Finished: 0\nGenerate Summary Results +  99999 in 00:00:03 = 37849.7/s Avg:     0 Min:     0 Max:    61 Err:     0 (0.00%) Active: 0 Started: 10 Finished: 10\nGenerate Summary Results = 100000 in 00:00:03 = 34059.9/s Avg:     0 Min:     0 Max:   160 Err:     0 (0.00%)\nGenerate Summary Results +      1 in 00:00:00 =    3.4/s Avg:   161 Min:   161 Max:   161 Err:     0 (0.00%) Active: 2 Started: 2 Finished: 0\nGenerate Summary Results +  99999 in 00:00:03 = 37749.7/s Avg:     0 Min:     0 Max:    61 Err:     0 (0.00%) Active: 0 Started: 10 Finished: 10\nGenerate Summary Results = 100000 in 00:00:03 = 33955.9/s Avg:     0 Min:     0 Max:   161 Err:     0 (0.00%)\nGenerate Summary Results = 100000 in 00:00:03 = 33978.9/s Avg:     0 Min:     0 Max:   156 Err:     0 (0.00%)\nGenerate Summary Results = 100000 in 00:00:03 = 33602.2/s Avg:     0 Min:     0 Max:   158 Err:     0 (0.00%)\n\n\n20 Threads:\nExcalibur\nGenerate Summary Results = 200000 in 00:00:05 = 39223.4/s Avg:     0 Min:     0 Max:   197 Err:     0 (0.00%)\nGenerate Summary Results = 200000 in 00:00:05 = 42176.3/s Avg:     0 Min:     0 Max:   126 Err:     0 (0.00%)\nGenerate Summary Results = 200000 in 00:00:05 = 40225.3/s Avg:     0 Min:     0 Max:   125 Err:     0 (0.00%)\nGenerate Summary Results = 200000 in 00:00:05 = 40858.0/s Avg:     0 Min:     0 Max:   127 Err:     0 (0.00%)\nGenerate Summary Results = 200000 in 00:00:05 = 41042.5/s Avg:     0 Min:     0 Max:   126 Err:     0 (0.00%)\nGenerate Summary Results +  64952 in 00:00:02 = 35319.2/s Avg:     0 Min:     0 Max:   126 Err:     0 (0.00%) Active: 20 Started: 20 Finished: 0\nGenerate Summary Results + 135048 in 00:00:03 = 45302.9/s Avg:     0 Min:     0 Max:   145 Err:     0 (0.00%) Active: 0 Started: 20 Finished: 20\nGenerate Summary Results = 200000 in 00:00:05 = 41493.8/s Avg:     0 Min:     0 Max:   145 Err:     0 (0.00%)\nGenerate Summary Results = 200000 in 00:00:05 = 41382.2/s Avg:     0 Min:     0 Max:   126 Err:     0 (0.00%)\nGenerate Summary Results = 200000 in 00:00:05 = 41849.8/s Avg:     0 Min:     0 Max:   140 Err:     0 (0.00%)\nGenerate Summary Results = 200000 in 00:00:05 = 40891.4/s Avg:     0 Min:     0 Max:   130 Err:     0 (0.00%)\nGenerate Summary Results = 200000 in 00:00:05 = 40783.0/s Avg:     0 Min:     0 Max:   125 Err:     0 (0.00%)\n\n\nTomcat jdbc:\nGenerate Summary Results + 177333 in 00:00:04 = 45798.8/s Avg:     0 Min:     0 Max:   131 Err:     0 (0.00%) Active: 0 Started: 20 Finished: 20\nGenerate Summary Results = 200000 in 00:00:05 = 43177.9/s Avg:     0 Min:     0 Max:   131 Err:     0 (0.00%)\nGenerate Summary Results = 200000 in 00:00:05 = 43994.7/s Avg:     0 Min:     0 Max:   127 Err:     0 (0.00%)\nGenerate Summary Results + 113334 in 00:00:03 = 44288.4/s Avg:     0 Min:     0 Max:   126 Err:     0 (0.00%) Active: 20 Started: 20 Finished: 0\nGenerate Summary Results +  86666 in 00:00:02 = 47828.9/s Avg:     0 Min:     0 Max:   125 Err:     0 (0.00%) Active: 0 Started: 20 Finished: 20\nGenerate Summary Results = 200000 in 00:00:04 = 45756.1/s Avg:     0 Min:     0 Max:   126 Err:     0 (0.00%)\nGenerate Summary Results +      1 in 00:00:00 =    8.9/s Avg:     1 Min:     1 Max:     1 Err:     0 (0.00%) Active: 1 Started: 1 Finished: 0\nGenerate Summary Results + 199999 in 00:00:04 = 46082.7/s Avg:     0 Min:     0 Max:   245 Err:     0 (0.00%) Active: 0 Started: 20 Finished: 20\nGenerate Summary Results = 200000 in 00:00:04 = 44923.6/s Avg:     0 Min:     0 Max:   245 Err:     0 (0.00%)\nGenerate Summary Results = 200000 in 00:00:04 = 45987.6/s Avg:     0 Min:     0 Max:   156 Err:     0 (0.00%)\nGenerate Summary Results +      1 in 00:00:00 =    9.7/s Avg:     1 Min:     1 Max:     1 Err:     0 (0.00%) Active: 1 Started: 1 Finished: 0\nGenerate Summary Results + 199999 in 00:00:04 = 46739.7/s Avg:     0 Min:     0 Max:   125 Err:     0 (0.00%) Active: 0 Started: 20 Finished: 20\nGenerate Summary Results = 200000 in 00:00:04 = 45630.8/s Avg:     0 Min:     0 Max:   125 Err:     0 (0.00%)\n\n\nDBCP2:\nGenerate Summary Results = 200000 in 00:00:05 = 39062.5/s Avg:     0 Min:     0 Max:   173 Err:     0 (0.00%)\nGenerate Summary Results +  89785 in 00:00:02 = 37582.7/s Avg:     0 Min:     0 Max:   159 Err:     0 (0.00%) Active: 20 Started: 20 Finished: 0\nGenerate Summary Results + 110215 in 00:00:03 = 42768.7/s Avg:     0 Min:     0 Max:   128 Err:     0 (0.00%) Active: 0 Started: 20 Finished: 20\nGenerate Summary Results = 200000 in 00:00:05 = 40273.9/s Avg:     0 Min:     0 Max:   159 Err:     0 (0.00%)\nGenerate Summary Results +      1 in 00:00:00 =    3.8/s Avg:   154 Min:   154 Max:   154 Err:     0 (0.00%) Active: 4 Started: 4 Finished: 0\nGenerate Summary Results + 199999 in 00:00:05 = 42462.6/s Avg:     0 Min:     0 Max:   207 Err:     0 (0.00%) Active: 0 Started: 20 Finished: 20\nGenerate Summary Results = 200000 in 00:00:05 = 40225.3/s Avg:     0 Min:     0 Max:   207 Err:     0 (0.00%)\nGenerate Summary Results = 200000 in 00:00:05 = 40625.6/s Avg:     0 Min:     0 Max:   164 Err:     0 (0.00%)\nGenerate Summary Results = 200000 in 00:00:05 = 39666.8/s Avg:     0 Min:     0 Max:   160 Err:     0 (0.00%)\nGenerate Summary Results = 200000 in 00:00:05 = 40379.6/s Avg:     0 Min:     0 Max:   161 Err:     0 (0.00%)\nGenerate Summary Results = 200000 in 00:00:05 = 40184.9/s Avg:     0 Min:     0 Max:   158 Err:     0 (0.00%)\nGenerate Summary Results = 200000 in 00:00:05 = 40176.8/s Avg:     0 Min:     0 Max:   159 Err:     0 (0.00%)\nGenerate Summary Results +      1 in 00:00:00 =    3.6/s Avg:   159 Min:   159 Max:   159 Err:     0 (0.00%) Active: 4 Started: 4 Finished: 0\nGenerate Summary Results + 199999 in 00:00:05 = 42899.8/s Avg:     0 Min:     0 Max:   131 Err:     0 (0.00%) Active: 0 Started: 20 Finished: 20\nGenerate Summary Results = 200000 in 00:00:05 = 40502.2/s Avg:     0 Min:     0 Max:   159 Err:     0 (0.00%)\nGenerate Summary Results = 200000 in 00:00:05 = 40404.0/s Avg:     0 Min:     0 Max:   165 Err:     0 (0.00%)\n\nHikariCP:\nGenerate Summary Results + 198611 in 00:00:05 = 40278.0/s Avg:     0 Min:     0 Max:   167 Err:     0 (0.00%) Active: 2 Started: 20 Finished: 18\nGenerate Summary Results +   1389 in 00:00:00 = 15433.3/s Avg:     0 Min:     0 Max:     1 Err:     0 (0.00%) Active: 0 Started: 20 Finished: 20\nGenerate Summary Results = 200000 in 00:00:05 = 39832.7/s Avg:     0 Min:     0 Max:   167 Err:     0 (0.00%)\nGenerate Summary Results +      1 in 00:00:00 =    3.6/s Avg:   170 Min:   170 Max:   170 Err:     0 (0.00%) Active: 4 Started: 4 Finished: 0\nGenerate Summary Results + 199999 in 00:00:05 = 42982.8/s Avg:     0 Min:     0 Max:   141 Err:     0 (0.00%) Active: 0 Started: 20 Finished: 20\nGenerate Summary Results = 200000 in 00:00:05 = 40535.1/s Avg:     0 Min:     0 Max:   170 Err:     0 (0.00%)\nGenerate Summary Results = 200000 in 00:00:05 = 40461.3/s Avg:     0 Min:     0 Max:   162 Err:     0 (0.00%)\nGenerate Summary Results = 200000 in 00:00:05 = 39904.2/s Avg:     0 Min:     0 Max:   164 Err:     0 (0.00%)\nGenerate Summary Results + 190298 in 00:00:05 = 39869.7/s Avg:     0 Min:     0 Max:   159 Err:     0 (0.00%) Active: 9 Started: 20 Finished: 11\nGenerate Summary Results +   9702 in 00:00:00 = 23434.8/s Avg:     0 Min:     0 Max:    26 Err:     0 (0.00%) Active: 0 Started: 20 Finished: 20\nGenerate Summary Results = 200000 in 00:00:05 = 38550.5/s Avg:     0 Min:     0 Max:   159 Err:     0 (0.00%)\nGenerate Summary Results +      1 in 00:00:00 =    3.7/s Avg:   163 Min:   163 Max:   163 Err:     0 (0.00%) Active: 4 Started: 4 Finished: 0\nGenerate Summary Results + 199999 in 00:00:05 = 40766.2/s Avg:     0 Min:     0 Max:   150 Err:     0 (0.00%) Active: 0 Started: 20 Finished: 20\nGenerate Summary Results = 200000 in 00:00:05 = 38639.9/s Avg:     0 Min:     0 Max:   163 Err:     0 (0.00%)\nGenerate Summary Results = 200000 in 00:00:05 = 38956.0/s Avg:     0 Min:     0 Max:   152 Err:     0 (0.00%)"}, {"count": 17, "text": "Those results seem to be more correct. If you look at profiling data (I obtained them with java 8 and jmc), you will see, that the actual time spent in the db pool is minimal compared to the time spent in the db or in other parts of jmeter.\n\nI used \n\n JVM_ARGS=-\"XX:+UnlockCommercialFeatures -XX:+FlightRecorder -XX:FlightRecorderOptions=defaultrecording=true,dumponexit=true,dumponexitpath=/tmp/flightrecording.jfr\" ./bin/jmeter -n -t ~/BUG_58786.jmx\n\nto record the profiling data and used jmc to look at them.\n\nLooking at your numbers I don't see a reason to update the implementation for its speed.\n\nIf we want to swap implementation because of excaliburs age (and given it is in attic), then I would favour dbcp2, even if it is a bit slower, because it has more developers than tomcat-jdbc and hikari.", "bug_id": 58786, "is_private": false, "id": 187299, "time": "2016-01-01T12:06:50Z", "creator": "felix.schumacher@internetallee.de", "creation_time": "2016-01-01T12:06:50Z", "tags": [], "attachment_id": null}, {"count": 18, "text": "(In reply to Philippe Mouawad from comment #16)\n> Hi Felix,\n> I made further tests:\n> 1/ I don't see what you notice\n\nIn my tests I found the following:\n\n1. excalibur seems to build the connections in the pool on demand and since demand was low, it only build and used one connection.\n\n2. tomcat-jdbc and dbcp2 build all connections up front, but used only 2 out of 5\n\n3. dbcp2 made one connection before the pooled connections where built. Probably to check, if it could reach the database.\n\n[To check for the number of opened connection just grep \"getConnection\" in the trace file.]", "bug_id": 58786, "is_private": false, "id": 187300, "time": "2016-01-01T12:20:40Z", "creator": "felix.schumacher@internetallee.de", "creation_time": "2016-01-01T12:20:40Z", "tags": [], "attachment_id": null}, {"count": 19, "tags": [], "bug_id": 58786, "is_private": false, "text": "Author: pmouawad\nDate: Fri Jan  1 17:59:04 2016\nNew Revision: 1722514\n\nURL: http://svn.apache.org/viewvc?rev=1722514&view=rev\nLog:\nBug 58786 - JDBC Sampler : Replace Excalibur DataSource by more up to date library commons-dbcp2\nBugzilla Id: 58786\n\nModified:\n    jmeter/trunk/build.properties\n    jmeter/trunk/build.xml\n    jmeter/trunk/eclipse.classpath\n    jmeter/trunk/lib/   (props changed)\n    jmeter/trunk/lib/aareadme.txt\n    jmeter/trunk/licenses/bin/README.txt\n    jmeter/trunk/res/maven/ApacheJMeter_parent.pom\n    jmeter/trunk/src/protocol/jdbc/org/apache/jmeter/protocol/jdbc/config/DataSourceElement.java\n    jmeter/trunk/xdocs/changes.xml\n    jmeter/trunk/xdocs/usermanual/component_reference.xml", "id": 187309, "time": "2016-01-01T18:04:19Z", "creator": "p.mouawad@ubik-ingenierie.com", "creation_time": "2016-01-01T18:04:19Z", "attachment_id": null}, {"count": 20, "tags": [], "creator": "p.mouawad@ubik-ingenierie.com", "attachment_id": null, "is_private": false, "id": 187310, "time": "2016-01-01T18:07:20Z", "bug_id": 58786, "creation_time": "2016-01-01T18:07:20Z", "text": "Author: pmouawad\nDate: Fri Jan  1 18:06:55 2016\nNew Revision: 1722520\n\nURL: http://svn.apache.org/viewvc?rev=1722520&view=rev\nLog:\nBug 58786 - JDBC Sampler : Replace Excalibur DataSource by more up to date library commons-dbcp2\nBugzilla Id: 58786\n\nModified:\n    jmeter/trunk/build.properties"}, {"count": 21, "tags": [], "creator": "p.mouawad@ubik-ingenierie.com", "attachment_id": null, "id": 188708, "time": "2016-02-23T12:53:19Z", "bug_id": 58786, "creation_time": "2016-02-23T12:53:19Z", "is_private": false, "text": "Author: pmouawad\nDate: Tue Feb 23 12:51:03 2016\nNew Revision: 1731847\n\nURL: http://svn.apache.org/viewvc?rev=1731847&view=rev\nLog:\nBug 58786 - JDBC Sampler : Replace Excalibur DataSource by more up to date library commons-dbcp2\nUpdate documentation and rename properties to match DBCP names (and more recent pools)\nBugzilla Id: 58786\n\nModified:\n    jmeter/trunk/src/protocol/jdbc/org/apache/jmeter/protocol/jdbc/config/DataSourceElementResources.properties\n    jmeter/trunk/xdocs/usermanual/component_reference.xml"}, {"count": 22, "tags": [], "bug_id": 58786, "attachment_id": null, "text": "Screenshots need updating", "id": 188933, "time": "2016-02-28T21:20:33Z", "creator": "sebb@apache.org", "creation_time": "2016-02-28T21:20:33Z", "is_private": false}, {"count": 23, "tags": [], "bug_id": 58786, "attachment_id": null, "id": 189153, "creation_time": "2016-03-05T20:24:12Z", "time": "2016-03-05T20:24:12Z", "creator": "p.mouawad@ubik-ingenierie.com", "text": "(In reply to Sebb from comment #22)\n> Screenshots need updating\n\nHi Sebb, I suggest we fix this within release preparation.\nThere are a lot of screenshots everywhere to update as many guis have changed.\n\nSo closing it as I created Bug 59126\n\nRegards", "is_private": false}]