[{"count": 0, "tags": [], "bug_id": 51384, "text": "Tomcat: 6.0.32 (freshly downloaded and unpacked)\nJava: 1.6.0_25 (freshly installed)\nOS: Windows XP\nEnv variables:\nJAVA_HOME=C:\\Program Files\\Java\\jdk1.6.0_25\nJAVA_OPTS=-Xmx512m\n\nAppend the following permission to the end of catalina.policy:\n\ngrant codeBase \"http://www.abc.com\" {\n        permission java.security.AllPermission;\n};\n\nbin/startup.bat -security\n\nGenerates (in console window, no log files generated):\n\nCould not load Logmanager \"org.apache.juli.ClassLoaderLogManager\"\njava.security.AccessControlException: access denied (java.lang.RuntimePermission setContextClassLoader)\n        at java.security.AccessControlContext.checkPermission(AccessControlContext.java:374)\n        at java.security.AccessController.checkPermission(AccessController.java:546)\n        at java.lang.SecurityManager.checkPermission(SecurityManager.java:532)\n        at java.lang.Thread.setContextClassLoader(Thread.java:1394)\n        at java.util.logging.LogManager$Cleaner.<init>(LogManager.java:204)\n        at java.util.logging.LogManager$Cleaner.<init>(LogManager.java:198)\n        at java.util.logging.LogManager.<init>(LogManager.java:235)\n        at org.apache.juli.ClassLoaderLogManager.<init>(ClassLoaderLogManager.java:64)\n        at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\n        at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)\n        at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)\n        at java.lang.reflect.Constructor.newInstance(Constructor.java:513)\n        at java.lang.Class.newInstance0(Class.java:355)\n        at java.lang.Class.newInstance(Class.java:308)\n        at java.util.logging.LogManager$1.run(LogManager.java:164)\n        at java.security.AccessController.doPrivileged(Native Method)\n        at java.util.logging.LogManager.<clinit>(LogManager.java:156)\n        at java.util.logging.Logger.getLogger(Logger.java:287)\n        at sun.net.www.protocol.http.HttpURLConnection.<clinit>(HttpURLConnection.java:57)\n        at sun.net.www.protocol.http.Handler.openConnection(Handler.java:44)\n        at sun.net.www.protocol.http.Handler.openConnection(Handler.java:39)\n        at java.net.URL.openConnection(URL.java:945)\n        at sun.security.provider.PolicyFile.canonicalizeCodebase(PolicyFile.java:1799)\n        at sun.security.provider.PolicyFile.getCodeSource(PolicyFile.java:783)\n        at sun.security.provider.PolicyFile.addGrantEntry(PolicyFile.java:807)\n        at sun.security.provider.PolicyFile.init(PolicyFile.java:653)\n        at sun.security.provider.PolicyFile.access$400(PolicyFile.java:266)\n        at sun.security.provider.PolicyFile$3.run(PolicyFile.java:546)\n        at java.security.AccessController.doPrivileged(Native Method)\n        at sun.security.provider.PolicyFile.initPolicyFile(PolicyFile.java:519)\n        at sun.security.provider.PolicyFile.initPolicyFile(PolicyFile.java:505)\n        at sun.security.provider.PolicyFile.init(PolicyFile.java:464)\n        at sun.security.provider.PolicyFile.<init>(PolicyFile.java:309)\n        at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\n        at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)\n        at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)\n        at java.lang.reflect.Constructor.newInstance(Constructor.java:513)\n        at java.lang.Class.newInstance0(Class.java:355)\n        at java.lang.Class.newInstance(Class.java:308)\n        at java.security.Policy.getPolicyNoCheck(Policy.java:167)\n        at java.security.ProtectionDomain.implies(ProtectionDomain.java:224)\n        at java.security.AccessControlContext.checkPermission(AccessControlContext.java:352)\n        at java.security.AccessController.checkPermission(AccessController.java:546)\n        at java.lang.SecurityManager.checkPermission(SecurityManager.java:532)\n        at java.lang.SecurityManager.checkPropertyAccess(SecurityManager.java:1285)\n        at java.lang.System.getProperty(System.java:650)\n        at org.apache.juli.logging.DirectJDKLog.<clinit>(DirectJDKLog.java:43)\n        at org.apache.juli.logging.LogFactory.getInstance(LogFactory.java:171)\n        at org.apache.juli.logging.LogFactory.getInstance(LogFactory.java:243)\n        at org.apache.juli.logging.LogFactory.getLog(LogFactory.java:298)\n        at org.apache.catalina.startup.Bootstrap.<clinit>(Bootstrap.java:55)\n\nNote: This works fine with Java 1.5.0\n\nSeems to be a Java 1.6.0 related problem. I have tried several versions of Java 1.6.0 and all exhibit the same problem.", "id": 147187, "attachment_id": null, "creator": "Mark.Howell@rbs.com", "creation_time": "2011-06-16T09:00:49Z", "time": "2011-06-16T09:00:49Z", "is_private": false}, {"attachment_id": null, "tags": [], "creator": "markt@apache.org", "is_private": false, "count": 1, "id": 147268, "time": "2011-06-20T09:54:18Z", "bug_id": 51384, "creation_time": "2011-06-20T09:54:18Z", "text": "As of Java 1.6 the combination of:\n- custom LogManager\n- security manager\n- http codebase in security policy file\nwon't work.\n\nThe root cause is the following circular dependency:\n- The Custom LogManager has to extend the standard LogManager\n- standard LogManager starts a Cleaner that calls setContextClassloader\n- that triggers a security check\n- that triggers the parsing of the policy file\n- that triggers a validity check of the http codebase\n- that uses HttpUrlConnection\n- that tries to create a Logger\n- that requires LogManager to be initialised\n\nThe standard LogManager avoids this since it is viewed as System code hence all security checks are bypassed.\n\nI don't see a way around this without changes to java.util.logging.LogManager and that is outside the control of the Tomcat project."}]