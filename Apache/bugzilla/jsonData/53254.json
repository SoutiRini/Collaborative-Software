[{"count": 0, "tags": [], "bug_id": 53254, "attachment_id": null, "text": "It is a common function of a connection pool to support \"purging\" the pool of all current connections and getting all fresh connections.  Oracle UCP and Websphere pools are two such examples.  It would be great if this pool supported such an operation as well.\n\nIt would be useful if the operation were exposed through JMX too.", "id": 159132, "time": "2012-05-17T17:59:28Z", "creator": "youngm@gmail.com", "creation_time": "2012-05-17T17:59:28Z", "is_private": false}, {"count": 1, "tags": [], "creator": "fhanik@apache.org", "text": "Fixed in trunk in r1340160\nFixed in 7.0.x in r1340164", "id": 159167, "time": "2012-05-18T16:37:38Z", "bug_id": 53254, "creation_time": "2012-05-18T16:37:38Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "creator": "youngm@gmail.com", "attachment_id": null, "id": 159173, "time": "2012-05-18T19:18:05Z", "bug_id": 53254, "creation_time": "2012-05-18T19:18:05Z", "is_private": false, "text": "Nice!  Thanks Filip!\n\nFor laughs here is the workaround implementation I created yesterday. :)\n\npublic void purge() throws Exception {\n\t\tlong oldMaxAge = dataSource.getMaxAge();\n\t\tint oldMaxIdle = dataSource.getMaxIdle();\n\t\tint oldMaxActive = dataSource.getMaxActive();\n\t\tint oldMinEvictTime = dataSource.getMinEvictableIdleTimeMillis();\n\t\tPooledConnection connection = dataSource.getPooledConnection();\n\t\tIllegalStateException error = null;\n\t\ttry {\n\t\t\tdataSource.setMaxActive(1);\n\t\t\tdataSource.setMaxIdle(1);\n\t\t\tdataSource.setMaxAge(1);\n\t\t\tdataSource.setMinEvictableIdleTimeMillis(1);\n\t\t\tint sec = 0;\n\t\t\tThread.sleep(1001);\n\t\t\twhile(dataSource.getActive() > 1 && sec < 29) {\n\t\t\t\tThread.sleep(1000);\n\t\t\t\tsec++;\n\t\t\t}\n\t\t\tdataSource.checkIdle();\n\t\t\tif(dataSource.getActive() > 1) {\n\t\t\t\terror = new IllegalStateException(\"Closed all but \"+(dataSource.getActive()-1)+\" connection(s) after 30 sec.  Try again.\");\n\t\t\t}\n\t\t\tconnection.close();\n\t\t} finally {\n\t\t\tdataSource.setMaxAge(oldMaxAge);\n\t\t\tdataSource.setMaxActive(oldMaxActive);\n\t\t\tdataSource.setMaxIdle(oldMaxIdle);\n\t\t\tdataSource.setMinEvictableIdleTimeMillis(oldMinEvictTime);\n\t\t\tif(error != null) {\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\t}"}]