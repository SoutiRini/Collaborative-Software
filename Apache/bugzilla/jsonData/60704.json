[{"count": 0, "tags": [], "creator": "m.beier@enbw.com", "attachment_id": null, "text": "Hi,\n\nactually this bug report affects 2.2.32, but this version is not available in \"Version\" dropdown.\n\nIn a server to server communication we (accidently) are using hostnames containing the underline character. With default settings apache 2.2.32 is refusing to process requests with such hostnames and fails with a http status 400, bad request.\n\nIn my understanding the HttpProcotolOptions directive has been introduced to bring back the legacy behaviour. In my case with hostnames containing underline characters, this does not work. Requests are declined as \"400 Bad Request\", though I set \"HttpProtocolOptions Unsafe LenientMethods Allow0.9\".\n\nTo reproduce start apache 2.2.32 with:\n\"HttpProtocolOptions Unsafe LenientMethods Allow0.9\"\n\nRun the following command:\n\ncurl -v -H \"Host: bad_request_hostname\" http://127.0.0.1/\n\nIt returns:\n\nHTTP/1.1 400 Bad Request\n\nWith apache 2.4.25 the host header containing underlines is processed correctly, if HttpProtocolOptions is set to Unsafe.\n\nBest regards,\nMichael", "id": 196814, "time": "2017-02-07T13:12:19Z", "bug_id": 60704, "creation_time": "2017-02-07T13:12:19Z", "is_private": false}, {"count": 1, "tags": [], "text": "I get the same result in 2.2.x and 2.4.x. I don't think HttpProtocolOptions was meant to revert every strict processing change.", "attachment_id": null, "id": 196816, "creator": "covener@gmail.com", "time": "2017-02-07T13:35:37Z", "bug_id": 60704, "creation_time": "2017-02-07T13:35:37Z", "is_private": false}, {"count": 2, "tags": [], "creator": "m.beier@enbw.com", "is_private": false, "text": "Hi Eric,\n\ncan you clarify, what the same result means?\n\nDo you get the same results as I did:\napache 2.4.x works and apache 2.2.x does not?\n\nOr did apache 2.4.25 and 2.2.32 behave the same and work / do not work both?\n\nMichael", "id": 196817, "time": "2017-02-07T13:56:36Z", "bug_id": 60704, "creation_time": "2017-02-07T13:56:36Z", "attachment_id": null}, {"count": 3, "tags": [], "text": "(In reply to Michael from comment #2)\n> Hi Eric,\n> \n> can you clarify, what the same result means?\n> \n> Do you get the same results as I did:\n> apache 2.4.x works and apache 2.2.x does not?\n> \n> Or did apache 2.4.25 and 2.2.32 behave the same and work / do not work both?\n> \n\nsorry, both rejected the underscore and HTTPProtocolOptions didn't change either behavior.", "is_private": false, "id": 196818, "creator": "covener@gmail.com", "time": "2017-02-07T14:15:30Z", "bug_id": 60704, "creation_time": "2017-02-07T14:15:30Z", "attachment_id": null}, {"count": 4, "tags": [], "text": "I tested again on two different servers, same result again:\n\nApache 2.2.32 and 2.4.25 both configured with on vHost which has a ServerAlias bad_request_hostname and HttpProtocolOptions Unsafe LenientMethods Allow0.9 in server (not vHost!) context.\n\ncurl -v -H \"Host: bad_request_hostname\" http://127.0.0.1/\n\nApache 2.2.32: HTTP/1.1 400 Bad Request\n\nApache 2.4.25: HTTP/1.1 200 OK\n\nI'm a little confused ..\n\nMichael", "attachment_id": null, "id": 196819, "creator": "m.beier@enbw.com", "time": "2017-02-07T15:40:58Z", "bug_id": 60704, "creation_time": "2017-02-07T15:40:58Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 60704, "text": "Today I faced another issue, that's confusing me even more. Testcase is apache 2.4.25, HttpProtocolOptions set to \"Unsafe LenientMethods Allow0.9\".\n\n1) curl -H \"Host: my_invalid_hostname\" -v http://localhost/\n   Returns: HTTP/1.1 200 OK\n   OK - Unsafe mode allows a Host header containing a underline.\n\n2) curl -H \"Accept<TAB>: application/xml\" -v http://localhost/\n   Returns: HTTP/1.1 400 Bad Request\n   Debug output: Request header field name is malformed: Accept\\t: application/xml\n\nLooking into the sourcecode (server/protocol.c, line 1130) the message \"Request header field name is malformed\" only will be logged in strict mode, but not in unsafe mode ..\n\nBest regards,\nMichael", "id": 197244, "attachment_id": null, "creator": "m.beier@enbw.com", "creation_time": "2017-02-23T16:32:13Z", "time": "2017-02-23T16:32:13Z", "is_private": false}, {"count": 6, "tags": [], "bug_id": 60704, "text": "I have the same behaviour. Even with \nHttpProtocolOptions  Unsafe LenientMethods Allow0.9\n\nrequests may still be blocked, and I have the following log-entry:\n\n[Thu Mar 09 11:02:51 2017] [debug] protocol.c(828): [client 10.0.209.5] HTTP Request Line; Excess whitespace (disallowed by HttpProtocolOptions Strict\n\n\nI compared the code with httpd/2.4.25 (where the request is not blocked), and the functions merge_core_server_configs (core.c) do slightly differ:\n\nin 2.2.32:\nstatic void *merge_core_server_configs(apr_pool_t *p, void *basev, void *virtv)\n{\n    core_server_config *base = (core_server_config *)basev;\n    core_server_config *virt = (core_server_config *)virtv;\n    core_server_config *conf;\n\n    conf = (core_server_config *)apr_pmemdup(p, base, sizeof(core_server_config));\n\nin 2.4.25:\nstatic void *merge_core_server_configs(apr_pool_t *p, void *basev, void *virtv)\n{\n    core_server_config *base = (core_server_config *)basev;\n    core_server_config *virt = (core_server_config *)virtv;\n    core_server_config *conf = (core_server_config *)\n                               apr_pmemdup(p, base, sizeof(core_server_config));\n\nAs you can see, in 2.4.25 the 'conf' is taken from 'base' and not from 'virtv' like in 2.2.32.\nI changed the code in 2.2.32. and then the request is not blocked any more.\nI have no idea if this is the right solution, because of the other parameters that are used.", "id": 197565, "attachment_id": null, "creator": "paolo@adnovum.ch", "creation_time": "2017-03-09T10:47:39Z", "time": "2017-03-09T10:47:39Z", "is_private": false}, {"count": 7, "tags": [], "creator": "jim@apache.org", "attachment_id": null, "text": "In the above snippets I see conf being copied from base in both cases...", "id": 197570, "time": "2017-03-09T13:20:46Z", "bug_id": 60704, "creation_time": "2017-03-09T13:20:46Z", "is_private": false}, {"count": 8, "tags": [], "bug_id": 60704, "attachment_id": null, "id": 197571, "time": "2017-03-09T13:33:08Z", "creator": "covener@gmail.com", "creation_time": "2017-03-09T13:33:08Z", "is_private": false, "text": "(In reply to Jim Jagielski from comment #7)\n> In the above snippets I see conf being copied from base in both cases...\nThis is already fixed in 2.2.x HEAD"}]