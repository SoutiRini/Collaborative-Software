[{"count": 0, "tags": [], "bug_id": 52171, "text": "http://httpd.apache.org/docs/trunk/en/rewrite/tech.html#InternalAPI explains the phases of a request to help understand how rewriting works. It contains:\n\nIn per-directory context (i.e., within .htaccess files and Directory blocks), these rules are being applied after a URL has already been translated to a filename. Because of this, mod_rewrite temporarily translates the filename back into a URL, by stripping off directory path before appling the rules. (See the RewriteBase directive to see how you can further manipulate how this is handled.) Then, a new internal subrequest is issued with the new URL. This restarts processing of the request phases. (Be careful to avoid rules that can cause looping. See RewriteLooping for further discussion of this problem.\n\nAs we discussed on in #30021, this seems to say that some requests cause subrequests. These subrequests would appear to also cause subrequests, which would themselves cause subrequests, etc.\nIn other words, there is no explanation of what is different in the internal subrequests which explains that processing a .htaccess does not cause infinite recursion.\n\nBy the way, the last parenthesis is not closed.", "id": 151441, "time": "2011-11-13T02:20:38Z", "creator": "chealer@gmail.com", "creation_time": "2011-11-13T02:20:38Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 52171, "attachment_id": null, "id": 151448, "time": "2011-11-13T16:57:07Z", "creator": "covener@gmail.com", "creation_time": "2011-11-13T16:57:07Z", "is_private": false, "text": "The only difference between a loop and a non-loop is that the latter has rules that eventually do not make a substitution. I clarified the docs to drive home the fact that we only re-start processing when there's a substitution performed by the rule.\n\nr1201455"}, {"count": 2, "tags": [], "text": "Thanks!", "is_private": false, "id": 151452, "creator": "chealer@gmail.com", "time": "2011-11-13T20:14:04Z", "bug_id": 52171, "creation_time": "2011-11-13T20:14:04Z", "attachment_id": null}]