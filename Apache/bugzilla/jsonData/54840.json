[{"count": 0, "tags": [], "bug_id": 54840, "attachment_id": null, "id": 166573, "time": "2013-04-13T13:19:51Z", "creator": "mattiase@acm.org", "creation_time": "2013-04-13T13:19:51Z", "is_private": false, "text": "The inline asm routines in atomics/unix/ppc.c won't compile on OS X 10.5:\n\nld: bcc out of range (83248 max is +/-64K) from _apr_atomic_add32 in atomic/unix/.libs/ppc.o to _apr_atomic_add32$stub in .libs/libapr-1.0.dylib in _apr_atomic_add32 from atomic/unix/.libs/ppc.o\n\nThe reason for this is that in the code\n\n    asm volatile (\"loop_%=:\\n\"                  /* lost reservation     */\n                  \"\tlwarx   %0,0,%3\\n\"      /* load and reserve     */\n                  \"\tadd     %1,%0,%4\\n\"     /* add val and prev     */\n                  PPC405_ERR77_SYNC             /* ppc405 Erratum 77    */\n                  \"\tstwcx.  %1,0,%3\\n\"      /* store new value      */\n                  \"\tbne-    loop_%=\\n\"      /* loop if lost         */\n\nthe label loop_%= doesn't work properly. Replacing it with traditional local labels (1, 2, ...) works nicely. Any reason it was not done that way?"}, {"count": 1, "tags": [], "text": "Created attachment 30188\npatch to use local labels in ppc.c\n\nHere is a patch that corrects the problem.", "attachment_id": 30188, "id": 166574, "creator": "mattiase@acm.org", "time": "2013-04-13T13:21:23Z", "bug_id": 54840, "creation_time": "2013-04-13T13:21:23Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 54840, "attachment_id": null, "is_private": false, "id": 166575, "time": "2013-04-13T13:36:31Z", "creator": "mattiase@acm.org", "creation_time": "2013-04-13T13:36:31Z", "text": "For the record, %= in inline asm generates a unique number. From the gcc sources:\n\n        /* %= outputs a number which is unique to each insn in the entire\n           compilation.  This is useful for making local labels that are\n           referred to more than once in a given insn.  */\n\n(I couldn't find it actually documented anywhere else.) The problem in this case stems from the fact that the system compiler in OS X 10.5, gcc 4.0.1, does not have that feature so a literal \"%=\" is inserted. However, there should be no need for that since local labels work nicely."}, {"count": 3, "tags": [], "bug_id": 54840, "attachment_id": null, "is_private": false, "id": 166735, "time": "2013-04-20T10:25:26Z", "creator": "sf@sfritsch.de", "creation_time": "2013-04-20T10:25:26Z", "text": "I have no idea of ppc assembler, but:\n\nShouldn't atomics/unix/builtins.c be used instead of atomics/unix/ppc.c if your compiler is gcc? Have you changed anything to use ppc.c instead, or is this a bug in APR's configure script?"}, {"count": 4, "tags": [], "text": "(In reply to comment #3)\n> I have no idea of ppc assembler, but:\n\nPPC assembler is no different from any other in this respect.\n\n> Shouldn't atomics/unix/builtins.c be used instead of atomics/unix/ppc.c if\n> your compiler is gcc? Have you changed anything to use ppc.c instead, or is\n> this a bug in APR's configure script?\n\nThe GCC builtins will only be used if the compiler has them, and this particular GCC version (4.0.1, the standard compiler of OS X 10.5) does not. See the detection of HAVE_ATOMIC_BUILTINS in configure.in.", "is_private": false, "bug_id": 54840, "id": 166736, "time": "2013-04-20T10:36:09Z", "creator": "mattiase@acm.org", "creation_time": "2013-04-20T10:36:09Z", "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 54840, "attachment_id": null, "id": 166742, "time": "2013-04-20T16:31:02Z", "creator": "sf@sfritsch.de", "creation_time": "2013-04-20T16:31:02Z", "is_private": false, "text": "Right, atomic builtins were added in 4.1. I thought they were older"}, {"count": 6, "tags": [], "bug_id": 54840, "attachment_id": null, "id": 166743, "time": "2013-04-20T16:52:52Z", "creator": "sf@sfritsch.de", "creation_time": "2013-04-20T16:52:52Z", "is_private": false, "text": "trunk: r1470186\n1.5: r1470189\n1.4: r1470192\n\nwill be fixed in 1.4.7 or 1.5.0, whichever comes first."}, {"count": 7, "tags": [], "creator": "mattiase@acm.org", "attachment_id": null, "id": 166745, "time": "2013-04-20T22:49:42Z", "bug_id": 54840, "creation_time": "2013-04-20T22:49:42Z", "is_private": false, "text": "(In reply to comment #6)\n> trunk: r1470186\n> 1.5: r1470189\n> 1.4: r1470192\n> \n> will be fixed in 1.4.7 or 1.5.0, whichever comes first.\n\nThanks! May I suggest you have a look at bug 51851 too? It's the x86 equivalent."}, {"count": 8, "tags": [], "creator": "trawick@apache.org", "attachment_id": null, "id": 172592, "time": "2014-01-21T12:57:09Z", "bug_id": 54840, "creation_time": "2014-01-21T12:57:09Z", "is_private": false, "text": "Fixed in apr 1.4.7 and later releases."}]