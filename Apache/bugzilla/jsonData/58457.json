[{"count": 0, "tags": [], "bug_id": 58457, "attachment_id": 33140, "text": "Created attachment 33140\nAsyncServlet\n\nThe attached AsyncServlet starts an async request with a 5 second timeout and then schedules a write + flush every second ignoring any exceptions. After the timeout, the flush starts running into NPE. \n\nIf the client connects again, you see two threads writing to the response and the client gets the output from both, including buffered output from the first thread after the timeout. Then timeout and both threads start getting NPE. \n\nIf the client connects a third time you see three threads writing to the response and the client gets buffered output from the first two threads after the last timeout.\n\nAnd so on. After the timeout, the response should be properly closed and it shouldn't be possible to write to it again. For comparison that's how it seems to work on Jetty.", "id": 185480, "time": "2015-09-25T03:00:12Z", "creator": "rstoyanchev@yahoo.com", "creation_time": "2015-09-25T03:00:12Z", "is_private": false}, {"count": 1, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "id": 185481, "time": "2015-09-25T06:11:42Z", "bug_id": 58457, "creation_time": "2015-09-25T06:11:42Z", "is_private": false, "text": "Use org.apache.catalina.connector.RECYCLE_FACADES"}, {"count": 2, "tags": [], "bug_id": 58457, "attachment_id": null, "text": "Request 1 times out but code continues to write to response. Later request 2 connects and sees all that has been written by the handler after the timeout. Why does the response continue to buffer after the timeout? Expected behavior?", "id": 185553, "time": "2015-09-30T02:52:40Z", "creator": "rstoyanchev@yahoo.com", "creation_time": "2015-09-30T02:52:40Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 58457, "attachment_id": null, "text": "If an application retains a reference and continues to use a response object after the original request/rsponse has been completed the behaviour is undefined. I'm not at all surprised by the behaviour you describe.\n\nAgain, if you want to protect against these sorts of application bugs (at the expense of some performance) then use org.apache.catalina.connector.RECYCLE_FACADES.", "id": 185557, "time": "2015-09-30T09:43:01Z", "creator": "markt@apache.org", "creation_time": "2015-09-30T09:43:01Z", "is_private": false}]