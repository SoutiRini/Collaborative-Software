[{"count": 0, "tags": [], "creator": "oetienne@chez.com", "text": "I think the 2d request of the method :\nvoid removeObject(Connection connection, Uri uri, ObjectNode object)\n\nIn the class : org.apache.slide.store.impl.rdbms.PostgresRDBMSAdapter\nwill not work : \ndelete from VERSION_HISTORY  \nwhere VERSION_HISTORY.URI_ID = URI.URI_ID and URI.URI_STRING = ?\"\n\nBecause the element *URI.URI_ID* is unknown.", "id": 96941, "time": "2006-12-15T06:52:02Z", "bug_id": 41181, "creation_time": "2006-12-15T06:52:02Z", "is_private": false, "attachment_id": null}, {"count": 1, "text": "Hello Olivier,\n\nI do not have a slide installation with a Postgres backend to test that.\nI am relatively new in slide development. All the SQL statements in this class look weird, because they \nare all referencing columns of this URI table.\n\ninstead of :\n\ndelete from VERSION_HISTORY  \nwhere VERSION_HISTORY.URI_ID = URI.URI_ID and URI.URI_STRING = ?\"\n\n\nI would expect\n\ndelete from VERSION_HISTORY  \nwhere VERSION_HISTORY.URI_ID IN (SELECT URI_ID FROM URI where URI_STRING = ?)\"\n\nCould you try it ?\n\nIf this change works, then probably most or all the SQL statements in this class need a similar change.\n\nRegards,\n\nAntoine", "creator": "antoine@apache.org", "attachment_id": null, "id": 99762, "time": "2007-02-25T12:52:34Z", "bug_id": 41181, "creation_time": "2007-02-25T12:52:34Z", "tags": [], "is_private": false}, {"count": 2, "tags": [], "bug_id": 41181, "attachment_id": null, "is_private": false, "id": 99767, "time": "2007-02-25T19:15:43Z", "creator": "cav@uniscope.co.jp", "creation_time": "2007-02-25T19:15:43Z", "text": "The current syntax is correct. This is a non-standard syntax in PostgreSQL \nSQL. As explained in the PostgreSQL documentation:\n\nNotes\n\nPostgreSQL lets you reference columns of other tables in the WHERE condition. \nFor example, to delete all films produced by a given producer, one might do\n\nDELETE FROM films\n  WHERE producer_id = producers.id AND producers.name = 'foo';\n\nWhat is essentially happening here is a join between films and producers, with \nall successfully joined films rows being marked for deletion. This syntax is \nnot standard. A more standard way to do it is\n\nDELETE FROM films\n  WHERE producer_id IN (SELECT id FROM producers WHERE name = 'foo');"}, {"count": 3, "tags": [], "bug_id": 41181, "attachment_id": null, "is_private": false, "id": 99772, "time": "2007-02-25T23:49:50Z", "creator": "na.ais40@wanadoo.fr", "creation_time": "2007-02-25T23:49:50Z", "text": "Hi,\n\nI've had the same problem and i've solved it like this :\n - add a USING foo1, foo2,... clause in the query\n\nex :\ndelete from VERSION_HISTORY\nusing URI\nwhere VERSION_HISTORY.URI_ID = URI.URI_ID and URI.URI_STRING = ?\n\nIt works for me (PostgreSQL 8.2.3)\n\n\nNicolas Aguil\u00e9"}]