[{"count": 0, "tags": [], "creator": "kenneth.gendron@gmail.com", "text": "When using the SingleSignOn valve, any call to getRemoteUser() on the HTTP request will return null when accessing an insecure page (in other words, a page not configured in the security section of the web.xml).\n\nIf the valve is not used, a call to getRemoteUser() will return the currently logged in user regardless if accessing an secured page or not.\n\nNot sure whether this is a bug or by design.", "id": 182082, "time": "2015-03-25T04:05:42Z", "bug_id": 57753, "creation_time": "2015-03-25T04:05:42Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "creator": "kenneth.gendron@gmail.com", "is_private": false, "id": 182083, "creation_time": "2015-03-25T04:42:39Z", "time": "2015-03-25T04:42:39Z", "bug_id": 57753, "text": "After further investigation it appears the first web application that authenticates will get the user back when calling getRemoteUser(); however, any other web applications that come after will get null.", "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 57753, "attachment_id": null, "is_private": false, "id": 182084, "time": "2015-03-25T05:03:17Z", "creator": "kenneth.gendron@gmail.com", "creation_time": "2015-03-25T05:03:17Z", "text": "Even more investigation.  This only occurs when setting requireReauthentication to true.  In the SingleSignOn implementation it explicitly does not set the user principal if requireReauthentication is set, but instead delegates this to the realm downstream; however, since the downstream realm knows that the page requested is insecure, it does not perform reauthentication.  The only way I can think of to correct this would be to invoke the SingleSignOn again after the realm is completed, but I think that is too cumbersome.  Sorry you can close it."}, {"count": 3, "tags": [], "bug_id": 57753, "attachment_id": null, "text": "I agree that the current code is working as designed so there is nothing to do here.\n\nOne thins you may like to look at is the use of the preemptiveAuthentication option on the Context. This will trigger authentication for non-protected resources assuming that the request includes the necessary credentials.", "id": 182132, "time": "2015-03-26T21:56:45Z", "creator": "markt@apache.org", "creation_time": "2015-03-26T21:56:45Z", "is_private": false}]