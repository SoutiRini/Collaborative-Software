[{"count": 0, "tags": [], "bug_id": 22106, "text": "The past few weeks, we've seen processes start to accumulate and hang under \nwhat appear to be only moderate loads.  The processes in question are generated \nfrom SSI exec commands embedded in HTML pages.  The end result is that the site \nappears to slow to a crawl --- these processes can hang for several minutes.\n\nWhen I truss the various processes, I usually see something like the following:\n\nwrite(1, \" e = \" V e r d a n a , A\".., 976) (sleeping...)\nsignotifywait()                 (sleeping...)\ndoor_return(0x00000000, 0, 0x00000000, 0) (sleeping...) lwp_cond_wait\n(0xFF393FC8, 0xFF393FD8, 0xFE283C90) (sleeping...)\n\n(what appears on the second argument to the write varies).  Another such truss \n(truss -l -p) gives\n\n/1:     lwp_sema_wait(0xFDF0DE78)       (sleeping...)\n/2:     signotifywait()                 (sleeping...)\n/3:     write(1, \" = 2   V S P A C E = 2 >\".., 7132) (sleeping...)\n/4:     lwp_cond_wait(0xFF393FC8, 0xFF393FD8, 0xFE285C38) (sleeping...)\n/5:     door_return(0x00000000, 0, 0x00000000, 0) (sleeping...)\n\nUsing gcore to generate cores of the running processes and doing a backtrace \njust shows that a print statement was being called (I should mention that these \nthe programs in question are Pro-C codes).  So, it appears that the process is \nattempting to print back a response, then halts and waits. Maybe.  The problem \nis that I don't know/can't tell just yet why the processes are waiting, and on \nwhat... I feel as though I'm looking in the wrong places.\n\nWe're running Apache 2.0.47 on Solaris 7 (with all latest recommended patches) \nacross four dual-processor boxes (E220s).  Apache was compiled using gcc 2.95.3 \nwith two patches: a cgid daemon restart patch and a patch to prevent a double \nclose on a socket (problems encountered with the first).  I'm using the worker \nMPM with the following httpd.conf configuration:\n\n<IfModule worker.c>\nStartServers             2\nMaxClients             150\n#StartServers            5\n#MaxClients            250\nMinSpareThreads         25\nMaxSpareThreads         75\nThreadsPerChild         25\nMaxRequestsPerChild  10000\n</IfModule>\n\nThe only compiled-in modules are \n\n  core.c\n  worker.c\n  http_core.c\n  mod_so.c\n\nEverything else is loaded as a DSO (if not commented out).\n\nIf this rings a bell somewhere for someone and/or if you have some advice for \nhow to further proceed with tracking this down, let me know.", "id": 42064, "time": "2003-08-04T13:21:38Z", "creator": "parramorej@homes.com", "creation_time": "2003-08-04T13:21:38Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 22106, "text": "This may or may not be related, but in addition to the hanging ssi processes, \noccasionally, Apache will stop responding correctly almost entirely; the error \nlog is filled with messages of this sort:\n\n\"No such process: cgid daemon is gone; is Apache terminating?\"\n\n\"Connection refused: connect #1 to cgi daemon failed, sleeping before retry...\"\n\nI ran top to check for processes running and discovered the other Apache child \nprocesses still running; however, the Apache cgid process was still running as \nwell, and taking up almost all remaining free memory as well (1+ GB!).  I tried \nto get a core dump using gcore but the server was choking and I had to move \non... as this was a production server, I had to hurry to get what information I \ncould, but I have the output from pstack for both the cgid daemon process and \nthe Apache root process:\n\ncgid:\n\n12817:  /usr/local/apache2/worker/bin/httpd -k start\n-----------------  lwp# 1 / thread# 1  --------------------\n ff09941c read     (12, 106325, 4854325b)\n fefdac40 read     (12, 104130, 48545450, ffffffff, fffffff8, 48649581) + 34\n fed5283c get_req  (12, d1fb0, a, ffbef710, ffbef720, d2149) + 268\n fed5305c cgid_server (7bf18, f, cffa8, 24, 128, 174) + 44c\n fed53400 cgid_start (7a178, 7bf18, 1011f0, fed668bc, fed668c0, fed55800) + ac\n fed524d0 cgid_maint (0, 1011f0, d, fed52408, ceae8, 7c) + c8\n ff2e570c apr_proc_other_child_alert (ffbefa10, 0, d, fec00020, 6, 557e0) + 54\n ff2e583c apr_proc_other_child_read (ffbefa10, d, d, 7a178, 0, 0) + c\n 0002d420 server_main_loop (0, 6ec00, 6d800, 52800, 52000, 6d800) + 148\n 0002d758 ap_mpm_run (0, 6d800, 6ec00, 6c400, 54c00, 54c00) + 2a4\n 000343e0 main     (781f0, 7a178, 6c400, 6c400, ffbefb1c, 6c400) + 7e0\n 00025884 _start   (0, 0, 0, 0, 0, 0) + 5c\n-----------------  lwp# 2 / thread# 2  --------------------\n ff099950 signotifywait ()\n fefcf780 _dynamiclwps (fefeca54, fefee3bc, 2, 0, ff0b5f74, 0) + 1c\n fefd26d8 thr_yield (0, 0, 0, 0, 0, 0) + 8c\n-----------------  lwp# 3 / thread# 3  --------------------\n ff099f80 lwp_sema_wait (fdf0de78)\n fefcb2f8 _park    (fdf0ddc0, fdf0de78, 0, 1, fefed7e0, 0) + 10c\n fefcafc0 _swtch   (5, fefeca54, fdf0de54, fdf0de50, fdf0de4c, fdf0de48) + 3b4\n fefce884 _reap_wait (feff1428, 1e484, 0, 0, 0, 0) + 34\n fefce600 _reaper  (fefeca54, feff1428, fefed870, feff97bc, 0, fe400000) + 34\n fefdbd28 _thread_start (0, 0, 0, 0, 0, 0) + 40\n\nApache root:\n\n28381:  /usr/local/apache2/worker/bin/httpd -k start\n-----------------  lwp# 1 / thread# 1  --------------------\n ff09819c poll     (ffbef880, 0, 3e8)\n ff04f920 select   (ffbef880, ff0b9034, ff0b9034, 0, 0, 3e8) + 334\n fefdb6c0 select   (0, f4240, ffbefa0c, 1, 7a178, fec00070) + 34\n 0003a2fc ap_wait_or_timeout (ffbefa0c, ffbefa08, ffbefa10, 7a178, 0, 0) + 5c\n 0002d328 server_main_loop (0, 6ec00, 6d800, 52800, 52000, 6d800) + 50\n 0002d758 ap_mpm_run (0, 6d800, 6ec00, 6c400, 54c00, 54c00) + 2a4\n 000343e0 main     (781f0, 7a178, 6c400, 6c400, ffbefb1c, 6c400) + 7e0\n 00025884 _start   (0, 0, 0, 0, 0, 0) + 5c\n-----------------  lwp# 2 / thread# 2  --------------------\n ff099950 signotifywait ()\n fefcf780 _dynamiclwps (fefeca54, fefee3bc, 2, 0, ff0b5f74, 0) + 1c\n fefd26d8 thr_yield (0, 0, 0, 0, 0, 0) + 8c\n-----------------  lwp# 3  --------------------------------\n ff099f34 lwp_cond_wait (feff3fc8, feff3fd8, fefb5c90)\n ff091a00 _lwp_cond_timedwait (feff3fc8, feff3fd8, 0, 3f304e38, 0, 0) + 90\n fefca94c _age     (fefeca54, fefed7d4, fefee0a8, fefee0c0, 3, fefeca54) + 90\n fefcbecc _lwp_start (6000, ffbef7f4, fefed820, fefed808, fefeca54, ffbef6e8) + \n14\n fefd26d8 thr_yield (0, 0, 0, 0, 0, 0) + 8c\n--------------------------  thread# 3  --------------------\n fefce884 _reap_wait (feff1428, 1e484, 0, 0, 0, 0) + 34\n fefce600 _reaper  (fefeca54, feff1428, fefed870, 70d60, 1, fe401000) + 34\n fefdbd28 _thread_start (0, 0, 0, 0, 0, 0) + 40\n\nOne frustrating part (among the many) to this is that I can't duplicate this in \nour development environment, so I have to troubleshoot in production, which can \nbe a bit dicey at times...\n\n", "id": 42220, "time": "2003-08-06T01:04:09Z", "creator": "parramorej@homes.com", "creation_time": "2003-08-06T01:04:09Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "text": "For the \"cgid daemon is gone\" issue, see PR 23533.\nhttp://nagoya.apache.org/bugzilla/show_bug.cgi?id=23533\n\nI don't know why this script is hanging writing to stdout (file descriptor 1).\nYou'd have to find out what the worker MPM thread that is supposed to be reading\nfrom that pipe is reall doing.\n", "attachment_id": null, "bug_id": 22106, "id": 45356, "time": "2003-10-10T13:20:37Z", "creator": "trawick@apache.org", "creation_time": "2003-10-10T13:20:37Z", "is_private": false}, {"count": 3, "tags": [], "creator": "chip@force-elite.com", "is_private": false, "id": 75880, "attachment_id": null, "bug_id": 22106, "creation_time": "2005-06-03T01:39:02Z", "time": "2005-06-03T01:39:02Z", "text": "Did the fixes applied in Bug 23533 fix this for you? "}, {"count": 4, "tags": [], "creator": "nick@webthing.com", "attachment_id": null, "text": "No activity after a very long time in NEEDINFO; assuming expired.", "id": 92058, "time": "2006-08-08T20:30:12Z", "bug_id": 22106, "creation_time": "2006-08-08T20:30:12Z", "is_private": false}]