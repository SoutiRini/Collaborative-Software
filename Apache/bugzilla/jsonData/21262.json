[{"count": 0, "tags": [], "creator": "A.Kuckartz@ping.de", "attachment_id": null, "id": 39820, "time": "2003-07-02T05:52:01Z", "bug_id": 21262, "creation_time": "2003-07-02T05:52:01Z", "is_private": false, "text": "Documents currently can not be deleted - the feature is missing.\n\n---\nA copy of a mail sent by Michael Wechner to lenya-dev:\n\nThis might startle you a bit, but this \"feature\" has not been written yet.\nIt would be similar to the current \"Creator\" implementation. For the case of \nthe filesystem it would be very simple.\nBut I think we should refactor it and think about a nice architecture. \nThere are several issues to consider:\n\n1) data abstraction layer (could be realized via Apache Slide)\n2) independent of interface (web, app or command line)\n3) should allow more sophistication than just creating and deleting (plz see my \nanswer to your next question below)\n4) anything else?\n\n>Once an article is in live modus there\n>is no way of changing or deleting it?\n\nwell, you can change things: just (re)edit it within Authoring area and then \n(re)publish it.\n\nConcerning \"deleting\". If some content went live,  then you should have at \nleast three options:\n\n1) depublish it (for instance periodical announcements, which shouldn't be live \nall the time)\n2) archive it (for instance Newspaper article for legal reasons)\n3) throw it into the trash (after deleting the trash it will be gone forever)\n\nAny help on (more) use-cases, architecture and implementation is very much \nappreciated."}, {"count": 1, "tags": [], "creator": "gregor@apache.org", "attachment_id": null, "id": 46782, "time": "2003-11-04T17:22:39Z", "bug_id": 21262, "creation_time": "2003-11-04T17:22:39Z", "is_private": false, "text": "deletion has been implemented"}]