[{"attachment_id": 31365, "tags": [], "bug_id": 56216, "text": "Created attachment 31365\npatch: only create reqtimeout_con_cfg once per connection\n\nwhile testing mod_reqtimout, I sometimes got strange timeouts i couldn't explain. After adding some debug code to mod_reqtimeout.c I found out that:\n1) reqtimeout_init() is called before each request (not only at the start of the connection)\n2) therefore for each request a new reqtimeout_con_cfg is created and set as context to the connection config: ap_set_module_config(c->conn_config, &reqtimeout_module, ccfg) and is added to the input filter: ap_add_input_filter(\"reqtimeout\", ccfg, NULL, c);\n3) For subsequent Requests I got then calls to reqtimeout_filter(), with each registered reqtimeout_con_cfg. That means during the first Request reqtimeout_filter() was called with the correct reqtime_con_cfg, in the second Request reqtimeout_filter() was called twice() one time with the actual reqtimeout_con_cfg and one time with the one from the first Request. And so forth.\n4) Then one call to reqtimeout_filter() with the obsolete ccfg decided to detect a timeout, and the request was aborted\n\nIt looks to me, it was thought, reqtimeout_init() reqistered in hook 'ap_hook_process_connection' shall only be called once. But since it is called multiple times, it has to be secured, not to create and register a new reqtimeout_con_cfg each time. See proposed attached patch.", "count": 0, "id": 173619, "time": "2014-03-04T16:28:22Z", "creator": "frank.meier@ergon.ch", "creation_time": "2014-03-04T16:28:22Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 56216, "text": "Could you post some backtraces of the execution to verify that reqtimeout_init() is indeed being run multiple times in a single connection? It'd be interesting to see where it's getting called from.", "id": 173634, "time": "2014-03-05T13:50:16Z", "creator": "Chaosed0@gmail.com", "creation_time": "2014-03-05T13:50:16Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 56216, "attachment_id": null, "id": 173658, "time": "2014-03-06T10:03:32Z", "creator": "frank.meier@ergon.ch", "creation_time": "2014-03-06T10:03:32Z", "is_private": false, "text": "I put some additional debug log into mod_reqtimeout.c (see attachment: mod_reqtimeout.c.debug) and made two requests (with telnet) on the same TCP connection. The resulting log (see attachment: two_requests_on_same_connection_debug.log) shows, that the method  reqtimeout_init() is indeed called for each request (first at 10:57:51.982062, second: 10:58:01.277638). \n\nFurther we can see, that in the first request the method reqtimeout_filter() is called with the context:0x58037d30 which was created in the first reqtimeout_init() call; and in the second request it is again called with the context from the first request and also with the new one 0x58037f50 created in the second reqtimeout_init() call."}, {"count": 3, "tags": [], "text": "Created attachment 31370\nmod_reqtimeout.c with more debug logs", "attachment_id": 31370, "bug_id": 56216, "id": 173659, "time": "2014-03-06T10:04:51Z", "creator": "frank.meier@ergon.ch", "creation_time": "2014-03-06T10:04:51Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 56216, "is_private": false, "text": "Created attachment 31371\napache error_log with debug info during 2 requests on same connection", "id": 173660, "time": "2014-03-06T10:05:40Z", "creator": "frank.meier@ergon.ch", "creation_time": "2014-03-06T10:05:40Z", "attachment_id": 31371}, {"count": 5, "tags": [], "text": "I got you 2 backtraces in reqtimeout_init. 2 Request on the same connection with telnet:\n\nBreakpoint 1, reqtimeout_init (c=0x7ffff0007d00) at mod_reqtimeout.c:338\n338         cfg = ap_get_module_config(c->base_server->module_config,\n(gdb) bt\n#0  reqtimeout_init (c=0x7ffff0007d00) at mod_reqtimeout.c:338\n#1  0x00005555555ba380 in ap_run_process_connection (c=0x7ffff0007d00) at connection.c:41\n#2  0x00005555555d2845 in process_socket (my_thread_num=1, my_child_num=0, cs=0x7ffff0007c88, sock=0x7ffff0007a80, p=<optimized out>, thd=0x555555842038) at event.c:970\n#3  worker_thread (thd=0x555555842038, dummy=<optimized out>) at event.c:1815\n#4  0x00007ffff6c96f3a in start_thread () from /lib/libpthread.so.0\n#5  0x00007ffff67ccc3d in clone () from /lib/libc.so.6\n(gdb) cont\nContinuing.\n[Switching to Thread 0x7ffff5cd0700 (LWP 15328)]\n\nBreakpoint 1, reqtimeout_init (c=0x7ffff0007d00) at mod_reqtimeout.c:338\n338         cfg = ap_get_module_config(c->base_server->module_config,\n(gdb) bt\n#0  reqtimeout_init (c=0x7ffff0007d00) at mod_reqtimeout.c:338\n#1  0x00005555555ba380 in ap_run_process_connection (c=0x7ffff0007d00) at connection.c:41\n#2  0x00005555555d2845 in process_socket (my_thread_num=0, my_child_num=0, cs=0x7ffff0007c88, sock=0x7ffff0007a80, p=<optimized out>, thd=0x555555842008) at event.c:970\n#3  worker_thread (thd=0x555555842008, dummy=<optimized out>) at event.c:1815\n#4  0x00007ffff6c96f3a in start_thread () from /lib/libpthread.so.0\n#5  0x00007ffff67ccc3d in clone () from /lib/libc.so.6\n(gdb) cont\nContinuing.", "attachment_id": null, "id": 173662, "creator": "frank.meier@ergon.ch", "time": "2014-03-06T10:32:00Z", "bug_id": 56216, "creation_time": "2014-03-06T10:32:00Z", "is_private": false}, {"count": 6, "tags": [], "bug_id": 56216, "attachment_id": 31372, "text": "Created attachment 31372\nonly create reqtimeout_con_cfg once per connection / reset properly\n\nadded improved patch: initialize reqtimeout_con_cfg with zeros in case of reusage.", "id": 173663, "time": "2014-03-06T10:40:14Z", "creator": "frank.meier@ergon.ch", "creation_time": "2014-03-06T10:40:14Z", "is_private": false}, {"count": 7, "tags": [], "bug_id": 56216, "is_private": false, "text": "I see that you are using the event MPM. Can you still reproduce this using the worker MPM?", "id": 173665, "time": "2014-03-06T12:10:56Z", "creator": "rpluem@apache.org", "creation_time": "2014-03-06T12:10:56Z", "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 56216, "text": "Funny thing. I cannot reproduce this behavior with the worker MPM. There reqtimeout_init() is only called once at the beginning of the first request.\n\nSo it seems the event MPM does not handle the ap_hook_process_connection() hook the same way as the worker MPM. This could potentially break other modules depending on this hook.", "count": 8, "id": 173666, "time": "2014-03-06T13:30:15Z", "creator": "frank.meier@ergon.ch", "creation_time": "2014-03-06T13:30:15Z", "is_private": false}, {"count": 9, "tags": [], "creator": "covener@gmail.com", "text": "This seems to be a basic difference between event and worker, worker loops over requests in its 1 call to ap_hook_process_connection() whereas event pulls one off and returns afterwards as the MPM drives ap_run_process_connection() over and over.\n\nVery few consumers in-tree of ap_hook_process_connection. Seems a bit odd.", "id": 173671, "time": "2014-03-06T17:42:12Z", "bug_id": 56216, "creation_time": "2014-03-06T17:42:12Z", "is_private": false, "attachment_id": null}, {"attachment_id": null, "tags": [], "creator": "covener@gmail.com", "text": "Thanks for the report/patch, committed to trunk with some style changes", "count": 10, "id": 174035, "time": "2014-03-23T19:00:07Z", "bug_id": 56216, "creation_time": "2014-03-23T19:00:07Z", "is_private": false}, {"count": 11, "tags": [], "creator": "covener@gmail.com", "text": "Thanks for the report/patch, committed to trunk with some style changes in 1580568. Will propose for 2.4.10.", "id": 174036, "time": "2014-03-23T19:00:31Z", "bug_id": 56216, "creation_time": "2014-03-23T19:00:31Z", "is_private": false, "attachment_id": null}, {"count": 12, "tags": [], "creator": "christophe.jaillet@wanadoo.fr", "text": "Fixed and released in 2.4.10", "id": 177229, "time": "2014-08-18T07:51:46Z", "bug_id": 56216, "creation_time": "2014-08-18T07:51:46Z", "is_private": false, "attachment_id": null}]