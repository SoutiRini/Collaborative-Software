[{"count": 0, "tags": [], "text": "The problem is that when using threaded MPM (like worker) and do\nhttpd -k stop\n+ immediately start httpd again then it will fail with message\n(98)Address already in use: make_sock: could not bind to address 0.0.0.0:443\nno listening sockets available, shutting down\n\nIt seems that some threads do not end immediately and still use tcp port so bind \nfails. This happens only when some client is connected. If I stop httpd and wait \nfor some time then after disconnection of client thread exits and I can start \nnew httpd without any problems.\n\nIt seems like setting SO_REUSEADDR on listening sockets is good idea (or making \nhttpd -s stop wait for all children/threads to exit).", "is_private": false, "bug_id": 27869, "id": 54471, "time": "2004-03-23T13:30:04Z", "creator": "arekm@maven.pl", "creation_time": "2004-03-23T13:30:04Z", "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 27869, "attachment_id": null, "is_private": false, "id": 54478, "time": "2004-03-23T14:54:10Z", "creator": "slive@apache.org", "creation_time": "2004-03-23T14:54:10Z", "text": "Why aren't you simply using a restart (graceful, preferably)?\n\nIt seems perfectly reasonable to me that a start won't work until a stop has\nhad a chance to finish."}, {"count": 2, "tags": [], "bug_id": 27869, "attachment_id": null, "is_private": false, "id": 54735, "time": "2004-03-26T12:47:50Z", "creator": "arekm@maven.pl", "creation_time": "2004-03-26T12:47:50Z", "text": "Because I for example have new version of httpd with security fixes and I want \nto restart it as whole, or because I've modified httpd somehow and want new \nversion to be started, or because there is new version from vendor. There is \nbunch of possible reasons.\n\nSince it's perfectly reasonable that start won't work until a stop has\nhad a chance to finish then why httpd -k stop doesn't wait until it's really \nstopped? Right now httpd -k stop behaviour doesn't give any information whether \nhttpd stopped or not.\n\nAlso why SO_REUSEADDR option on socket can't be used? It would help. "}, {"count": 3, "text": ">Also why SO_REUSEADDR option on socket can't be used?\n\nThis option is already used.  On most platforms (including everywhere that\nworker MPM runs), SO_REUSEADDR does not allow an app to bind to a port that some\nother process still has a listening socket on.  It only allows an app to bind to\na port where there are still TCP connections in terminating states (e.g.,\nTIME_WAIT) which were established while some app was bound to the port.\n\nHow long is it taking the Apache processes to fully shut down in your\nenvironment before Apache can successfully re-initialize?  Is anything written\nto error log during shutdown?\n", "bug_id": 27869, "attachment_id": null, "id": 54738, "time": "2004-03-26T13:11:37Z", "creator": "trawick@apache.org", "creation_time": "2004-03-26T13:11:37Z", "tags": [], "is_private": false}, {"attachment_id": null, "tags": [], "creator": "arekm@maven.pl", "is_private": false, "count": 4, "id": 54742, "time": "2004-03-26T14:38:25Z", "bug_id": 27869, "creation_time": "2004-03-26T14:38:25Z", "text": "I'm getting this\n[Fri Mar 26 15:36:15 2004] [warn] child process 31232 still did not exit, \nsending a SIGTERM\n[Fri Mar 26 15:36:15 2004] [warn] child process 31232 still did not exit, \nsending a SIGTERM\n[Fri Mar 26 15:36:16 2004] [warn] child process 31232 still did not exit, \nsending a SIGTERM\n[Fri Mar 26 15:36:20 2004] [error] child process 31232 still did not exit, \nsending a SIGKILL\n[Fri Mar 26 15:36:37 2004] [notice] caught SIGTERM, shutting down\n\ntry to start apache with worker MPM, then telnet host 80 and leve it that way, \nthen httpd -k stop; httpd to reproduce.\n\nIf httpd -k stop would wait then everything would be working nicely."}, {"count": 5, "tags": [], "bug_id": 27869, "attachment_id": null, "is_private": false, "id": 62715, "time": "2004-08-30T05:33:16Z", "creator": "chip@force-elite.com", "creation_time": "2004-08-30T05:33:16Z", "text": "This seems like a Feature request to use SO_REUSEADDR or rety the bind() over a few seconds..."}]