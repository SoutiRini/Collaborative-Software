[{"count": 0, "tags": [], "bug_id": 57521, "attachment_id": null, "id": 180698, "time": "2015-02-02T10:10:58Z", "creator": "tanaka.shunsuke@simplex.ne.jp", "creation_time": "2015-02-02T10:10:58Z", "is_private": false, "text": "Tomcat 7.0.40\nTomcat Native library 1.1.30\nAPR version 1.5.0\nJava version 1.7.0_21\nOS version Red Hat Enterprise Linux 6.3 \uff0864bit\uff09\n\nTomcat randomly crashes with [libtcnative-1.so.0.1.30+0xe965]  Java_org_apache_tomcat_jni_Socket_sendbb+0x75.\nTomcat with the APR connector, using HTTPS scheme.\nThe system implements CometProcessor and run with non blocking I/O model.\nOut traffic 80M per seconds, In traffic 40M per seconds in Production Environment.\n\n\n\n====================== Core dump ======================\n#\n# A fatal error has been detected by the Java Runtime Environment:\n#\n#  SIGSEGV (0xb) at pc=0x00007f3d1b4c6965, pid=39208, tid=139886924297984\n#\n# JRE version: 7.0_21-b11\n# Java VM: Java HotSpot(TM) 64-Bit Server VM (23.21-b01 mixed mode linux-amd64 compressed oops)\n# Problematic frame:\n# C  [libtcnative-1.so.0.1.30+0xe965]  Java_org_apache_tomcat_jni_Socket_sendbb+0x75\n#\n# Core dump written. Default location: /xxxxxxx/app/eden/0002-20141208113224/deploy/bin/core or core.39208\n#\n# If you would like to submit a bug report, please visit:\n#   http://bugreport.sun.com/bugreport/crash.jsp\n# The crash happened outside the Java Virtual Machine in native code.\n# See problematic frame for where to report the bug.\n#\n\n---------------  T H R E A D  ---------------\n\nCurrent thread (0x00007f3a44564000):  JavaThread \"raise-response-flush-dispatcher-379338\" daemon [_thread_in_native, id=53963, stack(0x00007f39f65e7000,0x00007f39f66e8000)]\n\nsiginfo:si_signo=SIGSEGV: si_errno=0, si_code=128 (), si_addr=0x0000000000000000\n\nRegisters:\nRAX=0x6174656d227b5b3a, RBX=0x00007f39e8d65d70, RCX=0x0000000000000000, RDX=0x00007f39f66e6758\nRSP=0x00007f39f66e6750, RBP=0x0000000000000000, RSI=0x59504a2f5255452e, RDI=0x6563697270223a22\nR8 =0x000000000000015a, R9 =0x0000000000000001, R10=0x00007f3d29b52da7, R11=0x00000000eb68d8bc\nR12=0x000000000000015a, R13=0x00007f39f66e6758, R14=0x0000000000000000, R15=0x00007f3a44564000\nRIP=0x00007f3d1b4c6965, EFLAGS=0x0000000000010206, CSGSFS=0x0000000000000033, ERR=0x0000000000000000\n  TRAPNO=0x000000000000000d\n\nTop of Stack: (sp=0x00007f39f66e6750)\n0x00007f39f66e6750:   000000075b8ac140 000000000000015a\n0x00007f39f66e6760:   000000075b7f9f20 00007f39f66e67d0\n0x00007f39f66e6770:   0000000000000000 000000075b46c5e0\n0x00007f39f66e6780:   00007f39f66e67c0 00007f3d29b52e1d\n0x00007f39f66e6790:   0000000800000002 00000153eb6ff3e8\n0x00007f39f66e67a0:   000000075b46c5e0 0000000a5b46c5e0\n0x00007f39f66e67b0:   0000000500000153 00007f3d29e6e36c\n0x00007f39f66e67c0:   000000074562d840 00007f3afe02d260\n0x00007f39f66e67d0:   000000075b7e1970 00007f3d29b2c008\n0x00007f39f66e67e0:   00000000eb70d57e 00007f3d29d877b4\n0x00007f39f66e67f0:   000000075b7e1970 00007f3d29925f20\n0x00007f39f66e6800:   00000007eb6fc32e 000000075b60d580\n0x00007f39f66e6810:   000000075b7f9f40 00007f3d2c00f700\n0x00007f39f66e6820:   00007f39f66e6870 00007f3d33681265\n0x00007f39f66e6830:   000000075b789f40 00007f3d29dd3c98\n0x00007f39f66e6840:   eb6f13e8eb7141dc eb7141e200000001\n0x00007f39f66e6850:   000000075b895198 000000075b8a34c0\n0x00007f39f66e6860:   000000075b8a0ee0 0000000700000000\n0x00007f39f66e6870:   00007f39f66e6890 00007f3d00000153\n0x00007f39f66e6880:   000000075b7f9f20 000000075b8a3ac0\n0x00007f39f66e6890:   000000075b7dca10 00007f3d29061ec7\n0x00007f39f66e68a0:   000000075b7dca10 00007f3d29fc344c\n0x00007f39f66e68b0:   eb712a3300000153 0000000786e92418\n0x00007f39f66e68c0:   000000072199bd00 000000000000013c\n0x00007f39f66e68d0:   000000075b7dca10 00000007249aecc8\n0x00007f39f66e68e0:   0000000000000002 00007f3d29efe290\n0x00007f39f66e68f0:   00000007249ae968 00000007263fc7e8\n0x00007f39f66e6900:   0000000746d7eff0 00000000e4935d29\n0x00007f39f66e6910:   0000000000000003 00007f3d29b6ea9c\n0x00007f39f66e6920:   00000000f0dd2483 00007f3d29efd22c\n0x00007f39f66e6930:   00000007240a8eb0 fe03f3cde48151d4\n0x00007f39f66e6940:   00000007249aec80 0000000786e92418 \n\nInstructions: (pc=0x00007f3d1b4c6965)\n0x00007f3d1b4c6945:   7a 48 8b 43 30 4c 89 e2 4a 8d 74 35 00 48 03 73\n0x00007f3d1b4c6955:   20 48 29 ea 48 8b 7b 18 48 89 54 24 08 4c 89 ea\n0x00007f3d1b4c6965:   ff 50 40 85 c0 74 c4 83 f8 0b 0f 94 c1 3d c2 d4\n0x00007f3d1b4c6975:   01 00 75 5f 48 85 ed 89 ea 75 42 3d 77 11 01 00 \n\nRegister to memory mapping:\n\nRAX=0x6174656d227b5b3a is an unknown value\nRBX=0x00007f39e8d65d70 is an unknown value\nRCX=0x0000000000000000 is an unknown value\nRDX=0x00007f39f66e6758 is pointing into the stack for thread: 0x00007f3a44564000\nRSP=0x00007f39f66e6750 is pointing into the stack for thread: 0x00007f3a44564000\nRBP=0x0000000000000000 is an unknown value\nRSI=0x59504a2f5255452e is an unknown value\nRDI=0x6563697270223a22 is an unknown value\nR8 =0x000000000000015a is an unknown value\nR9 =0x0000000000000001 is an unknown value\nR10=0x00007f3d29b52bd0 [CodeBlob (0x00007f3d29b52bd0)]\nFramesize: 10\nR11=0x00000000eb68d8bc is an unknown value\nR12=0x000000000000015a is an unknown value\nR13=0x00007f39f66e6758 is pointing into the stack for thread: 0x00007f3a44564000\nR14=0x0000000000000000 is an unknown value\nR15=0x00007f3a44564000 is a thread\n\n\nStack: [0x00007f39f65e7000,0x00007f39f66e8000],  sp=0x00007f39f66e6750,  free space=1021k\nNative frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)\nC  [libtcnative-1.so.0.1.30+0xe965]  Java_org_apache_tomcat_jni_Socket_sendbb+0x75\n\n[error occurred during error reporting (printing native stack), id 0xb]\n\nJava frames: (J=compiled Java code, j=interpreted, Vv=VM code)\nJ  org.apache.tomcat.jni.Socket.sendbb(JII)I\nJ  org.apache.coyote.http11.InternalAprOutputBuffer.flushBuffer()V\nJ  org.apache.coyote.http11.AbstractHttp11Processor.action(Lorg/apache/coyote/ActionCode;Ljava/lang/Object;)V\nJ  org.apache.catalina.connector.OutputBuffer.doFlush(Z)V\nJ  org.apache.catalina.connector.Response.flushBuffer()V\nJ  jp.co.xxxxxxx.raise.app.fw.socketio.transport.XHRStreaming.flushResponse()Z\nJ  scala.concurrent.impl.Future$PromiseCompletingRunnable.run()V\nJ  akka.dispatch.TaskInvocation.run()V\nJ  java.util.concurrent.ThreadPoolExecutor.runWorker(Ljava/util/concurrent/ThreadPoolExecutor$Worker;)V\nj  java.util.concurrent.ThreadPoolExecutor$Worker.run()V+5\nj  java.lang.Thread.run()V+11\nv  ~StubRoutines::call_stub"}, {"count": 1, "tags": [], "bug_id": 57521, "text": "You need to upgrade both Tomcat and your version of tc-native to the latest versions and re-test. There have been multiple fixes in this area since the versions you are using.", "id": 180699, "attachment_id": null, "creator": "markt@apache.org", "creation_time": "2015-02-02T10:27:53Z", "time": "2015-02-02T10:27:53Z", "is_private": false}, {"count": 2, "tags": [], "creator": "tanaka.shunsuke@simplex.ne.jp", "text": "Please tell me the tomcat and tc-native version it had been fixed.\nThe system run in production environment, so if I upgrade\nthe tomcat and tc-native, I have to prove to my customer \nthis problem never appear.\n\nhttps://issues.apache.org/bugzilla/show_bug.cgi?id=51813\n\nIn the above ticket, it has been commented that \"Please re-open if it appears\".", "id": 180700, "time": "2015-02-02T11:26:39Z", "bug_id": 57521, "creation_time": "2015-02-02T11:26:39Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 57521, "text": "(In reply to Shunsuke Tanaka from comment #2)\n> Please tell me the tomcat and tc-native version it had been fixed.\n> The system run in production environment, so if I upgrade\n> the tomcat and tc-native, I have to prove to my customer \n> this problem never appear.\n\nIf you need to prove to your customer that the problem [will] never appear, then that's your job, since they are paying you to get the job done.\n\n> https://issues.apache.org/bugzilla/show_bug.cgi?id=51813\n> \n> In the above ticket, it has been commented that \"Please re-open if it\n> appears\".\n\nSo why didn't you re-open that ticket if you are having the same problem?\n\nLet me save you some time: the patch went into 1.1.28 but it only tries to prevent the JVM from crashing when the application is doing something it should not be doing (like keeping references to request and response objects). That patch fixes nothing other than the symptom (the JVM crash)... the core problem is misuse of resources.\n\nIn reviewing the code (again) for sendbb, there are very few opportunities for a null-pointer de-reference. Are you able to re-build tcnative with debugging symbols and do some back-tracing for me? \"sendbb+0x75\" can mean different things depending upon the environment.", "id": 180704, "time": "2015-02-02T15:46:52Z", "creator": "chris@christopherschultz.net", "creation_time": "2015-02-02T15:46:52Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 57521, "text": "Seriously considering marking this as a duplicate of bug #51813 and re-opening that one, just because it's got better information and a longer history.", "id": 180705, "attachment_id": null, "creator": "chris@christopherschultz.net", "creation_time": "2015-02-02T15:47:38Z", "time": "2015-02-02T15:47:38Z", "is_private": false}, {"attachment_id": null, "tags": [], "bug_id": 57521, "text": "Sorry. You're right.\nI looked for fixed report of this problem in Tomcat Changelog expectantly, but I can't find that.\nHowever I got the suggestion Tomcat/Tomcat Native upgrade in comment#1.\nI think I overlooked the fixed report, so I asked what version the problem is fixed.\nCan I ask you  whether Bug #51813 is the same as the problem I have?\nI can't judge that, because there are some differences of Java,OS,Tomcat version.\nIf same problem, I will mark this as a duplicate of bug #51813.\n\n>Are you able to re-build tcnative with debugging symbols and do some back-tracing for me?\n\nDo you need back-trace of the time when the problem occured?\nIf yes, it is difficult for me that I change the production environment.\nNow I try reproducing the problem in test environment.", "count": 5, "id": 180728, "time": "2015-02-03T13:31:38Z", "creator": "tanaka.shunsuke@simplex.ne.jp", "creation_time": "2015-02-03T13:31:38Z", "is_private": false}, {"count": 6, "tags": [], "creator": "chris@christopherschultz.net", "text": "(In reply to Shunsuke Tanaka from comment #5)\n> Can I ask you  whether Bug #51813 is the same as the problem I have?\n\nThe \"problem\" is that tcnative crashes in the \"sendbb\" function. The cause is elsewhere, this is just the symptom. So yes, you have the same symptom as reported in bug #51813.\n\n> I can't judge that, because there are some differences of Java,OS,Tomcat\n> version.\n> If same problem, I will mark this as a duplicate of bug #51813.\n> \n> >Are you able to re-build tcnative with debugging symbols and do some back-tracing for me?\n> \n> Do you need back-trace of the time when the problem occured?\n\nIf I could get that, it would be best. Also please tell me exactly which package you downloaded. You have 1.1.30 shown, but 1.1.32 is the latest. It would be best to build the latest (1.1.30) with debug symbols but if you have to stick with 1.1.30, that's okay too. Just enough to see which of the possibilities this could be.\n\nI'm surprised that the checks already in there aren't protecting you... something deeper must be going on.\n\n> If yes, it is difficult for me that I change the production environment.\n\nIf you built tcnative yourself, re-building it with debug symbols should not be a problem... if Tomcat crashes with some regularity, replacing the native library shouldn't represent too much of a burden...\n\n> Now I try reproducing the problem in test environment.\n\nFair enough. Get me whatever data you can.", "id": 180736, "time": "2015-02-03T14:43:00Z", "bug_id": 57521, "creation_time": "2015-02-03T14:43:00Z", "is_private": false, "attachment_id": null}, {"count": 7, "tags": [], "bug_id": 57521, "attachment_id": null, "id": 180737, "creation_time": "2015-02-03T15:12:18Z", "time": "2015-02-03T15:12:18Z", "creator": "knst.kolinko@gmail.com", "text": "(In reply to Mark Thomas from comment #1)\n> You need to upgrade both Tomcat and your version of tc-native to the latest\n> versions and re-test. There have been multiple fixes in this area since the\n> versions you are using.\n\nFrom Tomcat side there have been the following fixes in the \"Coyote\" (connector) category:\n\n7.0.46:\n55602: Ensure that sockets removed from the Poller and then closed in the APR/native connector are removed and then closed in a thread-safe manner.\n\n7.0.54:\n56399: Assert that both Coyote and Catalina request objects have been properly recycled.\n\nMaybe there are other changes as well.\n\nIt would be better to test with an up-to-date version rather than with 7.0.40. \n(7.0.59 is currently being voted on and is likely to be released in a few days).\n\nBut with comet the cause may actually be in your own web application. Are you sure that you aren't trying to write to a response that have already been completed and recycled?\n\n> Java frames: (J=compiled Java code, j=interpreted, Vv=VM code)\n> J  org.apache.tomcat.jni.Socket.sendbb(JII)I\n> J  org.apache.coyote.http11.InternalAprOutputBuffer.flushBuffer()V\n> J \n> org.apache.coyote.http11.AbstractHttp11Processor.action(Lorg/apache/coyote/\n> ActionCode;Ljava/lang/Object;)V\n> J  org.apache.catalina.connector.OutputBuffer.doFlush(Z)V\n> J  org.apache.catalina.connector.Response.flushBuffer()V\n> J \n> jp.co.xxxxxxx.raise.app.fw.socketio.transport.XHRStreaming.flushResponse()Z\n> J  scala.concurrent.impl.Future$PromiseCompletingRunnable.run()V\n> J  akka.dispatch.TaskInvocation.run()V\n> J \n> java.util.concurrent.ThreadPoolExecutor.runWorker(Ljava/util/concurrent/\n> ThreadPoolExecutor$Worker;)V\n> j  java.util.concurrent.ThreadPoolExecutor$Worker.run()V+5\n> j  java.lang.Thread.run()V+11\n> v  ~StubRoutines::call_stub\n\nIn the above stack trace - how does it happen that you are directly calling org.apache.catalina.connector.Response method flushBuffer()?\n\nA web application shall not access that connector Response class directly. A application shall use CometEvent.getHttpServletResponse() which returns a facade, not the internal object.\n\n\nIf you set the following system property, the facades are recycled when request processing cycle finishes, protecting Tomcat internals. Using this property will not help you if you are accessing the internals directly.\n\norg.apache.catalina.connector.RECYCLE_FACADES=true\n\nSystem properties reference:\nhttp://tomcat.apache.org/tomcat-7.0-doc/config/systemprops.html#Security", "is_private": false}, {"count": 8, "tags": [], "bug_id": 57521, "text": "Christopher, Konstantin\nThank you for your comment.\n\n\n(In reply to Christopher Schultz from comment #6)\n> please tell me exactly which package you downloaded.\n\nI downloaded tomcat-native-1.1.30-src.tar.gz.\nI builded and upgraded tcnative from 1.1.27 to 1.1.30 in 2014/04/26.\n\n\n> I'm surprised that the checks already in there aren't protecting you... something deeper must be going on.\n\nIf this problem would be caused by tomcat code(if the tcnative receives the wrong value from Tomcat),\ncan this symptom occur?\nWhat do you think the following double check?\n\nif(!s->net || s->net != &apr_socket_layer){\n  tcn_ThrowAPRException(e, APR_EINVALSOCK);\n  return -(jint)APR_EINVALSOCK;\n}\n\nIf the tcnative receives the wrong value from Tomcat, I think this check works effectively.\nAnd if condition is false and this symptom occur, it seems to me that either of \"s->opaque, s->jsbbuff\" value is broken.\nI'm sorry, if I have to say irrelevant things.\n\n\n> If you built tcnative yourself, re-building it with debug symbols should not be a problem... \n\nI have to care performance problem to change debug level of tcnative.\n\n\n> if Tomcat crashes with some regularity, replacing the native library shouldn't represent too much of a burden...\n\nThe symptom occured twice a year in production environment.\n\n\n\n(In reply to Konstantin Kolinko from comment #7)\n> From Tomcat side there have been the following fixes in the \"Coyote\" (connector) category:\n> 7.0.46:\n> 7.0.54:\n\nIf this problem would be caused by tomcat thread-safe or recycle problem, as you say,\nI have a feeling that this symptom never occur by upgrading Tomcat.\n\n\n> Are you sure that you aren't trying to write to a response that have already been completed and recycled?\n\nHow can I check that you say?\n\n\n> how does it happen that you are directly calling org.apache.catalina.connector.Response method flushBuffer()?\n\nI have no idea.\nThe stack trace has been writen into the core dump file when the symptom occured.\nWhen I set breakpoint and step-run, I confirmed that org.apache.catalina.connector.CoyoteWriter is called.\n\n\n> org.apache.catalina.connector.RECYCLE_FACADES=true\n\nThank you for your information.\nAlso in this case, I have to care performance problem to change this parameter.\n\n\nI will consider that upgrade Tomcat and/or change RECYCLE_FACADES value to true.", "id": 180821, "attachment_id": null, "creator": "tanaka.shunsuke@simplex.ne.jp", "creation_time": "2015-02-06T04:18:52Z", "time": "2015-02-06T04:18:52Z", "is_private": false}, {"count": 9, "tags": [], "bug_id": 57521, "attachment_id": null, "id": 182983, "time": "2015-05-14T11:52:33Z", "creator": "timofeevda@gmail.com", "creation_time": "2015-05-14T11:52:33Z", "is_private": false, "text": "We have the same issue but with newer Tomcat and Native library. JVM randomly crashes with the following dump. Unfortunately it's hard for us to track this issue down in our environment. So, it's just a comment that the issue is reproducible with the newer versions.\n\nTomcat 7.0.59\nWebsockets and HTTP streaming over Atmopshere Framework\nTomcat Native library 1.1.32\nAPR version 1.3.9\nJava version 1.7.0_21\nOS version Red Hat Enterprise Linux 6.6 \uff0864bit\uff09\n\n#\n# A fatal error has been detected by the Java Runtime Environment:\n#\n#  SIGSEGV (0xb) at pc=0x00007f2376b61b8b, pid=14828, tid=139778958763776\n#\n# JRE version: 7.0_21-b11\n# Java VM: Java HotSpot(TM) 64-Bit Server VM (23.21-b01 mixed mode linux-amd64 compressed oops)\n# Problematic frame:\n# C  [libtcnative-1.so+0x13b8b]  Java_org_apache_tomcat_jni_Socket_send+0x7b\n#\n# Failed to write core dump. Core dumps have been disabled. To enable core dumping, try \"ulimit -c unlimited\" before starting Java again\n#\n# If you would like to submit a bug report, please visit:\n#   http://bugreport.sun.com/bugreport/crash.jsp\n# The crash happened outside the Java Virtual Machine in native code.\n# See problematic frame for where to report the bug.\n#\n\n---------------  T H R E A D  ---------------\n\nCurrent thread (0x00007f1fd8020000):  JavaThread \"Atmosphere-Shared-AsyncOp-13\" daemon [_thread_in_native, id=31127, stack(0x00007f20d31f2000,0x00007f20d32f3000)]\n\nsiginfo:si_signo=SIGSEGV: si_errno=0, si_code=1 (SEGV_MAPERR), si_addr=0x0000000000000040\n\nRegisters:\nRAX=0x0000000000000000, RBX=0x00007f20a82a0c28, RCX=0x0000000000000081, RDX=0x00007f20d32ef188\nRSP=0x00007f20d32ef160, RBP=0x00007f1fd80201d8, RSI=0x00007f20d32ef190, RDI=0x0000000000000000\nR8 =0x00007f20d32ef190, R9 =0x0000000000000001, R10=0x00007f239d9c7cfb, R11=0x0000000000000001\nR12=0x00007f20d32ef190, R13=0x000000000000004c, R14=0x00007f20d32f11f0, R15=0x00007f1fd8020000\nRIP=0x00007f2376b61b8b, EFLAGS=0x0000000000010246, CSGSFS=0x0000000000000033, ERR=0x0000000000000004\n  TRAPNO=0x000000000000000e\n\nTop of Stack: (sp=0x00007f20d32ef160)\n0x00007f20d32ef160:   2c4e4f4954415249 69646e6f00000000\n0x00007f20d32ef170:   4952503d00000000 00007f2000000000\n0x00007f20d32ef180:   6f6d612c44455341 0000000000000001\n0x00007f20d32ef190:   707974227b7c3681 56524553223a2265\n0x00007f20d32ef1a0:   224f464e00000000 3a2279646f62222c\n0x00007f20d32ef1b0:   726576726573227b 34313a22656d6954\n0x00007f20d32ef1c0:   3936393736343133 2274222c7d333235\n0x00007f20d32ef1d0:   373634313334313a 7b7d363630313739\n0x00007f20d32ef1e0:   3a22644974656222 3438303733313532\n0x00007f20d32ef1f0:   74756f797562222c 363a2265756c6156\n0x00007f20d32ef200:   343730333339392e 313a2274222c5d7d\n0x00007f20d32ef210:   3739373634313334 2e393a7d34363830\n0x00007f20d32ef220:   746562222c323634 323135323a226449\n0x00007f20d32ef230:   222c5d7d38373936 34313334313a2274\n0x00007f20d32ef240:   3436383037393736 3a226449747d7d7d\n0x00007f20d32ef250:   3238363734313532 313a2274222c5d7d\n0x00007f20d32ef260:   3639373634313334 3a22647d39393637\n0x00007f20d32ef270:   3630343535313532 313a2274222c5d7d\n0x00007f20d32ef280:   3639373634313334 7d33327d35363337\n0x00007f20d32ef290:   6552746e656d6574 7672655300000000\n0x00007f20d32ef2a0:   737365733f74656c 317b3d64496e6f69\n0x00007f20d32ef2b0:   6e756f636361267d 267d327b3d644974\n0x00007f20d32ef2c0:   7b3d646f69726570 6c61636f6c267d33\n0x00007f20d32ef2d0:   222c227d347b3d65 22746e756f636361\n0x00007f20d32ef2e0:   756f636361227b3a 3a2265646f43746e\n0x00007f20d32ef2f0:   305f615f73617122 62222c2230333932\n0x00007f20d32ef300:   6572727543657361 4247223a2279636e\n0x00007f20d32ef310:   6f636361222c2250 2265707954746e75\n0x00007f20d32ef320:   544e45494c43223a 756f636361222c22\n0x00007f20d32ef330:   697461657243746e 3a22656d69546e6f\n0x00007f20d32ef340:   3537393334393331 62222c3432313435\n0x00007f20d32ef350:   6572727543657361 696365725079636e \n\nInstructions: (pc=0x00007f2376b61b8b)\n0x00007f2376b61b6b:   30 48 89 ef 44 89 c9 4d 89 e0 ff 90 40 06 00 00\n0x00007f2376b61b7b:   48 8b 43 30 48 8d 54 24 28 48 8b 7b 18 4c 89 e6\n0x00007f2376b61b8b:   ff 50 40 85 c0 0f 84 8a 00 00 00 83 f8 0b 0f 94\n0x00007f2376b61b9b:   c2 3d c2 d4 01 00 75 65 48 8b 4c 24 28 48 85 c9 \n\nRegister to memory mapping:\n\nRAX=0x0000000000000000 is an unknown value\nRBX=0x00007f20a82a0c28 is an unknown value\nRCX=0x0000000000000081 is an unknown value\nRDX=0x00007f20d32ef188 is pointing into the stack for thread: 0x00007f1fd8020000\nRSP=0x00007f20d32ef160 is pointing into the stack for thread: 0x00007f1fd8020000\nRBP=0x00007f1fd80201d8 is an unknown value\nRSI=0x00007f20d32ef190 is pointing into the stack for thread: 0x00007f1fd8020000\nRDI=0x0000000000000000 is an unknown value\nR8 =0x00007f20d32ef190 is pointing into the stack for thread: 0x00007f1fd8020000\nR9 =0x0000000000000001 is an unknown value\nR10=0x00007f239d9c7b10 [CodeBlob (0x00007f239d9c7b10)]\nFramesize: 10\nR11=0x0000000000000001 is an unknown value\nR12=0x00007f20d32ef190 is pointing into the stack for thread: 0x00007f1fd8020000\nR13=0x000000000000004c is an unknown value\nR14=0x00007f20d32f11f0 is pointing into the stack for thread: 0x00007f1fd8020000\nR15=0x00007f1fd8020000 is a thread\n\n\nStack: [0x00007f20d31f2000,0x00007f20d32f3000],  sp=0x00007f20d32ef160,  free space=1012k\nNative frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)\nC  [libtcnative-1.so+0x13b8b]  Java_org_apache_tomcat_jni_Socket_send+0x7b\n\nJava frames: (J=compiled Java code, j=interpreted, Vv=VM code)\nJ  org.apache.tomcat.jni.Socket.$$YJP$$send(J[BII)I\nJ  org.apache.catalina.websocket.WsOutbound.doWriteBytes(Ljava/nio/ByteBuffer;Z)V\nJ  org.atmosphere.container.version.TomcatWebSocket.write(Ljava/lang/String;)Lorg/atmosphere/websocket/WebSocket;\nJ  org.atmosphere.websocket.WebSocket.write(Lorg/atmosphere/cpr/AtmosphereResponse;[BII)Lorg/atmosphere/websocket/WebSocket;\nJ  org.atmosphere.websocket.WebSocket.write(Lorg/atmosphere/cpr/AtmosphereResponse;[B)Lorg/atmosphere/websocket/WebSocket;\nJ  org.atmosphere.cpr.AtmosphereResponse$2.write([B)V\nJ  ****.MessageSerializerInterceptor$1.write(Ljava/io/OutputStream;Ljava/lang/Object;)V\nJ  org.atmosphere.handler.AbstractReflectorAtmosphereHandler.onStateChange(Lorg/atmosphere/cpr/AtmosphereResourceEvent;)V\nJ  org.atmosphere.config.managed.ManagedAtmosphereHandler.onStateChange(Lorg/atmosphere/cpr/AtmosphereResourceEvent;)V\nJ  org.atmosphere.cpr.DefaultBroadcaster$WriteOperation.call()Ljava/lang/Object;\nJ  org.atmosphere.cpr.DefaultBroadcaster.prepareInvokeOnStateChange(Lorg/atmosphere/cpr/AtmosphereResource;Lorg/atmosphere/cpr/AtmosphereResourceEvent;)V\nJ  org.atmosphere.cpr.DefaultBroadcaster.executeAsyncWrite(Lorg/atmosphere/cpr/DefaultBroadcaster$AsyncWriteToken;)V\nJ  org.atmosphere.cpr.DefaultBroadcaster$3.run()V\nJ  java.util.concurrent.FutureTask.run()V\nJ  java.util.concurrent.ThreadPoolExecutor.runWorker(Ljava/util/concurrent/ThreadPoolExecutor$Worker;)V\nj  java.util.concurrent.ThreadPoolExecutor$Worker.run()V+14\nj  java.lang.Thread.run()V+20\nv  ~StubRoutines::call_stub"}, {"attachment_id": null, "tags": [], "bug_id": 57521, "text": "I'm marking this as a duplicate as that looks to be the most likely cause based on the information in this thread.\n\nRegarding comment #9, that may be the same issue or it could be unrelated. If you still the the issue with the latest Tomcat Native 1.2.x, latest stable release of a supported Tomcat version and the latest Atmosphere release then please open a new issue and provide the simplest possible test case that reproduces the issue. Please also make sure you are using the JSR 356 WebSocket API, not the deprecated Tomcat WebSocket API.\n\n*** This bug has been marked as a duplicate of bug 51813 ***", "count": 10, "id": 200436, "time": "2017-08-24T08:30:21Z", "creator": "markt@apache.org", "creation_time": "2017-08-24T08:30:21Z", "is_private": false}]