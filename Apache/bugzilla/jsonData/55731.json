[{"count": 0, "tags": [], "bug_id": 55731, "attachment_id": 30989, "is_private": false, "id": 170955, "time": "2013-11-01T00:44:50Z", "creator": "eric@peters.org", "creation_time": "2013-11-01T00:44:50Z", "text": "Created attachment 30989\nStrip *<character> from Format String\n\nFrom: http://office.microsoft.com/en-us/excel-help/number-format-codes-HP005198679.aspx\n\n\"To repeat the next character in the format to fill the column width, include an asterisk (*) in the number format. For example, type 0*- to include enough dashes after a number to fill the cell, or type *0 before any format to include leading zeros.\"\n\nThis is a hack, but all of the tests currently pass with it (probably bad tests), it also fixes the issue I'm running into."}, {"count": 1, "tags": [], "bug_id": 55731, "text": "Here's some additional debug information: \n\n\nBasically,\nDataFormatter.cleanFormatForNumber(\"$\"* #,##0.00_);_(\"$\"* (#,##0.00)) => $#,##0.00;$(#,##0.00)\n\nstrips the *<space>\n\nBut\nDataFormatter.cleanFormatForNumber((_(* #,##0.00_);_(* (#,##0.00)) => * #,##0.00;* (#,##0.00)\n\nDoesn't & java.text.DecimalFormat will just reprint the *<space> out:\nscala> val format = new java.text.DecimalFormat(\"* #,##0.00;* (#,##0.00)\")\nformat: java.text.DecimalFormat = java.text.DecimalFormat@67a12\n\nscala> format.format(4.79d)\nres2: String = * 4.79\n\n\n\nA psuedo stack trace/debug statements:\n\n\n10:51:36.477 [main] DEBUG o.a.poi.ss.usermodel.DataFormatter - Enter DataFormatter.getFormat(4.79, 43, _(* #,##0.00_);_(* (#,##0.00);_(* \"-\"??_);_(@_))\n10:51:36.477 [main] DEBUG o.a.poi.ss.usermodel.DataFormatter - DataFormatter.getFormat(4.79, +43, _(* #,##0.00_);_(* (#,##0.00);_(* \"-\"??_);_(@_)), Target formatStr: _(* #,##0.00_);_(* (#,##0.00)\n10:51:36.477 [main] DEBUG o.a.poi.ss.usermodel.DataFormatter - Enter DataFormatter.createFormat(4.79, +43, _(* #,##0.00_);_(* (#,##0.00))\n10:51:36.477 [main] DEBUG o.a.poi.ss.usermodel.DataFormatter - Enter DataFormatter.createNumberFormat(_(* #,##0.00_);_(* (#,##0.00), +4.79)\n10:51:36.477 [main] DEBUG o.a.poi.ss.usermodel.DataFormatter - DataFormatter.createNumberFormat(_(* #,##0.00_);_(* (#,##0.00), +4.79): cleanFormatForNumber(formatStr) => * #,##0.00;* (#,##0.00)\n10:51:36.482 [main] TRACE fm.flatfile.excel.XLSStreamProcessor - ok numrec: [NUMBER]\n    .row    = 0x0000\n    .col    = 0x0000\n    .xfindex= 0x003E\n  .value= 4.79\n[/NUMBER]\n and formatListener.getFormatIndex(numrec): 43, formatListener.getFormatString(43): _(* #,##0.00_);_(* (#,##0.00);_(* \"-\"??_);_(@_), HSSFDataFormat.getBuiltinFormat(43): _(* #,##0.00_);_(* (#,##0.00);_(* \"-\"??_);_(@_), formatListener.formatNumberDateCell(numrec): * 4.79\n\n\n\n\n\n10:51:36.483 [main] DEBUG o.a.poi.ss.usermodel.DataFormatter - Enter DataFormatter.getFormat(4.79, 43, _(* #,##0.00_);_(* (#,##0.00);_(* \"-\"??_);_(@_))\n10:51:36.483 [main] DEBUG o.a.poi.ss.usermodel.DataFormatter - DataFormatter.getFormat(4.79, +43, _(* #,##0.00_);_(* (#,##0.00);_(* \"-\"??_);_(@_)), Target formatStr: _(* #,##0.00_);_(* (#,##0.00)\n10:51:36.484 [main] DEBUG o.a.poi.ss.usermodel.DataFormatter - Enter DataFormatter.getFormat(5.79, 44, _(\"$\"* #,##0.00_);_(\"$\"* (#,##0.00);_(\"$\"* \"-\"??_);_(@_))\n10:51:36.484 [main] DEBUG o.a.poi.ss.usermodel.DataFormatter - DataFormatter.getFormat(5.79, +44, _(\"$\"* #,##0.00_);_(\"$\"* (#,##0.00);_(\"$\"* \"-\"??_);_(@_)), Target formatStr: _(\"$\"* #,##0.00_);_(\"$\"* (#,##0.00)\n10:51:36.484 [main] DEBUG o.a.poi.ss.usermodel.DataFormatter - Enter DataFormatter.createFormat(5.79, +44, _(\"$\"* #,##0.00_);_(\"$\"* (#,##0.00))\n10:51:36.484 [main] DEBUG o.a.poi.ss.usermodel.DataFormatter - Enter DataFormatter.createNumberFormat(_(\"$\"* #,##0.00_);_(\"$\"* (#,##0.00), +5.79)\n10:51:36.485 [main] DEBUG o.a.poi.ss.usermodel.DataFormatter - DataFormatter.createNumberFormat(_(\"$\"* #,##0.00_);_(\"$\"* (#,##0.00), +5.79): cleanFormatForNumber(formatStr) => $#,##0.00;$(#,##0.00)\n10:51:36.485 [main] TRACE fm.flatfile.excel.XLSStreamProcessor - ok numrec: [NUMBER]\n    .row    = 0x0000\n    .col    = 0x0001\n    .xfindex= 0x003F\n  .value= 5.79\n[/NUMBER]\n and formatListener.getFormatIndex(numrec): 44, formatListener.getFormatString(44): _(\"$\"* #,##0.00_);_(\"$\"* (#,##0.00);_(\"$\"* \"-\"??_);_(@_), HSSFDataFormat.getBuiltinFormat(44): _(\"$\"* #,##0.00_);_(\"$\"* (#,##0.00);_(\"$\"* \"-\"??_);_(@_), formatListener.formatNumberDateCell(numrec): $5.79\n\n\n\n\nscala> val format = new java.text.DecimalFormat(\"* #,##0.00;* (#,##0.00)\")\nformat: java.text.DecimalFormat = java.text.DecimalFormat@67a12\n\nscala> format.format(4.79d)\nres2: String = * 4.79\n\nscala> \n\nscala> val format = new java.text.DecimalFormat(\"$#,##0.00;$(#,##0.00\")\nformat: java.text.DecimalFormat = java.text.DecimalFormat@67500\n\nscala> format.format(5.79d)\nres3: String = $5.79\n\nscala>", "id": 170963, "time": "2013-11-01T17:53:59Z", "creator": "eric@peters.org", "creation_time": "2013-11-01T17:53:59Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 55731, "attachment_id": 30991, "text": "Created attachment 30991\nFix StringBuilder logic in  DataFormatter.cleanFormatForNumber", "id": 170964, "time": "2013-11-01T18:39:46Z", "creator": "eric@peters.org", "creation_time": "2013-11-01T18:39:46Z", "is_private": false}, {"count": 3, "tags": [], "creator": "eric@peters.org", "attachment_id": 30992, "text": "Created attachment 30992\nFix StringBuilder logic in DataFormatter.cleanFormatForNumber\n\nRemoved the logger for simplicity, and the sb.length() tracking I was trying to do (it gets evaluated already for each for statement)", "id": 170970, "time": "2013-11-01T20:20:20Z", "bug_id": 55731, "creation_time": "2013-11-01T20:20:20Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 55731, "is_private": false, "text": "Created attachment 31149\nFix StringBuilder logic in  DataFormatter.cleanFormatForNumber\n\nSame patch, but this time marked as \"patch\" attachment so its easier to read/view changes in bugzilla", "id": 171904, "time": "2013-12-23T16:35:19Z", "creator": "eric@peters.org", "creation_time": "2013-12-23T16:35:19Z", "attachment_id": 31149}, {"count": 5, "tags": [], "creator": "yegor@dinom.ru", "attachment_id": null, "text": "Thanks for the patch, applied in r1553248\n\nYegor", "id": 171917, "time": "2013-12-24T06:03:15Z", "bug_id": 55731, "creation_time": "2013-12-24T06:03:15Z", "is_private": false}]