[{"count": 0, "tags": [], "bug_id": 49058, "attachment_id": null, "is_private": false, "id": 135914, "time": "2010-04-06T19:33:47Z", "creator": "jd@cpanel.net", "creation_time": "2010-04-06T19:33:47Z", "text": "This happens intermittently but frequently on my system.  During graceful restarts I see this message in the error log.\n\n[notice] Graceful restart requested, doing restart\n[error] (9)Bad file descriptor: apr_socket_accept:\n(client socket)\n\nThe server restarts properly.\n\nThe error message is coming from unixd_accept() and apparently the chain of events that leads to this is....\n\n1. main server gets graceful restart signal.\n2. main server signals child processes.\n3. main server initiates dummy connections to wake children.\n4. child wakes up for the dummy connection \n5. child gets signal for graceful restart and closes all of its listeners.\n6. child comes back from apr_pollset_poll with the socket for the dummy connection in pdesc.\n7. child calls lr->accept_func() and fails with the error message\n\nThe main problem seems to be that right after returning from apr_pollset_poll() in prefork.c, the child process has already set die_now and closed the listeners.\n\nSomewhere between apr_pollset_poll() and \"goto got_fd\" the child process needs to check die_now so that it doesn't attempt to accept on the closed socket."}, {"count": 1, "tags": [], "text": "Actually, putting the check before \"goto got_fd\" just tightens the race condition.  unixd_accept() should probably check if the server is shutting down when it fails and not log an error in this case.", "is_private": false, "id": 135915, "creator": "jd@cpanel.net", "time": "2010-04-06T19:50:18Z", "bug_id": 49058, "creation_time": "2010-04-06T19:50:18Z", "attachment_id": null}, {"count": 2, "tags": [], "text": "trunk has code for this situation, though it is only enabled for a certain Fujitsu mainframe platform.  Here is a patch for 2.2.x.  Does this resolve the error message for you?\n\nIndex: os/unix/unixd.c\n===================================================================\n--- os/unix/unixd.c\t(revision 923736)\n+++ os/unix/unixd.c\t(working copy)\n@@ -633,6 +633,12 @@\n             return APR_EGENERAL;\n #else\n         default:\n+            /* If the socket has been closed in ap_close_listeners()\n+             * by the restart/stop action, we may get EBADF.\n+             * Do not print an error in this case.\n+             */\n+            if (!lr->active && status == EBADF)\n+                return status;\n             ap_log_error(APLOG_MARK, APLOG_ERR, status, ap_server_conf,\n                          \"apr_socket_accept: (client socket)\");\n             return APR_EGENERAL;", "is_private": false, "id": 135973, "creator": "trawick@apache.org", "time": "2010-04-08T18:52:18Z", "bug_id": 49058, "creation_time": "2010-04-08T18:52:18Z", "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 49058, "attachment_id": null, "id": 135974, "time": "2010-04-08T19:36:37Z", "creator": "jd@cpanel.net", "creation_time": "2010-04-08T19:36:37Z", "is_private": false, "text": "Yes, that works perfectly."}, {"count": 4, "tags": [], "bug_id": 49058, "attachment_id": null, "id": 136094, "time": "2010-04-13T11:39:15Z", "creator": "trawick@apache.org", "creation_time": "2010-04-13T11:39:15Z", "is_private": false, "text": "Here's an updated 2.2.x patch based on what I committed to trunk:\n\nIndex: os/unix/unixd.c\n===================================================================\n--- os/unix/unixd.c\t(revision 933664)\n+++ os/unix/unixd.c\t(working copy)\n@@ -633,6 +633,15 @@\n             return APR_EGENERAL;\n #else\n         default:\n+            /* If the socket has been closed in ap_close_listeners()\n+             * by the restart/stop action, we may get EBADF.\n+             * Do not print an error in this case.\n+             */\n+            if (!lr->active) {\n+                ap_log_error(APLOG_MARK, APLOG_DEBUG, status, ap_server_conf,\n+                             \"apr_socket_accept failed for inactive listener\");\n+                return status;\n+            }\n             ap_log_error(APLOG_MARK, APLOG_ERR, status, ap_server_conf,\n                          \"apr_socket_accept: (client socket)\");\n             return APR_EGENERAL;\n\nIt can be noisier than the previous patch, as it writes a message at log level debug."}, {"count": 5, "text": "This issue was resolved as r589761 and r933657 and not backported to 2.2 yet.", "bug_id": 49058, "attachment_id": null, "id": 153794, "time": "2012-02-15T04:20:33Z", "creator": "takashi.asfbugzilla@tks.st", "creation_time": "2012-02-15T04:20:33Z", "tags": [], "is_private": false}]