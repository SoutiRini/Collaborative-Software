[{"count": 0, "tags": [], "bug_id": 54433, "attachment_id": null, "is_private": false, "id": 164665, "time": "2013-01-16T13:07:53Z", "creator": "Craig@Stoss.ca", "creation_time": "2013-01-16T13:07:53Z", "text": "Attempting to transform all XSLFShapes to PNGs using PPTX2PNG as an example I used this modified code:\n\n        XMLSlideShow ppt = new XMLSlideShow(OPCPackage.open(file));\n\n        Dimension pgsize = ppt.getPageSize();\n        int width = (int) (pgsize.width * scale);\n        int height = (int) (pgsize.height * scale);\n\n        XSLFSlide[] slide = ppt.getSlides();\n        for (int i = 0; i < slide.length; i++) {\n            if (slidenum != -1 && slidenum != (i + 1)) continue;\n\n            String title = slide[i].getTitle();\n            System.out.println(\"Rendering slide \" + (i + 1) + (title == null ? \"\" : \": \" + title));\n\n            XSLFShape[] pdps = slide[i].getShapes();\n            int count = 0;\n\t\t\t for(XSLFShape pdp : pdps){\n\t            BufferedImage img = new BufferedImage(width, height, BufferedImage.TYPE_INT_RGB);\n\t            Graphics2D graphics = img.createGraphics();\n\t\n\t            // default rendering options\n\t            graphics.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);\n\t            graphics.setRenderingHint(RenderingHints.KEY_RENDERING, RenderingHints.VALUE_RENDER_QUALITY);\n\t            graphics.setRenderingHint(RenderingHints.KEY_INTERPOLATION, RenderingHints.VALUE_INTERPOLATION_BICUBIC);\n\t            graphics.setRenderingHint(RenderingHints.KEY_FRACTIONALMETRICS, RenderingHints.VALUE_FRACTIONALMETRICS_ON);\n\t\n\t            graphics.setColor(Color.BLUE);\n\t            graphics.clearRect(0, 0, width, height);\n\t\n\t            graphics.scale(scale, scale);\n\t\n\t           graphics.getTransform().setToIdentity();\n\t            // draw stuff\n\t           \n\t           // save the result\n\t            int sep = file.lastIndexOf(\".\");\n\t            String fname = file.substring(0, sep == -1 ? file.length() : sep) + \"-\" + (i + 1) +\"_\"+ count++ + \".png\";\n\t            pdp.draw(graphics);\n\t            FileOutputStream out = new FileOutputStream(fname);\n\t        \n\t            ImageIO.write(img, \"png\", out);\n\t            out.close();\n\t\t\t}\n\nWhen pdp instanceof XSLFGroupShape is true, I receive:\nException in thread \"main\" java.lang.NullPointerException\n\tat java.awt.geom.AffineTransform.<init>(Unknown Source)\n\tat org.apache.poi.xslf.usermodel.XSLFGroupShape.draw(XSLFGroupShape.java:296)\n...\n\nAs far as I can tell this is a bug. I cannot find the Null Object that is being used."}, {"count": 1, "attachment_id": null, "bug_id": 54433, "text": "try to add the following line before drawing:\n\ngraphics.setRenderingHint(XSLFRenderingHint.GROUP_TRANSFORM, new AffineTransform());\n\nP.S. graphics.getTransform() returns a copy of the current transform and \ngraphics.getTransform().setToIdentity() has no effect in your code. The correct code is to get, modify and set:\n\nAffineTransform at  = graphics.getTransform();\nat.setToIdentity(); \ngraphics.setTransform(at);", "id": 164666, "time": "2013-01-16T13:27:58Z", "creator": "yegor@dinom.ru", "creation_time": "2013-01-16T13:27:58Z", "tags": [], "is_private": false}, {"count": 2, "tags": [], "bug_id": 54433, "text": "Unless I am missing something obvious, that doesn't seem to change the behaviour.\n\n\t            // default rendering options\n\t            graphics.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);\n\t            graphics.setRenderingHint(RenderingHints.KEY_RENDERING, RenderingHints.VALUE_RENDER_QUALITY);\n\t            graphics.setRenderingHint(RenderingHints.KEY_INTERPOLATION, RenderingHints.VALUE_INTERPOLATION_BICUBIC);\n\t            graphics.setRenderingHint(RenderingHints.KEY_FRACTIONALMETRICS, RenderingHints.VALUE_FRACTIONALMETRICS_ON);\n\t            graphics.setRenderingHint(XSLFRenderingHint.GROUP_TRANSFORM ,graphics.getTransform());\n\t            graphics.setColor(Color.BLUE);\n\t            graphics.clearRect(0, 0, width, height);\t\n\t            graphics.scale(scale, scale);\n\t            pdp.draw(graphics);\n\nAppreciate the mention of the graphics.getTransform().setToIdentity(); line. I was just trying to print/modify various attributes to see what perhaps the NPE was referencing.", "id": 164674, "time": "2013-01-16T15:58:01Z", "creator": "Craig@Stoss.ca", "creation_time": "2013-01-16T15:58:01Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "text": "Apologies, ignore that previous comment code... my code matches yours, I must have had copy/paste mistake:\n\n\t            // default rendering options\n\t            graphics.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);\n\t            graphics.setRenderingHint(RenderingHints.KEY_RENDERING, RenderingHints.VALUE_RENDER_QUALITY);\n\t            graphics.setRenderingHint(RenderingHints.KEY_INTERPOLATION, RenderingHints.VALUE_INTERPOLATION_BICUBIC);\n\t            graphics.setRenderingHint(RenderingHints.KEY_FRACTIONALMETRICS, RenderingHints.VALUE_FRACTIONALMETRICS_ON);\n\t            graphics.setRenderingHint(XSLFRenderingHint.GROUP_TRANSFORM ,new AffineTransform());\n\t            graphics.setColor(Color.BLUE);\n\t            graphics.clearRect(0, 0, width, height);\t\n\t            graphics.scale(scale, scale);\n\t            pdp.draw(graphics);", "is_private": false, "id": 164675, "creator": "Craig@Stoss.ca", "time": "2013-01-16T15:59:30Z", "bug_id": 54433, "creation_time": "2013-01-16T15:59:30Z", "attachment_id": null}]