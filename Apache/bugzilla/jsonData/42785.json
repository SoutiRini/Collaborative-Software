[{"count": 0, "tags": [], "creator": "max@berger.name", "attachment_id": null, "id": 104944, "time": "2007-06-30T08:05:21Z", "bug_id": 42785, "creation_time": "2007-06-30T08:05:21Z", "is_private": false, "text": "This patch adds support for image plugins to define their baseline-shift. Please note:\nThis may break existing image plugins, but recompilaton should be sufficient."}, {"count": 1, "tags": [], "creator": "max@berger.name", "text": "Created attachment 20424\nbaselineshift patch\n\nThe actual patch file", "id": 104945, "time": "2007-06-30T08:06:18Z", "bug_id": 42785, "creation_time": "2007-06-30T08:06:18Z", "is_private": false, "attachment_id": 20424}, {"count": 2, "tags": [], "text": "Some other comments while I am at it:\n\nExternal graphic dimensions are specified in millipoints (int), where as inline-graphics are specified in pts (float). I have followed the same pattern for this patch, but find it quite inconsitent.", "attachment_id": null, "bug_id": 42785, "id": 104946, "time": "2007-06-30T08:13:17Z", "creator": "max@berger.name", "creation_time": "2007-06-30T08:13:17Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 42785, "attachment_id": null, "text": "(In reply to comment #2)\n\nHi Max,\n\nThanks for your patch. However, I'm slightly reluctant to apply it as \nis. I have a few questions:\n- I can understand the need for an intrinsic baseline-shift for images, \n  especially if the image represents, say, a mathematical formula... \n  That said, in plain FO I think I would use the alignment-adjust \n  property (XSL-FO 1.1, 7.14.1). Now I easily understand that it would \n  be difficult to store this information separately from the image but, \n  still, shouldn't the image have an intrinsic alignment-adjust instead? \n  The description of alignment-adjust says that this property especially \n  applies to images which lack of a baseline-table. Whereas \n  baseline-shift recreates a whole baseline-table for the area. Granted, \n  this doesn't change many things but I think it would be more \n  consistent.\n- IIC, the intrinsic baseline-shift may only be a length? Isn't that \n  limiting? If the image is scaled for whatever reason, then the length \n  no longer makes sense. A percentage would probably be more robust. \n  Especially if it's expressed in terms of the image's height. And guess \n  what, that's exactly the case with alignment-adjust.\n  BTW, percentages are the reason why the other FOs return a Length \n  object for their baseline-shift.\n\n> Some other comments while I am at it:\n> \n> External graphic dimensions are specified in millipoints (int), where \n> as inline-graphics are specified in pts (float). I have followed the \n> same pattern for this patch, but find it quite inconsitent.\n\nI'm not sure of what you are referring to? For both ExternalGraphic and \nInstreamForeignObject the intrinsic dimensions are specified in \nmillipoints.\n\nWDYT?\nThanks,\nVincent\n", "id": 105081, "time": "2007-07-05T01:41:43Z", "creator": "vhennebert@gmail.com", "creation_time": "2007-07-05T01:41:43Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 42785, "attachment_id": null, "text": "Vincent,\n\n1) you are right, alignment-adjust seems a better attribute to use. I did some\ntests with the foprep application (JEuclids MathML in FO preprocessor), and\nusing percentage values here seems to work fine.\n\n2) I also have the feeling that I need to set \"alignment-baseline\" to\n\"alphabetic\" as well (in the case of Math, but have it settable by the plugin),\nbut i am not sure about this, as I have no experience with non-latin languages,\nand even less with non-latin languages and Math.\n\n3) If i read the spec correctly, the values of baseline-shift and\nalignment-adjust are in the opposite direction: So far I had to use a negative\nbaseline-shift, and i should use a positive alignment-adjust (my understanding\nof the spec). However, during my tests I had to use a negative alignment-adjust,\nsuggesting that fop has a bug here. This needs further investigation.\n\n4) The pt. vs. millipoint: What I was referring to is:\norg/apache/fop/fo/flow/InstreamForeignObject.java and\norg/apache/fop/fo/XMLObj,\nwhich store dimensions using float in pt., where as\norg/apache/fop/fo/flow/ExternalGraphic.java \nstores dimensions in \"int\" in millipoints. \nBoth are fine with me, however, I think this is inconsistent and should be\nunified rather sooner than later. However, changing this will definitely break\nplugins, so it should be done as soon as possible!", "id": 105140, "time": "2007-07-06T05:58:43Z", "creator": "max@berger.name", "creation_time": "2007-07-06T05:58:43Z", "is_private": false}, {"count": 5, "tags": [], "creator": "max@berger.name", "attachment_id": null, "id": 105142, "time": "2007-07-06T06:34:13Z", "bug_id": 42785, "creation_time": "2007-07-06T06:34:13Z", "is_private": false, "text": "and yet another question:\n\n5) when overwriting alignment adjust, there are two possibilities:\na) Retrieve set (from .fo file) alignment adjust, and add image-intrinsic\nalignment-adjust\nb) retrieve set alignment adjust. If it is auto (default if not set), then use\nimage-intrinsic alignment-adjust, otherwise use the one given from the user\n\nI think b makes more sense, as the user will be able to explicitly overwrite the\nautomatic calculated alignment adjust. However, this behavior may be a little\nirritating, as specifying a value at all (e.g. 0pt instead of auto) will already\nmake a difference."}, {"count": 6, "tags": [], "text": "Created attachment 20475\nUpdated patch which uses alignment-adjust", "attachment_id": 20475, "bug_id": 42785, "id": 105171, "time": "2007-07-07T07:02:30Z", "creator": "max@berger.name", "creation_time": "2007-07-07T07:02:30Z", "is_private": false}, {"count": 7, "tags": [], "creator": "max@berger.name", "attachment_id": null, "id": 105172, "time": "2007-07-07T07:05:44Z", "bug_id": 42785, "creation_time": "2007-07-07T07:05:44Z", "is_private": false, "text": "If updated the patch to use alignment-adjust instead of baseline-shift, as this is indeed a better solution.\n\nin reply to my own comments:\n1) done\n2) this  defaults to baseline, which is good enough for my use.\n3) I misread the spec. It was just unclearly written.\n4) The issue still stands, for the patch I've used length exclusively, which does not have this problem\n5) Strategy b) is used."}, {"count": 8, "tags": [], "text": "Looked OK to me, so patch applied.\n\nsee: http://svn.apache.org/viewvc?view=rev&rev=554423\n\nThanks for the contribution!", "attachment_id": null, "bug_id": 42785, "id": 105190, "time": "2007-07-08T12:49:57Z", "creator": "adelmelle@apache.org", "creation_time": "2007-07-08T12:49:57Z", "is_private": false}, {"count": 9, "tags": [], "creator": "gadams@apache.org", "text": "batch transition pre-FOP1.0 resolved+fixed bugs to closed+fixed", "id": 155994, "time": "2012-04-01T06:51:57Z", "bug_id": 42785, "creation_time": "2012-04-01T06:51:57Z", "is_private": false, "attachment_id": null}]