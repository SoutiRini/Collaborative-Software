[{"count": 0, "tags": [], "bug_id": 54150, "text": "Found while debugging version 7.0.29\n\nI found that our SlowQueryReportJmx mbean was not being deregistered during webapp shutdown.  I tracked this down to a NPE.  The interceptor properties are not being set (as is done in setupConnection) prior to the pool close callback.\n\nConnectionPool.close(boolean) poolClosed callback produces NPE in SlowQueryReportJmx.\n{code}\n        PoolProperties.InterceptorDefinition[] proxies = getPoolProperties().getJdbcInterceptorsAsArray();\n        for (int i=0; i<proxies.length; i++) {\n            try {\n                proxies[i].getInterceptorClass().newInstance().poolClosed(this);\n            }catch (Exception x) {\n                log.debug(\"Unable to inform interceptor of pool closure.\",x);\n            }\n        }\n...\n{code}\n\nNPE in SlowQueryReportJmx - null.containsKey\n\n{code}\n    public ObjectName getObjectName(Class<?> clazz, String poolName) throws MalformedObjectNameException {\n... NPE\n        if (getProperties().containsKey(objectNameAttribute)) {\n...\n{code}\n\nSounds reasonable to set properties any time you need to instantiate interceptors.\nAs is done in ConnectionPool.init(PoolConfiguration)\n\n{code}\n                JdbcInterceptor interceptor = proxies[i].getInterceptorClass().newInstance();\n                interceptor.setProperties(proxies[i].getProperties());\n                interceptor.poolStarted(this);\n{code}", "id": 163461, "attachment_id": null, "creator": "alexfranken@gmail.com", "creation_time": "2012-11-15T18:38:29Z", "time": "2012-11-15T18:38:29Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 54150, "is_private": false, "id": 163817, "creation_time": "2012-12-04T06:09:51Z", "time": "2012-12-04T06:09:51Z", "creator": "kfujino@apache.org", "text": "Thanks for the report.\nFixed in trunk and 7.0.x and will be included in 7.0.34 onwards.", "attachment_id": null}]